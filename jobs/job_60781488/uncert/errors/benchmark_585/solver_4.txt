Input TRS:
    1: a__a() -> a__c()
    2: a__b() -> a__c()
    3: a__c() -> e()
    4: a__k() -> l()
    5: a__d() -> m()
    6: a__a() -> a__d()
    7: a__b() -> a__d()
    8: a__c() -> l()
    9: a__k() -> m()
    10: a__A() -> a__h(a__f(a__a()),a__f(a__b()))
    11: a__h(X,X) -> a__g(mark(X),mark(X),a__f(a__k()))
    12: a__g(d(),X,X) -> a__A()
    13: a__f(X) -> a__z(mark(X),X)
    14: a__z(e(),X) -> mark(X)
    15: mark(A()) -> a__A()
    16: mark(a()) -> a__a()
    17: mark(b()) -> a__b()
    18: mark(c()) -> a__c()
    19: mark(d()) -> a__d()
    20: mark(k()) -> a__k()
    21: mark(z(X1,X2)) -> a__z(mark(X1),X2)
    22: mark(f(X)) -> a__f(mark(X))
    23: mark(h(X1,X2)) -> a__h(mark(X1),mark(X2))
    24: mark(g(X1,X2,X3)) -> a__g(mark(X1),mark(X2),mark(X3))
    25: mark(e()) -> e()
    26: mark(l()) -> l()
    27: mark(m()) -> m()
    28: a__A() -> A()
    29: a__a() -> a()
    30: a__b() -> b()
    31: a__c() -> c()
    32: a__d() -> d()
    33: a__k() -> k()
    34: a__z(X1,X2) -> z(X1,X2)
    35: a__f(X) -> f(X)
    36: a__h(X1,X2) -> h(X1,X2)
    37: a__g(X1,X2,X3) -> g(X1,X2,X3)
Number of strict rules: 37
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #a__b() -> #a__c()
   #2: #a__a() -> #a__d()
   #3: #a__f(X) -> #a__z(mark(X),X)
   #4: #a__f(X) -> #mark(X)
   #5: #a__h(X,X) -> #a__g(mark(X),mark(X),a__f(a__k()))
   #6: #a__h(X,X) -> #mark(X)
   #7: #a__h(X,X) -> #mark(X)
   #8: #a__h(X,X) -> #a__f(a__k())
   #9: #a__h(X,X) -> #a__k()
   #10: #mark(g(X1,X2,X3)) -> #a__g(mark(X1),mark(X2),mark(X3))
   #11: #mark(g(X1,X2,X3)) -> #mark(X1)
   #12: #mark(g(X1,X2,X3)) -> #mark(X2)
   #13: #mark(g(X1,X2,X3)) -> #mark(X3)
   #14: #mark(h(X1,X2)) -> #a__h(mark(X1),mark(X2))
   #15: #mark(h(X1,X2)) -> #mark(X1)
   #16: #mark(h(X1,X2)) -> #mark(X2)
   #17: #a__g(d(),X,X) -> #a__A()
   #18: #a__z(e(),X) -> #mark(X)
   #19: #mark(k()) -> #a__k()
   #20: #a__b() -> #a__d()
   #21: #a__A() -> #a__h(a__f(a__a()),a__f(a__b()))
   #22: #a__A() -> #a__f(a__a())
   #23: #a__A() -> #a__a()
   #24: #a__A() -> #a__f(a__b())
   #25: #a__A() -> #a__b()
   #26: #mark(f(X)) -> #a__f(mark(X))
   #27: #mark(f(X)) -> #mark(X)
   #28: #mark(b()) -> #a__b()
   #29: #mark(d()) -> #a__d()
   #30: #mark(z(X1,X2)) -> #a__z(mark(X1),X2)
   #31: #mark(z(X1,X2)) -> #mark(X1)
   #32: #mark(a()) -> #a__a()
   #33: #a__a() -> #a__c()
   #34: #mark(A()) -> #a__A()
   #35: #mark(c()) -> #a__c()
Number of SCCs: 1, DPs: 23, edges: 158
	SCC { #3..8 #10..18 #21 #22 #24 #26 #27 #30 #31 #34 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... succeeded.
     a()	weight: 0
     h(x1,x2)	weight: max{(/ 3 4) + x2, (/ 5 8) + x1}
  a__g(x1,x2,x3)	weight: max{(/ 1 2) + x3, (/ 5 8) + x2, (/ 3 4) + x1}
#a__c()	weight: 0
     d()	weight: 0
  a__h(x1,x2)	weight: max{(/ 3 4) + x2, (/ 5 8) + x1}
     z(x1,x2)	weight: max{x2, x1}
     b()	weight: 0
  a__b()	weight: 0
#a__g(x1,x2,x3)	weight: max{0, (/ 1 2) + x2}
  a__a()	weight: 0
#a__k()	weight: 0
  a__f(x1)	weight: x1
#a__d()	weight: 0
     k()	weight: (/ 1 4)
  a__k()	weight: (/ 1 4)
  a__z(x1,x2)	weight: max{x2, x1}
     l()	weight: 0
  a__A()	weight: (/ 3 4)
     c()	weight: 0
#a__b()	weight: 0
#a__h(x1,x2)	weight: max{0, (/ 1 2) + x2}
     f(x1)	weight: x1
#mark(x1)	weight: (/ 1 8) + x1
     A()	weight: (/ 3 4)
#a__a()	weight: 0
  mark(x1)	weight: x1
#a__A()	weight: (/ 1 2)
#a__z(x1,x2)	weight: max{0, (/ 1 8) + x2}
     e()	weight: 0
  a__d()	weight: 0
#a__f(x1)	weight: (/ 1 8) + x1
     g(x1,x2,x3)	weight: max{(/ 1 2) + x3, (/ 5 8) + x2, (/ 3 4) + x1}
  a__c()	weight: 0
     m()	weight: 0
    Usable rules: { 1..37 }
    Removed DPs: #6..8 #10..16 #22 #24 #34
Number of SCCs: 2, DPs: 10, edges: 23
	SCC { #5 #17 #21 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
