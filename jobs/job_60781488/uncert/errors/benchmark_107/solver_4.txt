Input TRS:
    1: app(app(map(),f),nil()) -> nil()
    2: app(app(map(),f),app(app(cons(),x),xs)) -> app(app(cons(),app(f,x)),app(app(map(),f),xs))
    3: app(sum(),app(app(cons(),x),xs)) -> app(app(plus(),x),app(sum(),xs))
    4: app(size(),app(app(node(),x),xs)) -> app(s(),app(sum(),app(app(map(),size()),xs)))
    5: app(app(plus(),0()),x) -> 0()
    6: app(app(plus(),app(s(),x)),y) -> app(s(),app(app(plus(),x),y))
Number of strict rules: 6
Direct Order(PosReal,>,Poly) ... failed.
Freezing app
1: app❆2_map(f,nil()) -> nil()
2: app❆2_map(f,app❆2_cons(x,xs)) -> app❆2_cons(app(f,x),app❆2_map(f,xs))
3: app❆1_sum(app❆2_cons(x,xs)) -> app❆2_plus(x,app❆1_sum(xs))
4: app❆1_size(app❆2_node(x,xs)) -> app❆1_s(app❆1_sum(app❆2_map(size(),xs)))
5: app❆2_plus(0(),x) -> 0()
6: app❆2_plus(app❆1_s(x),y) -> app❆1_s(app❆2_plus(x,y))
7: app(plus(),_1) ->= app❆1_plus(_1)
8: app(app❆1_plus(_1),_2) ->= app❆2_plus(_1,_2)
9: app(cons(),_1) ->= app❆1_cons(_1)
10: app(app❆1_cons(_1),_2) ->= app❆2_cons(_1,_2)
11: app(s(),_1) ->= app❆1_s(_1)
12: app(map(),_1) ->= app❆1_map(_1)
13: app(app❆1_map(_1),_2) ->= app❆2_map(_1,_2)
14: app(node(),_1) ->= app❆1_node(_1)
15: app(app❆1_node(_1),_2) ->= app❆2_node(_1,_2)
16: app(sum(),_1) ->= app❆1_sum(_1)
17: app(size(),_1) ->= app❆1_size(_1)
Number of strict rules: 6
Direct Order(PosReal,>,Poly) ... failed.
Dependency Pairs:
   #1: #app❆2_map(f,app❆2_cons(x,xs)) -> #app(f,x)
   #2: #app❆2_map(f,app❆2_cons(x,xs)) -> #app❆2_map(f,xs)
   #3: #app❆2_plus(app❆1_s(x),y) -> #app❆2_plus(x,y)
   #4: #app(app❆1_map(_1),_2) ->? #app❆2_map(_1,_2)
   #5: #app(size(),_1) ->? #app❆1_size(_1)
   #6: #app(sum(),_1) ->? #app❆1_sum(_1)
   #7: #app❆1_sum(app❆2_cons(x,xs)) -> #app❆2_plus(x,app❆1_sum(xs))
   #8: #app❆1_sum(app❆2_cons(x,xs)) -> #app❆1_sum(xs)
   #9: #app(app❆1_plus(_1),_2) ->? #app❆2_plus(_1,_2)
   #10: #app❆1_size(app❆2_node(x,xs)) -> #app❆1_sum(app❆2_map(size(),xs))
   #11: #app❆1_size(app❆2_node(x,xs)) -> #app❆2_map(size(),xs)
Number of SCCs: 3, DPs: 7, edges: 11
	SCC { #8 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
app❆1_node(x1)	weight: 0
#app❆2_map(x1,x2)	weight: 0
app❆1_sum(x1)	weight: 0
     s()	weight: 0
app❆1_map(x1)	weight: 0
app❆1_plus(x1)	weight: 0
app❆1_size(x1)	weight: 0
app❆2_plus(x1,x2)	weight: 0
app❆2_map(x1,x2)	weight: 0
#app❆1_sum(x1)	weight: x1
   sum()	weight: 0
     0()	weight: 0
#app❆2_plus(x1,x2)	weight: 0
   nil()	weight: 0
 #app(x1,x2)	weight: 0
   map()	weight: 0
app❆2_node(x1,x2)	weight: 0
  plus()	weight: 0
  cons()	weight: 0
app❆2_cons(x1,x2)	weight: (/ 1 2) + x2
app❆1_s(x1)	weight: 0
app❆1_cons(x1)	weight: 0
  node()	weight: 0
  size()	weight: 0
#app❆1_size(x1)	weight: 0
   app(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #8
Number of SCCs: 2, DPs: 6, edges: 10
	SCC { #3 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
app❆1_node(x1)	weight: 0
#app❆2_map(x1,x2)	weight: 0
app❆1_sum(x1)	weight: 0
     s()	weight: 0
app❆1_map(x1)	weight: 0
app❆1_plus(x1)	weight: 0
app❆1_size(x1)	weight: 0
app❆2_plus(x1,x2)	weight: 0
app❆2_map(x1,x2)	weight: 0
#app❆1_sum(x1)	weight: 0
   sum()	weight: 0
     0()	weight: 0
#app❆2_plus(x1,x2)	weight: x1
   nil()	weight: 0
 #app(x1,x2)	weight: 0
   map()	weight: 0
app❆2_node(x1,x2)	weight: 0
  plus()	weight: 0
  cons()	weight: 0
app❆2_cons(x1,x2)	weight: (/ 1 2)
app❆1_s(x1)	weight: (/ 1 2) + x1
app❆1_cons(x1)	weight: 0
  node()	weight: 0
  size()	weight: 0
#app❆1_size(x1)	weight: 0
   app(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #3
Number of SCCs: 1, DPs: 5, edges: 9
	SCC { #1 #2 #4 #5 #11 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
app❆1_node(x1)	weight: 0
#app❆2_map(x1,x2)	weight: x1
app❆1_sum(x1)	weight: 0
     s()	weight: 0
app❆1_map(x1)	weight: (/ 1 2) + x1
app❆1_plus(x1)	weight: 0
app❆1_size(x1)	weight: 0
app❆2_plus(x1,x2)	weight: 0
app❆2_map(x1,x2)	weight: 0
#app❆1_sum(x1)	weight: 0
   sum()	weight: 0
     0()	weight: 0
#app❆2_plus(x1,x2)	weight: 0
   nil()	weight: 0
 #app(x1,x2)	weight: x1
   map()	weight: 0
app❆2_node(x1,x2)	weight: (/ 1 2)
  plus()	weight: 0
  cons()	weight: 0
app❆2_cons(x1,x2)	weight: (/ 1 2)
app❆1_s(x1)	weight: (/ 1 2)
app❆1_cons(x1)	weight: 0
  node()	weight: 0
  size()	weight: 0
#app❆1_size(x1)	weight: 0
   app(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #4
Number of SCCs: 1, DPs: 4, edges: 6
	SCC { #1 #2 #5 #11 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
app❆1_node(x1)	weight: 0
#app❆2_map(x1,x2)	weight: x2
app❆1_sum(x1)	weight: 0
     s()	weight: 0
app❆1_map(x1)	weight: (/ 1 4)
app❆1_plus(x1)	weight: 0
app❆1_size(x1)	weight: 0
app❆2_plus(x1,x2)	weight: 0
app❆2_map(x1,x2)	weight: 0
#app❆1_sum(x1)	weight: 0
   sum()	weight: 0
     0()	weight: 0
#app❆2_plus(x1,x2)	weight: 0
   nil()	weight: 0
 #app(x1,x2)	weight: (/ 1 4) + x2
   map()	weight: 0
app❆2_node(x1,x2)	weight: (/ 1 4) + x2
  plus()	weight: 0
  cons()	weight: 0
app❆2_cons(x1,x2)	weight: (/ 1 2) + x1 + x2
app❆1_s(x1)	weight: (/ 1 4)
app❆1_cons(x1)	weight: 0
  node()	weight: 0
  size()	weight: 0
#app❆1_size(x1)	weight: x1
   app(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #1 #2 #5 #11
Number of SCCs: 0, DPs: 0, edges: 0
