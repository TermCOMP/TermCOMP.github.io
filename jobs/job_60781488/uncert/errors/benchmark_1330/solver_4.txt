Input TRS:
    1: __(__(X,Y),Z) -> __(X,__(Y,Z))
    2: __(X,nil()) -> X
    3: __(nil(),X) -> X
    4: U11(tt(),V) -> U12(isPalListKind(activate(V)),activate(V))
    5: U12(tt(),V) -> U13(isNeList(activate(V)))
    6: U13(tt()) -> tt()
    7: U21(tt(),V1,V2) -> U22(isPalListKind(activate(V1)),activate(V1),activate(V2))
    8: U22(tt(),V1,V2) -> U23(isPalListKind(activate(V2)),activate(V1),activate(V2))
    9: U23(tt(),V1,V2) -> U24(isPalListKind(activate(V2)),activate(V1),activate(V2))
    10: U24(tt(),V1,V2) -> U25(isList(activate(V1)),activate(V2))
    11: U25(tt(),V2) -> U26(isList(activate(V2)))
    12: U26(tt()) -> tt()
    13: U31(tt(),V) -> U32(isPalListKind(activate(V)),activate(V))
    14: U32(tt(),V) -> U33(isQid(activate(V)))
    15: U33(tt()) -> tt()
    16: U41(tt(),V1,V2) -> U42(isPalListKind(activate(V1)),activate(V1),activate(V2))
    17: U42(tt(),V1,V2) -> U43(isPalListKind(activate(V2)),activate(V1),activate(V2))
    18: U43(tt(),V1,V2) -> U44(isPalListKind(activate(V2)),activate(V1),activate(V2))
    19: U44(tt(),V1,V2) -> U45(isList(activate(V1)),activate(V2))
    20: U45(tt(),V2) -> U46(isNeList(activate(V2)))
    21: U46(tt()) -> tt()
    22: U51(tt(),V1,V2) -> U52(isPalListKind(activate(V1)),activate(V1),activate(V2))
    23: U52(tt(),V1,V2) -> U53(isPalListKind(activate(V2)),activate(V1),activate(V2))
    24: U53(tt(),V1,V2) -> U54(isPalListKind(activate(V2)),activate(V1),activate(V2))
    25: U54(tt(),V1,V2) -> U55(isNeList(activate(V1)),activate(V2))
    26: U55(tt(),V2) -> U56(isList(activate(V2)))
    27: U56(tt()) -> tt()
    28: U61(tt(),V) -> U62(isPalListKind(activate(V)),activate(V))
    29: U62(tt(),V) -> U63(isQid(activate(V)))
    30: U63(tt()) -> tt()
    31: U71(tt(),I,P) -> U72(isPalListKind(activate(I)),activate(P))
    32: U72(tt(),P) -> U73(isPal(activate(P)),activate(P))
    33: U73(tt(),P) -> U74(isPalListKind(activate(P)))
    34: U74(tt()) -> tt()
    35: U81(tt(),V) -> U82(isPalListKind(activate(V)),activate(V))
    36: U82(tt(),V) -> U83(isNePal(activate(V)))
    37: U83(tt()) -> tt()
    38: U91(tt(),V2) -> U92(isPalListKind(activate(V2)))
    39: U92(tt()) -> tt()
    40: isList(V) -> U11(isPalListKind(activate(V)),activate(V))
    41: isList(n__nil()) -> tt()
    42: isList(n____(V1,V2)) -> U21(isPalListKind(activate(V1)),activate(V1),activate(V2))
    43: isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
    44: isNeList(n____(V1,V2)) -> U41(isPalListKind(activate(V1)),activate(V1),activate(V2))
    45: isNeList(n____(V1,V2)) -> U51(isPalListKind(activate(V1)),activate(V1),activate(V2))
    46: isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
    47: isNePal(n____(I,n____(P,I))) -> U71(isQid(activate(I)),activate(I),activate(P))
    48: isPal(V) -> U81(isPalListKind(activate(V)),activate(V))
    49: isPal(n__nil()) -> tt()
    50: isPalListKind(n__a()) -> tt()
    51: isPalListKind(n__e()) -> tt()
    52: isPalListKind(n__i()) -> tt()
    53: isPalListKind(n__nil()) -> tt()
    54: isPalListKind(n__o()) -> tt()
    55: isPalListKind(n__u()) -> tt()
    56: isPalListKind(n____(V1,V2)) -> U91(isPalListKind(activate(V1)),activate(V2))
    57: isQid(n__a()) -> tt()
    58: isQid(n__e()) -> tt()
    59: isQid(n__i()) -> tt()
    60: isQid(n__o()) -> tt()
    61: isQid(n__u()) -> tt()
    62: nil() -> n__nil()
    63: __(X1,X2) -> n____(X1,X2)
    64: a() -> n__a()
    65: e() -> n__e()
    66: i() -> n__i()
    67: o() -> n__o()
    68: u() -> n__u()
    69: activate(n__nil()) -> nil()
    70: activate(n____(X1,X2)) -> __(activate(X1),activate(X2))
    71: activate(n__a()) -> a()
    72: activate(n__e()) -> e()
    73: activate(n__i()) -> i()
    74: activate(n__o()) -> o()
    75: activate(n__u()) -> u()
    76: activate(X) -> X
Number of strict rules: 76
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #isNeList(V) -> #U31(isPalListKind(activate(V)),activate(V))
   #2: #isNeList(V) -> #isPalListKind(activate(V))
   #3: #isNeList(V) -> #activate(V)
   #4: #isNeList(V) -> #activate(V)
   #5: #U62(tt(),V) -> #U63(isQid(activate(V)))
   #6: #U62(tt(),V) -> #isQid(activate(V))
   #7: #U62(tt(),V) -> #activate(V)
   #8: #U81(tt(),V) -> #U82(isPalListKind(activate(V)),activate(V))
   #9: #U81(tt(),V) -> #isPalListKind(activate(V))
   #10: #U81(tt(),V) -> #activate(V)
   #11: #U81(tt(),V) -> #activate(V)
   #12: #isNePal(V) -> #U61(isPalListKind(activate(V)),activate(V))
   #13: #isNePal(V) -> #isPalListKind(activate(V))
   #14: #isNePal(V) -> #activate(V)
   #15: #isNePal(V) -> #activate(V)
   #16: #isList(n____(V1,V2)) -> #U21(isPalListKind(activate(V1)),activate(V1),activate(V2))
   #17: #isList(n____(V1,V2)) -> #isPalListKind(activate(V1))
   #18: #isList(n____(V1,V2)) -> #activate(V1)
   #19: #isList(n____(V1,V2)) -> #activate(V1)
   #20: #isList(n____(V1,V2)) -> #activate(V2)
   #21: #activate(n__i()) -> #i()
   #22: #isNePal(n____(I,n____(P,I))) -> #U71(isQid(activate(I)),activate(I),activate(P))
   #23: #isNePal(n____(I,n____(P,I))) -> #isQid(activate(I))
   #24: #isNePal(n____(I,n____(P,I))) -> #activate(I)
   #25: #isNePal(n____(I,n____(P,I))) -> #activate(I)
   #26: #isNePal(n____(I,n____(P,I))) -> #activate(P)
   #27: #activate(n__a()) -> #a()
   #28: #isPal(V) -> #U81(isPalListKind(activate(V)),activate(V))
   #29: #isPal(V) -> #isPalListKind(activate(V))
   #30: #isPal(V) -> #activate(V)
   #31: #isPal(V) -> #activate(V)
   #32: #activate(n__u()) -> #u()
   #33: #activate(n__o()) -> #o()
   #34: #U91(tt(),V2) -> #U92(isPalListKind(activate(V2)))
   #35: #U91(tt(),V2) -> #isPalListKind(activate(V2))
   #36: #U91(tt(),V2) -> #activate(V2)
   #37: #isList(V) -> #U11(isPalListKind(activate(V)),activate(V))
   #38: #isList(V) -> #isPalListKind(activate(V))
   #39: #isList(V) -> #activate(V)
   #40: #isList(V) -> #activate(V)
   #41: #U31(tt(),V) -> #U32(isPalListKind(activate(V)),activate(V))
   #42: #U31(tt(),V) -> #isPalListKind(activate(V))
   #43: #U31(tt(),V) -> #activate(V)
   #44: #U31(tt(),V) -> #activate(V)
   #45: #U23(tt(),V1,V2) -> #U24(isPalListKind(activate(V2)),activate(V1),activate(V2))
   #46: #U23(tt(),V1,V2) -> #isPalListKind(activate(V2))
   #47: #U23(tt(),V1,V2) -> #activate(V2)
   #48: #U23(tt(),V1,V2) -> #activate(V1)
   #49: #U23(tt(),V1,V2) -> #activate(V2)
   #50: #U25(tt(),V2) -> #U26(isList(activate(V2)))
   #51: #U25(tt(),V2) -> #isList(activate(V2))
   #52: #U25(tt(),V2) -> #activate(V2)
   #53: #U53(tt(),V1,V2) -> #U54(isPalListKind(activate(V2)),activate(V1),activate(V2))
   #54: #U53(tt(),V1,V2) -> #isPalListKind(activate(V2))
   #55: #U53(tt(),V1,V2) -> #activate(V2)
   #56: #U53(tt(),V1,V2) -> #activate(V1)
   #57: #U53(tt(),V1,V2) -> #activate(V2)
   #58: #activate(n____(X1,X2)) -> #__(activate(X1),activate(X2))
   #59: #activate(n____(X1,X2)) -> #activate(X1)
   #60: #activate(n____(X1,X2)) -> #activate(X2)
   #61: #U52(tt(),V1,V2) -> #U53(isPalListKind(activate(V2)),activate(V1),activate(V2))
   #62: #U52(tt(),V1,V2) -> #isPalListKind(activate(V2))
   #63: #U52(tt(),V1,V2) -> #activate(V2)
   #64: #U52(tt(),V1,V2) -> #activate(V1)
   #65: #U52(tt(),V1,V2) -> #activate(V2)
   #66: #isNeList(n____(V1,V2)) -> #U51(isPalListKind(activate(V1)),activate(V1),activate(V2))
   #67: #isNeList(n____(V1,V2)) -> #isPalListKind(activate(V1))
   #68: #isNeList(n____(V1,V2)) -> #activate(V1)
   #69: #isNeList(n____(V1,V2)) -> #activate(V1)
   #70: #isNeList(n____(V1,V2)) -> #activate(V2)
   #71: #activate(n__nil()) -> #nil()
   #72: #U71(tt(),I,P) -> #U72(isPalListKind(activate(I)),activate(P))
   #73: #U71(tt(),I,P) -> #isPalListKind(activate(I))
   #74: #U71(tt(),I,P) -> #activate(I)
   #75: #U71(tt(),I,P) -> #activate(P)
   #76: #isPalListKind(n____(V1,V2)) -> #U91(isPalListKind(activate(V1)),activate(V2))
   #77: #isPalListKind(n____(V1,V2)) -> #isPalListKind(activate(V1))
   #78: #isPalListKind(n____(V1,V2)) -> #activate(V1)
   #79: #isPalListKind(n____(V1,V2)) -> #activate(V2)
   #80: #U32(tt(),V) -> #U33(isQid(activate(V)))
   #81: #U32(tt(),V) -> #isQid(activate(V))
   #82: #U32(tt(),V) -> #activate(V)
   #83: #U54(tt(),V1,V2) -> #U55(isNeList(activate(V1)),activate(V2))
   #84: #U54(tt(),V1,V2) -> #isNeList(activate(V1))
   #85: #U54(tt(),V1,V2) -> #activate(V1)
   #86: #U54(tt(),V1,V2) -> #activate(V2)
   #87: #U45(tt(),V2) -> #U46(isNeList(activate(V2)))
   #88: #U45(tt(),V2) -> #isNeList(activate(V2))
   #89: #U45(tt(),V2) -> #activate(V2)
   #90: #U21(tt(),V1,V2) -> #U22(isPalListKind(activate(V1)),activate(V1),activate(V2))
   #91: #U21(tt(),V1,V2) -> #isPalListKind(activate(V1))
   #92: #U21(tt(),V1,V2) -> #activate(V1)
   #93: #U21(tt(),V1,V2) -> #activate(V1)
   #94: #U21(tt(),V1,V2) -> #activate(V2)
   #95: #U24(tt(),V1,V2) -> #U25(isList(activate(V1)),activate(V2))
   #96: #U24(tt(),V1,V2) -> #isList(activate(V1))
   #97: #U24(tt(),V1,V2) -> #activate(V1)
   #98: #U24(tt(),V1,V2) -> #activate(V2)
   #99: #U73(tt(),P) -> #U74(isPalListKind(activate(P)))
   #100: #U73(tt(),P) -> #isPalListKind(activate(P))
   #101: #U73(tt(),P) -> #activate(P)
   #102: #activate(n__e()) -> #e()
   #103: #U12(tt(),V) -> #U13(isNeList(activate(V)))
   #104: #U12(tt(),V) -> #isNeList(activate(V))
   #105: #U12(tt(),V) -> #activate(V)
   #106: #isNeList(n____(V1,V2)) -> #U41(isPalListKind(activate(V1)),activate(V1),activate(V2))
   #107: #isNeList(n____(V1,V2)) -> #isPalListKind(activate(V1))
   #108: #isNeList(n____(V1,V2)) -> #activate(V1)
   #109: #isNeList(n____(V1,V2)) -> #activate(V1)
   #110: #isNeList(n____(V1,V2)) -> #activate(V2)
   #111: #U61(tt(),V) -> #U62(isPalListKind(activate(V)),activate(V))
   #112: #U61(tt(),V) -> #isPalListKind(activate(V))
   #113: #U61(tt(),V) -> #activate(V)
   #114: #U61(tt(),V) -> #activate(V)
   #115: #U51(tt(),V1,V2) -> #U52(isPalListKind(activate(V1)),activate(V1),activate(V2))
   #116: #U51(tt(),V1,V2) -> #isPalListKind(activate(V1))
   #117: #U51(tt(),V1,V2) -> #activate(V1)
   #118: #U51(tt(),V1,V2) -> #activate(V1)
   #119: #U51(tt(),V1,V2) -> #activate(V2)
   #120: #U42(tt(),V1,V2) -> #U43(isPalListKind(activate(V2)),activate(V1),activate(V2))
   #121: #U42(tt(),V1,V2) -> #isPalListKind(activate(V2))
   #122: #U42(tt(),V1,V2) -> #activate(V2)
   #123: #U42(tt(),V1,V2) -> #activate(V1)
   #124: #U42(tt(),V1,V2) -> #activate(V2)
   #125: #U72(tt(),P) -> #U73(isPal(activate(P)),activate(P))
   #126: #U72(tt(),P) -> #isPal(activate(P))
   #127: #U72(tt(),P) -> #activate(P)
   #128: #U72(tt(),P) -> #activate(P)
   #129: #U44(tt(),V1,V2) -> #U45(isList(activate(V1)),activate(V2))
   #130: #U44(tt(),V1,V2) -> #isList(activate(V1))
   #131: #U44(tt(),V1,V2) -> #activate(V1)
   #132: #U44(tt(),V1,V2) -> #activate(V2)
   #133: #U55(tt(),V2) -> #U56(isList(activate(V2)))
   #134: #U55(tt(),V2) -> #isList(activate(V2))
   #135: #U55(tt(),V2) -> #activate(V2)
   #136: #U82(tt(),V) -> #U83(isNePal(activate(V)))
   #137: #U82(tt(),V) -> #isNePal(activate(V))
   #138: #U82(tt(),V) -> #activate(V)
   #139: #U41(tt(),V1,V2) -> #U42(isPalListKind(activate(V1)),activate(V1),activate(V2))
   #140: #U41(tt(),V1,V2) -> #isPalListKind(activate(V1))
   #141: #U41(tt(),V1,V2) -> #activate(V1)
   #142: #U41(tt(),V1,V2) -> #activate(V1)
   #143: #U41(tt(),V1,V2) -> #activate(V2)
   #144: #__(__(X,Y),Z) -> #__(X,__(Y,Z))
   #145: #__(__(X,Y),Z) -> #__(Y,Z)
   #146: #U22(tt(),V1,V2) -> #U23(isPalListKind(activate(V2)),activate(V1),activate(V2))
   #147: #U22(tt(),V1,V2) -> #isPalListKind(activate(V2))
   #148: #U22(tt(),V1,V2) -> #activate(V2)
   #149: #U22(tt(),V1,V2) -> #activate(V1)
   #150: #U22(tt(),V1,V2) -> #activate(V2)
   #151: #U11(tt(),V) -> #U12(isPalListKind(activate(V)),activate(V))
   #152: #U11(tt(),V) -> #isPalListKind(activate(V))
   #153: #U11(tt(),V) -> #activate(V)
   #154: #U11(tt(),V) -> #activate(V)
   #155: #U43(tt(),V1,V2) -> #U44(isPalListKind(activate(V2)),activate(V1),activate(V2))
   #156: #U43(tt(),V1,V2) -> #isPalListKind(activate(V2))
   #157: #U43(tt(),V1,V2) -> #activate(V2)
   #158: #U43(tt(),V1,V2) -> #activate(V1)
   #159: #U43(tt(),V1,V2) -> #activate(V2)
Number of SCCs: 5, DPs: 37, edges: 53
	SCC { #59 #60 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     a()	weight: 0
  n__a()	weight: 0
 #U72(x1,x2)	weight: 0
 #U32(x1,x2)	weight: 0
   U21(x1,x2,x3)	weight: 0
 #U83(x1)	weight: 0
#isPalListKind(x1)	weight: 0
   U11(x1,x2)	weight: 0
   U24(x1,x2,x3)	weight: 0
  n__o()	weight: 0
 #U24(x1,x2,x3)	weight: 0
   U25(x1,x2)	weight: 0
isNeList(x1)	weight: 0
   U56(x1)	weight: 0
 isPal(x1)	weight: 0
   U42(x1,x2,x3)	weight: 0
   U91(x1,x2)	weight: 0
   #e()	weight: 0
     u()	weight: 0
activate(x1)	weight: 0
   U26(x1)	weight: 0
 #U82(x1,x2)	weight: 0
   U71(x1,x2,x3)	weight: 0
 #U81(x1,x2)	weight: 0
 #U92(x1)	weight: 0
   #u()	weight: 0
#isNeList(x1)	weight: 0
   U43(x1,x2,x3)	weight: 0
#activate(x1)	weight: x1
  n__i()	weight: 0
 #U23(x1,x2,x3)	weight: 0
 #U53(x1,x2,x3)	weight: 0
  #__(x1,x2)	weight: 0
   U44(x1,x2,x3)	weight: 0
   U55(x1,x2)	weight: 0
 #U43(x1,x2,x3)	weight: 0
   U23(x1,x2,x3)	weight: 0
   U63(x1)	weight: 0
isNePal(x1)	weight: 0
   U72(x1,x2)	weight: 0
 #U13(x1)	weight: 0
#isQid(x1)	weight: 0
#isPal(x1)	weight: 0
n__nil()	weight: 0
 #U52(x1,x2,x3)	weight: 0
   U12(x1,x2)	weight: 0
 #U33(x1)	weight: 0
 isQid(x1)	weight: 0
 #U26(x1)	weight: 0
   U54(x1,x2,x3)	weight: 0
 n____(x1,x2)	weight: (/ 1 2) + x1 + x2
  n__e()	weight: 0
     o()	weight: 0
 #U44(x1,x2,x3)	weight: 0
 #U54(x1,x2,x3)	weight: 0
 #U42(x1,x2,x3)	weight: 0
 #U12(x1,x2)	weight: 0
 #U62(x1,x2)	weight: 0
   U83(x1)	weight: 0
isList(x1)	weight: 0
   U73(x1,x2)	weight: 0
 #U74(x1)	weight: 0
#isNePal(x1)	weight: 0
 #U73(x1,x2)	weight: 0
   nil()	weight: 0
 #U25(x1,x2)	weight: 0
  n__u()	weight: 0
   #o()	weight: 0
   U62(x1,x2)	weight: 0
 #U63(x1)	weight: 0
   U45(x1,x2)	weight: 0
 #nil()	weight: 0
#isList(x1)	weight: 0
   U32(x1,x2)	weight: 0
   U33(x1)	weight: 0
 #U46(x1)	weight: 0
 #U56(x1)	weight: 0
   U46(x1)	weight: 0
     i()	weight: 0
   U52(x1,x2,x3)	weight: 0
   U61(x1,x2)	weight: 0
 #U51(x1,x2,x3)	weight: 0
     e()	weight: 0
 #U11(x1,x2)	weight: 0
   U31(x1,x2)	weight: 0
   U92(x1)	weight: 0
 #U41(x1,x2,x3)	weight: 0
   #a()	weight: 0
 #U21(x1,x2,x3)	weight: 0
   U81(x1,x2)	weight: 0
   U82(x1,x2)	weight: 0
 #U22(x1,x2,x3)	weight: 0
    tt()	weight: 0
 #U71(x1,x2,x3)	weight: 0
   U13(x1)	weight: 0
   U22(x1,x2,x3)	weight: 0
 #U45(x1,x2)	weight: 0
   U51(x1,x2,x3)	weight: 0
   U74(x1)	weight: 0
isPalListKind(x1)	weight: 0
   U53(x1,x2,x3)	weight: 0
   U41(x1,x2,x3)	weight: 0
 #U31(x1,x2)	weight: 0
    __(x1,x2)	weight: 0
 #U91(x1,x2)	weight: 0
 #U55(x1,x2)	weight: 0
 #U61(x1,x2)	weight: 0
   #i()	weight: 0
    Usable rules: { }
    Removed DPs: #59 #60
Number of SCCs: 4, DPs: 35, edges: 49
	SCC { #144 #145 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     a()	weight: 0
  n__a()	weight: 0
 #U72(x1,x2)	weight: 0
 #U32(x1,x2)	weight: 0
   U21(x1,x2,x3)	weight: 0
 #U83(x1)	weight: 0
#isPalListKind(x1)	weight: 0
   U11(x1,x2)	weight: 0
   U24(x1,x2,x3)	weight: 0
  n__o()	weight: 0
 #U24(x1,x2,x3)	weight: 0
   U25(x1,x2)	weight: 0
isNeList(x1)	weight: 0
   U56(x1)	weight: 0
 isPal(x1)	weight: 0
   U42(x1,x2,x3)	weight: 0
   U91(x1,x2)	weight: 0
   #e()	weight: 0
     u()	weight: 0
activate(x1)	weight: 0
   U26(x1)	weight: 0
 #U82(x1,x2)	weight: 0
   U71(x1,x2,x3)	weight: 0
 #U81(x1,x2)	weight: 0
 #U92(x1)	weight: 0
   #u()	weight: 0
#isNeList(x1)	weight: 0
   U43(x1,x2,x3)	weight: 0
#activate(x1)	weight: 0
  n__i()	weight: 0
 #U23(x1,x2,x3)	weight: 0
 #U53(x1,x2,x3)	weight: 0
  #__(x1,x2)	weight: x1
   U44(x1,x2,x3)	weight: 0
   U55(x1,x2)	weight: 0
 #U43(x1,x2,x3)	weight: 0
   U23(x1,x2,x3)	weight: 0
   U63(x1)	weight: 0
isNePal(x1)	weight: 0
   U72(x1,x2)	weight: 0
 #U13(x1)	weight: 0
#isQid(x1)	weight: 0
#isPal(x1)	weight: 0
n__nil()	weight: 0
 #U52(x1,x2,x3)	weight: 0
   U12(x1,x2)	weight: 0
 #U33(x1)	weight: 0
 isQid(x1)	weight: 0
 #U26(x1)	weight: 0
   U54(x1,x2,x3)	weight: 0
 n____(x1,x2)	weight: (/ 1 2)
  n__e()	weight: 0
     o()	weight: 0
 #U44(x1,x2,x3)	weight: 0
 #U54(x1,x2,x3)	weight: 0
 #U42(x1,x2,x3)	weight: 0
 #U12(x1,x2)	weight: 0
 #U62(x1,x2)	weight: 0
   U83(x1)	weight: 0
isList(x1)	weight: 0
   U73(x1,x2)	weight: 0
 #U74(x1)	weight: 0
#isNePal(x1)	weight: 0
 #U73(x1,x2)	weight: 0
   nil()	weight: 0
 #U25(x1,x2)	weight: 0
  n__u()	weight: 0
   #o()	weight: 0
   U62(x1,x2)	weight: 0
 #U63(x1)	weight: 0
   U45(x1,x2)	weight: 0
 #nil()	weight: 0
#isList(x1)	weight: 0
   U32(x1,x2)	weight: 0
   U33(x1)	weight: 0
 #U46(x1)	weight: 0
 #U56(x1)	weight: 0
   U46(x1)	weight: 0
     i()	weight: 0
   U52(x1,x2,x3)	weight: 0
   U61(x1,x2)	weight: 0
 #U51(x1,x2,x3)	weight: 0
     e()	weight: 0
 #U11(x1,x2)	weight: 0
   U31(x1,x2)	weight: 0
   U92(x1)	weight: 0
 #U41(x1,x2,x3)	weight: 0
   #a()	weight: 0
 #U21(x1,x2,x3)	weight: 0
   U81(x1,x2)	weight: 0
   U82(x1,x2)	weight: 0
 #U22(x1,x2,x3)	weight: 0
    tt()	weight: 0
 #U71(x1,x2,x3)	weight: 0
   U13(x1)	weight: 0
   U22(x1,x2,x3)	weight: 0
 #U45(x1,x2)	weight: 0
   U51(x1,x2,x3)	weight: 0
   U74(x1)	weight: 0
isPalListKind(x1)	weight: 0
   U53(x1,x2,x3)	weight: 0
   U41(x1,x2,x3)	weight: 0
 #U31(x1,x2)	weight: 0
    __(x1,x2)	weight: (/ 1 4) + x1 + x2
 #U91(x1,x2)	weight: 0
 #U55(x1,x2)	weight: 0
 #U61(x1,x2)	weight: 0
   #i()	weight: 0
    Usable rules: { }
    Removed DPs: #144 #145
Number of SCCs: 3, DPs: 33, edges: 45
	SCC { #35 #76 #77 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     a()	weight: 0
  n__a()	weight: 0
 #U72(x1,x2)	weight: 0
 #U32(x1,x2)	weight: 0
   U21(x1,x2,x3)	weight: 0
 #U83(x1)	weight: 0
#isPalListKind(x1)	weight: x1
   U11(x1,x2)	weight: 0
   U24(x1,x2,x3)	weight: 0
  n__o()	weight: 0
 #U24(x1,x2,x3)	weight: 0
   U25(x1,x2)	weight: 0
isNeList(x1)	weight: 0
   U56(x1)	weight: 0
 isPal(x1)	weight: 0
   U42(x1,x2,x3)	weight: 0
   U91(x1,x2)	weight: (/ 1 4) + x1
   #e()	weight: 0
     u()	weight: 0
activate(x1)	weight: x1
   U26(x1)	weight: 0
 #U82(x1,x2)	weight: 0
   U71(x1,x2,x3)	weight: 0
 #U81(x1,x2)	weight: 0
 #U92(x1)	weight: 0
   #u()	weight: 0
#isNeList(x1)	weight: 0
   U43(x1,x2,x3)	weight: 0
#activate(x1)	weight: 0
  n__i()	weight: 0
 #U23(x1,x2,x3)	weight: 0
 #U53(x1,x2,x3)	weight: 0
  #__(x1,x2)	weight: 0
   U44(x1,x2,x3)	weight: 0
   U55(x1,x2)	weight: 0
 #U43(x1,x2,x3)	weight: 0
   U23(x1,x2,x3)	weight: 0
   U63(x1)	weight: 0
isNePal(x1)	weight: 0
   U72(x1,x2)	weight: 0
 #U13(x1)	weight: 0
#isQid(x1)	weight: 0
#isPal(x1)	weight: 0
n__nil()	weight: 0
 #U52(x1,x2,x3)	weight: 0
   U12(x1,x2)	weight: 0
 #U33(x1)	weight: 0
 isQid(x1)	weight: 0
 #U26(x1)	weight: 0
   U54(x1,x2,x3)	weight: 0
 n____(x1,x2)	weight: (/ 1 2) + x1 + x2
  n__e()	weight: 0
     o()	weight: 0
 #U44(x1,x2,x3)	weight: 0
 #U54(x1,x2,x3)	weight: 0
 #U42(x1,x2,x3)	weight: 0
 #U12(x1,x2)	weight: 0
 #U62(x1,x2)	weight: 0
   U83(x1)	weight: 0
isList(x1)	weight: 0
   U73(x1,x2)	weight: 0
 #U74(x1)	weight: 0
#isNePal(x1)	weight: 0
 #U73(x1,x2)	weight: 0
   nil()	weight: 0
 #U25(x1,x2)	weight: 0
  n__u()	weight: 0
   #o()	weight: 0
   U62(x1,x2)	weight: 0
 #U63(x1)	weight: 0
   U45(x1,x2)	weight: 0
 #nil()	weight: 0
#isList(x1)	weight: 0
   U32(x1,x2)	weight: 0
   U33(x1)	weight: 0
 #U46(x1)	weight: 0
 #U56(x1)	weight: 0
   U46(x1)	weight: 0
     i()	weight: 0
   U52(x1,x2,x3)	weight: 0
   U61(x1,x2)	weight: 0
 #U51(x1,x2,x3)	weight: 0
     e()	weight: 0
 #U11(x1,x2)	weight: 0
   U31(x1,x2)	weight: 0
   U92(x1)	weight: (/ 1 4) + x1
 #U41(x1,x2,x3)	weight: 0
   #a()	weight: 0
 #U21(x1,x2,x3)	weight: 0
   U81(x1,x2)	weight: 0
   U82(x1,x2)	weight: 0
 #U22(x1,x2,x3)	weight: 0
    tt()	weight: 0
 #U71(x1,x2,x3)	weight: 0
   U13(x1)	weight: 0
   U22(x1,x2,x3)	weight: 0
 #U45(x1,x2)	weight: 0
   U51(x1,x2,x3)	weight: 0
   U74(x1)	weight: 0
isPalListKind(x1)	weight: (/ 1 4)
   U53(x1,x2,x3)	weight: 0
   U41(x1,x2,x3)	weight: 0
 #U31(x1,x2)	weight: 0
    __(x1,x2)	weight: (/ 1 2) + x1 + x2
 #U91(x1,x2)	weight: (/ 1 4) + x2
 #U55(x1,x2)	weight: 0
 #U61(x1,x2)	weight: 0
   #i()	weight: 0
    Usable rules: { 1..3 62..76 }
    Removed DPs: #35 #76 #77
Number of SCCs: 2, DPs: 30, edges: 40
	SCC { #8 #22 #28 #72 #126 #137 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     a()	weight: 0
  n__a()	weight: 0
 #U72(x1,x2)	weight: (/ 1 2) + x2
 #U32(x1,x2)	weight: 0
   U21(x1,x2,x3)	weight: 0
 #U83(x1)	weight: 0
#isPalListKind(x1)	weight: x1
   U11(x1,x2)	weight: 0
   U24(x1,x2,x3)	weight: 0
  n__o()	weight: 0
 #U24(x1,x2,x3)	weight: 0
   U25(x1,x2)	weight: 0
isNeList(x1)	weight: 0
   U56(x1)	weight: 0
 isPal(x1)	weight: 0
   U42(x1,x2,x3)	weight: 0
   U91(x1,x2)	weight: (/ 1 8) + x1
   #e()	weight: 0
     u()	weight: 0
activate(x1)	weight: x1
   U26(x1)	weight: 0
 #U82(x1,x2)	weight: (/ 1 8) + x2
   U71(x1,x2,x3)	weight: 0
 #U81(x1,x2)	weight: (/ 1 4) + x2
 #U92(x1)	weight: 0
   #u()	weight: 0
#isNeList(x1)	weight: 0
   U43(x1,x2,x3)	weight: 0
#activate(x1)	weight: 0
  n__i()	weight: 0
 #U23(x1,x2,x3)	weight: 0
 #U53(x1,x2,x3)	weight: 0
  #__(x1,x2)	weight: 0
   U44(x1,x2,x3)	weight: 0
   U55(x1,x2)	weight: 0
 #U43(x1,x2,x3)	weight: 0
   U23(x1,x2,x3)	weight: 0
   U63(x1)	weight: 0
isNePal(x1)	weight: 0
   U72(x1,x2)	weight: 0
 #U13(x1)	weight: 0
#isQid(x1)	weight: 0
#isPal(x1)	weight: (/ 3 8) + x1
n__nil()	weight: 0
 #U52(x1,x2,x3)	weight: 0
   U12(x1,x2)	weight: 0
 #U33(x1)	weight: 0
 isQid(x1)	weight: (/ 1 8)
 #U26(x1)	weight: 0
   U54(x1,x2,x3)	weight: 0
 n____(x1,x2)	weight: (/ 3 8) + x1 + x2
  n__e()	weight: 0
     o()	weight: 0
 #U44(x1,x2,x3)	weight: 0
 #U54(x1,x2,x3)	weight: 0
 #U42(x1,x2,x3)	weight: 0
 #U12(x1,x2)	weight: 0
 #U62(x1,x2)	weight: 0
   U83(x1)	weight: 0
isList(x1)	weight: 0
   U73(x1,x2)	weight: 0
 #U74(x1)	weight: 0
#isNePal(x1)	weight: x1
 #U73(x1,x2)	weight: 0
   nil()	weight: 0
 #U25(x1,x2)	weight: 0
  n__u()	weight: 0
   #o()	weight: 0
   U62(x1,x2)	weight: 0
 #U63(x1)	weight: 0
   U45(x1,x2)	weight: 0
 #nil()	weight: 0
#isList(x1)	weight: 0
   U32(x1,x2)	weight: 0
   U33(x1)	weight: 0
 #U46(x1)	weight: 0
 #U56(x1)	weight: 0
   U46(x1)	weight: 0
     i()	weight: 0
   U52(x1,x2,x3)	weight: 0
   U61(x1,x2)	weight: 0
 #U51(x1,x2,x3)	weight: 0
     e()	weight: 0
 #U11(x1,x2)	weight: 0
   U31(x1,x2)	weight: 0
   U92(x1)	weight: (/ 1 8) + x1
 #U41(x1,x2,x3)	weight: 0
   #a()	weight: 0
 #U21(x1,x2,x3)	weight: 0
   U81(x1,x2)	weight: 0
   U82(x1,x2)	weight: 0
 #U22(x1,x2,x3)	weight: 0
    tt()	weight: 0
 #U71(x1,x2,x3)	weight: (/ 5 8) + x3
   U13(x1)	weight: 0
   U22(x1,x2,x3)	weight: 0
 #U45(x1,x2)	weight: 0
   U51(x1,x2,x3)	weight: 0
   U74(x1)	weight: 0
isPalListKind(x1)	weight: (/ 1 8)
   U53(x1,x2,x3)	weight: 0
   U41(x1,x2,x3)	weight: 0
 #U31(x1,x2)	weight: 0
    __(x1,x2)	weight: (/ 3 8) + x1 + x2
 #U91(x1,x2)	weight: (/ 1 8) + x2
 #U55(x1,x2)	weight: 0
 #U61(x1,x2)	weight: 0
   #i()	weight: 0
    Usable rules: { 1..3 62..76 }
    Removed DPs: #8 #22 #28 #72 #126 #137
Number of SCCs: 1, DPs: 24, edges: 34
	SCC { #16 #37 #45 #51 #53 #61 #66 #83 #84 #88 #90 #95 #96 #104 #106 #115 #120 #129 #130 #134 #139 #146 #151 #155 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     a()	weight: 0
  n__a()	weight: 0
 #U72(x1,x2)	weight: (/ 1 4) + x2
 #U32(x1,x2)	weight: 0
   U21(x1,x2,x3)	weight: (/ 1 8) + x3
 #U83(x1)	weight: 0
#isPalListKind(x1)	weight: x1
   U11(x1,x2)	weight: (/ 1 8) + x2
   U24(x1,x2,x3)	weight: (/ 1 4) + x3
  n__o()	weight: 0
 #U24(x1,x2,x3)	weight: (/ 5 16) + x2 + x3
   U25(x1,x2)	weight: (/ 5 16)
isNeList(x1)	weight: (/ 1 16)
   U56(x1)	weight: (/ 3 8)
 isPal(x1)	weight: 0
   U42(x1,x2,x3)	weight: (/ 1 8) + x1 + x3
   U91(x1,x2)	weight: (/ 1 16) + x1
   #e()	weight: 0
     u()	weight: 0
activate(x1)	weight: x1
   U26(x1)	weight: (/ 3 8)
 #U82(x1,x2)	weight: (/ 1 16) + x2
   U71(x1,x2,x3)	weight: 0
 #U81(x1,x2)	weight: (/ 1 8) + x2
 #U92(x1)	weight: 0
   #u()	weight: 0
#isNeList(x1)	weight: x1
   U43(x1,x2,x3)	weight: (/ 3 16)
#activate(x1)	weight: 0
  n__i()	weight: 0
 #U23(x1,x2,x3)	weight: (/ 3 8) + x2 + x3
 #U53(x1,x2,x3)	weight: (/ 3 8) + x2 + x3
  #__(x1,x2)	weight: 0
   U44(x1,x2,x3)	weight: (/ 1 4)
   U55(x1,x2)	weight: (/ 5 16) + x1
 #U43(x1,x2,x3)	weight: (/ 5 16) + x2 + x3
   U23(x1,x2,x3)	weight: (/ 3 16) + x1
   U63(x1)	weight: 0
isNePal(x1)	weight: 0
   U72(x1,x2)	weight: 0
 #U13(x1)	weight: 0
#isQid(x1)	weight: 0
#isPal(x1)	weight: (/ 3 16) + x1
n__nil()	weight: 0
 #U52(x1,x2,x3)	weight: (/ 7 16) + x2 + x3
   U12(x1,x2)	weight: (/ 1 8) + x1
 #U33(x1)	weight: 0
 isQid(x1)	weight: (/ 1 16)
 #U26(x1)	weight: 0
   U54(x1,x2,x3)	weight: (/ 5 16) + x2
 n____(x1,x2)	weight: (/ 9 16) + x1 + x2
  n__e()	weight: 0
     o()	weight: 0
 #U44(x1,x2,x3)	weight: (/ 1 4) + x2 + x3
 #U54(x1,x2,x3)	weight: (/ 5 16) + x2 + x3
 #U42(x1,x2,x3)	weight: (/ 3 8) + x2 + x3
 #U12(x1,x2)	weight: (/ 1 16) + x2
 #U62(x1,x2)	weight: 0
   U83(x1)	weight: 0
isList(x1)	weight: (/ 1 16)
   U73(x1,x2)	weight: 0
 #U74(x1)	weight: 0
#isNePal(x1)	weight: x1
 #U73(x1,x2)	weight: 0
   nil()	weight: 0
 #U25(x1,x2)	weight: (/ 1 4) + x2
  n__u()	weight: 0
   #o()	weight: 0
   U62(x1,x2)	weight: 0
 #U63(x1)	weight: 0
   U45(x1,x2)	weight: (/ 5 16)
 #nil()	weight: 0
#isList(x1)	weight: (/ 3 16) + x1
   U32(x1,x2)	weight: (/ 1 8) + x1 + x2
   U33(x1)	weight: (/ 1 8) + x1
 #U46(x1)	weight: 0
 #U56(x1)	weight: 0
   U46(x1)	weight: (/ 3 8)
     i()	weight: 0
   U52(x1,x2,x3)	weight: (/ 3 16)
   U61(x1,x2)	weight: 0
 #U51(x1,x2,x3)	weight: (/ 1 2) + x2 + x3
     e()	weight: 0
 #U11(x1,x2)	weight: (/ 1 8) + x2
   U31(x1,x2)	weight: (/ 1 8) + x2
   U92(x1)	weight: (/ 1 16) + x1
 #U41(x1,x2,x3)	weight: (/ 7 16) + x2 + x3
   #a()	weight: 0
 #U21(x1,x2,x3)	weight: (/ 1 2) + x2 + x3
   U81(x1,x2)	weight: 0
   U82(x1,x2)	weight: 0
 #U22(x1,x2,x3)	weight: (/ 7 16) + x2 + x3
    tt()	weight: 0
 #U71(x1,x2,x3)	weight: (/ 5 16) + x3
   U13(x1)	weight: (/ 1 8) + x1
   U22(x1,x2,x3)	weight: (/ 3 16)
 #U45(x1,x2)	weight: (/ 1 16) + x2
   U51(x1,x2,x3)	weight: (/ 1 8) + x2
   U74(x1)	weight: 0
isPalListKind(x1)	weight: (/ 1 16)
   U53(x1,x2,x3)	weight: (/ 1 4)
   U41(x1,x2,x3)	weight: (/ 1 8)
 #U31(x1,x2)	weight: 0
    __(x1,x2)	weight: (/ 9 16) + x1 + x2
 #U91(x1,x2)	weight: (/ 1 16) + x2
 #U55(x1,x2)	weight: (/ 1 4) + x2
 #U61(x1,x2)	weight: 0
   #i()	weight: 0
    Usable rules: { 1..3 62..76 }
    Removed DPs: #16 #37 #45 #51 #53 #61 #66 #83 #84 #88 #90 #95 #96 #104 #106 #115 #120 #129 #130 #134 #139 #146 #151 #155
Number of SCCs: 0, DPs: 0, edges: 0
