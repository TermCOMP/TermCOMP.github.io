Input TRS:
    1: 1024() -> 1024_1(0())
    2: 1024_1(x) -> if(lt(x,10()),x)
    3: if(true(),x) -> double(1024_1(s(x)))
    4: if(false(),x) -> s(0())
    5: lt(0(),s(y)) -> true()
    6: lt(x,0()) -> false()
    7: lt(s(x),s(y)) -> lt(x,y)
    8: double(0()) -> 0()
    9: double(s(x)) -> s(s(double(x)))
    10: 10() -> double(s(double(s(s(0())))))
Number of strict rules: 10
Direct Order(PosReal,>,Poly) ... failed.
Freezing double
1: 1024() -> 1024_1(0())
2: 1024_1(x) -> if(lt(x,10()),x)
3: if(true(),x) -> double(1024_1(s(x)))
4: if(false(),x) -> s(0())
5: lt(0(),s(y)) -> true()
6: lt(x,0()) -> false()
7: lt(s(x),s(y)) -> lt(x,y)
8: double❆1_0() -> 0()
9: double❆1_s(x) -> s(s(double(x)))
10: 10() -> double❆1_s(double❆1_s(s(0())))
11: double(0()) ->= double❆1_0()
12: double(s(_1)) ->= double❆1_s(_1)
Number of strict rules: 10
Direct Order(PosReal,>,Poly) ... failed.
Dependency Pairs:
   #1: #1024_1(x) -> #if(lt(x,10()),x)
   #2: #1024_1(x) -> #lt(x,10())
   #3: #1024_1(x) -> #10()
   #4: #double❆1_s(x) -> #double(x)
   #5: #double(0()) ->? #double❆1_0()
   #6: #double(s(_1)) ->? #double❆1_s(_1)
   #7: #lt(s(x),s(y)) -> #lt(x,y)
   #8: #10() -> #double❆1_s(double❆1_s(s(0())))
   #9: #10() -> #double❆1_s(s(0()))
   #10: #if(true(),x) -> #double(1024_1(s(x)))
   #11: #if(true(),x) -> #1024_1(s(x))
   #12: #1024() -> #1024_1(0())
Number of SCCs: 3, DPs: 5, edges: 5
	SCC { #7 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
    10()	weight: 0
1024_1(x1)	weight: 0
#double❆1_0()	weight: 0
     s(x1)	weight: (/ 1 2) + x1
  #lt(x1,x2)	weight: x2
#1024_1(x1)	weight: 0
#double❆1_s(x1)	weight: 0
 false()	weight: 0
#1024()	weight: 0
  true()	weight: 0
  1024()	weight: 0
     0()	weight: 0
    if(x1,x2)	weight: 0
#double(x1)	weight: 0
double(x1)	weight: 0
  #10()	weight: 0
double❆1_0()	weight: 0
  #if(x1,x2)	weight: 0
double❆1_s(x1)	weight: 0
    lt(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #7
Number of SCCs: 2, DPs: 4, edges: 4
	SCC { #4 #6 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
    10()	weight: 0
1024_1(x1)	weight: 0
#double❆1_0()	weight: 0
     s(x1)	weight: (/ 1 2) + x1
  #lt(x1,x2)	weight: 0
#1024_1(x1)	weight: 0
#double❆1_s(x1)	weight: (/ 1 4) + x1
 false()	weight: 0
#1024()	weight: 0
  true()	weight: 0
  1024()	weight: 0
     0()	weight: 0
    if(x1,x2)	weight: 0
#double(x1)	weight: x1
double(x1)	weight: 0
  #10()	weight: 0
double❆1_0()	weight: 0
  #if(x1,x2)	weight: 0
double❆1_s(x1)	weight: 0
    lt(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #4 #6
Number of SCCs: 1, DPs: 2, edges: 2
	SCC { #1 #11 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
