Input TRS:
    1: from(X) -> cons(X,from(s(X)))
    2: sel(0(),cons(X,Y)) -> X
    3: sel(s(X),cons(Y,Z)) -> sel(X,Z)
Number of strict rules: 3
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #sel(s(X),cons(Y,Z)) -> #sel(X,Z)
   #2: #from(X) -> #from(s(X))
Number of SCCs: 2, DPs: 2, edges: 2
	SCC { #2 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  found.
  #from(X)	-#2->
  #from(s(X))	--->*
  #from(s(X))
  Looping with: [ X := s(X); ]
