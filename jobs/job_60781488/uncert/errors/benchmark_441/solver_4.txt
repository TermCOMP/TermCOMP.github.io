Input TRS:
    1: log(x,s(s(y))) -> cond(le(x,s(s(y))),x,y)
    2: cond(true(),x,y) -> s(0())
    3: cond(false(),x,y) -> double(log(x,square(s(s(y)))))
    4: le(0(),v) -> true()
    5: le(s(u),0()) -> false()
    6: le(s(u),s(v)) -> le(u,v)
    7: double(0()) -> 0()
    8: double(s(x)) -> s(s(double(x)))
    9: square(0()) -> 0()
    10: square(s(x)) -> s(plus(square(x),double(x)))
    11: plus(n,0()) -> n
    12: plus(n,s(m)) -> s(plus(n,m))
Number of strict rules: 12
Direct Order(PosReal,>,Poly) ... failed.
Freezing square
1: log(x,s(s(y))) -> cond(le(x,s(s(y))),x,y)
2: cond(true(),x,y) -> s(0())
3: cond(false(),x,y) -> double(log(x,square❆1_s(s(y))))
4: le(0(),v) -> true()
5: le(s(u),0()) -> false()
6: le(s(u),s(v)) -> le(u,v)
7: double(0()) -> 0()
8: double(s(x)) -> s(s(double(x)))
9: square❆1_0() -> 0()
10: square❆1_s(x) -> s(plus(square(x),double(x)))
11: plus(n,0()) -> n
12: plus(n,s(m)) -> s(plus(n,m))
13: square(0()) ->= square❆1_0()
14: square(s(_1)) ->= square❆1_s(_1)
Number of strict rules: 12
Direct Order(PosReal,>,Poly) ... failed.
Dependency Pairs:
   #1: #le(s(u),s(v)) -> #le(u,v)
   #2: #square(0()) ->? #square❆1_0()
   #3: #plus(n,s(m)) -> #plus(n,m)
   #4: #square(s(_1)) ->? #square❆1_s(_1)
   #5: #square❆1_s(x) -> #plus(square(x),double(x))
   #6: #square❆1_s(x) -> #square(x)
   #7: #square❆1_s(x) -> #double(x)
   #8: #cond(false(),x,y) -> #double(log(x,square❆1_s(s(y))))
   #9: #cond(false(),x,y) -> #log(x,square❆1_s(s(y)))
   #10: #cond(false(),x,y) -> #square❆1_s(s(y))
   #11: #log(x,s(s(y))) -> #cond(le(x,s(s(y))),x,y)
   #12: #log(x,s(s(y))) -> #le(x,s(s(y)))
   #13: #double(s(x)) -> #double(x)
Number of SCCs: 5, DPs: 7, edges: 7
	SCC { #13 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
    le(x1,x2)	weight: 0
square❆1_0()	weight: 0
     s(x1)	weight: (/ 1 2) + x1
  #le(x1,x2)	weight: 0
square❆1_s(x1)	weight: 0
#plus(x1,x2)	weight: 0
square(x1)	weight: 0
 false()	weight: 0
 #log(x1,x2)	weight: 0
#square(x1)	weight: 0
  true()	weight: 0
   log(x1,x2)	weight: 0
#cond(x1,x2,x3)	weight: 0
     0()	weight: 0
#double(x1)	weight: x1
double(x1)	weight: 0
  plus(x1,x2)	weight: 0
#square❆1_s(x1)	weight: 0
#square❆1_0()	weight: 0
  cond(x1,x2,x3)	weight: 0
    Usable rules: { }
    Removed DPs: #13
Number of SCCs: 4, DPs: 6, edges: 6
	SCC { #3 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
    le(x1,x2)	weight: 0
square❆1_0()	weight: 0
     s(x1)	weight: (/ 1 2) + x1
  #le(x1,x2)	weight: 0
square❆1_s(x1)	weight: 0
#plus(x1,x2)	weight: x2
square(x1)	weight: 0
 false()	weight: 0
 #log(x1,x2)	weight: 0
#square(x1)	weight: 0
  true()	weight: 0
   log(x1,x2)	weight: 0
#cond(x1,x2,x3)	weight: 0
     0()	weight: 0
#double(x1)	weight: 0
double(x1)	weight: 0
  plus(x1,x2)	weight: 0
#square❆1_s(x1)	weight: 0
#square❆1_0()	weight: 0
  cond(x1,x2,x3)	weight: 0
    Usable rules: { }
    Removed DPs: #3
Number of SCCs: 3, DPs: 5, edges: 5
	SCC { #1 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
    le(x1,x2)	weight: 0
square❆1_0()	weight: 0
     s(x1)	weight: (/ 1 2) + x1
  #le(x1,x2)	weight: x2
square❆1_s(x1)	weight: 0
#plus(x1,x2)	weight: 0
square(x1)	weight: 0
 false()	weight: 0
 #log(x1,x2)	weight: 0
#square(x1)	weight: 0
  true()	weight: 0
   log(x1,x2)	weight: 0
#cond(x1,x2,x3)	weight: 0
     0()	weight: 0
#double(x1)	weight: 0
double(x1)	weight: 0
  plus(x1,x2)	weight: 0
#square❆1_s(x1)	weight: 0
#square❆1_0()	weight: 0
  cond(x1,x2,x3)	weight: 0
    Usable rules: { }
    Removed DPs: #1
Number of SCCs: 2, DPs: 4, edges: 4
	SCC { #4 #6 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
    le(x1,x2)	weight: 0
square❆1_0()	weight: 0
     s(x1)	weight: (/ 1 2) + x1
  #le(x1,x2)	weight: 0
square❆1_s(x1)	weight: 0
#plus(x1,x2)	weight: 0
square(x1)	weight: 0
 false()	weight: 0
 #log(x1,x2)	weight: 0
#square(x1)	weight: x1
  true()	weight: 0
   log(x1,x2)	weight: 0
#cond(x1,x2,x3)	weight: 0
     0()	weight: 0
#double(x1)	weight: 0
double(x1)	weight: 0
  plus(x1,x2)	weight: 0
#square❆1_s(x1)	weight: (/ 1 4) + x1
#square❆1_0()	weight: 0
  cond(x1,x2,x3)	weight: 0
    Usable rules: { }
    Removed DPs: #4 #6
Number of SCCs: 1, DPs: 2, edges: 2
	SCC { #9 #11 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
