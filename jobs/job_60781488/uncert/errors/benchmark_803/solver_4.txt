Input TRS:
    1: le(0(),y) -> true()
    2: le(s(x),0()) -> false()
    3: le(s(x),s(y)) -> le(x,y)
    4: minus(x,0()) -> x
    5: minus(s(x),s(y)) -> minus(x,y)
    6: mod(0(),y) -> 0()
    7: mod(s(x),0()) -> 0()
    8: mod(s(x),s(y)) -> if_mod(le(y,x),s(x),s(y))
    9: if_mod(true(),x,y) -> mod(minus(x,y),y)
    10: if_mod(false(),s(x),s(y)) -> s(x)
Number of strict rules: 10
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #if_mod(true(),x,y) -> #mod(minus(x,y),y)
   #2: #if_mod(true(),x,y) -> #minus(x,y)
   #3: #minus(s(x),s(y)) -> #minus(x,y)
   #4: #le(s(x),s(y)) -> #le(x,y)
   #5: #mod(s(x),s(y)) -> #if_mod(le(y,x),s(x),s(y))
   #6: #mod(s(x),s(y)) -> #le(y,x)
Number of SCCs: 3, DPs: 4, edges: 4
	SCC { #3 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
    le(x1,x2)	weight: 0
     s(x1)	weight: (/ 1 2) + x1
  #le(x1,x2)	weight: 0
 minus(x1,x2)	weight: 0
   mod(x1,x2)	weight: 0
 false()	weight: 0
  true()	weight: 0
if_mod(x1,x2,x3)	weight: 0
     0()	weight: 0
#minus(x1,x2)	weight: x2
 #mod(x1,x2)	weight: 0
#if_mod(x1,x2,x3)	weight: 0
    Usable rules: { }
    Removed DPs: #3
Number of SCCs: 2, DPs: 3, edges: 3
	SCC { #4 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
    le(x1,x2)	weight: 0
     s(x1)	weight: (/ 1 2) + x1
  #le(x1,x2)	weight: x2
 minus(x1,x2)	weight: 0
   mod(x1,x2)	weight: 0
 false()	weight: 0
  true()	weight: 0
if_mod(x1,x2,x3)	weight: 0
     0()	weight: 0
#minus(x1,x2)	weight: 0
 #mod(x1,x2)	weight: 0
#if_mod(x1,x2,x3)	weight: 0
    Usable rules: { }
    Removed DPs: #4
Number of SCCs: 1, DPs: 2, edges: 2
	SCC { #1 #5 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... succeeded.
    le(x1,x2)	weight: (max (/ 1 2) 0); (- (/ 1 8))
     s(x1)	weight: max{0, (/ 1 2) + x1_1}; (- (/ 1 2))
  #le(x1,x2)	weight: 0; 0
 minus(x1,x2)	weight: max{0, (/ 1 8) + x2_2 + x1_1}; 0
   mod(x1,x2)	weight: 0; 0
 false()	weight: (/ 1 2); (- (/ 1 8))
  true()	weight: (/ 1 2); (- (/ 1 8))
if_mod(x1,x2,x3)	weight: 0; 0
     0()	weight: (/ 1 8); (- (/ 1 8))
#minus(x1,x2)	weight: 0; 0
 #mod(x1,x2)	weight: max{0, (- (/ 1 4)) + x1_1}; 0
#if_mod(x1,x2,x3)	weight: max{0, (- (/ 3 8)) + x3_2 + x2_1 + x1_1}; 0
    Usable rules: { 1..5 }
    Removed DPs: #5
Number of SCCs: 0, DPs: 0, edges: 0
