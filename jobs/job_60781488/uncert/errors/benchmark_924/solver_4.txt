Input TRS:
    1: a__eq(0(),0()) -> true()
    2: a__eq(s(X),s(Y)) -> a__eq(X,Y)
    3: a__eq(X,Y) -> false()
    4: a__inf(X) -> cons(X,inf(s(X)))
    5: a__take(0(),X) -> nil()
    6: a__take(s(X),cons(Y,L)) -> cons(Y,take(X,L))
    7: a__length(nil()) -> 0()
    8: a__length(cons(X,L)) -> s(length(L))
    9: mark(eq(X1,X2)) -> a__eq(X1,X2)
    10: mark(inf(X)) -> a__inf(mark(X))
    11: mark(take(X1,X2)) -> a__take(mark(X1),mark(X2))
    12: mark(length(X)) -> a__length(mark(X))
    13: mark(0()) -> 0()
    14: mark(true()) -> true()
    15: mark(s(X)) -> s(X)
    16: mark(false()) -> false()
    17: mark(cons(X1,X2)) -> cons(X1,X2)
    18: mark(nil()) -> nil()
    19: a__eq(X1,X2) -> eq(X1,X2)
    20: a__inf(X) -> inf(X)
    21: a__take(X1,X2) -> take(X1,X2)
    22: a__length(X) -> length(X)
Number of strict rules: 22
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #a__eq(s(X),s(Y)) -> #a__eq(X,Y)
   #2: #mark(eq(X1,X2)) -> #a__eq(X1,X2)
   #3: #mark(take(X1,X2)) -> #a__take(mark(X1),mark(X2))
   #4: #mark(take(X1,X2)) -> #mark(X1)
   #5: #mark(take(X1,X2)) -> #mark(X2)
   #6: #mark(length(X)) -> #a__length(mark(X))
   #7: #mark(length(X)) -> #mark(X)
   #8: #mark(inf(X)) -> #a__inf(mark(X))
   #9: #mark(inf(X)) -> #mark(X)
Number of SCCs: 2, DPs: 5, edges: 17
	SCC { #1 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 1 2) + x1
  take(x1,x2)	weight: 0
    eq(x1,x2)	weight: 0
 false()	weight: 0
a__inf(x1)	weight: 0
 a__eq(x1,x2)	weight: 0
#a__take(x1,x2)	weight: 0
  true()	weight: 0
#mark(x1)	weight: 0
     0()	weight: 0
   nil()	weight: 0
  mark(x1)	weight: 0
#a__inf(x1)	weight: 0
#a__length(x1)	weight: 0
  cons(x1,x2)	weight: 0
a__take(x1,x2)	weight: 0
length(x1)	weight: 0
   inf(x1)	weight: 0
a__length(x1)	weight: 0
#a__eq(x1,x2)	weight: x2
    Usable rules: { }
    Removed DPs: #1
Number of SCCs: 1, DPs: 4, edges: 16
	SCC { #4 #5 #7 #9 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 1 2)
  take(x1,x2)	weight: (/ 1 2) + x1 + x2
    eq(x1,x2)	weight: 0
 false()	weight: 0
a__inf(x1)	weight: 0
 a__eq(x1,x2)	weight: 0
#a__take(x1,x2)	weight: 0
  true()	weight: 0
#mark(x1)	weight: x1
     0()	weight: 0
   nil()	weight: 0
  mark(x1)	weight: 0
#a__inf(x1)	weight: 0
#a__length(x1)	weight: 0
  cons(x1,x2)	weight: 0
a__take(x1,x2)	weight: 0
length(x1)	weight: (/ 1 2) + x1
   inf(x1)	weight: (/ 1 2) + x1
a__length(x1)	weight: 0
#a__eq(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #4 #5 #7 #9
Number of SCCs: 0, DPs: 0, edges: 0
