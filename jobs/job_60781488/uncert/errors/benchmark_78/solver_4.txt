Input TRS:
    1: app(app(add(),0()),y) -> y
    2: app(app(add(),app(s(),x)),y) -> app(s(),app(app(add(),x),y))
    3: app(app(mult(),0()),y) -> 0()
    4: app(app(mult(),app(s(),x)),y) -> app(app(add(),app(app(mult(),x),y)),y)
    5: app(app(app(rec(),f),x),0()) -> x
    6: app(app(app(rec(),f),x),app(s(),y)) -> app(app(f,app(s(),y)),app(app(app(rec(),f),x),y))
    7: fact() -> app(app(rec(),mult()),app(s(),0()))
Number of strict rules: 7
Direct Order(PosReal,>,Poly) ... failed.
Freezing app
1: app❆2_add(0(),y) -> y
2: app❆2_add(app❆1_s(x),y) -> app❆1_s(app❆2_add(x,y))
3: app❆2_mult(0(),y) -> 0()
4: app❆2_mult(app❆1_s(x),y) -> app❆2_add(app❆2_mult(x,y),y)
5: app❆3_rec(f,x,0()) -> x
6: app❆3_rec(f,x,app❆1_s(y)) -> app(app(f,app❆1_s(y)),app❆3_rec(f,x,y))
7: fact() -> app❆2_rec(mult(),app❆1_s(0()))
8: app(rec(),_1) ->= app❆1_rec(_1)
9: app(app❆1_rec(_1),_2) ->= app❆2_rec(_1,_2)
10: app(app❆2_rec(_1,_2),_3) ->= app❆3_rec(_1,_2,_3)
11: app(s(),_1) ->= app❆1_s(_1)
12: app(add(),_1) ->= app❆1_add(_1)
13: app(app❆1_add(_1),_2) ->= app❆2_add(_1,_2)
14: app(mult(),_1) ->= app❆1_mult(_1)
15: app(app❆1_mult(_1),_2) ->= app❆2_mult(_1,_2)
Number of strict rules: 7
Direct Order(PosReal,>,Poly) ... failed.
Dependency Pairs:
   #1: #app❆2_add(app❆1_s(x),y) -> #app❆2_add(x,y)
   #2: #app❆3_rec(f,x,app❆1_s(y)) -> #app(app(f,app❆1_s(y)),app❆3_rec(f,x,y))
   #3: #app❆3_rec(f,x,app❆1_s(y)) -> #app(f,app❆1_s(y))
   #4: #app❆3_rec(f,x,app❆1_s(y)) -> #app❆3_rec(f,x,y)
   #5: #app(app❆1_add(_1),_2) ->? #app❆2_add(_1,_2)
   #6: #app(app❆2_rec(_1,_2),_3) ->? #app❆3_rec(_1,_2,_3)
   #7: #app(app❆1_mult(_1),_2) ->? #app❆2_mult(_1,_2)
   #8: #app❆2_mult(app❆1_s(x),y) -> #app❆2_add(app❆2_mult(x,y),y)
   #9: #app❆2_mult(app❆1_s(x),y) -> #app❆2_mult(x,y)
Number of SCCs: 3, DPs: 6, edges: 10
	SCC { #1 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#app❆3_rec(x1,x2,x3)	weight: 0
app❆2_rec(x1,x2)	weight: 0
     s()	weight: 0
app❆3_rec(x1,x2,x3)	weight: 0
app❆2_mult(x1,x2)	weight: 0
app❆2_add(x1,x2)	weight: 0
#fact()	weight: 0
  mult()	weight: 0
     0()	weight: 0
   rec()	weight: 0
#app❆2_mult(x1,x2)	weight: 0
  fact()	weight: 0
app❆1_rec(x1)	weight: 0
 #app(x1,x2)	weight: 0
#app❆2_add(x1,x2)	weight: x1
   add()	weight: 0
app❆1_add(x1)	weight: 0
app❆1_s(x1)	weight: (/ 1 2) + x1
app❆1_mult(x1)	weight: 0
   app(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #1
Number of SCCs: 2, DPs: 5, edges: 9
	SCC { #9 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#app❆3_rec(x1,x2,x3)	weight: 0
app❆2_rec(x1,x2)	weight: 0
     s()	weight: 0
app❆3_rec(x1,x2,x3)	weight: 0
app❆2_mult(x1,x2)	weight: 0
app❆2_add(x1,x2)	weight: 0
#fact()	weight: 0
  mult()	weight: 0
     0()	weight: 0
   rec()	weight: 0
#app❆2_mult(x1,x2)	weight: x1
  fact()	weight: 0
app❆1_rec(x1)	weight: 0
 #app(x1,x2)	weight: 0
#app❆2_add(x1,x2)	weight: 0
   add()	weight: 0
app❆1_add(x1)	weight: 0
app❆1_s(x1)	weight: (/ 1 2) + x1
app❆1_mult(x1)	weight: 0
   app(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #9
Number of SCCs: 1, DPs: 4, edges: 8
	SCC { #2..4 #6 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... succeeded.
#app❆3_rec(x1,x2,x3)	weight: max{0, (/ 3 8) + x1}
app❆2_rec(x1,x2)	weight: max{x2, (/ 1 4) + x1}
     s()	weight: 0
app❆3_rec(x1,x2,x3)	weight: max{0, (/ 1 8) + x2, (/ 1 2) + x1}
app❆2_mult(x1,x2)	weight: max{0, x2}
app❆2_add(x1,x2)	weight: max{0, x2}
#fact()	weight: 0
  mult()	weight: 0
     0()	weight: 0
   rec()	weight: 0
#app❆2_mult(x1,x2)	weight: 0
  fact()	weight: 0
app❆1_rec(x1)	weight: x1
 #app(x1,x2)	weight: max{0, (/ 1 8) + x1}
#app❆2_add(x1,x2)	weight: 0
   add()	weight: 0
app❆1_add(x1)	weight: (/ 1 8)
app❆1_s(x1)	weight: 0
app❆1_mult(x1)	weight: 0
   app(x1,x2)	weight: max{x2, (/ 1 4) + x1}
    Usable rules: { 1..6 8..15 }
    Removed DPs: #3
Number of SCCs: 1, DPs: 3, edges: 5
	SCC { #2 #4 #6 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
