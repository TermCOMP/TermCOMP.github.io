Input TRS:
    1: active(zeros()) -> mark(cons(0(),zeros()))
    2: active(U11(tt(),L)) -> mark(s(length(L)))
    3: active(U21(tt())) -> mark(nil())
    4: active(U31(tt(),IL,M,N)) -> mark(cons(N,take(M,IL)))
    5: active(and(tt(),X)) -> mark(X)
    6: active(isNat(0())) -> mark(tt())
    7: active(isNat(length(V1))) -> mark(isNatList(V1))
    8: active(isNat(s(V1))) -> mark(isNat(V1))
    9: active(isNatIList(V)) -> mark(isNatList(V))
    10: active(isNatIList(zeros())) -> mark(tt())
    11: active(isNatIList(cons(V1,V2))) -> mark(and(isNat(V1),isNatIList(V2)))
    12: active(isNatList(nil())) -> mark(tt())
    13: active(isNatList(cons(V1,V2))) -> mark(and(isNat(V1),isNatList(V2)))
    14: active(isNatList(take(V1,V2))) -> mark(and(isNat(V1),isNatIList(V2)))
    15: active(length(nil())) -> mark(0())
    16: active(length(cons(N,L))) -> mark(U11(and(isNatList(L),isNat(N)),L))
    17: active(take(0(),IL)) -> mark(U21(isNatIList(IL)))
    18: active(take(s(M),cons(N,IL))) -> mark(U31(and(isNatIList(IL),and(isNat(M),isNat(N))),IL,M,N))
    19: active(cons(X1,X2)) -> cons(active(X1),X2)
    20: active(U11(X1,X2)) -> U11(active(X1),X2)
    21: active(s(X)) -> s(active(X))
    22: active(length(X)) -> length(active(X))
    23: active(U21(X)) -> U21(active(X))
    24: active(U31(X1,X2,X3,X4)) -> U31(active(X1),X2,X3,X4)
    25: active(take(X1,X2)) -> take(active(X1),X2)
    26: active(take(X1,X2)) -> take(X1,active(X2))
    27: active(and(X1,X2)) -> and(active(X1),X2)
    28: cons(mark(X1),X2) -> mark(cons(X1,X2))
    29: U11(mark(X1),X2) -> mark(U11(X1,X2))
    30: s(mark(X)) -> mark(s(X))
    31: length(mark(X)) -> mark(length(X))
    32: U21(mark(X)) -> mark(U21(X))
    33: U31(mark(X1),X2,X3,X4) -> mark(U31(X1,X2,X3,X4))
    34: take(mark(X1),X2) -> mark(take(X1,X2))
    35: take(X1,mark(X2)) -> mark(take(X1,X2))
    36: and(mark(X1),X2) -> mark(and(X1,X2))
    37: proper(zeros()) -> ok(zeros())
    38: proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
    39: proper(0()) -> ok(0())
    40: proper(U11(X1,X2)) -> U11(proper(X1),proper(X2))
    41: proper(tt()) -> ok(tt())
    42: proper(s(X)) -> s(proper(X))
    43: proper(length(X)) -> length(proper(X))
    44: proper(U21(X)) -> U21(proper(X))
    45: proper(nil()) -> ok(nil())
    46: proper(U31(X1,X2,X3,X4)) -> U31(proper(X1),proper(X2),proper(X3),proper(X4))
    47: proper(take(X1,X2)) -> take(proper(X1),proper(X2))
    48: proper(and(X1,X2)) -> and(proper(X1),proper(X2))
    49: proper(isNat(X)) -> isNat(proper(X))
    50: proper(isNatList(X)) -> isNatList(proper(X))
    51: proper(isNatIList(X)) -> isNatIList(proper(X))
    52: cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
    53: U11(ok(X1),ok(X2)) -> ok(U11(X1,X2))
    54: s(ok(X)) -> ok(s(X))
    55: length(ok(X)) -> ok(length(X))
    56: U21(ok(X)) -> ok(U21(X))
    57: U31(ok(X1),ok(X2),ok(X3),ok(X4)) -> ok(U31(X1,X2,X3,X4))
    58: take(ok(X1),ok(X2)) -> ok(take(X1,X2))
    59: and(ok(X1),ok(X2)) -> ok(and(X1,X2))
    60: isNat(ok(X)) -> ok(isNat(X))
    61: isNatList(ok(X)) -> ok(isNatList(X))
    62: isNatIList(ok(X)) -> ok(isNatIList(X))
    63: top(mark(X)) -> top(proper(X))
    64: top(ok(X)) -> top(active(X))
Number of strict rules: 64
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #active(U11(tt(),L)) -> #s(length(L))
   #2: #active(U11(tt(),L)) -> #length(L)
   #3: #proper(length(X)) -> #length(proper(X))
   #4: #proper(length(X)) -> #proper(X)
   #5: #U11(mark(X1),X2) -> #U11(X1,X2)
   #6: #take(X1,mark(X2)) -> #take(X1,X2)
   #7: #proper(U31(X1,X2,X3,X4)) -> #U31(proper(X1),proper(X2),proper(X3),proper(X4))
   #8: #proper(U31(X1,X2,X3,X4)) -> #proper(X1)
   #9: #proper(U31(X1,X2,X3,X4)) -> #proper(X2)
   #10: #proper(U31(X1,X2,X3,X4)) -> #proper(X3)
   #11: #proper(U31(X1,X2,X3,X4)) -> #proper(X4)
   #12: #proper(s(X)) -> #s(proper(X))
   #13: #proper(s(X)) -> #proper(X)
   #14: #proper(take(X1,X2)) -> #take(proper(X1),proper(X2))
   #15: #proper(take(X1,X2)) -> #proper(X1)
   #16: #proper(take(X1,X2)) -> #proper(X2)
   #17: #U11(ok(X1),ok(X2)) -> #U11(X1,X2)
   #18: #proper(and(X1,X2)) -> #and(proper(X1),proper(X2))
   #19: #proper(and(X1,X2)) -> #proper(X1)
   #20: #proper(and(X1,X2)) -> #proper(X2)
   #21: #take(ok(X1),ok(X2)) -> #take(X1,X2)
   #22: #isNatList(ok(X)) -> #isNatList(X)
   #23: #proper(cons(X1,X2)) -> #cons(proper(X1),proper(X2))
   #24: #proper(cons(X1,X2)) -> #proper(X1)
   #25: #proper(cons(X1,X2)) -> #proper(X2)
   #26: #and(ok(X1),ok(X2)) -> #and(X1,X2)
   #27: #length(ok(X)) -> #length(X)
   #28: #proper(U11(X1,X2)) -> #U11(proper(X1),proper(X2))
   #29: #proper(U11(X1,X2)) -> #proper(X1)
   #30: #proper(U11(X1,X2)) -> #proper(X2)
   #31: #proper(isNatIList(X)) -> #isNatIList(proper(X))
   #32: #proper(isNatIList(X)) -> #proper(X)
   #33: #active(isNatList(cons(V1,V2))) -> #and(isNat(V1),isNatList(V2))
   #34: #active(isNatList(cons(V1,V2))) -> #isNat(V1)
   #35: #active(isNatList(cons(V1,V2))) -> #isNatList(V2)
   #36: #active(isNatIList(V)) -> #isNatList(V)
   #37: #active(isNatIList(cons(V1,V2))) -> #and(isNat(V1),isNatIList(V2))
   #38: #active(isNatIList(cons(V1,V2))) -> #isNat(V1)
   #39: #active(isNatIList(cons(V1,V2))) -> #isNatIList(V2)
   #40: #U31(ok(X1),ok(X2),ok(X3),ok(X4)) -> #U31(X1,X2,X3,X4)
   #41: #active(U31(X1,X2,X3,X4)) -> #U31(active(X1),X2,X3,X4)
   #42: #active(U31(X1,X2,X3,X4)) -> #active(X1)
   #43: #active(U21(X)) -> #U21(active(X))
   #44: #active(U21(X)) -> #active(X)
   #45: #length(mark(X)) -> #length(X)
   #46: #U21(ok(X)) -> #U21(X)
   #47: #active(isNatList(take(V1,V2))) -> #and(isNat(V1),isNatIList(V2))
   #48: #active(isNatList(take(V1,V2))) -> #isNat(V1)
   #49: #active(isNatList(take(V1,V2))) -> #isNatIList(V2)
   #50: #isNatIList(ok(X)) -> #isNatIList(X)
   #51: #s(mark(X)) -> #s(X)
   #52: #cons(ok(X1),ok(X2)) -> #cons(X1,X2)
   #53: #proper(isNat(X)) -> #isNat(proper(X))
   #54: #proper(isNat(X)) -> #proper(X)
   #55: #active(take(X1,X2)) -> #take(active(X1),X2)
   #56: #active(take(X1,X2)) -> #active(X1)
   #57: #active(U11(X1,X2)) -> #U11(active(X1),X2)
   #58: #active(U11(X1,X2)) -> #active(X1)
   #59: #active(isNat(length(V1))) -> #isNatList(V1)
   #60: #top(ok(X)) -> #top(active(X))
   #61: #top(ok(X)) -> #active(X)
   #62: #U31(mark(X1),X2,X3,X4) -> #U31(X1,X2,X3,X4)
   #63: #proper(U21(X)) -> #U21(proper(X))
   #64: #proper(U21(X)) -> #proper(X)
   #65: #cons(mark(X1),X2) -> #cons(X1,X2)
   #66: #active(length(X)) -> #length(active(X))
   #67: #active(length(X)) -> #active(X)
   #68: #take(mark(X1),X2) -> #take(X1,X2)
   #69: #active(and(X1,X2)) -> #and(active(X1),X2)
   #70: #active(and(X1,X2)) -> #active(X1)
   #71: #isNat(ok(X)) -> #isNat(X)
   #72: #active(take(0(),IL)) -> #U21(isNatIList(IL))
   #73: #active(take(0(),IL)) -> #isNatIList(IL)
   #74: #U21(mark(X)) -> #U21(X)
   #75: #active(cons(X1,X2)) -> #cons(active(X1),X2)
   #76: #active(cons(X1,X2)) -> #active(X1)
   #77: #top(mark(X)) -> #top(proper(X))
   #78: #top(mark(X)) -> #proper(X)
   #79: #active(take(X1,X2)) -> #take(X1,active(X2))
   #80: #active(take(X1,X2)) -> #active(X2)
   #81: #and(mark(X1),X2) -> #and(X1,X2)
   #82: #active(s(X)) -> #s(active(X))
   #83: #active(s(X)) -> #active(X)
   #84: #active(length(cons(N,L))) -> #U11(and(isNatList(L),isNat(N)),L)
   #85: #active(length(cons(N,L))) -> #and(isNatList(L),isNat(N))
   #86: #active(length(cons(N,L))) -> #isNatList(L)
   #87: #active(length(cons(N,L))) -> #isNat(N)
   #88: #active(zeros()) -> #cons(0(),zeros())
   #89: #s(ok(X)) -> #s(X)
   #90: #active(isNat(s(V1))) -> #isNat(V1)
   #91: #active(U31(tt(),IL,M,N)) -> #cons(N,take(M,IL))
   #92: #active(U31(tt(),IL,M,N)) -> #take(M,IL)
   #93: #proper(isNatList(X)) -> #isNatList(proper(X))
   #94: #proper(isNatList(X)) -> #proper(X)
   #95: #active(take(s(M),cons(N,IL))) -> #U31(and(isNatIList(IL),and(isNat(M),isNat(N))),IL,M,N)
   #96: #active(take(s(M),cons(N,IL))) -> #and(isNatIList(IL),and(isNat(M),isNat(N)))
   #97: #active(take(s(M),cons(N,IL))) -> #isNatIList(IL)
   #98: #active(take(s(M),cons(N,IL))) -> #and(isNat(M),isNat(N))
   #99: #active(take(s(M),cons(N,IL))) -> #isNat(M)
   #100: #active(take(s(M),cons(N,IL))) -> #isNat(N)
Number of SCCs: 14, DPs: 49, edges: 449
	SCC { #22 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
   U21(x1)	weight: 0
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#isNat(x1)	weight: 0
#take(x1,x2)	weight: 0
  take(x1,x2)	weight: 0
   top(x1)	weight: 0
   and(x1,x2)	weight: 0
isNatIList(x1)	weight: 0
 #top(x1)	weight: 0
 zeros()	weight: 0
proper(x1)	weight: 0
    ok(x1)	weight: (/ 1 2) + x1
     0()	weight: 0
#isNatList(x1)	weight: x1
   #s(x1)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: 0
#proper(x1)	weight: 0
 isNat(x1)	weight: 0
 #U11(x1,x2)	weight: 0
active(x1)	weight: 0
   U31(x1,x2,x3,x4)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#isNatIList(x1)	weight: 0
 #U21(x1)	weight: 0
    tt()	weight: 0
length(x1)	weight: 0
#length(x1)	weight: 0
 #U31(x1,x2,x3,x4)	weight: 0
 #and(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #22
Number of SCCs: 13, DPs: 48, edges: 448
	SCC { #71 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
   U21(x1)	weight: 0
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#isNat(x1)	weight: x1
#take(x1,x2)	weight: 0
  take(x1,x2)	weight: 0
   top(x1)	weight: 0
   and(x1,x2)	weight: 0
isNatIList(x1)	weight: 0
 #top(x1)	weight: 0
 zeros()	weight: 0
proper(x1)	weight: 0
    ok(x1)	weight: (/ 1 2) + x1
     0()	weight: 0
#isNatList(x1)	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: 0
#proper(x1)	weight: 0
 isNat(x1)	weight: 0
 #U11(x1,x2)	weight: 0
active(x1)	weight: 0
   U31(x1,x2,x3,x4)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#isNatIList(x1)	weight: 0
 #U21(x1)	weight: 0
    tt()	weight: 0
length(x1)	weight: 0
#length(x1)	weight: 0
 #U31(x1,x2,x3,x4)	weight: 0
 #and(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #71
Number of SCCs: 12, DPs: 47, edges: 447
	SCC { #50 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
   U21(x1)	weight: 0
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#isNat(x1)	weight: 0
#take(x1,x2)	weight: 0
  take(x1,x2)	weight: 0
   top(x1)	weight: 0
   and(x1,x2)	weight: 0
isNatIList(x1)	weight: 0
 #top(x1)	weight: 0
 zeros()	weight: 0
proper(x1)	weight: 0
    ok(x1)	weight: (/ 1 2) + x1
     0()	weight: 0
#isNatList(x1)	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: 0
#proper(x1)	weight: 0
 isNat(x1)	weight: 0
 #U11(x1,x2)	weight: 0
active(x1)	weight: 0
   U31(x1,x2,x3,x4)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#isNatIList(x1)	weight: x1
 #U21(x1)	weight: 0
    tt()	weight: 0
length(x1)	weight: 0
#length(x1)	weight: 0
 #U31(x1,x2,x3,x4)	weight: 0
 #and(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #50
Number of SCCs: 11, DPs: 46, edges: 446
	SCC { #46 #74 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
   U21(x1)	weight: 0
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#isNat(x1)	weight: 0
#take(x1,x2)	weight: 0
  take(x1,x2)	weight: 0
   top(x1)	weight: 0
   and(x1,x2)	weight: 0
isNatIList(x1)	weight: 0
 #top(x1)	weight: 0
 zeros()	weight: 0
proper(x1)	weight: 0
    ok(x1)	weight: (/ 1 2) + x1
     0()	weight: 0
#isNatList(x1)	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
#proper(x1)	weight: 0
 isNat(x1)	weight: 0
 #U11(x1,x2)	weight: 0
active(x1)	weight: 0
   U31(x1,x2,x3,x4)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#isNatIList(x1)	weight: 0
 #U21(x1)	weight: x1
    tt()	weight: 0
length(x1)	weight: 0
#length(x1)	weight: 0
 #U31(x1,x2,x3,x4)	weight: 0
 #and(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #46 #74
Number of SCCs: 10, DPs: 44, edges: 442
	SCC { #51 #89 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
   U21(x1)	weight: 0
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#isNat(x1)	weight: 0
#take(x1,x2)	weight: 0
  take(x1,x2)	weight: 0
   top(x1)	weight: 0
   and(x1,x2)	weight: 0
isNatIList(x1)	weight: 0
 #top(x1)	weight: 0
 zeros()	weight: 0
proper(x1)	weight: 0
    ok(x1)	weight: (/ 1 2) + x1
     0()	weight: 0
#isNatList(x1)	weight: 0
   #s(x1)	weight: x1
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
#proper(x1)	weight: 0
 isNat(x1)	weight: 0
 #U11(x1,x2)	weight: 0
active(x1)	weight: 0
   U31(x1,x2,x3,x4)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#isNatIList(x1)	weight: 0
 #U21(x1)	weight: 0
    tt()	weight: 0
length(x1)	weight: 0
#length(x1)	weight: 0
 #U31(x1,x2,x3,x4)	weight: 0
 #and(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #51 #89
Number of SCCs: 9, DPs: 42, edges: 438
	SCC { #27 #45 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
   U21(x1)	weight: 0
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#isNat(x1)	weight: 0
#take(x1,x2)	weight: 0
  take(x1,x2)	weight: 0
   top(x1)	weight: 0
   and(x1,x2)	weight: 0
isNatIList(x1)	weight: 0
 #top(x1)	weight: 0
 zeros()	weight: 0
proper(x1)	weight: 0
    ok(x1)	weight: (/ 1 2) + x1
     0()	weight: 0
#isNatList(x1)	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
#proper(x1)	weight: 0
 isNat(x1)	weight: 0
 #U11(x1,x2)	weight: 0
active(x1)	weight: 0
   U31(x1,x2,x3,x4)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#isNatIList(x1)	weight: 0
 #U21(x1)	weight: 0
    tt()	weight: 0
length(x1)	weight: 0
#length(x1)	weight: x1
 #U31(x1,x2,x3,x4)	weight: 0
 #and(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #27 #45
Number of SCCs: 8, DPs: 40, edges: 434
	SCC { #60 #77 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
