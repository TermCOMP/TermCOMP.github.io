Input TRS:
    1: plus(0(),y) -> y
    2: plus(s(x),y) -> s(plus(x,y))
    3: lt(0(),s(y)) -> true()
    4: lt(x,0()) -> false()
    5: lt(s(x),s(y)) -> lt(x,y)
    6: fib(x) -> fibiter(x,0(),0(),s(0()))
    7: fibiter(b,c,x,y) -> if(lt(c,b),b,c,x,y)
    8: if(false(),b,c,x,y) -> x
    9: if(true(),b,c,x,y) -> fibiter(b,s(c),y,plus(x,y))
Number of strict rules: 9
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #plus(s(x),y) -> #plus(x,y)
   #2: #fib(x) -> #fibiter(x,0(),0(),s(0()))
   #3: #if(true(),b,c,x,y) -> #fibiter(b,s(c),y,plus(x,y))
   #4: #if(true(),b,c,x,y) -> #plus(x,y)
   #5: #fibiter(b,c,x,y) -> #if(lt(c,b),b,c,x,y)
   #6: #fibiter(b,c,x,y) -> #lt(c,b)
   #7: #lt(s(x),s(y)) -> #lt(x,y)
Number of SCCs: 3, DPs: 4, edges: 4
	SCC { #1 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 1 2) + x1
  #lt(x1,x2)	weight: 0
#plus(x1,x2)	weight: x1
 false()	weight: 0
#fibiter(x1,x2,x3,x4)	weight: 0
fibiter(x1,x2,x3,x4)	weight: 0
  true()	weight: 0
   fib(x1)	weight: 0
     0()	weight: 0
    if(x1,x2,x3,x4,x5)	weight: 0
  plus(x1,x2)	weight: 0
  #if(x1,x2,x3,x4,x5)	weight: 0
 #fib(x1)	weight: 0
    lt(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #1
Number of SCCs: 2, DPs: 3, edges: 3
	SCC { #7 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 1 2) + x1
  #lt(x1,x2)	weight: x2
#plus(x1,x2)	weight: 0
 false()	weight: 0
#fibiter(x1,x2,x3,x4)	weight: 0
fibiter(x1,x2,x3,x4)	weight: 0
  true()	weight: 0
   fib(x1)	weight: 0
     0()	weight: 0
    if(x1,x2,x3,x4,x5)	weight: 0
  plus(x1,x2)	weight: 0
  #if(x1,x2,x3,x4,x5)	weight: 0
 #fib(x1)	weight: 0
    lt(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #7
Number of SCCs: 1, DPs: 2, edges: 2
	SCC { #3 #5 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
