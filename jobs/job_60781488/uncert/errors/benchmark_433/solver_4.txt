Input TRS:
    1: f(true(),x,y) -> f(gt(x,y),x,round(s(y)))
    2: round(0()) -> 0()
    3: round(s(0())) -> s(s(0()))
    4: round(s(s(x))) -> s(s(round(x)))
    5: gt(0(),v) -> false()
    6: gt(s(u),0()) -> true()
    7: gt(s(u),s(v)) -> gt(u,v)
Number of strict rules: 7
Direct Order(PosReal,>,Poly) ... failed.
Freezing round
1: f(true(),x,y) -> f(gt(x,y),x,round❆1_s(y))
2: round❆1_0() -> 0()
3: round❆1_s(0()) -> s(s(0()))
4: round❆1_s(s(x)) -> s(s(round(x)))
5: gt(0(),v) -> false()
6: gt(s(u),0()) -> true()
7: gt(s(u),s(v)) -> gt(u,v)
8: round(0()) ->= round❆1_0()
9: round(s(_1)) ->= round❆1_s(_1)
Number of strict rules: 7
Direct Order(PosReal,>,Poly) ... failed.
Dependency Pairs:
   #1: #round(s(_1)) ->? #round❆1_s(_1)
   #2: #gt(s(u),s(v)) -> #gt(u,v)
   #3: #f(true(),x,y) -> #f(gt(x,y),x,round❆1_s(y))
   #4: #f(true(),x,y) -> #gt(x,y)
   #5: #f(true(),x,y) -> #round❆1_s(y)
   #6: #round(0()) ->? #round❆1_0()
   #7: #round❆1_s(s(x)) -> #round(x)
Number of SCCs: 3, DPs: 4, edges: 4
	SCC { #2 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 1 2) + x1
#round❆1_s(x1)	weight: 0
    gt(x1,x2)	weight: 0
#round❆1_0()	weight: 0
 false()	weight: 0
round❆1_0()	weight: 0
  true()	weight: 0
     f(x1,x2,x3)	weight: 0
     0()	weight: 0
  #gt(x1,x2)	weight: x2
   #f(x1,x2,x3)	weight: 0
 round(x1)	weight: 0
round❆1_s(x1)	weight: 0
#round(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #2
Number of SCCs: 2, DPs: 3, edges: 3
	SCC { #1 #7 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 1 2) + x1
#round❆1_s(x1)	weight: x1
    gt(x1,x2)	weight: 0
#round❆1_0()	weight: 0
 false()	weight: 0
round❆1_0()	weight: 0
  true()	weight: 0
     f(x1,x2,x3)	weight: 0
     0()	weight: 0
  #gt(x1,x2)	weight: 0
   #f(x1,x2,x3)	weight: 0
 round(x1)	weight: 0
round❆1_s(x1)	weight: 0
#round(x1)	weight: x1
    Usable rules: { }
    Removed DPs: #1 #7
Number of SCCs: 1, DPs: 1, edges: 1
	SCC { #3 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
