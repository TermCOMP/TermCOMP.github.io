Input TRS:
    1: lt(0(),s(x)) -> true()
    2: lt(x,0()) -> false()
    3: lt(s(x),s(y)) -> lt(x,y)
    4: minus(x,y) -> help(lt(y,x),x,y)
    5: help(true(),x,y) -> s(minus(x,s(y)))
    6: help(false(),x,y) -> 0()
Number of strict rules: 6
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #help(true(),x,y) -> #minus(x,s(y))
   #2: #lt(s(x),s(y)) -> #lt(x,y)
   #3: #minus(x,y) -> #help(lt(y,x),x,y)
   #4: #minus(x,y) -> #lt(y,x)
Number of SCCs: 2, DPs: 3, edges: 3
	SCC { #2 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 1 2) + x1
  #lt(x1,x2)	weight: x2
 minus(x1,x2)	weight: 0
#help(x1,x2,x3)	weight: 0
 false()	weight: 0
  true()	weight: 0
     0()	weight: 0
#minus(x1,x2)	weight: 0
  help(x1,x2,x3)	weight: 0
    lt(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #2
Number of SCCs: 1, DPs: 2, edges: 2
	SCC { #1 #3 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
