Input TRS:
    1: filter(cons(X,Y),0(),M) -> cons(0(),filter(Y,M,M))
    2: filter(cons(X,Y),s(N),M) -> cons(X,filter(Y,N,M))
    3: sieve(cons(0(),Y)) -> cons(0(),sieve(Y))
    4: sieve(cons(s(N),Y)) -> cons(s(N),sieve(filter(Y,N,N)))
    5: nats(N) -> cons(N,nats(s(N)))
    6: zprimes() -> sieve(nats(s(s(0()))))
Number of strict rules: 6
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #filter(cons(X,Y),s(N),M) -> #filter(Y,N,M)
   #2: #zprimes() -> #sieve(nats(s(s(0()))))
   #3: #zprimes() -> #nats(s(s(0())))
   #4: #nats(N) -> #nats(s(N))
   #5: #sieve(cons(0(),Y)) -> #sieve(Y)
   #6: #filter(cons(X,Y),0(),M) -> #filter(Y,M,M)
   #7: #sieve(cons(s(N),Y)) -> #sieve(filter(Y,N,N))
   #8: #sieve(cons(s(N),Y)) -> #filter(Y,N,N)
Number of SCCs: 3, DPs: 5, edges: 9
	SCC { #4 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  found.
  #nats(N)	-#4->
  #nats(s(N))	--->*
  #nats(s(N))
  Looping with: [ N := s(N); ]
