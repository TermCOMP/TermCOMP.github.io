Input TRS:
    1: active(and(true(),X)) -> mark(X)
    2: active(and(false(),Y)) -> mark(false())
    3: active(if(true(),X,Y)) -> mark(X)
    4: active(if(false(),X,Y)) -> mark(Y)
    5: active(add(0(),X)) -> mark(X)
    6: active(add(s(X),Y)) -> mark(s(add(X,Y)))
    7: active(first(0(),X)) -> mark(nil())
    8: active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
    9: active(from(X)) -> mark(cons(X,from(s(X))))
    10: mark(and(X1,X2)) -> active(and(mark(X1),X2))
    11: mark(true()) -> active(true())
    12: mark(false()) -> active(false())
    13: mark(if(X1,X2,X3)) -> active(if(mark(X1),X2,X3))
    14: mark(add(X1,X2)) -> active(add(mark(X1),X2))
    15: mark(0()) -> active(0())
    16: mark(s(X)) -> active(s(X))
    17: mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
    18: mark(nil()) -> active(nil())
    19: mark(cons(X1,X2)) -> active(cons(X1,X2))
    20: mark(from(X)) -> active(from(X))
    21: and(mark(X1),X2) -> and(X1,X2)
    22: and(X1,mark(X2)) -> and(X1,X2)
    23: and(active(X1),X2) -> and(X1,X2)
    24: and(X1,active(X2)) -> and(X1,X2)
    25: if(mark(X1),X2,X3) -> if(X1,X2,X3)
    26: if(X1,mark(X2),X3) -> if(X1,X2,X3)
    27: if(X1,X2,mark(X3)) -> if(X1,X2,X3)
    28: if(active(X1),X2,X3) -> if(X1,X2,X3)
    29: if(X1,active(X2),X3) -> if(X1,X2,X3)
    30: if(X1,X2,active(X3)) -> if(X1,X2,X3)
    31: add(mark(X1),X2) -> add(X1,X2)
    32: add(X1,mark(X2)) -> add(X1,X2)
    33: add(active(X1),X2) -> add(X1,X2)
    34: add(X1,active(X2)) -> add(X1,X2)
    35: s(mark(X)) -> s(X)
    36: s(active(X)) -> s(X)
    37: first(mark(X1),X2) -> first(X1,X2)
    38: first(X1,mark(X2)) -> first(X1,X2)
    39: first(active(X1),X2) -> first(X1,X2)
    40: first(X1,active(X2)) -> first(X1,X2)
    41: cons(mark(X1),X2) -> cons(X1,X2)
    42: cons(X1,mark(X2)) -> cons(X1,X2)
    43: cons(active(X1),X2) -> cons(X1,X2)
    44: cons(X1,active(X2)) -> cons(X1,X2)
    45: from(mark(X)) -> from(X)
    46: from(active(X)) -> from(X)
Number of strict rules: 46
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #active(and(false(),Y)) -> #mark(false())
   #2: #cons(active(X1),X2) -> #cons(X1,X2)
   #3: #if(X1,active(X2),X3) -> #if(X1,X2,X3)
   #4: #s(mark(X)) -> #s(X)
   #5: #from(active(X)) -> #from(X)
   #6: #cons(X1,mark(X2)) -> #cons(X1,X2)
   #7: #cons(mark(X1),X2) -> #cons(X1,X2)
   #8: #first(mark(X1),X2) -> #first(X1,X2)
   #9: #first(X1,mark(X2)) -> #first(X1,X2)
   #10: #active(add(s(X),Y)) -> #mark(s(add(X,Y)))
   #11: #active(add(s(X),Y)) -> #s(add(X,Y))
   #12: #active(add(s(X),Y)) -> #add(X,Y)
   #13: #first(X1,active(X2)) -> #first(X1,X2)
   #14: #mark(if(X1,X2,X3)) -> #active(if(mark(X1),X2,X3))
   #15: #mark(if(X1,X2,X3)) -> #if(mark(X1),X2,X3)
   #16: #mark(if(X1,X2,X3)) -> #mark(X1)
   #17: #active(from(X)) -> #mark(cons(X,from(s(X))))
   #18: #active(from(X)) -> #cons(X,from(s(X)))
   #19: #active(from(X)) -> #from(s(X))
   #20: #active(from(X)) -> #s(X)
   #21: #mark(true()) -> #active(true())
   #22: #and(X1,active(X2)) -> #and(X1,X2)
   #23: #and(active(X1),X2) -> #and(X1,X2)
   #24: #from(mark(X)) -> #from(X)
   #25: #mark(false()) -> #active(false())
   #26: #add(mark(X1),X2) -> #add(X1,X2)
   #27: #mark(add(X1,X2)) -> #active(add(mark(X1),X2))
   #28: #mark(add(X1,X2)) -> #add(mark(X1),X2)
   #29: #mark(add(X1,X2)) -> #mark(X1)
   #30: #if(X1,X2,active(X3)) -> #if(X1,X2,X3)
   #31: #if(mark(X1),X2,X3) -> #if(X1,X2,X3)
   #32: #mark(from(X)) -> #active(from(X))
   #33: #active(first(0(),X)) -> #mark(nil())
   #34: #first(active(X1),X2) -> #first(X1,X2)
   #35: #mark(and(X1,X2)) -> #active(and(mark(X1),X2))
   #36: #mark(and(X1,X2)) -> #and(mark(X1),X2)
   #37: #mark(and(X1,X2)) -> #mark(X1)
   #38: #add(active(X1),X2) -> #add(X1,X2)
   #39: #active(add(0(),X)) -> #mark(X)
   #40: #cons(X1,active(X2)) -> #cons(X1,X2)
   #41: #if(active(X1),X2,X3) -> #if(X1,X2,X3)
   #42: #and(X1,mark(X2)) -> #and(X1,X2)
   #43: #add(X1,active(X2)) -> #add(X1,X2)
   #44: #if(X1,X2,mark(X3)) -> #if(X1,X2,X3)
   #45: #mark(first(X1,X2)) -> #active(first(mark(X1),mark(X2)))
   #46: #mark(first(X1,X2)) -> #first(mark(X1),mark(X2))
   #47: #mark(first(X1,X2)) -> #mark(X1)
   #48: #mark(first(X1,X2)) -> #mark(X2)
   #49: #add(X1,mark(X2)) -> #add(X1,X2)
   #50: #mark(cons(X1,X2)) -> #active(cons(X1,X2))
   #51: #if(X1,mark(X2),X3) -> #if(X1,X2,X3)
   #52: #s(active(X)) -> #s(X)
   #53: #and(mark(X1),X2) -> #and(X1,X2)
   #54: #mark(s(X)) -> #active(s(X))
   #55: #active(if(true(),X,Y)) -> #mark(X)
   #56: #active(and(true(),X)) -> #mark(X)
   #57: #active(first(s(X),cons(Y,Z))) -> #mark(cons(Y,first(X,Z)))
   #58: #active(first(s(X),cons(Y,Z))) -> #cons(Y,first(X,Z))
   #59: #active(first(s(X),cons(Y,Z))) -> #first(X,Z)
   #60: #mark(0()) -> #active(0())
   #61: #active(if(false(),X,Y)) -> #mark(Y)
   #62: #mark(nil()) -> #active(nil())
Number of SCCs: 8, DPs: 38, edges: 184
	SCC { #4 #52 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
   and(x1,x2)	weight: 0
 false()	weight: 0
  true()	weight: 0
#mark(x1)	weight: 0
    if(x1,x2,x3)	weight: 0
     0()	weight: 0
  from(x1)	weight: 0
   #s(x1)	weight: x1
#first(x1,x2)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
 first(x1,x2)	weight: 0
#from(x1)	weight: 0
active(x1)	weight: (/ 1 2) + x1
  cons(x1,x2)	weight: 0
  #if(x1,x2,x3)	weight: 0
#active(x1)	weight: 0
 #add(x1,x2)	weight: 0
   add(x1,x2)	weight: 0
 #and(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #4 #52
Number of SCCs: 7, DPs: 36, edges: 180
	SCC { #5 #24 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
   and(x1,x2)	weight: 0
 false()	weight: 0
  true()	weight: 0
#mark(x1)	weight: 0
    if(x1,x2,x3)	weight: 0
     0()	weight: 0
  from(x1)	weight: 0
   #s(x1)	weight: 0
#first(x1,x2)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
 first(x1,x2)	weight: 0
#from(x1)	weight: x1
active(x1)	weight: (/ 1 2) + x1
  cons(x1,x2)	weight: 0
  #if(x1,x2,x3)	weight: 0
#active(x1)	weight: 0
 #add(x1,x2)	weight: 0
   add(x1,x2)	weight: 0
 #and(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #5 #24
Number of SCCs: 6, DPs: 34, edges: 176
	SCC { #2 #6 #7 #40 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#cons(x1,x2)	weight: x2
     s(x1)	weight: 0
   and(x1,x2)	weight: 0
 false()	weight: 0
  true()	weight: 0
#mark(x1)	weight: 0
    if(x1,x2,x3)	weight: 0
     0()	weight: 0
  from(x1)	weight: 0
   #s(x1)	weight: 0
#first(x1,x2)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
 first(x1,x2)	weight: 0
#from(x1)	weight: 0
active(x1)	weight: (/ 1 2) + x1
  cons(x1,x2)	weight: 0
  #if(x1,x2,x3)	weight: 0
#active(x1)	weight: 0
 #add(x1,x2)	weight: 0
   add(x1,x2)	weight: 0
 #and(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #6 #40
Number of SCCs: 6, DPs: 32, edges: 164
	SCC { #2 #7 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#cons(x1,x2)	weight: x1
     s(x1)	weight: 0
   and(x1,x2)	weight: 0
 false()	weight: 0
  true()	weight: 0
#mark(x1)	weight: 0
    if(x1,x2,x3)	weight: 0
     0()	weight: 0
  from(x1)	weight: 0
   #s(x1)	weight: 0
#first(x1,x2)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
 first(x1,x2)	weight: 0
#from(x1)	weight: 0
active(x1)	weight: (/ 1 2) + x1
  cons(x1,x2)	weight: 0
  #if(x1,x2,x3)	weight: 0
#active(x1)	weight: 0
 #add(x1,x2)	weight: 0
   add(x1,x2)	weight: 0
 #and(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #2 #7
Number of SCCs: 5, DPs: 30, edges: 160
	SCC { #26 #38 #43 #49 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
   and(x1,x2)	weight: 0
 false()	weight: 0
  true()	weight: 0
#mark(x1)	weight: 0
    if(x1,x2,x3)	weight: 0
     0()	weight: 0
  from(x1)	weight: 0
   #s(x1)	weight: 0
#first(x1,x2)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
 first(x1,x2)	weight: 0
#from(x1)	weight: 0
active(x1)	weight: (/ 1 2) + x1
  cons(x1,x2)	weight: 0
  #if(x1,x2,x3)	weight: 0
#active(x1)	weight: 0
 #add(x1,x2)	weight: x1
   add(x1,x2)	weight: 0
 #and(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #26 #38
Number of SCCs: 6, DPs: 28, edges: 148
	SCC { #43 #49 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
   and(x1,x2)	weight: 0
 false()	weight: 0
  true()	weight: 0
#mark(x1)	weight: 0
    if(x1,x2,x3)	weight: 0
     0()	weight: 0
  from(x1)	weight: 0
   #s(x1)	weight: 0
#first(x1,x2)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
 first(x1,x2)	weight: 0
#from(x1)	weight: 0
active(x1)	weight: (/ 1 2) + x1
  cons(x1,x2)	weight: 0
  #if(x1,x2,x3)	weight: 0
#active(x1)	weight: 0
 #add(x1,x2)	weight: x2
   add(x1,x2)	weight: 0
 #and(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #43 #49
Number of SCCs: 5, DPs: 26, edges: 144
	SCC { #8 #9 #13 #34 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
   and(x1,x2)	weight: 0
 false()	weight: 0
  true()	weight: 0
#mark(x1)	weight: 0
    if(x1,x2,x3)	weight: 0
     0()	weight: 0
  from(x1)	weight: 0
   #s(x1)	weight: 0
#first(x1,x2)	weight: x2
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
 first(x1,x2)	weight: 0
#from(x1)	weight: 0
active(x1)	weight: (/ 1 2) + x1
  cons(x1,x2)	weight: 0
  #if(x1,x2,x3)	weight: 0
#active(x1)	weight: 0
 #add(x1,x2)	weight: 0
   add(x1,x2)	weight: 0
 #and(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #9 #13
Number of SCCs: 6, DPs: 24, edges: 132
	SCC { #8 #34 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
   and(x1,x2)	weight: 0
 false()	weight: 0
  true()	weight: 0
#mark(x1)	weight: 0
    if(x1,x2,x3)	weight: 0
     0()	weight: 0
  from(x1)	weight: 0
   #s(x1)	weight: 0
#first(x1,x2)	weight: x1
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
 first(x1,x2)	weight: 0
#from(x1)	weight: 0
active(x1)	weight: (/ 1 2) + x1
  cons(x1,x2)	weight: 0
  #if(x1,x2,x3)	weight: 0
#active(x1)	weight: 0
 #add(x1,x2)	weight: 0
   add(x1,x2)	weight: 0
 #and(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #8 #34
Number of SCCs: 5, DPs: 22, edges: 128
	SCC { #22 #23 #42 #53 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
   and(x1,x2)	weight: 0
 false()	weight: 0
  true()	weight: 0
#mark(x1)	weight: 0
    if(x1,x2,x3)	weight: 0
     0()	weight: 0
  from(x1)	weight: 0
   #s(x1)	weight: 0
#first(x1,x2)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
 first(x1,x2)	weight: 0
#from(x1)	weight: 0
active(x1)	weight: (/ 1 2) + x1
  cons(x1,x2)	weight: 0
  #if(x1,x2,x3)	weight: 0
#active(x1)	weight: 0
 #add(x1,x2)	weight: 0
   add(x1,x2)	weight: 0
 #and(x1,x2)	weight: x1
    Usable rules: { }
    Removed DPs: #23 #53
Number of SCCs: 6, DPs: 20, edges: 116
	SCC { #22 #42 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
   and(x1,x2)	weight: 0
 false()	weight: 0
  true()	weight: 0
#mark(x1)	weight: 0
    if(x1,x2,x3)	weight: 0
     0()	weight: 0
  from(x1)	weight: 0
   #s(x1)	weight: 0
#first(x1,x2)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
 first(x1,x2)	weight: 0
#from(x1)	weight: 0
active(x1)	weight: (/ 1 2) + x1
  cons(x1,x2)	weight: 0
  #if(x1,x2,x3)	weight: 0
#active(x1)	weight: 0
 #add(x1,x2)	weight: 0
   add(x1,x2)	weight: 0
 #and(x1,x2)	weight: x2
    Usable rules: { }
    Removed DPs: #22 #42
Number of SCCs: 5, DPs: 18, edges: 112
	SCC { #3 #30 #31 #41 #44 #51 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
   and(x1,x2)	weight: 0
 false()	weight: 0
  true()	weight: 0
#mark(x1)	weight: 0
    if(x1,x2,x3)	weight: 0
     0()	weight: 0
  from(x1)	weight: 0
   #s(x1)	weight: 0
#first(x1,x2)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
 first(x1,x2)	weight: 0
#from(x1)	weight: 0
active(x1)	weight: (/ 1 2) + x1
  cons(x1,x2)	weight: 0
  #if(x1,x2,x3)	weight: x2 + x3
#active(x1)	weight: 0
 #add(x1,x2)	weight: 0
   add(x1,x2)	weight: 0
 #and(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #3 #30 #44 #51
Number of SCCs: 6, DPs: 14, edges: 80
	SCC { #31 #41 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
   and(x1,x2)	weight: 0
 false()	weight: 0
  true()	weight: 0
#mark(x1)	weight: 0
    if(x1,x2,x3)	weight: 0
     0()	weight: 0
  from(x1)	weight: 0
   #s(x1)	weight: 0
#first(x1,x2)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
 first(x1,x2)	weight: 0
#from(x1)	weight: 0
active(x1)	weight: (/ 1 2) + x1
  cons(x1,x2)	weight: 0
  #if(x1,x2,x3)	weight: x1
#active(x1)	weight: 0
 #add(x1,x2)	weight: 0
   add(x1,x2)	weight: 0
 #and(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #31 #41
Number of SCCs: 5, DPs: 12, edges: 76
	SCC { #14 #16 #27 #29 #35 #37 #39 #47 #48 #55 #56 #61 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#cons(x1,x2)	weight: 0
     s(x1)	weight: (/ 1 4)
   and(x1,x2)	weight: (/ 1 2) + x1 + x2
 false()	weight: 0
  true()	weight: 0
#mark(x1)	weight: (/ 1 4) + x1
    if(x1,x2,x3)	weight: (/ 1 2) + x1 + x2 + x3
     0()	weight: 0
  from(x1)	weight: (/ 1 4)
   #s(x1)	weight: 0
#first(x1,x2)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: x1
 first(x1,x2)	weight: (/ 1 4) + x1 + x2
#from(x1)	weight: 0
active(x1)	weight: x1
  cons(x1,x2)	weight: (/ 1 4)
  #if(x1,x2,x3)	weight: 0
#active(x1)	weight: x1
 #add(x1,x2)	weight: 0
   add(x1,x2)	weight: (/ 1 2) + x1 + x2
 #and(x1,x2)	weight: 0
    Usable rules: { 1..46 }
    Removed DPs: #14 #16 #27 #29 #35 #37 #39 #47 #48 #55 #56 #61
Number of SCCs: 5, DPs: 0, edges: 0
