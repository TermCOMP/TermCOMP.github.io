Input TRS:
    1: app(app(filter(),f),nil()) -> nil()
    2: app(app(filter(),f),app(app(cons(),y),ys)) -> app(app(app(filtersub(),app(f,y)),f),app(app(cons(),y),ys))
    3: app(app(app(filtersub(),true()),f),app(app(cons(),y),ys)) -> app(app(cons(),y),app(app(filter(),f),ys))
    4: app(app(app(filtersub(),false()),f),app(app(cons(),y),ys)) -> app(app(filter(),f),ys)
Number of strict rules: 4
Direct Order(PosReal,>,Poly) ... failed.
Freezing app
1: app❆2_filter(f,nil()) -> nil()
2: app❆2_filter(f,app❆2_cons(y,ys)) -> app❆3_filtersub(app(f,y),f,app❆2_cons(y,ys))
3: app❆3_filtersub(true(),f,app❆2_cons(y,ys)) -> app❆2_cons(y,app❆2_filter(f,ys))
4: app❆3_filtersub(false(),f,app❆2_cons(y,ys)) -> app❆2_filter(f,ys)
5: app(cons(),_1) ->= app❆1_cons(_1)
6: app(app❆1_cons(_1),_2) ->= app❆2_cons(_1,_2)
7: app(filter(),_1) ->= app❆1_filter(_1)
8: app(app❆1_filter(_1),_2) ->= app❆2_filter(_1,_2)
9: app(filtersub(),_1) ->= app❆1_filtersub(_1)
10: app(app❆1_filtersub(_1),_2) ->= app❆2_filtersub(_1,_2)
11: app(app❆2_filtersub(_1,_2),_3) ->= app❆3_filtersub(_1,_2,_3)
Number of strict rules: 4
Direct Order(PosReal,>,Poly) ... failed.
Dependency Pairs:
   #1: #app❆2_filter(f,app❆2_cons(y,ys)) -> #app❆3_filtersub(app(f,y),f,app❆2_cons(y,ys))
   #2: #app❆2_filter(f,app❆2_cons(y,ys)) -> #app(f,y)
   #3: #app(app❆2_filtersub(_1,_2),_3) ->? #app❆3_filtersub(_1,_2,_3)
   #4: #app❆3_filtersub(true(),f,app❆2_cons(y,ys)) -> #app❆2_filter(f,ys)
   #5: #app(app❆1_filter(_1),_2) ->? #app❆2_filter(_1,_2)
   #6: #app❆3_filtersub(false(),f,app❆2_cons(y,ys)) -> #app❆2_filter(f,ys)
Number of SCCs: 1, DPs: 5, edges: 7
	SCC { #2..6 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
app❆1_filtersub(x1)	weight: 0
app❆2_filtersub(x1,x2)	weight: (/ 1 4)
 false()	weight: 0
  true()	weight: 0
app❆2_filter(x1,x2)	weight: 0
filtersub()	weight: 0
   nil()	weight: 0
app❆1_filter(x1)	weight: (/ 1 4)
 #app(x1,x2)	weight: (/ 1 2) + x2
#app❆2_filter(x1,x2)	weight: (/ 1 4) + x2
  cons()	weight: 0
app❆2_cons(x1,x2)	weight: (/ 1 2) + x1 + x2
filter()	weight: 0
app❆3_filtersub(x1,x2,x3)	weight: 0
#app❆3_filtersub(x1,x2,x3)	weight: x3
app❆1_cons(x1)	weight: 0
   app(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #2..6
Number of SCCs: 0, DPs: 0, edges: 0
