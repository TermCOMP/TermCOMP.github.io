Input TRS:
    1: times(x,y) -> help(x,y,0())
    2: help(x,y,c) -> if(lt(c,y),x,y,c)
    3: if(true(),x,y,c) -> plus(x,help(x,y,s(c)))
    4: if(false(),x,y,c) -> 0()
    5: lt(0(),s(x)) -> true()
    6: lt(s(x),0()) -> false()
    7: lt(s(x),s(y)) -> lt(x,y)
    8: plus(x,0()) -> x
    9: plus(0(),x) -> x
    10: plus(x,s(y)) -> s(plus(x,y))
    11: plus(s(x),y) -> s(plus(x,y))
Number of strict rules: 11
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #help(x,y,c) -> #if(lt(c,y),x,y,c)
   #2: #help(x,y,c) -> #lt(c,y)
   #3: #plus(s(x),y) -> #plus(x,y)
   #4: #lt(s(x),s(y)) -> #lt(x,y)
   #5: #plus(x,s(y)) -> #plus(x,y)
   #6: #if(true(),x,y,c) -> #plus(x,help(x,y,s(c)))
   #7: #if(true(),x,y,c) -> #help(x,y,s(c))
   #8: #times(x,y) -> #help(x,y,0())
Number of SCCs: 3, DPs: 5, edges: 7
	SCC { #4 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 1 2) + x1
  #lt(x1,x2)	weight: x2
#help(x1,x2,x3)	weight: 0
#plus(x1,x2)	weight: 0
 false()	weight: 0
  true()	weight: 0
#times(x1,x2)	weight: 0
     0()	weight: 0
    if(x1,x2,x3,x4)	weight: 0
 times(x1,x2)	weight: 0
  plus(x1,x2)	weight: 0
  #if(x1,x2,x3,x4)	weight: 0
  help(x1,x2,x3)	weight: 0
    lt(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #4
Number of SCCs: 2, DPs: 4, edges: 6
	SCC { #3 #5 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 1 2) + x1
  #lt(x1,x2)	weight: 0
#help(x1,x2,x3)	weight: 0
#plus(x1,x2)	weight: x1
 false()	weight: 0
  true()	weight: 0
#times(x1,x2)	weight: 0
     0()	weight: 0
    if(x1,x2,x3,x4)	weight: 0
 times(x1,x2)	weight: 0
  plus(x1,x2)	weight: 0
  #if(x1,x2,x3,x4)	weight: 0
  help(x1,x2,x3)	weight: 0
    lt(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #3
Number of SCCs: 2, DPs: 3, edges: 3
	SCC { #5 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 1 2) + x1
  #lt(x1,x2)	weight: 0
#help(x1,x2,x3)	weight: 0
#plus(x1,x2)	weight: x2
 false()	weight: 0
  true()	weight: 0
#times(x1,x2)	weight: 0
     0()	weight: 0
    if(x1,x2,x3,x4)	weight: 0
 times(x1,x2)	weight: 0
  plus(x1,x2)	weight: 0
  #if(x1,x2,x3,x4)	weight: 0
  help(x1,x2,x3)	weight: 0
    lt(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #5
Number of SCCs: 1, DPs: 2, edges: 2
	SCC { #1 #7 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
