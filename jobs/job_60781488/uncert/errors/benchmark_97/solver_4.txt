Input TRS:
    1: app(app(map(),f),nil()) -> nil()
    2: app(app(map(),f),app(app(cons(),x),xs)) -> app(app(cons(),app(f,x)),app(app(map(),f),xs))
    3: app(app(minus(),x),0()) -> x
    4: app(app(minus(),app(s(),x)),app(s(),y)) -> app(app(minus(),x),y)
    5: app(app(div(),0()),app(s(),y)) -> 0()
    6: app(app(div(),app(s(),x)),app(s(),y)) -> app(s(),app(app(div(),app(app(minus(),x),y)),app(s(),y)))
Number of strict rules: 6
Direct Order(PosReal,>,Poly) ... failed.
Freezing app
1: app❆2_map(f,nil()) -> nil()
2: app❆2_map(f,app❆2_cons(x,xs)) -> app❆2_cons(app(f,x),app❆2_map(f,xs))
3: app❆2_minus(x,0()) -> x
4: app❆2_minus(app❆1_s(x),app❆1_s(y)) -> app❆2_minus(x,y)
5: app❆2_div(0(),app❆1_s(y)) -> 0()
6: app❆2_div(app❆1_s(x),app❆1_s(y)) -> app❆1_s(app❆2_div(app❆2_minus(x,y),app❆1_s(y)))
7: app(cons(),_1) ->= app❆1_cons(_1)
8: app(app❆1_cons(_1),_2) ->= app❆2_cons(_1,_2)
9: app(div(),_1) ->= app❆1_div(_1)
10: app(app❆1_div(_1),_2) ->= app❆2_div(_1,_2)
11: app(s(),_1) ->= app❆1_s(_1)
12: app(minus(),_1) ->= app❆1_minus(_1)
13: app(app❆1_minus(_1),_2) ->= app❆2_minus(_1,_2)
14: app(map(),_1) ->= app❆1_map(_1)
15: app(app❆1_map(_1),_2) ->= app❆2_map(_1,_2)
Number of strict rules: 6
Direct Order(PosReal,>,Poly) ... failed.
Dependency Pairs:
   #1: #app❆2_map(f,app❆2_cons(x,xs)) -> #app(f,x)
   #2: #app❆2_map(f,app❆2_cons(x,xs)) -> #app❆2_map(f,xs)
   #3: #app❆2_div(app❆1_s(x),app❆1_s(y)) -> #app❆2_div(app❆2_minus(x,y),app❆1_s(y))
   #4: #app❆2_div(app❆1_s(x),app❆1_s(y)) -> #app❆2_minus(x,y)
   #5: #app(app❆1_minus(_1),_2) ->? #app❆2_minus(_1,_2)
   #6: #app(app❆1_div(_1),_2) ->? #app❆2_div(_1,_2)
   #7: #app(app❆1_map(_1),_2) ->? #app❆2_map(_1,_2)
   #8: #app❆2_minus(app❆1_s(x),app❆1_s(y)) -> #app❆2_minus(x,y)
Number of SCCs: 3, DPs: 5, edges: 7
	SCC { #8 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
app❆2_minus(x1,x2)	weight: 0
#app❆2_map(x1,x2)	weight: 0
     s()	weight: 0
app❆1_map(x1)	weight: 0
app❆1_minus(x1)	weight: 0
#app❆2_div(x1,x2)	weight: 0
 minus()	weight: 0
app❆2_div(x1,x2)	weight: 0
app❆2_map(x1,x2)	weight: 0
#app❆2_minus(x1,x2)	weight: x2
   div()	weight: 0
     0()	weight: 0
   nil()	weight: 0
 #app(x1,x2)	weight: 0
   map()	weight: 0
app❆1_div(x1)	weight: 0
  cons()	weight: 0
app❆2_cons(x1,x2)	weight: 0
app❆1_s(x1)	weight: (/ 1 2) + x1
app❆1_cons(x1)	weight: 0
   app(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #8
Number of SCCs: 2, DPs: 4, edges: 6
	SCC { #3 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
app❆2_minus(x1,x2)	weight: (/ 1 4) + x1
#app❆2_map(x1,x2)	weight: 0
     s()	weight: 0
app❆1_map(x1)	weight: 0
app❆1_minus(x1)	weight: 0
#app❆2_div(x1,x2)	weight: x1
 minus()	weight: 0
app❆2_div(x1,x2)	weight: 0
app❆2_map(x1,x2)	weight: 0
#app❆2_minus(x1,x2)	weight: 0
   div()	weight: 0
     0()	weight: 0
   nil()	weight: 0
 #app(x1,x2)	weight: 0
   map()	weight: 0
app❆1_div(x1)	weight: 0
  cons()	weight: 0
app❆2_cons(x1,x2)	weight: 0
app❆1_s(x1)	weight: (/ 1 2) + x1
app❆1_cons(x1)	weight: 0
   app(x1,x2)	weight: 0
    Usable rules: { 3 4 }
    Removed DPs: #3
Number of SCCs: 1, DPs: 3, edges: 5
	SCC { #1 #2 #7 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
app❆2_minus(x1,x2)	weight: (/ 1 4) + x1
#app❆2_map(x1,x2)	weight: (/ 1 4) + x1
     s()	weight: 0
app❆1_map(x1)	weight: (/ 1 2) + x1
app❆1_minus(x1)	weight: 0
#app❆2_div(x1,x2)	weight: x1
 minus()	weight: 0
app❆2_div(x1,x2)	weight: 0
app❆2_map(x1,x2)	weight: 0
#app❆2_minus(x1,x2)	weight: 0
   div()	weight: 0
     0()	weight: 0
   nil()	weight: 0
 #app(x1,x2)	weight: x1
   map()	weight: 0
app❆1_div(x1)	weight: 0
  cons()	weight: 0
app❆2_cons(x1,x2)	weight: (/ 1 4)
app❆1_s(x1)	weight: (/ 1 2) + x1
app❆1_cons(x1)	weight: 0
   app(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #1 #7
Number of SCCs: 1, DPs: 1, edges: 1
	SCC { #2 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
app❆2_minus(x1,x2)	weight: (/ 1 4) + x1
#app❆2_map(x1,x2)	weight: (/ 1 4) + x2
     s()	weight: 0
app❆1_map(x1)	weight: (/ 1 2)
app❆1_minus(x1)	weight: 0
#app❆2_div(x1,x2)	weight: x1
 minus()	weight: 0
app❆2_div(x1,x2)	weight: 0
app❆2_map(x1,x2)	weight: 0
#app❆2_minus(x1,x2)	weight: 0
   div()	weight: 0
     0()	weight: 0
   nil()	weight: 0
 #app(x1,x2)	weight: 0
   map()	weight: 0
app❆1_div(x1)	weight: 0
  cons()	weight: 0
app❆2_cons(x1,x2)	weight: (/ 1 4) + x2
app❆1_s(x1)	weight: (/ 1 2) + x1
app❆1_cons(x1)	weight: 0
   app(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #2
Number of SCCs: 0, DPs: 0, edges: 0
