Input TRS:
    1: f(true(),x) -> f(gt(x,0()),double(x))
    2: gt(s(x),0()) -> true()
    3: gt(0(),y) -> false()
    4: gt(s(x),s(y)) -> gt(x,y)
    5: double(x) -> plus(x,x)
    6: plus(0(),y) -> y
    7: plus(s(x),y) -> plus(x,s(y))
Number of strict rules: 7
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #plus(s(x),y) -> #plus(x,s(y))
   #2: #double(x) -> #plus(x,x)
   #3: #f(true(),x) -> #f(gt(x,0()),double(x))
   #4: #f(true(),x) -> #gt(x,0())
   #5: #f(true(),x) -> #double(x)
   #6: #gt(s(x),s(y)) -> #gt(x,y)
Number of SCCs: 3, DPs: 3, edges: 3
	SCC { #1 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 1 2) + x1
    gt(x1,x2)	weight: 0
#plus(x1,x2)	weight: x1
 false()	weight: 0
  true()	weight: 0
     f(x1,x2)	weight: 0
     0()	weight: 0
#double(x1)	weight: 0
double(x1)	weight: 0
  #gt(x1,x2)	weight: 0
   #f(x1,x2)	weight: 0
  plus(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #1
Number of SCCs: 2, DPs: 2, edges: 2
	SCC { #6 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 1 2) + x1
    gt(x1,x2)	weight: 0
#plus(x1,x2)	weight: 0
 false()	weight: 0
  true()	weight: 0
     f(x1,x2)	weight: 0
     0()	weight: 0
#double(x1)	weight: 0
double(x1)	weight: 0
  #gt(x1,x2)	weight: x1
   #f(x1,x2)	weight: 0
  plus(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #6
Number of SCCs: 1, DPs: 1, edges: 1
	SCC { #3 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
