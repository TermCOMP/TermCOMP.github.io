Input TRS:
    1: zeros() -> cons(0(),zeros())
    2: tail(cons(X,XS)) -> XS
Number of strict rules: 2
Direct Order(PosReal,>,Poly) ... removes: 2
 zeros()	weight: 0
  tail(x1)	weight: (/ 1 2) + x1
     0()	weight: 0
  cons(x1,x2)	weight: x1 + x2
Number of strict rules: 1
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #zeros() -> #zeros()
Number of SCCs: 1, DPs: 1, edges: 1
	SCC { #1 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  found.
  #zeros()	-#1->
  #zeros()	--->*
  #zeros()
  Looping with: [ ]
