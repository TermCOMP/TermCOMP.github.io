Input TRS:
    1: msort(nil()) -> nil()
    2: msort(.(x,y)) -> .(min(x,y),msort(del(min(x,y),.(x,y))))
    3: min(x,nil()) -> x
    4: min(x,.(y,z)) -> if(<=(x,y),min(x,z),min(y,z))
    5: del(x,nil()) -> nil()
    6: del(x,.(y,z)) -> if(=(x,y),z,.(y,del(x,z)))
Number of strict rules: 6
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #msort(.(x,y)) -> #min(x,y)
   #2: #msort(.(x,y)) -> #msort(del(min(x,y),.(x,y)))
   #3: #msort(.(x,y)) -> #del(min(x,y),.(x,y))
   #4: #msort(.(x,y)) -> #min(x,y)
   #5: #del(x,.(y,z)) -> #del(x,z)
   #6: #min(x,.(y,z)) -> #min(x,z)
   #7: #min(x,.(y,z)) -> #min(y,z)
Number of SCCs: 2, DPs: 3, edges: 5
	SCC { #5 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 #del(x1,x2)	weight: x2
#msort(x1)	weight: 0
    <=(x1,x2)	weight: 0
 #min(x1,x2)	weight: 0
 msort(x1)	weight: 0
    if(x1,x2,x3)	weight: 0
   del(x1,x2)	weight: 0
     =(x1,x2)	weight: 0
   nil()	weight: 0
     .(x1,x2)	weight: (/ 1 2) + x2
   min(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #5
Number of SCCs: 1, DPs: 2, edges: 4
	SCC { #6 #7 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 #del(x1,x2)	weight: 0
#msort(x1)	weight: 0
    <=(x1,x2)	weight: 0
 #min(x1,x2)	weight: x2
 msort(x1)	weight: 0
    if(x1,x2,x3)	weight: 0
   del(x1,x2)	weight: 0
     =(x1,x2)	weight: 0
   nil()	weight: 0
     .(x1,x2)	weight: (/ 1 2) + x2
   min(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #6 #7
Number of SCCs: 0, DPs: 0, edges: 0
