Input TRS:
    1: active(f(b(),X,c())) -> mark(f(X,c(),X))
    2: active(c()) -> mark(b())
    3: mark(f(X1,X2,X3)) -> active(f(X1,mark(X2),X3))
    4: mark(b()) -> active(b())
    5: mark(c()) -> active(c())
    6: f(mark(X1),X2,X3) -> f(X1,X2,X3)
    7: f(X1,mark(X2),X3) -> f(X1,X2,X3)
    8: f(X1,X2,mark(X3)) -> f(X1,X2,X3)
    9: f(active(X1),X2,X3) -> f(X1,X2,X3)
    10: f(X1,active(X2),X3) -> f(X1,X2,X3)
    11: f(X1,X2,active(X3)) -> f(X1,X2,X3)
Number of strict rules: 11
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #active(c()) -> #mark(b())
   #2: #f(mark(X1),X2,X3) -> #f(X1,X2,X3)
   #3: #f(active(X1),X2,X3) -> #f(X1,X2,X3)
   #4: #f(X1,X2,active(X3)) -> #f(X1,X2,X3)
   #5: #f(X1,mark(X2),X3) -> #f(X1,X2,X3)
   #6: #f(X1,active(X2),X3) -> #f(X1,X2,X3)
   #7: #mark(c()) -> #active(c())
   #8: #mark(f(X1,X2,X3)) -> #active(f(X1,mark(X2),X3))
   #9: #mark(f(X1,X2,X3)) -> #f(X1,mark(X2),X3)
   #10: #mark(f(X1,X2,X3)) -> #mark(X2)
   #11: #active(f(b(),X,c())) -> #mark(f(X,c(),X))
   #12: #active(f(b(),X,c())) -> #f(X,c(),X)
   #13: #f(X1,X2,mark(X3)) -> #f(X1,X2,X3)
   #14: #mark(b()) -> #active(b())
Number of SCCs: 2, DPs: 9, edges: 41
	SCC { #8 #10 #11 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     b()	weight: 0
     c()	weight: 0
     f(x1,x2,x3)	weight: (/ 1 4) + x2
#mark(x1)	weight: x1
  mark(x1)	weight: (/ 1 2) + x1
   #f(x1,x2,x3)	weight: 0
active(x1)	weight: (/ 1 4) + x1
#active(x1)	weight: (/ 1 4)
    Usable rules: { 6..11 }
    Removed DPs: #10
Number of SCCs: 2, DPs: 8, edges: 38
	SCC { #8 #11 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop... 