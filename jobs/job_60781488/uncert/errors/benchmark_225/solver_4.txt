Input TRS:
    1: gt(0(),y) -> false()
    2: gt(s(x),0()) -> true()
    3: gt(s(x),s(y)) -> gt(x,y)
    4: plus(0(),y) -> y
    5: plus(s(x),y) -> s(plus(x,y))
    6: double(0()) -> 0()
    7: double(s(x)) -> s(s(double(x)))
    8: average(x,y) -> aver(plus(x,y),0())
    9: aver(sum,z) -> if(gt(sum,double(z)),sum,z)
    10: if(true(),sum,z) -> aver(sum,s(z))
    11: if(false(),sum,z) -> z
Number of strict rules: 11
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #aver(sum,z) -> #if(gt(sum,double(z)),sum,z)
   #2: #aver(sum,z) -> #gt(sum,double(z))
   #3: #aver(sum,z) -> #double(z)
   #4: #double(s(x)) -> #double(x)
   #5: #if(true(),sum,z) -> #aver(sum,s(z))
   #6: #plus(s(x),y) -> #plus(x,y)
   #7: #gt(s(x),s(y)) -> #gt(x,y)
   #8: #average(x,y) -> #aver(plus(x,y),0())
   #9: #average(x,y) -> #plus(x,y)
Number of SCCs: 4, DPs: 5, edges: 5
	SCC { #4 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 1 2) + x1
    gt(x1,x2)	weight: 0
#aver(x1,x2)	weight: 0
average(x1,x2)	weight: 0
#plus(x1,x2)	weight: 0
 false()	weight: 0
  aver(x1,x2)	weight: 0
  true()	weight: 0
     0()	weight: 0
    if(x1,x2,x3)	weight: 0
#double(x1)	weight: x1
double(x1)	weight: 0
  #gt(x1,x2)	weight: 0
#average(x1,x2)	weight: 0
  plus(x1,x2)	weight: 0
  #if(x1,x2,x3)	weight: 0
    Usable rules: { }
    Removed DPs: #4
Number of SCCs: 3, DPs: 4, edges: 4
	SCC { #6 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 1 2) + x1
    gt(x1,x2)	weight: 0
#aver(x1,x2)	weight: 0
average(x1,x2)	weight: 0
#plus(x1,x2)	weight: x1
 false()	weight: 0
  aver(x1,x2)	weight: 0
  true()	weight: 0
     0()	weight: 0
    if(x1,x2,x3)	weight: 0
#double(x1)	weight: 0
double(x1)	weight: 0
  #gt(x1,x2)	weight: 0
#average(x1,x2)	weight: 0
  plus(x1,x2)	weight: 0
  #if(x1,x2,x3)	weight: 0
    Usable rules: { }
    Removed DPs: #6
Number of SCCs: 2, DPs: 3, edges: 3
	SCC { #7 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 1 2) + x1
    gt(x1,x2)	weight: 0
#aver(x1,x2)	weight: 0
average(x1,x2)	weight: 0
#plus(x1,x2)	weight: 0
 false()	weight: 0
  aver(x1,x2)	weight: 0
  true()	weight: 0
     0()	weight: 0
    if(x1,x2,x3)	weight: 0
#double(x1)	weight: 0
double(x1)	weight: 0
  #gt(x1,x2)	weight: x2
#average(x1,x2)	weight: 0
  plus(x1,x2)	weight: 0
  #if(x1,x2,x3)	weight: 0
    Usable rules: { }
    Removed DPs: #7
Number of SCCs: 1, DPs: 2, edges: 2
	SCC { #1 #5 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
