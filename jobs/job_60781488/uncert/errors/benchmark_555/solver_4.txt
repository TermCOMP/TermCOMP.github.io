Input TRS:
    1: eq(0(),0()) -> true()
    2: eq(0(),s(X)) -> false()
    3: eq(s(X),0()) -> false()
    4: eq(s(X),s(Y)) -> eq(X,Y)
    5: rm(N,nil()) -> nil()
    6: rm(N,add(M,X)) -> ifrm(eq(N,M),N,add(M,X))
    7: ifrm(true(),N,add(M,X)) -> rm(N,X)
    8: ifrm(false(),N,add(M,X)) -> add(M,rm(N,X))
    9: purge(nil()) -> nil()
    10: purge(add(N,X)) -> add(N,purge(rm(N,X)))
Number of strict rules: 10
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #rm(N,add(M,X)) -> #ifrm(eq(N,M),N,add(M,X))
   #2: #rm(N,add(M,X)) -> #eq(N,M)
   #3: #ifrm(true(),N,add(M,X)) -> #rm(N,X)
   #4: #purge(add(N,X)) -> #purge(rm(N,X))
   #5: #purge(add(N,X)) -> #rm(N,X)
   #6: #ifrm(false(),N,add(M,X)) -> #rm(N,X)
   #7: #eq(s(X),s(Y)) -> #eq(X,Y)
Number of SCCs: 3, DPs: 5, edges: 6
	SCC { #7 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#ifrm(x1,x2,x3)	weight: 0
     s(x1)	weight: (/ 1 2) + x1
#purge(x1)	weight: 0
    eq(x1,x2)	weight: 0
 false()	weight: 0
  true()	weight: 0
 purge(x1)	weight: 0
  #eq(x1,x2)	weight: x2
     0()	weight: 0
  ifrm(x1,x2,x3)	weight: 0
   nil()	weight: 0
   add(x1,x2)	weight: 0
    rm(x1,x2)	weight: 0
  #rm(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #7
Number of SCCs: 2, DPs: 4, edges: 5
	SCC { #4 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#ifrm(x1,x2,x3)	weight: 0
     s(x1)	weight: (/ 1 4)
#purge(x1)	weight: x1
    eq(x1,x2)	weight: (/ 1 4) + x2
 false()	weight: 0
  true()	weight: 0
 purge(x1)	weight: 0
  #eq(x1,x2)	weight: 0
     0()	weight: 0
  ifrm(x1,x2,x3)	weight: (/ 1 4) + x3
   nil()	weight: 0
   add(x1,x2)	weight: (/ 1 2) + x1 + x2
    rm(x1,x2)	weight: (/ 1 4) + x2
  #rm(x1,x2)	weight: 0
    Usable rules: { 5..8 }
    Removed DPs: #4
Number of SCCs: 1, DPs: 3, edges: 4
	SCC { #1 #3 #6 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#ifrm(x1,x2,x3)	weight: x3
     s(x1)	weight: (/ 1 4)
#purge(x1)	weight: x1
    eq(x1,x2)	weight: (/ 1 4)
 false()	weight: 0
  true()	weight: 0
 purge(x1)	weight: 0
  #eq(x1,x2)	weight: 0
     0()	weight: 0
  ifrm(x1,x2,x3)	weight: (/ 1 4) + x3
   nil()	weight: 0
   add(x1,x2)	weight: (/ 1 2) + x1 + x2
    rm(x1,x2)	weight: (/ 1 4) + x2
  #rm(x1,x2)	weight: (/ 1 4) + x2
    Usable rules: { }
    Removed DPs: #1 #3 #6
Number of SCCs: 0, DPs: 0, edges: 0
