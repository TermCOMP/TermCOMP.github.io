Input TRS:
    1: active(zeros()) -> mark(cons(0(),zeros()))
    2: active(U11(tt(),L)) -> mark(U12(tt(),L))
    3: active(U12(tt(),L)) -> mark(s(length(L)))
    4: active(length(nil())) -> mark(0())
    5: active(length(cons(N,L))) -> mark(U11(tt(),L))
    6: active(cons(X1,X2)) -> cons(active(X1),X2)
    7: active(U11(X1,X2)) -> U11(active(X1),X2)
    8: active(U12(X1,X2)) -> U12(active(X1),X2)
    9: active(s(X)) -> s(active(X))
    10: active(length(X)) -> length(active(X))
    11: cons(mark(X1),X2) -> mark(cons(X1,X2))
    12: U11(mark(X1),X2) -> mark(U11(X1,X2))
    13: U12(mark(X1),X2) -> mark(U12(X1,X2))
    14: s(mark(X)) -> mark(s(X))
    15: length(mark(X)) -> mark(length(X))
    16: proper(zeros()) -> ok(zeros())
    17: proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
    18: proper(0()) -> ok(0())
    19: proper(U11(X1,X2)) -> U11(proper(X1),proper(X2))
    20: proper(tt()) -> ok(tt())
    21: proper(U12(X1,X2)) -> U12(proper(X1),proper(X2))
    22: proper(s(X)) -> s(proper(X))
    23: proper(length(X)) -> length(proper(X))
    24: proper(nil()) -> ok(nil())
    25: cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
    26: U11(ok(X1),ok(X2)) -> ok(U11(X1,X2))
    27: U12(ok(X1),ok(X2)) -> ok(U12(X1,X2))
    28: s(ok(X)) -> ok(s(X))
    29: length(ok(X)) -> ok(length(X))
    30: top(mark(X)) -> top(proper(X))
    31: top(ok(X)) -> top(active(X))
Number of strict rules: 31
Direct Order(PosReal,>,Poly) ... removes: 4
   U11(x1,x2)	weight: (/ 1 8) + x1 + x2
     s(x1)	weight: x1
   top(x1)	weight: x1
 zeros()	weight: 0
   U12(x1,x2)	weight: (/ 1 8) + x1 + x2
proper(x1)	weight: x1
    ok(x1)	weight: x1
     0()	weight: 0
   nil()	weight: 0
  mark(x1)	weight: x1
active(x1)	weight: x1
  cons(x1,x2)	weight: x1 + x2
    tt()	weight: 0
length(x1)	weight: (/ 1 8) + x1
Number of strict rules: 30
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #active(U11(tt(),L)) -> #U12(tt(),L)
   #2: #length(ok(X)) -> #length(X)
   #3: #active(cons(X1,X2)) -> #cons(active(X1),X2)
   #4: #active(cons(X1,X2)) -> #active(X1)
   #5: #U12(mark(X1),X2) -> #U12(X1,X2)
   #6: #active(s(X)) -> #s(active(X))
   #7: #active(s(X)) -> #active(X)
   #8: #cons(mark(X1),X2) -> #cons(X1,X2)
   #9: #proper(length(X)) -> #length(proper(X))
   #10: #proper(length(X)) -> #proper(X)
   #11: #U11(mark(X1),X2) -> #U11(X1,X2)
   #12: #top(ok(X)) -> #top(active(X))
   #13: #top(ok(X)) -> #active(X)
   #14: #s(mark(X)) -> #s(X)
   #15: #top(mark(X)) -> #top(proper(X))
   #16: #top(mark(X)) -> #proper(X)
   #17: #cons(ok(X1),ok(X2)) -> #cons(X1,X2)
   #18: #active(U11(X1,X2)) -> #U11(active(X1),X2)
   #19: #active(U11(X1,X2)) -> #active(X1)
   #20: #active(length(X)) -> #length(active(X))
   #21: #active(length(X)) -> #active(X)
   #22: #active(length(cons(N,L))) -> #U11(tt(),L)
   #23: #s(ok(X)) -> #s(X)
   #24: #proper(s(X)) -> #s(proper(X))
   #25: #proper(s(X)) -> #proper(X)
   #26: #U12(ok(X1),ok(X2)) -> #U12(X1,X2)
   #27: #proper(cons(X1,X2)) -> #cons(proper(X1),proper(X2))
   #28: #proper(cons(X1,X2)) -> #proper(X1)
   #29: #proper(cons(X1,X2)) -> #proper(X2)
   #30: #proper(U11(X1,X2)) -> #U11(proper(X1),proper(X2))
   #31: #proper(U11(X1,X2)) -> #proper(X1)
   #32: #proper(U11(X1,X2)) -> #proper(X2)
   #33: #U11(ok(X1),ok(X2)) -> #U11(X1,X2)
   #34: #proper(U12(X1,X2)) -> #U12(proper(X1),proper(X2))
   #35: #proper(U12(X1,X2)) -> #proper(X1)
   #36: #proper(U12(X1,X2)) -> #proper(X2)
   #37: #active(U12(tt(),L)) -> #s(length(L))
   #38: #active(U12(tt(),L)) -> #length(L)
   #39: #active(zeros()) -> #cons(0(),zeros())
   #40: #active(U12(X1,X2)) -> #U12(active(X1),X2)
   #41: #active(U12(X1,X2)) -> #active(X1)
   #42: #length(mark(X)) -> #length(X)
Number of SCCs: 8, DPs: 25, edges: 113
	SCC { #2 #42 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
   U11(x1,x2)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
   top(x1)	weight: 0
 #top(x1)	weight: 0
 zeros()	weight: 0
   U12(x1,x2)	weight: 0
 #U12(x1,x2)	weight: 0
proper(x1)	weight: 0
    ok(x1)	weight: (/ 1 2) + x1
     0()	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
#proper(x1)	weight: 0
 #U11(x1,x2)	weight: 0
active(x1)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
    tt()	weight: 0
length(x1)	weight: 0
#length(x1)	weight: x1
    Usable rules: { }
    Removed DPs: #2 #42
Number of SCCs: 7, DPs: 23, edges: 109
	SCC { #14 #23 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
   U11(x1,x2)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
   top(x1)	weight: 0
 #top(x1)	weight: 0
 zeros()	weight: 0
   U12(x1,x2)	weight: 0
 #U12(x1,x2)	weight: 0
proper(x1)	weight: 0
    ok(x1)	weight: (/ 1 2) + x1
     0()	weight: 0
   #s(x1)	weight: x1
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
#proper(x1)	weight: 0
 #U11(x1,x2)	weight: 0
active(x1)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
    tt()	weight: 0
length(x1)	weight: 0
#length(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #14 #23
Number of SCCs: 6, DPs: 21, edges: 105
	SCC { #12 #15 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
