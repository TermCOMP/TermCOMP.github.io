Input TRS:
    1: f(f(0(),x),1()) -> f(g(f(x,x)),x)
    2: f(g(x),y) -> g(f(x,y))
Number of strict rules: 2
Direct Order(PosReal,>,Poly) ... failed.
Freezing f
1: f❆2_0(x,1()) -> f❆1_g(f(x,x),x)
2: f❆1_g(x,y) -> g(f(x,y))
3: f(0(),_1) ->= f❆1_0(_1)
4: f(f❆1_0(_1),_2) ->= f❆2_0(_1,_2)
5: f(g(_1),_2) ->= f❆1_g(_1,_2)
Number of strict rules: 2
Direct Order(PosReal,>,Poly) ... failed.
Dependency Pairs:
   #1: #f❆1_g(x,y) -> #f(x,y)
   #2: #f(g(_1),_2) ->? #f❆1_g(_1,_2)
   #3: #f❆2_0(x,1()) -> #f❆1_g(f(x,x),x)
   #4: #f❆2_0(x,1()) -> #f(x,x)
   #5: #f(f❆1_0(_1),_2) ->? #f❆2_0(_1,_2)
Number of SCCs: 1, DPs: 5, edges: 8
	SCC { #1..5 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... succeeded.
#f❆1_g(x1,x2)	weight: max{0, (/ 1 8) + x1}
     1()	weight: 0
f❆1_g(x1,x2)	weight: max{(/ 1 4) + x2, (/ 1 4) + x1}
     f(x1,x2)	weight: max{(/ 1 4) + x2, (/ 1 4) + x1}
     0()	weight: 0
#f❆2_0(x1,x2)	weight: max{0, (/ 3 8) + x1}
   #f(x1,x2)	weight: max{0, (/ 1 8) + x1}
f❆2_0(x1,x2)	weight: max{(/ 1 8) + x2, (/ 1 2) + x1}
f❆1_0(x1)	weight: (/ 1 4) + x1
     g(x1)	weight: x1
    Usable rules: { 1..5 }
    Removed DPs: #4
Number of SCCs: 1, DPs: 4, edges: 5
	SCC { #1..3 #5 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
