Input TRS:
    1: app(app(map(),f),nil()) -> nil()
    2: app(app(map(),f),app(app(cons(),x),xs)) -> app(app(cons(),app(f,x)),app(app(map(),f),xs))
    3: app(app(minus(),x),0()) -> x
    4: app(app(minus(),app(s(),x)),app(s(),y)) -> app(app(minus(),app(p(),app(s(),x))),app(p(),app(s(),y)))
    5: app(p(),app(s(),x)) -> x
    6: app(app(div(),0()),app(s(),y)) -> 0()
    7: app(app(div(),app(s(),x)),app(s(),y)) -> app(s(),app(app(div(),app(app(minus(),x),app(id(),y))),app(s(),y)))
    8: app(id(),x) -> x
    9: app(id(),x) -> app(s(),app(s(),app(s(),x)))
    10: app(id(),app(p(),x)) -> app(id(),app(s(),app(id(),x)))
Number of strict rules: 10
Direct Order(PosReal,>,Poly) ... failed.
Freezing app
1: app❆2_map(f,nil()) -> nil()
2: app❆2_map(f,app❆2_cons(x,xs)) -> app❆2_cons(app(f,x),app❆2_map(f,xs))
3: app❆2_minus(x,0()) -> x
4: app❆2_minus(app❆1_s(x),app❆1_s(y)) -> app❆2_minus(app❆1_p(app❆1_s(x)),app❆1_p(app❆1_s(y)))
5: app❆1_p(app❆1_s(x)) -> x
6: app❆2_div(0(),app❆1_s(y)) -> 0()
7: app❆2_div(app❆1_s(x),app❆1_s(y)) -> app❆1_s(app❆2_div(app❆2_minus(x,app❆1_id(y)),app❆1_s(y)))
8: app❆1_id(x) -> x
9: app❆1_id(x) -> app❆1_s(app❆1_s(app❆1_s(x)))
10: app❆1_id(app❆1_p(x)) -> app❆1_id(app❆1_s(app❆1_id(x)))
11: app(p(),_1) ->= app❆1_p(_1)
12: app(cons(),_1) ->= app❆1_cons(_1)
13: app(app❆1_cons(_1),_2) ->= app❆2_cons(_1,_2)
14: app(div(),_1) ->= app❆1_div(_1)
15: app(app❆1_div(_1),_2) ->= app❆2_div(_1,_2)
16: app(id(),_1) ->= app❆1_id(_1)
17: app(s(),_1) ->= app❆1_s(_1)
18: app(minus(),_1) ->= app❆1_minus(_1)
19: app(app❆1_minus(_1),_2) ->= app❆2_minus(_1,_2)
20: app(map(),_1) ->= app❆1_map(_1)
21: app(app❆1_map(_1),_2) ->= app❆2_map(_1,_2)
Number of strict rules: 10
Direct Order(PosReal,>,Poly) ... failed.
Dependency Pairs:
   #1: #app❆2_map(f,app❆2_cons(x,xs)) -> #app(f,x)
   #2: #app❆2_map(f,app❆2_cons(x,xs)) -> #app❆2_map(f,xs)
   #3: #app(p(),_1) ->? #app❆1_p(_1)
   #4: #app❆2_div(app❆1_s(x),app❆1_s(y)) -> #app❆2_div(app❆2_minus(x,app❆1_id(y)),app❆1_s(y))
   #5: #app❆2_div(app❆1_s(x),app❆1_s(y)) -> #app❆2_minus(x,app❆1_id(y))
   #6: #app❆2_div(app❆1_s(x),app❆1_s(y)) -> #app❆1_id(y)
   #7: #app❆1_id(app❆1_p(x)) -> #app❆1_id(app❆1_s(app❆1_id(x)))
   #8: #app❆1_id(app❆1_p(x)) -> #app❆1_id(x)
   #9: #app(app❆1_minus(_1),_2) ->? #app❆2_minus(_1,_2)
   #10: #app(app❆1_map(_1),_2) ->? #app❆2_map(_1,_2)
   #11: #app(id(),_1) ->? #app❆1_id(_1)
   #12: #app(app❆1_div(_1),_2) ->? #app❆2_div(_1,_2)
   #13: #app❆2_minus(app❆1_s(x),app❆1_s(y)) -> #app❆2_minus(app❆1_p(app❆1_s(x)),app❆1_p(app❆1_s(y)))
   #14: #app❆2_minus(app❆1_s(x),app❆1_s(y)) -> #app❆1_p(app❆1_s(x))
   #15: #app❆2_minus(app❆1_s(x),app❆1_s(y)) -> #app❆1_p(app❆1_s(y))
Number of SCCs: 4, DPs: 6, edges: 8
	SCC { #8 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
app❆2_minus(x1,x2)	weight: 0
#app❆2_map(x1,x2)	weight: 0
     s()	weight: 0
app❆1_map(x1)	weight: 0
app❆1_minus(x1)	weight: 0
#app❆2_div(x1,x2)	weight: 0
#app❆1_p(x1)	weight: 0
 minus()	weight: 0
app❆2_div(x1,x2)	weight: 0
app❆2_map(x1,x2)	weight: 0
#app❆2_minus(x1,x2)	weight: 0
app❆1_p(x1)	weight: (/ 1 2) + x1
   div()	weight: 0
#app❆1_id(x1)	weight: x1
app❆1_id(x1)	weight: 0
     p()	weight: 0
     0()	weight: 0
   nil()	weight: 0
 #app(x1,x2)	weight: 0
   map()	weight: 0
app❆1_div(x1)	weight: 0
  cons()	weight: 0
app❆2_cons(x1,x2)	weight: 0
    id()	weight: 0
app❆1_s(x1)	weight: 0
app❆1_cons(x1)	weight: 0
   app(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #8
Number of SCCs: 3, DPs: 5, edges: 7
	SCC { #13 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... succeeded.
app❆2_minus(x1,x2)	weight: 0
#app❆2_map(x1,x2)	weight: 0
     s()	weight: 0
app❆1_map(x1)	weight: 0
app❆1_minus(x1)	weight: 0
#app❆2_div(x1,x2)	weight: 0
#app❆1_p(x1)	weight: 0
 minus()	weight: 0
app❆2_div(x1,x2)	weight: 0
app❆2_map(x1,x2)	weight: 0
#app❆2_minus(x1,x2)	weight: max{0, (/ 1 8) + x2}
app❆1_p(x1)	weight: max{0, (- (/ 1 4)) + x1}
   div()	weight: 0
#app❆1_id(x1)	weight: 0
app❆1_id(x1)	weight: 0
     p()	weight: 0
     0()	weight: 0
   nil()	weight: 0
 #app(x1,x2)	weight: 0
   map()	weight: 0
app❆1_div(x1)	weight: 0
  cons()	weight: 0
app❆2_cons(x1,x2)	weight: 0
    id()	weight: 0
app❆1_s(x1)	weight: max{0, (/ 3 8) + x1}
app❆1_cons(x1)	weight: 0
   app(x1,x2)	weight: 0
    Usable rules: { 5 }
    Removed DPs: #13
Number of SCCs: 2, DPs: 4, edges: 6
	SCC { #4 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
app❆2_minus(x1,x2)	weight: (/ 1 8) + x1
#app❆2_map(x1,x2)	weight: 0
     s()	weight: 0
app❆1_map(x1)	weight: 0
app❆1_minus(x1)	weight: 0
#app❆2_div(x1,x2)	weight: x1
#app❆1_p(x1)	weight: 0
 minus()	weight: 0
app❆2_div(x1,x2)	weight: 0
app❆2_map(x1,x2)	weight: 0
#app❆2_minus(x1,x2)	weight: 0
app❆1_p(x1)	weight: x1
   div()	weight: 0
#app❆1_id(x1)	weight: 0
app❆1_id(x1)	weight: (/ 1 8)
     p()	weight: 0
     0()	weight: 0
   nil()	weight: 0
 #app(x1,x2)	weight: 0
   map()	weight: 0
app❆1_div(x1)	weight: 0
  cons()	weight: 0
app❆2_cons(x1,x2)	weight: 0
    id()	weight: 0
app❆1_s(x1)	weight: (/ 1 4) + x1
app❆1_cons(x1)	weight: 0
   app(x1,x2)	weight: 0
    Usable rules: { 3..5 }
    Removed DPs: #4
Number of SCCs: 1, DPs: 3, edges: 5
	SCC { #1 #2 #10 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
app❆2_minus(x1,x2)	weight: (/ 1 8) + x1
#app❆2_map(x1,x2)	weight: (/ 1 8) + x1
     s()	weight: 0
app❆1_map(x1)	weight: (/ 1 4) + x1
app❆1_minus(x1)	weight: 0
#app❆2_div(x1,x2)	weight: x1
#app❆1_p(x1)	weight: 0
 minus()	weight: 0
app❆2_div(x1,x2)	weight: 0
app❆2_map(x1,x2)	weight: 0
#app❆2_minus(x1,x2)	weight: 0
app❆1_p(x1)	weight: x1
   div()	weight: 0
#app❆1_id(x1)	weight: 0
app❆1_id(x1)	weight: (/ 1 8)
     p()	weight: 0
     0()	weight: 0
   nil()	weight: 0
 #app(x1,x2)	weight: x1
   map()	weight: 0
app❆1_div(x1)	weight: 0
  cons()	weight: 0
app❆2_cons(x1,x2)	weight: (/ 1 8)
    id()	weight: 0
app❆1_s(x1)	weight: (/ 1 4) + x1
app❆1_cons(x1)	weight: 0
   app(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #1 #10
Number of SCCs: 1, DPs: 1, edges: 1
	SCC { #2 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
app❆2_minus(x1,x2)	weight: (/ 1 8) + x1
#app❆2_map(x1,x2)	weight: (/ 1 8) + x2
     s()	weight: 0
app❆1_map(x1)	weight: (/ 1 4)
app❆1_minus(x1)	weight: 0
#app❆2_div(x1,x2)	weight: x1
#app❆1_p(x1)	weight: 0
 minus()	weight: 0
app❆2_div(x1,x2)	weight: 0
app❆2_map(x1,x2)	weight: 0
#app❆2_minus(x1,x2)	weight: 0
app❆1_p(x1)	weight: x1
   div()	weight: 0
#app❆1_id(x1)	weight: 0
app❆1_id(x1)	weight: (/ 1 8)
     p()	weight: 0
     0()	weight: 0
   nil()	weight: 0
 #app(x1,x2)	weight: 0
   map()	weight: 0
app❆1_div(x1)	weight: 0
  cons()	weight: 0
app❆2_cons(x1,x2)	weight: (/ 1 8) + x2
    id()	weight: 0
app❆1_s(x1)	weight: (/ 1 4) + x1
app❆1_cons(x1)	weight: 0
   app(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #2
Number of SCCs: 0, DPs: 0, edges: 0
