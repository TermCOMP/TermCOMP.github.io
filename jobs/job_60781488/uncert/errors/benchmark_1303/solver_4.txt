Input TRS:
    1: active(zeros()) -> mark(cons(0(),zeros()))
    2: active(U11(tt(),L)) -> mark(s(length(L)))
    3: active(U21(tt())) -> mark(nil())
    4: active(U31(tt(),IL,M,N)) -> mark(cons(N,take(M,IL)))
    5: active(and(tt(),X)) -> mark(X)
    6: active(isNat(0())) -> mark(tt())
    7: active(isNat(length(V1))) -> mark(isNatList(V1))
    8: active(isNat(s(V1))) -> mark(isNat(V1))
    9: active(isNatIList(V)) -> mark(isNatList(V))
    10: active(isNatIList(zeros())) -> mark(tt())
    11: active(isNatIList(cons(V1,V2))) -> mark(and(isNat(V1),isNatIList(V2)))
    12: active(isNatList(nil())) -> mark(tt())
    13: active(isNatList(cons(V1,V2))) -> mark(and(isNat(V1),isNatList(V2)))
    14: active(isNatList(take(V1,V2))) -> mark(and(isNat(V1),isNatIList(V2)))
    15: active(length(nil())) -> mark(0())
    16: active(length(cons(N,L))) -> mark(U11(and(isNatList(L),isNat(N)),L))
    17: active(take(0(),IL)) -> mark(U21(isNatIList(IL)))
    18: active(take(s(M),cons(N,IL))) -> mark(U31(and(isNatIList(IL),and(isNat(M),isNat(N))),IL,M,N))
    19: mark(zeros()) -> active(zeros())
    20: mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
    21: mark(0()) -> active(0())
    22: mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
    23: mark(tt()) -> active(tt())
    24: mark(s(X)) -> active(s(mark(X)))
    25: mark(length(X)) -> active(length(mark(X)))
    26: mark(U21(X)) -> active(U21(mark(X)))
    27: mark(nil()) -> active(nil())
    28: mark(U31(X1,X2,X3,X4)) -> active(U31(mark(X1),X2,X3,X4))
    29: mark(take(X1,X2)) -> active(take(mark(X1),mark(X2)))
    30: mark(and(X1,X2)) -> active(and(mark(X1),X2))
    31: mark(isNat(X)) -> active(isNat(X))
    32: mark(isNatList(X)) -> active(isNatList(X))
    33: mark(isNatIList(X)) -> active(isNatIList(X))
    34: cons(mark(X1),X2) -> cons(X1,X2)
    35: cons(X1,mark(X2)) -> cons(X1,X2)
    36: cons(active(X1),X2) -> cons(X1,X2)
    37: cons(X1,active(X2)) -> cons(X1,X2)
    38: U11(mark(X1),X2) -> U11(X1,X2)
    39: U11(X1,mark(X2)) -> U11(X1,X2)
    40: U11(active(X1),X2) -> U11(X1,X2)
    41: U11(X1,active(X2)) -> U11(X1,X2)
    42: s(mark(X)) -> s(X)
    43: s(active(X)) -> s(X)
    44: length(mark(X)) -> length(X)
    45: length(active(X)) -> length(X)
    46: U21(mark(X)) -> U21(X)
    47: U21(active(X)) -> U21(X)
    48: U31(mark(X1),X2,X3,X4) -> U31(X1,X2,X3,X4)
    49: U31(X1,mark(X2),X3,X4) -> U31(X1,X2,X3,X4)
    50: U31(X1,X2,mark(X3),X4) -> U31(X1,X2,X3,X4)
    51: U31(X1,X2,X3,mark(X4)) -> U31(X1,X2,X3,X4)
    52: U31(active(X1),X2,X3,X4) -> U31(X1,X2,X3,X4)
    53: U31(X1,active(X2),X3,X4) -> U31(X1,X2,X3,X4)
    54: U31(X1,X2,active(X3),X4) -> U31(X1,X2,X3,X4)
    55: U31(X1,X2,X3,active(X4)) -> U31(X1,X2,X3,X4)
    56: take(mark(X1),X2) -> take(X1,X2)
    57: take(X1,mark(X2)) -> take(X1,X2)
    58: take(active(X1),X2) -> take(X1,X2)
    59: take(X1,active(X2)) -> take(X1,X2)
    60: and(mark(X1),X2) -> and(X1,X2)
    61: and(X1,mark(X2)) -> and(X1,X2)
    62: and(active(X1),X2) -> and(X1,X2)
    63: and(X1,active(X2)) -> and(X1,X2)
    64: isNat(mark(X)) -> isNat(X)
    65: isNat(active(X)) -> isNat(X)
    66: isNatList(mark(X)) -> isNatList(X)
    67: isNatList(active(X)) -> isNatList(X)
    68: isNatIList(mark(X)) -> isNatIList(X)
    69: isNatIList(active(X)) -> isNatIList(X)
Number of strict rules: 69
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #active(U11(tt(),L)) -> #mark(s(length(L)))
   #2: #active(U11(tt(),L)) -> #s(length(L))
   #3: #active(U11(tt(),L)) -> #length(L)
   #4: #s(active(X)) -> #s(X)
   #5: #mark(take(X1,X2)) -> #active(take(mark(X1),mark(X2)))
   #6: #mark(take(X1,X2)) -> #take(mark(X1),mark(X2))
   #7: #mark(take(X1,X2)) -> #mark(X1)
   #8: #mark(take(X1,X2)) -> #mark(X2)
   #9: #cons(X1,mark(X2)) -> #cons(X1,X2)
   #10: #isNatList(mark(X)) -> #isNatList(X)
   #11: #U21(mark(X)) -> #U21(X)
   #12: #s(mark(X)) -> #s(X)
   #13: #U11(X1,active(X2)) -> #U11(X1,X2)
   #14: #cons(X1,active(X2)) -> #cons(X1,X2)
   #15: #U21(active(X)) -> #U21(X)
   #16: #U31(X1,active(X2),X3,X4) -> #U31(X1,X2,X3,X4)
   #17: #U31(mark(X1),X2,X3,X4) -> #U31(X1,X2,X3,X4)
   #18: #take(active(X1),X2) -> #take(X1,X2)
   #19: #and(X1,mark(X2)) -> #and(X1,X2)
   #20: #U11(mark(X1),X2) -> #U11(X1,X2)
   #21: #active(isNat(0())) -> #mark(tt())
   #22: #take(X1,active(X2)) -> #take(X1,X2)
   #23: #U31(X1,X2,X3,active(X4)) -> #U31(X1,X2,X3,X4)
   #24: #isNatList(active(X)) -> #isNatList(X)
   #25: #U11(active(X1),X2) -> #U11(X1,X2)
   #26: #U31(X1,X2,X3,mark(X4)) -> #U31(X1,X2,X3,X4)
   #27: #active(isNatList(cons(V1,V2))) -> #mark(and(isNat(V1),isNatList(V2)))
   #28: #active(isNatList(cons(V1,V2))) -> #and(isNat(V1),isNatList(V2))
   #29: #active(isNatList(cons(V1,V2))) -> #isNat(V1)
   #30: #active(isNatList(cons(V1,V2))) -> #isNatList(V2)
   #31: #active(isNatIList(V)) -> #mark(isNatList(V))
   #32: #active(isNatIList(V)) -> #isNatList(V)
   #33: #active(isNatIList(cons(V1,V2))) -> #mark(and(isNat(V1),isNatIList(V2)))
   #34: #active(isNatIList(cons(V1,V2))) -> #and(isNat(V1),isNatIList(V2))
   #35: #active(isNatIList(cons(V1,V2))) -> #isNat(V1)
   #36: #active(isNatIList(cons(V1,V2))) -> #isNatIList(V2)
   #37: #take(X1,mark(X2)) -> #take(X1,X2)
   #38: #mark(s(X)) -> #active(s(mark(X)))
   #39: #mark(s(X)) -> #s(mark(X))
   #40: #mark(s(X)) -> #mark(X)
   #41: #mark(tt()) -> #active(tt())
   #42: #length(active(X)) -> #length(X)
   #43: #isNatIList(active(X)) -> #isNatIList(X)
   #44: #active(isNatList(nil())) -> #mark(tt())
   #45: #mark(isNat(X)) -> #active(isNat(X))
   #46: #take(mark(X1),X2) -> #take(X1,X2)
   #47: #active(isNatList(take(V1,V2))) -> #mark(and(isNat(V1),isNatIList(V2)))
   #48: #active(isNatList(take(V1,V2))) -> #and(isNat(V1),isNatIList(V2))
   #49: #active(isNatList(take(V1,V2))) -> #isNat(V1)
   #50: #active(isNatList(take(V1,V2))) -> #isNatIList(V2)
   #51: #and(active(X1),X2) -> #and(X1,X2)
   #52: #mark(and(X1,X2)) -> #active(and(mark(X1),X2))
   #53: #mark(and(X1,X2)) -> #and(mark(X1),X2)
   #54: #mark(and(X1,X2)) -> #mark(X1)
   #55: #U31(active(X1),X2,X3,X4) -> #U31(X1,X2,X3,X4)
   #56: #U31(X1,mark(X2),X3,X4) -> #U31(X1,X2,X3,X4)
   #57: #mark(length(X)) -> #active(length(mark(X)))
   #58: #mark(length(X)) -> #length(mark(X))
   #59: #mark(length(X)) -> #mark(X)
   #60: #mark(cons(X1,X2)) -> #active(cons(mark(X1),X2))
   #61: #mark(cons(X1,X2)) -> #cons(mark(X1),X2)
   #62: #mark(cons(X1,X2)) -> #mark(X1)
   #63: #active(isNat(length(V1))) -> #mark(isNatList(V1))
   #64: #active(isNat(length(V1))) -> #isNatList(V1)
   #65: #U11(X1,mark(X2)) -> #U11(X1,X2)
   #66: #active(isNatIList(zeros())) -> #mark(tt())
   #67: #isNat(mark(X)) -> #isNat(X)
   #68: #mark(isNatIList(X)) -> #active(isNatIList(X))
   #69: #active(and(tt(),X)) -> #mark(X)
   #70: #length(mark(X)) -> #length(X)
   #71: #isNat(active(X)) -> #isNat(X)
   #72: #mark(U31(X1,X2,X3,X4)) -> #active(U31(mark(X1),X2,X3,X4))
   #73: #mark(U31(X1,X2,X3,X4)) -> #U31(mark(X1),X2,X3,X4)
   #74: #mark(U31(X1,X2,X3,X4)) -> #mark(X1)
   #75: #mark(U11(X1,X2)) -> #active(U11(mark(X1),X2))
   #76: #mark(U11(X1,X2)) -> #U11(mark(X1),X2)
   #77: #mark(U11(X1,X2)) -> #mark(X1)
   #78: #cons(mark(X1),X2) -> #cons(X1,X2)
   #79: #mark(nil()) -> #active(nil())
   #80: #and(mark(X1),X2) -> #and(X1,X2)
   #81: #active(take(0(),IL)) -> #mark(U21(isNatIList(IL)))
   #82: #active(take(0(),IL)) -> #U21(isNatIList(IL))
   #83: #active(take(0(),IL)) -> #isNatIList(IL)
   #84: #mark(isNatList(X)) -> #active(isNatList(X))
   #85: #mark(zeros()) -> #active(zeros())
   #86: #and(X1,active(X2)) -> #and(X1,X2)
   #87: #mark(U21(X)) -> #active(U21(mark(X)))
   #88: #mark(U21(X)) -> #U21(mark(X))
   #89: #mark(U21(X)) -> #mark(X)
   #90: #isNatIList(mark(X)) -> #isNatIList(X)
   #91: #cons(active(X1),X2) -> #cons(X1,X2)
   #92: #mark(0()) -> #active(0())
   #93: #active(length(cons(N,L))) -> #mark(U11(and(isNatList(L),isNat(N)),L))
   #94: #active(length(cons(N,L))) -> #U11(and(isNatList(L),isNat(N)),L)
   #95: #active(length(cons(N,L))) -> #and(isNatList(L),isNat(N))
   #96: #active(length(cons(N,L))) -> #isNatList(L)
   #97: #active(length(cons(N,L))) -> #isNat(N)
   #98: #active(U21(tt())) -> #mark(nil())
   #99: #active(zeros()) -> #mark(cons(0(),zeros()))
   #100: #active(zeros()) -> #cons(0(),zeros())
   #101: #U31(X1,X2,active(X3),X4) -> #U31(X1,X2,X3,X4)
   #102: #active(isNat(s(V1))) -> #mark(isNat(V1))
   #103: #active(isNat(s(V1))) -> #isNat(V1)
   #104: #active(length(nil())) -> #mark(0())
   #105: #active(U31(tt(),IL,M,N)) -> #mark(cons(N,take(M,IL)))
   #106: #active(U31(tt(),IL,M,N)) -> #cons(N,take(M,IL))
   #107: #active(U31(tt(),IL,M,N)) -> #take(M,IL)
   #108: #U31(X1,X2,mark(X3),X4) -> #U31(X1,X2,X3,X4)
   #109: #active(take(s(M),cons(N,IL))) -> #mark(U31(and(isNatIList(IL),and(isNat(M),isNat(N))),IL,M,N))
   #110: #active(take(s(M),cons(N,IL))) -> #U31(and(isNatIList(IL),and(isNat(M),isNat(N))),IL,M,N)
   #111: #active(take(s(M),cons(N,IL))) -> #and(isNatIList(IL),and(isNat(M),isNat(N)))
   #112: #active(take(s(M),cons(N,IL))) -> #isNatIList(IL)
   #113: #active(take(s(M),cons(N,IL))) -> #and(isNat(M),isNat(N))
   #114: #active(take(s(M),cons(N,IL))) -> #isNat(M)
   #115: #active(take(s(M),cons(N,IL))) -> #isNat(N)
Number of SCCs: 12, DPs: 67, edges: 362
	SCC { #43 #90 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
   U21(x1)	weight: 0
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#isNat(x1)	weight: 0
#take(x1,x2)	weight: 0
  take(x1,x2)	weight: 0
   and(x1,x2)	weight: 0
isNatIList(x1)	weight: 0
 zeros()	weight: 0
#mark(x1)	weight: 0
     0()	weight: 0
#isNatList(x1)	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
 isNat(x1)	weight: 0
 #U11(x1,x2)	weight: 0
active(x1)	weight: (/ 1 2) + x1
   U31(x1,x2,x3,x4)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#isNatIList(x1)	weight: x1
 #U21(x1)	weight: 0
    tt()	weight: 0
length(x1)	weight: 0
#length(x1)	weight: 0
 #U31(x1,x2,x3,x4)	weight: 0
 #and(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #43 #90
Number of SCCs: 11, DPs: 65, edges: 358
	SCC { #67 #71 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
   U21(x1)	weight: 0
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#isNat(x1)	weight: x1
#take(x1,x2)	weight: 0
  take(x1,x2)	weight: 0
   and(x1,x2)	weight: 0
isNatIList(x1)	weight: 0
 zeros()	weight: 0
#mark(x1)	weight: 0
     0()	weight: 0
#isNatList(x1)	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
 isNat(x1)	weight: 0
 #U11(x1,x2)	weight: 0
active(x1)	weight: (/ 1 2) + x1
   U31(x1,x2,x3,x4)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#isNatIList(x1)	weight: 0
 #U21(x1)	weight: 0
    tt()	weight: 0
length(x1)	weight: 0
#length(x1)	weight: 0
 #U31(x1,x2,x3,x4)	weight: 0
 #and(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #67 #71
Number of SCCs: 10, DPs: 63, edges: 354
	SCC { #11 #15 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
   U21(x1)	weight: 0
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#isNat(x1)	weight: 0
#take(x1,x2)	weight: 0
  take(x1,x2)	weight: 0
   and(x1,x2)	weight: 0
isNatIList(x1)	weight: 0
 zeros()	weight: 0
#mark(x1)	weight: 0
     0()	weight: 0
#isNatList(x1)	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
 isNat(x1)	weight: 0
 #U11(x1,x2)	weight: 0
active(x1)	weight: (/ 1 2) + x1
   U31(x1,x2,x3,x4)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#isNatIList(x1)	weight: 0
 #U21(x1)	weight: x1
    tt()	weight: 0
length(x1)	weight: 0
#length(x1)	weight: 0
 #U31(x1,x2,x3,x4)	weight: 0
 #and(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #11 #15
Number of SCCs: 9, DPs: 61, edges: 350
	SCC { #42 #70 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
   U21(x1)	weight: 0
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#isNat(x1)	weight: 0
#take(x1,x2)	weight: 0
  take(x1,x2)	weight: 0
   and(x1,x2)	weight: 0
isNatIList(x1)	weight: 0
 zeros()	weight: 0
#mark(x1)	weight: 0
     0()	weight: 0
#isNatList(x1)	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
 isNat(x1)	weight: 0
 #U11(x1,x2)	weight: 0
active(x1)	weight: (/ 1 2) + x1
   U31(x1,x2,x3,x4)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#isNatIList(x1)	weight: 0
 #U21(x1)	weight: 0
    tt()	weight: 0
length(x1)	weight: 0
#length(x1)	weight: x1
 #U31(x1,x2,x3,x4)	weight: 0
 #and(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #42 #70
Number of SCCs: 8, DPs: 59, edges: 346
	SCC { #10 #24 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
   U21(x1)	weight: 0
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#isNat(x1)	weight: 0
#take(x1,x2)	weight: 0
  take(x1,x2)	weight: 0
   and(x1,x2)	weight: 0
isNatIList(x1)	weight: 0
 zeros()	weight: 0
#mark(x1)	weight: 0
     0()	weight: 0
#isNatList(x1)	weight: x1
   #s(x1)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
 isNat(x1)	weight: 0
 #U11(x1,x2)	weight: 0
active(x1)	weight: (/ 1 2) + x1
   U31(x1,x2,x3,x4)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#isNatIList(x1)	weight: 0
 #U21(x1)	weight: 0
    tt()	weight: 0
length(x1)	weight: 0
#length(x1)	weight: 0
 #U31(x1,x2,x3,x4)	weight: 0
 #and(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #10 #24
Number of SCCs: 7, DPs: 57, edges: 342
	SCC { #4 #12 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
   U21(x1)	weight: 0
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#isNat(x1)	weight: 0
#take(x1,x2)	weight: 0
  take(x1,x2)	weight: 0
   and(x1,x2)	weight: 0
isNatIList(x1)	weight: 0
 zeros()	weight: 0
#mark(x1)	weight: 0
     0()	weight: 0
#isNatList(x1)	weight: 0
   #s(x1)	weight: x1
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
 isNat(x1)	weight: 0
 #U11(x1,x2)	weight: 0
active(x1)	weight: (/ 1 2) + x1
   U31(x1,x2,x3,x4)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#isNatIList(x1)	weight: 0
 #U21(x1)	weight: 0
    tt()	weight: 0
length(x1)	weight: 0
#length(x1)	weight: 0
 #U31(x1,x2,x3,x4)	weight: 0
 #and(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #4 #12
Number of SCCs: 6, DPs: 55, edges: 338
	SCC { #13 #20 #25 #65 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
   U21(x1)	weight: 0
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#isNat(x1)	weight: 0
#take(x1,x2)	weight: 0
  take(x1,x2)	weight: 0
   and(x1,x2)	weight: 0
isNatIList(x1)	weight: 0
 zeros()	weight: 0
#mark(x1)	weight: 0
     0()	weight: 0
#isNatList(x1)	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
 isNat(x1)	weight: 0
 #U11(x1,x2)	weight: x2
active(x1)	weight: (/ 1 2) + x1
   U31(x1,x2,x3,x4)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#isNatIList(x1)	weight: 0
 #U21(x1)	weight: 0
    tt()	weight: 0
length(x1)	weight: 0
#length(x1)	weight: 0
 #U31(x1,x2,x3,x4)	weight: 0
 #and(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #13 #65
Number of SCCs: 6, DPs: 53, edges: 326
	SCC { #20 #25 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
   U21(x1)	weight: 0
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#isNat(x1)	weight: 0
#take(x1,x2)	weight: 0
  take(x1,x2)	weight: 0
   and(x1,x2)	weight: 0
isNatIList(x1)	weight: 0
 zeros()	weight: 0
#mark(x1)	weight: 0
     0()	weight: 0
#isNatList(x1)	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
 isNat(x1)	weight: 0
 #U11(x1,x2)	weight: x1
active(x1)	weight: (/ 1 2) + x1
   U31(x1,x2,x3,x4)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#isNatIList(x1)	weight: 0
 #U21(x1)	weight: 0
    tt()	weight: 0
length(x1)	weight: 0
#length(x1)	weight: 0
 #U31(x1,x2,x3,x4)	weight: 0
 #and(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #20 #25
Number of SCCs: 5, DPs: 51, edges: 322
	SCC { #19 #51 #80 #86 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
   U21(x1)	weight: 0
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#isNat(x1)	weight: 0
#take(x1,x2)	weight: 0
  take(x1,x2)	weight: 0
   and(x1,x2)	weight: 0
isNatIList(x1)	weight: 0
 zeros()	weight: 0
#mark(x1)	weight: 0
     0()	weight: 0
#isNatList(x1)	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
 isNat(x1)	weight: 0
 #U11(x1,x2)	weight: 0
active(x1)	weight: (/ 1 2) + x1
   U31(x1,x2,x3,x4)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#isNatIList(x1)	weight: 0
 #U21(x1)	weight: 0
    tt()	weight: 0
length(x1)	weight: 0
#length(x1)	weight: 0
 #U31(x1,x2,x3,x4)	weight: 0
 #and(x1,x2)	weight: x1
    Usable rules: { }
    Removed DPs: #51 #80
Number of SCCs: 6, DPs: 49, edges: 310
	SCC { #19 #86 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
   U21(x1)	weight: 0
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#isNat(x1)	weight: 0
#take(x1,x2)	weight: 0
  take(x1,x2)	weight: 0
   and(x1,x2)	weight: 0
isNatIList(x1)	weight: 0
 zeros()	weight: 0
#mark(x1)	weight: 0
     0()	weight: 0
#isNatList(x1)	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
 isNat(x1)	weight: 0
 #U11(x1,x2)	weight: 0
active(x1)	weight: (/ 1 2) + x1
   U31(x1,x2,x3,x4)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#isNatIList(x1)	weight: 0
 #U21(x1)	weight: 0
    tt()	weight: 0
length(x1)	weight: 0
#length(x1)	weight: 0
 #U31(x1,x2,x3,x4)	weight: 0
 #and(x1,x2)	weight: x2
    Usable rules: { }
    Removed DPs: #19 #86
Number of SCCs: 5, DPs: 47, edges: 306
	SCC { #18 #22 #37 #46 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
   U21(x1)	weight: 0
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#isNat(x1)	weight: 0
#take(x1,x2)	weight: x2
  take(x1,x2)	weight: 0
   and(x1,x2)	weight: 0
isNatIList(x1)	weight: 0
 zeros()	weight: 0
#mark(x1)	weight: 0
     0()	weight: 0
#isNatList(x1)	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
 isNat(x1)	weight: 0
 #U11(x1,x2)	weight: 0
active(x1)	weight: (/ 1 2) + x1
   U31(x1,x2,x3,x4)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#isNatIList(x1)	weight: 0
 #U21(x1)	weight: 0
    tt()	weight: 0
length(x1)	weight: 0
#length(x1)	weight: 0
 #U31(x1,x2,x3,x4)	weight: 0
 #and(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #22 #37
Number of SCCs: 6, DPs: 45, edges: 294
	SCC { #18 #46 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
   U21(x1)	weight: 0
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#isNat(x1)	weight: 0
#take(x1,x2)	weight: x1
  take(x1,x2)	weight: 0
   and(x1,x2)	weight: 0
isNatIList(x1)	weight: 0
 zeros()	weight: 0
#mark(x1)	weight: 0
     0()	weight: 0
#isNatList(x1)	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
 isNat(x1)	weight: 0
 #U11(x1,x2)	weight: 0
active(x1)	weight: (/ 1 2) + x1
   U31(x1,x2,x3,x4)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#isNatIList(x1)	weight: 0
 #U21(x1)	weight: 0
    tt()	weight: 0
length(x1)	weight: 0
#length(x1)	weight: 0
 #U31(x1,x2,x3,x4)	weight: 0
 #and(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #18 #46
Number of SCCs: 5, DPs: 43, edges: 290
	SCC { #9 #14 #78 #91 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
   U21(x1)	weight: 0
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: 0
#cons(x1,x2)	weight: x2
     s(x1)	weight: 0
#isNat(x1)	weight: 0
#take(x1,x2)	weight: 0
  take(x1,x2)	weight: 0
   and(x1,x2)	weight: 0
isNatIList(x1)	weight: 0
 zeros()	weight: 0
#mark(x1)	weight: 0
     0()	weight: 0
#isNatList(x1)	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
 isNat(x1)	weight: 0
 #U11(x1,x2)	weight: 0
active(x1)	weight: (/ 1 2) + x1
   U31(x1,x2,x3,x4)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#isNatIList(x1)	weight: 0
 #U21(x1)	weight: 0
    tt()	weight: 0
length(x1)	weight: 0
#length(x1)	weight: 0
 #U31(x1,x2,x3,x4)	weight: 0
 #and(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #9 #14
Number of SCCs: 6, DPs: 41, edges: 278
	SCC { #78 #91 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
   U21(x1)	weight: 0
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: 0
#cons(x1,x2)	weight: x1
     s(x1)	weight: 0
#isNat(x1)	weight: 0
#take(x1,x2)	weight: 0
  take(x1,x2)	weight: 0
   and(x1,x2)	weight: 0
isNatIList(x1)	weight: 0
 zeros()	weight: 0
#mark(x1)	weight: 0
     0()	weight: 0
#isNatList(x1)	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
 isNat(x1)	weight: 0
 #U11(x1,x2)	weight: 0
active(x1)	weight: (/ 1 2) + x1
   U31(x1,x2,x3,x4)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#isNatIList(x1)	weight: 0
 #U21(x1)	weight: 0
    tt()	weight: 0
length(x1)	weight: 0
#length(x1)	weight: 0
 #U31(x1,x2,x3,x4)	weight: 0
 #and(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #78 #91
Number of SCCs: 5, DPs: 39, edges: 274
	SCC { #16 #17 #23 #26 #55 #56 #101 #108 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
   U21(x1)	weight: 0
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#isNat(x1)	weight: 0
#take(x1,x2)	weight: 0
  take(x1,x2)	weight: 0
   and(x1,x2)	weight: 0
isNatIList(x1)	weight: 0
 zeros()	weight: 0
#mark(x1)	weight: 0
     0()	weight: 0
#isNatList(x1)	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
 isNat(x1)	weight: 0
 #U11(x1,x2)	weight: 0
active(x1)	weight: (/ 1 2) + x1
   U31(x1,x2,x3,x4)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#isNatIList(x1)	weight: 0
 #U21(x1)	weight: 0
    tt()	weight: 0
length(x1)	weight: 0
#length(x1)	weight: 0
 #U31(x1,x2,x3,x4)	weight: x2 + x3 + x4
 #and(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #16 #23 #26 #56 #101 #108
Number of SCCs: 6, DPs: 33, edges: 214
	SCC { #17 #55 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
   U21(x1)	weight: 0
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#isNat(x1)	weight: 0
#take(x1,x2)	weight: 0
  take(x1,x2)	weight: 0
   and(x1,x2)	weight: 0
isNatIList(x1)	weight: 0
 zeros()	weight: 0
#mark(x1)	weight: 0
     0()	weight: 0
#isNatList(x1)	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
 isNat(x1)	weight: 0
 #U11(x1,x2)	weight: 0
active(x1)	weight: (/ 1 2) + x1
   U31(x1,x2,x3,x4)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#isNatIList(x1)	weight: 0
 #U21(x1)	weight: 0
    tt()	weight: 0
length(x1)	weight: 0
#length(x1)	weight: 0
 #U31(x1,x2,x3,x4)	weight: x1
 #and(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #17 #55
Number of SCCs: 5, DPs: 31, edges: 210
	SCC { #1 #5 #7 #8 #27 #31 #33 #40 #45 #47 #52 #54 #57 #59 #62 #63 #68 #69 #72 #74 #75 #77 #81 #84 #85 #89 #93 #99 #102 #105 #109 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
   U21(x1)	weight: (/ 1 4) + x1
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: (/ 1 4) + x1 + x2
#cons(x1,x2)	weight: 0
     s(x1)	weight: x1
#isNat(x1)	weight: 0
#take(x1,x2)	weight: 0
  take(x1,x2)	weight: (/ 1 2) + x1 + x2
   and(x1,x2)	weight: x1 + x2
isNatIList(x1)	weight: 0
 zeros()	weight: 0
#mark(x1)	weight: x1
     0()	weight: 0
#isNatList(x1)	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: x1
 isNat(x1)	weight: 0
 #U11(x1,x2)	weight: 0
active(x1)	weight: x1
   U31(x1,x2,x3,x4)	weight: (/ 1 2) + x1 + x2 + x3 + x4
  cons(x1,x2)	weight: x1 + x2
#active(x1)	weight: x1
#isNatIList(x1)	weight: 0
 #U21(x1)	weight: 0
    tt()	weight: 0
length(x1)	weight: (/ 1 4) + x1
#length(x1)	weight: 0
 #U31(x1,x2,x3,x4)	weight: 0
 #and(x1,x2)	weight: 0
    Usable rules: { 1..69 }
    Removed DPs: #7 #8 #59 #74 #77 #81 #89
Number of SCCs: 6, DPs: 24, edges: 74
	SCC { #1 #5 #27 #31 #33 #40 #45 #47 #52 #54 #57 #62 #63 #68 #69 #72 #75 #84 #85 #93 #99 #102 #105 #109 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
   U21(x1)	weight: (/ 1 4) + x1
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: (/ 1 4) + x1
#cons(x1,x2)	weight: 0
     s(x1)	weight: x1
#isNat(x1)	weight: 0
#take(x1,x2)	weight: 0
  take(x1,x2)	weight: (/ 1 2) + x1 + x2
   and(x1,x2)	weight: x1 + x2
isNatIList(x1)	weight: 0
 zeros()	weight: 0
#mark(x1)	weight: x1
     0()	weight: 0
#isNatList(x1)	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: x1
 isNat(x1)	weight: 0
 #U11(x1,x2)	weight: 0
active(x1)	weight: x1
   U31(x1,x2,x3,x4)	weight: (/ 1 4) + x1 + x3 + x4
  cons(x1,x2)	weight: x1
#active(x1)	weight: x1
#isNatIList(x1)	weight: 0
 #U21(x1)	weight: 0
    tt()	weight: 0
length(x1)	weight: (/ 1 4)
#length(x1)	weight: 0
 #U31(x1,x2,x3,x4)	weight: 0
 #and(x1,x2)	weight: 0
    Usable rules: { 1..69 }
    Removed DPs: #105 #109
Number of SCCs: 6, DPs: 20, edges: 62
	SCC { #1 #27 #31 #33 #40 #45 #47 #52 #54 #57 #62 #63 #68 #69 #75 #84 #85 #93 #99 #102 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
   U21(x1)	weight: (/ 1 4) + x1
isNatList(x1)	weight: x1
   U11(x1,x2)	weight: (/ 1 4) + x2
#cons(x1,x2)	weight: 0
     s(x1)	weight: x1
#isNat(x1)	weight: 0
#take(x1,x2)	weight: 0
  take(x1,x2)	weight: (/ 1 2) + x1 + x2
   and(x1,x2)	weight: x1 + x2
isNatIList(x1)	weight: (/ 1 4) + x1
 zeros()	weight: 0
#mark(x1)	weight: x1
     0()	weight: 0
#isNatList(x1)	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: x1
 isNat(x1)	weight: x1
 #U11(x1,x2)	weight: 0
active(x1)	weight: x1
   U31(x1,x2,x3,x4)	weight: (/ 1 2) + x2 + x3 + x4
  cons(x1,x2)	weight: x1 + x2
#active(x1)	weight: x1
#isNatIList(x1)	weight: 0
 #U21(x1)	weight: 0
    tt()	weight: 0
length(x1)	weight: (/ 1 4) + x1
#length(x1)	weight: 0
 #U31(x1,x2,x3,x4)	weight: 0
 #and(x1,x2)	weight: 0
    Usable rules: { 1..69 }
    Removed DPs: #31 #47 #63
Number of SCCs: 7, DPs: 17, edges: 51
	SCC { #45 #102 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
   U21(x1)	weight: (/ 1 4) + x1
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: (/ 1 4)
#cons(x1,x2)	weight: 0
     s(x1)	weight: (/ 1 2) + x1
#isNat(x1)	weight: 0
#take(x1,x2)	weight: 0
  take(x1,x2)	weight: (/ 1 4)
   and(x1,x2)	weight: 0
isNatIList(x1)	weight: (/ 1 4)
 zeros()	weight: 0
#mark(x1)	weight: (/ 1 4) + x1
     0()	weight: 0
#isNatList(x1)	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 4) + x1
 isNat(x1)	weight: x1
 #U11(x1,x2)	weight: 0
active(x1)	weight: (/ 1 4) + x1
   U31(x1,x2,x3,x4)	weight: (/ 1 2) + x3 + x4
  cons(x1,x2)	weight: (/ 1 4) + x1
#active(x1)	weight: x1
#isNatIList(x1)	weight: 0
 #U21(x1)	weight: 0
    tt()	weight: 0
length(x1)	weight: (/ 1 4)
#length(x1)	weight: 0
 #U31(x1,x2,x3,x4)	weight: 0
 #and(x1,x2)	weight: 0
    Usable rules: { 64 65 }
    Removed DPs: #45 #102
Number of SCCs: 6, DPs: 15, edges: 49
	SCC { #1 #27 #33 #40 #52 #54 #57 #62 #68 #69 #75 #84 #85 #93 #99 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... succeeded.
   U21(x1)	weight: (/ 5 16)
isNatList(x1)	weight: (/ 3 16) + x1
   U11(x1,x2)	weight: max{(/ 5 16) + x2, (/ 1 16) + x1}
#cons(x1,x2)	weight: 0
     s(x1)	weight: x1
#isNat(x1)	weight: 0
#take(x1,x2)	weight: 0
  take(x1,x2)	weight: max{(/ 5 16) + x2, x1}
   and(x1,x2)	weight: max{x2, (/ 1 16) + x1}
isNatIList(x1)	weight: (/ 1 4) + x1
 zeros()	weight: (/ 3 8)
#mark(x1)	weight: x1
     0()	weight: (/ 1 4)
#isNatList(x1)	weight: 0
   #s(x1)	weight: 0
   nil()	weight: (/ 1 8)
  mark(x1)	weight: x1
 isNat(x1)	weight: (/ 1 16) + x1
 #U11(x1,x2)	weight: 0
active(x1)	weight: x1
   U31(x1,x2,x3,x4)	weight: max{0, (/ 1 16) + x4, x3, (/ 5 16) + x2}
  cons(x1,x2)	weight: max{x2, (/ 1 16) + x1}
#active(x1)	weight: x1
#isNatIList(x1)	weight: 0
 #U21(x1)	weight: 0
    tt()	weight: (/ 5 16)
length(x1)	weight: (/ 5 16) + x1
#length(x1)	weight: 0
 #U31(x1,x2,x3,x4)	weight: 0
 #and(x1,x2)	weight: 0
    Usable rules: { 1..69 }
    Removed DPs: #54 #62
Number of SCCs: 6, DPs: 11, edges: 21
	SCC { #1 #27 #33 #40 #52 #57 #68 #69 #75 #84 #93 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
   U21(x1)	weight: (/ 3 8)
isNatList(x1)	weight: (/ 1 8)
   U11(x1,x2)	weight: (/ 183361 8)
#cons(x1,x2)	weight: 0
     s(x1)	weight: x1
#isNat(x1)	weight: 0
#take(x1,x2)	weight: 0
  take(x1,x2)	weight: (/ 1 8)
   and(x1,x2)	weight: x2
isNatIList(x1)	weight: (/ 1 8) + x1
 zeros()	weight: 0
#mark(x1)	weight: (/ 1 8) + x1
     0()	weight: 0
#isNatList(x1)	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: x1
 isNat(x1)	weight: (/ 342617 8)
 #U11(x1,x2)	weight: 0
active(x1)	weight: (/ 1 8) + x1
   U31(x1,x2,x3,x4)	weight: (/ 1 8) + x4
  cons(x1,x2)	weight: (/ 1 8) + x2
#active(x1)	weight: (/ 1 8) + x1
#isNatIList(x1)	weight: 0
 #U21(x1)	weight: 0
    tt()	weight: 0
length(x1)	weight: (/ 183361 8)
#length(x1)	weight: 0
 #U31(x1,x2,x3,x4)	weight: 0
 #and(x1,x2)	weight: 0
    Usable rules: { 34..41 44 45 48..69 }
    Removed DPs: #33
Number of SCCs: 6, DPs: 9, edges: 17
	SCC { #1 #27 #40 #52 #57 #69 #75 #84 #93 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
   U21(x1)	weight: (/ 1 2)
isNatList(x1)	weight: (/ 1 8) + x1
   U11(x1,x2)	weight: (/ 183361 8)
#cons(x1,x2)	weight: 0
     s(x1)	weight: x1
#isNat(x1)	weight: 0
#take(x1,x2)	weight: 0
  take(x1,x2)	weight: (/ 1 8)
   and(x1,x2)	weight: (/ 1 8) + x2
isNatIList(x1)	weight: (/ 1 4) + x1
 zeros()	weight: 0
#mark(x1)	weight: (/ 1 8) + x1
     0()	weight: 0
#isNatList(x1)	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: x1
 isNat(x1)	weight: (/ 1 8)
 #U11(x1,x2)	weight: 0
active(x1)	weight: (/ 1 4) + x1
   U31(x1,x2,x3,x4)	weight: (/ 1 8) + x4
  cons(x1,x2)	weight: (/ 1 4) + x1 + x2
#active(x1)	weight: (/ 1 8) + x1
#isNatIList(x1)	weight: 0
 #U21(x1)	weight: 0
    tt()	weight: 0
length(x1)	weight: (/ 183361 8)
#length(x1)	weight: 0
 #U31(x1,x2,x3,x4)	weight: 0
 #and(x1,x2)	weight: 0
    Usable rules: { 34..41 44 45 48..69 }
    Removed DPs: #27 #69
Number of SCCs: 6, DPs: 5, edges: 7
	SCC { #1 #40 #57 #75 #93 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... succeeded.
   U21(x1)	weight: (max (/ 1 16) 0); 0
isNatList(x1)	weight: (max (- (/ 1 16)) 0); x1_2
   U11(x1,x2)	weight: max{0, (/ 3 8) + x2_1 + x1_1 + x1_2}; 0
#cons(x1,x2)	weight: 0; 0
     s(x1)	weight: max{0, (/ 5 16) + x1_1}; (- (/ 1 8))
#isNat(x1)	weight: 0; 0
#take(x1,x2)	weight: 0; 0
  take(x1,x2)	weight: max{0, x1_1}; 0
   and(x1,x2)	weight: max{0, x2_1 + x1_1}; x2_2 + x1_2
isNatIList(x1)	weight: max{0, x1_2}; 0
 zeros()	weight: (/ 1 16); (- (/ 5 16))
#mark(x1)	weight: max{0, (/ 1 16) + x1_1 + x1_2}; 0
     0()	weight: (/ 1 16); (- (/ 1 16))
#isNatList(x1)	weight: 0; 0
   #s(x1)	weight: 0; 0
   nil()	weight: (/ 1 16); 0
  mark(x1)	weight: max{0, x1_1}; x1_2
 isNat(x1)	weight: (max (- (/ 3 16)) 0); 0
 #U11(x1,x2)	weight: 0; 0
active(x1)	weight: max{0, x1_1}; x1_2
   U31(x1,x2,x3,x4)	weight: max{0, (/ 5 16) + x3_1 + x1_1}; 0
  cons(x1,x2)	weight: max{0, (/ 5 16) + x2_1 + x2_2}; x2_2
#active(x1)	weight: max{0, (/ 1 16) + x1_1}; 0
#isNatIList(x1)	weight: 0; 0
 #U21(x1)	weight: 0; 0
    tt()	weight: 0; 0
length(x1)	weight: max{0, (/ 1 16) + x1_1}; 0
#length(x1)	weight: 0; 0
 #U31(x1,x2,x3,x4)	weight: 0; 0
 #and(x1,x2)	weight: 0; 0
    Usable rules: { 1..69 }
    Removed DPs: #1 #40
Number of SCCs: 5, DPs: 0, edges: 0
