Input TRS:
    1: terms(N) -> cons(recip(sqr(N)),terms(s(N)))
    2: sqr(0()) -> 0()
    3: sqr(s(X)) -> s(add(sqr(X),dbl(X)))
    4: dbl(0()) -> 0()
    5: dbl(s(X)) -> s(s(dbl(X)))
    6: add(0(),X) -> X
    7: add(s(X),Y) -> s(add(X,Y))
    8: first(0(),X) -> nil()
    9: first(s(X),cons(Y,Z)) -> cons(Y,first(X,Z))
    10: half(0()) -> 0()
    11: half(s(0())) -> 0()
    12: half(s(s(X))) -> s(half(X))
    13: half(dbl(X)) -> X
Number of strict rules: 13
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #first(s(X),cons(Y,Z)) -> #first(X,Z)
   #2: #half(s(s(X))) -> #half(X)
   #3: #add(s(X),Y) -> #add(X,Y)
   #4: #dbl(s(X)) -> #dbl(X)
   #5: #sqr(s(X)) -> #add(sqr(X),dbl(X))
   #6: #sqr(s(X)) -> #sqr(X)
   #7: #sqr(s(X)) -> #dbl(X)
   #8: #terms(N) -> #sqr(N)
   #9: #terms(N) -> #terms(s(N))
Number of SCCs: 6, DPs: 6, edges: 6
	SCC { #4 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 1 2) + x1
 recip(x1)	weight: 0
   dbl(x1)	weight: 0
 #dbl(x1)	weight: x1
#terms(x1)	weight: 0
#half(x1)	weight: 0
  half(x1)	weight: 0
 #sqr(x1)	weight: 0
     0()	weight: 0
#first(x1,x2)	weight: 0
   nil()	weight: 0
 first(x1,x2)	weight: 0
  cons(x1,x2)	weight: 0
 #add(x1,x2)	weight: 0
   add(x1,x2)	weight: 0
   sqr(x1)	weight: 0
 terms(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #4
Number of SCCs: 5, DPs: 5, edges: 5
	SCC { #6 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 1 2) + x1
 recip(x1)	weight: 0
   dbl(x1)	weight: 0
 #dbl(x1)	weight: 0
#terms(x1)	weight: 0
#half(x1)	weight: 0
  half(x1)	weight: 0
 #sqr(x1)	weight: x1
     0()	weight: 0
#first(x1,x2)	weight: 0
   nil()	weight: 0
 first(x1,x2)	weight: 0
  cons(x1,x2)	weight: 0
 #add(x1,x2)	weight: 0
   add(x1,x2)	weight: 0
   sqr(x1)	weight: 0
 terms(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #6
Number of SCCs: 4, DPs: 4, edges: 4
	SCC { #9 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  found.
  #terms(N)	-#9->
  #terms(s(N))	--->*
  #terms(s(N))
  Looping with: [ N := s(N); ]
