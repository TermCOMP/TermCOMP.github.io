Input TRS:
    1: app(app(.(),1()),x) -> x
    2: app(app(.(),x),1()) -> x
    3: app(app(.(),app(i(),x)),x) -> 1()
    4: app(app(.(),x),app(i(),x)) -> 1()
    5: app(app(.(),app(i(),y)),app(app(.(),y),z)) -> z
    6: app(app(.(),y),app(app(.(),app(i(),y)),z)) -> z
    7: app(i(),1()) -> 1()
    8: app(i(),app(i(),x)) -> x
    9: app(app(map(),f),nil()) -> nil()
    10: app(app(map(),f),app(app(cons(),x),xs)) -> app(app(cons(),app(f,x)),app(app(map(),f),xs))
    11: app(app(filter(),f),nil()) -> nil()
    12: app(app(filter(),f),app(app(cons(),x),xs)) -> app(app(app(app(filter2(),app(f,x)),f),x),xs)
    13: app(app(app(app(filter2(),true()),f),x),xs) -> app(app(cons(),x),app(app(filter(),f),xs))
    14: app(app(app(app(filter2(),false()),f),x),xs) -> app(app(filter(),f),xs)
Number of strict rules: 14
Direct Order(PosReal,>,Poly) ... failed.
Freezing app
1: app❆2_.(1(),x) -> x
2: app❆2_.(x,1()) -> x
3: app❆2_.(app❆1_i(x),x) -> 1()
4: app❆2_.(x,app❆1_i(x)) -> 1()
5: app❆2_.(app❆1_i(y),app❆2_.(y,z)) -> z
6: app❆2_.(y,app❆2_.(app❆1_i(y),z)) -> z
7: app❆1_i(1()) -> 1()
8: app❆1_i(app❆1_i(x)) -> x
9: app❆2_map(f,nil()) -> nil()
10: app❆2_map(f,app❆2_cons(x,xs)) -> app❆2_cons(app(f,x),app❆2_map(f,xs))
11: app❆2_filter(f,nil()) -> nil()
12: app❆2_filter(f,app❆2_cons(x,xs)) -> app❆4_filter2(app(f,x),f,x,xs)
13: app❆4_filter2(true(),f,x,xs) -> app❆2_cons(x,app❆2_filter(f,xs))
14: app❆4_filter2(false(),f,x,xs) -> app❆2_filter(f,xs)
15: app(cons(),_1) ->= app❆1_cons(_1)
16: app(app❆1_cons(_1),_2) ->= app❆2_cons(_1,_2)
17: app(filter(),_1) ->= app❆1_filter(_1)
18: app(app❆1_filter(_1),_2) ->= app❆2_filter(_1,_2)
19: app(map(),_1) ->= app❆1_map(_1)
20: app(app❆1_map(_1),_2) ->= app❆2_map(_1,_2)
21: app(filter2(),_1) ->= app❆1_filter2(_1)
22: app(app❆1_filter2(_1),_2) ->= app❆2_filter2(_1,_2)
23: app(app❆2_filter2(_1,_2),_3) ->= app❆3_filter2(_1,_2,_3)
24: app(app❆3_filter2(_1,_2,_3),_4) ->= app❆4_filter2(_1,_2,_3,_4)
25: app(.(),_1) ->= app❆1_.(_1)
26: app(app❆1_.(_1),_2) ->= app❆2_.(_1,_2)
27: app(i(),_1) ->= app❆1_i(_1)
Number of strict rules: 14
Direct Order(PosReal,>,Poly) ... failed.
Dependency Pairs:
   #1: #app❆4_filter2(true(),f,x,xs) -> #app❆2_filter(f,xs)
   #2: #app(app❆3_filter2(_1,_2,_3),_4) ->? #app❆4_filter2(_1,_2,_3,_4)
   #3: #app❆2_filter(f,app❆2_cons(x,xs)) -> #app❆4_filter2(app(f,x),f,x,xs)
   #4: #app❆2_filter(f,app❆2_cons(x,xs)) -> #app(f,x)
   #5: #app❆4_filter2(false(),f,x,xs) -> #app❆2_filter(f,xs)
   #6: #app(app❆1_map(_1),_2) ->? #app❆2_map(_1,_2)
   #7: #app❆2_map(f,app❆2_cons(x,xs)) -> #app(f,x)
   #8: #app❆2_map(f,app❆2_cons(x,xs)) -> #app❆2_map(f,xs)
   #9: #app(i(),_1) ->? #app❆1_i(_1)
   #10: #app(app❆1_.(_1),_2) ->? #app❆2_.(_1,_2)
   #11: #app(app❆1_filter(_1),_2) ->? #app❆2_filter(_1,_2)
Number of SCCs: 1, DPs: 9, edges: 20
	SCC { #1..8 #11 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     1()	weight: 0
#app❆2_map(x1,x2)	weight: x2
app❆1_map(x1)	weight: (/ 3 16)
app❆1_i(x1)	weight: (/ 3 16) + x1
app❆4_filter2(x1,x2,x3,x4)	weight: (/ 3 4) + x1 + x3 + x4
app❆1_.(x1)	weight: (/ 3 16)
app❆2_map(x1,x2)	weight: (/ 3 8) + x1
 false()	weight: 0
  true()	weight: 0
filter2()	weight: 0
app❆2_filter(x1,x2)	weight: (/ 7 16) + x1 + x2
#app❆2_.(x1,x2)	weight: 0
app❆2_.(x1,x2)	weight: (/ 3 8) + x1
   nil()	weight: 0
app❆1_filter(x1)	weight: (/ 3 16) + x1
#app❆1_i(x1)	weight: 0
 #app(x1,x2)	weight: (/ 1 8) + x2
   map()	weight: 0
#app❆4_filter2(x1,x2,x3,x4)	weight: (/ 1 16) + x4
     .()	weight: 0
app❆2_filter2(x1,x2)	weight: (/ 3 8) + x1
     i()	weight: 0
#app❆2_filter(x1,x2)	weight: x2
  cons()	weight: 0
app❆2_cons(x1,x2)	weight: (/ 3 8) + x1 + x2
filter()	weight: 0
app❆1_filter2(x1)	weight: (/ 3 16)
app❆1_cons(x1)	weight: (/ 3 16) + x1
app❆3_filter2(x1,x2,x3)	weight: (/ 9 16) + x2
   app(x1,x2)	weight: (/ 1 8) + x1
    Usable rules: { }
    Removed DPs: #1..8 #11
Number of SCCs: 0, DPs: 0, edges: 0
