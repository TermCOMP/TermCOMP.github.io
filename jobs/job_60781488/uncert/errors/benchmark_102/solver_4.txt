Input TRS:
    1: ap(f(),x) -> x
    2: ap(ap(ap(g(),x),y),ap(s(),z)) -> ap(ap(ap(g(),x),y),ap(ap(x,y),0()))
Number of strict rules: 2
Direct Order(PosReal,>,Poly) ... failed.
Freezing ap
1: ap❆1_f(x) -> x
2: ap❆3_g(x,y,ap❆1_s(z)) -> ap❆3_g(x,y,ap(ap(x,y),0()))
3: ap(s(),_1) ->= ap❆1_s(_1)
4: ap(g(),_1) ->= ap❆1_g(_1)
5: ap(ap❆1_g(_1),_2) ->= ap❆2_g(_1,_2)
6: ap(ap❆2_g(_1,_2),_3) ->= ap❆3_g(_1,_2,_3)
7: ap(f(),_1) ->= ap❆1_f(_1)
Number of strict rules: 2
Direct Order(PosReal,>,Poly) ... failed.
Dependency Pairs:
   #1: #ap❆3_g(x,y,ap❆1_s(z)) -> #ap❆3_g(x,y,ap(ap(x,y),0()))
   #2: #ap❆3_g(x,y,ap❆1_s(z)) -> #ap(ap(x,y),0())
   #3: #ap❆3_g(x,y,ap❆1_s(z)) -> #ap(x,y)
   #4: #ap(ap❆2_g(_1,_2),_3) ->? #ap❆3_g(_1,_2,_3)
   #5: #ap(f(),_1) ->? #ap❆1_f(_1)
Number of SCCs: 1, DPs: 4, edges: 8
	SCC { #1..4 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s()	weight: 0
ap❆1_s(x1)	weight: (/ 1 8)
    ap(x1,x2)	weight: (/ 1 4) + x1 + x2
#ap❆1_f(x1)	weight: 0
ap❆1_g(x1)	weight: (/ 1 4) + x1
ap❆2_g(x1,x2)	weight: (/ 1 2) + x1 + x2
     f()	weight: 0
#ap❆3_g(x1,x2,x3)	weight: (/ 3 8) + x1 + x2
     0()	weight: 0
ap❆1_f(x1)	weight: x1
  #ap(x1,x2)	weight: x1
ap❆3_g(x1,x2,x3)	weight: 0
     g()	weight: 0
    Usable rules: { 1..7 }
    Removed DPs: #2..4
Number of SCCs: 1, DPs: 1, edges: 1
	SCC { #1 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
