Input TRS:
    1: le(0(),y) -> true()
    2: le(s(x),0()) -> false()
    3: le(s(x),s(y)) -> le(x,y)
    4: minus(x,0()) -> x
    5: minus(s(x),s(y)) -> minus(x,y)
    6: gcd(0(),y) -> y
    7: gcd(s(x),0()) -> s(x)
    8: gcd(s(x),s(y)) -> if_gcd(le(y,x),s(x),s(y))
    9: if_gcd(true(),s(x),s(y)) -> gcd(minus(x,y),s(y))
    10: if_gcd(false(),s(x),s(y)) -> gcd(minus(y,x),s(x))
Number of strict rules: 10
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #if_gcd(true(),s(x),s(y)) -> #gcd(minus(x,y),s(y))
   #2: #if_gcd(true(),s(x),s(y)) -> #minus(x,y)
   #3: #if_gcd(false(),s(x),s(y)) -> #gcd(minus(y,x),s(x))
   #4: #if_gcd(false(),s(x),s(y)) -> #minus(y,x)
   #5: #minus(s(x),s(y)) -> #minus(x,y)
   #6: #le(s(x),s(y)) -> #le(x,y)
   #7: #gcd(s(x),s(y)) -> #if_gcd(le(y,x),s(x),s(y))
   #8: #gcd(s(x),s(y)) -> #le(y,x)
Number of SCCs: 3, DPs: 5, edges: 6
	SCC { #5 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
    le(x1,x2)	weight: 0
     s(x1)	weight: (/ 1 2) + x1
  #le(x1,x2)	weight: 0
 minus(x1,x2)	weight: 0
   gcd(x1,x2)	weight: 0
 false()	weight: 0
  true()	weight: 0
     0()	weight: 0
#minus(x1,x2)	weight: x2
if_gcd(x1,x2,x3)	weight: 0
#if_gcd(x1,x2,x3)	weight: 0
 #gcd(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #5
Number of SCCs: 2, DPs: 4, edges: 5
	SCC { #6 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
    le(x1,x2)	weight: 0
     s(x1)	weight: (/ 1 2) + x1
  #le(x1,x2)	weight: x2
 minus(x1,x2)	weight: 0
   gcd(x1,x2)	weight: 0
 false()	weight: 0
  true()	weight: 0
     0()	weight: 0
#minus(x1,x2)	weight: 0
if_gcd(x1,x2,x3)	weight: 0
#if_gcd(x1,x2,x3)	weight: 0
 #gcd(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #6
Number of SCCs: 1, DPs: 3, edges: 4
	SCC { #1 #3 #7 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
    le(x1,x2)	weight: (/ 1 2)
     s(x1)	weight: (/ 3 2) + x1
  #le(x1,x2)	weight: 0
 minus(x1,x2)	weight: (/ 1 2) + x1
   gcd(x1,x2)	weight: 0
 false()	weight: 0
  true()	weight: 0
     0()	weight: 0
#minus(x1,x2)	weight: 0
if_gcd(x1,x2,x3)	weight: 0
#if_gcd(x1,x2,x3)	weight: x2 + x3
 #gcd(x1,x2)	weight: (/ 1 2) + x1 + x2
    Usable rules: { 4 5 }
    Removed DPs: #1 #3 #7
Number of SCCs: 0, DPs: 0, edges: 0
