Input TRS:
    1: even(0()) -> true()
    2: even(s(0())) -> false()
    3: even(s(s(x))) -> even(x)
    4: half(0()) -> 0()
    5: half(s(s(x))) -> s(half(x))
    6: plus(0(),y) -> y
    7: plus(s(x),y) -> s(plus(x,y))
    8: times(0(),y) -> 0()
    9: times(s(x),y) -> if_times(even(s(x)),s(x),y)
    10: if_times(true(),s(x),y) -> plus(times(half(s(x)),y),times(half(s(x)),y))
    11: if_times(false(),s(x),y) -> plus(y,times(x,y))
Number of strict rules: 11
Direct Order(PosReal,>,Poly) ... failed.
Freezing even half
1: even❆1_0() -> true()
2: even❆1_s(0()) -> false()
3: even❆1_s(s(x)) -> even(x)
4: half❆1_0() -> 0()
5: half❆1_s(s(x)) -> s(half(x))
6: plus(0(),y) -> y
7: plus(s(x),y) -> s(plus(x,y))
8: times(0(),y) -> 0()
9: times(s(x),y) -> if_times(even❆1_s(x),s(x),y)
10: if_times(true(),s(x),y) -> plus(times(half❆1_s(x),y),times(half❆1_s(x),y))
11: if_times(false(),s(x),y) -> plus(y,times(x,y))
12: half(0()) ->= half❆1_0()
13: half(s(_1)) ->= half❆1_s(_1)
14: even(0()) ->= even❆1_0()
15: even(s(_1)) ->= even❆1_s(_1)
Number of strict rules: 11
Direct Order(PosReal,>,Poly) ... failed.
Dependency Pairs:
   #1: #half(s(_1)) ->? #half❆1_s(_1)
   #2: #times(s(x),y) -> #if_times(even❆1_s(x),s(x),y)
   #3: #times(s(x),y) -> #even❆1_s(x)
   #4: #if_times(false(),s(x),y) -> #plus(y,times(x,y))
   #5: #if_times(false(),s(x),y) -> #times(x,y)
   #6: #half(0()) ->? #half❆1_0()
   #7: #even(0()) ->? #even❆1_0()
   #8: #plus(s(x),y) -> #plus(x,y)
   #9: #if_times(true(),s(x),y) -> #plus(times(half❆1_s(x),y),times(half❆1_s(x),y))
   #10: #if_times(true(),s(x),y) -> #times(half❆1_s(x),y)
   #11: #if_times(true(),s(x),y) -> #half❆1_s(x)
   #12: #if_times(true(),s(x),y) -> #times(half❆1_s(x),y)
   #13: #if_times(true(),s(x),y) -> #half❆1_s(x)
   #14: #half❆1_s(s(x)) -> #half(x)
   #15: #even❆1_s(s(x)) -> #even(x)
   #16: #even(s(_1)) ->? #even❆1_s(_1)
Number of SCCs: 4, DPs: 9, edges: 11
	SCC { #8 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 1 2) + x1
#if_times(x1,x2,x3)	weight: 0
even❆1_0()	weight: 0
#half❆1_s(x1)	weight: 0
  even(x1)	weight: 0
#plus(x1,x2)	weight: x1
#even❆1_s(x1)	weight: 0
 false()	weight: 0
#half(x1)	weight: 0
even❆1_s(x1)	weight: 0
  true()	weight: 0
#half❆1_0()	weight: 0
  half(x1)	weight: 0
#even(x1)	weight: 0
half❆1_s(x1)	weight: 0
#times(x1,x2)	weight: 0
     0()	weight: 0
 times(x1,x2)	weight: 0
#even❆1_0()	weight: 0
if_times(x1,x2,x3)	weight: 0
  plus(x1,x2)	weight: 0
half❆1_0()	weight: 0
    Usable rules: { }
    Removed DPs: #8
Number of SCCs: 3, DPs: 8, edges: 10
	SCC { #1 #14 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 1 2) + x1
#if_times(x1,x2,x3)	weight: 0
even❆1_0()	weight: 0
#half❆1_s(x1)	weight: x1
  even(x1)	weight: 0
#plus(x1,x2)	weight: 0
#even❆1_s(x1)	weight: 0
 false()	weight: 0
#half(x1)	weight: x1
even❆1_s(x1)	weight: 0
  true()	weight: 0
#half❆1_0()	weight: 0
  half(x1)	weight: 0
#even(x1)	weight: 0
half❆1_s(x1)	weight: 0
#times(x1,x2)	weight: 0
     0()	weight: 0
 times(x1,x2)	weight: 0
#even❆1_0()	weight: 0
if_times(x1,x2,x3)	weight: 0
  plus(x1,x2)	weight: 0
half❆1_0()	weight: 0
    Usable rules: { }
    Removed DPs: #1 #14
Number of SCCs: 2, DPs: 6, edges: 8
	SCC { #15 #16 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 1 2) + x1
#if_times(x1,x2,x3)	weight: 0
even❆1_0()	weight: 0
#half❆1_s(x1)	weight: 0
  even(x1)	weight: 0
#plus(x1,x2)	weight: 0
#even❆1_s(x1)	weight: x1
 false()	weight: 0
#half(x1)	weight: 0
even❆1_s(x1)	weight: 0
  true()	weight: 0
#half❆1_0()	weight: 0
  half(x1)	weight: 0
#even(x1)	weight: x1
half❆1_s(x1)	weight: 0
#times(x1,x2)	weight: 0
     0()	weight: 0
 times(x1,x2)	weight: 0
#even❆1_0()	weight: 0
if_times(x1,x2,x3)	weight: 0
  plus(x1,x2)	weight: 0
half❆1_0()	weight: 0
    Usable rules: { }
    Removed DPs: #15 #16
Number of SCCs: 1, DPs: 4, edges: 6
	SCC { #2 #5 #10 #12 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 3 2) + x1
#if_times(x1,x2,x3)	weight: x2
even❆1_0()	weight: 0
#half❆1_s(x1)	weight: 0
  even(x1)	weight: (/ 5 2) + x1
#plus(x1,x2)	weight: 0
#even❆1_s(x1)	weight: 0
 false()	weight: 0
#half(x1)	weight: 0
even❆1_s(x1)	weight: (/ 1 2) + x1
  true()	weight: 0
#half❆1_0()	weight: 0
  half(x1)	weight: (/ 1 2) + x1
#even(x1)	weight: 0
half❆1_s(x1)	weight: (/ 1 2) + x1
#times(x1,x2)	weight: (/ 1 2) + x1
     0()	weight: 0
 times(x1,x2)	weight: 0
#even❆1_0()	weight: 0
if_times(x1,x2,x3)	weight: 0
  plus(x1,x2)	weight: 0
half❆1_0()	weight: 0
    Usable rules: { 4 5 12 13 }
    Removed DPs: #2 #5 #10 #12
Number of SCCs: 0, DPs: 0, edges: 0
