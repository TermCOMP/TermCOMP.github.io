Input TRS:
    1: app(app(app(rec(),f),x),0()) -> x
    2: app(app(app(rec(),f),x),app(s(),y)) -> app(app(f,app(s(),y)),app(app(app(rec(),f),x),y))
Number of strict rules: 2
Direct Order(PosReal,>,Poly) ... failed.
Freezing app
1: app❆3_rec(f,x,0()) -> x
2: app❆3_rec(f,x,app❆1_s(y)) -> app(app(f,app❆1_s(y)),app❆3_rec(f,x,y))
3: app(rec(),_1) ->= app❆1_rec(_1)
4: app(app❆1_rec(_1),_2) ->= app❆2_rec(_1,_2)
5: app(app❆2_rec(_1,_2),_3) ->= app❆3_rec(_1,_2,_3)
6: app(s(),_1) ->= app❆1_s(_1)
Number of strict rules: 2
Direct Order(PosReal,>,Poly) ... failed.
Dependency Pairs:
   #1: #app❆3_rec(f,x,app❆1_s(y)) -> #app(app(f,app❆1_s(y)),app❆3_rec(f,x,y))
   #2: #app❆3_rec(f,x,app❆1_s(y)) -> #app(f,app❆1_s(y))
   #3: #app❆3_rec(f,x,app❆1_s(y)) -> #app❆3_rec(f,x,y)
   #4: #app(app❆2_rec(_1,_2),_3) ->? #app❆3_rec(_1,_2,_3)
Number of SCCs: 1, DPs: 4, edges: 8
	SCC { #1..4 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... succeeded.
#app❆3_rec(x1,x2,x3)	weight: max{0, (/ 1 2) + x2, 2438 + x1}
app❆2_rec(x1,x2)	weight: max{x2, (/ 4875 2) + x1}
     s()	weight: 0
app❆3_rec(x1,x2,x3)	weight: max{0, (/ 4875 2) + x2, 4875 + x1}
     0()	weight: 0
   rec()	weight: 0
app❆1_rec(x1)	weight: x1
 #app(x1,x2)	weight: max{0, (/ 1 2) + x1}
app❆1_s(x1)	weight: 0
   app(x1,x2)	weight: max{x2, (/ 4875 2) + x1}
    Usable rules: { 1..6 }
    Removed DPs: #2
Number of SCCs: 1, DPs: 3, edges: 5
	SCC { #1 #3 #4 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
