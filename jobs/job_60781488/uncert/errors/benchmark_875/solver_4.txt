Input TRS:
    1: if(true(),t,e) -> t
    2: if(false(),t,e) -> e
    3: member(x,nil()) -> false()
    4: member(x,cons(y,ys)) -> if(eq(x,y),true(),member(x,ys))
    5: eq(nil(),nil()) -> true()
    6: eq(O(x),0(y)) -> eq(x,y)
    7: eq(0(x),1(y)) -> false()
    8: eq(1(x),0(y)) -> false()
    9: eq(1(x),1(y)) -> eq(x,y)
    10: negate(0(x)) -> 1(x)
    11: negate(1(x)) -> 0(x)
    12: choice(cons(x,xs)) -> x
    13: choice(cons(x,xs)) -> choice(xs)
    14: guess(nil()) -> nil()
    15: guess(cons(clause,cnf)) -> cons(choice(clause),guess(cnf))
    16: verify(nil()) -> true()
    17: verify(cons(l,ls)) -> if(member(negate(l),ls),false(),verify(ls))
    18: sat(cnf) -> satck(cnf,guess(cnf))
    19: satck(cnf,assign) -> if(verify(assign),assign,unsat())
Number of strict rules: 19
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #eq(O(x),0(y)) -> #eq(x,y)
   #2: #choice(cons(x,xs)) -> #choice(xs)
   #3: #eq(1(x),1(y)) -> #eq(x,y)
   #4: #verify(cons(l,ls)) -> #if(member(negate(l),ls),false(),verify(ls))
   #5: #verify(cons(l,ls)) -> #member(negate(l),ls)
   #6: #verify(cons(l,ls)) -> #negate(l)
   #7: #verify(cons(l,ls)) -> #verify(ls)
   #8: #satck(cnf,assign) -> #if(verify(assign),assign,unsat())
   #9: #satck(cnf,assign) -> #verify(assign)
   #10: #guess(cons(clause,cnf)) -> #choice(clause)
   #11: #guess(cons(clause,cnf)) -> #guess(cnf)
   #12: #member(x,cons(y,ys)) -> #if(eq(x,y),true(),member(x,ys))
   #13: #member(x,cons(y,ys)) -> #eq(x,y)
   #14: #member(x,cons(y,ys)) -> #member(x,ys)
   #15: #sat(cnf) -> #satck(cnf,guess(cnf))
   #16: #sat(cnf) -> #guess(cnf)
Number of SCCs: 5, DPs: 6, edges: 8
	SCC { #2 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#choice(x1)	weight: x1
verify(x1)	weight: 0
#negate(x1)	weight: 0
     1(x1)	weight: 0
 #sat(x1)	weight: 0
 unsat()	weight: 0
#guess(x1)	weight: 0
negate(x1)	weight: 0
choice(x1)	weight: 0
member(x1,x2)	weight: 0
    eq(x1,x2)	weight: 0
 false()	weight: 0
 satck(x1,x2)	weight: 0
     O(x1)	weight: 0
  true()	weight: 0
   sat(x1)	weight: 0
  #eq(x1,x2)	weight: 0
#satck(x1,x2)	weight: 0
    if(x1,x2,x3)	weight: 0
     0(x1)	weight: 0
   nil()	weight: 0
 guess(x1)	weight: 0
  cons(x1,x2)	weight: (/ 1 2) + x2
#member(x1,x2)	weight: 0
  #if(x1,x2,x3)	weight: 0
#verify(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #2
Number of SCCs: 4, DPs: 5, edges: 7
	SCC { #7 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#choice(x1)	weight: 0
verify(x1)	weight: 0
#negate(x1)	weight: 0
     1(x1)	weight: 0
 #sat(x1)	weight: 0
 unsat()	weight: 0
#guess(x1)	weight: 0
negate(x1)	weight: 0
choice(x1)	weight: 0
member(x1,x2)	weight: 0
    eq(x1,x2)	weight: 0
 false()	weight: 0
 satck(x1,x2)	weight: 0
     O(x1)	weight: 0
  true()	weight: 0
   sat(x1)	weight: 0
  #eq(x1,x2)	weight: 0
#satck(x1,x2)	weight: 0
    if(x1,x2,x3)	weight: 0
     0(x1)	weight: 0
   nil()	weight: 0
 guess(x1)	weight: 0
  cons(x1,x2)	weight: (/ 1 2) + x2
#member(x1,x2)	weight: 0
  #if(x1,x2,x3)	weight: 0
#verify(x1)	weight: x1
    Usable rules: { }
    Removed DPs: #7
Number of SCCs: 3, DPs: 4, edges: 6
	SCC { #11 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#choice(x1)	weight: 0
verify(x1)	weight: 0
#negate(x1)	weight: 0
     1(x1)	weight: 0
 #sat(x1)	weight: 0
 unsat()	weight: 0
#guess(x1)	weight: x1
negate(x1)	weight: 0
choice(x1)	weight: 0
member(x1,x2)	weight: 0
    eq(x1,x2)	weight: 0
 false()	weight: 0
 satck(x1,x2)	weight: 0
     O(x1)	weight: 0
  true()	weight: 0
   sat(x1)	weight: 0
  #eq(x1,x2)	weight: 0
#satck(x1,x2)	weight: 0
    if(x1,x2,x3)	weight: 0
     0(x1)	weight: 0
   nil()	weight: 0
 guess(x1)	weight: 0
  cons(x1,x2)	weight: (/ 1 2) + x2
#member(x1,x2)	weight: 0
  #if(x1,x2,x3)	weight: 0
#verify(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #11
Number of SCCs: 2, DPs: 3, edges: 5
	SCC { #14 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#choice(x1)	weight: 0
verify(x1)	weight: 0
#negate(x1)	weight: 0
     1(x1)	weight: 0
 #sat(x1)	weight: 0
 unsat()	weight: 0
#guess(x1)	weight: 0
negate(x1)	weight: 0
choice(x1)	weight: 0
member(x1,x2)	weight: 0
    eq(x1,x2)	weight: 0
 false()	weight: 0
 satck(x1,x2)	weight: 0
     O(x1)	weight: 0
  true()	weight: 0
   sat(x1)	weight: 0
  #eq(x1,x2)	weight: 0
#satck(x1,x2)	weight: 0
    if(x1,x2,x3)	weight: 0
     0(x1)	weight: 0
   nil()	weight: 0
 guess(x1)	weight: 0
  cons(x1,x2)	weight: (/ 1 2) + x2
#member(x1,x2)	weight: x2
  #if(x1,x2,x3)	weight: 0
#verify(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #14
Number of SCCs: 1, DPs: 2, edges: 4
	SCC { #1 #3 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#choice(x1)	weight: 0
verify(x1)	weight: 0
#negate(x1)	weight: 0
     1(x1)	weight: (/ 1 2) + x1
 #sat(x1)	weight: 0
 unsat()	weight: 0
#guess(x1)	weight: 0
negate(x1)	weight: 0
choice(x1)	weight: 0
member(x1,x2)	weight: 0
    eq(x1,x2)	weight: 0
 false()	weight: 0
 satck(x1,x2)	weight: 0
     O(x1)	weight: (/ 1 2)
  true()	weight: 0
   sat(x1)	weight: 0
  #eq(x1,x2)	weight: x2
#satck(x1,x2)	weight: 0
    if(x1,x2,x3)	weight: 0
     0(x1)	weight: (/ 1 2) + x1
   nil()	weight: 0
 guess(x1)	weight: 0
  cons(x1,x2)	weight: (/ 1 2)
#member(x1,x2)	weight: 0
  #if(x1,x2,x3)	weight: 0
#verify(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #1 #3
Number of SCCs: 0, DPs: 0, edges: 0
