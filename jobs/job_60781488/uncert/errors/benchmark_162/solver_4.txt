Input TRS:
    1: minus_active(0(),y) -> 0()
    2: mark(0()) -> 0()
    3: minus_active(s(x),s(y)) -> minus_active(x,y)
    4: mark(s(x)) -> s(mark(x))
    5: ge_active(x,0()) -> true()
    6: mark(minus(x,y)) -> minus_active(x,y)
    7: ge_active(0(),s(y)) -> false()
    8: mark(ge(x,y)) -> ge_active(x,y)
    9: ge_active(s(x),s(y)) -> ge_active(x,y)
    10: mark(div(x,y)) -> div_active(mark(x),y)
    11: div_active(0(),s(y)) -> 0()
    12: mark(if(x,y,z)) -> if_active(mark(x),y,z)
    13: div_active(s(x),s(y)) -> if_active(ge_active(x,y),s(div(minus(x,y),s(y))),0())
    14: if_active(true(),x,y) -> mark(x)
    15: minus_active(x,y) -> minus(x,y)
    16: if_active(false(),x,y) -> mark(y)
    17: ge_active(x,y) -> ge(x,y)
    18: if_active(x,y,z) -> if(x,y,z)
    19: div_active(x,y) -> div(x,y)
Number of strict rules: 19
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #mark(minus(x,y)) -> #minus_active(x,y)
   #2: #div_active(s(x),s(y)) -> #if_active(ge_active(x,y),s(div(minus(x,y),s(y))),0())
   #3: #div_active(s(x),s(y)) -> #ge_active(x,y)
   #4: #ge_active(s(x),s(y)) -> #ge_active(x,y)
   #5: #mark(if(x,y,z)) -> #if_active(mark(x),y,z)
   #6: #mark(if(x,y,z)) -> #mark(x)
   #7: #if_active(true(),x,y) -> #mark(x)
   #8: #mark(div(x,y)) -> #div_active(mark(x),y)
   #9: #mark(div(x,y)) -> #mark(x)
   #10: #if_active(false(),x,y) -> #mark(y)
   #11: #minus_active(s(x),s(y)) -> #minus_active(x,y)
   #12: #mark(ge(x,y)) -> #ge_active(x,y)
   #13: #mark(s(x)) -> #mark(x)
Number of SCCs: 3, DPs: 10, edges: 32
	SCC { #4 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 1 2) + x1
 minus(x1,x2)	weight: 0
 false()	weight: 0
   div(x1,x2)	weight: 0
ge_active(x1,x2)	weight: 0
  true()	weight: 0
#minus_active(x1,x2)	weight: 0
#mark(x1)	weight: 0
     0()	weight: 0
    if(x1,x2,x3)	weight: 0
    ge(x1,x2)	weight: 0
#ge_active(x1,x2)	weight: x2
  mark(x1)	weight: 0
if_active(x1,x2,x3)	weight: 0
minus_active(x1,x2)	weight: 0
#if_active(x1,x2,x3)	weight: 0
div_active(x1,x2)	weight: 0
#div_active(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #4
Number of SCCs: 2, DPs: 9, edges: 31
	SCC { #11 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 1 2) + x1
 minus(x1,x2)	weight: 0
 false()	weight: 0
   div(x1,x2)	weight: 0
ge_active(x1,x2)	weight: 0
  true()	weight: 0
#minus_active(x1,x2)	weight: x2
#mark(x1)	weight: 0
     0()	weight: 0
    if(x1,x2,x3)	weight: 0
    ge(x1,x2)	weight: 0
#ge_active(x1,x2)	weight: 0
  mark(x1)	weight: 0
if_active(x1,x2,x3)	weight: 0
minus_active(x1,x2)	weight: 0
#if_active(x1,x2,x3)	weight: 0
div_active(x1,x2)	weight: 0
#div_active(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #11
Number of SCCs: 1, DPs: 8, edges: 30
	SCC { #2 #5..10 #13 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: x1
 minus(x1,x2)	weight: 0
 false()	weight: 0
   div(x1,x2)	weight: (/ 1 4) + x1
ge_active(x1,x2)	weight: (/ 3 4)
  true()	weight: 0
#minus_active(x1,x2)	weight: 0
#mark(x1)	weight: x1
     0()	weight: 0
    if(x1,x2,x3)	weight: x1 + x2 + x3
    ge(x1,x2)	weight: (/ 1 4) + x1
#ge_active(x1,x2)	weight: 0
  mark(x1)	weight: (/ 1 4) + x1
if_active(x1,x2,x3)	weight: 0
minus_active(x1,x2)	weight: (/ 1 2)
#if_active(x1,x2,x3)	weight: x2 + x3
div_active(x1,x2)	weight: (/ 3 4) + x2
#div_active(x1,x2)	weight: (/ 1 4)
    Usable rules: { }
    Removed DPs: #9
Number of SCCs: 1, DPs: 7, edges: 21
	SCC { #2 #5..8 #10 #13 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: x1
 minus(x1,x2)	weight: 0
 false()	weight: 0
   div(x1,x2)	weight: (/ 1 8) + x1
ge_active(x1,x2)	weight: (/ 1 2)
  true()	weight: 0
#minus_active(x1,x2)	weight: 0
#mark(x1)	weight: x1
     0()	weight: 0
    if(x1,x2,x3)	weight: (/ 1 8) + x1 + x2 + x3
    ge(x1,x2)	weight: (/ 1 8) + x1
#ge_active(x1,x2)	weight: 0
  mark(x1)	weight: (/ 1 4) + x1
if_active(x1,x2,x3)	weight: (/ 1 8)
minus_active(x1,x2)	weight: (/ 3 8)
#if_active(x1,x2,x3)	weight: x2 + x3
div_active(x1,x2)	weight: (/ 1 2) + x2
#div_active(x1,x2)	weight: (/ 1 8)
    Usable rules: { }
    Removed DPs: #5 #6
Number of SCCs: 1, DPs: 5, edges: 9
	SCC { #2 #7 #8 #10 #13 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 1 4) + x1
 minus(x1,x2)	weight: x1
 false()	weight: 0
   div(x1,x2)	weight: (/ 1 4) + x1
ge_active(x1,x2)	weight: (/ 1 4)
  true()	weight: 0
#minus_active(x1,x2)	weight: 0
#mark(x1)	weight: x1
     0()	weight: 0
    if(x1,x2,x3)	weight: x2 + x3
    ge(x1,x2)	weight: (/ 1 4)
#ge_active(x1,x2)	weight: 0
  mark(x1)	weight: x1
if_active(x1,x2,x3)	weight: x2 + x3
minus_active(x1,x2)	weight: x1
#if_active(x1,x2,x3)	weight: x2 + x3
div_active(x1,x2)	weight: (/ 1 4) + x1
#div_active(x1,x2)	weight: (/ 1 4) + x1
    Usable rules: { 1..19 }
    Removed DPs: #13
Number of SCCs: 1, DPs: 4, edges: 5
	SCC { #2 #7 #8 #10 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: (/ 1 8)
 minus(x1,x2)	weight: (/ 1 8)
 false()	weight: 0
   div(x1,x2)	weight: (/ 1 2) + x1
ge_active(x1,x2)	weight: (/ 1 8)
  true()	weight: 0
#minus_active(x1,x2)	weight: 0
#mark(x1)	weight: x1
     0()	weight: 0
    if(x1,x2,x3)	weight: x2 + x3
    ge(x1,x2)	weight: (/ 1 8)
#ge_active(x1,x2)	weight: 0
  mark(x1)	weight: (/ 1 8) + x1
if_active(x1,x2,x3)	weight: (/ 1 8) + x2 + x3
minus_active(x1,x2)	weight: (/ 1 8)
#if_active(x1,x2,x3)	weight: (/ 1 8) + x2 + x3
div_active(x1,x2)	weight: (/ 1 2) + x1
#div_active(x1,x2)	weight: (/ 1 4) + x1
    Usable rules: { 1..19 }
    Removed DPs: #2 #7 #8 #10
Number of SCCs: 0, DPs: 0, edges: 0
