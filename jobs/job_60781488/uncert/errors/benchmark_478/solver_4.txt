Input TRS:
    1: .(.(x,y),z) -> .(x,.(y,z))
    2: a(f(x)) -> f(a(x))
    3: a(.(x,y)) -> .(a(x),y)
    4: a(b1(x)) -> b1(a(x))
    5: f(b(x)) -> b(f(x))
    6: .(b(x),y) -> b(.(x,y))
    7: b1(b(x)) -> b(b(x))
    8: a(f(.(0(),x))) -> b1(.(f(.(0(),x)),.(0(),f(x))))
    9: a(f(0())) -> b1(.(f(0()),0()))
    10: f(.(0(),x)) -> b(.(0(),f(x)))
    11: f(0()) -> b(0())
    12: c(b(x)) -> c(a(x))
    13: a(b(x)) -> b(a(x))
    14: a(.(0(),x)) -> .(0(),a(x))
    15: .(0(),b(x)) -> b(.(0(),x))
Number of strict rules: 15
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #a(f(x)) -> #f(a(x))
   #2: #a(f(x)) -> #a(x)
   #3: #.(b(x),y) -> #.(x,y)
   #4: #a(b(x)) -> #a(x)
   #5: #a(f(0())) -> #b1(.(f(0()),0()))
   #6: #a(f(0())) -> #.(f(0()),0())
   #7: #c(b(x)) -> #c(a(x))
   #8: #c(b(x)) -> #a(x)
   #9: #a(.(0(),x)) -> #.(0(),a(x))
   #10: #a(.(0(),x)) -> #a(x)
   #11: #f(.(0(),x)) -> #.(0(),f(x))
   #12: #f(.(0(),x)) -> #f(x)
   #13: #f(b(x)) -> #f(x)
   #14: #a(.(x,y)) -> #.(a(x),y)
   #15: #a(.(x,y)) -> #a(x)
   #16: #.(.(x,y),z) -> #.(x,.(y,z))
   #17: #.(.(x,y),z) -> #.(y,z)
   #18: #a(f(.(0(),x))) -> #b1(.(f(.(0(),x)),.(0(),f(x))))
   #19: #a(f(.(0(),x))) -> #.(f(.(0(),x)),.(0(),f(x)))
   #20: #a(f(.(0(),x))) -> #.(0(),f(x))
   #21: #a(f(.(0(),x))) -> #f(x)
   #22: #.(0(),b(x)) -> #.(0(),x)
   #23: #a(b1(x)) -> #b1(a(x))
   #24: #a(b1(x)) -> #a(x)
Number of SCCs: 5, DPs: 12, edges: 40
	SCC { #7 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
