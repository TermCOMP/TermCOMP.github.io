Input TRS:
    1: c() -> f(g(c()))
    2: f(g(X)) -> g(X)
Number of strict rules: 2
Direct Order(PosReal,>,Poly) ... failed.
Freezing f
1: c() -> f❆1_g(c())
2: f❆1_g(X) -> g(X)
3: f(g(_1)) ->= f❆1_g(_1)
Number of strict rules: 2
Direct Order(PosReal,>,Poly) ... removes: 3
     c()	weight: 0
f❆1_g(x1)	weight: x1
     f(x1)	weight: (/ 1 2) + x1
     g(x1)	weight: x1
Number of strict rules: 2
Direct Order(PosReal,>,Poly) ... failed.
Dependency Pairs:
   #1: #c() -> #f❆1_g(c())
   #2: #c() -> #c()
Number of SCCs: 1, DPs: 1, edges: 1
	SCC { #2 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  found.
  #c()	-#2->
  #c()	--->*
  #c()
  Looping with: [ ]
