Input TRS:
    1: active(pairNs()) -> mark(cons(0(),incr(oddNs())))
    2: active(oddNs()) -> mark(incr(pairNs()))
    3: active(incr(cons(X,XS))) -> mark(cons(s(X),incr(XS)))
    4: active(take(0(),XS)) -> mark(nil())
    5: active(take(s(N),cons(X,XS))) -> mark(cons(X,take(N,XS)))
    6: active(zip(nil(),XS)) -> mark(nil())
    7: active(zip(X,nil())) -> mark(nil())
    8: active(zip(cons(X,XS),cons(Y,YS))) -> mark(cons(pair(X,Y),zip(XS,YS)))
    9: active(tail(cons(X,XS))) -> mark(XS)
    10: active(repItems(nil())) -> mark(nil())
    11: active(repItems(cons(X,XS))) -> mark(cons(X,cons(X,repItems(XS))))
    12: active(cons(X1,X2)) -> cons(active(X1),X2)
    13: active(incr(X)) -> incr(active(X))
    14: active(s(X)) -> s(active(X))
    15: active(take(X1,X2)) -> take(active(X1),X2)
    16: active(take(X1,X2)) -> take(X1,active(X2))
    17: active(zip(X1,X2)) -> zip(active(X1),X2)
    18: active(zip(X1,X2)) -> zip(X1,active(X2))
    19: active(pair(X1,X2)) -> pair(active(X1),X2)
    20: active(pair(X1,X2)) -> pair(X1,active(X2))
    21: active(tail(X)) -> tail(active(X))
    22: active(repItems(X)) -> repItems(active(X))
    23: cons(mark(X1),X2) -> mark(cons(X1,X2))
    24: incr(mark(X)) -> mark(incr(X))
    25: s(mark(X)) -> mark(s(X))
    26: take(mark(X1),X2) -> mark(take(X1,X2))
    27: take(X1,mark(X2)) -> mark(take(X1,X2))
    28: zip(mark(X1),X2) -> mark(zip(X1,X2))
    29: zip(X1,mark(X2)) -> mark(zip(X1,X2))
    30: pair(mark(X1),X2) -> mark(pair(X1,X2))
    31: pair(X1,mark(X2)) -> mark(pair(X1,X2))
    32: tail(mark(X)) -> mark(tail(X))
    33: repItems(mark(X)) -> mark(repItems(X))
    34: proper(pairNs()) -> ok(pairNs())
    35: proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
    36: proper(0()) -> ok(0())
    37: proper(incr(X)) -> incr(proper(X))
    38: proper(oddNs()) -> ok(oddNs())
    39: proper(s(X)) -> s(proper(X))
    40: proper(take(X1,X2)) -> take(proper(X1),proper(X2))
    41: proper(nil()) -> ok(nil())
    42: proper(zip(X1,X2)) -> zip(proper(X1),proper(X2))
    43: proper(pair(X1,X2)) -> pair(proper(X1),proper(X2))
    44: proper(tail(X)) -> tail(proper(X))
    45: proper(repItems(X)) -> repItems(proper(X))
    46: cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
    47: incr(ok(X)) -> ok(incr(X))
    48: s(ok(X)) -> ok(s(X))
    49: take(ok(X1),ok(X2)) -> ok(take(X1,X2))
    50: zip(ok(X1),ok(X2)) -> ok(zip(X1,X2))
    51: pair(ok(X1),ok(X2)) -> ok(pair(X1,X2))
    52: tail(ok(X)) -> ok(tail(X))
    53: repItems(ok(X)) -> ok(repItems(X))
    54: top(mark(X)) -> top(proper(X))
    55: top(ok(X)) -> top(active(X))
Number of strict rules: 55
Direct Order(PosReal,>,Poly) ... removes: 9
repItems(x1)	weight: 2 * x1
  incr(x1)	weight: 2 * x1
     s(x1)	weight: x1
  take(x1,x2)	weight: 2 * x1 + x2
   top(x1)	weight: x1
  pair(x1,x2)	weight: x1 + x2
  tail(x1)	weight: (/ 1 4) + x1
proper(x1)	weight: x1
    ok(x1)	weight: x1
     0()	weight: 0
   nil()	weight: 0
  mark(x1)	weight: x1
pairNs()	weight: 0
 oddNs()	weight: 0
active(x1)	weight: x1
  cons(x1,x2)	weight: x1 + x2
   zip(x1,x2)	weight: x1 + x2
Number of strict rules: 54
Direct Order(PosReal,>,Poly) ... removes: 10
repItems(x1)	weight: (/ 1 16) + 2 * x1
  incr(x1)	weight: x1
     s(x1)	weight: x1
  take(x1,x2)	weight: x1 + x2
   top(x1)	weight: x1
  pair(x1,x2)	weight: x1 + x2
  tail(x1)	weight: (/ 1 16) + x1
proper(x1)	weight: x1
    ok(x1)	weight: x1
     0()	weight: 0
   nil()	weight: 0
  mark(x1)	weight: x1
pairNs()	weight: 0
 oddNs()	weight: 0
active(x1)	weight: x1
  cons(x1,x2)	weight: x1 + x2
   zip(x1,x2)	weight: x1 + x2
Number of strict rules: 53
Direct Order(PosReal,>,Poly) ... removes: 7 6
repItems(x1)	weight: 2 * x1
  incr(x1)	weight: x1
     s(x1)	weight: x1
  take(x1,x2)	weight: x1 + x2
   top(x1)	weight: x1
  pair(x1,x2)	weight: x1 + x2
  tail(x1)	weight: (/ 1 8) + x1
proper(x1)	weight: x1
    ok(x1)	weight: x1
     0()	weight: 0
   nil()	weight: 0
  mark(x1)	weight: x1
pairNs()	weight: 0
 oddNs()	weight: 0
active(x1)	weight: x1
  cons(x1,x2)	weight: x1 + x2
   zip(x1,x2)	weight: (/ 1 8) + x1 + x2
Number of strict rules: 51
Direct Order(PosReal,>,Poly) ... removes: 4
repItems(x1)	weight: (/ 60217 8) + 2 * x1
  incr(x1)	weight: x1
     s(x1)	weight: x1
  take(x1,x2)	weight: (/ 1 8) + x1 + x2
   top(x1)	weight: x1
  pair(x1,x2)	weight: x1 + x2
  tail(x1)	weight: (/ 1 8) + x1
proper(x1)	weight: x1
    ok(x1)	weight: x1
     0()	weight: 0
   nil()	weight: 0
  mark(x1)	weight: x1
pairNs()	weight: 0
 oddNs()	weight: 0
active(x1)	weight: x1
  cons(x1,x2)	weight: x1 + x2
   zip(x1,x2)	weight: (/ 1 8) + x1 + x2
Number of strict rules: 50
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #active(oddNs()) -> #incr(pairNs())
   #2: #proper(pair(X1,X2)) -> #pair(proper(X1),proper(X2))
   #3: #proper(pair(X1,X2)) -> #proper(X1)
   #4: #proper(pair(X1,X2)) -> #proper(X2)
   #5: #zip(X1,mark(X2)) -> #zip(X1,X2)
   #6: #proper(cons(X1,X2)) -> #cons(proper(X1),proper(X2))
   #7: #proper(cons(X1,X2)) -> #proper(X1)
   #8: #proper(cons(X1,X2)) -> #proper(X2)
   #9: #cons(ok(X1),ok(X2)) -> #cons(X1,X2)
   #10: #proper(zip(X1,X2)) -> #zip(proper(X1),proper(X2))
   #11: #proper(zip(X1,X2)) -> #proper(X1)
   #12: #proper(zip(X1,X2)) -> #proper(X2)
   #13: #proper(incr(X)) -> #incr(proper(X))
   #14: #proper(incr(X)) -> #proper(X)
   #15: #incr(ok(X)) -> #incr(X)
   #16: #repItems(ok(X)) -> #repItems(X)
   #17: #s(ok(X)) -> #s(X)
   #18: #top(ok(X)) -> #top(active(X))
   #19: #top(ok(X)) -> #active(X)
   #20: #proper(take(X1,X2)) -> #take(proper(X1),proper(X2))
   #21: #proper(take(X1,X2)) -> #proper(X1)
   #22: #proper(take(X1,X2)) -> #proper(X2)
   #23: #pair(ok(X1),ok(X2)) -> #pair(X1,X2)
   #24: #active(incr(X)) -> #incr(active(X))
   #25: #active(incr(X)) -> #active(X)
   #26: #active(repItems(cons(X,XS))) -> #cons(X,cons(X,repItems(XS)))
   #27: #active(repItems(cons(X,XS))) -> #cons(X,repItems(XS))
   #28: #active(repItems(cons(X,XS))) -> #repItems(XS)
   #29: #incr(mark(X)) -> #incr(X)
   #30: #cons(mark(X1),X2) -> #cons(X1,X2)
   #31: #proper(repItems(X)) -> #repItems(proper(X))
   #32: #proper(repItems(X)) -> #proper(X)
   #33: #active(cons(X1,X2)) -> #cons(active(X1),X2)
   #34: #active(cons(X1,X2)) -> #active(X1)
   #35: #pair(X1,mark(X2)) -> #pair(X1,X2)
   #36: #active(s(X)) -> #s(active(X))
   #37: #active(s(X)) -> #active(X)
   #38: #pair(mark(X1),X2) -> #pair(X1,X2)
   #39: #tail(ok(X)) -> #tail(X)
   #40: #take(ok(X1),ok(X2)) -> #take(X1,X2)
   #41: #s(mark(X)) -> #s(X)
   #42: #active(pair(X1,X2)) -> #pair(X1,active(X2))
   #43: #active(pair(X1,X2)) -> #active(X2)
   #44: #proper(s(X)) -> #s(proper(X))
   #45: #proper(s(X)) -> #proper(X)
   #46: #repItems(mark(X)) -> #repItems(X)
   #47: #active(take(s(N),cons(X,XS))) -> #cons(X,take(N,XS))
   #48: #active(take(s(N),cons(X,XS))) -> #take(N,XS)
   #49: #proper(tail(X)) -> #tail(proper(X))
   #50: #proper(tail(X)) -> #proper(X)
   #51: #zip(mark(X1),X2) -> #zip(X1,X2)
   #52: #active(repItems(X)) -> #repItems(active(X))
   #53: #active(repItems(X)) -> #active(X)
   #54: #take(X1,mark(X2)) -> #take(X1,X2)
   #55: #active(zip(X1,X2)) -> #zip(active(X1),X2)
   #56: #active(zip(X1,X2)) -> #active(X1)
   #57: #tail(mark(X)) -> #tail(X)
   #58: #active(pair(X1,X2)) -> #pair(active(X1),X2)
   #59: #active(pair(X1,X2)) -> #active(X1)
   #60: #take(mark(X1),X2) -> #take(X1,X2)
   #61: #active(tail(X)) -> #tail(active(X))
   #62: #active(tail(X)) -> #active(X)
   #63: #active(take(X1,X2)) -> #take(X1,active(X2))
   #64: #active(take(X1,X2)) -> #active(X2)
   #65: #active(incr(cons(X,XS))) -> #cons(s(X),incr(XS))
   #66: #active(incr(cons(X,XS))) -> #s(X)
   #67: #active(incr(cons(X,XS))) -> #incr(XS)
   #68: #active(pairNs()) -> #cons(0(),incr(oddNs()))
   #69: #active(pairNs()) -> #incr(oddNs())
   #70: #top(mark(X)) -> #top(proper(X))
   #71: #top(mark(X)) -> #proper(X)
   #72: #active(zip(cons(X,XS),cons(Y,YS))) -> #cons(pair(X,Y),zip(XS,YS))
   #73: #active(zip(cons(X,XS),cons(Y,YS))) -> #pair(X,Y)
   #74: #active(zip(cons(X,XS),cons(Y,YS))) -> #zip(XS,YS)
   #75: #active(take(X1,X2)) -> #take(active(X1),X2)
   #76: #active(take(X1,X2)) -> #active(X1)
   #77: #zip(ok(X1),ok(X2)) -> #zip(X1,X2)
   #78: #active(zip(X1,X2)) -> #zip(X1,active(X2))
   #79: #active(zip(X1,X2)) -> #active(X2)
Number of SCCs: 11, DPs: 44, edges: 316
	SCC { #15 #29 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
repItems(x1)	weight: 0
  incr(x1)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#take(x1,x2)	weight: 0
  take(x1,x2)	weight: 0
   top(x1)	weight: 0
  pair(x1,x2)	weight: 0
 #top(x1)	weight: 0
 #zip(x1,x2)	weight: 0
  tail(x1)	weight: 0
proper(x1)	weight: 0
    ok(x1)	weight: (/ 1 2) + x1
     0()	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
#tail(x1)	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
#incr(x1)	weight: x1
pairNs()	weight: 0
 oddNs()	weight: 0
#proper(x1)	weight: 0
#repItems(x1)	weight: 0
active(x1)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#pair(x1,x2)	weight: 0
   zip(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #15 #29
Number of SCCs: 10, DPs: 42, edges: 312
	SCC { #17 #41 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
repItems(x1)	weight: 0
  incr(x1)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#take(x1,x2)	weight: 0
  take(x1,x2)	weight: 0
   top(x1)	weight: 0
  pair(x1,x2)	weight: 0
 #top(x1)	weight: 0
 #zip(x1,x2)	weight: 0
  tail(x1)	weight: 0
proper(x1)	weight: 0
    ok(x1)	weight: (/ 1 2) + x1
     0()	weight: 0
   #s(x1)	weight: x1
   nil()	weight: 0
#tail(x1)	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
#incr(x1)	weight: 0
pairNs()	weight: 0
 oddNs()	weight: 0
#proper(x1)	weight: 0
#repItems(x1)	weight: 0
active(x1)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#pair(x1,x2)	weight: 0
   zip(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #17 #41
Number of SCCs: 9, DPs: 40, edges: 308
	SCC { #39 #57 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
repItems(x1)	weight: 0
  incr(x1)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#take(x1,x2)	weight: 0
  take(x1,x2)	weight: 0
   top(x1)	weight: 0
  pair(x1,x2)	weight: 0
 #top(x1)	weight: 0
 #zip(x1,x2)	weight: 0
  tail(x1)	weight: 0
proper(x1)	weight: 0
    ok(x1)	weight: (/ 1 2) + x1
     0()	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
#tail(x1)	weight: x1
  mark(x1)	weight: (/ 1 2) + x1
#incr(x1)	weight: 0
pairNs()	weight: 0
 oddNs()	weight: 0
#proper(x1)	weight: 0
#repItems(x1)	weight: 0
active(x1)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#pair(x1,x2)	weight: 0
   zip(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #39 #57
Number of SCCs: 8, DPs: 38, edges: 304
	SCC { #16 #46 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
repItems(x1)	weight: 0
  incr(x1)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#take(x1,x2)	weight: 0
  take(x1,x2)	weight: 0
   top(x1)	weight: 0
  pair(x1,x2)	weight: 0
 #top(x1)	weight: 0
 #zip(x1,x2)	weight: 0
  tail(x1)	weight: 0
proper(x1)	weight: 0
    ok(x1)	weight: (/ 1 2) + x1
     0()	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
#tail(x1)	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
#incr(x1)	weight: 0
pairNs()	weight: 0
 oddNs()	weight: 0
#proper(x1)	weight: 0
#repItems(x1)	weight: x1
active(x1)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#pair(x1,x2)	weight: 0
   zip(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #16 #46
Number of SCCs: 7, DPs: 36, edges: 300
	SCC { #18 #70 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... succeeded.
repItems(x1)	status: [x1]	precedence above: mark
  incr(x1)	status: [x1]	precedence above: repItems s ok mark
#cons(x1,x2)	status: [x1,x2]	precedence above:
     s(x1)	status: x1
#take(x1,x2)	status: [x1]	precedence above:
  take(x1,x2)	status: [x2,x1]	precedence above: repItems mark
   top(x1)	status: []	precedence above:
  pair(x1,x2)	status: [x2,x1]	precedence above: repItems ok mark
 #top(x1)	status: [x1]	precedence above:
 #zip(x1,x2)	status: [x2,x1]	precedence above:
  tail(x1)	status: x1
proper(x1)	status: x1
    ok(x1)	status: x1
     0()	status: []	precedence above:
   #s(x1)	status: []	precedence above:
   nil()	status: []	precedence above:
#tail(x1)	status: []	precedence above:
  mark(x1)	status: [x1]	precedence above: repItems
#incr(x1)	status: []	precedence above:
pairNs()	status: []	precedence above: repItems 0 mark
 oddNs()	status: []	precedence above: repItems incr s ok 0 mark pairNs
#proper(x1)	status: []	precedence above:
#repItems(x1)	status: []	precedence above:
active(x1)	status: x1
  cons(x1,x2)	status: x1
#active(x1)	status: []	precedence above:
#pair(x1,x2)	status: [x2]	precedence above:
   zip(x1,x2)	status: [x2,x1]	precedence above: repItems pair ok mark
    Usable rules: { 1..3 5 8 11..53 }
    Removed DPs: #70
Number of SCCs: 7, DPs: 35, edges: 297
	SCC { #18 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
repItems(x1)	weight: (/ 1 4) + x1
  incr(x1)	weight: (/ 1 4) + x1
#cons(x1,x2)	weight: 0
     s(x1)	weight: (/ 1 4) + x1
#take(x1,x2)	weight: 0
  take(x1,x2)	weight: (/ 1 4) + x1
   top(x1)	weight: 0
  pair(x1,x2)	weight: (/ 1 4) + x1
 #top(x1)	weight: x1
 #zip(x1,x2)	weight: 0
  tail(x1)	weight: (/ 1 4) + x1
proper(x1)	weight: (/ 1 2) + x1
    ok(x1)	weight: (/ 1 2) + x1
     0()	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
#tail(x1)	weight: 0
  mark(x1)	weight: (/ 1 4)
#incr(x1)	weight: 0
pairNs()	weight: 0
 oddNs()	weight: 0
#proper(x1)	weight: 0
#repItems(x1)	weight: 0
active(x1)	weight: (/ 1 4) + x1
  cons(x1,x2)	weight: (/ 1 4) + x2
#active(x1)	weight: 0
#pair(x1,x2)	weight: 0
   zip(x1,x2)	weight: (/ 1 4) + x2
    Usable rules: { 1..3 5 8 11..33 46..53 }
    Removed DPs: #18
Number of SCCs: 6, DPs: 34, edges: 296
	SCC { #9 #30 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
repItems(x1)	weight: (/ 1 4) + x1
  incr(x1)	weight: (/ 1 4) + x1
#cons(x1,x2)	weight: x2
     s(x1)	weight: (/ 1 4) + x1
#take(x1,x2)	weight: 0
  take(x1,x2)	weight: (/ 1 4) + x1
   top(x1)	weight: 0
  pair(x1,x2)	weight: (/ 1 4) + x1
 #top(x1)	weight: x1
 #zip(x1,x2)	weight: 0
  tail(x1)	weight: (/ 1 4) + x1
proper(x1)	weight: (/ 1 2) + x1
    ok(x1)	weight: (/ 1 4) + x1
     0()	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
#tail(x1)	weight: 0
  mark(x1)	weight: (/ 1 4)
#incr(x1)	weight: 0
pairNs()	weight: 0
 oddNs()	weight: 0
#proper(x1)	weight: 0
#repItems(x1)	weight: 0
active(x1)	weight: (/ 1 4) + x1
  cons(x1,x2)	weight: (/ 1 4) + x2
#active(x1)	weight: 0
#pair(x1,x2)	weight: 0
   zip(x1,x2)	weight: (/ 1 4) + x2
    Usable rules: { }
    Removed DPs: #9
Number of SCCs: 7, DPs: 33, edges: 293
	SCC { #30 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
repItems(x1)	weight: (/ 1 2) + x1
  incr(x1)	weight: x1
#cons(x1,x2)	weight: x1
     s(x1)	weight: x1
#take(x1,x2)	weight: 0
  take(x1,x2)	weight: (/ 1 2) + x1 + x2
   top(x1)	weight: 0
  pair(x1,x2)	weight: x1 + x2
 #top(x1)	weight: x1
 #zip(x1,x2)	weight: 0
  tail(x1)	weight: x1
proper(x1)	weight: x1
    ok(x1)	weight: x1
     0()	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
#tail(x1)	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
#incr(x1)	weight: 0
pairNs()	weight: 0
 oddNs()	weight: 0
#proper(x1)	weight: 0
#repItems(x1)	weight: 0
active(x1)	weight: (/ 1 2) + x1
  cons(x1,x2)	weight: x1
#active(x1)	weight: 0
#pair(x1,x2)	weight: 0
   zip(x1,x2)	weight: (/ 1 2) + x1 + x2
    Usable rules: { }
    Removed DPs: #30
Number of SCCs: 6, DPs: 32, edges: 292
	SCC { #40 #54 #60 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
repItems(x1)	weight: (/ 1 2) + x1
  incr(x1)	weight: x1
#cons(x1,x2)	weight: 0
     s(x1)	weight: x1
#take(x1,x2)	weight: x1
  take(x1,x2)	weight: (/ 1 2) + x1 + x2
   top(x1)	weight: 0
  pair(x1,x2)	weight: x1 + x2
 #top(x1)	weight: x1
 #zip(x1,x2)	weight: 0
  tail(x1)	weight: x1
proper(x1)	weight: x1
    ok(x1)	weight: x1
     0()	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
#tail(x1)	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
#incr(x1)	weight: 0
pairNs()	weight: 0
 oddNs()	weight: 0
#proper(x1)	weight: 0
#repItems(x1)	weight: 0
active(x1)	weight: (/ 1 2) + x1
  cons(x1,x2)	weight: x1
#active(x1)	weight: 0
#pair(x1,x2)	weight: 0
   zip(x1,x2)	weight: (/ 1 2) + x1 + x2
    Usable rules: { }
    Removed DPs: #60
Number of SCCs: 7, DPs: 31, edges: 287
	SCC { #40 #54 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
repItems(x1)	weight: (/ 1 2) + x1
  incr(x1)	weight: x1
#cons(x1,x2)	weight: 0
     s(x1)	weight: x1
#take(x1,x2)	weight: x2
  take(x1,x2)	weight: (/ 1 2) + x1 + x2
   top(x1)	weight: 0
  pair(x1,x2)	weight: x1 + x2
 #top(x1)	weight: x1
 #zip(x1,x2)	weight: 0
  tail(x1)	weight: x1
proper(x1)	weight: x1
    ok(x1)	weight: x1
     0()	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
#tail(x1)	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
#incr(x1)	weight: 0
pairNs()	weight: 0
 oddNs()	weight: 0
#proper(x1)	weight: 0
#repItems(x1)	weight: 0
active(x1)	weight: (/ 1 2) + x1
  cons(x1,x2)	weight: x1
#active(x1)	weight: 0
#pair(x1,x2)	weight: 0
   zip(x1,x2)	weight: (/ 1 2) + x1 + x2
    Usable rules: { }
    Removed DPs: #54
Number of SCCs: 7, DPs: 30, edges: 284
	SCC { #40 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
repItems(x1)	weight: (/ 1 2)
  incr(x1)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#take(x1,x2)	weight: x1
  take(x1,x2)	weight: (/ 1 2) + x1 + x2
   top(x1)	weight: 0
  pair(x1,x2)	weight: 0
 #top(x1)	weight: 0
 #zip(x1,x2)	weight: 0
  tail(x1)	weight: 0
proper(x1)	weight: x1
    ok(x1)	weight: (/ 1 2) + x1
     0()	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
#tail(x1)	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
#incr(x1)	weight: 0
pairNs()	weight: 0
 oddNs()	weight: 0
#proper(x1)	weight: 0
#repItems(x1)	weight: 0
active(x1)	weight: x1
  cons(x1,x2)	weight: x1
#active(x1)	weight: 0
#pair(x1,x2)	weight: 0
   zip(x1,x2)	weight: (/ 1 2)
    Usable rules: { }
    Removed DPs: #40
Number of SCCs: 6, DPs: 29, edges: 283
	SCC { #23 #35 #38 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
repItems(x1)	weight: (/ 1 4)
  incr(x1)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#take(x1,x2)	weight: 0
  take(x1,x2)	weight: (/ 1 4) + x1 + x2
   top(x1)	weight: 0
  pair(x1,x2)	weight: 0
 #top(x1)	weight: 0
 #zip(x1,x2)	weight: 0
  tail(x1)	weight: 0
proper(x1)	weight: x1
    ok(x1)	weight: (/ 1 4) + x1
     0()	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
#tail(x1)	weight: 0
  mark(x1)	weight: (/ 1 4) + x1
#incr(x1)	weight: 0
pairNs()	weight: 0
 oddNs()	weight: 0
#proper(x1)	weight: 0
#repItems(x1)	weight: 0
active(x1)	weight: x1
  cons(x1,x2)	weight: x1
#active(x1)	weight: 0
#pair(x1,x2)	weight: x1 + x2
   zip(x1,x2)	weight: (/ 1 4)
    Usable rules: { }
    Removed DPs: #23 #35 #38
Number of SCCs: 6, DPs: 26, edges: 274
	SCC { #5 #51 #77 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
repItems(x1)	weight: (/ 1 4)
  incr(x1)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#take(x1,x2)	weight: 0
  take(x1,x2)	weight: (/ 1 4) + x1 + x2
   top(x1)	weight: 0
  pair(x1,x2)	weight: 0
 #top(x1)	weight: 0
 #zip(x1,x2)	weight: x1 + x2
  tail(x1)	weight: 0
proper(x1)	weight: x1
    ok(x1)	weight: (/ 1 4) + x1
     0()	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
#tail(x1)	weight: 0
  mark(x1)	weight: (/ 1 4) + x1
#incr(x1)	weight: 0
pairNs()	weight: 0
 oddNs()	weight: 0
#proper(x1)	weight: 0
#repItems(x1)	weight: 0
active(x1)	weight: x1
  cons(x1,x2)	weight: x1
#active(x1)	weight: 0
#pair(x1,x2)	weight: 0
   zip(x1,x2)	weight: (/ 1 4)
    Usable rules: { }
    Removed DPs: #5 #51 #77
Number of SCCs: 5, DPs: 23, edges: 265
	SCC { #25 #34 #37 #43 #53 #56 #59 #62 #64 #76 #79 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
repItems(x1)	weight: (/ 1 4) + x1
  incr(x1)	weight: (/ 1 4) + x1
#cons(x1,x2)	weight: 0
     s(x1)	weight: (/ 1 4) + x1
#take(x1,x2)	weight: 0
  take(x1,x2)	weight: (/ 1 4) + x1 + x2
   top(x1)	weight: 0
  pair(x1,x2)	weight: (/ 1 4) + x1 + x2
 #top(x1)	weight: 0
 #zip(x1,x2)	weight: 0
  tail(x1)	weight: x1
proper(x1)	weight: x1
    ok(x1)	weight: (/ 1 4) + x1
     0()	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
#tail(x1)	weight: 0
  mark(x1)	weight: (/ 1 4) + x1
#incr(x1)	weight: 0
pairNs()	weight: 0
 oddNs()	weight: 0
#proper(x1)	weight: 0
#repItems(x1)	weight: 0
active(x1)	weight: x1
  cons(x1,x2)	weight: (/ 1 4) + x1
#active(x1)	weight: x1
#pair(x1,x2)	weight: 0
   zip(x1,x2)	weight: (/ 1 4) + x1 + x2
    Usable rules: { }
    Removed DPs: #25 #34 #37 #43 #53 #56 #59 #64 #76 #79
Number of SCCs: 5, DPs: 13, edges: 145
	SCC { #62 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
repItems(x1)	weight: (/ 1 4) + x1
  incr(x1)	weight: x1
#cons(x1,x2)	weight: 0
     s(x1)	weight: (/ 1 4) + x1
#take(x1,x2)	weight: 0
  take(x1,x2)	weight: (/ 1 4) + x1 + x2
   top(x1)	weight: 0
  pair(x1,x2)	weight: (/ 1 4) + x1 + x2
 #top(x1)	weight: 0
 #zip(x1,x2)	weight: 0
  tail(x1)	weight: (/ 1 4) + x1
proper(x1)	weight: x1
    ok(x1)	weight: (/ 1 4) + x1
     0()	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
#tail(x1)	weight: 0
  mark(x1)	weight: (/ 1 2)
#incr(x1)	weight: 0
pairNs()	weight: 0
 oddNs()	weight: 0
#proper(x1)	weight: 0
#repItems(x1)	weight: 0
active(x1)	weight: x1
  cons(x1,x2)	weight: (/ 1 4) + x1
#active(x1)	weight: x1
#pair(x1,x2)	weight: 0
   zip(x1,x2)	weight: (/ 1 4) + x1 + x2
    Usable rules: { }
    Removed DPs: #62
Number of SCCs: 4, DPs: 12, edges: 144
	SCC { #3 #4 #7 #8 #11 #12 #14 #21 #22 #32 #45 #50 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
repItems(x1)	weight: (/ 1 4) + x1
  incr(x1)	weight: (/ 1 8) + x1
#cons(x1,x2)	weight: 0
     s(x1)	weight: (/ 1 8) + x1
#take(x1,x2)	weight: 0
  take(x1,x2)	weight: (/ 1 8) + x1 + x2
   top(x1)	weight: 0
  pair(x1,x2)	weight: (/ 1 8) + x1 + x2
 #top(x1)	weight: 0
 #zip(x1,x2)	weight: 0
  tail(x1)	weight: (/ 1 8) + x1
proper(x1)	weight: x1
    ok(x1)	weight: (/ 1 8) + x1
     0()	weight: 0
   #s(x1)	weight: 0
   nil()	weight: 0
#tail(x1)	weight: 0
  mark(x1)	weight: (/ 3 8)
#incr(x1)	weight: 0
pairNs()	weight: 0
 oddNs()	weight: 0
#proper(x1)	weight: x1
#repItems(x1)	weight: 0
active(x1)	weight: x1
  cons(x1,x2)	weight: (/ 1 8) + x1 + x2
#active(x1)	weight: 0
#pair(x1,x2)	weight: 0
   zip(x1,x2)	weight: (/ 1 8) + x1 + x2
    Usable rules: { }
    Removed DPs: #3 #4 #7 #8 #11 #12 #14 #21 #22 #32 #45 #50
Number of SCCs: 4, DPs: 0, edges: 0
