Input TRS:
    1: active(f(X)) -> mark(if(X,c(),f(true())))
    2: active(if(true(),X,Y)) -> mark(X)
    3: active(if(false(),X,Y)) -> mark(Y)
    4: mark(f(X)) -> active(f(mark(X)))
    5: mark(if(X1,X2,X3)) -> active(if(mark(X1),mark(X2),X3))
    6: mark(c()) -> active(c())
    7: mark(true()) -> active(true())
    8: mark(false()) -> active(false())
    9: f(mark(X)) -> f(X)
    10: f(active(X)) -> f(X)
    11: if(mark(X1),X2,X3) -> if(X1,X2,X3)
    12: if(X1,mark(X2),X3) -> if(X1,X2,X3)
    13: if(X1,X2,mark(X3)) -> if(X1,X2,X3)
    14: if(active(X1),X2,X3) -> if(X1,X2,X3)
    15: if(X1,active(X2),X3) -> if(X1,X2,X3)
    16: if(X1,X2,active(X3)) -> if(X1,X2,X3)
Number of strict rules: 16
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #active(if(true(),X,Y)) -> #mark(X)
   #2: #mark(c()) -> #active(c())
   #3: #if(X1,X2,mark(X3)) -> #if(X1,X2,X3)
   #4: #f(mark(X)) -> #f(X)
   #5: #if(mark(X1),X2,X3) -> #if(X1,X2,X3)
   #6: #if(X1,mark(X2),X3) -> #if(X1,X2,X3)
   #7: #if(active(X1),X2,X3) -> #if(X1,X2,X3)
   #8: #mark(true()) -> #active(true())
   #9: #f(active(X)) -> #f(X)
   #10: #mark(if(X1,X2,X3)) -> #active(if(mark(X1),mark(X2),X3))
   #11: #mark(if(X1,X2,X3)) -> #if(mark(X1),mark(X2),X3)
   #12: #mark(if(X1,X2,X3)) -> #mark(X1)
   #13: #mark(if(X1,X2,X3)) -> #mark(X2)
   #14: #if(X1,X2,active(X3)) -> #if(X1,X2,X3)
   #15: #active(if(false(),X,Y)) -> #mark(Y)
   #16: #active(f(X)) -> #mark(if(X,c(),f(true())))
   #17: #active(f(X)) -> #if(X,c(),f(true()))
   #18: #active(f(X)) -> #f(true())
   #19: #mark(false()) -> #active(false())
   #20: #if(X1,active(X2),X3) -> #if(X1,X2,X3)
   #21: #mark(f(X)) -> #active(f(mark(X)))
   #22: #mark(f(X)) -> #f(mark(X))
   #23: #mark(f(X)) -> #mark(X)
Number of SCCs: 3, DPs: 16, edges: 71
	SCC { #4 #9 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 false()	weight: 0
     c()	weight: 0
  true()	weight: 0
     f(x1)	weight: 0
#mark(x1)	weight: 0
    if(x1,x2,x3)	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
   #f(x1)	weight: x1
active(x1)	weight: (/ 1 2) + x1
  #if(x1,x2,x3)	weight: 0
#active(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #4 #9
Number of SCCs: 2, DPs: 14, edges: 67
	SCC { #3 #5..7 #14 #20 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 false()	weight: 0
     c()	weight: 0
  true()	weight: 0
     f(x1)	weight: 0
#mark(x1)	weight: 0
    if(x1,x2,x3)	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
   #f(x1)	weight: 0
active(x1)	weight: (/ 1 2) + x1
  #if(x1,x2,x3)	weight: x1 + x3
#active(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #3 #5 #7 #14
Number of SCCs: 2, DPs: 10, edges: 35
	SCC { #6 #20 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 false()	weight: 0
     c()	weight: 0
  true()	weight: 0
     f(x1)	weight: 0
#mark(x1)	weight: 0
    if(x1,x2,x3)	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
   #f(x1)	weight: 0
active(x1)	weight: (/ 1 2) + x1
  #if(x1,x2,x3)	weight: x2
#active(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #6 #20
Number of SCCs: 1, DPs: 8, edges: 31
	SCC { #1 #10 #12 #13 #15 #16 #21 #23 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 false()	weight: 0
     c()	weight: 0
  true()	weight: 0
     f(x1)	weight: (/ 1 2) + x1
#mark(x1)	weight: x1
    if(x1,x2,x3)	weight: x1 + x2 + x3
  mark(x1)	weight: x1
   #f(x1)	weight: 0
active(x1)	weight: x1
  #if(x1,x2,x3)	weight: 0
#active(x1)	weight: x1
    Usable rules: { 1..16 }
    Removed DPs: #23
Number of SCCs: 2, DPs: 7, edges: 22
	SCC { #1 #10 #12 #13 #15 #16 #21 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... succeeded.
 false()	weight: (/ 1 8)
     c()	weight: (/ 1 8)
  true()	weight: 0
     f(x1)	weight: (/ 1 2) + x1
#mark(x1)	weight: x1
    if(x1,x2,x3)	weight: max{x3, (/ 1 4) + x2, (/ 1 8) + x1}
  mark(x1)	weight: x1
   #f(x1)	weight: 0
active(x1)	weight: x1
  #if(x1,x2,x3)	weight: 0
#active(x1)	weight: x1
    Usable rules: { 1..16 }
    Removed DPs: #1 #12 #13
Number of SCCs: 2, DPs: 4, edges: 5
	SCC { #10 #15 #16 #21 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... succeeded.
 false()	weight: (/ 1 4)
     c()	weight: 0
  true()	weight: 0
     f(x1)	weight: max{0, (/ 1 4) + x1}
#mark(x1)	weight: max{0, (/ 1 4) + x1}
    if(x1,x2,x3)	weight: max{0, x3 + x2 + x1}
  mark(x1)	weight: max{0, x1}
   #f(x1)	weight: 0
active(x1)	weight: max{0, x1}
  #if(x1,x2,x3)	weight: 0
#active(x1)	weight: max{0, (/ 1 4) + x1}
    Usable rules: { 1..16 }
    Removed DPs: #15
Number of SCCs: 1, DPs: 0, edges: 0
