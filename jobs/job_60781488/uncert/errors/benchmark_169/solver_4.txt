Input TRS:
    1: intlist(nil()) -> nil()
    2: int(s(x),0()) -> nil()
    3: int(x,x) -> cons(x,nil())
    4: intlist(cons(x,y)) -> cons(s(x),intlist(y))
    5: int(s(x),s(y)) -> intlist(int(x,y))
    6: int(0(),s(y)) -> cons(0(),int(s(0()),s(y)))
    7: intlist(cons(x,nil())) -> cons(s(x),nil())
Number of strict rules: 7
Direct Order(PosReal,>,Poly) ... removes: 3 2
     s(x1)	weight: x1
     0()	weight: 0
   nil()	weight: 0
intlist(x1)	weight: x1
   int(x1,x2)	weight: (/ 1 4) + x1 + x2
  cons(x1,x2)	weight: x1 + x2
Number of strict rules: 5
Direct Order(PosReal,>,Poly) ... failed.
Freezing int
1: intlist(nil()) -> nil()
4: intlist(cons(x,y)) -> cons(s(x),intlist(y))
5: int❆1_s(x,s(y)) -> intlist(int(x,y))
6: int❆1_0(s(y)) -> cons(0(),int❆1_s(0(),s(y)))
7: intlist(cons(x,nil())) -> cons(s(x),nil())
8: int(0(),_1) ->= int❆1_0(_1)
9: int(s(_1),_2) ->= int❆1_s(_1,_2)
Number of strict rules: 5
Direct Order(PosReal,>,Poly) ... removes: 9
     s(x1)	weight: 9726 + 2 * x1
int❆1_0(x1)	weight: 9726 + 2 * x1
int❆1_s(x1,x2)	weight: 2 * x1 + 2 * x2
     0()	weight: 0
   nil()	weight: 0
intlist(x1)	weight: 2 * x1
   int(x1,x2)	weight: 9726 + x1 + 2 * x2
  cons(x1,x2)	weight: 9726 + x1 + x2
Number of strict rules: 5
Direct Order(PosReal,>,Poly) ... failed.
Dependency Pairs:
   #1: #int❆1_0(s(y)) -> #int❆1_s(0(),s(y))
   #2: #int❆1_s(x,s(y)) -> #intlist(int(x,y))
   #3: #int❆1_s(x,s(y)) -> #int(x,y)
   #4: #int(0(),_1) ->? #int❆1_0(_1)
   #5: #intlist(cons(x,y)) -> #intlist(y)
Number of SCCs: 2, DPs: 4, edges: 4
	SCC { #5 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#intlist(x1)	weight: x1
     s(x1)	weight: 0
int❆1_0(x1)	weight: 0
int❆1_s(x1,x2)	weight: 0
#int❆1_0(x1)	weight: 0
#int❆1_s(x1,x2)	weight: 0
     0()	weight: 0
   nil()	weight: 0
intlist(x1)	weight: 0
   int(x1,x2)	weight: 0
  cons(x1,x2)	weight: (/ 1 2) + x2
 #int(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #5
Number of SCCs: 1, DPs: 3, edges: 3
	SCC { #1 #3 #4 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#intlist(x1)	weight: 0
     s(x1)	weight: (/ 3 4) + x1
int❆1_0(x1)	weight: 0
int❆1_s(x1,x2)	weight: 0
#int❆1_0(x1)	weight: (/ 1 4) + x1
#int❆1_s(x1,x2)	weight: x2
     0()	weight: 0
   nil()	weight: 0
intlist(x1)	weight: 0
   int(x1,x2)	weight: 0
  cons(x1,x2)	weight: (/ 1 4)
 #int(x1,x2)	weight: (/ 1 2) + x2
    Usable rules: { }
    Removed DPs: #1 #3 #4
Number of SCCs: 0, DPs: 0, edges: 0
