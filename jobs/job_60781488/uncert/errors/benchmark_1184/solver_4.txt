Input TRS:
    1: active(zeros()) -> mark(cons(0(),zeros()))
    2: active(U11(tt(),V1)) -> mark(U12(isNatList(V1)))
    3: active(U12(tt())) -> mark(tt())
    4: active(U21(tt(),V1)) -> mark(U22(isNat(V1)))
    5: active(U22(tt())) -> mark(tt())
    6: active(U31(tt(),V)) -> mark(U32(isNatList(V)))
    7: active(U32(tt())) -> mark(tt())
    8: active(U41(tt(),V1,V2)) -> mark(U42(isNat(V1),V2))
    9: active(U42(tt(),V2)) -> mark(U43(isNatIList(V2)))
    10: active(U43(tt())) -> mark(tt())
    11: active(U51(tt(),V1,V2)) -> mark(U52(isNat(V1),V2))
    12: active(U52(tt(),V2)) -> mark(U53(isNatList(V2)))
    13: active(U53(tt())) -> mark(tt())
    14: active(U61(tt(),L)) -> mark(s(length(L)))
    15: active(and(tt(),X)) -> mark(X)
    16: active(isNat(0())) -> mark(tt())
    17: active(isNat(length(V1))) -> mark(U11(isNatIListKind(V1),V1))
    18: active(isNat(s(V1))) -> mark(U21(isNatKind(V1),V1))
    19: active(isNatIList(V)) -> mark(U31(isNatIListKind(V),V))
    20: active(isNatIList(zeros())) -> mark(tt())
    21: active(isNatIList(cons(V1,V2))) -> mark(U41(and(isNatKind(V1),isNatIListKind(V2)),V1,V2))
    22: active(isNatIListKind(nil())) -> mark(tt())
    23: active(isNatIListKind(zeros())) -> mark(tt())
    24: active(isNatIListKind(cons(V1,V2))) -> mark(and(isNatKind(V1),isNatIListKind(V2)))
    25: active(isNatKind(0())) -> mark(tt())
    26: active(isNatKind(length(V1))) -> mark(isNatIListKind(V1))
    27: active(isNatKind(s(V1))) -> mark(isNatKind(V1))
    28: active(isNatList(nil())) -> mark(tt())
    29: active(isNatList(cons(V1,V2))) -> mark(U51(and(isNatKind(V1),isNatIListKind(V2)),V1,V2))
    30: active(length(nil())) -> mark(0())
    31: active(length(cons(N,L))) -> mark(U61(and(and(isNatList(L),isNatIListKind(L)),and(isNat(N),isNatKind(N))),L))
    32: active(cons(X1,X2)) -> cons(active(X1),X2)
    33: active(U11(X1,X2)) -> U11(active(X1),X2)
    34: active(U12(X)) -> U12(active(X))
    35: active(U21(X1,X2)) -> U21(active(X1),X2)
    36: active(U22(X)) -> U22(active(X))
    37: active(U31(X1,X2)) -> U31(active(X1),X2)
    38: active(U32(X)) -> U32(active(X))
    39: active(U41(X1,X2,X3)) -> U41(active(X1),X2,X3)
    40: active(U42(X1,X2)) -> U42(active(X1),X2)
    41: active(U43(X)) -> U43(active(X))
    42: active(U51(X1,X2,X3)) -> U51(active(X1),X2,X3)
    43: active(U52(X1,X2)) -> U52(active(X1),X2)
    44: active(U53(X)) -> U53(active(X))
    45: active(U61(X1,X2)) -> U61(active(X1),X2)
    46: active(s(X)) -> s(active(X))
    47: active(length(X)) -> length(active(X))
    48: active(and(X1,X2)) -> and(active(X1),X2)
    49: cons(mark(X1),X2) -> mark(cons(X1,X2))
    50: U11(mark(X1),X2) -> mark(U11(X1,X2))
    51: U12(mark(X)) -> mark(U12(X))
    52: U21(mark(X1),X2) -> mark(U21(X1,X2))
    53: U22(mark(X)) -> mark(U22(X))
    54: U31(mark(X1),X2) -> mark(U31(X1,X2))
    55: U32(mark(X)) -> mark(U32(X))
    56: U41(mark(X1),X2,X3) -> mark(U41(X1,X2,X3))
    57: U42(mark(X1),X2) -> mark(U42(X1,X2))
    58: U43(mark(X)) -> mark(U43(X))
    59: U51(mark(X1),X2,X3) -> mark(U51(X1,X2,X3))
    60: U52(mark(X1),X2) -> mark(U52(X1,X2))
    61: U53(mark(X)) -> mark(U53(X))
    62: U61(mark(X1),X2) -> mark(U61(X1,X2))
    63: s(mark(X)) -> mark(s(X))
    64: length(mark(X)) -> mark(length(X))
    65: and(mark(X1),X2) -> mark(and(X1,X2))
    66: proper(zeros()) -> ok(zeros())
    67: proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
    68: proper(0()) -> ok(0())
    69: proper(U11(X1,X2)) -> U11(proper(X1),proper(X2))
    70: proper(tt()) -> ok(tt())
    71: proper(U12(X)) -> U12(proper(X))
    72: proper(isNatList(X)) -> isNatList(proper(X))
    73: proper(U21(X1,X2)) -> U21(proper(X1),proper(X2))
    74: proper(U22(X)) -> U22(proper(X))
    75: proper(isNat(X)) -> isNat(proper(X))
    76: proper(U31(X1,X2)) -> U31(proper(X1),proper(X2))
    77: proper(U32(X)) -> U32(proper(X))
    78: proper(U41(X1,X2,X3)) -> U41(proper(X1),proper(X2),proper(X3))
    79: proper(U42(X1,X2)) -> U42(proper(X1),proper(X2))
    80: proper(U43(X)) -> U43(proper(X))
    81: proper(isNatIList(X)) -> isNatIList(proper(X))
    82: proper(U51(X1,X2,X3)) -> U51(proper(X1),proper(X2),proper(X3))
    83: proper(U52(X1,X2)) -> U52(proper(X1),proper(X2))
    84: proper(U53(X)) -> U53(proper(X))
    85: proper(U61(X1,X2)) -> U61(proper(X1),proper(X2))
    86: proper(s(X)) -> s(proper(X))
    87: proper(length(X)) -> length(proper(X))
    88: proper(and(X1,X2)) -> and(proper(X1),proper(X2))
    89: proper(isNatIListKind(X)) -> isNatIListKind(proper(X))
    90: proper(isNatKind(X)) -> isNatKind(proper(X))
    91: proper(nil()) -> ok(nil())
    92: cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
    93: U11(ok(X1),ok(X2)) -> ok(U11(X1,X2))
    94: U12(ok(X)) -> ok(U12(X))
    95: isNatList(ok(X)) -> ok(isNatList(X))
    96: U21(ok(X1),ok(X2)) -> ok(U21(X1,X2))
    97: U22(ok(X)) -> ok(U22(X))
    98: isNat(ok(X)) -> ok(isNat(X))
    99: U31(ok(X1),ok(X2)) -> ok(U31(X1,X2))
    100: U32(ok(X)) -> ok(U32(X))
    101: U41(ok(X1),ok(X2),ok(X3)) -> ok(U41(X1,X2,X3))
    102: U42(ok(X1),ok(X2)) -> ok(U42(X1,X2))
    103: U43(ok(X)) -> ok(U43(X))
    104: isNatIList(ok(X)) -> ok(isNatIList(X))
    105: U51(ok(X1),ok(X2),ok(X3)) -> ok(U51(X1,X2,X3))
    106: U52(ok(X1),ok(X2)) -> ok(U52(X1,X2))
    107: U53(ok(X)) -> ok(U53(X))
    108: U61(ok(X1),ok(X2)) -> ok(U61(X1,X2))
    109: s(ok(X)) -> ok(s(X))
    110: length(ok(X)) -> ok(length(X))
    111: and(ok(X1),ok(X2)) -> ok(and(X1,X2))
    112: isNatIListKind(ok(X)) -> ok(isNatIListKind(X))
    113: isNatKind(ok(X)) -> ok(isNatKind(X))
    114: top(mark(X)) -> top(proper(X))
    115: top(ok(X)) -> top(active(X))
Number of strict rules: 115
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #active(U11(tt(),V1)) -> #U12(isNatList(V1))
   #2: #active(U11(tt(),V1)) -> #isNatList(V1)
   #3: #proper(s(X)) -> #s(proper(X))
   #4: #proper(s(X)) -> #proper(X)
   #5: #active(U52(X1,X2)) -> #U52(active(X1),X2)
   #6: #active(U52(X1,X2)) -> #active(X1)
   #7: #active(isNatList(cons(V1,V2))) -> #U51(and(isNatKind(V1),isNatIListKind(V2)),V1,V2)
   #8: #active(isNatList(cons(V1,V2))) -> #and(isNatKind(V1),isNatIListKind(V2))
   #9: #active(isNatList(cons(V1,V2))) -> #isNatKind(V1)
   #10: #active(isNatList(cons(V1,V2))) -> #isNatIListKind(V2)
   #11: #active(U21(X1,X2)) -> #U21(active(X1),X2)
   #12: #active(U21(X1,X2)) -> #active(X1)
   #13: #proper(U52(X1,X2)) -> #U52(proper(X1),proper(X2))
   #14: #proper(U52(X1,X2)) -> #proper(X1)
   #15: #proper(U52(X1,X2)) -> #proper(X2)
   #16: #active(s(X)) -> #s(active(X))
   #17: #active(s(X)) -> #active(X)
   #18: #active(U51(X1,X2,X3)) -> #U51(active(X1),X2,X3)
   #19: #active(U51(X1,X2,X3)) -> #active(X1)
   #20: #top(ok(X)) -> #top(active(X))
   #21: #top(ok(X)) -> #active(X)
   #22: #isNatList(ok(X)) -> #isNatList(X)
   #23: #active(U43(X)) -> #U43(active(X))
   #24: #active(U43(X)) -> #active(X)
   #25: #active(U31(X1,X2)) -> #U31(active(X1),X2)
   #26: #active(U31(X1,X2)) -> #active(X1)
   #27: #top(mark(X)) -> #top(proper(X))
   #28: #top(mark(X)) -> #proper(X)
   #29: #U31(ok(X1),ok(X2)) -> #U31(X1,X2)
   #30: #U22(ok(X)) -> #U22(X)
   #31: #proper(U21(X1,X2)) -> #U21(proper(X1),proper(X2))
   #32: #proper(U21(X1,X2)) -> #proper(X1)
   #33: #proper(U21(X1,X2)) -> #proper(X2)
   #34: #active(length(X)) -> #length(active(X))
   #35: #active(length(X)) -> #active(X)
   #36: #U22(mark(X)) -> #U22(X)
   #37: #proper(U12(X)) -> #U12(proper(X))
   #38: #proper(U12(X)) -> #proper(X)
   #39: #active(and(X1,X2)) -> #and(active(X1),X2)
   #40: #active(and(X1,X2)) -> #active(X1)
   #41: #proper(isNat(X)) -> #isNat(proper(X))
   #42: #proper(isNat(X)) -> #proper(X)
   #43: #isNatIListKind(ok(X)) -> #isNatIListKind(X)
   #44: #proper(U22(X)) -> #U22(proper(X))
   #45: #proper(U22(X)) -> #proper(X)
   #46: #U43(mark(X)) -> #U43(X)
   #47: #isNatKind(ok(X)) -> #isNatKind(X)
   #48: #U53(mark(X)) -> #U53(X)
   #49: #active(U32(X)) -> #U32(active(X))
   #50: #active(U32(X)) -> #active(X)
   #51: #active(U31(tt(),V)) -> #U32(isNatList(V))
   #52: #active(U31(tt(),V)) -> #isNatList(V)
   #53: #U51(mark(X1),X2,X3) -> #U51(X1,X2,X3)
   #54: #length(ok(X)) -> #length(X)
   #55: #U32(mark(X)) -> #U32(X)
   #56: #proper(cons(X1,X2)) -> #cons(proper(X1),proper(X2))
   #57: #proper(cons(X1,X2)) -> #proper(X1)
   #58: #proper(cons(X1,X2)) -> #proper(X2)
   #59: #active(U42(X1,X2)) -> #U42(active(X1),X2)
   #60: #active(U42(X1,X2)) -> #active(X1)
   #61: #proper(isNatKind(X)) -> #isNatKind(proper(X))
   #62: #proper(isNatKind(X)) -> #proper(X)
   #63: #U53(ok(X)) -> #U53(X)
   #64: #U12(mark(X)) -> #U12(X)
   #65: #active(U42(tt(),V2)) -> #U43(isNatIList(V2))
   #66: #active(U42(tt(),V2)) -> #isNatIList(V2)
   #67: #active(U51(tt(),V1,V2)) -> #U52(isNat(V1),V2)
   #68: #active(U51(tt(),V1,V2)) -> #isNat(V1)
   #69: #isNat(ok(X)) -> #isNat(X)
   #70: #U42(mark(X1),X2) -> #U42(X1,X2)
   #71: #proper(U31(X1,X2)) -> #U31(proper(X1),proper(X2))
   #72: #proper(U31(X1,X2)) -> #proper(X1)
   #73: #proper(U31(X1,X2)) -> #proper(X2)
   #74: #s(ok(X)) -> #s(X)
   #75: #U12(ok(X)) -> #U12(X)
   #76: #active(isNatIListKind(cons(V1,V2))) -> #and(isNatKind(V1),isNatIListKind(V2))
   #77: #active(isNatIListKind(cons(V1,V2))) -> #isNatKind(V1)
   #78: #active(isNatIListKind(cons(V1,V2))) -> #isNatIListKind(V2)
   #79: #proper(isNatIList(X)) -> #isNatIList(proper(X))
   #80: #proper(isNatIList(X)) -> #proper(X)
   #81: #proper(U41(X1,X2,X3)) -> #U41(proper(X1),proper(X2),proper(X3))
   #82: #proper(U41(X1,X2,X3)) -> #proper(X1)
   #83: #proper(U41(X1,X2,X3)) -> #proper(X2)
   #84: #proper(U41(X1,X2,X3)) -> #proper(X3)
   #85: #active(U61(X1,X2)) -> #U61(active(X1),X2)
   #86: #active(U61(X1,X2)) -> #active(X1)
   #87: #U21(ok(X1),ok(X2)) -> #U21(X1,X2)
   #88: #proper(U11(X1,X2)) -> #U11(proper(X1),proper(X2))
   #89: #proper(U11(X1,X2)) -> #proper(X1)
   #90: #proper(U11(X1,X2)) -> #proper(X2)
   #91: #U41(ok(X1),ok(X2),ok(X3)) -> #U41(X1,X2,X3)
   #92: #active(U52(tt(),V2)) -> #U53(isNatList(V2))
   #93: #active(U52(tt(),V2)) -> #isNatList(V2)
   #94: #active(length(cons(N,L))) -> #U61(and(and(isNatList(L),isNatIListKind(L)),and(isNat(N),isNatKind(N))),L)
   #95: #active(length(cons(N,L))) -> #and(and(isNatList(L),isNatIListKind(L)),and(isNat(N),isNatKind(N)))
   #96: #active(length(cons(N,L))) -> #and(isNatList(L),isNatIListKind(L))
   #97: #active(length(cons(N,L))) -> #isNatList(L)
   #98: #active(length(cons(N,L))) -> #isNatIListKind(L)
   #99: #active(length(cons(N,L))) -> #and(isNat(N),isNatKind(N))
   #100: #active(length(cons(N,L))) -> #isNat(N)
   #101: #active(length(cons(N,L))) -> #isNatKind(N)
   #102: #proper(U42(X1,X2)) -> #U42(proper(X1),proper(X2))
   #103: #proper(U42(X1,X2)) -> #proper(X1)
   #104: #proper(U42(X1,X2)) -> #proper(X2)
   #105: #U41(mark(X1),X2,X3) -> #U41(X1,X2,X3)
   #106: #proper(isNatIListKind(X)) -> #isNatIListKind(proper(X))
   #107: #proper(isNatIListKind(X)) -> #proper(X)
   #108: #proper(U51(X1,X2,X3)) -> #U51(proper(X1),proper(X2),proper(X3))
   #109: #proper(U51(X1,X2,X3)) -> #proper(X1)
   #110: #proper(U51(X1,X2,X3)) -> #proper(X2)
   #111: #proper(U51(X1,X2,X3)) -> #proper(X3)
   #112: #and(ok(X1),ok(X2)) -> #and(X1,X2)
   #113: #active(U61(tt(),L)) -> #s(length(L))
   #114: #active(U61(tt(),L)) -> #length(L)
   #115: #U52(ok(X1),ok(X2)) -> #U52(X1,X2)
   #116: #U61(mark(X1),X2) -> #U61(X1,X2)
   #117: #U21(mark(X1),X2) -> #U21(X1,X2)
   #118: #cons(mark(X1),X2) -> #cons(X1,X2)
   #119: #U61(ok(X1),ok(X2)) -> #U61(X1,X2)
   #120: #proper(and(X1,X2)) -> #and(proper(X1),proper(X2))
   #121: #proper(and(X1,X2)) -> #proper(X1)
   #122: #proper(and(X1,X2)) -> #proper(X2)
   #123: #active(U41(X1,X2,X3)) -> #U41(active(X1),X2,X3)
   #124: #active(U41(X1,X2,X3)) -> #active(X1)
   #125: #cons(ok(X1),ok(X2)) -> #cons(X1,X2)
   #126: #U11(ok(X1),ok(X2)) -> #U11(X1,X2)
   #127: #length(mark(X)) -> #length(X)
   #128: #active(U11(X1,X2)) -> #U11(active(X1),X2)
   #129: #active(U11(X1,X2)) -> #active(X1)
   #130: #proper(isNatList(X)) -> #isNatList(proper(X))
   #131: #proper(isNatList(X)) -> #proper(X)
   #132: #active(U53(X)) -> #U53(active(X))
   #133: #active(U53(X)) -> #active(X)
   #134: #and(mark(X1),X2) -> #and(X1,X2)
   #135: #active(U12(X)) -> #U12(active(X))
   #136: #active(U12(X)) -> #active(X)
   #137: #proper(U53(X)) -> #U53(proper(X))
   #138: #proper(U53(X)) -> #proper(X)
   #139: #proper(length(X)) -> #length(proper(X))
   #140: #proper(length(X)) -> #proper(X)
   #141: #active(isNatKind(s(V1))) -> #isNatKind(V1)
   #142: #U52(mark(X1),X2) -> #U52(X1,X2)
   #143: #active(isNat(length(V1))) -> #U11(isNatIListKind(V1),V1)
   #144: #active(isNat(length(V1))) -> #isNatIListKind(V1)
   #145: #active(cons(X1,X2)) -> #cons(active(X1),X2)
   #146: #active(cons(X1,X2)) -> #active(X1)
   #147: #active(isNatIList(V)) -> #U31(isNatIListKind(V),V)
   #148: #active(isNatIList(V)) -> #isNatIListKind(V)
   #149: #s(mark(X)) -> #s(X)
   #150: #U51(ok(X1),ok(X2),ok(X3)) -> #U51(X1,X2,X3)
   #151: #active(isNatKind(length(V1))) -> #isNatIListKind(V1)
   #152: #U32(ok(X)) -> #U32(X)
   #153: #proper(U61(X1,X2)) -> #U61(proper(X1),proper(X2))
   #154: #proper(U61(X1,X2)) -> #proper(X1)
   #155: #proper(U61(X1,X2)) -> #proper(X2)
   #156: #active(U22(X)) -> #U22(active(X))
   #157: #active(U22(X)) -> #active(X)
   #158: #active(isNatIList(cons(V1,V2))) -> #U41(and(isNatKind(V1),isNatIListKind(V2)),V1,V2)
   #159: #active(isNatIList(cons(V1,V2))) -> #and(isNatKind(V1),isNatIListKind(V2))
   #160: #active(isNatIList(cons(V1,V2))) -> #isNatKind(V1)
   #161: #active(isNatIList(cons(V1,V2))) -> #isNatIListKind(V2)
   #162: #proper(U32(X)) -> #U32(proper(X))
   #163: #proper(U32(X)) -> #proper(X)
   #164: #active(zeros()) -> #cons(0(),zeros())
   #165: #U31(mark(X1),X2) -> #U31(X1,X2)
   #166: #active(U41(tt(),V1,V2)) -> #U42(isNat(V1),V2)
   #167: #active(U41(tt(),V1,V2)) -> #isNat(V1)
   #168: #U42(ok(X1),ok(X2)) -> #U42(X1,X2)
   #169: #U43(ok(X)) -> #U43(X)
   #170: #active(U21(tt(),V1)) -> #U22(isNat(V1))
   #171: #active(U21(tt(),V1)) -> #isNat(V1)
   #172: #isNatIList(ok(X)) -> #isNatIList(X)
   #173: #proper(U43(X)) -> #U43(proper(X))
   #174: #proper(U43(X)) -> #proper(X)
   #175: #U11(mark(X1),X2) -> #U11(X1,X2)
   #176: #active(isNat(s(V1))) -> #U21(isNatKind(V1),V1)
   #177: #active(isNat(s(V1))) -> #isNatKind(V1)
Number of SCCs: 25, DPs: 92, edges: 1522
	SCC { #22 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 #U32(x1)	weight: 0
#isNatIListKind(x1)	weight: 0
isNatKind(x1)	weight: 0
   U21(x1,x2)	weight: 0
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#isNat(x1)	weight: 0
   U42(x1,x2)	weight: 0
   top(x1)	weight: 0
   and(x1,x2)	weight: 0
isNatIList(x1)	weight: 0
   U43(x1)	weight: 0
 #U53(x1)	weight: 0
 #top(x1)	weight: 0
 #U43(x1)	weight: 0
 zeros()	weight: 0
 #U52(x1,x2)	weight: 0
   U12(x1)	weight: 0
 #U42(x1,x2)	weight: 0
 #U12(x1)	weight: 0
proper(x1)	weight: 0
    ok(x1)	weight: (/ 1 2) + x1
     0()	weight: 0
#isNatList(x1)	weight: x1
   #s(x1)	weight: 0
isNatIListKind(x1)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: 0
   U32(x1)	weight: 0
#proper(x1)	weight: 0
 isNat(x1)	weight: 0
   U52(x1,x2)	weight: 0
   U61(x1,x2)	weight: 0
 #U51(x1,x2,x3)	weight: 0
 #U11(x1,x2)	weight: 0
active(x1)	weight: 0
   U31(x1,x2)	weight: 0
 #U41(x1,x2,x3)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#isNatIList(x1)	weight: 0
 #U21(x1,x2)	weight: 0
 #U22(x1)	weight: 0
    tt()	weight: 0
   U22(x1)	weight: 0
   U51(x1,x2,x3)	weight: 0
#isNatKind(x1)	weight: 0
   U53(x1)	weight: 0
length(x1)	weight: 0
#length(x1)	weight: 0
   U41(x1,x2,x3)	weight: 0
 #U31(x1,x2)	weight: 0
 #and(x1,x2)	weight: 0
 #U61(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #22
Number of SCCs: 24, DPs: 91, edges: 1521
	SCC { #43 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 #U32(x1)	weight: 0
#isNatIListKind(x1)	weight: x1
isNatKind(x1)	weight: 0
   U21(x1,x2)	weight: 0
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#isNat(x1)	weight: 0
   U42(x1,x2)	weight: 0
   top(x1)	weight: 0
   and(x1,x2)	weight: 0
isNatIList(x1)	weight: 0
   U43(x1)	weight: 0
 #U53(x1)	weight: 0
 #top(x1)	weight: 0
 #U43(x1)	weight: 0
 zeros()	weight: 0
 #U52(x1,x2)	weight: 0
   U12(x1)	weight: 0
 #U42(x1,x2)	weight: 0
 #U12(x1)	weight: 0
proper(x1)	weight: 0
    ok(x1)	weight: (/ 1 2) + x1
     0()	weight: 0
#isNatList(x1)	weight: 0
   #s(x1)	weight: 0
isNatIListKind(x1)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: 0
   U32(x1)	weight: 0
#proper(x1)	weight: 0
 isNat(x1)	weight: 0
   U52(x1,x2)	weight: 0
   U61(x1,x2)	weight: 0
 #U51(x1,x2,x3)	weight: 0
 #U11(x1,x2)	weight: 0
active(x1)	weight: 0
   U31(x1,x2)	weight: 0
 #U41(x1,x2,x3)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#isNatIList(x1)	weight: 0
 #U21(x1,x2)	weight: 0
 #U22(x1)	weight: 0
    tt()	weight: 0
   U22(x1)	weight: 0
   U51(x1,x2,x3)	weight: 0
#isNatKind(x1)	weight: 0
   U53(x1)	weight: 0
length(x1)	weight: 0
#length(x1)	weight: 0
   U41(x1,x2,x3)	weight: 0
 #U31(x1,x2)	weight: 0
 #and(x1,x2)	weight: 0
 #U61(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #43
Number of SCCs: 23, DPs: 90, edges: 1520
	SCC { #172 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 #U32(x1)	weight: 0
#isNatIListKind(x1)	weight: 0
isNatKind(x1)	weight: 0
   U21(x1,x2)	weight: 0
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#isNat(x1)	weight: 0
   U42(x1,x2)	weight: 0
   top(x1)	weight: 0
   and(x1,x2)	weight: 0
isNatIList(x1)	weight: 0
   U43(x1)	weight: 0
 #U53(x1)	weight: 0
 #top(x1)	weight: 0
 #U43(x1)	weight: 0
 zeros()	weight: 0
 #U52(x1,x2)	weight: 0
   U12(x1)	weight: 0
 #U42(x1,x2)	weight: 0
 #U12(x1)	weight: 0
proper(x1)	weight: 0
    ok(x1)	weight: (/ 1 2) + x1
     0()	weight: 0
#isNatList(x1)	weight: 0
   #s(x1)	weight: 0
isNatIListKind(x1)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: 0
   U32(x1)	weight: 0
#proper(x1)	weight: 0
 isNat(x1)	weight: 0
   U52(x1,x2)	weight: 0
   U61(x1,x2)	weight: 0
 #U51(x1,x2,x3)	weight: 0
 #U11(x1,x2)	weight: 0
active(x1)	weight: 0
   U31(x1,x2)	weight: 0
 #U41(x1,x2,x3)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#isNatIList(x1)	weight: x1
 #U21(x1,x2)	weight: 0
 #U22(x1)	weight: 0
    tt()	weight: 0
   U22(x1)	weight: 0
   U51(x1,x2,x3)	weight: 0
#isNatKind(x1)	weight: 0
   U53(x1)	weight: 0
length(x1)	weight: 0
#length(x1)	weight: 0
   U41(x1,x2,x3)	weight: 0
 #U31(x1,x2)	weight: 0
 #and(x1,x2)	weight: 0
 #U61(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #172
Number of SCCs: 22, DPs: 89, edges: 1519
	SCC { #47 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 #U32(x1)	weight: 0
#isNatIListKind(x1)	weight: 0
isNatKind(x1)	weight: 0
   U21(x1,x2)	weight: 0
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#isNat(x1)	weight: 0
   U42(x1,x2)	weight: 0
   top(x1)	weight: 0
   and(x1,x2)	weight: 0
isNatIList(x1)	weight: 0
   U43(x1)	weight: 0
 #U53(x1)	weight: 0
 #top(x1)	weight: 0
 #U43(x1)	weight: 0
 zeros()	weight: 0
 #U52(x1,x2)	weight: 0
   U12(x1)	weight: 0
 #U42(x1,x2)	weight: 0
 #U12(x1)	weight: 0
proper(x1)	weight: 0
    ok(x1)	weight: (/ 1 2) + x1
     0()	weight: 0
#isNatList(x1)	weight: 0
   #s(x1)	weight: 0
isNatIListKind(x1)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: 0
   U32(x1)	weight: 0
#proper(x1)	weight: 0
 isNat(x1)	weight: 0
   U52(x1,x2)	weight: 0
   U61(x1,x2)	weight: 0
 #U51(x1,x2,x3)	weight: 0
 #U11(x1,x2)	weight: 0
active(x1)	weight: 0
   U31(x1,x2)	weight: 0
 #U41(x1,x2,x3)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#isNatIList(x1)	weight: 0
 #U21(x1,x2)	weight: 0
 #U22(x1)	weight: 0
    tt()	weight: 0
   U22(x1)	weight: 0
   U51(x1,x2,x3)	weight: 0
#isNatKind(x1)	weight: x1
   U53(x1)	weight: 0
length(x1)	weight: 0
#length(x1)	weight: 0
   U41(x1,x2,x3)	weight: 0
 #U31(x1,x2)	weight: 0
 #and(x1,x2)	weight: 0
 #U61(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #47
Number of SCCs: 21, DPs: 88, edges: 1518
	SCC { #69 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 #U32(x1)	weight: 0
#isNatIListKind(x1)	weight: 0
isNatKind(x1)	weight: 0
   U21(x1,x2)	weight: 0
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#isNat(x1)	weight: x1
   U42(x1,x2)	weight: 0
   top(x1)	weight: 0
   and(x1,x2)	weight: 0
isNatIList(x1)	weight: 0
   U43(x1)	weight: 0
 #U53(x1)	weight: 0
 #top(x1)	weight: 0
 #U43(x1)	weight: 0
 zeros()	weight: 0
 #U52(x1,x2)	weight: 0
   U12(x1)	weight: 0
 #U42(x1,x2)	weight: 0
 #U12(x1)	weight: 0
proper(x1)	weight: 0
    ok(x1)	weight: (/ 1 2) + x1
     0()	weight: 0
#isNatList(x1)	weight: 0
   #s(x1)	weight: 0
isNatIListKind(x1)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: 0
   U32(x1)	weight: 0
#proper(x1)	weight: 0
 isNat(x1)	weight: 0
   U52(x1,x2)	weight: 0
   U61(x1,x2)	weight: 0
 #U51(x1,x2,x3)	weight: 0
 #U11(x1,x2)	weight: 0
active(x1)	weight: 0
   U31(x1,x2)	weight: 0
 #U41(x1,x2,x3)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#isNatIList(x1)	weight: 0
 #U21(x1,x2)	weight: 0
 #U22(x1)	weight: 0
    tt()	weight: 0
   U22(x1)	weight: 0
   U51(x1,x2,x3)	weight: 0
#isNatKind(x1)	weight: 0
   U53(x1)	weight: 0
length(x1)	weight: 0
#length(x1)	weight: 0
   U41(x1,x2,x3)	weight: 0
 #U31(x1,x2)	weight: 0
 #and(x1,x2)	weight: 0
 #U61(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #69
Number of SCCs: 20, DPs: 87, edges: 1517
	SCC { #46 #169 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 #U32(x1)	weight: 0
#isNatIListKind(x1)	weight: 0
isNatKind(x1)	weight: 0
   U21(x1,x2)	weight: 0
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#isNat(x1)	weight: 0
   U42(x1,x2)	weight: 0
   top(x1)	weight: 0
   and(x1,x2)	weight: 0
isNatIList(x1)	weight: 0
   U43(x1)	weight: 0
 #U53(x1)	weight: 0
 #top(x1)	weight: 0
 #U43(x1)	weight: x1
 zeros()	weight: 0
 #U52(x1,x2)	weight: 0
   U12(x1)	weight: 0
 #U42(x1,x2)	weight: 0
 #U12(x1)	weight: 0
proper(x1)	weight: 0
    ok(x1)	weight: (/ 1 2) + x1
     0()	weight: 0
#isNatList(x1)	weight: 0
   #s(x1)	weight: 0
isNatIListKind(x1)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
   U32(x1)	weight: 0
#proper(x1)	weight: 0
 isNat(x1)	weight: 0
   U52(x1,x2)	weight: 0
   U61(x1,x2)	weight: 0
 #U51(x1,x2,x3)	weight: 0
 #U11(x1,x2)	weight: 0
active(x1)	weight: 0
   U31(x1,x2)	weight: 0
 #U41(x1,x2,x3)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#isNatIList(x1)	weight: 0
 #U21(x1,x2)	weight: 0
 #U22(x1)	weight: 0
    tt()	weight: 0
   U22(x1)	weight: 0
   U51(x1,x2,x3)	weight: 0
#isNatKind(x1)	weight: 0
   U53(x1)	weight: 0
length(x1)	weight: 0
#length(x1)	weight: 0
   U41(x1,x2,x3)	weight: 0
 #U31(x1,x2)	weight: 0
 #and(x1,x2)	weight: 0
 #U61(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #46 #169
Number of SCCs: 19, DPs: 85, edges: 1513
	SCC { #55 #152 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 #U32(x1)	weight: x1
#isNatIListKind(x1)	weight: 0
isNatKind(x1)	weight: 0
   U21(x1,x2)	weight: 0
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#isNat(x1)	weight: 0
   U42(x1,x2)	weight: 0
   top(x1)	weight: 0
   and(x1,x2)	weight: 0
isNatIList(x1)	weight: 0
   U43(x1)	weight: 0
 #U53(x1)	weight: 0
 #top(x1)	weight: 0
 #U43(x1)	weight: 0
 zeros()	weight: 0
 #U52(x1,x2)	weight: 0
   U12(x1)	weight: 0
 #U42(x1,x2)	weight: 0
 #U12(x1)	weight: 0
proper(x1)	weight: 0
    ok(x1)	weight: (/ 1 2) + x1
     0()	weight: 0
#isNatList(x1)	weight: 0
   #s(x1)	weight: 0
isNatIListKind(x1)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
   U32(x1)	weight: 0
#proper(x1)	weight: 0
 isNat(x1)	weight: 0
   U52(x1,x2)	weight: 0
   U61(x1,x2)	weight: 0
 #U51(x1,x2,x3)	weight: 0
 #U11(x1,x2)	weight: 0
active(x1)	weight: 0
   U31(x1,x2)	weight: 0
 #U41(x1,x2,x3)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#isNatIList(x1)	weight: 0
 #U21(x1,x2)	weight: 0
 #U22(x1)	weight: 0
    tt()	weight: 0
   U22(x1)	weight: 0
   U51(x1,x2,x3)	weight: 0
#isNatKind(x1)	weight: 0
   U53(x1)	weight: 0
length(x1)	weight: 0
#length(x1)	weight: 0
   U41(x1,x2,x3)	weight: 0
 #U31(x1,x2)	weight: 0
 #and(x1,x2)	weight: 0
 #U61(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #55 #152
Number of SCCs: 18, DPs: 83, edges: 1509
	SCC { #54 #127 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 #U32(x1)	weight: 0
#isNatIListKind(x1)	weight: 0
isNatKind(x1)	weight: 0
   U21(x1,x2)	weight: 0
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#isNat(x1)	weight: 0
   U42(x1,x2)	weight: 0
   top(x1)	weight: 0
   and(x1,x2)	weight: 0
isNatIList(x1)	weight: 0
   U43(x1)	weight: 0
 #U53(x1)	weight: 0
 #top(x1)	weight: 0
 #U43(x1)	weight: 0
 zeros()	weight: 0
 #U52(x1,x2)	weight: 0
   U12(x1)	weight: 0
 #U42(x1,x2)	weight: 0
 #U12(x1)	weight: 0
proper(x1)	weight: 0
    ok(x1)	weight: (/ 1 2) + x1
     0()	weight: 0
#isNatList(x1)	weight: 0
   #s(x1)	weight: 0
isNatIListKind(x1)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
   U32(x1)	weight: 0
#proper(x1)	weight: 0
 isNat(x1)	weight: 0
   U52(x1,x2)	weight: 0
   U61(x1,x2)	weight: 0
 #U51(x1,x2,x3)	weight: 0
 #U11(x1,x2)	weight: 0
active(x1)	weight: 0
   U31(x1,x2)	weight: 0
 #U41(x1,x2,x3)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#isNatIList(x1)	weight: 0
 #U21(x1,x2)	weight: 0
 #U22(x1)	weight: 0
    tt()	weight: 0
   U22(x1)	weight: 0
   U51(x1,x2,x3)	weight: 0
#isNatKind(x1)	weight: 0
   U53(x1)	weight: 0
length(x1)	weight: 0
#length(x1)	weight: x1
   U41(x1,x2,x3)	weight: 0
 #U31(x1,x2)	weight: 0
 #and(x1,x2)	weight: 0
 #U61(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #54 #127
Number of SCCs: 17, DPs: 81, edges: 1505
	SCC { #48 #63 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 #U32(x1)	weight: 0
#isNatIListKind(x1)	weight: 0
isNatKind(x1)	weight: 0
   U21(x1,x2)	weight: 0
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#isNat(x1)	weight: 0
   U42(x1,x2)	weight: 0
   top(x1)	weight: 0
   and(x1,x2)	weight: 0
isNatIList(x1)	weight: 0
   U43(x1)	weight: 0
 #U53(x1)	weight: x1
 #top(x1)	weight: 0
 #U43(x1)	weight: 0
 zeros()	weight: 0
 #U52(x1,x2)	weight: 0
   U12(x1)	weight: 0
 #U42(x1,x2)	weight: 0
 #U12(x1)	weight: 0
proper(x1)	weight: 0
    ok(x1)	weight: (/ 1 2) + x1
     0()	weight: 0
#isNatList(x1)	weight: 0
   #s(x1)	weight: 0
isNatIListKind(x1)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
   U32(x1)	weight: 0
#proper(x1)	weight: 0
 isNat(x1)	weight: 0
   U52(x1,x2)	weight: 0
   U61(x1,x2)	weight: 0
 #U51(x1,x2,x3)	weight: 0
 #U11(x1,x2)	weight: 0
active(x1)	weight: 0
   U31(x1,x2)	weight: 0
 #U41(x1,x2,x3)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#isNatIList(x1)	weight: 0
 #U21(x1,x2)	weight: 0
 #U22(x1)	weight: 0
    tt()	weight: 0
   U22(x1)	weight: 0
   U51(x1,x2,x3)	weight: 0
#isNatKind(x1)	weight: 0
   U53(x1)	weight: 0
length(x1)	weight: 0
#length(x1)	weight: 0
   U41(x1,x2,x3)	weight: 0
 #U31(x1,x2)	weight: 0
 #and(x1,x2)	weight: 0
 #U61(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #48 #63
Number of SCCs: 16, DPs: 79, edges: 1501
	SCC { #30 #36 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 #U32(x1)	weight: 0
#isNatIListKind(x1)	weight: 0
isNatKind(x1)	weight: 0
   U21(x1,x2)	weight: 0
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#isNat(x1)	weight: 0
   U42(x1,x2)	weight: 0
   top(x1)	weight: 0
   and(x1,x2)	weight: 0
isNatIList(x1)	weight: 0
   U43(x1)	weight: 0
 #U53(x1)	weight: 0
 #top(x1)	weight: 0
 #U43(x1)	weight: 0
 zeros()	weight: 0
 #U52(x1,x2)	weight: 0
   U12(x1)	weight: 0
 #U42(x1,x2)	weight: 0
 #U12(x1)	weight: 0
proper(x1)	weight: 0
    ok(x1)	weight: (/ 1 2) + x1
     0()	weight: 0
#isNatList(x1)	weight: 0
   #s(x1)	weight: 0
isNatIListKind(x1)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
   U32(x1)	weight: 0
#proper(x1)	weight: 0
 isNat(x1)	weight: 0
   U52(x1,x2)	weight: 0
   U61(x1,x2)	weight: 0
 #U51(x1,x2,x3)	weight: 0
 #U11(x1,x2)	weight: 0
active(x1)	weight: 0
   U31(x1,x2)	weight: 0
 #U41(x1,x2,x3)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#isNatIList(x1)	weight: 0
 #U21(x1,x2)	weight: 0
 #U22(x1)	weight: x1
    tt()	weight: 0
   U22(x1)	weight: 0
   U51(x1,x2,x3)	weight: 0
#isNatKind(x1)	weight: 0
   U53(x1)	weight: 0
length(x1)	weight: 0
#length(x1)	weight: 0
   U41(x1,x2,x3)	weight: 0
 #U31(x1,x2)	weight: 0
 #and(x1,x2)	weight: 0
 #U61(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #30 #36
Number of SCCs: 15, DPs: 77, edges: 1497
	SCC { #64 #75 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 #U32(x1)	weight: 0
#isNatIListKind(x1)	weight: 0
isNatKind(x1)	weight: 0
   U21(x1,x2)	weight: 0
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#isNat(x1)	weight: 0
   U42(x1,x2)	weight: 0
   top(x1)	weight: 0
   and(x1,x2)	weight: 0
isNatIList(x1)	weight: 0
   U43(x1)	weight: 0
 #U53(x1)	weight: 0
 #top(x1)	weight: 0
 #U43(x1)	weight: 0
 zeros()	weight: 0
 #U52(x1,x2)	weight: 0
   U12(x1)	weight: 0
 #U42(x1,x2)	weight: 0
 #U12(x1)	weight: x1
proper(x1)	weight: 0
    ok(x1)	weight: (/ 1 2) + x1
     0()	weight: 0
#isNatList(x1)	weight: 0
   #s(x1)	weight: 0
isNatIListKind(x1)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
   U32(x1)	weight: 0
#proper(x1)	weight: 0
 isNat(x1)	weight: 0
   U52(x1,x2)	weight: 0
   U61(x1,x2)	weight: 0
 #U51(x1,x2,x3)	weight: 0
 #U11(x1,x2)	weight: 0
active(x1)	weight: 0
   U31(x1,x2)	weight: 0
 #U41(x1,x2,x3)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#isNatIList(x1)	weight: 0
 #U21(x1,x2)	weight: 0
 #U22(x1)	weight: 0
    tt()	weight: 0
   U22(x1)	weight: 0
   U51(x1,x2,x3)	weight: 0
#isNatKind(x1)	weight: 0
   U53(x1)	weight: 0
length(x1)	weight: 0
#length(x1)	weight: 0
   U41(x1,x2,x3)	weight: 0
 #U31(x1,x2)	weight: 0
 #and(x1,x2)	weight: 0
 #U61(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #64 #75
Number of SCCs: 14, DPs: 75, edges: 1493
	SCC { #74 #149 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
 #U32(x1)	weight: 0
#isNatIListKind(x1)	weight: 0
isNatKind(x1)	weight: 0
   U21(x1,x2)	weight: 0
isNatList(x1)	weight: 0
   U11(x1,x2)	weight: 0
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
#isNat(x1)	weight: 0
   U42(x1,x2)	weight: 0
   top(x1)	weight: 0
   and(x1,x2)	weight: 0
isNatIList(x1)	weight: 0
   U43(x1)	weight: 0
 #U53(x1)	weight: 0
 #top(x1)	weight: 0
 #U43(x1)	weight: 0
 zeros()	weight: 0
 #U52(x1,x2)	weight: 0
   U12(x1)	weight: 0
 #U42(x1,x2)	weight: 0
 #U12(x1)	weight: 0
proper(x1)	weight: 0
    ok(x1)	weight: (/ 1 2) + x1
     0()	weight: 0
#isNatList(x1)	weight: 0
   #s(x1)	weight: x1
isNatIListKind(x1)	weight: 0
   nil()	weight: 0
  mark(x1)	weight: (/ 1 2) + x1
   U32(x1)	weight: 0
#proper(x1)	weight: 0
 isNat(x1)	weight: 0
   U52(x1,x2)	weight: 0
   U61(x1,x2)	weight: 0
 #U51(x1,x2,x3)	weight: 0
 #U11(x1,x2)	weight: 0
active(x1)	weight: 0
   U31(x1,x2)	weight: 0
 #U41(x1,x2,x3)	weight: 0
  cons(x1,x2)	weight: 0
#active(x1)	weight: 0
#isNatIList(x1)	weight: 0
 #U21(x1,x2)	weight: 0
 #U22(x1)	weight: 0
    tt()	weight: 0
   U22(x1)	weight: 0
   U51(x1,x2,x3)	weight: 0
#isNatKind(x1)	weight: 0
   U53(x1)	weight: 0
length(x1)	weight: 0
#length(x1)	weight: 0
   U41(x1,x2,x3)	weight: 0
 #U31(x1,x2)	weight: 0
 #and(x1,x2)	weight: 0
 #U61(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #74 #149
Number of SCCs: 13, DPs: 73, edges: 1489
	SCC { #20 #27 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
