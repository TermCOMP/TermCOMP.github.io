Input TRS:
    1: 2nd(cons(X,n__cons(Y,Z))) -> activate(Y)
    2: from(X) -> cons(X,n__from(n__s(X)))
    3: cons(X1,X2) -> n__cons(X1,X2)
    4: from(X) -> n__from(X)
    5: s(X) -> n__s(X)
    6: activate(n__cons(X1,X2)) -> cons(activate(X1),X2)
    7: activate(n__from(X)) -> from(activate(X))
    8: activate(n__s(X)) -> s(activate(X))
    9: activate(X) -> X
Number of strict rules: 9
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #from(X) -> #cons(X,n__from(n__s(X)))
   #2: #activate(n__cons(X1,X2)) -> #cons(activate(X1),X2)
   #3: #activate(n__cons(X1,X2)) -> #activate(X1)
   #4: #activate(n__from(X)) -> #from(activate(X))
   #5: #activate(n__from(X)) -> #activate(X)
   #6: #2nd(cons(X,n__cons(Y,Z))) -> #activate(Y)
   #7: #activate(n__s(X)) -> #s(activate(X))
   #8: #activate(n__s(X)) -> #activate(X)
Number of SCCs: 1, DPs: 3, edges: 9
	SCC { #3 #5 #8 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
#cons(x1,x2)	weight: 0
     s(x1)	weight: 0
activate(x1)	weight: 0
n__from(x1)	weight: (/ 1 2) + x1
#activate(x1)	weight: x1
   2nd(x1)	weight: 0
  n__s(x1)	weight: (/ 1 2) + x1
  from(x1)	weight: 0
   #s(x1)	weight: 0
n__cons(x1,x2)	weight: (/ 1 2) + x1
 #2nd(x1)	weight: 0
#from(x1)	weight: 0
  cons(x1,x2)	weight: 0
    Usable rules: { }
    Removed DPs: #3 #5 #8
Number of SCCs: 0, DPs: 0, edges: 0
