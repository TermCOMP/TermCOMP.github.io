Input TRS:
    1: f(g(X),Y) -> f(X,n__f(n__g(X),activate(Y)))
    2: f(X1,X2) -> n__f(X1,X2)
    3: g(X) -> n__g(X)
    4: activate(n__f(X1,X2)) -> f(activate(X1),X2)
    5: activate(n__g(X)) -> g(activate(X))
    6: activate(X) -> X
Number of strict rules: 6
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #activate(n__g(X)) -> #g(activate(X))
   #2: #activate(n__g(X)) -> #activate(X)
   #3: #f(g(X),Y) -> #f(X,n__f(n__g(X),activate(Y)))
   #4: #f(g(X),Y) -> #activate(Y)
   #5: #activate(n__f(X1,X2)) -> #f(activate(X1),X2)
   #6: #activate(n__f(X1,X2)) -> #activate(X1)
Number of SCCs: 1, DPs: 5, edges: 13
	SCC { #2..6 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... succeeded.
activate(x1)	weight: x1
#activate(x1)	weight: (/ 1 4) + x1
     f(x1,x2)	weight: max{x2, (/ 1 4) + x1}
  n__f(x1,x2)	weight: max{x2, (/ 1 4) + x1}
   #f(x1,x2)	weight: max{(/ 1 4) + x2, (/ 1 2) + x1}
   #g(x1)	weight: 0
  n__g(x1)	weight: (/ 1 4) + x1
     g(x1)	weight: (/ 1 4) + x1
    Usable rules: { 1..6 }
    Removed DPs: #2 #6
Number of SCCs: 1, DPs: 3, edges: 5
	SCC { #3..5 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
