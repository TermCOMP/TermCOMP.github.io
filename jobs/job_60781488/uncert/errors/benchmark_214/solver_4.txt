Input TRS:
    1: minus(minus(x,y),z) -> minus(x,plus(y,z))
    2: minus(0(),y) -> 0()
    3: minus(x,0()) -> x
    4: minus(s(x),s(y)) -> minus(x,y)
    5: plus(0(),y) -> y
    6: plus(s(x),y) -> plus(x,s(y))
    7: plus(s(x),y) -> s(plus(y,x))
    8: zero(s(x)) -> false()
    9: zero(0()) -> true()
    10: p(s(x)) -> x
    11: p(0()) -> 0()
    12: div(x,y) -> quot(x,y,0())
    13: quot(s(x),s(y),z) -> quot(minus(p(ack(0(),x)),y),s(y),s(z))
    14: quot(0(),s(y),z) -> z
    15: ack(0(),x) -> s(x)
    16: ack(0(),x) -> plus(x,s(0()))
    17: ack(s(x),0()) -> ack(x,s(0()))
    18: ack(s(x),s(y)) -> ack(x,ack(s(x),y))
Number of strict rules: 18
Direct Order(PosReal,>,Poly) ... failed.
Freezing ack
1: minus(minus(x,y),z) -> minus(x,plus(y,z))
2: minus(0(),y) -> 0()
3: minus(x,0()) -> x
4: minus(s(x),s(y)) -> minus(x,y)
5: plus(0(),y) -> y
6: plus(s(x),y) -> plus(x,s(y))
7: plus(s(x),y) -> s(plus(y,x))
8: zero(s(x)) -> false()
9: zero(0()) -> true()
10: p(s(x)) -> x
11: p(0()) -> 0()
12: div(x,y) -> quot(x,y,0())
13: quot(s(x),s(y),z) -> quot(minus(p(ack❆1_0(x)),y),s(y),s(z))
14: quot(0(),s(y),z) -> z
15: ack❆1_0(x) -> s(x)
16: ack❆1_0(x) -> plus(x,s(0()))
17: ack❆1_s(x,0()) -> ack(x,s(0()))
18: ack❆1_s(x,s(y)) -> ack(x,ack❆1_s(x,y))
19: ack(0(),_1) ->= ack❆1_0(_1)
20: ack(s(_1),_2) ->= ack❆1_s(_1,_2)
Number of strict rules: 18
Direct Order(PosReal,>,Poly) ... failed.
Dependency Pairs:
   #1: #plus(s(x),y) -> #plus(x,s(y))
   #2: #quot(s(x),s(y),z) -> #quot(minus(p(ack❆1_0(x)),y),s(y),s(z))
   #3: #quot(s(x),s(y),z) -> #minus(p(ack❆1_0(x)),y)
   #4: #quot(s(x),s(y),z) -> #p(ack❆1_0(x))
   #5: #quot(s(x),s(y),z) -> #ack❆1_0(x)
   #6: #div(x,y) -> #quot(x,y,0())
   #7: #ack(s(_1),_2) ->? #ack❆1_s(_1,_2)
   #8: #plus(s(x),y) -> #plus(y,x)
   #9: #ack❆1_s(x,0()) -> #ack(x,s(0()))
   #10: #ack(0(),_1) ->? #ack❆1_0(_1)
   #11: #ack❆1_0(x) -> #plus(x,s(0()))
   #12: #minus(minus(x,y),z) -> #minus(x,plus(y,z))
   #13: #minus(minus(x,y),z) -> #plus(y,z)
   #14: #minus(s(x),s(y)) -> #minus(x,y)
   #15: #ack❆1_s(x,s(y)) -> #ack(x,ack❆1_s(x,y))
   #16: #ack❆1_s(x,s(y)) -> #ack❆1_s(x,y)
Number of SCCs: 4, DPs: 9, edges: 17
	SCC { #1 #8 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
  zero(x1)	weight: 0
 #div(x1,x2)	weight: 0
     s(x1)	weight: (/ 1 2) + x1
 minus(x1,x2)	weight: 0
   ack(x1,x2)	weight: 0
#plus(x1,x2)	weight: x1 + x2
 false()	weight: 0
   div(x1,x2)	weight: 0
#ack❆1_0(x1)	weight: 0
   #p(x1)	weight: 0
  true()	weight: 0
     p(x1)	weight: 0
     0()	weight: 0
  quot(x1,x2,x3)	weight: 0
#minus(x1,x2)	weight: 0
ack❆1_0(x1)	weight: 0
  plus(x1,x2)	weight: 0
 #ack(x1,x2)	weight: 0
ack❆1_s(x1,x2)	weight: 0
#ack❆1_s(x1,x2)	weight: 0
#quot(x1,x2,x3)	weight: 0
#zero(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #8
Number of SCCs: 4, DPs: 8, edges: 14
	SCC { #1 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
  zero(x1)	weight: 0
 #div(x1,x2)	weight: 0
     s(x1)	weight: (/ 1 2) + x1
 minus(x1,x2)	weight: 0
   ack(x1,x2)	weight: 0
#plus(x1,x2)	weight: x1
 false()	weight: 0
   div(x1,x2)	weight: 0
#ack❆1_0(x1)	weight: 0
   #p(x1)	weight: 0
  true()	weight: 0
     p(x1)	weight: 0
     0()	weight: 0
  quot(x1,x2,x3)	weight: 0
#minus(x1,x2)	weight: 0
ack❆1_0(x1)	weight: 0
  plus(x1,x2)	weight: 0
 #ack(x1,x2)	weight: 0
ack❆1_s(x1,x2)	weight: 0
#ack❆1_s(x1,x2)	weight: 0
#quot(x1,x2,x3)	weight: 0
#zero(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #1
Number of SCCs: 3, DPs: 7, edges: 13
	SCC { #2 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... succeeded.
  zero(x1)	weight: 0; 0
 #div(x1,x2)	weight: 0; 0
     s(x1)	weight: max{0, (/ 1 4) + x1_1}; (- (/ 1 16))
 minus(x1,x2)	weight: max{0, (/ 1 16) + x1_1}; 0
   ack(x1,x2)	weight: 0; 0
#plus(x1,x2)	weight: 0; 0
 false()	weight: 0; 0
   div(x1,x2)	weight: 0; 0
#ack❆1_0(x1)	weight: 0; 0
   #p(x1)	weight: 0; 0
  true()	weight: 0; 0
     p(x1)	weight: max{0, (- (/ 1 4)) + x1_1}; 0
     0()	weight: 0; (- (/ 1 16))
  quot(x1,x2,x3)	weight: 0; 0
#minus(x1,x2)	weight: 0; 0
ack❆1_0(x1)	weight: max{0, (/ 5 16) + x1_1}; 0
  plus(x1,x2)	weight: max{0, (/ 1 16) + x2_1 + x1_1}; 0
 #ack(x1,x2)	weight: 0; 0
ack❆1_s(x1,x2)	weight: 0; 0
#ack❆1_s(x1,x2)	weight: 0; 0
#quot(x1,x2,x3)	weight: max{0, (- (/ 1 8)) + x2_1 + x2_2 + x1_1}; 0
#zero(x1)	weight: 0; 0
    Usable rules: { 1..7 10 11 15 16 }
    Removed DPs: #2
Number of SCCs: 3, DPs: 6, edges: 12
	SCC { #12 #14 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
  zero(x1)	weight: 0
 #div(x1,x2)	weight: 0
     s(x1)	weight: (/ 1 4) + x1
 minus(x1,x2)	weight: (/ 1 4) + x1 + x2
   ack(x1,x2)	weight: 0
#plus(x1,x2)	weight: 0
 false()	weight: 0
   div(x1,x2)	weight: 0
#ack❆1_0(x1)	weight: 0
   #p(x1)	weight: 0
  true()	weight: 0
     p(x1)	weight: 0
     0()	weight: 0
  quot(x1,x2,x3)	weight: 0
#minus(x1,x2)	weight: x1
ack❆1_0(x1)	weight: 0
  plus(x1,x2)	weight: (/ 1 2)
 #ack(x1,x2)	weight: 0
ack❆1_s(x1,x2)	weight: 0
#ack❆1_s(x1,x2)	weight: 0
#quot(x1,x2,x3)	weight: 0
#zero(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #12 #14
Number of SCCs: 2, DPs: 4, edges: 8
	SCC { #7 #9 #15 #16 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
  zero(x1)	weight: 0
 #div(x1,x2)	weight: 0
     s(x1)	weight: (/ 1 4) + x1
 minus(x1,x2)	weight: (/ 1 8) + x1 + x2
   ack(x1,x2)	weight: 0
#plus(x1,x2)	weight: 0
 false()	weight: 0
   div(x1,x2)	weight: 0
#ack❆1_0(x1)	weight: 0
   #p(x1)	weight: 0
  true()	weight: 0
     p(x1)	weight: 0
     0()	weight: 0
  quot(x1,x2,x3)	weight: 0
#minus(x1,x2)	weight: 0
ack❆1_0(x1)	weight: (/ 1 8) + x1
  plus(x1,x2)	weight: (/ 1 4)
 #ack(x1,x2)	weight: x1
ack❆1_s(x1,x2)	weight: (/ 1 8) + x1
#ack❆1_s(x1,x2)	weight: (/ 1 8) + x1
#quot(x1,x2,x3)	weight: 0
#zero(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #7 #9 #15
Number of SCCs: 2, DPs: 1, edges: 1
	SCC { #16 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
  zero(x1)	weight: 0
 #div(x1,x2)	weight: 0
     s(x1)	weight: (/ 1 4) + x1
 minus(x1,x2)	weight: (/ 1 8) + x1 + x2
   ack(x1,x2)	weight: 0
#plus(x1,x2)	weight: 0
 false()	weight: 0
   div(x1,x2)	weight: 0
#ack❆1_0(x1)	weight: 0
   #p(x1)	weight: 0
  true()	weight: 0
     p(x1)	weight: 0
     0()	weight: 0
  quot(x1,x2,x3)	weight: 0
#minus(x1,x2)	weight: 0
ack❆1_0(x1)	weight: (/ 1 8) + x1
  plus(x1,x2)	weight: (/ 1 4)
 #ack(x1,x2)	weight: 0
ack❆1_s(x1,x2)	weight: (/ 1 8) + x1
#ack❆1_s(x1,x2)	weight: (/ 1 8) + x2
#quot(x1,x2,x3)	weight: 0
#zero(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #16
Number of SCCs: 1, DPs: 0, edges: 0
