Input TRS:
    1: app(app(f,0()),n) -> app(app(hd(),app(app(map(),f),app(app(cons(),0()),nil()))),n)
    2: app(app(map(),f),nil()) -> nil()
    3: app(app(map(),f),app(app(cons(),x),xs)) -> app(app(cons(),app(f,x)),app(app(map(),f),xs))
Number of strict rules: 3
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #app(app(map(),f),app(app(cons(),x),xs)) -> #app(app(cons(),app(f,x)),app(app(map(),f),xs))
   #2: #app(app(map(),f),app(app(cons(),x),xs)) -> #app(cons(),app(f,x))
   #3: #app(app(map(),f),app(app(cons(),x),xs)) -> #app(f,x)
   #4: #app(app(map(),f),app(app(cons(),x),xs)) -> #app(app(map(),f),xs)
   #5: #app(app(f,0()),n) -> #app(app(hd(),app(app(map(),f),app(app(cons(),0()),nil()))),n)
   #6: #app(app(f,0()),n) -> #app(hd(),app(app(map(),f),app(app(cons(),0()),nil())))
   #7: #app(app(f,0()),n) -> #app(app(map(),f),app(app(cons(),0()),nil()))
   #8: #app(app(f,0()),n) -> #app(map(),f)
   #9: #app(app(f,0()),n) -> #app(app(cons(),0()),nil())
   #10: #app(app(f,0()),n) -> #app(cons(),0())
Number of SCCs: 1, DPs: 4, edges: 14
	SCC { #3 #4 #7 #9 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
    hd()	weight: 0
     0()	weight: 0
   nil()	weight: 0
 #app(x1,x2)	weight: x1
   map()	weight: 0
  cons()	weight: 0
   app(x1,x2)	weight: (/ 1 8) + x1 + x2
    Usable rules: { }
    Removed DPs: #3
Number of SCCs: 1, DPs: 3, edges: 8
	SCC { #4 #7 #9 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... succeeded.
    hd()	weight: (/ 1 8)
     0()	weight: (/ 1 8)
   nil()	weight: (/ 5 16)
 #app(x1,x2)	weight: max{0, x1}
   map()	weight: (/ 1 32)
  cons()	weight: (/ 3 32)
   app(x1,x2)	weight: max{(/ 3 32) + x2, (/ 1 8) + x1}
    Usable rules: { }
    Removed DPs: #7
Number of SCCs: 2, DPs: 2, edges: 2
	SCC { #9 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  found.
  #app(app(f,0()),n)	-#9->
  #app(app(cons(),0()),nil())	--->*
  #app(app(cons(),0()),nil())
  Looping with: [ n := nil(); f := cons(); ]
