Input TRS:
    1: a__zeros() -> cons(0(),zeros())
    2: a__and(tt(),X) -> mark(X)
    3: a__length(nil()) -> 0()
    4: a__length(cons(N,L)) -> s(a__length(mark(L)))
    5: a__take(0(),IL) -> nil()
    6: a__take(s(M),cons(N,IL)) -> cons(mark(N),take(M,IL))
    7: mark(zeros()) -> a__zeros()
    8: mark(and(X1,X2)) -> a__and(mark(X1),X2)
    9: mark(length(X)) -> a__length(mark(X))
    10: mark(take(X1,X2)) -> a__take(mark(X1),mark(X2))
    11: mark(cons(X1,X2)) -> cons(mark(X1),X2)
    12: mark(0()) -> 0()
    13: mark(tt()) -> tt()
    14: mark(nil()) -> nil()
    15: mark(s(X)) -> s(mark(X))
    16: a__zeros() -> zeros()
    17: a__and(X1,X2) -> and(X1,X2)
    18: a__length(X) -> length(X)
    19: a__take(X1,X2) -> take(X1,X2)
Number of strict rules: 19
Direct Order(PosReal,>,Poly) ... removes: 3 5 2
     s(x1)	weight: x1
  take(x1,x2)	weight: (/ 1 4) + x1 + x2
   and(x1,x2)	weight: (/ 1 4) + x1 + x2
 zeros()	weight: 0
     0()	weight: 0
   nil()	weight: 0
  mark(x1)	weight: x1
  cons(x1,x2)	weight: x1 + x2
a__take(x1,x2)	weight: (/ 1 4) + x1 + x2
    tt()	weight: 0
a__and(x1,x2)	weight: (/ 1 4) + x1 + x2
length(x1)	weight: (/ 1 4) + x1
a__zeros()	weight: 0
a__length(x1)	weight: (/ 1 4) + x1
Number of strict rules: 16
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #a__take(s(M),cons(N,IL)) -> #mark(N)
   #2: #mark(length(X)) -> #a__length(mark(X))
   #3: #mark(length(X)) -> #mark(X)
   #4: #mark(cons(X1,X2)) -> #mark(X1)
   #5: #mark(zeros()) -> #a__zeros()
   #6: #mark(take(X1,X2)) -> #a__take(mark(X1),mark(X2))
   #7: #mark(take(X1,X2)) -> #mark(X1)
   #8: #mark(take(X1,X2)) -> #mark(X2)
   #9: #mark(and(X1,X2)) -> #a__and(mark(X1),X2)
   #10: #mark(and(X1,X2)) -> #mark(X1)
   #11: #mark(s(X)) -> #mark(X)
   #12: #a__length(cons(N,L)) -> #a__length(mark(L))
   #13: #a__length(cons(N,L)) -> #mark(L)
Number of SCCs: 1, DPs: 11, edges: 69
	SCC { #1..4 #6..8 #10..13 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: x1
  take(x1,x2)	weight: (/ 1 2) + x1 + x2
   and(x1,x2)	weight: x1 + x2
 zeros()	weight: 0
#a__take(x1,x2)	weight: (/ 1 4) + x2
#mark(x1)	weight: x1
     0()	weight: 0
#a__and(x1,x2)	weight: 0
#a__zeros()	weight: 0
   nil()	weight: 0
  mark(x1)	weight: x1
#a__length(x1)	weight: x1
  cons(x1,x2)	weight: x1 + x2
a__take(x1,x2)	weight: (/ 1 2) + x1 + x2
    tt()	weight: 0
a__and(x1,x2)	weight: x1 + x2
length(x1)	weight: x1
a__zeros()	weight: 0
a__length(x1)	weight: x1
    Usable rules: { 1 4 6..19 }
    Removed DPs: #1 #6..8
Number of SCCs: 1, DPs: 7, edges: 29
	SCC { #2..4 #10..13 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: x1
  take(x1,x2)	weight: (/ 1 2) + x1 + x2
   and(x1,x2)	weight: (/ 1 4) + x1 + x2
 zeros()	weight: 0
#a__take(x1,x2)	weight: (/ 1 4) + x2
#mark(x1)	weight: x1
     0()	weight: 0
#a__and(x1,x2)	weight: 0
#a__zeros()	weight: 0
   nil()	weight: 0
  mark(x1)	weight: x1
#a__length(x1)	weight: x1
  cons(x1,x2)	weight: x1 + x2
a__take(x1,x2)	weight: (/ 1 2) + x1 + x2
    tt()	weight: 0
a__and(x1,x2)	weight: (/ 1 4) + x1 + x2
length(x1)	weight: x1
a__zeros()	weight: 0
a__length(x1)	weight: x1
    Usable rules: { 1 4 6..19 }
    Removed DPs: #10
Number of SCCs: 1, DPs: 6, edges: 20
	SCC { #2..4 #11..13 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: x1
  take(x1,x2)	weight: (/ 1 2) + x1 + x2
   and(x1,x2)	weight: (/ 1 4) + x1 + x2
 zeros()	weight: 0
#a__take(x1,x2)	weight: (/ 1 4) + x2
#mark(x1)	weight: x1
     0()	weight: 0
#a__and(x1,x2)	weight: 0
#a__zeros()	weight: 0
   nil()	weight: 0
  mark(x1)	weight: x1
#a__length(x1)	weight: (/ 1 4) + x1
  cons(x1,x2)	weight: x1 + x2
a__take(x1,x2)	weight: (/ 1 2) + x1 + x2
    tt()	weight: 0
a__and(x1,x2)	weight: (/ 1 4) + x1 + x2
length(x1)	weight: (/ 1 2) + x1
a__zeros()	weight: 0
a__length(x1)	weight: (/ 1 2) + x1
    Usable rules: { 1 4 6..19 }
    Removed DPs: #2 #3 #13
Number of SCCs: 2, DPs: 3, edges: 5
	SCC { #12 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  found.
  #a__length(cons(N,zeros()))	-#12->
  #a__length(mark(zeros()))	--->*
  #a__length(cons(0(),zeros()))
  Looping with: [ N := 0(); ]
