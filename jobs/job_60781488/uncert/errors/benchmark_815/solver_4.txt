Input TRS:
    1: from(X) -> cons(X,from(s(X)))
    2: 2ndspos(0(),Z) -> rnil()
    3: 2ndspos(s(N),cons(X,cons(Y,Z))) -> rcons(posrecip(Y),2ndsneg(N,Z))
    4: 2ndsneg(0(),Z) -> rnil()
    5: 2ndsneg(s(N),cons(X,cons(Y,Z))) -> rcons(negrecip(Y),2ndspos(N,Z))
    6: pi(X) -> 2ndspos(X,from(0()))
    7: plus(0(),Y) -> Y
    8: plus(s(X),Y) -> s(plus(X,Y))
    9: times(0(),Y) -> 0()
    10: times(s(X),Y) -> plus(Y,times(X,Y))
    11: square(X) -> times(X,X)
Number of strict rules: 11
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #pi(X) -> #2ndspos(X,from(0()))
   #2: #pi(X) -> #from(0())
   #3: #square(X) -> #times(X,X)
   #4: #times(s(X),Y) -> #plus(Y,times(X,Y))
   #5: #times(s(X),Y) -> #times(X,Y)
   #6: #2ndsneg(s(N),cons(X,cons(Y,Z))) -> #2ndspos(N,Z)
   #7: #2ndspos(s(N),cons(X,cons(Y,Z))) -> #2ndsneg(N,Z)
   #8: #from(X) -> #from(s(X))
   #9: #plus(s(X),Y) -> #plus(X,Y)
Number of SCCs: 4, DPs: 5, edges: 5
	SCC { #8 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  found.
  #from(X)	-#8->
  #from(s(X))	--->*
  #from(s(X))
  Looping with: [ X := s(X); ]
