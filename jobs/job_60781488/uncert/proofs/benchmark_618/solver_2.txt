YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/r8JMq.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 0 ms]
(2) QDP
(3) DependencyGraphProof [EQUIVALENT, 0 ms]
(4) QDP
(5) QDPOrderProof [EQUIVALENT, 31 ms]
(6) QDP
(7) QDPOrderProof [EQUIVALENT, 55 ms]
(8) QDP
(9) DependencyGraphProof [EQUIVALENT, 0 ms]
(10) TRUE


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   b(b(y, z), c(a, a, a)) -> f(c(z, y, z))
   f(b(b(a, z), c(a, x, y))) -> z
   c(y, x, f(z)) -> b(f(b(z, x)), z)

Q is empty.

----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(b(y, z), c(a, a, a)) -> F(c(z, y, z))
   B(b(y, z), c(a, a, a)) -> C(z, y, z)
   C(y, x, f(z)) -> B(f(b(z, x)), z)
   C(y, x, f(z)) -> F(b(z, x))
   C(y, x, f(z)) -> B(z, x)

The TRS R consists of the following rules:

   b(b(y, z), c(a, a, a)) -> f(c(z, y, z))
   f(b(b(a, z), c(a, x, y))) -> z
   c(y, x, f(z)) -> b(f(b(z, x)), z)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 2 less nodes.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(b(y, z), c(a, a, a)) -> C(z, y, z)
   C(y, x, f(z)) -> B(f(b(z, x)), z)
   C(y, x, f(z)) -> B(z, x)

The TRS R consists of the following rules:

   b(b(y, z), c(a, a, a)) -> f(c(z, y, z))
   f(b(b(a, z), c(a, x, y))) -> z
   c(y, x, f(z)) -> b(f(b(z, x)), z)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   C(y, x, f(z)) -> B(z, x)
The remaining pairs can at least be oriented weakly.
Used ordering:  Matrix interpretation [MATRO] with arctic natural numbers [ARCTIC]:

   <<<
 POL(B(x_1, x_2)) =  	[[-I]] 	 +  	[[0A]] 	* 	x_1 	 +  	[[-I]] 	* 	x_2
>>>

   <<<
 POL(b(x_1, x_2)) =  	[[0A]] 	 +  	[[1A]] 	* 	x_1 	 +  	[[1A]] 	* 	x_2
>>>

   <<<
 POL(c(x_1, x_2, x_3)) =  	[[1A]] 	 +  	[[-I]] 	* 	x_1 	 +  	[[2A]] 	* 	x_2 	 +  	[[2A]] 	* 	x_3
>>>

   <<<
 POL(a) =  	[[0A]]
>>>

   <<<
 POL(C(x_1, x_2, x_3)) =  	[[0A]] 	 +  	[[-I]] 	* 	x_1 	 +  	[[1A]] 	* 	x_2 	 +  	[[1A]] 	* 	x_3
>>>

   <<<
 POL(f(x_1)) =  	[[-I]] 	 +  	[[0A]] 	* 	x_1
>>>


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   b(b(y, z), c(a, a, a)) -> f(c(z, y, z))
   f(b(b(a, z), c(a, x, y))) -> z
   c(y, x, f(z)) -> b(f(b(z, x)), z)


----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(b(y, z), c(a, a, a)) -> C(z, y, z)
   C(y, x, f(z)) -> B(f(b(z, x)), z)

The TRS R consists of the following rules:

   b(b(y, z), c(a, a, a)) -> f(c(z, y, z))
   f(b(b(a, z), c(a, x, y))) -> z
   c(y, x, f(z)) -> b(f(b(z, x)), z)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   B(b(y, z), c(a, a, a)) -> C(z, y, z)
The remaining pairs can at least be oriented weakly.
Used ordering:  Matrix interpretation [MATRO] to (N^2, +, *, >=, >) :

   <<<
 POL(B(x_1, x_2)) =  	[[0]] 	 +  	[[0, 2]] 	* 	x_1 	 +  	[[0, 0]] 	* 	x_2
>>>

   <<<
 POL(b(x_1, x_2)) =  	[[0], [2]] 	 +  	[[0, 2], [0, 1]] 	* 	x_1 	 +  	[[0, 0], [2, 2]] 	* 	x_2
>>>

   <<<
 POL(c(x_1, x_2, x_3)) =  	[[0], [2]] 	 +  	[[0, 0], [0, 0]] 	* 	x_1 	 +  	[[0, 0], [0, 0]] 	* 	x_2 	 +  	[[2, 0], [2, 2]] 	* 	x_3
>>>

   <<<
 POL(a) =  	[[0], [1]]
>>>

   <<<
 POL(C(x_1, x_2, x_3)) =  	[[0]] 	 +  	[[2, 3]] 	* 	x_1 	 +  	[[0, 0]] 	* 	x_2 	 +  	[[2, 0]] 	* 	x_3
>>>

   <<<
 POL(f(x_1)) =  	[[0], [0]] 	 +  	[[0, 2], [1, 0]] 	* 	x_1
>>>


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   b(b(y, z), c(a, a, a)) -> f(c(z, y, z))
   f(b(b(a, z), c(a, x, y))) -> z
   c(y, x, f(z)) -> b(f(b(z, x)), z)


----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C(y, x, f(z)) -> B(f(b(z, x)), z)

The TRS R consists of the following rules:

   b(b(y, z), c(a, a, a)) -> f(c(z, y, z))
   f(b(b(a, z), c(a, x, y))) -> z
   c(y, x, f(z)) -> b(f(b(z, x)), z)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 1 less node.
----------------------------------------

(10)
TRUE
