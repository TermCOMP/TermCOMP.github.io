YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/6Vo14.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) Strip Symbols Proof [SOUND, 0 ms]
(2) QTRS
(3) QTRS Reverse [EQUIVALENT, 0 ms]
(4) QTRS
(5) QTRSRoofMatchBoundsTAProof [EQUIVALENT, 0 ms]
(6) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(f(a)) -> f(g)

Q is empty.

----------------------------------------

(1) Strip Symbols Proof (SOUND)
We were given the following TRS:

   f(f(a)) -> f(g)

By stripping symbols from the only rule of the system, we obtained the following TRS [ENDRULLIS]: 

   f(a) -> g

----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(a) -> g

Q is empty.

----------------------------------------

(3) QTRS Reverse (EQUIVALENT)
We applied the QTRS Reverse Processor [REVERSE].
----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a'(f(x)) -> g'(x)

Q is empty.

----------------------------------------

(5) QTRSRoofMatchBoundsTAProof (EQUIVALENT)
The TRS R could be shown to be Match-Bounded [TAB_LEFTLINEAR,TAB_NONLEFTLINEAR] by  1. Therefore it terminates.

The compatible tree automaton used to show the Match-Boundedness is represented by: 
final states : [0, 1, 2]
transitions: 
a'0(0) -> 0
a'0(1) -> 0
a'0(2) -> 0
f0(0) -> 1
f0(1) -> 1
f0(2) -> 1
g'0(0) -> 2
g'0(1) -> 2
g'0(2) -> 2
g'1(0) -> 0
g'1(1) -> 0
g'1(2) -> 0

----------------------------------------

(6)
YES
