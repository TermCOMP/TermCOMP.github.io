YES

Problem 1: 

(VAR vu95NonEmpty f x y)
(RULES
add -> app(curry,plus)
app(app(app(curry,f),x),y) -> app(app(f,x),y)
app(app(plus,app(s,x)),y) -> app(s,app(app(plus,x),y))
app(app(plus,num0),y) -> y
)


Problem 1: 

Innermost Equivalent Processor:
-> Rules:
 add -> app(curry,plus)
 app(app(app(curry,f),x),y) -> app(app(f,x),y)
 app(app(plus,app(s,x)),y) -> app(s,app(app(plus,x),y))
 app(app(plus,num0),y) -> y
-> The term rewriting system is non-overlaping or locally confluent overlay system. Therefore, innermost termination implies termination.
 

Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 APP(app(app(curry,f),x),y) -> APP(app(f,x),y)
 APP(app(app(curry,f),x),y) -> APP(f,x)
 APP(app(plus,app(s,x)),y) -> APP(app(plus,x),y)
 APP(app(plus,app(s,x)),y) -> APP(s,app(app(plus,x),y))
-> Rules:
 add -> app(curry,plus)
 app(app(app(curry,f),x),y) -> app(app(f,x),y)
 app(app(plus,app(s,x)),y) -> app(s,app(app(plus,x),y))
 app(app(plus,num0),y) -> y

Problem 1: 

SCC Processor:
-> Pairs:
 APP(app(app(curry,f),x),y) -> APP(app(f,x),y)
 APP(app(app(curry,f),x),y) -> APP(f,x)
 APP(app(plus,app(s,x)),y) -> APP(app(plus,x),y)
 APP(app(plus,app(s,x)),y) -> APP(s,app(app(plus,x),y))
-> Rules:
 add -> app(curry,plus)
 app(app(app(curry,f),x),y) -> app(app(f,x),y)
 app(app(plus,app(s,x)),y) -> app(s,app(app(plus,x),y))
 app(app(plus,num0),y) -> y
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 APP(app(plus,app(s,x)),y) -> APP(app(plus,x),y)
->->-> Rules:
 add -> app(curry,plus)
 app(app(app(curry,f),x),y) -> app(app(f,x),y)
 app(app(plus,app(s,x)),y) -> app(s,app(app(plus,x),y))
 app(app(plus,num0),y) -> y
->->Cycle:
->->-> Pairs:
 APP(app(app(curry,f),x),y) -> APP(app(f,x),y)
 APP(app(app(curry,f),x),y) -> APP(f,x)
->->-> Rules:
 add -> app(curry,plus)
 app(app(app(curry,f),x),y) -> app(app(f,x),y)
 app(app(plus,app(s,x)),y) -> app(s,app(app(plus,x),y))
 app(app(plus,num0),y) -> y


The problem is decomposed in 2 subproblems.

Problem 1.1: 

Reduction Pairs Processor:
-> Pairs:
 APP(app(plus,app(s,x)),y) -> APP(app(plus,x),y)
-> Rules:
 add -> app(curry,plus)
 app(app(app(curry,f),x),y) -> app(app(f,x),y)
 app(app(plus,app(s,x)),y) -> app(s,app(app(plus,x),y))
 app(app(plus,num0),y) -> y
-> Usable rules:
 app(app(app(curry,f),x),y) -> app(app(f,x),y)
 app(app(plus,app(s,x)),y) -> app(s,app(app(plus,x),y))
 app(app(plus,num0),y) -> y
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[add] = 0
[app](X1,X2) = 2.X1 + X2 + 2
[num0] = 0
[curry] = 0
[fSNonEmpty] = 0
[plus] = 1
[s] = 2
[APP](X1,X2) = 2.X1

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 add -> app(curry,plus)
 app(app(app(curry,f),x),y) -> app(app(f,x),y)
 app(app(plus,app(s,x)),y) -> app(s,app(app(plus,x),y))
 app(app(plus,num0),y) -> y
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Reduction Pairs Processor:
-> Pairs:
 APP(app(app(curry,f),x),y) -> APP(app(f,x),y)
 APP(app(app(curry,f),x),y) -> APP(f,x)
-> Rules:
 add -> app(curry,plus)
 app(app(app(curry,f),x),y) -> app(app(f,x),y)
 app(app(plus,app(s,x)),y) -> app(s,app(app(plus,x),y))
 app(app(plus,num0),y) -> y
-> Usable rules:
 app(app(app(curry,f),x),y) -> app(app(f,x),y)
 app(app(plus,app(s,x)),y) -> app(s,app(app(plus,x),y))
 app(app(plus,num0),y) -> y
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[add] = 0
[app](X1,X2) = 2.X1 + X2 + 1
[num0] = 0
[curry] = 2
[fSNonEmpty] = 0
[plus] = 0
[s] = 1
[APP](X1,X2) = 2.X1 + 2.X2

Problem 1.2: 

SCC Processor:
-> Pairs:
 APP(app(app(curry,f),x),y) -> APP(f,x)
-> Rules:
 add -> app(curry,plus)
 app(app(app(curry,f),x),y) -> app(app(f,x),y)
 app(app(plus,app(s,x)),y) -> app(s,app(app(plus,x),y))
 app(app(plus,num0),y) -> y
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 APP(app(app(curry,f),x),y) -> APP(f,x)
->->-> Rules:
 add -> app(curry,plus)
 app(app(app(curry,f),x),y) -> app(app(f,x),y)
 app(app(plus,app(s,x)),y) -> app(s,app(app(plus,x),y))
 app(app(plus,num0),y) -> y

Problem 1.2: 

Subterm Processor:
-> Pairs:
 APP(app(app(curry,f),x),y) -> APP(f,x)
-> Rules:
 add -> app(curry,plus)
 app(app(app(curry,f),x),y) -> app(app(f,x),y)
 app(app(plus,app(s,x)),y) -> app(s,app(app(plus,x),y))
 app(app(plus,num0),y) -> y
->Projection:
 pi(APP) = 1

Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 add -> app(curry,plus)
 app(app(app(curry,f),x),y) -> app(app(f,x),y)
 app(app(plus,app(s,x)),y) -> app(s,app(app(plus,x),y))
 app(app(plus,num0),y) -> y
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
