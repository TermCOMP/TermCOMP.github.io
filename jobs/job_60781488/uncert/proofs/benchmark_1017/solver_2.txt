YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/xIbF1.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 0 ms]
(2) QDP
(3) QDPOrderProof [EQUIVALENT, 15 ms]
(4) QDP
(5) QDPOrderProof [EQUIVALENT, 0 ms]
(6) QDP
(7) DependencyGraphProof [EQUIVALENT, 0 ms]
(8) QDP
(9) UsableRulesProof [EQUIVALENT, 0 ms]
(10) QDP
(11) QDPSizeChangeProof [EQUIVALENT, 0 ms]
(12) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a__f(g(X), Y) -> a__f(mark(X), f(g(X), Y))
   mark(f(X1, X2)) -> a__f(mark(X1), X2)
   mark(g(X)) -> g(mark(X))
   a__f(X1, X2) -> f(X1, X2)

Q is empty.

----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A__F(g(X), Y) -> A__F(mark(X), f(g(X), Y))
   A__F(g(X), Y) -> MARK(X)
   MARK(f(X1, X2)) -> A__F(mark(X1), X2)
   MARK(f(X1, X2)) -> MARK(X1)
   MARK(g(X)) -> MARK(X)

The TRS R consists of the following rules:

   a__f(g(X), Y) -> a__f(mark(X), f(g(X), Y))
   mark(f(X1, X2)) -> a__f(mark(X1), X2)
   mark(g(X)) -> g(mark(X))
   a__f(X1, X2) -> f(X1, X2)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   MARK(g(X)) -> MARK(X)
The remaining pairs can at least be oriented weakly.
Used ordering:  Combined order from the following AFS and order.
A__F(x1, x2)  =  x1

g(x1)  =  g(x1)

mark(x1)  =  mark(x1)

f(x1, x2)  =  x1

MARK(x1)  =  MARK(x1)

a__f(x1, x2)  =  x1


Recursive path order with status [RPO].
Quasi-Precedence: [g_1, mark_1, MARK_1]

Status: g_1: multiset status
mark_1: multiset status
MARK_1: multiset status


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   mark(f(X1, X2)) -> a__f(mark(X1), X2)
   mark(g(X)) -> g(mark(X))
   a__f(X1, X2) -> f(X1, X2)
   a__f(g(X), Y) -> a__f(mark(X), f(g(X), Y))


----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A__F(g(X), Y) -> A__F(mark(X), f(g(X), Y))
   A__F(g(X), Y) -> MARK(X)
   MARK(f(X1, X2)) -> A__F(mark(X1), X2)
   MARK(f(X1, X2)) -> MARK(X1)

The TRS R consists of the following rules:

   a__f(g(X), Y) -> a__f(mark(X), f(g(X), Y))
   mark(f(X1, X2)) -> a__f(mark(X1), X2)
   mark(g(X)) -> g(mark(X))
   a__f(X1, X2) -> f(X1, X2)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   A__F(g(X), Y) -> A__F(mark(X), f(g(X), Y))
   A__F(g(X), Y) -> MARK(X)
The remaining pairs can at least be oriented weakly.
Used ordering:  Combined order from the following AFS and order.
A__F(x1, x2)  =  x1

g(x1)  =  g(x1)

mark(x1)  =  x1

MARK(x1)  =  x1

f(x1, x2)  =  x1

a__f(x1, x2)  =  x1


Knuth-Bendix order [KBO] with precedence:trivial

and weight map:

   dummyConstant=1
   g_1=1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   mark(f(X1, X2)) -> a__f(mark(X1), X2)
   mark(g(X)) -> g(mark(X))
   a__f(g(X), Y) -> a__f(mark(X), f(g(X), Y))
   a__f(X1, X2) -> f(X1, X2)


----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(f(X1, X2)) -> A__F(mark(X1), X2)
   MARK(f(X1, X2)) -> MARK(X1)

The TRS R consists of the following rules:

   a__f(g(X), Y) -> a__f(mark(X), f(g(X), Y))
   mark(f(X1, X2)) -> a__f(mark(X1), X2)
   mark(g(X)) -> g(mark(X))
   a__f(X1, X2) -> f(X1, X2)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(f(X1, X2)) -> MARK(X1)

The TRS R consists of the following rules:

   a__f(g(X), Y) -> a__f(mark(X), f(g(X), Y))
   mark(f(X1, X2)) -> a__f(mark(X1), X2)
   mark(g(X)) -> g(mark(X))
   a__f(X1, X2) -> f(X1, X2)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(f(X1, X2)) -> MARK(X1)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*MARK(f(X1, X2)) -> MARK(X1)
The graph contains the following edges 1 > 1


----------------------------------------

(12)
YES
