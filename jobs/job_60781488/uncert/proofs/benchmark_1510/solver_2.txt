YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/60M16.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) Overlay + Local Confluence [EQUIVALENT, 0 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 0 ms]
(4) QDP
(5) QDPOrderProof [EQUIVALENT, 7 ms]
(6) QDP
(7) TransformationProof [EQUIVALENT, 0 ms]
(8) QDP
(9) TransformationProof [EQUIVALENT, 0 ms]
(10) QDP
(11) QDPOrderProof [EQUIVALENT, 0 ms]
(12) QDP
(13) DependencyGraphProof [EQUIVALENT, 0 ms]
(14) QDP
(15) UsableRulesProof [EQUIVALENT, 0 ms]
(16) QDP
(17) QReductionProof [EQUIVALENT, 0 ms]
(18) QDP
(19) QDPSizeChangeProof [EQUIVALENT, 0 ms]
(20) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(f(0, x), 1) -> f(g(f(x, x)), x)
   f(g(x), y) -> g(f(x, y))

Q is empty.

----------------------------------------

(1) Overlay + Local Confluence (EQUIVALENT)
The TRS is overlay and locally confluent. By [NOC] we can switch to innermost.
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(f(0, x), 1) -> f(g(f(x, x)), x)
   f(g(x), y) -> g(f(x, y))

The set Q consists of the following terms:

   f(f(0, x0), 1)
   f(g(x0), x1)


----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(f(0, x), 1) -> F(g(f(x, x)), x)
   F(f(0, x), 1) -> F(x, x)
   F(g(x), y) -> F(x, y)

The TRS R consists of the following rules:

   f(f(0, x), 1) -> f(g(f(x, x)), x)
   f(g(x), y) -> g(f(x, y))

The set Q consists of the following terms:

   f(f(0, x0), 1)
   f(g(x0), x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   F(f(0, x), 1) -> F(x, x)
The remaining pairs can at least be oriented weakly.
Used ordering:  Matrix interpretation [MATRO] with arctic natural numbers [ARCTIC]:

   <<<
 POL(F(x_1, x_2)) =  	[[0A]] 	 +  	[[0A]] 	* 	x_1 	 +  	[[-I]] 	* 	x_2
>>>

   <<<
 POL(f(x_1, x_2)) =  	[[1A]] 	 +  	[[0A]] 	* 	x_1 	 +  	[[1A]] 	* 	x_2
>>>

   <<<
 POL(0) =  	[[0A]]
>>>

   <<<
 POL(1) =  	[[0A]]
>>>

   <<<
 POL(g(x_1)) =  	[[-I]] 	 +  	[[0A]] 	* 	x_1
>>>


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   f(g(x), y) -> g(f(x, y))
   f(f(0, x), 1) -> f(g(f(x, x)), x)


----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(f(0, x), 1) -> F(g(f(x, x)), x)
   F(g(x), y) -> F(x, y)

The TRS R consists of the following rules:

   f(f(0, x), 1) -> f(g(f(x, x)), x)
   f(g(x), y) -> g(f(x, y))

The set Q consists of the following terms:

   f(f(0, x0), 1)
   f(g(x0), x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) TransformationProof (EQUIVALENT)
By forward instantiating [JAR06] the rule F(g(x), y) -> F(x, y) we obtained the following new rules [LPAR04]:

   (F(g(f(0, y_0)), 1) -> F(f(0, y_0), 1),F(g(f(0, y_0)), 1) -> F(f(0, y_0), 1))
   (F(g(g(y_0)), x1) -> F(g(y_0), x1),F(g(g(y_0)), x1) -> F(g(y_0), x1))


----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(f(0, x), 1) -> F(g(f(x, x)), x)
   F(g(f(0, y_0)), 1) -> F(f(0, y_0), 1)
   F(g(g(y_0)), x1) -> F(g(y_0), x1)

The TRS R consists of the following rules:

   f(f(0, x), 1) -> f(g(f(x, x)), x)
   f(g(x), y) -> g(f(x, y))

The set Q consists of the following terms:

   f(f(0, x0), 1)
   f(g(x0), x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(f(0, x), 1) -> F(g(f(x, x)), x) at position [] we obtained the following new rules [LPAR04]:

   (F(f(0, g(x0)), 1) -> F(g(g(f(x0, g(x0)))), g(x0)),F(f(0, g(x0)), 1) -> F(g(g(f(x0, g(x0)))), g(x0)))


----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(g(f(0, y_0)), 1) -> F(f(0, y_0), 1)
   F(g(g(y_0)), x1) -> F(g(y_0), x1)
   F(f(0, g(x0)), 1) -> F(g(g(f(x0, g(x0)))), g(x0))

The TRS R consists of the following rules:

   f(f(0, x), 1) -> f(g(f(x, x)), x)
   f(g(x), y) -> g(f(x, y))

The set Q consists of the following terms:

   f(f(0, x0), 1)
   f(g(x0), x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   F(f(0, g(x0)), 1) -> F(g(g(f(x0, g(x0)))), g(x0))
The remaining pairs can at least be oriented weakly.
Used ordering:  Combined order from the following AFS and order.
F(x1, x2)  =  x2

1  =  1

g(x1)  =  g


Knuth-Bendix order [KBO] with precedence:1 > g

and weight map:

   1=1
   g=1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:
none


----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(g(f(0, y_0)), 1) -> F(f(0, y_0), 1)
   F(g(g(y_0)), x1) -> F(g(y_0), x1)

The TRS R consists of the following rules:

   f(f(0, x), 1) -> f(g(f(x, x)), x)
   f(g(x), y) -> g(f(x, y))

The set Q consists of the following terms:

   f(f(0, x0), 1)
   f(g(x0), x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(g(g(y_0)), x1) -> F(g(y_0), x1)

The TRS R consists of the following rules:

   f(f(0, x), 1) -> f(g(f(x, x)), x)
   f(g(x), y) -> g(f(x, y))

The set Q consists of the following terms:

   f(f(0, x0), 1)
   f(g(x0), x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(g(g(y_0)), x1) -> F(g(y_0), x1)

R is empty.
The set Q consists of the following terms:

   f(f(0, x0), 1)
   f(g(x0), x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   f(f(0, x0), 1)
   f(g(x0), x1)


----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(g(g(y_0)), x1) -> F(g(y_0), x1)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*F(g(g(y_0)), x1) -> F(g(y_0), x1)
The graph contains the following edges 1 > 1, 2 >= 2


----------------------------------------

(20)
YES
