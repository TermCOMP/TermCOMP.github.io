YES

Problem 1: 

(VAR vu95NonEmpty a s t u)
(RULES
circ(circ(s,t),u) -> circ(s,circ(t,u))
circ(cons(lift,s),circ(cons(lift,t),u)) -> circ(cons(lift,circ(s,t)),u)
circ(cons(lift,s),cons(lift,t)) -> cons(lift,circ(s,t))
circ(cons(lift,s),cons(a,t)) -> cons(a,circ(s,t))
circ(cons(a,s),t) -> cons(msubst(a,t),circ(s,t))
circ(id,s) -> s
circ(s,id) -> s
msubst(msubst(a,s),t) -> msubst(a,circ(s,t))
msubst(a,id) -> a
subst(a,id) -> a
)


Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 CIRC(circ(s,t),u) -> CIRC(s,circ(t,u))
 CIRC(circ(s,t),u) -> CIRC(t,u)
 CIRC(cons(lift,s),circ(cons(lift,t),u)) -> CIRC(cons(lift,circ(s,t)),u)
 CIRC(cons(lift,s),circ(cons(lift,t),u)) -> CIRC(s,t)
 CIRC(cons(lift,s),cons(lift,t)) -> CIRC(s,t)
 CIRC(cons(lift,s),cons(a,t)) -> CIRC(s,t)
 CIRC(cons(a,s),t) -> CIRC(s,t)
 CIRC(cons(a,s),t) -> MSUBST(a,t)
 MSUBST(msubst(a,s),t) -> CIRC(s,t)
 MSUBST(msubst(a,s),t) -> MSUBST(a,circ(s,t))
-> Rules:
 circ(circ(s,t),u) -> circ(s,circ(t,u))
 circ(cons(lift,s),circ(cons(lift,t),u)) -> circ(cons(lift,circ(s,t)),u)
 circ(cons(lift,s),cons(lift,t)) -> cons(lift,circ(s,t))
 circ(cons(lift,s),cons(a,t)) -> cons(a,circ(s,t))
 circ(cons(a,s),t) -> cons(msubst(a,t),circ(s,t))
 circ(id,s) -> s
 circ(s,id) -> s
 msubst(msubst(a,s),t) -> msubst(a,circ(s,t))
 msubst(a,id) -> a
 subst(a,id) -> a

Problem 1: 

SCC Processor:
-> Pairs:
 CIRC(circ(s,t),u) -> CIRC(s,circ(t,u))
 CIRC(circ(s,t),u) -> CIRC(t,u)
 CIRC(cons(lift,s),circ(cons(lift,t),u)) -> CIRC(cons(lift,circ(s,t)),u)
 CIRC(cons(lift,s),circ(cons(lift,t),u)) -> CIRC(s,t)
 CIRC(cons(lift,s),cons(lift,t)) -> CIRC(s,t)
 CIRC(cons(lift,s),cons(a,t)) -> CIRC(s,t)
 CIRC(cons(a,s),t) -> CIRC(s,t)
 CIRC(cons(a,s),t) -> MSUBST(a,t)
 MSUBST(msubst(a,s),t) -> CIRC(s,t)
 MSUBST(msubst(a,s),t) -> MSUBST(a,circ(s,t))
-> Rules:
 circ(circ(s,t),u) -> circ(s,circ(t,u))
 circ(cons(lift,s),circ(cons(lift,t),u)) -> circ(cons(lift,circ(s,t)),u)
 circ(cons(lift,s),cons(lift,t)) -> cons(lift,circ(s,t))
 circ(cons(lift,s),cons(a,t)) -> cons(a,circ(s,t))
 circ(cons(a,s),t) -> cons(msubst(a,t),circ(s,t))
 circ(id,s) -> s
 circ(s,id) -> s
 msubst(msubst(a,s),t) -> msubst(a,circ(s,t))
 msubst(a,id) -> a
 subst(a,id) -> a
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 CIRC(circ(s,t),u) -> CIRC(s,circ(t,u))
 CIRC(circ(s,t),u) -> CIRC(t,u)
 CIRC(cons(lift,s),circ(cons(lift,t),u)) -> CIRC(cons(lift,circ(s,t)),u)
 CIRC(cons(lift,s),circ(cons(lift,t),u)) -> CIRC(s,t)
 CIRC(cons(lift,s),cons(lift,t)) -> CIRC(s,t)
 CIRC(cons(lift,s),cons(a,t)) -> CIRC(s,t)
 CIRC(cons(a,s),t) -> CIRC(s,t)
 CIRC(cons(a,s),t) -> MSUBST(a,t)
 MSUBST(msubst(a,s),t) -> CIRC(s,t)
 MSUBST(msubst(a,s),t) -> MSUBST(a,circ(s,t))
->->-> Rules:
 circ(circ(s,t),u) -> circ(s,circ(t,u))
 circ(cons(lift,s),circ(cons(lift,t),u)) -> circ(cons(lift,circ(s,t)),u)
 circ(cons(lift,s),cons(lift,t)) -> cons(lift,circ(s,t))
 circ(cons(lift,s),cons(a,t)) -> cons(a,circ(s,t))
 circ(cons(a,s),t) -> cons(msubst(a,t),circ(s,t))
 circ(id,s) -> s
 circ(s,id) -> s
 msubst(msubst(a,s),t) -> msubst(a,circ(s,t))
 msubst(a,id) -> a
 subst(a,id) -> a

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 CIRC(circ(s,t),u) -> CIRC(s,circ(t,u))
 CIRC(circ(s,t),u) -> CIRC(t,u)
 CIRC(cons(lift,s),circ(cons(lift,t),u)) -> CIRC(cons(lift,circ(s,t)),u)
 CIRC(cons(lift,s),circ(cons(lift,t),u)) -> CIRC(s,t)
 CIRC(cons(lift,s),cons(lift,t)) -> CIRC(s,t)
 CIRC(cons(lift,s),cons(a,t)) -> CIRC(s,t)
 CIRC(cons(a,s),t) -> CIRC(s,t)
 CIRC(cons(a,s),t) -> MSUBST(a,t)
 MSUBST(msubst(a,s),t) -> CIRC(s,t)
 MSUBST(msubst(a,s),t) -> MSUBST(a,circ(s,t))
-> Rules:
 circ(circ(s,t),u) -> circ(s,circ(t,u))
 circ(cons(lift,s),circ(cons(lift,t),u)) -> circ(cons(lift,circ(s,t)),u)
 circ(cons(lift,s),cons(lift,t)) -> cons(lift,circ(s,t))
 circ(cons(lift,s),cons(a,t)) -> cons(a,circ(s,t))
 circ(cons(a,s),t) -> cons(msubst(a,t),circ(s,t))
 circ(id,s) -> s
 circ(s,id) -> s
 msubst(msubst(a,s),t) -> msubst(a,circ(s,t))
 msubst(a,id) -> a
 subst(a,id) -> a
-> Usable rules:
 circ(circ(s,t),u) -> circ(s,circ(t,u))
 circ(cons(lift,s),circ(cons(lift,t),u)) -> circ(cons(lift,circ(s,t)),u)
 circ(cons(lift,s),cons(lift,t)) -> cons(lift,circ(s,t))
 circ(cons(lift,s),cons(a,t)) -> cons(a,circ(s,t))
 circ(cons(a,s),t) -> cons(msubst(a,t),circ(s,t))
 circ(id,s) -> s
 circ(s,id) -> s
 msubst(msubst(a,s),t) -> msubst(a,circ(s,t))
 msubst(a,id) -> a
->Interpretation type:
 Simple mixed
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[circ](X1,X2) = X1.X2 + 2.X1 + 2.X2 + 2
[msubst](X1,X2) = X1.X2 + 2.X1 + 2.X2 + 2
[subst](X1,X2) = 0
[cons](X1,X2) = X1 + X2 + 2
[fSNonEmpty] = 0
[id] = 1
[lift] = 0
[CIRC](X1,X2) = X1.X2 + 2.X1 + 1
[MSUBST](X1,X2) = X1.X2 + 2.X1 + 2.X2

Problem 1: 

SCC Processor:
-> Pairs:
 CIRC(circ(s,t),u) -> CIRC(t,u)
 CIRC(cons(lift,s),circ(cons(lift,t),u)) -> CIRC(cons(lift,circ(s,t)),u)
 CIRC(cons(lift,s),circ(cons(lift,t),u)) -> CIRC(s,t)
 CIRC(cons(lift,s),cons(lift,t)) -> CIRC(s,t)
 CIRC(cons(lift,s),cons(a,t)) -> CIRC(s,t)
 CIRC(cons(a,s),t) -> CIRC(s,t)
 CIRC(cons(a,s),t) -> MSUBST(a,t)
 MSUBST(msubst(a,s),t) -> CIRC(s,t)
 MSUBST(msubst(a,s),t) -> MSUBST(a,circ(s,t))
-> Rules:
 circ(circ(s,t),u) -> circ(s,circ(t,u))
 circ(cons(lift,s),circ(cons(lift,t),u)) -> circ(cons(lift,circ(s,t)),u)
 circ(cons(lift,s),cons(lift,t)) -> cons(lift,circ(s,t))
 circ(cons(lift,s),cons(a,t)) -> cons(a,circ(s,t))
 circ(cons(a,s),t) -> cons(msubst(a,t),circ(s,t))
 circ(id,s) -> s
 circ(s,id) -> s
 msubst(msubst(a,s),t) -> msubst(a,circ(s,t))
 msubst(a,id) -> a
 subst(a,id) -> a
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 CIRC(circ(s,t),u) -> CIRC(t,u)
 CIRC(cons(lift,s),circ(cons(lift,t),u)) -> CIRC(cons(lift,circ(s,t)),u)
 CIRC(cons(lift,s),circ(cons(lift,t),u)) -> CIRC(s,t)
 CIRC(cons(lift,s),cons(lift,t)) -> CIRC(s,t)
 CIRC(cons(lift,s),cons(a,t)) -> CIRC(s,t)
 CIRC(cons(a,s),t) -> CIRC(s,t)
 CIRC(cons(a,s),t) -> MSUBST(a,t)
 MSUBST(msubst(a,s),t) -> CIRC(s,t)
 MSUBST(msubst(a,s),t) -> MSUBST(a,circ(s,t))
->->-> Rules:
 circ(circ(s,t),u) -> circ(s,circ(t,u))
 circ(cons(lift,s),circ(cons(lift,t),u)) -> circ(cons(lift,circ(s,t)),u)
 circ(cons(lift,s),cons(lift,t)) -> cons(lift,circ(s,t))
 circ(cons(lift,s),cons(a,t)) -> cons(a,circ(s,t))
 circ(cons(a,s),t) -> cons(msubst(a,t),circ(s,t))
 circ(id,s) -> s
 circ(s,id) -> s
 msubst(msubst(a,s),t) -> msubst(a,circ(s,t))
 msubst(a,id) -> a
 subst(a,id) -> a

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 CIRC(circ(s,t),u) -> CIRC(t,u)
 CIRC(cons(lift,s),circ(cons(lift,t),u)) -> CIRC(cons(lift,circ(s,t)),u)
 CIRC(cons(lift,s),circ(cons(lift,t),u)) -> CIRC(s,t)
 CIRC(cons(lift,s),cons(lift,t)) -> CIRC(s,t)
 CIRC(cons(lift,s),cons(a,t)) -> CIRC(s,t)
 CIRC(cons(a,s),t) -> CIRC(s,t)
 CIRC(cons(a,s),t) -> MSUBST(a,t)
 MSUBST(msubst(a,s),t) -> CIRC(s,t)
 MSUBST(msubst(a,s),t) -> MSUBST(a,circ(s,t))
-> Rules:
 circ(circ(s,t),u) -> circ(s,circ(t,u))
 circ(cons(lift,s),circ(cons(lift,t),u)) -> circ(cons(lift,circ(s,t)),u)
 circ(cons(lift,s),cons(lift,t)) -> cons(lift,circ(s,t))
 circ(cons(lift,s),cons(a,t)) -> cons(a,circ(s,t))
 circ(cons(a,s),t) -> cons(msubst(a,t),circ(s,t))
 circ(id,s) -> s
 circ(s,id) -> s
 msubst(msubst(a,s),t) -> msubst(a,circ(s,t))
 msubst(a,id) -> a
 subst(a,id) -> a
-> Usable rules:
 circ(circ(s,t),u) -> circ(s,circ(t,u))
 circ(cons(lift,s),circ(cons(lift,t),u)) -> circ(cons(lift,circ(s,t)),u)
 circ(cons(lift,s),cons(lift,t)) -> cons(lift,circ(s,t))
 circ(cons(lift,s),cons(a,t)) -> cons(a,circ(s,t))
 circ(cons(a,s),t) -> cons(msubst(a,t),circ(s,t))
 circ(id,s) -> s
 circ(s,id) -> s
 msubst(msubst(a,s),t) -> msubst(a,circ(s,t))
 msubst(a,id) -> a
->Interpretation type:
 Simple mixed
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[circ](X1,X2) = 2.X1.X2 + 2.X1 + 2.X2 + 1
[msubst](X1,X2) = 2.X1.X2 + 2.X1 + 2.X2 + 1
[subst](X1,X2) = 0
[cons](X1,X2) = 2.X1 + X2 + 2
[fSNonEmpty] = 0
[id] = 2
[lift] = 0
[CIRC](X1,X2) = 2.X1.X2 + 2.X1 + 2.X2 + 2
[MSUBST](X1,X2) = X1.X2 + 2.X1 + X2 + 2

Problem 1: 

SCC Processor:
-> Pairs:
 CIRC(cons(lift,s),circ(cons(lift,t),u)) -> CIRC(cons(lift,circ(s,t)),u)
 CIRC(cons(lift,s),circ(cons(lift,t),u)) -> CIRC(s,t)
 CIRC(cons(lift,s),cons(lift,t)) -> CIRC(s,t)
 CIRC(cons(lift,s),cons(a,t)) -> CIRC(s,t)
 CIRC(cons(a,s),t) -> CIRC(s,t)
 CIRC(cons(a,s),t) -> MSUBST(a,t)
 MSUBST(msubst(a,s),t) -> CIRC(s,t)
 MSUBST(msubst(a,s),t) -> MSUBST(a,circ(s,t))
-> Rules:
 circ(circ(s,t),u) -> circ(s,circ(t,u))
 circ(cons(lift,s),circ(cons(lift,t),u)) -> circ(cons(lift,circ(s,t)),u)
 circ(cons(lift,s),cons(lift,t)) -> cons(lift,circ(s,t))
 circ(cons(lift,s),cons(a,t)) -> cons(a,circ(s,t))
 circ(cons(a,s),t) -> cons(msubst(a,t),circ(s,t))
 circ(id,s) -> s
 circ(s,id) -> s
 msubst(msubst(a,s),t) -> msubst(a,circ(s,t))
 msubst(a,id) -> a
 subst(a,id) -> a
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 CIRC(cons(lift,s),circ(cons(lift,t),u)) -> CIRC(cons(lift,circ(s,t)),u)
 CIRC(cons(lift,s),circ(cons(lift,t),u)) -> CIRC(s,t)
 CIRC(cons(lift,s),cons(lift,t)) -> CIRC(s,t)
 CIRC(cons(lift,s),cons(a,t)) -> CIRC(s,t)
 CIRC(cons(a,s),t) -> CIRC(s,t)
 CIRC(cons(a,s),t) -> MSUBST(a,t)
 MSUBST(msubst(a,s),t) -> CIRC(s,t)
 MSUBST(msubst(a,s),t) -> MSUBST(a,circ(s,t))
->->-> Rules:
 circ(circ(s,t),u) -> circ(s,circ(t,u))
 circ(cons(lift,s),circ(cons(lift,t),u)) -> circ(cons(lift,circ(s,t)),u)
 circ(cons(lift,s),cons(lift,t)) -> cons(lift,circ(s,t))
 circ(cons(lift,s),cons(a,t)) -> cons(a,circ(s,t))
 circ(cons(a,s),t) -> cons(msubst(a,t),circ(s,t))
 circ(id,s) -> s
 circ(s,id) -> s
 msubst(msubst(a,s),t) -> msubst(a,circ(s,t))
 msubst(a,id) -> a
 subst(a,id) -> a

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 CIRC(cons(lift,s),circ(cons(lift,t),u)) -> CIRC(cons(lift,circ(s,t)),u)
 CIRC(cons(lift,s),circ(cons(lift,t),u)) -> CIRC(s,t)
 CIRC(cons(lift,s),cons(lift,t)) -> CIRC(s,t)
 CIRC(cons(lift,s),cons(a,t)) -> CIRC(s,t)
 CIRC(cons(a,s),t) -> CIRC(s,t)
 CIRC(cons(a,s),t) -> MSUBST(a,t)
 MSUBST(msubst(a,s),t) -> CIRC(s,t)
 MSUBST(msubst(a,s),t) -> MSUBST(a,circ(s,t))
-> Rules:
 circ(circ(s,t),u) -> circ(s,circ(t,u))
 circ(cons(lift,s),circ(cons(lift,t),u)) -> circ(cons(lift,circ(s,t)),u)
 circ(cons(lift,s),cons(lift,t)) -> cons(lift,circ(s,t))
 circ(cons(lift,s),cons(a,t)) -> cons(a,circ(s,t))
 circ(cons(a,s),t) -> cons(msubst(a,t),circ(s,t))
 circ(id,s) -> s
 circ(s,id) -> s
 msubst(msubst(a,s),t) -> msubst(a,circ(s,t))
 msubst(a,id) -> a
 subst(a,id) -> a
-> Usable rules:
 circ(circ(s,t),u) -> circ(s,circ(t,u))
 circ(cons(lift,s),circ(cons(lift,t),u)) -> circ(cons(lift,circ(s,t)),u)
 circ(cons(lift,s),cons(lift,t)) -> cons(lift,circ(s,t))
 circ(cons(lift,s),cons(a,t)) -> cons(a,circ(s,t))
 circ(cons(a,s),t) -> cons(msubst(a,t),circ(s,t))
 circ(id,s) -> s
 circ(s,id) -> s
 msubst(msubst(a,s),t) -> msubst(a,circ(s,t))
 msubst(a,id) -> a
->Interpretation type:
 Simple mixed
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[circ](X1,X2) = 2.X1.X2 + 2.X1 + 1
[msubst](X1,X2) = 2.X1.X2 + 2.X1 + 2.X2 + 1
[subst](X1,X2) = 0
[cons](X1,X2) = 2.X1 + X2 + 2
[fSNonEmpty] = 0
[id] = 2
[lift] = 0
[CIRC](X1,X2) = 2.X1.X2 + 2.X1 + 1
[MSUBST](X1,X2) = 2.X1.X2 + 2.X1 + X2 + 2

Problem 1: 

SCC Processor:
-> Pairs:
 CIRC(cons(lift,s),circ(cons(lift,t),u)) -> CIRC(s,t)
 CIRC(cons(lift,s),cons(lift,t)) -> CIRC(s,t)
 CIRC(cons(lift,s),cons(a,t)) -> CIRC(s,t)
 CIRC(cons(a,s),t) -> CIRC(s,t)
 CIRC(cons(a,s),t) -> MSUBST(a,t)
 MSUBST(msubst(a,s),t) -> CIRC(s,t)
 MSUBST(msubst(a,s),t) -> MSUBST(a,circ(s,t))
-> Rules:
 circ(circ(s,t),u) -> circ(s,circ(t,u))
 circ(cons(lift,s),circ(cons(lift,t),u)) -> circ(cons(lift,circ(s,t)),u)
 circ(cons(lift,s),cons(lift,t)) -> cons(lift,circ(s,t))
 circ(cons(lift,s),cons(a,t)) -> cons(a,circ(s,t))
 circ(cons(a,s),t) -> cons(msubst(a,t),circ(s,t))
 circ(id,s) -> s
 circ(s,id) -> s
 msubst(msubst(a,s),t) -> msubst(a,circ(s,t))
 msubst(a,id) -> a
 subst(a,id) -> a
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 CIRC(cons(lift,s),circ(cons(lift,t),u)) -> CIRC(s,t)
 CIRC(cons(lift,s),cons(lift,t)) -> CIRC(s,t)
 CIRC(cons(lift,s),cons(a,t)) -> CIRC(s,t)
 CIRC(cons(a,s),t) -> CIRC(s,t)
 CIRC(cons(a,s),t) -> MSUBST(a,t)
 MSUBST(msubst(a,s),t) -> CIRC(s,t)
 MSUBST(msubst(a,s),t) -> MSUBST(a,circ(s,t))
->->-> Rules:
 circ(circ(s,t),u) -> circ(s,circ(t,u))
 circ(cons(lift,s),circ(cons(lift,t),u)) -> circ(cons(lift,circ(s,t)),u)
 circ(cons(lift,s),cons(lift,t)) -> cons(lift,circ(s,t))
 circ(cons(lift,s),cons(a,t)) -> cons(a,circ(s,t))
 circ(cons(a,s),t) -> cons(msubst(a,t),circ(s,t))
 circ(id,s) -> s
 circ(s,id) -> s
 msubst(msubst(a,s),t) -> msubst(a,circ(s,t))
 msubst(a,id) -> a
 subst(a,id) -> a

Problem 1: 

Subterm Processor:
-> Pairs:
 CIRC(cons(lift,s),circ(cons(lift,t),u)) -> CIRC(s,t)
 CIRC(cons(lift,s),cons(lift,t)) -> CIRC(s,t)
 CIRC(cons(lift,s),cons(a,t)) -> CIRC(s,t)
 CIRC(cons(a,s),t) -> CIRC(s,t)
 CIRC(cons(a,s),t) -> MSUBST(a,t)
 MSUBST(msubst(a,s),t) -> CIRC(s,t)
 MSUBST(msubst(a,s),t) -> MSUBST(a,circ(s,t))
-> Rules:
 circ(circ(s,t),u) -> circ(s,circ(t,u))
 circ(cons(lift,s),circ(cons(lift,t),u)) -> circ(cons(lift,circ(s,t)),u)
 circ(cons(lift,s),cons(lift,t)) -> cons(lift,circ(s,t))
 circ(cons(lift,s),cons(a,t)) -> cons(a,circ(s,t))
 circ(cons(a,s),t) -> cons(msubst(a,t),circ(s,t))
 circ(id,s) -> s
 circ(s,id) -> s
 msubst(msubst(a,s),t) -> msubst(a,circ(s,t))
 msubst(a,id) -> a
 subst(a,id) -> a
->Projection:
 pi(CIRC) = 1
 pi(MSUBST) = 1

Problem 1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 circ(circ(s,t),u) -> circ(s,circ(t,u))
 circ(cons(lift,s),circ(cons(lift,t),u)) -> circ(cons(lift,circ(s,t)),u)
 circ(cons(lift,s),cons(lift,t)) -> cons(lift,circ(s,t))
 circ(cons(lift,s),cons(a,t)) -> cons(a,circ(s,t))
 circ(cons(a,s),t) -> cons(msubst(a,t),circ(s,t))
 circ(id,s) -> s
 circ(s,id) -> s
 msubst(msubst(a,s),t) -> msubst(a,circ(s,t))
 msubst(a,id) -> a
 subst(a,id) -> a
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
