YES

Problem 1: 

(VAR vu95NonEmpty I P V V1 V2 X X1 X2 Y Z)
(RULES
U11(tt) -> tt
U21(tt,V2) -> U22(isList(activate(V2)))
U22(tt) -> tt
U31(tt) -> tt
U41(tt,V2) -> U42(isNeList(activate(V2)))
U42(tt) -> tt
U51(tt,V2) -> U52(isList(activate(V2)))
U52(tt) -> tt
U61(tt) -> tt
U71(tt,P) -> U72(isPal(activate(P)))
U72(tt) -> tt
U81(tt) -> tt
u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
u95u95(nil,X) -> X
u95u95(X,nil) -> X
u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
a -> nu95u95a
activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
activate(nu95u95a) -> a
activate(nu95u95e) -> e
activate(nu95u95i) -> i
activate(nu95u95nil) -> nil
activate(nu95u95o) -> o
activate(nu95u95u) -> u
activate(X) -> X
e -> nu95u95e
i -> nu95u95i
isList(nu95u95u95u95(V1,V2)) -> U21(isList(activate(V1)),activate(V2))
isList(nu95u95nil) -> tt
isList(V) -> U11(isNeList(activate(V)))
isNeList(nu95u95u95u95(V1,V2)) -> U41(isList(activate(V1)),activate(V2))
isNeList(nu95u95u95u95(V1,V2)) -> U51(isNeList(activate(V1)),activate(V2))
isNeList(V) -> U31(isQid(activate(V)))
isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> U71(isQid(activate(I)),activate(P))
isNePal(V) -> U61(isQid(activate(V)))
isPal(nu95u95nil) -> tt
isPal(V) -> U81(isNePal(activate(V)))
isQid(nu95u95a) -> tt
isQid(nu95u95e) -> tt
isQid(nu95u95i) -> tt
isQid(nu95u95o) -> tt
isQid(nu95u95u) -> tt
nil -> nu95u95nil
o -> nu95u95o
u -> nu95u95u
)


Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 U21Sharp(tt,V2) -> U22Sharp(isList(activate(V2)))
 U21Sharp(tt,V2) -> ACTIVATE(V2)
 U21Sharp(tt,V2) -> ISLIST(activate(V2))
 U41Sharp(tt,V2) -> U42Sharp(isNeList(activate(V2)))
 U41Sharp(tt,V2) -> ACTIVATE(V2)
 U41Sharp(tt,V2) -> ISNELIST(activate(V2))
 U51Sharp(tt,V2) -> U52Sharp(isList(activate(V2)))
 U51Sharp(tt,V2) -> ACTIVATE(V2)
 U51Sharp(tt,V2) -> ISLIST(activate(V2))
 U71Sharp(tt,P) -> U72Sharp(isPal(activate(P)))
 U71Sharp(tt,P) -> ACTIVATE(P)
 U71Sharp(tt,P) -> ISPAL(activate(P))
 U95U95(u95u95(X,Y),Z) -> U95U95(X,u95u95(Y,Z))
 U95U95(u95u95(X,Y),Z) -> U95U95(Y,Z)
 ACTIVATE(nu95u95u95u95(X1,X2)) -> U95U95(activate(X1),activate(X2))
 ACTIVATE(nu95u95u95u95(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95u95u95(X1,X2)) -> ACTIVATE(X2)
 ACTIVATE(nu95u95a) -> A
 ACTIVATE(nu95u95e) -> E
 ACTIVATE(nu95u95i) -> I
 ACTIVATE(nu95u95nil) -> NIL
 ACTIVATE(nu95u95o) -> O
 ACTIVATE(nu95u95u) -> U
 ISLIST(nu95u95u95u95(V1,V2)) -> U21Sharp(isList(activate(V1)),activate(V2))
 ISLIST(nu95u95u95u95(V1,V2)) -> ACTIVATE(V1)
 ISLIST(nu95u95u95u95(V1,V2)) -> ACTIVATE(V2)
 ISLIST(nu95u95u95u95(V1,V2)) -> ISLIST(activate(V1))
 ISLIST(V) -> U11Sharp(isNeList(activate(V)))
 ISLIST(V) -> ACTIVATE(V)
 ISLIST(V) -> ISNELIST(activate(V))
 ISNELIST(nu95u95u95u95(V1,V2)) -> U41Sharp(isList(activate(V1)),activate(V2))
 ISNELIST(nu95u95u95u95(V1,V2)) -> U51Sharp(isNeList(activate(V1)),activate(V2))
 ISNELIST(nu95u95u95u95(V1,V2)) -> ACTIVATE(V1)
 ISNELIST(nu95u95u95u95(V1,V2)) -> ACTIVATE(V2)
 ISNELIST(nu95u95u95u95(V1,V2)) -> ISLIST(activate(V1))
 ISNELIST(nu95u95u95u95(V1,V2)) -> ISNELIST(activate(V1))
 ISNELIST(V) -> U31Sharp(isQid(activate(V)))
 ISNELIST(V) -> ACTIVATE(V)
 ISNELIST(V) -> ISQID(activate(V))
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> U71Sharp(isQid(activate(I)),activate(P))
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> ACTIVATE(I)
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> ACTIVATE(P)
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> ISQID(activate(I))
 ISNEPAL(V) -> U61Sharp(isQid(activate(V)))
 ISNEPAL(V) -> ACTIVATE(V)
 ISNEPAL(V) -> ISQID(activate(V))
 ISPAL(V) -> U81Sharp(isNePal(activate(V)))
 ISPAL(V) -> ACTIVATE(V)
 ISPAL(V) -> ISNEPAL(activate(V))
-> Rules:
 U11(tt) -> tt
 U21(tt,V2) -> U22(isList(activate(V2)))
 U22(tt) -> tt
 U31(tt) -> tt
 U41(tt,V2) -> U42(isNeList(activate(V2)))
 U42(tt) -> tt
 U51(tt,V2) -> U52(isList(activate(V2)))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt,P) -> U72(isPal(activate(P)))
 U72(tt) -> tt
 U81(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(isList(activate(V1)),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isNeList(activate(V)))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(isList(activate(V1)),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(isNeList(activate(V1)),activate(V2))
 isNeList(V) -> U31(isQid(activate(V)))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> U71(isQid(activate(I)),activate(P))
 isNePal(V) -> U61(isQid(activate(V)))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U81(isNePal(activate(V)))
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u

Problem 1: 

SCC Processor:
-> Pairs:
 U21Sharp(tt,V2) -> U22Sharp(isList(activate(V2)))
 U21Sharp(tt,V2) -> ACTIVATE(V2)
 U21Sharp(tt,V2) -> ISLIST(activate(V2))
 U41Sharp(tt,V2) -> U42Sharp(isNeList(activate(V2)))
 U41Sharp(tt,V2) -> ACTIVATE(V2)
 U41Sharp(tt,V2) -> ISNELIST(activate(V2))
 U51Sharp(tt,V2) -> U52Sharp(isList(activate(V2)))
 U51Sharp(tt,V2) -> ACTIVATE(V2)
 U51Sharp(tt,V2) -> ISLIST(activate(V2))
 U71Sharp(tt,P) -> U72Sharp(isPal(activate(P)))
 U71Sharp(tt,P) -> ACTIVATE(P)
 U71Sharp(tt,P) -> ISPAL(activate(P))
 U95U95(u95u95(X,Y),Z) -> U95U95(X,u95u95(Y,Z))
 U95U95(u95u95(X,Y),Z) -> U95U95(Y,Z)
 ACTIVATE(nu95u95u95u95(X1,X2)) -> U95U95(activate(X1),activate(X2))
 ACTIVATE(nu95u95u95u95(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95u95u95(X1,X2)) -> ACTIVATE(X2)
 ACTIVATE(nu95u95a) -> A
 ACTIVATE(nu95u95e) -> E
 ACTIVATE(nu95u95i) -> I
 ACTIVATE(nu95u95nil) -> NIL
 ACTIVATE(nu95u95o) -> O
 ACTIVATE(nu95u95u) -> U
 ISLIST(nu95u95u95u95(V1,V2)) -> U21Sharp(isList(activate(V1)),activate(V2))
 ISLIST(nu95u95u95u95(V1,V2)) -> ACTIVATE(V1)
 ISLIST(nu95u95u95u95(V1,V2)) -> ACTIVATE(V2)
 ISLIST(nu95u95u95u95(V1,V2)) -> ISLIST(activate(V1))
 ISLIST(V) -> U11Sharp(isNeList(activate(V)))
 ISLIST(V) -> ACTIVATE(V)
 ISLIST(V) -> ISNELIST(activate(V))
 ISNELIST(nu95u95u95u95(V1,V2)) -> U41Sharp(isList(activate(V1)),activate(V2))
 ISNELIST(nu95u95u95u95(V1,V2)) -> U51Sharp(isNeList(activate(V1)),activate(V2))
 ISNELIST(nu95u95u95u95(V1,V2)) -> ACTIVATE(V1)
 ISNELIST(nu95u95u95u95(V1,V2)) -> ACTIVATE(V2)
 ISNELIST(nu95u95u95u95(V1,V2)) -> ISLIST(activate(V1))
 ISNELIST(nu95u95u95u95(V1,V2)) -> ISNELIST(activate(V1))
 ISNELIST(V) -> U31Sharp(isQid(activate(V)))
 ISNELIST(V) -> ACTIVATE(V)
 ISNELIST(V) -> ISQID(activate(V))
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> U71Sharp(isQid(activate(I)),activate(P))
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> ACTIVATE(I)
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> ACTIVATE(P)
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> ISQID(activate(I))
 ISNEPAL(V) -> U61Sharp(isQid(activate(V)))
 ISNEPAL(V) -> ACTIVATE(V)
 ISNEPAL(V) -> ISQID(activate(V))
 ISPAL(V) -> U81Sharp(isNePal(activate(V)))
 ISPAL(V) -> ACTIVATE(V)
 ISPAL(V) -> ISNEPAL(activate(V))
-> Rules:
 U11(tt) -> tt
 U21(tt,V2) -> U22(isList(activate(V2)))
 U22(tt) -> tt
 U31(tt) -> tt
 U41(tt,V2) -> U42(isNeList(activate(V2)))
 U42(tt) -> tt
 U51(tt,V2) -> U52(isList(activate(V2)))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt,P) -> U72(isPal(activate(P)))
 U72(tt) -> tt
 U81(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(isList(activate(V1)),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isNeList(activate(V)))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(isList(activate(V1)),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(isNeList(activate(V1)),activate(V2))
 isNeList(V) -> U31(isQid(activate(V)))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> U71(isQid(activate(I)),activate(P))
 isNePal(V) -> U61(isQid(activate(V)))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U81(isNePal(activate(V)))
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U95U95(u95u95(X,Y),Z) -> U95U95(X,u95u95(Y,Z))
 U95U95(u95u95(X,Y),Z) -> U95U95(Y,Z)
->->-> Rules:
 U11(tt) -> tt
 U21(tt,V2) -> U22(isList(activate(V2)))
 U22(tt) -> tt
 U31(tt) -> tt
 U41(tt,V2) -> U42(isNeList(activate(V2)))
 U42(tt) -> tt
 U51(tt,V2) -> U52(isList(activate(V2)))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt,P) -> U72(isPal(activate(P)))
 U72(tt) -> tt
 U81(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(isList(activate(V1)),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isNeList(activate(V)))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(isList(activate(V1)),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(isNeList(activate(V1)),activate(V2))
 isNeList(V) -> U31(isQid(activate(V)))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> U71(isQid(activate(I)),activate(P))
 isNePal(V) -> U61(isQid(activate(V)))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U81(isNePal(activate(V)))
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->->Cycle:
->->-> Pairs:
 ACTIVATE(nu95u95u95u95(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95u95u95(X1,X2)) -> ACTIVATE(X2)
->->-> Rules:
 U11(tt) -> tt
 U21(tt,V2) -> U22(isList(activate(V2)))
 U22(tt) -> tt
 U31(tt) -> tt
 U41(tt,V2) -> U42(isNeList(activate(V2)))
 U42(tt) -> tt
 U51(tt,V2) -> U52(isList(activate(V2)))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt,P) -> U72(isPal(activate(P)))
 U72(tt) -> tt
 U81(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(isList(activate(V1)),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isNeList(activate(V)))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(isList(activate(V1)),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(isNeList(activate(V1)),activate(V2))
 isNeList(V) -> U31(isQid(activate(V)))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> U71(isQid(activate(I)),activate(P))
 isNePal(V) -> U61(isQid(activate(V)))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U81(isNePal(activate(V)))
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->->Cycle:
->->-> Pairs:
 U71Sharp(tt,P) -> ISPAL(activate(P))
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> U71Sharp(isQid(activate(I)),activate(P))
 ISPAL(V) -> ISNEPAL(activate(V))
->->-> Rules:
 U11(tt) -> tt
 U21(tt,V2) -> U22(isList(activate(V2)))
 U22(tt) -> tt
 U31(tt) -> tt
 U41(tt,V2) -> U42(isNeList(activate(V2)))
 U42(tt) -> tt
 U51(tt,V2) -> U52(isList(activate(V2)))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt,P) -> U72(isPal(activate(P)))
 U72(tt) -> tt
 U81(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(isList(activate(V1)),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isNeList(activate(V)))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(isList(activate(V1)),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(isNeList(activate(V1)),activate(V2))
 isNeList(V) -> U31(isQid(activate(V)))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> U71(isQid(activate(I)),activate(P))
 isNePal(V) -> U61(isQid(activate(V)))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U81(isNePal(activate(V)))
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->->Cycle:
->->-> Pairs:
 U21Sharp(tt,V2) -> ISLIST(activate(V2))
 U41Sharp(tt,V2) -> ISNELIST(activate(V2))
 U51Sharp(tt,V2) -> ISLIST(activate(V2))
 ISLIST(nu95u95u95u95(V1,V2)) -> U21Sharp(isList(activate(V1)),activate(V2))
 ISLIST(nu95u95u95u95(V1,V2)) -> ISLIST(activate(V1))
 ISLIST(V) -> ISNELIST(activate(V))
 ISNELIST(nu95u95u95u95(V1,V2)) -> U41Sharp(isList(activate(V1)),activate(V2))
 ISNELIST(nu95u95u95u95(V1,V2)) -> U51Sharp(isNeList(activate(V1)),activate(V2))
 ISNELIST(nu95u95u95u95(V1,V2)) -> ISLIST(activate(V1))
 ISNELIST(nu95u95u95u95(V1,V2)) -> ISNELIST(activate(V1))
->->-> Rules:
 U11(tt) -> tt
 U21(tt,V2) -> U22(isList(activate(V2)))
 U22(tt) -> tt
 U31(tt) -> tt
 U41(tt,V2) -> U42(isNeList(activate(V2)))
 U42(tt) -> tt
 U51(tt,V2) -> U52(isList(activate(V2)))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt,P) -> U72(isPal(activate(P)))
 U72(tt) -> tt
 U81(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(isList(activate(V1)),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isNeList(activate(V)))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(isList(activate(V1)),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(isNeList(activate(V1)),activate(V2))
 isNeList(V) -> U31(isQid(activate(V)))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> U71(isQid(activate(I)),activate(P))
 isNePal(V) -> U61(isQid(activate(V)))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U81(isNePal(activate(V)))
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u


The problem is decomposed in 4 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 U95U95(u95u95(X,Y),Z) -> U95U95(X,u95u95(Y,Z))
 U95U95(u95u95(X,Y),Z) -> U95U95(Y,Z)
-> Rules:
 U11(tt) -> tt
 U21(tt,V2) -> U22(isList(activate(V2)))
 U22(tt) -> tt
 U31(tt) -> tt
 U41(tt,V2) -> U42(isNeList(activate(V2)))
 U42(tt) -> tt
 U51(tt,V2) -> U52(isList(activate(V2)))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt,P) -> U72(isPal(activate(P)))
 U72(tt) -> tt
 U81(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(isList(activate(V1)),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isNeList(activate(V)))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(isList(activate(V1)),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(isNeList(activate(V1)),activate(V2))
 isNeList(V) -> U31(isQid(activate(V)))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> U71(isQid(activate(I)),activate(P))
 isNePal(V) -> U61(isQid(activate(V)))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U81(isNePal(activate(V)))
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Projection:
 pi(U95U95) = 1

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 U11(tt) -> tt
 U21(tt,V2) -> U22(isList(activate(V2)))
 U22(tt) -> tt
 U31(tt) -> tt
 U41(tt,V2) -> U42(isNeList(activate(V2)))
 U42(tt) -> tt
 U51(tt,V2) -> U52(isList(activate(V2)))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt,P) -> U72(isPal(activate(P)))
 U72(tt) -> tt
 U81(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(isList(activate(V1)),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isNeList(activate(V)))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(isList(activate(V1)),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(isNeList(activate(V1)),activate(V2))
 isNeList(V) -> U31(isQid(activate(V)))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> U71(isQid(activate(I)),activate(P))
 isNePal(V) -> U61(isQid(activate(V)))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U81(isNePal(activate(V)))
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Subterm Processor:
-> Pairs:
 ACTIVATE(nu95u95u95u95(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95u95u95(X1,X2)) -> ACTIVATE(X2)
-> Rules:
 U11(tt) -> tt
 U21(tt,V2) -> U22(isList(activate(V2)))
 U22(tt) -> tt
 U31(tt) -> tt
 U41(tt,V2) -> U42(isNeList(activate(V2)))
 U42(tt) -> tt
 U51(tt,V2) -> U52(isList(activate(V2)))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt,P) -> U72(isPal(activate(P)))
 U72(tt) -> tt
 U81(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(isList(activate(V1)),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isNeList(activate(V)))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(isList(activate(V1)),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(isNeList(activate(V1)),activate(V2))
 isNeList(V) -> U31(isQid(activate(V)))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> U71(isQid(activate(I)),activate(P))
 isNePal(V) -> U61(isQid(activate(V)))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U81(isNePal(activate(V)))
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Projection:
 pi(ACTIVATE) = 1

Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 U11(tt) -> tt
 U21(tt,V2) -> U22(isList(activate(V2)))
 U22(tt) -> tt
 U31(tt) -> tt
 U41(tt,V2) -> U42(isNeList(activate(V2)))
 U42(tt) -> tt
 U51(tt,V2) -> U52(isList(activate(V2)))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt,P) -> U72(isPal(activate(P)))
 U72(tt) -> tt
 U81(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(isList(activate(V1)),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isNeList(activate(V)))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(isList(activate(V1)),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(isNeList(activate(V1)),activate(V2))
 isNeList(V) -> U31(isQid(activate(V)))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> U71(isQid(activate(I)),activate(P))
 isNePal(V) -> U61(isQid(activate(V)))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U81(isNePal(activate(V)))
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Reduction Pair Processor:
-> Pairs:
 U71Sharp(tt,P) -> ISPAL(activate(P))
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> U71Sharp(isQid(activate(I)),activate(P))
 ISPAL(V) -> ISNEPAL(activate(V))
-> Rules:
 U11(tt) -> tt
 U21(tt,V2) -> U22(isList(activate(V2)))
 U22(tt) -> tt
 U31(tt) -> tt
 U41(tt,V2) -> U42(isNeList(activate(V2)))
 U42(tt) -> tt
 U51(tt,V2) -> U52(isList(activate(V2)))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt,P) -> U72(isPal(activate(P)))
 U72(tt) -> tt
 U81(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(isList(activate(V1)),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isNeList(activate(V)))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(isList(activate(V1)),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(isNeList(activate(V1)),activate(V2))
 isNeList(V) -> U31(isQid(activate(V)))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> U71(isQid(activate(I)),activate(P))
 isNePal(V) -> U61(isQid(activate(V)))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U81(isNePal(activate(V)))
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
-> Usable rules:
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 e -> nu95u95e
 i -> nu95u95i
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X) = 0
[U21](X1,X2) = 0
[U22](X) = 0
[U31](X) = 0
[U41](X1,X2) = 0
[U42](X) = 0
[U51](X1,X2) = 0
[U52](X) = 0
[U61](X) = 0
[U71](X1,X2) = 0
[U72](X) = 0
[U81](X) = 0
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 1
[activate](X) = X
[e] = 2
[i] = 1
[isList](X) = 0
[isNeList](X) = 0
[isNePal](X) = 0
[isPal](X) = 0
[isQid](X) = 2.X + 1
[nil] = 2
[o] = 1
[u] = 1
[fSNonEmpty] = 0
[nu95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[nu95u95a] = 1
[nu95u95e] = 2
[nu95u95i] = 1
[nu95u95nil] = 2
[nu95u95o] = 1
[nu95u95u] = 1
[tt] = 2
[U11Sharp](X) = 0
[U21Sharp](X1,X2) = 0
[U22Sharp](X) = 0
[U31Sharp](X) = 0
[U41Sharp](X1,X2) = 0
[U42Sharp](X) = 0
[U51Sharp](X1,X2) = 0
[U52Sharp](X) = 0
[U61Sharp](X) = 0
[U71Sharp](X1,X2) = 2.X1 + 2.X2 + 2
[U72Sharp](X) = 0
[U81Sharp](X) = 0
[U95U95](X1,X2) = 0
[A] = 0
[ACTIVATE](X) = 0
[E] = 0
[I] = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 2.X
[ISPAL](X) = 2.X
[ISQID](X) = 0
[NIL] = 0
[O] = 0
[U] = 0

Problem 1.3: 

SCC Processor:
-> Pairs:
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> U71Sharp(isQid(activate(I)),activate(P))
 ISPAL(V) -> ISNEPAL(activate(V))
-> Rules:
 U11(tt) -> tt
 U21(tt,V2) -> U22(isList(activate(V2)))
 U22(tt) -> tt
 U31(tt) -> tt
 U41(tt,V2) -> U42(isNeList(activate(V2)))
 U42(tt) -> tt
 U51(tt,V2) -> U52(isList(activate(V2)))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt,P) -> U72(isPal(activate(P)))
 U72(tt) -> tt
 U81(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(isList(activate(V1)),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isNeList(activate(V)))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(isList(activate(V1)),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(isNeList(activate(V1)),activate(V2))
 isNeList(V) -> U31(isQid(activate(V)))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> U71(isQid(activate(I)),activate(P))
 isNePal(V) -> U61(isQid(activate(V)))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U81(isNePal(activate(V)))
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.4: 

Reduction Pair Processor:
-> Pairs:
 U21Sharp(tt,V2) -> ISLIST(activate(V2))
 U41Sharp(tt,V2) -> ISNELIST(activate(V2))
 U51Sharp(tt,V2) -> ISLIST(activate(V2))
 ISLIST(nu95u95u95u95(V1,V2)) -> U21Sharp(isList(activate(V1)),activate(V2))
 ISLIST(nu95u95u95u95(V1,V2)) -> ISLIST(activate(V1))
 ISLIST(V) -> ISNELIST(activate(V))
 ISNELIST(nu95u95u95u95(V1,V2)) -> U41Sharp(isList(activate(V1)),activate(V2))
 ISNELIST(nu95u95u95u95(V1,V2)) -> U51Sharp(isNeList(activate(V1)),activate(V2))
 ISNELIST(nu95u95u95u95(V1,V2)) -> ISLIST(activate(V1))
 ISNELIST(nu95u95u95u95(V1,V2)) -> ISNELIST(activate(V1))
-> Rules:
 U11(tt) -> tt
 U21(tt,V2) -> U22(isList(activate(V2)))
 U22(tt) -> tt
 U31(tt) -> tt
 U41(tt,V2) -> U42(isNeList(activate(V2)))
 U42(tt) -> tt
 U51(tt,V2) -> U52(isList(activate(V2)))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt,P) -> U72(isPal(activate(P)))
 U72(tt) -> tt
 U81(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(isList(activate(V1)),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isNeList(activate(V)))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(isList(activate(V1)),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(isNeList(activate(V1)),activate(V2))
 isNeList(V) -> U31(isQid(activate(V)))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> U71(isQid(activate(I)),activate(P))
 isNePal(V) -> U61(isQid(activate(V)))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U81(isNePal(activate(V)))
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
-> Usable rules:
 U11(tt) -> tt
 U21(tt,V2) -> U22(isList(activate(V2)))
 U22(tt) -> tt
 U31(tt) -> tt
 U41(tt,V2) -> U42(isNeList(activate(V2)))
 U42(tt) -> tt
 U51(tt,V2) -> U52(isList(activate(V2)))
 U52(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(isList(activate(V1)),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isNeList(activate(V)))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(isList(activate(V1)),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(isNeList(activate(V1)),activate(V2))
 isNeList(V) -> U31(isQid(activate(V)))
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X) = 2
[U21](X1,X2) = X1 + 1
[U22](X) = 2
[U31](X) = 2
[U41](X1,X2) = 2.X1 + 2.X2 + 2
[U42](X) = X
[U51](X1,X2) = 2.X1 + 2.X2 + 2
[U52](X) = 2.X + 1
[U61](X) = 0
[U71](X1,X2) = 0
[U72](X) = 0
[U81](X) = 0
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 2
[activate](X) = X
[e] = 2
[i] = 2
[isList](X) = X + 2
[isNeList](X) = 2.X + 2
[isNePal](X) = 0
[isPal](X) = 0
[isQid](X) = 2
[nil] = 2
[o] = 2
[u] = 2
[fSNonEmpty] = 0
[nu95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[nu95u95a] = 2
[nu95u95e] = 2
[nu95u95i] = 2
[nu95u95nil] = 2
[nu95u95o] = 2
[nu95u95u] = 2
[tt] = 2
[U11Sharp](X) = 0
[U21Sharp](X1,X2) = 2.X2 + 2
[U22Sharp](X) = 0
[U31Sharp](X) = 0
[U41Sharp](X1,X2) = 2.X1 + 2.X2
[U42Sharp](X) = 0
[U51Sharp](X1,X2) = 2.X1 + 2.X2
[U52Sharp](X) = 0
[U61Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U81Sharp](X) = 0
[U95U95](X1,X2) = 0
[A] = 0
[ACTIVATE](X) = 0
[E] = 0
[I] = 0
[ISLIST](X) = 2.X
[ISNELIST](X) = 2.X
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISQID](X) = 0
[NIL] = 0
[O] = 0
[U] = 0

Problem 1.4: 

SCC Processor:
-> Pairs:
 U41Sharp(tt,V2) -> ISNELIST(activate(V2))
 U51Sharp(tt,V2) -> ISLIST(activate(V2))
 ISLIST(nu95u95u95u95(V1,V2)) -> U21Sharp(isList(activate(V1)),activate(V2))
 ISLIST(nu95u95u95u95(V1,V2)) -> ISLIST(activate(V1))
 ISLIST(V) -> ISNELIST(activate(V))
 ISNELIST(nu95u95u95u95(V1,V2)) -> U41Sharp(isList(activate(V1)),activate(V2))
 ISNELIST(nu95u95u95u95(V1,V2)) -> U51Sharp(isNeList(activate(V1)),activate(V2))
 ISNELIST(nu95u95u95u95(V1,V2)) -> ISLIST(activate(V1))
 ISNELIST(nu95u95u95u95(V1,V2)) -> ISNELIST(activate(V1))
-> Rules:
 U11(tt) -> tt
 U21(tt,V2) -> U22(isList(activate(V2)))
 U22(tt) -> tt
 U31(tt) -> tt
 U41(tt,V2) -> U42(isNeList(activate(V2)))
 U42(tt) -> tt
 U51(tt,V2) -> U52(isList(activate(V2)))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt,P) -> U72(isPal(activate(P)))
 U72(tt) -> tt
 U81(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(isList(activate(V1)),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isNeList(activate(V)))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(isList(activate(V1)),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(isNeList(activate(V1)),activate(V2))
 isNeList(V) -> U31(isQid(activate(V)))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> U71(isQid(activate(I)),activate(P))
 isNePal(V) -> U61(isQid(activate(V)))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U81(isNePal(activate(V)))
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U41Sharp(tt,V2) -> ISNELIST(activate(V2))
 U51Sharp(tt,V2) -> ISLIST(activate(V2))
 ISLIST(nu95u95u95u95(V1,V2)) -> ISLIST(activate(V1))
 ISLIST(V) -> ISNELIST(activate(V))
 ISNELIST(nu95u95u95u95(V1,V2)) -> U41Sharp(isList(activate(V1)),activate(V2))
 ISNELIST(nu95u95u95u95(V1,V2)) -> U51Sharp(isNeList(activate(V1)),activate(V2))
 ISNELIST(nu95u95u95u95(V1,V2)) -> ISLIST(activate(V1))
 ISNELIST(nu95u95u95u95(V1,V2)) -> ISNELIST(activate(V1))
->->-> Rules:
 U11(tt) -> tt
 U21(tt,V2) -> U22(isList(activate(V2)))
 U22(tt) -> tt
 U31(tt) -> tt
 U41(tt,V2) -> U42(isNeList(activate(V2)))
 U42(tt) -> tt
 U51(tt,V2) -> U52(isList(activate(V2)))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt,P) -> U72(isPal(activate(P)))
 U72(tt) -> tt
 U81(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(isList(activate(V1)),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isNeList(activate(V)))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(isList(activate(V1)),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(isNeList(activate(V1)),activate(V2))
 isNeList(V) -> U31(isQid(activate(V)))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> U71(isQid(activate(I)),activate(P))
 isNePal(V) -> U61(isQid(activate(V)))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U81(isNePal(activate(V)))
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u

Problem 1.4: 

Reduction Pair Processor:
-> Pairs:
 U41Sharp(tt,V2) -> ISNELIST(activate(V2))
 U51Sharp(tt,V2) -> ISLIST(activate(V2))
 ISLIST(nu95u95u95u95(V1,V2)) -> ISLIST(activate(V1))
 ISLIST(V) -> ISNELIST(activate(V))
 ISNELIST(nu95u95u95u95(V1,V2)) -> U41Sharp(isList(activate(V1)),activate(V2))
 ISNELIST(nu95u95u95u95(V1,V2)) -> U51Sharp(isNeList(activate(V1)),activate(V2))
 ISNELIST(nu95u95u95u95(V1,V2)) -> ISLIST(activate(V1))
 ISNELIST(nu95u95u95u95(V1,V2)) -> ISNELIST(activate(V1))
-> Rules:
 U11(tt) -> tt
 U21(tt,V2) -> U22(isList(activate(V2)))
 U22(tt) -> tt
 U31(tt) -> tt
 U41(tt,V2) -> U42(isNeList(activate(V2)))
 U42(tt) -> tt
 U51(tt,V2) -> U52(isList(activate(V2)))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt,P) -> U72(isPal(activate(P)))
 U72(tt) -> tt
 U81(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(isList(activate(V1)),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isNeList(activate(V)))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(isList(activate(V1)),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(isNeList(activate(V1)),activate(V2))
 isNeList(V) -> U31(isQid(activate(V)))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> U71(isQid(activate(I)),activate(P))
 isNePal(V) -> U61(isQid(activate(V)))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U81(isNePal(activate(V)))
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
-> Usable rules:
 U11(tt) -> tt
 U21(tt,V2) -> U22(isList(activate(V2)))
 U22(tt) -> tt
 U31(tt) -> tt
 U41(tt,V2) -> U42(isNeList(activate(V2)))
 U42(tt) -> tt
 U51(tt,V2) -> U52(isList(activate(V2)))
 U52(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(isList(activate(V1)),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isNeList(activate(V)))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(isList(activate(V1)),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(isNeList(activate(V1)),activate(V2))
 isNeList(V) -> U31(isQid(activate(V)))
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X) = 2
[U21](X1,X2) = 2
[U22](X) = 2
[U31](X) = X
[U41](X1,X2) = X1 + 2.X2
[U42](X) = X + 1
[U51](X1,X2) = 2.X1 + 2.X2 + 2
[U52](X) = 2.X + 2
[U61](X) = 0
[U71](X1,X2) = 0
[U72](X) = 0
[U81](X) = 0
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 2
[activate](X) = X
[e] = 2
[i] = 2
[isList](X) = 2
[isNeList](X) = 2.X
[isNePal](X) = 0
[isPal](X) = 0
[isQid](X) = 2.X
[nil] = 1
[o] = 2
[u] = 2
[fSNonEmpty] = 0
[nu95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[nu95u95a] = 2
[nu95u95e] = 2
[nu95u95i] = 2
[nu95u95nil] = 1
[nu95u95o] = 2
[nu95u95u] = 2
[tt] = 2
[U11Sharp](X) = 0
[U21Sharp](X1,X2) = 0
[U22Sharp](X) = 0
[U31Sharp](X) = 0
[U41Sharp](X1,X2) = 2.X2 + 1
[U42Sharp](X) = 0
[U51Sharp](X1,X2) = 2.X1 + 2.X2 + 2
[U52Sharp](X) = 0
[U61Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U81Sharp](X) = 0
[U95U95](X1,X2) = 0
[A] = 0
[ACTIVATE](X) = 0
[E] = 0
[I] = 0
[ISLIST](X) = 2.X + 2
[ISNELIST](X) = 2.X
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISQID](X) = 0
[NIL] = 0
[O] = 0
[U] = 0

Problem 1.4: 

SCC Processor:
-> Pairs:
 U51Sharp(tt,V2) -> ISLIST(activate(V2))
 ISLIST(nu95u95u95u95(V1,V2)) -> ISLIST(activate(V1))
 ISLIST(V) -> ISNELIST(activate(V))
 ISNELIST(nu95u95u95u95(V1,V2)) -> U41Sharp(isList(activate(V1)),activate(V2))
 ISNELIST(nu95u95u95u95(V1,V2)) -> U51Sharp(isNeList(activate(V1)),activate(V2))
 ISNELIST(nu95u95u95u95(V1,V2)) -> ISLIST(activate(V1))
 ISNELIST(nu95u95u95u95(V1,V2)) -> ISNELIST(activate(V1))
-> Rules:
 U11(tt) -> tt
 U21(tt,V2) -> U22(isList(activate(V2)))
 U22(tt) -> tt
 U31(tt) -> tt
 U41(tt,V2) -> U42(isNeList(activate(V2)))
 U42(tt) -> tt
 U51(tt,V2) -> U52(isList(activate(V2)))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt,P) -> U72(isPal(activate(P)))
 U72(tt) -> tt
 U81(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(isList(activate(V1)),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isNeList(activate(V)))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(isList(activate(V1)),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(isNeList(activate(V1)),activate(V2))
 isNeList(V) -> U31(isQid(activate(V)))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> U71(isQid(activate(I)),activate(P))
 isNePal(V) -> U61(isQid(activate(V)))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U81(isNePal(activate(V)))
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U51Sharp(tt,V2) -> ISLIST(activate(V2))
 ISLIST(nu95u95u95u95(V1,V2)) -> ISLIST(activate(V1))
 ISLIST(V) -> ISNELIST(activate(V))
 ISNELIST(nu95u95u95u95(V1,V2)) -> U51Sharp(isNeList(activate(V1)),activate(V2))
 ISNELIST(nu95u95u95u95(V1,V2)) -> ISLIST(activate(V1))
 ISNELIST(nu95u95u95u95(V1,V2)) -> ISNELIST(activate(V1))
->->-> Rules:
 U11(tt) -> tt
 U21(tt,V2) -> U22(isList(activate(V2)))
 U22(tt) -> tt
 U31(tt) -> tt
 U41(tt,V2) -> U42(isNeList(activate(V2)))
 U42(tt) -> tt
 U51(tt,V2) -> U52(isList(activate(V2)))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt,P) -> U72(isPal(activate(P)))
 U72(tt) -> tt
 U81(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(isList(activate(V1)),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isNeList(activate(V)))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(isList(activate(V1)),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(isNeList(activate(V1)),activate(V2))
 isNeList(V) -> U31(isQid(activate(V)))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> U71(isQid(activate(I)),activate(P))
 isNePal(V) -> U61(isQid(activate(V)))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U81(isNePal(activate(V)))
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u

Problem 1.4: 

Reduction Pair Processor:
-> Pairs:
 U51Sharp(tt,V2) -> ISLIST(activate(V2))
 ISLIST(nu95u95u95u95(V1,V2)) -> ISLIST(activate(V1))
 ISLIST(V) -> ISNELIST(activate(V))
 ISNELIST(nu95u95u95u95(V1,V2)) -> U51Sharp(isNeList(activate(V1)),activate(V2))
 ISNELIST(nu95u95u95u95(V1,V2)) -> ISLIST(activate(V1))
 ISNELIST(nu95u95u95u95(V1,V2)) -> ISNELIST(activate(V1))
-> Rules:
 U11(tt) -> tt
 U21(tt,V2) -> U22(isList(activate(V2)))
 U22(tt) -> tt
 U31(tt) -> tt
 U41(tt,V2) -> U42(isNeList(activate(V2)))
 U42(tt) -> tt
 U51(tt,V2) -> U52(isList(activate(V2)))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt,P) -> U72(isPal(activate(P)))
 U72(tt) -> tt
 U81(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(isList(activate(V1)),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isNeList(activate(V)))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(isList(activate(V1)),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(isNeList(activate(V1)),activate(V2))
 isNeList(V) -> U31(isQid(activate(V)))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> U71(isQid(activate(I)),activate(P))
 isNePal(V) -> U61(isQid(activate(V)))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U81(isNePal(activate(V)))
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
-> Usable rules:
 U11(tt) -> tt
 U21(tt,V2) -> U22(isList(activate(V2)))
 U22(tt) -> tt
 U31(tt) -> tt
 U41(tt,V2) -> U42(isNeList(activate(V2)))
 U42(tt) -> tt
 U51(tt,V2) -> U52(isList(activate(V2)))
 U52(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(isList(activate(V1)),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isNeList(activate(V)))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(isList(activate(V1)),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(isNeList(activate(V1)),activate(V2))
 isNeList(V) -> U31(isQid(activate(V)))
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X) = 2
[U21](X1,X2) = 2.X1 + X2
[U22](X) = 2
[U31](X) = 2.X
[U41](X1,X2) = 2.X1 + 2.X2 + 1
[U42](X) = 2
[U51](X1,X2) = 2.X1 + 2.X2 + 1
[U52](X) = 2.X + 1
[U61](X) = 0
[U71](X1,X2) = 0
[U72](X) = 0
[U81](X) = 0
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 2
[activate](X) = X
[e] = 2
[i] = 2
[isList](X) = X + 2
[isNeList](X) = 2.X + 2
[isNePal](X) = 0
[isPal](X) = 0
[isQid](X) = X + 1
[nil] = 2
[o] = 2
[u] = 2
[fSNonEmpty] = 0
[nu95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[nu95u95a] = 2
[nu95u95e] = 2
[nu95u95i] = 2
[nu95u95nil] = 2
[nu95u95o] = 2
[nu95u95u] = 2
[tt] = 2
[U11Sharp](X) = 0
[U21Sharp](X1,X2) = 0
[U22Sharp](X) = 0
[U31Sharp](X) = 0
[U41Sharp](X1,X2) = 0
[U42Sharp](X) = 0
[U51Sharp](X1,X2) = X1 + 2.X2
[U52Sharp](X) = 0
[U61Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U81Sharp](X) = 0
[U95U95](X1,X2) = 0
[A] = 0
[ACTIVATE](X) = 0
[E] = 0
[I] = 0
[ISLIST](X) = 2.X
[ISNELIST](X) = 2.X
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISQID](X) = 0
[NIL] = 0
[O] = 0
[U] = 0

Problem 1.4: 

SCC Processor:
-> Pairs:
 ISLIST(nu95u95u95u95(V1,V2)) -> ISLIST(activate(V1))
 ISLIST(V) -> ISNELIST(activate(V))
 ISNELIST(nu95u95u95u95(V1,V2)) -> U51Sharp(isNeList(activate(V1)),activate(V2))
 ISNELIST(nu95u95u95u95(V1,V2)) -> ISLIST(activate(V1))
 ISNELIST(nu95u95u95u95(V1,V2)) -> ISNELIST(activate(V1))
-> Rules:
 U11(tt) -> tt
 U21(tt,V2) -> U22(isList(activate(V2)))
 U22(tt) -> tt
 U31(tt) -> tt
 U41(tt,V2) -> U42(isNeList(activate(V2)))
 U42(tt) -> tt
 U51(tt,V2) -> U52(isList(activate(V2)))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt,P) -> U72(isPal(activate(P)))
 U72(tt) -> tt
 U81(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(isList(activate(V1)),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isNeList(activate(V)))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(isList(activate(V1)),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(isNeList(activate(V1)),activate(V2))
 isNeList(V) -> U31(isQid(activate(V)))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> U71(isQid(activate(I)),activate(P))
 isNePal(V) -> U61(isQid(activate(V)))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U81(isNePal(activate(V)))
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ISLIST(nu95u95u95u95(V1,V2)) -> ISLIST(activate(V1))
 ISLIST(V) -> ISNELIST(activate(V))
 ISNELIST(nu95u95u95u95(V1,V2)) -> ISLIST(activate(V1))
 ISNELIST(nu95u95u95u95(V1,V2)) -> ISNELIST(activate(V1))
->->-> Rules:
 U11(tt) -> tt
 U21(tt,V2) -> U22(isList(activate(V2)))
 U22(tt) -> tt
 U31(tt) -> tt
 U41(tt,V2) -> U42(isNeList(activate(V2)))
 U42(tt) -> tt
 U51(tt,V2) -> U52(isList(activate(V2)))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt,P) -> U72(isPal(activate(P)))
 U72(tt) -> tt
 U81(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(isList(activate(V1)),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isNeList(activate(V)))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(isList(activate(V1)),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(isNeList(activate(V1)),activate(V2))
 isNeList(V) -> U31(isQid(activate(V)))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> U71(isQid(activate(I)),activate(P))
 isNePal(V) -> U61(isQid(activate(V)))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U81(isNePal(activate(V)))
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u

Problem 1.4: 

Reduction Pair Processor:
-> Pairs:
 ISLIST(nu95u95u95u95(V1,V2)) -> ISLIST(activate(V1))
 ISLIST(V) -> ISNELIST(activate(V))
 ISNELIST(nu95u95u95u95(V1,V2)) -> ISLIST(activate(V1))
 ISNELIST(nu95u95u95u95(V1,V2)) -> ISNELIST(activate(V1))
-> Rules:
 U11(tt) -> tt
 U21(tt,V2) -> U22(isList(activate(V2)))
 U22(tt) -> tt
 U31(tt) -> tt
 U41(tt,V2) -> U42(isNeList(activate(V2)))
 U42(tt) -> tt
 U51(tt,V2) -> U52(isList(activate(V2)))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt,P) -> U72(isPal(activate(P)))
 U72(tt) -> tt
 U81(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(isList(activate(V1)),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isNeList(activate(V)))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(isList(activate(V1)),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(isNeList(activate(V1)),activate(V2))
 isNeList(V) -> U31(isQid(activate(V)))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> U71(isQid(activate(I)),activate(P))
 isNePal(V) -> U61(isQid(activate(V)))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U81(isNePal(activate(V)))
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
-> Usable rules:
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 e -> nu95u95e
 i -> nu95u95i
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X) = 0
[U21](X1,X2) = 0
[U22](X) = 0
[U31](X) = 0
[U41](X1,X2) = 0
[U42](X) = 0
[U51](X1,X2) = 0
[U52](X) = 0
[U61](X) = 0
[U71](X1,X2) = 0
[U72](X) = 0
[U81](X) = 0
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 0
[activate](X) = X
[e] = 1
[i] = 1
[isList](X) = 0
[isNeList](X) = 0
[isNePal](X) = 0
[isPal](X) = 0
[isQid](X) = 0
[nil] = 2
[o] = 2
[u] = 0
[fSNonEmpty] = 0
[nu95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[nu95u95a] = 0
[nu95u95e] = 1
[nu95u95i] = 1
[nu95u95nil] = 2
[nu95u95o] = 2
[nu95u95u] = 0
[tt] = 0
[U11Sharp](X) = 0
[U21Sharp](X1,X2) = 0
[U22Sharp](X) = 0
[U31Sharp](X) = 0
[U41Sharp](X1,X2) = 0
[U42Sharp](X) = 0
[U51Sharp](X1,X2) = 0
[U52Sharp](X) = 0
[U61Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U81Sharp](X) = 0
[U95U95](X1,X2) = 0
[A] = 0
[ACTIVATE](X) = 0
[E] = 0
[I] = 0
[ISLIST](X) = 2.X
[ISNELIST](X) = 2.X
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISQID](X) = 0
[NIL] = 0
[O] = 0
[U] = 0

Problem 1.4: 

SCC Processor:
-> Pairs:
 ISLIST(V) -> ISNELIST(activate(V))
 ISNELIST(nu95u95u95u95(V1,V2)) -> ISLIST(activate(V1))
 ISNELIST(nu95u95u95u95(V1,V2)) -> ISNELIST(activate(V1))
-> Rules:
 U11(tt) -> tt
 U21(tt,V2) -> U22(isList(activate(V2)))
 U22(tt) -> tt
 U31(tt) -> tt
 U41(tt,V2) -> U42(isNeList(activate(V2)))
 U42(tt) -> tt
 U51(tt,V2) -> U52(isList(activate(V2)))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt,P) -> U72(isPal(activate(P)))
 U72(tt) -> tt
 U81(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(isList(activate(V1)),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isNeList(activate(V)))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(isList(activate(V1)),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(isNeList(activate(V1)),activate(V2))
 isNeList(V) -> U31(isQid(activate(V)))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> U71(isQid(activate(I)),activate(P))
 isNePal(V) -> U61(isQid(activate(V)))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U81(isNePal(activate(V)))
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ISLIST(V) -> ISNELIST(activate(V))
 ISNELIST(nu95u95u95u95(V1,V2)) -> ISLIST(activate(V1))
 ISNELIST(nu95u95u95u95(V1,V2)) -> ISNELIST(activate(V1))
->->-> Rules:
 U11(tt) -> tt
 U21(tt,V2) -> U22(isList(activate(V2)))
 U22(tt) -> tt
 U31(tt) -> tt
 U41(tt,V2) -> U42(isNeList(activate(V2)))
 U42(tt) -> tt
 U51(tt,V2) -> U52(isList(activate(V2)))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt,P) -> U72(isPal(activate(P)))
 U72(tt) -> tt
 U81(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(isList(activate(V1)),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isNeList(activate(V)))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(isList(activate(V1)),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(isNeList(activate(V1)),activate(V2))
 isNeList(V) -> U31(isQid(activate(V)))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> U71(isQid(activate(I)),activate(P))
 isNePal(V) -> U61(isQid(activate(V)))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U81(isNePal(activate(V)))
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u

Problem 1.4: 

Reduction Pair Processor:
-> Pairs:
 ISLIST(V) -> ISNELIST(activate(V))
 ISNELIST(nu95u95u95u95(V1,V2)) -> ISLIST(activate(V1))
 ISNELIST(nu95u95u95u95(V1,V2)) -> ISNELIST(activate(V1))
-> Rules:
 U11(tt) -> tt
 U21(tt,V2) -> U22(isList(activate(V2)))
 U22(tt) -> tt
 U31(tt) -> tt
 U41(tt,V2) -> U42(isNeList(activate(V2)))
 U42(tt) -> tt
 U51(tt,V2) -> U52(isList(activate(V2)))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt,P) -> U72(isPal(activate(P)))
 U72(tt) -> tt
 U81(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(isList(activate(V1)),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isNeList(activate(V)))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(isList(activate(V1)),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(isNeList(activate(V1)),activate(V2))
 isNeList(V) -> U31(isQid(activate(V)))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> U71(isQid(activate(I)),activate(P))
 isNePal(V) -> U61(isQid(activate(V)))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U81(isNePal(activate(V)))
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
-> Usable rules:
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 e -> nu95u95e
 i -> nu95u95i
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X) = 0
[U21](X1,X2) = 0
[U22](X) = 0
[U31](X) = 0
[U41](X1,X2) = 0
[U42](X) = 0
[U51](X1,X2) = 0
[U52](X) = 0
[U61](X) = 0
[U71](X1,X2) = 0
[U72](X) = 0
[U81](X) = 0
[u95u95](X1,X2) = 2.X1 + X2 + 1
[a] = 2
[activate](X) = X
[e] = 1
[i] = 0
[isList](X) = 0
[isNeList](X) = 0
[isNePal](X) = 0
[isPal](X) = 0
[isQid](X) = 0
[nil] = 1
[o] = 1
[u] = 2
[fSNonEmpty] = 0
[nu95u95u95u95](X1,X2) = 2.X1 + X2 + 1
[nu95u95a] = 2
[nu95u95e] = 1
[nu95u95i] = 0
[nu95u95nil] = 1
[nu95u95o] = 1
[nu95u95u] = 2
[tt] = 0
[U11Sharp](X) = 0
[U21Sharp](X1,X2) = 0
[U22Sharp](X) = 0
[U31Sharp](X) = 0
[U41Sharp](X1,X2) = 0
[U42Sharp](X) = 0
[U51Sharp](X1,X2) = 0
[U52Sharp](X) = 0
[U61Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U81Sharp](X) = 0
[U95U95](X1,X2) = 0
[A] = 0
[ACTIVATE](X) = 0
[E] = 0
[I] = 0
[ISLIST](X) = 2.X + 2
[ISNELIST](X) = 2.X + 1
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISQID](X) = 0
[NIL] = 0
[O] = 0
[U] = 0

Problem 1.4: 

SCC Processor:
-> Pairs:
 ISNELIST(nu95u95u95u95(V1,V2)) -> ISLIST(activate(V1))
 ISNELIST(nu95u95u95u95(V1,V2)) -> ISNELIST(activate(V1))
-> Rules:
 U11(tt) -> tt
 U21(tt,V2) -> U22(isList(activate(V2)))
 U22(tt) -> tt
 U31(tt) -> tt
 U41(tt,V2) -> U42(isNeList(activate(V2)))
 U42(tt) -> tt
 U51(tt,V2) -> U52(isList(activate(V2)))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt,P) -> U72(isPal(activate(P)))
 U72(tt) -> tt
 U81(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(isList(activate(V1)),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isNeList(activate(V)))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(isList(activate(V1)),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(isNeList(activate(V1)),activate(V2))
 isNeList(V) -> U31(isQid(activate(V)))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> U71(isQid(activate(I)),activate(P))
 isNePal(V) -> U61(isQid(activate(V)))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U81(isNePal(activate(V)))
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ISNELIST(nu95u95u95u95(V1,V2)) -> ISNELIST(activate(V1))
->->-> Rules:
 U11(tt) -> tt
 U21(tt,V2) -> U22(isList(activate(V2)))
 U22(tt) -> tt
 U31(tt) -> tt
 U41(tt,V2) -> U42(isNeList(activate(V2)))
 U42(tt) -> tt
 U51(tt,V2) -> U52(isList(activate(V2)))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt,P) -> U72(isPal(activate(P)))
 U72(tt) -> tt
 U81(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(isList(activate(V1)),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isNeList(activate(V)))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(isList(activate(V1)),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(isNeList(activate(V1)),activate(V2))
 isNeList(V) -> U31(isQid(activate(V)))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> U71(isQid(activate(I)),activate(P))
 isNePal(V) -> U61(isQid(activate(V)))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U81(isNePal(activate(V)))
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u

Problem 1.4: 

Reduction Pair Processor:
-> Pairs:
 ISNELIST(nu95u95u95u95(V1,V2)) -> ISNELIST(activate(V1))
-> Rules:
 U11(tt) -> tt
 U21(tt,V2) -> U22(isList(activate(V2)))
 U22(tt) -> tt
 U31(tt) -> tt
 U41(tt,V2) -> U42(isNeList(activate(V2)))
 U42(tt) -> tt
 U51(tt,V2) -> U52(isList(activate(V2)))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt,P) -> U72(isPal(activate(P)))
 U72(tt) -> tt
 U81(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(isList(activate(V1)),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isNeList(activate(V)))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(isList(activate(V1)),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(isNeList(activate(V1)),activate(V2))
 isNeList(V) -> U31(isQid(activate(V)))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> U71(isQid(activate(I)),activate(P))
 isNePal(V) -> U61(isQid(activate(V)))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U81(isNePal(activate(V)))
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
-> Usable rules:
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 e -> nu95u95e
 i -> nu95u95i
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X) = 0
[U21](X1,X2) = 0
[U22](X) = 0
[U31](X) = 0
[U41](X1,X2) = 0
[U42](X) = 0
[U51](X1,X2) = 0
[U52](X) = 0
[U61](X) = 0
[U71](X1,X2) = 0
[U72](X) = 0
[U81](X) = 0
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 2
[activate](X) = 2.X + 1
[e] = 2
[i] = 0
[isList](X) = 0
[isNeList](X) = 0
[isNePal](X) = 0
[isPal](X) = 0
[isQid](X) = 0
[nil] = 2
[o] = 2
[u] = 2
[fSNonEmpty] = 0
[nu95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[nu95u95a] = 1
[nu95u95e] = 2
[nu95u95i] = 0
[nu95u95nil] = 2
[nu95u95o] = 2
[nu95u95u] = 1
[tt] = 0
[U11Sharp](X) = 0
[U21Sharp](X1,X2) = 0
[U22Sharp](X) = 0
[U31Sharp](X) = 0
[U41Sharp](X1,X2) = 0
[U42Sharp](X) = 0
[U51Sharp](X1,X2) = 0
[U52Sharp](X) = 0
[U61Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U81Sharp](X) = 0
[U95U95](X1,X2) = 0
[A] = 0
[ACTIVATE](X) = 0
[E] = 0
[I] = 0
[ISLIST](X) = 0
[ISNELIST](X) = 2.X
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISQID](X) = 0
[NIL] = 0
[O] = 0
[U] = 0

Problem 1.4: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 U11(tt) -> tt
 U21(tt,V2) -> U22(isList(activate(V2)))
 U22(tt) -> tt
 U31(tt) -> tt
 U41(tt,V2) -> U42(isNeList(activate(V2)))
 U42(tt) -> tt
 U51(tt,V2) -> U52(isList(activate(V2)))
 U52(tt) -> tt
 U61(tt) -> tt
 U71(tt,P) -> U72(isPal(activate(P)))
 U72(tt) -> tt
 U81(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(isList(activate(V1)),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isNeList(activate(V)))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(isList(activate(V1)),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(isNeList(activate(V1)),activate(V2))
 isNeList(V) -> U31(isQid(activate(V)))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> U71(isQid(activate(I)),activate(P))
 isNePal(V) -> U61(isQid(activate(V)))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U81(isNePal(activate(V)))
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
