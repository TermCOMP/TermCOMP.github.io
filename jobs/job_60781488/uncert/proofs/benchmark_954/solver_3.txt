YES

Problem 1: 

(VAR vu95NonEmpty X)
(RULES
active(g(X)) -> mark(h(X))
active(h(d)) -> mark(g(c))
active(c) -> mark(d)
g(active(X)) -> g(X)
g(mark(X)) -> g(X)
h(active(X)) -> h(X)
h(mark(X)) -> h(X)
mark(g(X)) -> active(g(X))
mark(h(X)) -> active(h(X))
mark(c) -> active(c)
mark(d) -> active(d)
)


Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 ACTIVE(g(X)) -> H(X)
 ACTIVE(g(X)) -> MARK(h(X))
 ACTIVE(h(d)) -> MARK(g(c))
 ACTIVE(c) -> MARK(d)
 G(active(X)) -> G(X)
 G(mark(X)) -> G(X)
 H(active(X)) -> H(X)
 H(mark(X)) -> H(X)
 MARK(g(X)) -> ACTIVE(g(X))
 MARK(h(X)) -> ACTIVE(h(X))
 MARK(c) -> ACTIVE(c)
-> Rules:
 active(g(X)) -> mark(h(X))
 active(h(d)) -> mark(g(c))
 active(c) -> mark(d)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(X))
 mark(c) -> active(c)
 mark(d) -> active(d)

Problem 1: 

SCC Processor:
-> Pairs:
 ACTIVE(g(X)) -> H(X)
 ACTIVE(g(X)) -> MARK(h(X))
 ACTIVE(h(d)) -> MARK(g(c))
 ACTIVE(c) -> MARK(d)
 G(active(X)) -> G(X)
 G(mark(X)) -> G(X)
 H(active(X)) -> H(X)
 H(mark(X)) -> H(X)
 MARK(g(X)) -> ACTIVE(g(X))
 MARK(h(X)) -> ACTIVE(h(X))
 MARK(c) -> ACTIVE(c)
-> Rules:
 active(g(X)) -> mark(h(X))
 active(h(d)) -> mark(g(c))
 active(c) -> mark(d)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(X))
 mark(c) -> active(c)
 mark(d) -> active(d)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 H(active(X)) -> H(X)
 H(mark(X)) -> H(X)
->->-> Rules:
 active(g(X)) -> mark(h(X))
 active(h(d)) -> mark(g(c))
 active(c) -> mark(d)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(X))
 mark(c) -> active(c)
 mark(d) -> active(d)
->->Cycle:
->->-> Pairs:
 G(active(X)) -> G(X)
 G(mark(X)) -> G(X)
->->-> Rules:
 active(g(X)) -> mark(h(X))
 active(h(d)) -> mark(g(c))
 active(c) -> mark(d)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(X))
 mark(c) -> active(c)
 mark(d) -> active(d)
->->Cycle:
->->-> Pairs:
 ACTIVE(g(X)) -> MARK(h(X))
 ACTIVE(h(d)) -> MARK(g(c))
 MARK(g(X)) -> ACTIVE(g(X))
 MARK(h(X)) -> ACTIVE(h(X))
->->-> Rules:
 active(g(X)) -> mark(h(X))
 active(h(d)) -> mark(g(c))
 active(c) -> mark(d)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(X))
 mark(c) -> active(c)
 mark(d) -> active(d)


The problem is decomposed in 3 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 H(active(X)) -> H(X)
 H(mark(X)) -> H(X)
-> Rules:
 active(g(X)) -> mark(h(X))
 active(h(d)) -> mark(g(c))
 active(c) -> mark(d)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(X))
 mark(c) -> active(c)
 mark(d) -> active(d)
->Projection:
 pi(H) = 1

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(g(X)) -> mark(h(X))
 active(h(d)) -> mark(g(c))
 active(c) -> mark(d)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(X))
 mark(c) -> active(c)
 mark(d) -> active(d)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Subterm Processor:
-> Pairs:
 G(active(X)) -> G(X)
 G(mark(X)) -> G(X)
-> Rules:
 active(g(X)) -> mark(h(X))
 active(h(d)) -> mark(g(c))
 active(c) -> mark(d)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(X))
 mark(c) -> active(c)
 mark(d) -> active(d)
->Projection:
 pi(G) = 1

Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(g(X)) -> mark(h(X))
 active(h(d)) -> mark(g(c))
 active(c) -> mark(d)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(X))
 mark(c) -> active(c)
 mark(d) -> active(d)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Reduction Pair Processor:
-> Pairs:
 ACTIVE(g(X)) -> MARK(h(X))
 ACTIVE(h(d)) -> MARK(g(c))
 MARK(g(X)) -> ACTIVE(g(X))
 MARK(h(X)) -> ACTIVE(h(X))
-> Rules:
 active(g(X)) -> mark(h(X))
 active(h(d)) -> mark(g(c))
 active(c) -> mark(d)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(X))
 mark(c) -> active(c)
 mark(d) -> active(d)
-> Usable rules:
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[active](X) = 2.X
[g](X) = 2.X + 2
[h](X) = 2.X + 1
[mark](X) = 2.X
[c] = 1
[d] = 2
[fSNonEmpty] = 0
[ACTIVE](X) = 2.X + 2
[G](X) = 0
[H](X) = 0
[MARK](X) = 2.X + 2

Problem 1.3: 

SCC Processor:
-> Pairs:
 ACTIVE(h(d)) -> MARK(g(c))
 MARK(g(X)) -> ACTIVE(g(X))
 MARK(h(X)) -> ACTIVE(h(X))
-> Rules:
 active(g(X)) -> mark(h(X))
 active(h(d)) -> mark(g(c))
 active(c) -> mark(d)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(X))
 mark(c) -> active(c)
 mark(d) -> active(d)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(h(d)) -> MARK(g(c))
 MARK(g(X)) -> ACTIVE(g(X))
->->-> Rules:
 active(g(X)) -> mark(h(X))
 active(h(d)) -> mark(g(c))
 active(c) -> mark(d)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(X))
 mark(c) -> active(c)
 mark(d) -> active(d)

Problem 1.3: 

Reduction Pair Processor:
-> Pairs:
 ACTIVE(h(d)) -> MARK(g(c))
 MARK(g(X)) -> ACTIVE(g(X))
-> Rules:
 active(g(X)) -> mark(h(X))
 active(h(d)) -> mark(g(c))
 active(c) -> mark(d)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(X))
 mark(c) -> active(c)
 mark(d) -> active(d)
-> Usable rules:
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[active](X) = 2.X
[g](X) = X + 1
[h](X) = 2.X
[mark](X) = X
[c] = 2
[d] = 2
[fSNonEmpty] = 0
[ACTIVE](X) = 2.X + 1
[G](X) = 0
[H](X) = 0
[MARK](X) = 2.X + 2

Problem 1.3: 

SCC Processor:
-> Pairs:
 MARK(g(X)) -> ACTIVE(g(X))
-> Rules:
 active(g(X)) -> mark(h(X))
 active(h(d)) -> mark(g(c))
 active(c) -> mark(d)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(X))
 mark(c) -> active(c)
 mark(d) -> active(d)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
