NO
proof of /hpcwork/ff862203/termcomp25/benchmarks/gq7Fk.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be disproven:

(0) QTRS
(1) Overlay + Local Confluence [EQUIVALENT, 0 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 0 ms]
(4) QDP
(5) DependencyGraphProof [EQUIVALENT, 0 ms]
(6) AND
    (7) QDP
        (8) UsableRulesProof [EQUIVALENT, 0 ms]
        (9) QDP
        (10) QReductionProof [EQUIVALENT, 0 ms]
        (11) QDP
        (12) TransformationProof [EQUIVALENT, 0 ms]
        (13) QDP
        (14) TransformationProof [EQUIVALENT, 0 ms]
        (15) QDP
        (16) NonTerminationLoopProof [COMPLETE, 0 ms]
        (17) NO
    (18) QDP
        (19) UsableRulesProof [EQUIVALENT, 0 ms]
        (20) QDP
        (21) QReductionProof [EQUIVALENT, 0 ms]
        (22) QDP
        (23) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (24) YES
    (25) QDP
        (26) UsableRulesProof [EQUIVALENT, 0 ms]
        (27) QDP
        (28) QReductionProof [EQUIVALENT, 0 ms]
        (29) QDP
        (30) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (31) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   and(true, X) -> X
   and(false, Y) -> false
   if(true, X, Y) -> X
   if(false, X, Y) -> Y
   add(0, X) -> X
   add(s(X), Y) -> s(add(X, Y))
   first(0, X) -> nil
   first(s(X), cons(Y, Z)) -> cons(Y, first(X, Z))
   from(X) -> cons(X, from(s(X)))

Q is empty.

----------------------------------------

(1) Overlay + Local Confluence (EQUIVALENT)
The TRS is overlay and locally confluent. By [NOC] we can switch to innermost.
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   and(true, X) -> X
   and(false, Y) -> false
   if(true, X, Y) -> X
   if(false, X, Y) -> Y
   add(0, X) -> X
   add(s(X), Y) -> s(add(X, Y))
   first(0, X) -> nil
   first(s(X), cons(Y, Z)) -> cons(Y, first(X, Z))
   from(X) -> cons(X, from(s(X)))

The set Q consists of the following terms:

   and(true, x0)
   and(false, x0)
   if(true, x0, x1)
   if(false, x0, x1)
   add(0, x0)
   add(s(x0), x1)
   first(0, x0)
   first(s(x0), cons(x1, x2))
   from(x0)


----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ADD(s(X), Y) -> ADD(X, Y)
   FIRST(s(X), cons(Y, Z)) -> FIRST(X, Z)
   FROM(X) -> FROM(s(X))

The TRS R consists of the following rules:

   and(true, X) -> X
   and(false, Y) -> false
   if(true, X, Y) -> X
   if(false, X, Y) -> Y
   add(0, X) -> X
   add(s(X), Y) -> s(add(X, Y))
   first(0, X) -> nil
   first(s(X), cons(Y, Z)) -> cons(Y, first(X, Z))
   from(X) -> cons(X, from(s(X)))

The set Q consists of the following terms:

   and(true, x0)
   and(false, x0)
   if(true, x0, x1)
   if(false, x0, x1)
   add(0, x0)
   add(s(x0), x1)
   first(0, x0)
   first(s(x0), cons(x1, x2))
   from(x0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 3 SCCs.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   FROM(X) -> FROM(s(X))

The TRS R consists of the following rules:

   and(true, X) -> X
   and(false, Y) -> false
   if(true, X, Y) -> X
   if(false, X, Y) -> Y
   add(0, X) -> X
   add(s(X), Y) -> s(add(X, Y))
   first(0, X) -> nil
   first(s(X), cons(Y, Z)) -> cons(Y, first(X, Z))
   from(X) -> cons(X, from(s(X)))

The set Q consists of the following terms:

   and(true, x0)
   and(false, x0)
   if(true, x0, x1)
   if(false, x0, x1)
   add(0, x0)
   add(s(x0), x1)
   first(0, x0)
   first(s(x0), cons(x1, x2))
   from(x0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(8) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(9)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   FROM(X) -> FROM(s(X))

R is empty.
The set Q consists of the following terms:

   and(true, x0)
   and(false, x0)
   if(true, x0, x1)
   if(false, x0, x1)
   add(0, x0)
   add(s(x0), x1)
   first(0, x0)
   first(s(x0), cons(x1, x2))
   from(x0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(10) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   and(true, x0)
   and(false, x0)
   if(true, x0, x1)
   if(false, x0, x1)
   add(0, x0)
   add(s(x0), x1)
   first(0, x0)
   first(s(x0), cons(x1, x2))
   from(x0)


----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   FROM(X) -> FROM(s(X))

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(12) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule FROM(X) -> FROM(s(X)) we obtained the following new rules [LPAR04]:

   (FROM(s(z0)) -> FROM(s(s(z0))),FROM(s(z0)) -> FROM(s(s(z0))))


----------------------------------------

(13)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   FROM(s(z0)) -> FROM(s(s(z0)))

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(14) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule FROM(s(z0)) -> FROM(s(s(z0))) we obtained the following new rules [LPAR04]:

   (FROM(s(s(z0))) -> FROM(s(s(s(z0)))),FROM(s(s(z0))) -> FROM(s(s(s(z0)))))


----------------------------------------

(15)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   FROM(s(s(z0))) -> FROM(s(s(s(z0))))

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(16) NonTerminationLoopProof (COMPLETE)
We used the non-termination processor [FROCOS05] to show that the DP problem is infinite.
Found a loop by semiunifying a rule from P directly.

s = FROM(s(s(z0))) evaluates to  t =FROM(s(s(s(z0))))

Thus s starts an infinite chain as s semiunifies with t with the following substitutions:
* Matcher: [z0 / s(z0)]
* Semiunifier: [ ]

--------------------------------------------------------------------------------
Rewriting sequence

The DP semiunifies directly so there is only one rewrite step from FROM(s(s(z0))) to FROM(s(s(s(z0)))).




----------------------------------------

(17)
NO

----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   FIRST(s(X), cons(Y, Z)) -> FIRST(X, Z)

The TRS R consists of the following rules:

   and(true, X) -> X
   and(false, Y) -> false
   if(true, X, Y) -> X
   if(false, X, Y) -> Y
   add(0, X) -> X
   add(s(X), Y) -> s(add(X, Y))
   first(0, X) -> nil
   first(s(X), cons(Y, Z)) -> cons(Y, first(X, Z))
   from(X) -> cons(X, from(s(X)))

The set Q consists of the following terms:

   and(true, x0)
   and(false, x0)
   if(true, x0, x1)
   if(false, x0, x1)
   add(0, x0)
   add(s(x0), x1)
   first(0, x0)
   first(s(x0), cons(x1, x2))
   from(x0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(20)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   FIRST(s(X), cons(Y, Z)) -> FIRST(X, Z)

R is empty.
The set Q consists of the following terms:

   and(true, x0)
   and(false, x0)
   if(true, x0, x1)
   if(false, x0, x1)
   add(0, x0)
   add(s(x0), x1)
   first(0, x0)
   first(s(x0), cons(x1, x2))
   from(x0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(21) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   and(true, x0)
   and(false, x0)
   if(true, x0, x1)
   if(false, x0, x1)
   add(0, x0)
   add(s(x0), x1)
   first(0, x0)
   first(s(x0), cons(x1, x2))
   from(x0)


----------------------------------------

(22)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   FIRST(s(X), cons(Y, Z)) -> FIRST(X, Z)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(23) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*FIRST(s(X), cons(Y, Z)) -> FIRST(X, Z)
The graph contains the following edges 1 > 1, 2 > 2


----------------------------------------

(24)
YES

----------------------------------------

(25)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ADD(s(X), Y) -> ADD(X, Y)

The TRS R consists of the following rules:

   and(true, X) -> X
   and(false, Y) -> false
   if(true, X, Y) -> X
   if(false, X, Y) -> Y
   add(0, X) -> X
   add(s(X), Y) -> s(add(X, Y))
   first(0, X) -> nil
   first(s(X), cons(Y, Z)) -> cons(Y, first(X, Z))
   from(X) -> cons(X, from(s(X)))

The set Q consists of the following terms:

   and(true, x0)
   and(false, x0)
   if(true, x0, x1)
   if(false, x0, x1)
   add(0, x0)
   add(s(x0), x1)
   first(0, x0)
   first(s(x0), cons(x1, x2))
   from(x0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(26) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(27)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ADD(s(X), Y) -> ADD(X, Y)

R is empty.
The set Q consists of the following terms:

   and(true, x0)
   and(false, x0)
   if(true, x0, x1)
   if(false, x0, x1)
   add(0, x0)
   add(s(x0), x1)
   first(0, x0)
   first(s(x0), cons(x1, x2))
   from(x0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(28) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   and(true, x0)
   and(false, x0)
   if(true, x0, x1)
   if(false, x0, x1)
   add(0, x0)
   add(s(x0), x1)
   first(0, x0)
   first(s(x0), cons(x1, x2))
   from(x0)


----------------------------------------

(29)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ADD(s(X), Y) -> ADD(X, Y)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(30) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*ADD(s(X), Y) -> ADD(X, Y)
The graph contains the following edges 1 > 1, 2 >= 2


----------------------------------------

(31)
YES
