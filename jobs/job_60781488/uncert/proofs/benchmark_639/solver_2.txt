YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/AYBis.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) AAECC Innermost [EQUIVALENT, 0 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 0 ms]
(4) QDP
(5) DependencyGraphProof [EQUIVALENT, 0 ms]
(6) AND
    (7) QDP
        (8) UsableRulesProof [EQUIVALENT, 0 ms]
        (9) QDP
        (10) QReductionProof [EQUIVALENT, 0 ms]
        (11) QDP
        (12) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (13) YES
    (14) QDP
        (15) UsableRulesProof [EQUIVALENT, 0 ms]
        (16) QDP
        (17) QReductionProof [EQUIVALENT, 0 ms]
        (18) QDP
        (19) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (20) YES
    (21) QDP
        (22) UsableRulesProof [EQUIVALENT, 0 ms]
        (23) QDP
        (24) QReductionProof [EQUIVALENT, 0 ms]
        (25) QDP
        (26) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (27) YES
    (28) QDP
        (29) UsableRulesProof [EQUIVALENT, 0 ms]
        (30) QDP
        (31) QReductionProof [EQUIVALENT, 0 ms]
        (32) QDP
        (33) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (34) YES
    (35) QDP
        (36) UsableRulesProof [EQUIVALENT, 0 ms]
        (37) QDP
        (38) QReductionProof [EQUIVALENT, 0 ms]
        (39) QDP
        (40) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (41) YES
    (42) QDP
        (43) UsableRulesProof [EQUIVALENT, 0 ms]
        (44) QDP
        (45) QReductionProof [EQUIVALENT, 0 ms]
        (46) QDP
        (47) TransformationProof [EQUIVALENT, 0 ms]
        (48) QDP
        (49) TransformationProof [EQUIVALENT, 0 ms]
        (50) QDP
        (51) TransformationProof [EQUIVALENT, 0 ms]
        (52) QDP
        (53) TransformationProof [EQUIVALENT, 0 ms]
        (54) QDP
        (55) TransformationProof [EQUIVALENT, 0 ms]
        (56) QDP
        (57) QDPOrderProof [EQUIVALENT, 0 ms]
        (58) QDP
        (59) PisEmptyProof [EQUIVALENT, 0 ms]
        (60) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   min(0, y) -> 0
   min(x, 0) -> 0
   min(s(x), s(y)) -> s(min(x, y))
   max(0, y) -> y
   max(x, 0) -> x
   max(s(x), s(y)) -> s(max(x, y))
   +(0, y) -> y
   +(s(x), y) -> s(+(x, y))
   -(x, 0) -> x
   -(s(x), s(y)) -> -(x, y)
   *(x, 0) -> 0
   *(x, s(y)) -> +(x, *(x, y))
   p(s(x)) -> x
   f(s(x), s(y)) -> f(-(min(s(x), s(y)), max(s(x), s(y))), *(s(x), s(y)))

Q is empty.

----------------------------------------

(1) AAECC Innermost (EQUIVALENT)
We have applied [NOC,AAECCNOC] to switch to innermost. The TRS R 1 is 
   min(x, 0) -> 0
   min(s(x), s(y)) -> s(min(x, y))
   max(0, y) -> y
   max(x, 0) -> x
   max(s(x), s(y)) -> s(max(x, y))
   +(0, y) -> y
   +(s(x), y) -> s(+(x, y))
   -(x, 0) -> x
   -(s(x), s(y)) -> -(x, y)
   *(x, 0) -> 0
   *(x, s(y)) -> +(x, *(x, y))
   p(s(x)) -> x
   min(0, y) -> 0

The TRS R 2 is 
   f(s(x), s(y)) -> f(-(min(s(x), s(y)), max(s(x), s(y))), *(s(x), s(y)))

The signature Sigma is {f_2}
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   min(0, y) -> 0
   min(x, 0) -> 0
   min(s(x), s(y)) -> s(min(x, y))
   max(0, y) -> y
   max(x, 0) -> x
   max(s(x), s(y)) -> s(max(x, y))
   +(0, y) -> y
   +(s(x), y) -> s(+(x, y))
   -(x, 0) -> x
   -(s(x), s(y)) -> -(x, y)
   *(x, 0) -> 0
   *(x, s(y)) -> +(x, *(x, y))
   p(s(x)) -> x
   f(s(x), s(y)) -> f(-(min(s(x), s(y)), max(s(x), s(y))), *(s(x), s(y)))

The set Q consists of the following terms:

   min(0, x0)
   min(x0, 0)
   min(s(x0), s(x1))
   max(0, x0)
   max(x0, 0)
   max(s(x0), s(x1))
   +(0, x0)
   +(s(x0), x1)
   -(x0, 0)
   -(s(x0), s(x1))
   *(x0, 0)
   *(x0, s(x1))
   p(s(x0))
   f(s(x0), s(x1))


----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MIN(s(x), s(y)) -> MIN(x, y)
   MAX(s(x), s(y)) -> MAX(x, y)
   +^1(s(x), y) -> +^1(x, y)
   -^1(s(x), s(y)) -> -^1(x, y)
   *^1(x, s(y)) -> +^1(x, *(x, y))
   *^1(x, s(y)) -> *^1(x, y)
   F(s(x), s(y)) -> F(-(min(s(x), s(y)), max(s(x), s(y))), *(s(x), s(y)))
   F(s(x), s(y)) -> -^1(min(s(x), s(y)), max(s(x), s(y)))
   F(s(x), s(y)) -> MIN(s(x), s(y))
   F(s(x), s(y)) -> MAX(s(x), s(y))
   F(s(x), s(y)) -> *^1(s(x), s(y))

The TRS R consists of the following rules:

   min(0, y) -> 0
   min(x, 0) -> 0
   min(s(x), s(y)) -> s(min(x, y))
   max(0, y) -> y
   max(x, 0) -> x
   max(s(x), s(y)) -> s(max(x, y))
   +(0, y) -> y
   +(s(x), y) -> s(+(x, y))
   -(x, 0) -> x
   -(s(x), s(y)) -> -(x, y)
   *(x, 0) -> 0
   *(x, s(y)) -> +(x, *(x, y))
   p(s(x)) -> x
   f(s(x), s(y)) -> f(-(min(s(x), s(y)), max(s(x), s(y))), *(s(x), s(y)))

The set Q consists of the following terms:

   min(0, x0)
   min(x0, 0)
   min(s(x0), s(x1))
   max(0, x0)
   max(x0, 0)
   max(s(x0), s(x1))
   +(0, x0)
   +(s(x0), x1)
   -(x0, 0)
   -(s(x0), s(x1))
   *(x0, 0)
   *(x0, s(x1))
   p(s(x0))
   f(s(x0), s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 6 SCCs with 5 less nodes.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   -^1(s(x), s(y)) -> -^1(x, y)

The TRS R consists of the following rules:

   min(0, y) -> 0
   min(x, 0) -> 0
   min(s(x), s(y)) -> s(min(x, y))
   max(0, y) -> y
   max(x, 0) -> x
   max(s(x), s(y)) -> s(max(x, y))
   +(0, y) -> y
   +(s(x), y) -> s(+(x, y))
   -(x, 0) -> x
   -(s(x), s(y)) -> -(x, y)
   *(x, 0) -> 0
   *(x, s(y)) -> +(x, *(x, y))
   p(s(x)) -> x
   f(s(x), s(y)) -> f(-(min(s(x), s(y)), max(s(x), s(y))), *(s(x), s(y)))

The set Q consists of the following terms:

   min(0, x0)
   min(x0, 0)
   min(s(x0), s(x1))
   max(0, x0)
   max(x0, 0)
   max(s(x0), s(x1))
   +(0, x0)
   +(s(x0), x1)
   -(x0, 0)
   -(s(x0), s(x1))
   *(x0, 0)
   *(x0, s(x1))
   p(s(x0))
   f(s(x0), s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(8) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(9)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   -^1(s(x), s(y)) -> -^1(x, y)

R is empty.
The set Q consists of the following terms:

   min(0, x0)
   min(x0, 0)
   min(s(x0), s(x1))
   max(0, x0)
   max(x0, 0)
   max(s(x0), s(x1))
   +(0, x0)
   +(s(x0), x1)
   -(x0, 0)
   -(s(x0), s(x1))
   *(x0, 0)
   *(x0, s(x1))
   p(s(x0))
   f(s(x0), s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(10) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   min(0, x0)
   min(x0, 0)
   min(s(x0), s(x1))
   max(0, x0)
   max(x0, 0)
   max(s(x0), s(x1))
   +(0, x0)
   +(s(x0), x1)
   -(x0, 0)
   -(s(x0), s(x1))
   *(x0, 0)
   *(x0, s(x1))
   p(s(x0))
   f(s(x0), s(x1))


----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   -^1(s(x), s(y)) -> -^1(x, y)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(12) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*-^1(s(x), s(y)) -> -^1(x, y)
The graph contains the following edges 1 > 1, 2 > 2


----------------------------------------

(13)
YES

----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   +^1(s(x), y) -> +^1(x, y)

The TRS R consists of the following rules:

   min(0, y) -> 0
   min(x, 0) -> 0
   min(s(x), s(y)) -> s(min(x, y))
   max(0, y) -> y
   max(x, 0) -> x
   max(s(x), s(y)) -> s(max(x, y))
   +(0, y) -> y
   +(s(x), y) -> s(+(x, y))
   -(x, 0) -> x
   -(s(x), s(y)) -> -(x, y)
   *(x, 0) -> 0
   *(x, s(y)) -> +(x, *(x, y))
   p(s(x)) -> x
   f(s(x), s(y)) -> f(-(min(s(x), s(y)), max(s(x), s(y))), *(s(x), s(y)))

The set Q consists of the following terms:

   min(0, x0)
   min(x0, 0)
   min(s(x0), s(x1))
   max(0, x0)
   max(x0, 0)
   max(s(x0), s(x1))
   +(0, x0)
   +(s(x0), x1)
   -(x0, 0)
   -(s(x0), s(x1))
   *(x0, 0)
   *(x0, s(x1))
   p(s(x0))
   f(s(x0), s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   +^1(s(x), y) -> +^1(x, y)

R is empty.
The set Q consists of the following terms:

   min(0, x0)
   min(x0, 0)
   min(s(x0), s(x1))
   max(0, x0)
   max(x0, 0)
   max(s(x0), s(x1))
   +(0, x0)
   +(s(x0), x1)
   -(x0, 0)
   -(s(x0), s(x1))
   *(x0, 0)
   *(x0, s(x1))
   p(s(x0))
   f(s(x0), s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   min(0, x0)
   min(x0, 0)
   min(s(x0), s(x1))
   max(0, x0)
   max(x0, 0)
   max(s(x0), s(x1))
   +(0, x0)
   +(s(x0), x1)
   -(x0, 0)
   -(s(x0), s(x1))
   *(x0, 0)
   *(x0, s(x1))
   p(s(x0))
   f(s(x0), s(x1))


----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   +^1(s(x), y) -> +^1(x, y)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*+^1(s(x), y) -> +^1(x, y)
The graph contains the following edges 1 > 1, 2 >= 2


----------------------------------------

(20)
YES

----------------------------------------

(21)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   *^1(x, s(y)) -> *^1(x, y)

The TRS R consists of the following rules:

   min(0, y) -> 0
   min(x, 0) -> 0
   min(s(x), s(y)) -> s(min(x, y))
   max(0, y) -> y
   max(x, 0) -> x
   max(s(x), s(y)) -> s(max(x, y))
   +(0, y) -> y
   +(s(x), y) -> s(+(x, y))
   -(x, 0) -> x
   -(s(x), s(y)) -> -(x, y)
   *(x, 0) -> 0
   *(x, s(y)) -> +(x, *(x, y))
   p(s(x)) -> x
   f(s(x), s(y)) -> f(-(min(s(x), s(y)), max(s(x), s(y))), *(s(x), s(y)))

The set Q consists of the following terms:

   min(0, x0)
   min(x0, 0)
   min(s(x0), s(x1))
   max(0, x0)
   max(x0, 0)
   max(s(x0), s(x1))
   +(0, x0)
   +(s(x0), x1)
   -(x0, 0)
   -(s(x0), s(x1))
   *(x0, 0)
   *(x0, s(x1))
   p(s(x0))
   f(s(x0), s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(22) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(23)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   *^1(x, s(y)) -> *^1(x, y)

R is empty.
The set Q consists of the following terms:

   min(0, x0)
   min(x0, 0)
   min(s(x0), s(x1))
   max(0, x0)
   max(x0, 0)
   max(s(x0), s(x1))
   +(0, x0)
   +(s(x0), x1)
   -(x0, 0)
   -(s(x0), s(x1))
   *(x0, 0)
   *(x0, s(x1))
   p(s(x0))
   f(s(x0), s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(24) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   min(0, x0)
   min(x0, 0)
   min(s(x0), s(x1))
   max(0, x0)
   max(x0, 0)
   max(s(x0), s(x1))
   +(0, x0)
   +(s(x0), x1)
   -(x0, 0)
   -(s(x0), s(x1))
   *(x0, 0)
   *(x0, s(x1))
   p(s(x0))
   f(s(x0), s(x1))


----------------------------------------

(25)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   *^1(x, s(y)) -> *^1(x, y)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(26) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
**^1(x, s(y)) -> *^1(x, y)
The graph contains the following edges 1 >= 1, 2 > 2


----------------------------------------

(27)
YES

----------------------------------------

(28)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MAX(s(x), s(y)) -> MAX(x, y)

The TRS R consists of the following rules:

   min(0, y) -> 0
   min(x, 0) -> 0
   min(s(x), s(y)) -> s(min(x, y))
   max(0, y) -> y
   max(x, 0) -> x
   max(s(x), s(y)) -> s(max(x, y))
   +(0, y) -> y
   +(s(x), y) -> s(+(x, y))
   -(x, 0) -> x
   -(s(x), s(y)) -> -(x, y)
   *(x, 0) -> 0
   *(x, s(y)) -> +(x, *(x, y))
   p(s(x)) -> x
   f(s(x), s(y)) -> f(-(min(s(x), s(y)), max(s(x), s(y))), *(s(x), s(y)))

The set Q consists of the following terms:

   min(0, x0)
   min(x0, 0)
   min(s(x0), s(x1))
   max(0, x0)
   max(x0, 0)
   max(s(x0), s(x1))
   +(0, x0)
   +(s(x0), x1)
   -(x0, 0)
   -(s(x0), s(x1))
   *(x0, 0)
   *(x0, s(x1))
   p(s(x0))
   f(s(x0), s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(29) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(30)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MAX(s(x), s(y)) -> MAX(x, y)

R is empty.
The set Q consists of the following terms:

   min(0, x0)
   min(x0, 0)
   min(s(x0), s(x1))
   max(0, x0)
   max(x0, 0)
   max(s(x0), s(x1))
   +(0, x0)
   +(s(x0), x1)
   -(x0, 0)
   -(s(x0), s(x1))
   *(x0, 0)
   *(x0, s(x1))
   p(s(x0))
   f(s(x0), s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(31) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   min(0, x0)
   min(x0, 0)
   min(s(x0), s(x1))
   max(0, x0)
   max(x0, 0)
   max(s(x0), s(x1))
   +(0, x0)
   +(s(x0), x1)
   -(x0, 0)
   -(s(x0), s(x1))
   *(x0, 0)
   *(x0, s(x1))
   p(s(x0))
   f(s(x0), s(x1))


----------------------------------------

(32)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MAX(s(x), s(y)) -> MAX(x, y)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(33) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*MAX(s(x), s(y)) -> MAX(x, y)
The graph contains the following edges 1 > 1, 2 > 2


----------------------------------------

(34)
YES

----------------------------------------

(35)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MIN(s(x), s(y)) -> MIN(x, y)

The TRS R consists of the following rules:

   min(0, y) -> 0
   min(x, 0) -> 0
   min(s(x), s(y)) -> s(min(x, y))
   max(0, y) -> y
   max(x, 0) -> x
   max(s(x), s(y)) -> s(max(x, y))
   +(0, y) -> y
   +(s(x), y) -> s(+(x, y))
   -(x, 0) -> x
   -(s(x), s(y)) -> -(x, y)
   *(x, 0) -> 0
   *(x, s(y)) -> +(x, *(x, y))
   p(s(x)) -> x
   f(s(x), s(y)) -> f(-(min(s(x), s(y)), max(s(x), s(y))), *(s(x), s(y)))

The set Q consists of the following terms:

   min(0, x0)
   min(x0, 0)
   min(s(x0), s(x1))
   max(0, x0)
   max(x0, 0)
   max(s(x0), s(x1))
   +(0, x0)
   +(s(x0), x1)
   -(x0, 0)
   -(s(x0), s(x1))
   *(x0, 0)
   *(x0, s(x1))
   p(s(x0))
   f(s(x0), s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(36) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(37)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MIN(s(x), s(y)) -> MIN(x, y)

R is empty.
The set Q consists of the following terms:

   min(0, x0)
   min(x0, 0)
   min(s(x0), s(x1))
   max(0, x0)
   max(x0, 0)
   max(s(x0), s(x1))
   +(0, x0)
   +(s(x0), x1)
   -(x0, 0)
   -(s(x0), s(x1))
   *(x0, 0)
   *(x0, s(x1))
   p(s(x0))
   f(s(x0), s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(38) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   min(0, x0)
   min(x0, 0)
   min(s(x0), s(x1))
   max(0, x0)
   max(x0, 0)
   max(s(x0), s(x1))
   +(0, x0)
   +(s(x0), x1)
   -(x0, 0)
   -(s(x0), s(x1))
   *(x0, 0)
   *(x0, s(x1))
   p(s(x0))
   f(s(x0), s(x1))


----------------------------------------

(39)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MIN(s(x), s(y)) -> MIN(x, y)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(40) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*MIN(s(x), s(y)) -> MIN(x, y)
The graph contains the following edges 1 > 1, 2 > 2


----------------------------------------

(41)
YES

----------------------------------------

(42)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(x), s(y)) -> F(-(min(s(x), s(y)), max(s(x), s(y))), *(s(x), s(y)))

The TRS R consists of the following rules:

   min(0, y) -> 0
   min(x, 0) -> 0
   min(s(x), s(y)) -> s(min(x, y))
   max(0, y) -> y
   max(x, 0) -> x
   max(s(x), s(y)) -> s(max(x, y))
   +(0, y) -> y
   +(s(x), y) -> s(+(x, y))
   -(x, 0) -> x
   -(s(x), s(y)) -> -(x, y)
   *(x, 0) -> 0
   *(x, s(y)) -> +(x, *(x, y))
   p(s(x)) -> x
   f(s(x), s(y)) -> f(-(min(s(x), s(y)), max(s(x), s(y))), *(s(x), s(y)))

The set Q consists of the following terms:

   min(0, x0)
   min(x0, 0)
   min(s(x0), s(x1))
   max(0, x0)
   max(x0, 0)
   max(s(x0), s(x1))
   +(0, x0)
   +(s(x0), x1)
   -(x0, 0)
   -(s(x0), s(x1))
   *(x0, 0)
   *(x0, s(x1))
   p(s(x0))
   f(s(x0), s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(43) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(44)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(x), s(y)) -> F(-(min(s(x), s(y)), max(s(x), s(y))), *(s(x), s(y)))

The TRS R consists of the following rules:

   min(s(x), s(y)) -> s(min(x, y))
   max(s(x), s(y)) -> s(max(x, y))
   -(x, 0) -> x
   -(s(x), s(y)) -> -(x, y)
   *(x, s(y)) -> +(x, *(x, y))
   *(x, 0) -> 0
   +(0, y) -> y
   +(s(x), y) -> s(+(x, y))
   max(0, y) -> y
   max(x, 0) -> x
   min(0, y) -> 0
   min(x, 0) -> 0

The set Q consists of the following terms:

   min(0, x0)
   min(x0, 0)
   min(s(x0), s(x1))
   max(0, x0)
   max(x0, 0)
   max(s(x0), s(x1))
   +(0, x0)
   +(s(x0), x1)
   -(x0, 0)
   -(s(x0), s(x1))
   *(x0, 0)
   *(x0, s(x1))
   p(s(x0))
   f(s(x0), s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(45) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   p(s(x0))
   f(s(x0), s(x1))


----------------------------------------

(46)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(x), s(y)) -> F(-(min(s(x), s(y)), max(s(x), s(y))), *(s(x), s(y)))

The TRS R consists of the following rules:

   min(s(x), s(y)) -> s(min(x, y))
   max(s(x), s(y)) -> s(max(x, y))
   -(x, 0) -> x
   -(s(x), s(y)) -> -(x, y)
   *(x, s(y)) -> +(x, *(x, y))
   *(x, 0) -> 0
   +(0, y) -> y
   +(s(x), y) -> s(+(x, y))
   max(0, y) -> y
   max(x, 0) -> x
   min(0, y) -> 0
   min(x, 0) -> 0

The set Q consists of the following terms:

   min(0, x0)
   min(x0, 0)
   min(s(x0), s(x1))
   max(0, x0)
   max(x0, 0)
   max(s(x0), s(x1))
   +(0, x0)
   +(s(x0), x1)
   -(x0, 0)
   -(s(x0), s(x1))
   *(x0, 0)
   *(x0, s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(47) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule F(s(x), s(y)) -> F(-(min(s(x), s(y)), max(s(x), s(y))), *(s(x), s(y))) at position [0,0] we obtained the following new rules [LPAR04]:

   (F(s(x), s(y)) -> F(-(s(min(x, y)), max(s(x), s(y))), *(s(x), s(y))),F(s(x), s(y)) -> F(-(s(min(x, y)), max(s(x), s(y))), *(s(x), s(y))))


----------------------------------------

(48)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(x), s(y)) -> F(-(s(min(x, y)), max(s(x), s(y))), *(s(x), s(y)))

The TRS R consists of the following rules:

   min(s(x), s(y)) -> s(min(x, y))
   max(s(x), s(y)) -> s(max(x, y))
   -(x, 0) -> x
   -(s(x), s(y)) -> -(x, y)
   *(x, s(y)) -> +(x, *(x, y))
   *(x, 0) -> 0
   +(0, y) -> y
   +(s(x), y) -> s(+(x, y))
   max(0, y) -> y
   max(x, 0) -> x
   min(0, y) -> 0
   min(x, 0) -> 0

The set Q consists of the following terms:

   min(0, x0)
   min(x0, 0)
   min(s(x0), s(x1))
   max(0, x0)
   max(x0, 0)
   max(s(x0), s(x1))
   +(0, x0)
   +(s(x0), x1)
   -(x0, 0)
   -(s(x0), s(x1))
   *(x0, 0)
   *(x0, s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(49) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule F(s(x), s(y)) -> F(-(s(min(x, y)), max(s(x), s(y))), *(s(x), s(y))) at position [0,1] we obtained the following new rules [LPAR04]:

   (F(s(x), s(y)) -> F(-(s(min(x, y)), s(max(x, y))), *(s(x), s(y))),F(s(x), s(y)) -> F(-(s(min(x, y)), s(max(x, y))), *(s(x), s(y))))


----------------------------------------

(50)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(x), s(y)) -> F(-(s(min(x, y)), s(max(x, y))), *(s(x), s(y)))

The TRS R consists of the following rules:

   min(s(x), s(y)) -> s(min(x, y))
   max(s(x), s(y)) -> s(max(x, y))
   -(x, 0) -> x
   -(s(x), s(y)) -> -(x, y)
   *(x, s(y)) -> +(x, *(x, y))
   *(x, 0) -> 0
   +(0, y) -> y
   +(s(x), y) -> s(+(x, y))
   max(0, y) -> y
   max(x, 0) -> x
   min(0, y) -> 0
   min(x, 0) -> 0

The set Q consists of the following terms:

   min(0, x0)
   min(x0, 0)
   min(s(x0), s(x1))
   max(0, x0)
   max(x0, 0)
   max(s(x0), s(x1))
   +(0, x0)
   +(s(x0), x1)
   -(x0, 0)
   -(s(x0), s(x1))
   *(x0, 0)
   *(x0, s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(51) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule F(s(x), s(y)) -> F(-(s(min(x, y)), s(max(x, y))), *(s(x), s(y))) at position [0] we obtained the following new rules [LPAR04]:

   (F(s(x), s(y)) -> F(-(min(x, y), max(x, y)), *(s(x), s(y))),F(s(x), s(y)) -> F(-(min(x, y), max(x, y)), *(s(x), s(y))))


----------------------------------------

(52)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(x), s(y)) -> F(-(min(x, y), max(x, y)), *(s(x), s(y)))

The TRS R consists of the following rules:

   min(s(x), s(y)) -> s(min(x, y))
   max(s(x), s(y)) -> s(max(x, y))
   -(x, 0) -> x
   -(s(x), s(y)) -> -(x, y)
   *(x, s(y)) -> +(x, *(x, y))
   *(x, 0) -> 0
   +(0, y) -> y
   +(s(x), y) -> s(+(x, y))
   max(0, y) -> y
   max(x, 0) -> x
   min(0, y) -> 0
   min(x, 0) -> 0

The set Q consists of the following terms:

   min(0, x0)
   min(x0, 0)
   min(s(x0), s(x1))
   max(0, x0)
   max(x0, 0)
   max(s(x0), s(x1))
   +(0, x0)
   +(s(x0), x1)
   -(x0, 0)
   -(s(x0), s(x1))
   *(x0, 0)
   *(x0, s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(53) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule F(s(x), s(y)) -> F(-(min(x, y), max(x, y)), *(s(x), s(y))) at position [1] we obtained the following new rules [LPAR04]:

   (F(s(x), s(y)) -> F(-(min(x, y), max(x, y)), +(s(x), *(s(x), y))),F(s(x), s(y)) -> F(-(min(x, y), max(x, y)), +(s(x), *(s(x), y))))


----------------------------------------

(54)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(x), s(y)) -> F(-(min(x, y), max(x, y)), +(s(x), *(s(x), y)))

The TRS R consists of the following rules:

   min(s(x), s(y)) -> s(min(x, y))
   max(s(x), s(y)) -> s(max(x, y))
   -(x, 0) -> x
   -(s(x), s(y)) -> -(x, y)
   *(x, s(y)) -> +(x, *(x, y))
   *(x, 0) -> 0
   +(0, y) -> y
   +(s(x), y) -> s(+(x, y))
   max(0, y) -> y
   max(x, 0) -> x
   min(0, y) -> 0
   min(x, 0) -> 0

The set Q consists of the following terms:

   min(0, x0)
   min(x0, 0)
   min(s(x0), s(x1))
   max(0, x0)
   max(x0, 0)
   max(s(x0), s(x1))
   +(0, x0)
   +(s(x0), x1)
   -(x0, 0)
   -(s(x0), s(x1))
   *(x0, 0)
   *(x0, s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(55) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule F(s(x), s(y)) -> F(-(min(x, y), max(x, y)), +(s(x), *(s(x), y))) at position [1] we obtained the following new rules [LPAR04]:

   (F(s(x), s(y)) -> F(-(min(x, y), max(x, y)), s(+(x, *(s(x), y)))),F(s(x), s(y)) -> F(-(min(x, y), max(x, y)), s(+(x, *(s(x), y)))))


----------------------------------------

(56)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(x), s(y)) -> F(-(min(x, y), max(x, y)), s(+(x, *(s(x), y))))

The TRS R consists of the following rules:

   min(s(x), s(y)) -> s(min(x, y))
   max(s(x), s(y)) -> s(max(x, y))
   -(x, 0) -> x
   -(s(x), s(y)) -> -(x, y)
   *(x, s(y)) -> +(x, *(x, y))
   *(x, 0) -> 0
   +(0, y) -> y
   +(s(x), y) -> s(+(x, y))
   max(0, y) -> y
   max(x, 0) -> x
   min(0, y) -> 0
   min(x, 0) -> 0

The set Q consists of the following terms:

   min(0, x0)
   min(x0, 0)
   min(s(x0), s(x1))
   max(0, x0)
   max(x0, 0)
   max(s(x0), s(x1))
   +(0, x0)
   +(s(x0), x1)
   -(x0, 0)
   -(s(x0), s(x1))
   *(x0, 0)
   *(x0, s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(57) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   F(s(x), s(y)) -> F(-(min(x, y), max(x, y)), s(+(x, *(s(x), y))))
The remaining pairs can at least be oriented weakly.
Used ordering:  Combined order from the following AFS and order.
F(x1, x2)  =  x1

s(x1)  =  s(x1)

-(x1, x2)  =  x1

min(x1, x2)  =  x1

0  =  0


Knuth-Bendix order [KBO] with precedence:trivial

and weight map:

   s_1=1
   0=1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   min(s(x), s(y)) -> s(min(x, y))
   min(0, y) -> 0
   min(x, 0) -> 0
   -(x, 0) -> x
   -(s(x), s(y)) -> -(x, y)


----------------------------------------

(58)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   min(s(x), s(y)) -> s(min(x, y))
   max(s(x), s(y)) -> s(max(x, y))
   -(x, 0) -> x
   -(s(x), s(y)) -> -(x, y)
   *(x, s(y)) -> +(x, *(x, y))
   *(x, 0) -> 0
   +(0, y) -> y
   +(s(x), y) -> s(+(x, y))
   max(0, y) -> y
   max(x, 0) -> x
   min(0, y) -> 0
   min(x, 0) -> 0

The set Q consists of the following terms:

   min(0, x0)
   min(x0, 0)
   min(s(x0), s(x1))
   max(0, x0)
   max(x0, 0)
   max(s(x0), s(x1))
   +(0, x0)
   +(s(x0), x1)
   -(x0, 0)
   -(s(x0), s(x1))
   *(x0, 0)
   *(x0, s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(59) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(60)
YES
