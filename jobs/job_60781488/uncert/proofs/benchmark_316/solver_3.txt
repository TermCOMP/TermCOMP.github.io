YES

Problem 1: 

(VAR vu95NonEmpty x)
(RULES
cond(ftrue,x) -> cond(odd(x),p(p(p(x))))
odd(num0) -> ffalse
odd(s(num0)) -> ftrue
odd(s(s(x))) -> odd(x)
p(num0) -> num0
p(s(x)) -> x
)


Problem 1: 

Innermost Equivalent Processor:
-> Rules:
 cond(ftrue,x) -> cond(odd(x),p(p(p(x))))
 odd(num0) -> ffalse
 odd(s(num0)) -> ftrue
 odd(s(s(x))) -> odd(x)
 p(num0) -> num0
 p(s(x)) -> x
-> The term rewriting system is non-overlaping or locally confluent overlay system. Therefore, innermost termination implies termination.
 

Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 COND(ftrue,x) -> COND(odd(x),p(p(p(x))))
 COND(ftrue,x) -> ODD(x)
 COND(ftrue,x) -> P(p(p(x)))
 COND(ftrue,x) -> P(p(x))
 COND(ftrue,x) -> P(x)
 ODD(s(s(x))) -> ODD(x)
-> Rules:
 cond(ftrue,x) -> cond(odd(x),p(p(p(x))))
 odd(num0) -> ffalse
 odd(s(num0)) -> ftrue
 odd(s(s(x))) -> odd(x)
 p(num0) -> num0
 p(s(x)) -> x

Problem 1: 

SCC Processor:
-> Pairs:
 COND(ftrue,x) -> COND(odd(x),p(p(p(x))))
 COND(ftrue,x) -> ODD(x)
 COND(ftrue,x) -> P(p(p(x)))
 COND(ftrue,x) -> P(p(x))
 COND(ftrue,x) -> P(x)
 ODD(s(s(x))) -> ODD(x)
-> Rules:
 cond(ftrue,x) -> cond(odd(x),p(p(p(x))))
 odd(num0) -> ffalse
 odd(s(num0)) -> ftrue
 odd(s(s(x))) -> odd(x)
 p(num0) -> num0
 p(s(x)) -> x
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ODD(s(s(x))) -> ODD(x)
->->-> Rules:
 cond(ftrue,x) -> cond(odd(x),p(p(p(x))))
 odd(num0) -> ffalse
 odd(s(num0)) -> ftrue
 odd(s(s(x))) -> odd(x)
 p(num0) -> num0
 p(s(x)) -> x
->->Cycle:
->->-> Pairs:
 COND(ftrue,x) -> COND(odd(x),p(p(p(x))))
->->-> Rules:
 cond(ftrue,x) -> cond(odd(x),p(p(p(x))))
 odd(num0) -> ffalse
 odd(s(num0)) -> ftrue
 odd(s(s(x))) -> odd(x)
 p(num0) -> num0
 p(s(x)) -> x


The problem is decomposed in 2 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 ODD(s(s(x))) -> ODD(x)
-> Rules:
 cond(ftrue,x) -> cond(odd(x),p(p(p(x))))
 odd(num0) -> ffalse
 odd(s(num0)) -> ftrue
 odd(s(s(x))) -> odd(x)
 p(num0) -> num0
 p(s(x)) -> x
->Projection:
 pi(ODD) = 1

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 cond(ftrue,x) -> cond(odd(x),p(p(p(x))))
 odd(num0) -> ffalse
 odd(s(num0)) -> ftrue
 odd(s(s(x))) -> odd(x)
 p(num0) -> num0
 p(s(x)) -> x
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Reduction Pairs Processor:
-> Pairs:
 COND(ftrue,x) -> COND(odd(x),p(p(p(x))))
-> Rules:
 cond(ftrue,x) -> cond(odd(x),p(p(p(x))))
 odd(num0) -> ffalse
 odd(s(num0)) -> ftrue
 odd(s(s(x))) -> odd(x)
 p(num0) -> num0
 p(s(x)) -> x
-> Usable rules:
 odd(num0) -> ffalse
 odd(s(num0)) -> ftrue
 odd(s(s(x))) -> odd(x)
 p(num0) -> num0
 p(s(x)) -> x
->Interpretation type:
 Linear
->Coefficients:
 All rationals
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[cond](X1,X2) = 0
[odd](X) = X
[p](X) = 1/2.X + 1/2
[num0] = 1
[fSNonEmpty] = 0
[ffalse] = 0
[s](X) = 2.X + 2
[ftrue] = 2
[COND](X1,X2) = X1 + 2.X2
[ODD](X) = 0
[P](X) = 0

Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 cond(ftrue,x) -> cond(odd(x),p(p(p(x))))
 odd(num0) -> ffalse
 odd(s(num0)) -> ftrue
 odd(s(s(x))) -> odd(x)
 p(num0) -> num0
 p(s(x)) -> x
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
