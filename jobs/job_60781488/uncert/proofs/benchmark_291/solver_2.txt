NO
proof of /hpcwork/ff862203/termcomp25/benchmarks/WKXjn.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be disproven:

(0) QTRS
(1) AAECC Innermost [EQUIVALENT, 0 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 0 ms]
(4) QDP
(5) DependencyGraphProof [EQUIVALENT, 0 ms]
(6) QDP
(7) UsableRulesProof [EQUIVALENT, 0 ms]
(8) QDP
(9) QReductionProof [EQUIVALENT, 0 ms]
(10) QDP
(11) TransformationProof [EQUIVALENT, 0 ms]
(12) QDP
(13) DependencyGraphProof [EQUIVALENT, 0 ms]
(14) QDP
(15) UsableRulesProof [EQUIVALENT, 0 ms]
(16) QDP
(17) QReductionProof [EQUIVALENT, 0 ms]
(18) QDP
(19) ATransformationProof [EQUIVALENT, 0 ms]
(20) QDP
(21) NonTerminationLoopProof [COMPLETE, 0 ms]
(22) NO


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(tt, x) -> f(isList(x), x)
   isList(Cons(x, xs)) -> isList(xs)
   isList(nil) -> tt

Q is empty.

----------------------------------------

(1) AAECC Innermost (EQUIVALENT)
We have applied [NOC,AAECCNOC] to switch to innermost. The TRS R 1 is 
   isList(Cons(x, xs)) -> isList(xs)
   isList(nil) -> tt

The TRS R 2 is 
   f(tt, x) -> f(isList(x), x)

The signature Sigma is {f_2}
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(tt, x) -> f(isList(x), x)
   isList(Cons(x, xs)) -> isList(xs)
   isList(nil) -> tt

The set Q consists of the following terms:

   f(tt, x0)
   isList(Cons(x0, xs))
   isList(nil)


----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(tt, x) -> F(isList(x), x)
   F(tt, x) -> ISLIST(x)
   ISLIST(Cons(x, xs)) -> ISLIST(xs)

The TRS R consists of the following rules:

   f(tt, x) -> f(isList(x), x)
   isList(Cons(x, xs)) -> isList(xs)
   isList(nil) -> tt

The set Q consists of the following terms:

   f(tt, x0)
   isList(Cons(x0, xs))
   isList(nil)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 2 less nodes.
----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(tt, x) -> F(isList(x), x)

The TRS R consists of the following rules:

   f(tt, x) -> f(isList(x), x)
   isList(Cons(x, xs)) -> isList(xs)
   isList(nil) -> tt

The set Q consists of the following terms:

   f(tt, x0)
   isList(Cons(x0, xs))
   isList(nil)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(tt, x) -> F(isList(x), x)

The TRS R consists of the following rules:

   isList(Cons(x, xs)) -> isList(xs)
   isList(nil) -> tt

The set Q consists of the following terms:

   f(tt, x0)
   isList(Cons(x0, xs))
   isList(nil)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   f(tt, x0)


----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(tt, x) -> F(isList(x), x)

The TRS R consists of the following rules:

   isList(Cons(x, xs)) -> isList(xs)
   isList(nil) -> tt

The set Q consists of the following terms:

   isList(Cons(x0, xs))
   isList(nil)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(tt, x) -> F(isList(x), x) at position [0] we obtained the following new rules [LPAR04]:

   (F(tt, Cons(x0, xs)) -> F(isList(xs), Cons(x0, xs)),F(tt, Cons(x0, xs)) -> F(isList(xs), Cons(x0, xs)))
   (F(tt, nil) -> F(tt, nil),F(tt, nil) -> F(tt, nil))


----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(tt, Cons(x0, xs)) -> F(isList(xs), Cons(x0, xs))
   F(tt, nil) -> F(tt, nil)

The TRS R consists of the following rules:

   isList(Cons(x, xs)) -> isList(xs)
   isList(nil) -> tt

The set Q consists of the following terms:

   isList(Cons(x0, xs))
   isList(nil)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(tt, nil) -> F(tt, nil)

The TRS R consists of the following rules:

   isList(Cons(x, xs)) -> isList(xs)
   isList(nil) -> tt

The set Q consists of the following terms:

   isList(Cons(x0, xs))
   isList(nil)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(tt, nil) -> F(tt, nil)

R is empty.
The set Q consists of the following terms:

   isList(Cons(x0, xs))
   isList(nil)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   isList(Cons(x0, xs))
   isList(nil)


----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(tt, nil) -> F(tt, nil)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) ATransformationProof (EQUIVALENT)
We have applied the A-Transformation [FROCOS05] to get from an applicative problem to a standard problem. 
----------------------------------------

(20)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   tt(nil) -> tt(nil)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(21) NonTerminationLoopProof (COMPLETE)
We used the non-termination processor [FROCOS05] to show that the DP problem is infinite.
Found a loop by semiunifying a rule from P directly.

s = tt(nil) evaluates to  t =tt(nil)

Thus s starts an infinite chain as s semiunifies with t with the following substitutions:
* Matcher: [ ]
* Semiunifier: [ ]

--------------------------------------------------------------------------------
Rewriting sequence

The DP semiunifies directly so there is only one rewrite step from tt(nil) to tt(nil).




----------------------------------------

(22)
NO
