YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/kXV4X.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRSRRRProof [EQUIVALENT, 25 ms]
(2) QTRS
(3) Overlay + Local Confluence [EQUIVALENT, 0 ms]
(4) QTRS
(5) DependencyPairsProof [EQUIVALENT, 0 ms]
(6) QDP
(7) QDPOrderProof [EQUIVALENT, 0 ms]
(8) QDP
(9) PisEmptyProof [EQUIVALENT, 0 ms]
(10) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(g(x)) -> g(f(f(x)))
   f(h(x)) -> h(g(x))
   f'(s(x), y, y) -> f'(y, x, s(x))

Q is empty.

----------------------------------------

(1) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(f(x_1)) = x_1
   POL(f'(x_1, x_2, x_3)) = 2*x_1 + 2*x_2 + x_3
   POL(g(x_1)) = x_1
   POL(h(x_1)) = 2*x_1
   POL(s(x_1)) = 1 + 2*x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   f'(s(x), y, y) -> f'(y, x, s(x))




----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(g(x)) -> g(f(f(x)))
   f(h(x)) -> h(g(x))

Q is empty.

----------------------------------------

(3) Overlay + Local Confluence (EQUIVALENT)
The TRS is overlay and locally confluent. By [NOC] we can switch to innermost.
----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(g(x)) -> g(f(f(x)))
   f(h(x)) -> h(g(x))

The set Q consists of the following terms:

   f(g(x0))
   f(h(x0))


----------------------------------------

(5) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(g(x)) -> F(f(x))
   F(g(x)) -> F(x)

The TRS R consists of the following rules:

   f(g(x)) -> g(f(f(x)))
   f(h(x)) -> h(g(x))

The set Q consists of the following terms:

   f(g(x0))
   f(h(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   F(g(x)) -> F(f(x))
   F(g(x)) -> F(x)
The remaining pairs can at least be oriented weakly.
Used ordering:  Combined order from the following AFS and order.
F(x1)  =  x1

g(x1)  =  g(x1)

f(x1)  =  x1

h(x1)  =  h


Knuth-Bendix order [KBO] with precedence:trivial

and weight map:

   h=1
   g_1=1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   f(g(x)) -> g(f(f(x)))
   f(h(x)) -> h(g(x))


----------------------------------------

(8)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   f(g(x)) -> g(f(f(x)))
   f(h(x)) -> h(g(x))

The set Q consists of the following terms:

   f(g(x0))
   f(h(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(10)
YES
