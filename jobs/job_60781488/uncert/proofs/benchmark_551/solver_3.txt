YES

Problem 1: 

(VAR vu95NonEmpty U V W X Y Z)
(RULES
concat(cons(U,V),Y) -> cons(U,concat(V,Y))
concat(leaf,Y) -> Y
lessleaves(cons(U,V),cons(W,Z)) -> lessleaves(concat(U,V),concat(W,Z))
lessleaves(leaf,cons(W,Z)) -> ftrue
lessleaves(X,leaf) -> ffalse
)


Problem 1: 

Innermost Equivalent Processor:
-> Rules:
 concat(cons(U,V),Y) -> cons(U,concat(V,Y))
 concat(leaf,Y) -> Y
 lessleaves(cons(U,V),cons(W,Z)) -> lessleaves(concat(U,V),concat(W,Z))
 lessleaves(leaf,cons(W,Z)) -> ftrue
 lessleaves(X,leaf) -> ffalse
-> The term rewriting system is non-overlaping or locally confluent overlay system. Therefore, innermost termination implies termination.
 

Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 CONCAT(cons(U,V),Y) -> CONCAT(V,Y)
 LESSLEAVES(cons(U,V),cons(W,Z)) -> CONCAT(U,V)
 LESSLEAVES(cons(U,V),cons(W,Z)) -> CONCAT(W,Z)
 LESSLEAVES(cons(U,V),cons(W,Z)) -> LESSLEAVES(concat(U,V),concat(W,Z))
-> Rules:
 concat(cons(U,V),Y) -> cons(U,concat(V,Y))
 concat(leaf,Y) -> Y
 lessleaves(cons(U,V),cons(W,Z)) -> lessleaves(concat(U,V),concat(W,Z))
 lessleaves(leaf,cons(W,Z)) -> ftrue
 lessleaves(X,leaf) -> ffalse

Problem 1: 

SCC Processor:
-> Pairs:
 CONCAT(cons(U,V),Y) -> CONCAT(V,Y)
 LESSLEAVES(cons(U,V),cons(W,Z)) -> CONCAT(U,V)
 LESSLEAVES(cons(U,V),cons(W,Z)) -> CONCAT(W,Z)
 LESSLEAVES(cons(U,V),cons(W,Z)) -> LESSLEAVES(concat(U,V),concat(W,Z))
-> Rules:
 concat(cons(U,V),Y) -> cons(U,concat(V,Y))
 concat(leaf,Y) -> Y
 lessleaves(cons(U,V),cons(W,Z)) -> lessleaves(concat(U,V),concat(W,Z))
 lessleaves(leaf,cons(W,Z)) -> ftrue
 lessleaves(X,leaf) -> ffalse
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 CONCAT(cons(U,V),Y) -> CONCAT(V,Y)
->->-> Rules:
 concat(cons(U,V),Y) -> cons(U,concat(V,Y))
 concat(leaf,Y) -> Y
 lessleaves(cons(U,V),cons(W,Z)) -> lessleaves(concat(U,V),concat(W,Z))
 lessleaves(leaf,cons(W,Z)) -> ftrue
 lessleaves(X,leaf) -> ffalse
->->Cycle:
->->-> Pairs:
 LESSLEAVES(cons(U,V),cons(W,Z)) -> LESSLEAVES(concat(U,V),concat(W,Z))
->->-> Rules:
 concat(cons(U,V),Y) -> cons(U,concat(V,Y))
 concat(leaf,Y) -> Y
 lessleaves(cons(U,V),cons(W,Z)) -> lessleaves(concat(U,V),concat(W,Z))
 lessleaves(leaf,cons(W,Z)) -> ftrue
 lessleaves(X,leaf) -> ffalse


The problem is decomposed in 2 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 CONCAT(cons(U,V),Y) -> CONCAT(V,Y)
-> Rules:
 concat(cons(U,V),Y) -> cons(U,concat(V,Y))
 concat(leaf,Y) -> Y
 lessleaves(cons(U,V),cons(W,Z)) -> lessleaves(concat(U,V),concat(W,Z))
 lessleaves(leaf,cons(W,Z)) -> ftrue
 lessleaves(X,leaf) -> ffalse
->Projection:
 pi(CONCAT) = 1

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 concat(cons(U,V),Y) -> cons(U,concat(V,Y))
 concat(leaf,Y) -> Y
 lessleaves(cons(U,V),cons(W,Z)) -> lessleaves(concat(U,V),concat(W,Z))
 lessleaves(leaf,cons(W,Z)) -> ftrue
 lessleaves(X,leaf) -> ffalse
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Reduction Pairs Processor:
-> Pairs:
 LESSLEAVES(cons(U,V),cons(W,Z)) -> LESSLEAVES(concat(U,V),concat(W,Z))
-> Rules:
 concat(cons(U,V),Y) -> cons(U,concat(V,Y))
 concat(leaf,Y) -> Y
 lessleaves(cons(U,V),cons(W,Z)) -> lessleaves(concat(U,V),concat(W,Z))
 lessleaves(leaf,cons(W,Z)) -> ftrue
 lessleaves(X,leaf) -> ffalse
-> Usable rules:
 concat(cons(U,V),Y) -> cons(U,concat(V,Y))
 concat(leaf,Y) -> Y
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[concat](X1,X2) = X1 + X2 + 1
[lessleaves](X1,X2) = 0
[cons](X1,X2) = 2.X1 + X2 + 2
[fSNonEmpty] = 0
[ffalse] = 0
[leaf] = 0
[ftrue] = 0
[CONCAT](X1,X2) = 0
[LESSLEAVES](X1,X2) = 2.X1 + X2

Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 concat(cons(U,V),Y) -> cons(U,concat(V,Y))
 concat(leaf,Y) -> Y
 lessleaves(cons(U,V),cons(W,Z)) -> lessleaves(concat(U,V),concat(W,Z))
 lessleaves(leaf,cons(W,Z)) -> ftrue
 lessleaves(X,leaf) -> ffalse
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
