YES

Problem 1: 

(VAR vu95NonEmpty x y)
(RULES
ack(num0,y) -> s(y)
ack(s(x),num0) -> ack(x,s(num0))
ack(s(x),s(y)) -> ack(x,ack(s(x),y))
)


Problem 1: 

Innermost Equivalent Processor:
-> Rules:
 ack(num0,y) -> s(y)
 ack(s(x),num0) -> ack(x,s(num0))
 ack(s(x),s(y)) -> ack(x,ack(s(x),y))
-> The term rewriting system is non-overlaping or locally confluent overlay system. Therefore, innermost termination implies termination.
 

Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 ACK(s(x),num0) -> ACK(x,s(num0))
 ACK(s(x),s(y)) -> ACK(s(x),y)
 ACK(s(x),s(y)) -> ACK(x,ack(s(x),y))
-> Rules:
 ack(num0,y) -> s(y)
 ack(s(x),num0) -> ack(x,s(num0))
 ack(s(x),s(y)) -> ack(x,ack(s(x),y))

Problem 1: 

SCC Processor:
-> Pairs:
 ACK(s(x),num0) -> ACK(x,s(num0))
 ACK(s(x),s(y)) -> ACK(s(x),y)
 ACK(s(x),s(y)) -> ACK(x,ack(s(x),y))
-> Rules:
 ack(num0,y) -> s(y)
 ack(s(x),num0) -> ack(x,s(num0))
 ack(s(x),s(y)) -> ack(x,ack(s(x),y))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACK(s(x),num0) -> ACK(x,s(num0))
 ACK(s(x),s(y)) -> ACK(s(x),y)
 ACK(s(x),s(y)) -> ACK(x,ack(s(x),y))
->->-> Rules:
 ack(num0,y) -> s(y)
 ack(s(x),num0) -> ack(x,s(num0))
 ack(s(x),s(y)) -> ack(x,ack(s(x),y))

Problem 1: 

Subterm Processor:
-> Pairs:
 ACK(s(x),num0) -> ACK(x,s(num0))
 ACK(s(x),s(y)) -> ACK(s(x),y)
 ACK(s(x),s(y)) -> ACK(x,ack(s(x),y))
-> Rules:
 ack(num0,y) -> s(y)
 ack(s(x),num0) -> ack(x,s(num0))
 ack(s(x),s(y)) -> ack(x,ack(s(x),y))
->Projection:
 pi(ACK) = 1

Problem 1: 

SCC Processor:
-> Pairs:
 ACK(s(x),s(y)) -> ACK(s(x),y)
-> Rules:
 ack(num0,y) -> s(y)
 ack(s(x),num0) -> ack(x,s(num0))
 ack(s(x),s(y)) -> ack(x,ack(s(x),y))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACK(s(x),s(y)) -> ACK(s(x),y)
->->-> Rules:
 ack(num0,y) -> s(y)
 ack(s(x),num0) -> ack(x,s(num0))
 ack(s(x),s(y)) -> ack(x,ack(s(x),y))

Problem 1: 

Subterm Processor:
-> Pairs:
 ACK(s(x),s(y)) -> ACK(s(x),y)
-> Rules:
 ack(num0,y) -> s(y)
 ack(s(x),num0) -> ack(x,s(num0))
 ack(s(x),s(y)) -> ack(x,ack(s(x),y))
->Projection:
 pi(ACK) = 2

Problem 1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 ack(num0,y) -> s(y)
 ack(s(x),num0) -> ack(x,s(num0))
 ack(s(x),s(y)) -> ack(x,ack(s(x),y))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
