YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/A7WGF.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRSRRRProof [EQUIVALENT, 79 ms]
(2) QTRS
(3) QTRSRRRProof [EQUIVALENT, 0 ms]
(4) QTRS
(5) RisEmptyProof [EQUIVALENT, 0 ms]
(6) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   D(t) -> 1
   D(constant) -> 0
   D(+(x, y)) -> +(D(x), D(y))
   D(*(x, y)) -> +(*(y, D(x)), *(x, D(y)))
   D(-(x, y)) -> -(D(x), D(y))
   D(minus(x)) -> minus(D(x))
   D(div(x, y)) -> -(div(D(x), y), div(*(x, D(y)), pow(y, 2)))
   D(ln(x)) -> div(D(x), x)
   D(pow(x, y)) -> +(*(*(y, pow(x, -(y, 1))), D(x)), *(*(pow(x, y), ln(x)), D(y)))

Q is empty.

----------------------------------------

(1) QTRSRRRProof (EQUIVALENT)
Used ordering:
D/1(YES)
t/0)
1/0)
constant/0)
0/0)
+/2(YES,YES)
*/2(YES,YES)
-/2(YES,YES)
minus/1)YES(
div/2(YES,YES)
pow/2(YES,YES)
2/0)
ln/1(YES)

Quasi precedence:
[D_1, t, 1, pow_2, ln_1] > 0
[D_1, t, 1, pow_2, ln_1] > [+_2, *_2]
[D_1, t, 1, pow_2, ln_1] > [div_2, 2] > -_2


Status:
D_1: multiset status
t: multiset status
1: multiset status
constant: multiset status
0: multiset status
+_2: multiset status
*_2: multiset status
-_2: multiset status
div_2: multiset status
pow_2: multiset status
2: multiset status
ln_1: multiset status

With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   D(t) -> 1
   D(constant) -> 0
   D(+(x, y)) -> +(D(x), D(y))
   D(*(x, y)) -> +(*(y, D(x)), *(x, D(y)))
   D(-(x, y)) -> -(D(x), D(y))
   D(div(x, y)) -> -(div(D(x), y), div(*(x, D(y)), pow(y, 2)))
   D(ln(x)) -> div(D(x), x)
   D(pow(x, y)) -> +(*(*(y, pow(x, -(y, 1))), D(x)), *(*(pow(x, y), ln(x)), D(y)))




----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   D(minus(x)) -> minus(D(x))

Q is empty.

----------------------------------------

(3) QTRSRRRProof (EQUIVALENT)
Used ordering:
Quasi precedence:
D_1 > minus_1


Status:
D_1: [1]
minus_1: [1]

With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   D(minus(x)) -> minus(D(x))




----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
R is empty.
Q is empty.

----------------------------------------

(5) RisEmptyProof (EQUIVALENT)
The TRS R is empty. Hence, termination is trivially proven.
----------------------------------------

(6)
YES
