YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/BNWVp.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRSRRRProof [EQUIVALENT, 40 ms]
(2) QTRS
(3) QTRSRRRProof [EQUIVALENT, 0 ms]
(4) QTRS
(5) RisEmptyProof [EQUIVALENT, 0 ms]
(6) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   from(X) -> cons(X, n__from(s(X)))
   2ndspos(0, Z) -> rnil
   2ndspos(s(N), cons(X, n__cons(Y, Z))) -> rcons(posrecip(activate(Y)), 2ndsneg(N, activate(Z)))
   2ndsneg(0, Z) -> rnil
   2ndsneg(s(N), cons(X, n__cons(Y, Z))) -> rcons(negrecip(activate(Y)), 2ndspos(N, activate(Z)))
   pi(X) -> 2ndspos(X, from(0))
   plus(0, Y) -> Y
   plus(s(X), Y) -> s(plus(X, Y))
   times(0, Y) -> 0
   times(s(X), Y) -> plus(Y, times(X, Y))
   square(X) -> times(X, X)
   from(X) -> n__from(X)
   cons(X1, X2) -> n__cons(X1, X2)
   activate(n__from(X)) -> from(X)
   activate(n__cons(X1, X2)) -> cons(X1, X2)
   activate(X) -> X

Q is empty.

----------------------------------------

(1) QTRSRRRProof (EQUIVALENT)
Used ordering:
from/1(YES)
cons/2(YES,YES)
n__from/1)YES(
s/1(YES)
2ndspos/2(YES,YES)
0/0)
rnil/0)
n__cons/2(YES,YES)
rcons/2(YES,YES)
posrecip/1)YES(
activate/1(YES)
2ndsneg/2(YES,YES)
negrecip/1)YES(
pi/1(YES)
plus/2(YES,YES)
times/2(YES,YES)
square/1(YES)

Quasi precedence:
pi_1 > [2ndspos_2, 2ndsneg_2] > [from_1, activate_1] > cons_2 > n__cons_2
pi_1 > [2ndspos_2, 2ndsneg_2] > [from_1, activate_1] > s_1 > n__cons_2
pi_1 > [2ndspos_2, 2ndsneg_2] > rcons_2 > n__cons_2
pi_1 > [0, times_2] > rnil > n__cons_2
pi_1 > [0, times_2] > plus_2 > s_1 > n__cons_2
square_1 > [0, times_2] > rnil > n__cons_2
square_1 > [0, times_2] > plus_2 > s_1 > n__cons_2


Status:
from_1: multiset status
cons_2: multiset status
s_1: multiset status
2ndspos_2: [1,2]
0: multiset status
rnil: multiset status
n__cons_2: multiset status
rcons_2: multiset status
activate_1: multiset status
2ndsneg_2: [1,2]
pi_1: multiset status
plus_2: multiset status
times_2: multiset status
square_1: [1]

With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   from(X) -> cons(X, n__from(s(X)))
   2ndspos(0, Z) -> rnil
   2ndspos(s(N), cons(X, n__cons(Y, Z))) -> rcons(posrecip(activate(Y)), 2ndsneg(N, activate(Z)))
   2ndsneg(0, Z) -> rnil
   2ndsneg(s(N), cons(X, n__cons(Y, Z))) -> rcons(negrecip(activate(Y)), 2ndspos(N, activate(Z)))
   pi(X) -> 2ndspos(X, from(0))
   plus(0, Y) -> Y
   plus(s(X), Y) -> s(plus(X, Y))
   times(0, Y) -> 0
   times(s(X), Y) -> plus(Y, times(X, Y))
   square(X) -> times(X, X)
   from(X) -> n__from(X)
   cons(X1, X2) -> n__cons(X1, X2)
   activate(n__cons(X1, X2)) -> cons(X1, X2)
   activate(X) -> X




----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   activate(n__from(X)) -> from(X)

Q is empty.

----------------------------------------

(3) QTRSRRRProof (EQUIVALENT)
Used ordering:
Knuth-Bendix order [KBO] with precedence:activate_1 > from_1 > n__from_1

and weight map:

   activate_1=1
   n__from_1=1
   from_1=2

The variable weight is 1With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   activate(n__from(X)) -> from(X)




----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
R is empty.
Q is empty.

----------------------------------------

(5) RisEmptyProof (EQUIVALENT)
The TRS R is empty. Hence, termination is trivially proven.
----------------------------------------

(6)
YES
