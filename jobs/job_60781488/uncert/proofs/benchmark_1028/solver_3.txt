YES

Problem 1: 

(VAR vu95NonEmpty N X X1 X2 XS Y YS)
(RULES
activate(nu95u95from(X)) -> from(activate(X))
activate(nu95u95s(X)) -> s(activate(X))
activate(nu95u95zWquot(X1,X2)) -> zWquot(activate(X1),activate(X2))
activate(X) -> X
from(X) -> cons(X,nu95u95from(nu95u95s(X)))
from(X) -> nu95u95from(X)
minus(s(X),s(Y)) -> minus(X,Y)
minus(X,num0) -> num0
quot(s(X),s(Y)) -> s(quot(minus(X,Y),s(Y)))
quot(num0,s(Y)) -> num0
s(X) -> nu95u95s(X)
sel(s(N),cons(X,XS)) -> sel(N,activate(XS))
sel(num0,cons(X,XS)) -> X
zWquot(cons(X,XS),cons(Y,YS)) -> cons(quot(X,Y),nu95u95zWquot(activate(XS),activate(YS)))
zWquot(nil,XS) -> nil
zWquot(X1,X2) -> nu95u95zWquot(X1,X2)
zWquot(XS,nil) -> nil
)


Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 ACTIVATE(nu95u95from(X)) -> ACTIVATE(X)
 ACTIVATE(nu95u95from(X)) -> FROM(activate(X))
 ACTIVATE(nu95u95s(X)) -> ACTIVATE(X)
 ACTIVATE(nu95u95s(X)) -> S(activate(X))
 ACTIVATE(nu95u95zWquot(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95zWquot(X1,X2)) -> ACTIVATE(X2)
 ACTIVATE(nu95u95zWquot(X1,X2)) -> ZWQUOT(activate(X1),activate(X2))
 MINUS(s(X),s(Y)) -> MINUS(X,Y)
 QUOT(s(X),s(Y)) -> MINUS(X,Y)
 QUOT(s(X),s(Y)) -> QUOT(minus(X,Y),s(Y))
 QUOT(s(X),s(Y)) -> S(quot(minus(X,Y),s(Y)))
 SEL(s(N),cons(X,XS)) -> ACTIVATE(XS)
 SEL(s(N),cons(X,XS)) -> SEL(N,activate(XS))
 ZWQUOT(cons(X,XS),cons(Y,YS)) -> ACTIVATE(XS)
 ZWQUOT(cons(X,XS),cons(Y,YS)) -> ACTIVATE(YS)
 ZWQUOT(cons(X,XS),cons(Y,YS)) -> QUOT(X,Y)
-> Rules:
 activate(nu95u95from(X)) -> from(activate(X))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95zWquot(X1,X2)) -> zWquot(activate(X1),activate(X2))
 activate(X) -> X
 from(X) -> cons(X,nu95u95from(nu95u95s(X)))
 from(X) -> nu95u95from(X)
 minus(s(X),s(Y)) -> minus(X,Y)
 minus(X,num0) -> num0
 quot(s(X),s(Y)) -> s(quot(minus(X,Y),s(Y)))
 quot(num0,s(Y)) -> num0
 s(X) -> nu95u95s(X)
 sel(s(N),cons(X,XS)) -> sel(N,activate(XS))
 sel(num0,cons(X,XS)) -> X
 zWquot(cons(X,XS),cons(Y,YS)) -> cons(quot(X,Y),nu95u95zWquot(activate(XS),activate(YS)))
 zWquot(nil,XS) -> nil
 zWquot(X1,X2) -> nu95u95zWquot(X1,X2)
 zWquot(XS,nil) -> nil

Problem 1: 

SCC Processor:
-> Pairs:
 ACTIVATE(nu95u95from(X)) -> ACTIVATE(X)
 ACTIVATE(nu95u95from(X)) -> FROM(activate(X))
 ACTIVATE(nu95u95s(X)) -> ACTIVATE(X)
 ACTIVATE(nu95u95s(X)) -> S(activate(X))
 ACTIVATE(nu95u95zWquot(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95zWquot(X1,X2)) -> ACTIVATE(X2)
 ACTIVATE(nu95u95zWquot(X1,X2)) -> ZWQUOT(activate(X1),activate(X2))
 MINUS(s(X),s(Y)) -> MINUS(X,Y)
 QUOT(s(X),s(Y)) -> MINUS(X,Y)
 QUOT(s(X),s(Y)) -> QUOT(minus(X,Y),s(Y))
 QUOT(s(X),s(Y)) -> S(quot(minus(X,Y),s(Y)))
 SEL(s(N),cons(X,XS)) -> ACTIVATE(XS)
 SEL(s(N),cons(X,XS)) -> SEL(N,activate(XS))
 ZWQUOT(cons(X,XS),cons(Y,YS)) -> ACTIVATE(XS)
 ZWQUOT(cons(X,XS),cons(Y,YS)) -> ACTIVATE(YS)
 ZWQUOT(cons(X,XS),cons(Y,YS)) -> QUOT(X,Y)
-> Rules:
 activate(nu95u95from(X)) -> from(activate(X))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95zWquot(X1,X2)) -> zWquot(activate(X1),activate(X2))
 activate(X) -> X
 from(X) -> cons(X,nu95u95from(nu95u95s(X)))
 from(X) -> nu95u95from(X)
 minus(s(X),s(Y)) -> minus(X,Y)
 minus(X,num0) -> num0
 quot(s(X),s(Y)) -> s(quot(minus(X,Y),s(Y)))
 quot(num0,s(Y)) -> num0
 s(X) -> nu95u95s(X)
 sel(s(N),cons(X,XS)) -> sel(N,activate(XS))
 sel(num0,cons(X,XS)) -> X
 zWquot(cons(X,XS),cons(Y,YS)) -> cons(quot(X,Y),nu95u95zWquot(activate(XS),activate(YS)))
 zWquot(nil,XS) -> nil
 zWquot(X1,X2) -> nu95u95zWquot(X1,X2)
 zWquot(XS,nil) -> nil
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 MINUS(s(X),s(Y)) -> MINUS(X,Y)
->->-> Rules:
 activate(nu95u95from(X)) -> from(activate(X))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95zWquot(X1,X2)) -> zWquot(activate(X1),activate(X2))
 activate(X) -> X
 from(X) -> cons(X,nu95u95from(nu95u95s(X)))
 from(X) -> nu95u95from(X)
 minus(s(X),s(Y)) -> minus(X,Y)
 minus(X,num0) -> num0
 quot(s(X),s(Y)) -> s(quot(minus(X,Y),s(Y)))
 quot(num0,s(Y)) -> num0
 s(X) -> nu95u95s(X)
 sel(s(N),cons(X,XS)) -> sel(N,activate(XS))
 sel(num0,cons(X,XS)) -> X
 zWquot(cons(X,XS),cons(Y,YS)) -> cons(quot(X,Y),nu95u95zWquot(activate(XS),activate(YS)))
 zWquot(nil,XS) -> nil
 zWquot(X1,X2) -> nu95u95zWquot(X1,X2)
 zWquot(XS,nil) -> nil
->->Cycle:
->->-> Pairs:
 QUOT(s(X),s(Y)) -> QUOT(minus(X,Y),s(Y))
->->-> Rules:
 activate(nu95u95from(X)) -> from(activate(X))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95zWquot(X1,X2)) -> zWquot(activate(X1),activate(X2))
 activate(X) -> X
 from(X) -> cons(X,nu95u95from(nu95u95s(X)))
 from(X) -> nu95u95from(X)
 minus(s(X),s(Y)) -> minus(X,Y)
 minus(X,num0) -> num0
 quot(s(X),s(Y)) -> s(quot(minus(X,Y),s(Y)))
 quot(num0,s(Y)) -> num0
 s(X) -> nu95u95s(X)
 sel(s(N),cons(X,XS)) -> sel(N,activate(XS))
 sel(num0,cons(X,XS)) -> X
 zWquot(cons(X,XS),cons(Y,YS)) -> cons(quot(X,Y),nu95u95zWquot(activate(XS),activate(YS)))
 zWquot(nil,XS) -> nil
 zWquot(X1,X2) -> nu95u95zWquot(X1,X2)
 zWquot(XS,nil) -> nil
->->Cycle:
->->-> Pairs:
 ACTIVATE(nu95u95from(X)) -> ACTIVATE(X)
 ACTIVATE(nu95u95s(X)) -> ACTIVATE(X)
 ACTIVATE(nu95u95zWquot(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95zWquot(X1,X2)) -> ACTIVATE(X2)
 ACTIVATE(nu95u95zWquot(X1,X2)) -> ZWQUOT(activate(X1),activate(X2))
 ZWQUOT(cons(X,XS),cons(Y,YS)) -> ACTIVATE(XS)
 ZWQUOT(cons(X,XS),cons(Y,YS)) -> ACTIVATE(YS)
->->-> Rules:
 activate(nu95u95from(X)) -> from(activate(X))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95zWquot(X1,X2)) -> zWquot(activate(X1),activate(X2))
 activate(X) -> X
 from(X) -> cons(X,nu95u95from(nu95u95s(X)))
 from(X) -> nu95u95from(X)
 minus(s(X),s(Y)) -> minus(X,Y)
 minus(X,num0) -> num0
 quot(s(X),s(Y)) -> s(quot(minus(X,Y),s(Y)))
 quot(num0,s(Y)) -> num0
 s(X) -> nu95u95s(X)
 sel(s(N),cons(X,XS)) -> sel(N,activate(XS))
 sel(num0,cons(X,XS)) -> X
 zWquot(cons(X,XS),cons(Y,YS)) -> cons(quot(X,Y),nu95u95zWquot(activate(XS),activate(YS)))
 zWquot(nil,XS) -> nil
 zWquot(X1,X2) -> nu95u95zWquot(X1,X2)
 zWquot(XS,nil) -> nil
->->Cycle:
->->-> Pairs:
 SEL(s(N),cons(X,XS)) -> SEL(N,activate(XS))
->->-> Rules:
 activate(nu95u95from(X)) -> from(activate(X))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95zWquot(X1,X2)) -> zWquot(activate(X1),activate(X2))
 activate(X) -> X
 from(X) -> cons(X,nu95u95from(nu95u95s(X)))
 from(X) -> nu95u95from(X)
 minus(s(X),s(Y)) -> minus(X,Y)
 minus(X,num0) -> num0
 quot(s(X),s(Y)) -> s(quot(minus(X,Y),s(Y)))
 quot(num0,s(Y)) -> num0
 s(X) -> nu95u95s(X)
 sel(s(N),cons(X,XS)) -> sel(N,activate(XS))
 sel(num0,cons(X,XS)) -> X
 zWquot(cons(X,XS),cons(Y,YS)) -> cons(quot(X,Y),nu95u95zWquot(activate(XS),activate(YS)))
 zWquot(nil,XS) -> nil
 zWquot(X1,X2) -> nu95u95zWquot(X1,X2)
 zWquot(XS,nil) -> nil


The problem is decomposed in 4 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 MINUS(s(X),s(Y)) -> MINUS(X,Y)
-> Rules:
 activate(nu95u95from(X)) -> from(activate(X))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95zWquot(X1,X2)) -> zWquot(activate(X1),activate(X2))
 activate(X) -> X
 from(X) -> cons(X,nu95u95from(nu95u95s(X)))
 from(X) -> nu95u95from(X)
 minus(s(X),s(Y)) -> minus(X,Y)
 minus(X,num0) -> num0
 quot(s(X),s(Y)) -> s(quot(minus(X,Y),s(Y)))
 quot(num0,s(Y)) -> num0
 s(X) -> nu95u95s(X)
 sel(s(N),cons(X,XS)) -> sel(N,activate(XS))
 sel(num0,cons(X,XS)) -> X
 zWquot(cons(X,XS),cons(Y,YS)) -> cons(quot(X,Y),nu95u95zWquot(activate(XS),activate(YS)))
 zWquot(nil,XS) -> nil
 zWquot(X1,X2) -> nu95u95zWquot(X1,X2)
 zWquot(XS,nil) -> nil
->Projection:
 pi(MINUS) = 1

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 activate(nu95u95from(X)) -> from(activate(X))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95zWquot(X1,X2)) -> zWquot(activate(X1),activate(X2))
 activate(X) -> X
 from(X) -> cons(X,nu95u95from(nu95u95s(X)))
 from(X) -> nu95u95from(X)
 minus(s(X),s(Y)) -> minus(X,Y)
 minus(X,num0) -> num0
 quot(s(X),s(Y)) -> s(quot(minus(X,Y),s(Y)))
 quot(num0,s(Y)) -> num0
 s(X) -> nu95u95s(X)
 sel(s(N),cons(X,XS)) -> sel(N,activate(XS))
 sel(num0,cons(X,XS)) -> X
 zWquot(cons(X,XS),cons(Y,YS)) -> cons(quot(X,Y),nu95u95zWquot(activate(XS),activate(YS)))
 zWquot(nil,XS) -> nil
 zWquot(X1,X2) -> nu95u95zWquot(X1,X2)
 zWquot(XS,nil) -> nil
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Reduction Pair Processor:
-> Pairs:
 QUOT(s(X),s(Y)) -> QUOT(minus(X,Y),s(Y))
-> Rules:
 activate(nu95u95from(X)) -> from(activate(X))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95zWquot(X1,X2)) -> zWquot(activate(X1),activate(X2))
 activate(X) -> X
 from(X) -> cons(X,nu95u95from(nu95u95s(X)))
 from(X) -> nu95u95from(X)
 minus(s(X),s(Y)) -> minus(X,Y)
 minus(X,num0) -> num0
 quot(s(X),s(Y)) -> s(quot(minus(X,Y),s(Y)))
 quot(num0,s(Y)) -> num0
 s(X) -> nu95u95s(X)
 sel(s(N),cons(X,XS)) -> sel(N,activate(XS))
 sel(num0,cons(X,XS)) -> X
 zWquot(cons(X,XS),cons(Y,YS)) -> cons(quot(X,Y),nu95u95zWquot(activate(XS),activate(YS)))
 zWquot(nil,XS) -> nil
 zWquot(X1,X2) -> nu95u95zWquot(X1,X2)
 zWquot(XS,nil) -> nil
-> Usable rules:
 minus(s(X),s(Y)) -> minus(X,Y)
 minus(X,num0) -> num0
 s(X) -> nu95u95s(X)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[activate](X) = 0
[from](X) = 0
[minus](X1,X2) = 1
[quot](X1,X2) = 0
[s](X) = 2
[sel](X1,X2) = 0
[zWquot](X1,X2) = 0
[num0] = 0
[cons](X1,X2) = 0
[fSNonEmpty] = 0
[nu95u95from](X) = 0
[nu95u95s](X) = 2
[nu95u95zWquot](X1,X2) = 0
[nil] = 0
[ACTIVATE](X) = 0
[FROM](X) = 0
[MINUS](X1,X2) = 0
[QUOT](X1,X2) = 2.X1
[S](X) = 0
[SEL](X1,X2) = 0
[ZWQUOT](X1,X2) = 0

Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 activate(nu95u95from(X)) -> from(activate(X))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95zWquot(X1,X2)) -> zWquot(activate(X1),activate(X2))
 activate(X) -> X
 from(X) -> cons(X,nu95u95from(nu95u95s(X)))
 from(X) -> nu95u95from(X)
 minus(s(X),s(Y)) -> minus(X,Y)
 minus(X,num0) -> num0
 quot(s(X),s(Y)) -> s(quot(minus(X,Y),s(Y)))
 quot(num0,s(Y)) -> num0
 s(X) -> nu95u95s(X)
 sel(s(N),cons(X,XS)) -> sel(N,activate(XS))
 sel(num0,cons(X,XS)) -> X
 zWquot(cons(X,XS),cons(Y,YS)) -> cons(quot(X,Y),nu95u95zWquot(activate(XS),activate(YS)))
 zWquot(nil,XS) -> nil
 zWquot(X1,X2) -> nu95u95zWquot(X1,X2)
 zWquot(XS,nil) -> nil
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Reduction Pair Processor:
-> Pairs:
 ACTIVATE(nu95u95from(X)) -> ACTIVATE(X)
 ACTIVATE(nu95u95s(X)) -> ACTIVATE(X)
 ACTIVATE(nu95u95zWquot(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95zWquot(X1,X2)) -> ACTIVATE(X2)
 ACTIVATE(nu95u95zWquot(X1,X2)) -> ZWQUOT(activate(X1),activate(X2))
 ZWQUOT(cons(X,XS),cons(Y,YS)) -> ACTIVATE(XS)
 ZWQUOT(cons(X,XS),cons(Y,YS)) -> ACTIVATE(YS)
-> Rules:
 activate(nu95u95from(X)) -> from(activate(X))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95zWquot(X1,X2)) -> zWquot(activate(X1),activate(X2))
 activate(X) -> X
 from(X) -> cons(X,nu95u95from(nu95u95s(X)))
 from(X) -> nu95u95from(X)
 minus(s(X),s(Y)) -> minus(X,Y)
 minus(X,num0) -> num0
 quot(s(X),s(Y)) -> s(quot(minus(X,Y),s(Y)))
 quot(num0,s(Y)) -> num0
 s(X) -> nu95u95s(X)
 sel(s(N),cons(X,XS)) -> sel(N,activate(XS))
 sel(num0,cons(X,XS)) -> X
 zWquot(cons(X,XS),cons(Y,YS)) -> cons(quot(X,Y),nu95u95zWquot(activate(XS),activate(YS)))
 zWquot(nil,XS) -> nil
 zWquot(X1,X2) -> nu95u95zWquot(X1,X2)
 zWquot(XS,nil) -> nil
-> Usable rules:
 activate(nu95u95from(X)) -> from(activate(X))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95zWquot(X1,X2)) -> zWquot(activate(X1),activate(X2))
 activate(X) -> X
 from(X) -> cons(X,nu95u95from(nu95u95s(X)))
 from(X) -> nu95u95from(X)
 minus(s(X),s(Y)) -> minus(X,Y)
 minus(X,num0) -> num0
 quot(s(X),s(Y)) -> s(quot(minus(X,Y),s(Y)))
 quot(num0,s(Y)) -> num0
 s(X) -> nu95u95s(X)
 zWquot(cons(X,XS),cons(Y,YS)) -> cons(quot(X,Y),nu95u95zWquot(activate(XS),activate(YS)))
 zWquot(nil,XS) -> nil
 zWquot(X1,X2) -> nu95u95zWquot(X1,X2)
 zWquot(XS,nil) -> nil
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[activate](X) = X
[from](X) = 2.X + 1
[minus](X1,X2) = 2.X1 + 2.X2
[quot](X1,X2) = 2.X2 + 2
[s](X) = X
[sel](X1,X2) = 0
[zWquot](X1,X2) = 2.X1 + 2.X2 + 2
[num0] = 2
[cons](X1,X2) = X2
[fSNonEmpty] = 0
[nu95u95from](X) = 2.X + 1
[nu95u95s](X) = X
[nu95u95zWquot](X1,X2) = 2.X1 + 2.X2 + 2
[nil] = 2
[ACTIVATE](X) = 2.X
[FROM](X) = 0
[MINUS](X1,X2) = 0
[QUOT](X1,X2) = 0
[S](X) = 0
[SEL](X1,X2) = 0
[ZWQUOT](X1,X2) = 2.X1 + 2.X2

Problem 1.3: 

SCC Processor:
-> Pairs:
 ACTIVATE(nu95u95s(X)) -> ACTIVATE(X)
 ACTIVATE(nu95u95zWquot(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95zWquot(X1,X2)) -> ACTIVATE(X2)
 ACTIVATE(nu95u95zWquot(X1,X2)) -> ZWQUOT(activate(X1),activate(X2))
 ZWQUOT(cons(X,XS),cons(Y,YS)) -> ACTIVATE(XS)
 ZWQUOT(cons(X,XS),cons(Y,YS)) -> ACTIVATE(YS)
-> Rules:
 activate(nu95u95from(X)) -> from(activate(X))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95zWquot(X1,X2)) -> zWquot(activate(X1),activate(X2))
 activate(X) -> X
 from(X) -> cons(X,nu95u95from(nu95u95s(X)))
 from(X) -> nu95u95from(X)
 minus(s(X),s(Y)) -> minus(X,Y)
 minus(X,num0) -> num0
 quot(s(X),s(Y)) -> s(quot(minus(X,Y),s(Y)))
 quot(num0,s(Y)) -> num0
 s(X) -> nu95u95s(X)
 sel(s(N),cons(X,XS)) -> sel(N,activate(XS))
 sel(num0,cons(X,XS)) -> X
 zWquot(cons(X,XS),cons(Y,YS)) -> cons(quot(X,Y),nu95u95zWquot(activate(XS),activate(YS)))
 zWquot(nil,XS) -> nil
 zWquot(X1,X2) -> nu95u95zWquot(X1,X2)
 zWquot(XS,nil) -> nil
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVATE(nu95u95s(X)) -> ACTIVATE(X)
 ACTIVATE(nu95u95zWquot(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95zWquot(X1,X2)) -> ACTIVATE(X2)
 ACTIVATE(nu95u95zWquot(X1,X2)) -> ZWQUOT(activate(X1),activate(X2))
 ZWQUOT(cons(X,XS),cons(Y,YS)) -> ACTIVATE(XS)
 ZWQUOT(cons(X,XS),cons(Y,YS)) -> ACTIVATE(YS)
->->-> Rules:
 activate(nu95u95from(X)) -> from(activate(X))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95zWquot(X1,X2)) -> zWquot(activate(X1),activate(X2))
 activate(X) -> X
 from(X) -> cons(X,nu95u95from(nu95u95s(X)))
 from(X) -> nu95u95from(X)
 minus(s(X),s(Y)) -> minus(X,Y)
 minus(X,num0) -> num0
 quot(s(X),s(Y)) -> s(quot(minus(X,Y),s(Y)))
 quot(num0,s(Y)) -> num0
 s(X) -> nu95u95s(X)
 sel(s(N),cons(X,XS)) -> sel(N,activate(XS))
 sel(num0,cons(X,XS)) -> X
 zWquot(cons(X,XS),cons(Y,YS)) -> cons(quot(X,Y),nu95u95zWquot(activate(XS),activate(YS)))
 zWquot(nil,XS) -> nil
 zWquot(X1,X2) -> nu95u95zWquot(X1,X2)
 zWquot(XS,nil) -> nil

Problem 1.3: 

Reduction Pair Processor:
-> Pairs:
 ACTIVATE(nu95u95s(X)) -> ACTIVATE(X)
 ACTIVATE(nu95u95zWquot(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95zWquot(X1,X2)) -> ACTIVATE(X2)
 ACTIVATE(nu95u95zWquot(X1,X2)) -> ZWQUOT(activate(X1),activate(X2))
 ZWQUOT(cons(X,XS),cons(Y,YS)) -> ACTIVATE(XS)
 ZWQUOT(cons(X,XS),cons(Y,YS)) -> ACTIVATE(YS)
-> Rules:
 activate(nu95u95from(X)) -> from(activate(X))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95zWquot(X1,X2)) -> zWquot(activate(X1),activate(X2))
 activate(X) -> X
 from(X) -> cons(X,nu95u95from(nu95u95s(X)))
 from(X) -> nu95u95from(X)
 minus(s(X),s(Y)) -> minus(X,Y)
 minus(X,num0) -> num0
 quot(s(X),s(Y)) -> s(quot(minus(X,Y),s(Y)))
 quot(num0,s(Y)) -> num0
 s(X) -> nu95u95s(X)
 sel(s(N),cons(X,XS)) -> sel(N,activate(XS))
 sel(num0,cons(X,XS)) -> X
 zWquot(cons(X,XS),cons(Y,YS)) -> cons(quot(X,Y),nu95u95zWquot(activate(XS),activate(YS)))
 zWquot(nil,XS) -> nil
 zWquot(X1,X2) -> nu95u95zWquot(X1,X2)
 zWquot(XS,nil) -> nil
-> Usable rules:
 activate(nu95u95from(X)) -> from(activate(X))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95zWquot(X1,X2)) -> zWquot(activate(X1),activate(X2))
 activate(X) -> X
 from(X) -> cons(X,nu95u95from(nu95u95s(X)))
 from(X) -> nu95u95from(X)
 minus(s(X),s(Y)) -> minus(X,Y)
 minus(X,num0) -> num0
 quot(s(X),s(Y)) -> s(quot(minus(X,Y),s(Y)))
 quot(num0,s(Y)) -> num0
 s(X) -> nu95u95s(X)
 zWquot(cons(X,XS),cons(Y,YS)) -> cons(quot(X,Y),nu95u95zWquot(activate(XS),activate(YS)))
 zWquot(nil,XS) -> nil
 zWquot(X1,X2) -> nu95u95zWquot(X1,X2)
 zWquot(XS,nil) -> nil
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[activate](X) = X
[from](X) = 0
[minus](X1,X2) = X1
[quot](X1,X2) = 2.X1
[s](X) = 2.X + 2
[sel](X1,X2) = 0
[zWquot](X1,X2) = 2.X1 + 2.X2
[num0] = 0
[cons](X1,X2) = 2.X2
[fSNonEmpty] = 0
[nu95u95from](X) = 0
[nu95u95s](X) = 2.X + 2
[nu95u95zWquot](X1,X2) = 2.X1 + 2.X2
[nil] = 2
[ACTIVATE](X) = X + 2
[FROM](X) = 0
[MINUS](X1,X2) = 0
[QUOT](X1,X2) = 0
[S](X) = 0
[SEL](X1,X2) = 0
[ZWQUOT](X1,X2) = 2.X1 + 2.X2 + 2

Problem 1.3: 

SCC Processor:
-> Pairs:
 ACTIVATE(nu95u95zWquot(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95zWquot(X1,X2)) -> ACTIVATE(X2)
 ACTIVATE(nu95u95zWquot(X1,X2)) -> ZWQUOT(activate(X1),activate(X2))
 ZWQUOT(cons(X,XS),cons(Y,YS)) -> ACTIVATE(XS)
 ZWQUOT(cons(X,XS),cons(Y,YS)) -> ACTIVATE(YS)
-> Rules:
 activate(nu95u95from(X)) -> from(activate(X))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95zWquot(X1,X2)) -> zWquot(activate(X1),activate(X2))
 activate(X) -> X
 from(X) -> cons(X,nu95u95from(nu95u95s(X)))
 from(X) -> nu95u95from(X)
 minus(s(X),s(Y)) -> minus(X,Y)
 minus(X,num0) -> num0
 quot(s(X),s(Y)) -> s(quot(minus(X,Y),s(Y)))
 quot(num0,s(Y)) -> num0
 s(X) -> nu95u95s(X)
 sel(s(N),cons(X,XS)) -> sel(N,activate(XS))
 sel(num0,cons(X,XS)) -> X
 zWquot(cons(X,XS),cons(Y,YS)) -> cons(quot(X,Y),nu95u95zWquot(activate(XS),activate(YS)))
 zWquot(nil,XS) -> nil
 zWquot(X1,X2) -> nu95u95zWquot(X1,X2)
 zWquot(XS,nil) -> nil
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVATE(nu95u95zWquot(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95zWquot(X1,X2)) -> ACTIVATE(X2)
 ACTIVATE(nu95u95zWquot(X1,X2)) -> ZWQUOT(activate(X1),activate(X2))
 ZWQUOT(cons(X,XS),cons(Y,YS)) -> ACTIVATE(XS)
 ZWQUOT(cons(X,XS),cons(Y,YS)) -> ACTIVATE(YS)
->->-> Rules:
 activate(nu95u95from(X)) -> from(activate(X))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95zWquot(X1,X2)) -> zWquot(activate(X1),activate(X2))
 activate(X) -> X
 from(X) -> cons(X,nu95u95from(nu95u95s(X)))
 from(X) -> nu95u95from(X)
 minus(s(X),s(Y)) -> minus(X,Y)
 minus(X,num0) -> num0
 quot(s(X),s(Y)) -> s(quot(minus(X,Y),s(Y)))
 quot(num0,s(Y)) -> num0
 s(X) -> nu95u95s(X)
 sel(s(N),cons(X,XS)) -> sel(N,activate(XS))
 sel(num0,cons(X,XS)) -> X
 zWquot(cons(X,XS),cons(Y,YS)) -> cons(quot(X,Y),nu95u95zWquot(activate(XS),activate(YS)))
 zWquot(nil,XS) -> nil
 zWquot(X1,X2) -> nu95u95zWquot(X1,X2)
 zWquot(XS,nil) -> nil

Problem 1.3: 

Reduction Pair Processor:
-> Pairs:
 ACTIVATE(nu95u95zWquot(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95zWquot(X1,X2)) -> ACTIVATE(X2)
 ACTIVATE(nu95u95zWquot(X1,X2)) -> ZWQUOT(activate(X1),activate(X2))
 ZWQUOT(cons(X,XS),cons(Y,YS)) -> ACTIVATE(XS)
 ZWQUOT(cons(X,XS),cons(Y,YS)) -> ACTIVATE(YS)
-> Rules:
 activate(nu95u95from(X)) -> from(activate(X))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95zWquot(X1,X2)) -> zWquot(activate(X1),activate(X2))
 activate(X) -> X
 from(X) -> cons(X,nu95u95from(nu95u95s(X)))
 from(X) -> nu95u95from(X)
 minus(s(X),s(Y)) -> minus(X,Y)
 minus(X,num0) -> num0
 quot(s(X),s(Y)) -> s(quot(minus(X,Y),s(Y)))
 quot(num0,s(Y)) -> num0
 s(X) -> nu95u95s(X)
 sel(s(N),cons(X,XS)) -> sel(N,activate(XS))
 sel(num0,cons(X,XS)) -> X
 zWquot(cons(X,XS),cons(Y,YS)) -> cons(quot(X,Y),nu95u95zWquot(activate(XS),activate(YS)))
 zWquot(nil,XS) -> nil
 zWquot(X1,X2) -> nu95u95zWquot(X1,X2)
 zWquot(XS,nil) -> nil
-> Usable rules:
 activate(nu95u95from(X)) -> from(activate(X))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95zWquot(X1,X2)) -> zWquot(activate(X1),activate(X2))
 activate(X) -> X
 from(X) -> cons(X,nu95u95from(nu95u95s(X)))
 from(X) -> nu95u95from(X)
 minus(s(X),s(Y)) -> minus(X,Y)
 minus(X,num0) -> num0
 quot(s(X),s(Y)) -> s(quot(minus(X,Y),s(Y)))
 quot(num0,s(Y)) -> num0
 s(X) -> nu95u95s(X)
 zWquot(cons(X,XS),cons(Y,YS)) -> cons(quot(X,Y),nu95u95zWquot(activate(XS),activate(YS)))
 zWquot(nil,XS) -> nil
 zWquot(X1,X2) -> nu95u95zWquot(X1,X2)
 zWquot(XS,nil) -> nil
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[activate](X) = X
[from](X) = 1
[minus](X1,X2) = 2
[quot](X1,X2) = 2.X2 + 2
[s](X) = 2
[sel](X1,X2) = 0
[zWquot](X1,X2) = X1 + 2.X2 + 1
[num0] = 2
[cons](X1,X2) = X2
[fSNonEmpty] = 0
[nu95u95from](X) = 1
[nu95u95s](X) = 2
[nu95u95zWquot](X1,X2) = X1 + 2.X2 + 1
[nil] = 2
[ACTIVATE](X) = 2.X + 2
[FROM](X) = 0
[MINUS](X1,X2) = 0
[QUOT](X1,X2) = 0
[S](X) = 0
[SEL](X1,X2) = 0
[ZWQUOT](X1,X2) = 2.X1 + 2.X2 + 2

Problem 1.3: 

SCC Processor:
-> Pairs:
 ACTIVATE(nu95u95zWquot(X1,X2)) -> ACTIVATE(X2)
 ACTIVATE(nu95u95zWquot(X1,X2)) -> ZWQUOT(activate(X1),activate(X2))
 ZWQUOT(cons(X,XS),cons(Y,YS)) -> ACTIVATE(XS)
 ZWQUOT(cons(X,XS),cons(Y,YS)) -> ACTIVATE(YS)
-> Rules:
 activate(nu95u95from(X)) -> from(activate(X))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95zWquot(X1,X2)) -> zWquot(activate(X1),activate(X2))
 activate(X) -> X
 from(X) -> cons(X,nu95u95from(nu95u95s(X)))
 from(X) -> nu95u95from(X)
 minus(s(X),s(Y)) -> minus(X,Y)
 minus(X,num0) -> num0
 quot(s(X),s(Y)) -> s(quot(minus(X,Y),s(Y)))
 quot(num0,s(Y)) -> num0
 s(X) -> nu95u95s(X)
 sel(s(N),cons(X,XS)) -> sel(N,activate(XS))
 sel(num0,cons(X,XS)) -> X
 zWquot(cons(X,XS),cons(Y,YS)) -> cons(quot(X,Y),nu95u95zWquot(activate(XS),activate(YS)))
 zWquot(nil,XS) -> nil
 zWquot(X1,X2) -> nu95u95zWquot(X1,X2)
 zWquot(XS,nil) -> nil
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVATE(nu95u95zWquot(X1,X2)) -> ACTIVATE(X2)
 ACTIVATE(nu95u95zWquot(X1,X2)) -> ZWQUOT(activate(X1),activate(X2))
 ZWQUOT(cons(X,XS),cons(Y,YS)) -> ACTIVATE(XS)
 ZWQUOT(cons(X,XS),cons(Y,YS)) -> ACTIVATE(YS)
->->-> Rules:
 activate(nu95u95from(X)) -> from(activate(X))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95zWquot(X1,X2)) -> zWquot(activate(X1),activate(X2))
 activate(X) -> X
 from(X) -> cons(X,nu95u95from(nu95u95s(X)))
 from(X) -> nu95u95from(X)
 minus(s(X),s(Y)) -> minus(X,Y)
 minus(X,num0) -> num0
 quot(s(X),s(Y)) -> s(quot(minus(X,Y),s(Y)))
 quot(num0,s(Y)) -> num0
 s(X) -> nu95u95s(X)
 sel(s(N),cons(X,XS)) -> sel(N,activate(XS))
 sel(num0,cons(X,XS)) -> X
 zWquot(cons(X,XS),cons(Y,YS)) -> cons(quot(X,Y),nu95u95zWquot(activate(XS),activate(YS)))
 zWquot(nil,XS) -> nil
 zWquot(X1,X2) -> nu95u95zWquot(X1,X2)
 zWquot(XS,nil) -> nil

Problem 1.3: 

Reduction Pair Processor:
-> Pairs:
 ACTIVATE(nu95u95zWquot(X1,X2)) -> ACTIVATE(X2)
 ACTIVATE(nu95u95zWquot(X1,X2)) -> ZWQUOT(activate(X1),activate(X2))
 ZWQUOT(cons(X,XS),cons(Y,YS)) -> ACTIVATE(XS)
 ZWQUOT(cons(X,XS),cons(Y,YS)) -> ACTIVATE(YS)
-> Rules:
 activate(nu95u95from(X)) -> from(activate(X))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95zWquot(X1,X2)) -> zWquot(activate(X1),activate(X2))
 activate(X) -> X
 from(X) -> cons(X,nu95u95from(nu95u95s(X)))
 from(X) -> nu95u95from(X)
 minus(s(X),s(Y)) -> minus(X,Y)
 minus(X,num0) -> num0
 quot(s(X),s(Y)) -> s(quot(minus(X,Y),s(Y)))
 quot(num0,s(Y)) -> num0
 s(X) -> nu95u95s(X)
 sel(s(N),cons(X,XS)) -> sel(N,activate(XS))
 sel(num0,cons(X,XS)) -> X
 zWquot(cons(X,XS),cons(Y,YS)) -> cons(quot(X,Y),nu95u95zWquot(activate(XS),activate(YS)))
 zWquot(nil,XS) -> nil
 zWquot(X1,X2) -> nu95u95zWquot(X1,X2)
 zWquot(XS,nil) -> nil
-> Usable rules:
 activate(nu95u95from(X)) -> from(activate(X))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95zWquot(X1,X2)) -> zWquot(activate(X1),activate(X2))
 activate(X) -> X
 from(X) -> cons(X,nu95u95from(nu95u95s(X)))
 from(X) -> nu95u95from(X)
 minus(s(X),s(Y)) -> minus(X,Y)
 minus(X,num0) -> num0
 quot(s(X),s(Y)) -> s(quot(minus(X,Y),s(Y)))
 quot(num0,s(Y)) -> num0
 s(X) -> nu95u95s(X)
 zWquot(cons(X,XS),cons(Y,YS)) -> cons(quot(X,Y),nu95u95zWquot(activate(XS),activate(YS)))
 zWquot(nil,XS) -> nil
 zWquot(X1,X2) -> nu95u95zWquot(X1,X2)
 zWquot(XS,nil) -> nil
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[activate](X) = X
[from](X) = 2
[minus](X1,X2) = 0
[quot](X1,X2) = 2.X1
[s](X) = 2.X + 2
[sel](X1,X2) = 0
[zWquot](X1,X2) = X1 + 2.X2 + 2
[num0] = 0
[cons](X1,X2) = X2
[fSNonEmpty] = 0
[nu95u95from](X) = 2
[nu95u95s](X) = 2.X + 2
[nu95u95zWquot](X1,X2) = X1 + 2.X2 + 2
[nil] = 0
[ACTIVATE](X) = 2.X + 2
[FROM](X) = 0
[MINUS](X1,X2) = 0
[QUOT](X1,X2) = 0
[S](X) = 0
[SEL](X1,X2) = 0
[ZWQUOT](X1,X2) = 2.X1 + 2.X2 + 2

Problem 1.3: 

SCC Processor:
-> Pairs:
 ACTIVATE(nu95u95zWquot(X1,X2)) -> ZWQUOT(activate(X1),activate(X2))
 ZWQUOT(cons(X,XS),cons(Y,YS)) -> ACTIVATE(XS)
 ZWQUOT(cons(X,XS),cons(Y,YS)) -> ACTIVATE(YS)
-> Rules:
 activate(nu95u95from(X)) -> from(activate(X))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95zWquot(X1,X2)) -> zWquot(activate(X1),activate(X2))
 activate(X) -> X
 from(X) -> cons(X,nu95u95from(nu95u95s(X)))
 from(X) -> nu95u95from(X)
 minus(s(X),s(Y)) -> minus(X,Y)
 minus(X,num0) -> num0
 quot(s(X),s(Y)) -> s(quot(minus(X,Y),s(Y)))
 quot(num0,s(Y)) -> num0
 s(X) -> nu95u95s(X)
 sel(s(N),cons(X,XS)) -> sel(N,activate(XS))
 sel(num0,cons(X,XS)) -> X
 zWquot(cons(X,XS),cons(Y,YS)) -> cons(quot(X,Y),nu95u95zWquot(activate(XS),activate(YS)))
 zWquot(nil,XS) -> nil
 zWquot(X1,X2) -> nu95u95zWquot(X1,X2)
 zWquot(XS,nil) -> nil
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVATE(nu95u95zWquot(X1,X2)) -> ZWQUOT(activate(X1),activate(X2))
 ZWQUOT(cons(X,XS),cons(Y,YS)) -> ACTIVATE(XS)
 ZWQUOT(cons(X,XS),cons(Y,YS)) -> ACTIVATE(YS)
->->-> Rules:
 activate(nu95u95from(X)) -> from(activate(X))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95zWquot(X1,X2)) -> zWquot(activate(X1),activate(X2))
 activate(X) -> X
 from(X) -> cons(X,nu95u95from(nu95u95s(X)))
 from(X) -> nu95u95from(X)
 minus(s(X),s(Y)) -> minus(X,Y)
 minus(X,num0) -> num0
 quot(s(X),s(Y)) -> s(quot(minus(X,Y),s(Y)))
 quot(num0,s(Y)) -> num0
 s(X) -> nu95u95s(X)
 sel(s(N),cons(X,XS)) -> sel(N,activate(XS))
 sel(num0,cons(X,XS)) -> X
 zWquot(cons(X,XS),cons(Y,YS)) -> cons(quot(X,Y),nu95u95zWquot(activate(XS),activate(YS)))
 zWquot(nil,XS) -> nil
 zWquot(X1,X2) -> nu95u95zWquot(X1,X2)
 zWquot(XS,nil) -> nil

Problem 1.3: 

Reduction Pair Processor:
-> Pairs:
 ACTIVATE(nu95u95zWquot(X1,X2)) -> ZWQUOT(activate(X1),activate(X2))
 ZWQUOT(cons(X,XS),cons(Y,YS)) -> ACTIVATE(XS)
 ZWQUOT(cons(X,XS),cons(Y,YS)) -> ACTIVATE(YS)
-> Rules:
 activate(nu95u95from(X)) -> from(activate(X))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95zWquot(X1,X2)) -> zWquot(activate(X1),activate(X2))
 activate(X) -> X
 from(X) -> cons(X,nu95u95from(nu95u95s(X)))
 from(X) -> nu95u95from(X)
 minus(s(X),s(Y)) -> minus(X,Y)
 minus(X,num0) -> num0
 quot(s(X),s(Y)) -> s(quot(minus(X,Y),s(Y)))
 quot(num0,s(Y)) -> num0
 s(X) -> nu95u95s(X)
 sel(s(N),cons(X,XS)) -> sel(N,activate(XS))
 sel(num0,cons(X,XS)) -> X
 zWquot(cons(X,XS),cons(Y,YS)) -> cons(quot(X,Y),nu95u95zWquot(activate(XS),activate(YS)))
 zWquot(nil,XS) -> nil
 zWquot(X1,X2) -> nu95u95zWquot(X1,X2)
 zWquot(XS,nil) -> nil
-> Usable rules:
 activate(nu95u95from(X)) -> from(activate(X))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95zWquot(X1,X2)) -> zWquot(activate(X1),activate(X2))
 activate(X) -> X
 from(X) -> cons(X,nu95u95from(nu95u95s(X)))
 from(X) -> nu95u95from(X)
 minus(s(X),s(Y)) -> minus(X,Y)
 minus(X,num0) -> num0
 quot(s(X),s(Y)) -> s(quot(minus(X,Y),s(Y)))
 quot(num0,s(Y)) -> num0
 s(X) -> nu95u95s(X)
 zWquot(cons(X,XS),cons(Y,YS)) -> cons(quot(X,Y),nu95u95zWquot(activate(XS),activate(YS)))
 zWquot(nil,XS) -> nil
 zWquot(X1,X2) -> nu95u95zWquot(X1,X2)
 zWquot(XS,nil) -> nil
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[activate](X) = X
[from](X) = 2
[minus](X1,X2) = X1
[quot](X1,X2) = X1 + 2.X2
[s](X) = X + 2
[sel](X1,X2) = 0
[zWquot](X1,X2) = X1 + 2.X2 + 2
[num0] = 0
[cons](X1,X2) = X2
[fSNonEmpty] = 0
[nu95u95from](X) = 2
[nu95u95s](X) = X + 2
[nu95u95zWquot](X1,X2) = X1 + 2.X2 + 2
[nil] = 2
[ACTIVATE](X) = 2.X + 1
[FROM](X) = 0
[MINUS](X1,X2) = 0
[QUOT](X1,X2) = 0
[S](X) = 0
[SEL](X1,X2) = 0
[ZWQUOT](X1,X2) = 2.X1 + 2.X2 + 2

Problem 1.3: 

SCC Processor:
-> Pairs:
 ZWQUOT(cons(X,XS),cons(Y,YS)) -> ACTIVATE(XS)
 ZWQUOT(cons(X,XS),cons(Y,YS)) -> ACTIVATE(YS)
-> Rules:
 activate(nu95u95from(X)) -> from(activate(X))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95zWquot(X1,X2)) -> zWquot(activate(X1),activate(X2))
 activate(X) -> X
 from(X) -> cons(X,nu95u95from(nu95u95s(X)))
 from(X) -> nu95u95from(X)
 minus(s(X),s(Y)) -> minus(X,Y)
 minus(X,num0) -> num0
 quot(s(X),s(Y)) -> s(quot(minus(X,Y),s(Y)))
 quot(num0,s(Y)) -> num0
 s(X) -> nu95u95s(X)
 sel(s(N),cons(X,XS)) -> sel(N,activate(XS))
 sel(num0,cons(X,XS)) -> X
 zWquot(cons(X,XS),cons(Y,YS)) -> cons(quot(X,Y),nu95u95zWquot(activate(XS),activate(YS)))
 zWquot(nil,XS) -> nil
 zWquot(X1,X2) -> nu95u95zWquot(X1,X2)
 zWquot(XS,nil) -> nil
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.4: 

Subterm Processor:
-> Pairs:
 SEL(s(N),cons(X,XS)) -> SEL(N,activate(XS))
-> Rules:
 activate(nu95u95from(X)) -> from(activate(X))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95zWquot(X1,X2)) -> zWquot(activate(X1),activate(X2))
 activate(X) -> X
 from(X) -> cons(X,nu95u95from(nu95u95s(X)))
 from(X) -> nu95u95from(X)
 minus(s(X),s(Y)) -> minus(X,Y)
 minus(X,num0) -> num0
 quot(s(X),s(Y)) -> s(quot(minus(X,Y),s(Y)))
 quot(num0,s(Y)) -> num0
 s(X) -> nu95u95s(X)
 sel(s(N),cons(X,XS)) -> sel(N,activate(XS))
 sel(num0,cons(X,XS)) -> X
 zWquot(cons(X,XS),cons(Y,YS)) -> cons(quot(X,Y),nu95u95zWquot(activate(XS),activate(YS)))
 zWquot(nil,XS) -> nil
 zWquot(X1,X2) -> nu95u95zWquot(X1,X2)
 zWquot(XS,nil) -> nil
->Projection:
 pi(SEL) = 1

Problem 1.4: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 activate(nu95u95from(X)) -> from(activate(X))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95zWquot(X1,X2)) -> zWquot(activate(X1),activate(X2))
 activate(X) -> X
 from(X) -> cons(X,nu95u95from(nu95u95s(X)))
 from(X) -> nu95u95from(X)
 minus(s(X),s(Y)) -> minus(X,Y)
 minus(X,num0) -> num0
 quot(s(X),s(Y)) -> s(quot(minus(X,Y),s(Y)))
 quot(num0,s(Y)) -> num0
 s(X) -> nu95u95s(X)
 sel(s(N),cons(X,XS)) -> sel(N,activate(XS))
 sel(num0,cons(X,XS)) -> X
 zWquot(cons(X,XS),cons(Y,YS)) -> cons(quot(X,Y),nu95u95zWquot(activate(XS),activate(YS)))
 zWquot(nil,XS) -> nil
 zWquot(X1,X2) -> nu95u95zWquot(X1,X2)
 zWquot(XS,nil) -> nil
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
