YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/HdKNC.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 3 ms]
(2) QDP
(3) DependencyGraphProof [EQUIVALENT, 0 ms]
(4) AND
    (5) QDP
        (6) UsableRulesProof [EQUIVALENT, 0 ms]
        (7) QDP
        (8) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (9) YES
    (10) QDP
        (11) MRRProof [EQUIVALENT, 0 ms]
        (12) QDP
        (13) QDPOrderProof [EQUIVALENT, 0 ms]
        (14) QDP
        (15) DependencyGraphProof [EQUIVALENT, 0 ms]
        (16) TRUE


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   active(f(a, X, X)) -> mark(f(X, b, b))
   active(b) -> mark(a)
   mark(f(X1, X2, X3)) -> active(f(X1, mark(X2), X3))
   mark(a) -> active(a)
   mark(b) -> active(b)
   f(mark(X1), X2, X3) -> f(X1, X2, X3)
   f(X1, mark(X2), X3) -> f(X1, X2, X3)
   f(X1, X2, mark(X3)) -> f(X1, X2, X3)
   f(active(X1), X2, X3) -> f(X1, X2, X3)
   f(X1, active(X2), X3) -> f(X1, X2, X3)
   f(X1, X2, active(X3)) -> f(X1, X2, X3)

Q is empty.

----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ACTIVE(f(a, X, X)) -> MARK(f(X, b, b))
   ACTIVE(f(a, X, X)) -> F(X, b, b)
   ACTIVE(b) -> MARK(a)
   MARK(f(X1, X2, X3)) -> ACTIVE(f(X1, mark(X2), X3))
   MARK(f(X1, X2, X3)) -> F(X1, mark(X2), X3)
   MARK(f(X1, X2, X3)) -> MARK(X2)
   MARK(a) -> ACTIVE(a)
   MARK(b) -> ACTIVE(b)
   F(mark(X1), X2, X3) -> F(X1, X2, X3)
   F(X1, mark(X2), X3) -> F(X1, X2, X3)
   F(X1, X2, mark(X3)) -> F(X1, X2, X3)
   F(active(X1), X2, X3) -> F(X1, X2, X3)
   F(X1, active(X2), X3) -> F(X1, X2, X3)
   F(X1, X2, active(X3)) -> F(X1, X2, X3)

The TRS R consists of the following rules:

   active(f(a, X, X)) -> mark(f(X, b, b))
   active(b) -> mark(a)
   mark(f(X1, X2, X3)) -> active(f(X1, mark(X2), X3))
   mark(a) -> active(a)
   mark(b) -> active(b)
   f(mark(X1), X2, X3) -> f(X1, X2, X3)
   f(X1, mark(X2), X3) -> f(X1, X2, X3)
   f(X1, X2, mark(X3)) -> f(X1, X2, X3)
   f(active(X1), X2, X3) -> f(X1, X2, X3)
   f(X1, active(X2), X3) -> f(X1, X2, X3)
   f(X1, X2, active(X3)) -> f(X1, X2, X3)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs with 5 less nodes.
----------------------------------------

(4)
Complex Obligation (AND)

----------------------------------------

(5)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(X1, mark(X2), X3) -> F(X1, X2, X3)
   F(mark(X1), X2, X3) -> F(X1, X2, X3)
   F(X1, X2, mark(X3)) -> F(X1, X2, X3)
   F(active(X1), X2, X3) -> F(X1, X2, X3)
   F(X1, active(X2), X3) -> F(X1, X2, X3)
   F(X1, X2, active(X3)) -> F(X1, X2, X3)

The TRS R consists of the following rules:

   active(f(a, X, X)) -> mark(f(X, b, b))
   active(b) -> mark(a)
   mark(f(X1, X2, X3)) -> active(f(X1, mark(X2), X3))
   mark(a) -> active(a)
   mark(b) -> active(b)
   f(mark(X1), X2, X3) -> f(X1, X2, X3)
   f(X1, mark(X2), X3) -> f(X1, X2, X3)
   f(X1, X2, mark(X3)) -> f(X1, X2, X3)
   f(active(X1), X2, X3) -> f(X1, X2, X3)
   f(X1, active(X2), X3) -> f(X1, X2, X3)
   f(X1, X2, active(X3)) -> f(X1, X2, X3)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(6) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(7)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(X1, mark(X2), X3) -> F(X1, X2, X3)
   F(mark(X1), X2, X3) -> F(X1, X2, X3)
   F(X1, X2, mark(X3)) -> F(X1, X2, X3)
   F(active(X1), X2, X3) -> F(X1, X2, X3)
   F(X1, active(X2), X3) -> F(X1, X2, X3)
   F(X1, X2, active(X3)) -> F(X1, X2, X3)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(8) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*F(X1, mark(X2), X3) -> F(X1, X2, X3)
The graph contains the following edges 1 >= 1, 2 > 2, 3 >= 3


*F(mark(X1), X2, X3) -> F(X1, X2, X3)
The graph contains the following edges 1 > 1, 2 >= 2, 3 >= 3


*F(X1, X2, mark(X3)) -> F(X1, X2, X3)
The graph contains the following edges 1 >= 1, 2 >= 2, 3 > 3


*F(active(X1), X2, X3) -> F(X1, X2, X3)
The graph contains the following edges 1 > 1, 2 >= 2, 3 >= 3


*F(X1, active(X2), X3) -> F(X1, X2, X3)
The graph contains the following edges 1 >= 1, 2 > 2, 3 >= 3


*F(X1, X2, active(X3)) -> F(X1, X2, X3)
The graph contains the following edges 1 >= 1, 2 >= 2, 3 > 3


----------------------------------------

(9)
YES

----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(f(X1, X2, X3)) -> ACTIVE(f(X1, mark(X2), X3))
   ACTIVE(f(a, X, X)) -> MARK(f(X, b, b))
   MARK(f(X1, X2, X3)) -> MARK(X2)

The TRS R consists of the following rules:

   active(f(a, X, X)) -> mark(f(X, b, b))
   active(b) -> mark(a)
   mark(f(X1, X2, X3)) -> active(f(X1, mark(X2), X3))
   mark(a) -> active(a)
   mark(b) -> active(b)
   f(mark(X1), X2, X3) -> f(X1, X2, X3)
   f(X1, mark(X2), X3) -> f(X1, X2, X3)
   f(X1, X2, mark(X3)) -> f(X1, X2, X3)
   f(active(X1), X2, X3) -> f(X1, X2, X3)
   f(X1, active(X2), X3) -> f(X1, X2, X3)
   f(X1, X2, active(X3)) -> f(X1, X2, X3)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) MRRProof (EQUIVALENT)
By using the rule removal processor [LPAR04] with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented.

Strictly oriented dependency pairs:

   MARK(f(X1, X2, X3)) -> MARK(X2)


Used ordering: Polynomial interpretation [POLO]:

   POL(ACTIVE(x_1)) = 2*x_1
   POL(MARK(x_1)) = 2*x_1
   POL(a) = 0
   POL(active(x_1)) = x_1
   POL(b) = 0
   POL(f(x_1, x_2, x_3)) = 2 + x_1 + x_2 + x_3
   POL(mark(x_1)) = x_1


----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(f(X1, X2, X3)) -> ACTIVE(f(X1, mark(X2), X3))
   ACTIVE(f(a, X, X)) -> MARK(f(X, b, b))

The TRS R consists of the following rules:

   active(f(a, X, X)) -> mark(f(X, b, b))
   active(b) -> mark(a)
   mark(f(X1, X2, X3)) -> active(f(X1, mark(X2), X3))
   mark(a) -> active(a)
   mark(b) -> active(b)
   f(mark(X1), X2, X3) -> f(X1, X2, X3)
   f(X1, mark(X2), X3) -> f(X1, X2, X3)
   f(X1, X2, mark(X3)) -> f(X1, X2, X3)
   f(active(X1), X2, X3) -> f(X1, X2, X3)
   f(X1, active(X2), X3) -> f(X1, X2, X3)
   f(X1, X2, active(X3)) -> f(X1, X2, X3)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   MARK(f(X1, X2, X3)) -> ACTIVE(f(X1, mark(X2), X3))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial Order [NEGPOLO,POLO] with Interpretation:

POL( ACTIVE_1(x_1) ) = max{0, x_1 - 1}
POL( f_3(x_1, ..., x_3) ) = 2x_1 + 2x_3
POL( mark_1(x_1) ) = 2x_1 + 1
POL( active_1(x_1) ) = x_1 + 2
POL( a ) = 1
POL( b ) = 0
POL( MARK_1(x_1) ) = x_1 + 1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   f(X1, mark(X2), X3) -> f(X1, X2, X3)
   f(mark(X1), X2, X3) -> f(X1, X2, X3)
   f(X1, X2, mark(X3)) -> f(X1, X2, X3)
   f(active(X1), X2, X3) -> f(X1, X2, X3)
   f(X1, active(X2), X3) -> f(X1, X2, X3)
   f(X1, X2, active(X3)) -> f(X1, X2, X3)


----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ACTIVE(f(a, X, X)) -> MARK(f(X, b, b))

The TRS R consists of the following rules:

   active(f(a, X, X)) -> mark(f(X, b, b))
   active(b) -> mark(a)
   mark(f(X1, X2, X3)) -> active(f(X1, mark(X2), X3))
   mark(a) -> active(a)
   mark(b) -> active(b)
   f(mark(X1), X2, X3) -> f(X1, X2, X3)
   f(X1, mark(X2), X3) -> f(X1, X2, X3)
   f(X1, X2, mark(X3)) -> f(X1, X2, X3)
   f(active(X1), X2, X3) -> f(X1, X2, X3)
   f(X1, active(X2), X3) -> f(X1, X2, X3)
   f(X1, X2, active(X3)) -> f(X1, X2, X3)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 1 less node.
----------------------------------------

(16)
TRUE
