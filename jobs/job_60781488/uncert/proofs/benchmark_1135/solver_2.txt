YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/a93cR.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 0 ms]
(2) QDP
(3) DependencyGraphProof [EQUIVALENT, 0 ms]
(4) AND
    (5) QDP
        (6) UsableRulesProof [EQUIVALENT, 0 ms]
        (7) QDP
        (8) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (9) YES
    (10) QDP
        (11) UsableRulesProof [EQUIVALENT, 0 ms]
        (12) QDP
        (13) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (14) YES
    (15) QDP
        (16) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (17) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   from(X) -> cons(X, n__from(s(X)))
   2ndspos(0, Z) -> rnil
   2ndspos(s(N), cons(X, Z)) -> 2ndspos(s(N), cons2(X, activate(Z)))
   2ndspos(s(N), cons2(X, cons(Y, Z))) -> rcons(posrecip(Y), 2ndsneg(N, activate(Z)))
   2ndsneg(0, Z) -> rnil
   2ndsneg(s(N), cons(X, Z)) -> 2ndsneg(s(N), cons2(X, activate(Z)))
   2ndsneg(s(N), cons2(X, cons(Y, Z))) -> rcons(negrecip(Y), 2ndspos(N, activate(Z)))
   pi(X) -> 2ndspos(X, from(0))
   plus(0, Y) -> Y
   plus(s(X), Y) -> s(plus(X, Y))
   times(0, Y) -> 0
   times(s(X), Y) -> plus(Y, times(X, Y))
   square(X) -> times(X, X)
   from(X) -> n__from(X)
   activate(n__from(X)) -> from(X)
   activate(X) -> X

Q is empty.

----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   2NDSPOS(s(N), cons(X, Z)) -> 2NDSPOS(s(N), cons2(X, activate(Z)))
   2NDSPOS(s(N), cons(X, Z)) -> ACTIVATE(Z)
   2NDSPOS(s(N), cons2(X, cons(Y, Z))) -> 2NDSNEG(N, activate(Z))
   2NDSPOS(s(N), cons2(X, cons(Y, Z))) -> ACTIVATE(Z)
   2NDSNEG(s(N), cons(X, Z)) -> 2NDSNEG(s(N), cons2(X, activate(Z)))
   2NDSNEG(s(N), cons(X, Z)) -> ACTIVATE(Z)
   2NDSNEG(s(N), cons2(X, cons(Y, Z))) -> 2NDSPOS(N, activate(Z))
   2NDSNEG(s(N), cons2(X, cons(Y, Z))) -> ACTIVATE(Z)
   PI(X) -> 2NDSPOS(X, from(0))
   PI(X) -> FROM(0)
   PLUS(s(X), Y) -> PLUS(X, Y)
   TIMES(s(X), Y) -> PLUS(Y, times(X, Y))
   TIMES(s(X), Y) -> TIMES(X, Y)
   SQUARE(X) -> TIMES(X, X)
   ACTIVATE(n__from(X)) -> FROM(X)

The TRS R consists of the following rules:

   from(X) -> cons(X, n__from(s(X)))
   2ndspos(0, Z) -> rnil
   2ndspos(s(N), cons(X, Z)) -> 2ndspos(s(N), cons2(X, activate(Z)))
   2ndspos(s(N), cons2(X, cons(Y, Z))) -> rcons(posrecip(Y), 2ndsneg(N, activate(Z)))
   2ndsneg(0, Z) -> rnil
   2ndsneg(s(N), cons(X, Z)) -> 2ndsneg(s(N), cons2(X, activate(Z)))
   2ndsneg(s(N), cons2(X, cons(Y, Z))) -> rcons(negrecip(Y), 2ndspos(N, activate(Z)))
   pi(X) -> 2ndspos(X, from(0))
   plus(0, Y) -> Y
   plus(s(X), Y) -> s(plus(X, Y))
   times(0, Y) -> 0
   times(s(X), Y) -> plus(Y, times(X, Y))
   square(X) -> times(X, X)
   from(X) -> n__from(X)
   activate(n__from(X)) -> from(X)
   activate(X) -> X

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 3 SCCs with 9 less nodes.
----------------------------------------

(4)
Complex Obligation (AND)

----------------------------------------

(5)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   PLUS(s(X), Y) -> PLUS(X, Y)

The TRS R consists of the following rules:

   from(X) -> cons(X, n__from(s(X)))
   2ndspos(0, Z) -> rnil
   2ndspos(s(N), cons(X, Z)) -> 2ndspos(s(N), cons2(X, activate(Z)))
   2ndspos(s(N), cons2(X, cons(Y, Z))) -> rcons(posrecip(Y), 2ndsneg(N, activate(Z)))
   2ndsneg(0, Z) -> rnil
   2ndsneg(s(N), cons(X, Z)) -> 2ndsneg(s(N), cons2(X, activate(Z)))
   2ndsneg(s(N), cons2(X, cons(Y, Z))) -> rcons(negrecip(Y), 2ndspos(N, activate(Z)))
   pi(X) -> 2ndspos(X, from(0))
   plus(0, Y) -> Y
   plus(s(X), Y) -> s(plus(X, Y))
   times(0, Y) -> 0
   times(s(X), Y) -> plus(Y, times(X, Y))
   square(X) -> times(X, X)
   from(X) -> n__from(X)
   activate(n__from(X)) -> from(X)
   activate(X) -> X

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(6) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(7)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   PLUS(s(X), Y) -> PLUS(X, Y)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(8) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*PLUS(s(X), Y) -> PLUS(X, Y)
The graph contains the following edges 1 > 1, 2 >= 2


----------------------------------------

(9)
YES

----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TIMES(s(X), Y) -> TIMES(X, Y)

The TRS R consists of the following rules:

   from(X) -> cons(X, n__from(s(X)))
   2ndspos(0, Z) -> rnil
   2ndspos(s(N), cons(X, Z)) -> 2ndspos(s(N), cons2(X, activate(Z)))
   2ndspos(s(N), cons2(X, cons(Y, Z))) -> rcons(posrecip(Y), 2ndsneg(N, activate(Z)))
   2ndsneg(0, Z) -> rnil
   2ndsneg(s(N), cons(X, Z)) -> 2ndsneg(s(N), cons2(X, activate(Z)))
   2ndsneg(s(N), cons2(X, cons(Y, Z))) -> rcons(negrecip(Y), 2ndspos(N, activate(Z)))
   pi(X) -> 2ndspos(X, from(0))
   plus(0, Y) -> Y
   plus(s(X), Y) -> s(plus(X, Y))
   times(0, Y) -> 0
   times(s(X), Y) -> plus(Y, times(X, Y))
   square(X) -> times(X, X)
   from(X) -> n__from(X)
   activate(n__from(X)) -> from(X)
   activate(X) -> X

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TIMES(s(X), Y) -> TIMES(X, Y)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*TIMES(s(X), Y) -> TIMES(X, Y)
The graph contains the following edges 1 > 1, 2 >= 2


----------------------------------------

(14)
YES

----------------------------------------

(15)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   2NDSPOS(s(N), cons2(X, cons(Y, Z))) -> 2NDSNEG(N, activate(Z))
   2NDSNEG(s(N), cons(X, Z)) -> 2NDSNEG(s(N), cons2(X, activate(Z)))
   2NDSNEG(s(N), cons2(X, cons(Y, Z))) -> 2NDSPOS(N, activate(Z))
   2NDSPOS(s(N), cons(X, Z)) -> 2NDSPOS(s(N), cons2(X, activate(Z)))

The TRS R consists of the following rules:

   from(X) -> cons(X, n__from(s(X)))
   2ndspos(0, Z) -> rnil
   2ndspos(s(N), cons(X, Z)) -> 2ndspos(s(N), cons2(X, activate(Z)))
   2ndspos(s(N), cons2(X, cons(Y, Z))) -> rcons(posrecip(Y), 2ndsneg(N, activate(Z)))
   2ndsneg(0, Z) -> rnil
   2ndsneg(s(N), cons(X, Z)) -> 2ndsneg(s(N), cons2(X, activate(Z)))
   2ndsneg(s(N), cons2(X, cons(Y, Z))) -> rcons(negrecip(Y), 2ndspos(N, activate(Z)))
   pi(X) -> 2ndspos(X, from(0))
   plus(0, Y) -> Y
   plus(s(X), Y) -> s(plus(X, Y))
   times(0, Y) -> 0
   times(s(X), Y) -> plus(Y, times(X, Y))
   square(X) -> times(X, X)
   from(X) -> n__from(X)
   activate(n__from(X)) -> from(X)
   activate(X) -> X

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(16) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*2NDSNEG(s(N), cons2(X, cons(Y, Z))) -> 2NDSPOS(N, activate(Z))
The graph contains the following edges 1 > 1


*2NDSNEG(s(N), cons(X, Z)) -> 2NDSNEG(s(N), cons2(X, activate(Z)))
The graph contains the following edges 1 >= 1


*2NDSPOS(s(N), cons(X, Z)) -> 2NDSPOS(s(N), cons2(X, activate(Z)))
The graph contains the following edges 1 >= 1


*2NDSPOS(s(N), cons2(X, cons(Y, Z))) -> 2NDSNEG(N, activate(Z))
The graph contains the following edges 1 > 1


----------------------------------------

(17)
YES
