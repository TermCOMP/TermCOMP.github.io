YES

Problem 1: 

(VAR vu95NonEmpty x)
(RULES
f(x,x) -> f(g(x),x)
g(x) -> s(x)
)


Problem 1: 

Innermost Equivalent Processor:
-> Rules:
 f(x,x) -> f(g(x),x)
 g(x) -> s(x)
-> The term rewriting system is non-overlaping or locally confluent overlay system. Therefore, innermost termination implies termination.
 

Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 F(x,x) -> F(g(x),x)
 F(x,x) -> G(x)
-> Rules:
 f(x,x) -> f(g(x),x)
 g(x) -> s(x)

Problem 1: 

SCC Processor:
-> Pairs:
 F(x,x) -> F(g(x),x)
 F(x,x) -> G(x)
-> Rules:
 f(x,x) -> f(g(x),x)
 g(x) -> s(x)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 F(x,x) -> F(g(x),x)
->->-> Rules:
 f(x,x) -> f(g(x),x)
 g(x) -> s(x)

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 F(x,x) -> F(g(x),x)
-> Rules:
 f(x,x) -> f(g(x),x)
 g(x) -> s(x)
-> Usable rules:
 g(x) -> s(x)
->Mace4 Output:
 ============================== Mace4 =================================
Mace4 (64) version 2009-11A, November 2009.
Process 90 was started by ff862203 on r23m0034.hpc.itc.rwth-aachen.de,
Wed Sep  3 10:12:56 2025
The command was "./mace4 -c -f /tmp/mace421-15.in".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file /tmp/mace421-15.in

assign(max_seconds,20).

formulas(assumptions).
gtrsim_s0(x,y) & sqsupset_s0(y,z) -> sqsupset_s0(x,z) # label(compatibility).
succeq_s0(x,y) & sqsupset_s0(y,z) -> sqsupset_s0(x,z) # label(compatibility).
gtrsim_s0(x,y) & succeq_s0(y,z) -> gtrsim_s0(x,z) # label(compatibility).
arrow_s0(x1,y) -> arrow_s0(f3(x1),f3(y)) # label(congruence).
arrow_s0(x1,y) -> arrow_s0(f5(x1),f5(y)) # label(congruence).
arrow_s0(x1,y) -> arrow_s0(f7(x1,x2),f7(y,x2)) # label(congruence).
arrow_s0(x2,y) -> arrow_s0(f7(x1,x2),f7(x1,y)) # label(congruence).
arrow_s0(f3(x1),f5(x1)) # label(replacement).
arrow_s0(x,y) -> gtrsim_s0(x,y) # label(inclusion).
sqsupset_s0(f7(x1,x1),f7(f3(x1),x1)) # label(replacement).
sqsupset_s0(x,y) -> sqsupsetStar_s0(x,y) # label(inclusion).
sqsupset_s0(x,y) & sqsupsetStar_s0(y,z) -> sqsupsetStar_s0(x,z) # label(compatibility).
end_of_list.

formulas(goals).
(exists x sqsupsetStar_s0(x,x)) # label(wellfoundedness).
end_of_list.

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 gtrsim_s0(x,y) & sqsupset_s0(y,z) -> sqsupset_s0(x,z) # label(compatibility) # label(non_clause).  [assumption].
2 succeq_s0(x,y) & sqsupset_s0(y,z) -> sqsupset_s0(x,z) # label(compatibility) # label(non_clause).  [assumption].
3 gtrsim_s0(x,y) & succeq_s0(y,z) -> gtrsim_s0(x,z) # label(compatibility) # label(non_clause).  [assumption].
4 arrow_s0(x1,y) -> arrow_s0(f3(x1),f3(y)) # label(congruence) # label(non_clause).  [assumption].
5 arrow_s0(x1,y) -> arrow_s0(f5(x1),f5(y)) # label(congruence) # label(non_clause).  [assumption].
6 arrow_s0(x1,y) -> arrow_s0(f7(x1,x2),f7(y,x2)) # label(congruence) # label(non_clause).  [assumption].
7 arrow_s0(x2,y) -> arrow_s0(f7(x1,x2),f7(x1,y)) # label(congruence) # label(non_clause).  [assumption].
8 arrow_s0(x,y) -> gtrsim_s0(x,y) # label(inclusion) # label(non_clause).  [assumption].
9 sqsupset_s0(x,y) -> sqsupsetStar_s0(x,y) # label(inclusion) # label(non_clause).  [assumption].
10 sqsupset_s0(x,y) & sqsupsetStar_s0(y,z) -> sqsupsetStar_s0(x,z) # label(compatibility) # label(non_clause).  [assumption].
11 (exists x sqsupsetStar_s0(x,x)) # label(wellfoundedness) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== CLAUSES FOR SEARCH ====================

formulas(mace4_clauses).
-gtrsim_s0(x,y) | -sqsupset_s0(y,z) | sqsupset_s0(x,z) # label(compatibility).
-succeq_s0(x,y) | -sqsupset_s0(y,z) | sqsupset_s0(x,z) # label(compatibility).
-gtrsim_s0(x,y) | -succeq_s0(y,z) | gtrsim_s0(x,z) # label(compatibility).
-arrow_s0(x,y) | arrow_s0(f3(x),f3(y)) # label(congruence).
-arrow_s0(x,y) | arrow_s0(f5(x),f5(y)) # label(congruence).
-arrow_s0(x,y) | arrow_s0(f7(x,z),f7(y,z)) # label(congruence).
-arrow_s0(x,y) | arrow_s0(f7(z,x),f7(z,y)) # label(congruence).
arrow_s0(f3(x),f5(x)) # label(replacement).
-arrow_s0(x,y) | gtrsim_s0(x,y) # label(inclusion).
sqsupset_s0(f7(x,x),f7(f3(x),x)) # label(replacement).
-sqsupset_s0(x,y) | sqsupsetStar_s0(x,y) # label(inclusion).
-sqsupset_s0(x,y) | -sqsupsetStar_s0(y,z) | sqsupsetStar_s0(x,z) # label(compatibility).
-sqsupsetStar_s0(x,x) # label(wellfoundedness).
end_of_list.

============================== end of clauses for search =============

% There are no natural numbers in the input.

============================== DOMAIN SIZE 2 =========================

============================== MODEL =================================

interpretation( 2, [number=1, seconds=0], [

        function(f3(_), [ 1, 0 ]),

        function(f5(_), [ 1, 0 ]),

        function(f7(_,_), [
			   0, 1,
			   1, 0 ]),

        relation(arrow_s0(_,_), [
			   1, 0,
			   0, 1 ]),

        relation(gtrsim_s0(_,_), [
			   1, 0,
			   0, 1 ]),

        relation(sqsupsetStar_s0(_,_), [
			   0, 1,
			   0, 0 ]),

        relation(sqsupset_s0(_,_), [
			   0, 1,
			   0, 0 ]),

        relation(succeq_s0(_,_), [
			   0, 0,
			   0, 0 ])
]).

============================== end of model ==========================

============================== STATISTICS ============================

For domain size 2.

Current CPU time: 0.00 seconds (total CPU time: 0.00 seconds).
Ground clauses: seen=70, kept=70.
Selections=28, assignments=51, propagations=37, current_models=1.
Rewrite_terms=239, rewrite_bools=236, indexes=37.
Rules_from_neg_clauses=10, cross_offs=10.

============================== end of statistics =====================

User_CPU=0.00, System_CPU=0.00, Wall_clock=0.

Exiting with 1 model.

Process 90 exit (max_models) Wed Sep  3 10:12:56 2025
The process finished Wed Sep  3 10:12:56 2025


Mace4 cooked interpretation:

% number = 1
% seconds = 0

% Interpretation of size 2

f3(0) = 1.
f3(1) = 0.

f5(0) = 1.
f5(1) = 0.

f7(0,0) = 0.
f7(0,1) = 1.
f7(1,0) = 1.
f7(1,1) = 0.

  arrow_s0(0,0).
- arrow_s0(0,1).
- arrow_s0(1,0).
  arrow_s0(1,1).

  gtrsim_s0(0,0).
- gtrsim_s0(0,1).
- gtrsim_s0(1,0).
  gtrsim_s0(1,1).

- sqsupsetStar_s0(0,0).
  sqsupsetStar_s0(0,1).
- sqsupsetStar_s0(1,0).
- sqsupsetStar_s0(1,1).

- sqsupset_s0(0,0).
  sqsupset_s0(0,1).
- sqsupset_s0(1,0).
- sqsupset_s0(1,1).

- succeq_s0(0,0).
- succeq_s0(0,1).
- succeq_s0(1,0).
- succeq_s0(1,1).


Problem 1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 f(x,x) -> f(g(x),x)
 g(x) -> s(x)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
