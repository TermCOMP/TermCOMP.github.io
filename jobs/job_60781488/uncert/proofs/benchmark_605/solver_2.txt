YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/YRIx0.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 0 ms]
(2) QDP
(3) TransformationProof [EQUIVALENT, 0 ms]
(4) QDP
(5) TransformationProof [EQUIVALENT, 0 ms]
(6) QDP
(7) DependencyGraphProof [EQUIVALENT, 0 ms]
(8) QDP
(9) TransformationProof [EQUIVALENT, 0 ms]
(10) QDP
(11) DependencyGraphProof [EQUIVALENT, 0 ms]
(12) QDP
(13) QDPOrderProof [EQUIVALENT, 28 ms]
(14) QDP
(15) TransformationProof [EQUIVALENT, 0 ms]
(16) QDP
(17) TransformationProof [EQUIVALENT, 0 ms]
(18) QDP
(19) DependencyGraphProof [EQUIVALENT, 0 ms]
(20) QDP
(21) QDPOrderProof [EQUIVALENT, 17 ms]
(22) QDP
(23) QDPOrderProof [EQUIVALENT, 0 ms]
(24) QDP
(25) DependencyGraphProof [EQUIVALENT, 0 ms]
(26) QDP
(27) QDPOrderProof [EQUIVALENT, 5 ms]
(28) QDP
(29) DependencyGraphProof [EQUIVALENT, 0 ms]
(30) TRUE


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   b(x, y) -> c(a(c(y), a(0, x)))
   a(y, x) -> y
   a(y, c(b(a(0, x), 0))) -> b(a(c(b(0, y)), x), 0)

Q is empty.

----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(x, y) -> A(c(y), a(0, x))
   B(x, y) -> A(0, x)
   A(y, c(b(a(0, x), 0))) -> B(a(c(b(0, y)), x), 0)
   A(y, c(b(a(0, x), 0))) -> A(c(b(0, y)), x)
   A(y, c(b(a(0, x), 0))) -> B(0, y)

The TRS R consists of the following rules:

   b(x, y) -> c(a(c(y), a(0, x)))
   a(y, x) -> y
   a(y, c(b(a(0, x), 0))) -> b(a(c(b(0, y)), x), 0)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule B(x, y) -> A(c(y), a(0, x)) we obtained the following new rules [LPAR04]:

   (B(y_3, 0) -> A(c(0), a(0, y_3)),B(y_3, 0) -> A(c(0), a(0, y_3)))
   (B(0, y_0) -> A(c(y_0), a(0, 0)),B(0, y_0) -> A(c(y_0), a(0, 0)))


----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(x, y) -> A(0, x)
   A(y, c(b(a(0, x), 0))) -> B(a(c(b(0, y)), x), 0)
   A(y, c(b(a(0, x), 0))) -> A(c(b(0, y)), x)
   A(y, c(b(a(0, x), 0))) -> B(0, y)
   B(y_3, 0) -> A(c(0), a(0, y_3))
   B(0, y_0) -> A(c(y_0), a(0, 0))

The TRS R consists of the following rules:

   b(x, y) -> c(a(c(y), a(0, x)))
   a(y, x) -> y
   a(y, c(b(a(0, x), 0))) -> b(a(c(b(0, y)), x), 0)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule B(0, y_0) -> A(c(y_0), a(0, 0)) at position [1] we obtained the following new rules [LPAR04]:

   (B(0, y0) -> A(c(y0), 0),B(0, y0) -> A(c(y0), 0))


----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(x, y) -> A(0, x)
   A(y, c(b(a(0, x), 0))) -> B(a(c(b(0, y)), x), 0)
   A(y, c(b(a(0, x), 0))) -> A(c(b(0, y)), x)
   A(y, c(b(a(0, x), 0))) -> B(0, y)
   B(y_3, 0) -> A(c(0), a(0, y_3))
   B(0, y0) -> A(c(y0), 0)

The TRS R consists of the following rules:

   b(x, y) -> c(a(c(y), a(0, x)))
   a(y, x) -> y
   a(y, c(b(a(0, x), 0))) -> b(a(c(b(0, y)), x), 0)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(y, c(b(a(0, x), 0))) -> B(a(c(b(0, y)), x), 0)
   B(x, y) -> A(0, x)
   A(y, c(b(a(0, x), 0))) -> A(c(b(0, y)), x)
   A(y, c(b(a(0, x), 0))) -> B(0, y)
   B(y_3, 0) -> A(c(0), a(0, y_3))

The TRS R consists of the following rules:

   b(x, y) -> c(a(c(y), a(0, x)))
   a(y, x) -> y
   a(y, c(b(a(0, x), 0))) -> b(a(c(b(0, y)), x), 0)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule B(x, y) -> A(0, x) we obtained the following new rules [LPAR04]:

   (B(y_3, 0) -> A(0, y_3),B(y_3, 0) -> A(0, y_3))
   (B(0, y_0) -> A(0, 0),B(0, y_0) -> A(0, 0))


----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(y, c(b(a(0, x), 0))) -> B(a(c(b(0, y)), x), 0)
   A(y, c(b(a(0, x), 0))) -> A(c(b(0, y)), x)
   A(y, c(b(a(0, x), 0))) -> B(0, y)
   B(y_3, 0) -> A(c(0), a(0, y_3))
   B(y_3, 0) -> A(0, y_3)
   B(0, y_0) -> A(0, 0)

The TRS R consists of the following rules:

   b(x, y) -> c(a(c(y), a(0, x)))
   a(y, x) -> y
   a(y, c(b(a(0, x), 0))) -> b(a(c(b(0, y)), x), 0)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(y_3, 0) -> A(c(0), a(0, y_3))
   A(y, c(b(a(0, x), 0))) -> B(a(c(b(0, y)), x), 0)
   B(y_3, 0) -> A(0, y_3)
   A(y, c(b(a(0, x), 0))) -> A(c(b(0, y)), x)
   A(y, c(b(a(0, x), 0))) -> B(0, y)

The TRS R consists of the following rules:

   b(x, y) -> c(a(c(y), a(0, x)))
   a(y, x) -> y
   a(y, c(b(a(0, x), 0))) -> b(a(c(b(0, y)), x), 0)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   A(y, c(b(a(0, x), 0))) -> A(c(b(0, y)), x)
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial Order [NEGPOLO,POLO] with Interpretation:

POL( A_2(x_1, x_2) ) = max{0, 2x_1 + 2x_2 - 1}
POL( B_2(x_1, x_2) ) = max{0, 2x_1 + 2x_2 - 1}
POL( c_1(x_1) ) = max{0, x_1 - 1}
POL( a_2(x_1, x_2) ) = x_1 + x_2
POL( b_2(x_1, x_2) ) = x_1 + x_2
POL( 0 ) = 1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   a(y, x) -> y
   a(y, c(b(a(0, x), 0))) -> b(a(c(b(0, y)), x), 0)
   b(x, y) -> c(a(c(y), a(0, x)))


----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(y_3, 0) -> A(c(0), a(0, y_3))
   A(y, c(b(a(0, x), 0))) -> B(a(c(b(0, y)), x), 0)
   B(y_3, 0) -> A(0, y_3)
   A(y, c(b(a(0, x), 0))) -> B(0, y)

The TRS R consists of the following rules:

   b(x, y) -> c(a(c(y), a(0, x)))
   a(y, x) -> y
   a(y, c(b(a(0, x), 0))) -> b(a(c(b(0, y)), x), 0)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule A(y, c(b(a(0, x), 0))) -> B(a(c(b(0, y)), x), 0) we obtained the following new rules [LPAR04]:

   (A(c(0), c(b(a(0, x1), 0))) -> B(a(c(b(0, c(0))), x1), 0),A(c(0), c(b(a(0, x1), 0))) -> B(a(c(b(0, c(0))), x1), 0))
   (A(0, c(b(a(0, x1), 0))) -> B(a(c(b(0, 0)), x1), 0),A(0, c(b(a(0, x1), 0))) -> B(a(c(b(0, 0)), x1), 0))


----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(y_3, 0) -> A(c(0), a(0, y_3))
   B(y_3, 0) -> A(0, y_3)
   A(y, c(b(a(0, x), 0))) -> B(0, y)
   A(c(0), c(b(a(0, x1), 0))) -> B(a(c(b(0, c(0))), x1), 0)
   A(0, c(b(a(0, x1), 0))) -> B(a(c(b(0, 0)), x1), 0)

The TRS R consists of the following rules:

   b(x, y) -> c(a(c(y), a(0, x)))
   a(y, x) -> y
   a(y, c(b(a(0, x), 0))) -> b(a(c(b(0, y)), x), 0)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule A(y, c(b(a(0, x), 0))) -> B(0, y) we obtained the following new rules [LPAR04]:

   (A(c(0), c(b(a(0, x1), 0))) -> B(0, c(0)),A(c(0), c(b(a(0, x1), 0))) -> B(0, c(0)))
   (A(0, c(b(a(0, x1), 0))) -> B(0, 0),A(0, c(b(a(0, x1), 0))) -> B(0, 0))


----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(y_3, 0) -> A(c(0), a(0, y_3))
   B(y_3, 0) -> A(0, y_3)
   A(c(0), c(b(a(0, x1), 0))) -> B(a(c(b(0, c(0))), x1), 0)
   A(0, c(b(a(0, x1), 0))) -> B(a(c(b(0, 0)), x1), 0)
   A(c(0), c(b(a(0, x1), 0))) -> B(0, c(0))
   A(0, c(b(a(0, x1), 0))) -> B(0, 0)

The TRS R consists of the following rules:

   b(x, y) -> c(a(c(y), a(0, x)))
   a(y, x) -> y
   a(y, c(b(a(0, x), 0))) -> b(a(c(b(0, y)), x), 0)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(20)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(c(0), c(b(a(0, x1), 0))) -> B(a(c(b(0, c(0))), x1), 0)
   B(y_3, 0) -> A(c(0), a(0, y_3))
   B(y_3, 0) -> A(0, y_3)
   A(0, c(b(a(0, x1), 0))) -> B(a(c(b(0, 0)), x1), 0)
   A(0, c(b(a(0, x1), 0))) -> B(0, 0)

The TRS R consists of the following rules:

   b(x, y) -> c(a(c(y), a(0, x)))
   a(y, x) -> y
   a(y, c(b(a(0, x), 0))) -> b(a(c(b(0, y)), x), 0)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(21) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   A(0, c(b(a(0, x1), 0))) -> B(0, 0)
The remaining pairs can at least be oriented weakly.
Used ordering:  Matrix interpretation [MATRO] with arctic natural numbers [ARCTIC]:

   <<<
 POL(A(x_1, x_2)) =  	[[0A]] 	 +  	[[-I]] 	* 	x_1 	 +  	[[0A]] 	* 	x_2
>>>

   <<<
 POL(c(x_1)) =  	[[-I]] 	 +  	[[0A]] 	* 	x_1
>>>

   <<<
 POL(0) =  	[[0A]]
>>>

   <<<
 POL(b(x_1, x_2)) =  	[[1A]] 	 +  	[[0A]] 	* 	x_1 	 +  	[[0A]] 	* 	x_2
>>>

   <<<
 POL(a(x_1, x_2)) =  	[[-I]] 	 +  	[[0A]] 	* 	x_1 	 +  	[[0A]] 	* 	x_2
>>>

   <<<
 POL(B(x_1, x_2)) =  	[[0A]] 	 +  	[[0A]] 	* 	x_1 	 +  	[[-I]] 	* 	x_2
>>>


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   b(x, y) -> c(a(c(y), a(0, x)))
   a(y, x) -> y
   a(y, c(b(a(0, x), 0))) -> b(a(c(b(0, y)), x), 0)


----------------------------------------

(22)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(c(0), c(b(a(0, x1), 0))) -> B(a(c(b(0, c(0))), x1), 0)
   B(y_3, 0) -> A(c(0), a(0, y_3))
   B(y_3, 0) -> A(0, y_3)
   A(0, c(b(a(0, x1), 0))) -> B(a(c(b(0, 0)), x1), 0)

The TRS R consists of the following rules:

   b(x, y) -> c(a(c(y), a(0, x)))
   a(y, x) -> y
   a(y, c(b(a(0, x), 0))) -> b(a(c(b(0, y)), x), 0)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(23) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   A(c(0), c(b(a(0, x1), 0))) -> B(a(c(b(0, c(0))), x1), 0)
The remaining pairs can at least be oriented weakly.
Used ordering:  Matrix interpretation [MATRO] to (N^2, +, *, >=, >) :

   <<<
 POL(A(x_1, x_2)) =  	[[0]] 	 +  	[[0, 0]] 	* 	x_1 	 +  	[[1, 0]] 	* 	x_2
>>>

   <<<
 POL(c(x_1)) =  	[[0], [0]] 	 +  	[[0, 1], [0, 0]] 	* 	x_1
>>>

   <<<
 POL(0) =  	[[0], [1]]
>>>

   <<<
 POL(b(x_1, x_2)) =  	[[0], [0]] 	 +  	[[0, 0], [0, 0]] 	* 	x_1 	 +  	[[0, 0], [0, 1]] 	* 	x_2
>>>

   <<<
 POL(a(x_1, x_2)) =  	[[0], [0]] 	 +  	[[1, 0], [0, 1]] 	* 	x_1 	 +  	[[0, 0], [1, 0]] 	* 	x_2
>>>

   <<<
 POL(B(x_1, x_2)) =  	[[0]] 	 +  	[[1, 0]] 	* 	x_1 	 +  	[[1, 0]] 	* 	x_2
>>>


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   b(x, y) -> c(a(c(y), a(0, x)))
   a(y, x) -> y
   a(y, c(b(a(0, x), 0))) -> b(a(c(b(0, y)), x), 0)


----------------------------------------

(24)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(y_3, 0) -> A(c(0), a(0, y_3))
   B(y_3, 0) -> A(0, y_3)
   A(0, c(b(a(0, x1), 0))) -> B(a(c(b(0, 0)), x1), 0)

The TRS R consists of the following rules:

   b(x, y) -> c(a(c(y), a(0, x)))
   a(y, x) -> y
   a(y, c(b(a(0, x), 0))) -> b(a(c(b(0, y)), x), 0)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(25) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(26)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(y_3, 0) -> A(0, y_3)
   A(0, c(b(a(0, x1), 0))) -> B(a(c(b(0, 0)), x1), 0)

The TRS R consists of the following rules:

   b(x, y) -> c(a(c(y), a(0, x)))
   a(y, x) -> y
   a(y, c(b(a(0, x), 0))) -> b(a(c(b(0, y)), x), 0)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(27) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   A(0, c(b(a(0, x1), 0))) -> B(a(c(b(0, 0)), x1), 0)
The remaining pairs can at least be oriented weakly.
Used ordering:  Matrix interpretation [MATRO] to (N^2, +, *, >=, >) :

   <<<
 POL(B(x_1, x_2)) =  	[[0]] 	 +  	[[1, 0]] 	* 	x_1 	 +  	[[1, 1]] 	* 	x_2
>>>

   <<<
 POL(0) =  	[[0], [0]]
>>>

   <<<
 POL(A(x_1, x_2)) =  	[[0]] 	 +  	[[1, 1]] 	* 	x_1 	 +  	[[1, 0]] 	* 	x_2
>>>

   <<<
 POL(c(x_1)) =  	[[0], [0]] 	 +  	[[0, 1], [0, 0]] 	* 	x_1
>>>

   <<<
 POL(b(x_1, x_2)) =  	[[1], [1]] 	 +  	[[1, 0], [0, 1]] 	* 	x_1 	 +  	[[0, 0], [0, 0]] 	* 	x_2
>>>

   <<<
 POL(a(x_1, x_2)) =  	[[0], [1]] 	 +  	[[1, 0], [0, 1]] 	* 	x_1 	 +  	[[1, 0], [1, 0]] 	* 	x_2
>>>


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   b(x, y) -> c(a(c(y), a(0, x)))
   a(y, x) -> y
   a(y, c(b(a(0, x), 0))) -> b(a(c(b(0, y)), x), 0)


----------------------------------------

(28)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(y_3, 0) -> A(0, y_3)

The TRS R consists of the following rules:

   b(x, y) -> c(a(c(y), a(0, x)))
   a(y, x) -> y
   a(y, c(b(a(0, x), 0))) -> b(a(c(b(0, y)), x), 0)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(29) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 1 less node.
----------------------------------------

(30)
TRUE
