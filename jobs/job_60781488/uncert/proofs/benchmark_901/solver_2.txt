YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/p0Obh.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRS Reverse [EQUIVALENT, 0 ms]
(2) QTRS
(3) RFCMatchBoundsTRSProof [EQUIVALENT, 0 ms]
(4) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a__f(f(a)) -> a__f(g(f(a)))
   mark(f(X)) -> a__f(X)
   mark(a) -> a
   mark(g(X)) -> g(mark(X))
   a__f(X) -> f(X)

Q is empty.

----------------------------------------

(1) QTRS Reverse (EQUIVALENT)
We applied the QTRS Reverse Processor [REVERSE].
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a'(f(a__f(x))) -> a'(f(g(a__f(x))))
   f(mark(X)) -> a__f(X)
   a'(mark(x)) -> a'(x)
   g(mark(X)) -> mark(g(X))
   a__f(X) -> f(X)

Q is empty.

----------------------------------------

(3) RFCMatchBoundsTRSProof (EQUIVALENT)
Termination of the TRS R could be shown with a Match Bound [MATCHBOUNDS1,MATCHBOUNDS2] of 2. This implies Q-termination of R.
The following rules were used to construct the certificate:

   a'(f(a__f(x))) -> a'(f(g(a__f(x))))
   f(mark(X)) -> a__f(X)
   a'(mark(x)) -> a'(x)
   g(mark(X)) -> mark(g(X))
   a__f(X) -> f(X)

The certificate found is represented by the following graph.
The certificate consists of the following enumerated nodes:
3, 4, 9, 10, 11, 12, 17, 18, 19, 20

Node 3 is start node and node 4 is final node.

Those nodes are connected through the following edges:

* 3 to 9 labelled a'_1(0)* 3 to 4 labelled a__f_1(0), a'_1(0), f_1(0), f_1(1), a'_1(1), a__f_1(1), f_1(2)* 3 to 12 labelled mark_1(0)* 3 to 17 labelled a'_1(1)* 4 to 4 labelled #_1(0)* 9 to 10 labelled f_1(0)* 10 to 11 labelled g_1(0)* 11 to 4 labelled a__f_1(0), f_1(1), a__f_1(1), f_1(2)* 12 to 4 labelled g_1(0)* 12 to 20 labelled mark_1(1)* 17 to 18 labelled f_1(1)* 18 to 19 labelled g_1(1)* 19 to 4 labelled a__f_1(1), f_1(2)* 20 to 4 labelled g_1(1)* 20 to 20 labelled mark_1(1)


----------------------------------------

(4)
YES
