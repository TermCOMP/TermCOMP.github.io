NO
proof of /hpcwork/ff862203/termcomp25/benchmarks/Higjb.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be disproven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 0 ms]
(2) QDP
(3) DependencyGraphProof [EQUIVALENT, 0 ms]
(4) QDP
(5) UsableRulesReductionPairsProof [EQUIVALENT, 0 ms]
(6) QDP
(7) NonTerminationLoopProof [COMPLETE, 0 ms]
(8) NO


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(s(x)) -> f(g(x, x))
   g(0, 1) -> s(0)
   0 -> 1

Q is empty.

----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(x)) -> F(g(x, x))
   F(s(x)) -> G(x, x)

The TRS R consists of the following rules:

   f(s(x)) -> f(g(x, x))
   g(0, 1) -> s(0)
   0 -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(x)) -> F(g(x, x))

The TRS R consists of the following rules:

   f(s(x)) -> f(g(x, x))
   g(0, 1) -> s(0)
   0 -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) UsableRulesReductionPairsProof (EQUIVALENT)
By using the usable rules with reduction pair processor [LPAR04] with a polynomial ordering [POLO], all dependency pairs and the corresponding usable rules [FROCOS05] can be oriented non-strictly. All non-usable rules are removed, and those dependency pairs and usable rules that have been oriented strictly or contain non-usable symbols in their left-hand side are removed as well.

No dependency pairs are removed.

The following rules are removed from R:

   f(s(x)) -> f(g(x, x))
Used ordering: POLO with Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(1) = 0
   POL(F(x_1)) = 2*x_1
   POL(g(x_1, x_2)) = x_1 + x_2
   POL(s(x_1)) = 2*x_1


----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(x)) -> F(g(x, x))

The TRS R consists of the following rules:

   g(0, 1) -> s(0)
   0 -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) NonTerminationLoopProof (COMPLETE)
We used the non-termination processor [FROCOS05] to show that the DP problem is infinite.
Found a loop by narrowing to the left:

s = F(g(0, 0)) evaluates to  t =F(g(0, 0))

Thus s starts an infinite chain as s semiunifies with t with the following substitutions:
* Matcher: [ ]
* Semiunifier: [ ]

--------------------------------------------------------------------------------
Rewriting sequence

F(g(0, 0)) -> F(g(0, 1))
with rule 0 -> 1 at position [0,1] and matcher [ ]

F(g(0, 1)) -> F(s(0))
with rule g(0, 1) -> s(0) at position [0] and matcher [ ]

F(s(0)) -> F(g(0, 0))
with rule F(s(x)) -> F(g(x, x))

Now applying the matcher to the start term leads to a term which is equal to the last term in the rewriting sequence


All these steps are and every following step will be a correct step w.r.t to Q.




----------------------------------------

(8)
NO
