YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/lNY4F.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 0 ms]
(2) QDP
(3) UsableRulesProof [EQUIVALENT, 0 ms]
(4) QDP
(5) QDPToSRSProof [SOUND, 0 ms]
(6) QTRS
(7) DependencyPairsProof [EQUIVALENT, 0 ms]
(8) QDP
(9) MNOCProof [EQUIVALENT, 0 ms]
(10) QDP
(11) UsableRulesProof [EQUIVALENT, 0 ms]
(12) QDP
(13) QReductionProof [EQUIVALENT, 0 ms]
(14) QDP
(15) QDPSizeChangeProof [EQUIVALENT, 0 ms]
(16) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(x, a(b(y))) -> a(f(a(b(x)), y))
   f(a(x), y) -> f(x, a(y))
   f(b(x), y) -> f(x, b(y))

Q is empty.

----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(x, a(b(y))) -> F(a(b(x)), y)
   F(a(x), y) -> F(x, a(y))
   F(b(x), y) -> F(x, b(y))

The TRS R consists of the following rules:

   f(x, a(b(y))) -> a(f(a(b(x)), y))
   f(a(x), y) -> f(x, a(y))
   f(b(x), y) -> f(x, b(y))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(x, a(b(y))) -> F(a(b(x)), y)
   F(a(x), y) -> F(x, a(y))
   F(b(x), y) -> F(x, b(y))

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) QDPToSRSProof (SOUND)
The finiteness of this DP problem is implied by strong termination of a SRS due to [UNKNOWN].

----------------------------------------

(6)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a(b(x)) -> b(a(x))

Q is empty.

----------------------------------------

(7) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(b(x)) -> A(x)

The TRS R consists of the following rules:

   a(b(x)) -> b(a(x))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) MNOCProof (EQUIVALENT)
We use the modular non-overlap check [LPAR04] to enlarge Q to all left-hand sides of R.
----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(b(x)) -> A(x)

The TRS R consists of the following rules:

   a(b(x)) -> b(a(x))

The set Q consists of the following terms:

   a(b(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(b(x)) -> A(x)

R is empty.
The set Q consists of the following terms:

   a(b(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   a(b(x0))


----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(b(x)) -> A(x)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*A(b(x)) -> A(x)
The graph contains the following edges 1 > 1


----------------------------------------

(16)
YES
