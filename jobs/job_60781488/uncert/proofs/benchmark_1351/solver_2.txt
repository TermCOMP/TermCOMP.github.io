YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/1DzjC.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRSRRRProof [EQUIVALENT, 42 ms]
(2) QTRS
(3) QTRSRRRProof [EQUIVALENT, 11 ms]
(4) QTRS
(5) QTRSRRRProof [EQUIVALENT, 0 ms]
(6) QTRS
(7) QTRSRRRProof [EQUIVALENT, 6 ms]
(8) QTRS
(9) QTRSRRRProof [EQUIVALENT, 0 ms]
(10) QTRS
(11) RisEmptyProof [EQUIVALENT, 0 ms]
(12) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   active(__(__(X, Y), Z)) -> mark(__(X, __(Y, Z)))
   active(__(X, nil)) -> mark(X)
   active(__(nil, X)) -> mark(X)
   active(and(tt, X)) -> mark(X)
   active(isNePal(__(I, __(P, I)))) -> mark(tt)
   mark(__(X1, X2)) -> active(__(mark(X1), mark(X2)))
   mark(nil) -> active(nil)
   mark(and(X1, X2)) -> active(and(mark(X1), X2))
   mark(tt) -> active(tt)
   mark(isNePal(X)) -> active(isNePal(mark(X)))
   __(mark(X1), X2) -> __(X1, X2)
   __(X1, mark(X2)) -> __(X1, X2)
   __(active(X1), X2) -> __(X1, X2)
   __(X1, active(X2)) -> __(X1, X2)
   and(mark(X1), X2) -> and(X1, X2)
   and(X1, mark(X2)) -> and(X1, X2)
   and(active(X1), X2) -> and(X1, X2)
   and(X1, active(X2)) -> and(X1, X2)
   isNePal(mark(X)) -> isNePal(X)
   isNePal(active(X)) -> isNePal(X)

Q is empty.

----------------------------------------

(1) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(__(x_1, x_2)) = x_1 + x_2
   POL(active(x_1)) = x_1
   POL(and(x_1, x_2)) = 1 + x_1 + 2*x_2
   POL(isNePal(x_1)) = x_1
   POL(mark(x_1)) = x_1
   POL(nil) = 0
   POL(tt) = 0
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   active(and(tt, X)) -> mark(X)




----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   active(__(__(X, Y), Z)) -> mark(__(X, __(Y, Z)))
   active(__(X, nil)) -> mark(X)
   active(__(nil, X)) -> mark(X)
   active(isNePal(__(I, __(P, I)))) -> mark(tt)
   mark(__(X1, X2)) -> active(__(mark(X1), mark(X2)))
   mark(nil) -> active(nil)
   mark(and(X1, X2)) -> active(and(mark(X1), X2))
   mark(tt) -> active(tt)
   mark(isNePal(X)) -> active(isNePal(mark(X)))
   __(mark(X1), X2) -> __(X1, X2)
   __(X1, mark(X2)) -> __(X1, X2)
   __(active(X1), X2) -> __(X1, X2)
   __(X1, active(X2)) -> __(X1, X2)
   and(mark(X1), X2) -> and(X1, X2)
   and(X1, mark(X2)) -> and(X1, X2)
   and(active(X1), X2) -> and(X1, X2)
   and(X1, active(X2)) -> and(X1, X2)
   isNePal(mark(X)) -> isNePal(X)
   isNePal(active(X)) -> isNePal(X)

Q is empty.

----------------------------------------

(3) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(__(x_1, x_2)) = 2 + x_1 + x_2
   POL(active(x_1)) = x_1
   POL(and(x_1, x_2)) = 2*x_1 + 2*x_2
   POL(isNePal(x_1)) = x_1
   POL(mark(x_1)) = x_1
   POL(nil) = 0
   POL(tt) = 0
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   active(__(X, nil)) -> mark(X)
   active(__(nil, X)) -> mark(X)
   active(isNePal(__(I, __(P, I)))) -> mark(tt)




----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   active(__(__(X, Y), Z)) -> mark(__(X, __(Y, Z)))
   mark(__(X1, X2)) -> active(__(mark(X1), mark(X2)))
   mark(nil) -> active(nil)
   mark(and(X1, X2)) -> active(and(mark(X1), X2))
   mark(tt) -> active(tt)
   mark(isNePal(X)) -> active(isNePal(mark(X)))
   __(mark(X1), X2) -> __(X1, X2)
   __(X1, mark(X2)) -> __(X1, X2)
   __(active(X1), X2) -> __(X1, X2)
   __(X1, active(X2)) -> __(X1, X2)
   and(mark(X1), X2) -> and(X1, X2)
   and(X1, mark(X2)) -> and(X1, X2)
   and(active(X1), X2) -> and(X1, X2)
   and(X1, active(X2)) -> and(X1, X2)
   isNePal(mark(X)) -> isNePal(X)
   isNePal(active(X)) -> isNePal(X)

Q is empty.

----------------------------------------

(5) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(__(x_1, x_2)) = 2 + 2*x_1 + x_2
   POL(active(x_1)) = x_1
   POL(and(x_1, x_2)) = 2*x_1 + x_2
   POL(isNePal(x_1)) = x_1
   POL(mark(x_1)) = x_1
   POL(nil) = 0
   POL(tt) = 0
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   active(__(__(X, Y), Z)) -> mark(__(X, __(Y, Z)))




----------------------------------------

(6)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   mark(__(X1, X2)) -> active(__(mark(X1), mark(X2)))
   mark(nil) -> active(nil)
   mark(and(X1, X2)) -> active(and(mark(X1), X2))
   mark(tt) -> active(tt)
   mark(isNePal(X)) -> active(isNePal(mark(X)))
   __(mark(X1), X2) -> __(X1, X2)
   __(X1, mark(X2)) -> __(X1, X2)
   __(active(X1), X2) -> __(X1, X2)
   __(X1, active(X2)) -> __(X1, X2)
   and(mark(X1), X2) -> and(X1, X2)
   and(X1, mark(X2)) -> and(X1, X2)
   and(active(X1), X2) -> and(X1, X2)
   and(X1, active(X2)) -> and(X1, X2)
   isNePal(mark(X)) -> isNePal(X)
   isNePal(active(X)) -> isNePal(X)

Q is empty.

----------------------------------------

(7) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(__(x_1, x_2)) = 2 + x_1 + 2*x_2
   POL(active(x_1)) = 2 + x_1
   POL(and(x_1, x_2)) = 2 + 2*x_1 + x_2
   POL(isNePal(x_1)) = 2 + 2*x_1
   POL(mark(x_1)) = 2*x_1
   POL(nil) = 2
   POL(tt) = 2
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   __(active(X1), X2) -> __(X1, X2)
   __(X1, active(X2)) -> __(X1, X2)
   and(active(X1), X2) -> and(X1, X2)
   and(X1, active(X2)) -> and(X1, X2)
   isNePal(active(X)) -> isNePal(X)




----------------------------------------

(8)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   mark(__(X1, X2)) -> active(__(mark(X1), mark(X2)))
   mark(nil) -> active(nil)
   mark(and(X1, X2)) -> active(and(mark(X1), X2))
   mark(tt) -> active(tt)
   mark(isNePal(X)) -> active(isNePal(mark(X)))
   __(mark(X1), X2) -> __(X1, X2)
   __(X1, mark(X2)) -> __(X1, X2)
   and(mark(X1), X2) -> and(X1, X2)
   and(X1, mark(X2)) -> and(X1, X2)
   isNePal(mark(X)) -> isNePal(X)

Q is empty.

----------------------------------------

(9) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(__(x_1, x_2)) = 2 + x_1 + x_2
   POL(active(x_1)) = x_1
   POL(and(x_1, x_2)) = 1 + x_1 + x_2
   POL(isNePal(x_1)) = 1 + x_1
   POL(mark(x_1)) = 1 + 2*x_1
   POL(nil) = 2
   POL(tt) = 2
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   mark(__(X1, X2)) -> active(__(mark(X1), mark(X2)))
   mark(nil) -> active(nil)
   mark(and(X1, X2)) -> active(and(mark(X1), X2))
   mark(tt) -> active(tt)
   mark(isNePal(X)) -> active(isNePal(mark(X)))
   __(mark(X1), X2) -> __(X1, X2)
   __(X1, mark(X2)) -> __(X1, X2)
   and(mark(X1), X2) -> and(X1, X2)
   and(X1, mark(X2)) -> and(X1, X2)
   isNePal(mark(X)) -> isNePal(X)




----------------------------------------

(10)
Obligation:
Q restricted rewrite system:
R is empty.
Q is empty.

----------------------------------------

(11) RisEmptyProof (EQUIVALENT)
The TRS R is empty. Hence, termination is trivially proven.
----------------------------------------

(12)
YES
