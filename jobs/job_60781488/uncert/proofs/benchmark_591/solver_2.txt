YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/ZbCA5.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 0 ms]
(2) QDP
(3) DependencyGraphProof [EQUIVALENT, 0 ms]
(4) QDP
(5) SemLabProof [SOUND, 35 ms]
(6) QDP
(7) DependencyGraphProof [EQUIVALENT, 0 ms]
(8) QDP
(9) UsableRulesReductionPairsProof [EQUIVALENT, 0 ms]
(10) QDP
(11) DependencyGraphProof [EQUIVALENT, 0 ms]
(12) QDP
(13) MRRProof [EQUIVALENT, 2 ms]
(14) QDP
(15) UsableRulesReductionPairsProof [EQUIVALENT, 0 ms]
(16) QDP
(17) QDPOrderProof [EQUIVALENT, 2 ms]
(18) QDP
(19) PisEmptyProof [EQUIVALENT, 0 ms]
(20) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(y, f(x, f(a, x))) -> f(f(f(a, x), f(x, a)), f(a, y))
   f(x, f(x, y)) -> f(f(f(x, a), a), a)

Q is empty.

----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(y, f(x, f(a, x))) -> F(f(f(a, x), f(x, a)), f(a, y))
   F(y, f(x, f(a, x))) -> F(f(a, x), f(x, a))
   F(y, f(x, f(a, x))) -> F(x, a)
   F(y, f(x, f(a, x))) -> F(a, y)
   F(x, f(x, y)) -> F(f(f(x, a), a), a)
   F(x, f(x, y)) -> F(f(x, a), a)
   F(x, f(x, y)) -> F(x, a)

The TRS R consists of the following rules:

   f(y, f(x, f(a, x))) -> f(f(f(a, x), f(x, a)), f(a, y))
   f(x, f(x, y)) -> f(f(f(x, a), a), a)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 5 less nodes.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(y, f(x, f(a, x))) -> F(a, y)
   F(y, f(x, f(a, x))) -> F(f(f(a, x), f(x, a)), f(a, y))

The TRS R consists of the following rules:

   f(y, f(x, f(a, x))) -> f(f(f(a, x), f(x, a)), f(a, y))
   f(x, f(x, y)) -> f(f(f(x, a), a), a)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) SemLabProof (SOUND)
We found the following model for the rules of the TRSs R and P.
Interpretation over the domain with elements from 0 to 1.
a: 1
f: 0
F: 0
By semantic labelling [SEMLAB] we obtain the following labelled QDP problem.
----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F.0-0(y, f.0-0(x, f.1-0(a., x))) -> F.1-0(a., y)
   F.0-0(y, f.0-0(x, f.1-0(a., x))) -> F.0-0(f.0-0(f.1-0(a., x), f.0-1(x, a.)), f.1-0(a., y))
   F.0-0(y, f.1-0(x, f.1-1(a., x))) -> F.0-0(f.0-0(f.1-1(a., x), f.1-1(x, a.)), f.1-0(a., y))
   F.1-0(y, f.0-0(x, f.1-0(a., x))) -> F.0-0(f.0-0(f.1-0(a., x), f.0-1(x, a.)), f.1-1(a., y))
   F.1-0(y, f.1-0(x, f.1-1(a., x))) -> F.0-0(f.0-0(f.1-1(a., x), f.1-1(x, a.)), f.1-1(a., y))
   F.0-0(y, f.1-0(x, f.1-1(a., x))) -> F.1-0(a., y)
   F.1-0(y, f.0-0(x, f.1-0(a., x))) -> F.1-1(a., y)
   F.1-0(y, f.1-0(x, f.1-1(a., x))) -> F.1-1(a., y)

The TRS R consists of the following rules:

   f.0-0(y, f.0-0(x, f.1-0(a., x))) -> f.0-0(f.0-0(f.1-0(a., x), f.0-1(x, a.)), f.1-0(a., y))
   f.0-0(y, f.1-0(x, f.1-1(a., x))) -> f.0-0(f.0-0(f.1-1(a., x), f.1-1(x, a.)), f.1-0(a., y))
   f.1-0(y, f.0-0(x, f.1-0(a., x))) -> f.0-0(f.0-0(f.1-0(a., x), f.0-1(x, a.)), f.1-1(a., y))
   f.1-0(y, f.1-0(x, f.1-1(a., x))) -> f.0-0(f.0-0(f.1-1(a., x), f.1-1(x, a.)), f.1-1(a., y))
   f.0-0(x, f.0-0(x, y)) -> f.0-1(f.0-1(f.0-1(x, a.), a.), a.)
   f.0-0(x, f.0-1(x, y)) -> f.0-1(f.0-1(f.0-1(x, a.), a.), a.)
   f.1-0(x, f.1-0(x, y)) -> f.0-1(f.0-1(f.1-1(x, a.), a.), a.)
   f.1-0(x, f.1-1(x, y)) -> f.0-1(f.0-1(f.1-1(x, a.), a.), a.)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 6 less nodes.
----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F.0-0(y, f.0-0(x, f.1-0(a., x))) -> F.0-0(f.0-0(f.1-0(a., x), f.0-1(x, a.)), f.1-0(a., y))
   F.0-0(y, f.1-0(x, f.1-1(a., x))) -> F.0-0(f.0-0(f.1-1(a., x), f.1-1(x, a.)), f.1-0(a., y))

The TRS R consists of the following rules:

   f.0-0(y, f.0-0(x, f.1-0(a., x))) -> f.0-0(f.0-0(f.1-0(a., x), f.0-1(x, a.)), f.1-0(a., y))
   f.0-0(y, f.1-0(x, f.1-1(a., x))) -> f.0-0(f.0-0(f.1-1(a., x), f.1-1(x, a.)), f.1-0(a., y))
   f.1-0(y, f.0-0(x, f.1-0(a., x))) -> f.0-0(f.0-0(f.1-0(a., x), f.0-1(x, a.)), f.1-1(a., y))
   f.1-0(y, f.1-0(x, f.1-1(a., x))) -> f.0-0(f.0-0(f.1-1(a., x), f.1-1(x, a.)), f.1-1(a., y))
   f.0-0(x, f.0-0(x, y)) -> f.0-1(f.0-1(f.0-1(x, a.), a.), a.)
   f.0-0(x, f.0-1(x, y)) -> f.0-1(f.0-1(f.0-1(x, a.), a.), a.)
   f.1-0(x, f.1-0(x, y)) -> f.0-1(f.0-1(f.1-1(x, a.), a.), a.)
   f.1-0(x, f.1-1(x, y)) -> f.0-1(f.0-1(f.1-1(x, a.), a.), a.)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) UsableRulesReductionPairsProof (EQUIVALENT)
By using the usable rules with reduction pair processor [LPAR04] with a polynomial ordering [POLO], all dependency pairs and the corresponding usable rules [FROCOS05] can be oriented non-strictly. All non-usable rules are removed, and those dependency pairs and usable rules that have been oriented strictly or contain non-usable symbols in their left-hand side are removed as well.

No dependency pairs are removed.

The following rules are removed from R:

   f.0-0(y, f.0-0(x, f.1-0(a., x))) -> f.0-0(f.0-0(f.1-0(a., x), f.0-1(x, a.)), f.1-0(a., y))
   f.0-0(y, f.1-0(x, f.1-1(a., x))) -> f.0-0(f.0-0(f.1-1(a., x), f.1-1(x, a.)), f.1-0(a., y))
   f.0-0(x, f.0-0(x, y)) -> f.0-1(f.0-1(f.0-1(x, a.), a.), a.)
Used ordering: POLO with Polynomial interpretation [POLO]:

   POL(F.0-0(x_1, x_2)) = x_1 + x_2
   POL(a.) = 0
   POL(f.0-0(x_1, x_2)) = x_1 + x_2
   POL(f.0-1(x_1, x_2)) = x_1 + x_2
   POL(f.1-0(x_1, x_2)) = x_1 + x_2
   POL(f.1-1(x_1, x_2)) = x_1 + x_2


----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F.0-0(y, f.0-0(x, f.1-0(a., x))) -> F.0-0(f.0-0(f.1-0(a., x), f.0-1(x, a.)), f.1-0(a., y))
   F.0-0(y, f.1-0(x, f.1-1(a., x))) -> F.0-0(f.0-0(f.1-1(a., x), f.1-1(x, a.)), f.1-0(a., y))

The TRS R consists of the following rules:

   f.1-0(y, f.0-0(x, f.1-0(a., x))) -> f.0-0(f.0-0(f.1-0(a., x), f.0-1(x, a.)), f.1-1(a., y))
   f.1-0(y, f.1-0(x, f.1-1(a., x))) -> f.0-0(f.0-0(f.1-1(a., x), f.1-1(x, a.)), f.1-1(a., y))
   f.1-0(x, f.1-0(x, y)) -> f.0-1(f.0-1(f.1-1(x, a.), a.), a.)
   f.1-0(x, f.1-1(x, y)) -> f.0-1(f.0-1(f.1-1(x, a.), a.), a.)
   f.0-0(x, f.0-1(x, y)) -> f.0-1(f.0-1(f.0-1(x, a.), a.), a.)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F.0-0(y, f.1-0(x, f.1-1(a., x))) -> F.0-0(f.0-0(f.1-1(a., x), f.1-1(x, a.)), f.1-0(a., y))

The TRS R consists of the following rules:

   f.1-0(y, f.0-0(x, f.1-0(a., x))) -> f.0-0(f.0-0(f.1-0(a., x), f.0-1(x, a.)), f.1-1(a., y))
   f.1-0(y, f.1-0(x, f.1-1(a., x))) -> f.0-0(f.0-0(f.1-1(a., x), f.1-1(x, a.)), f.1-1(a., y))
   f.1-0(x, f.1-0(x, y)) -> f.0-1(f.0-1(f.1-1(x, a.), a.), a.)
   f.1-0(x, f.1-1(x, y)) -> f.0-1(f.0-1(f.1-1(x, a.), a.), a.)
   f.0-0(x, f.0-1(x, y)) -> f.0-1(f.0-1(f.0-1(x, a.), a.), a.)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) MRRProof (EQUIVALENT)
By using the rule removal processor [LPAR04] with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented.


Strictly oriented rules of the TRS R:

   f.1-0(y, f.0-0(x, f.1-0(a., x))) -> f.0-0(f.0-0(f.1-0(a., x), f.0-1(x, a.)), f.1-1(a., y))
   f.1-0(y, f.1-0(x, f.1-1(a., x))) -> f.0-0(f.0-0(f.1-1(a., x), f.1-1(x, a.)), f.1-1(a., y))
   f.1-0(x, f.1-0(x, y)) -> f.0-1(f.0-1(f.1-1(x, a.), a.), a.)
   f.1-0(x, f.1-1(x, y)) -> f.0-1(f.0-1(f.1-1(x, a.), a.), a.)

Used ordering: Polynomial interpretation [POLO]:

   POL(F.0-0(x_1, x_2)) = x_1 + x_2
   POL(a.) = 0
   POL(f.0-0(x_1, x_2)) = x_1 + x_2
   POL(f.0-1(x_1, x_2)) = x_1 + x_2
   POL(f.1-0(x_1, x_2)) = 1 + x_1 + x_2
   POL(f.1-1(x_1, x_2)) = x_1 + x_2


----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F.0-0(y, f.1-0(x, f.1-1(a., x))) -> F.0-0(f.0-0(f.1-1(a., x), f.1-1(x, a.)), f.1-0(a., y))

The TRS R consists of the following rules:

   f.0-0(x, f.0-1(x, y)) -> f.0-1(f.0-1(f.0-1(x, a.), a.), a.)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) UsableRulesReductionPairsProof (EQUIVALENT)
By using the usable rules with reduction pair processor [LPAR04] with a polynomial ordering [POLO], all dependency pairs and the corresponding usable rules [FROCOS05] can be oriented non-strictly. All non-usable rules are removed, and those dependency pairs and usable rules that have been oriented strictly or contain non-usable symbols in their left-hand side are removed as well.

No dependency pairs are removed.

The following rules are removed from R:

   f.0-0(x, f.0-1(x, y)) -> f.0-1(f.0-1(f.0-1(x, a.), a.), a.)
Used ordering: POLO with Polynomial interpretation [POLO]:

   POL(F.0-0(x_1, x_2)) = x_1 + x_2
   POL(a.) = 0
   POL(f.0-0(x_1, x_2)) = x_1 + x_2
   POL(f.1-0(x_1, x_2)) = x_1 + x_2
   POL(f.1-1(x_1, x_2)) = x_1 + x_2


----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F.0-0(y, f.1-0(x, f.1-1(a., x))) -> F.0-0(f.0-0(f.1-1(a., x), f.1-1(x, a.)), f.1-0(a., y))

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   F.0-0(y, f.1-0(x, f.1-1(a., x))) -> F.0-0(f.0-0(f.1-1(a., x), f.1-1(x, a.)), f.1-0(a., y))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(F.0-0(x_1, x_2)) = x_1 + x_2
   POL(a.) = 0
   POL(f.0-0(x_1, x_2)) = 0
   POL(f.1-0(x_1, x_2)) = x_1 + x_2
   POL(f.1-1(x_1, x_2)) = 1 + x_2

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:
none


----------------------------------------

(18)
Obligation:
Q DP problem:
P is empty.
R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(20)
YES
