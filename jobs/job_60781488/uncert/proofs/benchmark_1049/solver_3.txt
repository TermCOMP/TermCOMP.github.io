YES

Problem 1: 

(VAR vu95NonEmpty X Y)
(RULES
num0 -> nu95u950
activate(nu95u950) -> num0
activate(nu95u95s(X)) -> s(X)
activate(X) -> X
div(num0,nu95u95s(Y)) -> num0
div(s(X),nu95u95s(Y)) -> if(geq(X,activate(Y)),nu95u95s(div(minus(X,activate(Y)),nu95u95s(activate(Y)))),nu95u950)
geq(nu95u950,nu95u95s(Y)) -> ffalse
geq(nu95u95s(X),nu95u95s(Y)) -> geq(activate(X),activate(Y))
geq(X,nu95u950) -> ftrue
if(ffalse,X,Y) -> activate(Y)
if(ftrue,X,Y) -> activate(X)
minus(nu95u950,Y) -> num0
minus(nu95u95s(X),nu95u95s(Y)) -> minus(activate(X),activate(Y))
s(X) -> nu95u95s(X)
)


Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 ACTIVATE(nu95u950) -> NUM0
 ACTIVATE(nu95u95s(X)) -> S(X)
 DIV(s(X),nu95u95s(Y)) -> ACTIVATE(Y)
 DIV(s(X),nu95u95s(Y)) -> DIV(minus(X,activate(Y)),nu95u95s(activate(Y)))
 DIV(s(X),nu95u95s(Y)) -> GEQ(X,activate(Y))
 DIV(s(X),nu95u95s(Y)) -> IF(geq(X,activate(Y)),nu95u95s(div(minus(X,activate(Y)),nu95u95s(activate(Y)))),nu95u950)
 DIV(s(X),nu95u95s(Y)) -> MINUS(X,activate(Y))
 GEQ(nu95u95s(X),nu95u95s(Y)) -> ACTIVATE(X)
 GEQ(nu95u95s(X),nu95u95s(Y)) -> ACTIVATE(Y)
 GEQ(nu95u95s(X),nu95u95s(Y)) -> GEQ(activate(X),activate(Y))
 IF(ffalse,X,Y) -> ACTIVATE(Y)
 IF(ftrue,X,Y) -> ACTIVATE(X)
 MINUS(nu95u950,Y) -> NUM0
 MINUS(nu95u95s(X),nu95u95s(Y)) -> ACTIVATE(X)
 MINUS(nu95u95s(X),nu95u95s(Y)) -> ACTIVATE(Y)
 MINUS(nu95u95s(X),nu95u95s(Y)) -> MINUS(activate(X),activate(Y))
-> Rules:
 num0 -> nu95u950
 activate(nu95u950) -> num0
 activate(nu95u95s(X)) -> s(X)
 activate(X) -> X
 div(num0,nu95u95s(Y)) -> num0
 div(s(X),nu95u95s(Y)) -> if(geq(X,activate(Y)),nu95u95s(div(minus(X,activate(Y)),nu95u95s(activate(Y)))),nu95u950)
 geq(nu95u950,nu95u95s(Y)) -> ffalse
 geq(nu95u95s(X),nu95u95s(Y)) -> geq(activate(X),activate(Y))
 geq(X,nu95u950) -> ftrue
 if(ffalse,X,Y) -> activate(Y)
 if(ftrue,X,Y) -> activate(X)
 minus(nu95u950,Y) -> num0
 minus(nu95u95s(X),nu95u95s(Y)) -> minus(activate(X),activate(Y))
 s(X) -> nu95u95s(X)

Problem 1: 

SCC Processor:
-> Pairs:
 ACTIVATE(nu95u950) -> NUM0
 ACTIVATE(nu95u95s(X)) -> S(X)
 DIV(s(X),nu95u95s(Y)) -> ACTIVATE(Y)
 DIV(s(X),nu95u95s(Y)) -> DIV(minus(X,activate(Y)),nu95u95s(activate(Y)))
 DIV(s(X),nu95u95s(Y)) -> GEQ(X,activate(Y))
 DIV(s(X),nu95u95s(Y)) -> IF(geq(X,activate(Y)),nu95u95s(div(minus(X,activate(Y)),nu95u95s(activate(Y)))),nu95u950)
 DIV(s(X),nu95u95s(Y)) -> MINUS(X,activate(Y))
 GEQ(nu95u95s(X),nu95u95s(Y)) -> ACTIVATE(X)
 GEQ(nu95u95s(X),nu95u95s(Y)) -> ACTIVATE(Y)
 GEQ(nu95u95s(X),nu95u95s(Y)) -> GEQ(activate(X),activate(Y))
 IF(ffalse,X,Y) -> ACTIVATE(Y)
 IF(ftrue,X,Y) -> ACTIVATE(X)
 MINUS(nu95u950,Y) -> NUM0
 MINUS(nu95u95s(X),nu95u95s(Y)) -> ACTIVATE(X)
 MINUS(nu95u95s(X),nu95u95s(Y)) -> ACTIVATE(Y)
 MINUS(nu95u95s(X),nu95u95s(Y)) -> MINUS(activate(X),activate(Y))
-> Rules:
 num0 -> nu95u950
 activate(nu95u950) -> num0
 activate(nu95u95s(X)) -> s(X)
 activate(X) -> X
 div(num0,nu95u95s(Y)) -> num0
 div(s(X),nu95u95s(Y)) -> if(geq(X,activate(Y)),nu95u95s(div(minus(X,activate(Y)),nu95u95s(activate(Y)))),nu95u950)
 geq(nu95u950,nu95u95s(Y)) -> ffalse
 geq(nu95u95s(X),nu95u95s(Y)) -> geq(activate(X),activate(Y))
 geq(X,nu95u950) -> ftrue
 if(ffalse,X,Y) -> activate(Y)
 if(ftrue,X,Y) -> activate(X)
 minus(nu95u950,Y) -> num0
 minus(nu95u95s(X),nu95u95s(Y)) -> minus(activate(X),activate(Y))
 s(X) -> nu95u95s(X)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 GEQ(nu95u95s(X),nu95u95s(Y)) -> GEQ(activate(X),activate(Y))
->->-> Rules:
 num0 -> nu95u950
 activate(nu95u950) -> num0
 activate(nu95u95s(X)) -> s(X)
 activate(X) -> X
 div(num0,nu95u95s(Y)) -> num0
 div(s(X),nu95u95s(Y)) -> if(geq(X,activate(Y)),nu95u95s(div(minus(X,activate(Y)),nu95u95s(activate(Y)))),nu95u950)
 geq(nu95u950,nu95u95s(Y)) -> ffalse
 geq(nu95u95s(X),nu95u95s(Y)) -> geq(activate(X),activate(Y))
 geq(X,nu95u950) -> ftrue
 if(ffalse,X,Y) -> activate(Y)
 if(ftrue,X,Y) -> activate(X)
 minus(nu95u950,Y) -> num0
 minus(nu95u95s(X),nu95u95s(Y)) -> minus(activate(X),activate(Y))
 s(X) -> nu95u95s(X)
->->Cycle:
->->-> Pairs:
 MINUS(nu95u95s(X),nu95u95s(Y)) -> MINUS(activate(X),activate(Y))
->->-> Rules:
 num0 -> nu95u950
 activate(nu95u950) -> num0
 activate(nu95u95s(X)) -> s(X)
 activate(X) -> X
 div(num0,nu95u95s(Y)) -> num0
 div(s(X),nu95u95s(Y)) -> if(geq(X,activate(Y)),nu95u95s(div(minus(X,activate(Y)),nu95u95s(activate(Y)))),nu95u950)
 geq(nu95u950,nu95u95s(Y)) -> ffalse
 geq(nu95u95s(X),nu95u95s(Y)) -> geq(activate(X),activate(Y))
 geq(X,nu95u950) -> ftrue
 if(ffalse,X,Y) -> activate(Y)
 if(ftrue,X,Y) -> activate(X)
 minus(nu95u950,Y) -> num0
 minus(nu95u95s(X),nu95u95s(Y)) -> minus(activate(X),activate(Y))
 s(X) -> nu95u95s(X)
->->Cycle:
->->-> Pairs:
 DIV(s(X),nu95u95s(Y)) -> DIV(minus(X,activate(Y)),nu95u95s(activate(Y)))
->->-> Rules:
 num0 -> nu95u950
 activate(nu95u950) -> num0
 activate(nu95u95s(X)) -> s(X)
 activate(X) -> X
 div(num0,nu95u95s(Y)) -> num0
 div(s(X),nu95u95s(Y)) -> if(geq(X,activate(Y)),nu95u95s(div(minus(X,activate(Y)),nu95u95s(activate(Y)))),nu95u950)
 geq(nu95u950,nu95u95s(Y)) -> ffalse
 geq(nu95u95s(X),nu95u95s(Y)) -> geq(activate(X),activate(Y))
 geq(X,nu95u950) -> ftrue
 if(ffalse,X,Y) -> activate(Y)
 if(ftrue,X,Y) -> activate(X)
 minus(nu95u950,Y) -> num0
 minus(nu95u95s(X),nu95u95s(Y)) -> minus(activate(X),activate(Y))
 s(X) -> nu95u95s(X)


The problem is decomposed in 3 subproblems.

Problem 1.1: 

Reduction Pair Processor:
-> Pairs:
 GEQ(nu95u95s(X),nu95u95s(Y)) -> GEQ(activate(X),activate(Y))
-> Rules:
 num0 -> nu95u950
 activate(nu95u950) -> num0
 activate(nu95u95s(X)) -> s(X)
 activate(X) -> X
 div(num0,nu95u95s(Y)) -> num0
 div(s(X),nu95u95s(Y)) -> if(geq(X,activate(Y)),nu95u95s(div(minus(X,activate(Y)),nu95u95s(activate(Y)))),nu95u950)
 geq(nu95u950,nu95u95s(Y)) -> ffalse
 geq(nu95u95s(X),nu95u95s(Y)) -> geq(activate(X),activate(Y))
 geq(X,nu95u950) -> ftrue
 if(ffalse,X,Y) -> activate(Y)
 if(ftrue,X,Y) -> activate(X)
 minus(nu95u950,Y) -> num0
 minus(nu95u95s(X),nu95u95s(Y)) -> minus(activate(X),activate(Y))
 s(X) -> nu95u95s(X)
-> Usable rules:
 num0 -> nu95u950
 activate(nu95u950) -> num0
 activate(nu95u95s(X)) -> s(X)
 activate(X) -> X
 s(X) -> nu95u95s(X)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[num0] = 2
[activate](X) = 2.X + 1
[div](X1,X2) = 0
[geq](X1,X2) = 0
[if](X1,X2,X3) = 0
[minus](X1,X2) = 0
[s](X) = 2.X + 2
[fSNonEmpty] = 0
[ffalse] = 0
[nu95u950] = 1
[nu95u95s](X) = 2.X + 2
[ftrue] = 0
[NUM0] = 0
[ACTIVATE](X) = 0
[DIV](X1,X2) = 0
[GEQ](X1,X2) = 2.X1
[IF](X1,X2,X3) = 0
[MINUS](X1,X2) = 0
[S](X) = 0

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 num0 -> nu95u950
 activate(nu95u950) -> num0
 activate(nu95u95s(X)) -> s(X)
 activate(X) -> X
 div(num0,nu95u95s(Y)) -> num0
 div(s(X),nu95u95s(Y)) -> if(geq(X,activate(Y)),nu95u95s(div(minus(X,activate(Y)),nu95u95s(activate(Y)))),nu95u950)
 geq(nu95u950,nu95u95s(Y)) -> ffalse
 geq(nu95u95s(X),nu95u95s(Y)) -> geq(activate(X),activate(Y))
 geq(X,nu95u950) -> ftrue
 if(ffalse,X,Y) -> activate(Y)
 if(ftrue,X,Y) -> activate(X)
 minus(nu95u950,Y) -> num0
 minus(nu95u95s(X),nu95u95s(Y)) -> minus(activate(X),activate(Y))
 s(X) -> nu95u95s(X)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Reduction Pair Processor:
-> Pairs:
 MINUS(nu95u95s(X),nu95u95s(Y)) -> MINUS(activate(X),activate(Y))
-> Rules:
 num0 -> nu95u950
 activate(nu95u950) -> num0
 activate(nu95u95s(X)) -> s(X)
 activate(X) -> X
 div(num0,nu95u95s(Y)) -> num0
 div(s(X),nu95u95s(Y)) -> if(geq(X,activate(Y)),nu95u95s(div(minus(X,activate(Y)),nu95u95s(activate(Y)))),nu95u950)
 geq(nu95u950,nu95u95s(Y)) -> ffalse
 geq(nu95u95s(X),nu95u95s(Y)) -> geq(activate(X),activate(Y))
 geq(X,nu95u950) -> ftrue
 if(ffalse,X,Y) -> activate(Y)
 if(ftrue,X,Y) -> activate(X)
 minus(nu95u950,Y) -> num0
 minus(nu95u95s(X),nu95u95s(Y)) -> minus(activate(X),activate(Y))
 s(X) -> nu95u95s(X)
-> Usable rules:
 num0 -> nu95u950
 activate(nu95u950) -> num0
 activate(nu95u95s(X)) -> s(X)
 activate(X) -> X
 s(X) -> nu95u95s(X)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[num0] = 2
[activate](X) = 2.X + 1
[div](X1,X2) = 0
[geq](X1,X2) = 0
[if](X1,X2,X3) = 0
[minus](X1,X2) = 0
[s](X) = 2.X + 2
[fSNonEmpty] = 0
[ffalse] = 0
[nu95u950] = 1
[nu95u95s](X) = 2.X + 2
[ftrue] = 0
[NUM0] = 0
[ACTIVATE](X) = 0
[DIV](X1,X2) = 0
[GEQ](X1,X2) = 0
[IF](X1,X2,X3) = 0
[MINUS](X1,X2) = 2.X1
[S](X) = 0

Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 num0 -> nu95u950
 activate(nu95u950) -> num0
 activate(nu95u95s(X)) -> s(X)
 activate(X) -> X
 div(num0,nu95u95s(Y)) -> num0
 div(s(X),nu95u95s(Y)) -> if(geq(X,activate(Y)),nu95u95s(div(minus(X,activate(Y)),nu95u95s(activate(Y)))),nu95u950)
 geq(nu95u950,nu95u95s(Y)) -> ffalse
 geq(nu95u95s(X),nu95u95s(Y)) -> geq(activate(X),activate(Y))
 geq(X,nu95u950) -> ftrue
 if(ffalse,X,Y) -> activate(Y)
 if(ftrue,X,Y) -> activate(X)
 minus(nu95u950,Y) -> num0
 minus(nu95u95s(X),nu95u95s(Y)) -> minus(activate(X),activate(Y))
 s(X) -> nu95u95s(X)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Reduction Pair Processor:
-> Pairs:
 DIV(s(X),nu95u95s(Y)) -> DIV(minus(X,activate(Y)),nu95u95s(activate(Y)))
-> Rules:
 num0 -> nu95u950
 activate(nu95u950) -> num0
 activate(nu95u95s(X)) -> s(X)
 activate(X) -> X
 div(num0,nu95u95s(Y)) -> num0
 div(s(X),nu95u95s(Y)) -> if(geq(X,activate(Y)),nu95u95s(div(minus(X,activate(Y)),nu95u95s(activate(Y)))),nu95u950)
 geq(nu95u950,nu95u95s(Y)) -> ffalse
 geq(nu95u95s(X),nu95u95s(Y)) -> geq(activate(X),activate(Y))
 geq(X,nu95u950) -> ftrue
 if(ffalse,X,Y) -> activate(Y)
 if(ftrue,X,Y) -> activate(X)
 minus(nu95u950,Y) -> num0
 minus(nu95u95s(X),nu95u95s(Y)) -> minus(activate(X),activate(Y))
 s(X) -> nu95u95s(X)
-> Usable rules:
 num0 -> nu95u950
 activate(nu95u950) -> num0
 activate(nu95u95s(X)) -> s(X)
 activate(X) -> X
 minus(nu95u950,Y) -> num0
 minus(nu95u95s(X),nu95u95s(Y)) -> minus(activate(X),activate(Y))
 s(X) -> nu95u95s(X)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[num0] = 2
[activate](X) = 2.X
[div](X1,X2) = 0
[geq](X1,X2) = 0
[if](X1,X2,X3) = 0
[minus](X1,X2) = 2.X1 + 1
[s](X) = 2.X + 2
[fSNonEmpty] = 0
[ffalse] = 0
[nu95u950] = 2
[nu95u95s](X) = 2.X + 1
[ftrue] = 0
[NUM0] = 0
[ACTIVATE](X) = 0
[DIV](X1,X2) = X1
[GEQ](X1,X2) = 0
[IF](X1,X2,X3) = 0
[MINUS](X1,X2) = 0
[S](X) = 0

Problem 1.3: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 num0 -> nu95u950
 activate(nu95u950) -> num0
 activate(nu95u95s(X)) -> s(X)
 activate(X) -> X
 div(num0,nu95u95s(Y)) -> num0
 div(s(X),nu95u95s(Y)) -> if(geq(X,activate(Y)),nu95u95s(div(minus(X,activate(Y)),nu95u95s(activate(Y)))),nu95u950)
 geq(nu95u950,nu95u95s(Y)) -> ffalse
 geq(nu95u95s(X),nu95u95s(Y)) -> geq(activate(X),activate(Y))
 geq(X,nu95u950) -> ftrue
 if(ffalse,X,Y) -> activate(Y)
 if(ftrue,X,Y) -> activate(X)
 minus(nu95u950,Y) -> num0
 minus(nu95u95s(X),nu95u95s(Y)) -> minus(activate(X),activate(Y))
 s(X) -> nu95u95s(X)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
