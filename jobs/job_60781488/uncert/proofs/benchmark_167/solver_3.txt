YES

Problem 1: 

(VAR vu95NonEmpty x y)
(RULES
active(f(x)) -> f(active(x))
active(f(x)) -> mark(x)
check(f(x)) -> f(check(x))
check(x) -> start(match(f(X),x))
f(found(x)) -> found(f(x))
f(mark(x)) -> mark(f(x))
f(ok(x)) -> ok(f(x))
match(f(x),f(y)) -> f(match(x,y))
match(X,x) -> proper(x)
proper(f(x)) -> f(proper(x))
proper(c) -> ok(c)
start(ok(x)) -> found(x)
top(active(c)) -> top(mark(c))
top(found(x)) -> top(active(x))
top(mark(x)) -> top(check(x))
)


Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 ACTIVE(f(x)) -> ACTIVE(x)
 ACTIVE(f(x)) -> F(active(x))
 CHECK(f(x)) -> CHECK(x)
 CHECK(f(x)) -> F(check(x))
 CHECK(x) -> MATCH(f(X),x)
 CHECK(x) -> START(match(f(X),x))
 F(found(x)) -> F(x)
 F(mark(x)) -> F(x)
 F(ok(x)) -> F(x)
 MATCH(f(x),f(y)) -> F(match(x,y))
 MATCH(f(x),f(y)) -> MATCH(x,y)
 MATCH(X,x) -> PROPER(x)
 PROPER(f(x)) -> F(proper(x))
 PROPER(f(x)) -> PROPER(x)
 TOP(active(c)) -> TOP(mark(c))
 TOP(found(x)) -> ACTIVE(x)
 TOP(found(x)) -> TOP(active(x))
 TOP(mark(x)) -> CHECK(x)
 TOP(mark(x)) -> TOP(check(x))
-> Rules:
 active(f(x)) -> f(active(x))
 active(f(x)) -> mark(x)
 check(f(x)) -> f(check(x))
 check(x) -> start(match(f(X),x))
 f(found(x)) -> found(f(x))
 f(mark(x)) -> mark(f(x))
 f(ok(x)) -> ok(f(x))
 match(f(x),f(y)) -> f(match(x,y))
 match(X,x) -> proper(x)
 proper(f(x)) -> f(proper(x))
 proper(c) -> ok(c)
 start(ok(x)) -> found(x)
 top(active(c)) -> top(mark(c))
 top(found(x)) -> top(active(x))
 top(mark(x)) -> top(check(x))

Problem 1: 

SCC Processor:
-> Pairs:
 ACTIVE(f(x)) -> ACTIVE(x)
 ACTIVE(f(x)) -> F(active(x))
 CHECK(f(x)) -> CHECK(x)
 CHECK(f(x)) -> F(check(x))
 CHECK(x) -> MATCH(f(X),x)
 CHECK(x) -> START(match(f(X),x))
 F(found(x)) -> F(x)
 F(mark(x)) -> F(x)
 F(ok(x)) -> F(x)
 MATCH(f(x),f(y)) -> F(match(x,y))
 MATCH(f(x),f(y)) -> MATCH(x,y)
 MATCH(X,x) -> PROPER(x)
 PROPER(f(x)) -> F(proper(x))
 PROPER(f(x)) -> PROPER(x)
 TOP(active(c)) -> TOP(mark(c))
 TOP(found(x)) -> ACTIVE(x)
 TOP(found(x)) -> TOP(active(x))
 TOP(mark(x)) -> CHECK(x)
 TOP(mark(x)) -> TOP(check(x))
-> Rules:
 active(f(x)) -> f(active(x))
 active(f(x)) -> mark(x)
 check(f(x)) -> f(check(x))
 check(x) -> start(match(f(X),x))
 f(found(x)) -> found(f(x))
 f(mark(x)) -> mark(f(x))
 f(ok(x)) -> ok(f(x))
 match(f(x),f(y)) -> f(match(x,y))
 match(X,x) -> proper(x)
 proper(f(x)) -> f(proper(x))
 proper(c) -> ok(c)
 start(ok(x)) -> found(x)
 top(active(c)) -> top(mark(c))
 top(found(x)) -> top(active(x))
 top(mark(x)) -> top(check(x))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 F(found(x)) -> F(x)
 F(mark(x)) -> F(x)
 F(ok(x)) -> F(x)
->->-> Rules:
 active(f(x)) -> f(active(x))
 active(f(x)) -> mark(x)
 check(f(x)) -> f(check(x))
 check(x) -> start(match(f(X),x))
 f(found(x)) -> found(f(x))
 f(mark(x)) -> mark(f(x))
 f(ok(x)) -> ok(f(x))
 match(f(x),f(y)) -> f(match(x,y))
 match(X,x) -> proper(x)
 proper(f(x)) -> f(proper(x))
 proper(c) -> ok(c)
 start(ok(x)) -> found(x)
 top(active(c)) -> top(mark(c))
 top(found(x)) -> top(active(x))
 top(mark(x)) -> top(check(x))
->->Cycle:
->->-> Pairs:
 PROPER(f(x)) -> PROPER(x)
->->-> Rules:
 active(f(x)) -> f(active(x))
 active(f(x)) -> mark(x)
 check(f(x)) -> f(check(x))
 check(x) -> start(match(f(X),x))
 f(found(x)) -> found(f(x))
 f(mark(x)) -> mark(f(x))
 f(ok(x)) -> ok(f(x))
 match(f(x),f(y)) -> f(match(x,y))
 match(X,x) -> proper(x)
 proper(f(x)) -> f(proper(x))
 proper(c) -> ok(c)
 start(ok(x)) -> found(x)
 top(active(c)) -> top(mark(c))
 top(found(x)) -> top(active(x))
 top(mark(x)) -> top(check(x))
->->Cycle:
->->-> Pairs:
 MATCH(f(x),f(y)) -> MATCH(x,y)
->->-> Rules:
 active(f(x)) -> f(active(x))
 active(f(x)) -> mark(x)
 check(f(x)) -> f(check(x))
 check(x) -> start(match(f(X),x))
 f(found(x)) -> found(f(x))
 f(mark(x)) -> mark(f(x))
 f(ok(x)) -> ok(f(x))
 match(f(x),f(y)) -> f(match(x,y))
 match(X,x) -> proper(x)
 proper(f(x)) -> f(proper(x))
 proper(c) -> ok(c)
 start(ok(x)) -> found(x)
 top(active(c)) -> top(mark(c))
 top(found(x)) -> top(active(x))
 top(mark(x)) -> top(check(x))
->->Cycle:
->->-> Pairs:
 CHECK(f(x)) -> CHECK(x)
->->-> Rules:
 active(f(x)) -> f(active(x))
 active(f(x)) -> mark(x)
 check(f(x)) -> f(check(x))
 check(x) -> start(match(f(X),x))
 f(found(x)) -> found(f(x))
 f(mark(x)) -> mark(f(x))
 f(ok(x)) -> ok(f(x))
 match(f(x),f(y)) -> f(match(x,y))
 match(X,x) -> proper(x)
 proper(f(x)) -> f(proper(x))
 proper(c) -> ok(c)
 start(ok(x)) -> found(x)
 top(active(c)) -> top(mark(c))
 top(found(x)) -> top(active(x))
 top(mark(x)) -> top(check(x))
->->Cycle:
->->-> Pairs:
 ACTIVE(f(x)) -> ACTIVE(x)
->->-> Rules:
 active(f(x)) -> f(active(x))
 active(f(x)) -> mark(x)
 check(f(x)) -> f(check(x))
 check(x) -> start(match(f(X),x))
 f(found(x)) -> found(f(x))
 f(mark(x)) -> mark(f(x))
 f(ok(x)) -> ok(f(x))
 match(f(x),f(y)) -> f(match(x,y))
 match(X,x) -> proper(x)
 proper(f(x)) -> f(proper(x))
 proper(c) -> ok(c)
 start(ok(x)) -> found(x)
 top(active(c)) -> top(mark(c))
 top(found(x)) -> top(active(x))
 top(mark(x)) -> top(check(x))
->->Cycle:
->->-> Pairs:
 TOP(active(c)) -> TOP(mark(c))
 TOP(found(x)) -> TOP(active(x))
 TOP(mark(x)) -> TOP(check(x))
->->-> Rules:
 active(f(x)) -> f(active(x))
 active(f(x)) -> mark(x)
 check(f(x)) -> f(check(x))
 check(x) -> start(match(f(X),x))
 f(found(x)) -> found(f(x))
 f(mark(x)) -> mark(f(x))
 f(ok(x)) -> ok(f(x))
 match(f(x),f(y)) -> f(match(x,y))
 match(X,x) -> proper(x)
 proper(f(x)) -> f(proper(x))
 proper(c) -> ok(c)
 start(ok(x)) -> found(x)
 top(active(c)) -> top(mark(c))
 top(found(x)) -> top(active(x))
 top(mark(x)) -> top(check(x))


The problem is decomposed in 6 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 F(found(x)) -> F(x)
 F(mark(x)) -> F(x)
 F(ok(x)) -> F(x)
-> Rules:
 active(f(x)) -> f(active(x))
 active(f(x)) -> mark(x)
 check(f(x)) -> f(check(x))
 check(x) -> start(match(f(X),x))
 f(found(x)) -> found(f(x))
 f(mark(x)) -> mark(f(x))
 f(ok(x)) -> ok(f(x))
 match(f(x),f(y)) -> f(match(x,y))
 match(X,x) -> proper(x)
 proper(f(x)) -> f(proper(x))
 proper(c) -> ok(c)
 start(ok(x)) -> found(x)
 top(active(c)) -> top(mark(c))
 top(found(x)) -> top(active(x))
 top(mark(x)) -> top(check(x))
->Projection:
 pi(F) = 1

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(f(x)) -> f(active(x))
 active(f(x)) -> mark(x)
 check(f(x)) -> f(check(x))
 check(x) -> start(match(f(X),x))
 f(found(x)) -> found(f(x))
 f(mark(x)) -> mark(f(x))
 f(ok(x)) -> ok(f(x))
 match(f(x),f(y)) -> f(match(x,y))
 match(X,x) -> proper(x)
 proper(f(x)) -> f(proper(x))
 proper(c) -> ok(c)
 start(ok(x)) -> found(x)
 top(active(c)) -> top(mark(c))
 top(found(x)) -> top(active(x))
 top(mark(x)) -> top(check(x))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Subterm Processor:
-> Pairs:
 PROPER(f(x)) -> PROPER(x)
-> Rules:
 active(f(x)) -> f(active(x))
 active(f(x)) -> mark(x)
 check(f(x)) -> f(check(x))
 check(x) -> start(match(f(X),x))
 f(found(x)) -> found(f(x))
 f(mark(x)) -> mark(f(x))
 f(ok(x)) -> ok(f(x))
 match(f(x),f(y)) -> f(match(x,y))
 match(X,x) -> proper(x)
 proper(f(x)) -> f(proper(x))
 proper(c) -> ok(c)
 start(ok(x)) -> found(x)
 top(active(c)) -> top(mark(c))
 top(found(x)) -> top(active(x))
 top(mark(x)) -> top(check(x))
->Projection:
 pi(PROPER) = 1

Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(f(x)) -> f(active(x))
 active(f(x)) -> mark(x)
 check(f(x)) -> f(check(x))
 check(x) -> start(match(f(X),x))
 f(found(x)) -> found(f(x))
 f(mark(x)) -> mark(f(x))
 f(ok(x)) -> ok(f(x))
 match(f(x),f(y)) -> f(match(x,y))
 match(X,x) -> proper(x)
 proper(f(x)) -> f(proper(x))
 proper(c) -> ok(c)
 start(ok(x)) -> found(x)
 top(active(c)) -> top(mark(c))
 top(found(x)) -> top(active(x))
 top(mark(x)) -> top(check(x))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Subterm Processor:
-> Pairs:
 MATCH(f(x),f(y)) -> MATCH(x,y)
-> Rules:
 active(f(x)) -> f(active(x))
 active(f(x)) -> mark(x)
 check(f(x)) -> f(check(x))
 check(x) -> start(match(f(X),x))
 f(found(x)) -> found(f(x))
 f(mark(x)) -> mark(f(x))
 f(ok(x)) -> ok(f(x))
 match(f(x),f(y)) -> f(match(x,y))
 match(X,x) -> proper(x)
 proper(f(x)) -> f(proper(x))
 proper(c) -> ok(c)
 start(ok(x)) -> found(x)
 top(active(c)) -> top(mark(c))
 top(found(x)) -> top(active(x))
 top(mark(x)) -> top(check(x))
->Projection:
 pi(MATCH) = 1

Problem 1.3: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(f(x)) -> f(active(x))
 active(f(x)) -> mark(x)
 check(f(x)) -> f(check(x))
 check(x) -> start(match(f(X),x))
 f(found(x)) -> found(f(x))
 f(mark(x)) -> mark(f(x))
 f(ok(x)) -> ok(f(x))
 match(f(x),f(y)) -> f(match(x,y))
 match(X,x) -> proper(x)
 proper(f(x)) -> f(proper(x))
 proper(c) -> ok(c)
 start(ok(x)) -> found(x)
 top(active(c)) -> top(mark(c))
 top(found(x)) -> top(active(x))
 top(mark(x)) -> top(check(x))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.4: 

Subterm Processor:
-> Pairs:
 CHECK(f(x)) -> CHECK(x)
-> Rules:
 active(f(x)) -> f(active(x))
 active(f(x)) -> mark(x)
 check(f(x)) -> f(check(x))
 check(x) -> start(match(f(X),x))
 f(found(x)) -> found(f(x))
 f(mark(x)) -> mark(f(x))
 f(ok(x)) -> ok(f(x))
 match(f(x),f(y)) -> f(match(x,y))
 match(X,x) -> proper(x)
 proper(f(x)) -> f(proper(x))
 proper(c) -> ok(c)
 start(ok(x)) -> found(x)
 top(active(c)) -> top(mark(c))
 top(found(x)) -> top(active(x))
 top(mark(x)) -> top(check(x))
->Projection:
 pi(CHECK) = 1

Problem 1.4: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(f(x)) -> f(active(x))
 active(f(x)) -> mark(x)
 check(f(x)) -> f(check(x))
 check(x) -> start(match(f(X),x))
 f(found(x)) -> found(f(x))
 f(mark(x)) -> mark(f(x))
 f(ok(x)) -> ok(f(x))
 match(f(x),f(y)) -> f(match(x,y))
 match(X,x) -> proper(x)
 proper(f(x)) -> f(proper(x))
 proper(c) -> ok(c)
 start(ok(x)) -> found(x)
 top(active(c)) -> top(mark(c))
 top(found(x)) -> top(active(x))
 top(mark(x)) -> top(check(x))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.5: 

Subterm Processor:
-> Pairs:
 ACTIVE(f(x)) -> ACTIVE(x)
-> Rules:
 active(f(x)) -> f(active(x))
 active(f(x)) -> mark(x)
 check(f(x)) -> f(check(x))
 check(x) -> start(match(f(X),x))
 f(found(x)) -> found(f(x))
 f(mark(x)) -> mark(f(x))
 f(ok(x)) -> ok(f(x))
 match(f(x),f(y)) -> f(match(x,y))
 match(X,x) -> proper(x)
 proper(f(x)) -> f(proper(x))
 proper(c) -> ok(c)
 start(ok(x)) -> found(x)
 top(active(c)) -> top(mark(c))
 top(found(x)) -> top(active(x))
 top(mark(x)) -> top(check(x))
->Projection:
 pi(ACTIVE) = 1

Problem 1.5: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(f(x)) -> f(active(x))
 active(f(x)) -> mark(x)
 check(f(x)) -> f(check(x))
 check(x) -> start(match(f(X),x))
 f(found(x)) -> found(f(x))
 f(mark(x)) -> mark(f(x))
 f(ok(x)) -> ok(f(x))
 match(f(x),f(y)) -> f(match(x,y))
 match(X,x) -> proper(x)
 proper(f(x)) -> f(proper(x))
 proper(c) -> ok(c)
 start(ok(x)) -> found(x)
 top(active(c)) -> top(mark(c))
 top(found(x)) -> top(active(x))
 top(mark(x)) -> top(check(x))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.6: 

Reduction Pair Processor:
-> Pairs:
 TOP(active(c)) -> TOP(mark(c))
 TOP(found(x)) -> TOP(active(x))
 TOP(mark(x)) -> TOP(check(x))
-> Rules:
 active(f(x)) -> f(active(x))
 active(f(x)) -> mark(x)
 check(f(x)) -> f(check(x))
 check(x) -> start(match(f(X),x))
 f(found(x)) -> found(f(x))
 f(mark(x)) -> mark(f(x))
 f(ok(x)) -> ok(f(x))
 match(f(x),f(y)) -> f(match(x,y))
 match(X,x) -> proper(x)
 proper(f(x)) -> f(proper(x))
 proper(c) -> ok(c)
 start(ok(x)) -> found(x)
 top(active(c)) -> top(mark(c))
 top(found(x)) -> top(active(x))
 top(mark(x)) -> top(check(x))
-> Usable rules:
 active(f(x)) -> f(active(x))
 active(f(x)) -> mark(x)
 check(f(x)) -> f(check(x))
 check(x) -> start(match(f(X),x))
 f(found(x)) -> found(f(x))
 f(mark(x)) -> mark(f(x))
 f(ok(x)) -> ok(f(x))
 match(f(x),f(y)) -> f(match(x,y))
 match(X,x) -> proper(x)
 proper(f(x)) -> f(proper(x))
 proper(c) -> ok(c)
 start(ok(x)) -> found(x)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[active](X) = X
[check](X) = 1
[f](X) = 1
[match](X1,X2) = X1
[proper](X) = 2
[start](X) = X
[top](X) = 0
[X] = 2
[c] = 2
[fSNonEmpty] = 0
[found](X) = X
[mark](X) = 1
[ok](X) = X
[ACTIVE](X) = 0
[CHECK](X) = 0
[F](X) = 0
[MATCH](X1,X2) = 0
[PROPER](X) = 0
[START](X) = 0
[TOP](X) = 2.X

Problem 1.6: 

SCC Processor:
-> Pairs:
 TOP(found(x)) -> TOP(active(x))
 TOP(mark(x)) -> TOP(check(x))
-> Rules:
 active(f(x)) -> f(active(x))
 active(f(x)) -> mark(x)
 check(f(x)) -> f(check(x))
 check(x) -> start(match(f(X),x))
 f(found(x)) -> found(f(x))
 f(mark(x)) -> mark(f(x))
 f(ok(x)) -> ok(f(x))
 match(f(x),f(y)) -> f(match(x,y))
 match(X,x) -> proper(x)
 proper(f(x)) -> f(proper(x))
 proper(c) -> ok(c)
 start(ok(x)) -> found(x)
 top(active(c)) -> top(mark(c))
 top(found(x)) -> top(active(x))
 top(mark(x)) -> top(check(x))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 TOP(found(x)) -> TOP(active(x))
 TOP(mark(x)) -> TOP(check(x))
->->-> Rules:
 active(f(x)) -> f(active(x))
 active(f(x)) -> mark(x)
 check(f(x)) -> f(check(x))
 check(x) -> start(match(f(X),x))
 f(found(x)) -> found(f(x))
 f(mark(x)) -> mark(f(x))
 f(ok(x)) -> ok(f(x))
 match(f(x),f(y)) -> f(match(x,y))
 match(X,x) -> proper(x)
 proper(f(x)) -> f(proper(x))
 proper(c) -> ok(c)
 start(ok(x)) -> found(x)
 top(active(c)) -> top(mark(c))
 top(found(x)) -> top(active(x))
 top(mark(x)) -> top(check(x))

Problem 1.6: 

Reduction Pair Processor:
-> Pairs:
 TOP(found(x)) -> TOP(active(x))
 TOP(mark(x)) -> TOP(check(x))
-> Rules:
 active(f(x)) -> f(active(x))
 active(f(x)) -> mark(x)
 check(f(x)) -> f(check(x))
 check(x) -> start(match(f(X),x))
 f(found(x)) -> found(f(x))
 f(mark(x)) -> mark(f(x))
 f(ok(x)) -> ok(f(x))
 match(f(x),f(y)) -> f(match(x,y))
 match(X,x) -> proper(x)
 proper(f(x)) -> f(proper(x))
 proper(c) -> ok(c)
 start(ok(x)) -> found(x)
 top(active(c)) -> top(mark(c))
 top(found(x)) -> top(active(x))
 top(mark(x)) -> top(check(x))
-> Usable rules:
 active(f(x)) -> f(active(x))
 active(f(x)) -> mark(x)
 check(f(x)) -> f(check(x))
 check(x) -> start(match(f(X),x))
 f(found(x)) -> found(f(x))
 f(mark(x)) -> mark(f(x))
 f(ok(x)) -> ok(f(x))
 match(f(x),f(y)) -> f(match(x,y))
 match(X,x) -> proper(x)
 proper(f(x)) -> f(proper(x))
 proper(c) -> ok(c)
 start(ok(x)) -> found(x)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[active](X) = 2.X + 1
[check](X) = 2.X + 2
[f](X) = 2.X + 2
[match](X1,X2) = X2
[proper](X) = X
[start](X) = 2.X + 2
[top](X) = 0
[X] = 0
[c] = 1
[fSNonEmpty] = 0
[found](X) = 2.X + 2
[mark](X) = 2.X + 2
[ok](X) = X
[ACTIVE](X) = 0
[CHECK](X) = 0
[F](X) = 0
[MATCH](X1,X2) = 0
[PROPER](X) = 0
[START](X) = 0
[TOP](X) = 2.X

Problem 1.6: 

SCC Processor:
-> Pairs:
 TOP(mark(x)) -> TOP(check(x))
-> Rules:
 active(f(x)) -> f(active(x))
 active(f(x)) -> mark(x)
 check(f(x)) -> f(check(x))
 check(x) -> start(match(f(X),x))
 f(found(x)) -> found(f(x))
 f(mark(x)) -> mark(f(x))
 f(ok(x)) -> ok(f(x))
 match(f(x),f(y)) -> f(match(x,y))
 match(X,x) -> proper(x)
 proper(f(x)) -> f(proper(x))
 proper(c) -> ok(c)
 start(ok(x)) -> found(x)
 top(active(c)) -> top(mark(c))
 top(found(x)) -> top(active(x))
 top(mark(x)) -> top(check(x))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 TOP(mark(x)) -> TOP(check(x))
->->-> Rules:
 active(f(x)) -> f(active(x))
 active(f(x)) -> mark(x)
 check(f(x)) -> f(check(x))
 check(x) -> start(match(f(X),x))
 f(found(x)) -> found(f(x))
 f(mark(x)) -> mark(f(x))
 f(ok(x)) -> ok(f(x))
 match(f(x),f(y)) -> f(match(x,y))
 match(X,x) -> proper(x)
 proper(f(x)) -> f(proper(x))
 proper(c) -> ok(c)
 start(ok(x)) -> found(x)
 top(active(c)) -> top(mark(c))
 top(found(x)) -> top(active(x))
 top(mark(x)) -> top(check(x))

Problem 1.6: 

Reduction Pair Processor:
-> Pairs:
 TOP(mark(x)) -> TOP(check(x))
-> Rules:
 active(f(x)) -> f(active(x))
 active(f(x)) -> mark(x)
 check(f(x)) -> f(check(x))
 check(x) -> start(match(f(X),x))
 f(found(x)) -> found(f(x))
 f(mark(x)) -> mark(f(x))
 f(ok(x)) -> ok(f(x))
 match(f(x),f(y)) -> f(match(x,y))
 match(X,x) -> proper(x)
 proper(f(x)) -> f(proper(x))
 proper(c) -> ok(c)
 start(ok(x)) -> found(x)
 top(active(c)) -> top(mark(c))
 top(found(x)) -> top(active(x))
 top(mark(x)) -> top(check(x))
-> Usable rules:
 check(f(x)) -> f(check(x))
 check(x) -> start(match(f(X),x))
 f(found(x)) -> found(f(x))
 f(mark(x)) -> mark(f(x))
 f(ok(x)) -> ok(f(x))
 match(f(x),f(y)) -> f(match(x,y))
 match(X,x) -> proper(x)
 proper(f(x)) -> f(proper(x))
 proper(c) -> ok(c)
 start(ok(x)) -> found(x)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[active](X) = 0
[check](X) = X + 1
[f](X) = X + 2
[match](X1,X2) = X2 + 2
[proper](X) = X + 2
[start](X) = 1
[top](X) = 0
[X] = 0
[c] = 1
[fSNonEmpty] = 0
[found](X) = 0
[mark](X) = X + 2
[ok](X) = X + 2
[ACTIVE](X) = 0
[CHECK](X) = 0
[F](X) = 0
[MATCH](X1,X2) = 0
[PROPER](X) = 0
[START](X) = 0
[TOP](X) = 2.X

Problem 1.6: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(f(x)) -> f(active(x))
 active(f(x)) -> mark(x)
 check(f(x)) -> f(check(x))
 check(x) -> start(match(f(X),x))
 f(found(x)) -> found(f(x))
 f(mark(x)) -> mark(f(x))
 f(ok(x)) -> ok(f(x))
 match(f(x),f(y)) -> f(match(x,y))
 match(X,x) -> proper(x)
 proper(f(x)) -> f(proper(x))
 proper(c) -> ok(c)
 start(ok(x)) -> found(x)
 top(active(c)) -> top(mark(c))
 top(found(x)) -> top(active(x))
 top(mark(x)) -> top(check(x))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
