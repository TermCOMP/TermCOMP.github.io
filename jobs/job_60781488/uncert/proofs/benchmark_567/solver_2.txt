YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/5EdJX.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRS Reverse [EQUIVALENT, 0 ms]
(2) QTRS
(3) RFCMatchBoundsTRSProof [EQUIVALENT, 0 ms]
(4) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(g(X)) -> g(f(f(X)))
   f(h(X)) -> h(g(X))

Q is empty.

----------------------------------------

(1) QTRS Reverse (EQUIVALENT)
We applied the QTRS Reverse Processor [REVERSE].
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   g(f(X)) -> f(f(g(X)))
   h(f(X)) -> g(h(X))

Q is empty.

----------------------------------------

(3) RFCMatchBoundsTRSProof (EQUIVALENT)
Termination of the TRS R could be shown with a Match Bound [MATCHBOUNDS1,MATCHBOUNDS2] of 1. This implies Q-termination of R.
The following rules were used to construct the certificate:

   g(f(X)) -> f(f(g(X)))
   h(f(X)) -> g(h(X))

The certificate found is represented by the following graph.
The certificate consists of the following enumerated nodes:
111, 112, 113, 114, 115, 116, 117, 118

Node 111 is start node and node 112 is final node.

Those nodes are connected through the following edges:

* 111 to 113 labelled f_1(0)* 111 to 115 labelled g_1(0)* 112 to 112 labelled #_1(0)* 113 to 114 labelled f_1(0)* 114 to 112 labelled g_1(0)* 114 to 116 labelled f_1(1)* 115 to 112 labelled h_1(0)* 115 to 118 labelled g_1(1)* 116 to 117 labelled f_1(1)* 117 to 112 labelled g_1(1)* 117 to 116 labelled f_1(1)* 118 to 112 labelled h_1(1)* 118 to 118 labelled g_1(1)


----------------------------------------

(4)
YES
