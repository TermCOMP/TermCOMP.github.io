YES

Problem 1: 

(VAR vu95NonEmpty X)
(RULES
f(g(X)) -> g(f(f(X)))
f(h(X)) -> h(g(X))
)


Problem 1: 

Innermost Equivalent Processor:
-> Rules:
 f(g(X)) -> g(f(f(X)))
 f(h(X)) -> h(g(X))
-> The term rewriting system is non-overlaping or locally confluent overlay system. Therefore, innermost termination implies termination.
 

Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 F(g(X)) -> F(f(X))
 F(g(X)) -> F(X)
-> Rules:
 f(g(X)) -> g(f(f(X)))
 f(h(X)) -> h(g(X))

Problem 1: 

SCC Processor:
-> Pairs:
 F(g(X)) -> F(f(X))
 F(g(X)) -> F(X)
-> Rules:
 f(g(X)) -> g(f(f(X)))
 f(h(X)) -> h(g(X))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 F(g(X)) -> F(f(X))
 F(g(X)) -> F(X)
->->-> Rules:
 f(g(X)) -> g(f(f(X)))
 f(h(X)) -> h(g(X))

Problem 1: 

Reduction Pairs Processor:
-> Pairs:
 F(g(X)) -> F(f(X))
 F(g(X)) -> F(X)
-> Rules:
 f(g(X)) -> g(f(f(X)))
 f(h(X)) -> h(g(X))
-> Usable rules:
 f(g(X)) -> g(f(f(X)))
 f(h(X)) -> h(g(X))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[f](X) = X
[fSNonEmpty] = 0
[g](X) = 2.X + 2
[h](X) = 2
[F](X) = 2.X

Problem 1: 

SCC Processor:
-> Pairs:
 F(g(X)) -> F(X)
-> Rules:
 f(g(X)) -> g(f(f(X)))
 f(h(X)) -> h(g(X))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 F(g(X)) -> F(X)
->->-> Rules:
 f(g(X)) -> g(f(f(X)))
 f(h(X)) -> h(g(X))

Problem 1: 

Subterm Processor:
-> Pairs:
 F(g(X)) -> F(X)
-> Rules:
 f(g(X)) -> g(f(f(X)))
 f(h(X)) -> h(g(X))
->Projection:
 pi(F) = 1

Problem 1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 f(g(X)) -> g(f(f(X)))
 f(h(X)) -> h(g(X))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
