YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/UaZgw.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRSRRRProof [EQUIVALENT, 7 ms]
(2) QTRS
(3) QTRSRRRProof [EQUIVALENT, 1 ms]
(4) QTRS
(5) QTRSRRRProof [EQUIVALENT, 0 ms]
(6) QTRS
(7) DependencyPairsProof [EQUIVALENT, 4 ms]
(8) QDP
(9) QDPOrderProof [EQUIVALENT, 15 ms]
(10) QDP
(11) DependencyGraphProof [EQUIVALENT, 0 ms]
(12) AND
    (13) QDP
        (14) QDPOrderProof [EQUIVALENT, 5 ms]
        (15) QDP
        (16) PisEmptyProof [EQUIVALENT, 0 ms]
        (17) YES
    (18) QDP
        (19) QDPOrderProof [EQUIVALENT, 6 ms]
        (20) QDP
        (21) PisEmptyProof [EQUIVALENT, 0 ms]
        (22) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a(b(x)) -> b(a(a(x)))
   b(c(x)) -> c(b(b(x)))
   c(a(x)) -> a(c(c(x)))
   u(a(x)) -> x
   v(b(x)) -> x
   w(c(x)) -> x
   a(u(x)) -> x
   b(v(x)) -> x
   c(w(x)) -> x

Q is empty.

----------------------------------------

(1) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(a(x_1)) = x_1
   POL(b(x_1)) = x_1
   POL(c(x_1)) = x_1
   POL(u(x_1)) = 1 + x_1
   POL(v(x_1)) = x_1
   POL(w(x_1)) = x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   u(a(x)) -> x
   a(u(x)) -> x




----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a(b(x)) -> b(a(a(x)))
   b(c(x)) -> c(b(b(x)))
   c(a(x)) -> a(c(c(x)))
   v(b(x)) -> x
   w(c(x)) -> x
   b(v(x)) -> x
   c(w(x)) -> x

Q is empty.

----------------------------------------

(3) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(a(x_1)) = x_1
   POL(b(x_1)) = x_1
   POL(c(x_1)) = x_1
   POL(v(x_1)) = 1 + x_1
   POL(w(x_1)) = x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   v(b(x)) -> x
   b(v(x)) -> x




----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a(b(x)) -> b(a(a(x)))
   b(c(x)) -> c(b(b(x)))
   c(a(x)) -> a(c(c(x)))
   w(c(x)) -> x
   c(w(x)) -> x

Q is empty.

----------------------------------------

(5) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(a(x_1)) = x_1
   POL(b(x_1)) = x_1
   POL(c(x_1)) = x_1
   POL(w(x_1)) = 1 + x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   w(c(x)) -> x
   c(w(x)) -> x




----------------------------------------

(6)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a(b(x)) -> b(a(a(x)))
   b(c(x)) -> c(b(b(x)))
   c(a(x)) -> a(c(c(x)))

Q is empty.

----------------------------------------

(7) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(b(x)) -> B(a(a(x)))
   A(b(x)) -> A(a(x))
   A(b(x)) -> A(x)
   B(c(x)) -> C(b(b(x)))
   B(c(x)) -> B(b(x))
   B(c(x)) -> B(x)
   C(a(x)) -> A(c(c(x)))
   C(a(x)) -> C(c(x))
   C(a(x)) -> C(x)

The TRS R consists of the following rules:

   a(b(x)) -> b(a(a(x)))
   b(c(x)) -> c(b(b(x)))
   c(a(x)) -> a(c(c(x)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   B(c(x)) -> C(b(b(x)))
   B(c(x)) -> B(b(x))
   B(c(x)) -> B(x)
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(A(x_1)) = 0
   POL(B(x_1)) = x_1
   POL(C(x_1)) = 0
   POL(a(x_1)) = 0
   POL(b(x_1)) = x_1
   POL(c(x_1)) = 1 + x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   b(c(x)) -> c(b(b(x)))
   c(a(x)) -> a(c(c(x)))
   a(b(x)) -> b(a(a(x)))


----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(b(x)) -> B(a(a(x)))
   A(b(x)) -> A(a(x))
   A(b(x)) -> A(x)
   C(a(x)) -> A(c(c(x)))
   C(a(x)) -> C(c(x))
   C(a(x)) -> C(x)

The TRS R consists of the following rules:

   a(b(x)) -> b(a(a(x)))
   b(c(x)) -> c(b(b(x)))
   c(a(x)) -> a(c(c(x)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs with 2 less nodes.
----------------------------------------

(12)
Complex Obligation (AND)

----------------------------------------

(13)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(b(x)) -> A(x)
   A(b(x)) -> A(a(x))

The TRS R consists of the following rules:

   a(b(x)) -> b(a(a(x)))
   b(c(x)) -> c(b(b(x)))
   c(a(x)) -> a(c(c(x)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(14) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   A(b(x)) -> A(x)
   A(b(x)) -> A(a(x))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial Order [NEGPOLO,POLO] with Interpretation:

POL( A_1(x_1) ) = max{0, 2x_1 - 1}
POL( b_1(x_1) ) = x_1 + 2
POL( c_1(x_1) ) = 2
POL( a_1(x_1) ) = x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   b(c(x)) -> c(b(b(x)))
   c(a(x)) -> a(c(c(x)))
   a(b(x)) -> b(a(a(x)))


----------------------------------------

(15)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   a(b(x)) -> b(a(a(x)))
   b(c(x)) -> c(b(b(x)))
   c(a(x)) -> a(c(c(x)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(16) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(17)
YES

----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C(a(x)) -> C(x)
   C(a(x)) -> C(c(x))

The TRS R consists of the following rules:

   a(b(x)) -> b(a(a(x)))
   b(c(x)) -> c(b(b(x)))
   c(a(x)) -> a(c(c(x)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   C(a(x)) -> C(x)
   C(a(x)) -> C(c(x))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial Order [NEGPOLO,POLO] with Interpretation:

POL( C_1(x_1) ) = max{0, x_1 - 1}
POL( b_1(x_1) ) = max{0, -2}
POL( c_1(x_1) ) = x_1
POL( a_1(x_1) ) = x_1 + 2

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   b(c(x)) -> c(b(b(x)))
   c(a(x)) -> a(c(c(x)))
   a(b(x)) -> b(a(a(x)))


----------------------------------------

(20)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   a(b(x)) -> b(a(a(x)))
   b(c(x)) -> c(b(b(x)))
   c(a(x)) -> a(c(c(x)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(21) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(22)
YES
