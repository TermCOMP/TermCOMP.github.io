YES

Problem 1: 

(VAR vu95NonEmpty I P V V1 V2 X X1 X2 Y Z)
(RULES
U11(tt,V) -> U12(isNeList(activate(V)))
U12(tt) -> tt
U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
U22(tt,V2) -> U23(isList(activate(V2)))
U23(tt) -> tt
U31(tt,V) -> U32(isQid(activate(V)))
U32(tt) -> tt
U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
U42(tt,V2) -> U43(isNeList(activate(V2)))
U43(tt) -> tt
U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
U52(tt,V2) -> U53(isList(activate(V2)))
U53(tt) -> tt
U61(tt,V) -> U62(isQid(activate(V)))
U62(tt) -> tt
U71(tt,V) -> U72(isNePal(activate(V)))
U72(tt) -> tt
u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
u95u95(nil,X) -> X
u95u95(X,nil) -> X
u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
a -> nu95u95a
activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
activate(nu95u95a) -> a
activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
activate(nu95u95e) -> e
activate(nu95u95i) -> i
activate(nu95u95isPal(X)) -> isPal(X)
activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
activate(nu95u95nil) -> nil
activate(nu95u95o) -> o
activate(nu95u95u) -> u
activate(X) -> X
and(tt,X) -> activate(X)
and(X1,X2) -> nu95u95and(X1,X2)
e -> nu95u95e
i -> nu95u95i
isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
isList(nu95u95nil) -> tt
isList(V) -> U11(isPalListKind(activate(V)),activate(V))
isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
isPal(nu95u95nil) -> tt
isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
isPal(X) -> nu95u95isPal(X)
isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
isPalListKind(nu95u95a) -> tt
isPalListKind(nu95u95e) -> tt
isPalListKind(nu95u95i) -> tt
isPalListKind(nu95u95nil) -> tt
isPalListKind(nu95u95o) -> tt
isPalListKind(nu95u95u) -> tt
isPalListKind(X) -> nu95u95isPalListKind(X)
isQid(nu95u95a) -> tt
isQid(nu95u95e) -> tt
isQid(nu95u95i) -> tt
isQid(nu95u95o) -> tt
isQid(nu95u95u) -> tt
nil -> nu95u95nil
o -> nu95u95o
u -> nu95u95u
)


Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 U11Sharp(tt,V) -> U12Sharp(isNeList(activate(V)))
 U11Sharp(tt,V) -> ACTIVATE(V)
 U11Sharp(tt,V) -> ISNELIST(activate(V))
 U21Sharp(tt,V1,V2) -> U22Sharp(isList(activate(V1)),activate(V2))
 U21Sharp(tt,V1,V2) -> ACTIVATE(V1)
 U21Sharp(tt,V1,V2) -> ACTIVATE(V2)
 U21Sharp(tt,V1,V2) -> ISLIST(activate(V1))
 U22Sharp(tt,V2) -> U23Sharp(isList(activate(V2)))
 U22Sharp(tt,V2) -> ACTIVATE(V2)
 U22Sharp(tt,V2) -> ISLIST(activate(V2))
 U31Sharp(tt,V) -> U32Sharp(isQid(activate(V)))
 U31Sharp(tt,V) -> ACTIVATE(V)
 U31Sharp(tt,V) -> ISQID(activate(V))
 U41Sharp(tt,V1,V2) -> U42Sharp(isList(activate(V1)),activate(V2))
 U41Sharp(tt,V1,V2) -> ACTIVATE(V1)
 U41Sharp(tt,V1,V2) -> ACTIVATE(V2)
 U41Sharp(tt,V1,V2) -> ISLIST(activate(V1))
 U42Sharp(tt,V2) -> U43Sharp(isNeList(activate(V2)))
 U42Sharp(tt,V2) -> ACTIVATE(V2)
 U42Sharp(tt,V2) -> ISNELIST(activate(V2))
 U51Sharp(tt,V1,V2) -> U52Sharp(isNeList(activate(V1)),activate(V2))
 U51Sharp(tt,V1,V2) -> ACTIVATE(V1)
 U51Sharp(tt,V1,V2) -> ACTIVATE(V2)
 U51Sharp(tt,V1,V2) -> ISNELIST(activate(V1))
 U52Sharp(tt,V2) -> U53Sharp(isList(activate(V2)))
 U52Sharp(tt,V2) -> ACTIVATE(V2)
 U52Sharp(tt,V2) -> ISLIST(activate(V2))
 U61Sharp(tt,V) -> U62Sharp(isQid(activate(V)))
 U61Sharp(tt,V) -> ACTIVATE(V)
 U61Sharp(tt,V) -> ISQID(activate(V))
 U71Sharp(tt,V) -> U72Sharp(isNePal(activate(V)))
 U71Sharp(tt,V) -> ACTIVATE(V)
 U71Sharp(tt,V) -> ISNEPAL(activate(V))
 U95U95(u95u95(X,Y),Z) -> U95U95(X,u95u95(Y,Z))
 U95U95(u95u95(X,Y),Z) -> U95U95(Y,Z)
 ACTIVATE(nu95u95u95u95(X1,X2)) -> U95U95(activate(X1),activate(X2))
 ACTIVATE(nu95u95u95u95(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95u95u95(X1,X2)) -> ACTIVATE(X2)
 ACTIVATE(nu95u95a) -> A
 ACTIVATE(nu95u95and(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95and(X1,X2)) -> AND(activate(X1),X2)
 ACTIVATE(nu95u95e) -> E
 ACTIVATE(nu95u95i) -> I
 ACTIVATE(nu95u95isPal(X)) -> ISPAL(X)
 ACTIVATE(nu95u95isPalListKind(X)) -> ISPALLISTKIND(X)
 ACTIVATE(nu95u95nil) -> NIL
 ACTIVATE(nu95u95o) -> O
 ACTIVATE(nu95u95u) -> U
 AND(tt,X) -> ACTIVATE(X)
 ISLIST(nu95u95u95u95(V1,V2)) -> U21Sharp(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 ISLIST(nu95u95u95u95(V1,V2)) -> ACTIVATE(V1)
 ISLIST(nu95u95u95u95(V1,V2)) -> ACTIVATE(V2)
 ISLIST(nu95u95u95u95(V1,V2)) -> AND(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 ISLIST(nu95u95u95u95(V1,V2)) -> ISPALLISTKIND(activate(V1))
 ISLIST(V) -> U11Sharp(isPalListKind(activate(V)),activate(V))
 ISLIST(V) -> ACTIVATE(V)
 ISLIST(V) -> ISPALLISTKIND(activate(V))
 ISNELIST(nu95u95u95u95(V1,V2)) -> U41Sharp(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 ISNELIST(nu95u95u95u95(V1,V2)) -> U51Sharp(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 ISNELIST(nu95u95u95u95(V1,V2)) -> ACTIVATE(V1)
 ISNELIST(nu95u95u95u95(V1,V2)) -> ACTIVATE(V2)
 ISNELIST(nu95u95u95u95(V1,V2)) -> AND(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 ISNELIST(nu95u95u95u95(V1,V2)) -> ISPALLISTKIND(activate(V1))
 ISNELIST(V) -> U31Sharp(isPalListKind(activate(V)),activate(V))
 ISNELIST(V) -> ACTIVATE(V)
 ISNELIST(V) -> ISPALLISTKIND(activate(V))
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> ACTIVATE(I)
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> ACTIVATE(P)
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> AND(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> AND(isQid(activate(I)),nu95u95isPalListKind(activate(I)))
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> ISQID(activate(I))
 ISNEPAL(V) -> U61Sharp(isPalListKind(activate(V)),activate(V))
 ISNEPAL(V) -> ACTIVATE(V)
 ISNEPAL(V) -> ISPALLISTKIND(activate(V))
 ISPAL(V) -> U71Sharp(isPalListKind(activate(V)),activate(V))
 ISPAL(V) -> ACTIVATE(V)
 ISPAL(V) -> ISPALLISTKIND(activate(V))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V1)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V2)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> AND(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ISPALLISTKIND(activate(V1))
-> Rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u

Problem 1: 

SCC Processor:
-> Pairs:
 U11Sharp(tt,V) -> U12Sharp(isNeList(activate(V)))
 U11Sharp(tt,V) -> ACTIVATE(V)
 U11Sharp(tt,V) -> ISNELIST(activate(V))
 U21Sharp(tt,V1,V2) -> U22Sharp(isList(activate(V1)),activate(V2))
 U21Sharp(tt,V1,V2) -> ACTIVATE(V1)
 U21Sharp(tt,V1,V2) -> ACTIVATE(V2)
 U21Sharp(tt,V1,V2) -> ISLIST(activate(V1))
 U22Sharp(tt,V2) -> U23Sharp(isList(activate(V2)))
 U22Sharp(tt,V2) -> ACTIVATE(V2)
 U22Sharp(tt,V2) -> ISLIST(activate(V2))
 U31Sharp(tt,V) -> U32Sharp(isQid(activate(V)))
 U31Sharp(tt,V) -> ACTIVATE(V)
 U31Sharp(tt,V) -> ISQID(activate(V))
 U41Sharp(tt,V1,V2) -> U42Sharp(isList(activate(V1)),activate(V2))
 U41Sharp(tt,V1,V2) -> ACTIVATE(V1)
 U41Sharp(tt,V1,V2) -> ACTIVATE(V2)
 U41Sharp(tt,V1,V2) -> ISLIST(activate(V1))
 U42Sharp(tt,V2) -> U43Sharp(isNeList(activate(V2)))
 U42Sharp(tt,V2) -> ACTIVATE(V2)
 U42Sharp(tt,V2) -> ISNELIST(activate(V2))
 U51Sharp(tt,V1,V2) -> U52Sharp(isNeList(activate(V1)),activate(V2))
 U51Sharp(tt,V1,V2) -> ACTIVATE(V1)
 U51Sharp(tt,V1,V2) -> ACTIVATE(V2)
 U51Sharp(tt,V1,V2) -> ISNELIST(activate(V1))
 U52Sharp(tt,V2) -> U53Sharp(isList(activate(V2)))
 U52Sharp(tt,V2) -> ACTIVATE(V2)
 U52Sharp(tt,V2) -> ISLIST(activate(V2))
 U61Sharp(tt,V) -> U62Sharp(isQid(activate(V)))
 U61Sharp(tt,V) -> ACTIVATE(V)
 U61Sharp(tt,V) -> ISQID(activate(V))
 U71Sharp(tt,V) -> U72Sharp(isNePal(activate(V)))
 U71Sharp(tt,V) -> ACTIVATE(V)
 U71Sharp(tt,V) -> ISNEPAL(activate(V))
 U95U95(u95u95(X,Y),Z) -> U95U95(X,u95u95(Y,Z))
 U95U95(u95u95(X,Y),Z) -> U95U95(Y,Z)
 ACTIVATE(nu95u95u95u95(X1,X2)) -> U95U95(activate(X1),activate(X2))
 ACTIVATE(nu95u95u95u95(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95u95u95(X1,X2)) -> ACTIVATE(X2)
 ACTIVATE(nu95u95a) -> A
 ACTIVATE(nu95u95and(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95and(X1,X2)) -> AND(activate(X1),X2)
 ACTIVATE(nu95u95e) -> E
 ACTIVATE(nu95u95i) -> I
 ACTIVATE(nu95u95isPal(X)) -> ISPAL(X)
 ACTIVATE(nu95u95isPalListKind(X)) -> ISPALLISTKIND(X)
 ACTIVATE(nu95u95nil) -> NIL
 ACTIVATE(nu95u95o) -> O
 ACTIVATE(nu95u95u) -> U
 AND(tt,X) -> ACTIVATE(X)
 ISLIST(nu95u95u95u95(V1,V2)) -> U21Sharp(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 ISLIST(nu95u95u95u95(V1,V2)) -> ACTIVATE(V1)
 ISLIST(nu95u95u95u95(V1,V2)) -> ACTIVATE(V2)
 ISLIST(nu95u95u95u95(V1,V2)) -> AND(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 ISLIST(nu95u95u95u95(V1,V2)) -> ISPALLISTKIND(activate(V1))
 ISLIST(V) -> U11Sharp(isPalListKind(activate(V)),activate(V))
 ISLIST(V) -> ACTIVATE(V)
 ISLIST(V) -> ISPALLISTKIND(activate(V))
 ISNELIST(nu95u95u95u95(V1,V2)) -> U41Sharp(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 ISNELIST(nu95u95u95u95(V1,V2)) -> U51Sharp(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 ISNELIST(nu95u95u95u95(V1,V2)) -> ACTIVATE(V1)
 ISNELIST(nu95u95u95u95(V1,V2)) -> ACTIVATE(V2)
 ISNELIST(nu95u95u95u95(V1,V2)) -> AND(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 ISNELIST(nu95u95u95u95(V1,V2)) -> ISPALLISTKIND(activate(V1))
 ISNELIST(V) -> U31Sharp(isPalListKind(activate(V)),activate(V))
 ISNELIST(V) -> ACTIVATE(V)
 ISNELIST(V) -> ISPALLISTKIND(activate(V))
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> ACTIVATE(I)
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> ACTIVATE(P)
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> AND(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> AND(isQid(activate(I)),nu95u95isPalListKind(activate(I)))
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> ISQID(activate(I))
 ISNEPAL(V) -> U61Sharp(isPalListKind(activate(V)),activate(V))
 ISNEPAL(V) -> ACTIVATE(V)
 ISNEPAL(V) -> ISPALLISTKIND(activate(V))
 ISPAL(V) -> U71Sharp(isPalListKind(activate(V)),activate(V))
 ISPAL(V) -> ACTIVATE(V)
 ISPAL(V) -> ISPALLISTKIND(activate(V))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V1)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V2)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> AND(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ISPALLISTKIND(activate(V1))
-> Rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U95U95(u95u95(X,Y),Z) -> U95U95(X,u95u95(Y,Z))
 U95U95(u95u95(X,Y),Z) -> U95U95(Y,Z)
->->-> Rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->->Cycle:
->->-> Pairs:
 U61Sharp(tt,V) -> ACTIVATE(V)
 U71Sharp(tt,V) -> ACTIVATE(V)
 U71Sharp(tt,V) -> ISNEPAL(activate(V))
 ACTIVATE(nu95u95u95u95(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95u95u95(X1,X2)) -> ACTIVATE(X2)
 ACTIVATE(nu95u95and(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95and(X1,X2)) -> AND(activate(X1),X2)
 ACTIVATE(nu95u95isPal(X)) -> ISPAL(X)
 ACTIVATE(nu95u95isPalListKind(X)) -> ISPALLISTKIND(X)
 AND(tt,X) -> ACTIVATE(X)
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> ACTIVATE(I)
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> ACTIVATE(P)
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> AND(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> AND(isQid(activate(I)),nu95u95isPalListKind(activate(I)))
 ISNEPAL(V) -> U61Sharp(isPalListKind(activate(V)),activate(V))
 ISNEPAL(V) -> ACTIVATE(V)
 ISNEPAL(V) -> ISPALLISTKIND(activate(V))
 ISPAL(V) -> U71Sharp(isPalListKind(activate(V)),activate(V))
 ISPAL(V) -> ACTIVATE(V)
 ISPAL(V) -> ISPALLISTKIND(activate(V))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V1)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V2)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> AND(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ISPALLISTKIND(activate(V1))
->->-> Rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->->Cycle:
->->-> Pairs:
 U11Sharp(tt,V) -> ISNELIST(activate(V))
 U21Sharp(tt,V1,V2) -> U22Sharp(isList(activate(V1)),activate(V2))
 U21Sharp(tt,V1,V2) -> ISLIST(activate(V1))
 U22Sharp(tt,V2) -> ISLIST(activate(V2))
 U41Sharp(tt,V1,V2) -> U42Sharp(isList(activate(V1)),activate(V2))
 U41Sharp(tt,V1,V2) -> ISLIST(activate(V1))
 U42Sharp(tt,V2) -> ISNELIST(activate(V2))
 U51Sharp(tt,V1,V2) -> U52Sharp(isNeList(activate(V1)),activate(V2))
 U51Sharp(tt,V1,V2) -> ISNELIST(activate(V1))
 U52Sharp(tt,V2) -> ISLIST(activate(V2))
 ISLIST(nu95u95u95u95(V1,V2)) -> U21Sharp(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 ISLIST(V) -> U11Sharp(isPalListKind(activate(V)),activate(V))
 ISNELIST(nu95u95u95u95(V1,V2)) -> U41Sharp(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 ISNELIST(nu95u95u95u95(V1,V2)) -> U51Sharp(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
->->-> Rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u


The problem is decomposed in 3 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 U95U95(u95u95(X,Y),Z) -> U95U95(X,u95u95(Y,Z))
 U95U95(u95u95(X,Y),Z) -> U95U95(Y,Z)
-> Rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Projection:
 pi(U95U95) = 1

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Reduction Pair Processor:
-> Pairs:
 U61Sharp(tt,V) -> ACTIVATE(V)
 U71Sharp(tt,V) -> ACTIVATE(V)
 U71Sharp(tt,V) -> ISNEPAL(activate(V))
 ACTIVATE(nu95u95u95u95(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95u95u95(X1,X2)) -> ACTIVATE(X2)
 ACTIVATE(nu95u95and(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95and(X1,X2)) -> AND(activate(X1),X2)
 ACTIVATE(nu95u95isPal(X)) -> ISPAL(X)
 ACTIVATE(nu95u95isPalListKind(X)) -> ISPALLISTKIND(X)
 AND(tt,X) -> ACTIVATE(X)
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> ACTIVATE(I)
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> ACTIVATE(P)
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> AND(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> AND(isQid(activate(I)),nu95u95isPalListKind(activate(I)))
 ISNEPAL(V) -> U61Sharp(isPalListKind(activate(V)),activate(V))
 ISNEPAL(V) -> ACTIVATE(V)
 ISNEPAL(V) -> ISPALLISTKIND(activate(V))
 ISPAL(V) -> U71Sharp(isPalListKind(activate(V)),activate(V))
 ISPAL(V) -> ACTIVATE(V)
 ISPAL(V) -> ISPALLISTKIND(activate(V))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V1)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V2)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> AND(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ISPALLISTKIND(activate(V1))
-> Rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
-> Usable rules:
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 0
[U12](X) = 0
[U21](X1,X2,X3) = 0
[U22](X1,X2) = 0
[U23](X) = 0
[U31](X1,X2) = 0
[U32](X) = 0
[U41](X1,X2,X3) = 0
[U42](X1,X2) = 0
[U43](X) = 0
[U51](X1,X2,X3) = 0
[U52](X1,X2) = 0
[U53](X) = 0
[U61](X1,X2) = 2.X2 + 2
[U62](X) = 2
[U71](X1,X2) = X1
[U72](X) = 2
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 2
[activate](X) = X
[and](X1,X2) = X1 + X2 + 1
[e] = 2
[i] = 1
[isList](X) = 0
[isNeList](X) = 0
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 2.X + 2
[isQid](X) = 2.X
[nil] = 2
[o] = 1
[u] = 2
[fSNonEmpty] = 0
[nu95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[nu95u95a] = 2
[nu95u95and](X1,X2) = X1 + X2 + 1
[nu95u95e] = 2
[nu95u95i] = 1
[nu95u95isPal](X) = 2.X + 2
[nu95u95isPalListKind](X) = 2.X + 2
[nu95u95nil] = 2
[nu95u95o] = 1
[nu95u95u] = 2
[tt] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 2.X2 + 2
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 2.X2 + 2
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[A] = 0
[ACTIVATE](X) = X + 1
[AND](X1,X2) = X1 + X2 + 2
[E] = 0
[I] = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 2.X + 2
[ISPAL](X) = 2.X + 2
[ISPALLISTKIND](X) = 2.X + 2
[ISQID](X) = 0
[NIL] = 0
[O] = 0
[U] = 0

Problem 1.2: 

SCC Processor:
-> Pairs:
 U71Sharp(tt,V) -> ACTIVATE(V)
 U71Sharp(tt,V) -> ISNEPAL(activate(V))
 ACTIVATE(nu95u95u95u95(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95u95u95(X1,X2)) -> ACTIVATE(X2)
 ACTIVATE(nu95u95and(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95and(X1,X2)) -> AND(activate(X1),X2)
 ACTIVATE(nu95u95isPal(X)) -> ISPAL(X)
 ACTIVATE(nu95u95isPalListKind(X)) -> ISPALLISTKIND(X)
 AND(tt,X) -> ACTIVATE(X)
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> ACTIVATE(I)
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> ACTIVATE(P)
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> AND(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> AND(isQid(activate(I)),nu95u95isPalListKind(activate(I)))
 ISNEPAL(V) -> U61Sharp(isPalListKind(activate(V)),activate(V))
 ISNEPAL(V) -> ACTIVATE(V)
 ISNEPAL(V) -> ISPALLISTKIND(activate(V))
 ISPAL(V) -> U71Sharp(isPalListKind(activate(V)),activate(V))
 ISPAL(V) -> ACTIVATE(V)
 ISPAL(V) -> ISPALLISTKIND(activate(V))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V1)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V2)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> AND(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ISPALLISTKIND(activate(V1))
-> Rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U71Sharp(tt,V) -> ACTIVATE(V)
 U71Sharp(tt,V) -> ISNEPAL(activate(V))
 ACTIVATE(nu95u95u95u95(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95u95u95(X1,X2)) -> ACTIVATE(X2)
 ACTIVATE(nu95u95and(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95and(X1,X2)) -> AND(activate(X1),X2)
 ACTIVATE(nu95u95isPal(X)) -> ISPAL(X)
 ACTIVATE(nu95u95isPalListKind(X)) -> ISPALLISTKIND(X)
 AND(tt,X) -> ACTIVATE(X)
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> ACTIVATE(I)
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> ACTIVATE(P)
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> AND(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> AND(isQid(activate(I)),nu95u95isPalListKind(activate(I)))
 ISNEPAL(V) -> ACTIVATE(V)
 ISNEPAL(V) -> ISPALLISTKIND(activate(V))
 ISPAL(V) -> U71Sharp(isPalListKind(activate(V)),activate(V))
 ISPAL(V) -> ACTIVATE(V)
 ISPAL(V) -> ISPALLISTKIND(activate(V))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V1)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V2)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> AND(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ISPALLISTKIND(activate(V1))
->->-> Rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u

Problem 1.2: 

Reduction Pair Processor:
-> Pairs:
 U71Sharp(tt,V) -> ACTIVATE(V)
 U71Sharp(tt,V) -> ISNEPAL(activate(V))
 ACTIVATE(nu95u95u95u95(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95u95u95(X1,X2)) -> ACTIVATE(X2)
 ACTIVATE(nu95u95and(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95and(X1,X2)) -> AND(activate(X1),X2)
 ACTIVATE(nu95u95isPal(X)) -> ISPAL(X)
 ACTIVATE(nu95u95isPalListKind(X)) -> ISPALLISTKIND(X)
 AND(tt,X) -> ACTIVATE(X)
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> ACTIVATE(I)
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> ACTIVATE(P)
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> AND(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> AND(isQid(activate(I)),nu95u95isPalListKind(activate(I)))
 ISNEPAL(V) -> ACTIVATE(V)
 ISNEPAL(V) -> ISPALLISTKIND(activate(V))
 ISPAL(V) -> U71Sharp(isPalListKind(activate(V)),activate(V))
 ISPAL(V) -> ACTIVATE(V)
 ISPAL(V) -> ISPALLISTKIND(activate(V))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V1)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V2)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> AND(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ISPALLISTKIND(activate(V1))
-> Rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
-> Usable rules:
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 0
[U12](X) = 0
[U21](X1,X2,X3) = 0
[U22](X1,X2) = 0
[U23](X) = 0
[U31](X1,X2) = 0
[U32](X) = 0
[U41](X1,X2,X3) = 0
[U42](X1,X2) = 0
[U43](X) = 0
[U51](X1,X2,X3) = 0
[U52](X1,X2) = 0
[U53](X) = 0
[U61](X1,X2) = X1
[U62](X) = 2
[U71](X1,X2) = X1
[U72](X) = 2
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 2
[activate](X) = X
[and](X1,X2) = X1 + X2
[e] = 2
[i] = 2
[isList](X) = 0
[isNeList](X) = 0
[isNePal](X) = X + 2
[isPal](X) = X + 2
[isPalListKind](X) = X + 2
[isQid](X) = 2.X
[nil] = 0
[o] = 2
[u] = 2
[fSNonEmpty] = 0
[nu95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[nu95u95a] = 2
[nu95u95and](X1,X2) = X1 + X2
[nu95u95e] = 2
[nu95u95i] = 2
[nu95u95isPal](X) = X + 2
[nu95u95isPalListKind](X) = X + 2
[nu95u95nil] = 0
[nu95u95o] = 2
[nu95u95u] = 2
[tt] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 2.X2 + 2
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[A] = 0
[ACTIVATE](X) = 2.X + 1
[AND](X1,X2) = 2.X2 + 1
[E] = 0
[I] = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 2.X + 2
[ISPAL](X) = 2.X + 2
[ISPALLISTKIND](X) = 2.X + 2
[ISQID](X) = 0
[NIL] = 0
[O] = 0
[U] = 0

Problem 1.2: 

SCC Processor:
-> Pairs:
 U71Sharp(tt,V) -> ISNEPAL(activate(V))
 ACTIVATE(nu95u95u95u95(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95u95u95(X1,X2)) -> ACTIVATE(X2)
 ACTIVATE(nu95u95and(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95and(X1,X2)) -> AND(activate(X1),X2)
 ACTIVATE(nu95u95isPal(X)) -> ISPAL(X)
 ACTIVATE(nu95u95isPalListKind(X)) -> ISPALLISTKIND(X)
 AND(tt,X) -> ACTIVATE(X)
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> ACTIVATE(I)
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> ACTIVATE(P)
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> AND(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> AND(isQid(activate(I)),nu95u95isPalListKind(activate(I)))
 ISNEPAL(V) -> ACTIVATE(V)
 ISNEPAL(V) -> ISPALLISTKIND(activate(V))
 ISPAL(V) -> U71Sharp(isPalListKind(activate(V)),activate(V))
 ISPAL(V) -> ACTIVATE(V)
 ISPAL(V) -> ISPALLISTKIND(activate(V))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V1)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V2)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> AND(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ISPALLISTKIND(activate(V1))
-> Rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U71Sharp(tt,V) -> ISNEPAL(activate(V))
 ACTIVATE(nu95u95u95u95(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95u95u95(X1,X2)) -> ACTIVATE(X2)
 ACTIVATE(nu95u95and(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95and(X1,X2)) -> AND(activate(X1),X2)
 ACTIVATE(nu95u95isPal(X)) -> ISPAL(X)
 ACTIVATE(nu95u95isPalListKind(X)) -> ISPALLISTKIND(X)
 AND(tt,X) -> ACTIVATE(X)
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> ACTIVATE(I)
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> ACTIVATE(P)
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> AND(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> AND(isQid(activate(I)),nu95u95isPalListKind(activate(I)))
 ISNEPAL(V) -> ACTIVATE(V)
 ISNEPAL(V) -> ISPALLISTKIND(activate(V))
 ISPAL(V) -> U71Sharp(isPalListKind(activate(V)),activate(V))
 ISPAL(V) -> ACTIVATE(V)
 ISPAL(V) -> ISPALLISTKIND(activate(V))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V1)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V2)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> AND(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ISPALLISTKIND(activate(V1))
->->-> Rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u

Problem 1.2: 

Reduction Pair Processor:
-> Pairs:
 U71Sharp(tt,V) -> ISNEPAL(activate(V))
 ACTIVATE(nu95u95u95u95(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95u95u95(X1,X2)) -> ACTIVATE(X2)
 ACTIVATE(nu95u95and(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95and(X1,X2)) -> AND(activate(X1),X2)
 ACTIVATE(nu95u95isPal(X)) -> ISPAL(X)
 ACTIVATE(nu95u95isPalListKind(X)) -> ISPALLISTKIND(X)
 AND(tt,X) -> ACTIVATE(X)
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> ACTIVATE(I)
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> ACTIVATE(P)
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> AND(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> AND(isQid(activate(I)),nu95u95isPalListKind(activate(I)))
 ISNEPAL(V) -> ACTIVATE(V)
 ISNEPAL(V) -> ISPALLISTKIND(activate(V))
 ISPAL(V) -> U71Sharp(isPalListKind(activate(V)),activate(V))
 ISPAL(V) -> ACTIVATE(V)
 ISPAL(V) -> ISPALLISTKIND(activate(V))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V1)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V2)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> AND(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ISPALLISTKIND(activate(V1))
-> Rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
-> Usable rules:
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 0
[U12](X) = 0
[U21](X1,X2,X3) = 0
[U22](X1,X2) = 0
[U23](X) = 0
[U31](X1,X2) = 0
[U32](X) = 0
[U41](X1,X2,X3) = 0
[U42](X1,X2) = 0
[U43](X) = 0
[U51](X1,X2,X3) = 0
[U52](X1,X2) = 0
[U53](X) = 0
[U61](X1,X2) = X1 + 1
[U62](X) = 2
[U71](X1,X2) = X1
[U72](X) = 2
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 1
[activate](X) = X
[and](X1,X2) = X1 + X2 + 2
[e] = 2
[i] = 2
[isList](X) = 0
[isNeList](X) = 0
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 2.X + 1
[isQid](X) = 2.X
[nil] = 2
[o] = 2
[u] = 2
[fSNonEmpty] = 0
[nu95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[nu95u95a] = 1
[nu95u95and](X1,X2) = X1 + X2 + 2
[nu95u95e] = 2
[nu95u95i] = 2
[nu95u95isPal](X) = 2.X + 2
[nu95u95isPalListKind](X) = 2.X + 1
[nu95u95nil] = 2
[nu95u95o] = 2
[nu95u95u] = 2
[tt] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 2.X2 + 2
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[A] = 0
[ACTIVATE](X) = X + 1
[AND](X1,X2) = X2 + 2
[E] = 0
[I] = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 2.X + 1
[ISPAL](X) = 2.X + 2
[ISPALLISTKIND](X) = 2.X + 1
[ISQID](X) = 0
[NIL] = 0
[O] = 0
[U] = 0

Problem 1.2: 

SCC Processor:
-> Pairs:
 ACTIVATE(nu95u95u95u95(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95u95u95(X1,X2)) -> ACTIVATE(X2)
 ACTIVATE(nu95u95and(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95and(X1,X2)) -> AND(activate(X1),X2)
 ACTIVATE(nu95u95isPal(X)) -> ISPAL(X)
 ACTIVATE(nu95u95isPalListKind(X)) -> ISPALLISTKIND(X)
 AND(tt,X) -> ACTIVATE(X)
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> ACTIVATE(I)
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> ACTIVATE(P)
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> AND(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 ISNEPAL(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> AND(isQid(activate(I)),nu95u95isPalListKind(activate(I)))
 ISNEPAL(V) -> ACTIVATE(V)
 ISNEPAL(V) -> ISPALLISTKIND(activate(V))
 ISPAL(V) -> U71Sharp(isPalListKind(activate(V)),activate(V))
 ISPAL(V) -> ACTIVATE(V)
 ISPAL(V) -> ISPALLISTKIND(activate(V))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V1)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V2)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> AND(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ISPALLISTKIND(activate(V1))
-> Rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVATE(nu95u95u95u95(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95u95u95(X1,X2)) -> ACTIVATE(X2)
 ACTIVATE(nu95u95and(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95and(X1,X2)) -> AND(activate(X1),X2)
 ACTIVATE(nu95u95isPal(X)) -> ISPAL(X)
 ACTIVATE(nu95u95isPalListKind(X)) -> ISPALLISTKIND(X)
 AND(tt,X) -> ACTIVATE(X)
 ISPAL(V) -> ACTIVATE(V)
 ISPAL(V) -> ISPALLISTKIND(activate(V))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V1)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V2)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> AND(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ISPALLISTKIND(activate(V1))
->->-> Rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u

Problem 1.2: 

Reduction Pair Processor:
-> Pairs:
 ACTIVATE(nu95u95u95u95(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95u95u95(X1,X2)) -> ACTIVATE(X2)
 ACTIVATE(nu95u95and(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95and(X1,X2)) -> AND(activate(X1),X2)
 ACTIVATE(nu95u95isPal(X)) -> ISPAL(X)
 ACTIVATE(nu95u95isPalListKind(X)) -> ISPALLISTKIND(X)
 AND(tt,X) -> ACTIVATE(X)
 ISPAL(V) -> ACTIVATE(V)
 ISPAL(V) -> ISPALLISTKIND(activate(V))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V1)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V2)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> AND(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ISPALLISTKIND(activate(V1))
-> Rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
-> Usable rules:
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 0
[U12](X) = 0
[U21](X1,X2,X3) = 0
[U22](X1,X2) = 0
[U23](X) = 0
[U31](X1,X2) = 0
[U32](X) = 0
[U41](X1,X2,X3) = 0
[U42](X1,X2) = 0
[U43](X) = 0
[U51](X1,X2,X3) = 0
[U52](X1,X2) = 0
[U53](X) = 0
[U61](X1,X2) = 2.X2 + 2
[U62](X) = 0
[U71](X1,X2) = X1
[U72](X) = 0
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 2
[activate](X) = X
[and](X1,X2) = 2.X1 + X2 + 2
[e] = 2
[i] = 0
[isList](X) = 0
[isNeList](X) = 0
[isNePal](X) = 2.X + 2
[isPal](X) = X
[isPalListKind](X) = X
[isQid](X) = X
[nil] = 1
[o] = 2
[u] = 2
[fSNonEmpty] = 0
[nu95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[nu95u95a] = 2
[nu95u95and](X1,X2) = 2.X1 + X2 + 2
[nu95u95e] = 2
[nu95u95i] = 0
[nu95u95isPal](X) = X
[nu95u95isPalListKind](X) = X
[nu95u95nil] = 1
[nu95u95o] = 2
[nu95u95u] = 2
[tt] = 0
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[A] = 0
[ACTIVATE](X) = 2.X + 2
[AND](X1,X2) = 2.X1 + 2.X2 + 2
[E] = 0
[I] = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 2.X + 2
[ISPALLISTKIND](X) = 2.X + 2
[ISQID](X) = 0
[NIL] = 0
[O] = 0
[U] = 0

Problem 1.2: 

SCC Processor:
-> Pairs:
 ACTIVATE(nu95u95u95u95(X1,X2)) -> ACTIVATE(X2)
 ACTIVATE(nu95u95and(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95and(X1,X2)) -> AND(activate(X1),X2)
 ACTIVATE(nu95u95isPal(X)) -> ISPAL(X)
 ACTIVATE(nu95u95isPalListKind(X)) -> ISPALLISTKIND(X)
 AND(tt,X) -> ACTIVATE(X)
 ISPAL(V) -> ACTIVATE(V)
 ISPAL(V) -> ISPALLISTKIND(activate(V))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V1)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V2)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> AND(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ISPALLISTKIND(activate(V1))
-> Rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVATE(nu95u95u95u95(X1,X2)) -> ACTIVATE(X2)
 ACTIVATE(nu95u95and(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95and(X1,X2)) -> AND(activate(X1),X2)
 ACTIVATE(nu95u95isPal(X)) -> ISPAL(X)
 ACTIVATE(nu95u95isPalListKind(X)) -> ISPALLISTKIND(X)
 AND(tt,X) -> ACTIVATE(X)
 ISPAL(V) -> ACTIVATE(V)
 ISPAL(V) -> ISPALLISTKIND(activate(V))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V1)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V2)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> AND(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ISPALLISTKIND(activate(V1))
->->-> Rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u

Problem 1.2: 

Reduction Pair Processor:
-> Pairs:
 ACTIVATE(nu95u95u95u95(X1,X2)) -> ACTIVATE(X2)
 ACTIVATE(nu95u95and(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95and(X1,X2)) -> AND(activate(X1),X2)
 ACTIVATE(nu95u95isPal(X)) -> ISPAL(X)
 ACTIVATE(nu95u95isPalListKind(X)) -> ISPALLISTKIND(X)
 AND(tt,X) -> ACTIVATE(X)
 ISPAL(V) -> ACTIVATE(V)
 ISPAL(V) -> ISPALLISTKIND(activate(V))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V1)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V2)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> AND(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ISPALLISTKIND(activate(V1))
-> Rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
-> Usable rules:
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 0
[U12](X) = 0
[U21](X1,X2,X3) = 0
[U22](X1,X2) = 0
[U23](X) = 0
[U31](X1,X2) = 0
[U32](X) = 0
[U41](X1,X2,X3) = 0
[U42](X1,X2) = 0
[U43](X) = 0
[U51](X1,X2,X3) = 0
[U52](X1,X2) = 0
[U53](X) = 0
[U61](X1,X2) = 2.X2
[U62](X) = 2.X
[U71](X1,X2) = 2.X2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 2
[activate](X) = X
[and](X1,X2) = X1 + X2 + 1
[e] = 2
[i] = 2
[isList](X) = 0
[isNeList](X) = 0
[isNePal](X) = 2.X
[isPal](X) = 2.X + 1
[isPalListKind](X) = 2.X + 2
[isQid](X) = X
[nil] = 2
[o] = 2
[u] = 2
[fSNonEmpty] = 0
[nu95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[nu95u95a] = 2
[nu95u95and](X1,X2) = X1 + X2 + 1
[nu95u95e] = 2
[nu95u95i] = 2
[nu95u95isPal](X) = 2.X + 1
[nu95u95isPalListKind](X) = 2.X + 2
[nu95u95nil] = 2
[nu95u95o] = 2
[nu95u95u] = 2
[tt] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[A] = 0
[ACTIVATE](X) = X + 2
[AND](X1,X2) = X1 + X2 + 2
[E] = 0
[I] = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 2.X + 2
[ISPALLISTKIND](X) = 2.X + 2
[ISQID](X) = 0
[NIL] = 0
[O] = 0
[U] = 0

Problem 1.2: 

SCC Processor:
-> Pairs:
 ACTIVATE(nu95u95and(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95and(X1,X2)) -> AND(activate(X1),X2)
 ACTIVATE(nu95u95isPal(X)) -> ISPAL(X)
 ACTIVATE(nu95u95isPalListKind(X)) -> ISPALLISTKIND(X)
 AND(tt,X) -> ACTIVATE(X)
 ISPAL(V) -> ACTIVATE(V)
 ISPAL(V) -> ISPALLISTKIND(activate(V))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V1)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V2)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> AND(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ISPALLISTKIND(activate(V1))
-> Rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVATE(nu95u95and(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95and(X1,X2)) -> AND(activate(X1),X2)
 ACTIVATE(nu95u95isPal(X)) -> ISPAL(X)
 ACTIVATE(nu95u95isPalListKind(X)) -> ISPALLISTKIND(X)
 AND(tt,X) -> ACTIVATE(X)
 ISPAL(V) -> ACTIVATE(V)
 ISPAL(V) -> ISPALLISTKIND(activate(V))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V1)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V2)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> AND(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ISPALLISTKIND(activate(V1))
->->-> Rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u

Problem 1.2: 

Reduction Pair Processor:
-> Pairs:
 ACTIVATE(nu95u95and(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95and(X1,X2)) -> AND(activate(X1),X2)
 ACTIVATE(nu95u95isPal(X)) -> ISPAL(X)
 ACTIVATE(nu95u95isPalListKind(X)) -> ISPALLISTKIND(X)
 AND(tt,X) -> ACTIVATE(X)
 ISPAL(V) -> ACTIVATE(V)
 ISPAL(V) -> ISPALLISTKIND(activate(V))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V1)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V2)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> AND(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ISPALLISTKIND(activate(V1))
-> Rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
-> Usable rules:
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 0
[U12](X) = 0
[U21](X1,X2,X3) = 0
[U22](X1,X2) = 0
[U23](X) = 0
[U31](X1,X2) = 0
[U32](X) = 0
[U41](X1,X2,X3) = 0
[U42](X1,X2) = 0
[U43](X) = 0
[U51](X1,X2,X3) = 0
[U52](X1,X2) = 0
[U53](X) = 0
[U61](X1,X2) = 2
[U62](X) = 2
[U71](X1,X2) = X2 + 2
[U72](X) = 2
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 2
[activate](X) = X
[and](X1,X2) = X1 + X2 + 2
[e] = 2
[i] = 2
[isList](X) = 0
[isNeList](X) = 0
[isNePal](X) = 2.X + 2
[isPal](X) = X + 2
[isPalListKind](X) = X
[isQid](X) = 2
[nil] = 2
[o] = 2
[u] = 2
[fSNonEmpty] = 0
[nu95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[nu95u95a] = 2
[nu95u95and](X1,X2) = X1 + X2 + 2
[nu95u95e] = 2
[nu95u95i] = 2
[nu95u95isPal](X) = X + 2
[nu95u95isPalListKind](X) = X
[nu95u95nil] = 2
[nu95u95o] = 2
[nu95u95u] = 2
[tt] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[A] = 0
[ACTIVATE](X) = 2.X + 2
[AND](X1,X2) = 2.X2 + 2
[E] = 0
[I] = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 2.X + 2
[ISPALLISTKIND](X) = 2.X + 2
[ISQID](X) = 0
[NIL] = 0
[O] = 0
[U] = 0

Problem 1.2: 

SCC Processor:
-> Pairs:
 ACTIVATE(nu95u95and(X1,X2)) -> AND(activate(X1),X2)
 ACTIVATE(nu95u95isPal(X)) -> ISPAL(X)
 ACTIVATE(nu95u95isPalListKind(X)) -> ISPALLISTKIND(X)
 AND(tt,X) -> ACTIVATE(X)
 ISPAL(V) -> ACTIVATE(V)
 ISPAL(V) -> ISPALLISTKIND(activate(V))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V1)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V2)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> AND(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ISPALLISTKIND(activate(V1))
-> Rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVATE(nu95u95and(X1,X2)) -> AND(activate(X1),X2)
 ACTIVATE(nu95u95isPal(X)) -> ISPAL(X)
 ACTIVATE(nu95u95isPalListKind(X)) -> ISPALLISTKIND(X)
 AND(tt,X) -> ACTIVATE(X)
 ISPAL(V) -> ACTIVATE(V)
 ISPAL(V) -> ISPALLISTKIND(activate(V))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V1)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V2)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> AND(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ISPALLISTKIND(activate(V1))
->->-> Rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u

Problem 1.2: 

Reduction Pair Processor:
-> Pairs:
 ACTIVATE(nu95u95and(X1,X2)) -> AND(activate(X1),X2)
 ACTIVATE(nu95u95isPal(X)) -> ISPAL(X)
 ACTIVATE(nu95u95isPalListKind(X)) -> ISPALLISTKIND(X)
 AND(tt,X) -> ACTIVATE(X)
 ISPAL(V) -> ACTIVATE(V)
 ISPAL(V) -> ISPALLISTKIND(activate(V))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V1)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V2)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> AND(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ISPALLISTKIND(activate(V1))
-> Rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
-> Usable rules:
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 0
[U12](X) = 0
[U21](X1,X2,X3) = 0
[U22](X1,X2) = 0
[U23](X) = 0
[U31](X1,X2) = 0
[U32](X) = 0
[U41](X1,X2,X3) = 0
[U42](X1,X2) = 0
[U43](X) = 0
[U51](X1,X2,X3) = 0
[U52](X1,X2) = 0
[U53](X) = 0
[U61](X1,X2) = X1
[U62](X) = 2
[U71](X1,X2) = X2 + 2
[U72](X) = 2
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 1
[activate](X) = X
[and](X1,X2) = X2 + 2
[e] = 0
[i] = 2
[isList](X) = 0
[isNeList](X) = 0
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 2.X + 2
[isQid](X) = 2.X + 2
[nil] = 2
[o] = 2
[u] = 2
[fSNonEmpty] = 0
[nu95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[nu95u95a] = 1
[nu95u95and](X1,X2) = X2 + 2
[nu95u95e] = 0
[nu95u95i] = 2
[nu95u95isPal](X) = 2.X + 2
[nu95u95isPalListKind](X) = 2.X + 2
[nu95u95nil] = 2
[nu95u95o] = 2
[nu95u95u] = 2
[tt] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[A] = 0
[ACTIVATE](X) = X + 1
[AND](X1,X2) = X2 + 2
[E] = 0
[I] = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 2.X + 2
[ISPALLISTKIND](X) = 2.X + 2
[ISQID](X) = 0
[NIL] = 0
[O] = 0
[U] = 0

Problem 1.2: 

SCC Processor:
-> Pairs:
 ACTIVATE(nu95u95isPal(X)) -> ISPAL(X)
 ACTIVATE(nu95u95isPalListKind(X)) -> ISPALLISTKIND(X)
 AND(tt,X) -> ACTIVATE(X)
 ISPAL(V) -> ACTIVATE(V)
 ISPAL(V) -> ISPALLISTKIND(activate(V))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V1)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V2)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> AND(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ISPALLISTKIND(activate(V1))
-> Rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVATE(nu95u95isPal(X)) -> ISPAL(X)
 ACTIVATE(nu95u95isPalListKind(X)) -> ISPALLISTKIND(X)
 AND(tt,X) -> ACTIVATE(X)
 ISPAL(V) -> ACTIVATE(V)
 ISPAL(V) -> ISPALLISTKIND(activate(V))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V1)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V2)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> AND(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ISPALLISTKIND(activate(V1))
->->-> Rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u

Problem 1.2: 

Reduction Pair Processor:
-> Pairs:
 ACTIVATE(nu95u95isPal(X)) -> ISPAL(X)
 ACTIVATE(nu95u95isPalListKind(X)) -> ISPALLISTKIND(X)
 AND(tt,X) -> ACTIVATE(X)
 ISPAL(V) -> ACTIVATE(V)
 ISPAL(V) -> ISPALLISTKIND(activate(V))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V1)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V2)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> AND(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ISPALLISTKIND(activate(V1))
-> Rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
-> Usable rules:
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 0
[U12](X) = 0
[U21](X1,X2,X3) = 0
[U22](X1,X2) = 0
[U23](X) = 0
[U31](X1,X2) = 0
[U32](X) = 0
[U41](X1,X2,X3) = 0
[U42](X1,X2) = 0
[U43](X) = 0
[U51](X1,X2,X3) = 0
[U52](X1,X2) = 0
[U53](X) = 0
[U61](X1,X2) = X2 + 1
[U62](X) = 1
[U71](X1,X2) = 2.X2 + 1
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 1
[activate](X) = X
[and](X1,X2) = X1 + X2 + 2
[e] = 1
[i] = 2
[isList](X) = 0
[isNeList](X) = 0
[isNePal](X) = 2.X + 1
[isPal](X) = 2.X + 1
[isPalListKind](X) = 2.X + 1
[isQid](X) = 2.X
[nil] = 2
[o] = 2
[u] = 2
[fSNonEmpty] = 0
[nu95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[nu95u95a] = 1
[nu95u95and](X1,X2) = X1 + X2 + 2
[nu95u95e] = 1
[nu95u95i] = 2
[nu95u95isPal](X) = 2.X + 1
[nu95u95isPalListKind](X) = 2.X + 1
[nu95u95nil] = 2
[nu95u95o] = 2
[nu95u95u] = 2
[tt] = 0
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[A] = 0
[ACTIVATE](X) = X + 2
[AND](X1,X2) = 2.X1 + X2 + 2
[E] = 0
[I] = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 2.X + 2
[ISPALLISTKIND](X) = 2.X + 2
[ISQID](X) = 0
[NIL] = 0
[O] = 0
[U] = 0

Problem 1.2: 

SCC Processor:
-> Pairs:
 ACTIVATE(nu95u95isPalListKind(X)) -> ISPALLISTKIND(X)
 AND(tt,X) -> ACTIVATE(X)
 ISPAL(V) -> ACTIVATE(V)
 ISPAL(V) -> ISPALLISTKIND(activate(V))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V1)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V2)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> AND(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ISPALLISTKIND(activate(V1))
-> Rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVATE(nu95u95isPalListKind(X)) -> ISPALLISTKIND(X)
 AND(tt,X) -> ACTIVATE(X)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V1)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V2)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> AND(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ISPALLISTKIND(activate(V1))
->->-> Rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u

Problem 1.2: 

Reduction Pair Processor:
-> Pairs:
 ACTIVATE(nu95u95isPalListKind(X)) -> ISPALLISTKIND(X)
 AND(tt,X) -> ACTIVATE(X)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V1)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V2)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> AND(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ISPALLISTKIND(activate(V1))
-> Rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
-> Usable rules:
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 0
[U12](X) = 0
[U21](X1,X2,X3) = 0
[U22](X1,X2) = 0
[U23](X) = 0
[U31](X1,X2) = 0
[U32](X) = 0
[U41](X1,X2,X3) = 0
[U42](X1,X2) = 0
[U43](X) = 0
[U51](X1,X2,X3) = 0
[U52](X1,X2) = 0
[U53](X) = 0
[U61](X1,X2) = 2.X2 + 2
[U62](X) = X
[U71](X1,X2) = 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 2
[activate](X) = X
[and](X1,X2) = X2 + 1
[e] = 2
[i] = 2
[isList](X) = 0
[isNeList](X) = 0
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 2.X
[isQid](X) = 2.X + 2
[nil] = 2
[o] = 2
[u] = 2
[fSNonEmpty] = 0
[nu95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[nu95u95a] = 2
[nu95u95and](X1,X2) = X2 + 1
[nu95u95e] = 2
[nu95u95i] = 2
[nu95u95isPal](X) = 2.X + 2
[nu95u95isPalListKind](X) = 2.X
[nu95u95nil] = 2
[nu95u95o] = 2
[nu95u95u] = 2
[tt] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[A] = 0
[ACTIVATE](X) = X + 2
[AND](X1,X2) = 2.X1 + X2 + 2
[E] = 0
[I] = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 2.X + 1
[ISQID](X) = 0
[NIL] = 0
[O] = 0
[U] = 0

Problem 1.2: 

SCC Processor:
-> Pairs:
 AND(tt,X) -> ACTIVATE(X)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V1)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ACTIVATE(V2)
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> AND(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ISPALLISTKIND(activate(V1))
-> Rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ISPALLISTKIND(activate(V1))
->->-> Rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u

Problem 1.2: 

Reduction Pair Processor:
-> Pairs:
 ISPALLISTKIND(nu95u95u95u95(V1,V2)) -> ISPALLISTKIND(activate(V1))
-> Rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
-> Usable rules:
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 0
[U12](X) = 0
[U21](X1,X2,X3) = 0
[U22](X1,X2) = 0
[U23](X) = 0
[U31](X1,X2) = 0
[U32](X) = 0
[U41](X1,X2,X3) = 0
[U42](X1,X2) = 0
[U43](X) = 0
[U51](X1,X2,X3) = 0
[U52](X1,X2) = 0
[U53](X) = 0
[U61](X1,X2) = X1 + 2.X2
[U62](X) = 2.X + 2
[U71](X1,X2) = X1 + 2.X2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 2
[activate](X) = X
[and](X1,X2) = X2
[e] = 2
[i] = 2
[isList](X) = 0
[isNeList](X) = 0
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 2
[isQid](X) = X
[nil] = 0
[o] = 2
[u] = 2
[fSNonEmpty] = 0
[nu95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[nu95u95a] = 2
[nu95u95and](X1,X2) = X2
[nu95u95e] = 2
[nu95u95i] = 2
[nu95u95isPal](X) = 2.X + 2
[nu95u95isPalListKind](X) = 2
[nu95u95nil] = 0
[nu95u95o] = 2
[nu95u95u] = 2
[tt] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[A] = 0
[ACTIVATE](X) = 0
[AND](X1,X2) = 0
[E] = 0
[I] = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 2.X
[ISQID](X) = 0
[NIL] = 0
[O] = 0
[U] = 0

Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Reduction Pair Processor:
-> Pairs:
 U11Sharp(tt,V) -> ISNELIST(activate(V))
 U21Sharp(tt,V1,V2) -> U22Sharp(isList(activate(V1)),activate(V2))
 U21Sharp(tt,V1,V2) -> ISLIST(activate(V1))
 U22Sharp(tt,V2) -> ISLIST(activate(V2))
 U41Sharp(tt,V1,V2) -> U42Sharp(isList(activate(V1)),activate(V2))
 U41Sharp(tt,V1,V2) -> ISLIST(activate(V1))
 U42Sharp(tt,V2) -> ISNELIST(activate(V2))
 U51Sharp(tt,V1,V2) -> U52Sharp(isNeList(activate(V1)),activate(V2))
 U51Sharp(tt,V1,V2) -> ISNELIST(activate(V1))
 U52Sharp(tt,V2) -> ISLIST(activate(V2))
 ISLIST(nu95u95u95u95(V1,V2)) -> U21Sharp(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 ISLIST(V) -> U11Sharp(isPalListKind(activate(V)),activate(V))
 ISNELIST(nu95u95u95u95(V1,V2)) -> U41Sharp(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 ISNELIST(nu95u95u95u95(V1,V2)) -> U51Sharp(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
-> Rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
-> Usable rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = X2 + 2
[U12](X) = 2
[U21](X1,X2,X3) = 2.X1 + X2 + X3
[U22](X1,X2) = X1 + X2 + 2
[U23](X) = X + 2
[U31](X1,X2) = 2
[U32](X) = 2
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = 2.X1 + X2 + 2
[U43](X) = 2
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 2
[U53](X) = 2.X
[U61](X1,X2) = X2 + 2
[U62](X) = 2
[U71](X1,X2) = 2.X2 + 2
[U72](X) = 2
[u95u95](X1,X2) = X1 + X2 + 2
[a] = 1
[activate](X) = X
[and](X1,X2) = X2
[e] = 2
[i] = 1
[isList](X) = X + 2
[isNeList](X) = 2.X + 2
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 2
[isQid](X) = 2
[nil] = 2
[o] = 2
[u] = 0
[fSNonEmpty] = 0
[nu95u95u95u95](X1,X2) = X1 + X2 + 2
[nu95u95a] = 1
[nu95u95and](X1,X2) = X2
[nu95u95e] = 2
[nu95u95i] = 1
[nu95u95isPal](X) = 2.X + 2
[nu95u95isPalListKind](X) = 2
[nu95u95nil] = 2
[nu95u95o] = 2
[nu95u95u] = 0
[tt] = 2
[U11Sharp](X1,X2) = X1 + 2.X2
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22Sharp](X1,X2) = 2.X1 + 2.X2 + 2
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 1
[U42Sharp](X1,X2) = 2.X1 + 2.X2
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 2.X2 + 2.X3 + 2
[U52Sharp](X1,X2) = X1 + 2.X2
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[A] = 0
[ACTIVATE](X) = 0
[AND](X1,X2) = 0
[E] = 0
[I] = 0
[ISLIST](X) = 2.X + 2
[ISNELIST](X) = 2.X + 1
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[NIL] = 0
[O] = 0
[U] = 0

Problem 1.3: 

SCC Processor:
-> Pairs:
 U21Sharp(tt,V1,V2) -> U22Sharp(isList(activate(V1)),activate(V2))
 U21Sharp(tt,V1,V2) -> ISLIST(activate(V1))
 U22Sharp(tt,V2) -> ISLIST(activate(V2))
 U41Sharp(tt,V1,V2) -> U42Sharp(isList(activate(V1)),activate(V2))
 U41Sharp(tt,V1,V2) -> ISLIST(activate(V1))
 U42Sharp(tt,V2) -> ISNELIST(activate(V2))
 U51Sharp(tt,V1,V2) -> U52Sharp(isNeList(activate(V1)),activate(V2))
 U51Sharp(tt,V1,V2) -> ISNELIST(activate(V1))
 U52Sharp(tt,V2) -> ISLIST(activate(V2))
 ISLIST(nu95u95u95u95(V1,V2)) -> U21Sharp(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 ISLIST(V) -> U11Sharp(isPalListKind(activate(V)),activate(V))
 ISNELIST(nu95u95u95u95(V1,V2)) -> U41Sharp(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 ISNELIST(nu95u95u95u95(V1,V2)) -> U51Sharp(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
-> Rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U21Sharp(tt,V1,V2) -> U22Sharp(isList(activate(V1)),activate(V2))
 U21Sharp(tt,V1,V2) -> ISLIST(activate(V1))
 U22Sharp(tt,V2) -> ISLIST(activate(V2))
 ISLIST(nu95u95u95u95(V1,V2)) -> U21Sharp(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
->->-> Rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->->Cycle:
->->-> Pairs:
 U41Sharp(tt,V1,V2) -> U42Sharp(isList(activate(V1)),activate(V2))
 U42Sharp(tt,V2) -> ISNELIST(activate(V2))
 U51Sharp(tt,V1,V2) -> ISNELIST(activate(V1))
 ISNELIST(nu95u95u95u95(V1,V2)) -> U41Sharp(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 ISNELIST(nu95u95u95u95(V1,V2)) -> U51Sharp(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
->->-> Rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u


The problem is decomposed in 2 subproblems.

Problem 1.3.1: 

Reduction Pair Processor:
-> Pairs:
 U21Sharp(tt,V1,V2) -> U22Sharp(isList(activate(V1)),activate(V2))
 U21Sharp(tt,V1,V2) -> ISLIST(activate(V1))
 U22Sharp(tt,V2) -> ISLIST(activate(V2))
 ISLIST(nu95u95u95u95(V1,V2)) -> U21Sharp(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
-> Rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
-> Usable rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 2.X2
[U12](X) = X
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3
[U22](X1,X2) = X1 + 2.X2 + 2
[U23](X) = X + 1
[U31](X1,X2) = 2.X2
[U32](X) = 2.X
[U41](X1,X2,X3) = X1 + X2 + 2.X3 + 2
[U42](X1,X2) = X2 + 2
[U43](X) = 2
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3
[U52](X1,X2) = X1 + 2.X2 + 2
[U53](X) = 2
[U61](X1,X2) = X2 + 1
[U62](X) = X + 1
[U71](X1,X2) = 2.X2 + 2
[U72](X) = 2.X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 2
[activate](X) = X
[and](X1,X2) = X2
[e] = 2
[i] = 2
[isList](X) = 2.X
[isNeList](X) = 2.X
[isNePal](X) = X + 1
[isPal](X) = 2.X + 2
[isPalListKind](X) = 2
[isQid](X) = X
[nil] = 2
[o] = 2
[u] = 2
[fSNonEmpty] = 0
[nu95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[nu95u95a] = 2
[nu95u95and](X1,X2) = X2
[nu95u95e] = 2
[nu95u95i] = 2
[nu95u95isPal](X) = 2.X + 2
[nu95u95isPalListKind](X) = 2
[nu95u95nil] = 2
[nu95u95o] = 2
[nu95u95u] = 2
[tt] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22Sharp](X1,X2) = X1 + 2.X2 + 2
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[A] = 0
[ACTIVATE](X) = 0
[AND](X1,X2) = 0
[E] = 0
[I] = 0
[ISLIST](X) = 2.X + 2
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[NIL] = 0
[O] = 0
[U] = 0

Problem 1.3.1: 

SCC Processor:
-> Pairs:
 U21Sharp(tt,V1,V2) -> ISLIST(activate(V1))
 U22Sharp(tt,V2) -> ISLIST(activate(V2))
 ISLIST(nu95u95u95u95(V1,V2)) -> U21Sharp(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
-> Rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U21Sharp(tt,V1,V2) -> ISLIST(activate(V1))
 ISLIST(nu95u95u95u95(V1,V2)) -> U21Sharp(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
->->-> Rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u

Problem 1.3.1: 

Reduction Pair Processor:
-> Pairs:
 U21Sharp(tt,V1,V2) -> ISLIST(activate(V1))
 ISLIST(nu95u95u95u95(V1,V2)) -> U21Sharp(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
-> Rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
-> Usable rules:
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 0
[U12](X) = 0
[U21](X1,X2,X3) = 0
[U22](X1,X2) = 0
[U23](X) = 0
[U31](X1,X2) = 0
[U32](X) = 0
[U41](X1,X2,X3) = 0
[U42](X1,X2) = 0
[U43](X) = 0
[U51](X1,X2,X3) = 0
[U52](X1,X2) = 0
[U53](X) = 0
[U61](X1,X2) = 2.X2 + 2
[U62](X) = X
[U71](X1,X2) = 2
[U72](X) = 2
[u95u95](X1,X2) = X1 + X2 + 2
[a] = 2
[activate](X) = X
[and](X1,X2) = X2 + 2
[e] = 0
[i] = 2
[isList](X) = 0
[isNeList](X) = 0
[isNePal](X) = 2.X + 2
[isPal](X) = 2
[isPalListKind](X) = 2.X + 2
[isQid](X) = 2.X + 2
[nil] = 2
[o] = 2
[u] = 2
[fSNonEmpty] = 0
[nu95u95u95u95](X1,X2) = X1 + X2 + 2
[nu95u95a] = 2
[nu95u95and](X1,X2) = X2 + 2
[nu95u95e] = 0
[nu95u95i] = 2
[nu95u95isPal](X) = 2
[nu95u95isPalListKind](X) = 2.X + 2
[nu95u95nil] = 2
[nu95u95o] = 2
[nu95u95u] = 2
[tt] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 2.X2 + 2.X3 + 2
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[A] = 0
[ACTIVATE](X) = 0
[AND](X1,X2) = 0
[E] = 0
[I] = 0
[ISLIST](X) = 2.X + 1
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[NIL] = 0
[O] = 0
[U] = 0

Problem 1.3.1: 

SCC Processor:
-> Pairs:
 ISLIST(nu95u95u95u95(V1,V2)) -> U21Sharp(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
-> Rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3.2: 

Reduction Pair Processor:
-> Pairs:
 U41Sharp(tt,V1,V2) -> U42Sharp(isList(activate(V1)),activate(V2))
 U42Sharp(tt,V2) -> ISNELIST(activate(V2))
 U51Sharp(tt,V1,V2) -> ISNELIST(activate(V1))
 ISNELIST(nu95u95u95u95(V1,V2)) -> U41Sharp(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 ISNELIST(nu95u95u95u95(V1,V2)) -> U51Sharp(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
-> Rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
-> Usable rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = X1
[U12](X) = 2
[U21](X1,X2,X3) = X1 + 1
[U22](X1,X2) = 2
[U23](X) = 2
[U31](X1,X2) = X1 + X2
[U32](X) = 2
[U41](X1,X2,X3) = X1 + 2.X2 + X3 + 2
[U42](X1,X2) = X1 + X2 + 2
[U43](X) = 2
[U51](X1,X2,X3) = X1 + 2.X2 + X3 + 2
[U52](X1,X2) = X1 + X2 + 2
[U53](X) = X + 2
[U61](X1,X2) = X1
[U62](X) = 2
[U71](X1,X2) = 2.X2 + 2
[U72](X) = 2
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 2
[activate](X) = X
[and](X1,X2) = X2 + 1
[e] = 2
[i] = 2
[isList](X) = X + 2
[isNeList](X) = 2.X + 2
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = X + 2
[isQid](X) = 2.X + 2
[nil] = 2
[o] = 2
[u] = 2
[fSNonEmpty] = 0
[nu95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[nu95u95a] = 2
[nu95u95and](X1,X2) = X2 + 1
[nu95u95e] = 2
[nu95u95i] = 2
[nu95u95isPal](X) = 2.X + 2
[nu95u95isPalListKind](X) = X + 2
[nu95u95nil] = 2
[nu95u95o] = 2
[nu95u95u] = 2
[tt] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = X2 + 2.X3 + 2
[U42Sharp](X1,X2) = 2.X2 + 1
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 2.X2 + 2.X3 + 2
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[A] = 0
[ACTIVATE](X) = 0
[AND](X1,X2) = 0
[E] = 0
[I] = 0
[ISLIST](X) = 0
[ISNELIST](X) = 2.X + 1
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[NIL] = 0
[O] = 0
[U] = 0

Problem 1.3.2: 

SCC Processor:
-> Pairs:
 U42Sharp(tt,V2) -> ISNELIST(activate(V2))
 U51Sharp(tt,V1,V2) -> ISNELIST(activate(V1))
 ISNELIST(nu95u95u95u95(V1,V2)) -> U41Sharp(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 ISNELIST(nu95u95u95u95(V1,V2)) -> U51Sharp(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
-> Rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U51Sharp(tt,V1,V2) -> ISNELIST(activate(V1))
 ISNELIST(nu95u95u95u95(V1,V2)) -> U51Sharp(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
->->-> Rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u

Problem 1.3.2: 

Reduction Pair Processor:
-> Pairs:
 U51Sharp(tt,V1,V2) -> ISNELIST(activate(V1))
 ISNELIST(nu95u95u95u95(V1,V2)) -> U51Sharp(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
-> Rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
-> Usable rules:
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 0
[U12](X) = 0
[U21](X1,X2,X3) = 0
[U22](X1,X2) = 0
[U23](X) = 0
[U31](X1,X2) = 0
[U32](X) = 0
[U41](X1,X2,X3) = 0
[U42](X1,X2) = 0
[U43](X) = 0
[U51](X1,X2,X3) = 0
[U52](X1,X2) = 0
[U53](X) = 0
[U61](X1,X2) = 2.X2 + 2
[U62](X) = X
[U71](X1,X2) = 2
[U72](X) = 2
[u95u95](X1,X2) = X1 + X2 + 2
[a] = 2
[activate](X) = X
[and](X1,X2) = X2 + 2
[e] = 0
[i] = 2
[isList](X) = 0
[isNeList](X) = 0
[isNePal](X) = 2.X + 2
[isPal](X) = 2
[isPalListKind](X) = 2.X + 2
[isQid](X) = 2.X + 2
[nil] = 2
[o] = 2
[u] = 2
[fSNonEmpty] = 0
[nu95u95u95u95](X1,X2) = X1 + X2 + 2
[nu95u95a] = 2
[nu95u95and](X1,X2) = X2 + 2
[nu95u95e] = 0
[nu95u95i] = 2
[nu95u95isPal](X) = 2
[nu95u95isPalListKind](X) = 2.X + 2
[nu95u95nil] = 2
[nu95u95o] = 2
[nu95u95u] = 2
[tt] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 2.X2 + 2.X3 + 2
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[A] = 0
[ACTIVATE](X) = 0
[AND](X1,X2) = 0
[E] = 0
[I] = 0
[ISLIST](X) = 0
[ISNELIST](X) = 2.X + 1
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[NIL] = 0
[O] = 0
[U] = 0

Problem 1.3.2: 

SCC Processor:
-> Pairs:
 ISNELIST(nu95u95u95u95(V1,V2)) -> U51Sharp(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
-> Rules:
 U11(tt,V) -> U12(isNeList(activate(V)))
 U12(tt) -> tt
 U21(tt,V1,V2) -> U22(isList(activate(V1)),activate(V2))
 U22(tt,V2) -> U23(isList(activate(V2)))
 U23(tt) -> tt
 U31(tt,V) -> U32(isQid(activate(V)))
 U32(tt) -> tt
 U41(tt,V1,V2) -> U42(isList(activate(V1)),activate(V2))
 U42(tt,V2) -> U43(isNeList(activate(V2)))
 U43(tt) -> tt
 U51(tt,V1,V2) -> U52(isNeList(activate(V1)),activate(V2))
 U52(tt,V2) -> U53(isList(activate(V2)))
 U53(tt) -> tt
 U61(tt,V) -> U62(isQid(activate(V)))
 U62(tt) -> tt
 U71(tt,V) -> U72(isNePal(activate(V)))
 U72(tt) -> tt
 u95u95(u95u95(X,Y),Z) -> u95u95(X,u95u95(Y,Z))
 u95u95(nil,X) -> X
 u95u95(X,nil) -> X
 u95u95(X1,X2) -> nu95u95u95u95(X1,X2)
 a -> nu95u95a
 activate(nu95u95u95u95(X1,X2)) -> u95u95(activate(X1),activate(X2))
 activate(nu95u95a) -> a
 activate(nu95u95and(X1,X2)) -> and(activate(X1),X2)
 activate(nu95u95e) -> e
 activate(nu95u95i) -> i
 activate(nu95u95isPal(X)) -> isPal(X)
 activate(nu95u95isPalListKind(X)) -> isPalListKind(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95o) -> o
 activate(nu95u95u) -> u
 activate(X) -> X
 and(tt,X) -> activate(X)
 and(X1,X2) -> nu95u95and(X1,X2)
 e -> nu95u95e
 i -> nu95u95i
 isList(nu95u95u95u95(V1,V2)) -> U21(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isList(nu95u95nil) -> tt
 isList(V) -> U11(isPalListKind(activate(V)),activate(V))
 isNeList(nu95u95u95u95(V1,V2)) -> U41(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(nu95u95u95u95(V1,V2)) -> U51(and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2))),activate(V1),activate(V2))
 isNeList(V) -> U31(isPalListKind(activate(V)),activate(V))
 isNePal(nu95u95u95u95(I,nu95u95u95u95(P,I))) -> and(and(isQid(activate(I)),nu95u95isPalListKind(activate(I))),nu95u95and(nu95u95isPal(activate(P)),nu95u95isPalListKind(activate(P))))
 isNePal(V) -> U61(isPalListKind(activate(V)),activate(V))
 isPal(nu95u95nil) -> tt
 isPal(V) -> U71(isPalListKind(activate(V)),activate(V))
 isPal(X) -> nu95u95isPal(X)
 isPalListKind(nu95u95u95u95(V1,V2)) -> and(isPalListKind(activate(V1)),nu95u95isPalListKind(activate(V2)))
 isPalListKind(nu95u95a) -> tt
 isPalListKind(nu95u95e) -> tt
 isPalListKind(nu95u95i) -> tt
 isPalListKind(nu95u95nil) -> tt
 isPalListKind(nu95u95o) -> tt
 isPalListKind(nu95u95u) -> tt
 isPalListKind(X) -> nu95u95isPalListKind(X)
 isQid(nu95u95a) -> tt
 isQid(nu95u95e) -> tt
 isQid(nu95u95i) -> tt
 isQid(nu95u95o) -> tt
 isQid(nu95u95u) -> tt
 nil -> nu95u95nil
 o -> nu95u95o
 u -> nu95u95u
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
