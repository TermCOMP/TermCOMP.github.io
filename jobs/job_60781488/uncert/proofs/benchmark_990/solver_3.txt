YES

Problem 1: 

(VAR vu95NonEmpty N X X1 X2 Y Z)
(RULES
activate(nu95u95first(X1,X2)) -> first(X1,X2)
activate(nu95u95terms(X)) -> terms(X)
activate(X) -> X
add(num0,X) -> X
add(s(X),Y) -> s(add(X,Y))
dbl(num0) -> num0
dbl(s(X)) -> s(s(dbl(X)))
first(num0,X) -> nil
first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
first(X1,X2) -> nu95u95first(X1,X2)
sqr(num0) -> num0
sqr(s(X)) -> s(add(sqr(X),dbl(X)))
terms(N) -> cons(recip(sqr(N)),nu95u95terms(s(N)))
terms(X) -> nu95u95terms(X)
)


Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 ACTIVATE(nu95u95first(X1,X2)) -> FIRST(X1,X2)
 ACTIVATE(nu95u95terms(X)) -> TERMS(X)
 ADD(s(X),Y) -> ADD(X,Y)
 DBL(s(X)) -> DBL(X)
 FIRST(s(X),cons(Y,Z)) -> ACTIVATE(Z)
 SQR(s(X)) -> ADD(sqr(X),dbl(X))
 SQR(s(X)) -> DBL(X)
 SQR(s(X)) -> SQR(X)
 TERMS(N) -> SQR(N)
-> Rules:
 activate(nu95u95first(X1,X2)) -> first(X1,X2)
 activate(nu95u95terms(X)) -> terms(X)
 activate(X) -> X
 add(num0,X) -> X
 add(s(X),Y) -> s(add(X,Y))
 dbl(num0) -> num0
 dbl(s(X)) -> s(s(dbl(X)))
 first(num0,X) -> nil
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(X1,X2) -> nu95u95first(X1,X2)
 sqr(num0) -> num0
 sqr(s(X)) -> s(add(sqr(X),dbl(X)))
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(s(N)))
 terms(X) -> nu95u95terms(X)

Problem 1: 

SCC Processor:
-> Pairs:
 ACTIVATE(nu95u95first(X1,X2)) -> FIRST(X1,X2)
 ACTIVATE(nu95u95terms(X)) -> TERMS(X)
 ADD(s(X),Y) -> ADD(X,Y)
 DBL(s(X)) -> DBL(X)
 FIRST(s(X),cons(Y,Z)) -> ACTIVATE(Z)
 SQR(s(X)) -> ADD(sqr(X),dbl(X))
 SQR(s(X)) -> DBL(X)
 SQR(s(X)) -> SQR(X)
 TERMS(N) -> SQR(N)
-> Rules:
 activate(nu95u95first(X1,X2)) -> first(X1,X2)
 activate(nu95u95terms(X)) -> terms(X)
 activate(X) -> X
 add(num0,X) -> X
 add(s(X),Y) -> s(add(X,Y))
 dbl(num0) -> num0
 dbl(s(X)) -> s(s(dbl(X)))
 first(num0,X) -> nil
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(X1,X2) -> nu95u95first(X1,X2)
 sqr(num0) -> num0
 sqr(s(X)) -> s(add(sqr(X),dbl(X)))
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(s(N)))
 terms(X) -> nu95u95terms(X)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 DBL(s(X)) -> DBL(X)
->->-> Rules:
 activate(nu95u95first(X1,X2)) -> first(X1,X2)
 activate(nu95u95terms(X)) -> terms(X)
 activate(X) -> X
 add(num0,X) -> X
 add(s(X),Y) -> s(add(X,Y))
 dbl(num0) -> num0
 dbl(s(X)) -> s(s(dbl(X)))
 first(num0,X) -> nil
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(X1,X2) -> nu95u95first(X1,X2)
 sqr(num0) -> num0
 sqr(s(X)) -> s(add(sqr(X),dbl(X)))
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(s(N)))
 terms(X) -> nu95u95terms(X)
->->Cycle:
->->-> Pairs:
 ADD(s(X),Y) -> ADD(X,Y)
->->-> Rules:
 activate(nu95u95first(X1,X2)) -> first(X1,X2)
 activate(nu95u95terms(X)) -> terms(X)
 activate(X) -> X
 add(num0,X) -> X
 add(s(X),Y) -> s(add(X,Y))
 dbl(num0) -> num0
 dbl(s(X)) -> s(s(dbl(X)))
 first(num0,X) -> nil
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(X1,X2) -> nu95u95first(X1,X2)
 sqr(num0) -> num0
 sqr(s(X)) -> s(add(sqr(X),dbl(X)))
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(s(N)))
 terms(X) -> nu95u95terms(X)
->->Cycle:
->->-> Pairs:
 SQR(s(X)) -> SQR(X)
->->-> Rules:
 activate(nu95u95first(X1,X2)) -> first(X1,X2)
 activate(nu95u95terms(X)) -> terms(X)
 activate(X) -> X
 add(num0,X) -> X
 add(s(X),Y) -> s(add(X,Y))
 dbl(num0) -> num0
 dbl(s(X)) -> s(s(dbl(X)))
 first(num0,X) -> nil
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(X1,X2) -> nu95u95first(X1,X2)
 sqr(num0) -> num0
 sqr(s(X)) -> s(add(sqr(X),dbl(X)))
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(s(N)))
 terms(X) -> nu95u95terms(X)
->->Cycle:
->->-> Pairs:
 ACTIVATE(nu95u95first(X1,X2)) -> FIRST(X1,X2)
 FIRST(s(X),cons(Y,Z)) -> ACTIVATE(Z)
->->-> Rules:
 activate(nu95u95first(X1,X2)) -> first(X1,X2)
 activate(nu95u95terms(X)) -> terms(X)
 activate(X) -> X
 add(num0,X) -> X
 add(s(X),Y) -> s(add(X,Y))
 dbl(num0) -> num0
 dbl(s(X)) -> s(s(dbl(X)))
 first(num0,X) -> nil
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(X1,X2) -> nu95u95first(X1,X2)
 sqr(num0) -> num0
 sqr(s(X)) -> s(add(sqr(X),dbl(X)))
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(s(N)))
 terms(X) -> nu95u95terms(X)


The problem is decomposed in 4 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 DBL(s(X)) -> DBL(X)
-> Rules:
 activate(nu95u95first(X1,X2)) -> first(X1,X2)
 activate(nu95u95terms(X)) -> terms(X)
 activate(X) -> X
 add(num0,X) -> X
 add(s(X),Y) -> s(add(X,Y))
 dbl(num0) -> num0
 dbl(s(X)) -> s(s(dbl(X)))
 first(num0,X) -> nil
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(X1,X2) -> nu95u95first(X1,X2)
 sqr(num0) -> num0
 sqr(s(X)) -> s(add(sqr(X),dbl(X)))
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(s(N)))
 terms(X) -> nu95u95terms(X)
->Projection:
 pi(DBL) = 1

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 activate(nu95u95first(X1,X2)) -> first(X1,X2)
 activate(nu95u95terms(X)) -> terms(X)
 activate(X) -> X
 add(num0,X) -> X
 add(s(X),Y) -> s(add(X,Y))
 dbl(num0) -> num0
 dbl(s(X)) -> s(s(dbl(X)))
 first(num0,X) -> nil
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(X1,X2) -> nu95u95first(X1,X2)
 sqr(num0) -> num0
 sqr(s(X)) -> s(add(sqr(X),dbl(X)))
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(s(N)))
 terms(X) -> nu95u95terms(X)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Subterm Processor:
-> Pairs:
 ADD(s(X),Y) -> ADD(X,Y)
-> Rules:
 activate(nu95u95first(X1,X2)) -> first(X1,X2)
 activate(nu95u95terms(X)) -> terms(X)
 activate(X) -> X
 add(num0,X) -> X
 add(s(X),Y) -> s(add(X,Y))
 dbl(num0) -> num0
 dbl(s(X)) -> s(s(dbl(X)))
 first(num0,X) -> nil
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(X1,X2) -> nu95u95first(X1,X2)
 sqr(num0) -> num0
 sqr(s(X)) -> s(add(sqr(X),dbl(X)))
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(s(N)))
 terms(X) -> nu95u95terms(X)
->Projection:
 pi(ADD) = 1

Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 activate(nu95u95first(X1,X2)) -> first(X1,X2)
 activate(nu95u95terms(X)) -> terms(X)
 activate(X) -> X
 add(num0,X) -> X
 add(s(X),Y) -> s(add(X,Y))
 dbl(num0) -> num0
 dbl(s(X)) -> s(s(dbl(X)))
 first(num0,X) -> nil
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(X1,X2) -> nu95u95first(X1,X2)
 sqr(num0) -> num0
 sqr(s(X)) -> s(add(sqr(X),dbl(X)))
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(s(N)))
 terms(X) -> nu95u95terms(X)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Subterm Processor:
-> Pairs:
 SQR(s(X)) -> SQR(X)
-> Rules:
 activate(nu95u95first(X1,X2)) -> first(X1,X2)
 activate(nu95u95terms(X)) -> terms(X)
 activate(X) -> X
 add(num0,X) -> X
 add(s(X),Y) -> s(add(X,Y))
 dbl(num0) -> num0
 dbl(s(X)) -> s(s(dbl(X)))
 first(num0,X) -> nil
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(X1,X2) -> nu95u95first(X1,X2)
 sqr(num0) -> num0
 sqr(s(X)) -> s(add(sqr(X),dbl(X)))
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(s(N)))
 terms(X) -> nu95u95terms(X)
->Projection:
 pi(SQR) = 1

Problem 1.3: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 activate(nu95u95first(X1,X2)) -> first(X1,X2)
 activate(nu95u95terms(X)) -> terms(X)
 activate(X) -> X
 add(num0,X) -> X
 add(s(X),Y) -> s(add(X,Y))
 dbl(num0) -> num0
 dbl(s(X)) -> s(s(dbl(X)))
 first(num0,X) -> nil
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(X1,X2) -> nu95u95first(X1,X2)
 sqr(num0) -> num0
 sqr(s(X)) -> s(add(sqr(X),dbl(X)))
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(s(N)))
 terms(X) -> nu95u95terms(X)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.4: 

Subterm Processor:
-> Pairs:
 ACTIVATE(nu95u95first(X1,X2)) -> FIRST(X1,X2)
 FIRST(s(X),cons(Y,Z)) -> ACTIVATE(Z)
-> Rules:
 activate(nu95u95first(X1,X2)) -> first(X1,X2)
 activate(nu95u95terms(X)) -> terms(X)
 activate(X) -> X
 add(num0,X) -> X
 add(s(X),Y) -> s(add(X,Y))
 dbl(num0) -> num0
 dbl(s(X)) -> s(s(dbl(X)))
 first(num0,X) -> nil
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(X1,X2) -> nu95u95first(X1,X2)
 sqr(num0) -> num0
 sqr(s(X)) -> s(add(sqr(X),dbl(X)))
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(s(N)))
 terms(X) -> nu95u95terms(X)
->Projection:
 pi(ACTIVATE) = 1
 pi(FIRST) = 2

Problem 1.4: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 activate(nu95u95first(X1,X2)) -> first(X1,X2)
 activate(nu95u95terms(X)) -> terms(X)
 activate(X) -> X
 add(num0,X) -> X
 add(s(X),Y) -> s(add(X,Y))
 dbl(num0) -> num0
 dbl(s(X)) -> s(s(dbl(X)))
 first(num0,X) -> nil
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(X1,X2) -> nu95u95first(X1,X2)
 sqr(num0) -> num0
 sqr(s(X)) -> s(add(sqr(X),dbl(X)))
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(s(N)))
 terms(X) -> nu95u95terms(X)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
