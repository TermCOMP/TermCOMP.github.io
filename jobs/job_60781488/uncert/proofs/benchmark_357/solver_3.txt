YES

Problem 1: 

(VAR vu95NonEmpty x y)
(RULES
not(not(x)) -> x
not(and(x,y)) -> or(not(not(not(x))),not(not(not(y))))
not(or(x,y)) -> and(not(not(not(x))),not(not(not(y))))
)


Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 NOT(and(x,y)) -> NOT(not(not(x)))
 NOT(and(x,y)) -> NOT(not(not(y)))
 NOT(and(x,y)) -> NOT(not(x))
 NOT(and(x,y)) -> NOT(not(y))
 NOT(and(x,y)) -> NOT(x)
 NOT(and(x,y)) -> NOT(y)
 NOT(or(x,y)) -> NOT(not(not(x)))
 NOT(or(x,y)) -> NOT(not(not(y)))
 NOT(or(x,y)) -> NOT(not(x))
 NOT(or(x,y)) -> NOT(not(y))
 NOT(or(x,y)) -> NOT(x)
 NOT(or(x,y)) -> NOT(y)
-> Rules:
 not(not(x)) -> x
 not(and(x,y)) -> or(not(not(not(x))),not(not(not(y))))
 not(or(x,y)) -> and(not(not(not(x))),not(not(not(y))))

Problem 1: 

SCC Processor:
-> Pairs:
 NOT(and(x,y)) -> NOT(not(not(x)))
 NOT(and(x,y)) -> NOT(not(not(y)))
 NOT(and(x,y)) -> NOT(not(x))
 NOT(and(x,y)) -> NOT(not(y))
 NOT(and(x,y)) -> NOT(x)
 NOT(and(x,y)) -> NOT(y)
 NOT(or(x,y)) -> NOT(not(not(x)))
 NOT(or(x,y)) -> NOT(not(not(y)))
 NOT(or(x,y)) -> NOT(not(x))
 NOT(or(x,y)) -> NOT(not(y))
 NOT(or(x,y)) -> NOT(x)
 NOT(or(x,y)) -> NOT(y)
-> Rules:
 not(not(x)) -> x
 not(and(x,y)) -> or(not(not(not(x))),not(not(not(y))))
 not(or(x,y)) -> and(not(not(not(x))),not(not(not(y))))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 NOT(and(x,y)) -> NOT(not(not(x)))
 NOT(and(x,y)) -> NOT(not(not(y)))
 NOT(and(x,y)) -> NOT(not(x))
 NOT(and(x,y)) -> NOT(not(y))
 NOT(and(x,y)) -> NOT(x)
 NOT(and(x,y)) -> NOT(y)
 NOT(or(x,y)) -> NOT(not(not(x)))
 NOT(or(x,y)) -> NOT(not(not(y)))
 NOT(or(x,y)) -> NOT(not(x))
 NOT(or(x,y)) -> NOT(not(y))
 NOT(or(x,y)) -> NOT(x)
 NOT(or(x,y)) -> NOT(y)
->->-> Rules:
 not(not(x)) -> x
 not(and(x,y)) -> or(not(not(not(x))),not(not(not(y))))
 not(or(x,y)) -> and(not(not(not(x))),not(not(not(y))))

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 NOT(and(x,y)) -> NOT(not(not(x)))
 NOT(and(x,y)) -> NOT(not(not(y)))
 NOT(and(x,y)) -> NOT(not(x))
 NOT(and(x,y)) -> NOT(not(y))
 NOT(and(x,y)) -> NOT(x)
 NOT(and(x,y)) -> NOT(y)
 NOT(or(x,y)) -> NOT(not(not(x)))
 NOT(or(x,y)) -> NOT(not(not(y)))
 NOT(or(x,y)) -> NOT(not(x))
 NOT(or(x,y)) -> NOT(not(y))
 NOT(or(x,y)) -> NOT(x)
 NOT(or(x,y)) -> NOT(y)
-> Rules:
 not(not(x)) -> x
 not(and(x,y)) -> or(not(not(not(x))),not(not(not(y))))
 not(or(x,y)) -> and(not(not(not(x))),not(not(not(y))))
-> Usable rules:
 not(not(x)) -> x
 not(and(x,y)) -> or(not(not(not(x))),not(not(not(y))))
 not(or(x,y)) -> and(not(not(not(x))),not(not(not(y))))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[not](X) = X
[and](X1,X2) = X1 + 2.X2 + 2
[fSNonEmpty] = 0
[or](X1,X2) = X1 + 2.X2 + 2
[NOT](X) = 2.X

Problem 1: 

SCC Processor:
-> Pairs:
 NOT(and(x,y)) -> NOT(not(not(y)))
 NOT(and(x,y)) -> NOT(not(x))
 NOT(and(x,y)) -> NOT(not(y))
 NOT(and(x,y)) -> NOT(x)
 NOT(and(x,y)) -> NOT(y)
 NOT(or(x,y)) -> NOT(not(not(x)))
 NOT(or(x,y)) -> NOT(not(not(y)))
 NOT(or(x,y)) -> NOT(not(x))
 NOT(or(x,y)) -> NOT(not(y))
 NOT(or(x,y)) -> NOT(x)
 NOT(or(x,y)) -> NOT(y)
-> Rules:
 not(not(x)) -> x
 not(and(x,y)) -> or(not(not(not(x))),not(not(not(y))))
 not(or(x,y)) -> and(not(not(not(x))),not(not(not(y))))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 NOT(and(x,y)) -> NOT(not(not(y)))
 NOT(and(x,y)) -> NOT(not(x))
 NOT(and(x,y)) -> NOT(not(y))
 NOT(and(x,y)) -> NOT(x)
 NOT(and(x,y)) -> NOT(y)
 NOT(or(x,y)) -> NOT(not(not(x)))
 NOT(or(x,y)) -> NOT(not(not(y)))
 NOT(or(x,y)) -> NOT(not(x))
 NOT(or(x,y)) -> NOT(not(y))
 NOT(or(x,y)) -> NOT(x)
 NOT(or(x,y)) -> NOT(y)
->->-> Rules:
 not(not(x)) -> x
 not(and(x,y)) -> or(not(not(not(x))),not(not(not(y))))
 not(or(x,y)) -> and(not(not(not(x))),not(not(not(y))))

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 NOT(and(x,y)) -> NOT(not(not(y)))
 NOT(and(x,y)) -> NOT(not(x))
 NOT(and(x,y)) -> NOT(not(y))
 NOT(and(x,y)) -> NOT(x)
 NOT(and(x,y)) -> NOT(y)
 NOT(or(x,y)) -> NOT(not(not(x)))
 NOT(or(x,y)) -> NOT(not(not(y)))
 NOT(or(x,y)) -> NOT(not(x))
 NOT(or(x,y)) -> NOT(not(y))
 NOT(or(x,y)) -> NOT(x)
 NOT(or(x,y)) -> NOT(y)
-> Rules:
 not(not(x)) -> x
 not(and(x,y)) -> or(not(not(not(x))),not(not(not(y))))
 not(or(x,y)) -> and(not(not(not(x))),not(not(not(y))))
-> Usable rules:
 not(not(x)) -> x
 not(and(x,y)) -> or(not(not(not(x))),not(not(not(y))))
 not(or(x,y)) -> and(not(not(not(x))),not(not(not(y))))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[not](X) = X
[and](X1,X2) = 2.X1 + 2.X2 + 2
[fSNonEmpty] = 0
[or](X1,X2) = 2.X1 + 2.X2 + 2
[NOT](X) = X

Problem 1: 

SCC Processor:
-> Pairs:
 NOT(and(x,y)) -> NOT(not(x))
 NOT(and(x,y)) -> NOT(not(y))
 NOT(and(x,y)) -> NOT(x)
 NOT(and(x,y)) -> NOT(y)
 NOT(or(x,y)) -> NOT(not(not(x)))
 NOT(or(x,y)) -> NOT(not(not(y)))
 NOT(or(x,y)) -> NOT(not(x))
 NOT(or(x,y)) -> NOT(not(y))
 NOT(or(x,y)) -> NOT(x)
 NOT(or(x,y)) -> NOT(y)
-> Rules:
 not(not(x)) -> x
 not(and(x,y)) -> or(not(not(not(x))),not(not(not(y))))
 not(or(x,y)) -> and(not(not(not(x))),not(not(not(y))))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 NOT(and(x,y)) -> NOT(not(x))
 NOT(and(x,y)) -> NOT(not(y))
 NOT(and(x,y)) -> NOT(x)
 NOT(and(x,y)) -> NOT(y)
 NOT(or(x,y)) -> NOT(not(not(x)))
 NOT(or(x,y)) -> NOT(not(not(y)))
 NOT(or(x,y)) -> NOT(not(x))
 NOT(or(x,y)) -> NOT(not(y))
 NOT(or(x,y)) -> NOT(x)
 NOT(or(x,y)) -> NOT(y)
->->-> Rules:
 not(not(x)) -> x
 not(and(x,y)) -> or(not(not(not(x))),not(not(not(y))))
 not(or(x,y)) -> and(not(not(not(x))),not(not(not(y))))

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 NOT(and(x,y)) -> NOT(not(x))
 NOT(and(x,y)) -> NOT(not(y))
 NOT(and(x,y)) -> NOT(x)
 NOT(and(x,y)) -> NOT(y)
 NOT(or(x,y)) -> NOT(not(not(x)))
 NOT(or(x,y)) -> NOT(not(not(y)))
 NOT(or(x,y)) -> NOT(not(x))
 NOT(or(x,y)) -> NOT(not(y))
 NOT(or(x,y)) -> NOT(x)
 NOT(or(x,y)) -> NOT(y)
-> Rules:
 not(not(x)) -> x
 not(and(x,y)) -> or(not(not(not(x))),not(not(not(y))))
 not(or(x,y)) -> and(not(not(not(x))),not(not(not(y))))
-> Usable rules:
 not(not(x)) -> x
 not(and(x,y)) -> or(not(not(not(x))),not(not(not(y))))
 not(or(x,y)) -> and(not(not(not(x))),not(not(not(y))))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[not](X) = X
[and](X1,X2) = 2.X1 + 2.X2 + 1
[fSNonEmpty] = 0
[or](X1,X2) = 2.X1 + 2.X2 + 1
[NOT](X) = 2.X

Problem 1: 

SCC Processor:
-> Pairs:
 NOT(and(x,y)) -> NOT(not(y))
 NOT(and(x,y)) -> NOT(x)
 NOT(and(x,y)) -> NOT(y)
 NOT(or(x,y)) -> NOT(not(not(x)))
 NOT(or(x,y)) -> NOT(not(not(y)))
 NOT(or(x,y)) -> NOT(not(x))
 NOT(or(x,y)) -> NOT(not(y))
 NOT(or(x,y)) -> NOT(x)
 NOT(or(x,y)) -> NOT(y)
-> Rules:
 not(not(x)) -> x
 not(and(x,y)) -> or(not(not(not(x))),not(not(not(y))))
 not(or(x,y)) -> and(not(not(not(x))),not(not(not(y))))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 NOT(and(x,y)) -> NOT(not(y))
 NOT(and(x,y)) -> NOT(x)
 NOT(and(x,y)) -> NOT(y)
 NOT(or(x,y)) -> NOT(not(not(x)))
 NOT(or(x,y)) -> NOT(not(not(y)))
 NOT(or(x,y)) -> NOT(not(x))
 NOT(or(x,y)) -> NOT(not(y))
 NOT(or(x,y)) -> NOT(x)
 NOT(or(x,y)) -> NOT(y)
->->-> Rules:
 not(not(x)) -> x
 not(and(x,y)) -> or(not(not(not(x))),not(not(not(y))))
 not(or(x,y)) -> and(not(not(not(x))),not(not(not(y))))

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 NOT(and(x,y)) -> NOT(not(y))
 NOT(and(x,y)) -> NOT(x)
 NOT(and(x,y)) -> NOT(y)
 NOT(or(x,y)) -> NOT(not(not(x)))
 NOT(or(x,y)) -> NOT(not(not(y)))
 NOT(or(x,y)) -> NOT(not(x))
 NOT(or(x,y)) -> NOT(not(y))
 NOT(or(x,y)) -> NOT(x)
 NOT(or(x,y)) -> NOT(y)
-> Rules:
 not(not(x)) -> x
 not(and(x,y)) -> or(not(not(not(x))),not(not(not(y))))
 not(or(x,y)) -> and(not(not(not(x))),not(not(not(y))))
-> Usable rules:
 not(not(x)) -> x
 not(and(x,y)) -> or(not(not(not(x))),not(not(not(y))))
 not(or(x,y)) -> and(not(not(not(x))),not(not(not(y))))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[not](X) = X
[and](X1,X2) = 2.X1 + 2.X2 + 2
[fSNonEmpty] = 0
[or](X1,X2) = 2.X1 + 2.X2 + 2
[NOT](X) = 2.X

Problem 1: 

SCC Processor:
-> Pairs:
 NOT(and(x,y)) -> NOT(x)
 NOT(and(x,y)) -> NOT(y)
 NOT(or(x,y)) -> NOT(not(not(x)))
 NOT(or(x,y)) -> NOT(not(not(y)))
 NOT(or(x,y)) -> NOT(not(x))
 NOT(or(x,y)) -> NOT(not(y))
 NOT(or(x,y)) -> NOT(x)
 NOT(or(x,y)) -> NOT(y)
-> Rules:
 not(not(x)) -> x
 not(and(x,y)) -> or(not(not(not(x))),not(not(not(y))))
 not(or(x,y)) -> and(not(not(not(x))),not(not(not(y))))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 NOT(and(x,y)) -> NOT(x)
 NOT(and(x,y)) -> NOT(y)
 NOT(or(x,y)) -> NOT(not(not(x)))
 NOT(or(x,y)) -> NOT(not(not(y)))
 NOT(or(x,y)) -> NOT(not(x))
 NOT(or(x,y)) -> NOT(not(y))
 NOT(or(x,y)) -> NOT(x)
 NOT(or(x,y)) -> NOT(y)
->->-> Rules:
 not(not(x)) -> x
 not(and(x,y)) -> or(not(not(not(x))),not(not(not(y))))
 not(or(x,y)) -> and(not(not(not(x))),not(not(not(y))))

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 NOT(and(x,y)) -> NOT(x)
 NOT(and(x,y)) -> NOT(y)
 NOT(or(x,y)) -> NOT(not(not(x)))
 NOT(or(x,y)) -> NOT(not(not(y)))
 NOT(or(x,y)) -> NOT(not(x))
 NOT(or(x,y)) -> NOT(not(y))
 NOT(or(x,y)) -> NOT(x)
 NOT(or(x,y)) -> NOT(y)
-> Rules:
 not(not(x)) -> x
 not(and(x,y)) -> or(not(not(not(x))),not(not(not(y))))
 not(or(x,y)) -> and(not(not(not(x))),not(not(not(y))))
-> Usable rules:
 not(not(x)) -> x
 not(and(x,y)) -> or(not(not(not(x))),not(not(not(y))))
 not(or(x,y)) -> and(not(not(not(x))),not(not(not(y))))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[not](X) = X
[and](X1,X2) = 2.X1 + 2.X2 + 1
[fSNonEmpty] = 0
[or](X1,X2) = 2.X1 + 2.X2 + 1
[NOT](X) = 2.X

Problem 1: 

SCC Processor:
-> Pairs:
 NOT(and(x,y)) -> NOT(y)
 NOT(or(x,y)) -> NOT(not(not(x)))
 NOT(or(x,y)) -> NOT(not(not(y)))
 NOT(or(x,y)) -> NOT(not(x))
 NOT(or(x,y)) -> NOT(not(y))
 NOT(or(x,y)) -> NOT(x)
 NOT(or(x,y)) -> NOT(y)
-> Rules:
 not(not(x)) -> x
 not(and(x,y)) -> or(not(not(not(x))),not(not(not(y))))
 not(or(x,y)) -> and(not(not(not(x))),not(not(not(y))))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 NOT(and(x,y)) -> NOT(y)
 NOT(or(x,y)) -> NOT(not(not(x)))
 NOT(or(x,y)) -> NOT(not(not(y)))
 NOT(or(x,y)) -> NOT(not(x))
 NOT(or(x,y)) -> NOT(not(y))
 NOT(or(x,y)) -> NOT(x)
 NOT(or(x,y)) -> NOT(y)
->->-> Rules:
 not(not(x)) -> x
 not(and(x,y)) -> or(not(not(not(x))),not(not(not(y))))
 not(or(x,y)) -> and(not(not(not(x))),not(not(not(y))))

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 NOT(and(x,y)) -> NOT(y)
 NOT(or(x,y)) -> NOT(not(not(x)))
 NOT(or(x,y)) -> NOT(not(not(y)))
 NOT(or(x,y)) -> NOT(not(x))
 NOT(or(x,y)) -> NOT(not(y))
 NOT(or(x,y)) -> NOT(x)
 NOT(or(x,y)) -> NOT(y)
-> Rules:
 not(not(x)) -> x
 not(and(x,y)) -> or(not(not(not(x))),not(not(not(y))))
 not(or(x,y)) -> and(not(not(not(x))),not(not(not(y))))
-> Usable rules:
 not(not(x)) -> x
 not(and(x,y)) -> or(not(not(not(x))),not(not(not(y))))
 not(or(x,y)) -> and(not(not(not(x))),not(not(not(y))))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[not](X) = X
[and](X1,X2) = X1 + 2.X2 + 2
[fSNonEmpty] = 0
[or](X1,X2) = X1 + 2.X2 + 2
[NOT](X) = 2.X

Problem 1: 

SCC Processor:
-> Pairs:
 NOT(or(x,y)) -> NOT(not(not(x)))
 NOT(or(x,y)) -> NOT(not(not(y)))
 NOT(or(x,y)) -> NOT(not(x))
 NOT(or(x,y)) -> NOT(not(y))
 NOT(or(x,y)) -> NOT(x)
 NOT(or(x,y)) -> NOT(y)
-> Rules:
 not(not(x)) -> x
 not(and(x,y)) -> or(not(not(not(x))),not(not(not(y))))
 not(or(x,y)) -> and(not(not(not(x))),not(not(not(y))))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 NOT(or(x,y)) -> NOT(not(not(x)))
 NOT(or(x,y)) -> NOT(not(not(y)))
 NOT(or(x,y)) -> NOT(not(x))
 NOT(or(x,y)) -> NOT(not(y))
 NOT(or(x,y)) -> NOT(x)
 NOT(or(x,y)) -> NOT(y)
->->-> Rules:
 not(not(x)) -> x
 not(and(x,y)) -> or(not(not(not(x))),not(not(not(y))))
 not(or(x,y)) -> and(not(not(not(x))),not(not(not(y))))

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 NOT(or(x,y)) -> NOT(not(not(x)))
 NOT(or(x,y)) -> NOT(not(not(y)))
 NOT(or(x,y)) -> NOT(not(x))
 NOT(or(x,y)) -> NOT(not(y))
 NOT(or(x,y)) -> NOT(x)
 NOT(or(x,y)) -> NOT(y)
-> Rules:
 not(not(x)) -> x
 not(and(x,y)) -> or(not(not(not(x))),not(not(not(y))))
 not(or(x,y)) -> and(not(not(not(x))),not(not(not(y))))
-> Usable rules:
 not(not(x)) -> x
 not(and(x,y)) -> or(not(not(not(x))),not(not(not(y))))
 not(or(x,y)) -> and(not(not(not(x))),not(not(not(y))))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[not](X) = X
[and](X1,X2) = X1 + 2.X2 + 2
[fSNonEmpty] = 0
[or](X1,X2) = X1 + 2.X2 + 2
[NOT](X) = X

Problem 1: 

SCC Processor:
-> Pairs:
 NOT(or(x,y)) -> NOT(not(not(y)))
 NOT(or(x,y)) -> NOT(not(x))
 NOT(or(x,y)) -> NOT(not(y))
 NOT(or(x,y)) -> NOT(x)
 NOT(or(x,y)) -> NOT(y)
-> Rules:
 not(not(x)) -> x
 not(and(x,y)) -> or(not(not(not(x))),not(not(not(y))))
 not(or(x,y)) -> and(not(not(not(x))),not(not(not(y))))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 NOT(or(x,y)) -> NOT(not(not(y)))
 NOT(or(x,y)) -> NOT(not(x))
 NOT(or(x,y)) -> NOT(not(y))
 NOT(or(x,y)) -> NOT(x)
 NOT(or(x,y)) -> NOT(y)
->->-> Rules:
 not(not(x)) -> x
 not(and(x,y)) -> or(not(not(not(x))),not(not(not(y))))
 not(or(x,y)) -> and(not(not(not(x))),not(not(not(y))))

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 NOT(or(x,y)) -> NOT(not(not(y)))
 NOT(or(x,y)) -> NOT(not(x))
 NOT(or(x,y)) -> NOT(not(y))
 NOT(or(x,y)) -> NOT(x)
 NOT(or(x,y)) -> NOT(y)
-> Rules:
 not(not(x)) -> x
 not(and(x,y)) -> or(not(not(not(x))),not(not(not(y))))
 not(or(x,y)) -> and(not(not(not(x))),not(not(not(y))))
-> Usable rules:
 not(not(x)) -> x
 not(and(x,y)) -> or(not(not(not(x))),not(not(not(y))))
 not(or(x,y)) -> and(not(not(not(x))),not(not(not(y))))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[not](X) = X
[and](X1,X2) = 2.X1 + 2.X2 + 2
[fSNonEmpty] = 0
[or](X1,X2) = 2.X1 + 2.X2 + 2
[NOT](X) = 2.X

Problem 1: 

SCC Processor:
-> Pairs:
 NOT(or(x,y)) -> NOT(not(x))
 NOT(or(x,y)) -> NOT(not(y))
 NOT(or(x,y)) -> NOT(x)
 NOT(or(x,y)) -> NOT(y)
-> Rules:
 not(not(x)) -> x
 not(and(x,y)) -> or(not(not(not(x))),not(not(not(y))))
 not(or(x,y)) -> and(not(not(not(x))),not(not(not(y))))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 NOT(or(x,y)) -> NOT(not(x))
 NOT(or(x,y)) -> NOT(not(y))
 NOT(or(x,y)) -> NOT(x)
 NOT(or(x,y)) -> NOT(y)
->->-> Rules:
 not(not(x)) -> x
 not(and(x,y)) -> or(not(not(not(x))),not(not(not(y))))
 not(or(x,y)) -> and(not(not(not(x))),not(not(not(y))))

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 NOT(or(x,y)) -> NOT(not(x))
 NOT(or(x,y)) -> NOT(not(y))
 NOT(or(x,y)) -> NOT(x)
 NOT(or(x,y)) -> NOT(y)
-> Rules:
 not(not(x)) -> x
 not(and(x,y)) -> or(not(not(not(x))),not(not(not(y))))
 not(or(x,y)) -> and(not(not(not(x))),not(not(not(y))))
-> Usable rules:
 not(not(x)) -> x
 not(and(x,y)) -> or(not(not(not(x))),not(not(not(y))))
 not(or(x,y)) -> and(not(not(not(x))),not(not(not(y))))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[not](X) = X
[and](X1,X2) = 2.X1 + 2.X2 + 2
[fSNonEmpty] = 0
[or](X1,X2) = 2.X1 + 2.X2 + 2
[NOT](X) = 2.X

Problem 1: 

SCC Processor:
-> Pairs:
 NOT(or(x,y)) -> NOT(not(y))
 NOT(or(x,y)) -> NOT(x)
 NOT(or(x,y)) -> NOT(y)
-> Rules:
 not(not(x)) -> x
 not(and(x,y)) -> or(not(not(not(x))),not(not(not(y))))
 not(or(x,y)) -> and(not(not(not(x))),not(not(not(y))))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 NOT(or(x,y)) -> NOT(not(y))
 NOT(or(x,y)) -> NOT(x)
 NOT(or(x,y)) -> NOT(y)
->->-> Rules:
 not(not(x)) -> x
 not(and(x,y)) -> or(not(not(not(x))),not(not(not(y))))
 not(or(x,y)) -> and(not(not(not(x))),not(not(not(y))))

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 NOT(or(x,y)) -> NOT(not(y))
 NOT(or(x,y)) -> NOT(x)
 NOT(or(x,y)) -> NOT(y)
-> Rules:
 not(not(x)) -> x
 not(and(x,y)) -> or(not(not(not(x))),not(not(not(y))))
 not(or(x,y)) -> and(not(not(not(x))),not(not(not(y))))
-> Usable rules:
 not(not(x)) -> x
 not(and(x,y)) -> or(not(not(not(x))),not(not(not(y))))
 not(or(x,y)) -> and(not(not(not(x))),not(not(not(y))))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[not](X) = X
[and](X1,X2) = 2.X1 + 2.X2 + 2
[fSNonEmpty] = 0
[or](X1,X2) = 2.X1 + 2.X2 + 2
[NOT](X) = 2.X

Problem 1: 

SCC Processor:
-> Pairs:
 NOT(or(x,y)) -> NOT(x)
 NOT(or(x,y)) -> NOT(y)
-> Rules:
 not(not(x)) -> x
 not(and(x,y)) -> or(not(not(not(x))),not(not(not(y))))
 not(or(x,y)) -> and(not(not(not(x))),not(not(not(y))))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 NOT(or(x,y)) -> NOT(x)
 NOT(or(x,y)) -> NOT(y)
->->-> Rules:
 not(not(x)) -> x
 not(and(x,y)) -> or(not(not(not(x))),not(not(not(y))))
 not(or(x,y)) -> and(not(not(not(x))),not(not(not(y))))

Problem 1: 

Subterm Processor:
-> Pairs:
 NOT(or(x,y)) -> NOT(x)
 NOT(or(x,y)) -> NOT(y)
-> Rules:
 not(not(x)) -> x
 not(and(x,y)) -> or(not(not(not(x))),not(not(not(y))))
 not(or(x,y)) -> and(not(not(not(x))),not(not(not(y))))
->Projection:
 pi(NOT) = 1

Problem 1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 not(not(x)) -> x
 not(and(x,y)) -> or(not(not(not(x))),not(not(not(y))))
 not(or(x,y)) -> and(not(not(not(x))),not(not(not(y))))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
