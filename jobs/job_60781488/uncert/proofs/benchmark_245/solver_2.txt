YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/B586R.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 0 ms]
(2) QDP
(3) DependencyGraphProof [EQUIVALENT, 0 ms]
(4) QDP
(5) QDPOrderProof [EQUIVALENT, 7 ms]
(6) QDP
(7) DependencyGraphProof [EQUIVALENT, 0 ms]
(8) TRUE


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   nonZero(0) -> false
   nonZero(s(x)) -> true
   p(0) -> 0
   p(s(x)) -> x
   id_inc(x) -> x
   id_inc(x) -> s(x)
   random(x) -> rand(x, 0)
   rand(x, y) -> if(nonZero(x), x, y)
   if(false, x, y) -> y
   if(true, x, y) -> rand(p(x), id_inc(y))

Q is empty.

----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   RANDOM(x) -> RAND(x, 0)
   RAND(x, y) -> IF(nonZero(x), x, y)
   RAND(x, y) -> NONZERO(x)
   IF(true, x, y) -> RAND(p(x), id_inc(y))
   IF(true, x, y) -> P(x)
   IF(true, x, y) -> ID_INC(y)

The TRS R consists of the following rules:

   nonZero(0) -> false
   nonZero(s(x)) -> true
   p(0) -> 0
   p(s(x)) -> x
   id_inc(x) -> x
   id_inc(x) -> s(x)
   random(x) -> rand(x, 0)
   rand(x, y) -> if(nonZero(x), x, y)
   if(false, x, y) -> y
   if(true, x, y) -> rand(p(x), id_inc(y))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 4 less nodes.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   IF(true, x, y) -> RAND(p(x), id_inc(y))
   RAND(x, y) -> IF(nonZero(x), x, y)

The TRS R consists of the following rules:

   nonZero(0) -> false
   nonZero(s(x)) -> true
   p(0) -> 0
   p(s(x)) -> x
   id_inc(x) -> x
   id_inc(x) -> s(x)
   random(x) -> rand(x, 0)
   rand(x, y) -> if(nonZero(x), x, y)
   if(false, x, y) -> y
   if(true, x, y) -> rand(p(x), id_inc(y))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   RAND(x, y) -> IF(nonZero(x), x, y)
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO,RATPOLO]:

   POL(0) = 0
   POL(IF(x_1, x_2, x_3)) = [1/4]x_1 + [2]x_2
   POL(RAND(x_1, x_2)) = [1/4] + [4]x_1
   POL(false) = 0
   POL(id_inc(x_1)) = 0
   POL(nonZero(x_1)) = [4]x_1
   POL(p(x_1)) = [1/4]x_1
   POL(s(x_1)) = [1/2] + [4]x_1
   POL(true) = [1]
The value of delta used in the strict ordering is 1/4.
The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   p(0) -> 0
   p(s(x)) -> x
   nonZero(0) -> false
   nonZero(s(x)) -> true


----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   IF(true, x, y) -> RAND(p(x), id_inc(y))

The TRS R consists of the following rules:

   nonZero(0) -> false
   nonZero(s(x)) -> true
   p(0) -> 0
   p(s(x)) -> x
   id_inc(x) -> x
   id_inc(x) -> s(x)
   random(x) -> rand(x, 0)
   rand(x, y) -> if(nonZero(x), x, y)
   if(false, x, y) -> y
   if(true, x, y) -> rand(p(x), id_inc(y))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 1 less node.
----------------------------------------

(8)
TRUE
