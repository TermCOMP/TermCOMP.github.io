YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/0uQaE.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 2 ms]
(2) QDP
(3) DependencyGraphProof [EQUIVALENT, 0 ms]
(4) AND
    (5) QDP
        (6) UsableRulesProof [EQUIVALENT, 0 ms]
        (7) QDP
        (8) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (9) YES
    (10) QDP
        (11) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (12) YES
    (13) QDP
        (14) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (15) YES
    (16) QDP
        (17) QDPOrderProof [EQUIVALENT, 226 ms]
        (18) QDP
        (19) QDPOrderProof [EQUIVALENT, 149 ms]
        (20) QDP
        (21) DependencyGraphProof [EQUIVALENT, 0 ms]
        (22) AND
            (23) QDP
                (24) QDPOrderProof [EQUIVALENT, 153 ms]
                (25) QDP
                (26) DependencyGraphProof [EQUIVALENT, 0 ms]
                (27) TRUE
            (28) QDP
                (29) UsableRulesProof [EQUIVALENT, 0 ms]
                (30) QDP
                (31) QDPSizeChangeProof [EQUIVALENT, 0 ms]
                (32) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a__zeros -> cons(0, zeros)
   a__U11(tt, V1) -> a__U12(a__isNatIListKind(V1), V1)
   a__U12(tt, V1) -> a__U13(a__isNatList(V1))
   a__U13(tt) -> tt
   a__U21(tt, V1) -> a__U22(a__isNatKind(V1), V1)
   a__U22(tt, V1) -> a__U23(a__isNat(V1))
   a__U23(tt) -> tt
   a__U31(tt, V) -> a__U32(a__isNatIListKind(V), V)
   a__U32(tt, V) -> a__U33(a__isNatList(V))
   a__U33(tt) -> tt
   a__U41(tt, V1, V2) -> a__U42(a__isNatKind(V1), V1, V2)
   a__U42(tt, V1, V2) -> a__U43(a__isNatIListKind(V2), V1, V2)
   a__U43(tt, V1, V2) -> a__U44(a__isNatIListKind(V2), V1, V2)
   a__U44(tt, V1, V2) -> a__U45(a__isNat(V1), V2)
   a__U45(tt, V2) -> a__U46(a__isNatIList(V2))
   a__U46(tt) -> tt
   a__U51(tt, V2) -> a__U52(a__isNatIListKind(V2))
   a__U52(tt) -> tt
   a__U61(tt) -> tt
   a__U71(tt) -> tt
   a__U81(tt, V1, V2) -> a__U82(a__isNatKind(V1), V1, V2)
   a__U82(tt, V1, V2) -> a__U83(a__isNatIListKind(V2), V1, V2)
   a__U83(tt, V1, V2) -> a__U84(a__isNatIListKind(V2), V1, V2)
   a__U84(tt, V1, V2) -> a__U85(a__isNat(V1), V2)
   a__U85(tt, V2) -> a__U86(a__isNatList(V2))
   a__U86(tt) -> tt
   a__U91(tt, L, N) -> a__U92(a__isNatIListKind(L), L, N)
   a__U92(tt, L, N) -> a__U93(a__isNat(N), L, N)
   a__U93(tt, L, N) -> a__U94(a__isNatKind(N), L)
   a__U94(tt, L) -> s(a__length(mark(L)))
   a__isNat(0) -> tt
   a__isNat(length(V1)) -> a__U11(a__isNatIListKind(V1), V1)
   a__isNat(s(V1)) -> a__U21(a__isNatKind(V1), V1)
   a__isNatIList(V) -> a__U31(a__isNatIListKind(V), V)
   a__isNatIList(zeros) -> tt
   a__isNatIList(cons(V1, V2)) -> a__U41(a__isNatKind(V1), V1, V2)
   a__isNatIListKind(nil) -> tt
   a__isNatIListKind(zeros) -> tt
   a__isNatIListKind(cons(V1, V2)) -> a__U51(a__isNatKind(V1), V2)
   a__isNatKind(0) -> tt
   a__isNatKind(length(V1)) -> a__U61(a__isNatIListKind(V1))
   a__isNatKind(s(V1)) -> a__U71(a__isNatKind(V1))
   a__isNatList(nil) -> tt
   a__isNatList(cons(V1, V2)) -> a__U81(a__isNatKind(V1), V1, V2)
   a__length(nil) -> 0
   a__length(cons(N, L)) -> a__U91(a__isNatList(L), L, N)
   mark(zeros) -> a__zeros
   mark(U11(X1, X2)) -> a__U11(mark(X1), X2)
   mark(U12(X1, X2)) -> a__U12(mark(X1), X2)
   mark(isNatIListKind(X)) -> a__isNatIListKind(X)
   mark(U13(X)) -> a__U13(mark(X))
   mark(isNatList(X)) -> a__isNatList(X)
   mark(U21(X1, X2)) -> a__U21(mark(X1), X2)
   mark(U22(X1, X2)) -> a__U22(mark(X1), X2)
   mark(isNatKind(X)) -> a__isNatKind(X)
   mark(U23(X)) -> a__U23(mark(X))
   mark(isNat(X)) -> a__isNat(X)
   mark(U31(X1, X2)) -> a__U31(mark(X1), X2)
   mark(U32(X1, X2)) -> a__U32(mark(X1), X2)
   mark(U33(X)) -> a__U33(mark(X))
   mark(U41(X1, X2, X3)) -> a__U41(mark(X1), X2, X3)
   mark(U42(X1, X2, X3)) -> a__U42(mark(X1), X2, X3)
   mark(U43(X1, X2, X3)) -> a__U43(mark(X1), X2, X3)
   mark(U44(X1, X2, X3)) -> a__U44(mark(X1), X2, X3)
   mark(U45(X1, X2)) -> a__U45(mark(X1), X2)
   mark(U46(X)) -> a__U46(mark(X))
   mark(isNatIList(X)) -> a__isNatIList(X)
   mark(U51(X1, X2)) -> a__U51(mark(X1), X2)
   mark(U52(X)) -> a__U52(mark(X))
   mark(U61(X)) -> a__U61(mark(X))
   mark(U71(X)) -> a__U71(mark(X))
   mark(U81(X1, X2, X3)) -> a__U81(mark(X1), X2, X3)
   mark(U82(X1, X2, X3)) -> a__U82(mark(X1), X2, X3)
   mark(U83(X1, X2, X3)) -> a__U83(mark(X1), X2, X3)
   mark(U84(X1, X2, X3)) -> a__U84(mark(X1), X2, X3)
   mark(U85(X1, X2)) -> a__U85(mark(X1), X2)
   mark(U86(X)) -> a__U86(mark(X))
   mark(U91(X1, X2, X3)) -> a__U91(mark(X1), X2, X3)
   mark(U92(X1, X2, X3)) -> a__U92(mark(X1), X2, X3)
   mark(U93(X1, X2, X3)) -> a__U93(mark(X1), X2, X3)
   mark(U94(X1, X2)) -> a__U94(mark(X1), X2)
   mark(length(X)) -> a__length(mark(X))
   mark(cons(X1, X2)) -> cons(mark(X1), X2)
   mark(0) -> 0
   mark(tt) -> tt
   mark(s(X)) -> s(mark(X))
   mark(nil) -> nil
   a__zeros -> zeros
   a__U11(X1, X2) -> U11(X1, X2)
   a__U12(X1, X2) -> U12(X1, X2)
   a__isNatIListKind(X) -> isNatIListKind(X)
   a__U13(X) -> U13(X)
   a__isNatList(X) -> isNatList(X)
   a__U21(X1, X2) -> U21(X1, X2)
   a__U22(X1, X2) -> U22(X1, X2)
   a__isNatKind(X) -> isNatKind(X)
   a__U23(X) -> U23(X)
   a__isNat(X) -> isNat(X)
   a__U31(X1, X2) -> U31(X1, X2)
   a__U32(X1, X2) -> U32(X1, X2)
   a__U33(X) -> U33(X)
   a__U41(X1, X2, X3) -> U41(X1, X2, X3)
   a__U42(X1, X2, X3) -> U42(X1, X2, X3)
   a__U43(X1, X2, X3) -> U43(X1, X2, X3)
   a__U44(X1, X2, X3) -> U44(X1, X2, X3)
   a__U45(X1, X2) -> U45(X1, X2)
   a__U46(X) -> U46(X)
   a__isNatIList(X) -> isNatIList(X)
   a__U51(X1, X2) -> U51(X1, X2)
   a__U52(X) -> U52(X)
   a__U61(X) -> U61(X)
   a__U71(X) -> U71(X)
   a__U81(X1, X2, X3) -> U81(X1, X2, X3)
   a__U82(X1, X2, X3) -> U82(X1, X2, X3)
   a__U83(X1, X2, X3) -> U83(X1, X2, X3)
   a__U84(X1, X2, X3) -> U84(X1, X2, X3)
   a__U85(X1, X2) -> U85(X1, X2)
   a__U86(X) -> U86(X)
   a__U91(X1, X2, X3) -> U91(X1, X2, X3)
   a__U92(X1, X2, X3) -> U92(X1, X2, X3)
   a__U93(X1, X2, X3) -> U93(X1, X2, X3)
   a__U94(X1, X2) -> U94(X1, X2)
   a__length(X) -> length(X)

Q is empty.

----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A__U11(tt, V1) -> A__U12(a__isNatIListKind(V1), V1)
   A__U11(tt, V1) -> A__ISNATILISTKIND(V1)
   A__U12(tt, V1) -> A__U13(a__isNatList(V1))
   A__U12(tt, V1) -> A__ISNATLIST(V1)
   A__U21(tt, V1) -> A__U22(a__isNatKind(V1), V1)
   A__U21(tt, V1) -> A__ISNATKIND(V1)
   A__U22(tt, V1) -> A__U23(a__isNat(V1))
   A__U22(tt, V1) -> A__ISNAT(V1)
   A__U31(tt, V) -> A__U32(a__isNatIListKind(V), V)
   A__U31(tt, V) -> A__ISNATILISTKIND(V)
   A__U32(tt, V) -> A__U33(a__isNatList(V))
   A__U32(tt, V) -> A__ISNATLIST(V)
   A__U41(tt, V1, V2) -> A__U42(a__isNatKind(V1), V1, V2)
   A__U41(tt, V1, V2) -> A__ISNATKIND(V1)
   A__U42(tt, V1, V2) -> A__U43(a__isNatIListKind(V2), V1, V2)
   A__U42(tt, V1, V2) -> A__ISNATILISTKIND(V2)
   A__U43(tt, V1, V2) -> A__U44(a__isNatIListKind(V2), V1, V2)
   A__U43(tt, V1, V2) -> A__ISNATILISTKIND(V2)
   A__U44(tt, V1, V2) -> A__U45(a__isNat(V1), V2)
   A__U44(tt, V1, V2) -> A__ISNAT(V1)
   A__U45(tt, V2) -> A__U46(a__isNatIList(V2))
   A__U45(tt, V2) -> A__ISNATILIST(V2)
   A__U51(tt, V2) -> A__U52(a__isNatIListKind(V2))
   A__U51(tt, V2) -> A__ISNATILISTKIND(V2)
   A__U81(tt, V1, V2) -> A__U82(a__isNatKind(V1), V1, V2)
   A__U81(tt, V1, V2) -> A__ISNATKIND(V1)
   A__U82(tt, V1, V2) -> A__U83(a__isNatIListKind(V2), V1, V2)
   A__U82(tt, V1, V2) -> A__ISNATILISTKIND(V2)
   A__U83(tt, V1, V2) -> A__U84(a__isNatIListKind(V2), V1, V2)
   A__U83(tt, V1, V2) -> A__ISNATILISTKIND(V2)
   A__U84(tt, V1, V2) -> A__U85(a__isNat(V1), V2)
   A__U84(tt, V1, V2) -> A__ISNAT(V1)
   A__U85(tt, V2) -> A__U86(a__isNatList(V2))
   A__U85(tt, V2) -> A__ISNATLIST(V2)
   A__U91(tt, L, N) -> A__U92(a__isNatIListKind(L), L, N)
   A__U91(tt, L, N) -> A__ISNATILISTKIND(L)
   A__U92(tt, L, N) -> A__U93(a__isNat(N), L, N)
   A__U92(tt, L, N) -> A__ISNAT(N)
   A__U93(tt, L, N) -> A__U94(a__isNatKind(N), L)
   A__U93(tt, L, N) -> A__ISNATKIND(N)
   A__U94(tt, L) -> A__LENGTH(mark(L))
   A__U94(tt, L) -> MARK(L)
   A__ISNAT(length(V1)) -> A__U11(a__isNatIListKind(V1), V1)
   A__ISNAT(length(V1)) -> A__ISNATILISTKIND(V1)
   A__ISNAT(s(V1)) -> A__U21(a__isNatKind(V1), V1)
   A__ISNAT(s(V1)) -> A__ISNATKIND(V1)
   A__ISNATILIST(V) -> A__U31(a__isNatIListKind(V), V)
   A__ISNATILIST(V) -> A__ISNATILISTKIND(V)
   A__ISNATILIST(cons(V1, V2)) -> A__U41(a__isNatKind(V1), V1, V2)
   A__ISNATILIST(cons(V1, V2)) -> A__ISNATKIND(V1)
   A__ISNATILISTKIND(cons(V1, V2)) -> A__U51(a__isNatKind(V1), V2)
   A__ISNATILISTKIND(cons(V1, V2)) -> A__ISNATKIND(V1)
   A__ISNATKIND(length(V1)) -> A__U61(a__isNatIListKind(V1))
   A__ISNATKIND(length(V1)) -> A__ISNATILISTKIND(V1)
   A__ISNATKIND(s(V1)) -> A__U71(a__isNatKind(V1))
   A__ISNATKIND(s(V1)) -> A__ISNATKIND(V1)
   A__ISNATLIST(cons(V1, V2)) -> A__U81(a__isNatKind(V1), V1, V2)
   A__ISNATLIST(cons(V1, V2)) -> A__ISNATKIND(V1)
   A__LENGTH(cons(N, L)) -> A__U91(a__isNatList(L), L, N)
   A__LENGTH(cons(N, L)) -> A__ISNATLIST(L)
   MARK(zeros) -> A__ZEROS
   MARK(U11(X1, X2)) -> A__U11(mark(X1), X2)
   MARK(U11(X1, X2)) -> MARK(X1)
   MARK(U12(X1, X2)) -> A__U12(mark(X1), X2)
   MARK(U12(X1, X2)) -> MARK(X1)
   MARK(isNatIListKind(X)) -> A__ISNATILISTKIND(X)
   MARK(U13(X)) -> A__U13(mark(X))
   MARK(U13(X)) -> MARK(X)
   MARK(isNatList(X)) -> A__ISNATLIST(X)
   MARK(U21(X1, X2)) -> A__U21(mark(X1), X2)
   MARK(U21(X1, X2)) -> MARK(X1)
   MARK(U22(X1, X2)) -> A__U22(mark(X1), X2)
   MARK(U22(X1, X2)) -> MARK(X1)
   MARK(isNatKind(X)) -> A__ISNATKIND(X)
   MARK(U23(X)) -> A__U23(mark(X))
   MARK(U23(X)) -> MARK(X)
   MARK(isNat(X)) -> A__ISNAT(X)
   MARK(U31(X1, X2)) -> A__U31(mark(X1), X2)
   MARK(U31(X1, X2)) -> MARK(X1)
   MARK(U32(X1, X2)) -> A__U32(mark(X1), X2)
   MARK(U32(X1, X2)) -> MARK(X1)
   MARK(U33(X)) -> A__U33(mark(X))
   MARK(U33(X)) -> MARK(X)
   MARK(U41(X1, X2, X3)) -> A__U41(mark(X1), X2, X3)
   MARK(U41(X1, X2, X3)) -> MARK(X1)
   MARK(U42(X1, X2, X3)) -> A__U42(mark(X1), X2, X3)
   MARK(U42(X1, X2, X3)) -> MARK(X1)
   MARK(U43(X1, X2, X3)) -> A__U43(mark(X1), X2, X3)
   MARK(U43(X1, X2, X3)) -> MARK(X1)
   MARK(U44(X1, X2, X3)) -> A__U44(mark(X1), X2, X3)
   MARK(U44(X1, X2, X3)) -> MARK(X1)
   MARK(U45(X1, X2)) -> A__U45(mark(X1), X2)
   MARK(U45(X1, X2)) -> MARK(X1)
   MARK(U46(X)) -> A__U46(mark(X))
   MARK(U46(X)) -> MARK(X)
   MARK(isNatIList(X)) -> A__ISNATILIST(X)
   MARK(U51(X1, X2)) -> A__U51(mark(X1), X2)
   MARK(U51(X1, X2)) -> MARK(X1)
   MARK(U52(X)) -> A__U52(mark(X))
   MARK(U52(X)) -> MARK(X)
   MARK(U61(X)) -> A__U61(mark(X))
   MARK(U61(X)) -> MARK(X)
   MARK(U71(X)) -> A__U71(mark(X))
   MARK(U71(X)) -> MARK(X)
   MARK(U81(X1, X2, X3)) -> A__U81(mark(X1), X2, X3)
   MARK(U81(X1, X2, X3)) -> MARK(X1)
   MARK(U82(X1, X2, X3)) -> A__U82(mark(X1), X2, X3)
   MARK(U82(X1, X2, X3)) -> MARK(X1)
   MARK(U83(X1, X2, X3)) -> A__U83(mark(X1), X2, X3)
   MARK(U83(X1, X2, X3)) -> MARK(X1)
   MARK(U84(X1, X2, X3)) -> A__U84(mark(X1), X2, X3)
   MARK(U84(X1, X2, X3)) -> MARK(X1)
   MARK(U85(X1, X2)) -> A__U85(mark(X1), X2)
   MARK(U85(X1, X2)) -> MARK(X1)
   MARK(U86(X)) -> A__U86(mark(X))
   MARK(U86(X)) -> MARK(X)
   MARK(U91(X1, X2, X3)) -> A__U91(mark(X1), X2, X3)
   MARK(U91(X1, X2, X3)) -> MARK(X1)
   MARK(U92(X1, X2, X3)) -> A__U92(mark(X1), X2, X3)
   MARK(U92(X1, X2, X3)) -> MARK(X1)
   MARK(U93(X1, X2, X3)) -> A__U93(mark(X1), X2, X3)
   MARK(U93(X1, X2, X3)) -> MARK(X1)
   MARK(U94(X1, X2)) -> A__U94(mark(X1), X2)
   MARK(U94(X1, X2)) -> MARK(X1)
   MARK(length(X)) -> A__LENGTH(mark(X))
   MARK(length(X)) -> MARK(X)
   MARK(cons(X1, X2)) -> MARK(X1)
   MARK(s(X)) -> MARK(X)

The TRS R consists of the following rules:

   a__zeros -> cons(0, zeros)
   a__U11(tt, V1) -> a__U12(a__isNatIListKind(V1), V1)
   a__U12(tt, V1) -> a__U13(a__isNatList(V1))
   a__U13(tt) -> tt
   a__U21(tt, V1) -> a__U22(a__isNatKind(V1), V1)
   a__U22(tt, V1) -> a__U23(a__isNat(V1))
   a__U23(tt) -> tt
   a__U31(tt, V) -> a__U32(a__isNatIListKind(V), V)
   a__U32(tt, V) -> a__U33(a__isNatList(V))
   a__U33(tt) -> tt
   a__U41(tt, V1, V2) -> a__U42(a__isNatKind(V1), V1, V2)
   a__U42(tt, V1, V2) -> a__U43(a__isNatIListKind(V2), V1, V2)
   a__U43(tt, V1, V2) -> a__U44(a__isNatIListKind(V2), V1, V2)
   a__U44(tt, V1, V2) -> a__U45(a__isNat(V1), V2)
   a__U45(tt, V2) -> a__U46(a__isNatIList(V2))
   a__U46(tt) -> tt
   a__U51(tt, V2) -> a__U52(a__isNatIListKind(V2))
   a__U52(tt) -> tt
   a__U61(tt) -> tt
   a__U71(tt) -> tt
   a__U81(tt, V1, V2) -> a__U82(a__isNatKind(V1), V1, V2)
   a__U82(tt, V1, V2) -> a__U83(a__isNatIListKind(V2), V1, V2)
   a__U83(tt, V1, V2) -> a__U84(a__isNatIListKind(V2), V1, V2)
   a__U84(tt, V1, V2) -> a__U85(a__isNat(V1), V2)
   a__U85(tt, V2) -> a__U86(a__isNatList(V2))
   a__U86(tt) -> tt
   a__U91(tt, L, N) -> a__U92(a__isNatIListKind(L), L, N)
   a__U92(tt, L, N) -> a__U93(a__isNat(N), L, N)
   a__U93(tt, L, N) -> a__U94(a__isNatKind(N), L)
   a__U94(tt, L) -> s(a__length(mark(L)))
   a__isNat(0) -> tt
   a__isNat(length(V1)) -> a__U11(a__isNatIListKind(V1), V1)
   a__isNat(s(V1)) -> a__U21(a__isNatKind(V1), V1)
   a__isNatIList(V) -> a__U31(a__isNatIListKind(V), V)
   a__isNatIList(zeros) -> tt
   a__isNatIList(cons(V1, V2)) -> a__U41(a__isNatKind(V1), V1, V2)
   a__isNatIListKind(nil) -> tt
   a__isNatIListKind(zeros) -> tt
   a__isNatIListKind(cons(V1, V2)) -> a__U51(a__isNatKind(V1), V2)
   a__isNatKind(0) -> tt
   a__isNatKind(length(V1)) -> a__U61(a__isNatIListKind(V1))
   a__isNatKind(s(V1)) -> a__U71(a__isNatKind(V1))
   a__isNatList(nil) -> tt
   a__isNatList(cons(V1, V2)) -> a__U81(a__isNatKind(V1), V1, V2)
   a__length(nil) -> 0
   a__length(cons(N, L)) -> a__U91(a__isNatList(L), L, N)
   mark(zeros) -> a__zeros
   mark(U11(X1, X2)) -> a__U11(mark(X1), X2)
   mark(U12(X1, X2)) -> a__U12(mark(X1), X2)
   mark(isNatIListKind(X)) -> a__isNatIListKind(X)
   mark(U13(X)) -> a__U13(mark(X))
   mark(isNatList(X)) -> a__isNatList(X)
   mark(U21(X1, X2)) -> a__U21(mark(X1), X2)
   mark(U22(X1, X2)) -> a__U22(mark(X1), X2)
   mark(isNatKind(X)) -> a__isNatKind(X)
   mark(U23(X)) -> a__U23(mark(X))
   mark(isNat(X)) -> a__isNat(X)
   mark(U31(X1, X2)) -> a__U31(mark(X1), X2)
   mark(U32(X1, X2)) -> a__U32(mark(X1), X2)
   mark(U33(X)) -> a__U33(mark(X))
   mark(U41(X1, X2, X3)) -> a__U41(mark(X1), X2, X3)
   mark(U42(X1, X2, X3)) -> a__U42(mark(X1), X2, X3)
   mark(U43(X1, X2, X3)) -> a__U43(mark(X1), X2, X3)
   mark(U44(X1, X2, X3)) -> a__U44(mark(X1), X2, X3)
   mark(U45(X1, X2)) -> a__U45(mark(X1), X2)
   mark(U46(X)) -> a__U46(mark(X))
   mark(isNatIList(X)) -> a__isNatIList(X)
   mark(U51(X1, X2)) -> a__U51(mark(X1), X2)
   mark(U52(X)) -> a__U52(mark(X))
   mark(U61(X)) -> a__U61(mark(X))
   mark(U71(X)) -> a__U71(mark(X))
   mark(U81(X1, X2, X3)) -> a__U81(mark(X1), X2, X3)
   mark(U82(X1, X2, X3)) -> a__U82(mark(X1), X2, X3)
   mark(U83(X1, X2, X3)) -> a__U83(mark(X1), X2, X3)
   mark(U84(X1, X2, X3)) -> a__U84(mark(X1), X2, X3)
   mark(U85(X1, X2)) -> a__U85(mark(X1), X2)
   mark(U86(X)) -> a__U86(mark(X))
   mark(U91(X1, X2, X3)) -> a__U91(mark(X1), X2, X3)
   mark(U92(X1, X2, X3)) -> a__U92(mark(X1), X2, X3)
   mark(U93(X1, X2, X3)) -> a__U93(mark(X1), X2, X3)
   mark(U94(X1, X2)) -> a__U94(mark(X1), X2)
   mark(length(X)) -> a__length(mark(X))
   mark(cons(X1, X2)) -> cons(mark(X1), X2)
   mark(0) -> 0
   mark(tt) -> tt
   mark(s(X)) -> s(mark(X))
   mark(nil) -> nil
   a__zeros -> zeros
   a__U11(X1, X2) -> U11(X1, X2)
   a__U12(X1, X2) -> U12(X1, X2)
   a__isNatIListKind(X) -> isNatIListKind(X)
   a__U13(X) -> U13(X)
   a__isNatList(X) -> isNatList(X)
   a__U21(X1, X2) -> U21(X1, X2)
   a__U22(X1, X2) -> U22(X1, X2)
   a__isNatKind(X) -> isNatKind(X)
   a__U23(X) -> U23(X)
   a__isNat(X) -> isNat(X)
   a__U31(X1, X2) -> U31(X1, X2)
   a__U32(X1, X2) -> U32(X1, X2)
   a__U33(X) -> U33(X)
   a__U41(X1, X2, X3) -> U41(X1, X2, X3)
   a__U42(X1, X2, X3) -> U42(X1, X2, X3)
   a__U43(X1, X2, X3) -> U43(X1, X2, X3)
   a__U44(X1, X2, X3) -> U44(X1, X2, X3)
   a__U45(X1, X2) -> U45(X1, X2)
   a__U46(X) -> U46(X)
   a__isNatIList(X) -> isNatIList(X)
   a__U51(X1, X2) -> U51(X1, X2)
   a__U52(X) -> U52(X)
   a__U61(X) -> U61(X)
   a__U71(X) -> U71(X)
   a__U81(X1, X2, X3) -> U81(X1, X2, X3)
   a__U82(X1, X2, X3) -> U82(X1, X2, X3)
   a__U83(X1, X2, X3) -> U83(X1, X2, X3)
   a__U84(X1, X2, X3) -> U84(X1, X2, X3)
   a__U85(X1, X2) -> U85(X1, X2)
   a__U86(X) -> U86(X)
   a__U91(X1, X2, X3) -> U91(X1, X2, X3)
   a__U92(X1, X2, X3) -> U92(X1, X2, X3)
   a__U93(X1, X2, X3) -> U93(X1, X2, X3)
   a__U94(X1, X2) -> U94(X1, X2)
   a__length(X) -> length(X)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 4 SCCs with 61 less nodes.
----------------------------------------

(4)
Complex Obligation (AND)

----------------------------------------

(5)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A__U51(tt, V2) -> A__ISNATILISTKIND(V2)
   A__ISNATILISTKIND(cons(V1, V2)) -> A__U51(a__isNatKind(V1), V2)
   A__ISNATILISTKIND(cons(V1, V2)) -> A__ISNATKIND(V1)
   A__ISNATKIND(length(V1)) -> A__ISNATILISTKIND(V1)
   A__ISNATKIND(s(V1)) -> A__ISNATKIND(V1)

The TRS R consists of the following rules:

   a__zeros -> cons(0, zeros)
   a__U11(tt, V1) -> a__U12(a__isNatIListKind(V1), V1)
   a__U12(tt, V1) -> a__U13(a__isNatList(V1))
   a__U13(tt) -> tt
   a__U21(tt, V1) -> a__U22(a__isNatKind(V1), V1)
   a__U22(tt, V1) -> a__U23(a__isNat(V1))
   a__U23(tt) -> tt
   a__U31(tt, V) -> a__U32(a__isNatIListKind(V), V)
   a__U32(tt, V) -> a__U33(a__isNatList(V))
   a__U33(tt) -> tt
   a__U41(tt, V1, V2) -> a__U42(a__isNatKind(V1), V1, V2)
   a__U42(tt, V1, V2) -> a__U43(a__isNatIListKind(V2), V1, V2)
   a__U43(tt, V1, V2) -> a__U44(a__isNatIListKind(V2), V1, V2)
   a__U44(tt, V1, V2) -> a__U45(a__isNat(V1), V2)
   a__U45(tt, V2) -> a__U46(a__isNatIList(V2))
   a__U46(tt) -> tt
   a__U51(tt, V2) -> a__U52(a__isNatIListKind(V2))
   a__U52(tt) -> tt
   a__U61(tt) -> tt
   a__U71(tt) -> tt
   a__U81(tt, V1, V2) -> a__U82(a__isNatKind(V1), V1, V2)
   a__U82(tt, V1, V2) -> a__U83(a__isNatIListKind(V2), V1, V2)
   a__U83(tt, V1, V2) -> a__U84(a__isNatIListKind(V2), V1, V2)
   a__U84(tt, V1, V2) -> a__U85(a__isNat(V1), V2)
   a__U85(tt, V2) -> a__U86(a__isNatList(V2))
   a__U86(tt) -> tt
   a__U91(tt, L, N) -> a__U92(a__isNatIListKind(L), L, N)
   a__U92(tt, L, N) -> a__U93(a__isNat(N), L, N)
   a__U93(tt, L, N) -> a__U94(a__isNatKind(N), L)
   a__U94(tt, L) -> s(a__length(mark(L)))
   a__isNat(0) -> tt
   a__isNat(length(V1)) -> a__U11(a__isNatIListKind(V1), V1)
   a__isNat(s(V1)) -> a__U21(a__isNatKind(V1), V1)
   a__isNatIList(V) -> a__U31(a__isNatIListKind(V), V)
   a__isNatIList(zeros) -> tt
   a__isNatIList(cons(V1, V2)) -> a__U41(a__isNatKind(V1), V1, V2)
   a__isNatIListKind(nil) -> tt
   a__isNatIListKind(zeros) -> tt
   a__isNatIListKind(cons(V1, V2)) -> a__U51(a__isNatKind(V1), V2)
   a__isNatKind(0) -> tt
   a__isNatKind(length(V1)) -> a__U61(a__isNatIListKind(V1))
   a__isNatKind(s(V1)) -> a__U71(a__isNatKind(V1))
   a__isNatList(nil) -> tt
   a__isNatList(cons(V1, V2)) -> a__U81(a__isNatKind(V1), V1, V2)
   a__length(nil) -> 0
   a__length(cons(N, L)) -> a__U91(a__isNatList(L), L, N)
   mark(zeros) -> a__zeros
   mark(U11(X1, X2)) -> a__U11(mark(X1), X2)
   mark(U12(X1, X2)) -> a__U12(mark(X1), X2)
   mark(isNatIListKind(X)) -> a__isNatIListKind(X)
   mark(U13(X)) -> a__U13(mark(X))
   mark(isNatList(X)) -> a__isNatList(X)
   mark(U21(X1, X2)) -> a__U21(mark(X1), X2)
   mark(U22(X1, X2)) -> a__U22(mark(X1), X2)
   mark(isNatKind(X)) -> a__isNatKind(X)
   mark(U23(X)) -> a__U23(mark(X))
   mark(isNat(X)) -> a__isNat(X)
   mark(U31(X1, X2)) -> a__U31(mark(X1), X2)
   mark(U32(X1, X2)) -> a__U32(mark(X1), X2)
   mark(U33(X)) -> a__U33(mark(X))
   mark(U41(X1, X2, X3)) -> a__U41(mark(X1), X2, X3)
   mark(U42(X1, X2, X3)) -> a__U42(mark(X1), X2, X3)
   mark(U43(X1, X2, X3)) -> a__U43(mark(X1), X2, X3)
   mark(U44(X1, X2, X3)) -> a__U44(mark(X1), X2, X3)
   mark(U45(X1, X2)) -> a__U45(mark(X1), X2)
   mark(U46(X)) -> a__U46(mark(X))
   mark(isNatIList(X)) -> a__isNatIList(X)
   mark(U51(X1, X2)) -> a__U51(mark(X1), X2)
   mark(U52(X)) -> a__U52(mark(X))
   mark(U61(X)) -> a__U61(mark(X))
   mark(U71(X)) -> a__U71(mark(X))
   mark(U81(X1, X2, X3)) -> a__U81(mark(X1), X2, X3)
   mark(U82(X1, X2, X3)) -> a__U82(mark(X1), X2, X3)
   mark(U83(X1, X2, X3)) -> a__U83(mark(X1), X2, X3)
   mark(U84(X1, X2, X3)) -> a__U84(mark(X1), X2, X3)
   mark(U85(X1, X2)) -> a__U85(mark(X1), X2)
   mark(U86(X)) -> a__U86(mark(X))
   mark(U91(X1, X2, X3)) -> a__U91(mark(X1), X2, X3)
   mark(U92(X1, X2, X3)) -> a__U92(mark(X1), X2, X3)
   mark(U93(X1, X2, X3)) -> a__U93(mark(X1), X2, X3)
   mark(U94(X1, X2)) -> a__U94(mark(X1), X2)
   mark(length(X)) -> a__length(mark(X))
   mark(cons(X1, X2)) -> cons(mark(X1), X2)
   mark(0) -> 0
   mark(tt) -> tt
   mark(s(X)) -> s(mark(X))
   mark(nil) -> nil
   a__zeros -> zeros
   a__U11(X1, X2) -> U11(X1, X2)
   a__U12(X1, X2) -> U12(X1, X2)
   a__isNatIListKind(X) -> isNatIListKind(X)
   a__U13(X) -> U13(X)
   a__isNatList(X) -> isNatList(X)
   a__U21(X1, X2) -> U21(X1, X2)
   a__U22(X1, X2) -> U22(X1, X2)
   a__isNatKind(X) -> isNatKind(X)
   a__U23(X) -> U23(X)
   a__isNat(X) -> isNat(X)
   a__U31(X1, X2) -> U31(X1, X2)
   a__U32(X1, X2) -> U32(X1, X2)
   a__U33(X) -> U33(X)
   a__U41(X1, X2, X3) -> U41(X1, X2, X3)
   a__U42(X1, X2, X3) -> U42(X1, X2, X3)
   a__U43(X1, X2, X3) -> U43(X1, X2, X3)
   a__U44(X1, X2, X3) -> U44(X1, X2, X3)
   a__U45(X1, X2) -> U45(X1, X2)
   a__U46(X) -> U46(X)
   a__isNatIList(X) -> isNatIList(X)
   a__U51(X1, X2) -> U51(X1, X2)
   a__U52(X) -> U52(X)
   a__U61(X) -> U61(X)
   a__U71(X) -> U71(X)
   a__U81(X1, X2, X3) -> U81(X1, X2, X3)
   a__U82(X1, X2, X3) -> U82(X1, X2, X3)
   a__U83(X1, X2, X3) -> U83(X1, X2, X3)
   a__U84(X1, X2, X3) -> U84(X1, X2, X3)
   a__U85(X1, X2) -> U85(X1, X2)
   a__U86(X) -> U86(X)
   a__U91(X1, X2, X3) -> U91(X1, X2, X3)
   a__U92(X1, X2, X3) -> U92(X1, X2, X3)
   a__U93(X1, X2, X3) -> U93(X1, X2, X3)
   a__U94(X1, X2) -> U94(X1, X2)
   a__length(X) -> length(X)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(6) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(7)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A__U51(tt, V2) -> A__ISNATILISTKIND(V2)
   A__ISNATILISTKIND(cons(V1, V2)) -> A__U51(a__isNatKind(V1), V2)
   A__ISNATILISTKIND(cons(V1, V2)) -> A__ISNATKIND(V1)
   A__ISNATKIND(length(V1)) -> A__ISNATILISTKIND(V1)
   A__ISNATKIND(s(V1)) -> A__ISNATKIND(V1)

The TRS R consists of the following rules:

   a__isNatKind(0) -> tt
   a__isNatKind(length(V1)) -> a__U61(a__isNatIListKind(V1))
   a__isNatKind(s(V1)) -> a__U71(a__isNatKind(V1))
   a__isNatKind(X) -> isNatKind(X)
   a__U71(tt) -> tt
   a__U71(X) -> U71(X)
   a__isNatIListKind(nil) -> tt
   a__isNatIListKind(zeros) -> tt
   a__isNatIListKind(cons(V1, V2)) -> a__U51(a__isNatKind(V1), V2)
   a__isNatIListKind(X) -> isNatIListKind(X)
   a__U61(tt) -> tt
   a__U61(X) -> U61(X)
   a__U51(tt, V2) -> a__U52(a__isNatIListKind(V2))
   a__U51(X1, X2) -> U51(X1, X2)
   a__U52(tt) -> tt
   a__U52(X) -> U52(X)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(8) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*A__ISNATILISTKIND(cons(V1, V2)) -> A__U51(a__isNatKind(V1), V2)
The graph contains the following edges 1 > 2


*A__ISNATILISTKIND(cons(V1, V2)) -> A__ISNATKIND(V1)
The graph contains the following edges 1 > 1


*A__U51(tt, V2) -> A__ISNATILISTKIND(V2)
The graph contains the following edges 2 >= 1


*A__ISNATKIND(length(V1)) -> A__ISNATILISTKIND(V1)
The graph contains the following edges 1 > 1


*A__ISNATKIND(s(V1)) -> A__ISNATKIND(V1)
The graph contains the following edges 1 > 1


----------------------------------------

(9)
YES

----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A__U12(tt, V1) -> A__ISNATLIST(V1)
   A__ISNATLIST(cons(V1, V2)) -> A__U81(a__isNatKind(V1), V1, V2)
   A__U81(tt, V1, V2) -> A__U82(a__isNatKind(V1), V1, V2)
   A__U82(tt, V1, V2) -> A__U83(a__isNatIListKind(V2), V1, V2)
   A__U83(tt, V1, V2) -> A__U84(a__isNatIListKind(V2), V1, V2)
   A__U84(tt, V1, V2) -> A__U85(a__isNat(V1), V2)
   A__U85(tt, V2) -> A__ISNATLIST(V2)
   A__U84(tt, V1, V2) -> A__ISNAT(V1)
   A__ISNAT(length(V1)) -> A__U11(a__isNatIListKind(V1), V1)
   A__U11(tt, V1) -> A__U12(a__isNatIListKind(V1), V1)
   A__ISNAT(s(V1)) -> A__U21(a__isNatKind(V1), V1)
   A__U21(tt, V1) -> A__U22(a__isNatKind(V1), V1)
   A__U22(tt, V1) -> A__ISNAT(V1)

The TRS R consists of the following rules:

   a__zeros -> cons(0, zeros)
   a__U11(tt, V1) -> a__U12(a__isNatIListKind(V1), V1)
   a__U12(tt, V1) -> a__U13(a__isNatList(V1))
   a__U13(tt) -> tt
   a__U21(tt, V1) -> a__U22(a__isNatKind(V1), V1)
   a__U22(tt, V1) -> a__U23(a__isNat(V1))
   a__U23(tt) -> tt
   a__U31(tt, V) -> a__U32(a__isNatIListKind(V), V)
   a__U32(tt, V) -> a__U33(a__isNatList(V))
   a__U33(tt) -> tt
   a__U41(tt, V1, V2) -> a__U42(a__isNatKind(V1), V1, V2)
   a__U42(tt, V1, V2) -> a__U43(a__isNatIListKind(V2), V1, V2)
   a__U43(tt, V1, V2) -> a__U44(a__isNatIListKind(V2), V1, V2)
   a__U44(tt, V1, V2) -> a__U45(a__isNat(V1), V2)
   a__U45(tt, V2) -> a__U46(a__isNatIList(V2))
   a__U46(tt) -> tt
   a__U51(tt, V2) -> a__U52(a__isNatIListKind(V2))
   a__U52(tt) -> tt
   a__U61(tt) -> tt
   a__U71(tt) -> tt
   a__U81(tt, V1, V2) -> a__U82(a__isNatKind(V1), V1, V2)
   a__U82(tt, V1, V2) -> a__U83(a__isNatIListKind(V2), V1, V2)
   a__U83(tt, V1, V2) -> a__U84(a__isNatIListKind(V2), V1, V2)
   a__U84(tt, V1, V2) -> a__U85(a__isNat(V1), V2)
   a__U85(tt, V2) -> a__U86(a__isNatList(V2))
   a__U86(tt) -> tt
   a__U91(tt, L, N) -> a__U92(a__isNatIListKind(L), L, N)
   a__U92(tt, L, N) -> a__U93(a__isNat(N), L, N)
   a__U93(tt, L, N) -> a__U94(a__isNatKind(N), L)
   a__U94(tt, L) -> s(a__length(mark(L)))
   a__isNat(0) -> tt
   a__isNat(length(V1)) -> a__U11(a__isNatIListKind(V1), V1)
   a__isNat(s(V1)) -> a__U21(a__isNatKind(V1), V1)
   a__isNatIList(V) -> a__U31(a__isNatIListKind(V), V)
   a__isNatIList(zeros) -> tt
   a__isNatIList(cons(V1, V2)) -> a__U41(a__isNatKind(V1), V1, V2)
   a__isNatIListKind(nil) -> tt
   a__isNatIListKind(zeros) -> tt
   a__isNatIListKind(cons(V1, V2)) -> a__U51(a__isNatKind(V1), V2)
   a__isNatKind(0) -> tt
   a__isNatKind(length(V1)) -> a__U61(a__isNatIListKind(V1))
   a__isNatKind(s(V1)) -> a__U71(a__isNatKind(V1))
   a__isNatList(nil) -> tt
   a__isNatList(cons(V1, V2)) -> a__U81(a__isNatKind(V1), V1, V2)
   a__length(nil) -> 0
   a__length(cons(N, L)) -> a__U91(a__isNatList(L), L, N)
   mark(zeros) -> a__zeros
   mark(U11(X1, X2)) -> a__U11(mark(X1), X2)
   mark(U12(X1, X2)) -> a__U12(mark(X1), X2)
   mark(isNatIListKind(X)) -> a__isNatIListKind(X)
   mark(U13(X)) -> a__U13(mark(X))
   mark(isNatList(X)) -> a__isNatList(X)
   mark(U21(X1, X2)) -> a__U21(mark(X1), X2)
   mark(U22(X1, X2)) -> a__U22(mark(X1), X2)
   mark(isNatKind(X)) -> a__isNatKind(X)
   mark(U23(X)) -> a__U23(mark(X))
   mark(isNat(X)) -> a__isNat(X)
   mark(U31(X1, X2)) -> a__U31(mark(X1), X2)
   mark(U32(X1, X2)) -> a__U32(mark(X1), X2)
   mark(U33(X)) -> a__U33(mark(X))
   mark(U41(X1, X2, X3)) -> a__U41(mark(X1), X2, X3)
   mark(U42(X1, X2, X3)) -> a__U42(mark(X1), X2, X3)
   mark(U43(X1, X2, X3)) -> a__U43(mark(X1), X2, X3)
   mark(U44(X1, X2, X3)) -> a__U44(mark(X1), X2, X3)
   mark(U45(X1, X2)) -> a__U45(mark(X1), X2)
   mark(U46(X)) -> a__U46(mark(X))
   mark(isNatIList(X)) -> a__isNatIList(X)
   mark(U51(X1, X2)) -> a__U51(mark(X1), X2)
   mark(U52(X)) -> a__U52(mark(X))
   mark(U61(X)) -> a__U61(mark(X))
   mark(U71(X)) -> a__U71(mark(X))
   mark(U81(X1, X2, X3)) -> a__U81(mark(X1), X2, X3)
   mark(U82(X1, X2, X3)) -> a__U82(mark(X1), X2, X3)
   mark(U83(X1, X2, X3)) -> a__U83(mark(X1), X2, X3)
   mark(U84(X1, X2, X3)) -> a__U84(mark(X1), X2, X3)
   mark(U85(X1, X2)) -> a__U85(mark(X1), X2)
   mark(U86(X)) -> a__U86(mark(X))
   mark(U91(X1, X2, X3)) -> a__U91(mark(X1), X2, X3)
   mark(U92(X1, X2, X3)) -> a__U92(mark(X1), X2, X3)
   mark(U93(X1, X2, X3)) -> a__U93(mark(X1), X2, X3)
   mark(U94(X1, X2)) -> a__U94(mark(X1), X2)
   mark(length(X)) -> a__length(mark(X))
   mark(cons(X1, X2)) -> cons(mark(X1), X2)
   mark(0) -> 0
   mark(tt) -> tt
   mark(s(X)) -> s(mark(X))
   mark(nil) -> nil
   a__zeros -> zeros
   a__U11(X1, X2) -> U11(X1, X2)
   a__U12(X1, X2) -> U12(X1, X2)
   a__isNatIListKind(X) -> isNatIListKind(X)
   a__U13(X) -> U13(X)
   a__isNatList(X) -> isNatList(X)
   a__U21(X1, X2) -> U21(X1, X2)
   a__U22(X1, X2) -> U22(X1, X2)
   a__isNatKind(X) -> isNatKind(X)
   a__U23(X) -> U23(X)
   a__isNat(X) -> isNat(X)
   a__U31(X1, X2) -> U31(X1, X2)
   a__U32(X1, X2) -> U32(X1, X2)
   a__U33(X) -> U33(X)
   a__U41(X1, X2, X3) -> U41(X1, X2, X3)
   a__U42(X1, X2, X3) -> U42(X1, X2, X3)
   a__U43(X1, X2, X3) -> U43(X1, X2, X3)
   a__U44(X1, X2, X3) -> U44(X1, X2, X3)
   a__U45(X1, X2) -> U45(X1, X2)
   a__U46(X) -> U46(X)
   a__isNatIList(X) -> isNatIList(X)
   a__U51(X1, X2) -> U51(X1, X2)
   a__U52(X) -> U52(X)
   a__U61(X) -> U61(X)
   a__U71(X) -> U71(X)
   a__U81(X1, X2, X3) -> U81(X1, X2, X3)
   a__U82(X1, X2, X3) -> U82(X1, X2, X3)
   a__U83(X1, X2, X3) -> U83(X1, X2, X3)
   a__U84(X1, X2, X3) -> U84(X1, X2, X3)
   a__U85(X1, X2) -> U85(X1, X2)
   a__U86(X) -> U86(X)
   a__U91(X1, X2, X3) -> U91(X1, X2, X3)
   a__U92(X1, X2, X3) -> U92(X1, X2, X3)
   a__U93(X1, X2, X3) -> U93(X1, X2, X3)
   a__U94(X1, X2) -> U94(X1, X2)
   a__length(X) -> length(X)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*A__ISNATLIST(cons(V1, V2)) -> A__U81(a__isNatKind(V1), V1, V2)
The graph contains the following edges 1 > 2, 1 > 3


*A__U11(tt, V1) -> A__U12(a__isNatIListKind(V1), V1)
The graph contains the following edges 2 >= 2


*A__U81(tt, V1, V2) -> A__U82(a__isNatKind(V1), V1, V2)
The graph contains the following edges 2 >= 2, 3 >= 3


*A__U82(tt, V1, V2) -> A__U83(a__isNatIListKind(V2), V1, V2)
The graph contains the following edges 2 >= 2, 3 >= 3


*A__U83(tt, V1, V2) -> A__U84(a__isNatIListKind(V2), V1, V2)
The graph contains the following edges 2 >= 2, 3 >= 3


*A__U85(tt, V2) -> A__ISNATLIST(V2)
The graph contains the following edges 2 >= 1


*A__U12(tt, V1) -> A__ISNATLIST(V1)
The graph contains the following edges 2 >= 1


*A__U84(tt, V1, V2) -> A__U85(a__isNat(V1), V2)
The graph contains the following edges 3 >= 2


*A__U84(tt, V1, V2) -> A__ISNAT(V1)
The graph contains the following edges 2 >= 1


*A__U22(tt, V1) -> A__ISNAT(V1)
The graph contains the following edges 2 >= 1


*A__U21(tt, V1) -> A__U22(a__isNatKind(V1), V1)
The graph contains the following edges 2 >= 2


*A__ISNAT(length(V1)) -> A__U11(a__isNatIListKind(V1), V1)
The graph contains the following edges 1 > 2


*A__ISNAT(s(V1)) -> A__U21(a__isNatKind(V1), V1)
The graph contains the following edges 1 > 2


----------------------------------------

(12)
YES

----------------------------------------

(13)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A__U44(tt, V1, V2) -> A__U45(a__isNat(V1), V2)
   A__U45(tt, V2) -> A__ISNATILIST(V2)
   A__ISNATILIST(cons(V1, V2)) -> A__U41(a__isNatKind(V1), V1, V2)
   A__U41(tt, V1, V2) -> A__U42(a__isNatKind(V1), V1, V2)
   A__U42(tt, V1, V2) -> A__U43(a__isNatIListKind(V2), V1, V2)
   A__U43(tt, V1, V2) -> A__U44(a__isNatIListKind(V2), V1, V2)

The TRS R consists of the following rules:

   a__zeros -> cons(0, zeros)
   a__U11(tt, V1) -> a__U12(a__isNatIListKind(V1), V1)
   a__U12(tt, V1) -> a__U13(a__isNatList(V1))
   a__U13(tt) -> tt
   a__U21(tt, V1) -> a__U22(a__isNatKind(V1), V1)
   a__U22(tt, V1) -> a__U23(a__isNat(V1))
   a__U23(tt) -> tt
   a__U31(tt, V) -> a__U32(a__isNatIListKind(V), V)
   a__U32(tt, V) -> a__U33(a__isNatList(V))
   a__U33(tt) -> tt
   a__U41(tt, V1, V2) -> a__U42(a__isNatKind(V1), V1, V2)
   a__U42(tt, V1, V2) -> a__U43(a__isNatIListKind(V2), V1, V2)
   a__U43(tt, V1, V2) -> a__U44(a__isNatIListKind(V2), V1, V2)
   a__U44(tt, V1, V2) -> a__U45(a__isNat(V1), V2)
   a__U45(tt, V2) -> a__U46(a__isNatIList(V2))
   a__U46(tt) -> tt
   a__U51(tt, V2) -> a__U52(a__isNatIListKind(V2))
   a__U52(tt) -> tt
   a__U61(tt) -> tt
   a__U71(tt) -> tt
   a__U81(tt, V1, V2) -> a__U82(a__isNatKind(V1), V1, V2)
   a__U82(tt, V1, V2) -> a__U83(a__isNatIListKind(V2), V1, V2)
   a__U83(tt, V1, V2) -> a__U84(a__isNatIListKind(V2), V1, V2)
   a__U84(tt, V1, V2) -> a__U85(a__isNat(V1), V2)
   a__U85(tt, V2) -> a__U86(a__isNatList(V2))
   a__U86(tt) -> tt
   a__U91(tt, L, N) -> a__U92(a__isNatIListKind(L), L, N)
   a__U92(tt, L, N) -> a__U93(a__isNat(N), L, N)
   a__U93(tt, L, N) -> a__U94(a__isNatKind(N), L)
   a__U94(tt, L) -> s(a__length(mark(L)))
   a__isNat(0) -> tt
   a__isNat(length(V1)) -> a__U11(a__isNatIListKind(V1), V1)
   a__isNat(s(V1)) -> a__U21(a__isNatKind(V1), V1)
   a__isNatIList(V) -> a__U31(a__isNatIListKind(V), V)
   a__isNatIList(zeros) -> tt
   a__isNatIList(cons(V1, V2)) -> a__U41(a__isNatKind(V1), V1, V2)
   a__isNatIListKind(nil) -> tt
   a__isNatIListKind(zeros) -> tt
   a__isNatIListKind(cons(V1, V2)) -> a__U51(a__isNatKind(V1), V2)
   a__isNatKind(0) -> tt
   a__isNatKind(length(V1)) -> a__U61(a__isNatIListKind(V1))
   a__isNatKind(s(V1)) -> a__U71(a__isNatKind(V1))
   a__isNatList(nil) -> tt
   a__isNatList(cons(V1, V2)) -> a__U81(a__isNatKind(V1), V1, V2)
   a__length(nil) -> 0
   a__length(cons(N, L)) -> a__U91(a__isNatList(L), L, N)
   mark(zeros) -> a__zeros
   mark(U11(X1, X2)) -> a__U11(mark(X1), X2)
   mark(U12(X1, X2)) -> a__U12(mark(X1), X2)
   mark(isNatIListKind(X)) -> a__isNatIListKind(X)
   mark(U13(X)) -> a__U13(mark(X))
   mark(isNatList(X)) -> a__isNatList(X)
   mark(U21(X1, X2)) -> a__U21(mark(X1), X2)
   mark(U22(X1, X2)) -> a__U22(mark(X1), X2)
   mark(isNatKind(X)) -> a__isNatKind(X)
   mark(U23(X)) -> a__U23(mark(X))
   mark(isNat(X)) -> a__isNat(X)
   mark(U31(X1, X2)) -> a__U31(mark(X1), X2)
   mark(U32(X1, X2)) -> a__U32(mark(X1), X2)
   mark(U33(X)) -> a__U33(mark(X))
   mark(U41(X1, X2, X3)) -> a__U41(mark(X1), X2, X3)
   mark(U42(X1, X2, X3)) -> a__U42(mark(X1), X2, X3)
   mark(U43(X1, X2, X3)) -> a__U43(mark(X1), X2, X3)
   mark(U44(X1, X2, X3)) -> a__U44(mark(X1), X2, X3)
   mark(U45(X1, X2)) -> a__U45(mark(X1), X2)
   mark(U46(X)) -> a__U46(mark(X))
   mark(isNatIList(X)) -> a__isNatIList(X)
   mark(U51(X1, X2)) -> a__U51(mark(X1), X2)
   mark(U52(X)) -> a__U52(mark(X))
   mark(U61(X)) -> a__U61(mark(X))
   mark(U71(X)) -> a__U71(mark(X))
   mark(U81(X1, X2, X3)) -> a__U81(mark(X1), X2, X3)
   mark(U82(X1, X2, X3)) -> a__U82(mark(X1), X2, X3)
   mark(U83(X1, X2, X3)) -> a__U83(mark(X1), X2, X3)
   mark(U84(X1, X2, X3)) -> a__U84(mark(X1), X2, X3)
   mark(U85(X1, X2)) -> a__U85(mark(X1), X2)
   mark(U86(X)) -> a__U86(mark(X))
   mark(U91(X1, X2, X3)) -> a__U91(mark(X1), X2, X3)
   mark(U92(X1, X2, X3)) -> a__U92(mark(X1), X2, X3)
   mark(U93(X1, X2, X3)) -> a__U93(mark(X1), X2, X3)
   mark(U94(X1, X2)) -> a__U94(mark(X1), X2)
   mark(length(X)) -> a__length(mark(X))
   mark(cons(X1, X2)) -> cons(mark(X1), X2)
   mark(0) -> 0
   mark(tt) -> tt
   mark(s(X)) -> s(mark(X))
   mark(nil) -> nil
   a__zeros -> zeros
   a__U11(X1, X2) -> U11(X1, X2)
   a__U12(X1, X2) -> U12(X1, X2)
   a__isNatIListKind(X) -> isNatIListKind(X)
   a__U13(X) -> U13(X)
   a__isNatList(X) -> isNatList(X)
   a__U21(X1, X2) -> U21(X1, X2)
   a__U22(X1, X2) -> U22(X1, X2)
   a__isNatKind(X) -> isNatKind(X)
   a__U23(X) -> U23(X)
   a__isNat(X) -> isNat(X)
   a__U31(X1, X2) -> U31(X1, X2)
   a__U32(X1, X2) -> U32(X1, X2)
   a__U33(X) -> U33(X)
   a__U41(X1, X2, X3) -> U41(X1, X2, X3)
   a__U42(X1, X2, X3) -> U42(X1, X2, X3)
   a__U43(X1, X2, X3) -> U43(X1, X2, X3)
   a__U44(X1, X2, X3) -> U44(X1, X2, X3)
   a__U45(X1, X2) -> U45(X1, X2)
   a__U46(X) -> U46(X)
   a__isNatIList(X) -> isNatIList(X)
   a__U51(X1, X2) -> U51(X1, X2)
   a__U52(X) -> U52(X)
   a__U61(X) -> U61(X)
   a__U71(X) -> U71(X)
   a__U81(X1, X2, X3) -> U81(X1, X2, X3)
   a__U82(X1, X2, X3) -> U82(X1, X2, X3)
   a__U83(X1, X2, X3) -> U83(X1, X2, X3)
   a__U84(X1, X2, X3) -> U84(X1, X2, X3)
   a__U85(X1, X2) -> U85(X1, X2)
   a__U86(X) -> U86(X)
   a__U91(X1, X2, X3) -> U91(X1, X2, X3)
   a__U92(X1, X2, X3) -> U92(X1, X2, X3)
   a__U93(X1, X2, X3) -> U93(X1, X2, X3)
   a__U94(X1, X2) -> U94(X1, X2)
   a__length(X) -> length(X)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(14) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*A__U45(tt, V2) -> A__ISNATILIST(V2)
The graph contains the following edges 2 >= 1


*A__U43(tt, V1, V2) -> A__U44(a__isNatIListKind(V2), V1, V2)
The graph contains the following edges 2 >= 2, 3 >= 3


*A__ISNATILIST(cons(V1, V2)) -> A__U41(a__isNatKind(V1), V1, V2)
The graph contains the following edges 1 > 2, 1 > 3


*A__U44(tt, V1, V2) -> A__U45(a__isNat(V1), V2)
The graph contains the following edges 3 >= 2


*A__U41(tt, V1, V2) -> A__U42(a__isNatKind(V1), V1, V2)
The graph contains the following edges 2 >= 2, 3 >= 3


*A__U42(tt, V1, V2) -> A__U43(a__isNatIListKind(V2), V1, V2)
The graph contains the following edges 2 >= 2, 3 >= 3


----------------------------------------

(15)
YES

----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(U11(X1, X2)) -> MARK(X1)
   MARK(U12(X1, X2)) -> MARK(X1)
   MARK(U13(X)) -> MARK(X)
   MARK(U21(X1, X2)) -> MARK(X1)
   MARK(U22(X1, X2)) -> MARK(X1)
   MARK(U23(X)) -> MARK(X)
   MARK(U31(X1, X2)) -> MARK(X1)
   MARK(U32(X1, X2)) -> MARK(X1)
   MARK(U33(X)) -> MARK(X)
   MARK(U41(X1, X2, X3)) -> MARK(X1)
   MARK(U42(X1, X2, X3)) -> MARK(X1)
   MARK(U43(X1, X2, X3)) -> MARK(X1)
   MARK(U44(X1, X2, X3)) -> MARK(X1)
   MARK(U45(X1, X2)) -> MARK(X1)
   MARK(U46(X)) -> MARK(X)
   MARK(U51(X1, X2)) -> MARK(X1)
   MARK(U52(X)) -> MARK(X)
   MARK(U61(X)) -> MARK(X)
   MARK(U71(X)) -> MARK(X)
   MARK(U81(X1, X2, X3)) -> MARK(X1)
   MARK(U82(X1, X2, X3)) -> MARK(X1)
   MARK(U83(X1, X2, X3)) -> MARK(X1)
   MARK(U84(X1, X2, X3)) -> MARK(X1)
   MARK(U85(X1, X2)) -> MARK(X1)
   MARK(U86(X)) -> MARK(X)
   MARK(U91(X1, X2, X3)) -> A__U91(mark(X1), X2, X3)
   A__U91(tt, L, N) -> A__U92(a__isNatIListKind(L), L, N)
   A__U92(tt, L, N) -> A__U93(a__isNat(N), L, N)
   A__U93(tt, L, N) -> A__U94(a__isNatKind(N), L)
   A__U94(tt, L) -> A__LENGTH(mark(L))
   A__LENGTH(cons(N, L)) -> A__U91(a__isNatList(L), L, N)
   A__U94(tt, L) -> MARK(L)
   MARK(U91(X1, X2, X3)) -> MARK(X1)
   MARK(U92(X1, X2, X3)) -> A__U92(mark(X1), X2, X3)
   MARK(U92(X1, X2, X3)) -> MARK(X1)
   MARK(U93(X1, X2, X3)) -> A__U93(mark(X1), X2, X3)
   MARK(U93(X1, X2, X3)) -> MARK(X1)
   MARK(U94(X1, X2)) -> A__U94(mark(X1), X2)
   MARK(U94(X1, X2)) -> MARK(X1)
   MARK(length(X)) -> A__LENGTH(mark(X))
   MARK(length(X)) -> MARK(X)
   MARK(cons(X1, X2)) -> MARK(X1)
   MARK(s(X)) -> MARK(X)

The TRS R consists of the following rules:

   a__zeros -> cons(0, zeros)
   a__U11(tt, V1) -> a__U12(a__isNatIListKind(V1), V1)
   a__U12(tt, V1) -> a__U13(a__isNatList(V1))
   a__U13(tt) -> tt
   a__U21(tt, V1) -> a__U22(a__isNatKind(V1), V1)
   a__U22(tt, V1) -> a__U23(a__isNat(V1))
   a__U23(tt) -> tt
   a__U31(tt, V) -> a__U32(a__isNatIListKind(V), V)
   a__U32(tt, V) -> a__U33(a__isNatList(V))
   a__U33(tt) -> tt
   a__U41(tt, V1, V2) -> a__U42(a__isNatKind(V1), V1, V2)
   a__U42(tt, V1, V2) -> a__U43(a__isNatIListKind(V2), V1, V2)
   a__U43(tt, V1, V2) -> a__U44(a__isNatIListKind(V2), V1, V2)
   a__U44(tt, V1, V2) -> a__U45(a__isNat(V1), V2)
   a__U45(tt, V2) -> a__U46(a__isNatIList(V2))
   a__U46(tt) -> tt
   a__U51(tt, V2) -> a__U52(a__isNatIListKind(V2))
   a__U52(tt) -> tt
   a__U61(tt) -> tt
   a__U71(tt) -> tt
   a__U81(tt, V1, V2) -> a__U82(a__isNatKind(V1), V1, V2)
   a__U82(tt, V1, V2) -> a__U83(a__isNatIListKind(V2), V1, V2)
   a__U83(tt, V1, V2) -> a__U84(a__isNatIListKind(V2), V1, V2)
   a__U84(tt, V1, V2) -> a__U85(a__isNat(V1), V2)
   a__U85(tt, V2) -> a__U86(a__isNatList(V2))
   a__U86(tt) -> tt
   a__U91(tt, L, N) -> a__U92(a__isNatIListKind(L), L, N)
   a__U92(tt, L, N) -> a__U93(a__isNat(N), L, N)
   a__U93(tt, L, N) -> a__U94(a__isNatKind(N), L)
   a__U94(tt, L) -> s(a__length(mark(L)))
   a__isNat(0) -> tt
   a__isNat(length(V1)) -> a__U11(a__isNatIListKind(V1), V1)
   a__isNat(s(V1)) -> a__U21(a__isNatKind(V1), V1)
   a__isNatIList(V) -> a__U31(a__isNatIListKind(V), V)
   a__isNatIList(zeros) -> tt
   a__isNatIList(cons(V1, V2)) -> a__U41(a__isNatKind(V1), V1, V2)
   a__isNatIListKind(nil) -> tt
   a__isNatIListKind(zeros) -> tt
   a__isNatIListKind(cons(V1, V2)) -> a__U51(a__isNatKind(V1), V2)
   a__isNatKind(0) -> tt
   a__isNatKind(length(V1)) -> a__U61(a__isNatIListKind(V1))
   a__isNatKind(s(V1)) -> a__U71(a__isNatKind(V1))
   a__isNatList(nil) -> tt
   a__isNatList(cons(V1, V2)) -> a__U81(a__isNatKind(V1), V1, V2)
   a__length(nil) -> 0
   a__length(cons(N, L)) -> a__U91(a__isNatList(L), L, N)
   mark(zeros) -> a__zeros
   mark(U11(X1, X2)) -> a__U11(mark(X1), X2)
   mark(U12(X1, X2)) -> a__U12(mark(X1), X2)
   mark(isNatIListKind(X)) -> a__isNatIListKind(X)
   mark(U13(X)) -> a__U13(mark(X))
   mark(isNatList(X)) -> a__isNatList(X)
   mark(U21(X1, X2)) -> a__U21(mark(X1), X2)
   mark(U22(X1, X2)) -> a__U22(mark(X1), X2)
   mark(isNatKind(X)) -> a__isNatKind(X)
   mark(U23(X)) -> a__U23(mark(X))
   mark(isNat(X)) -> a__isNat(X)
   mark(U31(X1, X2)) -> a__U31(mark(X1), X2)
   mark(U32(X1, X2)) -> a__U32(mark(X1), X2)
   mark(U33(X)) -> a__U33(mark(X))
   mark(U41(X1, X2, X3)) -> a__U41(mark(X1), X2, X3)
   mark(U42(X1, X2, X3)) -> a__U42(mark(X1), X2, X3)
   mark(U43(X1, X2, X3)) -> a__U43(mark(X1), X2, X3)
   mark(U44(X1, X2, X3)) -> a__U44(mark(X1), X2, X3)
   mark(U45(X1, X2)) -> a__U45(mark(X1), X2)
   mark(U46(X)) -> a__U46(mark(X))
   mark(isNatIList(X)) -> a__isNatIList(X)
   mark(U51(X1, X2)) -> a__U51(mark(X1), X2)
   mark(U52(X)) -> a__U52(mark(X))
   mark(U61(X)) -> a__U61(mark(X))
   mark(U71(X)) -> a__U71(mark(X))
   mark(U81(X1, X2, X3)) -> a__U81(mark(X1), X2, X3)
   mark(U82(X1, X2, X3)) -> a__U82(mark(X1), X2, X3)
   mark(U83(X1, X2, X3)) -> a__U83(mark(X1), X2, X3)
   mark(U84(X1, X2, X3)) -> a__U84(mark(X1), X2, X3)
   mark(U85(X1, X2)) -> a__U85(mark(X1), X2)
   mark(U86(X)) -> a__U86(mark(X))
   mark(U91(X1, X2, X3)) -> a__U91(mark(X1), X2, X3)
   mark(U92(X1, X2, X3)) -> a__U92(mark(X1), X2, X3)
   mark(U93(X1, X2, X3)) -> a__U93(mark(X1), X2, X3)
   mark(U94(X1, X2)) -> a__U94(mark(X1), X2)
   mark(length(X)) -> a__length(mark(X))
   mark(cons(X1, X2)) -> cons(mark(X1), X2)
   mark(0) -> 0
   mark(tt) -> tt
   mark(s(X)) -> s(mark(X))
   mark(nil) -> nil
   a__zeros -> zeros
   a__U11(X1, X2) -> U11(X1, X2)
   a__U12(X1, X2) -> U12(X1, X2)
   a__isNatIListKind(X) -> isNatIListKind(X)
   a__U13(X) -> U13(X)
   a__isNatList(X) -> isNatList(X)
   a__U21(X1, X2) -> U21(X1, X2)
   a__U22(X1, X2) -> U22(X1, X2)
   a__isNatKind(X) -> isNatKind(X)
   a__U23(X) -> U23(X)
   a__isNat(X) -> isNat(X)
   a__U31(X1, X2) -> U31(X1, X2)
   a__U32(X1, X2) -> U32(X1, X2)
   a__U33(X) -> U33(X)
   a__U41(X1, X2, X3) -> U41(X1, X2, X3)
   a__U42(X1, X2, X3) -> U42(X1, X2, X3)
   a__U43(X1, X2, X3) -> U43(X1, X2, X3)
   a__U44(X1, X2, X3) -> U44(X1, X2, X3)
   a__U45(X1, X2) -> U45(X1, X2)
   a__U46(X) -> U46(X)
   a__isNatIList(X) -> isNatIList(X)
   a__U51(X1, X2) -> U51(X1, X2)
   a__U52(X) -> U52(X)
   a__U61(X) -> U61(X)
   a__U71(X) -> U71(X)
   a__U81(X1, X2, X3) -> U81(X1, X2, X3)
   a__U82(X1, X2, X3) -> U82(X1, X2, X3)
   a__U83(X1, X2, X3) -> U83(X1, X2, X3)
   a__U84(X1, X2, X3) -> U84(X1, X2, X3)
   a__U85(X1, X2) -> U85(X1, X2)
   a__U86(X) -> U86(X)
   a__U91(X1, X2, X3) -> U91(X1, X2, X3)
   a__U92(X1, X2, X3) -> U92(X1, X2, X3)
   a__U93(X1, X2, X3) -> U93(X1, X2, X3)
   a__U94(X1, X2) -> U94(X1, X2)
   a__length(X) -> length(X)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   MARK(U91(X1, X2, X3)) -> A__U91(mark(X1), X2, X3)
   MARK(U91(X1, X2, X3)) -> MARK(X1)
   MARK(U92(X1, X2, X3)) -> A__U92(mark(X1), X2, X3)
   MARK(U92(X1, X2, X3)) -> MARK(X1)
   MARK(U93(X1, X2, X3)) -> A__U93(mark(X1), X2, X3)
   MARK(U93(X1, X2, X3)) -> MARK(X1)
   MARK(U94(X1, X2)) -> A__U94(mark(X1), X2)
   MARK(U94(X1, X2)) -> MARK(X1)
   MARK(cons(X1, X2)) -> MARK(X1)
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial Order [NEGPOLO,POLO] with Interpretation:

POL( A__LENGTH_1(x_1) ) = max{0, x_1 - 1}
POL( A__U91_3(x_1, ..., x_3) ) = 2x_2 + x_3 + 1
POL( A__U92_3(x_1, ..., x_3) ) = x_1 + 2x_2 + 1
POL( A__U93_3(x_1, ..., x_3) ) = 2x_2 + 1
POL( A__U94_2(x_1, x_2) ) = 2x_2 + 1
POL( mark_1(x_1) ) = x_1 + 2
POL( zeros ) = 0
POL( a__zeros ) = 2
POL( U11_2(x_1, x_2) ) = x_1
POL( a__U11_2(x_1, x_2) ) = x_1
POL( U12_2(x_1, x_2) ) = x_1
POL( a__U12_2(x_1, x_2) ) = x_1
POL( isNatIListKind_1(x_1) ) = 0
POL( a__isNatIListKind_1(x_1) ) = 0
POL( U13_1(x_1) ) = x_1
POL( a__U13_1(x_1) ) = x_1
POL( isNatList_1(x_1) ) = 0
POL( a__isNatList_1(x_1) ) = 0
POL( U21_2(x_1, x_2) ) = x_1
POL( a__U21_2(x_1, x_2) ) = x_1
POL( U22_2(x_1, x_2) ) = x_1
POL( a__U22_2(x_1, x_2) ) = x_1
POL( isNatKind_1(x_1) ) = 0
POL( a__isNatKind_1(x_1) ) = 0
POL( U23_1(x_1) ) = x_1
POL( a__U23_1(x_1) ) = x_1
POL( isNat_1(x_1) ) = 0
POL( a__isNat_1(x_1) ) = 0
POL( U31_2(x_1, x_2) ) = x_1
POL( a__U31_2(x_1, x_2) ) = x_1
POL( U32_2(x_1, x_2) ) = x_1
POL( a__U32_2(x_1, x_2) ) = x_1
POL( U33_1(x_1) ) = x_1
POL( a__U33_1(x_1) ) = x_1
POL( U41_3(x_1, ..., x_3) ) = x_1
POL( a__U41_3(x_1, ..., x_3) ) = x_1
POL( U42_3(x_1, ..., x_3) ) = x_1
POL( a__U42_3(x_1, ..., x_3) ) = x_1
POL( U43_3(x_1, ..., x_3) ) = x_1
POL( a__U43_3(x_1, ..., x_3) ) = x_1
POL( U44_3(x_1, ..., x_3) ) = x_1
POL( a__U44_3(x_1, ..., x_3) ) = x_1
POL( U45_2(x_1, x_2) ) = x_1
POL( a__U45_2(x_1, x_2) ) = x_1
POL( U46_1(x_1) ) = x_1
POL( a__U46_1(x_1) ) = x_1
POL( isNatIList_1(x_1) ) = 0
POL( a__isNatIList_1(x_1) ) = 0
POL( U51_2(x_1, x_2) ) = x_1
POL( a__U51_2(x_1, x_2) ) = x_1
POL( U52_1(x_1) ) = x_1
POL( a__U52_1(x_1) ) = x_1
POL( U61_1(x_1) ) = x_1
POL( a__U61_1(x_1) ) = x_1
POL( U71_1(x_1) ) = x_1
POL( a__U71_1(x_1) ) = x_1
POL( U81_3(x_1, ..., x_3) ) = x_1
POL( a__U81_3(x_1, ..., x_3) ) = x_1
POL( U82_3(x_1, ..., x_3) ) = x_1
POL( a__U82_3(x_1, ..., x_3) ) = x_1
POL( U83_3(x_1, ..., x_3) ) = x_1
POL( a__U83_3(x_1, ..., x_3) ) = x_1
POL( U84_3(x_1, ..., x_3) ) = x_1
POL( a__U84_3(x_1, ..., x_3) ) = x_1
POL( U85_2(x_1, x_2) ) = x_1
POL( a__U85_2(x_1, x_2) ) = x_1
POL( U86_1(x_1) ) = x_1
POL( a__U86_1(x_1) ) = x_1
POL( U91_3(x_1, ..., x_3) ) = x_1 + 2x_2 + x_3 + 2
POL( a__U91_3(x_1, ..., x_3) ) = x_1 + 2x_2 + x_3 + 2
POL( U92_3(x_1, ..., x_3) ) = x_1 + 2x_2 + 2
POL( a__U92_3(x_1, ..., x_3) ) = x_1 + 2x_2 + 2
POL( U93_3(x_1, ..., x_3) ) = x_1 + 2x_2 + 2
POL( a__U93_3(x_1, ..., x_3) ) = x_1 + 2x_2 + 2
POL( U94_2(x_1, x_2) ) = x_1 + 2x_2 + 2
POL( a__U94_2(x_1, x_2) ) = x_1 + 2x_2 + 2
POL( length_1(x_1) ) = x_1
POL( a__length_1(x_1) ) = x_1
POL( cons_2(x_1, x_2) ) = x_1 + 2x_2 + 2
POL( 0 ) = 0
POL( tt ) = 0
POL( s_1(x_1) ) = x_1
POL( nil ) = 2
POL( MARK_1(x_1) ) = 2x_1 + 1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   mark(zeros) -> a__zeros
   mark(U11(X1, X2)) -> a__U11(mark(X1), X2)
   mark(U12(X1, X2)) -> a__U12(mark(X1), X2)
   mark(isNatIListKind(X)) -> a__isNatIListKind(X)
   mark(U13(X)) -> a__U13(mark(X))
   mark(isNatList(X)) -> a__isNatList(X)
   mark(U21(X1, X2)) -> a__U21(mark(X1), X2)
   mark(U22(X1, X2)) -> a__U22(mark(X1), X2)
   mark(isNatKind(X)) -> a__isNatKind(X)
   mark(U23(X)) -> a__U23(mark(X))
   mark(isNat(X)) -> a__isNat(X)
   mark(U31(X1, X2)) -> a__U31(mark(X1), X2)
   mark(U32(X1, X2)) -> a__U32(mark(X1), X2)
   mark(U33(X)) -> a__U33(mark(X))
   mark(U41(X1, X2, X3)) -> a__U41(mark(X1), X2, X3)
   mark(U42(X1, X2, X3)) -> a__U42(mark(X1), X2, X3)
   mark(U43(X1, X2, X3)) -> a__U43(mark(X1), X2, X3)
   mark(U44(X1, X2, X3)) -> a__U44(mark(X1), X2, X3)
   mark(U45(X1, X2)) -> a__U45(mark(X1), X2)
   mark(U46(X)) -> a__U46(mark(X))
   mark(isNatIList(X)) -> a__isNatIList(X)
   mark(U51(X1, X2)) -> a__U51(mark(X1), X2)
   mark(U52(X)) -> a__U52(mark(X))
   mark(U61(X)) -> a__U61(mark(X))
   mark(U71(X)) -> a__U71(mark(X))
   mark(U81(X1, X2, X3)) -> a__U81(mark(X1), X2, X3)
   mark(U82(X1, X2, X3)) -> a__U82(mark(X1), X2, X3)
   mark(U83(X1, X2, X3)) -> a__U83(mark(X1), X2, X3)
   mark(U84(X1, X2, X3)) -> a__U84(mark(X1), X2, X3)
   mark(U85(X1, X2)) -> a__U85(mark(X1), X2)
   mark(U86(X)) -> a__U86(mark(X))
   mark(U91(X1, X2, X3)) -> a__U91(mark(X1), X2, X3)
   mark(U92(X1, X2, X3)) -> a__U92(mark(X1), X2, X3)
   mark(U93(X1, X2, X3)) -> a__U93(mark(X1), X2, X3)
   mark(U94(X1, X2)) -> a__U94(mark(X1), X2)
   mark(length(X)) -> a__length(mark(X))
   mark(cons(X1, X2)) -> cons(mark(X1), X2)
   mark(0) -> 0
   mark(tt) -> tt
   mark(s(X)) -> s(mark(X))
   mark(nil) -> nil
   a__isNatIListKind(nil) -> tt
   a__isNatIListKind(zeros) -> tt
   a__isNatIListKind(cons(V1, V2)) -> a__U51(a__isNatKind(V1), V2)
   a__isNatIListKind(X) -> isNatIListKind(X)
   a__isNat(0) -> tt
   a__isNat(length(V1)) -> a__U11(a__isNatIListKind(V1), V1)
   a__isNat(s(V1)) -> a__U21(a__isNatKind(V1), V1)
   a__isNat(X) -> isNat(X)
   a__isNatKind(0) -> tt
   a__isNatKind(length(V1)) -> a__U61(a__isNatIListKind(V1))
   a__isNatKind(s(V1)) -> a__U71(a__isNatKind(V1))
   a__isNatKind(X) -> isNatKind(X)
   a__isNatList(nil) -> tt
   a__isNatList(cons(V1, V2)) -> a__U81(a__isNatKind(V1), V1, V2)
   a__isNatList(X) -> isNatList(X)
   a__U11(tt, V1) -> a__U12(a__isNatIListKind(V1), V1)
   a__U11(X1, X2) -> U11(X1, X2)
   a__U12(tt, V1) -> a__U13(a__isNatList(V1))
   a__U12(X1, X2) -> U12(X1, X2)
   a__U13(tt) -> tt
   a__U13(X) -> U13(X)
   a__U21(tt, V1) -> a__U22(a__isNatKind(V1), V1)
   a__U21(X1, X2) -> U21(X1, X2)
   a__U22(tt, V1) -> a__U23(a__isNat(V1))
   a__U22(X1, X2) -> U22(X1, X2)
   a__U23(tt) -> tt
   a__U23(X) -> U23(X)
   a__U31(tt, V) -> a__U32(a__isNatIListKind(V), V)
   a__U31(X1, X2) -> U31(X1, X2)
   a__U32(tt, V) -> a__U33(a__isNatList(V))
   a__U32(X1, X2) -> U32(X1, X2)
   a__U33(tt) -> tt
   a__U33(X) -> U33(X)
   a__U41(tt, V1, V2) -> a__U42(a__isNatKind(V1), V1, V2)
   a__U41(X1, X2, X3) -> U41(X1, X2, X3)
   a__U42(tt, V1, V2) -> a__U43(a__isNatIListKind(V2), V1, V2)
   a__U42(X1, X2, X3) -> U42(X1, X2, X3)
   a__U43(tt, V1, V2) -> a__U44(a__isNatIListKind(V2), V1, V2)
   a__U43(X1, X2, X3) -> U43(X1, X2, X3)
   a__U44(tt, V1, V2) -> a__U45(a__isNat(V1), V2)
   a__U44(X1, X2, X3) -> U44(X1, X2, X3)
   a__U45(tt, V2) -> a__U46(a__isNatIList(V2))
   a__U45(X1, X2) -> U45(X1, X2)
   a__U46(tt) -> tt
   a__U46(X) -> U46(X)
   a__U51(tt, V2) -> a__U52(a__isNatIListKind(V2))
   a__U51(X1, X2) -> U51(X1, X2)
   a__U52(tt) -> tt
   a__U52(X) -> U52(X)
   a__U61(tt) -> tt
   a__U61(X) -> U61(X)
   a__U71(tt) -> tt
   a__U71(X) -> U71(X)
   a__U81(tt, V1, V2) -> a__U82(a__isNatKind(V1), V1, V2)
   a__U81(X1, X2, X3) -> U81(X1, X2, X3)
   a__U82(tt, V1, V2) -> a__U83(a__isNatIListKind(V2), V1, V2)
   a__U82(X1, X2, X3) -> U82(X1, X2, X3)
   a__U83(tt, V1, V2) -> a__U84(a__isNatIListKind(V2), V1, V2)
   a__U83(X1, X2, X3) -> U83(X1, X2, X3)
   a__U84(tt, V1, V2) -> a__U85(a__isNat(V1), V2)
   a__U84(X1, X2, X3) -> U84(X1, X2, X3)
   a__U85(tt, V2) -> a__U86(a__isNatList(V2))
   a__U85(X1, X2) -> U85(X1, X2)
   a__U86(tt) -> tt
   a__U86(X) -> U86(X)
   a__U91(X1, X2, X3) -> U91(X1, X2, X3)
   a__U92(X1, X2, X3) -> U92(X1, X2, X3)
   a__U93(X1, X2, X3) -> U93(X1, X2, X3)
   a__U94(X1, X2) -> U94(X1, X2)
   a__length(nil) -> 0
   a__length(X) -> length(X)
   a__length(cons(N, L)) -> a__U91(a__isNatList(L), L, N)
   a__U91(tt, L, N) -> a__U92(a__isNatIListKind(L), L, N)
   a__U92(tt, L, N) -> a__U93(a__isNat(N), L, N)
   a__U93(tt, L, N) -> a__U94(a__isNatKind(N), L)
   a__U94(tt, L) -> s(a__length(mark(L)))
   a__zeros -> cons(0, zeros)
   a__zeros -> zeros
   a__isNatIList(V) -> a__U31(a__isNatIListKind(V), V)
   a__isNatIList(zeros) -> tt
   a__isNatIList(cons(V1, V2)) -> a__U41(a__isNatKind(V1), V1, V2)
   a__isNatIList(X) -> isNatIList(X)


----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(U11(X1, X2)) -> MARK(X1)
   MARK(U12(X1, X2)) -> MARK(X1)
   MARK(U13(X)) -> MARK(X)
   MARK(U21(X1, X2)) -> MARK(X1)
   MARK(U22(X1, X2)) -> MARK(X1)
   MARK(U23(X)) -> MARK(X)
   MARK(U31(X1, X2)) -> MARK(X1)
   MARK(U32(X1, X2)) -> MARK(X1)
   MARK(U33(X)) -> MARK(X)
   MARK(U41(X1, X2, X3)) -> MARK(X1)
   MARK(U42(X1, X2, X3)) -> MARK(X1)
   MARK(U43(X1, X2, X3)) -> MARK(X1)
   MARK(U44(X1, X2, X3)) -> MARK(X1)
   MARK(U45(X1, X2)) -> MARK(X1)
   MARK(U46(X)) -> MARK(X)
   MARK(U51(X1, X2)) -> MARK(X1)
   MARK(U52(X)) -> MARK(X)
   MARK(U61(X)) -> MARK(X)
   MARK(U71(X)) -> MARK(X)
   MARK(U81(X1, X2, X3)) -> MARK(X1)
   MARK(U82(X1, X2, X3)) -> MARK(X1)
   MARK(U83(X1, X2, X3)) -> MARK(X1)
   MARK(U84(X1, X2, X3)) -> MARK(X1)
   MARK(U85(X1, X2)) -> MARK(X1)
   MARK(U86(X)) -> MARK(X)
   A__U91(tt, L, N) -> A__U92(a__isNatIListKind(L), L, N)
   A__U92(tt, L, N) -> A__U93(a__isNat(N), L, N)
   A__U93(tt, L, N) -> A__U94(a__isNatKind(N), L)
   A__U94(tt, L) -> A__LENGTH(mark(L))
   A__LENGTH(cons(N, L)) -> A__U91(a__isNatList(L), L, N)
   A__U94(tt, L) -> MARK(L)
   MARK(length(X)) -> A__LENGTH(mark(X))
   MARK(length(X)) -> MARK(X)
   MARK(s(X)) -> MARK(X)

The TRS R consists of the following rules:

   a__zeros -> cons(0, zeros)
   a__U11(tt, V1) -> a__U12(a__isNatIListKind(V1), V1)
   a__U12(tt, V1) -> a__U13(a__isNatList(V1))
   a__U13(tt) -> tt
   a__U21(tt, V1) -> a__U22(a__isNatKind(V1), V1)
   a__U22(tt, V1) -> a__U23(a__isNat(V1))
   a__U23(tt) -> tt
   a__U31(tt, V) -> a__U32(a__isNatIListKind(V), V)
   a__U32(tt, V) -> a__U33(a__isNatList(V))
   a__U33(tt) -> tt
   a__U41(tt, V1, V2) -> a__U42(a__isNatKind(V1), V1, V2)
   a__U42(tt, V1, V2) -> a__U43(a__isNatIListKind(V2), V1, V2)
   a__U43(tt, V1, V2) -> a__U44(a__isNatIListKind(V2), V1, V2)
   a__U44(tt, V1, V2) -> a__U45(a__isNat(V1), V2)
   a__U45(tt, V2) -> a__U46(a__isNatIList(V2))
   a__U46(tt) -> tt
   a__U51(tt, V2) -> a__U52(a__isNatIListKind(V2))
   a__U52(tt) -> tt
   a__U61(tt) -> tt
   a__U71(tt) -> tt
   a__U81(tt, V1, V2) -> a__U82(a__isNatKind(V1), V1, V2)
   a__U82(tt, V1, V2) -> a__U83(a__isNatIListKind(V2), V1, V2)
   a__U83(tt, V1, V2) -> a__U84(a__isNatIListKind(V2), V1, V2)
   a__U84(tt, V1, V2) -> a__U85(a__isNat(V1), V2)
   a__U85(tt, V2) -> a__U86(a__isNatList(V2))
   a__U86(tt) -> tt
   a__U91(tt, L, N) -> a__U92(a__isNatIListKind(L), L, N)
   a__U92(tt, L, N) -> a__U93(a__isNat(N), L, N)
   a__U93(tt, L, N) -> a__U94(a__isNatKind(N), L)
   a__U94(tt, L) -> s(a__length(mark(L)))
   a__isNat(0) -> tt
   a__isNat(length(V1)) -> a__U11(a__isNatIListKind(V1), V1)
   a__isNat(s(V1)) -> a__U21(a__isNatKind(V1), V1)
   a__isNatIList(V) -> a__U31(a__isNatIListKind(V), V)
   a__isNatIList(zeros) -> tt
   a__isNatIList(cons(V1, V2)) -> a__U41(a__isNatKind(V1), V1, V2)
   a__isNatIListKind(nil) -> tt
   a__isNatIListKind(zeros) -> tt
   a__isNatIListKind(cons(V1, V2)) -> a__U51(a__isNatKind(V1), V2)
   a__isNatKind(0) -> tt
   a__isNatKind(length(V1)) -> a__U61(a__isNatIListKind(V1))
   a__isNatKind(s(V1)) -> a__U71(a__isNatKind(V1))
   a__isNatList(nil) -> tt
   a__isNatList(cons(V1, V2)) -> a__U81(a__isNatKind(V1), V1, V2)
   a__length(nil) -> 0
   a__length(cons(N, L)) -> a__U91(a__isNatList(L), L, N)
   mark(zeros) -> a__zeros
   mark(U11(X1, X2)) -> a__U11(mark(X1), X2)
   mark(U12(X1, X2)) -> a__U12(mark(X1), X2)
   mark(isNatIListKind(X)) -> a__isNatIListKind(X)
   mark(U13(X)) -> a__U13(mark(X))
   mark(isNatList(X)) -> a__isNatList(X)
   mark(U21(X1, X2)) -> a__U21(mark(X1), X2)
   mark(U22(X1, X2)) -> a__U22(mark(X1), X2)
   mark(isNatKind(X)) -> a__isNatKind(X)
   mark(U23(X)) -> a__U23(mark(X))
   mark(isNat(X)) -> a__isNat(X)
   mark(U31(X1, X2)) -> a__U31(mark(X1), X2)
   mark(U32(X1, X2)) -> a__U32(mark(X1), X2)
   mark(U33(X)) -> a__U33(mark(X))
   mark(U41(X1, X2, X3)) -> a__U41(mark(X1), X2, X3)
   mark(U42(X1, X2, X3)) -> a__U42(mark(X1), X2, X3)
   mark(U43(X1, X2, X3)) -> a__U43(mark(X1), X2, X3)
   mark(U44(X1, X2, X3)) -> a__U44(mark(X1), X2, X3)
   mark(U45(X1, X2)) -> a__U45(mark(X1), X2)
   mark(U46(X)) -> a__U46(mark(X))
   mark(isNatIList(X)) -> a__isNatIList(X)
   mark(U51(X1, X2)) -> a__U51(mark(X1), X2)
   mark(U52(X)) -> a__U52(mark(X))
   mark(U61(X)) -> a__U61(mark(X))
   mark(U71(X)) -> a__U71(mark(X))
   mark(U81(X1, X2, X3)) -> a__U81(mark(X1), X2, X3)
   mark(U82(X1, X2, X3)) -> a__U82(mark(X1), X2, X3)
   mark(U83(X1, X2, X3)) -> a__U83(mark(X1), X2, X3)
   mark(U84(X1, X2, X3)) -> a__U84(mark(X1), X2, X3)
   mark(U85(X1, X2)) -> a__U85(mark(X1), X2)
   mark(U86(X)) -> a__U86(mark(X))
   mark(U91(X1, X2, X3)) -> a__U91(mark(X1), X2, X3)
   mark(U92(X1, X2, X3)) -> a__U92(mark(X1), X2, X3)
   mark(U93(X1, X2, X3)) -> a__U93(mark(X1), X2, X3)
   mark(U94(X1, X2)) -> a__U94(mark(X1), X2)
   mark(length(X)) -> a__length(mark(X))
   mark(cons(X1, X2)) -> cons(mark(X1), X2)
   mark(0) -> 0
   mark(tt) -> tt
   mark(s(X)) -> s(mark(X))
   mark(nil) -> nil
   a__zeros -> zeros
   a__U11(X1, X2) -> U11(X1, X2)
   a__U12(X1, X2) -> U12(X1, X2)
   a__isNatIListKind(X) -> isNatIListKind(X)
   a__U13(X) -> U13(X)
   a__isNatList(X) -> isNatList(X)
   a__U21(X1, X2) -> U21(X1, X2)
   a__U22(X1, X2) -> U22(X1, X2)
   a__isNatKind(X) -> isNatKind(X)
   a__U23(X) -> U23(X)
   a__isNat(X) -> isNat(X)
   a__U31(X1, X2) -> U31(X1, X2)
   a__U32(X1, X2) -> U32(X1, X2)
   a__U33(X) -> U33(X)
   a__U41(X1, X2, X3) -> U41(X1, X2, X3)
   a__U42(X1, X2, X3) -> U42(X1, X2, X3)
   a__U43(X1, X2, X3) -> U43(X1, X2, X3)
   a__U44(X1, X2, X3) -> U44(X1, X2, X3)
   a__U45(X1, X2) -> U45(X1, X2)
   a__U46(X) -> U46(X)
   a__isNatIList(X) -> isNatIList(X)
   a__U51(X1, X2) -> U51(X1, X2)
   a__U52(X) -> U52(X)
   a__U61(X) -> U61(X)
   a__U71(X) -> U71(X)
   a__U81(X1, X2, X3) -> U81(X1, X2, X3)
   a__U82(X1, X2, X3) -> U82(X1, X2, X3)
   a__U83(X1, X2, X3) -> U83(X1, X2, X3)
   a__U84(X1, X2, X3) -> U84(X1, X2, X3)
   a__U85(X1, X2) -> U85(X1, X2)
   a__U86(X) -> U86(X)
   a__U91(X1, X2, X3) -> U91(X1, X2, X3)
   a__U92(X1, X2, X3) -> U92(X1, X2, X3)
   a__U93(X1, X2, X3) -> U93(X1, X2, X3)
   a__U94(X1, X2) -> U94(X1, X2)
   a__length(X) -> length(X)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   A__U94(tt, L) -> MARK(L)
   MARK(length(X)) -> A__LENGTH(mark(X))
   MARK(length(X)) -> MARK(X)
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial Order [NEGPOLO,POLO] with Interpretation:

POL( A__LENGTH_1(x_1) ) = x_1 + 1
POL( A__U92_3(x_1, ..., x_3) ) = 2x_2 + 1
POL( A__U91_3(x_1, ..., x_3) ) = 2x_2 + 1
POL( a__U11_2(x_1, x_2) ) = 2x_1
POL( a__U12_2(x_1, x_2) ) = 2x_1
POL( a__U83_3(x_1, ..., x_3) ) = 2x_1
POL( a__U84_3(x_1, ..., x_3) ) = x_1
POL( A__U93_3(x_1, ..., x_3) ) = 2x_2 + 1
POL( A__U94_2(x_1, x_2) ) = 2x_2 + 1
POL( a__U52_1(x_1) ) = x_1
POL( a__U61_1(x_1) ) = 2x_1
POL( a__U21_2(x_1, x_2) ) = 2x_1
POL( a__U22_2(x_1, x_2) ) = 2x_1
POL( a__U81_3(x_1, ..., x_3) ) = x_1
POL( a__U82_3(x_1, ..., x_3) ) = 2x_1
POL( a__isNatIListKind_1(x_1) ) = 0
POL( nil ) = 0
POL( tt ) = 0
POL( zeros ) = 0
POL( cons_2(x_1, x_2) ) = 2x_2
POL( a__U51_2(x_1, x_2) ) = 2x_1
POL( a__isNatKind_1(x_1) ) = 0
POL( isNatIListKind_1(x_1) ) = 0
POL( a__U23_1(x_1) ) = x_1
POL( a__U85_2(x_1, x_2) ) = 2x_1
POL( a__isNat_1(x_1) ) = 0
POL( 0 ) = 0
POL( length_1(x_1) ) = x_1 + 2
POL( s_1(x_1) ) = x_1
POL( isNat_1(x_1) ) = 0
POL( a__U71_1(x_1) ) = x_1
POL( isNatKind_1(x_1) ) = 0
POL( mark_1(x_1) ) = x_1
POL( a__zeros ) = 0
POL( U11_2(x_1, x_2) ) = 2x_1
POL( U12_2(x_1, x_2) ) = 2x_1
POL( U13_1(x_1) ) = 2x_1
POL( a__U13_1(x_1) ) = 2x_1
POL( isNatList_1(x_1) ) = 0
POL( a__isNatList_1(x_1) ) = 0
POL( U21_2(x_1, x_2) ) = 2x_1
POL( U22_2(x_1, x_2) ) = 2x_1
POL( U23_1(x_1) ) = x_1
POL( U31_2(x_1, x_2) ) = x_1
POL( a__U31_2(x_1, x_2) ) = x_1
POL( U32_2(x_1, x_2) ) = x_1
POL( a__U32_2(x_1, x_2) ) = x_1
POL( U33_1(x_1) ) = x_1
POL( a__U33_1(x_1) ) = x_1
POL( U41_3(x_1, ..., x_3) ) = x_1
POL( a__U41_3(x_1, ..., x_3) ) = x_1
POL( U42_3(x_1, ..., x_3) ) = x_1
POL( a__U42_3(x_1, ..., x_3) ) = x_1
POL( U43_3(x_1, ..., x_3) ) = 2x_1
POL( a__U43_3(x_1, ..., x_3) ) = 2x_1
POL( U44_3(x_1, ..., x_3) ) = x_1
POL( a__U44_3(x_1, ..., x_3) ) = x_1
POL( U45_2(x_1, x_2) ) = 2x_1
POL( a__U45_2(x_1, x_2) ) = 2x_1
POL( U46_1(x_1) ) = 2x_1
POL( a__U46_1(x_1) ) = 2x_1
POL( isNatIList_1(x_1) ) = 0
POL( a__isNatIList_1(x_1) ) = 0
POL( U51_2(x_1, x_2) ) = 2x_1
POL( U52_1(x_1) ) = x_1
POL( U61_1(x_1) ) = 2x_1
POL( U71_1(x_1) ) = x_1
POL( U81_3(x_1, ..., x_3) ) = x_1
POL( U82_3(x_1, ..., x_3) ) = 2x_1
POL( U83_3(x_1, ..., x_3) ) = 2x_1
POL( U84_3(x_1, ..., x_3) ) = x_1
POL( U85_2(x_1, x_2) ) = 2x_1
POL( U86_1(x_1) ) = 2x_1
POL( a__U86_1(x_1) ) = 2x_1
POL( U91_3(x_1, ..., x_3) ) = 2x_2 + 2
POL( a__U91_3(x_1, ..., x_3) ) = 2x_2 + 2
POL( U92_3(x_1, ..., x_3) ) = 2x_2 + 2
POL( a__U92_3(x_1, ..., x_3) ) = 2x_2 + 2
POL( U93_3(x_1, ..., x_3) ) = 2x_2 + 2
POL( a__U93_3(x_1, ..., x_3) ) = 2x_2 + 2
POL( U94_2(x_1, x_2) ) = 2x_2 + 2
POL( a__U94_2(x_1, x_2) ) = 2x_2 + 2
POL( a__length_1(x_1) ) = x_1 + 2
POL( MARK_1(x_1) ) = 2x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   a__isNatIListKind(nil) -> tt
   a__isNatIListKind(zeros) -> tt
   a__isNatIListKind(cons(V1, V2)) -> a__U51(a__isNatKind(V1), V2)
   a__isNatIListKind(X) -> isNatIListKind(X)
   a__isNat(0) -> tt
   a__isNat(length(V1)) -> a__U11(a__isNatIListKind(V1), V1)
   a__isNat(s(V1)) -> a__U21(a__isNatKind(V1), V1)
   a__isNat(X) -> isNat(X)
   a__isNatKind(0) -> tt
   a__isNatKind(length(V1)) -> a__U61(a__isNatIListKind(V1))
   a__isNatKind(s(V1)) -> a__U71(a__isNatKind(V1))
   a__isNatKind(X) -> isNatKind(X)
   mark(zeros) -> a__zeros
   mark(U11(X1, X2)) -> a__U11(mark(X1), X2)
   mark(U12(X1, X2)) -> a__U12(mark(X1), X2)
   mark(isNatIListKind(X)) -> a__isNatIListKind(X)
   mark(U13(X)) -> a__U13(mark(X))
   mark(isNatList(X)) -> a__isNatList(X)
   mark(U21(X1, X2)) -> a__U21(mark(X1), X2)
   mark(U22(X1, X2)) -> a__U22(mark(X1), X2)
   mark(isNatKind(X)) -> a__isNatKind(X)
   mark(U23(X)) -> a__U23(mark(X))
   mark(isNat(X)) -> a__isNat(X)
   mark(U31(X1, X2)) -> a__U31(mark(X1), X2)
   mark(U32(X1, X2)) -> a__U32(mark(X1), X2)
   mark(U33(X)) -> a__U33(mark(X))
   mark(U41(X1, X2, X3)) -> a__U41(mark(X1), X2, X3)
   mark(U42(X1, X2, X3)) -> a__U42(mark(X1), X2, X3)
   mark(U43(X1, X2, X3)) -> a__U43(mark(X1), X2, X3)
   mark(U44(X1, X2, X3)) -> a__U44(mark(X1), X2, X3)
   mark(U45(X1, X2)) -> a__U45(mark(X1), X2)
   mark(U46(X)) -> a__U46(mark(X))
   mark(isNatIList(X)) -> a__isNatIList(X)
   mark(U51(X1, X2)) -> a__U51(mark(X1), X2)
   mark(U52(X)) -> a__U52(mark(X))
   mark(U61(X)) -> a__U61(mark(X))
   mark(U71(X)) -> a__U71(mark(X))
   mark(U81(X1, X2, X3)) -> a__U81(mark(X1), X2, X3)
   mark(U82(X1, X2, X3)) -> a__U82(mark(X1), X2, X3)
   mark(U83(X1, X2, X3)) -> a__U83(mark(X1), X2, X3)
   mark(U84(X1, X2, X3)) -> a__U84(mark(X1), X2, X3)
   mark(U85(X1, X2)) -> a__U85(mark(X1), X2)
   mark(U86(X)) -> a__U86(mark(X))
   mark(U91(X1, X2, X3)) -> a__U91(mark(X1), X2, X3)
   mark(U92(X1, X2, X3)) -> a__U92(mark(X1), X2, X3)
   mark(U93(X1, X2, X3)) -> a__U93(mark(X1), X2, X3)
   mark(U94(X1, X2)) -> a__U94(mark(X1), X2)
   mark(length(X)) -> a__length(mark(X))
   mark(cons(X1, X2)) -> cons(mark(X1), X2)
   mark(0) -> 0
   mark(tt) -> tt
   mark(s(X)) -> s(mark(X))
   mark(nil) -> nil
   a__isNatList(nil) -> tt
   a__isNatList(cons(V1, V2)) -> a__U81(a__isNatKind(V1), V1, V2)
   a__isNatList(X) -> isNatList(X)
   a__U11(tt, V1) -> a__U12(a__isNatIListKind(V1), V1)
   a__U11(X1, X2) -> U11(X1, X2)
   a__U12(tt, V1) -> a__U13(a__isNatList(V1))
   a__U12(X1, X2) -> U12(X1, X2)
   a__U13(tt) -> tt
   a__U13(X) -> U13(X)
   a__U21(tt, V1) -> a__U22(a__isNatKind(V1), V1)
   a__U21(X1, X2) -> U21(X1, X2)
   a__U22(tt, V1) -> a__U23(a__isNat(V1))
   a__U22(X1, X2) -> U22(X1, X2)
   a__U23(tt) -> tt
   a__U23(X) -> U23(X)
   a__U31(tt, V) -> a__U32(a__isNatIListKind(V), V)
   a__U31(X1, X2) -> U31(X1, X2)
   a__U32(tt, V) -> a__U33(a__isNatList(V))
   a__U32(X1, X2) -> U32(X1, X2)
   a__U33(tt) -> tt
   a__U33(X) -> U33(X)
   a__U41(tt, V1, V2) -> a__U42(a__isNatKind(V1), V1, V2)
   a__U41(X1, X2, X3) -> U41(X1, X2, X3)
   a__U42(tt, V1, V2) -> a__U43(a__isNatIListKind(V2), V1, V2)
   a__U42(X1, X2, X3) -> U42(X1, X2, X3)
   a__U43(tt, V1, V2) -> a__U44(a__isNatIListKind(V2), V1, V2)
   a__U43(X1, X2, X3) -> U43(X1, X2, X3)
   a__U44(tt, V1, V2) -> a__U45(a__isNat(V1), V2)
   a__U44(X1, X2, X3) -> U44(X1, X2, X3)
   a__U45(tt, V2) -> a__U46(a__isNatIList(V2))
   a__U45(X1, X2) -> U45(X1, X2)
   a__U46(tt) -> tt
   a__U46(X) -> U46(X)
   a__U51(tt, V2) -> a__U52(a__isNatIListKind(V2))
   a__U51(X1, X2) -> U51(X1, X2)
   a__U52(tt) -> tt
   a__U52(X) -> U52(X)
   a__U61(tt) -> tt
   a__U61(X) -> U61(X)
   a__U71(tt) -> tt
   a__U71(X) -> U71(X)
   a__U81(tt, V1, V2) -> a__U82(a__isNatKind(V1), V1, V2)
   a__U81(X1, X2, X3) -> U81(X1, X2, X3)
   a__U82(tt, V1, V2) -> a__U83(a__isNatIListKind(V2), V1, V2)
   a__U82(X1, X2, X3) -> U82(X1, X2, X3)
   a__U83(tt, V1, V2) -> a__U84(a__isNatIListKind(V2), V1, V2)
   a__U83(X1, X2, X3) -> U83(X1, X2, X3)
   a__U84(tt, V1, V2) -> a__U85(a__isNat(V1), V2)
   a__U84(X1, X2, X3) -> U84(X1, X2, X3)
   a__U85(tt, V2) -> a__U86(a__isNatList(V2))
   a__U85(X1, X2) -> U85(X1, X2)
   a__U86(tt) -> tt
   a__U86(X) -> U86(X)
   a__U91(X1, X2, X3) -> U91(X1, X2, X3)
   a__U92(X1, X2, X3) -> U92(X1, X2, X3)
   a__U93(X1, X2, X3) -> U93(X1, X2, X3)
   a__U94(X1, X2) -> U94(X1, X2)
   a__length(nil) -> 0
   a__length(X) -> length(X)
   a__length(cons(N, L)) -> a__U91(a__isNatList(L), L, N)
   a__U91(tt, L, N) -> a__U92(a__isNatIListKind(L), L, N)
   a__U92(tt, L, N) -> a__U93(a__isNat(N), L, N)
   a__U93(tt, L, N) -> a__U94(a__isNatKind(N), L)
   a__U94(tt, L) -> s(a__length(mark(L)))
   a__zeros -> cons(0, zeros)
   a__zeros -> zeros
   a__isNatIList(V) -> a__U31(a__isNatIListKind(V), V)
   a__isNatIList(zeros) -> tt
   a__isNatIList(cons(V1, V2)) -> a__U41(a__isNatKind(V1), V1, V2)
   a__isNatIList(X) -> isNatIList(X)


----------------------------------------

(20)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(U11(X1, X2)) -> MARK(X1)
   MARK(U12(X1, X2)) -> MARK(X1)
   MARK(U13(X)) -> MARK(X)
   MARK(U21(X1, X2)) -> MARK(X1)
   MARK(U22(X1, X2)) -> MARK(X1)
   MARK(U23(X)) -> MARK(X)
   MARK(U31(X1, X2)) -> MARK(X1)
   MARK(U32(X1, X2)) -> MARK(X1)
   MARK(U33(X)) -> MARK(X)
   MARK(U41(X1, X2, X3)) -> MARK(X1)
   MARK(U42(X1, X2, X3)) -> MARK(X1)
   MARK(U43(X1, X2, X3)) -> MARK(X1)
   MARK(U44(X1, X2, X3)) -> MARK(X1)
   MARK(U45(X1, X2)) -> MARK(X1)
   MARK(U46(X)) -> MARK(X)
   MARK(U51(X1, X2)) -> MARK(X1)
   MARK(U52(X)) -> MARK(X)
   MARK(U61(X)) -> MARK(X)
   MARK(U71(X)) -> MARK(X)
   MARK(U81(X1, X2, X3)) -> MARK(X1)
   MARK(U82(X1, X2, X3)) -> MARK(X1)
   MARK(U83(X1, X2, X3)) -> MARK(X1)
   MARK(U84(X1, X2, X3)) -> MARK(X1)
   MARK(U85(X1, X2)) -> MARK(X1)
   MARK(U86(X)) -> MARK(X)
   A__U91(tt, L, N) -> A__U92(a__isNatIListKind(L), L, N)
   A__U92(tt, L, N) -> A__U93(a__isNat(N), L, N)
   A__U93(tt, L, N) -> A__U94(a__isNatKind(N), L)
   A__U94(tt, L) -> A__LENGTH(mark(L))
   A__LENGTH(cons(N, L)) -> A__U91(a__isNatList(L), L, N)
   MARK(s(X)) -> MARK(X)

The TRS R consists of the following rules:

   a__zeros -> cons(0, zeros)
   a__U11(tt, V1) -> a__U12(a__isNatIListKind(V1), V1)
   a__U12(tt, V1) -> a__U13(a__isNatList(V1))
   a__U13(tt) -> tt
   a__U21(tt, V1) -> a__U22(a__isNatKind(V1), V1)
   a__U22(tt, V1) -> a__U23(a__isNat(V1))
   a__U23(tt) -> tt
   a__U31(tt, V) -> a__U32(a__isNatIListKind(V), V)
   a__U32(tt, V) -> a__U33(a__isNatList(V))
   a__U33(tt) -> tt
   a__U41(tt, V1, V2) -> a__U42(a__isNatKind(V1), V1, V2)
   a__U42(tt, V1, V2) -> a__U43(a__isNatIListKind(V2), V1, V2)
   a__U43(tt, V1, V2) -> a__U44(a__isNatIListKind(V2), V1, V2)
   a__U44(tt, V1, V2) -> a__U45(a__isNat(V1), V2)
   a__U45(tt, V2) -> a__U46(a__isNatIList(V2))
   a__U46(tt) -> tt
   a__U51(tt, V2) -> a__U52(a__isNatIListKind(V2))
   a__U52(tt) -> tt
   a__U61(tt) -> tt
   a__U71(tt) -> tt
   a__U81(tt, V1, V2) -> a__U82(a__isNatKind(V1), V1, V2)
   a__U82(tt, V1, V2) -> a__U83(a__isNatIListKind(V2), V1, V2)
   a__U83(tt, V1, V2) -> a__U84(a__isNatIListKind(V2), V1, V2)
   a__U84(tt, V1, V2) -> a__U85(a__isNat(V1), V2)
   a__U85(tt, V2) -> a__U86(a__isNatList(V2))
   a__U86(tt) -> tt
   a__U91(tt, L, N) -> a__U92(a__isNatIListKind(L), L, N)
   a__U92(tt, L, N) -> a__U93(a__isNat(N), L, N)
   a__U93(tt, L, N) -> a__U94(a__isNatKind(N), L)
   a__U94(tt, L) -> s(a__length(mark(L)))
   a__isNat(0) -> tt
   a__isNat(length(V1)) -> a__U11(a__isNatIListKind(V1), V1)
   a__isNat(s(V1)) -> a__U21(a__isNatKind(V1), V1)
   a__isNatIList(V) -> a__U31(a__isNatIListKind(V), V)
   a__isNatIList(zeros) -> tt
   a__isNatIList(cons(V1, V2)) -> a__U41(a__isNatKind(V1), V1, V2)
   a__isNatIListKind(nil) -> tt
   a__isNatIListKind(zeros) -> tt
   a__isNatIListKind(cons(V1, V2)) -> a__U51(a__isNatKind(V1), V2)
   a__isNatKind(0) -> tt
   a__isNatKind(length(V1)) -> a__U61(a__isNatIListKind(V1))
   a__isNatKind(s(V1)) -> a__U71(a__isNatKind(V1))
   a__isNatList(nil) -> tt
   a__isNatList(cons(V1, V2)) -> a__U81(a__isNatKind(V1), V1, V2)
   a__length(nil) -> 0
   a__length(cons(N, L)) -> a__U91(a__isNatList(L), L, N)
   mark(zeros) -> a__zeros
   mark(U11(X1, X2)) -> a__U11(mark(X1), X2)
   mark(U12(X1, X2)) -> a__U12(mark(X1), X2)
   mark(isNatIListKind(X)) -> a__isNatIListKind(X)
   mark(U13(X)) -> a__U13(mark(X))
   mark(isNatList(X)) -> a__isNatList(X)
   mark(U21(X1, X2)) -> a__U21(mark(X1), X2)
   mark(U22(X1, X2)) -> a__U22(mark(X1), X2)
   mark(isNatKind(X)) -> a__isNatKind(X)
   mark(U23(X)) -> a__U23(mark(X))
   mark(isNat(X)) -> a__isNat(X)
   mark(U31(X1, X2)) -> a__U31(mark(X1), X2)
   mark(U32(X1, X2)) -> a__U32(mark(X1), X2)
   mark(U33(X)) -> a__U33(mark(X))
   mark(U41(X1, X2, X3)) -> a__U41(mark(X1), X2, X3)
   mark(U42(X1, X2, X3)) -> a__U42(mark(X1), X2, X3)
   mark(U43(X1, X2, X3)) -> a__U43(mark(X1), X2, X3)
   mark(U44(X1, X2, X3)) -> a__U44(mark(X1), X2, X3)
   mark(U45(X1, X2)) -> a__U45(mark(X1), X2)
   mark(U46(X)) -> a__U46(mark(X))
   mark(isNatIList(X)) -> a__isNatIList(X)
   mark(U51(X1, X2)) -> a__U51(mark(X1), X2)
   mark(U52(X)) -> a__U52(mark(X))
   mark(U61(X)) -> a__U61(mark(X))
   mark(U71(X)) -> a__U71(mark(X))
   mark(U81(X1, X2, X3)) -> a__U81(mark(X1), X2, X3)
   mark(U82(X1, X2, X3)) -> a__U82(mark(X1), X2, X3)
   mark(U83(X1, X2, X3)) -> a__U83(mark(X1), X2, X3)
   mark(U84(X1, X2, X3)) -> a__U84(mark(X1), X2, X3)
   mark(U85(X1, X2)) -> a__U85(mark(X1), X2)
   mark(U86(X)) -> a__U86(mark(X))
   mark(U91(X1, X2, X3)) -> a__U91(mark(X1), X2, X3)
   mark(U92(X1, X2, X3)) -> a__U92(mark(X1), X2, X3)
   mark(U93(X1, X2, X3)) -> a__U93(mark(X1), X2, X3)
   mark(U94(X1, X2)) -> a__U94(mark(X1), X2)
   mark(length(X)) -> a__length(mark(X))
   mark(cons(X1, X2)) -> cons(mark(X1), X2)
   mark(0) -> 0
   mark(tt) -> tt
   mark(s(X)) -> s(mark(X))
   mark(nil) -> nil
   a__zeros -> zeros
   a__U11(X1, X2) -> U11(X1, X2)
   a__U12(X1, X2) -> U12(X1, X2)
   a__isNatIListKind(X) -> isNatIListKind(X)
   a__U13(X) -> U13(X)
   a__isNatList(X) -> isNatList(X)
   a__U21(X1, X2) -> U21(X1, X2)
   a__U22(X1, X2) -> U22(X1, X2)
   a__isNatKind(X) -> isNatKind(X)
   a__U23(X) -> U23(X)
   a__isNat(X) -> isNat(X)
   a__U31(X1, X2) -> U31(X1, X2)
   a__U32(X1, X2) -> U32(X1, X2)
   a__U33(X) -> U33(X)
   a__U41(X1, X2, X3) -> U41(X1, X2, X3)
   a__U42(X1, X2, X3) -> U42(X1, X2, X3)
   a__U43(X1, X2, X3) -> U43(X1, X2, X3)
   a__U44(X1, X2, X3) -> U44(X1, X2, X3)
   a__U45(X1, X2) -> U45(X1, X2)
   a__U46(X) -> U46(X)
   a__isNatIList(X) -> isNatIList(X)
   a__U51(X1, X2) -> U51(X1, X2)
   a__U52(X) -> U52(X)
   a__U61(X) -> U61(X)
   a__U71(X) -> U71(X)
   a__U81(X1, X2, X3) -> U81(X1, X2, X3)
   a__U82(X1, X2, X3) -> U82(X1, X2, X3)
   a__U83(X1, X2, X3) -> U83(X1, X2, X3)
   a__U84(X1, X2, X3) -> U84(X1, X2, X3)
   a__U85(X1, X2) -> U85(X1, X2)
   a__U86(X) -> U86(X)
   a__U91(X1, X2, X3) -> U91(X1, X2, X3)
   a__U92(X1, X2, X3) -> U92(X1, X2, X3)
   a__U93(X1, X2, X3) -> U93(X1, X2, X3)
   a__U94(X1, X2) -> U94(X1, X2)
   a__length(X) -> length(X)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(21) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs.
----------------------------------------

(22)
Complex Obligation (AND)

----------------------------------------

(23)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A__U92(tt, L, N) -> A__U93(a__isNat(N), L, N)
   A__U93(tt, L, N) -> A__U94(a__isNatKind(N), L)
   A__U94(tt, L) -> A__LENGTH(mark(L))
   A__LENGTH(cons(N, L)) -> A__U91(a__isNatList(L), L, N)
   A__U91(tt, L, N) -> A__U92(a__isNatIListKind(L), L, N)

The TRS R consists of the following rules:

   a__zeros -> cons(0, zeros)
   a__U11(tt, V1) -> a__U12(a__isNatIListKind(V1), V1)
   a__U12(tt, V1) -> a__U13(a__isNatList(V1))
   a__U13(tt) -> tt
   a__U21(tt, V1) -> a__U22(a__isNatKind(V1), V1)
   a__U22(tt, V1) -> a__U23(a__isNat(V1))
   a__U23(tt) -> tt
   a__U31(tt, V) -> a__U32(a__isNatIListKind(V), V)
   a__U32(tt, V) -> a__U33(a__isNatList(V))
   a__U33(tt) -> tt
   a__U41(tt, V1, V2) -> a__U42(a__isNatKind(V1), V1, V2)
   a__U42(tt, V1, V2) -> a__U43(a__isNatIListKind(V2), V1, V2)
   a__U43(tt, V1, V2) -> a__U44(a__isNatIListKind(V2), V1, V2)
   a__U44(tt, V1, V2) -> a__U45(a__isNat(V1), V2)
   a__U45(tt, V2) -> a__U46(a__isNatIList(V2))
   a__U46(tt) -> tt
   a__U51(tt, V2) -> a__U52(a__isNatIListKind(V2))
   a__U52(tt) -> tt
   a__U61(tt) -> tt
   a__U71(tt) -> tt
   a__U81(tt, V1, V2) -> a__U82(a__isNatKind(V1), V1, V2)
   a__U82(tt, V1, V2) -> a__U83(a__isNatIListKind(V2), V1, V2)
   a__U83(tt, V1, V2) -> a__U84(a__isNatIListKind(V2), V1, V2)
   a__U84(tt, V1, V2) -> a__U85(a__isNat(V1), V2)
   a__U85(tt, V2) -> a__U86(a__isNatList(V2))
   a__U86(tt) -> tt
   a__U91(tt, L, N) -> a__U92(a__isNatIListKind(L), L, N)
   a__U92(tt, L, N) -> a__U93(a__isNat(N), L, N)
   a__U93(tt, L, N) -> a__U94(a__isNatKind(N), L)
   a__U94(tt, L) -> s(a__length(mark(L)))
   a__isNat(0) -> tt
   a__isNat(length(V1)) -> a__U11(a__isNatIListKind(V1), V1)
   a__isNat(s(V1)) -> a__U21(a__isNatKind(V1), V1)
   a__isNatIList(V) -> a__U31(a__isNatIListKind(V), V)
   a__isNatIList(zeros) -> tt
   a__isNatIList(cons(V1, V2)) -> a__U41(a__isNatKind(V1), V1, V2)
   a__isNatIListKind(nil) -> tt
   a__isNatIListKind(zeros) -> tt
   a__isNatIListKind(cons(V1, V2)) -> a__U51(a__isNatKind(V1), V2)
   a__isNatKind(0) -> tt
   a__isNatKind(length(V1)) -> a__U61(a__isNatIListKind(V1))
   a__isNatKind(s(V1)) -> a__U71(a__isNatKind(V1))
   a__isNatList(nil) -> tt
   a__isNatList(cons(V1, V2)) -> a__U81(a__isNatKind(V1), V1, V2)
   a__length(nil) -> 0
   a__length(cons(N, L)) -> a__U91(a__isNatList(L), L, N)
   mark(zeros) -> a__zeros
   mark(U11(X1, X2)) -> a__U11(mark(X1), X2)
   mark(U12(X1, X2)) -> a__U12(mark(X1), X2)
   mark(isNatIListKind(X)) -> a__isNatIListKind(X)
   mark(U13(X)) -> a__U13(mark(X))
   mark(isNatList(X)) -> a__isNatList(X)
   mark(U21(X1, X2)) -> a__U21(mark(X1), X2)
   mark(U22(X1, X2)) -> a__U22(mark(X1), X2)
   mark(isNatKind(X)) -> a__isNatKind(X)
   mark(U23(X)) -> a__U23(mark(X))
   mark(isNat(X)) -> a__isNat(X)
   mark(U31(X1, X2)) -> a__U31(mark(X1), X2)
   mark(U32(X1, X2)) -> a__U32(mark(X1), X2)
   mark(U33(X)) -> a__U33(mark(X))
   mark(U41(X1, X2, X3)) -> a__U41(mark(X1), X2, X3)
   mark(U42(X1, X2, X3)) -> a__U42(mark(X1), X2, X3)
   mark(U43(X1, X2, X3)) -> a__U43(mark(X1), X2, X3)
   mark(U44(X1, X2, X3)) -> a__U44(mark(X1), X2, X3)
   mark(U45(X1, X2)) -> a__U45(mark(X1), X2)
   mark(U46(X)) -> a__U46(mark(X))
   mark(isNatIList(X)) -> a__isNatIList(X)
   mark(U51(X1, X2)) -> a__U51(mark(X1), X2)
   mark(U52(X)) -> a__U52(mark(X))
   mark(U61(X)) -> a__U61(mark(X))
   mark(U71(X)) -> a__U71(mark(X))
   mark(U81(X1, X2, X3)) -> a__U81(mark(X1), X2, X3)
   mark(U82(X1, X2, X3)) -> a__U82(mark(X1), X2, X3)
   mark(U83(X1, X2, X3)) -> a__U83(mark(X1), X2, X3)
   mark(U84(X1, X2, X3)) -> a__U84(mark(X1), X2, X3)
   mark(U85(X1, X2)) -> a__U85(mark(X1), X2)
   mark(U86(X)) -> a__U86(mark(X))
   mark(U91(X1, X2, X3)) -> a__U91(mark(X1), X2, X3)
   mark(U92(X1, X2, X3)) -> a__U92(mark(X1), X2, X3)
   mark(U93(X1, X2, X3)) -> a__U93(mark(X1), X2, X3)
   mark(U94(X1, X2)) -> a__U94(mark(X1), X2)
   mark(length(X)) -> a__length(mark(X))
   mark(cons(X1, X2)) -> cons(mark(X1), X2)
   mark(0) -> 0
   mark(tt) -> tt
   mark(s(X)) -> s(mark(X))
   mark(nil) -> nil
   a__zeros -> zeros
   a__U11(X1, X2) -> U11(X1, X2)
   a__U12(X1, X2) -> U12(X1, X2)
   a__isNatIListKind(X) -> isNatIListKind(X)
   a__U13(X) -> U13(X)
   a__isNatList(X) -> isNatList(X)
   a__U21(X1, X2) -> U21(X1, X2)
   a__U22(X1, X2) -> U22(X1, X2)
   a__isNatKind(X) -> isNatKind(X)
   a__U23(X) -> U23(X)
   a__isNat(X) -> isNat(X)
   a__U31(X1, X2) -> U31(X1, X2)
   a__U32(X1, X2) -> U32(X1, X2)
   a__U33(X) -> U33(X)
   a__U41(X1, X2, X3) -> U41(X1, X2, X3)
   a__U42(X1, X2, X3) -> U42(X1, X2, X3)
   a__U43(X1, X2, X3) -> U43(X1, X2, X3)
   a__U44(X1, X2, X3) -> U44(X1, X2, X3)
   a__U45(X1, X2) -> U45(X1, X2)
   a__U46(X) -> U46(X)
   a__isNatIList(X) -> isNatIList(X)
   a__U51(X1, X2) -> U51(X1, X2)
   a__U52(X) -> U52(X)
   a__U61(X) -> U61(X)
   a__U71(X) -> U71(X)
   a__U81(X1, X2, X3) -> U81(X1, X2, X3)
   a__U82(X1, X2, X3) -> U82(X1, X2, X3)
   a__U83(X1, X2, X3) -> U83(X1, X2, X3)
   a__U84(X1, X2, X3) -> U84(X1, X2, X3)
   a__U85(X1, X2) -> U85(X1, X2)
   a__U86(X) -> U86(X)
   a__U91(X1, X2, X3) -> U91(X1, X2, X3)
   a__U92(X1, X2, X3) -> U92(X1, X2, X3)
   a__U93(X1, X2, X3) -> U93(X1, X2, X3)
   a__U94(X1, X2) -> U94(X1, X2)
   a__length(X) -> length(X)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(24) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   A__U93(tt, L, N) -> A__U94(a__isNatKind(N), L)
   A__LENGTH(cons(N, L)) -> A__U91(a__isNatList(L), L, N)
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial Order [NEGPOLO,POLO] with Interpretation:

POL( A__LENGTH_1(x_1) ) = 2x_1 + 1
POL( A__U93_3(x_1, ..., x_3) ) = 2x_2 + 2
POL( A__U91_3(x_1, ..., x_3) ) = 2x_1 + 2x_2
POL( a__U23_1(x_1) ) = 1
POL( a__U85_2(x_1, x_2) ) = x_2
POL( a__isNat_1(x_1) ) = x_1
POL( 0 ) = 1
POL( tt ) = 1
POL( length_1(x_1) ) = 2
POL( a__U11_2(x_1, x_2) ) = 1
POL( a__isNatIListKind_1(x_1) ) = 2
POL( s_1(x_1) ) = 1
POL( a__U21_2(x_1, x_2) ) = 1
POL( a__isNatKind_1(x_1) ) = 2x_1 + 2
POL( isNat_1(x_1) ) = x_1
POL( A__U94_2(x_1, x_2) ) = 2x_2 + 1
POL( a__U22_2(x_1, x_2) ) = 1
POL( a__U81_3(x_1, ..., x_3) ) = 2x_3
POL( a__U82_3(x_1, ..., x_3) ) = 2x_3
POL( A__U92_3(x_1, ..., x_3) ) = 2x_2 + 2
POL( a__U51_2(x_1, x_2) ) = 2
POL( a__U71_1(x_1) ) = 1
POL( a__U12_2(x_1, x_2) ) = 1
POL( a__U83_3(x_1, ..., x_3) ) = 2x_3
POL( a__U84_3(x_1, ..., x_3) ) = x_3
POL( a__U61_1(x_1) ) = 2x_1 + 2
POL( isNatKind_1(x_1) ) = 2x_1 + 2
POL( mark_1(x_1) ) = x_1
POL( zeros ) = 0
POL( a__zeros ) = 0
POL( U11_2(x_1, x_2) ) = 1
POL( U12_2(x_1, x_2) ) = 1
POL( isNatIListKind_1(x_1) ) = 2
POL( U13_1(x_1) ) = 1
POL( a__U13_1(x_1) ) = 1
POL( isNatList_1(x_1) ) = x_1
POL( a__isNatList_1(x_1) ) = x_1
POL( U21_2(x_1, x_2) ) = 1
POL( U22_2(x_1, x_2) ) = 1
POL( U23_1(x_1) ) = 1
POL( U31_2(x_1, x_2) ) = 2
POL( a__U31_2(x_1, x_2) ) = 2
POL( U32_2(x_1, x_2) ) = 1
POL( a__U32_2(x_1, x_2) ) = 1
POL( U33_1(x_1) ) = 1
POL( a__U33_1(x_1) ) = 1
POL( U41_3(x_1, ..., x_3) ) = 1
POL( a__U41_3(x_1, ..., x_3) ) = 1
POL( U42_3(x_1, ..., x_3) ) = 1
POL( a__U42_3(x_1, ..., x_3) ) = 1
POL( U43_3(x_1, ..., x_3) ) = 1
POL( a__U43_3(x_1, ..., x_3) ) = 1
POL( U44_3(x_1, ..., x_3) ) = 1
POL( a__U44_3(x_1, ..., x_3) ) = 1
POL( U45_2(x_1, x_2) ) = 1
POL( a__U45_2(x_1, x_2) ) = 1
POL( U46_1(x_1) ) = 1
POL( a__U46_1(x_1) ) = 1
POL( isNatIList_1(x_1) ) = 2
POL( a__isNatIList_1(x_1) ) = 2
POL( U51_2(x_1, x_2) ) = 2
POL( U52_1(x_1) ) = 2
POL( a__U52_1(x_1) ) = 2
POL( U61_1(x_1) ) = 2x_1 + 2
POL( U71_1(x_1) ) = 1
POL( U81_3(x_1, ..., x_3) ) = 2x_3
POL( U82_3(x_1, ..., x_3) ) = 2x_3
POL( U83_3(x_1, ..., x_3) ) = 2x_3
POL( U84_3(x_1, ..., x_3) ) = x_3
POL( U85_2(x_1, x_2) ) = x_2
POL( U86_1(x_1) ) = x_1
POL( a__U86_1(x_1) ) = x_1
POL( U91_3(x_1, ..., x_3) ) = 2
POL( a__U91_3(x_1, ..., x_3) ) = 2
POL( U92_3(x_1, ..., x_3) ) = 2
POL( a__U92_3(x_1, ..., x_3) ) = 2
POL( U93_3(x_1, ..., x_3) ) = 1
POL( a__U93_3(x_1, ..., x_3) ) = 1
POL( U94_2(x_1, x_2) ) = 1
POL( a__U94_2(x_1, x_2) ) = 1
POL( a__length_1(x_1) ) = 2
POL( cons_2(x_1, x_2) ) = 2x_2
POL( nil ) = 2

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   a__isNat(0) -> tt
   a__isNat(length(V1)) -> a__U11(a__isNatIListKind(V1), V1)
   a__isNat(s(V1)) -> a__U21(a__isNatKind(V1), V1)
   a__isNat(X) -> isNat(X)
   a__isNatKind(0) -> tt
   a__isNatKind(length(V1)) -> a__U61(a__isNatIListKind(V1))
   a__isNatKind(s(V1)) -> a__U71(a__isNatKind(V1))
   a__isNatKind(X) -> isNatKind(X)
   mark(zeros) -> a__zeros
   mark(U11(X1, X2)) -> a__U11(mark(X1), X2)
   mark(U12(X1, X2)) -> a__U12(mark(X1), X2)
   mark(isNatIListKind(X)) -> a__isNatIListKind(X)
   mark(U13(X)) -> a__U13(mark(X))
   mark(isNatList(X)) -> a__isNatList(X)
   mark(U21(X1, X2)) -> a__U21(mark(X1), X2)
   mark(U22(X1, X2)) -> a__U22(mark(X1), X2)
   mark(isNatKind(X)) -> a__isNatKind(X)
   mark(U23(X)) -> a__U23(mark(X))
   mark(isNat(X)) -> a__isNat(X)
   mark(U31(X1, X2)) -> a__U31(mark(X1), X2)
   mark(U32(X1, X2)) -> a__U32(mark(X1), X2)
   mark(U33(X)) -> a__U33(mark(X))
   mark(U41(X1, X2, X3)) -> a__U41(mark(X1), X2, X3)
   mark(U42(X1, X2, X3)) -> a__U42(mark(X1), X2, X3)
   mark(U43(X1, X2, X3)) -> a__U43(mark(X1), X2, X3)
   mark(U44(X1, X2, X3)) -> a__U44(mark(X1), X2, X3)
   mark(U45(X1, X2)) -> a__U45(mark(X1), X2)
   mark(U46(X)) -> a__U46(mark(X))
   mark(isNatIList(X)) -> a__isNatIList(X)
   mark(U51(X1, X2)) -> a__U51(mark(X1), X2)
   mark(U52(X)) -> a__U52(mark(X))
   mark(U61(X)) -> a__U61(mark(X))
   mark(U71(X)) -> a__U71(mark(X))
   mark(U81(X1, X2, X3)) -> a__U81(mark(X1), X2, X3)
   mark(U82(X1, X2, X3)) -> a__U82(mark(X1), X2, X3)
   mark(U83(X1, X2, X3)) -> a__U83(mark(X1), X2, X3)
   mark(U84(X1, X2, X3)) -> a__U84(mark(X1), X2, X3)
   mark(U85(X1, X2)) -> a__U85(mark(X1), X2)
   mark(U86(X)) -> a__U86(mark(X))
   mark(U91(X1, X2, X3)) -> a__U91(mark(X1), X2, X3)
   mark(U92(X1, X2, X3)) -> a__U92(mark(X1), X2, X3)
   mark(U93(X1, X2, X3)) -> a__U93(mark(X1), X2, X3)
   mark(U94(X1, X2)) -> a__U94(mark(X1), X2)
   mark(length(X)) -> a__length(mark(X))
   mark(cons(X1, X2)) -> cons(mark(X1), X2)
   mark(0) -> 0
   mark(tt) -> tt
   mark(s(X)) -> s(mark(X))
   mark(nil) -> nil
   a__isNatList(nil) -> tt
   a__isNatList(cons(V1, V2)) -> a__U81(a__isNatKind(V1), V1, V2)
   a__isNatList(X) -> isNatList(X)
   a__isNatIListKind(nil) -> tt
   a__isNatIListKind(zeros) -> tt
   a__isNatIListKind(cons(V1, V2)) -> a__U51(a__isNatKind(V1), V2)
   a__isNatIListKind(X) -> isNatIListKind(X)
   a__U11(tt, V1) -> a__U12(a__isNatIListKind(V1), V1)
   a__U11(X1, X2) -> U11(X1, X2)
   a__U12(tt, V1) -> a__U13(a__isNatList(V1))
   a__U12(X1, X2) -> U12(X1, X2)
   a__U13(tt) -> tt
   a__U13(X) -> U13(X)
   a__U21(tt, V1) -> a__U22(a__isNatKind(V1), V1)
   a__U21(X1, X2) -> U21(X1, X2)
   a__U22(tt, V1) -> a__U23(a__isNat(V1))
   a__U22(X1, X2) -> U22(X1, X2)
   a__U23(tt) -> tt
   a__U23(X) -> U23(X)
   a__U31(tt, V) -> a__U32(a__isNatIListKind(V), V)
   a__U31(X1, X2) -> U31(X1, X2)
   a__U32(tt, V) -> a__U33(a__isNatList(V))
   a__U32(X1, X2) -> U32(X1, X2)
   a__U33(tt) -> tt
   a__U33(X) -> U33(X)
   a__U41(tt, V1, V2) -> a__U42(a__isNatKind(V1), V1, V2)
   a__U41(X1, X2, X3) -> U41(X1, X2, X3)
   a__U42(tt, V1, V2) -> a__U43(a__isNatIListKind(V2), V1, V2)
   a__U42(X1, X2, X3) -> U42(X1, X2, X3)
   a__U43(tt, V1, V2) -> a__U44(a__isNatIListKind(V2), V1, V2)
   a__U43(X1, X2, X3) -> U43(X1, X2, X3)
   a__U44(tt, V1, V2) -> a__U45(a__isNat(V1), V2)
   a__U44(X1, X2, X3) -> U44(X1, X2, X3)
   a__U45(tt, V2) -> a__U46(a__isNatIList(V2))
   a__U45(X1, X2) -> U45(X1, X2)
   a__U46(tt) -> tt
   a__U46(X) -> U46(X)
   a__U51(tt, V2) -> a__U52(a__isNatIListKind(V2))
   a__U51(X1, X2) -> U51(X1, X2)
   a__U52(tt) -> tt
   a__U52(X) -> U52(X)
   a__U61(tt) -> tt
   a__U61(X) -> U61(X)
   a__U71(tt) -> tt
   a__U71(X) -> U71(X)
   a__U81(tt, V1, V2) -> a__U82(a__isNatKind(V1), V1, V2)
   a__U81(X1, X2, X3) -> U81(X1, X2, X3)
   a__U82(tt, V1, V2) -> a__U83(a__isNatIListKind(V2), V1, V2)
   a__U82(X1, X2, X3) -> U82(X1, X2, X3)
   a__U83(tt, V1, V2) -> a__U84(a__isNatIListKind(V2), V1, V2)
   a__U83(X1, X2, X3) -> U83(X1, X2, X3)
   a__U84(tt, V1, V2) -> a__U85(a__isNat(V1), V2)
   a__U84(X1, X2, X3) -> U84(X1, X2, X3)
   a__U85(tt, V2) -> a__U86(a__isNatList(V2))
   a__U85(X1, X2) -> U85(X1, X2)
   a__U86(tt) -> tt
   a__U86(X) -> U86(X)
   a__U91(X1, X2, X3) -> U91(X1, X2, X3)
   a__U92(X1, X2, X3) -> U92(X1, X2, X3)
   a__U93(X1, X2, X3) -> U93(X1, X2, X3)
   a__U94(X1, X2) -> U94(X1, X2)
   a__length(nil) -> 0
   a__length(X) -> length(X)
   a__length(cons(N, L)) -> a__U91(a__isNatList(L), L, N)
   a__U91(tt, L, N) -> a__U92(a__isNatIListKind(L), L, N)
   a__U92(tt, L, N) -> a__U93(a__isNat(N), L, N)
   a__U93(tt, L, N) -> a__U94(a__isNatKind(N), L)
   a__U94(tt, L) -> s(a__length(mark(L)))
   a__zeros -> cons(0, zeros)
   a__zeros -> zeros
   a__isNatIList(V) -> a__U31(a__isNatIListKind(V), V)
   a__isNatIList(zeros) -> tt
   a__isNatIList(cons(V1, V2)) -> a__U41(a__isNatKind(V1), V1, V2)
   a__isNatIList(X) -> isNatIList(X)


----------------------------------------

(25)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A__U92(tt, L, N) -> A__U93(a__isNat(N), L, N)
   A__U94(tt, L) -> A__LENGTH(mark(L))
   A__U91(tt, L, N) -> A__U92(a__isNatIListKind(L), L, N)

The TRS R consists of the following rules:

   a__zeros -> cons(0, zeros)
   a__U11(tt, V1) -> a__U12(a__isNatIListKind(V1), V1)
   a__U12(tt, V1) -> a__U13(a__isNatList(V1))
   a__U13(tt) -> tt
   a__U21(tt, V1) -> a__U22(a__isNatKind(V1), V1)
   a__U22(tt, V1) -> a__U23(a__isNat(V1))
   a__U23(tt) -> tt
   a__U31(tt, V) -> a__U32(a__isNatIListKind(V), V)
   a__U32(tt, V) -> a__U33(a__isNatList(V))
   a__U33(tt) -> tt
   a__U41(tt, V1, V2) -> a__U42(a__isNatKind(V1), V1, V2)
   a__U42(tt, V1, V2) -> a__U43(a__isNatIListKind(V2), V1, V2)
   a__U43(tt, V1, V2) -> a__U44(a__isNatIListKind(V2), V1, V2)
   a__U44(tt, V1, V2) -> a__U45(a__isNat(V1), V2)
   a__U45(tt, V2) -> a__U46(a__isNatIList(V2))
   a__U46(tt) -> tt
   a__U51(tt, V2) -> a__U52(a__isNatIListKind(V2))
   a__U52(tt) -> tt
   a__U61(tt) -> tt
   a__U71(tt) -> tt
   a__U81(tt, V1, V2) -> a__U82(a__isNatKind(V1), V1, V2)
   a__U82(tt, V1, V2) -> a__U83(a__isNatIListKind(V2), V1, V2)
   a__U83(tt, V1, V2) -> a__U84(a__isNatIListKind(V2), V1, V2)
   a__U84(tt, V1, V2) -> a__U85(a__isNat(V1), V2)
   a__U85(tt, V2) -> a__U86(a__isNatList(V2))
   a__U86(tt) -> tt
   a__U91(tt, L, N) -> a__U92(a__isNatIListKind(L), L, N)
   a__U92(tt, L, N) -> a__U93(a__isNat(N), L, N)
   a__U93(tt, L, N) -> a__U94(a__isNatKind(N), L)
   a__U94(tt, L) -> s(a__length(mark(L)))
   a__isNat(0) -> tt
   a__isNat(length(V1)) -> a__U11(a__isNatIListKind(V1), V1)
   a__isNat(s(V1)) -> a__U21(a__isNatKind(V1), V1)
   a__isNatIList(V) -> a__U31(a__isNatIListKind(V), V)
   a__isNatIList(zeros) -> tt
   a__isNatIList(cons(V1, V2)) -> a__U41(a__isNatKind(V1), V1, V2)
   a__isNatIListKind(nil) -> tt
   a__isNatIListKind(zeros) -> tt
   a__isNatIListKind(cons(V1, V2)) -> a__U51(a__isNatKind(V1), V2)
   a__isNatKind(0) -> tt
   a__isNatKind(length(V1)) -> a__U61(a__isNatIListKind(V1))
   a__isNatKind(s(V1)) -> a__U71(a__isNatKind(V1))
   a__isNatList(nil) -> tt
   a__isNatList(cons(V1, V2)) -> a__U81(a__isNatKind(V1), V1, V2)
   a__length(nil) -> 0
   a__length(cons(N, L)) -> a__U91(a__isNatList(L), L, N)
   mark(zeros) -> a__zeros
   mark(U11(X1, X2)) -> a__U11(mark(X1), X2)
   mark(U12(X1, X2)) -> a__U12(mark(X1), X2)
   mark(isNatIListKind(X)) -> a__isNatIListKind(X)
   mark(U13(X)) -> a__U13(mark(X))
   mark(isNatList(X)) -> a__isNatList(X)
   mark(U21(X1, X2)) -> a__U21(mark(X1), X2)
   mark(U22(X1, X2)) -> a__U22(mark(X1), X2)
   mark(isNatKind(X)) -> a__isNatKind(X)
   mark(U23(X)) -> a__U23(mark(X))
   mark(isNat(X)) -> a__isNat(X)
   mark(U31(X1, X2)) -> a__U31(mark(X1), X2)
   mark(U32(X1, X2)) -> a__U32(mark(X1), X2)
   mark(U33(X)) -> a__U33(mark(X))
   mark(U41(X1, X2, X3)) -> a__U41(mark(X1), X2, X3)
   mark(U42(X1, X2, X3)) -> a__U42(mark(X1), X2, X3)
   mark(U43(X1, X2, X3)) -> a__U43(mark(X1), X2, X3)
   mark(U44(X1, X2, X3)) -> a__U44(mark(X1), X2, X3)
   mark(U45(X1, X2)) -> a__U45(mark(X1), X2)
   mark(U46(X)) -> a__U46(mark(X))
   mark(isNatIList(X)) -> a__isNatIList(X)
   mark(U51(X1, X2)) -> a__U51(mark(X1), X2)
   mark(U52(X)) -> a__U52(mark(X))
   mark(U61(X)) -> a__U61(mark(X))
   mark(U71(X)) -> a__U71(mark(X))
   mark(U81(X1, X2, X3)) -> a__U81(mark(X1), X2, X3)
   mark(U82(X1, X2, X3)) -> a__U82(mark(X1), X2, X3)
   mark(U83(X1, X2, X3)) -> a__U83(mark(X1), X2, X3)
   mark(U84(X1, X2, X3)) -> a__U84(mark(X1), X2, X3)
   mark(U85(X1, X2)) -> a__U85(mark(X1), X2)
   mark(U86(X)) -> a__U86(mark(X))
   mark(U91(X1, X2, X3)) -> a__U91(mark(X1), X2, X3)
   mark(U92(X1, X2, X3)) -> a__U92(mark(X1), X2, X3)
   mark(U93(X1, X2, X3)) -> a__U93(mark(X1), X2, X3)
   mark(U94(X1, X2)) -> a__U94(mark(X1), X2)
   mark(length(X)) -> a__length(mark(X))
   mark(cons(X1, X2)) -> cons(mark(X1), X2)
   mark(0) -> 0
   mark(tt) -> tt
   mark(s(X)) -> s(mark(X))
   mark(nil) -> nil
   a__zeros -> zeros
   a__U11(X1, X2) -> U11(X1, X2)
   a__U12(X1, X2) -> U12(X1, X2)
   a__isNatIListKind(X) -> isNatIListKind(X)
   a__U13(X) -> U13(X)
   a__isNatList(X) -> isNatList(X)
   a__U21(X1, X2) -> U21(X1, X2)
   a__U22(X1, X2) -> U22(X1, X2)
   a__isNatKind(X) -> isNatKind(X)
   a__U23(X) -> U23(X)
   a__isNat(X) -> isNat(X)
   a__U31(X1, X2) -> U31(X1, X2)
   a__U32(X1, X2) -> U32(X1, X2)
   a__U33(X) -> U33(X)
   a__U41(X1, X2, X3) -> U41(X1, X2, X3)
   a__U42(X1, X2, X3) -> U42(X1, X2, X3)
   a__U43(X1, X2, X3) -> U43(X1, X2, X3)
   a__U44(X1, X2, X3) -> U44(X1, X2, X3)
   a__U45(X1, X2) -> U45(X1, X2)
   a__U46(X) -> U46(X)
   a__isNatIList(X) -> isNatIList(X)
   a__U51(X1, X2) -> U51(X1, X2)
   a__U52(X) -> U52(X)
   a__U61(X) -> U61(X)
   a__U71(X) -> U71(X)
   a__U81(X1, X2, X3) -> U81(X1, X2, X3)
   a__U82(X1, X2, X3) -> U82(X1, X2, X3)
   a__U83(X1, X2, X3) -> U83(X1, X2, X3)
   a__U84(X1, X2, X3) -> U84(X1, X2, X3)
   a__U85(X1, X2) -> U85(X1, X2)
   a__U86(X) -> U86(X)
   a__U91(X1, X2, X3) -> U91(X1, X2, X3)
   a__U92(X1, X2, X3) -> U92(X1, X2, X3)
   a__U93(X1, X2, X3) -> U93(X1, X2, X3)
   a__U94(X1, X2) -> U94(X1, X2)
   a__length(X) -> length(X)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(26) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 3 less nodes.
----------------------------------------

(27)
TRUE

----------------------------------------

(28)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(U12(X1, X2)) -> MARK(X1)
   MARK(U11(X1, X2)) -> MARK(X1)
   MARK(U13(X)) -> MARK(X)
   MARK(U21(X1, X2)) -> MARK(X1)
   MARK(U22(X1, X2)) -> MARK(X1)
   MARK(U23(X)) -> MARK(X)
   MARK(U31(X1, X2)) -> MARK(X1)
   MARK(U32(X1, X2)) -> MARK(X1)
   MARK(U33(X)) -> MARK(X)
   MARK(U41(X1, X2, X3)) -> MARK(X1)
   MARK(U42(X1, X2, X3)) -> MARK(X1)
   MARK(U43(X1, X2, X3)) -> MARK(X1)
   MARK(U44(X1, X2, X3)) -> MARK(X1)
   MARK(U45(X1, X2)) -> MARK(X1)
   MARK(U46(X)) -> MARK(X)
   MARK(U51(X1, X2)) -> MARK(X1)
   MARK(U52(X)) -> MARK(X)
   MARK(U61(X)) -> MARK(X)
   MARK(U71(X)) -> MARK(X)
   MARK(U81(X1, X2, X3)) -> MARK(X1)
   MARK(U82(X1, X2, X3)) -> MARK(X1)
   MARK(U83(X1, X2, X3)) -> MARK(X1)
   MARK(U84(X1, X2, X3)) -> MARK(X1)
   MARK(U85(X1, X2)) -> MARK(X1)
   MARK(U86(X)) -> MARK(X)
   MARK(s(X)) -> MARK(X)

The TRS R consists of the following rules:

   a__zeros -> cons(0, zeros)
   a__U11(tt, V1) -> a__U12(a__isNatIListKind(V1), V1)
   a__U12(tt, V1) -> a__U13(a__isNatList(V1))
   a__U13(tt) -> tt
   a__U21(tt, V1) -> a__U22(a__isNatKind(V1), V1)
   a__U22(tt, V1) -> a__U23(a__isNat(V1))
   a__U23(tt) -> tt
   a__U31(tt, V) -> a__U32(a__isNatIListKind(V), V)
   a__U32(tt, V) -> a__U33(a__isNatList(V))
   a__U33(tt) -> tt
   a__U41(tt, V1, V2) -> a__U42(a__isNatKind(V1), V1, V2)
   a__U42(tt, V1, V2) -> a__U43(a__isNatIListKind(V2), V1, V2)
   a__U43(tt, V1, V2) -> a__U44(a__isNatIListKind(V2), V1, V2)
   a__U44(tt, V1, V2) -> a__U45(a__isNat(V1), V2)
   a__U45(tt, V2) -> a__U46(a__isNatIList(V2))
   a__U46(tt) -> tt
   a__U51(tt, V2) -> a__U52(a__isNatIListKind(V2))
   a__U52(tt) -> tt
   a__U61(tt) -> tt
   a__U71(tt) -> tt
   a__U81(tt, V1, V2) -> a__U82(a__isNatKind(V1), V1, V2)
   a__U82(tt, V1, V2) -> a__U83(a__isNatIListKind(V2), V1, V2)
   a__U83(tt, V1, V2) -> a__U84(a__isNatIListKind(V2), V1, V2)
   a__U84(tt, V1, V2) -> a__U85(a__isNat(V1), V2)
   a__U85(tt, V2) -> a__U86(a__isNatList(V2))
   a__U86(tt) -> tt
   a__U91(tt, L, N) -> a__U92(a__isNatIListKind(L), L, N)
   a__U92(tt, L, N) -> a__U93(a__isNat(N), L, N)
   a__U93(tt, L, N) -> a__U94(a__isNatKind(N), L)
   a__U94(tt, L) -> s(a__length(mark(L)))
   a__isNat(0) -> tt
   a__isNat(length(V1)) -> a__U11(a__isNatIListKind(V1), V1)
   a__isNat(s(V1)) -> a__U21(a__isNatKind(V1), V1)
   a__isNatIList(V) -> a__U31(a__isNatIListKind(V), V)
   a__isNatIList(zeros) -> tt
   a__isNatIList(cons(V1, V2)) -> a__U41(a__isNatKind(V1), V1, V2)
   a__isNatIListKind(nil) -> tt
   a__isNatIListKind(zeros) -> tt
   a__isNatIListKind(cons(V1, V2)) -> a__U51(a__isNatKind(V1), V2)
   a__isNatKind(0) -> tt
   a__isNatKind(length(V1)) -> a__U61(a__isNatIListKind(V1))
   a__isNatKind(s(V1)) -> a__U71(a__isNatKind(V1))
   a__isNatList(nil) -> tt
   a__isNatList(cons(V1, V2)) -> a__U81(a__isNatKind(V1), V1, V2)
   a__length(nil) -> 0
   a__length(cons(N, L)) -> a__U91(a__isNatList(L), L, N)
   mark(zeros) -> a__zeros
   mark(U11(X1, X2)) -> a__U11(mark(X1), X2)
   mark(U12(X1, X2)) -> a__U12(mark(X1), X2)
   mark(isNatIListKind(X)) -> a__isNatIListKind(X)
   mark(U13(X)) -> a__U13(mark(X))
   mark(isNatList(X)) -> a__isNatList(X)
   mark(U21(X1, X2)) -> a__U21(mark(X1), X2)
   mark(U22(X1, X2)) -> a__U22(mark(X1), X2)
   mark(isNatKind(X)) -> a__isNatKind(X)
   mark(U23(X)) -> a__U23(mark(X))
   mark(isNat(X)) -> a__isNat(X)
   mark(U31(X1, X2)) -> a__U31(mark(X1), X2)
   mark(U32(X1, X2)) -> a__U32(mark(X1), X2)
   mark(U33(X)) -> a__U33(mark(X))
   mark(U41(X1, X2, X3)) -> a__U41(mark(X1), X2, X3)
   mark(U42(X1, X2, X3)) -> a__U42(mark(X1), X2, X3)
   mark(U43(X1, X2, X3)) -> a__U43(mark(X1), X2, X3)
   mark(U44(X1, X2, X3)) -> a__U44(mark(X1), X2, X3)
   mark(U45(X1, X2)) -> a__U45(mark(X1), X2)
   mark(U46(X)) -> a__U46(mark(X))
   mark(isNatIList(X)) -> a__isNatIList(X)
   mark(U51(X1, X2)) -> a__U51(mark(X1), X2)
   mark(U52(X)) -> a__U52(mark(X))
   mark(U61(X)) -> a__U61(mark(X))
   mark(U71(X)) -> a__U71(mark(X))
   mark(U81(X1, X2, X3)) -> a__U81(mark(X1), X2, X3)
   mark(U82(X1, X2, X3)) -> a__U82(mark(X1), X2, X3)
   mark(U83(X1, X2, X3)) -> a__U83(mark(X1), X2, X3)
   mark(U84(X1, X2, X3)) -> a__U84(mark(X1), X2, X3)
   mark(U85(X1, X2)) -> a__U85(mark(X1), X2)
   mark(U86(X)) -> a__U86(mark(X))
   mark(U91(X1, X2, X3)) -> a__U91(mark(X1), X2, X3)
   mark(U92(X1, X2, X3)) -> a__U92(mark(X1), X2, X3)
   mark(U93(X1, X2, X3)) -> a__U93(mark(X1), X2, X3)
   mark(U94(X1, X2)) -> a__U94(mark(X1), X2)
   mark(length(X)) -> a__length(mark(X))
   mark(cons(X1, X2)) -> cons(mark(X1), X2)
   mark(0) -> 0
   mark(tt) -> tt
   mark(s(X)) -> s(mark(X))
   mark(nil) -> nil
   a__zeros -> zeros
   a__U11(X1, X2) -> U11(X1, X2)
   a__U12(X1, X2) -> U12(X1, X2)
   a__isNatIListKind(X) -> isNatIListKind(X)
   a__U13(X) -> U13(X)
   a__isNatList(X) -> isNatList(X)
   a__U21(X1, X2) -> U21(X1, X2)
   a__U22(X1, X2) -> U22(X1, X2)
   a__isNatKind(X) -> isNatKind(X)
   a__U23(X) -> U23(X)
   a__isNat(X) -> isNat(X)
   a__U31(X1, X2) -> U31(X1, X2)
   a__U32(X1, X2) -> U32(X1, X2)
   a__U33(X) -> U33(X)
   a__U41(X1, X2, X3) -> U41(X1, X2, X3)
   a__U42(X1, X2, X3) -> U42(X1, X2, X3)
   a__U43(X1, X2, X3) -> U43(X1, X2, X3)
   a__U44(X1, X2, X3) -> U44(X1, X2, X3)
   a__U45(X1, X2) -> U45(X1, X2)
   a__U46(X) -> U46(X)
   a__isNatIList(X) -> isNatIList(X)
   a__U51(X1, X2) -> U51(X1, X2)
   a__U52(X) -> U52(X)
   a__U61(X) -> U61(X)
   a__U71(X) -> U71(X)
   a__U81(X1, X2, X3) -> U81(X1, X2, X3)
   a__U82(X1, X2, X3) -> U82(X1, X2, X3)
   a__U83(X1, X2, X3) -> U83(X1, X2, X3)
   a__U84(X1, X2, X3) -> U84(X1, X2, X3)
   a__U85(X1, X2) -> U85(X1, X2)
   a__U86(X) -> U86(X)
   a__U91(X1, X2, X3) -> U91(X1, X2, X3)
   a__U92(X1, X2, X3) -> U92(X1, X2, X3)
   a__U93(X1, X2, X3) -> U93(X1, X2, X3)
   a__U94(X1, X2) -> U94(X1, X2)
   a__length(X) -> length(X)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(29) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(30)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(U12(X1, X2)) -> MARK(X1)
   MARK(U11(X1, X2)) -> MARK(X1)
   MARK(U13(X)) -> MARK(X)
   MARK(U21(X1, X2)) -> MARK(X1)
   MARK(U22(X1, X2)) -> MARK(X1)
   MARK(U23(X)) -> MARK(X)
   MARK(U31(X1, X2)) -> MARK(X1)
   MARK(U32(X1, X2)) -> MARK(X1)
   MARK(U33(X)) -> MARK(X)
   MARK(U41(X1, X2, X3)) -> MARK(X1)
   MARK(U42(X1, X2, X3)) -> MARK(X1)
   MARK(U43(X1, X2, X3)) -> MARK(X1)
   MARK(U44(X1, X2, X3)) -> MARK(X1)
   MARK(U45(X1, X2)) -> MARK(X1)
   MARK(U46(X)) -> MARK(X)
   MARK(U51(X1, X2)) -> MARK(X1)
   MARK(U52(X)) -> MARK(X)
   MARK(U61(X)) -> MARK(X)
   MARK(U71(X)) -> MARK(X)
   MARK(U81(X1, X2, X3)) -> MARK(X1)
   MARK(U82(X1, X2, X3)) -> MARK(X1)
   MARK(U83(X1, X2, X3)) -> MARK(X1)
   MARK(U84(X1, X2, X3)) -> MARK(X1)
   MARK(U85(X1, X2)) -> MARK(X1)
   MARK(U86(X)) -> MARK(X)
   MARK(s(X)) -> MARK(X)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(31) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*MARK(U12(X1, X2)) -> MARK(X1)
The graph contains the following edges 1 > 1


*MARK(U11(X1, X2)) -> MARK(X1)
The graph contains the following edges 1 > 1


*MARK(U13(X)) -> MARK(X)
The graph contains the following edges 1 > 1


*MARK(U21(X1, X2)) -> MARK(X1)
The graph contains the following edges 1 > 1


*MARK(U22(X1, X2)) -> MARK(X1)
The graph contains the following edges 1 > 1


*MARK(U23(X)) -> MARK(X)
The graph contains the following edges 1 > 1


*MARK(U31(X1, X2)) -> MARK(X1)
The graph contains the following edges 1 > 1


*MARK(U32(X1, X2)) -> MARK(X1)
The graph contains the following edges 1 > 1


*MARK(U33(X)) -> MARK(X)
The graph contains the following edges 1 > 1


*MARK(U41(X1, X2, X3)) -> MARK(X1)
The graph contains the following edges 1 > 1


*MARK(U42(X1, X2, X3)) -> MARK(X1)
The graph contains the following edges 1 > 1


*MARK(U43(X1, X2, X3)) -> MARK(X1)
The graph contains the following edges 1 > 1


*MARK(U44(X1, X2, X3)) -> MARK(X1)
The graph contains the following edges 1 > 1


*MARK(U45(X1, X2)) -> MARK(X1)
The graph contains the following edges 1 > 1


*MARK(U46(X)) -> MARK(X)
The graph contains the following edges 1 > 1


*MARK(U51(X1, X2)) -> MARK(X1)
The graph contains the following edges 1 > 1


*MARK(U52(X)) -> MARK(X)
The graph contains the following edges 1 > 1


*MARK(U61(X)) -> MARK(X)
The graph contains the following edges 1 > 1


*MARK(U71(X)) -> MARK(X)
The graph contains the following edges 1 > 1


*MARK(U81(X1, X2, X3)) -> MARK(X1)
The graph contains the following edges 1 > 1


*MARK(U82(X1, X2, X3)) -> MARK(X1)
The graph contains the following edges 1 > 1


*MARK(U83(X1, X2, X3)) -> MARK(X1)
The graph contains the following edges 1 > 1


*MARK(U84(X1, X2, X3)) -> MARK(X1)
The graph contains the following edges 1 > 1


*MARK(U85(X1, X2)) -> MARK(X1)
The graph contains the following edges 1 > 1


*MARK(U86(X)) -> MARK(X)
The graph contains the following edges 1 > 1


*MARK(s(X)) -> MARK(X)
The graph contains the following edges 1 > 1


----------------------------------------

(32)
YES
