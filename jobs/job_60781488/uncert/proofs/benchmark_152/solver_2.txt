YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/gLnas.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) AAECC Innermost [EQUIVALENT, 0 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 0 ms]
(4) QDP
(5) UsableRulesProof [EQUIVALENT, 0 ms]
(6) QDP
(7) QReductionProof [EQUIVALENT, 0 ms]
(8) QDP
(9) TransformationProof [EQUIVALENT, 0 ms]
(10) QDP
(11) DependencyGraphProof [EQUIVALENT, 0 ms]
(12) TRUE


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(x, y, z) -> g(x, y, z)
   g(0, 1, x) -> f(x, x, x)
   a -> b
   a -> c

Q is empty.

----------------------------------------

(1) AAECC Innermost (EQUIVALENT)
We have applied [NOC,AAECCNOC] to switch to innermost. The TRS R 1 is none

The TRS R 2 is 
   f(x, y, z) -> g(x, y, z)
   g(0, 1, x) -> f(x, x, x)
   a -> b
   a -> c

The signature Sigma is {f_3, g_3, a, b, c}
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(x, y, z) -> g(x, y, z)
   g(0, 1, x) -> f(x, x, x)
   a -> b
   a -> c

The set Q consists of the following terms:

   f(x0, x1, x2)
   g(0, 1, x0)
   a


----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(x, y, z) -> G(x, y, z)
   G(0, 1, x) -> F(x, x, x)

The TRS R consists of the following rules:

   f(x, y, z) -> g(x, y, z)
   g(0, 1, x) -> f(x, x, x)
   a -> b
   a -> c

The set Q consists of the following terms:

   f(x0, x1, x2)
   g(0, 1, x0)
   a

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(x, y, z) -> G(x, y, z)
   G(0, 1, x) -> F(x, x, x)

R is empty.
The set Q consists of the following terms:

   f(x0, x1, x2)
   g(0, 1, x0)
   a

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   f(x0, x1, x2)
   g(0, 1, x0)
   a


----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(x, y, z) -> G(x, y, z)
   G(0, 1, x) -> F(x, x, x)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule F(x, y, z) -> G(x, y, z) we obtained the following new rules [LPAR04]:

   (F(z0, z0, z0) -> G(z0, z0, z0),F(z0, z0, z0) -> G(z0, z0, z0))


----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   G(0, 1, x) -> F(x, x, x)
   F(z0, z0, z0) -> G(z0, z0, z0)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 2 less nodes.
----------------------------------------

(12)
TRUE
