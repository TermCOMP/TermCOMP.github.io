YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/CZ4Gb.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRSRRRProof [EQUIVALENT, 31 ms]
(2) QTRS
(3) QTRSRRRProof [EQUIVALENT, 0 ms]
(4) QTRS
(5) AAECC Innermost [EQUIVALENT, 0 ms]
(6) QTRS
(7) DependencyPairsProof [EQUIVALENT, 0 ms]
(8) QDP
(9) DependencyGraphProof [EQUIVALENT, 0 ms]
(10) AND
    (11) QDP
        (12) UsableRulesProof [EQUIVALENT, 0 ms]
        (13) QDP
        (14) QReductionProof [EQUIVALENT, 0 ms]
        (15) QDP
        (16) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (17) YES
    (18) QDP
        (19) UsableRulesProof [EQUIVALENT, 0 ms]
        (20) QDP
        (21) QReductionProof [EQUIVALENT, 0 ms]
        (22) QDP
        (23) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (24) YES
    (25) QDP
        (26) UsableRulesProof [EQUIVALENT, 0 ms]
        (27) QDP
        (28) QReductionProof [EQUIVALENT, 0 ms]
        (29) QDP
        (30) QDPOrderProof [EQUIVALENT, 12 ms]
        (31) QDP
        (32) PisEmptyProof [EQUIVALENT, 0 ms]
        (33) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   g(x, 0) -> 0
   g(d, s(x)) -> s(s(g(d, x)))
   g(h, s(0)) -> 0
   g(h, s(s(x))) -> s(g(h, x))
   double(x) -> g(d, x)
   half(x) -> g(h, x)
   f(s(x), y) -> f(half(s(x)), double(y))
   f(s(0), y) -> y
   id(x) -> f(x, s(0))

Q is empty.

----------------------------------------

(1) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(d) = 0
   POL(double(x_1)) = x_1
   POL(f(x_1, x_2)) = 2*x_1 + 2*x_2
   POL(g(x_1, x_2)) = x_1 + x_2
   POL(h) = 0
   POL(half(x_1)) = x_1
   POL(id(x_1)) = 2 + 2*x_1
   POL(s(x_1)) = x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   id(x) -> f(x, s(0))




----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   g(x, 0) -> 0
   g(d, s(x)) -> s(s(g(d, x)))
   g(h, s(0)) -> 0
   g(h, s(s(x))) -> s(g(h, x))
   double(x) -> g(d, x)
   half(x) -> g(h, x)
   f(s(x), y) -> f(half(s(x)), double(y))
   f(s(0), y) -> y

Q is empty.

----------------------------------------

(3) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(d) = 0
   POL(double(x_1)) = x_1
   POL(f(x_1, x_2)) = 1 + x_1 + 2*x_2
   POL(g(x_1, x_2)) = x_1 + x_2
   POL(h) = 0
   POL(half(x_1)) = x_1
   POL(s(x_1)) = x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   f(s(0), y) -> y




----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   g(x, 0) -> 0
   g(d, s(x)) -> s(s(g(d, x)))
   g(h, s(0)) -> 0
   g(h, s(s(x))) -> s(g(h, x))
   double(x) -> g(d, x)
   half(x) -> g(h, x)
   f(s(x), y) -> f(half(s(x)), double(y))

Q is empty.

----------------------------------------

(5) AAECC Innermost (EQUIVALENT)
We have applied [NOC,AAECCNOC] to switch to innermost. The TRS R 1 is 
   g(h, s(0)) -> 0
   g(h, s(s(x))) -> s(g(h, x))
   double(x) -> g(d, x)
   half(x) -> g(h, x)
   g(x, 0) -> 0
   g(d, s(x)) -> s(s(g(d, x)))

The TRS R 2 is 
   f(s(x), y) -> f(half(s(x)), double(y))

The signature Sigma is {f_2}
----------------------------------------

(6)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   g(x, 0) -> 0
   g(d, s(x)) -> s(s(g(d, x)))
   g(h, s(0)) -> 0
   g(h, s(s(x))) -> s(g(h, x))
   double(x) -> g(d, x)
   half(x) -> g(h, x)
   f(s(x), y) -> f(half(s(x)), double(y))

The set Q consists of the following terms:

   g(x0, 0)
   g(d, s(x0))
   g(h, s(0))
   g(h, s(s(x0)))
   double(x0)
   half(x0)
   f(s(x0), x1)


----------------------------------------

(7) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   G(d, s(x)) -> G(d, x)
   G(h, s(s(x))) -> G(h, x)
   DOUBLE(x) -> G(d, x)
   HALF(x) -> G(h, x)
   F(s(x), y) -> F(half(s(x)), double(y))
   F(s(x), y) -> HALF(s(x))
   F(s(x), y) -> DOUBLE(y)

The TRS R consists of the following rules:

   g(x, 0) -> 0
   g(d, s(x)) -> s(s(g(d, x)))
   g(h, s(0)) -> 0
   g(h, s(s(x))) -> s(g(h, x))
   double(x) -> g(d, x)
   half(x) -> g(h, x)
   f(s(x), y) -> f(half(s(x)), double(y))

The set Q consists of the following terms:

   g(x0, 0)
   g(d, s(x0))
   g(h, s(0))
   g(h, s(s(x0)))
   double(x0)
   half(x0)
   f(s(x0), x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 3 SCCs with 4 less nodes.
----------------------------------------

(10)
Complex Obligation (AND)

----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   G(h, s(s(x))) -> G(h, x)

The TRS R consists of the following rules:

   g(x, 0) -> 0
   g(d, s(x)) -> s(s(g(d, x)))
   g(h, s(0)) -> 0
   g(h, s(s(x))) -> s(g(h, x))
   double(x) -> g(d, x)
   half(x) -> g(h, x)
   f(s(x), y) -> f(half(s(x)), double(y))

The set Q consists of the following terms:

   g(x0, 0)
   g(d, s(x0))
   g(h, s(0))
   g(h, s(s(x0)))
   double(x0)
   half(x0)
   f(s(x0), x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(12) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(13)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   G(h, s(s(x))) -> G(h, x)

R is empty.
The set Q consists of the following terms:

   g(x0, 0)
   g(d, s(x0))
   g(h, s(0))
   g(h, s(s(x0)))
   double(x0)
   half(x0)
   f(s(x0), x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(14) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   g(x0, 0)
   g(d, s(x0))
   g(h, s(0))
   g(h, s(s(x0)))
   double(x0)
   half(x0)
   f(s(x0), x1)


----------------------------------------

(15)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   G(h, s(s(x))) -> G(h, x)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(16) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*G(h, s(s(x))) -> G(h, x)
The graph contains the following edges 1 >= 1, 2 > 2


----------------------------------------

(17)
YES

----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   G(d, s(x)) -> G(d, x)

The TRS R consists of the following rules:

   g(x, 0) -> 0
   g(d, s(x)) -> s(s(g(d, x)))
   g(h, s(0)) -> 0
   g(h, s(s(x))) -> s(g(h, x))
   double(x) -> g(d, x)
   half(x) -> g(h, x)
   f(s(x), y) -> f(half(s(x)), double(y))

The set Q consists of the following terms:

   g(x0, 0)
   g(d, s(x0))
   g(h, s(0))
   g(h, s(s(x0)))
   double(x0)
   half(x0)
   f(s(x0), x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(20)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   G(d, s(x)) -> G(d, x)

R is empty.
The set Q consists of the following terms:

   g(x0, 0)
   g(d, s(x0))
   g(h, s(0))
   g(h, s(s(x0)))
   double(x0)
   half(x0)
   f(s(x0), x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(21) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   g(x0, 0)
   g(d, s(x0))
   g(h, s(0))
   g(h, s(s(x0)))
   double(x0)
   half(x0)
   f(s(x0), x1)


----------------------------------------

(22)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   G(d, s(x)) -> G(d, x)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(23) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*G(d, s(x)) -> G(d, x)
The graph contains the following edges 1 >= 1, 2 > 2


----------------------------------------

(24)
YES

----------------------------------------

(25)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(x), y) -> F(half(s(x)), double(y))

The TRS R consists of the following rules:

   g(x, 0) -> 0
   g(d, s(x)) -> s(s(g(d, x)))
   g(h, s(0)) -> 0
   g(h, s(s(x))) -> s(g(h, x))
   double(x) -> g(d, x)
   half(x) -> g(h, x)
   f(s(x), y) -> f(half(s(x)), double(y))

The set Q consists of the following terms:

   g(x0, 0)
   g(d, s(x0))
   g(h, s(0))
   g(h, s(s(x0)))
   double(x0)
   half(x0)
   f(s(x0), x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(26) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(27)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(x), y) -> F(half(s(x)), double(y))

The TRS R consists of the following rules:

   half(x) -> g(h, x)
   double(x) -> g(d, x)
   g(x, 0) -> 0
   g(d, s(x)) -> s(s(g(d, x)))
   g(h, s(0)) -> 0
   g(h, s(s(x))) -> s(g(h, x))

The set Q consists of the following terms:

   g(x0, 0)
   g(d, s(x0))
   g(h, s(0))
   g(h, s(s(x0)))
   double(x0)
   half(x0)
   f(s(x0), x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(28) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   f(s(x0), x1)


----------------------------------------

(29)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(x), y) -> F(half(s(x)), double(y))

The TRS R consists of the following rules:

   half(x) -> g(h, x)
   double(x) -> g(d, x)
   g(x, 0) -> 0
   g(d, s(x)) -> s(s(g(d, x)))
   g(h, s(0)) -> 0
   g(h, s(s(x))) -> s(g(h, x))

The set Q consists of the following terms:

   g(x0, 0)
   g(d, s(x0))
   g(h, s(0))
   g(h, s(s(x0)))
   double(x0)
   half(x0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(30) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   F(s(x), y) -> F(half(s(x)), double(y))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO,RATPOLO]:

   POL(0) = 0
   POL(F(x_1, x_2)) = [1/4]x_1
   POL(d) = 0
   POL(double(x_1)) = 0
   POL(g(x_1, x_2)) = [1/2]x_2
   POL(h) = 0
   POL(half(x_1)) = [1/2]x_1
   POL(s(x_1)) = [4] + x_1
The value of delta used in the strict ordering is 1/2.
The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   half(x) -> g(h, x)
   g(x, 0) -> 0
   g(h, s(0)) -> 0
   g(h, s(s(x))) -> s(g(h, x))


----------------------------------------

(31)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   half(x) -> g(h, x)
   double(x) -> g(d, x)
   g(x, 0) -> 0
   g(d, s(x)) -> s(s(g(d, x)))
   g(h, s(0)) -> 0
   g(h, s(s(x))) -> s(g(h, x))

The set Q consists of the following terms:

   g(x0, 0)
   g(d, s(x0))
   g(h, s(0))
   g(h, s(s(x0)))
   double(x0)
   half(x0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(32) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(33)
YES
