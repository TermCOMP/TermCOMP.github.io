YES

Problem 1: 

(VAR vu95NonEmpty M N X X1 X2)
(RULES
active(and(tt,X)) -> mark(X)
active(and(X1,X2)) -> and(active(X1),X2)
active(plus(N,s(M))) -> mark(s(plus(N,M)))
active(plus(N,num0)) -> mark(N)
active(plus(X1,X2)) -> plus(active(X1),X2)
active(plus(X1,X2)) -> plus(X1,active(X2))
active(s(X)) -> s(active(X))
active(x(N,s(M))) -> mark(plus(x(N,M),N))
active(x(N,num0)) -> mark(num0)
active(x(X1,X2)) -> x(active(X1),X2)
active(x(X1,X2)) -> x(X1,active(X2))
and(mark(X1),X2) -> mark(and(X1,X2))
and(ok(X1),ok(X2)) -> ok(and(X1,X2))
plus(mark(X1),X2) -> mark(plus(X1,X2))
plus(ok(X1),ok(X2)) -> ok(plus(X1,X2))
plus(X1,mark(X2)) -> mark(plus(X1,X2))
proper(and(X1,X2)) -> and(proper(X1),proper(X2))
proper(plus(X1,X2)) -> plus(proper(X1),proper(X2))
proper(s(X)) -> s(proper(X))
proper(x(X1,X2)) -> x(proper(X1),proper(X2))
proper(num0) -> ok(num0)
proper(tt) -> ok(tt)
s(mark(X)) -> mark(s(X))
s(ok(X)) -> ok(s(X))
top(mark(X)) -> top(proper(X))
top(ok(X)) -> top(active(X))
x(mark(X1),X2) -> mark(x(X1,X2))
x(ok(X1),ok(X2)) -> ok(x(X1,X2))
x(X1,mark(X2)) -> mark(x(X1,X2))
)


Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 ACTIVE(and(X1,X2)) -> ACTIVE(X1)
 ACTIVE(and(X1,X2)) -> AND(active(X1),X2)
 ACTIVE(plus(N,s(M))) -> PLUS(N,M)
 ACTIVE(plus(N,s(M))) -> S(plus(N,M))
 ACTIVE(plus(X1,X2)) -> ACTIVE(X1)
 ACTIVE(plus(X1,X2)) -> ACTIVE(X2)
 ACTIVE(plus(X1,X2)) -> PLUS(active(X1),X2)
 ACTIVE(plus(X1,X2)) -> PLUS(X1,active(X2))
 ACTIVE(s(X)) -> ACTIVE(X)
 ACTIVE(s(X)) -> S(active(X))
 ACTIVE(x(N,s(M))) -> PLUS(x(N,M),N)
 ACTIVE(x(N,s(M))) -> X(N,M)
 ACTIVE(x(X1,X2)) -> ACTIVE(X1)
 ACTIVE(x(X1,X2)) -> ACTIVE(X2)
 ACTIVE(x(X1,X2)) -> X(active(X1),X2)
 ACTIVE(x(X1,X2)) -> X(X1,active(X2))
 AND(mark(X1),X2) -> AND(X1,X2)
 AND(ok(X1),ok(X2)) -> AND(X1,X2)
 PLUS(mark(X1),X2) -> PLUS(X1,X2)
 PLUS(ok(X1),ok(X2)) -> PLUS(X1,X2)
 PLUS(X1,mark(X2)) -> PLUS(X1,X2)
 PROPER(and(X1,X2)) -> AND(proper(X1),proper(X2))
 PROPER(and(X1,X2)) -> PROPER(X1)
 PROPER(and(X1,X2)) -> PROPER(X2)
 PROPER(plus(X1,X2)) -> PLUS(proper(X1),proper(X2))
 PROPER(plus(X1,X2)) -> PROPER(X1)
 PROPER(plus(X1,X2)) -> PROPER(X2)
 PROPER(s(X)) -> PROPER(X)
 PROPER(s(X)) -> S(proper(X))
 PROPER(x(X1,X2)) -> PROPER(X1)
 PROPER(x(X1,X2)) -> PROPER(X2)
 PROPER(x(X1,X2)) -> X(proper(X1),proper(X2))
 S(mark(X)) -> S(X)
 S(ok(X)) -> S(X)
 TOP(mark(X)) -> PROPER(X)
 TOP(mark(X)) -> TOP(proper(X))
 TOP(ok(X)) -> ACTIVE(X)
 TOP(ok(X)) -> TOP(active(X))
 X(mark(X1),X2) -> X(X1,X2)
 X(ok(X1),ok(X2)) -> X(X1,X2)
 X(X1,mark(X2)) -> X(X1,X2)
-> Rules:
 active(and(tt,X)) -> mark(X)
 active(and(X1,X2)) -> and(active(X1),X2)
 active(plus(N,s(M))) -> mark(s(plus(N,M)))
 active(plus(N,num0)) -> mark(N)
 active(plus(X1,X2)) -> plus(active(X1),X2)
 active(plus(X1,X2)) -> plus(X1,active(X2))
 active(s(X)) -> s(active(X))
 active(x(N,s(M))) -> mark(plus(x(N,M),N))
 active(x(N,num0)) -> mark(num0)
 active(x(X1,X2)) -> x(active(X1),X2)
 active(x(X1,X2)) -> x(X1,active(X2))
 and(mark(X1),X2) -> mark(and(X1,X2))
 and(ok(X1),ok(X2)) -> ok(and(X1,X2))
 plus(mark(X1),X2) -> mark(plus(X1,X2))
 plus(ok(X1),ok(X2)) -> ok(plus(X1,X2))
 plus(X1,mark(X2)) -> mark(plus(X1,X2))
 proper(and(X1,X2)) -> and(proper(X1),proper(X2))
 proper(plus(X1,X2)) -> plus(proper(X1),proper(X2))
 proper(s(X)) -> s(proper(X))
 proper(x(X1,X2)) -> x(proper(X1),proper(X2))
 proper(num0) -> ok(num0)
 proper(tt) -> ok(tt)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
 x(mark(X1),X2) -> mark(x(X1,X2))
 x(ok(X1),ok(X2)) -> ok(x(X1,X2))
 x(X1,mark(X2)) -> mark(x(X1,X2))

Problem 1: 

SCC Processor:
-> Pairs:
 ACTIVE(and(X1,X2)) -> ACTIVE(X1)
 ACTIVE(and(X1,X2)) -> AND(active(X1),X2)
 ACTIVE(plus(N,s(M))) -> PLUS(N,M)
 ACTIVE(plus(N,s(M))) -> S(plus(N,M))
 ACTIVE(plus(X1,X2)) -> ACTIVE(X1)
 ACTIVE(plus(X1,X2)) -> ACTIVE(X2)
 ACTIVE(plus(X1,X2)) -> PLUS(active(X1),X2)
 ACTIVE(plus(X1,X2)) -> PLUS(X1,active(X2))
 ACTIVE(s(X)) -> ACTIVE(X)
 ACTIVE(s(X)) -> S(active(X))
 ACTIVE(x(N,s(M))) -> PLUS(x(N,M),N)
 ACTIVE(x(N,s(M))) -> X(N,M)
 ACTIVE(x(X1,X2)) -> ACTIVE(X1)
 ACTIVE(x(X1,X2)) -> ACTIVE(X2)
 ACTIVE(x(X1,X2)) -> X(active(X1),X2)
 ACTIVE(x(X1,X2)) -> X(X1,active(X2))
 AND(mark(X1),X2) -> AND(X1,X2)
 AND(ok(X1),ok(X2)) -> AND(X1,X2)
 PLUS(mark(X1),X2) -> PLUS(X1,X2)
 PLUS(ok(X1),ok(X2)) -> PLUS(X1,X2)
 PLUS(X1,mark(X2)) -> PLUS(X1,X2)
 PROPER(and(X1,X2)) -> AND(proper(X1),proper(X2))
 PROPER(and(X1,X2)) -> PROPER(X1)
 PROPER(and(X1,X2)) -> PROPER(X2)
 PROPER(plus(X1,X2)) -> PLUS(proper(X1),proper(X2))
 PROPER(plus(X1,X2)) -> PROPER(X1)
 PROPER(plus(X1,X2)) -> PROPER(X2)
 PROPER(s(X)) -> PROPER(X)
 PROPER(s(X)) -> S(proper(X))
 PROPER(x(X1,X2)) -> PROPER(X1)
 PROPER(x(X1,X2)) -> PROPER(X2)
 PROPER(x(X1,X2)) -> X(proper(X1),proper(X2))
 S(mark(X)) -> S(X)
 S(ok(X)) -> S(X)
 TOP(mark(X)) -> PROPER(X)
 TOP(mark(X)) -> TOP(proper(X))
 TOP(ok(X)) -> ACTIVE(X)
 TOP(ok(X)) -> TOP(active(X))
 X(mark(X1),X2) -> X(X1,X2)
 X(ok(X1),ok(X2)) -> X(X1,X2)
 X(X1,mark(X2)) -> X(X1,X2)
-> Rules:
 active(and(tt,X)) -> mark(X)
 active(and(X1,X2)) -> and(active(X1),X2)
 active(plus(N,s(M))) -> mark(s(plus(N,M)))
 active(plus(N,num0)) -> mark(N)
 active(plus(X1,X2)) -> plus(active(X1),X2)
 active(plus(X1,X2)) -> plus(X1,active(X2))
 active(s(X)) -> s(active(X))
 active(x(N,s(M))) -> mark(plus(x(N,M),N))
 active(x(N,num0)) -> mark(num0)
 active(x(X1,X2)) -> x(active(X1),X2)
 active(x(X1,X2)) -> x(X1,active(X2))
 and(mark(X1),X2) -> mark(and(X1,X2))
 and(ok(X1),ok(X2)) -> ok(and(X1,X2))
 plus(mark(X1),X2) -> mark(plus(X1,X2))
 plus(ok(X1),ok(X2)) -> ok(plus(X1,X2))
 plus(X1,mark(X2)) -> mark(plus(X1,X2))
 proper(and(X1,X2)) -> and(proper(X1),proper(X2))
 proper(plus(X1,X2)) -> plus(proper(X1),proper(X2))
 proper(s(X)) -> s(proper(X))
 proper(x(X1,X2)) -> x(proper(X1),proper(X2))
 proper(num0) -> ok(num0)
 proper(tt) -> ok(tt)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
 x(mark(X1),X2) -> mark(x(X1,X2))
 x(ok(X1),ok(X2)) -> ok(x(X1,X2))
 x(X1,mark(X2)) -> mark(x(X1,X2))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 X(mark(X1),X2) -> X(X1,X2)
 X(ok(X1),ok(X2)) -> X(X1,X2)
 X(X1,mark(X2)) -> X(X1,X2)
->->-> Rules:
 active(and(tt,X)) -> mark(X)
 active(and(X1,X2)) -> and(active(X1),X2)
 active(plus(N,s(M))) -> mark(s(plus(N,M)))
 active(plus(N,num0)) -> mark(N)
 active(plus(X1,X2)) -> plus(active(X1),X2)
 active(plus(X1,X2)) -> plus(X1,active(X2))
 active(s(X)) -> s(active(X))
 active(x(N,s(M))) -> mark(plus(x(N,M),N))
 active(x(N,num0)) -> mark(num0)
 active(x(X1,X2)) -> x(active(X1),X2)
 active(x(X1,X2)) -> x(X1,active(X2))
 and(mark(X1),X2) -> mark(and(X1,X2))
 and(ok(X1),ok(X2)) -> ok(and(X1,X2))
 plus(mark(X1),X2) -> mark(plus(X1,X2))
 plus(ok(X1),ok(X2)) -> ok(plus(X1,X2))
 plus(X1,mark(X2)) -> mark(plus(X1,X2))
 proper(and(X1,X2)) -> and(proper(X1),proper(X2))
 proper(plus(X1,X2)) -> plus(proper(X1),proper(X2))
 proper(s(X)) -> s(proper(X))
 proper(x(X1,X2)) -> x(proper(X1),proper(X2))
 proper(num0) -> ok(num0)
 proper(tt) -> ok(tt)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
 x(mark(X1),X2) -> mark(x(X1,X2))
 x(ok(X1),ok(X2)) -> ok(x(X1,X2))
 x(X1,mark(X2)) -> mark(x(X1,X2))
->->Cycle:
->->-> Pairs:
 S(mark(X)) -> S(X)
 S(ok(X)) -> S(X)
->->-> Rules:
 active(and(tt,X)) -> mark(X)
 active(and(X1,X2)) -> and(active(X1),X2)
 active(plus(N,s(M))) -> mark(s(plus(N,M)))
 active(plus(N,num0)) -> mark(N)
 active(plus(X1,X2)) -> plus(active(X1),X2)
 active(plus(X1,X2)) -> plus(X1,active(X2))
 active(s(X)) -> s(active(X))
 active(x(N,s(M))) -> mark(plus(x(N,M),N))
 active(x(N,num0)) -> mark(num0)
 active(x(X1,X2)) -> x(active(X1),X2)
 active(x(X1,X2)) -> x(X1,active(X2))
 and(mark(X1),X2) -> mark(and(X1,X2))
 and(ok(X1),ok(X2)) -> ok(and(X1,X2))
 plus(mark(X1),X2) -> mark(plus(X1,X2))
 plus(ok(X1),ok(X2)) -> ok(plus(X1,X2))
 plus(X1,mark(X2)) -> mark(plus(X1,X2))
 proper(and(X1,X2)) -> and(proper(X1),proper(X2))
 proper(plus(X1,X2)) -> plus(proper(X1),proper(X2))
 proper(s(X)) -> s(proper(X))
 proper(x(X1,X2)) -> x(proper(X1),proper(X2))
 proper(num0) -> ok(num0)
 proper(tt) -> ok(tt)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
 x(mark(X1),X2) -> mark(x(X1,X2))
 x(ok(X1),ok(X2)) -> ok(x(X1,X2))
 x(X1,mark(X2)) -> mark(x(X1,X2))
->->Cycle:
->->-> Pairs:
 PLUS(mark(X1),X2) -> PLUS(X1,X2)
 PLUS(ok(X1),ok(X2)) -> PLUS(X1,X2)
 PLUS(X1,mark(X2)) -> PLUS(X1,X2)
->->-> Rules:
 active(and(tt,X)) -> mark(X)
 active(and(X1,X2)) -> and(active(X1),X2)
 active(plus(N,s(M))) -> mark(s(plus(N,M)))
 active(plus(N,num0)) -> mark(N)
 active(plus(X1,X2)) -> plus(active(X1),X2)
 active(plus(X1,X2)) -> plus(X1,active(X2))
 active(s(X)) -> s(active(X))
 active(x(N,s(M))) -> mark(plus(x(N,M),N))
 active(x(N,num0)) -> mark(num0)
 active(x(X1,X2)) -> x(active(X1),X2)
 active(x(X1,X2)) -> x(X1,active(X2))
 and(mark(X1),X2) -> mark(and(X1,X2))
 and(ok(X1),ok(X2)) -> ok(and(X1,X2))
 plus(mark(X1),X2) -> mark(plus(X1,X2))
 plus(ok(X1),ok(X2)) -> ok(plus(X1,X2))
 plus(X1,mark(X2)) -> mark(plus(X1,X2))
 proper(and(X1,X2)) -> and(proper(X1),proper(X2))
 proper(plus(X1,X2)) -> plus(proper(X1),proper(X2))
 proper(s(X)) -> s(proper(X))
 proper(x(X1,X2)) -> x(proper(X1),proper(X2))
 proper(num0) -> ok(num0)
 proper(tt) -> ok(tt)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
 x(mark(X1),X2) -> mark(x(X1,X2))
 x(ok(X1),ok(X2)) -> ok(x(X1,X2))
 x(X1,mark(X2)) -> mark(x(X1,X2))
->->Cycle:
->->-> Pairs:
 AND(mark(X1),X2) -> AND(X1,X2)
 AND(ok(X1),ok(X2)) -> AND(X1,X2)
->->-> Rules:
 active(and(tt,X)) -> mark(X)
 active(and(X1,X2)) -> and(active(X1),X2)
 active(plus(N,s(M))) -> mark(s(plus(N,M)))
 active(plus(N,num0)) -> mark(N)
 active(plus(X1,X2)) -> plus(active(X1),X2)
 active(plus(X1,X2)) -> plus(X1,active(X2))
 active(s(X)) -> s(active(X))
 active(x(N,s(M))) -> mark(plus(x(N,M),N))
 active(x(N,num0)) -> mark(num0)
 active(x(X1,X2)) -> x(active(X1),X2)
 active(x(X1,X2)) -> x(X1,active(X2))
 and(mark(X1),X2) -> mark(and(X1,X2))
 and(ok(X1),ok(X2)) -> ok(and(X1,X2))
 plus(mark(X1),X2) -> mark(plus(X1,X2))
 plus(ok(X1),ok(X2)) -> ok(plus(X1,X2))
 plus(X1,mark(X2)) -> mark(plus(X1,X2))
 proper(and(X1,X2)) -> and(proper(X1),proper(X2))
 proper(plus(X1,X2)) -> plus(proper(X1),proper(X2))
 proper(s(X)) -> s(proper(X))
 proper(x(X1,X2)) -> x(proper(X1),proper(X2))
 proper(num0) -> ok(num0)
 proper(tt) -> ok(tt)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
 x(mark(X1),X2) -> mark(x(X1,X2))
 x(ok(X1),ok(X2)) -> ok(x(X1,X2))
 x(X1,mark(X2)) -> mark(x(X1,X2))
->->Cycle:
->->-> Pairs:
 PROPER(and(X1,X2)) -> PROPER(X1)
 PROPER(and(X1,X2)) -> PROPER(X2)
 PROPER(plus(X1,X2)) -> PROPER(X1)
 PROPER(plus(X1,X2)) -> PROPER(X2)
 PROPER(s(X)) -> PROPER(X)
 PROPER(x(X1,X2)) -> PROPER(X1)
 PROPER(x(X1,X2)) -> PROPER(X2)
->->-> Rules:
 active(and(tt,X)) -> mark(X)
 active(and(X1,X2)) -> and(active(X1),X2)
 active(plus(N,s(M))) -> mark(s(plus(N,M)))
 active(plus(N,num0)) -> mark(N)
 active(plus(X1,X2)) -> plus(active(X1),X2)
 active(plus(X1,X2)) -> plus(X1,active(X2))
 active(s(X)) -> s(active(X))
 active(x(N,s(M))) -> mark(plus(x(N,M),N))
 active(x(N,num0)) -> mark(num0)
 active(x(X1,X2)) -> x(active(X1),X2)
 active(x(X1,X2)) -> x(X1,active(X2))
 and(mark(X1),X2) -> mark(and(X1,X2))
 and(ok(X1),ok(X2)) -> ok(and(X1,X2))
 plus(mark(X1),X2) -> mark(plus(X1,X2))
 plus(ok(X1),ok(X2)) -> ok(plus(X1,X2))
 plus(X1,mark(X2)) -> mark(plus(X1,X2))
 proper(and(X1,X2)) -> and(proper(X1),proper(X2))
 proper(plus(X1,X2)) -> plus(proper(X1),proper(X2))
 proper(s(X)) -> s(proper(X))
 proper(x(X1,X2)) -> x(proper(X1),proper(X2))
 proper(num0) -> ok(num0)
 proper(tt) -> ok(tt)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
 x(mark(X1),X2) -> mark(x(X1,X2))
 x(ok(X1),ok(X2)) -> ok(x(X1,X2))
 x(X1,mark(X2)) -> mark(x(X1,X2))
->->Cycle:
->->-> Pairs:
 ACTIVE(and(X1,X2)) -> ACTIVE(X1)
 ACTIVE(plus(X1,X2)) -> ACTIVE(X1)
 ACTIVE(plus(X1,X2)) -> ACTIVE(X2)
 ACTIVE(s(X)) -> ACTIVE(X)
 ACTIVE(x(X1,X2)) -> ACTIVE(X1)
 ACTIVE(x(X1,X2)) -> ACTIVE(X2)
->->-> Rules:
 active(and(tt,X)) -> mark(X)
 active(and(X1,X2)) -> and(active(X1),X2)
 active(plus(N,s(M))) -> mark(s(plus(N,M)))
 active(plus(N,num0)) -> mark(N)
 active(plus(X1,X2)) -> plus(active(X1),X2)
 active(plus(X1,X2)) -> plus(X1,active(X2))
 active(s(X)) -> s(active(X))
 active(x(N,s(M))) -> mark(plus(x(N,M),N))
 active(x(N,num0)) -> mark(num0)
 active(x(X1,X2)) -> x(active(X1),X2)
 active(x(X1,X2)) -> x(X1,active(X2))
 and(mark(X1),X2) -> mark(and(X1,X2))
 and(ok(X1),ok(X2)) -> ok(and(X1,X2))
 plus(mark(X1),X2) -> mark(plus(X1,X2))
 plus(ok(X1),ok(X2)) -> ok(plus(X1,X2))
 plus(X1,mark(X2)) -> mark(plus(X1,X2))
 proper(and(X1,X2)) -> and(proper(X1),proper(X2))
 proper(plus(X1,X2)) -> plus(proper(X1),proper(X2))
 proper(s(X)) -> s(proper(X))
 proper(x(X1,X2)) -> x(proper(X1),proper(X2))
 proper(num0) -> ok(num0)
 proper(tt) -> ok(tt)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
 x(mark(X1),X2) -> mark(x(X1,X2))
 x(ok(X1),ok(X2)) -> ok(x(X1,X2))
 x(X1,mark(X2)) -> mark(x(X1,X2))
->->Cycle:
->->-> Pairs:
 TOP(mark(X)) -> TOP(proper(X))
 TOP(ok(X)) -> TOP(active(X))
->->-> Rules:
 active(and(tt,X)) -> mark(X)
 active(and(X1,X2)) -> and(active(X1),X2)
 active(plus(N,s(M))) -> mark(s(plus(N,M)))
 active(plus(N,num0)) -> mark(N)
 active(plus(X1,X2)) -> plus(active(X1),X2)
 active(plus(X1,X2)) -> plus(X1,active(X2))
 active(s(X)) -> s(active(X))
 active(x(N,s(M))) -> mark(plus(x(N,M),N))
 active(x(N,num0)) -> mark(num0)
 active(x(X1,X2)) -> x(active(X1),X2)
 active(x(X1,X2)) -> x(X1,active(X2))
 and(mark(X1),X2) -> mark(and(X1,X2))
 and(ok(X1),ok(X2)) -> ok(and(X1,X2))
 plus(mark(X1),X2) -> mark(plus(X1,X2))
 plus(ok(X1),ok(X2)) -> ok(plus(X1,X2))
 plus(X1,mark(X2)) -> mark(plus(X1,X2))
 proper(and(X1,X2)) -> and(proper(X1),proper(X2))
 proper(plus(X1,X2)) -> plus(proper(X1),proper(X2))
 proper(s(X)) -> s(proper(X))
 proper(x(X1,X2)) -> x(proper(X1),proper(X2))
 proper(num0) -> ok(num0)
 proper(tt) -> ok(tt)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
 x(mark(X1),X2) -> mark(x(X1,X2))
 x(ok(X1),ok(X2)) -> ok(x(X1,X2))
 x(X1,mark(X2)) -> mark(x(X1,X2))


The problem is decomposed in 7 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 X(mark(X1),X2) -> X(X1,X2)
 X(ok(X1),ok(X2)) -> X(X1,X2)
 X(X1,mark(X2)) -> X(X1,X2)
-> Rules:
 active(and(tt,X)) -> mark(X)
 active(and(X1,X2)) -> and(active(X1),X2)
 active(plus(N,s(M))) -> mark(s(plus(N,M)))
 active(plus(N,num0)) -> mark(N)
 active(plus(X1,X2)) -> plus(active(X1),X2)
 active(plus(X1,X2)) -> plus(X1,active(X2))
 active(s(X)) -> s(active(X))
 active(x(N,s(M))) -> mark(plus(x(N,M),N))
 active(x(N,num0)) -> mark(num0)
 active(x(X1,X2)) -> x(active(X1),X2)
 active(x(X1,X2)) -> x(X1,active(X2))
 and(mark(X1),X2) -> mark(and(X1,X2))
 and(ok(X1),ok(X2)) -> ok(and(X1,X2))
 plus(mark(X1),X2) -> mark(plus(X1,X2))
 plus(ok(X1),ok(X2)) -> ok(plus(X1,X2))
 plus(X1,mark(X2)) -> mark(plus(X1,X2))
 proper(and(X1,X2)) -> and(proper(X1),proper(X2))
 proper(plus(X1,X2)) -> plus(proper(X1),proper(X2))
 proper(s(X)) -> s(proper(X))
 proper(x(X1,X2)) -> x(proper(X1),proper(X2))
 proper(num0) -> ok(num0)
 proper(tt) -> ok(tt)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
 x(mark(X1),X2) -> mark(x(X1,X2))
 x(ok(X1),ok(X2)) -> ok(x(X1,X2))
 x(X1,mark(X2)) -> mark(x(X1,X2))
->Projection:
 pi(X) = 1

Problem 1.1: 

SCC Processor:
-> Pairs:
 X(X1,mark(X2)) -> X(X1,X2)
-> Rules:
 active(and(tt,X)) -> mark(X)
 active(and(X1,X2)) -> and(active(X1),X2)
 active(plus(N,s(M))) -> mark(s(plus(N,M)))
 active(plus(N,num0)) -> mark(N)
 active(plus(X1,X2)) -> plus(active(X1),X2)
 active(plus(X1,X2)) -> plus(X1,active(X2))
 active(s(X)) -> s(active(X))
 active(x(N,s(M))) -> mark(plus(x(N,M),N))
 active(x(N,num0)) -> mark(num0)
 active(x(X1,X2)) -> x(active(X1),X2)
 active(x(X1,X2)) -> x(X1,active(X2))
 and(mark(X1),X2) -> mark(and(X1,X2))
 and(ok(X1),ok(X2)) -> ok(and(X1,X2))
 plus(mark(X1),X2) -> mark(plus(X1,X2))
 plus(ok(X1),ok(X2)) -> ok(plus(X1,X2))
 plus(X1,mark(X2)) -> mark(plus(X1,X2))
 proper(and(X1,X2)) -> and(proper(X1),proper(X2))
 proper(plus(X1,X2)) -> plus(proper(X1),proper(X2))
 proper(s(X)) -> s(proper(X))
 proper(x(X1,X2)) -> x(proper(X1),proper(X2))
 proper(num0) -> ok(num0)
 proper(tt) -> ok(tt)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
 x(mark(X1),X2) -> mark(x(X1,X2))
 x(ok(X1),ok(X2)) -> ok(x(X1,X2))
 x(X1,mark(X2)) -> mark(x(X1,X2))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 X(X1,mark(X2)) -> X(X1,X2)
->->-> Rules:
 active(and(tt,X)) -> mark(X)
 active(and(X1,X2)) -> and(active(X1),X2)
 active(plus(N,s(M))) -> mark(s(plus(N,M)))
 active(plus(N,num0)) -> mark(N)
 active(plus(X1,X2)) -> plus(active(X1),X2)
 active(plus(X1,X2)) -> plus(X1,active(X2))
 active(s(X)) -> s(active(X))
 active(x(N,s(M))) -> mark(plus(x(N,M),N))
 active(x(N,num0)) -> mark(num0)
 active(x(X1,X2)) -> x(active(X1),X2)
 active(x(X1,X2)) -> x(X1,active(X2))
 and(mark(X1),X2) -> mark(and(X1,X2))
 and(ok(X1),ok(X2)) -> ok(and(X1,X2))
 plus(mark(X1),X2) -> mark(plus(X1,X2))
 plus(ok(X1),ok(X2)) -> ok(plus(X1,X2))
 plus(X1,mark(X2)) -> mark(plus(X1,X2))
 proper(and(X1,X2)) -> and(proper(X1),proper(X2))
 proper(plus(X1,X2)) -> plus(proper(X1),proper(X2))
 proper(s(X)) -> s(proper(X))
 proper(x(X1,X2)) -> x(proper(X1),proper(X2))
 proper(num0) -> ok(num0)
 proper(tt) -> ok(tt)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
 x(mark(X1),X2) -> mark(x(X1,X2))
 x(ok(X1),ok(X2)) -> ok(x(X1,X2))
 x(X1,mark(X2)) -> mark(x(X1,X2))

Problem 1.1: 

Subterm Processor:
-> Pairs:
 X(X1,mark(X2)) -> X(X1,X2)
-> Rules:
 active(and(tt,X)) -> mark(X)
 active(and(X1,X2)) -> and(active(X1),X2)
 active(plus(N,s(M))) -> mark(s(plus(N,M)))
 active(plus(N,num0)) -> mark(N)
 active(plus(X1,X2)) -> plus(active(X1),X2)
 active(plus(X1,X2)) -> plus(X1,active(X2))
 active(s(X)) -> s(active(X))
 active(x(N,s(M))) -> mark(plus(x(N,M),N))
 active(x(N,num0)) -> mark(num0)
 active(x(X1,X2)) -> x(active(X1),X2)
 active(x(X1,X2)) -> x(X1,active(X2))
 and(mark(X1),X2) -> mark(and(X1,X2))
 and(ok(X1),ok(X2)) -> ok(and(X1,X2))
 plus(mark(X1),X2) -> mark(plus(X1,X2))
 plus(ok(X1),ok(X2)) -> ok(plus(X1,X2))
 plus(X1,mark(X2)) -> mark(plus(X1,X2))
 proper(and(X1,X2)) -> and(proper(X1),proper(X2))
 proper(plus(X1,X2)) -> plus(proper(X1),proper(X2))
 proper(s(X)) -> s(proper(X))
 proper(x(X1,X2)) -> x(proper(X1),proper(X2))
 proper(num0) -> ok(num0)
 proper(tt) -> ok(tt)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
 x(mark(X1),X2) -> mark(x(X1,X2))
 x(ok(X1),ok(X2)) -> ok(x(X1,X2))
 x(X1,mark(X2)) -> mark(x(X1,X2))
->Projection:
 pi(X) = 2

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(and(tt,X)) -> mark(X)
 active(and(X1,X2)) -> and(active(X1),X2)
 active(plus(N,s(M))) -> mark(s(plus(N,M)))
 active(plus(N,num0)) -> mark(N)
 active(plus(X1,X2)) -> plus(active(X1),X2)
 active(plus(X1,X2)) -> plus(X1,active(X2))
 active(s(X)) -> s(active(X))
 active(x(N,s(M))) -> mark(plus(x(N,M),N))
 active(x(N,num0)) -> mark(num0)
 active(x(X1,X2)) -> x(active(X1),X2)
 active(x(X1,X2)) -> x(X1,active(X2))
 and(mark(X1),X2) -> mark(and(X1,X2))
 and(ok(X1),ok(X2)) -> ok(and(X1,X2))
 plus(mark(X1),X2) -> mark(plus(X1,X2))
 plus(ok(X1),ok(X2)) -> ok(plus(X1,X2))
 plus(X1,mark(X2)) -> mark(plus(X1,X2))
 proper(and(X1,X2)) -> and(proper(X1),proper(X2))
 proper(plus(X1,X2)) -> plus(proper(X1),proper(X2))
 proper(s(X)) -> s(proper(X))
 proper(x(X1,X2)) -> x(proper(X1),proper(X2))
 proper(num0) -> ok(num0)
 proper(tt) -> ok(tt)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
 x(mark(X1),X2) -> mark(x(X1,X2))
 x(ok(X1),ok(X2)) -> ok(x(X1,X2))
 x(X1,mark(X2)) -> mark(x(X1,X2))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Subterm Processor:
-> Pairs:
 S(mark(X)) -> S(X)
 S(ok(X)) -> S(X)
-> Rules:
 active(and(tt,X)) -> mark(X)
 active(and(X1,X2)) -> and(active(X1),X2)
 active(plus(N,s(M))) -> mark(s(plus(N,M)))
 active(plus(N,num0)) -> mark(N)
 active(plus(X1,X2)) -> plus(active(X1),X2)
 active(plus(X1,X2)) -> plus(X1,active(X2))
 active(s(X)) -> s(active(X))
 active(x(N,s(M))) -> mark(plus(x(N,M),N))
 active(x(N,num0)) -> mark(num0)
 active(x(X1,X2)) -> x(active(X1),X2)
 active(x(X1,X2)) -> x(X1,active(X2))
 and(mark(X1),X2) -> mark(and(X1,X2))
 and(ok(X1),ok(X2)) -> ok(and(X1,X2))
 plus(mark(X1),X2) -> mark(plus(X1,X2))
 plus(ok(X1),ok(X2)) -> ok(plus(X1,X2))
 plus(X1,mark(X2)) -> mark(plus(X1,X2))
 proper(and(X1,X2)) -> and(proper(X1),proper(X2))
 proper(plus(X1,X2)) -> plus(proper(X1),proper(X2))
 proper(s(X)) -> s(proper(X))
 proper(x(X1,X2)) -> x(proper(X1),proper(X2))
 proper(num0) -> ok(num0)
 proper(tt) -> ok(tt)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
 x(mark(X1),X2) -> mark(x(X1,X2))
 x(ok(X1),ok(X2)) -> ok(x(X1,X2))
 x(X1,mark(X2)) -> mark(x(X1,X2))
->Projection:
 pi(S) = 1

Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(and(tt,X)) -> mark(X)
 active(and(X1,X2)) -> and(active(X1),X2)
 active(plus(N,s(M))) -> mark(s(plus(N,M)))
 active(plus(N,num0)) -> mark(N)
 active(plus(X1,X2)) -> plus(active(X1),X2)
 active(plus(X1,X2)) -> plus(X1,active(X2))
 active(s(X)) -> s(active(X))
 active(x(N,s(M))) -> mark(plus(x(N,M),N))
 active(x(N,num0)) -> mark(num0)
 active(x(X1,X2)) -> x(active(X1),X2)
 active(x(X1,X2)) -> x(X1,active(X2))
 and(mark(X1),X2) -> mark(and(X1,X2))
 and(ok(X1),ok(X2)) -> ok(and(X1,X2))
 plus(mark(X1),X2) -> mark(plus(X1,X2))
 plus(ok(X1),ok(X2)) -> ok(plus(X1,X2))
 plus(X1,mark(X2)) -> mark(plus(X1,X2))
 proper(and(X1,X2)) -> and(proper(X1),proper(X2))
 proper(plus(X1,X2)) -> plus(proper(X1),proper(X2))
 proper(s(X)) -> s(proper(X))
 proper(x(X1,X2)) -> x(proper(X1),proper(X2))
 proper(num0) -> ok(num0)
 proper(tt) -> ok(tt)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
 x(mark(X1),X2) -> mark(x(X1,X2))
 x(ok(X1),ok(X2)) -> ok(x(X1,X2))
 x(X1,mark(X2)) -> mark(x(X1,X2))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Subterm Processor:
-> Pairs:
 PLUS(mark(X1),X2) -> PLUS(X1,X2)
 PLUS(ok(X1),ok(X2)) -> PLUS(X1,X2)
 PLUS(X1,mark(X2)) -> PLUS(X1,X2)
-> Rules:
 active(and(tt,X)) -> mark(X)
 active(and(X1,X2)) -> and(active(X1),X2)
 active(plus(N,s(M))) -> mark(s(plus(N,M)))
 active(plus(N,num0)) -> mark(N)
 active(plus(X1,X2)) -> plus(active(X1),X2)
 active(plus(X1,X2)) -> plus(X1,active(X2))
 active(s(X)) -> s(active(X))
 active(x(N,s(M))) -> mark(plus(x(N,M),N))
 active(x(N,num0)) -> mark(num0)
 active(x(X1,X2)) -> x(active(X1),X2)
 active(x(X1,X2)) -> x(X1,active(X2))
 and(mark(X1),X2) -> mark(and(X1,X2))
 and(ok(X1),ok(X2)) -> ok(and(X1,X2))
 plus(mark(X1),X2) -> mark(plus(X1,X2))
 plus(ok(X1),ok(X2)) -> ok(plus(X1,X2))
 plus(X1,mark(X2)) -> mark(plus(X1,X2))
 proper(and(X1,X2)) -> and(proper(X1),proper(X2))
 proper(plus(X1,X2)) -> plus(proper(X1),proper(X2))
 proper(s(X)) -> s(proper(X))
 proper(x(X1,X2)) -> x(proper(X1),proper(X2))
 proper(num0) -> ok(num0)
 proper(tt) -> ok(tt)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
 x(mark(X1),X2) -> mark(x(X1,X2))
 x(ok(X1),ok(X2)) -> ok(x(X1,X2))
 x(X1,mark(X2)) -> mark(x(X1,X2))
->Projection:
 pi(PLUS) = 1

Problem 1.3: 

SCC Processor:
-> Pairs:
 PLUS(X1,mark(X2)) -> PLUS(X1,X2)
-> Rules:
 active(and(tt,X)) -> mark(X)
 active(and(X1,X2)) -> and(active(X1),X2)
 active(plus(N,s(M))) -> mark(s(plus(N,M)))
 active(plus(N,num0)) -> mark(N)
 active(plus(X1,X2)) -> plus(active(X1),X2)
 active(plus(X1,X2)) -> plus(X1,active(X2))
 active(s(X)) -> s(active(X))
 active(x(N,s(M))) -> mark(plus(x(N,M),N))
 active(x(N,num0)) -> mark(num0)
 active(x(X1,X2)) -> x(active(X1),X2)
 active(x(X1,X2)) -> x(X1,active(X2))
 and(mark(X1),X2) -> mark(and(X1,X2))
 and(ok(X1),ok(X2)) -> ok(and(X1,X2))
 plus(mark(X1),X2) -> mark(plus(X1,X2))
 plus(ok(X1),ok(X2)) -> ok(plus(X1,X2))
 plus(X1,mark(X2)) -> mark(plus(X1,X2))
 proper(and(X1,X2)) -> and(proper(X1),proper(X2))
 proper(plus(X1,X2)) -> plus(proper(X1),proper(X2))
 proper(s(X)) -> s(proper(X))
 proper(x(X1,X2)) -> x(proper(X1),proper(X2))
 proper(num0) -> ok(num0)
 proper(tt) -> ok(tt)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
 x(mark(X1),X2) -> mark(x(X1,X2))
 x(ok(X1),ok(X2)) -> ok(x(X1,X2))
 x(X1,mark(X2)) -> mark(x(X1,X2))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 PLUS(X1,mark(X2)) -> PLUS(X1,X2)
->->-> Rules:
 active(and(tt,X)) -> mark(X)
 active(and(X1,X2)) -> and(active(X1),X2)
 active(plus(N,s(M))) -> mark(s(plus(N,M)))
 active(plus(N,num0)) -> mark(N)
 active(plus(X1,X2)) -> plus(active(X1),X2)
 active(plus(X1,X2)) -> plus(X1,active(X2))
 active(s(X)) -> s(active(X))
 active(x(N,s(M))) -> mark(plus(x(N,M),N))
 active(x(N,num0)) -> mark(num0)
 active(x(X1,X2)) -> x(active(X1),X2)
 active(x(X1,X2)) -> x(X1,active(X2))
 and(mark(X1),X2) -> mark(and(X1,X2))
 and(ok(X1),ok(X2)) -> ok(and(X1,X2))
 plus(mark(X1),X2) -> mark(plus(X1,X2))
 plus(ok(X1),ok(X2)) -> ok(plus(X1,X2))
 plus(X1,mark(X2)) -> mark(plus(X1,X2))
 proper(and(X1,X2)) -> and(proper(X1),proper(X2))
 proper(plus(X1,X2)) -> plus(proper(X1),proper(X2))
 proper(s(X)) -> s(proper(X))
 proper(x(X1,X2)) -> x(proper(X1),proper(X2))
 proper(num0) -> ok(num0)
 proper(tt) -> ok(tt)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
 x(mark(X1),X2) -> mark(x(X1,X2))
 x(ok(X1),ok(X2)) -> ok(x(X1,X2))
 x(X1,mark(X2)) -> mark(x(X1,X2))

Problem 1.3: 

Subterm Processor:
-> Pairs:
 PLUS(X1,mark(X2)) -> PLUS(X1,X2)
-> Rules:
 active(and(tt,X)) -> mark(X)
 active(and(X1,X2)) -> and(active(X1),X2)
 active(plus(N,s(M))) -> mark(s(plus(N,M)))
 active(plus(N,num0)) -> mark(N)
 active(plus(X1,X2)) -> plus(active(X1),X2)
 active(plus(X1,X2)) -> plus(X1,active(X2))
 active(s(X)) -> s(active(X))
 active(x(N,s(M))) -> mark(plus(x(N,M),N))
 active(x(N,num0)) -> mark(num0)
 active(x(X1,X2)) -> x(active(X1),X2)
 active(x(X1,X2)) -> x(X1,active(X2))
 and(mark(X1),X2) -> mark(and(X1,X2))
 and(ok(X1),ok(X2)) -> ok(and(X1,X2))
 plus(mark(X1),X2) -> mark(plus(X1,X2))
 plus(ok(X1),ok(X2)) -> ok(plus(X1,X2))
 plus(X1,mark(X2)) -> mark(plus(X1,X2))
 proper(and(X1,X2)) -> and(proper(X1),proper(X2))
 proper(plus(X1,X2)) -> plus(proper(X1),proper(X2))
 proper(s(X)) -> s(proper(X))
 proper(x(X1,X2)) -> x(proper(X1),proper(X2))
 proper(num0) -> ok(num0)
 proper(tt) -> ok(tt)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
 x(mark(X1),X2) -> mark(x(X1,X2))
 x(ok(X1),ok(X2)) -> ok(x(X1,X2))
 x(X1,mark(X2)) -> mark(x(X1,X2))
->Projection:
 pi(PLUS) = 2

Problem 1.3: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(and(tt,X)) -> mark(X)
 active(and(X1,X2)) -> and(active(X1),X2)
 active(plus(N,s(M))) -> mark(s(plus(N,M)))
 active(plus(N,num0)) -> mark(N)
 active(plus(X1,X2)) -> plus(active(X1),X2)
 active(plus(X1,X2)) -> plus(X1,active(X2))
 active(s(X)) -> s(active(X))
 active(x(N,s(M))) -> mark(plus(x(N,M),N))
 active(x(N,num0)) -> mark(num0)
 active(x(X1,X2)) -> x(active(X1),X2)
 active(x(X1,X2)) -> x(X1,active(X2))
 and(mark(X1),X2) -> mark(and(X1,X2))
 and(ok(X1),ok(X2)) -> ok(and(X1,X2))
 plus(mark(X1),X2) -> mark(plus(X1,X2))
 plus(ok(X1),ok(X2)) -> ok(plus(X1,X2))
 plus(X1,mark(X2)) -> mark(plus(X1,X2))
 proper(and(X1,X2)) -> and(proper(X1),proper(X2))
 proper(plus(X1,X2)) -> plus(proper(X1),proper(X2))
 proper(s(X)) -> s(proper(X))
 proper(x(X1,X2)) -> x(proper(X1),proper(X2))
 proper(num0) -> ok(num0)
 proper(tt) -> ok(tt)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
 x(mark(X1),X2) -> mark(x(X1,X2))
 x(ok(X1),ok(X2)) -> ok(x(X1,X2))
 x(X1,mark(X2)) -> mark(x(X1,X2))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.4: 

Subterm Processor:
-> Pairs:
 AND(mark(X1),X2) -> AND(X1,X2)
 AND(ok(X1),ok(X2)) -> AND(X1,X2)
-> Rules:
 active(and(tt,X)) -> mark(X)
 active(and(X1,X2)) -> and(active(X1),X2)
 active(plus(N,s(M))) -> mark(s(plus(N,M)))
 active(plus(N,num0)) -> mark(N)
 active(plus(X1,X2)) -> plus(active(X1),X2)
 active(plus(X1,X2)) -> plus(X1,active(X2))
 active(s(X)) -> s(active(X))
 active(x(N,s(M))) -> mark(plus(x(N,M),N))
 active(x(N,num0)) -> mark(num0)
 active(x(X1,X2)) -> x(active(X1),X2)
 active(x(X1,X2)) -> x(X1,active(X2))
 and(mark(X1),X2) -> mark(and(X1,X2))
 and(ok(X1),ok(X2)) -> ok(and(X1,X2))
 plus(mark(X1),X2) -> mark(plus(X1,X2))
 plus(ok(X1),ok(X2)) -> ok(plus(X1,X2))
 plus(X1,mark(X2)) -> mark(plus(X1,X2))
 proper(and(X1,X2)) -> and(proper(X1),proper(X2))
 proper(plus(X1,X2)) -> plus(proper(X1),proper(X2))
 proper(s(X)) -> s(proper(X))
 proper(x(X1,X2)) -> x(proper(X1),proper(X2))
 proper(num0) -> ok(num0)
 proper(tt) -> ok(tt)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
 x(mark(X1),X2) -> mark(x(X1,X2))
 x(ok(X1),ok(X2)) -> ok(x(X1,X2))
 x(X1,mark(X2)) -> mark(x(X1,X2))
->Projection:
 pi(AND) = 1

Problem 1.4: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(and(tt,X)) -> mark(X)
 active(and(X1,X2)) -> and(active(X1),X2)
 active(plus(N,s(M))) -> mark(s(plus(N,M)))
 active(plus(N,num0)) -> mark(N)
 active(plus(X1,X2)) -> plus(active(X1),X2)
 active(plus(X1,X2)) -> plus(X1,active(X2))
 active(s(X)) -> s(active(X))
 active(x(N,s(M))) -> mark(plus(x(N,M),N))
 active(x(N,num0)) -> mark(num0)
 active(x(X1,X2)) -> x(active(X1),X2)
 active(x(X1,X2)) -> x(X1,active(X2))
 and(mark(X1),X2) -> mark(and(X1,X2))
 and(ok(X1),ok(X2)) -> ok(and(X1,X2))
 plus(mark(X1),X2) -> mark(plus(X1,X2))
 plus(ok(X1),ok(X2)) -> ok(plus(X1,X2))
 plus(X1,mark(X2)) -> mark(plus(X1,X2))
 proper(and(X1,X2)) -> and(proper(X1),proper(X2))
 proper(plus(X1,X2)) -> plus(proper(X1),proper(X2))
 proper(s(X)) -> s(proper(X))
 proper(x(X1,X2)) -> x(proper(X1),proper(X2))
 proper(num0) -> ok(num0)
 proper(tt) -> ok(tt)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
 x(mark(X1),X2) -> mark(x(X1,X2))
 x(ok(X1),ok(X2)) -> ok(x(X1,X2))
 x(X1,mark(X2)) -> mark(x(X1,X2))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.5: 

Subterm Processor:
-> Pairs:
 PROPER(and(X1,X2)) -> PROPER(X1)
 PROPER(and(X1,X2)) -> PROPER(X2)
 PROPER(plus(X1,X2)) -> PROPER(X1)
 PROPER(plus(X1,X2)) -> PROPER(X2)
 PROPER(s(X)) -> PROPER(X)
 PROPER(x(X1,X2)) -> PROPER(X1)
 PROPER(x(X1,X2)) -> PROPER(X2)
-> Rules:
 active(and(tt,X)) -> mark(X)
 active(and(X1,X2)) -> and(active(X1),X2)
 active(plus(N,s(M))) -> mark(s(plus(N,M)))
 active(plus(N,num0)) -> mark(N)
 active(plus(X1,X2)) -> plus(active(X1),X2)
 active(plus(X1,X2)) -> plus(X1,active(X2))
 active(s(X)) -> s(active(X))
 active(x(N,s(M))) -> mark(plus(x(N,M),N))
 active(x(N,num0)) -> mark(num0)
 active(x(X1,X2)) -> x(active(X1),X2)
 active(x(X1,X2)) -> x(X1,active(X2))
 and(mark(X1),X2) -> mark(and(X1,X2))
 and(ok(X1),ok(X2)) -> ok(and(X1,X2))
 plus(mark(X1),X2) -> mark(plus(X1,X2))
 plus(ok(X1),ok(X2)) -> ok(plus(X1,X2))
 plus(X1,mark(X2)) -> mark(plus(X1,X2))
 proper(and(X1,X2)) -> and(proper(X1),proper(X2))
 proper(plus(X1,X2)) -> plus(proper(X1),proper(X2))
 proper(s(X)) -> s(proper(X))
 proper(x(X1,X2)) -> x(proper(X1),proper(X2))
 proper(num0) -> ok(num0)
 proper(tt) -> ok(tt)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
 x(mark(X1),X2) -> mark(x(X1,X2))
 x(ok(X1),ok(X2)) -> ok(x(X1,X2))
 x(X1,mark(X2)) -> mark(x(X1,X2))
->Projection:
 pi(PROPER) = 1

Problem 1.5: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(and(tt,X)) -> mark(X)
 active(and(X1,X2)) -> and(active(X1),X2)
 active(plus(N,s(M))) -> mark(s(plus(N,M)))
 active(plus(N,num0)) -> mark(N)
 active(plus(X1,X2)) -> plus(active(X1),X2)
 active(plus(X1,X2)) -> plus(X1,active(X2))
 active(s(X)) -> s(active(X))
 active(x(N,s(M))) -> mark(plus(x(N,M),N))
 active(x(N,num0)) -> mark(num0)
 active(x(X1,X2)) -> x(active(X1),X2)
 active(x(X1,X2)) -> x(X1,active(X2))
 and(mark(X1),X2) -> mark(and(X1,X2))
 and(ok(X1),ok(X2)) -> ok(and(X1,X2))
 plus(mark(X1),X2) -> mark(plus(X1,X2))
 plus(ok(X1),ok(X2)) -> ok(plus(X1,X2))
 plus(X1,mark(X2)) -> mark(plus(X1,X2))
 proper(and(X1,X2)) -> and(proper(X1),proper(X2))
 proper(plus(X1,X2)) -> plus(proper(X1),proper(X2))
 proper(s(X)) -> s(proper(X))
 proper(x(X1,X2)) -> x(proper(X1),proper(X2))
 proper(num0) -> ok(num0)
 proper(tt) -> ok(tt)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
 x(mark(X1),X2) -> mark(x(X1,X2))
 x(ok(X1),ok(X2)) -> ok(x(X1,X2))
 x(X1,mark(X2)) -> mark(x(X1,X2))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.6: 

Subterm Processor:
-> Pairs:
 ACTIVE(and(X1,X2)) -> ACTIVE(X1)
 ACTIVE(plus(X1,X2)) -> ACTIVE(X1)
 ACTIVE(plus(X1,X2)) -> ACTIVE(X2)
 ACTIVE(s(X)) -> ACTIVE(X)
 ACTIVE(x(X1,X2)) -> ACTIVE(X1)
 ACTIVE(x(X1,X2)) -> ACTIVE(X2)
-> Rules:
 active(and(tt,X)) -> mark(X)
 active(and(X1,X2)) -> and(active(X1),X2)
 active(plus(N,s(M))) -> mark(s(plus(N,M)))
 active(plus(N,num0)) -> mark(N)
 active(plus(X1,X2)) -> plus(active(X1),X2)
 active(plus(X1,X2)) -> plus(X1,active(X2))
 active(s(X)) -> s(active(X))
 active(x(N,s(M))) -> mark(plus(x(N,M),N))
 active(x(N,num0)) -> mark(num0)
 active(x(X1,X2)) -> x(active(X1),X2)
 active(x(X1,X2)) -> x(X1,active(X2))
 and(mark(X1),X2) -> mark(and(X1,X2))
 and(ok(X1),ok(X2)) -> ok(and(X1,X2))
 plus(mark(X1),X2) -> mark(plus(X1,X2))
 plus(ok(X1),ok(X2)) -> ok(plus(X1,X2))
 plus(X1,mark(X2)) -> mark(plus(X1,X2))
 proper(and(X1,X2)) -> and(proper(X1),proper(X2))
 proper(plus(X1,X2)) -> plus(proper(X1),proper(X2))
 proper(s(X)) -> s(proper(X))
 proper(x(X1,X2)) -> x(proper(X1),proper(X2))
 proper(num0) -> ok(num0)
 proper(tt) -> ok(tt)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
 x(mark(X1),X2) -> mark(x(X1,X2))
 x(ok(X1),ok(X2)) -> ok(x(X1,X2))
 x(X1,mark(X2)) -> mark(x(X1,X2))
->Projection:
 pi(ACTIVE) = 1

Problem 1.6: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(and(tt,X)) -> mark(X)
 active(and(X1,X2)) -> and(active(X1),X2)
 active(plus(N,s(M))) -> mark(s(plus(N,M)))
 active(plus(N,num0)) -> mark(N)
 active(plus(X1,X2)) -> plus(active(X1),X2)
 active(plus(X1,X2)) -> plus(X1,active(X2))
 active(s(X)) -> s(active(X))
 active(x(N,s(M))) -> mark(plus(x(N,M),N))
 active(x(N,num0)) -> mark(num0)
 active(x(X1,X2)) -> x(active(X1),X2)
 active(x(X1,X2)) -> x(X1,active(X2))
 and(mark(X1),X2) -> mark(and(X1,X2))
 and(ok(X1),ok(X2)) -> ok(and(X1,X2))
 plus(mark(X1),X2) -> mark(plus(X1,X2))
 plus(ok(X1),ok(X2)) -> ok(plus(X1,X2))
 plus(X1,mark(X2)) -> mark(plus(X1,X2))
 proper(and(X1,X2)) -> and(proper(X1),proper(X2))
 proper(plus(X1,X2)) -> plus(proper(X1),proper(X2))
 proper(s(X)) -> s(proper(X))
 proper(x(X1,X2)) -> x(proper(X1),proper(X2))
 proper(num0) -> ok(num0)
 proper(tt) -> ok(tt)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
 x(mark(X1),X2) -> mark(x(X1,X2))
 x(ok(X1),ok(X2)) -> ok(x(X1,X2))
 x(X1,mark(X2)) -> mark(x(X1,X2))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.7: 

Reduction Pair Processor:
-> Pairs:
 TOP(mark(X)) -> TOP(proper(X))
 TOP(ok(X)) -> TOP(active(X))
-> Rules:
 active(and(tt,X)) -> mark(X)
 active(and(X1,X2)) -> and(active(X1),X2)
 active(plus(N,s(M))) -> mark(s(plus(N,M)))
 active(plus(N,num0)) -> mark(N)
 active(plus(X1,X2)) -> plus(active(X1),X2)
 active(plus(X1,X2)) -> plus(X1,active(X2))
 active(s(X)) -> s(active(X))
 active(x(N,s(M))) -> mark(plus(x(N,M),N))
 active(x(N,num0)) -> mark(num0)
 active(x(X1,X2)) -> x(active(X1),X2)
 active(x(X1,X2)) -> x(X1,active(X2))
 and(mark(X1),X2) -> mark(and(X1,X2))
 and(ok(X1),ok(X2)) -> ok(and(X1,X2))
 plus(mark(X1),X2) -> mark(plus(X1,X2))
 plus(ok(X1),ok(X2)) -> ok(plus(X1,X2))
 plus(X1,mark(X2)) -> mark(plus(X1,X2))
 proper(and(X1,X2)) -> and(proper(X1),proper(X2))
 proper(plus(X1,X2)) -> plus(proper(X1),proper(X2))
 proper(s(X)) -> s(proper(X))
 proper(x(X1,X2)) -> x(proper(X1),proper(X2))
 proper(num0) -> ok(num0)
 proper(tt) -> ok(tt)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
 x(mark(X1),X2) -> mark(x(X1,X2))
 x(ok(X1),ok(X2)) -> ok(x(X1,X2))
 x(X1,mark(X2)) -> mark(x(X1,X2))
-> Usable rules:
 active(and(tt,X)) -> mark(X)
 active(and(X1,X2)) -> and(active(X1),X2)
 active(plus(N,s(M))) -> mark(s(plus(N,M)))
 active(plus(N,num0)) -> mark(N)
 active(plus(X1,X2)) -> plus(active(X1),X2)
 active(plus(X1,X2)) -> plus(X1,active(X2))
 active(s(X)) -> s(active(X))
 active(x(N,s(M))) -> mark(plus(x(N,M),N))
 active(x(N,num0)) -> mark(num0)
 active(x(X1,X2)) -> x(active(X1),X2)
 active(x(X1,X2)) -> x(X1,active(X2))
 and(mark(X1),X2) -> mark(and(X1,X2))
 and(ok(X1),ok(X2)) -> ok(and(X1,X2))
 plus(mark(X1),X2) -> mark(plus(X1,X2))
 plus(ok(X1),ok(X2)) -> ok(plus(X1,X2))
 plus(X1,mark(X2)) -> mark(plus(X1,X2))
 proper(and(X1,X2)) -> and(proper(X1),proper(X2))
 proper(plus(X1,X2)) -> plus(proper(X1),proper(X2))
 proper(s(X)) -> s(proper(X))
 proper(x(X1,X2)) -> x(proper(X1),proper(X2))
 proper(num0) -> ok(num0)
 proper(tt) -> ok(tt)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 x(mark(X1),X2) -> mark(x(X1,X2))
 x(ok(X1),ok(X2)) -> ok(x(X1,X2))
 x(X1,mark(X2)) -> mark(x(X1,X2))
->Interpretation type:
 Simple mixed
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[active](X) = X
[and](X1,X2) = X1 + 2.X2 + 2
[plus](X1,X2) = X1 + 2.X2 + 1
[proper](X) = X
[s](X) = X + 2
[top](X) = 0
[x](X1,X2) = 2.X1.X2 + 2.X1 + 2.X2
[num0] = 2
[fSNonEmpty] = 0
[mark](X) = X + 2
[ok](X) = X
[tt] = 1
[ACTIVE](X) = 0
[AND](X1,X2) = 0
[PLUS](X1,X2) = 0
[PROPER](X) = 0
[S](X) = 0
[TOP](X) = 2.X
[X](X1,X2) = 0

Problem 1.7: 

SCC Processor:
-> Pairs:
 TOP(ok(X)) -> TOP(active(X))
-> Rules:
 active(and(tt,X)) -> mark(X)
 active(and(X1,X2)) -> and(active(X1),X2)
 active(plus(N,s(M))) -> mark(s(plus(N,M)))
 active(plus(N,num0)) -> mark(N)
 active(plus(X1,X2)) -> plus(active(X1),X2)
 active(plus(X1,X2)) -> plus(X1,active(X2))
 active(s(X)) -> s(active(X))
 active(x(N,s(M))) -> mark(plus(x(N,M),N))
 active(x(N,num0)) -> mark(num0)
 active(x(X1,X2)) -> x(active(X1),X2)
 active(x(X1,X2)) -> x(X1,active(X2))
 and(mark(X1),X2) -> mark(and(X1,X2))
 and(ok(X1),ok(X2)) -> ok(and(X1,X2))
 plus(mark(X1),X2) -> mark(plus(X1,X2))
 plus(ok(X1),ok(X2)) -> ok(plus(X1,X2))
 plus(X1,mark(X2)) -> mark(plus(X1,X2))
 proper(and(X1,X2)) -> and(proper(X1),proper(X2))
 proper(plus(X1,X2)) -> plus(proper(X1),proper(X2))
 proper(s(X)) -> s(proper(X))
 proper(x(X1,X2)) -> x(proper(X1),proper(X2))
 proper(num0) -> ok(num0)
 proper(tt) -> ok(tt)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
 x(mark(X1),X2) -> mark(x(X1,X2))
 x(ok(X1),ok(X2)) -> ok(x(X1,X2))
 x(X1,mark(X2)) -> mark(x(X1,X2))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 TOP(ok(X)) -> TOP(active(X))
->->-> Rules:
 active(and(tt,X)) -> mark(X)
 active(and(X1,X2)) -> and(active(X1),X2)
 active(plus(N,s(M))) -> mark(s(plus(N,M)))
 active(plus(N,num0)) -> mark(N)
 active(plus(X1,X2)) -> plus(active(X1),X2)
 active(plus(X1,X2)) -> plus(X1,active(X2))
 active(s(X)) -> s(active(X))
 active(x(N,s(M))) -> mark(plus(x(N,M),N))
 active(x(N,num0)) -> mark(num0)
 active(x(X1,X2)) -> x(active(X1),X2)
 active(x(X1,X2)) -> x(X1,active(X2))
 and(mark(X1),X2) -> mark(and(X1,X2))
 and(ok(X1),ok(X2)) -> ok(and(X1,X2))
 plus(mark(X1),X2) -> mark(plus(X1,X2))
 plus(ok(X1),ok(X2)) -> ok(plus(X1,X2))
 plus(X1,mark(X2)) -> mark(plus(X1,X2))
 proper(and(X1,X2)) -> and(proper(X1),proper(X2))
 proper(plus(X1,X2)) -> plus(proper(X1),proper(X2))
 proper(s(X)) -> s(proper(X))
 proper(x(X1,X2)) -> x(proper(X1),proper(X2))
 proper(num0) -> ok(num0)
 proper(tt) -> ok(tt)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
 x(mark(X1),X2) -> mark(x(X1,X2))
 x(ok(X1),ok(X2)) -> ok(x(X1,X2))
 x(X1,mark(X2)) -> mark(x(X1,X2))

Problem 1.7: 

Reduction Pair Processor:
-> Pairs:
 TOP(ok(X)) -> TOP(active(X))
-> Rules:
 active(and(tt,X)) -> mark(X)
 active(and(X1,X2)) -> and(active(X1),X2)
 active(plus(N,s(M))) -> mark(s(plus(N,M)))
 active(plus(N,num0)) -> mark(N)
 active(plus(X1,X2)) -> plus(active(X1),X2)
 active(plus(X1,X2)) -> plus(X1,active(X2))
 active(s(X)) -> s(active(X))
 active(x(N,s(M))) -> mark(plus(x(N,M),N))
 active(x(N,num0)) -> mark(num0)
 active(x(X1,X2)) -> x(active(X1),X2)
 active(x(X1,X2)) -> x(X1,active(X2))
 and(mark(X1),X2) -> mark(and(X1,X2))
 and(ok(X1),ok(X2)) -> ok(and(X1,X2))
 plus(mark(X1),X2) -> mark(plus(X1,X2))
 plus(ok(X1),ok(X2)) -> ok(plus(X1,X2))
 plus(X1,mark(X2)) -> mark(plus(X1,X2))
 proper(and(X1,X2)) -> and(proper(X1),proper(X2))
 proper(plus(X1,X2)) -> plus(proper(X1),proper(X2))
 proper(s(X)) -> s(proper(X))
 proper(x(X1,X2)) -> x(proper(X1),proper(X2))
 proper(num0) -> ok(num0)
 proper(tt) -> ok(tt)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
 x(mark(X1),X2) -> mark(x(X1,X2))
 x(ok(X1),ok(X2)) -> ok(x(X1,X2))
 x(X1,mark(X2)) -> mark(x(X1,X2))
-> Usable rules:
 active(and(tt,X)) -> mark(X)
 active(and(X1,X2)) -> and(active(X1),X2)
 active(plus(N,s(M))) -> mark(s(plus(N,M)))
 active(plus(N,num0)) -> mark(N)
 active(plus(X1,X2)) -> plus(active(X1),X2)
 active(plus(X1,X2)) -> plus(X1,active(X2))
 active(s(X)) -> s(active(X))
 active(x(N,s(M))) -> mark(plus(x(N,M),N))
 active(x(N,num0)) -> mark(num0)
 active(x(X1,X2)) -> x(active(X1),X2)
 active(x(X1,X2)) -> x(X1,active(X2))
 and(mark(X1),X2) -> mark(and(X1,X2))
 and(ok(X1),ok(X2)) -> ok(and(X1,X2))
 plus(mark(X1),X2) -> mark(plus(X1,X2))
 plus(ok(X1),ok(X2)) -> ok(plus(X1,X2))
 plus(X1,mark(X2)) -> mark(plus(X1,X2))
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 x(mark(X1),X2) -> mark(x(X1,X2))
 x(ok(X1),ok(X2)) -> ok(x(X1,X2))
 x(X1,mark(X2)) -> mark(x(X1,X2))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[active](X) = 2.X + 1
[and](X1,X2) = 2.X1 + 2.X2 + 2
[plus](X1,X2) = X1 + X2 + 2
[proper](X) = 0
[s](X) = 2.X + 2
[top](X) = 0
[x](X1,X2) = X1 + 2.X2 + 2
[num0] = 2
[fSNonEmpty] = 0
[mark](X) = X + 2
[ok](X) = 2.X + 2
[tt] = 0
[ACTIVE](X) = 0
[AND](X1,X2) = 0
[PLUS](X1,X2) = 0
[PROPER](X) = 0
[S](X) = 0
[TOP](X) = X
[X](X1,X2) = 0

Problem 1.7: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(and(tt,X)) -> mark(X)
 active(and(X1,X2)) -> and(active(X1),X2)
 active(plus(N,s(M))) -> mark(s(plus(N,M)))
 active(plus(N,num0)) -> mark(N)
 active(plus(X1,X2)) -> plus(active(X1),X2)
 active(plus(X1,X2)) -> plus(X1,active(X2))
 active(s(X)) -> s(active(X))
 active(x(N,s(M))) -> mark(plus(x(N,M),N))
 active(x(N,num0)) -> mark(num0)
 active(x(X1,X2)) -> x(active(X1),X2)
 active(x(X1,X2)) -> x(X1,active(X2))
 and(mark(X1),X2) -> mark(and(X1,X2))
 and(ok(X1),ok(X2)) -> ok(and(X1,X2))
 plus(mark(X1),X2) -> mark(plus(X1,X2))
 plus(ok(X1),ok(X2)) -> ok(plus(X1,X2))
 plus(X1,mark(X2)) -> mark(plus(X1,X2))
 proper(and(X1,X2)) -> and(proper(X1),proper(X2))
 proper(plus(X1,X2)) -> plus(proper(X1),proper(X2))
 proper(s(X)) -> s(proper(X))
 proper(x(X1,X2)) -> x(proper(X1),proper(X2))
 proper(num0) -> ok(num0)
 proper(tt) -> ok(tt)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
 x(mark(X1),X2) -> mark(x(X1,X2))
 x(ok(X1),ok(X2)) -> ok(x(X1,X2))
 x(X1,mark(X2)) -> mark(x(X1,X2))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
