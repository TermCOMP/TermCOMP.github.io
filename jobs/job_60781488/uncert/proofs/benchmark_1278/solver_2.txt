YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/my6kj.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRSToCSRProof [EQUIVALENT, 0 ms]
(2) CSR
(3) CSRInnermostProof [EQUIVALENT, 0 ms]
(4) CSR
(5) CSDependencyPairsProof [EQUIVALENT, 0 ms]
(6) QCSDP
(7) QCSDependencyGraphProof [EQUIVALENT, 0 ms]
(8) AND
    (9) QCSDP
        (10) QCSDPSubtermProof [EQUIVALENT, 0 ms]
        (11) QCSDP
        (12) PIsEmptyProof [EQUIVALENT, 0 ms]
        (13) YES
    (14) QCSDP
        (15) QCSDPSubtermProof [EQUIVALENT, 0 ms]
        (16) QCSDP
        (17) PIsEmptyProof [EQUIVALENT, 0 ms]
        (18) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   active(and(tt, X)) -> mark(X)
   active(plus(N, 0)) -> mark(N)
   active(plus(N, s(M))) -> mark(s(plus(N, M)))
   active(x(N, 0)) -> mark(0)
   active(x(N, s(M))) -> mark(plus(x(N, M), N))
   active(and(X1, X2)) -> and(active(X1), X2)
   active(plus(X1, X2)) -> plus(active(X1), X2)
   active(plus(X1, X2)) -> plus(X1, active(X2))
   active(s(X)) -> s(active(X))
   active(x(X1, X2)) -> x(active(X1), X2)
   active(x(X1, X2)) -> x(X1, active(X2))
   and(mark(X1), X2) -> mark(and(X1, X2))
   plus(mark(X1), X2) -> mark(plus(X1, X2))
   plus(X1, mark(X2)) -> mark(plus(X1, X2))
   s(mark(X)) -> mark(s(X))
   x(mark(X1), X2) -> mark(x(X1, X2))
   x(X1, mark(X2)) -> mark(x(X1, X2))
   proper(and(X1, X2)) -> and(proper(X1), proper(X2))
   proper(tt) -> ok(tt)
   proper(plus(X1, X2)) -> plus(proper(X1), proper(X2))
   proper(0) -> ok(0)
   proper(s(X)) -> s(proper(X))
   proper(x(X1, X2)) -> x(proper(X1), proper(X2))
   and(ok(X1), ok(X2)) -> ok(and(X1, X2))
   plus(ok(X1), ok(X2)) -> ok(plus(X1, X2))
   s(ok(X)) -> ok(s(X))
   x(ok(X1), ok(X2)) -> ok(x(X1, X2))
   top(mark(X)) -> top(proper(X))
   top(ok(X)) -> top(active(X))

Q is empty.

----------------------------------------

(1) QTRSToCSRProof (EQUIVALENT)
The following Q TRS is given: Q restricted rewrite system:
The TRS R consists of the following rules:

   active(and(tt, X)) -> mark(X)
   active(plus(N, 0)) -> mark(N)
   active(plus(N, s(M))) -> mark(s(plus(N, M)))
   active(x(N, 0)) -> mark(0)
   active(x(N, s(M))) -> mark(plus(x(N, M), N))
   active(and(X1, X2)) -> and(active(X1), X2)
   active(plus(X1, X2)) -> plus(active(X1), X2)
   active(plus(X1, X2)) -> plus(X1, active(X2))
   active(s(X)) -> s(active(X))
   active(x(X1, X2)) -> x(active(X1), X2)
   active(x(X1, X2)) -> x(X1, active(X2))
   and(mark(X1), X2) -> mark(and(X1, X2))
   plus(mark(X1), X2) -> mark(plus(X1, X2))
   plus(X1, mark(X2)) -> mark(plus(X1, X2))
   s(mark(X)) -> mark(s(X))
   x(mark(X1), X2) -> mark(x(X1, X2))
   x(X1, mark(X2)) -> mark(x(X1, X2))
   proper(and(X1, X2)) -> and(proper(X1), proper(X2))
   proper(tt) -> ok(tt)
   proper(plus(X1, X2)) -> plus(proper(X1), proper(X2))
   proper(0) -> ok(0)
   proper(s(X)) -> s(proper(X))
   proper(x(X1, X2)) -> x(proper(X1), proper(X2))
   and(ok(X1), ok(X2)) -> ok(and(X1, X2))
   plus(ok(X1), ok(X2)) -> ok(plus(X1, X2))
   s(ok(X)) -> ok(s(X))
   x(ok(X1), ok(X2)) -> ok(x(X1, X2))
   top(mark(X)) -> top(proper(X))
   top(ok(X)) -> top(active(X))

Q is empty.
Special symbols used for the transformation (see [GM04]):
top: top_1, active: active_1, mark: mark_1, ok: ok_1, proper: proper_1
The replacement map contains the following entries:

and: {1}
tt: empty set
plus: {1, 2}
0: empty set
s: {1}
x: {1, 2}
The QTRS contained all rules created by the complete Giesl-Middeldorp transformation. Therefore, the inverse transformation is complete (and sound).
----------------------------------------

(2)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   and(tt, X) -> X
   plus(N, 0) -> N
   plus(N, s(M)) -> s(plus(N, M))
   x(N, 0) -> 0
   x(N, s(M)) -> plus(x(N, M), N)

The replacement map contains the following entries:

and: {1}
tt: empty set
plus: {1, 2}
0: empty set
s: {1}
x: {1, 2}

----------------------------------------

(3) CSRInnermostProof (EQUIVALENT)
The CSR is orthogonal. By [CS_Inn] we can switch to innermost.
----------------------------------------

(4)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   and(tt, X) -> X
   plus(N, 0) -> N
   plus(N, s(M)) -> s(plus(N, M))
   x(N, 0) -> 0
   x(N, s(M)) -> plus(x(N, M), N)

The replacement map contains the following entries:

and: {1}
tt: empty set
plus: {1, 2}
0: empty set
s: {1}
x: {1, 2}


Innermost Strategy.

----------------------------------------

(5) CSDependencyPairsProof (EQUIVALENT)
Using Improved CS-DPs [LPAR08] we result in the following initial Q-CSDP problem.
----------------------------------------

(6)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {plus_2, s_1, x_2, PLUS_2, X_2} are replacing on all positions.
For all symbols f in {and_2, AND_2} we have mu(f) = {1}.
The symbols in {U_1} are not replacing on any position.

The ordinary context-sensitive dependency pairs DP_o are:
   PLUS(N, s(M)) -> PLUS(N, M)
   X(N, s(M)) -> PLUS(x(N, M), N)
   X(N, s(M)) -> X(N, M)

The collapsing dependency pairs are DP_c:
   AND(tt, X) -> X


The hidden terms of R are:
none

Every hiding context is built from:none

Hence, the new unhiding pairs DP_u are :
   AND(tt, X) -> U(X)

The TRS R consists of the following rules:

   and(tt, X) -> X
   plus(N, 0) -> N
   plus(N, s(M)) -> s(plus(N, M))
   x(N, 0) -> 0
   x(N, s(M)) -> plus(x(N, M), N)

The set Q consists of the following terms:

   and(tt, x0)
   plus(x0, 0)
   plus(x0, s(x1))
   x(x0, 0)
   x(x0, s(x1))


----------------------------------------

(7) QCSDependencyGraphProof (EQUIVALENT)
The approximation of the Context-Sensitive Dependency Graph [LPAR08] contains 2 SCCs with 1 less node.

----------------------------------------

(8)
Complex Obligation (AND)

----------------------------------------

(9)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {plus_2, s_1, x_2, PLUS_2} are replacing on all positions.
For all symbols f in {and_2} we have mu(f) = {1}.

The TRS P consists of the following rules:

   PLUS(N, s(M)) -> PLUS(N, M)

The TRS R consists of the following rules:

   and(tt, X) -> X
   plus(N, 0) -> N
   plus(N, s(M)) -> s(plus(N, M))
   x(N, 0) -> 0
   x(N, s(M)) -> plus(x(N, M), N)

The set Q consists of the following terms:

   and(tt, x0)
   plus(x0, 0)
   plus(x0, s(x1))
   x(x0, 0)
   x(x0, s(x1))


----------------------------------------

(10) QCSDPSubtermProof (EQUIVALENT)
We use the subterm processor [DA_EMMES].


The following pairs can be oriented strictly and are deleted.

   PLUS(N, s(M)) -> PLUS(N, M)
The remaining pairs can at least be oriented weakly.
none
Used ordering:  Combined order from the following AFS and order.
PLUS(x1, x2)  =  x2


Subterm Order

----------------------------------------

(11)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {plus_2, s_1, x_2} are replacing on all positions.
For all symbols f in {and_2} we have mu(f) = {1}.

The TRS P consists of the following rules:
none

The TRS R consists of the following rules:

   and(tt, X) -> X
   plus(N, 0) -> N
   plus(N, s(M)) -> s(plus(N, M))
   x(N, 0) -> 0
   x(N, s(M)) -> plus(x(N, M), N)

The set Q consists of the following terms:

   and(tt, x0)
   plus(x0, 0)
   plus(x0, s(x1))
   x(x0, 0)
   x(x0, s(x1))


----------------------------------------

(12) PIsEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R,mu)-chain.
----------------------------------------

(13)
YES

----------------------------------------

(14)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {plus_2, s_1, x_2, X_2} are replacing on all positions.
For all symbols f in {and_2} we have mu(f) = {1}.

The TRS P consists of the following rules:

   X(N, s(M)) -> X(N, M)

The TRS R consists of the following rules:

   and(tt, X) -> X
   plus(N, 0) -> N
   plus(N, s(M)) -> s(plus(N, M))
   x(N, 0) -> 0
   x(N, s(M)) -> plus(x(N, M), N)

The set Q consists of the following terms:

   and(tt, x0)
   plus(x0, 0)
   plus(x0, s(x1))
   x(x0, 0)
   x(x0, s(x1))


----------------------------------------

(15) QCSDPSubtermProof (EQUIVALENT)
We use the subterm processor [DA_EMMES].


The following pairs can be oriented strictly and are deleted.

   X(N, s(M)) -> X(N, M)
The remaining pairs can at least be oriented weakly.
none
Used ordering:  Combined order from the following AFS and order.
X(x1, x2)  =  x2


Subterm Order

----------------------------------------

(16)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {plus_2, s_1, x_2} are replacing on all positions.
For all symbols f in {and_2} we have mu(f) = {1}.

The TRS P consists of the following rules:
none

The TRS R consists of the following rules:

   and(tt, X) -> X
   plus(N, 0) -> N
   plus(N, s(M)) -> s(plus(N, M))
   x(N, 0) -> 0
   x(N, s(M)) -> plus(x(N, M), N)

The set Q consists of the following terms:

   and(tt, x0)
   plus(x0, 0)
   plus(x0, s(x1))
   x(x0, 0)
   x(x0, s(x1))


----------------------------------------

(17) PIsEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R,mu)-chain.
----------------------------------------

(18)
YES
