YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/AKDBW.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) Overlay + Local Confluence [EQUIVALENT, 0 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 0 ms]
(4) QDP
(5) DependencyGraphProof [EQUIVALENT, 0 ms]
(6) AND
    (7) QDP
        (8) UsableRulesProof [EQUIVALENT, 0 ms]
        (9) QDP
        (10) QReductionProof [EQUIVALENT, 0 ms]
        (11) QDP
        (12) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (13) YES
    (14) QDP
        (15) UsableRulesProof [EQUIVALENT, 0 ms]
        (16) QDP
        (17) QReductionProof [EQUIVALENT, 0 ms]
        (18) QDP
        (19) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (20) YES
    (21) QDP
        (22) UsableRulesProof [EQUIVALENT, 0 ms]
        (23) QDP
        (24) QReductionProof [EQUIVALENT, 0 ms]
        (25) QDP
        (26) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (27) YES
    (28) QDP
        (29) UsableRulesProof [EQUIVALENT, 0 ms]
        (30) QDP
        (31) QReductionProof [EQUIVALENT, 0 ms]
        (32) QDP
        (33) QDPOrderProof [EQUIVALENT, 0 ms]
        (34) QDP
        (35) PisEmptyProof [EQUIVALENT, 0 ms]
        (36) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   min(x, 0) -> 0
   min(0, y) -> 0
   min(s(x), s(y)) -> s(min(x, y))
   max(x, 0) -> x
   max(0, y) -> y
   max(s(x), s(y)) -> s(max(x, y))
   -(x, 0) -> x
   -(s(x), s(y)) -> -(x, y)
   gcd(s(x), 0) -> s(x)
   gcd(0, s(x)) -> s(x)
   gcd(s(x), s(y)) -> gcd(-(max(x, y), min(x, y)), s(min(x, y)))

Q is empty.

----------------------------------------

(1) Overlay + Local Confluence (EQUIVALENT)
The TRS is overlay and locally confluent. By [NOC] we can switch to innermost.
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   min(x, 0) -> 0
   min(0, y) -> 0
   min(s(x), s(y)) -> s(min(x, y))
   max(x, 0) -> x
   max(0, y) -> y
   max(s(x), s(y)) -> s(max(x, y))
   -(x, 0) -> x
   -(s(x), s(y)) -> -(x, y)
   gcd(s(x), 0) -> s(x)
   gcd(0, s(x)) -> s(x)
   gcd(s(x), s(y)) -> gcd(-(max(x, y), min(x, y)), s(min(x, y)))

The set Q consists of the following terms:

   min(x0, 0)
   min(0, x0)
   min(s(x0), s(x1))
   max(x0, 0)
   max(0, x0)
   max(s(x0), s(x1))
   -(x0, 0)
   -(s(x0), s(x1))
   gcd(s(x0), 0)
   gcd(0, s(x0))
   gcd(s(x0), s(x1))


----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MIN(s(x), s(y)) -> MIN(x, y)
   MAX(s(x), s(y)) -> MAX(x, y)
   -^1(s(x), s(y)) -> -^1(x, y)
   GCD(s(x), s(y)) -> GCD(-(max(x, y), min(x, y)), s(min(x, y)))
   GCD(s(x), s(y)) -> -^1(max(x, y), min(x, y))
   GCD(s(x), s(y)) -> MAX(x, y)
   GCD(s(x), s(y)) -> MIN(x, y)

The TRS R consists of the following rules:

   min(x, 0) -> 0
   min(0, y) -> 0
   min(s(x), s(y)) -> s(min(x, y))
   max(x, 0) -> x
   max(0, y) -> y
   max(s(x), s(y)) -> s(max(x, y))
   -(x, 0) -> x
   -(s(x), s(y)) -> -(x, y)
   gcd(s(x), 0) -> s(x)
   gcd(0, s(x)) -> s(x)
   gcd(s(x), s(y)) -> gcd(-(max(x, y), min(x, y)), s(min(x, y)))

The set Q consists of the following terms:

   min(x0, 0)
   min(0, x0)
   min(s(x0), s(x1))
   max(x0, 0)
   max(0, x0)
   max(s(x0), s(x1))
   -(x0, 0)
   -(s(x0), s(x1))
   gcd(s(x0), 0)
   gcd(0, s(x0))
   gcd(s(x0), s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 4 SCCs with 3 less nodes.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   -^1(s(x), s(y)) -> -^1(x, y)

The TRS R consists of the following rules:

   min(x, 0) -> 0
   min(0, y) -> 0
   min(s(x), s(y)) -> s(min(x, y))
   max(x, 0) -> x
   max(0, y) -> y
   max(s(x), s(y)) -> s(max(x, y))
   -(x, 0) -> x
   -(s(x), s(y)) -> -(x, y)
   gcd(s(x), 0) -> s(x)
   gcd(0, s(x)) -> s(x)
   gcd(s(x), s(y)) -> gcd(-(max(x, y), min(x, y)), s(min(x, y)))

The set Q consists of the following terms:

   min(x0, 0)
   min(0, x0)
   min(s(x0), s(x1))
   max(x0, 0)
   max(0, x0)
   max(s(x0), s(x1))
   -(x0, 0)
   -(s(x0), s(x1))
   gcd(s(x0), 0)
   gcd(0, s(x0))
   gcd(s(x0), s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(8) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(9)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   -^1(s(x), s(y)) -> -^1(x, y)

R is empty.
The set Q consists of the following terms:

   min(x0, 0)
   min(0, x0)
   min(s(x0), s(x1))
   max(x0, 0)
   max(0, x0)
   max(s(x0), s(x1))
   -(x0, 0)
   -(s(x0), s(x1))
   gcd(s(x0), 0)
   gcd(0, s(x0))
   gcd(s(x0), s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(10) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   min(x0, 0)
   min(0, x0)
   min(s(x0), s(x1))
   max(x0, 0)
   max(0, x0)
   max(s(x0), s(x1))
   -(x0, 0)
   -(s(x0), s(x1))
   gcd(s(x0), 0)
   gcd(0, s(x0))
   gcd(s(x0), s(x1))


----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   -^1(s(x), s(y)) -> -^1(x, y)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(12) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*-^1(s(x), s(y)) -> -^1(x, y)
The graph contains the following edges 1 > 1, 2 > 2


----------------------------------------

(13)
YES

----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MAX(s(x), s(y)) -> MAX(x, y)

The TRS R consists of the following rules:

   min(x, 0) -> 0
   min(0, y) -> 0
   min(s(x), s(y)) -> s(min(x, y))
   max(x, 0) -> x
   max(0, y) -> y
   max(s(x), s(y)) -> s(max(x, y))
   -(x, 0) -> x
   -(s(x), s(y)) -> -(x, y)
   gcd(s(x), 0) -> s(x)
   gcd(0, s(x)) -> s(x)
   gcd(s(x), s(y)) -> gcd(-(max(x, y), min(x, y)), s(min(x, y)))

The set Q consists of the following terms:

   min(x0, 0)
   min(0, x0)
   min(s(x0), s(x1))
   max(x0, 0)
   max(0, x0)
   max(s(x0), s(x1))
   -(x0, 0)
   -(s(x0), s(x1))
   gcd(s(x0), 0)
   gcd(0, s(x0))
   gcd(s(x0), s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MAX(s(x), s(y)) -> MAX(x, y)

R is empty.
The set Q consists of the following terms:

   min(x0, 0)
   min(0, x0)
   min(s(x0), s(x1))
   max(x0, 0)
   max(0, x0)
   max(s(x0), s(x1))
   -(x0, 0)
   -(s(x0), s(x1))
   gcd(s(x0), 0)
   gcd(0, s(x0))
   gcd(s(x0), s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   min(x0, 0)
   min(0, x0)
   min(s(x0), s(x1))
   max(x0, 0)
   max(0, x0)
   max(s(x0), s(x1))
   -(x0, 0)
   -(s(x0), s(x1))
   gcd(s(x0), 0)
   gcd(0, s(x0))
   gcd(s(x0), s(x1))


----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MAX(s(x), s(y)) -> MAX(x, y)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*MAX(s(x), s(y)) -> MAX(x, y)
The graph contains the following edges 1 > 1, 2 > 2


----------------------------------------

(20)
YES

----------------------------------------

(21)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MIN(s(x), s(y)) -> MIN(x, y)

The TRS R consists of the following rules:

   min(x, 0) -> 0
   min(0, y) -> 0
   min(s(x), s(y)) -> s(min(x, y))
   max(x, 0) -> x
   max(0, y) -> y
   max(s(x), s(y)) -> s(max(x, y))
   -(x, 0) -> x
   -(s(x), s(y)) -> -(x, y)
   gcd(s(x), 0) -> s(x)
   gcd(0, s(x)) -> s(x)
   gcd(s(x), s(y)) -> gcd(-(max(x, y), min(x, y)), s(min(x, y)))

The set Q consists of the following terms:

   min(x0, 0)
   min(0, x0)
   min(s(x0), s(x1))
   max(x0, 0)
   max(0, x0)
   max(s(x0), s(x1))
   -(x0, 0)
   -(s(x0), s(x1))
   gcd(s(x0), 0)
   gcd(0, s(x0))
   gcd(s(x0), s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(22) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(23)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MIN(s(x), s(y)) -> MIN(x, y)

R is empty.
The set Q consists of the following terms:

   min(x0, 0)
   min(0, x0)
   min(s(x0), s(x1))
   max(x0, 0)
   max(0, x0)
   max(s(x0), s(x1))
   -(x0, 0)
   -(s(x0), s(x1))
   gcd(s(x0), 0)
   gcd(0, s(x0))
   gcd(s(x0), s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(24) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   min(x0, 0)
   min(0, x0)
   min(s(x0), s(x1))
   max(x0, 0)
   max(0, x0)
   max(s(x0), s(x1))
   -(x0, 0)
   -(s(x0), s(x1))
   gcd(s(x0), 0)
   gcd(0, s(x0))
   gcd(s(x0), s(x1))


----------------------------------------

(25)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MIN(s(x), s(y)) -> MIN(x, y)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(26) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*MIN(s(x), s(y)) -> MIN(x, y)
The graph contains the following edges 1 > 1, 2 > 2


----------------------------------------

(27)
YES

----------------------------------------

(28)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   GCD(s(x), s(y)) -> GCD(-(max(x, y), min(x, y)), s(min(x, y)))

The TRS R consists of the following rules:

   min(x, 0) -> 0
   min(0, y) -> 0
   min(s(x), s(y)) -> s(min(x, y))
   max(x, 0) -> x
   max(0, y) -> y
   max(s(x), s(y)) -> s(max(x, y))
   -(x, 0) -> x
   -(s(x), s(y)) -> -(x, y)
   gcd(s(x), 0) -> s(x)
   gcd(0, s(x)) -> s(x)
   gcd(s(x), s(y)) -> gcd(-(max(x, y), min(x, y)), s(min(x, y)))

The set Q consists of the following terms:

   min(x0, 0)
   min(0, x0)
   min(s(x0), s(x1))
   max(x0, 0)
   max(0, x0)
   max(s(x0), s(x1))
   -(x0, 0)
   -(s(x0), s(x1))
   gcd(s(x0), 0)
   gcd(0, s(x0))
   gcd(s(x0), s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(29) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(30)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   GCD(s(x), s(y)) -> GCD(-(max(x, y), min(x, y)), s(min(x, y)))

The TRS R consists of the following rules:

   max(x, 0) -> x
   max(0, y) -> y
   max(s(x), s(y)) -> s(max(x, y))
   min(x, 0) -> 0
   min(0, y) -> 0
   min(s(x), s(y)) -> s(min(x, y))
   -(x, 0) -> x
   -(s(x), s(y)) -> -(x, y)

The set Q consists of the following terms:

   min(x0, 0)
   min(0, x0)
   min(s(x0), s(x1))
   max(x0, 0)
   max(0, x0)
   max(s(x0), s(x1))
   -(x0, 0)
   -(s(x0), s(x1))
   gcd(s(x0), 0)
   gcd(0, s(x0))
   gcd(s(x0), s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(31) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   gcd(s(x0), 0)
   gcd(0, s(x0))
   gcd(s(x0), s(x1))


----------------------------------------

(32)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   GCD(s(x), s(y)) -> GCD(-(max(x, y), min(x, y)), s(min(x, y)))

The TRS R consists of the following rules:

   max(x, 0) -> x
   max(0, y) -> y
   max(s(x), s(y)) -> s(max(x, y))
   min(x, 0) -> 0
   min(0, y) -> 0
   min(s(x), s(y)) -> s(min(x, y))
   -(x, 0) -> x
   -(s(x), s(y)) -> -(x, y)

The set Q consists of the following terms:

   min(x0, 0)
   min(0, x0)
   min(s(x0), s(x1))
   max(x0, 0)
   max(0, x0)
   max(s(x0), s(x1))
   -(x0, 0)
   -(s(x0), s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(33) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   GCD(s(x), s(y)) -> GCD(-(max(x, y), min(x, y)), s(min(x, y)))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial Order [NEGPOLO,POLO] with Interpretation:

POL( -_2(x_1, x_2) ) = x_1
POL( GCD_2(x_1, x_2) ) = max{0, 2x_1 + x_2 - 2}
POL( max_2(x_1, x_2) ) = x_1 + x_2
POL( 0 ) = 0
POL( s_1(x_1) ) = 2x_1 + 1
POL( min_2(x_1, x_2) ) = x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   max(x, 0) -> x
   max(0, y) -> y
   max(s(x), s(y)) -> s(max(x, y))
   min(x, 0) -> 0
   min(0, y) -> 0
   min(s(x), s(y)) -> s(min(x, y))
   -(x, 0) -> x
   -(s(x), s(y)) -> -(x, y)


----------------------------------------

(34)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   max(x, 0) -> x
   max(0, y) -> y
   max(s(x), s(y)) -> s(max(x, y))
   min(x, 0) -> 0
   min(0, y) -> 0
   min(s(x), s(y)) -> s(min(x, y))
   -(x, 0) -> x
   -(s(x), s(y)) -> -(x, y)

The set Q consists of the following terms:

   min(x0, 0)
   min(0, x0)
   min(s(x0), s(x1))
   max(x0, 0)
   max(0, x0)
   max(s(x0), s(x1))
   -(x0, 0)
   -(s(x0), s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(35) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(36)
YES
