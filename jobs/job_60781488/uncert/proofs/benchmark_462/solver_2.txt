YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/oIJIG.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) Overlay + Local Confluence [EQUIVALENT, 0 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 0 ms]
(4) QDP
(5) DependencyGraphProof [EQUIVALENT, 0 ms]
(6) AND
    (7) QDP
        (8) UsableRulesProof [EQUIVALENT, 0 ms]
        (9) QDP
        (10) QReductionProof [EQUIVALENT, 0 ms]
        (11) QDP
        (12) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (13) YES
    (14) QDP
        (15) QDPOrderProof [EQUIVALENT, 21 ms]
        (16) QDP
        (17) PisEmptyProof [EQUIVALENT, 0 ms]
        (18) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   -(x, 0) -> x
   -(0, s(y)) -> 0
   -(s(x), s(y)) -> -(x, y)
   f(0) -> 0
   f(s(x)) -> -(s(x), g(f(x)))
   g(0) -> s(0)
   g(s(x)) -> -(s(x), f(g(x)))

Q is empty.

----------------------------------------

(1) Overlay + Local Confluence (EQUIVALENT)
The TRS is overlay and locally confluent. By [NOC] we can switch to innermost.
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   -(x, 0) -> x
   -(0, s(y)) -> 0
   -(s(x), s(y)) -> -(x, y)
   f(0) -> 0
   f(s(x)) -> -(s(x), g(f(x)))
   g(0) -> s(0)
   g(s(x)) -> -(s(x), f(g(x)))

The set Q consists of the following terms:

   -(x0, 0)
   -(0, s(x0))
   -(s(x0), s(x1))
   f(0)
   f(s(x0))
   g(0)
   g(s(x0))


----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   -^1(s(x), s(y)) -> -^1(x, y)
   F(s(x)) -> -^1(s(x), g(f(x)))
   F(s(x)) -> G(f(x))
   F(s(x)) -> F(x)
   G(s(x)) -> -^1(s(x), f(g(x)))
   G(s(x)) -> F(g(x))
   G(s(x)) -> G(x)

The TRS R consists of the following rules:

   -(x, 0) -> x
   -(0, s(y)) -> 0
   -(s(x), s(y)) -> -(x, y)
   f(0) -> 0
   f(s(x)) -> -(s(x), g(f(x)))
   g(0) -> s(0)
   g(s(x)) -> -(s(x), f(g(x)))

The set Q consists of the following terms:

   -(x0, 0)
   -(0, s(x0))
   -(s(x0), s(x1))
   f(0)
   f(s(x0))
   g(0)
   g(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs with 2 less nodes.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   -^1(s(x), s(y)) -> -^1(x, y)

The TRS R consists of the following rules:

   -(x, 0) -> x
   -(0, s(y)) -> 0
   -(s(x), s(y)) -> -(x, y)
   f(0) -> 0
   f(s(x)) -> -(s(x), g(f(x)))
   g(0) -> s(0)
   g(s(x)) -> -(s(x), f(g(x)))

The set Q consists of the following terms:

   -(x0, 0)
   -(0, s(x0))
   -(s(x0), s(x1))
   f(0)
   f(s(x0))
   g(0)
   g(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(8) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(9)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   -^1(s(x), s(y)) -> -^1(x, y)

R is empty.
The set Q consists of the following terms:

   -(x0, 0)
   -(0, s(x0))
   -(s(x0), s(x1))
   f(0)
   f(s(x0))
   g(0)
   g(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(10) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   -(x0, 0)
   -(0, s(x0))
   -(s(x0), s(x1))
   f(0)
   f(s(x0))
   g(0)
   g(s(x0))


----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   -^1(s(x), s(y)) -> -^1(x, y)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(12) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*-^1(s(x), s(y)) -> -^1(x, y)
The graph contains the following edges 1 > 1, 2 > 2


----------------------------------------

(13)
YES

----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(x)) -> G(f(x))
   G(s(x)) -> F(g(x))
   F(s(x)) -> F(x)
   G(s(x)) -> G(x)

The TRS R consists of the following rules:

   -(x, 0) -> x
   -(0, s(y)) -> 0
   -(s(x), s(y)) -> -(x, y)
   f(0) -> 0
   f(s(x)) -> -(s(x), g(f(x)))
   g(0) -> s(0)
   g(s(x)) -> -(s(x), f(g(x)))

The set Q consists of the following terms:

   -(x0, 0)
   -(0, s(x0))
   -(s(x0), s(x1))
   f(0)
   f(s(x0))
   g(0)
   g(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   F(s(x)) -> G(f(x))
   G(s(x)) -> F(g(x))
   F(s(x)) -> F(x)
   G(s(x)) -> G(x)
The remaining pairs can at least be oriented weakly.
Used ordering:  Combined order from the following AFS and order.
F(x1)  =  F(x1)

s(x1)  =  s(x1)

G(x1)  =  G(x1)

f(x1)  =  x1

g(x1)  =  g(x1)

0  =  0

-(x1, x2)  =  x1


Recursive path order with status [RPO].
Quasi-Precedence: [s_1, G_1, g_1] > F_1
[s_1, G_1, g_1] > 0

Status: F_1: multiset status
s_1: multiset status
G_1: multiset status
g_1: multiset status
0: multiset status


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   f(0) -> 0
   f(s(x)) -> -(s(x), g(f(x)))
   g(0) -> s(0)
   g(s(x)) -> -(s(x), f(g(x)))
   -(x, 0) -> x
   -(s(x), s(y)) -> -(x, y)
   -(0, s(y)) -> 0


----------------------------------------

(16)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   -(x, 0) -> x
   -(0, s(y)) -> 0
   -(s(x), s(y)) -> -(x, y)
   f(0) -> 0
   f(s(x)) -> -(s(x), g(f(x)))
   g(0) -> s(0)
   g(s(x)) -> -(s(x), f(g(x)))

The set Q consists of the following terms:

   -(x0, 0)
   -(0, s(x0))
   -(s(x0), s(x1))
   f(0)
   f(s(x0))
   g(0)
   g(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(18)
YES
