YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/2XdBg.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) FlatCCProof [EQUIVALENT, 0 ms]
(2) QTRS
(3) RootLabelingProof [EQUIVALENT, 0 ms]
(4) QTRS
(5) QTRSRRRProof [EQUIVALENT, 15 ms]
(6) QTRS
(7) RisEmptyProof [EQUIVALENT, 0 ms]
(8) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   g(b) -> f(b)
   f(a) -> g(a)
   b -> a

Q is empty.

----------------------------------------

(1) FlatCCProof (EQUIVALENT)
We used flat context closure [ROOTLAB]
As Q is empty the flat context closure was sound AND complete.

----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   g(g(b)) -> g(f(b))
   f(g(b)) -> f(f(b))
   g(f(a)) -> g(g(a))
   f(f(a)) -> f(g(a))
   g(b) -> g(a)
   f(b) -> f(a)

Q is empty.

----------------------------------------

(3) RootLabelingProof (EQUIVALENT)
We used plain root labeling [ROOTLAB] with the following heuristic:
LabelAll: All function symbols get labeled

As Q is empty the root labeling was sound AND complete.

----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   g_{g_1}(g_{b}(b)) -> g_{f_1}(f_{b}(b))
   f_{g_1}(g_{b}(b)) -> f_{f_1}(f_{b}(b))
   g_{f_1}(f_{a}(a)) -> g_{g_1}(g_{a}(a))
   f_{f_1}(f_{a}(a)) -> f_{g_1}(g_{a}(a))
   g_{b}(b) -> g_{a}(a)
   f_{b}(b) -> f_{a}(a)

Q is empty.

----------------------------------------

(5) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(a) = 0
   POL(b) = 1
   POL(f_{a}(x_1)) = x_1
   POL(f_{b}(x_1)) = x_1
   POL(f_{f_1}(x_1)) = 1 + x_1
   POL(f_{g_1}(x_1)) = x_1
   POL(g_{a}(x_1)) = x_1
   POL(g_{b}(x_1)) = 2 + x_1
   POL(g_{f_1}(x_1)) = 1 + x_1
   POL(g_{g_1}(x_1)) = x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   g_{g_1}(g_{b}(b)) -> g_{f_1}(f_{b}(b))
   f_{g_1}(g_{b}(b)) -> f_{f_1}(f_{b}(b))
   g_{f_1}(f_{a}(a)) -> g_{g_1}(g_{a}(a))
   f_{f_1}(f_{a}(a)) -> f_{g_1}(g_{a}(a))
   g_{b}(b) -> g_{a}(a)
   f_{b}(b) -> f_{a}(a)




----------------------------------------

(6)
Obligation:
Q restricted rewrite system:
R is empty.
Q is empty.

----------------------------------------

(7) RisEmptyProof (EQUIVALENT)
The TRS R is empty. Hence, termination is trivially proven.
----------------------------------------

(8)
YES
