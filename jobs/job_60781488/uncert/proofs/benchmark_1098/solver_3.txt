YES

Problem 1: 

(VAR vu95NonEmpty X X1 X2 Y Z)
(RULES
activate(nu95u95first(X1,X2)) -> first(activate(X1),activate(X2))
activate(nu95u95from(X)) -> from(activate(X))
activate(nu95u95s(X)) -> s(activate(X))
activate(X) -> X
first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
first(num0,X) -> nil
first(X1,X2) -> nu95u95first(X1,X2)
from(X) -> cons(X,nu95u95from(nu95u95s(X)))
from(X) -> nu95u95from(X)
s(X) -> nu95u95s(X)
)


Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 ACTIVATE(nu95u95first(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95first(X1,X2)) -> ACTIVATE(X2)
 ACTIVATE(nu95u95first(X1,X2)) -> FIRST(activate(X1),activate(X2))
 ACTIVATE(nu95u95from(X)) -> ACTIVATE(X)
 ACTIVATE(nu95u95from(X)) -> FROM(activate(X))
 ACTIVATE(nu95u95s(X)) -> ACTIVATE(X)
 ACTIVATE(nu95u95s(X)) -> S(activate(X))
 FIRST(s(X),cons(Y,Z)) -> ACTIVATE(Z)
-> Rules:
 activate(nu95u95first(X1,X2)) -> first(activate(X1),activate(X2))
 activate(nu95u95from(X)) -> from(activate(X))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(X) -> X
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 from(X) -> cons(X,nu95u95from(nu95u95s(X)))
 from(X) -> nu95u95from(X)
 s(X) -> nu95u95s(X)

Problem 1: 

SCC Processor:
-> Pairs:
 ACTIVATE(nu95u95first(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95first(X1,X2)) -> ACTIVATE(X2)
 ACTIVATE(nu95u95first(X1,X2)) -> FIRST(activate(X1),activate(X2))
 ACTIVATE(nu95u95from(X)) -> ACTIVATE(X)
 ACTIVATE(nu95u95from(X)) -> FROM(activate(X))
 ACTIVATE(nu95u95s(X)) -> ACTIVATE(X)
 ACTIVATE(nu95u95s(X)) -> S(activate(X))
 FIRST(s(X),cons(Y,Z)) -> ACTIVATE(Z)
-> Rules:
 activate(nu95u95first(X1,X2)) -> first(activate(X1),activate(X2))
 activate(nu95u95from(X)) -> from(activate(X))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(X) -> X
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 from(X) -> cons(X,nu95u95from(nu95u95s(X)))
 from(X) -> nu95u95from(X)
 s(X) -> nu95u95s(X)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVATE(nu95u95first(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95first(X1,X2)) -> ACTIVATE(X2)
 ACTIVATE(nu95u95first(X1,X2)) -> FIRST(activate(X1),activate(X2))
 ACTIVATE(nu95u95from(X)) -> ACTIVATE(X)
 ACTIVATE(nu95u95s(X)) -> ACTIVATE(X)
 FIRST(s(X),cons(Y,Z)) -> ACTIVATE(Z)
->->-> Rules:
 activate(nu95u95first(X1,X2)) -> first(activate(X1),activate(X2))
 activate(nu95u95from(X)) -> from(activate(X))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(X) -> X
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 from(X) -> cons(X,nu95u95from(nu95u95s(X)))
 from(X) -> nu95u95from(X)
 s(X) -> nu95u95s(X)

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 ACTIVATE(nu95u95first(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95first(X1,X2)) -> ACTIVATE(X2)
 ACTIVATE(nu95u95first(X1,X2)) -> FIRST(activate(X1),activate(X2))
 ACTIVATE(nu95u95from(X)) -> ACTIVATE(X)
 ACTIVATE(nu95u95s(X)) -> ACTIVATE(X)
 FIRST(s(X),cons(Y,Z)) -> ACTIVATE(Z)
-> Rules:
 activate(nu95u95first(X1,X2)) -> first(activate(X1),activate(X2))
 activate(nu95u95from(X)) -> from(activate(X))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(X) -> X
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 from(X) -> cons(X,nu95u95from(nu95u95s(X)))
 from(X) -> nu95u95from(X)
 s(X) -> nu95u95s(X)
-> Usable rules:
 activate(nu95u95first(X1,X2)) -> first(activate(X1),activate(X2))
 activate(nu95u95from(X)) -> from(activate(X))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(X) -> X
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 from(X) -> cons(X,nu95u95from(nu95u95s(X)))
 from(X) -> nu95u95from(X)
 s(X) -> nu95u95s(X)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[activate](X) = X
[first](X1,X2) = 2.X1 + X2 + 2
[from](X) = 2.X
[s](X) = X
[num0] = 2
[cons](X1,X2) = X2
[fSNonEmpty] = 0
[nu95u95first](X1,X2) = 2.X1 + X2 + 2
[nu95u95from](X) = 2.X
[nu95u95s](X) = X
[nil] = 1
[ACTIVATE](X) = 2.X + 2
[FIRST](X1,X2) = 2.X2 + 2
[FROM](X) = 0
[S](X) = 0

Problem 1: 

SCC Processor:
-> Pairs:
 ACTIVATE(nu95u95first(X1,X2)) -> ACTIVATE(X2)
 ACTIVATE(nu95u95first(X1,X2)) -> FIRST(activate(X1),activate(X2))
 ACTIVATE(nu95u95from(X)) -> ACTIVATE(X)
 ACTIVATE(nu95u95s(X)) -> ACTIVATE(X)
 FIRST(s(X),cons(Y,Z)) -> ACTIVATE(Z)
-> Rules:
 activate(nu95u95first(X1,X2)) -> first(activate(X1),activate(X2))
 activate(nu95u95from(X)) -> from(activate(X))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(X) -> X
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 from(X) -> cons(X,nu95u95from(nu95u95s(X)))
 from(X) -> nu95u95from(X)
 s(X) -> nu95u95s(X)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVATE(nu95u95first(X1,X2)) -> ACTIVATE(X2)
 ACTIVATE(nu95u95first(X1,X2)) -> FIRST(activate(X1),activate(X2))
 ACTIVATE(nu95u95from(X)) -> ACTIVATE(X)
 ACTIVATE(nu95u95s(X)) -> ACTIVATE(X)
 FIRST(s(X),cons(Y,Z)) -> ACTIVATE(Z)
->->-> Rules:
 activate(nu95u95first(X1,X2)) -> first(activate(X1),activate(X2))
 activate(nu95u95from(X)) -> from(activate(X))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(X) -> X
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 from(X) -> cons(X,nu95u95from(nu95u95s(X)))
 from(X) -> nu95u95from(X)
 s(X) -> nu95u95s(X)

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 ACTIVATE(nu95u95first(X1,X2)) -> ACTIVATE(X2)
 ACTIVATE(nu95u95first(X1,X2)) -> FIRST(activate(X1),activate(X2))
 ACTIVATE(nu95u95from(X)) -> ACTIVATE(X)
 ACTIVATE(nu95u95s(X)) -> ACTIVATE(X)
 FIRST(s(X),cons(Y,Z)) -> ACTIVATE(Z)
-> Rules:
 activate(nu95u95first(X1,X2)) -> first(activate(X1),activate(X2))
 activate(nu95u95from(X)) -> from(activate(X))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(X) -> X
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 from(X) -> cons(X,nu95u95from(nu95u95s(X)))
 from(X) -> nu95u95from(X)
 s(X) -> nu95u95s(X)
-> Usable rules:
 activate(nu95u95first(X1,X2)) -> first(activate(X1),activate(X2))
 activate(nu95u95from(X)) -> from(activate(X))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(X) -> X
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 from(X) -> cons(X,nu95u95from(nu95u95s(X)))
 from(X) -> nu95u95from(X)
 s(X) -> nu95u95s(X)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[activate](X) = X
[first](X1,X2) = 2.X2 + 1
[from](X) = 2.X + 1
[s](X) = X
[num0] = 1
[cons](X1,X2) = X2
[fSNonEmpty] = 0
[nu95u95first](X1,X2) = 2.X2 + 1
[nu95u95from](X) = 2.X + 1
[nu95u95s](X) = X
[nil] = 0
[ACTIVATE](X) = 2.X + 2
[FIRST](X1,X2) = 2.X2 + 2
[FROM](X) = 0
[S](X) = 0

Problem 1: 

SCC Processor:
-> Pairs:
 ACTIVATE(nu95u95first(X1,X2)) -> FIRST(activate(X1),activate(X2))
 ACTIVATE(nu95u95from(X)) -> ACTIVATE(X)
 ACTIVATE(nu95u95s(X)) -> ACTIVATE(X)
 FIRST(s(X),cons(Y,Z)) -> ACTIVATE(Z)
-> Rules:
 activate(nu95u95first(X1,X2)) -> first(activate(X1),activate(X2))
 activate(nu95u95from(X)) -> from(activate(X))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(X) -> X
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 from(X) -> cons(X,nu95u95from(nu95u95s(X)))
 from(X) -> nu95u95from(X)
 s(X) -> nu95u95s(X)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVATE(nu95u95first(X1,X2)) -> FIRST(activate(X1),activate(X2))
 ACTIVATE(nu95u95from(X)) -> ACTIVATE(X)
 ACTIVATE(nu95u95s(X)) -> ACTIVATE(X)
 FIRST(s(X),cons(Y,Z)) -> ACTIVATE(Z)
->->-> Rules:
 activate(nu95u95first(X1,X2)) -> first(activate(X1),activate(X2))
 activate(nu95u95from(X)) -> from(activate(X))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(X) -> X
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 from(X) -> cons(X,nu95u95from(nu95u95s(X)))
 from(X) -> nu95u95from(X)
 s(X) -> nu95u95s(X)

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 ACTIVATE(nu95u95first(X1,X2)) -> FIRST(activate(X1),activate(X2))
 ACTIVATE(nu95u95from(X)) -> ACTIVATE(X)
 ACTIVATE(nu95u95s(X)) -> ACTIVATE(X)
 FIRST(s(X),cons(Y,Z)) -> ACTIVATE(Z)
-> Rules:
 activate(nu95u95first(X1,X2)) -> first(activate(X1),activate(X2))
 activate(nu95u95from(X)) -> from(activate(X))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(X) -> X
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 from(X) -> cons(X,nu95u95from(nu95u95s(X)))
 from(X) -> nu95u95from(X)
 s(X) -> nu95u95s(X)
-> Usable rules:
 activate(nu95u95first(X1,X2)) -> first(activate(X1),activate(X2))
 activate(nu95u95from(X)) -> from(activate(X))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(X) -> X
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 from(X) -> cons(X,nu95u95from(nu95u95s(X)))
 from(X) -> nu95u95from(X)
 s(X) -> nu95u95s(X)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[activate](X) = X
[first](X1,X2) = 2.X1 + X2 + 2
[from](X) = 2.X + 2
[s](X) = X
[num0] = 2
[cons](X1,X2) = X2
[fSNonEmpty] = 0
[nu95u95first](X1,X2) = 2.X1 + X2 + 2
[nu95u95from](X) = 2.X + 2
[nu95u95s](X) = X
[nil] = 2
[ACTIVATE](X) = 2.X + 2
[FIRST](X1,X2) = 2.X2 + 2
[FROM](X) = 0
[S](X) = 0

Problem 1: 

SCC Processor:
-> Pairs:
 ACTIVATE(nu95u95from(X)) -> ACTIVATE(X)
 ACTIVATE(nu95u95s(X)) -> ACTIVATE(X)
 FIRST(s(X),cons(Y,Z)) -> ACTIVATE(Z)
-> Rules:
 activate(nu95u95first(X1,X2)) -> first(activate(X1),activate(X2))
 activate(nu95u95from(X)) -> from(activate(X))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(X) -> X
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 from(X) -> cons(X,nu95u95from(nu95u95s(X)))
 from(X) -> nu95u95from(X)
 s(X) -> nu95u95s(X)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVATE(nu95u95from(X)) -> ACTIVATE(X)
 ACTIVATE(nu95u95s(X)) -> ACTIVATE(X)
->->-> Rules:
 activate(nu95u95first(X1,X2)) -> first(activate(X1),activate(X2))
 activate(nu95u95from(X)) -> from(activate(X))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(X) -> X
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 from(X) -> cons(X,nu95u95from(nu95u95s(X)))
 from(X) -> nu95u95from(X)
 s(X) -> nu95u95s(X)

Problem 1: 

Subterm Processor:
-> Pairs:
 ACTIVATE(nu95u95from(X)) -> ACTIVATE(X)
 ACTIVATE(nu95u95s(X)) -> ACTIVATE(X)
-> Rules:
 activate(nu95u95first(X1,X2)) -> first(activate(X1),activate(X2))
 activate(nu95u95from(X)) -> from(activate(X))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(X) -> X
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 from(X) -> cons(X,nu95u95from(nu95u95s(X)))
 from(X) -> nu95u95from(X)
 s(X) -> nu95u95s(X)
->Projection:
 pi(ACTIVATE) = 1

Problem 1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 activate(nu95u95first(X1,X2)) -> first(activate(X1),activate(X2))
 activate(nu95u95from(X)) -> from(activate(X))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(X) -> X
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 from(X) -> cons(X,nu95u95from(nu95u95s(X)))
 from(X) -> nu95u95from(X)
 s(X) -> nu95u95s(X)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
