YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/wPwH2.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRSRRRProof [EQUIVALENT, 96 ms]
(2) QTRS
(3) QTRSRRRProof [EQUIVALENT, 0 ms]
(4) QTRS
(5) RisEmptyProof [EQUIVALENT, 0 ms]
(6) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a__U11(tt, N) -> mark(N)
   a__U21(tt, M, N) -> s(a__plus(mark(N), mark(M)))
   a__U31(tt) -> 0
   a__U41(tt, M, N) -> a__plus(a__x(mark(N), mark(M)), mark(N))
   a__and(tt, X) -> mark(X)
   a__isNat(0) -> tt
   a__isNat(plus(V1, V2)) -> a__and(a__isNat(V1), isNat(V2))
   a__isNat(s(V1)) -> a__isNat(V1)
   a__isNat(x(V1, V2)) -> a__and(a__isNat(V1), isNat(V2))
   a__plus(N, 0) -> a__U11(a__isNat(N), N)
   a__plus(N, s(M)) -> a__U21(a__and(a__isNat(M), isNat(N)), M, N)
   a__x(N, 0) -> a__U31(a__isNat(N))
   a__x(N, s(M)) -> a__U41(a__and(a__isNat(M), isNat(N)), M, N)
   mark(U11(X1, X2)) -> a__U11(mark(X1), X2)
   mark(U21(X1, X2, X3)) -> a__U21(mark(X1), X2, X3)
   mark(plus(X1, X2)) -> a__plus(mark(X1), mark(X2))
   mark(U31(X)) -> a__U31(mark(X))
   mark(U41(X1, X2, X3)) -> a__U41(mark(X1), X2, X3)
   mark(x(X1, X2)) -> a__x(mark(X1), mark(X2))
   mark(and(X1, X2)) -> a__and(mark(X1), X2)
   mark(isNat(X)) -> a__isNat(X)
   mark(tt) -> tt
   mark(s(X)) -> s(mark(X))
   mark(0) -> 0
   a__U11(X1, X2) -> U11(X1, X2)
   a__U21(X1, X2, X3) -> U21(X1, X2, X3)
   a__plus(X1, X2) -> plus(X1, X2)
   a__U31(X) -> U31(X)
   a__U41(X1, X2, X3) -> U41(X1, X2, X3)
   a__x(X1, X2) -> x(X1, X2)
   a__and(X1, X2) -> and(X1, X2)
   a__isNat(X) -> isNat(X)

Q is empty.

----------------------------------------

(1) QTRSRRRProof (EQUIVALENT)
Used ordering:
a__U11/2(YES,YES)
tt/0)
mark/1)YES(
a__U21/3(YES,YES,YES)
s/1(YES)
a__plus/2(YES,YES)
a__U31/1)YES(
0/0)
a__U41/3(YES,YES,YES)
a__x/2(YES,YES)
a__and/2(YES,YES)
a__isNat/1)YES(
plus/2(YES,YES)
isNat/1)YES(
x/2(YES,YES)
U11/2(YES,YES)
U21/3(YES,YES,YES)
U31/1)YES(
U41/3(YES,YES,YES)
and/2(YES,YES)

Quasi precedence:
[tt, 0] > [a__U21_3, a__plus_2, plus_2, U21_3] > [a__U11_2, U11_2]
[tt, 0] > [a__U21_3, a__plus_2, plus_2, U21_3] > [s_1, a__and_2, and_2]
[a__U41_3, a__x_2, x_2, U41_3] > [a__U21_3, a__plus_2, plus_2, U21_3] > [a__U11_2, U11_2]
[a__U41_3, a__x_2, x_2, U41_3] > [a__U21_3, a__plus_2, plus_2, U21_3] > [s_1, a__and_2, and_2]


Status:
a__U11_2: multiset status
tt: multiset status
a__U21_3: [2,3,1]
s_1: multiset status
a__plus_2: [2,1]
0: multiset status
a__U41_3: [2,3,1]
a__x_2: [2,1]
a__and_2: multiset status
plus_2: [2,1]
x_2: [2,1]
U11_2: multiset status
U21_3: [2,3,1]
U41_3: [2,3,1]
and_2: multiset status

With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   a__U11(tt, N) -> mark(N)
   a__U21(tt, M, N) -> s(a__plus(mark(N), mark(M)))
   a__U41(tt, M, N) -> a__plus(a__x(mark(N), mark(M)), mark(N))
   a__and(tt, X) -> mark(X)
   a__isNat(plus(V1, V2)) -> a__and(a__isNat(V1), isNat(V2))
   a__isNat(s(V1)) -> a__isNat(V1)
   a__isNat(x(V1, V2)) -> a__and(a__isNat(V1), isNat(V2))
   a__plus(N, 0) -> a__U11(a__isNat(N), N)
   a__plus(N, s(M)) -> a__U21(a__and(a__isNat(M), isNat(N)), M, N)
   a__x(N, 0) -> a__U31(a__isNat(N))
   a__x(N, s(M)) -> a__U41(a__and(a__isNat(M), isNat(N)), M, N)




----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a__U31(tt) -> 0
   a__isNat(0) -> tt
   mark(U11(X1, X2)) -> a__U11(mark(X1), X2)
   mark(U21(X1, X2, X3)) -> a__U21(mark(X1), X2, X3)
   mark(plus(X1, X2)) -> a__plus(mark(X1), mark(X2))
   mark(U31(X)) -> a__U31(mark(X))
   mark(U41(X1, X2, X3)) -> a__U41(mark(X1), X2, X3)
   mark(x(X1, X2)) -> a__x(mark(X1), mark(X2))
   mark(and(X1, X2)) -> a__and(mark(X1), X2)
   mark(isNat(X)) -> a__isNat(X)
   mark(tt) -> tt
   mark(s(X)) -> s(mark(X))
   mark(0) -> 0
   a__U11(X1, X2) -> U11(X1, X2)
   a__U21(X1, X2, X3) -> U21(X1, X2, X3)
   a__plus(X1, X2) -> plus(X1, X2)
   a__U31(X) -> U31(X)
   a__U41(X1, X2, X3) -> U41(X1, X2, X3)
   a__x(X1, X2) -> x(X1, X2)
   a__and(X1, X2) -> and(X1, X2)
   a__isNat(X) -> isNat(X)

Q is empty.

----------------------------------------

(3) QTRSRRRProof (EQUIVALENT)
Used ordering:
Knuth-Bendix order [KBO] with precedence:mark_1 > s_1 > a__and_2 > and_2 > a__plus_2 > plus_2 > a__U31_1 > a__U41_3 > U41_3 > a__isNat_1 > U31_1 > isNat_1 > a__x_2 > x_2 > tt > a__U21_3 > U21_3 > a__U11_2 > U11_2 > 0

and weight map:

   tt=2
   0=1
   a__U31_1=1
   a__isNat_1=1
   mark_1=0
   U31_1=1
   isNat_1=1
   s_1=1
   U11_2=0
   a__U11_2=0
   U21_3=0
   a__U21_3=0
   plus_2=0
   a__plus_2=0
   U41_3=0
   a__U41_3=0
   x_2=0
   a__x_2=0
   and_2=0
   a__and_2=0

The variable weight is 1With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   a__U31(tt) -> 0
   a__isNat(0) -> tt
   mark(U11(X1, X2)) -> a__U11(mark(X1), X2)
   mark(U21(X1, X2, X3)) -> a__U21(mark(X1), X2, X3)
   mark(plus(X1, X2)) -> a__plus(mark(X1), mark(X2))
   mark(U31(X)) -> a__U31(mark(X))
   mark(U41(X1, X2, X3)) -> a__U41(mark(X1), X2, X3)
   mark(x(X1, X2)) -> a__x(mark(X1), mark(X2))
   mark(and(X1, X2)) -> a__and(mark(X1), X2)
   mark(isNat(X)) -> a__isNat(X)
   mark(tt) -> tt
   mark(s(X)) -> s(mark(X))
   mark(0) -> 0
   a__U11(X1, X2) -> U11(X1, X2)
   a__U21(X1, X2, X3) -> U21(X1, X2, X3)
   a__plus(X1, X2) -> plus(X1, X2)
   a__U31(X) -> U31(X)
   a__U41(X1, X2, X3) -> U41(X1, X2, X3)
   a__x(X1, X2) -> x(X1, X2)
   a__and(X1, X2) -> and(X1, X2)
   a__isNat(X) -> isNat(X)




----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
R is empty.
Q is empty.

----------------------------------------

(5) RisEmptyProof (EQUIVALENT)
The TRS R is empty. Hence, termination is trivially proven.
----------------------------------------

(6)
YES
