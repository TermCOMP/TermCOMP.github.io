YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/wjgZf.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 0 ms]
(2) QDP
(3) DependencyGraphProof [EQUIVALENT, 0 ms]
(4) QDP
(5) SplitQDPProof [EQUIVALENT, 0 ms]
(6) AND
    (7) QDP
        (8) SemLabProof [SOUND, 0 ms]
        (9) QDP
        (10) DependencyGraphProof [EQUIVALENT, 0 ms]
        (11) QDP
        (12) UsableRulesReductionPairsProof [EQUIVALENT, 0 ms]
        (13) QDP
        (14) DependencyGraphProof [EQUIVALENT, 0 ms]
        (15) QDP
        (16) PisEmptyProof [SOUND, 0 ms]
        (17) TRUE
    (18) QDP
        (19) QDPBoundsTAProof [EQUIVALENT, 3 ms]
        (20) QDP
        (21) PisEmptyProof [EQUIVALENT, 0 ms]
        (22) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(y, f(x, f(a, x))) -> f(f(a, f(x, a)), f(a, y))
   f(x, f(x, y)) -> f(f(f(x, a), a), a)

Q is empty.

----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(y, f(x, f(a, x))) -> F(f(a, f(x, a)), f(a, y))
   F(y, f(x, f(a, x))) -> F(a, f(x, a))
   F(y, f(x, f(a, x))) -> F(x, a)
   F(y, f(x, f(a, x))) -> F(a, y)
   F(x, f(x, y)) -> F(f(f(x, a), a), a)
   F(x, f(x, y)) -> F(f(x, a), a)
   F(x, f(x, y)) -> F(x, a)

The TRS R consists of the following rules:

   f(y, f(x, f(a, x))) -> f(f(a, f(x, a)), f(a, y))
   f(x, f(x, y)) -> f(f(f(x, a), a), a)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 5 less nodes.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(y, f(x, f(a, x))) -> F(a, y)
   F(y, f(x, f(a, x))) -> F(f(a, f(x, a)), f(a, y))

The TRS R consists of the following rules:

   f(y, f(x, f(a, x))) -> f(f(a, f(x, a)), f(a, y))
   f(x, f(x, y)) -> f(f(f(x, a), a), a)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) SplitQDPProof (EQUIVALENT)
We show in the first subproof that some pairs and rules can be removed, afterwards, we continue with the remaining DP-Problem

----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(y, f(x, f(a, x))) -> F(a, y)
   F(y, f(x, f(a, x))) -> F(f(a, f(x, a)), f(a, y))

The TRS R consists of the following rules:

   f(y, f(x, f(a, x))) -> f(f(a, f(x, a)), f(a, y))
   f(x, f(x, y)) -> f(f(f(x, a), a), a)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(8) SemLabProof (SOUND)
We found the following model for the rules of the TRSs R and P.
Interpretation over the domain with elements from 0 to 1.
a: 1
f: 0
F: 0
By semantic labelling [SEMLAB] we obtain the following labelled QDP problem.
----------------------------------------

(9)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F.0-0(y, f.0-0(x, f.1-0(a., x))) -> F.1-0(a., y)
   F.0-0(y, f.0-0(x, f.1-0(a., x))) -> F.0-0(f.1-0(a., f.0-1(x, a.)), f.1-0(a., y))
   F.0-0(y, f.1-0(x, f.1-1(a., x))) -> F.0-0(f.1-0(a., f.1-1(x, a.)), f.1-0(a., y))
   F.1-0(y, f.0-0(x, f.1-0(a., x))) -> F.0-0(f.1-0(a., f.0-1(x, a.)), f.1-1(a., y))
   F.1-0(y, f.1-0(x, f.1-1(a., x))) -> F.0-0(f.1-0(a., f.1-1(x, a.)), f.1-1(a., y))
   F.0-0(y, f.1-0(x, f.1-1(a., x))) -> F.1-0(a., y)
   F.1-0(y, f.0-0(x, f.1-0(a., x))) -> F.1-1(a., y)
   F.1-0(y, f.1-0(x, f.1-1(a., x))) -> F.1-1(a., y)

The TRS R consists of the following rules:

   f.0-0(y, f.0-0(x, f.1-0(a., x))) -> f.0-0(f.1-0(a., f.0-1(x, a.)), f.1-0(a., y))
   f.0-0(y, f.1-0(x, f.1-1(a., x))) -> f.0-0(f.1-0(a., f.1-1(x, a.)), f.1-0(a., y))
   f.1-0(y, f.0-0(x, f.1-0(a., x))) -> f.0-0(f.1-0(a., f.0-1(x, a.)), f.1-1(a., y))
   f.1-0(y, f.1-0(x, f.1-1(a., x))) -> f.0-0(f.1-0(a., f.1-1(x, a.)), f.1-1(a., y))
   f.0-0(x, f.0-0(x, y)) -> f.0-1(f.0-1(f.0-1(x, a.), a.), a.)
   f.0-0(x, f.0-1(x, y)) -> f.0-1(f.0-1(f.0-1(x, a.), a.), a.)
   f.1-0(x, f.1-0(x, y)) -> f.0-1(f.0-1(f.1-1(x, a.), a.), a.)
   f.1-0(x, f.1-1(x, y)) -> f.0-1(f.0-1(f.1-1(x, a.), a.), a.)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(10) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 6 less nodes.
----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F.0-0(y, f.0-0(x, f.1-0(a., x))) -> F.0-0(f.1-0(a., f.0-1(x, a.)), f.1-0(a., y))
   F.0-0(y, f.1-0(x, f.1-1(a., x))) -> F.0-0(f.1-0(a., f.1-1(x, a.)), f.1-0(a., y))

The TRS R consists of the following rules:

   f.0-0(y, f.0-0(x, f.1-0(a., x))) -> f.0-0(f.1-0(a., f.0-1(x, a.)), f.1-0(a., y))
   f.0-0(y, f.1-0(x, f.1-1(a., x))) -> f.0-0(f.1-0(a., f.1-1(x, a.)), f.1-0(a., y))
   f.1-0(y, f.0-0(x, f.1-0(a., x))) -> f.0-0(f.1-0(a., f.0-1(x, a.)), f.1-1(a., y))
   f.1-0(y, f.1-0(x, f.1-1(a., x))) -> f.0-0(f.1-0(a., f.1-1(x, a.)), f.1-1(a., y))
   f.0-0(x, f.0-0(x, y)) -> f.0-1(f.0-1(f.0-1(x, a.), a.), a.)
   f.0-0(x, f.0-1(x, y)) -> f.0-1(f.0-1(f.0-1(x, a.), a.), a.)
   f.1-0(x, f.1-0(x, y)) -> f.0-1(f.0-1(f.1-1(x, a.), a.), a.)
   f.1-0(x, f.1-1(x, y)) -> f.0-1(f.0-1(f.1-1(x, a.), a.), a.)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(12) UsableRulesReductionPairsProof (EQUIVALENT)
By using the usable rules with reduction pair processor [LPAR04] with a polynomial ordering [POLO], all dependency pairs and the corresponding usable rules [FROCOS05] can be oriented non-strictly. All non-usable rules are removed, and those dependency pairs and usable rules that have been oriented strictly or contain non-usable symbols in their left-hand side are removed as well.

No dependency pairs are removed.

The following rules are removed from R:

   f.0-0(y, f.0-0(x, f.1-0(a., x))) -> f.0-0(f.1-0(a., f.0-1(x, a.)), f.1-0(a., y))
   f.0-0(y, f.1-0(x, f.1-1(a., x))) -> f.0-0(f.1-0(a., f.1-1(x, a.)), f.1-0(a., y))
   f.0-0(x, f.0-0(x, y)) -> f.0-1(f.0-1(f.0-1(x, a.), a.), a.)
   f.0-0(x, f.0-1(x, y)) -> f.0-1(f.0-1(f.0-1(x, a.), a.), a.)
Used ordering: POLO with Polynomial interpretation [POLO]:

   POL(F.0-0(x_1, x_2)) = x_1 + x_2
   POL(a.) = 0
   POL(f.0-0(x_1, x_2)) = x_1 + x_2
   POL(f.0-1(x_1, x_2)) = x_1 + x_2
   POL(f.1-0(x_1, x_2)) = x_1 + x_2
   POL(f.1-1(x_1, x_2)) = x_1 + x_2


----------------------------------------

(13)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F.0-0(y, f.0-0(x, f.1-0(a., x))) -> F.0-0(f.1-0(a., f.0-1(x, a.)), f.1-0(a., y))
   F.0-0(y, f.1-0(x, f.1-1(a., x))) -> F.0-0(f.1-0(a., f.1-1(x, a.)), f.1-0(a., y))

The TRS R consists of the following rules:

   f.1-0(x, f.1-1(x, y)) -> f.0-1(f.0-1(f.1-1(x, a.), a.), a.)
   f.1-0(y, f.0-0(x, f.1-0(a., x))) -> f.0-0(f.1-0(a., f.0-1(x, a.)), f.1-1(a., y))
   f.1-0(y, f.1-0(x, f.1-1(a., x))) -> f.0-0(f.1-0(a., f.1-1(x, a.)), f.1-1(a., y))
   f.1-0(x, f.1-0(x, y)) -> f.0-1(f.0-1(f.1-1(x, a.), a.), a.)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(14) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(15)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F.0-0(y, f.1-0(x, f.1-1(a., x))) -> F.0-0(f.1-0(a., f.1-1(x, a.)), f.1-0(a., y))

The TRS R consists of the following rules:

   f.1-0(x, f.1-1(x, y)) -> f.0-1(f.0-1(f.1-1(x, a.), a.), a.)
   f.1-0(y, f.0-0(x, f.1-0(a., x))) -> f.0-0(f.1-0(a., f.0-1(x, a.)), f.1-1(a., y))
   f.1-0(y, f.1-0(x, f.1-1(a., x))) -> f.0-0(f.1-0(a., f.1-1(x, a.)), f.1-1(a., y))
   f.1-0(x, f.1-0(x, y)) -> f.0-1(f.0-1(f.1-1(x, a.), a.), a.)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(16) PisEmptyProof (SOUND)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(17)
TRUE

----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(y, f(x, f(a, x))) -> F(f(a, f(x, a)), f(a, y))

The TRS R consists of the following rules:

   f(x, f(x, y)) -> f(f(f(x, a), a), a)
   f(y, f(x, f(a, x))) -> f(f(a, f(x, a)), f(a, y))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) QDPBoundsTAProof (EQUIVALENT)
The DP-Problem (P, R) could be shown to be Match-(raise-)DP-Bounded [TAB_NONLEFTLINEAR] by 0 for the Rule: 
   F(y, f(x, f(a, x))) -> F(f(a, f(x, a)), f(a, y))
by considering the usable rules: 

   f(x, f(x, y)) -> f(f(f(x, a), a), a)
   f(y, f(x, f(a, x))) -> f(f(a, f(x, a)), f(a, y))

The compatible tree automaton used to show the Match-(raise-)DP-Boundedness is represented by: 
final states : [0]
transitions: 
a0() -> 29
#0() -> 16
f0(4, 5) -> 17
f0(2, 3) -> 18
f0(2, 7) -> 6
F0(1, 6) -> 0
f0(2, 5) -> 19
f0(9, 5) -> 8
f0(8, 5) -> 20
f0(10, 5) -> 8
f0(2, 2) -> 12
f0(11, 12) -> 21
f0(2, 13) -> 18
f0(2, 1) -> 14
F0(1, 14) -> 0
f0(11, 5) -> 19
f0(5, 5) -> 19
f0(3, 5) -> 19
f0(13, 5) -> 19
f0(15, 3) -> 18
f0(15, 7) -> 6
f0(15, 5) -> 19
f0(15, 2) -> 12
f0(15, 13) -> 18
f0(15, 1) -> 14
f0(4, 15) -> 17
f0(2, 15) -> 22
f0(9, 15) -> 8
f0(8, 15) -> 20
f0(10, 15) -> 8
f0(11, 15) -> 19
f0(5, 15) -> 19
f0(3, 15) -> 19
f0(13, 15) -> 19
f0(16, 5) -> 17
f0(2, 16) -> 6
f0(17, 5) -> 23
f0(2, 17) -> 18
f0(18, 12) -> 21
f0(18, 5) -> 19
f0(2, 18) -> 14
f0(19, 5) -> 23
f0(2, 19) -> 18
f0(20, 5) -> 23
f0(20, 12) -> 21
f0(2, 20) -> 14
f0(15, 15) -> 22
f0(15, 16) -> 6
f0(15, 17) -> 18
f0(15, 18) -> 14
f0(15, 19) -> 18
f0(15, 20) -> 14
f0(16, 15) -> 17
f0(17, 15) -> 23
f0(18, 15) -> 19
f0(19, 15) -> 23
f0(20, 15) -> 23
F0(18, 6) -> 0
F0(18, 14) -> 0
F0(20, 6) -> 0
F0(20, 14) -> 0
F0(1, 20) -> 0
F0(1, 21) -> 0
F0(18, 20) -> 0
F0(18, 21) -> 0
F0(20, 20) -> 0
F0(20, 21) -> 0
f0(22, 5) -> 23
f0(11, 22) -> 21
f0(2, 22) -> 18
f0(23, 5) -> 24
f0(2, 23) -> 18
f0(24, 5) -> 24
f0(24, 12) -> 21
f0(2, 24) -> 25
F0(24, 6) -> 0
F0(24, 14) -> 0
F0(1, 24) -> 0
F0(24, 24) -> 0
f0(25, 12) -> 21
f0(25, 5) -> 19
f0(2, 25) -> 14
F0(25, 6) -> 0
F0(25, 14) -> 0
F0(1, 25) -> 0
F0(25, 25) -> 0
f0(15, 28) -> 27
f0(27, 28) -> 26
f0(26, 28) -> 14
f0(29, 3) -> 18
f0(29, 7) -> 6
f0(29, 5) -> 19
f0(29, 2) -> 12
f0(29, 13) -> 18
f0(29, 1) -> 14
f0(29, 15) -> 22
f0(29, 16) -> 6
f0(29, 17) -> 18
f0(29, 18) -> 14
f0(29, 19) -> 18
f0(29, 20) -> 14
f0(29, 22) -> 18
f0(29, 23) -> 18
f0(29, 24) -> 25
f0(29, 25) -> 14
f0(29, 28) -> 27
f0(4, 29) -> 17
f0(2, 29) -> 22
f0(9, 29) -> 8
f0(8, 29) -> 20
f0(10, 29) -> 8
f0(11, 29) -> 19
f0(5, 29) -> 19
f0(3, 29) -> 19
f0(13, 29) -> 19
f0(15, 29) -> 30
f0(16, 29) -> 17
f0(17, 29) -> 23
f0(18, 29) -> 19
f0(19, 29) -> 23
f0(20, 29) -> 23
f0(22, 29) -> 23
f0(23, 29) -> 24
f0(24, 29) -> 24
f0(25, 29) -> 19
f0(27, 29) -> 26
f0(26, 29) -> 14
f0(18, 22) -> 21
f0(20, 22) -> 21
f0(22, 15) -> 23
f0(15, 22) -> 18
f0(24, 22) -> 21
f0(25, 22) -> 21
f0(23, 15) -> 24
f0(15, 23) -> 18
f0(24, 15) -> 24
f0(15, 24) -> 25
f0(25, 15) -> 19
f0(15, 25) -> 14
f0(29, 29) -> 30
f0(20, 5) -> 19
f0(20, 15) -> 19
f0(23, 5) -> 23
f0(23, 15) -> 23
f0(20, 29) -> 19
f0(23, 29) -> 23
f0(24, 5) -> 23
f0(24, 15) -> 23
f0(24, 29) -> 23
f0(24, 5) -> 19
f0(24, 15) -> 19
f0(2, 24) -> 14
f0(15, 24) -> 14
f0(29, 24) -> 14
f0(24, 29) -> 19
F0(18, 24) -> 0
F0(18, 25) -> 0
F0(20, 24) -> 0
F0(20, 25) -> 0
F0(24, 20) -> 0
F0(25, 20) -> 0
F0(24, 21) -> 0
F0(25, 21) -> 0
F0(24, 25) -> 0
F0(25, 24) -> 0
f0(30, 5) -> 23
f0(30, 15) -> 23
f0(30, 28) -> 26
f0(11, 30) -> 21
f0(2, 30) -> 18
f0(15, 30) -> 18
f0(18, 30) -> 21
f0(20, 30) -> 21
f0(24, 30) -> 21
f0(25, 30) -> 21

----------------------------------------

(20)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   f(x, f(x, y)) -> f(f(f(x, a), a), a)
   f(y, f(x, f(a, x))) -> f(f(a, f(x, a)), f(a, y))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(21) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(22)
YES
