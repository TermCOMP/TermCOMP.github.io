YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/urCk2.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRSRRRProof [EQUIVALENT, 12 ms]
(2) QTRS
(3) RisEmptyProof [EQUIVALENT, 0 ms]
(4) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   and(tt, X) -> activate(X)
   plus(N, 0) -> N
   plus(N, s(M)) -> s(plus(N, M))
   x(N, 0) -> 0
   x(N, s(M)) -> plus(x(N, M), N)
   activate(X) -> X

Q is empty.

----------------------------------------

(1) QTRSRRRProof (EQUIVALENT)
Used ordering:
Quasi precedence:
and_2 > [activate_1, 0, s_1]
tt > [activate_1, 0, s_1]
x_2 > plus_2 > [activate_1, 0, s_1]


Status:
and_2: multiset status
tt: multiset status
activate_1: multiset status
plus_2: [1,2]
0: multiset status
s_1: multiset status
x_2: multiset status

With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   and(tt, X) -> activate(X)
   plus(N, 0) -> N
   plus(N, s(M)) -> s(plus(N, M))
   x(N, 0) -> 0
   x(N, s(M)) -> plus(x(N, M), N)
   activate(X) -> X




----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
R is empty.
Q is empty.

----------------------------------------

(3) RisEmptyProof (EQUIVALENT)
The TRS R is empty. Hence, termination is trivially proven.
----------------------------------------

(4)
YES
