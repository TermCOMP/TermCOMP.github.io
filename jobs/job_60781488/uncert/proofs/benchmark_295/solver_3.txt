YES

Problem 1: 

(VAR vu95NonEmpty x)
(RULES
cond1(ftrue,x) -> cond2(even(x),x)
cond2(ffalse,x) -> cond1(neq(x,num0),p(x))
cond2(ftrue,x) -> cond1(neq(x,num0),div2(x))
div2(num0) -> num0
div2(s(num0)) -> num0
div2(s(s(x))) -> s(div2(x))
even(num0) -> ftrue
even(s(num0)) -> ffalse
even(s(s(x))) -> even(x)
neq(num0,num0) -> ffalse
neq(num0,s(x)) -> ftrue
neq(s(x),num0) -> ftrue
neq(s(x),s(y)) -> neq(x,y)
p(num0) -> num0
p(s(x)) -> x
)


Problem 1: 

Innermost Equivalent Processor:
-> Rules:
 cond1(ftrue,x) -> cond2(even(x),x)
 cond2(ffalse,x) -> cond1(neq(x,num0),p(x))
 cond2(ftrue,x) -> cond1(neq(x,num0),div2(x))
 div2(num0) -> num0
 div2(s(num0)) -> num0
 div2(s(s(x))) -> s(div2(x))
 even(num0) -> ftrue
 even(s(num0)) -> ffalse
 even(s(s(x))) -> even(x)
 neq(num0,num0) -> ffalse
 neq(num0,s(x)) -> ftrue
 neq(s(x),num0) -> ftrue
 neq(s(x),s(y)) -> neq(x,y)
 p(num0) -> num0
 p(s(x)) -> x
-> The term rewriting system is non-overlaping or locally confluent overlay system. Therefore, innermost termination implies termination.
 

Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 COND1(ftrue,x) -> COND2(even(x),x)
 COND1(ftrue,x) -> EVEN(x)
 COND2(ffalse,x) -> COND1(neq(x,num0),p(x))
 COND2(ffalse,x) -> NEQ(x,num0)
 COND2(ffalse,x) -> P(x)
 COND2(ftrue,x) -> COND1(neq(x,num0),div2(x))
 COND2(ftrue,x) -> DIV2(x)
 COND2(ftrue,x) -> NEQ(x,num0)
 DIV2(s(s(x))) -> DIV2(x)
 EVEN(s(s(x))) -> EVEN(x)
-> Rules:
 cond1(ftrue,x) -> cond2(even(x),x)
 cond2(ffalse,x) -> cond1(neq(x,num0),p(x))
 cond2(ftrue,x) -> cond1(neq(x,num0),div2(x))
 div2(num0) -> num0
 div2(s(num0)) -> num0
 div2(s(s(x))) -> s(div2(x))
 even(num0) -> ftrue
 even(s(num0)) -> ffalse
 even(s(s(x))) -> even(x)
 neq(num0,num0) -> ffalse
 neq(num0,s(x)) -> ftrue
 neq(s(x),num0) -> ftrue
 neq(s(x),s(y)) -> neq(x,y)
 p(num0) -> num0
 p(s(x)) -> x

Problem 1: 

SCC Processor:
-> Pairs:
 COND1(ftrue,x) -> COND2(even(x),x)
 COND1(ftrue,x) -> EVEN(x)
 COND2(ffalse,x) -> COND1(neq(x,num0),p(x))
 COND2(ffalse,x) -> NEQ(x,num0)
 COND2(ffalse,x) -> P(x)
 COND2(ftrue,x) -> COND1(neq(x,num0),div2(x))
 COND2(ftrue,x) -> DIV2(x)
 COND2(ftrue,x) -> NEQ(x,num0)
 DIV2(s(s(x))) -> DIV2(x)
 EVEN(s(s(x))) -> EVEN(x)
-> Rules:
 cond1(ftrue,x) -> cond2(even(x),x)
 cond2(ffalse,x) -> cond1(neq(x,num0),p(x))
 cond2(ftrue,x) -> cond1(neq(x,num0),div2(x))
 div2(num0) -> num0
 div2(s(num0)) -> num0
 div2(s(s(x))) -> s(div2(x))
 even(num0) -> ftrue
 even(s(num0)) -> ffalse
 even(s(s(x))) -> even(x)
 neq(num0,num0) -> ffalse
 neq(num0,s(x)) -> ftrue
 neq(s(x),num0) -> ftrue
 neq(s(x),s(y)) -> neq(x,y)
 p(num0) -> num0
 p(s(x)) -> x
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 EVEN(s(s(x))) -> EVEN(x)
->->-> Rules:
 cond1(ftrue,x) -> cond2(even(x),x)
 cond2(ffalse,x) -> cond1(neq(x,num0),p(x))
 cond2(ftrue,x) -> cond1(neq(x,num0),div2(x))
 div2(num0) -> num0
 div2(s(num0)) -> num0
 div2(s(s(x))) -> s(div2(x))
 even(num0) -> ftrue
 even(s(num0)) -> ffalse
 even(s(s(x))) -> even(x)
 neq(num0,num0) -> ffalse
 neq(num0,s(x)) -> ftrue
 neq(s(x),num0) -> ftrue
 neq(s(x),s(y)) -> neq(x,y)
 p(num0) -> num0
 p(s(x)) -> x
->->Cycle:
->->-> Pairs:
 DIV2(s(s(x))) -> DIV2(x)
->->-> Rules:
 cond1(ftrue,x) -> cond2(even(x),x)
 cond2(ffalse,x) -> cond1(neq(x,num0),p(x))
 cond2(ftrue,x) -> cond1(neq(x,num0),div2(x))
 div2(num0) -> num0
 div2(s(num0)) -> num0
 div2(s(s(x))) -> s(div2(x))
 even(num0) -> ftrue
 even(s(num0)) -> ffalse
 even(s(s(x))) -> even(x)
 neq(num0,num0) -> ffalse
 neq(num0,s(x)) -> ftrue
 neq(s(x),num0) -> ftrue
 neq(s(x),s(y)) -> neq(x,y)
 p(num0) -> num0
 p(s(x)) -> x
->->Cycle:
->->-> Pairs:
 COND1(ftrue,x) -> COND2(even(x),x)
 COND2(ffalse,x) -> COND1(neq(x,num0),p(x))
 COND2(ftrue,x) -> COND1(neq(x,num0),div2(x))
->->-> Rules:
 cond1(ftrue,x) -> cond2(even(x),x)
 cond2(ffalse,x) -> cond1(neq(x,num0),p(x))
 cond2(ftrue,x) -> cond1(neq(x,num0),div2(x))
 div2(num0) -> num0
 div2(s(num0)) -> num0
 div2(s(s(x))) -> s(div2(x))
 even(num0) -> ftrue
 even(s(num0)) -> ffalse
 even(s(s(x))) -> even(x)
 neq(num0,num0) -> ffalse
 neq(num0,s(x)) -> ftrue
 neq(s(x),num0) -> ftrue
 neq(s(x),s(y)) -> neq(x,y)
 p(num0) -> num0
 p(s(x)) -> x


The problem is decomposed in 3 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 EVEN(s(s(x))) -> EVEN(x)
-> Rules:
 cond1(ftrue,x) -> cond2(even(x),x)
 cond2(ffalse,x) -> cond1(neq(x,num0),p(x))
 cond2(ftrue,x) -> cond1(neq(x,num0),div2(x))
 div2(num0) -> num0
 div2(s(num0)) -> num0
 div2(s(s(x))) -> s(div2(x))
 even(num0) -> ftrue
 even(s(num0)) -> ffalse
 even(s(s(x))) -> even(x)
 neq(num0,num0) -> ffalse
 neq(num0,s(x)) -> ftrue
 neq(s(x),num0) -> ftrue
 neq(s(x),s(y)) -> neq(x,y)
 p(num0) -> num0
 p(s(x)) -> x
->Projection:
 pi(EVEN) = 1

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 cond1(ftrue,x) -> cond2(even(x),x)
 cond2(ffalse,x) -> cond1(neq(x,num0),p(x))
 cond2(ftrue,x) -> cond1(neq(x,num0),div2(x))
 div2(num0) -> num0
 div2(s(num0)) -> num0
 div2(s(s(x))) -> s(div2(x))
 even(num0) -> ftrue
 even(s(num0)) -> ffalse
 even(s(s(x))) -> even(x)
 neq(num0,num0) -> ffalse
 neq(num0,s(x)) -> ftrue
 neq(s(x),num0) -> ftrue
 neq(s(x),s(y)) -> neq(x,y)
 p(num0) -> num0
 p(s(x)) -> x
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Subterm Processor:
-> Pairs:
 DIV2(s(s(x))) -> DIV2(x)
-> Rules:
 cond1(ftrue,x) -> cond2(even(x),x)
 cond2(ffalse,x) -> cond1(neq(x,num0),p(x))
 cond2(ftrue,x) -> cond1(neq(x,num0),div2(x))
 div2(num0) -> num0
 div2(s(num0)) -> num0
 div2(s(s(x))) -> s(div2(x))
 even(num0) -> ftrue
 even(s(num0)) -> ffalse
 even(s(s(x))) -> even(x)
 neq(num0,num0) -> ffalse
 neq(num0,s(x)) -> ftrue
 neq(s(x),num0) -> ftrue
 neq(s(x),s(y)) -> neq(x,y)
 p(num0) -> num0
 p(s(x)) -> x
->Projection:
 pi(DIV2) = 1

Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 cond1(ftrue,x) -> cond2(even(x),x)
 cond2(ffalse,x) -> cond1(neq(x,num0),p(x))
 cond2(ftrue,x) -> cond1(neq(x,num0),div2(x))
 div2(num0) -> num0
 div2(s(num0)) -> num0
 div2(s(s(x))) -> s(div2(x))
 even(num0) -> ftrue
 even(s(num0)) -> ffalse
 even(s(s(x))) -> even(x)
 neq(num0,num0) -> ffalse
 neq(num0,s(x)) -> ftrue
 neq(s(x),num0) -> ftrue
 neq(s(x),s(y)) -> neq(x,y)
 p(num0) -> num0
 p(s(x)) -> x
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Reduction Pairs Processor:
-> Pairs:
 COND1(ftrue,x) -> COND2(even(x),x)
 COND2(ffalse,x) -> COND1(neq(x,num0),p(x))
 COND2(ftrue,x) -> COND1(neq(x,num0),div2(x))
-> Rules:
 cond1(ftrue,x) -> cond2(even(x),x)
 cond2(ffalse,x) -> cond1(neq(x,num0),p(x))
 cond2(ftrue,x) -> cond1(neq(x,num0),div2(x))
 div2(num0) -> num0
 div2(s(num0)) -> num0
 div2(s(s(x))) -> s(div2(x))
 even(num0) -> ftrue
 even(s(num0)) -> ffalse
 even(s(s(x))) -> even(x)
 neq(num0,num0) -> ffalse
 neq(num0,s(x)) -> ftrue
 neq(s(x),num0) -> ftrue
 neq(s(x),s(y)) -> neq(x,y)
 p(num0) -> num0
 p(s(x)) -> x
-> Usable rules:
 div2(num0) -> num0
 div2(s(num0)) -> num0
 div2(s(s(x))) -> s(div2(x))
 even(num0) -> ftrue
 even(s(num0)) -> ffalse
 even(s(s(x))) -> even(x)
 neq(num0,num0) -> ffalse
 neq(num0,s(x)) -> ftrue
 neq(s(x),num0) -> ftrue
 neq(s(x),s(y)) -> neq(x,y)
 p(num0) -> num0
 p(s(x)) -> x
->Interpretation type:
 Linear
->Coefficients:
 All rationals
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[cond1](X1,X2) = 0
[cond2](X1,X2) = 0
[div2](X) = 1/2.X
[even](X) = 1/2
[neq](X1,X2) = 1/2.X1 + X2
[p](X) = 1/2.X
[num0] = 0
[fSNonEmpty] = 0
[ffalse] = 0
[s](X) = 2.X + 2
[ftrue] = 1/2
[y] = 1/2
[COND1](X1,X2) = 2.X1 + 2.X2
[COND2](X1,X2) = X1 + 2.X2
[DIV2](X) = 0
[EVEN](X) = 0
[NEQ](X1,X2) = 0
[P](X) = 0

Problem 1.3: 

SCC Processor:
-> Pairs:
 COND2(ffalse,x) -> COND1(neq(x,num0),p(x))
 COND2(ftrue,x) -> COND1(neq(x,num0),div2(x))
-> Rules:
 cond1(ftrue,x) -> cond2(even(x),x)
 cond2(ffalse,x) -> cond1(neq(x,num0),p(x))
 cond2(ftrue,x) -> cond1(neq(x,num0),div2(x))
 div2(num0) -> num0
 div2(s(num0)) -> num0
 div2(s(s(x))) -> s(div2(x))
 even(num0) -> ftrue
 even(s(num0)) -> ffalse
 even(s(s(x))) -> even(x)
 neq(num0,num0) -> ffalse
 neq(num0,s(x)) -> ftrue
 neq(s(x),num0) -> ftrue
 neq(s(x),s(y)) -> neq(x,y)
 p(num0) -> num0
 p(s(x)) -> x
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
