YES

Problem 1: 

(VAR vu95NonEmpty x y)
(RULES
f(num0,y) -> num0
f(s(x),y) -> f(f(x,y),y)
)


Problem 1: 

Innermost Equivalent Processor:
-> Rules:
 f(num0,y) -> num0
 f(s(x),y) -> f(f(x,y),y)
-> The term rewriting system is non-overlaping or locally confluent overlay system. Therefore, innermost termination implies termination.
 

Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 F(s(x),y) -> F(f(x,y),y)
 F(s(x),y) -> F(x,y)
-> Rules:
 f(num0,y) -> num0
 f(s(x),y) -> f(f(x,y),y)

Problem 1: 

SCC Processor:
-> Pairs:
 F(s(x),y) -> F(f(x,y),y)
 F(s(x),y) -> F(x,y)
-> Rules:
 f(num0,y) -> num0
 f(s(x),y) -> f(f(x,y),y)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 F(s(x),y) -> F(f(x,y),y)
 F(s(x),y) -> F(x,y)
->->-> Rules:
 f(num0,y) -> num0
 f(s(x),y) -> f(f(x,y),y)

Problem 1: 

Reduction Pairs Processor:
-> Pairs:
 F(s(x),y) -> F(f(x,y),y)
 F(s(x),y) -> F(x,y)
-> Rules:
 f(num0,y) -> num0
 f(s(x),y) -> f(f(x,y),y)
-> Usable rules:
 f(num0,y) -> num0
 f(s(x),y) -> f(f(x,y),y)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[f](X1,X2) = 2.X1
[num0] = 2
[fSNonEmpty] = 0
[s](X) = 2.X + 2
[F](X1,X2) = 2.X1

Problem 1: 

SCC Processor:
-> Pairs:
 F(s(x),y) -> F(x,y)
-> Rules:
 f(num0,y) -> num0
 f(s(x),y) -> f(f(x,y),y)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 F(s(x),y) -> F(x,y)
->->-> Rules:
 f(num0,y) -> num0
 f(s(x),y) -> f(f(x,y),y)

Problem 1: 

Subterm Processor:
-> Pairs:
 F(s(x),y) -> F(x,y)
-> Rules:
 f(num0,y) -> num0
 f(s(x),y) -> f(f(x,y),y)
->Projection:
 pi(F) = 1

Problem 1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 f(num0,y) -> num0
 f(s(x),y) -> f(f(x,y),y)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
