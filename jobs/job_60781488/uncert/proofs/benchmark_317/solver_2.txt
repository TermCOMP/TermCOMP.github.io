YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/4T2m0.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) AAECC Innermost [EQUIVALENT, 0 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 0 ms]
(4) QDP
(5) DependencyGraphProof [EQUIVALENT, 0 ms]
(6) AND
    (7) QDP
        (8) UsableRulesProof [EQUIVALENT, 0 ms]
        (9) QDP
        (10) QReductionProof [EQUIVALENT, 0 ms]
        (11) QDP
        (12) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (13) YES
    (14) QDP
        (15) UsableRulesProof [EQUIVALENT, 0 ms]
        (16) QDP
        (17) QReductionProof [EQUIVALENT, 0 ms]
        (18) QDP
        (19) TransformationProof [EQUIVALENT, 0 ms]
        (20) QDP
        (21) TransformationProof [EQUIVALENT, 0 ms]
        (22) QDP
        (23) DependencyGraphProof [EQUIVALENT, 0 ms]
        (24) QDP
        (25) TransformationProof [EQUIVALENT, 0 ms]
        (26) QDP
        (27) TransformationProof [EQUIVALENT, 0 ms]
        (28) QDP
        (29) DependencyGraphProof [EQUIVALENT, 0 ms]
        (30) QDP
        (31) TransformationProof [EQUIVALENT, 0 ms]
        (32) QDP
        (33) TransformationProof [EQUIVALENT, 0 ms]
        (34) QDP
        (35) DependencyGraphProof [EQUIVALENT, 0 ms]
        (36) QDP
        (37) UsableRulesProof [EQUIVALENT, 0 ms]
        (38) QDP
        (39) TransformationProof [EQUIVALENT, 0 ms]
        (40) QDP
        (41) TransformationProof [EQUIVALENT, 0 ms]
        (42) QDP
        (43) TransformationProof [EQUIVALENT, 0 ms]
        (44) QDP
        (45) DependencyGraphProof [EQUIVALENT, 0 ms]
        (46) QDP
        (47) UsableRulesProof [EQUIVALENT, 0 ms]
        (48) QDP
        (49) QReductionProof [EQUIVALENT, 0 ms]
        (50) QDP
        (51) TransformationProof [EQUIVALENT, 0 ms]
        (52) QDP
        (53) UsableRulesProof [EQUIVALENT, 0 ms]
        (54) QDP
        (55) QReductionProof [EQUIVALENT, 0 ms]
        (56) QDP
        (57) TransformationProof [EQUIVALENT, 0 ms]
        (58) QDP
        (59) UsableRulesProof [EQUIVALENT, 0 ms]
        (60) QDP
        (61) QReductionProof [EQUIVALENT, 0 ms]
        (62) QDP
        (63) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (64) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   cond(true, x, y) -> cond(and(gr(x, 0), gr(y, 0)), p(x), p(y))
   and(true, true) -> true
   and(x, false) -> false
   and(false, x) -> false
   gr(0, 0) -> false
   gr(0, x) -> false
   gr(s(x), 0) -> true
   gr(s(x), s(y)) -> gr(x, y)
   p(0) -> 0
   p(s(x)) -> x

Q is empty.

----------------------------------------

(1) AAECC Innermost (EQUIVALENT)
We have applied [NOC,AAECCNOC] to switch to innermost. The TRS R 1 is 
   and(true, true) -> true
   and(x, false) -> false
   and(false, x) -> false
   gr(0, 0) -> false
   gr(0, x) -> false
   gr(s(x), 0) -> true
   gr(s(x), s(y)) -> gr(x, y)
   p(0) -> 0
   p(s(x)) -> x

The TRS R 2 is 
   cond(true, x, y) -> cond(and(gr(x, 0), gr(y, 0)), p(x), p(y))

The signature Sigma is {cond_3}
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   cond(true, x, y) -> cond(and(gr(x, 0), gr(y, 0)), p(x), p(y))
   and(true, true) -> true
   and(x, false) -> false
   and(false, x) -> false
   gr(0, 0) -> false
   gr(0, x) -> false
   gr(s(x), 0) -> true
   gr(s(x), s(y)) -> gr(x, y)
   p(0) -> 0
   p(s(x)) -> x

The set Q consists of the following terms:

   cond(true, x0, x1)
   and(true, true)
   and(x0, false)
   and(false, x0)
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))


----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND(true, x, y) -> COND(and(gr(x, 0), gr(y, 0)), p(x), p(y))
   COND(true, x, y) -> AND(gr(x, 0), gr(y, 0))
   COND(true, x, y) -> GR(x, 0)
   COND(true, x, y) -> GR(y, 0)
   COND(true, x, y) -> P(x)
   COND(true, x, y) -> P(y)
   GR(s(x), s(y)) -> GR(x, y)

The TRS R consists of the following rules:

   cond(true, x, y) -> cond(and(gr(x, 0), gr(y, 0)), p(x), p(y))
   and(true, true) -> true
   and(x, false) -> false
   and(false, x) -> false
   gr(0, 0) -> false
   gr(0, x) -> false
   gr(s(x), 0) -> true
   gr(s(x), s(y)) -> gr(x, y)
   p(0) -> 0
   p(s(x)) -> x

The set Q consists of the following terms:

   cond(true, x0, x1)
   and(true, true)
   and(x0, false)
   and(false, x0)
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs with 5 less nodes.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   GR(s(x), s(y)) -> GR(x, y)

The TRS R consists of the following rules:

   cond(true, x, y) -> cond(and(gr(x, 0), gr(y, 0)), p(x), p(y))
   and(true, true) -> true
   and(x, false) -> false
   and(false, x) -> false
   gr(0, 0) -> false
   gr(0, x) -> false
   gr(s(x), 0) -> true
   gr(s(x), s(y)) -> gr(x, y)
   p(0) -> 0
   p(s(x)) -> x

The set Q consists of the following terms:

   cond(true, x0, x1)
   and(true, true)
   and(x0, false)
   and(false, x0)
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(8) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(9)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   GR(s(x), s(y)) -> GR(x, y)

R is empty.
The set Q consists of the following terms:

   cond(true, x0, x1)
   and(true, true)
   and(x0, false)
   and(false, x0)
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(10) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   cond(true, x0, x1)
   and(true, true)
   and(x0, false)
   and(false, x0)
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))


----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   GR(s(x), s(y)) -> GR(x, y)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(12) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*GR(s(x), s(y)) -> GR(x, y)
The graph contains the following edges 1 > 1, 2 > 2


----------------------------------------

(13)
YES

----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND(true, x, y) -> COND(and(gr(x, 0), gr(y, 0)), p(x), p(y))

The TRS R consists of the following rules:

   cond(true, x, y) -> cond(and(gr(x, 0), gr(y, 0)), p(x), p(y))
   and(true, true) -> true
   and(x, false) -> false
   and(false, x) -> false
   gr(0, 0) -> false
   gr(0, x) -> false
   gr(s(x), 0) -> true
   gr(s(x), s(y)) -> gr(x, y)
   p(0) -> 0
   p(s(x)) -> x

The set Q consists of the following terms:

   cond(true, x0, x1)
   and(true, true)
   and(x0, false)
   and(false, x0)
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND(true, x, y) -> COND(and(gr(x, 0), gr(y, 0)), p(x), p(y))

The TRS R consists of the following rules:

   gr(0, 0) -> false
   gr(0, x) -> false
   gr(s(x), 0) -> true
   and(true, true) -> true
   and(x, false) -> false
   and(false, x) -> false
   p(0) -> 0
   p(s(x)) -> x

The set Q consists of the following terms:

   cond(true, x0, x1)
   and(true, true)
   and(x0, false)
   and(false, x0)
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   cond(true, x0, x1)


----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND(true, x, y) -> COND(and(gr(x, 0), gr(y, 0)), p(x), p(y))

The TRS R consists of the following rules:

   gr(0, 0) -> false
   gr(0, x) -> false
   gr(s(x), 0) -> true
   and(true, true) -> true
   and(x, false) -> false
   and(false, x) -> false
   p(0) -> 0
   p(s(x)) -> x

The set Q consists of the following terms:

   and(true, true)
   and(x0, false)
   and(false, x0)
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule COND(true, x, y) -> COND(and(gr(x, 0), gr(y, 0)), p(x), p(y)) at position [0] we obtained the following new rules [LPAR04]:

   (COND(true, 0, y1) -> COND(and(false, gr(y1, 0)), p(0), p(y1)),COND(true, 0, y1) -> COND(and(false, gr(y1, 0)), p(0), p(y1)))
   (COND(true, s(x0), y1) -> COND(and(true, gr(y1, 0)), p(s(x0)), p(y1)),COND(true, s(x0), y1) -> COND(and(true, gr(y1, 0)), p(s(x0)), p(y1)))
   (COND(true, y0, 0) -> COND(and(gr(y0, 0), false), p(y0), p(0)),COND(true, y0, 0) -> COND(and(gr(y0, 0), false), p(y0), p(0)))
   (COND(true, y0, s(x0)) -> COND(and(gr(y0, 0), true), p(y0), p(s(x0))),COND(true, y0, s(x0)) -> COND(and(gr(y0, 0), true), p(y0), p(s(x0))))


----------------------------------------

(20)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND(true, 0, y1) -> COND(and(false, gr(y1, 0)), p(0), p(y1))
   COND(true, s(x0), y1) -> COND(and(true, gr(y1, 0)), p(s(x0)), p(y1))
   COND(true, y0, 0) -> COND(and(gr(y0, 0), false), p(y0), p(0))
   COND(true, y0, s(x0)) -> COND(and(gr(y0, 0), true), p(y0), p(s(x0)))

The TRS R consists of the following rules:

   gr(0, 0) -> false
   gr(0, x) -> false
   gr(s(x), 0) -> true
   and(true, true) -> true
   and(x, false) -> false
   and(false, x) -> false
   p(0) -> 0
   p(s(x)) -> x

The set Q consists of the following terms:

   and(true, true)
   and(x0, false)
   and(false, x0)
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(21) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule COND(true, 0, y1) -> COND(and(false, gr(y1, 0)), p(0), p(y1)) at position [0] we obtained the following new rules [LPAR04]:

   (COND(true, 0, y1) -> COND(false, p(0), p(y1)),COND(true, 0, y1) -> COND(false, p(0), p(y1)))


----------------------------------------

(22)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND(true, s(x0), y1) -> COND(and(true, gr(y1, 0)), p(s(x0)), p(y1))
   COND(true, y0, 0) -> COND(and(gr(y0, 0), false), p(y0), p(0))
   COND(true, y0, s(x0)) -> COND(and(gr(y0, 0), true), p(y0), p(s(x0)))
   COND(true, 0, y1) -> COND(false, p(0), p(y1))

The TRS R consists of the following rules:

   gr(0, 0) -> false
   gr(0, x) -> false
   gr(s(x), 0) -> true
   and(true, true) -> true
   and(x, false) -> false
   and(false, x) -> false
   p(0) -> 0
   p(s(x)) -> x

The set Q consists of the following terms:

   and(true, true)
   and(x0, false)
   and(false, x0)
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(23) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(24)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND(true, s(x0), y1) -> COND(and(true, gr(y1, 0)), p(s(x0)), p(y1))
   COND(true, y0, 0) -> COND(and(gr(y0, 0), false), p(y0), p(0))
   COND(true, y0, s(x0)) -> COND(and(gr(y0, 0), true), p(y0), p(s(x0)))

The TRS R consists of the following rules:

   gr(0, 0) -> false
   gr(0, x) -> false
   gr(s(x), 0) -> true
   and(true, true) -> true
   and(x, false) -> false
   and(false, x) -> false
   p(0) -> 0
   p(s(x)) -> x

The set Q consists of the following terms:

   and(true, true)
   and(x0, false)
   and(false, x0)
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(25) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule COND(true, s(x0), y1) -> COND(and(true, gr(y1, 0)), p(s(x0)), p(y1)) at position [1] we obtained the following new rules [LPAR04]:

   (COND(true, s(x0), y1) -> COND(and(true, gr(y1, 0)), x0, p(y1)),COND(true, s(x0), y1) -> COND(and(true, gr(y1, 0)), x0, p(y1)))


----------------------------------------

(26)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND(true, y0, 0) -> COND(and(gr(y0, 0), false), p(y0), p(0))
   COND(true, y0, s(x0)) -> COND(and(gr(y0, 0), true), p(y0), p(s(x0)))
   COND(true, s(x0), y1) -> COND(and(true, gr(y1, 0)), x0, p(y1))

The TRS R consists of the following rules:

   gr(0, 0) -> false
   gr(0, x) -> false
   gr(s(x), 0) -> true
   and(true, true) -> true
   and(x, false) -> false
   and(false, x) -> false
   p(0) -> 0
   p(s(x)) -> x

The set Q consists of the following terms:

   and(true, true)
   and(x0, false)
   and(false, x0)
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(27) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule COND(true, y0, 0) -> COND(and(gr(y0, 0), false), p(y0), p(0)) at position [0] we obtained the following new rules [LPAR04]:

   (COND(true, y0, 0) -> COND(false, p(y0), p(0)),COND(true, y0, 0) -> COND(false, p(y0), p(0)))


----------------------------------------

(28)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND(true, y0, s(x0)) -> COND(and(gr(y0, 0), true), p(y0), p(s(x0)))
   COND(true, s(x0), y1) -> COND(and(true, gr(y1, 0)), x0, p(y1))
   COND(true, y0, 0) -> COND(false, p(y0), p(0))

The TRS R consists of the following rules:

   gr(0, 0) -> false
   gr(0, x) -> false
   gr(s(x), 0) -> true
   and(true, true) -> true
   and(x, false) -> false
   and(false, x) -> false
   p(0) -> 0
   p(s(x)) -> x

The set Q consists of the following terms:

   and(true, true)
   and(x0, false)
   and(false, x0)
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(29) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(30)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND(true, y0, s(x0)) -> COND(and(gr(y0, 0), true), p(y0), p(s(x0)))
   COND(true, s(x0), y1) -> COND(and(true, gr(y1, 0)), x0, p(y1))

The TRS R consists of the following rules:

   gr(0, 0) -> false
   gr(0, x) -> false
   gr(s(x), 0) -> true
   and(true, true) -> true
   and(x, false) -> false
   and(false, x) -> false
   p(0) -> 0
   p(s(x)) -> x

The set Q consists of the following terms:

   and(true, true)
   and(x0, false)
   and(false, x0)
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(31) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule COND(true, y0, s(x0)) -> COND(and(gr(y0, 0), true), p(y0), p(s(x0))) at position [2] we obtained the following new rules [LPAR04]:

   (COND(true, y0, s(x0)) -> COND(and(gr(y0, 0), true), p(y0), x0),COND(true, y0, s(x0)) -> COND(and(gr(y0, 0), true), p(y0), x0))


----------------------------------------

(32)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND(true, s(x0), y1) -> COND(and(true, gr(y1, 0)), x0, p(y1))
   COND(true, y0, s(x0)) -> COND(and(gr(y0, 0), true), p(y0), x0)

The TRS R consists of the following rules:

   gr(0, 0) -> false
   gr(0, x) -> false
   gr(s(x), 0) -> true
   and(true, true) -> true
   and(x, false) -> false
   and(false, x) -> false
   p(0) -> 0
   p(s(x)) -> x

The set Q consists of the following terms:

   and(true, true)
   and(x0, false)
   and(false, x0)
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(33) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule COND(true, s(x0), y1) -> COND(and(true, gr(y1, 0)), x0, p(y1)) at position [0] we obtained the following new rules [LPAR04]:

   (COND(true, s(y0), 0) -> COND(and(true, false), y0, p(0)),COND(true, s(y0), 0) -> COND(and(true, false), y0, p(0)))
   (COND(true, s(y0), s(x0)) -> COND(and(true, true), y0, p(s(x0))),COND(true, s(y0), s(x0)) -> COND(and(true, true), y0, p(s(x0))))


----------------------------------------

(34)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND(true, y0, s(x0)) -> COND(and(gr(y0, 0), true), p(y0), x0)
   COND(true, s(y0), 0) -> COND(and(true, false), y0, p(0))
   COND(true, s(y0), s(x0)) -> COND(and(true, true), y0, p(s(x0)))

The TRS R consists of the following rules:

   gr(0, 0) -> false
   gr(0, x) -> false
   gr(s(x), 0) -> true
   and(true, true) -> true
   and(x, false) -> false
   and(false, x) -> false
   p(0) -> 0
   p(s(x)) -> x

The set Q consists of the following terms:

   and(true, true)
   and(x0, false)
   and(false, x0)
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(35) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(36)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND(true, y0, s(x0)) -> COND(and(gr(y0, 0), true), p(y0), x0)
   COND(true, s(y0), s(x0)) -> COND(and(true, true), y0, p(s(x0)))

The TRS R consists of the following rules:

   gr(0, 0) -> false
   gr(0, x) -> false
   gr(s(x), 0) -> true
   and(true, true) -> true
   and(x, false) -> false
   and(false, x) -> false
   p(0) -> 0
   p(s(x)) -> x

The set Q consists of the following terms:

   and(true, true)
   and(x0, false)
   and(false, x0)
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(37) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(38)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND(true, y0, s(x0)) -> COND(and(gr(y0, 0), true), p(y0), x0)
   COND(true, s(y0), s(x0)) -> COND(and(true, true), y0, p(s(x0)))

The TRS R consists of the following rules:

   and(true, true) -> true
   p(s(x)) -> x
   gr(0, 0) -> false
   gr(0, x) -> false
   gr(s(x), 0) -> true
   and(false, x) -> false
   p(0) -> 0

The set Q consists of the following terms:

   and(true, true)
   and(x0, false)
   and(false, x0)
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(39) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule COND(true, s(y0), s(x0)) -> COND(and(true, true), y0, p(s(x0))) at position [0] we obtained the following new rules [LPAR04]:

   (COND(true, s(y0), s(x0)) -> COND(true, y0, p(s(x0))),COND(true, s(y0), s(x0)) -> COND(true, y0, p(s(x0))))


----------------------------------------

(40)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND(true, y0, s(x0)) -> COND(and(gr(y0, 0), true), p(y0), x0)
   COND(true, s(y0), s(x0)) -> COND(true, y0, p(s(x0)))

The TRS R consists of the following rules:

   and(true, true) -> true
   p(s(x)) -> x
   gr(0, 0) -> false
   gr(0, x) -> false
   gr(s(x), 0) -> true
   and(false, x) -> false
   p(0) -> 0

The set Q consists of the following terms:

   and(true, true)
   and(x0, false)
   and(false, x0)
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(41) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule COND(true, s(y0), s(x0)) -> COND(true, y0, p(s(x0))) at position [2] we obtained the following new rules [LPAR04]:

   (COND(true, s(y0), s(x0)) -> COND(true, y0, x0),COND(true, s(y0), s(x0)) -> COND(true, y0, x0))


----------------------------------------

(42)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND(true, y0, s(x0)) -> COND(and(gr(y0, 0), true), p(y0), x0)
   COND(true, s(y0), s(x0)) -> COND(true, y0, x0)

The TRS R consists of the following rules:

   and(true, true) -> true
   p(s(x)) -> x
   gr(0, 0) -> false
   gr(0, x) -> false
   gr(s(x), 0) -> true
   and(false, x) -> false
   p(0) -> 0

The set Q consists of the following terms:

   and(true, true)
   and(x0, false)
   and(false, x0)
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(43) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule COND(true, y0, s(x0)) -> COND(and(gr(y0, 0), true), p(y0), x0) at position [0] we obtained the following new rules [LPAR04]:

   (COND(true, 0, s(y1)) -> COND(and(false, true), p(0), y1),COND(true, 0, s(y1)) -> COND(and(false, true), p(0), y1))
   (COND(true, s(x0), s(y1)) -> COND(and(true, true), p(s(x0)), y1),COND(true, s(x0), s(y1)) -> COND(and(true, true), p(s(x0)), y1))


----------------------------------------

(44)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND(true, s(y0), s(x0)) -> COND(true, y0, x0)
   COND(true, 0, s(y1)) -> COND(and(false, true), p(0), y1)
   COND(true, s(x0), s(y1)) -> COND(and(true, true), p(s(x0)), y1)

The TRS R consists of the following rules:

   and(true, true) -> true
   p(s(x)) -> x
   gr(0, 0) -> false
   gr(0, x) -> false
   gr(s(x), 0) -> true
   and(false, x) -> false
   p(0) -> 0

The set Q consists of the following terms:

   and(true, true)
   and(x0, false)
   and(false, x0)
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(45) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(46)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND(true, s(y0), s(x0)) -> COND(true, y0, x0)
   COND(true, s(x0), s(y1)) -> COND(and(true, true), p(s(x0)), y1)

The TRS R consists of the following rules:

   and(true, true) -> true
   p(s(x)) -> x
   gr(0, 0) -> false
   gr(0, x) -> false
   gr(s(x), 0) -> true
   and(false, x) -> false
   p(0) -> 0

The set Q consists of the following terms:

   and(true, true)
   and(x0, false)
   and(false, x0)
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(47) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(48)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND(true, s(y0), s(x0)) -> COND(true, y0, x0)
   COND(true, s(x0), s(y1)) -> COND(and(true, true), p(s(x0)), y1)

The TRS R consists of the following rules:

   and(true, true) -> true
   p(s(x)) -> x

The set Q consists of the following terms:

   and(true, true)
   and(x0, false)
   and(false, x0)
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(49) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))


----------------------------------------

(50)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND(true, s(y0), s(x0)) -> COND(true, y0, x0)
   COND(true, s(x0), s(y1)) -> COND(and(true, true), p(s(x0)), y1)

The TRS R consists of the following rules:

   and(true, true) -> true
   p(s(x)) -> x

The set Q consists of the following terms:

   and(true, true)
   and(x0, false)
   and(false, x0)
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(51) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule COND(true, s(x0), s(y1)) -> COND(and(true, true), p(s(x0)), y1) at position [0] we obtained the following new rules [LPAR04]:

   (COND(true, s(x0), s(y1)) -> COND(true, p(s(x0)), y1),COND(true, s(x0), s(y1)) -> COND(true, p(s(x0)), y1))


----------------------------------------

(52)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND(true, s(y0), s(x0)) -> COND(true, y0, x0)
   COND(true, s(x0), s(y1)) -> COND(true, p(s(x0)), y1)

The TRS R consists of the following rules:

   and(true, true) -> true
   p(s(x)) -> x

The set Q consists of the following terms:

   and(true, true)
   and(x0, false)
   and(false, x0)
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(53) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(54)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND(true, s(y0), s(x0)) -> COND(true, y0, x0)
   COND(true, s(x0), s(y1)) -> COND(true, p(s(x0)), y1)

The TRS R consists of the following rules:

   p(s(x)) -> x

The set Q consists of the following terms:

   and(true, true)
   and(x0, false)
   and(false, x0)
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(55) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   and(true, true)
   and(x0, false)
   and(false, x0)


----------------------------------------

(56)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND(true, s(y0), s(x0)) -> COND(true, y0, x0)
   COND(true, s(x0), s(y1)) -> COND(true, p(s(x0)), y1)

The TRS R consists of the following rules:

   p(s(x)) -> x

The set Q consists of the following terms:

   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(57) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule COND(true, s(x0), s(y1)) -> COND(true, p(s(x0)), y1) at position [1] we obtained the following new rules [LPAR04]:

   (COND(true, s(x0), s(y1)) -> COND(true, x0, y1),COND(true, s(y0), s(x0)) -> COND(true, y0, x0))


----------------------------------------

(58)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND(true, s(y0), s(x0)) -> COND(true, y0, x0)

The TRS R consists of the following rules:

   p(s(x)) -> x

The set Q consists of the following terms:

   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(59) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(60)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND(true, s(y0), s(x0)) -> COND(true, y0, x0)

R is empty.
The set Q consists of the following terms:

   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(61) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   p(0)
   p(s(x0))


----------------------------------------

(62)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND(true, s(y0), s(x0)) -> COND(true, y0, x0)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(63) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*COND(true, s(y0), s(x0)) -> COND(true, y0, x0)
The graph contains the following edges 1 >= 1, 2 > 2, 3 > 3


----------------------------------------

(64)
YES
