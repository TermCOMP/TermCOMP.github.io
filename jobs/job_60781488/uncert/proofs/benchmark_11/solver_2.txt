YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/ICQSW.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) Overlay + Local Confluence [EQUIVALENT, 0 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 0 ms]
(4) QDP
(5) DependencyGraphProof [EQUIVALENT, 0 ms]
(6) QDP
(7) UsableRulesProof [EQUIVALENT, 0 ms]
(8) QDP
(9) MRRProof [EQUIVALENT, 0 ms]
(10) QDP
(11) DependencyGraphProof [EQUIVALENT, 0 ms]
(12) TRUE


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   times(x, plus(y, 1)) -> plus(times(x, plus(y, times(1, 0))), x)
   times(x, 1) -> x
   plus(x, 0) -> x
   times(x, 0) -> 0

Q is empty.

----------------------------------------

(1) Overlay + Local Confluence (EQUIVALENT)
The TRS is overlay and locally confluent. By [NOC] we can switch to innermost.
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   times(x, plus(y, 1)) -> plus(times(x, plus(y, times(1, 0))), x)
   times(x, 1) -> x
   plus(x, 0) -> x
   times(x, 0) -> 0

The set Q consists of the following terms:

   times(x0, plus(x1, 1))
   times(x0, 1)
   plus(x0, 0)
   times(x0, 0)


----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TIMES(x, plus(y, 1)) -> PLUS(times(x, plus(y, times(1, 0))), x)
   TIMES(x, plus(y, 1)) -> TIMES(x, plus(y, times(1, 0)))
   TIMES(x, plus(y, 1)) -> PLUS(y, times(1, 0))
   TIMES(x, plus(y, 1)) -> TIMES(1, 0)

The TRS R consists of the following rules:

   times(x, plus(y, 1)) -> plus(times(x, plus(y, times(1, 0))), x)
   times(x, 1) -> x
   plus(x, 0) -> x
   times(x, 0) -> 0

The set Q consists of the following terms:

   times(x0, plus(x1, 1))
   times(x0, 1)
   plus(x0, 0)
   times(x0, 0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 3 less nodes.
----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TIMES(x, plus(y, 1)) -> TIMES(x, plus(y, times(1, 0)))

The TRS R consists of the following rules:

   times(x, plus(y, 1)) -> plus(times(x, plus(y, times(1, 0))), x)
   times(x, 1) -> x
   plus(x, 0) -> x
   times(x, 0) -> 0

The set Q consists of the following terms:

   times(x0, plus(x1, 1))
   times(x0, 1)
   plus(x0, 0)
   times(x0, 0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TIMES(x, plus(y, 1)) -> TIMES(x, plus(y, times(1, 0)))

The TRS R consists of the following rules:

   times(x, 0) -> 0
   plus(x, 0) -> x

The set Q consists of the following terms:

   times(x0, plus(x1, 1))
   times(x0, 1)
   plus(x0, 0)
   times(x0, 0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) MRRProof (EQUIVALENT)
By using the rule removal processor [LPAR04] with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented.


Strictly oriented rules of the TRS R:

   plus(x, 0) -> x

Used ordering: Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(1) = 0
   POL(TIMES(x_1, x_2)) = x_1 + 2*x_2
   POL(plus(x_1, x_2)) = 1 + x_1 + x_2
   POL(times(x_1, x_2)) = 2*x_1 + x_2


----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TIMES(x, plus(y, 1)) -> TIMES(x, plus(y, times(1, 0)))

The TRS R consists of the following rules:

   times(x, 0) -> 0

The set Q consists of the following terms:

   times(x0, plus(x1, 1))
   times(x0, 1)
   plus(x0, 0)
   times(x0, 0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 1 less node.
----------------------------------------

(12)
TRUE
