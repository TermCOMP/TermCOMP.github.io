YES

Problem 1: 

(VAR vu95NonEmpty x y z)
(RULES
u43(num0(x),num0(y)) -> num0(u43(x,y))
u43(num0(x),num1(y)) -> num1(u43(x,y))
u43(u35,x) -> x
u43(num1(x),num0(y)) -> num1(u43(x,y))
u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
u43(x,u43(y,z)) -> u43(u43(x,y),z)
u43(x,u35) -> x
u45(num0(x),num0(y)) -> num0(u45(x,y))
u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
u45(u35,x) -> u35
u45(num1(x),num0(y)) -> num1(u45(x,y))
u45(num1(x),num1(y)) -> num0(u45(x,y))
u45(x,u35) -> x
num0(u35) -> u35
and(x,ffalse) -> ffalse
and(x,ftrue) -> x
bs(l(x)) -> ftrue
bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
ge(num0(x),num0(y)) -> ge(x,y)
ge(num0(x),num1(y)) -> not(ge(y,x))
ge(u35,num0(x)) -> ge(u35,x)
ge(u35,num1(x)) -> ffalse
ge(num1(x),num0(y)) -> ge(x,y)
ge(num1(x),num1(y)) -> ge(x,y)
ge(x,u35) -> ftrue
if(ffalse,x,y) -> y
if(ftrue,x,y) -> x
max(l(x)) -> x
max(n(x,y,z)) -> max(z)
min(l(x)) -> x
min(n(x,y,z)) -> min(y)
not(ffalse) -> ftrue
not(ftrue) -> ffalse
size(l(x)) -> num1(u35)
size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
val(l(x)) -> x
val(n(x,y,z)) -> x
wb(l(x)) -> ftrue
wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))
)


Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 U43(num0(x),num0(y)) -> U43(x,y)
 U43(num0(x),num0(y)) -> NUM0(u43(x,y))
 U43(num0(x),num1(y)) -> U43(x,y)
 U43(num1(x),num0(y)) -> U43(x,y)
 U43(num1(x),num1(y)) -> U43(u43(x,y),num1(u35))
 U43(num1(x),num1(y)) -> U43(x,y)
 U43(num1(x),num1(y)) -> NUM0(u43(u43(x,y),num1(u35)))
 U43(x,u43(y,z)) -> U43(u43(x,y),z)
 U43(x,u43(y,z)) -> U43(x,y)
 U45(num0(x),num0(y)) -> U45(x,y)
 U45(num0(x),num0(y)) -> NUM0(u45(x,y))
 U45(num0(x),num1(y)) -> U45(u45(x,y),num1(u35))
 U45(num0(x),num1(y)) -> U45(x,y)
 U45(num1(x),num0(y)) -> U45(x,y)
 U45(num1(x),num1(y)) -> U45(x,y)
 U45(num1(x),num1(y)) -> NUM0(u45(x,y))
 BS(n(x,y,z)) -> AND(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 BS(n(x,y,z)) -> AND(bs(y),bs(z))
 BS(n(x,y,z)) -> AND(ge(x,max(y)),ge(min(z),x))
 BS(n(x,y,z)) -> BS(y)
 BS(n(x,y,z)) -> BS(z)
 BS(n(x,y,z)) -> GE(min(z),x)
 BS(n(x,y,z)) -> GE(x,max(y))
 BS(n(x,y,z)) -> MAX(y)
 BS(n(x,y,z)) -> MIN(z)
 GE(num0(x),num0(y)) -> GE(x,y)
 GE(num0(x),num1(y)) -> GE(y,x)
 GE(num0(x),num1(y)) -> NOT(ge(y,x))
 GE(u35,num0(x)) -> GE(u35,x)
 GE(num1(x),num0(y)) -> GE(x,y)
 GE(num1(x),num1(y)) -> GE(x,y)
 MAX(n(x,y,z)) -> MAX(z)
 MIN(n(x,y,z)) -> MIN(y)
 SIZE(n(x,y,z)) -> U43(u43(size(x),size(y)),num1(u35))
 SIZE(n(x,y,z)) -> U43(size(x),size(y))
 SIZE(n(x,y,z)) -> SIZE(x)
 SIZE(n(x,y,z)) -> SIZE(y)
 WB(n(x,y,z)) -> U45(size(y),size(z))
 WB(n(x,y,z)) -> U45(size(z),size(y))
 WB(n(x,y,z)) -> AND(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))
 WB(n(x,y,z)) -> AND(wb(y),wb(z))
 WB(n(x,y,z)) -> GE(size(y),size(z))
 WB(n(x,y,z)) -> GE(num1(u35),u45(size(y),size(z)))
 WB(n(x,y,z)) -> GE(num1(u35),u45(size(z),size(y)))
 WB(n(x,y,z)) -> IF(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y))))
 WB(n(x,y,z)) -> SIZE(y)
 WB(n(x,y,z)) -> SIZE(z)
 WB(n(x,y,z)) -> WB(y)
 WB(n(x,y,z)) -> WB(z)
-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))

Problem 1: 

SCC Processor:
-> Pairs:
 U43(num0(x),num0(y)) -> U43(x,y)
 U43(num0(x),num0(y)) -> NUM0(u43(x,y))
 U43(num0(x),num1(y)) -> U43(x,y)
 U43(num1(x),num0(y)) -> U43(x,y)
 U43(num1(x),num1(y)) -> U43(u43(x,y),num1(u35))
 U43(num1(x),num1(y)) -> U43(x,y)
 U43(num1(x),num1(y)) -> NUM0(u43(u43(x,y),num1(u35)))
 U43(x,u43(y,z)) -> U43(u43(x,y),z)
 U43(x,u43(y,z)) -> U43(x,y)
 U45(num0(x),num0(y)) -> U45(x,y)
 U45(num0(x),num0(y)) -> NUM0(u45(x,y))
 U45(num0(x),num1(y)) -> U45(u45(x,y),num1(u35))
 U45(num0(x),num1(y)) -> U45(x,y)
 U45(num1(x),num0(y)) -> U45(x,y)
 U45(num1(x),num1(y)) -> U45(x,y)
 U45(num1(x),num1(y)) -> NUM0(u45(x,y))
 BS(n(x,y,z)) -> AND(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 BS(n(x,y,z)) -> AND(bs(y),bs(z))
 BS(n(x,y,z)) -> AND(ge(x,max(y)),ge(min(z),x))
 BS(n(x,y,z)) -> BS(y)
 BS(n(x,y,z)) -> BS(z)
 BS(n(x,y,z)) -> GE(min(z),x)
 BS(n(x,y,z)) -> GE(x,max(y))
 BS(n(x,y,z)) -> MAX(y)
 BS(n(x,y,z)) -> MIN(z)
 GE(num0(x),num0(y)) -> GE(x,y)
 GE(num0(x),num1(y)) -> GE(y,x)
 GE(num0(x),num1(y)) -> NOT(ge(y,x))
 GE(u35,num0(x)) -> GE(u35,x)
 GE(num1(x),num0(y)) -> GE(x,y)
 GE(num1(x),num1(y)) -> GE(x,y)
 MAX(n(x,y,z)) -> MAX(z)
 MIN(n(x,y,z)) -> MIN(y)
 SIZE(n(x,y,z)) -> U43(u43(size(x),size(y)),num1(u35))
 SIZE(n(x,y,z)) -> U43(size(x),size(y))
 SIZE(n(x,y,z)) -> SIZE(x)
 SIZE(n(x,y,z)) -> SIZE(y)
 WB(n(x,y,z)) -> U45(size(y),size(z))
 WB(n(x,y,z)) -> U45(size(z),size(y))
 WB(n(x,y,z)) -> AND(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))
 WB(n(x,y,z)) -> AND(wb(y),wb(z))
 WB(n(x,y,z)) -> GE(size(y),size(z))
 WB(n(x,y,z)) -> GE(num1(u35),u45(size(y),size(z)))
 WB(n(x,y,z)) -> GE(num1(u35),u45(size(z),size(y)))
 WB(n(x,y,z)) -> IF(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y))))
 WB(n(x,y,z)) -> SIZE(y)
 WB(n(x,y,z)) -> SIZE(z)
 WB(n(x,y,z)) -> WB(y)
 WB(n(x,y,z)) -> WB(z)
-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 MIN(n(x,y,z)) -> MIN(y)
->->-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))
->->Cycle:
->->-> Pairs:
 MAX(n(x,y,z)) -> MAX(z)
->->-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))
->->Cycle:
->->-> Pairs:
 GE(u35,num0(x)) -> GE(u35,x)
->->-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))
->->Cycle:
->->-> Pairs:
 GE(num0(x),num0(y)) -> GE(x,y)
 GE(num0(x),num1(y)) -> GE(y,x)
 GE(num1(x),num0(y)) -> GE(x,y)
 GE(num1(x),num1(y)) -> GE(x,y)
->->-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))
->->Cycle:
->->-> Pairs:
 BS(n(x,y,z)) -> BS(y)
 BS(n(x,y,z)) -> BS(z)
->->-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))
->->Cycle:
->->-> Pairs:
 U45(num0(x),num0(y)) -> U45(x,y)
 U45(num0(x),num1(y)) -> U45(u45(x,y),num1(u35))
 U45(num0(x),num1(y)) -> U45(x,y)
 U45(num1(x),num0(y)) -> U45(x,y)
 U45(num1(x),num1(y)) -> U45(x,y)
->->-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))
->->Cycle:
->->-> Pairs:
 U43(num0(x),num0(y)) -> U43(x,y)
 U43(num0(x),num1(y)) -> U43(x,y)
 U43(num1(x),num0(y)) -> U43(x,y)
 U43(num1(x),num1(y)) -> U43(u43(x,y),num1(u35))
 U43(num1(x),num1(y)) -> U43(x,y)
 U43(x,u43(y,z)) -> U43(u43(x,y),z)
 U43(x,u43(y,z)) -> U43(x,y)
->->-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))
->->Cycle:
->->-> Pairs:
 SIZE(n(x,y,z)) -> SIZE(x)
 SIZE(n(x,y,z)) -> SIZE(y)
->->-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))
->->Cycle:
->->-> Pairs:
 WB(n(x,y,z)) -> WB(y)
 WB(n(x,y,z)) -> WB(z)
->->-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))


The problem is decomposed in 9 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 MIN(n(x,y,z)) -> MIN(y)
-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))
->Projection:
 pi(MIN) = 1

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Subterm Processor:
-> Pairs:
 MAX(n(x,y,z)) -> MAX(z)
-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))
->Projection:
 pi(MAX) = 1

Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Subterm Processor:
-> Pairs:
 GE(u35,num0(x)) -> GE(u35,x)
-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))
->Projection:
 pi(GE) = 2

Problem 1.3: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.4: 

Reduction Pair Processor:
-> Pairs:
 GE(num0(x),num0(y)) -> GE(x,y)
 GE(num0(x),num1(y)) -> GE(y,x)
 GE(num1(x),num0(y)) -> GE(x,y)
 GE(num1(x),num1(y)) -> GE(x,y)
-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))
-> Usable rules:
 Empty
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[u43](X1,X2) = 0
[u45](X1,X2) = 0
[num0](X) = 2.X + 2
[and](X1,X2) = 0
[bs](X) = 0
[ge](X1,X2) = 0
[if](X1,X2,X3) = 0
[max](X) = 0
[min](X) = 0
[not](X) = 0
[size](X) = 0
[val](X) = 0
[wb](X) = 0
[u35] = 0
[num1](X) = X
[fSNonEmpty] = 0
[ffalse] = 0
[l](X) = 0
[n](X1,X2,X3) = 0
[ftrue] = 0
[U43](X1,X2) = 0
[U45](X1,X2) = 0
[NUM0](X) = 0
[AND](X1,X2) = 0
[BS](X) = 0
[GE](X1,X2) = X1 + 2.X2
[IF](X1,X2,X3) = 0
[MAX](X) = 0
[MIN](X) = 0
[NOT](X) = 0
[SIZE](X) = 0
[WB](X) = 0

Problem 1.4: 

SCC Processor:
-> Pairs:
 GE(num0(x),num1(y)) -> GE(y,x)
 GE(num1(x),num0(y)) -> GE(x,y)
 GE(num1(x),num1(y)) -> GE(x,y)
-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 GE(num0(x),num1(y)) -> GE(y,x)
 GE(num1(x),num0(y)) -> GE(x,y)
 GE(num1(x),num1(y)) -> GE(x,y)
->->-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))

Problem 1.4: 

Reduction Pair Processor:
-> Pairs:
 GE(num0(x),num1(y)) -> GE(y,x)
 GE(num1(x),num0(y)) -> GE(x,y)
 GE(num1(x),num1(y)) -> GE(x,y)
-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))
-> Usable rules:
 Empty
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[u43](X1,X2) = 0
[u45](X1,X2) = 0
[num0](X) = 2.X + 2
[and](X1,X2) = 0
[bs](X) = 0
[ge](X1,X2) = 0
[if](X1,X2,X3) = 0
[max](X) = 0
[min](X) = 0
[not](X) = 0
[size](X) = 0
[val](X) = 0
[wb](X) = 0
[u35] = 0
[num1](X) = 2.X
[fSNonEmpty] = 0
[ffalse] = 0
[l](X) = 0
[n](X1,X2,X3) = 0
[ftrue] = 0
[U43](X1,X2) = 0
[U45](X1,X2) = 0
[NUM0](X) = 0
[AND](X1,X2) = 0
[BS](X) = 0
[GE](X1,X2) = 2.X1 + 2.X2
[IF](X1,X2,X3) = 0
[MAX](X) = 0
[MIN](X) = 0
[NOT](X) = 0
[SIZE](X) = 0
[WB](X) = 0

Problem 1.4: 

SCC Processor:
-> Pairs:
 GE(num1(x),num0(y)) -> GE(x,y)
 GE(num1(x),num1(y)) -> GE(x,y)
-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 GE(num1(x),num0(y)) -> GE(x,y)
 GE(num1(x),num1(y)) -> GE(x,y)
->->-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))

Problem 1.4: 

Subterm Processor:
-> Pairs:
 GE(num1(x),num0(y)) -> GE(x,y)
 GE(num1(x),num1(y)) -> GE(x,y)
-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))
->Projection:
 pi(GE) = 1

Problem 1.4: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.5: 

Subterm Processor:
-> Pairs:
 BS(n(x,y,z)) -> BS(y)
 BS(n(x,y,z)) -> BS(z)
-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))
->Projection:
 pi(BS) = 1

Problem 1.5: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.6: 

Reduction Pair Processor:
-> Pairs:
 U45(num0(x),num0(y)) -> U45(x,y)
 U45(num0(x),num1(y)) -> U45(u45(x,y),num1(u35))
 U45(num0(x),num1(y)) -> U45(x,y)
 U45(num1(x),num0(y)) -> U45(x,y)
 U45(num1(x),num1(y)) -> U45(x,y)
-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))
-> Usable rules:
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[u43](X1,X2) = 0
[u45](X1,X2) = X1
[num0](X) = 2.X + 2
[and](X1,X2) = 0
[bs](X) = 0
[ge](X1,X2) = 0
[if](X1,X2,X3) = 0
[max](X) = 0
[min](X) = 0
[not](X) = 0
[size](X) = 0
[val](X) = 0
[wb](X) = 0
[u35] = 1
[num1](X) = 2.X + 2
[fSNonEmpty] = 0
[ffalse] = 0
[l](X) = 0
[n](X1,X2,X3) = 0
[ftrue] = 0
[U43](X1,X2) = 0
[U45](X1,X2) = 2.X1 + 2.X2
[NUM0](X) = 0
[AND](X1,X2) = 0
[BS](X) = 0
[GE](X1,X2) = 0
[IF](X1,X2,X3) = 0
[MAX](X) = 0
[MIN](X) = 0
[NOT](X) = 0
[SIZE](X) = 0
[WB](X) = 0

Problem 1.6: 

SCC Processor:
-> Pairs:
 U45(num0(x),num1(y)) -> U45(u45(x,y),num1(u35))
 U45(num0(x),num1(y)) -> U45(x,y)
 U45(num1(x),num0(y)) -> U45(x,y)
 U45(num1(x),num1(y)) -> U45(x,y)
-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U45(num0(x),num1(y)) -> U45(u45(x,y),num1(u35))
 U45(num0(x),num1(y)) -> U45(x,y)
 U45(num1(x),num0(y)) -> U45(x,y)
 U45(num1(x),num1(y)) -> U45(x,y)
->->-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))

Problem 1.6: 

Reduction Pair Processor:
-> Pairs:
 U45(num0(x),num1(y)) -> U45(u45(x,y),num1(u35))
 U45(num0(x),num1(y)) -> U45(x,y)
 U45(num1(x),num0(y)) -> U45(x,y)
 U45(num1(x),num1(y)) -> U45(x,y)
-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))
-> Usable rules:
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[u43](X1,X2) = 0
[u45](X1,X2) = X1 + X2 + 1
[num0](X) = X + 2
[and](X1,X2) = 0
[bs](X) = 0
[ge](X1,X2) = 0
[if](X1,X2,X3) = 0
[max](X) = 0
[min](X) = 0
[not](X) = 0
[size](X) = 0
[val](X) = 0
[wb](X) = 0
[u35] = 0
[num1](X) = X + 1
[fSNonEmpty] = 0
[ffalse] = 0
[l](X) = 0
[n](X1,X2,X3) = 0
[ftrue] = 0
[U43](X1,X2) = 0
[U45](X1,X2) = 2.X1 + 2.X2
[NUM0](X) = 0
[AND](X1,X2) = 0
[BS](X) = 0
[GE](X1,X2) = 0
[IF](X1,X2,X3) = 0
[MAX](X) = 0
[MIN](X) = 0
[NOT](X) = 0
[SIZE](X) = 0
[WB](X) = 0

Problem 1.6: 

SCC Processor:
-> Pairs:
 U45(num0(x),num1(y)) -> U45(x,y)
 U45(num1(x),num0(y)) -> U45(x,y)
 U45(num1(x),num1(y)) -> U45(x,y)
-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U45(num0(x),num1(y)) -> U45(x,y)
 U45(num1(x),num0(y)) -> U45(x,y)
 U45(num1(x),num1(y)) -> U45(x,y)
->->-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))

Problem 1.6: 

Subterm Processor:
-> Pairs:
 U45(num0(x),num1(y)) -> U45(x,y)
 U45(num1(x),num0(y)) -> U45(x,y)
 U45(num1(x),num1(y)) -> U45(x,y)
-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))
->Projection:
 pi(U45) = 1

Problem 1.6: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.7: 

Reduction Pair Processor:
-> Pairs:
 U43(num0(x),num0(y)) -> U43(x,y)
 U43(num0(x),num1(y)) -> U43(x,y)
 U43(num1(x),num0(y)) -> U43(x,y)
 U43(num1(x),num1(y)) -> U43(u43(x,y),num1(u35))
 U43(num1(x),num1(y)) -> U43(x,y)
 U43(x,u43(y,z)) -> U43(u43(x,y),z)
 U43(x,u43(y,z)) -> U43(x,y)
-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))
-> Usable rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 num0(u35) -> u35
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[u43](X1,X2) = X1 + 2.X2 + 1
[u45](X1,X2) = 0
[num0](X) = X + 1
[and](X1,X2) = 0
[bs](X) = 0
[ge](X1,X2) = 0
[if](X1,X2,X3) = 0
[max](X) = 0
[min](X) = 0
[not](X) = 0
[size](X) = 0
[val](X) = 0
[wb](X) = 0
[u35] = 0
[num1](X) = X + 2
[fSNonEmpty] = 0
[ffalse] = 0
[l](X) = 0
[n](X1,X2,X3) = 0
[ftrue] = 0
[U43](X1,X2) = X1 + 2.X2
[U45](X1,X2) = 0
[NUM0](X) = 0
[AND](X1,X2) = 0
[BS](X) = 0
[GE](X1,X2) = 0
[IF](X1,X2,X3) = 0
[MAX](X) = 0
[MIN](X) = 0
[NOT](X) = 0
[SIZE](X) = 0
[WB](X) = 0

Problem 1.7: 

SCC Processor:
-> Pairs:
 U43(num0(x),num1(y)) -> U43(x,y)
 U43(num1(x),num0(y)) -> U43(x,y)
 U43(num1(x),num1(y)) -> U43(u43(x,y),num1(u35))
 U43(num1(x),num1(y)) -> U43(x,y)
 U43(x,u43(y,z)) -> U43(u43(x,y),z)
 U43(x,u43(y,z)) -> U43(x,y)
-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U43(num0(x),num1(y)) -> U43(x,y)
 U43(num1(x),num0(y)) -> U43(x,y)
 U43(num1(x),num1(y)) -> U43(u43(x,y),num1(u35))
 U43(num1(x),num1(y)) -> U43(x,y)
 U43(x,u43(y,z)) -> U43(u43(x,y),z)
 U43(x,u43(y,z)) -> U43(x,y)
->->-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))

Problem 1.7: 

Reduction Pair Processor:
-> Pairs:
 U43(num0(x),num1(y)) -> U43(x,y)
 U43(num1(x),num0(y)) -> U43(x,y)
 U43(num1(x),num1(y)) -> U43(u43(x,y),num1(u35))
 U43(num1(x),num1(y)) -> U43(x,y)
 U43(x,u43(y,z)) -> U43(u43(x,y),z)
 U43(x,u43(y,z)) -> U43(x,y)
-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))
-> Usable rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 num0(u35) -> u35
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[u43](X1,X2) = X1 + X2 + 1
[u45](X1,X2) = 0
[num0](X) = X + 1
[and](X1,X2) = 0
[bs](X) = 0
[ge](X1,X2) = 0
[if](X1,X2,X3) = 0
[max](X) = 0
[min](X) = 0
[not](X) = 0
[size](X) = 0
[val](X) = 0
[wb](X) = 0
[u35] = 0
[num1](X) = X + 2
[fSNonEmpty] = 0
[ffalse] = 0
[l](X) = 0
[n](X1,X2,X3) = 0
[ftrue] = 0
[U43](X1,X2) = X1 + X2
[U45](X1,X2) = 0
[NUM0](X) = 0
[AND](X1,X2) = 0
[BS](X) = 0
[GE](X1,X2) = 0
[IF](X1,X2,X3) = 0
[MAX](X) = 0
[MIN](X) = 0
[NOT](X) = 0
[SIZE](X) = 0
[WB](X) = 0

Problem 1.7: 

SCC Processor:
-> Pairs:
 U43(num1(x),num0(y)) -> U43(x,y)
 U43(num1(x),num1(y)) -> U43(u43(x,y),num1(u35))
 U43(num1(x),num1(y)) -> U43(x,y)
 U43(x,u43(y,z)) -> U43(u43(x,y),z)
 U43(x,u43(y,z)) -> U43(x,y)
-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U43(num1(x),num0(y)) -> U43(x,y)
 U43(num1(x),num1(y)) -> U43(u43(x,y),num1(u35))
 U43(num1(x),num1(y)) -> U43(x,y)
 U43(x,u43(y,z)) -> U43(u43(x,y),z)
 U43(x,u43(y,z)) -> U43(x,y)
->->-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))

Problem 1.7: 

Reduction Pair Processor:
-> Pairs:
 U43(num1(x),num0(y)) -> U43(x,y)
 U43(num1(x),num1(y)) -> U43(u43(x,y),num1(u35))
 U43(num1(x),num1(y)) -> U43(x,y)
 U43(x,u43(y,z)) -> U43(u43(x,y),z)
 U43(x,u43(y,z)) -> U43(x,y)
-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))
-> Usable rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 num0(u35) -> u35
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[u43](X1,X2) = X1 + 2.X2
[u45](X1,X2) = 0
[num0](X) = X + 2
[and](X1,X2) = 0
[bs](X) = 0
[ge](X1,X2) = 0
[if](X1,X2,X3) = 0
[max](X) = 0
[min](X) = 0
[not](X) = 0
[size](X) = 0
[val](X) = 0
[wb](X) = 0
[u35] = 0
[num1](X) = X + 2
[fSNonEmpty] = 0
[ffalse] = 0
[l](X) = 0
[n](X1,X2,X3) = 0
[ftrue] = 0
[U43](X1,X2) = X1 + 2.X2
[U45](X1,X2) = 0
[NUM0](X) = 0
[AND](X1,X2) = 0
[BS](X) = 0
[GE](X1,X2) = 0
[IF](X1,X2,X3) = 0
[MAX](X) = 0
[MIN](X) = 0
[NOT](X) = 0
[SIZE](X) = 0
[WB](X) = 0

Problem 1.7: 

SCC Processor:
-> Pairs:
 U43(num1(x),num1(y)) -> U43(u43(x,y),num1(u35))
 U43(num1(x),num1(y)) -> U43(x,y)
 U43(x,u43(y,z)) -> U43(u43(x,y),z)
 U43(x,u43(y,z)) -> U43(x,y)
-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U43(num1(x),num1(y)) -> U43(u43(x,y),num1(u35))
 U43(num1(x),num1(y)) -> U43(x,y)
 U43(x,u43(y,z)) -> U43(u43(x,y),z)
 U43(x,u43(y,z)) -> U43(x,y)
->->-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))

Problem 1.7: 

Reduction Pair Processor:
-> Pairs:
 U43(num1(x),num1(y)) -> U43(u43(x,y),num1(u35))
 U43(num1(x),num1(y)) -> U43(x,y)
 U43(x,u43(y,z)) -> U43(u43(x,y),z)
 U43(x,u43(y,z)) -> U43(x,y)
-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))
-> Usable rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 num0(u35) -> u35
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[u43](X1,X2) = X1 + 2.X2 + 1
[u45](X1,X2) = 0
[num0](X) = X + 1
[and](X1,X2) = 0
[bs](X) = 0
[ge](X1,X2) = 0
[if](X1,X2,X3) = 0
[max](X) = 0
[min](X) = 0
[not](X) = 0
[size](X) = 0
[val](X) = 0
[wb](X) = 0
[u35] = 0
[num1](X) = X + 2
[fSNonEmpty] = 0
[ffalse] = 0
[l](X) = 0
[n](X1,X2,X3) = 0
[ftrue] = 0
[U43](X1,X2) = X1 + 2.X2
[U45](X1,X2) = 0
[NUM0](X) = 0
[AND](X1,X2) = 0
[BS](X) = 0
[GE](X1,X2) = 0
[IF](X1,X2,X3) = 0
[MAX](X) = 0
[MIN](X) = 0
[NOT](X) = 0
[SIZE](X) = 0
[WB](X) = 0

Problem 1.7: 

SCC Processor:
-> Pairs:
 U43(num1(x),num1(y)) -> U43(x,y)
 U43(x,u43(y,z)) -> U43(u43(x,y),z)
 U43(x,u43(y,z)) -> U43(x,y)
-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U43(num1(x),num1(y)) -> U43(x,y)
 U43(x,u43(y,z)) -> U43(u43(x,y),z)
 U43(x,u43(y,z)) -> U43(x,y)
->->-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))

Problem 1.7: 

Subterm Processor:
-> Pairs:
 U43(num1(x),num1(y)) -> U43(x,y)
 U43(x,u43(y,z)) -> U43(u43(x,y),z)
 U43(x,u43(y,z)) -> U43(x,y)
-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))
->Projection:
 pi(U43) = 2

Problem 1.7: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.8: 

Subterm Processor:
-> Pairs:
 SIZE(n(x,y,z)) -> SIZE(x)
 SIZE(n(x,y,z)) -> SIZE(y)
-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))
->Projection:
 pi(SIZE) = 1

Problem 1.8: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.9: 

Subterm Processor:
-> Pairs:
 WB(n(x,y,z)) -> WB(y)
 WB(n(x,y,z)) -> WB(z)
-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))
->Projection:
 pi(WB) = 1

Problem 1.9: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u43(y,z)) -> u43(u43(x,y),z)
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 bs(l(x)) -> ftrue
 bs(n(x,y,z)) -> and(and(ge(x,max(y)),ge(min(z),x)),and(bs(y),bs(z)))
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 max(l(x)) -> x
 max(n(x,y,z)) -> max(z)
 min(l(x)) -> x
 min(n(x,y,z)) -> min(y)
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
 size(l(x)) -> num1(u35)
 size(n(x,y,z)) -> u43(u43(size(x),size(y)),num1(u35))
 val(l(x)) -> x
 val(n(x,y,z)) -> x
 wb(l(x)) -> ftrue
 wb(n(x,y,z)) -> and(if(ge(size(y),size(z)),ge(num1(u35),u45(size(y),size(z))),ge(num1(u35),u45(size(z),size(y)))),and(wb(y),wb(z)))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
