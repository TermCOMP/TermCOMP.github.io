YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/luKXk.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 0 ms]
(2) QDP
(3) QDPOrderProof [EQUIVALENT, 0 ms]
(4) QDP
(5) RootLabelingFC2Proof [EQUIVALENT, 0 ms]
(6) QDP
(7) DependencyGraphProof [EQUIVALENT, 0 ms]
(8) QDP
(9) MRRProof [EQUIVALENT, 0 ms]
(10) QDP
(11) SemLabProof [SOUND, 0 ms]
(12) QDP
(13) DependencyGraphProof [EQUIVALENT, 0 ms]
(14) TRUE


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(x, f(y, x)) -> f(f(x, x), f(a, y))

Q is empty.

----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(x, f(y, x)) -> F(f(x, x), f(a, y))
   F(x, f(y, x)) -> F(x, x)
   F(x, f(y, x)) -> F(a, y)

The TRS R consists of the following rules:

   f(x, f(y, x)) -> f(f(x, x), f(a, y))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   F(x, f(y, x)) -> F(x, x)
   F(x, f(y, x)) -> F(a, y)
The remaining pairs can at least be oriented weakly.
Used ordering:  Matrix interpretation [MATRO] with arctic natural numbers [ARCTIC]:

   <<<
 POL(F(x_1, x_2)) =  	[[0A]] 	 +  	[[0A]] 	* 	x_1 	 +  	[[0A]] 	* 	x_2
>>>

   <<<
 POL(f(x_1, x_2)) =  	[[1A]] 	 +  	[[1A]] 	* 	x_1 	 +  	[[1A]] 	* 	x_2
>>>

   <<<
 POL(a) =  	[[0A]]
>>>


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   f(x, f(y, x)) -> f(f(x, x), f(a, y))


----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(x, f(y, x)) -> F(f(x, x), f(a, y))

The TRS R consists of the following rules:

   f(x, f(y, x)) -> f(f(x, x), f(a, y))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) RootLabelingFC2Proof (EQUIVALENT)
We used root labeling (second transformation) [ROOTLAB] with the following heuristic:

LabelAll: All function symbols get labeled

As Q is empty the root labeling was sound AND complete.


----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F_{f_2,f_2}(x, f_{f_2,f_2}(y, x)) -> F_{f_2,f_2}(f_{f_2,f_2}(x, x), f_{a,f_2}(a, y))
   F_{f_2,f_2}(x, f_{a,f_2}(y, x)) -> F_{f_2,f_2}(f_{f_2,f_2}(x, x), f_{a,a}(a, y))
   F_{a,f_2}(x, f_{f_2,a}(y, x)) -> F_{f_2,f_2}(f_{a,a}(x, x), f_{a,f_2}(a, y))
   F_{a,f_2}(x, f_{a,a}(y, x)) -> F_{f_2,f_2}(f_{a,a}(x, x), f_{a,a}(a, y))

The TRS R consists of the following rules:

   f_{f_2,f_2}(x, f_{f_2,f_2}(y, x)) -> f_{f_2,f_2}(f_{f_2,f_2}(x, x), f_{a,f_2}(a, y))
   f_{f_2,f_2}(x, f_{a,f_2}(y, x)) -> f_{f_2,f_2}(f_{f_2,f_2}(x, x), f_{a,a}(a, y))
   f_{a,f_2}(x, f_{f_2,a}(y, x)) -> f_{f_2,f_2}(f_{a,a}(x, x), f_{a,f_2}(a, y))
   f_{a,f_2}(x, f_{a,a}(y, x)) -> f_{f_2,f_2}(f_{a,a}(x, x), f_{a,a}(a, y))

Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(7) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 3 less nodes.
----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F_{f_2,f_2}(x, f_{f_2,f_2}(y, x)) -> F_{f_2,f_2}(f_{f_2,f_2}(x, x), f_{a,f_2}(a, y))

The TRS R consists of the following rules:

   f_{f_2,f_2}(x, f_{f_2,f_2}(y, x)) -> f_{f_2,f_2}(f_{f_2,f_2}(x, x), f_{a,f_2}(a, y))
   f_{f_2,f_2}(x, f_{a,f_2}(y, x)) -> f_{f_2,f_2}(f_{f_2,f_2}(x, x), f_{a,a}(a, y))
   f_{a,f_2}(x, f_{f_2,a}(y, x)) -> f_{f_2,f_2}(f_{a,a}(x, x), f_{a,f_2}(a, y))
   f_{a,f_2}(x, f_{a,a}(y, x)) -> f_{f_2,f_2}(f_{a,a}(x, x), f_{a,a}(a, y))

Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(9) MRRProof (EQUIVALENT)
By using the rule removal processor [LPAR04] with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented.


Strictly oriented rules of the TRS R:

   f_{a,f_2}(x, f_{f_2,a}(y, x)) -> f_{f_2,f_2}(f_{a,a}(x, x), f_{a,f_2}(a, y))

Used ordering: Polynomial interpretation [POLO]:

   POL(F_{f_2,f_2}(x_1, x_2)) = x_1 + x_2
   POL(a) = 0
   POL(f_{a,a}(x_1, x_2)) = x_1 + x_2
   POL(f_{a,f_2}(x_1, x_2)) = 2*x_1 + x_2
   POL(f_{f_2,a}(x_1, x_2)) = 2 + 2*x_1 + 2*x_2
   POL(f_{f_2,f_2}(x_1, x_2)) = x_1 + x_2


----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F_{f_2,f_2}(x, f_{f_2,f_2}(y, x)) -> F_{f_2,f_2}(f_{f_2,f_2}(x, x), f_{a,f_2}(a, y))

The TRS R consists of the following rules:

   f_{f_2,f_2}(x, f_{f_2,f_2}(y, x)) -> f_{f_2,f_2}(f_{f_2,f_2}(x, x), f_{a,f_2}(a, y))
   f_{f_2,f_2}(x, f_{a,f_2}(y, x)) -> f_{f_2,f_2}(f_{f_2,f_2}(x, x), f_{a,a}(a, y))
   f_{a,f_2}(x, f_{a,a}(y, x)) -> f_{f_2,f_2}(f_{a,a}(x, x), f_{a,a}(a, y))

Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(11) SemLabProof (SOUND)
We found the following model for the rules of the TRSs R and P.
Interpretation over the domain with elements from 0 to 1.
a: 0
f_{a,f_2}: 0
F_{f_2,f_2}: 0
f_{a,a}: 1
f_{f_2,f_2}: 0
By semantic labelling [SEMLAB] we obtain the following labelled QDP problem.
----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F_{f_2,f_2}.0-0(x, f_{f_2,f_2}.0-0(y, x)) -> F_{f_2,f_2}.0-0(f_{f_2,f_2}.0-0(x, x), f_{a,f_2}.0-0(a., y))
   F_{f_2,f_2}.0-0(x, f_{f_2,f_2}.1-0(y, x)) -> F_{f_2,f_2}.0-0(f_{f_2,f_2}.0-0(x, x), f_{a,f_2}.0-1(a., y))
   F_{f_2,f_2}.1-0(x, f_{f_2,f_2}.0-1(y, x)) -> F_{f_2,f_2}.0-0(f_{f_2,f_2}.1-1(x, x), f_{a,f_2}.0-0(a., y))
   F_{f_2,f_2}.1-0(x, f_{f_2,f_2}.1-1(y, x)) -> F_{f_2,f_2}.0-0(f_{f_2,f_2}.1-1(x, x), f_{a,f_2}.0-1(a., y))

The TRS R consists of the following rules:

   f_{f_2,f_2}.0-0(x, f_{f_2,f_2}.0-0(y, x)) -> f_{f_2,f_2}.0-0(f_{f_2,f_2}.0-0(x, x), f_{a,f_2}.0-0(a., y))
   f_{f_2,f_2}.0-0(x, f_{f_2,f_2}.1-0(y, x)) -> f_{f_2,f_2}.0-0(f_{f_2,f_2}.0-0(x, x), f_{a,f_2}.0-1(a., y))
   f_{f_2,f_2}.1-0(x, f_{f_2,f_2}.0-1(y, x)) -> f_{f_2,f_2}.0-0(f_{f_2,f_2}.1-1(x, x), f_{a,f_2}.0-0(a., y))
   f_{f_2,f_2}.1-0(x, f_{f_2,f_2}.1-1(y, x)) -> f_{f_2,f_2}.0-0(f_{f_2,f_2}.1-1(x, x), f_{a,f_2}.0-1(a., y))
   f_{f_2,f_2}.0-0(x, f_{a,f_2}.0-0(y, x)) -> f_{f_2,f_2}.0-1(f_{f_2,f_2}.0-0(x, x), f_{a,a}.0-0(a., y))
   f_{f_2,f_2}.0-0(x, f_{a,f_2}.1-0(y, x)) -> f_{f_2,f_2}.0-1(f_{f_2,f_2}.0-0(x, x), f_{a,a}.0-1(a., y))
   f_{f_2,f_2}.1-0(x, f_{a,f_2}.0-1(y, x)) -> f_{f_2,f_2}.0-1(f_{f_2,f_2}.1-1(x, x), f_{a,a}.0-0(a., y))
   f_{f_2,f_2}.1-0(x, f_{a,f_2}.1-1(y, x)) -> f_{f_2,f_2}.0-1(f_{f_2,f_2}.1-1(x, x), f_{a,a}.0-1(a., y))
   f_{a,f_2}.0-1(x, f_{a,a}.0-0(y, x)) -> f_{f_2,f_2}.1-1(f_{a,a}.0-0(x, x), f_{a,a}.0-0(a., y))
   f_{a,f_2}.0-1(x, f_{a,a}.1-0(y, x)) -> f_{f_2,f_2}.1-1(f_{a,a}.0-0(x, x), f_{a,a}.0-1(a., y))
   f_{a,f_2}.1-1(x, f_{a,a}.0-1(y, x)) -> f_{f_2,f_2}.1-1(f_{a,a}.1-1(x, x), f_{a,a}.0-0(a., y))
   f_{a,f_2}.1-1(x, f_{a,a}.1-1(y, x)) -> f_{f_2,f_2}.1-1(f_{a,a}.1-1(x, x), f_{a,a}.0-1(a., y))

Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(13) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 4 less nodes.
----------------------------------------

(14)
TRUE
