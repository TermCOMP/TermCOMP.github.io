NO
proof of /hpcwork/ff862203/termcomp25/benchmarks/hYl1i.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be disproven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 0 ms]
(2) QDP
(3) DependencyGraphProof [EQUIVALENT, 0 ms]
(4) AND
    (5) QDP
        (6) NonTerminationLoopProof [COMPLETE, 4434 ms]
        (7) NO
    (8) QDP
        (9) UsableRulesProof [EQUIVALENT, 0 ms]
        (10) QDP
        (11) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (12) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a__f(X, g(X), Y) -> a__f(Y, Y, Y)
   a__g(b) -> c
   a__b -> c
   mark(f(X1, X2, X3)) -> a__f(X1, X2, X3)
   mark(g(X)) -> a__g(mark(X))
   mark(b) -> a__b
   mark(c) -> c
   a__f(X1, X2, X3) -> f(X1, X2, X3)
   a__g(X) -> g(X)
   a__b -> b

Q is empty.

----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A__F(X, g(X), Y) -> A__F(Y, Y, Y)
   MARK(f(X1, X2, X3)) -> A__F(X1, X2, X3)
   MARK(g(X)) -> A__G(mark(X))
   MARK(g(X)) -> MARK(X)
   MARK(b) -> A__B

The TRS R consists of the following rules:

   a__f(X, g(X), Y) -> a__f(Y, Y, Y)
   a__g(b) -> c
   a__b -> c
   mark(f(X1, X2, X3)) -> a__f(X1, X2, X3)
   mark(g(X)) -> a__g(mark(X))
   mark(b) -> a__b
   mark(c) -> c
   a__f(X1, X2, X3) -> f(X1, X2, X3)
   a__g(X) -> g(X)
   a__b -> b

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs with 3 less nodes.
----------------------------------------

(4)
Complex Obligation (AND)

----------------------------------------

(5)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A__F(X, g(X), Y) -> A__F(Y, Y, Y)

The TRS R consists of the following rules:

   a__f(X, g(X), Y) -> a__f(Y, Y, Y)
   a__g(b) -> c
   a__b -> c
   mark(f(X1, X2, X3)) -> a__f(X1, X2, X3)
   mark(g(X)) -> a__g(mark(X))
   mark(b) -> a__b
   mark(c) -> c
   a__f(X1, X2, X3) -> f(X1, X2, X3)
   a__g(X) -> g(X)
   a__b -> b

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(6) NonTerminationLoopProof (COMPLETE)
We used the non-termination processor [FROCOS05] to show that the DP problem is infinite.
Found a loop by narrowing to the left:

s = A__F(a__g(a__b), a__g(a__b), Y) evaluates to  t =A__F(Y, Y, Y)

Thus s starts an infinite chain as s semiunifies with t with the following substitutions:
* Matcher: [ ]
* Semiunifier: [Y / a__g(a__b)]

--------------------------------------------------------------------------------
Rewriting sequence

A__F(a__g(a__b), a__g(a__b), a__g(a__b)) -> A__F(a__g(a__b), a__g(c), a__g(a__b))
with rule a__b -> c at position [1,0] and matcher [ ]

A__F(a__g(a__b), a__g(c), a__g(a__b)) -> A__F(a__g(a__b), g(c), a__g(a__b))
with rule a__g(X) -> g(X) at position [1] and matcher [X / c]

A__F(a__g(a__b), g(c), a__g(a__b)) -> A__F(a__g(b), g(c), a__g(a__b))
with rule a__b -> b at position [0,0] and matcher [ ]

A__F(a__g(b), g(c), a__g(a__b)) -> A__F(c, g(c), a__g(a__b))
with rule a__g(b) -> c at position [0] and matcher [ ]

A__F(c, g(c), a__g(a__b)) -> A__F(a__g(a__b), a__g(a__b), a__g(a__b))
with rule A__F(X, g(X), Y) -> A__F(Y, Y, Y)

Now applying the matcher to the start term leads to a term which is equal to the last term in the rewriting sequence


All these steps are and every following step will be a correct step w.r.t to Q.




----------------------------------------

(7)
NO

----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(g(X)) -> MARK(X)

The TRS R consists of the following rules:

   a__f(X, g(X), Y) -> a__f(Y, Y, Y)
   a__g(b) -> c
   a__b -> c
   mark(f(X1, X2, X3)) -> a__f(X1, X2, X3)
   mark(g(X)) -> a__g(mark(X))
   mark(b) -> a__b
   mark(c) -> c
   a__f(X1, X2, X3) -> f(X1, X2, X3)
   a__g(X) -> g(X)
   a__b -> b

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(g(X)) -> MARK(X)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*MARK(g(X)) -> MARK(X)
The graph contains the following edges 1 > 1


----------------------------------------

(12)
YES
