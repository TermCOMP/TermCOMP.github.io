YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/FYOxL.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) AAECC Innermost [EQUIVALENT, 0 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 0 ms]
(4) QDP
(5) UsableRulesProof [EQUIVALENT, 0 ms]
(6) QDP
(7) QReductionProof [EQUIVALENT, 0 ms]
(8) QDP
(9) QDPOrderProof [EQUIVALENT, 0 ms]
(10) QDP
(11) DependencyGraphProof [EQUIVALENT, 0 ms]
(12) QDP
(13) QDPSizeChangeProof [EQUIVALENT, 0 ms]
(14) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(a, a) -> f(a, b)
   f(a, b) -> f(s(a), c)
   f(s(X), c) -> f(X, c)
   f(c, c) -> f(a, a)

Q is empty.

----------------------------------------

(1) AAECC Innermost (EQUIVALENT)
We have applied [NOC,AAECCNOC] to switch to innermost. The TRS R 1 is none

The TRS R 2 is 
   f(a, a) -> f(a, b)
   f(a, b) -> f(s(a), c)
   f(s(X), c) -> f(X, c)
   f(c, c) -> f(a, a)

The signature Sigma is {f_2}
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(a, a) -> f(a, b)
   f(a, b) -> f(s(a), c)
   f(s(X), c) -> f(X, c)
   f(c, c) -> f(a, a)

The set Q consists of the following terms:

   f(a, a)
   f(a, b)
   f(s(x0), c)
   f(c, c)


----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(a, a) -> F(a, b)
   F(a, b) -> F(s(a), c)
   F(s(X), c) -> F(X, c)
   F(c, c) -> F(a, a)

The TRS R consists of the following rules:

   f(a, a) -> f(a, b)
   f(a, b) -> f(s(a), c)
   f(s(X), c) -> f(X, c)
   f(c, c) -> f(a, a)

The set Q consists of the following terms:

   f(a, a)
   f(a, b)
   f(s(x0), c)
   f(c, c)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(a, a) -> F(a, b)
   F(a, b) -> F(s(a), c)
   F(s(X), c) -> F(X, c)
   F(c, c) -> F(a, a)

R is empty.
The set Q consists of the following terms:

   f(a, a)
   f(a, b)
   f(s(x0), c)
   f(c, c)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   f(a, a)
   f(a, b)
   f(s(x0), c)
   f(c, c)


----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(a, a) -> F(a, b)
   F(a, b) -> F(s(a), c)
   F(s(X), c) -> F(X, c)
   F(c, c) -> F(a, a)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   F(c, c) -> F(a, a)
The remaining pairs can at least be oriented weakly.
Used ordering:  Combined order from the following AFS and order.
F(x1, x2)  =  x1

a  =  a

s(x1)  =  x1

c  =  c


Knuth-Bendix order [KBO] with precedence:trivial

and weight map:

   a=1
   c=2

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:
none


----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(a, a) -> F(a, b)
   F(a, b) -> F(s(a), c)
   F(s(X), c) -> F(X, c)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 2 less nodes.
----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(X), c) -> F(X, c)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*F(s(X), c) -> F(X, c)
The graph contains the following edges 1 > 1, 2 >= 2


----------------------------------------

(14)
YES
