YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/aNQ7l.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 0 ms]
(2) QDP
(3) DependencyGraphProof [EQUIVALENT, 0 ms]
(4) QDP
(5) MRRProof [EQUIVALENT, 0 ms]
(6) QDP
(7) TransformationProof [EQUIVALENT, 0 ms]
(8) QDP
(9) TransformationProof [EQUIVALENT, 0 ms]
(10) QDP
(11) DependencyGraphProof [EQUIVALENT, 0 ms]
(12) QDP
(13) TransformationProof [EQUIVALENT, 0 ms]
(14) QDP
(15) DependencyGraphProof [EQUIVALENT, 0 ms]
(16) TRUE


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   b(b(0, y), x) -> y
   c(c(c(y))) -> c(c(a(a(c(b(0, y)), 0), 0)))
   a(y, 0) -> b(y, 0)

Q is empty.

----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C(c(c(y))) -> C(c(a(a(c(b(0, y)), 0), 0)))
   C(c(c(y))) -> C(a(a(c(b(0, y)), 0), 0))
   C(c(c(y))) -> A(a(c(b(0, y)), 0), 0)
   C(c(c(y))) -> A(c(b(0, y)), 0)
   C(c(c(y))) -> C(b(0, y))
   C(c(c(y))) -> B(0, y)
   A(y, 0) -> B(y, 0)

The TRS R consists of the following rules:

   b(b(0, y), x) -> y
   c(c(c(y))) -> c(c(a(a(c(b(0, y)), 0), 0)))
   a(y, 0) -> b(y, 0)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 5 less nodes.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C(c(c(y))) -> C(a(a(c(b(0, y)), 0), 0))
   C(c(c(y))) -> C(c(a(a(c(b(0, y)), 0), 0)))

The TRS R consists of the following rules:

   b(b(0, y), x) -> y
   c(c(c(y))) -> c(c(a(a(c(b(0, y)), 0), 0)))
   a(y, 0) -> b(y, 0)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) MRRProof (EQUIVALENT)
By using the rule removal processor [LPAR04] with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented.

Strictly oriented dependency pairs:

   C(c(c(y))) -> C(a(a(c(b(0, y)), 0), 0))


Used ordering: Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(C(x_1)) = 2*x_1
   POL(a(x_1, x_2)) = x_1 + 2*x_2
   POL(b(x_1, x_2)) = x_1 + x_2
   POL(c(x_1)) = 1 + 2*x_1


----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C(c(c(y))) -> C(c(a(a(c(b(0, y)), 0), 0)))

The TRS R consists of the following rules:

   b(b(0, y), x) -> y
   c(c(c(y))) -> c(c(a(a(c(b(0, y)), 0), 0)))
   a(y, 0) -> b(y, 0)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule C(c(c(y))) -> C(c(a(a(c(b(0, y)), 0), 0))) at position [0] we obtained the following new rules [LPAR04]:

   (C(c(c(y0))) -> C(c(b(a(c(b(0, y0)), 0), 0))),C(c(c(y0))) -> C(c(b(a(c(b(0, y0)), 0), 0))))
   (C(c(c(y0))) -> C(c(a(b(c(b(0, y0)), 0), 0))),C(c(c(y0))) -> C(c(a(b(c(b(0, y0)), 0), 0))))


----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C(c(c(y0))) -> C(c(b(a(c(b(0, y0)), 0), 0)))
   C(c(c(y0))) -> C(c(a(b(c(b(0, y0)), 0), 0)))

The TRS R consists of the following rules:

   b(b(0, y), x) -> y
   c(c(c(y))) -> c(c(a(a(c(b(0, y)), 0), 0)))
   a(y, 0) -> b(y, 0)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule C(c(c(y0))) -> C(c(b(a(c(b(0, y0)), 0), 0))) at position [0] we obtained the following new rules [LPAR04]:

   (C(c(c(y0))) -> C(c(b(b(c(b(0, y0)), 0), 0))),C(c(c(y0))) -> C(c(b(b(c(b(0, y0)), 0), 0))))


----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C(c(c(y0))) -> C(c(a(b(c(b(0, y0)), 0), 0)))
   C(c(c(y0))) -> C(c(b(b(c(b(0, y0)), 0), 0)))

The TRS R consists of the following rules:

   b(b(0, y), x) -> y
   c(c(c(y))) -> c(c(a(a(c(b(0, y)), 0), 0)))
   a(y, 0) -> b(y, 0)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C(c(c(y0))) -> C(c(a(b(c(b(0, y0)), 0), 0)))

The TRS R consists of the following rules:

   b(b(0, y), x) -> y
   c(c(c(y))) -> c(c(a(a(c(b(0, y)), 0), 0)))
   a(y, 0) -> b(y, 0)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule C(c(c(y0))) -> C(c(a(b(c(b(0, y0)), 0), 0))) at position [0] we obtained the following new rules [LPAR04]:

   (C(c(c(y0))) -> C(c(b(b(c(b(0, y0)), 0), 0))),C(c(c(y0))) -> C(c(b(b(c(b(0, y0)), 0), 0))))


----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C(c(c(y0))) -> C(c(b(b(c(b(0, y0)), 0), 0)))

The TRS R consists of the following rules:

   b(b(0, y), x) -> y
   c(c(c(y))) -> c(c(a(a(c(b(0, y)), 0), 0)))
   a(y, 0) -> b(y, 0)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 1 less node.
----------------------------------------

(16)
TRUE
