YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/sE1jG.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 0 ms]
(2) QDP
(3) DependencyGraphProof [EQUIVALENT, 0 ms]
(4) QDP
(5) UsableRulesProof [EQUIVALENT, 0 ms]
(6) QDP
(7) QDPOrderProof [EQUIVALENT, 0 ms]
(8) QDP
(9) PisEmptyProof [EQUIVALENT, 0 ms]
(10) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   p(p(b(a(x0)), x1), p(x2, x3)) -> p(p(x3, a(x2)), p(b(a(x1)), b(x0)))

Q is empty.

----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   P(p(b(a(x0)), x1), p(x2, x3)) -> P(p(x3, a(x2)), p(b(a(x1)), b(x0)))
   P(p(b(a(x0)), x1), p(x2, x3)) -> P(x3, a(x2))
   P(p(b(a(x0)), x1), p(x2, x3)) -> P(b(a(x1)), b(x0))

The TRS R consists of the following rules:

   p(p(b(a(x0)), x1), p(x2, x3)) -> p(p(x3, a(x2)), p(b(a(x1)), b(x0)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 2 less nodes.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   P(p(b(a(x0)), x1), p(x2, x3)) -> P(p(x3, a(x2)), p(b(a(x1)), b(x0)))

The TRS R consists of the following rules:

   p(p(b(a(x0)), x1), p(x2, x3)) -> p(p(x3, a(x2)), p(b(a(x1)), b(x0)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   P(p(b(a(x0)), x1), p(x2, x3)) -> P(p(x3, a(x2)), p(b(a(x1)), b(x0)))

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   P(p(b(a(x0)), x1), p(x2, x3)) -> P(p(x3, a(x2)), p(b(a(x1)), b(x0)))
The remaining pairs can at least be oriented weakly.
Used ordering:  Matrix interpretation [MATRO] to (N^2, +, *, >=, >) :

   <<<
 POL(P(x_1, x_2)) =  	[[0]] 	 +  	[[0, 1]] 	* 	x_1 	 +  	[[1, 0]] 	* 	x_2
>>>

   <<<
 POL(p(x_1, x_2)) =  	[[0], [0]] 	 +  	[[0, 0], [1, 1]] 	* 	x_1 	 +  	[[1, 1], [0, 0]] 	* 	x_2
>>>

   <<<
 POL(b(x_1)) =  	[[1], [1]] 	 +  	[[1, 0], [1, 0]] 	* 	x_1
>>>

   <<<
 POL(a(x_1)) =  	[[1], [0]] 	 +  	[[1, 1], [0, 0]] 	* 	x_1
>>>


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:
none


----------------------------------------

(8)
Obligation:
Q DP problem:
P is empty.
R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(10)
YES
