YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/CCZLo.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 0 ms]
(2) QDP
(3) DependencyGraphProof [EQUIVALENT, 0 ms]
(4) AND
    (5) QDP
        (6) UsableRulesProof [EQUIVALENT, 0 ms]
        (7) QDP
        (8) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (9) YES
    (10) QDP
        (11) UsableRulesProof [EQUIVALENT, 0 ms]
        (12) QDP
        (13) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (14) YES
    (15) QDP
        (16) UsableRulesProof [EQUIVALENT, 0 ms]
        (17) QDP
        (18) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (19) YES
    (20) QDP
        (21) UsableRulesProof [EQUIVALENT, 0 ms]
        (22) QDP
        (23) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (24) YES
    (25) QDP
        (26) UsableRulesProof [EQUIVALENT, 0 ms]
        (27) QDP
        (28) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (29) YES
    (30) QDP
        (31) QDPOrderProof [EQUIVALENT, 67 ms]
        (32) QDP
        (33) QDPOrderProof [EQUIVALENT, 0 ms]
        (34) QDP
        (35) QDPOrderProof [EQUIVALENT, 71 ms]
        (36) QDP
        (37) QDPOrderProof [EQUIVALENT, 79 ms]
        (38) QDP
        (39) QDPOrderProof [EQUIVALENT, 25 ms]
        (40) QDP
        (41) QDPOrderProof [EQUIVALENT, 8 ms]
        (42) QDP
        (43) QDPOrderProof [EQUIVALENT, 0 ms]
        (44) QDP
        (45) QDPOrderProof [EQUIVALENT, 0 ms]
        (46) QDP
        (47) QDPOrderProof [EQUIVALENT, 0 ms]
        (48) QDP
        (49) QDPOrderProof [EQUIVALENT, 34 ms]
        (50) QDP
        (51) QDPOrderProof [EQUIVALENT, 85 ms]
        (52) QDP
        (53) PisEmptyProof [EQUIVALENT, 0 ms]
        (54) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   active(2nd(cons1(X, cons(Y, Z)))) -> mark(Y)
   active(2nd(cons(X, X1))) -> mark(2nd(cons1(X, X1)))
   active(from(X)) -> mark(cons(X, from(s(X))))
   mark(2nd(X)) -> active(2nd(mark(X)))
   mark(cons1(X1, X2)) -> active(cons1(mark(X1), mark(X2)))
   mark(cons(X1, X2)) -> active(cons(mark(X1), X2))
   mark(from(X)) -> active(from(mark(X)))
   mark(s(X)) -> active(s(mark(X)))
   2nd(mark(X)) -> 2nd(X)
   2nd(active(X)) -> 2nd(X)
   cons1(mark(X1), X2) -> cons1(X1, X2)
   cons1(X1, mark(X2)) -> cons1(X1, X2)
   cons1(active(X1), X2) -> cons1(X1, X2)
   cons1(X1, active(X2)) -> cons1(X1, X2)
   cons(mark(X1), X2) -> cons(X1, X2)
   cons(X1, mark(X2)) -> cons(X1, X2)
   cons(active(X1), X2) -> cons(X1, X2)
   cons(X1, active(X2)) -> cons(X1, X2)
   from(mark(X)) -> from(X)
   from(active(X)) -> from(X)
   s(mark(X)) -> s(X)
   s(active(X)) -> s(X)

Q is empty.

----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ACTIVE(2nd(cons1(X, cons(Y, Z)))) -> MARK(Y)
   ACTIVE(2nd(cons(X, X1))) -> MARK(2nd(cons1(X, X1)))
   ACTIVE(2nd(cons(X, X1))) -> 2ND(cons1(X, X1))
   ACTIVE(2nd(cons(X, X1))) -> CONS1(X, X1)
   ACTIVE(from(X)) -> MARK(cons(X, from(s(X))))
   ACTIVE(from(X)) -> CONS(X, from(s(X)))
   ACTIVE(from(X)) -> FROM(s(X))
   ACTIVE(from(X)) -> S(X)
   MARK(2nd(X)) -> ACTIVE(2nd(mark(X)))
   MARK(2nd(X)) -> 2ND(mark(X))
   MARK(2nd(X)) -> MARK(X)
   MARK(cons1(X1, X2)) -> ACTIVE(cons1(mark(X1), mark(X2)))
   MARK(cons1(X1, X2)) -> CONS1(mark(X1), mark(X2))
   MARK(cons1(X1, X2)) -> MARK(X1)
   MARK(cons1(X1, X2)) -> MARK(X2)
   MARK(cons(X1, X2)) -> ACTIVE(cons(mark(X1), X2))
   MARK(cons(X1, X2)) -> CONS(mark(X1), X2)
   MARK(cons(X1, X2)) -> MARK(X1)
   MARK(from(X)) -> ACTIVE(from(mark(X)))
   MARK(from(X)) -> FROM(mark(X))
   MARK(from(X)) -> MARK(X)
   MARK(s(X)) -> ACTIVE(s(mark(X)))
   MARK(s(X)) -> S(mark(X))
   MARK(s(X)) -> MARK(X)
   2ND(mark(X)) -> 2ND(X)
   2ND(active(X)) -> 2ND(X)
   CONS1(mark(X1), X2) -> CONS1(X1, X2)
   CONS1(X1, mark(X2)) -> CONS1(X1, X2)
   CONS1(active(X1), X2) -> CONS1(X1, X2)
   CONS1(X1, active(X2)) -> CONS1(X1, X2)
   CONS(mark(X1), X2) -> CONS(X1, X2)
   CONS(X1, mark(X2)) -> CONS(X1, X2)
   CONS(active(X1), X2) -> CONS(X1, X2)
   CONS(X1, active(X2)) -> CONS(X1, X2)
   FROM(mark(X)) -> FROM(X)
   FROM(active(X)) -> FROM(X)
   S(mark(X)) -> S(X)
   S(active(X)) -> S(X)

The TRS R consists of the following rules:

   active(2nd(cons1(X, cons(Y, Z)))) -> mark(Y)
   active(2nd(cons(X, X1))) -> mark(2nd(cons1(X, X1)))
   active(from(X)) -> mark(cons(X, from(s(X))))
   mark(2nd(X)) -> active(2nd(mark(X)))
   mark(cons1(X1, X2)) -> active(cons1(mark(X1), mark(X2)))
   mark(cons(X1, X2)) -> active(cons(mark(X1), X2))
   mark(from(X)) -> active(from(mark(X)))
   mark(s(X)) -> active(s(mark(X)))
   2nd(mark(X)) -> 2nd(X)
   2nd(active(X)) -> 2nd(X)
   cons1(mark(X1), X2) -> cons1(X1, X2)
   cons1(X1, mark(X2)) -> cons1(X1, X2)
   cons1(active(X1), X2) -> cons1(X1, X2)
   cons1(X1, active(X2)) -> cons1(X1, X2)
   cons(mark(X1), X2) -> cons(X1, X2)
   cons(X1, mark(X2)) -> cons(X1, X2)
   cons(active(X1), X2) -> cons(X1, X2)
   cons(X1, active(X2)) -> cons(X1, X2)
   from(mark(X)) -> from(X)
   from(active(X)) -> from(X)
   s(mark(X)) -> s(X)
   s(active(X)) -> s(X)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 6 SCCs with 10 less nodes.
----------------------------------------

(4)
Complex Obligation (AND)

----------------------------------------

(5)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   S(active(X)) -> S(X)
   S(mark(X)) -> S(X)

The TRS R consists of the following rules:

   active(2nd(cons1(X, cons(Y, Z)))) -> mark(Y)
   active(2nd(cons(X, X1))) -> mark(2nd(cons1(X, X1)))
   active(from(X)) -> mark(cons(X, from(s(X))))
   mark(2nd(X)) -> active(2nd(mark(X)))
   mark(cons1(X1, X2)) -> active(cons1(mark(X1), mark(X2)))
   mark(cons(X1, X2)) -> active(cons(mark(X1), X2))
   mark(from(X)) -> active(from(mark(X)))
   mark(s(X)) -> active(s(mark(X)))
   2nd(mark(X)) -> 2nd(X)
   2nd(active(X)) -> 2nd(X)
   cons1(mark(X1), X2) -> cons1(X1, X2)
   cons1(X1, mark(X2)) -> cons1(X1, X2)
   cons1(active(X1), X2) -> cons1(X1, X2)
   cons1(X1, active(X2)) -> cons1(X1, X2)
   cons(mark(X1), X2) -> cons(X1, X2)
   cons(X1, mark(X2)) -> cons(X1, X2)
   cons(active(X1), X2) -> cons(X1, X2)
   cons(X1, active(X2)) -> cons(X1, X2)
   from(mark(X)) -> from(X)
   from(active(X)) -> from(X)
   s(mark(X)) -> s(X)
   s(active(X)) -> s(X)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(6) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(7)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   S(active(X)) -> S(X)
   S(mark(X)) -> S(X)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(8) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*S(active(X)) -> S(X)
The graph contains the following edges 1 > 1


*S(mark(X)) -> S(X)
The graph contains the following edges 1 > 1


----------------------------------------

(9)
YES

----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   FROM(active(X)) -> FROM(X)
   FROM(mark(X)) -> FROM(X)

The TRS R consists of the following rules:

   active(2nd(cons1(X, cons(Y, Z)))) -> mark(Y)
   active(2nd(cons(X, X1))) -> mark(2nd(cons1(X, X1)))
   active(from(X)) -> mark(cons(X, from(s(X))))
   mark(2nd(X)) -> active(2nd(mark(X)))
   mark(cons1(X1, X2)) -> active(cons1(mark(X1), mark(X2)))
   mark(cons(X1, X2)) -> active(cons(mark(X1), X2))
   mark(from(X)) -> active(from(mark(X)))
   mark(s(X)) -> active(s(mark(X)))
   2nd(mark(X)) -> 2nd(X)
   2nd(active(X)) -> 2nd(X)
   cons1(mark(X1), X2) -> cons1(X1, X2)
   cons1(X1, mark(X2)) -> cons1(X1, X2)
   cons1(active(X1), X2) -> cons1(X1, X2)
   cons1(X1, active(X2)) -> cons1(X1, X2)
   cons(mark(X1), X2) -> cons(X1, X2)
   cons(X1, mark(X2)) -> cons(X1, X2)
   cons(active(X1), X2) -> cons(X1, X2)
   cons(X1, active(X2)) -> cons(X1, X2)
   from(mark(X)) -> from(X)
   from(active(X)) -> from(X)
   s(mark(X)) -> s(X)
   s(active(X)) -> s(X)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   FROM(active(X)) -> FROM(X)
   FROM(mark(X)) -> FROM(X)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*FROM(active(X)) -> FROM(X)
The graph contains the following edges 1 > 1


*FROM(mark(X)) -> FROM(X)
The graph contains the following edges 1 > 1


----------------------------------------

(14)
YES

----------------------------------------

(15)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   CONS(X1, mark(X2)) -> CONS(X1, X2)
   CONS(mark(X1), X2) -> CONS(X1, X2)
   CONS(active(X1), X2) -> CONS(X1, X2)
   CONS(X1, active(X2)) -> CONS(X1, X2)

The TRS R consists of the following rules:

   active(2nd(cons1(X, cons(Y, Z)))) -> mark(Y)
   active(2nd(cons(X, X1))) -> mark(2nd(cons1(X, X1)))
   active(from(X)) -> mark(cons(X, from(s(X))))
   mark(2nd(X)) -> active(2nd(mark(X)))
   mark(cons1(X1, X2)) -> active(cons1(mark(X1), mark(X2)))
   mark(cons(X1, X2)) -> active(cons(mark(X1), X2))
   mark(from(X)) -> active(from(mark(X)))
   mark(s(X)) -> active(s(mark(X)))
   2nd(mark(X)) -> 2nd(X)
   2nd(active(X)) -> 2nd(X)
   cons1(mark(X1), X2) -> cons1(X1, X2)
   cons1(X1, mark(X2)) -> cons1(X1, X2)
   cons1(active(X1), X2) -> cons1(X1, X2)
   cons1(X1, active(X2)) -> cons1(X1, X2)
   cons(mark(X1), X2) -> cons(X1, X2)
   cons(X1, mark(X2)) -> cons(X1, X2)
   cons(active(X1), X2) -> cons(X1, X2)
   cons(X1, active(X2)) -> cons(X1, X2)
   from(mark(X)) -> from(X)
   from(active(X)) -> from(X)
   s(mark(X)) -> s(X)
   s(active(X)) -> s(X)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(16) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(17)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   CONS(X1, mark(X2)) -> CONS(X1, X2)
   CONS(mark(X1), X2) -> CONS(X1, X2)
   CONS(active(X1), X2) -> CONS(X1, X2)
   CONS(X1, active(X2)) -> CONS(X1, X2)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(18) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*CONS(X1, mark(X2)) -> CONS(X1, X2)
The graph contains the following edges 1 >= 1, 2 > 2


*CONS(mark(X1), X2) -> CONS(X1, X2)
The graph contains the following edges 1 > 1, 2 >= 2


*CONS(active(X1), X2) -> CONS(X1, X2)
The graph contains the following edges 1 > 1, 2 >= 2


*CONS(X1, active(X2)) -> CONS(X1, X2)
The graph contains the following edges 1 >= 1, 2 > 2


----------------------------------------

(19)
YES

----------------------------------------

(20)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   CONS1(X1, mark(X2)) -> CONS1(X1, X2)
   CONS1(mark(X1), X2) -> CONS1(X1, X2)
   CONS1(active(X1), X2) -> CONS1(X1, X2)
   CONS1(X1, active(X2)) -> CONS1(X1, X2)

The TRS R consists of the following rules:

   active(2nd(cons1(X, cons(Y, Z)))) -> mark(Y)
   active(2nd(cons(X, X1))) -> mark(2nd(cons1(X, X1)))
   active(from(X)) -> mark(cons(X, from(s(X))))
   mark(2nd(X)) -> active(2nd(mark(X)))
   mark(cons1(X1, X2)) -> active(cons1(mark(X1), mark(X2)))
   mark(cons(X1, X2)) -> active(cons(mark(X1), X2))
   mark(from(X)) -> active(from(mark(X)))
   mark(s(X)) -> active(s(mark(X)))
   2nd(mark(X)) -> 2nd(X)
   2nd(active(X)) -> 2nd(X)
   cons1(mark(X1), X2) -> cons1(X1, X2)
   cons1(X1, mark(X2)) -> cons1(X1, X2)
   cons1(active(X1), X2) -> cons1(X1, X2)
   cons1(X1, active(X2)) -> cons1(X1, X2)
   cons(mark(X1), X2) -> cons(X1, X2)
   cons(X1, mark(X2)) -> cons(X1, X2)
   cons(active(X1), X2) -> cons(X1, X2)
   cons(X1, active(X2)) -> cons(X1, X2)
   from(mark(X)) -> from(X)
   from(active(X)) -> from(X)
   s(mark(X)) -> s(X)
   s(active(X)) -> s(X)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(21) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(22)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   CONS1(X1, mark(X2)) -> CONS1(X1, X2)
   CONS1(mark(X1), X2) -> CONS1(X1, X2)
   CONS1(active(X1), X2) -> CONS1(X1, X2)
   CONS1(X1, active(X2)) -> CONS1(X1, X2)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(23) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*CONS1(X1, mark(X2)) -> CONS1(X1, X2)
The graph contains the following edges 1 >= 1, 2 > 2


*CONS1(mark(X1), X2) -> CONS1(X1, X2)
The graph contains the following edges 1 > 1, 2 >= 2


*CONS1(active(X1), X2) -> CONS1(X1, X2)
The graph contains the following edges 1 > 1, 2 >= 2


*CONS1(X1, active(X2)) -> CONS1(X1, X2)
The graph contains the following edges 1 >= 1, 2 > 2


----------------------------------------

(24)
YES

----------------------------------------

(25)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   2ND(active(X)) -> 2ND(X)
   2ND(mark(X)) -> 2ND(X)

The TRS R consists of the following rules:

   active(2nd(cons1(X, cons(Y, Z)))) -> mark(Y)
   active(2nd(cons(X, X1))) -> mark(2nd(cons1(X, X1)))
   active(from(X)) -> mark(cons(X, from(s(X))))
   mark(2nd(X)) -> active(2nd(mark(X)))
   mark(cons1(X1, X2)) -> active(cons1(mark(X1), mark(X2)))
   mark(cons(X1, X2)) -> active(cons(mark(X1), X2))
   mark(from(X)) -> active(from(mark(X)))
   mark(s(X)) -> active(s(mark(X)))
   2nd(mark(X)) -> 2nd(X)
   2nd(active(X)) -> 2nd(X)
   cons1(mark(X1), X2) -> cons1(X1, X2)
   cons1(X1, mark(X2)) -> cons1(X1, X2)
   cons1(active(X1), X2) -> cons1(X1, X2)
   cons1(X1, active(X2)) -> cons1(X1, X2)
   cons(mark(X1), X2) -> cons(X1, X2)
   cons(X1, mark(X2)) -> cons(X1, X2)
   cons(active(X1), X2) -> cons(X1, X2)
   cons(X1, active(X2)) -> cons(X1, X2)
   from(mark(X)) -> from(X)
   from(active(X)) -> from(X)
   s(mark(X)) -> s(X)
   s(active(X)) -> s(X)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(26) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(27)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   2ND(active(X)) -> 2ND(X)
   2ND(mark(X)) -> 2ND(X)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(28) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*2ND(active(X)) -> 2ND(X)
The graph contains the following edges 1 > 1


*2ND(mark(X)) -> 2ND(X)
The graph contains the following edges 1 > 1


----------------------------------------

(29)
YES

----------------------------------------

(30)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(2nd(X)) -> ACTIVE(2nd(mark(X)))
   ACTIVE(2nd(cons1(X, cons(Y, Z)))) -> MARK(Y)
   MARK(2nd(X)) -> MARK(X)
   MARK(cons1(X1, X2)) -> ACTIVE(cons1(mark(X1), mark(X2)))
   ACTIVE(2nd(cons(X, X1))) -> MARK(2nd(cons1(X, X1)))
   MARK(cons1(X1, X2)) -> MARK(X1)
   MARK(cons1(X1, X2)) -> MARK(X2)
   MARK(cons(X1, X2)) -> ACTIVE(cons(mark(X1), X2))
   ACTIVE(from(X)) -> MARK(cons(X, from(s(X))))
   MARK(cons(X1, X2)) -> MARK(X1)
   MARK(from(X)) -> ACTIVE(from(mark(X)))
   MARK(from(X)) -> MARK(X)
   MARK(s(X)) -> ACTIVE(s(mark(X)))
   MARK(s(X)) -> MARK(X)

The TRS R consists of the following rules:

   active(2nd(cons1(X, cons(Y, Z)))) -> mark(Y)
   active(2nd(cons(X, X1))) -> mark(2nd(cons1(X, X1)))
   active(from(X)) -> mark(cons(X, from(s(X))))
   mark(2nd(X)) -> active(2nd(mark(X)))
   mark(cons1(X1, X2)) -> active(cons1(mark(X1), mark(X2)))
   mark(cons(X1, X2)) -> active(cons(mark(X1), X2))
   mark(from(X)) -> active(from(mark(X)))
   mark(s(X)) -> active(s(mark(X)))
   2nd(mark(X)) -> 2nd(X)
   2nd(active(X)) -> 2nd(X)
   cons1(mark(X1), X2) -> cons1(X1, X2)
   cons1(X1, mark(X2)) -> cons1(X1, X2)
   cons1(active(X1), X2) -> cons1(X1, X2)
   cons1(X1, active(X2)) -> cons1(X1, X2)
   cons(mark(X1), X2) -> cons(X1, X2)
   cons(X1, mark(X2)) -> cons(X1, X2)
   cons(active(X1), X2) -> cons(X1, X2)
   cons(X1, active(X2)) -> cons(X1, X2)
   from(mark(X)) -> from(X)
   from(active(X)) -> from(X)
   s(mark(X)) -> s(X)
   s(active(X)) -> s(X)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(31) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   MARK(s(X)) -> ACTIVE(s(mark(X)))
The remaining pairs can at least be oriented weakly.
Used ordering:  Combined order from the following AFS and order.
MARK(x1)  =  MARK

2nd(x1)  =  2nd

ACTIVE(x1)  =  x1

mark(x1)  =  mark

cons1(x1, x2)  =  cons1

cons(x1, x2)  =  cons

from(x1)  =  from

s(x1)  =  s

active(x1)  =  active


Recursive path order with status [RPO].
Quasi-Precedence: [MARK, 2nd, mark, cons1, cons, from, active] > s

Status: MARK: multiset status
2nd: multiset status
mark: multiset status
cons1: multiset status
cons: multiset status
from: multiset status
s: multiset status
active: multiset status


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   2nd(active(X)) -> 2nd(X)
   2nd(mark(X)) -> 2nd(X)
   cons1(X1, mark(X2)) -> cons1(X1, X2)
   cons1(mark(X1), X2) -> cons1(X1, X2)
   cons1(active(X1), X2) -> cons1(X1, X2)
   cons1(X1, active(X2)) -> cons1(X1, X2)
   cons(X1, mark(X2)) -> cons(X1, X2)
   cons(mark(X1), X2) -> cons(X1, X2)
   cons(active(X1), X2) -> cons(X1, X2)
   cons(X1, active(X2)) -> cons(X1, X2)
   s(active(X)) -> s(X)
   s(mark(X)) -> s(X)
   from(active(X)) -> from(X)
   from(mark(X)) -> from(X)


----------------------------------------

(32)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(2nd(X)) -> ACTIVE(2nd(mark(X)))
   ACTIVE(2nd(cons1(X, cons(Y, Z)))) -> MARK(Y)
   MARK(2nd(X)) -> MARK(X)
   MARK(cons1(X1, X2)) -> ACTIVE(cons1(mark(X1), mark(X2)))
   ACTIVE(2nd(cons(X, X1))) -> MARK(2nd(cons1(X, X1)))
   MARK(cons1(X1, X2)) -> MARK(X1)
   MARK(cons1(X1, X2)) -> MARK(X2)
   MARK(cons(X1, X2)) -> ACTIVE(cons(mark(X1), X2))
   ACTIVE(from(X)) -> MARK(cons(X, from(s(X))))
   MARK(cons(X1, X2)) -> MARK(X1)
   MARK(from(X)) -> ACTIVE(from(mark(X)))
   MARK(from(X)) -> MARK(X)
   MARK(s(X)) -> MARK(X)

The TRS R consists of the following rules:

   active(2nd(cons1(X, cons(Y, Z)))) -> mark(Y)
   active(2nd(cons(X, X1))) -> mark(2nd(cons1(X, X1)))
   active(from(X)) -> mark(cons(X, from(s(X))))
   mark(2nd(X)) -> active(2nd(mark(X)))
   mark(cons1(X1, X2)) -> active(cons1(mark(X1), mark(X2)))
   mark(cons(X1, X2)) -> active(cons(mark(X1), X2))
   mark(from(X)) -> active(from(mark(X)))
   mark(s(X)) -> active(s(mark(X)))
   2nd(mark(X)) -> 2nd(X)
   2nd(active(X)) -> 2nd(X)
   cons1(mark(X1), X2) -> cons1(X1, X2)
   cons1(X1, mark(X2)) -> cons1(X1, X2)
   cons1(active(X1), X2) -> cons1(X1, X2)
   cons1(X1, active(X2)) -> cons1(X1, X2)
   cons(mark(X1), X2) -> cons(X1, X2)
   cons(X1, mark(X2)) -> cons(X1, X2)
   cons(active(X1), X2) -> cons(X1, X2)
   cons(X1, active(X2)) -> cons(X1, X2)
   from(mark(X)) -> from(X)
   from(active(X)) -> from(X)
   s(mark(X)) -> s(X)
   s(active(X)) -> s(X)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(33) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   MARK(cons1(X1, X2)) -> ACTIVE(cons1(mark(X1), mark(X2)))
   MARK(cons(X1, X2)) -> ACTIVE(cons(mark(X1), X2))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(2nd(x_1)) = 1
   POL(ACTIVE(x_1)) = x_1
   POL(MARK(x_1)) = 1
   POL(active(x_1)) = 0
   POL(cons(x_1, x_2)) = 0
   POL(cons1(x_1, x_2)) = 0
   POL(from(x_1)) = 1
   POL(mark(x_1)) = 0
   POL(s(x_1)) = x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   2nd(active(X)) -> 2nd(X)
   2nd(mark(X)) -> 2nd(X)
   cons1(X1, mark(X2)) -> cons1(X1, X2)
   cons1(mark(X1), X2) -> cons1(X1, X2)
   cons1(active(X1), X2) -> cons1(X1, X2)
   cons1(X1, active(X2)) -> cons1(X1, X2)
   cons(X1, mark(X2)) -> cons(X1, X2)
   cons(mark(X1), X2) -> cons(X1, X2)
   cons(active(X1), X2) -> cons(X1, X2)
   cons(X1, active(X2)) -> cons(X1, X2)
   from(active(X)) -> from(X)
   from(mark(X)) -> from(X)


----------------------------------------

(34)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(2nd(X)) -> ACTIVE(2nd(mark(X)))
   ACTIVE(2nd(cons1(X, cons(Y, Z)))) -> MARK(Y)
   MARK(2nd(X)) -> MARK(X)
   ACTIVE(2nd(cons(X, X1))) -> MARK(2nd(cons1(X, X1)))
   MARK(cons1(X1, X2)) -> MARK(X1)
   MARK(cons1(X1, X2)) -> MARK(X2)
   ACTIVE(from(X)) -> MARK(cons(X, from(s(X))))
   MARK(cons(X1, X2)) -> MARK(X1)
   MARK(from(X)) -> ACTIVE(from(mark(X)))
   MARK(from(X)) -> MARK(X)
   MARK(s(X)) -> MARK(X)

The TRS R consists of the following rules:

   active(2nd(cons1(X, cons(Y, Z)))) -> mark(Y)
   active(2nd(cons(X, X1))) -> mark(2nd(cons1(X, X1)))
   active(from(X)) -> mark(cons(X, from(s(X))))
   mark(2nd(X)) -> active(2nd(mark(X)))
   mark(cons1(X1, X2)) -> active(cons1(mark(X1), mark(X2)))
   mark(cons(X1, X2)) -> active(cons(mark(X1), X2))
   mark(from(X)) -> active(from(mark(X)))
   mark(s(X)) -> active(s(mark(X)))
   2nd(mark(X)) -> 2nd(X)
   2nd(active(X)) -> 2nd(X)
   cons1(mark(X1), X2) -> cons1(X1, X2)
   cons1(X1, mark(X2)) -> cons1(X1, X2)
   cons1(active(X1), X2) -> cons1(X1, X2)
   cons1(X1, active(X2)) -> cons1(X1, X2)
   cons(mark(X1), X2) -> cons(X1, X2)
   cons(X1, mark(X2)) -> cons(X1, X2)
   cons(active(X1), X2) -> cons(X1, X2)
   cons(X1, active(X2)) -> cons(X1, X2)
   from(mark(X)) -> from(X)
   from(active(X)) -> from(X)
   s(mark(X)) -> s(X)
   s(active(X)) -> s(X)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(35) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   ACTIVE(2nd(cons1(X, cons(Y, Z)))) -> MARK(Y)
The remaining pairs can at least be oriented weakly.
Used ordering:  Matrix interpretation [MATRO] with arctic natural numbers [ARCTIC]:

   <<<
 POL(MARK(x_1)) =  	[[0A]] 	 +  	[[0A]] 	* 	x_1
>>>

   <<<
 POL(2nd(x_1)) =  	[[1A]] 	 +  	[[0A]] 	* 	x_1
>>>

   <<<
 POL(ACTIVE(x_1)) =  	[[0A]] 	 +  	[[0A]] 	* 	x_1
>>>

   <<<
 POL(mark(x_1)) =  	[[-I]] 	 +  	[[0A]] 	* 	x_1
>>>

   <<<
 POL(cons1(x_1, x_2)) =  	[[-I]] 	 +  	[[0A]] 	* 	x_1 	 +  	[[0A]] 	* 	x_2
>>>

   <<<
 POL(cons(x_1, x_2)) =  	[[-I]] 	 +  	[[1A]] 	* 	x_1 	 +  	[[0A]] 	* 	x_2
>>>

   <<<
 POL(from(x_1)) =  	[[-I]] 	 +  	[[1A]] 	* 	x_1
>>>

   <<<
 POL(s(x_1)) =  	[[-I]] 	 +  	[[0A]] 	* 	x_1
>>>

   <<<
 POL(active(x_1)) =  	[[-I]] 	 +  	[[0A]] 	* 	x_1
>>>


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   mark(2nd(X)) -> active(2nd(mark(X)))
   active(2nd(cons1(X, cons(Y, Z)))) -> mark(Y)
   mark(cons1(X1, X2)) -> active(cons1(mark(X1), mark(X2)))
   active(2nd(cons(X, X1))) -> mark(2nd(cons1(X, X1)))
   mark(cons(X1, X2)) -> active(cons(mark(X1), X2))
   active(from(X)) -> mark(cons(X, from(s(X))))
   mark(from(X)) -> active(from(mark(X)))
   mark(s(X)) -> active(s(mark(X)))
   2nd(active(X)) -> 2nd(X)
   2nd(mark(X)) -> 2nd(X)
   cons1(X1, mark(X2)) -> cons1(X1, X2)
   cons1(mark(X1), X2) -> cons1(X1, X2)
   cons1(active(X1), X2) -> cons1(X1, X2)
   cons1(X1, active(X2)) -> cons1(X1, X2)
   s(active(X)) -> s(X)
   s(mark(X)) -> s(X)
   from(active(X)) -> from(X)
   from(mark(X)) -> from(X)
   cons(X1, mark(X2)) -> cons(X1, X2)
   cons(mark(X1), X2) -> cons(X1, X2)
   cons(active(X1), X2) -> cons(X1, X2)
   cons(X1, active(X2)) -> cons(X1, X2)


----------------------------------------

(36)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(2nd(X)) -> ACTIVE(2nd(mark(X)))
   MARK(2nd(X)) -> MARK(X)
   ACTIVE(2nd(cons(X, X1))) -> MARK(2nd(cons1(X, X1)))
   MARK(cons1(X1, X2)) -> MARK(X1)
   MARK(cons1(X1, X2)) -> MARK(X2)
   ACTIVE(from(X)) -> MARK(cons(X, from(s(X))))
   MARK(cons(X1, X2)) -> MARK(X1)
   MARK(from(X)) -> ACTIVE(from(mark(X)))
   MARK(from(X)) -> MARK(X)
   MARK(s(X)) -> MARK(X)

The TRS R consists of the following rules:

   active(2nd(cons1(X, cons(Y, Z)))) -> mark(Y)
   active(2nd(cons(X, X1))) -> mark(2nd(cons1(X, X1)))
   active(from(X)) -> mark(cons(X, from(s(X))))
   mark(2nd(X)) -> active(2nd(mark(X)))
   mark(cons1(X1, X2)) -> active(cons1(mark(X1), mark(X2)))
   mark(cons(X1, X2)) -> active(cons(mark(X1), X2))
   mark(from(X)) -> active(from(mark(X)))
   mark(s(X)) -> active(s(mark(X)))
   2nd(mark(X)) -> 2nd(X)
   2nd(active(X)) -> 2nd(X)
   cons1(mark(X1), X2) -> cons1(X1, X2)
   cons1(X1, mark(X2)) -> cons1(X1, X2)
   cons1(active(X1), X2) -> cons1(X1, X2)
   cons1(X1, active(X2)) -> cons1(X1, X2)
   cons(mark(X1), X2) -> cons(X1, X2)
   cons(X1, mark(X2)) -> cons(X1, X2)
   cons(active(X1), X2) -> cons(X1, X2)
   cons(X1, active(X2)) -> cons(X1, X2)
   from(mark(X)) -> from(X)
   from(active(X)) -> from(X)
   s(mark(X)) -> s(X)
   s(active(X)) -> s(X)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(37) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   MARK(from(X)) -> MARK(X)
The remaining pairs can at least be oriented weakly.
Used ordering:  Matrix interpretation [MATRO] with arctic natural numbers [ARCTIC]:

   <<<
 POL(MARK(x_1)) =  	[[0A]] 	 +  	[[0A]] 	* 	x_1
>>>

   <<<
 POL(2nd(x_1)) =  	[[-I]] 	 +  	[[0A]] 	* 	x_1
>>>

   <<<
 POL(ACTIVE(x_1)) =  	[[0A]] 	 +  	[[0A]] 	* 	x_1
>>>

   <<<
 POL(mark(x_1)) =  	[[-I]] 	 +  	[[0A]] 	* 	x_1
>>>

   <<<
 POL(cons(x_1, x_2)) =  	[[-I]] 	 +  	[[0A]] 	* 	x_1 	 +  	[[0A]] 	* 	x_2
>>>

   <<<
 POL(cons1(x_1, x_2)) =  	[[-I]] 	 +  	[[0A]] 	* 	x_1 	 +  	[[0A]] 	* 	x_2
>>>

   <<<
 POL(from(x_1)) =  	[[1A]] 	 +  	[[1A]] 	* 	x_1
>>>

   <<<
 POL(s(x_1)) =  	[[-I]] 	 +  	[[0A]] 	* 	x_1
>>>

   <<<
 POL(active(x_1)) =  	[[-I]] 	 +  	[[0A]] 	* 	x_1
>>>


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   mark(2nd(X)) -> active(2nd(mark(X)))
   active(2nd(cons1(X, cons(Y, Z)))) -> mark(Y)
   mark(cons1(X1, X2)) -> active(cons1(mark(X1), mark(X2)))
   active(2nd(cons(X, X1))) -> mark(2nd(cons1(X, X1)))
   mark(cons(X1, X2)) -> active(cons(mark(X1), X2))
   active(from(X)) -> mark(cons(X, from(s(X))))
   mark(from(X)) -> active(from(mark(X)))
   mark(s(X)) -> active(s(mark(X)))
   2nd(active(X)) -> 2nd(X)
   2nd(mark(X)) -> 2nd(X)
   cons1(X1, mark(X2)) -> cons1(X1, X2)
   cons1(mark(X1), X2) -> cons1(X1, X2)
   cons1(active(X1), X2) -> cons1(X1, X2)
   cons1(X1, active(X2)) -> cons1(X1, X2)
   s(active(X)) -> s(X)
   s(mark(X)) -> s(X)
   from(active(X)) -> from(X)
   from(mark(X)) -> from(X)
   cons(X1, mark(X2)) -> cons(X1, X2)
   cons(mark(X1), X2) -> cons(X1, X2)
   cons(active(X1), X2) -> cons(X1, X2)
   cons(X1, active(X2)) -> cons(X1, X2)


----------------------------------------

(38)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(2nd(X)) -> ACTIVE(2nd(mark(X)))
   MARK(2nd(X)) -> MARK(X)
   ACTIVE(2nd(cons(X, X1))) -> MARK(2nd(cons1(X, X1)))
   MARK(cons1(X1, X2)) -> MARK(X1)
   MARK(cons1(X1, X2)) -> MARK(X2)
   ACTIVE(from(X)) -> MARK(cons(X, from(s(X))))
   MARK(cons(X1, X2)) -> MARK(X1)
   MARK(from(X)) -> ACTIVE(from(mark(X)))
   MARK(s(X)) -> MARK(X)

The TRS R consists of the following rules:

   active(2nd(cons1(X, cons(Y, Z)))) -> mark(Y)
   active(2nd(cons(X, X1))) -> mark(2nd(cons1(X, X1)))
   active(from(X)) -> mark(cons(X, from(s(X))))
   mark(2nd(X)) -> active(2nd(mark(X)))
   mark(cons1(X1, X2)) -> active(cons1(mark(X1), mark(X2)))
   mark(cons(X1, X2)) -> active(cons(mark(X1), X2))
   mark(from(X)) -> active(from(mark(X)))
   mark(s(X)) -> active(s(mark(X)))
   2nd(mark(X)) -> 2nd(X)
   2nd(active(X)) -> 2nd(X)
   cons1(mark(X1), X2) -> cons1(X1, X2)
   cons1(X1, mark(X2)) -> cons1(X1, X2)
   cons1(active(X1), X2) -> cons1(X1, X2)
   cons1(X1, active(X2)) -> cons1(X1, X2)
   cons(mark(X1), X2) -> cons(X1, X2)
   cons(X1, mark(X2)) -> cons(X1, X2)
   cons(active(X1), X2) -> cons(X1, X2)
   cons(X1, active(X2)) -> cons(X1, X2)
   from(mark(X)) -> from(X)
   from(active(X)) -> from(X)
   s(mark(X)) -> s(X)
   s(active(X)) -> s(X)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(39) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   MARK(2nd(X)) -> MARK(X)
The remaining pairs can at least be oriented weakly.
Used ordering:  Matrix interpretation [MATRO] with arctic natural numbers [ARCTIC]:

   <<<
 POL(MARK(x_1)) =  	[[0A]] 	 +  	[[0A]] 	* 	x_1
>>>

   <<<
 POL(2nd(x_1)) =  	[[1A]] 	 +  	[[1A]] 	* 	x_1
>>>

   <<<
 POL(ACTIVE(x_1)) =  	[[0A]] 	 +  	[[0A]] 	* 	x_1
>>>

   <<<
 POL(mark(x_1)) =  	[[-I]] 	 +  	[[0A]] 	* 	x_1
>>>

   <<<
 POL(cons(x_1, x_2)) =  	[[-I]] 	 +  	[[0A]] 	* 	x_1 	 +  	[[0A]] 	* 	x_2
>>>

   <<<
 POL(cons1(x_1, x_2)) =  	[[-I]] 	 +  	[[0A]] 	* 	x_1 	 +  	[[0A]] 	* 	x_2
>>>

   <<<
 POL(from(x_1)) =  	[[-I]] 	 +  	[[0A]] 	* 	x_1
>>>

   <<<
 POL(s(x_1)) =  	[[-I]] 	 +  	[[0A]] 	* 	x_1
>>>

   <<<
 POL(active(x_1)) =  	[[-I]] 	 +  	[[0A]] 	* 	x_1
>>>


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   mark(2nd(X)) -> active(2nd(mark(X)))
   active(2nd(cons1(X, cons(Y, Z)))) -> mark(Y)
   mark(cons1(X1, X2)) -> active(cons1(mark(X1), mark(X2)))
   active(2nd(cons(X, X1))) -> mark(2nd(cons1(X, X1)))
   mark(cons(X1, X2)) -> active(cons(mark(X1), X2))
   active(from(X)) -> mark(cons(X, from(s(X))))
   mark(from(X)) -> active(from(mark(X)))
   mark(s(X)) -> active(s(mark(X)))
   2nd(active(X)) -> 2nd(X)
   2nd(mark(X)) -> 2nd(X)
   cons1(X1, mark(X2)) -> cons1(X1, X2)
   cons1(mark(X1), X2) -> cons1(X1, X2)
   cons1(active(X1), X2) -> cons1(X1, X2)
   cons1(X1, active(X2)) -> cons1(X1, X2)
   s(active(X)) -> s(X)
   s(mark(X)) -> s(X)
   from(active(X)) -> from(X)
   from(mark(X)) -> from(X)
   cons(X1, mark(X2)) -> cons(X1, X2)
   cons(mark(X1), X2) -> cons(X1, X2)
   cons(active(X1), X2) -> cons(X1, X2)
   cons(X1, active(X2)) -> cons(X1, X2)


----------------------------------------

(40)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(2nd(X)) -> ACTIVE(2nd(mark(X)))
   ACTIVE(2nd(cons(X, X1))) -> MARK(2nd(cons1(X, X1)))
   MARK(cons1(X1, X2)) -> MARK(X1)
   MARK(cons1(X1, X2)) -> MARK(X2)
   ACTIVE(from(X)) -> MARK(cons(X, from(s(X))))
   MARK(cons(X1, X2)) -> MARK(X1)
   MARK(from(X)) -> ACTIVE(from(mark(X)))
   MARK(s(X)) -> MARK(X)

The TRS R consists of the following rules:

   active(2nd(cons1(X, cons(Y, Z)))) -> mark(Y)
   active(2nd(cons(X, X1))) -> mark(2nd(cons1(X, X1)))
   active(from(X)) -> mark(cons(X, from(s(X))))
   mark(2nd(X)) -> active(2nd(mark(X)))
   mark(cons1(X1, X2)) -> active(cons1(mark(X1), mark(X2)))
   mark(cons(X1, X2)) -> active(cons(mark(X1), X2))
   mark(from(X)) -> active(from(mark(X)))
   mark(s(X)) -> active(s(mark(X)))
   2nd(mark(X)) -> 2nd(X)
   2nd(active(X)) -> 2nd(X)
   cons1(mark(X1), X2) -> cons1(X1, X2)
   cons1(X1, mark(X2)) -> cons1(X1, X2)
   cons1(active(X1), X2) -> cons1(X1, X2)
   cons1(X1, active(X2)) -> cons1(X1, X2)
   cons(mark(X1), X2) -> cons(X1, X2)
   cons(X1, mark(X2)) -> cons(X1, X2)
   cons(active(X1), X2) -> cons(X1, X2)
   cons(X1, active(X2)) -> cons(X1, X2)
   from(mark(X)) -> from(X)
   from(active(X)) -> from(X)
   s(mark(X)) -> s(X)
   s(active(X)) -> s(X)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(41) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   MARK(cons1(X1, X2)) -> MARK(X1)
   MARK(cons(X1, X2)) -> MARK(X1)
The remaining pairs can at least be oriented weakly.
Used ordering:  Matrix interpretation [MATRO] with arctic natural numbers [ARCTIC]:

   <<<
 POL(MARK(x_1)) =  	[[0A]] 	 +  	[[0A]] 	* 	x_1
>>>

   <<<
 POL(2nd(x_1)) =  	[[-I]] 	 +  	[[0A]] 	* 	x_1
>>>

   <<<
 POL(ACTIVE(x_1)) =  	[[-I]] 	 +  	[[0A]] 	* 	x_1
>>>

   <<<
 POL(mark(x_1)) =  	[[-I]] 	 +  	[[0A]] 	* 	x_1
>>>

   <<<
 POL(cons(x_1, x_2)) =  	[[1A]] 	 +  	[[1A]] 	* 	x_1 	 +  	[[0A]] 	* 	x_2
>>>

   <<<
 POL(cons1(x_1, x_2)) =  	[[1A]] 	 +  	[[1A]] 	* 	x_1 	 +  	[[0A]] 	* 	x_2
>>>

   <<<
 POL(from(x_1)) =  	[[1A]] 	 +  	[[1A]] 	* 	x_1
>>>

   <<<
 POL(s(x_1)) =  	[[-I]] 	 +  	[[0A]] 	* 	x_1
>>>

   <<<
 POL(active(x_1)) =  	[[-I]] 	 +  	[[0A]] 	* 	x_1
>>>


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   mark(2nd(X)) -> active(2nd(mark(X)))
   active(2nd(cons1(X, cons(Y, Z)))) -> mark(Y)
   mark(cons1(X1, X2)) -> active(cons1(mark(X1), mark(X2)))
   active(2nd(cons(X, X1))) -> mark(2nd(cons1(X, X1)))
   mark(cons(X1, X2)) -> active(cons(mark(X1), X2))
   active(from(X)) -> mark(cons(X, from(s(X))))
   mark(from(X)) -> active(from(mark(X)))
   mark(s(X)) -> active(s(mark(X)))
   2nd(active(X)) -> 2nd(X)
   2nd(mark(X)) -> 2nd(X)
   cons1(X1, mark(X2)) -> cons1(X1, X2)
   cons1(mark(X1), X2) -> cons1(X1, X2)
   cons1(active(X1), X2) -> cons1(X1, X2)
   cons1(X1, active(X2)) -> cons1(X1, X2)
   s(active(X)) -> s(X)
   s(mark(X)) -> s(X)
   from(active(X)) -> from(X)
   from(mark(X)) -> from(X)
   cons(X1, mark(X2)) -> cons(X1, X2)
   cons(mark(X1), X2) -> cons(X1, X2)
   cons(active(X1), X2) -> cons(X1, X2)
   cons(X1, active(X2)) -> cons(X1, X2)


----------------------------------------

(42)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(2nd(X)) -> ACTIVE(2nd(mark(X)))
   ACTIVE(2nd(cons(X, X1))) -> MARK(2nd(cons1(X, X1)))
   MARK(cons1(X1, X2)) -> MARK(X2)
   ACTIVE(from(X)) -> MARK(cons(X, from(s(X))))
   MARK(from(X)) -> ACTIVE(from(mark(X)))
   MARK(s(X)) -> MARK(X)

The TRS R consists of the following rules:

   active(2nd(cons1(X, cons(Y, Z)))) -> mark(Y)
   active(2nd(cons(X, X1))) -> mark(2nd(cons1(X, X1)))
   active(from(X)) -> mark(cons(X, from(s(X))))
   mark(2nd(X)) -> active(2nd(mark(X)))
   mark(cons1(X1, X2)) -> active(cons1(mark(X1), mark(X2)))
   mark(cons(X1, X2)) -> active(cons(mark(X1), X2))
   mark(from(X)) -> active(from(mark(X)))
   mark(s(X)) -> active(s(mark(X)))
   2nd(mark(X)) -> 2nd(X)
   2nd(active(X)) -> 2nd(X)
   cons1(mark(X1), X2) -> cons1(X1, X2)
   cons1(X1, mark(X2)) -> cons1(X1, X2)
   cons1(active(X1), X2) -> cons1(X1, X2)
   cons1(X1, active(X2)) -> cons1(X1, X2)
   cons(mark(X1), X2) -> cons(X1, X2)
   cons(X1, mark(X2)) -> cons(X1, X2)
   cons(active(X1), X2) -> cons(X1, X2)
   cons(X1, active(X2)) -> cons(X1, X2)
   from(mark(X)) -> from(X)
   from(active(X)) -> from(X)
   s(mark(X)) -> s(X)
   s(active(X)) -> s(X)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(43) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   ACTIVE(from(X)) -> MARK(cons(X, from(s(X))))
The remaining pairs can at least be oriented weakly.
Used ordering:  Combined order from the following AFS and order.
MARK(x1)  =  x1

2nd(x1)  =  2nd

ACTIVE(x1)  =  x1

cons1(x1, x2)  =  x2

from(x1)  =  from

cons(x1, x2)  =  cons

s(x1)  =  x1


Knuth-Bendix order [KBO] with precedence:trivial

and weight map:

   2nd=1
   from=3
   cons=2

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   2nd(active(X)) -> 2nd(X)
   2nd(mark(X)) -> 2nd(X)
   from(active(X)) -> from(X)
   from(mark(X)) -> from(X)
   cons(X1, mark(X2)) -> cons(X1, X2)
   cons(mark(X1), X2) -> cons(X1, X2)
   cons(active(X1), X2) -> cons(X1, X2)
   cons(X1, active(X2)) -> cons(X1, X2)


----------------------------------------

(44)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(2nd(X)) -> ACTIVE(2nd(mark(X)))
   ACTIVE(2nd(cons(X, X1))) -> MARK(2nd(cons1(X, X1)))
   MARK(cons1(X1, X2)) -> MARK(X2)
   MARK(from(X)) -> ACTIVE(from(mark(X)))
   MARK(s(X)) -> MARK(X)

The TRS R consists of the following rules:

   active(2nd(cons1(X, cons(Y, Z)))) -> mark(Y)
   active(2nd(cons(X, X1))) -> mark(2nd(cons1(X, X1)))
   active(from(X)) -> mark(cons(X, from(s(X))))
   mark(2nd(X)) -> active(2nd(mark(X)))
   mark(cons1(X1, X2)) -> active(cons1(mark(X1), mark(X2)))
   mark(cons(X1, X2)) -> active(cons(mark(X1), X2))
   mark(from(X)) -> active(from(mark(X)))
   mark(s(X)) -> active(s(mark(X)))
   2nd(mark(X)) -> 2nd(X)
   2nd(active(X)) -> 2nd(X)
   cons1(mark(X1), X2) -> cons1(X1, X2)
   cons1(X1, mark(X2)) -> cons1(X1, X2)
   cons1(active(X1), X2) -> cons1(X1, X2)
   cons1(X1, active(X2)) -> cons1(X1, X2)
   cons(mark(X1), X2) -> cons(X1, X2)
   cons(X1, mark(X2)) -> cons(X1, X2)
   cons(active(X1), X2) -> cons(X1, X2)
   cons(X1, active(X2)) -> cons(X1, X2)
   from(mark(X)) -> from(X)
   from(active(X)) -> from(X)
   s(mark(X)) -> s(X)
   s(active(X)) -> s(X)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(45) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   MARK(s(X)) -> MARK(X)
The remaining pairs can at least be oriented weakly.
Used ordering:  Combined order from the following AFS and order.
MARK(x1)  =  x1

2nd(x1)  =  2nd

ACTIVE(x1)  =  x1

cons1(x1, x2)  =  x2

from(x1)  =  from

s(x1)  =  s(x1)


Knuth-Bendix order [KBO] with precedence:trivial

and weight map:

   s_1=1
   2nd=1
   from=2

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   2nd(active(X)) -> 2nd(X)
   2nd(mark(X)) -> 2nd(X)
   from(active(X)) -> from(X)
   from(mark(X)) -> from(X)


----------------------------------------

(46)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(2nd(X)) -> ACTIVE(2nd(mark(X)))
   ACTIVE(2nd(cons(X, X1))) -> MARK(2nd(cons1(X, X1)))
   MARK(cons1(X1, X2)) -> MARK(X2)
   MARK(from(X)) -> ACTIVE(from(mark(X)))

The TRS R consists of the following rules:

   active(2nd(cons1(X, cons(Y, Z)))) -> mark(Y)
   active(2nd(cons(X, X1))) -> mark(2nd(cons1(X, X1)))
   active(from(X)) -> mark(cons(X, from(s(X))))
   mark(2nd(X)) -> active(2nd(mark(X)))
   mark(cons1(X1, X2)) -> active(cons1(mark(X1), mark(X2)))
   mark(cons(X1, X2)) -> active(cons(mark(X1), X2))
   mark(from(X)) -> active(from(mark(X)))
   mark(s(X)) -> active(s(mark(X)))
   2nd(mark(X)) -> 2nd(X)
   2nd(active(X)) -> 2nd(X)
   cons1(mark(X1), X2) -> cons1(X1, X2)
   cons1(X1, mark(X2)) -> cons1(X1, X2)
   cons1(active(X1), X2) -> cons1(X1, X2)
   cons1(X1, active(X2)) -> cons1(X1, X2)
   cons(mark(X1), X2) -> cons(X1, X2)
   cons(X1, mark(X2)) -> cons(X1, X2)
   cons(active(X1), X2) -> cons(X1, X2)
   cons(X1, active(X2)) -> cons(X1, X2)
   from(mark(X)) -> from(X)
   from(active(X)) -> from(X)
   s(mark(X)) -> s(X)
   s(active(X)) -> s(X)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(47) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   MARK(cons1(X1, X2)) -> MARK(X2)
The remaining pairs can at least be oriented weakly.
Used ordering:  Combined order from the following AFS and order.
MARK(x1)  =  x1

2nd(x1)  =  2nd

ACTIVE(x1)  =  x1

cons1(x1, x2)  =  cons1(x2)

from(x1)  =  from


Knuth-Bendix order [KBO] with precedence:trivial

and weight map:

   2nd=1
   from=2
   cons1_1=1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   2nd(active(X)) -> 2nd(X)
   2nd(mark(X)) -> 2nd(X)
   from(active(X)) -> from(X)
   from(mark(X)) -> from(X)


----------------------------------------

(48)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(2nd(X)) -> ACTIVE(2nd(mark(X)))
   ACTIVE(2nd(cons(X, X1))) -> MARK(2nd(cons1(X, X1)))
   MARK(from(X)) -> ACTIVE(from(mark(X)))

The TRS R consists of the following rules:

   active(2nd(cons1(X, cons(Y, Z)))) -> mark(Y)
   active(2nd(cons(X, X1))) -> mark(2nd(cons1(X, X1)))
   active(from(X)) -> mark(cons(X, from(s(X))))
   mark(2nd(X)) -> active(2nd(mark(X)))
   mark(cons1(X1, X2)) -> active(cons1(mark(X1), mark(X2)))
   mark(cons(X1, X2)) -> active(cons(mark(X1), X2))
   mark(from(X)) -> active(from(mark(X)))
   mark(s(X)) -> active(s(mark(X)))
   2nd(mark(X)) -> 2nd(X)
   2nd(active(X)) -> 2nd(X)
   cons1(mark(X1), X2) -> cons1(X1, X2)
   cons1(X1, mark(X2)) -> cons1(X1, X2)
   cons1(active(X1), X2) -> cons1(X1, X2)
   cons1(X1, active(X2)) -> cons1(X1, X2)
   cons(mark(X1), X2) -> cons(X1, X2)
   cons(X1, mark(X2)) -> cons(X1, X2)
   cons(active(X1), X2) -> cons(X1, X2)
   cons(X1, active(X2)) -> cons(X1, X2)
   from(mark(X)) -> from(X)
   from(active(X)) -> from(X)
   s(mark(X)) -> s(X)
   s(active(X)) -> s(X)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(49) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   MARK(from(X)) -> ACTIVE(from(mark(X)))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial Order [NEGPOLO,POLO] with Interpretation:

POL( 2nd_1(x_1) ) = 1
POL( ACTIVE_1(x_1) ) = 0
POL( from_1(x_1) ) = 2
POL( mark_1(x_1) ) = 2
POL( active_1(x_1) ) = 2
POL( cons1_2(x_1, x_2) ) = max{0, x_1 - 2}
POL( cons_2(x_1, x_2) ) = 2
POL( s_1(x_1) ) = max{0, -2}
POL( MARK_1(x_1) ) = max{0, 2x_1 - 2}

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   2nd(active(X)) -> 2nd(X)
   2nd(mark(X)) -> 2nd(X)


----------------------------------------

(50)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(2nd(X)) -> ACTIVE(2nd(mark(X)))
   ACTIVE(2nd(cons(X, X1))) -> MARK(2nd(cons1(X, X1)))

The TRS R consists of the following rules:

   active(2nd(cons1(X, cons(Y, Z)))) -> mark(Y)
   active(2nd(cons(X, X1))) -> mark(2nd(cons1(X, X1)))
   active(from(X)) -> mark(cons(X, from(s(X))))
   mark(2nd(X)) -> active(2nd(mark(X)))
   mark(cons1(X1, X2)) -> active(cons1(mark(X1), mark(X2)))
   mark(cons(X1, X2)) -> active(cons(mark(X1), X2))
   mark(from(X)) -> active(from(mark(X)))
   mark(s(X)) -> active(s(mark(X)))
   2nd(mark(X)) -> 2nd(X)
   2nd(active(X)) -> 2nd(X)
   cons1(mark(X1), X2) -> cons1(X1, X2)
   cons1(X1, mark(X2)) -> cons1(X1, X2)
   cons1(active(X1), X2) -> cons1(X1, X2)
   cons1(X1, active(X2)) -> cons1(X1, X2)
   cons(mark(X1), X2) -> cons(X1, X2)
   cons(X1, mark(X2)) -> cons(X1, X2)
   cons(active(X1), X2) -> cons(X1, X2)
   cons(X1, active(X2)) -> cons(X1, X2)
   from(mark(X)) -> from(X)
   from(active(X)) -> from(X)
   s(mark(X)) -> s(X)
   s(active(X)) -> s(X)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(51) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   MARK(2nd(X)) -> ACTIVE(2nd(mark(X)))
   ACTIVE(2nd(cons(X, X1))) -> MARK(2nd(cons1(X, X1)))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO,RATPOLO]:

   POL(2nd(x_1)) = x_1
   POL(ACTIVE(x_1)) = [1/4] + [4]x_1
   POL(MARK(x_1)) = [1/2] + [4]x_1
   POL(active(x_1)) = x_1
   POL(cons(x_1, x_2)) = [2] + [4]x_1 + [1/4]x_2
   POL(cons1(x_1, x_2)) = [1] + [1/4]x_2
   POL(from(x_1)) = [4] + [4]x_1
   POL(mark(x_1)) = x_1
   POL(s(x_1)) = [1]
The value of delta used in the strict ordering is 1/4.
The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   mark(2nd(X)) -> active(2nd(mark(X)))
   active(2nd(cons1(X, cons(Y, Z)))) -> mark(Y)
   mark(cons1(X1, X2)) -> active(cons1(mark(X1), mark(X2)))
   active(2nd(cons(X, X1))) -> mark(2nd(cons1(X, X1)))
   mark(cons(X1, X2)) -> active(cons(mark(X1), X2))
   active(from(X)) -> mark(cons(X, from(s(X))))
   mark(from(X)) -> active(from(mark(X)))
   mark(s(X)) -> active(s(mark(X)))
   2nd(active(X)) -> 2nd(X)
   2nd(mark(X)) -> 2nd(X)
   cons1(X1, mark(X2)) -> cons1(X1, X2)
   cons1(mark(X1), X2) -> cons1(X1, X2)
   cons1(active(X1), X2) -> cons1(X1, X2)
   cons1(X1, active(X2)) -> cons1(X1, X2)
   cons(X1, mark(X2)) -> cons(X1, X2)
   cons(mark(X1), X2) -> cons(X1, X2)
   cons(active(X1), X2) -> cons(X1, X2)
   cons(X1, active(X2)) -> cons(X1, X2)
   s(active(X)) -> s(X)
   s(mark(X)) -> s(X)
   from(active(X)) -> from(X)
   from(mark(X)) -> from(X)


----------------------------------------

(52)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   active(2nd(cons1(X, cons(Y, Z)))) -> mark(Y)
   active(2nd(cons(X, X1))) -> mark(2nd(cons1(X, X1)))
   active(from(X)) -> mark(cons(X, from(s(X))))
   mark(2nd(X)) -> active(2nd(mark(X)))
   mark(cons1(X1, X2)) -> active(cons1(mark(X1), mark(X2)))
   mark(cons(X1, X2)) -> active(cons(mark(X1), X2))
   mark(from(X)) -> active(from(mark(X)))
   mark(s(X)) -> active(s(mark(X)))
   2nd(mark(X)) -> 2nd(X)
   2nd(active(X)) -> 2nd(X)
   cons1(mark(X1), X2) -> cons1(X1, X2)
   cons1(X1, mark(X2)) -> cons1(X1, X2)
   cons1(active(X1), X2) -> cons1(X1, X2)
   cons1(X1, active(X2)) -> cons1(X1, X2)
   cons(mark(X1), X2) -> cons(X1, X2)
   cons(X1, mark(X2)) -> cons(X1, X2)
   cons(active(X1), X2) -> cons(X1, X2)
   cons(X1, active(X2)) -> cons(X1, X2)
   from(mark(X)) -> from(X)
   from(active(X)) -> from(X)
   s(mark(X)) -> s(X)
   s(active(X)) -> s(X)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(53) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(54)
YES
