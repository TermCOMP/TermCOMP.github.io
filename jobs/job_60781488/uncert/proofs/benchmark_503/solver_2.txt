YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/3Oup0.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 0 ms]
(2) QDP
(3) DependencyGraphProof [EQUIVALENT, 0 ms]
(4) QDP
(5) QDPSizeChangeProof [EQUIVALENT, 0 ms]
(6) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(cons(nil, y)) -> y
   f(cons(f(cons(nil, y)), z)) -> copy(n, y, z)
   copy(0, y, z) -> f(z)
   copy(s(x), y, z) -> copy(x, y, cons(f(y), z))

Q is empty.

----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(cons(f(cons(nil, y)), z)) -> COPY(n, y, z)
   COPY(0, y, z) -> F(z)
   COPY(s(x), y, z) -> COPY(x, y, cons(f(y), z))
   COPY(s(x), y, z) -> F(y)

The TRS R consists of the following rules:

   f(cons(nil, y)) -> y
   f(cons(f(cons(nil, y)), z)) -> copy(n, y, z)
   copy(0, y, z) -> f(z)
   copy(s(x), y, z) -> copy(x, y, cons(f(y), z))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 3 less nodes.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COPY(s(x), y, z) -> COPY(x, y, cons(f(y), z))

The TRS R consists of the following rules:

   f(cons(nil, y)) -> y
   f(cons(f(cons(nil, y)), z)) -> copy(n, y, z)
   copy(0, y, z) -> f(z)
   copy(s(x), y, z) -> copy(x, y, cons(f(y), z))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*COPY(s(x), y, z) -> COPY(x, y, cons(f(y), z))
The graph contains the following edges 1 > 1, 2 >= 2


----------------------------------------

(6)
YES
