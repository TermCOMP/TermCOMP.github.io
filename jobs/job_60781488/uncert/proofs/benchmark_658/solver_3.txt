YES

Problem 1: 

(VAR vu95NonEmpty k l x y z)
(RULES
a(h,h,x) -> s(x)
a(s(x),h,z) -> a(x,z,z)
a(x,s(y),h) -> a(x,y,s(h))
a(x,s(y),s(z)) -> a(x,y,a(x,s(y),z))
app(cons(x,l),k) -> cons(x,app(l,k))
app(nil,k) -> k
app(l,nil) -> l
sum(cons(x,cons(y,l))) -> sum(cons(a(x,y,h),l))
sum(cons(x,nil)) -> cons(x,nil)
)


Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 A(s(x),h,z) -> A(x,z,z)
 A(x,s(y),h) -> A(x,y,s(h))
 A(x,s(y),s(z)) -> A(x,s(y),z)
 A(x,s(y),s(z)) -> A(x,y,a(x,s(y),z))
 APP(cons(x,l),k) -> APP(l,k)
 SUM(cons(x,cons(y,l))) -> A(x,y,h)
 SUM(cons(x,cons(y,l))) -> SUM(cons(a(x,y,h),l))
-> Rules:
 a(h,h,x) -> s(x)
 a(s(x),h,z) -> a(x,z,z)
 a(x,s(y),h) -> a(x,y,s(h))
 a(x,s(y),s(z)) -> a(x,y,a(x,s(y),z))
 app(cons(x,l),k) -> cons(x,app(l,k))
 app(nil,k) -> k
 app(l,nil) -> l
 sum(cons(x,cons(y,l))) -> sum(cons(a(x,y,h),l))
 sum(cons(x,nil)) -> cons(x,nil)

Problem 1: 

SCC Processor:
-> Pairs:
 A(s(x),h,z) -> A(x,z,z)
 A(x,s(y),h) -> A(x,y,s(h))
 A(x,s(y),s(z)) -> A(x,s(y),z)
 A(x,s(y),s(z)) -> A(x,y,a(x,s(y),z))
 APP(cons(x,l),k) -> APP(l,k)
 SUM(cons(x,cons(y,l))) -> A(x,y,h)
 SUM(cons(x,cons(y,l))) -> SUM(cons(a(x,y,h),l))
-> Rules:
 a(h,h,x) -> s(x)
 a(s(x),h,z) -> a(x,z,z)
 a(x,s(y),h) -> a(x,y,s(h))
 a(x,s(y),s(z)) -> a(x,y,a(x,s(y),z))
 app(cons(x,l),k) -> cons(x,app(l,k))
 app(nil,k) -> k
 app(l,nil) -> l
 sum(cons(x,cons(y,l))) -> sum(cons(a(x,y,h),l))
 sum(cons(x,nil)) -> cons(x,nil)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 APP(cons(x,l),k) -> APP(l,k)
->->-> Rules:
 a(h,h,x) -> s(x)
 a(s(x),h,z) -> a(x,z,z)
 a(x,s(y),h) -> a(x,y,s(h))
 a(x,s(y),s(z)) -> a(x,y,a(x,s(y),z))
 app(cons(x,l),k) -> cons(x,app(l,k))
 app(nil,k) -> k
 app(l,nil) -> l
 sum(cons(x,cons(y,l))) -> sum(cons(a(x,y,h),l))
 sum(cons(x,nil)) -> cons(x,nil)
->->Cycle:
->->-> Pairs:
 A(s(x),h,z) -> A(x,z,z)
 A(x,s(y),h) -> A(x,y,s(h))
 A(x,s(y),s(z)) -> A(x,s(y),z)
 A(x,s(y),s(z)) -> A(x,y,a(x,s(y),z))
->->-> Rules:
 a(h,h,x) -> s(x)
 a(s(x),h,z) -> a(x,z,z)
 a(x,s(y),h) -> a(x,y,s(h))
 a(x,s(y),s(z)) -> a(x,y,a(x,s(y),z))
 app(cons(x,l),k) -> cons(x,app(l,k))
 app(nil,k) -> k
 app(l,nil) -> l
 sum(cons(x,cons(y,l))) -> sum(cons(a(x,y,h),l))
 sum(cons(x,nil)) -> cons(x,nil)
->->Cycle:
->->-> Pairs:
 SUM(cons(x,cons(y,l))) -> SUM(cons(a(x,y,h),l))
->->-> Rules:
 a(h,h,x) -> s(x)
 a(s(x),h,z) -> a(x,z,z)
 a(x,s(y),h) -> a(x,y,s(h))
 a(x,s(y),s(z)) -> a(x,y,a(x,s(y),z))
 app(cons(x,l),k) -> cons(x,app(l,k))
 app(nil,k) -> k
 app(l,nil) -> l
 sum(cons(x,cons(y,l))) -> sum(cons(a(x,y,h),l))
 sum(cons(x,nil)) -> cons(x,nil)


The problem is decomposed in 3 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 APP(cons(x,l),k) -> APP(l,k)
-> Rules:
 a(h,h,x) -> s(x)
 a(s(x),h,z) -> a(x,z,z)
 a(x,s(y),h) -> a(x,y,s(h))
 a(x,s(y),s(z)) -> a(x,y,a(x,s(y),z))
 app(cons(x,l),k) -> cons(x,app(l,k))
 app(nil,k) -> k
 app(l,nil) -> l
 sum(cons(x,cons(y,l))) -> sum(cons(a(x,y,h),l))
 sum(cons(x,nil)) -> cons(x,nil)
->Projection:
 pi(APP) = 1

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 a(h,h,x) -> s(x)
 a(s(x),h,z) -> a(x,z,z)
 a(x,s(y),h) -> a(x,y,s(h))
 a(x,s(y),s(z)) -> a(x,y,a(x,s(y),z))
 app(cons(x,l),k) -> cons(x,app(l,k))
 app(nil,k) -> k
 app(l,nil) -> l
 sum(cons(x,cons(y,l))) -> sum(cons(a(x,y,h),l))
 sum(cons(x,nil)) -> cons(x,nil)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Subterm Processor:
-> Pairs:
 A(s(x),h,z) -> A(x,z,z)
 A(x,s(y),h) -> A(x,y,s(h))
 A(x,s(y),s(z)) -> A(x,s(y),z)
 A(x,s(y),s(z)) -> A(x,y,a(x,s(y),z))
-> Rules:
 a(h,h,x) -> s(x)
 a(s(x),h,z) -> a(x,z,z)
 a(x,s(y),h) -> a(x,y,s(h))
 a(x,s(y),s(z)) -> a(x,y,a(x,s(y),z))
 app(cons(x,l),k) -> cons(x,app(l,k))
 app(nil,k) -> k
 app(l,nil) -> l
 sum(cons(x,cons(y,l))) -> sum(cons(a(x,y,h),l))
 sum(cons(x,nil)) -> cons(x,nil)
->Projection:
 pi(A) = 1

Problem 1.2: 

SCC Processor:
-> Pairs:
 A(x,s(y),h) -> A(x,y,s(h))
 A(x,s(y),s(z)) -> A(x,s(y),z)
 A(x,s(y),s(z)) -> A(x,y,a(x,s(y),z))
-> Rules:
 a(h,h,x) -> s(x)
 a(s(x),h,z) -> a(x,z,z)
 a(x,s(y),h) -> a(x,y,s(h))
 a(x,s(y),s(z)) -> a(x,y,a(x,s(y),z))
 app(cons(x,l),k) -> cons(x,app(l,k))
 app(nil,k) -> k
 app(l,nil) -> l
 sum(cons(x,cons(y,l))) -> sum(cons(a(x,y,h),l))
 sum(cons(x,nil)) -> cons(x,nil)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 A(x,s(y),h) -> A(x,y,s(h))
 A(x,s(y),s(z)) -> A(x,s(y),z)
 A(x,s(y),s(z)) -> A(x,y,a(x,s(y),z))
->->-> Rules:
 a(h,h,x) -> s(x)
 a(s(x),h,z) -> a(x,z,z)
 a(x,s(y),h) -> a(x,y,s(h))
 a(x,s(y),s(z)) -> a(x,y,a(x,s(y),z))
 app(cons(x,l),k) -> cons(x,app(l,k))
 app(nil,k) -> k
 app(l,nil) -> l
 sum(cons(x,cons(y,l))) -> sum(cons(a(x,y,h),l))
 sum(cons(x,nil)) -> cons(x,nil)

Problem 1.2: 

Subterm Processor:
-> Pairs:
 A(x,s(y),h) -> A(x,y,s(h))
 A(x,s(y),s(z)) -> A(x,s(y),z)
 A(x,s(y),s(z)) -> A(x,y,a(x,s(y),z))
-> Rules:
 a(h,h,x) -> s(x)
 a(s(x),h,z) -> a(x,z,z)
 a(x,s(y),h) -> a(x,y,s(h))
 a(x,s(y),s(z)) -> a(x,y,a(x,s(y),z))
 app(cons(x,l),k) -> cons(x,app(l,k))
 app(nil,k) -> k
 app(l,nil) -> l
 sum(cons(x,cons(y,l))) -> sum(cons(a(x,y,h),l))
 sum(cons(x,nil)) -> cons(x,nil)
->Projection:
 pi(A) = 2

Problem 1.2: 

SCC Processor:
-> Pairs:
 A(x,s(y),s(z)) -> A(x,s(y),z)
-> Rules:
 a(h,h,x) -> s(x)
 a(s(x),h,z) -> a(x,z,z)
 a(x,s(y),h) -> a(x,y,s(h))
 a(x,s(y),s(z)) -> a(x,y,a(x,s(y),z))
 app(cons(x,l),k) -> cons(x,app(l,k))
 app(nil,k) -> k
 app(l,nil) -> l
 sum(cons(x,cons(y,l))) -> sum(cons(a(x,y,h),l))
 sum(cons(x,nil)) -> cons(x,nil)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 A(x,s(y),s(z)) -> A(x,s(y),z)
->->-> Rules:
 a(h,h,x) -> s(x)
 a(s(x),h,z) -> a(x,z,z)
 a(x,s(y),h) -> a(x,y,s(h))
 a(x,s(y),s(z)) -> a(x,y,a(x,s(y),z))
 app(cons(x,l),k) -> cons(x,app(l,k))
 app(nil,k) -> k
 app(l,nil) -> l
 sum(cons(x,cons(y,l))) -> sum(cons(a(x,y,h),l))
 sum(cons(x,nil)) -> cons(x,nil)

Problem 1.2: 

Subterm Processor:
-> Pairs:
 A(x,s(y),s(z)) -> A(x,s(y),z)
-> Rules:
 a(h,h,x) -> s(x)
 a(s(x),h,z) -> a(x,z,z)
 a(x,s(y),h) -> a(x,y,s(h))
 a(x,s(y),s(z)) -> a(x,y,a(x,s(y),z))
 app(cons(x,l),k) -> cons(x,app(l,k))
 app(nil,k) -> k
 app(l,nil) -> l
 sum(cons(x,cons(y,l))) -> sum(cons(a(x,y,h),l))
 sum(cons(x,nil)) -> cons(x,nil)
->Projection:
 pi(A) = 3

Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 a(h,h,x) -> s(x)
 a(s(x),h,z) -> a(x,z,z)
 a(x,s(y),h) -> a(x,y,s(h))
 a(x,s(y),s(z)) -> a(x,y,a(x,s(y),z))
 app(cons(x,l),k) -> cons(x,app(l,k))
 app(nil,k) -> k
 app(l,nil) -> l
 sum(cons(x,cons(y,l))) -> sum(cons(a(x,y,h),l))
 sum(cons(x,nil)) -> cons(x,nil)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Reduction Pair Processor:
-> Pairs:
 SUM(cons(x,cons(y,l))) -> SUM(cons(a(x,y,h),l))
-> Rules:
 a(h,h,x) -> s(x)
 a(s(x),h,z) -> a(x,z,z)
 a(x,s(y),h) -> a(x,y,s(h))
 a(x,s(y),s(z)) -> a(x,y,a(x,s(y),z))
 app(cons(x,l),k) -> cons(x,app(l,k))
 app(nil,k) -> k
 app(l,nil) -> l
 sum(cons(x,cons(y,l))) -> sum(cons(a(x,y,h),l))
 sum(cons(x,nil)) -> cons(x,nil)
-> Usable rules:
 a(h,h,x) -> s(x)
 a(s(x),h,z) -> a(x,z,z)
 a(x,s(y),h) -> a(x,y,s(h))
 a(x,s(y),s(z)) -> a(x,y,a(x,s(y),z))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[a](X1,X2,X3) = X3
[app](X1,X2) = 0
[sum](X) = 0
[cons](X1,X2) = 2.X2 + 2
[fSNonEmpty] = 0
[h] = 1
[nil] = 0
[s](X) = X
[A](X1,X2,X3) = 0
[APP](X1,X2) = 0
[SUM](X) = 2.X

Problem 1.3: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 a(h,h,x) -> s(x)
 a(s(x),h,z) -> a(x,z,z)
 a(x,s(y),h) -> a(x,y,s(h))
 a(x,s(y),s(z)) -> a(x,y,a(x,s(y),z))
 app(cons(x,l),k) -> cons(x,app(l,k))
 app(nil,k) -> k
 app(l,nil) -> l
 sum(cons(x,cons(y,l))) -> sum(cons(a(x,y,h),l))
 sum(cons(x,nil)) -> cons(x,nil)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
