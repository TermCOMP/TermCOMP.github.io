YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/vwoDX.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRSRRRProof [EQUIVALENT, 22 ms]
(2) QTRS
(3) RisEmptyProof [EQUIVALENT, 0 ms]
(4) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   app(nil, k) -> k
   app(l, nil) -> l
   app(cons(x, l), k) -> cons(x, app(l, k))
   sum(cons(x, nil)) -> cons(x, nil)
   sum(cons(x, cons(y, l))) -> sum(cons(a(x, y, h), l))
   a(h, h, x) -> s(x)
   a(x, s(y), h) -> a(x, y, s(h))
   a(x, s(y), s(z)) -> a(x, y, a(x, s(y), z))
   a(s(x), h, z) -> a(x, z, z)

Q is empty.

----------------------------------------

(1) QTRSRRRProof (EQUIVALENT)
Used ordering:
Quasi precedence:
app_2 > cons_2 > [a_3, h] > s_1 > nil
sum_1 > cons_2 > [a_3, h] > s_1 > nil


Status:
app_2: [2,1]
nil: multiset status
cons_2: [2,1]
sum_1: multiset status
a_3: [1,2,3]
h: multiset status
s_1: multiset status

With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   app(nil, k) -> k
   app(l, nil) -> l
   app(cons(x, l), k) -> cons(x, app(l, k))
   sum(cons(x, nil)) -> cons(x, nil)
   sum(cons(x, cons(y, l))) -> sum(cons(a(x, y, h), l))
   a(h, h, x) -> s(x)
   a(x, s(y), h) -> a(x, y, s(h))
   a(x, s(y), s(z)) -> a(x, y, a(x, s(y), z))
   a(s(x), h, z) -> a(x, z, z)




----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
R is empty.
Q is empty.

----------------------------------------

(3) RisEmptyProof (EQUIVALENT)
The TRS R is empty. Hence, termination is trivially proven.
----------------------------------------

(4)
YES
