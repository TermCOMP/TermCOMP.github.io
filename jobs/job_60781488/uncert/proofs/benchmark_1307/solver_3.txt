YES

Problem 1: 

(VAR vu95NonEmpty IL L M N V V1 V2 X X1 X2 X3 X4)
(RULES
au95u95U11(tt) -> tt
au95u95U11(X) -> U11(X)
au95u95U21(tt) -> tt
au95u95U21(X) -> U21(X)
au95u95U31(tt) -> tt
au95u95U31(X) -> U31(X)
au95u95U41(tt,V2) -> au95u95U42(au95u95isNatIList(V2))
au95u95U41(X1,X2) -> U41(X1,X2)
au95u95U42(tt) -> tt
au95u95U42(X) -> U42(X)
au95u95U51(tt,V2) -> au95u95U52(au95u95isNatList(V2))
au95u95U51(X1,X2) -> U51(X1,X2)
au95u95U52(tt) -> tt
au95u95U52(X) -> U52(X)
au95u95U61(tt,V2) -> au95u95U62(au95u95isNatIList(V2))
au95u95U61(X1,X2) -> U61(X1,X2)
au95u95U62(tt) -> tt
au95u95U62(X) -> U62(X)
au95u95U71(tt,L,N) -> au95u95U72(au95u95isNat(N),L)
au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
au95u95U72(tt,L) -> s(au95u95length(mark(L)))
au95u95U72(X1,X2) -> U72(X1,X2)
au95u95U81(tt) -> nil
au95u95U81(X) -> U81(X)
au95u95U91(tt,IL,M,N) -> au95u95U92(au95u95isNat(M),IL,M,N)
au95u95U91(X1,X2,X3,X4) -> U91(X1,X2,X3,X4)
au95u95U92(tt,IL,M,N) -> au95u95U93(au95u95isNat(N),IL,M,N)
au95u95U92(X1,X2,X3,X4) -> U92(X1,X2,X3,X4)
au95u95U93(tt,IL,M,N) -> cons(mark(N),take(M,IL))
au95u95U93(X1,X2,X3,X4) -> U93(X1,X2,X3,X4)
au95u95isNat(num0) -> tt
au95u95isNat(length(V1)) -> au95u95U11(au95u95isNatList(V1))
au95u95isNat(s(V1)) -> au95u95U21(au95u95isNat(V1))
au95u95isNat(X) -> isNat(X)
au95u95isNatIList(cons(V1,V2)) -> au95u95U41(au95u95isNat(V1),V2)
au95u95isNatIList(zeros) -> tt
au95u95isNatIList(V) -> au95u95U31(au95u95isNatList(V))
au95u95isNatIList(X) -> isNatIList(X)
au95u95isNatList(cons(V1,V2)) -> au95u95U51(au95u95isNat(V1),V2)
au95u95isNatList(nil) -> tt
au95u95isNatList(take(V1,V2)) -> au95u95U61(au95u95isNat(V1),V2)
au95u95isNatList(X) -> isNatList(X)
au95u95length(cons(N,L)) -> au95u95U71(au95u95isNatList(L),L,N)
au95u95length(nil) -> num0
au95u95length(X) -> length(X)
au95u95take(num0,IL) -> au95u95U81(au95u95isNatIList(IL))
au95u95take(s(M),cons(N,IL)) -> au95u95U91(au95u95isNatIList(IL),IL,M,N)
au95u95take(X1,X2) -> take(X1,X2)
au95u95zeros -> cons(num0,zeros)
au95u95zeros -> zeros
mark(num0) -> num0
mark(U11(X)) -> au95u95U11(mark(X))
mark(U21(X)) -> au95u95U21(mark(X))
mark(U31(X)) -> au95u95U31(mark(X))
mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
mark(U42(X)) -> au95u95U42(mark(X))
mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
mark(U52(X)) -> au95u95U52(mark(X))
mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
mark(U62(X)) -> au95u95U62(mark(X))
mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
mark(U81(X)) -> au95u95U81(mark(X))
mark(U91(X1,X2,X3,X4)) -> au95u95U91(mark(X1),X2,X3,X4)
mark(U92(X1,X2,X3,X4)) -> au95u95U92(mark(X1),X2,X3,X4)
mark(U93(X1,X2,X3,X4)) -> au95u95U93(mark(X1),X2,X3,X4)
mark(cons(X1,X2)) -> cons(mark(X1),X2)
mark(isNat(X)) -> au95u95isNat(X)
mark(isNatIList(X)) -> au95u95isNatIList(X)
mark(isNatList(X)) -> au95u95isNatList(X)
mark(length(X)) -> au95u95length(mark(X))
mark(nil) -> nil
mark(s(X)) -> s(mark(X))
mark(take(X1,X2)) -> au95u95take(mark(X1),mark(X2))
mark(tt) -> tt
mark(zeros) -> au95u95zeros
)


Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 AU95U95U41(tt,V2) -> AU95U95U42(au95u95isNatIList(V2))
 AU95U95U41(tt,V2) -> AU95U95ISNATILIST(V2)
 AU95U95U51(tt,V2) -> AU95U95U52(au95u95isNatList(V2))
 AU95U95U51(tt,V2) -> AU95U95ISNATLIST(V2)
 AU95U95U61(tt,V2) -> AU95U95U62(au95u95isNatIList(V2))
 AU95U95U61(tt,V2) -> AU95U95ISNATILIST(V2)
 AU95U95U71(tt,L,N) -> AU95U95U72(au95u95isNat(N),L)
 AU95U95U71(tt,L,N) -> AU95U95ISNAT(N)
 AU95U95U72(tt,L) -> AU95U95LENGTH(mark(L))
 AU95U95U72(tt,L) -> MARK(L)
 AU95U95U91(tt,IL,M,N) -> AU95U95U92(au95u95isNat(M),IL,M,N)
 AU95U95U91(tt,IL,M,N) -> AU95U95ISNAT(M)
 AU95U95U92(tt,IL,M,N) -> AU95U95U93(au95u95isNat(N),IL,M,N)
 AU95U95U92(tt,IL,M,N) -> AU95U95ISNAT(N)
 AU95U95U93(tt,IL,M,N) -> MARK(N)
 AU95U95ISNAT(length(V1)) -> AU95U95U11(au95u95isNatList(V1))
 AU95U95ISNAT(length(V1)) -> AU95U95ISNATLIST(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95U21(au95u95isNat(V1))
 AU95U95ISNAT(s(V1)) -> AU95U95ISNAT(V1)
 AU95U95ISNATILIST(cons(V1,V2)) -> AU95U95U41(au95u95isNat(V1),V2)
 AU95U95ISNATILIST(cons(V1,V2)) -> AU95U95ISNAT(V1)
 AU95U95ISNATILIST(V) -> AU95U95U31(au95u95isNatList(V))
 AU95U95ISNATILIST(V) -> AU95U95ISNATLIST(V)
 AU95U95ISNATLIST(cons(V1,V2)) -> AU95U95U51(au95u95isNat(V1),V2)
 AU95U95ISNATLIST(cons(V1,V2)) -> AU95U95ISNAT(V1)
 AU95U95ISNATLIST(take(V1,V2)) -> AU95U95U61(au95u95isNat(V1),V2)
 AU95U95ISNATLIST(take(V1,V2)) -> AU95U95ISNAT(V1)
 AU95U95LENGTH(cons(N,L)) -> AU95U95U71(au95u95isNatList(L),L,N)
 AU95U95LENGTH(cons(N,L)) -> AU95U95ISNATLIST(L)
 AU95U95TAKE(num0,IL) -> AU95U95U81(au95u95isNatIList(IL))
 AU95U95TAKE(num0,IL) -> AU95U95ISNATILIST(IL)
 AU95U95TAKE(s(M),cons(N,IL)) -> AU95U95U91(au95u95isNatIList(IL),IL,M,N)
 AU95U95TAKE(s(M),cons(N,IL)) -> AU95U95ISNATILIST(IL)
 MARK(U11(X)) -> AU95U95U11(mark(X))
 MARK(U11(X)) -> MARK(X)
 MARK(U21(X)) -> AU95U95U21(mark(X))
 MARK(U21(X)) -> MARK(X)
 MARK(U31(X)) -> AU95U95U31(mark(X))
 MARK(U31(X)) -> MARK(X)
 MARK(U41(X1,X2)) -> AU95U95U41(mark(X1),X2)
 MARK(U41(X1,X2)) -> MARK(X1)
 MARK(U42(X)) -> AU95U95U42(mark(X))
 MARK(U42(X)) -> MARK(X)
 MARK(U51(X1,X2)) -> AU95U95U51(mark(X1),X2)
 MARK(U51(X1,X2)) -> MARK(X1)
 MARK(U52(X)) -> AU95U95U52(mark(X))
 MARK(U52(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> AU95U95U61(mark(X1),X2)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> AU95U95U62(mark(X))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2,X3)) -> AU95U95U71(mark(X1),X2,X3)
 MARK(U71(X1,X2,X3)) -> MARK(X1)
 MARK(U72(X1,X2)) -> AU95U95U72(mark(X1),X2)
 MARK(U72(X1,X2)) -> MARK(X1)
 MARK(U81(X)) -> AU95U95U81(mark(X))
 MARK(U81(X)) -> MARK(X)
 MARK(U91(X1,X2,X3,X4)) -> AU95U95U91(mark(X1),X2,X3,X4)
 MARK(U91(X1,X2,X3,X4)) -> MARK(X1)
 MARK(U92(X1,X2,X3,X4)) -> AU95U95U92(mark(X1),X2,X3,X4)
 MARK(U92(X1,X2,X3,X4)) -> MARK(X1)
 MARK(U93(X1,X2,X3,X4)) -> AU95U95U93(mark(X1),X2,X3,X4)
 MARK(U93(X1,X2,X3,X4)) -> MARK(X1)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatIList(X)) -> AU95U95ISNATILIST(X)
 MARK(isNatList(X)) -> AU95U95ISNATLIST(X)
 MARK(length(X)) -> AU95U95LENGTH(mark(X))
 MARK(length(X)) -> MARK(X)
 MARK(s(X)) -> MARK(X)
 MARK(take(X1,X2)) -> AU95U95TAKE(mark(X1),mark(X2))
 MARK(take(X1,X2)) -> MARK(X1)
 MARK(take(X1,X2)) -> MARK(X2)
 MARK(zeros) -> AU95U95ZEROS
-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt) -> tt
 au95u95U21(X) -> U21(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNatIList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isNatList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt,V2) -> au95u95U62(au95u95isNatIList(V2))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,L,N) -> au95u95U72(au95u95isNat(N),L)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,L) -> s(au95u95length(mark(L)))
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U81(tt) -> nil
 au95u95U81(X) -> U81(X)
 au95u95U91(tt,IL,M,N) -> au95u95U92(au95u95isNat(M),IL,M,N)
 au95u95U91(X1,X2,X3,X4) -> U91(X1,X2,X3,X4)
 au95u95U92(tt,IL,M,N) -> au95u95U93(au95u95isNat(N),IL,M,N)
 au95u95U92(X1,X2,X3,X4) -> U92(X1,X2,X3,X4)
 au95u95U93(tt,IL,M,N) -> cons(mark(N),take(M,IL))
 au95u95U93(X1,X2,X3,X4) -> U93(X1,X2,X3,X4)
 au95u95isNat(num0) -> tt
 au95u95isNat(length(V1)) -> au95u95U11(au95u95isNatList(V1))
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNat(V1))
 au95u95isNat(X) -> isNat(X)
 au95u95isNatIList(cons(V1,V2)) -> au95u95U41(au95u95isNat(V1),V2)
 au95u95isNatIList(zeros) -> tt
 au95u95isNatIList(V) -> au95u95U31(au95u95isNatList(V))
 au95u95isNatIList(X) -> isNatIList(X)
 au95u95isNatList(cons(V1,V2)) -> au95u95U51(au95u95isNat(V1),V2)
 au95u95isNatList(nil) -> tt
 au95u95isNatList(take(V1,V2)) -> au95u95U61(au95u95isNat(V1),V2)
 au95u95isNatList(X) -> isNatList(X)
 au95u95length(cons(N,L)) -> au95u95U71(au95u95isNatList(L),L,N)
 au95u95length(nil) -> num0
 au95u95length(X) -> length(X)
 au95u95take(num0,IL) -> au95u95U81(au95u95isNatIList(IL))
 au95u95take(s(M),cons(N,IL)) -> au95u95U91(au95u95isNatIList(IL),IL,M,N)
 au95u95take(X1,X2) -> take(X1,X2)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X)) -> au95u95U21(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(U91(X1,X2,X3,X4)) -> au95u95U91(mark(X1),X2,X3,X4)
 mark(U92(X1,X2,X3,X4)) -> au95u95U92(mark(X1),X2,X3,X4)
 mark(U93(X1,X2,X3,X4)) -> au95u95U93(mark(X1),X2,X3,X4)
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatIList(X)) -> au95u95isNatIList(X)
 mark(isNatList(X)) -> au95u95isNatList(X)
 mark(length(X)) -> au95u95length(mark(X))
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(take(X1,X2)) -> au95u95take(mark(X1),mark(X2))
 mark(tt) -> tt
 mark(zeros) -> au95u95zeros

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95U41(tt,V2) -> AU95U95U42(au95u95isNatIList(V2))
 AU95U95U41(tt,V2) -> AU95U95ISNATILIST(V2)
 AU95U95U51(tt,V2) -> AU95U95U52(au95u95isNatList(V2))
 AU95U95U51(tt,V2) -> AU95U95ISNATLIST(V2)
 AU95U95U61(tt,V2) -> AU95U95U62(au95u95isNatIList(V2))
 AU95U95U61(tt,V2) -> AU95U95ISNATILIST(V2)
 AU95U95U71(tt,L,N) -> AU95U95U72(au95u95isNat(N),L)
 AU95U95U71(tt,L,N) -> AU95U95ISNAT(N)
 AU95U95U72(tt,L) -> AU95U95LENGTH(mark(L))
 AU95U95U72(tt,L) -> MARK(L)
 AU95U95U91(tt,IL,M,N) -> AU95U95U92(au95u95isNat(M),IL,M,N)
 AU95U95U91(tt,IL,M,N) -> AU95U95ISNAT(M)
 AU95U95U92(tt,IL,M,N) -> AU95U95U93(au95u95isNat(N),IL,M,N)
 AU95U95U92(tt,IL,M,N) -> AU95U95ISNAT(N)
 AU95U95U93(tt,IL,M,N) -> MARK(N)
 AU95U95ISNAT(length(V1)) -> AU95U95U11(au95u95isNatList(V1))
 AU95U95ISNAT(length(V1)) -> AU95U95ISNATLIST(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95U21(au95u95isNat(V1))
 AU95U95ISNAT(s(V1)) -> AU95U95ISNAT(V1)
 AU95U95ISNATILIST(cons(V1,V2)) -> AU95U95U41(au95u95isNat(V1),V2)
 AU95U95ISNATILIST(cons(V1,V2)) -> AU95U95ISNAT(V1)
 AU95U95ISNATILIST(V) -> AU95U95U31(au95u95isNatList(V))
 AU95U95ISNATILIST(V) -> AU95U95ISNATLIST(V)
 AU95U95ISNATLIST(cons(V1,V2)) -> AU95U95U51(au95u95isNat(V1),V2)
 AU95U95ISNATLIST(cons(V1,V2)) -> AU95U95ISNAT(V1)
 AU95U95ISNATLIST(take(V1,V2)) -> AU95U95U61(au95u95isNat(V1),V2)
 AU95U95ISNATLIST(take(V1,V2)) -> AU95U95ISNAT(V1)
 AU95U95LENGTH(cons(N,L)) -> AU95U95U71(au95u95isNatList(L),L,N)
 AU95U95LENGTH(cons(N,L)) -> AU95U95ISNATLIST(L)
 AU95U95TAKE(num0,IL) -> AU95U95U81(au95u95isNatIList(IL))
 AU95U95TAKE(num0,IL) -> AU95U95ISNATILIST(IL)
 AU95U95TAKE(s(M),cons(N,IL)) -> AU95U95U91(au95u95isNatIList(IL),IL,M,N)
 AU95U95TAKE(s(M),cons(N,IL)) -> AU95U95ISNATILIST(IL)
 MARK(U11(X)) -> AU95U95U11(mark(X))
 MARK(U11(X)) -> MARK(X)
 MARK(U21(X)) -> AU95U95U21(mark(X))
 MARK(U21(X)) -> MARK(X)
 MARK(U31(X)) -> AU95U95U31(mark(X))
 MARK(U31(X)) -> MARK(X)
 MARK(U41(X1,X2)) -> AU95U95U41(mark(X1),X2)
 MARK(U41(X1,X2)) -> MARK(X1)
 MARK(U42(X)) -> AU95U95U42(mark(X))
 MARK(U42(X)) -> MARK(X)
 MARK(U51(X1,X2)) -> AU95U95U51(mark(X1),X2)
 MARK(U51(X1,X2)) -> MARK(X1)
 MARK(U52(X)) -> AU95U95U52(mark(X))
 MARK(U52(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> AU95U95U61(mark(X1),X2)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> AU95U95U62(mark(X))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2,X3)) -> AU95U95U71(mark(X1),X2,X3)
 MARK(U71(X1,X2,X3)) -> MARK(X1)
 MARK(U72(X1,X2)) -> AU95U95U72(mark(X1),X2)
 MARK(U72(X1,X2)) -> MARK(X1)
 MARK(U81(X)) -> AU95U95U81(mark(X))
 MARK(U81(X)) -> MARK(X)
 MARK(U91(X1,X2,X3,X4)) -> AU95U95U91(mark(X1),X2,X3,X4)
 MARK(U91(X1,X2,X3,X4)) -> MARK(X1)
 MARK(U92(X1,X2,X3,X4)) -> AU95U95U92(mark(X1),X2,X3,X4)
 MARK(U92(X1,X2,X3,X4)) -> MARK(X1)
 MARK(U93(X1,X2,X3,X4)) -> AU95U95U93(mark(X1),X2,X3,X4)
 MARK(U93(X1,X2,X3,X4)) -> MARK(X1)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatIList(X)) -> AU95U95ISNATILIST(X)
 MARK(isNatList(X)) -> AU95U95ISNATLIST(X)
 MARK(length(X)) -> AU95U95LENGTH(mark(X))
 MARK(length(X)) -> MARK(X)
 MARK(s(X)) -> MARK(X)
 MARK(take(X1,X2)) -> AU95U95TAKE(mark(X1),mark(X2))
 MARK(take(X1,X2)) -> MARK(X1)
 MARK(take(X1,X2)) -> MARK(X2)
 MARK(zeros) -> AU95U95ZEROS
-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt) -> tt
 au95u95U21(X) -> U21(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNatIList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isNatList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt,V2) -> au95u95U62(au95u95isNatIList(V2))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,L,N) -> au95u95U72(au95u95isNat(N),L)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,L) -> s(au95u95length(mark(L)))
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U81(tt) -> nil
 au95u95U81(X) -> U81(X)
 au95u95U91(tt,IL,M,N) -> au95u95U92(au95u95isNat(M),IL,M,N)
 au95u95U91(X1,X2,X3,X4) -> U91(X1,X2,X3,X4)
 au95u95U92(tt,IL,M,N) -> au95u95U93(au95u95isNat(N),IL,M,N)
 au95u95U92(X1,X2,X3,X4) -> U92(X1,X2,X3,X4)
 au95u95U93(tt,IL,M,N) -> cons(mark(N),take(M,IL))
 au95u95U93(X1,X2,X3,X4) -> U93(X1,X2,X3,X4)
 au95u95isNat(num0) -> tt
 au95u95isNat(length(V1)) -> au95u95U11(au95u95isNatList(V1))
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNat(V1))
 au95u95isNat(X) -> isNat(X)
 au95u95isNatIList(cons(V1,V2)) -> au95u95U41(au95u95isNat(V1),V2)
 au95u95isNatIList(zeros) -> tt
 au95u95isNatIList(V) -> au95u95U31(au95u95isNatList(V))
 au95u95isNatIList(X) -> isNatIList(X)
 au95u95isNatList(cons(V1,V2)) -> au95u95U51(au95u95isNat(V1),V2)
 au95u95isNatList(nil) -> tt
 au95u95isNatList(take(V1,V2)) -> au95u95U61(au95u95isNat(V1),V2)
 au95u95isNatList(X) -> isNatList(X)
 au95u95length(cons(N,L)) -> au95u95U71(au95u95isNatList(L),L,N)
 au95u95length(nil) -> num0
 au95u95length(X) -> length(X)
 au95u95take(num0,IL) -> au95u95U81(au95u95isNatIList(IL))
 au95u95take(s(M),cons(N,IL)) -> au95u95U91(au95u95isNatIList(IL),IL,M,N)
 au95u95take(X1,X2) -> take(X1,X2)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X)) -> au95u95U21(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(U91(X1,X2,X3,X4)) -> au95u95U91(mark(X1),X2,X3,X4)
 mark(U92(X1,X2,X3,X4)) -> au95u95U92(mark(X1),X2,X3,X4)
 mark(U93(X1,X2,X3,X4)) -> au95u95U93(mark(X1),X2,X3,X4)
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatIList(X)) -> au95u95isNatIList(X)
 mark(isNatList(X)) -> au95u95isNatList(X)
 mark(length(X)) -> au95u95length(mark(X))
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(take(X1,X2)) -> au95u95take(mark(X1),mark(X2))
 mark(tt) -> tt
 mark(zeros) -> au95u95zeros
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U41(tt,V2) -> AU95U95ISNATILIST(V2)
 AU95U95U51(tt,V2) -> AU95U95ISNATLIST(V2)
 AU95U95U61(tt,V2) -> AU95U95ISNATILIST(V2)
 AU95U95ISNAT(length(V1)) -> AU95U95ISNATLIST(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNAT(V1)
 AU95U95ISNATILIST(cons(V1,V2)) -> AU95U95U41(au95u95isNat(V1),V2)
 AU95U95ISNATILIST(cons(V1,V2)) -> AU95U95ISNAT(V1)
 AU95U95ISNATILIST(V) -> AU95U95ISNATLIST(V)
 AU95U95ISNATLIST(cons(V1,V2)) -> AU95U95U51(au95u95isNat(V1),V2)
 AU95U95ISNATLIST(cons(V1,V2)) -> AU95U95ISNAT(V1)
 AU95U95ISNATLIST(take(V1,V2)) -> AU95U95U61(au95u95isNat(V1),V2)
 AU95U95ISNATLIST(take(V1,V2)) -> AU95U95ISNAT(V1)
->->-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt) -> tt
 au95u95U21(X) -> U21(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNatIList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isNatList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt,V2) -> au95u95U62(au95u95isNatIList(V2))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,L,N) -> au95u95U72(au95u95isNat(N),L)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,L) -> s(au95u95length(mark(L)))
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U81(tt) -> nil
 au95u95U81(X) -> U81(X)
 au95u95U91(tt,IL,M,N) -> au95u95U92(au95u95isNat(M),IL,M,N)
 au95u95U91(X1,X2,X3,X4) -> U91(X1,X2,X3,X4)
 au95u95U92(tt,IL,M,N) -> au95u95U93(au95u95isNat(N),IL,M,N)
 au95u95U92(X1,X2,X3,X4) -> U92(X1,X2,X3,X4)
 au95u95U93(tt,IL,M,N) -> cons(mark(N),take(M,IL))
 au95u95U93(X1,X2,X3,X4) -> U93(X1,X2,X3,X4)
 au95u95isNat(num0) -> tt
 au95u95isNat(length(V1)) -> au95u95U11(au95u95isNatList(V1))
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNat(V1))
 au95u95isNat(X) -> isNat(X)
 au95u95isNatIList(cons(V1,V2)) -> au95u95U41(au95u95isNat(V1),V2)
 au95u95isNatIList(zeros) -> tt
 au95u95isNatIList(V) -> au95u95U31(au95u95isNatList(V))
 au95u95isNatIList(X) -> isNatIList(X)
 au95u95isNatList(cons(V1,V2)) -> au95u95U51(au95u95isNat(V1),V2)
 au95u95isNatList(nil) -> tt
 au95u95isNatList(take(V1,V2)) -> au95u95U61(au95u95isNat(V1),V2)
 au95u95isNatList(X) -> isNatList(X)
 au95u95length(cons(N,L)) -> au95u95U71(au95u95isNatList(L),L,N)
 au95u95length(nil) -> num0
 au95u95length(X) -> length(X)
 au95u95take(num0,IL) -> au95u95U81(au95u95isNatIList(IL))
 au95u95take(s(M),cons(N,IL)) -> au95u95U91(au95u95isNatIList(IL),IL,M,N)
 au95u95take(X1,X2) -> take(X1,X2)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X)) -> au95u95U21(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(U91(X1,X2,X3,X4)) -> au95u95U91(mark(X1),X2,X3,X4)
 mark(U92(X1,X2,X3,X4)) -> au95u95U92(mark(X1),X2,X3,X4)
 mark(U93(X1,X2,X3,X4)) -> au95u95U93(mark(X1),X2,X3,X4)
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatIList(X)) -> au95u95isNatIList(X)
 mark(isNatList(X)) -> au95u95isNatList(X)
 mark(length(X)) -> au95u95length(mark(X))
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(take(X1,X2)) -> au95u95take(mark(X1),mark(X2))
 mark(tt) -> tt
 mark(zeros) -> au95u95zeros
->->Cycle:
->->-> Pairs:
 AU95U95U71(tt,L,N) -> AU95U95U72(au95u95isNat(N),L)
 AU95U95U72(tt,L) -> AU95U95LENGTH(mark(L))
 AU95U95U72(tt,L) -> MARK(L)
 AU95U95U91(tt,IL,M,N) -> AU95U95U92(au95u95isNat(M),IL,M,N)
 AU95U95U92(tt,IL,M,N) -> AU95U95U93(au95u95isNat(N),IL,M,N)
 AU95U95U93(tt,IL,M,N) -> MARK(N)
 AU95U95LENGTH(cons(N,L)) -> AU95U95U71(au95u95isNatList(L),L,N)
 AU95U95TAKE(s(M),cons(N,IL)) -> AU95U95U91(au95u95isNatIList(IL),IL,M,N)
 MARK(U11(X)) -> MARK(X)
 MARK(U21(X)) -> MARK(X)
 MARK(U31(X)) -> MARK(X)
 MARK(U41(X1,X2)) -> MARK(X1)
 MARK(U42(X)) -> MARK(X)
 MARK(U51(X1,X2)) -> MARK(X1)
 MARK(U52(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2,X3)) -> AU95U95U71(mark(X1),X2,X3)
 MARK(U71(X1,X2,X3)) -> MARK(X1)
 MARK(U72(X1,X2)) -> AU95U95U72(mark(X1),X2)
 MARK(U72(X1,X2)) -> MARK(X1)
 MARK(U81(X)) -> MARK(X)
 MARK(U91(X1,X2,X3,X4)) -> AU95U95U91(mark(X1),X2,X3,X4)
 MARK(U91(X1,X2,X3,X4)) -> MARK(X1)
 MARK(U92(X1,X2,X3,X4)) -> AU95U95U92(mark(X1),X2,X3,X4)
 MARK(U92(X1,X2,X3,X4)) -> MARK(X1)
 MARK(U93(X1,X2,X3,X4)) -> AU95U95U93(mark(X1),X2,X3,X4)
 MARK(U93(X1,X2,X3,X4)) -> MARK(X1)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(length(X)) -> AU95U95LENGTH(mark(X))
 MARK(length(X)) -> MARK(X)
 MARK(s(X)) -> MARK(X)
 MARK(take(X1,X2)) -> AU95U95TAKE(mark(X1),mark(X2))
 MARK(take(X1,X2)) -> MARK(X1)
 MARK(take(X1,X2)) -> MARK(X2)
->->-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt) -> tt
 au95u95U21(X) -> U21(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNatIList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isNatList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt,V2) -> au95u95U62(au95u95isNatIList(V2))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,L,N) -> au95u95U72(au95u95isNat(N),L)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,L) -> s(au95u95length(mark(L)))
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U81(tt) -> nil
 au95u95U81(X) -> U81(X)
 au95u95U91(tt,IL,M,N) -> au95u95U92(au95u95isNat(M),IL,M,N)
 au95u95U91(X1,X2,X3,X4) -> U91(X1,X2,X3,X4)
 au95u95U92(tt,IL,M,N) -> au95u95U93(au95u95isNat(N),IL,M,N)
 au95u95U92(X1,X2,X3,X4) -> U92(X1,X2,X3,X4)
 au95u95U93(tt,IL,M,N) -> cons(mark(N),take(M,IL))
 au95u95U93(X1,X2,X3,X4) -> U93(X1,X2,X3,X4)
 au95u95isNat(num0) -> tt
 au95u95isNat(length(V1)) -> au95u95U11(au95u95isNatList(V1))
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNat(V1))
 au95u95isNat(X) -> isNat(X)
 au95u95isNatIList(cons(V1,V2)) -> au95u95U41(au95u95isNat(V1),V2)
 au95u95isNatIList(zeros) -> tt
 au95u95isNatIList(V) -> au95u95U31(au95u95isNatList(V))
 au95u95isNatIList(X) -> isNatIList(X)
 au95u95isNatList(cons(V1,V2)) -> au95u95U51(au95u95isNat(V1),V2)
 au95u95isNatList(nil) -> tt
 au95u95isNatList(take(V1,V2)) -> au95u95U61(au95u95isNat(V1),V2)
 au95u95isNatList(X) -> isNatList(X)
 au95u95length(cons(N,L)) -> au95u95U71(au95u95isNatList(L),L,N)
 au95u95length(nil) -> num0
 au95u95length(X) -> length(X)
 au95u95take(num0,IL) -> au95u95U81(au95u95isNatIList(IL))
 au95u95take(s(M),cons(N,IL)) -> au95u95U91(au95u95isNatIList(IL),IL,M,N)
 au95u95take(X1,X2) -> take(X1,X2)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X)) -> au95u95U21(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(U91(X1,X2,X3,X4)) -> au95u95U91(mark(X1),X2,X3,X4)
 mark(U92(X1,X2,X3,X4)) -> au95u95U92(mark(X1),X2,X3,X4)
 mark(U93(X1,X2,X3,X4)) -> au95u95U93(mark(X1),X2,X3,X4)
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatIList(X)) -> au95u95isNatIList(X)
 mark(isNatList(X)) -> au95u95isNatList(X)
 mark(length(X)) -> au95u95length(mark(X))
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(take(X1,X2)) -> au95u95take(mark(X1),mark(X2))
 mark(tt) -> tt
 mark(zeros) -> au95u95zeros


The problem is decomposed in 2 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 AU95U95U41(tt,V2) -> AU95U95ISNATILIST(V2)
 AU95U95U51(tt,V2) -> AU95U95ISNATLIST(V2)
 AU95U95U61(tt,V2) -> AU95U95ISNATILIST(V2)
 AU95U95ISNAT(length(V1)) -> AU95U95ISNATLIST(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNAT(V1)
 AU95U95ISNATILIST(cons(V1,V2)) -> AU95U95U41(au95u95isNat(V1),V2)
 AU95U95ISNATILIST(cons(V1,V2)) -> AU95U95ISNAT(V1)
 AU95U95ISNATILIST(V) -> AU95U95ISNATLIST(V)
 AU95U95ISNATLIST(cons(V1,V2)) -> AU95U95U51(au95u95isNat(V1),V2)
 AU95U95ISNATLIST(cons(V1,V2)) -> AU95U95ISNAT(V1)
 AU95U95ISNATLIST(take(V1,V2)) -> AU95U95U61(au95u95isNat(V1),V2)
 AU95U95ISNATLIST(take(V1,V2)) -> AU95U95ISNAT(V1)
-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt) -> tt
 au95u95U21(X) -> U21(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNatIList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isNatList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt,V2) -> au95u95U62(au95u95isNatIList(V2))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,L,N) -> au95u95U72(au95u95isNat(N),L)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,L) -> s(au95u95length(mark(L)))
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U81(tt) -> nil
 au95u95U81(X) -> U81(X)
 au95u95U91(tt,IL,M,N) -> au95u95U92(au95u95isNat(M),IL,M,N)
 au95u95U91(X1,X2,X3,X4) -> U91(X1,X2,X3,X4)
 au95u95U92(tt,IL,M,N) -> au95u95U93(au95u95isNat(N),IL,M,N)
 au95u95U92(X1,X2,X3,X4) -> U92(X1,X2,X3,X4)
 au95u95U93(tt,IL,M,N) -> cons(mark(N),take(M,IL))
 au95u95U93(X1,X2,X3,X4) -> U93(X1,X2,X3,X4)
 au95u95isNat(num0) -> tt
 au95u95isNat(length(V1)) -> au95u95U11(au95u95isNatList(V1))
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNat(V1))
 au95u95isNat(X) -> isNat(X)
 au95u95isNatIList(cons(V1,V2)) -> au95u95U41(au95u95isNat(V1),V2)
 au95u95isNatIList(zeros) -> tt
 au95u95isNatIList(V) -> au95u95U31(au95u95isNatList(V))
 au95u95isNatIList(X) -> isNatIList(X)
 au95u95isNatList(cons(V1,V2)) -> au95u95U51(au95u95isNat(V1),V2)
 au95u95isNatList(nil) -> tt
 au95u95isNatList(take(V1,V2)) -> au95u95U61(au95u95isNat(V1),V2)
 au95u95isNatList(X) -> isNatList(X)
 au95u95length(cons(N,L)) -> au95u95U71(au95u95isNatList(L),L,N)
 au95u95length(nil) -> num0
 au95u95length(X) -> length(X)
 au95u95take(num0,IL) -> au95u95U81(au95u95isNatIList(IL))
 au95u95take(s(M),cons(N,IL)) -> au95u95U91(au95u95isNatIList(IL),IL,M,N)
 au95u95take(X1,X2) -> take(X1,X2)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X)) -> au95u95U21(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(U91(X1,X2,X3,X4)) -> au95u95U91(mark(X1),X2,X3,X4)
 mark(U92(X1,X2,X3,X4)) -> au95u95U92(mark(X1),X2,X3,X4)
 mark(U93(X1,X2,X3,X4)) -> au95u95U93(mark(X1),X2,X3,X4)
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatIList(X)) -> au95u95isNatIList(X)
 mark(isNatList(X)) -> au95u95isNatList(X)
 mark(length(X)) -> au95u95length(mark(X))
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(take(X1,X2)) -> au95u95take(mark(X1),mark(X2))
 mark(tt) -> tt
 mark(zeros) -> au95u95zeros
->Projection:
 pi(AU95U95U41) = 2
 pi(AU95U95U51) = 2
 pi(AU95U95U61) = 2
 pi(AU95U95ISNAT) = 1
 pi(AU95U95ISNATILIST) = 1
 pi(AU95U95ISNATLIST) = 1

Problem 1.1: 

SCC Processor:
-> Pairs:
 AU95U95U41(tt,V2) -> AU95U95ISNATILIST(V2)
 AU95U95U51(tt,V2) -> AU95U95ISNATLIST(V2)
 AU95U95U61(tt,V2) -> AU95U95ISNATILIST(V2)
 AU95U95ISNATILIST(V) -> AU95U95ISNATLIST(V)
-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt) -> tt
 au95u95U21(X) -> U21(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNatIList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isNatList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt,V2) -> au95u95U62(au95u95isNatIList(V2))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,L,N) -> au95u95U72(au95u95isNat(N),L)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,L) -> s(au95u95length(mark(L)))
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U81(tt) -> nil
 au95u95U81(X) -> U81(X)
 au95u95U91(tt,IL,M,N) -> au95u95U92(au95u95isNat(M),IL,M,N)
 au95u95U91(X1,X2,X3,X4) -> U91(X1,X2,X3,X4)
 au95u95U92(tt,IL,M,N) -> au95u95U93(au95u95isNat(N),IL,M,N)
 au95u95U92(X1,X2,X3,X4) -> U92(X1,X2,X3,X4)
 au95u95U93(tt,IL,M,N) -> cons(mark(N),take(M,IL))
 au95u95U93(X1,X2,X3,X4) -> U93(X1,X2,X3,X4)
 au95u95isNat(num0) -> tt
 au95u95isNat(length(V1)) -> au95u95U11(au95u95isNatList(V1))
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNat(V1))
 au95u95isNat(X) -> isNat(X)
 au95u95isNatIList(cons(V1,V2)) -> au95u95U41(au95u95isNat(V1),V2)
 au95u95isNatIList(zeros) -> tt
 au95u95isNatIList(V) -> au95u95U31(au95u95isNatList(V))
 au95u95isNatIList(X) -> isNatIList(X)
 au95u95isNatList(cons(V1,V2)) -> au95u95U51(au95u95isNat(V1),V2)
 au95u95isNatList(nil) -> tt
 au95u95isNatList(take(V1,V2)) -> au95u95U61(au95u95isNat(V1),V2)
 au95u95isNatList(X) -> isNatList(X)
 au95u95length(cons(N,L)) -> au95u95U71(au95u95isNatList(L),L,N)
 au95u95length(nil) -> num0
 au95u95length(X) -> length(X)
 au95u95take(num0,IL) -> au95u95U81(au95u95isNatIList(IL))
 au95u95take(s(M),cons(N,IL)) -> au95u95U91(au95u95isNatIList(IL),IL,M,N)
 au95u95take(X1,X2) -> take(X1,X2)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X)) -> au95u95U21(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(U91(X1,X2,X3,X4)) -> au95u95U91(mark(X1),X2,X3,X4)
 mark(U92(X1,X2,X3,X4)) -> au95u95U92(mark(X1),X2,X3,X4)
 mark(U93(X1,X2,X3,X4)) -> au95u95U93(mark(X1),X2,X3,X4)
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatIList(X)) -> au95u95isNatIList(X)
 mark(isNatList(X)) -> au95u95isNatList(X)
 mark(length(X)) -> au95u95length(mark(X))
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(take(X1,X2)) -> au95u95take(mark(X1),mark(X2))
 mark(tt) -> tt
 mark(zeros) -> au95u95zeros
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Reduction Pair Processor:
-> Pairs:
 AU95U95U71(tt,L,N) -> AU95U95U72(au95u95isNat(N),L)
 AU95U95U72(tt,L) -> AU95U95LENGTH(mark(L))
 AU95U95U72(tt,L) -> MARK(L)
 AU95U95U91(tt,IL,M,N) -> AU95U95U92(au95u95isNat(M),IL,M,N)
 AU95U95U92(tt,IL,M,N) -> AU95U95U93(au95u95isNat(N),IL,M,N)
 AU95U95U93(tt,IL,M,N) -> MARK(N)
 AU95U95LENGTH(cons(N,L)) -> AU95U95U71(au95u95isNatList(L),L,N)
 AU95U95TAKE(s(M),cons(N,IL)) -> AU95U95U91(au95u95isNatIList(IL),IL,M,N)
 MARK(U11(X)) -> MARK(X)
 MARK(U21(X)) -> MARK(X)
 MARK(U31(X)) -> MARK(X)
 MARK(U41(X1,X2)) -> MARK(X1)
 MARK(U42(X)) -> MARK(X)
 MARK(U51(X1,X2)) -> MARK(X1)
 MARK(U52(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2,X3)) -> AU95U95U71(mark(X1),X2,X3)
 MARK(U71(X1,X2,X3)) -> MARK(X1)
 MARK(U72(X1,X2)) -> AU95U95U72(mark(X1),X2)
 MARK(U72(X1,X2)) -> MARK(X1)
 MARK(U81(X)) -> MARK(X)
 MARK(U91(X1,X2,X3,X4)) -> AU95U95U91(mark(X1),X2,X3,X4)
 MARK(U91(X1,X2,X3,X4)) -> MARK(X1)
 MARK(U92(X1,X2,X3,X4)) -> AU95U95U92(mark(X1),X2,X3,X4)
 MARK(U92(X1,X2,X3,X4)) -> MARK(X1)
 MARK(U93(X1,X2,X3,X4)) -> AU95U95U93(mark(X1),X2,X3,X4)
 MARK(U93(X1,X2,X3,X4)) -> MARK(X1)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(length(X)) -> AU95U95LENGTH(mark(X))
 MARK(length(X)) -> MARK(X)
 MARK(s(X)) -> MARK(X)
 MARK(take(X1,X2)) -> AU95U95TAKE(mark(X1),mark(X2))
 MARK(take(X1,X2)) -> MARK(X1)
 MARK(take(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt) -> tt
 au95u95U21(X) -> U21(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNatIList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isNatList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt,V2) -> au95u95U62(au95u95isNatIList(V2))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,L,N) -> au95u95U72(au95u95isNat(N),L)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,L) -> s(au95u95length(mark(L)))
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U81(tt) -> nil
 au95u95U81(X) -> U81(X)
 au95u95U91(tt,IL,M,N) -> au95u95U92(au95u95isNat(M),IL,M,N)
 au95u95U91(X1,X2,X3,X4) -> U91(X1,X2,X3,X4)
 au95u95U92(tt,IL,M,N) -> au95u95U93(au95u95isNat(N),IL,M,N)
 au95u95U92(X1,X2,X3,X4) -> U92(X1,X2,X3,X4)
 au95u95U93(tt,IL,M,N) -> cons(mark(N),take(M,IL))
 au95u95U93(X1,X2,X3,X4) -> U93(X1,X2,X3,X4)
 au95u95isNat(num0) -> tt
 au95u95isNat(length(V1)) -> au95u95U11(au95u95isNatList(V1))
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNat(V1))
 au95u95isNat(X) -> isNat(X)
 au95u95isNatIList(cons(V1,V2)) -> au95u95U41(au95u95isNat(V1),V2)
 au95u95isNatIList(zeros) -> tt
 au95u95isNatIList(V) -> au95u95U31(au95u95isNatList(V))
 au95u95isNatIList(X) -> isNatIList(X)
 au95u95isNatList(cons(V1,V2)) -> au95u95U51(au95u95isNat(V1),V2)
 au95u95isNatList(nil) -> tt
 au95u95isNatList(take(V1,V2)) -> au95u95U61(au95u95isNat(V1),V2)
 au95u95isNatList(X) -> isNatList(X)
 au95u95length(cons(N,L)) -> au95u95U71(au95u95isNatList(L),L,N)
 au95u95length(nil) -> num0
 au95u95length(X) -> length(X)
 au95u95take(num0,IL) -> au95u95U81(au95u95isNatIList(IL))
 au95u95take(s(M),cons(N,IL)) -> au95u95U91(au95u95isNatIList(IL),IL,M,N)
 au95u95take(X1,X2) -> take(X1,X2)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X)) -> au95u95U21(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(U91(X1,X2,X3,X4)) -> au95u95U91(mark(X1),X2,X3,X4)
 mark(U92(X1,X2,X3,X4)) -> au95u95U92(mark(X1),X2,X3,X4)
 mark(U93(X1,X2,X3,X4)) -> au95u95U93(mark(X1),X2,X3,X4)
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatIList(X)) -> au95u95isNatIList(X)
 mark(isNatList(X)) -> au95u95isNatList(X)
 mark(length(X)) -> au95u95length(mark(X))
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(take(X1,X2)) -> au95u95take(mark(X1),mark(X2))
 mark(tt) -> tt
 mark(zeros) -> au95u95zeros
-> Usable rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt) -> tt
 au95u95U21(X) -> U21(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNatIList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isNatList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt,V2) -> au95u95U62(au95u95isNatIList(V2))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,L,N) -> au95u95U72(au95u95isNat(N),L)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,L) -> s(au95u95length(mark(L)))
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U81(tt) -> nil
 au95u95U81(X) -> U81(X)
 au95u95U91(tt,IL,M,N) -> au95u95U92(au95u95isNat(M),IL,M,N)
 au95u95U91(X1,X2,X3,X4) -> U91(X1,X2,X3,X4)
 au95u95U92(tt,IL,M,N) -> au95u95U93(au95u95isNat(N),IL,M,N)
 au95u95U92(X1,X2,X3,X4) -> U92(X1,X2,X3,X4)
 au95u95U93(tt,IL,M,N) -> cons(mark(N),take(M,IL))
 au95u95U93(X1,X2,X3,X4) -> U93(X1,X2,X3,X4)
 au95u95isNat(num0) -> tt
 au95u95isNat(length(V1)) -> au95u95U11(au95u95isNatList(V1))
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNat(V1))
 au95u95isNat(X) -> isNat(X)
 au95u95isNatIList(cons(V1,V2)) -> au95u95U41(au95u95isNat(V1),V2)
 au95u95isNatIList(zeros) -> tt
 au95u95isNatIList(V) -> au95u95U31(au95u95isNatList(V))
 au95u95isNatIList(X) -> isNatIList(X)
 au95u95isNatList(cons(V1,V2)) -> au95u95U51(au95u95isNat(V1),V2)
 au95u95isNatList(nil) -> tt
 au95u95isNatList(take(V1,V2)) -> au95u95U61(au95u95isNat(V1),V2)
 au95u95isNatList(X) -> isNatList(X)
 au95u95length(cons(N,L)) -> au95u95U71(au95u95isNatList(L),L,N)
 au95u95length(nil) -> num0
 au95u95length(X) -> length(X)
 au95u95take(num0,IL) -> au95u95U81(au95u95isNatIList(IL))
 au95u95take(s(M),cons(N,IL)) -> au95u95U91(au95u95isNatIList(IL),IL,M,N)
 au95u95take(X1,X2) -> take(X1,X2)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X)) -> au95u95U21(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(U91(X1,X2,X3,X4)) -> au95u95U91(mark(X1),X2,X3,X4)
 mark(U92(X1,X2,X3,X4)) -> au95u95U92(mark(X1),X2,X3,X4)
 mark(U93(X1,X2,X3,X4)) -> au95u95U93(mark(X1),X2,X3,X4)
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatIList(X)) -> au95u95isNatIList(X)
 mark(isNatList(X)) -> au95u95isNatList(X)
 mark(length(X)) -> au95u95length(mark(X))
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(take(X1,X2)) -> au95u95take(mark(X1),mark(X2))
 mark(tt) -> tt
 mark(zeros) -> au95u95zeros
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X) = X
[au95u95U21](X) = X
[au95u95U31](X) = X
[au95u95U41](X1,X2) = X1
[au95u95U42](X) = X
[au95u95U51](X1,X2) = X1
[au95u95U52](X) = X
[au95u95U61](X1,X2) = X1
[au95u95U62](X) = X
[au95u95U71](X1,X2,X3) = X1 + 2.X2 + X3
[au95u95U72](X1,X2) = X1 + 2.X2
[au95u95U81](X) = X
[au95u95U91](X1,X2,X3,X4) = X1 + 2.X2 + 2.X3 + 2.X4
[au95u95U92](X1,X2,X3,X4) = X1 + 2.X2 + 2.X3 + 2.X4
[au95u95U93](X1,X2,X3,X4) = X1 + 2.X2 + 2.X3 + 2.X4
[au95u95isNat](X) = 2
[au95u95isNatIList](X) = 2
[au95u95isNatList](X) = 2
[au95u95length](X) = 2.X + 2
[au95u95take](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95zeros] = 2
[mark](X) = X
[num0] = 0
[U11](X) = X
[U21](X) = X
[U31](X) = X
[U41](X1,X2) = X1
[U42](X) = X
[U51](X1,X2) = X1
[U52](X) = X
[U61](X1,X2) = X1
[U62](X) = X
[U71](X1,X2,X3) = X1 + 2.X2 + X3
[U72](X1,X2) = X1 + 2.X2
[U81](X) = X
[U91](X1,X2,X3,X4) = X1 + 2.X2 + 2.X3 + 2.X4
[U92](X1,X2,X3,X4) = X1 + 2.X2 + 2.X3 + 2.X4
[U93](X1,X2,X3,X4) = X1 + 2.X2 + 2.X3 + 2.X4
[cons](X1,X2) = 2.X1 + X2
[fSNonEmpty] = 0
[isNat](X) = 2
[isNatIList](X) = 2
[isNatList](X) = 2
[length](X) = 2.X + 2
[nil] = 2
[s](X) = X
[take](X1,X2) = 2.X1 + 2.X2 + 2
[tt] = 2
[zeros] = 2
[AU95U95U11](X) = 0
[AU95U95U21](X) = 0
[AU95U95U31](X) = 0
[AU95U95U41](X1,X2) = 0
[AU95U95U42](X) = 0
[AU95U95U51](X1,X2) = 0
[AU95U95U52](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X) = 0
[AU95U95U71](X1,X2,X3) = X1 + 2.X2 + 2.X3
[AU95U95U72](X1,X2) = X1 + 2.X2
[AU95U95U81](X) = 0
[AU95U95U91](X1,X2,X3,X4) = 2.X2 + 2.X4
[AU95U95U92](X1,X2,X3,X4) = 2.X2 + 2.X4
[AU95U95U93](X1,X2,X3,X4) = 2.X2 + 2.X4
[AU95U95ISNAT](X) = 0
[AU95U95ISNATILIST](X) = 0
[AU95U95ISNATLIST](X) = 0
[AU95U95LENGTH](X) = 2.X + 2
[AU95U95TAKE](X1,X2) = 2.X2
[AU95U95ZEROS] = 0
[MARK](X) = 2.X

Problem 1.2: 

SCC Processor:
-> Pairs:
 AU95U95U71(tt,L,N) -> AU95U95U72(au95u95isNat(N),L)
 AU95U95U72(tt,L) -> AU95U95LENGTH(mark(L))
 AU95U95U91(tt,IL,M,N) -> AU95U95U92(au95u95isNat(M),IL,M,N)
 AU95U95U92(tt,IL,M,N) -> AU95U95U93(au95u95isNat(N),IL,M,N)
 AU95U95U93(tt,IL,M,N) -> MARK(N)
 AU95U95LENGTH(cons(N,L)) -> AU95U95U71(au95u95isNatList(L),L,N)
 AU95U95TAKE(s(M),cons(N,IL)) -> AU95U95U91(au95u95isNatIList(IL),IL,M,N)
 MARK(U11(X)) -> MARK(X)
 MARK(U21(X)) -> MARK(X)
 MARK(U31(X)) -> MARK(X)
 MARK(U41(X1,X2)) -> MARK(X1)
 MARK(U42(X)) -> MARK(X)
 MARK(U51(X1,X2)) -> MARK(X1)
 MARK(U52(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2,X3)) -> AU95U95U71(mark(X1),X2,X3)
 MARK(U71(X1,X2,X3)) -> MARK(X1)
 MARK(U72(X1,X2)) -> AU95U95U72(mark(X1),X2)
 MARK(U72(X1,X2)) -> MARK(X1)
 MARK(U81(X)) -> MARK(X)
 MARK(U91(X1,X2,X3,X4)) -> AU95U95U91(mark(X1),X2,X3,X4)
 MARK(U91(X1,X2,X3,X4)) -> MARK(X1)
 MARK(U92(X1,X2,X3,X4)) -> AU95U95U92(mark(X1),X2,X3,X4)
 MARK(U92(X1,X2,X3,X4)) -> MARK(X1)
 MARK(U93(X1,X2,X3,X4)) -> AU95U95U93(mark(X1),X2,X3,X4)
 MARK(U93(X1,X2,X3,X4)) -> MARK(X1)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(length(X)) -> AU95U95LENGTH(mark(X))
 MARK(length(X)) -> MARK(X)
 MARK(s(X)) -> MARK(X)
 MARK(take(X1,X2)) -> AU95U95TAKE(mark(X1),mark(X2))
 MARK(take(X1,X2)) -> MARK(X1)
 MARK(take(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt) -> tt
 au95u95U21(X) -> U21(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNatIList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isNatList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt,V2) -> au95u95U62(au95u95isNatIList(V2))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,L,N) -> au95u95U72(au95u95isNat(N),L)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,L) -> s(au95u95length(mark(L)))
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U81(tt) -> nil
 au95u95U81(X) -> U81(X)
 au95u95U91(tt,IL,M,N) -> au95u95U92(au95u95isNat(M),IL,M,N)
 au95u95U91(X1,X2,X3,X4) -> U91(X1,X2,X3,X4)
 au95u95U92(tt,IL,M,N) -> au95u95U93(au95u95isNat(N),IL,M,N)
 au95u95U92(X1,X2,X3,X4) -> U92(X1,X2,X3,X4)
 au95u95U93(tt,IL,M,N) -> cons(mark(N),take(M,IL))
 au95u95U93(X1,X2,X3,X4) -> U93(X1,X2,X3,X4)
 au95u95isNat(num0) -> tt
 au95u95isNat(length(V1)) -> au95u95U11(au95u95isNatList(V1))
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNat(V1))
 au95u95isNat(X) -> isNat(X)
 au95u95isNatIList(cons(V1,V2)) -> au95u95U41(au95u95isNat(V1),V2)
 au95u95isNatIList(zeros) -> tt
 au95u95isNatIList(V) -> au95u95U31(au95u95isNatList(V))
 au95u95isNatIList(X) -> isNatIList(X)
 au95u95isNatList(cons(V1,V2)) -> au95u95U51(au95u95isNat(V1),V2)
 au95u95isNatList(nil) -> tt
 au95u95isNatList(take(V1,V2)) -> au95u95U61(au95u95isNat(V1),V2)
 au95u95isNatList(X) -> isNatList(X)
 au95u95length(cons(N,L)) -> au95u95U71(au95u95isNatList(L),L,N)
 au95u95length(nil) -> num0
 au95u95length(X) -> length(X)
 au95u95take(num0,IL) -> au95u95U81(au95u95isNatIList(IL))
 au95u95take(s(M),cons(N,IL)) -> au95u95U91(au95u95isNatIList(IL),IL,M,N)
 au95u95take(X1,X2) -> take(X1,X2)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X)) -> au95u95U21(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(U91(X1,X2,X3,X4)) -> au95u95U91(mark(X1),X2,X3,X4)
 mark(U92(X1,X2,X3,X4)) -> au95u95U92(mark(X1),X2,X3,X4)
 mark(U93(X1,X2,X3,X4)) -> au95u95U93(mark(X1),X2,X3,X4)
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatIList(X)) -> au95u95isNatIList(X)
 mark(isNatList(X)) -> au95u95isNatList(X)
 mark(length(X)) -> au95u95length(mark(X))
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(take(X1,X2)) -> au95u95take(mark(X1),mark(X2))
 mark(tt) -> tt
 mark(zeros) -> au95u95zeros
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U71(tt,L,N) -> AU95U95U72(au95u95isNat(N),L)
 AU95U95U72(tt,L) -> AU95U95LENGTH(mark(L))
 AU95U95LENGTH(cons(N,L)) -> AU95U95U71(au95u95isNatList(L),L,N)
->->-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt) -> tt
 au95u95U21(X) -> U21(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNatIList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isNatList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt,V2) -> au95u95U62(au95u95isNatIList(V2))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,L,N) -> au95u95U72(au95u95isNat(N),L)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,L) -> s(au95u95length(mark(L)))
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U81(tt) -> nil
 au95u95U81(X) -> U81(X)
 au95u95U91(tt,IL,M,N) -> au95u95U92(au95u95isNat(M),IL,M,N)
 au95u95U91(X1,X2,X3,X4) -> U91(X1,X2,X3,X4)
 au95u95U92(tt,IL,M,N) -> au95u95U93(au95u95isNat(N),IL,M,N)
 au95u95U92(X1,X2,X3,X4) -> U92(X1,X2,X3,X4)
 au95u95U93(tt,IL,M,N) -> cons(mark(N),take(M,IL))
 au95u95U93(X1,X2,X3,X4) -> U93(X1,X2,X3,X4)
 au95u95isNat(num0) -> tt
 au95u95isNat(length(V1)) -> au95u95U11(au95u95isNatList(V1))
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNat(V1))
 au95u95isNat(X) -> isNat(X)
 au95u95isNatIList(cons(V1,V2)) -> au95u95U41(au95u95isNat(V1),V2)
 au95u95isNatIList(zeros) -> tt
 au95u95isNatIList(V) -> au95u95U31(au95u95isNatList(V))
 au95u95isNatIList(X) -> isNatIList(X)
 au95u95isNatList(cons(V1,V2)) -> au95u95U51(au95u95isNat(V1),V2)
 au95u95isNatList(nil) -> tt
 au95u95isNatList(take(V1,V2)) -> au95u95U61(au95u95isNat(V1),V2)
 au95u95isNatList(X) -> isNatList(X)
 au95u95length(cons(N,L)) -> au95u95U71(au95u95isNatList(L),L,N)
 au95u95length(nil) -> num0
 au95u95length(X) -> length(X)
 au95u95take(num0,IL) -> au95u95U81(au95u95isNatIList(IL))
 au95u95take(s(M),cons(N,IL)) -> au95u95U91(au95u95isNatIList(IL),IL,M,N)
 au95u95take(X1,X2) -> take(X1,X2)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X)) -> au95u95U21(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(U91(X1,X2,X3,X4)) -> au95u95U91(mark(X1),X2,X3,X4)
 mark(U92(X1,X2,X3,X4)) -> au95u95U92(mark(X1),X2,X3,X4)
 mark(U93(X1,X2,X3,X4)) -> au95u95U93(mark(X1),X2,X3,X4)
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatIList(X)) -> au95u95isNatIList(X)
 mark(isNatList(X)) -> au95u95isNatList(X)
 mark(length(X)) -> au95u95length(mark(X))
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(take(X1,X2)) -> au95u95take(mark(X1),mark(X2))
 mark(tt) -> tt
 mark(zeros) -> au95u95zeros
->->Cycle:
->->-> Pairs:
 AU95U95U91(tt,IL,M,N) -> AU95U95U92(au95u95isNat(M),IL,M,N)
 AU95U95U92(tt,IL,M,N) -> AU95U95U93(au95u95isNat(N),IL,M,N)
 AU95U95U93(tt,IL,M,N) -> MARK(N)
 AU95U95TAKE(s(M),cons(N,IL)) -> AU95U95U91(au95u95isNatIList(IL),IL,M,N)
 MARK(U11(X)) -> MARK(X)
 MARK(U21(X)) -> MARK(X)
 MARK(U31(X)) -> MARK(X)
 MARK(U41(X1,X2)) -> MARK(X1)
 MARK(U42(X)) -> MARK(X)
 MARK(U51(X1,X2)) -> MARK(X1)
 MARK(U52(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2,X3)) -> MARK(X1)
 MARK(U72(X1,X2)) -> MARK(X1)
 MARK(U81(X)) -> MARK(X)
 MARK(U91(X1,X2,X3,X4)) -> AU95U95U91(mark(X1),X2,X3,X4)
 MARK(U91(X1,X2,X3,X4)) -> MARK(X1)
 MARK(U92(X1,X2,X3,X4)) -> AU95U95U92(mark(X1),X2,X3,X4)
 MARK(U92(X1,X2,X3,X4)) -> MARK(X1)
 MARK(U93(X1,X2,X3,X4)) -> AU95U95U93(mark(X1),X2,X3,X4)
 MARK(U93(X1,X2,X3,X4)) -> MARK(X1)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(length(X)) -> MARK(X)
 MARK(s(X)) -> MARK(X)
 MARK(take(X1,X2)) -> AU95U95TAKE(mark(X1),mark(X2))
 MARK(take(X1,X2)) -> MARK(X1)
 MARK(take(X1,X2)) -> MARK(X2)
->->-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt) -> tt
 au95u95U21(X) -> U21(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNatIList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isNatList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt,V2) -> au95u95U62(au95u95isNatIList(V2))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,L,N) -> au95u95U72(au95u95isNat(N),L)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,L) -> s(au95u95length(mark(L)))
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U81(tt) -> nil
 au95u95U81(X) -> U81(X)
 au95u95U91(tt,IL,M,N) -> au95u95U92(au95u95isNat(M),IL,M,N)
 au95u95U91(X1,X2,X3,X4) -> U91(X1,X2,X3,X4)
 au95u95U92(tt,IL,M,N) -> au95u95U93(au95u95isNat(N),IL,M,N)
 au95u95U92(X1,X2,X3,X4) -> U92(X1,X2,X3,X4)
 au95u95U93(tt,IL,M,N) -> cons(mark(N),take(M,IL))
 au95u95U93(X1,X2,X3,X4) -> U93(X1,X2,X3,X4)
 au95u95isNat(num0) -> tt
 au95u95isNat(length(V1)) -> au95u95U11(au95u95isNatList(V1))
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNat(V1))
 au95u95isNat(X) -> isNat(X)
 au95u95isNatIList(cons(V1,V2)) -> au95u95U41(au95u95isNat(V1),V2)
 au95u95isNatIList(zeros) -> tt
 au95u95isNatIList(V) -> au95u95U31(au95u95isNatList(V))
 au95u95isNatIList(X) -> isNatIList(X)
 au95u95isNatList(cons(V1,V2)) -> au95u95U51(au95u95isNat(V1),V2)
 au95u95isNatList(nil) -> tt
 au95u95isNatList(take(V1,V2)) -> au95u95U61(au95u95isNat(V1),V2)
 au95u95isNatList(X) -> isNatList(X)
 au95u95length(cons(N,L)) -> au95u95U71(au95u95isNatList(L),L,N)
 au95u95length(nil) -> num0
 au95u95length(X) -> length(X)
 au95u95take(num0,IL) -> au95u95U81(au95u95isNatIList(IL))
 au95u95take(s(M),cons(N,IL)) -> au95u95U91(au95u95isNatIList(IL),IL,M,N)
 au95u95take(X1,X2) -> take(X1,X2)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X)) -> au95u95U21(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(U91(X1,X2,X3,X4)) -> au95u95U91(mark(X1),X2,X3,X4)
 mark(U92(X1,X2,X3,X4)) -> au95u95U92(mark(X1),X2,X3,X4)
 mark(U93(X1,X2,X3,X4)) -> au95u95U93(mark(X1),X2,X3,X4)
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatIList(X)) -> au95u95isNatIList(X)
 mark(isNatList(X)) -> au95u95isNatList(X)
 mark(length(X)) -> au95u95length(mark(X))
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(take(X1,X2)) -> au95u95take(mark(X1),mark(X2))
 mark(tt) -> tt
 mark(zeros) -> au95u95zeros


The problem is decomposed in 2 subproblems.

Problem 1.2.1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95U71(tt,L,N) -> AU95U95U72(au95u95isNat(N),L)
 AU95U95U72(tt,L) -> AU95U95LENGTH(mark(L))
 AU95U95LENGTH(cons(N,L)) -> AU95U95U71(au95u95isNatList(L),L,N)
-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt) -> tt
 au95u95U21(X) -> U21(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNatIList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isNatList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt,V2) -> au95u95U62(au95u95isNatIList(V2))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,L,N) -> au95u95U72(au95u95isNat(N),L)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,L) -> s(au95u95length(mark(L)))
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U81(tt) -> nil
 au95u95U81(X) -> U81(X)
 au95u95U91(tt,IL,M,N) -> au95u95U92(au95u95isNat(M),IL,M,N)
 au95u95U91(X1,X2,X3,X4) -> U91(X1,X2,X3,X4)
 au95u95U92(tt,IL,M,N) -> au95u95U93(au95u95isNat(N),IL,M,N)
 au95u95U92(X1,X2,X3,X4) -> U92(X1,X2,X3,X4)
 au95u95U93(tt,IL,M,N) -> cons(mark(N),take(M,IL))
 au95u95U93(X1,X2,X3,X4) -> U93(X1,X2,X3,X4)
 au95u95isNat(num0) -> tt
 au95u95isNat(length(V1)) -> au95u95U11(au95u95isNatList(V1))
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNat(V1))
 au95u95isNat(X) -> isNat(X)
 au95u95isNatIList(cons(V1,V2)) -> au95u95U41(au95u95isNat(V1),V2)
 au95u95isNatIList(zeros) -> tt
 au95u95isNatIList(V) -> au95u95U31(au95u95isNatList(V))
 au95u95isNatIList(X) -> isNatIList(X)
 au95u95isNatList(cons(V1,V2)) -> au95u95U51(au95u95isNat(V1),V2)
 au95u95isNatList(nil) -> tt
 au95u95isNatList(take(V1,V2)) -> au95u95U61(au95u95isNat(V1),V2)
 au95u95isNatList(X) -> isNatList(X)
 au95u95length(cons(N,L)) -> au95u95U71(au95u95isNatList(L),L,N)
 au95u95length(nil) -> num0
 au95u95length(X) -> length(X)
 au95u95take(num0,IL) -> au95u95U81(au95u95isNatIList(IL))
 au95u95take(s(M),cons(N,IL)) -> au95u95U91(au95u95isNatIList(IL),IL,M,N)
 au95u95take(X1,X2) -> take(X1,X2)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X)) -> au95u95U21(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(U91(X1,X2,X3,X4)) -> au95u95U91(mark(X1),X2,X3,X4)
 mark(U92(X1,X2,X3,X4)) -> au95u95U92(mark(X1),X2,X3,X4)
 mark(U93(X1,X2,X3,X4)) -> au95u95U93(mark(X1),X2,X3,X4)
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatIList(X)) -> au95u95isNatIList(X)
 mark(isNatList(X)) -> au95u95isNatList(X)
 mark(length(X)) -> au95u95length(mark(X))
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(take(X1,X2)) -> au95u95take(mark(X1),mark(X2))
 mark(tt) -> tt
 mark(zeros) -> au95u95zeros
-> Usable rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt) -> tt
 au95u95U21(X) -> U21(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNatIList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isNatList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt,V2) -> au95u95U62(au95u95isNatIList(V2))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,L,N) -> au95u95U72(au95u95isNat(N),L)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,L) -> s(au95u95length(mark(L)))
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U81(tt) -> nil
 au95u95U81(X) -> U81(X)
 au95u95U91(tt,IL,M,N) -> au95u95U92(au95u95isNat(M),IL,M,N)
 au95u95U91(X1,X2,X3,X4) -> U91(X1,X2,X3,X4)
 au95u95U92(tt,IL,M,N) -> au95u95U93(au95u95isNat(N),IL,M,N)
 au95u95U92(X1,X2,X3,X4) -> U92(X1,X2,X3,X4)
 au95u95U93(tt,IL,M,N) -> cons(mark(N),take(M,IL))
 au95u95U93(X1,X2,X3,X4) -> U93(X1,X2,X3,X4)
 au95u95isNat(num0) -> tt
 au95u95isNat(length(V1)) -> au95u95U11(au95u95isNatList(V1))
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNat(V1))
 au95u95isNat(X) -> isNat(X)
 au95u95isNatIList(cons(V1,V2)) -> au95u95U41(au95u95isNat(V1),V2)
 au95u95isNatIList(zeros) -> tt
 au95u95isNatIList(V) -> au95u95U31(au95u95isNatList(V))
 au95u95isNatIList(X) -> isNatIList(X)
 au95u95isNatList(cons(V1,V2)) -> au95u95U51(au95u95isNat(V1),V2)
 au95u95isNatList(nil) -> tt
 au95u95isNatList(take(V1,V2)) -> au95u95U61(au95u95isNat(V1),V2)
 au95u95isNatList(X) -> isNatList(X)
 au95u95length(cons(N,L)) -> au95u95U71(au95u95isNatList(L),L,N)
 au95u95length(nil) -> num0
 au95u95length(X) -> length(X)
 au95u95take(num0,IL) -> au95u95U81(au95u95isNatIList(IL))
 au95u95take(s(M),cons(N,IL)) -> au95u95U91(au95u95isNatIList(IL),IL,M,N)
 au95u95take(X1,X2) -> take(X1,X2)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X)) -> au95u95U21(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(U91(X1,X2,X3,X4)) -> au95u95U91(mark(X1),X2,X3,X4)
 mark(U92(X1,X2,X3,X4)) -> au95u95U92(mark(X1),X2,X3,X4)
 mark(U93(X1,X2,X3,X4)) -> au95u95U93(mark(X1),X2,X3,X4)
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatIList(X)) -> au95u95isNatIList(X)
 mark(isNatList(X)) -> au95u95isNatList(X)
 mark(length(X)) -> au95u95length(mark(X))
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(take(X1,X2)) -> au95u95take(mark(X1),mark(X2))
 mark(tt) -> tt
 mark(zeros) -> au95u95zeros
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X) = X
[au95u95U21](X) = X
[au95u95U31](X) = 2
[au95u95U41](X1,X2) = 2
[au95u95U42](X) = X
[au95u95U51](X1,X2) = 2.X2
[au95u95U52](X) = 2.X
[au95u95U61](X1,X2) = X1 + X2
[au95u95U62](X) = X
[au95u95U71](X1,X2,X3) = 2.X2
[au95u95U72](X1,X2) = 2.X2
[au95u95U81](X) = X
[au95u95U91](X1,X2,X3,X4) = 2.X2 + 2.X3
[au95u95U92](X1,X2,X3,X4) = 2.X2 + 2.X3
[au95u95U93](X1,X2,X3,X4) = 2.X2 + 2.X3
[au95u95isNat](X) = X
[au95u95isNatIList](X) = 2
[au95u95isNatList](X) = X
[au95u95length](X) = X
[au95u95take](X1,X2) = X1 + X2
[au95u95zeros] = 0
[mark](X) = X
[num0] = 2
[U11](X) = X
[U21](X) = X
[U31](X) = 2
[U41](X1,X2) = 2
[U42](X) = X
[U51](X1,X2) = 2.X2
[U52](X) = 2.X
[U61](X1,X2) = X1 + X2
[U62](X) = X
[U71](X1,X2,X3) = 2.X2
[U72](X1,X2) = 2.X2
[U81](X) = X
[U91](X1,X2,X3,X4) = 2.X2 + 2.X3
[U92](X1,X2,X3,X4) = 2.X2 + 2.X3
[U93](X1,X2,X3,X4) = 2.X2 + 2.X3
[cons](X1,X2) = 2.X2
[fSNonEmpty] = 0
[isNat](X) = X
[isNatIList](X) = 2
[isNatList](X) = X
[length](X) = X
[nil] = 2
[s](X) = 2.X
[take](X1,X2) = X1 + X2
[tt] = 2
[zeros] = 0
[AU95U95U11](X) = 0
[AU95U95U21](X) = 0
[AU95U95U31](X) = 0
[AU95U95U41](X1,X2) = 0
[AU95U95U42](X) = 0
[AU95U95U51](X1,X2) = 0
[AU95U95U52](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X) = 0
[AU95U95U71](X1,X2,X3) = 2.X1 + 2.X2
[AU95U95U72](X1,X2) = 2.X2 + 2
[AU95U95U81](X) = 0
[AU95U95U91](X1,X2,X3,X4) = 0
[AU95U95U92](X1,X2,X3,X4) = 0
[AU95U95U93](X1,X2,X3,X4) = 0
[AU95U95ISNAT](X) = 0
[AU95U95ISNATILIST](X) = 0
[AU95U95ISNATLIST](X) = 0
[AU95U95LENGTH](X) = 2.X
[AU95U95TAKE](X1,X2) = 0
[AU95U95ZEROS] = 0
[MARK](X) = 0

Problem 1.2.1: 

SCC Processor:
-> Pairs:
 AU95U95U72(tt,L) -> AU95U95LENGTH(mark(L))
 AU95U95LENGTH(cons(N,L)) -> AU95U95U71(au95u95isNatList(L),L,N)
-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt) -> tt
 au95u95U21(X) -> U21(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNatIList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isNatList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt,V2) -> au95u95U62(au95u95isNatIList(V2))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,L,N) -> au95u95U72(au95u95isNat(N),L)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,L) -> s(au95u95length(mark(L)))
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U81(tt) -> nil
 au95u95U81(X) -> U81(X)
 au95u95U91(tt,IL,M,N) -> au95u95U92(au95u95isNat(M),IL,M,N)
 au95u95U91(X1,X2,X3,X4) -> U91(X1,X2,X3,X4)
 au95u95U92(tt,IL,M,N) -> au95u95U93(au95u95isNat(N),IL,M,N)
 au95u95U92(X1,X2,X3,X4) -> U92(X1,X2,X3,X4)
 au95u95U93(tt,IL,M,N) -> cons(mark(N),take(M,IL))
 au95u95U93(X1,X2,X3,X4) -> U93(X1,X2,X3,X4)
 au95u95isNat(num0) -> tt
 au95u95isNat(length(V1)) -> au95u95U11(au95u95isNatList(V1))
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNat(V1))
 au95u95isNat(X) -> isNat(X)
 au95u95isNatIList(cons(V1,V2)) -> au95u95U41(au95u95isNat(V1),V2)
 au95u95isNatIList(zeros) -> tt
 au95u95isNatIList(V) -> au95u95U31(au95u95isNatList(V))
 au95u95isNatIList(X) -> isNatIList(X)
 au95u95isNatList(cons(V1,V2)) -> au95u95U51(au95u95isNat(V1),V2)
 au95u95isNatList(nil) -> tt
 au95u95isNatList(take(V1,V2)) -> au95u95U61(au95u95isNat(V1),V2)
 au95u95isNatList(X) -> isNatList(X)
 au95u95length(cons(N,L)) -> au95u95U71(au95u95isNatList(L),L,N)
 au95u95length(nil) -> num0
 au95u95length(X) -> length(X)
 au95u95take(num0,IL) -> au95u95U81(au95u95isNatIList(IL))
 au95u95take(s(M),cons(N,IL)) -> au95u95U91(au95u95isNatIList(IL),IL,M,N)
 au95u95take(X1,X2) -> take(X1,X2)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X)) -> au95u95U21(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(U91(X1,X2,X3,X4)) -> au95u95U91(mark(X1),X2,X3,X4)
 mark(U92(X1,X2,X3,X4)) -> au95u95U92(mark(X1),X2,X3,X4)
 mark(U93(X1,X2,X3,X4)) -> au95u95U93(mark(X1),X2,X3,X4)
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatIList(X)) -> au95u95isNatIList(X)
 mark(isNatList(X)) -> au95u95isNatList(X)
 mark(length(X)) -> au95u95length(mark(X))
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(take(X1,X2)) -> au95u95take(mark(X1),mark(X2))
 mark(tt) -> tt
 mark(zeros) -> au95u95zeros
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2.2: 

Reduction Pair Processor:
-> Pairs:
 AU95U95U91(tt,IL,M,N) -> AU95U95U92(au95u95isNat(M),IL,M,N)
 AU95U95U92(tt,IL,M,N) -> AU95U95U93(au95u95isNat(N),IL,M,N)
 AU95U95U93(tt,IL,M,N) -> MARK(N)
 AU95U95TAKE(s(M),cons(N,IL)) -> AU95U95U91(au95u95isNatIList(IL),IL,M,N)
 MARK(U11(X)) -> MARK(X)
 MARK(U21(X)) -> MARK(X)
 MARK(U31(X)) -> MARK(X)
 MARK(U41(X1,X2)) -> MARK(X1)
 MARK(U42(X)) -> MARK(X)
 MARK(U51(X1,X2)) -> MARK(X1)
 MARK(U52(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2,X3)) -> MARK(X1)
 MARK(U72(X1,X2)) -> MARK(X1)
 MARK(U81(X)) -> MARK(X)
 MARK(U91(X1,X2,X3,X4)) -> AU95U95U91(mark(X1),X2,X3,X4)
 MARK(U91(X1,X2,X3,X4)) -> MARK(X1)
 MARK(U92(X1,X2,X3,X4)) -> AU95U95U92(mark(X1),X2,X3,X4)
 MARK(U92(X1,X2,X3,X4)) -> MARK(X1)
 MARK(U93(X1,X2,X3,X4)) -> AU95U95U93(mark(X1),X2,X3,X4)
 MARK(U93(X1,X2,X3,X4)) -> MARK(X1)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(length(X)) -> MARK(X)
 MARK(s(X)) -> MARK(X)
 MARK(take(X1,X2)) -> AU95U95TAKE(mark(X1),mark(X2))
 MARK(take(X1,X2)) -> MARK(X1)
 MARK(take(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt) -> tt
 au95u95U21(X) -> U21(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNatIList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isNatList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt,V2) -> au95u95U62(au95u95isNatIList(V2))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,L,N) -> au95u95U72(au95u95isNat(N),L)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,L) -> s(au95u95length(mark(L)))
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U81(tt) -> nil
 au95u95U81(X) -> U81(X)
 au95u95U91(tt,IL,M,N) -> au95u95U92(au95u95isNat(M),IL,M,N)
 au95u95U91(X1,X2,X3,X4) -> U91(X1,X2,X3,X4)
 au95u95U92(tt,IL,M,N) -> au95u95U93(au95u95isNat(N),IL,M,N)
 au95u95U92(X1,X2,X3,X4) -> U92(X1,X2,X3,X4)
 au95u95U93(tt,IL,M,N) -> cons(mark(N),take(M,IL))
 au95u95U93(X1,X2,X3,X4) -> U93(X1,X2,X3,X4)
 au95u95isNat(num0) -> tt
 au95u95isNat(length(V1)) -> au95u95U11(au95u95isNatList(V1))
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNat(V1))
 au95u95isNat(X) -> isNat(X)
 au95u95isNatIList(cons(V1,V2)) -> au95u95U41(au95u95isNat(V1),V2)
 au95u95isNatIList(zeros) -> tt
 au95u95isNatIList(V) -> au95u95U31(au95u95isNatList(V))
 au95u95isNatIList(X) -> isNatIList(X)
 au95u95isNatList(cons(V1,V2)) -> au95u95U51(au95u95isNat(V1),V2)
 au95u95isNatList(nil) -> tt
 au95u95isNatList(take(V1,V2)) -> au95u95U61(au95u95isNat(V1),V2)
 au95u95isNatList(X) -> isNatList(X)
 au95u95length(cons(N,L)) -> au95u95U71(au95u95isNatList(L),L,N)
 au95u95length(nil) -> num0
 au95u95length(X) -> length(X)
 au95u95take(num0,IL) -> au95u95U81(au95u95isNatIList(IL))
 au95u95take(s(M),cons(N,IL)) -> au95u95U91(au95u95isNatIList(IL),IL,M,N)
 au95u95take(X1,X2) -> take(X1,X2)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X)) -> au95u95U21(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(U91(X1,X2,X3,X4)) -> au95u95U91(mark(X1),X2,X3,X4)
 mark(U92(X1,X2,X3,X4)) -> au95u95U92(mark(X1),X2,X3,X4)
 mark(U93(X1,X2,X3,X4)) -> au95u95U93(mark(X1),X2,X3,X4)
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatIList(X)) -> au95u95isNatIList(X)
 mark(isNatList(X)) -> au95u95isNatList(X)
 mark(length(X)) -> au95u95length(mark(X))
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(take(X1,X2)) -> au95u95take(mark(X1),mark(X2))
 mark(tt) -> tt
 mark(zeros) -> au95u95zeros
-> Usable rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt) -> tt
 au95u95U21(X) -> U21(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNatIList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isNatList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt,V2) -> au95u95U62(au95u95isNatIList(V2))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,L,N) -> au95u95U72(au95u95isNat(N),L)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,L) -> s(au95u95length(mark(L)))
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U81(tt) -> nil
 au95u95U81(X) -> U81(X)
 au95u95U91(tt,IL,M,N) -> au95u95U92(au95u95isNat(M),IL,M,N)
 au95u95U91(X1,X2,X3,X4) -> U91(X1,X2,X3,X4)
 au95u95U92(tt,IL,M,N) -> au95u95U93(au95u95isNat(N),IL,M,N)
 au95u95U92(X1,X2,X3,X4) -> U92(X1,X2,X3,X4)
 au95u95U93(tt,IL,M,N) -> cons(mark(N),take(M,IL))
 au95u95U93(X1,X2,X3,X4) -> U93(X1,X2,X3,X4)
 au95u95isNat(num0) -> tt
 au95u95isNat(length(V1)) -> au95u95U11(au95u95isNatList(V1))
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNat(V1))
 au95u95isNat(X) -> isNat(X)
 au95u95isNatIList(cons(V1,V2)) -> au95u95U41(au95u95isNat(V1),V2)
 au95u95isNatIList(zeros) -> tt
 au95u95isNatIList(V) -> au95u95U31(au95u95isNatList(V))
 au95u95isNatIList(X) -> isNatIList(X)
 au95u95isNatList(cons(V1,V2)) -> au95u95U51(au95u95isNat(V1),V2)
 au95u95isNatList(nil) -> tt
 au95u95isNatList(take(V1,V2)) -> au95u95U61(au95u95isNat(V1),V2)
 au95u95isNatList(X) -> isNatList(X)
 au95u95length(cons(N,L)) -> au95u95U71(au95u95isNatList(L),L,N)
 au95u95length(nil) -> num0
 au95u95length(X) -> length(X)
 au95u95take(num0,IL) -> au95u95U81(au95u95isNatIList(IL))
 au95u95take(s(M),cons(N,IL)) -> au95u95U91(au95u95isNatIList(IL),IL,M,N)
 au95u95take(X1,X2) -> take(X1,X2)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X)) -> au95u95U21(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(U91(X1,X2,X3,X4)) -> au95u95U91(mark(X1),X2,X3,X4)
 mark(U92(X1,X2,X3,X4)) -> au95u95U92(mark(X1),X2,X3,X4)
 mark(U93(X1,X2,X3,X4)) -> au95u95U93(mark(X1),X2,X3,X4)
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatIList(X)) -> au95u95isNatIList(X)
 mark(isNatList(X)) -> au95u95isNatList(X)
 mark(length(X)) -> au95u95length(mark(X))
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(take(X1,X2)) -> au95u95take(mark(X1),mark(X2))
 mark(tt) -> tt
 mark(zeros) -> au95u95zeros
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X) = X
[au95u95U21](X) = X
[au95u95U31](X) = X
[au95u95U41](X1,X2) = X1
[au95u95U42](X) = X
[au95u95U51](X1,X2) = X1
[au95u95U52](X) = X
[au95u95U61](X1,X2) = X1
[au95u95U62](X) = X
[au95u95U71](X1,X2,X3) = X1 + 2.X2 + 2.X3
[au95u95U72](X1,X2) = X1 + 2.X2
[au95u95U81](X) = X
[au95u95U91](X1,X2,X3,X4) = X1 + 2.X2 + 2.X3 + 2.X4
[au95u95U92](X1,X2,X3,X4) = X1 + 2.X2 + 2.X3 + 2.X4
[au95u95U93](X1,X2,X3,X4) = X1 + 2.X2 + 2.X3 + 2.X4
[au95u95isNat](X) = 2
[au95u95isNatIList](X) = 2
[au95u95isNatList](X) = 2
[au95u95length](X) = 2.X + 2
[au95u95take](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95zeros] = 2
[mark](X) = X
[num0] = 0
[U11](X) = X
[U21](X) = X
[U31](X) = X
[U41](X1,X2) = X1
[U42](X) = X
[U51](X1,X2) = X1
[U52](X) = X
[U61](X1,X2) = X1
[U62](X) = X
[U71](X1,X2,X3) = X1 + 2.X2 + 2.X3
[U72](X1,X2) = X1 + 2.X2
[U81](X) = X
[U91](X1,X2,X3,X4) = X1 + 2.X2 + 2.X3 + 2.X4
[U92](X1,X2,X3,X4) = X1 + 2.X2 + 2.X3 + 2.X4
[U93](X1,X2,X3,X4) = X1 + 2.X2 + 2.X3 + 2.X4
[cons](X1,X2) = X1 + X2
[fSNonEmpty] = 0
[isNat](X) = 2
[isNatIList](X) = 2
[isNatList](X) = 2
[length](X) = 2.X + 2
[nil] = 2
[s](X) = X
[take](X1,X2) = 2.X1 + 2.X2 + 2
[tt] = 2
[zeros] = 2
[AU95U95U11](X) = 0
[AU95U95U21](X) = 0
[AU95U95U31](X) = 0
[AU95U95U41](X1,X2) = 0
[AU95U95U42](X) = 0
[AU95U95U51](X1,X2) = 0
[AU95U95U52](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X) = 0
[AU95U95U71](X1,X2,X3) = 0
[AU95U95U72](X1,X2) = 0
[AU95U95U81](X) = 0
[AU95U95U91](X1,X2,X3,X4) = X1 + 2.X2 + 2.X3 + 2.X4
[AU95U95U92](X1,X2,X3,X4) = 2.X2 + 2.X3 + 2.X4 + 1
[AU95U95U93](X1,X2,X3,X4) = 2.X2 + X3 + 2.X4 + 1
[AU95U95ISNAT](X) = 0
[AU95U95ISNATILIST](X) = 0
[AU95U95ISNATLIST](X) = 0
[AU95U95LENGTH](X) = 0
[AU95U95TAKE](X1,X2) = 2.X1 + 2.X2 + 2
[AU95U95ZEROS] = 0
[MARK](X) = 2.X + 1

Problem 1.2.2: 

SCC Processor:
-> Pairs:
 AU95U95U92(tt,IL,M,N) -> AU95U95U93(au95u95isNat(N),IL,M,N)
 AU95U95U93(tt,IL,M,N) -> MARK(N)
 AU95U95TAKE(s(M),cons(N,IL)) -> AU95U95U91(au95u95isNatIList(IL),IL,M,N)
 MARK(U11(X)) -> MARK(X)
 MARK(U21(X)) -> MARK(X)
 MARK(U31(X)) -> MARK(X)
 MARK(U41(X1,X2)) -> MARK(X1)
 MARK(U42(X)) -> MARK(X)
 MARK(U51(X1,X2)) -> MARK(X1)
 MARK(U52(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2,X3)) -> MARK(X1)
 MARK(U72(X1,X2)) -> MARK(X1)
 MARK(U81(X)) -> MARK(X)
 MARK(U91(X1,X2,X3,X4)) -> AU95U95U91(mark(X1),X2,X3,X4)
 MARK(U91(X1,X2,X3,X4)) -> MARK(X1)
 MARK(U92(X1,X2,X3,X4)) -> AU95U95U92(mark(X1),X2,X3,X4)
 MARK(U92(X1,X2,X3,X4)) -> MARK(X1)
 MARK(U93(X1,X2,X3,X4)) -> AU95U95U93(mark(X1),X2,X3,X4)
 MARK(U93(X1,X2,X3,X4)) -> MARK(X1)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(length(X)) -> MARK(X)
 MARK(s(X)) -> MARK(X)
 MARK(take(X1,X2)) -> AU95U95TAKE(mark(X1),mark(X2))
 MARK(take(X1,X2)) -> MARK(X1)
 MARK(take(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt) -> tt
 au95u95U21(X) -> U21(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNatIList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isNatList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt,V2) -> au95u95U62(au95u95isNatIList(V2))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,L,N) -> au95u95U72(au95u95isNat(N),L)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,L) -> s(au95u95length(mark(L)))
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U81(tt) -> nil
 au95u95U81(X) -> U81(X)
 au95u95U91(tt,IL,M,N) -> au95u95U92(au95u95isNat(M),IL,M,N)
 au95u95U91(X1,X2,X3,X4) -> U91(X1,X2,X3,X4)
 au95u95U92(tt,IL,M,N) -> au95u95U93(au95u95isNat(N),IL,M,N)
 au95u95U92(X1,X2,X3,X4) -> U92(X1,X2,X3,X4)
 au95u95U93(tt,IL,M,N) -> cons(mark(N),take(M,IL))
 au95u95U93(X1,X2,X3,X4) -> U93(X1,X2,X3,X4)
 au95u95isNat(num0) -> tt
 au95u95isNat(length(V1)) -> au95u95U11(au95u95isNatList(V1))
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNat(V1))
 au95u95isNat(X) -> isNat(X)
 au95u95isNatIList(cons(V1,V2)) -> au95u95U41(au95u95isNat(V1),V2)
 au95u95isNatIList(zeros) -> tt
 au95u95isNatIList(V) -> au95u95U31(au95u95isNatList(V))
 au95u95isNatIList(X) -> isNatIList(X)
 au95u95isNatList(cons(V1,V2)) -> au95u95U51(au95u95isNat(V1),V2)
 au95u95isNatList(nil) -> tt
 au95u95isNatList(take(V1,V2)) -> au95u95U61(au95u95isNat(V1),V2)
 au95u95isNatList(X) -> isNatList(X)
 au95u95length(cons(N,L)) -> au95u95U71(au95u95isNatList(L),L,N)
 au95u95length(nil) -> num0
 au95u95length(X) -> length(X)
 au95u95take(num0,IL) -> au95u95U81(au95u95isNatIList(IL))
 au95u95take(s(M),cons(N,IL)) -> au95u95U91(au95u95isNatIList(IL),IL,M,N)
 au95u95take(X1,X2) -> take(X1,X2)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X)) -> au95u95U21(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(U91(X1,X2,X3,X4)) -> au95u95U91(mark(X1),X2,X3,X4)
 mark(U92(X1,X2,X3,X4)) -> au95u95U92(mark(X1),X2,X3,X4)
 mark(U93(X1,X2,X3,X4)) -> au95u95U93(mark(X1),X2,X3,X4)
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatIList(X)) -> au95u95isNatIList(X)
 mark(isNatList(X)) -> au95u95isNatList(X)
 mark(length(X)) -> au95u95length(mark(X))
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(take(X1,X2)) -> au95u95take(mark(X1),mark(X2))
 mark(tt) -> tt
 mark(zeros) -> au95u95zeros
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U92(tt,IL,M,N) -> AU95U95U93(au95u95isNat(N),IL,M,N)
 AU95U95U93(tt,IL,M,N) -> MARK(N)
 MARK(U11(X)) -> MARK(X)
 MARK(U21(X)) -> MARK(X)
 MARK(U31(X)) -> MARK(X)
 MARK(U41(X1,X2)) -> MARK(X1)
 MARK(U42(X)) -> MARK(X)
 MARK(U51(X1,X2)) -> MARK(X1)
 MARK(U52(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2,X3)) -> MARK(X1)
 MARK(U72(X1,X2)) -> MARK(X1)
 MARK(U81(X)) -> MARK(X)
 MARK(U91(X1,X2,X3,X4)) -> MARK(X1)
 MARK(U92(X1,X2,X3,X4)) -> AU95U95U92(mark(X1),X2,X3,X4)
 MARK(U92(X1,X2,X3,X4)) -> MARK(X1)
 MARK(U93(X1,X2,X3,X4)) -> AU95U95U93(mark(X1),X2,X3,X4)
 MARK(U93(X1,X2,X3,X4)) -> MARK(X1)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(length(X)) -> MARK(X)
 MARK(s(X)) -> MARK(X)
 MARK(take(X1,X2)) -> MARK(X1)
 MARK(take(X1,X2)) -> MARK(X2)
->->-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt) -> tt
 au95u95U21(X) -> U21(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNatIList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isNatList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt,V2) -> au95u95U62(au95u95isNatIList(V2))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,L,N) -> au95u95U72(au95u95isNat(N),L)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,L) -> s(au95u95length(mark(L)))
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U81(tt) -> nil
 au95u95U81(X) -> U81(X)
 au95u95U91(tt,IL,M,N) -> au95u95U92(au95u95isNat(M),IL,M,N)
 au95u95U91(X1,X2,X3,X4) -> U91(X1,X2,X3,X4)
 au95u95U92(tt,IL,M,N) -> au95u95U93(au95u95isNat(N),IL,M,N)
 au95u95U92(X1,X2,X3,X4) -> U92(X1,X2,X3,X4)
 au95u95U93(tt,IL,M,N) -> cons(mark(N),take(M,IL))
 au95u95U93(X1,X2,X3,X4) -> U93(X1,X2,X3,X4)
 au95u95isNat(num0) -> tt
 au95u95isNat(length(V1)) -> au95u95U11(au95u95isNatList(V1))
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNat(V1))
 au95u95isNat(X) -> isNat(X)
 au95u95isNatIList(cons(V1,V2)) -> au95u95U41(au95u95isNat(V1),V2)
 au95u95isNatIList(zeros) -> tt
 au95u95isNatIList(V) -> au95u95U31(au95u95isNatList(V))
 au95u95isNatIList(X) -> isNatIList(X)
 au95u95isNatList(cons(V1,V2)) -> au95u95U51(au95u95isNat(V1),V2)
 au95u95isNatList(nil) -> tt
 au95u95isNatList(take(V1,V2)) -> au95u95U61(au95u95isNat(V1),V2)
 au95u95isNatList(X) -> isNatList(X)
 au95u95length(cons(N,L)) -> au95u95U71(au95u95isNatList(L),L,N)
 au95u95length(nil) -> num0
 au95u95length(X) -> length(X)
 au95u95take(num0,IL) -> au95u95U81(au95u95isNatIList(IL))
 au95u95take(s(M),cons(N,IL)) -> au95u95U91(au95u95isNatIList(IL),IL,M,N)
 au95u95take(X1,X2) -> take(X1,X2)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X)) -> au95u95U21(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(U91(X1,X2,X3,X4)) -> au95u95U91(mark(X1),X2,X3,X4)
 mark(U92(X1,X2,X3,X4)) -> au95u95U92(mark(X1),X2,X3,X4)
 mark(U93(X1,X2,X3,X4)) -> au95u95U93(mark(X1),X2,X3,X4)
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatIList(X)) -> au95u95isNatIList(X)
 mark(isNatList(X)) -> au95u95isNatList(X)
 mark(length(X)) -> au95u95length(mark(X))
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(take(X1,X2)) -> au95u95take(mark(X1),mark(X2))
 mark(tt) -> tt
 mark(zeros) -> au95u95zeros

Problem 1.2.2: 

Subterm Processor:
-> Pairs:
 AU95U95U92(tt,IL,M,N) -> AU95U95U93(au95u95isNat(N),IL,M,N)
 AU95U95U93(tt,IL,M,N) -> MARK(N)
 MARK(U11(X)) -> MARK(X)
 MARK(U21(X)) -> MARK(X)
 MARK(U31(X)) -> MARK(X)
 MARK(U41(X1,X2)) -> MARK(X1)
 MARK(U42(X)) -> MARK(X)
 MARK(U51(X1,X2)) -> MARK(X1)
 MARK(U52(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2,X3)) -> MARK(X1)
 MARK(U72(X1,X2)) -> MARK(X1)
 MARK(U81(X)) -> MARK(X)
 MARK(U91(X1,X2,X3,X4)) -> MARK(X1)
 MARK(U92(X1,X2,X3,X4)) -> AU95U95U92(mark(X1),X2,X3,X4)
 MARK(U92(X1,X2,X3,X4)) -> MARK(X1)
 MARK(U93(X1,X2,X3,X4)) -> AU95U95U93(mark(X1),X2,X3,X4)
 MARK(U93(X1,X2,X3,X4)) -> MARK(X1)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(length(X)) -> MARK(X)
 MARK(s(X)) -> MARK(X)
 MARK(take(X1,X2)) -> MARK(X1)
 MARK(take(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt) -> tt
 au95u95U21(X) -> U21(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNatIList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isNatList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt,V2) -> au95u95U62(au95u95isNatIList(V2))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,L,N) -> au95u95U72(au95u95isNat(N),L)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,L) -> s(au95u95length(mark(L)))
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U81(tt) -> nil
 au95u95U81(X) -> U81(X)
 au95u95U91(tt,IL,M,N) -> au95u95U92(au95u95isNat(M),IL,M,N)
 au95u95U91(X1,X2,X3,X4) -> U91(X1,X2,X3,X4)
 au95u95U92(tt,IL,M,N) -> au95u95U93(au95u95isNat(N),IL,M,N)
 au95u95U92(X1,X2,X3,X4) -> U92(X1,X2,X3,X4)
 au95u95U93(tt,IL,M,N) -> cons(mark(N),take(M,IL))
 au95u95U93(X1,X2,X3,X4) -> U93(X1,X2,X3,X4)
 au95u95isNat(num0) -> tt
 au95u95isNat(length(V1)) -> au95u95U11(au95u95isNatList(V1))
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNat(V1))
 au95u95isNat(X) -> isNat(X)
 au95u95isNatIList(cons(V1,V2)) -> au95u95U41(au95u95isNat(V1),V2)
 au95u95isNatIList(zeros) -> tt
 au95u95isNatIList(V) -> au95u95U31(au95u95isNatList(V))
 au95u95isNatIList(X) -> isNatIList(X)
 au95u95isNatList(cons(V1,V2)) -> au95u95U51(au95u95isNat(V1),V2)
 au95u95isNatList(nil) -> tt
 au95u95isNatList(take(V1,V2)) -> au95u95U61(au95u95isNat(V1),V2)
 au95u95isNatList(X) -> isNatList(X)
 au95u95length(cons(N,L)) -> au95u95U71(au95u95isNatList(L),L,N)
 au95u95length(nil) -> num0
 au95u95length(X) -> length(X)
 au95u95take(num0,IL) -> au95u95U81(au95u95isNatIList(IL))
 au95u95take(s(M),cons(N,IL)) -> au95u95U91(au95u95isNatIList(IL),IL,M,N)
 au95u95take(X1,X2) -> take(X1,X2)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X)) -> au95u95U21(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(U91(X1,X2,X3,X4)) -> au95u95U91(mark(X1),X2,X3,X4)
 mark(U92(X1,X2,X3,X4)) -> au95u95U92(mark(X1),X2,X3,X4)
 mark(U93(X1,X2,X3,X4)) -> au95u95U93(mark(X1),X2,X3,X4)
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatIList(X)) -> au95u95isNatIList(X)
 mark(isNatList(X)) -> au95u95isNatList(X)
 mark(length(X)) -> au95u95length(mark(X))
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(take(X1,X2)) -> au95u95take(mark(X1),mark(X2))
 mark(tt) -> tt
 mark(zeros) -> au95u95zeros
->Projection:
 pi(AU95U95U92) = 4
 pi(AU95U95U93) = 4
 pi(MARK) = 1

Problem 1.2.2: 

SCC Processor:
-> Pairs:
 AU95U95U92(tt,IL,M,N) -> AU95U95U93(au95u95isNat(N),IL,M,N)
 AU95U95U93(tt,IL,M,N) -> MARK(N)
-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt) -> tt
 au95u95U21(X) -> U21(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNatIList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isNatList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt,V2) -> au95u95U62(au95u95isNatIList(V2))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,L,N) -> au95u95U72(au95u95isNat(N),L)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,L) -> s(au95u95length(mark(L)))
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U81(tt) -> nil
 au95u95U81(X) -> U81(X)
 au95u95U91(tt,IL,M,N) -> au95u95U92(au95u95isNat(M),IL,M,N)
 au95u95U91(X1,X2,X3,X4) -> U91(X1,X2,X3,X4)
 au95u95U92(tt,IL,M,N) -> au95u95U93(au95u95isNat(N),IL,M,N)
 au95u95U92(X1,X2,X3,X4) -> U92(X1,X2,X3,X4)
 au95u95U93(tt,IL,M,N) -> cons(mark(N),take(M,IL))
 au95u95U93(X1,X2,X3,X4) -> U93(X1,X2,X3,X4)
 au95u95isNat(num0) -> tt
 au95u95isNat(length(V1)) -> au95u95U11(au95u95isNatList(V1))
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNat(V1))
 au95u95isNat(X) -> isNat(X)
 au95u95isNatIList(cons(V1,V2)) -> au95u95U41(au95u95isNat(V1),V2)
 au95u95isNatIList(zeros) -> tt
 au95u95isNatIList(V) -> au95u95U31(au95u95isNatList(V))
 au95u95isNatIList(X) -> isNatIList(X)
 au95u95isNatList(cons(V1,V2)) -> au95u95U51(au95u95isNat(V1),V2)
 au95u95isNatList(nil) -> tt
 au95u95isNatList(take(V1,V2)) -> au95u95U61(au95u95isNat(V1),V2)
 au95u95isNatList(X) -> isNatList(X)
 au95u95length(cons(N,L)) -> au95u95U71(au95u95isNatList(L),L,N)
 au95u95length(nil) -> num0
 au95u95length(X) -> length(X)
 au95u95take(num0,IL) -> au95u95U81(au95u95isNatIList(IL))
 au95u95take(s(M),cons(N,IL)) -> au95u95U91(au95u95isNatIList(IL),IL,M,N)
 au95u95take(X1,X2) -> take(X1,X2)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X)) -> au95u95U21(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(U91(X1,X2,X3,X4)) -> au95u95U91(mark(X1),X2,X3,X4)
 mark(U92(X1,X2,X3,X4)) -> au95u95U92(mark(X1),X2,X3,X4)
 mark(U93(X1,X2,X3,X4)) -> au95u95U93(mark(X1),X2,X3,X4)
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatIList(X)) -> au95u95isNatIList(X)
 mark(isNatList(X)) -> au95u95isNatList(X)
 mark(length(X)) -> au95u95length(mark(X))
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(take(X1,X2)) -> au95u95take(mark(X1),mark(X2))
 mark(tt) -> tt
 mark(zeros) -> au95u95zeros
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
