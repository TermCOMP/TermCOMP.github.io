YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/tRoPp.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 0 ms]
(2) QDP
(3) DependencyGraphProof [EQUIVALENT, 0 ms]
(4) AND
    (5) QDP
        (6) UsableRulesProof [EQUIVALENT, 0 ms]
        (7) QDP
        (8) UsableRulesReductionPairsProof [EQUIVALENT, 0 ms]
        (9) QDP
        (10) PisEmptyProof [EQUIVALENT, 0 ms]
        (11) YES
    (12) QDP
        (13) QDPOrderProof [EQUIVALENT, 16 ms]
        (14) QDP
        (15) PisEmptyProof [EQUIVALENT, 0 ms]
        (16) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   b(a, b(c(z, x, y), a)) -> b(b(z, c(y, z, a)), x)
   f(c(a, b(b(z, a), y), x)) -> f(c(x, b(z, x), y))
   c(f(c(a, y, a)), x, z) -> f(b(b(z, z), f(b(y, b(x, a)))))

Q is empty.

----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(a, b(c(z, x, y), a)) -> B(b(z, c(y, z, a)), x)
   B(a, b(c(z, x, y), a)) -> B(z, c(y, z, a))
   B(a, b(c(z, x, y), a)) -> C(y, z, a)
   F(c(a, b(b(z, a), y), x)) -> F(c(x, b(z, x), y))
   F(c(a, b(b(z, a), y), x)) -> C(x, b(z, x), y)
   F(c(a, b(b(z, a), y), x)) -> B(z, x)
   C(f(c(a, y, a)), x, z) -> F(b(b(z, z), f(b(y, b(x, a)))))
   C(f(c(a, y, a)), x, z) -> B(b(z, z), f(b(y, b(x, a))))
   C(f(c(a, y, a)), x, z) -> B(z, z)
   C(f(c(a, y, a)), x, z) -> F(b(y, b(x, a)))
   C(f(c(a, y, a)), x, z) -> B(y, b(x, a))
   C(f(c(a, y, a)), x, z) -> B(x, a)

The TRS R consists of the following rules:

   b(a, b(c(z, x, y), a)) -> b(b(z, c(y, z, a)), x)
   f(c(a, b(b(z, a), y), x)) -> f(c(x, b(z, x), y))
   c(f(c(a, y, a)), x, z) -> f(b(b(z, z), f(b(y, b(x, a)))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs with 9 less nodes.
----------------------------------------

(4)
Complex Obligation (AND)

----------------------------------------

(5)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(a, b(c(z, x, y), a)) -> C(y, z, a)
   C(f(c(a, y, a)), x, z) -> B(y, b(x, a))

The TRS R consists of the following rules:

   b(a, b(c(z, x, y), a)) -> b(b(z, c(y, z, a)), x)
   f(c(a, b(b(z, a), y), x)) -> f(c(x, b(z, x), y))
   c(f(c(a, y, a)), x, z) -> f(b(b(z, z), f(b(y, b(x, a)))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(6) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(7)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(a, b(c(z, x, y), a)) -> C(y, z, a)
   C(f(c(a, y, a)), x, z) -> B(y, b(x, a))

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(8) UsableRulesReductionPairsProof (EQUIVALENT)
By using the usable rules with reduction pair processor [LPAR04] with a polynomial ordering [POLO], all dependency pairs and the corresponding usable rules [FROCOS05] can be oriented non-strictly. All non-usable rules are removed, and those dependency pairs and usable rules that have been oriented strictly or contain non-usable symbols in their left-hand side are removed as well.

The following dependency pairs can be deleted:

   B(a, b(c(z, x, y), a)) -> C(y, z, a)
   C(f(c(a, y, a)), x, z) -> B(y, b(x, a))
No rules are removed from R.

Used ordering: POLO with Polynomial interpretation [POLO]:

   POL(B(x_1, x_2)) = x_1 + x_2
   POL(C(x_1, x_2, x_3)) = x_1 + 2*x_2 + 2*x_3
   POL(a) = 0
   POL(b(x_1, x_2)) = 2*x_1 + 2*x_2
   POL(c(x_1, x_2, x_3)) = 2*x_1 + x_2 + x_3
   POL(f(x_1)) = x_1


----------------------------------------

(9)
Obligation:
Q DP problem:
P is empty.
R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(10) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(11)
YES

----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(c(a, b(b(z, a), y), x)) -> F(c(x, b(z, x), y))

The TRS R consists of the following rules:

   b(a, b(c(z, x, y), a)) -> b(b(z, c(y, z, a)), x)
   f(c(a, b(b(z, a), y), x)) -> f(c(x, b(z, x), y))
   c(f(c(a, y, a)), x, z) -> f(b(b(z, z), f(b(y, b(x, a)))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   F(c(a, b(b(z, a), y), x)) -> F(c(x, b(z, x), y))
The remaining pairs can at least be oriented weakly.
Used ordering:  Matrix interpretation [MATRO] to (N^2, +, *, >=, >) :

   <<<
 POL(F(x_1)) =  	[[0]] 	 +  	[[0, 1]] 	* 	x_1
>>>

   <<<
 POL(c(x_1, x_2, x_3)) =  	[[0], [1]] 	 +  	[[1, 1], [0, 0]] 	* 	x_1 	 +  	[[0, 0], [1, 0]] 	* 	x_2 	 +  	[[1, 1], [1, 0]] 	* 	x_3
>>>

   <<<
 POL(a) =  	[[1], [1]]
>>>

   <<<
 POL(b(x_1, x_2)) =  	[[0], [0]] 	 +  	[[1, 1], [0, 0]] 	* 	x_1 	 +  	[[1, 0], [0, 0]] 	* 	x_2
>>>

   <<<
 POL(f(x_1)) =  	[[0], [1]] 	 +  	[[0, 0], [0, 0]] 	* 	x_1
>>>


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   b(a, b(c(z, x, y), a)) -> b(b(z, c(y, z, a)), x)
   c(f(c(a, y, a)), x, z) -> f(b(b(z, z), f(b(y, b(x, a)))))
   f(c(a, b(b(z, a), y), x)) -> f(c(x, b(z, x), y))


----------------------------------------

(14)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   b(a, b(c(z, x, y), a)) -> b(b(z, c(y, z, a)), x)
   f(c(a, b(b(z, a), y), x)) -> f(c(x, b(z, x), y))
   c(f(c(a, y, a)), x, z) -> f(b(b(z, z), f(b(y, b(x, a)))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(16)
YES
