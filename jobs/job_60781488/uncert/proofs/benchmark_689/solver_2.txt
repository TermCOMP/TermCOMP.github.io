YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/PRFrW.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRSRRRProof [EQUIVALENT, 30 ms]
(2) QTRS
(3) RisEmptyProof [EQUIVALENT, 0 ms]
(4) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   prime(0) -> false
   prime(s(0)) -> false
   prime(s(s(x))) -> prime1(s(s(x)), s(x))
   prime1(x, 0) -> false
   prime1(x, s(0)) -> true
   prime1(x, s(s(y))) -> and(not(divp(s(s(y)), x)), prime1(x, s(y)))
   divp(x, y) -> =(rem(x, y), 0)

Q is empty.

----------------------------------------

(1) QTRSRRRProof (EQUIVALENT)
Used ordering:
prime/1(YES)
0/0)
false/0)
s/1(YES)
prime1/2(YES,YES)
true/0)
and/2(YES,YES)
not/1)YES(
divp/2(YES,YES)
=/2(YES,YES)
rem/2(YES,YES)

Quasi precedence:
prime_1 > [false, prime1_2, true] > s_1 > [=_2, rem_2]
prime_1 > [false, prime1_2, true] > and_2 > [=_2, rem_2]
prime_1 > [false, prime1_2, true] > divp_2 > 0 > [=_2, rem_2]


Status:
prime_1: multiset status
0: multiset status
false: multiset status
s_1: [1]
prime1_2: [1,2]
true: multiset status
and_2: [1,2]
divp_2: multiset status
=_2: [1,2]
rem_2: [1,2]

With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   prime(0) -> false
   prime(s(0)) -> false
   prime(s(s(x))) -> prime1(s(s(x)), s(x))
   prime1(x, 0) -> false
   prime1(x, s(0)) -> true
   prime1(x, s(s(y))) -> and(not(divp(s(s(y)), x)), prime1(x, s(y)))
   divp(x, y) -> =(rem(x, y), 0)




----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
R is empty.
Q is empty.

----------------------------------------

(3) RisEmptyProof (EQUIVALENT)
The TRS R is empty. Hence, termination is trivially proven.
----------------------------------------

(4)
YES
