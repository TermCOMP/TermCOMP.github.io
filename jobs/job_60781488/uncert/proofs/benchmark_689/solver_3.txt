YES

Problem 1: 

(VAR vu95NonEmpty x y)
(RULES
divp(x,y) -> u61(rem(x,y),num0)
prime(num0) -> ffalse
prime(s(num0)) -> ffalse
prime(s(s(x))) -> prime1(s(s(x)),s(x))
prime1(x,num0) -> ffalse
prime1(x,s(num0)) -> ftrue
prime1(x,s(s(y))) -> and(not(divp(s(s(y)),x)),prime1(x,s(y)))
)


Problem 1: 

Innermost Equivalent Processor:
-> Rules:
 divp(x,y) -> u61(rem(x,y),num0)
 prime(num0) -> ffalse
 prime(s(num0)) -> ffalse
 prime(s(s(x))) -> prime1(s(s(x)),s(x))
 prime1(x,num0) -> ffalse
 prime1(x,s(num0)) -> ftrue
 prime1(x,s(s(y))) -> and(not(divp(s(s(y)),x)),prime1(x,s(y)))
-> The term rewriting system is non-overlaping or locally confluent overlay system. Therefore, innermost termination implies termination.
 

Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 PRIME(s(s(x))) -> PRIME1(s(s(x)),s(x))
 PRIME1(x,s(s(y))) -> DIVP(s(s(y)),x)
 PRIME1(x,s(s(y))) -> PRIME1(x,s(y))
-> Rules:
 divp(x,y) -> u61(rem(x,y),num0)
 prime(num0) -> ffalse
 prime(s(num0)) -> ffalse
 prime(s(s(x))) -> prime1(s(s(x)),s(x))
 prime1(x,num0) -> ffalse
 prime1(x,s(num0)) -> ftrue
 prime1(x,s(s(y))) -> and(not(divp(s(s(y)),x)),prime1(x,s(y)))

Problem 1: 

SCC Processor:
-> Pairs:
 PRIME(s(s(x))) -> PRIME1(s(s(x)),s(x))
 PRIME1(x,s(s(y))) -> DIVP(s(s(y)),x)
 PRIME1(x,s(s(y))) -> PRIME1(x,s(y))
-> Rules:
 divp(x,y) -> u61(rem(x,y),num0)
 prime(num0) -> ffalse
 prime(s(num0)) -> ffalse
 prime(s(s(x))) -> prime1(s(s(x)),s(x))
 prime1(x,num0) -> ffalse
 prime1(x,s(num0)) -> ftrue
 prime1(x,s(s(y))) -> and(not(divp(s(s(y)),x)),prime1(x,s(y)))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 PRIME1(x,s(s(y))) -> PRIME1(x,s(y))
->->-> Rules:
 divp(x,y) -> u61(rem(x,y),num0)
 prime(num0) -> ffalse
 prime(s(num0)) -> ffalse
 prime(s(s(x))) -> prime1(s(s(x)),s(x))
 prime1(x,num0) -> ffalse
 prime1(x,s(num0)) -> ftrue
 prime1(x,s(s(y))) -> and(not(divp(s(s(y)),x)),prime1(x,s(y)))

Problem 1: 

Subterm Processor:
-> Pairs:
 PRIME1(x,s(s(y))) -> PRIME1(x,s(y))
-> Rules:
 divp(x,y) -> u61(rem(x,y),num0)
 prime(num0) -> ffalse
 prime(s(num0)) -> ffalse
 prime(s(s(x))) -> prime1(s(s(x)),s(x))
 prime1(x,num0) -> ffalse
 prime1(x,s(num0)) -> ftrue
 prime1(x,s(s(y))) -> and(not(divp(s(s(y)),x)),prime1(x,s(y)))
->Projection:
 pi(PRIME1) = 2

Problem 1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 divp(x,y) -> u61(rem(x,y),num0)
 prime(num0) -> ffalse
 prime(s(num0)) -> ffalse
 prime(s(s(x))) -> prime1(s(s(x)),s(x))
 prime1(x,num0) -> ffalse
 prime1(x,s(num0)) -> ftrue
 prime1(x,s(s(y))) -> and(not(divp(s(s(y)),x)),prime1(x,s(y)))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
