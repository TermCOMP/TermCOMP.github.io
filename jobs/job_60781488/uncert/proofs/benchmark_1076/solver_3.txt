YES

Problem 1: 

(VAR vu95NonEmpty X X1 X2 X3 Y)
(RULES
au95u95f(X) -> au95u95if(mark(X),c,f(ftrue))
au95u95f(X) -> f(X)
au95u95if(ffalse,X,Y) -> mark(Y)
au95u95if(ftrue,X,Y) -> mark(X)
au95u95if(X1,X2,X3) -> if(X1,X2,X3)
mark(c) -> c
mark(f(X)) -> au95u95f(mark(X))
mark(ffalse) -> ffalse
mark(if(X1,X2,X3)) -> au95u95if(mark(X1),mark(X2),X3)
mark(ftrue) -> ftrue
)


Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 AU95U95F(X) -> AU95U95IF(mark(X),c,f(ftrue))
 AU95U95F(X) -> MARK(X)
 AU95U95IF(ffalse,X,Y) -> MARK(Y)
 AU95U95IF(ftrue,X,Y) -> MARK(X)
 MARK(f(X)) -> AU95U95F(mark(X))
 MARK(f(X)) -> MARK(X)
 MARK(if(X1,X2,X3)) -> AU95U95IF(mark(X1),mark(X2),X3)
 MARK(if(X1,X2,X3)) -> MARK(X1)
 MARK(if(X1,X2,X3)) -> MARK(X2)
-> Rules:
 au95u95f(X) -> au95u95if(mark(X),c,f(ftrue))
 au95u95f(X) -> f(X)
 au95u95if(ffalse,X,Y) -> mark(Y)
 au95u95if(ftrue,X,Y) -> mark(X)
 au95u95if(X1,X2,X3) -> if(X1,X2,X3)
 mark(c) -> c
 mark(f(X)) -> au95u95f(mark(X))
 mark(ffalse) -> ffalse
 mark(if(X1,X2,X3)) -> au95u95if(mark(X1),mark(X2),X3)
 mark(ftrue) -> ftrue

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95F(X) -> AU95U95IF(mark(X),c,f(ftrue))
 AU95U95F(X) -> MARK(X)
 AU95U95IF(ffalse,X,Y) -> MARK(Y)
 AU95U95IF(ftrue,X,Y) -> MARK(X)
 MARK(f(X)) -> AU95U95F(mark(X))
 MARK(f(X)) -> MARK(X)
 MARK(if(X1,X2,X3)) -> AU95U95IF(mark(X1),mark(X2),X3)
 MARK(if(X1,X2,X3)) -> MARK(X1)
 MARK(if(X1,X2,X3)) -> MARK(X2)
-> Rules:
 au95u95f(X) -> au95u95if(mark(X),c,f(ftrue))
 au95u95f(X) -> f(X)
 au95u95if(ffalse,X,Y) -> mark(Y)
 au95u95if(ftrue,X,Y) -> mark(X)
 au95u95if(X1,X2,X3) -> if(X1,X2,X3)
 mark(c) -> c
 mark(f(X)) -> au95u95f(mark(X))
 mark(ffalse) -> ffalse
 mark(if(X1,X2,X3)) -> au95u95if(mark(X1),mark(X2),X3)
 mark(ftrue) -> ftrue
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95F(X) -> AU95U95IF(mark(X),c,f(ftrue))
 AU95U95F(X) -> MARK(X)
 AU95U95IF(ffalse,X,Y) -> MARK(Y)
 AU95U95IF(ftrue,X,Y) -> MARK(X)
 MARK(f(X)) -> AU95U95F(mark(X))
 MARK(f(X)) -> MARK(X)
 MARK(if(X1,X2,X3)) -> AU95U95IF(mark(X1),mark(X2),X3)
 MARK(if(X1,X2,X3)) -> MARK(X1)
 MARK(if(X1,X2,X3)) -> MARK(X2)
->->-> Rules:
 au95u95f(X) -> au95u95if(mark(X),c,f(ftrue))
 au95u95f(X) -> f(X)
 au95u95if(ffalse,X,Y) -> mark(Y)
 au95u95if(ftrue,X,Y) -> mark(X)
 au95u95if(X1,X2,X3) -> if(X1,X2,X3)
 mark(c) -> c
 mark(f(X)) -> au95u95f(mark(X))
 mark(ffalse) -> ffalse
 mark(if(X1,X2,X3)) -> au95u95if(mark(X1),mark(X2),X3)
 mark(ftrue) -> ftrue

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95F(X) -> AU95U95IF(mark(X),c,f(ftrue))
 AU95U95F(X) -> MARK(X)
 AU95U95IF(ffalse,X,Y) -> MARK(Y)
 AU95U95IF(ftrue,X,Y) -> MARK(X)
 MARK(f(X)) -> AU95U95F(mark(X))
 MARK(f(X)) -> MARK(X)
 MARK(if(X1,X2,X3)) -> AU95U95IF(mark(X1),mark(X2),X3)
 MARK(if(X1,X2,X3)) -> MARK(X1)
 MARK(if(X1,X2,X3)) -> MARK(X2)
-> Rules:
 au95u95f(X) -> au95u95if(mark(X),c,f(ftrue))
 au95u95f(X) -> f(X)
 au95u95if(ffalse,X,Y) -> mark(Y)
 au95u95if(ftrue,X,Y) -> mark(X)
 au95u95if(X1,X2,X3) -> if(X1,X2,X3)
 mark(c) -> c
 mark(f(X)) -> au95u95f(mark(X))
 mark(ffalse) -> ffalse
 mark(if(X1,X2,X3)) -> au95u95if(mark(X1),mark(X2),X3)
 mark(ftrue) -> ftrue
-> Usable rules:
 au95u95f(X) -> au95u95if(mark(X),c,f(ftrue))
 au95u95f(X) -> f(X)
 au95u95if(ffalse,X,Y) -> mark(Y)
 au95u95if(ftrue,X,Y) -> mark(X)
 au95u95if(X1,X2,X3) -> if(X1,X2,X3)
 mark(c) -> c
 mark(f(X)) -> au95u95f(mark(X))
 mark(ffalse) -> ffalse
 mark(if(X1,X2,X3)) -> au95u95if(mark(X1),mark(X2),X3)
 mark(ftrue) -> ftrue
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95f](X) = 2.X + 2
[au95u95if](X1,X2,X3) = X1 + 2.X2 + 2.X3
[mark](X) = 2.X
[c] = 0
[f](X) = 2.X + 1
[fSNonEmpty] = 0
[ffalse] = 1
[if](X1,X2,X3) = X1 + 2.X2 + 2.X3
[ftrue] = 0
[AU95U95F](X) = 2.X + 2
[AU95U95IF](X1,X2,X3) = 2.X2 + 2.X3
[MARK](X) = 2.X

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95F(X) -> AU95U95IF(mark(X),c,f(ftrue))
 AU95U95IF(ffalse,X,Y) -> MARK(Y)
 AU95U95IF(ftrue,X,Y) -> MARK(X)
 MARK(f(X)) -> AU95U95F(mark(X))
 MARK(f(X)) -> MARK(X)
 MARK(if(X1,X2,X3)) -> AU95U95IF(mark(X1),mark(X2),X3)
 MARK(if(X1,X2,X3)) -> MARK(X1)
 MARK(if(X1,X2,X3)) -> MARK(X2)
-> Rules:
 au95u95f(X) -> au95u95if(mark(X),c,f(ftrue))
 au95u95f(X) -> f(X)
 au95u95if(ffalse,X,Y) -> mark(Y)
 au95u95if(ftrue,X,Y) -> mark(X)
 au95u95if(X1,X2,X3) -> if(X1,X2,X3)
 mark(c) -> c
 mark(f(X)) -> au95u95f(mark(X))
 mark(ffalse) -> ffalse
 mark(if(X1,X2,X3)) -> au95u95if(mark(X1),mark(X2),X3)
 mark(ftrue) -> ftrue
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95F(X) -> AU95U95IF(mark(X),c,f(ftrue))
 AU95U95IF(ffalse,X,Y) -> MARK(Y)
 AU95U95IF(ftrue,X,Y) -> MARK(X)
 MARK(f(X)) -> AU95U95F(mark(X))
 MARK(f(X)) -> MARK(X)
 MARK(if(X1,X2,X3)) -> AU95U95IF(mark(X1),mark(X2),X3)
 MARK(if(X1,X2,X3)) -> MARK(X1)
 MARK(if(X1,X2,X3)) -> MARK(X2)
->->-> Rules:
 au95u95f(X) -> au95u95if(mark(X),c,f(ftrue))
 au95u95f(X) -> f(X)
 au95u95if(ffalse,X,Y) -> mark(Y)
 au95u95if(ftrue,X,Y) -> mark(X)
 au95u95if(X1,X2,X3) -> if(X1,X2,X3)
 mark(c) -> c
 mark(f(X)) -> au95u95f(mark(X))
 mark(ffalse) -> ffalse
 mark(if(X1,X2,X3)) -> au95u95if(mark(X1),mark(X2),X3)
 mark(ftrue) -> ftrue

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95F(X) -> AU95U95IF(mark(X),c,f(ftrue))
 AU95U95IF(ffalse,X,Y) -> MARK(Y)
 AU95U95IF(ftrue,X,Y) -> MARK(X)
 MARK(f(X)) -> AU95U95F(mark(X))
 MARK(f(X)) -> MARK(X)
 MARK(if(X1,X2,X3)) -> AU95U95IF(mark(X1),mark(X2),X3)
 MARK(if(X1,X2,X3)) -> MARK(X1)
 MARK(if(X1,X2,X3)) -> MARK(X2)
-> Rules:
 au95u95f(X) -> au95u95if(mark(X),c,f(ftrue))
 au95u95f(X) -> f(X)
 au95u95if(ffalse,X,Y) -> mark(Y)
 au95u95if(ftrue,X,Y) -> mark(X)
 au95u95if(X1,X2,X3) -> if(X1,X2,X3)
 mark(c) -> c
 mark(f(X)) -> au95u95f(mark(X))
 mark(ffalse) -> ffalse
 mark(if(X1,X2,X3)) -> au95u95if(mark(X1),mark(X2),X3)
 mark(ftrue) -> ftrue
-> Usable rules:
 au95u95f(X) -> au95u95if(mark(X),c,f(ftrue))
 au95u95f(X) -> f(X)
 au95u95if(ffalse,X,Y) -> mark(Y)
 au95u95if(ftrue,X,Y) -> mark(X)
 au95u95if(X1,X2,X3) -> if(X1,X2,X3)
 mark(c) -> c
 mark(f(X)) -> au95u95f(mark(X))
 mark(ffalse) -> ffalse
 mark(if(X1,X2,X3)) -> au95u95if(mark(X1),mark(X2),X3)
 mark(ftrue) -> ftrue
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95f](X) = 2.X + 2
[au95u95if](X1,X2,X3) = X1 + 2.X2 + 2.X3
[mark](X) = 2.X
[c] = 0
[f](X) = 2.X + 1
[fSNonEmpty] = 0
[ffalse] = 2
[if](X1,X2,X3) = X1 + 2.X2 + X3
[ftrue] = 0
[AU95U95F](X) = 2.X + 2
[AU95U95IF](X1,X2,X3) = X1 + 2.X2 + 2.X3
[MARK](X) = 2.X

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95F(X) -> AU95U95IF(mark(X),c,f(ftrue))
 AU95U95IF(ftrue,X,Y) -> MARK(X)
 MARK(f(X)) -> AU95U95F(mark(X))
 MARK(f(X)) -> MARK(X)
 MARK(if(X1,X2,X3)) -> AU95U95IF(mark(X1),mark(X2),X3)
 MARK(if(X1,X2,X3)) -> MARK(X1)
 MARK(if(X1,X2,X3)) -> MARK(X2)
-> Rules:
 au95u95f(X) -> au95u95if(mark(X),c,f(ftrue))
 au95u95f(X) -> f(X)
 au95u95if(ffalse,X,Y) -> mark(Y)
 au95u95if(ftrue,X,Y) -> mark(X)
 au95u95if(X1,X2,X3) -> if(X1,X2,X3)
 mark(c) -> c
 mark(f(X)) -> au95u95f(mark(X))
 mark(ffalse) -> ffalse
 mark(if(X1,X2,X3)) -> au95u95if(mark(X1),mark(X2),X3)
 mark(ftrue) -> ftrue
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95F(X) -> AU95U95IF(mark(X),c,f(ftrue))
 AU95U95IF(ftrue,X,Y) -> MARK(X)
 MARK(f(X)) -> AU95U95F(mark(X))
 MARK(f(X)) -> MARK(X)
 MARK(if(X1,X2,X3)) -> AU95U95IF(mark(X1),mark(X2),X3)
 MARK(if(X1,X2,X3)) -> MARK(X1)
 MARK(if(X1,X2,X3)) -> MARK(X2)
->->-> Rules:
 au95u95f(X) -> au95u95if(mark(X),c,f(ftrue))
 au95u95f(X) -> f(X)
 au95u95if(ffalse,X,Y) -> mark(Y)
 au95u95if(ftrue,X,Y) -> mark(X)
 au95u95if(X1,X2,X3) -> if(X1,X2,X3)
 mark(c) -> c
 mark(f(X)) -> au95u95f(mark(X))
 mark(ffalse) -> ffalse
 mark(if(X1,X2,X3)) -> au95u95if(mark(X1),mark(X2),X3)
 mark(ftrue) -> ftrue

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95F(X) -> AU95U95IF(mark(X),c,f(ftrue))
 AU95U95IF(ftrue,X,Y) -> MARK(X)
 MARK(f(X)) -> AU95U95F(mark(X))
 MARK(f(X)) -> MARK(X)
 MARK(if(X1,X2,X3)) -> AU95U95IF(mark(X1),mark(X2),X3)
 MARK(if(X1,X2,X3)) -> MARK(X1)
 MARK(if(X1,X2,X3)) -> MARK(X2)
-> Rules:
 au95u95f(X) -> au95u95if(mark(X),c,f(ftrue))
 au95u95f(X) -> f(X)
 au95u95if(ffalse,X,Y) -> mark(Y)
 au95u95if(ftrue,X,Y) -> mark(X)
 au95u95if(X1,X2,X3) -> if(X1,X2,X3)
 mark(c) -> c
 mark(f(X)) -> au95u95f(mark(X))
 mark(ffalse) -> ffalse
 mark(if(X1,X2,X3)) -> au95u95if(mark(X1),mark(X2),X3)
 mark(ftrue) -> ftrue
-> Usable rules:
 au95u95f(X) -> au95u95if(mark(X),c,f(ftrue))
 au95u95f(X) -> f(X)
 au95u95if(ffalse,X,Y) -> mark(Y)
 au95u95if(ftrue,X,Y) -> mark(X)
 au95u95if(X1,X2,X3) -> if(X1,X2,X3)
 mark(c) -> c
 mark(f(X)) -> au95u95f(mark(X))
 mark(ffalse) -> ffalse
 mark(if(X1,X2,X3)) -> au95u95if(mark(X1),mark(X2),X3)
 mark(ftrue) -> ftrue
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95f](X) = 2.X + 2
[au95u95if](X1,X2,X3) = X1 + 2.X2 + 2.X3
[mark](X) = 2.X
[c] = 0
[f](X) = 2.X + 1
[fSNonEmpty] = 0
[ffalse] = 1
[if](X1,X2,X3) = X1 + 2.X2 + X3
[ftrue] = 0
[AU95U95F](X) = 2.X + 2
[AU95U95IF](X1,X2,X3) = 2.X2 + X3
[MARK](X) = 2.X

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95IF(ftrue,X,Y) -> MARK(X)
 MARK(f(X)) -> AU95U95F(mark(X))
 MARK(f(X)) -> MARK(X)
 MARK(if(X1,X2,X3)) -> AU95U95IF(mark(X1),mark(X2),X3)
 MARK(if(X1,X2,X3)) -> MARK(X1)
 MARK(if(X1,X2,X3)) -> MARK(X2)
-> Rules:
 au95u95f(X) -> au95u95if(mark(X),c,f(ftrue))
 au95u95f(X) -> f(X)
 au95u95if(ffalse,X,Y) -> mark(Y)
 au95u95if(ftrue,X,Y) -> mark(X)
 au95u95if(X1,X2,X3) -> if(X1,X2,X3)
 mark(c) -> c
 mark(f(X)) -> au95u95f(mark(X))
 mark(ffalse) -> ffalse
 mark(if(X1,X2,X3)) -> au95u95if(mark(X1),mark(X2),X3)
 mark(ftrue) -> ftrue
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95IF(ftrue,X,Y) -> MARK(X)
 MARK(f(X)) -> MARK(X)
 MARK(if(X1,X2,X3)) -> AU95U95IF(mark(X1),mark(X2),X3)
 MARK(if(X1,X2,X3)) -> MARK(X1)
 MARK(if(X1,X2,X3)) -> MARK(X2)
->->-> Rules:
 au95u95f(X) -> au95u95if(mark(X),c,f(ftrue))
 au95u95f(X) -> f(X)
 au95u95if(ffalse,X,Y) -> mark(Y)
 au95u95if(ftrue,X,Y) -> mark(X)
 au95u95if(X1,X2,X3) -> if(X1,X2,X3)
 mark(c) -> c
 mark(f(X)) -> au95u95f(mark(X))
 mark(ffalse) -> ffalse
 mark(if(X1,X2,X3)) -> au95u95if(mark(X1),mark(X2),X3)
 mark(ftrue) -> ftrue

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95IF(ftrue,X,Y) -> MARK(X)
 MARK(f(X)) -> MARK(X)
 MARK(if(X1,X2,X3)) -> AU95U95IF(mark(X1),mark(X2),X3)
 MARK(if(X1,X2,X3)) -> MARK(X1)
 MARK(if(X1,X2,X3)) -> MARK(X2)
-> Rules:
 au95u95f(X) -> au95u95if(mark(X),c,f(ftrue))
 au95u95f(X) -> f(X)
 au95u95if(ffalse,X,Y) -> mark(Y)
 au95u95if(ftrue,X,Y) -> mark(X)
 au95u95if(X1,X2,X3) -> if(X1,X2,X3)
 mark(c) -> c
 mark(f(X)) -> au95u95f(mark(X))
 mark(ffalse) -> ffalse
 mark(if(X1,X2,X3)) -> au95u95if(mark(X1),mark(X2),X3)
 mark(ftrue) -> ftrue
-> Usable rules:
 au95u95f(X) -> au95u95if(mark(X),c,f(ftrue))
 au95u95f(X) -> f(X)
 au95u95if(ffalse,X,Y) -> mark(Y)
 au95u95if(ftrue,X,Y) -> mark(X)
 au95u95if(X1,X2,X3) -> if(X1,X2,X3)
 mark(c) -> c
 mark(f(X)) -> au95u95f(mark(X))
 mark(ffalse) -> ffalse
 mark(if(X1,X2,X3)) -> au95u95if(mark(X1),mark(X2),X3)
 mark(ftrue) -> ftrue
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95f](X) = 2.X + 2
[au95u95if](X1,X2,X3) = X1 + 2.X2 + 2.X3
[mark](X) = 2.X
[c] = 0
[f](X) = 2.X + 1
[fSNonEmpty] = 0
[ffalse] = 2
[if](X1,X2,X3) = X1 + 2.X2 + 2.X3
[ftrue] = 0
[AU95U95F](X) = 0
[AU95U95IF](X1,X2,X3) = X1 + 2.X2 + X3 + 2
[MARK](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95IF(ftrue,X,Y) -> MARK(X)
 MARK(if(X1,X2,X3)) -> AU95U95IF(mark(X1),mark(X2),X3)
 MARK(if(X1,X2,X3)) -> MARK(X1)
 MARK(if(X1,X2,X3)) -> MARK(X2)
-> Rules:
 au95u95f(X) -> au95u95if(mark(X),c,f(ftrue))
 au95u95f(X) -> f(X)
 au95u95if(ffalse,X,Y) -> mark(Y)
 au95u95if(ftrue,X,Y) -> mark(X)
 au95u95if(X1,X2,X3) -> if(X1,X2,X3)
 mark(c) -> c
 mark(f(X)) -> au95u95f(mark(X))
 mark(ffalse) -> ffalse
 mark(if(X1,X2,X3)) -> au95u95if(mark(X1),mark(X2),X3)
 mark(ftrue) -> ftrue
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95IF(ftrue,X,Y) -> MARK(X)
 MARK(if(X1,X2,X3)) -> AU95U95IF(mark(X1),mark(X2),X3)
 MARK(if(X1,X2,X3)) -> MARK(X1)
 MARK(if(X1,X2,X3)) -> MARK(X2)
->->-> Rules:
 au95u95f(X) -> au95u95if(mark(X),c,f(ftrue))
 au95u95f(X) -> f(X)
 au95u95if(ffalse,X,Y) -> mark(Y)
 au95u95if(ftrue,X,Y) -> mark(X)
 au95u95if(X1,X2,X3) -> if(X1,X2,X3)
 mark(c) -> c
 mark(f(X)) -> au95u95f(mark(X))
 mark(ffalse) -> ffalse
 mark(if(X1,X2,X3)) -> au95u95if(mark(X1),mark(X2),X3)
 mark(ftrue) -> ftrue

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95IF(ftrue,X,Y) -> MARK(X)
 MARK(if(X1,X2,X3)) -> AU95U95IF(mark(X1),mark(X2),X3)
 MARK(if(X1,X2,X3)) -> MARK(X1)
 MARK(if(X1,X2,X3)) -> MARK(X2)
-> Rules:
 au95u95f(X) -> au95u95if(mark(X),c,f(ftrue))
 au95u95f(X) -> f(X)
 au95u95if(ffalse,X,Y) -> mark(Y)
 au95u95if(ftrue,X,Y) -> mark(X)
 au95u95if(X1,X2,X3) -> if(X1,X2,X3)
 mark(c) -> c
 mark(f(X)) -> au95u95f(mark(X))
 mark(ffalse) -> ffalse
 mark(if(X1,X2,X3)) -> au95u95if(mark(X1),mark(X2),X3)
 mark(ftrue) -> ftrue
-> Usable rules:
 au95u95f(X) -> au95u95if(mark(X),c,f(ftrue))
 au95u95f(X) -> f(X)
 au95u95if(ffalse,X,Y) -> mark(Y)
 au95u95if(ftrue,X,Y) -> mark(X)
 au95u95if(X1,X2,X3) -> if(X1,X2,X3)
 mark(c) -> c
 mark(f(X)) -> au95u95f(mark(X))
 mark(ffalse) -> ffalse
 mark(if(X1,X2,X3)) -> au95u95if(mark(X1),mark(X2),X3)
 mark(ftrue) -> ftrue
->Interpretation type:
 Simple mixed
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95f](X) = 2.X.X + 2.X + 1
[au95u95if](X1,X2,X3) = 2.X1.X2.X3 + 2.X1.X2 + X1.X3 + 2.X2.X3 + X1 + 2.X2 + 1
[mark](X) = X
[c] = 0
[f](X) = 2.X.X + 2.X + 1
[fSNonEmpty] = 0
[ffalse] = 1
[if](X1,X2,X3) = 2.X1.X2.X3 + 2.X1.X2 + X1.X3 + 2.X2.X3 + X1 + 2.X2 + 1
[ftrue] = 0
[AU95U95F](X) = 0
[AU95U95IF](X1,X2,X3) = 2.X1.X2 + 2.X2.X3 + 2.X2 + 2
[MARK](X) = 2.X

Problem 1: 

SCC Processor:
-> Pairs:
 MARK(if(X1,X2,X3)) -> AU95U95IF(mark(X1),mark(X2),X3)
 MARK(if(X1,X2,X3)) -> MARK(X1)
 MARK(if(X1,X2,X3)) -> MARK(X2)
-> Rules:
 au95u95f(X) -> au95u95if(mark(X),c,f(ftrue))
 au95u95f(X) -> f(X)
 au95u95if(ffalse,X,Y) -> mark(Y)
 au95u95if(ftrue,X,Y) -> mark(X)
 au95u95if(X1,X2,X3) -> if(X1,X2,X3)
 mark(c) -> c
 mark(f(X)) -> au95u95f(mark(X))
 mark(ffalse) -> ffalse
 mark(if(X1,X2,X3)) -> au95u95if(mark(X1),mark(X2),X3)
 mark(ftrue) -> ftrue
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 MARK(if(X1,X2,X3)) -> MARK(X1)
 MARK(if(X1,X2,X3)) -> MARK(X2)
->->-> Rules:
 au95u95f(X) -> au95u95if(mark(X),c,f(ftrue))
 au95u95f(X) -> f(X)
 au95u95if(ffalse,X,Y) -> mark(Y)
 au95u95if(ftrue,X,Y) -> mark(X)
 au95u95if(X1,X2,X3) -> if(X1,X2,X3)
 mark(c) -> c
 mark(f(X)) -> au95u95f(mark(X))
 mark(ffalse) -> ffalse
 mark(if(X1,X2,X3)) -> au95u95if(mark(X1),mark(X2),X3)
 mark(ftrue) -> ftrue

Problem 1: 

Subterm Processor:
-> Pairs:
 MARK(if(X1,X2,X3)) -> MARK(X1)
 MARK(if(X1,X2,X3)) -> MARK(X2)
-> Rules:
 au95u95f(X) -> au95u95if(mark(X),c,f(ftrue))
 au95u95f(X) -> f(X)
 au95u95if(ffalse,X,Y) -> mark(Y)
 au95u95if(ftrue,X,Y) -> mark(X)
 au95u95if(X1,X2,X3) -> if(X1,X2,X3)
 mark(c) -> c
 mark(f(X)) -> au95u95f(mark(X))
 mark(ffalse) -> ffalse
 mark(if(X1,X2,X3)) -> au95u95if(mark(X1),mark(X2),X3)
 mark(ftrue) -> ftrue
->Projection:
 pi(MARK) = 1

Problem 1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 au95u95f(X) -> au95u95if(mark(X),c,f(ftrue))
 au95u95f(X) -> f(X)
 au95u95if(ffalse,X,Y) -> mark(Y)
 au95u95if(ftrue,X,Y) -> mark(X)
 au95u95if(X1,X2,X3) -> if(X1,X2,X3)
 mark(c) -> c
 mark(f(X)) -> au95u95f(mark(X))
 mark(ffalse) -> ffalse
 mark(if(X1,X2,X3)) -> au95u95if(mark(X1),mark(X2),X3)
 mark(ftrue) -> ftrue
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
