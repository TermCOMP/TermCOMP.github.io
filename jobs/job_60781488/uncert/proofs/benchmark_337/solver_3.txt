YES

Problem 1: 

(VAR vu95NonEmpty x y z)
(RULES
u43(u43(x,y),z) -> u43(x,u43(y,z))
u43(num0(x),num0(y)) -> num0(u43(x,y))
u43(num0(x),num1(y)) -> num1(u43(x,y))
u43(u35,x) -> x
u43(num1(x),num0(y)) -> num1(u43(x,y))
u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
u43(x,u35) -> x
u45(num0(x),num0(y)) -> num0(u45(x,y))
u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
u45(u35,x) -> u35
u45(num1(x),num0(y)) -> num1(u45(x,y))
u45(num1(x),num1(y)) -> num0(u45(x,y))
u45(x,u35) -> x
num0(u35) -> u35
ge(num0(x),num0(y)) -> ge(x,y)
ge(num0(x),num1(y)) -> not(ge(y,x))
ge(u35,num0(x)) -> ge(u35,x)
ge(u35,num1(x)) -> ffalse
ge(num1(x),num0(y)) -> ge(x,y)
ge(num1(x),num1(y)) -> ge(x,y)
ge(x,u35) -> ftrue
if(ffalse,x,y) -> y
if(ftrue,x,y) -> x
log(x) -> u45(logu39(x),num1(u35))
logu39(num0(x)) -> if(ge(x,num1(u35)),u43(logu39(x),num1(u35)),u35)
logu39(u35) -> u35
logu39(num1(x)) -> u43(logu39(x),num1(u35))
not(ffalse) -> ftrue
not(ftrue) -> ffalse
)


Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 U43(u43(x,y),z) -> U43(x,u43(y,z))
 U43(u43(x,y),z) -> U43(y,z)
 U43(num0(x),num0(y)) -> U43(x,y)
 U43(num0(x),num0(y)) -> NUM0(u43(x,y))
 U43(num0(x),num1(y)) -> U43(x,y)
 U43(num1(x),num0(y)) -> U43(x,y)
 U43(num1(x),num1(y)) -> U43(u43(x,y),num1(u35))
 U43(num1(x),num1(y)) -> U43(x,y)
 U43(num1(x),num1(y)) -> NUM0(u43(u43(x,y),num1(u35)))
 U45(num0(x),num0(y)) -> U45(x,y)
 U45(num0(x),num0(y)) -> NUM0(u45(x,y))
 U45(num0(x),num1(y)) -> U45(u45(x,y),num1(u35))
 U45(num0(x),num1(y)) -> U45(x,y)
 U45(num1(x),num0(y)) -> U45(x,y)
 U45(num1(x),num1(y)) -> U45(x,y)
 U45(num1(x),num1(y)) -> NUM0(u45(x,y))
 GE(num0(x),num0(y)) -> GE(x,y)
 GE(num0(x),num1(y)) -> GE(y,x)
 GE(num0(x),num1(y)) -> NOT(ge(y,x))
 GE(u35,num0(x)) -> GE(u35,x)
 GE(num1(x),num0(y)) -> GE(x,y)
 GE(num1(x),num1(y)) -> GE(x,y)
 LOG(x) -> U45(logu39(x),num1(u35))
 LOG(x) -> LOGU39(x)
 LOGU39(num0(x)) -> U43(logu39(x),num1(u35))
 LOGU39(num0(x)) -> GE(x,num1(u35))
 LOGU39(num0(x)) -> IF(ge(x,num1(u35)),u43(logu39(x),num1(u35)),u35)
 LOGU39(num0(x)) -> LOGU39(x)
 LOGU39(num1(x)) -> U43(logu39(x),num1(u35))
 LOGU39(num1(x)) -> LOGU39(x)
-> Rules:
 u43(u43(x,y),z) -> u43(x,u43(y,z))
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 log(x) -> u45(logu39(x),num1(u35))
 logu39(num0(x)) -> if(ge(x,num1(u35)),u43(logu39(x),num1(u35)),u35)
 logu39(u35) -> u35
 logu39(num1(x)) -> u43(logu39(x),num1(u35))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse

Problem 1: 

SCC Processor:
-> Pairs:
 U43(u43(x,y),z) -> U43(x,u43(y,z))
 U43(u43(x,y),z) -> U43(y,z)
 U43(num0(x),num0(y)) -> U43(x,y)
 U43(num0(x),num0(y)) -> NUM0(u43(x,y))
 U43(num0(x),num1(y)) -> U43(x,y)
 U43(num1(x),num0(y)) -> U43(x,y)
 U43(num1(x),num1(y)) -> U43(u43(x,y),num1(u35))
 U43(num1(x),num1(y)) -> U43(x,y)
 U43(num1(x),num1(y)) -> NUM0(u43(u43(x,y),num1(u35)))
 U45(num0(x),num0(y)) -> U45(x,y)
 U45(num0(x),num0(y)) -> NUM0(u45(x,y))
 U45(num0(x),num1(y)) -> U45(u45(x,y),num1(u35))
 U45(num0(x),num1(y)) -> U45(x,y)
 U45(num1(x),num0(y)) -> U45(x,y)
 U45(num1(x),num1(y)) -> U45(x,y)
 U45(num1(x),num1(y)) -> NUM0(u45(x,y))
 GE(num0(x),num0(y)) -> GE(x,y)
 GE(num0(x),num1(y)) -> GE(y,x)
 GE(num0(x),num1(y)) -> NOT(ge(y,x))
 GE(u35,num0(x)) -> GE(u35,x)
 GE(num1(x),num0(y)) -> GE(x,y)
 GE(num1(x),num1(y)) -> GE(x,y)
 LOG(x) -> U45(logu39(x),num1(u35))
 LOG(x) -> LOGU39(x)
 LOGU39(num0(x)) -> U43(logu39(x),num1(u35))
 LOGU39(num0(x)) -> GE(x,num1(u35))
 LOGU39(num0(x)) -> IF(ge(x,num1(u35)),u43(logu39(x),num1(u35)),u35)
 LOGU39(num0(x)) -> LOGU39(x)
 LOGU39(num1(x)) -> U43(logu39(x),num1(u35))
 LOGU39(num1(x)) -> LOGU39(x)
-> Rules:
 u43(u43(x,y),z) -> u43(x,u43(y,z))
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 log(x) -> u45(logu39(x),num1(u35))
 logu39(num0(x)) -> if(ge(x,num1(u35)),u43(logu39(x),num1(u35)),u35)
 logu39(u35) -> u35
 logu39(num1(x)) -> u43(logu39(x),num1(u35))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 GE(u35,num0(x)) -> GE(u35,x)
->->-> Rules:
 u43(u43(x,y),z) -> u43(x,u43(y,z))
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 log(x) -> u45(logu39(x),num1(u35))
 logu39(num0(x)) -> if(ge(x,num1(u35)),u43(logu39(x),num1(u35)),u35)
 logu39(u35) -> u35
 logu39(num1(x)) -> u43(logu39(x),num1(u35))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
->->Cycle:
->->-> Pairs:
 GE(num0(x),num0(y)) -> GE(x,y)
 GE(num0(x),num1(y)) -> GE(y,x)
 GE(num1(x),num0(y)) -> GE(x,y)
 GE(num1(x),num1(y)) -> GE(x,y)
->->-> Rules:
 u43(u43(x,y),z) -> u43(x,u43(y,z))
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 log(x) -> u45(logu39(x),num1(u35))
 logu39(num0(x)) -> if(ge(x,num1(u35)),u43(logu39(x),num1(u35)),u35)
 logu39(u35) -> u35
 logu39(num1(x)) -> u43(logu39(x),num1(u35))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
->->Cycle:
->->-> Pairs:
 U45(num0(x),num0(y)) -> U45(x,y)
 U45(num0(x),num1(y)) -> U45(u45(x,y),num1(u35))
 U45(num0(x),num1(y)) -> U45(x,y)
 U45(num1(x),num0(y)) -> U45(x,y)
 U45(num1(x),num1(y)) -> U45(x,y)
->->-> Rules:
 u43(u43(x,y),z) -> u43(x,u43(y,z))
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 log(x) -> u45(logu39(x),num1(u35))
 logu39(num0(x)) -> if(ge(x,num1(u35)),u43(logu39(x),num1(u35)),u35)
 logu39(u35) -> u35
 logu39(num1(x)) -> u43(logu39(x),num1(u35))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
->->Cycle:
->->-> Pairs:
 U43(u43(x,y),z) -> U43(x,u43(y,z))
 U43(u43(x,y),z) -> U43(y,z)
 U43(num0(x),num0(y)) -> U43(x,y)
 U43(num0(x),num1(y)) -> U43(x,y)
 U43(num1(x),num0(y)) -> U43(x,y)
 U43(num1(x),num1(y)) -> U43(u43(x,y),num1(u35))
 U43(num1(x),num1(y)) -> U43(x,y)
->->-> Rules:
 u43(u43(x,y),z) -> u43(x,u43(y,z))
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 log(x) -> u45(logu39(x),num1(u35))
 logu39(num0(x)) -> if(ge(x,num1(u35)),u43(logu39(x),num1(u35)),u35)
 logu39(u35) -> u35
 logu39(num1(x)) -> u43(logu39(x),num1(u35))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
->->Cycle:
->->-> Pairs:
 LOGU39(num0(x)) -> LOGU39(x)
 LOGU39(num1(x)) -> LOGU39(x)
->->-> Rules:
 u43(u43(x,y),z) -> u43(x,u43(y,z))
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 log(x) -> u45(logu39(x),num1(u35))
 logu39(num0(x)) -> if(ge(x,num1(u35)),u43(logu39(x),num1(u35)),u35)
 logu39(u35) -> u35
 logu39(num1(x)) -> u43(logu39(x),num1(u35))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse


The problem is decomposed in 5 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 GE(u35,num0(x)) -> GE(u35,x)
-> Rules:
 u43(u43(x,y),z) -> u43(x,u43(y,z))
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 log(x) -> u45(logu39(x),num1(u35))
 logu39(num0(x)) -> if(ge(x,num1(u35)),u43(logu39(x),num1(u35)),u35)
 logu39(u35) -> u35
 logu39(num1(x)) -> u43(logu39(x),num1(u35))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
->Projection:
 pi(GE) = 2

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 u43(u43(x,y),z) -> u43(x,u43(y,z))
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 log(x) -> u45(logu39(x),num1(u35))
 logu39(num0(x)) -> if(ge(x,num1(u35)),u43(logu39(x),num1(u35)),u35)
 logu39(u35) -> u35
 logu39(num1(x)) -> u43(logu39(x),num1(u35))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Reduction Pair Processor:
-> Pairs:
 GE(num0(x),num0(y)) -> GE(x,y)
 GE(num0(x),num1(y)) -> GE(y,x)
 GE(num1(x),num0(y)) -> GE(x,y)
 GE(num1(x),num1(y)) -> GE(x,y)
-> Rules:
 u43(u43(x,y),z) -> u43(x,u43(y,z))
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 log(x) -> u45(logu39(x),num1(u35))
 logu39(num0(x)) -> if(ge(x,num1(u35)),u43(logu39(x),num1(u35)),u35)
 logu39(u35) -> u35
 logu39(num1(x)) -> u43(logu39(x),num1(u35))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
-> Usable rules:
 Empty
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[u43](X1,X2) = 0
[u45](X1,X2) = 0
[num0](X) = 2.X + 2
[ge](X1,X2) = 0
[if](X1,X2,X3) = 0
[log](X) = 0
[logu39](X) = 0
[not](X) = 0
[u35] = 0
[num1](X) = X
[fSNonEmpty] = 0
[ffalse] = 0
[ftrue] = 0
[U43](X1,X2) = 0
[U45](X1,X2) = 0
[NUM0](X) = 0
[GE](X1,X2) = X1 + 2.X2
[IF](X1,X2,X3) = 0
[LOG](X) = 0
[LOGU39](X) = 0
[NOT](X) = 0

Problem 1.2: 

SCC Processor:
-> Pairs:
 GE(num0(x),num1(y)) -> GE(y,x)
 GE(num1(x),num0(y)) -> GE(x,y)
 GE(num1(x),num1(y)) -> GE(x,y)
-> Rules:
 u43(u43(x,y),z) -> u43(x,u43(y,z))
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 log(x) -> u45(logu39(x),num1(u35))
 logu39(num0(x)) -> if(ge(x,num1(u35)),u43(logu39(x),num1(u35)),u35)
 logu39(u35) -> u35
 logu39(num1(x)) -> u43(logu39(x),num1(u35))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 GE(num0(x),num1(y)) -> GE(y,x)
 GE(num1(x),num0(y)) -> GE(x,y)
 GE(num1(x),num1(y)) -> GE(x,y)
->->-> Rules:
 u43(u43(x,y),z) -> u43(x,u43(y,z))
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 log(x) -> u45(logu39(x),num1(u35))
 logu39(num0(x)) -> if(ge(x,num1(u35)),u43(logu39(x),num1(u35)),u35)
 logu39(u35) -> u35
 logu39(num1(x)) -> u43(logu39(x),num1(u35))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse

Problem 1.2: 

Reduction Pair Processor:
-> Pairs:
 GE(num0(x),num1(y)) -> GE(y,x)
 GE(num1(x),num0(y)) -> GE(x,y)
 GE(num1(x),num1(y)) -> GE(x,y)
-> Rules:
 u43(u43(x,y),z) -> u43(x,u43(y,z))
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 log(x) -> u45(logu39(x),num1(u35))
 logu39(num0(x)) -> if(ge(x,num1(u35)),u43(logu39(x),num1(u35)),u35)
 logu39(u35) -> u35
 logu39(num1(x)) -> u43(logu39(x),num1(u35))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
-> Usable rules:
 Empty
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[u43](X1,X2) = 0
[u45](X1,X2) = 0
[num0](X) = 2.X + 2
[ge](X1,X2) = 0
[if](X1,X2,X3) = 0
[log](X) = 0
[logu39](X) = 0
[not](X) = 0
[u35] = 0
[num1](X) = 2.X
[fSNonEmpty] = 0
[ffalse] = 0
[ftrue] = 0
[U43](X1,X2) = 0
[U45](X1,X2) = 0
[NUM0](X) = 0
[GE](X1,X2) = 2.X1 + 2.X2
[IF](X1,X2,X3) = 0
[LOG](X) = 0
[LOGU39](X) = 0
[NOT](X) = 0

Problem 1.2: 

SCC Processor:
-> Pairs:
 GE(num1(x),num0(y)) -> GE(x,y)
 GE(num1(x),num1(y)) -> GE(x,y)
-> Rules:
 u43(u43(x,y),z) -> u43(x,u43(y,z))
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 log(x) -> u45(logu39(x),num1(u35))
 logu39(num0(x)) -> if(ge(x,num1(u35)),u43(logu39(x),num1(u35)),u35)
 logu39(u35) -> u35
 logu39(num1(x)) -> u43(logu39(x),num1(u35))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 GE(num1(x),num0(y)) -> GE(x,y)
 GE(num1(x),num1(y)) -> GE(x,y)
->->-> Rules:
 u43(u43(x,y),z) -> u43(x,u43(y,z))
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 log(x) -> u45(logu39(x),num1(u35))
 logu39(num0(x)) -> if(ge(x,num1(u35)),u43(logu39(x),num1(u35)),u35)
 logu39(u35) -> u35
 logu39(num1(x)) -> u43(logu39(x),num1(u35))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse

Problem 1.2: 

Subterm Processor:
-> Pairs:
 GE(num1(x),num0(y)) -> GE(x,y)
 GE(num1(x),num1(y)) -> GE(x,y)
-> Rules:
 u43(u43(x,y),z) -> u43(x,u43(y,z))
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 log(x) -> u45(logu39(x),num1(u35))
 logu39(num0(x)) -> if(ge(x,num1(u35)),u43(logu39(x),num1(u35)),u35)
 logu39(u35) -> u35
 logu39(num1(x)) -> u43(logu39(x),num1(u35))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
->Projection:
 pi(GE) = 1

Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 u43(u43(x,y),z) -> u43(x,u43(y,z))
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 log(x) -> u45(logu39(x),num1(u35))
 logu39(num0(x)) -> if(ge(x,num1(u35)),u43(logu39(x),num1(u35)),u35)
 logu39(u35) -> u35
 logu39(num1(x)) -> u43(logu39(x),num1(u35))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Reduction Pair Processor:
-> Pairs:
 U45(num0(x),num0(y)) -> U45(x,y)
 U45(num0(x),num1(y)) -> U45(u45(x,y),num1(u35))
 U45(num0(x),num1(y)) -> U45(x,y)
 U45(num1(x),num0(y)) -> U45(x,y)
 U45(num1(x),num1(y)) -> U45(x,y)
-> Rules:
 u43(u43(x,y),z) -> u43(x,u43(y,z))
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 log(x) -> u45(logu39(x),num1(u35))
 logu39(num0(x)) -> if(ge(x,num1(u35)),u43(logu39(x),num1(u35)),u35)
 logu39(u35) -> u35
 logu39(num1(x)) -> u43(logu39(x),num1(u35))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
-> Usable rules:
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[u43](X1,X2) = 0
[u45](X1,X2) = X1
[num0](X) = 2.X + 2
[ge](X1,X2) = 0
[if](X1,X2,X3) = 0
[log](X) = 0
[logu39](X) = 0
[not](X) = 0
[u35] = 1
[num1](X) = 2.X + 2
[fSNonEmpty] = 0
[ffalse] = 0
[ftrue] = 0
[U43](X1,X2) = 0
[U45](X1,X2) = 2.X1 + 2.X2
[NUM0](X) = 0
[GE](X1,X2) = 0
[IF](X1,X2,X3) = 0
[LOG](X) = 0
[LOGU39](X) = 0
[NOT](X) = 0

Problem 1.3: 

SCC Processor:
-> Pairs:
 U45(num0(x),num1(y)) -> U45(u45(x,y),num1(u35))
 U45(num0(x),num1(y)) -> U45(x,y)
 U45(num1(x),num0(y)) -> U45(x,y)
 U45(num1(x),num1(y)) -> U45(x,y)
-> Rules:
 u43(u43(x,y),z) -> u43(x,u43(y,z))
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 log(x) -> u45(logu39(x),num1(u35))
 logu39(num0(x)) -> if(ge(x,num1(u35)),u43(logu39(x),num1(u35)),u35)
 logu39(u35) -> u35
 logu39(num1(x)) -> u43(logu39(x),num1(u35))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U45(num0(x),num1(y)) -> U45(u45(x,y),num1(u35))
 U45(num0(x),num1(y)) -> U45(x,y)
 U45(num1(x),num0(y)) -> U45(x,y)
 U45(num1(x),num1(y)) -> U45(x,y)
->->-> Rules:
 u43(u43(x,y),z) -> u43(x,u43(y,z))
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 log(x) -> u45(logu39(x),num1(u35))
 logu39(num0(x)) -> if(ge(x,num1(u35)),u43(logu39(x),num1(u35)),u35)
 logu39(u35) -> u35
 logu39(num1(x)) -> u43(logu39(x),num1(u35))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse

Problem 1.3: 

Reduction Pair Processor:
-> Pairs:
 U45(num0(x),num1(y)) -> U45(u45(x,y),num1(u35))
 U45(num0(x),num1(y)) -> U45(x,y)
 U45(num1(x),num0(y)) -> U45(x,y)
 U45(num1(x),num1(y)) -> U45(x,y)
-> Rules:
 u43(u43(x,y),z) -> u43(x,u43(y,z))
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 log(x) -> u45(logu39(x),num1(u35))
 logu39(num0(x)) -> if(ge(x,num1(u35)),u43(logu39(x),num1(u35)),u35)
 logu39(u35) -> u35
 logu39(num1(x)) -> u43(logu39(x),num1(u35))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
-> Usable rules:
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[u43](X1,X2) = 0
[u45](X1,X2) = X1 + X2 + 1
[num0](X) = X + 2
[ge](X1,X2) = 0
[if](X1,X2,X3) = 0
[log](X) = 0
[logu39](X) = 0
[not](X) = 0
[u35] = 0
[num1](X) = X + 1
[fSNonEmpty] = 0
[ffalse] = 0
[ftrue] = 0
[U43](X1,X2) = 0
[U45](X1,X2) = 2.X1 + 2.X2
[NUM0](X) = 0
[GE](X1,X2) = 0
[IF](X1,X2,X3) = 0
[LOG](X) = 0
[LOGU39](X) = 0
[NOT](X) = 0

Problem 1.3: 

SCC Processor:
-> Pairs:
 U45(num0(x),num1(y)) -> U45(x,y)
 U45(num1(x),num0(y)) -> U45(x,y)
 U45(num1(x),num1(y)) -> U45(x,y)
-> Rules:
 u43(u43(x,y),z) -> u43(x,u43(y,z))
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 log(x) -> u45(logu39(x),num1(u35))
 logu39(num0(x)) -> if(ge(x,num1(u35)),u43(logu39(x),num1(u35)),u35)
 logu39(u35) -> u35
 logu39(num1(x)) -> u43(logu39(x),num1(u35))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U45(num0(x),num1(y)) -> U45(x,y)
 U45(num1(x),num0(y)) -> U45(x,y)
 U45(num1(x),num1(y)) -> U45(x,y)
->->-> Rules:
 u43(u43(x,y),z) -> u43(x,u43(y,z))
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 log(x) -> u45(logu39(x),num1(u35))
 logu39(num0(x)) -> if(ge(x,num1(u35)),u43(logu39(x),num1(u35)),u35)
 logu39(u35) -> u35
 logu39(num1(x)) -> u43(logu39(x),num1(u35))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse

Problem 1.3: 

Subterm Processor:
-> Pairs:
 U45(num0(x),num1(y)) -> U45(x,y)
 U45(num1(x),num0(y)) -> U45(x,y)
 U45(num1(x),num1(y)) -> U45(x,y)
-> Rules:
 u43(u43(x,y),z) -> u43(x,u43(y,z))
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 log(x) -> u45(logu39(x),num1(u35))
 logu39(num0(x)) -> if(ge(x,num1(u35)),u43(logu39(x),num1(u35)),u35)
 logu39(u35) -> u35
 logu39(num1(x)) -> u43(logu39(x),num1(u35))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
->Projection:
 pi(U45) = 1

Problem 1.3: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 u43(u43(x,y),z) -> u43(x,u43(y,z))
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 log(x) -> u45(logu39(x),num1(u35))
 logu39(num0(x)) -> if(ge(x,num1(u35)),u43(logu39(x),num1(u35)),u35)
 logu39(u35) -> u35
 logu39(num1(x)) -> u43(logu39(x),num1(u35))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.4: 

Reduction Pair Processor:
-> Pairs:
 U43(u43(x,y),z) -> U43(x,u43(y,z))
 U43(u43(x,y),z) -> U43(y,z)
 U43(num0(x),num0(y)) -> U43(x,y)
 U43(num0(x),num1(y)) -> U43(x,y)
 U43(num1(x),num0(y)) -> U43(x,y)
 U43(num1(x),num1(y)) -> U43(u43(x,y),num1(u35))
 U43(num1(x),num1(y)) -> U43(x,y)
-> Rules:
 u43(u43(x,y),z) -> u43(x,u43(y,z))
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 log(x) -> u45(logu39(x),num1(u35))
 logu39(num0(x)) -> if(ge(x,num1(u35)),u43(logu39(x),num1(u35)),u35)
 logu39(u35) -> u35
 logu39(num1(x)) -> u43(logu39(x),num1(u35))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
-> Usable rules:
 u43(u43(x,y),z) -> u43(x,u43(y,z))
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u35) -> x
 num0(u35) -> u35
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[u43](X1,X2) = X1 + X2 + 1
[u45](X1,X2) = 0
[num0](X) = X
[ge](X1,X2) = 0
[if](X1,X2,X3) = 0
[log](X) = 0
[logu39](X) = 0
[not](X) = 0
[u35] = 0
[num1](X) = X + 1
[fSNonEmpty] = 0
[ffalse] = 0
[ftrue] = 0
[U43](X1,X2) = 2.X1 + 2.X2
[U45](X1,X2) = 0
[NUM0](X) = 0
[GE](X1,X2) = 0
[IF](X1,X2,X3) = 0
[LOG](X) = 0
[LOGU39](X) = 0
[NOT](X) = 0

Problem 1.4: 

SCC Processor:
-> Pairs:
 U43(u43(x,y),z) -> U43(x,u43(y,z))
 U43(num0(x),num0(y)) -> U43(x,y)
 U43(num0(x),num1(y)) -> U43(x,y)
 U43(num1(x),num0(y)) -> U43(x,y)
 U43(num1(x),num1(y)) -> U43(u43(x,y),num1(u35))
 U43(num1(x),num1(y)) -> U43(x,y)
-> Rules:
 u43(u43(x,y),z) -> u43(x,u43(y,z))
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 log(x) -> u45(logu39(x),num1(u35))
 logu39(num0(x)) -> if(ge(x,num1(u35)),u43(logu39(x),num1(u35)),u35)
 logu39(u35) -> u35
 logu39(num1(x)) -> u43(logu39(x),num1(u35))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U43(u43(x,y),z) -> U43(x,u43(y,z))
 U43(num0(x),num0(y)) -> U43(x,y)
 U43(num0(x),num1(y)) -> U43(x,y)
 U43(num1(x),num0(y)) -> U43(x,y)
 U43(num1(x),num1(y)) -> U43(u43(x,y),num1(u35))
 U43(num1(x),num1(y)) -> U43(x,y)
->->-> Rules:
 u43(u43(x,y),z) -> u43(x,u43(y,z))
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 log(x) -> u45(logu39(x),num1(u35))
 logu39(num0(x)) -> if(ge(x,num1(u35)),u43(logu39(x),num1(u35)),u35)
 logu39(u35) -> u35
 logu39(num1(x)) -> u43(logu39(x),num1(u35))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse

Problem 1.4: 

Reduction Pair Processor:
-> Pairs:
 U43(u43(x,y),z) -> U43(x,u43(y,z))
 U43(num0(x),num0(y)) -> U43(x,y)
 U43(num0(x),num1(y)) -> U43(x,y)
 U43(num1(x),num0(y)) -> U43(x,y)
 U43(num1(x),num1(y)) -> U43(u43(x,y),num1(u35))
 U43(num1(x),num1(y)) -> U43(x,y)
-> Rules:
 u43(u43(x,y),z) -> u43(x,u43(y,z))
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 log(x) -> u45(logu39(x),num1(u35))
 logu39(num0(x)) -> if(ge(x,num1(u35)),u43(logu39(x),num1(u35)),u35)
 logu39(u35) -> u35
 logu39(num1(x)) -> u43(logu39(x),num1(u35))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
-> Usable rules:
 u43(u43(x,y),z) -> u43(x,u43(y,z))
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u35) -> x
 num0(u35) -> u35
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[u43](X1,X2) = X1 + X2 + 1
[u45](X1,X2) = 0
[num0](X) = X + 1
[ge](X1,X2) = 0
[if](X1,X2,X3) = 0
[log](X) = 0
[logu39](X) = 0
[not](X) = 0
[u35] = 0
[num1](X) = X + 2
[fSNonEmpty] = 0
[ffalse] = 0
[ftrue] = 0
[U43](X1,X2) = 2.X1 + 2.X2
[U45](X1,X2) = 0
[NUM0](X) = 0
[GE](X1,X2) = 0
[IF](X1,X2,X3) = 0
[LOG](X) = 0
[LOGU39](X) = 0
[NOT](X) = 0

Problem 1.4: 

SCC Processor:
-> Pairs:
 U43(u43(x,y),z) -> U43(x,u43(y,z))
 U43(num0(x),num1(y)) -> U43(x,y)
 U43(num1(x),num0(y)) -> U43(x,y)
 U43(num1(x),num1(y)) -> U43(u43(x,y),num1(u35))
 U43(num1(x),num1(y)) -> U43(x,y)
-> Rules:
 u43(u43(x,y),z) -> u43(x,u43(y,z))
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 log(x) -> u45(logu39(x),num1(u35))
 logu39(num0(x)) -> if(ge(x,num1(u35)),u43(logu39(x),num1(u35)),u35)
 logu39(u35) -> u35
 logu39(num1(x)) -> u43(logu39(x),num1(u35))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U43(u43(x,y),z) -> U43(x,u43(y,z))
 U43(num0(x),num1(y)) -> U43(x,y)
 U43(num1(x),num0(y)) -> U43(x,y)
 U43(num1(x),num1(y)) -> U43(u43(x,y),num1(u35))
 U43(num1(x),num1(y)) -> U43(x,y)
->->-> Rules:
 u43(u43(x,y),z) -> u43(x,u43(y,z))
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 log(x) -> u45(logu39(x),num1(u35))
 logu39(num0(x)) -> if(ge(x,num1(u35)),u43(logu39(x),num1(u35)),u35)
 logu39(u35) -> u35
 logu39(num1(x)) -> u43(logu39(x),num1(u35))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse

Problem 1.4: 

Reduction Pair Processor:
-> Pairs:
 U43(u43(x,y),z) -> U43(x,u43(y,z))
 U43(num0(x),num1(y)) -> U43(x,y)
 U43(num1(x),num0(y)) -> U43(x,y)
 U43(num1(x),num1(y)) -> U43(u43(x,y),num1(u35))
 U43(num1(x),num1(y)) -> U43(x,y)
-> Rules:
 u43(u43(x,y),z) -> u43(x,u43(y,z))
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 log(x) -> u45(logu39(x),num1(u35))
 logu39(num0(x)) -> if(ge(x,num1(u35)),u43(logu39(x),num1(u35)),u35)
 logu39(u35) -> u35
 logu39(num1(x)) -> u43(logu39(x),num1(u35))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
-> Usable rules:
 u43(u43(x,y),z) -> u43(x,u43(y,z))
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u35) -> x
 num0(u35) -> u35
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[u43](X1,X2) = X1 + X2 + 2
[u45](X1,X2) = 0
[num0](X) = X
[ge](X1,X2) = 0
[if](X1,X2,X3) = 0
[log](X) = 0
[logu39](X) = 0
[not](X) = 0
[u35] = 0
[num1](X) = X + 2
[fSNonEmpty] = 0
[ffalse] = 0
[ftrue] = 0
[U43](X1,X2) = 2.X1 + 2.X2
[U45](X1,X2) = 0
[NUM0](X) = 0
[GE](X1,X2) = 0
[IF](X1,X2,X3) = 0
[LOG](X) = 0
[LOGU39](X) = 0
[NOT](X) = 0

Problem 1.4: 

SCC Processor:
-> Pairs:
 U43(u43(x,y),z) -> U43(x,u43(y,z))
 U43(num1(x),num0(y)) -> U43(x,y)
 U43(num1(x),num1(y)) -> U43(u43(x,y),num1(u35))
 U43(num1(x),num1(y)) -> U43(x,y)
-> Rules:
 u43(u43(x,y),z) -> u43(x,u43(y,z))
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 log(x) -> u45(logu39(x),num1(u35))
 logu39(num0(x)) -> if(ge(x,num1(u35)),u43(logu39(x),num1(u35)),u35)
 logu39(u35) -> u35
 logu39(num1(x)) -> u43(logu39(x),num1(u35))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U43(u43(x,y),z) -> U43(x,u43(y,z))
 U43(num1(x),num0(y)) -> U43(x,y)
 U43(num1(x),num1(y)) -> U43(u43(x,y),num1(u35))
 U43(num1(x),num1(y)) -> U43(x,y)
->->-> Rules:
 u43(u43(x,y),z) -> u43(x,u43(y,z))
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 log(x) -> u45(logu39(x),num1(u35))
 logu39(num0(x)) -> if(ge(x,num1(u35)),u43(logu39(x),num1(u35)),u35)
 logu39(u35) -> u35
 logu39(num1(x)) -> u43(logu39(x),num1(u35))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse

Problem 1.4: 

Reduction Pair Processor:
-> Pairs:
 U43(u43(x,y),z) -> U43(x,u43(y,z))
 U43(num1(x),num0(y)) -> U43(x,y)
 U43(num1(x),num1(y)) -> U43(u43(x,y),num1(u35))
 U43(num1(x),num1(y)) -> U43(x,y)
-> Rules:
 u43(u43(x,y),z) -> u43(x,u43(y,z))
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 log(x) -> u45(logu39(x),num1(u35))
 logu39(num0(x)) -> if(ge(x,num1(u35)),u43(logu39(x),num1(u35)),u35)
 logu39(u35) -> u35
 logu39(num1(x)) -> u43(logu39(x),num1(u35))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
-> Usable rules:
 u43(u43(x,y),z) -> u43(x,u43(y,z))
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u35) -> x
 num0(u35) -> u35
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[u43](X1,X2) = X1 + X2 + 2
[u45](X1,X2) = 0
[num0](X) = X
[ge](X1,X2) = 0
[if](X1,X2,X3) = 0
[log](X) = 0
[logu39](X) = 0
[not](X) = 0
[u35] = 0
[num1](X) = X + 2
[fSNonEmpty] = 0
[ffalse] = 0
[ftrue] = 0
[U43](X1,X2) = 2.X1 + 2.X2
[U45](X1,X2) = 0
[NUM0](X) = 0
[GE](X1,X2) = 0
[IF](X1,X2,X3) = 0
[LOG](X) = 0
[LOGU39](X) = 0
[NOT](X) = 0

Problem 1.4: 

SCC Processor:
-> Pairs:
 U43(u43(x,y),z) -> U43(x,u43(y,z))
 U43(num1(x),num1(y)) -> U43(u43(x,y),num1(u35))
 U43(num1(x),num1(y)) -> U43(x,y)
-> Rules:
 u43(u43(x,y),z) -> u43(x,u43(y,z))
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 log(x) -> u45(logu39(x),num1(u35))
 logu39(num0(x)) -> if(ge(x,num1(u35)),u43(logu39(x),num1(u35)),u35)
 logu39(u35) -> u35
 logu39(num1(x)) -> u43(logu39(x),num1(u35))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U43(u43(x,y),z) -> U43(x,u43(y,z))
 U43(num1(x),num1(y)) -> U43(u43(x,y),num1(u35))
 U43(num1(x),num1(y)) -> U43(x,y)
->->-> Rules:
 u43(u43(x,y),z) -> u43(x,u43(y,z))
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 log(x) -> u45(logu39(x),num1(u35))
 logu39(num0(x)) -> if(ge(x,num1(u35)),u43(logu39(x),num1(u35)),u35)
 logu39(u35) -> u35
 logu39(num1(x)) -> u43(logu39(x),num1(u35))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse

Problem 1.4: 

Reduction Pair Processor:
-> Pairs:
 U43(u43(x,y),z) -> U43(x,u43(y,z))
 U43(num1(x),num1(y)) -> U43(u43(x,y),num1(u35))
 U43(num1(x),num1(y)) -> U43(x,y)
-> Rules:
 u43(u43(x,y),z) -> u43(x,u43(y,z))
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 log(x) -> u45(logu39(x),num1(u35))
 logu39(num0(x)) -> if(ge(x,num1(u35)),u43(logu39(x),num1(u35)),u35)
 logu39(u35) -> u35
 logu39(num1(x)) -> u43(logu39(x),num1(u35))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
-> Usable rules:
 u43(u43(x,y),z) -> u43(x,u43(y,z))
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u35) -> x
 num0(u35) -> u35
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[u43](X1,X2) = X1 + X2
[u45](X1,X2) = 0
[num0](X) = X + 1
[ge](X1,X2) = 0
[if](X1,X2,X3) = 0
[log](X) = 0
[logu39](X) = 0
[not](X) = 0
[u35] = 1
[num1](X) = X + 2
[fSNonEmpty] = 0
[ffalse] = 0
[ftrue] = 0
[U43](X1,X2) = X1 + X2
[U45](X1,X2) = 0
[NUM0](X) = 0
[GE](X1,X2) = 0
[IF](X1,X2,X3) = 0
[LOG](X) = 0
[LOGU39](X) = 0
[NOT](X) = 0

Problem 1.4: 

SCC Processor:
-> Pairs:
 U43(u43(x,y),z) -> U43(x,u43(y,z))
 U43(num1(x),num1(y)) -> U43(x,y)
-> Rules:
 u43(u43(x,y),z) -> u43(x,u43(y,z))
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 log(x) -> u45(logu39(x),num1(u35))
 logu39(num0(x)) -> if(ge(x,num1(u35)),u43(logu39(x),num1(u35)),u35)
 logu39(u35) -> u35
 logu39(num1(x)) -> u43(logu39(x),num1(u35))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U43(u43(x,y),z) -> U43(x,u43(y,z))
 U43(num1(x),num1(y)) -> U43(x,y)
->->-> Rules:
 u43(u43(x,y),z) -> u43(x,u43(y,z))
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 log(x) -> u45(logu39(x),num1(u35))
 logu39(num0(x)) -> if(ge(x,num1(u35)),u43(logu39(x),num1(u35)),u35)
 logu39(u35) -> u35
 logu39(num1(x)) -> u43(logu39(x),num1(u35))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse

Problem 1.4: 

Subterm Processor:
-> Pairs:
 U43(u43(x,y),z) -> U43(x,u43(y,z))
 U43(num1(x),num1(y)) -> U43(x,y)
-> Rules:
 u43(u43(x,y),z) -> u43(x,u43(y,z))
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 log(x) -> u45(logu39(x),num1(u35))
 logu39(num0(x)) -> if(ge(x,num1(u35)),u43(logu39(x),num1(u35)),u35)
 logu39(u35) -> u35
 logu39(num1(x)) -> u43(logu39(x),num1(u35))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
->Projection:
 pi(U43) = 1

Problem 1.4: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 u43(u43(x,y),z) -> u43(x,u43(y,z))
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 log(x) -> u45(logu39(x),num1(u35))
 logu39(num0(x)) -> if(ge(x,num1(u35)),u43(logu39(x),num1(u35)),u35)
 logu39(u35) -> u35
 logu39(num1(x)) -> u43(logu39(x),num1(u35))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.5: 

Subterm Processor:
-> Pairs:
 LOGU39(num0(x)) -> LOGU39(x)
 LOGU39(num1(x)) -> LOGU39(x)
-> Rules:
 u43(u43(x,y),z) -> u43(x,u43(y,z))
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 log(x) -> u45(logu39(x),num1(u35))
 logu39(num0(x)) -> if(ge(x,num1(u35)),u43(logu39(x),num1(u35)),u35)
 logu39(u35) -> u35
 logu39(num1(x)) -> u43(logu39(x),num1(u35))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
->Projection:
 pi(LOGU39) = 1

Problem 1.5: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 u43(u43(x,y),z) -> u43(x,u43(y,z))
 u43(num0(x),num0(y)) -> num0(u43(x,y))
 u43(num0(x),num1(y)) -> num1(u43(x,y))
 u43(u35,x) -> x
 u43(num1(x),num0(y)) -> num1(u43(x,y))
 u43(num1(x),num1(y)) -> num0(u43(u43(x,y),num1(u35)))
 u43(x,u35) -> x
 u45(num0(x),num0(y)) -> num0(u45(x,y))
 u45(num0(x),num1(y)) -> num1(u45(u45(x,y),num1(u35)))
 u45(u35,x) -> u35
 u45(num1(x),num0(y)) -> num1(u45(x,y))
 u45(num1(x),num1(y)) -> num0(u45(x,y))
 u45(x,u35) -> x
 num0(u35) -> u35
 ge(num0(x),num0(y)) -> ge(x,y)
 ge(num0(x),num1(y)) -> not(ge(y,x))
 ge(u35,num0(x)) -> ge(u35,x)
 ge(u35,num1(x)) -> ffalse
 ge(num1(x),num0(y)) -> ge(x,y)
 ge(num1(x),num1(y)) -> ge(x,y)
 ge(x,u35) -> ftrue
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 log(x) -> u45(logu39(x),num1(u35))
 logu39(num0(x)) -> if(ge(x,num1(u35)),u43(logu39(x),num1(u35)),u35)
 logu39(u35) -> u35
 logu39(num1(x)) -> u43(logu39(x),num1(u35))
 not(ffalse) -> ftrue
 not(ftrue) -> ffalse
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
