YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/Tlr4I.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 0 ms]
(2) QDP
(3) DependencyGraphProof [EQUIVALENT, 0 ms]
(4) QDP
(5) QDPOrderProof [EQUIVALENT, 177 ms]
(6) QDP
(7) DependencyGraphProof [EQUIVALENT, 0 ms]
(8) QDP
(9) TransformationProof [EQUIVALENT, 0 ms]
(10) QDP
(11) DependencyGraphProof [EQUIVALENT, 0 ms]
(12) QDP
(13) TransformationProof [EQUIVALENT, 0 ms]
(14) QDP
(15) DependencyGraphProof [EQUIVALENT, 0 ms]
(16) TRUE


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   b(y, z) -> f(c(c(y, z, z), a, a))
   b(b(z, y), a) -> z
   c(f(z), f(c(a, x, a)), y) -> c(f(b(x, z)), c(z, y, a), a)

Q is empty.

----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(y, z) -> C(c(y, z, z), a, a)
   B(y, z) -> C(y, z, z)
   C(f(z), f(c(a, x, a)), y) -> C(f(b(x, z)), c(z, y, a), a)
   C(f(z), f(c(a, x, a)), y) -> B(x, z)
   C(f(z), f(c(a, x, a)), y) -> C(z, y, a)

The TRS R consists of the following rules:

   b(y, z) -> f(c(c(y, z, z), a, a))
   b(b(z, y), a) -> z
   c(f(z), f(c(a, x, a)), y) -> c(f(b(x, z)), c(z, y, a), a)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(y, z) -> C(y, z, z)
   C(f(z), f(c(a, x, a)), y) -> C(f(b(x, z)), c(z, y, a), a)
   C(f(z), f(c(a, x, a)), y) -> B(x, z)
   C(f(z), f(c(a, x, a)), y) -> C(z, y, a)

The TRS R consists of the following rules:

   b(y, z) -> f(c(c(y, z, z), a, a))
   b(b(z, y), a) -> z
   c(f(z), f(c(a, x, a)), y) -> c(f(b(x, z)), c(z, y, a), a)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   B(y, z) -> C(y, z, z)
The remaining pairs can at least be oriented weakly.
Used ordering:  Matrix interpretation [MATRO] with arctic natural numbers [ARCTIC]:

   <<<
 POL(B(x_1, x_2)) =  	[[2A]] 	 +  	[[1A, 1A, 1A]] 	* 	x_1 	 +  	[[0A, 1A, 0A]] 	* 	x_2
>>>

   <<<
 POL(C(x_1, x_2, x_3)) =  	[[0A]] 	 +  	[[0A, -I, 0A]] 	* 	x_1 	 +  	[[-I, 0A, -I]] 	* 	x_2 	 +  	[[-I, 0A, -I]] 	* 	x_3
>>>

   <<<
 POL(f(x_1)) =  	[[2A], [0A], [0A]] 	 +  	[[0A, 1A, 0A], [1A, -I, 0A], [-I, -I, -I]] 	* 	x_1
>>>

   <<<
 POL(c(x_1, x_2, x_3)) =  	[[0A], [-I], [-I]] 	 +  	[[-I, -I, -I], [-I, -I, -I], [-I, -I, -I]] 	* 	x_1 	 +  	[[0A, 0A, 0A], [-I, 0A, -I], [0A, 0A, 0A]] 	* 	x_2 	 +  	[[0A, 0A, 0A], [0A, 0A, 0A], [0A, 0A, 0A]] 	* 	x_3
>>>

   <<<
 POL(a) =  	[[0A], [0A], [0A]]
>>>

   <<<
 POL(b(x_1, x_2)) =  	[[2A], [1A], [0A]] 	 +  	[[0A, 0A, 1A], [0A, 0A, 0A], [0A, 0A, 0A]] 	* 	x_1 	 +  	[[-I, 0A, 0A], [-I, -I, -I], [-I, 1A, 0A]] 	* 	x_2
>>>


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   b(y, z) -> f(c(c(y, z, z), a, a))
   b(b(z, y), a) -> z
   c(f(z), f(c(a, x, a)), y) -> c(f(b(x, z)), c(z, y, a), a)


----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C(f(z), f(c(a, x, a)), y) -> C(f(b(x, z)), c(z, y, a), a)
   C(f(z), f(c(a, x, a)), y) -> B(x, z)
   C(f(z), f(c(a, x, a)), y) -> C(z, y, a)

The TRS R consists of the following rules:

   b(y, z) -> f(c(c(y, z, z), a, a))
   b(b(z, y), a) -> z
   c(f(z), f(c(a, x, a)), y) -> c(f(b(x, z)), c(z, y, a), a)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C(f(z), f(c(a, x, a)), y) -> C(z, y, a)
   C(f(z), f(c(a, x, a)), y) -> C(f(b(x, z)), c(z, y, a), a)

The TRS R consists of the following rules:

   b(y, z) -> f(c(c(y, z, z), a, a))
   b(b(z, y), a) -> z
   c(f(z), f(c(a, x, a)), y) -> c(f(b(x, z)), c(z, y, a), a)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule C(f(z), f(c(a, x, a)), y) -> C(z, y, a) we obtained the following new rules [LPAR04]:

   (C(f(x0), f(c(a, x1, a)), a) -> C(x0, a, a),C(f(x0), f(c(a, x1, a)), a) -> C(x0, a, a))


----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C(f(z), f(c(a, x, a)), y) -> C(f(b(x, z)), c(z, y, a), a)
   C(f(x0), f(c(a, x1, a)), a) -> C(x0, a, a)

The TRS R consists of the following rules:

   b(y, z) -> f(c(c(y, z, z), a, a))
   b(b(z, y), a) -> z
   c(f(z), f(c(a, x, a)), y) -> c(f(b(x, z)), c(z, y, a), a)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C(f(z), f(c(a, x, a)), y) -> C(f(b(x, z)), c(z, y, a), a)

The TRS R consists of the following rules:

   b(y, z) -> f(c(c(y, z, z), a, a))
   b(b(z, y), a) -> z
   c(f(z), f(c(a, x, a)), y) -> c(f(b(x, z)), c(z, y, a), a)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule C(f(z), f(c(a, x, a)), y) -> C(f(b(x, z)), c(z, y, a), a) we obtained the following new rules [LPAR04]:

   (C(f(y_2), f(c(a, x1, a)), a) -> C(f(b(x1, y_2)), c(y_2, a, a), a),C(f(y_2), f(c(a, x1, a)), a) -> C(f(b(x1, y_2)), c(y_2, a, a), a))


----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C(f(y_2), f(c(a, x1, a)), a) -> C(f(b(x1, y_2)), c(y_2, a, a), a)

The TRS R consists of the following rules:

   b(y, z) -> f(c(c(y, z, z), a, a))
   b(b(z, y), a) -> z
   c(f(z), f(c(a, x, a)), y) -> c(f(b(x, z)), c(z, y, a), a)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 1 less node.
----------------------------------------

(16)
TRUE
