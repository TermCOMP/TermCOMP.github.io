YES

Problem 1: 

(VAR vu95NonEmpty x y)
(RULES
bitIter(x,y) -> if(zero(x),x,inc(y))
bits(x) -> bitIter(x,num0)
half(num0) -> num0
half(s(num0)) -> num0
half(s(s(x))) -> s(half(x))
if(ffalse,x,y) -> bitIter(half(x),y)
if(ftrue,x,y) -> p(y)
inc(num0) -> num0
inc(s(x)) -> s(inc(x))
p(num0) -> num0
p(s(x)) -> x
zero(num0) -> ftrue
zero(s(x)) -> ffalse
)


Problem 1: 

Innermost Equivalent Processor:
-> Rules:
 bitIter(x,y) -> if(zero(x),x,inc(y))
 bits(x) -> bitIter(x,num0)
 half(num0) -> num0
 half(s(num0)) -> num0
 half(s(s(x))) -> s(half(x))
 if(ffalse,x,y) -> bitIter(half(x),y)
 if(ftrue,x,y) -> p(y)
 inc(num0) -> num0
 inc(s(x)) -> s(inc(x))
 p(num0) -> num0
 p(s(x)) -> x
 zero(num0) -> ftrue
 zero(s(x)) -> ffalse
-> The term rewriting system is non-overlaping or locally confluent overlay system. Therefore, innermost termination implies termination.
 

Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 BITITER(x,y) -> IF(zero(x),x,inc(y))
 BITITER(x,y) -> INC(y)
 BITITER(x,y) -> ZERO(x)
 BITS(x) -> BITITER(x,num0)
 HALF(s(s(x))) -> HALF(x)
 IF(ffalse,x,y) -> BITITER(half(x),y)
 IF(ffalse,x,y) -> HALF(x)
 IF(ftrue,x,y) -> P(y)
 INC(s(x)) -> INC(x)
-> Rules:
 bitIter(x,y) -> if(zero(x),x,inc(y))
 bits(x) -> bitIter(x,num0)
 half(num0) -> num0
 half(s(num0)) -> num0
 half(s(s(x))) -> s(half(x))
 if(ffalse,x,y) -> bitIter(half(x),y)
 if(ftrue,x,y) -> p(y)
 inc(num0) -> num0
 inc(s(x)) -> s(inc(x))
 p(num0) -> num0
 p(s(x)) -> x
 zero(num0) -> ftrue
 zero(s(x)) -> ffalse

Problem 1: 

SCC Processor:
-> Pairs:
 BITITER(x,y) -> IF(zero(x),x,inc(y))
 BITITER(x,y) -> INC(y)
 BITITER(x,y) -> ZERO(x)
 BITS(x) -> BITITER(x,num0)
 HALF(s(s(x))) -> HALF(x)
 IF(ffalse,x,y) -> BITITER(half(x),y)
 IF(ffalse,x,y) -> HALF(x)
 IF(ftrue,x,y) -> P(y)
 INC(s(x)) -> INC(x)
-> Rules:
 bitIter(x,y) -> if(zero(x),x,inc(y))
 bits(x) -> bitIter(x,num0)
 half(num0) -> num0
 half(s(num0)) -> num0
 half(s(s(x))) -> s(half(x))
 if(ffalse,x,y) -> bitIter(half(x),y)
 if(ftrue,x,y) -> p(y)
 inc(num0) -> num0
 inc(s(x)) -> s(inc(x))
 p(num0) -> num0
 p(s(x)) -> x
 zero(num0) -> ftrue
 zero(s(x)) -> ffalse
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 INC(s(x)) -> INC(x)
->->-> Rules:
 bitIter(x,y) -> if(zero(x),x,inc(y))
 bits(x) -> bitIter(x,num0)
 half(num0) -> num0
 half(s(num0)) -> num0
 half(s(s(x))) -> s(half(x))
 if(ffalse,x,y) -> bitIter(half(x),y)
 if(ftrue,x,y) -> p(y)
 inc(num0) -> num0
 inc(s(x)) -> s(inc(x))
 p(num0) -> num0
 p(s(x)) -> x
 zero(num0) -> ftrue
 zero(s(x)) -> ffalse
->->Cycle:
->->-> Pairs:
 HALF(s(s(x))) -> HALF(x)
->->-> Rules:
 bitIter(x,y) -> if(zero(x),x,inc(y))
 bits(x) -> bitIter(x,num0)
 half(num0) -> num0
 half(s(num0)) -> num0
 half(s(s(x))) -> s(half(x))
 if(ffalse,x,y) -> bitIter(half(x),y)
 if(ftrue,x,y) -> p(y)
 inc(num0) -> num0
 inc(s(x)) -> s(inc(x))
 p(num0) -> num0
 p(s(x)) -> x
 zero(num0) -> ftrue
 zero(s(x)) -> ffalse
->->Cycle:
->->-> Pairs:
 BITITER(x,y) -> IF(zero(x),x,inc(y))
 IF(ffalse,x,y) -> BITITER(half(x),y)
->->-> Rules:
 bitIter(x,y) -> if(zero(x),x,inc(y))
 bits(x) -> bitIter(x,num0)
 half(num0) -> num0
 half(s(num0)) -> num0
 half(s(s(x))) -> s(half(x))
 if(ffalse,x,y) -> bitIter(half(x),y)
 if(ftrue,x,y) -> p(y)
 inc(num0) -> num0
 inc(s(x)) -> s(inc(x))
 p(num0) -> num0
 p(s(x)) -> x
 zero(num0) -> ftrue
 zero(s(x)) -> ffalse


The problem is decomposed in 3 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 INC(s(x)) -> INC(x)
-> Rules:
 bitIter(x,y) -> if(zero(x),x,inc(y))
 bits(x) -> bitIter(x,num0)
 half(num0) -> num0
 half(s(num0)) -> num0
 half(s(s(x))) -> s(half(x))
 if(ffalse,x,y) -> bitIter(half(x),y)
 if(ftrue,x,y) -> p(y)
 inc(num0) -> num0
 inc(s(x)) -> s(inc(x))
 p(num0) -> num0
 p(s(x)) -> x
 zero(num0) -> ftrue
 zero(s(x)) -> ffalse
->Projection:
 pi(INC) = 1

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 bitIter(x,y) -> if(zero(x),x,inc(y))
 bits(x) -> bitIter(x,num0)
 half(num0) -> num0
 half(s(num0)) -> num0
 half(s(s(x))) -> s(half(x))
 if(ffalse,x,y) -> bitIter(half(x),y)
 if(ftrue,x,y) -> p(y)
 inc(num0) -> num0
 inc(s(x)) -> s(inc(x))
 p(num0) -> num0
 p(s(x)) -> x
 zero(num0) -> ftrue
 zero(s(x)) -> ffalse
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Subterm Processor:
-> Pairs:
 HALF(s(s(x))) -> HALF(x)
-> Rules:
 bitIter(x,y) -> if(zero(x),x,inc(y))
 bits(x) -> bitIter(x,num0)
 half(num0) -> num0
 half(s(num0)) -> num0
 half(s(s(x))) -> s(half(x))
 if(ffalse,x,y) -> bitIter(half(x),y)
 if(ftrue,x,y) -> p(y)
 inc(num0) -> num0
 inc(s(x)) -> s(inc(x))
 p(num0) -> num0
 p(s(x)) -> x
 zero(num0) -> ftrue
 zero(s(x)) -> ffalse
->Projection:
 pi(HALF) = 1

Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 bitIter(x,y) -> if(zero(x),x,inc(y))
 bits(x) -> bitIter(x,num0)
 half(num0) -> num0
 half(s(num0)) -> num0
 half(s(s(x))) -> s(half(x))
 if(ffalse,x,y) -> bitIter(half(x),y)
 if(ftrue,x,y) -> p(y)
 inc(num0) -> num0
 inc(s(x)) -> s(inc(x))
 p(num0) -> num0
 p(s(x)) -> x
 zero(num0) -> ftrue
 zero(s(x)) -> ffalse
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Reduction Pairs Processor:
-> Pairs:
 BITITER(x,y) -> IF(zero(x),x,inc(y))
 IF(ffalse,x,y) -> BITITER(half(x),y)
-> Rules:
 bitIter(x,y) -> if(zero(x),x,inc(y))
 bits(x) -> bitIter(x,num0)
 half(num0) -> num0
 half(s(num0)) -> num0
 half(s(s(x))) -> s(half(x))
 if(ffalse,x,y) -> bitIter(half(x),y)
 if(ftrue,x,y) -> p(y)
 inc(num0) -> num0
 inc(s(x)) -> s(inc(x))
 p(num0) -> num0
 p(s(x)) -> x
 zero(num0) -> ftrue
 zero(s(x)) -> ffalse
-> Usable rules:
 half(num0) -> num0
 half(s(num0)) -> num0
 half(s(s(x))) -> s(half(x))
 inc(num0) -> num0
 inc(s(x)) -> s(inc(x))
 zero(num0) -> ftrue
 zero(s(x)) -> ffalse
->Interpretation type:
 Linear
->Coefficients:
 All rationals
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[bitIter](X1,X2) = 0
[bits](X) = 0
[half](X) = 1/2.X
[if](X1,X2,X3) = 0
[inc](X) = 2.X + 1
[p](X) = 0
[zero](X) = X + 1
[num0] = 0
[fSNonEmpty] = 0
[ffalse] = 2
[s](X) = 2.X + 2
[ftrue] = 1
[BITITER](X1,X2) = 2.X1 + 2
[BITS](X) = 0
[HALF](X) = 0
[IF](X1,X2,X3) = X1 + X2 + 1/2
[INC](X) = 0
[P](X) = 0
[ZERO](X) = 0

Problem 1.3: 

SCC Processor:
-> Pairs:
 IF(ffalse,x,y) -> BITITER(half(x),y)
-> Rules:
 bitIter(x,y) -> if(zero(x),x,inc(y))
 bits(x) -> bitIter(x,num0)
 half(num0) -> num0
 half(s(num0)) -> num0
 half(s(s(x))) -> s(half(x))
 if(ffalse,x,y) -> bitIter(half(x),y)
 if(ftrue,x,y) -> p(y)
 inc(num0) -> num0
 inc(s(x)) -> s(inc(x))
 p(num0) -> num0
 p(s(x)) -> x
 zero(num0) -> ftrue
 zero(s(x)) -> ffalse
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
