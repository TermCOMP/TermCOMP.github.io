YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/kq42G.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 0 ms]
(2) QDP
(3) DependencyGraphProof [EQUIVALENT, 0 ms]
(4) AND
    (5) QDP
        (6) UsableRulesProof [EQUIVALENT, 0 ms]
        (7) QDP
        (8) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (9) YES
    (10) QDP
        (11) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (12) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(x, c(y)) -> f(x, s(f(y, y)))
   f(s(x), y) -> f(x, s(c(y)))

Q is empty.

----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(x, c(y)) -> F(x, s(f(y, y)))
   F(x, c(y)) -> F(y, y)
   F(s(x), y) -> F(x, s(c(y)))

The TRS R consists of the following rules:

   f(x, c(y)) -> f(x, s(f(y, y)))
   f(s(x), y) -> f(x, s(c(y)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs with 1 less node.
----------------------------------------

(4)
Complex Obligation (AND)

----------------------------------------

(5)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(x), y) -> F(x, s(c(y)))

The TRS R consists of the following rules:

   f(x, c(y)) -> f(x, s(f(y, y)))
   f(s(x), y) -> f(x, s(c(y)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(6) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(7)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(x), y) -> F(x, s(c(y)))

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(8) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*F(s(x), y) -> F(x, s(c(y)))
The graph contains the following edges 1 > 1


----------------------------------------

(9)
YES

----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(x, c(y)) -> F(y, y)

The TRS R consists of the following rules:

   f(x, c(y)) -> f(x, s(f(y, y)))
   f(s(x), y) -> f(x, s(c(y)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*F(x, c(y)) -> F(y, y)
The graph contains the following edges 2 > 1, 2 > 2


----------------------------------------

(12)
YES
