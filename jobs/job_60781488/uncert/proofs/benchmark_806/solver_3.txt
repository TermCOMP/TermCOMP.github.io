YES

Problem 1: 

(VAR vu95NonEmpty m n x y)
(RULES
sum(cons(num0,x),y) -> sum(x,y)
sum(cons(s(n),x),cons(m,y)) -> sum(cons(n,x),cons(s(m),y))
sum(nil,y) -> y
weight(cons(n,cons(m,x))) -> weight(sum(cons(n,cons(m,x)),cons(num0,x)))
weight(cons(n,nil)) -> n
)


Problem 1: 

Innermost Equivalent Processor:
-> Rules:
 sum(cons(num0,x),y) -> sum(x,y)
 sum(cons(s(n),x),cons(m,y)) -> sum(cons(n,x),cons(s(m),y))
 sum(nil,y) -> y
 weight(cons(n,cons(m,x))) -> weight(sum(cons(n,cons(m,x)),cons(num0,x)))
 weight(cons(n,nil)) -> n
-> The term rewriting system is non-overlaping or locally confluent overlay system. Therefore, innermost termination implies termination.
 

Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 SUM(cons(num0,x),y) -> SUM(x,y)
 SUM(cons(s(n),x),cons(m,y)) -> SUM(cons(n,x),cons(s(m),y))
 WEIGHT(cons(n,cons(m,x))) -> SUM(cons(n,cons(m,x)),cons(num0,x))
 WEIGHT(cons(n,cons(m,x))) -> WEIGHT(sum(cons(n,cons(m,x)),cons(num0,x)))
-> Rules:
 sum(cons(num0,x),y) -> sum(x,y)
 sum(cons(s(n),x),cons(m,y)) -> sum(cons(n,x),cons(s(m),y))
 sum(nil,y) -> y
 weight(cons(n,cons(m,x))) -> weight(sum(cons(n,cons(m,x)),cons(num0,x)))
 weight(cons(n,nil)) -> n

Problem 1: 

SCC Processor:
-> Pairs:
 SUM(cons(num0,x),y) -> SUM(x,y)
 SUM(cons(s(n),x),cons(m,y)) -> SUM(cons(n,x),cons(s(m),y))
 WEIGHT(cons(n,cons(m,x))) -> SUM(cons(n,cons(m,x)),cons(num0,x))
 WEIGHT(cons(n,cons(m,x))) -> WEIGHT(sum(cons(n,cons(m,x)),cons(num0,x)))
-> Rules:
 sum(cons(num0,x),y) -> sum(x,y)
 sum(cons(s(n),x),cons(m,y)) -> sum(cons(n,x),cons(s(m),y))
 sum(nil,y) -> y
 weight(cons(n,cons(m,x))) -> weight(sum(cons(n,cons(m,x)),cons(num0,x)))
 weight(cons(n,nil)) -> n
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 SUM(cons(num0,x),y) -> SUM(x,y)
 SUM(cons(s(n),x),cons(m,y)) -> SUM(cons(n,x),cons(s(m),y))
->->-> Rules:
 sum(cons(num0,x),y) -> sum(x,y)
 sum(cons(s(n),x),cons(m,y)) -> sum(cons(n,x),cons(s(m),y))
 sum(nil,y) -> y
 weight(cons(n,cons(m,x))) -> weight(sum(cons(n,cons(m,x)),cons(num0,x)))
 weight(cons(n,nil)) -> n
->->Cycle:
->->-> Pairs:
 WEIGHT(cons(n,cons(m,x))) -> WEIGHT(sum(cons(n,cons(m,x)),cons(num0,x)))
->->-> Rules:
 sum(cons(num0,x),y) -> sum(x,y)
 sum(cons(s(n),x),cons(m,y)) -> sum(cons(n,x),cons(s(m),y))
 sum(nil,y) -> y
 weight(cons(n,cons(m,x))) -> weight(sum(cons(n,cons(m,x)),cons(num0,x)))
 weight(cons(n,nil)) -> n


The problem is decomposed in 2 subproblems.

Problem 1.1: 

Reduction Pairs Processor:
-> Pairs:
 SUM(cons(num0,x),y) -> SUM(x,y)
 SUM(cons(s(n),x),cons(m,y)) -> SUM(cons(n,x),cons(s(m),y))
-> Rules:
 sum(cons(num0,x),y) -> sum(x,y)
 sum(cons(s(n),x),cons(m,y)) -> sum(cons(n,x),cons(s(m),y))
 sum(nil,y) -> y
 weight(cons(n,cons(m,x))) -> weight(sum(cons(n,cons(m,x)),cons(num0,x)))
 weight(cons(n,nil)) -> n
-> Usable rules:
 Empty
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[sum](X1,X2) = 0
[weight](X) = 0
[num0] = 2
[cons](X1,X2) = 2.X2 + 2
[fSNonEmpty] = 0
[nil] = 0
[s](X) = 2.X + 2
[SUM](X1,X2) = 2.X1
[WEIGHT](X) = 0

Problem 1.1: 

SCC Processor:
-> Pairs:
 SUM(cons(s(n),x),cons(m,y)) -> SUM(cons(n,x),cons(s(m),y))
-> Rules:
 sum(cons(num0,x),y) -> sum(x,y)
 sum(cons(s(n),x),cons(m,y)) -> sum(cons(n,x),cons(s(m),y))
 sum(nil,y) -> y
 weight(cons(n,cons(m,x))) -> weight(sum(cons(n,cons(m,x)),cons(num0,x)))
 weight(cons(n,nil)) -> n
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 SUM(cons(s(n),x),cons(m,y)) -> SUM(cons(n,x),cons(s(m),y))
->->-> Rules:
 sum(cons(num0,x),y) -> sum(x,y)
 sum(cons(s(n),x),cons(m,y)) -> sum(cons(n,x),cons(s(m),y))
 sum(nil,y) -> y
 weight(cons(n,cons(m,x))) -> weight(sum(cons(n,cons(m,x)),cons(num0,x)))
 weight(cons(n,nil)) -> n

Problem 1.1: 

Reduction Pairs Processor:
-> Pairs:
 SUM(cons(s(n),x),cons(m,y)) -> SUM(cons(n,x),cons(s(m),y))
-> Rules:
 sum(cons(num0,x),y) -> sum(x,y)
 sum(cons(s(n),x),cons(m,y)) -> sum(cons(n,x),cons(s(m),y))
 sum(nil,y) -> y
 weight(cons(n,cons(m,x))) -> weight(sum(cons(n,cons(m,x)),cons(num0,x)))
 weight(cons(n,nil)) -> n
-> Usable rules:
 Empty
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[sum](X1,X2) = 0
[weight](X) = 0
[num0] = 0
[cons](X1,X2) = 2.X1
[fSNonEmpty] = 0
[nil] = 0
[s](X) = 2.X + 2
[SUM](X1,X2) = 2.X1
[WEIGHT](X) = 0

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 sum(cons(num0,x),y) -> sum(x,y)
 sum(cons(s(n),x),cons(m,y)) -> sum(cons(n,x),cons(s(m),y))
 sum(nil,y) -> y
 weight(cons(n,cons(m,x))) -> weight(sum(cons(n,cons(m,x)),cons(num0,x)))
 weight(cons(n,nil)) -> n
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Reduction Pairs Processor:
-> Pairs:
 WEIGHT(cons(n,cons(m,x))) -> WEIGHT(sum(cons(n,cons(m,x)),cons(num0,x)))
-> Rules:
 sum(cons(num0,x),y) -> sum(x,y)
 sum(cons(s(n),x),cons(m,y)) -> sum(cons(n,x),cons(s(m),y))
 sum(nil,y) -> y
 weight(cons(n,cons(m,x))) -> weight(sum(cons(n,cons(m,x)),cons(num0,x)))
 weight(cons(n,nil)) -> n
-> Usable rules:
 sum(cons(num0,x),y) -> sum(x,y)
 sum(cons(s(n),x),cons(m,y)) -> sum(cons(n,x),cons(s(m),y))
 sum(nil,y) -> y
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[sum](X1,X2) = X2 + 1
[weight](X) = 0
[num0] = 1
[cons](X1,X2) = 2.X1 + 2.X2 + 2
[fSNonEmpty] = 0
[nil] = 0
[s](X) = 0
[SUM](X1,X2) = 0
[WEIGHT](X) = 2.X

Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 sum(cons(num0,x),y) -> sum(x,y)
 sum(cons(s(n),x),cons(m,y)) -> sum(cons(n,x),cons(s(m),y))
 sum(nil,y) -> y
 weight(cons(n,cons(m,x))) -> weight(sum(cons(n,cons(m,x)),cons(num0,x)))
 weight(cons(n,nil)) -> n
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
