NO

** BEGIN proof argument **
* Technique: [Payet, LOPSTR'18]
* Certificate: h(g(|0|,|1|),g(_0,|1|)) is non-terminating
* Description:
The following rule R was generated while unfolding
the dependency pairs of the analyzed TRS:
[iteration = 3] h^#(g(|0|,_1),g(_0,|1|)) -> h^#(g(|0|,_1),g(|0|,_1))
Let l be the left-hand side and r be the right-hand side of R.
Let p = epsilon, theta1 = {_1->|1|} and theta2 = {_0->|0|}.
We have r|p = h^#(g(|0|,_1),g(|0|,_1))
and theta2(theta1(l)) = theta1(r|p), i.e., l semi-unifies with r|p.
So, the term theta1(l) = h(g(|0|,|1|),g(_0,|1|))
starts an infinite rewrite sequence w.r.t. the analyzed TRS.
** END proof argument **
Total number of generated unfolded rules = 76

