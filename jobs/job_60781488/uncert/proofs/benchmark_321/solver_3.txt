YES

Problem 1: 

(VAR vu95NonEmpty l l1 l2 x)
(RULES
append(l1,l2) -> ifappend(l1,l2,isu95empty(l1))
hd(cons(x,l)) -> x
ifappend(l1,l2,ffalse) -> cons(hd(l1),append(tl(l1),l2))
ifappend(l1,l2,ftrue) -> l2
isu95empty(cons(x,l)) -> ffalse
isu95empty(nil) -> ftrue
tl(cons(x,l)) -> l
)


Problem 1: 

Innermost Equivalent Processor:
-> Rules:
 append(l1,l2) -> ifappend(l1,l2,isu95empty(l1))
 hd(cons(x,l)) -> x
 ifappend(l1,l2,ffalse) -> cons(hd(l1),append(tl(l1),l2))
 ifappend(l1,l2,ftrue) -> l2
 isu95empty(cons(x,l)) -> ffalse
 isu95empty(nil) -> ftrue
 tl(cons(x,l)) -> l
-> The term rewriting system is non-overlaping or locally confluent overlay system. Therefore, innermost termination implies termination.
 

Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 APPEND(l1,l2) -> IFAPPEND(l1,l2,isu95empty(l1))
 APPEND(l1,l2) -> ISU95EMPTY(l1)
 IFAPPEND(l1,l2,ffalse) -> APPEND(tl(l1),l2)
 IFAPPEND(l1,l2,ffalse) -> HD(l1)
 IFAPPEND(l1,l2,ffalse) -> TL(l1)
-> Rules:
 append(l1,l2) -> ifappend(l1,l2,isu95empty(l1))
 hd(cons(x,l)) -> x
 ifappend(l1,l2,ffalse) -> cons(hd(l1),append(tl(l1),l2))
 ifappend(l1,l2,ftrue) -> l2
 isu95empty(cons(x,l)) -> ffalse
 isu95empty(nil) -> ftrue
 tl(cons(x,l)) -> l

Problem 1: 

SCC Processor:
-> Pairs:
 APPEND(l1,l2) -> IFAPPEND(l1,l2,isu95empty(l1))
 APPEND(l1,l2) -> ISU95EMPTY(l1)
 IFAPPEND(l1,l2,ffalse) -> APPEND(tl(l1),l2)
 IFAPPEND(l1,l2,ffalse) -> HD(l1)
 IFAPPEND(l1,l2,ffalse) -> TL(l1)
-> Rules:
 append(l1,l2) -> ifappend(l1,l2,isu95empty(l1))
 hd(cons(x,l)) -> x
 ifappend(l1,l2,ffalse) -> cons(hd(l1),append(tl(l1),l2))
 ifappend(l1,l2,ftrue) -> l2
 isu95empty(cons(x,l)) -> ffalse
 isu95empty(nil) -> ftrue
 tl(cons(x,l)) -> l
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 APPEND(l1,l2) -> IFAPPEND(l1,l2,isu95empty(l1))
 IFAPPEND(l1,l2,ffalse) -> APPEND(tl(l1),l2)
->->-> Rules:
 append(l1,l2) -> ifappend(l1,l2,isu95empty(l1))
 hd(cons(x,l)) -> x
 ifappend(l1,l2,ffalse) -> cons(hd(l1),append(tl(l1),l2))
 ifappend(l1,l2,ftrue) -> l2
 isu95empty(cons(x,l)) -> ffalse
 isu95empty(nil) -> ftrue
 tl(cons(x,l)) -> l

Problem 1: 

Reduction Pairs Processor:
-> Pairs:
 APPEND(l1,l2) -> IFAPPEND(l1,l2,isu95empty(l1))
 IFAPPEND(l1,l2,ffalse) -> APPEND(tl(l1),l2)
-> Rules:
 append(l1,l2) -> ifappend(l1,l2,isu95empty(l1))
 hd(cons(x,l)) -> x
 ifappend(l1,l2,ffalse) -> cons(hd(l1),append(tl(l1),l2))
 ifappend(l1,l2,ftrue) -> l2
 isu95empty(cons(x,l)) -> ffalse
 isu95empty(nil) -> ftrue
 tl(cons(x,l)) -> l
-> Usable rules:
 isu95empty(cons(x,l)) -> ffalse
 isu95empty(nil) -> ftrue
 tl(cons(x,l)) -> l
->Interpretation type:
 Linear
->Coefficients:
 All rationals
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[append](X1,X2) = 0
[hd](X) = 0
[ifappend](X1,X2,X3) = 0
[isu95empty](X) = X
[tl](X) = 1/2.X
[cons](X1,X2) = 2.X2 + 2
[fSNonEmpty] = 0
[ffalse] = 1/2
[nil] = 1/2
[ftrue] = 1/2
[APPEND](X1,X2) = 2.X1 + 1
[HD](X) = 0
[IFAPPEND](X1,X2,X3) = X1 + X3 + 1/2
[ISU95EMPTY](X) = 0
[TL](X) = 0

Problem 1: 

SCC Processor:
-> Pairs:
 IFAPPEND(l1,l2,ffalse) -> APPEND(tl(l1),l2)
-> Rules:
 append(l1,l2) -> ifappend(l1,l2,isu95empty(l1))
 hd(cons(x,l)) -> x
 ifappend(l1,l2,ffalse) -> cons(hd(l1),append(tl(l1),l2))
 ifappend(l1,l2,ftrue) -> l2
 isu95empty(cons(x,l)) -> ffalse
 isu95empty(nil) -> ftrue
 tl(cons(x,l)) -> l
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
