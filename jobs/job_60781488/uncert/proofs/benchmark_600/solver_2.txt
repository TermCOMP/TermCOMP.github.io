YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/TQA1E.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 0 ms]
(2) QDP
(3) DependencyGraphProof [EQUIVALENT, 0 ms]
(4) QDP
(5) TransformationProof [EQUIVALENT, 0 ms]
(6) QDP
(7) DependencyGraphProof [EQUIVALENT, 0 ms]
(8) QDP
(9) TransformationProof [EQUIVALENT, 0 ms]
(10) QDP
(11) QDPOrderProof [EQUIVALENT, 20 ms]
(12) QDP
(13) QDPOrderProof [EQUIVALENT, 59 ms]
(14) QDP
(15) DependencyGraphProof [EQUIVALENT, 0 ms]
(16) TRUE


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   c(c(c(y))) -> c(c(a(y, 0)))
   c(a(a(0, x), y)) -> a(c(c(c(0))), y)
   c(y) -> y

Q is empty.

----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C(c(c(y))) -> C(c(a(y, 0)))
   C(c(c(y))) -> C(a(y, 0))
   C(a(a(0, x), y)) -> C(c(c(0)))
   C(a(a(0, x), y)) -> C(c(0))
   C(a(a(0, x), y)) -> C(0)

The TRS R consists of the following rules:

   c(c(c(y))) -> c(c(a(y, 0)))
   c(a(a(0, x), y)) -> a(c(c(c(0))), y)
   c(y) -> y

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C(c(c(y))) -> C(a(y, 0))
   C(a(a(0, x), y)) -> C(c(c(0)))
   C(c(c(y))) -> C(c(a(y, 0)))
   C(a(a(0, x), y)) -> C(c(0))

The TRS R consists of the following rules:

   c(c(c(y))) -> c(c(a(y, 0)))
   c(a(a(0, x), y)) -> a(c(c(c(0))), y)
   c(y) -> y

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule C(a(a(0, x), y)) -> C(c(0)) at position [0] we obtained the following new rules [LPAR04]:

   (C(a(a(0, y0), y1)) -> C(0),C(a(a(0, y0), y1)) -> C(0))


----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C(c(c(y))) -> C(a(y, 0))
   C(a(a(0, x), y)) -> C(c(c(0)))
   C(c(c(y))) -> C(c(a(y, 0)))
   C(a(a(0, y0), y1)) -> C(0)

The TRS R consists of the following rules:

   c(c(c(y))) -> c(c(a(y, 0)))
   c(a(a(0, x), y)) -> a(c(c(c(0))), y)
   c(y) -> y

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C(a(a(0, x), y)) -> C(c(c(0)))
   C(c(c(y))) -> C(c(a(y, 0)))
   C(c(c(y))) -> C(a(y, 0))

The TRS R consists of the following rules:

   c(c(c(y))) -> c(c(a(y, 0)))
   c(a(a(0, x), y)) -> a(c(c(c(0))), y)
   c(y) -> y

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule C(c(c(y))) -> C(c(a(y, 0))) at position [0] we obtained the following new rules [LPAR04]:

   (C(c(c(a(0, x0)))) -> C(a(c(c(c(0))), 0)),C(c(c(a(0, x0)))) -> C(a(c(c(c(0))), 0)))
   (C(c(c(y0))) -> C(a(y0, 0)),C(c(c(y))) -> C(a(y, 0)))


----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C(a(a(0, x), y)) -> C(c(c(0)))
   C(c(c(y))) -> C(a(y, 0))
   C(c(c(a(0, x0)))) -> C(a(c(c(c(0))), 0))

The TRS R consists of the following rules:

   c(c(c(y))) -> c(c(a(y, 0)))
   c(a(a(0, x), y)) -> a(c(c(c(0))), y)
   c(y) -> y

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   C(c(c(a(0, x0)))) -> C(a(c(c(c(0))), 0))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial Order [NEGPOLO,POLO] with Interpretation:

POL( C_1(x_1) ) = max{0, x_1 - 2}
POL( c_1(x_1) ) = x_1 + 1
POL( a_2(x_1, x_2) ) = 1
POL( 0 ) = 0

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   c(y) -> y
   c(c(c(y))) -> c(c(a(y, 0)))
   c(a(a(0, x), y)) -> a(c(c(c(0))), y)


----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C(a(a(0, x), y)) -> C(c(c(0)))
   C(c(c(y))) -> C(a(y, 0))

The TRS R consists of the following rules:

   c(c(c(y))) -> c(c(a(y, 0)))
   c(a(a(0, x), y)) -> a(c(c(c(0))), y)
   c(y) -> y

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   C(a(a(0, x), y)) -> C(c(c(0)))
The remaining pairs can at least be oriented weakly.
Used ordering:  Matrix interpretation [MATRO] with arctic natural numbers [ARCTIC]:

   <<<
 POL(C(x_1)) =  	[[0A]] 	 +  	[[0A, -I, -I]] 	* 	x_1
>>>

   <<<
 POL(a(x_1, x_2)) =  	[[-I], [0A], [-I]] 	 +  	[[-I, 1A, 0A], [-I, -I, 0A], [-I, 0A, 0A]] 	* 	x_1 	 +  	[[0A, -I, -I], [-I, -I, -I], [-I, 0A, 0A]] 	* 	x_2
>>>

   <<<
 POL(0) =  	[[0A], [-I], [-I]]
>>>

   <<<
 POL(c(x_1)) =  	[[0A], [-I], [0A]] 	 +  	[[0A, 1A, -I], [-I, 0A, 0A], [-I, 0A, 0A]] 	* 	x_1
>>>


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   c(y) -> y
   c(c(c(y))) -> c(c(a(y, 0)))
   c(a(a(0, x), y)) -> a(c(c(c(0))), y)


----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C(c(c(y))) -> C(a(y, 0))

The TRS R consists of the following rules:

   c(c(c(y))) -> c(c(a(y, 0)))
   c(a(a(0, x), y)) -> a(c(c(c(0))), y)
   c(y) -> y

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 1 less node.
----------------------------------------

(16)
TRUE
