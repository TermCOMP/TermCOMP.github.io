YES

Problem 1: 

(VAR vu95NonEmpty X Y)
(RULES
ifMinus(ffalse,s(X),Y) -> s(minus(X,Y))
ifMinus(ftrue,s(X),Y) -> num0
le(num0,Y) -> ftrue
le(s(X),num0) -> ffalse
le(s(X),s(Y)) -> le(X,Y)
minus(num0,Y) -> num0
minus(s(X),Y) -> ifMinus(le(s(X),Y),s(X),Y)
quot(num0,s(Y)) -> num0
quot(s(X),s(Y)) -> s(quot(minus(X,Y),s(Y)))
)


Problem 1: 

Innermost Equivalent Processor:
-> Rules:
 ifMinus(ffalse,s(X),Y) -> s(minus(X,Y))
 ifMinus(ftrue,s(X),Y) -> num0
 le(num0,Y) -> ftrue
 le(s(X),num0) -> ffalse
 le(s(X),s(Y)) -> le(X,Y)
 minus(num0,Y) -> num0
 minus(s(X),Y) -> ifMinus(le(s(X),Y),s(X),Y)
 quot(num0,s(Y)) -> num0
 quot(s(X),s(Y)) -> s(quot(minus(X,Y),s(Y)))
-> The term rewriting system is non-overlaping or locally confluent overlay system. Therefore, innermost termination implies termination.
 

Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 IFMINUS(ffalse,s(X),Y) -> MINUS(X,Y)
 LE(s(X),s(Y)) -> LE(X,Y)
 MINUS(s(X),Y) -> IFMINUS(le(s(X),Y),s(X),Y)
 MINUS(s(X),Y) -> LE(s(X),Y)
 QUOT(s(X),s(Y)) -> MINUS(X,Y)
 QUOT(s(X),s(Y)) -> QUOT(minus(X,Y),s(Y))
-> Rules:
 ifMinus(ffalse,s(X),Y) -> s(minus(X,Y))
 ifMinus(ftrue,s(X),Y) -> num0
 le(num0,Y) -> ftrue
 le(s(X),num0) -> ffalse
 le(s(X),s(Y)) -> le(X,Y)
 minus(num0,Y) -> num0
 minus(s(X),Y) -> ifMinus(le(s(X),Y),s(X),Y)
 quot(num0,s(Y)) -> num0
 quot(s(X),s(Y)) -> s(quot(minus(X,Y),s(Y)))

Problem 1: 

SCC Processor:
-> Pairs:
 IFMINUS(ffalse,s(X),Y) -> MINUS(X,Y)
 LE(s(X),s(Y)) -> LE(X,Y)
 MINUS(s(X),Y) -> IFMINUS(le(s(X),Y),s(X),Y)
 MINUS(s(X),Y) -> LE(s(X),Y)
 QUOT(s(X),s(Y)) -> MINUS(X,Y)
 QUOT(s(X),s(Y)) -> QUOT(minus(X,Y),s(Y))
-> Rules:
 ifMinus(ffalse,s(X),Y) -> s(minus(X,Y))
 ifMinus(ftrue,s(X),Y) -> num0
 le(num0,Y) -> ftrue
 le(s(X),num0) -> ffalse
 le(s(X),s(Y)) -> le(X,Y)
 minus(num0,Y) -> num0
 minus(s(X),Y) -> ifMinus(le(s(X),Y),s(X),Y)
 quot(num0,s(Y)) -> num0
 quot(s(X),s(Y)) -> s(quot(minus(X,Y),s(Y)))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 LE(s(X),s(Y)) -> LE(X,Y)
->->-> Rules:
 ifMinus(ffalse,s(X),Y) -> s(minus(X,Y))
 ifMinus(ftrue,s(X),Y) -> num0
 le(num0,Y) -> ftrue
 le(s(X),num0) -> ffalse
 le(s(X),s(Y)) -> le(X,Y)
 minus(num0,Y) -> num0
 minus(s(X),Y) -> ifMinus(le(s(X),Y),s(X),Y)
 quot(num0,s(Y)) -> num0
 quot(s(X),s(Y)) -> s(quot(minus(X,Y),s(Y)))
->->Cycle:
->->-> Pairs:
 IFMINUS(ffalse,s(X),Y) -> MINUS(X,Y)
 MINUS(s(X),Y) -> IFMINUS(le(s(X),Y),s(X),Y)
->->-> Rules:
 ifMinus(ffalse,s(X),Y) -> s(minus(X,Y))
 ifMinus(ftrue,s(X),Y) -> num0
 le(num0,Y) -> ftrue
 le(s(X),num0) -> ffalse
 le(s(X),s(Y)) -> le(X,Y)
 minus(num0,Y) -> num0
 minus(s(X),Y) -> ifMinus(le(s(X),Y),s(X),Y)
 quot(num0,s(Y)) -> num0
 quot(s(X),s(Y)) -> s(quot(minus(X,Y),s(Y)))
->->Cycle:
->->-> Pairs:
 QUOT(s(X),s(Y)) -> QUOT(minus(X,Y),s(Y))
->->-> Rules:
 ifMinus(ffalse,s(X),Y) -> s(minus(X,Y))
 ifMinus(ftrue,s(X),Y) -> num0
 le(num0,Y) -> ftrue
 le(s(X),num0) -> ffalse
 le(s(X),s(Y)) -> le(X,Y)
 minus(num0,Y) -> num0
 minus(s(X),Y) -> ifMinus(le(s(X),Y),s(X),Y)
 quot(num0,s(Y)) -> num0
 quot(s(X),s(Y)) -> s(quot(minus(X,Y),s(Y)))


The problem is decomposed in 3 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 LE(s(X),s(Y)) -> LE(X,Y)
-> Rules:
 ifMinus(ffalse,s(X),Y) -> s(minus(X,Y))
 ifMinus(ftrue,s(X),Y) -> num0
 le(num0,Y) -> ftrue
 le(s(X),num0) -> ffalse
 le(s(X),s(Y)) -> le(X,Y)
 minus(num0,Y) -> num0
 minus(s(X),Y) -> ifMinus(le(s(X),Y),s(X),Y)
 quot(num0,s(Y)) -> num0
 quot(s(X),s(Y)) -> s(quot(minus(X,Y),s(Y)))
->Projection:
 pi(LE) = 1

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 ifMinus(ffalse,s(X),Y) -> s(minus(X,Y))
 ifMinus(ftrue,s(X),Y) -> num0
 le(num0,Y) -> ftrue
 le(s(X),num0) -> ffalse
 le(s(X),s(Y)) -> le(X,Y)
 minus(num0,Y) -> num0
 minus(s(X),Y) -> ifMinus(le(s(X),Y),s(X),Y)
 quot(num0,s(Y)) -> num0
 quot(s(X),s(Y)) -> s(quot(minus(X,Y),s(Y)))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Subterm Processor:
-> Pairs:
 IFMINUS(ffalse,s(X),Y) -> MINUS(X,Y)
 MINUS(s(X),Y) -> IFMINUS(le(s(X),Y),s(X),Y)
-> Rules:
 ifMinus(ffalse,s(X),Y) -> s(minus(X,Y))
 ifMinus(ftrue,s(X),Y) -> num0
 le(num0,Y) -> ftrue
 le(s(X),num0) -> ffalse
 le(s(X),s(Y)) -> le(X,Y)
 minus(num0,Y) -> num0
 minus(s(X),Y) -> ifMinus(le(s(X),Y),s(X),Y)
 quot(num0,s(Y)) -> num0
 quot(s(X),s(Y)) -> s(quot(minus(X,Y),s(Y)))
->Projection:
 pi(IFMINUS) = 2
 pi(MINUS) = 1

Problem 1.2: 

SCC Processor:
-> Pairs:
 MINUS(s(X),Y) -> IFMINUS(le(s(X),Y),s(X),Y)
-> Rules:
 ifMinus(ffalse,s(X),Y) -> s(minus(X,Y))
 ifMinus(ftrue,s(X),Y) -> num0
 le(num0,Y) -> ftrue
 le(s(X),num0) -> ffalse
 le(s(X),s(Y)) -> le(X,Y)
 minus(num0,Y) -> num0
 minus(s(X),Y) -> ifMinus(le(s(X),Y),s(X),Y)
 quot(num0,s(Y)) -> num0
 quot(s(X),s(Y)) -> s(quot(minus(X,Y),s(Y)))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Reduction Pairs Processor:
-> Pairs:
 QUOT(s(X),s(Y)) -> QUOT(minus(X,Y),s(Y))
-> Rules:
 ifMinus(ffalse,s(X),Y) -> s(minus(X,Y))
 ifMinus(ftrue,s(X),Y) -> num0
 le(num0,Y) -> ftrue
 le(s(X),num0) -> ffalse
 le(s(X),s(Y)) -> le(X,Y)
 minus(num0,Y) -> num0
 minus(s(X),Y) -> ifMinus(le(s(X),Y),s(X),Y)
 quot(num0,s(Y)) -> num0
 quot(s(X),s(Y)) -> s(quot(minus(X,Y),s(Y)))
-> Usable rules:
 ifMinus(ffalse,s(X),Y) -> s(minus(X,Y))
 ifMinus(ftrue,s(X),Y) -> num0
 le(num0,Y) -> ftrue
 le(s(X),num0) -> ffalse
 le(s(X),s(Y)) -> le(X,Y)
 minus(num0,Y) -> num0
 minus(s(X),Y) -> ifMinus(le(s(X),Y),s(X),Y)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[ifMinus](X1,X2,X3) = 2.X2
[le](X1,X2) = 2.X1 + X2 + 2
[minus](X1,X2) = 2.X1 + 1
[quot](X1,X2) = 0
[num0] = 2
[fSNonEmpty] = 0
[ffalse] = 2
[s](X) = 2.X + 2
[ftrue] = 1
[IFMINUS](X1,X2,X3) = 0
[LE](X1,X2) = 0
[MINUS](X1,X2) = 0
[QUOT](X1,X2) = 2.X1

Problem 1.3: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 ifMinus(ffalse,s(X),Y) -> s(minus(X,Y))
 ifMinus(ftrue,s(X),Y) -> num0
 le(num0,Y) -> ftrue
 le(s(X),num0) -> ffalse
 le(s(X),s(Y)) -> le(X,Y)
 minus(num0,Y) -> num0
 minus(s(X),Y) -> ifMinus(le(s(X),Y),s(X),Y)
 quot(num0,s(Y)) -> num0
 quot(s(X),s(Y)) -> s(quot(minus(X,Y),s(Y)))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
