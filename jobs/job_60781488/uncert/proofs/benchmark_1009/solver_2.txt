YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/1V32X.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRSToCSRProof [EQUIVALENT, 0 ms]
(2) CSR
(3) CSRRRRProof [EQUIVALENT, 21 ms]
(4) CSR
(5) CSRRRRProof [EQUIVALENT, 0 ms]
(6) CSR
(7) CSRRRRProof [EQUIVALENT, 0 ms]
(8) CSR
(9) RisEmptyProof [EQUIVALENT, 0 ms]
(10) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   active(app(nil, YS)) -> mark(YS)
   active(app(cons(X, XS), YS)) -> mark(cons(X, app(XS, YS)))
   active(from(X)) -> mark(cons(X, from(s(X))))
   active(zWadr(nil, YS)) -> mark(nil)
   active(zWadr(XS, nil)) -> mark(nil)
   active(zWadr(cons(X, XS), cons(Y, YS))) -> mark(cons(app(Y, cons(X, nil)), zWadr(XS, YS)))
   active(prefix(L)) -> mark(cons(nil, zWadr(L, prefix(L))))
   active(app(X1, X2)) -> app(active(X1), X2)
   active(app(X1, X2)) -> app(X1, active(X2))
   active(cons(X1, X2)) -> cons(active(X1), X2)
   active(from(X)) -> from(active(X))
   active(s(X)) -> s(active(X))
   active(zWadr(X1, X2)) -> zWadr(active(X1), X2)
   active(zWadr(X1, X2)) -> zWadr(X1, active(X2))
   active(prefix(X)) -> prefix(active(X))
   app(mark(X1), X2) -> mark(app(X1, X2))
   app(X1, mark(X2)) -> mark(app(X1, X2))
   cons(mark(X1), X2) -> mark(cons(X1, X2))
   from(mark(X)) -> mark(from(X))
   s(mark(X)) -> mark(s(X))
   zWadr(mark(X1), X2) -> mark(zWadr(X1, X2))
   zWadr(X1, mark(X2)) -> mark(zWadr(X1, X2))
   prefix(mark(X)) -> mark(prefix(X))
   proper(app(X1, X2)) -> app(proper(X1), proper(X2))
   proper(nil) -> ok(nil)
   proper(cons(X1, X2)) -> cons(proper(X1), proper(X2))
   proper(from(X)) -> from(proper(X))
   proper(s(X)) -> s(proper(X))
   proper(zWadr(X1, X2)) -> zWadr(proper(X1), proper(X2))
   proper(prefix(X)) -> prefix(proper(X))
   app(ok(X1), ok(X2)) -> ok(app(X1, X2))
   cons(ok(X1), ok(X2)) -> ok(cons(X1, X2))
   from(ok(X)) -> ok(from(X))
   s(ok(X)) -> ok(s(X))
   zWadr(ok(X1), ok(X2)) -> ok(zWadr(X1, X2))
   prefix(ok(X)) -> ok(prefix(X))
   top(mark(X)) -> top(proper(X))
   top(ok(X)) -> top(active(X))

Q is empty.

----------------------------------------

(1) QTRSToCSRProof (EQUIVALENT)
The following Q TRS is given: Q restricted rewrite system:
The TRS R consists of the following rules:

   active(app(nil, YS)) -> mark(YS)
   active(app(cons(X, XS), YS)) -> mark(cons(X, app(XS, YS)))
   active(from(X)) -> mark(cons(X, from(s(X))))
   active(zWadr(nil, YS)) -> mark(nil)
   active(zWadr(XS, nil)) -> mark(nil)
   active(zWadr(cons(X, XS), cons(Y, YS))) -> mark(cons(app(Y, cons(X, nil)), zWadr(XS, YS)))
   active(prefix(L)) -> mark(cons(nil, zWadr(L, prefix(L))))
   active(app(X1, X2)) -> app(active(X1), X2)
   active(app(X1, X2)) -> app(X1, active(X2))
   active(cons(X1, X2)) -> cons(active(X1), X2)
   active(from(X)) -> from(active(X))
   active(s(X)) -> s(active(X))
   active(zWadr(X1, X2)) -> zWadr(active(X1), X2)
   active(zWadr(X1, X2)) -> zWadr(X1, active(X2))
   active(prefix(X)) -> prefix(active(X))
   app(mark(X1), X2) -> mark(app(X1, X2))
   app(X1, mark(X2)) -> mark(app(X1, X2))
   cons(mark(X1), X2) -> mark(cons(X1, X2))
   from(mark(X)) -> mark(from(X))
   s(mark(X)) -> mark(s(X))
   zWadr(mark(X1), X2) -> mark(zWadr(X1, X2))
   zWadr(X1, mark(X2)) -> mark(zWadr(X1, X2))
   prefix(mark(X)) -> mark(prefix(X))
   proper(app(X1, X2)) -> app(proper(X1), proper(X2))
   proper(nil) -> ok(nil)
   proper(cons(X1, X2)) -> cons(proper(X1), proper(X2))
   proper(from(X)) -> from(proper(X))
   proper(s(X)) -> s(proper(X))
   proper(zWadr(X1, X2)) -> zWadr(proper(X1), proper(X2))
   proper(prefix(X)) -> prefix(proper(X))
   app(ok(X1), ok(X2)) -> ok(app(X1, X2))
   cons(ok(X1), ok(X2)) -> ok(cons(X1, X2))
   from(ok(X)) -> ok(from(X))
   s(ok(X)) -> ok(s(X))
   zWadr(ok(X1), ok(X2)) -> ok(zWadr(X1, X2))
   prefix(ok(X)) -> ok(prefix(X))
   top(mark(X)) -> top(proper(X))
   top(ok(X)) -> top(active(X))

Q is empty.
Special symbols used for the transformation (see [GM04]):
top: top_1, active: active_1, mark: mark_1, ok: ok_1, proper: proper_1
The replacement map contains the following entries:

app: {1, 2}
nil: empty set
cons: {1}
from: {1}
s: {1}
zWadr: {1, 2}
prefix: {1}
The QTRS contained all rules created by the complete Giesl-Middeldorp transformation. Therefore, the inverse transformation is complete (and sound).
----------------------------------------

(2)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   app(nil, YS) -> YS
   app(cons(X, XS), YS) -> cons(X, app(XS, YS))
   from(X) -> cons(X, from(s(X)))
   zWadr(nil, YS) -> nil
   zWadr(XS, nil) -> nil
   zWadr(cons(X, XS), cons(Y, YS)) -> cons(app(Y, cons(X, nil)), zWadr(XS, YS))
   prefix(L) -> cons(nil, zWadr(L, prefix(L)))

The replacement map contains the following entries:

app: {1, 2}
nil: empty set
cons: {1}
from: {1}
s: {1}
zWadr: {1, 2}
prefix: {1}

----------------------------------------

(3) CSRRRRProof (EQUIVALENT)
The following CSR is given: Context-sensitive rewrite system:
The TRS R consists of the following rules:

   app(nil, YS) -> YS
   app(cons(X, XS), YS) -> cons(X, app(XS, YS))
   from(X) -> cons(X, from(s(X)))
   zWadr(nil, YS) -> nil
   zWadr(XS, nil) -> nil
   zWadr(cons(X, XS), cons(Y, YS)) -> cons(app(Y, cons(X, nil)), zWadr(XS, YS))
   prefix(L) -> cons(nil, zWadr(L, prefix(L)))

The replacement map contains the following entries:

app: {1, 2}
nil: empty set
cons: {1}
from: {1}
s: {1}
zWadr: {1, 2}
prefix: {1}
Used ordering:
Polynomial interpretation [POLO]:

   POL(app(x_1, x_2)) = x_1 + x_2
   POL(cons(x_1, x_2)) = 1 + x_1
   POL(from(x_1)) = 1 + x_1
   POL(nil) = 0
   POL(prefix(x_1)) = 1 + x_1
   POL(s(x_1)) = x_1
   POL(zWadr(x_1, x_2)) = 1 + x_1 + x_2
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   zWadr(nil, YS) -> nil
   zWadr(XS, nil) -> nil
   zWadr(cons(X, XS), cons(Y, YS)) -> cons(app(Y, cons(X, nil)), zWadr(XS, YS))




----------------------------------------

(4)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   app(nil, YS) -> YS
   app(cons(X, XS), YS) -> cons(X, app(XS, YS))
   from(X) -> cons(X, from(s(X)))
   prefix(L) -> cons(nil, zWadr(L, prefix(L)))

The replacement map contains the following entries:

app: {1, 2}
nil: empty set
cons: {1}
from: {1}
s: {1}
zWadr: {1, 2}
prefix: {1}

----------------------------------------

(5) CSRRRRProof (EQUIVALENT)
The following CSR is given: Context-sensitive rewrite system:
The TRS R consists of the following rules:

   app(nil, YS) -> YS
   app(cons(X, XS), YS) -> cons(X, app(XS, YS))
   from(X) -> cons(X, from(s(X)))
   prefix(L) -> cons(nil, zWadr(L, prefix(L)))

The replacement map contains the following entries:

app: {1, 2}
nil: empty set
cons: {1}
from: {1}
s: {1}
zWadr: {1, 2}
prefix: {1}
Used ordering:
Polynomial interpretation [POLO]:

   POL(app(x_1, x_2)) = 2 + 2*x_1 + 2*x_2
   POL(cons(x_1, x_2)) = 2*x_1
   POL(from(x_1)) = 2*x_1
   POL(nil) = 1
   POL(prefix(x_1)) = 2 + 2*x_1
   POL(s(x_1)) = 1 + x_1
   POL(zWadr(x_1, x_2)) = 1 + x_1 + x_2
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   app(nil, YS) -> YS
   app(cons(X, XS), YS) -> cons(X, app(XS, YS))




----------------------------------------

(6)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   from(X) -> cons(X, from(s(X)))
   prefix(L) -> cons(nil, zWadr(L, prefix(L)))

The replacement map contains the following entries:

nil: empty set
cons: {1}
from: {1}
s: {1}
zWadr: {1, 2}
prefix: {1}

----------------------------------------

(7) CSRRRRProof (EQUIVALENT)
The following CSR is given: Context-sensitive rewrite system:
The TRS R consists of the following rules:

   from(X) -> cons(X, from(s(X)))
   prefix(L) -> cons(nil, zWadr(L, prefix(L)))

The replacement map contains the following entries:

nil: empty set
cons: {1}
from: {1}
s: {1}
zWadr: {1, 2}
prefix: {1}
Used ordering:
Polynomial interpretation [POLO]:

   POL(cons(x_1, x_2)) = x_1
   POL(from(x_1)) = 1 + 2*x_1
   POL(nil) = 0
   POL(prefix(x_1)) = 1 + x_1
   POL(s(x_1)) = x_1
   POL(zWadr(x_1, x_2)) = 2 + x_1 + x_2
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   from(X) -> cons(X, from(s(X)))
   prefix(L) -> cons(nil, zWadr(L, prefix(L)))




----------------------------------------

(8)
Obligation:
Context-sensitive rewrite system:
R is empty.

----------------------------------------

(9) RisEmptyProof (EQUIVALENT)
The CSR R is empty. Hence, termination is trivially proven.
----------------------------------------

(10)
YES
