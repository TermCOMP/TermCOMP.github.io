NO

Problem 1: 

(VAR vu95NonEmpty L X X1 X2 XS Y YS)
(RULES
activate(nu95u95app(X1,X2)) -> app(X1,X2)
activate(nu95u95from(X)) -> from(X)
activate(nu95u95nil) -> nil
activate(nu95u95zWadr(X1,X2)) -> zWadr(X1,X2)
activate(X) -> X
app(nil,YS) -> YS
app(cons(X,XS),YS) -> cons(X,nu95u95app(activate(XS),YS))
app(X1,X2) -> nu95u95app(X1,X2)
from(X) -> cons(X,nu95u95from(s(X)))
from(X) -> nu95u95from(X)
nil -> nu95u95nil
prefix(L) -> cons(nil,nu95u95zWadr(L,prefix(L)))
zWadr(nil,YS) -> nil
zWadr(cons(X,XS),cons(Y,YS)) -> cons(app(Y,cons(X,nu95u95nil)),nu95u95zWadr(activate(XS),activate(YS)))
zWadr(X1,X2) -> nu95u95zWadr(X1,X2)
zWadr(XS,nil) -> nil
)


Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 ACTIVATE(nu95u95app(X1,X2)) -> APP(X1,X2)
 ACTIVATE(nu95u95from(X)) -> FROM(X)
 ACTIVATE(nu95u95nil) -> NIL
 ACTIVATE(nu95u95zWadr(X1,X2)) -> ZWADR(X1,X2)
 APP(cons(X,XS),YS) -> ACTIVATE(XS)
 PREFIX(L) -> NIL
 PREFIX(L) -> PREFIX(L)
 ZWADR(cons(X,XS),cons(Y,YS)) -> ACTIVATE(XS)
 ZWADR(cons(X,XS),cons(Y,YS)) -> ACTIVATE(YS)
 ZWADR(cons(X,XS),cons(Y,YS)) -> APP(Y,cons(X,nu95u95nil))
-> Rules:
 activate(nu95u95app(X1,X2)) -> app(X1,X2)
 activate(nu95u95from(X)) -> from(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95zWadr(X1,X2)) -> zWadr(X1,X2)
 activate(X) -> X
 app(nil,YS) -> YS
 app(cons(X,XS),YS) -> cons(X,nu95u95app(activate(XS),YS))
 app(X1,X2) -> nu95u95app(X1,X2)
 from(X) -> cons(X,nu95u95from(s(X)))
 from(X) -> nu95u95from(X)
 nil -> nu95u95nil
 prefix(L) -> cons(nil,nu95u95zWadr(L,prefix(L)))
 zWadr(nil,YS) -> nil
 zWadr(cons(X,XS),cons(Y,YS)) -> cons(app(Y,cons(X,nu95u95nil)),nu95u95zWadr(activate(XS),activate(YS)))
 zWadr(X1,X2) -> nu95u95zWadr(X1,X2)
 zWadr(XS,nil) -> nil

Problem 1: 

Infiniteness Processor:
-> Pairs:
 ACTIVATE(nu95u95app(X1,X2)) -> APP(X1,X2)
 ACTIVATE(nu95u95from(X)) -> FROM(X)
 ACTIVATE(nu95u95nil) -> NIL
 ACTIVATE(nu95u95zWadr(X1,X2)) -> ZWADR(X1,X2)
 APP(cons(X,XS),YS) -> ACTIVATE(XS)
 PREFIX(L) -> NIL
 PREFIX(L) -> PREFIX(L)
 ZWADR(cons(X,XS),cons(Y,YS)) -> ACTIVATE(XS)
 ZWADR(cons(X,XS),cons(Y,YS)) -> ACTIVATE(YS)
 ZWADR(cons(X,XS),cons(Y,YS)) -> APP(Y,cons(X,nu95u95nil))
-> Rules:
 activate(nu95u95app(X1,X2)) -> app(X1,X2)
 activate(nu95u95from(X)) -> from(X)
 activate(nu95u95nil) -> nil
 activate(nu95u95zWadr(X1,X2)) -> zWadr(X1,X2)
 activate(X) -> X
 app(nil,YS) -> YS
 app(cons(X,XS),YS) -> cons(X,nu95u95app(activate(XS),YS))
 app(X1,X2) -> nu95u95app(X1,X2)
 from(X) -> cons(X,nu95u95from(s(X)))
 from(X) -> nu95u95from(X)
 nil -> nu95u95nil
 prefix(L) -> cons(nil,nu95u95zWadr(L,prefix(L)))
 zWadr(nil,YS) -> nil
 zWadr(cons(X,XS),cons(Y,YS)) -> cons(app(Y,cons(X,nu95u95nil)),nu95u95zWadr(activate(XS),activate(YS)))
 zWadr(X1,X2) -> nu95u95zWadr(X1,X2)
 zWadr(XS,nil) -> nil
-> Pairs in cycle:
 PREFIX(L) -> PREFIX(L)

The problem is infinite.
