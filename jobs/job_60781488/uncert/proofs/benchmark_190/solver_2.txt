YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/QxZoT.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 0 ms]
(2) QDP
(3) DependencyGraphProof [EQUIVALENT, 0 ms]
(4) AND
    (5) QDP
        (6) UsableRulesProof [EQUIVALENT, 0 ms]
        (7) QDP
        (8) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (9) YES
    (10) QDP
        (11) UsableRulesProof [EQUIVALENT, 0 ms]
        (12) QDP
        (13) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (14) YES
    (15) QDP
        (16) UsableRulesProof [EQUIVALENT, 0 ms]
        (17) QDP
        (18) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (19) YES
    (20) QDP
        (21) UsableRulesProof [EQUIVALENT, 0 ms]
        (22) QDP
        (23) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (24) YES
    (25) QDP
        (26) QDPOrderProof [EQUIVALENT, 0 ms]
        (27) QDP
        (28) PisEmptyProof [EQUIVALENT, 0 ms]
        (29) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   min(x, 0) -> 0
   min(0, y) -> 0
   min(s(x), s(y)) -> s(min(x, y))
   max(x, 0) -> x
   max(0, y) -> y
   max(s(x), s(y)) -> s(max(x, y))
   minus(x, 0) -> x
   minus(s(x), s(y)) -> s(minus(x, any(y)))
   gcd(s(x), s(y)) -> gcd(minus(max(x, y), min(x, y)), s(min(x, y)))
   any(s(x)) -> s(s(any(x)))
   any(x) -> x

Q is empty.

----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MIN(s(x), s(y)) -> MIN(x, y)
   MAX(s(x), s(y)) -> MAX(x, y)
   MINUS(s(x), s(y)) -> MINUS(x, any(y))
   MINUS(s(x), s(y)) -> ANY(y)
   GCD(s(x), s(y)) -> GCD(minus(max(x, y), min(x, y)), s(min(x, y)))
   GCD(s(x), s(y)) -> MINUS(max(x, y), min(x, y))
   GCD(s(x), s(y)) -> MAX(x, y)
   GCD(s(x), s(y)) -> MIN(x, y)
   ANY(s(x)) -> ANY(x)

The TRS R consists of the following rules:

   min(x, 0) -> 0
   min(0, y) -> 0
   min(s(x), s(y)) -> s(min(x, y))
   max(x, 0) -> x
   max(0, y) -> y
   max(s(x), s(y)) -> s(max(x, y))
   minus(x, 0) -> x
   minus(s(x), s(y)) -> s(minus(x, any(y)))
   gcd(s(x), s(y)) -> gcd(minus(max(x, y), min(x, y)), s(min(x, y)))
   any(s(x)) -> s(s(any(x)))
   any(x) -> x

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 5 SCCs with 4 less nodes.
----------------------------------------

(4)
Complex Obligation (AND)

----------------------------------------

(5)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ANY(s(x)) -> ANY(x)

The TRS R consists of the following rules:

   min(x, 0) -> 0
   min(0, y) -> 0
   min(s(x), s(y)) -> s(min(x, y))
   max(x, 0) -> x
   max(0, y) -> y
   max(s(x), s(y)) -> s(max(x, y))
   minus(x, 0) -> x
   minus(s(x), s(y)) -> s(minus(x, any(y)))
   gcd(s(x), s(y)) -> gcd(minus(max(x, y), min(x, y)), s(min(x, y)))
   any(s(x)) -> s(s(any(x)))
   any(x) -> x

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(6) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(7)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ANY(s(x)) -> ANY(x)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(8) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*ANY(s(x)) -> ANY(x)
The graph contains the following edges 1 > 1


----------------------------------------

(9)
YES

----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MINUS(s(x), s(y)) -> MINUS(x, any(y))

The TRS R consists of the following rules:

   min(x, 0) -> 0
   min(0, y) -> 0
   min(s(x), s(y)) -> s(min(x, y))
   max(x, 0) -> x
   max(0, y) -> y
   max(s(x), s(y)) -> s(max(x, y))
   minus(x, 0) -> x
   minus(s(x), s(y)) -> s(minus(x, any(y)))
   gcd(s(x), s(y)) -> gcd(minus(max(x, y), min(x, y)), s(min(x, y)))
   any(s(x)) -> s(s(any(x)))
   any(x) -> x

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MINUS(s(x), s(y)) -> MINUS(x, any(y))

The TRS R consists of the following rules:

   any(s(x)) -> s(s(any(x)))
   any(x) -> x

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*MINUS(s(x), s(y)) -> MINUS(x, any(y))
The graph contains the following edges 1 > 1


----------------------------------------

(14)
YES

----------------------------------------

(15)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MAX(s(x), s(y)) -> MAX(x, y)

The TRS R consists of the following rules:

   min(x, 0) -> 0
   min(0, y) -> 0
   min(s(x), s(y)) -> s(min(x, y))
   max(x, 0) -> x
   max(0, y) -> y
   max(s(x), s(y)) -> s(max(x, y))
   minus(x, 0) -> x
   minus(s(x), s(y)) -> s(minus(x, any(y)))
   gcd(s(x), s(y)) -> gcd(minus(max(x, y), min(x, y)), s(min(x, y)))
   any(s(x)) -> s(s(any(x)))
   any(x) -> x

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(16) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(17)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MAX(s(x), s(y)) -> MAX(x, y)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(18) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*MAX(s(x), s(y)) -> MAX(x, y)
The graph contains the following edges 1 > 1, 2 > 2


----------------------------------------

(19)
YES

----------------------------------------

(20)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MIN(s(x), s(y)) -> MIN(x, y)

The TRS R consists of the following rules:

   min(x, 0) -> 0
   min(0, y) -> 0
   min(s(x), s(y)) -> s(min(x, y))
   max(x, 0) -> x
   max(0, y) -> y
   max(s(x), s(y)) -> s(max(x, y))
   minus(x, 0) -> x
   minus(s(x), s(y)) -> s(minus(x, any(y)))
   gcd(s(x), s(y)) -> gcd(minus(max(x, y), min(x, y)), s(min(x, y)))
   any(s(x)) -> s(s(any(x)))
   any(x) -> x

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(21) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(22)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MIN(s(x), s(y)) -> MIN(x, y)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(23) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*MIN(s(x), s(y)) -> MIN(x, y)
The graph contains the following edges 1 > 1, 2 > 2


----------------------------------------

(24)
YES

----------------------------------------

(25)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   GCD(s(x), s(y)) -> GCD(minus(max(x, y), min(x, y)), s(min(x, y)))

The TRS R consists of the following rules:

   min(x, 0) -> 0
   min(0, y) -> 0
   min(s(x), s(y)) -> s(min(x, y))
   max(x, 0) -> x
   max(0, y) -> y
   max(s(x), s(y)) -> s(max(x, y))
   minus(x, 0) -> x
   minus(s(x), s(y)) -> s(minus(x, any(y)))
   gcd(s(x), s(y)) -> gcd(minus(max(x, y), min(x, y)), s(min(x, y)))
   any(s(x)) -> s(s(any(x)))
   any(x) -> x

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(26) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   GCD(s(x), s(y)) -> GCD(minus(max(x, y), min(x, y)), s(min(x, y)))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial Order [NEGPOLO,POLO] with Interpretation:

POL( GCD_2(x_1, x_2) ) = max{0, 2x_1 + x_2 - 2}
POL( minus_2(x_1, x_2) ) = x_1
POL( max_2(x_1, x_2) ) = x_1 + x_2
POL( 0 ) = 0
POL( s_1(x_1) ) = 2x_1 + 1
POL( min_2(x_1, x_2) ) = x_1
POL( any_1(x_1) ) = 0

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   max(x, 0) -> x
   max(0, y) -> y
   max(s(x), s(y)) -> s(max(x, y))
   min(x, 0) -> 0
   min(0, y) -> 0
   min(s(x), s(y)) -> s(min(x, y))
   minus(x, 0) -> x
   minus(s(x), s(y)) -> s(minus(x, any(y)))


----------------------------------------

(27)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   min(x, 0) -> 0
   min(0, y) -> 0
   min(s(x), s(y)) -> s(min(x, y))
   max(x, 0) -> x
   max(0, y) -> y
   max(s(x), s(y)) -> s(max(x, y))
   minus(x, 0) -> x
   minus(s(x), s(y)) -> s(minus(x, any(y)))
   gcd(s(x), s(y)) -> gcd(minus(max(x, y), min(x, y)), s(min(x, y)))
   any(s(x)) -> s(s(any(x)))
   any(x) -> x

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(28) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(29)
YES
