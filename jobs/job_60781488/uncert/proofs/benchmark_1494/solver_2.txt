YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/e49Bu.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) AAECC Innermost [EQUIVALENT, 0 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 0 ms]
(4) QDP
(5) UsableRulesProof [EQUIVALENT, 0 ms]
(6) QDP
(7) QReductionProof [EQUIVALENT, 0 ms]
(8) QDP
(9) QDPToSRSProof [SOUND, 0 ms]
(10) QTRS
(11) DependencyPairsProof [EQUIVALENT, 0 ms]
(12) QDP
(13) MNOCProof [EQUIVALENT, 0 ms]
(14) QDP
(15) RFCMatchBoundsDPProof [EQUIVALENT, 0 ms]
(16) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(x, a(a(b(b(y))))) -> f(a(a(a(b(b(b(x)))))), y)
   f(a(x), y) -> f(x, a(y))
   f(b(x), y) -> f(x, b(y))

Q is empty.

----------------------------------------

(1) AAECC Innermost (EQUIVALENT)
We have applied [NOC,AAECCNOC] to switch to innermost. The TRS R 1 is none

The TRS R 2 is 
   f(x, a(a(b(b(y))))) -> f(a(a(a(b(b(b(x)))))), y)
   f(a(x), y) -> f(x, a(y))
   f(b(x), y) -> f(x, b(y))

The signature Sigma is {f_2}
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(x, a(a(b(b(y))))) -> f(a(a(a(b(b(b(x)))))), y)
   f(a(x), y) -> f(x, a(y))
   f(b(x), y) -> f(x, b(y))

The set Q consists of the following terms:

   f(x0, a(a(b(b(x1)))))
   f(a(x0), x1)
   f(b(x0), x1)


----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(x, a(a(b(b(y))))) -> F(a(a(a(b(b(b(x)))))), y)
   F(a(x), y) -> F(x, a(y))
   F(b(x), y) -> F(x, b(y))

The TRS R consists of the following rules:

   f(x, a(a(b(b(y))))) -> f(a(a(a(b(b(b(x)))))), y)
   f(a(x), y) -> f(x, a(y))
   f(b(x), y) -> f(x, b(y))

The set Q consists of the following terms:

   f(x0, a(a(b(b(x1)))))
   f(a(x0), x1)
   f(b(x0), x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(x, a(a(b(b(y))))) -> F(a(a(a(b(b(b(x)))))), y)
   F(a(x), y) -> F(x, a(y))
   F(b(x), y) -> F(x, b(y))

R is empty.
The set Q consists of the following terms:

   f(x0, a(a(b(b(x1)))))
   f(a(x0), x1)
   f(b(x0), x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   f(x0, a(a(b(b(x1)))))
   f(a(x0), x1)
   f(b(x0), x1)


----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(x, a(a(b(b(y))))) -> F(a(a(a(b(b(b(x)))))), y)
   F(a(x), y) -> F(x, a(y))
   F(b(x), y) -> F(x, b(y))

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) QDPToSRSProof (SOUND)
The finiteness of this DP problem is implied by strong termination of a SRS due to [UNKNOWN].

----------------------------------------

(10)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a(a(b(b(x)))) -> b(b(b(a(a(a(x))))))

Q is empty.

----------------------------------------

(11) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(a(b(b(x)))) -> A(a(a(x)))
   A(a(b(b(x)))) -> A(a(x))
   A(a(b(b(x)))) -> A(x)

The TRS R consists of the following rules:

   a(a(b(b(x)))) -> b(b(b(a(a(a(x))))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) MNOCProof (EQUIVALENT)
We use the modular non-overlap check [LPAR04] to enlarge Q to all left-hand sides of R.
----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(a(b(b(x)))) -> A(a(a(x)))
   A(a(b(b(x)))) -> A(a(x))
   A(a(b(b(x)))) -> A(x)

The TRS R consists of the following rules:

   a(a(b(b(x)))) -> b(b(b(a(a(a(x))))))

The set Q consists of the following terms:

   a(a(b(b(x0))))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) RFCMatchBoundsDPProof (EQUIVALENT)
Finiteness of the DP problem can be shown by a matchbound of 4. 
As the DP problem is minimal we only have to initialize the certificate graph by the rules of P:

   A(a(b(b(x)))) -> A(a(a(x)))
   A(a(b(b(x)))) -> A(a(x))
   A(a(b(b(x)))) -> A(x)

To find matches we regarded all rules of R and P:

   a(a(b(b(x)))) -> b(b(b(a(a(a(x))))))
   A(a(b(b(x)))) -> A(a(a(x)))
   A(a(b(b(x)))) -> A(a(x))
   A(a(b(b(x)))) -> A(x)

The certificate found is represented by the following graph.
The certificate consists of the following enumerated nodes:
44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85

Node 44 is start node and node 45 is final node.

Those nodes are connected through the following edges:

* 44 to 46 labelled A_1(0)* 44 to 47 labelled A_1(0)* 44 to 45 labelled A_1(0), A_1(1)* 44 to 48 labelled A_1(1)* 44 to 49 labelled A_1(1)* 44 to 51 labelled A_1(1), A_1(2)* 44 to 55 labelled A_1(2)* 44 to 56 labelled A_1(2)* 44 to 57 labelled A_1(2)* 44 to 67 labelled A_1(3)* 44 to 68 labelled A_1(3)* 44 to 59 labelled A_1(3)* 44 to 63 labelled A_1(3)* 44 to 79 labelled A_1(4)* 44 to 80 labelled A_1(4)* 44 to 75 labelled A_1(4)* 45 to 45 labelled #_1(0)* 46 to 47 labelled a_1(0)* 46 to 50 labelled b_1(1)* 47 to 45 labelled a_1(0)* 47 to 50 labelled b_1(1)* 48 to 49 labelled a_1(1)* 48 to 50 labelled b_1(1)* 48 to 62 labelled b_1(2)* 49 to 45 labelled a_1(1)* 49 to 50 labelled b_1(1)* 49 to 51 labelled a_1(1)* 50 to 51 labelled b_1(1)* 51 to 52 labelled b_1(1)* 52 to 53 labelled a_1(1)* 52 to 57 labelled b_1(2)* 53 to 54 labelled a_1(1)* 53 to 50 labelled b_1(1)* 54 to 45 labelled a_1(1)* 54 to 50 labelled b_1(1)* 55 to 56 labelled a_1(2)* 55 to 62 labelled b_1(2)* 55 to 69 labelled b_1(3)* 56 to 51 labelled a_1(2)* 56 to 57 labelled a_1(2)* 57 to 58 labelled b_1(2)* 58 to 59 labelled b_1(2)* 59 to 60 labelled a_1(2)* 60 to 61 labelled a_1(2)* 60 to 62 labelled b_1(2)* 61 to 51 labelled a_1(2)* 62 to 63 labelled b_1(2)* 63 to 64 labelled b_1(2)* 64 to 65 labelled a_1(2)* 65 to 66 labelled a_1(2)* 65 to 69 labelled b_1(3)* 66 to 57 labelled a_1(2)* 67 to 68 labelled a_1(3)* 68 to 59 labelled a_1(3)* 68 to 63 labelled a_1(3)* 68 to 74 labelled b_1(3)* 69 to 70 labelled b_1(3)* 70 to 71 labelled b_1(3)* 71 to 72 labelled a_1(3)* 71 to 81 labelled b_1(4)* 72 to 73 labelled a_1(3)* 73 to 59 labelled a_1(3)* 73 to 74 labelled b_1(3)* 74 to 75 labelled b_1(3)* 75 to 76 labelled b_1(3)* 76 to 77 labelled a_1(3)* 77 to 78 labelled a_1(3)* 78 to 63 labelled a_1(3)* 79 to 80 labelled a_1(4)* 80 to 75 labelled a_1(4)* 81 to 82 labelled b_1(4)* 82 to 83 labelled b_1(4)* 83 to 84 labelled a_1(4)* 84 to 85 labelled a_1(4)* 85 to 75 labelled a_1(4)


----------------------------------------

(16)
YES
