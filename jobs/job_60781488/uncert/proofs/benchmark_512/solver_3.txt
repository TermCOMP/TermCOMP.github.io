YES

Problem 1: 

(VAR vu95NonEmpty u x y z)
(RULES
f(num0,y,num0,u) -> ftrue
f(num0,y,s(z),u) -> ffalse
f(s(x),num0,z,u) -> f(x,u,minus(z,s(x)),u)
f(s(x),s(y),z,u) -> if(le(x,y),f(s(x),minus(y,x),z,u),f(x,u,z,u))
if(ffalse,x,y) -> y
if(ftrue,x,y) -> x
le(num0,y) -> ftrue
le(s(x),num0) -> ffalse
le(s(x),s(y)) -> le(x,y)
minus(num0,y) -> num0
minus(s(x),num0) -> s(x)
minus(s(x),s(y)) -> minus(x,y)
perfectp(num0) -> ffalse
perfectp(s(x)) -> f(x,s(num0),s(x),s(x))
)


Problem 1: 

Innermost Equivalent Processor:
-> Rules:
 f(num0,y,num0,u) -> ftrue
 f(num0,y,s(z),u) -> ffalse
 f(s(x),num0,z,u) -> f(x,u,minus(z,s(x)),u)
 f(s(x),s(y),z,u) -> if(le(x,y),f(s(x),minus(y,x),z,u),f(x,u,z,u))
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 le(num0,y) -> ftrue
 le(s(x),num0) -> ffalse
 le(s(x),s(y)) -> le(x,y)
 minus(num0,y) -> num0
 minus(s(x),num0) -> s(x)
 minus(s(x),s(y)) -> minus(x,y)
 perfectp(num0) -> ffalse
 perfectp(s(x)) -> f(x,s(num0),s(x),s(x))
-> The term rewriting system is non-overlaping or locally confluent overlay system. Therefore, innermost termination implies termination.
 

Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 F(s(x),num0,z,u) -> F(x,u,minus(z,s(x)),u)
 F(s(x),num0,z,u) -> MINUS(z,s(x))
 F(s(x),s(y),z,u) -> F(s(x),minus(y,x),z,u)
 F(s(x),s(y),z,u) -> F(x,u,z,u)
 F(s(x),s(y),z,u) -> IF(le(x,y),f(s(x),minus(y,x),z,u),f(x,u,z,u))
 F(s(x),s(y),z,u) -> LE(x,y)
 F(s(x),s(y),z,u) -> MINUS(y,x)
 LE(s(x),s(y)) -> LE(x,y)
 MINUS(s(x),s(y)) -> MINUS(x,y)
 PERFECTP(s(x)) -> F(x,s(num0),s(x),s(x))
-> Rules:
 f(num0,y,num0,u) -> ftrue
 f(num0,y,s(z),u) -> ffalse
 f(s(x),num0,z,u) -> f(x,u,minus(z,s(x)),u)
 f(s(x),s(y),z,u) -> if(le(x,y),f(s(x),minus(y,x),z,u),f(x,u,z,u))
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 le(num0,y) -> ftrue
 le(s(x),num0) -> ffalse
 le(s(x),s(y)) -> le(x,y)
 minus(num0,y) -> num0
 minus(s(x),num0) -> s(x)
 minus(s(x),s(y)) -> minus(x,y)
 perfectp(num0) -> ffalse
 perfectp(s(x)) -> f(x,s(num0),s(x),s(x))

Problem 1: 

SCC Processor:
-> Pairs:
 F(s(x),num0,z,u) -> F(x,u,minus(z,s(x)),u)
 F(s(x),num0,z,u) -> MINUS(z,s(x))
 F(s(x),s(y),z,u) -> F(s(x),minus(y,x),z,u)
 F(s(x),s(y),z,u) -> F(x,u,z,u)
 F(s(x),s(y),z,u) -> IF(le(x,y),f(s(x),minus(y,x),z,u),f(x,u,z,u))
 F(s(x),s(y),z,u) -> LE(x,y)
 F(s(x),s(y),z,u) -> MINUS(y,x)
 LE(s(x),s(y)) -> LE(x,y)
 MINUS(s(x),s(y)) -> MINUS(x,y)
 PERFECTP(s(x)) -> F(x,s(num0),s(x),s(x))
-> Rules:
 f(num0,y,num0,u) -> ftrue
 f(num0,y,s(z),u) -> ffalse
 f(s(x),num0,z,u) -> f(x,u,minus(z,s(x)),u)
 f(s(x),s(y),z,u) -> if(le(x,y),f(s(x),minus(y,x),z,u),f(x,u,z,u))
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 le(num0,y) -> ftrue
 le(s(x),num0) -> ffalse
 le(s(x),s(y)) -> le(x,y)
 minus(num0,y) -> num0
 minus(s(x),num0) -> s(x)
 minus(s(x),s(y)) -> minus(x,y)
 perfectp(num0) -> ffalse
 perfectp(s(x)) -> f(x,s(num0),s(x),s(x))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 MINUS(s(x),s(y)) -> MINUS(x,y)
->->-> Rules:
 f(num0,y,num0,u) -> ftrue
 f(num0,y,s(z),u) -> ffalse
 f(s(x),num0,z,u) -> f(x,u,minus(z,s(x)),u)
 f(s(x),s(y),z,u) -> if(le(x,y),f(s(x),minus(y,x),z,u),f(x,u,z,u))
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 le(num0,y) -> ftrue
 le(s(x),num0) -> ffalse
 le(s(x),s(y)) -> le(x,y)
 minus(num0,y) -> num0
 minus(s(x),num0) -> s(x)
 minus(s(x),s(y)) -> minus(x,y)
 perfectp(num0) -> ffalse
 perfectp(s(x)) -> f(x,s(num0),s(x),s(x))
->->Cycle:
->->-> Pairs:
 LE(s(x),s(y)) -> LE(x,y)
->->-> Rules:
 f(num0,y,num0,u) -> ftrue
 f(num0,y,s(z),u) -> ffalse
 f(s(x),num0,z,u) -> f(x,u,minus(z,s(x)),u)
 f(s(x),s(y),z,u) -> if(le(x,y),f(s(x),minus(y,x),z,u),f(x,u,z,u))
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 le(num0,y) -> ftrue
 le(s(x),num0) -> ffalse
 le(s(x),s(y)) -> le(x,y)
 minus(num0,y) -> num0
 minus(s(x),num0) -> s(x)
 minus(s(x),s(y)) -> minus(x,y)
 perfectp(num0) -> ffalse
 perfectp(s(x)) -> f(x,s(num0),s(x),s(x))
->->Cycle:
->->-> Pairs:
 F(s(x),num0,z,u) -> F(x,u,minus(z,s(x)),u)
 F(s(x),s(y),z,u) -> F(s(x),minus(y,x),z,u)
 F(s(x),s(y),z,u) -> F(x,u,z,u)
->->-> Rules:
 f(num0,y,num0,u) -> ftrue
 f(num0,y,s(z),u) -> ffalse
 f(s(x),num0,z,u) -> f(x,u,minus(z,s(x)),u)
 f(s(x),s(y),z,u) -> if(le(x,y),f(s(x),minus(y,x),z,u),f(x,u,z,u))
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 le(num0,y) -> ftrue
 le(s(x),num0) -> ffalse
 le(s(x),s(y)) -> le(x,y)
 minus(num0,y) -> num0
 minus(s(x),num0) -> s(x)
 minus(s(x),s(y)) -> minus(x,y)
 perfectp(num0) -> ffalse
 perfectp(s(x)) -> f(x,s(num0),s(x),s(x))


The problem is decomposed in 3 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 MINUS(s(x),s(y)) -> MINUS(x,y)
-> Rules:
 f(num0,y,num0,u) -> ftrue
 f(num0,y,s(z),u) -> ffalse
 f(s(x),num0,z,u) -> f(x,u,minus(z,s(x)),u)
 f(s(x),s(y),z,u) -> if(le(x,y),f(s(x),minus(y,x),z,u),f(x,u,z,u))
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 le(num0,y) -> ftrue
 le(s(x),num0) -> ffalse
 le(s(x),s(y)) -> le(x,y)
 minus(num0,y) -> num0
 minus(s(x),num0) -> s(x)
 minus(s(x),s(y)) -> minus(x,y)
 perfectp(num0) -> ffalse
 perfectp(s(x)) -> f(x,s(num0),s(x),s(x))
->Projection:
 pi(MINUS) = 1

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 f(num0,y,num0,u) -> ftrue
 f(num0,y,s(z),u) -> ffalse
 f(s(x),num0,z,u) -> f(x,u,minus(z,s(x)),u)
 f(s(x),s(y),z,u) -> if(le(x,y),f(s(x),minus(y,x),z,u),f(x,u,z,u))
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 le(num0,y) -> ftrue
 le(s(x),num0) -> ffalse
 le(s(x),s(y)) -> le(x,y)
 minus(num0,y) -> num0
 minus(s(x),num0) -> s(x)
 minus(s(x),s(y)) -> minus(x,y)
 perfectp(num0) -> ffalse
 perfectp(s(x)) -> f(x,s(num0),s(x),s(x))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Subterm Processor:
-> Pairs:
 LE(s(x),s(y)) -> LE(x,y)
-> Rules:
 f(num0,y,num0,u) -> ftrue
 f(num0,y,s(z),u) -> ffalse
 f(s(x),num0,z,u) -> f(x,u,minus(z,s(x)),u)
 f(s(x),s(y),z,u) -> if(le(x,y),f(s(x),minus(y,x),z,u),f(x,u,z,u))
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 le(num0,y) -> ftrue
 le(s(x),num0) -> ffalse
 le(s(x),s(y)) -> le(x,y)
 minus(num0,y) -> num0
 minus(s(x),num0) -> s(x)
 minus(s(x),s(y)) -> minus(x,y)
 perfectp(num0) -> ffalse
 perfectp(s(x)) -> f(x,s(num0),s(x),s(x))
->Projection:
 pi(LE) = 1

Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 f(num0,y,num0,u) -> ftrue
 f(num0,y,s(z),u) -> ffalse
 f(s(x),num0,z,u) -> f(x,u,minus(z,s(x)),u)
 f(s(x),s(y),z,u) -> if(le(x,y),f(s(x),minus(y,x),z,u),f(x,u,z,u))
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 le(num0,y) -> ftrue
 le(s(x),num0) -> ffalse
 le(s(x),s(y)) -> le(x,y)
 minus(num0,y) -> num0
 minus(s(x),num0) -> s(x)
 minus(s(x),s(y)) -> minus(x,y)
 perfectp(num0) -> ffalse
 perfectp(s(x)) -> f(x,s(num0),s(x),s(x))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Subterm Processor:
-> Pairs:
 F(s(x),num0,z,u) -> F(x,u,minus(z,s(x)),u)
 F(s(x),s(y),z,u) -> F(s(x),minus(y,x),z,u)
 F(s(x),s(y),z,u) -> F(x,u,z,u)
-> Rules:
 f(num0,y,num0,u) -> ftrue
 f(num0,y,s(z),u) -> ffalse
 f(s(x),num0,z,u) -> f(x,u,minus(z,s(x)),u)
 f(s(x),s(y),z,u) -> if(le(x,y),f(s(x),minus(y,x),z,u),f(x,u,z,u))
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 le(num0,y) -> ftrue
 le(s(x),num0) -> ffalse
 le(s(x),s(y)) -> le(x,y)
 minus(num0,y) -> num0
 minus(s(x),num0) -> s(x)
 minus(s(x),s(y)) -> minus(x,y)
 perfectp(num0) -> ffalse
 perfectp(s(x)) -> f(x,s(num0),s(x),s(x))
->Projection:
 pi(F) = 1

Problem 1.3: 

SCC Processor:
-> Pairs:
 F(s(x),s(y),z,u) -> F(s(x),minus(y,x),z,u)
-> Rules:
 f(num0,y,num0,u) -> ftrue
 f(num0,y,s(z),u) -> ffalse
 f(s(x),num0,z,u) -> f(x,u,minus(z,s(x)),u)
 f(s(x),s(y),z,u) -> if(le(x,y),f(s(x),minus(y,x),z,u),f(x,u,z,u))
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 le(num0,y) -> ftrue
 le(s(x),num0) -> ffalse
 le(s(x),s(y)) -> le(x,y)
 minus(num0,y) -> num0
 minus(s(x),num0) -> s(x)
 minus(s(x),s(y)) -> minus(x,y)
 perfectp(num0) -> ffalse
 perfectp(s(x)) -> f(x,s(num0),s(x),s(x))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 F(s(x),s(y),z,u) -> F(s(x),minus(y,x),z,u)
->->-> Rules:
 f(num0,y,num0,u) -> ftrue
 f(num0,y,s(z),u) -> ffalse
 f(s(x),num0,z,u) -> f(x,u,minus(z,s(x)),u)
 f(s(x),s(y),z,u) -> if(le(x,y),f(s(x),minus(y,x),z,u),f(x,u,z,u))
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 le(num0,y) -> ftrue
 le(s(x),num0) -> ffalse
 le(s(x),s(y)) -> le(x,y)
 minus(num0,y) -> num0
 minus(s(x),num0) -> s(x)
 minus(s(x),s(y)) -> minus(x,y)
 perfectp(num0) -> ffalse
 perfectp(s(x)) -> f(x,s(num0),s(x),s(x))

Problem 1.3: 

Reduction Pairs Processor:
-> Pairs:
 F(s(x),s(y),z,u) -> F(s(x),minus(y,x),z,u)
-> Rules:
 f(num0,y,num0,u) -> ftrue
 f(num0,y,s(z),u) -> ffalse
 f(s(x),num0,z,u) -> f(x,u,minus(z,s(x)),u)
 f(s(x),s(y),z,u) -> if(le(x,y),f(s(x),minus(y,x),z,u),f(x,u,z,u))
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 le(num0,y) -> ftrue
 le(s(x),num0) -> ffalse
 le(s(x),s(y)) -> le(x,y)
 minus(num0,y) -> num0
 minus(s(x),num0) -> s(x)
 minus(s(x),s(y)) -> minus(x,y)
 perfectp(num0) -> ffalse
 perfectp(s(x)) -> f(x,s(num0),s(x),s(x))
-> Usable rules:
 minus(num0,y) -> num0
 minus(s(x),num0) -> s(x)
 minus(s(x),s(y)) -> minus(x,y)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[f](X1,X2,X3,X4) = 0
[if](X1,X2,X3) = 0
[le](X1,X2) = 0
[minus](X1,X2) = 2.X1 + 1
[perfectp](X) = 0
[num0] = 2
[fSNonEmpty] = 0
[ffalse] = 0
[s](X) = 2.X + 2
[ftrue] = 0
[F](X1,X2,X3,X4) = 2.X2
[IF](X1,X2,X3) = 0
[LE](X1,X2) = 0
[MINUS](X1,X2) = 0
[PERFECTP](X) = 0

Problem 1.3: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 f(num0,y,num0,u) -> ftrue
 f(num0,y,s(z),u) -> ffalse
 f(s(x),num0,z,u) -> f(x,u,minus(z,s(x)),u)
 f(s(x),s(y),z,u) -> if(le(x,y),f(s(x),minus(y,x),z,u),f(x,u,z,u))
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> x
 le(num0,y) -> ftrue
 le(s(x),num0) -> ffalse
 le(s(x),s(y)) -> le(x,y)
 minus(num0,y) -> num0
 minus(s(x),num0) -> s(x)
 minus(s(x),s(y)) -> minus(x,y)
 perfectp(num0) -> ffalse
 perfectp(s(x)) -> f(x,s(num0),s(x),s(x))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
