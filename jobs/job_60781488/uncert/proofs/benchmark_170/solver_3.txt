YES

Problem 1: 

(VAR vu95NonEmpty x y)
(RULES
ack(num0,y) -> s(y)
ack(s(x),num0) -> ack(x,s(num0))
ack(s(x),s(y)) -> ack(x,plus(y,ack(s(x),y)))
plus(num0,y) -> y
plus(s(num0),y) -> s(y)
plus(s(s(x)),y) -> s(plus(x,s(y)))
plus(x,s(s(y))) -> s(plus(s(x),y))
)


Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 ACK(s(x),num0) -> ACK(x,s(num0))
 ACK(s(x),s(y)) -> ACK(s(x),y)
 ACK(s(x),s(y)) -> ACK(x,plus(y,ack(s(x),y)))
 ACK(s(x),s(y)) -> PLUS(y,ack(s(x),y))
 PLUS(s(s(x)),y) -> PLUS(x,s(y))
 PLUS(x,s(s(y))) -> PLUS(s(x),y)
-> Rules:
 ack(num0,y) -> s(y)
 ack(s(x),num0) -> ack(x,s(num0))
 ack(s(x),s(y)) -> ack(x,plus(y,ack(s(x),y)))
 plus(num0,y) -> y
 plus(s(num0),y) -> s(y)
 plus(s(s(x)),y) -> s(plus(x,s(y)))
 plus(x,s(s(y))) -> s(plus(s(x),y))

Problem 1: 

SCC Processor:
-> Pairs:
 ACK(s(x),num0) -> ACK(x,s(num0))
 ACK(s(x),s(y)) -> ACK(s(x),y)
 ACK(s(x),s(y)) -> ACK(x,plus(y,ack(s(x),y)))
 ACK(s(x),s(y)) -> PLUS(y,ack(s(x),y))
 PLUS(s(s(x)),y) -> PLUS(x,s(y))
 PLUS(x,s(s(y))) -> PLUS(s(x),y)
-> Rules:
 ack(num0,y) -> s(y)
 ack(s(x),num0) -> ack(x,s(num0))
 ack(s(x),s(y)) -> ack(x,plus(y,ack(s(x),y)))
 plus(num0,y) -> y
 plus(s(num0),y) -> s(y)
 plus(s(s(x)),y) -> s(plus(x,s(y)))
 plus(x,s(s(y))) -> s(plus(s(x),y))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 PLUS(s(s(x)),y) -> PLUS(x,s(y))
 PLUS(x,s(s(y))) -> PLUS(s(x),y)
->->-> Rules:
 ack(num0,y) -> s(y)
 ack(s(x),num0) -> ack(x,s(num0))
 ack(s(x),s(y)) -> ack(x,plus(y,ack(s(x),y)))
 plus(num0,y) -> y
 plus(s(num0),y) -> s(y)
 plus(s(s(x)),y) -> s(plus(x,s(y)))
 plus(x,s(s(y))) -> s(plus(s(x),y))
->->Cycle:
->->-> Pairs:
 ACK(s(x),num0) -> ACK(x,s(num0))
 ACK(s(x),s(y)) -> ACK(s(x),y)
 ACK(s(x),s(y)) -> ACK(x,plus(y,ack(s(x),y)))
->->-> Rules:
 ack(num0,y) -> s(y)
 ack(s(x),num0) -> ack(x,s(num0))
 ack(s(x),s(y)) -> ack(x,plus(y,ack(s(x),y)))
 plus(num0,y) -> y
 plus(s(num0),y) -> s(y)
 plus(s(s(x)),y) -> s(plus(x,s(y)))
 plus(x,s(s(y))) -> s(plus(s(x),y))


The problem is decomposed in 2 subproblems.

Problem 1.1: 

Reduction Pair Processor:
-> Pairs:
 PLUS(s(s(x)),y) -> PLUS(x,s(y))
 PLUS(x,s(s(y))) -> PLUS(s(x),y)
-> Rules:
 ack(num0,y) -> s(y)
 ack(s(x),num0) -> ack(x,s(num0))
 ack(s(x),s(y)) -> ack(x,plus(y,ack(s(x),y)))
 plus(num0,y) -> y
 plus(s(num0),y) -> s(y)
 plus(s(s(x)),y) -> s(plus(x,s(y)))
 plus(x,s(s(y))) -> s(plus(s(x),y))
-> Usable rules:
 Empty
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[ack](X1,X2) = 0
[plus](X1,X2) = 0
[num0] = 0
[fSNonEmpty] = 0
[s](X) = X + 2
[ACK](X1,X2) = 0
[PLUS](X1,X2) = 2.X1 + 2.X2

Problem 1.1: 

SCC Processor:
-> Pairs:
 PLUS(x,s(s(y))) -> PLUS(s(x),y)
-> Rules:
 ack(num0,y) -> s(y)
 ack(s(x),num0) -> ack(x,s(num0))
 ack(s(x),s(y)) -> ack(x,plus(y,ack(s(x),y)))
 plus(num0,y) -> y
 plus(s(num0),y) -> s(y)
 plus(s(s(x)),y) -> s(plus(x,s(y)))
 plus(x,s(s(y))) -> s(plus(s(x),y))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 PLUS(x,s(s(y))) -> PLUS(s(x),y)
->->-> Rules:
 ack(num0,y) -> s(y)
 ack(s(x),num0) -> ack(x,s(num0))
 ack(s(x),s(y)) -> ack(x,plus(y,ack(s(x),y)))
 plus(num0,y) -> y
 plus(s(num0),y) -> s(y)
 plus(s(s(x)),y) -> s(plus(x,s(y)))
 plus(x,s(s(y))) -> s(plus(s(x),y))

Problem 1.1: 

Subterm Processor:
-> Pairs:
 PLUS(x,s(s(y))) -> PLUS(s(x),y)
-> Rules:
 ack(num0,y) -> s(y)
 ack(s(x),num0) -> ack(x,s(num0))
 ack(s(x),s(y)) -> ack(x,plus(y,ack(s(x),y)))
 plus(num0,y) -> y
 plus(s(num0),y) -> s(y)
 plus(s(s(x)),y) -> s(plus(x,s(y)))
 plus(x,s(s(y))) -> s(plus(s(x),y))
->Projection:
 pi(PLUS) = 2

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 ack(num0,y) -> s(y)
 ack(s(x),num0) -> ack(x,s(num0))
 ack(s(x),s(y)) -> ack(x,plus(y,ack(s(x),y)))
 plus(num0,y) -> y
 plus(s(num0),y) -> s(y)
 plus(s(s(x)),y) -> s(plus(x,s(y)))
 plus(x,s(s(y))) -> s(plus(s(x),y))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Subterm Processor:
-> Pairs:
 ACK(s(x),num0) -> ACK(x,s(num0))
 ACK(s(x),s(y)) -> ACK(s(x),y)
 ACK(s(x),s(y)) -> ACK(x,plus(y,ack(s(x),y)))
-> Rules:
 ack(num0,y) -> s(y)
 ack(s(x),num0) -> ack(x,s(num0))
 ack(s(x),s(y)) -> ack(x,plus(y,ack(s(x),y)))
 plus(num0,y) -> y
 plus(s(num0),y) -> s(y)
 plus(s(s(x)),y) -> s(plus(x,s(y)))
 plus(x,s(s(y))) -> s(plus(s(x),y))
->Projection:
 pi(ACK) = 1

Problem 1.2: 

SCC Processor:
-> Pairs:
 ACK(s(x),s(y)) -> ACK(s(x),y)
-> Rules:
 ack(num0,y) -> s(y)
 ack(s(x),num0) -> ack(x,s(num0))
 ack(s(x),s(y)) -> ack(x,plus(y,ack(s(x),y)))
 plus(num0,y) -> y
 plus(s(num0),y) -> s(y)
 plus(s(s(x)),y) -> s(plus(x,s(y)))
 plus(x,s(s(y))) -> s(plus(s(x),y))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACK(s(x),s(y)) -> ACK(s(x),y)
->->-> Rules:
 ack(num0,y) -> s(y)
 ack(s(x),num0) -> ack(x,s(num0))
 ack(s(x),s(y)) -> ack(x,plus(y,ack(s(x),y)))
 plus(num0,y) -> y
 plus(s(num0),y) -> s(y)
 plus(s(s(x)),y) -> s(plus(x,s(y)))
 plus(x,s(s(y))) -> s(plus(s(x),y))

Problem 1.2: 

Subterm Processor:
-> Pairs:
 ACK(s(x),s(y)) -> ACK(s(x),y)
-> Rules:
 ack(num0,y) -> s(y)
 ack(s(x),num0) -> ack(x,s(num0))
 ack(s(x),s(y)) -> ack(x,plus(y,ack(s(x),y)))
 plus(num0,y) -> y
 plus(s(num0),y) -> s(y)
 plus(s(s(x)),y) -> s(plus(x,s(y)))
 plus(x,s(s(y))) -> s(plus(s(x),y))
->Projection:
 pi(ACK) = 2

Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 ack(num0,y) -> s(y)
 ack(s(x),num0) -> ack(x,s(num0))
 ack(s(x),s(y)) -> ack(x,plus(y,ack(s(x),y)))
 plus(num0,y) -> y
 plus(s(num0),y) -> s(y)
 plus(s(s(x)),y) -> s(plus(x,s(y)))
 plus(x,s(s(y))) -> s(plus(s(x),y))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
