YES

Problem 1: 

(VAR vu95NonEmpty x y z)
(RULES
and(x,or(y,z)) -> or(and(x,y),and(x,z))
not(and(x,y)) -> or(not(x),not(y))
not(or(x,y)) -> and(not(x),not(y))
)


Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 AND(x,or(y,z)) -> AND(x,y)
 AND(x,or(y,z)) -> AND(x,z)
 NOT(and(x,y)) -> NOT(x)
 NOT(and(x,y)) -> NOT(y)
 NOT(or(x,y)) -> AND(not(x),not(y))
 NOT(or(x,y)) -> NOT(x)
 NOT(or(x,y)) -> NOT(y)
-> Rules:
 and(x,or(y,z)) -> or(and(x,y),and(x,z))
 not(and(x,y)) -> or(not(x),not(y))
 not(or(x,y)) -> and(not(x),not(y))

Problem 1: 

SCC Processor:
-> Pairs:
 AND(x,or(y,z)) -> AND(x,y)
 AND(x,or(y,z)) -> AND(x,z)
 NOT(and(x,y)) -> NOT(x)
 NOT(and(x,y)) -> NOT(y)
 NOT(or(x,y)) -> AND(not(x),not(y))
 NOT(or(x,y)) -> NOT(x)
 NOT(or(x,y)) -> NOT(y)
-> Rules:
 and(x,or(y,z)) -> or(and(x,y),and(x,z))
 not(and(x,y)) -> or(not(x),not(y))
 not(or(x,y)) -> and(not(x),not(y))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AND(x,or(y,z)) -> AND(x,y)
 AND(x,or(y,z)) -> AND(x,z)
->->-> Rules:
 and(x,or(y,z)) -> or(and(x,y),and(x,z))
 not(and(x,y)) -> or(not(x),not(y))
 not(or(x,y)) -> and(not(x),not(y))
->->Cycle:
->->-> Pairs:
 NOT(and(x,y)) -> NOT(x)
 NOT(and(x,y)) -> NOT(y)
 NOT(or(x,y)) -> NOT(x)
 NOT(or(x,y)) -> NOT(y)
->->-> Rules:
 and(x,or(y,z)) -> or(and(x,y),and(x,z))
 not(and(x,y)) -> or(not(x),not(y))
 not(or(x,y)) -> and(not(x),not(y))


The problem is decomposed in 2 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 AND(x,or(y,z)) -> AND(x,y)
 AND(x,or(y,z)) -> AND(x,z)
-> Rules:
 and(x,or(y,z)) -> or(and(x,y),and(x,z))
 not(and(x,y)) -> or(not(x),not(y))
 not(or(x,y)) -> and(not(x),not(y))
->Projection:
 pi(AND) = 2

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 and(x,or(y,z)) -> or(and(x,y),and(x,z))
 not(and(x,y)) -> or(not(x),not(y))
 not(or(x,y)) -> and(not(x),not(y))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Subterm Processor:
-> Pairs:
 NOT(and(x,y)) -> NOT(x)
 NOT(and(x,y)) -> NOT(y)
 NOT(or(x,y)) -> NOT(x)
 NOT(or(x,y)) -> NOT(y)
-> Rules:
 and(x,or(y,z)) -> or(and(x,y),and(x,z))
 not(and(x,y)) -> or(not(x),not(y))
 not(or(x,y)) -> and(not(x),not(y))
->Projection:
 pi(NOT) = 1

Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 and(x,or(y,z)) -> or(and(x,y),and(x,z))
 not(and(x,y)) -> or(not(x),not(y))
 not(or(x,y)) -> and(not(x),not(y))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
