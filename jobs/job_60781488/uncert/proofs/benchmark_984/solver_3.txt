YES

Problem 1: 

(VAR vu95NonEmpty N X X1 X2 Y Z)
(RULES
activate(nu95u95add(X1,X2)) -> add(X1,X2)
activate(nu95u95dbl(X)) -> dbl(X)
activate(nu95u95first(X1,X2)) -> first(X1,X2)
activate(nu95u95s(X)) -> s(X)
activate(nu95u95terms(X)) -> terms(X)
activate(X) -> X
add(s(X),Y) -> s(nu95u95add(activate(X),Y))
add(num0,X) -> X
add(X1,X2) -> nu95u95add(X1,X2)
dbl(s(X)) -> s(nu95u95s(nu95u95dbl(activate(X))))
dbl(num0) -> num0
dbl(X) -> nu95u95dbl(X)
first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(activate(X),activate(Z)))
first(num0,X) -> nil
first(X1,X2) -> nu95u95first(X1,X2)
s(X) -> nu95u95s(X)
sqr(s(X)) -> s(nu95u95add(sqr(activate(X)),dbl(activate(X))))
sqr(num0) -> num0
terms(N) -> cons(recip(sqr(N)),nu95u95terms(s(N)))
terms(X) -> nu95u95terms(X)
)


Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 ACTIVATE(nu95u95add(X1,X2)) -> ADD(X1,X2)
 ACTIVATE(nu95u95dbl(X)) -> DBL(X)
 ACTIVATE(nu95u95first(X1,X2)) -> FIRST(X1,X2)
 ACTIVATE(nu95u95s(X)) -> S(X)
 ACTIVATE(nu95u95terms(X)) -> TERMS(X)
 ADD(s(X),Y) -> ACTIVATE(X)
 ADD(s(X),Y) -> S(nu95u95add(activate(X),Y))
 DBL(s(X)) -> ACTIVATE(X)
 DBL(s(X)) -> S(nu95u95s(nu95u95dbl(activate(X))))
 FIRST(s(X),cons(Y,Z)) -> ACTIVATE(X)
 FIRST(s(X),cons(Y,Z)) -> ACTIVATE(Z)
 SQR(s(X)) -> ACTIVATE(X)
 SQR(s(X)) -> DBL(activate(X))
 SQR(s(X)) -> S(nu95u95add(sqr(activate(X)),dbl(activate(X))))
 SQR(s(X)) -> SQR(activate(X))
 TERMS(N) -> S(N)
 TERMS(N) -> SQR(N)
-> Rules:
 activate(nu95u95add(X1,X2)) -> add(X1,X2)
 activate(nu95u95dbl(X)) -> dbl(X)
 activate(nu95u95first(X1,X2)) -> first(X1,X2)
 activate(nu95u95s(X)) -> s(X)
 activate(nu95u95terms(X)) -> terms(X)
 activate(X) -> X
 add(s(X),Y) -> s(nu95u95add(activate(X),Y))
 add(num0,X) -> X
 add(X1,X2) -> nu95u95add(X1,X2)
 dbl(s(X)) -> s(nu95u95s(nu95u95dbl(activate(X))))
 dbl(num0) -> num0
 dbl(X) -> nu95u95dbl(X)
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(activate(X),activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 s(X) -> nu95u95s(X)
 sqr(s(X)) -> s(nu95u95add(sqr(activate(X)),dbl(activate(X))))
 sqr(num0) -> num0
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(s(N)))
 terms(X) -> nu95u95terms(X)

Problem 1: 

SCC Processor:
-> Pairs:
 ACTIVATE(nu95u95add(X1,X2)) -> ADD(X1,X2)
 ACTIVATE(nu95u95dbl(X)) -> DBL(X)
 ACTIVATE(nu95u95first(X1,X2)) -> FIRST(X1,X2)
 ACTIVATE(nu95u95s(X)) -> S(X)
 ACTIVATE(nu95u95terms(X)) -> TERMS(X)
 ADD(s(X),Y) -> ACTIVATE(X)
 ADD(s(X),Y) -> S(nu95u95add(activate(X),Y))
 DBL(s(X)) -> ACTIVATE(X)
 DBL(s(X)) -> S(nu95u95s(nu95u95dbl(activate(X))))
 FIRST(s(X),cons(Y,Z)) -> ACTIVATE(X)
 FIRST(s(X),cons(Y,Z)) -> ACTIVATE(Z)
 SQR(s(X)) -> ACTIVATE(X)
 SQR(s(X)) -> DBL(activate(X))
 SQR(s(X)) -> S(nu95u95add(sqr(activate(X)),dbl(activate(X))))
 SQR(s(X)) -> SQR(activate(X))
 TERMS(N) -> S(N)
 TERMS(N) -> SQR(N)
-> Rules:
 activate(nu95u95add(X1,X2)) -> add(X1,X2)
 activate(nu95u95dbl(X)) -> dbl(X)
 activate(nu95u95first(X1,X2)) -> first(X1,X2)
 activate(nu95u95s(X)) -> s(X)
 activate(nu95u95terms(X)) -> terms(X)
 activate(X) -> X
 add(s(X),Y) -> s(nu95u95add(activate(X),Y))
 add(num0,X) -> X
 add(X1,X2) -> nu95u95add(X1,X2)
 dbl(s(X)) -> s(nu95u95s(nu95u95dbl(activate(X))))
 dbl(num0) -> num0
 dbl(X) -> nu95u95dbl(X)
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(activate(X),activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 s(X) -> nu95u95s(X)
 sqr(s(X)) -> s(nu95u95add(sqr(activate(X)),dbl(activate(X))))
 sqr(num0) -> num0
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(s(N)))
 terms(X) -> nu95u95terms(X)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVATE(nu95u95add(X1,X2)) -> ADD(X1,X2)
 ACTIVATE(nu95u95dbl(X)) -> DBL(X)
 ACTIVATE(nu95u95first(X1,X2)) -> FIRST(X1,X2)
 ACTIVATE(nu95u95terms(X)) -> TERMS(X)
 ADD(s(X),Y) -> ACTIVATE(X)
 DBL(s(X)) -> ACTIVATE(X)
 FIRST(s(X),cons(Y,Z)) -> ACTIVATE(X)
 FIRST(s(X),cons(Y,Z)) -> ACTIVATE(Z)
 SQR(s(X)) -> ACTIVATE(X)
 SQR(s(X)) -> DBL(activate(X))
 SQR(s(X)) -> SQR(activate(X))
 TERMS(N) -> SQR(N)
->->-> Rules:
 activate(nu95u95add(X1,X2)) -> add(X1,X2)
 activate(nu95u95dbl(X)) -> dbl(X)
 activate(nu95u95first(X1,X2)) -> first(X1,X2)
 activate(nu95u95s(X)) -> s(X)
 activate(nu95u95terms(X)) -> terms(X)
 activate(X) -> X
 add(s(X),Y) -> s(nu95u95add(activate(X),Y))
 add(num0,X) -> X
 add(X1,X2) -> nu95u95add(X1,X2)
 dbl(s(X)) -> s(nu95u95s(nu95u95dbl(activate(X))))
 dbl(num0) -> num0
 dbl(X) -> nu95u95dbl(X)
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(activate(X),activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 s(X) -> nu95u95s(X)
 sqr(s(X)) -> s(nu95u95add(sqr(activate(X)),dbl(activate(X))))
 sqr(num0) -> num0
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(s(N)))
 terms(X) -> nu95u95terms(X)

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 ACTIVATE(nu95u95add(X1,X2)) -> ADD(X1,X2)
 ACTIVATE(nu95u95dbl(X)) -> DBL(X)
 ACTIVATE(nu95u95first(X1,X2)) -> FIRST(X1,X2)
 ACTIVATE(nu95u95terms(X)) -> TERMS(X)
 ADD(s(X),Y) -> ACTIVATE(X)
 DBL(s(X)) -> ACTIVATE(X)
 FIRST(s(X),cons(Y,Z)) -> ACTIVATE(X)
 FIRST(s(X),cons(Y,Z)) -> ACTIVATE(Z)
 SQR(s(X)) -> ACTIVATE(X)
 SQR(s(X)) -> DBL(activate(X))
 SQR(s(X)) -> SQR(activate(X))
 TERMS(N) -> SQR(N)
-> Rules:
 activate(nu95u95add(X1,X2)) -> add(X1,X2)
 activate(nu95u95dbl(X)) -> dbl(X)
 activate(nu95u95first(X1,X2)) -> first(X1,X2)
 activate(nu95u95s(X)) -> s(X)
 activate(nu95u95terms(X)) -> terms(X)
 activate(X) -> X
 add(s(X),Y) -> s(nu95u95add(activate(X),Y))
 add(num0,X) -> X
 add(X1,X2) -> nu95u95add(X1,X2)
 dbl(s(X)) -> s(nu95u95s(nu95u95dbl(activate(X))))
 dbl(num0) -> num0
 dbl(X) -> nu95u95dbl(X)
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(activate(X),activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 s(X) -> nu95u95s(X)
 sqr(s(X)) -> s(nu95u95add(sqr(activate(X)),dbl(activate(X))))
 sqr(num0) -> num0
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(s(N)))
 terms(X) -> nu95u95terms(X)
-> Usable rules:
 activate(nu95u95add(X1,X2)) -> add(X1,X2)
 activate(nu95u95dbl(X)) -> dbl(X)
 activate(nu95u95first(X1,X2)) -> first(X1,X2)
 activate(nu95u95s(X)) -> s(X)
 activate(nu95u95terms(X)) -> terms(X)
 activate(X) -> X
 add(s(X),Y) -> s(nu95u95add(activate(X),Y))
 add(num0,X) -> X
 add(X1,X2) -> nu95u95add(X1,X2)
 dbl(s(X)) -> s(nu95u95s(nu95u95dbl(activate(X))))
 dbl(num0) -> num0
 dbl(X) -> nu95u95dbl(X)
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(activate(X),activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 s(X) -> nu95u95s(X)
 sqr(s(X)) -> s(nu95u95add(sqr(activate(X)),dbl(activate(X))))
 sqr(num0) -> num0
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(s(N)))
 terms(X) -> nu95u95terms(X)
->Interpretation type:
 Simple mixed
->Coefficients:
 All rationals
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[activate](X) = 2.X
[add](X1,X2) = X1 + X2 + 2
[dbl](X) = 2.X + 2
[first](X1,X2) = 2.X1.X2 + 1/2.X2 + 1
[s](X) = 2.X + 2
[sqr](X) = 2.X.X
[terms](X) = X + 2
[num0] = 0
[cons](X1,X2) = X1.X2 + X1 + 1/2.X2 + 1/2
[fSNonEmpty] = 0
[nu95u95add](X1,X2) = 1/2.X1 + 1/2.X2 + 1
[nu95u95dbl](X) = X + 1
[nu95u95first](X1,X2) = X1.X2 + 1/2.X2 + 1/2
[nu95u95s](X) = X + 1
[nu95u95terms](X) = 1/2.X + 2
[nil] = 0
[recip](X) = 0
[ACTIVATE](X) = 2.X + 1/2
[ADD](X1,X2) = X1 + 1
[DBL](X) = X + 2
[FIRST](X1,X2) = 2.X1.X2
[S](X) = 0
[SQR](X) = X
[TERMS](X) = X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 ACTIVATE(nu95u95dbl(X)) -> DBL(X)
 ACTIVATE(nu95u95first(X1,X2)) -> FIRST(X1,X2)
 ACTIVATE(nu95u95terms(X)) -> TERMS(X)
 ADD(s(X),Y) -> ACTIVATE(X)
 DBL(s(X)) -> ACTIVATE(X)
 FIRST(s(X),cons(Y,Z)) -> ACTIVATE(X)
 FIRST(s(X),cons(Y,Z)) -> ACTIVATE(Z)
 SQR(s(X)) -> ACTIVATE(X)
 SQR(s(X)) -> DBL(activate(X))
 SQR(s(X)) -> SQR(activate(X))
 TERMS(N) -> SQR(N)
-> Rules:
 activate(nu95u95add(X1,X2)) -> add(X1,X2)
 activate(nu95u95dbl(X)) -> dbl(X)
 activate(nu95u95first(X1,X2)) -> first(X1,X2)
 activate(nu95u95s(X)) -> s(X)
 activate(nu95u95terms(X)) -> terms(X)
 activate(X) -> X
 add(s(X),Y) -> s(nu95u95add(activate(X),Y))
 add(num0,X) -> X
 add(X1,X2) -> nu95u95add(X1,X2)
 dbl(s(X)) -> s(nu95u95s(nu95u95dbl(activate(X))))
 dbl(num0) -> num0
 dbl(X) -> nu95u95dbl(X)
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(activate(X),activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 s(X) -> nu95u95s(X)
 sqr(s(X)) -> s(nu95u95add(sqr(activate(X)),dbl(activate(X))))
 sqr(num0) -> num0
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(s(N)))
 terms(X) -> nu95u95terms(X)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVATE(nu95u95dbl(X)) -> DBL(X)
 ACTIVATE(nu95u95first(X1,X2)) -> FIRST(X1,X2)
 ACTIVATE(nu95u95terms(X)) -> TERMS(X)
 DBL(s(X)) -> ACTIVATE(X)
 FIRST(s(X),cons(Y,Z)) -> ACTIVATE(X)
 FIRST(s(X),cons(Y,Z)) -> ACTIVATE(Z)
 SQR(s(X)) -> ACTIVATE(X)
 SQR(s(X)) -> DBL(activate(X))
 SQR(s(X)) -> SQR(activate(X))
 TERMS(N) -> SQR(N)
->->-> Rules:
 activate(nu95u95add(X1,X2)) -> add(X1,X2)
 activate(nu95u95dbl(X)) -> dbl(X)
 activate(nu95u95first(X1,X2)) -> first(X1,X2)
 activate(nu95u95s(X)) -> s(X)
 activate(nu95u95terms(X)) -> terms(X)
 activate(X) -> X
 add(s(X),Y) -> s(nu95u95add(activate(X),Y))
 add(num0,X) -> X
 add(X1,X2) -> nu95u95add(X1,X2)
 dbl(s(X)) -> s(nu95u95s(nu95u95dbl(activate(X))))
 dbl(num0) -> num0
 dbl(X) -> nu95u95dbl(X)
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(activate(X),activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 s(X) -> nu95u95s(X)
 sqr(s(X)) -> s(nu95u95add(sqr(activate(X)),dbl(activate(X))))
 sqr(num0) -> num0
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(s(N)))
 terms(X) -> nu95u95terms(X)

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 ACTIVATE(nu95u95dbl(X)) -> DBL(X)
 ACTIVATE(nu95u95first(X1,X2)) -> FIRST(X1,X2)
 ACTIVATE(nu95u95terms(X)) -> TERMS(X)
 DBL(s(X)) -> ACTIVATE(X)
 FIRST(s(X),cons(Y,Z)) -> ACTIVATE(X)
 FIRST(s(X),cons(Y,Z)) -> ACTIVATE(Z)
 SQR(s(X)) -> ACTIVATE(X)
 SQR(s(X)) -> DBL(activate(X))
 SQR(s(X)) -> SQR(activate(X))
 TERMS(N) -> SQR(N)
-> Rules:
 activate(nu95u95add(X1,X2)) -> add(X1,X2)
 activate(nu95u95dbl(X)) -> dbl(X)
 activate(nu95u95first(X1,X2)) -> first(X1,X2)
 activate(nu95u95s(X)) -> s(X)
 activate(nu95u95terms(X)) -> terms(X)
 activate(X) -> X
 add(s(X),Y) -> s(nu95u95add(activate(X),Y))
 add(num0,X) -> X
 add(X1,X2) -> nu95u95add(X1,X2)
 dbl(s(X)) -> s(nu95u95s(nu95u95dbl(activate(X))))
 dbl(num0) -> num0
 dbl(X) -> nu95u95dbl(X)
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(activate(X),activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 s(X) -> nu95u95s(X)
 sqr(s(X)) -> s(nu95u95add(sqr(activate(X)),dbl(activate(X))))
 sqr(num0) -> num0
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(s(N)))
 terms(X) -> nu95u95terms(X)
-> Usable rules:
 activate(nu95u95add(X1,X2)) -> add(X1,X2)
 activate(nu95u95dbl(X)) -> dbl(X)
 activate(nu95u95first(X1,X2)) -> first(X1,X2)
 activate(nu95u95s(X)) -> s(X)
 activate(nu95u95terms(X)) -> terms(X)
 activate(X) -> X
 add(s(X),Y) -> s(nu95u95add(activate(X),Y))
 add(num0,X) -> X
 add(X1,X2) -> nu95u95add(X1,X2)
 dbl(s(X)) -> s(nu95u95s(nu95u95dbl(activate(X))))
 dbl(num0) -> num0
 dbl(X) -> nu95u95dbl(X)
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(activate(X),activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 s(X) -> nu95u95s(X)
 sqr(s(X)) -> s(nu95u95add(sqr(activate(X)),dbl(activate(X))))
 sqr(num0) -> num0
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(s(N)))
 terms(X) -> nu95u95terms(X)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[activate](X) = X + 2
[add](X1,X2) = X2 + 2
[dbl](X) = X + 2
[first](X1,X2) = 2.X1 + X2 + 2
[s](X) = X + 2
[sqr](X) = 2.X + 2
[terms](X) = X + 2
[num0] = 1
[cons](X1,X2) = X2
[fSNonEmpty] = 0
[nu95u95add](X1,X2) = X2
[nu95u95dbl](X) = X
[nu95u95first](X1,X2) = 2.X1 + X2
[nu95u95s](X) = X
[nu95u95terms](X) = X
[nil] = 1
[recip](X) = 2
[ACTIVATE](X) = 2.X + 2
[ADD](X1,X2) = 0
[DBL](X) = 2.X + 1
[FIRST](X1,X2) = 2.X1 + 2.X2 + 2
[S](X) = 0
[SQR](X) = 2.X + 2
[TERMS](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 ACTIVATE(nu95u95first(X1,X2)) -> FIRST(X1,X2)
 ACTIVATE(nu95u95terms(X)) -> TERMS(X)
 DBL(s(X)) -> ACTIVATE(X)
 FIRST(s(X),cons(Y,Z)) -> ACTIVATE(X)
 FIRST(s(X),cons(Y,Z)) -> ACTIVATE(Z)
 SQR(s(X)) -> ACTIVATE(X)
 SQR(s(X)) -> DBL(activate(X))
 SQR(s(X)) -> SQR(activate(X))
 TERMS(N) -> SQR(N)
-> Rules:
 activate(nu95u95add(X1,X2)) -> add(X1,X2)
 activate(nu95u95dbl(X)) -> dbl(X)
 activate(nu95u95first(X1,X2)) -> first(X1,X2)
 activate(nu95u95s(X)) -> s(X)
 activate(nu95u95terms(X)) -> terms(X)
 activate(X) -> X
 add(s(X),Y) -> s(nu95u95add(activate(X),Y))
 add(num0,X) -> X
 add(X1,X2) -> nu95u95add(X1,X2)
 dbl(s(X)) -> s(nu95u95s(nu95u95dbl(activate(X))))
 dbl(num0) -> num0
 dbl(X) -> nu95u95dbl(X)
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(activate(X),activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 s(X) -> nu95u95s(X)
 sqr(s(X)) -> s(nu95u95add(sqr(activate(X)),dbl(activate(X))))
 sqr(num0) -> num0
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(s(N)))
 terms(X) -> nu95u95terms(X)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVATE(nu95u95first(X1,X2)) -> FIRST(X1,X2)
 ACTIVATE(nu95u95terms(X)) -> TERMS(X)
 DBL(s(X)) -> ACTIVATE(X)
 FIRST(s(X),cons(Y,Z)) -> ACTIVATE(X)
 FIRST(s(X),cons(Y,Z)) -> ACTIVATE(Z)
 SQR(s(X)) -> ACTIVATE(X)
 SQR(s(X)) -> DBL(activate(X))
 SQR(s(X)) -> SQR(activate(X))
 TERMS(N) -> SQR(N)
->->-> Rules:
 activate(nu95u95add(X1,X2)) -> add(X1,X2)
 activate(nu95u95dbl(X)) -> dbl(X)
 activate(nu95u95first(X1,X2)) -> first(X1,X2)
 activate(nu95u95s(X)) -> s(X)
 activate(nu95u95terms(X)) -> terms(X)
 activate(X) -> X
 add(s(X),Y) -> s(nu95u95add(activate(X),Y))
 add(num0,X) -> X
 add(X1,X2) -> nu95u95add(X1,X2)
 dbl(s(X)) -> s(nu95u95s(nu95u95dbl(activate(X))))
 dbl(num0) -> num0
 dbl(X) -> nu95u95dbl(X)
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(activate(X),activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 s(X) -> nu95u95s(X)
 sqr(s(X)) -> s(nu95u95add(sqr(activate(X)),dbl(activate(X))))
 sqr(num0) -> num0
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(s(N)))
 terms(X) -> nu95u95terms(X)

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 ACTIVATE(nu95u95first(X1,X2)) -> FIRST(X1,X2)
 ACTIVATE(nu95u95terms(X)) -> TERMS(X)
 DBL(s(X)) -> ACTIVATE(X)
 FIRST(s(X),cons(Y,Z)) -> ACTIVATE(X)
 FIRST(s(X),cons(Y,Z)) -> ACTIVATE(Z)
 SQR(s(X)) -> ACTIVATE(X)
 SQR(s(X)) -> DBL(activate(X))
 SQR(s(X)) -> SQR(activate(X))
 TERMS(N) -> SQR(N)
-> Rules:
 activate(nu95u95add(X1,X2)) -> add(X1,X2)
 activate(nu95u95dbl(X)) -> dbl(X)
 activate(nu95u95first(X1,X2)) -> first(X1,X2)
 activate(nu95u95s(X)) -> s(X)
 activate(nu95u95terms(X)) -> terms(X)
 activate(X) -> X
 add(s(X),Y) -> s(nu95u95add(activate(X),Y))
 add(num0,X) -> X
 add(X1,X2) -> nu95u95add(X1,X2)
 dbl(s(X)) -> s(nu95u95s(nu95u95dbl(activate(X))))
 dbl(num0) -> num0
 dbl(X) -> nu95u95dbl(X)
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(activate(X),activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 s(X) -> nu95u95s(X)
 sqr(s(X)) -> s(nu95u95add(sqr(activate(X)),dbl(activate(X))))
 sqr(num0) -> num0
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(s(N)))
 terms(X) -> nu95u95terms(X)
-> Usable rules:
 activate(nu95u95add(X1,X2)) -> add(X1,X2)
 activate(nu95u95dbl(X)) -> dbl(X)
 activate(nu95u95first(X1,X2)) -> first(X1,X2)
 activate(nu95u95s(X)) -> s(X)
 activate(nu95u95terms(X)) -> terms(X)
 activate(X) -> X
 add(s(X),Y) -> s(nu95u95add(activate(X),Y))
 add(num0,X) -> X
 add(X1,X2) -> nu95u95add(X1,X2)
 dbl(s(X)) -> s(nu95u95s(nu95u95dbl(activate(X))))
 dbl(num0) -> num0
 dbl(X) -> nu95u95dbl(X)
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(activate(X),activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 s(X) -> nu95u95s(X)
 sqr(s(X)) -> s(nu95u95add(sqr(activate(X)),dbl(activate(X))))
 sqr(num0) -> num0
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(s(N)))
 terms(X) -> nu95u95terms(X)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[activate](X) = X + 2
[add](X1,X2) = X2 + 2
[dbl](X) = 2
[first](X1,X2) = 2.X1 + X2 + 2
[s](X) = X + 2
[sqr](X) = 2.X
[terms](X) = X + 2
[num0] = 0
[cons](X1,X2) = X1 + X2
[fSNonEmpty] = 0
[nu95u95add](X1,X2) = X2
[nu95u95dbl](X) = 0
[nu95u95first](X1,X2) = 2.X1 + X2
[nu95u95s](X) = X
[nu95u95terms](X) = X
[nil] = 2
[recip](X) = 0
[ACTIVATE](X) = 2.X + 2
[ADD](X1,X2) = 0
[DBL](X) = 2.X + 1
[FIRST](X1,X2) = 2.X1 + 2.X2 + 1
[S](X) = 0
[SQR](X) = 2.X + 1
[TERMS](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 ACTIVATE(nu95u95terms(X)) -> TERMS(X)
 DBL(s(X)) -> ACTIVATE(X)
 FIRST(s(X),cons(Y,Z)) -> ACTIVATE(X)
 FIRST(s(X),cons(Y,Z)) -> ACTIVATE(Z)
 SQR(s(X)) -> ACTIVATE(X)
 SQR(s(X)) -> DBL(activate(X))
 SQR(s(X)) -> SQR(activate(X))
 TERMS(N) -> SQR(N)
-> Rules:
 activate(nu95u95add(X1,X2)) -> add(X1,X2)
 activate(nu95u95dbl(X)) -> dbl(X)
 activate(nu95u95first(X1,X2)) -> first(X1,X2)
 activate(nu95u95s(X)) -> s(X)
 activate(nu95u95terms(X)) -> terms(X)
 activate(X) -> X
 add(s(X),Y) -> s(nu95u95add(activate(X),Y))
 add(num0,X) -> X
 add(X1,X2) -> nu95u95add(X1,X2)
 dbl(s(X)) -> s(nu95u95s(nu95u95dbl(activate(X))))
 dbl(num0) -> num0
 dbl(X) -> nu95u95dbl(X)
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(activate(X),activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 s(X) -> nu95u95s(X)
 sqr(s(X)) -> s(nu95u95add(sqr(activate(X)),dbl(activate(X))))
 sqr(num0) -> num0
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(s(N)))
 terms(X) -> nu95u95terms(X)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVATE(nu95u95terms(X)) -> TERMS(X)
 DBL(s(X)) -> ACTIVATE(X)
 SQR(s(X)) -> ACTIVATE(X)
 SQR(s(X)) -> DBL(activate(X))
 SQR(s(X)) -> SQR(activate(X))
 TERMS(N) -> SQR(N)
->->-> Rules:
 activate(nu95u95add(X1,X2)) -> add(X1,X2)
 activate(nu95u95dbl(X)) -> dbl(X)
 activate(nu95u95first(X1,X2)) -> first(X1,X2)
 activate(nu95u95s(X)) -> s(X)
 activate(nu95u95terms(X)) -> terms(X)
 activate(X) -> X
 add(s(X),Y) -> s(nu95u95add(activate(X),Y))
 add(num0,X) -> X
 add(X1,X2) -> nu95u95add(X1,X2)
 dbl(s(X)) -> s(nu95u95s(nu95u95dbl(activate(X))))
 dbl(num0) -> num0
 dbl(X) -> nu95u95dbl(X)
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(activate(X),activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 s(X) -> nu95u95s(X)
 sqr(s(X)) -> s(nu95u95add(sqr(activate(X)),dbl(activate(X))))
 sqr(num0) -> num0
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(s(N)))
 terms(X) -> nu95u95terms(X)

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 ACTIVATE(nu95u95terms(X)) -> TERMS(X)
 DBL(s(X)) -> ACTIVATE(X)
 SQR(s(X)) -> ACTIVATE(X)
 SQR(s(X)) -> DBL(activate(X))
 SQR(s(X)) -> SQR(activate(X))
 TERMS(N) -> SQR(N)
-> Rules:
 activate(nu95u95add(X1,X2)) -> add(X1,X2)
 activate(nu95u95dbl(X)) -> dbl(X)
 activate(nu95u95first(X1,X2)) -> first(X1,X2)
 activate(nu95u95s(X)) -> s(X)
 activate(nu95u95terms(X)) -> terms(X)
 activate(X) -> X
 add(s(X),Y) -> s(nu95u95add(activate(X),Y))
 add(num0,X) -> X
 add(X1,X2) -> nu95u95add(X1,X2)
 dbl(s(X)) -> s(nu95u95s(nu95u95dbl(activate(X))))
 dbl(num0) -> num0
 dbl(X) -> nu95u95dbl(X)
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(activate(X),activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 s(X) -> nu95u95s(X)
 sqr(s(X)) -> s(nu95u95add(sqr(activate(X)),dbl(activate(X))))
 sqr(num0) -> num0
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(s(N)))
 terms(X) -> nu95u95terms(X)
-> Usable rules:
 activate(nu95u95add(X1,X2)) -> add(X1,X2)
 activate(nu95u95dbl(X)) -> dbl(X)
 activate(nu95u95first(X1,X2)) -> first(X1,X2)
 activate(nu95u95s(X)) -> s(X)
 activate(nu95u95terms(X)) -> terms(X)
 activate(X) -> X
 add(s(X),Y) -> s(nu95u95add(activate(X),Y))
 add(num0,X) -> X
 add(X1,X2) -> nu95u95add(X1,X2)
 dbl(s(X)) -> s(nu95u95s(nu95u95dbl(activate(X))))
 dbl(num0) -> num0
 dbl(X) -> nu95u95dbl(X)
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(activate(X),activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 s(X) -> nu95u95s(X)
 sqr(s(X)) -> s(nu95u95add(sqr(activate(X)),dbl(activate(X))))
 sqr(num0) -> num0
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(s(N)))
 terms(X) -> nu95u95terms(X)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[activate](X) = 2.X + 2
[add](X1,X2) = 2.X2 + 2
[dbl](X) = 2
[first](X1,X2) = X1
[s](X) = 2.X + 2
[sqr](X) = 2.X + 2
[terms](X) = 2.X
[num0] = 1
[cons](X1,X2) = 0
[fSNonEmpty] = 0
[nu95u95add](X1,X2) = X2
[nu95u95dbl](X) = 0
[nu95u95first](X1,X2) = X1
[nu95u95s](X) = 2.X
[nu95u95terms](X) = 2.X
[nil] = 1
[recip](X) = 2
[ACTIVATE](X) = 2.X + 2
[ADD](X1,X2) = 0
[DBL](X) = X + 2
[FIRST](X1,X2) = 0
[S](X) = 0
[SQR](X) = 2.X
[TERMS](X) = 2.X

Problem 1: 

SCC Processor:
-> Pairs:
 DBL(s(X)) -> ACTIVATE(X)
 SQR(s(X)) -> ACTIVATE(X)
 SQR(s(X)) -> DBL(activate(X))
 SQR(s(X)) -> SQR(activate(X))
 TERMS(N) -> SQR(N)
-> Rules:
 activate(nu95u95add(X1,X2)) -> add(X1,X2)
 activate(nu95u95dbl(X)) -> dbl(X)
 activate(nu95u95first(X1,X2)) -> first(X1,X2)
 activate(nu95u95s(X)) -> s(X)
 activate(nu95u95terms(X)) -> terms(X)
 activate(X) -> X
 add(s(X),Y) -> s(nu95u95add(activate(X),Y))
 add(num0,X) -> X
 add(X1,X2) -> nu95u95add(X1,X2)
 dbl(s(X)) -> s(nu95u95s(nu95u95dbl(activate(X))))
 dbl(num0) -> num0
 dbl(X) -> nu95u95dbl(X)
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(activate(X),activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 s(X) -> nu95u95s(X)
 sqr(s(X)) -> s(nu95u95add(sqr(activate(X)),dbl(activate(X))))
 sqr(num0) -> num0
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(s(N)))
 terms(X) -> nu95u95terms(X)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 SQR(s(X)) -> SQR(activate(X))
->->-> Rules:
 activate(nu95u95add(X1,X2)) -> add(X1,X2)
 activate(nu95u95dbl(X)) -> dbl(X)
 activate(nu95u95first(X1,X2)) -> first(X1,X2)
 activate(nu95u95s(X)) -> s(X)
 activate(nu95u95terms(X)) -> terms(X)
 activate(X) -> X
 add(s(X),Y) -> s(nu95u95add(activate(X),Y))
 add(num0,X) -> X
 add(X1,X2) -> nu95u95add(X1,X2)
 dbl(s(X)) -> s(nu95u95s(nu95u95dbl(activate(X))))
 dbl(num0) -> num0
 dbl(X) -> nu95u95dbl(X)
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(activate(X),activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 s(X) -> nu95u95s(X)
 sqr(s(X)) -> s(nu95u95add(sqr(activate(X)),dbl(activate(X))))
 sqr(num0) -> num0
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(s(N)))
 terms(X) -> nu95u95terms(X)

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 SQR(s(X)) -> SQR(activate(X))
-> Rules:
 activate(nu95u95add(X1,X2)) -> add(X1,X2)
 activate(nu95u95dbl(X)) -> dbl(X)
 activate(nu95u95first(X1,X2)) -> first(X1,X2)
 activate(nu95u95s(X)) -> s(X)
 activate(nu95u95terms(X)) -> terms(X)
 activate(X) -> X
 add(s(X),Y) -> s(nu95u95add(activate(X),Y))
 add(num0,X) -> X
 add(X1,X2) -> nu95u95add(X1,X2)
 dbl(s(X)) -> s(nu95u95s(nu95u95dbl(activate(X))))
 dbl(num0) -> num0
 dbl(X) -> nu95u95dbl(X)
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(activate(X),activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 s(X) -> nu95u95s(X)
 sqr(s(X)) -> s(nu95u95add(sqr(activate(X)),dbl(activate(X))))
 sqr(num0) -> num0
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(s(N)))
 terms(X) -> nu95u95terms(X)
-> Usable rules:
 activate(nu95u95add(X1,X2)) -> add(X1,X2)
 activate(nu95u95dbl(X)) -> dbl(X)
 activate(nu95u95first(X1,X2)) -> first(X1,X2)
 activate(nu95u95s(X)) -> s(X)
 activate(nu95u95terms(X)) -> terms(X)
 activate(X) -> X
 add(s(X),Y) -> s(nu95u95add(activate(X),Y))
 add(num0,X) -> X
 add(X1,X2) -> nu95u95add(X1,X2)
 dbl(s(X)) -> s(nu95u95s(nu95u95dbl(activate(X))))
 dbl(num0) -> num0
 dbl(X) -> nu95u95dbl(X)
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(activate(X),activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 s(X) -> nu95u95s(X)
 sqr(s(X)) -> s(nu95u95add(sqr(activate(X)),dbl(activate(X))))
 sqr(num0) -> num0
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(s(N)))
 terms(X) -> nu95u95terms(X)
->Interpretation type:
 Simple mixed
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[activate](X) = X
[add](X1,X2) = X1 + 2.X2 + 2
[dbl](X) = 2.X + 1
[first](X1,X2) = 2.X1
[s](X) = X + 2
[sqr](X) = 2.X.X + 2
[terms](X) = 2
[num0] = 2
[cons](X1,X2) = 2
[fSNonEmpty] = 0
[nu95u95add](X1,X2) = X1 + 2.X2 + 2
[nu95u95dbl](X) = 2.X + 1
[nu95u95first](X1,X2) = 2.X1
[nu95u95s](X) = X + 2
[nu95u95terms](X) = 2
[nil] = 2
[recip](X) = 2.X.X
[ACTIVATE](X) = 0
[ADD](X1,X2) = 0
[DBL](X) = 0
[FIRST](X1,X2) = 0
[S](X) = 0
[SQR](X) = 2.X
[TERMS](X) = 0

Problem 1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 activate(nu95u95add(X1,X2)) -> add(X1,X2)
 activate(nu95u95dbl(X)) -> dbl(X)
 activate(nu95u95first(X1,X2)) -> first(X1,X2)
 activate(nu95u95s(X)) -> s(X)
 activate(nu95u95terms(X)) -> terms(X)
 activate(X) -> X
 add(s(X),Y) -> s(nu95u95add(activate(X),Y))
 add(num0,X) -> X
 add(X1,X2) -> nu95u95add(X1,X2)
 dbl(s(X)) -> s(nu95u95s(nu95u95dbl(activate(X))))
 dbl(num0) -> num0
 dbl(X) -> nu95u95dbl(X)
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(activate(X),activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 s(X) -> nu95u95s(X)
 sqr(s(X)) -> s(nu95u95add(sqr(activate(X)),dbl(activate(X))))
 sqr(num0) -> num0
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(s(N)))
 terms(X) -> nu95u95terms(X)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
