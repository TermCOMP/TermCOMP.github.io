YES

Problem 1: 

(VAR vu95NonEmpty x y z)
(RULES
and(not(not(x)),y,not(z)) -> and(y,band(x,z),x)
)


Problem 1: 

Innermost Equivalent Processor:
-> Rules:
 and(not(not(x)),y,not(z)) -> and(y,band(x,z),x)
-> The term rewriting system is non-overlaping or locally confluent overlay system. Therefore, innermost termination implies termination.
 

Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 AND(not(not(x)),y,not(z)) -> AND(y,band(x,z),x)
-> Rules:
 and(not(not(x)),y,not(z)) -> and(y,band(x,z),x)

Problem 1: 

SCC Processor:
-> Pairs:
 AND(not(not(x)),y,not(z)) -> AND(y,band(x,z),x)
-> Rules:
 and(not(not(x)),y,not(z)) -> and(y,band(x,z),x)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AND(not(not(x)),y,not(z)) -> AND(y,band(x,z),x)
->->-> Rules:
 and(not(not(x)),y,not(z)) -> and(y,band(x,z),x)

Problem 1: 

Reduction Pairs Processor:
-> Pairs:
 AND(not(not(x)),y,not(z)) -> AND(y,band(x,z),x)
-> Rules:
 and(not(not(x)),y,not(z)) -> and(y,band(x,z),x)
-> Usable rules:
 Empty
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[and](X1,X2,X3) = 0
[band](X1,X2) = 2.X1 + 2.X2 + 2
[fSNonEmpty] = 0
[not](X) = 2.X + 2
[AND](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3

Problem 1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 and(not(not(x)),y,not(z)) -> and(y,band(x,z),x)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
