YES

Problem 1: 

(VAR vu95NonEmpty x y z)
(RULES
u42(x,num0) -> num0
u42(x,s(y)) -> u43(u42(x,y),x)
u45(s(x),s(y)) -> u45(x,y)
u45(x,num0) -> x
f(x,num0,z) -> z
f(x,s(y),z) -> if(odd(s(y)),f(x,y,u42(x,z)),f(u42(x,x),half(s(y)),z))
half(num0) -> num0
half(s(num0)) -> num0
half(s(s(x))) -> s(half(x))
if(ffalse,x,y) -> ffalse
if(ffalse,x,y) -> y
if(ftrue,x,y) -> ftrue
if(ftrue,x,y) -> x
odd(num0) -> ffalse
odd(s(num0)) -> ftrue
odd(s(s(x))) -> odd(x)
pow(x,y) -> f(x,y,s(num0))
)


Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 U42(x,s(y)) -> U42(x,y)
 U45(s(x),s(y)) -> U45(x,y)
 F(x,s(y),z) -> U42(x,x)
 F(x,s(y),z) -> U42(x,z)
 F(x,s(y),z) -> F(u42(x,x),half(s(y)),z)
 F(x,s(y),z) -> F(x,y,u42(x,z))
 F(x,s(y),z) -> HALF(s(y))
 F(x,s(y),z) -> IF(odd(s(y)),f(x,y,u42(x,z)),f(u42(x,x),half(s(y)),z))
 F(x,s(y),z) -> ODD(s(y))
 HALF(s(s(x))) -> HALF(x)
 ODD(s(s(x))) -> ODD(x)
 POW(x,y) -> F(x,y,s(num0))
-> Rules:
 u42(x,num0) -> num0
 u42(x,s(y)) -> u43(u42(x,y),x)
 u45(s(x),s(y)) -> u45(x,y)
 u45(x,num0) -> x
 f(x,num0,z) -> z
 f(x,s(y),z) -> if(odd(s(y)),f(x,y,u42(x,z)),f(u42(x,x),half(s(y)),z))
 half(num0) -> num0
 half(s(num0)) -> num0
 half(s(s(x))) -> s(half(x))
 if(ffalse,x,y) -> ffalse
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> ftrue
 if(ftrue,x,y) -> x
 odd(num0) -> ffalse
 odd(s(num0)) -> ftrue
 odd(s(s(x))) -> odd(x)
 pow(x,y) -> f(x,y,s(num0))

Problem 1: 

SCC Processor:
-> Pairs:
 U42(x,s(y)) -> U42(x,y)
 U45(s(x),s(y)) -> U45(x,y)
 F(x,s(y),z) -> U42(x,x)
 F(x,s(y),z) -> U42(x,z)
 F(x,s(y),z) -> F(u42(x,x),half(s(y)),z)
 F(x,s(y),z) -> F(x,y,u42(x,z))
 F(x,s(y),z) -> HALF(s(y))
 F(x,s(y),z) -> IF(odd(s(y)),f(x,y,u42(x,z)),f(u42(x,x),half(s(y)),z))
 F(x,s(y),z) -> ODD(s(y))
 HALF(s(s(x))) -> HALF(x)
 ODD(s(s(x))) -> ODD(x)
 POW(x,y) -> F(x,y,s(num0))
-> Rules:
 u42(x,num0) -> num0
 u42(x,s(y)) -> u43(u42(x,y),x)
 u45(s(x),s(y)) -> u45(x,y)
 u45(x,num0) -> x
 f(x,num0,z) -> z
 f(x,s(y),z) -> if(odd(s(y)),f(x,y,u42(x,z)),f(u42(x,x),half(s(y)),z))
 half(num0) -> num0
 half(s(num0)) -> num0
 half(s(s(x))) -> s(half(x))
 if(ffalse,x,y) -> ffalse
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> ftrue
 if(ftrue,x,y) -> x
 odd(num0) -> ffalse
 odd(s(num0)) -> ftrue
 odd(s(s(x))) -> odd(x)
 pow(x,y) -> f(x,y,s(num0))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ODD(s(s(x))) -> ODD(x)
->->-> Rules:
 u42(x,num0) -> num0
 u42(x,s(y)) -> u43(u42(x,y),x)
 u45(s(x),s(y)) -> u45(x,y)
 u45(x,num0) -> x
 f(x,num0,z) -> z
 f(x,s(y),z) -> if(odd(s(y)),f(x,y,u42(x,z)),f(u42(x,x),half(s(y)),z))
 half(num0) -> num0
 half(s(num0)) -> num0
 half(s(s(x))) -> s(half(x))
 if(ffalse,x,y) -> ffalse
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> ftrue
 if(ftrue,x,y) -> x
 odd(num0) -> ffalse
 odd(s(num0)) -> ftrue
 odd(s(s(x))) -> odd(x)
 pow(x,y) -> f(x,y,s(num0))
->->Cycle:
->->-> Pairs:
 HALF(s(s(x))) -> HALF(x)
->->-> Rules:
 u42(x,num0) -> num0
 u42(x,s(y)) -> u43(u42(x,y),x)
 u45(s(x),s(y)) -> u45(x,y)
 u45(x,num0) -> x
 f(x,num0,z) -> z
 f(x,s(y),z) -> if(odd(s(y)),f(x,y,u42(x,z)),f(u42(x,x),half(s(y)),z))
 half(num0) -> num0
 half(s(num0)) -> num0
 half(s(s(x))) -> s(half(x))
 if(ffalse,x,y) -> ffalse
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> ftrue
 if(ftrue,x,y) -> x
 odd(num0) -> ffalse
 odd(s(num0)) -> ftrue
 odd(s(s(x))) -> odd(x)
 pow(x,y) -> f(x,y,s(num0))
->->Cycle:
->->-> Pairs:
 U45(s(x),s(y)) -> U45(x,y)
->->-> Rules:
 u42(x,num0) -> num0
 u42(x,s(y)) -> u43(u42(x,y),x)
 u45(s(x),s(y)) -> u45(x,y)
 u45(x,num0) -> x
 f(x,num0,z) -> z
 f(x,s(y),z) -> if(odd(s(y)),f(x,y,u42(x,z)),f(u42(x,x),half(s(y)),z))
 half(num0) -> num0
 half(s(num0)) -> num0
 half(s(s(x))) -> s(half(x))
 if(ffalse,x,y) -> ffalse
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> ftrue
 if(ftrue,x,y) -> x
 odd(num0) -> ffalse
 odd(s(num0)) -> ftrue
 odd(s(s(x))) -> odd(x)
 pow(x,y) -> f(x,y,s(num0))
->->Cycle:
->->-> Pairs:
 U42(x,s(y)) -> U42(x,y)
->->-> Rules:
 u42(x,num0) -> num0
 u42(x,s(y)) -> u43(u42(x,y),x)
 u45(s(x),s(y)) -> u45(x,y)
 u45(x,num0) -> x
 f(x,num0,z) -> z
 f(x,s(y),z) -> if(odd(s(y)),f(x,y,u42(x,z)),f(u42(x,x),half(s(y)),z))
 half(num0) -> num0
 half(s(num0)) -> num0
 half(s(s(x))) -> s(half(x))
 if(ffalse,x,y) -> ffalse
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> ftrue
 if(ftrue,x,y) -> x
 odd(num0) -> ffalse
 odd(s(num0)) -> ftrue
 odd(s(s(x))) -> odd(x)
 pow(x,y) -> f(x,y,s(num0))
->->Cycle:
->->-> Pairs:
 F(x,s(y),z) -> F(u42(x,x),half(s(y)),z)
 F(x,s(y),z) -> F(x,y,u42(x,z))
->->-> Rules:
 u42(x,num0) -> num0
 u42(x,s(y)) -> u43(u42(x,y),x)
 u45(s(x),s(y)) -> u45(x,y)
 u45(x,num0) -> x
 f(x,num0,z) -> z
 f(x,s(y),z) -> if(odd(s(y)),f(x,y,u42(x,z)),f(u42(x,x),half(s(y)),z))
 half(num0) -> num0
 half(s(num0)) -> num0
 half(s(s(x))) -> s(half(x))
 if(ffalse,x,y) -> ffalse
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> ftrue
 if(ftrue,x,y) -> x
 odd(num0) -> ffalse
 odd(s(num0)) -> ftrue
 odd(s(s(x))) -> odd(x)
 pow(x,y) -> f(x,y,s(num0))


The problem is decomposed in 5 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 ODD(s(s(x))) -> ODD(x)
-> Rules:
 u42(x,num0) -> num0
 u42(x,s(y)) -> u43(u42(x,y),x)
 u45(s(x),s(y)) -> u45(x,y)
 u45(x,num0) -> x
 f(x,num0,z) -> z
 f(x,s(y),z) -> if(odd(s(y)),f(x,y,u42(x,z)),f(u42(x,x),half(s(y)),z))
 half(num0) -> num0
 half(s(num0)) -> num0
 half(s(s(x))) -> s(half(x))
 if(ffalse,x,y) -> ffalse
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> ftrue
 if(ftrue,x,y) -> x
 odd(num0) -> ffalse
 odd(s(num0)) -> ftrue
 odd(s(s(x))) -> odd(x)
 pow(x,y) -> f(x,y,s(num0))
->Projection:
 pi(ODD) = 1

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 u42(x,num0) -> num0
 u42(x,s(y)) -> u43(u42(x,y),x)
 u45(s(x),s(y)) -> u45(x,y)
 u45(x,num0) -> x
 f(x,num0,z) -> z
 f(x,s(y),z) -> if(odd(s(y)),f(x,y,u42(x,z)),f(u42(x,x),half(s(y)),z))
 half(num0) -> num0
 half(s(num0)) -> num0
 half(s(s(x))) -> s(half(x))
 if(ffalse,x,y) -> ffalse
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> ftrue
 if(ftrue,x,y) -> x
 odd(num0) -> ffalse
 odd(s(num0)) -> ftrue
 odd(s(s(x))) -> odd(x)
 pow(x,y) -> f(x,y,s(num0))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Subterm Processor:
-> Pairs:
 HALF(s(s(x))) -> HALF(x)
-> Rules:
 u42(x,num0) -> num0
 u42(x,s(y)) -> u43(u42(x,y),x)
 u45(s(x),s(y)) -> u45(x,y)
 u45(x,num0) -> x
 f(x,num0,z) -> z
 f(x,s(y),z) -> if(odd(s(y)),f(x,y,u42(x,z)),f(u42(x,x),half(s(y)),z))
 half(num0) -> num0
 half(s(num0)) -> num0
 half(s(s(x))) -> s(half(x))
 if(ffalse,x,y) -> ffalse
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> ftrue
 if(ftrue,x,y) -> x
 odd(num0) -> ffalse
 odd(s(num0)) -> ftrue
 odd(s(s(x))) -> odd(x)
 pow(x,y) -> f(x,y,s(num0))
->Projection:
 pi(HALF) = 1

Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 u42(x,num0) -> num0
 u42(x,s(y)) -> u43(u42(x,y),x)
 u45(s(x),s(y)) -> u45(x,y)
 u45(x,num0) -> x
 f(x,num0,z) -> z
 f(x,s(y),z) -> if(odd(s(y)),f(x,y,u42(x,z)),f(u42(x,x),half(s(y)),z))
 half(num0) -> num0
 half(s(num0)) -> num0
 half(s(s(x))) -> s(half(x))
 if(ffalse,x,y) -> ffalse
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> ftrue
 if(ftrue,x,y) -> x
 odd(num0) -> ffalse
 odd(s(num0)) -> ftrue
 odd(s(s(x))) -> odd(x)
 pow(x,y) -> f(x,y,s(num0))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Subterm Processor:
-> Pairs:
 U45(s(x),s(y)) -> U45(x,y)
-> Rules:
 u42(x,num0) -> num0
 u42(x,s(y)) -> u43(u42(x,y),x)
 u45(s(x),s(y)) -> u45(x,y)
 u45(x,num0) -> x
 f(x,num0,z) -> z
 f(x,s(y),z) -> if(odd(s(y)),f(x,y,u42(x,z)),f(u42(x,x),half(s(y)),z))
 half(num0) -> num0
 half(s(num0)) -> num0
 half(s(s(x))) -> s(half(x))
 if(ffalse,x,y) -> ffalse
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> ftrue
 if(ftrue,x,y) -> x
 odd(num0) -> ffalse
 odd(s(num0)) -> ftrue
 odd(s(s(x))) -> odd(x)
 pow(x,y) -> f(x,y,s(num0))
->Projection:
 pi(U45) = 1

Problem 1.3: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 u42(x,num0) -> num0
 u42(x,s(y)) -> u43(u42(x,y),x)
 u45(s(x),s(y)) -> u45(x,y)
 u45(x,num0) -> x
 f(x,num0,z) -> z
 f(x,s(y),z) -> if(odd(s(y)),f(x,y,u42(x,z)),f(u42(x,x),half(s(y)),z))
 half(num0) -> num0
 half(s(num0)) -> num0
 half(s(s(x))) -> s(half(x))
 if(ffalse,x,y) -> ffalse
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> ftrue
 if(ftrue,x,y) -> x
 odd(num0) -> ffalse
 odd(s(num0)) -> ftrue
 odd(s(s(x))) -> odd(x)
 pow(x,y) -> f(x,y,s(num0))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.4: 

Subterm Processor:
-> Pairs:
 U42(x,s(y)) -> U42(x,y)
-> Rules:
 u42(x,num0) -> num0
 u42(x,s(y)) -> u43(u42(x,y),x)
 u45(s(x),s(y)) -> u45(x,y)
 u45(x,num0) -> x
 f(x,num0,z) -> z
 f(x,s(y),z) -> if(odd(s(y)),f(x,y,u42(x,z)),f(u42(x,x),half(s(y)),z))
 half(num0) -> num0
 half(s(num0)) -> num0
 half(s(s(x))) -> s(half(x))
 if(ffalse,x,y) -> ffalse
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> ftrue
 if(ftrue,x,y) -> x
 odd(num0) -> ffalse
 odd(s(num0)) -> ftrue
 odd(s(s(x))) -> odd(x)
 pow(x,y) -> f(x,y,s(num0))
->Projection:
 pi(U42) = 2

Problem 1.4: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 u42(x,num0) -> num0
 u42(x,s(y)) -> u43(u42(x,y),x)
 u45(s(x),s(y)) -> u45(x,y)
 u45(x,num0) -> x
 f(x,num0,z) -> z
 f(x,s(y),z) -> if(odd(s(y)),f(x,y,u42(x,z)),f(u42(x,x),half(s(y)),z))
 half(num0) -> num0
 half(s(num0)) -> num0
 half(s(s(x))) -> s(half(x))
 if(ffalse,x,y) -> ffalse
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> ftrue
 if(ftrue,x,y) -> x
 odd(num0) -> ffalse
 odd(s(num0)) -> ftrue
 odd(s(s(x))) -> odd(x)
 pow(x,y) -> f(x,y,s(num0))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.5: 

Reduction Pair Processor:
-> Pairs:
 F(x,s(y),z) -> F(u42(x,x),half(s(y)),z)
 F(x,s(y),z) -> F(x,y,u42(x,z))
-> Rules:
 u42(x,num0) -> num0
 u42(x,s(y)) -> u43(u42(x,y),x)
 u45(s(x),s(y)) -> u45(x,y)
 u45(x,num0) -> x
 f(x,num0,z) -> z
 f(x,s(y),z) -> if(odd(s(y)),f(x,y,u42(x,z)),f(u42(x,x),half(s(y)),z))
 half(num0) -> num0
 half(s(num0)) -> num0
 half(s(s(x))) -> s(half(x))
 if(ffalse,x,y) -> ffalse
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> ftrue
 if(ftrue,x,y) -> x
 odd(num0) -> ffalse
 odd(s(num0)) -> ftrue
 odd(s(s(x))) -> odd(x)
 pow(x,y) -> f(x,y,s(num0))
-> Usable rules:
 u42(x,num0) -> num0
 u42(x,s(y)) -> u43(u42(x,y),x)
 half(num0) -> num0
 half(s(num0)) -> num0
 half(s(s(x))) -> s(half(x))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[u42](X1,X2) = 2.X1 + 2.X2 + 2
[u45](X1,X2) = 0
[f](X1,X2,X3) = 0
[half](X) = X
[if](X1,X2,X3) = 0
[odd](X) = 0
[pow](X1,X2) = 0
[u43](X1,X2) = X2 + 2
[num0] = 1
[fSNonEmpty] = 0
[ffalse] = 0
[s](X) = 2.X + 2
[ftrue] = 0
[U42](X1,X2) = 0
[U45](X1,X2) = 0
[F](X1,X2,X3) = 2.X2
[HALF](X) = 0
[IF](X1,X2,X3) = 0
[ODD](X) = 0
[POW](X1,X2) = 0

Problem 1.5: 

SCC Processor:
-> Pairs:
 F(x,s(y),z) -> F(u42(x,x),half(s(y)),z)
-> Rules:
 u42(x,num0) -> num0
 u42(x,s(y)) -> u43(u42(x,y),x)
 u45(s(x),s(y)) -> u45(x,y)
 u45(x,num0) -> x
 f(x,num0,z) -> z
 f(x,s(y),z) -> if(odd(s(y)),f(x,y,u42(x,z)),f(u42(x,x),half(s(y)),z))
 half(num0) -> num0
 half(s(num0)) -> num0
 half(s(s(x))) -> s(half(x))
 if(ffalse,x,y) -> ffalse
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> ftrue
 if(ftrue,x,y) -> x
 odd(num0) -> ffalse
 odd(s(num0)) -> ftrue
 odd(s(s(x))) -> odd(x)
 pow(x,y) -> f(x,y,s(num0))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 F(x,s(y),z) -> F(u42(x,x),half(s(y)),z)
->->-> Rules:
 u42(x,num0) -> num0
 u42(x,s(y)) -> u43(u42(x,y),x)
 u45(s(x),s(y)) -> u45(x,y)
 u45(x,num0) -> x
 f(x,num0,z) -> z
 f(x,s(y),z) -> if(odd(s(y)),f(x,y,u42(x,z)),f(u42(x,x),half(s(y)),z))
 half(num0) -> num0
 half(s(num0)) -> num0
 half(s(s(x))) -> s(half(x))
 if(ffalse,x,y) -> ffalse
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> ftrue
 if(ftrue,x,y) -> x
 odd(num0) -> ffalse
 odd(s(num0)) -> ftrue
 odd(s(s(x))) -> odd(x)
 pow(x,y) -> f(x,y,s(num0))

Problem 1.5: 

Reduction Pair Processor:
-> Pairs:
 F(x,s(y),z) -> F(u42(x,x),half(s(y)),z)
-> Rules:
 u42(x,num0) -> num0
 u42(x,s(y)) -> u43(u42(x,y),x)
 u45(s(x),s(y)) -> u45(x,y)
 u45(x,num0) -> x
 f(x,num0,z) -> z
 f(x,s(y),z) -> if(odd(s(y)),f(x,y,u42(x,z)),f(u42(x,x),half(s(y)),z))
 half(num0) -> num0
 half(s(num0)) -> num0
 half(s(s(x))) -> s(half(x))
 if(ffalse,x,y) -> ffalse
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> ftrue
 if(ftrue,x,y) -> x
 odd(num0) -> ffalse
 odd(s(num0)) -> ftrue
 odd(s(s(x))) -> odd(x)
 pow(x,y) -> f(x,y,s(num0))
-> Usable rules:
 u42(x,num0) -> num0
 u42(x,s(y)) -> u43(u42(x,y),x)
 half(num0) -> num0
 half(s(num0)) -> num0
 half(s(s(x))) -> s(half(x))
->Interpretation type:
 Linear
->Coefficients:
 All rationals
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[u42](X1,X2) = 0
[u45](X1,X2) = 0
[f](X1,X2,X3) = 0
[half](X) = 1/2.X
[if](X1,X2,X3) = 0
[odd](X) = 0
[pow](X1,X2) = 0
[u43](X1,X2) = 0
[num0] = 0
[fSNonEmpty] = 0
[ffalse] = 0
[s](X) = 2.X + 2
[ftrue] = 0
[U42](X1,X2) = 0
[U45](X1,X2) = 0
[F](X1,X2,X3) = 2.X2
[HALF](X) = 0
[IF](X1,X2,X3) = 0
[ODD](X) = 0
[POW](X1,X2) = 0

Problem 1.5: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 u42(x,num0) -> num0
 u42(x,s(y)) -> u43(u42(x,y),x)
 u45(s(x),s(y)) -> u45(x,y)
 u45(x,num0) -> x
 f(x,num0,z) -> z
 f(x,s(y),z) -> if(odd(s(y)),f(x,y,u42(x,z)),f(u42(x,x),half(s(y)),z))
 half(num0) -> num0
 half(s(num0)) -> num0
 half(s(s(x))) -> s(half(x))
 if(ffalse,x,y) -> ffalse
 if(ffalse,x,y) -> y
 if(ftrue,x,y) -> ftrue
 if(ftrue,x,y) -> x
 odd(num0) -> ffalse
 odd(s(num0)) -> ftrue
 odd(s(s(x))) -> odd(x)
 pow(x,y) -> f(x,y,s(num0))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
