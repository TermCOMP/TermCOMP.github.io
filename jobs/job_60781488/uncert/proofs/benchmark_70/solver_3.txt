YES

Problem 1: 

(VAR vu95NonEmpty f x xs)
(RULES
app(app(mapt,f),app(leaf,x)) -> app(leaf,app(f,x))
app(app(mapt,f),app(node,xs)) -> app(node,app(app(maptlist,f),xs))
app(app(maptlist,f),app(app(cons,x),xs)) -> app(app(cons,app(app(mapt,f),x)),app(app(maptlist,f),xs))
app(app(maptlist,f),nil) -> nil
)


Problem 1: 

Innermost Equivalent Processor:
-> Rules:
 app(app(mapt,f),app(leaf,x)) -> app(leaf,app(f,x))
 app(app(mapt,f),app(node,xs)) -> app(node,app(app(maptlist,f),xs))
 app(app(maptlist,f),app(app(cons,x),xs)) -> app(app(cons,app(app(mapt,f),x)),app(app(maptlist,f),xs))
 app(app(maptlist,f),nil) -> nil
-> The term rewriting system is non-overlaping or locally confluent overlay system. Therefore, innermost termination implies termination.
 

Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 APP(app(mapt,f),app(leaf,x)) -> APP(leaf,app(f,x))
 APP(app(mapt,f),app(leaf,x)) -> APP(f,x)
 APP(app(mapt,f),app(node,xs)) -> APP(app(maptlist,f),xs)
 APP(app(mapt,f),app(node,xs)) -> APP(node,app(app(maptlist,f),xs))
 APP(app(maptlist,f),app(app(cons,x),xs)) -> APP(app(cons,app(app(mapt,f),x)),app(app(maptlist,f),xs))
 APP(app(maptlist,f),app(app(cons,x),xs)) -> APP(app(mapt,f),x)
 APP(app(maptlist,f),app(app(cons,x),xs)) -> APP(app(maptlist,f),xs)
 APP(app(maptlist,f),app(app(cons,x),xs)) -> APP(cons,app(app(mapt,f),x))
-> Rules:
 app(app(mapt,f),app(leaf,x)) -> app(leaf,app(f,x))
 app(app(mapt,f),app(node,xs)) -> app(node,app(app(maptlist,f),xs))
 app(app(maptlist,f),app(app(cons,x),xs)) -> app(app(cons,app(app(mapt,f),x)),app(app(maptlist,f),xs))
 app(app(maptlist,f),nil) -> nil

Problem 1: 

SCC Processor:
-> Pairs:
 APP(app(mapt,f),app(leaf,x)) -> APP(leaf,app(f,x))
 APP(app(mapt,f),app(leaf,x)) -> APP(f,x)
 APP(app(mapt,f),app(node,xs)) -> APP(app(maptlist,f),xs)
 APP(app(mapt,f),app(node,xs)) -> APP(node,app(app(maptlist,f),xs))
 APP(app(maptlist,f),app(app(cons,x),xs)) -> APP(app(cons,app(app(mapt,f),x)),app(app(maptlist,f),xs))
 APP(app(maptlist,f),app(app(cons,x),xs)) -> APP(app(mapt,f),x)
 APP(app(maptlist,f),app(app(cons,x),xs)) -> APP(app(maptlist,f),xs)
 APP(app(maptlist,f),app(app(cons,x),xs)) -> APP(cons,app(app(mapt,f),x))
-> Rules:
 app(app(mapt,f),app(leaf,x)) -> app(leaf,app(f,x))
 app(app(mapt,f),app(node,xs)) -> app(node,app(app(maptlist,f),xs))
 app(app(maptlist,f),app(app(cons,x),xs)) -> app(app(cons,app(app(mapt,f),x)),app(app(maptlist,f),xs))
 app(app(maptlist,f),nil) -> nil
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 APP(app(mapt,f),app(leaf,x)) -> APP(f,x)
 APP(app(mapt,f),app(node,xs)) -> APP(app(maptlist,f),xs)
 APP(app(maptlist,f),app(app(cons,x),xs)) -> APP(app(mapt,f),x)
 APP(app(maptlist,f),app(app(cons,x),xs)) -> APP(app(maptlist,f),xs)
->->-> Rules:
 app(app(mapt,f),app(leaf,x)) -> app(leaf,app(f,x))
 app(app(mapt,f),app(node,xs)) -> app(node,app(app(maptlist,f),xs))
 app(app(maptlist,f),app(app(cons,x),xs)) -> app(app(cons,app(app(mapt,f),x)),app(app(maptlist,f),xs))
 app(app(maptlist,f),nil) -> nil

Problem 1: 

Subterm Processor:
-> Pairs:
 APP(app(mapt,f),app(leaf,x)) -> APP(f,x)
 APP(app(mapt,f),app(node,xs)) -> APP(app(maptlist,f),xs)
 APP(app(maptlist,f),app(app(cons,x),xs)) -> APP(app(mapt,f),x)
 APP(app(maptlist,f),app(app(cons,x),xs)) -> APP(app(maptlist,f),xs)
-> Rules:
 app(app(mapt,f),app(leaf,x)) -> app(leaf,app(f,x))
 app(app(mapt,f),app(node,xs)) -> app(node,app(app(maptlist,f),xs))
 app(app(maptlist,f),app(app(cons,x),xs)) -> app(app(cons,app(app(mapt,f),x)),app(app(maptlist,f),xs))
 app(app(maptlist,f),nil) -> nil
->Projection:
 pi(APP) = 2

Problem 1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 app(app(mapt,f),app(leaf,x)) -> app(leaf,app(f,x))
 app(app(mapt,f),app(node,xs)) -> app(node,app(app(maptlist,f),xs))
 app(app(maptlist,f),app(app(cons,x),xs)) -> app(app(cons,app(app(mapt,f),x)),app(app(maptlist,f),xs))
 app(app(maptlist,f),nil) -> nil
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
