YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/TGs2w.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 0 ms]
(2) QDP
(3) DependencyGraphProof [EQUIVALENT, 0 ms]
(4) QDP
(5) QDPOrderProof [EQUIVALENT, 329 ms]
(6) QDP
(7) UsableRulesProof [EQUIVALENT, 0 ms]
(8) QDP
(9) QDPSizeChangeProof [EQUIVALENT, 0 ms]
(10) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   b(a, f(b(b(z, y), a))) -> z
   c(c(z, x, a), a, y) -> f(f(c(y, a, f(c(z, y, x)))))
   f(f(c(a, y, z))) -> b(y, b(z, z))

Q is empty.

----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C(c(z, x, a), a, y) -> F(f(c(y, a, f(c(z, y, x)))))
   C(c(z, x, a), a, y) -> F(c(y, a, f(c(z, y, x))))
   C(c(z, x, a), a, y) -> C(y, a, f(c(z, y, x)))
   C(c(z, x, a), a, y) -> F(c(z, y, x))
   C(c(z, x, a), a, y) -> C(z, y, x)
   F(f(c(a, y, z))) -> B(y, b(z, z))
   F(f(c(a, y, z))) -> B(z, z)

The TRS R consists of the following rules:

   b(a, f(b(b(z, y), a))) -> z
   c(c(z, x, a), a, y) -> f(f(c(y, a, f(c(z, y, x)))))
   f(f(c(a, y, z))) -> b(y, b(z, z))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 5 less nodes.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C(c(z, x, a), a, y) -> C(z, y, x)
   C(c(z, x, a), a, y) -> C(y, a, f(c(z, y, x)))

The TRS R consists of the following rules:

   b(a, f(b(b(z, y), a))) -> z
   c(c(z, x, a), a, y) -> f(f(c(y, a, f(c(z, y, x)))))
   f(f(c(a, y, z))) -> b(y, b(z, z))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   C(c(z, x, a), a, y) -> C(y, a, f(c(z, y, x)))
The remaining pairs can at least be oriented weakly.
Used ordering:  Matrix interpretation [MATRO] with arctic natural numbers [ARCTIC]:

   <<<
 POL(C(x_1, x_2, x_3)) =  	[[-I]] 	 +  	[[0A, -I, -I]] 	* 	x_1 	 +  	[[-I, -I, -I]] 	* 	x_2 	 +  	[[1A, -I, -I]] 	* 	x_3
>>>

   <<<
 POL(c(x_1, x_2, x_3)) =  	[[0A], [0A], [-I]] 	 +  	[[0A, -I, -I], [-I, -I, -I], [-I, -I, -I]] 	* 	x_1 	 +  	[[1A, -I, -I], [-I, -I, -I], [0A, 1A, 0A]] 	* 	x_2 	 +  	[[-I, 0A, 3A], [-I, -I, -I], [0A, -I, -I]] 	* 	x_3
>>>

   <<<
 POL(a) =  	[[0A], [-I], [0A]]
>>>

   <<<
 POL(f(x_1)) =  	[[0A], [-I], [-I]] 	 +  	[[-I, 0A, -I], [-I, -I, 0A], [-I, -I, 0A]] 	* 	x_1
>>>

   <<<
 POL(b(x_1, x_2)) =  	[[-I], [-I], [-I]] 	 +  	[[0A, -I, -I], [0A, 0A, 0A], [0A, -I, -I]] 	* 	x_1 	 +  	[[0A, -I, -I], [0A, -I, 0A], [0A, -I, -I]] 	* 	x_2
>>>


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   c(c(z, x, a), a, y) -> f(f(c(y, a, f(c(z, y, x)))))
   f(f(c(a, y, z))) -> b(y, b(z, z))
   b(a, f(b(b(z, y), a))) -> z


----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C(c(z, x, a), a, y) -> C(z, y, x)

The TRS R consists of the following rules:

   b(a, f(b(b(z, y), a))) -> z
   c(c(z, x, a), a, y) -> f(f(c(y, a, f(c(z, y, x)))))
   f(f(c(a, y, z))) -> b(y, b(z, z))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C(c(z, x, a), a, y) -> C(z, y, x)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*C(c(z, x, a), a, y) -> C(z, y, x)
The graph contains the following edges 1 > 1, 3 >= 2, 1 > 3


----------------------------------------

(10)
YES
