YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/AYihU.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 0 ms]
(2) QDP
(3) DependencyGraphProof [EQUIVALENT, 0 ms]
(4) QDP
(5) TransformationProof [EQUIVALENT, 0 ms]
(6) QDP
(7) DependencyGraphProof [EQUIVALENT, 0 ms]
(8) AND
    (9) QDP
        (10) TransformationProof [EQUIVALENT, 0 ms]
        (11) QDP
        (12) DependencyGraphProof [EQUIVALENT, 0 ms]
        (13) QDP
        (14) TransformationProof [EQUIVALENT, 0 ms]
        (15) QDP
        (16) DependencyGraphProof [EQUIVALENT, 0 ms]
        (17) QDP
        (18) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (19) YES
    (20) QDP
        (21) QDPOrderProof [EQUIVALENT, 43 ms]
        (22) QDP
        (23) QDPOrderProof [EQUIVALENT, 25 ms]
        (24) QDP
        (25) DependencyGraphProof [EQUIVALENT, 0 ms]
        (26) AND
            (27) QDP
                (28) QDPOrderProof [EQUIVALENT, 3493 ms]
                (29) QDP
                (30) DependencyGraphProof [EQUIVALENT, 0 ms]
                (31) QDP
                (32) UsableRulesProof [EQUIVALENT, 0 ms]
                (33) QDP
                (34) QDPSizeChangeProof [EQUIVALENT, 0 ms]
                (35) YES
            (36) QDP
                (37) UsableRulesProof [EQUIVALENT, 0 ms]
                (38) QDP
                (39) QDPSizeChangeProof [EQUIVALENT, 0 ms]
                (40) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(g(x)) -> g(g(f(x)))
   g(s(x)) -> s(s(g(x)))
   s(x) -> h(0, x)
   s(x) -> h(x, 0)
   f(0) -> 0
   s(s(s(0))) -> f(s(0))
   f(s(0)) -> s(0)
   h(f(x), g(x)) -> f(s(x))
   g(x) -> h(h(h(h(x, x), x), x), x)
   f(s(s(x))) -> h(f(x), g(h(x, x)))
   s(0) -> r(0)
   s(s(s(0))) -> r(s(0))
   r(s(0)) -> s(0)
   g(x) -> r(x)
   s(0) -> p(0)
   s(s(0)) -> p(s(0))
   p(s(0)) -> 0
   s(s(s(s(s(0))))) -> p(s(s(0)))
   p(s(s(0))) -> s(s(s(0)))
   h(p(x), g(x)) -> p(s(x))
   s(0) -> k(0)
   s(s(p(p(a)))) -> s(k(p(a)))
   s(k(p(a))) -> p(p(a))
   g(x) -> k(x)
   a -> 0
   s(h(r(k(p(x))), r(x))) -> h(r(r(p(x))), k(x))

Q is empty.

----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(g(x)) -> G(g(f(x)))
   F(g(x)) -> G(f(x))
   F(g(x)) -> F(x)
   G(s(x)) -> S(s(g(x)))
   G(s(x)) -> S(g(x))
   G(s(x)) -> G(x)
   S(x) -> H(0, x)
   S(x) -> H(x, 0)
   S(s(s(0))) -> F(s(0))
   H(f(x), g(x)) -> F(s(x))
   H(f(x), g(x)) -> S(x)
   G(x) -> H(h(h(h(x, x), x), x), x)
   G(x) -> H(h(h(x, x), x), x)
   G(x) -> H(h(x, x), x)
   G(x) -> H(x, x)
   F(s(s(x))) -> H(f(x), g(h(x, x)))
   F(s(s(x))) -> F(x)
   F(s(s(x))) -> G(h(x, x))
   F(s(s(x))) -> H(x, x)
   S(0) -> R(0)
   S(s(s(0))) -> R(s(0))
   G(x) -> R(x)
   S(0) -> P(0)
   S(s(0)) -> P(s(0))
   S(s(s(s(s(0))))) -> P(s(s(0)))
   P(s(s(0))) -> S(s(s(0)))
   H(p(x), g(x)) -> P(s(x))
   H(p(x), g(x)) -> S(x)
   S(s(p(p(a)))) -> S(k(p(a)))
   S(k(p(a))) -> P(p(a))
   S(h(r(k(p(x))), r(x))) -> H(r(r(p(x))), k(x))
   S(h(r(k(p(x))), r(x))) -> R(r(p(x)))
   S(h(r(k(p(x))), r(x))) -> R(p(x))

The TRS R consists of the following rules:

   f(g(x)) -> g(g(f(x)))
   g(s(x)) -> s(s(g(x)))
   s(x) -> h(0, x)
   s(x) -> h(x, 0)
   f(0) -> 0
   s(s(s(0))) -> f(s(0))
   f(s(0)) -> s(0)
   h(f(x), g(x)) -> f(s(x))
   g(x) -> h(h(h(h(x, x), x), x), x)
   f(s(s(x))) -> h(f(x), g(h(x, x)))
   s(0) -> r(0)
   s(s(s(0))) -> r(s(0))
   r(s(0)) -> s(0)
   g(x) -> r(x)
   s(0) -> p(0)
   s(s(0)) -> p(s(0))
   p(s(0)) -> 0
   s(s(s(s(s(0))))) -> p(s(s(0)))
   p(s(s(0))) -> s(s(s(0)))
   h(p(x), g(x)) -> p(s(x))
   s(0) -> k(0)
   s(s(p(p(a)))) -> s(k(p(a)))
   s(k(p(a))) -> p(p(a))
   g(x) -> k(x)
   a -> 0
   s(h(r(k(p(x))), r(x))) -> h(r(r(p(x))), k(x))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 9 less nodes.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   G(s(x)) -> S(s(g(x)))
   S(s(s(0))) -> F(s(0))
   F(g(x)) -> G(g(f(x)))
   G(s(x)) -> S(g(x))
   S(s(0)) -> P(s(0))
   P(s(s(0))) -> S(s(s(0)))
   S(s(s(s(s(0))))) -> P(s(s(0)))
   S(s(p(p(a)))) -> S(k(p(a)))
   S(k(p(a))) -> P(p(a))
   G(s(x)) -> G(x)
   G(x) -> H(h(h(h(x, x), x), x), x)
   H(f(x), g(x)) -> F(s(x))
   F(g(x)) -> G(f(x))
   G(x) -> H(h(h(x, x), x), x)
   H(f(x), g(x)) -> S(x)
   H(p(x), g(x)) -> P(s(x))
   H(p(x), g(x)) -> S(x)
   G(x) -> H(h(x, x), x)
   G(x) -> H(x, x)
   F(g(x)) -> F(x)
   F(s(s(x))) -> H(f(x), g(h(x, x)))
   F(s(s(x))) -> F(x)
   F(s(s(x))) -> G(h(x, x))
   F(s(s(x))) -> H(x, x)

The TRS R consists of the following rules:

   f(g(x)) -> g(g(f(x)))
   g(s(x)) -> s(s(g(x)))
   s(x) -> h(0, x)
   s(x) -> h(x, 0)
   f(0) -> 0
   s(s(s(0))) -> f(s(0))
   f(s(0)) -> s(0)
   h(f(x), g(x)) -> f(s(x))
   g(x) -> h(h(h(h(x, x), x), x), x)
   f(s(s(x))) -> h(f(x), g(h(x, x)))
   s(0) -> r(0)
   s(s(s(0))) -> r(s(0))
   r(s(0)) -> s(0)
   g(x) -> r(x)
   s(0) -> p(0)
   s(s(0)) -> p(s(0))
   p(s(0)) -> 0
   s(s(s(s(s(0))))) -> p(s(s(0)))
   p(s(s(0))) -> s(s(s(0)))
   h(p(x), g(x)) -> p(s(x))
   s(0) -> k(0)
   s(s(p(p(a)))) -> s(k(p(a)))
   s(k(p(a))) -> p(p(a))
   g(x) -> k(x)
   a -> 0
   s(h(r(k(p(x))), r(x))) -> h(r(r(p(x))), k(x))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule S(s(s(0))) -> F(s(0)) at position [0] we obtained the following new rules [LPAR04]:

   (S(s(s(0))) -> F(h(0, 0)),S(s(s(0))) -> F(h(0, 0)))
   (S(s(s(0))) -> F(r(0)),S(s(s(0))) -> F(r(0)))
   (S(s(s(0))) -> F(p(0)),S(s(s(0))) -> F(p(0)))
   (S(s(s(0))) -> F(k(0)),S(s(s(0))) -> F(k(0)))


----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   G(s(x)) -> S(s(g(x)))
   F(g(x)) -> G(g(f(x)))
   G(s(x)) -> S(g(x))
   S(s(0)) -> P(s(0))
   P(s(s(0))) -> S(s(s(0)))
   S(s(s(s(s(0))))) -> P(s(s(0)))
   S(s(p(p(a)))) -> S(k(p(a)))
   S(k(p(a))) -> P(p(a))
   G(s(x)) -> G(x)
   G(x) -> H(h(h(h(x, x), x), x), x)
   H(f(x), g(x)) -> F(s(x))
   F(g(x)) -> G(f(x))
   G(x) -> H(h(h(x, x), x), x)
   H(f(x), g(x)) -> S(x)
   H(p(x), g(x)) -> P(s(x))
   H(p(x), g(x)) -> S(x)
   G(x) -> H(h(x, x), x)
   G(x) -> H(x, x)
   F(g(x)) -> F(x)
   F(s(s(x))) -> H(f(x), g(h(x, x)))
   F(s(s(x))) -> F(x)
   F(s(s(x))) -> G(h(x, x))
   F(s(s(x))) -> H(x, x)
   S(s(s(0))) -> F(h(0, 0))
   S(s(s(0))) -> F(r(0))
   S(s(s(0))) -> F(p(0))
   S(s(s(0))) -> F(k(0))

The TRS R consists of the following rules:

   f(g(x)) -> g(g(f(x)))
   g(s(x)) -> s(s(g(x)))
   s(x) -> h(0, x)
   s(x) -> h(x, 0)
   f(0) -> 0
   s(s(s(0))) -> f(s(0))
   f(s(0)) -> s(0)
   h(f(x), g(x)) -> f(s(x))
   g(x) -> h(h(h(h(x, x), x), x), x)
   f(s(s(x))) -> h(f(x), g(h(x, x)))
   s(0) -> r(0)
   s(s(s(0))) -> r(s(0))
   r(s(0)) -> s(0)
   g(x) -> r(x)
   s(0) -> p(0)
   s(s(0)) -> p(s(0))
   p(s(0)) -> 0
   s(s(s(s(s(0))))) -> p(s(s(0)))
   p(s(s(0))) -> s(s(s(0)))
   h(p(x), g(x)) -> p(s(x))
   s(0) -> k(0)
   s(s(p(p(a)))) -> s(k(p(a)))
   s(k(p(a))) -> p(p(a))
   g(x) -> k(x)
   a -> 0
   s(h(r(k(p(x))), r(x))) -> h(r(r(p(x))), k(x))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs with 9 less nodes.
----------------------------------------

(8)
Complex Obligation (AND)

----------------------------------------

(9)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   P(s(s(0))) -> S(s(s(0)))
   S(s(0)) -> P(s(0))
   S(s(s(s(s(0))))) -> P(s(s(0)))
   S(s(p(p(a)))) -> S(k(p(a)))
   S(k(p(a))) -> P(p(a))

The TRS R consists of the following rules:

   f(g(x)) -> g(g(f(x)))
   g(s(x)) -> s(s(g(x)))
   s(x) -> h(0, x)
   s(x) -> h(x, 0)
   f(0) -> 0
   s(s(s(0))) -> f(s(0))
   f(s(0)) -> s(0)
   h(f(x), g(x)) -> f(s(x))
   g(x) -> h(h(h(h(x, x), x), x), x)
   f(s(s(x))) -> h(f(x), g(h(x, x)))
   s(0) -> r(0)
   s(s(s(0))) -> r(s(0))
   r(s(0)) -> s(0)
   g(x) -> r(x)
   s(0) -> p(0)
   s(s(0)) -> p(s(0))
   p(s(0)) -> 0
   s(s(s(s(s(0))))) -> p(s(s(0)))
   p(s(s(0))) -> s(s(s(0)))
   h(p(x), g(x)) -> p(s(x))
   s(0) -> k(0)
   s(s(p(p(a)))) -> s(k(p(a)))
   s(k(p(a))) -> p(p(a))
   g(x) -> k(x)
   a -> 0
   s(h(r(k(p(x))), r(x))) -> h(r(r(p(x))), k(x))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(10) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule S(s(0)) -> P(s(0)) at position [0] we obtained the following new rules [LPAR04]:

   (S(s(0)) -> P(h(0, 0)),S(s(0)) -> P(h(0, 0)))
   (S(s(0)) -> P(r(0)),S(s(0)) -> P(r(0)))
   (S(s(0)) -> P(p(0)),S(s(0)) -> P(p(0)))
   (S(s(0)) -> P(k(0)),S(s(0)) -> P(k(0)))


----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   P(s(s(0))) -> S(s(s(0)))
   S(s(s(s(s(0))))) -> P(s(s(0)))
   S(s(p(p(a)))) -> S(k(p(a)))
   S(k(p(a))) -> P(p(a))
   S(s(0)) -> P(h(0, 0))
   S(s(0)) -> P(r(0))
   S(s(0)) -> P(p(0))
   S(s(0)) -> P(k(0))

The TRS R consists of the following rules:

   f(g(x)) -> g(g(f(x)))
   g(s(x)) -> s(s(g(x)))
   s(x) -> h(0, x)
   s(x) -> h(x, 0)
   f(0) -> 0
   s(s(s(0))) -> f(s(0))
   f(s(0)) -> s(0)
   h(f(x), g(x)) -> f(s(x))
   g(x) -> h(h(h(h(x, x), x), x), x)
   f(s(s(x))) -> h(f(x), g(h(x, x)))
   s(0) -> r(0)
   s(s(s(0))) -> r(s(0))
   r(s(0)) -> s(0)
   g(x) -> r(x)
   s(0) -> p(0)
   s(s(0)) -> p(s(0))
   p(s(0)) -> 0
   s(s(s(s(s(0))))) -> p(s(s(0)))
   p(s(s(0))) -> s(s(s(0)))
   h(p(x), g(x)) -> p(s(x))
   s(0) -> k(0)
   s(s(p(p(a)))) -> s(k(p(a)))
   s(k(p(a))) -> p(p(a))
   g(x) -> k(x)
   a -> 0
   s(h(r(k(p(x))), r(x))) -> h(r(r(p(x))), k(x))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(12) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 4 less nodes.
----------------------------------------

(13)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   S(s(s(s(s(0))))) -> P(s(s(0)))
   P(s(s(0))) -> S(s(s(0)))
   S(s(p(p(a)))) -> S(k(p(a)))
   S(k(p(a))) -> P(p(a))

The TRS R consists of the following rules:

   f(g(x)) -> g(g(f(x)))
   g(s(x)) -> s(s(g(x)))
   s(x) -> h(0, x)
   s(x) -> h(x, 0)
   f(0) -> 0
   s(s(s(0))) -> f(s(0))
   f(s(0)) -> s(0)
   h(f(x), g(x)) -> f(s(x))
   g(x) -> h(h(h(h(x, x), x), x), x)
   f(s(s(x))) -> h(f(x), g(h(x, x)))
   s(0) -> r(0)
   s(s(s(0))) -> r(s(0))
   r(s(0)) -> s(0)
   g(x) -> r(x)
   s(0) -> p(0)
   s(s(0)) -> p(s(0))
   p(s(0)) -> 0
   s(s(s(s(s(0))))) -> p(s(s(0)))
   p(s(s(0))) -> s(s(s(0)))
   h(p(x), g(x)) -> p(s(x))
   s(0) -> k(0)
   s(s(p(p(a)))) -> s(k(p(a)))
   s(k(p(a))) -> p(p(a))
   g(x) -> k(x)
   a -> 0
   s(h(r(k(p(x))), r(x))) -> h(r(r(p(x))), k(x))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(14) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule S(k(p(a))) -> P(p(a)) at position [0] we obtained the following new rules [LPAR04]:

   (S(k(p(a))) -> P(p(0)),S(k(p(a))) -> P(p(0)))


----------------------------------------

(15)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   S(s(s(s(s(0))))) -> P(s(s(0)))
   P(s(s(0))) -> S(s(s(0)))
   S(s(p(p(a)))) -> S(k(p(a)))
   S(k(p(a))) -> P(p(0))

The TRS R consists of the following rules:

   f(g(x)) -> g(g(f(x)))
   g(s(x)) -> s(s(g(x)))
   s(x) -> h(0, x)
   s(x) -> h(x, 0)
   f(0) -> 0
   s(s(s(0))) -> f(s(0))
   f(s(0)) -> s(0)
   h(f(x), g(x)) -> f(s(x))
   g(x) -> h(h(h(h(x, x), x), x), x)
   f(s(s(x))) -> h(f(x), g(h(x, x)))
   s(0) -> r(0)
   s(s(s(0))) -> r(s(0))
   r(s(0)) -> s(0)
   g(x) -> r(x)
   s(0) -> p(0)
   s(s(0)) -> p(s(0))
   p(s(0)) -> 0
   s(s(s(s(s(0))))) -> p(s(s(0)))
   p(s(s(0))) -> s(s(s(0)))
   h(p(x), g(x)) -> p(s(x))
   s(0) -> k(0)
   s(s(p(p(a)))) -> s(k(p(a)))
   s(k(p(a))) -> p(p(a))
   g(x) -> k(x)
   a -> 0
   s(h(r(k(p(x))), r(x))) -> h(r(r(p(x))), k(x))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(16) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 2 less nodes.
----------------------------------------

(17)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   P(s(s(0))) -> S(s(s(0)))
   S(s(s(s(s(0))))) -> P(s(s(0)))

The TRS R consists of the following rules:

   f(g(x)) -> g(g(f(x)))
   g(s(x)) -> s(s(g(x)))
   s(x) -> h(0, x)
   s(x) -> h(x, 0)
   f(0) -> 0
   s(s(s(0))) -> f(s(0))
   f(s(0)) -> s(0)
   h(f(x), g(x)) -> f(s(x))
   g(x) -> h(h(h(h(x, x), x), x), x)
   f(s(s(x))) -> h(f(x), g(h(x, x)))
   s(0) -> r(0)
   s(s(s(0))) -> r(s(0))
   r(s(0)) -> s(0)
   g(x) -> r(x)
   s(0) -> p(0)
   s(s(0)) -> p(s(0))
   p(s(0)) -> 0
   s(s(s(s(s(0))))) -> p(s(s(0)))
   p(s(s(0))) -> s(s(s(0)))
   h(p(x), g(x)) -> p(s(x))
   s(0) -> k(0)
   s(s(p(p(a)))) -> s(k(p(a)))
   s(k(p(a))) -> p(p(a))
   g(x) -> k(x)
   a -> 0
   s(h(r(k(p(x))), r(x))) -> h(r(r(p(x))), k(x))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(18) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*S(s(s(s(s(0))))) -> P(s(s(0)))
The graph contains the following edges 1 > 1


*P(s(s(0))) -> S(s(s(0)))
The graph contains the following edges 1 >= 1


----------------------------------------

(19)
YES

----------------------------------------

(20)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   G(s(x)) -> G(x)
   G(x) -> H(h(h(h(x, x), x), x), x)
   H(f(x), g(x)) -> F(s(x))
   F(g(x)) -> G(g(f(x)))
   G(x) -> H(h(h(x, x), x), x)
   G(x) -> H(h(x, x), x)
   G(x) -> H(x, x)
   F(g(x)) -> G(f(x))
   F(g(x)) -> F(x)
   F(s(s(x))) -> H(f(x), g(h(x, x)))
   F(s(s(x))) -> F(x)
   F(s(s(x))) -> G(h(x, x))
   F(s(s(x))) -> H(x, x)

The TRS R consists of the following rules:

   f(g(x)) -> g(g(f(x)))
   g(s(x)) -> s(s(g(x)))
   s(x) -> h(0, x)
   s(x) -> h(x, 0)
   f(0) -> 0
   s(s(s(0))) -> f(s(0))
   f(s(0)) -> s(0)
   h(f(x), g(x)) -> f(s(x))
   g(x) -> h(h(h(h(x, x), x), x), x)
   f(s(s(x))) -> h(f(x), g(h(x, x)))
   s(0) -> r(0)
   s(s(s(0))) -> r(s(0))
   r(s(0)) -> s(0)
   g(x) -> r(x)
   s(0) -> p(0)
   s(s(0)) -> p(s(0))
   p(s(0)) -> 0
   s(s(s(s(s(0))))) -> p(s(s(0)))
   p(s(s(0))) -> s(s(s(0)))
   h(p(x), g(x)) -> p(s(x))
   s(0) -> k(0)
   s(s(p(p(a)))) -> s(k(p(a)))
   s(k(p(a))) -> p(p(a))
   g(x) -> k(x)
   a -> 0
   s(h(r(k(p(x))), r(x))) -> h(r(r(p(x))), k(x))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(21) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   F(g(x)) -> G(g(f(x)))
   F(g(x)) -> G(f(x))
   F(g(x)) -> F(x)
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial Order [NEGPOLO,POLO] with Interpretation:

POL( F_1(x_1) ) = 2x_1 + 2
POL( G_1(x_1) ) = x_1 + 2
POL( H_2(x_1, x_2) ) = x_1 + 2
POL( g_1(x_1) ) = x_1 + 1
POL( s_1(x_1) ) = x_1
POL( 0 ) = 0
POL( f_1(x_1) ) = 2x_1
POL( h_2(x_1, x_2) ) = x_1
POL( p_1(x_1) ) = x_1
POL( a ) = 0
POL( k_1(x_1) ) = max{0, x_1 - 2}
POL( r_1(x_1) ) = max{0, -1}

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   g(s(x)) -> s(s(g(x)))
   s(s(s(0))) -> f(s(0))
   f(g(x)) -> g(g(f(x)))
   g(x) -> h(h(h(h(x, x), x), x), x)
   h(f(x), g(x)) -> f(s(x))
   f(s(s(x))) -> h(f(x), g(h(x, x)))
   h(p(x), g(x)) -> p(s(x))
   p(s(s(0))) -> s(s(s(0)))
   s(s(0)) -> p(s(0))
   s(s(s(s(s(0))))) -> p(s(s(0)))
   s(s(p(p(a)))) -> s(k(p(a)))
   s(k(p(a))) -> p(p(a))
   s(x) -> h(0, x)
   s(x) -> h(x, 0)
   s(0) -> r(0)
   s(s(s(0))) -> r(s(0))
   s(0) -> p(0)
   s(0) -> k(0)
   s(h(r(k(p(x))), r(x))) -> h(r(r(p(x))), k(x))
   f(0) -> 0
   f(s(0)) -> s(0)
   g(x) -> r(x)
   g(x) -> k(x)
   p(s(0)) -> 0
   r(s(0)) -> s(0)
   a -> 0


----------------------------------------

(22)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   G(s(x)) -> G(x)
   G(x) -> H(h(h(h(x, x), x), x), x)
   H(f(x), g(x)) -> F(s(x))
   G(x) -> H(h(h(x, x), x), x)
   G(x) -> H(h(x, x), x)
   G(x) -> H(x, x)
   F(s(s(x))) -> H(f(x), g(h(x, x)))
   F(s(s(x))) -> F(x)
   F(s(s(x))) -> G(h(x, x))
   F(s(s(x))) -> H(x, x)

The TRS R consists of the following rules:

   f(g(x)) -> g(g(f(x)))
   g(s(x)) -> s(s(g(x)))
   s(x) -> h(0, x)
   s(x) -> h(x, 0)
   f(0) -> 0
   s(s(s(0))) -> f(s(0))
   f(s(0)) -> s(0)
   h(f(x), g(x)) -> f(s(x))
   g(x) -> h(h(h(h(x, x), x), x), x)
   f(s(s(x))) -> h(f(x), g(h(x, x)))
   s(0) -> r(0)
   s(s(s(0))) -> r(s(0))
   r(s(0)) -> s(0)
   g(x) -> r(x)
   s(0) -> p(0)
   s(s(0)) -> p(s(0))
   p(s(0)) -> 0
   s(s(s(s(s(0))))) -> p(s(s(0)))
   p(s(s(0))) -> s(s(s(0)))
   h(p(x), g(x)) -> p(s(x))
   s(0) -> k(0)
   s(s(p(p(a)))) -> s(k(p(a)))
   s(k(p(a))) -> p(p(a))
   g(x) -> k(x)
   a -> 0
   s(h(r(k(p(x))), r(x))) -> h(r(r(p(x))), k(x))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(23) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   F(s(s(x))) -> G(h(x, x))
   F(s(s(x))) -> H(x, x)
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial Order [NEGPOLO,POLO] with Interpretation:

POL( F_1(x_1) ) = x_1 + 1
POL( G_1(x_1) ) = x_1
POL( H_2(x_1, x_2) ) = x_2
POL( g_1(x_1) ) = x_1 + 1
POL( s_1(x_1) ) = x_1
POL( 0 ) = 0
POL( f_1(x_1) ) = 2x_1
POL( h_2(x_1, x_2) ) = x_1
POL( p_1(x_1) ) = max{0, -2}
POL( a ) = 0
POL( k_1(x_1) ) = max{0, -2}
POL( r_1(x_1) ) = max{0, -2}

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   g(s(x)) -> s(s(g(x)))
   s(s(s(0))) -> f(s(0))
   f(g(x)) -> g(g(f(x)))
   g(x) -> h(h(h(h(x, x), x), x), x)
   h(f(x), g(x)) -> f(s(x))
   f(s(s(x))) -> h(f(x), g(h(x, x)))
   h(p(x), g(x)) -> p(s(x))
   p(s(s(0))) -> s(s(s(0)))
   s(s(0)) -> p(s(0))
   s(s(s(s(s(0))))) -> p(s(s(0)))
   s(s(p(p(a)))) -> s(k(p(a)))
   s(k(p(a))) -> p(p(a))
   s(x) -> h(0, x)
   s(x) -> h(x, 0)
   s(0) -> r(0)
   s(s(s(0))) -> r(s(0))
   s(0) -> p(0)
   s(0) -> k(0)
   s(h(r(k(p(x))), r(x))) -> h(r(r(p(x))), k(x))
   f(0) -> 0
   f(s(0)) -> s(0)
   g(x) -> r(x)
   g(x) -> k(x)
   p(s(0)) -> 0
   r(s(0)) -> s(0)


----------------------------------------

(24)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   G(s(x)) -> G(x)
   G(x) -> H(h(h(h(x, x), x), x), x)
   H(f(x), g(x)) -> F(s(x))
   G(x) -> H(h(h(x, x), x), x)
   G(x) -> H(h(x, x), x)
   G(x) -> H(x, x)
   F(s(s(x))) -> H(f(x), g(h(x, x)))
   F(s(s(x))) -> F(x)

The TRS R consists of the following rules:

   f(g(x)) -> g(g(f(x)))
   g(s(x)) -> s(s(g(x)))
   s(x) -> h(0, x)
   s(x) -> h(x, 0)
   f(0) -> 0
   s(s(s(0))) -> f(s(0))
   f(s(0)) -> s(0)
   h(f(x), g(x)) -> f(s(x))
   g(x) -> h(h(h(h(x, x), x), x), x)
   f(s(s(x))) -> h(f(x), g(h(x, x)))
   s(0) -> r(0)
   s(s(s(0))) -> r(s(0))
   r(s(0)) -> s(0)
   g(x) -> r(x)
   s(0) -> p(0)
   s(s(0)) -> p(s(0))
   p(s(0)) -> 0
   s(s(s(s(s(0))))) -> p(s(s(0)))
   p(s(s(0))) -> s(s(s(0)))
   h(p(x), g(x)) -> p(s(x))
   s(0) -> k(0)
   s(s(p(p(a)))) -> s(k(p(a)))
   s(k(p(a))) -> p(p(a))
   g(x) -> k(x)
   a -> 0
   s(h(r(k(p(x))), r(x))) -> h(r(r(p(x))), k(x))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(25) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs with 4 less nodes.
----------------------------------------

(26)
Complex Obligation (AND)

----------------------------------------

(27)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(s(x))) -> H(f(x), g(h(x, x)))
   H(f(x), g(x)) -> F(s(x))
   F(s(s(x))) -> F(x)

The TRS R consists of the following rules:

   f(g(x)) -> g(g(f(x)))
   g(s(x)) -> s(s(g(x)))
   s(x) -> h(0, x)
   s(x) -> h(x, 0)
   f(0) -> 0
   s(s(s(0))) -> f(s(0))
   f(s(0)) -> s(0)
   h(f(x), g(x)) -> f(s(x))
   g(x) -> h(h(h(h(x, x), x), x), x)
   f(s(s(x))) -> h(f(x), g(h(x, x)))
   s(0) -> r(0)
   s(s(s(0))) -> r(s(0))
   r(s(0)) -> s(0)
   g(x) -> r(x)
   s(0) -> p(0)
   s(s(0)) -> p(s(0))
   p(s(0)) -> 0
   s(s(s(s(s(0))))) -> p(s(s(0)))
   p(s(s(0))) -> s(s(s(0)))
   h(p(x), g(x)) -> p(s(x))
   s(0) -> k(0)
   s(s(p(p(a)))) -> s(k(p(a)))
   s(k(p(a))) -> p(p(a))
   g(x) -> k(x)
   a -> 0
   s(h(r(k(p(x))), r(x))) -> h(r(r(p(x))), k(x))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(28) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   H(f(x), g(x)) -> F(s(x))
The remaining pairs can at least be oriented weakly.
Used ordering:  Matrix interpretation [MATRO] with arctic natural numbers [ARCTIC]:

   <<<
 POL(F(x_1)) =  	[[0A]] 	 +  	[[-I, -I, 0A]] 	* 	x_1
>>>

   <<<
 POL(s(x_1)) =  	[[0A], [1A], [0A]] 	 +  	[[-I, -I, -I], [1A, -I, 0A], [0A, 0A, -I]] 	* 	x_1
>>>

   <<<
 POL(H(x_1, x_2)) =  	[[0A]] 	 +  	[[0A, -I, -I]] 	* 	x_1 	 +  	[[0A, 1A, -I]] 	* 	x_2
>>>

   <<<
 POL(f(x_1)) =  	[[0A], [0A], [0A]] 	 +  	[[0A, -I, -I], [1A, -I, -I], [1A, -I, -I]] 	* 	x_1
>>>

   <<<
 POL(g(x_1)) =  	[[1A], [0A], [2A]] 	 +  	[[0A, -I, -I], [0A, 0A, 0A], [0A, 0A, 0A]] 	* 	x_1
>>>

   <<<
 POL(h(x_1, x_2)) =  	[[0A], [0A], [0A]] 	 +  	[[-I, -I, -I], [-I, -I, -I], [-I, -I, -I]] 	* 	x_1 	 +  	[[-I, -I, -I], [0A, -I, -I], [0A, -I, -I]] 	* 	x_2
>>>

   <<<
 POL(0) =  	[[0A], [1A], [-I]]
>>>

   <<<
 POL(p(x_1)) =  	[[0A], [1A], [0A]] 	 +  	[[0A, -I, -I], [0A, -I, -I], [1A, -I, -I]] 	* 	x_1
>>>

   <<<
 POL(a) =  	[[0A], [2A], [0A]]
>>>

   <<<
 POL(k(x_1)) =  	[[0A], [0A], [-I]] 	 +  	[[-I, -I, -I], [-I, -I, 0A], [-I, -I, -I]] 	* 	x_1
>>>

   <<<
 POL(r(x_1)) =  	[[0A], [0A], [1A]] 	 +  	[[-I, -I, -I], [0A, 0A, -I], [-I, -I, -I]] 	* 	x_1
>>>


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   g(s(x)) -> s(s(g(x)))
   s(s(s(0))) -> f(s(0))
   f(g(x)) -> g(g(f(x)))
   g(x) -> h(h(h(h(x, x), x), x), x)
   h(f(x), g(x)) -> f(s(x))
   f(s(s(x))) -> h(f(x), g(h(x, x)))
   h(p(x), g(x)) -> p(s(x))
   p(s(s(0))) -> s(s(s(0)))
   s(s(0)) -> p(s(0))
   s(s(s(s(s(0))))) -> p(s(s(0)))
   s(s(p(p(a)))) -> s(k(p(a)))
   s(k(p(a))) -> p(p(a))
   f(0) -> 0
   f(s(0)) -> s(0)
   g(x) -> r(x)
   g(x) -> k(x)
   s(x) -> h(0, x)
   s(x) -> h(x, 0)
   s(0) -> r(0)
   s(s(s(0))) -> r(s(0))
   s(0) -> p(0)
   s(0) -> k(0)
   s(h(r(k(p(x))), r(x))) -> h(r(r(p(x))), k(x))
   p(s(0)) -> 0
   r(s(0)) -> s(0)
   a -> 0


----------------------------------------

(29)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(s(x))) -> H(f(x), g(h(x, x)))
   F(s(s(x))) -> F(x)

The TRS R consists of the following rules:

   f(g(x)) -> g(g(f(x)))
   g(s(x)) -> s(s(g(x)))
   s(x) -> h(0, x)
   s(x) -> h(x, 0)
   f(0) -> 0
   s(s(s(0))) -> f(s(0))
   f(s(0)) -> s(0)
   h(f(x), g(x)) -> f(s(x))
   g(x) -> h(h(h(h(x, x), x), x), x)
   f(s(s(x))) -> h(f(x), g(h(x, x)))
   s(0) -> r(0)
   s(s(s(0))) -> r(s(0))
   r(s(0)) -> s(0)
   g(x) -> r(x)
   s(0) -> p(0)
   s(s(0)) -> p(s(0))
   p(s(0)) -> 0
   s(s(s(s(s(0))))) -> p(s(s(0)))
   p(s(s(0))) -> s(s(s(0)))
   h(p(x), g(x)) -> p(s(x))
   s(0) -> k(0)
   s(s(p(p(a)))) -> s(k(p(a)))
   s(k(p(a))) -> p(p(a))
   g(x) -> k(x)
   a -> 0
   s(h(r(k(p(x))), r(x))) -> h(r(r(p(x))), k(x))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(30) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(31)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(s(x))) -> F(x)

The TRS R consists of the following rules:

   f(g(x)) -> g(g(f(x)))
   g(s(x)) -> s(s(g(x)))
   s(x) -> h(0, x)
   s(x) -> h(x, 0)
   f(0) -> 0
   s(s(s(0))) -> f(s(0))
   f(s(0)) -> s(0)
   h(f(x), g(x)) -> f(s(x))
   g(x) -> h(h(h(h(x, x), x), x), x)
   f(s(s(x))) -> h(f(x), g(h(x, x)))
   s(0) -> r(0)
   s(s(s(0))) -> r(s(0))
   r(s(0)) -> s(0)
   g(x) -> r(x)
   s(0) -> p(0)
   s(s(0)) -> p(s(0))
   p(s(0)) -> 0
   s(s(s(s(s(0))))) -> p(s(s(0)))
   p(s(s(0))) -> s(s(s(0)))
   h(p(x), g(x)) -> p(s(x))
   s(0) -> k(0)
   s(s(p(p(a)))) -> s(k(p(a)))
   s(k(p(a))) -> p(p(a))
   g(x) -> k(x)
   a -> 0
   s(h(r(k(p(x))), r(x))) -> h(r(r(p(x))), k(x))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(32) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(33)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(s(x))) -> F(x)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(34) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*F(s(s(x))) -> F(x)
The graph contains the following edges 1 > 1


----------------------------------------

(35)
YES

----------------------------------------

(36)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   G(s(x)) -> G(x)

The TRS R consists of the following rules:

   f(g(x)) -> g(g(f(x)))
   g(s(x)) -> s(s(g(x)))
   s(x) -> h(0, x)
   s(x) -> h(x, 0)
   f(0) -> 0
   s(s(s(0))) -> f(s(0))
   f(s(0)) -> s(0)
   h(f(x), g(x)) -> f(s(x))
   g(x) -> h(h(h(h(x, x), x), x), x)
   f(s(s(x))) -> h(f(x), g(h(x, x)))
   s(0) -> r(0)
   s(s(s(0))) -> r(s(0))
   r(s(0)) -> s(0)
   g(x) -> r(x)
   s(0) -> p(0)
   s(s(0)) -> p(s(0))
   p(s(0)) -> 0
   s(s(s(s(s(0))))) -> p(s(s(0)))
   p(s(s(0))) -> s(s(s(0)))
   h(p(x), g(x)) -> p(s(x))
   s(0) -> k(0)
   s(s(p(p(a)))) -> s(k(p(a)))
   s(k(p(a))) -> p(p(a))
   g(x) -> k(x)
   a -> 0
   s(h(r(k(p(x))), r(x))) -> h(r(r(p(x))), k(x))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(37) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(38)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   G(s(x)) -> G(x)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(39) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*G(s(x)) -> G(x)
The graph contains the following edges 1 > 1


----------------------------------------

(40)
YES
