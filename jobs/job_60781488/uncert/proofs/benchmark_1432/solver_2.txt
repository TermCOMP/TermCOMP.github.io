YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/j9x9S.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) Overlay + Local Confluence [EQUIVALENT, 0 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 0 ms]
(4) QDP
(5) DependencyGraphProof [EQUIVALENT, 0 ms]
(6) QDP
(7) TransformationProof [EQUIVALENT, 0 ms]
(8) QDP
(9) SemLabProof [SOUND, 79 ms]
(10) QDP
(11) DependencyGraphProof [EQUIVALENT, 0 ms]
(12) QDP
(13) UsableRulesReductionPairsProof [EQUIVALENT, 0 ms]
(14) QDP
(15) MRRProof [EQUIVALENT, 2 ms]
(16) QDP
(17) DependencyGraphProof [EQUIVALENT, 0 ms]
(18) QDP
(19) QDPOrderProof [EQUIVALENT, 0 ms]
(20) QDP
(21) UsableRulesReductionPairsProof [EQUIVALENT, 0 ms]
(22) QDP
(23) QDPOrderProof [EQUIVALENT, 1 ms]
(24) QDP
(25) PisEmptyProof [EQUIVALENT, 0 ms]
(26) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(f(a, x), y) -> f(y, f(x, f(a, f(h(a), a))))

Q is empty.

----------------------------------------

(1) Overlay + Local Confluence (EQUIVALENT)
The TRS is overlay and locally confluent. By [NOC] we can switch to innermost.
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(f(a, x), y) -> f(y, f(x, f(a, f(h(a), a))))

The set Q consists of the following terms:

   f(f(a, x0), x1)


----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(f(a, x), y) -> F(y, f(x, f(a, f(h(a), a))))
   F(f(a, x), y) -> F(x, f(a, f(h(a), a)))
   F(f(a, x), y) -> F(a, f(h(a), a))
   F(f(a, x), y) -> F(h(a), a)

The TRS R consists of the following rules:

   f(f(a, x), y) -> f(y, f(x, f(a, f(h(a), a))))

The set Q consists of the following terms:

   f(f(a, x0), x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 2 less nodes.
----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(f(a, x), y) -> F(x, f(a, f(h(a), a)))
   F(f(a, x), y) -> F(y, f(x, f(a, f(h(a), a))))

The TRS R consists of the following rules:

   f(f(a, x), y) -> f(y, f(x, f(a, f(h(a), a))))

The set Q consists of the following terms:

   f(f(a, x0), x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) TransformationProof (EQUIVALENT)
By forward instantiating [JAR06] the rule F(f(a, x), y) -> F(x, f(a, f(h(a), a))) we obtained the following new rules [LPAR04]:

   (F(f(a, f(a, y_0)), x1) -> F(f(a, y_0), f(a, f(h(a), a))),F(f(a, f(a, y_0)), x1) -> F(f(a, y_0), f(a, f(h(a), a))))


----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(f(a, x), y) -> F(y, f(x, f(a, f(h(a), a))))
   F(f(a, f(a, y_0)), x1) -> F(f(a, y_0), f(a, f(h(a), a)))

The TRS R consists of the following rules:

   f(f(a, x), y) -> f(y, f(x, f(a, f(h(a), a))))

The set Q consists of the following terms:

   f(f(a, x0), x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) SemLabProof (SOUND)
We found the following model for the rules of the TRSs R and P.
Interpretation over the domain with elements from 0 to 1.
a: 1
f: 0
h: 0
F: 0
By semantic labelling [SEMLAB] we obtain the following labelled QDP problem.
----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F.0-0(f.1-0(a., x), y) -> F.0-0(y, f.0-0(x, f.1-0(a., f.0-1(h.1(a.), a.))))
   F.0-1(f.1-0(a., x), y) -> F.1-0(y, f.0-0(x, f.1-0(a., f.0-1(h.1(a.), a.))))
   F.0-0(f.1-1(a., x), y) -> F.0-0(y, f.1-0(x, f.1-0(a., f.0-1(h.1(a.), a.))))
   F.0-1(f.1-1(a., x), y) -> F.1-0(y, f.1-0(x, f.1-0(a., f.0-1(h.1(a.), a.))))
   F.0-0(f.1-0(a., f.1-0(a., y_0)), x1) -> F.0-0(f.1-0(a., y_0), f.1-0(a., f.0-1(h.1(a.), a.)))
   F.0-1(f.1-0(a., f.1-0(a., y_0)), x1) -> F.0-0(f.1-0(a., y_0), f.1-0(a., f.0-1(h.1(a.), a.)))
   F.0-0(f.1-0(a., f.1-1(a., y_0)), x1) -> F.0-0(f.1-1(a., y_0), f.1-0(a., f.0-1(h.1(a.), a.)))
   F.0-1(f.1-0(a., f.1-1(a., y_0)), x1) -> F.0-0(f.1-1(a., y_0), f.1-0(a., f.0-1(h.1(a.), a.)))

The TRS R consists of the following rules:

   f.0-0(f.1-0(a., x), y) -> f.0-0(y, f.0-0(x, f.1-0(a., f.0-1(h.1(a.), a.))))
   f.0-1(f.1-0(a., x), y) -> f.1-0(y, f.0-0(x, f.1-0(a., f.0-1(h.1(a.), a.))))
   f.0-0(f.1-1(a., x), y) -> f.0-0(y, f.1-0(x, f.1-0(a., f.0-1(h.1(a.), a.))))
   f.0-1(f.1-1(a., x), y) -> f.1-0(y, f.1-0(x, f.1-0(a., f.0-1(h.1(a.), a.))))

The set Q consists of the following terms:

   f.0-0(f.1-0(a., x0), x1)
   f.0-1(f.1-0(a., x0), x1)
   f.0-0(f.1-1(a., x0), x1)
   f.0-1(f.1-1(a., x0), x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 4 less nodes.
----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F.0-0(f.1-0(a., x), y) -> F.0-0(y, f.0-0(x, f.1-0(a., f.0-1(h.1(a.), a.))))
   F.0-0(f.1-1(a., x), y) -> F.0-0(y, f.1-0(x, f.1-0(a., f.0-1(h.1(a.), a.))))
   F.0-0(f.1-0(a., f.1-0(a., y_0)), x1) -> F.0-0(f.1-0(a., y_0), f.1-0(a., f.0-1(h.1(a.), a.)))
   F.0-0(f.1-0(a., f.1-1(a., y_0)), x1) -> F.0-0(f.1-1(a., y_0), f.1-0(a., f.0-1(h.1(a.), a.)))

The TRS R consists of the following rules:

   f.0-0(f.1-0(a., x), y) -> f.0-0(y, f.0-0(x, f.1-0(a., f.0-1(h.1(a.), a.))))
   f.0-1(f.1-0(a., x), y) -> f.1-0(y, f.0-0(x, f.1-0(a., f.0-1(h.1(a.), a.))))
   f.0-0(f.1-1(a., x), y) -> f.0-0(y, f.1-0(x, f.1-0(a., f.0-1(h.1(a.), a.))))
   f.0-1(f.1-1(a., x), y) -> f.1-0(y, f.1-0(x, f.1-0(a., f.0-1(h.1(a.), a.))))

The set Q consists of the following terms:

   f.0-0(f.1-0(a., x0), x1)
   f.0-1(f.1-0(a., x0), x1)
   f.0-0(f.1-1(a., x0), x1)
   f.0-1(f.1-1(a., x0), x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) UsableRulesReductionPairsProof (EQUIVALENT)
By using the usable rules with reduction pair processor [LPAR04] with a polynomial ordering [POLO], all dependency pairs and the corresponding usable rules [FROCOS05] can be oriented non-strictly. All non-usable rules are removed, and those dependency pairs and usable rules that have been oriented strictly or contain non-usable symbols in their left-hand side are removed as well.

No dependency pairs are removed.

The following rules are removed from R:

   f.0-1(f.1-0(a., x), y) -> f.1-0(y, f.0-0(x, f.1-0(a., f.0-1(h.1(a.), a.))))
   f.0-1(f.1-1(a., x), y) -> f.1-0(y, f.1-0(x, f.1-0(a., f.0-1(h.1(a.), a.))))
Used ordering: POLO with Polynomial interpretation [POLO]:

   POL(F.0-0(x_1, x_2)) = x_1 + x_2
   POL(a.) = 0
   POL(f.0-0(x_1, x_2)) = x_1 + x_2
   POL(f.0-1(x_1, x_2)) = x_1 + x_2
   POL(f.1-0(x_1, x_2)) = x_1 + x_2
   POL(f.1-1(x_1, x_2)) = x_1 + x_2
   POL(h.1(x_1)) = x_1


----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F.0-0(f.1-0(a., x), y) -> F.0-0(y, f.0-0(x, f.1-0(a., f.0-1(h.1(a.), a.))))
   F.0-0(f.1-1(a., x), y) -> F.0-0(y, f.1-0(x, f.1-0(a., f.0-1(h.1(a.), a.))))
   F.0-0(f.1-0(a., f.1-0(a., y_0)), x1) -> F.0-0(f.1-0(a., y_0), f.1-0(a., f.0-1(h.1(a.), a.)))
   F.0-0(f.1-0(a., f.1-1(a., y_0)), x1) -> F.0-0(f.1-1(a., y_0), f.1-0(a., f.0-1(h.1(a.), a.)))

The TRS R consists of the following rules:

   f.0-0(f.1-1(a., x), y) -> f.0-0(y, f.1-0(x, f.1-0(a., f.0-1(h.1(a.), a.))))
   f.0-0(f.1-0(a., x), y) -> f.0-0(y, f.0-0(x, f.1-0(a., f.0-1(h.1(a.), a.))))

The set Q consists of the following terms:

   f.0-0(f.1-0(a., x0), x1)
   f.0-1(f.1-0(a., x0), x1)
   f.0-0(f.1-1(a., x0), x1)
   f.0-1(f.1-1(a., x0), x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) MRRProof (EQUIVALENT)
By using the rule removal processor [LPAR04] with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented.

Strictly oriented dependency pairs:

   F.0-0(f.1-1(a., x), y) -> F.0-0(y, f.1-0(x, f.1-0(a., f.0-1(h.1(a.), a.))))

Strictly oriented rules of the TRS R:

   f.0-0(f.1-1(a., x), y) -> f.0-0(y, f.1-0(x, f.1-0(a., f.0-1(h.1(a.), a.))))

Used ordering: Polynomial interpretation [POLO]:

   POL(F.0-0(x_1, x_2)) = x_1 + x_2
   POL(a.) = 0
   POL(f.0-0(x_1, x_2)) = x_1 + x_2
   POL(f.0-1(x_1, x_2)) = x_1 + x_2
   POL(f.1-0(x_1, x_2)) = x_1 + x_2
   POL(f.1-1(x_1, x_2)) = 1 + x_1 + x_2
   POL(h.1(x_1)) = x_1


----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F.0-0(f.1-0(a., x), y) -> F.0-0(y, f.0-0(x, f.1-0(a., f.0-1(h.1(a.), a.))))
   F.0-0(f.1-0(a., f.1-0(a., y_0)), x1) -> F.0-0(f.1-0(a., y_0), f.1-0(a., f.0-1(h.1(a.), a.)))
   F.0-0(f.1-0(a., f.1-1(a., y_0)), x1) -> F.0-0(f.1-1(a., y_0), f.1-0(a., f.0-1(h.1(a.), a.)))

The TRS R consists of the following rules:

   f.0-0(f.1-0(a., x), y) -> f.0-0(y, f.0-0(x, f.1-0(a., f.0-1(h.1(a.), a.))))

The set Q consists of the following terms:

   f.0-0(f.1-0(a., x0), x1)
   f.0-1(f.1-0(a., x0), x1)
   f.0-0(f.1-1(a., x0), x1)
   f.0-1(f.1-1(a., x0), x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F.0-0(f.1-0(a., x), y) -> F.0-0(y, f.0-0(x, f.1-0(a., f.0-1(h.1(a.), a.))))
   F.0-0(f.1-0(a., f.1-0(a., y_0)), x1) -> F.0-0(f.1-0(a., y_0), f.1-0(a., f.0-1(h.1(a.), a.)))

The TRS R consists of the following rules:

   f.0-0(f.1-0(a., x), y) -> f.0-0(y, f.0-0(x, f.1-0(a., f.0-1(h.1(a.), a.))))

The set Q consists of the following terms:

   f.0-0(f.1-0(a., x0), x1)
   f.0-1(f.1-0(a., x0), x1)
   f.0-0(f.1-1(a., x0), x1)
   f.0-1(f.1-1(a., x0), x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   F.0-0(f.1-0(a., x), y) -> F.0-0(y, f.0-0(x, f.1-0(a., f.0-1(h.1(a.), a.))))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(F.0-0(x_1, x_2)) = x_1 + x_2
   POL(a.) = 1
   POL(f.0-0(x_1, x_2)) = 1
   POL(f.0-1(x_1, x_2)) = 0
   POL(f.1-0(x_1, x_2)) = 1 + x_1 + x_2
   POL(h.1(x_1)) = 0

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   f.0-0(f.1-0(a., x), y) -> f.0-0(y, f.0-0(x, f.1-0(a., f.0-1(h.1(a.), a.))))


----------------------------------------

(20)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F.0-0(f.1-0(a., f.1-0(a., y_0)), x1) -> F.0-0(f.1-0(a., y_0), f.1-0(a., f.0-1(h.1(a.), a.)))

The TRS R consists of the following rules:

   f.0-0(f.1-0(a., x), y) -> f.0-0(y, f.0-0(x, f.1-0(a., f.0-1(h.1(a.), a.))))

The set Q consists of the following terms:

   f.0-0(f.1-0(a., x0), x1)
   f.0-1(f.1-0(a., x0), x1)
   f.0-0(f.1-1(a., x0), x1)
   f.0-1(f.1-1(a., x0), x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(21) UsableRulesReductionPairsProof (EQUIVALENT)
By using the usable rules with reduction pair processor [LPAR04] with a polynomial ordering [POLO], all dependency pairs and the corresponding usable rules [FROCOS05] can be oriented non-strictly. All non-usable rules are removed, and those dependency pairs and usable rules that have been oriented strictly or contain non-usable symbols in their left-hand side are removed as well.

No dependency pairs are removed.

The following rules are removed from R:

   f.0-0(f.1-0(a., x), y) -> f.0-0(y, f.0-0(x, f.1-0(a., f.0-1(h.1(a.), a.))))
Used ordering: POLO with Polynomial interpretation [POLO]:

   POL(F.0-0(x_1, x_2)) = x_1 + x_2
   POL(a.) = 0
   POL(f.0-1(x_1, x_2)) = x_1 + x_2
   POL(f.1-0(x_1, x_2)) = x_1 + x_2
   POL(h.1(x_1)) = x_1


----------------------------------------

(22)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F.0-0(f.1-0(a., f.1-0(a., y_0)), x1) -> F.0-0(f.1-0(a., y_0), f.1-0(a., f.0-1(h.1(a.), a.)))

R is empty.
The set Q consists of the following terms:

   f.0-0(f.1-0(a., x0), x1)
   f.0-1(f.1-0(a., x0), x1)
   f.0-0(f.1-1(a., x0), x1)
   f.0-1(f.1-1(a., x0), x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(23) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   F.0-0(f.1-0(a., f.1-0(a., y_0)), x1) -> F.0-0(f.1-0(a., y_0), f.1-0(a., f.0-1(h.1(a.), a.)))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(F.0-0(x_1, x_2)) = x_1
   POL(a.) = 1
   POL(f.0-1(x_1, x_2)) = 1 + x_1 + x_2
   POL(f.1-0(x_1, x_2)) = 1 + x_1 + x_2
   POL(h.1(x_1)) = 1 + x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:
none


----------------------------------------

(24)
Obligation:
Q DP problem:
P is empty.
R is empty.
The set Q consists of the following terms:

   f.0-0(f.1-0(a., x0), x1)
   f.0-1(f.1-0(a., x0), x1)
   f.0-0(f.1-1(a., x0), x1)
   f.0-1(f.1-1(a., x0), x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(25) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(26)
YES
