YES

Problem 1: 

(VAR vu95NonEmpty x y z)
(RULES
u61(u46(x,y),u46(u,v)) -> and(u61(x,u),u61(y,v))
u61(u46(x,y),nil) -> ffalse
u61(nil,u46(y,z)) -> ffalse
u61(nil,nil) -> ftrue
del(u46(x,u46(y,z))) -> f(u61(x,y),x,y,z)
f(ffalse,x,y,z) -> u46(x,del(u46(y,z)))
f(ftrue,x,y,z) -> del(u46(y,z))
)


Problem 1: 

Innermost Equivalent Processor:
-> Rules:
 u61(u46(x,y),u46(u,v)) -> and(u61(x,u),u61(y,v))
 u61(u46(x,y),nil) -> ffalse
 u61(nil,u46(y,z)) -> ffalse
 u61(nil,nil) -> ftrue
 del(u46(x,u46(y,z))) -> f(u61(x,y),x,y,z)
 f(ffalse,x,y,z) -> u46(x,del(u46(y,z)))
 f(ftrue,x,y,z) -> del(u46(y,z))
-> The term rewriting system is non-overlaping or locally confluent overlay system. Therefore, innermost termination implies termination.
 

Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 DEL(u46(x,u46(y,z))) -> U61(x,y)
 DEL(u46(x,u46(y,z))) -> F(u61(x,y),x,y,z)
 F(ffalse,x,y,z) -> DEL(u46(y,z))
 F(ftrue,x,y,z) -> DEL(u46(y,z))
-> Rules:
 u61(u46(x,y),u46(u,v)) -> and(u61(x,u),u61(y,v))
 u61(u46(x,y),nil) -> ffalse
 u61(nil,u46(y,z)) -> ffalse
 u61(nil,nil) -> ftrue
 del(u46(x,u46(y,z))) -> f(u61(x,y),x,y,z)
 f(ffalse,x,y,z) -> u46(x,del(u46(y,z)))
 f(ftrue,x,y,z) -> del(u46(y,z))

Problem 1: 

SCC Processor:
-> Pairs:
 DEL(u46(x,u46(y,z))) -> U61(x,y)
 DEL(u46(x,u46(y,z))) -> F(u61(x,y),x,y,z)
 F(ffalse,x,y,z) -> DEL(u46(y,z))
 F(ftrue,x,y,z) -> DEL(u46(y,z))
-> Rules:
 u61(u46(x,y),u46(u,v)) -> and(u61(x,u),u61(y,v))
 u61(u46(x,y),nil) -> ffalse
 u61(nil,u46(y,z)) -> ffalse
 u61(nil,nil) -> ftrue
 del(u46(x,u46(y,z))) -> f(u61(x,y),x,y,z)
 f(ffalse,x,y,z) -> u46(x,del(u46(y,z)))
 f(ftrue,x,y,z) -> del(u46(y,z))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 DEL(u46(x,u46(y,z))) -> F(u61(x,y),x,y,z)
 F(ffalse,x,y,z) -> DEL(u46(y,z))
 F(ftrue,x,y,z) -> DEL(u46(y,z))
->->-> Rules:
 u61(u46(x,y),u46(u,v)) -> and(u61(x,u),u61(y,v))
 u61(u46(x,y),nil) -> ffalse
 u61(nil,u46(y,z)) -> ffalse
 u61(nil,nil) -> ftrue
 del(u46(x,u46(y,z))) -> f(u61(x,y),x,y,z)
 f(ffalse,x,y,z) -> u46(x,del(u46(y,z)))
 f(ftrue,x,y,z) -> del(u46(y,z))

Problem 1: 

Reduction Pairs Processor:
-> Pairs:
 DEL(u46(x,u46(y,z))) -> F(u61(x,y),x,y,z)
 F(ffalse,x,y,z) -> DEL(u46(y,z))
 F(ftrue,x,y,z) -> DEL(u46(y,z))
-> Rules:
 u61(u46(x,y),u46(u,v)) -> and(u61(x,u),u61(y,v))
 u61(u46(x,y),nil) -> ffalse
 u61(nil,u46(y,z)) -> ffalse
 u61(nil,nil) -> ftrue
 del(u46(x,u46(y,z))) -> f(u61(x,y),x,y,z)
 f(ffalse,x,y,z) -> u46(x,del(u46(y,z)))
 f(ftrue,x,y,z) -> del(u46(y,z))
-> Usable rules:
 u61(u46(x,y),u46(u,v)) -> and(u61(x,u),u61(y,v))
 u61(u46(x,y),nil) -> ffalse
 u61(nil,u46(y,z)) -> ffalse
 u61(nil,nil) -> ftrue
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[u61](X1,X2) = 2.X1 + 2.X2 + 2
[del](X) = 0
[f](X1,X2,X3,X4) = 0
[u46](X1,X2) = 2.X1 + 2.X2 + 2
[and](X1,X2) = X2 + 2
[fSNonEmpty] = 0
[ffalse] = 0
[nil] = 2
[ftrue] = 2
[u] = 2
[v] = 1
[U61](X1,X2) = 0
[DEL](X) = X
[F](X1,X2,X3,X4) = X2 + 2.X3 + 2.X4 + 2

Problem 1: 

SCC Processor:
-> Pairs:
 F(ffalse,x,y,z) -> DEL(u46(y,z))
 F(ftrue,x,y,z) -> DEL(u46(y,z))
-> Rules:
 u61(u46(x,y),u46(u,v)) -> and(u61(x,u),u61(y,v))
 u61(u46(x,y),nil) -> ffalse
 u61(nil,u46(y,z)) -> ffalse
 u61(nil,nil) -> ftrue
 del(u46(x,u46(y,z))) -> f(u61(x,y),x,y,z)
 f(ffalse,x,y,z) -> u46(x,del(u46(y,z)))
 f(ftrue,x,y,z) -> del(u46(y,z))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
