YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/XG0bF.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) Overlay + Local Confluence [EQUIVALENT, 0 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 0 ms]
(4) QDP
(5) DependencyGraphProof [EQUIVALENT, 0 ms]
(6) QDP
(7) TransformationProof [EQUIVALENT, 0 ms]
(8) QDP
(9) TransformationProof [EQUIVALENT, 0 ms]
(10) QDP
(11) TransformationProof [EQUIVALENT, 0 ms]
(12) QDP
(13) DependencyGraphProof [EQUIVALENT, 0 ms]
(14) QDP
(15) QDPSizeChangeProof [EQUIVALENT, 0 ms]
(16) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(x, f(y, a)) -> f(f(f(f(a, x), y), a), h(a))

Q is empty.

----------------------------------------

(1) Overlay + Local Confluence (EQUIVALENT)
The TRS is overlay and locally confluent. By [NOC] we can switch to innermost.
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(x, f(y, a)) -> f(f(f(f(a, x), y), a), h(a))

The set Q consists of the following terms:

   f(x0, f(x1, a))


----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(x, f(y, a)) -> F(f(f(f(a, x), y), a), h(a))
   F(x, f(y, a)) -> F(f(f(a, x), y), a)
   F(x, f(y, a)) -> F(f(a, x), y)
   F(x, f(y, a)) -> F(a, x)

The TRS R consists of the following rules:

   f(x, f(y, a)) -> f(f(f(f(a, x), y), a), h(a))

The set Q consists of the following terms:

   f(x0, f(x1, a))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 2 less nodes.
----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(x, f(y, a)) -> F(a, x)
   F(x, f(y, a)) -> F(f(a, x), y)

The TRS R consists of the following rules:

   f(x, f(y, a)) -> f(f(f(f(a, x), y), a), h(a))

The set Q consists of the following terms:

   f(x0, f(x1, a))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) TransformationProof (EQUIVALENT)
By forward instantiating [JAR06] the rule F(x, f(y, a)) -> F(a, x) we obtained the following new rules [LPAR04]:

   (F(f(y_1, a), f(x1, a)) -> F(a, f(y_1, a)),F(f(y_1, a), f(x1, a)) -> F(a, f(y_1, a)))


----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(x, f(y, a)) -> F(f(a, x), y)
   F(f(y_1, a), f(x1, a)) -> F(a, f(y_1, a))

The TRS R consists of the following rules:

   f(x, f(y, a)) -> f(f(f(f(a, x), y), a), h(a))

The set Q consists of the following terms:

   f(x0, f(x1, a))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) TransformationProof (EQUIVALENT)
By forward instantiating [JAR06] the rule F(x, f(y, a)) -> F(f(a, x), y) we obtained the following new rules [LPAR04]:

   (F(x0, f(f(y_1, a), a)) -> F(f(a, x0), f(y_1, a)),F(x0, f(f(y_1, a), a)) -> F(f(a, x0), f(y_1, a)))
   (F(a, f(f(y_1, a), a)) -> F(f(a, a), f(y_1, a)),F(a, f(f(y_1, a), a)) -> F(f(a, a), f(y_1, a)))


----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(f(y_1, a), f(x1, a)) -> F(a, f(y_1, a))
   F(x0, f(f(y_1, a), a)) -> F(f(a, x0), f(y_1, a))
   F(a, f(f(y_1, a), a)) -> F(f(a, a), f(y_1, a))

The TRS R consists of the following rules:

   f(x, f(y, a)) -> f(f(f(f(a, x), y), a), h(a))

The set Q consists of the following terms:

   f(x0, f(x1, a))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) TransformationProof (EQUIVALENT)
By forward instantiating [JAR06] the rule F(f(y_1, a), f(x1, a)) -> F(a, f(y_1, a)) we obtained the following new rules [LPAR04]:

   (F(f(f(y_1, a), a), f(x1, a)) -> F(a, f(f(y_1, a), a)),F(f(f(y_1, a), a), f(x1, a)) -> F(a, f(f(y_1, a), a)))


----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(x0, f(f(y_1, a), a)) -> F(f(a, x0), f(y_1, a))
   F(a, f(f(y_1, a), a)) -> F(f(a, a), f(y_1, a))
   F(f(f(y_1, a), a), f(x1, a)) -> F(a, f(f(y_1, a), a))

The TRS R consists of the following rules:

   f(x, f(y, a)) -> f(f(f(f(a, x), y), a), h(a))

The set Q consists of the following terms:

   f(x0, f(x1, a))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 2 less nodes.
----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(x0, f(f(y_1, a), a)) -> F(f(a, x0), f(y_1, a))

The TRS R consists of the following rules:

   f(x, f(y, a)) -> f(f(f(f(a, x), y), a), h(a))

The set Q consists of the following terms:

   f(x0, f(x1, a))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*F(x0, f(f(y_1, a), a)) -> F(f(a, x0), f(y_1, a))
The graph contains the following edges 2 > 2


----------------------------------------

(16)
YES
