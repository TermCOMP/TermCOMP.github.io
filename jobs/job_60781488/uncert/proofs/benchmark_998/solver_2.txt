YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/KQENE.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRSRRRProof [EQUIVALENT, 8 ms]
(2) QTRS
(3) RisEmptyProof [EQUIVALENT, 0 ms]
(4) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   from(X) -> cons(X, n__from(n__s(X)))
   sel(0, cons(X, Y)) -> X
   sel(s(X), cons(Y, Z)) -> sel(X, activate(Z))
   from(X) -> n__from(X)
   s(X) -> n__s(X)
   activate(n__from(X)) -> from(activate(X))
   activate(n__s(X)) -> s(activate(X))
   activate(X) -> X

Q is empty.

----------------------------------------

(1) QTRSRRRProof (EQUIVALENT)
Used ordering:
Quasi precedence:
sel_2 > activate_1 > from_1 > cons_2
sel_2 > activate_1 > from_1 > n__from_1
sel_2 > activate_1 > from_1 > n__s_1
sel_2 > activate_1 > s_1 > n__s_1


Status:
from_1: multiset status
cons_2: multiset status
n__from_1: multiset status
n__s_1: multiset status
sel_2: [1,2]
0: multiset status
s_1: multiset status
activate_1: multiset status

With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   from(X) -> cons(X, n__from(n__s(X)))
   sel(0, cons(X, Y)) -> X
   sel(s(X), cons(Y, Z)) -> sel(X, activate(Z))
   from(X) -> n__from(X)
   s(X) -> n__s(X)
   activate(n__from(X)) -> from(activate(X))
   activate(n__s(X)) -> s(activate(X))
   activate(X) -> X




----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
R is empty.
Q is empty.

----------------------------------------

(3) RisEmptyProof (EQUIVALENT)
The TRS R is empty. Hence, termination is trivially proven.
----------------------------------------

(4)
YES
