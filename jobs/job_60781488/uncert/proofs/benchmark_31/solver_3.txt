YES

Problem 1: 

(VAR vu95NonEmpty x y z)
(RULES
minus(minus(x,y),z) -> minus(x,plus(y,z))
minus(s(x),s(y)) -> minus(x,y)
minus(x,num0) -> x
plus(num0,y) -> y
plus(s(x),y) -> s(plus(x,y))
quot(num0,s(y)) -> num0
quot(s(x),s(y)) -> s(quot(minus(x,y),s(y)))
)


Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 MINUS(minus(x,y),z) -> MINUS(x,plus(y,z))
 MINUS(minus(x,y),z) -> PLUS(y,z)
 MINUS(s(x),s(y)) -> MINUS(x,y)
 PLUS(s(x),y) -> PLUS(x,y)
 QUOT(s(x),s(y)) -> MINUS(x,y)
 QUOT(s(x),s(y)) -> QUOT(minus(x,y),s(y))
-> Rules:
 minus(minus(x,y),z) -> minus(x,plus(y,z))
 minus(s(x),s(y)) -> minus(x,y)
 minus(x,num0) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y)) -> num0
 quot(s(x),s(y)) -> s(quot(minus(x,y),s(y)))

Problem 1: 

SCC Processor:
-> Pairs:
 MINUS(minus(x,y),z) -> MINUS(x,plus(y,z))
 MINUS(minus(x,y),z) -> PLUS(y,z)
 MINUS(s(x),s(y)) -> MINUS(x,y)
 PLUS(s(x),y) -> PLUS(x,y)
 QUOT(s(x),s(y)) -> MINUS(x,y)
 QUOT(s(x),s(y)) -> QUOT(minus(x,y),s(y))
-> Rules:
 minus(minus(x,y),z) -> minus(x,plus(y,z))
 minus(s(x),s(y)) -> minus(x,y)
 minus(x,num0) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y)) -> num0
 quot(s(x),s(y)) -> s(quot(minus(x,y),s(y)))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 PLUS(s(x),y) -> PLUS(x,y)
->->-> Rules:
 minus(minus(x,y),z) -> minus(x,plus(y,z))
 minus(s(x),s(y)) -> minus(x,y)
 minus(x,num0) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y)) -> num0
 quot(s(x),s(y)) -> s(quot(minus(x,y),s(y)))
->->Cycle:
->->-> Pairs:
 MINUS(minus(x,y),z) -> MINUS(x,plus(y,z))
 MINUS(s(x),s(y)) -> MINUS(x,y)
->->-> Rules:
 minus(minus(x,y),z) -> minus(x,plus(y,z))
 minus(s(x),s(y)) -> minus(x,y)
 minus(x,num0) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y)) -> num0
 quot(s(x),s(y)) -> s(quot(minus(x,y),s(y)))
->->Cycle:
->->-> Pairs:
 QUOT(s(x),s(y)) -> QUOT(minus(x,y),s(y))
->->-> Rules:
 minus(minus(x,y),z) -> minus(x,plus(y,z))
 minus(s(x),s(y)) -> minus(x,y)
 minus(x,num0) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y)) -> num0
 quot(s(x),s(y)) -> s(quot(minus(x,y),s(y)))


The problem is decomposed in 3 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 PLUS(s(x),y) -> PLUS(x,y)
-> Rules:
 minus(minus(x,y),z) -> minus(x,plus(y,z))
 minus(s(x),s(y)) -> minus(x,y)
 minus(x,num0) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y)) -> num0
 quot(s(x),s(y)) -> s(quot(minus(x,y),s(y)))
->Projection:
 pi(PLUS) = 1

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 minus(minus(x,y),z) -> minus(x,plus(y,z))
 minus(s(x),s(y)) -> minus(x,y)
 minus(x,num0) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y)) -> num0
 quot(s(x),s(y)) -> s(quot(minus(x,y),s(y)))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Subterm Processor:
-> Pairs:
 MINUS(minus(x,y),z) -> MINUS(x,plus(y,z))
 MINUS(s(x),s(y)) -> MINUS(x,y)
-> Rules:
 minus(minus(x,y),z) -> minus(x,plus(y,z))
 minus(s(x),s(y)) -> minus(x,y)
 minus(x,num0) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y)) -> num0
 quot(s(x),s(y)) -> s(quot(minus(x,y),s(y)))
->Projection:
 pi(MINUS) = 1

Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 minus(minus(x,y),z) -> minus(x,plus(y,z))
 minus(s(x),s(y)) -> minus(x,y)
 minus(x,num0) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y)) -> num0
 quot(s(x),s(y)) -> s(quot(minus(x,y),s(y)))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Reduction Pair Processor:
-> Pairs:
 QUOT(s(x),s(y)) -> QUOT(minus(x,y),s(y))
-> Rules:
 minus(minus(x,y),z) -> minus(x,plus(y,z))
 minus(s(x),s(y)) -> minus(x,y)
 minus(x,num0) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y)) -> num0
 quot(s(x),s(y)) -> s(quot(minus(x,y),s(y)))
-> Usable rules:
 minus(minus(x,y),z) -> minus(x,plus(y,z))
 minus(s(x),s(y)) -> minus(x,y)
 minus(x,num0) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[minus](X1,X2) = X1
[plus](X1,X2) = 2.X1 + X2 + 2
[quot](X1,X2) = 0
[num0] = 0
[fSNonEmpty] = 0
[s](X) = X + 2
[MINUS](X1,X2) = 0
[PLUS](X1,X2) = 0
[QUOT](X1,X2) = 2.X1

Problem 1.3: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 minus(minus(x,y),z) -> minus(x,plus(y,z))
 minus(s(x),s(y)) -> minus(x,y)
 minus(x,num0) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y)) -> num0
 quot(s(x),s(y)) -> s(quot(minus(x,y),s(y)))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
