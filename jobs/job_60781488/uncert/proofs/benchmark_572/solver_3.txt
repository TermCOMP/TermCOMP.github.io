YES

Problem 1: 

(VAR vu95NonEmpty X Y)
(RULES
min(min(X,Y),Z) -> min(X,plus(Y,Z))
min(s(X),s(Y)) -> min(X,Y)
min(X,num0) -> X
plus(num0,Y) -> Y
plus(s(X),Y) -> s(plus(X,Y))
quot(num0,s(Y)) -> num0
quot(s(X),s(Y)) -> s(quot(min(X,Y),s(Y)))
)


Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 MIN(min(X,Y),Z) -> MIN(X,plus(Y,Z))
 MIN(min(X,Y),Z) -> PLUS(Y,Z)
 MIN(s(X),s(Y)) -> MIN(X,Y)
 PLUS(s(X),Y) -> PLUS(X,Y)
 QUOT(s(X),s(Y)) -> MIN(X,Y)
 QUOT(s(X),s(Y)) -> QUOT(min(X,Y),s(Y))
-> Rules:
 min(min(X,Y),Z) -> min(X,plus(Y,Z))
 min(s(X),s(Y)) -> min(X,Y)
 min(X,num0) -> X
 plus(num0,Y) -> Y
 plus(s(X),Y) -> s(plus(X,Y))
 quot(num0,s(Y)) -> num0
 quot(s(X),s(Y)) -> s(quot(min(X,Y),s(Y)))

Problem 1: 

SCC Processor:
-> Pairs:
 MIN(min(X,Y),Z) -> MIN(X,plus(Y,Z))
 MIN(min(X,Y),Z) -> PLUS(Y,Z)
 MIN(s(X),s(Y)) -> MIN(X,Y)
 PLUS(s(X),Y) -> PLUS(X,Y)
 QUOT(s(X),s(Y)) -> MIN(X,Y)
 QUOT(s(X),s(Y)) -> QUOT(min(X,Y),s(Y))
-> Rules:
 min(min(X,Y),Z) -> min(X,plus(Y,Z))
 min(s(X),s(Y)) -> min(X,Y)
 min(X,num0) -> X
 plus(num0,Y) -> Y
 plus(s(X),Y) -> s(plus(X,Y))
 quot(num0,s(Y)) -> num0
 quot(s(X),s(Y)) -> s(quot(min(X,Y),s(Y)))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 PLUS(s(X),Y) -> PLUS(X,Y)
->->-> Rules:
 min(min(X,Y),Z) -> min(X,plus(Y,Z))
 min(s(X),s(Y)) -> min(X,Y)
 min(X,num0) -> X
 plus(num0,Y) -> Y
 plus(s(X),Y) -> s(plus(X,Y))
 quot(num0,s(Y)) -> num0
 quot(s(X),s(Y)) -> s(quot(min(X,Y),s(Y)))
->->Cycle:
->->-> Pairs:
 MIN(min(X,Y),Z) -> MIN(X,plus(Y,Z))
 MIN(s(X),s(Y)) -> MIN(X,Y)
->->-> Rules:
 min(min(X,Y),Z) -> min(X,plus(Y,Z))
 min(s(X),s(Y)) -> min(X,Y)
 min(X,num0) -> X
 plus(num0,Y) -> Y
 plus(s(X),Y) -> s(plus(X,Y))
 quot(num0,s(Y)) -> num0
 quot(s(X),s(Y)) -> s(quot(min(X,Y),s(Y)))
->->Cycle:
->->-> Pairs:
 QUOT(s(X),s(Y)) -> QUOT(min(X,Y),s(Y))
->->-> Rules:
 min(min(X,Y),Z) -> min(X,plus(Y,Z))
 min(s(X),s(Y)) -> min(X,Y)
 min(X,num0) -> X
 plus(num0,Y) -> Y
 plus(s(X),Y) -> s(plus(X,Y))
 quot(num0,s(Y)) -> num0
 quot(s(X),s(Y)) -> s(quot(min(X,Y),s(Y)))


The problem is decomposed in 3 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 PLUS(s(X),Y) -> PLUS(X,Y)
-> Rules:
 min(min(X,Y),Z) -> min(X,plus(Y,Z))
 min(s(X),s(Y)) -> min(X,Y)
 min(X,num0) -> X
 plus(num0,Y) -> Y
 plus(s(X),Y) -> s(plus(X,Y))
 quot(num0,s(Y)) -> num0
 quot(s(X),s(Y)) -> s(quot(min(X,Y),s(Y)))
->Projection:
 pi(PLUS) = 1

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 min(min(X,Y),Z) -> min(X,plus(Y,Z))
 min(s(X),s(Y)) -> min(X,Y)
 min(X,num0) -> X
 plus(num0,Y) -> Y
 plus(s(X),Y) -> s(plus(X,Y))
 quot(num0,s(Y)) -> num0
 quot(s(X),s(Y)) -> s(quot(min(X,Y),s(Y)))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Subterm Processor:
-> Pairs:
 MIN(min(X,Y),Z) -> MIN(X,plus(Y,Z))
 MIN(s(X),s(Y)) -> MIN(X,Y)
-> Rules:
 min(min(X,Y),Z) -> min(X,plus(Y,Z))
 min(s(X),s(Y)) -> min(X,Y)
 min(X,num0) -> X
 plus(num0,Y) -> Y
 plus(s(X),Y) -> s(plus(X,Y))
 quot(num0,s(Y)) -> num0
 quot(s(X),s(Y)) -> s(quot(min(X,Y),s(Y)))
->Projection:
 pi(MIN) = 1

Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 min(min(X,Y),Z) -> min(X,plus(Y,Z))
 min(s(X),s(Y)) -> min(X,Y)
 min(X,num0) -> X
 plus(num0,Y) -> Y
 plus(s(X),Y) -> s(plus(X,Y))
 quot(num0,s(Y)) -> num0
 quot(s(X),s(Y)) -> s(quot(min(X,Y),s(Y)))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Reduction Pair Processor:
-> Pairs:
 QUOT(s(X),s(Y)) -> QUOT(min(X,Y),s(Y))
-> Rules:
 min(min(X,Y),Z) -> min(X,plus(Y,Z))
 min(s(X),s(Y)) -> min(X,Y)
 min(X,num0) -> X
 plus(num0,Y) -> Y
 plus(s(X),Y) -> s(plus(X,Y))
 quot(num0,s(Y)) -> num0
 quot(s(X),s(Y)) -> s(quot(min(X,Y),s(Y)))
-> Usable rules:
 min(min(X,Y),Z) -> min(X,plus(Y,Z))
 min(s(X),s(Y)) -> min(X,Y)
 min(X,num0) -> X
 plus(num0,Y) -> Y
 plus(s(X),Y) -> s(plus(X,Y))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[min](X1,X2) = X1
[plus](X1,X2) = X1 + X2 + 1
[quot](X1,X2) = 0
[num0] = 0
[Z] = 0
[fSNonEmpty] = 0
[s](X) = X + 1
[MIN](X1,X2) = 0
[PLUS](X1,X2) = 0
[QUOT](X1,X2) = 2.X1

Problem 1.3: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 min(min(X,Y),Z) -> min(X,plus(Y,Z))
 min(s(X),s(Y)) -> min(X,Y)
 min(X,num0) -> X
 plus(num0,Y) -> Y
 plus(s(X),Y) -> s(plus(X,Y))
 quot(num0,s(Y)) -> num0
 quot(s(X),s(Y)) -> s(quot(min(X,Y),s(Y)))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
