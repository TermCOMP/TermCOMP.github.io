YES

Problem 1: 

(VAR vu95NonEmpty X X1 X2 X3 Y)
(RULES
au95u95div(num0,s(Y)) -> num0
au95u95div(s(X),s(Y)) -> au95u95if(au95u95geq(X,Y),s(div(minus(X,Y),s(Y))),num0)
au95u95div(X1,X2) -> div(X1,X2)
au95u95geq(num0,s(Y)) -> ffalse
au95u95geq(s(X),s(Y)) -> au95u95geq(X,Y)
au95u95geq(X,num0) -> ftrue
au95u95geq(X1,X2) -> geq(X1,X2)
au95u95if(ffalse,X,Y) -> mark(Y)
au95u95if(ftrue,X,Y) -> mark(X)
au95u95if(X1,X2,X3) -> if(X1,X2,X3)
au95u95minus(num0,Y) -> num0
au95u95minus(s(X),s(Y)) -> au95u95minus(X,Y)
au95u95minus(X1,X2) -> minus(X1,X2)
mark(num0) -> num0
mark(div(X1,X2)) -> au95u95div(mark(X1),X2)
mark(ffalse) -> ffalse
mark(geq(X1,X2)) -> au95u95geq(X1,X2)
mark(if(X1,X2,X3)) -> au95u95if(mark(X1),X2,X3)
mark(minus(X1,X2)) -> au95u95minus(X1,X2)
mark(s(X)) -> s(mark(X))
mark(ftrue) -> ftrue
)


Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 AU95U95DIV(s(X),s(Y)) -> AU95U95GEQ(X,Y)
 AU95U95DIV(s(X),s(Y)) -> AU95U95IF(au95u95geq(X,Y),s(div(minus(X,Y),s(Y))),num0)
 AU95U95GEQ(s(X),s(Y)) -> AU95U95GEQ(X,Y)
 AU95U95IF(ffalse,X,Y) -> MARK(Y)
 AU95U95IF(ftrue,X,Y) -> MARK(X)
 AU95U95MINUS(s(X),s(Y)) -> AU95U95MINUS(X,Y)
 MARK(div(X1,X2)) -> AU95U95DIV(mark(X1),X2)
 MARK(div(X1,X2)) -> MARK(X1)
 MARK(geq(X1,X2)) -> AU95U95GEQ(X1,X2)
 MARK(if(X1,X2,X3)) -> AU95U95IF(mark(X1),X2,X3)
 MARK(if(X1,X2,X3)) -> MARK(X1)
 MARK(minus(X1,X2)) -> AU95U95MINUS(X1,X2)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95div(num0,s(Y)) -> num0
 au95u95div(s(X),s(Y)) -> au95u95if(au95u95geq(X,Y),s(div(minus(X,Y),s(Y))),num0)
 au95u95div(X1,X2) -> div(X1,X2)
 au95u95geq(num0,s(Y)) -> ffalse
 au95u95geq(s(X),s(Y)) -> au95u95geq(X,Y)
 au95u95geq(X,num0) -> ftrue
 au95u95geq(X1,X2) -> geq(X1,X2)
 au95u95if(ffalse,X,Y) -> mark(Y)
 au95u95if(ftrue,X,Y) -> mark(X)
 au95u95if(X1,X2,X3) -> if(X1,X2,X3)
 au95u95minus(num0,Y) -> num0
 au95u95minus(s(X),s(Y)) -> au95u95minus(X,Y)
 au95u95minus(X1,X2) -> minus(X1,X2)
 mark(num0) -> num0
 mark(div(X1,X2)) -> au95u95div(mark(X1),X2)
 mark(ffalse) -> ffalse
 mark(geq(X1,X2)) -> au95u95geq(X1,X2)
 mark(if(X1,X2,X3)) -> au95u95if(mark(X1),X2,X3)
 mark(minus(X1,X2)) -> au95u95minus(X1,X2)
 mark(s(X)) -> s(mark(X))
 mark(ftrue) -> ftrue

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95DIV(s(X),s(Y)) -> AU95U95GEQ(X,Y)
 AU95U95DIV(s(X),s(Y)) -> AU95U95IF(au95u95geq(X,Y),s(div(minus(X,Y),s(Y))),num0)
 AU95U95GEQ(s(X),s(Y)) -> AU95U95GEQ(X,Y)
 AU95U95IF(ffalse,X,Y) -> MARK(Y)
 AU95U95IF(ftrue,X,Y) -> MARK(X)
 AU95U95MINUS(s(X),s(Y)) -> AU95U95MINUS(X,Y)
 MARK(div(X1,X2)) -> AU95U95DIV(mark(X1),X2)
 MARK(div(X1,X2)) -> MARK(X1)
 MARK(geq(X1,X2)) -> AU95U95GEQ(X1,X2)
 MARK(if(X1,X2,X3)) -> AU95U95IF(mark(X1),X2,X3)
 MARK(if(X1,X2,X3)) -> MARK(X1)
 MARK(minus(X1,X2)) -> AU95U95MINUS(X1,X2)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95div(num0,s(Y)) -> num0
 au95u95div(s(X),s(Y)) -> au95u95if(au95u95geq(X,Y),s(div(minus(X,Y),s(Y))),num0)
 au95u95div(X1,X2) -> div(X1,X2)
 au95u95geq(num0,s(Y)) -> ffalse
 au95u95geq(s(X),s(Y)) -> au95u95geq(X,Y)
 au95u95geq(X,num0) -> ftrue
 au95u95geq(X1,X2) -> geq(X1,X2)
 au95u95if(ffalse,X,Y) -> mark(Y)
 au95u95if(ftrue,X,Y) -> mark(X)
 au95u95if(X1,X2,X3) -> if(X1,X2,X3)
 au95u95minus(num0,Y) -> num0
 au95u95minus(s(X),s(Y)) -> au95u95minus(X,Y)
 au95u95minus(X1,X2) -> minus(X1,X2)
 mark(num0) -> num0
 mark(div(X1,X2)) -> au95u95div(mark(X1),X2)
 mark(ffalse) -> ffalse
 mark(geq(X1,X2)) -> au95u95geq(X1,X2)
 mark(if(X1,X2,X3)) -> au95u95if(mark(X1),X2,X3)
 mark(minus(X1,X2)) -> au95u95minus(X1,X2)
 mark(s(X)) -> s(mark(X))
 mark(ftrue) -> ftrue
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95MINUS(s(X),s(Y)) -> AU95U95MINUS(X,Y)
->->-> Rules:
 au95u95div(num0,s(Y)) -> num0
 au95u95div(s(X),s(Y)) -> au95u95if(au95u95geq(X,Y),s(div(minus(X,Y),s(Y))),num0)
 au95u95div(X1,X2) -> div(X1,X2)
 au95u95geq(num0,s(Y)) -> ffalse
 au95u95geq(s(X),s(Y)) -> au95u95geq(X,Y)
 au95u95geq(X,num0) -> ftrue
 au95u95geq(X1,X2) -> geq(X1,X2)
 au95u95if(ffalse,X,Y) -> mark(Y)
 au95u95if(ftrue,X,Y) -> mark(X)
 au95u95if(X1,X2,X3) -> if(X1,X2,X3)
 au95u95minus(num0,Y) -> num0
 au95u95minus(s(X),s(Y)) -> au95u95minus(X,Y)
 au95u95minus(X1,X2) -> minus(X1,X2)
 mark(num0) -> num0
 mark(div(X1,X2)) -> au95u95div(mark(X1),X2)
 mark(ffalse) -> ffalse
 mark(geq(X1,X2)) -> au95u95geq(X1,X2)
 mark(if(X1,X2,X3)) -> au95u95if(mark(X1),X2,X3)
 mark(minus(X1,X2)) -> au95u95minus(X1,X2)
 mark(s(X)) -> s(mark(X))
 mark(ftrue) -> ftrue
->->Cycle:
->->-> Pairs:
 AU95U95GEQ(s(X),s(Y)) -> AU95U95GEQ(X,Y)
->->-> Rules:
 au95u95div(num0,s(Y)) -> num0
 au95u95div(s(X),s(Y)) -> au95u95if(au95u95geq(X,Y),s(div(minus(X,Y),s(Y))),num0)
 au95u95div(X1,X2) -> div(X1,X2)
 au95u95geq(num0,s(Y)) -> ffalse
 au95u95geq(s(X),s(Y)) -> au95u95geq(X,Y)
 au95u95geq(X,num0) -> ftrue
 au95u95geq(X1,X2) -> geq(X1,X2)
 au95u95if(ffalse,X,Y) -> mark(Y)
 au95u95if(ftrue,X,Y) -> mark(X)
 au95u95if(X1,X2,X3) -> if(X1,X2,X3)
 au95u95minus(num0,Y) -> num0
 au95u95minus(s(X),s(Y)) -> au95u95minus(X,Y)
 au95u95minus(X1,X2) -> minus(X1,X2)
 mark(num0) -> num0
 mark(div(X1,X2)) -> au95u95div(mark(X1),X2)
 mark(ffalse) -> ffalse
 mark(geq(X1,X2)) -> au95u95geq(X1,X2)
 mark(if(X1,X2,X3)) -> au95u95if(mark(X1),X2,X3)
 mark(minus(X1,X2)) -> au95u95minus(X1,X2)
 mark(s(X)) -> s(mark(X))
 mark(ftrue) -> ftrue
->->Cycle:
->->-> Pairs:
 AU95U95DIV(s(X),s(Y)) -> AU95U95IF(au95u95geq(X,Y),s(div(minus(X,Y),s(Y))),num0)
 AU95U95IF(ffalse,X,Y) -> MARK(Y)
 AU95U95IF(ftrue,X,Y) -> MARK(X)
 MARK(div(X1,X2)) -> AU95U95DIV(mark(X1),X2)
 MARK(div(X1,X2)) -> MARK(X1)
 MARK(if(X1,X2,X3)) -> AU95U95IF(mark(X1),X2,X3)
 MARK(if(X1,X2,X3)) -> MARK(X1)
 MARK(s(X)) -> MARK(X)
->->-> Rules:
 au95u95div(num0,s(Y)) -> num0
 au95u95div(s(X),s(Y)) -> au95u95if(au95u95geq(X,Y),s(div(minus(X,Y),s(Y))),num0)
 au95u95div(X1,X2) -> div(X1,X2)
 au95u95geq(num0,s(Y)) -> ffalse
 au95u95geq(s(X),s(Y)) -> au95u95geq(X,Y)
 au95u95geq(X,num0) -> ftrue
 au95u95geq(X1,X2) -> geq(X1,X2)
 au95u95if(ffalse,X,Y) -> mark(Y)
 au95u95if(ftrue,X,Y) -> mark(X)
 au95u95if(X1,X2,X3) -> if(X1,X2,X3)
 au95u95minus(num0,Y) -> num0
 au95u95minus(s(X),s(Y)) -> au95u95minus(X,Y)
 au95u95minus(X1,X2) -> minus(X1,X2)
 mark(num0) -> num0
 mark(div(X1,X2)) -> au95u95div(mark(X1),X2)
 mark(ffalse) -> ffalse
 mark(geq(X1,X2)) -> au95u95geq(X1,X2)
 mark(if(X1,X2,X3)) -> au95u95if(mark(X1),X2,X3)
 mark(minus(X1,X2)) -> au95u95minus(X1,X2)
 mark(s(X)) -> s(mark(X))
 mark(ftrue) -> ftrue


The problem is decomposed in 3 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 AU95U95MINUS(s(X),s(Y)) -> AU95U95MINUS(X,Y)
-> Rules:
 au95u95div(num0,s(Y)) -> num0
 au95u95div(s(X),s(Y)) -> au95u95if(au95u95geq(X,Y),s(div(minus(X,Y),s(Y))),num0)
 au95u95div(X1,X2) -> div(X1,X2)
 au95u95geq(num0,s(Y)) -> ffalse
 au95u95geq(s(X),s(Y)) -> au95u95geq(X,Y)
 au95u95geq(X,num0) -> ftrue
 au95u95geq(X1,X2) -> geq(X1,X2)
 au95u95if(ffalse,X,Y) -> mark(Y)
 au95u95if(ftrue,X,Y) -> mark(X)
 au95u95if(X1,X2,X3) -> if(X1,X2,X3)
 au95u95minus(num0,Y) -> num0
 au95u95minus(s(X),s(Y)) -> au95u95minus(X,Y)
 au95u95minus(X1,X2) -> minus(X1,X2)
 mark(num0) -> num0
 mark(div(X1,X2)) -> au95u95div(mark(X1),X2)
 mark(ffalse) -> ffalse
 mark(geq(X1,X2)) -> au95u95geq(X1,X2)
 mark(if(X1,X2,X3)) -> au95u95if(mark(X1),X2,X3)
 mark(minus(X1,X2)) -> au95u95minus(X1,X2)
 mark(s(X)) -> s(mark(X))
 mark(ftrue) -> ftrue
->Projection:
 pi(AU95U95MINUS) = 1

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 au95u95div(num0,s(Y)) -> num0
 au95u95div(s(X),s(Y)) -> au95u95if(au95u95geq(X,Y),s(div(minus(X,Y),s(Y))),num0)
 au95u95div(X1,X2) -> div(X1,X2)
 au95u95geq(num0,s(Y)) -> ffalse
 au95u95geq(s(X),s(Y)) -> au95u95geq(X,Y)
 au95u95geq(X,num0) -> ftrue
 au95u95geq(X1,X2) -> geq(X1,X2)
 au95u95if(ffalse,X,Y) -> mark(Y)
 au95u95if(ftrue,X,Y) -> mark(X)
 au95u95if(X1,X2,X3) -> if(X1,X2,X3)
 au95u95minus(num0,Y) -> num0
 au95u95minus(s(X),s(Y)) -> au95u95minus(X,Y)
 au95u95minus(X1,X2) -> minus(X1,X2)
 mark(num0) -> num0
 mark(div(X1,X2)) -> au95u95div(mark(X1),X2)
 mark(ffalse) -> ffalse
 mark(geq(X1,X2)) -> au95u95geq(X1,X2)
 mark(if(X1,X2,X3)) -> au95u95if(mark(X1),X2,X3)
 mark(minus(X1,X2)) -> au95u95minus(X1,X2)
 mark(s(X)) -> s(mark(X))
 mark(ftrue) -> ftrue
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Subterm Processor:
-> Pairs:
 AU95U95GEQ(s(X),s(Y)) -> AU95U95GEQ(X,Y)
-> Rules:
 au95u95div(num0,s(Y)) -> num0
 au95u95div(s(X),s(Y)) -> au95u95if(au95u95geq(X,Y),s(div(minus(X,Y),s(Y))),num0)
 au95u95div(X1,X2) -> div(X1,X2)
 au95u95geq(num0,s(Y)) -> ffalse
 au95u95geq(s(X),s(Y)) -> au95u95geq(X,Y)
 au95u95geq(X,num0) -> ftrue
 au95u95geq(X1,X2) -> geq(X1,X2)
 au95u95if(ffalse,X,Y) -> mark(Y)
 au95u95if(ftrue,X,Y) -> mark(X)
 au95u95if(X1,X2,X3) -> if(X1,X2,X3)
 au95u95minus(num0,Y) -> num0
 au95u95minus(s(X),s(Y)) -> au95u95minus(X,Y)
 au95u95minus(X1,X2) -> minus(X1,X2)
 mark(num0) -> num0
 mark(div(X1,X2)) -> au95u95div(mark(X1),X2)
 mark(ffalse) -> ffalse
 mark(geq(X1,X2)) -> au95u95geq(X1,X2)
 mark(if(X1,X2,X3)) -> au95u95if(mark(X1),X2,X3)
 mark(minus(X1,X2)) -> au95u95minus(X1,X2)
 mark(s(X)) -> s(mark(X))
 mark(ftrue) -> ftrue
->Projection:
 pi(AU95U95GEQ) = 1

Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 au95u95div(num0,s(Y)) -> num0
 au95u95div(s(X),s(Y)) -> au95u95if(au95u95geq(X,Y),s(div(minus(X,Y),s(Y))),num0)
 au95u95div(X1,X2) -> div(X1,X2)
 au95u95geq(num0,s(Y)) -> ffalse
 au95u95geq(s(X),s(Y)) -> au95u95geq(X,Y)
 au95u95geq(X,num0) -> ftrue
 au95u95geq(X1,X2) -> geq(X1,X2)
 au95u95if(ffalse,X,Y) -> mark(Y)
 au95u95if(ftrue,X,Y) -> mark(X)
 au95u95if(X1,X2,X3) -> if(X1,X2,X3)
 au95u95minus(num0,Y) -> num0
 au95u95minus(s(X),s(Y)) -> au95u95minus(X,Y)
 au95u95minus(X1,X2) -> minus(X1,X2)
 mark(num0) -> num0
 mark(div(X1,X2)) -> au95u95div(mark(X1),X2)
 mark(ffalse) -> ffalse
 mark(geq(X1,X2)) -> au95u95geq(X1,X2)
 mark(if(X1,X2,X3)) -> au95u95if(mark(X1),X2,X3)
 mark(minus(X1,X2)) -> au95u95minus(X1,X2)
 mark(s(X)) -> s(mark(X))
 mark(ftrue) -> ftrue
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Reduction Pair Processor:
-> Pairs:
 AU95U95DIV(s(X),s(Y)) -> AU95U95IF(au95u95geq(X,Y),s(div(minus(X,Y),s(Y))),num0)
 AU95U95IF(ffalse,X,Y) -> MARK(Y)
 AU95U95IF(ftrue,X,Y) -> MARK(X)
 MARK(div(X1,X2)) -> AU95U95DIV(mark(X1),X2)
 MARK(div(X1,X2)) -> MARK(X1)
 MARK(if(X1,X2,X3)) -> AU95U95IF(mark(X1),X2,X3)
 MARK(if(X1,X2,X3)) -> MARK(X1)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95div(num0,s(Y)) -> num0
 au95u95div(s(X),s(Y)) -> au95u95if(au95u95geq(X,Y),s(div(minus(X,Y),s(Y))),num0)
 au95u95div(X1,X2) -> div(X1,X2)
 au95u95geq(num0,s(Y)) -> ffalse
 au95u95geq(s(X),s(Y)) -> au95u95geq(X,Y)
 au95u95geq(X,num0) -> ftrue
 au95u95geq(X1,X2) -> geq(X1,X2)
 au95u95if(ffalse,X,Y) -> mark(Y)
 au95u95if(ftrue,X,Y) -> mark(X)
 au95u95if(X1,X2,X3) -> if(X1,X2,X3)
 au95u95minus(num0,Y) -> num0
 au95u95minus(s(X),s(Y)) -> au95u95minus(X,Y)
 au95u95minus(X1,X2) -> minus(X1,X2)
 mark(num0) -> num0
 mark(div(X1,X2)) -> au95u95div(mark(X1),X2)
 mark(ffalse) -> ffalse
 mark(geq(X1,X2)) -> au95u95geq(X1,X2)
 mark(if(X1,X2,X3)) -> au95u95if(mark(X1),X2,X3)
 mark(minus(X1,X2)) -> au95u95minus(X1,X2)
 mark(s(X)) -> s(mark(X))
 mark(ftrue) -> ftrue
-> Usable rules:
 au95u95div(num0,s(Y)) -> num0
 au95u95div(s(X),s(Y)) -> au95u95if(au95u95geq(X,Y),s(div(minus(X,Y),s(Y))),num0)
 au95u95div(X1,X2) -> div(X1,X2)
 au95u95geq(num0,s(Y)) -> ffalse
 au95u95geq(s(X),s(Y)) -> au95u95geq(X,Y)
 au95u95geq(X,num0) -> ftrue
 au95u95geq(X1,X2) -> geq(X1,X2)
 au95u95if(ffalse,X,Y) -> mark(Y)
 au95u95if(ftrue,X,Y) -> mark(X)
 au95u95if(X1,X2,X3) -> if(X1,X2,X3)
 au95u95minus(num0,Y) -> num0
 au95u95minus(s(X),s(Y)) -> au95u95minus(X,Y)
 au95u95minus(X1,X2) -> minus(X1,X2)
 mark(num0) -> num0
 mark(div(X1,X2)) -> au95u95div(mark(X1),X2)
 mark(ffalse) -> ffalse
 mark(geq(X1,X2)) -> au95u95geq(X1,X2)
 mark(if(X1,X2,X3)) -> au95u95if(mark(X1),X2,X3)
 mark(minus(X1,X2)) -> au95u95minus(X1,X2)
 mark(s(X)) -> s(mark(X))
 mark(ftrue) -> ftrue
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95div](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95geq](X1,X2) = 1
[au95u95if](X1,X2,X3) = 2.X1 + X2 + 2.X3
[au95u95minus](X1,X2) = 0
[mark](X) = X
[num0] = 0
[div](X1,X2) = 2.X1 + 2.X2 + 2
[fSNonEmpty] = 0
[ffalse] = 1
[geq](X1,X2) = 1
[if](X1,X2,X3) = 2.X1 + X2 + 2.X3
[minus](X1,X2) = 0
[s](X) = X + 2
[ftrue] = 1
[AU95U95DIV](X1,X2) = 2.X1 + 2.X2 + 2
[AU95U95GEQ](X1,X2) = 0
[AU95U95IF](X1,X2,X3) = X2 + 2.X3 + 1
[AU95U95MINUS](X1,X2) = 0
[MARK](X) = X + 1

Problem 1.3: 

SCC Processor:
-> Pairs:
 AU95U95IF(ffalse,X,Y) -> MARK(Y)
 AU95U95IF(ftrue,X,Y) -> MARK(X)
 MARK(div(X1,X2)) -> AU95U95DIV(mark(X1),X2)
 MARK(div(X1,X2)) -> MARK(X1)
 MARK(if(X1,X2,X3)) -> AU95U95IF(mark(X1),X2,X3)
 MARK(if(X1,X2,X3)) -> MARK(X1)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95div(num0,s(Y)) -> num0
 au95u95div(s(X),s(Y)) -> au95u95if(au95u95geq(X,Y),s(div(minus(X,Y),s(Y))),num0)
 au95u95div(X1,X2) -> div(X1,X2)
 au95u95geq(num0,s(Y)) -> ffalse
 au95u95geq(s(X),s(Y)) -> au95u95geq(X,Y)
 au95u95geq(X,num0) -> ftrue
 au95u95geq(X1,X2) -> geq(X1,X2)
 au95u95if(ffalse,X,Y) -> mark(Y)
 au95u95if(ftrue,X,Y) -> mark(X)
 au95u95if(X1,X2,X3) -> if(X1,X2,X3)
 au95u95minus(num0,Y) -> num0
 au95u95minus(s(X),s(Y)) -> au95u95minus(X,Y)
 au95u95minus(X1,X2) -> minus(X1,X2)
 mark(num0) -> num0
 mark(div(X1,X2)) -> au95u95div(mark(X1),X2)
 mark(ffalse) -> ffalse
 mark(geq(X1,X2)) -> au95u95geq(X1,X2)
 mark(if(X1,X2,X3)) -> au95u95if(mark(X1),X2,X3)
 mark(minus(X1,X2)) -> au95u95minus(X1,X2)
 mark(s(X)) -> s(mark(X))
 mark(ftrue) -> ftrue
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95IF(ffalse,X,Y) -> MARK(Y)
 AU95U95IF(ftrue,X,Y) -> MARK(X)
 MARK(div(X1,X2)) -> MARK(X1)
 MARK(if(X1,X2,X3)) -> AU95U95IF(mark(X1),X2,X3)
 MARK(if(X1,X2,X3)) -> MARK(X1)
 MARK(s(X)) -> MARK(X)
->->-> Rules:
 au95u95div(num0,s(Y)) -> num0
 au95u95div(s(X),s(Y)) -> au95u95if(au95u95geq(X,Y),s(div(minus(X,Y),s(Y))),num0)
 au95u95div(X1,X2) -> div(X1,X2)
 au95u95geq(num0,s(Y)) -> ffalse
 au95u95geq(s(X),s(Y)) -> au95u95geq(X,Y)
 au95u95geq(X,num0) -> ftrue
 au95u95geq(X1,X2) -> geq(X1,X2)
 au95u95if(ffalse,X,Y) -> mark(Y)
 au95u95if(ftrue,X,Y) -> mark(X)
 au95u95if(X1,X2,X3) -> if(X1,X2,X3)
 au95u95minus(num0,Y) -> num0
 au95u95minus(s(X),s(Y)) -> au95u95minus(X,Y)
 au95u95minus(X1,X2) -> minus(X1,X2)
 mark(num0) -> num0
 mark(div(X1,X2)) -> au95u95div(mark(X1),X2)
 mark(ffalse) -> ffalse
 mark(geq(X1,X2)) -> au95u95geq(X1,X2)
 mark(if(X1,X2,X3)) -> au95u95if(mark(X1),X2,X3)
 mark(minus(X1,X2)) -> au95u95minus(X1,X2)
 mark(s(X)) -> s(mark(X))
 mark(ftrue) -> ftrue

Problem 1.3: 

Reduction Pair Processor:
-> Pairs:
 AU95U95IF(ffalse,X,Y) -> MARK(Y)
 AU95U95IF(ftrue,X,Y) -> MARK(X)
 MARK(div(X1,X2)) -> MARK(X1)
 MARK(if(X1,X2,X3)) -> AU95U95IF(mark(X1),X2,X3)
 MARK(if(X1,X2,X3)) -> MARK(X1)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95div(num0,s(Y)) -> num0
 au95u95div(s(X),s(Y)) -> au95u95if(au95u95geq(X,Y),s(div(minus(X,Y),s(Y))),num0)
 au95u95div(X1,X2) -> div(X1,X2)
 au95u95geq(num0,s(Y)) -> ffalse
 au95u95geq(s(X),s(Y)) -> au95u95geq(X,Y)
 au95u95geq(X,num0) -> ftrue
 au95u95geq(X1,X2) -> geq(X1,X2)
 au95u95if(ffalse,X,Y) -> mark(Y)
 au95u95if(ftrue,X,Y) -> mark(X)
 au95u95if(X1,X2,X3) -> if(X1,X2,X3)
 au95u95minus(num0,Y) -> num0
 au95u95minus(s(X),s(Y)) -> au95u95minus(X,Y)
 au95u95minus(X1,X2) -> minus(X1,X2)
 mark(num0) -> num0
 mark(div(X1,X2)) -> au95u95div(mark(X1),X2)
 mark(ffalse) -> ffalse
 mark(geq(X1,X2)) -> au95u95geq(X1,X2)
 mark(if(X1,X2,X3)) -> au95u95if(mark(X1),X2,X3)
 mark(minus(X1,X2)) -> au95u95minus(X1,X2)
 mark(s(X)) -> s(mark(X))
 mark(ftrue) -> ftrue
-> Usable rules:
 au95u95div(num0,s(Y)) -> num0
 au95u95div(s(X),s(Y)) -> au95u95if(au95u95geq(X,Y),s(div(minus(X,Y),s(Y))),num0)
 au95u95div(X1,X2) -> div(X1,X2)
 au95u95geq(num0,s(Y)) -> ffalse
 au95u95geq(s(X),s(Y)) -> au95u95geq(X,Y)
 au95u95geq(X,num0) -> ftrue
 au95u95geq(X1,X2) -> geq(X1,X2)
 au95u95if(ffalse,X,Y) -> mark(Y)
 au95u95if(ftrue,X,Y) -> mark(X)
 au95u95if(X1,X2,X3) -> if(X1,X2,X3)
 au95u95minus(num0,Y) -> num0
 au95u95minus(s(X),s(Y)) -> au95u95minus(X,Y)
 au95u95minus(X1,X2) -> minus(X1,X2)
 mark(num0) -> num0
 mark(div(X1,X2)) -> au95u95div(mark(X1),X2)
 mark(ffalse) -> ffalse
 mark(geq(X1,X2)) -> au95u95geq(X1,X2)
 mark(if(X1,X2,X3)) -> au95u95if(mark(X1),X2,X3)
 mark(minus(X1,X2)) -> au95u95minus(X1,X2)
 mark(s(X)) -> s(mark(X))
 mark(ftrue) -> ftrue
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95div](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95geq](X1,X2) = 0
[au95u95if](X1,X2,X3) = 2.X1 + X2 + X3 + 1
[au95u95minus](X1,X2) = X1
[mark](X) = X
[num0] = 1
[div](X1,X2) = 2.X1 + 2.X2 + 2
[fSNonEmpty] = 0
[ffalse] = 0
[geq](X1,X2) = 0
[if](X1,X2,X3) = 2.X1 + X2 + X3 + 1
[minus](X1,X2) = X1
[s](X) = X + 2
[ftrue] = 0
[AU95U95DIV](X1,X2) = 0
[AU95U95GEQ](X1,X2) = 0
[AU95U95IF](X1,X2,X3) = 2.X2 + 2.X3 + 2
[AU95U95MINUS](X1,X2) = 0
[MARK](X) = 2.X + 1

Problem 1.3: 

SCC Processor:
-> Pairs:
 AU95U95IF(ftrue,X,Y) -> MARK(X)
 MARK(div(X1,X2)) -> MARK(X1)
 MARK(if(X1,X2,X3)) -> AU95U95IF(mark(X1),X2,X3)
 MARK(if(X1,X2,X3)) -> MARK(X1)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95div(num0,s(Y)) -> num0
 au95u95div(s(X),s(Y)) -> au95u95if(au95u95geq(X,Y),s(div(minus(X,Y),s(Y))),num0)
 au95u95div(X1,X2) -> div(X1,X2)
 au95u95geq(num0,s(Y)) -> ffalse
 au95u95geq(s(X),s(Y)) -> au95u95geq(X,Y)
 au95u95geq(X,num0) -> ftrue
 au95u95geq(X1,X2) -> geq(X1,X2)
 au95u95if(ffalse,X,Y) -> mark(Y)
 au95u95if(ftrue,X,Y) -> mark(X)
 au95u95if(X1,X2,X3) -> if(X1,X2,X3)
 au95u95minus(num0,Y) -> num0
 au95u95minus(s(X),s(Y)) -> au95u95minus(X,Y)
 au95u95minus(X1,X2) -> minus(X1,X2)
 mark(num0) -> num0
 mark(div(X1,X2)) -> au95u95div(mark(X1),X2)
 mark(ffalse) -> ffalse
 mark(geq(X1,X2)) -> au95u95geq(X1,X2)
 mark(if(X1,X2,X3)) -> au95u95if(mark(X1),X2,X3)
 mark(minus(X1,X2)) -> au95u95minus(X1,X2)
 mark(s(X)) -> s(mark(X))
 mark(ftrue) -> ftrue
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95IF(ftrue,X,Y) -> MARK(X)
 MARK(div(X1,X2)) -> MARK(X1)
 MARK(if(X1,X2,X3)) -> AU95U95IF(mark(X1),X2,X3)
 MARK(if(X1,X2,X3)) -> MARK(X1)
 MARK(s(X)) -> MARK(X)
->->-> Rules:
 au95u95div(num0,s(Y)) -> num0
 au95u95div(s(X),s(Y)) -> au95u95if(au95u95geq(X,Y),s(div(minus(X,Y),s(Y))),num0)
 au95u95div(X1,X2) -> div(X1,X2)
 au95u95geq(num0,s(Y)) -> ffalse
 au95u95geq(s(X),s(Y)) -> au95u95geq(X,Y)
 au95u95geq(X,num0) -> ftrue
 au95u95geq(X1,X2) -> geq(X1,X2)
 au95u95if(ffalse,X,Y) -> mark(Y)
 au95u95if(ftrue,X,Y) -> mark(X)
 au95u95if(X1,X2,X3) -> if(X1,X2,X3)
 au95u95minus(num0,Y) -> num0
 au95u95minus(s(X),s(Y)) -> au95u95minus(X,Y)
 au95u95minus(X1,X2) -> minus(X1,X2)
 mark(num0) -> num0
 mark(div(X1,X2)) -> au95u95div(mark(X1),X2)
 mark(ffalse) -> ffalse
 mark(geq(X1,X2)) -> au95u95geq(X1,X2)
 mark(if(X1,X2,X3)) -> au95u95if(mark(X1),X2,X3)
 mark(minus(X1,X2)) -> au95u95minus(X1,X2)
 mark(s(X)) -> s(mark(X))
 mark(ftrue) -> ftrue

Problem 1.3: 

Subterm Processor:
-> Pairs:
 AU95U95IF(ftrue,X,Y) -> MARK(X)
 MARK(div(X1,X2)) -> MARK(X1)
 MARK(if(X1,X2,X3)) -> AU95U95IF(mark(X1),X2,X3)
 MARK(if(X1,X2,X3)) -> MARK(X1)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95div(num0,s(Y)) -> num0
 au95u95div(s(X),s(Y)) -> au95u95if(au95u95geq(X,Y),s(div(minus(X,Y),s(Y))),num0)
 au95u95div(X1,X2) -> div(X1,X2)
 au95u95geq(num0,s(Y)) -> ffalse
 au95u95geq(s(X),s(Y)) -> au95u95geq(X,Y)
 au95u95geq(X,num0) -> ftrue
 au95u95geq(X1,X2) -> geq(X1,X2)
 au95u95if(ffalse,X,Y) -> mark(Y)
 au95u95if(ftrue,X,Y) -> mark(X)
 au95u95if(X1,X2,X3) -> if(X1,X2,X3)
 au95u95minus(num0,Y) -> num0
 au95u95minus(s(X),s(Y)) -> au95u95minus(X,Y)
 au95u95minus(X1,X2) -> minus(X1,X2)
 mark(num0) -> num0
 mark(div(X1,X2)) -> au95u95div(mark(X1),X2)
 mark(ffalse) -> ffalse
 mark(geq(X1,X2)) -> au95u95geq(X1,X2)
 mark(if(X1,X2,X3)) -> au95u95if(mark(X1),X2,X3)
 mark(minus(X1,X2)) -> au95u95minus(X1,X2)
 mark(s(X)) -> s(mark(X))
 mark(ftrue) -> ftrue
->Projection:
 pi(AU95U95IF) = 2
 pi(MARK) = 1

Problem 1.3: 

SCC Processor:
-> Pairs:
 AU95U95IF(ftrue,X,Y) -> MARK(X)
-> Rules:
 au95u95div(num0,s(Y)) -> num0
 au95u95div(s(X),s(Y)) -> au95u95if(au95u95geq(X,Y),s(div(minus(X,Y),s(Y))),num0)
 au95u95div(X1,X2) -> div(X1,X2)
 au95u95geq(num0,s(Y)) -> ffalse
 au95u95geq(s(X),s(Y)) -> au95u95geq(X,Y)
 au95u95geq(X,num0) -> ftrue
 au95u95geq(X1,X2) -> geq(X1,X2)
 au95u95if(ffalse,X,Y) -> mark(Y)
 au95u95if(ftrue,X,Y) -> mark(X)
 au95u95if(X1,X2,X3) -> if(X1,X2,X3)
 au95u95minus(num0,Y) -> num0
 au95u95minus(s(X),s(Y)) -> au95u95minus(X,Y)
 au95u95minus(X1,X2) -> minus(X1,X2)
 mark(num0) -> num0
 mark(div(X1,X2)) -> au95u95div(mark(X1),X2)
 mark(ffalse) -> ffalse
 mark(geq(X1,X2)) -> au95u95geq(X1,X2)
 mark(if(X1,X2,X3)) -> au95u95if(mark(X1),X2,X3)
 mark(minus(X1,X2)) -> au95u95minus(X1,X2)
 mark(s(X)) -> s(mark(X))
 mark(ftrue) -> ftrue
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
