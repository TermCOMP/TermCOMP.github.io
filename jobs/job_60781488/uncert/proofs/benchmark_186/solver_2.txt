YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/SRzZD.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRSRRRProof [EQUIVALENT, 42 ms]
(2) QTRS
(3) QTRSRRRProof [EQUIVALENT, 0 ms]
(4) QTRS
(5) AAECC Innermost [EQUIVALENT, 0 ms]
(6) QTRS
(7) DependencyPairsProof [EQUIVALENT, 0 ms]
(8) QDP
(9) DependencyGraphProof [EQUIVALENT, 0 ms]
(10) AND
    (11) QDP
        (12) UsableRulesProof [EQUIVALENT, 0 ms]
        (13) QDP
        (14) QReductionProof [EQUIVALENT, 0 ms]
        (15) QDP
        (16) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (17) YES
    (18) QDP
        (19) UsableRulesProof [EQUIVALENT, 0 ms]
        (20) QDP
        (21) QReductionProof [EQUIVALENT, 0 ms]
        (22) QDP
        (23) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (24) YES
    (25) QDP
        (26) UsableRulesProof [EQUIVALENT, 0 ms]
        (27) QDP
        (28) QReductionProof [EQUIVALENT, 0 ms]
        (29) QDP
        (30) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (31) YES
    (32) QDP
        (33) UsableRulesProof [EQUIVALENT, 0 ms]
        (34) QDP
        (35) QReductionProof [EQUIVALENT, 0 ms]
        (36) QDP
        (37) TransformationProof [EQUIVALENT, 0 ms]
        (38) QDP
        (39) DependencyGraphProof [EQUIVALENT, 0 ms]
        (40) QDP
        (41) TransformationProof [EQUIVALENT, 0 ms]
        (42) QDP
        (43) TransformationProof [EQUIVALENT, 0 ms]
        (44) QDP
        (45) DependencyGraphProof [EQUIVALENT, 0 ms]
        (46) QDP
        (47) TransformationProof [EQUIVALENT, 0 ms]
        (48) QDP
        (49) SemLabProof [SOUND, 31 ms]
        (50) QDP
        (51) DependencyGraphProof [EQUIVALENT, 0 ms]
        (52) QDP
        (53) UsableRulesReductionPairsProof [EQUIVALENT, 3 ms]
        (54) QDP
        (55) QDPOrderProof [EQUIVALENT, 2 ms]
        (56) QDP
        (57) DependencyGraphProof [EQUIVALENT, 0 ms]
        (58) TRUE


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   tower(x) -> f(a, x, s(0))
   f(a, 0, y) -> y
   f(a, s(x), y) -> f(b, y, s(x))
   f(b, y, x) -> f(a, half(x), exp(y))
   exp(0) -> s(0)
   exp(s(x)) -> double(exp(x))
   double(0) -> 0
   double(s(x)) -> s(s(double(x)))
   half(0) -> double(0)
   half(s(0)) -> half(0)
   half(s(s(x))) -> s(half(x))

Q is empty.

----------------------------------------

(1) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(a) = 0
   POL(b) = 0
   POL(double(x_1)) = x_1
   POL(exp(x_1)) = x_1
   POL(f(x_1, x_2, x_3)) = x_1 + 2*x_2 + 2*x_3
   POL(half(x_1)) = x_1
   POL(s(x_1)) = x_1
   POL(tower(x_1)) = 2 + 2*x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   tower(x) -> f(a, x, s(0))




----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(a, 0, y) -> y
   f(a, s(x), y) -> f(b, y, s(x))
   f(b, y, x) -> f(a, half(x), exp(y))
   exp(0) -> s(0)
   exp(s(x)) -> double(exp(x))
   double(0) -> 0
   double(s(x)) -> s(s(double(x)))
   half(0) -> double(0)
   half(s(0)) -> half(0)
   half(s(s(x))) -> s(half(x))

Q is empty.

----------------------------------------

(3) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(a) = 0
   POL(b) = 0
   POL(double(x_1)) = x_1
   POL(exp(x_1)) = x_1
   POL(f(x_1, x_2, x_3)) = 1 + x_1 + 2*x_2 + 2*x_3
   POL(half(x_1)) = x_1
   POL(s(x_1)) = x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   f(a, 0, y) -> y




----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(a, s(x), y) -> f(b, y, s(x))
   f(b, y, x) -> f(a, half(x), exp(y))
   exp(0) -> s(0)
   exp(s(x)) -> double(exp(x))
   double(0) -> 0
   double(s(x)) -> s(s(double(x)))
   half(0) -> double(0)
   half(s(0)) -> half(0)
   half(s(s(x))) -> s(half(x))

Q is empty.

----------------------------------------

(5) AAECC Innermost (EQUIVALENT)
We have applied [NOC,AAECCNOC] to switch to innermost. The TRS R 1 is 
   exp(0) -> s(0)
   exp(s(x)) -> double(exp(x))
   double(0) -> 0
   double(s(x)) -> s(s(double(x)))
   half(0) -> double(0)
   half(s(0)) -> half(0)
   half(s(s(x))) -> s(half(x))

The TRS R 2 is 
   f(a, s(x), y) -> f(b, y, s(x))
   f(b, y, x) -> f(a, half(x), exp(y))

The signature Sigma is {f_3}
----------------------------------------

(6)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(a, s(x), y) -> f(b, y, s(x))
   f(b, y, x) -> f(a, half(x), exp(y))
   exp(0) -> s(0)
   exp(s(x)) -> double(exp(x))
   double(0) -> 0
   double(s(x)) -> s(s(double(x)))
   half(0) -> double(0)
   half(s(0)) -> half(0)
   half(s(s(x))) -> s(half(x))

The set Q consists of the following terms:

   f(a, s(x0), x1)
   f(b, x0, x1)
   exp(0)
   exp(s(x0))
   double(0)
   double(s(x0))
   half(0)
   half(s(0))
   half(s(s(x0)))


----------------------------------------

(7) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(a, s(x), y) -> F(b, y, s(x))
   F(b, y, x) -> F(a, half(x), exp(y))
   F(b, y, x) -> HALF(x)
   F(b, y, x) -> EXP(y)
   EXP(s(x)) -> DOUBLE(exp(x))
   EXP(s(x)) -> EXP(x)
   DOUBLE(s(x)) -> DOUBLE(x)
   HALF(0) -> DOUBLE(0)
   HALF(s(0)) -> HALF(0)
   HALF(s(s(x))) -> HALF(x)

The TRS R consists of the following rules:

   f(a, s(x), y) -> f(b, y, s(x))
   f(b, y, x) -> f(a, half(x), exp(y))
   exp(0) -> s(0)
   exp(s(x)) -> double(exp(x))
   double(0) -> 0
   double(s(x)) -> s(s(double(x)))
   half(0) -> double(0)
   half(s(0)) -> half(0)
   half(s(s(x))) -> s(half(x))

The set Q consists of the following terms:

   f(a, s(x0), x1)
   f(b, x0, x1)
   exp(0)
   exp(s(x0))
   double(0)
   double(s(x0))
   half(0)
   half(s(0))
   half(s(s(x0)))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 4 SCCs with 5 less nodes.
----------------------------------------

(10)
Complex Obligation (AND)

----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DOUBLE(s(x)) -> DOUBLE(x)

The TRS R consists of the following rules:

   f(a, s(x), y) -> f(b, y, s(x))
   f(b, y, x) -> f(a, half(x), exp(y))
   exp(0) -> s(0)
   exp(s(x)) -> double(exp(x))
   double(0) -> 0
   double(s(x)) -> s(s(double(x)))
   half(0) -> double(0)
   half(s(0)) -> half(0)
   half(s(s(x))) -> s(half(x))

The set Q consists of the following terms:

   f(a, s(x0), x1)
   f(b, x0, x1)
   exp(0)
   exp(s(x0))
   double(0)
   double(s(x0))
   half(0)
   half(s(0))
   half(s(s(x0)))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(12) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(13)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DOUBLE(s(x)) -> DOUBLE(x)

R is empty.
The set Q consists of the following terms:

   f(a, s(x0), x1)
   f(b, x0, x1)
   exp(0)
   exp(s(x0))
   double(0)
   double(s(x0))
   half(0)
   half(s(0))
   half(s(s(x0)))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(14) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   f(a, s(x0), x1)
   f(b, x0, x1)
   exp(0)
   exp(s(x0))
   double(0)
   double(s(x0))
   half(0)
   half(s(0))
   half(s(s(x0)))


----------------------------------------

(15)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DOUBLE(s(x)) -> DOUBLE(x)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(16) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*DOUBLE(s(x)) -> DOUBLE(x)
The graph contains the following edges 1 > 1


----------------------------------------

(17)
YES

----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   HALF(s(s(x))) -> HALF(x)

The TRS R consists of the following rules:

   f(a, s(x), y) -> f(b, y, s(x))
   f(b, y, x) -> f(a, half(x), exp(y))
   exp(0) -> s(0)
   exp(s(x)) -> double(exp(x))
   double(0) -> 0
   double(s(x)) -> s(s(double(x)))
   half(0) -> double(0)
   half(s(0)) -> half(0)
   half(s(s(x))) -> s(half(x))

The set Q consists of the following terms:

   f(a, s(x0), x1)
   f(b, x0, x1)
   exp(0)
   exp(s(x0))
   double(0)
   double(s(x0))
   half(0)
   half(s(0))
   half(s(s(x0)))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(20)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   HALF(s(s(x))) -> HALF(x)

R is empty.
The set Q consists of the following terms:

   f(a, s(x0), x1)
   f(b, x0, x1)
   exp(0)
   exp(s(x0))
   double(0)
   double(s(x0))
   half(0)
   half(s(0))
   half(s(s(x0)))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(21) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   f(a, s(x0), x1)
   f(b, x0, x1)
   exp(0)
   exp(s(x0))
   double(0)
   double(s(x0))
   half(0)
   half(s(0))
   half(s(s(x0)))


----------------------------------------

(22)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   HALF(s(s(x))) -> HALF(x)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(23) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*HALF(s(s(x))) -> HALF(x)
The graph contains the following edges 1 > 1


----------------------------------------

(24)
YES

----------------------------------------

(25)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   EXP(s(x)) -> EXP(x)

The TRS R consists of the following rules:

   f(a, s(x), y) -> f(b, y, s(x))
   f(b, y, x) -> f(a, half(x), exp(y))
   exp(0) -> s(0)
   exp(s(x)) -> double(exp(x))
   double(0) -> 0
   double(s(x)) -> s(s(double(x)))
   half(0) -> double(0)
   half(s(0)) -> half(0)
   half(s(s(x))) -> s(half(x))

The set Q consists of the following terms:

   f(a, s(x0), x1)
   f(b, x0, x1)
   exp(0)
   exp(s(x0))
   double(0)
   double(s(x0))
   half(0)
   half(s(0))
   half(s(s(x0)))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(26) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(27)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   EXP(s(x)) -> EXP(x)

R is empty.
The set Q consists of the following terms:

   f(a, s(x0), x1)
   f(b, x0, x1)
   exp(0)
   exp(s(x0))
   double(0)
   double(s(x0))
   half(0)
   half(s(0))
   half(s(s(x0)))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(28) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   f(a, s(x0), x1)
   f(b, x0, x1)
   exp(0)
   exp(s(x0))
   double(0)
   double(s(x0))
   half(0)
   half(s(0))
   half(s(s(x0)))


----------------------------------------

(29)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   EXP(s(x)) -> EXP(x)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(30) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*EXP(s(x)) -> EXP(x)
The graph contains the following edges 1 > 1


----------------------------------------

(31)
YES

----------------------------------------

(32)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(b, y, x) -> F(a, half(x), exp(y))
   F(a, s(x), y) -> F(b, y, s(x))

The TRS R consists of the following rules:

   f(a, s(x), y) -> f(b, y, s(x))
   f(b, y, x) -> f(a, half(x), exp(y))
   exp(0) -> s(0)
   exp(s(x)) -> double(exp(x))
   double(0) -> 0
   double(s(x)) -> s(s(double(x)))
   half(0) -> double(0)
   half(s(0)) -> half(0)
   half(s(s(x))) -> s(half(x))

The set Q consists of the following terms:

   f(a, s(x0), x1)
   f(b, x0, x1)
   exp(0)
   exp(s(x0))
   double(0)
   double(s(x0))
   half(0)
   half(s(0))
   half(s(s(x0)))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(33) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(34)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(b, y, x) -> F(a, half(x), exp(y))
   F(a, s(x), y) -> F(b, y, s(x))

The TRS R consists of the following rules:

   half(0) -> double(0)
   half(s(0)) -> half(0)
   half(s(s(x))) -> s(half(x))
   exp(0) -> s(0)
   exp(s(x)) -> double(exp(x))
   double(0) -> 0
   double(s(x)) -> s(s(double(x)))

The set Q consists of the following terms:

   f(a, s(x0), x1)
   f(b, x0, x1)
   exp(0)
   exp(s(x0))
   double(0)
   double(s(x0))
   half(0)
   half(s(0))
   half(s(s(x0)))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(35) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   f(a, s(x0), x1)
   f(b, x0, x1)


----------------------------------------

(36)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(b, y, x) -> F(a, half(x), exp(y))
   F(a, s(x), y) -> F(b, y, s(x))

The TRS R consists of the following rules:

   half(0) -> double(0)
   half(s(0)) -> half(0)
   half(s(s(x))) -> s(half(x))
   exp(0) -> s(0)
   exp(s(x)) -> double(exp(x))
   double(0) -> 0
   double(s(x)) -> s(s(double(x)))

The set Q consists of the following terms:

   exp(0)
   exp(s(x0))
   double(0)
   double(s(x0))
   half(0)
   half(s(0))
   half(s(s(x0)))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(37) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(b, y, x) -> F(a, half(x), exp(y)) at position [1] we obtained the following new rules [LPAR04]:

   (F(b, y0, 0) -> F(a, double(0), exp(y0)),F(b, y0, 0) -> F(a, double(0), exp(y0)))
   (F(b, y0, s(0)) -> F(a, half(0), exp(y0)),F(b, y0, s(0)) -> F(a, half(0), exp(y0)))
   (F(b, y0, s(s(x0))) -> F(a, s(half(x0)), exp(y0)),F(b, y0, s(s(x0))) -> F(a, s(half(x0)), exp(y0)))


----------------------------------------

(38)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(a, s(x), y) -> F(b, y, s(x))
   F(b, y0, 0) -> F(a, double(0), exp(y0))
   F(b, y0, s(0)) -> F(a, half(0), exp(y0))
   F(b, y0, s(s(x0))) -> F(a, s(half(x0)), exp(y0))

The TRS R consists of the following rules:

   half(0) -> double(0)
   half(s(0)) -> half(0)
   half(s(s(x))) -> s(half(x))
   exp(0) -> s(0)
   exp(s(x)) -> double(exp(x))
   double(0) -> 0
   double(s(x)) -> s(s(double(x)))

The set Q consists of the following terms:

   exp(0)
   exp(s(x0))
   double(0)
   double(s(x0))
   half(0)
   half(s(0))
   half(s(s(x0)))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(39) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(40)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(b, y0, s(0)) -> F(a, half(0), exp(y0))
   F(a, s(x), y) -> F(b, y, s(x))
   F(b, y0, s(s(x0))) -> F(a, s(half(x0)), exp(y0))

The TRS R consists of the following rules:

   half(0) -> double(0)
   half(s(0)) -> half(0)
   half(s(s(x))) -> s(half(x))
   exp(0) -> s(0)
   exp(s(x)) -> double(exp(x))
   double(0) -> 0
   double(s(x)) -> s(s(double(x)))

The set Q consists of the following terms:

   exp(0)
   exp(s(x0))
   double(0)
   double(s(x0))
   half(0)
   half(s(0))
   half(s(s(x0)))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(41) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule F(b, y0, s(0)) -> F(a, half(0), exp(y0)) at position [1] we obtained the following new rules [LPAR04]:

   (F(b, y0, s(0)) -> F(a, double(0), exp(y0)),F(b, y0, s(0)) -> F(a, double(0), exp(y0)))


----------------------------------------

(42)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(a, s(x), y) -> F(b, y, s(x))
   F(b, y0, s(s(x0))) -> F(a, s(half(x0)), exp(y0))
   F(b, y0, s(0)) -> F(a, double(0), exp(y0))

The TRS R consists of the following rules:

   half(0) -> double(0)
   half(s(0)) -> half(0)
   half(s(s(x))) -> s(half(x))
   exp(0) -> s(0)
   exp(s(x)) -> double(exp(x))
   double(0) -> 0
   double(s(x)) -> s(s(double(x)))

The set Q consists of the following terms:

   exp(0)
   exp(s(x0))
   double(0)
   double(s(x0))
   half(0)
   half(s(0))
   half(s(s(x0)))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(43) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule F(b, y0, s(0)) -> F(a, double(0), exp(y0)) at position [1] we obtained the following new rules [LPAR04]:

   (F(b, y0, s(0)) -> F(a, 0, exp(y0)),F(b, y0, s(0)) -> F(a, 0, exp(y0)))


----------------------------------------

(44)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(a, s(x), y) -> F(b, y, s(x))
   F(b, y0, s(s(x0))) -> F(a, s(half(x0)), exp(y0))
   F(b, y0, s(0)) -> F(a, 0, exp(y0))

The TRS R consists of the following rules:

   half(0) -> double(0)
   half(s(0)) -> half(0)
   half(s(s(x))) -> s(half(x))
   exp(0) -> s(0)
   exp(s(x)) -> double(exp(x))
   double(0) -> 0
   double(s(x)) -> s(s(double(x)))

The set Q consists of the following terms:

   exp(0)
   exp(s(x0))
   double(0)
   double(s(x0))
   half(0)
   half(s(0))
   half(s(s(x0)))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(45) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(46)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(b, y0, s(s(x0))) -> F(a, s(half(x0)), exp(y0))
   F(a, s(x), y) -> F(b, y, s(x))

The TRS R consists of the following rules:

   half(0) -> double(0)
   half(s(0)) -> half(0)
   half(s(s(x))) -> s(half(x))
   exp(0) -> s(0)
   exp(s(x)) -> double(exp(x))
   double(0) -> 0
   double(s(x)) -> s(s(double(x)))

The set Q consists of the following terms:

   exp(0)
   exp(s(x0))
   double(0)
   double(s(x0))
   half(0)
   half(s(0))
   half(s(s(x0)))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(47) TransformationProof (EQUIVALENT)
By forward instantiating [JAR06] the rule F(a, s(x), y) -> F(b, y, s(x)) we obtained the following new rules [LPAR04]:

   (F(a, s(s(y_1)), x1) -> F(b, x1, s(s(y_1))),F(a, s(s(y_1)), x1) -> F(b, x1, s(s(y_1))))


----------------------------------------

(48)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(b, y0, s(s(x0))) -> F(a, s(half(x0)), exp(y0))
   F(a, s(s(y_1)), x1) -> F(b, x1, s(s(y_1)))

The TRS R consists of the following rules:

   half(0) -> double(0)
   half(s(0)) -> half(0)
   half(s(s(x))) -> s(half(x))
   exp(0) -> s(0)
   exp(s(x)) -> double(exp(x))
   double(0) -> 0
   double(s(x)) -> s(s(double(x)))

The set Q consists of the following terms:

   exp(0)
   exp(s(x0))
   double(0)
   double(s(x0))
   half(0)
   half(s(0))
   half(s(s(x0)))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(49) SemLabProof (SOUND)
We found the following model for the rules of the TRSs R and P.
Interpretation over the domain with elements from 0 to 1.
s: 0
exp: 0
a: 1
b: 0
half: 0
0: 0
F: 0
double: 0
By semantic labelling [SEMLAB] we obtain the following labelled QDP problem.
----------------------------------------

(50)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F.0-0-0(b., y0, s.0(s.0(x0))) -> F.1-0-0(a., s.0(half.0(x0)), exp.0(y0))
   F.1-0-0(a., s.0(s.0(y_1)), x1) -> F.0-0-0(b., x1, s.0(s.0(y_1)))
   F.1-0-1(a., s.0(s.0(y_1)), x1) -> F.0-1-0(b., x1, s.0(s.0(y_1)))
   F.1-0-0(a., s.0(s.1(y_1)), x1) -> F.0-0-0(b., x1, s.0(s.1(y_1)))
   F.1-0-1(a., s.0(s.1(y_1)), x1) -> F.0-1-0(b., x1, s.0(s.1(y_1)))
   F.0-0-0(b., y0, s.0(s.1(x0))) -> F.1-0-0(a., s.0(half.1(x0)), exp.0(y0))
   F.0-1-0(b., y0, s.0(s.0(x0))) -> F.1-0-0(a., s.0(half.0(x0)), exp.1(y0))
   F.0-1-0(b., y0, s.0(s.1(x0))) -> F.1-0-0(a., s.0(half.1(x0)), exp.1(y0))

The TRS R consists of the following rules:

   half.0(0.) -> double.0(0.)
   half.0(s.0(0.)) -> half.0(0.)
   half.0(s.0(s.0(x))) -> s.0(half.0(x))
   half.0(s.0(s.1(x))) -> s.0(half.1(x))
   exp.0(0.) -> s.0(0.)
   exp.0(s.0(x)) -> double.0(exp.0(x))
   exp.0(s.1(x)) -> double.0(exp.1(x))
   double.0(0.) -> 0.
   double.0(s.0(x)) -> s.0(s.0(double.0(x)))
   double.0(s.1(x)) -> s.0(s.0(double.1(x)))

The set Q consists of the following terms:

   exp.0(0.)
   exp.0(s.0(x0))
   exp.0(s.1(x0))
   double.0(0.)
   double.0(s.0(x0))
   double.0(s.1(x0))
   half.0(0.)
   half.0(s.0(0.))
   half.0(s.0(s.0(x0)))
   half.0(s.0(s.1(x0)))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(51) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 6 less nodes.
----------------------------------------

(52)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F.1-0-0(a., s.0(s.0(y_1)), x1) -> F.0-0-0(b., x1, s.0(s.0(y_1)))
   F.0-0-0(b., y0, s.0(s.0(x0))) -> F.1-0-0(a., s.0(half.0(x0)), exp.0(y0))

The TRS R consists of the following rules:

   half.0(0.) -> double.0(0.)
   half.0(s.0(0.)) -> half.0(0.)
   half.0(s.0(s.0(x))) -> s.0(half.0(x))
   half.0(s.0(s.1(x))) -> s.0(half.1(x))
   exp.0(0.) -> s.0(0.)
   exp.0(s.0(x)) -> double.0(exp.0(x))
   exp.0(s.1(x)) -> double.0(exp.1(x))
   double.0(0.) -> 0.
   double.0(s.0(x)) -> s.0(s.0(double.0(x)))
   double.0(s.1(x)) -> s.0(s.0(double.1(x)))

The set Q consists of the following terms:

   exp.0(0.)
   exp.0(s.0(x0))
   exp.0(s.1(x0))
   double.0(0.)
   double.0(s.0(x0))
   double.0(s.1(x0))
   half.0(0.)
   half.0(s.0(0.))
   half.0(s.0(s.0(x0)))
   half.0(s.0(s.1(x0)))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(53) UsableRulesReductionPairsProof (EQUIVALENT)
By using the usable rules with reduction pair processor [LPAR04] with a polynomial ordering [POLO], all dependency pairs and the corresponding usable rules [FROCOS05] can be oriented non-strictly. All non-usable rules are removed, and those dependency pairs and usable rules that have been oriented strictly or contain non-usable symbols in their left-hand side are removed as well.

No dependency pairs are removed.

The following rules are removed from R:

   half.0(s.0(s.1(x))) -> s.0(half.1(x))
   exp.0(s.1(x)) -> double.0(exp.1(x))
   double.0(s.1(x)) -> s.0(s.0(double.1(x)))
Used ordering: POLO with Polynomial interpretation [POLO]:

   POL(0.) = 0
   POL(F.0-0-0(x_1, x_2, x_3)) = 1 + x_1 + x_2 + x_3
   POL(F.1-0-0(x_1, x_2, x_3)) = x_1 + x_2 + x_3
   POL(a.) = 1
   POL(b.) = 0
   POL(double.0(x_1)) = x_1
   POL(double.1(x_1)) = 1 + x_1
   POL(exp.0(x_1)) = x_1
   POL(exp.1(x_1)) = 1 + x_1
   POL(half.0(x_1)) = x_1
   POL(half.1(x_1)) = 1 + x_1
   POL(s.0(x_1)) = x_1
   POL(s.1(x_1)) = 1 + x_1


----------------------------------------

(54)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F.1-0-0(a., s.0(s.0(y_1)), x1) -> F.0-0-0(b., x1, s.0(s.0(y_1)))
   F.0-0-0(b., y0, s.0(s.0(x0))) -> F.1-0-0(a., s.0(half.0(x0)), exp.0(y0))

The TRS R consists of the following rules:

   half.0(0.) -> double.0(0.)
   half.0(s.0(0.)) -> half.0(0.)
   half.0(s.0(s.0(x))) -> s.0(half.0(x))
   exp.0(0.) -> s.0(0.)
   exp.0(s.0(x)) -> double.0(exp.0(x))
   double.0(0.) -> 0.
   double.0(s.0(x)) -> s.0(s.0(double.0(x)))

The set Q consists of the following terms:

   exp.0(0.)
   exp.0(s.0(x0))
   exp.0(s.1(x0))
   double.0(0.)
   double.0(s.0(x0))
   double.0(s.1(x0))
   half.0(0.)
   half.0(s.0(0.))
   half.0(s.0(s.0(x0)))
   half.0(s.0(s.1(x0)))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(55) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   F.0-0-0(b., y0, s.0(s.0(x0))) -> F.1-0-0(a., s.0(half.0(x0)), exp.0(y0))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(0.) = 0
   POL(F.0-0-0(x_1, x_2, x_3)) = x_1 + x_3
   POL(F.1-0-0(x_1, x_2, x_3)) = x_1 + x_2
   POL(a.) = 0
   POL(b.) = 0
   POL(double.0(x_1)) = 0
   POL(exp.0(x_1)) = 0
   POL(half.0(x_1)) = x_1
   POL(s.0(x_1)) = 1 + x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   half.0(0.) -> double.0(0.)
   half.0(s.0(0.)) -> half.0(0.)
   half.0(s.0(s.0(x))) -> s.0(half.0(x))
   double.0(0.) -> 0.


----------------------------------------

(56)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F.1-0-0(a., s.0(s.0(y_1)), x1) -> F.0-0-0(b., x1, s.0(s.0(y_1)))

The TRS R consists of the following rules:

   half.0(0.) -> double.0(0.)
   half.0(s.0(0.)) -> half.0(0.)
   half.0(s.0(s.0(x))) -> s.0(half.0(x))
   exp.0(0.) -> s.0(0.)
   exp.0(s.0(x)) -> double.0(exp.0(x))
   double.0(0.) -> 0.
   double.0(s.0(x)) -> s.0(s.0(double.0(x)))

The set Q consists of the following terms:

   exp.0(0.)
   exp.0(s.0(x0))
   exp.0(s.1(x0))
   double.0(0.)
   double.0(s.0(x0))
   double.0(s.1(x0))
   half.0(0.)
   half.0(s.0(0.))
   half.0(s.0(s.0(x0)))
   half.0(s.0(s.1(x0)))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(57) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 1 less node.
----------------------------------------

(58)
TRUE
