YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/c9E33.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) Overlay + Local Confluence [EQUIVALENT, 0 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 0 ms]
(4) QDP
(5) DependencyGraphProof [EQUIVALENT, 0 ms]
(6) AND
    (7) QDP
        (8) UsableRulesProof [EQUIVALENT, 0 ms]
        (9) QDP
        (10) QReductionProof [EQUIVALENT, 0 ms]
        (11) QDP
        (12) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (13) YES
    (14) QDP
        (15) QDPOrderProof [EQUIVALENT, 0 ms]
        (16) QDP
        (17) PisEmptyProof [EQUIVALENT, 0 ms]
        (18) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(0) -> true
   f(1) -> false
   f(s(x)) -> f(x)
   if(true, x, y) -> x
   if(false, x, y) -> y
   g(s(x), s(y)) -> if(f(x), s(x), s(y))
   g(x, c(y)) -> g(x, g(s(c(y)), y))

Q is empty.

----------------------------------------

(1) Overlay + Local Confluence (EQUIVALENT)
The TRS is overlay and locally confluent. By [NOC] we can switch to innermost.
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(0) -> true
   f(1) -> false
   f(s(x)) -> f(x)
   if(true, x, y) -> x
   if(false, x, y) -> y
   g(s(x), s(y)) -> if(f(x), s(x), s(y))
   g(x, c(y)) -> g(x, g(s(c(y)), y))

The set Q consists of the following terms:

   f(0)
   f(1)
   f(s(x0))
   if(true, x0, x1)
   if(false, x0, x1)
   g(s(x0), s(x1))
   g(x0, c(x1))


----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(x)) -> F(x)
   G(s(x), s(y)) -> IF(f(x), s(x), s(y))
   G(s(x), s(y)) -> F(x)
   G(x, c(y)) -> G(x, g(s(c(y)), y))
   G(x, c(y)) -> G(s(c(y)), y)

The TRS R consists of the following rules:

   f(0) -> true
   f(1) -> false
   f(s(x)) -> f(x)
   if(true, x, y) -> x
   if(false, x, y) -> y
   g(s(x), s(y)) -> if(f(x), s(x), s(y))
   g(x, c(y)) -> g(x, g(s(c(y)), y))

The set Q consists of the following terms:

   f(0)
   f(1)
   f(s(x0))
   if(true, x0, x1)
   if(false, x0, x1)
   g(s(x0), s(x1))
   g(x0, c(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs with 2 less nodes.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(x)) -> F(x)

The TRS R consists of the following rules:

   f(0) -> true
   f(1) -> false
   f(s(x)) -> f(x)
   if(true, x, y) -> x
   if(false, x, y) -> y
   g(s(x), s(y)) -> if(f(x), s(x), s(y))
   g(x, c(y)) -> g(x, g(s(c(y)), y))

The set Q consists of the following terms:

   f(0)
   f(1)
   f(s(x0))
   if(true, x0, x1)
   if(false, x0, x1)
   g(s(x0), s(x1))
   g(x0, c(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(8) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(9)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(x)) -> F(x)

R is empty.
The set Q consists of the following terms:

   f(0)
   f(1)
   f(s(x0))
   if(true, x0, x1)
   if(false, x0, x1)
   g(s(x0), s(x1))
   g(x0, c(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(10) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   f(0)
   f(1)
   f(s(x0))
   if(true, x0, x1)
   if(false, x0, x1)
   g(s(x0), s(x1))
   g(x0, c(x1))


----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(x)) -> F(x)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(12) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*F(s(x)) -> F(x)
The graph contains the following edges 1 > 1


----------------------------------------

(13)
YES

----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   G(x, c(y)) -> G(s(c(y)), y)
   G(x, c(y)) -> G(x, g(s(c(y)), y))

The TRS R consists of the following rules:

   f(0) -> true
   f(1) -> false
   f(s(x)) -> f(x)
   if(true, x, y) -> x
   if(false, x, y) -> y
   g(s(x), s(y)) -> if(f(x), s(x), s(y))
   g(x, c(y)) -> g(x, g(s(c(y)), y))

The set Q consists of the following terms:

   f(0)
   f(1)
   f(s(x0))
   if(true, x0, x1)
   if(false, x0, x1)
   g(s(x0), s(x1))
   g(x0, c(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   G(x, c(y)) -> G(s(c(y)), y)
   G(x, c(y)) -> G(x, g(s(c(y)), y))
The remaining pairs can at least be oriented weakly.
Used ordering:  Combined order from the following AFS and order.
G(x1, x2)  =  x2

c(x1)  =  c(x1)

g(x1, x2)  =  g

if(x1, x2, x3)  =  if(x2, x3)

s(x1)  =  s


Knuth-Bendix order [KBO] with precedence:trivial

and weight map:

   s=1
   c_1=4
   g=4
   if_2=1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   g(s(x), s(y)) -> if(f(x), s(x), s(y))
   g(x, c(y)) -> g(x, g(s(c(y)), y))
   if(true, x, y) -> x
   if(false, x, y) -> y


----------------------------------------

(16)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   f(0) -> true
   f(1) -> false
   f(s(x)) -> f(x)
   if(true, x, y) -> x
   if(false, x, y) -> y
   g(s(x), s(y)) -> if(f(x), s(x), s(y))
   g(x, c(y)) -> g(x, g(s(c(y)), y))

The set Q consists of the following terms:

   f(0)
   f(1)
   f(s(x0))
   if(true, x0, x1)
   if(false, x0, x1)
   g(s(x0), s(x1))
   g(x0, c(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(18)
YES
