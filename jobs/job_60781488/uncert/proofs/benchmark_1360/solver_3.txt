YES

Problem 1: 

(VAR vu95NonEmpty M N V1 V2 X X1 X2 X3)
(RULES
au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
au95u95U12(X1,X2) -> U12(X1,X2)
au95u95U13(tt) -> tt
au95u95U13(X) -> U13(X)
au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
au95u95U21(X1,X2) -> U21(X1,X2)
au95u95U22(tt) -> tt
au95u95U22(X) -> U22(X)
au95u95U31(tt,N) -> mark(N)
au95u95U31(X1,X2) -> U31(X1,X2)
au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
au95u95and(tt,X) -> mark(X)
au95u95and(X1,X2) -> and(X1,X2)
au95u95isNat(num0) -> tt
au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
au95u95isNat(X) -> isNat(X)
au95u95isNatKind(num0) -> tt
au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
au95u95isNatKind(X) -> isNatKind(X)
au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
au95u95plus(X1,X2) -> plus(X1,X2)
mark(num0) -> num0
mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
mark(U13(X)) -> au95u95U13(mark(X))
mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
mark(U22(X)) -> au95u95U22(mark(X))
mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
mark(isNat(X)) -> au95u95isNat(X)
mark(isNatKind(X)) -> au95u95isNatKind(X)
mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
mark(s(X)) -> s(mark(X))
mark(tt) -> tt
)


Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 AU95U95U11(tt,V1,V2) -> AU95U95U12(au95u95isNat(V1),V2)
 AU95U95U11(tt,V1,V2) -> AU95U95ISNAT(V1)
 AU95U95U12(tt,V2) -> AU95U95U13(au95u95isNat(V2))
 AU95U95U12(tt,V2) -> AU95U95ISNAT(V2)
 AU95U95U21(tt,V1) -> AU95U95U22(au95u95isNat(V1))
 AU95U95U21(tt,V1) -> AU95U95ISNAT(V1)
 AU95U95U31(tt,N) -> MARK(N)
 AU95U95U41(tt,M,N) -> AU95U95PLUS(mark(N),mark(M))
 AU95U95U41(tt,M,N) -> MARK(M)
 AU95U95U41(tt,M,N) -> MARK(N)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95U21(au95u95isNatKind(V1),V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95PLUS(N,num0) -> AU95U95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 AU95U95PLUS(N,num0) -> AU95U95AND(au95u95isNat(N),isNatKind(N))
 AU95U95PLUS(N,num0) -> AU95U95ISNAT(N)
 AU95U95PLUS(N,s(M)) -> AU95U95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 AU95U95PLUS(N,s(M)) -> AU95U95AND(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N)))
 AU95U95PLUS(N,s(M)) -> AU95U95AND(au95u95isNat(M),isNatKind(M))
 AU95U95PLUS(N,s(M)) -> AU95U95ISNAT(M)
 MARK(U11(X1,X2,X3)) -> AU95U95U11(mark(X1),X2,X3)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> AU95U95U12(mark(X1),X2)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> AU95U95U13(mark(X))
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> AU95U95U21(mark(X1),X2)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> AU95U95U22(mark(X))
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> AU95U95U31(mark(X1),X2)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U41(X1,X2,X3)) -> AU95U95U41(mark(X1),X2,X3)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> AU95U95PLUS(mark(X1),mark(X2))
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95U11(tt,V1,V2) -> AU95U95U12(au95u95isNat(V1),V2)
 AU95U95U11(tt,V1,V2) -> AU95U95ISNAT(V1)
 AU95U95U12(tt,V2) -> AU95U95U13(au95u95isNat(V2))
 AU95U95U12(tt,V2) -> AU95U95ISNAT(V2)
 AU95U95U21(tt,V1) -> AU95U95U22(au95u95isNat(V1))
 AU95U95U21(tt,V1) -> AU95U95ISNAT(V1)
 AU95U95U31(tt,N) -> MARK(N)
 AU95U95U41(tt,M,N) -> AU95U95PLUS(mark(N),mark(M))
 AU95U95U41(tt,M,N) -> MARK(M)
 AU95U95U41(tt,M,N) -> MARK(N)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95U21(au95u95isNatKind(V1),V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95PLUS(N,num0) -> AU95U95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 AU95U95PLUS(N,num0) -> AU95U95AND(au95u95isNat(N),isNatKind(N))
 AU95U95PLUS(N,num0) -> AU95U95ISNAT(N)
 AU95U95PLUS(N,s(M)) -> AU95U95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 AU95U95PLUS(N,s(M)) -> AU95U95AND(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N)))
 AU95U95PLUS(N,s(M)) -> AU95U95AND(au95u95isNat(M),isNatKind(M))
 AU95U95PLUS(N,s(M)) -> AU95U95ISNAT(M)
 MARK(U11(X1,X2,X3)) -> AU95U95U11(mark(X1),X2,X3)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> AU95U95U12(mark(X1),X2)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> AU95U95U13(mark(X))
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> AU95U95U21(mark(X1),X2)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> AU95U95U22(mark(X))
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> AU95U95U31(mark(X1),X2)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U41(X1,X2,X3)) -> AU95U95U41(mark(X1),X2,X3)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> AU95U95PLUS(mark(X1),mark(X2))
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U11(tt,V1,V2) -> AU95U95U12(au95u95isNat(V1),V2)
 AU95U95U11(tt,V1,V2) -> AU95U95ISNAT(V1)
 AU95U95U12(tt,V2) -> AU95U95ISNAT(V2)
 AU95U95U21(tt,V1) -> AU95U95ISNAT(V1)
 AU95U95U31(tt,N) -> MARK(N)
 AU95U95U41(tt,M,N) -> AU95U95PLUS(mark(N),mark(M))
 AU95U95U41(tt,M,N) -> MARK(M)
 AU95U95U41(tt,M,N) -> MARK(N)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95U21(au95u95isNatKind(V1),V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95PLUS(N,num0) -> AU95U95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 AU95U95PLUS(N,num0) -> AU95U95AND(au95u95isNat(N),isNatKind(N))
 AU95U95PLUS(N,num0) -> AU95U95ISNAT(N)
 AU95U95PLUS(N,s(M)) -> AU95U95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 AU95U95PLUS(N,s(M)) -> AU95U95AND(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N)))
 AU95U95PLUS(N,s(M)) -> AU95U95AND(au95u95isNat(M),isNatKind(M))
 AU95U95PLUS(N,s(M)) -> AU95U95ISNAT(M)
 MARK(U11(X1,X2,X3)) -> AU95U95U11(mark(X1),X2,X3)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> AU95U95U12(mark(X1),X2)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> AU95U95U21(mark(X1),X2)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> AU95U95U31(mark(X1),X2)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U41(X1,X2,X3)) -> AU95U95U41(mark(X1),X2,X3)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> AU95U95PLUS(mark(X1),mark(X2))
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
->->-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95U11(tt,V1,V2) -> AU95U95U12(au95u95isNat(V1),V2)
 AU95U95U11(tt,V1,V2) -> AU95U95ISNAT(V1)
 AU95U95U12(tt,V2) -> AU95U95ISNAT(V2)
 AU95U95U21(tt,V1) -> AU95U95ISNAT(V1)
 AU95U95U31(tt,N) -> MARK(N)
 AU95U95U41(tt,M,N) -> AU95U95PLUS(mark(N),mark(M))
 AU95U95U41(tt,M,N) -> MARK(M)
 AU95U95U41(tt,M,N) -> MARK(N)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95U21(au95u95isNatKind(V1),V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95PLUS(N,num0) -> AU95U95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 AU95U95PLUS(N,num0) -> AU95U95AND(au95u95isNat(N),isNatKind(N))
 AU95U95PLUS(N,num0) -> AU95U95ISNAT(N)
 AU95U95PLUS(N,s(M)) -> AU95U95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 AU95U95PLUS(N,s(M)) -> AU95U95AND(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N)))
 AU95U95PLUS(N,s(M)) -> AU95U95AND(au95u95isNat(M),isNatKind(M))
 AU95U95PLUS(N,s(M)) -> AU95U95ISNAT(M)
 MARK(U11(X1,X2,X3)) -> AU95U95U11(mark(X1),X2,X3)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> AU95U95U12(mark(X1),X2)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> AU95U95U21(mark(X1),X2)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> AU95U95U31(mark(X1),X2)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U41(X1,X2,X3)) -> AU95U95U41(mark(X1),X2,X3)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> AU95U95PLUS(mark(X1),mark(X2))
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
-> Usable rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2,X3) = X1
[au95u95U12](X1,X2) = 2.X1
[au95u95U13](X) = 2.X
[au95u95U21](X1,X2) = 2.X1
[au95u95U22](X) = 2.X
[au95u95U31](X1,X2) = 2.X1 + X2 + 2
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95and](X1,X2) = 2.X1 + X2
[au95u95isNat](X) = 0
[au95u95isNatKind](X) = 0
[au95u95plus](X1,X2) = 2.X1 + 2.X2
[mark](X) = X
[num0] = 2
[U11](X1,X2,X3) = X1
[U12](X1,X2) = 2.X1
[U13](X) = 2.X
[U21](X1,X2) = 2.X1
[U22](X) = 2.X
[U31](X1,X2) = 2.X1 + X2 + 2
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[and](X1,X2) = 2.X1 + X2
[fSNonEmpty] = 0
[isNat](X) = 0
[isNatKind](X) = 0
[plus](X1,X2) = 2.X1 + 2.X2
[s](X) = X + 2
[tt] = 0
[AU95U95U11](X1,X2,X3) = 2.X1 + 1
[AU95U95U12](X1,X2) = 2.X1 + 1
[AU95U95U13](X) = 0
[AU95U95U21](X1,X2) = X1 + 1
[AU95U95U22](X) = 0
[AU95U95U31](X1,X2) = 2.X2 + 2
[AU95U95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 1
[AU95U95AND](X1,X2) = 2.X2 + 1
[AU95U95ISNAT](X) = 1
[AU95U95ISNATKIND](X) = 1
[AU95U95PLUS](X1,X2) = 2.X1 + 2.X2
[MARK](X) = 2.X + 1

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95U11(tt,V1,V2) -> AU95U95U12(au95u95isNat(V1),V2)
 AU95U95U11(tt,V1,V2) -> AU95U95ISNAT(V1)
 AU95U95U12(tt,V2) -> AU95U95ISNAT(V2)
 AU95U95U21(tt,V1) -> AU95U95ISNAT(V1)
 AU95U95U41(tt,M,N) -> AU95U95PLUS(mark(N),mark(M))
 AU95U95U41(tt,M,N) -> MARK(M)
 AU95U95U41(tt,M,N) -> MARK(N)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95U21(au95u95isNatKind(V1),V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95PLUS(N,num0) -> AU95U95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 AU95U95PLUS(N,num0) -> AU95U95AND(au95u95isNat(N),isNatKind(N))
 AU95U95PLUS(N,num0) -> AU95U95ISNAT(N)
 AU95U95PLUS(N,s(M)) -> AU95U95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 AU95U95PLUS(N,s(M)) -> AU95U95AND(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N)))
 AU95U95PLUS(N,s(M)) -> AU95U95AND(au95u95isNat(M),isNatKind(M))
 AU95U95PLUS(N,s(M)) -> AU95U95ISNAT(M)
 MARK(U11(X1,X2,X3)) -> AU95U95U11(mark(X1),X2,X3)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> AU95U95U12(mark(X1),X2)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> AU95U95U21(mark(X1),X2)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> AU95U95U31(mark(X1),X2)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U41(X1,X2,X3)) -> AU95U95U41(mark(X1),X2,X3)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> AU95U95PLUS(mark(X1),mark(X2))
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U11(tt,V1,V2) -> AU95U95U12(au95u95isNat(V1),V2)
 AU95U95U11(tt,V1,V2) -> AU95U95ISNAT(V1)
 AU95U95U12(tt,V2) -> AU95U95ISNAT(V2)
 AU95U95U21(tt,V1) -> AU95U95ISNAT(V1)
 AU95U95U41(tt,M,N) -> AU95U95PLUS(mark(N),mark(M))
 AU95U95U41(tt,M,N) -> MARK(M)
 AU95U95U41(tt,M,N) -> MARK(N)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95U21(au95u95isNatKind(V1),V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95PLUS(N,num0) -> AU95U95AND(au95u95isNat(N),isNatKind(N))
 AU95U95PLUS(N,num0) -> AU95U95ISNAT(N)
 AU95U95PLUS(N,s(M)) -> AU95U95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 AU95U95PLUS(N,s(M)) -> AU95U95AND(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N)))
 AU95U95PLUS(N,s(M)) -> AU95U95AND(au95u95isNat(M),isNatKind(M))
 AU95U95PLUS(N,s(M)) -> AU95U95ISNAT(M)
 MARK(U11(X1,X2,X3)) -> AU95U95U11(mark(X1),X2,X3)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> AU95U95U12(mark(X1),X2)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> AU95U95U21(mark(X1),X2)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U41(X1,X2,X3)) -> AU95U95U41(mark(X1),X2,X3)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> AU95U95PLUS(mark(X1),mark(X2))
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
->->-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95U11(tt,V1,V2) -> AU95U95U12(au95u95isNat(V1),V2)
 AU95U95U11(tt,V1,V2) -> AU95U95ISNAT(V1)
 AU95U95U12(tt,V2) -> AU95U95ISNAT(V2)
 AU95U95U21(tt,V1) -> AU95U95ISNAT(V1)
 AU95U95U41(tt,M,N) -> AU95U95PLUS(mark(N),mark(M))
 AU95U95U41(tt,M,N) -> MARK(M)
 AU95U95U41(tt,M,N) -> MARK(N)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95U21(au95u95isNatKind(V1),V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95PLUS(N,num0) -> AU95U95AND(au95u95isNat(N),isNatKind(N))
 AU95U95PLUS(N,num0) -> AU95U95ISNAT(N)
 AU95U95PLUS(N,s(M)) -> AU95U95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 AU95U95PLUS(N,s(M)) -> AU95U95AND(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N)))
 AU95U95PLUS(N,s(M)) -> AU95U95AND(au95u95isNat(M),isNatKind(M))
 AU95U95PLUS(N,s(M)) -> AU95U95ISNAT(M)
 MARK(U11(X1,X2,X3)) -> AU95U95U11(mark(X1),X2,X3)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> AU95U95U12(mark(X1),X2)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> AU95U95U21(mark(X1),X2)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U41(X1,X2,X3)) -> AU95U95U41(mark(X1),X2,X3)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> AU95U95PLUS(mark(X1),mark(X2))
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
-> Usable rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2,X3) = 2.X1
[au95u95U12](X1,X2) = 2.X1
[au95u95U13](X) = 2.X
[au95u95U21](X1,X2) = 2.X1
[au95u95U22](X) = 2.X
[au95u95U31](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U41](X1,X2,X3) = 2.X1 + X2 + 2.X3 + 2
[au95u95and](X1,X2) = 2.X1 + 2.X2
[au95u95isNat](X) = 0
[au95u95isNatKind](X) = 0
[au95u95plus](X1,X2) = 2.X1 + X2 + 1
[mark](X) = X
[num0] = 2
[U11](X1,X2,X3) = 2.X1
[U12](X1,X2) = 2.X1
[U13](X) = 2.X
[U21](X1,X2) = 2.X1
[U22](X) = 2.X
[U31](X1,X2) = 2.X1 + 2.X2 + 2
[U41](X1,X2,X3) = 2.X1 + X2 + 2.X3 + 2
[and](X1,X2) = 2.X1 + 2.X2
[fSNonEmpty] = 0
[isNat](X) = 0
[isNatKind](X) = 0
[plus](X1,X2) = 2.X1 + X2 + 1
[s](X) = X + 1
[tt] = 0
[AU95U95U11](X1,X2,X3) = 2.X1 + 2
[AU95U95U12](X1,X2) = 2.X1 + 2
[AU95U95U13](X) = 0
[AU95U95U21](X1,X2) = X1 + 2
[AU95U95U22](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[AU95U95AND](X1,X2) = 2.X1 + 2.X2 + 2
[AU95U95ISNAT](X) = 2
[AU95U95ISNATKIND](X) = 2
[AU95U95PLUS](X1,X2) = 2.X1 + 2.X2 + 1
[MARK](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95U11(tt,V1,V2) -> AU95U95U12(au95u95isNat(V1),V2)
 AU95U95U11(tt,V1,V2) -> AU95U95ISNAT(V1)
 AU95U95U12(tt,V2) -> AU95U95ISNAT(V2)
 AU95U95U21(tt,V1) -> AU95U95ISNAT(V1)
 AU95U95U41(tt,M,N) -> MARK(M)
 AU95U95U41(tt,M,N) -> MARK(N)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95U21(au95u95isNatKind(V1),V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95PLUS(N,num0) -> AU95U95AND(au95u95isNat(N),isNatKind(N))
 AU95U95PLUS(N,num0) -> AU95U95ISNAT(N)
 AU95U95PLUS(N,s(M)) -> AU95U95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 AU95U95PLUS(N,s(M)) -> AU95U95AND(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N)))
 AU95U95PLUS(N,s(M)) -> AU95U95AND(au95u95isNat(M),isNatKind(M))
 AU95U95PLUS(N,s(M)) -> AU95U95ISNAT(M)
 MARK(U11(X1,X2,X3)) -> AU95U95U11(mark(X1),X2,X3)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> AU95U95U12(mark(X1),X2)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> AU95U95U21(mark(X1),X2)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U41(X1,X2,X3)) -> AU95U95U41(mark(X1),X2,X3)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> AU95U95PLUS(mark(X1),mark(X2))
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U11(tt,V1,V2) -> AU95U95U12(au95u95isNat(V1),V2)
 AU95U95U11(tt,V1,V2) -> AU95U95ISNAT(V1)
 AU95U95U12(tt,V2) -> AU95U95ISNAT(V2)
 AU95U95U21(tt,V1) -> AU95U95ISNAT(V1)
 AU95U95U41(tt,M,N) -> MARK(M)
 AU95U95U41(tt,M,N) -> MARK(N)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95U21(au95u95isNatKind(V1),V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95PLUS(N,num0) -> AU95U95AND(au95u95isNat(N),isNatKind(N))
 AU95U95PLUS(N,num0) -> AU95U95ISNAT(N)
 AU95U95PLUS(N,s(M)) -> AU95U95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 AU95U95PLUS(N,s(M)) -> AU95U95AND(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N)))
 AU95U95PLUS(N,s(M)) -> AU95U95AND(au95u95isNat(M),isNatKind(M))
 AU95U95PLUS(N,s(M)) -> AU95U95ISNAT(M)
 MARK(U11(X1,X2,X3)) -> AU95U95U11(mark(X1),X2,X3)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> AU95U95U12(mark(X1),X2)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> AU95U95U21(mark(X1),X2)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U41(X1,X2,X3)) -> AU95U95U41(mark(X1),X2,X3)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> AU95U95PLUS(mark(X1),mark(X2))
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
->->-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95U11(tt,V1,V2) -> AU95U95U12(au95u95isNat(V1),V2)
 AU95U95U11(tt,V1,V2) -> AU95U95ISNAT(V1)
 AU95U95U12(tt,V2) -> AU95U95ISNAT(V2)
 AU95U95U21(tt,V1) -> AU95U95ISNAT(V1)
 AU95U95U41(tt,M,N) -> MARK(M)
 AU95U95U41(tt,M,N) -> MARK(N)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95U21(au95u95isNatKind(V1),V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95PLUS(N,num0) -> AU95U95AND(au95u95isNat(N),isNatKind(N))
 AU95U95PLUS(N,num0) -> AU95U95ISNAT(N)
 AU95U95PLUS(N,s(M)) -> AU95U95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 AU95U95PLUS(N,s(M)) -> AU95U95AND(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N)))
 AU95U95PLUS(N,s(M)) -> AU95U95AND(au95u95isNat(M),isNatKind(M))
 AU95U95PLUS(N,s(M)) -> AU95U95ISNAT(M)
 MARK(U11(X1,X2,X3)) -> AU95U95U11(mark(X1),X2,X3)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> AU95U95U12(mark(X1),X2)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> AU95U95U21(mark(X1),X2)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U41(X1,X2,X3)) -> AU95U95U41(mark(X1),X2,X3)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> AU95U95PLUS(mark(X1),mark(X2))
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
-> Usable rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2,X3) = 2.X1
[au95u95U12](X1,X2) = X1
[au95u95U13](X) = X
[au95u95U21](X1,X2) = 2.X1
[au95u95U22](X) = 2.X
[au95u95U31](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95and](X1,X2) = 2.X1 + 2.X2
[au95u95isNat](X) = 0
[au95u95isNatKind](X) = 0
[au95u95plus](X1,X2) = 2.X1 + 2.X2
[mark](X) = X
[num0] = 2
[U11](X1,X2,X3) = 2.X1
[U12](X1,X2) = X1
[U13](X) = X
[U21](X1,X2) = 2.X1
[U22](X) = 2.X
[U31](X1,X2) = 2.X1 + 2.X2 + 2
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[and](X1,X2) = 2.X1 + 2.X2
[fSNonEmpty] = 0
[isNat](X) = 0
[isNatKind](X) = 0
[plus](X1,X2) = 2.X1 + 2.X2
[s](X) = X + 2
[tt] = 0
[AU95U95U11](X1,X2,X3) = 1
[AU95U95U12](X1,X2) = X1 + 1
[AU95U95U13](X) = 0
[AU95U95U21](X1,X2) = 1
[AU95U95U22](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U41](X1,X2,X3) = 2.X2 + 2.X3 + 2
[AU95U95AND](X1,X2) = 2.X2 + 1
[AU95U95ISNAT](X) = 1
[AU95U95ISNATKIND](X) = 1
[AU95U95PLUS](X1,X2) = 2.X1 + 2.X2 + 1
[MARK](X) = 2.X + 1

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95U11(tt,V1,V2) -> AU95U95U12(au95u95isNat(V1),V2)
 AU95U95U11(tt,V1,V2) -> AU95U95ISNAT(V1)
 AU95U95U12(tt,V2) -> AU95U95ISNAT(V2)
 AU95U95U21(tt,V1) -> AU95U95ISNAT(V1)
 AU95U95U41(tt,M,N) -> MARK(N)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95U21(au95u95isNatKind(V1),V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95PLUS(N,num0) -> AU95U95AND(au95u95isNat(N),isNatKind(N))
 AU95U95PLUS(N,num0) -> AU95U95ISNAT(N)
 AU95U95PLUS(N,s(M)) -> AU95U95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 AU95U95PLUS(N,s(M)) -> AU95U95AND(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N)))
 AU95U95PLUS(N,s(M)) -> AU95U95AND(au95u95isNat(M),isNatKind(M))
 AU95U95PLUS(N,s(M)) -> AU95U95ISNAT(M)
 MARK(U11(X1,X2,X3)) -> AU95U95U11(mark(X1),X2,X3)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> AU95U95U12(mark(X1),X2)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> AU95U95U21(mark(X1),X2)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U41(X1,X2,X3)) -> AU95U95U41(mark(X1),X2,X3)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> AU95U95PLUS(mark(X1),mark(X2))
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U11(tt,V1,V2) -> AU95U95U12(au95u95isNat(V1),V2)
 AU95U95U11(tt,V1,V2) -> AU95U95ISNAT(V1)
 AU95U95U12(tt,V2) -> AU95U95ISNAT(V2)
 AU95U95U21(tt,V1) -> AU95U95ISNAT(V1)
 AU95U95U41(tt,M,N) -> MARK(N)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95U21(au95u95isNatKind(V1),V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95PLUS(N,num0) -> AU95U95AND(au95u95isNat(N),isNatKind(N))
 AU95U95PLUS(N,num0) -> AU95U95ISNAT(N)
 AU95U95PLUS(N,s(M)) -> AU95U95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 AU95U95PLUS(N,s(M)) -> AU95U95AND(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N)))
 AU95U95PLUS(N,s(M)) -> AU95U95AND(au95u95isNat(M),isNatKind(M))
 AU95U95PLUS(N,s(M)) -> AU95U95ISNAT(M)
 MARK(U11(X1,X2,X3)) -> AU95U95U11(mark(X1),X2,X3)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> AU95U95U12(mark(X1),X2)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> AU95U95U21(mark(X1),X2)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U41(X1,X2,X3)) -> AU95U95U41(mark(X1),X2,X3)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> AU95U95PLUS(mark(X1),mark(X2))
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
->->-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95U11(tt,V1,V2) -> AU95U95U12(au95u95isNat(V1),V2)
 AU95U95U11(tt,V1,V2) -> AU95U95ISNAT(V1)
 AU95U95U12(tt,V2) -> AU95U95ISNAT(V2)
 AU95U95U21(tt,V1) -> AU95U95ISNAT(V1)
 AU95U95U41(tt,M,N) -> MARK(N)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95U21(au95u95isNatKind(V1),V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95PLUS(N,num0) -> AU95U95AND(au95u95isNat(N),isNatKind(N))
 AU95U95PLUS(N,num0) -> AU95U95ISNAT(N)
 AU95U95PLUS(N,s(M)) -> AU95U95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 AU95U95PLUS(N,s(M)) -> AU95U95AND(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N)))
 AU95U95PLUS(N,s(M)) -> AU95U95AND(au95u95isNat(M),isNatKind(M))
 AU95U95PLUS(N,s(M)) -> AU95U95ISNAT(M)
 MARK(U11(X1,X2,X3)) -> AU95U95U11(mark(X1),X2,X3)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> AU95U95U12(mark(X1),X2)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> AU95U95U21(mark(X1),X2)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U41(X1,X2,X3)) -> AU95U95U41(mark(X1),X2,X3)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> AU95U95PLUS(mark(X1),mark(X2))
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
-> Usable rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2,X3) = 2.X1
[au95u95U12](X1,X2) = 2.X1
[au95u95U13](X) = 2.X
[au95u95U21](X1,X2) = 2.X1
[au95u95U22](X) = X
[au95u95U31](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95and](X1,X2) = 2.X1 + 2.X2
[au95u95isNat](X) = 0
[au95u95isNatKind](X) = 0
[au95u95plus](X1,X2) = 2.X1 + 2.X2 + 1
[mark](X) = X
[num0] = 2
[U11](X1,X2,X3) = 2.X1
[U12](X1,X2) = 2.X1
[U13](X) = 2.X
[U21](X1,X2) = 2.X1
[U22](X) = X
[U31](X1,X2) = 2.X1 + 2.X2 + 2
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[and](X1,X2) = 2.X1 + 2.X2
[fSNonEmpty] = 0
[isNat](X) = 0
[isNatKind](X) = 0
[plus](X1,X2) = 2.X1 + 2.X2 + 1
[s](X) = X + 1
[tt] = 0
[AU95U95U11](X1,X2,X3) = 2.X1 + 1
[AU95U95U12](X1,X2) = 2.X1 + 1
[AU95U95U13](X) = 0
[AU95U95U21](X1,X2) = 2.X1 + 1
[AU95U95U22](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[AU95U95AND](X1,X2) = 2.X2 + 1
[AU95U95ISNAT](X) = 1
[AU95U95ISNATKIND](X) = 1
[AU95U95PLUS](X1,X2) = 2.X1 + 2.X2 + 1
[MARK](X) = 2.X + 1

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95U11(tt,V1,V2) -> AU95U95U12(au95u95isNat(V1),V2)
 AU95U95U11(tt,V1,V2) -> AU95U95ISNAT(V1)
 AU95U95U12(tt,V2) -> AU95U95ISNAT(V2)
 AU95U95U21(tt,V1) -> AU95U95ISNAT(V1)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95U21(au95u95isNatKind(V1),V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95PLUS(N,num0) -> AU95U95AND(au95u95isNat(N),isNatKind(N))
 AU95U95PLUS(N,num0) -> AU95U95ISNAT(N)
 AU95U95PLUS(N,s(M)) -> AU95U95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 AU95U95PLUS(N,s(M)) -> AU95U95AND(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N)))
 AU95U95PLUS(N,s(M)) -> AU95U95AND(au95u95isNat(M),isNatKind(M))
 AU95U95PLUS(N,s(M)) -> AU95U95ISNAT(M)
 MARK(U11(X1,X2,X3)) -> AU95U95U11(mark(X1),X2,X3)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> AU95U95U12(mark(X1),X2)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> AU95U95U21(mark(X1),X2)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U41(X1,X2,X3)) -> AU95U95U41(mark(X1),X2,X3)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> AU95U95PLUS(mark(X1),mark(X2))
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U11(tt,V1,V2) -> AU95U95U12(au95u95isNat(V1),V2)
 AU95U95U11(tt,V1,V2) -> AU95U95ISNAT(V1)
 AU95U95U12(tt,V2) -> AU95U95ISNAT(V2)
 AU95U95U21(tt,V1) -> AU95U95ISNAT(V1)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95U21(au95u95isNatKind(V1),V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95PLUS(N,num0) -> AU95U95AND(au95u95isNat(N),isNatKind(N))
 AU95U95PLUS(N,num0) -> AU95U95ISNAT(N)
 AU95U95PLUS(N,s(M)) -> AU95U95AND(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N)))
 AU95U95PLUS(N,s(M)) -> AU95U95AND(au95u95isNat(M),isNatKind(M))
 AU95U95PLUS(N,s(M)) -> AU95U95ISNAT(M)
 MARK(U11(X1,X2,X3)) -> AU95U95U11(mark(X1),X2,X3)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> AU95U95U12(mark(X1),X2)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> AU95U95U21(mark(X1),X2)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> AU95U95PLUS(mark(X1),mark(X2))
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
->->-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95U11(tt,V1,V2) -> AU95U95U12(au95u95isNat(V1),V2)
 AU95U95U11(tt,V1,V2) -> AU95U95ISNAT(V1)
 AU95U95U12(tt,V2) -> AU95U95ISNAT(V2)
 AU95U95U21(tt,V1) -> AU95U95ISNAT(V1)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95U21(au95u95isNatKind(V1),V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95PLUS(N,num0) -> AU95U95AND(au95u95isNat(N),isNatKind(N))
 AU95U95PLUS(N,num0) -> AU95U95ISNAT(N)
 AU95U95PLUS(N,s(M)) -> AU95U95AND(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N)))
 AU95U95PLUS(N,s(M)) -> AU95U95AND(au95u95isNat(M),isNatKind(M))
 AU95U95PLUS(N,s(M)) -> AU95U95ISNAT(M)
 MARK(U11(X1,X2,X3)) -> AU95U95U11(mark(X1),X2,X3)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> AU95U95U12(mark(X1),X2)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> AU95U95U21(mark(X1),X2)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> AU95U95PLUS(mark(X1),mark(X2))
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
-> Usable rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2,X3) = 2.X1
[au95u95U12](X1,X2) = 2.X1
[au95u95U13](X) = 2.X
[au95u95U21](X1,X2) = 2.X1
[au95u95U22](X) = X
[au95u95U31](X1,X2) = 2.X1 + X2 + 2
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + X3 + 2
[au95u95and](X1,X2) = 2.X1 + 2.X2
[au95u95isNat](X) = 0
[au95u95isNatKind](X) = 0
[au95u95plus](X1,X2) = X1 + 2.X2
[mark](X) = X
[num0] = 2
[U11](X1,X2,X3) = 2.X1
[U12](X1,X2) = 2.X1
[U13](X) = 2.X
[U21](X1,X2) = 2.X1
[U22](X) = X
[U31](X1,X2) = 2.X1 + X2 + 2
[U41](X1,X2,X3) = 2.X1 + 2.X2 + X3 + 2
[and](X1,X2) = 2.X1 + 2.X2
[fSNonEmpty] = 0
[isNat](X) = 0
[isNatKind](X) = 0
[plus](X1,X2) = X1 + 2.X2
[s](X) = X + 2
[tt] = 0
[AU95U95U11](X1,X2,X3) = X1 + 2
[AU95U95U12](X1,X2) = 2.X1 + 2
[AU95U95U13](X) = 0
[AU95U95U21](X1,X2) = 2.X1 + 2
[AU95U95U22](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95AND](X1,X2) = 2.X2 + 2
[AU95U95ISNAT](X) = 2
[AU95U95ISNATKIND](X) = 2
[AU95U95PLUS](X1,X2) = 2.X1 + X2 + 1
[MARK](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95U11(tt,V1,V2) -> AU95U95U12(au95u95isNat(V1),V2)
 AU95U95U11(tt,V1,V2) -> AU95U95ISNAT(V1)
 AU95U95U12(tt,V2) -> AU95U95ISNAT(V2)
 AU95U95U21(tt,V1) -> AU95U95ISNAT(V1)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95U21(au95u95isNatKind(V1),V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95PLUS(N,num0) -> AU95U95ISNAT(N)
 AU95U95PLUS(N,s(M)) -> AU95U95AND(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N)))
 AU95U95PLUS(N,s(M)) -> AU95U95AND(au95u95isNat(M),isNatKind(M))
 AU95U95PLUS(N,s(M)) -> AU95U95ISNAT(M)
 MARK(U11(X1,X2,X3)) -> AU95U95U11(mark(X1),X2,X3)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> AU95U95U12(mark(X1),X2)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> AU95U95U21(mark(X1),X2)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> AU95U95PLUS(mark(X1),mark(X2))
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U11(tt,V1,V2) -> AU95U95U12(au95u95isNat(V1),V2)
 AU95U95U11(tt,V1,V2) -> AU95U95ISNAT(V1)
 AU95U95U12(tt,V2) -> AU95U95ISNAT(V2)
 AU95U95U21(tt,V1) -> AU95U95ISNAT(V1)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95U21(au95u95isNatKind(V1),V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95PLUS(N,num0) -> AU95U95ISNAT(N)
 AU95U95PLUS(N,s(M)) -> AU95U95AND(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N)))
 AU95U95PLUS(N,s(M)) -> AU95U95AND(au95u95isNat(M),isNatKind(M))
 AU95U95PLUS(N,s(M)) -> AU95U95ISNAT(M)
 MARK(U11(X1,X2,X3)) -> AU95U95U11(mark(X1),X2,X3)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> AU95U95U12(mark(X1),X2)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> AU95U95U21(mark(X1),X2)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> AU95U95PLUS(mark(X1),mark(X2))
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
->->-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95U11(tt,V1,V2) -> AU95U95U12(au95u95isNat(V1),V2)
 AU95U95U11(tt,V1,V2) -> AU95U95ISNAT(V1)
 AU95U95U12(tt,V2) -> AU95U95ISNAT(V2)
 AU95U95U21(tt,V1) -> AU95U95ISNAT(V1)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95U21(au95u95isNatKind(V1),V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95PLUS(N,num0) -> AU95U95ISNAT(N)
 AU95U95PLUS(N,s(M)) -> AU95U95AND(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N)))
 AU95U95PLUS(N,s(M)) -> AU95U95AND(au95u95isNat(M),isNatKind(M))
 AU95U95PLUS(N,s(M)) -> AU95U95ISNAT(M)
 MARK(U11(X1,X2,X3)) -> AU95U95U11(mark(X1),X2,X3)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> AU95U95U12(mark(X1),X2)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> AU95U95U21(mark(X1),X2)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> AU95U95PLUS(mark(X1),mark(X2))
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
-> Usable rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2,X3) = 2.X1
[au95u95U12](X1,X2) = 2.X1
[au95u95U13](X) = 2.X
[au95u95U21](X1,X2) = 2.X1
[au95u95U22](X) = 2.X
[au95u95U31](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3
[au95u95and](X1,X2) = 2.X1 + 2.X2
[au95u95isNat](X) = 0
[au95u95isNatKind](X) = 0
[au95u95plus](X1,X2) = 2.X1 + 2.X2
[mark](X) = X
[num0] = 2
[U11](X1,X2,X3) = 2.X1
[U12](X1,X2) = 2.X1
[U13](X) = 2.X
[U21](X1,X2) = 2.X1
[U22](X) = 2.X
[U31](X1,X2) = 2.X1 + 2.X2 + 2
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3
[and](X1,X2) = 2.X1 + 2.X2
[fSNonEmpty] = 0
[isNat](X) = 0
[isNatKind](X) = 0
[plus](X1,X2) = 2.X1 + 2.X2
[s](X) = X
[tt] = 0
[AU95U95U11](X1,X2,X3) = 2
[AU95U95U12](X1,X2) = 2
[AU95U95U13](X) = 0
[AU95U95U21](X1,X2) = 2
[AU95U95U22](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95AND](X1,X2) = 2.X2 + 2
[AU95U95ISNAT](X) = 2
[AU95U95ISNATKIND](X) = 2
[AU95U95PLUS](X1,X2) = 2.X1 + 2.X2 + 2
[MARK](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95U11(tt,V1,V2) -> AU95U95U12(au95u95isNat(V1),V2)
 AU95U95U11(tt,V1,V2) -> AU95U95ISNAT(V1)
 AU95U95U12(tt,V2) -> AU95U95ISNAT(V2)
 AU95U95U21(tt,V1) -> AU95U95ISNAT(V1)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95U21(au95u95isNatKind(V1),V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95PLUS(N,s(M)) -> AU95U95AND(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N)))
 AU95U95PLUS(N,s(M)) -> AU95U95AND(au95u95isNat(M),isNatKind(M))
 AU95U95PLUS(N,s(M)) -> AU95U95ISNAT(M)
 MARK(U11(X1,X2,X3)) -> AU95U95U11(mark(X1),X2,X3)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> AU95U95U12(mark(X1),X2)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> AU95U95U21(mark(X1),X2)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> AU95U95PLUS(mark(X1),mark(X2))
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U11(tt,V1,V2) -> AU95U95U12(au95u95isNat(V1),V2)
 AU95U95U11(tt,V1,V2) -> AU95U95ISNAT(V1)
 AU95U95U12(tt,V2) -> AU95U95ISNAT(V2)
 AU95U95U21(tt,V1) -> AU95U95ISNAT(V1)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95U21(au95u95isNatKind(V1),V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95PLUS(N,s(M)) -> AU95U95AND(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N)))
 AU95U95PLUS(N,s(M)) -> AU95U95AND(au95u95isNat(M),isNatKind(M))
 AU95U95PLUS(N,s(M)) -> AU95U95ISNAT(M)
 MARK(U11(X1,X2,X3)) -> AU95U95U11(mark(X1),X2,X3)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> AU95U95U12(mark(X1),X2)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> AU95U95U21(mark(X1),X2)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> AU95U95PLUS(mark(X1),mark(X2))
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
->->-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95U11(tt,V1,V2) -> AU95U95U12(au95u95isNat(V1),V2)
 AU95U95U11(tt,V1,V2) -> AU95U95ISNAT(V1)
 AU95U95U12(tt,V2) -> AU95U95ISNAT(V2)
 AU95U95U21(tt,V1) -> AU95U95ISNAT(V1)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95U21(au95u95isNatKind(V1),V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95PLUS(N,s(M)) -> AU95U95AND(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N)))
 AU95U95PLUS(N,s(M)) -> AU95U95AND(au95u95isNat(M),isNatKind(M))
 AU95U95PLUS(N,s(M)) -> AU95U95ISNAT(M)
 MARK(U11(X1,X2,X3)) -> AU95U95U11(mark(X1),X2,X3)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> AU95U95U12(mark(X1),X2)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> AU95U95U21(mark(X1),X2)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> AU95U95PLUS(mark(X1),mark(X2))
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
-> Usable rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2,X3) = X1
[au95u95U12](X1,X2) = 2.X1
[au95u95U13](X) = 2.X
[au95u95U21](X1,X2) = X1
[au95u95U22](X) = X
[au95u95U31](X1,X2) = 2.X1 + X2 + 1
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95and](X1,X2) = 2.X1 + 2.X2
[au95u95isNat](X) = 0
[au95u95isNatKind](X) = 0
[au95u95plus](X1,X2) = 2.X1 + 2.X2
[mark](X) = X
[num0] = 2
[U11](X1,X2,X3) = X1
[U12](X1,X2) = 2.X1
[U13](X) = 2.X
[U21](X1,X2) = X1
[U22](X) = X
[U31](X1,X2) = 2.X1 + X2 + 1
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[and](X1,X2) = 2.X1 + 2.X2
[fSNonEmpty] = 0
[isNat](X) = 0
[isNatKind](X) = 0
[plus](X1,X2) = 2.X1 + 2.X2
[s](X) = X + 2
[tt] = 0
[AU95U95U11](X1,X2,X3) = X1 + 2
[AU95U95U12](X1,X2) = 2.X1 + 2
[AU95U95U13](X) = 0
[AU95U95U21](X1,X2) = 2
[AU95U95U22](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95AND](X1,X2) = 2.X2 + 2
[AU95U95ISNAT](X) = 2
[AU95U95ISNATKIND](X) = 2
[AU95U95PLUS](X1,X2) = 2.X1 + 2.X2 + 2
[MARK](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95U11(tt,V1,V2) -> AU95U95U12(au95u95isNat(V1),V2)
 AU95U95U11(tt,V1,V2) -> AU95U95ISNAT(V1)
 AU95U95U12(tt,V2) -> AU95U95ISNAT(V2)
 AU95U95U21(tt,V1) -> AU95U95ISNAT(V1)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95U21(au95u95isNatKind(V1),V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95PLUS(N,s(M)) -> AU95U95AND(au95u95isNat(M),isNatKind(M))
 AU95U95PLUS(N,s(M)) -> AU95U95ISNAT(M)
 MARK(U11(X1,X2,X3)) -> AU95U95U11(mark(X1),X2,X3)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> AU95U95U12(mark(X1),X2)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> AU95U95U21(mark(X1),X2)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> AU95U95PLUS(mark(X1),mark(X2))
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U11(tt,V1,V2) -> AU95U95U12(au95u95isNat(V1),V2)
 AU95U95U11(tt,V1,V2) -> AU95U95ISNAT(V1)
 AU95U95U12(tt,V2) -> AU95U95ISNAT(V2)
 AU95U95U21(tt,V1) -> AU95U95ISNAT(V1)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95U21(au95u95isNatKind(V1),V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95PLUS(N,s(M)) -> AU95U95AND(au95u95isNat(M),isNatKind(M))
 AU95U95PLUS(N,s(M)) -> AU95U95ISNAT(M)
 MARK(U11(X1,X2,X3)) -> AU95U95U11(mark(X1),X2,X3)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> AU95U95U12(mark(X1),X2)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> AU95U95U21(mark(X1),X2)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> AU95U95PLUS(mark(X1),mark(X2))
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
->->-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95U11(tt,V1,V2) -> AU95U95U12(au95u95isNat(V1),V2)
 AU95U95U11(tt,V1,V2) -> AU95U95ISNAT(V1)
 AU95U95U12(tt,V2) -> AU95U95ISNAT(V2)
 AU95U95U21(tt,V1) -> AU95U95ISNAT(V1)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95U21(au95u95isNatKind(V1),V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95PLUS(N,s(M)) -> AU95U95AND(au95u95isNat(M),isNatKind(M))
 AU95U95PLUS(N,s(M)) -> AU95U95ISNAT(M)
 MARK(U11(X1,X2,X3)) -> AU95U95U11(mark(X1),X2,X3)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> AU95U95U12(mark(X1),X2)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> AU95U95U21(mark(X1),X2)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> AU95U95PLUS(mark(X1),mark(X2))
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
-> Usable rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2,X3) = X1
[au95u95U12](X1,X2) = 2.X1
[au95u95U13](X) = 2.X
[au95u95U21](X1,X2) = 2.X1
[au95u95U22](X) = 2.X
[au95u95U31](X1,X2) = X1 + 2.X2 + 2
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95and](X1,X2) = 2.X1 + 2.X2
[au95u95isNat](X) = 0
[au95u95isNatKind](X) = 0
[au95u95plus](X1,X2) = 2.X1 + 2.X2
[mark](X) = X
[num0] = 2
[U11](X1,X2,X3) = X1
[U12](X1,X2) = 2.X1
[U13](X) = 2.X
[U21](X1,X2) = 2.X1
[U22](X) = 2.X
[U31](X1,X2) = X1 + 2.X2 + 2
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[and](X1,X2) = 2.X1 + 2.X2
[fSNonEmpty] = 0
[isNat](X) = 0
[isNatKind](X) = 0
[plus](X1,X2) = 2.X1 + 2.X2
[s](X) = X + 2
[tt] = 0
[AU95U95U11](X1,X2,X3) = 2
[AU95U95U12](X1,X2) = X1 + 2
[AU95U95U13](X) = 0
[AU95U95U21](X1,X2) = 2.X1 + 2
[AU95U95U22](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95AND](X1,X2) = X1 + 2.X2 + 2
[AU95U95ISNAT](X) = 2
[AU95U95ISNATKIND](X) = 2
[AU95U95PLUS](X1,X2) = 2.X1 + X2 + 2
[MARK](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95U11(tt,V1,V2) -> AU95U95U12(au95u95isNat(V1),V2)
 AU95U95U11(tt,V1,V2) -> AU95U95ISNAT(V1)
 AU95U95U12(tt,V2) -> AU95U95ISNAT(V2)
 AU95U95U21(tt,V1) -> AU95U95ISNAT(V1)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95U21(au95u95isNatKind(V1),V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95PLUS(N,s(M)) -> AU95U95ISNAT(M)
 MARK(U11(X1,X2,X3)) -> AU95U95U11(mark(X1),X2,X3)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> AU95U95U12(mark(X1),X2)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> AU95U95U21(mark(X1),X2)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> AU95U95PLUS(mark(X1),mark(X2))
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U11(tt,V1,V2) -> AU95U95U12(au95u95isNat(V1),V2)
 AU95U95U11(tt,V1,V2) -> AU95U95ISNAT(V1)
 AU95U95U12(tt,V2) -> AU95U95ISNAT(V2)
 AU95U95U21(tt,V1) -> AU95U95ISNAT(V1)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95U21(au95u95isNatKind(V1),V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95PLUS(N,s(M)) -> AU95U95ISNAT(M)
 MARK(U11(X1,X2,X3)) -> AU95U95U11(mark(X1),X2,X3)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> AU95U95U12(mark(X1),X2)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> AU95U95U21(mark(X1),X2)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> AU95U95PLUS(mark(X1),mark(X2))
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
->->-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95U11(tt,V1,V2) -> AU95U95U12(au95u95isNat(V1),V2)
 AU95U95U11(tt,V1,V2) -> AU95U95ISNAT(V1)
 AU95U95U12(tt,V2) -> AU95U95ISNAT(V2)
 AU95U95U21(tt,V1) -> AU95U95ISNAT(V1)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95U21(au95u95isNatKind(V1),V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95PLUS(N,s(M)) -> AU95U95ISNAT(M)
 MARK(U11(X1,X2,X3)) -> AU95U95U11(mark(X1),X2,X3)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> AU95U95U12(mark(X1),X2)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> AU95U95U21(mark(X1),X2)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> AU95U95PLUS(mark(X1),mark(X2))
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
-> Usable rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2,X3) = 2.X1
[au95u95U12](X1,X2) = 2.X1
[au95u95U13](X) = 2.X
[au95u95U21](X1,X2) = 2.X1
[au95u95U22](X) = 2.X
[au95u95U31](X1,X2) = 2.X1 + X2 + 1
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95and](X1,X2) = 2.X1 + 2.X2
[au95u95isNat](X) = 0
[au95u95isNatKind](X) = 0
[au95u95plus](X1,X2) = 2.X1 + 2.X2 + 1
[mark](X) = X
[num0] = 0
[U11](X1,X2,X3) = 2.X1
[U12](X1,X2) = 2.X1
[U13](X) = 2.X
[U21](X1,X2) = 2.X1
[U22](X) = 2.X
[U31](X1,X2) = 2.X1 + X2 + 1
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[and](X1,X2) = 2.X1 + 2.X2
[fSNonEmpty] = 0
[isNat](X) = 0
[isNatKind](X) = 0
[plus](X1,X2) = 2.X1 + 2.X2 + 1
[s](X) = X + 1
[tt] = 0
[AU95U95U11](X1,X2,X3) = 2.X1
[AU95U95U12](X1,X2) = 0
[AU95U95U13](X) = 0
[AU95U95U21](X1,X2) = 0
[AU95U95U22](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95AND](X1,X2) = 2.X2
[AU95U95ISNAT](X) = 0
[AU95U95ISNATKIND](X) = 0
[AU95U95PLUS](X1,X2) = 2.X2 + 1
[MARK](X) = 2.X

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95U11(tt,V1,V2) -> AU95U95U12(au95u95isNat(V1),V2)
 AU95U95U11(tt,V1,V2) -> AU95U95ISNAT(V1)
 AU95U95U12(tt,V2) -> AU95U95ISNAT(V2)
 AU95U95U21(tt,V1) -> AU95U95ISNAT(V1)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95U21(au95u95isNatKind(V1),V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 MARK(U11(X1,X2,X3)) -> AU95U95U11(mark(X1),X2,X3)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> AU95U95U12(mark(X1),X2)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> AU95U95U21(mark(X1),X2)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> AU95U95PLUS(mark(X1),mark(X2))
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U11(tt,V1,V2) -> AU95U95U12(au95u95isNat(V1),V2)
 AU95U95U11(tt,V1,V2) -> AU95U95ISNAT(V1)
 AU95U95U12(tt,V2) -> AU95U95ISNAT(V2)
 AU95U95U21(tt,V1) -> AU95U95ISNAT(V1)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95U21(au95u95isNatKind(V1),V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 MARK(U11(X1,X2,X3)) -> AU95U95U11(mark(X1),X2,X3)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> AU95U95U12(mark(X1),X2)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> AU95U95U21(mark(X1),X2)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
->->-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95U11(tt,V1,V2) -> AU95U95U12(au95u95isNat(V1),V2)
 AU95U95U11(tt,V1,V2) -> AU95U95ISNAT(V1)
 AU95U95U12(tt,V2) -> AU95U95ISNAT(V2)
 AU95U95U21(tt,V1) -> AU95U95ISNAT(V1)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95U21(au95u95isNatKind(V1),V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 MARK(U11(X1,X2,X3)) -> AU95U95U11(mark(X1),X2,X3)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> AU95U95U12(mark(X1),X2)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> AU95U95U21(mark(X1),X2)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
-> Usable rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2,X3) = 2.X1
[au95u95U12](X1,X2) = 2.X1
[au95u95U13](X) = 2.X
[au95u95U21](X1,X2) = 2.X1
[au95u95U22](X) = X
[au95u95U31](X1,X2) = 2.X1 + 2.X2 + 1
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95and](X1,X2) = 2.X1 + X2
[au95u95isNat](X) = 0
[au95u95isNatKind](X) = 0
[au95u95plus](X1,X2) = 2.X1 + 2.X2 + 1
[mark](X) = X
[num0] = 0
[U11](X1,X2,X3) = 2.X1
[U12](X1,X2) = 2.X1
[U13](X) = 2.X
[U21](X1,X2) = 2.X1
[U22](X) = X
[U31](X1,X2) = 2.X1 + 2.X2 + 1
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[and](X1,X2) = 2.X1 + X2
[fSNonEmpty] = 0
[isNat](X) = 0
[isNatKind](X) = 0
[plus](X1,X2) = 2.X1 + 2.X2 + 1
[s](X) = X + 1
[tt] = 0
[AU95U95U11](X1,X2,X3) = X1 + 2
[AU95U95U12](X1,X2) = X1 + 2
[AU95U95U13](X) = 0
[AU95U95U21](X1,X2) = X1 + 2
[AU95U95U22](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95AND](X1,X2) = X1 + 2.X2 + 2
[AU95U95ISNAT](X) = 2
[AU95U95ISNATKIND](X) = 2
[AU95U95PLUS](X1,X2) = 0
[MARK](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95U11(tt,V1,V2) -> AU95U95U12(au95u95isNat(V1),V2)
 AU95U95U11(tt,V1,V2) -> AU95U95ISNAT(V1)
 AU95U95U12(tt,V2) -> AU95U95ISNAT(V2)
 AU95U95U21(tt,V1) -> AU95U95ISNAT(V1)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95U21(au95u95isNatKind(V1),V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 MARK(U11(X1,X2,X3)) -> AU95U95U11(mark(X1),X2,X3)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> AU95U95U12(mark(X1),X2)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> AU95U95U21(mark(X1),X2)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U11(tt,V1,V2) -> AU95U95U12(au95u95isNat(V1),V2)
 AU95U95U11(tt,V1,V2) -> AU95U95ISNAT(V1)
 AU95U95U12(tt,V2) -> AU95U95ISNAT(V2)
 AU95U95U21(tt,V1) -> AU95U95ISNAT(V1)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95U21(au95u95isNatKind(V1),V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 MARK(U11(X1,X2,X3)) -> AU95U95U11(mark(X1),X2,X3)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> AU95U95U12(mark(X1),X2)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> AU95U95U21(mark(X1),X2)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
->->-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95U11(tt,V1,V2) -> AU95U95U12(au95u95isNat(V1),V2)
 AU95U95U11(tt,V1,V2) -> AU95U95ISNAT(V1)
 AU95U95U12(tt,V2) -> AU95U95ISNAT(V2)
 AU95U95U21(tt,V1) -> AU95U95ISNAT(V1)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95U21(au95u95isNatKind(V1),V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 MARK(U11(X1,X2,X3)) -> AU95U95U11(mark(X1),X2,X3)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> AU95U95U12(mark(X1),X2)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> AU95U95U21(mark(X1),X2)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
-> Usable rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2,X3) = X1
[au95u95U12](X1,X2) = 2.X1
[au95u95U13](X) = 2.X
[au95u95U21](X1,X2) = 2.X1
[au95u95U22](X) = X
[au95u95U31](X1,X2) = 2.X1 + 2.X2
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95and](X1,X2) = 2.X1 + X2
[au95u95isNat](X) = 0
[au95u95isNatKind](X) = 0
[au95u95plus](X1,X2) = 2.X1 + 2.X2
[mark](X) = X
[num0] = 0
[U11](X1,X2,X3) = X1
[U12](X1,X2) = 2.X1
[U13](X) = 2.X
[U21](X1,X2) = 2.X1
[U22](X) = X
[U31](X1,X2) = 2.X1 + 2.X2
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[and](X1,X2) = 2.X1 + X2
[fSNonEmpty] = 0
[isNat](X) = 0
[isNatKind](X) = 0
[plus](X1,X2) = 2.X1 + 2.X2
[s](X) = X + 2
[tt] = 0
[AU95U95U11](X1,X2,X3) = 2.X1 + 2
[AU95U95U12](X1,X2) = 2
[AU95U95U13](X) = 0
[AU95U95U21](X1,X2) = 2.X1 + 2
[AU95U95U22](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95AND](X1,X2) = 2.X1 + 2.X2 + 2
[AU95U95ISNAT](X) = 2
[AU95U95ISNATKIND](X) = 2
[AU95U95PLUS](X1,X2) = 0
[MARK](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95U11(tt,V1,V2) -> AU95U95U12(au95u95isNat(V1),V2)
 AU95U95U11(tt,V1,V2) -> AU95U95ISNAT(V1)
 AU95U95U12(tt,V2) -> AU95U95ISNAT(V2)
 AU95U95U21(tt,V1) -> AU95U95ISNAT(V1)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95U21(au95u95isNatKind(V1),V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 MARK(U11(X1,X2,X3)) -> AU95U95U11(mark(X1),X2,X3)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> AU95U95U12(mark(X1),X2)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> AU95U95U21(mark(X1),X2)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U11(tt,V1,V2) -> AU95U95U12(au95u95isNat(V1),V2)
 AU95U95U11(tt,V1,V2) -> AU95U95ISNAT(V1)
 AU95U95U12(tt,V2) -> AU95U95ISNAT(V2)
 AU95U95U21(tt,V1) -> AU95U95ISNAT(V1)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95U21(au95u95isNatKind(V1),V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 MARK(U11(X1,X2,X3)) -> AU95U95U11(mark(X1),X2,X3)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> AU95U95U12(mark(X1),X2)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> AU95U95U21(mark(X1),X2)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
->->-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95U11(tt,V1,V2) -> AU95U95U12(au95u95isNat(V1),V2)
 AU95U95U11(tt,V1,V2) -> AU95U95ISNAT(V1)
 AU95U95U12(tt,V2) -> AU95U95ISNAT(V2)
 AU95U95U21(tt,V1) -> AU95U95ISNAT(V1)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95U21(au95u95isNatKind(V1),V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 MARK(U11(X1,X2,X3)) -> AU95U95U11(mark(X1),X2,X3)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> AU95U95U12(mark(X1),X2)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> AU95U95U21(mark(X1),X2)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
-> Usable rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 1
[au95u95U12](X1,X2) = 2.X1 + 2.X2 + 1
[au95u95U13](X) = 2.X + 1
[au95u95U21](X1,X2) = X1 + X2 + 1
[au95u95U22](X) = X + 1
[au95u95U31](X1,X2) = 2.X2 + 1
[au95u95U41](X1,X2,X3) = 2.X2 + 2.X3 + 2
[au95u95and](X1,X2) = 2.X1 + 2.X2
[au95u95isNat](X) = X
[au95u95isNatKind](X) = 0
[au95u95plus](X1,X2) = 2.X1 + 2.X2 + 1
[mark](X) = X
[num0] = 2
[U11](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 1
[U12](X1,X2) = 2.X1 + 2.X2 + 1
[U13](X) = 2.X + 1
[U21](X1,X2) = X1 + X2 + 1
[U22](X) = X + 1
[U31](X1,X2) = 2.X2 + 1
[U41](X1,X2,X3) = 2.X2 + 2.X3 + 2
[and](X1,X2) = 2.X1 + 2.X2
[fSNonEmpty] = 0
[isNat](X) = X
[isNatKind](X) = 0
[plus](X1,X2) = 2.X1 + 2.X2 + 1
[s](X) = X + 1
[tt] = 0
[AU95U95U11](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[AU95U95U12](X1,X2) = X1 + 2.X2 + 1
[AU95U95U13](X) = 0
[AU95U95U21](X1,X2) = 2.X1 + 2.X2 + 2
[AU95U95U22](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95AND](X1,X2) = 2.X2 + 2
[AU95U95ISNAT](X) = 2.X + 1
[AU95U95ISNATKIND](X) = 2
[AU95U95PLUS](X1,X2) = 0
[MARK](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95U11(tt,V1,V2) -> AU95U95ISNAT(V1)
 AU95U95U12(tt,V2) -> AU95U95ISNAT(V2)
 AU95U95U21(tt,V1) -> AU95U95ISNAT(V1)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95U21(au95u95isNatKind(V1),V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 MARK(U11(X1,X2,X3)) -> AU95U95U11(mark(X1),X2,X3)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> AU95U95U12(mark(X1),X2)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> AU95U95U21(mark(X1),X2)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U11(tt,V1,V2) -> AU95U95ISNAT(V1)
 AU95U95U12(tt,V2) -> AU95U95ISNAT(V2)
 AU95U95U21(tt,V1) -> AU95U95ISNAT(V1)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95U21(au95u95isNatKind(V1),V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 MARK(U11(X1,X2,X3)) -> AU95U95U11(mark(X1),X2,X3)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> AU95U95U12(mark(X1),X2)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> AU95U95U21(mark(X1),X2)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
->->-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95U11(tt,V1,V2) -> AU95U95ISNAT(V1)
 AU95U95U12(tt,V2) -> AU95U95ISNAT(V2)
 AU95U95U21(tt,V1) -> AU95U95ISNAT(V1)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95U21(au95u95isNatKind(V1),V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 MARK(U11(X1,X2,X3)) -> AU95U95U11(mark(X1),X2,X3)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> AU95U95U12(mark(X1),X2)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> AU95U95U21(mark(X1),X2)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
-> Usable rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U12](X1,X2) = X1 + 2.X2 + 2
[au95u95U13](X) = X + 2
[au95u95U21](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U22](X) = X + 2
[au95u95U31](X1,X2) = X2
[au95u95U41](X1,X2,X3) = 2.X2 + 2.X3 + 2
[au95u95and](X1,X2) = 2.X1 + 2.X2
[au95u95isNat](X) = 2.X
[au95u95isNatKind](X) = 0
[au95u95plus](X1,X2) = 2.X1 + 2.X2 + 1
[mark](X) = X
[num0] = 2
[U11](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U12](X1,X2) = X1 + 2.X2 + 2
[U13](X) = X + 2
[U21](X1,X2) = 2.X1 + 2.X2 + 2
[U22](X) = X + 2
[U31](X1,X2) = X2
[U41](X1,X2,X3) = 2.X2 + 2.X3 + 2
[and](X1,X2) = 2.X1 + 2.X2
[fSNonEmpty] = 0
[isNat](X) = 2.X
[isNatKind](X) = 0
[plus](X1,X2) = 2.X1 + 2.X2 + 1
[s](X) = X + 1
[tt] = 0
[AU95U95U11](X1,X2,X3) = 2.X2 + 2
[AU95U95U12](X1,X2) = X1 + 2.X2 + 2
[AU95U95U13](X) = 0
[AU95U95U21](X1,X2) = 2.X2 + 2
[AU95U95U22](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95AND](X1,X2) = 2.X2 + 2
[AU95U95ISNAT](X) = 2.X + 1
[AU95U95ISNATKIND](X) = 2
[AU95U95PLUS](X1,X2) = 0
[MARK](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95U12(tt,V2) -> AU95U95ISNAT(V2)
 AU95U95U21(tt,V1) -> AU95U95ISNAT(V1)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95U21(au95u95isNatKind(V1),V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 MARK(U11(X1,X2,X3)) -> AU95U95U11(mark(X1),X2,X3)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> AU95U95U12(mark(X1),X2)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> AU95U95U21(mark(X1),X2)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U12(tt,V2) -> AU95U95ISNAT(V2)
 AU95U95U21(tt,V1) -> AU95U95ISNAT(V1)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95U21(au95u95isNatKind(V1),V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> AU95U95U12(mark(X1),X2)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> AU95U95U21(mark(X1),X2)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
->->-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95U12(tt,V2) -> AU95U95ISNAT(V2)
 AU95U95U21(tt,V1) -> AU95U95ISNAT(V1)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95U21(au95u95isNatKind(V1),V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> AU95U95U12(mark(X1),X2)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> AU95U95U21(mark(X1),X2)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
-> Usable rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3
[au95u95U12](X1,X2) = X1 + 2.X2
[au95u95U13](X) = X
[au95u95U21](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U22](X) = X
[au95u95U31](X1,X2) = 2.X2 + 2
[au95u95U41](X1,X2,X3) = 2.X2 + 2.X3 + 2
[au95u95and](X1,X2) = 2.X1 + 2.X2
[au95u95isNat](X) = 2.X
[au95u95isNatKind](X) = 0
[au95u95plus](X1,X2) = 2.X1 + 2.X2 + 1
[mark](X) = X
[num0] = 1
[U11](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3
[U12](X1,X2) = X1 + 2.X2
[U13](X) = X
[U21](X1,X2) = 2.X1 + 2.X2 + 2
[U22](X) = X
[U31](X1,X2) = 2.X2 + 2
[U41](X1,X2,X3) = 2.X2 + 2.X3 + 2
[and](X1,X2) = 2.X1 + 2.X2
[fSNonEmpty] = 0
[isNat](X) = 2.X
[isNatKind](X) = 0
[plus](X1,X2) = 2.X1 + 2.X2 + 1
[s](X) = X + 1
[tt] = 0
[AU95U95U11](X1,X2,X3) = 0
[AU95U95U12](X1,X2) = 2.X2 + 2
[AU95U95U13](X) = 0
[AU95U95U21](X1,X2) = 2.X1 + 2.X2 + 2
[AU95U95U22](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95AND](X1,X2) = 2.X2 + 2
[AU95U95ISNAT](X) = 2.X
[AU95U95ISNATKIND](X) = 2
[AU95U95PLUS](X1,X2) = 0
[MARK](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95U21(tt,V1) -> AU95U95ISNAT(V1)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95U21(au95u95isNatKind(V1),V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> AU95U95U12(mark(X1),X2)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> AU95U95U21(mark(X1),X2)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U21(tt,V1) -> AU95U95ISNAT(V1)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95U21(au95u95isNatKind(V1),V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> AU95U95U21(mark(X1),X2)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
->->-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95U21(tt,V1) -> AU95U95ISNAT(V1)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95U21(au95u95isNatKind(V1),V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> AU95U95U21(mark(X1),X2)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
-> Usable rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U12](X1,X2) = X1 + 2.X2 + 1
[au95u95U13](X) = X
[au95u95U21](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U22](X) = X
[au95u95U31](X1,X2) = 2.X2
[au95u95U41](X1,X2,X3) = 2.X2 + 2.X3 + 2
[au95u95and](X1,X2) = 2.X1 + 2.X2
[au95u95isNat](X) = 2.X + 1
[au95u95isNatKind](X) = 0
[au95u95plus](X1,X2) = 2.X1 + 2.X2 + 1
[mark](X) = X
[num0] = 2
[U11](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U12](X1,X2) = X1 + 2.X2 + 1
[U13](X) = X
[U21](X1,X2) = 2.X1 + 2.X2 + 2
[U22](X) = X
[U31](X1,X2) = 2.X2
[U41](X1,X2,X3) = 2.X2 + 2.X3 + 2
[and](X1,X2) = 2.X1 + 2.X2
[fSNonEmpty] = 0
[isNat](X) = 2.X + 1
[isNatKind](X) = 0
[plus](X1,X2) = 2.X1 + 2.X2 + 1
[s](X) = X + 1
[tt] = 0
[AU95U95U11](X1,X2,X3) = 0
[AU95U95U12](X1,X2) = 0
[AU95U95U13](X) = 0
[AU95U95U21](X1,X2) = X1 + 2.X2 + 1
[AU95U95U22](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95AND](X1,X2) = 2.X2 + 1
[AU95U95ISNAT](X) = 2.X
[AU95U95ISNATKIND](X) = 1
[AU95U95PLUS](X1,X2) = 0
[MARK](X) = 2.X + 1

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95U21(au95u95isNatKind(V1),V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> AU95U95U21(mark(X1),X2)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
->->-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
-> Usable rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U12](X1,X2) = X1 + 2.X2 + 1
[au95u95U13](X) = X
[au95u95U21](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U22](X) = X + 1
[au95u95U31](X1,X2) = 2.X2 + 2
[au95u95U41](X1,X2,X3) = 2.X2 + 2.X3 + 2
[au95u95and](X1,X2) = 2.X1 + 2.X2
[au95u95isNat](X) = 2.X + 1
[au95u95isNatKind](X) = 0
[au95u95plus](X1,X2) = 2.X1 + 2.X2 + 1
[mark](X) = X
[num0] = 2
[U11](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U12](X1,X2) = X1 + 2.X2 + 1
[U13](X) = X
[U21](X1,X2) = 2.X1 + 2.X2 + 2
[U22](X) = X + 1
[U31](X1,X2) = 2.X2 + 2
[U41](X1,X2,X3) = 2.X2 + 2.X3 + 2
[and](X1,X2) = 2.X1 + 2.X2
[fSNonEmpty] = 0
[isNat](X) = 2.X + 1
[isNatKind](X) = 0
[plus](X1,X2) = 2.X1 + 2.X2 + 1
[s](X) = X + 1
[tt] = 0
[AU95U95U11](X1,X2,X3) = 0
[AU95U95U12](X1,X2) = 0
[AU95U95U13](X) = 0
[AU95U95U21](X1,X2) = 0
[AU95U95U22](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95AND](X1,X2) = 2.X2 + 2
[AU95U95ISNAT](X) = X + 2
[AU95U95ISNATKIND](X) = 2
[AU95U95PLUS](X1,X2) = 0
[MARK](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
->->-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
-> Usable rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[au95u95U12](X1,X2) = X1 + 2.X2 + 1
[au95u95U13](X) = X
[au95u95U21](X1,X2) = 2.X1 + X2 + 2
[au95u95U22](X) = X + 1
[au95u95U31](X1,X2) = 2.X2 + 2
[au95u95U41](X1,X2,X3) = 2.X2 + 2.X3 + 2
[au95u95and](X1,X2) = X1 + 2.X2
[au95u95isNat](X) = X + 1
[au95u95isNatKind](X) = 0
[au95u95plus](X1,X2) = 2.X1 + 2.X2 + 1
[mark](X) = X
[num0] = 2
[U11](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[U12](X1,X2) = X1 + 2.X2 + 1
[U13](X) = X
[U21](X1,X2) = 2.X1 + X2 + 2
[U22](X) = X + 1
[U31](X1,X2) = 2.X2 + 2
[U41](X1,X2,X3) = 2.X2 + 2.X3 + 2
[and](X1,X2) = X1 + 2.X2
[fSNonEmpty] = 0
[isNat](X) = X + 1
[isNatKind](X) = 0
[plus](X1,X2) = 2.X1 + 2.X2 + 1
[s](X) = X + 1
[tt] = 0
[AU95U95U11](X1,X2,X3) = 0
[AU95U95U12](X1,X2) = 0
[AU95U95U13](X) = 0
[AU95U95U21](X1,X2) = 0
[AU95U95U22](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95AND](X1,X2) = 2.X2 + 2
[AU95U95ISNAT](X) = 2.X + 2
[AU95U95ISNATKIND](X) = 2
[AU95U95PLUS](X1,X2) = 0
[MARK](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
->->-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
-> Usable rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U12](X1,X2) = X1 + 2.X2 + 1
[au95u95U13](X) = X
[au95u95U21](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U22](X) = X + 1
[au95u95U31](X1,X2) = 2.X2 + 2
[au95u95U41](X1,X2,X3) = 2.X2 + 2.X3 + 2
[au95u95and](X1,X2) = 2.X1 + 2.X2
[au95u95isNat](X) = 2.X + 1
[au95u95isNatKind](X) = 0
[au95u95plus](X1,X2) = 2.X1 + 2.X2 + 1
[mark](X) = X
[num0] = 2
[U11](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U12](X1,X2) = X1 + 2.X2 + 1
[U13](X) = X
[U21](X1,X2) = 2.X1 + 2.X2 + 2
[U22](X) = X + 1
[U31](X1,X2) = 2.X2 + 2
[U41](X1,X2,X3) = 2.X2 + 2.X3 + 2
[and](X1,X2) = 2.X1 + 2.X2
[fSNonEmpty] = 0
[isNat](X) = 2.X + 1
[isNatKind](X) = 0
[plus](X1,X2) = 2.X1 + 2.X2 + 1
[s](X) = X + 1
[tt] = 0
[AU95U95U11](X1,X2,X3) = 0
[AU95U95U12](X1,X2) = 0
[AU95U95U13](X) = 0
[AU95U95U21](X1,X2) = 0
[AU95U95U22](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95AND](X1,X2) = 2.X1 + 2.X2 + 2
[AU95U95ISNAT](X) = 2.X + 2
[AU95U95ISNATKIND](X) = 2
[AU95U95PLUS](X1,X2) = 0
[MARK](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
->->-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 MARK(U11(X1,X2,X3)) -> MARK(X1)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
-> Usable rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U12](X1,X2) = X1 + 2.X2 + 1
[au95u95U13](X) = X
[au95u95U21](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U22](X) = X + 1
[au95u95U31](X1,X2) = 2.X2 + 1
[au95u95U41](X1,X2,X3) = 2.X2 + 2.X3 + 2
[au95u95and](X1,X2) = 2.X1 + 2.X2
[au95u95isNat](X) = 2.X + 1
[au95u95isNatKind](X) = 0
[au95u95plus](X1,X2) = 2.X1 + 2.X2 + 1
[mark](X) = X
[num0] = 2
[U11](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U12](X1,X2) = X1 + 2.X2 + 1
[U13](X) = X
[U21](X1,X2) = 2.X1 + 2.X2 + 2
[U22](X) = X + 1
[U31](X1,X2) = 2.X2 + 1
[U41](X1,X2,X3) = 2.X2 + 2.X3 + 2
[and](X1,X2) = 2.X1 + 2.X2
[fSNonEmpty] = 0
[isNat](X) = 2.X + 1
[isNatKind](X) = 0
[plus](X1,X2) = 2.X1 + 2.X2 + 1
[s](X) = X + 1
[tt] = 0
[AU95U95U11](X1,X2,X3) = 0
[AU95U95U12](X1,X2) = 0
[AU95U95U13](X) = 0
[AU95U95U21](X1,X2) = 0
[AU95U95U22](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95AND](X1,X2) = 2.X1 + 2.X2 + 2
[AU95U95ISNAT](X) = 0
[AU95U95ISNATKIND](X) = 2
[AU95U95PLUS](X1,X2) = 0
[MARK](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
->->-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
-> Usable rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U12](X1,X2) = X1 + 2.X2 + 2
[au95u95U13](X) = X + 2
[au95u95U21](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U22](X) = X + 1
[au95u95U31](X1,X2) = 2.X2 + 1
[au95u95U41](X1,X2,X3) = 2.X2 + 2.X3 + 2
[au95u95and](X1,X2) = 2.X1 + 2.X2
[au95u95isNat](X) = 2.X
[au95u95isNatKind](X) = 0
[au95u95plus](X1,X2) = 2.X1 + 2.X2 + 1
[mark](X) = X
[num0] = 0
[U11](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U12](X1,X2) = X1 + 2.X2 + 2
[U13](X) = X + 2
[U21](X1,X2) = 2.X1 + 2.X2 + 2
[U22](X) = X + 1
[U31](X1,X2) = 2.X2 + 1
[U41](X1,X2,X3) = 2.X2 + 2.X3 + 2
[and](X1,X2) = 2.X1 + 2.X2
[fSNonEmpty] = 0
[isNat](X) = 2.X
[isNatKind](X) = 0
[plus](X1,X2) = 2.X1 + 2.X2 + 1
[s](X) = X + 1
[tt] = 0
[AU95U95U11](X1,X2,X3) = 0
[AU95U95U12](X1,X2) = 0
[AU95U95U13](X) = 0
[AU95U95U21](X1,X2) = 0
[AU95U95U22](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95AND](X1,X2) = X1 + 2.X2 + 2
[AU95U95ISNAT](X) = 0
[AU95U95ISNATKIND](X) = 2
[AU95U95PLUS](X1,X2) = 0
[MARK](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
->->-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
-> Usable rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2,X3) = 2.X1 + X2 + 2.X3 + 2
[au95u95U12](X1,X2) = 2.X2 + 2
[au95u95U13](X) = X + 1
[au95u95U21](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U22](X) = X + 1
[au95u95U31](X1,X2) = X2
[au95u95U41](X1,X2,X3) = 2.X2 + 2.X3 + 2
[au95u95and](X1,X2) = 2.X1 + X2
[au95u95isNat](X) = 2.X + 1
[au95u95isNatKind](X) = 0
[au95u95plus](X1,X2) = 2.X1 + 2.X2 + 1
[mark](X) = X
[num0] = 2
[U11](X1,X2,X3) = 2.X1 + X2 + 2.X3 + 2
[U12](X1,X2) = 2.X2 + 2
[U13](X) = X + 1
[U21](X1,X2) = 2.X1 + 2.X2 + 2
[U22](X) = X + 1
[U31](X1,X2) = X2
[U41](X1,X2,X3) = 2.X2 + 2.X3 + 2
[and](X1,X2) = 2.X1 + X2
[fSNonEmpty] = 0
[isNat](X) = 2.X + 1
[isNatKind](X) = 0
[plus](X1,X2) = 2.X1 + 2.X2 + 1
[s](X) = X + 1
[tt] = 0
[AU95U95U11](X1,X2,X3) = 0
[AU95U95U12](X1,X2) = 0
[AU95U95U13](X) = 0
[AU95U95U21](X1,X2) = 0
[AU95U95U22](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95AND](X1,X2) = 2.X1 + 2.X2 + 2
[AU95U95ISNAT](X) = 0
[AU95U95ISNATKIND](X) = 2
[AU95U95PLUS](X1,X2) = 0
[MARK](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
->->-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
-> Usable rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U12](X1,X2) = X2 + 2
[au95u95U13](X) = 2
[au95u95U21](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U22](X) = X
[au95u95U31](X1,X2) = 2.X2 + 2
[au95u95U41](X1,X2,X3) = 2.X2 + 2.X3 + 2
[au95u95and](X1,X2) = 2.X1 + X2
[au95u95isNat](X) = 2.X + 2
[au95u95isNatKind](X) = 0
[au95u95plus](X1,X2) = 2.X1 + 2.X2
[mark](X) = X
[num0] = 1
[U11](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U12](X1,X2) = X2 + 2
[U13](X) = 2
[U21](X1,X2) = 2.X1 + 2.X2 + 2
[U22](X) = X
[U31](X1,X2) = 2.X2 + 2
[U41](X1,X2,X3) = 2.X2 + 2.X3 + 2
[and](X1,X2) = 2.X1 + X2
[fSNonEmpty] = 0
[isNat](X) = 2.X + 2
[isNatKind](X) = 0
[plus](X1,X2) = 2.X1 + 2.X2
[s](X) = X + 2
[tt] = 0
[AU95U95U11](X1,X2,X3) = 0
[AU95U95U12](X1,X2) = 0
[AU95U95U13](X) = 0
[AU95U95U21](X1,X2) = 0
[AU95U95U22](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95AND](X1,X2) = 2.X2 + 1
[AU95U95ISNAT](X) = 0
[AU95U95ISNATKIND](X) = 1
[AU95U95PLUS](X1,X2) = 0
[MARK](X) = 2.X + 1

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 MARK(U22(X)) -> MARK(X)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 MARK(U22(X)) -> MARK(X)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
->->-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 MARK(U22(X)) -> MARK(X)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
-> Usable rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2,X3) = 2
[au95u95U12](X1,X2) = 2
[au95u95U13](X) = X
[au95u95U21](X1,X2) = 2
[au95u95U22](X) = X
[au95u95U31](X1,X2) = 2.X2 + 2
[au95u95U41](X1,X2,X3) = 2.X2 + 2.X3 + 2
[au95u95and](X1,X2) = 2.X1 + X2
[au95u95isNat](X) = 2
[au95u95isNatKind](X) = 2.X + 2
[au95u95plus](X1,X2) = 2.X1 + 2.X2 + 2
[mark](X) = X
[num0] = 2
[U11](X1,X2,X3) = 2
[U12](X1,X2) = 2
[U13](X) = X
[U21](X1,X2) = 2
[U22](X) = X
[U31](X1,X2) = 2.X2 + 2
[U41](X1,X2,X3) = 2.X2 + 2.X3 + 2
[and](X1,X2) = 2.X1 + X2
[fSNonEmpty] = 0
[isNat](X) = 2
[isNatKind](X) = 2.X + 2
[plus](X1,X2) = 2.X1 + 2.X2 + 2
[s](X) = X
[tt] = 2
[AU95U95U11](X1,X2,X3) = 0
[AU95U95U12](X1,X2) = 0
[AU95U95U13](X) = 0
[AU95U95U21](X1,X2) = 0
[AU95U95U22](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95AND](X1,X2) = X1 + 2.X2
[AU95U95ISNAT](X) = 0
[AU95U95ISNATKIND](X) = 2.X + 2
[AU95U95PLUS](X1,X2) = 0
[MARK](X) = 2.X + 1

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95AND(au95u95isNatKind(V1),isNatKind(V2))
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
 MARK(U22(X)) -> MARK(X)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNatKind(X)) -> AU95U95ISNATKIND(X)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
->->-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->->Cycle:
->->-> Pairs:
 MARK(U22(X)) -> MARK(X)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
->->-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt


The problem is decomposed in 2 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 AU95U95ISNATKIND(plus(V1,V2)) -> AU95U95ISNATKIND(V1)
 AU95U95ISNATKIND(s(V1)) -> AU95U95ISNATKIND(V1)
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->Projection:
 pi(AU95U95ISNATKIND) = 1

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Subterm Processor:
-> Pairs:
 MARK(U22(X)) -> MARK(X)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->Projection:
 pi(MARK) = 1

Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 au95u95U11(tt,V1,V2) -> au95u95U12(au95u95isNat(V1),V2)
 au95u95U11(X1,X2,X3) -> U11(X1,X2,X3)
 au95u95U12(tt,V2) -> au95u95U13(au95u95isNat(V2))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1) -> au95u95U22(au95u95isNat(V1))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt,N) -> mark(N)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U41(tt,M,N) -> s(au95u95plus(mark(N),mark(M)))
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(plus(V1,V2)) -> au95u95U11(au95u95and(au95u95isNatKind(V1),isNatKind(V2)),V1,V2)
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNatKind(V1),V1)
 au95u95isNat(X) -> isNat(X)
 au95u95isNatKind(num0) -> tt
 au95u95isNatKind(plus(V1,V2)) -> au95u95and(au95u95isNatKind(V1),isNatKind(V2))
 au95u95isNatKind(s(V1)) -> au95u95isNatKind(V1)
 au95u95isNatKind(X) -> isNatKind(X)
 au95u95plus(N,num0) -> au95u95U31(au95u95and(au95u95isNat(N),isNatKind(N)),N)
 au95u95plus(N,s(M)) -> au95u95U41(au95u95and(au95u95and(au95u95isNat(M),isNatKind(M)),and(isNat(N),isNatKind(N))),M,N)
 au95u95plus(X1,X2) -> plus(X1,X2)
 mark(num0) -> num0
 mark(U11(X1,X2,X3)) -> au95u95U11(mark(X1),X2,X3)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatKind(X)) -> au95u95isNatKind(X)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
