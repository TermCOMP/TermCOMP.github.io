YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/ufpP4.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRSRRRProof [EQUIVALENT, 73 ms]
(2) QTRS
(3) QTRSRRRProof [EQUIVALENT, 0 ms]
(4) QTRS
(5) RisEmptyProof [EQUIVALENT, 0 ms]
(6) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   dx(X) -> one
   dx(a) -> zero
   dx(plus(ALPHA, BETA)) -> plus(dx(ALPHA), dx(BETA))
   dx(times(ALPHA, BETA)) -> plus(times(BETA, dx(ALPHA)), times(ALPHA, dx(BETA)))
   dx(minus(ALPHA, BETA)) -> minus(dx(ALPHA), dx(BETA))
   dx(neg(ALPHA)) -> neg(dx(ALPHA))
   dx(div(ALPHA, BETA)) -> minus(div(dx(ALPHA), BETA), times(ALPHA, div(dx(BETA), exp(BETA, two))))
   dx(ln(ALPHA)) -> div(dx(ALPHA), ALPHA)
   dx(exp(ALPHA, BETA)) -> plus(times(BETA, times(exp(ALPHA, minus(BETA, one)), dx(ALPHA))), times(exp(ALPHA, BETA), times(ln(ALPHA), dx(BETA))))

Q is empty.

----------------------------------------

(1) QTRSRRRProof (EQUIVALENT)
Used ordering:
dx/1(YES)
one/0)
a/0)
zero/0)
plus/2(YES,YES)
times/2(YES,YES)
minus/2(YES,YES)
neg/1)YES(
div/2(YES,YES)
exp/2(YES,YES)
two/0)
ln/1(YES)

Quasi precedence:
[dx_1, one] > [a, zero]
[dx_1, one] > two
[dx_1, one] > ln_1 > [div_2, exp_2] > [plus_2, times_2]
[dx_1, one] > ln_1 > [div_2, exp_2] > minus_2


Status:
dx_1: multiset status
one: multiset status
a: multiset status
zero: multiset status
plus_2: [2,1]
times_2: multiset status
minus_2: multiset status
div_2: multiset status
exp_2: multiset status
two: multiset status
ln_1: multiset status

With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   dx(X) -> one
   dx(a) -> zero
   dx(plus(ALPHA, BETA)) -> plus(dx(ALPHA), dx(BETA))
   dx(times(ALPHA, BETA)) -> plus(times(BETA, dx(ALPHA)), times(ALPHA, dx(BETA)))
   dx(minus(ALPHA, BETA)) -> minus(dx(ALPHA), dx(BETA))
   dx(div(ALPHA, BETA)) -> minus(div(dx(ALPHA), BETA), times(ALPHA, div(dx(BETA), exp(BETA, two))))
   dx(ln(ALPHA)) -> div(dx(ALPHA), ALPHA)
   dx(exp(ALPHA, BETA)) -> plus(times(BETA, times(exp(ALPHA, minus(BETA, one)), dx(ALPHA))), times(exp(ALPHA, BETA), times(ln(ALPHA), dx(BETA))))




----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   dx(neg(ALPHA)) -> neg(dx(ALPHA))

Q is empty.

----------------------------------------

(3) QTRSRRRProof (EQUIVALENT)
Used ordering:
Knuth-Bendix order [KBO] with precedence:dx_1 > neg_1

and weight map:

   dx_1=2
   neg_1=1

The variable weight is 1With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   dx(neg(ALPHA)) -> neg(dx(ALPHA))




----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
R is empty.
Q is empty.

----------------------------------------

(5) RisEmptyProof (EQUIVALENT)
The TRS R is empty. Hence, termination is trivially proven.
----------------------------------------

(6)
YES
