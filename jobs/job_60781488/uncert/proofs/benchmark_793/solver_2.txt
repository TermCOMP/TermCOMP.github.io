YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/riYNj.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) Overlay + Local Confluence [EQUIVALENT, 0 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 0 ms]
(4) QDP
(5) UsableRulesProof [EQUIVALENT, 0 ms]
(6) QDP
(7) QReductionProof [EQUIVALENT, 0 ms]
(8) QDP
(9) QDPSizeChangeProof [EQUIVALENT, 0 ms]
(10) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   quot(0, s(y), s(z)) -> 0
   quot(s(x), s(y), z) -> quot(x, y, z)
   quot(x, 0, s(z)) -> s(quot(x, s(z), s(z)))

Q is empty.

----------------------------------------

(1) Overlay + Local Confluence (EQUIVALENT)
The TRS is overlay and locally confluent. By [NOC] we can switch to innermost.
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   quot(0, s(y), s(z)) -> 0
   quot(s(x), s(y), z) -> quot(x, y, z)
   quot(x, 0, s(z)) -> s(quot(x, s(z), s(z)))

The set Q consists of the following terms:

   quot(0, s(x0), s(x1))
   quot(s(x0), s(x1), x2)
   quot(x0, 0, s(x1))


----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   QUOT(s(x), s(y), z) -> QUOT(x, y, z)
   QUOT(x, 0, s(z)) -> QUOT(x, s(z), s(z))

The TRS R consists of the following rules:

   quot(0, s(y), s(z)) -> 0
   quot(s(x), s(y), z) -> quot(x, y, z)
   quot(x, 0, s(z)) -> s(quot(x, s(z), s(z)))

The set Q consists of the following terms:

   quot(0, s(x0), s(x1))
   quot(s(x0), s(x1), x2)
   quot(x0, 0, s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   QUOT(s(x), s(y), z) -> QUOT(x, y, z)
   QUOT(x, 0, s(z)) -> QUOT(x, s(z), s(z))

R is empty.
The set Q consists of the following terms:

   quot(0, s(x0), s(x1))
   quot(s(x0), s(x1), x2)
   quot(x0, 0, s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   quot(0, s(x0), s(x1))
   quot(s(x0), s(x1), x2)
   quot(x0, 0, s(x1))


----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   QUOT(s(x), s(y), z) -> QUOT(x, y, z)
   QUOT(x, 0, s(z)) -> QUOT(x, s(z), s(z))

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*QUOT(s(x), s(y), z) -> QUOT(x, y, z)
The graph contains the following edges 1 > 1, 2 > 2, 3 >= 3


*QUOT(x, 0, s(z)) -> QUOT(x, s(z), s(z))
The graph contains the following edges 1 >= 1, 3 >= 2, 3 >= 3


----------------------------------------

(10)
YES
