YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/K1Hq2.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRSRRRProof [EQUIVALENT, 30 ms]
(2) QTRS
(3) QTRSRRRProof [EQUIVALENT, 0 ms]
(4) QTRS
(5) QTRSRRRProof [EQUIVALENT, 0 ms]
(6) QTRS
(7) RisEmptyProof [EQUIVALENT, 0 ms]
(8) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   flatten(nil) -> nil
   flatten(unit(x)) -> flatten(x)
   flatten(++(x, y)) -> ++(flatten(x), flatten(y))
   flatten(++(unit(x), y)) -> ++(flatten(x), flatten(y))
   flatten(flatten(x)) -> flatten(x)
   rev(nil) -> nil
   rev(unit(x)) -> unit(x)
   rev(++(x, y)) -> ++(rev(y), rev(x))
   rev(rev(x)) -> x
   ++(x, nil) -> x
   ++(nil, y) -> y
   ++(++(x, y), z) -> ++(x, ++(y, z))

Q is empty.

----------------------------------------

(1) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(++(x_1, x_2)) = x_1 + x_2
   POL(flatten(x_1)) = x_1
   POL(nil) = 2
   POL(rev(x_1)) = 2*x_1
   POL(unit(x_1)) = 1 + 2*x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   flatten(unit(x)) -> flatten(x)
   flatten(++(unit(x), y)) -> ++(flatten(x), flatten(y))
   rev(nil) -> nil
   rev(unit(x)) -> unit(x)
   ++(x, nil) -> x
   ++(nil, y) -> y




----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   flatten(nil) -> nil
   flatten(++(x, y)) -> ++(flatten(x), flatten(y))
   flatten(flatten(x)) -> flatten(x)
   rev(++(x, y)) -> ++(rev(y), rev(x))
   rev(rev(x)) -> x
   ++(++(x, y), z) -> ++(x, ++(y, z))

Q is empty.

----------------------------------------

(3) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(++(x_1, x_2)) = 1 + x_1 + x_2
   POL(flatten(x_1)) = 2*x_1
   POL(nil) = 2
   POL(rev(x_1)) = 2*x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   flatten(nil) -> nil
   flatten(++(x, y)) -> ++(flatten(x), flatten(y))
   rev(++(x, y)) -> ++(rev(y), rev(x))




----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   flatten(flatten(x)) -> flatten(x)
   rev(rev(x)) -> x
   ++(++(x, y), z) -> ++(x, ++(y, z))

Q is empty.

----------------------------------------

(5) QTRSRRRProof (EQUIVALENT)
Used ordering:
Knuth-Bendix order [KBO] with precedence:flatten_1 > ++_2 > rev_1

and weight map:

   flatten_1=0
   rev_1=1
   ++_2=0

The variable weight is 1With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   flatten(flatten(x)) -> flatten(x)
   rev(rev(x)) -> x
   ++(++(x, y), z) -> ++(x, ++(y, z))




----------------------------------------

(6)
Obligation:
Q restricted rewrite system:
R is empty.
Q is empty.

----------------------------------------

(7) RisEmptyProof (EQUIVALENT)
The TRS R is empty. Hence, termination is trivially proven.
----------------------------------------

(8)
YES
