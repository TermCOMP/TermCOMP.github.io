YES

Problem 1: 

(VAR vu95NonEmpty N X X1 X2 Y Z)
(RULES
activate(nu95u95first(X1,X2)) -> first(activate(X1),activate(X2))
activate(nu95u95s(X)) -> s(activate(X))
activate(nu95u95terms(X)) -> terms(activate(X))
activate(X) -> X
add(s(X),Y) -> s(add(X,Y))
add(num0,X) -> X
dbl(s(X)) -> s(s(dbl(X)))
dbl(num0) -> num0
first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
first(num0,X) -> nil
first(X1,X2) -> nu95u95first(X1,X2)
s(X) -> nu95u95s(X)
sqr(s(X)) -> s(add(sqr(X),dbl(X)))
sqr(num0) -> num0
terms(N) -> cons(recip(sqr(N)),nu95u95terms(nu95u95s(N)))
terms(X) -> nu95u95terms(X)
)


Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 ACTIVATE(nu95u95first(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95first(X1,X2)) -> ACTIVATE(X2)
 ACTIVATE(nu95u95first(X1,X2)) -> FIRST(activate(X1),activate(X2))
 ACTIVATE(nu95u95s(X)) -> ACTIVATE(X)
 ACTIVATE(nu95u95s(X)) -> S(activate(X))
 ACTIVATE(nu95u95terms(X)) -> ACTIVATE(X)
 ACTIVATE(nu95u95terms(X)) -> TERMS(activate(X))
 ADD(s(X),Y) -> ADD(X,Y)
 ADD(s(X),Y) -> S(add(X,Y))
 DBL(s(X)) -> DBL(X)
 DBL(s(X)) -> S(dbl(X))
 DBL(s(X)) -> S(s(dbl(X)))
 FIRST(s(X),cons(Y,Z)) -> ACTIVATE(Z)
 SQR(s(X)) -> ADD(sqr(X),dbl(X))
 SQR(s(X)) -> DBL(X)
 SQR(s(X)) -> S(add(sqr(X),dbl(X)))
 SQR(s(X)) -> SQR(X)
 TERMS(N) -> SQR(N)
-> Rules:
 activate(nu95u95first(X1,X2)) -> first(activate(X1),activate(X2))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95terms(X)) -> terms(activate(X))
 activate(X) -> X
 add(s(X),Y) -> s(add(X,Y))
 add(num0,X) -> X
 dbl(s(X)) -> s(s(dbl(X)))
 dbl(num0) -> num0
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 s(X) -> nu95u95s(X)
 sqr(s(X)) -> s(add(sqr(X),dbl(X)))
 sqr(num0) -> num0
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(nu95u95s(N)))
 terms(X) -> nu95u95terms(X)

Problem 1: 

SCC Processor:
-> Pairs:
 ACTIVATE(nu95u95first(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95first(X1,X2)) -> ACTIVATE(X2)
 ACTIVATE(nu95u95first(X1,X2)) -> FIRST(activate(X1),activate(X2))
 ACTIVATE(nu95u95s(X)) -> ACTIVATE(X)
 ACTIVATE(nu95u95s(X)) -> S(activate(X))
 ACTIVATE(nu95u95terms(X)) -> ACTIVATE(X)
 ACTIVATE(nu95u95terms(X)) -> TERMS(activate(X))
 ADD(s(X),Y) -> ADD(X,Y)
 ADD(s(X),Y) -> S(add(X,Y))
 DBL(s(X)) -> DBL(X)
 DBL(s(X)) -> S(dbl(X))
 DBL(s(X)) -> S(s(dbl(X)))
 FIRST(s(X),cons(Y,Z)) -> ACTIVATE(Z)
 SQR(s(X)) -> ADD(sqr(X),dbl(X))
 SQR(s(X)) -> DBL(X)
 SQR(s(X)) -> S(add(sqr(X),dbl(X)))
 SQR(s(X)) -> SQR(X)
 TERMS(N) -> SQR(N)
-> Rules:
 activate(nu95u95first(X1,X2)) -> first(activate(X1),activate(X2))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95terms(X)) -> terms(activate(X))
 activate(X) -> X
 add(s(X),Y) -> s(add(X,Y))
 add(num0,X) -> X
 dbl(s(X)) -> s(s(dbl(X)))
 dbl(num0) -> num0
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 s(X) -> nu95u95s(X)
 sqr(s(X)) -> s(add(sqr(X),dbl(X)))
 sqr(num0) -> num0
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(nu95u95s(N)))
 terms(X) -> nu95u95terms(X)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 DBL(s(X)) -> DBL(X)
->->-> Rules:
 activate(nu95u95first(X1,X2)) -> first(activate(X1),activate(X2))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95terms(X)) -> terms(activate(X))
 activate(X) -> X
 add(s(X),Y) -> s(add(X,Y))
 add(num0,X) -> X
 dbl(s(X)) -> s(s(dbl(X)))
 dbl(num0) -> num0
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 s(X) -> nu95u95s(X)
 sqr(s(X)) -> s(add(sqr(X),dbl(X)))
 sqr(num0) -> num0
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(nu95u95s(N)))
 terms(X) -> nu95u95terms(X)
->->Cycle:
->->-> Pairs:
 ADD(s(X),Y) -> ADD(X,Y)
->->-> Rules:
 activate(nu95u95first(X1,X2)) -> first(activate(X1),activate(X2))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95terms(X)) -> terms(activate(X))
 activate(X) -> X
 add(s(X),Y) -> s(add(X,Y))
 add(num0,X) -> X
 dbl(s(X)) -> s(s(dbl(X)))
 dbl(num0) -> num0
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 s(X) -> nu95u95s(X)
 sqr(s(X)) -> s(add(sqr(X),dbl(X)))
 sqr(num0) -> num0
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(nu95u95s(N)))
 terms(X) -> nu95u95terms(X)
->->Cycle:
->->-> Pairs:
 SQR(s(X)) -> SQR(X)
->->-> Rules:
 activate(nu95u95first(X1,X2)) -> first(activate(X1),activate(X2))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95terms(X)) -> terms(activate(X))
 activate(X) -> X
 add(s(X),Y) -> s(add(X,Y))
 add(num0,X) -> X
 dbl(s(X)) -> s(s(dbl(X)))
 dbl(num0) -> num0
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 s(X) -> nu95u95s(X)
 sqr(s(X)) -> s(add(sqr(X),dbl(X)))
 sqr(num0) -> num0
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(nu95u95s(N)))
 terms(X) -> nu95u95terms(X)
->->Cycle:
->->-> Pairs:
 ACTIVATE(nu95u95first(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95first(X1,X2)) -> ACTIVATE(X2)
 ACTIVATE(nu95u95first(X1,X2)) -> FIRST(activate(X1),activate(X2))
 ACTIVATE(nu95u95s(X)) -> ACTIVATE(X)
 ACTIVATE(nu95u95terms(X)) -> ACTIVATE(X)
 FIRST(s(X),cons(Y,Z)) -> ACTIVATE(Z)
->->-> Rules:
 activate(nu95u95first(X1,X2)) -> first(activate(X1),activate(X2))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95terms(X)) -> terms(activate(X))
 activate(X) -> X
 add(s(X),Y) -> s(add(X,Y))
 add(num0,X) -> X
 dbl(s(X)) -> s(s(dbl(X)))
 dbl(num0) -> num0
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 s(X) -> nu95u95s(X)
 sqr(s(X)) -> s(add(sqr(X),dbl(X)))
 sqr(num0) -> num0
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(nu95u95s(N)))
 terms(X) -> nu95u95terms(X)


The problem is decomposed in 4 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 DBL(s(X)) -> DBL(X)
-> Rules:
 activate(nu95u95first(X1,X2)) -> first(activate(X1),activate(X2))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95terms(X)) -> terms(activate(X))
 activate(X) -> X
 add(s(X),Y) -> s(add(X,Y))
 add(num0,X) -> X
 dbl(s(X)) -> s(s(dbl(X)))
 dbl(num0) -> num0
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 s(X) -> nu95u95s(X)
 sqr(s(X)) -> s(add(sqr(X),dbl(X)))
 sqr(num0) -> num0
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(nu95u95s(N)))
 terms(X) -> nu95u95terms(X)
->Projection:
 pi(DBL) = 1

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 activate(nu95u95first(X1,X2)) -> first(activate(X1),activate(X2))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95terms(X)) -> terms(activate(X))
 activate(X) -> X
 add(s(X),Y) -> s(add(X,Y))
 add(num0,X) -> X
 dbl(s(X)) -> s(s(dbl(X)))
 dbl(num0) -> num0
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 s(X) -> nu95u95s(X)
 sqr(s(X)) -> s(add(sqr(X),dbl(X)))
 sqr(num0) -> num0
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(nu95u95s(N)))
 terms(X) -> nu95u95terms(X)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Subterm Processor:
-> Pairs:
 ADD(s(X),Y) -> ADD(X,Y)
-> Rules:
 activate(nu95u95first(X1,X2)) -> first(activate(X1),activate(X2))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95terms(X)) -> terms(activate(X))
 activate(X) -> X
 add(s(X),Y) -> s(add(X,Y))
 add(num0,X) -> X
 dbl(s(X)) -> s(s(dbl(X)))
 dbl(num0) -> num0
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 s(X) -> nu95u95s(X)
 sqr(s(X)) -> s(add(sqr(X),dbl(X)))
 sqr(num0) -> num0
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(nu95u95s(N)))
 terms(X) -> nu95u95terms(X)
->Projection:
 pi(ADD) = 1

Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 activate(nu95u95first(X1,X2)) -> first(activate(X1),activate(X2))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95terms(X)) -> terms(activate(X))
 activate(X) -> X
 add(s(X),Y) -> s(add(X,Y))
 add(num0,X) -> X
 dbl(s(X)) -> s(s(dbl(X)))
 dbl(num0) -> num0
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 s(X) -> nu95u95s(X)
 sqr(s(X)) -> s(add(sqr(X),dbl(X)))
 sqr(num0) -> num0
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(nu95u95s(N)))
 terms(X) -> nu95u95terms(X)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Subterm Processor:
-> Pairs:
 SQR(s(X)) -> SQR(X)
-> Rules:
 activate(nu95u95first(X1,X2)) -> first(activate(X1),activate(X2))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95terms(X)) -> terms(activate(X))
 activate(X) -> X
 add(s(X),Y) -> s(add(X,Y))
 add(num0,X) -> X
 dbl(s(X)) -> s(s(dbl(X)))
 dbl(num0) -> num0
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 s(X) -> nu95u95s(X)
 sqr(s(X)) -> s(add(sqr(X),dbl(X)))
 sqr(num0) -> num0
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(nu95u95s(N)))
 terms(X) -> nu95u95terms(X)
->Projection:
 pi(SQR) = 1

Problem 1.3: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 activate(nu95u95first(X1,X2)) -> first(activate(X1),activate(X2))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95terms(X)) -> terms(activate(X))
 activate(X) -> X
 add(s(X),Y) -> s(add(X,Y))
 add(num0,X) -> X
 dbl(s(X)) -> s(s(dbl(X)))
 dbl(num0) -> num0
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 s(X) -> nu95u95s(X)
 sqr(s(X)) -> s(add(sqr(X),dbl(X)))
 sqr(num0) -> num0
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(nu95u95s(N)))
 terms(X) -> nu95u95terms(X)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.4: 

Reduction Pair Processor:
-> Pairs:
 ACTIVATE(nu95u95first(X1,X2)) -> ACTIVATE(X1)
 ACTIVATE(nu95u95first(X1,X2)) -> ACTIVATE(X2)
 ACTIVATE(nu95u95first(X1,X2)) -> FIRST(activate(X1),activate(X2))
 ACTIVATE(nu95u95s(X)) -> ACTIVATE(X)
 ACTIVATE(nu95u95terms(X)) -> ACTIVATE(X)
 FIRST(s(X),cons(Y,Z)) -> ACTIVATE(Z)
-> Rules:
 activate(nu95u95first(X1,X2)) -> first(activate(X1),activate(X2))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95terms(X)) -> terms(activate(X))
 activate(X) -> X
 add(s(X),Y) -> s(add(X,Y))
 add(num0,X) -> X
 dbl(s(X)) -> s(s(dbl(X)))
 dbl(num0) -> num0
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 s(X) -> nu95u95s(X)
 sqr(s(X)) -> s(add(sqr(X),dbl(X)))
 sqr(num0) -> num0
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(nu95u95s(N)))
 terms(X) -> nu95u95terms(X)
-> Usable rules:
 activate(nu95u95first(X1,X2)) -> first(activate(X1),activate(X2))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95terms(X)) -> terms(activate(X))
 activate(X) -> X
 add(s(X),Y) -> s(add(X,Y))
 add(num0,X) -> X
 dbl(s(X)) -> s(s(dbl(X)))
 dbl(num0) -> num0
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 s(X) -> nu95u95s(X)
 sqr(s(X)) -> s(add(sqr(X),dbl(X)))
 sqr(num0) -> num0
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(nu95u95s(N)))
 terms(X) -> nu95u95terms(X)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[activate](X) = X
[add](X1,X2) = 2.X2 + 1
[dbl](X) = 0
[first](X1,X2) = 2.X1 + X2 + 2
[s](X) = X
[sqr](X) = 2
[terms](X) = 2.X + 2
[num0] = 0
[cons](X1,X2) = X2
[fSNonEmpty] = 0
[nu95u95first](X1,X2) = 2.X1 + X2 + 2
[nu95u95s](X) = X
[nu95u95terms](X) = 2.X + 2
[nil] = 2
[recip](X) = 0
[ACTIVATE](X) = 2.X + 2
[ADD](X1,X2) = 0
[DBL](X) = 0
[FIRST](X1,X2) = X1 + 2.X2 + 2
[S](X) = 0
[SQR](X) = 0
[TERMS](X) = 0

Problem 1.4: 

SCC Processor:
-> Pairs:
 ACTIVATE(nu95u95first(X1,X2)) -> ACTIVATE(X2)
 ACTIVATE(nu95u95first(X1,X2)) -> FIRST(activate(X1),activate(X2))
 ACTIVATE(nu95u95s(X)) -> ACTIVATE(X)
 ACTIVATE(nu95u95terms(X)) -> ACTIVATE(X)
 FIRST(s(X),cons(Y,Z)) -> ACTIVATE(Z)
-> Rules:
 activate(nu95u95first(X1,X2)) -> first(activate(X1),activate(X2))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95terms(X)) -> terms(activate(X))
 activate(X) -> X
 add(s(X),Y) -> s(add(X,Y))
 add(num0,X) -> X
 dbl(s(X)) -> s(s(dbl(X)))
 dbl(num0) -> num0
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 s(X) -> nu95u95s(X)
 sqr(s(X)) -> s(add(sqr(X),dbl(X)))
 sqr(num0) -> num0
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(nu95u95s(N)))
 terms(X) -> nu95u95terms(X)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVATE(nu95u95first(X1,X2)) -> ACTIVATE(X2)
 ACTIVATE(nu95u95first(X1,X2)) -> FIRST(activate(X1),activate(X2))
 ACTIVATE(nu95u95s(X)) -> ACTIVATE(X)
 ACTIVATE(nu95u95terms(X)) -> ACTIVATE(X)
 FIRST(s(X),cons(Y,Z)) -> ACTIVATE(Z)
->->-> Rules:
 activate(nu95u95first(X1,X2)) -> first(activate(X1),activate(X2))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95terms(X)) -> terms(activate(X))
 activate(X) -> X
 add(s(X),Y) -> s(add(X,Y))
 add(num0,X) -> X
 dbl(s(X)) -> s(s(dbl(X)))
 dbl(num0) -> num0
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 s(X) -> nu95u95s(X)
 sqr(s(X)) -> s(add(sqr(X),dbl(X)))
 sqr(num0) -> num0
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(nu95u95s(N)))
 terms(X) -> nu95u95terms(X)

Problem 1.4: 

Reduction Pair Processor:
-> Pairs:
 ACTIVATE(nu95u95first(X1,X2)) -> ACTIVATE(X2)
 ACTIVATE(nu95u95first(X1,X2)) -> FIRST(activate(X1),activate(X2))
 ACTIVATE(nu95u95s(X)) -> ACTIVATE(X)
 ACTIVATE(nu95u95terms(X)) -> ACTIVATE(X)
 FIRST(s(X),cons(Y,Z)) -> ACTIVATE(Z)
-> Rules:
 activate(nu95u95first(X1,X2)) -> first(activate(X1),activate(X2))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95terms(X)) -> terms(activate(X))
 activate(X) -> X
 add(s(X),Y) -> s(add(X,Y))
 add(num0,X) -> X
 dbl(s(X)) -> s(s(dbl(X)))
 dbl(num0) -> num0
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 s(X) -> nu95u95s(X)
 sqr(s(X)) -> s(add(sqr(X),dbl(X)))
 sqr(num0) -> num0
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(nu95u95s(N)))
 terms(X) -> nu95u95terms(X)
-> Usable rules:
 activate(nu95u95first(X1,X2)) -> first(activate(X1),activate(X2))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95terms(X)) -> terms(activate(X))
 activate(X) -> X
 add(s(X),Y) -> s(add(X,Y))
 add(num0,X) -> X
 dbl(s(X)) -> s(s(dbl(X)))
 dbl(num0) -> num0
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 s(X) -> nu95u95s(X)
 sqr(s(X)) -> s(add(sqr(X),dbl(X)))
 sqr(num0) -> num0
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(nu95u95s(N)))
 terms(X) -> nu95u95terms(X)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[activate](X) = X
[add](X1,X2) = 2.X2
[dbl](X) = X
[first](X1,X2) = 2.X2 + 2
[s](X) = X
[sqr](X) = 2.X
[terms](X) = 2.X + 2
[num0] = 2
[cons](X1,X2) = X2
[fSNonEmpty] = 0
[nu95u95first](X1,X2) = 2.X2 + 2
[nu95u95s](X) = X
[nu95u95terms](X) = 2.X + 2
[nil] = 2
[recip](X) = 2
[ACTIVATE](X) = 2.X + 2
[ADD](X1,X2) = 0
[DBL](X) = 0
[FIRST](X1,X2) = 2.X2 + 2
[S](X) = 0
[SQR](X) = 0
[TERMS](X) = 0

Problem 1.4: 

SCC Processor:
-> Pairs:
 ACTIVATE(nu95u95first(X1,X2)) -> FIRST(activate(X1),activate(X2))
 ACTIVATE(nu95u95s(X)) -> ACTIVATE(X)
 ACTIVATE(nu95u95terms(X)) -> ACTIVATE(X)
 FIRST(s(X),cons(Y,Z)) -> ACTIVATE(Z)
-> Rules:
 activate(nu95u95first(X1,X2)) -> first(activate(X1),activate(X2))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95terms(X)) -> terms(activate(X))
 activate(X) -> X
 add(s(X),Y) -> s(add(X,Y))
 add(num0,X) -> X
 dbl(s(X)) -> s(s(dbl(X)))
 dbl(num0) -> num0
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 s(X) -> nu95u95s(X)
 sqr(s(X)) -> s(add(sqr(X),dbl(X)))
 sqr(num0) -> num0
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(nu95u95s(N)))
 terms(X) -> nu95u95terms(X)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVATE(nu95u95first(X1,X2)) -> FIRST(activate(X1),activate(X2))
 ACTIVATE(nu95u95s(X)) -> ACTIVATE(X)
 ACTIVATE(nu95u95terms(X)) -> ACTIVATE(X)
 FIRST(s(X),cons(Y,Z)) -> ACTIVATE(Z)
->->-> Rules:
 activate(nu95u95first(X1,X2)) -> first(activate(X1),activate(X2))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95terms(X)) -> terms(activate(X))
 activate(X) -> X
 add(s(X),Y) -> s(add(X,Y))
 add(num0,X) -> X
 dbl(s(X)) -> s(s(dbl(X)))
 dbl(num0) -> num0
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 s(X) -> nu95u95s(X)
 sqr(s(X)) -> s(add(sqr(X),dbl(X)))
 sqr(num0) -> num0
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(nu95u95s(N)))
 terms(X) -> nu95u95terms(X)

Problem 1.4: 

Reduction Pair Processor:
-> Pairs:
 ACTIVATE(nu95u95first(X1,X2)) -> FIRST(activate(X1),activate(X2))
 ACTIVATE(nu95u95s(X)) -> ACTIVATE(X)
 ACTIVATE(nu95u95terms(X)) -> ACTIVATE(X)
 FIRST(s(X),cons(Y,Z)) -> ACTIVATE(Z)
-> Rules:
 activate(nu95u95first(X1,X2)) -> first(activate(X1),activate(X2))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95terms(X)) -> terms(activate(X))
 activate(X) -> X
 add(s(X),Y) -> s(add(X,Y))
 add(num0,X) -> X
 dbl(s(X)) -> s(s(dbl(X)))
 dbl(num0) -> num0
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 s(X) -> nu95u95s(X)
 sqr(s(X)) -> s(add(sqr(X),dbl(X)))
 sqr(num0) -> num0
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(nu95u95s(N)))
 terms(X) -> nu95u95terms(X)
-> Usable rules:
 activate(nu95u95first(X1,X2)) -> first(activate(X1),activate(X2))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95terms(X)) -> terms(activate(X))
 activate(X) -> X
 add(s(X),Y) -> s(add(X,Y))
 add(num0,X) -> X
 dbl(s(X)) -> s(s(dbl(X)))
 dbl(num0) -> num0
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 s(X) -> nu95u95s(X)
 sqr(s(X)) -> s(add(sqr(X),dbl(X)))
 sqr(num0) -> num0
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(nu95u95s(N)))
 terms(X) -> nu95u95terms(X)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[activate](X) = X
[add](X1,X2) = X2
[dbl](X) = 2.X
[first](X1,X2) = 2.X1 + 2.X2 + 2
[s](X) = X
[sqr](X) = 2.X
[terms](X) = 2.X + 1
[num0] = 1
[cons](X1,X2) = X2
[fSNonEmpty] = 0
[nu95u95first](X1,X2) = 2.X1 + 2.X2 + 2
[nu95u95s](X) = X
[nu95u95terms](X) = 2.X + 1
[nil] = 2
[recip](X) = X + 2
[ACTIVATE](X) = 2.X + 1
[ADD](X1,X2) = 0
[DBL](X) = 0
[FIRST](X1,X2) = 2.X2 + 2
[S](X) = 0
[SQR](X) = 0
[TERMS](X) = 0

Problem 1.4: 

SCC Processor:
-> Pairs:
 ACTIVATE(nu95u95s(X)) -> ACTIVATE(X)
 ACTIVATE(nu95u95terms(X)) -> ACTIVATE(X)
 FIRST(s(X),cons(Y,Z)) -> ACTIVATE(Z)
-> Rules:
 activate(nu95u95first(X1,X2)) -> first(activate(X1),activate(X2))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95terms(X)) -> terms(activate(X))
 activate(X) -> X
 add(s(X),Y) -> s(add(X,Y))
 add(num0,X) -> X
 dbl(s(X)) -> s(s(dbl(X)))
 dbl(num0) -> num0
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 s(X) -> nu95u95s(X)
 sqr(s(X)) -> s(add(sqr(X),dbl(X)))
 sqr(num0) -> num0
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(nu95u95s(N)))
 terms(X) -> nu95u95terms(X)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVATE(nu95u95s(X)) -> ACTIVATE(X)
 ACTIVATE(nu95u95terms(X)) -> ACTIVATE(X)
->->-> Rules:
 activate(nu95u95first(X1,X2)) -> first(activate(X1),activate(X2))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95terms(X)) -> terms(activate(X))
 activate(X) -> X
 add(s(X),Y) -> s(add(X,Y))
 add(num0,X) -> X
 dbl(s(X)) -> s(s(dbl(X)))
 dbl(num0) -> num0
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 s(X) -> nu95u95s(X)
 sqr(s(X)) -> s(add(sqr(X),dbl(X)))
 sqr(num0) -> num0
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(nu95u95s(N)))
 terms(X) -> nu95u95terms(X)

Problem 1.4: 

Subterm Processor:
-> Pairs:
 ACTIVATE(nu95u95s(X)) -> ACTIVATE(X)
 ACTIVATE(nu95u95terms(X)) -> ACTIVATE(X)
-> Rules:
 activate(nu95u95first(X1,X2)) -> first(activate(X1),activate(X2))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95terms(X)) -> terms(activate(X))
 activate(X) -> X
 add(s(X),Y) -> s(add(X,Y))
 add(num0,X) -> X
 dbl(s(X)) -> s(s(dbl(X)))
 dbl(num0) -> num0
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 s(X) -> nu95u95s(X)
 sqr(s(X)) -> s(add(sqr(X),dbl(X)))
 sqr(num0) -> num0
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(nu95u95s(N)))
 terms(X) -> nu95u95terms(X)
->Projection:
 pi(ACTIVATE) = 1

Problem 1.4: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 activate(nu95u95first(X1,X2)) -> first(activate(X1),activate(X2))
 activate(nu95u95s(X)) -> s(activate(X))
 activate(nu95u95terms(X)) -> terms(activate(X))
 activate(X) -> X
 add(s(X),Y) -> s(add(X,Y))
 add(num0,X) -> X
 dbl(s(X)) -> s(s(dbl(X)))
 dbl(num0) -> num0
 first(s(X),cons(Y,Z)) -> cons(Y,nu95u95first(X,activate(Z)))
 first(num0,X) -> nil
 first(X1,X2) -> nu95u95first(X1,X2)
 s(X) -> nu95u95s(X)
 sqr(s(X)) -> s(add(sqr(X),dbl(X)))
 sqr(num0) -> num0
 terms(N) -> cons(recip(sqr(N)),nu95u95terms(nu95u95s(N)))
 terms(X) -> nu95u95terms(X)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
