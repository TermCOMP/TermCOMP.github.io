YES

Problem 1: 

(VAR vu95NonEmpty x y z)
(RULES
div(div(x,y),z) -> div(x,times(y,z))
div(num0,y) -> num0
div(x,y) -> quot(x,y,y)
divides(y,x) -> eq(x,times(div(x,y),y))
eq(num0,num0) -> ftrue
eq(num0,s(y)) -> ffalse
eq(s(x),num0) -> ffalse
eq(s(x),s(y)) -> eq(x,y)
if(ffalse,x,y) -> pr(x,y)
if(ftrue,x,y) -> ffalse
p(s(x)) -> x
plus(num0,y) -> y
plus(s(x),y) -> s(plus(p(s(x)),y))
plus(s(x),y) -> s(plus(x,y))
plus(x,num0) -> x
plus(x,s(y)) -> s(plus(x,p(s(y))))
pr(x,s(num0)) -> ftrue
pr(x,s(s(y))) -> if(divides(s(s(y)),x),x,s(y))
prime(s(s(x))) -> pr(s(s(x)),s(x))
quot(num0,s(y),z) -> num0
quot(s(x),s(y),z) -> quot(x,y,z)
quot(x,num0,s(z)) -> s(div(x,s(z)))
times(num0,y) -> num0
times(s(num0),y) -> y
times(s(x),y) -> plus(y,times(x,y))
)


Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 DIV(div(x,y),z) -> DIV(x,times(y,z))
 DIV(div(x,y),z) -> TIMES(y,z)
 DIV(x,y) -> QUOT(x,y,y)
 DIVIDES(y,x) -> DIV(x,y)
 DIVIDES(y,x) -> EQ(x,times(div(x,y),y))
 DIVIDES(y,x) -> TIMES(div(x,y),y)
 EQ(s(x),s(y)) -> EQ(x,y)
 IF(ffalse,x,y) -> PR(x,y)
 PLUS(s(x),y) -> P(s(x))
 PLUS(s(x),y) -> PLUS(p(s(x)),y)
 PLUS(s(x),y) -> PLUS(x,y)
 PLUS(x,s(y)) -> P(s(y))
 PLUS(x,s(y)) -> PLUS(x,p(s(y)))
 PR(x,s(s(y))) -> DIVIDES(s(s(y)),x)
 PR(x,s(s(y))) -> IF(divides(s(s(y)),x),x,s(y))
 PRIME(s(s(x))) -> PR(s(s(x)),s(x))
 QUOT(s(x),s(y),z) -> QUOT(x,y,z)
 QUOT(x,num0,s(z)) -> DIV(x,s(z))
 TIMES(s(x),y) -> PLUS(y,times(x,y))
 TIMES(s(x),y) -> TIMES(x,y)
-> Rules:
 div(div(x,y),z) -> div(x,times(y,z))
 div(num0,y) -> num0
 div(x,y) -> quot(x,y,y)
 divides(y,x) -> eq(x,times(div(x,y),y))
 eq(num0,num0) -> ftrue
 eq(num0,s(y)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> pr(x,y)
 if(ftrue,x,y) -> ffalse
 p(s(x)) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(p(s(x)),y))
 plus(s(x),y) -> s(plus(x,y))
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,p(s(y))))
 pr(x,s(num0)) -> ftrue
 pr(x,s(s(y))) -> if(divides(s(s(y)),x),x,s(y))
 prime(s(s(x))) -> pr(s(s(x)),s(x))
 quot(num0,s(y),z) -> num0
 quot(s(x),s(y),z) -> quot(x,y,z)
 quot(x,num0,s(z)) -> s(div(x,s(z)))
 times(num0,y) -> num0
 times(s(num0),y) -> y
 times(s(x),y) -> plus(y,times(x,y))

Problem 1: 

SCC Processor:
-> Pairs:
 DIV(div(x,y),z) -> DIV(x,times(y,z))
 DIV(div(x,y),z) -> TIMES(y,z)
 DIV(x,y) -> QUOT(x,y,y)
 DIVIDES(y,x) -> DIV(x,y)
 DIVIDES(y,x) -> EQ(x,times(div(x,y),y))
 DIVIDES(y,x) -> TIMES(div(x,y),y)
 EQ(s(x),s(y)) -> EQ(x,y)
 IF(ffalse,x,y) -> PR(x,y)
 PLUS(s(x),y) -> P(s(x))
 PLUS(s(x),y) -> PLUS(p(s(x)),y)
 PLUS(s(x),y) -> PLUS(x,y)
 PLUS(x,s(y)) -> P(s(y))
 PLUS(x,s(y)) -> PLUS(x,p(s(y)))
 PR(x,s(s(y))) -> DIVIDES(s(s(y)),x)
 PR(x,s(s(y))) -> IF(divides(s(s(y)),x),x,s(y))
 PRIME(s(s(x))) -> PR(s(s(x)),s(x))
 QUOT(s(x),s(y),z) -> QUOT(x,y,z)
 QUOT(x,num0,s(z)) -> DIV(x,s(z))
 TIMES(s(x),y) -> PLUS(y,times(x,y))
 TIMES(s(x),y) -> TIMES(x,y)
-> Rules:
 div(div(x,y),z) -> div(x,times(y,z))
 div(num0,y) -> num0
 div(x,y) -> quot(x,y,y)
 divides(y,x) -> eq(x,times(div(x,y),y))
 eq(num0,num0) -> ftrue
 eq(num0,s(y)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> pr(x,y)
 if(ftrue,x,y) -> ffalse
 p(s(x)) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(p(s(x)),y))
 plus(s(x),y) -> s(plus(x,y))
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,p(s(y))))
 pr(x,s(num0)) -> ftrue
 pr(x,s(s(y))) -> if(divides(s(s(y)),x),x,s(y))
 prime(s(s(x))) -> pr(s(s(x)),s(x))
 quot(num0,s(y),z) -> num0
 quot(s(x),s(y),z) -> quot(x,y,z)
 quot(x,num0,s(z)) -> s(div(x,s(z)))
 times(num0,y) -> num0
 times(s(num0),y) -> y
 times(s(x),y) -> plus(y,times(x,y))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 PLUS(s(x),y) -> PLUS(p(s(x)),y)
 PLUS(s(x),y) -> PLUS(x,y)
 PLUS(x,s(y)) -> PLUS(x,p(s(y)))
->->-> Rules:
 div(div(x,y),z) -> div(x,times(y,z))
 div(num0,y) -> num0
 div(x,y) -> quot(x,y,y)
 divides(y,x) -> eq(x,times(div(x,y),y))
 eq(num0,num0) -> ftrue
 eq(num0,s(y)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> pr(x,y)
 if(ftrue,x,y) -> ffalse
 p(s(x)) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(p(s(x)),y))
 plus(s(x),y) -> s(plus(x,y))
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,p(s(y))))
 pr(x,s(num0)) -> ftrue
 pr(x,s(s(y))) -> if(divides(s(s(y)),x),x,s(y))
 prime(s(s(x))) -> pr(s(s(x)),s(x))
 quot(num0,s(y),z) -> num0
 quot(s(x),s(y),z) -> quot(x,y,z)
 quot(x,num0,s(z)) -> s(div(x,s(z)))
 times(num0,y) -> num0
 times(s(num0),y) -> y
 times(s(x),y) -> plus(y,times(x,y))
->->Cycle:
->->-> Pairs:
 TIMES(s(x),y) -> TIMES(x,y)
->->-> Rules:
 div(div(x,y),z) -> div(x,times(y,z))
 div(num0,y) -> num0
 div(x,y) -> quot(x,y,y)
 divides(y,x) -> eq(x,times(div(x,y),y))
 eq(num0,num0) -> ftrue
 eq(num0,s(y)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> pr(x,y)
 if(ftrue,x,y) -> ffalse
 p(s(x)) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(p(s(x)),y))
 plus(s(x),y) -> s(plus(x,y))
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,p(s(y))))
 pr(x,s(num0)) -> ftrue
 pr(x,s(s(y))) -> if(divides(s(s(y)),x),x,s(y))
 prime(s(s(x))) -> pr(s(s(x)),s(x))
 quot(num0,s(y),z) -> num0
 quot(s(x),s(y),z) -> quot(x,y,z)
 quot(x,num0,s(z)) -> s(div(x,s(z)))
 times(num0,y) -> num0
 times(s(num0),y) -> y
 times(s(x),y) -> plus(y,times(x,y))
->->Cycle:
->->-> Pairs:
 EQ(s(x),s(y)) -> EQ(x,y)
->->-> Rules:
 div(div(x,y),z) -> div(x,times(y,z))
 div(num0,y) -> num0
 div(x,y) -> quot(x,y,y)
 divides(y,x) -> eq(x,times(div(x,y),y))
 eq(num0,num0) -> ftrue
 eq(num0,s(y)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> pr(x,y)
 if(ftrue,x,y) -> ffalse
 p(s(x)) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(p(s(x)),y))
 plus(s(x),y) -> s(plus(x,y))
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,p(s(y))))
 pr(x,s(num0)) -> ftrue
 pr(x,s(s(y))) -> if(divides(s(s(y)),x),x,s(y))
 prime(s(s(x))) -> pr(s(s(x)),s(x))
 quot(num0,s(y),z) -> num0
 quot(s(x),s(y),z) -> quot(x,y,z)
 quot(x,num0,s(z)) -> s(div(x,s(z)))
 times(num0,y) -> num0
 times(s(num0),y) -> y
 times(s(x),y) -> plus(y,times(x,y))
->->Cycle:
->->-> Pairs:
 DIV(div(x,y),z) -> DIV(x,times(y,z))
 DIV(x,y) -> QUOT(x,y,y)
 QUOT(s(x),s(y),z) -> QUOT(x,y,z)
 QUOT(x,num0,s(z)) -> DIV(x,s(z))
->->-> Rules:
 div(div(x,y),z) -> div(x,times(y,z))
 div(num0,y) -> num0
 div(x,y) -> quot(x,y,y)
 divides(y,x) -> eq(x,times(div(x,y),y))
 eq(num0,num0) -> ftrue
 eq(num0,s(y)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> pr(x,y)
 if(ftrue,x,y) -> ffalse
 p(s(x)) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(p(s(x)),y))
 plus(s(x),y) -> s(plus(x,y))
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,p(s(y))))
 pr(x,s(num0)) -> ftrue
 pr(x,s(s(y))) -> if(divides(s(s(y)),x),x,s(y))
 prime(s(s(x))) -> pr(s(s(x)),s(x))
 quot(num0,s(y),z) -> num0
 quot(s(x),s(y),z) -> quot(x,y,z)
 quot(x,num0,s(z)) -> s(div(x,s(z)))
 times(num0,y) -> num0
 times(s(num0),y) -> y
 times(s(x),y) -> plus(y,times(x,y))
->->Cycle:
->->-> Pairs:
 IF(ffalse,x,y) -> PR(x,y)
 PR(x,s(s(y))) -> IF(divides(s(s(y)),x),x,s(y))
->->-> Rules:
 div(div(x,y),z) -> div(x,times(y,z))
 div(num0,y) -> num0
 div(x,y) -> quot(x,y,y)
 divides(y,x) -> eq(x,times(div(x,y),y))
 eq(num0,num0) -> ftrue
 eq(num0,s(y)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> pr(x,y)
 if(ftrue,x,y) -> ffalse
 p(s(x)) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(p(s(x)),y))
 plus(s(x),y) -> s(plus(x,y))
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,p(s(y))))
 pr(x,s(num0)) -> ftrue
 pr(x,s(s(y))) -> if(divides(s(s(y)),x),x,s(y))
 prime(s(s(x))) -> pr(s(s(x)),s(x))
 quot(num0,s(y),z) -> num0
 quot(s(x),s(y),z) -> quot(x,y,z)
 quot(x,num0,s(z)) -> s(div(x,s(z)))
 times(num0,y) -> num0
 times(s(num0),y) -> y
 times(s(x),y) -> plus(y,times(x,y))


The problem is decomposed in 5 subproblems.

Problem 1.1: 

Reduction Pair Processor:
-> Pairs:
 PLUS(s(x),y) -> PLUS(p(s(x)),y)
 PLUS(s(x),y) -> PLUS(x,y)
 PLUS(x,s(y)) -> PLUS(x,p(s(y)))
-> Rules:
 div(div(x,y),z) -> div(x,times(y,z))
 div(num0,y) -> num0
 div(x,y) -> quot(x,y,y)
 divides(y,x) -> eq(x,times(div(x,y),y))
 eq(num0,num0) -> ftrue
 eq(num0,s(y)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> pr(x,y)
 if(ftrue,x,y) -> ffalse
 p(s(x)) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(p(s(x)),y))
 plus(s(x),y) -> s(plus(x,y))
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,p(s(y))))
 pr(x,s(num0)) -> ftrue
 pr(x,s(s(y))) -> if(divides(s(s(y)),x),x,s(y))
 prime(s(s(x))) -> pr(s(s(x)),s(x))
 quot(num0,s(y),z) -> num0
 quot(s(x),s(y),z) -> quot(x,y,z)
 quot(x,num0,s(z)) -> s(div(x,s(z)))
 times(num0,y) -> num0
 times(s(num0),y) -> y
 times(s(x),y) -> plus(y,times(x,y))
-> Usable rules:
 p(s(x)) -> x
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[div](X1,X2) = 0
[divides](X1,X2) = 0
[eq](X1,X2) = 0
[if](X1,X2,X3) = 0
[p](X) = X
[plus](X1,X2) = 0
[pr](X1,X2) = 0
[prime](X) = 0
[quot](X1,X2,X3) = 0
[times](X1,X2) = 0
[num0] = 0
[fSNonEmpty] = 0
[ffalse] = 0
[s](X) = 2.X + 1
[ftrue] = 0
[DIV](X1,X2) = 0
[DIVIDES](X1,X2) = 0
[EQ](X1,X2) = 0
[IF](X1,X2,X3) = 0
[P](X) = 0
[PLUS](X1,X2) = X1 + 2.X2
[PR](X1,X2) = 0
[PRIME](X) = 0
[QUOT](X1,X2,X3) = 0
[TIMES](X1,X2) = 0

Problem 1.1: 

SCC Processor:
-> Pairs:
 PLUS(s(x),y) -> PLUS(p(s(x)),y)
 PLUS(x,s(y)) -> PLUS(x,p(s(y)))
-> Rules:
 div(div(x,y),z) -> div(x,times(y,z))
 div(num0,y) -> num0
 div(x,y) -> quot(x,y,y)
 divides(y,x) -> eq(x,times(div(x,y),y))
 eq(num0,num0) -> ftrue
 eq(num0,s(y)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> pr(x,y)
 if(ftrue,x,y) -> ffalse
 p(s(x)) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(p(s(x)),y))
 plus(s(x),y) -> s(plus(x,y))
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,p(s(y))))
 pr(x,s(num0)) -> ftrue
 pr(x,s(s(y))) -> if(divides(s(s(y)),x),x,s(y))
 prime(s(s(x))) -> pr(s(s(x)),s(x))
 quot(num0,s(y),z) -> num0
 quot(s(x),s(y),z) -> quot(x,y,z)
 quot(x,num0,s(z)) -> s(div(x,s(z)))
 times(num0,y) -> num0
 times(s(num0),y) -> y
 times(s(x),y) -> plus(y,times(x,y))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 PLUS(s(x),y) -> PLUS(p(s(x)),y)
 PLUS(x,s(y)) -> PLUS(x,p(s(y)))
->->-> Rules:
 div(div(x,y),z) -> div(x,times(y,z))
 div(num0,y) -> num0
 div(x,y) -> quot(x,y,y)
 divides(y,x) -> eq(x,times(div(x,y),y))
 eq(num0,num0) -> ftrue
 eq(num0,s(y)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> pr(x,y)
 if(ftrue,x,y) -> ffalse
 p(s(x)) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(p(s(x)),y))
 plus(s(x),y) -> s(plus(x,y))
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,p(s(y))))
 pr(x,s(num0)) -> ftrue
 pr(x,s(s(y))) -> if(divides(s(s(y)),x),x,s(y))
 prime(s(s(x))) -> pr(s(s(x)),s(x))
 quot(num0,s(y),z) -> num0
 quot(s(x),s(y),z) -> quot(x,y,z)
 quot(x,num0,s(z)) -> s(div(x,s(z)))
 times(num0,y) -> num0
 times(s(num0),y) -> y
 times(s(x),y) -> plus(y,times(x,y))

Problem 1.1: 

Reduction Pair Processor:
-> Pairs:
 PLUS(s(x),y) -> PLUS(p(s(x)),y)
 PLUS(x,s(y)) -> PLUS(x,p(s(y)))
-> Rules:
 div(div(x,y),z) -> div(x,times(y,z))
 div(num0,y) -> num0
 div(x,y) -> quot(x,y,y)
 divides(y,x) -> eq(x,times(div(x,y),y))
 eq(num0,num0) -> ftrue
 eq(num0,s(y)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> pr(x,y)
 if(ftrue,x,y) -> ffalse
 p(s(x)) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(p(s(x)),y))
 plus(s(x),y) -> s(plus(x,y))
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,p(s(y))))
 pr(x,s(num0)) -> ftrue
 pr(x,s(s(y))) -> if(divides(s(s(y)),x),x,s(y))
 prime(s(s(x))) -> pr(s(s(x)),s(x))
 quot(num0,s(y),z) -> num0
 quot(s(x),s(y),z) -> quot(x,y,z)
 quot(x,num0,s(z)) -> s(div(x,s(z)))
 times(num0,y) -> num0
 times(s(num0),y) -> y
 times(s(x),y) -> plus(y,times(x,y))
-> Usable rules:
 p(s(x)) -> x
->Interpretation type:
 Linear
->Coefficients:
 All rationals
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[div](X1,X2) = 0
[divides](X1,X2) = 0
[eq](X1,X2) = 0
[if](X1,X2,X3) = 0
[p](X) = 1/2.X
[plus](X1,X2) = 0
[pr](X1,X2) = 0
[prime](X) = 0
[quot](X1,X2,X3) = 0
[times](X1,X2) = 0
[num0] = 0
[fSNonEmpty] = 0
[ffalse] = 0
[s](X) = 2.X + 1/2
[ftrue] = 0
[DIV](X1,X2) = 0
[DIVIDES](X1,X2) = 0
[EQ](X1,X2) = 0
[IF](X1,X2,X3) = 0
[P](X) = 0
[PLUS](X1,X2) = 2.X1
[PR](X1,X2) = 0
[PRIME](X) = 0
[QUOT](X1,X2,X3) = 0
[TIMES](X1,X2) = 0

Problem 1.1: 

SCC Processor:
-> Pairs:
 PLUS(x,s(y)) -> PLUS(x,p(s(y)))
-> Rules:
 div(div(x,y),z) -> div(x,times(y,z))
 div(num0,y) -> num0
 div(x,y) -> quot(x,y,y)
 divides(y,x) -> eq(x,times(div(x,y),y))
 eq(num0,num0) -> ftrue
 eq(num0,s(y)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> pr(x,y)
 if(ftrue,x,y) -> ffalse
 p(s(x)) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(p(s(x)),y))
 plus(s(x),y) -> s(plus(x,y))
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,p(s(y))))
 pr(x,s(num0)) -> ftrue
 pr(x,s(s(y))) -> if(divides(s(s(y)),x),x,s(y))
 prime(s(s(x))) -> pr(s(s(x)),s(x))
 quot(num0,s(y),z) -> num0
 quot(s(x),s(y),z) -> quot(x,y,z)
 quot(x,num0,s(z)) -> s(div(x,s(z)))
 times(num0,y) -> num0
 times(s(num0),y) -> y
 times(s(x),y) -> plus(y,times(x,y))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 PLUS(x,s(y)) -> PLUS(x,p(s(y)))
->->-> Rules:
 div(div(x,y),z) -> div(x,times(y,z))
 div(num0,y) -> num0
 div(x,y) -> quot(x,y,y)
 divides(y,x) -> eq(x,times(div(x,y),y))
 eq(num0,num0) -> ftrue
 eq(num0,s(y)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> pr(x,y)
 if(ftrue,x,y) -> ffalse
 p(s(x)) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(p(s(x)),y))
 plus(s(x),y) -> s(plus(x,y))
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,p(s(y))))
 pr(x,s(num0)) -> ftrue
 pr(x,s(s(y))) -> if(divides(s(s(y)),x),x,s(y))
 prime(s(s(x))) -> pr(s(s(x)),s(x))
 quot(num0,s(y),z) -> num0
 quot(s(x),s(y),z) -> quot(x,y,z)
 quot(x,num0,s(z)) -> s(div(x,s(z)))
 times(num0,y) -> num0
 times(s(num0),y) -> y
 times(s(x),y) -> plus(y,times(x,y))

Problem 1.1: 

Reduction Pair Processor:
-> Pairs:
 PLUS(x,s(y)) -> PLUS(x,p(s(y)))
-> Rules:
 div(div(x,y),z) -> div(x,times(y,z))
 div(num0,y) -> num0
 div(x,y) -> quot(x,y,y)
 divides(y,x) -> eq(x,times(div(x,y),y))
 eq(num0,num0) -> ftrue
 eq(num0,s(y)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> pr(x,y)
 if(ftrue,x,y) -> ffalse
 p(s(x)) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(p(s(x)),y))
 plus(s(x),y) -> s(plus(x,y))
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,p(s(y))))
 pr(x,s(num0)) -> ftrue
 pr(x,s(s(y))) -> if(divides(s(s(y)),x),x,s(y))
 prime(s(s(x))) -> pr(s(s(x)),s(x))
 quot(num0,s(y),z) -> num0
 quot(s(x),s(y),z) -> quot(x,y,z)
 quot(x,num0,s(z)) -> s(div(x,s(z)))
 times(num0,y) -> num0
 times(s(num0),y) -> y
 times(s(x),y) -> plus(y,times(x,y))
-> Usable rules:
 p(s(x)) -> x
->Interpretation type:
 Linear
->Coefficients:
 All rationals
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[div](X1,X2) = 0
[divides](X1,X2) = 0
[eq](X1,X2) = 0
[if](X1,X2,X3) = 0
[p](X) = 1/2.X
[plus](X1,X2) = 0
[pr](X1,X2) = 0
[prime](X) = 0
[quot](X1,X2,X3) = 0
[times](X1,X2) = 0
[num0] = 0
[fSNonEmpty] = 0
[ffalse] = 0
[s](X) = 2.X + 1/2
[ftrue] = 0
[DIV](X1,X2) = 0
[DIVIDES](X1,X2) = 0
[EQ](X1,X2) = 0
[IF](X1,X2,X3) = 0
[P](X) = 0
[PLUS](X1,X2) = 2.X2
[PR](X1,X2) = 0
[PRIME](X) = 0
[QUOT](X1,X2,X3) = 0
[TIMES](X1,X2) = 0

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 div(div(x,y),z) -> div(x,times(y,z))
 div(num0,y) -> num0
 div(x,y) -> quot(x,y,y)
 divides(y,x) -> eq(x,times(div(x,y),y))
 eq(num0,num0) -> ftrue
 eq(num0,s(y)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> pr(x,y)
 if(ftrue,x,y) -> ffalse
 p(s(x)) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(p(s(x)),y))
 plus(s(x),y) -> s(plus(x,y))
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,p(s(y))))
 pr(x,s(num0)) -> ftrue
 pr(x,s(s(y))) -> if(divides(s(s(y)),x),x,s(y))
 prime(s(s(x))) -> pr(s(s(x)),s(x))
 quot(num0,s(y),z) -> num0
 quot(s(x),s(y),z) -> quot(x,y,z)
 quot(x,num0,s(z)) -> s(div(x,s(z)))
 times(num0,y) -> num0
 times(s(num0),y) -> y
 times(s(x),y) -> plus(y,times(x,y))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Subterm Processor:
-> Pairs:
 TIMES(s(x),y) -> TIMES(x,y)
-> Rules:
 div(div(x,y),z) -> div(x,times(y,z))
 div(num0,y) -> num0
 div(x,y) -> quot(x,y,y)
 divides(y,x) -> eq(x,times(div(x,y),y))
 eq(num0,num0) -> ftrue
 eq(num0,s(y)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> pr(x,y)
 if(ftrue,x,y) -> ffalse
 p(s(x)) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(p(s(x)),y))
 plus(s(x),y) -> s(plus(x,y))
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,p(s(y))))
 pr(x,s(num0)) -> ftrue
 pr(x,s(s(y))) -> if(divides(s(s(y)),x),x,s(y))
 prime(s(s(x))) -> pr(s(s(x)),s(x))
 quot(num0,s(y),z) -> num0
 quot(s(x),s(y),z) -> quot(x,y,z)
 quot(x,num0,s(z)) -> s(div(x,s(z)))
 times(num0,y) -> num0
 times(s(num0),y) -> y
 times(s(x),y) -> plus(y,times(x,y))
->Projection:
 pi(TIMES) = 1

Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 div(div(x,y),z) -> div(x,times(y,z))
 div(num0,y) -> num0
 div(x,y) -> quot(x,y,y)
 divides(y,x) -> eq(x,times(div(x,y),y))
 eq(num0,num0) -> ftrue
 eq(num0,s(y)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> pr(x,y)
 if(ftrue,x,y) -> ffalse
 p(s(x)) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(p(s(x)),y))
 plus(s(x),y) -> s(plus(x,y))
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,p(s(y))))
 pr(x,s(num0)) -> ftrue
 pr(x,s(s(y))) -> if(divides(s(s(y)),x),x,s(y))
 prime(s(s(x))) -> pr(s(s(x)),s(x))
 quot(num0,s(y),z) -> num0
 quot(s(x),s(y),z) -> quot(x,y,z)
 quot(x,num0,s(z)) -> s(div(x,s(z)))
 times(num0,y) -> num0
 times(s(num0),y) -> y
 times(s(x),y) -> plus(y,times(x,y))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Subterm Processor:
-> Pairs:
 EQ(s(x),s(y)) -> EQ(x,y)
-> Rules:
 div(div(x,y),z) -> div(x,times(y,z))
 div(num0,y) -> num0
 div(x,y) -> quot(x,y,y)
 divides(y,x) -> eq(x,times(div(x,y),y))
 eq(num0,num0) -> ftrue
 eq(num0,s(y)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> pr(x,y)
 if(ftrue,x,y) -> ffalse
 p(s(x)) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(p(s(x)),y))
 plus(s(x),y) -> s(plus(x,y))
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,p(s(y))))
 pr(x,s(num0)) -> ftrue
 pr(x,s(s(y))) -> if(divides(s(s(y)),x),x,s(y))
 prime(s(s(x))) -> pr(s(s(x)),s(x))
 quot(num0,s(y),z) -> num0
 quot(s(x),s(y),z) -> quot(x,y,z)
 quot(x,num0,s(z)) -> s(div(x,s(z)))
 times(num0,y) -> num0
 times(s(num0),y) -> y
 times(s(x),y) -> plus(y,times(x,y))
->Projection:
 pi(EQ) = 1

Problem 1.3: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 div(div(x,y),z) -> div(x,times(y,z))
 div(num0,y) -> num0
 div(x,y) -> quot(x,y,y)
 divides(y,x) -> eq(x,times(div(x,y),y))
 eq(num0,num0) -> ftrue
 eq(num0,s(y)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> pr(x,y)
 if(ftrue,x,y) -> ffalse
 p(s(x)) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(p(s(x)),y))
 plus(s(x),y) -> s(plus(x,y))
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,p(s(y))))
 pr(x,s(num0)) -> ftrue
 pr(x,s(s(y))) -> if(divides(s(s(y)),x),x,s(y))
 prime(s(s(x))) -> pr(s(s(x)),s(x))
 quot(num0,s(y),z) -> num0
 quot(s(x),s(y),z) -> quot(x,y,z)
 quot(x,num0,s(z)) -> s(div(x,s(z)))
 times(num0,y) -> num0
 times(s(num0),y) -> y
 times(s(x),y) -> plus(y,times(x,y))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.4: 

Subterm Processor:
-> Pairs:
 DIV(div(x,y),z) -> DIV(x,times(y,z))
 DIV(x,y) -> QUOT(x,y,y)
 QUOT(s(x),s(y),z) -> QUOT(x,y,z)
 QUOT(x,num0,s(z)) -> DIV(x,s(z))
-> Rules:
 div(div(x,y),z) -> div(x,times(y,z))
 div(num0,y) -> num0
 div(x,y) -> quot(x,y,y)
 divides(y,x) -> eq(x,times(div(x,y),y))
 eq(num0,num0) -> ftrue
 eq(num0,s(y)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> pr(x,y)
 if(ftrue,x,y) -> ffalse
 p(s(x)) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(p(s(x)),y))
 plus(s(x),y) -> s(plus(x,y))
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,p(s(y))))
 pr(x,s(num0)) -> ftrue
 pr(x,s(s(y))) -> if(divides(s(s(y)),x),x,s(y))
 prime(s(s(x))) -> pr(s(s(x)),s(x))
 quot(num0,s(y),z) -> num0
 quot(s(x),s(y),z) -> quot(x,y,z)
 quot(x,num0,s(z)) -> s(div(x,s(z)))
 times(num0,y) -> num0
 times(s(num0),y) -> y
 times(s(x),y) -> plus(y,times(x,y))
->Projection:
 pi(DIV) = 1
 pi(QUOT) = 1

Problem 1.4: 

SCC Processor:
-> Pairs:
 DIV(x,y) -> QUOT(x,y,y)
 QUOT(x,num0,s(z)) -> DIV(x,s(z))
-> Rules:
 div(div(x,y),z) -> div(x,times(y,z))
 div(num0,y) -> num0
 div(x,y) -> quot(x,y,y)
 divides(y,x) -> eq(x,times(div(x,y),y))
 eq(num0,num0) -> ftrue
 eq(num0,s(y)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> pr(x,y)
 if(ftrue,x,y) -> ffalse
 p(s(x)) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(p(s(x)),y))
 plus(s(x),y) -> s(plus(x,y))
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,p(s(y))))
 pr(x,s(num0)) -> ftrue
 pr(x,s(s(y))) -> if(divides(s(s(y)),x),x,s(y))
 prime(s(s(x))) -> pr(s(s(x)),s(x))
 quot(num0,s(y),z) -> num0
 quot(s(x),s(y),z) -> quot(x,y,z)
 quot(x,num0,s(z)) -> s(div(x,s(z)))
 times(num0,y) -> num0
 times(s(num0),y) -> y
 times(s(x),y) -> plus(y,times(x,y))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 DIV(x,y) -> QUOT(x,y,y)
 QUOT(x,num0,s(z)) -> DIV(x,s(z))
->->-> Rules:
 div(div(x,y),z) -> div(x,times(y,z))
 div(num0,y) -> num0
 div(x,y) -> quot(x,y,y)
 divides(y,x) -> eq(x,times(div(x,y),y))
 eq(num0,num0) -> ftrue
 eq(num0,s(y)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> pr(x,y)
 if(ftrue,x,y) -> ffalse
 p(s(x)) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(p(s(x)),y))
 plus(s(x),y) -> s(plus(x,y))
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,p(s(y))))
 pr(x,s(num0)) -> ftrue
 pr(x,s(s(y))) -> if(divides(s(s(y)),x),x,s(y))
 prime(s(s(x))) -> pr(s(s(x)),s(x))
 quot(num0,s(y),z) -> num0
 quot(s(x),s(y),z) -> quot(x,y,z)
 quot(x,num0,s(z)) -> s(div(x,s(z)))
 times(num0,y) -> num0
 times(s(num0),y) -> y
 times(s(x),y) -> plus(y,times(x,y))

Problem 1.4: 

Reduction Pair Processor:
-> Pairs:
 DIV(x,y) -> QUOT(x,y,y)
 QUOT(x,num0,s(z)) -> DIV(x,s(z))
-> Rules:
 div(div(x,y),z) -> div(x,times(y,z))
 div(num0,y) -> num0
 div(x,y) -> quot(x,y,y)
 divides(y,x) -> eq(x,times(div(x,y),y))
 eq(num0,num0) -> ftrue
 eq(num0,s(y)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> pr(x,y)
 if(ftrue,x,y) -> ffalse
 p(s(x)) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(p(s(x)),y))
 plus(s(x),y) -> s(plus(x,y))
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,p(s(y))))
 pr(x,s(num0)) -> ftrue
 pr(x,s(s(y))) -> if(divides(s(s(y)),x),x,s(y))
 prime(s(s(x))) -> pr(s(s(x)),s(x))
 quot(num0,s(y),z) -> num0
 quot(s(x),s(y),z) -> quot(x,y,z)
 quot(x,num0,s(z)) -> s(div(x,s(z)))
 times(num0,y) -> num0
 times(s(num0),y) -> y
 times(s(x),y) -> plus(y,times(x,y))
-> Usable rules:
 Empty
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[div](X1,X2) = 0
[divides](X1,X2) = 0
[eq](X1,X2) = 0
[if](X1,X2,X3) = 0
[p](X) = 0
[plus](X1,X2) = 0
[pr](X1,X2) = 0
[prime](X) = 0
[quot](X1,X2,X3) = 0
[times](X1,X2) = 0
[num0] = 2
[fSNonEmpty] = 0
[ffalse] = 0
[s](X) = 0
[ftrue] = 0
[DIV](X1,X2) = 2.X1 + 2.X2 + 2
[DIVIDES](X1,X2) = 0
[EQ](X1,X2) = 0
[IF](X1,X2,X3) = 0
[P](X) = 0
[PLUS](X1,X2) = 0
[PR](X1,X2) = 0
[PRIME](X) = 0
[QUOT](X1,X2,X3) = 2.X1 + X2 + X3
[TIMES](X1,X2) = 0

Problem 1.4: 

SCC Processor:
-> Pairs:
 QUOT(x,num0,s(z)) -> DIV(x,s(z))
-> Rules:
 div(div(x,y),z) -> div(x,times(y,z))
 div(num0,y) -> num0
 div(x,y) -> quot(x,y,y)
 divides(y,x) -> eq(x,times(div(x,y),y))
 eq(num0,num0) -> ftrue
 eq(num0,s(y)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> pr(x,y)
 if(ftrue,x,y) -> ffalse
 p(s(x)) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(p(s(x)),y))
 plus(s(x),y) -> s(plus(x,y))
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,p(s(y))))
 pr(x,s(num0)) -> ftrue
 pr(x,s(s(y))) -> if(divides(s(s(y)),x),x,s(y))
 prime(s(s(x))) -> pr(s(s(x)),s(x))
 quot(num0,s(y),z) -> num0
 quot(s(x),s(y),z) -> quot(x,y,z)
 quot(x,num0,s(z)) -> s(div(x,s(z)))
 times(num0,y) -> num0
 times(s(num0),y) -> y
 times(s(x),y) -> plus(y,times(x,y))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.5: 

Subterm Processor:
-> Pairs:
 IF(ffalse,x,y) -> PR(x,y)
 PR(x,s(s(y))) -> IF(divides(s(s(y)),x),x,s(y))
-> Rules:
 div(div(x,y),z) -> div(x,times(y,z))
 div(num0,y) -> num0
 div(x,y) -> quot(x,y,y)
 divides(y,x) -> eq(x,times(div(x,y),y))
 eq(num0,num0) -> ftrue
 eq(num0,s(y)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> pr(x,y)
 if(ftrue,x,y) -> ffalse
 p(s(x)) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(p(s(x)),y))
 plus(s(x),y) -> s(plus(x,y))
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,p(s(y))))
 pr(x,s(num0)) -> ftrue
 pr(x,s(s(y))) -> if(divides(s(s(y)),x),x,s(y))
 prime(s(s(x))) -> pr(s(s(x)),s(x))
 quot(num0,s(y),z) -> num0
 quot(s(x),s(y),z) -> quot(x,y,z)
 quot(x,num0,s(z)) -> s(div(x,s(z)))
 times(num0,y) -> num0
 times(s(num0),y) -> y
 times(s(x),y) -> plus(y,times(x,y))
->Projection:
 pi(IF) = 3
 pi(PR) = 2

Problem 1.5: 

SCC Processor:
-> Pairs:
 IF(ffalse,x,y) -> PR(x,y)
-> Rules:
 div(div(x,y),z) -> div(x,times(y,z))
 div(num0,y) -> num0
 div(x,y) -> quot(x,y,y)
 divides(y,x) -> eq(x,times(div(x,y),y))
 eq(num0,num0) -> ftrue
 eq(num0,s(y)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 if(ffalse,x,y) -> pr(x,y)
 if(ftrue,x,y) -> ffalse
 p(s(x)) -> x
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(p(s(x)),y))
 plus(s(x),y) -> s(plus(x,y))
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,p(s(y))))
 pr(x,s(num0)) -> ftrue
 pr(x,s(s(y))) -> if(divides(s(s(y)),x),x,s(y))
 prime(s(s(x))) -> pr(s(s(x)),s(x))
 quot(num0,s(y),z) -> num0
 quot(s(x),s(y),z) -> quot(x,y,z)
 quot(x,num0,s(z)) -> s(div(x,s(z)))
 times(num0,y) -> num0
 times(s(num0),y) -> y
 times(s(x),y) -> plus(y,times(x,y))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
