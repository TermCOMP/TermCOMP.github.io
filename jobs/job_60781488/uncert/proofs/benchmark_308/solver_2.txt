YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/o9RbW.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) AAECC Innermost [EQUIVALENT, 0 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 0 ms]
(4) QDP
(5) DependencyGraphProof [EQUIVALENT, 0 ms]
(6) AND
    (7) QDP
        (8) UsableRulesProof [EQUIVALENT, 0 ms]
        (9) QDP
        (10) QReductionProof [EQUIVALENT, 0 ms]
        (11) QDP
        (12) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (13) YES
    (14) QDP
        (15) UsableRulesProof [EQUIVALENT, 0 ms]
        (16) QDP
        (17) QReductionProof [EQUIVALENT, 0 ms]
        (18) QDP
        (19) QDPOrderProof [EQUIVALENT, 19 ms]
        (20) QDP
        (21) DependencyGraphProof [EQUIVALENT, 0 ms]
        (22) QDP
        (23) QDPOrderProof [EQUIVALENT, 6 ms]
        (24) QDP
        (25) PisEmptyProof [EQUIVALENT, 0 ms]
        (26) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   cond1(true, x, y) -> cond2(gr(y, 0), x, y)
   cond2(true, x, y) -> cond2(gr(y, 0), x, p(y))
   cond2(false, x, y) -> cond1(gr(x, 0), p(x), y)
   gr(0, x) -> false
   gr(s(x), 0) -> true
   gr(s(x), s(y)) -> gr(x, y)
   p(0) -> 0
   p(s(x)) -> x

Q is empty.

----------------------------------------

(1) AAECC Innermost (EQUIVALENT)
We have applied [NOC,AAECCNOC] to switch to innermost. The TRS R 1 is 
   gr(0, x) -> false
   gr(s(x), 0) -> true
   gr(s(x), s(y)) -> gr(x, y)
   p(0) -> 0
   p(s(x)) -> x

The TRS R 2 is 
   cond1(true, x, y) -> cond2(gr(y, 0), x, y)
   cond2(true, x, y) -> cond2(gr(y, 0), x, p(y))
   cond2(false, x, y) -> cond1(gr(x, 0), p(x), y)

The signature Sigma is {cond1_3, cond2_3}
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   cond1(true, x, y) -> cond2(gr(y, 0), x, y)
   cond2(true, x, y) -> cond2(gr(y, 0), x, p(y))
   cond2(false, x, y) -> cond1(gr(x, 0), p(x), y)
   gr(0, x) -> false
   gr(s(x), 0) -> true
   gr(s(x), s(y)) -> gr(x, y)
   p(0) -> 0
   p(s(x)) -> x

The set Q consists of the following terms:

   cond1(true, x0, x1)
   cond2(true, x0, x1)
   cond2(false, x0, x1)
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))


----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND1(true, x, y) -> COND2(gr(y, 0), x, y)
   COND1(true, x, y) -> GR(y, 0)
   COND2(true, x, y) -> COND2(gr(y, 0), x, p(y))
   COND2(true, x, y) -> GR(y, 0)
   COND2(true, x, y) -> P(y)
   COND2(false, x, y) -> COND1(gr(x, 0), p(x), y)
   COND2(false, x, y) -> GR(x, 0)
   COND2(false, x, y) -> P(x)
   GR(s(x), s(y)) -> GR(x, y)

The TRS R consists of the following rules:

   cond1(true, x, y) -> cond2(gr(y, 0), x, y)
   cond2(true, x, y) -> cond2(gr(y, 0), x, p(y))
   cond2(false, x, y) -> cond1(gr(x, 0), p(x), y)
   gr(0, x) -> false
   gr(s(x), 0) -> true
   gr(s(x), s(y)) -> gr(x, y)
   p(0) -> 0
   p(s(x)) -> x

The set Q consists of the following terms:

   cond1(true, x0, x1)
   cond2(true, x0, x1)
   cond2(false, x0, x1)
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs with 5 less nodes.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   GR(s(x), s(y)) -> GR(x, y)

The TRS R consists of the following rules:

   cond1(true, x, y) -> cond2(gr(y, 0), x, y)
   cond2(true, x, y) -> cond2(gr(y, 0), x, p(y))
   cond2(false, x, y) -> cond1(gr(x, 0), p(x), y)
   gr(0, x) -> false
   gr(s(x), 0) -> true
   gr(s(x), s(y)) -> gr(x, y)
   p(0) -> 0
   p(s(x)) -> x

The set Q consists of the following terms:

   cond1(true, x0, x1)
   cond2(true, x0, x1)
   cond2(false, x0, x1)
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(8) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(9)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   GR(s(x), s(y)) -> GR(x, y)

R is empty.
The set Q consists of the following terms:

   cond1(true, x0, x1)
   cond2(true, x0, x1)
   cond2(false, x0, x1)
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(10) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   cond1(true, x0, x1)
   cond2(true, x0, x1)
   cond2(false, x0, x1)
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))


----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   GR(s(x), s(y)) -> GR(x, y)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(12) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*GR(s(x), s(y)) -> GR(x, y)
The graph contains the following edges 1 > 1, 2 > 2


----------------------------------------

(13)
YES

----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND2(true, x, y) -> COND2(gr(y, 0), x, p(y))
   COND2(false, x, y) -> COND1(gr(x, 0), p(x), y)
   COND1(true, x, y) -> COND2(gr(y, 0), x, y)

The TRS R consists of the following rules:

   cond1(true, x, y) -> cond2(gr(y, 0), x, y)
   cond2(true, x, y) -> cond2(gr(y, 0), x, p(y))
   cond2(false, x, y) -> cond1(gr(x, 0), p(x), y)
   gr(0, x) -> false
   gr(s(x), 0) -> true
   gr(s(x), s(y)) -> gr(x, y)
   p(0) -> 0
   p(s(x)) -> x

The set Q consists of the following terms:

   cond1(true, x0, x1)
   cond2(true, x0, x1)
   cond2(false, x0, x1)
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND2(true, x, y) -> COND2(gr(y, 0), x, p(y))
   COND2(false, x, y) -> COND1(gr(x, 0), p(x), y)
   COND1(true, x, y) -> COND2(gr(y, 0), x, y)

The TRS R consists of the following rules:

   gr(0, x) -> false
   gr(s(x), 0) -> true
   p(0) -> 0
   p(s(x)) -> x

The set Q consists of the following terms:

   cond1(true, x0, x1)
   cond2(true, x0, x1)
   cond2(false, x0, x1)
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   cond1(true, x0, x1)
   cond2(true, x0, x1)
   cond2(false, x0, x1)


----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND2(true, x, y) -> COND2(gr(y, 0), x, p(y))
   COND2(false, x, y) -> COND1(gr(x, 0), p(x), y)
   COND1(true, x, y) -> COND2(gr(y, 0), x, y)

The TRS R consists of the following rules:

   gr(0, x) -> false
   gr(s(x), 0) -> true
   p(0) -> 0
   p(s(x)) -> x

The set Q consists of the following terms:

   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   COND1(true, x, y) -> COND2(gr(y, 0), x, y)
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO,RATPOLO]:

   POL(0) = 0
   POL(COND1(x_1, x_2, x_3)) = [1/2]x_1 + x_2
   POL(COND2(x_1, x_2, x_3)) = [1/2]x_2
   POL(false) = 0
   POL(gr(x_1, x_2)) = [1/2]x_1
   POL(p(x_1)) = [1/4]x_1
   POL(s(x_1)) = [1/2] + [4]x_1
   POL(true) = [1/4]
The value of delta used in the strict ordering is 1/8.
The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   gr(0, x) -> false
   gr(s(x), 0) -> true
   p(0) -> 0
   p(s(x)) -> x


----------------------------------------

(20)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND2(true, x, y) -> COND2(gr(y, 0), x, p(y))
   COND2(false, x, y) -> COND1(gr(x, 0), p(x), y)

The TRS R consists of the following rules:

   gr(0, x) -> false
   gr(s(x), 0) -> true
   p(0) -> 0
   p(s(x)) -> x

The set Q consists of the following terms:

   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(21) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(22)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND2(true, x, y) -> COND2(gr(y, 0), x, p(y))

The TRS R consists of the following rules:

   gr(0, x) -> false
   gr(s(x), 0) -> true
   p(0) -> 0
   p(s(x)) -> x

The set Q consists of the following terms:

   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(23) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   COND2(true, x, y) -> COND2(gr(y, 0), x, p(y))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO,RATPOLO]:

   POL(0) = [1/2]
   POL(COND2(x_1, x_2, x_3)) = [4]x_1 + [2]x_3
   POL(false) = [1/4]
   POL(gr(x_1, x_2)) = [1] + [1/4]x_1 + [4]x_2
   POL(p(x_1)) = [1/4] + [1/2]x_1
   POL(s(x_1)) = [4] + [4]x_1
   POL(true) = [4]
The value of delta used in the strict ordering is 7/2.
The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   gr(0, x) -> false
   gr(s(x), 0) -> true
   p(0) -> 0
   p(s(x)) -> x


----------------------------------------

(24)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   gr(0, x) -> false
   gr(s(x), 0) -> true
   p(0) -> 0
   p(s(x)) -> x

The set Q consists of the following terms:

   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(25) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(26)
YES
