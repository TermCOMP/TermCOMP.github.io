YES

Problem 1: 

(VAR vu95NonEmpty x y)
(RULES
plus(num0,x) -> x
plus(s(x),y) -> s(plus(x,y))
plus(x,num0) -> x
plus(x,s(y)) -> s(plus(x,y))
times(x,num0) -> num0
times(x,s(y)) -> plus(times(x,y),x)
)


Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 PLUS(s(x),y) -> PLUS(x,y)
 PLUS(x,s(y)) -> PLUS(x,y)
 TIMES(x,s(y)) -> PLUS(times(x,y),x)
 TIMES(x,s(y)) -> TIMES(x,y)
-> Rules:
 plus(num0,x) -> x
 plus(s(x),y) -> s(plus(x,y))
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,y))
 times(x,num0) -> num0
 times(x,s(y)) -> plus(times(x,y),x)

Problem 1: 

SCC Processor:
-> Pairs:
 PLUS(s(x),y) -> PLUS(x,y)
 PLUS(x,s(y)) -> PLUS(x,y)
 TIMES(x,s(y)) -> PLUS(times(x,y),x)
 TIMES(x,s(y)) -> TIMES(x,y)
-> Rules:
 plus(num0,x) -> x
 plus(s(x),y) -> s(plus(x,y))
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,y))
 times(x,num0) -> num0
 times(x,s(y)) -> plus(times(x,y),x)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 PLUS(s(x),y) -> PLUS(x,y)
 PLUS(x,s(y)) -> PLUS(x,y)
->->-> Rules:
 plus(num0,x) -> x
 plus(s(x),y) -> s(plus(x,y))
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,y))
 times(x,num0) -> num0
 times(x,s(y)) -> plus(times(x,y),x)
->->Cycle:
->->-> Pairs:
 TIMES(x,s(y)) -> TIMES(x,y)
->->-> Rules:
 plus(num0,x) -> x
 plus(s(x),y) -> s(plus(x,y))
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,y))
 times(x,num0) -> num0
 times(x,s(y)) -> plus(times(x,y),x)


The problem is decomposed in 2 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 PLUS(s(x),y) -> PLUS(x,y)
 PLUS(x,s(y)) -> PLUS(x,y)
-> Rules:
 plus(num0,x) -> x
 plus(s(x),y) -> s(plus(x,y))
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,y))
 times(x,num0) -> num0
 times(x,s(y)) -> plus(times(x,y),x)
->Projection:
 pi(PLUS) = 1

Problem 1.1: 

SCC Processor:
-> Pairs:
 PLUS(x,s(y)) -> PLUS(x,y)
-> Rules:
 plus(num0,x) -> x
 plus(s(x),y) -> s(plus(x,y))
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,y))
 times(x,num0) -> num0
 times(x,s(y)) -> plus(times(x,y),x)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 PLUS(x,s(y)) -> PLUS(x,y)
->->-> Rules:
 plus(num0,x) -> x
 plus(s(x),y) -> s(plus(x,y))
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,y))
 times(x,num0) -> num0
 times(x,s(y)) -> plus(times(x,y),x)

Problem 1.1: 

Subterm Processor:
-> Pairs:
 PLUS(x,s(y)) -> PLUS(x,y)
-> Rules:
 plus(num0,x) -> x
 plus(s(x),y) -> s(plus(x,y))
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,y))
 times(x,num0) -> num0
 times(x,s(y)) -> plus(times(x,y),x)
->Projection:
 pi(PLUS) = 2

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 plus(num0,x) -> x
 plus(s(x),y) -> s(plus(x,y))
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,y))
 times(x,num0) -> num0
 times(x,s(y)) -> plus(times(x,y),x)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Subterm Processor:
-> Pairs:
 TIMES(x,s(y)) -> TIMES(x,y)
-> Rules:
 plus(num0,x) -> x
 plus(s(x),y) -> s(plus(x,y))
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,y))
 times(x,num0) -> num0
 times(x,s(y)) -> plus(times(x,y),x)
->Projection:
 pi(TIMES) = 2

Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 plus(num0,x) -> x
 plus(s(x),y) -> s(plus(x,y))
 plus(x,num0) -> x
 plus(x,s(y)) -> s(plus(x,y))
 times(x,num0) -> num0
 times(x,s(y)) -> plus(times(x,y),x)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
