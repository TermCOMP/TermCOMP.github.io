YES

Problem 1: 

(VAR vu95NonEmpty x y z)
(RULES
f(x,y,z) -> g(x,y,z)
g(num0,num1,x) -> f(x,x,x)
)


Problem 1: 

Innermost Equivalent Processor:
-> Rules:
 f(x,y,z) -> g(x,y,z)
 g(num0,num1,x) -> f(x,x,x)
-> The term rewriting system is non-overlaping or locally confluent overlay system. Therefore, innermost termination implies termination.
 

Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 F(x,y,z) -> G(x,y,z)
 G(num0,num1,x) -> F(x,x,x)
-> Rules:
 f(x,y,z) -> g(x,y,z)
 g(num0,num1,x) -> f(x,x,x)

Problem 1: 

SCC Processor:
-> Pairs:
 F(x,y,z) -> G(x,y,z)
 G(num0,num1,x) -> F(x,x,x)
-> Rules:
 f(x,y,z) -> g(x,y,z)
 g(num0,num1,x) -> f(x,x,x)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 F(x,y,z) -> G(x,y,z)
 G(num0,num1,x) -> F(x,x,x)
->->-> Rules:
 f(x,y,z) -> g(x,y,z)
 g(num0,num1,x) -> f(x,x,x)

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 F(x,y,z) -> G(x,y,z)
 G(num0,num1,x) -> F(x,x,x)
-> Rules:
 f(x,y,z) -> g(x,y,z)
 g(num0,num1,x) -> f(x,x,x)
-> Usable rules:
 Empty
->AGES Output:
 
Model Results

System:
mod InTheory is
sort S .
sort Bool .
sort PSharp .


op _->*_ : S S -> Bool [m = 2] .
op _->_ : S S -> Bool [m = 2] .
op f : S S S -> S .
op g : S S S -> S .
op num0 :  -> S .
op num1 :  -> S .
op fSNonEmpty :  -> S .
op _->P_ : PSharp PSharp -> Bool .
op F : S S S -> PSharp .
op G : S S S -> PSharp .
op gtrsim : PSharp PSharp -> Bool .
op succeq : PSharp PSharp -> Bool .
op sqsupset : PSharp PSharp -> Bool [m = 1 wellfounded] .

endm


Property:
gtrsim(x,y) /\ sqsupset(y,z) => sqsupset(x,z)
succeq(x,y) /\ sqsupset(y,z) => sqsupset(x,z)
gtrsim(x,y) /\ succeq(y,z) => gtrsim(x,z)
x ->R y => gtrsim(x,y)
_->P_(x,y) => gtrsim(x,y) \/ succeq(x,y) \/ sqsupset(x,y)
x1 ->R y1 => F(x1,x2,x3) ->R F(y1,x2,x3)
x2 ->R y2 => F(x1,x2,x3) ->R F(x1,y2,x3)
x3 ->R y3 => F(x1,x2,x3) ->R F(x1,x2,y3)
x1 ->R y1 => G(x1,x2,x3) ->R G(y1,x2,x3)
x2 ->R y2 => G(x1,x2,x3) ->R G(x1,y2,x3)
x3 ->R y3 => G(x1,x2,x3) ->R G(x1,x2,y3)
_->P_(G(num0,num1,x),F(x,x,x))
sqsupset(F(x,y,z),G(x,y,z))

Results:


Domains:
S: {-1 , 0}
PSharp: |N

Function Interpretations:
|[F(x_1_1:S,x_2_1:S,x_3_1:S)]| = 5 + x_1_1:S - x_2_1:S
|[G(x_1_1:S,x_2_1:S,x_3_1:S)]| = 4 + x_1_1:S - x_2_1:S
|[f(x_1_1:S,x_2_1:S,x_3_1:S)]| = 0
|[fSNonEmpty]| = - 1
|[g(x_1_1:S,x_2_1:S,x_3_1:S)]| = 0
|[num0]| = 0
|[num1]| = - 1

Predicate Interpretations:
 x_1_1:PSharp ->P x_2_1:PSharp <=> ((x_2_1:PSharp >= x_1_1:PSharp) /\ (x_1_1:PSharp >= x_2_1:PSharp))
 x_1_1:S -> x_2_1:S <=> ((x_1_1:S >= x_2_1:S) /\ (x_2_1:S >= 1 + x_1_1:S))
 x_1_1:PSharp -> x_2_1:PSharp <=> ((0 >= 1 + x_1_1:PSharp + x_2_1:PSharp) /\ (x_1_1:PSharp + x_2_1:PSharp >= 1))
gtrsim(x_1_1:PSharp,x_2_1:PSharp) <=> ((x_1_1:PSharp + x_2_1:PSharp >= 0) /\ (x_1_1:PSharp >= x_2_1:PSharp))
sqsupset(x_1_1:PSharp,x_2_1:PSharp) <=> (x_1_1:PSharp >= 1 + x_2_1:PSharp)
succeq(x_1_1:PSharp,x_2_1:PSharp) <=> ((0 >= 1 + x_2_1:PSharp) /\ (1 + x_1_1:PSharp >= 0))

Problem 1: 

SCC Processor:
-> Pairs:
 G(num0,num1,x) -> F(x,x,x)
-> Rules:
 f(x,y,z) -> g(x,y,z)
 g(num0,num1,x) -> f(x,x,x)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
