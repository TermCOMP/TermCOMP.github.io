NO
proof of /hpcwork/ff862203/termcomp25/benchmarks/3IVcL.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be disproven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 0 ms]
(2) QDP
(3) DependencyGraphProof [EQUIVALENT, 0 ms]
(4) QDP
(5) TransformationProof [EQUIVALENT, 0 ms]
(6) QDP
(7) NonTerminationLoopProof [COMPLETE, 0 ms]
(8) NO


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(x, f(a, y)) -> f(a, f(f(f(a, a), y), x))

Q is empty.

----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(x, f(a, y)) -> F(a, f(f(f(a, a), y), x))
   F(x, f(a, y)) -> F(f(f(a, a), y), x)
   F(x, f(a, y)) -> F(f(a, a), y)
   F(x, f(a, y)) -> F(a, a)

The TRS R consists of the following rules:

   f(x, f(a, y)) -> f(a, f(f(f(a, a), y), x))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(x, f(a, y)) -> F(f(f(a, a), y), x)
   F(x, f(a, y)) -> F(a, f(f(f(a, a), y), x))
   F(x, f(a, y)) -> F(f(a, a), y)

The TRS R consists of the following rules:

   f(x, f(a, y)) -> f(a, f(f(f(a, a), y), x))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(x, f(a, y)) -> F(a, f(f(f(a, a), y), x)) at position [1] we obtained the following new rules [LPAR04]:

   (F(f(a, x1), f(a, y1)) -> F(a, f(a, f(f(f(a, a), x1), f(f(a, a), y1)))),F(f(a, x1), f(a, y1)) -> F(a, f(a, f(f(f(a, a), x1), f(f(a, a), y1)))))
   (F(y0, f(a, f(a, x1))) -> F(a, f(f(a, f(f(f(a, a), x1), f(a, a))), y0)),F(y0, f(a, f(a, x1))) -> F(a, f(f(a, f(f(f(a, a), x1), f(a, a))), y0)))


----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(x, f(a, y)) -> F(f(f(a, a), y), x)
   F(x, f(a, y)) -> F(f(a, a), y)
   F(f(a, x1), f(a, y1)) -> F(a, f(a, f(f(f(a, a), x1), f(f(a, a), y1))))
   F(y0, f(a, f(a, x1))) -> F(a, f(f(a, f(f(f(a, a), x1), f(a, a))), y0))

The TRS R consists of the following rules:

   f(x, f(a, y)) -> f(a, f(f(f(a, a), y), x))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) NonTerminationLoopProof (COMPLETE)
We used the non-termination processor [FROCOS05] to show that the DP problem is infinite.
Found a loop by narrowing to the left:

s = F(x, f(x', f(x'', f(a, y)))) evaluates to  t =F(f(f(a, a), f(f(f(a, a), f(f(f(a, a), y), x'')), x')), x)

Thus s starts an infinite chain as s semiunifies with t with the following substitutions:
* Matcher: [y / y', y' / y'', y'' / y''', x'' / x''', y''' / a, x''' / f(f(a, a), f(f(f(a, a), y), x''))]
* Semiunifier: [x / f(f(a, y'''), f(x''', f(a, y'))), x' / f(a, y'')]

--------------------------------------------------------------------------------
Rewriting sequence

F(f(f(a, y'''), f(x''', f(a, y'))), f(f(a, y''), f(x'', f(a, y)))) -> F(f(f(a, y'''), f(x''', f(a, y'))), f(f(a, y''), f(a, f(f(f(a, a), y), x''))))
with rule f(x'''', f(a, y1)) -> f(a, f(f(f(a, a), y1), x'''')) at position [1,1] and matcher [x'''' / x'', y1 / y]

F(f(f(a, y'''), f(x''', f(a, y'))), f(f(a, y''), f(a, f(f(f(a, a), y), x'')))) -> F(f(f(a, y'''), f(x''', f(a, y'))), f(a, f(f(f(a, a), f(f(f(a, a), y), x'')), f(a, y''))))
with rule f(x', f(a, y'1)) -> f(a, f(f(f(a, a), y'1), x')) at position [1] and matcher [x' / f(a, y''), y'1 / f(f(f(a, a), y), x'')]

F(f(f(a, y'''), f(x''', f(a, y'))), f(a, f(f(f(a, a), f(f(f(a, a), y), x'')), f(a, y'')))) -> F(f(f(a, a), f(f(f(a, a), f(f(f(a, a), y), x'')), f(a, y''))), f(f(a, y'''), f(x''', f(a, y'))))
with rule F(x, f(a, y)) -> F(f(f(a, a), y), x)

Now applying the matcher to the start term leads to a term which is equal to the last term in the rewriting sequence


All these steps are and every following step will be a correct step w.r.t to Q.




----------------------------------------

(8)
NO
