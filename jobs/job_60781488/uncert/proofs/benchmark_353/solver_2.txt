YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/FtuZA.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRSRRRProof [EQUIVALENT, 21 ms]
(2) QTRS
(3) RisEmptyProof [EQUIVALENT, 0 ms]
(4) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   not(not(x)) -> x
   not(or(x, y)) -> and(not(x), not(y))
   not(and(x, y)) -> or(not(x), not(y))
   and(x, or(y, z)) -> or(and(x, y), and(x, z))
   and(or(y, z), x) -> or(and(x, y), and(x, z))

Q is empty.

----------------------------------------

(1) QTRSRRRProof (EQUIVALENT)
Used ordering:
Quasi precedence:
not_1 > and_2 > or_2


Status:
not_1: multiset status
or_2: multiset status
and_2: multiset status

With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   not(not(x)) -> x
   not(or(x, y)) -> and(not(x), not(y))
   not(and(x, y)) -> or(not(x), not(y))
   and(x, or(y, z)) -> or(and(x, y), and(x, z))
   and(or(y, z), x) -> or(and(x, y), and(x, z))




----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
R is empty.
Q is empty.

----------------------------------------

(3) RisEmptyProof (EQUIVALENT)
The TRS R is empty. Hence, termination is trivially proven.
----------------------------------------

(4)
YES
