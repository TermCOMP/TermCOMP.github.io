YES

Problem 1: 

(VAR vu95NonEmpty N X X1 X2 Y Z)
(RULES
active(add(s(X),Y)) -> mark(s(add(X,Y)))
active(add(num0,X)) -> mark(X)
active(add(X1,X2)) -> add(active(X1),X2)
active(add(X1,X2)) -> add(X1,active(X2))
active(cons(X1,X2)) -> cons(active(X1),X2)
active(dbl(s(X))) -> mark(s(s(dbl(X))))
active(dbl(num0)) -> mark(num0)
active(dbl(X)) -> dbl(active(X))
active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
active(first(num0,X)) -> mark(nil)
active(first(X1,X2)) -> first(active(X1),X2)
active(first(X1,X2)) -> first(X1,active(X2))
active(recip(X)) -> recip(active(X))
active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
active(sqr(num0)) -> mark(num0)
active(sqr(X)) -> sqr(active(X))
active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
active(terms(X)) -> terms(active(X))
add(mark(X1),X2) -> mark(add(X1,X2))
add(ok(X1),ok(X2)) -> ok(add(X1,X2))
add(X1,mark(X2)) -> mark(add(X1,X2))
cons(mark(X1),X2) -> mark(cons(X1,X2))
cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
dbl(mark(X)) -> mark(dbl(X))
dbl(ok(X)) -> ok(dbl(X))
first(mark(X1),X2) -> mark(first(X1,X2))
first(ok(X1),ok(X2)) -> ok(first(X1,X2))
first(X1,mark(X2)) -> mark(first(X1,X2))
proper(add(X1,X2)) -> add(proper(X1),proper(X2))
proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
proper(dbl(X)) -> dbl(proper(X))
proper(first(X1,X2)) -> first(proper(X1),proper(X2))
proper(recip(X)) -> recip(proper(X))
proper(s(X)) -> s(proper(X))
proper(sqr(X)) -> sqr(proper(X))
proper(terms(X)) -> terms(proper(X))
proper(num0) -> ok(num0)
proper(nil) -> ok(nil)
recip(mark(X)) -> mark(recip(X))
recip(ok(X)) -> ok(recip(X))
s(ok(X)) -> ok(s(X))
sqr(mark(X)) -> mark(sqr(X))
sqr(ok(X)) -> ok(sqr(X))
terms(mark(X)) -> mark(terms(X))
terms(ok(X)) -> ok(terms(X))
top(mark(X)) -> top(proper(X))
top(ok(X)) -> top(active(X))
)


Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 ACTIVE(add(s(X),Y)) -> ADD(X,Y)
 ACTIVE(add(s(X),Y)) -> S(add(X,Y))
 ACTIVE(add(X1,X2)) -> ACTIVE(X1)
 ACTIVE(add(X1,X2)) -> ACTIVE(X2)
 ACTIVE(add(X1,X2)) -> ADD(active(X1),X2)
 ACTIVE(add(X1,X2)) -> ADD(X1,active(X2))
 ACTIVE(cons(X1,X2)) -> ACTIVE(X1)
 ACTIVE(cons(X1,X2)) -> CONS(active(X1),X2)
 ACTIVE(dbl(s(X))) -> DBL(X)
 ACTIVE(dbl(s(X))) -> S(dbl(X))
 ACTIVE(dbl(s(X))) -> S(s(dbl(X)))
 ACTIVE(dbl(X)) -> ACTIVE(X)
 ACTIVE(dbl(X)) -> DBL(active(X))
 ACTIVE(first(s(X),cons(Y,Z))) -> CONS(Y,first(X,Z))
 ACTIVE(first(s(X),cons(Y,Z))) -> FIRST(X,Z)
 ACTIVE(first(X1,X2)) -> ACTIVE(X1)
 ACTIVE(first(X1,X2)) -> ACTIVE(X2)
 ACTIVE(first(X1,X2)) -> FIRST(active(X1),X2)
 ACTIVE(first(X1,X2)) -> FIRST(X1,active(X2))
 ACTIVE(recip(X)) -> ACTIVE(X)
 ACTIVE(recip(X)) -> RECIP(active(X))
 ACTIVE(sqr(s(X))) -> ADD(sqr(X),dbl(X))
 ACTIVE(sqr(s(X))) -> DBL(X)
 ACTIVE(sqr(s(X))) -> S(add(sqr(X),dbl(X)))
 ACTIVE(sqr(s(X))) -> SQR(X)
 ACTIVE(sqr(X)) -> ACTIVE(X)
 ACTIVE(sqr(X)) -> SQR(active(X))
 ACTIVE(terms(N)) -> CONS(recip(sqr(N)),terms(s(N)))
 ACTIVE(terms(N)) -> RECIP(sqr(N))
 ACTIVE(terms(N)) -> S(N)
 ACTIVE(terms(N)) -> SQR(N)
 ACTIVE(terms(N)) -> TERMS(s(N))
 ACTIVE(terms(X)) -> ACTIVE(X)
 ACTIVE(terms(X)) -> TERMS(active(X))
 ADD(mark(X1),X2) -> ADD(X1,X2)
 ADD(ok(X1),ok(X2)) -> ADD(X1,X2)
 ADD(X1,mark(X2)) -> ADD(X1,X2)
 CONS(mark(X1),X2) -> CONS(X1,X2)
 CONS(ok(X1),ok(X2)) -> CONS(X1,X2)
 DBL(mark(X)) -> DBL(X)
 DBL(ok(X)) -> DBL(X)
 FIRST(mark(X1),X2) -> FIRST(X1,X2)
 FIRST(ok(X1),ok(X2)) -> FIRST(X1,X2)
 FIRST(X1,mark(X2)) -> FIRST(X1,X2)
 PROPER(add(X1,X2)) -> ADD(proper(X1),proper(X2))
 PROPER(add(X1,X2)) -> PROPER(X1)
 PROPER(add(X1,X2)) -> PROPER(X2)
 PROPER(cons(X1,X2)) -> CONS(proper(X1),proper(X2))
 PROPER(cons(X1,X2)) -> PROPER(X1)
 PROPER(cons(X1,X2)) -> PROPER(X2)
 PROPER(dbl(X)) -> DBL(proper(X))
 PROPER(dbl(X)) -> PROPER(X)
 PROPER(first(X1,X2)) -> FIRST(proper(X1),proper(X2))
 PROPER(first(X1,X2)) -> PROPER(X1)
 PROPER(first(X1,X2)) -> PROPER(X2)
 PROPER(recip(X)) -> PROPER(X)
 PROPER(recip(X)) -> RECIP(proper(X))
 PROPER(s(X)) -> PROPER(X)
 PROPER(s(X)) -> S(proper(X))
 PROPER(sqr(X)) -> PROPER(X)
 PROPER(sqr(X)) -> SQR(proper(X))
 PROPER(terms(X)) -> PROPER(X)
 PROPER(terms(X)) -> TERMS(proper(X))
 RECIP(mark(X)) -> RECIP(X)
 RECIP(ok(X)) -> RECIP(X)
 S(ok(X)) -> S(X)
 SQR(mark(X)) -> SQR(X)
 SQR(ok(X)) -> SQR(X)
 TERMS(mark(X)) -> TERMS(X)
 TERMS(ok(X)) -> TERMS(X)
 TOP(mark(X)) -> PROPER(X)
 TOP(mark(X)) -> TOP(proper(X))
 TOP(ok(X)) -> ACTIVE(X)
 TOP(ok(X)) -> TOP(active(X))
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(add(X1,X2)) -> add(active(X1),X2)
 active(add(X1,X2)) -> add(X1,active(X2))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(dbl(X)) -> dbl(active(X))
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(recip(X)) -> recip(active(X))
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(sqr(X)) -> sqr(active(X))
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 active(terms(X)) -> terms(active(X))
 add(mark(X1),X2) -> mark(add(X1,X2))
 add(ok(X1),ok(X2)) -> ok(add(X1,X2))
 add(X1,mark(X2)) -> mark(add(X1,X2))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 dbl(mark(X)) -> mark(dbl(X))
 dbl(ok(X)) -> ok(dbl(X))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 proper(add(X1,X2)) -> add(proper(X1),proper(X2))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(dbl(X)) -> dbl(proper(X))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(recip(X)) -> recip(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(sqr(X)) -> sqr(proper(X))
 proper(terms(X)) -> terms(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 recip(mark(X)) -> mark(recip(X))
 recip(ok(X)) -> ok(recip(X))
 s(ok(X)) -> ok(s(X))
 sqr(mark(X)) -> mark(sqr(X))
 sqr(ok(X)) -> ok(sqr(X))
 terms(mark(X)) -> mark(terms(X))
 terms(ok(X)) -> ok(terms(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))

Problem 1: 

SCC Processor:
-> Pairs:
 ACTIVE(add(s(X),Y)) -> ADD(X,Y)
 ACTIVE(add(s(X),Y)) -> S(add(X,Y))
 ACTIVE(add(X1,X2)) -> ACTIVE(X1)
 ACTIVE(add(X1,X2)) -> ACTIVE(X2)
 ACTIVE(add(X1,X2)) -> ADD(active(X1),X2)
 ACTIVE(add(X1,X2)) -> ADD(X1,active(X2))
 ACTIVE(cons(X1,X2)) -> ACTIVE(X1)
 ACTIVE(cons(X1,X2)) -> CONS(active(X1),X2)
 ACTIVE(dbl(s(X))) -> DBL(X)
 ACTIVE(dbl(s(X))) -> S(dbl(X))
 ACTIVE(dbl(s(X))) -> S(s(dbl(X)))
 ACTIVE(dbl(X)) -> ACTIVE(X)
 ACTIVE(dbl(X)) -> DBL(active(X))
 ACTIVE(first(s(X),cons(Y,Z))) -> CONS(Y,first(X,Z))
 ACTIVE(first(s(X),cons(Y,Z))) -> FIRST(X,Z)
 ACTIVE(first(X1,X2)) -> ACTIVE(X1)
 ACTIVE(first(X1,X2)) -> ACTIVE(X2)
 ACTIVE(first(X1,X2)) -> FIRST(active(X1),X2)
 ACTIVE(first(X1,X2)) -> FIRST(X1,active(X2))
 ACTIVE(recip(X)) -> ACTIVE(X)
 ACTIVE(recip(X)) -> RECIP(active(X))
 ACTIVE(sqr(s(X))) -> ADD(sqr(X),dbl(X))
 ACTIVE(sqr(s(X))) -> DBL(X)
 ACTIVE(sqr(s(X))) -> S(add(sqr(X),dbl(X)))
 ACTIVE(sqr(s(X))) -> SQR(X)
 ACTIVE(sqr(X)) -> ACTIVE(X)
 ACTIVE(sqr(X)) -> SQR(active(X))
 ACTIVE(terms(N)) -> CONS(recip(sqr(N)),terms(s(N)))
 ACTIVE(terms(N)) -> RECIP(sqr(N))
 ACTIVE(terms(N)) -> S(N)
 ACTIVE(terms(N)) -> SQR(N)
 ACTIVE(terms(N)) -> TERMS(s(N))
 ACTIVE(terms(X)) -> ACTIVE(X)
 ACTIVE(terms(X)) -> TERMS(active(X))
 ADD(mark(X1),X2) -> ADD(X1,X2)
 ADD(ok(X1),ok(X2)) -> ADD(X1,X2)
 ADD(X1,mark(X2)) -> ADD(X1,X2)
 CONS(mark(X1),X2) -> CONS(X1,X2)
 CONS(ok(X1),ok(X2)) -> CONS(X1,X2)
 DBL(mark(X)) -> DBL(X)
 DBL(ok(X)) -> DBL(X)
 FIRST(mark(X1),X2) -> FIRST(X1,X2)
 FIRST(ok(X1),ok(X2)) -> FIRST(X1,X2)
 FIRST(X1,mark(X2)) -> FIRST(X1,X2)
 PROPER(add(X1,X2)) -> ADD(proper(X1),proper(X2))
 PROPER(add(X1,X2)) -> PROPER(X1)
 PROPER(add(X1,X2)) -> PROPER(X2)
 PROPER(cons(X1,X2)) -> CONS(proper(X1),proper(X2))
 PROPER(cons(X1,X2)) -> PROPER(X1)
 PROPER(cons(X1,X2)) -> PROPER(X2)
 PROPER(dbl(X)) -> DBL(proper(X))
 PROPER(dbl(X)) -> PROPER(X)
 PROPER(first(X1,X2)) -> FIRST(proper(X1),proper(X2))
 PROPER(first(X1,X2)) -> PROPER(X1)
 PROPER(first(X1,X2)) -> PROPER(X2)
 PROPER(recip(X)) -> PROPER(X)
 PROPER(recip(X)) -> RECIP(proper(X))
 PROPER(s(X)) -> PROPER(X)
 PROPER(s(X)) -> S(proper(X))
 PROPER(sqr(X)) -> PROPER(X)
 PROPER(sqr(X)) -> SQR(proper(X))
 PROPER(terms(X)) -> PROPER(X)
 PROPER(terms(X)) -> TERMS(proper(X))
 RECIP(mark(X)) -> RECIP(X)
 RECIP(ok(X)) -> RECIP(X)
 S(ok(X)) -> S(X)
 SQR(mark(X)) -> SQR(X)
 SQR(ok(X)) -> SQR(X)
 TERMS(mark(X)) -> TERMS(X)
 TERMS(ok(X)) -> TERMS(X)
 TOP(mark(X)) -> PROPER(X)
 TOP(mark(X)) -> TOP(proper(X))
 TOP(ok(X)) -> ACTIVE(X)
 TOP(ok(X)) -> TOP(active(X))
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(add(X1,X2)) -> add(active(X1),X2)
 active(add(X1,X2)) -> add(X1,active(X2))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(dbl(X)) -> dbl(active(X))
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(recip(X)) -> recip(active(X))
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(sqr(X)) -> sqr(active(X))
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 active(terms(X)) -> terms(active(X))
 add(mark(X1),X2) -> mark(add(X1,X2))
 add(ok(X1),ok(X2)) -> ok(add(X1,X2))
 add(X1,mark(X2)) -> mark(add(X1,X2))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 dbl(mark(X)) -> mark(dbl(X))
 dbl(ok(X)) -> ok(dbl(X))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 proper(add(X1,X2)) -> add(proper(X1),proper(X2))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(dbl(X)) -> dbl(proper(X))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(recip(X)) -> recip(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(sqr(X)) -> sqr(proper(X))
 proper(terms(X)) -> terms(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 recip(mark(X)) -> mark(recip(X))
 recip(ok(X)) -> ok(recip(X))
 s(ok(X)) -> ok(s(X))
 sqr(mark(X)) -> mark(sqr(X))
 sqr(ok(X)) -> ok(sqr(X))
 terms(mark(X)) -> mark(terms(X))
 terms(ok(X)) -> ok(terms(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 TERMS(mark(X)) -> TERMS(X)
 TERMS(ok(X)) -> TERMS(X)
->->-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(add(X1,X2)) -> add(active(X1),X2)
 active(add(X1,X2)) -> add(X1,active(X2))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(dbl(X)) -> dbl(active(X))
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(recip(X)) -> recip(active(X))
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(sqr(X)) -> sqr(active(X))
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 active(terms(X)) -> terms(active(X))
 add(mark(X1),X2) -> mark(add(X1,X2))
 add(ok(X1),ok(X2)) -> ok(add(X1,X2))
 add(X1,mark(X2)) -> mark(add(X1,X2))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 dbl(mark(X)) -> mark(dbl(X))
 dbl(ok(X)) -> ok(dbl(X))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 proper(add(X1,X2)) -> add(proper(X1),proper(X2))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(dbl(X)) -> dbl(proper(X))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(recip(X)) -> recip(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(sqr(X)) -> sqr(proper(X))
 proper(terms(X)) -> terms(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 recip(mark(X)) -> mark(recip(X))
 recip(ok(X)) -> ok(recip(X))
 s(ok(X)) -> ok(s(X))
 sqr(mark(X)) -> mark(sqr(X))
 sqr(ok(X)) -> ok(sqr(X))
 terms(mark(X)) -> mark(terms(X))
 terms(ok(X)) -> ok(terms(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->->Cycle:
->->-> Pairs:
 SQR(mark(X)) -> SQR(X)
 SQR(ok(X)) -> SQR(X)
->->-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(add(X1,X2)) -> add(active(X1),X2)
 active(add(X1,X2)) -> add(X1,active(X2))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(dbl(X)) -> dbl(active(X))
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(recip(X)) -> recip(active(X))
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(sqr(X)) -> sqr(active(X))
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 active(terms(X)) -> terms(active(X))
 add(mark(X1),X2) -> mark(add(X1,X2))
 add(ok(X1),ok(X2)) -> ok(add(X1,X2))
 add(X1,mark(X2)) -> mark(add(X1,X2))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 dbl(mark(X)) -> mark(dbl(X))
 dbl(ok(X)) -> ok(dbl(X))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 proper(add(X1,X2)) -> add(proper(X1),proper(X2))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(dbl(X)) -> dbl(proper(X))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(recip(X)) -> recip(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(sqr(X)) -> sqr(proper(X))
 proper(terms(X)) -> terms(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 recip(mark(X)) -> mark(recip(X))
 recip(ok(X)) -> ok(recip(X))
 s(ok(X)) -> ok(s(X))
 sqr(mark(X)) -> mark(sqr(X))
 sqr(ok(X)) -> ok(sqr(X))
 terms(mark(X)) -> mark(terms(X))
 terms(ok(X)) -> ok(terms(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->->Cycle:
->->-> Pairs:
 S(ok(X)) -> S(X)
->->-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(add(X1,X2)) -> add(active(X1),X2)
 active(add(X1,X2)) -> add(X1,active(X2))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(dbl(X)) -> dbl(active(X))
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(recip(X)) -> recip(active(X))
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(sqr(X)) -> sqr(active(X))
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 active(terms(X)) -> terms(active(X))
 add(mark(X1),X2) -> mark(add(X1,X2))
 add(ok(X1),ok(X2)) -> ok(add(X1,X2))
 add(X1,mark(X2)) -> mark(add(X1,X2))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 dbl(mark(X)) -> mark(dbl(X))
 dbl(ok(X)) -> ok(dbl(X))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 proper(add(X1,X2)) -> add(proper(X1),proper(X2))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(dbl(X)) -> dbl(proper(X))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(recip(X)) -> recip(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(sqr(X)) -> sqr(proper(X))
 proper(terms(X)) -> terms(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 recip(mark(X)) -> mark(recip(X))
 recip(ok(X)) -> ok(recip(X))
 s(ok(X)) -> ok(s(X))
 sqr(mark(X)) -> mark(sqr(X))
 sqr(ok(X)) -> ok(sqr(X))
 terms(mark(X)) -> mark(terms(X))
 terms(ok(X)) -> ok(terms(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->->Cycle:
->->-> Pairs:
 RECIP(mark(X)) -> RECIP(X)
 RECIP(ok(X)) -> RECIP(X)
->->-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(add(X1,X2)) -> add(active(X1),X2)
 active(add(X1,X2)) -> add(X1,active(X2))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(dbl(X)) -> dbl(active(X))
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(recip(X)) -> recip(active(X))
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(sqr(X)) -> sqr(active(X))
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 active(terms(X)) -> terms(active(X))
 add(mark(X1),X2) -> mark(add(X1,X2))
 add(ok(X1),ok(X2)) -> ok(add(X1,X2))
 add(X1,mark(X2)) -> mark(add(X1,X2))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 dbl(mark(X)) -> mark(dbl(X))
 dbl(ok(X)) -> ok(dbl(X))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 proper(add(X1,X2)) -> add(proper(X1),proper(X2))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(dbl(X)) -> dbl(proper(X))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(recip(X)) -> recip(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(sqr(X)) -> sqr(proper(X))
 proper(terms(X)) -> terms(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 recip(mark(X)) -> mark(recip(X))
 recip(ok(X)) -> ok(recip(X))
 s(ok(X)) -> ok(s(X))
 sqr(mark(X)) -> mark(sqr(X))
 sqr(ok(X)) -> ok(sqr(X))
 terms(mark(X)) -> mark(terms(X))
 terms(ok(X)) -> ok(terms(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->->Cycle:
->->-> Pairs:
 FIRST(mark(X1),X2) -> FIRST(X1,X2)
 FIRST(ok(X1),ok(X2)) -> FIRST(X1,X2)
 FIRST(X1,mark(X2)) -> FIRST(X1,X2)
->->-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(add(X1,X2)) -> add(active(X1),X2)
 active(add(X1,X2)) -> add(X1,active(X2))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(dbl(X)) -> dbl(active(X))
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(recip(X)) -> recip(active(X))
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(sqr(X)) -> sqr(active(X))
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 active(terms(X)) -> terms(active(X))
 add(mark(X1),X2) -> mark(add(X1,X2))
 add(ok(X1),ok(X2)) -> ok(add(X1,X2))
 add(X1,mark(X2)) -> mark(add(X1,X2))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 dbl(mark(X)) -> mark(dbl(X))
 dbl(ok(X)) -> ok(dbl(X))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 proper(add(X1,X2)) -> add(proper(X1),proper(X2))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(dbl(X)) -> dbl(proper(X))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(recip(X)) -> recip(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(sqr(X)) -> sqr(proper(X))
 proper(terms(X)) -> terms(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 recip(mark(X)) -> mark(recip(X))
 recip(ok(X)) -> ok(recip(X))
 s(ok(X)) -> ok(s(X))
 sqr(mark(X)) -> mark(sqr(X))
 sqr(ok(X)) -> ok(sqr(X))
 terms(mark(X)) -> mark(terms(X))
 terms(ok(X)) -> ok(terms(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->->Cycle:
->->-> Pairs:
 DBL(mark(X)) -> DBL(X)
 DBL(ok(X)) -> DBL(X)
->->-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(add(X1,X2)) -> add(active(X1),X2)
 active(add(X1,X2)) -> add(X1,active(X2))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(dbl(X)) -> dbl(active(X))
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(recip(X)) -> recip(active(X))
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(sqr(X)) -> sqr(active(X))
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 active(terms(X)) -> terms(active(X))
 add(mark(X1),X2) -> mark(add(X1,X2))
 add(ok(X1),ok(X2)) -> ok(add(X1,X2))
 add(X1,mark(X2)) -> mark(add(X1,X2))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 dbl(mark(X)) -> mark(dbl(X))
 dbl(ok(X)) -> ok(dbl(X))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 proper(add(X1,X2)) -> add(proper(X1),proper(X2))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(dbl(X)) -> dbl(proper(X))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(recip(X)) -> recip(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(sqr(X)) -> sqr(proper(X))
 proper(terms(X)) -> terms(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 recip(mark(X)) -> mark(recip(X))
 recip(ok(X)) -> ok(recip(X))
 s(ok(X)) -> ok(s(X))
 sqr(mark(X)) -> mark(sqr(X))
 sqr(ok(X)) -> ok(sqr(X))
 terms(mark(X)) -> mark(terms(X))
 terms(ok(X)) -> ok(terms(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->->Cycle:
->->-> Pairs:
 CONS(mark(X1),X2) -> CONS(X1,X2)
 CONS(ok(X1),ok(X2)) -> CONS(X1,X2)
->->-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(add(X1,X2)) -> add(active(X1),X2)
 active(add(X1,X2)) -> add(X1,active(X2))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(dbl(X)) -> dbl(active(X))
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(recip(X)) -> recip(active(X))
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(sqr(X)) -> sqr(active(X))
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 active(terms(X)) -> terms(active(X))
 add(mark(X1),X2) -> mark(add(X1,X2))
 add(ok(X1),ok(X2)) -> ok(add(X1,X2))
 add(X1,mark(X2)) -> mark(add(X1,X2))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 dbl(mark(X)) -> mark(dbl(X))
 dbl(ok(X)) -> ok(dbl(X))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 proper(add(X1,X2)) -> add(proper(X1),proper(X2))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(dbl(X)) -> dbl(proper(X))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(recip(X)) -> recip(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(sqr(X)) -> sqr(proper(X))
 proper(terms(X)) -> terms(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 recip(mark(X)) -> mark(recip(X))
 recip(ok(X)) -> ok(recip(X))
 s(ok(X)) -> ok(s(X))
 sqr(mark(X)) -> mark(sqr(X))
 sqr(ok(X)) -> ok(sqr(X))
 terms(mark(X)) -> mark(terms(X))
 terms(ok(X)) -> ok(terms(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->->Cycle:
->->-> Pairs:
 ADD(mark(X1),X2) -> ADD(X1,X2)
 ADD(ok(X1),ok(X2)) -> ADD(X1,X2)
 ADD(X1,mark(X2)) -> ADD(X1,X2)
->->-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(add(X1,X2)) -> add(active(X1),X2)
 active(add(X1,X2)) -> add(X1,active(X2))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(dbl(X)) -> dbl(active(X))
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(recip(X)) -> recip(active(X))
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(sqr(X)) -> sqr(active(X))
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 active(terms(X)) -> terms(active(X))
 add(mark(X1),X2) -> mark(add(X1,X2))
 add(ok(X1),ok(X2)) -> ok(add(X1,X2))
 add(X1,mark(X2)) -> mark(add(X1,X2))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 dbl(mark(X)) -> mark(dbl(X))
 dbl(ok(X)) -> ok(dbl(X))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 proper(add(X1,X2)) -> add(proper(X1),proper(X2))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(dbl(X)) -> dbl(proper(X))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(recip(X)) -> recip(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(sqr(X)) -> sqr(proper(X))
 proper(terms(X)) -> terms(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 recip(mark(X)) -> mark(recip(X))
 recip(ok(X)) -> ok(recip(X))
 s(ok(X)) -> ok(s(X))
 sqr(mark(X)) -> mark(sqr(X))
 sqr(ok(X)) -> ok(sqr(X))
 terms(mark(X)) -> mark(terms(X))
 terms(ok(X)) -> ok(terms(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->->Cycle:
->->-> Pairs:
 PROPER(add(X1,X2)) -> PROPER(X1)
 PROPER(add(X1,X2)) -> PROPER(X2)
 PROPER(cons(X1,X2)) -> PROPER(X1)
 PROPER(cons(X1,X2)) -> PROPER(X2)
 PROPER(dbl(X)) -> PROPER(X)
 PROPER(first(X1,X2)) -> PROPER(X1)
 PROPER(first(X1,X2)) -> PROPER(X2)
 PROPER(recip(X)) -> PROPER(X)
 PROPER(s(X)) -> PROPER(X)
 PROPER(sqr(X)) -> PROPER(X)
 PROPER(terms(X)) -> PROPER(X)
->->-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(add(X1,X2)) -> add(active(X1),X2)
 active(add(X1,X2)) -> add(X1,active(X2))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(dbl(X)) -> dbl(active(X))
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(recip(X)) -> recip(active(X))
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(sqr(X)) -> sqr(active(X))
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 active(terms(X)) -> terms(active(X))
 add(mark(X1),X2) -> mark(add(X1,X2))
 add(ok(X1),ok(X2)) -> ok(add(X1,X2))
 add(X1,mark(X2)) -> mark(add(X1,X2))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 dbl(mark(X)) -> mark(dbl(X))
 dbl(ok(X)) -> ok(dbl(X))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 proper(add(X1,X2)) -> add(proper(X1),proper(X2))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(dbl(X)) -> dbl(proper(X))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(recip(X)) -> recip(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(sqr(X)) -> sqr(proper(X))
 proper(terms(X)) -> terms(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 recip(mark(X)) -> mark(recip(X))
 recip(ok(X)) -> ok(recip(X))
 s(ok(X)) -> ok(s(X))
 sqr(mark(X)) -> mark(sqr(X))
 sqr(ok(X)) -> ok(sqr(X))
 terms(mark(X)) -> mark(terms(X))
 terms(ok(X)) -> ok(terms(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->->Cycle:
->->-> Pairs:
 ACTIVE(add(X1,X2)) -> ACTIVE(X1)
 ACTIVE(add(X1,X2)) -> ACTIVE(X2)
 ACTIVE(cons(X1,X2)) -> ACTIVE(X1)
 ACTIVE(dbl(X)) -> ACTIVE(X)
 ACTIVE(first(X1,X2)) -> ACTIVE(X1)
 ACTIVE(first(X1,X2)) -> ACTIVE(X2)
 ACTIVE(recip(X)) -> ACTIVE(X)
 ACTIVE(sqr(X)) -> ACTIVE(X)
 ACTIVE(terms(X)) -> ACTIVE(X)
->->-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(add(X1,X2)) -> add(active(X1),X2)
 active(add(X1,X2)) -> add(X1,active(X2))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(dbl(X)) -> dbl(active(X))
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(recip(X)) -> recip(active(X))
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(sqr(X)) -> sqr(active(X))
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 active(terms(X)) -> terms(active(X))
 add(mark(X1),X2) -> mark(add(X1,X2))
 add(ok(X1),ok(X2)) -> ok(add(X1,X2))
 add(X1,mark(X2)) -> mark(add(X1,X2))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 dbl(mark(X)) -> mark(dbl(X))
 dbl(ok(X)) -> ok(dbl(X))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 proper(add(X1,X2)) -> add(proper(X1),proper(X2))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(dbl(X)) -> dbl(proper(X))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(recip(X)) -> recip(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(sqr(X)) -> sqr(proper(X))
 proper(terms(X)) -> terms(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 recip(mark(X)) -> mark(recip(X))
 recip(ok(X)) -> ok(recip(X))
 s(ok(X)) -> ok(s(X))
 sqr(mark(X)) -> mark(sqr(X))
 sqr(ok(X)) -> ok(sqr(X))
 terms(mark(X)) -> mark(terms(X))
 terms(ok(X)) -> ok(terms(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->->Cycle:
->->-> Pairs:
 TOP(mark(X)) -> TOP(proper(X))
 TOP(ok(X)) -> TOP(active(X))
->->-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(add(X1,X2)) -> add(active(X1),X2)
 active(add(X1,X2)) -> add(X1,active(X2))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(dbl(X)) -> dbl(active(X))
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(recip(X)) -> recip(active(X))
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(sqr(X)) -> sqr(active(X))
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 active(terms(X)) -> terms(active(X))
 add(mark(X1),X2) -> mark(add(X1,X2))
 add(ok(X1),ok(X2)) -> ok(add(X1,X2))
 add(X1,mark(X2)) -> mark(add(X1,X2))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 dbl(mark(X)) -> mark(dbl(X))
 dbl(ok(X)) -> ok(dbl(X))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 proper(add(X1,X2)) -> add(proper(X1),proper(X2))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(dbl(X)) -> dbl(proper(X))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(recip(X)) -> recip(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(sqr(X)) -> sqr(proper(X))
 proper(terms(X)) -> terms(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 recip(mark(X)) -> mark(recip(X))
 recip(ok(X)) -> ok(recip(X))
 s(ok(X)) -> ok(s(X))
 sqr(mark(X)) -> mark(sqr(X))
 sqr(ok(X)) -> ok(sqr(X))
 terms(mark(X)) -> mark(terms(X))
 terms(ok(X)) -> ok(terms(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))


The problem is decomposed in 11 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 TERMS(mark(X)) -> TERMS(X)
 TERMS(ok(X)) -> TERMS(X)
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(add(X1,X2)) -> add(active(X1),X2)
 active(add(X1,X2)) -> add(X1,active(X2))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(dbl(X)) -> dbl(active(X))
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(recip(X)) -> recip(active(X))
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(sqr(X)) -> sqr(active(X))
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 active(terms(X)) -> terms(active(X))
 add(mark(X1),X2) -> mark(add(X1,X2))
 add(ok(X1),ok(X2)) -> ok(add(X1,X2))
 add(X1,mark(X2)) -> mark(add(X1,X2))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 dbl(mark(X)) -> mark(dbl(X))
 dbl(ok(X)) -> ok(dbl(X))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 proper(add(X1,X2)) -> add(proper(X1),proper(X2))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(dbl(X)) -> dbl(proper(X))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(recip(X)) -> recip(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(sqr(X)) -> sqr(proper(X))
 proper(terms(X)) -> terms(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 recip(mark(X)) -> mark(recip(X))
 recip(ok(X)) -> ok(recip(X))
 s(ok(X)) -> ok(s(X))
 sqr(mark(X)) -> mark(sqr(X))
 sqr(ok(X)) -> ok(sqr(X))
 terms(mark(X)) -> mark(terms(X))
 terms(ok(X)) -> ok(terms(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Projection:
 pi(TERMS) = 1

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(add(X1,X2)) -> add(active(X1),X2)
 active(add(X1,X2)) -> add(X1,active(X2))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(dbl(X)) -> dbl(active(X))
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(recip(X)) -> recip(active(X))
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(sqr(X)) -> sqr(active(X))
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 active(terms(X)) -> terms(active(X))
 add(mark(X1),X2) -> mark(add(X1,X2))
 add(ok(X1),ok(X2)) -> ok(add(X1,X2))
 add(X1,mark(X2)) -> mark(add(X1,X2))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 dbl(mark(X)) -> mark(dbl(X))
 dbl(ok(X)) -> ok(dbl(X))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 proper(add(X1,X2)) -> add(proper(X1),proper(X2))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(dbl(X)) -> dbl(proper(X))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(recip(X)) -> recip(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(sqr(X)) -> sqr(proper(X))
 proper(terms(X)) -> terms(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 recip(mark(X)) -> mark(recip(X))
 recip(ok(X)) -> ok(recip(X))
 s(ok(X)) -> ok(s(X))
 sqr(mark(X)) -> mark(sqr(X))
 sqr(ok(X)) -> ok(sqr(X))
 terms(mark(X)) -> mark(terms(X))
 terms(ok(X)) -> ok(terms(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Subterm Processor:
-> Pairs:
 SQR(mark(X)) -> SQR(X)
 SQR(ok(X)) -> SQR(X)
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(add(X1,X2)) -> add(active(X1),X2)
 active(add(X1,X2)) -> add(X1,active(X2))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(dbl(X)) -> dbl(active(X))
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(recip(X)) -> recip(active(X))
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(sqr(X)) -> sqr(active(X))
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 active(terms(X)) -> terms(active(X))
 add(mark(X1),X2) -> mark(add(X1,X2))
 add(ok(X1),ok(X2)) -> ok(add(X1,X2))
 add(X1,mark(X2)) -> mark(add(X1,X2))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 dbl(mark(X)) -> mark(dbl(X))
 dbl(ok(X)) -> ok(dbl(X))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 proper(add(X1,X2)) -> add(proper(X1),proper(X2))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(dbl(X)) -> dbl(proper(X))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(recip(X)) -> recip(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(sqr(X)) -> sqr(proper(X))
 proper(terms(X)) -> terms(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 recip(mark(X)) -> mark(recip(X))
 recip(ok(X)) -> ok(recip(X))
 s(ok(X)) -> ok(s(X))
 sqr(mark(X)) -> mark(sqr(X))
 sqr(ok(X)) -> ok(sqr(X))
 terms(mark(X)) -> mark(terms(X))
 terms(ok(X)) -> ok(terms(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Projection:
 pi(SQR) = 1

Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(add(X1,X2)) -> add(active(X1),X2)
 active(add(X1,X2)) -> add(X1,active(X2))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(dbl(X)) -> dbl(active(X))
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(recip(X)) -> recip(active(X))
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(sqr(X)) -> sqr(active(X))
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 active(terms(X)) -> terms(active(X))
 add(mark(X1),X2) -> mark(add(X1,X2))
 add(ok(X1),ok(X2)) -> ok(add(X1,X2))
 add(X1,mark(X2)) -> mark(add(X1,X2))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 dbl(mark(X)) -> mark(dbl(X))
 dbl(ok(X)) -> ok(dbl(X))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 proper(add(X1,X2)) -> add(proper(X1),proper(X2))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(dbl(X)) -> dbl(proper(X))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(recip(X)) -> recip(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(sqr(X)) -> sqr(proper(X))
 proper(terms(X)) -> terms(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 recip(mark(X)) -> mark(recip(X))
 recip(ok(X)) -> ok(recip(X))
 s(ok(X)) -> ok(s(X))
 sqr(mark(X)) -> mark(sqr(X))
 sqr(ok(X)) -> ok(sqr(X))
 terms(mark(X)) -> mark(terms(X))
 terms(ok(X)) -> ok(terms(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Subterm Processor:
-> Pairs:
 S(ok(X)) -> S(X)
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(add(X1,X2)) -> add(active(X1),X2)
 active(add(X1,X2)) -> add(X1,active(X2))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(dbl(X)) -> dbl(active(X))
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(recip(X)) -> recip(active(X))
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(sqr(X)) -> sqr(active(X))
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 active(terms(X)) -> terms(active(X))
 add(mark(X1),X2) -> mark(add(X1,X2))
 add(ok(X1),ok(X2)) -> ok(add(X1,X2))
 add(X1,mark(X2)) -> mark(add(X1,X2))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 dbl(mark(X)) -> mark(dbl(X))
 dbl(ok(X)) -> ok(dbl(X))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 proper(add(X1,X2)) -> add(proper(X1),proper(X2))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(dbl(X)) -> dbl(proper(X))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(recip(X)) -> recip(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(sqr(X)) -> sqr(proper(X))
 proper(terms(X)) -> terms(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 recip(mark(X)) -> mark(recip(X))
 recip(ok(X)) -> ok(recip(X))
 s(ok(X)) -> ok(s(X))
 sqr(mark(X)) -> mark(sqr(X))
 sqr(ok(X)) -> ok(sqr(X))
 terms(mark(X)) -> mark(terms(X))
 terms(ok(X)) -> ok(terms(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Projection:
 pi(S) = 1

Problem 1.3: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(add(X1,X2)) -> add(active(X1),X2)
 active(add(X1,X2)) -> add(X1,active(X2))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(dbl(X)) -> dbl(active(X))
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(recip(X)) -> recip(active(X))
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(sqr(X)) -> sqr(active(X))
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 active(terms(X)) -> terms(active(X))
 add(mark(X1),X2) -> mark(add(X1,X2))
 add(ok(X1),ok(X2)) -> ok(add(X1,X2))
 add(X1,mark(X2)) -> mark(add(X1,X2))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 dbl(mark(X)) -> mark(dbl(X))
 dbl(ok(X)) -> ok(dbl(X))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 proper(add(X1,X2)) -> add(proper(X1),proper(X2))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(dbl(X)) -> dbl(proper(X))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(recip(X)) -> recip(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(sqr(X)) -> sqr(proper(X))
 proper(terms(X)) -> terms(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 recip(mark(X)) -> mark(recip(X))
 recip(ok(X)) -> ok(recip(X))
 s(ok(X)) -> ok(s(X))
 sqr(mark(X)) -> mark(sqr(X))
 sqr(ok(X)) -> ok(sqr(X))
 terms(mark(X)) -> mark(terms(X))
 terms(ok(X)) -> ok(terms(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.4: 

Subterm Processor:
-> Pairs:
 RECIP(mark(X)) -> RECIP(X)
 RECIP(ok(X)) -> RECIP(X)
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(add(X1,X2)) -> add(active(X1),X2)
 active(add(X1,X2)) -> add(X1,active(X2))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(dbl(X)) -> dbl(active(X))
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(recip(X)) -> recip(active(X))
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(sqr(X)) -> sqr(active(X))
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 active(terms(X)) -> terms(active(X))
 add(mark(X1),X2) -> mark(add(X1,X2))
 add(ok(X1),ok(X2)) -> ok(add(X1,X2))
 add(X1,mark(X2)) -> mark(add(X1,X2))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 dbl(mark(X)) -> mark(dbl(X))
 dbl(ok(X)) -> ok(dbl(X))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 proper(add(X1,X2)) -> add(proper(X1),proper(X2))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(dbl(X)) -> dbl(proper(X))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(recip(X)) -> recip(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(sqr(X)) -> sqr(proper(X))
 proper(terms(X)) -> terms(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 recip(mark(X)) -> mark(recip(X))
 recip(ok(X)) -> ok(recip(X))
 s(ok(X)) -> ok(s(X))
 sqr(mark(X)) -> mark(sqr(X))
 sqr(ok(X)) -> ok(sqr(X))
 terms(mark(X)) -> mark(terms(X))
 terms(ok(X)) -> ok(terms(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Projection:
 pi(RECIP) = 1

Problem 1.4: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(add(X1,X2)) -> add(active(X1),X2)
 active(add(X1,X2)) -> add(X1,active(X2))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(dbl(X)) -> dbl(active(X))
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(recip(X)) -> recip(active(X))
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(sqr(X)) -> sqr(active(X))
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 active(terms(X)) -> terms(active(X))
 add(mark(X1),X2) -> mark(add(X1,X2))
 add(ok(X1),ok(X2)) -> ok(add(X1,X2))
 add(X1,mark(X2)) -> mark(add(X1,X2))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 dbl(mark(X)) -> mark(dbl(X))
 dbl(ok(X)) -> ok(dbl(X))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 proper(add(X1,X2)) -> add(proper(X1),proper(X2))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(dbl(X)) -> dbl(proper(X))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(recip(X)) -> recip(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(sqr(X)) -> sqr(proper(X))
 proper(terms(X)) -> terms(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 recip(mark(X)) -> mark(recip(X))
 recip(ok(X)) -> ok(recip(X))
 s(ok(X)) -> ok(s(X))
 sqr(mark(X)) -> mark(sqr(X))
 sqr(ok(X)) -> ok(sqr(X))
 terms(mark(X)) -> mark(terms(X))
 terms(ok(X)) -> ok(terms(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.5: 

Subterm Processor:
-> Pairs:
 FIRST(mark(X1),X2) -> FIRST(X1,X2)
 FIRST(ok(X1),ok(X2)) -> FIRST(X1,X2)
 FIRST(X1,mark(X2)) -> FIRST(X1,X2)
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(add(X1,X2)) -> add(active(X1),X2)
 active(add(X1,X2)) -> add(X1,active(X2))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(dbl(X)) -> dbl(active(X))
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(recip(X)) -> recip(active(X))
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(sqr(X)) -> sqr(active(X))
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 active(terms(X)) -> terms(active(X))
 add(mark(X1),X2) -> mark(add(X1,X2))
 add(ok(X1),ok(X2)) -> ok(add(X1,X2))
 add(X1,mark(X2)) -> mark(add(X1,X2))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 dbl(mark(X)) -> mark(dbl(X))
 dbl(ok(X)) -> ok(dbl(X))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 proper(add(X1,X2)) -> add(proper(X1),proper(X2))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(dbl(X)) -> dbl(proper(X))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(recip(X)) -> recip(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(sqr(X)) -> sqr(proper(X))
 proper(terms(X)) -> terms(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 recip(mark(X)) -> mark(recip(X))
 recip(ok(X)) -> ok(recip(X))
 s(ok(X)) -> ok(s(X))
 sqr(mark(X)) -> mark(sqr(X))
 sqr(ok(X)) -> ok(sqr(X))
 terms(mark(X)) -> mark(terms(X))
 terms(ok(X)) -> ok(terms(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Projection:
 pi(FIRST) = 1

Problem 1.5: 

SCC Processor:
-> Pairs:
 FIRST(X1,mark(X2)) -> FIRST(X1,X2)
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(add(X1,X2)) -> add(active(X1),X2)
 active(add(X1,X2)) -> add(X1,active(X2))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(dbl(X)) -> dbl(active(X))
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(recip(X)) -> recip(active(X))
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(sqr(X)) -> sqr(active(X))
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 active(terms(X)) -> terms(active(X))
 add(mark(X1),X2) -> mark(add(X1,X2))
 add(ok(X1),ok(X2)) -> ok(add(X1,X2))
 add(X1,mark(X2)) -> mark(add(X1,X2))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 dbl(mark(X)) -> mark(dbl(X))
 dbl(ok(X)) -> ok(dbl(X))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 proper(add(X1,X2)) -> add(proper(X1),proper(X2))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(dbl(X)) -> dbl(proper(X))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(recip(X)) -> recip(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(sqr(X)) -> sqr(proper(X))
 proper(terms(X)) -> terms(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 recip(mark(X)) -> mark(recip(X))
 recip(ok(X)) -> ok(recip(X))
 s(ok(X)) -> ok(s(X))
 sqr(mark(X)) -> mark(sqr(X))
 sqr(ok(X)) -> ok(sqr(X))
 terms(mark(X)) -> mark(terms(X))
 terms(ok(X)) -> ok(terms(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 FIRST(X1,mark(X2)) -> FIRST(X1,X2)
->->-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(add(X1,X2)) -> add(active(X1),X2)
 active(add(X1,X2)) -> add(X1,active(X2))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(dbl(X)) -> dbl(active(X))
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(recip(X)) -> recip(active(X))
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(sqr(X)) -> sqr(active(X))
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 active(terms(X)) -> terms(active(X))
 add(mark(X1),X2) -> mark(add(X1,X2))
 add(ok(X1),ok(X2)) -> ok(add(X1,X2))
 add(X1,mark(X2)) -> mark(add(X1,X2))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 dbl(mark(X)) -> mark(dbl(X))
 dbl(ok(X)) -> ok(dbl(X))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 proper(add(X1,X2)) -> add(proper(X1),proper(X2))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(dbl(X)) -> dbl(proper(X))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(recip(X)) -> recip(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(sqr(X)) -> sqr(proper(X))
 proper(terms(X)) -> terms(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 recip(mark(X)) -> mark(recip(X))
 recip(ok(X)) -> ok(recip(X))
 s(ok(X)) -> ok(s(X))
 sqr(mark(X)) -> mark(sqr(X))
 sqr(ok(X)) -> ok(sqr(X))
 terms(mark(X)) -> mark(terms(X))
 terms(ok(X)) -> ok(terms(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))

Problem 1.5: 

Subterm Processor:
-> Pairs:
 FIRST(X1,mark(X2)) -> FIRST(X1,X2)
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(add(X1,X2)) -> add(active(X1),X2)
 active(add(X1,X2)) -> add(X1,active(X2))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(dbl(X)) -> dbl(active(X))
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(recip(X)) -> recip(active(X))
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(sqr(X)) -> sqr(active(X))
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 active(terms(X)) -> terms(active(X))
 add(mark(X1),X2) -> mark(add(X1,X2))
 add(ok(X1),ok(X2)) -> ok(add(X1,X2))
 add(X1,mark(X2)) -> mark(add(X1,X2))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 dbl(mark(X)) -> mark(dbl(X))
 dbl(ok(X)) -> ok(dbl(X))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 proper(add(X1,X2)) -> add(proper(X1),proper(X2))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(dbl(X)) -> dbl(proper(X))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(recip(X)) -> recip(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(sqr(X)) -> sqr(proper(X))
 proper(terms(X)) -> terms(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 recip(mark(X)) -> mark(recip(X))
 recip(ok(X)) -> ok(recip(X))
 s(ok(X)) -> ok(s(X))
 sqr(mark(X)) -> mark(sqr(X))
 sqr(ok(X)) -> ok(sqr(X))
 terms(mark(X)) -> mark(terms(X))
 terms(ok(X)) -> ok(terms(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Projection:
 pi(FIRST) = 2

Problem 1.5: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(add(X1,X2)) -> add(active(X1),X2)
 active(add(X1,X2)) -> add(X1,active(X2))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(dbl(X)) -> dbl(active(X))
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(recip(X)) -> recip(active(X))
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(sqr(X)) -> sqr(active(X))
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 active(terms(X)) -> terms(active(X))
 add(mark(X1),X2) -> mark(add(X1,X2))
 add(ok(X1),ok(X2)) -> ok(add(X1,X2))
 add(X1,mark(X2)) -> mark(add(X1,X2))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 dbl(mark(X)) -> mark(dbl(X))
 dbl(ok(X)) -> ok(dbl(X))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 proper(add(X1,X2)) -> add(proper(X1),proper(X2))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(dbl(X)) -> dbl(proper(X))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(recip(X)) -> recip(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(sqr(X)) -> sqr(proper(X))
 proper(terms(X)) -> terms(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 recip(mark(X)) -> mark(recip(X))
 recip(ok(X)) -> ok(recip(X))
 s(ok(X)) -> ok(s(X))
 sqr(mark(X)) -> mark(sqr(X))
 sqr(ok(X)) -> ok(sqr(X))
 terms(mark(X)) -> mark(terms(X))
 terms(ok(X)) -> ok(terms(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.6: 

Subterm Processor:
-> Pairs:
 DBL(mark(X)) -> DBL(X)
 DBL(ok(X)) -> DBL(X)
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(add(X1,X2)) -> add(active(X1),X2)
 active(add(X1,X2)) -> add(X1,active(X2))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(dbl(X)) -> dbl(active(X))
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(recip(X)) -> recip(active(X))
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(sqr(X)) -> sqr(active(X))
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 active(terms(X)) -> terms(active(X))
 add(mark(X1),X2) -> mark(add(X1,X2))
 add(ok(X1),ok(X2)) -> ok(add(X1,X2))
 add(X1,mark(X2)) -> mark(add(X1,X2))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 dbl(mark(X)) -> mark(dbl(X))
 dbl(ok(X)) -> ok(dbl(X))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 proper(add(X1,X2)) -> add(proper(X1),proper(X2))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(dbl(X)) -> dbl(proper(X))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(recip(X)) -> recip(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(sqr(X)) -> sqr(proper(X))
 proper(terms(X)) -> terms(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 recip(mark(X)) -> mark(recip(X))
 recip(ok(X)) -> ok(recip(X))
 s(ok(X)) -> ok(s(X))
 sqr(mark(X)) -> mark(sqr(X))
 sqr(ok(X)) -> ok(sqr(X))
 terms(mark(X)) -> mark(terms(X))
 terms(ok(X)) -> ok(terms(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Projection:
 pi(DBL) = 1

Problem 1.6: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(add(X1,X2)) -> add(active(X1),X2)
 active(add(X1,X2)) -> add(X1,active(X2))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(dbl(X)) -> dbl(active(X))
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(recip(X)) -> recip(active(X))
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(sqr(X)) -> sqr(active(X))
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 active(terms(X)) -> terms(active(X))
 add(mark(X1),X2) -> mark(add(X1,X2))
 add(ok(X1),ok(X2)) -> ok(add(X1,X2))
 add(X1,mark(X2)) -> mark(add(X1,X2))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 dbl(mark(X)) -> mark(dbl(X))
 dbl(ok(X)) -> ok(dbl(X))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 proper(add(X1,X2)) -> add(proper(X1),proper(X2))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(dbl(X)) -> dbl(proper(X))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(recip(X)) -> recip(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(sqr(X)) -> sqr(proper(X))
 proper(terms(X)) -> terms(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 recip(mark(X)) -> mark(recip(X))
 recip(ok(X)) -> ok(recip(X))
 s(ok(X)) -> ok(s(X))
 sqr(mark(X)) -> mark(sqr(X))
 sqr(ok(X)) -> ok(sqr(X))
 terms(mark(X)) -> mark(terms(X))
 terms(ok(X)) -> ok(terms(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.7: 

Subterm Processor:
-> Pairs:
 CONS(mark(X1),X2) -> CONS(X1,X2)
 CONS(ok(X1),ok(X2)) -> CONS(X1,X2)
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(add(X1,X2)) -> add(active(X1),X2)
 active(add(X1,X2)) -> add(X1,active(X2))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(dbl(X)) -> dbl(active(X))
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(recip(X)) -> recip(active(X))
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(sqr(X)) -> sqr(active(X))
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 active(terms(X)) -> terms(active(X))
 add(mark(X1),X2) -> mark(add(X1,X2))
 add(ok(X1),ok(X2)) -> ok(add(X1,X2))
 add(X1,mark(X2)) -> mark(add(X1,X2))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 dbl(mark(X)) -> mark(dbl(X))
 dbl(ok(X)) -> ok(dbl(X))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 proper(add(X1,X2)) -> add(proper(X1),proper(X2))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(dbl(X)) -> dbl(proper(X))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(recip(X)) -> recip(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(sqr(X)) -> sqr(proper(X))
 proper(terms(X)) -> terms(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 recip(mark(X)) -> mark(recip(X))
 recip(ok(X)) -> ok(recip(X))
 s(ok(X)) -> ok(s(X))
 sqr(mark(X)) -> mark(sqr(X))
 sqr(ok(X)) -> ok(sqr(X))
 terms(mark(X)) -> mark(terms(X))
 terms(ok(X)) -> ok(terms(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Projection:
 pi(CONS) = 1

Problem 1.7: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(add(X1,X2)) -> add(active(X1),X2)
 active(add(X1,X2)) -> add(X1,active(X2))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(dbl(X)) -> dbl(active(X))
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(recip(X)) -> recip(active(X))
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(sqr(X)) -> sqr(active(X))
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 active(terms(X)) -> terms(active(X))
 add(mark(X1),X2) -> mark(add(X1,X2))
 add(ok(X1),ok(X2)) -> ok(add(X1,X2))
 add(X1,mark(X2)) -> mark(add(X1,X2))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 dbl(mark(X)) -> mark(dbl(X))
 dbl(ok(X)) -> ok(dbl(X))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 proper(add(X1,X2)) -> add(proper(X1),proper(X2))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(dbl(X)) -> dbl(proper(X))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(recip(X)) -> recip(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(sqr(X)) -> sqr(proper(X))
 proper(terms(X)) -> terms(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 recip(mark(X)) -> mark(recip(X))
 recip(ok(X)) -> ok(recip(X))
 s(ok(X)) -> ok(s(X))
 sqr(mark(X)) -> mark(sqr(X))
 sqr(ok(X)) -> ok(sqr(X))
 terms(mark(X)) -> mark(terms(X))
 terms(ok(X)) -> ok(terms(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.8: 

Subterm Processor:
-> Pairs:
 ADD(mark(X1),X2) -> ADD(X1,X2)
 ADD(ok(X1),ok(X2)) -> ADD(X1,X2)
 ADD(X1,mark(X2)) -> ADD(X1,X2)
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(add(X1,X2)) -> add(active(X1),X2)
 active(add(X1,X2)) -> add(X1,active(X2))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(dbl(X)) -> dbl(active(X))
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(recip(X)) -> recip(active(X))
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(sqr(X)) -> sqr(active(X))
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 active(terms(X)) -> terms(active(X))
 add(mark(X1),X2) -> mark(add(X1,X2))
 add(ok(X1),ok(X2)) -> ok(add(X1,X2))
 add(X1,mark(X2)) -> mark(add(X1,X2))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 dbl(mark(X)) -> mark(dbl(X))
 dbl(ok(X)) -> ok(dbl(X))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 proper(add(X1,X2)) -> add(proper(X1),proper(X2))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(dbl(X)) -> dbl(proper(X))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(recip(X)) -> recip(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(sqr(X)) -> sqr(proper(X))
 proper(terms(X)) -> terms(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 recip(mark(X)) -> mark(recip(X))
 recip(ok(X)) -> ok(recip(X))
 s(ok(X)) -> ok(s(X))
 sqr(mark(X)) -> mark(sqr(X))
 sqr(ok(X)) -> ok(sqr(X))
 terms(mark(X)) -> mark(terms(X))
 terms(ok(X)) -> ok(terms(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Projection:
 pi(ADD) = 1

Problem 1.8: 

SCC Processor:
-> Pairs:
 ADD(X1,mark(X2)) -> ADD(X1,X2)
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(add(X1,X2)) -> add(active(X1),X2)
 active(add(X1,X2)) -> add(X1,active(X2))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(dbl(X)) -> dbl(active(X))
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(recip(X)) -> recip(active(X))
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(sqr(X)) -> sqr(active(X))
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 active(terms(X)) -> terms(active(X))
 add(mark(X1),X2) -> mark(add(X1,X2))
 add(ok(X1),ok(X2)) -> ok(add(X1,X2))
 add(X1,mark(X2)) -> mark(add(X1,X2))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 dbl(mark(X)) -> mark(dbl(X))
 dbl(ok(X)) -> ok(dbl(X))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 proper(add(X1,X2)) -> add(proper(X1),proper(X2))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(dbl(X)) -> dbl(proper(X))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(recip(X)) -> recip(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(sqr(X)) -> sqr(proper(X))
 proper(terms(X)) -> terms(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 recip(mark(X)) -> mark(recip(X))
 recip(ok(X)) -> ok(recip(X))
 s(ok(X)) -> ok(s(X))
 sqr(mark(X)) -> mark(sqr(X))
 sqr(ok(X)) -> ok(sqr(X))
 terms(mark(X)) -> mark(terms(X))
 terms(ok(X)) -> ok(terms(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ADD(X1,mark(X2)) -> ADD(X1,X2)
->->-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(add(X1,X2)) -> add(active(X1),X2)
 active(add(X1,X2)) -> add(X1,active(X2))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(dbl(X)) -> dbl(active(X))
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(recip(X)) -> recip(active(X))
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(sqr(X)) -> sqr(active(X))
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 active(terms(X)) -> terms(active(X))
 add(mark(X1),X2) -> mark(add(X1,X2))
 add(ok(X1),ok(X2)) -> ok(add(X1,X2))
 add(X1,mark(X2)) -> mark(add(X1,X2))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 dbl(mark(X)) -> mark(dbl(X))
 dbl(ok(X)) -> ok(dbl(X))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 proper(add(X1,X2)) -> add(proper(X1),proper(X2))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(dbl(X)) -> dbl(proper(X))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(recip(X)) -> recip(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(sqr(X)) -> sqr(proper(X))
 proper(terms(X)) -> terms(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 recip(mark(X)) -> mark(recip(X))
 recip(ok(X)) -> ok(recip(X))
 s(ok(X)) -> ok(s(X))
 sqr(mark(X)) -> mark(sqr(X))
 sqr(ok(X)) -> ok(sqr(X))
 terms(mark(X)) -> mark(terms(X))
 terms(ok(X)) -> ok(terms(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))

Problem 1.8: 

Subterm Processor:
-> Pairs:
 ADD(X1,mark(X2)) -> ADD(X1,X2)
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(add(X1,X2)) -> add(active(X1),X2)
 active(add(X1,X2)) -> add(X1,active(X2))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(dbl(X)) -> dbl(active(X))
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(recip(X)) -> recip(active(X))
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(sqr(X)) -> sqr(active(X))
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 active(terms(X)) -> terms(active(X))
 add(mark(X1),X2) -> mark(add(X1,X2))
 add(ok(X1),ok(X2)) -> ok(add(X1,X2))
 add(X1,mark(X2)) -> mark(add(X1,X2))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 dbl(mark(X)) -> mark(dbl(X))
 dbl(ok(X)) -> ok(dbl(X))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 proper(add(X1,X2)) -> add(proper(X1),proper(X2))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(dbl(X)) -> dbl(proper(X))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(recip(X)) -> recip(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(sqr(X)) -> sqr(proper(X))
 proper(terms(X)) -> terms(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 recip(mark(X)) -> mark(recip(X))
 recip(ok(X)) -> ok(recip(X))
 s(ok(X)) -> ok(s(X))
 sqr(mark(X)) -> mark(sqr(X))
 sqr(ok(X)) -> ok(sqr(X))
 terms(mark(X)) -> mark(terms(X))
 terms(ok(X)) -> ok(terms(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Projection:
 pi(ADD) = 2

Problem 1.8: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(add(X1,X2)) -> add(active(X1),X2)
 active(add(X1,X2)) -> add(X1,active(X2))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(dbl(X)) -> dbl(active(X))
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(recip(X)) -> recip(active(X))
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(sqr(X)) -> sqr(active(X))
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 active(terms(X)) -> terms(active(X))
 add(mark(X1),X2) -> mark(add(X1,X2))
 add(ok(X1),ok(X2)) -> ok(add(X1,X2))
 add(X1,mark(X2)) -> mark(add(X1,X2))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 dbl(mark(X)) -> mark(dbl(X))
 dbl(ok(X)) -> ok(dbl(X))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 proper(add(X1,X2)) -> add(proper(X1),proper(X2))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(dbl(X)) -> dbl(proper(X))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(recip(X)) -> recip(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(sqr(X)) -> sqr(proper(X))
 proper(terms(X)) -> terms(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 recip(mark(X)) -> mark(recip(X))
 recip(ok(X)) -> ok(recip(X))
 s(ok(X)) -> ok(s(X))
 sqr(mark(X)) -> mark(sqr(X))
 sqr(ok(X)) -> ok(sqr(X))
 terms(mark(X)) -> mark(terms(X))
 terms(ok(X)) -> ok(terms(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.9: 

Subterm Processor:
-> Pairs:
 PROPER(add(X1,X2)) -> PROPER(X1)
 PROPER(add(X1,X2)) -> PROPER(X2)
 PROPER(cons(X1,X2)) -> PROPER(X1)
 PROPER(cons(X1,X2)) -> PROPER(X2)
 PROPER(dbl(X)) -> PROPER(X)
 PROPER(first(X1,X2)) -> PROPER(X1)
 PROPER(first(X1,X2)) -> PROPER(X2)
 PROPER(recip(X)) -> PROPER(X)
 PROPER(s(X)) -> PROPER(X)
 PROPER(sqr(X)) -> PROPER(X)
 PROPER(terms(X)) -> PROPER(X)
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(add(X1,X2)) -> add(active(X1),X2)
 active(add(X1,X2)) -> add(X1,active(X2))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(dbl(X)) -> dbl(active(X))
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(recip(X)) -> recip(active(X))
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(sqr(X)) -> sqr(active(X))
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 active(terms(X)) -> terms(active(X))
 add(mark(X1),X2) -> mark(add(X1,X2))
 add(ok(X1),ok(X2)) -> ok(add(X1,X2))
 add(X1,mark(X2)) -> mark(add(X1,X2))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 dbl(mark(X)) -> mark(dbl(X))
 dbl(ok(X)) -> ok(dbl(X))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 proper(add(X1,X2)) -> add(proper(X1),proper(X2))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(dbl(X)) -> dbl(proper(X))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(recip(X)) -> recip(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(sqr(X)) -> sqr(proper(X))
 proper(terms(X)) -> terms(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 recip(mark(X)) -> mark(recip(X))
 recip(ok(X)) -> ok(recip(X))
 s(ok(X)) -> ok(s(X))
 sqr(mark(X)) -> mark(sqr(X))
 sqr(ok(X)) -> ok(sqr(X))
 terms(mark(X)) -> mark(terms(X))
 terms(ok(X)) -> ok(terms(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Projection:
 pi(PROPER) = 1

Problem 1.9: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(add(X1,X2)) -> add(active(X1),X2)
 active(add(X1,X2)) -> add(X1,active(X2))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(dbl(X)) -> dbl(active(X))
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(recip(X)) -> recip(active(X))
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(sqr(X)) -> sqr(active(X))
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 active(terms(X)) -> terms(active(X))
 add(mark(X1),X2) -> mark(add(X1,X2))
 add(ok(X1),ok(X2)) -> ok(add(X1,X2))
 add(X1,mark(X2)) -> mark(add(X1,X2))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 dbl(mark(X)) -> mark(dbl(X))
 dbl(ok(X)) -> ok(dbl(X))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 proper(add(X1,X2)) -> add(proper(X1),proper(X2))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(dbl(X)) -> dbl(proper(X))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(recip(X)) -> recip(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(sqr(X)) -> sqr(proper(X))
 proper(terms(X)) -> terms(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 recip(mark(X)) -> mark(recip(X))
 recip(ok(X)) -> ok(recip(X))
 s(ok(X)) -> ok(s(X))
 sqr(mark(X)) -> mark(sqr(X))
 sqr(ok(X)) -> ok(sqr(X))
 terms(mark(X)) -> mark(terms(X))
 terms(ok(X)) -> ok(terms(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.10: 

Subterm Processor:
-> Pairs:
 ACTIVE(add(X1,X2)) -> ACTIVE(X1)
 ACTIVE(add(X1,X2)) -> ACTIVE(X2)
 ACTIVE(cons(X1,X2)) -> ACTIVE(X1)
 ACTIVE(dbl(X)) -> ACTIVE(X)
 ACTIVE(first(X1,X2)) -> ACTIVE(X1)
 ACTIVE(first(X1,X2)) -> ACTIVE(X2)
 ACTIVE(recip(X)) -> ACTIVE(X)
 ACTIVE(sqr(X)) -> ACTIVE(X)
 ACTIVE(terms(X)) -> ACTIVE(X)
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(add(X1,X2)) -> add(active(X1),X2)
 active(add(X1,X2)) -> add(X1,active(X2))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(dbl(X)) -> dbl(active(X))
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(recip(X)) -> recip(active(X))
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(sqr(X)) -> sqr(active(X))
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 active(terms(X)) -> terms(active(X))
 add(mark(X1),X2) -> mark(add(X1,X2))
 add(ok(X1),ok(X2)) -> ok(add(X1,X2))
 add(X1,mark(X2)) -> mark(add(X1,X2))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 dbl(mark(X)) -> mark(dbl(X))
 dbl(ok(X)) -> ok(dbl(X))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 proper(add(X1,X2)) -> add(proper(X1),proper(X2))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(dbl(X)) -> dbl(proper(X))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(recip(X)) -> recip(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(sqr(X)) -> sqr(proper(X))
 proper(terms(X)) -> terms(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 recip(mark(X)) -> mark(recip(X))
 recip(ok(X)) -> ok(recip(X))
 s(ok(X)) -> ok(s(X))
 sqr(mark(X)) -> mark(sqr(X))
 sqr(ok(X)) -> ok(sqr(X))
 terms(mark(X)) -> mark(terms(X))
 terms(ok(X)) -> ok(terms(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Projection:
 pi(ACTIVE) = 1

Problem 1.10: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(add(X1,X2)) -> add(active(X1),X2)
 active(add(X1,X2)) -> add(X1,active(X2))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(dbl(X)) -> dbl(active(X))
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(recip(X)) -> recip(active(X))
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(sqr(X)) -> sqr(active(X))
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 active(terms(X)) -> terms(active(X))
 add(mark(X1),X2) -> mark(add(X1,X2))
 add(ok(X1),ok(X2)) -> ok(add(X1,X2))
 add(X1,mark(X2)) -> mark(add(X1,X2))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 dbl(mark(X)) -> mark(dbl(X))
 dbl(ok(X)) -> ok(dbl(X))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 proper(add(X1,X2)) -> add(proper(X1),proper(X2))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(dbl(X)) -> dbl(proper(X))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(recip(X)) -> recip(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(sqr(X)) -> sqr(proper(X))
 proper(terms(X)) -> terms(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 recip(mark(X)) -> mark(recip(X))
 recip(ok(X)) -> ok(recip(X))
 s(ok(X)) -> ok(s(X))
 sqr(mark(X)) -> mark(sqr(X))
 sqr(ok(X)) -> ok(sqr(X))
 terms(mark(X)) -> mark(terms(X))
 terms(ok(X)) -> ok(terms(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.11: 

Reduction Pair Processor:
-> Pairs:
 TOP(mark(X)) -> TOP(proper(X))
 TOP(ok(X)) -> TOP(active(X))
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(add(X1,X2)) -> add(active(X1),X2)
 active(add(X1,X2)) -> add(X1,active(X2))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(dbl(X)) -> dbl(active(X))
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(recip(X)) -> recip(active(X))
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(sqr(X)) -> sqr(active(X))
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 active(terms(X)) -> terms(active(X))
 add(mark(X1),X2) -> mark(add(X1,X2))
 add(ok(X1),ok(X2)) -> ok(add(X1,X2))
 add(X1,mark(X2)) -> mark(add(X1,X2))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 dbl(mark(X)) -> mark(dbl(X))
 dbl(ok(X)) -> ok(dbl(X))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 proper(add(X1,X2)) -> add(proper(X1),proper(X2))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(dbl(X)) -> dbl(proper(X))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(recip(X)) -> recip(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(sqr(X)) -> sqr(proper(X))
 proper(terms(X)) -> terms(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 recip(mark(X)) -> mark(recip(X))
 recip(ok(X)) -> ok(recip(X))
 s(ok(X)) -> ok(s(X))
 sqr(mark(X)) -> mark(sqr(X))
 sqr(ok(X)) -> ok(sqr(X))
 terms(mark(X)) -> mark(terms(X))
 terms(ok(X)) -> ok(terms(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
-> Usable rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(add(X1,X2)) -> add(active(X1),X2)
 active(add(X1,X2)) -> add(X1,active(X2))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(dbl(X)) -> dbl(active(X))
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(recip(X)) -> recip(active(X))
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(sqr(X)) -> sqr(active(X))
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 active(terms(X)) -> terms(active(X))
 add(mark(X1),X2) -> mark(add(X1,X2))
 add(ok(X1),ok(X2)) -> ok(add(X1,X2))
 add(X1,mark(X2)) -> mark(add(X1,X2))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 dbl(mark(X)) -> mark(dbl(X))
 dbl(ok(X)) -> ok(dbl(X))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 proper(add(X1,X2)) -> add(proper(X1),proper(X2))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(dbl(X)) -> dbl(proper(X))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(recip(X)) -> recip(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(sqr(X)) -> sqr(proper(X))
 proper(terms(X)) -> terms(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 recip(mark(X)) -> mark(recip(X))
 recip(ok(X)) -> ok(recip(X))
 s(ok(X)) -> ok(s(X))
 sqr(mark(X)) -> mark(sqr(X))
 sqr(ok(X)) -> ok(sqr(X))
 terms(mark(X)) -> mark(terms(X))
 terms(ok(X)) -> ok(terms(X))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[active](X) = X
[add](X1,X2) = 2.X1 + 2.X2 + 2
[cons](X1,X2) = X1
[dbl](X) = 2.X + 2
[first](X1,X2) = 2.X1 + X2 + 2
[proper](X) = X
[recip](X) = X
[s](X) = 2
[sqr](X) = 2.X
[terms](X) = 2.X + 2
[top](X) = 0
[num0] = 2
[fSNonEmpty] = 0
[mark](X) = X + 2
[nil] = 2
[ok](X) = X
[ACTIVE](X) = 0
[ADD](X1,X2) = 0
[CONS](X1,X2) = 0
[DBL](X) = 0
[FIRST](X1,X2) = 0
[PROPER](X) = 0
[RECIP](X) = 0
[S](X) = 0
[SQR](X) = 0
[TERMS](X) = 0
[TOP](X) = 2.X

Problem 1.11: 

SCC Processor:
-> Pairs:
 TOP(ok(X)) -> TOP(active(X))
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(add(X1,X2)) -> add(active(X1),X2)
 active(add(X1,X2)) -> add(X1,active(X2))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(dbl(X)) -> dbl(active(X))
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(recip(X)) -> recip(active(X))
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(sqr(X)) -> sqr(active(X))
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 active(terms(X)) -> terms(active(X))
 add(mark(X1),X2) -> mark(add(X1,X2))
 add(ok(X1),ok(X2)) -> ok(add(X1,X2))
 add(X1,mark(X2)) -> mark(add(X1,X2))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 dbl(mark(X)) -> mark(dbl(X))
 dbl(ok(X)) -> ok(dbl(X))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 proper(add(X1,X2)) -> add(proper(X1),proper(X2))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(dbl(X)) -> dbl(proper(X))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(recip(X)) -> recip(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(sqr(X)) -> sqr(proper(X))
 proper(terms(X)) -> terms(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 recip(mark(X)) -> mark(recip(X))
 recip(ok(X)) -> ok(recip(X))
 s(ok(X)) -> ok(s(X))
 sqr(mark(X)) -> mark(sqr(X))
 sqr(ok(X)) -> ok(sqr(X))
 terms(mark(X)) -> mark(terms(X))
 terms(ok(X)) -> ok(terms(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 TOP(ok(X)) -> TOP(active(X))
->->-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(add(X1,X2)) -> add(active(X1),X2)
 active(add(X1,X2)) -> add(X1,active(X2))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(dbl(X)) -> dbl(active(X))
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(recip(X)) -> recip(active(X))
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(sqr(X)) -> sqr(active(X))
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 active(terms(X)) -> terms(active(X))
 add(mark(X1),X2) -> mark(add(X1,X2))
 add(ok(X1),ok(X2)) -> ok(add(X1,X2))
 add(X1,mark(X2)) -> mark(add(X1,X2))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 dbl(mark(X)) -> mark(dbl(X))
 dbl(ok(X)) -> ok(dbl(X))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 proper(add(X1,X2)) -> add(proper(X1),proper(X2))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(dbl(X)) -> dbl(proper(X))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(recip(X)) -> recip(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(sqr(X)) -> sqr(proper(X))
 proper(terms(X)) -> terms(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 recip(mark(X)) -> mark(recip(X))
 recip(ok(X)) -> ok(recip(X))
 s(ok(X)) -> ok(s(X))
 sqr(mark(X)) -> mark(sqr(X))
 sqr(ok(X)) -> ok(sqr(X))
 terms(mark(X)) -> mark(terms(X))
 terms(ok(X)) -> ok(terms(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))

Problem 1.11: 

Reduction Pair Processor:
-> Pairs:
 TOP(ok(X)) -> TOP(active(X))
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(add(X1,X2)) -> add(active(X1),X2)
 active(add(X1,X2)) -> add(X1,active(X2))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(dbl(X)) -> dbl(active(X))
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(recip(X)) -> recip(active(X))
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(sqr(X)) -> sqr(active(X))
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 active(terms(X)) -> terms(active(X))
 add(mark(X1),X2) -> mark(add(X1,X2))
 add(ok(X1),ok(X2)) -> ok(add(X1,X2))
 add(X1,mark(X2)) -> mark(add(X1,X2))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 dbl(mark(X)) -> mark(dbl(X))
 dbl(ok(X)) -> ok(dbl(X))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 proper(add(X1,X2)) -> add(proper(X1),proper(X2))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(dbl(X)) -> dbl(proper(X))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(recip(X)) -> recip(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(sqr(X)) -> sqr(proper(X))
 proper(terms(X)) -> terms(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 recip(mark(X)) -> mark(recip(X))
 recip(ok(X)) -> ok(recip(X))
 s(ok(X)) -> ok(s(X))
 sqr(mark(X)) -> mark(sqr(X))
 sqr(ok(X)) -> ok(sqr(X))
 terms(mark(X)) -> mark(terms(X))
 terms(ok(X)) -> ok(terms(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
-> Usable rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(add(X1,X2)) -> add(active(X1),X2)
 active(add(X1,X2)) -> add(X1,active(X2))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(dbl(X)) -> dbl(active(X))
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(recip(X)) -> recip(active(X))
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(sqr(X)) -> sqr(active(X))
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 active(terms(X)) -> terms(active(X))
 add(mark(X1),X2) -> mark(add(X1,X2))
 add(ok(X1),ok(X2)) -> ok(add(X1,X2))
 add(X1,mark(X2)) -> mark(add(X1,X2))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 dbl(mark(X)) -> mark(dbl(X))
 dbl(ok(X)) -> ok(dbl(X))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 recip(mark(X)) -> mark(recip(X))
 recip(ok(X)) -> ok(recip(X))
 s(ok(X)) -> ok(s(X))
 sqr(mark(X)) -> mark(sqr(X))
 sqr(ok(X)) -> ok(sqr(X))
 terms(mark(X)) -> mark(terms(X))
 terms(ok(X)) -> ok(terms(X))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[active](X) = 2.X + 1
[add](X1,X2) = X2
[cons](X1,X2) = 2.X1 + 1
[dbl](X) = X
[first](X1,X2) = 2.X1 + X2 + 1
[proper](X) = 0
[recip](X) = X
[s](X) = 2.X
[sqr](X) = X
[terms](X) = X
[top](X) = 0
[num0] = 2
[fSNonEmpty] = 0
[mark](X) = X
[nil] = 2
[ok](X) = 2.X + 2
[ACTIVE](X) = 0
[ADD](X1,X2) = 0
[CONS](X1,X2) = 0
[DBL](X) = 0
[FIRST](X1,X2) = 0
[PROPER](X) = 0
[RECIP](X) = 0
[S](X) = 0
[SQR](X) = 0
[TERMS](X) = 0
[TOP](X) = X

Problem 1.11: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(add(X1,X2)) -> add(active(X1),X2)
 active(add(X1,X2)) -> add(X1,active(X2))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(dbl(X)) -> dbl(active(X))
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(recip(X)) -> recip(active(X))
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(sqr(X)) -> sqr(active(X))
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 active(terms(X)) -> terms(active(X))
 add(mark(X1),X2) -> mark(add(X1,X2))
 add(ok(X1),ok(X2)) -> ok(add(X1,X2))
 add(X1,mark(X2)) -> mark(add(X1,X2))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 dbl(mark(X)) -> mark(dbl(X))
 dbl(ok(X)) -> ok(dbl(X))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 proper(add(X1,X2)) -> add(proper(X1),proper(X2))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(dbl(X)) -> dbl(proper(X))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(recip(X)) -> recip(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(sqr(X)) -> sqr(proper(X))
 proper(terms(X)) -> terms(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 recip(mark(X)) -> mark(recip(X))
 recip(ok(X)) -> ok(recip(X))
 s(ok(X)) -> ok(s(X))
 sqr(mark(X)) -> mark(sqr(X))
 sqr(ok(X)) -> ok(sqr(X))
 terms(mark(X)) -> mark(terms(X))
 terms(ok(X)) -> ok(terms(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
