YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/rep72.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) AAECC Innermost [EQUIVALENT, 0 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 0 ms]
(4) QDP
(5) UsableRulesProof [EQUIVALENT, 0 ms]
(6) QDP
(7) QReductionProof [EQUIVALENT, 0 ms]
(8) QDP
(9) QDPToSRSProof [SOUND, 0 ms]
(10) QTRS
(11) DependencyPairsProof [EQUIVALENT, 0 ms]
(12) QDP
(13) MNOCProof [EQUIVALENT, 0 ms]
(14) QDP
(15) MRRProof [EQUIVALENT, 0 ms]
(16) QDP
(17) PisEmptyProof [EQUIVALENT, 0 ms]
(18) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(x, a(b(y))) -> f(a(a(b(x))), y)
   f(a(x), y) -> f(x, a(y))
   f(b(x), y) -> f(x, b(y))

Q is empty.

----------------------------------------

(1) AAECC Innermost (EQUIVALENT)
We have applied [NOC,AAECCNOC] to switch to innermost. The TRS R 1 is none

The TRS R 2 is 
   f(x, a(b(y))) -> f(a(a(b(x))), y)
   f(a(x), y) -> f(x, a(y))
   f(b(x), y) -> f(x, b(y))

The signature Sigma is {f_2}
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(x, a(b(y))) -> f(a(a(b(x))), y)
   f(a(x), y) -> f(x, a(y))
   f(b(x), y) -> f(x, b(y))

The set Q consists of the following terms:

   f(x0, a(b(x1)))
   f(a(x0), x1)
   f(b(x0), x1)


----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(x, a(b(y))) -> F(a(a(b(x))), y)
   F(a(x), y) -> F(x, a(y))
   F(b(x), y) -> F(x, b(y))

The TRS R consists of the following rules:

   f(x, a(b(y))) -> f(a(a(b(x))), y)
   f(a(x), y) -> f(x, a(y))
   f(b(x), y) -> f(x, b(y))

The set Q consists of the following terms:

   f(x0, a(b(x1)))
   f(a(x0), x1)
   f(b(x0), x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(x, a(b(y))) -> F(a(a(b(x))), y)
   F(a(x), y) -> F(x, a(y))
   F(b(x), y) -> F(x, b(y))

R is empty.
The set Q consists of the following terms:

   f(x0, a(b(x1)))
   f(a(x0), x1)
   f(b(x0), x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   f(x0, a(b(x1)))
   f(a(x0), x1)
   f(b(x0), x1)


----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(x, a(b(y))) -> F(a(a(b(x))), y)
   F(a(x), y) -> F(x, a(y))
   F(b(x), y) -> F(x, b(y))

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) QDPToSRSProof (SOUND)
The finiteness of this DP problem is implied by strong termination of a SRS due to [UNKNOWN].

----------------------------------------

(10)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a(b(x)) -> b(a(a(x)))

Q is empty.

----------------------------------------

(11) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(b(x)) -> A(a(x))
   A(b(x)) -> A(x)

The TRS R consists of the following rules:

   a(b(x)) -> b(a(a(x)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) MNOCProof (EQUIVALENT)
We use the modular non-overlap check [LPAR04] to enlarge Q to all left-hand sides of R.
----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(b(x)) -> A(a(x))
   A(b(x)) -> A(x)

The TRS R consists of the following rules:

   a(b(x)) -> b(a(a(x)))

The set Q consists of the following terms:

   a(b(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) MRRProof (EQUIVALENT)
By using the rule removal processor [LPAR04] with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented.

Strictly oriented dependency pairs:

   A(b(x)) -> A(a(x))
   A(b(x)) -> A(x)

Strictly oriented rules of the TRS R:

   a(b(x)) -> b(a(a(x)))

Used ordering: Knuth-Bendix order [KBO] with precedence:a_1 > A_1 > b_1

and weight map:

   a_1=0
   b_1=1
   A_1=1

The variable weight is 1

----------------------------------------

(16)
Obligation:
Q DP problem:
P is empty.
R is empty.
The set Q consists of the following terms:

   a(b(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(18)
YES
