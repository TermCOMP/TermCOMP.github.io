YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/pVkvf.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 0 ms]
(2) QDP
(3) DependencyGraphProof [EQUIVALENT, 0 ms]
(4) QDP
(5) QDPOrderProof [EQUIVALENT, 270 ms]
(6) QDP
(7) QDPSizeChangeProof [EQUIVALENT, 0 ms]
(8) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   comp(s, id) -> s
   cons(one, shift) -> id
   cons(comp(one, s), comp(shift, s)) -> s
   comp(one, cons(s, t)) -> s
   comp(shift, cons(s, t)) -> t
   comp(abs(s), t) -> abs(comp(s, cons(one, comp(t, shift))))
   comp(cons(s, t), u) -> cons(comp(s, u), comp(t, u))
   comp(id, s) -> s
   comp(comp(s, t), u) -> comp(s, comp(t, u))

Q is empty.

----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COMP(abs(s), t) -> COMP(s, cons(one, comp(t, shift)))
   COMP(abs(s), t) -> CONS(one, comp(t, shift))
   COMP(abs(s), t) -> COMP(t, shift)
   COMP(cons(s, t), u) -> CONS(comp(s, u), comp(t, u))
   COMP(cons(s, t), u) -> COMP(s, u)
   COMP(cons(s, t), u) -> COMP(t, u)
   COMP(comp(s, t), u) -> COMP(s, comp(t, u))
   COMP(comp(s, t), u) -> COMP(t, u)

The TRS R consists of the following rules:

   comp(s, id) -> s
   cons(one, shift) -> id
   cons(comp(one, s), comp(shift, s)) -> s
   comp(one, cons(s, t)) -> s
   comp(shift, cons(s, t)) -> t
   comp(abs(s), t) -> abs(comp(s, cons(one, comp(t, shift))))
   comp(cons(s, t), u) -> cons(comp(s, u), comp(t, u))
   comp(id, s) -> s
   comp(comp(s, t), u) -> comp(s, comp(t, u))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 2 less nodes.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COMP(abs(s), t) -> COMP(t, shift)
   COMP(abs(s), t) -> COMP(s, cons(one, comp(t, shift)))
   COMP(cons(s, t), u) -> COMP(s, u)
   COMP(cons(s, t), u) -> COMP(t, u)
   COMP(comp(s, t), u) -> COMP(s, comp(t, u))
   COMP(comp(s, t), u) -> COMP(t, u)

The TRS R consists of the following rules:

   comp(s, id) -> s
   cons(one, shift) -> id
   cons(comp(one, s), comp(shift, s)) -> s
   comp(one, cons(s, t)) -> s
   comp(shift, cons(s, t)) -> t
   comp(abs(s), t) -> abs(comp(s, cons(one, comp(t, shift))))
   comp(cons(s, t), u) -> cons(comp(s, u), comp(t, u))
   comp(id, s) -> s
   comp(comp(s, t), u) -> comp(s, comp(t, u))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   COMP(abs(s), t) -> COMP(t, shift)
   COMP(abs(s), t) -> COMP(s, cons(one, comp(t, shift)))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation with max and min functions [POLO,MAXPOLO]:

   POL(COMP(x_1, x_2)) = x_1 + x_2
   POL(abs(x_1)) = 1 + x_1
   POL(comp(x_1, x_2)) = x_1 + x_2
   POL(cons(x_1, x_2)) = max(x_1, x_2)
   POL(id) = 0
   POL(one) = 0
   POL(shift) = 0

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   comp(abs(s), t) -> abs(comp(s, cons(one, comp(t, shift))))
   comp(cons(s, t), u) -> cons(comp(s, u), comp(t, u))
   comp(id, s) -> s
   comp(comp(s, t), u) -> comp(s, comp(t, u))
   cons(one, shift) -> id
   comp(s, id) -> s
   comp(one, cons(s, t)) -> s
   comp(shift, cons(s, t)) -> t
   cons(comp(one, s), comp(shift, s)) -> s


----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COMP(cons(s, t), u) -> COMP(s, u)
   COMP(cons(s, t), u) -> COMP(t, u)
   COMP(comp(s, t), u) -> COMP(s, comp(t, u))
   COMP(comp(s, t), u) -> COMP(t, u)

The TRS R consists of the following rules:

   comp(s, id) -> s
   cons(one, shift) -> id
   cons(comp(one, s), comp(shift, s)) -> s
   comp(one, cons(s, t)) -> s
   comp(shift, cons(s, t)) -> t
   comp(abs(s), t) -> abs(comp(s, cons(one, comp(t, shift))))
   comp(cons(s, t), u) -> cons(comp(s, u), comp(t, u))
   comp(id, s) -> s
   comp(comp(s, t), u) -> comp(s, comp(t, u))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*COMP(cons(s, t), u) -> COMP(s, u)
The graph contains the following edges 1 > 1, 2 >= 2


*COMP(cons(s, t), u) -> COMP(t, u)
The graph contains the following edges 1 > 1, 2 >= 2


*COMP(comp(s, t), u) -> COMP(s, comp(t, u))
The graph contains the following edges 1 > 1


*COMP(comp(s, t), u) -> COMP(t, u)
The graph contains the following edges 1 > 1, 2 >= 2


----------------------------------------

(8)
YES
