YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/xRMDp.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) AAECC Innermost [EQUIVALENT, 0 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 0 ms]
(4) QDP
(5) DependencyGraphProof [EQUIVALENT, 0 ms]
(6) QDP
(7) UsableRulesProof [EQUIVALENT, 0 ms]
(8) QDP
(9) QReductionProof [EQUIVALENT, 0 ms]
(10) QDP
(11) TransformationProof [EQUIVALENT, 0 ms]
(12) QDP
(13) DependencyGraphProof [EQUIVALENT, 0 ms]
(14) QDP
(15) UsableRulesProof [EQUIVALENT, 0 ms]
(16) QDP
(17) TransformationProof [EQUIVALENT, 0 ms]
(18) QDP
(19) DependencyGraphProof [EQUIVALENT, 0 ms]
(20) TRUE


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(0, 1, x) -> f(h(x), h(x), x)
   h(0) -> 0
   h(g(x, y)) -> y

Q is empty.

----------------------------------------

(1) AAECC Innermost (EQUIVALENT)
We have applied [NOC,AAECCNOC] to switch to innermost. The TRS R 1 is 
   h(0) -> 0
   h(g(x, y)) -> y

The TRS R 2 is 
   f(0, 1, x) -> f(h(x), h(x), x)

The signature Sigma is {f_3}
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(0, 1, x) -> f(h(x), h(x), x)
   h(0) -> 0
   h(g(x, y)) -> y

The set Q consists of the following terms:

   f(0, 1, x0)
   h(0)
   h(g(x0, x1))


----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0, 1, x) -> F(h(x), h(x), x)
   F(0, 1, x) -> H(x)

The TRS R consists of the following rules:

   f(0, 1, x) -> f(h(x), h(x), x)
   h(0) -> 0
   h(g(x, y)) -> y

The set Q consists of the following terms:

   f(0, 1, x0)
   h(0)
   h(g(x0, x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0, 1, x) -> F(h(x), h(x), x)

The TRS R consists of the following rules:

   f(0, 1, x) -> f(h(x), h(x), x)
   h(0) -> 0
   h(g(x, y)) -> y

The set Q consists of the following terms:

   f(0, 1, x0)
   h(0)
   h(g(x0, x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0, 1, x) -> F(h(x), h(x), x)

The TRS R consists of the following rules:

   h(0) -> 0
   h(g(x, y)) -> y

The set Q consists of the following terms:

   f(0, 1, x0)
   h(0)
   h(g(x0, x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   f(0, 1, x0)


----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0, 1, x) -> F(h(x), h(x), x)

The TRS R consists of the following rules:

   h(0) -> 0
   h(g(x, y)) -> y

The set Q consists of the following terms:

   h(0)
   h(g(x0, x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0, 1, x) -> F(h(x), h(x), x) at position [0] we obtained the following new rules [LPAR04]:

   (F(0, 1, 0) -> F(0, h(0), 0),F(0, 1, 0) -> F(0, h(0), 0))
   (F(0, 1, g(x0, x1)) -> F(x1, h(g(x0, x1)), g(x0, x1)),F(0, 1, g(x0, x1)) -> F(x1, h(g(x0, x1)), g(x0, x1)))


----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0, 1, 0) -> F(0, h(0), 0)
   F(0, 1, g(x0, x1)) -> F(x1, h(g(x0, x1)), g(x0, x1))

The TRS R consists of the following rules:

   h(0) -> 0
   h(g(x, y)) -> y

The set Q consists of the following terms:

   h(0)
   h(g(x0, x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0, 1, g(x0, x1)) -> F(x1, h(g(x0, x1)), g(x0, x1))

The TRS R consists of the following rules:

   h(0) -> 0
   h(g(x, y)) -> y

The set Q consists of the following terms:

   h(0)
   h(g(x0, x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0, 1, g(x0, x1)) -> F(x1, h(g(x0, x1)), g(x0, x1))

The TRS R consists of the following rules:

   h(g(x, y)) -> y

The set Q consists of the following terms:

   h(0)
   h(g(x0, x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule F(0, 1, g(x0, x1)) -> F(x1, h(g(x0, x1)), g(x0, x1)) at position [1] we obtained the following new rules [LPAR04]:

   (F(0, 1, g(x0, x1)) -> F(x1, x1, g(x0, x1)),F(0, 1, g(x0, x1)) -> F(x1, x1, g(x0, x1)))


----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0, 1, g(x0, x1)) -> F(x1, x1, g(x0, x1))

The TRS R consists of the following rules:

   h(g(x, y)) -> y

The set Q consists of the following terms:

   h(0)
   h(g(x0, x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 1 less node.
----------------------------------------

(20)
TRUE
