YES

Problem 1: 

(VAR vu95NonEmpty x y)
(RULES
f(num0,num1,x) -> f(h(x),h(x),x)
h(num0) -> num0
h(g(x,y)) -> y
)


Problem 1: 

Innermost Equivalent Processor:
-> Rules:
 f(num0,num1,x) -> f(h(x),h(x),x)
 h(num0) -> num0
 h(g(x,y)) -> y
-> The term rewriting system is non-overlaping or locally confluent overlay system. Therefore, innermost termination implies termination.
 

Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 F(num0,num1,x) -> F(h(x),h(x),x)
 F(num0,num1,x) -> H(x)
-> Rules:
 f(num0,num1,x) -> f(h(x),h(x),x)
 h(num0) -> num0
 h(g(x,y)) -> y

Problem 1: 

SCC Processor:
-> Pairs:
 F(num0,num1,x) -> F(h(x),h(x),x)
 F(num0,num1,x) -> H(x)
-> Rules:
 f(num0,num1,x) -> f(h(x),h(x),x)
 h(num0) -> num0
 h(g(x,y)) -> y
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 F(num0,num1,x) -> F(h(x),h(x),x)
->->-> Rules:
 f(num0,num1,x) -> f(h(x),h(x),x)
 h(num0) -> num0
 h(g(x,y)) -> y

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 F(num0,num1,x) -> F(h(x),h(x),x)
-> Rules:
 f(num0,num1,x) -> f(h(x),h(x),x)
 h(num0) -> num0
 h(g(x,y)) -> y
-> Usable rules:
 h(num0) -> num0
 h(g(x,y)) -> y
->AGES Output:
 
Model Results

System:
mod InTheory is
sort S .
sort Bool .
sort PSharp .


op _->*_ : S S -> Bool [m = 2] .
op _->_ : S S -> Bool [m = 2] .
op f : S S S -> S .
op h : S -> S .
op num0 :  -> S .
op num1 :  -> S .
op fSNonEmpty :  -> S .
op g : S S -> S .
op _->P_ : PSharp PSharp -> Bool .
op F : S S S -> PSharp .
op H : S -> PSharp .
op gtrsim : PSharp PSharp -> Bool .
op succeq : PSharp PSharp -> Bool .
op sqsupset : PSharp PSharp -> Bool [m = 1 wellfounded] .

endm


Property:
gtrsim(x,y) /\ sqsupset(y,z) => sqsupset(x,z)
succeq(x,y) /\ sqsupset(y,z) => sqsupset(x,z)
gtrsim(x,y) /\ succeq(y,z) => gtrsim(x,z)
x ->R y => gtrsim(x,y)
_->P_(x,y) => gtrsim(x,y) \/ succeq(x,y) \/ sqsupset(x,y)
x1 ->R y1 => h(x1) ->R h(y1)
x1 ->R y1 => g(x1,x2) ->R g(y1,x2)
x2 ->R y2 => g(x1,x2) ->R g(x1,y2)
x1 ->R y1 => F(x1,x2,x3) ->R F(y1,x2,x3)
x2 ->R y2 => F(x1,x2,x3) ->R F(x1,y2,x3)
x3 ->R y3 => F(x1,x2,x3) ->R F(x1,x2,y3)
h(num0) ->R num0
h(g(x,y)) ->R y
sqsupset(F(num0,num1,x),F(h(x),h(x),x))

Results:


Domains:
S: {-1 , 0}
PSharp: |N

Function Interpretations:
|[F(x_1_1:S,x_2_1:S,x_3_1:S)]| = 1 + x_1_1:S - x_2_1:S
|[H(x_1_1:S)]| = 0
|[f(x_1_1:S,x_2_1:S,x_3_1:S)]| = 0
|[fSNonEmpty]| = - 1
|[g(x_1_1:S,x_2_1:S)]| = x_2_1:S
|[h(x_1_1:S)]| = x_1_1:S
|[num0]| = 0
|[num1]| = - 1

Predicate Interpretations:
 x_1_1:PSharp ->P x_2_1:PSharp <=> ((0 >= x_1_1:PSharp + x_2_1:PSharp) /\ (x_2_1:PSharp >= 1 + x_1_1:PSharp))
 x_1_1:S -> x_2_1:S <=> ((x_2_1:S >= x_1_1:S) /\ (x_1_1:S >= x_2_1:S))
 x_1_1:PSharp -> x_2_1:PSharp <=> ((2.x_1_1:PSharp >= 2.x_2_1:PSharp) /\ (x_2_1:PSharp >= x_1_1:PSharp))
gtrsim(x_1_1:PSharp,x_2_1:PSharp) <=> ((x_1_1:PSharp >= x_2_1:PSharp) /\ (1 + x_1_1:PSharp >= x_2_1:PSharp))
sqsupset(x_1_1:PSharp,x_2_1:PSharp) <=> (x_1_1:PSharp >= 1 + x_2_1:PSharp)
succeq(x_1_1:PSharp,x_2_1:PSharp) <=> ((x_2_1:PSharp >= 1 + x_1_1:PSharp) /\ (0 >= 1 + x_2_1:PSharp))

Problem 1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 f(num0,num1,x) -> f(h(x),h(x),x)
 h(num0) -> num0
 h(g(x,y)) -> y
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
