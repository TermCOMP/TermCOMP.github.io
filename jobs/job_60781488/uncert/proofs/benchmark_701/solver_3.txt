YES

Problem 1: 

(VAR vu95NonEmpty x y z)
(RULES
f(x,g(y,z)) -> g(f(x,y),z)
f(x,nil) -> g(nil,x)
norm(g(x,y)) -> s(norm(x))
norm(nil) -> num0
rem(g(x,y),num0) -> g(x,y)
rem(g(x,y),s(z)) -> rem(x,z)
rem(nil,y) -> nil
)


Problem 1: 

Innermost Equivalent Processor:
-> Rules:
 f(x,g(y,z)) -> g(f(x,y),z)
 f(x,nil) -> g(nil,x)
 norm(g(x,y)) -> s(norm(x))
 norm(nil) -> num0
 rem(g(x,y),num0) -> g(x,y)
 rem(g(x,y),s(z)) -> rem(x,z)
 rem(nil,y) -> nil
-> The term rewriting system is non-overlaping or locally confluent overlay system. Therefore, innermost termination implies termination.
 

Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 F(x,g(y,z)) -> F(x,y)
 NORM(g(x,y)) -> NORM(x)
 REM(g(x,y),s(z)) -> REM(x,z)
-> Rules:
 f(x,g(y,z)) -> g(f(x,y),z)
 f(x,nil) -> g(nil,x)
 norm(g(x,y)) -> s(norm(x))
 norm(nil) -> num0
 rem(g(x,y),num0) -> g(x,y)
 rem(g(x,y),s(z)) -> rem(x,z)
 rem(nil,y) -> nil

Problem 1: 

SCC Processor:
-> Pairs:
 F(x,g(y,z)) -> F(x,y)
 NORM(g(x,y)) -> NORM(x)
 REM(g(x,y),s(z)) -> REM(x,z)
-> Rules:
 f(x,g(y,z)) -> g(f(x,y),z)
 f(x,nil) -> g(nil,x)
 norm(g(x,y)) -> s(norm(x))
 norm(nil) -> num0
 rem(g(x,y),num0) -> g(x,y)
 rem(g(x,y),s(z)) -> rem(x,z)
 rem(nil,y) -> nil
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 REM(g(x,y),s(z)) -> REM(x,z)
->->-> Rules:
 f(x,g(y,z)) -> g(f(x,y),z)
 f(x,nil) -> g(nil,x)
 norm(g(x,y)) -> s(norm(x))
 norm(nil) -> num0
 rem(g(x,y),num0) -> g(x,y)
 rem(g(x,y),s(z)) -> rem(x,z)
 rem(nil,y) -> nil
->->Cycle:
->->-> Pairs:
 NORM(g(x,y)) -> NORM(x)
->->-> Rules:
 f(x,g(y,z)) -> g(f(x,y),z)
 f(x,nil) -> g(nil,x)
 norm(g(x,y)) -> s(norm(x))
 norm(nil) -> num0
 rem(g(x,y),num0) -> g(x,y)
 rem(g(x,y),s(z)) -> rem(x,z)
 rem(nil,y) -> nil
->->Cycle:
->->-> Pairs:
 F(x,g(y,z)) -> F(x,y)
->->-> Rules:
 f(x,g(y,z)) -> g(f(x,y),z)
 f(x,nil) -> g(nil,x)
 norm(g(x,y)) -> s(norm(x))
 norm(nil) -> num0
 rem(g(x,y),num0) -> g(x,y)
 rem(g(x,y),s(z)) -> rem(x,z)
 rem(nil,y) -> nil


The problem is decomposed in 3 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 REM(g(x,y),s(z)) -> REM(x,z)
-> Rules:
 f(x,g(y,z)) -> g(f(x,y),z)
 f(x,nil) -> g(nil,x)
 norm(g(x,y)) -> s(norm(x))
 norm(nil) -> num0
 rem(g(x,y),num0) -> g(x,y)
 rem(g(x,y),s(z)) -> rem(x,z)
 rem(nil,y) -> nil
->Projection:
 pi(REM) = 1

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 f(x,g(y,z)) -> g(f(x,y),z)
 f(x,nil) -> g(nil,x)
 norm(g(x,y)) -> s(norm(x))
 norm(nil) -> num0
 rem(g(x,y),num0) -> g(x,y)
 rem(g(x,y),s(z)) -> rem(x,z)
 rem(nil,y) -> nil
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Subterm Processor:
-> Pairs:
 NORM(g(x,y)) -> NORM(x)
-> Rules:
 f(x,g(y,z)) -> g(f(x,y),z)
 f(x,nil) -> g(nil,x)
 norm(g(x,y)) -> s(norm(x))
 norm(nil) -> num0
 rem(g(x,y),num0) -> g(x,y)
 rem(g(x,y),s(z)) -> rem(x,z)
 rem(nil,y) -> nil
->Projection:
 pi(NORM) = 1

Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 f(x,g(y,z)) -> g(f(x,y),z)
 f(x,nil) -> g(nil,x)
 norm(g(x,y)) -> s(norm(x))
 norm(nil) -> num0
 rem(g(x,y),num0) -> g(x,y)
 rem(g(x,y),s(z)) -> rem(x,z)
 rem(nil,y) -> nil
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Subterm Processor:
-> Pairs:
 F(x,g(y,z)) -> F(x,y)
-> Rules:
 f(x,g(y,z)) -> g(f(x,y),z)
 f(x,nil) -> g(nil,x)
 norm(g(x,y)) -> s(norm(x))
 norm(nil) -> num0
 rem(g(x,y),num0) -> g(x,y)
 rem(g(x,y),s(z)) -> rem(x,z)
 rem(nil,y) -> nil
->Projection:
 pi(F) = 2

Problem 1.3: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 f(x,g(y,z)) -> g(f(x,y),z)
 f(x,nil) -> g(nil,x)
 norm(g(x,y)) -> s(norm(x))
 norm(nil) -> num0
 rem(g(x,y),num0) -> g(x,y)
 rem(g(x,y),s(z)) -> rem(x,z)
 rem(nil,y) -> nil
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
