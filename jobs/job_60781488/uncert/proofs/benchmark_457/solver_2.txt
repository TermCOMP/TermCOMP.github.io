YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/dSLfe.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRS Reverse [EQUIVALENT, 0 ms]
(2) QTRS
(3) QTRSRRRProof [EQUIVALENT, 13 ms]
(4) QTRS
(5) AAECC Innermost [EQUIVALENT, 0 ms]
(6) QTRS
(7) DependencyPairsProof [EQUIVALENT, 0 ms]
(8) QDP
(9) DependencyGraphProof [EQUIVALENT, 0 ms]
(10) AND
    (11) QDP
        (12) UsableRulesProof [EQUIVALENT, 0 ms]
        (13) QDP
        (14) QReductionProof [EQUIVALENT, 0 ms]
        (15) QDP
        (16) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (17) YES
    (18) QDP
        (19) UsableRulesProof [EQUIVALENT, 0 ms]
        (20) QDP
        (21) QReductionProof [EQUIVALENT, 0 ms]
        (22) QDP
        (23) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (24) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   half(0) -> 0
   half(s(0)) -> 0
   half(s(s(x))) -> s(half(x))
   s(log(0)) -> s(0)
   log(s(x)) -> s(log(half(s(x))))

Q is empty.

----------------------------------------

(1) QTRS Reverse (EQUIVALENT)
We applied the QTRS Reverse Processor [REVERSE].
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   0'(half(x)) -> 0'(x)
   0'(s(half(x))) -> 0'(x)
   s(s(half(x))) -> half(s(x))
   0'(log(s(x))) -> 0'(s(x))
   s(log(x)) -> s(half(log(s(x))))

Q is empty.

----------------------------------------

(3) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(0'(x_1)) = x_1
   POL(half(x_1)) = x_1
   POL(log(x_1)) = 1 + x_1
   POL(s(x_1)) = x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   0'(log(s(x))) -> 0'(s(x))




----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   0'(half(x)) -> 0'(x)
   0'(s(half(x))) -> 0'(x)
   s(s(half(x))) -> half(s(x))
   s(log(x)) -> s(half(log(s(x))))

Q is empty.

----------------------------------------

(5) AAECC Innermost (EQUIVALENT)
We have applied [NOC,AAECCNOC] to switch to innermost. The TRS R 1 is 
   s(s(half(x))) -> half(s(x))
   s(log(x)) -> s(half(log(s(x))))

The TRS R 2 is 
   0'(half(x)) -> 0'(x)
   0'(s(half(x))) -> 0'(x)

The signature Sigma is {0'_1}
----------------------------------------

(6)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   0'(half(x)) -> 0'(x)
   0'(s(half(x))) -> 0'(x)
   s(s(half(x))) -> half(s(x))
   s(log(x)) -> s(half(log(s(x))))

The set Q consists of the following terms:

   0'(half(x0))
   0'(s(half(x0)))
   s(s(half(x0)))
   s(log(x0))


----------------------------------------

(7) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   0'^1(half(x)) -> 0'^1(x)
   0'^1(s(half(x))) -> 0'^1(x)
   S(s(half(x))) -> S(x)
   S(log(x)) -> S(half(log(s(x))))
   S(log(x)) -> S(x)

The TRS R consists of the following rules:

   0'(half(x)) -> 0'(x)
   0'(s(half(x))) -> 0'(x)
   s(s(half(x))) -> half(s(x))
   s(log(x)) -> s(half(log(s(x))))

The set Q consists of the following terms:

   0'(half(x0))
   0'(s(half(x0)))
   s(s(half(x0)))
   s(log(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs with 1 less node.
----------------------------------------

(10)
Complex Obligation (AND)

----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   S(log(x)) -> S(x)
   S(s(half(x))) -> S(x)

The TRS R consists of the following rules:

   0'(half(x)) -> 0'(x)
   0'(s(half(x))) -> 0'(x)
   s(s(half(x))) -> half(s(x))
   s(log(x)) -> s(half(log(s(x))))

The set Q consists of the following terms:

   0'(half(x0))
   0'(s(half(x0)))
   s(s(half(x0)))
   s(log(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(12) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(13)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   S(log(x)) -> S(x)
   S(s(half(x))) -> S(x)

R is empty.
The set Q consists of the following terms:

   0'(half(x0))
   0'(s(half(x0)))
   s(s(half(x0)))
   s(log(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(14) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   0'(half(x0))
   0'(s(half(x0)))


----------------------------------------

(15)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   S(log(x)) -> S(x)
   S(s(half(x))) -> S(x)

R is empty.
The set Q consists of the following terms:

   s(s(half(x0)))
   s(log(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(16) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*S(log(x)) -> S(x)
The graph contains the following edges 1 > 1


*S(s(half(x))) -> S(x)
The graph contains the following edges 1 > 1


----------------------------------------

(17)
YES

----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   0'^1(s(half(x))) -> 0'^1(x)
   0'^1(half(x)) -> 0'^1(x)

The TRS R consists of the following rules:

   0'(half(x)) -> 0'(x)
   0'(s(half(x))) -> 0'(x)
   s(s(half(x))) -> half(s(x))
   s(log(x)) -> s(half(log(s(x))))

The set Q consists of the following terms:

   0'(half(x0))
   0'(s(half(x0)))
   s(s(half(x0)))
   s(log(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(20)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   0'^1(s(half(x))) -> 0'^1(x)
   0'^1(half(x)) -> 0'^1(x)

R is empty.
The set Q consists of the following terms:

   0'(half(x0))
   0'(s(half(x0)))
   s(s(half(x0)))
   s(log(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(21) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   0'(half(x0))
   0'(s(half(x0)))


----------------------------------------

(22)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   0'^1(s(half(x))) -> 0'^1(x)
   0'^1(half(x)) -> 0'^1(x)

R is empty.
The set Q consists of the following terms:

   s(s(half(x0)))
   s(log(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(23) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*0'^1(s(half(x))) -> 0'^1(x)
The graph contains the following edges 1 > 1


*0'^1(half(x)) -> 0'^1(x)
The graph contains the following edges 1 > 1


----------------------------------------

(24)
YES
