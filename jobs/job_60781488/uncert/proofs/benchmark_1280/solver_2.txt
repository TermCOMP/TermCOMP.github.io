YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/sVF7P.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRSRRRProof [EQUIVALENT, 18 ms]
(2) QTRS
(3) QTRSRRRProof [EQUIVALENT, 0 ms]
(4) QTRS
(5) RisEmptyProof [EQUIVALENT, 0 ms]
(6) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a__and(tt, X) -> mark(X)
   a__plus(N, 0) -> mark(N)
   a__plus(N, s(M)) -> s(a__plus(mark(N), mark(M)))
   a__x(N, 0) -> 0
   a__x(N, s(M)) -> a__plus(a__x(mark(N), mark(M)), mark(N))
   mark(and(X1, X2)) -> a__and(mark(X1), X2)
   mark(plus(X1, X2)) -> a__plus(mark(X1), mark(X2))
   mark(x(X1, X2)) -> a__x(mark(X1), mark(X2))
   mark(tt) -> tt
   mark(0) -> 0
   mark(s(X)) -> s(mark(X))
   a__and(X1, X2) -> and(X1, X2)
   a__plus(X1, X2) -> plus(X1, X2)
   a__x(X1, X2) -> x(X1, X2)

Q is empty.

----------------------------------------

(1) QTRSRRRProof (EQUIVALENT)
Used ordering:
a__and/2(YES,YES)
tt/0)
mark/1)YES(
a__plus/2(YES,YES)
0/0)
s/1(YES)
a__x/2(YES,YES)
and/2(YES,YES)
plus/2(YES,YES)
x/2(YES,YES)

Quasi precedence:
[a__and_2, and_2] > s_1
tt > s_1
[a__x_2, x_2] > [a__plus_2, plus_2] > s_1
[a__x_2, x_2] > 0 > s_1


Status:
a__and_2: [1,2]
tt: multiset status
a__plus_2: [1,2]
0: multiset status
s_1: multiset status
a__x_2: multiset status
and_2: [1,2]
plus_2: [1,2]
x_2: multiset status

With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   a__and(tt, X) -> mark(X)
   a__plus(N, 0) -> mark(N)
   a__plus(N, s(M)) -> s(a__plus(mark(N), mark(M)))
   a__x(N, 0) -> 0
   a__x(N, s(M)) -> a__plus(a__x(mark(N), mark(M)), mark(N))




----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   mark(and(X1, X2)) -> a__and(mark(X1), X2)
   mark(plus(X1, X2)) -> a__plus(mark(X1), mark(X2))
   mark(x(X1, X2)) -> a__x(mark(X1), mark(X2))
   mark(tt) -> tt
   mark(0) -> 0
   mark(s(X)) -> s(mark(X))
   a__and(X1, X2) -> and(X1, X2)
   a__plus(X1, X2) -> plus(X1, X2)
   a__x(X1, X2) -> x(X1, X2)

Q is empty.

----------------------------------------

(3) QTRSRRRProof (EQUIVALENT)
Used ordering:
Knuth-Bendix order [KBO] with precedence:mark_1 > tt > a__x_2 > s_1 > x_2 > a__plus_2 > plus_2 > a__and_2 > and_2 > 0

and weight map:

   tt=1
   0=1
   mark_1=0
   s_1=1
   and_2=0
   a__and_2=0
   plus_2=0
   a__plus_2=0
   x_2=0
   a__x_2=0

The variable weight is 1With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   mark(and(X1, X2)) -> a__and(mark(X1), X2)
   mark(plus(X1, X2)) -> a__plus(mark(X1), mark(X2))
   mark(x(X1, X2)) -> a__x(mark(X1), mark(X2))
   mark(tt) -> tt
   mark(0) -> 0
   mark(s(X)) -> s(mark(X))
   a__and(X1, X2) -> and(X1, X2)
   a__plus(X1, X2) -> plus(X1, X2)
   a__x(X1, X2) -> x(X1, X2)




----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
R is empty.
Q is empty.

----------------------------------------

(5) RisEmptyProof (EQUIVALENT)
The TRS R is empty. Hence, termination is trivially proven.
----------------------------------------

(6)
YES
