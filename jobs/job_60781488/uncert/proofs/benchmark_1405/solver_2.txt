YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/0ePTc.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRSRRRProof [EQUIVALENT, 13 ms]
(2) QTRS
(3) Overlay + Local Confluence [EQUIVALENT, 0 ms]
(4) QTRS
(5) DependencyPairsProof [EQUIVALENT, 0 ms]
(6) QDP
(7) DependencyGraphProof [EQUIVALENT, 0 ms]
(8) QDP
(9) UsableRulesProof [EQUIVALENT, 0 ms]
(10) QDP
(11) QReductionProof [EQUIVALENT, 0 ms]
(12) QDP
(13) MRRProof [EQUIVALENT, 3 ms]
(14) QDP
(15) DependencyGraphProof [EQUIVALENT, 0 ms]
(16) TRUE


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(s(x)) -> s(s(f(p(s(x)))))
   f(0) -> 0
   p(s(x)) -> x

Q is empty.

----------------------------------------

(1) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(f(x_1)) = 1 + x_1
   POL(p(x_1)) = x_1
   POL(s(x_1)) = x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   f(0) -> 0




----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(s(x)) -> s(s(f(p(s(x)))))
   p(s(x)) -> x

Q is empty.

----------------------------------------

(3) Overlay + Local Confluence (EQUIVALENT)
The TRS is overlay and locally confluent. By [NOC] we can switch to innermost.
----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(s(x)) -> s(s(f(p(s(x)))))
   p(s(x)) -> x

The set Q consists of the following terms:

   f(s(x0))
   p(s(x0))


----------------------------------------

(5) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(x)) -> F(p(s(x)))
   F(s(x)) -> P(s(x))

The TRS R consists of the following rules:

   f(s(x)) -> s(s(f(p(s(x)))))
   p(s(x)) -> x

The set Q consists of the following terms:

   f(s(x0))
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(x)) -> F(p(s(x)))

The TRS R consists of the following rules:

   f(s(x)) -> s(s(f(p(s(x)))))
   p(s(x)) -> x

The set Q consists of the following terms:

   f(s(x0))
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(x)) -> F(p(s(x)))

The TRS R consists of the following rules:

   p(s(x)) -> x

The set Q consists of the following terms:

   f(s(x0))
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   f(s(x0))


----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(x)) -> F(p(s(x)))

The TRS R consists of the following rules:

   p(s(x)) -> x

The set Q consists of the following terms:

   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) MRRProof (EQUIVALENT)
By using the rule removal processor [LPAR04] with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented.


Strictly oriented rules of the TRS R:

   p(s(x)) -> x

Used ordering: Polynomial interpretation [POLO]:

   POL(F(x_1)) = x_1
   POL(p(x_1)) = x_1
   POL(s(x_1)) = 1 + x_1


----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(x)) -> F(p(s(x)))

R is empty.
The set Q consists of the following terms:

   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 1 less node.
----------------------------------------

(16)
TRUE
