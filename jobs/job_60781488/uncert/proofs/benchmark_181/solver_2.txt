NO
proof of /hpcwork/ff862203/termcomp25/benchmarks/Cj1PP.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be disproven:

(0) QTRS
(1) AAECC Innermost [EQUIVALENT, 0 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 0 ms]
(4) QDP
(5) DependencyGraphProof [EQUIVALENT, 0 ms]
(6) AND
    (7) QDP
        (8) UsableRulesProof [EQUIVALENT, 0 ms]
        (9) QDP
        (10) QReductionProof [EQUIVALENT, 0 ms]
        (11) QDP
        (12) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (13) YES
    (14) QDP
        (15) UsableRulesProof [EQUIVALENT, 0 ms]
        (16) QDP
        (17) QReductionProof [EQUIVALENT, 0 ms]
        (18) QDP
        (19) TransformationProof [EQUIVALENT, 0 ms]
        (20) QDP
        (21) TransformationProof [EQUIVALENT, 0 ms]
        (22) QDP
        (23) TransformationProof [EQUIVALENT, 0 ms]
        (24) QDP
        (25) TransformationProof [EQUIVALENT, 0 ms]
        (26) QDP
        (27) TransformationProof [EQUIVALENT, 0 ms]
        (28) QDP
        (29) TransformationProof [EQUIVALENT, 0 ms]
        (30) QDP
        (31) TransformationProof [EQUIVALENT, 0 ms]
        (32) QDP
        (33) TransformationProof [EQUIVALENT, 0 ms]
        (34) QDP
        (35) MNOCProof [EQUIVALENT, 0 ms]
        (36) QDP
        (37) NonTerminationLoopProof [COMPLETE, 0 ms]
        (38) NO


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(s(s(s(s(s(s(s(s(x)))))))), y, y) -> f(id(s(s(s(s(s(s(s(s(x))))))))), y, y)
   id(s(x)) -> s(id(x))
   id(0) -> 0

Q is empty.

----------------------------------------

(1) AAECC Innermost (EQUIVALENT)
We have applied [NOC,AAECCNOC] to switch to innermost. The TRS R 1 is 
   id(s(x)) -> s(id(x))
   id(0) -> 0

The TRS R 2 is 
   f(s(s(s(s(s(s(s(s(x)))))))), y, y) -> f(id(s(s(s(s(s(s(s(s(x))))))))), y, y)

The signature Sigma is {f_3}
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(s(s(s(s(s(s(s(s(x)))))))), y, y) -> f(id(s(s(s(s(s(s(s(s(x))))))))), y, y)
   id(s(x)) -> s(id(x))
   id(0) -> 0

The set Q consists of the following terms:

   f(s(s(s(s(s(s(s(s(x0)))))))), x1, x1)
   id(s(x0))
   id(0)


----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(s(s(s(s(s(s(s(x)))))))), y, y) -> F(id(s(s(s(s(s(s(s(s(x))))))))), y, y)
   F(s(s(s(s(s(s(s(s(x)))))))), y, y) -> ID(s(s(s(s(s(s(s(s(x)))))))))
   ID(s(x)) -> ID(x)

The TRS R consists of the following rules:

   f(s(s(s(s(s(s(s(s(x)))))))), y, y) -> f(id(s(s(s(s(s(s(s(s(x))))))))), y, y)
   id(s(x)) -> s(id(x))
   id(0) -> 0

The set Q consists of the following terms:

   f(s(s(s(s(s(s(s(s(x0)))))))), x1, x1)
   id(s(x0))
   id(0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs with 1 less node.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ID(s(x)) -> ID(x)

The TRS R consists of the following rules:

   f(s(s(s(s(s(s(s(s(x)))))))), y, y) -> f(id(s(s(s(s(s(s(s(s(x))))))))), y, y)
   id(s(x)) -> s(id(x))
   id(0) -> 0

The set Q consists of the following terms:

   f(s(s(s(s(s(s(s(s(x0)))))))), x1, x1)
   id(s(x0))
   id(0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(8) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(9)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ID(s(x)) -> ID(x)

R is empty.
The set Q consists of the following terms:

   f(s(s(s(s(s(s(s(s(x0)))))))), x1, x1)
   id(s(x0))
   id(0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(10) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   f(s(s(s(s(s(s(s(s(x0)))))))), x1, x1)
   id(s(x0))
   id(0)


----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ID(s(x)) -> ID(x)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(12) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*ID(s(x)) -> ID(x)
The graph contains the following edges 1 > 1


----------------------------------------

(13)
YES

----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(s(s(s(s(s(s(s(x)))))))), y, y) -> F(id(s(s(s(s(s(s(s(s(x))))))))), y, y)

The TRS R consists of the following rules:

   f(s(s(s(s(s(s(s(s(x)))))))), y, y) -> f(id(s(s(s(s(s(s(s(s(x))))))))), y, y)
   id(s(x)) -> s(id(x))
   id(0) -> 0

The set Q consists of the following terms:

   f(s(s(s(s(s(s(s(s(x0)))))))), x1, x1)
   id(s(x0))
   id(0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(s(s(s(s(s(s(s(x)))))))), y, y) -> F(id(s(s(s(s(s(s(s(s(x))))))))), y, y)

The TRS R consists of the following rules:

   id(s(x)) -> s(id(x))
   id(0) -> 0

The set Q consists of the following terms:

   f(s(s(s(s(s(s(s(s(x0)))))))), x1, x1)
   id(s(x0))
   id(0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   f(s(s(s(s(s(s(s(s(x0)))))))), x1, x1)


----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(s(s(s(s(s(s(s(x)))))))), y, y) -> F(id(s(s(s(s(s(s(s(s(x))))))))), y, y)

The TRS R consists of the following rules:

   id(s(x)) -> s(id(x))
   id(0) -> 0

The set Q consists of the following terms:

   id(s(x0))
   id(0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule F(s(s(s(s(s(s(s(s(x)))))))), y, y) -> F(id(s(s(s(s(s(s(s(s(x))))))))), y, y) at position [0] we obtained the following new rules [LPAR04]:

   (F(s(s(s(s(s(s(s(s(x)))))))), y, y) -> F(s(id(s(s(s(s(s(s(s(x))))))))), y, y),F(s(s(s(s(s(s(s(s(x)))))))), y, y) -> F(s(id(s(s(s(s(s(s(s(x))))))))), y, y))


----------------------------------------

(20)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(s(s(s(s(s(s(s(x)))))))), y, y) -> F(s(id(s(s(s(s(s(s(s(x))))))))), y, y)

The TRS R consists of the following rules:

   id(s(x)) -> s(id(x))
   id(0) -> 0

The set Q consists of the following terms:

   id(s(x0))
   id(0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(21) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule F(s(s(s(s(s(s(s(s(x)))))))), y, y) -> F(s(id(s(s(s(s(s(s(s(x))))))))), y, y) at position [0,0] we obtained the following new rules [LPAR04]:

   (F(s(s(s(s(s(s(s(s(x)))))))), y, y) -> F(s(s(id(s(s(s(s(s(s(x))))))))), y, y),F(s(s(s(s(s(s(s(s(x)))))))), y, y) -> F(s(s(id(s(s(s(s(s(s(x))))))))), y, y))


----------------------------------------

(22)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(s(s(s(s(s(s(s(x)))))))), y, y) -> F(s(s(id(s(s(s(s(s(s(x))))))))), y, y)

The TRS R consists of the following rules:

   id(s(x)) -> s(id(x))
   id(0) -> 0

The set Q consists of the following terms:

   id(s(x0))
   id(0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(23) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule F(s(s(s(s(s(s(s(s(x)))))))), y, y) -> F(s(s(id(s(s(s(s(s(s(x))))))))), y, y) at position [0,0,0] we obtained the following new rules [LPAR04]:

   (F(s(s(s(s(s(s(s(s(x)))))))), y, y) -> F(s(s(s(id(s(s(s(s(s(x))))))))), y, y),F(s(s(s(s(s(s(s(s(x)))))))), y, y) -> F(s(s(s(id(s(s(s(s(s(x))))))))), y, y))


----------------------------------------

(24)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(s(s(s(s(s(s(s(x)))))))), y, y) -> F(s(s(s(id(s(s(s(s(s(x))))))))), y, y)

The TRS R consists of the following rules:

   id(s(x)) -> s(id(x))
   id(0) -> 0

The set Q consists of the following terms:

   id(s(x0))
   id(0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(25) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule F(s(s(s(s(s(s(s(s(x)))))))), y, y) -> F(s(s(s(id(s(s(s(s(s(x))))))))), y, y) at position [0,0,0,0] we obtained the following new rules [LPAR04]:

   (F(s(s(s(s(s(s(s(s(x)))))))), y, y) -> F(s(s(s(s(id(s(s(s(s(x))))))))), y, y),F(s(s(s(s(s(s(s(s(x)))))))), y, y) -> F(s(s(s(s(id(s(s(s(s(x))))))))), y, y))


----------------------------------------

(26)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(s(s(s(s(s(s(s(x)))))))), y, y) -> F(s(s(s(s(id(s(s(s(s(x))))))))), y, y)

The TRS R consists of the following rules:

   id(s(x)) -> s(id(x))
   id(0) -> 0

The set Q consists of the following terms:

   id(s(x0))
   id(0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(27) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule F(s(s(s(s(s(s(s(s(x)))))))), y, y) -> F(s(s(s(s(id(s(s(s(s(x))))))))), y, y) at position [0,0,0,0,0] we obtained the following new rules [LPAR04]:

   (F(s(s(s(s(s(s(s(s(x)))))))), y, y) -> F(s(s(s(s(s(id(s(s(s(x))))))))), y, y),F(s(s(s(s(s(s(s(s(x)))))))), y, y) -> F(s(s(s(s(s(id(s(s(s(x))))))))), y, y))


----------------------------------------

(28)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(s(s(s(s(s(s(s(x)))))))), y, y) -> F(s(s(s(s(s(id(s(s(s(x))))))))), y, y)

The TRS R consists of the following rules:

   id(s(x)) -> s(id(x))
   id(0) -> 0

The set Q consists of the following terms:

   id(s(x0))
   id(0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(29) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule F(s(s(s(s(s(s(s(s(x)))))))), y, y) -> F(s(s(s(s(s(id(s(s(s(x))))))))), y, y) at position [0,0,0,0,0,0] we obtained the following new rules [LPAR04]:

   (F(s(s(s(s(s(s(s(s(x)))))))), y, y) -> F(s(s(s(s(s(s(id(s(s(x))))))))), y, y),F(s(s(s(s(s(s(s(s(x)))))))), y, y) -> F(s(s(s(s(s(s(id(s(s(x))))))))), y, y))


----------------------------------------

(30)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(s(s(s(s(s(s(s(x)))))))), y, y) -> F(s(s(s(s(s(s(id(s(s(x))))))))), y, y)

The TRS R consists of the following rules:

   id(s(x)) -> s(id(x))
   id(0) -> 0

The set Q consists of the following terms:

   id(s(x0))
   id(0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(31) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule F(s(s(s(s(s(s(s(s(x)))))))), y, y) -> F(s(s(s(s(s(s(id(s(s(x))))))))), y, y) at position [0,0,0,0,0,0,0] we obtained the following new rules [LPAR04]:

   (F(s(s(s(s(s(s(s(s(x)))))))), y, y) -> F(s(s(s(s(s(s(s(id(s(x))))))))), y, y),F(s(s(s(s(s(s(s(s(x)))))))), y, y) -> F(s(s(s(s(s(s(s(id(s(x))))))))), y, y))


----------------------------------------

(32)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(s(s(s(s(s(s(s(x)))))))), y, y) -> F(s(s(s(s(s(s(s(id(s(x))))))))), y, y)

The TRS R consists of the following rules:

   id(s(x)) -> s(id(x))
   id(0) -> 0

The set Q consists of the following terms:

   id(s(x0))
   id(0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(33) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule F(s(s(s(s(s(s(s(s(x)))))))), y, y) -> F(s(s(s(s(s(s(s(id(s(x))))))))), y, y) at position [0,0,0,0,0,0,0,0] we obtained the following new rules [LPAR04]:

   (F(s(s(s(s(s(s(s(s(x)))))))), y, y) -> F(s(s(s(s(s(s(s(s(id(x))))))))), y, y),F(s(s(s(s(s(s(s(s(x)))))))), y, y) -> F(s(s(s(s(s(s(s(s(id(x))))))))), y, y))


----------------------------------------

(34)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(s(s(s(s(s(s(s(x)))))))), y, y) -> F(s(s(s(s(s(s(s(s(id(x))))))))), y, y)

The TRS R consists of the following rules:

   id(s(x)) -> s(id(x))
   id(0) -> 0

The set Q consists of the following terms:

   id(s(x0))
   id(0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(35) MNOCProof (EQUIVALENT)
We use the modular non-overlap check [FROCOS05] to decrease Q to the empty set.
----------------------------------------

(36)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(s(s(s(s(s(s(s(x)))))))), y, y) -> F(s(s(s(s(s(s(s(s(id(x))))))))), y, y)

The TRS R consists of the following rules:

   id(s(x)) -> s(id(x))
   id(0) -> 0

Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(37) NonTerminationLoopProof (COMPLETE)
We used the non-termination processor [FROCOS05] to show that the DP problem is infinite.
Found a loop by semiunifying a rule from P directly.

s = F(s(s(s(s(s(s(s(s(x)))))))), y, y) evaluates to  t =F(s(s(s(s(s(s(s(s(id(x))))))))), y, y)

Thus s starts an infinite chain as s semiunifies with t with the following substitutions:
* Matcher: [x / id(x)]
* Semiunifier: [ ]

--------------------------------------------------------------------------------
Rewriting sequence

The DP semiunifies directly so there is only one rewrite step from F(s(s(s(s(s(s(s(s(x)))))))), y, y) to F(s(s(s(s(s(s(s(s(id(x))))))))), y, y).




----------------------------------------

(38)
NO
