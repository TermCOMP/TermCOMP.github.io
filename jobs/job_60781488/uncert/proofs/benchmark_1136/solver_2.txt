YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/IB8dm.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRS Reverse [EQUIVALENT, 0 ms]
(2) QTRS
(3) RFCMatchBoundsTRSProof [EQUIVALENT, 0 ms]
(4) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   active(f(X)) -> mark(g(h(f(X))))
   active(f(X)) -> f(active(X))
   active(h(X)) -> h(active(X))
   f(mark(X)) -> mark(f(X))
   h(mark(X)) -> mark(h(X))
   proper(f(X)) -> f(proper(X))
   proper(g(X)) -> g(proper(X))
   proper(h(X)) -> h(proper(X))
   f(ok(X)) -> ok(f(X))
   g(ok(X)) -> ok(g(X))
   h(ok(X)) -> ok(h(X))
   top(mark(X)) -> top(proper(X))
   top(ok(X)) -> top(active(X))

Q is empty.

----------------------------------------

(1) QTRS Reverse (EQUIVALENT)
We applied the QTRS Reverse Processor [REVERSE].
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(active(X)) -> f(h(g(mark(X))))
   f(active(X)) -> active(f(X))
   h(active(X)) -> active(h(X))
   mark(f(X)) -> f(mark(X))
   mark(h(X)) -> h(mark(X))
   f(proper(X)) -> proper(f(X))
   g(proper(X)) -> proper(g(X))
   h(proper(X)) -> proper(h(X))
   ok(f(X)) -> f(ok(X))
   ok(g(X)) -> g(ok(X))
   ok(h(X)) -> h(ok(X))
   mark(top(X)) -> proper(top(X))
   ok(top(X)) -> active(top(X))

Q is empty.

----------------------------------------

(3) RFCMatchBoundsTRSProof (EQUIVALENT)
Termination of the TRS R could be shown with a Match Bound [MATCHBOUNDS1,MATCHBOUNDS2] of 4. This implies Q-termination of R.
The following rules were used to construct the certificate:

   f(active(X)) -> f(h(g(mark(X))))
   f(active(X)) -> active(f(X))
   h(active(X)) -> active(h(X))
   mark(f(X)) -> f(mark(X))
   mark(h(X)) -> h(mark(X))
   f(proper(X)) -> proper(f(X))
   g(proper(X)) -> proper(g(X))
   h(proper(X)) -> proper(h(X))
   ok(f(X)) -> f(ok(X))
   ok(g(X)) -> g(ok(X))
   ok(h(X)) -> h(ok(X))
   mark(top(X)) -> proper(top(X))
   ok(top(X)) -> active(top(X))

The certificate found is represented by the following graph.
The certificate consists of the following enumerated nodes:
1, 2, 5, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65

Node 1 is start node and node 2 is final node.

Those nodes are connected through the following edges:

* 1 to 5 labelled f_1(0), g_1(0), h_1(0)* 1 to 8 labelled active_1(0), proper_1(0)* 1 to 7 labelled f_1(0), h_1(0)* 1 to 20 labelled f_1(1)* 1 to 23 labelled active_1(1), proper_1(1)* 1 to 60 labelled proper_1(2)* 2 to 2 labelled #_1(0)* 5 to 6 labelled h_1(0)* 5 to 2 labelled ok_1(0)* 5 to 13 labelled f_1(1), g_1(1), h_1(1)* 5 to 14 labelled active_1(1)* 5 to 25 labelled proper_1(1)* 5 to 26 labelled f_1(2)* 5 to 29 labelled active_1(2)* 5 to 63 labelled proper_1(3)* 5 to 64 labelled proper_1(2)* 6 to 7 labelled g_1(0)* 6 to 24 labelled proper_1(1)* 7 to 2 labelled mark_1(0)* 7 to 15 labelled f_1(1), h_1(1)* 7 to 14 labelled proper_1(1)* 7 to 29 labelled proper_1(2)* 8 to 2 labelled f_1(0), h_1(0), g_1(0), top_1(0)* 8 to 16 labelled f_1(1)* 8 to 19 labelled active_1(1), proper_1(1)* 8 to 56 labelled proper_1(2)* 13 to 2 labelled ok_1(1)* 13 to 13 labelled f_1(1), g_1(1), h_1(1)* 13 to 14 labelled active_1(1)* 13 to 26 labelled f_1(2)* 13 to 29 labelled active_1(2)* 13 to 63 labelled proper_1(3)* 13 to 64 labelled proper_1(2)* 14 to 2 labelled top_1(1)* 15 to 2 labelled mark_1(1)* 15 to 15 labelled f_1(1), h_1(1)* 15 to 14 labelled proper_1(1)* 15 to 29 labelled proper_1(2)* 16 to 17 labelled h_1(1)* 16 to 32 labelled proper_1(2)* 17 to 18 labelled g_1(1)* 17 to 30 labelled proper_1(2)* 18 to 2 labelled mark_1(1)* 18 to 15 labelled f_1(1), h_1(1)* 18 to 14 labelled proper_1(1)* 18 to 29 labelled proper_1(2)* 19 to 2 labelled f_1(1), h_1(1), g_1(1)* 19 to 16 labelled f_1(1)* 19 to 19 labelled active_1(1), proper_1(1)* 19 to 56 labelled proper_1(2)* 20 to 21 labelled h_1(1)* 20 to 57 labelled proper_1(2)* 21 to 22 labelled g_1(1)* 21 to 33 labelled proper_1(2)* 22 to 14 labelled mark_1(1)* 22 to 31 labelled proper_1(2)* 22 to 29 labelled mark_1(1)* 22 to 28 labelled f_1(2), h_1(2)* 22 to 61 labelled proper_1(3)* 23 to 14 labelled f_1(1), h_1(1)* 23 to 25 labelled f_1(1), g_1(1), h_1(1)* 23 to 29 labelled f_1(1), h_1(1)* 23 to 63 labelled f_1(1), g_1(1), h_1(1)* 23 to 64 labelled f_1(1), g_1(1), h_1(1)* 24 to 14 labelled g_1(1)* 24 to 29 labelled g_1(1)* 25 to 24 labelled h_1(1)* 26 to 27 labelled h_1(2)* 26 to 62 labelled proper_1(3)* 27 to 28 labelled g_1(2)* 27 to 59 labelled proper_1(3)* 28 to 14 labelled mark_1(2)* 28 to 29 labelled mark_1(2)* 28 to 31 labelled proper_1(2)* 28 to 58 labelled f_1(3), h_1(3)* 28 to 61 labelled proper_1(3)* 28 to 65 labelled proper_1(4)* 29 to 14 labelled f_1(2), h_1(2)* 29 to 29 labelled f_1(2), h_1(2)* 30 to 14 labelled g_1(2)* 30 to 29 labelled g_1(2)* 31 to 2 labelled top_1(2)* 32 to 30 labelled h_1(2)* 33 to 31 labelled g_1(2)* 33 to 61 labelled g_1(2)* 56 to 32 labelled f_1(2)* 57 to 33 labelled h_1(2)* 58 to 14 labelled mark_1(3)* 58 to 29 labelled mark_1(3)* 58 to 31 labelled proper_1(2)* 58 to 58 labelled f_1(3), h_1(3)* 58 to 61 labelled proper_1(3)* 58 to 65 labelled proper_1(4)* 59 to 31 labelled g_1(3)* 59 to 61 labelled g_1(3)* 59 to 65 labelled g_1(3)* 60 to 57 labelled f_1(2)* 61 to 31 labelled f_1(3), h_1(3)* 61 to 61 labelled f_1(3), h_1(3)* 61 to 65 labelled f_1(3), h_1(3)* 62 to 59 labelled h_1(3)* 63 to 62 labelled f_1(3)* 64 to 63 labelled f_1(2), g_1(2), h_1(2)* 64 to 64 labelled f_1(2), g_1(2), h_1(2)* 65 to 61 labelled f_1(4), h_1(4)* 65 to 65 labelled f_1(4), h_1(4)


----------------------------------------

(4)
YES
