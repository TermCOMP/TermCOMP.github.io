YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/ITCki.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRSRRRProof [EQUIVALENT, 37 ms]
(2) QTRS
(3) QTRSRRRProof [EQUIVALENT, 0 ms]
(4) QTRS
(5) QTRSRRRProof [EQUIVALENT, 0 ms]
(6) QTRS
(7) RisEmptyProof [EQUIVALENT, 0 ms]
(8) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a__and(true, X) -> mark(X)
   a__and(false, Y) -> false
   a__if(true, X, Y) -> mark(X)
   a__if(false, X, Y) -> mark(Y)
   a__add(0, X) -> mark(X)
   a__add(s(X), Y) -> s(add(X, Y))
   a__first(0, X) -> nil
   a__first(s(X), cons(Y, Z)) -> cons(Y, first(X, Z))
   a__from(X) -> cons(X, from(s(X)))
   mark(and(X1, X2)) -> a__and(mark(X1), X2)
   mark(if(X1, X2, X3)) -> a__if(mark(X1), X2, X3)
   mark(add(X1, X2)) -> a__add(mark(X1), X2)
   mark(first(X1, X2)) -> a__first(mark(X1), mark(X2))
   mark(from(X)) -> a__from(X)
   mark(true) -> true
   mark(false) -> false
   mark(0) -> 0
   mark(s(X)) -> s(X)
   mark(nil) -> nil
   mark(cons(X1, X2)) -> cons(X1, X2)
   a__and(X1, X2) -> and(X1, X2)
   a__if(X1, X2, X3) -> if(X1, X2, X3)
   a__add(X1, X2) -> add(X1, X2)
   a__first(X1, X2) -> first(X1, X2)
   a__from(X) -> from(X)

Q is empty.

----------------------------------------

(1) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(0) = 1
   POL(a__add(x_1, x_2)) = 2 + x_1 + 2*x_2
   POL(a__and(x_1, x_2)) = 2 + x_1 + 2*x_2
   POL(a__first(x_1, x_2)) = 2 + x_1 + 2*x_2
   POL(a__from(x_1)) = 2 + 2*x_1
   POL(a__if(x_1, x_2, x_3)) = 2 + 2*x_1 + 2*x_2 + 2*x_3
   POL(add(x_1, x_2)) = 1 + x_1 + 2*x_2
   POL(and(x_1, x_2)) = 1 + x_1 + 2*x_2
   POL(cons(x_1, x_2)) = 1 + x_1 + x_2
   POL(false) = 1
   POL(first(x_1, x_2)) = 1 + x_1 + 2*x_2
   POL(from(x_1)) = 1 + x_1
   POL(if(x_1, x_2, x_3)) = 1 + 2*x_1 + 2*x_2 + 2*x_3
   POL(mark(x_1)) = 2*x_1
   POL(nil) = 1
   POL(s(x_1)) = x_1
   POL(true) = 1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   a__and(true, X) -> mark(X)
   a__and(false, Y) -> false
   a__if(true, X, Y) -> mark(X)
   a__if(false, X, Y) -> mark(Y)
   a__add(0, X) -> mark(X)
   a__add(s(X), Y) -> s(add(X, Y))
   a__first(0, X) -> nil
   a__first(s(X), cons(Y, Z)) -> cons(Y, first(X, Z))
   mark(true) -> true
   mark(false) -> false
   mark(0) -> 0
   mark(nil) -> nil
   mark(cons(X1, X2)) -> cons(X1, X2)
   a__and(X1, X2) -> and(X1, X2)
   a__if(X1, X2, X3) -> if(X1, X2, X3)
   a__add(X1, X2) -> add(X1, X2)
   a__first(X1, X2) -> first(X1, X2)
   a__from(X) -> from(X)




----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a__from(X) -> cons(X, from(s(X)))
   mark(and(X1, X2)) -> a__and(mark(X1), X2)
   mark(if(X1, X2, X3)) -> a__if(mark(X1), X2, X3)
   mark(add(X1, X2)) -> a__add(mark(X1), X2)
   mark(first(X1, X2)) -> a__first(mark(X1), mark(X2))
   mark(from(X)) -> a__from(X)
   mark(s(X)) -> s(X)

Q is empty.

----------------------------------------

(3) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(a__add(x_1, x_2)) = 1 + 2*x_1 + 2*x_2
   POL(a__and(x_1, x_2)) = x_1 + 2*x_2
   POL(a__first(x_1, x_2)) = x_1 + x_2
   POL(a__from(x_1)) = 2 + 2*x_1
   POL(a__if(x_1, x_2, x_3)) = 1 + x_1 + 2*x_2 + 2*x_3
   POL(add(x_1, x_2)) = 2 + 2*x_1 + x_2
   POL(and(x_1, x_2)) = 1 + 2*x_1 + x_2
   POL(cons(x_1, x_2)) = x_1 + x_2
   POL(first(x_1, x_2)) = 2 + 2*x_1 + 2*x_2
   POL(from(x_1)) = x_1
   POL(if(x_1, x_2, x_3)) = 1 + 2*x_1 + x_2 + x_3
   POL(mark(x_1)) = 2 + 2*x_1
   POL(s(x_1)) = 1 + x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   a__from(X) -> cons(X, from(s(X)))
   mark(and(X1, X2)) -> a__and(mark(X1), X2)
   mark(if(X1, X2, X3)) -> a__if(mark(X1), X2, X3)
   mark(add(X1, X2)) -> a__add(mark(X1), X2)
   mark(first(X1, X2)) -> a__first(mark(X1), mark(X2))
   mark(s(X)) -> s(X)




----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   mark(from(X)) -> a__from(X)

Q is empty.

----------------------------------------

(5) QTRSRRRProof (EQUIVALENT)
Used ordering:
Knuth-Bendix order [KBO] with precedence:mark_1 > a__from_1 > from_1

and weight map:

   mark_1=1
   from_1=1
   a__from_1=2

The variable weight is 1With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   mark(from(X)) -> a__from(X)




----------------------------------------

(6)
Obligation:
Q restricted rewrite system:
R is empty.
Q is empty.

----------------------------------------

(7) RisEmptyProof (EQUIVALENT)
The TRS R is empty. Hence, termination is trivially proven.
----------------------------------------

(8)
YES
