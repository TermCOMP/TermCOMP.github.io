YES

Problem 1: 

(VAR vu95NonEmpty x y)
(RULES
u61(x,y) -> xor(x,xor(y,ftrue))
implies(x,y) -> xor(and(x,y),xor(x,ftrue))
not(x) -> xor(x,ftrue)
or(x,y) -> xor(and(x,y),xor(x,y))
)


Problem 1: 

Innermost Equivalent Processor:
-> Rules:
 u61(x,y) -> xor(x,xor(y,ftrue))
 implies(x,y) -> xor(and(x,y),xor(x,ftrue))
 not(x) -> xor(x,ftrue)
 or(x,y) -> xor(and(x,y),xor(x,y))
-> The term rewriting system is non-overlaping or locally confluent overlay system. Therefore, innermost termination implies termination.
 

Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 Empty
-> Rules:
 u61(x,y) -> xor(x,xor(y,ftrue))
 implies(x,y) -> xor(and(x,y),xor(x,ftrue))
 not(x) -> xor(x,ftrue)
 or(x,y) -> xor(and(x,y),xor(x,y))

Problem 1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 u61(x,y) -> xor(x,xor(y,ftrue))
 implies(x,y) -> xor(and(x,y),xor(x,ftrue))
 not(x) -> xor(x,ftrue)
 or(x,y) -> xor(and(x,y),xor(x,y))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
