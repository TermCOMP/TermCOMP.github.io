YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/4tIg0.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 0 ms]
(2) QDP
(3) DependencyGraphProof [EQUIVALENT, 0 ms]
(4) QDP
(5) TransformationProof [EQUIVALENT, 0 ms]
(6) QDP
(7) TransformationProof [EQUIVALENT, 0 ms]
(8) QDP
(9) DependencyGraphProof [EQUIVALENT, 0 ms]
(10) QDP
(11) QDPOrderProof [EQUIVALENT, 31 ms]
(12) QDP
(13) DependencyGraphProof [EQUIVALENT, 0 ms]
(14) TRUE


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   c(z, x, a) -> f(b(b(f(z), z), x))
   b(y, b(z, a)) -> f(b(c(f(a), y, z), z))
   f(c(c(z, a, a), x, a)) -> z

Q is empty.

----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C(z, x, a) -> F(b(b(f(z), z), x))
   C(z, x, a) -> B(b(f(z), z), x)
   C(z, x, a) -> B(f(z), z)
   C(z, x, a) -> F(z)
   B(y, b(z, a)) -> F(b(c(f(a), y, z), z))
   B(y, b(z, a)) -> B(c(f(a), y, z), z)
   B(y, b(z, a)) -> C(f(a), y, z)
   B(y, b(z, a)) -> F(a)

The TRS R consists of the following rules:

   c(z, x, a) -> f(b(b(f(z), z), x))
   b(y, b(z, a)) -> f(b(c(f(a), y, z), z))
   f(c(c(z, a, a), x, a)) -> z

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 4 less nodes.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C(z, x, a) -> B(b(f(z), z), x)
   B(y, b(z, a)) -> B(c(f(a), y, z), z)
   B(y, b(z, a)) -> C(f(a), y, z)
   C(z, x, a) -> B(f(z), z)

The TRS R consists of the following rules:

   c(z, x, a) -> f(b(b(f(z), z), x))
   b(y, b(z, a)) -> f(b(c(f(a), y, z), z))
   f(c(c(z, a, a), x, a)) -> z

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule C(z, x, a) -> B(b(f(z), z), x) we obtained the following new rules [LPAR04]:

   (C(f(a), y_0, a) -> B(b(f(f(a)), f(a)), y_0),C(f(a), y_0, a) -> B(b(f(f(a)), f(a)), y_0))


----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(y, b(z, a)) -> B(c(f(a), y, z), z)
   B(y, b(z, a)) -> C(f(a), y, z)
   C(z, x, a) -> B(f(z), z)
   C(f(a), y_0, a) -> B(b(f(f(a)), f(a)), y_0)

The TRS R consists of the following rules:

   c(z, x, a) -> f(b(b(f(z), z), x))
   b(y, b(z, a)) -> f(b(c(f(a), y, z), z))
   f(c(c(z, a, a), x, a)) -> z

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule C(z, x, a) -> B(f(z), z) we obtained the following new rules [LPAR04]:

   (C(f(a), y_0, a) -> B(f(f(a)), f(a)),C(f(a), y_0, a) -> B(f(f(a)), f(a)))


----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(y, b(z, a)) -> B(c(f(a), y, z), z)
   B(y, b(z, a)) -> C(f(a), y, z)
   C(f(a), y_0, a) -> B(b(f(f(a)), f(a)), y_0)
   C(f(a), y_0, a) -> B(f(f(a)), f(a))

The TRS R consists of the following rules:

   c(z, x, a) -> f(b(b(f(z), z), x))
   b(y, b(z, a)) -> f(b(c(f(a), y, z), z))
   f(c(c(z, a, a), x, a)) -> z

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(y, b(z, a)) -> C(f(a), y, z)
   C(f(a), y_0, a) -> B(b(f(f(a)), f(a)), y_0)
   B(y, b(z, a)) -> B(c(f(a), y, z), z)

The TRS R consists of the following rules:

   c(z, x, a) -> f(b(b(f(z), z), x))
   b(y, b(z, a)) -> f(b(c(f(a), y, z), z))
   f(c(c(z, a, a), x, a)) -> z

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   C(f(a), y_0, a) -> B(b(f(f(a)), f(a)), y_0)
   B(y, b(z, a)) -> B(c(f(a), y, z), z)
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial Order [NEGPOLO,POLO] with Interpretation:

POL( B_2(x_1, x_2) ) = max{0, 2x_1 + 2x_2 - 1}
POL( c_3(x_1, ..., x_3) ) = 2x_1 + x_2
POL( a ) = 1
POL( f_1(x_1) ) = max{0, x_1 - 2}
POL( b_2(x_1, x_2) ) = x_1 + x_2
POL( C_3(x_1, ..., x_3) ) = 2x_2 + 1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   c(z, x, a) -> f(b(b(f(z), z), x))
   b(y, b(z, a)) -> f(b(c(f(a), y, z), z))
   f(c(c(z, a, a), x, a)) -> z


----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(y, b(z, a)) -> C(f(a), y, z)

The TRS R consists of the following rules:

   c(z, x, a) -> f(b(b(f(z), z), x))
   b(y, b(z, a)) -> f(b(c(f(a), y, z), z))
   f(c(c(z, a, a), x, a)) -> z

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 1 less node.
----------------------------------------

(14)
TRUE
