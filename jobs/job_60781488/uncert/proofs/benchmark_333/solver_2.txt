YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/cMaOs.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRSRRRProof [EQUIVALENT, 12 ms]
(2) QTRS
(3) QTRSRRRProof [EQUIVALENT, 0 ms]
(4) QTRS
(5) RisEmptyProof [EQUIVALENT, 0 ms]
(6) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   +(x, 0) -> x
   +(0, x) -> x
   +(s(x), s(y)) -> s(s(+(x, y)))
   +(+(x, y), z) -> +(x, +(y, z))
   *(x, 0) -> 0
   *(0, x) -> 0
   *(s(x), s(y)) -> s(+(*(x, y), +(x, y)))
   *(*(x, y), z) -> *(x, *(y, z))
   sum(nil) -> 0
   sum(cons(x, l)) -> +(x, sum(l))
   prod(nil) -> s(0)
   prod(cons(x, l)) -> *(x, prod(l))

Q is empty.

----------------------------------------

(1) QTRSRRRProof (EQUIVALENT)
Used ordering:
Quasi precedence:
sum_1 > +_2 > [s_1, prod_1] > [0, nil]
cons_2 > *_2 > +_2 > [s_1, prod_1] > [0, nil]


Status:
+_2: [1,2]
0: multiset status
s_1: multiset status
*_2: [1,2]
sum_1: multiset status
nil: multiset status
cons_2: multiset status
prod_1: multiset status

With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   +(x, 0) -> x
   +(0, x) -> x
   +(s(x), s(y)) -> s(s(+(x, y)))
   +(+(x, y), z) -> +(x, +(y, z))
   *(x, 0) -> 0
   *(0, x) -> 0
   *(s(x), s(y)) -> s(+(*(x, y), +(x, y)))
   *(*(x, y), z) -> *(x, *(y, z))
   sum(nil) -> 0
   sum(cons(x, l)) -> +(x, sum(l))
   prod(cons(x, l)) -> *(x, prod(l))




----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   prod(nil) -> s(0)

Q is empty.

----------------------------------------

(3) QTRSRRRProof (EQUIVALENT)
Used ordering:
Knuth-Bendix order [KBO] with precedence:0 > prod_1 > s_1 > nil

and weight map:

   nil=1
   0=2
   prod_1=2
   s_1=1

The variable weight is 1With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   prod(nil) -> s(0)




----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
R is empty.
Q is empty.

----------------------------------------

(5) RisEmptyProof (EQUIVALENT)
The TRS R is empty. Hence, termination is trivially proven.
----------------------------------------

(6)
YES
