NO
proof of /hpcwork/ff862203/termcomp25/benchmarks/dCqdM.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be disproven:

(0) QTRS
(1) Overlay + Local Confluence [EQUIVALENT, 0 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 0 ms]
(4) QDP
(5) DependencyGraphProof [EQUIVALENT, 0 ms]
(6) AND
    (7) QDP
        (8) UsableRulesProof [EQUIVALENT, 0 ms]
        (9) QDP
        (10) QReductionProof [EQUIVALENT, 0 ms]
        (11) QDP
        (12) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (13) YES
    (14) QDP
        (15) UsableRulesProof [EQUIVALENT, 0 ms]
        (16) QDP
        (17) QReductionProof [EQUIVALENT, 0 ms]
        (18) QDP
        (19) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (20) YES
    (21) QDP
        (22) UsableRulesProof [EQUIVALENT, 0 ms]
        (23) QDP
        (24) QReductionProof [EQUIVALENT, 0 ms]
        (25) QDP
        (26) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (27) YES
    (28) QDP
        (29) UsableRulesProof [EQUIVALENT, 0 ms]
        (30) QDP
        (31) QReductionProof [EQUIVALENT, 0 ms]
        (32) QDP
        (33) TransformationProof [EQUIVALENT, 0 ms]
        (34) QDP
        (35) TransformationProof [EQUIVALENT, 0 ms]
        (36) QDP
        (37) NonTerminationLoopProof [COMPLETE, 0 ms]
        (38) NO


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   from(X) -> cons(X, from(s(X)))
   2ndspos(0, Z) -> rnil
   2ndspos(s(N), cons(X, Z)) -> 2ndspos(s(N), cons2(X, Z))
   2ndspos(s(N), cons2(X, cons(Y, Z))) -> rcons(posrecip(Y), 2ndsneg(N, Z))
   2ndsneg(0, Z) -> rnil
   2ndsneg(s(N), cons(X, Z)) -> 2ndsneg(s(N), cons2(X, Z))
   2ndsneg(s(N), cons2(X, cons(Y, Z))) -> rcons(negrecip(Y), 2ndspos(N, Z))
   pi(X) -> 2ndspos(X, from(0))
   plus(0, Y) -> Y
   plus(s(X), Y) -> s(plus(X, Y))
   times(0, Y) -> 0
   times(s(X), Y) -> plus(Y, times(X, Y))
   square(X) -> times(X, X)

Q is empty.

----------------------------------------

(1) Overlay + Local Confluence (EQUIVALENT)
The TRS is overlay and locally confluent. By [NOC] we can switch to innermost.
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   from(X) -> cons(X, from(s(X)))
   2ndspos(0, Z) -> rnil
   2ndspos(s(N), cons(X, Z)) -> 2ndspos(s(N), cons2(X, Z))
   2ndspos(s(N), cons2(X, cons(Y, Z))) -> rcons(posrecip(Y), 2ndsneg(N, Z))
   2ndsneg(0, Z) -> rnil
   2ndsneg(s(N), cons(X, Z)) -> 2ndsneg(s(N), cons2(X, Z))
   2ndsneg(s(N), cons2(X, cons(Y, Z))) -> rcons(negrecip(Y), 2ndspos(N, Z))
   pi(X) -> 2ndspos(X, from(0))
   plus(0, Y) -> Y
   plus(s(X), Y) -> s(plus(X, Y))
   times(0, Y) -> 0
   times(s(X), Y) -> plus(Y, times(X, Y))
   square(X) -> times(X, X)

The set Q consists of the following terms:

   from(x0)
   2ndspos(0, x0)
   2ndspos(s(x0), cons(x1, x2))
   2ndspos(s(x0), cons2(x1, cons(x2, x3)))
   2ndsneg(0, x0)
   2ndsneg(s(x0), cons(x1, x2))
   2ndsneg(s(x0), cons2(x1, cons(x2, x3)))
   pi(x0)
   plus(0, x0)
   plus(s(x0), x1)
   times(0, x0)
   times(s(x0), x1)
   square(x0)


----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   FROM(X) -> FROM(s(X))
   2NDSPOS(s(N), cons(X, Z)) -> 2NDSPOS(s(N), cons2(X, Z))
   2NDSPOS(s(N), cons2(X, cons(Y, Z))) -> 2NDSNEG(N, Z)
   2NDSNEG(s(N), cons(X, Z)) -> 2NDSNEG(s(N), cons2(X, Z))
   2NDSNEG(s(N), cons2(X, cons(Y, Z))) -> 2NDSPOS(N, Z)
   PI(X) -> 2NDSPOS(X, from(0))
   PI(X) -> FROM(0)
   PLUS(s(X), Y) -> PLUS(X, Y)
   TIMES(s(X), Y) -> PLUS(Y, times(X, Y))
   TIMES(s(X), Y) -> TIMES(X, Y)
   SQUARE(X) -> TIMES(X, X)

The TRS R consists of the following rules:

   from(X) -> cons(X, from(s(X)))
   2ndspos(0, Z) -> rnil
   2ndspos(s(N), cons(X, Z)) -> 2ndspos(s(N), cons2(X, Z))
   2ndspos(s(N), cons2(X, cons(Y, Z))) -> rcons(posrecip(Y), 2ndsneg(N, Z))
   2ndsneg(0, Z) -> rnil
   2ndsneg(s(N), cons(X, Z)) -> 2ndsneg(s(N), cons2(X, Z))
   2ndsneg(s(N), cons2(X, cons(Y, Z))) -> rcons(negrecip(Y), 2ndspos(N, Z))
   pi(X) -> 2ndspos(X, from(0))
   plus(0, Y) -> Y
   plus(s(X), Y) -> s(plus(X, Y))
   times(0, Y) -> 0
   times(s(X), Y) -> plus(Y, times(X, Y))
   square(X) -> times(X, X)

The set Q consists of the following terms:

   from(x0)
   2ndspos(0, x0)
   2ndspos(s(x0), cons(x1, x2))
   2ndspos(s(x0), cons2(x1, cons(x2, x3)))
   2ndsneg(0, x0)
   2ndsneg(s(x0), cons(x1, x2))
   2ndsneg(s(x0), cons2(x1, cons(x2, x3)))
   pi(x0)
   plus(0, x0)
   plus(s(x0), x1)
   times(0, x0)
   times(s(x0), x1)
   square(x0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 4 SCCs with 4 less nodes.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   PLUS(s(X), Y) -> PLUS(X, Y)

The TRS R consists of the following rules:

   from(X) -> cons(X, from(s(X)))
   2ndspos(0, Z) -> rnil
   2ndspos(s(N), cons(X, Z)) -> 2ndspos(s(N), cons2(X, Z))
   2ndspos(s(N), cons2(X, cons(Y, Z))) -> rcons(posrecip(Y), 2ndsneg(N, Z))
   2ndsneg(0, Z) -> rnil
   2ndsneg(s(N), cons(X, Z)) -> 2ndsneg(s(N), cons2(X, Z))
   2ndsneg(s(N), cons2(X, cons(Y, Z))) -> rcons(negrecip(Y), 2ndspos(N, Z))
   pi(X) -> 2ndspos(X, from(0))
   plus(0, Y) -> Y
   plus(s(X), Y) -> s(plus(X, Y))
   times(0, Y) -> 0
   times(s(X), Y) -> plus(Y, times(X, Y))
   square(X) -> times(X, X)

The set Q consists of the following terms:

   from(x0)
   2ndspos(0, x0)
   2ndspos(s(x0), cons(x1, x2))
   2ndspos(s(x0), cons2(x1, cons(x2, x3)))
   2ndsneg(0, x0)
   2ndsneg(s(x0), cons(x1, x2))
   2ndsneg(s(x0), cons2(x1, cons(x2, x3)))
   pi(x0)
   plus(0, x0)
   plus(s(x0), x1)
   times(0, x0)
   times(s(x0), x1)
   square(x0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(8) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(9)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   PLUS(s(X), Y) -> PLUS(X, Y)

R is empty.
The set Q consists of the following terms:

   from(x0)
   2ndspos(0, x0)
   2ndspos(s(x0), cons(x1, x2))
   2ndspos(s(x0), cons2(x1, cons(x2, x3)))
   2ndsneg(0, x0)
   2ndsneg(s(x0), cons(x1, x2))
   2ndsneg(s(x0), cons2(x1, cons(x2, x3)))
   pi(x0)
   plus(0, x0)
   plus(s(x0), x1)
   times(0, x0)
   times(s(x0), x1)
   square(x0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(10) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   from(x0)
   2ndspos(0, x0)
   2ndspos(s(x0), cons(x1, x2))
   2ndspos(s(x0), cons2(x1, cons(x2, x3)))
   2ndsneg(0, x0)
   2ndsneg(s(x0), cons(x1, x2))
   2ndsneg(s(x0), cons2(x1, cons(x2, x3)))
   pi(x0)
   plus(0, x0)
   plus(s(x0), x1)
   times(0, x0)
   times(s(x0), x1)
   square(x0)


----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   PLUS(s(X), Y) -> PLUS(X, Y)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(12) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*PLUS(s(X), Y) -> PLUS(X, Y)
The graph contains the following edges 1 > 1, 2 >= 2


----------------------------------------

(13)
YES

----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TIMES(s(X), Y) -> TIMES(X, Y)

The TRS R consists of the following rules:

   from(X) -> cons(X, from(s(X)))
   2ndspos(0, Z) -> rnil
   2ndspos(s(N), cons(X, Z)) -> 2ndspos(s(N), cons2(X, Z))
   2ndspos(s(N), cons2(X, cons(Y, Z))) -> rcons(posrecip(Y), 2ndsneg(N, Z))
   2ndsneg(0, Z) -> rnil
   2ndsneg(s(N), cons(X, Z)) -> 2ndsneg(s(N), cons2(X, Z))
   2ndsneg(s(N), cons2(X, cons(Y, Z))) -> rcons(negrecip(Y), 2ndspos(N, Z))
   pi(X) -> 2ndspos(X, from(0))
   plus(0, Y) -> Y
   plus(s(X), Y) -> s(plus(X, Y))
   times(0, Y) -> 0
   times(s(X), Y) -> plus(Y, times(X, Y))
   square(X) -> times(X, X)

The set Q consists of the following terms:

   from(x0)
   2ndspos(0, x0)
   2ndspos(s(x0), cons(x1, x2))
   2ndspos(s(x0), cons2(x1, cons(x2, x3)))
   2ndsneg(0, x0)
   2ndsneg(s(x0), cons(x1, x2))
   2ndsneg(s(x0), cons2(x1, cons(x2, x3)))
   pi(x0)
   plus(0, x0)
   plus(s(x0), x1)
   times(0, x0)
   times(s(x0), x1)
   square(x0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TIMES(s(X), Y) -> TIMES(X, Y)

R is empty.
The set Q consists of the following terms:

   from(x0)
   2ndspos(0, x0)
   2ndspos(s(x0), cons(x1, x2))
   2ndspos(s(x0), cons2(x1, cons(x2, x3)))
   2ndsneg(0, x0)
   2ndsneg(s(x0), cons(x1, x2))
   2ndsneg(s(x0), cons2(x1, cons(x2, x3)))
   pi(x0)
   plus(0, x0)
   plus(s(x0), x1)
   times(0, x0)
   times(s(x0), x1)
   square(x0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   from(x0)
   2ndspos(0, x0)
   2ndspos(s(x0), cons(x1, x2))
   2ndspos(s(x0), cons2(x1, cons(x2, x3)))
   2ndsneg(0, x0)
   2ndsneg(s(x0), cons(x1, x2))
   2ndsneg(s(x0), cons2(x1, cons(x2, x3)))
   pi(x0)
   plus(0, x0)
   plus(s(x0), x1)
   times(0, x0)
   times(s(x0), x1)
   square(x0)


----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TIMES(s(X), Y) -> TIMES(X, Y)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*TIMES(s(X), Y) -> TIMES(X, Y)
The graph contains the following edges 1 > 1, 2 >= 2


----------------------------------------

(20)
YES

----------------------------------------

(21)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   2NDSPOS(s(N), cons2(X, cons(Y, Z))) -> 2NDSNEG(N, Z)
   2NDSNEG(s(N), cons(X, Z)) -> 2NDSNEG(s(N), cons2(X, Z))
   2NDSNEG(s(N), cons2(X, cons(Y, Z))) -> 2NDSPOS(N, Z)
   2NDSPOS(s(N), cons(X, Z)) -> 2NDSPOS(s(N), cons2(X, Z))

The TRS R consists of the following rules:

   from(X) -> cons(X, from(s(X)))
   2ndspos(0, Z) -> rnil
   2ndspos(s(N), cons(X, Z)) -> 2ndspos(s(N), cons2(X, Z))
   2ndspos(s(N), cons2(X, cons(Y, Z))) -> rcons(posrecip(Y), 2ndsneg(N, Z))
   2ndsneg(0, Z) -> rnil
   2ndsneg(s(N), cons(X, Z)) -> 2ndsneg(s(N), cons2(X, Z))
   2ndsneg(s(N), cons2(X, cons(Y, Z))) -> rcons(negrecip(Y), 2ndspos(N, Z))
   pi(X) -> 2ndspos(X, from(0))
   plus(0, Y) -> Y
   plus(s(X), Y) -> s(plus(X, Y))
   times(0, Y) -> 0
   times(s(X), Y) -> plus(Y, times(X, Y))
   square(X) -> times(X, X)

The set Q consists of the following terms:

   from(x0)
   2ndspos(0, x0)
   2ndspos(s(x0), cons(x1, x2))
   2ndspos(s(x0), cons2(x1, cons(x2, x3)))
   2ndsneg(0, x0)
   2ndsneg(s(x0), cons(x1, x2))
   2ndsneg(s(x0), cons2(x1, cons(x2, x3)))
   pi(x0)
   plus(0, x0)
   plus(s(x0), x1)
   times(0, x0)
   times(s(x0), x1)
   square(x0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(22) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(23)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   2NDSPOS(s(N), cons2(X, cons(Y, Z))) -> 2NDSNEG(N, Z)
   2NDSNEG(s(N), cons(X, Z)) -> 2NDSNEG(s(N), cons2(X, Z))
   2NDSNEG(s(N), cons2(X, cons(Y, Z))) -> 2NDSPOS(N, Z)
   2NDSPOS(s(N), cons(X, Z)) -> 2NDSPOS(s(N), cons2(X, Z))

R is empty.
The set Q consists of the following terms:

   from(x0)
   2ndspos(0, x0)
   2ndspos(s(x0), cons(x1, x2))
   2ndspos(s(x0), cons2(x1, cons(x2, x3)))
   2ndsneg(0, x0)
   2ndsneg(s(x0), cons(x1, x2))
   2ndsneg(s(x0), cons2(x1, cons(x2, x3)))
   pi(x0)
   plus(0, x0)
   plus(s(x0), x1)
   times(0, x0)
   times(s(x0), x1)
   square(x0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(24) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   from(x0)
   2ndspos(0, x0)
   2ndspos(s(x0), cons(x1, x2))
   2ndspos(s(x0), cons2(x1, cons(x2, x3)))
   2ndsneg(0, x0)
   2ndsneg(s(x0), cons(x1, x2))
   2ndsneg(s(x0), cons2(x1, cons(x2, x3)))
   pi(x0)
   plus(0, x0)
   plus(s(x0), x1)
   times(0, x0)
   times(s(x0), x1)
   square(x0)


----------------------------------------

(25)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   2NDSPOS(s(N), cons2(X, cons(Y, Z))) -> 2NDSNEG(N, Z)
   2NDSNEG(s(N), cons(X, Z)) -> 2NDSNEG(s(N), cons2(X, Z))
   2NDSNEG(s(N), cons2(X, cons(Y, Z))) -> 2NDSPOS(N, Z)
   2NDSPOS(s(N), cons(X, Z)) -> 2NDSPOS(s(N), cons2(X, Z))

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(26) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*2NDSNEG(s(N), cons2(X, cons(Y, Z))) -> 2NDSPOS(N, Z)
The graph contains the following edges 1 > 1, 2 > 2


*2NDSNEG(s(N), cons(X, Z)) -> 2NDSNEG(s(N), cons2(X, Z))
The graph contains the following edges 1 >= 1


*2NDSPOS(s(N), cons(X, Z)) -> 2NDSPOS(s(N), cons2(X, Z))
The graph contains the following edges 1 >= 1


*2NDSPOS(s(N), cons2(X, cons(Y, Z))) -> 2NDSNEG(N, Z)
The graph contains the following edges 1 > 1, 2 > 2


----------------------------------------

(27)
YES

----------------------------------------

(28)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   FROM(X) -> FROM(s(X))

The TRS R consists of the following rules:

   from(X) -> cons(X, from(s(X)))
   2ndspos(0, Z) -> rnil
   2ndspos(s(N), cons(X, Z)) -> 2ndspos(s(N), cons2(X, Z))
   2ndspos(s(N), cons2(X, cons(Y, Z))) -> rcons(posrecip(Y), 2ndsneg(N, Z))
   2ndsneg(0, Z) -> rnil
   2ndsneg(s(N), cons(X, Z)) -> 2ndsneg(s(N), cons2(X, Z))
   2ndsneg(s(N), cons2(X, cons(Y, Z))) -> rcons(negrecip(Y), 2ndspos(N, Z))
   pi(X) -> 2ndspos(X, from(0))
   plus(0, Y) -> Y
   plus(s(X), Y) -> s(plus(X, Y))
   times(0, Y) -> 0
   times(s(X), Y) -> plus(Y, times(X, Y))
   square(X) -> times(X, X)

The set Q consists of the following terms:

   from(x0)
   2ndspos(0, x0)
   2ndspos(s(x0), cons(x1, x2))
   2ndspos(s(x0), cons2(x1, cons(x2, x3)))
   2ndsneg(0, x0)
   2ndsneg(s(x0), cons(x1, x2))
   2ndsneg(s(x0), cons2(x1, cons(x2, x3)))
   pi(x0)
   plus(0, x0)
   plus(s(x0), x1)
   times(0, x0)
   times(s(x0), x1)
   square(x0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(29) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(30)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   FROM(X) -> FROM(s(X))

R is empty.
The set Q consists of the following terms:

   from(x0)
   2ndspos(0, x0)
   2ndspos(s(x0), cons(x1, x2))
   2ndspos(s(x0), cons2(x1, cons(x2, x3)))
   2ndsneg(0, x0)
   2ndsneg(s(x0), cons(x1, x2))
   2ndsneg(s(x0), cons2(x1, cons(x2, x3)))
   pi(x0)
   plus(0, x0)
   plus(s(x0), x1)
   times(0, x0)
   times(s(x0), x1)
   square(x0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(31) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   from(x0)
   2ndspos(0, x0)
   2ndspos(s(x0), cons(x1, x2))
   2ndspos(s(x0), cons2(x1, cons(x2, x3)))
   2ndsneg(0, x0)
   2ndsneg(s(x0), cons(x1, x2))
   2ndsneg(s(x0), cons2(x1, cons(x2, x3)))
   pi(x0)
   plus(0, x0)
   plus(s(x0), x1)
   times(0, x0)
   times(s(x0), x1)
   square(x0)


----------------------------------------

(32)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   FROM(X) -> FROM(s(X))

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(33) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule FROM(X) -> FROM(s(X)) we obtained the following new rules [LPAR04]:

   (FROM(s(z0)) -> FROM(s(s(z0))),FROM(s(z0)) -> FROM(s(s(z0))))


----------------------------------------

(34)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   FROM(s(z0)) -> FROM(s(s(z0)))

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(35) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule FROM(s(z0)) -> FROM(s(s(z0))) we obtained the following new rules [LPAR04]:

   (FROM(s(s(z0))) -> FROM(s(s(s(z0)))),FROM(s(s(z0))) -> FROM(s(s(s(z0)))))


----------------------------------------

(36)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   FROM(s(s(z0))) -> FROM(s(s(s(z0))))

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(37) NonTerminationLoopProof (COMPLETE)
We used the non-termination processor [FROCOS05] to show that the DP problem is infinite.
Found a loop by semiunifying a rule from P directly.

s = FROM(s(s(z0))) evaluates to  t =FROM(s(s(s(z0))))

Thus s starts an infinite chain as s semiunifies with t with the following substitutions:
* Matcher: [z0 / s(z0)]
* Semiunifier: [ ]

--------------------------------------------------------------------------------
Rewriting sequence

The DP semiunifies directly so there is only one rewrite step from FROM(s(s(z0))) to FROM(s(s(s(z0)))).




----------------------------------------

(38)
NO
