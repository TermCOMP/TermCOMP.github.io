YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/vlBmf.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) AAECC Innermost [EQUIVALENT, 0 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 0 ms]
(4) QDP
(5) DependencyGraphProof [EQUIVALENT, 0 ms]
(6) AND
    (7) QDP
        (8) UsableRulesProof [EQUIVALENT, 0 ms]
        (9) QDP
        (10) QReductionProof [EQUIVALENT, 0 ms]
        (11) QDP
        (12) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (13) YES
    (14) QDP
        (15) UsableRulesProof [EQUIVALENT, 0 ms]
        (16) QDP
        (17) QReductionProof [EQUIVALENT, 0 ms]
        (18) QDP
        (19) QDPQMonotonicMRRProof [EQUIVALENT, 5 ms]
        (20) QDP
        (21) QDPOrderProof [EQUIVALENT, 12 ms]
        (22) QDP
        (23) PisEmptyProof [EQUIVALENT, 0 ms]
        (24) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   cond(true, x) -> cond(and(even(x), gr(x, 0)), p(x))
   and(x, false) -> false
   and(false, x) -> false
   and(true, true) -> true
   even(0) -> true
   even(s(0)) -> false
   even(s(s(x))) -> even(x)
   gr(0, x) -> false
   gr(s(x), 0) -> true
   gr(s(x), s(y)) -> gr(x, y)
   p(0) -> 0
   p(s(x)) -> x

Q is empty.

----------------------------------------

(1) AAECC Innermost (EQUIVALENT)
We have applied [NOC,AAECCNOC] to switch to innermost. The TRS R 1 is 
   and(x, false) -> false
   and(false, x) -> false
   and(true, true) -> true
   even(0) -> true
   even(s(0)) -> false
   even(s(s(x))) -> even(x)
   gr(0, x) -> false
   gr(s(x), 0) -> true
   gr(s(x), s(y)) -> gr(x, y)
   p(0) -> 0
   p(s(x)) -> x

The TRS R 2 is 
   cond(true, x) -> cond(and(even(x), gr(x, 0)), p(x))

The signature Sigma is {cond_2}
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   cond(true, x) -> cond(and(even(x), gr(x, 0)), p(x))
   and(x, false) -> false
   and(false, x) -> false
   and(true, true) -> true
   even(0) -> true
   even(s(0)) -> false
   even(s(s(x))) -> even(x)
   gr(0, x) -> false
   gr(s(x), 0) -> true
   gr(s(x), s(y)) -> gr(x, y)
   p(0) -> 0
   p(s(x)) -> x

The set Q consists of the following terms:

   cond(true, x0)
   and(x0, false)
   and(false, x0)
   and(true, true)
   even(0)
   even(s(0))
   even(s(s(x0)))
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(y))
   p(0)
   p(s(x0))


----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND(true, x) -> COND(and(even(x), gr(x, 0)), p(x))
   COND(true, x) -> AND(even(x), gr(x, 0))
   COND(true, x) -> EVEN(x)
   COND(true, x) -> GR(x, 0)
   COND(true, x) -> P(x)
   EVEN(s(s(x))) -> EVEN(x)
   GR(s(x), s(y)) -> GR(x, y)

The TRS R consists of the following rules:

   cond(true, x) -> cond(and(even(x), gr(x, 0)), p(x))
   and(x, false) -> false
   and(false, x) -> false
   and(true, true) -> true
   even(0) -> true
   even(s(0)) -> false
   even(s(s(x))) -> even(x)
   gr(0, x) -> false
   gr(s(x), 0) -> true
   gr(s(x), s(y)) -> gr(x, y)
   p(0) -> 0
   p(s(x)) -> x

The set Q consists of the following terms:

   cond(true, x0)
   and(x0, false)
   and(false, x0)
   and(true, true)
   even(0)
   even(s(0))
   even(s(s(x0)))
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(y))
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs with 5 less nodes.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   EVEN(s(s(x))) -> EVEN(x)

The TRS R consists of the following rules:

   cond(true, x) -> cond(and(even(x), gr(x, 0)), p(x))
   and(x, false) -> false
   and(false, x) -> false
   and(true, true) -> true
   even(0) -> true
   even(s(0)) -> false
   even(s(s(x))) -> even(x)
   gr(0, x) -> false
   gr(s(x), 0) -> true
   gr(s(x), s(y)) -> gr(x, y)
   p(0) -> 0
   p(s(x)) -> x

The set Q consists of the following terms:

   cond(true, x0)
   and(x0, false)
   and(false, x0)
   and(true, true)
   even(0)
   even(s(0))
   even(s(s(x0)))
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(y))
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(8) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(9)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   EVEN(s(s(x))) -> EVEN(x)

R is empty.
The set Q consists of the following terms:

   cond(true, x0)
   and(x0, false)
   and(false, x0)
   and(true, true)
   even(0)
   even(s(0))
   even(s(s(x0)))
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(y))
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(10) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   cond(true, x0)
   and(x0, false)
   and(false, x0)
   and(true, true)
   even(0)
   even(s(0))
   even(s(s(x0)))
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(y))
   p(0)
   p(s(x0))


----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   EVEN(s(s(x))) -> EVEN(x)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(12) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*EVEN(s(s(x))) -> EVEN(x)
The graph contains the following edges 1 > 1


----------------------------------------

(13)
YES

----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND(true, x) -> COND(and(even(x), gr(x, 0)), p(x))

The TRS R consists of the following rules:

   cond(true, x) -> cond(and(even(x), gr(x, 0)), p(x))
   and(x, false) -> false
   and(false, x) -> false
   and(true, true) -> true
   even(0) -> true
   even(s(0)) -> false
   even(s(s(x))) -> even(x)
   gr(0, x) -> false
   gr(s(x), 0) -> true
   gr(s(x), s(y)) -> gr(x, y)
   p(0) -> 0
   p(s(x)) -> x

The set Q consists of the following terms:

   cond(true, x0)
   and(x0, false)
   and(false, x0)
   and(true, true)
   even(0)
   even(s(0))
   even(s(s(x0)))
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(y))
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND(true, x) -> COND(and(even(x), gr(x, 0)), p(x))

The TRS R consists of the following rules:

   even(0) -> true
   even(s(0)) -> false
   even(s(s(x))) -> even(x)
   gr(0, x) -> false
   gr(s(x), 0) -> true
   and(x, false) -> false
   and(false, x) -> false
   and(true, true) -> true
   p(0) -> 0
   p(s(x)) -> x

The set Q consists of the following terms:

   cond(true, x0)
   and(x0, false)
   and(false, x0)
   and(true, true)
   even(0)
   even(s(0))
   even(s(s(x0)))
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(y))
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   cond(true, x0)


----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND(true, x) -> COND(and(even(x), gr(x, 0)), p(x))

The TRS R consists of the following rules:

   even(0) -> true
   even(s(0)) -> false
   even(s(s(x))) -> even(x)
   gr(0, x) -> false
   gr(s(x), 0) -> true
   and(x, false) -> false
   and(false, x) -> false
   and(true, true) -> true
   p(0) -> 0
   p(s(x)) -> x

The set Q consists of the following terms:

   and(x0, false)
   and(false, x0)
   and(true, true)
   even(0)
   even(s(0))
   even(s(s(x0)))
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(y))
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) QDPQMonotonicMRRProof (EQUIVALENT)
By using the Q-monotonic rule removal processor with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented such that it always occurs at a strongly monotonic position in a (P,Q,R)-chain.


Strictly oriented rules of the TRS R:

   p(s(x)) -> x

Used ordering: Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(COND(x_1, x_2)) = 2*x_2
   POL(and(x_1, x_2)) = 2
   POL(even(x_1)) = 2
   POL(false) = 0
   POL(gr(x_1, x_2)) = 2*x_1
   POL(p(x_1)) = x_1
   POL(s(x_1)) = 1 + 2*x_1
   POL(true) = 0


----------------------------------------

(20)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND(true, x) -> COND(and(even(x), gr(x, 0)), p(x))

The TRS R consists of the following rules:

   even(0) -> true
   even(s(0)) -> false
   even(s(s(x))) -> even(x)
   gr(0, x) -> false
   gr(s(x), 0) -> true
   and(x, false) -> false
   and(false, x) -> false
   and(true, true) -> true
   p(0) -> 0

The set Q consists of the following terms:

   and(x0, false)
   and(false, x0)
   and(true, true)
   even(0)
   even(s(0))
   even(s(s(x0)))
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(y))
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(21) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   COND(true, x) -> COND(and(even(x), gr(x, 0)), p(x))
The remaining pairs can at least be oriented weakly.
Used ordering:  Combined order from the following AFS and order.
COND(x1, x2)  =  COND(x1, x2)

true  =  true

and(x1, x2)  =  x2

gr(x1, x2)  =  x1

p(x1)  =  p

0  =  0

false  =  false

s(x1)  =  s


Knuth-Bendix order [KBO] with precedence:trivial

and weight map:

   s=5
   0=2
   true=4
   p=3
   COND_2=1
   false=1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   gr(0, x) -> false
   gr(s(x), 0) -> true
   and(x, false) -> false
   and(false, x) -> false
   and(true, true) -> true
   p(0) -> 0


----------------------------------------

(22)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   even(0) -> true
   even(s(0)) -> false
   even(s(s(x))) -> even(x)
   gr(0, x) -> false
   gr(s(x), 0) -> true
   and(x, false) -> false
   and(false, x) -> false
   and(true, true) -> true
   p(0) -> 0

The set Q consists of the following terms:

   and(x0, false)
   and(false, x0)
   and(true, true)
   even(0)
   even(s(0))
   even(s(s(x0)))
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(y))
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(23) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(24)
YES
