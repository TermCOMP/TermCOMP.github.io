YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/RTKRW.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 0 ms]
(2) QDP
(3) QDPOrderProof [EQUIVALENT, 0 ms]
(4) QDP
(5) TransformationProof [EQUIVALENT, 0 ms]
(6) QDP
(7) DependencyGraphProof [EQUIVALENT, 0 ms]
(8) TRUE


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   div(0, y) -> 0
   div(x, y) -> quot(x, y, y)
   quot(0, s(y), z) -> 0
   quot(s(x), s(y), z) -> quot(x, y, z)
   quot(x, 0, s(z)) -> s(div(x, s(z)))

Q is empty.

----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DIV(x, y) -> QUOT(x, y, y)
   QUOT(s(x), s(y), z) -> QUOT(x, y, z)
   QUOT(x, 0, s(z)) -> DIV(x, s(z))

The TRS R consists of the following rules:

   div(0, y) -> 0
   div(x, y) -> quot(x, y, y)
   quot(0, s(y), z) -> 0
   quot(s(x), s(y), z) -> quot(x, y, z)
   quot(x, 0, s(z)) -> s(div(x, s(z)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   QUOT(s(x), s(y), z) -> QUOT(x, y, z)
The remaining pairs can at least be oriented weakly.
Used ordering:  Combined order from the following AFS and order.
DIV(x1, x2)  =  x1

QUOT(x1, x2, x3)  =  x1

s(x1)  =  s(x1)


Knuth-Bendix order [KBO] with precedence:trivial

and weight map:

   s_1=1
   dummyConstant=1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:
none


----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DIV(x, y) -> QUOT(x, y, y)
   QUOT(x, 0, s(z)) -> DIV(x, s(z))

The TRS R consists of the following rules:

   div(0, y) -> 0
   div(x, y) -> quot(x, y, y)
   quot(0, s(y), z) -> 0
   quot(s(x), s(y), z) -> quot(x, y, z)
   quot(x, 0, s(z)) -> s(div(x, s(z)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule DIV(x, y) -> QUOT(x, y, y) we obtained the following new rules [LPAR04]:

   (DIV(y_0, s(y_1)) -> QUOT(y_0, s(y_1), s(y_1)),DIV(y_0, s(y_1)) -> QUOT(y_0, s(y_1), s(y_1)))


----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   QUOT(x, 0, s(z)) -> DIV(x, s(z))
   DIV(y_0, s(y_1)) -> QUOT(y_0, s(y_1), s(y_1))

The TRS R consists of the following rules:

   div(0, y) -> 0
   div(x, y) -> quot(x, y, y)
   quot(0, s(y), z) -> 0
   quot(s(x), s(y), z) -> quot(x, y, z)
   quot(x, 0, s(z)) -> s(div(x, s(z)))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 2 less nodes.
----------------------------------------

(8)
TRUE
