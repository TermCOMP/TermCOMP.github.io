YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/5TpTi.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) AAECC Innermost [EQUIVALENT, 0 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 0 ms]
(4) QDP
(5) UsableRulesProof [EQUIVALENT, 0 ms]
(6) QDP
(7) QReductionProof [EQUIVALENT, 0 ms]
(8) QDP
(9) QDPToSRSProof [SOUND, 0 ms]
(10) QTRS
(11) DependencyPairsProof [EQUIVALENT, 0 ms]
(12) QDP
(13) DependencyGraphProof [EQUIVALENT, 0 ms]
(14) AND
    (15) QDP
        (16) UsableRulesProof [EQUIVALENT, 0 ms]
        (17) QDP
        (18) DependencyGraphProof [EQUIVALENT, 0 ms]
        (19) QDP
        (20) MNOCProof [EQUIVALENT, 0 ms]
        (21) QDP
        (22) UsableRulesProof [EQUIVALENT, 0 ms]
        (23) QDP
        (24) QReductionProof [EQUIVALENT, 0 ms]
        (25) QDP
        (26) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (27) YES
    (28) QDP
        (29) UsableRulesProof [EQUIVALENT, 0 ms]
        (30) QDP
        (31) DependencyGraphProof [EQUIVALENT, 0 ms]
        (32) QDP
        (33) MNOCProof [EQUIVALENT, 0 ms]
        (34) QDP
        (35) UsableRulesProof [EQUIVALENT, 0 ms]
        (36) QDP
        (37) QReductionProof [EQUIVALENT, 0 ms]
        (38) QDP
        (39) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (40) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(x, a(b(y))) -> f(a(a(x)), y)
   f(x, b(a(y))) -> f(b(b(x)), y)
   f(a(x), y) -> f(x, a(y))
   f(b(x), y) -> f(x, b(y))

Q is empty.

----------------------------------------

(1) AAECC Innermost (EQUIVALENT)
We have applied [NOC,AAECCNOC] to switch to innermost. The TRS R 1 is none

The TRS R 2 is 
   f(x, a(b(y))) -> f(a(a(x)), y)
   f(x, b(a(y))) -> f(b(b(x)), y)
   f(a(x), y) -> f(x, a(y))
   f(b(x), y) -> f(x, b(y))

The signature Sigma is {f_2}
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(x, a(b(y))) -> f(a(a(x)), y)
   f(x, b(a(y))) -> f(b(b(x)), y)
   f(a(x), y) -> f(x, a(y))
   f(b(x), y) -> f(x, b(y))

The set Q consists of the following terms:

   f(x0, a(b(x1)))
   f(x0, b(a(x1)))
   f(a(x0), x1)
   f(b(x0), x1)


----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(x, a(b(y))) -> F(a(a(x)), y)
   F(x, b(a(y))) -> F(b(b(x)), y)
   F(a(x), y) -> F(x, a(y))
   F(b(x), y) -> F(x, b(y))

The TRS R consists of the following rules:

   f(x, a(b(y))) -> f(a(a(x)), y)
   f(x, b(a(y))) -> f(b(b(x)), y)
   f(a(x), y) -> f(x, a(y))
   f(b(x), y) -> f(x, b(y))

The set Q consists of the following terms:

   f(x0, a(b(x1)))
   f(x0, b(a(x1)))
   f(a(x0), x1)
   f(b(x0), x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(x, a(b(y))) -> F(a(a(x)), y)
   F(x, b(a(y))) -> F(b(b(x)), y)
   F(a(x), y) -> F(x, a(y))
   F(b(x), y) -> F(x, b(y))

R is empty.
The set Q consists of the following terms:

   f(x0, a(b(x1)))
   f(x0, b(a(x1)))
   f(a(x0), x1)
   f(b(x0), x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   f(x0, a(b(x1)))
   f(x0, b(a(x1)))
   f(a(x0), x1)
   f(b(x0), x1)


----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(x, a(b(y))) -> F(a(a(x)), y)
   F(x, b(a(y))) -> F(b(b(x)), y)
   F(a(x), y) -> F(x, a(y))
   F(b(x), y) -> F(x, b(y))

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) QDPToSRSProof (SOUND)
The finiteness of this DP problem is implied by strong termination of a SRS due to [UNKNOWN].

----------------------------------------

(10)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a(b(x)) -> a(a(x))
   b(a(x)) -> b(b(x))

Q is empty.

----------------------------------------

(11) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(b(x)) -> A(a(x))
   A(b(x)) -> A(x)
   B(a(x)) -> B(b(x))
   B(a(x)) -> B(x)

The TRS R consists of the following rules:

   a(b(x)) -> a(a(x))
   b(a(x)) -> b(b(x))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs.
----------------------------------------

(14)
Complex Obligation (AND)

----------------------------------------

(15)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(a(x)) -> B(x)
   B(a(x)) -> B(b(x))

The TRS R consists of the following rules:

   a(b(x)) -> a(a(x))
   b(a(x)) -> b(b(x))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(16) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(17)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(a(x)) -> B(x)
   B(a(x)) -> B(b(x))

The TRS R consists of the following rules:

   b(a(x)) -> b(b(x))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(18) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(19)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(a(x)) -> B(x)

The TRS R consists of the following rules:

   b(a(x)) -> b(b(x))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(20) MNOCProof (EQUIVALENT)
We use the modular non-overlap check [LPAR04] to enlarge Q to all left-hand sides of R.
----------------------------------------

(21)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(a(x)) -> B(x)

The TRS R consists of the following rules:

   b(a(x)) -> b(b(x))

The set Q consists of the following terms:

   b(a(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(22) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(23)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(a(x)) -> B(x)

R is empty.
The set Q consists of the following terms:

   b(a(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(24) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   b(a(x0))


----------------------------------------

(25)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(a(x)) -> B(x)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(26) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*B(a(x)) -> B(x)
The graph contains the following edges 1 > 1


----------------------------------------

(27)
YES

----------------------------------------

(28)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(b(x)) -> A(x)
   A(b(x)) -> A(a(x))

The TRS R consists of the following rules:

   a(b(x)) -> a(a(x))
   b(a(x)) -> b(b(x))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(29) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(30)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(b(x)) -> A(x)
   A(b(x)) -> A(a(x))

The TRS R consists of the following rules:

   a(b(x)) -> a(a(x))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(31) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(32)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(b(x)) -> A(x)

The TRS R consists of the following rules:

   a(b(x)) -> a(a(x))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(33) MNOCProof (EQUIVALENT)
We use the modular non-overlap check [LPAR04] to enlarge Q to all left-hand sides of R.
----------------------------------------

(34)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(b(x)) -> A(x)

The TRS R consists of the following rules:

   a(b(x)) -> a(a(x))

The set Q consists of the following terms:

   a(b(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(35) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(36)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(b(x)) -> A(x)

R is empty.
The set Q consists of the following terms:

   a(b(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(37) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   a(b(x0))


----------------------------------------

(38)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(b(x)) -> A(x)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(39) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*A(b(x)) -> A(x)
The graph contains the following edges 1 > 1


----------------------------------------

(40)
YES
