YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/PWimK.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRSRRRProof [EQUIVALENT, 31 ms]
(2) QTRS
(3) Overlay + Local Confluence [EQUIVALENT, 0 ms]
(4) QTRS
(5) DependencyPairsProof [EQUIVALENT, 0 ms]
(6) QDP
(7) DependencyGraphProof [EQUIVALENT, 0 ms]
(8) TRUE


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(g(i(a, b, b'), c), d) -> if(e, f(.(b, c), d'), f(.(b', c), d'))
   f(g(h(a, b), c), d) -> if(e, f(.(b, g(h(a, b), c)), d), f(c, d'))

Q is empty.

----------------------------------------

(1) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(.(x_1, x_2)) = x_1 + 2*x_2
   POL(a) = 0
   POL(b) = 0
   POL(b') = 0
   POL(c) = 0
   POL(d) = 0
   POL(d') = 0
   POL(e) = 0
   POL(f(x_1, x_2)) = 2*x_1 + 2*x_2
   POL(g(x_1, x_2)) = 2*x_1 + x_2
   POL(h(x_1, x_2)) = 2*x_1 + x_2
   POL(i(x_1, x_2, x_3)) = 1 + x_1 + 2*x_2 + x_3
   POL(if(x_1, x_2, x_3)) = 2*x_1 + 2*x_2 + 2*x_3
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   f(g(i(a, b, b'), c), d) -> if(e, f(.(b, c), d'), f(.(b', c), d'))




----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(g(h(a, b), c), d) -> if(e, f(.(b, g(h(a, b), c)), d), f(c, d'))

Q is empty.

----------------------------------------

(3) Overlay + Local Confluence (EQUIVALENT)
The TRS is overlay and locally confluent. By [NOC] we can switch to innermost.
----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(g(h(a, b), c), d) -> if(e, f(.(b, g(h(a, b), c)), d), f(c, d'))

The set Q consists of the following terms:

   f(g(h(a, b), c), d)


----------------------------------------

(5) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(g(h(a, b), c), d) -> F(.(b, g(h(a, b), c)), d)
   F(g(h(a, b), c), d) -> F(c, d')

The TRS R consists of the following rules:

   f(g(h(a, b), c), d) -> if(e, f(.(b, g(h(a, b), c)), d), f(c, d'))

The set Q consists of the following terms:

   f(g(h(a, b), c), d)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 2 less nodes.
----------------------------------------

(8)
TRUE
