YES

Problem 1: 

(VAR vu95NonEmpty X X1 X2 X3 Y)
(RULES
active(f(X)) -> f(active(X))
active(f(X)) -> mark(if(X,c,f(ftrue)))
active(if(ffalse,X,Y)) -> mark(Y)
active(if(ftrue,X,Y)) -> mark(X)
active(if(X1,X2,X3)) -> if(active(X1),X2,X3)
active(if(X1,X2,X3)) -> if(X1,active(X2),X3)
f(mark(X)) -> mark(f(X))
f(ok(X)) -> ok(f(X))
if(mark(X1),X2,X3) -> mark(if(X1,X2,X3))
if(ok(X1),ok(X2),ok(X3)) -> ok(if(X1,X2,X3))
if(X1,mark(X2),X3) -> mark(if(X1,X2,X3))
proper(f(X)) -> f(proper(X))
proper(if(X1,X2,X3)) -> if(proper(X1),proper(X2),proper(X3))
proper(c) -> ok(c)
proper(ffalse) -> ok(ffalse)
proper(ftrue) -> ok(ftrue)
top(mark(X)) -> top(proper(X))
top(ok(X)) -> top(active(X))
)


Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 ACTIVE(f(X)) -> ACTIVE(X)
 ACTIVE(f(X)) -> F(active(X))
 ACTIVE(f(X)) -> IF(X,c,f(ftrue))
 ACTIVE(if(X1,X2,X3)) -> ACTIVE(X1)
 ACTIVE(if(X1,X2,X3)) -> ACTIVE(X2)
 ACTIVE(if(X1,X2,X3)) -> IF(active(X1),X2,X3)
 ACTIVE(if(X1,X2,X3)) -> IF(X1,active(X2),X3)
 F(mark(X)) -> F(X)
 F(ok(X)) -> F(X)
 IF(mark(X1),X2,X3) -> IF(X1,X2,X3)
 IF(ok(X1),ok(X2),ok(X3)) -> IF(X1,X2,X3)
 IF(X1,mark(X2),X3) -> IF(X1,X2,X3)
 PROPER(f(X)) -> F(proper(X))
 PROPER(f(X)) -> PROPER(X)
 PROPER(if(X1,X2,X3)) -> IF(proper(X1),proper(X2),proper(X3))
 PROPER(if(X1,X2,X3)) -> PROPER(X1)
 PROPER(if(X1,X2,X3)) -> PROPER(X2)
 PROPER(if(X1,X2,X3)) -> PROPER(X3)
 TOP(mark(X)) -> PROPER(X)
 TOP(mark(X)) -> TOP(proper(X))
 TOP(ok(X)) -> ACTIVE(X)
 TOP(ok(X)) -> TOP(active(X))
-> Rules:
 active(f(X)) -> f(active(X))
 active(f(X)) -> mark(if(X,c,f(ftrue)))
 active(if(ffalse,X,Y)) -> mark(Y)
 active(if(ftrue,X,Y)) -> mark(X)
 active(if(X1,X2,X3)) -> if(active(X1),X2,X3)
 active(if(X1,X2,X3)) -> if(X1,active(X2),X3)
 f(mark(X)) -> mark(f(X))
 f(ok(X)) -> ok(f(X))
 if(mark(X1),X2,X3) -> mark(if(X1,X2,X3))
 if(ok(X1),ok(X2),ok(X3)) -> ok(if(X1,X2,X3))
 if(X1,mark(X2),X3) -> mark(if(X1,X2,X3))
 proper(f(X)) -> f(proper(X))
 proper(if(X1,X2,X3)) -> if(proper(X1),proper(X2),proper(X3))
 proper(c) -> ok(c)
 proper(ffalse) -> ok(ffalse)
 proper(ftrue) -> ok(ftrue)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))

Problem 1: 

SCC Processor:
-> Pairs:
 ACTIVE(f(X)) -> ACTIVE(X)
 ACTIVE(f(X)) -> F(active(X))
 ACTIVE(f(X)) -> IF(X,c,f(ftrue))
 ACTIVE(if(X1,X2,X3)) -> ACTIVE(X1)
 ACTIVE(if(X1,X2,X3)) -> ACTIVE(X2)
 ACTIVE(if(X1,X2,X3)) -> IF(active(X1),X2,X3)
 ACTIVE(if(X1,X2,X3)) -> IF(X1,active(X2),X3)
 F(mark(X)) -> F(X)
 F(ok(X)) -> F(X)
 IF(mark(X1),X2,X3) -> IF(X1,X2,X3)
 IF(ok(X1),ok(X2),ok(X3)) -> IF(X1,X2,X3)
 IF(X1,mark(X2),X3) -> IF(X1,X2,X3)
 PROPER(f(X)) -> F(proper(X))
 PROPER(f(X)) -> PROPER(X)
 PROPER(if(X1,X2,X3)) -> IF(proper(X1),proper(X2),proper(X3))
 PROPER(if(X1,X2,X3)) -> PROPER(X1)
 PROPER(if(X1,X2,X3)) -> PROPER(X2)
 PROPER(if(X1,X2,X3)) -> PROPER(X3)
 TOP(mark(X)) -> PROPER(X)
 TOP(mark(X)) -> TOP(proper(X))
 TOP(ok(X)) -> ACTIVE(X)
 TOP(ok(X)) -> TOP(active(X))
-> Rules:
 active(f(X)) -> f(active(X))
 active(f(X)) -> mark(if(X,c,f(ftrue)))
 active(if(ffalse,X,Y)) -> mark(Y)
 active(if(ftrue,X,Y)) -> mark(X)
 active(if(X1,X2,X3)) -> if(active(X1),X2,X3)
 active(if(X1,X2,X3)) -> if(X1,active(X2),X3)
 f(mark(X)) -> mark(f(X))
 f(ok(X)) -> ok(f(X))
 if(mark(X1),X2,X3) -> mark(if(X1,X2,X3))
 if(ok(X1),ok(X2),ok(X3)) -> ok(if(X1,X2,X3))
 if(X1,mark(X2),X3) -> mark(if(X1,X2,X3))
 proper(f(X)) -> f(proper(X))
 proper(if(X1,X2,X3)) -> if(proper(X1),proper(X2),proper(X3))
 proper(c) -> ok(c)
 proper(ffalse) -> ok(ffalse)
 proper(ftrue) -> ok(ftrue)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 IF(mark(X1),X2,X3) -> IF(X1,X2,X3)
 IF(ok(X1),ok(X2),ok(X3)) -> IF(X1,X2,X3)
 IF(X1,mark(X2),X3) -> IF(X1,X2,X3)
->->-> Rules:
 active(f(X)) -> f(active(X))
 active(f(X)) -> mark(if(X,c,f(ftrue)))
 active(if(ffalse,X,Y)) -> mark(Y)
 active(if(ftrue,X,Y)) -> mark(X)
 active(if(X1,X2,X3)) -> if(active(X1),X2,X3)
 active(if(X1,X2,X3)) -> if(X1,active(X2),X3)
 f(mark(X)) -> mark(f(X))
 f(ok(X)) -> ok(f(X))
 if(mark(X1),X2,X3) -> mark(if(X1,X2,X3))
 if(ok(X1),ok(X2),ok(X3)) -> ok(if(X1,X2,X3))
 if(X1,mark(X2),X3) -> mark(if(X1,X2,X3))
 proper(f(X)) -> f(proper(X))
 proper(if(X1,X2,X3)) -> if(proper(X1),proper(X2),proper(X3))
 proper(c) -> ok(c)
 proper(ffalse) -> ok(ffalse)
 proper(ftrue) -> ok(ftrue)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->->Cycle:
->->-> Pairs:
 F(mark(X)) -> F(X)
 F(ok(X)) -> F(X)
->->-> Rules:
 active(f(X)) -> f(active(X))
 active(f(X)) -> mark(if(X,c,f(ftrue)))
 active(if(ffalse,X,Y)) -> mark(Y)
 active(if(ftrue,X,Y)) -> mark(X)
 active(if(X1,X2,X3)) -> if(active(X1),X2,X3)
 active(if(X1,X2,X3)) -> if(X1,active(X2),X3)
 f(mark(X)) -> mark(f(X))
 f(ok(X)) -> ok(f(X))
 if(mark(X1),X2,X3) -> mark(if(X1,X2,X3))
 if(ok(X1),ok(X2),ok(X3)) -> ok(if(X1,X2,X3))
 if(X1,mark(X2),X3) -> mark(if(X1,X2,X3))
 proper(f(X)) -> f(proper(X))
 proper(if(X1,X2,X3)) -> if(proper(X1),proper(X2),proper(X3))
 proper(c) -> ok(c)
 proper(ffalse) -> ok(ffalse)
 proper(ftrue) -> ok(ftrue)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->->Cycle:
->->-> Pairs:
 PROPER(f(X)) -> PROPER(X)
 PROPER(if(X1,X2,X3)) -> PROPER(X1)
 PROPER(if(X1,X2,X3)) -> PROPER(X2)
 PROPER(if(X1,X2,X3)) -> PROPER(X3)
->->-> Rules:
 active(f(X)) -> f(active(X))
 active(f(X)) -> mark(if(X,c,f(ftrue)))
 active(if(ffalse,X,Y)) -> mark(Y)
 active(if(ftrue,X,Y)) -> mark(X)
 active(if(X1,X2,X3)) -> if(active(X1),X2,X3)
 active(if(X1,X2,X3)) -> if(X1,active(X2),X3)
 f(mark(X)) -> mark(f(X))
 f(ok(X)) -> ok(f(X))
 if(mark(X1),X2,X3) -> mark(if(X1,X2,X3))
 if(ok(X1),ok(X2),ok(X3)) -> ok(if(X1,X2,X3))
 if(X1,mark(X2),X3) -> mark(if(X1,X2,X3))
 proper(f(X)) -> f(proper(X))
 proper(if(X1,X2,X3)) -> if(proper(X1),proper(X2),proper(X3))
 proper(c) -> ok(c)
 proper(ffalse) -> ok(ffalse)
 proper(ftrue) -> ok(ftrue)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->->Cycle:
->->-> Pairs:
 ACTIVE(f(X)) -> ACTIVE(X)
 ACTIVE(if(X1,X2,X3)) -> ACTIVE(X1)
 ACTIVE(if(X1,X2,X3)) -> ACTIVE(X2)
->->-> Rules:
 active(f(X)) -> f(active(X))
 active(f(X)) -> mark(if(X,c,f(ftrue)))
 active(if(ffalse,X,Y)) -> mark(Y)
 active(if(ftrue,X,Y)) -> mark(X)
 active(if(X1,X2,X3)) -> if(active(X1),X2,X3)
 active(if(X1,X2,X3)) -> if(X1,active(X2),X3)
 f(mark(X)) -> mark(f(X))
 f(ok(X)) -> ok(f(X))
 if(mark(X1),X2,X3) -> mark(if(X1,X2,X3))
 if(ok(X1),ok(X2),ok(X3)) -> ok(if(X1,X2,X3))
 if(X1,mark(X2),X3) -> mark(if(X1,X2,X3))
 proper(f(X)) -> f(proper(X))
 proper(if(X1,X2,X3)) -> if(proper(X1),proper(X2),proper(X3))
 proper(c) -> ok(c)
 proper(ffalse) -> ok(ffalse)
 proper(ftrue) -> ok(ftrue)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->->Cycle:
->->-> Pairs:
 TOP(mark(X)) -> TOP(proper(X))
 TOP(ok(X)) -> TOP(active(X))
->->-> Rules:
 active(f(X)) -> f(active(X))
 active(f(X)) -> mark(if(X,c,f(ftrue)))
 active(if(ffalse,X,Y)) -> mark(Y)
 active(if(ftrue,X,Y)) -> mark(X)
 active(if(X1,X2,X3)) -> if(active(X1),X2,X3)
 active(if(X1,X2,X3)) -> if(X1,active(X2),X3)
 f(mark(X)) -> mark(f(X))
 f(ok(X)) -> ok(f(X))
 if(mark(X1),X2,X3) -> mark(if(X1,X2,X3))
 if(ok(X1),ok(X2),ok(X3)) -> ok(if(X1,X2,X3))
 if(X1,mark(X2),X3) -> mark(if(X1,X2,X3))
 proper(f(X)) -> f(proper(X))
 proper(if(X1,X2,X3)) -> if(proper(X1),proper(X2),proper(X3))
 proper(c) -> ok(c)
 proper(ffalse) -> ok(ffalse)
 proper(ftrue) -> ok(ftrue)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))


The problem is decomposed in 5 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 IF(mark(X1),X2,X3) -> IF(X1,X2,X3)
 IF(ok(X1),ok(X2),ok(X3)) -> IF(X1,X2,X3)
 IF(X1,mark(X2),X3) -> IF(X1,X2,X3)
-> Rules:
 active(f(X)) -> f(active(X))
 active(f(X)) -> mark(if(X,c,f(ftrue)))
 active(if(ffalse,X,Y)) -> mark(Y)
 active(if(ftrue,X,Y)) -> mark(X)
 active(if(X1,X2,X3)) -> if(active(X1),X2,X3)
 active(if(X1,X2,X3)) -> if(X1,active(X2),X3)
 f(mark(X)) -> mark(f(X))
 f(ok(X)) -> ok(f(X))
 if(mark(X1),X2,X3) -> mark(if(X1,X2,X3))
 if(ok(X1),ok(X2),ok(X3)) -> ok(if(X1,X2,X3))
 if(X1,mark(X2),X3) -> mark(if(X1,X2,X3))
 proper(f(X)) -> f(proper(X))
 proper(if(X1,X2,X3)) -> if(proper(X1),proper(X2),proper(X3))
 proper(c) -> ok(c)
 proper(ffalse) -> ok(ffalse)
 proper(ftrue) -> ok(ftrue)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Projection:
 pi(IF) = 1

Problem 1.1: 

SCC Processor:
-> Pairs:
 IF(X1,mark(X2),X3) -> IF(X1,X2,X3)
-> Rules:
 active(f(X)) -> f(active(X))
 active(f(X)) -> mark(if(X,c,f(ftrue)))
 active(if(ffalse,X,Y)) -> mark(Y)
 active(if(ftrue,X,Y)) -> mark(X)
 active(if(X1,X2,X3)) -> if(active(X1),X2,X3)
 active(if(X1,X2,X3)) -> if(X1,active(X2),X3)
 f(mark(X)) -> mark(f(X))
 f(ok(X)) -> ok(f(X))
 if(mark(X1),X2,X3) -> mark(if(X1,X2,X3))
 if(ok(X1),ok(X2),ok(X3)) -> ok(if(X1,X2,X3))
 if(X1,mark(X2),X3) -> mark(if(X1,X2,X3))
 proper(f(X)) -> f(proper(X))
 proper(if(X1,X2,X3)) -> if(proper(X1),proper(X2),proper(X3))
 proper(c) -> ok(c)
 proper(ffalse) -> ok(ffalse)
 proper(ftrue) -> ok(ftrue)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 IF(X1,mark(X2),X3) -> IF(X1,X2,X3)
->->-> Rules:
 active(f(X)) -> f(active(X))
 active(f(X)) -> mark(if(X,c,f(ftrue)))
 active(if(ffalse,X,Y)) -> mark(Y)
 active(if(ftrue,X,Y)) -> mark(X)
 active(if(X1,X2,X3)) -> if(active(X1),X2,X3)
 active(if(X1,X2,X3)) -> if(X1,active(X2),X3)
 f(mark(X)) -> mark(f(X))
 f(ok(X)) -> ok(f(X))
 if(mark(X1),X2,X3) -> mark(if(X1,X2,X3))
 if(ok(X1),ok(X2),ok(X3)) -> ok(if(X1,X2,X3))
 if(X1,mark(X2),X3) -> mark(if(X1,X2,X3))
 proper(f(X)) -> f(proper(X))
 proper(if(X1,X2,X3)) -> if(proper(X1),proper(X2),proper(X3))
 proper(c) -> ok(c)
 proper(ffalse) -> ok(ffalse)
 proper(ftrue) -> ok(ftrue)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))

Problem 1.1: 

Subterm Processor:
-> Pairs:
 IF(X1,mark(X2),X3) -> IF(X1,X2,X3)
-> Rules:
 active(f(X)) -> f(active(X))
 active(f(X)) -> mark(if(X,c,f(ftrue)))
 active(if(ffalse,X,Y)) -> mark(Y)
 active(if(ftrue,X,Y)) -> mark(X)
 active(if(X1,X2,X3)) -> if(active(X1),X2,X3)
 active(if(X1,X2,X3)) -> if(X1,active(X2),X3)
 f(mark(X)) -> mark(f(X))
 f(ok(X)) -> ok(f(X))
 if(mark(X1),X2,X3) -> mark(if(X1,X2,X3))
 if(ok(X1),ok(X2),ok(X3)) -> ok(if(X1,X2,X3))
 if(X1,mark(X2),X3) -> mark(if(X1,X2,X3))
 proper(f(X)) -> f(proper(X))
 proper(if(X1,X2,X3)) -> if(proper(X1),proper(X2),proper(X3))
 proper(c) -> ok(c)
 proper(ffalse) -> ok(ffalse)
 proper(ftrue) -> ok(ftrue)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Projection:
 pi(IF) = 2

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(f(X)) -> f(active(X))
 active(f(X)) -> mark(if(X,c,f(ftrue)))
 active(if(ffalse,X,Y)) -> mark(Y)
 active(if(ftrue,X,Y)) -> mark(X)
 active(if(X1,X2,X3)) -> if(active(X1),X2,X3)
 active(if(X1,X2,X3)) -> if(X1,active(X2),X3)
 f(mark(X)) -> mark(f(X))
 f(ok(X)) -> ok(f(X))
 if(mark(X1),X2,X3) -> mark(if(X1,X2,X3))
 if(ok(X1),ok(X2),ok(X3)) -> ok(if(X1,X2,X3))
 if(X1,mark(X2),X3) -> mark(if(X1,X2,X3))
 proper(f(X)) -> f(proper(X))
 proper(if(X1,X2,X3)) -> if(proper(X1),proper(X2),proper(X3))
 proper(c) -> ok(c)
 proper(ffalse) -> ok(ffalse)
 proper(ftrue) -> ok(ftrue)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Subterm Processor:
-> Pairs:
 F(mark(X)) -> F(X)
 F(ok(X)) -> F(X)
-> Rules:
 active(f(X)) -> f(active(X))
 active(f(X)) -> mark(if(X,c,f(ftrue)))
 active(if(ffalse,X,Y)) -> mark(Y)
 active(if(ftrue,X,Y)) -> mark(X)
 active(if(X1,X2,X3)) -> if(active(X1),X2,X3)
 active(if(X1,X2,X3)) -> if(X1,active(X2),X3)
 f(mark(X)) -> mark(f(X))
 f(ok(X)) -> ok(f(X))
 if(mark(X1),X2,X3) -> mark(if(X1,X2,X3))
 if(ok(X1),ok(X2),ok(X3)) -> ok(if(X1,X2,X3))
 if(X1,mark(X2),X3) -> mark(if(X1,X2,X3))
 proper(f(X)) -> f(proper(X))
 proper(if(X1,X2,X3)) -> if(proper(X1),proper(X2),proper(X3))
 proper(c) -> ok(c)
 proper(ffalse) -> ok(ffalse)
 proper(ftrue) -> ok(ftrue)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Projection:
 pi(F) = 1

Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(f(X)) -> f(active(X))
 active(f(X)) -> mark(if(X,c,f(ftrue)))
 active(if(ffalse,X,Y)) -> mark(Y)
 active(if(ftrue,X,Y)) -> mark(X)
 active(if(X1,X2,X3)) -> if(active(X1),X2,X3)
 active(if(X1,X2,X3)) -> if(X1,active(X2),X3)
 f(mark(X)) -> mark(f(X))
 f(ok(X)) -> ok(f(X))
 if(mark(X1),X2,X3) -> mark(if(X1,X2,X3))
 if(ok(X1),ok(X2),ok(X3)) -> ok(if(X1,X2,X3))
 if(X1,mark(X2),X3) -> mark(if(X1,X2,X3))
 proper(f(X)) -> f(proper(X))
 proper(if(X1,X2,X3)) -> if(proper(X1),proper(X2),proper(X3))
 proper(c) -> ok(c)
 proper(ffalse) -> ok(ffalse)
 proper(ftrue) -> ok(ftrue)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Subterm Processor:
-> Pairs:
 PROPER(f(X)) -> PROPER(X)
 PROPER(if(X1,X2,X3)) -> PROPER(X1)
 PROPER(if(X1,X2,X3)) -> PROPER(X2)
 PROPER(if(X1,X2,X3)) -> PROPER(X3)
-> Rules:
 active(f(X)) -> f(active(X))
 active(f(X)) -> mark(if(X,c,f(ftrue)))
 active(if(ffalse,X,Y)) -> mark(Y)
 active(if(ftrue,X,Y)) -> mark(X)
 active(if(X1,X2,X3)) -> if(active(X1),X2,X3)
 active(if(X1,X2,X3)) -> if(X1,active(X2),X3)
 f(mark(X)) -> mark(f(X))
 f(ok(X)) -> ok(f(X))
 if(mark(X1),X2,X3) -> mark(if(X1,X2,X3))
 if(ok(X1),ok(X2),ok(X3)) -> ok(if(X1,X2,X3))
 if(X1,mark(X2),X3) -> mark(if(X1,X2,X3))
 proper(f(X)) -> f(proper(X))
 proper(if(X1,X2,X3)) -> if(proper(X1),proper(X2),proper(X3))
 proper(c) -> ok(c)
 proper(ffalse) -> ok(ffalse)
 proper(ftrue) -> ok(ftrue)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Projection:
 pi(PROPER) = 1

Problem 1.3: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(f(X)) -> f(active(X))
 active(f(X)) -> mark(if(X,c,f(ftrue)))
 active(if(ffalse,X,Y)) -> mark(Y)
 active(if(ftrue,X,Y)) -> mark(X)
 active(if(X1,X2,X3)) -> if(active(X1),X2,X3)
 active(if(X1,X2,X3)) -> if(X1,active(X2),X3)
 f(mark(X)) -> mark(f(X))
 f(ok(X)) -> ok(f(X))
 if(mark(X1),X2,X3) -> mark(if(X1,X2,X3))
 if(ok(X1),ok(X2),ok(X3)) -> ok(if(X1,X2,X3))
 if(X1,mark(X2),X3) -> mark(if(X1,X2,X3))
 proper(f(X)) -> f(proper(X))
 proper(if(X1,X2,X3)) -> if(proper(X1),proper(X2),proper(X3))
 proper(c) -> ok(c)
 proper(ffalse) -> ok(ffalse)
 proper(ftrue) -> ok(ftrue)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.4: 

Subterm Processor:
-> Pairs:
 ACTIVE(f(X)) -> ACTIVE(X)
 ACTIVE(if(X1,X2,X3)) -> ACTIVE(X1)
 ACTIVE(if(X1,X2,X3)) -> ACTIVE(X2)
-> Rules:
 active(f(X)) -> f(active(X))
 active(f(X)) -> mark(if(X,c,f(ftrue)))
 active(if(ffalse,X,Y)) -> mark(Y)
 active(if(ftrue,X,Y)) -> mark(X)
 active(if(X1,X2,X3)) -> if(active(X1),X2,X3)
 active(if(X1,X2,X3)) -> if(X1,active(X2),X3)
 f(mark(X)) -> mark(f(X))
 f(ok(X)) -> ok(f(X))
 if(mark(X1),X2,X3) -> mark(if(X1,X2,X3))
 if(ok(X1),ok(X2),ok(X3)) -> ok(if(X1,X2,X3))
 if(X1,mark(X2),X3) -> mark(if(X1,X2,X3))
 proper(f(X)) -> f(proper(X))
 proper(if(X1,X2,X3)) -> if(proper(X1),proper(X2),proper(X3))
 proper(c) -> ok(c)
 proper(ffalse) -> ok(ffalse)
 proper(ftrue) -> ok(ftrue)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Projection:
 pi(ACTIVE) = 1

Problem 1.4: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(f(X)) -> f(active(X))
 active(f(X)) -> mark(if(X,c,f(ftrue)))
 active(if(ffalse,X,Y)) -> mark(Y)
 active(if(ftrue,X,Y)) -> mark(X)
 active(if(X1,X2,X3)) -> if(active(X1),X2,X3)
 active(if(X1,X2,X3)) -> if(X1,active(X2),X3)
 f(mark(X)) -> mark(f(X))
 f(ok(X)) -> ok(f(X))
 if(mark(X1),X2,X3) -> mark(if(X1,X2,X3))
 if(ok(X1),ok(X2),ok(X3)) -> ok(if(X1,X2,X3))
 if(X1,mark(X2),X3) -> mark(if(X1,X2,X3))
 proper(f(X)) -> f(proper(X))
 proper(if(X1,X2,X3)) -> if(proper(X1),proper(X2),proper(X3))
 proper(c) -> ok(c)
 proper(ffalse) -> ok(ffalse)
 proper(ftrue) -> ok(ftrue)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.5: 

Reduction Pair Processor:
-> Pairs:
 TOP(mark(X)) -> TOP(proper(X))
 TOP(ok(X)) -> TOP(active(X))
-> Rules:
 active(f(X)) -> f(active(X))
 active(f(X)) -> mark(if(X,c,f(ftrue)))
 active(if(ffalse,X,Y)) -> mark(Y)
 active(if(ftrue,X,Y)) -> mark(X)
 active(if(X1,X2,X3)) -> if(active(X1),X2,X3)
 active(if(X1,X2,X3)) -> if(X1,active(X2),X3)
 f(mark(X)) -> mark(f(X))
 f(ok(X)) -> ok(f(X))
 if(mark(X1),X2,X3) -> mark(if(X1,X2,X3))
 if(ok(X1),ok(X2),ok(X3)) -> ok(if(X1,X2,X3))
 if(X1,mark(X2),X3) -> mark(if(X1,X2,X3))
 proper(f(X)) -> f(proper(X))
 proper(if(X1,X2,X3)) -> if(proper(X1),proper(X2),proper(X3))
 proper(c) -> ok(c)
 proper(ffalse) -> ok(ffalse)
 proper(ftrue) -> ok(ftrue)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
-> Usable rules:
 active(f(X)) -> f(active(X))
 active(f(X)) -> mark(if(X,c,f(ftrue)))
 active(if(ffalse,X,Y)) -> mark(Y)
 active(if(ftrue,X,Y)) -> mark(X)
 active(if(X1,X2,X3)) -> if(active(X1),X2,X3)
 active(if(X1,X2,X3)) -> if(X1,active(X2),X3)
 f(mark(X)) -> mark(f(X))
 f(ok(X)) -> ok(f(X))
 if(mark(X1),X2,X3) -> mark(if(X1,X2,X3))
 if(ok(X1),ok(X2),ok(X3)) -> ok(if(X1,X2,X3))
 if(X1,mark(X2),X3) -> mark(if(X1,X2,X3))
 proper(f(X)) -> f(proper(X))
 proper(if(X1,X2,X3)) -> if(proper(X1),proper(X2),proper(X3))
 proper(c) -> ok(c)
 proper(ffalse) -> ok(ffalse)
 proper(ftrue) -> ok(ftrue)
->Interpretation type:
 Simple mixed
->Coefficients:
 All rationals
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[active](X) = X
[f](X) = 2.X + 1
[if](X1,X2,X3) = 1/2.X1.X3 + X1 + X2
[proper](X) = X
[top](X) = 0
[c] = 0
[fSNonEmpty] = 0
[ffalse] = 2
[mark](X) = X + 1/2
[ok](X) = X
[ftrue] = 1/2
[ACTIVE](X) = 0
[F](X) = 0
[IF](X1,X2,X3) = 0
[PROPER](X) = 0
[TOP](X) = 1/2.X

Problem 1.5: 

SCC Processor:
-> Pairs:
 TOP(ok(X)) -> TOP(active(X))
-> Rules:
 active(f(X)) -> f(active(X))
 active(f(X)) -> mark(if(X,c,f(ftrue)))
 active(if(ffalse,X,Y)) -> mark(Y)
 active(if(ftrue,X,Y)) -> mark(X)
 active(if(X1,X2,X3)) -> if(active(X1),X2,X3)
 active(if(X1,X2,X3)) -> if(X1,active(X2),X3)
 f(mark(X)) -> mark(f(X))
 f(ok(X)) -> ok(f(X))
 if(mark(X1),X2,X3) -> mark(if(X1,X2,X3))
 if(ok(X1),ok(X2),ok(X3)) -> ok(if(X1,X2,X3))
 if(X1,mark(X2),X3) -> mark(if(X1,X2,X3))
 proper(f(X)) -> f(proper(X))
 proper(if(X1,X2,X3)) -> if(proper(X1),proper(X2),proper(X3))
 proper(c) -> ok(c)
 proper(ffalse) -> ok(ffalse)
 proper(ftrue) -> ok(ftrue)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 TOP(ok(X)) -> TOP(active(X))
->->-> Rules:
 active(f(X)) -> f(active(X))
 active(f(X)) -> mark(if(X,c,f(ftrue)))
 active(if(ffalse,X,Y)) -> mark(Y)
 active(if(ftrue,X,Y)) -> mark(X)
 active(if(X1,X2,X3)) -> if(active(X1),X2,X3)
 active(if(X1,X2,X3)) -> if(X1,active(X2),X3)
 f(mark(X)) -> mark(f(X))
 f(ok(X)) -> ok(f(X))
 if(mark(X1),X2,X3) -> mark(if(X1,X2,X3))
 if(ok(X1),ok(X2),ok(X3)) -> ok(if(X1,X2,X3))
 if(X1,mark(X2),X3) -> mark(if(X1,X2,X3))
 proper(f(X)) -> f(proper(X))
 proper(if(X1,X2,X3)) -> if(proper(X1),proper(X2),proper(X3))
 proper(c) -> ok(c)
 proper(ffalse) -> ok(ffalse)
 proper(ftrue) -> ok(ftrue)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))

Problem 1.5: 

Reduction Pair Processor:
-> Pairs:
 TOP(ok(X)) -> TOP(active(X))
-> Rules:
 active(f(X)) -> f(active(X))
 active(f(X)) -> mark(if(X,c,f(ftrue)))
 active(if(ffalse,X,Y)) -> mark(Y)
 active(if(ftrue,X,Y)) -> mark(X)
 active(if(X1,X2,X3)) -> if(active(X1),X2,X3)
 active(if(X1,X2,X3)) -> if(X1,active(X2),X3)
 f(mark(X)) -> mark(f(X))
 f(ok(X)) -> ok(f(X))
 if(mark(X1),X2,X3) -> mark(if(X1,X2,X3))
 if(ok(X1),ok(X2),ok(X3)) -> ok(if(X1,X2,X3))
 if(X1,mark(X2),X3) -> mark(if(X1,X2,X3))
 proper(f(X)) -> f(proper(X))
 proper(if(X1,X2,X3)) -> if(proper(X1),proper(X2),proper(X3))
 proper(c) -> ok(c)
 proper(ffalse) -> ok(ffalse)
 proper(ftrue) -> ok(ftrue)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
-> Usable rules:
 active(f(X)) -> f(active(X))
 active(f(X)) -> mark(if(X,c,f(ftrue)))
 active(if(ffalse,X,Y)) -> mark(Y)
 active(if(ftrue,X,Y)) -> mark(X)
 active(if(X1,X2,X3)) -> if(active(X1),X2,X3)
 active(if(X1,X2,X3)) -> if(X1,active(X2),X3)
 f(mark(X)) -> mark(f(X))
 f(ok(X)) -> ok(f(X))
 if(mark(X1),X2,X3) -> mark(if(X1,X2,X3))
 if(ok(X1),ok(X2),ok(X3)) -> ok(if(X1,X2,X3))
 if(X1,mark(X2),X3) -> mark(if(X1,X2,X3))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[active](X) = 2.X + 1
[f](X) = 2.X + 1
[if](X1,X2,X3) = 2.X1 + 2.X2 + X3 + 2
[proper](X) = 0
[top](X) = 0
[c] = 0
[fSNonEmpty] = 0
[ffalse] = 0
[mark](X) = X
[ok](X) = 2.X + 2
[ftrue] = 0
[ACTIVE](X) = 0
[F](X) = 0
[IF](X1,X2,X3) = 0
[PROPER](X) = 0
[TOP](X) = 2.X

Problem 1.5: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(f(X)) -> f(active(X))
 active(f(X)) -> mark(if(X,c,f(ftrue)))
 active(if(ffalse,X,Y)) -> mark(Y)
 active(if(ftrue,X,Y)) -> mark(X)
 active(if(X1,X2,X3)) -> if(active(X1),X2,X3)
 active(if(X1,X2,X3)) -> if(X1,active(X2),X3)
 f(mark(X)) -> mark(f(X))
 f(ok(X)) -> ok(f(X))
 if(mark(X1),X2,X3) -> mark(if(X1,X2,X3))
 if(ok(X1),ok(X2),ok(X3)) -> ok(if(X1,X2,X3))
 if(X1,mark(X2),X3) -> mark(if(X1,X2,X3))
 proper(f(X)) -> f(proper(X))
 proper(if(X1,X2,X3)) -> if(proper(X1),proper(X2),proper(X3))
 proper(c) -> ok(c)
 proper(ffalse) -> ok(ffalse)
 proper(ftrue) -> ok(ftrue)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
