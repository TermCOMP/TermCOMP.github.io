NO
proof of /hpcwork/ff862203/termcomp25/benchmarks/7opA3.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be disproven:

(0) QTRS
(1) Overlay + Local Confluence [EQUIVALENT, 0 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 0 ms]
(4) QDP
(5) DependencyGraphProof [EQUIVALENT, 0 ms]
(6) QDP
(7) UsableRulesProof [EQUIVALENT, 0 ms]
(8) QDP
(9) QReductionProof [EQUIVALENT, 0 ms]
(10) QDP
(11) TransformationProof [EQUIVALENT, 0 ms]
(12) QDP
(13) UsableRulesProof [EQUIVALENT, 0 ms]
(14) QDP
(15) QReductionProof [EQUIVALENT, 0 ms]
(16) QDP
(17) NonTerminationLoopProof [COMPLETE, 0 ms]
(18) NO


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(0) -> cons(0, f(s(0)))
   f(s(0)) -> f(p(s(0)))
   p(s(0)) -> 0

Q is empty.

----------------------------------------

(1) Overlay + Local Confluence (EQUIVALENT)
The TRS is overlay and locally confluent. By [NOC] we can switch to innermost.
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(0) -> cons(0, f(s(0)))
   f(s(0)) -> f(p(s(0)))
   p(s(0)) -> 0

The set Q consists of the following terms:

   f(0)
   f(s(0))
   p(s(0))


----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> F(s(0))
   F(s(0)) -> F(p(s(0)))
   F(s(0)) -> P(s(0))

The TRS R consists of the following rules:

   f(0) -> cons(0, f(s(0)))
   f(s(0)) -> f(p(s(0)))
   p(s(0)) -> 0

The set Q consists of the following terms:

   f(0)
   f(s(0))
   p(s(0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(0)) -> F(p(s(0)))
   F(0) -> F(s(0))

The TRS R consists of the following rules:

   f(0) -> cons(0, f(s(0)))
   f(s(0)) -> f(p(s(0)))
   p(s(0)) -> 0

The set Q consists of the following terms:

   f(0)
   f(s(0))
   p(s(0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(0)) -> F(p(s(0)))
   F(0) -> F(s(0))

The TRS R consists of the following rules:

   p(s(0)) -> 0

The set Q consists of the following terms:

   f(0)
   f(s(0))
   p(s(0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   f(0)
   f(s(0))


----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(0)) -> F(p(s(0)))
   F(0) -> F(s(0))

The TRS R consists of the following rules:

   p(s(0)) -> 0

The set Q consists of the following terms:

   p(s(0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule F(s(0)) -> F(p(s(0))) at position [0] we obtained the following new rules [LPAR04]:

   (F(s(0)) -> F(0),F(s(0)) -> F(0))


----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> F(s(0))
   F(s(0)) -> F(0)

The TRS R consists of the following rules:

   p(s(0)) -> 0

The set Q consists of the following terms:

   p(s(0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> F(s(0))
   F(s(0)) -> F(0)

R is empty.
The set Q consists of the following terms:

   p(s(0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   p(s(0))


----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> F(s(0))
   F(s(0)) -> F(0)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) NonTerminationLoopProof (COMPLETE)
We used the non-termination processor [FROCOS05] to show that the DP problem is infinite.
Found a loop by narrowing to the left:

s = F(s(0)) evaluates to  t =F(s(0))

Thus s starts an infinite chain as s semiunifies with t with the following substitutions:
* Matcher: [ ]
* Semiunifier: [ ]

--------------------------------------------------------------------------------
Rewriting sequence

F(s(0)) -> F(0)
with rule F(s(0)) -> F(0) at position [] and matcher [ ]

F(0) -> F(s(0))
with rule F(0) -> F(s(0))

Now applying the matcher to the start term leads to a term which is equal to the last term in the rewriting sequence


All these steps are and every following step will be a correct step w.r.t to Q.




----------------------------------------

(18)
NO
