YES

Problem 1: 

(VAR vu95NonEmpty X)
(RULES
active(f(f(a))) -> mark(f(g(f(a))))
f(active(X)) -> f(X)
f(mark(X)) -> f(X)
g(active(X)) -> g(X)
g(mark(X)) -> g(X)
mark(f(X)) -> active(f(X))
mark(g(X)) -> active(g(mark(X)))
mark(a) -> active(a)
)


Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 ACTIVE(f(f(a))) -> MARK(f(g(f(a))))
 F(active(X)) -> F(X)
 F(mark(X)) -> F(X)
 G(active(X)) -> G(X)
 G(mark(X)) -> G(X)
 MARK(f(X)) -> ACTIVE(f(X))
 MARK(g(X)) -> ACTIVE(g(mark(X)))
 MARK(g(X)) -> G(mark(X))
 MARK(g(X)) -> MARK(X)
-> Rules:
 active(f(f(a))) -> mark(f(g(f(a))))
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 mark(f(X)) -> active(f(X))
 mark(g(X)) -> active(g(mark(X)))
 mark(a) -> active(a)

Problem 1: 

SCC Processor:
-> Pairs:
 ACTIVE(f(f(a))) -> MARK(f(g(f(a))))
 F(active(X)) -> F(X)
 F(mark(X)) -> F(X)
 G(active(X)) -> G(X)
 G(mark(X)) -> G(X)
 MARK(f(X)) -> ACTIVE(f(X))
 MARK(g(X)) -> ACTIVE(g(mark(X)))
 MARK(g(X)) -> G(mark(X))
 MARK(g(X)) -> MARK(X)
-> Rules:
 active(f(f(a))) -> mark(f(g(f(a))))
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 mark(f(X)) -> active(f(X))
 mark(g(X)) -> active(g(mark(X)))
 mark(a) -> active(a)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 G(active(X)) -> G(X)
 G(mark(X)) -> G(X)
->->-> Rules:
 active(f(f(a))) -> mark(f(g(f(a))))
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 mark(f(X)) -> active(f(X))
 mark(g(X)) -> active(g(mark(X)))
 mark(a) -> active(a)
->->Cycle:
->->-> Pairs:
 F(active(X)) -> F(X)
 F(mark(X)) -> F(X)
->->-> Rules:
 active(f(f(a))) -> mark(f(g(f(a))))
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 mark(f(X)) -> active(f(X))
 mark(g(X)) -> active(g(mark(X)))
 mark(a) -> active(a)
->->Cycle:
->->-> Pairs:
 ACTIVE(f(f(a))) -> MARK(f(g(f(a))))
 MARK(f(X)) -> ACTIVE(f(X))
->->-> Rules:
 active(f(f(a))) -> mark(f(g(f(a))))
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 mark(f(X)) -> active(f(X))
 mark(g(X)) -> active(g(mark(X)))
 mark(a) -> active(a)
->->Cycle:
->->-> Pairs:
 MARK(g(X)) -> MARK(X)
->->-> Rules:
 active(f(f(a))) -> mark(f(g(f(a))))
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 mark(f(X)) -> active(f(X))
 mark(g(X)) -> active(g(mark(X)))
 mark(a) -> active(a)


The problem is decomposed in 4 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 G(active(X)) -> G(X)
 G(mark(X)) -> G(X)
-> Rules:
 active(f(f(a))) -> mark(f(g(f(a))))
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 mark(f(X)) -> active(f(X))
 mark(g(X)) -> active(g(mark(X)))
 mark(a) -> active(a)
->Projection:
 pi(G) = 1

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(f(f(a))) -> mark(f(g(f(a))))
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 mark(f(X)) -> active(f(X))
 mark(g(X)) -> active(g(mark(X)))
 mark(a) -> active(a)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Subterm Processor:
-> Pairs:
 F(active(X)) -> F(X)
 F(mark(X)) -> F(X)
-> Rules:
 active(f(f(a))) -> mark(f(g(f(a))))
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 mark(f(X)) -> active(f(X))
 mark(g(X)) -> active(g(mark(X)))
 mark(a) -> active(a)
->Projection:
 pi(F) = 1

Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(f(f(a))) -> mark(f(g(f(a))))
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 mark(f(X)) -> active(f(X))
 mark(g(X)) -> active(g(mark(X)))
 mark(a) -> active(a)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Reduction Pair Processor:
-> Pairs:
 ACTIVE(f(f(a))) -> MARK(f(g(f(a))))
 MARK(f(X)) -> ACTIVE(f(X))
-> Rules:
 active(f(f(a))) -> mark(f(g(f(a))))
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 mark(f(X)) -> active(f(X))
 mark(g(X)) -> active(g(mark(X)))
 mark(a) -> active(a)
-> Usable rules:
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[active](X) = 2.X
[f](X) = 2.X + 2
[g](X) = 2
[mark](X) = 2.X
[a] = 2
[fSNonEmpty] = 0
[ACTIVE](X) = 2.X + 2
[F](X) = 0
[G](X) = 0
[MARK](X) = 2.X + 2

Problem 1.3: 

SCC Processor:
-> Pairs:
 MARK(f(X)) -> ACTIVE(f(X))
-> Rules:
 active(f(f(a))) -> mark(f(g(f(a))))
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 mark(f(X)) -> active(f(X))
 mark(g(X)) -> active(g(mark(X)))
 mark(a) -> active(a)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.4: 

Subterm Processor:
-> Pairs:
 MARK(g(X)) -> MARK(X)
-> Rules:
 active(f(f(a))) -> mark(f(g(f(a))))
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 mark(f(X)) -> active(f(X))
 mark(g(X)) -> active(g(mark(X)))
 mark(a) -> active(a)
->Projection:
 pi(MARK) = 1

Problem 1.4: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(f(f(a))) -> mark(f(g(f(a))))
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 mark(f(X)) -> active(f(X))
 mark(g(X)) -> active(g(mark(X)))
 mark(a) -> active(a)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
