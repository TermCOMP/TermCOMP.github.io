YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/3M7IN.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRSRRRProof [EQUIVALENT, 27 ms]
(2) QTRS
(3) QTRSRRRProof [EQUIVALENT, 0 ms]
(4) QTRS
(5) QTRSRRRProof [EQUIVALENT, 0 ms]
(6) QTRS
(7) AAECC Innermost [EQUIVALENT, 0 ms]
(8) QTRS
(9) DependencyPairsProof [EQUIVALENT, 0 ms]
(10) QDP
(11) DependencyGraphProof [EQUIVALENT, 0 ms]
(12) TRUE


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(0) -> cons(0, n__f(s(0)))
   f(s(0)) -> f(p(s(0)))
   p(s(X)) -> X
   f(X) -> n__f(X)
   activate(n__f(X)) -> f(X)
   activate(X) -> X

Q is empty.

----------------------------------------

(1) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(activate(x_1)) = 1 + 2*x_1
   POL(cons(x_1, x_2)) = 2*x_1 + x_2
   POL(f(x_1)) = 1 + 2*x_1
   POL(n__f(x_1)) = x_1
   POL(p(x_1)) = 2*x_1
   POL(s(x_1)) = 2*x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   f(0) -> cons(0, n__f(s(0)))
   f(X) -> n__f(X)
   activate(X) -> X




----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(s(0)) -> f(p(s(0)))
   p(s(X)) -> X
   activate(n__f(X)) -> f(X)

Q is empty.

----------------------------------------

(3) QTRSRRRProof (EQUIVALENT)
Used ordering:
f/1(YES)
s/1(YES)
0/0)
p/1)YES(
activate/1)YES(
n__f/1(YES)

Quasi precedence:
[f_1, s_1, n__f_1] > 0


Status:
f_1: multiset status
s_1: [1]
0: multiset status
n__f_1: multiset status

With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   p(s(X)) -> X




----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(s(0)) -> f(p(s(0)))
   activate(n__f(X)) -> f(X)

Q is empty.

----------------------------------------

(5) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(activate(x_1)) = 2 + x_1
   POL(f(x_1)) = 2*x_1
   POL(n__f(x_1)) = 2 + 2*x_1
   POL(p(x_1)) = 2*x_1
   POL(s(x_1)) = x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   activate(n__f(X)) -> f(X)




----------------------------------------

(6)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(s(0)) -> f(p(s(0)))

Q is empty.

----------------------------------------

(7) AAECC Innermost (EQUIVALENT)
We have applied [NOC,AAECCNOC] to switch to innermost. The TRS R 1 is none

The TRS R 2 is 
   f(s(0)) -> f(p(s(0)))

The signature Sigma is {f_1}
----------------------------------------

(8)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(s(0)) -> f(p(s(0)))

The set Q consists of the following terms:

   f(s(0))


----------------------------------------

(9) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(0)) -> F(p(s(0)))

The TRS R consists of the following rules:

   f(s(0)) -> f(p(s(0)))

The set Q consists of the following terms:

   f(s(0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 1 less node.
----------------------------------------

(12)
TRUE
