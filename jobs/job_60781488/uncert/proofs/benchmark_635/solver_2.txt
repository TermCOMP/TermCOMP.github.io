YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/YS8yf.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) Overlay + Local Confluence [EQUIVALENT, 0 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 0 ms]
(4) QDP
(5) DependencyGraphProof [EQUIVALENT, 0 ms]
(6) AND
    (7) QDP
        (8) UsableRulesProof [EQUIVALENT, 0 ms]
        (9) QDP
        (10) QReductionProof [EQUIVALENT, 0 ms]
        (11) QDP
        (12) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (13) YES
    (14) QDP
        (15) UsableRulesProof [EQUIVALENT, 0 ms]
        (16) QDP
        (17) QReductionProof [EQUIVALENT, 0 ms]
        (18) QDP
        (19) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (20) YES
    (21) QDP
        (22) UsableRulesProof [EQUIVALENT, 0 ms]
        (23) QDP
        (24) QReductionProof [EQUIVALENT, 0 ms]
        (25) QDP
        (26) TransformationProof [EQUIVALENT, 0 ms]
        (27) QDP
        (28) TransformationProof [EQUIVALENT, 0 ms]
        (29) QDP
        (30) TransformationProof [EQUIVALENT, 0 ms]
        (31) QDP
        (32) TransformationProof [EQUIVALENT, 0 ms]
        (33) QDP
        (34) TransformationProof [EQUIVALENT, 0 ms]
        (35) QDP
        (36) UsableRulesProof [EQUIVALENT, 0 ms]
        (37) QDP
        (38) QReductionProof [EQUIVALENT, 0 ms]
        (39) QDP
        (40) TransformationProof [EQUIVALENT, 0 ms]
        (41) QDP
        (42) TransformationProof [EQUIVALENT, 0 ms]
        (43) QDP
        (44) QDPOrderProof [EQUIVALENT, 39 ms]
        (45) QDP
        (46) PisEmptyProof [EQUIVALENT, 0 ms]
        (47) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   min(0, y) -> 0
   min(x, 0) -> 0
   min(s(x), s(y)) -> s(min(x, y))
   max(0, y) -> y
   max(x, 0) -> x
   max(s(x), s(y)) -> s(max(x, y))
   p(s(x)) -> x
   f(s(x), s(y), s(z)) -> f(max(s(x), max(s(y), s(z))), p(min(s(x), max(s(y), s(z)))), min(s(x), min(s(y), s(z))))
   f(0, y, z) -> max(y, z)
   f(x, 0, z) -> max(x, z)
   f(x, y, 0) -> max(x, y)

Q is empty.

----------------------------------------

(1) Overlay + Local Confluence (EQUIVALENT)
The TRS is overlay and locally confluent. By [NOC] we can switch to innermost.
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   min(0, y) -> 0
   min(x, 0) -> 0
   min(s(x), s(y)) -> s(min(x, y))
   max(0, y) -> y
   max(x, 0) -> x
   max(s(x), s(y)) -> s(max(x, y))
   p(s(x)) -> x
   f(s(x), s(y), s(z)) -> f(max(s(x), max(s(y), s(z))), p(min(s(x), max(s(y), s(z)))), min(s(x), min(s(y), s(z))))
   f(0, y, z) -> max(y, z)
   f(x, 0, z) -> max(x, z)
   f(x, y, 0) -> max(x, y)

The set Q consists of the following terms:

   min(0, x0)
   min(x0, 0)
   min(s(x0), s(x1))
   max(0, x0)
   max(x0, 0)
   max(s(x0), s(x1))
   p(s(x0))
   f(s(x0), s(x1), s(x2))
   f(0, x0, x1)
   f(x0, 0, x1)
   f(x0, x1, 0)


----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MIN(s(x), s(y)) -> MIN(x, y)
   MAX(s(x), s(y)) -> MAX(x, y)
   F(s(x), s(y), s(z)) -> F(max(s(x), max(s(y), s(z))), p(min(s(x), max(s(y), s(z)))), min(s(x), min(s(y), s(z))))
   F(s(x), s(y), s(z)) -> MAX(s(x), max(s(y), s(z)))
   F(s(x), s(y), s(z)) -> MAX(s(y), s(z))
   F(s(x), s(y), s(z)) -> P(min(s(x), max(s(y), s(z))))
   F(s(x), s(y), s(z)) -> MIN(s(x), max(s(y), s(z)))
   F(s(x), s(y), s(z)) -> MIN(s(x), min(s(y), s(z)))
   F(s(x), s(y), s(z)) -> MIN(s(y), s(z))
   F(0, y, z) -> MAX(y, z)
   F(x, 0, z) -> MAX(x, z)
   F(x, y, 0) -> MAX(x, y)

The TRS R consists of the following rules:

   min(0, y) -> 0
   min(x, 0) -> 0
   min(s(x), s(y)) -> s(min(x, y))
   max(0, y) -> y
   max(x, 0) -> x
   max(s(x), s(y)) -> s(max(x, y))
   p(s(x)) -> x
   f(s(x), s(y), s(z)) -> f(max(s(x), max(s(y), s(z))), p(min(s(x), max(s(y), s(z)))), min(s(x), min(s(y), s(z))))
   f(0, y, z) -> max(y, z)
   f(x, 0, z) -> max(x, z)
   f(x, y, 0) -> max(x, y)

The set Q consists of the following terms:

   min(0, x0)
   min(x0, 0)
   min(s(x0), s(x1))
   max(0, x0)
   max(x0, 0)
   max(s(x0), s(x1))
   p(s(x0))
   f(s(x0), s(x1), s(x2))
   f(0, x0, x1)
   f(x0, 0, x1)
   f(x0, x1, 0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 3 SCCs with 9 less nodes.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MAX(s(x), s(y)) -> MAX(x, y)

The TRS R consists of the following rules:

   min(0, y) -> 0
   min(x, 0) -> 0
   min(s(x), s(y)) -> s(min(x, y))
   max(0, y) -> y
   max(x, 0) -> x
   max(s(x), s(y)) -> s(max(x, y))
   p(s(x)) -> x
   f(s(x), s(y), s(z)) -> f(max(s(x), max(s(y), s(z))), p(min(s(x), max(s(y), s(z)))), min(s(x), min(s(y), s(z))))
   f(0, y, z) -> max(y, z)
   f(x, 0, z) -> max(x, z)
   f(x, y, 0) -> max(x, y)

The set Q consists of the following terms:

   min(0, x0)
   min(x0, 0)
   min(s(x0), s(x1))
   max(0, x0)
   max(x0, 0)
   max(s(x0), s(x1))
   p(s(x0))
   f(s(x0), s(x1), s(x2))
   f(0, x0, x1)
   f(x0, 0, x1)
   f(x0, x1, 0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(8) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(9)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MAX(s(x), s(y)) -> MAX(x, y)

R is empty.
The set Q consists of the following terms:

   min(0, x0)
   min(x0, 0)
   min(s(x0), s(x1))
   max(0, x0)
   max(x0, 0)
   max(s(x0), s(x1))
   p(s(x0))
   f(s(x0), s(x1), s(x2))
   f(0, x0, x1)
   f(x0, 0, x1)
   f(x0, x1, 0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(10) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   min(0, x0)
   min(x0, 0)
   min(s(x0), s(x1))
   max(0, x0)
   max(x0, 0)
   max(s(x0), s(x1))
   p(s(x0))
   f(s(x0), s(x1), s(x2))
   f(0, x0, x1)
   f(x0, 0, x1)
   f(x0, x1, 0)


----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MAX(s(x), s(y)) -> MAX(x, y)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(12) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*MAX(s(x), s(y)) -> MAX(x, y)
The graph contains the following edges 1 > 1, 2 > 2


----------------------------------------

(13)
YES

----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MIN(s(x), s(y)) -> MIN(x, y)

The TRS R consists of the following rules:

   min(0, y) -> 0
   min(x, 0) -> 0
   min(s(x), s(y)) -> s(min(x, y))
   max(0, y) -> y
   max(x, 0) -> x
   max(s(x), s(y)) -> s(max(x, y))
   p(s(x)) -> x
   f(s(x), s(y), s(z)) -> f(max(s(x), max(s(y), s(z))), p(min(s(x), max(s(y), s(z)))), min(s(x), min(s(y), s(z))))
   f(0, y, z) -> max(y, z)
   f(x, 0, z) -> max(x, z)
   f(x, y, 0) -> max(x, y)

The set Q consists of the following terms:

   min(0, x0)
   min(x0, 0)
   min(s(x0), s(x1))
   max(0, x0)
   max(x0, 0)
   max(s(x0), s(x1))
   p(s(x0))
   f(s(x0), s(x1), s(x2))
   f(0, x0, x1)
   f(x0, 0, x1)
   f(x0, x1, 0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MIN(s(x), s(y)) -> MIN(x, y)

R is empty.
The set Q consists of the following terms:

   min(0, x0)
   min(x0, 0)
   min(s(x0), s(x1))
   max(0, x0)
   max(x0, 0)
   max(s(x0), s(x1))
   p(s(x0))
   f(s(x0), s(x1), s(x2))
   f(0, x0, x1)
   f(x0, 0, x1)
   f(x0, x1, 0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   min(0, x0)
   min(x0, 0)
   min(s(x0), s(x1))
   max(0, x0)
   max(x0, 0)
   max(s(x0), s(x1))
   p(s(x0))
   f(s(x0), s(x1), s(x2))
   f(0, x0, x1)
   f(x0, 0, x1)
   f(x0, x1, 0)


----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MIN(s(x), s(y)) -> MIN(x, y)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*MIN(s(x), s(y)) -> MIN(x, y)
The graph contains the following edges 1 > 1, 2 > 2


----------------------------------------

(20)
YES

----------------------------------------

(21)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(x), s(y), s(z)) -> F(max(s(x), max(s(y), s(z))), p(min(s(x), max(s(y), s(z)))), min(s(x), min(s(y), s(z))))

The TRS R consists of the following rules:

   min(0, y) -> 0
   min(x, 0) -> 0
   min(s(x), s(y)) -> s(min(x, y))
   max(0, y) -> y
   max(x, 0) -> x
   max(s(x), s(y)) -> s(max(x, y))
   p(s(x)) -> x
   f(s(x), s(y), s(z)) -> f(max(s(x), max(s(y), s(z))), p(min(s(x), max(s(y), s(z)))), min(s(x), min(s(y), s(z))))
   f(0, y, z) -> max(y, z)
   f(x, 0, z) -> max(x, z)
   f(x, y, 0) -> max(x, y)

The set Q consists of the following terms:

   min(0, x0)
   min(x0, 0)
   min(s(x0), s(x1))
   max(0, x0)
   max(x0, 0)
   max(s(x0), s(x1))
   p(s(x0))
   f(s(x0), s(x1), s(x2))
   f(0, x0, x1)
   f(x0, 0, x1)
   f(x0, x1, 0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(22) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(23)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(x), s(y), s(z)) -> F(max(s(x), max(s(y), s(z))), p(min(s(x), max(s(y), s(z)))), min(s(x), min(s(y), s(z))))

The TRS R consists of the following rules:

   max(s(x), s(y)) -> s(max(x, y))
   max(x, 0) -> x
   min(x, 0) -> 0
   min(s(x), s(y)) -> s(min(x, y))
   p(s(x)) -> x
   min(0, y) -> 0
   max(0, y) -> y

The set Q consists of the following terms:

   min(0, x0)
   min(x0, 0)
   min(s(x0), s(x1))
   max(0, x0)
   max(x0, 0)
   max(s(x0), s(x1))
   p(s(x0))
   f(s(x0), s(x1), s(x2))
   f(0, x0, x1)
   f(x0, 0, x1)
   f(x0, x1, 0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(24) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   f(s(x0), s(x1), s(x2))
   f(0, x0, x1)
   f(x0, 0, x1)
   f(x0, x1, 0)


----------------------------------------

(25)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(x), s(y), s(z)) -> F(max(s(x), max(s(y), s(z))), p(min(s(x), max(s(y), s(z)))), min(s(x), min(s(y), s(z))))

The TRS R consists of the following rules:

   max(s(x), s(y)) -> s(max(x, y))
   max(x, 0) -> x
   min(x, 0) -> 0
   min(s(x), s(y)) -> s(min(x, y))
   p(s(x)) -> x
   min(0, y) -> 0
   max(0, y) -> y

The set Q consists of the following terms:

   min(0, x0)
   min(x0, 0)
   min(s(x0), s(x1))
   max(0, x0)
   max(x0, 0)
   max(s(x0), s(x1))
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(26) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule F(s(x), s(y), s(z)) -> F(max(s(x), max(s(y), s(z))), p(min(s(x), max(s(y), s(z)))), min(s(x), min(s(y), s(z)))) at position [0,1] we obtained the following new rules [LPAR04]:

   (F(s(x), s(y), s(z)) -> F(max(s(x), s(max(y, z))), p(min(s(x), max(s(y), s(z)))), min(s(x), min(s(y), s(z)))),F(s(x), s(y), s(z)) -> F(max(s(x), s(max(y, z))), p(min(s(x), max(s(y), s(z)))), min(s(x), min(s(y), s(z)))))


----------------------------------------

(27)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(x), s(y), s(z)) -> F(max(s(x), s(max(y, z))), p(min(s(x), max(s(y), s(z)))), min(s(x), min(s(y), s(z))))

The TRS R consists of the following rules:

   max(s(x), s(y)) -> s(max(x, y))
   max(x, 0) -> x
   min(x, 0) -> 0
   min(s(x), s(y)) -> s(min(x, y))
   p(s(x)) -> x
   min(0, y) -> 0
   max(0, y) -> y

The set Q consists of the following terms:

   min(0, x0)
   min(x0, 0)
   min(s(x0), s(x1))
   max(0, x0)
   max(x0, 0)
   max(s(x0), s(x1))
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(28) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule F(s(x), s(y), s(z)) -> F(max(s(x), s(max(y, z))), p(min(s(x), max(s(y), s(z)))), min(s(x), min(s(y), s(z)))) at position [0] we obtained the following new rules [LPAR04]:

   (F(s(x), s(y), s(z)) -> F(s(max(x, max(y, z))), p(min(s(x), max(s(y), s(z)))), min(s(x), min(s(y), s(z)))),F(s(x), s(y), s(z)) -> F(s(max(x, max(y, z))), p(min(s(x), max(s(y), s(z)))), min(s(x), min(s(y), s(z)))))


----------------------------------------

(29)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(x), s(y), s(z)) -> F(s(max(x, max(y, z))), p(min(s(x), max(s(y), s(z)))), min(s(x), min(s(y), s(z))))

The TRS R consists of the following rules:

   max(s(x), s(y)) -> s(max(x, y))
   max(x, 0) -> x
   min(x, 0) -> 0
   min(s(x), s(y)) -> s(min(x, y))
   p(s(x)) -> x
   min(0, y) -> 0
   max(0, y) -> y

The set Q consists of the following terms:

   min(0, x0)
   min(x0, 0)
   min(s(x0), s(x1))
   max(0, x0)
   max(x0, 0)
   max(s(x0), s(x1))
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(30) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule F(s(x), s(y), s(z)) -> F(s(max(x, max(y, z))), p(min(s(x), max(s(y), s(z)))), min(s(x), min(s(y), s(z)))) at position [1,0,1] we obtained the following new rules [LPAR04]:

   (F(s(x), s(y), s(z)) -> F(s(max(x, max(y, z))), p(min(s(x), s(max(y, z)))), min(s(x), min(s(y), s(z)))),F(s(x), s(y), s(z)) -> F(s(max(x, max(y, z))), p(min(s(x), s(max(y, z)))), min(s(x), min(s(y), s(z)))))


----------------------------------------

(31)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(x), s(y), s(z)) -> F(s(max(x, max(y, z))), p(min(s(x), s(max(y, z)))), min(s(x), min(s(y), s(z))))

The TRS R consists of the following rules:

   max(s(x), s(y)) -> s(max(x, y))
   max(x, 0) -> x
   min(x, 0) -> 0
   min(s(x), s(y)) -> s(min(x, y))
   p(s(x)) -> x
   min(0, y) -> 0
   max(0, y) -> y

The set Q consists of the following terms:

   min(0, x0)
   min(x0, 0)
   min(s(x0), s(x1))
   max(0, x0)
   max(x0, 0)
   max(s(x0), s(x1))
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(32) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule F(s(x), s(y), s(z)) -> F(s(max(x, max(y, z))), p(min(s(x), s(max(y, z)))), min(s(x), min(s(y), s(z)))) at position [1,0] we obtained the following new rules [LPAR04]:

   (F(s(x), s(y), s(z)) -> F(s(max(x, max(y, z))), p(s(min(x, max(y, z)))), min(s(x), min(s(y), s(z)))),F(s(x), s(y), s(z)) -> F(s(max(x, max(y, z))), p(s(min(x, max(y, z)))), min(s(x), min(s(y), s(z)))))


----------------------------------------

(33)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(x), s(y), s(z)) -> F(s(max(x, max(y, z))), p(s(min(x, max(y, z)))), min(s(x), min(s(y), s(z))))

The TRS R consists of the following rules:

   max(s(x), s(y)) -> s(max(x, y))
   max(x, 0) -> x
   min(x, 0) -> 0
   min(s(x), s(y)) -> s(min(x, y))
   p(s(x)) -> x
   min(0, y) -> 0
   max(0, y) -> y

The set Q consists of the following terms:

   min(0, x0)
   min(x0, 0)
   min(s(x0), s(x1))
   max(0, x0)
   max(x0, 0)
   max(s(x0), s(x1))
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(34) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule F(s(x), s(y), s(z)) -> F(s(max(x, max(y, z))), p(s(min(x, max(y, z)))), min(s(x), min(s(y), s(z)))) at position [1] we obtained the following new rules [LPAR04]:

   (F(s(x), s(y), s(z)) -> F(s(max(x, max(y, z))), min(x, max(y, z)), min(s(x), min(s(y), s(z)))),F(s(x), s(y), s(z)) -> F(s(max(x, max(y, z))), min(x, max(y, z)), min(s(x), min(s(y), s(z)))))


----------------------------------------

(35)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(x), s(y), s(z)) -> F(s(max(x, max(y, z))), min(x, max(y, z)), min(s(x), min(s(y), s(z))))

The TRS R consists of the following rules:

   max(s(x), s(y)) -> s(max(x, y))
   max(x, 0) -> x
   min(x, 0) -> 0
   min(s(x), s(y)) -> s(min(x, y))
   p(s(x)) -> x
   min(0, y) -> 0
   max(0, y) -> y

The set Q consists of the following terms:

   min(0, x0)
   min(x0, 0)
   min(s(x0), s(x1))
   max(0, x0)
   max(x0, 0)
   max(s(x0), s(x1))
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(36) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(37)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(x), s(y), s(z)) -> F(s(max(x, max(y, z))), min(x, max(y, z)), min(s(x), min(s(y), s(z))))

The TRS R consists of the following rules:

   max(s(x), s(y)) -> s(max(x, y))
   max(x, 0) -> x
   max(0, y) -> y
   min(x, 0) -> 0
   min(s(x), s(y)) -> s(min(x, y))
   min(0, y) -> 0

The set Q consists of the following terms:

   min(0, x0)
   min(x0, 0)
   min(s(x0), s(x1))
   max(0, x0)
   max(x0, 0)
   max(s(x0), s(x1))
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(38) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   p(s(x0))


----------------------------------------

(39)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(x), s(y), s(z)) -> F(s(max(x, max(y, z))), min(x, max(y, z)), min(s(x), min(s(y), s(z))))

The TRS R consists of the following rules:

   max(s(x), s(y)) -> s(max(x, y))
   max(x, 0) -> x
   max(0, y) -> y
   min(x, 0) -> 0
   min(s(x), s(y)) -> s(min(x, y))
   min(0, y) -> 0

The set Q consists of the following terms:

   min(0, x0)
   min(x0, 0)
   min(s(x0), s(x1))
   max(0, x0)
   max(x0, 0)
   max(s(x0), s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(40) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule F(s(x), s(y), s(z)) -> F(s(max(x, max(y, z))), min(x, max(y, z)), min(s(x), min(s(y), s(z)))) at position [2,1] we obtained the following new rules [LPAR04]:

   (F(s(x), s(y), s(z)) -> F(s(max(x, max(y, z))), min(x, max(y, z)), min(s(x), s(min(y, z)))),F(s(x), s(y), s(z)) -> F(s(max(x, max(y, z))), min(x, max(y, z)), min(s(x), s(min(y, z)))))


----------------------------------------

(41)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(x), s(y), s(z)) -> F(s(max(x, max(y, z))), min(x, max(y, z)), min(s(x), s(min(y, z))))

The TRS R consists of the following rules:

   max(s(x), s(y)) -> s(max(x, y))
   max(x, 0) -> x
   max(0, y) -> y
   min(x, 0) -> 0
   min(s(x), s(y)) -> s(min(x, y))
   min(0, y) -> 0

The set Q consists of the following terms:

   min(0, x0)
   min(x0, 0)
   min(s(x0), s(x1))
   max(0, x0)
   max(x0, 0)
   max(s(x0), s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(42) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule F(s(x), s(y), s(z)) -> F(s(max(x, max(y, z))), min(x, max(y, z)), min(s(x), s(min(y, z)))) at position [2] we obtained the following new rules [LPAR04]:

   (F(s(x), s(y), s(z)) -> F(s(max(x, max(y, z))), min(x, max(y, z)), s(min(x, min(y, z)))),F(s(x), s(y), s(z)) -> F(s(max(x, max(y, z))), min(x, max(y, z)), s(min(x, min(y, z)))))


----------------------------------------

(43)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(x), s(y), s(z)) -> F(s(max(x, max(y, z))), min(x, max(y, z)), s(min(x, min(y, z))))

The TRS R consists of the following rules:

   max(s(x), s(y)) -> s(max(x, y))
   max(x, 0) -> x
   max(0, y) -> y
   min(x, 0) -> 0
   min(s(x), s(y)) -> s(min(x, y))
   min(0, y) -> 0

The set Q consists of the following terms:

   min(0, x0)
   min(x0, 0)
   min(s(x0), s(x1))
   max(0, x0)
   max(x0, 0)
   max(s(x0), s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(44) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   F(s(x), s(y), s(z)) -> F(s(max(x, max(y, z))), min(x, max(y, z)), s(min(x, min(y, z))))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation with max and min functions [POLO,MAXPOLO]:

   POL(0) = 0
   POL(F(x_1, x_2, x_3)) = x_2 + x_3
   POL(max(x_1, x_2)) = max(x_1, x_2)
   POL(min(x_1, x_2)) = min(x_1, x_2)
   POL(s(x_1)) = 1 + x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   max(s(x), s(y)) -> s(max(x, y))
   max(x, 0) -> x
   max(0, y) -> y
   min(x, 0) -> 0
   min(s(x), s(y)) -> s(min(x, y))
   min(0, y) -> 0


----------------------------------------

(45)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   max(s(x), s(y)) -> s(max(x, y))
   max(x, 0) -> x
   max(0, y) -> y
   min(x, 0) -> 0
   min(s(x), s(y)) -> s(min(x, y))
   min(0, y) -> 0

The set Q consists of the following terms:

   min(0, x0)
   min(x0, 0)
   min(s(x0), s(x1))
   max(0, x0)
   max(x0, 0)
   max(s(x0), s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(46) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(47)
YES
