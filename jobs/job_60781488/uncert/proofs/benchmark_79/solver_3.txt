YES

Problem 1: 

(VAR vu95NonEmpty w x y z)
(RULES
app(app(eq,app(s,x)),num0) -> ffalse
app(app(eq,num0),app(s,x)) -> ffalse
app(app(eq,x),x) -> ftrue
app(app(lt,app(s,x)),app(s,y)) -> app(app(lt,x),y)
app(app(lt,num0),app(s,y)) -> ftrue
app(app(lt,y),num0) -> ffalse
app(app(member,w),app(app(app(fork,x),y),z)) -> app(app(app(if,app(app(lt,w),y)),app(app(member,w),x)),app(app(app(if,app(app(eq,w),y)),ftrue),app(app(member,w),z)))
app(app(member,w),null) -> ffalse
)


Problem 1: 

Innermost Equivalent Processor:
-> Rules:
 app(app(eq,app(s,x)),num0) -> ffalse
 app(app(eq,num0),app(s,x)) -> ffalse
 app(app(eq,x),x) -> ftrue
 app(app(lt,app(s,x)),app(s,y)) -> app(app(lt,x),y)
 app(app(lt,num0),app(s,y)) -> ftrue
 app(app(lt,y),num0) -> ffalse
 app(app(member,w),app(app(app(fork,x),y),z)) -> app(app(app(if,app(app(lt,w),y)),app(app(member,w),x)),app(app(app(if,app(app(eq,w),y)),ftrue),app(app(member,w),z)))
 app(app(member,w),null) -> ffalse
-> The term rewriting system is non-overlaping or locally confluent overlay system. Therefore, innermost termination implies termination.
 

Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 APP(app(lt,app(s,x)),app(s,y)) -> APP(app(lt,x),y)
 APP(app(member,w),app(app(app(fork,x),y),z)) -> APP(app(app(if,app(app(eq,w),y)),ftrue),app(app(member,w),z))
 APP(app(member,w),app(app(app(fork,x),y),z)) -> APP(app(app(if,app(app(lt,w),y)),app(app(member,w),x)),app(app(app(if,app(app(eq,w),y)),ftrue),app(app(member,w),z)))
 APP(app(member,w),app(app(app(fork,x),y),z)) -> APP(app(eq,w),y)
 APP(app(member,w),app(app(app(fork,x),y),z)) -> APP(app(if,app(app(eq,w),y)),ftrue)
 APP(app(member,w),app(app(app(fork,x),y),z)) -> APP(app(if,app(app(lt,w),y)),app(app(member,w),x))
 APP(app(member,w),app(app(app(fork,x),y),z)) -> APP(app(lt,w),y)
 APP(app(member,w),app(app(app(fork,x),y),z)) -> APP(app(member,w),x)
 APP(app(member,w),app(app(app(fork,x),y),z)) -> APP(app(member,w),z)
 APP(app(member,w),app(app(app(fork,x),y),z)) -> APP(if,app(app(eq,w),y))
 APP(app(member,w),app(app(app(fork,x),y),z)) -> APP(if,app(app(lt,w),y))
-> Rules:
 app(app(eq,app(s,x)),num0) -> ffalse
 app(app(eq,num0),app(s,x)) -> ffalse
 app(app(eq,x),x) -> ftrue
 app(app(lt,app(s,x)),app(s,y)) -> app(app(lt,x),y)
 app(app(lt,num0),app(s,y)) -> ftrue
 app(app(lt,y),num0) -> ffalse
 app(app(member,w),app(app(app(fork,x),y),z)) -> app(app(app(if,app(app(lt,w),y)),app(app(member,w),x)),app(app(app(if,app(app(eq,w),y)),ftrue),app(app(member,w),z)))
 app(app(member,w),null) -> ffalse

Problem 1: 

SCC Processor:
-> Pairs:
 APP(app(lt,app(s,x)),app(s,y)) -> APP(app(lt,x),y)
 APP(app(member,w),app(app(app(fork,x),y),z)) -> APP(app(app(if,app(app(eq,w),y)),ftrue),app(app(member,w),z))
 APP(app(member,w),app(app(app(fork,x),y),z)) -> APP(app(app(if,app(app(lt,w),y)),app(app(member,w),x)),app(app(app(if,app(app(eq,w),y)),ftrue),app(app(member,w),z)))
 APP(app(member,w),app(app(app(fork,x),y),z)) -> APP(app(eq,w),y)
 APP(app(member,w),app(app(app(fork,x),y),z)) -> APP(app(if,app(app(eq,w),y)),ftrue)
 APP(app(member,w),app(app(app(fork,x),y),z)) -> APP(app(if,app(app(lt,w),y)),app(app(member,w),x))
 APP(app(member,w),app(app(app(fork,x),y),z)) -> APP(app(lt,w),y)
 APP(app(member,w),app(app(app(fork,x),y),z)) -> APP(app(member,w),x)
 APP(app(member,w),app(app(app(fork,x),y),z)) -> APP(app(member,w),z)
 APP(app(member,w),app(app(app(fork,x),y),z)) -> APP(if,app(app(eq,w),y))
 APP(app(member,w),app(app(app(fork,x),y),z)) -> APP(if,app(app(lt,w),y))
-> Rules:
 app(app(eq,app(s,x)),num0) -> ffalse
 app(app(eq,num0),app(s,x)) -> ffalse
 app(app(eq,x),x) -> ftrue
 app(app(lt,app(s,x)),app(s,y)) -> app(app(lt,x),y)
 app(app(lt,num0),app(s,y)) -> ftrue
 app(app(lt,y),num0) -> ffalse
 app(app(member,w),app(app(app(fork,x),y),z)) -> app(app(app(if,app(app(lt,w),y)),app(app(member,w),x)),app(app(app(if,app(app(eq,w),y)),ftrue),app(app(member,w),z)))
 app(app(member,w),null) -> ffalse
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 APP(app(lt,app(s,x)),app(s,y)) -> APP(app(lt,x),y)
->->-> Rules:
 app(app(eq,app(s,x)),num0) -> ffalse
 app(app(eq,num0),app(s,x)) -> ffalse
 app(app(eq,x),x) -> ftrue
 app(app(lt,app(s,x)),app(s,y)) -> app(app(lt,x),y)
 app(app(lt,num0),app(s,y)) -> ftrue
 app(app(lt,y),num0) -> ffalse
 app(app(member,w),app(app(app(fork,x),y),z)) -> app(app(app(if,app(app(lt,w),y)),app(app(member,w),x)),app(app(app(if,app(app(eq,w),y)),ftrue),app(app(member,w),z)))
 app(app(member,w),null) -> ffalse
->->Cycle:
->->-> Pairs:
 APP(app(member,w),app(app(app(fork,x),y),z)) -> APP(app(member,w),x)
 APP(app(member,w),app(app(app(fork,x),y),z)) -> APP(app(member,w),z)
->->-> Rules:
 app(app(eq,app(s,x)),num0) -> ffalse
 app(app(eq,num0),app(s,x)) -> ffalse
 app(app(eq,x),x) -> ftrue
 app(app(lt,app(s,x)),app(s,y)) -> app(app(lt,x),y)
 app(app(lt,num0),app(s,y)) -> ftrue
 app(app(lt,y),num0) -> ffalse
 app(app(member,w),app(app(app(fork,x),y),z)) -> app(app(app(if,app(app(lt,w),y)),app(app(member,w),x)),app(app(app(if,app(app(eq,w),y)),ftrue),app(app(member,w),z)))
 app(app(member,w),null) -> ffalse


The problem is decomposed in 2 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 APP(app(lt,app(s,x)),app(s,y)) -> APP(app(lt,x),y)
-> Rules:
 app(app(eq,app(s,x)),num0) -> ffalse
 app(app(eq,num0),app(s,x)) -> ffalse
 app(app(eq,x),x) -> ftrue
 app(app(lt,app(s,x)),app(s,y)) -> app(app(lt,x),y)
 app(app(lt,num0),app(s,y)) -> ftrue
 app(app(lt,y),num0) -> ffalse
 app(app(member,w),app(app(app(fork,x),y),z)) -> app(app(app(if,app(app(lt,w),y)),app(app(member,w),x)),app(app(app(if,app(app(eq,w),y)),ftrue),app(app(member,w),z)))
 app(app(member,w),null) -> ffalse
->Projection:
 pi(APP) = 2

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 app(app(eq,app(s,x)),num0) -> ffalse
 app(app(eq,num0),app(s,x)) -> ffalse
 app(app(eq,x),x) -> ftrue
 app(app(lt,app(s,x)),app(s,y)) -> app(app(lt,x),y)
 app(app(lt,num0),app(s,y)) -> ftrue
 app(app(lt,y),num0) -> ffalse
 app(app(member,w),app(app(app(fork,x),y),z)) -> app(app(app(if,app(app(lt,w),y)),app(app(member,w),x)),app(app(app(if,app(app(eq,w),y)),ftrue),app(app(member,w),z)))
 app(app(member,w),null) -> ffalse
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Subterm Processor:
-> Pairs:
 APP(app(member,w),app(app(app(fork,x),y),z)) -> APP(app(member,w),x)
 APP(app(member,w),app(app(app(fork,x),y),z)) -> APP(app(member,w),z)
-> Rules:
 app(app(eq,app(s,x)),num0) -> ffalse
 app(app(eq,num0),app(s,x)) -> ffalse
 app(app(eq,x),x) -> ftrue
 app(app(lt,app(s,x)),app(s,y)) -> app(app(lt,x),y)
 app(app(lt,num0),app(s,y)) -> ftrue
 app(app(lt,y),num0) -> ffalse
 app(app(member,w),app(app(app(fork,x),y),z)) -> app(app(app(if,app(app(lt,w),y)),app(app(member,w),x)),app(app(app(if,app(app(eq,w),y)),ftrue),app(app(member,w),z)))
 app(app(member,w),null) -> ffalse
->Projection:
 pi(APP) = 2

Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 app(app(eq,app(s,x)),num0) -> ffalse
 app(app(eq,num0),app(s,x)) -> ffalse
 app(app(eq,x),x) -> ftrue
 app(app(lt,app(s,x)),app(s,y)) -> app(app(lt,x),y)
 app(app(lt,num0),app(s,y)) -> ftrue
 app(app(lt,y),num0) -> ffalse
 app(app(member,w),app(app(app(fork,x),y),z)) -> app(app(app(if,app(app(lt,w),y)),app(app(member,w),x)),app(app(app(if,app(app(eq,w),y)),ftrue),app(app(member,w),z)))
 app(app(member,w),null) -> ffalse
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
