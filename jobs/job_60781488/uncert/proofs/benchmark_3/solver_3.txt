YES

Problem 1: 

(VAR vu95NonEmpty h i u v x y)
(RULES
eq(num0,num0) -> ftrue
eq(num0,s(x)) -> ffalse
eq(s(x),num0) -> ffalse
eq(s(x),s(y)) -> eq(x,y)
ifu95reachu951(ffalse,x,y,edge(u,v,i),h) -> reach(x,y,i,edge(u,v,h))
ifu95reachu951(ftrue,x,y,edge(u,v,i),h) -> ifu95reachu952(eq(y,v),x,y,edge(u,v,i),h)
ifu95reachu952(ffalse,x,y,edge(u,v,i),h) -> or(reach(x,y,i,h),reach(v,y,union(i,h),empty))
ifu95reachu952(ftrue,x,y,edge(u,v,i),h) -> ftrue
or(ffalse,y) -> y
or(ftrue,y) -> ftrue
reach(x,y,edge(u,v,i),h) -> ifu95reachu951(eq(x,u),x,y,edge(u,v,i),h)
reach(x,y,empty,h) -> ffalse
union(edge(x,y,i),h) -> edge(x,y,union(i,h))
union(empty,h) -> h
)


Problem 1: 

Innermost Equivalent Processor:
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 ifu95reachu951(ffalse,x,y,edge(u,v,i),h) -> reach(x,y,i,edge(u,v,h))
 ifu95reachu951(ftrue,x,y,edge(u,v,i),h) -> ifu95reachu952(eq(y,v),x,y,edge(u,v,i),h)
 ifu95reachu952(ffalse,x,y,edge(u,v,i),h) -> or(reach(x,y,i,h),reach(v,y,union(i,h),empty))
 ifu95reachu952(ftrue,x,y,edge(u,v,i),h) -> ftrue
 or(ffalse,y) -> y
 or(ftrue,y) -> ftrue
 reach(x,y,edge(u,v,i),h) -> ifu95reachu951(eq(x,u),x,y,edge(u,v,i),h)
 reach(x,y,empty,h) -> ffalse
 union(edge(x,y,i),h) -> edge(x,y,union(i,h))
 union(empty,h) -> h
-> The term rewriting system is non-overlaping or locally confluent overlay system. Therefore, innermost termination implies termination.
 

Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 EQ(s(x),s(y)) -> EQ(x,y)
 IFU95REACHU951(ffalse,x,y,edge(u,v,i),h) -> REACH(x,y,i,edge(u,v,h))
 IFU95REACHU951(ftrue,x,y,edge(u,v,i),h) -> EQ(y,v)
 IFU95REACHU951(ftrue,x,y,edge(u,v,i),h) -> IFU95REACHU952(eq(y,v),x,y,edge(u,v,i),h)
 IFU95REACHU952(ffalse,x,y,edge(u,v,i),h) -> OR(reach(x,y,i,h),reach(v,y,union(i,h),empty))
 IFU95REACHU952(ffalse,x,y,edge(u,v,i),h) -> REACH(v,y,union(i,h),empty)
 IFU95REACHU952(ffalse,x,y,edge(u,v,i),h) -> REACH(x,y,i,h)
 IFU95REACHU952(ffalse,x,y,edge(u,v,i),h) -> UNION(i,h)
 REACH(x,y,edge(u,v,i),h) -> EQ(x,u)
 REACH(x,y,edge(u,v,i),h) -> IFU95REACHU951(eq(x,u),x,y,edge(u,v,i),h)
 UNION(edge(x,y,i),h) -> UNION(i,h)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 ifu95reachu951(ffalse,x,y,edge(u,v,i),h) -> reach(x,y,i,edge(u,v,h))
 ifu95reachu951(ftrue,x,y,edge(u,v,i),h) -> ifu95reachu952(eq(y,v),x,y,edge(u,v,i),h)
 ifu95reachu952(ffalse,x,y,edge(u,v,i),h) -> or(reach(x,y,i,h),reach(v,y,union(i,h),empty))
 ifu95reachu952(ftrue,x,y,edge(u,v,i),h) -> ftrue
 or(ffalse,y) -> y
 or(ftrue,y) -> ftrue
 reach(x,y,edge(u,v,i),h) -> ifu95reachu951(eq(x,u),x,y,edge(u,v,i),h)
 reach(x,y,empty,h) -> ffalse
 union(edge(x,y,i),h) -> edge(x,y,union(i,h))
 union(empty,h) -> h

Problem 1: 

SCC Processor:
-> Pairs:
 EQ(s(x),s(y)) -> EQ(x,y)
 IFU95REACHU951(ffalse,x,y,edge(u,v,i),h) -> REACH(x,y,i,edge(u,v,h))
 IFU95REACHU951(ftrue,x,y,edge(u,v,i),h) -> EQ(y,v)
 IFU95REACHU951(ftrue,x,y,edge(u,v,i),h) -> IFU95REACHU952(eq(y,v),x,y,edge(u,v,i),h)
 IFU95REACHU952(ffalse,x,y,edge(u,v,i),h) -> OR(reach(x,y,i,h),reach(v,y,union(i,h),empty))
 IFU95REACHU952(ffalse,x,y,edge(u,v,i),h) -> REACH(v,y,union(i,h),empty)
 IFU95REACHU952(ffalse,x,y,edge(u,v,i),h) -> REACH(x,y,i,h)
 IFU95REACHU952(ffalse,x,y,edge(u,v,i),h) -> UNION(i,h)
 REACH(x,y,edge(u,v,i),h) -> EQ(x,u)
 REACH(x,y,edge(u,v,i),h) -> IFU95REACHU951(eq(x,u),x,y,edge(u,v,i),h)
 UNION(edge(x,y,i),h) -> UNION(i,h)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 ifu95reachu951(ffalse,x,y,edge(u,v,i),h) -> reach(x,y,i,edge(u,v,h))
 ifu95reachu951(ftrue,x,y,edge(u,v,i),h) -> ifu95reachu952(eq(y,v),x,y,edge(u,v,i),h)
 ifu95reachu952(ffalse,x,y,edge(u,v,i),h) -> or(reach(x,y,i,h),reach(v,y,union(i,h),empty))
 ifu95reachu952(ftrue,x,y,edge(u,v,i),h) -> ftrue
 or(ffalse,y) -> y
 or(ftrue,y) -> ftrue
 reach(x,y,edge(u,v,i),h) -> ifu95reachu951(eq(x,u),x,y,edge(u,v,i),h)
 reach(x,y,empty,h) -> ffalse
 union(edge(x,y,i),h) -> edge(x,y,union(i,h))
 union(empty,h) -> h
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 UNION(edge(x,y,i),h) -> UNION(i,h)
->->-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 ifu95reachu951(ffalse,x,y,edge(u,v,i),h) -> reach(x,y,i,edge(u,v,h))
 ifu95reachu951(ftrue,x,y,edge(u,v,i),h) -> ifu95reachu952(eq(y,v),x,y,edge(u,v,i),h)
 ifu95reachu952(ffalse,x,y,edge(u,v,i),h) -> or(reach(x,y,i,h),reach(v,y,union(i,h),empty))
 ifu95reachu952(ftrue,x,y,edge(u,v,i),h) -> ftrue
 or(ffalse,y) -> y
 or(ftrue,y) -> ftrue
 reach(x,y,edge(u,v,i),h) -> ifu95reachu951(eq(x,u),x,y,edge(u,v,i),h)
 reach(x,y,empty,h) -> ffalse
 union(edge(x,y,i),h) -> edge(x,y,union(i,h))
 union(empty,h) -> h
->->Cycle:
->->-> Pairs:
 EQ(s(x),s(y)) -> EQ(x,y)
->->-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 ifu95reachu951(ffalse,x,y,edge(u,v,i),h) -> reach(x,y,i,edge(u,v,h))
 ifu95reachu951(ftrue,x,y,edge(u,v,i),h) -> ifu95reachu952(eq(y,v),x,y,edge(u,v,i),h)
 ifu95reachu952(ffalse,x,y,edge(u,v,i),h) -> or(reach(x,y,i,h),reach(v,y,union(i,h),empty))
 ifu95reachu952(ftrue,x,y,edge(u,v,i),h) -> ftrue
 or(ffalse,y) -> y
 or(ftrue,y) -> ftrue
 reach(x,y,edge(u,v,i),h) -> ifu95reachu951(eq(x,u),x,y,edge(u,v,i),h)
 reach(x,y,empty,h) -> ffalse
 union(edge(x,y,i),h) -> edge(x,y,union(i,h))
 union(empty,h) -> h
->->Cycle:
->->-> Pairs:
 IFU95REACHU951(ffalse,x,y,edge(u,v,i),h) -> REACH(x,y,i,edge(u,v,h))
 IFU95REACHU951(ftrue,x,y,edge(u,v,i),h) -> IFU95REACHU952(eq(y,v),x,y,edge(u,v,i),h)
 IFU95REACHU952(ffalse,x,y,edge(u,v,i),h) -> REACH(v,y,union(i,h),empty)
 IFU95REACHU952(ffalse,x,y,edge(u,v,i),h) -> REACH(x,y,i,h)
 REACH(x,y,edge(u,v,i),h) -> IFU95REACHU951(eq(x,u),x,y,edge(u,v,i),h)
->->-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 ifu95reachu951(ffalse,x,y,edge(u,v,i),h) -> reach(x,y,i,edge(u,v,h))
 ifu95reachu951(ftrue,x,y,edge(u,v,i),h) -> ifu95reachu952(eq(y,v),x,y,edge(u,v,i),h)
 ifu95reachu952(ffalse,x,y,edge(u,v,i),h) -> or(reach(x,y,i,h),reach(v,y,union(i,h),empty))
 ifu95reachu952(ftrue,x,y,edge(u,v,i),h) -> ftrue
 or(ffalse,y) -> y
 or(ftrue,y) -> ftrue
 reach(x,y,edge(u,v,i),h) -> ifu95reachu951(eq(x,u),x,y,edge(u,v,i),h)
 reach(x,y,empty,h) -> ffalse
 union(edge(x,y,i),h) -> edge(x,y,union(i,h))
 union(empty,h) -> h


The problem is decomposed in 3 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 UNION(edge(x,y,i),h) -> UNION(i,h)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 ifu95reachu951(ffalse,x,y,edge(u,v,i),h) -> reach(x,y,i,edge(u,v,h))
 ifu95reachu951(ftrue,x,y,edge(u,v,i),h) -> ifu95reachu952(eq(y,v),x,y,edge(u,v,i),h)
 ifu95reachu952(ffalse,x,y,edge(u,v,i),h) -> or(reach(x,y,i,h),reach(v,y,union(i,h),empty))
 ifu95reachu952(ftrue,x,y,edge(u,v,i),h) -> ftrue
 or(ffalse,y) -> y
 or(ftrue,y) -> ftrue
 reach(x,y,edge(u,v,i),h) -> ifu95reachu951(eq(x,u),x,y,edge(u,v,i),h)
 reach(x,y,empty,h) -> ffalse
 union(edge(x,y,i),h) -> edge(x,y,union(i,h))
 union(empty,h) -> h
->Projection:
 pi(UNION) = 1

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 ifu95reachu951(ffalse,x,y,edge(u,v,i),h) -> reach(x,y,i,edge(u,v,h))
 ifu95reachu951(ftrue,x,y,edge(u,v,i),h) -> ifu95reachu952(eq(y,v),x,y,edge(u,v,i),h)
 ifu95reachu952(ffalse,x,y,edge(u,v,i),h) -> or(reach(x,y,i,h),reach(v,y,union(i,h),empty))
 ifu95reachu952(ftrue,x,y,edge(u,v,i),h) -> ftrue
 or(ffalse,y) -> y
 or(ftrue,y) -> ftrue
 reach(x,y,edge(u,v,i),h) -> ifu95reachu951(eq(x,u),x,y,edge(u,v,i),h)
 reach(x,y,empty,h) -> ffalse
 union(edge(x,y,i),h) -> edge(x,y,union(i,h))
 union(empty,h) -> h
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Subterm Processor:
-> Pairs:
 EQ(s(x),s(y)) -> EQ(x,y)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 ifu95reachu951(ffalse,x,y,edge(u,v,i),h) -> reach(x,y,i,edge(u,v,h))
 ifu95reachu951(ftrue,x,y,edge(u,v,i),h) -> ifu95reachu952(eq(y,v),x,y,edge(u,v,i),h)
 ifu95reachu952(ffalse,x,y,edge(u,v,i),h) -> or(reach(x,y,i,h),reach(v,y,union(i,h),empty))
 ifu95reachu952(ftrue,x,y,edge(u,v,i),h) -> ftrue
 or(ffalse,y) -> y
 or(ftrue,y) -> ftrue
 reach(x,y,edge(u,v,i),h) -> ifu95reachu951(eq(x,u),x,y,edge(u,v,i),h)
 reach(x,y,empty,h) -> ffalse
 union(edge(x,y,i),h) -> edge(x,y,union(i,h))
 union(empty,h) -> h
->Projection:
 pi(EQ) = 1

Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 ifu95reachu951(ffalse,x,y,edge(u,v,i),h) -> reach(x,y,i,edge(u,v,h))
 ifu95reachu951(ftrue,x,y,edge(u,v,i),h) -> ifu95reachu952(eq(y,v),x,y,edge(u,v,i),h)
 ifu95reachu952(ffalse,x,y,edge(u,v,i),h) -> or(reach(x,y,i,h),reach(v,y,union(i,h),empty))
 ifu95reachu952(ftrue,x,y,edge(u,v,i),h) -> ftrue
 or(ffalse,y) -> y
 or(ftrue,y) -> ftrue
 reach(x,y,edge(u,v,i),h) -> ifu95reachu951(eq(x,u),x,y,edge(u,v,i),h)
 reach(x,y,empty,h) -> ffalse
 union(edge(x,y,i),h) -> edge(x,y,union(i,h))
 union(empty,h) -> h
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Reduction Pairs Processor:
-> Pairs:
 IFU95REACHU951(ffalse,x,y,edge(u,v,i),h) -> REACH(x,y,i,edge(u,v,h))
 IFU95REACHU951(ftrue,x,y,edge(u,v,i),h) -> IFU95REACHU952(eq(y,v),x,y,edge(u,v,i),h)
 IFU95REACHU952(ffalse,x,y,edge(u,v,i),h) -> REACH(v,y,union(i,h),empty)
 IFU95REACHU952(ffalse,x,y,edge(u,v,i),h) -> REACH(x,y,i,h)
 REACH(x,y,edge(u,v,i),h) -> IFU95REACHU951(eq(x,u),x,y,edge(u,v,i),h)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 ifu95reachu951(ffalse,x,y,edge(u,v,i),h) -> reach(x,y,i,edge(u,v,h))
 ifu95reachu951(ftrue,x,y,edge(u,v,i),h) -> ifu95reachu952(eq(y,v),x,y,edge(u,v,i),h)
 ifu95reachu952(ffalse,x,y,edge(u,v,i),h) -> or(reach(x,y,i,h),reach(v,y,union(i,h),empty))
 ifu95reachu952(ftrue,x,y,edge(u,v,i),h) -> ftrue
 or(ffalse,y) -> y
 or(ftrue,y) -> ftrue
 reach(x,y,edge(u,v,i),h) -> ifu95reachu951(eq(x,u),x,y,edge(u,v,i),h)
 reach(x,y,empty,h) -> ffalse
 union(edge(x,y,i),h) -> edge(x,y,union(i,h))
 union(empty,h) -> h
-> Usable rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 union(edge(x,y,i),h) -> edge(x,y,union(i,h))
 union(empty,h) -> h
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[eq](X1,X2) = 2.X1 + 2.X2 + 2
[ifu95reachu951](X1,X2,X3,X4,X5) = 0
[ifu95reachu952](X1,X2,X3,X4,X5) = 0
[or](X1,X2) = 0
[reach](X1,X2,X3,X4) = 0
[union](X1,X2) = X1 + X2
[num0] = 2
[edge](X1,X2,X3) = 2.X1 + 2.X2 + X3 + 2
[empty] = 1
[fSNonEmpty] = 0
[ffalse] = 2
[s](X) = 2.X + 2
[ftrue] = 0
[EQ](X1,X2) = 0
[IFU95REACHU951](X1,X2,X3,X4,X5) = 2.X2 + 2.X3 + 2.X4 + 2.X5 + 2
[IFU95REACHU952](X1,X2,X3,X4,X5) = 2.X2 + 2.X3 + 2.X4 + 2.X5 + 1
[OR](X1,X2) = 0
[REACH](X1,X2,X3,X4) = 2.X1 + 2.X2 + 2.X3 + 2.X4 + 2
[UNION](X1,X2) = 0

Problem 1.3: 

SCC Processor:
-> Pairs:
 IFU95REACHU951(ffalse,x,y,edge(u,v,i),h) -> REACH(x,y,i,edge(u,v,h))
 IFU95REACHU952(ffalse,x,y,edge(u,v,i),h) -> REACH(v,y,union(i,h),empty)
 IFU95REACHU952(ffalse,x,y,edge(u,v,i),h) -> REACH(x,y,i,h)
 REACH(x,y,edge(u,v,i),h) -> IFU95REACHU951(eq(x,u),x,y,edge(u,v,i),h)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 ifu95reachu951(ffalse,x,y,edge(u,v,i),h) -> reach(x,y,i,edge(u,v,h))
 ifu95reachu951(ftrue,x,y,edge(u,v,i),h) -> ifu95reachu952(eq(y,v),x,y,edge(u,v,i),h)
 ifu95reachu952(ffalse,x,y,edge(u,v,i),h) -> or(reach(x,y,i,h),reach(v,y,union(i,h),empty))
 ifu95reachu952(ftrue,x,y,edge(u,v,i),h) -> ftrue
 or(ffalse,y) -> y
 or(ftrue,y) -> ftrue
 reach(x,y,edge(u,v,i),h) -> ifu95reachu951(eq(x,u),x,y,edge(u,v,i),h)
 reach(x,y,empty,h) -> ffalse
 union(edge(x,y,i),h) -> edge(x,y,union(i,h))
 union(empty,h) -> h
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 IFU95REACHU951(ffalse,x,y,edge(u,v,i),h) -> REACH(x,y,i,edge(u,v,h))
 REACH(x,y,edge(u,v,i),h) -> IFU95REACHU951(eq(x,u),x,y,edge(u,v,i),h)
->->-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 ifu95reachu951(ffalse,x,y,edge(u,v,i),h) -> reach(x,y,i,edge(u,v,h))
 ifu95reachu951(ftrue,x,y,edge(u,v,i),h) -> ifu95reachu952(eq(y,v),x,y,edge(u,v,i),h)
 ifu95reachu952(ffalse,x,y,edge(u,v,i),h) -> or(reach(x,y,i,h),reach(v,y,union(i,h),empty))
 ifu95reachu952(ftrue,x,y,edge(u,v,i),h) -> ftrue
 or(ffalse,y) -> y
 or(ftrue,y) -> ftrue
 reach(x,y,edge(u,v,i),h) -> ifu95reachu951(eq(x,u),x,y,edge(u,v,i),h)
 reach(x,y,empty,h) -> ffalse
 union(edge(x,y,i),h) -> edge(x,y,union(i,h))
 union(empty,h) -> h

Problem 1.3: 

Subterm Processor:
-> Pairs:
 IFU95REACHU951(ffalse,x,y,edge(u,v,i),h) -> REACH(x,y,i,edge(u,v,h))
 REACH(x,y,edge(u,v,i),h) -> IFU95REACHU951(eq(x,u),x,y,edge(u,v,i),h)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 ifu95reachu951(ffalse,x,y,edge(u,v,i),h) -> reach(x,y,i,edge(u,v,h))
 ifu95reachu951(ftrue,x,y,edge(u,v,i),h) -> ifu95reachu952(eq(y,v),x,y,edge(u,v,i),h)
 ifu95reachu952(ffalse,x,y,edge(u,v,i),h) -> or(reach(x,y,i,h),reach(v,y,union(i,h),empty))
 ifu95reachu952(ftrue,x,y,edge(u,v,i),h) -> ftrue
 or(ffalse,y) -> y
 or(ftrue,y) -> ftrue
 reach(x,y,edge(u,v,i),h) -> ifu95reachu951(eq(x,u),x,y,edge(u,v,i),h)
 reach(x,y,empty,h) -> ffalse
 union(edge(x,y,i),h) -> edge(x,y,union(i,h))
 union(empty,h) -> h
->Projection:
 pi(IFU95REACHU951) = 4
 pi(REACH) = 3

Problem 1.3: 

SCC Processor:
-> Pairs:
 REACH(x,y,edge(u,v,i),h) -> IFU95REACHU951(eq(x,u),x,y,edge(u,v,i),h)
-> Rules:
 eq(num0,num0) -> ftrue
 eq(num0,s(x)) -> ffalse
 eq(s(x),num0) -> ffalse
 eq(s(x),s(y)) -> eq(x,y)
 ifu95reachu951(ffalse,x,y,edge(u,v,i),h) -> reach(x,y,i,edge(u,v,h))
 ifu95reachu951(ftrue,x,y,edge(u,v,i),h) -> ifu95reachu952(eq(y,v),x,y,edge(u,v,i),h)
 ifu95reachu952(ffalse,x,y,edge(u,v,i),h) -> or(reach(x,y,i,h),reach(v,y,union(i,h),empty))
 ifu95reachu952(ftrue,x,y,edge(u,v,i),h) -> ftrue
 or(ffalse,y) -> y
 or(ftrue,y) -> ftrue
 reach(x,y,edge(u,v,i),h) -> ifu95reachu951(eq(x,u),x,y,edge(u,v,i),h)
 reach(x,y,empty,h) -> ffalse
 union(edge(x,y,i),h) -> edge(x,y,union(i,h))
 union(empty,h) -> h
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
