YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/PoATf.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) Overlay + Local Confluence [EQUIVALENT, 0 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 0 ms]
(4) QDP
(5) DependencyGraphProof [EQUIVALENT, 0 ms]
(6) QDP
(7) UsableRulesProof [EQUIVALENT, 0 ms]
(8) QDP
(9) UsableRulesReductionPairsProof [EQUIVALENT, 0 ms]
(10) QDP
(11) PisEmptyProof [EQUIVALENT, 0 ms]
(12) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   app(app(fmap, fnil), x) -> nil
   app(app(fmap, app(app(fcons, f), t)), x) -> app(app(cons, app(f, x)), app(app(fmap, t), x))

Q is empty.

----------------------------------------

(1) Overlay + Local Confluence (EQUIVALENT)
The TRS is overlay and locally confluent. By [NOC] we can switch to innermost.
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   app(app(fmap, fnil), x) -> nil
   app(app(fmap, app(app(fcons, f), t)), x) -> app(app(cons, app(f, x)), app(app(fmap, t), x))

The set Q consists of the following terms:

   app(app(fmap, fnil), x0)
   app(app(fmap, app(app(fcons, x0), x1)), x2)


----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   APP(app(fmap, app(app(fcons, f), t)), x) -> APP(app(cons, app(f, x)), app(app(fmap, t), x))
   APP(app(fmap, app(app(fcons, f), t)), x) -> APP(cons, app(f, x))
   APP(app(fmap, app(app(fcons, f), t)), x) -> APP(f, x)
   APP(app(fmap, app(app(fcons, f), t)), x) -> APP(app(fmap, t), x)
   APP(app(fmap, app(app(fcons, f), t)), x) -> APP(fmap, t)

The TRS R consists of the following rules:

   app(app(fmap, fnil), x) -> nil
   app(app(fmap, app(app(fcons, f), t)), x) -> app(app(cons, app(f, x)), app(app(fmap, t), x))

The set Q consists of the following terms:

   app(app(fmap, fnil), x0)
   app(app(fmap, app(app(fcons, x0), x1)), x2)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 3 less nodes.
----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   APP(app(fmap, app(app(fcons, f), t)), x) -> APP(app(fmap, t), x)
   APP(app(fmap, app(app(fcons, f), t)), x) -> APP(f, x)

The TRS R consists of the following rules:

   app(app(fmap, fnil), x) -> nil
   app(app(fmap, app(app(fcons, f), t)), x) -> app(app(cons, app(f, x)), app(app(fmap, t), x))

The set Q consists of the following terms:

   app(app(fmap, fnil), x0)
   app(app(fmap, app(app(fcons, x0), x1)), x2)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   APP(app(fmap, app(app(fcons, f), t)), x) -> APP(app(fmap, t), x)
   APP(app(fmap, app(app(fcons, f), t)), x) -> APP(f, x)

R is empty.
The set Q consists of the following terms:

   app(app(fmap, fnil), x0)
   app(app(fmap, app(app(fcons, x0), x1)), x2)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) UsableRulesReductionPairsProof (EQUIVALENT)
By using the usable rules with reduction pair processor [LPAR04] with a polynomial ordering [POLO], all dependency pairs and the corresponding usable rules [FROCOS05] can be oriented non-strictly. All non-usable rules are removed, and those dependency pairs and usable rules that have been oriented strictly or contain non-usable symbols in their left-hand side are removed as well.

The following dependency pairs can be deleted:

   APP(app(fmap, app(app(fcons, f), t)), x) -> APP(app(fmap, t), x)
   APP(app(fmap, app(app(fcons, f), t)), x) -> APP(f, x)
No rules are removed from R.

Used ordering: POLO with Polynomial interpretation [POLO]:

   POL(APP(x_1, x_2)) = x_1 + x_2
   POL(app(x_1, x_2)) = x_1 + 2*x_2
   POL(fcons) = 0
   POL(fmap) = 0


----------------------------------------

(10)
Obligation:
Q DP problem:
P is empty.
R is empty.
The set Q consists of the following terms:

   app(app(fmap, fnil), x0)
   app(app(fmap, app(app(fcons, x0), x1)), x2)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(12)
YES
