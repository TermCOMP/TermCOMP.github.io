YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/5Xo53.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) AAECC Innermost [EQUIVALENT, 0 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 0 ms]
(4) QDP
(5) DependencyGraphProof [EQUIVALENT, 0 ms]
(6) AND
    (7) QDP
        (8) UsableRulesProof [EQUIVALENT, 0 ms]
        (9) QDP
        (10) QReductionProof [EQUIVALENT, 0 ms]
        (11) QDP
        (12) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (13) YES
    (14) QDP
        (15) UsableRulesProof [EQUIVALENT, 0 ms]
        (16) QDP
        (17) QReductionProof [EQUIVALENT, 0 ms]
        (18) QDP
        (19) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (20) YES
    (21) QDP
        (22) UsableRulesProof [EQUIVALENT, 0 ms]
        (23) QDP
        (24) QReductionProof [EQUIVALENT, 0 ms]
        (25) QDP
        (26) TransformationProof [EQUIVALENT, 0 ms]
        (27) QDP
        (28) TransformationProof [EQUIVALENT, 0 ms]
        (29) QDP
        (30) TransformationProof [EQUIVALENT, 0 ms]
        (31) QDP
        (32) TransformationProof [EQUIVALENT, 0 ms]
        (33) QDP
        (34) TransformationProof [EQUIVALENT, 0 ms]
        (35) QDP
        (36) DependencyGraphProof [EQUIVALENT, 0 ms]
        (37) AND
            (38) QDP
                (39) UsableRulesProof [EQUIVALENT, 0 ms]
                (40) QDP
                (41) QReductionProof [EQUIVALENT, 0 ms]
                (42) QDP
                (43) TransformationProof [EQUIVALENT, 1 ms]
                (44) QDP
                (45) TransformationProof [EQUIVALENT, 0 ms]
                (46) QDP
                (47) DependencyGraphProof [EQUIVALENT, 0 ms]
                (48) QDP
                (49) UsableRulesProof [EQUIVALENT, 0 ms]
                (50) QDP
                (51) TransformationProof [EQUIVALENT, 0 ms]
                (52) QDP
                (53) DependencyGraphProof [EQUIVALENT, 0 ms]
                (54) QDP
                (55) UsableRulesProof [EQUIVALENT, 0 ms]
                (56) QDP
                (57) QReductionProof [EQUIVALENT, 0 ms]
                (58) QDP
                (59) TransformationProof [EQUIVALENT, 0 ms]
                (60) QDP
                (61) DependencyGraphProof [EQUIVALENT, 0 ms]
                (62) QDP
                (63) UsableRulesProof [EQUIVALENT, 0 ms]
                (64) QDP
                (65) TransformationProof [EQUIVALENT, 0 ms]
                (66) QDP
                (67) DependencyGraphProof [EQUIVALENT, 0 ms]
                (68) TRUE
            (69) QDP
                (70) UsableRulesProof [EQUIVALENT, 0 ms]
                (71) QDP
                (72) QReductionProof [EQUIVALENT, 0 ms]
                (73) QDP
                (74) QDPSizeChangeProof [EQUIVALENT, 0 ms]
                (75) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   cond1(true, x, y) -> cond2(gr(y, 0), x, y)
   cond2(true, x, y) -> cond2(gr(y, 0), p(x), p(y))
   cond2(false, x, y) -> cond1(and(eq(x, y), gr(x, 0)), x, y)
   gr(0, x) -> false
   gr(s(x), 0) -> true
   gr(s(x), s(y)) -> gr(x, y)
   p(0) -> 0
   p(s(x)) -> x
   eq(0, 0) -> true
   eq(s(x), 0) -> false
   eq(0, s(x)) -> false
   eq(s(x), s(y)) -> eq(x, y)
   and(true, true) -> true
   and(false, x) -> false
   and(x, false) -> false

Q is empty.

----------------------------------------

(1) AAECC Innermost (EQUIVALENT)
We have applied [NOC,AAECCNOC] to switch to innermost. The TRS R 1 is 
   gr(0, x) -> false
   gr(s(x), 0) -> true
   gr(s(x), s(y)) -> gr(x, y)
   p(0) -> 0
   p(s(x)) -> x
   eq(0, 0) -> true
   eq(s(x), 0) -> false
   eq(0, s(x)) -> false
   eq(s(x), s(y)) -> eq(x, y)
   and(true, true) -> true
   and(false, x) -> false
   and(x, false) -> false

The TRS R 2 is 
   cond1(true, x, y) -> cond2(gr(y, 0), x, y)
   cond2(true, x, y) -> cond2(gr(y, 0), p(x), p(y))
   cond2(false, x, y) -> cond1(and(eq(x, y), gr(x, 0)), x, y)

The signature Sigma is {cond1_3, cond2_3}
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   cond1(true, x, y) -> cond2(gr(y, 0), x, y)
   cond2(true, x, y) -> cond2(gr(y, 0), p(x), p(y))
   cond2(false, x, y) -> cond1(and(eq(x, y), gr(x, 0)), x, y)
   gr(0, x) -> false
   gr(s(x), 0) -> true
   gr(s(x), s(y)) -> gr(x, y)
   p(0) -> 0
   p(s(x)) -> x
   eq(0, 0) -> true
   eq(s(x), 0) -> false
   eq(0, s(x)) -> false
   eq(s(x), s(y)) -> eq(x, y)
   and(true, true) -> true
   and(false, x) -> false
   and(x, false) -> false

The set Q consists of the following terms:

   cond1(true, x0, x1)
   cond2(true, x0, x1)
   cond2(false, x0, x1)
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))
   eq(0, 0)
   eq(s(x0), 0)
   eq(0, s(x0))
   eq(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)


----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND1(true, x, y) -> COND2(gr(y, 0), x, y)
   COND1(true, x, y) -> GR(y, 0)
   COND2(true, x, y) -> COND2(gr(y, 0), p(x), p(y))
   COND2(true, x, y) -> GR(y, 0)
   COND2(true, x, y) -> P(x)
   COND2(true, x, y) -> P(y)
   COND2(false, x, y) -> COND1(and(eq(x, y), gr(x, 0)), x, y)
   COND2(false, x, y) -> AND(eq(x, y), gr(x, 0))
   COND2(false, x, y) -> EQ(x, y)
   COND2(false, x, y) -> GR(x, 0)
   GR(s(x), s(y)) -> GR(x, y)
   EQ(s(x), s(y)) -> EQ(x, y)

The TRS R consists of the following rules:

   cond1(true, x, y) -> cond2(gr(y, 0), x, y)
   cond2(true, x, y) -> cond2(gr(y, 0), p(x), p(y))
   cond2(false, x, y) -> cond1(and(eq(x, y), gr(x, 0)), x, y)
   gr(0, x) -> false
   gr(s(x), 0) -> true
   gr(s(x), s(y)) -> gr(x, y)
   p(0) -> 0
   p(s(x)) -> x
   eq(0, 0) -> true
   eq(s(x), 0) -> false
   eq(0, s(x)) -> false
   eq(s(x), s(y)) -> eq(x, y)
   and(true, true) -> true
   and(false, x) -> false
   and(x, false) -> false

The set Q consists of the following terms:

   cond1(true, x0, x1)
   cond2(true, x0, x1)
   cond2(false, x0, x1)
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))
   eq(0, 0)
   eq(s(x0), 0)
   eq(0, s(x0))
   eq(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 3 SCCs with 7 less nodes.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   EQ(s(x), s(y)) -> EQ(x, y)

The TRS R consists of the following rules:

   cond1(true, x, y) -> cond2(gr(y, 0), x, y)
   cond2(true, x, y) -> cond2(gr(y, 0), p(x), p(y))
   cond2(false, x, y) -> cond1(and(eq(x, y), gr(x, 0)), x, y)
   gr(0, x) -> false
   gr(s(x), 0) -> true
   gr(s(x), s(y)) -> gr(x, y)
   p(0) -> 0
   p(s(x)) -> x
   eq(0, 0) -> true
   eq(s(x), 0) -> false
   eq(0, s(x)) -> false
   eq(s(x), s(y)) -> eq(x, y)
   and(true, true) -> true
   and(false, x) -> false
   and(x, false) -> false

The set Q consists of the following terms:

   cond1(true, x0, x1)
   cond2(true, x0, x1)
   cond2(false, x0, x1)
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))
   eq(0, 0)
   eq(s(x0), 0)
   eq(0, s(x0))
   eq(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(8) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(9)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   EQ(s(x), s(y)) -> EQ(x, y)

R is empty.
The set Q consists of the following terms:

   cond1(true, x0, x1)
   cond2(true, x0, x1)
   cond2(false, x0, x1)
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))
   eq(0, 0)
   eq(s(x0), 0)
   eq(0, s(x0))
   eq(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(10) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   cond1(true, x0, x1)
   cond2(true, x0, x1)
   cond2(false, x0, x1)
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))
   eq(0, 0)
   eq(s(x0), 0)
   eq(0, s(x0))
   eq(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)


----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   EQ(s(x), s(y)) -> EQ(x, y)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(12) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*EQ(s(x), s(y)) -> EQ(x, y)
The graph contains the following edges 1 > 1, 2 > 2


----------------------------------------

(13)
YES

----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   GR(s(x), s(y)) -> GR(x, y)

The TRS R consists of the following rules:

   cond1(true, x, y) -> cond2(gr(y, 0), x, y)
   cond2(true, x, y) -> cond2(gr(y, 0), p(x), p(y))
   cond2(false, x, y) -> cond1(and(eq(x, y), gr(x, 0)), x, y)
   gr(0, x) -> false
   gr(s(x), 0) -> true
   gr(s(x), s(y)) -> gr(x, y)
   p(0) -> 0
   p(s(x)) -> x
   eq(0, 0) -> true
   eq(s(x), 0) -> false
   eq(0, s(x)) -> false
   eq(s(x), s(y)) -> eq(x, y)
   and(true, true) -> true
   and(false, x) -> false
   and(x, false) -> false

The set Q consists of the following terms:

   cond1(true, x0, x1)
   cond2(true, x0, x1)
   cond2(false, x0, x1)
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))
   eq(0, 0)
   eq(s(x0), 0)
   eq(0, s(x0))
   eq(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   GR(s(x), s(y)) -> GR(x, y)

R is empty.
The set Q consists of the following terms:

   cond1(true, x0, x1)
   cond2(true, x0, x1)
   cond2(false, x0, x1)
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))
   eq(0, 0)
   eq(s(x0), 0)
   eq(0, s(x0))
   eq(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   cond1(true, x0, x1)
   cond2(true, x0, x1)
   cond2(false, x0, x1)
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))
   eq(0, 0)
   eq(s(x0), 0)
   eq(0, s(x0))
   eq(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)


----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   GR(s(x), s(y)) -> GR(x, y)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*GR(s(x), s(y)) -> GR(x, y)
The graph contains the following edges 1 > 1, 2 > 2


----------------------------------------

(20)
YES

----------------------------------------

(21)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND2(true, x, y) -> COND2(gr(y, 0), p(x), p(y))
   COND2(false, x, y) -> COND1(and(eq(x, y), gr(x, 0)), x, y)
   COND1(true, x, y) -> COND2(gr(y, 0), x, y)

The TRS R consists of the following rules:

   cond1(true, x, y) -> cond2(gr(y, 0), x, y)
   cond2(true, x, y) -> cond2(gr(y, 0), p(x), p(y))
   cond2(false, x, y) -> cond1(and(eq(x, y), gr(x, 0)), x, y)
   gr(0, x) -> false
   gr(s(x), 0) -> true
   gr(s(x), s(y)) -> gr(x, y)
   p(0) -> 0
   p(s(x)) -> x
   eq(0, 0) -> true
   eq(s(x), 0) -> false
   eq(0, s(x)) -> false
   eq(s(x), s(y)) -> eq(x, y)
   and(true, true) -> true
   and(false, x) -> false
   and(x, false) -> false

The set Q consists of the following terms:

   cond1(true, x0, x1)
   cond2(true, x0, x1)
   cond2(false, x0, x1)
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))
   eq(0, 0)
   eq(s(x0), 0)
   eq(0, s(x0))
   eq(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(22) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(23)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND2(true, x, y) -> COND2(gr(y, 0), p(x), p(y))
   COND2(false, x, y) -> COND1(and(eq(x, y), gr(x, 0)), x, y)
   COND1(true, x, y) -> COND2(gr(y, 0), x, y)

The TRS R consists of the following rules:

   gr(0, x) -> false
   gr(s(x), 0) -> true
   eq(0, 0) -> true
   eq(s(x), 0) -> false
   eq(0, s(x)) -> false
   eq(s(x), s(y)) -> eq(x, y)
   and(true, true) -> true
   and(false, x) -> false
   and(x, false) -> false
   p(0) -> 0
   p(s(x)) -> x

The set Q consists of the following terms:

   cond1(true, x0, x1)
   cond2(true, x0, x1)
   cond2(false, x0, x1)
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))
   eq(0, 0)
   eq(s(x0), 0)
   eq(0, s(x0))
   eq(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(24) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   cond1(true, x0, x1)
   cond2(true, x0, x1)
   cond2(false, x0, x1)


----------------------------------------

(25)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND2(true, x, y) -> COND2(gr(y, 0), p(x), p(y))
   COND2(false, x, y) -> COND1(and(eq(x, y), gr(x, 0)), x, y)
   COND1(true, x, y) -> COND2(gr(y, 0), x, y)

The TRS R consists of the following rules:

   gr(0, x) -> false
   gr(s(x), 0) -> true
   eq(0, 0) -> true
   eq(s(x), 0) -> false
   eq(0, s(x)) -> false
   eq(s(x), s(y)) -> eq(x, y)
   and(true, true) -> true
   and(false, x) -> false
   and(x, false) -> false
   p(0) -> 0
   p(s(x)) -> x

The set Q consists of the following terms:

   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))
   eq(0, 0)
   eq(s(x0), 0)
   eq(0, s(x0))
   eq(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(26) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule COND2(true, x, y) -> COND2(gr(y, 0), p(x), p(y)) at position [0] we obtained the following new rules [LPAR04]:

   (COND2(true, y0, 0) -> COND2(false, p(y0), p(0)),COND2(true, y0, 0) -> COND2(false, p(y0), p(0)))
   (COND2(true, y0, s(x0)) -> COND2(true, p(y0), p(s(x0))),COND2(true, y0, s(x0)) -> COND2(true, p(y0), p(s(x0))))


----------------------------------------

(27)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND2(false, x, y) -> COND1(and(eq(x, y), gr(x, 0)), x, y)
   COND1(true, x, y) -> COND2(gr(y, 0), x, y)
   COND2(true, y0, 0) -> COND2(false, p(y0), p(0))
   COND2(true, y0, s(x0)) -> COND2(true, p(y0), p(s(x0)))

The TRS R consists of the following rules:

   gr(0, x) -> false
   gr(s(x), 0) -> true
   eq(0, 0) -> true
   eq(s(x), 0) -> false
   eq(0, s(x)) -> false
   eq(s(x), s(y)) -> eq(x, y)
   and(true, true) -> true
   and(false, x) -> false
   and(x, false) -> false
   p(0) -> 0
   p(s(x)) -> x

The set Q consists of the following terms:

   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))
   eq(0, 0)
   eq(s(x0), 0)
   eq(0, s(x0))
   eq(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(28) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule COND2(true, y0, 0) -> COND2(false, p(y0), p(0)) at position [2] we obtained the following new rules [LPAR04]:

   (COND2(true, y0, 0) -> COND2(false, p(y0), 0),COND2(true, y0, 0) -> COND2(false, p(y0), 0))


----------------------------------------

(29)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND2(false, x, y) -> COND1(and(eq(x, y), gr(x, 0)), x, y)
   COND1(true, x, y) -> COND2(gr(y, 0), x, y)
   COND2(true, y0, s(x0)) -> COND2(true, p(y0), p(s(x0)))
   COND2(true, y0, 0) -> COND2(false, p(y0), 0)

The TRS R consists of the following rules:

   gr(0, x) -> false
   gr(s(x), 0) -> true
   eq(0, 0) -> true
   eq(s(x), 0) -> false
   eq(0, s(x)) -> false
   eq(s(x), s(y)) -> eq(x, y)
   and(true, true) -> true
   and(false, x) -> false
   and(x, false) -> false
   p(0) -> 0
   p(s(x)) -> x

The set Q consists of the following terms:

   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))
   eq(0, 0)
   eq(s(x0), 0)
   eq(0, s(x0))
   eq(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(30) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule COND2(true, y0, s(x0)) -> COND2(true, p(y0), p(s(x0))) at position [2] we obtained the following new rules [LPAR04]:

   (COND2(true, y0, s(x0)) -> COND2(true, p(y0), x0),COND2(true, y0, s(x0)) -> COND2(true, p(y0), x0))


----------------------------------------

(31)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND2(false, x, y) -> COND1(and(eq(x, y), gr(x, 0)), x, y)
   COND1(true, x, y) -> COND2(gr(y, 0), x, y)
   COND2(true, y0, 0) -> COND2(false, p(y0), 0)
   COND2(true, y0, s(x0)) -> COND2(true, p(y0), x0)

The TRS R consists of the following rules:

   gr(0, x) -> false
   gr(s(x), 0) -> true
   eq(0, 0) -> true
   eq(s(x), 0) -> false
   eq(0, s(x)) -> false
   eq(s(x), s(y)) -> eq(x, y)
   and(true, true) -> true
   and(false, x) -> false
   and(x, false) -> false
   p(0) -> 0
   p(s(x)) -> x

The set Q consists of the following terms:

   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))
   eq(0, 0)
   eq(s(x0), 0)
   eq(0, s(x0))
   eq(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(32) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule COND1(true, x, y) -> COND2(gr(y, 0), x, y) at position [0] we obtained the following new rules [LPAR04]:

   (COND1(true, y0, 0) -> COND2(false, y0, 0),COND1(true, y0, 0) -> COND2(false, y0, 0))
   (COND1(true, y0, s(x0)) -> COND2(true, y0, s(x0)),COND1(true, y0, s(x0)) -> COND2(true, y0, s(x0)))


----------------------------------------

(33)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND2(false, x, y) -> COND1(and(eq(x, y), gr(x, 0)), x, y)
   COND2(true, y0, 0) -> COND2(false, p(y0), 0)
   COND2(true, y0, s(x0)) -> COND2(true, p(y0), x0)
   COND1(true, y0, 0) -> COND2(false, y0, 0)
   COND1(true, y0, s(x0)) -> COND2(true, y0, s(x0))

The TRS R consists of the following rules:

   gr(0, x) -> false
   gr(s(x), 0) -> true
   eq(0, 0) -> true
   eq(s(x), 0) -> false
   eq(0, s(x)) -> false
   eq(s(x), s(y)) -> eq(x, y)
   and(true, true) -> true
   and(false, x) -> false
   and(x, false) -> false
   p(0) -> 0
   p(s(x)) -> x

The set Q consists of the following terms:

   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))
   eq(0, 0)
   eq(s(x0), 0)
   eq(0, s(x0))
   eq(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(34) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule COND2(false, x, y) -> COND1(and(eq(x, y), gr(x, 0)), x, y) we obtained the following new rules [LPAR04]:

   (COND2(false, y_0, 0) -> COND1(and(eq(y_0, 0), gr(y_0, 0)), y_0, 0),COND2(false, y_0, 0) -> COND1(and(eq(y_0, 0), gr(y_0, 0)), y_0, 0))


----------------------------------------

(35)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND2(true, y0, 0) -> COND2(false, p(y0), 0)
   COND2(true, y0, s(x0)) -> COND2(true, p(y0), x0)
   COND1(true, y0, 0) -> COND2(false, y0, 0)
   COND1(true, y0, s(x0)) -> COND2(true, y0, s(x0))
   COND2(false, y_0, 0) -> COND1(and(eq(y_0, 0), gr(y_0, 0)), y_0, 0)

The TRS R consists of the following rules:

   gr(0, x) -> false
   gr(s(x), 0) -> true
   eq(0, 0) -> true
   eq(s(x), 0) -> false
   eq(0, s(x)) -> false
   eq(s(x), s(y)) -> eq(x, y)
   and(true, true) -> true
   and(false, x) -> false
   and(x, false) -> false
   p(0) -> 0
   p(s(x)) -> x

The set Q consists of the following terms:

   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))
   eq(0, 0)
   eq(s(x0), 0)
   eq(0, s(x0))
   eq(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(36) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs with 2 less nodes.
----------------------------------------

(37)
Complex Obligation (AND)

----------------------------------------

(38)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND2(false, y_0, 0) -> COND1(and(eq(y_0, 0), gr(y_0, 0)), y_0, 0)
   COND1(true, y0, 0) -> COND2(false, y0, 0)

The TRS R consists of the following rules:

   gr(0, x) -> false
   gr(s(x), 0) -> true
   eq(0, 0) -> true
   eq(s(x), 0) -> false
   eq(0, s(x)) -> false
   eq(s(x), s(y)) -> eq(x, y)
   and(true, true) -> true
   and(false, x) -> false
   and(x, false) -> false
   p(0) -> 0
   p(s(x)) -> x

The set Q consists of the following terms:

   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))
   eq(0, 0)
   eq(s(x0), 0)
   eq(0, s(x0))
   eq(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(39) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(40)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND2(false, y_0, 0) -> COND1(and(eq(y_0, 0), gr(y_0, 0)), y_0, 0)
   COND1(true, y0, 0) -> COND2(false, y0, 0)

The TRS R consists of the following rules:

   eq(0, 0) -> true
   eq(s(x), 0) -> false
   gr(0, x) -> false
   gr(s(x), 0) -> true
   and(true, true) -> true
   and(false, x) -> false
   and(x, false) -> false

The set Q consists of the following terms:

   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))
   eq(0, 0)
   eq(s(x0), 0)
   eq(0, s(x0))
   eq(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(41) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   p(0)
   p(s(x0))


----------------------------------------

(42)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND2(false, y_0, 0) -> COND1(and(eq(y_0, 0), gr(y_0, 0)), y_0, 0)
   COND1(true, y0, 0) -> COND2(false, y0, 0)

The TRS R consists of the following rules:

   eq(0, 0) -> true
   eq(s(x), 0) -> false
   gr(0, x) -> false
   gr(s(x), 0) -> true
   and(true, true) -> true
   and(false, x) -> false
   and(x, false) -> false

The set Q consists of the following terms:

   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   eq(0, 0)
   eq(s(x0), 0)
   eq(0, s(x0))
   eq(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(43) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule COND2(false, y_0, 0) -> COND1(and(eq(y_0, 0), gr(y_0, 0)), y_0, 0) at position [0] we obtained the following new rules [LPAR04]:

   (COND2(false, 0, 0) -> COND1(and(true, gr(0, 0)), 0, 0),COND2(false, 0, 0) -> COND1(and(true, gr(0, 0)), 0, 0))
   (COND2(false, s(x0), 0) -> COND1(and(false, gr(s(x0), 0)), s(x0), 0),COND2(false, s(x0), 0) -> COND1(and(false, gr(s(x0), 0)), s(x0), 0))
   (COND2(false, 0, 0) -> COND1(and(eq(0, 0), false), 0, 0),COND2(false, 0, 0) -> COND1(and(eq(0, 0), false), 0, 0))
   (COND2(false, s(x0), 0) -> COND1(and(eq(s(x0), 0), true), s(x0), 0),COND2(false, s(x0), 0) -> COND1(and(eq(s(x0), 0), true), s(x0), 0))


----------------------------------------

(44)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND1(true, y0, 0) -> COND2(false, y0, 0)
   COND2(false, 0, 0) -> COND1(and(true, gr(0, 0)), 0, 0)
   COND2(false, s(x0), 0) -> COND1(and(false, gr(s(x0), 0)), s(x0), 0)
   COND2(false, 0, 0) -> COND1(and(eq(0, 0), false), 0, 0)
   COND2(false, s(x0), 0) -> COND1(and(eq(s(x0), 0), true), s(x0), 0)

The TRS R consists of the following rules:

   eq(0, 0) -> true
   eq(s(x), 0) -> false
   gr(0, x) -> false
   gr(s(x), 0) -> true
   and(true, true) -> true
   and(false, x) -> false
   and(x, false) -> false

The set Q consists of the following terms:

   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   eq(0, 0)
   eq(s(x0), 0)
   eq(0, s(x0))
   eq(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(45) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule COND2(false, 0, 0) -> COND1(and(true, gr(0, 0)), 0, 0) at position [0,1] we obtained the following new rules [LPAR04]:

   (COND2(false, 0, 0) -> COND1(and(true, false), 0, 0),COND2(false, 0, 0) -> COND1(and(true, false), 0, 0))


----------------------------------------

(46)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND1(true, y0, 0) -> COND2(false, y0, 0)
   COND2(false, s(x0), 0) -> COND1(and(false, gr(s(x0), 0)), s(x0), 0)
   COND2(false, 0, 0) -> COND1(and(eq(0, 0), false), 0, 0)
   COND2(false, s(x0), 0) -> COND1(and(eq(s(x0), 0), true), s(x0), 0)
   COND2(false, 0, 0) -> COND1(and(true, false), 0, 0)

The TRS R consists of the following rules:

   eq(0, 0) -> true
   eq(s(x), 0) -> false
   gr(0, x) -> false
   gr(s(x), 0) -> true
   and(true, true) -> true
   and(false, x) -> false
   and(x, false) -> false

The set Q consists of the following terms:

   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   eq(0, 0)
   eq(s(x0), 0)
   eq(0, s(x0))
   eq(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(47) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(48)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND2(false, s(x0), 0) -> COND1(and(false, gr(s(x0), 0)), s(x0), 0)
   COND1(true, y0, 0) -> COND2(false, y0, 0)
   COND2(false, 0, 0) -> COND1(and(eq(0, 0), false), 0, 0)
   COND2(false, s(x0), 0) -> COND1(and(eq(s(x0), 0), true), s(x0), 0)

The TRS R consists of the following rules:

   eq(0, 0) -> true
   eq(s(x), 0) -> false
   gr(0, x) -> false
   gr(s(x), 0) -> true
   and(true, true) -> true
   and(false, x) -> false
   and(x, false) -> false

The set Q consists of the following terms:

   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   eq(0, 0)
   eq(s(x0), 0)
   eq(0, s(x0))
   eq(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(49) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(50)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND2(false, s(x0), 0) -> COND1(and(false, gr(s(x0), 0)), s(x0), 0)
   COND1(true, y0, 0) -> COND2(false, y0, 0)
   COND2(false, 0, 0) -> COND1(and(eq(0, 0), false), 0, 0)
   COND2(false, s(x0), 0) -> COND1(and(eq(s(x0), 0), true), s(x0), 0)

The TRS R consists of the following rules:

   eq(s(x), 0) -> false
   and(true, true) -> true
   and(false, x) -> false
   eq(0, 0) -> true
   and(x, false) -> false
   gr(s(x), 0) -> true

The set Q consists of the following terms:

   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   eq(0, 0)
   eq(s(x0), 0)
   eq(0, s(x0))
   eq(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(51) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule COND2(false, s(x0), 0) -> COND1(and(false, gr(s(x0), 0)), s(x0), 0) at position [0] we obtained the following new rules [LPAR04]:

   (COND2(false, s(x0), 0) -> COND1(false, s(x0), 0),COND2(false, s(x0), 0) -> COND1(false, s(x0), 0))


----------------------------------------

(52)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND1(true, y0, 0) -> COND2(false, y0, 0)
   COND2(false, 0, 0) -> COND1(and(eq(0, 0), false), 0, 0)
   COND2(false, s(x0), 0) -> COND1(and(eq(s(x0), 0), true), s(x0), 0)
   COND2(false, s(x0), 0) -> COND1(false, s(x0), 0)

The TRS R consists of the following rules:

   eq(s(x), 0) -> false
   and(true, true) -> true
   and(false, x) -> false
   eq(0, 0) -> true
   and(x, false) -> false
   gr(s(x), 0) -> true

The set Q consists of the following terms:

   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   eq(0, 0)
   eq(s(x0), 0)
   eq(0, s(x0))
   eq(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(53) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(54)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND2(false, 0, 0) -> COND1(and(eq(0, 0), false), 0, 0)
   COND1(true, y0, 0) -> COND2(false, y0, 0)
   COND2(false, s(x0), 0) -> COND1(and(eq(s(x0), 0), true), s(x0), 0)

The TRS R consists of the following rules:

   eq(s(x), 0) -> false
   and(true, true) -> true
   and(false, x) -> false
   eq(0, 0) -> true
   and(x, false) -> false
   gr(s(x), 0) -> true

The set Q consists of the following terms:

   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   eq(0, 0)
   eq(s(x0), 0)
   eq(0, s(x0))
   eq(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(55) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(56)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND2(false, 0, 0) -> COND1(and(eq(0, 0), false), 0, 0)
   COND1(true, y0, 0) -> COND2(false, y0, 0)
   COND2(false, s(x0), 0) -> COND1(and(eq(s(x0), 0), true), s(x0), 0)

The TRS R consists of the following rules:

   eq(s(x), 0) -> false
   and(true, true) -> true
   and(false, x) -> false
   eq(0, 0) -> true
   and(x, false) -> false

The set Q consists of the following terms:

   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   eq(0, 0)
   eq(s(x0), 0)
   eq(0, s(x0))
   eq(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(57) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))


----------------------------------------

(58)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND2(false, 0, 0) -> COND1(and(eq(0, 0), false), 0, 0)
   COND1(true, y0, 0) -> COND2(false, y0, 0)
   COND2(false, s(x0), 0) -> COND1(and(eq(s(x0), 0), true), s(x0), 0)

The TRS R consists of the following rules:

   eq(s(x), 0) -> false
   and(true, true) -> true
   and(false, x) -> false
   eq(0, 0) -> true
   and(x, false) -> false

The set Q consists of the following terms:

   eq(0, 0)
   eq(s(x0), 0)
   eq(0, s(x0))
   eq(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(59) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule COND2(false, 0, 0) -> COND1(and(eq(0, 0), false), 0, 0) at position [0] we obtained the following new rules [LPAR04]:

   (COND2(false, 0, 0) -> COND1(false, 0, 0),COND2(false, 0, 0) -> COND1(false, 0, 0))


----------------------------------------

(60)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND1(true, y0, 0) -> COND2(false, y0, 0)
   COND2(false, s(x0), 0) -> COND1(and(eq(s(x0), 0), true), s(x0), 0)
   COND2(false, 0, 0) -> COND1(false, 0, 0)

The TRS R consists of the following rules:

   eq(s(x), 0) -> false
   and(true, true) -> true
   and(false, x) -> false
   eq(0, 0) -> true
   and(x, false) -> false

The set Q consists of the following terms:

   eq(0, 0)
   eq(s(x0), 0)
   eq(0, s(x0))
   eq(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(61) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(62)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND2(false, s(x0), 0) -> COND1(and(eq(s(x0), 0), true), s(x0), 0)
   COND1(true, y0, 0) -> COND2(false, y0, 0)

The TRS R consists of the following rules:

   eq(s(x), 0) -> false
   and(true, true) -> true
   and(false, x) -> false
   eq(0, 0) -> true
   and(x, false) -> false

The set Q consists of the following terms:

   eq(0, 0)
   eq(s(x0), 0)
   eq(0, s(x0))
   eq(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(63) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(64)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND2(false, s(x0), 0) -> COND1(and(eq(s(x0), 0), true), s(x0), 0)
   COND1(true, y0, 0) -> COND2(false, y0, 0)

The TRS R consists of the following rules:

   eq(s(x), 0) -> false
   and(true, true) -> true
   and(false, x) -> false

The set Q consists of the following terms:

   eq(0, 0)
   eq(s(x0), 0)
   eq(0, s(x0))
   eq(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(65) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule COND2(false, s(x0), 0) -> COND1(and(eq(s(x0), 0), true), s(x0), 0) at position [0,0] we obtained the following new rules [LPAR04]:

   (COND2(false, s(x0), 0) -> COND1(and(false, true), s(x0), 0),COND2(false, s(x0), 0) -> COND1(and(false, true), s(x0), 0))


----------------------------------------

(66)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND1(true, y0, 0) -> COND2(false, y0, 0)
   COND2(false, s(x0), 0) -> COND1(and(false, true), s(x0), 0)

The TRS R consists of the following rules:

   eq(s(x), 0) -> false
   and(true, true) -> true
   and(false, x) -> false

The set Q consists of the following terms:

   eq(0, 0)
   eq(s(x0), 0)
   eq(0, s(x0))
   eq(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(67) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 2 less nodes.
----------------------------------------

(68)
TRUE

----------------------------------------

(69)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND2(true, y0, s(x0)) -> COND2(true, p(y0), x0)

The TRS R consists of the following rules:

   gr(0, x) -> false
   gr(s(x), 0) -> true
   eq(0, 0) -> true
   eq(s(x), 0) -> false
   eq(0, s(x)) -> false
   eq(s(x), s(y)) -> eq(x, y)
   and(true, true) -> true
   and(false, x) -> false
   and(x, false) -> false
   p(0) -> 0
   p(s(x)) -> x

The set Q consists of the following terms:

   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))
   eq(0, 0)
   eq(s(x0), 0)
   eq(0, s(x0))
   eq(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(70) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(71)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND2(true, y0, s(x0)) -> COND2(true, p(y0), x0)

The TRS R consists of the following rules:

   p(0) -> 0
   p(s(x)) -> x

The set Q consists of the following terms:

   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   p(0)
   p(s(x0))
   eq(0, 0)
   eq(s(x0), 0)
   eq(0, s(x0))
   eq(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(72) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   eq(0, 0)
   eq(s(x0), 0)
   eq(0, s(x0))
   eq(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)


----------------------------------------

(73)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND2(true, y0, s(x0)) -> COND2(true, p(y0), x0)

The TRS R consists of the following rules:

   p(0) -> 0
   p(s(x)) -> x

The set Q consists of the following terms:

   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(74) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*COND2(true, y0, s(x0)) -> COND2(true, p(y0), x0)
The graph contains the following edges 1 >= 1, 3 > 3


----------------------------------------

(75)
YES
