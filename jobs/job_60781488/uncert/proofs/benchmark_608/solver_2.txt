YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/VFTsI.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 0 ms]
(2) QDP
(3) DependencyGraphProof [EQUIVALENT, 0 ms]
(4) QDP
(5) TransformationProof [EQUIVALENT, 0 ms]
(6) QDP
(7) DependencyGraphProof [EQUIVALENT, 0 ms]
(8) QDP
(9) QDPOrderProof [EQUIVALENT, 24 ms]
(10) QDP
(11) QDPOrderProof [EQUIVALENT, 0 ms]
(12) QDP
(13) PisEmptyProof [EQUIVALENT, 0 ms]
(14) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a(x, y) -> b(x, b(0, c(y)))
   c(b(y, c(x))) -> c(c(b(a(0, 0), y)))
   b(y, 0) -> y

Q is empty.

----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(x, y) -> B(x, b(0, c(y)))
   A(x, y) -> B(0, c(y))
   A(x, y) -> C(y)
   C(b(y, c(x))) -> C(c(b(a(0, 0), y)))
   C(b(y, c(x))) -> C(b(a(0, 0), y))
   C(b(y, c(x))) -> B(a(0, 0), y)
   C(b(y, c(x))) -> A(0, 0)

The TRS R consists of the following rules:

   a(x, y) -> b(x, b(0, c(y)))
   c(b(y, c(x))) -> c(c(b(a(0, 0), y)))
   b(y, 0) -> y

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 3 less nodes.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(x, y) -> C(y)
   C(b(y, c(x))) -> C(c(b(a(0, 0), y)))
   C(b(y, c(x))) -> C(b(a(0, 0), y))
   C(b(y, c(x))) -> A(0, 0)

The TRS R consists of the following rules:

   a(x, y) -> b(x, b(0, c(y)))
   c(b(y, c(x))) -> c(c(b(a(0, 0), y)))
   b(y, 0) -> y

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule A(x, y) -> C(y) we obtained the following new rules [LPAR04]:

   (A(0, 0) -> C(0),A(0, 0) -> C(0))


----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C(b(y, c(x))) -> C(c(b(a(0, 0), y)))
   C(b(y, c(x))) -> C(b(a(0, 0), y))
   C(b(y, c(x))) -> A(0, 0)
   A(0, 0) -> C(0)

The TRS R consists of the following rules:

   a(x, y) -> b(x, b(0, c(y)))
   c(b(y, c(x))) -> c(c(b(a(0, 0), y)))
   b(y, 0) -> y

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 2 less nodes.
----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C(b(y, c(x))) -> C(b(a(0, 0), y))
   C(b(y, c(x))) -> C(c(b(a(0, 0), y)))

The TRS R consists of the following rules:

   a(x, y) -> b(x, b(0, c(y)))
   c(b(y, c(x))) -> c(c(b(a(0, 0), y)))
   b(y, 0) -> y

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   C(b(y, c(x))) -> C(c(b(a(0, 0), y)))
The remaining pairs can at least be oriented weakly.
Used ordering:  Matrix interpretation [MATRO] with arctic natural numbers [ARCTIC]:

   <<<
 POL(C(x_1)) =  	[[-I]] 	 +  	[[0A]] 	* 	x_1
>>>

   <<<
 POL(b(x_1, x_2)) =  	[[1A]] 	 +  	[[0A]] 	* 	x_1 	 +  	[[-I]] 	* 	x_2
>>>

   <<<
 POL(c(x_1)) =  	[[0A]] 	 +  	[[-I]] 	* 	x_1
>>>

   <<<
 POL(a(x_1, x_2)) =  	[[1A]] 	 +  	[[1A]] 	* 	x_1 	 +  	[[-I]] 	* 	x_2
>>>

   <<<
 POL(0) =  	[[0A]]
>>>


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   a(x, y) -> b(x, b(0, c(y)))
   b(y, 0) -> y
   c(b(y, c(x))) -> c(c(b(a(0, 0), y)))


----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C(b(y, c(x))) -> C(b(a(0, 0), y))

The TRS R consists of the following rules:

   a(x, y) -> b(x, b(0, c(y)))
   c(b(y, c(x))) -> c(c(b(a(0, 0), y)))
   b(y, 0) -> y

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   C(b(y, c(x))) -> C(b(a(0, 0), y))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO,RATPOLO]:

   POL(0) = 0
   POL(C(x_1)) = [4]x_1
   POL(a(x_1, x_2)) = [1/4] + [4]x_1
   POL(b(x_1, x_2)) = x_1 + [1/4]x_2
   POL(c(x_1)) = [4]
The value of delta used in the strict ordering is 3.
The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   a(x, y) -> b(x, b(0, c(y)))
   b(y, 0) -> y
   c(b(y, c(x))) -> c(c(b(a(0, 0), y)))


----------------------------------------

(12)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   a(x, y) -> b(x, b(0, c(y)))
   c(b(y, c(x))) -> c(c(b(a(0, 0), y)))
   b(y, 0) -> y

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(14)
YES
