YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/YTZ5o.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 0 ms]
(2) QDP
(3) DependencyGraphProof [EQUIVALENT, 0 ms]
(4) QDP
(5) QDPOrderProof [EQUIVALENT, 0 ms]
(6) QDP
(7) DependencyGraphProof [EQUIVALENT, 0 ms]
(8) QDP
(9) TransformationProof [EQUIVALENT, 0 ms]
(10) QDP
(11) DependencyGraphProof [EQUIVALENT, 0 ms]
(12) TRUE


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(b(a, z)) -> z
   b(y, b(a, z)) -> b(f(c(y, y, a)), b(f(z), a))
   f(f(f(c(z, x, a)))) -> b(f(x), z)

Q is empty.

----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(y, b(a, z)) -> B(f(c(y, y, a)), b(f(z), a))
   B(y, b(a, z)) -> F(c(y, y, a))
   B(y, b(a, z)) -> B(f(z), a)
   B(y, b(a, z)) -> F(z)
   F(f(f(c(z, x, a)))) -> B(f(x), z)
   F(f(f(c(z, x, a)))) -> F(x)

The TRS R consists of the following rules:

   f(b(a, z)) -> z
   b(y, b(a, z)) -> b(f(c(y, y, a)), b(f(z), a))
   f(f(f(c(z, x, a)))) -> b(f(x), z)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 2 less nodes.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(y, b(a, z)) -> F(z)
   F(f(f(c(z, x, a)))) -> B(f(x), z)
   B(y, b(a, z)) -> B(f(c(y, y, a)), b(f(z), a))
   F(f(f(c(z, x, a)))) -> F(x)

The TRS R consists of the following rules:

   f(b(a, z)) -> z
   b(y, b(a, z)) -> b(f(c(y, y, a)), b(f(z), a))
   f(f(f(c(z, x, a)))) -> b(f(x), z)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   F(f(f(c(z, x, a)))) -> B(f(x), z)
   F(f(f(c(z, x, a)))) -> F(x)
The remaining pairs can at least be oriented weakly.
Used ordering:  Combined order from the following AFS and order.
B(x1, x2)  =  x2

b(x1, x2)  =  x2

F(x1)  =  x1

f(x1)  =  x1

c(x1, x2, x3)  =  c(x1, x2)

a  =  a


Knuth-Bendix order [KBO] with precedence:trivial

and weight map:

   a=1
   c_2=1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:
none


----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(y, b(a, z)) -> F(z)
   B(y, b(a, z)) -> B(f(c(y, y, a)), b(f(z), a))

The TRS R consists of the following rules:

   f(b(a, z)) -> z
   b(y, b(a, z)) -> b(f(c(y, y, a)), b(f(z), a))
   f(f(f(c(z, x, a)))) -> b(f(x), z)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(y, b(a, z)) -> B(f(c(y, y, a)), b(f(z), a))

The TRS R consists of the following rules:

   f(b(a, z)) -> z
   b(y, b(a, z)) -> b(f(c(y, y, a)), b(f(z), a))
   f(f(f(c(z, x, a)))) -> b(f(x), z)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule B(y, b(a, z)) -> B(f(c(y, y, a)), b(f(z), a)) we obtained the following new rules [LPAR04]:

   (B(f(c(y_0, y_1, a)), b(a, a)) -> B(f(c(f(c(y_0, y_1, a)), f(c(y_0, y_1, a)), a)), b(f(a), a)),B(f(c(y_0, y_1, a)), b(a, a)) -> B(f(c(f(c(y_0, y_1, a)), f(c(y_0, y_1, a)), a)), b(f(a), a)))


----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B(f(c(y_0, y_1, a)), b(a, a)) -> B(f(c(f(c(y_0, y_1, a)), f(c(y_0, y_1, a)), a)), b(f(a), a))

The TRS R consists of the following rules:

   f(b(a, z)) -> z
   b(y, b(a, z)) -> b(f(c(y, y, a)), b(f(z), a))
   f(f(f(c(z, x, a)))) -> b(f(x), z)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 1 less node.
----------------------------------------

(12)
TRUE
