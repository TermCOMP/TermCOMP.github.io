YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/rizZ8.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 0 ms]
(2) QDP
(3) MRRProof [EQUIVALENT, 0 ms]
(4) QDP
(5) SemLabProof [SOUND, 81 ms]
(6) QDP
(7) DependencyGraphProof [EQUIVALENT, 0 ms]
(8) QDP
(9) QDPOrderProof [EQUIVALENT, 4 ms]
(10) QDP
(11) QDPOrderProof [EQUIVALENT, 0 ms]
(12) QDP
(13) DependencyGraphProof [EQUIVALENT, 0 ms]
(14) AND
    (15) QDP
        (16) QDPOrderProof [EQUIVALENT, 3 ms]
        (17) QDP
        (18) QDPOrderProof [EQUIVALENT, 0 ms]
        (19) QDP
        (20) UsableRulesReductionPairsProof [EQUIVALENT, 0 ms]
        (21) QDP
        (22) PisEmptyProof [EQUIVALENT, 0 ms]
        (23) YES
    (24) QDP
        (25) UsableRulesReductionPairsProof [EQUIVALENT, 0 ms]
        (26) QDP
        (27) PisEmptyProof [EQUIVALENT, 0 ms]
        (28) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(f(a, a), x) -> f(a, f(b, f(a, x)))
   f(x, f(y, z)) -> f(f(x, y), z)

Q is empty.

----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(f(a, a), x) -> F(a, f(b, f(a, x)))
   F(f(a, a), x) -> F(b, f(a, x))
   F(f(a, a), x) -> F(a, x)
   F(x, f(y, z)) -> F(f(x, y), z)
   F(x, f(y, z)) -> F(x, y)

The TRS R consists of the following rules:

   f(f(a, a), x) -> f(a, f(b, f(a, x)))
   f(x, f(y, z)) -> f(f(x, y), z)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) MRRProof (EQUIVALENT)
By using the rule removal processor [LPAR04] with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented.

Strictly oriented dependency pairs:

   F(f(a, a), x) -> F(b, f(a, x))
   F(f(a, a), x) -> F(a, x)


Used ordering: Polynomial interpretation [POLO]:

   POL(F(x_1, x_2)) = 2*x_1 + 2*x_2
   POL(a) = 2
   POL(b) = 0
   POL(f(x_1, x_2)) = x_1 + x_2


----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(f(a, a), x) -> F(a, f(b, f(a, x)))
   F(x, f(y, z)) -> F(f(x, y), z)
   F(x, f(y, z)) -> F(x, y)

The TRS R consists of the following rules:

   f(f(a, a), x) -> f(a, f(b, f(a, x)))
   f(x, f(y, z)) -> f(f(x, y), z)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) SemLabProof (SOUND)
We found the following model for the rules of the TRSs R and P.
Interpretation over the domain with elements from 0 to 1.
a: 1
b: 0
f: 0
F: 0
By semantic labelling [SEMLAB] we obtain the following labelled QDP problem.
----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F.0-0(f.1-1(a., a.), x) -> F.1-0(a., f.0-0(b., f.1-0(a., x)))
   F.0-0(x, f.0-0(y, z)) -> F.0-0(f.0-0(x, y), z)
   F.0-0(x, f.0-1(y, z)) -> F.0-1(f.0-0(x, y), z)
   F.0-0(x, f.1-0(y, z)) -> F.0-0(f.0-1(x, y), z)
   F.0-0(x, f.1-1(y, z)) -> F.0-1(f.0-1(x, y), z)
   F.1-0(x, f.0-0(y, z)) -> F.0-0(f.1-0(x, y), z)
   F.1-0(x, f.0-1(y, z)) -> F.0-1(f.1-0(x, y), z)
   F.1-0(x, f.1-0(y, z)) -> F.0-0(f.1-1(x, y), z)
   F.1-0(x, f.1-1(y, z)) -> F.0-1(f.1-1(x, y), z)
   F.0-1(f.1-1(a., a.), x) -> F.1-0(a., f.0-0(b., f.1-1(a., x)))
   F.0-0(x, f.0-0(y, z)) -> F.0-0(x, y)
   F.0-0(x, f.0-1(y, z)) -> F.0-0(x, y)
   F.0-0(x, f.1-0(y, z)) -> F.0-1(x, y)
   F.0-0(x, f.1-1(y, z)) -> F.0-1(x, y)
   F.1-0(x, f.0-0(y, z)) -> F.1-0(x, y)
   F.1-0(x, f.0-1(y, z)) -> F.1-0(x, y)
   F.1-0(x, f.1-0(y, z)) -> F.1-1(x, y)
   F.1-0(x, f.1-1(y, z)) -> F.1-1(x, y)

The TRS R consists of the following rules:

   f.0-0(f.1-1(a., a.), x) -> f.1-0(a., f.0-0(b., f.1-0(a., x)))
   f.0-1(f.1-1(a., a.), x) -> f.1-0(a., f.0-0(b., f.1-1(a., x)))
   f.0-0(x, f.0-0(y, z)) -> f.0-0(f.0-0(x, y), z)
   f.0-0(x, f.0-1(y, z)) -> f.0-1(f.0-0(x, y), z)
   f.0-0(x, f.1-0(y, z)) -> f.0-0(f.0-1(x, y), z)
   f.0-0(x, f.1-1(y, z)) -> f.0-1(f.0-1(x, y), z)
   f.1-0(x, f.0-0(y, z)) -> f.0-0(f.1-0(x, y), z)
   f.1-0(x, f.0-1(y, z)) -> f.0-1(f.1-0(x, y), z)
   f.1-0(x, f.1-0(y, z)) -> f.0-0(f.1-1(x, y), z)
   f.1-0(x, f.1-1(y, z)) -> f.0-1(f.1-1(x, y), z)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 5 less nodes.
----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F.1-0(x, f.0-0(y, z)) -> F.0-0(f.1-0(x, y), z)
   F.0-0(x, f.0-0(y, z)) -> F.0-0(x, y)
   F.0-0(f.1-1(a., a.), x) -> F.1-0(a., f.0-0(b., f.1-0(a., x)))
   F.1-0(x, f.1-0(y, z)) -> F.0-0(f.1-1(x, y), z)
   F.0-0(x, f.0-1(y, z)) -> F.0-0(x, y)
   F.0-0(x, f.0-0(y, z)) -> F.0-0(f.0-0(x, y), z)
   F.0-0(x, f.1-0(y, z)) -> F.0-1(x, y)
   F.0-1(f.1-1(a., a.), x) -> F.1-0(a., f.0-0(b., f.1-1(a., x)))
   F.1-0(x, f.0-0(y, z)) -> F.1-0(x, y)
   F.1-0(x, f.1-1(y, z)) -> F.0-1(f.1-1(x, y), z)
   F.1-0(x, f.0-1(y, z)) -> F.1-0(x, y)
   F.0-0(x, f.1-1(y, z)) -> F.0-1(x, y)
   F.0-0(x, f.1-0(y, z)) -> F.0-0(f.0-1(x, y), z)

The TRS R consists of the following rules:

   f.0-0(f.1-1(a., a.), x) -> f.1-0(a., f.0-0(b., f.1-0(a., x)))
   f.0-1(f.1-1(a., a.), x) -> f.1-0(a., f.0-0(b., f.1-1(a., x)))
   f.0-0(x, f.0-0(y, z)) -> f.0-0(f.0-0(x, y), z)
   f.0-0(x, f.0-1(y, z)) -> f.0-1(f.0-0(x, y), z)
   f.0-0(x, f.1-0(y, z)) -> f.0-0(f.0-1(x, y), z)
   f.0-0(x, f.1-1(y, z)) -> f.0-1(f.0-1(x, y), z)
   f.1-0(x, f.0-0(y, z)) -> f.0-0(f.1-0(x, y), z)
   f.1-0(x, f.0-1(y, z)) -> f.0-1(f.1-0(x, y), z)
   f.1-0(x, f.1-0(y, z)) -> f.0-0(f.1-1(x, y), z)
   f.1-0(x, f.1-1(y, z)) -> f.0-1(f.1-1(x, y), z)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   F.1-0(x, f.1-0(y, z)) -> F.0-0(f.1-1(x, y), z)
   F.1-0(x, f.1-1(y, z)) -> F.0-1(f.1-1(x, y), z)
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(F.0-0(x_1, x_2)) = 0
   POL(F.0-1(x_1, x_2)) = 0
   POL(F.1-0(x_1, x_2)) = x_2
   POL(a.) = 0
   POL(b.) = 0
   POL(f.0-0(x_1, x_2)) = x_1
   POL(f.0-1(x_1, x_2)) = x_1
   POL(f.1-0(x_1, x_2)) = 1 + x_2
   POL(f.1-1(x_1, x_2)) = 1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   f.1-0(x, f.0-0(y, z)) -> f.0-0(f.1-0(x, y), z)
   f.0-0(f.1-1(a., a.), x) -> f.1-0(a., f.0-0(b., f.1-0(a., x)))
   f.1-0(x, f.0-1(y, z)) -> f.0-1(f.1-0(x, y), z)
   f.0-1(f.1-1(a., a.), x) -> f.1-0(a., f.0-0(b., f.1-1(a., x)))
   f.1-0(x, f.1-0(y, z)) -> f.0-0(f.1-1(x, y), z)
   f.0-0(x, f.0-0(y, z)) -> f.0-0(f.0-0(x, y), z)
   f.0-0(x, f.0-1(y, z)) -> f.0-1(f.0-0(x, y), z)
   f.0-0(x, f.1-0(y, z)) -> f.0-0(f.0-1(x, y), z)
   f.0-0(x, f.1-1(y, z)) -> f.0-1(f.0-1(x, y), z)
   f.1-0(x, f.1-1(y, z)) -> f.0-1(f.1-1(x, y), z)


----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F.1-0(x, f.0-0(y, z)) -> F.0-0(f.1-0(x, y), z)
   F.0-0(x, f.0-0(y, z)) -> F.0-0(x, y)
   F.0-0(f.1-1(a., a.), x) -> F.1-0(a., f.0-0(b., f.1-0(a., x)))
   F.0-0(x, f.0-1(y, z)) -> F.0-0(x, y)
   F.0-0(x, f.0-0(y, z)) -> F.0-0(f.0-0(x, y), z)
   F.0-0(x, f.1-0(y, z)) -> F.0-1(x, y)
   F.0-1(f.1-1(a., a.), x) -> F.1-0(a., f.0-0(b., f.1-1(a., x)))
   F.1-0(x, f.0-0(y, z)) -> F.1-0(x, y)
   F.1-0(x, f.0-1(y, z)) -> F.1-0(x, y)
   F.0-0(x, f.1-1(y, z)) -> F.0-1(x, y)
   F.0-0(x, f.1-0(y, z)) -> F.0-0(f.0-1(x, y), z)

The TRS R consists of the following rules:

   f.0-0(f.1-1(a., a.), x) -> f.1-0(a., f.0-0(b., f.1-0(a., x)))
   f.0-1(f.1-1(a., a.), x) -> f.1-0(a., f.0-0(b., f.1-1(a., x)))
   f.0-0(x, f.0-0(y, z)) -> f.0-0(f.0-0(x, y), z)
   f.0-0(x, f.0-1(y, z)) -> f.0-1(f.0-0(x, y), z)
   f.0-0(x, f.1-0(y, z)) -> f.0-0(f.0-1(x, y), z)
   f.0-0(x, f.1-1(y, z)) -> f.0-1(f.0-1(x, y), z)
   f.1-0(x, f.0-0(y, z)) -> f.0-0(f.1-0(x, y), z)
   f.1-0(x, f.0-1(y, z)) -> f.0-1(f.1-0(x, y), z)
   f.1-0(x, f.1-0(y, z)) -> f.0-0(f.1-1(x, y), z)
   f.1-0(x, f.1-1(y, z)) -> f.0-1(f.1-1(x, y), z)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   F.0-0(f.1-1(a., a.), x) -> F.1-0(a., f.0-0(b., f.1-0(a., x)))
   F.0-1(f.1-1(a., a.), x) -> F.1-0(a., f.0-0(b., f.1-1(a., x)))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(F.0-0(x_1, x_2)) = x_1
   POL(F.0-1(x_1, x_2)) = x_1
   POL(F.1-0(x_1, x_2)) = 0
   POL(a.) = 1
   POL(b.) = 0
   POL(f.0-0(x_1, x_2)) = 0
   POL(f.0-1(x_1, x_2)) = 0
   POL(f.1-0(x_1, x_2)) = 0
   POL(f.1-1(x_1, x_2)) = 1 + x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   f.1-0(x, f.0-0(y, z)) -> f.0-0(f.1-0(x, y), z)
   f.0-0(f.1-1(a., a.), x) -> f.1-0(a., f.0-0(b., f.1-0(a., x)))
   f.1-0(x, f.0-1(y, z)) -> f.0-1(f.1-0(x, y), z)
   f.0-1(f.1-1(a., a.), x) -> f.1-0(a., f.0-0(b., f.1-1(a., x)))
   f.1-0(x, f.1-0(y, z)) -> f.0-0(f.1-1(x, y), z)
   f.0-0(x, f.0-0(y, z)) -> f.0-0(f.0-0(x, y), z)
   f.0-0(x, f.0-1(y, z)) -> f.0-1(f.0-0(x, y), z)
   f.0-0(x, f.1-0(y, z)) -> f.0-0(f.0-1(x, y), z)
   f.0-0(x, f.1-1(y, z)) -> f.0-1(f.0-1(x, y), z)
   f.1-0(x, f.1-1(y, z)) -> f.0-1(f.1-1(x, y), z)


----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F.1-0(x, f.0-0(y, z)) -> F.0-0(f.1-0(x, y), z)
   F.0-0(x, f.0-0(y, z)) -> F.0-0(x, y)
   F.0-0(x, f.0-1(y, z)) -> F.0-0(x, y)
   F.0-0(x, f.0-0(y, z)) -> F.0-0(f.0-0(x, y), z)
   F.0-0(x, f.1-0(y, z)) -> F.0-1(x, y)
   F.1-0(x, f.0-0(y, z)) -> F.1-0(x, y)
   F.1-0(x, f.0-1(y, z)) -> F.1-0(x, y)
   F.0-0(x, f.1-1(y, z)) -> F.0-1(x, y)
   F.0-0(x, f.1-0(y, z)) -> F.0-0(f.0-1(x, y), z)

The TRS R consists of the following rules:

   f.0-0(f.1-1(a., a.), x) -> f.1-0(a., f.0-0(b., f.1-0(a., x)))
   f.0-1(f.1-1(a., a.), x) -> f.1-0(a., f.0-0(b., f.1-1(a., x)))
   f.0-0(x, f.0-0(y, z)) -> f.0-0(f.0-0(x, y), z)
   f.0-0(x, f.0-1(y, z)) -> f.0-1(f.0-0(x, y), z)
   f.0-0(x, f.1-0(y, z)) -> f.0-0(f.0-1(x, y), z)
   f.0-0(x, f.1-1(y, z)) -> f.0-1(f.0-1(x, y), z)
   f.1-0(x, f.0-0(y, z)) -> f.0-0(f.1-0(x, y), z)
   f.1-0(x, f.0-1(y, z)) -> f.0-1(f.1-0(x, y), z)
   f.1-0(x, f.1-0(y, z)) -> f.0-0(f.1-1(x, y), z)
   f.1-0(x, f.1-1(y, z)) -> f.0-1(f.1-1(x, y), z)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs with 3 less nodes.
----------------------------------------

(14)
Complex Obligation (AND)

----------------------------------------

(15)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F.0-0(x, f.0-0(y, z)) -> F.0-0(f.0-0(x, y), z)
   F.0-0(x, f.0-0(y, z)) -> F.0-0(x, y)
   F.0-0(x, f.1-0(y, z)) -> F.0-0(f.0-1(x, y), z)
   F.0-0(x, f.0-1(y, z)) -> F.0-0(x, y)

The TRS R consists of the following rules:

   f.0-0(f.1-1(a., a.), x) -> f.1-0(a., f.0-0(b., f.1-0(a., x)))
   f.0-1(f.1-1(a., a.), x) -> f.1-0(a., f.0-0(b., f.1-1(a., x)))
   f.0-0(x, f.0-0(y, z)) -> f.0-0(f.0-0(x, y), z)
   f.0-0(x, f.0-1(y, z)) -> f.0-1(f.0-0(x, y), z)
   f.0-0(x, f.1-0(y, z)) -> f.0-0(f.0-1(x, y), z)
   f.0-0(x, f.1-1(y, z)) -> f.0-1(f.0-1(x, y), z)
   f.1-0(x, f.0-0(y, z)) -> f.0-0(f.1-0(x, y), z)
   f.1-0(x, f.0-1(y, z)) -> f.0-1(f.1-0(x, y), z)
   f.1-0(x, f.1-0(y, z)) -> f.0-0(f.1-1(x, y), z)
   f.1-0(x, f.1-1(y, z)) -> f.0-1(f.1-1(x, y), z)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(16) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   F.0-0(x, f.0-0(y, z)) -> F.0-0(f.0-0(x, y), z)
   F.0-0(x, f.0-0(y, z)) -> F.0-0(x, y)
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(F.0-0(x_1, x_2)) = x_2
   POL(a.) = 0
   POL(b.) = 1
   POL(f.0-0(x_1, x_2)) = 1 + x_1 + x_2
   POL(f.0-1(x_1, x_2)) = x_1 + x_2
   POL(f.1-0(x_1, x_2)) = x_2
   POL(f.1-1(x_1, x_2)) = 0

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:
none


----------------------------------------

(17)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F.0-0(x, f.1-0(y, z)) -> F.0-0(f.0-1(x, y), z)
   F.0-0(x, f.0-1(y, z)) -> F.0-0(x, y)

The TRS R consists of the following rules:

   f.0-0(f.1-1(a., a.), x) -> f.1-0(a., f.0-0(b., f.1-0(a., x)))
   f.0-1(f.1-1(a., a.), x) -> f.1-0(a., f.0-0(b., f.1-1(a., x)))
   f.0-0(x, f.0-0(y, z)) -> f.0-0(f.0-0(x, y), z)
   f.0-0(x, f.0-1(y, z)) -> f.0-1(f.0-0(x, y), z)
   f.0-0(x, f.1-0(y, z)) -> f.0-0(f.0-1(x, y), z)
   f.0-0(x, f.1-1(y, z)) -> f.0-1(f.0-1(x, y), z)
   f.1-0(x, f.0-0(y, z)) -> f.0-0(f.1-0(x, y), z)
   f.1-0(x, f.0-1(y, z)) -> f.0-1(f.1-0(x, y), z)
   f.1-0(x, f.1-0(y, z)) -> f.0-0(f.1-1(x, y), z)
   f.1-0(x, f.1-1(y, z)) -> f.0-1(f.1-1(x, y), z)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(18) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   F.0-0(x, f.1-0(y, z)) -> F.0-0(f.0-1(x, y), z)
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(F.0-0(x_1, x_2)) = x_2
   POL(a.) = 0
   POL(b.) = 1
   POL(f.0-0(x_1, x_2)) = x_1
   POL(f.0-1(x_1, x_2)) = x_1 + x_2
   POL(f.1-0(x_1, x_2)) = 1 + x_2
   POL(f.1-1(x_1, x_2)) = 0

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:
none


----------------------------------------

(19)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F.0-0(x, f.0-1(y, z)) -> F.0-0(x, y)

The TRS R consists of the following rules:

   f.0-0(f.1-1(a., a.), x) -> f.1-0(a., f.0-0(b., f.1-0(a., x)))
   f.0-1(f.1-1(a., a.), x) -> f.1-0(a., f.0-0(b., f.1-1(a., x)))
   f.0-0(x, f.0-0(y, z)) -> f.0-0(f.0-0(x, y), z)
   f.0-0(x, f.0-1(y, z)) -> f.0-1(f.0-0(x, y), z)
   f.0-0(x, f.1-0(y, z)) -> f.0-0(f.0-1(x, y), z)
   f.0-0(x, f.1-1(y, z)) -> f.0-1(f.0-1(x, y), z)
   f.1-0(x, f.0-0(y, z)) -> f.0-0(f.1-0(x, y), z)
   f.1-0(x, f.0-1(y, z)) -> f.0-1(f.1-0(x, y), z)
   f.1-0(x, f.1-0(y, z)) -> f.0-0(f.1-1(x, y), z)
   f.1-0(x, f.1-1(y, z)) -> f.0-1(f.1-1(x, y), z)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(20) UsableRulesReductionPairsProof (EQUIVALENT)
By using the usable rules with reduction pair processor [LPAR04] with a polynomial ordering [POLO], all dependency pairs and the corresponding usable rules [FROCOS05] can be oriented non-strictly. All non-usable rules are removed, and those dependency pairs and usable rules that have been oriented strictly or contain non-usable symbols in their left-hand side are removed as well.

The following dependency pairs can be deleted:

   F.0-0(x, f.0-1(y, z)) -> F.0-0(x, y)
The following rules are removed from R:

   f.0-0(f.1-1(a., a.), x) -> f.1-0(a., f.0-0(b., f.1-0(a., x)))
   f.0-1(f.1-1(a., a.), x) -> f.1-0(a., f.0-0(b., f.1-1(a., x)))
   f.0-0(x, f.0-0(y, z)) -> f.0-0(f.0-0(x, y), z)
   f.0-0(x, f.0-1(y, z)) -> f.0-1(f.0-0(x, y), z)
   f.0-0(x, f.1-0(y, z)) -> f.0-0(f.0-1(x, y), z)
   f.0-0(x, f.1-1(y, z)) -> f.0-1(f.0-1(x, y), z)
   f.1-0(x, f.0-0(y, z)) -> f.0-0(f.1-0(x, y), z)
   f.1-0(x, f.0-1(y, z)) -> f.0-1(f.1-0(x, y), z)
   f.1-0(x, f.1-0(y, z)) -> f.0-0(f.1-1(x, y), z)
   f.1-0(x, f.1-1(y, z)) -> f.0-1(f.1-1(x, y), z)
Used ordering: POLO with Polynomial interpretation [POLO]:

   POL(F.0-0(x_1, x_2)) = x_1 + x_2
   POL(f.0-1(x_1, x_2)) = x_1 + x_2


----------------------------------------

(21)
Obligation:
Q DP problem:
P is empty.
R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(22) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(23)
YES

----------------------------------------

(24)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F.1-0(x, f.0-0(y, z)) -> F.1-0(x, y)
   F.1-0(x, f.0-1(y, z)) -> F.1-0(x, y)

The TRS R consists of the following rules:

   f.0-0(f.1-1(a., a.), x) -> f.1-0(a., f.0-0(b., f.1-0(a., x)))
   f.0-1(f.1-1(a., a.), x) -> f.1-0(a., f.0-0(b., f.1-1(a., x)))
   f.0-0(x, f.0-0(y, z)) -> f.0-0(f.0-0(x, y), z)
   f.0-0(x, f.0-1(y, z)) -> f.0-1(f.0-0(x, y), z)
   f.0-0(x, f.1-0(y, z)) -> f.0-0(f.0-1(x, y), z)
   f.0-0(x, f.1-1(y, z)) -> f.0-1(f.0-1(x, y), z)
   f.1-0(x, f.0-0(y, z)) -> f.0-0(f.1-0(x, y), z)
   f.1-0(x, f.0-1(y, z)) -> f.0-1(f.1-0(x, y), z)
   f.1-0(x, f.1-0(y, z)) -> f.0-0(f.1-1(x, y), z)
   f.1-0(x, f.1-1(y, z)) -> f.0-1(f.1-1(x, y), z)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(25) UsableRulesReductionPairsProof (EQUIVALENT)
By using the usable rules with reduction pair processor [LPAR04] with a polynomial ordering [POLO], all dependency pairs and the corresponding usable rules [FROCOS05] can be oriented non-strictly. All non-usable rules are removed, and those dependency pairs and usable rules that have been oriented strictly or contain non-usable symbols in their left-hand side are removed as well.

The following dependency pairs can be deleted:

   F.1-0(x, f.0-0(y, z)) -> F.1-0(x, y)
   F.1-0(x, f.0-1(y, z)) -> F.1-0(x, y)
The following rules are removed from R:

   f.0-0(f.1-1(a., a.), x) -> f.1-0(a., f.0-0(b., f.1-0(a., x)))
   f.0-1(f.1-1(a., a.), x) -> f.1-0(a., f.0-0(b., f.1-1(a., x)))
   f.0-0(x, f.0-0(y, z)) -> f.0-0(f.0-0(x, y), z)
   f.0-0(x, f.0-1(y, z)) -> f.0-1(f.0-0(x, y), z)
   f.0-0(x, f.1-0(y, z)) -> f.0-0(f.0-1(x, y), z)
   f.0-0(x, f.1-1(y, z)) -> f.0-1(f.0-1(x, y), z)
   f.1-0(x, f.0-0(y, z)) -> f.0-0(f.1-0(x, y), z)
   f.1-0(x, f.0-1(y, z)) -> f.0-1(f.1-0(x, y), z)
   f.1-0(x, f.1-0(y, z)) -> f.0-0(f.1-1(x, y), z)
   f.1-0(x, f.1-1(y, z)) -> f.0-1(f.1-1(x, y), z)
Used ordering: POLO with Polynomial interpretation [POLO]:

   POL(F.1-0(x_1, x_2)) = x_1 + x_2
   POL(f.0-0(x_1, x_2)) = x_1 + x_2
   POL(f.0-1(x_1, x_2)) = x_1 + x_2


----------------------------------------

(26)
Obligation:
Q DP problem:
P is empty.
R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(27) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(28)
YES
