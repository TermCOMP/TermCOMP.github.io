YES

Problem 1: 

(VAR vu95NonEmpty x y z)
(RULES
divu95active(num0,s(y)) -> num0
divu95active(s(x),s(y)) -> ifu95active(geu95active(x,y),s(div(minus(x,y),s(y))),num0)
divu95active(x,y) -> div(x,y)
geu95active(num0,s(y)) -> ffalse
geu95active(s(x),s(y)) -> geu95active(x,y)
geu95active(x,num0) -> ftrue
geu95active(x,y) -> ge(x,y)
ifu95active(ffalse,x,y) -> mark(y)
ifu95active(ftrue,x,y) -> mark(x)
ifu95active(x,y,z) -> if(x,y,z)
mark(num0) -> num0
mark(div(x,y)) -> divu95active(mark(x),y)
mark(ge(x,y)) -> geu95active(x,y)
mark(if(x,y,z)) -> ifu95active(mark(x),y,z)
mark(minus(x,y)) -> minusu95active(x,y)
mark(s(x)) -> s(mark(x))
minusu95active(num0,y) -> num0
minusu95active(s(x),s(y)) -> minusu95active(x,y)
minusu95active(x,y) -> minus(x,y)
)


Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 DIVU95ACTIVE(s(x),s(y)) -> GEU95ACTIVE(x,y)
 DIVU95ACTIVE(s(x),s(y)) -> IFU95ACTIVE(geu95active(x,y),s(div(minus(x,y),s(y))),num0)
 GEU95ACTIVE(s(x),s(y)) -> GEU95ACTIVE(x,y)
 IFU95ACTIVE(ffalse,x,y) -> MARK(y)
 IFU95ACTIVE(ftrue,x,y) -> MARK(x)
 MARK(div(x,y)) -> DIVU95ACTIVE(mark(x),y)
 MARK(div(x,y)) -> MARK(x)
 MARK(ge(x,y)) -> GEU95ACTIVE(x,y)
 MARK(if(x,y,z)) -> IFU95ACTIVE(mark(x),y,z)
 MARK(if(x,y,z)) -> MARK(x)
 MARK(minus(x,y)) -> MINUSU95ACTIVE(x,y)
 MARK(s(x)) -> MARK(x)
 MINUSU95ACTIVE(s(x),s(y)) -> MINUSU95ACTIVE(x,y)
-> Rules:
 divu95active(num0,s(y)) -> num0
 divu95active(s(x),s(y)) -> ifu95active(geu95active(x,y),s(div(minus(x,y),s(y))),num0)
 divu95active(x,y) -> div(x,y)
 geu95active(num0,s(y)) -> ffalse
 geu95active(s(x),s(y)) -> geu95active(x,y)
 geu95active(x,num0) -> ftrue
 geu95active(x,y) -> ge(x,y)
 ifu95active(ffalse,x,y) -> mark(y)
 ifu95active(ftrue,x,y) -> mark(x)
 ifu95active(x,y,z) -> if(x,y,z)
 mark(num0) -> num0
 mark(div(x,y)) -> divu95active(mark(x),y)
 mark(ge(x,y)) -> geu95active(x,y)
 mark(if(x,y,z)) -> ifu95active(mark(x),y,z)
 mark(minus(x,y)) -> minusu95active(x,y)
 mark(s(x)) -> s(mark(x))
 minusu95active(num0,y) -> num0
 minusu95active(s(x),s(y)) -> minusu95active(x,y)
 minusu95active(x,y) -> minus(x,y)

Problem 1: 

SCC Processor:
-> Pairs:
 DIVU95ACTIVE(s(x),s(y)) -> GEU95ACTIVE(x,y)
 DIVU95ACTIVE(s(x),s(y)) -> IFU95ACTIVE(geu95active(x,y),s(div(minus(x,y),s(y))),num0)
 GEU95ACTIVE(s(x),s(y)) -> GEU95ACTIVE(x,y)
 IFU95ACTIVE(ffalse,x,y) -> MARK(y)
 IFU95ACTIVE(ftrue,x,y) -> MARK(x)
 MARK(div(x,y)) -> DIVU95ACTIVE(mark(x),y)
 MARK(div(x,y)) -> MARK(x)
 MARK(ge(x,y)) -> GEU95ACTIVE(x,y)
 MARK(if(x,y,z)) -> IFU95ACTIVE(mark(x),y,z)
 MARK(if(x,y,z)) -> MARK(x)
 MARK(minus(x,y)) -> MINUSU95ACTIVE(x,y)
 MARK(s(x)) -> MARK(x)
 MINUSU95ACTIVE(s(x),s(y)) -> MINUSU95ACTIVE(x,y)
-> Rules:
 divu95active(num0,s(y)) -> num0
 divu95active(s(x),s(y)) -> ifu95active(geu95active(x,y),s(div(minus(x,y),s(y))),num0)
 divu95active(x,y) -> div(x,y)
 geu95active(num0,s(y)) -> ffalse
 geu95active(s(x),s(y)) -> geu95active(x,y)
 geu95active(x,num0) -> ftrue
 geu95active(x,y) -> ge(x,y)
 ifu95active(ffalse,x,y) -> mark(y)
 ifu95active(ftrue,x,y) -> mark(x)
 ifu95active(x,y,z) -> if(x,y,z)
 mark(num0) -> num0
 mark(div(x,y)) -> divu95active(mark(x),y)
 mark(ge(x,y)) -> geu95active(x,y)
 mark(if(x,y,z)) -> ifu95active(mark(x),y,z)
 mark(minus(x,y)) -> minusu95active(x,y)
 mark(s(x)) -> s(mark(x))
 minusu95active(num0,y) -> num0
 minusu95active(s(x),s(y)) -> minusu95active(x,y)
 minusu95active(x,y) -> minus(x,y)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 MINUSU95ACTIVE(s(x),s(y)) -> MINUSU95ACTIVE(x,y)
->->-> Rules:
 divu95active(num0,s(y)) -> num0
 divu95active(s(x),s(y)) -> ifu95active(geu95active(x,y),s(div(minus(x,y),s(y))),num0)
 divu95active(x,y) -> div(x,y)
 geu95active(num0,s(y)) -> ffalse
 geu95active(s(x),s(y)) -> geu95active(x,y)
 geu95active(x,num0) -> ftrue
 geu95active(x,y) -> ge(x,y)
 ifu95active(ffalse,x,y) -> mark(y)
 ifu95active(ftrue,x,y) -> mark(x)
 ifu95active(x,y,z) -> if(x,y,z)
 mark(num0) -> num0
 mark(div(x,y)) -> divu95active(mark(x),y)
 mark(ge(x,y)) -> geu95active(x,y)
 mark(if(x,y,z)) -> ifu95active(mark(x),y,z)
 mark(minus(x,y)) -> minusu95active(x,y)
 mark(s(x)) -> s(mark(x))
 minusu95active(num0,y) -> num0
 minusu95active(s(x),s(y)) -> minusu95active(x,y)
 minusu95active(x,y) -> minus(x,y)
->->Cycle:
->->-> Pairs:
 GEU95ACTIVE(s(x),s(y)) -> GEU95ACTIVE(x,y)
->->-> Rules:
 divu95active(num0,s(y)) -> num0
 divu95active(s(x),s(y)) -> ifu95active(geu95active(x,y),s(div(minus(x,y),s(y))),num0)
 divu95active(x,y) -> div(x,y)
 geu95active(num0,s(y)) -> ffalse
 geu95active(s(x),s(y)) -> geu95active(x,y)
 geu95active(x,num0) -> ftrue
 geu95active(x,y) -> ge(x,y)
 ifu95active(ffalse,x,y) -> mark(y)
 ifu95active(ftrue,x,y) -> mark(x)
 ifu95active(x,y,z) -> if(x,y,z)
 mark(num0) -> num0
 mark(div(x,y)) -> divu95active(mark(x),y)
 mark(ge(x,y)) -> geu95active(x,y)
 mark(if(x,y,z)) -> ifu95active(mark(x),y,z)
 mark(minus(x,y)) -> minusu95active(x,y)
 mark(s(x)) -> s(mark(x))
 minusu95active(num0,y) -> num0
 minusu95active(s(x),s(y)) -> minusu95active(x,y)
 minusu95active(x,y) -> minus(x,y)
->->Cycle:
->->-> Pairs:
 DIVU95ACTIVE(s(x),s(y)) -> IFU95ACTIVE(geu95active(x,y),s(div(minus(x,y),s(y))),num0)
 IFU95ACTIVE(ffalse,x,y) -> MARK(y)
 IFU95ACTIVE(ftrue,x,y) -> MARK(x)
 MARK(div(x,y)) -> DIVU95ACTIVE(mark(x),y)
 MARK(div(x,y)) -> MARK(x)
 MARK(if(x,y,z)) -> IFU95ACTIVE(mark(x),y,z)
 MARK(if(x,y,z)) -> MARK(x)
 MARK(s(x)) -> MARK(x)
->->-> Rules:
 divu95active(num0,s(y)) -> num0
 divu95active(s(x),s(y)) -> ifu95active(geu95active(x,y),s(div(minus(x,y),s(y))),num0)
 divu95active(x,y) -> div(x,y)
 geu95active(num0,s(y)) -> ffalse
 geu95active(s(x),s(y)) -> geu95active(x,y)
 geu95active(x,num0) -> ftrue
 geu95active(x,y) -> ge(x,y)
 ifu95active(ffalse,x,y) -> mark(y)
 ifu95active(ftrue,x,y) -> mark(x)
 ifu95active(x,y,z) -> if(x,y,z)
 mark(num0) -> num0
 mark(div(x,y)) -> divu95active(mark(x),y)
 mark(ge(x,y)) -> geu95active(x,y)
 mark(if(x,y,z)) -> ifu95active(mark(x),y,z)
 mark(minus(x,y)) -> minusu95active(x,y)
 mark(s(x)) -> s(mark(x))
 minusu95active(num0,y) -> num0
 minusu95active(s(x),s(y)) -> minusu95active(x,y)
 minusu95active(x,y) -> minus(x,y)


The problem is decomposed in 3 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 MINUSU95ACTIVE(s(x),s(y)) -> MINUSU95ACTIVE(x,y)
-> Rules:
 divu95active(num0,s(y)) -> num0
 divu95active(s(x),s(y)) -> ifu95active(geu95active(x,y),s(div(minus(x,y),s(y))),num0)
 divu95active(x,y) -> div(x,y)
 geu95active(num0,s(y)) -> ffalse
 geu95active(s(x),s(y)) -> geu95active(x,y)
 geu95active(x,num0) -> ftrue
 geu95active(x,y) -> ge(x,y)
 ifu95active(ffalse,x,y) -> mark(y)
 ifu95active(ftrue,x,y) -> mark(x)
 ifu95active(x,y,z) -> if(x,y,z)
 mark(num0) -> num0
 mark(div(x,y)) -> divu95active(mark(x),y)
 mark(ge(x,y)) -> geu95active(x,y)
 mark(if(x,y,z)) -> ifu95active(mark(x),y,z)
 mark(minus(x,y)) -> minusu95active(x,y)
 mark(s(x)) -> s(mark(x))
 minusu95active(num0,y) -> num0
 minusu95active(s(x),s(y)) -> minusu95active(x,y)
 minusu95active(x,y) -> minus(x,y)
->Projection:
 pi(MINUSU95ACTIVE) = 1

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 divu95active(num0,s(y)) -> num0
 divu95active(s(x),s(y)) -> ifu95active(geu95active(x,y),s(div(minus(x,y),s(y))),num0)
 divu95active(x,y) -> div(x,y)
 geu95active(num0,s(y)) -> ffalse
 geu95active(s(x),s(y)) -> geu95active(x,y)
 geu95active(x,num0) -> ftrue
 geu95active(x,y) -> ge(x,y)
 ifu95active(ffalse,x,y) -> mark(y)
 ifu95active(ftrue,x,y) -> mark(x)
 ifu95active(x,y,z) -> if(x,y,z)
 mark(num0) -> num0
 mark(div(x,y)) -> divu95active(mark(x),y)
 mark(ge(x,y)) -> geu95active(x,y)
 mark(if(x,y,z)) -> ifu95active(mark(x),y,z)
 mark(minus(x,y)) -> minusu95active(x,y)
 mark(s(x)) -> s(mark(x))
 minusu95active(num0,y) -> num0
 minusu95active(s(x),s(y)) -> minusu95active(x,y)
 minusu95active(x,y) -> minus(x,y)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Subterm Processor:
-> Pairs:
 GEU95ACTIVE(s(x),s(y)) -> GEU95ACTIVE(x,y)
-> Rules:
 divu95active(num0,s(y)) -> num0
 divu95active(s(x),s(y)) -> ifu95active(geu95active(x,y),s(div(minus(x,y),s(y))),num0)
 divu95active(x,y) -> div(x,y)
 geu95active(num0,s(y)) -> ffalse
 geu95active(s(x),s(y)) -> geu95active(x,y)
 geu95active(x,num0) -> ftrue
 geu95active(x,y) -> ge(x,y)
 ifu95active(ffalse,x,y) -> mark(y)
 ifu95active(ftrue,x,y) -> mark(x)
 ifu95active(x,y,z) -> if(x,y,z)
 mark(num0) -> num0
 mark(div(x,y)) -> divu95active(mark(x),y)
 mark(ge(x,y)) -> geu95active(x,y)
 mark(if(x,y,z)) -> ifu95active(mark(x),y,z)
 mark(minus(x,y)) -> minusu95active(x,y)
 mark(s(x)) -> s(mark(x))
 minusu95active(num0,y) -> num0
 minusu95active(s(x),s(y)) -> minusu95active(x,y)
 minusu95active(x,y) -> minus(x,y)
->Projection:
 pi(GEU95ACTIVE) = 1

Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 divu95active(num0,s(y)) -> num0
 divu95active(s(x),s(y)) -> ifu95active(geu95active(x,y),s(div(minus(x,y),s(y))),num0)
 divu95active(x,y) -> div(x,y)
 geu95active(num0,s(y)) -> ffalse
 geu95active(s(x),s(y)) -> geu95active(x,y)
 geu95active(x,num0) -> ftrue
 geu95active(x,y) -> ge(x,y)
 ifu95active(ffalse,x,y) -> mark(y)
 ifu95active(ftrue,x,y) -> mark(x)
 ifu95active(x,y,z) -> if(x,y,z)
 mark(num0) -> num0
 mark(div(x,y)) -> divu95active(mark(x),y)
 mark(ge(x,y)) -> geu95active(x,y)
 mark(if(x,y,z)) -> ifu95active(mark(x),y,z)
 mark(minus(x,y)) -> minusu95active(x,y)
 mark(s(x)) -> s(mark(x))
 minusu95active(num0,y) -> num0
 minusu95active(s(x),s(y)) -> minusu95active(x,y)
 minusu95active(x,y) -> minus(x,y)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Reduction Pair Processor:
-> Pairs:
 DIVU95ACTIVE(s(x),s(y)) -> IFU95ACTIVE(geu95active(x,y),s(div(minus(x,y),s(y))),num0)
 IFU95ACTIVE(ffalse,x,y) -> MARK(y)
 IFU95ACTIVE(ftrue,x,y) -> MARK(x)
 MARK(div(x,y)) -> DIVU95ACTIVE(mark(x),y)
 MARK(div(x,y)) -> MARK(x)
 MARK(if(x,y,z)) -> IFU95ACTIVE(mark(x),y,z)
 MARK(if(x,y,z)) -> MARK(x)
 MARK(s(x)) -> MARK(x)
-> Rules:
 divu95active(num0,s(y)) -> num0
 divu95active(s(x),s(y)) -> ifu95active(geu95active(x,y),s(div(minus(x,y),s(y))),num0)
 divu95active(x,y) -> div(x,y)
 geu95active(num0,s(y)) -> ffalse
 geu95active(s(x),s(y)) -> geu95active(x,y)
 geu95active(x,num0) -> ftrue
 geu95active(x,y) -> ge(x,y)
 ifu95active(ffalse,x,y) -> mark(y)
 ifu95active(ftrue,x,y) -> mark(x)
 ifu95active(x,y,z) -> if(x,y,z)
 mark(num0) -> num0
 mark(div(x,y)) -> divu95active(mark(x),y)
 mark(ge(x,y)) -> geu95active(x,y)
 mark(if(x,y,z)) -> ifu95active(mark(x),y,z)
 mark(minus(x,y)) -> minusu95active(x,y)
 mark(s(x)) -> s(mark(x))
 minusu95active(num0,y) -> num0
 minusu95active(s(x),s(y)) -> minusu95active(x,y)
 minusu95active(x,y) -> minus(x,y)
-> Usable rules:
 divu95active(num0,s(y)) -> num0
 divu95active(s(x),s(y)) -> ifu95active(geu95active(x,y),s(div(minus(x,y),s(y))),num0)
 divu95active(x,y) -> div(x,y)
 geu95active(num0,s(y)) -> ffalse
 geu95active(s(x),s(y)) -> geu95active(x,y)
 geu95active(x,num0) -> ftrue
 geu95active(x,y) -> ge(x,y)
 ifu95active(ffalse,x,y) -> mark(y)
 ifu95active(ftrue,x,y) -> mark(x)
 ifu95active(x,y,z) -> if(x,y,z)
 mark(num0) -> num0
 mark(div(x,y)) -> divu95active(mark(x),y)
 mark(ge(x,y)) -> geu95active(x,y)
 mark(if(x,y,z)) -> ifu95active(mark(x),y,z)
 mark(minus(x,y)) -> minusu95active(x,y)
 mark(s(x)) -> s(mark(x))
 minusu95active(num0,y) -> num0
 minusu95active(s(x),s(y)) -> minusu95active(x,y)
 minusu95active(x,y) -> minus(x,y)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[divu95active](X1,X2) = 2.X1 + 2.X2 + 2
[geu95active](X1,X2) = 2.X1
[ifu95active](X1,X2,X3) = X1 + X2 + 2.X3 + 1
[mark](X) = X
[minusu95active](X1,X2) = 0
[num0] = 0
[div](X1,X2) = 2.X1 + 2.X2 + 2
[fSNonEmpty] = 0
[ffalse] = 0
[ge](X1,X2) = 2.X1
[if](X1,X2,X3) = X1 + X2 + 2.X3 + 1
[minus](X1,X2) = 0
[s](X) = X + 1
[ftrue] = 0
[DIVU95ACTIVE](X1,X2) = 2.X1 + 2.X2 + 2
[GEU95ACTIVE](X1,X2) = 0
[IFU95ACTIVE](X1,X2,X3) = X1 + X2 + 2.X3
[MARK](X) = X
[MINUSU95ACTIVE](X1,X2) = 0

Problem 1.3: 

SCC Processor:
-> Pairs:
 IFU95ACTIVE(ffalse,x,y) -> MARK(y)
 IFU95ACTIVE(ftrue,x,y) -> MARK(x)
 MARK(div(x,y)) -> DIVU95ACTIVE(mark(x),y)
 MARK(div(x,y)) -> MARK(x)
 MARK(if(x,y,z)) -> IFU95ACTIVE(mark(x),y,z)
 MARK(if(x,y,z)) -> MARK(x)
 MARK(s(x)) -> MARK(x)
-> Rules:
 divu95active(num0,s(y)) -> num0
 divu95active(s(x),s(y)) -> ifu95active(geu95active(x,y),s(div(minus(x,y),s(y))),num0)
 divu95active(x,y) -> div(x,y)
 geu95active(num0,s(y)) -> ffalse
 geu95active(s(x),s(y)) -> geu95active(x,y)
 geu95active(x,num0) -> ftrue
 geu95active(x,y) -> ge(x,y)
 ifu95active(ffalse,x,y) -> mark(y)
 ifu95active(ftrue,x,y) -> mark(x)
 ifu95active(x,y,z) -> if(x,y,z)
 mark(num0) -> num0
 mark(div(x,y)) -> divu95active(mark(x),y)
 mark(ge(x,y)) -> geu95active(x,y)
 mark(if(x,y,z)) -> ifu95active(mark(x),y,z)
 mark(minus(x,y)) -> minusu95active(x,y)
 mark(s(x)) -> s(mark(x))
 minusu95active(num0,y) -> num0
 minusu95active(s(x),s(y)) -> minusu95active(x,y)
 minusu95active(x,y) -> minus(x,y)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 IFU95ACTIVE(ffalse,x,y) -> MARK(y)
 IFU95ACTIVE(ftrue,x,y) -> MARK(x)
 MARK(div(x,y)) -> MARK(x)
 MARK(if(x,y,z)) -> IFU95ACTIVE(mark(x),y,z)
 MARK(if(x,y,z)) -> MARK(x)
 MARK(s(x)) -> MARK(x)
->->-> Rules:
 divu95active(num0,s(y)) -> num0
 divu95active(s(x),s(y)) -> ifu95active(geu95active(x,y),s(div(minus(x,y),s(y))),num0)
 divu95active(x,y) -> div(x,y)
 geu95active(num0,s(y)) -> ffalse
 geu95active(s(x),s(y)) -> geu95active(x,y)
 geu95active(x,num0) -> ftrue
 geu95active(x,y) -> ge(x,y)
 ifu95active(ffalse,x,y) -> mark(y)
 ifu95active(ftrue,x,y) -> mark(x)
 ifu95active(x,y,z) -> if(x,y,z)
 mark(num0) -> num0
 mark(div(x,y)) -> divu95active(mark(x),y)
 mark(ge(x,y)) -> geu95active(x,y)
 mark(if(x,y,z)) -> ifu95active(mark(x),y,z)
 mark(minus(x,y)) -> minusu95active(x,y)
 mark(s(x)) -> s(mark(x))
 minusu95active(num0,y) -> num0
 minusu95active(s(x),s(y)) -> minusu95active(x,y)
 minusu95active(x,y) -> minus(x,y)

Problem 1.3: 

Reduction Pair Processor:
-> Pairs:
 IFU95ACTIVE(ffalse,x,y) -> MARK(y)
 IFU95ACTIVE(ftrue,x,y) -> MARK(x)
 MARK(div(x,y)) -> MARK(x)
 MARK(if(x,y,z)) -> IFU95ACTIVE(mark(x),y,z)
 MARK(if(x,y,z)) -> MARK(x)
 MARK(s(x)) -> MARK(x)
-> Rules:
 divu95active(num0,s(y)) -> num0
 divu95active(s(x),s(y)) -> ifu95active(geu95active(x,y),s(div(minus(x,y),s(y))),num0)
 divu95active(x,y) -> div(x,y)
 geu95active(num0,s(y)) -> ffalse
 geu95active(s(x),s(y)) -> geu95active(x,y)
 geu95active(x,num0) -> ftrue
 geu95active(x,y) -> ge(x,y)
 ifu95active(ffalse,x,y) -> mark(y)
 ifu95active(ftrue,x,y) -> mark(x)
 ifu95active(x,y,z) -> if(x,y,z)
 mark(num0) -> num0
 mark(div(x,y)) -> divu95active(mark(x),y)
 mark(ge(x,y)) -> geu95active(x,y)
 mark(if(x,y,z)) -> ifu95active(mark(x),y,z)
 mark(minus(x,y)) -> minusu95active(x,y)
 mark(s(x)) -> s(mark(x))
 minusu95active(num0,y) -> num0
 minusu95active(s(x),s(y)) -> minusu95active(x,y)
 minusu95active(x,y) -> minus(x,y)
-> Usable rules:
 divu95active(num0,s(y)) -> num0
 divu95active(s(x),s(y)) -> ifu95active(geu95active(x,y),s(div(minus(x,y),s(y))),num0)
 divu95active(x,y) -> div(x,y)
 geu95active(num0,s(y)) -> ffalse
 geu95active(s(x),s(y)) -> geu95active(x,y)
 geu95active(x,num0) -> ftrue
 geu95active(x,y) -> ge(x,y)
 ifu95active(ffalse,x,y) -> mark(y)
 ifu95active(ftrue,x,y) -> mark(x)
 ifu95active(x,y,z) -> if(x,y,z)
 mark(num0) -> num0
 mark(div(x,y)) -> divu95active(mark(x),y)
 mark(ge(x,y)) -> geu95active(x,y)
 mark(if(x,y,z)) -> ifu95active(mark(x),y,z)
 mark(minus(x,y)) -> minusu95active(x,y)
 mark(s(x)) -> s(mark(x))
 minusu95active(num0,y) -> num0
 minusu95active(s(x),s(y)) -> minusu95active(x,y)
 minusu95active(x,y) -> minus(x,y)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[divu95active](X1,X2) = 2.X1 + 2.X2 + 2
[geu95active](X1,X2) = 1
[ifu95active](X1,X2,X3) = X1 + X2 + X3
[mark](X) = X
[minusu95active](X1,X2) = X1
[num0] = 1
[div](X1,X2) = 2.X1 + 2.X2 + 2
[fSNonEmpty] = 0
[ffalse] = 1
[ge](X1,X2) = 1
[if](X1,X2,X3) = X1 + X2 + X3
[minus](X1,X2) = X1
[s](X) = X + 2
[ftrue] = 1
[DIVU95ACTIVE](X1,X2) = 0
[GEU95ACTIVE](X1,X2) = 0
[IFU95ACTIVE](X1,X2,X3) = X1 + X2 + X3
[MARK](X) = X
[MINUSU95ACTIVE](X1,X2) = 0

Problem 1.3: 

SCC Processor:
-> Pairs:
 IFU95ACTIVE(ftrue,x,y) -> MARK(x)
 MARK(div(x,y)) -> MARK(x)
 MARK(if(x,y,z)) -> IFU95ACTIVE(mark(x),y,z)
 MARK(if(x,y,z)) -> MARK(x)
 MARK(s(x)) -> MARK(x)
-> Rules:
 divu95active(num0,s(y)) -> num0
 divu95active(s(x),s(y)) -> ifu95active(geu95active(x,y),s(div(minus(x,y),s(y))),num0)
 divu95active(x,y) -> div(x,y)
 geu95active(num0,s(y)) -> ffalse
 geu95active(s(x),s(y)) -> geu95active(x,y)
 geu95active(x,num0) -> ftrue
 geu95active(x,y) -> ge(x,y)
 ifu95active(ffalse,x,y) -> mark(y)
 ifu95active(ftrue,x,y) -> mark(x)
 ifu95active(x,y,z) -> if(x,y,z)
 mark(num0) -> num0
 mark(div(x,y)) -> divu95active(mark(x),y)
 mark(ge(x,y)) -> geu95active(x,y)
 mark(if(x,y,z)) -> ifu95active(mark(x),y,z)
 mark(minus(x,y)) -> minusu95active(x,y)
 mark(s(x)) -> s(mark(x))
 minusu95active(num0,y) -> num0
 minusu95active(s(x),s(y)) -> minusu95active(x,y)
 minusu95active(x,y) -> minus(x,y)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 IFU95ACTIVE(ftrue,x,y) -> MARK(x)
 MARK(div(x,y)) -> MARK(x)
 MARK(if(x,y,z)) -> IFU95ACTIVE(mark(x),y,z)
 MARK(if(x,y,z)) -> MARK(x)
 MARK(s(x)) -> MARK(x)
->->-> Rules:
 divu95active(num0,s(y)) -> num0
 divu95active(s(x),s(y)) -> ifu95active(geu95active(x,y),s(div(minus(x,y),s(y))),num0)
 divu95active(x,y) -> div(x,y)
 geu95active(num0,s(y)) -> ffalse
 geu95active(s(x),s(y)) -> geu95active(x,y)
 geu95active(x,num0) -> ftrue
 geu95active(x,y) -> ge(x,y)
 ifu95active(ffalse,x,y) -> mark(y)
 ifu95active(ftrue,x,y) -> mark(x)
 ifu95active(x,y,z) -> if(x,y,z)
 mark(num0) -> num0
 mark(div(x,y)) -> divu95active(mark(x),y)
 mark(ge(x,y)) -> geu95active(x,y)
 mark(if(x,y,z)) -> ifu95active(mark(x),y,z)
 mark(minus(x,y)) -> minusu95active(x,y)
 mark(s(x)) -> s(mark(x))
 minusu95active(num0,y) -> num0
 minusu95active(s(x),s(y)) -> minusu95active(x,y)
 minusu95active(x,y) -> minus(x,y)

Problem 1.3: 

Subterm Processor:
-> Pairs:
 IFU95ACTIVE(ftrue,x,y) -> MARK(x)
 MARK(div(x,y)) -> MARK(x)
 MARK(if(x,y,z)) -> IFU95ACTIVE(mark(x),y,z)
 MARK(if(x,y,z)) -> MARK(x)
 MARK(s(x)) -> MARK(x)
-> Rules:
 divu95active(num0,s(y)) -> num0
 divu95active(s(x),s(y)) -> ifu95active(geu95active(x,y),s(div(minus(x,y),s(y))),num0)
 divu95active(x,y) -> div(x,y)
 geu95active(num0,s(y)) -> ffalse
 geu95active(s(x),s(y)) -> geu95active(x,y)
 geu95active(x,num0) -> ftrue
 geu95active(x,y) -> ge(x,y)
 ifu95active(ffalse,x,y) -> mark(y)
 ifu95active(ftrue,x,y) -> mark(x)
 ifu95active(x,y,z) -> if(x,y,z)
 mark(num0) -> num0
 mark(div(x,y)) -> divu95active(mark(x),y)
 mark(ge(x,y)) -> geu95active(x,y)
 mark(if(x,y,z)) -> ifu95active(mark(x),y,z)
 mark(minus(x,y)) -> minusu95active(x,y)
 mark(s(x)) -> s(mark(x))
 minusu95active(num0,y) -> num0
 minusu95active(s(x),s(y)) -> minusu95active(x,y)
 minusu95active(x,y) -> minus(x,y)
->Projection:
 pi(IFU95ACTIVE) = 2
 pi(MARK) = 1

Problem 1.3: 

SCC Processor:
-> Pairs:
 IFU95ACTIVE(ftrue,x,y) -> MARK(x)
-> Rules:
 divu95active(num0,s(y)) -> num0
 divu95active(s(x),s(y)) -> ifu95active(geu95active(x,y),s(div(minus(x,y),s(y))),num0)
 divu95active(x,y) -> div(x,y)
 geu95active(num0,s(y)) -> ffalse
 geu95active(s(x),s(y)) -> geu95active(x,y)
 geu95active(x,num0) -> ftrue
 geu95active(x,y) -> ge(x,y)
 ifu95active(ffalse,x,y) -> mark(y)
 ifu95active(ftrue,x,y) -> mark(x)
 ifu95active(x,y,z) -> if(x,y,z)
 mark(num0) -> num0
 mark(div(x,y)) -> divu95active(mark(x),y)
 mark(ge(x,y)) -> geu95active(x,y)
 mark(if(x,y,z)) -> ifu95active(mark(x),y,z)
 mark(minus(x,y)) -> minusu95active(x,y)
 mark(s(x)) -> s(mark(x))
 minusu95active(num0,y) -> num0
 minusu95active(s(x),s(y)) -> minusu95active(x,y)
 minusu95active(x,y) -> minus(x,y)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
