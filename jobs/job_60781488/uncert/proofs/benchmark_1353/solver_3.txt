YES

Problem 1: 

(VAR vu95NonEmpty I P X X1 X2 Y Z)
(RULES
U11(mark(X)) -> mark(U11(X))
U11(ok(X)) -> ok(U11(X))
U12(mark(X)) -> mark(U12(X))
U12(ok(X)) -> ok(U12(X))
u95u95(mark(X1),X2) -> mark(u95u95(X1,X2))
u95u95(ok(X1),ok(X2)) -> ok(u95u95(X1,X2))
u95u95(X1,mark(X2)) -> mark(u95u95(X1,X2))
active(U11(tt)) -> mark(U12(tt))
active(U11(X)) -> U11(active(X))
active(U12(tt)) -> mark(tt)
active(U12(X)) -> U12(active(X))
active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
active(u95u95(nil,X)) -> mark(X)
active(u95u95(X,nil)) -> mark(X)
active(u95u95(X1,X2)) -> u95u95(active(X1),X2)
active(u95u95(X1,X2)) -> u95u95(X1,active(X2))
active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
active(isNePal(X)) -> isNePal(active(X))
isNePal(mark(X)) -> mark(isNePal(X))
isNePal(ok(X)) -> ok(isNePal(X))
proper(U11(X)) -> U11(proper(X))
proper(U12(X)) -> U12(proper(X))
proper(u95u95(X1,X2)) -> u95u95(proper(X1),proper(X2))
proper(isNePal(X)) -> isNePal(proper(X))
proper(nil) -> ok(nil)
proper(tt) -> ok(tt)
top(mark(X)) -> top(proper(X))
top(ok(X)) -> top(active(X))
)


Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 U11Sharp(mark(X)) -> U11Sharp(X)
 U11Sharp(ok(X)) -> U11Sharp(X)
 U12Sharp(mark(X)) -> U12Sharp(X)
 U12Sharp(ok(X)) -> U12Sharp(X)
 U95U95(mark(X1),X2) -> U95U95(X1,X2)
 U95U95(ok(X1),ok(X2)) -> U95U95(X1,X2)
 U95U95(X1,mark(X2)) -> U95U95(X1,X2)
 ACTIVE(U11(X)) -> U11Sharp(active(X))
 ACTIVE(U11(X)) -> ACTIVE(X)
 ACTIVE(U12(X)) -> U12Sharp(active(X))
 ACTIVE(U12(X)) -> ACTIVE(X)
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> U95U95(X,u95u95(Y,Z))
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> U95U95(Y,Z)
 ACTIVE(u95u95(X1,X2)) -> U95U95(active(X1),X2)
 ACTIVE(u95u95(X1,X2)) -> U95U95(X1,active(X2))
 ACTIVE(u95u95(X1,X2)) -> ACTIVE(X1)
 ACTIVE(u95u95(X1,X2)) -> ACTIVE(X2)
 ACTIVE(isNePal(X)) -> ACTIVE(X)
 ACTIVE(isNePal(X)) -> ISNEPAL(active(X))
 ISNEPAL(mark(X)) -> ISNEPAL(X)
 ISNEPAL(ok(X)) -> ISNEPAL(X)
 PROPER(U11(X)) -> U11Sharp(proper(X))
 PROPER(U11(X)) -> PROPER(X)
 PROPER(U12(X)) -> U12Sharp(proper(X))
 PROPER(U12(X)) -> PROPER(X)
 PROPER(u95u95(X1,X2)) -> U95U95(proper(X1),proper(X2))
 PROPER(u95u95(X1,X2)) -> PROPER(X1)
 PROPER(u95u95(X1,X2)) -> PROPER(X2)
 PROPER(isNePal(X)) -> ISNEPAL(proper(X))
 PROPER(isNePal(X)) -> PROPER(X)
 TOP(mark(X)) -> PROPER(X)
 TOP(mark(X)) -> TOP(proper(X))
 TOP(ok(X)) -> ACTIVE(X)
 TOP(ok(X)) -> TOP(active(X))
-> Rules:
 U11(mark(X)) -> mark(U11(X))
 U11(ok(X)) -> ok(U11(X))
 U12(mark(X)) -> mark(U12(X))
 U12(ok(X)) -> ok(U12(X))
 u95u95(mark(X1),X2) -> mark(u95u95(X1,X2))
 u95u95(ok(X1),ok(X2)) -> ok(u95u95(X1,X2))
 u95u95(X1,mark(X2)) -> mark(u95u95(X1,X2))
 active(U11(tt)) -> mark(U12(tt))
 active(U11(X)) -> U11(active(X))
 active(U12(tt)) -> mark(tt)
 active(U12(X)) -> U12(active(X))
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(u95u95(X1,X2)) -> u95u95(active(X1),X2)
 active(u95u95(X1,X2)) -> u95u95(X1,active(X2))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 active(isNePal(X)) -> isNePal(active(X))
 isNePal(mark(X)) -> mark(isNePal(X))
 isNePal(ok(X)) -> ok(isNePal(X))
 proper(U11(X)) -> U11(proper(X))
 proper(U12(X)) -> U12(proper(X))
 proper(u95u95(X1,X2)) -> u95u95(proper(X1),proper(X2))
 proper(isNePal(X)) -> isNePal(proper(X))
 proper(nil) -> ok(nil)
 proper(tt) -> ok(tt)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))

Problem 1: 

SCC Processor:
-> Pairs:
 U11Sharp(mark(X)) -> U11Sharp(X)
 U11Sharp(ok(X)) -> U11Sharp(X)
 U12Sharp(mark(X)) -> U12Sharp(X)
 U12Sharp(ok(X)) -> U12Sharp(X)
 U95U95(mark(X1),X2) -> U95U95(X1,X2)
 U95U95(ok(X1),ok(X2)) -> U95U95(X1,X2)
 U95U95(X1,mark(X2)) -> U95U95(X1,X2)
 ACTIVE(U11(X)) -> U11Sharp(active(X))
 ACTIVE(U11(X)) -> ACTIVE(X)
 ACTIVE(U12(X)) -> U12Sharp(active(X))
 ACTIVE(U12(X)) -> ACTIVE(X)
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> U95U95(X,u95u95(Y,Z))
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> U95U95(Y,Z)
 ACTIVE(u95u95(X1,X2)) -> U95U95(active(X1),X2)
 ACTIVE(u95u95(X1,X2)) -> U95U95(X1,active(X2))
 ACTIVE(u95u95(X1,X2)) -> ACTIVE(X1)
 ACTIVE(u95u95(X1,X2)) -> ACTIVE(X2)
 ACTIVE(isNePal(X)) -> ACTIVE(X)
 ACTIVE(isNePal(X)) -> ISNEPAL(active(X))
 ISNEPAL(mark(X)) -> ISNEPAL(X)
 ISNEPAL(ok(X)) -> ISNEPAL(X)
 PROPER(U11(X)) -> U11Sharp(proper(X))
 PROPER(U11(X)) -> PROPER(X)
 PROPER(U12(X)) -> U12Sharp(proper(X))
 PROPER(U12(X)) -> PROPER(X)
 PROPER(u95u95(X1,X2)) -> U95U95(proper(X1),proper(X2))
 PROPER(u95u95(X1,X2)) -> PROPER(X1)
 PROPER(u95u95(X1,X2)) -> PROPER(X2)
 PROPER(isNePal(X)) -> ISNEPAL(proper(X))
 PROPER(isNePal(X)) -> PROPER(X)
 TOP(mark(X)) -> PROPER(X)
 TOP(mark(X)) -> TOP(proper(X))
 TOP(ok(X)) -> ACTIVE(X)
 TOP(ok(X)) -> TOP(active(X))
-> Rules:
 U11(mark(X)) -> mark(U11(X))
 U11(ok(X)) -> ok(U11(X))
 U12(mark(X)) -> mark(U12(X))
 U12(ok(X)) -> ok(U12(X))
 u95u95(mark(X1),X2) -> mark(u95u95(X1,X2))
 u95u95(ok(X1),ok(X2)) -> ok(u95u95(X1,X2))
 u95u95(X1,mark(X2)) -> mark(u95u95(X1,X2))
 active(U11(tt)) -> mark(U12(tt))
 active(U11(X)) -> U11(active(X))
 active(U12(tt)) -> mark(tt)
 active(U12(X)) -> U12(active(X))
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(u95u95(X1,X2)) -> u95u95(active(X1),X2)
 active(u95u95(X1,X2)) -> u95u95(X1,active(X2))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 active(isNePal(X)) -> isNePal(active(X))
 isNePal(mark(X)) -> mark(isNePal(X))
 isNePal(ok(X)) -> ok(isNePal(X))
 proper(U11(X)) -> U11(proper(X))
 proper(U12(X)) -> U12(proper(X))
 proper(u95u95(X1,X2)) -> u95u95(proper(X1),proper(X2))
 proper(isNePal(X)) -> isNePal(proper(X))
 proper(nil) -> ok(nil)
 proper(tt) -> ok(tt)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ISNEPAL(mark(X)) -> ISNEPAL(X)
 ISNEPAL(ok(X)) -> ISNEPAL(X)
->->-> Rules:
 U11(mark(X)) -> mark(U11(X))
 U11(ok(X)) -> ok(U11(X))
 U12(mark(X)) -> mark(U12(X))
 U12(ok(X)) -> ok(U12(X))
 u95u95(mark(X1),X2) -> mark(u95u95(X1,X2))
 u95u95(ok(X1),ok(X2)) -> ok(u95u95(X1,X2))
 u95u95(X1,mark(X2)) -> mark(u95u95(X1,X2))
 active(U11(tt)) -> mark(U12(tt))
 active(U11(X)) -> U11(active(X))
 active(U12(tt)) -> mark(tt)
 active(U12(X)) -> U12(active(X))
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(u95u95(X1,X2)) -> u95u95(active(X1),X2)
 active(u95u95(X1,X2)) -> u95u95(X1,active(X2))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 active(isNePal(X)) -> isNePal(active(X))
 isNePal(mark(X)) -> mark(isNePal(X))
 isNePal(ok(X)) -> ok(isNePal(X))
 proper(U11(X)) -> U11(proper(X))
 proper(U12(X)) -> U12(proper(X))
 proper(u95u95(X1,X2)) -> u95u95(proper(X1),proper(X2))
 proper(isNePal(X)) -> isNePal(proper(X))
 proper(nil) -> ok(nil)
 proper(tt) -> ok(tt)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->->Cycle:
->->-> Pairs:
 U95U95(mark(X1),X2) -> U95U95(X1,X2)
 U95U95(ok(X1),ok(X2)) -> U95U95(X1,X2)
 U95U95(X1,mark(X2)) -> U95U95(X1,X2)
->->-> Rules:
 U11(mark(X)) -> mark(U11(X))
 U11(ok(X)) -> ok(U11(X))
 U12(mark(X)) -> mark(U12(X))
 U12(ok(X)) -> ok(U12(X))
 u95u95(mark(X1),X2) -> mark(u95u95(X1,X2))
 u95u95(ok(X1),ok(X2)) -> ok(u95u95(X1,X2))
 u95u95(X1,mark(X2)) -> mark(u95u95(X1,X2))
 active(U11(tt)) -> mark(U12(tt))
 active(U11(X)) -> U11(active(X))
 active(U12(tt)) -> mark(tt)
 active(U12(X)) -> U12(active(X))
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(u95u95(X1,X2)) -> u95u95(active(X1),X2)
 active(u95u95(X1,X2)) -> u95u95(X1,active(X2))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 active(isNePal(X)) -> isNePal(active(X))
 isNePal(mark(X)) -> mark(isNePal(X))
 isNePal(ok(X)) -> ok(isNePal(X))
 proper(U11(X)) -> U11(proper(X))
 proper(U12(X)) -> U12(proper(X))
 proper(u95u95(X1,X2)) -> u95u95(proper(X1),proper(X2))
 proper(isNePal(X)) -> isNePal(proper(X))
 proper(nil) -> ok(nil)
 proper(tt) -> ok(tt)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->->Cycle:
->->-> Pairs:
 U12Sharp(mark(X)) -> U12Sharp(X)
 U12Sharp(ok(X)) -> U12Sharp(X)
->->-> Rules:
 U11(mark(X)) -> mark(U11(X))
 U11(ok(X)) -> ok(U11(X))
 U12(mark(X)) -> mark(U12(X))
 U12(ok(X)) -> ok(U12(X))
 u95u95(mark(X1),X2) -> mark(u95u95(X1,X2))
 u95u95(ok(X1),ok(X2)) -> ok(u95u95(X1,X2))
 u95u95(X1,mark(X2)) -> mark(u95u95(X1,X2))
 active(U11(tt)) -> mark(U12(tt))
 active(U11(X)) -> U11(active(X))
 active(U12(tt)) -> mark(tt)
 active(U12(X)) -> U12(active(X))
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(u95u95(X1,X2)) -> u95u95(active(X1),X2)
 active(u95u95(X1,X2)) -> u95u95(X1,active(X2))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 active(isNePal(X)) -> isNePal(active(X))
 isNePal(mark(X)) -> mark(isNePal(X))
 isNePal(ok(X)) -> ok(isNePal(X))
 proper(U11(X)) -> U11(proper(X))
 proper(U12(X)) -> U12(proper(X))
 proper(u95u95(X1,X2)) -> u95u95(proper(X1),proper(X2))
 proper(isNePal(X)) -> isNePal(proper(X))
 proper(nil) -> ok(nil)
 proper(tt) -> ok(tt)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->->Cycle:
->->-> Pairs:
 U11Sharp(mark(X)) -> U11Sharp(X)
 U11Sharp(ok(X)) -> U11Sharp(X)
->->-> Rules:
 U11(mark(X)) -> mark(U11(X))
 U11(ok(X)) -> ok(U11(X))
 U12(mark(X)) -> mark(U12(X))
 U12(ok(X)) -> ok(U12(X))
 u95u95(mark(X1),X2) -> mark(u95u95(X1,X2))
 u95u95(ok(X1),ok(X2)) -> ok(u95u95(X1,X2))
 u95u95(X1,mark(X2)) -> mark(u95u95(X1,X2))
 active(U11(tt)) -> mark(U12(tt))
 active(U11(X)) -> U11(active(X))
 active(U12(tt)) -> mark(tt)
 active(U12(X)) -> U12(active(X))
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(u95u95(X1,X2)) -> u95u95(active(X1),X2)
 active(u95u95(X1,X2)) -> u95u95(X1,active(X2))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 active(isNePal(X)) -> isNePal(active(X))
 isNePal(mark(X)) -> mark(isNePal(X))
 isNePal(ok(X)) -> ok(isNePal(X))
 proper(U11(X)) -> U11(proper(X))
 proper(U12(X)) -> U12(proper(X))
 proper(u95u95(X1,X2)) -> u95u95(proper(X1),proper(X2))
 proper(isNePal(X)) -> isNePal(proper(X))
 proper(nil) -> ok(nil)
 proper(tt) -> ok(tt)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->->Cycle:
->->-> Pairs:
 ACTIVE(U11(X)) -> ACTIVE(X)
 ACTIVE(U12(X)) -> ACTIVE(X)
 ACTIVE(u95u95(X1,X2)) -> ACTIVE(X1)
 ACTIVE(u95u95(X1,X2)) -> ACTIVE(X2)
 ACTIVE(isNePal(X)) -> ACTIVE(X)
->->-> Rules:
 U11(mark(X)) -> mark(U11(X))
 U11(ok(X)) -> ok(U11(X))
 U12(mark(X)) -> mark(U12(X))
 U12(ok(X)) -> ok(U12(X))
 u95u95(mark(X1),X2) -> mark(u95u95(X1,X2))
 u95u95(ok(X1),ok(X2)) -> ok(u95u95(X1,X2))
 u95u95(X1,mark(X2)) -> mark(u95u95(X1,X2))
 active(U11(tt)) -> mark(U12(tt))
 active(U11(X)) -> U11(active(X))
 active(U12(tt)) -> mark(tt)
 active(U12(X)) -> U12(active(X))
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(u95u95(X1,X2)) -> u95u95(active(X1),X2)
 active(u95u95(X1,X2)) -> u95u95(X1,active(X2))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 active(isNePal(X)) -> isNePal(active(X))
 isNePal(mark(X)) -> mark(isNePal(X))
 isNePal(ok(X)) -> ok(isNePal(X))
 proper(U11(X)) -> U11(proper(X))
 proper(U12(X)) -> U12(proper(X))
 proper(u95u95(X1,X2)) -> u95u95(proper(X1),proper(X2))
 proper(isNePal(X)) -> isNePal(proper(X))
 proper(nil) -> ok(nil)
 proper(tt) -> ok(tt)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->->Cycle:
->->-> Pairs:
 PROPER(U11(X)) -> PROPER(X)
 PROPER(U12(X)) -> PROPER(X)
 PROPER(u95u95(X1,X2)) -> PROPER(X1)
 PROPER(u95u95(X1,X2)) -> PROPER(X2)
 PROPER(isNePal(X)) -> PROPER(X)
->->-> Rules:
 U11(mark(X)) -> mark(U11(X))
 U11(ok(X)) -> ok(U11(X))
 U12(mark(X)) -> mark(U12(X))
 U12(ok(X)) -> ok(U12(X))
 u95u95(mark(X1),X2) -> mark(u95u95(X1,X2))
 u95u95(ok(X1),ok(X2)) -> ok(u95u95(X1,X2))
 u95u95(X1,mark(X2)) -> mark(u95u95(X1,X2))
 active(U11(tt)) -> mark(U12(tt))
 active(U11(X)) -> U11(active(X))
 active(U12(tt)) -> mark(tt)
 active(U12(X)) -> U12(active(X))
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(u95u95(X1,X2)) -> u95u95(active(X1),X2)
 active(u95u95(X1,X2)) -> u95u95(X1,active(X2))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 active(isNePal(X)) -> isNePal(active(X))
 isNePal(mark(X)) -> mark(isNePal(X))
 isNePal(ok(X)) -> ok(isNePal(X))
 proper(U11(X)) -> U11(proper(X))
 proper(U12(X)) -> U12(proper(X))
 proper(u95u95(X1,X2)) -> u95u95(proper(X1),proper(X2))
 proper(isNePal(X)) -> isNePal(proper(X))
 proper(nil) -> ok(nil)
 proper(tt) -> ok(tt)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->->Cycle:
->->-> Pairs:
 TOP(mark(X)) -> TOP(proper(X))
 TOP(ok(X)) -> TOP(active(X))
->->-> Rules:
 U11(mark(X)) -> mark(U11(X))
 U11(ok(X)) -> ok(U11(X))
 U12(mark(X)) -> mark(U12(X))
 U12(ok(X)) -> ok(U12(X))
 u95u95(mark(X1),X2) -> mark(u95u95(X1,X2))
 u95u95(ok(X1),ok(X2)) -> ok(u95u95(X1,X2))
 u95u95(X1,mark(X2)) -> mark(u95u95(X1,X2))
 active(U11(tt)) -> mark(U12(tt))
 active(U11(X)) -> U11(active(X))
 active(U12(tt)) -> mark(tt)
 active(U12(X)) -> U12(active(X))
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(u95u95(X1,X2)) -> u95u95(active(X1),X2)
 active(u95u95(X1,X2)) -> u95u95(X1,active(X2))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 active(isNePal(X)) -> isNePal(active(X))
 isNePal(mark(X)) -> mark(isNePal(X))
 isNePal(ok(X)) -> ok(isNePal(X))
 proper(U11(X)) -> U11(proper(X))
 proper(U12(X)) -> U12(proper(X))
 proper(u95u95(X1,X2)) -> u95u95(proper(X1),proper(X2))
 proper(isNePal(X)) -> isNePal(proper(X))
 proper(nil) -> ok(nil)
 proper(tt) -> ok(tt)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))


The problem is decomposed in 7 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 ISNEPAL(mark(X)) -> ISNEPAL(X)
 ISNEPAL(ok(X)) -> ISNEPAL(X)
-> Rules:
 U11(mark(X)) -> mark(U11(X))
 U11(ok(X)) -> ok(U11(X))
 U12(mark(X)) -> mark(U12(X))
 U12(ok(X)) -> ok(U12(X))
 u95u95(mark(X1),X2) -> mark(u95u95(X1,X2))
 u95u95(ok(X1),ok(X2)) -> ok(u95u95(X1,X2))
 u95u95(X1,mark(X2)) -> mark(u95u95(X1,X2))
 active(U11(tt)) -> mark(U12(tt))
 active(U11(X)) -> U11(active(X))
 active(U12(tt)) -> mark(tt)
 active(U12(X)) -> U12(active(X))
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(u95u95(X1,X2)) -> u95u95(active(X1),X2)
 active(u95u95(X1,X2)) -> u95u95(X1,active(X2))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 active(isNePal(X)) -> isNePal(active(X))
 isNePal(mark(X)) -> mark(isNePal(X))
 isNePal(ok(X)) -> ok(isNePal(X))
 proper(U11(X)) -> U11(proper(X))
 proper(U12(X)) -> U12(proper(X))
 proper(u95u95(X1,X2)) -> u95u95(proper(X1),proper(X2))
 proper(isNePal(X)) -> isNePal(proper(X))
 proper(nil) -> ok(nil)
 proper(tt) -> ok(tt)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Projection:
 pi(ISNEPAL) = 1

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 U11(mark(X)) -> mark(U11(X))
 U11(ok(X)) -> ok(U11(X))
 U12(mark(X)) -> mark(U12(X))
 U12(ok(X)) -> ok(U12(X))
 u95u95(mark(X1),X2) -> mark(u95u95(X1,X2))
 u95u95(ok(X1),ok(X2)) -> ok(u95u95(X1,X2))
 u95u95(X1,mark(X2)) -> mark(u95u95(X1,X2))
 active(U11(tt)) -> mark(U12(tt))
 active(U11(X)) -> U11(active(X))
 active(U12(tt)) -> mark(tt)
 active(U12(X)) -> U12(active(X))
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(u95u95(X1,X2)) -> u95u95(active(X1),X2)
 active(u95u95(X1,X2)) -> u95u95(X1,active(X2))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 active(isNePal(X)) -> isNePal(active(X))
 isNePal(mark(X)) -> mark(isNePal(X))
 isNePal(ok(X)) -> ok(isNePal(X))
 proper(U11(X)) -> U11(proper(X))
 proper(U12(X)) -> U12(proper(X))
 proper(u95u95(X1,X2)) -> u95u95(proper(X1),proper(X2))
 proper(isNePal(X)) -> isNePal(proper(X))
 proper(nil) -> ok(nil)
 proper(tt) -> ok(tt)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Subterm Processor:
-> Pairs:
 U95U95(mark(X1),X2) -> U95U95(X1,X2)
 U95U95(ok(X1),ok(X2)) -> U95U95(X1,X2)
 U95U95(X1,mark(X2)) -> U95U95(X1,X2)
-> Rules:
 U11(mark(X)) -> mark(U11(X))
 U11(ok(X)) -> ok(U11(X))
 U12(mark(X)) -> mark(U12(X))
 U12(ok(X)) -> ok(U12(X))
 u95u95(mark(X1),X2) -> mark(u95u95(X1,X2))
 u95u95(ok(X1),ok(X2)) -> ok(u95u95(X1,X2))
 u95u95(X1,mark(X2)) -> mark(u95u95(X1,X2))
 active(U11(tt)) -> mark(U12(tt))
 active(U11(X)) -> U11(active(X))
 active(U12(tt)) -> mark(tt)
 active(U12(X)) -> U12(active(X))
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(u95u95(X1,X2)) -> u95u95(active(X1),X2)
 active(u95u95(X1,X2)) -> u95u95(X1,active(X2))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 active(isNePal(X)) -> isNePal(active(X))
 isNePal(mark(X)) -> mark(isNePal(X))
 isNePal(ok(X)) -> ok(isNePal(X))
 proper(U11(X)) -> U11(proper(X))
 proper(U12(X)) -> U12(proper(X))
 proper(u95u95(X1,X2)) -> u95u95(proper(X1),proper(X2))
 proper(isNePal(X)) -> isNePal(proper(X))
 proper(nil) -> ok(nil)
 proper(tt) -> ok(tt)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Projection:
 pi(U95U95) = 1

Problem 1.2: 

SCC Processor:
-> Pairs:
 U95U95(X1,mark(X2)) -> U95U95(X1,X2)
-> Rules:
 U11(mark(X)) -> mark(U11(X))
 U11(ok(X)) -> ok(U11(X))
 U12(mark(X)) -> mark(U12(X))
 U12(ok(X)) -> ok(U12(X))
 u95u95(mark(X1),X2) -> mark(u95u95(X1,X2))
 u95u95(ok(X1),ok(X2)) -> ok(u95u95(X1,X2))
 u95u95(X1,mark(X2)) -> mark(u95u95(X1,X2))
 active(U11(tt)) -> mark(U12(tt))
 active(U11(X)) -> U11(active(X))
 active(U12(tt)) -> mark(tt)
 active(U12(X)) -> U12(active(X))
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(u95u95(X1,X2)) -> u95u95(active(X1),X2)
 active(u95u95(X1,X2)) -> u95u95(X1,active(X2))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 active(isNePal(X)) -> isNePal(active(X))
 isNePal(mark(X)) -> mark(isNePal(X))
 isNePal(ok(X)) -> ok(isNePal(X))
 proper(U11(X)) -> U11(proper(X))
 proper(U12(X)) -> U12(proper(X))
 proper(u95u95(X1,X2)) -> u95u95(proper(X1),proper(X2))
 proper(isNePal(X)) -> isNePal(proper(X))
 proper(nil) -> ok(nil)
 proper(tt) -> ok(tt)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U95U95(X1,mark(X2)) -> U95U95(X1,X2)
->->-> Rules:
 U11(mark(X)) -> mark(U11(X))
 U11(ok(X)) -> ok(U11(X))
 U12(mark(X)) -> mark(U12(X))
 U12(ok(X)) -> ok(U12(X))
 u95u95(mark(X1),X2) -> mark(u95u95(X1,X2))
 u95u95(ok(X1),ok(X2)) -> ok(u95u95(X1,X2))
 u95u95(X1,mark(X2)) -> mark(u95u95(X1,X2))
 active(U11(tt)) -> mark(U12(tt))
 active(U11(X)) -> U11(active(X))
 active(U12(tt)) -> mark(tt)
 active(U12(X)) -> U12(active(X))
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(u95u95(X1,X2)) -> u95u95(active(X1),X2)
 active(u95u95(X1,X2)) -> u95u95(X1,active(X2))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 active(isNePal(X)) -> isNePal(active(X))
 isNePal(mark(X)) -> mark(isNePal(X))
 isNePal(ok(X)) -> ok(isNePal(X))
 proper(U11(X)) -> U11(proper(X))
 proper(U12(X)) -> U12(proper(X))
 proper(u95u95(X1,X2)) -> u95u95(proper(X1),proper(X2))
 proper(isNePal(X)) -> isNePal(proper(X))
 proper(nil) -> ok(nil)
 proper(tt) -> ok(tt)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))

Problem 1.2: 

Subterm Processor:
-> Pairs:
 U95U95(X1,mark(X2)) -> U95U95(X1,X2)
-> Rules:
 U11(mark(X)) -> mark(U11(X))
 U11(ok(X)) -> ok(U11(X))
 U12(mark(X)) -> mark(U12(X))
 U12(ok(X)) -> ok(U12(X))
 u95u95(mark(X1),X2) -> mark(u95u95(X1,X2))
 u95u95(ok(X1),ok(X2)) -> ok(u95u95(X1,X2))
 u95u95(X1,mark(X2)) -> mark(u95u95(X1,X2))
 active(U11(tt)) -> mark(U12(tt))
 active(U11(X)) -> U11(active(X))
 active(U12(tt)) -> mark(tt)
 active(U12(X)) -> U12(active(X))
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(u95u95(X1,X2)) -> u95u95(active(X1),X2)
 active(u95u95(X1,X2)) -> u95u95(X1,active(X2))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 active(isNePal(X)) -> isNePal(active(X))
 isNePal(mark(X)) -> mark(isNePal(X))
 isNePal(ok(X)) -> ok(isNePal(X))
 proper(U11(X)) -> U11(proper(X))
 proper(U12(X)) -> U12(proper(X))
 proper(u95u95(X1,X2)) -> u95u95(proper(X1),proper(X2))
 proper(isNePal(X)) -> isNePal(proper(X))
 proper(nil) -> ok(nil)
 proper(tt) -> ok(tt)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Projection:
 pi(U95U95) = 2

Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 U11(mark(X)) -> mark(U11(X))
 U11(ok(X)) -> ok(U11(X))
 U12(mark(X)) -> mark(U12(X))
 U12(ok(X)) -> ok(U12(X))
 u95u95(mark(X1),X2) -> mark(u95u95(X1,X2))
 u95u95(ok(X1),ok(X2)) -> ok(u95u95(X1,X2))
 u95u95(X1,mark(X2)) -> mark(u95u95(X1,X2))
 active(U11(tt)) -> mark(U12(tt))
 active(U11(X)) -> U11(active(X))
 active(U12(tt)) -> mark(tt)
 active(U12(X)) -> U12(active(X))
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(u95u95(X1,X2)) -> u95u95(active(X1),X2)
 active(u95u95(X1,X2)) -> u95u95(X1,active(X2))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 active(isNePal(X)) -> isNePal(active(X))
 isNePal(mark(X)) -> mark(isNePal(X))
 isNePal(ok(X)) -> ok(isNePal(X))
 proper(U11(X)) -> U11(proper(X))
 proper(U12(X)) -> U12(proper(X))
 proper(u95u95(X1,X2)) -> u95u95(proper(X1),proper(X2))
 proper(isNePal(X)) -> isNePal(proper(X))
 proper(nil) -> ok(nil)
 proper(tt) -> ok(tt)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Subterm Processor:
-> Pairs:
 U12Sharp(mark(X)) -> U12Sharp(X)
 U12Sharp(ok(X)) -> U12Sharp(X)
-> Rules:
 U11(mark(X)) -> mark(U11(X))
 U11(ok(X)) -> ok(U11(X))
 U12(mark(X)) -> mark(U12(X))
 U12(ok(X)) -> ok(U12(X))
 u95u95(mark(X1),X2) -> mark(u95u95(X1,X2))
 u95u95(ok(X1),ok(X2)) -> ok(u95u95(X1,X2))
 u95u95(X1,mark(X2)) -> mark(u95u95(X1,X2))
 active(U11(tt)) -> mark(U12(tt))
 active(U11(X)) -> U11(active(X))
 active(U12(tt)) -> mark(tt)
 active(U12(X)) -> U12(active(X))
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(u95u95(X1,X2)) -> u95u95(active(X1),X2)
 active(u95u95(X1,X2)) -> u95u95(X1,active(X2))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 active(isNePal(X)) -> isNePal(active(X))
 isNePal(mark(X)) -> mark(isNePal(X))
 isNePal(ok(X)) -> ok(isNePal(X))
 proper(U11(X)) -> U11(proper(X))
 proper(U12(X)) -> U12(proper(X))
 proper(u95u95(X1,X2)) -> u95u95(proper(X1),proper(X2))
 proper(isNePal(X)) -> isNePal(proper(X))
 proper(nil) -> ok(nil)
 proper(tt) -> ok(tt)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Projection:
 pi(U12Sharp) = 1

Problem 1.3: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 U11(mark(X)) -> mark(U11(X))
 U11(ok(X)) -> ok(U11(X))
 U12(mark(X)) -> mark(U12(X))
 U12(ok(X)) -> ok(U12(X))
 u95u95(mark(X1),X2) -> mark(u95u95(X1,X2))
 u95u95(ok(X1),ok(X2)) -> ok(u95u95(X1,X2))
 u95u95(X1,mark(X2)) -> mark(u95u95(X1,X2))
 active(U11(tt)) -> mark(U12(tt))
 active(U11(X)) -> U11(active(X))
 active(U12(tt)) -> mark(tt)
 active(U12(X)) -> U12(active(X))
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(u95u95(X1,X2)) -> u95u95(active(X1),X2)
 active(u95u95(X1,X2)) -> u95u95(X1,active(X2))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 active(isNePal(X)) -> isNePal(active(X))
 isNePal(mark(X)) -> mark(isNePal(X))
 isNePal(ok(X)) -> ok(isNePal(X))
 proper(U11(X)) -> U11(proper(X))
 proper(U12(X)) -> U12(proper(X))
 proper(u95u95(X1,X2)) -> u95u95(proper(X1),proper(X2))
 proper(isNePal(X)) -> isNePal(proper(X))
 proper(nil) -> ok(nil)
 proper(tt) -> ok(tt)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.4: 

Subterm Processor:
-> Pairs:
 U11Sharp(mark(X)) -> U11Sharp(X)
 U11Sharp(ok(X)) -> U11Sharp(X)
-> Rules:
 U11(mark(X)) -> mark(U11(X))
 U11(ok(X)) -> ok(U11(X))
 U12(mark(X)) -> mark(U12(X))
 U12(ok(X)) -> ok(U12(X))
 u95u95(mark(X1),X2) -> mark(u95u95(X1,X2))
 u95u95(ok(X1),ok(X2)) -> ok(u95u95(X1,X2))
 u95u95(X1,mark(X2)) -> mark(u95u95(X1,X2))
 active(U11(tt)) -> mark(U12(tt))
 active(U11(X)) -> U11(active(X))
 active(U12(tt)) -> mark(tt)
 active(U12(X)) -> U12(active(X))
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(u95u95(X1,X2)) -> u95u95(active(X1),X2)
 active(u95u95(X1,X2)) -> u95u95(X1,active(X2))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 active(isNePal(X)) -> isNePal(active(X))
 isNePal(mark(X)) -> mark(isNePal(X))
 isNePal(ok(X)) -> ok(isNePal(X))
 proper(U11(X)) -> U11(proper(X))
 proper(U12(X)) -> U12(proper(X))
 proper(u95u95(X1,X2)) -> u95u95(proper(X1),proper(X2))
 proper(isNePal(X)) -> isNePal(proper(X))
 proper(nil) -> ok(nil)
 proper(tt) -> ok(tt)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Projection:
 pi(U11Sharp) = 1

Problem 1.4: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 U11(mark(X)) -> mark(U11(X))
 U11(ok(X)) -> ok(U11(X))
 U12(mark(X)) -> mark(U12(X))
 U12(ok(X)) -> ok(U12(X))
 u95u95(mark(X1),X2) -> mark(u95u95(X1,X2))
 u95u95(ok(X1),ok(X2)) -> ok(u95u95(X1,X2))
 u95u95(X1,mark(X2)) -> mark(u95u95(X1,X2))
 active(U11(tt)) -> mark(U12(tt))
 active(U11(X)) -> U11(active(X))
 active(U12(tt)) -> mark(tt)
 active(U12(X)) -> U12(active(X))
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(u95u95(X1,X2)) -> u95u95(active(X1),X2)
 active(u95u95(X1,X2)) -> u95u95(X1,active(X2))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 active(isNePal(X)) -> isNePal(active(X))
 isNePal(mark(X)) -> mark(isNePal(X))
 isNePal(ok(X)) -> ok(isNePal(X))
 proper(U11(X)) -> U11(proper(X))
 proper(U12(X)) -> U12(proper(X))
 proper(u95u95(X1,X2)) -> u95u95(proper(X1),proper(X2))
 proper(isNePal(X)) -> isNePal(proper(X))
 proper(nil) -> ok(nil)
 proper(tt) -> ok(tt)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.5: 

Subterm Processor:
-> Pairs:
 ACTIVE(U11(X)) -> ACTIVE(X)
 ACTIVE(U12(X)) -> ACTIVE(X)
 ACTIVE(u95u95(X1,X2)) -> ACTIVE(X1)
 ACTIVE(u95u95(X1,X2)) -> ACTIVE(X2)
 ACTIVE(isNePal(X)) -> ACTIVE(X)
-> Rules:
 U11(mark(X)) -> mark(U11(X))
 U11(ok(X)) -> ok(U11(X))
 U12(mark(X)) -> mark(U12(X))
 U12(ok(X)) -> ok(U12(X))
 u95u95(mark(X1),X2) -> mark(u95u95(X1,X2))
 u95u95(ok(X1),ok(X2)) -> ok(u95u95(X1,X2))
 u95u95(X1,mark(X2)) -> mark(u95u95(X1,X2))
 active(U11(tt)) -> mark(U12(tt))
 active(U11(X)) -> U11(active(X))
 active(U12(tt)) -> mark(tt)
 active(U12(X)) -> U12(active(X))
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(u95u95(X1,X2)) -> u95u95(active(X1),X2)
 active(u95u95(X1,X2)) -> u95u95(X1,active(X2))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 active(isNePal(X)) -> isNePal(active(X))
 isNePal(mark(X)) -> mark(isNePal(X))
 isNePal(ok(X)) -> ok(isNePal(X))
 proper(U11(X)) -> U11(proper(X))
 proper(U12(X)) -> U12(proper(X))
 proper(u95u95(X1,X2)) -> u95u95(proper(X1),proper(X2))
 proper(isNePal(X)) -> isNePal(proper(X))
 proper(nil) -> ok(nil)
 proper(tt) -> ok(tt)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Projection:
 pi(ACTIVE) = 1

Problem 1.5: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 U11(mark(X)) -> mark(U11(X))
 U11(ok(X)) -> ok(U11(X))
 U12(mark(X)) -> mark(U12(X))
 U12(ok(X)) -> ok(U12(X))
 u95u95(mark(X1),X2) -> mark(u95u95(X1,X2))
 u95u95(ok(X1),ok(X2)) -> ok(u95u95(X1,X2))
 u95u95(X1,mark(X2)) -> mark(u95u95(X1,X2))
 active(U11(tt)) -> mark(U12(tt))
 active(U11(X)) -> U11(active(X))
 active(U12(tt)) -> mark(tt)
 active(U12(X)) -> U12(active(X))
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(u95u95(X1,X2)) -> u95u95(active(X1),X2)
 active(u95u95(X1,X2)) -> u95u95(X1,active(X2))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 active(isNePal(X)) -> isNePal(active(X))
 isNePal(mark(X)) -> mark(isNePal(X))
 isNePal(ok(X)) -> ok(isNePal(X))
 proper(U11(X)) -> U11(proper(X))
 proper(U12(X)) -> U12(proper(X))
 proper(u95u95(X1,X2)) -> u95u95(proper(X1),proper(X2))
 proper(isNePal(X)) -> isNePal(proper(X))
 proper(nil) -> ok(nil)
 proper(tt) -> ok(tt)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.6: 

Subterm Processor:
-> Pairs:
 PROPER(U11(X)) -> PROPER(X)
 PROPER(U12(X)) -> PROPER(X)
 PROPER(u95u95(X1,X2)) -> PROPER(X1)
 PROPER(u95u95(X1,X2)) -> PROPER(X2)
 PROPER(isNePal(X)) -> PROPER(X)
-> Rules:
 U11(mark(X)) -> mark(U11(X))
 U11(ok(X)) -> ok(U11(X))
 U12(mark(X)) -> mark(U12(X))
 U12(ok(X)) -> ok(U12(X))
 u95u95(mark(X1),X2) -> mark(u95u95(X1,X2))
 u95u95(ok(X1),ok(X2)) -> ok(u95u95(X1,X2))
 u95u95(X1,mark(X2)) -> mark(u95u95(X1,X2))
 active(U11(tt)) -> mark(U12(tt))
 active(U11(X)) -> U11(active(X))
 active(U12(tt)) -> mark(tt)
 active(U12(X)) -> U12(active(X))
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(u95u95(X1,X2)) -> u95u95(active(X1),X2)
 active(u95u95(X1,X2)) -> u95u95(X1,active(X2))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 active(isNePal(X)) -> isNePal(active(X))
 isNePal(mark(X)) -> mark(isNePal(X))
 isNePal(ok(X)) -> ok(isNePal(X))
 proper(U11(X)) -> U11(proper(X))
 proper(U12(X)) -> U12(proper(X))
 proper(u95u95(X1,X2)) -> u95u95(proper(X1),proper(X2))
 proper(isNePal(X)) -> isNePal(proper(X))
 proper(nil) -> ok(nil)
 proper(tt) -> ok(tt)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Projection:
 pi(PROPER) = 1

Problem 1.6: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 U11(mark(X)) -> mark(U11(X))
 U11(ok(X)) -> ok(U11(X))
 U12(mark(X)) -> mark(U12(X))
 U12(ok(X)) -> ok(U12(X))
 u95u95(mark(X1),X2) -> mark(u95u95(X1,X2))
 u95u95(ok(X1),ok(X2)) -> ok(u95u95(X1,X2))
 u95u95(X1,mark(X2)) -> mark(u95u95(X1,X2))
 active(U11(tt)) -> mark(U12(tt))
 active(U11(X)) -> U11(active(X))
 active(U12(tt)) -> mark(tt)
 active(U12(X)) -> U12(active(X))
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(u95u95(X1,X2)) -> u95u95(active(X1),X2)
 active(u95u95(X1,X2)) -> u95u95(X1,active(X2))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 active(isNePal(X)) -> isNePal(active(X))
 isNePal(mark(X)) -> mark(isNePal(X))
 isNePal(ok(X)) -> ok(isNePal(X))
 proper(U11(X)) -> U11(proper(X))
 proper(U12(X)) -> U12(proper(X))
 proper(u95u95(X1,X2)) -> u95u95(proper(X1),proper(X2))
 proper(isNePal(X)) -> isNePal(proper(X))
 proper(nil) -> ok(nil)
 proper(tt) -> ok(tt)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.7: 

Reduction Pair Processor:
-> Pairs:
 TOP(mark(X)) -> TOP(proper(X))
 TOP(ok(X)) -> TOP(active(X))
-> Rules:
 U11(mark(X)) -> mark(U11(X))
 U11(ok(X)) -> ok(U11(X))
 U12(mark(X)) -> mark(U12(X))
 U12(ok(X)) -> ok(U12(X))
 u95u95(mark(X1),X2) -> mark(u95u95(X1,X2))
 u95u95(ok(X1),ok(X2)) -> ok(u95u95(X1,X2))
 u95u95(X1,mark(X2)) -> mark(u95u95(X1,X2))
 active(U11(tt)) -> mark(U12(tt))
 active(U11(X)) -> U11(active(X))
 active(U12(tt)) -> mark(tt)
 active(U12(X)) -> U12(active(X))
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(u95u95(X1,X2)) -> u95u95(active(X1),X2)
 active(u95u95(X1,X2)) -> u95u95(X1,active(X2))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 active(isNePal(X)) -> isNePal(active(X))
 isNePal(mark(X)) -> mark(isNePal(X))
 isNePal(ok(X)) -> ok(isNePal(X))
 proper(U11(X)) -> U11(proper(X))
 proper(U12(X)) -> U12(proper(X))
 proper(u95u95(X1,X2)) -> u95u95(proper(X1),proper(X2))
 proper(isNePal(X)) -> isNePal(proper(X))
 proper(nil) -> ok(nil)
 proper(tt) -> ok(tt)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
-> Usable rules:
 U11(mark(X)) -> mark(U11(X))
 U11(ok(X)) -> ok(U11(X))
 U12(mark(X)) -> mark(U12(X))
 U12(ok(X)) -> ok(U12(X))
 u95u95(mark(X1),X2) -> mark(u95u95(X1,X2))
 u95u95(ok(X1),ok(X2)) -> ok(u95u95(X1,X2))
 u95u95(X1,mark(X2)) -> mark(u95u95(X1,X2))
 active(U11(tt)) -> mark(U12(tt))
 active(U11(X)) -> U11(active(X))
 active(U12(tt)) -> mark(tt)
 active(U12(X)) -> U12(active(X))
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(u95u95(X1,X2)) -> u95u95(active(X1),X2)
 active(u95u95(X1,X2)) -> u95u95(X1,active(X2))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 active(isNePal(X)) -> isNePal(active(X))
 isNePal(mark(X)) -> mark(isNePal(X))
 isNePal(ok(X)) -> ok(isNePal(X))
 proper(U11(X)) -> U11(proper(X))
 proper(U12(X)) -> U12(proper(X))
 proper(u95u95(X1,X2)) -> u95u95(proper(X1),proper(X2))
 proper(isNePal(X)) -> isNePal(proper(X))
 proper(nil) -> ok(nil)
 proper(tt) -> ok(tt)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X) = 2.X + 2
[U12](X) = X + 2
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[isNePal](X) = 2.X + 2
[proper](X) = X
[top](X) = 0
[fSNonEmpty] = 0
[mark](X) = X + 2
[nil] = 1
[ok](X) = X
[tt] = 2
[U11Sharp](X) = 0
[U12Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = 0
[ISNEPAL](X) = 0
[PROPER](X) = 0
[TOP](X) = 2.X

Problem 1.7: 

SCC Processor:
-> Pairs:
 TOP(ok(X)) -> TOP(active(X))
-> Rules:
 U11(mark(X)) -> mark(U11(X))
 U11(ok(X)) -> ok(U11(X))
 U12(mark(X)) -> mark(U12(X))
 U12(ok(X)) -> ok(U12(X))
 u95u95(mark(X1),X2) -> mark(u95u95(X1,X2))
 u95u95(ok(X1),ok(X2)) -> ok(u95u95(X1,X2))
 u95u95(X1,mark(X2)) -> mark(u95u95(X1,X2))
 active(U11(tt)) -> mark(U12(tt))
 active(U11(X)) -> U11(active(X))
 active(U12(tt)) -> mark(tt)
 active(U12(X)) -> U12(active(X))
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(u95u95(X1,X2)) -> u95u95(active(X1),X2)
 active(u95u95(X1,X2)) -> u95u95(X1,active(X2))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 active(isNePal(X)) -> isNePal(active(X))
 isNePal(mark(X)) -> mark(isNePal(X))
 isNePal(ok(X)) -> ok(isNePal(X))
 proper(U11(X)) -> U11(proper(X))
 proper(U12(X)) -> U12(proper(X))
 proper(u95u95(X1,X2)) -> u95u95(proper(X1),proper(X2))
 proper(isNePal(X)) -> isNePal(proper(X))
 proper(nil) -> ok(nil)
 proper(tt) -> ok(tt)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 TOP(ok(X)) -> TOP(active(X))
->->-> Rules:
 U11(mark(X)) -> mark(U11(X))
 U11(ok(X)) -> ok(U11(X))
 U12(mark(X)) -> mark(U12(X))
 U12(ok(X)) -> ok(U12(X))
 u95u95(mark(X1),X2) -> mark(u95u95(X1,X2))
 u95u95(ok(X1),ok(X2)) -> ok(u95u95(X1,X2))
 u95u95(X1,mark(X2)) -> mark(u95u95(X1,X2))
 active(U11(tt)) -> mark(U12(tt))
 active(U11(X)) -> U11(active(X))
 active(U12(tt)) -> mark(tt)
 active(U12(X)) -> U12(active(X))
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(u95u95(X1,X2)) -> u95u95(active(X1),X2)
 active(u95u95(X1,X2)) -> u95u95(X1,active(X2))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 active(isNePal(X)) -> isNePal(active(X))
 isNePal(mark(X)) -> mark(isNePal(X))
 isNePal(ok(X)) -> ok(isNePal(X))
 proper(U11(X)) -> U11(proper(X))
 proper(U12(X)) -> U12(proper(X))
 proper(u95u95(X1,X2)) -> u95u95(proper(X1),proper(X2))
 proper(isNePal(X)) -> isNePal(proper(X))
 proper(nil) -> ok(nil)
 proper(tt) -> ok(tt)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))

Problem 1.7: 

Reduction Pair Processor:
-> Pairs:
 TOP(ok(X)) -> TOP(active(X))
-> Rules:
 U11(mark(X)) -> mark(U11(X))
 U11(ok(X)) -> ok(U11(X))
 U12(mark(X)) -> mark(U12(X))
 U12(ok(X)) -> ok(U12(X))
 u95u95(mark(X1),X2) -> mark(u95u95(X1,X2))
 u95u95(ok(X1),ok(X2)) -> ok(u95u95(X1,X2))
 u95u95(X1,mark(X2)) -> mark(u95u95(X1,X2))
 active(U11(tt)) -> mark(U12(tt))
 active(U11(X)) -> U11(active(X))
 active(U12(tt)) -> mark(tt)
 active(U12(X)) -> U12(active(X))
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(u95u95(X1,X2)) -> u95u95(active(X1),X2)
 active(u95u95(X1,X2)) -> u95u95(X1,active(X2))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 active(isNePal(X)) -> isNePal(active(X))
 isNePal(mark(X)) -> mark(isNePal(X))
 isNePal(ok(X)) -> ok(isNePal(X))
 proper(U11(X)) -> U11(proper(X))
 proper(U12(X)) -> U12(proper(X))
 proper(u95u95(X1,X2)) -> u95u95(proper(X1),proper(X2))
 proper(isNePal(X)) -> isNePal(proper(X))
 proper(nil) -> ok(nil)
 proper(tt) -> ok(tt)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
-> Usable rules:
 U11(mark(X)) -> mark(U11(X))
 U11(ok(X)) -> ok(U11(X))
 U12(mark(X)) -> mark(U12(X))
 U12(ok(X)) -> ok(U12(X))
 u95u95(mark(X1),X2) -> mark(u95u95(X1,X2))
 u95u95(ok(X1),ok(X2)) -> ok(u95u95(X1,X2))
 u95u95(X1,mark(X2)) -> mark(u95u95(X1,X2))
 active(U11(tt)) -> mark(U12(tt))
 active(U11(X)) -> U11(active(X))
 active(U12(tt)) -> mark(tt)
 active(U12(X)) -> U12(active(X))
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(u95u95(X1,X2)) -> u95u95(active(X1),X2)
 active(u95u95(X1,X2)) -> u95u95(X1,active(X2))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 active(isNePal(X)) -> isNePal(active(X))
 isNePal(mark(X)) -> mark(isNePal(X))
 isNePal(ok(X)) -> ok(isNePal(X))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X) = 2.X + 2
[U12](X) = 2.X + 2
[u95u95](X1,X2) = X1 + X2
[active](X) = 2.X + 1
[isNePal](X) = 2.X + 2
[proper](X) = 0
[top](X) = 0
[fSNonEmpty] = 0
[mark](X) = X + 1
[nil] = 2
[ok](X) = 2.X + 2
[tt] = 1
[U11Sharp](X) = 0
[U12Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = 0
[ISNEPAL](X) = 0
[PROPER](X) = 0
[TOP](X) = 2.X

Problem 1.7: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 U11(mark(X)) -> mark(U11(X))
 U11(ok(X)) -> ok(U11(X))
 U12(mark(X)) -> mark(U12(X))
 U12(ok(X)) -> ok(U12(X))
 u95u95(mark(X1),X2) -> mark(u95u95(X1,X2))
 u95u95(ok(X1),ok(X2)) -> ok(u95u95(X1,X2))
 u95u95(X1,mark(X2)) -> mark(u95u95(X1,X2))
 active(U11(tt)) -> mark(U12(tt))
 active(U11(X)) -> U11(active(X))
 active(U12(tt)) -> mark(tt)
 active(U12(X)) -> U12(active(X))
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(u95u95(X1,X2)) -> u95u95(active(X1),X2)
 active(u95u95(X1,X2)) -> u95u95(X1,active(X2))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 active(isNePal(X)) -> isNePal(active(X))
 isNePal(mark(X)) -> mark(isNePal(X))
 isNePal(ok(X)) -> ok(isNePal(X))
 proper(U11(X)) -> U11(proper(X))
 proper(U12(X)) -> U12(proper(X))
 proper(u95u95(X1,X2)) -> u95u95(proper(X1),proper(X2))
 proper(isNePal(X)) -> isNePal(proper(X))
 proper(nil) -> ok(nil)
 proper(tt) -> ok(tt)
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
