YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/j4Mcx.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRSToCSRProof [EQUIVALENT, 0 ms]
(2) CSR
(3) CSRRRRProof [EQUIVALENT, 31 ms]
(4) CSR
(5) CSRRRRProof [EQUIVALENT, 0 ms]
(6) CSR
(7) CSRRRRProof [EQUIVALENT, 0 ms]
(8) CSR
(9) CSRRRRProof [EQUIVALENT, 0 ms]
(10) CSR
(11) CSRRRRProof [EQUIVALENT, 0 ms]
(12) CSR
(13) RisEmptyProof [EQUIVALENT, 0 ms]
(14) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   active(__(__(X, Y), Z)) -> mark(__(X, __(Y, Z)))
   active(__(X, nil)) -> mark(X)
   active(__(nil, X)) -> mark(X)
   active(U11(tt)) -> mark(U12(tt))
   active(U12(tt)) -> mark(tt)
   active(isNePal(__(I, __(P, I)))) -> mark(U11(tt))
   active(__(X1, X2)) -> __(active(X1), X2)
   active(__(X1, X2)) -> __(X1, active(X2))
   active(U11(X)) -> U11(active(X))
   active(U12(X)) -> U12(active(X))
   active(isNePal(X)) -> isNePal(active(X))
   __(mark(X1), X2) -> mark(__(X1, X2))
   __(X1, mark(X2)) -> mark(__(X1, X2))
   U11(mark(X)) -> mark(U11(X))
   U12(mark(X)) -> mark(U12(X))
   isNePal(mark(X)) -> mark(isNePal(X))
   proper(__(X1, X2)) -> __(proper(X1), proper(X2))
   proper(nil) -> ok(nil)
   proper(U11(X)) -> U11(proper(X))
   proper(tt) -> ok(tt)
   proper(U12(X)) -> U12(proper(X))
   proper(isNePal(X)) -> isNePal(proper(X))
   __(ok(X1), ok(X2)) -> ok(__(X1, X2))
   U11(ok(X)) -> ok(U11(X))
   U12(ok(X)) -> ok(U12(X))
   isNePal(ok(X)) -> ok(isNePal(X))
   top(mark(X)) -> top(proper(X))
   top(ok(X)) -> top(active(X))

Q is empty.

----------------------------------------

(1) QTRSToCSRProof (EQUIVALENT)
The following Q TRS is given: Q restricted rewrite system:
The TRS R consists of the following rules:

   active(__(__(X, Y), Z)) -> mark(__(X, __(Y, Z)))
   active(__(X, nil)) -> mark(X)
   active(__(nil, X)) -> mark(X)
   active(U11(tt)) -> mark(U12(tt))
   active(U12(tt)) -> mark(tt)
   active(isNePal(__(I, __(P, I)))) -> mark(U11(tt))
   active(__(X1, X2)) -> __(active(X1), X2)
   active(__(X1, X2)) -> __(X1, active(X2))
   active(U11(X)) -> U11(active(X))
   active(U12(X)) -> U12(active(X))
   active(isNePal(X)) -> isNePal(active(X))
   __(mark(X1), X2) -> mark(__(X1, X2))
   __(X1, mark(X2)) -> mark(__(X1, X2))
   U11(mark(X)) -> mark(U11(X))
   U12(mark(X)) -> mark(U12(X))
   isNePal(mark(X)) -> mark(isNePal(X))
   proper(__(X1, X2)) -> __(proper(X1), proper(X2))
   proper(nil) -> ok(nil)
   proper(U11(X)) -> U11(proper(X))
   proper(tt) -> ok(tt)
   proper(U12(X)) -> U12(proper(X))
   proper(isNePal(X)) -> isNePal(proper(X))
   __(ok(X1), ok(X2)) -> ok(__(X1, X2))
   U11(ok(X)) -> ok(U11(X))
   U12(ok(X)) -> ok(U12(X))
   isNePal(ok(X)) -> ok(isNePal(X))
   top(mark(X)) -> top(proper(X))
   top(ok(X)) -> top(active(X))

Q is empty.
Special symbols used for the transformation (see [GM04]):
top: top_1, active: active_1, mark: mark_1, ok: ok_1, proper: proper_1
The replacement map contains the following entries:

__: {1, 2}
nil: empty set
U11: {1}
tt: empty set
U12: {1}
isNePal: {1}
The QTRS contained all rules created by the complete Giesl-Middeldorp transformation. Therefore, the inverse transformation is complete (and sound).
----------------------------------------

(2)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   __(__(X, Y), Z) -> __(X, __(Y, Z))
   __(X, nil) -> X
   __(nil, X) -> X
   U11(tt) -> U12(tt)
   U12(tt) -> tt
   isNePal(__(I, __(P, I))) -> U11(tt)

The replacement map contains the following entries:

__: {1, 2}
nil: empty set
U11: {1}
tt: empty set
U12: {1}
isNePal: {1}

----------------------------------------

(3) CSRRRRProof (EQUIVALENT)
The following CSR is given: Context-sensitive rewrite system:
The TRS R consists of the following rules:

   __(__(X, Y), Z) -> __(X, __(Y, Z))
   __(X, nil) -> X
   __(nil, X) -> X
   U11(tt) -> U12(tt)
   U12(tt) -> tt
   isNePal(__(I, __(P, I))) -> U11(tt)

The replacement map contains the following entries:

__: {1, 2}
nil: empty set
U11: {1}
tt: empty set
U12: {1}
isNePal: {1}
Used ordering:
Polynomial interpretation [POLO]:

   POL(U11(x_1)) = x_1
   POL(U12(x_1)) = x_1
   POL(__(x_1, x_2)) = x_1 + x_2
   POL(isNePal(x_1)) = 1 + x_1
   POL(nil) = 1
   POL(tt) = 1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   __(X, nil) -> X
   __(nil, X) -> X




----------------------------------------

(4)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   __(__(X, Y), Z) -> __(X, __(Y, Z))
   U11(tt) -> U12(tt)
   U12(tt) -> tt
   isNePal(__(I, __(P, I))) -> U11(tt)

The replacement map contains the following entries:

__: {1, 2}
U11: {1}
tt: empty set
U12: {1}
isNePal: {1}

----------------------------------------

(5) CSRRRRProof (EQUIVALENT)
The following CSR is given: Context-sensitive rewrite system:
The TRS R consists of the following rules:

   __(__(X, Y), Z) -> __(X, __(Y, Z))
   U11(tt) -> U12(tt)
   U12(tt) -> tt
   isNePal(__(I, __(P, I))) -> U11(tt)

The replacement map contains the following entries:

__: {1, 2}
U11: {1}
tt: empty set
U12: {1}
isNePal: {1}
Used ordering:
Polynomial interpretation [POLO]:

   POL(U11(x_1)) = x_1
   POL(U12(x_1)) = x_1
   POL(__(x_1, x_2)) = 1 + x_1 + x_2
   POL(isNePal(x_1)) = 1 + x_1
   POL(tt) = 1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   isNePal(__(I, __(P, I))) -> U11(tt)




----------------------------------------

(6)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   __(__(X, Y), Z) -> __(X, __(Y, Z))
   U11(tt) -> U12(tt)
   U12(tt) -> tt

The replacement map contains the following entries:

__: {1, 2}
U11: {1}
tt: empty set
U12: {1}

----------------------------------------

(7) CSRRRRProof (EQUIVALENT)
The following CSR is given: Context-sensitive rewrite system:
The TRS R consists of the following rules:

   __(__(X, Y), Z) -> __(X, __(Y, Z))
   U11(tt) -> U12(tt)
   U12(tt) -> tt

The replacement map contains the following entries:

__: {1, 2}
U11: {1}
tt: empty set
U12: {1}
Used ordering:
Polynomial interpretation [POLO]:

   POL(U11(x_1)) = 1 + x_1
   POL(U12(x_1)) = 1 + x_1
   POL(__(x_1, x_2)) = x_1 + x_2
   POL(tt) = 0
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   U12(tt) -> tt




----------------------------------------

(8)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   __(__(X, Y), Z) -> __(X, __(Y, Z))
   U11(tt) -> U12(tt)

The replacement map contains the following entries:

__: {1, 2}
U11: {1}
tt: empty set
U12: {1}

----------------------------------------

(9) CSRRRRProof (EQUIVALENT)
The following CSR is given: Context-sensitive rewrite system:
The TRS R consists of the following rules:

   __(__(X, Y), Z) -> __(X, __(Y, Z))
   U11(tt) -> U12(tt)

The replacement map contains the following entries:

__: {1, 2}
U11: {1}
tt: empty set
U12: {1}
Used ordering:
Polynomial interpretation [POLO]:

   POL(U11(x_1)) = 1 + x_1
   POL(U12(x_1)) = x_1
   POL(__(x_1, x_2)) = x_1 + x_2
   POL(tt) = 0
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   U11(tt) -> U12(tt)




----------------------------------------

(10)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   __(__(X, Y), Z) -> __(X, __(Y, Z))

The replacement map contains the following entries:

__: {1, 2}

----------------------------------------

(11) CSRRRRProof (EQUIVALENT)
The following CSR is given: Context-sensitive rewrite system:
The TRS R consists of the following rules:

   __(__(X, Y), Z) -> __(X, __(Y, Z))

The replacement map contains the following entries:

__: {1, 2}
Used ordering:
Polynomial interpretation [POLO]:

   POL(__(x_1, x_2)) = 1 + 2*x_1 + x_2
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   __(__(X, Y), Z) -> __(X, __(Y, Z))




----------------------------------------

(12)
Obligation:
Context-sensitive rewrite system:
R is empty.

----------------------------------------

(13) RisEmptyProof (EQUIVALENT)
The CSR R is empty. Hence, termination is trivially proven.
----------------------------------------

(14)
YES
