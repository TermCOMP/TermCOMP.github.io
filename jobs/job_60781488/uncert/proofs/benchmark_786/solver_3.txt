NO

Problem 1: 

(VAR vu95NonEmpty x)
(RULES
f(s(num0),g(x)) -> f(x,g(x))
g(s(x)) -> g(x)
)


Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 F(s(num0),g(x)) -> F(x,g(x))
 G(s(x)) -> G(x)
-> Rules:
 f(s(num0),g(x)) -> f(x,g(x))
 g(s(x)) -> g(x)

Problem 1: 

SCC Processor:
-> Pairs:
 F(s(num0),g(x)) -> F(x,g(x))
 G(s(x)) -> G(x)
-> Rules:
 f(s(num0),g(x)) -> f(x,g(x))
 g(s(x)) -> g(x)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 G(s(x)) -> G(x)
->->-> Rules:
 f(s(num0),g(x)) -> f(x,g(x))
 g(s(x)) -> g(x)
->->Cycle:
->->-> Pairs:
 F(s(num0),g(x)) -> F(x,g(x))
->->-> Rules:
 f(s(num0),g(x)) -> f(x,g(x))
 g(s(x)) -> g(x)

Problem 1: 

Forward Instantiation Processor:
-> Pairs:
 F(s(num0),g(x)) -> F(x,g(x))
-> Rules:
 f(s(num0),g(x)) -> f(x,g(x))
 g(s(x)) -> g(x)
->Instantiated Pairs:
->->Original Pair:
 F(s(num0),g(x)) -> F(x,g(x))
->-> Instantiated pairs:
 F(s(num0),g(s(num0))) -> F(s(num0),g(s(num0)))

Problem 1: 

Infiniteness Processor:
-> Pairs:
 F(s(num0),g(s(num0))) -> F(s(num0),g(s(num0)))
-> Rules:
 f(s(num0),g(x)) -> f(x,g(x))
 g(s(x)) -> g(x)
-> Pairs in cycle:
 F(s(num0),g(s(num0))) -> F(s(num0),g(s(num0)))

The problem is infinite.
