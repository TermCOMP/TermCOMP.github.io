YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/CuAfN.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) Overlay + Local Confluence [EQUIVALENT, 0 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 0 ms]
(4) QDP
(5) UsableRulesProof [EQUIVALENT, 0 ms]
(6) QDP
(7) QReductionProof [EQUIVALENT, 0 ms]
(8) QDP
(9) QDPSizeChangeProof [EQUIVALENT, 0 ms]
(10) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   r(xs, ys, zs, nil) -> xs
   r(xs, nil, zs, cons(w, ws)) -> r(xs, xs, cons(succ(zero), zs), ws)
   r(xs, cons(y, ys), nil, cons(w, ws)) -> r(xs, xs, cons(succ(zero), nil), ws)
   r(xs, cons(y, ys), cons(z, zs), cons(w, ws)) -> r(ys, cons(y, ys), zs, cons(succ(zero), cons(w, ws)))

Q is empty.

----------------------------------------

(1) Overlay + Local Confluence (EQUIVALENT)
The TRS is overlay and locally confluent. By [NOC] we can switch to innermost.
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   r(xs, ys, zs, nil) -> xs
   r(xs, nil, zs, cons(w, ws)) -> r(xs, xs, cons(succ(zero), zs), ws)
   r(xs, cons(y, ys), nil, cons(w, ws)) -> r(xs, xs, cons(succ(zero), nil), ws)
   r(xs, cons(y, ys), cons(z, zs), cons(w, ws)) -> r(ys, cons(y, ys), zs, cons(succ(zero), cons(w, ws)))

The set Q consists of the following terms:

   r(x0, x1, x2, nil)
   r(x0, nil, x1, cons(x2, x3))
   r(x0, cons(x1, x2), nil, cons(x3, x4))
   r(x0, cons(x1, x2), cons(x3, x4), cons(x5, x6))


----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   R(xs, nil, zs, cons(w, ws)) -> R(xs, xs, cons(succ(zero), zs), ws)
   R(xs, cons(y, ys), nil, cons(w, ws)) -> R(xs, xs, cons(succ(zero), nil), ws)
   R(xs, cons(y, ys), cons(z, zs), cons(w, ws)) -> R(ys, cons(y, ys), zs, cons(succ(zero), cons(w, ws)))

The TRS R consists of the following rules:

   r(xs, ys, zs, nil) -> xs
   r(xs, nil, zs, cons(w, ws)) -> r(xs, xs, cons(succ(zero), zs), ws)
   r(xs, cons(y, ys), nil, cons(w, ws)) -> r(xs, xs, cons(succ(zero), nil), ws)
   r(xs, cons(y, ys), cons(z, zs), cons(w, ws)) -> r(ys, cons(y, ys), zs, cons(succ(zero), cons(w, ws)))

The set Q consists of the following terms:

   r(x0, x1, x2, nil)
   r(x0, nil, x1, cons(x2, x3))
   r(x0, cons(x1, x2), nil, cons(x3, x4))
   r(x0, cons(x1, x2), cons(x3, x4), cons(x5, x6))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   R(xs, nil, zs, cons(w, ws)) -> R(xs, xs, cons(succ(zero), zs), ws)
   R(xs, cons(y, ys), nil, cons(w, ws)) -> R(xs, xs, cons(succ(zero), nil), ws)
   R(xs, cons(y, ys), cons(z, zs), cons(w, ws)) -> R(ys, cons(y, ys), zs, cons(succ(zero), cons(w, ws)))

R is empty.
The set Q consists of the following terms:

   r(x0, x1, x2, nil)
   r(x0, nil, x1, cons(x2, x3))
   r(x0, cons(x1, x2), nil, cons(x3, x4))
   r(x0, cons(x1, x2), cons(x3, x4), cons(x5, x6))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   r(x0, x1, x2, nil)
   r(x0, nil, x1, cons(x2, x3))
   r(x0, cons(x1, x2), nil, cons(x3, x4))
   r(x0, cons(x1, x2), cons(x3, x4), cons(x5, x6))


----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   R(xs, nil, zs, cons(w, ws)) -> R(xs, xs, cons(succ(zero), zs), ws)
   R(xs, cons(y, ys), nil, cons(w, ws)) -> R(xs, xs, cons(succ(zero), nil), ws)
   R(xs, cons(y, ys), cons(z, zs), cons(w, ws)) -> R(ys, cons(y, ys), zs, cons(succ(zero), cons(w, ws)))

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*R(xs, nil, zs, cons(w, ws)) -> R(xs, xs, cons(succ(zero), zs), ws)
The graph contains the following edges 1 >= 1, 1 >= 2, 4 > 4


*R(xs, cons(y, ys), cons(z, zs), cons(w, ws)) -> R(ys, cons(y, ys), zs, cons(succ(zero), cons(w, ws)))
The graph contains the following edges 2 > 1, 2 >= 2, 3 > 3


*R(xs, cons(y, ys), nil, cons(w, ws)) -> R(xs, xs, cons(succ(zero), nil), ws)
The graph contains the following edges 1 >= 1, 1 >= 2, 4 > 4


----------------------------------------

(10)
YES
