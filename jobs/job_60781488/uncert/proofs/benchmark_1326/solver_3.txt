YES

Problem 1: 

(VAR vu95NonEmpty I P V V1 V2 X X1 X2 X3 Y Z)
(RULES
au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
au95u95U11(X1,X2) -> U11(X1,X2)
au95u95U12(tt) -> tt
au95u95U12(X) -> U12(X)
au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
au95u95U22(X1,X2) -> U22(X1,X2)
au95u95U23(tt) -> tt
au95u95U23(X) -> U23(X)
au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
au95u95U31(X1,X2) -> U31(X1,X2)
au95u95U32(tt) -> tt
au95u95U32(X) -> U32(X)
au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
au95u95U42(X1,X2) -> U42(X1,X2)
au95u95U43(tt) -> tt
au95u95U43(X) -> U43(X)
au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
au95u95U52(X1,X2) -> U52(X1,X2)
au95u95U53(tt) -> tt
au95u95U53(X) -> U53(X)
au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
au95u95U61(X1,X2) -> U61(X1,X2)
au95u95U62(tt) -> tt
au95u95U62(X) -> U62(X)
au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
au95u95U71(X1,X2) -> U71(X1,X2)
au95u95U72(tt) -> tt
au95u95U72(X) -> U72(X)
au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
au95u95u95u95(nil,X) -> mark(X)
au95u95u95u95(X,nil) -> mark(X)
au95u95u95u95(X1,X2) -> u95u95(X1,X2)
au95u95and(tt,X) -> mark(X)
au95u95and(X1,X2) -> and(X1,X2)
au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
au95u95isList(nil) -> tt
au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
au95u95isList(X) -> isList(X)
au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
au95u95isNeList(X) -> isNeList(X)
au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
au95u95isNePal(X) -> isNePal(X)
au95u95isPal(nil) -> tt
au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
au95u95isPal(X) -> isPal(X)
au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
au95u95isPalListKind(a) -> tt
au95u95isPalListKind(e) -> tt
au95u95isPalListKind(i) -> tt
au95u95isPalListKind(nil) -> tt
au95u95isPalListKind(o) -> tt
au95u95isPalListKind(u) -> tt
au95u95isPalListKind(X) -> isPalListKind(X)
au95u95isQid(a) -> tt
au95u95isQid(e) -> tt
au95u95isQid(i) -> tt
au95u95isQid(o) -> tt
au95u95isQid(u) -> tt
au95u95isQid(X) -> isQid(X)
mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
mark(U12(X)) -> au95u95U12(mark(X))
mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
mark(U23(X)) -> au95u95U23(mark(X))
mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
mark(U32(X)) -> au95u95U32(mark(X))
mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
mark(U43(X)) -> au95u95U43(mark(X))
mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
mark(U53(X)) -> au95u95U53(mark(X))
mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
mark(U62(X)) -> au95u95U62(mark(X))
mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
mark(U72(X)) -> au95u95U72(mark(X))
mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
mark(a) -> a
mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
mark(e) -> e
mark(i) -> i
mark(isList(X)) -> au95u95isList(X)
mark(isNeList(X)) -> au95u95isNeList(X)
mark(isNePal(X)) -> au95u95isNePal(X)
mark(isPal(X)) -> au95u95isPal(X)
mark(isPalListKind(X)) -> au95u95isPalListKind(X)
mark(isQid(X)) -> au95u95isQid(X)
mark(nil) -> nil
mark(o) -> o
mark(tt) -> tt
mark(u) -> u
)


Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 AU95U95U11(tt,V) -> AU95U95U12(au95u95isNeList(V))
 AU95U95U11(tt,V) -> AU95U95ISNELIST(V)
 AU95U95U21(tt,V1,V2) -> AU95U95U22(au95u95isList(V1),V2)
 AU95U95U21(tt,V1,V2) -> AU95U95ISLIST(V1)
 AU95U95U22(tt,V2) -> AU95U95U23(au95u95isList(V2))
 AU95U95U22(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U31(tt,V) -> AU95U95U32(au95u95isQid(V))
 AU95U95U31(tt,V) -> AU95U95ISQID(V)
 AU95U95U41(tt,V1,V2) -> AU95U95U42(au95u95isList(V1),V2)
 AU95U95U41(tt,V1,V2) -> AU95U95ISLIST(V1)
 AU95U95U42(tt,V2) -> AU95U95U43(au95u95isNeList(V2))
 AU95U95U42(tt,V2) -> AU95U95ISNELIST(V2)
 AU95U95U51(tt,V1,V2) -> AU95U95U52(au95u95isNeList(V1),V2)
 AU95U95U51(tt,V1,V2) -> AU95U95ISNELIST(V1)
 AU95U95U52(tt,V2) -> AU95U95U53(au95u95isList(V2))
 AU95U95U52(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U61(tt,V) -> AU95U95U62(au95u95isQid(V))
 AU95U95U61(tt,V) -> AU95U95ISQID(V)
 AU95U95U71(tt,V) -> AU95U95U72(au95u95isNePal(V))
 AU95U95U71(tt,V) -> AU95U95ISNEPAL(V)
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95U11(au95u95isPalListKind(V),V)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95U31(au95u95isPalListKind(V),V)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95ISQID(I)
 AU95U95ISNEPAL(V) -> AU95U95U61(au95u95isPalListKind(V),V)
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95U71(au95u95isPalListKind(V),V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> AU95U95U11(mark(X1),X2)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> AU95U95U12(mark(X))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> AU95U95U21(mark(X1),X2,X3)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> AU95U95U22(mark(X1),X2)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> AU95U95U23(mark(X))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> AU95U95U31(mark(X1),X2)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> AU95U95U32(mark(X))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> AU95U95U41(mark(X1),X2,X3)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> AU95U95U42(mark(X1),X2)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> AU95U95U43(mark(X))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> AU95U95U51(mark(X1),X2,X3)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> AU95U95U52(mark(X1),X2)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> AU95U95U53(mark(X))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> AU95U95U61(mark(X1),X2)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> AU95U95U62(mark(X))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> AU95U95U71(mark(X1),X2)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> AU95U95U72(mark(X))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
 MARK(isQid(X)) -> AU95U95ISQID(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95U11(tt,V) -> AU95U95U12(au95u95isNeList(V))
 AU95U95U11(tt,V) -> AU95U95ISNELIST(V)
 AU95U95U21(tt,V1,V2) -> AU95U95U22(au95u95isList(V1),V2)
 AU95U95U21(tt,V1,V2) -> AU95U95ISLIST(V1)
 AU95U95U22(tt,V2) -> AU95U95U23(au95u95isList(V2))
 AU95U95U22(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U31(tt,V) -> AU95U95U32(au95u95isQid(V))
 AU95U95U31(tt,V) -> AU95U95ISQID(V)
 AU95U95U41(tt,V1,V2) -> AU95U95U42(au95u95isList(V1),V2)
 AU95U95U41(tt,V1,V2) -> AU95U95ISLIST(V1)
 AU95U95U42(tt,V2) -> AU95U95U43(au95u95isNeList(V2))
 AU95U95U42(tt,V2) -> AU95U95ISNELIST(V2)
 AU95U95U51(tt,V1,V2) -> AU95U95U52(au95u95isNeList(V1),V2)
 AU95U95U51(tt,V1,V2) -> AU95U95ISNELIST(V1)
 AU95U95U52(tt,V2) -> AU95U95U53(au95u95isList(V2))
 AU95U95U52(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U61(tt,V) -> AU95U95U62(au95u95isQid(V))
 AU95U95U61(tt,V) -> AU95U95ISQID(V)
 AU95U95U71(tt,V) -> AU95U95U72(au95u95isNePal(V))
 AU95U95U71(tt,V) -> AU95U95ISNEPAL(V)
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95U11(au95u95isPalListKind(V),V)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95U31(au95u95isPalListKind(V),V)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95ISQID(I)
 AU95U95ISNEPAL(V) -> AU95U95U61(au95u95isPalListKind(V),V)
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95U71(au95u95isPalListKind(V),V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> AU95U95U11(mark(X1),X2)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> AU95U95U12(mark(X))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> AU95U95U21(mark(X1),X2,X3)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> AU95U95U22(mark(X1),X2)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> AU95U95U23(mark(X))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> AU95U95U31(mark(X1),X2)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> AU95U95U32(mark(X))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> AU95U95U41(mark(X1),X2,X3)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> AU95U95U42(mark(X1),X2)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> AU95U95U43(mark(X))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> AU95U95U51(mark(X1),X2,X3)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> AU95U95U52(mark(X1),X2)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> AU95U95U53(mark(X))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> AU95U95U61(mark(X1),X2)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> AU95U95U62(mark(X))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> AU95U95U71(mark(X1),X2)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> AU95U95U72(mark(X))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
 MARK(isQid(X)) -> AU95U95ISQID(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U11(tt,V) -> AU95U95ISNELIST(V)
 AU95U95U21(tt,V1,V2) -> AU95U95U22(au95u95isList(V1),V2)
 AU95U95U21(tt,V1,V2) -> AU95U95ISLIST(V1)
 AU95U95U22(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U41(tt,V1,V2) -> AU95U95U42(au95u95isList(V1),V2)
 AU95U95U41(tt,V1,V2) -> AU95U95ISLIST(V1)
 AU95U95U42(tt,V2) -> AU95U95ISNELIST(V2)
 AU95U95U51(tt,V1,V2) -> AU95U95U52(au95u95isNeList(V1),V2)
 AU95U95U51(tt,V1,V2) -> AU95U95ISNELIST(V1)
 AU95U95U52(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U71(tt,V) -> AU95U95ISNEPAL(V)
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95U11(au95u95isPalListKind(V),V)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95U71(au95u95isPalListKind(V),V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> AU95U95U11(mark(X1),X2)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> AU95U95U21(mark(X1),X2,X3)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> AU95U95U22(mark(X1),X2)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> AU95U95U41(mark(X1),X2,X3)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> AU95U95U42(mark(X1),X2)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> AU95U95U51(mark(X1),X2,X3)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> AU95U95U52(mark(X1),X2)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> AU95U95U71(mark(X1),X2)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95U11(tt,V) -> AU95U95ISNELIST(V)
 AU95U95U21(tt,V1,V2) -> AU95U95U22(au95u95isList(V1),V2)
 AU95U95U21(tt,V1,V2) -> AU95U95ISLIST(V1)
 AU95U95U22(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U41(tt,V1,V2) -> AU95U95U42(au95u95isList(V1),V2)
 AU95U95U41(tt,V1,V2) -> AU95U95ISLIST(V1)
 AU95U95U42(tt,V2) -> AU95U95ISNELIST(V2)
 AU95U95U51(tt,V1,V2) -> AU95U95U52(au95u95isNeList(V1),V2)
 AU95U95U51(tt,V1,V2) -> AU95U95ISNELIST(V1)
 AU95U95U52(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U71(tt,V) -> AU95U95ISNEPAL(V)
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95U11(au95u95isPalListKind(V),V)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95U71(au95u95isPalListKind(V),V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> AU95U95U11(mark(X1),X2)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> AU95U95U21(mark(X1),X2,X3)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> AU95U95U22(mark(X1),X2)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> AU95U95U41(mark(X1),X2,X3)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> AU95U95U42(mark(X1),X2)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> AU95U95U51(mark(X1),X2,X3)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> AU95U95U52(mark(X1),X2)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> AU95U95U71(mark(X1),X2)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = 2.X1 + 2.X2 + 1
[au95u95U12](X) = X + 1
[au95u95U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U22](X1,X2) = X1 + 2.X2 + 1
[au95u95U23](X) = X
[au95u95U31](X1,X2) = 2.X1 + 2.X2
[au95u95U32](X) = 2.X
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U42](X1,X2) = X1 + 2.X2 + 1
[au95u95U43](X) = X + 1
[au95u95U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U52](X1,X2) = X1 + 2.X2 + 2
[au95u95U53](X) = X + 1
[au95u95U61](X1,X2) = 2.X1
[au95u95U62](X) = 2.X
[au95u95U71](X1,X2) = 2.X1
[au95u95U72](X) = 2.X
[au95u95u95u95](X1,X2) = X1 + X2 + 2
[au95u95and](X1,X2) = 2.X1 + 2.X2
[au95u95isList](X) = 2.X + 1
[au95u95isNeList](X) = 2.X
[au95u95isNePal](X) = 0
[au95u95isPal](X) = 0
[au95u95isPalListKind](X) = 0
[au95u95isQid](X) = 0
[mark](X) = X
[U11](X1,X2) = 2.X1 + 2.X2 + 1
[U12](X) = X + 1
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 1
[U23](X) = X
[U31](X1,X2) = 2.X1 + 2.X2
[U32](X) = 2.X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 1
[U43](X) = X + 1
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 2
[U53](X) = X + 1
[U61](X1,X2) = 2.X1
[U62](X) = 2.X
[U71](X1,X2) = 2.X1
[U72](X) = 2.X
[u95u95](X1,X2) = X1 + X2 + 2
[a] = 2
[and](X1,X2) = 2.X1 + 2.X2
[e] = 2
[fSNonEmpty] = 0
[i] = 2
[isList](X) = 2.X + 1
[isNeList](X) = 2.X
[isNePal](X) = 0
[isPal](X) = 0
[isPalListKind](X) = 0
[isQid](X) = 0
[nil] = 1
[o] = 2
[tt] = 0
[u] = 0
[AU95U95U11](X1,X2) = 2.X1 + 2.X2 + 1
[AU95U95U12](X) = 0
[AU95U95U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[AU95U95U22](X1,X2) = X1 + 2.X2 + 1
[AU95U95U23](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X) = 0
[AU95U95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[AU95U95U42](X1,X2) = 2.X2 + 2
[AU95U95U43](X) = 0
[AU95U95U51](X1,X2,X3) = 2.X2 + 2.X3 + 2
[AU95U95U52](X1,X2) = X1 + 2.X2 + 2
[AU95U95U53](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X) = 0
[AU95U95U71](X1,X2) = X1
[AU95U95U72](X) = 0
[AU95U95U95U95](X1,X2) = 2.X1 + 2.X2 + 2
[AU95U95AND](X1,X2) = 2.X2
[AU95U95ISLIST](X) = 2.X + 1
[AU95U95ISNELIST](X) = 2.X
[AU95U95ISNEPAL](X) = 0
[AU95U95ISPAL](X) = 0
[AU95U95ISPALLISTKIND](X) = 0
[AU95U95ISQID](X) = 0
[MARK](X) = 2.X

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95U21(tt,V1,V2) -> AU95U95U22(au95u95isList(V1),V2)
 AU95U95U21(tt,V1,V2) -> AU95U95ISLIST(V1)
 AU95U95U22(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U41(tt,V1,V2) -> AU95U95U42(au95u95isList(V1),V2)
 AU95U95U41(tt,V1,V2) -> AU95U95ISLIST(V1)
 AU95U95U42(tt,V2) -> AU95U95ISNELIST(V2)
 AU95U95U51(tt,V1,V2) -> AU95U95U52(au95u95isNeList(V1),V2)
 AU95U95U51(tt,V1,V2) -> AU95U95ISNELIST(V1)
 AU95U95U52(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U71(tt,V) -> AU95U95ISNEPAL(V)
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95U11(au95u95isPalListKind(V),V)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95U71(au95u95isPalListKind(V),V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> AU95U95U11(mark(X1),X2)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> AU95U95U21(mark(X1),X2,X3)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> AU95U95U22(mark(X1),X2)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> AU95U95U41(mark(X1),X2,X3)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> AU95U95U42(mark(X1),X2)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> AU95U95U51(mark(X1),X2,X3)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> AU95U95U52(mark(X1),X2)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> AU95U95U71(mark(X1),X2)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U21(tt,V1,V2) -> AU95U95U22(au95u95isList(V1),V2)
 AU95U95U21(tt,V1,V2) -> AU95U95ISLIST(V1)
 AU95U95U22(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U41(tt,V1,V2) -> AU95U95U42(au95u95isList(V1),V2)
 AU95U95U41(tt,V1,V2) -> AU95U95ISLIST(V1)
 AU95U95U42(tt,V2) -> AU95U95ISNELIST(V2)
 AU95U95U51(tt,V1,V2) -> AU95U95U52(au95u95isNeList(V1),V2)
 AU95U95U51(tt,V1,V2) -> AU95U95ISNELIST(V1)
 AU95U95U52(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U71(tt,V) -> AU95U95ISNEPAL(V)
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95U71(au95u95isPalListKind(V),V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> AU95U95U21(mark(X1),X2,X3)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> AU95U95U22(mark(X1),X2)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> AU95U95U41(mark(X1),X2,X3)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> AU95U95U42(mark(X1),X2)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> AU95U95U51(mark(X1),X2,X3)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> AU95U95U52(mark(X1),X2)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> AU95U95U71(mark(X1),X2)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95U21(tt,V1,V2) -> AU95U95U22(au95u95isList(V1),V2)
 AU95U95U21(tt,V1,V2) -> AU95U95ISLIST(V1)
 AU95U95U22(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U41(tt,V1,V2) -> AU95U95U42(au95u95isList(V1),V2)
 AU95U95U41(tt,V1,V2) -> AU95U95ISLIST(V1)
 AU95U95U42(tt,V2) -> AU95U95ISNELIST(V2)
 AU95U95U51(tt,V1,V2) -> AU95U95U52(au95u95isNeList(V1),V2)
 AU95U95U51(tt,V1,V2) -> AU95U95ISNELIST(V1)
 AU95U95U52(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U71(tt,V) -> AU95U95ISNEPAL(V)
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95U71(au95u95isPalListKind(V),V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> AU95U95U21(mark(X1),X2,X3)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> AU95U95U22(mark(X1),X2)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> AU95U95U41(mark(X1),X2,X3)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> AU95U95U42(mark(X1),X2)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> AU95U95U51(mark(X1),X2,X3)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> AU95U95U52(mark(X1),X2)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> AU95U95U71(mark(X1),X2)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = X1 + 2.X2 + 1
[au95u95U12](X) = X
[au95u95U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U22](X1,X2) = X1 + 2.X2 + 1
[au95u95U23](X) = X
[au95u95U31](X1,X2) = X1 + 2.X2 + 1
[au95u95U32](X) = X
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U42](X1,X2) = X1 + 2.X2 + 1
[au95u95U43](X) = X
[au95u95U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U52](X1,X2) = X1 + 2.X2 + 1
[au95u95U53](X) = X
[au95u95U61](X1,X2) = 2.X1 + X2 + 2
[au95u95U62](X) = X + 1
[au95u95U71](X1,X2) = 2.X1 + X2 + 2
[au95u95U72](X) = X
[au95u95u95u95](X1,X2) = X1 + X2 + 2
[au95u95and](X1,X2) = X1 + X2
[au95u95isList](X) = 2.X + 1
[au95u95isNeList](X) = 2.X + 1
[au95u95isNePal](X) = X + 2
[au95u95isPal](X) = X + 2
[au95u95isPalListKind](X) = 0
[au95u95isQid](X) = X + 1
[mark](X) = X
[U11](X1,X2) = X1 + 2.X2 + 1
[U12](X) = X
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 1
[U23](X) = X
[U31](X1,X2) = X1 + 2.X2 + 1
[U32](X) = X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 1
[U43](X) = X
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 1
[U53](X) = X
[U61](X1,X2) = 2.X1 + X2 + 2
[U62](X) = X + 1
[U71](X1,X2) = 2.X1 + X2 + 2
[U72](X) = X
[u95u95](X1,X2) = X1 + X2 + 2
[a] = 1
[and](X1,X2) = X1 + X2
[e] = 2
[fSNonEmpty] = 0
[i] = 2
[isList](X) = 2.X + 1
[isNeList](X) = 2.X + 1
[isNePal](X) = X + 2
[isPal](X) = X + 2
[isPalListKind](X) = 0
[isQid](X) = X + 1
[nil] = 2
[o] = 2
[tt] = 0
[u] = 2
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X) = 0
[AU95U95U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[AU95U95U22](X1,X2) = 2.X2 + 1
[AU95U95U23](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X) = 0
[AU95U95U41](X1,X2,X3) = 2.X2 + 2.X3 + 2
[AU95U95U42](X1,X2) = X1 + 2.X2 + 1
[AU95U95U43](X) = 0
[AU95U95U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[AU95U95U52](X1,X2) = X1 + 2.X2 + 1
[AU95U95U53](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X) = 0
[AU95U95U71](X1,X2) = 2.X2 + 2
[AU95U95U72](X) = 0
[AU95U95U95U95](X1,X2) = 2.X1 + 2.X2
[AU95U95AND](X1,X2) = 2.X2 + 1
[AU95U95ISLIST](X) = 2.X + 1
[AU95U95ISNELIST](X) = 2.X + 1
[AU95U95ISNEPAL](X) = 2.X + 2
[AU95U95ISPAL](X) = 2.X + 2
[AU95U95ISPALLISTKIND](X) = 1
[AU95U95ISQID](X) = 0
[MARK](X) = 2.X + 1

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95U21(tt,V1,V2) -> AU95U95ISLIST(V1)
 AU95U95U22(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U41(tt,V1,V2) -> AU95U95U42(au95u95isList(V1),V2)
 AU95U95U41(tt,V1,V2) -> AU95U95ISLIST(V1)
 AU95U95U42(tt,V2) -> AU95U95ISNELIST(V2)
 AU95U95U51(tt,V1,V2) -> AU95U95U52(au95u95isNeList(V1),V2)
 AU95U95U51(tt,V1,V2) -> AU95U95ISNELIST(V1)
 AU95U95U52(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U71(tt,V) -> AU95U95ISNEPAL(V)
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95U71(au95u95isPalListKind(V),V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> AU95U95U21(mark(X1),X2,X3)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> AU95U95U22(mark(X1),X2)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> AU95U95U41(mark(X1),X2,X3)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> AU95U95U42(mark(X1),X2)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> AU95U95U51(mark(X1),X2,X3)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> AU95U95U52(mark(X1),X2)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> AU95U95U71(mark(X1),X2)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U21(tt,V1,V2) -> AU95U95ISLIST(V1)
 AU95U95U22(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U41(tt,V1,V2) -> AU95U95U42(au95u95isList(V1),V2)
 AU95U95U41(tt,V1,V2) -> AU95U95ISLIST(V1)
 AU95U95U42(tt,V2) -> AU95U95ISNELIST(V2)
 AU95U95U51(tt,V1,V2) -> AU95U95U52(au95u95isNeList(V1),V2)
 AU95U95U51(tt,V1,V2) -> AU95U95ISNELIST(V1)
 AU95U95U52(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U71(tt,V) -> AU95U95ISNEPAL(V)
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95U71(au95u95isPalListKind(V),V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> AU95U95U21(mark(X1),X2,X3)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> AU95U95U22(mark(X1),X2)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> AU95U95U41(mark(X1),X2,X3)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> AU95U95U42(mark(X1),X2)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> AU95U95U51(mark(X1),X2,X3)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> AU95U95U52(mark(X1),X2)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> AU95U95U71(mark(X1),X2)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95U21(tt,V1,V2) -> AU95U95ISLIST(V1)
 AU95U95U22(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U41(tt,V1,V2) -> AU95U95U42(au95u95isList(V1),V2)
 AU95U95U41(tt,V1,V2) -> AU95U95ISLIST(V1)
 AU95U95U42(tt,V2) -> AU95U95ISNELIST(V2)
 AU95U95U51(tt,V1,V2) -> AU95U95U52(au95u95isNeList(V1),V2)
 AU95U95U51(tt,V1,V2) -> AU95U95ISNELIST(V1)
 AU95U95U52(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U71(tt,V) -> AU95U95ISNEPAL(V)
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95U71(au95u95isPalListKind(V),V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> AU95U95U21(mark(X1),X2,X3)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> AU95U95U22(mark(X1),X2)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> AU95U95U41(mark(X1),X2,X3)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> AU95U95U42(mark(X1),X2)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> AU95U95U51(mark(X1),X2,X3)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> AU95U95U52(mark(X1),X2)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> AU95U95U71(mark(X1),X2)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = X1 + 2.X2 + 1
[au95u95U12](X) = X
[au95u95U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U22](X1,X2) = X1 + 2.X2 + 1
[au95u95U23](X) = X
[au95u95U31](X1,X2) = 2.X1 + 2.X2 + 1
[au95u95U32](X) = X
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U42](X1,X2) = X1 + 2.X2 + 1
[au95u95U43](X) = X
[au95u95U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U52](X1,X2) = X1 + 2.X2 + 1
[au95u95U53](X) = X
[au95u95U61](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U62](X) = X + 2
[au95u95U71](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U72](X) = X
[au95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[au95u95and](X1,X2) = X1 + 2.X2
[au95u95isList](X) = 2.X + 1
[au95u95isNeList](X) = 2.X + 1
[au95u95isNePal](X) = 2.X + 2
[au95u95isPal](X) = 2.X + 2
[au95u95isPalListKind](X) = 0
[au95u95isQid](X) = 2.X
[mark](X) = X
[U11](X1,X2) = X1 + 2.X2 + 1
[U12](X) = X
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 1
[U23](X) = X
[U31](X1,X2) = 2.X1 + 2.X2 + 1
[U32](X) = X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 1
[U43](X) = X
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 1
[U53](X) = X
[U61](X1,X2) = 2.X1 + 2.X2 + 2
[U62](X) = X + 2
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 2
[and](X1,X2) = X1 + 2.X2
[e] = 1
[fSNonEmpty] = 0
[i] = 0
[isList](X) = 2.X + 1
[isNeList](X) = 2.X + 1
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 2.X
[nil] = 2
[o] = 1
[tt] = 0
[u] = 1
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X) = 0
[AU95U95U21](X1,X2,X3) = 2.X2 + X3 + 2
[AU95U95U22](X1,X2) = X1 + 2.X2 + 1
[AU95U95U23](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X) = 0
[AU95U95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[AU95U95U42](X1,X2) = X1 + 2.X2 + 1
[AU95U95U43](X) = 0
[AU95U95U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[AU95U95U52](X1,X2) = X1 + 2.X2 + 1
[AU95U95U53](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X) = 0
[AU95U95U71](X1,X2) = 2.X1 + 2.X2 + 2
[AU95U95U72](X) = 0
[AU95U95U95U95](X1,X2) = 2.X1 + X2 + 1
[AU95U95AND](X1,X2) = X1 + 2.X2
[AU95U95ISLIST](X) = 2.X + 1
[AU95U95ISNELIST](X) = 2.X + 1
[AU95U95ISNEPAL](X) = 2.X
[AU95U95ISPAL](X) = 2.X + 2
[AU95U95ISPALLISTKIND](X) = 0
[AU95U95ISQID](X) = 0
[MARK](X) = X

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95U22(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U41(tt,V1,V2) -> AU95U95U42(au95u95isList(V1),V2)
 AU95U95U41(tt,V1,V2) -> AU95U95ISLIST(V1)
 AU95U95U42(tt,V2) -> AU95U95ISNELIST(V2)
 AU95U95U51(tt,V1,V2) -> AU95U95U52(au95u95isNeList(V1),V2)
 AU95U95U51(tt,V1,V2) -> AU95U95ISNELIST(V1)
 AU95U95U52(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U71(tt,V) -> AU95U95ISNEPAL(V)
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95U71(au95u95isPalListKind(V),V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> AU95U95U21(mark(X1),X2,X3)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> AU95U95U22(mark(X1),X2)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> AU95U95U41(mark(X1),X2,X3)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> AU95U95U42(mark(X1),X2)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> AU95U95U51(mark(X1),X2,X3)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> AU95U95U52(mark(X1),X2)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> AU95U95U71(mark(X1),X2)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U22(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U41(tt,V1,V2) -> AU95U95U42(au95u95isList(V1),V2)
 AU95U95U41(tt,V1,V2) -> AU95U95ISLIST(V1)
 AU95U95U42(tt,V2) -> AU95U95ISNELIST(V2)
 AU95U95U51(tt,V1,V2) -> AU95U95U52(au95u95isNeList(V1),V2)
 AU95U95U51(tt,V1,V2) -> AU95U95ISNELIST(V1)
 AU95U95U52(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U71(tt,V) -> AU95U95ISNEPAL(V)
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95U71(au95u95isPalListKind(V),V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> AU95U95U22(mark(X1),X2)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> AU95U95U41(mark(X1),X2,X3)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> AU95U95U42(mark(X1),X2)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> AU95U95U51(mark(X1),X2,X3)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> AU95U95U52(mark(X1),X2)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> AU95U95U71(mark(X1),X2)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95U22(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U41(tt,V1,V2) -> AU95U95U42(au95u95isList(V1),V2)
 AU95U95U41(tt,V1,V2) -> AU95U95ISLIST(V1)
 AU95U95U42(tt,V2) -> AU95U95ISNELIST(V2)
 AU95U95U51(tt,V1,V2) -> AU95U95U52(au95u95isNeList(V1),V2)
 AU95U95U51(tt,V1,V2) -> AU95U95ISNELIST(V1)
 AU95U95U52(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U71(tt,V) -> AU95U95ISNEPAL(V)
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95U71(au95u95isPalListKind(V),V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> AU95U95U22(mark(X1),X2)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> AU95U95U41(mark(X1),X2,X3)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> AU95U95U42(mark(X1),X2)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> AU95U95U51(mark(X1),X2,X3)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> AU95U95U52(mark(X1),X2)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> AU95U95U71(mark(X1),X2)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = 2.X1 + 2.X2 + 1
[au95u95U12](X) = X
[au95u95U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U22](X1,X2) = X1 + 2.X2 + 1
[au95u95U23](X) = X
[au95u95U31](X1,X2) = 2.X1 + 2.X2 + 1
[au95u95U32](X) = 2.X + 1
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U42](X1,X2) = X1 + 2.X2 + 1
[au95u95U43](X) = X
[au95u95U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U52](X1,X2) = X1 + 2.X2 + 1
[au95u95U53](X) = X
[au95u95U61](X1,X2) = 2.X1 + X2 + 2
[au95u95U62](X) = X
[au95u95U71](X1,X2) = 2.X1 + X2 + 2
[au95u95U72](X) = X
[au95u95u95u95](X1,X2) = X1 + X2 + 2
[au95u95and](X1,X2) = X1 + X2
[au95u95isList](X) = 2.X + 1
[au95u95isNeList](X) = 2.X + 1
[au95u95isNePal](X) = X + 2
[au95u95isPal](X) = X + 2
[au95u95isPalListKind](X) = 0
[au95u95isQid](X) = X
[mark](X) = X
[U11](X1,X2) = 2.X1 + 2.X2 + 1
[U12](X) = X
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 1
[U23](X) = X
[U31](X1,X2) = 2.X1 + 2.X2 + 1
[U32](X) = 2.X + 1
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 1
[U43](X) = X
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 1
[U53](X) = X
[U61](X1,X2) = 2.X1 + X2 + 2
[U62](X) = X
[U71](X1,X2) = 2.X1 + X2 + 2
[U72](X) = X
[u95u95](X1,X2) = X1 + X2 + 2
[a] = 0
[and](X1,X2) = X1 + X2
[e] = 1
[fSNonEmpty] = 0
[i] = 2
[isList](X) = 2.X + 1
[isNeList](X) = 2.X + 1
[isNePal](X) = X + 2
[isPal](X) = X + 2
[isPalListKind](X) = 0
[isQid](X) = X
[nil] = 2
[o] = 0
[tt] = 0
[u] = 1
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X) = 0
[AU95U95U21](X1,X2,X3) = 0
[AU95U95U22](X1,X2) = X1 + X2 + 1
[AU95U95U23](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X) = 0
[AU95U95U41](X1,X2,X3) = 2.X3 + 2
[AU95U95U42](X1,X2) = 2.X2 + 2
[AU95U95U43](X) = 0
[AU95U95U51](X1,X2,X3) = 2.X1 + 2.X2 + X3 + 1
[AU95U95U52](X1,X2) = X1 + X2
[AU95U95U53](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X) = 0
[AU95U95U71](X1,X2) = 2.X1 + 2.X2 + 2
[AU95U95U72](X) = 0
[AU95U95U95U95](X1,X2) = 2.X1 + 2.X2 + 2
[AU95U95AND](X1,X2) = 2.X2
[AU95U95ISLIST](X) = 0
[AU95U95ISNELIST](X) = 2.X + 1
[AU95U95ISNEPAL](X) = 2.X + 2
[AU95U95ISPAL](X) = 2.X + 2
[AU95U95ISPALLISTKIND](X) = 0
[AU95U95ISQID](X) = 0
[MARK](X) = 2.X

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95U41(tt,V1,V2) -> AU95U95U42(au95u95isList(V1),V2)
 AU95U95U41(tt,V1,V2) -> AU95U95ISLIST(V1)
 AU95U95U42(tt,V2) -> AU95U95ISNELIST(V2)
 AU95U95U51(tt,V1,V2) -> AU95U95U52(au95u95isNeList(V1),V2)
 AU95U95U51(tt,V1,V2) -> AU95U95ISNELIST(V1)
 AU95U95U52(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U71(tt,V) -> AU95U95ISNEPAL(V)
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95U71(au95u95isPalListKind(V),V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> AU95U95U22(mark(X1),X2)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> AU95U95U41(mark(X1),X2,X3)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> AU95U95U42(mark(X1),X2)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> AU95U95U51(mark(X1),X2,X3)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> AU95U95U52(mark(X1),X2)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> AU95U95U71(mark(X1),X2)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U41(tt,V1,V2) -> AU95U95U42(au95u95isList(V1),V2)
 AU95U95U41(tt,V1,V2) -> AU95U95ISLIST(V1)
 AU95U95U42(tt,V2) -> AU95U95ISNELIST(V2)
 AU95U95U51(tt,V1,V2) -> AU95U95U52(au95u95isNeList(V1),V2)
 AU95U95U51(tt,V1,V2) -> AU95U95ISNELIST(V1)
 AU95U95U52(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U71(tt,V) -> AU95U95ISNEPAL(V)
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95U71(au95u95isPalListKind(V),V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> AU95U95U41(mark(X1),X2,X3)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> AU95U95U42(mark(X1),X2)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> AU95U95U51(mark(X1),X2,X3)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> AU95U95U52(mark(X1),X2)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> AU95U95U71(mark(X1),X2)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95U41(tt,V1,V2) -> AU95U95U42(au95u95isList(V1),V2)
 AU95U95U41(tt,V1,V2) -> AU95U95ISLIST(V1)
 AU95U95U42(tt,V2) -> AU95U95ISNELIST(V2)
 AU95U95U51(tt,V1,V2) -> AU95U95U52(au95u95isNeList(V1),V2)
 AU95U95U51(tt,V1,V2) -> AU95U95ISNELIST(V1)
 AU95U95U52(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U71(tt,V) -> AU95U95ISNEPAL(V)
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95U71(au95u95isPalListKind(V),V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> AU95U95U41(mark(X1),X2,X3)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> AU95U95U42(mark(X1),X2)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> AU95U95U51(mark(X1),X2,X3)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> AU95U95U52(mark(X1),X2)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> AU95U95U71(mark(X1),X2)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = 2.X1 + 2.X2 + 1
[au95u95U12](X) = X
[au95u95U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U22](X1,X2) = X1 + 2.X2 + 1
[au95u95U23](X) = X
[au95u95U31](X1,X2) = 2.X1 + 2.X2 + 1
[au95u95U32](X) = X
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U42](X1,X2) = X1 + 2.X2 + 1
[au95u95U43](X) = X
[au95u95U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U52](X1,X2) = X1 + 2.X2 + 1
[au95u95U53](X) = X
[au95u95U61](X1,X2) = X1 + 2.X2 + 2
[au95u95U62](X) = X + 1
[au95u95U71](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U72](X) = X
[au95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[au95u95and](X1,X2) = X1 + X2
[au95u95isList](X) = 2.X + 1
[au95u95isNeList](X) = 2.X + 1
[au95u95isNePal](X) = 2.X + 2
[au95u95isPal](X) = 2.X + 2
[au95u95isPalListKind](X) = 0
[au95u95isQid](X) = 2.X + 1
[mark](X) = X
[U11](X1,X2) = 2.X1 + 2.X2 + 1
[U12](X) = X
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 1
[U23](X) = X
[U31](X1,X2) = 2.X1 + 2.X2 + 1
[U32](X) = X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 1
[U43](X) = X
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 1
[U53](X) = X
[U61](X1,X2) = X1 + 2.X2 + 2
[U62](X) = X + 1
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 2
[and](X1,X2) = X1 + X2
[e] = 0
[fSNonEmpty] = 0
[i] = 0
[isList](X) = 2.X + 1
[isNeList](X) = 2.X + 1
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 2.X + 1
[nil] = 0
[o] = 2
[tt] = 0
[u] = 2
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X) = 0
[AU95U95U21](X1,X2,X3) = 0
[AU95U95U22](X1,X2) = 0
[AU95U95U23](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X) = 0
[AU95U95U41](X1,X2,X3) = 2.X2 + 2.X3 + 2
[AU95U95U42](X1,X2) = 2.X2 + 1
[AU95U95U43](X) = 0
[AU95U95U51](X1,X2,X3) = 2.X2 + 2.X3 + 2
[AU95U95U52](X1,X2) = X1 + 2.X2 + 1
[AU95U95U53](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X) = 0
[AU95U95U71](X1,X2) = 2.X1 + 2.X2 + 2
[AU95U95U72](X) = 0
[AU95U95U95U95](X1,X2) = 2.X1 + X2
[AU95U95AND](X1,X2) = X1 + X2
[AU95U95ISLIST](X) = 2.X + 1
[AU95U95ISNELIST](X) = 2.X + 1
[AU95U95ISNEPAL](X) = 2.X + 1
[AU95U95ISPAL](X) = 2.X + 2
[AU95U95ISPALLISTKIND](X) = 0
[AU95U95ISQID](X) = 0
[MARK](X) = X

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95U41(tt,V1,V2) -> AU95U95ISLIST(V1)
 AU95U95U42(tt,V2) -> AU95U95ISNELIST(V2)
 AU95U95U51(tt,V1,V2) -> AU95U95U52(au95u95isNeList(V1),V2)
 AU95U95U51(tt,V1,V2) -> AU95U95ISNELIST(V1)
 AU95U95U52(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U71(tt,V) -> AU95U95ISNEPAL(V)
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95U71(au95u95isPalListKind(V),V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> AU95U95U41(mark(X1),X2,X3)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> AU95U95U42(mark(X1),X2)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> AU95U95U51(mark(X1),X2,X3)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> AU95U95U52(mark(X1),X2)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> AU95U95U71(mark(X1),X2)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U41(tt,V1,V2) -> AU95U95ISLIST(V1)
 AU95U95U42(tt,V2) -> AU95U95ISNELIST(V2)
 AU95U95U51(tt,V1,V2) -> AU95U95U52(au95u95isNeList(V1),V2)
 AU95U95U51(tt,V1,V2) -> AU95U95ISNELIST(V1)
 AU95U95U52(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U71(tt,V) -> AU95U95ISNEPAL(V)
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95U71(au95u95isPalListKind(V),V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> AU95U95U41(mark(X1),X2,X3)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> AU95U95U42(mark(X1),X2)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> AU95U95U51(mark(X1),X2,X3)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> AU95U95U52(mark(X1),X2)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> AU95U95U71(mark(X1),X2)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95U41(tt,V1,V2) -> AU95U95ISLIST(V1)
 AU95U95U42(tt,V2) -> AU95U95ISNELIST(V2)
 AU95U95U51(tt,V1,V2) -> AU95U95U52(au95u95isNeList(V1),V2)
 AU95U95U51(tt,V1,V2) -> AU95U95ISNELIST(V1)
 AU95U95U52(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U71(tt,V) -> AU95U95ISNEPAL(V)
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95U71(au95u95isPalListKind(V),V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> AU95U95U41(mark(X1),X2,X3)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> AU95U95U42(mark(X1),X2)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> AU95U95U51(mark(X1),X2,X3)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> AU95U95U52(mark(X1),X2)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> AU95U95U71(mark(X1),X2)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = 2.X1 + 2.X2 + 1
[au95u95U12](X) = X
[au95u95U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U22](X1,X2) = X1 + 2.X2 + 1
[au95u95U23](X) = X
[au95u95U31](X1,X2) = 2.X1 + 2.X2 + 1
[au95u95U32](X) = 2.X
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U42](X1,X2) = X1 + 2.X2 + 1
[au95u95U43](X) = X
[au95u95U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U52](X1,X2) = X1 + 2.X2 + 1
[au95u95U53](X) = X
[au95u95U61](X1,X2) = 2.X1 + X2
[au95u95U62](X) = 2.X
[au95u95U71](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U72](X) = 2.X + 2
[au95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[au95u95and](X1,X2) = X1 + X2
[au95u95isList](X) = 2.X + 1
[au95u95isNeList](X) = 2.X + 1
[au95u95isNePal](X) = X
[au95u95isPal](X) = 2.X + 2
[au95u95isPalListKind](X) = 0
[au95u95isQid](X) = 0
[mark](X) = X
[U11](X1,X2) = 2.X1 + 2.X2 + 1
[U12](X) = X
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 1
[U23](X) = X
[U31](X1,X2) = 2.X1 + 2.X2 + 1
[U32](X) = 2.X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 1
[U43](X) = X
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 1
[U53](X) = X
[U61](X1,X2) = 2.X1 + X2
[U62](X) = 2.X
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = 2.X + 2
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 1
[and](X1,X2) = X1 + X2
[e] = 2
[fSNonEmpty] = 0
[i] = 0
[isList](X) = 2.X + 1
[isNeList](X) = 2.X + 1
[isNePal](X) = X
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 0
[nil] = 2
[o] = 1
[tt] = 0
[u] = 0
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X) = 0
[AU95U95U21](X1,X2,X3) = 0
[AU95U95U22](X1,X2) = 0
[AU95U95U23](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X) = 0
[AU95U95U41](X1,X2,X3) = 2.X1 + 2.X2 + X3 + 2
[AU95U95U42](X1,X2) = X1 + 2.X2 + 2
[AU95U95U43](X) = 0
[AU95U95U51](X1,X2,X3) = 2.X1 + 2.X2 + X3 + 2
[AU95U95U52](X1,X2) = X1 + 1
[AU95U95U53](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X) = 0
[AU95U95U71](X1,X2) = 2.X1 + 2.X2 + 2
[AU95U95U72](X) = 0
[AU95U95U95U95](X1,X2) = 2.X1 + X2
[AU95U95AND](X1,X2) = X1 + X2 + 1
[AU95U95ISLIST](X) = 1
[AU95U95ISNELIST](X) = X + 2
[AU95U95ISNEPAL](X) = X + 1
[AU95U95ISPAL](X) = 2.X + 2
[AU95U95ISPALLISTKIND](X) = 1
[AU95U95ISQID](X) = 0
[MARK](X) = X + 1

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95U42(tt,V2) -> AU95U95ISNELIST(V2)
 AU95U95U51(tt,V1,V2) -> AU95U95U52(au95u95isNeList(V1),V2)
 AU95U95U51(tt,V1,V2) -> AU95U95ISNELIST(V1)
 AU95U95U52(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U71(tt,V) -> AU95U95ISNEPAL(V)
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95U71(au95u95isPalListKind(V),V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> AU95U95U41(mark(X1),X2,X3)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> AU95U95U42(mark(X1),X2)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> AU95U95U51(mark(X1),X2,X3)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> AU95U95U52(mark(X1),X2)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> AU95U95U71(mark(X1),X2)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U42(tt,V2) -> AU95U95ISNELIST(V2)
 AU95U95U51(tt,V1,V2) -> AU95U95U52(au95u95isNeList(V1),V2)
 AU95U95U51(tt,V1,V2) -> AU95U95ISNELIST(V1)
 AU95U95U52(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U71(tt,V) -> AU95U95ISNEPAL(V)
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95U71(au95u95isPalListKind(V),V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> AU95U95U42(mark(X1),X2)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> AU95U95U51(mark(X1),X2,X3)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> AU95U95U52(mark(X1),X2)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> AU95U95U71(mark(X1),X2)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95U42(tt,V2) -> AU95U95ISNELIST(V2)
 AU95U95U51(tt,V1,V2) -> AU95U95U52(au95u95isNeList(V1),V2)
 AU95U95U51(tt,V1,V2) -> AU95U95ISNELIST(V1)
 AU95U95U52(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U71(tt,V) -> AU95U95ISNEPAL(V)
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95U71(au95u95isPalListKind(V),V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> AU95U95U42(mark(X1),X2)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> AU95U95U51(mark(X1),X2,X3)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> AU95U95U52(mark(X1),X2)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> AU95U95U71(mark(X1),X2)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = 2.X1 + 2.X2 + 1
[au95u95U12](X) = X
[au95u95U21](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[au95u95U22](X1,X2) = X1 + 2.X2 + 1
[au95u95U23](X) = X
[au95u95U31](X1,X2) = 2.X1 + 2.X2 + 1
[au95u95U32](X) = 2.X
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U42](X1,X2) = X1 + 2.X2 + 1
[au95u95U43](X) = X
[au95u95U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U52](X1,X2) = X1 + 2.X2 + 1
[au95u95U53](X) = X
[au95u95U61](X1,X2) = X1 + X2 + 2
[au95u95U62](X) = 2.X + 2
[au95u95U71](X1,X2) = 2.X1 + X2 + 2
[au95u95U72](X) = X
[au95u95u95u95](X1,X2) = X1 + X2 + 2
[au95u95and](X1,X2) = X1 + X2
[au95u95isList](X) = 2.X + 1
[au95u95isNeList](X) = 2.X + 1
[au95u95isNePal](X) = X + 2
[au95u95isPal](X) = X + 2
[au95u95isPalListKind](X) = 0
[au95u95isQid](X) = 0
[mark](X) = X
[U11](X1,X2) = 2.X1 + 2.X2 + 1
[U12](X) = X
[U21](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 1
[U23](X) = X
[U31](X1,X2) = 2.X1 + 2.X2 + 1
[U32](X) = 2.X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 1
[U43](X) = X
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 1
[U53](X) = X
[U61](X1,X2) = X1 + X2 + 2
[U62](X) = 2.X + 2
[U71](X1,X2) = 2.X1 + X2 + 2
[U72](X) = X
[u95u95](X1,X2) = X1 + X2 + 2
[a] = 1
[and](X1,X2) = X1 + X2
[e] = 2
[fSNonEmpty] = 0
[i] = 1
[isList](X) = 2.X + 1
[isNeList](X) = 2.X + 1
[isNePal](X) = X + 2
[isPal](X) = X + 2
[isPalListKind](X) = 0
[isQid](X) = 0
[nil] = 2
[o] = 2
[tt] = 0
[u] = 1
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X) = 0
[AU95U95U21](X1,X2,X3) = 0
[AU95U95U22](X1,X2) = 0
[AU95U95U23](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95U42](X1,X2) = 2.X1 + X2 + 1
[AU95U95U43](X) = 0
[AU95U95U51](X1,X2,X3) = X2 + X3
[AU95U95U52](X1,X2) = X2
[AU95U95U53](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X) = 0
[AU95U95U71](X1,X2) = 2.X1 + 2.X2 + 1
[AU95U95U72](X) = 0
[AU95U95U95U95](X1,X2) = 2.X1 + 2.X2 + 1
[AU95U95AND](X1,X2) = X1 + 2.X2
[AU95U95ISLIST](X) = 0
[AU95U95ISNELIST](X) = X
[AU95U95ISNEPAL](X) = 2.X + 1
[AU95U95ISPAL](X) = 2.X + 2
[AU95U95ISPALLISTKIND](X) = 0
[AU95U95ISQID](X) = 0
[MARK](X) = 2.X

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95U51(tt,V1,V2) -> AU95U95U52(au95u95isNeList(V1),V2)
 AU95U95U51(tt,V1,V2) -> AU95U95ISNELIST(V1)
 AU95U95U52(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U71(tt,V) -> AU95U95ISNEPAL(V)
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95U71(au95u95isPalListKind(V),V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> AU95U95U42(mark(X1),X2)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> AU95U95U51(mark(X1),X2,X3)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> AU95U95U52(mark(X1),X2)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> AU95U95U71(mark(X1),X2)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U51(tt,V1,V2) -> AU95U95U52(au95u95isNeList(V1),V2)
 AU95U95U51(tt,V1,V2) -> AU95U95ISNELIST(V1)
 AU95U95U52(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U71(tt,V) -> AU95U95ISNEPAL(V)
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95U71(au95u95isPalListKind(V),V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> AU95U95U51(mark(X1),X2,X3)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> AU95U95U52(mark(X1),X2)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> AU95U95U71(mark(X1),X2)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95U51(tt,V1,V2) -> AU95U95U52(au95u95isNeList(V1),V2)
 AU95U95U51(tt,V1,V2) -> AU95U95ISNELIST(V1)
 AU95U95U52(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U71(tt,V) -> AU95U95ISNEPAL(V)
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95U71(au95u95isPalListKind(V),V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> AU95U95U51(mark(X1),X2,X3)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> AU95U95U52(mark(X1),X2)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> AU95U95U71(mark(X1),X2)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = 2.X1 + 2.X2 + 1
[au95u95U12](X) = X
[au95u95U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U22](X1,X2) = X1 + 2.X2 + 1
[au95u95U23](X) = X
[au95u95U31](X1,X2) = X1 + 2.X2 + 1
[au95u95U32](X) = 2.X + 1
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U42](X1,X2) = X1 + 2.X2 + 1
[au95u95U43](X) = X
[au95u95U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U52](X1,X2) = X1 + 2.X2 + 1
[au95u95U53](X) = X
[au95u95U61](X1,X2) = 2.X1 + X2 + 1
[au95u95U62](X) = X + 1
[au95u95U71](X1,X2) = 2.X1 + X2 + 2
[au95u95U72](X) = X + 1
[au95u95u95u95](X1,X2) = X1 + X2 + 1
[au95u95and](X1,X2) = X1 + X2
[au95u95isList](X) = 2.X + 1
[au95u95isNeList](X) = 2.X + 1
[au95u95isNePal](X) = X + 1
[au95u95isPal](X) = X + 2
[au95u95isPalListKind](X) = 0
[au95u95isQid](X) = X
[mark](X) = X
[U11](X1,X2) = 2.X1 + 2.X2 + 1
[U12](X) = X
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 1
[U23](X) = X
[U31](X1,X2) = X1 + 2.X2 + 1
[U32](X) = 2.X + 1
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 1
[U43](X) = X
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 1
[U53](X) = X
[U61](X1,X2) = 2.X1 + X2 + 1
[U62](X) = X + 1
[U71](X1,X2) = 2.X1 + X2 + 2
[U72](X) = X + 1
[u95u95](X1,X2) = X1 + X2 + 1
[a] = 0
[and](X1,X2) = X1 + X2
[e] = 2
[fSNonEmpty] = 0
[i] = 1
[isList](X) = 2.X + 1
[isNeList](X) = 2.X + 1
[isNePal](X) = X + 1
[isPal](X) = X + 2
[isPalListKind](X) = 0
[isQid](X) = X
[nil] = 2
[o] = 1
[tt] = 0
[u] = 2
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X) = 0
[AU95U95U21](X1,X2,X3) = 0
[AU95U95U22](X1,X2) = 0
[AU95U95U23](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95U42](X1,X2) = 0
[AU95U95U43](X) = 0
[AU95U95U51](X1,X2,X3) = 2.X2 + 2.X3 + 2
[AU95U95U52](X1,X2) = X1 + 2.X2
[AU95U95U53](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X) = 0
[AU95U95U71](X1,X2) = 2.X1 + 2.X2 + 2
[AU95U95U72](X) = 0
[AU95U95U95U95](X1,X2) = 2.X1 + 2.X2
[AU95U95AND](X1,X2) = 2.X1 + 2.X2
[AU95U95ISLIST](X) = 2.X
[AU95U95ISNELIST](X) = 2.X + 2
[AU95U95ISNEPAL](X) = 2.X + 2
[AU95U95ISPAL](X) = 2.X + 2
[AU95U95ISPALLISTKIND](X) = 0
[AU95U95ISQID](X) = 0
[MARK](X) = 2.X

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95U51(tt,V1,V2) -> AU95U95ISNELIST(V1)
 AU95U95U52(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U71(tt,V) -> AU95U95ISNEPAL(V)
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95U71(au95u95isPalListKind(V),V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> AU95U95U51(mark(X1),X2,X3)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> AU95U95U52(mark(X1),X2)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> AU95U95U71(mark(X1),X2)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U51(tt,V1,V2) -> AU95U95ISNELIST(V1)
 AU95U95U52(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U71(tt,V) -> AU95U95ISNEPAL(V)
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95U71(au95u95isPalListKind(V),V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> AU95U95U51(mark(X1),X2,X3)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> AU95U95U52(mark(X1),X2)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> AU95U95U71(mark(X1),X2)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95U51(tt,V1,V2) -> AU95U95ISNELIST(V1)
 AU95U95U52(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U71(tt,V) -> AU95U95ISNEPAL(V)
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95U71(au95u95isPalListKind(V),V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> AU95U95U51(mark(X1),X2,X3)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> AU95U95U52(mark(X1),X2)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> AU95U95U71(mark(X1),X2)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = X1 + 2.X2
[au95u95U12](X) = X
[au95u95U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U22](X1,X2) = X1 + 2.X2 + 1
[au95u95U23](X) = X
[au95u95U31](X1,X2) = 2.X1 + 2.X2
[au95u95U32](X) = X
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U42](X1,X2) = X1 + 2.X2 + 1
[au95u95U43](X) = X
[au95u95U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 1
[au95u95U52](X1,X2) = X1 + 2.X2 + 1
[au95u95U53](X) = X
[au95u95U61](X1,X2) = X1 + 2.X2 + 2
[au95u95U62](X) = X + 1
[au95u95U71](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U72](X) = X
[au95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[au95u95and](X1,X2) = X1 + 2.X2
[au95u95isList](X) = 2.X + 1
[au95u95isNeList](X) = 2.X
[au95u95isNePal](X) = 2.X + 2
[au95u95isPal](X) = 2.X + 2
[au95u95isPalListKind](X) = 0
[au95u95isQid](X) = 2.X
[mark](X) = X
[U11](X1,X2) = X1 + 2.X2
[U12](X) = X
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 1
[U23](X) = X
[U31](X1,X2) = 2.X1 + 2.X2
[U32](X) = X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 1
[U43](X) = X
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 1
[U52](X1,X2) = X1 + 2.X2 + 1
[U53](X) = X
[U61](X1,X2) = X1 + 2.X2 + 2
[U62](X) = X + 1
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 1
[and](X1,X2) = X1 + 2.X2
[e] = 1
[fSNonEmpty] = 0
[i] = 2
[isList](X) = 2.X + 1
[isNeList](X) = 2.X
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 2.X
[nil] = 2
[o] = 0
[tt] = 0
[u] = 2
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X) = 0
[AU95U95U21](X1,X2,X3) = 0
[AU95U95U22](X1,X2) = 0
[AU95U95U23](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95U42](X1,X2) = 0
[AU95U95U43](X) = 0
[AU95U95U51](X1,X2,X3) = 2.X2 + 2
[AU95U95U52](X1,X2) = X2 + 2
[AU95U95U53](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X) = 0
[AU95U95U71](X1,X2) = 2.X1 + 2.X2 + 2
[AU95U95U72](X) = 0
[AU95U95U95U95](X1,X2) = 2.X1 + X2 + 2
[AU95U95AND](X1,X2) = X1 + 2.X2 + 1
[AU95U95ISLIST](X) = X + 2
[AU95U95ISNELIST](X) = X + 1
[AU95U95ISNEPAL](X) = 2.X + 2
[AU95U95ISPAL](X) = 2.X + 2
[AU95U95ISPALLISTKIND](X) = 1
[AU95U95ISQID](X) = 0
[MARK](X) = X + 1

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95U52(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U71(tt,V) -> AU95U95ISNEPAL(V)
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95U71(au95u95isPalListKind(V),V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> AU95U95U51(mark(X1),X2,X3)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> AU95U95U52(mark(X1),X2)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> AU95U95U71(mark(X1),X2)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U52(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U71(tt,V) -> AU95U95ISNEPAL(V)
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95U71(au95u95isPalListKind(V),V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> AU95U95U52(mark(X1),X2)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> AU95U95U71(mark(X1),X2)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95U52(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U71(tt,V) -> AU95U95ISNEPAL(V)
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95U71(au95u95isPalListKind(V),V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> AU95U95U52(mark(X1),X2)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> AU95U95U71(mark(X1),X2)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = 2.X1 + 2.X2 + 1
[au95u95U12](X) = X + 1
[au95u95U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U22](X1,X2) = X1 + 2.X2 + 1
[au95u95U23](X) = X
[au95u95U31](X1,X2) = 2.X1 + 2.X2
[au95u95U32](X) = 2.X
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U42](X1,X2) = X1 + 2.X2
[au95u95U43](X) = X
[au95u95U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U52](X1,X2) = X1 + 2.X2 + 2
[au95u95U53](X) = X + 1
[au95u95U61](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U62](X) = 2.X
[au95u95U71](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U72](X) = X
[au95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[au95u95and](X1,X2) = 2.X1 + X2
[au95u95isList](X) = 2.X + 1
[au95u95isNeList](X) = 2.X
[au95u95isNePal](X) = 2.X + 2
[au95u95isPal](X) = 2.X + 2
[au95u95isPalListKind](X) = 0
[au95u95isQid](X) = X
[mark](X) = X
[U11](X1,X2) = 2.X1 + 2.X2 + 1
[U12](X) = X + 1
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 1
[U23](X) = X
[U31](X1,X2) = 2.X1 + 2.X2
[U32](X) = 2.X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2
[U43](X) = X
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 2
[U53](X) = X + 1
[U61](X1,X2) = 2.X1 + 2.X2 + 2
[U62](X) = 2.X
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 0
[and](X1,X2) = 2.X1 + X2
[e] = 2
[fSNonEmpty] = 0
[i] = 1
[isList](X) = 2.X + 1
[isNeList](X) = 2.X
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = X
[nil] = 2
[o] = 2
[tt] = 0
[u] = 0
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X) = 0
[AU95U95U21](X1,X2,X3) = 0
[AU95U95U22](X1,X2) = 0
[AU95U95U23](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95U42](X1,X2) = 0
[AU95U95U43](X) = 0
[AU95U95U51](X1,X2,X3) = 0
[AU95U95U52](X1,X2) = X1 + 2
[AU95U95U53](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X) = 0
[AU95U95U71](X1,X2) = 2.X1 + 2.X2 + 2
[AU95U95U72](X) = 0
[AU95U95U95U95](X1,X2) = 2.X1 + X2 + 2
[AU95U95AND](X1,X2) = X1 + X2 + 1
[AU95U95ISLIST](X) = 1
[AU95U95ISNELIST](X) = 2.X + 1
[AU95U95ISNEPAL](X) = 2.X + 1
[AU95U95ISPAL](X) = 2.X + 2
[AU95U95ISPALLISTKIND](X) = 1
[AU95U95ISQID](X) = 0
[MARK](X) = X + 1

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95U71(tt,V) -> AU95U95ISNEPAL(V)
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95U71(au95u95isPalListKind(V),V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> AU95U95U52(mark(X1),X2)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> AU95U95U71(mark(X1),X2)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U71(tt,V) -> AU95U95ISNEPAL(V)
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95U71(au95u95isPalListKind(V),V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> AU95U95U71(mark(X1),X2)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95U71(tt,V) -> AU95U95ISNEPAL(V)
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95U71(au95u95isPalListKind(V),V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> AU95U95U71(mark(X1),X2)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = 2.X1 + 2.X2 + 1
[au95u95U12](X) = X
[au95u95U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U22](X1,X2) = X1 + 2.X2 + 1
[au95u95U23](X) = X
[au95u95U31](X1,X2) = 2.X1 + 1
[au95u95U32](X) = 2.X
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U42](X1,X2) = X1 + 2.X2 + 1
[au95u95U43](X) = X
[au95u95U51](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[au95u95U52](X1,X2) = X1 + 2.X2 + 1
[au95u95U53](X) = X
[au95u95U61](X1,X2) = X1 + X2 + 2
[au95u95U62](X) = 2.X + 2
[au95u95U71](X1,X2) = 2.X1 + X2 + 2
[au95u95U72](X) = X
[au95u95u95u95](X1,X2) = X1 + X2 + 2
[au95u95and](X1,X2) = X1 + X2
[au95u95isList](X) = 2.X + 1
[au95u95isNeList](X) = 2.X + 1
[au95u95isNePal](X) = X + 2
[au95u95isPal](X) = X + 2
[au95u95isPalListKind](X) = 0
[au95u95isQid](X) = 0
[mark](X) = X
[U11](X1,X2) = 2.X1 + 2.X2 + 1
[U12](X) = X
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 1
[U23](X) = X
[U31](X1,X2) = 2.X1 + 1
[U32](X) = 2.X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 1
[U43](X) = X
[U51](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 1
[U53](X) = X
[U61](X1,X2) = X1 + X2 + 2
[U62](X) = 2.X + 2
[U71](X1,X2) = 2.X1 + X2 + 2
[U72](X) = X
[u95u95](X1,X2) = X1 + X2 + 2
[a] = 2
[and](X1,X2) = X1 + X2
[e] = 1
[fSNonEmpty] = 0
[i] = 0
[isList](X) = 2.X + 1
[isNeList](X) = 2.X + 1
[isNePal](X) = X + 2
[isPal](X) = X + 2
[isPalListKind](X) = 0
[isQid](X) = 0
[nil] = 2
[o] = 2
[tt] = 0
[u] = 0
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X) = 0
[AU95U95U21](X1,X2,X3) = 0
[AU95U95U22](X1,X2) = 0
[AU95U95U23](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95U42](X1,X2) = 0
[AU95U95U43](X) = 0
[AU95U95U51](X1,X2,X3) = 0
[AU95U95U52](X1,X2) = 0
[AU95U95U53](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X) = 0
[AU95U95U71](X1,X2) = X1 + 2.X2 + 2
[AU95U95U72](X) = 0
[AU95U95U95U95](X1,X2) = 2.X1 + 2.X2 + 1
[AU95U95AND](X1,X2) = 2.X1 + 2.X2 + 1
[AU95U95ISLIST](X) = 2
[AU95U95ISNELIST](X) = 2.X + 2
[AU95U95ISNEPAL](X) = 2.X + 1
[AU95U95ISPAL](X) = 2.X + 2
[AU95U95ISPALLISTKIND](X) = 1
[AU95U95ISQID](X) = 0
[MARK](X) = 2.X + 1

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95U71(au95u95isPalListKind(V),V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> AU95U95U71(mark(X1),X2)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = 2.X1
[au95u95U12](X) = 2.X
[au95u95U21](X1,X2,X3) = 2.X1
[au95u95U22](X1,X2) = 2.X1
[au95u95U23](X) = 2.X
[au95u95U31](X1,X2) = 2.X1
[au95u95U32](X) = 2.X
[au95u95U41](X1,X2,X3) = 2.X1
[au95u95U42](X1,X2) = 2.X1
[au95u95U43](X) = 2.X
[au95u95U51](X1,X2,X3) = 2.X1
[au95u95U52](X1,X2) = X1
[au95u95U53](X) = X
[au95u95U61](X1,X2) = X1 + 2.X2 + 1
[au95u95U62](X) = X + 1
[au95u95U71](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U72](X) = X
[au95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[au95u95and](X1,X2) = 2.X1 + X2
[au95u95isList](X) = 0
[au95u95isNeList](X) = 0
[au95u95isNePal](X) = 2.X + 2
[au95u95isPal](X) = 2.X + 2
[au95u95isPalListKind](X) = 0
[au95u95isQid](X) = 0
[mark](X) = X
[U11](X1,X2) = 2.X1
[U12](X) = 2.X
[U21](X1,X2,X3) = 2.X1
[U22](X1,X2) = 2.X1
[U23](X) = 2.X
[U31](X1,X2) = 2.X1
[U32](X) = 2.X
[U41](X1,X2,X3) = 2.X1
[U42](X1,X2) = 2.X1
[U43](X) = 2.X
[U51](X1,X2,X3) = 2.X1
[U52](X1,X2) = X1
[U53](X) = X
[U61](X1,X2) = X1 + 2.X2 + 1
[U62](X) = X + 1
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 0
[and](X1,X2) = 2.X1 + X2
[e] = 1
[fSNonEmpty] = 0
[i] = 0
[isList](X) = 0
[isNeList](X) = 0
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 0
[nil] = 2
[o] = 2
[tt] = 0
[u] = 2
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X) = 0
[AU95U95U21](X1,X2,X3) = 0
[AU95U95U22](X1,X2) = 0
[AU95U95U23](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95U42](X1,X2) = 0
[AU95U95U43](X) = 0
[AU95U95U51](X1,X2,X3) = 0
[AU95U95U52](X1,X2) = 0
[AU95U95U53](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X) = 0
[AU95U95U71](X1,X2) = 0
[AU95U95U72](X) = 0
[AU95U95U95U95](X1,X2) = 2.X1 + X2
[AU95U95AND](X1,X2) = 2.X1 + X2 + 2
[AU95U95ISLIST](X) = 2
[AU95U95ISNELIST](X) = 2
[AU95U95ISNEPAL](X) = 2.X + 2
[AU95U95ISPAL](X) = X + 2
[AU95U95ISPALLISTKIND](X) = 2
[AU95U95ISQID](X) = 0
[MARK](X) = X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = 2.X1 + 2.X2 + 1
[au95u95U12](X) = X
[au95u95U21](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[au95u95U22](X1,X2) = X1 + 2.X2 + 1
[au95u95U23](X) = X
[au95u95U31](X1,X2) = 2.X1 + 2.X2
[au95u95U32](X) = 2.X
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U42](X1,X2) = X1 + 2.X2 + 1
[au95u95U43](X) = X
[au95u95U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U52](X1,X2) = X1 + 2.X2 + 1
[au95u95U53](X) = X
[au95u95U61](X1,X2) = 2.X1 + X2 + 1
[au95u95U62](X) = 2.X + 1
[au95u95U71](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U72](X) = 2.X
[au95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[au95u95and](X1,X2) = X1 + X2
[au95u95isList](X) = 2.X + 1
[au95u95isNeList](X) = 2.X + 1
[au95u95isNePal](X) = X + 1
[au95u95isPal](X) = 2.X + 2
[au95u95isPalListKind](X) = 0
[au95u95isQid](X) = 0
[mark](X) = X
[U11](X1,X2) = 2.X1 + 2.X2 + 1
[U12](X) = X
[U21](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 1
[U23](X) = X
[U31](X1,X2) = 2.X1 + 2.X2
[U32](X) = 2.X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 1
[U43](X) = X
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 1
[U53](X) = X
[U61](X1,X2) = 2.X1 + X2 + 1
[U62](X) = 2.X + 1
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = 2.X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 2
[and](X1,X2) = X1 + X2
[e] = 2
[fSNonEmpty] = 0
[i] = 0
[isList](X) = 2.X + 1
[isNeList](X) = 2.X + 1
[isNePal](X) = X + 1
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 0
[nil] = 2
[o] = 0
[tt] = 0
[u] = 0
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X) = 0
[AU95U95U21](X1,X2,X3) = 0
[AU95U95U22](X1,X2) = 0
[AU95U95U23](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95U42](X1,X2) = 0
[AU95U95U43](X) = 0
[AU95U95U51](X1,X2,X3) = 0
[AU95U95U52](X1,X2) = 0
[AU95U95U53](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X) = 0
[AU95U95U71](X1,X2) = 0
[AU95U95U72](X) = 0
[AU95U95U95U95](X1,X2) = 2.X1 + 2.X2 + 1
[AU95U95AND](X1,X2) = 2.X1 + 2.X2 + 2
[AU95U95ISLIST](X) = 2.X + 2
[AU95U95ISNELIST](X) = 2
[AU95U95ISNEPAL](X) = 2.X + 2
[AU95U95ISPAL](X) = X + 2
[AU95U95ISPALLISTKIND](X) = 2
[AU95U95ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = 2.X1 + 2.X2 + 1
[au95u95U12](X) = X
[au95u95U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U22](X1,X2) = X1 + 2.X2 + 1
[au95u95U23](X) = X
[au95u95U31](X1,X2) = 2.X1 + 2.X2 + 1
[au95u95U32](X) = X + 1
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U42](X1,X2) = X1 + 2.X2 + 1
[au95u95U43](X) = X
[au95u95U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U52](X1,X2) = X1 + 2.X2 + 1
[au95u95U53](X) = X
[au95u95U61](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U62](X) = X
[au95u95U71](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U72](X) = X
[au95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[au95u95and](X1,X2) = X1 + 2.X2
[au95u95isList](X) = 2.X + 1
[au95u95isNeList](X) = 2.X + 1
[au95u95isNePal](X) = 2.X + 2
[au95u95isPal](X) = 2.X + 2
[au95u95isPalListKind](X) = 0
[au95u95isQid](X) = 2.X
[mark](X) = X
[U11](X1,X2) = 2.X1 + 2.X2 + 1
[U12](X) = X
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 1
[U23](X) = X
[U31](X1,X2) = 2.X1 + 2.X2 + 1
[U32](X) = X + 1
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 1
[U43](X) = X
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 1
[U53](X) = X
[U61](X1,X2) = 2.X1 + 2.X2 + 2
[U62](X) = X
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 1
[and](X1,X2) = X1 + 2.X2
[e] = 0
[fSNonEmpty] = 0
[i] = 1
[isList](X) = 2.X + 1
[isNeList](X) = 2.X + 1
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 2.X
[nil] = 2
[o] = 2
[tt] = 0
[u] = 2
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X) = 0
[AU95U95U21](X1,X2,X3) = 0
[AU95U95U22](X1,X2) = 0
[AU95U95U23](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95U42](X1,X2) = 0
[AU95U95U43](X) = 0
[AU95U95U51](X1,X2,X3) = 0
[AU95U95U52](X1,X2) = 0
[AU95U95U53](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X) = 0
[AU95U95U71](X1,X2) = 0
[AU95U95U72](X) = 0
[AU95U95U95U95](X1,X2) = 2.X1 + 2.X2
[AU95U95AND](X1,X2) = 2.X2
[AU95U95ISLIST](X) = 2.X + 2
[AU95U95ISNELIST](X) = 2.X + 2
[AU95U95ISNEPAL](X) = 2.X + 2
[AU95U95ISPAL](X) = 2.X
[AU95U95ISPALLISTKIND](X) = 0
[AU95U95ISQID](X) = 0
[MARK](X) = 2.X

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = X1 + 2.X2
[au95u95U12](X) = X
[au95u95U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U22](X1,X2) = X1 + 2.X2 + 2
[au95u95U23](X) = X + 2
[au95u95U31](X1,X2) = 2.X1 + X2
[au95u95U32](X) = 2.X
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3
[au95u95U42](X1,X2) = X1 + 2.X2
[au95u95U43](X) = X
[au95u95U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U52](X1,X2) = X1 + 2.X2 + 2
[au95u95U53](X) = X + 2
[au95u95U61](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U62](X) = 2.X + 2
[au95u95U71](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U72](X) = X
[au95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[au95u95and](X1,X2) = X1 + 2.X2
[au95u95isList](X) = 2.X
[au95u95isNeList](X) = 2.X
[au95u95isNePal](X) = 2.X + 2
[au95u95isPal](X) = 2.X + 2
[au95u95isPalListKind](X) = 0
[au95u95isQid](X) = 0
[mark](X) = X
[U11](X1,X2) = X1 + 2.X2
[U12](X) = X
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 2
[U23](X) = X + 2
[U31](X1,X2) = 2.X1 + X2
[U32](X) = 2.X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3
[U42](X1,X2) = X1 + 2.X2
[U43](X) = X
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 2
[U53](X) = X + 2
[U61](X1,X2) = 2.X1 + 2.X2 + 2
[U62](X) = 2.X + 2
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 1
[and](X1,X2) = X1 + 2.X2
[e] = 1
[fSNonEmpty] = 0
[i] = 1
[isList](X) = 2.X
[isNeList](X) = 2.X
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 0
[nil] = 1
[o] = 1
[tt] = 0
[u] = 1
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X) = 0
[AU95U95U21](X1,X2,X3) = 0
[AU95U95U22](X1,X2) = 0
[AU95U95U23](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95U42](X1,X2) = 0
[AU95U95U43](X) = 0
[AU95U95U51](X1,X2,X3) = 0
[AU95U95U52](X1,X2) = 0
[AU95U95U53](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X) = 0
[AU95U95U71](X1,X2) = 0
[AU95U95U72](X) = 0
[AU95U95U95U95](X1,X2) = 2.X1 + 2.X2 + 1
[AU95U95AND](X1,X2) = 2.X2 + 2
[AU95U95ISLIST](X) = 2.X + 2
[AU95U95ISNELIST](X) = 2
[AU95U95ISNEPAL](X) = 2.X + 2
[AU95U95ISPAL](X) = 2.X + 2
[AU95U95ISPALLISTKIND](X) = 2
[AU95U95ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = 2.X1 + 2.X2
[au95u95U12](X) = X
[au95u95U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U22](X1,X2) = X1 + 2.X2 + 2
[au95u95U23](X) = X + 2
[au95u95U31](X1,X2) = 2.X1 + 2.X2
[au95u95U32](X) = 2.X
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U42](X1,X2) = X1 + 2.X2 + 2
[au95u95U43](X) = X + 2
[au95u95U51](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[au95u95U52](X1,X2) = X1 + 2.X2 + 2
[au95u95U53](X) = X + 2
[au95u95U61](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U62](X) = 2.X + 2
[au95u95U71](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U72](X) = X
[au95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[au95u95and](X1,X2) = X1 + 2.X2
[au95u95isList](X) = 2.X
[au95u95isNeList](X) = 2.X
[au95u95isNePal](X) = 2.X + 2
[au95u95isPal](X) = 2.X + 2
[au95u95isPalListKind](X) = 0
[au95u95isQid](X) = 0
[mark](X) = X
[U11](X1,X2) = 2.X1 + 2.X2
[U12](X) = X
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 2
[U23](X) = X + 2
[U31](X1,X2) = 2.X1 + 2.X2
[U32](X) = 2.X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 2
[U43](X) = X + 2
[U51](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 2
[U53](X) = X + 2
[U61](X1,X2) = 2.X1 + 2.X2 + 2
[U62](X) = 2.X + 2
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 1
[and](X1,X2) = X1 + 2.X2
[e] = 1
[fSNonEmpty] = 0
[i] = 0
[isList](X) = 2.X
[isNeList](X) = 2.X
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 0
[nil] = 2
[o] = 1
[tt] = 0
[u] = 1
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X) = 0
[AU95U95U21](X1,X2,X3) = 0
[AU95U95U22](X1,X2) = 0
[AU95U95U23](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95U42](X1,X2) = 0
[AU95U95U43](X) = 0
[AU95U95U51](X1,X2,X3) = 0
[AU95U95U52](X1,X2) = 0
[AU95U95U53](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X) = 0
[AU95U95U71](X1,X2) = 0
[AU95U95U72](X) = 0
[AU95U95U95U95](X1,X2) = 2.X1 + X2 + 2
[AU95U95AND](X1,X2) = X1 + X2 + 2
[AU95U95ISLIST](X) = X + 2
[AU95U95ISNELIST](X) = X + 2
[AU95U95ISNEPAL](X) = 2.X + 2
[AU95U95ISPAL](X) = 2
[AU95U95ISPALLISTKIND](X) = 2
[AU95U95ISQID](X) = 0
[MARK](X) = X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = X1 + 2.X2 + 1
[au95u95U12](X) = X + 1
[au95u95U21](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[au95u95U22](X1,X2) = X1 + 2.X2 + 1
[au95u95U23](X) = X
[au95u95U31](X1,X2) = 2.X1 + 2.X2
[au95u95U32](X) = X
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U42](X1,X2) = X1 + 2.X2 + 1
[au95u95U43](X) = X + 1
[au95u95U51](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[au95u95U52](X1,X2) = X1 + 2.X2 + 1
[au95u95U53](X) = X
[au95u95U61](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U62](X) = X + 1
[au95u95U71](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U72](X) = X
[au95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[au95u95and](X1,X2) = X1 + X2
[au95u95isList](X) = 2.X + 1
[au95u95isNeList](X) = 2.X
[au95u95isNePal](X) = 2.X + 2
[au95u95isPal](X) = 2.X + 2
[au95u95isPalListKind](X) = 0
[au95u95isQid](X) = 2.X
[mark](X) = X
[U11](X1,X2) = X1 + 2.X2 + 1
[U12](X) = X + 1
[U21](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 1
[U23](X) = X
[U31](X1,X2) = 2.X1 + 2.X2
[U32](X) = X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 1
[U43](X) = X + 1
[U51](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 1
[U53](X) = X
[U61](X1,X2) = 2.X1 + 2.X2 + 2
[U62](X) = X + 1
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 1
[and](X1,X2) = X1 + X2
[e] = 1
[fSNonEmpty] = 0
[i] = 1
[isList](X) = 2.X + 1
[isNeList](X) = 2.X
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 2.X
[nil] = 2
[o] = 2
[tt] = 0
[u] = 0
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X) = 0
[AU95U95U21](X1,X2,X3) = 0
[AU95U95U22](X1,X2) = 0
[AU95U95U23](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95U42](X1,X2) = 0
[AU95U95U43](X) = 0
[AU95U95U51](X1,X2,X3) = 0
[AU95U95U52](X1,X2) = 0
[AU95U95U53](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X) = 0
[AU95U95U71](X1,X2) = 0
[AU95U95U72](X) = 0
[AU95U95U95U95](X1,X2) = 2.X1 + 2.X2 + 2
[AU95U95AND](X1,X2) = 2.X1 + 2.X2 + 2
[AU95U95ISLIST](X) = 2.X + 2
[AU95U95ISNELIST](X) = 2
[AU95U95ISNEPAL](X) = 2.X + 2
[AU95U95ISPAL](X) = 2.X + 2
[AU95U95ISPALLISTKIND](X) = 2
[AU95U95ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = 2.X1 + 2.X2 + 1
[au95u95U12](X) = X + 1
[au95u95U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U22](X1,X2) = X1 + 2.X2 + 1
[au95u95U23](X) = X
[au95u95U31](X1,X2) = 2.X1 + 2.X2
[au95u95U32](X) = 2.X
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U42](X1,X2) = X1 + 2.X2 + 1
[au95u95U43](X) = X + 1
[au95u95U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U52](X1,X2) = X1 + 2.X2 + 2
[au95u95U53](X) = X + 1
[au95u95U61](X1,X2) = 2.X1 + X2
[au95u95U62](X) = 2.X
[au95u95U71](X1,X2) = X1 + 2.X2 + 1
[au95u95U72](X) = 2.X
[au95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[au95u95and](X1,X2) = X1 + X2
[au95u95isList](X) = 2.X + 1
[au95u95isNeList](X) = 2.X
[au95u95isNePal](X) = X
[au95u95isPal](X) = 2.X + 2
[au95u95isPalListKind](X) = 0
[au95u95isQid](X) = 0
[mark](X) = X
[U11](X1,X2) = 2.X1 + 2.X2 + 1
[U12](X) = X + 1
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 1
[U23](X) = X
[U31](X1,X2) = 2.X1 + 2.X2
[U32](X) = 2.X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 1
[U43](X) = X + 1
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 2
[U53](X) = X + 1
[U61](X1,X2) = 2.X1 + X2
[U62](X) = 2.X
[U71](X1,X2) = X1 + 2.X2 + 1
[U72](X) = 2.X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 1
[and](X1,X2) = X1 + X2
[e] = 1
[fSNonEmpty] = 0
[i] = 1
[isList](X) = 2.X + 1
[isNeList](X) = 2.X
[isNePal](X) = X
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 0
[nil] = 2
[o] = 2
[tt] = 0
[u] = 1
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X) = 0
[AU95U95U21](X1,X2,X3) = 0
[AU95U95U22](X1,X2) = 0
[AU95U95U23](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95U42](X1,X2) = 0
[AU95U95U43](X) = 0
[AU95U95U51](X1,X2,X3) = 0
[AU95U95U52](X1,X2) = 0
[AU95U95U53](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X) = 0
[AU95U95U71](X1,X2) = 0
[AU95U95U72](X) = 0
[AU95U95U95U95](X1,X2) = 2.X1 + 2.X2 + 2
[AU95U95AND](X1,X2) = 2.X2 + 2
[AU95U95ISLIST](X) = 2.X + 2
[AU95U95ISNELIST](X) = 2.X + 2
[AU95U95ISNEPAL](X) = 2.X + 2
[AU95U95ISPAL](X) = 2.X + 2
[AU95U95ISPALLISTKIND](X) = 2
[AU95U95ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = 2.X1 + 2.X2 + 1
[au95u95U12](X) = X + 1
[au95u95U21](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[au95u95U22](X1,X2) = X1 + 2.X2 + 1
[au95u95U23](X) = X
[au95u95U31](X1,X2) = 2.X1
[au95u95U32](X) = 2.X
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U42](X1,X2) = X1 + 2.X2 + 1
[au95u95U43](X) = X + 1
[au95u95U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U52](X1,X2) = X1 + 2.X2 + 2
[au95u95U53](X) = X + 1
[au95u95U61](X1,X2) = 2.X1 + X2
[au95u95U62](X) = 2.X
[au95u95U71](X1,X2) = 2.X1 + X2
[au95u95U72](X) = X
[au95u95u95u95](X1,X2) = X1 + X2 + 2
[au95u95and](X1,X2) = X1 + X2
[au95u95isList](X) = 2.X + 1
[au95u95isNeList](X) = 2.X
[au95u95isNePal](X) = X
[au95u95isPal](X) = X + 2
[au95u95isPalListKind](X) = 0
[au95u95isQid](X) = 0
[mark](X) = X
[U11](X1,X2) = 2.X1 + 2.X2 + 1
[U12](X) = X + 1
[U21](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 1
[U23](X) = X
[U31](X1,X2) = 2.X1
[U32](X) = 2.X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 1
[U43](X) = X + 1
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 2
[U53](X) = X + 1
[U61](X1,X2) = 2.X1 + X2
[U62](X) = 2.X
[U71](X1,X2) = 2.X1 + X2
[U72](X) = X
[u95u95](X1,X2) = X1 + X2 + 2
[a] = 2
[and](X1,X2) = X1 + X2
[e] = 2
[fSNonEmpty] = 0
[i] = 0
[isList](X) = 2.X + 1
[isNeList](X) = 2.X
[isNePal](X) = X
[isPal](X) = X + 2
[isPalListKind](X) = 0
[isQid](X) = 0
[nil] = 2
[o] = 0
[tt] = 0
[u] = 2
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X) = 0
[AU95U95U21](X1,X2,X3) = 0
[AU95U95U22](X1,X2) = 0
[AU95U95U23](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95U42](X1,X2) = 0
[AU95U95U43](X) = 0
[AU95U95U51](X1,X2,X3) = 0
[AU95U95U52](X1,X2) = 0
[AU95U95U53](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X) = 0
[AU95U95U71](X1,X2) = 0
[AU95U95U72](X) = 0
[AU95U95U95U95](X1,X2) = 0
[AU95U95AND](X1,X2) = X2 + 2
[AU95U95ISLIST](X) = X + 2
[AU95U95ISNELIST](X) = 2.X + 2
[AU95U95ISNEPAL](X) = X + 2
[AU95U95ISPAL](X) = X + 2
[AU95U95ISPALLISTKIND](X) = 2
[AU95U95ISQID](X) = 0
[MARK](X) = X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = 2.X1 + 2.X2
[au95u95U12](X) = X
[au95u95U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U22](X1,X2) = X1 + 2.X2 + 1
[au95u95U23](X) = X
[au95u95U31](X1,X2) = 2.X1 + 2.X2
[au95u95U32](X) = 2.X
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U42](X1,X2) = X1 + 2.X2 + 1
[au95u95U43](X) = X
[au95u95U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U52](X1,X2) = X1 + 2.X2 + 2
[au95u95U53](X) = X
[au95u95U61](X1,X2) = 2.X1 + X2
[au95u95U62](X) = 2.X
[au95u95U71](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U72](X) = 2.X
[au95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[au95u95and](X1,X2) = X1 + X2
[au95u95isList](X) = 2.X + 1
[au95u95isNeList](X) = 2.X
[au95u95isNePal](X) = X + 1
[au95u95isPal](X) = 2.X + 2
[au95u95isPalListKind](X) = 0
[au95u95isQid](X) = 0
[mark](X) = X
[U11](X1,X2) = 2.X1 + 2.X2
[U12](X) = X
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 1
[U23](X) = X
[U31](X1,X2) = 2.X1 + 2.X2
[U32](X) = 2.X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 1
[U43](X) = X
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 2
[U53](X) = X
[U61](X1,X2) = 2.X1 + X2
[U62](X) = 2.X
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = 2.X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 1
[and](X1,X2) = X1 + X2
[e] = 1
[fSNonEmpty] = 0
[i] = 1
[isList](X) = 2.X + 1
[isNeList](X) = 2.X
[isNePal](X) = X + 1
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 0
[nil] = 2
[o] = 1
[tt] = 0
[u] = 1
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X) = 0
[AU95U95U21](X1,X2,X3) = 0
[AU95U95U22](X1,X2) = 0
[AU95U95U23](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95U42](X1,X2) = 0
[AU95U95U43](X) = 0
[AU95U95U51](X1,X2,X3) = 0
[AU95U95U52](X1,X2) = 0
[AU95U95U53](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X) = 0
[AU95U95U71](X1,X2) = 0
[AU95U95U72](X) = 0
[AU95U95U95U95](X1,X2) = 0
[AU95U95AND](X1,X2) = 2.X1 + 2.X2 + 2
[AU95U95ISLIST](X) = 2.X + 2
[AU95U95ISNELIST](X) = 2
[AU95U95ISNEPAL](X) = 2.X + 2
[AU95U95ISPAL](X) = 2
[AU95U95ISPALLISTKIND](X) = 2
[AU95U95ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = 2.X1 + 2.X2 + 1
[au95u95U12](X) = X
[au95u95U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U22](X1,X2) = X1 + 2.X2 + 1
[au95u95U23](X) = X
[au95u95U31](X1,X2) = 2.X1 + 2.X2 + 1
[au95u95U32](X) = X + 1
[au95u95U41](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[au95u95U42](X1,X2) = X1 + 2.X2 + 1
[au95u95U43](X) = X
[au95u95U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U52](X1,X2) = X1 + 2.X2 + 1
[au95u95U53](X) = X
[au95u95U61](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U62](X) = X + 2
[au95u95U71](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U72](X) = X
[au95u95u95u95](X1,X2) = 2.X1 + X2 + 1
[au95u95and](X1,X2) = X1 + 2.X2
[au95u95isList](X) = 2.X + 1
[au95u95isNeList](X) = 2.X + 1
[au95u95isNePal](X) = 2.X + 2
[au95u95isPal](X) = 2.X + 2
[au95u95isPalListKind](X) = 0
[au95u95isQid](X) = 2.X
[mark](X) = X
[U11](X1,X2) = 2.X1 + 2.X2 + 1
[U12](X) = X
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 1
[U23](X) = X
[U31](X1,X2) = 2.X1 + 2.X2 + 1
[U32](X) = X + 1
[U41](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 1
[U43](X) = X
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 1
[U53](X) = X
[U61](X1,X2) = 2.X1 + 2.X2 + 2
[U62](X) = X + 2
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 1
[a] = 0
[and](X1,X2) = X1 + 2.X2
[e] = 1
[fSNonEmpty] = 0
[i] = 0
[isList](X) = 2.X + 1
[isNeList](X) = 2.X + 1
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 2.X
[nil] = 1
[o] = 0
[tt] = 0
[u] = 1
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X) = 0
[AU95U95U21](X1,X2,X3) = 0
[AU95U95U22](X1,X2) = 0
[AU95U95U23](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95U42](X1,X2) = 0
[AU95U95U43](X) = 0
[AU95U95U51](X1,X2,X3) = 0
[AU95U95U52](X1,X2) = 0
[AU95U95U53](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X) = 0
[AU95U95U71](X1,X2) = 0
[AU95U95U72](X) = 0
[AU95U95U95U95](X1,X2) = 0
[AU95U95AND](X1,X2) = 2.X2
[AU95U95ISLIST](X) = 2.X + 2
[AU95U95ISNELIST](X) = 2.X + 1
[AU95U95ISNEPAL](X) = 2.X
[AU95U95ISPAL](X) = 2.X
[AU95U95ISPALLISTKIND](X) = 0
[AU95U95ISQID](X) = 0
[MARK](X) = 2.X

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = 2.X1 + 2.X2
[au95u95U12](X) = X
[au95u95U21](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[au95u95U22](X1,X2) = X1 + 2.X2 + 2
[au95u95U23](X) = X + 2
[au95u95U31](X1,X2) = 2.X1 + 2.X2
[au95u95U32](X) = X
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U42](X1,X2) = X1 + 2.X2 + 1
[au95u95U43](X) = X
[au95u95U51](X1,X2,X3) = X1 + 2.X2 + 2.X3
[au95u95U52](X1,X2) = X1 + 2.X2
[au95u95U53](X) = X
[au95u95U61](X1,X2) = 2.X1 + 2.X2
[au95u95U62](X) = X
[au95u95U71](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U72](X) = X
[au95u95u95u95](X1,X2) = 2.X1 + X2 + 1
[au95u95and](X1,X2) = X1 + 2.X2
[au95u95isList](X) = 2.X
[au95u95isNeList](X) = 2.X
[au95u95isNePal](X) = 2.X + 2
[au95u95isPal](X) = 2.X + 2
[au95u95isPalListKind](X) = 0
[au95u95isQid](X) = 2.X
[mark](X) = X
[U11](X1,X2) = 2.X1 + 2.X2
[U12](X) = X
[U21](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 2
[U23](X) = X + 2
[U31](X1,X2) = 2.X1 + 2.X2
[U32](X) = X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 1
[U43](X) = X
[U51](X1,X2,X3) = X1 + 2.X2 + 2.X3
[U52](X1,X2) = X1 + 2.X2
[U53](X) = X
[U61](X1,X2) = 2.X1 + 2.X2
[U62](X) = X
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 1
[a] = 0
[and](X1,X2) = X1 + 2.X2
[e] = 1
[fSNonEmpty] = 0
[i] = 0
[isList](X) = 2.X
[isNeList](X) = 2.X
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 2.X
[nil] = 1
[o] = 1
[tt] = 0
[u] = 1
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X) = 0
[AU95U95U21](X1,X2,X3) = 0
[AU95U95U22](X1,X2) = 0
[AU95U95U23](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95U42](X1,X2) = 0
[AU95U95U43](X) = 0
[AU95U95U51](X1,X2,X3) = 0
[AU95U95U52](X1,X2) = 0
[AU95U95U53](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X) = 0
[AU95U95U71](X1,X2) = 0
[AU95U95U72](X) = 0
[AU95U95U95U95](X1,X2) = 0
[AU95U95AND](X1,X2) = 2.X2 + 2
[AU95U95ISLIST](X) = 0
[AU95U95ISNELIST](X) = X + 2
[AU95U95ISNEPAL](X) = 2.X + 2
[AU95U95ISPAL](X) = X + 2
[AU95U95ISPALLISTKIND](X) = 2
[AU95U95ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = 2.X1 + 2.X2
[au95u95U12](X) = X
[au95u95U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U22](X1,X2) = X1 + 2.X2 + 2
[au95u95U23](X) = X + 2
[au95u95U31](X1,X2) = 2.X1 + 2.X2
[au95u95U32](X) = X
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U42](X1,X2) = X1 + 2.X2 + 2
[au95u95U43](X) = X + 2
[au95u95U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U52](X1,X2) = X1 + 2.X2 + 2
[au95u95U53](X) = X + 1
[au95u95U61](X1,X2) = X1 + 2.X2 + 2
[au95u95U62](X) = X + 2
[au95u95U71](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U72](X) = X
[au95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[au95u95and](X1,X2) = X1 + 2.X2
[au95u95isList](X) = 2.X
[au95u95isNeList](X) = 2.X
[au95u95isNePal](X) = 2.X + 2
[au95u95isPal](X) = 2.X + 2
[au95u95isPalListKind](X) = 0
[au95u95isQid](X) = 2.X
[mark](X) = X
[U11](X1,X2) = 2.X1 + 2.X2
[U12](X) = X
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 2
[U23](X) = X + 2
[U31](X1,X2) = 2.X1 + 2.X2
[U32](X) = X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 2
[U43](X) = X + 2
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 2
[U53](X) = X + 1
[U61](X1,X2) = X1 + 2.X2 + 2
[U62](X) = X + 2
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 1
[and](X1,X2) = X1 + 2.X2
[e] = 1
[fSNonEmpty] = 0
[i] = 1
[isList](X) = 2.X
[isNeList](X) = 2.X
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 2.X
[nil] = 1
[o] = 2
[tt] = 0
[u] = 2
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X) = 0
[AU95U95U21](X1,X2,X3) = 0
[AU95U95U22](X1,X2) = 0
[AU95U95U23](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95U42](X1,X2) = 0
[AU95U95U43](X) = 0
[AU95U95U51](X1,X2,X3) = 0
[AU95U95U52](X1,X2) = 0
[AU95U95U53](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X) = 0
[AU95U95U71](X1,X2) = 0
[AU95U95U72](X) = 0
[AU95U95U95U95](X1,X2) = 0
[AU95U95AND](X1,X2) = 2.X1 + 2.X2 + 2
[AU95U95ISLIST](X) = 0
[AU95U95ISNELIST](X) = X + 2
[AU95U95ISNEPAL](X) = 2.X + 2
[AU95U95ISPAL](X) = 2.X + 2
[AU95U95ISPALLISTKIND](X) = 2
[AU95U95ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = 2.X1 + 2.X2 + 1
[au95u95U12](X) = X
[au95u95U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U22](X1,X2) = X1 + 2.X2 + 1
[au95u95U23](X) = X
[au95u95U31](X1,X2) = 2.X1 + X2 + 1
[au95u95U32](X) = 2.X + 1
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U42](X1,X2) = X1 + 2.X2 + 1
[au95u95U43](X) = X
[au95u95U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U52](X1,X2) = X1 + 2.X2 + 1
[au95u95U53](X) = X
[au95u95U61](X1,X2) = 2.X1 + X2 + 1
[au95u95U62](X) = 2.X
[au95u95U71](X1,X2) = X1 + X2 + 2
[au95u95U72](X) = X
[au95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[au95u95and](X1,X2) = 2.X1 + X2
[au95u95isList](X) = 2.X + 1
[au95u95isNeList](X) = 2.X + 1
[au95u95isNePal](X) = X + 1
[au95u95isPal](X) = X + 2
[au95u95isPalListKind](X) = 0
[au95u95isQid](X) = 0
[mark](X) = X
[U11](X1,X2) = 2.X1 + 2.X2 + 1
[U12](X) = X
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 1
[U23](X) = X
[U31](X1,X2) = 2.X1 + X2 + 1
[U32](X) = 2.X + 1
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 1
[U43](X) = X
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 1
[U53](X) = X
[U61](X1,X2) = 2.X1 + X2 + 1
[U62](X) = 2.X
[U71](X1,X2) = X1 + X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 1
[and](X1,X2) = 2.X1 + X2
[e] = 0
[fSNonEmpty] = 0
[i] = 1
[isList](X) = 2.X + 1
[isNeList](X) = 2.X + 1
[isNePal](X) = X + 1
[isPal](X) = X + 2
[isPalListKind](X) = 0
[isQid](X) = 0
[nil] = 0
[o] = 1
[tt] = 0
[u] = 1
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X) = 0
[AU95U95U21](X1,X2,X3) = 0
[AU95U95U22](X1,X2) = 0
[AU95U95U23](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95U42](X1,X2) = 0
[AU95U95U43](X) = 0
[AU95U95U51](X1,X2,X3) = 0
[AU95U95U52](X1,X2) = 0
[AU95U95U53](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X) = 0
[AU95U95U71](X1,X2) = 0
[AU95U95U72](X) = 0
[AU95U95U95U95](X1,X2) = 0
[AU95U95AND](X1,X2) = 2.X2 + 1
[AU95U95ISLIST](X) = 0
[AU95U95ISNELIST](X) = 2
[AU95U95ISNEPAL](X) = 2.X + 2
[AU95U95ISPAL](X) = X + 2
[AU95U95ISPALLISTKIND](X) = 1
[AU95U95ISQID](X) = 0
[MARK](X) = 2.X + 1

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = 2.X1 + 2.X2
[au95u95U12](X) = X
[au95u95U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U22](X1,X2) = X1 + 2.X2 + 1
[au95u95U23](X) = X + 1
[au95u95U31](X1,X2) = 2.X1 + 2.X2
[au95u95U32](X) = X
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U42](X1,X2) = X1 + 2.X2 + 2
[au95u95U43](X) = X + 2
[au95u95U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3
[au95u95U52](X1,X2) = X1 + 2.X2
[au95u95U53](X) = X
[au95u95U61](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U62](X) = X + 2
[au95u95U71](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U72](X) = X
[au95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[au95u95and](X1,X2) = X1 + 2.X2
[au95u95isList](X) = 2.X
[au95u95isNeList](X) = 2.X
[au95u95isNePal](X) = 2.X + 2
[au95u95isPal](X) = 2.X + 2
[au95u95isPalListKind](X) = 0
[au95u95isQid](X) = 2.X
[mark](X) = X
[U11](X1,X2) = 2.X1 + 2.X2
[U12](X) = X
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 1
[U23](X) = X + 1
[U31](X1,X2) = 2.X1 + 2.X2
[U32](X) = X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 2
[U43](X) = X + 2
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3
[U52](X1,X2) = X1 + 2.X2
[U53](X) = X
[U61](X1,X2) = 2.X1 + 2.X2 + 2
[U62](X) = X + 2
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 2
[and](X1,X2) = X1 + 2.X2
[e] = 1
[fSNonEmpty] = 0
[i] = 1
[isList](X) = 2.X
[isNeList](X) = 2.X
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 2.X
[nil] = 1
[o] = 1
[tt] = 0
[u] = 2
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X) = 0
[AU95U95U21](X1,X2,X3) = 0
[AU95U95U22](X1,X2) = 0
[AU95U95U23](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95U42](X1,X2) = 0
[AU95U95U43](X) = 0
[AU95U95U51](X1,X2,X3) = 0
[AU95U95U52](X1,X2) = 0
[AU95U95U53](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X) = 0
[AU95U95U71](X1,X2) = 0
[AU95U95U72](X) = 0
[AU95U95U95U95](X1,X2) = 0
[AU95U95AND](X1,X2) = X1 + 2.X2 + 2
[AU95U95ISLIST](X) = 0
[AU95U95ISNELIST](X) = 0
[AU95U95ISNEPAL](X) = 2.X + 2
[AU95U95ISPAL](X) = 2.X + 2
[AU95U95ISPALLISTKIND](X) = 2
[AU95U95ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95AND(au95u95isQid(I),isPalListKind(I))
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = 2.X1 + 2.X2 + 1
[au95u95U12](X) = X + 1
[au95u95U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U22](X1,X2) = X1 + 2.X2 + 1
[au95u95U23](X) = X
[au95u95U31](X1,X2) = 2.X1 + 2.X2
[au95u95U32](X) = 2.X
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U42](X1,X2) = X1 + 2.X2 + 1
[au95u95U43](X) = X + 1
[au95u95U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U52](X1,X2) = X1 + 2.X2 + 2
[au95u95U53](X) = X + 1
[au95u95U61](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U62](X) = X + 1
[au95u95U71](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U72](X) = X
[au95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[au95u95and](X1,X2) = X1 + 2.X2
[au95u95isList](X) = 2.X + 1
[au95u95isNeList](X) = 2.X
[au95u95isNePal](X) = 2.X + 2
[au95u95isPal](X) = 2.X + 2
[au95u95isPalListKind](X) = 0
[au95u95isQid](X) = X
[mark](X) = X
[U11](X1,X2) = 2.X1 + 2.X2 + 1
[U12](X) = X + 1
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 1
[U23](X) = X
[U31](X1,X2) = 2.X1 + 2.X2
[U32](X) = 2.X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 1
[U43](X) = X + 1
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 2
[U53](X) = X + 1
[U61](X1,X2) = 2.X1 + 2.X2 + 2
[U62](X) = X + 1
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 1
[and](X1,X2) = X1 + 2.X2
[e] = 1
[fSNonEmpty] = 0
[i] = 1
[isList](X) = 2.X + 1
[isNeList](X) = 2.X
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = X
[nil] = 1
[o] = 1
[tt] = 0
[u] = 1
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X) = 0
[AU95U95U21](X1,X2,X3) = 0
[AU95U95U22](X1,X2) = 0
[AU95U95U23](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95U42](X1,X2) = 0
[AU95U95U43](X) = 0
[AU95U95U51](X1,X2,X3) = 0
[AU95U95U52](X1,X2) = 0
[AU95U95U53](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X) = 0
[AU95U95U71](X1,X2) = 0
[AU95U95U72](X) = 0
[AU95U95U95U95](X1,X2) = 0
[AU95U95AND](X1,X2) = X1 + 2.X2 + 1
[AU95U95ISLIST](X) = 0
[AU95U95ISNELIST](X) = 0
[AU95U95ISNEPAL](X) = 2.X + 1
[AU95U95ISPAL](X) = 2.X + 2
[AU95U95ISPALLISTKIND](X) = 1
[AU95U95ISQID](X) = 0
[MARK](X) = 2.X + 1

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = 2.X1
[au95u95U12](X) = 2.X
[au95u95U21](X1,X2,X3) = 2.X1
[au95u95U22](X1,X2) = 2.X1
[au95u95U23](X) = 2.X
[au95u95U31](X1,X2) = 2.X1
[au95u95U32](X) = 2.X
[au95u95U41](X1,X2,X3) = X1
[au95u95U42](X1,X2) = 2.X1
[au95u95U43](X) = 2.X
[au95u95U51](X1,X2,X3) = 2.X1
[au95u95U52](X1,X2) = X1
[au95u95U53](X) = X
[au95u95U61](X1,X2) = X1 + 2.X2 + 2
[au95u95U62](X) = X
[au95u95U71](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U72](X) = X
[au95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[au95u95and](X1,X2) = X1 + 2.X2
[au95u95isList](X) = 0
[au95u95isNeList](X) = 0
[au95u95isNePal](X) = 2.X + 2
[au95u95isPal](X) = 2.X + 2
[au95u95isPalListKind](X) = 0
[au95u95isQid](X) = 0
[mark](X) = X
[U11](X1,X2) = 2.X1
[U12](X) = 2.X
[U21](X1,X2,X3) = 2.X1
[U22](X1,X2) = 2.X1
[U23](X) = 2.X
[U31](X1,X2) = 2.X1
[U32](X) = 2.X
[U41](X1,X2,X3) = X1
[U42](X1,X2) = 2.X1
[U43](X) = 2.X
[U51](X1,X2,X3) = 2.X1
[U52](X1,X2) = X1
[U53](X) = X
[U61](X1,X2) = X1 + 2.X2 + 2
[U62](X) = X
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 1
[and](X1,X2) = X1 + 2.X2
[e] = 1
[fSNonEmpty] = 0
[i] = 1
[isList](X) = 0
[isNeList](X) = 0
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 0
[nil] = 2
[o] = 2
[tt] = 0
[u] = 2
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X) = 0
[AU95U95U21](X1,X2,X3) = 0
[AU95U95U22](X1,X2) = 0
[AU95U95U23](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95U42](X1,X2) = 0
[AU95U95U43](X) = 0
[AU95U95U51](X1,X2,X3) = 0
[AU95U95U52](X1,X2) = 0
[AU95U95U53](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X) = 0
[AU95U95U71](X1,X2) = 0
[AU95U95U72](X) = 0
[AU95U95U95U95](X1,X2) = 0
[AU95U95AND](X1,X2) = 2.X1 + 2.X2 + 1
[AU95U95ISLIST](X) = 0
[AU95U95ISNELIST](X) = 0
[AU95U95ISNEPAL](X) = 2.X + 2
[AU95U95ISPAL](X) = 2
[AU95U95ISPALLISTKIND](X) = 1
[AU95U95ISQID](X) = 0
[MARK](X) = 2.X + 1

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = 2.X1 + 2.X2 + 1
[au95u95U12](X) = X
[au95u95U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U22](X1,X2) = X1 + 2.X2 + 1
[au95u95U23](X) = X
[au95u95U31](X1,X2) = 2.X1 + 2.X2 + 1
[au95u95U32](X) = X
[au95u95U41](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[au95u95U42](X1,X2) = X1 + 2.X2 + 1
[au95u95U43](X) = X
[au95u95U51](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[au95u95U52](X1,X2) = X1 + 2.X2 + 1
[au95u95U53](X) = X
[au95u95U61](X1,X2) = X1 + 2.X2 + 2
[au95u95U62](X) = X
[au95u95U71](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U72](X) = X
[au95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[au95u95and](X1,X2) = X1 + 2.X2
[au95u95isList](X) = 2.X + 1
[au95u95isNeList](X) = 2.X + 1
[au95u95isNePal](X) = 2.X + 2
[au95u95isPal](X) = 2.X + 2
[au95u95isPalListKind](X) = 0
[au95u95isQid](X) = 2.X + 1
[mark](X) = X
[U11](X1,X2) = 2.X1 + 2.X2 + 1
[U12](X) = X
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 1
[U23](X) = X
[U31](X1,X2) = 2.X1 + 2.X2 + 1
[U32](X) = X
[U41](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 1
[U43](X) = X
[U51](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 1
[U53](X) = X
[U61](X1,X2) = X1 + 2.X2 + 2
[U62](X) = X
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 1
[and](X1,X2) = X1 + 2.X2
[e] = 1
[fSNonEmpty] = 0
[i] = 2
[isList](X) = 2.X + 1
[isNeList](X) = 2.X + 1
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 2.X + 1
[nil] = 2
[o] = 2
[tt] = 0
[u] = 2
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X) = 0
[AU95U95U21](X1,X2,X3) = 0
[AU95U95U22](X1,X2) = 0
[AU95U95U23](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95U42](X1,X2) = 0
[AU95U95U43](X) = 0
[AU95U95U51](X1,X2,X3) = 0
[AU95U95U52](X1,X2) = 0
[AU95U95U53](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X) = 0
[AU95U95U71](X1,X2) = 0
[AU95U95U72](X) = 0
[AU95U95U95U95](X1,X2) = 0
[AU95U95AND](X1,X2) = X1 + 2.X2
[AU95U95ISLIST](X) = 0
[AU95U95ISNELIST](X) = 0
[AU95U95ISNEPAL](X) = 0
[AU95U95ISPAL](X) = X + 2
[AU95U95ISPALLISTKIND](X) = 0
[AU95U95ISQID](X) = 0
[MARK](X) = X

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = 2.X1 + 2.X2 + 1
[au95u95U12](X) = X
[au95u95U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U22](X1,X2) = X1 + 2.X2 + 1
[au95u95U23](X) = X
[au95u95U31](X1,X2) = 2.X1 + 2.X2
[au95u95U32](X) = 2.X
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U42](X1,X2) = X1 + 2.X2 + 1
[au95u95U43](X) = X + 1
[au95u95U51](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[au95u95U52](X1,X2) = X1 + 2.X2 + 2
[au95u95U53](X) = X + 1
[au95u95U61](X1,X2) = X1 + 2.X2 + 2
[au95u95U62](X) = 2.X
[au95u95U71](X1,X2) = X1 + 2.X2 + 2
[au95u95U72](X) = X
[au95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[au95u95and](X1,X2) = 2.X1 + X2
[au95u95isList](X) = 2.X + 1
[au95u95isNeList](X) = 2.X
[au95u95isNePal](X) = 2.X + 2
[au95u95isPal](X) = 2.X + 2
[au95u95isPalListKind](X) = 0
[au95u95isQid](X) = X
[mark](X) = X
[U11](X1,X2) = 2.X1 + 2.X2 + 1
[U12](X) = X
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 1
[U23](X) = X
[U31](X1,X2) = 2.X1 + 2.X2
[U32](X) = 2.X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 1
[U43](X) = X + 1
[U51](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 2
[U53](X) = X + 1
[U61](X1,X2) = X1 + 2.X2 + 2
[U62](X) = 2.X
[U71](X1,X2) = X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 1
[and](X1,X2) = 2.X1 + X2
[e] = 0
[fSNonEmpty] = 0
[i] = 0
[isList](X) = 2.X + 1
[isNeList](X) = 2.X
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = X
[nil] = 1
[o] = 0
[tt] = 0
[u] = 1
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X) = 0
[AU95U95U21](X1,X2,X3) = 0
[AU95U95U22](X1,X2) = 0
[AU95U95U23](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95U42](X1,X2) = 0
[AU95U95U43](X) = 0
[AU95U95U51](X1,X2,X3) = 0
[AU95U95U52](X1,X2) = 0
[AU95U95U53](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X) = 0
[AU95U95U71](X1,X2) = 0
[AU95U95U72](X) = 0
[AU95U95U95U95](X1,X2) = 0
[AU95U95AND](X1,X2) = 2.X2 + 2
[AU95U95ISLIST](X) = 0
[AU95U95ISNELIST](X) = 0
[AU95U95ISNEPAL](X) = 0
[AU95U95ISPAL](X) = 0
[AU95U95ISPALLISTKIND](X) = 2
[AU95U95ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = 2.X1 + 2.X2 + 1
[au95u95U12](X) = X + 1
[au95u95U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U22](X1,X2) = X1 + 2.X2 + 1
[au95u95U23](X) = X
[au95u95U31](X1,X2) = 2.X1 + 2.X2
[au95u95U32](X) = X
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U42](X1,X2) = X1 + 2.X2 + 1
[au95u95U43](X) = X + 1
[au95u95U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U52](X1,X2) = X1 + 2.X2 + 2
[au95u95U53](X) = X + 1
[au95u95U61](X1,X2) = X1 + 2.X2 + 2
[au95u95U62](X) = X
[au95u95U71](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U72](X) = X
[au95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[au95u95and](X1,X2) = X1 + 2.X2
[au95u95isList](X) = 2.X + 1
[au95u95isNeList](X) = 2.X
[au95u95isNePal](X) = 2.X + 2
[au95u95isPal](X) = 2.X + 2
[au95u95isPalListKind](X) = 0
[au95u95isQid](X) = 2.X
[mark](X) = X
[U11](X1,X2) = 2.X1 + 2.X2 + 1
[U12](X) = X + 1
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 1
[U23](X) = X
[U31](X1,X2) = 2.X1 + 2.X2
[U32](X) = X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 1
[U43](X) = X + 1
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 2
[U53](X) = X + 1
[U61](X1,X2) = X1 + 2.X2 + 2
[U62](X) = X
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 2
[and](X1,X2) = X1 + 2.X2
[e] = 2
[fSNonEmpty] = 0
[i] = 2
[isList](X) = 2.X + 1
[isNeList](X) = 2.X
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 2.X
[nil] = 2
[o] = 2
[tt] = 0
[u] = 0
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X) = 0
[AU95U95U21](X1,X2,X3) = 0
[AU95U95U22](X1,X2) = 0
[AU95U95U23](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95U42](X1,X2) = 0
[AU95U95U43](X) = 0
[AU95U95U51](X1,X2,X3) = 0
[AU95U95U52](X1,X2) = 0
[AU95U95U53](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X) = 0
[AU95U95U71](X1,X2) = 0
[AU95U95U72](X) = 0
[AU95U95U95U95](X1,X2) = 0
[AU95U95AND](X1,X2) = X1 + 2.X2 + 2
[AU95U95ISLIST](X) = 0
[AU95U95ISNELIST](X) = 0
[AU95U95ISNEPAL](X) = 0
[AU95U95ISPAL](X) = 0
[AU95U95ISPALLISTKIND](X) = 2
[AU95U95ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = 2.X1 + 2.X2
[au95u95U12](X) = 0
[au95u95U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U22](X1,X2) = X1 + 2.X2 + 2
[au95u95U23](X) = X + 2
[au95u95U31](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U32](X) = X
[au95u95U41](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[au95u95U42](X1,X2) = X1 + 2.X2 + 2
[au95u95U43](X) = X
[au95u95U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U52](X1,X2) = X1 + 2.X2
[au95u95U53](X) = X
[au95u95U61](X1,X2) = X1 + 2.X2 + 2
[au95u95U62](X) = X
[au95u95U71](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U72](X) = X
[au95u95u95u95](X1,X2) = X1 + X2 + 2
[au95u95and](X1,X2) = X1 + X2
[au95u95isList](X) = 2.X
[au95u95isNeList](X) = 2.X + 2
[au95u95isNePal](X) = 2.X + 2
[au95u95isPal](X) = 2.X + 2
[au95u95isPalListKind](X) = 0
[au95u95isQid](X) = X + 2
[mark](X) = X
[U11](X1,X2) = 2.X1 + 2.X2
[U12](X) = 0
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 2
[U23](X) = X + 2
[U31](X1,X2) = 2.X1 + 2.X2 + 2
[U32](X) = X
[U41](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 2
[U43](X) = X
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2
[U53](X) = X
[U61](X1,X2) = X1 + 2.X2 + 2
[U62](X) = X
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = X1 + X2 + 2
[a] = 1
[and](X1,X2) = X1 + X2
[e] = 2
[fSNonEmpty] = 0
[i] = 2
[isList](X) = 2.X
[isNeList](X) = 2.X + 2
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = X + 2
[nil] = 2
[o] = 2
[tt] = 0
[u] = 2
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X) = 0
[AU95U95U21](X1,X2,X3) = 0
[AU95U95U22](X1,X2) = 0
[AU95U95U23](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95U42](X1,X2) = 0
[AU95U95U43](X) = 0
[AU95U95U51](X1,X2,X3) = 0
[AU95U95U52](X1,X2) = 0
[AU95U95U53](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X) = 0
[AU95U95U71](X1,X2) = 0
[AU95U95U72](X) = 0
[AU95U95U95U95](X1,X2) = 0
[AU95U95AND](X1,X2) = 2.X1 + 2.X2 + 2
[AU95U95ISLIST](X) = 0
[AU95U95ISNELIST](X) = 0
[AU95U95ISNEPAL](X) = 0
[AU95U95ISPAL](X) = 0
[AU95U95ISPALLISTKIND](X) = 2
[AU95U95ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = 2.X1 + X2 + 1
[au95u95U12](X) = 0
[au95u95U21](X1,X2,X3) = 2.X1 + 2.X2 + X3 + 2
[au95u95U22](X1,X2) = X1 + X2 + 1
[au95u95U23](X) = X
[au95u95U31](X1,X2) = 2.X1 + 2.X2 + 1
[au95u95U32](X) = X + 1
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U42](X1,X2) = X1 + 2.X2 + 1
[au95u95U43](X) = X
[au95u95U51](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[au95u95U52](X1,X2) = X1 + X2 + 1
[au95u95U53](X) = X
[au95u95U61](X1,X2) = 2.X1 + 2.X2 + 1
[au95u95U62](X) = X + 1
[au95u95U71](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U72](X) = X
[au95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[au95u95and](X1,X2) = X1 + 2.X2
[au95u95isList](X) = X + 1
[au95u95isNeList](X) = 2.X + 1
[au95u95isNePal](X) = 2.X + 2
[au95u95isPal](X) = 2.X + 2
[au95u95isPalListKind](X) = 0
[au95u95isQid](X) = 2.X
[mark](X) = X
[U11](X1,X2) = 2.X1 + X2 + 1
[U12](X) = 0
[U21](X1,X2,X3) = 2.X1 + 2.X2 + X3 + 2
[U22](X1,X2) = X1 + X2 + 1
[U23](X) = X
[U31](X1,X2) = 2.X1 + 2.X2 + 1
[U32](X) = X + 1
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 1
[U43](X) = X
[U51](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + X2 + 1
[U53](X) = X
[U61](X1,X2) = 2.X1 + 2.X2 + 1
[U62](X) = X + 1
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 2
[and](X1,X2) = X1 + 2.X2
[e] = 2
[fSNonEmpty] = 0
[i] = 2
[isList](X) = X + 1
[isNeList](X) = 2.X + 1
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 2.X
[nil] = 1
[o] = 1
[tt] = 0
[u] = 0
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X) = 0
[AU95U95U21](X1,X2,X3) = 0
[AU95U95U22](X1,X2) = 0
[AU95U95U23](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95U42](X1,X2) = 0
[AU95U95U43](X) = 0
[AU95U95U51](X1,X2,X3) = 0
[AU95U95U52](X1,X2) = 0
[AU95U95U53](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X) = 0
[AU95U95U71](X1,X2) = 0
[AU95U95U72](X) = 0
[AU95U95U95U95](X1,X2) = 0
[AU95U95AND](X1,X2) = X1 + 2.X2 + 2
[AU95U95ISLIST](X) = 0
[AU95U95ISNELIST](X) = 0
[AU95U95ISNEPAL](X) = 0
[AU95U95ISPAL](X) = 0
[AU95U95ISPALLISTKIND](X) = 2
[AU95U95ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = 2.X1 + X2
[au95u95U12](X) = 0
[au95u95U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U22](X1,X2) = 2.X2 + 2
[au95u95U23](X) = X + 2
[au95u95U31](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U32](X) = X
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U42](X1,X2) = X1 + 2.X2 + 2
[au95u95U43](X) = X
[au95u95U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U52](X1,X2) = X1 + 2.X2
[au95u95U53](X) = X
[au95u95U61](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U62](X) = X
[au95u95U71](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U72](X) = X
[au95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[au95u95and](X1,X2) = X1 + 2.X2
[au95u95isList](X) = 2.X
[au95u95isNeList](X) = 2.X + 2
[au95u95isNePal](X) = 2.X + 2
[au95u95isPal](X) = 2.X + 2
[au95u95isPalListKind](X) = 0
[au95u95isQid](X) = 2.X + 2
[mark](X) = X
[U11](X1,X2) = 2.X1 + X2
[U12](X) = 0
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = 2.X2 + 2
[U23](X) = X + 2
[U31](X1,X2) = 2.X1 + 2.X2 + 2
[U32](X) = X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 2
[U43](X) = X
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2
[U53](X) = X
[U61](X1,X2) = 2.X1 + 2.X2 + 2
[U62](X) = X
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 1
[and](X1,X2) = X1 + 2.X2
[e] = 2
[fSNonEmpty] = 0
[i] = 2
[isList](X) = 2.X
[isNeList](X) = 2.X + 2
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 2.X + 2
[nil] = 2
[o] = 2
[tt] = 0
[u] = 2
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X) = 0
[AU95U95U21](X1,X2,X3) = 0
[AU95U95U22](X1,X2) = 0
[AU95U95U23](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95U42](X1,X2) = 0
[AU95U95U43](X) = 0
[AU95U95U51](X1,X2,X3) = 0
[AU95U95U52](X1,X2) = 0
[AU95U95U53](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X) = 0
[AU95U95U71](X1,X2) = 0
[AU95U95U72](X) = 0
[AU95U95U95U95](X1,X2) = 0
[AU95U95AND](X1,X2) = 2.X1 + 2.X2 + 2
[AU95U95ISLIST](X) = 0
[AU95U95ISNELIST](X) = 0
[AU95U95ISNEPAL](X) = 0
[AU95U95ISPAL](X) = 0
[AU95U95ISPALLISTKIND](X) = 2
[AU95U95ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = 2.X1 + 2.X2
[au95u95U12](X) = 0
[au95u95U21](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[au95u95U22](X1,X2) = X1 + 2.X2 + 2
[au95u95U23](X) = X + 2
[au95u95U31](X1,X2) = 2.X1 + X2 + 1
[au95u95U32](X) = 2.X + 1
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U42](X1,X2) = X1 + 2.X2 + 2
[au95u95U43](X) = X + 1
[au95u95U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U52](X1,X2) = X1 + 2.X2 + 1
[au95u95U53](X) = X
[au95u95U61](X1,X2) = X1 + 2.X2
[au95u95U62](X) = 2.X
[au95u95U71](X1,X2) = 2.X1 + 2.X2 + 1
[au95u95U72](X) = X
[au95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[au95u95and](X1,X2) = 2.X1 + X2
[au95u95isList](X) = 2.X
[au95u95isNeList](X) = 2.X + 1
[au95u95isNePal](X) = 2.X + 1
[au95u95isPal](X) = 2.X + 1
[au95u95isPalListKind](X) = 0
[au95u95isQid](X) = 0
[mark](X) = X
[U11](X1,X2) = 2.X1 + 2.X2
[U12](X) = 0
[U21](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 2
[U23](X) = X + 2
[U31](X1,X2) = 2.X1 + X2 + 1
[U32](X) = 2.X + 1
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 2
[U43](X) = X + 1
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 1
[U53](X) = X
[U61](X1,X2) = X1 + 2.X2
[U62](X) = 2.X
[U71](X1,X2) = 2.X1 + 2.X2 + 1
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 0
[and](X1,X2) = 2.X1 + X2
[e] = 1
[fSNonEmpty] = 0
[i] = 1
[isList](X) = 2.X
[isNeList](X) = 2.X + 1
[isNePal](X) = 2.X + 1
[isPal](X) = 2.X + 1
[isPalListKind](X) = 0
[isQid](X) = 0
[nil] = 2
[o] = 1
[tt] = 0
[u] = 0
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X) = 0
[AU95U95U21](X1,X2,X3) = 0
[AU95U95U22](X1,X2) = 0
[AU95U95U23](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95U42](X1,X2) = 0
[AU95U95U43](X) = 0
[AU95U95U51](X1,X2,X3) = 0
[AU95U95U52](X1,X2) = 0
[AU95U95U53](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X) = 0
[AU95U95U71](X1,X2) = 0
[AU95U95U72](X) = 0
[AU95U95U95U95](X1,X2) = 0
[AU95U95AND](X1,X2) = X1 + 2.X2 + 2
[AU95U95ISLIST](X) = 0
[AU95U95ISNELIST](X) = 0
[AU95U95ISNEPAL](X) = 0
[AU95U95ISPAL](X) = 0
[AU95U95ISPALLISTKIND](X) = 2
[AU95U95ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = 2.X1 + X2
[au95u95U12](X) = 0
[au95u95U21](X1,X2,X3) = X1 + 2.X2 + X3 + 2
[au95u95U22](X1,X2) = 2.X1 + X2 + 2
[au95u95U23](X) = X + 2
[au95u95U31](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U32](X) = 2.X + 2
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U42](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U43](X) = X
[au95u95U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U52](X1,X2) = X1 + X2
[au95u95U53](X) = X
[au95u95U61](X1,X2) = X1 + 2.X2
[au95u95U62](X) = 2.X
[au95u95U71](X1,X2) = X1 + 2.X2 + 2
[au95u95U72](X) = X + 2
[au95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[au95u95and](X1,X2) = 2.X1 + X2
[au95u95isList](X) = X
[au95u95isNeList](X) = 2.X + 2
[au95u95isNePal](X) = 2.X
[au95u95isPal](X) = 2.X + 2
[au95u95isPalListKind](X) = 0
[au95u95isQid](X) = X
[mark](X) = X
[U11](X1,X2) = 2.X1 + X2
[U12](X) = 0
[U21](X1,X2,X3) = X1 + 2.X2 + X3 + 2
[U22](X1,X2) = 2.X1 + X2 + 2
[U23](X) = X + 2
[U31](X1,X2) = 2.X1 + 2.X2 + 2
[U32](X) = 2.X + 2
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = 2.X1 + 2.X2 + 2
[U43](X) = X
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + X2
[U53](X) = X
[U61](X1,X2) = X1 + 2.X2
[U62](X) = 2.X
[U71](X1,X2) = X1 + 2.X2 + 2
[U72](X) = X + 2
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 2
[and](X1,X2) = 2.X1 + X2
[e] = 2
[fSNonEmpty] = 0
[i] = 1
[isList](X) = X
[isNeList](X) = 2.X + 2
[isNePal](X) = 2.X
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = X
[nil] = 2
[o] = 2
[tt] = 0
[u] = 2
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X) = 0
[AU95U95U21](X1,X2,X3) = 0
[AU95U95U22](X1,X2) = 0
[AU95U95U23](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95U42](X1,X2) = 0
[AU95U95U43](X) = 0
[AU95U95U51](X1,X2,X3) = 0
[AU95U95U52](X1,X2) = 0
[AU95U95U53](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X) = 0
[AU95U95U71](X1,X2) = 0
[AU95U95U72](X) = 0
[AU95U95U95U95](X1,X2) = 0
[AU95U95AND](X1,X2) = 2.X1 + 2.X2 + 2
[AU95U95ISLIST](X) = 0
[AU95U95ISNELIST](X) = 0
[AU95U95ISNEPAL](X) = 0
[AU95U95ISPAL](X) = 0
[AU95U95ISPALLISTKIND](X) = 2
[AU95U95ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = 2.X1 + 2.X2
[au95u95U12](X) = X
[au95u95U21](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[au95u95U22](X1,X2) = X1 + 2.X2 + 2
[au95u95U23](X) = X + 2
[au95u95U31](X1,X2) = X1 + 2.X2
[au95u95U32](X) = 0
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U42](X1,X2) = X1 + 2.X2 + 2
[au95u95U43](X) = X + 2
[au95u95U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U52](X1,X2) = X1 + 2.X2 + 2
[au95u95U53](X) = X + 2
[au95u95U61](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U62](X) = X
[au95u95U71](X1,X2) = X1 + 2.X2 + 2
[au95u95U72](X) = X
[au95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[au95u95and](X1,X2) = X1 + 2.X2
[au95u95isList](X) = 2.X
[au95u95isNeList](X) = 2.X
[au95u95isNePal](X) = 2.X + 2
[au95u95isPal](X) = 2.X + 2
[au95u95isPalListKind](X) = 0
[au95u95isQid](X) = 2
[mark](X) = X
[U11](X1,X2) = 2.X1 + 2.X2
[U12](X) = X
[U21](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 2
[U23](X) = X + 2
[U31](X1,X2) = X1 + 2.X2
[U32](X) = 0
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 2
[U43](X) = X + 2
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 2
[U53](X) = X + 2
[U61](X1,X2) = 2.X1 + 2.X2 + 2
[U62](X) = X
[U71](X1,X2) = X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 2
[and](X1,X2) = X1 + 2.X2
[e] = 0
[fSNonEmpty] = 0
[i] = 2
[isList](X) = 2.X
[isNeList](X) = 2.X
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 2
[nil] = 2
[o] = 2
[tt] = 0
[u] = 0
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X) = 0
[AU95U95U21](X1,X2,X3) = 0
[AU95U95U22](X1,X2) = 0
[AU95U95U23](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95U42](X1,X2) = 0
[AU95U95U43](X) = 0
[AU95U95U51](X1,X2,X3) = 0
[AU95U95U52](X1,X2) = 0
[AU95U95U53](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X) = 0
[AU95U95U71](X1,X2) = 0
[AU95U95U72](X) = 0
[AU95U95U95U95](X1,X2) = 0
[AU95U95AND](X1,X2) = X1 + 2.X2 + 2
[AU95U95ISLIST](X) = 0
[AU95U95ISNELIST](X) = 0
[AU95U95ISNEPAL](X) = 0
[AU95U95ISPAL](X) = 0
[AU95U95ISPALLISTKIND](X) = 2
[AU95U95ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = 2.X2
[au95u95U12](X) = 0
[au95u95U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U22](X1,X2) = X1 + 2.X2 + 2
[au95u95U23](X) = 2
[au95u95U31](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U32](X) = X + 2
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U42](X1,X2) = X1 + 2.X2 + 2
[au95u95U43](X) = X
[au95u95U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U52](X1,X2) = X1 + 2.X2
[au95u95U53](X) = X
[au95u95U61](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U62](X) = X + 2
[au95u95U71](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U72](X) = X
[au95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[au95u95and](X1,X2) = X1 + 2.X2
[au95u95isList](X) = 2.X
[au95u95isNeList](X) = 2.X + 2
[au95u95isNePal](X) = 2.X + 2
[au95u95isPal](X) = 2.X + 2
[au95u95isPalListKind](X) = 0
[au95u95isQid](X) = 2.X
[mark](X) = X
[U11](X1,X2) = 2.X2
[U12](X) = 0
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 2
[U23](X) = 2
[U31](X1,X2) = 2.X1 + 2.X2 + 2
[U32](X) = X + 2
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 2
[U43](X) = X
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2
[U53](X) = X
[U61](X1,X2) = 2.X1 + 2.X2 + 2
[U62](X) = X + 2
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 0
[and](X1,X2) = X1 + 2.X2
[e] = 0
[fSNonEmpty] = 0
[i] = 2
[isList](X) = 2.X
[isNeList](X) = 2.X + 2
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 2.X
[nil] = 2
[o] = 2
[tt] = 0
[u] = 2
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X) = 0
[AU95U95U21](X1,X2,X3) = 0
[AU95U95U22](X1,X2) = 0
[AU95U95U23](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95U42](X1,X2) = 0
[AU95U95U43](X) = 0
[AU95U95U51](X1,X2,X3) = 0
[AU95U95U52](X1,X2) = 0
[AU95U95U53](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X) = 0
[AU95U95U71](X1,X2) = 0
[AU95U95U72](X) = 0
[AU95U95U95U95](X1,X2) = 0
[AU95U95AND](X1,X2) = 2.X1 + 2.X2 + 2
[AU95U95ISLIST](X) = 0
[AU95U95ISNELIST](X) = 0
[AU95U95ISNEPAL](X) = 0
[AU95U95ISPAL](X) = 0
[AU95U95ISPALLISTKIND](X) = 2
[AU95U95ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = 2.X1 + X2
[au95u95U12](X) = 0
[au95u95U21](X1,X2,X3) = X2 + X3 + 2
[au95u95U22](X1,X2) = X2 + 2
[au95u95U23](X) = X + 1
[au95u95U31](X1,X2) = 2.X1 + 2.X2 + 1
[au95u95U32](X) = 0
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U42](X1,X2) = 2.X2 + 2
[au95u95U43](X) = X + 1
[au95u95U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U52](X1,X2) = X1 + 2.X2 + 1
[au95u95U53](X) = X
[au95u95U61](X1,X2) = 2.X1 + 2.X2
[au95u95U62](X) = X
[au95u95U71](X1,X2) = X1 + 2.X2 + 2
[au95u95U72](X) = X + 2
[au95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[au95u95and](X1,X2) = X1 + 2.X2
[au95u95isList](X) = X + 1
[au95u95isNeList](X) = 2.X + 1
[au95u95isNePal](X) = 2.X
[au95u95isPal](X) = 2.X + 2
[au95u95isPalListKind](X) = 0
[au95u95isQid](X) = 2.X
[mark](X) = X
[U11](X1,X2) = 2.X1 + X2
[U12](X) = 0
[U21](X1,X2,X3) = X2 + X3 + 2
[U22](X1,X2) = X2 + 2
[U23](X) = X + 1
[U31](X1,X2) = 2.X1 + 2.X2 + 1
[U32](X) = 0
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = 2.X2 + 2
[U43](X) = X + 1
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 1
[U53](X) = X
[U61](X1,X2) = 2.X1 + 2.X2
[U62](X) = X
[U71](X1,X2) = X1 + 2.X2 + 2
[U72](X) = X + 2
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 1
[and](X1,X2) = X1 + 2.X2
[e] = 2
[fSNonEmpty] = 0
[i] = 0
[isList](X) = X + 1
[isNeList](X) = 2.X + 1
[isNePal](X) = 2.X
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 2.X
[nil] = 2
[o] = 2
[tt] = 0
[u] = 0
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X) = 0
[AU95U95U21](X1,X2,X3) = 0
[AU95U95U22](X1,X2) = 0
[AU95U95U23](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95U42](X1,X2) = 0
[AU95U95U43](X) = 0
[AU95U95U51](X1,X2,X3) = 0
[AU95U95U52](X1,X2) = 0
[AU95U95U53](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X) = 0
[AU95U95U71](X1,X2) = 0
[AU95U95U72](X) = 0
[AU95U95U95U95](X1,X2) = 0
[AU95U95AND](X1,X2) = 2.X1 + 2.X2 + 2
[AU95U95ISLIST](X) = 0
[AU95U95ISNELIST](X) = 0
[AU95U95ISNEPAL](X) = 0
[AU95U95ISPAL](X) = 0
[AU95U95ISPALLISTKIND](X) = 2
[AU95U95ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = 2.X1 + 2.X2
[au95u95U12](X) = 0
[au95u95U21](X1,X2,X3) = 2.X1 + X3 + 2
[au95u95U22](X1,X2) = 1
[au95u95U23](X) = 1
[au95u95U31](X1,X2) = 2.X1 + 2.X2
[au95u95U32](X) = X
[au95u95U41](X1,X2,X3) = 2.X1 + X2 + 2.X3 + 2
[au95u95U42](X1,X2) = 2.X2 + 2
[au95u95U43](X) = X + 2
[au95u95U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U52](X1,X2) = X1 + 2.X2 + 2
[au95u95U53](X) = X + 1
[au95u95U61](X1,X2) = 2.X1 + 2.X2 + 1
[au95u95U62](X) = X + 1
[au95u95U71](X1,X2) = 2.X1 + 2.X2 + 1
[au95u95U72](X) = X
[au95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[au95u95and](X1,X2) = X1 + 2.X2
[au95u95isList](X) = 2.X + 1
[au95u95isNeList](X) = 2.X
[au95u95isNePal](X) = 2.X + 1
[au95u95isPal](X) = 2.X + 1
[au95u95isPalListKind](X) = 0
[au95u95isQid](X) = 2.X
[mark](X) = X
[U11](X1,X2) = 2.X1 + 2.X2
[U12](X) = 0
[U21](X1,X2,X3) = 2.X1 + X3 + 2
[U22](X1,X2) = 1
[U23](X) = 1
[U31](X1,X2) = 2.X1 + 2.X2
[U32](X) = X
[U41](X1,X2,X3) = 2.X1 + X2 + 2.X3 + 2
[U42](X1,X2) = 2.X2 + 2
[U43](X) = X + 2
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 2
[U53](X) = X + 1
[U61](X1,X2) = 2.X1 + 2.X2 + 1
[U62](X) = X + 1
[U71](X1,X2) = 2.X1 + 2.X2 + 1
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 1
[and](X1,X2) = X1 + 2.X2
[e] = 2
[fSNonEmpty] = 0
[i] = 2
[isList](X) = 2.X + 1
[isNeList](X) = 2.X
[isNePal](X) = 2.X + 1
[isPal](X) = 2.X + 1
[isPalListKind](X) = 0
[isQid](X) = 2.X
[nil] = 2
[o] = 2
[tt] = 0
[u] = 2
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X) = 0
[AU95U95U21](X1,X2,X3) = 0
[AU95U95U22](X1,X2) = 0
[AU95U95U23](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95U42](X1,X2) = 0
[AU95U95U43](X) = 0
[AU95U95U51](X1,X2,X3) = 0
[AU95U95U52](X1,X2) = 0
[AU95U95U53](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X) = 0
[AU95U95U71](X1,X2) = 0
[AU95U95U72](X) = 0
[AU95U95U95U95](X1,X2) = 0
[AU95U95AND](X1,X2) = 2.X1 + 2.X2 + 2
[AU95U95ISLIST](X) = 0
[AU95U95ISNELIST](X) = 0
[AU95U95ISNEPAL](X) = 0
[AU95U95ISPAL](X) = 0
[AU95U95ISPALLISTKIND](X) = 2
[AU95U95ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = 2.X1 + 2.X2
[au95u95U12](X) = X
[au95u95U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U22](X1,X2) = X1 + 2.X2 + 2
[au95u95U23](X) = 2
[au95u95U31](X1,X2) = 2.X1 + 2.X2
[au95u95U32](X) = 2.X
[au95u95U41](X1,X2,X3) = 2.X2 + 2.X3 + 2
[au95u95U42](X1,X2) = X1 + 2.X2 + 2
[au95u95U43](X) = 1
[au95u95U51](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[au95u95U52](X1,X2) = X1 + 2.X2 + 2
[au95u95U53](X) = X
[au95u95U61](X1,X2) = X1 + 2.X2 + 2
[au95u95U62](X) = 2.X + 2
[au95u95U71](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U72](X) = X
[au95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[au95u95and](X1,X2) = 2.X1 + X2
[au95u95isList](X) = 2.X
[au95u95isNeList](X) = 2.X
[au95u95isNePal](X) = 2.X + 2
[au95u95isPal](X) = 2.X + 2
[au95u95isPalListKind](X) = 0
[au95u95isQid](X) = X
[mark](X) = X
[U11](X1,X2) = 2.X1 + 2.X2
[U12](X) = X
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 2
[U23](X) = 2
[U31](X1,X2) = 2.X1 + 2.X2
[U32](X) = 2.X
[U41](X1,X2,X3) = 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 2
[U43](X) = 1
[U51](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 2
[U53](X) = X
[U61](X1,X2) = X1 + 2.X2 + 2
[U62](X) = 2.X + 2
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 1
[and](X1,X2) = 2.X1 + X2
[e] = 1
[fSNonEmpty] = 0
[i] = 1
[isList](X) = 2.X
[isNeList](X) = 2.X
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = X
[nil] = 1
[o] = 1
[tt] = 0
[u] = 0
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X) = 0
[AU95U95U21](X1,X2,X3) = 0
[AU95U95U22](X1,X2) = 0
[AU95U95U23](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95U42](X1,X2) = 0
[AU95U95U43](X) = 0
[AU95U95U51](X1,X2,X3) = 0
[AU95U95U52](X1,X2) = 0
[AU95U95U53](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X) = 0
[AU95U95U71](X1,X2) = 0
[AU95U95U72](X) = 0
[AU95U95U95U95](X1,X2) = 0
[AU95U95AND](X1,X2) = 2.X2 + 2
[AU95U95ISLIST](X) = 0
[AU95U95ISNELIST](X) = 0
[AU95U95ISNEPAL](X) = 0
[AU95U95ISPAL](X) = 0
[AU95U95ISPALLISTKIND](X) = 2
[AU95U95ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = 2.X1 + 2.X2 + 1
[au95u95U12](X) = 0
[au95u95U21](X1,X2,X3) = 2.X1 + X2 + 2.X3 + 2
[au95u95U22](X1,X2) = 2.X2 + 2
[au95u95U23](X) = 2
[au95u95U31](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U32](X) = 2.X + 2
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U42](X1,X2) = X1 + 2.X2
[au95u95U43](X) = 0
[au95u95U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U52](X1,X2) = 2.X2 + 2
[au95u95U53](X) = X + 1
[au95u95U61](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U62](X) = X + 2
[au95u95U71](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U72](X) = X
[au95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[au95u95and](X1,X2) = X1 + 2.X2
[au95u95isList](X) = 2.X + 1
[au95u95isNeList](X) = 2.X + 2
[au95u95isNePal](X) = 2.X + 2
[au95u95isPal](X) = 2.X + 2
[au95u95isPalListKind](X) = 0
[au95u95isQid](X) = X
[mark](X) = X
[U11](X1,X2) = 2.X1 + 2.X2 + 1
[U12](X) = 0
[U21](X1,X2,X3) = 2.X1 + X2 + 2.X3 + 2
[U22](X1,X2) = 2.X2 + 2
[U23](X) = 2
[U31](X1,X2) = 2.X1 + 2.X2 + 2
[U32](X) = 2.X + 2
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2
[U43](X) = 0
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = 2.X2 + 2
[U53](X) = X + 1
[U61](X1,X2) = 2.X1 + 2.X2 + 2
[U62](X) = X + 2
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 0
[and](X1,X2) = X1 + 2.X2
[e] = 0
[fSNonEmpty] = 0
[i] = 0
[isList](X) = 2.X + 1
[isNeList](X) = 2.X + 2
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = X
[nil] = 0
[o] = 0
[tt] = 0
[u] = 1
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X) = 0
[AU95U95U21](X1,X2,X3) = 0
[AU95U95U22](X1,X2) = 0
[AU95U95U23](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95U42](X1,X2) = 0
[AU95U95U43](X) = 0
[AU95U95U51](X1,X2,X3) = 0
[AU95U95U52](X1,X2) = 0
[AU95U95U53](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X) = 0
[AU95U95U71](X1,X2) = 0
[AU95U95U72](X) = 0
[AU95U95U95U95](X1,X2) = 0
[AU95U95AND](X1,X2) = 2.X1 + 2.X2
[AU95U95ISLIST](X) = 0
[AU95U95ISNELIST](X) = 0
[AU95U95ISNEPAL](X) = 0
[AU95U95ISPAL](X) = 0
[AU95U95ISPALLISTKIND](X) = 0
[AU95U95ISQID](X) = 0
[MARK](X) = 2.X

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U12](X) = 2
[au95u95U21](X1,X2,X3) = 2.X1 + X2 + 2.X3 + 2
[au95u95U22](X1,X2) = 2.X2 + 2
[au95u95U23](X) = 1
[au95u95U31](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U32](X) = 2.X
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U42](X1,X2) = 2.X2 + 2
[au95u95U43](X) = 0
[au95u95U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U52](X1,X2) = 2.X2 + 2
[au95u95U53](X) = X
[au95u95U61](X1,X2) = X1 + X2 + 2
[au95u95U62](X) = 2.X + 2
[au95u95U71](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U72](X) = X
[au95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[au95u95and](X1,X2) = X1 + X2
[au95u95isList](X) = 2.X + 2
[au95u95isNeList](X) = 2.X + 2
[au95u95isNePal](X) = X + 2
[au95u95isPal](X) = 2.X + 2
[au95u95isPalListKind](X) = 0
[au95u95isQid](X) = 0
[mark](X) = X
[U11](X1,X2) = 2.X1 + 2.X2 + 2
[U12](X) = 2
[U21](X1,X2,X3) = 2.X1 + X2 + 2.X3 + 2
[U22](X1,X2) = 2.X2 + 2
[U23](X) = 1
[U31](X1,X2) = 2.X1 + 2.X2 + 2
[U32](X) = 2.X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = 2.X2 + 2
[U43](X) = 0
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = 2.X2 + 2
[U53](X) = X
[U61](X1,X2) = X1 + X2 + 2
[U62](X) = 2.X + 2
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 0
[and](X1,X2) = X1 + X2
[e] = 1
[fSNonEmpty] = 0
[i] = 1
[isList](X) = 2.X + 2
[isNeList](X) = 2.X + 2
[isNePal](X) = X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 0
[nil] = 1
[o] = 1
[tt] = 0
[u] = 1
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X) = 0
[AU95U95U21](X1,X2,X3) = 0
[AU95U95U22](X1,X2) = 0
[AU95U95U23](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95U42](X1,X2) = 0
[AU95U95U43](X) = 0
[AU95U95U51](X1,X2,X3) = 0
[AU95U95U52](X1,X2) = 0
[AU95U95U53](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X) = 0
[AU95U95U71](X1,X2) = 0
[AU95U95U72](X) = 0
[AU95U95U95U95](X1,X2) = 0
[AU95U95AND](X1,X2) = 2.X1 + 2.X2 + 2
[AU95U95ISLIST](X) = 0
[AU95U95ISNELIST](X) = 0
[AU95U95ISNEPAL](X) = 0
[AU95U95ISPAL](X) = 0
[AU95U95ISPALLISTKIND](X) = 2
[AU95U95ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = X1 + 2.X2 + 2
[au95u95U12](X) = 2
[au95u95U21](X1,X2,X3) = 2.X1 + X2 + 2.X3 + 2
[au95u95U22](X1,X2) = 2.X2 + 2
[au95u95U23](X) = X
[au95u95U31](X1,X2) = X1 + 2.X2 + 1
[au95u95U32](X) = X
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U42](X1,X2) = X1 + 2.X2
[au95u95U43](X) = 0
[au95u95U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U52](X1,X2) = X1 + 2.X2 + 1
[au95u95U53](X) = 1
[au95u95U61](X1,X2) = 2.X2 + 2
[au95u95U62](X) = X + 2
[au95u95U71](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U72](X) = X
[au95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[au95u95and](X1,X2) = X1 + 2.X2
[au95u95isList](X) = 2.X + 2
[au95u95isNeList](X) = 2.X + 1
[au95u95isNePal](X) = 2.X + 2
[au95u95isPal](X) = 2.X + 2
[au95u95isPalListKind](X) = 0
[au95u95isQid](X) = 2.X
[mark](X) = X
[U11](X1,X2) = X1 + 2.X2 + 2
[U12](X) = 2
[U21](X1,X2,X3) = 2.X1 + X2 + 2.X3 + 2
[U22](X1,X2) = 2.X2 + 2
[U23](X) = X
[U31](X1,X2) = X1 + 2.X2 + 1
[U32](X) = X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2
[U43](X) = 0
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 1
[U53](X) = 1
[U61](X1,X2) = 2.X2 + 2
[U62](X) = X + 2
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 1
[and](X1,X2) = X1 + 2.X2
[e] = 0
[fSNonEmpty] = 0
[i] = 0
[isList](X) = 2.X + 2
[isNeList](X) = 2.X + 1
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 2.X
[nil] = 0
[o] = 2
[tt] = 0
[u] = 0
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X) = 0
[AU95U95U21](X1,X2,X3) = 0
[AU95U95U22](X1,X2) = 0
[AU95U95U23](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95U42](X1,X2) = 0
[AU95U95U43](X) = 0
[AU95U95U51](X1,X2,X3) = 0
[AU95U95U52](X1,X2) = 0
[AU95U95U53](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X) = 0
[AU95U95U71](X1,X2) = 0
[AU95U95U72](X) = 0
[AU95U95U95U95](X1,X2) = 0
[AU95U95AND](X1,X2) = X1 + 2.X2 + 2
[AU95U95ISLIST](X) = 0
[AU95U95ISNELIST](X) = 0
[AU95U95ISNEPAL](X) = 0
[AU95U95ISPAL](X) = 0
[AU95U95ISPALLISTKIND](X) = 2
[AU95U95ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = X1 + 2.X2 + 2
[au95u95U12](X) = 1
[au95u95U21](X1,X2,X3) = 2.X1 + X2 + 2.X3 + 2
[au95u95U22](X1,X2) = 2.X2 + 2
[au95u95U23](X) = X
[au95u95U31](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U32](X) = X + 1
[au95u95U41](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[au95u95U42](X1,X2) = 2.X2 + 2
[au95u95U43](X) = 1
[au95u95U51](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[au95u95U52](X1,X2) = 2.X2 + 2
[au95u95U53](X) = X
[au95u95U61](X1,X2) = 2.X1 + X2 + 2
[au95u95U62](X) = 1
[au95u95U71](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U72](X) = X
[au95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[au95u95and](X1,X2) = X1 + 2.X2
[au95u95isList](X) = 2.X + 2
[au95u95isNeList](X) = 2.X + 2
[au95u95isNePal](X) = 2.X + 2
[au95u95isPal](X) = 2.X + 2
[au95u95isPalListKind](X) = 0
[au95u95isQid](X) = 2.X + 1
[mark](X) = X
[U11](X1,X2) = X1 + 2.X2 + 2
[U12](X) = 1
[U21](X1,X2,X3) = 2.X1 + X2 + 2.X3 + 2
[U22](X1,X2) = 2.X2 + 2
[U23](X) = X
[U31](X1,X2) = 2.X1 + 2.X2 + 2
[U32](X) = X + 1
[U41](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = 2.X2 + 2
[U43](X) = 1
[U51](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = 2.X2 + 2
[U53](X) = X
[U61](X1,X2) = 2.X1 + X2 + 2
[U62](X) = 1
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 2
[and](X1,X2) = X1 + 2.X2
[e] = 2
[fSNonEmpty] = 0
[i] = 2
[isList](X) = 2.X + 2
[isNeList](X) = 2.X + 2
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 2.X + 1
[nil] = 2
[o] = 2
[tt] = 0
[u] = 0
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X) = 0
[AU95U95U21](X1,X2,X3) = 0
[AU95U95U22](X1,X2) = 0
[AU95U95U23](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95U42](X1,X2) = 0
[AU95U95U43](X) = 0
[AU95U95U51](X1,X2,X3) = 0
[AU95U95U52](X1,X2) = 0
[AU95U95U53](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X) = 0
[AU95U95U71](X1,X2) = 0
[AU95U95U72](X) = 0
[AU95U95U95U95](X1,X2) = 0
[AU95U95AND](X1,X2) = 2.X1 + 2.X2 + 2
[AU95U95ISLIST](X) = 0
[AU95U95ISNELIST](X) = 0
[AU95U95ISNEPAL](X) = 0
[AU95U95ISPAL](X) = 0
[AU95U95ISPALLISTKIND](X) = 2
[AU95U95ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1: 

Reduction Pair Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = 2
[au95u95U12](X) = 2
[au95u95U21](X1,X2,X3) = 2
[au95u95U22](X1,X2) = 2
[au95u95U23](X) = 2
[au95u95U31](X1,X2) = X1 + X2
[au95u95U32](X) = 2
[au95u95U41](X1,X2,X3) = X1 + X2 + X3 + 2
[au95u95U42](X1,X2) = X1 + X2 + 2
[au95u95U43](X) = 2
[au95u95U51](X1,X2,X3) = 2.X1 + 2.X2 + 2
[au95u95U52](X1,X2) = X1 + 2
[au95u95U53](X) = 2
[au95u95U61](X1,X2) = X1 + X2 + 2
[au95u95U62](X) = 2
[au95u95U71](X1,X2) = 2.X2 + 2
[au95u95U72](X) = X
[au95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[au95u95and](X1,X2) = X1 + X2 + 2
[au95u95isList](X) = 2
[au95u95isNeList](X) = 2.X + 2
[au95u95isNePal](X) = 2.X + 2
[au95u95isPal](X) = 2.X + 2
[au95u95isPalListKind](X) = X
[au95u95isQid](X) = X + 2
[mark](X) = X
[U11](X1,X2) = 2
[U12](X) = 2
[U21](X1,X2,X3) = 2
[U22](X1,X2) = 2
[U23](X) = 2
[U31](X1,X2) = X1 + X2
[U32](X) = 2
[U41](X1,X2,X3) = X1 + X2 + X3 + 2
[U42](X1,X2) = X1 + X2 + 2
[U43](X) = 2
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2
[U52](X1,X2) = X1 + 2
[U53](X) = 2
[U61](X1,X2) = X1 + X2 + 2
[U62](X) = 2
[U71](X1,X2) = 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 2
[and](X1,X2) = X1 + X2 + 2
[e] = 2
[fSNonEmpty] = 0
[i] = 2
[isList](X) = 2
[isNeList](X) = 2.X + 2
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = X
[isQid](X) = X + 2
[nil] = 2
[o] = 2
[tt] = 2
[u] = 2
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X) = 0
[AU95U95U21](X1,X2,X3) = 0
[AU95U95U22](X1,X2) = 0
[AU95U95U23](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95U42](X1,X2) = 0
[AU95U95U43](X) = 0
[AU95U95U51](X1,X2,X3) = 0
[AU95U95U52](X1,X2) = 0
[AU95U95U53](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X) = 0
[AU95U95U71](X1,X2) = 0
[AU95U95U72](X) = 0
[AU95U95U95U95](X1,X2) = 0
[AU95U95AND](X1,X2) = 2.X1 + 2.X2 + 2
[AU95U95ISLIST](X) = 0
[AU95U95ISNELIST](X) = 0
[AU95U95ISNEPAL](X) = 0
[AU95U95ISPAL](X) = 0
[AU95U95ISPALLISTKIND](X) = 2.X + 1
[AU95U95ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95AND(au95u95isPalListKind(V1),isPalListKind(V2))
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->->Cycle:
->->-> Pairs:
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> MARK(X1)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u


The problem is decomposed in 2 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Projection:
 pi(AU95U95ISPALLISTKIND) = 1

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Subterm Processor:
-> Pairs:
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> MARK(X1)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Projection:
 pi(MARK) = 1

Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isNeList(V))
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt) -> tt
 au95u95U12(X) -> U12(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isList(V1),V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V2) -> au95u95U23(au95u95isList(V2))
 au95u95U22(X1,X2) -> U22(X1,X2)
 au95u95U23(tt) -> tt
 au95u95U23(X) -> U23(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isQid(V))
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt) -> tt
 au95u95U32(X) -> U32(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isList(V1),V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V2) -> au95u95U43(au95u95isNeList(V2))
 au95u95U42(X1,X2) -> U42(X1,X2)
 au95u95U43(tt) -> tt
 au95u95U43(X) -> U43(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isNeList(V1),V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V2) -> au95u95U53(au95u95isList(V2))
 au95u95U52(X1,X2) -> U52(X1,X2)
 au95u95U53(tt) -> tt
 au95u95U53(X) -> U53(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isQid(V))
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt) -> tt
 au95u95U62(X) -> U62(X)
 au95u95U71(tt,V) -> au95u95U72(au95u95isNePal(V))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95and(au95u95isPalListKind(V1),isPalListKind(V2)),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95and(au95u95and(au95u95isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U71(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95and(au95u95isPalListKind(V1),isPalListKind(V2))
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X)) -> au95u95U12(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2)) -> au95u95U22(mark(X1),X2)
 mark(U23(X)) -> au95u95U23(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X)) -> au95u95U32(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2)) -> au95u95U42(mark(X1),X2)
 mark(U43(X)) -> au95u95U43(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2)) -> au95u95U52(mark(X1),X2)
 mark(U53(X)) -> au95u95U53(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X)) -> au95u95U62(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
