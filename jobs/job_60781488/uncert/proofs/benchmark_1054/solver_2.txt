NO
proof of /hpcwork/ff862203/termcomp25/benchmarks/Pkp2x.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination of the given GTRS could be disproven:

(0) GTRS
(1) CritRuleProof [COMPLETE, 0 ms]
(2) NO


----------------------------------------

(0)
Obligation:
Generalized rewrite system (where rules with free variables on rhs are allowed):
The TRS R consists of the following rules:

   uTake2(tt) -> cons(N)
   uLength(tt) -> s(length(L))
   and(tt, T) -> T
   isNatIList -> isNatList
   isNat -> tt
   isNat -> isNat
   isNat -> isNatList
   isNatIList -> tt
   isNatIList -> and(isNat, isNatIList)
   isNatList -> tt
   isNatList -> and(isNat, isNatList)
   isNatList -> and(isNat, isNatIList)
   zeros -> cons(0)
   take(0, IL) -> uTake1(isNatIList)
   uTake1(tt) -> nil
   take(s(M), cons(N)) -> uTake2(and(isNat, and(isNat, isNatIList)))
   length(cons(N)) -> uLength(and(isNat, isNatList))


----------------------------------------

(1) CritRuleProof (COMPLETE)
The rule uTake2(tt) -> cons(N) contains free variables in its right-hand side. Hence the TRS is not-terminating.
----------------------------------------

(2)
NO
