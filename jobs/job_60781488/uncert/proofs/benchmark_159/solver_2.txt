YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/U48Cw.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 0 ms]
(2) QDP
(3) DependencyGraphProof [EQUIVALENT, 0 ms]
(4) AND
    (5) QDP
        (6) UsableRulesProof [EQUIVALENT, 0 ms]
        (7) QDP
        (8) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (9) YES
    (10) QDP
        (11) QDPOrderProof [EQUIVALENT, 0 ms]
        (12) QDP
        (13) PisEmptyProof [EQUIVALENT, 0 ms]
        (14) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(a, x) -> f(g(x), x)
   h(g(x)) -> h(a)
   g(h(x)) -> g(x)
   h(h(x)) -> x

Q is empty.

----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(a, x) -> F(g(x), x)
   F(a, x) -> G(x)
   H(g(x)) -> H(a)
   G(h(x)) -> G(x)

The TRS R consists of the following rules:

   f(a, x) -> f(g(x), x)
   h(g(x)) -> h(a)
   g(h(x)) -> g(x)
   h(h(x)) -> x

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs with 2 less nodes.
----------------------------------------

(4)
Complex Obligation (AND)

----------------------------------------

(5)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   G(h(x)) -> G(x)

The TRS R consists of the following rules:

   f(a, x) -> f(g(x), x)
   h(g(x)) -> h(a)
   g(h(x)) -> g(x)
   h(h(x)) -> x

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(6) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(7)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   G(h(x)) -> G(x)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(8) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*G(h(x)) -> G(x)
The graph contains the following edges 1 > 1


----------------------------------------

(9)
YES

----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(a, x) -> F(g(x), x)

The TRS R consists of the following rules:

   f(a, x) -> f(g(x), x)
   h(g(x)) -> h(a)
   g(h(x)) -> g(x)
   h(h(x)) -> x

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   F(a, x) -> F(g(x), x)
The remaining pairs can at least be oriented weakly.
Used ordering:  Combined order from the following AFS and order.
F(x1, x2)  =  x1

a  =  a

g(x1)  =  g


Knuth-Bendix order [KBO] with precedence:a > g

and weight map:

   a=1
   g=1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   g(h(x)) -> g(x)


----------------------------------------

(12)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   f(a, x) -> f(g(x), x)
   h(g(x)) -> h(a)
   g(h(x)) -> g(x)
   h(h(x)) -> x

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(14)
YES
