YES

Problem 1: 

(VAR vu95NonEmpty f h t x)
(RULES
app(app(fmap,app(app(cons,f),tu95f)),x) -> app(app(cons,app(f,x)),app(app(fmap,tu95f),x))
app(app(fmap,nil),x) -> nil
app(app(map,f),app(app(cons,h),t)) -> app(app(cons,app(f,h)),app(app(map,f),t))
app(app(map,f),nil) -> nil
app(app(twice,f),x) -> app(f,app(f,x))
)


Problem 1: 

Innermost Equivalent Processor:
-> Rules:
 app(app(fmap,app(app(cons,f),tu95f)),x) -> app(app(cons,app(f,x)),app(app(fmap,tu95f),x))
 app(app(fmap,nil),x) -> nil
 app(app(map,f),app(app(cons,h),t)) -> app(app(cons,app(f,h)),app(app(map,f),t))
 app(app(map,f),nil) -> nil
 app(app(twice,f),x) -> app(f,app(f,x))
-> The term rewriting system is non-overlaping or locally confluent overlay system. Therefore, innermost termination implies termination.
 

Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 APP(app(fmap,app(app(cons,f),tu95f)),x) -> APP(app(cons,app(f,x)),app(app(fmap,tu95f),x))
 APP(app(fmap,app(app(cons,f),tu95f)),x) -> APP(cons,app(f,x))
 APP(app(fmap,app(app(cons,f),tu95f)),x) -> APP(f,x)
 APP(app(map,f),app(app(cons,h),t)) -> APP(app(cons,app(f,h)),app(app(map,f),t))
 APP(app(map,f),app(app(cons,h),t)) -> APP(app(map,f),t)
 APP(app(map,f),app(app(cons,h),t)) -> APP(cons,app(f,h))
 APP(app(map,f),app(app(cons,h),t)) -> APP(f,h)
 APP(app(twice,f),x) -> APP(f,app(f,x))
 APP(app(twice,f),x) -> APP(f,x)
-> Rules:
 app(app(fmap,app(app(cons,f),tu95f)),x) -> app(app(cons,app(f,x)),app(app(fmap,tu95f),x))
 app(app(fmap,nil),x) -> nil
 app(app(map,f),app(app(cons,h),t)) -> app(app(cons,app(f,h)),app(app(map,f),t))
 app(app(map,f),nil) -> nil
 app(app(twice,f),x) -> app(f,app(f,x))

Problem 1: 

SCC Processor:
-> Pairs:
 APP(app(fmap,app(app(cons,f),tu95f)),x) -> APP(app(cons,app(f,x)),app(app(fmap,tu95f),x))
 APP(app(fmap,app(app(cons,f),tu95f)),x) -> APP(cons,app(f,x))
 APP(app(fmap,app(app(cons,f),tu95f)),x) -> APP(f,x)
 APP(app(map,f),app(app(cons,h),t)) -> APP(app(cons,app(f,h)),app(app(map,f),t))
 APP(app(map,f),app(app(cons,h),t)) -> APP(app(map,f),t)
 APP(app(map,f),app(app(cons,h),t)) -> APP(cons,app(f,h))
 APP(app(map,f),app(app(cons,h),t)) -> APP(f,h)
 APP(app(twice,f),x) -> APP(f,app(f,x))
 APP(app(twice,f),x) -> APP(f,x)
-> Rules:
 app(app(fmap,app(app(cons,f),tu95f)),x) -> app(app(cons,app(f,x)),app(app(fmap,tu95f),x))
 app(app(fmap,nil),x) -> nil
 app(app(map,f),app(app(cons,h),t)) -> app(app(cons,app(f,h)),app(app(map,f),t))
 app(app(map,f),nil) -> nil
 app(app(twice,f),x) -> app(f,app(f,x))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 APP(app(fmap,app(app(cons,f),tu95f)),x) -> APP(f,x)
 APP(app(map,f),app(app(cons,h),t)) -> APP(app(map,f),t)
 APP(app(map,f),app(app(cons,h),t)) -> APP(f,h)
 APP(app(twice,f),x) -> APP(f,app(f,x))
 APP(app(twice,f),x) -> APP(f,x)
->->-> Rules:
 app(app(fmap,app(app(cons,f),tu95f)),x) -> app(app(cons,app(f,x)),app(app(fmap,tu95f),x))
 app(app(fmap,nil),x) -> nil
 app(app(map,f),app(app(cons,h),t)) -> app(app(cons,app(f,h)),app(app(map,f),t))
 app(app(map,f),nil) -> nil
 app(app(twice,f),x) -> app(f,app(f,x))

Problem 1: 

Subterm Processor:
-> Pairs:
 APP(app(fmap,app(app(cons,f),tu95f)),x) -> APP(f,x)
 APP(app(map,f),app(app(cons,h),t)) -> APP(app(map,f),t)
 APP(app(map,f),app(app(cons,h),t)) -> APP(f,h)
 APP(app(twice,f),x) -> APP(f,app(f,x))
 APP(app(twice,f),x) -> APP(f,x)
-> Rules:
 app(app(fmap,app(app(cons,f),tu95f)),x) -> app(app(cons,app(f,x)),app(app(fmap,tu95f),x))
 app(app(fmap,nil),x) -> nil
 app(app(map,f),app(app(cons,h),t)) -> app(app(cons,app(f,h)),app(app(map,f),t))
 app(app(map,f),nil) -> nil
 app(app(twice,f),x) -> app(f,app(f,x))
->Projection:
 pi(APP) = 1

Problem 1: 

SCC Processor:
-> Pairs:
 APP(app(map,f),app(app(cons,h),t)) -> APP(app(map,f),t)
-> Rules:
 app(app(fmap,app(app(cons,f),tu95f)),x) -> app(app(cons,app(f,x)),app(app(fmap,tu95f),x))
 app(app(fmap,nil),x) -> nil
 app(app(map,f),app(app(cons,h),t)) -> app(app(cons,app(f,h)),app(app(map,f),t))
 app(app(map,f),nil) -> nil
 app(app(twice,f),x) -> app(f,app(f,x))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 APP(app(map,f),app(app(cons,h),t)) -> APP(app(map,f),t)
->->-> Rules:
 app(app(fmap,app(app(cons,f),tu95f)),x) -> app(app(cons,app(f,x)),app(app(fmap,tu95f),x))
 app(app(fmap,nil),x) -> nil
 app(app(map,f),app(app(cons,h),t)) -> app(app(cons,app(f,h)),app(app(map,f),t))
 app(app(map,f),nil) -> nil
 app(app(twice,f),x) -> app(f,app(f,x))

Problem 1: 

Subterm Processor:
-> Pairs:
 APP(app(map,f),app(app(cons,h),t)) -> APP(app(map,f),t)
-> Rules:
 app(app(fmap,app(app(cons,f),tu95f)),x) -> app(app(cons,app(f,x)),app(app(fmap,tu95f),x))
 app(app(fmap,nil),x) -> nil
 app(app(map,f),app(app(cons,h),t)) -> app(app(cons,app(f,h)),app(app(map,f),t))
 app(app(map,f),nil) -> nil
 app(app(twice,f),x) -> app(f,app(f,x))
->Projection:
 pi(APP) = 2

Problem 1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 app(app(fmap,app(app(cons,f),tu95f)),x) -> app(app(cons,app(f,x)),app(app(fmap,tu95f),x))
 app(app(fmap,nil),x) -> nil
 app(app(map,f),app(app(cons,h),t)) -> app(app(cons,app(f,h)),app(app(map,f),t))
 app(app(map,f),nil) -> nil
 app(app(twice,f),x) -> app(f,app(f,x))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
