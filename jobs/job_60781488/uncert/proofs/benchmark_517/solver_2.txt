YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/COTwl.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) AAECC Innermost [EQUIVALENT, 0 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 0 ms]
(4) QDP
(5) DependencyGraphProof [EQUIVALENT, 0 ms]
(6) AND
    (7) QDP
        (8) UsableRulesProof [EQUIVALENT, 0 ms]
        (9) QDP
        (10) QReductionProof [EQUIVALENT, 0 ms]
        (11) QDP
        (12) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (13) YES
    (14) QDP
        (15) UsableRulesProof [EQUIVALENT, 0 ms]
        (16) QDP
        (17) QReductionProof [EQUIVALENT, 0 ms]
        (18) QDP
        (19) NonInfProof [EQUIVALENT, 17 ms]
        (20) QDP
        (21) PisEmptyProof [EQUIVALENT, 0 ms]
        (22) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(t, x, y) -> f(g(x, y), x, s(y))
   g(s(x), 0) -> t
   g(s(x), s(y)) -> g(x, y)

Q is empty.

----------------------------------------

(1) AAECC Innermost (EQUIVALENT)
We have applied [NOC,AAECCNOC] to switch to innermost. The TRS R 1 is 
   g(s(x), 0) -> t
   g(s(x), s(y)) -> g(x, y)

The TRS R 2 is 
   f(t, x, y) -> f(g(x, y), x, s(y))

The signature Sigma is {f_3}
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(t, x, y) -> f(g(x, y), x, s(y))
   g(s(x), 0) -> t
   g(s(x), s(y)) -> g(x, y)

The set Q consists of the following terms:

   f(t, x0, x1)
   g(s(x0), 0)
   g(s(x0), s(x1))


----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(t, x, y) -> F(g(x, y), x, s(y))
   F(t, x, y) -> G(x, y)
   G(s(x), s(y)) -> G(x, y)

The TRS R consists of the following rules:

   f(t, x, y) -> f(g(x, y), x, s(y))
   g(s(x), 0) -> t
   g(s(x), s(y)) -> g(x, y)

The set Q consists of the following terms:

   f(t, x0, x1)
   g(s(x0), 0)
   g(s(x0), s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs with 1 less node.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   G(s(x), s(y)) -> G(x, y)

The TRS R consists of the following rules:

   f(t, x, y) -> f(g(x, y), x, s(y))
   g(s(x), 0) -> t
   g(s(x), s(y)) -> g(x, y)

The set Q consists of the following terms:

   f(t, x0, x1)
   g(s(x0), 0)
   g(s(x0), s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(8) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(9)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   G(s(x), s(y)) -> G(x, y)

R is empty.
The set Q consists of the following terms:

   f(t, x0, x1)
   g(s(x0), 0)
   g(s(x0), s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(10) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   f(t, x0, x1)
   g(s(x0), 0)
   g(s(x0), s(x1))


----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   G(s(x), s(y)) -> G(x, y)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(12) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*G(s(x), s(y)) -> G(x, y)
The graph contains the following edges 1 > 1, 2 > 2


----------------------------------------

(13)
YES

----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(t, x, y) -> F(g(x, y), x, s(y))

The TRS R consists of the following rules:

   f(t, x, y) -> f(g(x, y), x, s(y))
   g(s(x), 0) -> t
   g(s(x), s(y)) -> g(x, y)

The set Q consists of the following terms:

   f(t, x0, x1)
   g(s(x0), 0)
   g(s(x0), s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(t, x, y) -> F(g(x, y), x, s(y))

The TRS R consists of the following rules:

   g(s(x), 0) -> t
   g(s(x), s(y)) -> g(x, y)

The set Q consists of the following terms:

   f(t, x0, x1)
   g(s(x0), 0)
   g(s(x0), s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   f(t, x0, x1)


----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(t, x, y) -> F(g(x, y), x, s(y))

The TRS R consists of the following rules:

   g(s(x), 0) -> t
   g(s(x), s(y)) -> g(x, y)

The set Q consists of the following terms:

   g(s(x0), 0)
   g(s(x0), s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) NonInfProof (EQUIVALENT)
The DP Problem is simplified using the Induction Calculus [NONINF] with the following steps:

Note that final constraints are written in bold face.



For Pair F(t, x, y) -> F(g(x, y), x, s(y)) the following chains were created:
*We consider the chain F(t, x0, x1) -> F(g(x0, x1), x0, s(x1)), F(t, x2, x3) -> F(g(x2, x3), x2, s(x3)) which results in the following constraint:

(1)    (F(g(x0, x1), x0, s(x1))=F(t, x2, x3)  ==>  F(t, x2, x3)_>=_F(g(x2, x3), x2, s(x3)))



We simplified constraint (1) using rules (I), (II), (III) which results in the following new constraint:

(2)    (g(x0, x1)=t  ==>  F(t, x0, s(x1))_>=_F(g(x0, s(x1)), x0, s(s(x1))))



We simplified constraint (2) using rule (V) (with possible (I) afterwards) using induction on g(x0, x1)=t which results in the following new constraints:

(3)    (t=t  ==>  F(t, s(x4), s(0))_>=_F(g(s(x4), s(0)), s(x4), s(s(0))))

(4)    (g(x6, x5)=t & (g(x6, x5)=t  ==>  F(t, x6, s(x5))_>=_F(g(x6, s(x5)), x6, s(s(x5))))  ==>  F(t, s(x6), s(s(x5)))_>=_F(g(s(x6), s(s(x5))), s(x6), s(s(s(x5)))))



We simplified constraint (3) using rules (I), (II) which results in the following new constraint:

(5)    (F(t, s(x4), s(0))_>=_F(g(s(x4), s(0)), s(x4), s(s(0))))



We simplified constraint (4) using rule (VI) where we applied the induction hypothesis (g(x6, x5)=t  ==>  F(t, x6, s(x5))_>=_F(g(x6, s(x5)), x6, s(s(x5)))) with sigma = [ ] which results in the following new constraint:

(6)    (F(t, x6, s(x5))_>=_F(g(x6, s(x5)), x6, s(s(x5)))  ==>  F(t, s(x6), s(s(x5)))_>=_F(g(s(x6), s(s(x5))), s(x6), s(s(s(x5)))))








To summarize, we get the following constraints P__>=_ for the following pairs.

*F(t, x, y) -> F(g(x, y), x, s(y))

*(F(t, s(x4), s(0))_>=_F(g(s(x4), s(0)), s(x4), s(s(0))))


*(F(t, x6, s(x5))_>=_F(g(x6, s(x5)), x6, s(s(x5)))  ==>  F(t, s(x6), s(s(x5)))_>=_F(g(s(x6), s(s(x5))), s(x6), s(s(s(x5)))))








The constraints for P_> respective P_bound are constructed from P__>=_ where we just replace every occurence of "t _>=_ s" in P__>=_ by  "t > s" respective "t _>=_ c". Here c stands for the fresh constant used for P_bound. 

Using the following integer polynomial ordering the  resulting constraints can be solved 

Polynomial interpretation [NONINF]:

   POL(0) = 0
   POL(F(x_1, x_2, x_3)) = -1 - x_1 + x_2 - x_3
   POL(c) = -1
   POL(g(x_1, x_2)) = 0
   POL(s(x_1)) = 1 + x_1
   POL(t) = 0


The following pairs  are in P_>:
   F(t, x, y) -> F(g(x, y), x, s(y))
The following pairs are in P_bound:
   F(t, x, y) -> F(g(x, y), x, s(y))
The following rules are usable:
   t -> g(s(x), 0)
   g(x, y) -> g(s(x), s(y))

----------------------------------------

(20)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   g(s(x), 0) -> t
   g(s(x), s(y)) -> g(x, y)

The set Q consists of the following terms:

   g(s(x0), 0)
   g(s(x0), s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(21) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(22)
YES
