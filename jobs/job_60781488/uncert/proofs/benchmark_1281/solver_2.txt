YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/HN8jQ.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRSRRRProof [EQUIVALENT, 37 ms]
(2) QTRS
(3) QTRSRRRProof [EQUIVALENT, 7 ms]
(4) QTRS
(5) QTRSRRRProof [EQUIVALENT, 0 ms]
(6) QTRS
(7) RisEmptyProof [EQUIVALENT, 0 ms]
(8) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   active(and(tt, X)) -> mark(X)
   active(plus(N, 0)) -> mark(N)
   active(plus(N, s(M))) -> mark(s(plus(N, M)))
   active(x(N, 0)) -> mark(0)
   active(x(N, s(M))) -> mark(plus(x(N, M), N))
   mark(and(X1, X2)) -> active(and(mark(X1), X2))
   mark(tt) -> active(tt)
   mark(plus(X1, X2)) -> active(plus(mark(X1), mark(X2)))
   mark(0) -> active(0)
   mark(s(X)) -> active(s(mark(X)))
   mark(x(X1, X2)) -> active(x(mark(X1), mark(X2)))
   and(mark(X1), X2) -> and(X1, X2)
   and(X1, mark(X2)) -> and(X1, X2)
   and(active(X1), X2) -> and(X1, X2)
   and(X1, active(X2)) -> and(X1, X2)
   plus(mark(X1), X2) -> plus(X1, X2)
   plus(X1, mark(X2)) -> plus(X1, X2)
   plus(active(X1), X2) -> plus(X1, X2)
   plus(X1, active(X2)) -> plus(X1, X2)
   s(mark(X)) -> s(X)
   s(active(X)) -> s(X)
   x(mark(X1), X2) -> x(X1, X2)
   x(X1, mark(X2)) -> x(X1, X2)
   x(active(X1), X2) -> x(X1, X2)
   x(X1, active(X2)) -> x(X1, X2)

Q is empty.

----------------------------------------

(1) QTRSRRRProof (EQUIVALENT)
Used ordering:
active/1)YES(
and/2(YES,YES)
tt/0)
mark/1)YES(
plus/2(YES,YES)
0/0)
s/1(YES)
x/2(YES,YES)

Quasi precedence:
[0, x_2] > plus_2 > s_1


Status:
and_2: multiset status
tt: multiset status
plus_2: multiset status
0: multiset status
s_1: multiset status
x_2: multiset status

With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   active(and(tt, X)) -> mark(X)
   active(plus(N, 0)) -> mark(N)
   active(plus(N, s(M))) -> mark(s(plus(N, M)))
   active(x(N, 0)) -> mark(0)
   active(x(N, s(M))) -> mark(plus(x(N, M), N))




----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   mark(and(X1, X2)) -> active(and(mark(X1), X2))
   mark(tt) -> active(tt)
   mark(plus(X1, X2)) -> active(plus(mark(X1), mark(X2)))
   mark(0) -> active(0)
   mark(s(X)) -> active(s(mark(X)))
   mark(x(X1, X2)) -> active(x(mark(X1), mark(X2)))
   and(mark(X1), X2) -> and(X1, X2)
   and(X1, mark(X2)) -> and(X1, X2)
   and(active(X1), X2) -> and(X1, X2)
   and(X1, active(X2)) -> and(X1, X2)
   plus(mark(X1), X2) -> plus(X1, X2)
   plus(X1, mark(X2)) -> plus(X1, X2)
   plus(active(X1), X2) -> plus(X1, X2)
   plus(X1, active(X2)) -> plus(X1, X2)
   s(mark(X)) -> s(X)
   s(active(X)) -> s(X)
   x(mark(X1), X2) -> x(X1, X2)
   x(X1, mark(X2)) -> x(X1, X2)
   x(active(X1), X2) -> x(X1, X2)
   x(X1, active(X2)) -> x(X1, X2)

Q is empty.

----------------------------------------

(3) QTRSRRRProof (EQUIVALENT)
Used ordering:
mark/1(YES)
and/2(YES,YES)
active/1)YES(
tt/0)
plus/2(YES,YES)
0/0)
s/1(YES)
x/2(YES,YES)

Quasi precedence:
[mark_1, and_2] > tt > s_1
[mark_1, and_2] > plus_2 > s_1
[mark_1, and_2] > 0 > s_1
[mark_1, and_2] > x_2 > s_1


Status:
mark_1: multiset status
and_2: multiset status
tt: multiset status
plus_2: multiset status
0: multiset status
s_1: multiset status
x_2: multiset status

With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   mark(and(X1, X2)) -> active(and(mark(X1), X2))
   mark(tt) -> active(tt)
   mark(plus(X1, X2)) -> active(plus(mark(X1), mark(X2)))
   mark(0) -> active(0)
   mark(s(X)) -> active(s(mark(X)))
   mark(x(X1, X2)) -> active(x(mark(X1), mark(X2)))
   and(mark(X1), X2) -> and(X1, X2)
   and(X1, mark(X2)) -> and(X1, X2)
   plus(mark(X1), X2) -> plus(X1, X2)
   plus(X1, mark(X2)) -> plus(X1, X2)
   s(mark(X)) -> s(X)
   x(mark(X1), X2) -> x(X1, X2)
   x(X1, mark(X2)) -> x(X1, X2)




----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   and(active(X1), X2) -> and(X1, X2)
   and(X1, active(X2)) -> and(X1, X2)
   plus(active(X1), X2) -> plus(X1, X2)
   plus(X1, active(X2)) -> plus(X1, X2)
   s(active(X)) -> s(X)
   x(active(X1), X2) -> x(X1, X2)
   x(X1, active(X2)) -> x(X1, X2)

Q is empty.

----------------------------------------

(5) QTRSRRRProof (EQUIVALENT)
Used ordering:
Knuth-Bendix order [KBO] with precedence:active_1 > x_2 > s_1 > plus_2 > and_2

and weight map:

   active_1=0
   s_1=1
   and_2=0
   plus_2=0
   x_2=0

The variable weight is 1With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   and(active(X1), X2) -> and(X1, X2)
   and(X1, active(X2)) -> and(X1, X2)
   plus(active(X1), X2) -> plus(X1, X2)
   plus(X1, active(X2)) -> plus(X1, X2)
   s(active(X)) -> s(X)
   x(active(X1), X2) -> x(X1, X2)
   x(X1, active(X2)) -> x(X1, X2)




----------------------------------------

(6)
Obligation:
Q restricted rewrite system:
R is empty.
Q is empty.

----------------------------------------

(7) RisEmptyProof (EQUIVALENT)
The TRS R is empty. Hence, termination is trivially proven.
----------------------------------------

(8)
YES
