YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/PLcEb.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRSRRRProof [EQUIVALENT, 32 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 0 ms]
(4) QDP
(5) MRRProof [EQUIVALENT, 0 ms]
(6) QDP
(7) QDPSizeChangeProof [EQUIVALENT, 0 ms]
(8) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a(lambda(x), y) -> lambda(a(x, 1))
   a(lambda(x), y) -> lambda(a(x, a(y, t)))
   a(a(x, y), z) -> a(x, a(y, z))
   lambda(x) -> x
   a(x, y) -> x
   a(x, y) -> y

Q is empty.

----------------------------------------

(1) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(1) = 0
   POL(a(x_1, x_2)) = x_1 + x_2
   POL(lambda(x_1)) = 1 + x_1
   POL(t) = 0
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   lambda(x) -> x




----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a(lambda(x), y) -> lambda(a(x, 1))
   a(lambda(x), y) -> lambda(a(x, a(y, t)))
   a(a(x, y), z) -> a(x, a(y, z))
   a(x, y) -> x
   a(x, y) -> y

Q is empty.

----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(lambda(x), y) -> A(x, 1)
   A(lambda(x), y) -> A(x, a(y, t))
   A(lambda(x), y) -> A(y, t)
   A(a(x, y), z) -> A(x, a(y, z))
   A(a(x, y), z) -> A(y, z)

The TRS R consists of the following rules:

   a(lambda(x), y) -> lambda(a(x, 1))
   a(lambda(x), y) -> lambda(a(x, a(y, t)))
   a(a(x, y), z) -> a(x, a(y, z))
   a(x, y) -> x
   a(x, y) -> y

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) MRRProof (EQUIVALENT)
By using the rule removal processor [LPAR04] with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented.

Strictly oriented dependency pairs:

   A(lambda(x), y) -> A(x, 1)
   A(lambda(x), y) -> A(x, a(y, t))
   A(lambda(x), y) -> A(y, t)


Used ordering: Polynomial interpretation [POLO]:

   POL(1) = 0
   POL(A(x_1, x_2)) = x_1 + x_2
   POL(a(x_1, x_2)) = x_1 + x_2
   POL(lambda(x_1)) = 1 + x_1
   POL(t) = 0


----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(a(x, y), z) -> A(x, a(y, z))
   A(a(x, y), z) -> A(y, z)

The TRS R consists of the following rules:

   a(lambda(x), y) -> lambda(a(x, 1))
   a(lambda(x), y) -> lambda(a(x, a(y, t)))
   a(a(x, y), z) -> a(x, a(y, z))
   a(x, y) -> x
   a(x, y) -> y

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*A(a(x, y), z) -> A(x, a(y, z))
The graph contains the following edges 1 > 1


*A(a(x, y), z) -> A(y, z)
The graph contains the following edges 1 > 1, 2 >= 2


----------------------------------------

(8)
YES
