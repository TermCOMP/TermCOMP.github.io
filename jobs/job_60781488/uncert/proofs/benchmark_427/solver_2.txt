YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/uOL5K.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) Overlay + Local Confluence [EQUIVALENT, 0 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 0 ms]
(4) QDP
(5) DependencyGraphProof [EQUIVALENT, 0 ms]
(6) AND
    (7) QDP
        (8) UsableRulesProof [EQUIVALENT, 0 ms]
        (9) QDP
        (10) QReductionProof [EQUIVALENT, 0 ms]
        (11) QDP
        (12) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (13) YES
    (14) QDP
        (15) UsableRulesProof [EQUIVALENT, 0 ms]
        (16) QDP
        (17) QReductionProof [EQUIVALENT, 0 ms]
        (18) QDP
        (19) NonInfProof [EQUIVALENT, 0 ms]
        (20) QDP
        (21) DependencyGraphProof [EQUIVALENT, 0 ms]
        (22) TRUE


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   minus(x, y) -> cond(ge(x, s(y)), x, y)
   cond(false, x, y) -> 0
   cond(true, x, y) -> s(minus(x, s(y)))
   ge(u, 0) -> true
   ge(0, s(v)) -> false
   ge(s(u), s(v)) -> ge(u, v)

Q is empty.

----------------------------------------

(1) Overlay + Local Confluence (EQUIVALENT)
The TRS is overlay and locally confluent. By [NOC] we can switch to innermost.
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   minus(x, y) -> cond(ge(x, s(y)), x, y)
   cond(false, x, y) -> 0
   cond(true, x, y) -> s(minus(x, s(y)))
   ge(u, 0) -> true
   ge(0, s(v)) -> false
   ge(s(u), s(v)) -> ge(u, v)

The set Q consists of the following terms:

   minus(x0, x1)
   cond(false, x0, x1)
   cond(true, x0, x1)
   ge(x0, 0)
   ge(0, s(x0))
   ge(s(x0), s(x1))


----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MINUS(x, y) -> COND(ge(x, s(y)), x, y)
   MINUS(x, y) -> GE(x, s(y))
   COND(true, x, y) -> MINUS(x, s(y))
   GE(s(u), s(v)) -> GE(u, v)

The TRS R consists of the following rules:

   minus(x, y) -> cond(ge(x, s(y)), x, y)
   cond(false, x, y) -> 0
   cond(true, x, y) -> s(minus(x, s(y)))
   ge(u, 0) -> true
   ge(0, s(v)) -> false
   ge(s(u), s(v)) -> ge(u, v)

The set Q consists of the following terms:

   minus(x0, x1)
   cond(false, x0, x1)
   cond(true, x0, x1)
   ge(x0, 0)
   ge(0, s(x0))
   ge(s(x0), s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs with 1 less node.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   GE(s(u), s(v)) -> GE(u, v)

The TRS R consists of the following rules:

   minus(x, y) -> cond(ge(x, s(y)), x, y)
   cond(false, x, y) -> 0
   cond(true, x, y) -> s(minus(x, s(y)))
   ge(u, 0) -> true
   ge(0, s(v)) -> false
   ge(s(u), s(v)) -> ge(u, v)

The set Q consists of the following terms:

   minus(x0, x1)
   cond(false, x0, x1)
   cond(true, x0, x1)
   ge(x0, 0)
   ge(0, s(x0))
   ge(s(x0), s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(8) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(9)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   GE(s(u), s(v)) -> GE(u, v)

R is empty.
The set Q consists of the following terms:

   minus(x0, x1)
   cond(false, x0, x1)
   cond(true, x0, x1)
   ge(x0, 0)
   ge(0, s(x0))
   ge(s(x0), s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(10) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   minus(x0, x1)
   cond(false, x0, x1)
   cond(true, x0, x1)
   ge(x0, 0)
   ge(0, s(x0))
   ge(s(x0), s(x1))


----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   GE(s(u), s(v)) -> GE(u, v)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(12) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*GE(s(u), s(v)) -> GE(u, v)
The graph contains the following edges 1 > 1, 2 > 2


----------------------------------------

(13)
YES

----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND(true, x, y) -> MINUS(x, s(y))
   MINUS(x, y) -> COND(ge(x, s(y)), x, y)

The TRS R consists of the following rules:

   minus(x, y) -> cond(ge(x, s(y)), x, y)
   cond(false, x, y) -> 0
   cond(true, x, y) -> s(minus(x, s(y)))
   ge(u, 0) -> true
   ge(0, s(v)) -> false
   ge(s(u), s(v)) -> ge(u, v)

The set Q consists of the following terms:

   minus(x0, x1)
   cond(false, x0, x1)
   cond(true, x0, x1)
   ge(x0, 0)
   ge(0, s(x0))
   ge(s(x0), s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND(true, x, y) -> MINUS(x, s(y))
   MINUS(x, y) -> COND(ge(x, s(y)), x, y)

The TRS R consists of the following rules:

   ge(0, s(v)) -> false
   ge(s(u), s(v)) -> ge(u, v)
   ge(u, 0) -> true

The set Q consists of the following terms:

   minus(x0, x1)
   cond(false, x0, x1)
   cond(true, x0, x1)
   ge(x0, 0)
   ge(0, s(x0))
   ge(s(x0), s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   minus(x0, x1)
   cond(false, x0, x1)
   cond(true, x0, x1)


----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND(true, x, y) -> MINUS(x, s(y))
   MINUS(x, y) -> COND(ge(x, s(y)), x, y)

The TRS R consists of the following rules:

   ge(0, s(v)) -> false
   ge(s(u), s(v)) -> ge(u, v)
   ge(u, 0) -> true

The set Q consists of the following terms:

   ge(x0, 0)
   ge(0, s(x0))
   ge(s(x0), s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) NonInfProof (EQUIVALENT)
The DP Problem is simplified using the Induction Calculus [NONINF] with the following steps:

Note that final constraints are written in bold face.



For Pair COND(true, x, y) -> MINUS(x, s(y)) the following chains were created:
*We consider the chain MINUS(x2, x3) -> COND(ge(x2, s(x3)), x2, x3), COND(true, x4, x5) -> MINUS(x4, s(x5)) which results in the following constraint:

(1)    (COND(ge(x2, s(x3)), x2, x3)=COND(true, x4, x5)  ==>  COND(true, x4, x5)_>=_MINUS(x4, s(x5)))



We simplified constraint (1) using rules (I), (II), (III), (VII) which results in the following new constraint:

(2)    (s(x3)=x12 & ge(x2, x12)=true  ==>  COND(true, x2, x3)_>=_MINUS(x2, s(x3)))



We simplified constraint (2) using rule (V) (with possible (I) afterwards) using induction on ge(x2, x12)=true which results in the following new constraints:

(3)    (ge(x15, x14)=true & s(x3)=s(x14) & (\/x16:ge(x15, x14)=true & s(x16)=x14  ==>  COND(true, x15, x16)_>=_MINUS(x15, s(x16)))  ==>  COND(true, s(x15), x3)_>=_MINUS(s(x15), s(x3)))

(4)    (true=true & s(x3)=0  ==>  COND(true, x17, x3)_>=_MINUS(x17, s(x3)))



We simplified constraint (3) using rules (I), (II), (III), (IV) which results in the following new constraint:

(5)    (ge(x15, x14)=true  ==>  COND(true, s(x15), x14)_>=_MINUS(s(x15), s(x14)))



We solved constraint (4) using rules (I), (II).We simplified constraint (5) using rule (V) (with possible (I) afterwards) using induction on ge(x15, x14)=true which results in the following new constraints:

(6)    (ge(x20, x19)=true & (ge(x20, x19)=true  ==>  COND(true, s(x20), x19)_>=_MINUS(s(x20), s(x19)))  ==>  COND(true, s(s(x20)), s(x19))_>=_MINUS(s(s(x20)), s(s(x19))))

(7)    (true=true  ==>  COND(true, s(x21), 0)_>=_MINUS(s(x21), s(0)))



We simplified constraint (6) using rule (VI) where we applied the induction hypothesis (ge(x20, x19)=true  ==>  COND(true, s(x20), x19)_>=_MINUS(s(x20), s(x19))) with sigma = [ ] which results in the following new constraint:

(8)    (COND(true, s(x20), x19)_>=_MINUS(s(x20), s(x19))  ==>  COND(true, s(s(x20)), s(x19))_>=_MINUS(s(s(x20)), s(s(x19))))



We simplified constraint (7) using rules (I), (II) which results in the following new constraint:

(9)    (COND(true, s(x21), 0)_>=_MINUS(s(x21), s(0)))








For Pair MINUS(x, y) -> COND(ge(x, s(y)), x, y) the following chains were created:
*We consider the chain COND(true, x6, x7) -> MINUS(x6, s(x7)), MINUS(x8, x9) -> COND(ge(x8, s(x9)), x8, x9) which results in the following constraint:

(1)    (MINUS(x6, s(x7))=MINUS(x8, x9)  ==>  MINUS(x8, x9)_>=_COND(ge(x8, s(x9)), x8, x9))



We simplified constraint (1) using rules (I), (II), (III) which results in the following new constraint:

(2)    (MINUS(x6, s(x7))_>=_COND(ge(x6, s(s(x7))), x6, s(x7)))








To summarize, we get the following constraints P__>=_ for the following pairs.

*COND(true, x, y) -> MINUS(x, s(y))

*(COND(true, s(x20), x19)_>=_MINUS(s(x20), s(x19))  ==>  COND(true, s(s(x20)), s(x19))_>=_MINUS(s(s(x20)), s(s(x19))))


*(COND(true, s(x21), 0)_>=_MINUS(s(x21), s(0)))




*MINUS(x, y) -> COND(ge(x, s(y)), x, y)

*(MINUS(x6, s(x7))_>=_COND(ge(x6, s(s(x7))), x6, s(x7)))








The constraints for P_> respective P_bound are constructed from P__>=_ where we just replace every occurence of "t _>=_ s" in P__>=_ by  "t > s" respective "t _>=_ c". Here c stands for the fresh constant used for P_bound. 

Using the following integer polynomial ordering the  resulting constraints can be solved 

Polynomial interpretation [NONINF]:

   POL(0) = 1
   POL(COND(x_1, x_2, x_3)) = -1 - x_1 + x_2 - x_3
   POL(MINUS(x_1, x_2)) = -1 + x_1 - x_2
   POL(c) = -2
   POL(false) = 0
   POL(ge(x_1, x_2)) = 0
   POL(s(x_1)) = 1 + x_1
   POL(true) = 0


The following pairs  are in P_>:
   COND(true, x, y) -> MINUS(x, s(y))
The following pairs are in P_bound:
   COND(true, x, y) -> MINUS(x, s(y))
The following rules are usable:
   false -> ge(0, s(v))
   ge(u, v) -> ge(s(u), s(v))
   true -> ge(u, 0)

----------------------------------------

(20)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MINUS(x, y) -> COND(ge(x, s(y)), x, y)

The TRS R consists of the following rules:

   ge(0, s(v)) -> false
   ge(s(u), s(v)) -> ge(u, v)
   ge(u, 0) -> true

The set Q consists of the following terms:

   ge(x0, 0)
   ge(0, s(x0))
   ge(s(x0), s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(21) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 1 less node.
----------------------------------------

(22)
TRUE
