YES

Problem 1: 

(VAR vu95NonEmpty f x xs y z)
(RULES
app(app(app(app(filter2,ffalse),f),x),xs) -> app(app(filter,f),xs)
app(app(app(app(filter2,ftrue),f),x),xs) -> app(app(cons,x),app(app(filter,f),xs))
app(app(u46,app(i,x)),x) -> num1
app(app(u46,app(i,y)),app(app(u46,y),z)) -> z
app(app(u46,num1),x) -> x
app(app(u46,x),app(i,x)) -> num1
app(app(u46,x),num1) -> x
app(app(u46,y),app(app(u46,app(i,y)),z)) -> z
app(app(filter,f),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(f,x)),f),x),xs)
app(app(filter,f),nil) -> nil
app(app(map,f),app(app(cons,x),xs)) -> app(app(cons,app(f,x)),app(app(map,f),xs))
app(app(map,f),nil) -> nil
app(i,app(i,x)) -> x
app(i,num1) -> num1
)


Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 APP(app(app(app(filter2,ffalse),f),x),xs) -> APP(app(filter,f),xs)
 APP(app(app(app(filter2,ftrue),f),x),xs) -> APP(app(cons,x),app(app(filter,f),xs))
 APP(app(app(app(filter2,ftrue),f),x),xs) -> APP(app(filter,f),xs)
 APP(app(filter,f),app(app(cons,x),xs)) -> APP(app(app(app(filter2,app(f,x)),f),x),xs)
 APP(app(filter,f),app(app(cons,x),xs)) -> APP(app(app(filter2,app(f,x)),f),x)
 APP(app(filter,f),app(app(cons,x),xs)) -> APP(app(filter2,app(f,x)),f)
 APP(app(filter,f),app(app(cons,x),xs)) -> APP(filter2,app(f,x))
 APP(app(filter,f),app(app(cons,x),xs)) -> APP(f,x)
 APP(app(map,f),app(app(cons,x),xs)) -> APP(app(cons,app(f,x)),app(app(map,f),xs))
 APP(app(map,f),app(app(cons,x),xs)) -> APP(app(map,f),xs)
 APP(app(map,f),app(app(cons,x),xs)) -> APP(cons,app(f,x))
 APP(app(map,f),app(app(cons,x),xs)) -> APP(f,x)
-> Rules:
 app(app(app(app(filter2,ffalse),f),x),xs) -> app(app(filter,f),xs)
 app(app(app(app(filter2,ftrue),f),x),xs) -> app(app(cons,x),app(app(filter,f),xs))
 app(app(u46,app(i,x)),x) -> num1
 app(app(u46,app(i,y)),app(app(u46,y),z)) -> z
 app(app(u46,num1),x) -> x
 app(app(u46,x),app(i,x)) -> num1
 app(app(u46,x),num1) -> x
 app(app(u46,y),app(app(u46,app(i,y)),z)) -> z
 app(app(filter,f),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(f,x)),f),x),xs)
 app(app(filter,f),nil) -> nil
 app(app(map,f),app(app(cons,x),xs)) -> app(app(cons,app(f,x)),app(app(map,f),xs))
 app(app(map,f),nil) -> nil
 app(i,app(i,x)) -> x
 app(i,num1) -> num1

Problem 1: 

SCC Processor:
-> Pairs:
 APP(app(app(app(filter2,ffalse),f),x),xs) -> APP(app(filter,f),xs)
 APP(app(app(app(filter2,ftrue),f),x),xs) -> APP(app(cons,x),app(app(filter,f),xs))
 APP(app(app(app(filter2,ftrue),f),x),xs) -> APP(app(filter,f),xs)
 APP(app(filter,f),app(app(cons,x),xs)) -> APP(app(app(app(filter2,app(f,x)),f),x),xs)
 APP(app(filter,f),app(app(cons,x),xs)) -> APP(app(app(filter2,app(f,x)),f),x)
 APP(app(filter,f),app(app(cons,x),xs)) -> APP(app(filter2,app(f,x)),f)
 APP(app(filter,f),app(app(cons,x),xs)) -> APP(filter2,app(f,x))
 APP(app(filter,f),app(app(cons,x),xs)) -> APP(f,x)
 APP(app(map,f),app(app(cons,x),xs)) -> APP(app(cons,app(f,x)),app(app(map,f),xs))
 APP(app(map,f),app(app(cons,x),xs)) -> APP(app(map,f),xs)
 APP(app(map,f),app(app(cons,x),xs)) -> APP(cons,app(f,x))
 APP(app(map,f),app(app(cons,x),xs)) -> APP(f,x)
-> Rules:
 app(app(app(app(filter2,ffalse),f),x),xs) -> app(app(filter,f),xs)
 app(app(app(app(filter2,ftrue),f),x),xs) -> app(app(cons,x),app(app(filter,f),xs))
 app(app(u46,app(i,x)),x) -> num1
 app(app(u46,app(i,y)),app(app(u46,y),z)) -> z
 app(app(u46,num1),x) -> x
 app(app(u46,x),app(i,x)) -> num1
 app(app(u46,x),num1) -> x
 app(app(u46,y),app(app(u46,app(i,y)),z)) -> z
 app(app(filter,f),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(f,x)),f),x),xs)
 app(app(filter,f),nil) -> nil
 app(app(map,f),app(app(cons,x),xs)) -> app(app(cons,app(f,x)),app(app(map,f),xs))
 app(app(map,f),nil) -> nil
 app(i,app(i,x)) -> x
 app(i,num1) -> num1
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 APP(app(app(app(filter2,ffalse),f),x),xs) -> APP(app(filter,f),xs)
 APP(app(app(app(filter2,ftrue),f),x),xs) -> APP(app(filter,f),xs)
 APP(app(filter,f),app(app(cons,x),xs)) -> APP(app(app(app(filter2,app(f,x)),f),x),xs)
 APP(app(filter,f),app(app(cons,x),xs)) -> APP(f,x)
 APP(app(map,f),app(app(cons,x),xs)) -> APP(app(map,f),xs)
 APP(app(map,f),app(app(cons,x),xs)) -> APP(f,x)
->->-> Rules:
 app(app(app(app(filter2,ffalse),f),x),xs) -> app(app(filter,f),xs)
 app(app(app(app(filter2,ftrue),f),x),xs) -> app(app(cons,x),app(app(filter,f),xs))
 app(app(u46,app(i,x)),x) -> num1
 app(app(u46,app(i,y)),app(app(u46,y),z)) -> z
 app(app(u46,num1),x) -> x
 app(app(u46,x),app(i,x)) -> num1
 app(app(u46,x),num1) -> x
 app(app(u46,y),app(app(u46,app(i,y)),z)) -> z
 app(app(filter,f),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(f,x)),f),x),xs)
 app(app(filter,f),nil) -> nil
 app(app(map,f),app(app(cons,x),xs)) -> app(app(cons,app(f,x)),app(app(map,f),xs))
 app(app(map,f),nil) -> nil
 app(i,app(i,x)) -> x
 app(i,num1) -> num1

Problem 1: 

Subterm Processor:
-> Pairs:
 APP(app(app(app(filter2,ffalse),f),x),xs) -> APP(app(filter,f),xs)
 APP(app(app(app(filter2,ftrue),f),x),xs) -> APP(app(filter,f),xs)
 APP(app(filter,f),app(app(cons,x),xs)) -> APP(app(app(app(filter2,app(f,x)),f),x),xs)
 APP(app(filter,f),app(app(cons,x),xs)) -> APP(f,x)
 APP(app(map,f),app(app(cons,x),xs)) -> APP(app(map,f),xs)
 APP(app(map,f),app(app(cons,x),xs)) -> APP(f,x)
-> Rules:
 app(app(app(app(filter2,ffalse),f),x),xs) -> app(app(filter,f),xs)
 app(app(app(app(filter2,ftrue),f),x),xs) -> app(app(cons,x),app(app(filter,f),xs))
 app(app(u46,app(i,x)),x) -> num1
 app(app(u46,app(i,y)),app(app(u46,y),z)) -> z
 app(app(u46,num1),x) -> x
 app(app(u46,x),app(i,x)) -> num1
 app(app(u46,x),num1) -> x
 app(app(u46,y),app(app(u46,app(i,y)),z)) -> z
 app(app(filter,f),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(f,x)),f),x),xs)
 app(app(filter,f),nil) -> nil
 app(app(map,f),app(app(cons,x),xs)) -> app(app(cons,app(f,x)),app(app(map,f),xs))
 app(app(map,f),nil) -> nil
 app(i,app(i,x)) -> x
 app(i,num1) -> num1
->Projection:
 pi(APP) = 2

Problem 1: 

SCC Processor:
-> Pairs:
 APP(app(app(app(filter2,ffalse),f),x),xs) -> APP(app(filter,f),xs)
 APP(app(app(app(filter2,ftrue),f),x),xs) -> APP(app(filter,f),xs)
-> Rules:
 app(app(app(app(filter2,ffalse),f),x),xs) -> app(app(filter,f),xs)
 app(app(app(app(filter2,ftrue),f),x),xs) -> app(app(cons,x),app(app(filter,f),xs))
 app(app(u46,app(i,x)),x) -> num1
 app(app(u46,app(i,y)),app(app(u46,y),z)) -> z
 app(app(u46,num1),x) -> x
 app(app(u46,x),app(i,x)) -> num1
 app(app(u46,x),num1) -> x
 app(app(u46,y),app(app(u46,app(i,y)),z)) -> z
 app(app(filter,f),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(f,x)),f),x),xs)
 app(app(filter,f),nil) -> nil
 app(app(map,f),app(app(cons,x),xs)) -> app(app(cons,app(f,x)),app(app(map,f),xs))
 app(app(map,f),nil) -> nil
 app(i,app(i,x)) -> x
 app(i,num1) -> num1
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
