YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/FflCB.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 7 ms]
(2) QDP
(3) DependencyGraphProof [EQUIVALENT, 0 ms]
(4) QDP
(5) UsableRulesReductionPairsProof [EQUIVALENT, 0 ms]
(6) QDP
(7) RFCMatchBoundsDPProof [EQUIVALENT, 0 ms]
(8) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(a, f(a, f(b, f(a, f(a, f(b, f(a, x))))))) -> f(a, f(b, f(a, f(a, f(b, f(a, f(a, f(a, f(b, x)))))))))

Q is empty.

----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(a, f(a, f(b, f(a, f(a, f(b, f(a, x))))))) -> F(a, f(b, f(a, f(a, f(b, f(a, f(a, f(a, f(b, x)))))))))
   F(a, f(a, f(b, f(a, f(a, f(b, f(a, x))))))) -> F(b, f(a, f(a, f(b, f(a, f(a, f(a, f(b, x))))))))
   F(a, f(a, f(b, f(a, f(a, f(b, f(a, x))))))) -> F(a, f(a, f(b, f(a, f(a, f(a, f(b, x)))))))
   F(a, f(a, f(b, f(a, f(a, f(b, f(a, x))))))) -> F(a, f(b, f(a, f(a, f(a, f(b, x))))))
   F(a, f(a, f(b, f(a, f(a, f(b, f(a, x))))))) -> F(b, f(a, f(a, f(a, f(b, x)))))
   F(a, f(a, f(b, f(a, f(a, f(b, f(a, x))))))) -> F(a, f(a, f(a, f(b, x))))
   F(a, f(a, f(b, f(a, f(a, f(b, f(a, x))))))) -> F(a, f(a, f(b, x)))
   F(a, f(a, f(b, f(a, f(a, f(b, f(a, x))))))) -> F(a, f(b, x))
   F(a, f(a, f(b, f(a, f(a, f(b, f(a, x))))))) -> F(b, x)

The TRS R consists of the following rules:

   f(a, f(a, f(b, f(a, f(a, f(b, f(a, x))))))) -> f(a, f(b, f(a, f(a, f(b, f(a, f(a, f(a, f(b, x)))))))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 6 less nodes.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(a, f(a, f(b, f(a, f(a, f(b, f(a, x))))))) -> F(a, f(a, f(a, f(b, x))))
   F(a, f(a, f(b, f(a, f(a, f(b, f(a, x))))))) -> F(a, f(a, f(b, f(a, f(a, f(a, f(b, x)))))))
   F(a, f(a, f(b, f(a, f(a, f(b, f(a, x))))))) -> F(a, f(a, f(b, x)))

The TRS R consists of the following rules:

   f(a, f(a, f(b, f(a, f(a, f(b, f(a, x))))))) -> f(a, f(b, f(a, f(a, f(b, f(a, f(a, f(a, f(b, x)))))))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) UsableRulesReductionPairsProof (EQUIVALENT)
First, we A-transformed [FROCOS05] the QDP-Problem.
Then we obtain the following A-transformed DP problem.

The pairs P are: 

   a1(a(b(a(a(b(a(x))))))) -> a1(a(a(b(x))))
   a1(a(b(a(a(b(a(x))))))) -> a1(a(b(a(a(a(b(x)))))))
   a1(a(b(a(a(b(a(x))))))) -> a1(a(b(x)))

and the Q and R are:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a(a(b(a(a(b(a(x))))))) -> a(b(a(a(b(a(a(a(b(x)))))))))

Q is empty.

By using the usable rules with reduction pair processor [LPAR04] with a polynomial ordering [POLO], all dependency pairs and the corresponding usable rules [FROCOS05] can be oriented non-strictly. All non-usable rules are removed, and those dependency pairs and usable rules that have been oriented strictly or contain non-usable symbols in their left-hand side are removed as well.

No dependency pairs are removed.

The following rules are removed from R:

   f(a, f(a, f(b, f(a, f(a, f(b, f(a, x))))))) -> f(a, f(b, f(a, f(a, f(b, f(a, f(a, f(a, f(b, x)))))))))
Used ordering: POLO with Polynomial interpretation [POLO]:

   POL(a(x_1)) = x_1
   POL(a1(x_1)) = 2*x_1
   POL(b(x_1)) = x_1


----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   a1(a(b(a(a(b(a(x))))))) -> a1(a(a(b(x))))
   a1(a(b(a(a(b(a(x))))))) -> a1(a(b(a(a(a(b(x)))))))
   a1(a(b(a(a(b(a(x))))))) -> a1(a(b(x)))

The TRS R consists of the following rules:

   a(a(b(a(a(b(a(x))))))) -> a(b(a(a(b(a(a(a(b(x)))))))))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) RFCMatchBoundsDPProof (EQUIVALENT)
Finiteness of the DP problem can be shown by a matchbound of 2. 
As the DP problem is minimal we only have to initialize the certificate graph by the rules of P:

   a1(a(b(a(a(b(a(x))))))) -> a1(a(a(b(x))))
   a1(a(b(a(a(b(a(x))))))) -> a1(a(b(a(a(a(b(x)))))))
   a1(a(b(a(a(b(a(x))))))) -> a1(a(b(x)))

To find matches we regarded all rules of R and P:

   a(a(b(a(a(b(a(x))))))) -> a(b(a(a(b(a(a(a(b(x)))))))))
   a1(a(b(a(a(b(a(x))))))) -> a1(a(a(b(x))))
   a1(a(b(a(a(b(a(x))))))) -> a1(a(b(a(a(a(b(x)))))))
   a1(a(b(a(a(b(a(x))))))) -> a1(a(b(x)))

The certificate found is represented by the following graph.
The certificate consists of the following enumerated nodes:
44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104

Node 44 is start node and node 45 is final node.

Those nodes are connected through the following edges:

* 44 to 46 labelled a1_1(0)* 44 to 49 labelled a1_1(0)* 44 to 47 labelled a1_1(0)* 44 to 55 labelled a1_1(1)* 44 to 58 labelled a1_1(1)* 44 to 56 labelled a1_1(1)* 44 to 80 labelled a1_1(2)* 44 to 83 labelled a1_1(2)* 44 to 81 labelled a1_1(2)* 45 to 45 labelled #_1(0)* 46 to 47 labelled a_1(0)* 46 to 64 labelled a_1(1)* 47 to 48 labelled a_1(0)* 48 to 45 labelled b_1(0)* 49 to 50 labelled a_1(0)* 50 to 51 labelled b_1(0)* 51 to 52 labelled a_1(0)* 51 to 72 labelled a_1(1)* 52 to 53 labelled a_1(0)* 52 to 64 labelled a_1(1)* 53 to 54 labelled a_1(0)* 54 to 45 labelled b_1(0)* 55 to 56 labelled a_1(1)* 55 to 64 labelled a_1(1)* 56 to 57 labelled a_1(1)* 57 to 45 labelled b_1(1)* 57 to 69 labelled b_1(1)* 57 to 66 labelled b_1(1)* 57 to 89 labelled b_1(1)* 57 to 97 labelled b_1(1)* 58 to 59 labelled a_1(1)* 59 to 60 labelled b_1(1)* 60 to 61 labelled a_1(1)* 60 to 89 labelled a_1(2)* 61 to 62 labelled a_1(1)* 61 to 64 labelled a_1(1)* 62 to 63 labelled a_1(1)* 63 to 45 labelled b_1(1)* 63 to 69 labelled b_1(1)* 63 to 66 labelled b_1(1)* 63 to 89 labelled b_1(1)* 63 to 97 labelled b_1(1)* 64 to 65 labelled b_1(1)* 65 to 66 labelled a_1(1)* 65 to 97 labelled a_1(2)* 66 to 67 labelled a_1(1)* 67 to 68 labelled b_1(1)* 68 to 69 labelled a_1(1)* 68 to 89 labelled a_1(2)* 69 to 70 labelled a_1(1)* 69 to 64 labelled a_1(1)* 70 to 71 labelled a_1(1)* 71 to 45 labelled b_1(1)* 72 to 73 labelled b_1(1)* 73 to 74 labelled a_1(1)* 73 to 97 labelled a_1(2)* 74 to 75 labelled a_1(1)* 75 to 76 labelled b_1(1)* 76 to 77 labelled a_1(1)* 76 to 89 labelled a_1(2)* 77 to 78 labelled a_1(1)* 77 to 64 labelled a_1(1)* 78 to 79 labelled a_1(1)* 79 to 69 labelled b_1(1)* 79 to 89 labelled b_1(1)* 80 to 81 labelled a_1(2)* 80 to 64 labelled a_1(1)* 81 to 82 labelled a_1(2)* 82 to 69 labelled b_1(2)* 82 to 66 labelled b_1(2)* 82 to 89 labelled b_1(2)* 82 to 97 labelled b_1(2)* 83 to 84 labelled a_1(2)* 84 to 85 labelled b_1(2)* 85 to 86 labelled a_1(2)* 85 to 89 labelled a_1(2)* 86 to 87 labelled a_1(2)* 86 to 64 labelled a_1(1)* 87 to 88 labelled a_1(2)* 88 to 69 labelled b_1(2)* 88 to 66 labelled b_1(2)* 88 to 89 labelled b_1(2)* 88 to 97 labelled b_1(2)* 89 to 90 labelled b_1(2)* 90 to 91 labelled a_1(2)* 90 to 97 labelled a_1(2)* 91 to 92 labelled a_1(2)* 92 to 93 labelled b_1(2)* 93 to 94 labelled a_1(2)* 93 to 89 labelled a_1(2)* 94 to 95 labelled a_1(2)* 94 to 64 labelled a_1(1)* 95 to 96 labelled a_1(2)* 96 to 69 labelled b_1(2)* 96 to 89 labelled b_1(2)* 97 to 98 labelled b_1(2)* 98 to 99 labelled a_1(2)* 99 to 100 labelled a_1(2)* 100 to 101 labelled b_1(2)* 101 to 102 labelled a_1(2)* 102 to 103 labelled a_1(2)* 103 to 104 labelled a_1(2)* 104 to 66 labelled b_1(2)* 104 to 97 labelled b_1(2)


----------------------------------------

(8)
YES
