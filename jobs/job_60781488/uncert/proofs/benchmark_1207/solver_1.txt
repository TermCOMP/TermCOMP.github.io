NO

** BEGIN proof argument **
* Technique: [Payet, LOPSTR'18]
* Certificate: isNatList(n__cons(n__0,n__zeros)) is non-terminating
* Description:
The following rule R was generated while unfolding
the dependency pairs of the analyzed TRS:
[iteration = 8] isNatList^#(n__cons(n__0,n__zeros)) -> isNatList^#(n__cons(n__0,n__zeros))
Let l be the left-hand side and r be the right-hand side of R.
Let p = epsilon, theta1 = {} and theta2 = {}.
We have r|p = isNatList^#(n__cons(n__0,n__zeros))
and theta2(theta1(l)) = theta1(r|p), i.e., l semi-unifies with r|p.
So, the term theta1(l) = isNatList(n__cons(n__0,n__zeros))
starts an infinite rewrite sequence w.r.t. the analyzed TRS.
** END proof argument **
Total number of generated unfolded rules = 1767866

