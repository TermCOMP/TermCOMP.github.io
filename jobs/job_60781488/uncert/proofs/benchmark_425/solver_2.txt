YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/a5EX5.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 0 ms]
(2) QDP
(3) DependencyGraphProof [EQUIVALENT, 0 ms]
(4) QDP
(5) MRRProof [EQUIVALENT, 0 ms]
(6) QDP
(7) TransformationProof [EQUIVALENT, 0 ms]
(8) QDP
(9) TransformationProof [EQUIVALENT, 0 ms]
(10) QDP
(11) TransformationProof [EQUIVALENT, 0 ms]
(12) QDP
(13) SemLabProof [SOUND, 44 ms]
(14) QDP
(15) DependencyGraphProof [EQUIVALENT, 0 ms]
(16) QDP
(17) UsableRulesReductionPairsProof [EQUIVALENT, 0 ms]
(18) QDP
(19) QDPOrderProof [EQUIVALENT, 2 ms]
(20) QDP
(21) PisEmptyProof [EQUIVALENT, 0 ms]
(22) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   p(p(b(a(x0)), x1), p(x2, x3)) -> p(p(b(x2), a(a(b(x1)))), p(x3, x0))

Q is empty.

----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   P(p(b(a(x0)), x1), p(x2, x3)) -> P(p(b(x2), a(a(b(x1)))), p(x3, x0))
   P(p(b(a(x0)), x1), p(x2, x3)) -> P(b(x2), a(a(b(x1))))
   P(p(b(a(x0)), x1), p(x2, x3)) -> P(x3, x0)

The TRS R consists of the following rules:

   p(p(b(a(x0)), x1), p(x2, x3)) -> p(p(b(x2), a(a(b(x1)))), p(x3, x0))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   P(p(b(a(x0)), x1), p(x2, x3)) -> P(x3, x0)
   P(p(b(a(x0)), x1), p(x2, x3)) -> P(p(b(x2), a(a(b(x1)))), p(x3, x0))

The TRS R consists of the following rules:

   p(p(b(a(x0)), x1), p(x2, x3)) -> p(p(b(x2), a(a(b(x1)))), p(x3, x0))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) MRRProof (EQUIVALENT)
By using the rule removal processor [LPAR04] with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented.

Strictly oriented dependency pairs:

   P(p(b(a(x0)), x1), p(x2, x3)) -> P(x3, x0)


Used ordering: Polynomial interpretation [POLO]:

   POL(P(x_1, x_2)) = 2*x_1 + 2*x_2
   POL(a(x_1)) = x_1
   POL(b(x_1)) = x_1
   POL(p(x_1, x_2)) = 1 + 2*x_1 + 2*x_2


----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   P(p(b(a(x0)), x1), p(x2, x3)) -> P(p(b(x2), a(a(b(x1)))), p(x3, x0))

The TRS R consists of the following rules:

   p(p(b(a(x0)), x1), p(x2, x3)) -> p(p(b(x2), a(a(b(x1)))), p(x3, x0))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule P(p(b(a(x0)), x1), p(x2, x3)) -> P(p(b(x2), a(a(b(x1)))), p(x3, x0)) we obtained the following new rules [LPAR04]:

   (P(p(b(a(x0)), a(a(b(y_1)))), p(x2, x3)) -> P(p(b(x2), a(a(b(a(a(b(y_1))))))), p(x3, x0)),P(p(b(a(x0)), a(a(b(y_1)))), p(x2, x3)) -> P(p(b(x2), a(a(b(a(a(b(y_1))))))), p(x3, x0)))


----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   P(p(b(a(x0)), a(a(b(y_1)))), p(x2, x3)) -> P(p(b(x2), a(a(b(a(a(b(y_1))))))), p(x3, x0))

The TRS R consists of the following rules:

   p(p(b(a(x0)), x1), p(x2, x3)) -> p(p(b(x2), a(a(b(x1)))), p(x3, x0))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule P(p(b(a(x0)), a(a(b(y_1)))), p(x2, x3)) -> P(p(b(x2), a(a(b(a(a(b(y_1))))))), p(x3, x0)) we obtained the following new rules [LPAR04]:

   (P(p(b(a(x0)), a(a(b(a(a(b(y_1))))))), p(x2, x3)) -> P(p(b(x2), a(a(b(a(a(b(a(a(b(y_1)))))))))), p(x3, x0)),P(p(b(a(x0)), a(a(b(a(a(b(y_1))))))), p(x2, x3)) -> P(p(b(x2), a(a(b(a(a(b(a(a(b(y_1)))))))))), p(x3, x0)))


----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   P(p(b(a(x0)), a(a(b(a(a(b(y_1))))))), p(x2, x3)) -> P(p(b(x2), a(a(b(a(a(b(a(a(b(y_1)))))))))), p(x3, x0))

The TRS R consists of the following rules:

   p(p(b(a(x0)), x1), p(x2, x3)) -> p(p(b(x2), a(a(b(x1)))), p(x3, x0))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) TransformationProof (EQUIVALENT)
By forward instantiating [JAR06] the rule P(p(b(a(x0)), a(a(b(a(a(b(y_1))))))), p(x2, x3)) -> P(p(b(x2), a(a(b(a(a(b(a(a(b(y_1)))))))))), p(x3, x0)) we obtained the following new rules [LPAR04]:

   (P(p(b(a(x0)), a(a(b(a(a(b(x1))))))), p(a(y_0), x3)) -> P(p(b(a(y_0)), a(a(b(a(a(b(a(a(b(x1)))))))))), p(x3, x0)),P(p(b(a(x0)), a(a(b(a(a(b(x1))))))), p(a(y_0), x3)) -> P(p(b(a(y_0)), a(a(b(a(a(b(a(a(b(x1)))))))))), p(x3, x0)))


----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   P(p(b(a(x0)), a(a(b(a(a(b(x1))))))), p(a(y_0), x3)) -> P(p(b(a(y_0)), a(a(b(a(a(b(a(a(b(x1)))))))))), p(x3, x0))

The TRS R consists of the following rules:

   p(p(b(a(x0)), x1), p(x2, x3)) -> p(p(b(x2), a(a(b(x1)))), p(x3, x0))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) SemLabProof (SOUND)
We found the following model for the rules of the TRSs R and P.
Interpretation over the domain with elements from 0 to 1.
a: 1
p: 0
b: 0
P: 0
By semantic labelling [SEMLAB] we obtain the following labelled QDP problem.
----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   P.0-0(p.0-1(b.1(a.0(x0)), a.1(a.0(b.1(a.1(a.0(b.0(x1))))))), p.1-0(a.0(y_0), x3)) -> P.0-0(p.0-1(b.1(a.0(y_0)), a.1(a.0(b.1(a.1(a.0(b.1(a.1(a.0(b.0(x1)))))))))), p.0-0(x3, x0))
   P.0-0(p.0-1(b.1(a.0(x0)), a.1(a.0(b.1(a.1(a.0(b.0(x1))))))), p.1-1(a.0(y_0), x3)) -> P.0-0(p.0-1(b.1(a.0(y_0)), a.1(a.0(b.1(a.1(a.0(b.1(a.1(a.0(b.0(x1)))))))))), p.1-0(x3, x0))
   P.0-0(p.0-1(b.1(a.0(x0)), a.1(a.0(b.1(a.1(a.0(b.0(x1))))))), p.1-0(a.1(y_0), x3)) -> P.0-0(p.0-1(b.1(a.1(y_0)), a.1(a.0(b.1(a.1(a.0(b.1(a.1(a.0(b.0(x1)))))))))), p.0-0(x3, x0))
   P.0-0(p.0-1(b.1(a.0(x0)), a.1(a.0(b.1(a.1(a.0(b.0(x1))))))), p.1-1(a.1(y_0), x3)) -> P.0-0(p.0-1(b.1(a.1(y_0)), a.1(a.0(b.1(a.1(a.0(b.1(a.1(a.0(b.0(x1)))))))))), p.1-0(x3, x0))
   P.0-0(p.0-1(b.1(a.0(x0)), a.1(a.0(b.1(a.1(a.0(b.1(x1))))))), p.1-0(a.0(y_0), x3)) -> P.0-0(p.0-1(b.1(a.0(y_0)), a.1(a.0(b.1(a.1(a.0(b.1(a.1(a.0(b.1(x1)))))))))), p.0-0(x3, x0))
   P.0-0(p.0-1(b.1(a.0(x0)), a.1(a.0(b.1(a.1(a.0(b.1(x1))))))), p.1-1(a.0(y_0), x3)) -> P.0-0(p.0-1(b.1(a.0(y_0)), a.1(a.0(b.1(a.1(a.0(b.1(a.1(a.0(b.1(x1)))))))))), p.1-0(x3, x0))
   P.0-0(p.0-1(b.1(a.0(x0)), a.1(a.0(b.1(a.1(a.0(b.1(x1))))))), p.1-0(a.1(y_0), x3)) -> P.0-0(p.0-1(b.1(a.1(y_0)), a.1(a.0(b.1(a.1(a.0(b.1(a.1(a.0(b.1(x1)))))))))), p.0-0(x3, x0))
   P.0-0(p.0-1(b.1(a.0(x0)), a.1(a.0(b.1(a.1(a.0(b.1(x1))))))), p.1-1(a.1(y_0), x3)) -> P.0-0(p.0-1(b.1(a.1(y_0)), a.1(a.0(b.1(a.1(a.0(b.1(a.1(a.0(b.1(x1)))))))))), p.1-0(x3, x0))
   P.0-0(p.0-1(b.1(a.1(x0)), a.1(a.0(b.1(a.1(a.0(b.0(x1))))))), p.1-0(a.0(y_0), x3)) -> P.0-0(p.0-1(b.1(a.0(y_0)), a.1(a.0(b.1(a.1(a.0(b.1(a.1(a.0(b.0(x1)))))))))), p.0-1(x3, x0))
   P.0-0(p.0-1(b.1(a.1(x0)), a.1(a.0(b.1(a.1(a.0(b.0(x1))))))), p.1-1(a.0(y_0), x3)) -> P.0-0(p.0-1(b.1(a.0(y_0)), a.1(a.0(b.1(a.1(a.0(b.1(a.1(a.0(b.0(x1)))))))))), p.1-1(x3, x0))
   P.0-0(p.0-1(b.1(a.1(x0)), a.1(a.0(b.1(a.1(a.0(b.0(x1))))))), p.1-0(a.1(y_0), x3)) -> P.0-0(p.0-1(b.1(a.1(y_0)), a.1(a.0(b.1(a.1(a.0(b.1(a.1(a.0(b.0(x1)))))))))), p.0-1(x3, x0))
   P.0-0(p.0-1(b.1(a.1(x0)), a.1(a.0(b.1(a.1(a.0(b.0(x1))))))), p.1-1(a.1(y_0), x3)) -> P.0-0(p.0-1(b.1(a.1(y_0)), a.1(a.0(b.1(a.1(a.0(b.1(a.1(a.0(b.0(x1)))))))))), p.1-1(x3, x0))
   P.0-0(p.0-1(b.1(a.1(x0)), a.1(a.0(b.1(a.1(a.0(b.1(x1))))))), p.1-0(a.0(y_0), x3)) -> P.0-0(p.0-1(b.1(a.0(y_0)), a.1(a.0(b.1(a.1(a.0(b.1(a.1(a.0(b.1(x1)))))))))), p.0-1(x3, x0))
   P.0-0(p.0-1(b.1(a.1(x0)), a.1(a.0(b.1(a.1(a.0(b.1(x1))))))), p.1-1(a.0(y_0), x3)) -> P.0-0(p.0-1(b.1(a.0(y_0)), a.1(a.0(b.1(a.1(a.0(b.1(a.1(a.0(b.1(x1)))))))))), p.1-1(x3, x0))
   P.0-0(p.0-1(b.1(a.1(x0)), a.1(a.0(b.1(a.1(a.0(b.1(x1))))))), p.1-0(a.1(y_0), x3)) -> P.0-0(p.0-1(b.1(a.1(y_0)), a.1(a.0(b.1(a.1(a.0(b.1(a.1(a.0(b.1(x1)))))))))), p.0-1(x3, x0))
   P.0-0(p.0-1(b.1(a.1(x0)), a.1(a.0(b.1(a.1(a.0(b.1(x1))))))), p.1-1(a.1(y_0), x3)) -> P.0-0(p.0-1(b.1(a.1(y_0)), a.1(a.0(b.1(a.1(a.0(b.1(a.1(a.0(b.1(x1)))))))))), p.1-1(x3, x0))

The TRS R consists of the following rules:

   p.0-0(p.0-0(b.1(a.0(x0)), x1), p.0-0(x2, x3)) -> p.0-0(p.0-1(b.0(x2), a.1(a.0(b.0(x1)))), p.0-0(x3, x0))
   p.0-0(p.0-0(b.1(a.0(x0)), x1), p.0-1(x2, x3)) -> p.0-0(p.0-1(b.0(x2), a.1(a.0(b.0(x1)))), p.1-0(x3, x0))
   p.0-0(p.0-0(b.1(a.0(x0)), x1), p.1-0(x2, x3)) -> p.0-0(p.0-1(b.1(x2), a.1(a.0(b.0(x1)))), p.0-0(x3, x0))
   p.0-0(p.0-0(b.1(a.0(x0)), x1), p.1-1(x2, x3)) -> p.0-0(p.0-1(b.1(x2), a.1(a.0(b.0(x1)))), p.1-0(x3, x0))
   p.0-0(p.0-1(b.1(a.0(x0)), x1), p.0-0(x2, x3)) -> p.0-0(p.0-1(b.0(x2), a.1(a.0(b.1(x1)))), p.0-0(x3, x0))
   p.0-0(p.0-1(b.1(a.0(x0)), x1), p.0-1(x2, x3)) -> p.0-0(p.0-1(b.0(x2), a.1(a.0(b.1(x1)))), p.1-0(x3, x0))
   p.0-0(p.0-1(b.1(a.0(x0)), x1), p.1-0(x2, x3)) -> p.0-0(p.0-1(b.1(x2), a.1(a.0(b.1(x1)))), p.0-0(x3, x0))
   p.0-0(p.0-1(b.1(a.0(x0)), x1), p.1-1(x2, x3)) -> p.0-0(p.0-1(b.1(x2), a.1(a.0(b.1(x1)))), p.1-0(x3, x0))
   p.0-0(p.0-0(b.1(a.1(x0)), x1), p.0-0(x2, x3)) -> p.0-0(p.0-1(b.0(x2), a.1(a.0(b.0(x1)))), p.0-1(x3, x0))
   p.0-0(p.0-0(b.1(a.1(x0)), x1), p.0-1(x2, x3)) -> p.0-0(p.0-1(b.0(x2), a.1(a.0(b.0(x1)))), p.1-1(x3, x0))
   p.0-0(p.0-0(b.1(a.1(x0)), x1), p.1-0(x2, x3)) -> p.0-0(p.0-1(b.1(x2), a.1(a.0(b.0(x1)))), p.0-1(x3, x0))
   p.0-0(p.0-0(b.1(a.1(x0)), x1), p.1-1(x2, x3)) -> p.0-0(p.0-1(b.1(x2), a.1(a.0(b.0(x1)))), p.1-1(x3, x0))
   p.0-0(p.0-1(b.1(a.1(x0)), x1), p.0-0(x2, x3)) -> p.0-0(p.0-1(b.0(x2), a.1(a.0(b.1(x1)))), p.0-1(x3, x0))
   p.0-0(p.0-1(b.1(a.1(x0)), x1), p.0-1(x2, x3)) -> p.0-0(p.0-1(b.0(x2), a.1(a.0(b.1(x1)))), p.1-1(x3, x0))
   p.0-0(p.0-1(b.1(a.1(x0)), x1), p.1-0(x2, x3)) -> p.0-0(p.0-1(b.1(x2), a.1(a.0(b.1(x1)))), p.0-1(x3, x0))
   p.0-0(p.0-1(b.1(a.1(x0)), x1), p.1-1(x2, x3)) -> p.0-0(p.0-1(b.1(x2), a.1(a.0(b.1(x1)))), p.1-1(x3, x0))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 15 less nodes.
----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   P.0-0(p.0-1(b.1(a.1(x0)), a.1(a.0(b.1(a.1(a.0(b.1(x1))))))), p.1-1(a.1(y_0), x3)) -> P.0-0(p.0-1(b.1(a.1(y_0)), a.1(a.0(b.1(a.1(a.0(b.1(a.1(a.0(b.1(x1)))))))))), p.1-1(x3, x0))

The TRS R consists of the following rules:

   p.0-0(p.0-0(b.1(a.0(x0)), x1), p.0-0(x2, x3)) -> p.0-0(p.0-1(b.0(x2), a.1(a.0(b.0(x1)))), p.0-0(x3, x0))
   p.0-0(p.0-0(b.1(a.0(x0)), x1), p.0-1(x2, x3)) -> p.0-0(p.0-1(b.0(x2), a.1(a.0(b.0(x1)))), p.1-0(x3, x0))
   p.0-0(p.0-0(b.1(a.0(x0)), x1), p.1-0(x2, x3)) -> p.0-0(p.0-1(b.1(x2), a.1(a.0(b.0(x1)))), p.0-0(x3, x0))
   p.0-0(p.0-0(b.1(a.0(x0)), x1), p.1-1(x2, x3)) -> p.0-0(p.0-1(b.1(x2), a.1(a.0(b.0(x1)))), p.1-0(x3, x0))
   p.0-0(p.0-1(b.1(a.0(x0)), x1), p.0-0(x2, x3)) -> p.0-0(p.0-1(b.0(x2), a.1(a.0(b.1(x1)))), p.0-0(x3, x0))
   p.0-0(p.0-1(b.1(a.0(x0)), x1), p.0-1(x2, x3)) -> p.0-0(p.0-1(b.0(x2), a.1(a.0(b.1(x1)))), p.1-0(x3, x0))
   p.0-0(p.0-1(b.1(a.0(x0)), x1), p.1-0(x2, x3)) -> p.0-0(p.0-1(b.1(x2), a.1(a.0(b.1(x1)))), p.0-0(x3, x0))
   p.0-0(p.0-1(b.1(a.0(x0)), x1), p.1-1(x2, x3)) -> p.0-0(p.0-1(b.1(x2), a.1(a.0(b.1(x1)))), p.1-0(x3, x0))
   p.0-0(p.0-0(b.1(a.1(x0)), x1), p.0-0(x2, x3)) -> p.0-0(p.0-1(b.0(x2), a.1(a.0(b.0(x1)))), p.0-1(x3, x0))
   p.0-0(p.0-0(b.1(a.1(x0)), x1), p.0-1(x2, x3)) -> p.0-0(p.0-1(b.0(x2), a.1(a.0(b.0(x1)))), p.1-1(x3, x0))
   p.0-0(p.0-0(b.1(a.1(x0)), x1), p.1-0(x2, x3)) -> p.0-0(p.0-1(b.1(x2), a.1(a.0(b.0(x1)))), p.0-1(x3, x0))
   p.0-0(p.0-0(b.1(a.1(x0)), x1), p.1-1(x2, x3)) -> p.0-0(p.0-1(b.1(x2), a.1(a.0(b.0(x1)))), p.1-1(x3, x0))
   p.0-0(p.0-1(b.1(a.1(x0)), x1), p.0-0(x2, x3)) -> p.0-0(p.0-1(b.0(x2), a.1(a.0(b.1(x1)))), p.0-1(x3, x0))
   p.0-0(p.0-1(b.1(a.1(x0)), x1), p.0-1(x2, x3)) -> p.0-0(p.0-1(b.0(x2), a.1(a.0(b.1(x1)))), p.1-1(x3, x0))
   p.0-0(p.0-1(b.1(a.1(x0)), x1), p.1-0(x2, x3)) -> p.0-0(p.0-1(b.1(x2), a.1(a.0(b.1(x1)))), p.0-1(x3, x0))
   p.0-0(p.0-1(b.1(a.1(x0)), x1), p.1-1(x2, x3)) -> p.0-0(p.0-1(b.1(x2), a.1(a.0(b.1(x1)))), p.1-1(x3, x0))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) UsableRulesReductionPairsProof (EQUIVALENT)
By using the usable rules with reduction pair processor [LPAR04] with a polynomial ordering [POLO], all dependency pairs and the corresponding usable rules [FROCOS05] can be oriented non-strictly. All non-usable rules are removed, and those dependency pairs and usable rules that have been oriented strictly or contain non-usable symbols in their left-hand side are removed as well.

No dependency pairs are removed.

The following rules are removed from R:

   p.0-0(p.0-0(b.1(a.0(x0)), x1), p.0-0(x2, x3)) -> p.0-0(p.0-1(b.0(x2), a.1(a.0(b.0(x1)))), p.0-0(x3, x0))
   p.0-0(p.0-0(b.1(a.0(x0)), x1), p.0-1(x2, x3)) -> p.0-0(p.0-1(b.0(x2), a.1(a.0(b.0(x1)))), p.1-0(x3, x0))
   p.0-0(p.0-0(b.1(a.0(x0)), x1), p.1-0(x2, x3)) -> p.0-0(p.0-1(b.1(x2), a.1(a.0(b.0(x1)))), p.0-0(x3, x0))
   p.0-0(p.0-0(b.1(a.0(x0)), x1), p.1-1(x2, x3)) -> p.0-0(p.0-1(b.1(x2), a.1(a.0(b.0(x1)))), p.1-0(x3, x0))
   p.0-0(p.0-1(b.1(a.0(x0)), x1), p.0-0(x2, x3)) -> p.0-0(p.0-1(b.0(x2), a.1(a.0(b.1(x1)))), p.0-0(x3, x0))
   p.0-0(p.0-1(b.1(a.0(x0)), x1), p.0-1(x2, x3)) -> p.0-0(p.0-1(b.0(x2), a.1(a.0(b.1(x1)))), p.1-0(x3, x0))
   p.0-0(p.0-1(b.1(a.0(x0)), x1), p.1-0(x2, x3)) -> p.0-0(p.0-1(b.1(x2), a.1(a.0(b.1(x1)))), p.0-0(x3, x0))
   p.0-0(p.0-1(b.1(a.0(x0)), x1), p.1-1(x2, x3)) -> p.0-0(p.0-1(b.1(x2), a.1(a.0(b.1(x1)))), p.1-0(x3, x0))
   p.0-0(p.0-0(b.1(a.1(x0)), x1), p.0-0(x2, x3)) -> p.0-0(p.0-1(b.0(x2), a.1(a.0(b.0(x1)))), p.0-1(x3, x0))
   p.0-0(p.0-0(b.1(a.1(x0)), x1), p.0-1(x2, x3)) -> p.0-0(p.0-1(b.0(x2), a.1(a.0(b.0(x1)))), p.1-1(x3, x0))
   p.0-0(p.0-0(b.1(a.1(x0)), x1), p.1-0(x2, x3)) -> p.0-0(p.0-1(b.1(x2), a.1(a.0(b.0(x1)))), p.0-1(x3, x0))
   p.0-0(p.0-0(b.1(a.1(x0)), x1), p.1-1(x2, x3)) -> p.0-0(p.0-1(b.1(x2), a.1(a.0(b.0(x1)))), p.1-1(x3, x0))
   p.0-0(p.0-1(b.1(a.1(x0)), x1), p.0-0(x2, x3)) -> p.0-0(p.0-1(b.0(x2), a.1(a.0(b.1(x1)))), p.0-1(x3, x0))
   p.0-0(p.0-1(b.1(a.1(x0)), x1), p.0-1(x2, x3)) -> p.0-0(p.0-1(b.0(x2), a.1(a.0(b.1(x1)))), p.1-1(x3, x0))
   p.0-0(p.0-1(b.1(a.1(x0)), x1), p.1-0(x2, x3)) -> p.0-0(p.0-1(b.1(x2), a.1(a.0(b.1(x1)))), p.0-1(x3, x0))
   p.0-0(p.0-1(b.1(a.1(x0)), x1), p.1-1(x2, x3)) -> p.0-0(p.0-1(b.1(x2), a.1(a.0(b.1(x1)))), p.1-1(x3, x0))
Used ordering: POLO with Polynomial interpretation [POLO]:

   POL(P.0-0(x_1, x_2)) = x_1 + x_2
   POL(a.0(x_1)) = x_1
   POL(a.1(x_1)) = x_1
   POL(b.1(x_1)) = x_1
   POL(p.0-1(x_1, x_2)) = x_1 + x_2
   POL(p.1-1(x_1, x_2)) = x_1 + x_2


----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   P.0-0(p.0-1(b.1(a.1(x0)), a.1(a.0(b.1(a.1(a.0(b.1(x1))))))), p.1-1(a.1(y_0), x3)) -> P.0-0(p.0-1(b.1(a.1(y_0)), a.1(a.0(b.1(a.1(a.0(b.1(a.1(a.0(b.1(x1)))))))))), p.1-1(x3, x0))

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   P.0-0(p.0-1(b.1(a.1(x0)), a.1(a.0(b.1(a.1(a.0(b.1(x1))))))), p.1-1(a.1(y_0), x3)) -> P.0-0(p.0-1(b.1(a.1(y_0)), a.1(a.0(b.1(a.1(a.0(b.1(a.1(a.0(b.1(x1)))))))))), p.1-1(x3, x0))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(P.0-0(x_1, x_2)) = x_1 + x_2
   POL(a.0(x_1)) = 1
   POL(a.1(x_1)) = 1 + x_1
   POL(b.1(x_1)) = 1 + x_1
   POL(p.0-1(x_1, x_2)) = x_1 + x_2
   POL(p.1-1(x_1, x_2)) = x_1 + x_2

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:
none


----------------------------------------

(20)
Obligation:
Q DP problem:
P is empty.
R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(21) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(22)
YES
