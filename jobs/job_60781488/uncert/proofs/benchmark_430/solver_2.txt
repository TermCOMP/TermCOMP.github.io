YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/A4jla.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) AAECC Innermost [EQUIVALENT, 0 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 0 ms]
(4) QDP
(5) DependencyGraphProof [EQUIVALENT, 0 ms]
(6) AND
    (7) QDP
        (8) UsableRulesProof [EQUIVALENT, 0 ms]
        (9) QDP
        (10) QReductionProof [EQUIVALENT, 0 ms]
        (11) QDP
        (12) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (13) YES
    (14) QDP
        (15) UsableRulesProof [EQUIVALENT, 0 ms]
        (16) QDP
        (17) QReductionProof [EQUIVALENT, 0 ms]
        (18) QDP
        (19) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (20) YES
    (21) QDP
        (22) UsableRulesProof [EQUIVALENT, 0 ms]
        (23) QDP
        (24) QReductionProof [EQUIVALENT, 0 ms]
        (25) QDP
        (26) NonInfProof [EQUIVALENT, 39 ms]
        (27) QDP
        (28) PisEmptyProof [EQUIVALENT, 0 ms]
        (29) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(true, x, y, z) -> f(gt(x, plus(y, z)), x, s(y), z)
   f(true, x, y, z) -> f(gt(x, plus(y, z)), x, y, s(z))
   plus(n, 0) -> n
   plus(n, s(m)) -> s(plus(n, m))
   gt(0, v) -> false
   gt(s(u), 0) -> true
   gt(s(u), s(v)) -> gt(u, v)

Q is empty.

----------------------------------------

(1) AAECC Innermost (EQUIVALENT)
We have applied [NOC,AAECCNOC] to switch to innermost. The TRS R 1 is 
   plus(n, 0) -> n
   plus(n, s(m)) -> s(plus(n, m))
   gt(0, v) -> false
   gt(s(u), 0) -> true
   gt(s(u), s(v)) -> gt(u, v)

The TRS R 2 is 
   f(true, x, y, z) -> f(gt(x, plus(y, z)), x, s(y), z)
   f(true, x, y, z) -> f(gt(x, plus(y, z)), x, y, s(z))

The signature Sigma is {f_4}
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(true, x, y, z) -> f(gt(x, plus(y, z)), x, s(y), z)
   f(true, x, y, z) -> f(gt(x, plus(y, z)), x, y, s(z))
   plus(n, 0) -> n
   plus(n, s(m)) -> s(plus(n, m))
   gt(0, v) -> false
   gt(s(u), 0) -> true
   gt(s(u), s(v)) -> gt(u, v)

The set Q consists of the following terms:

   f(true, x0, x1, x2)
   plus(x0, 0)
   plus(x0, s(x1))
   gt(0, x0)
   gt(s(x0), 0)
   gt(s(x0), s(x1))


----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(true, x, y, z) -> F(gt(x, plus(y, z)), x, s(y), z)
   F(true, x, y, z) -> GT(x, plus(y, z))
   F(true, x, y, z) -> PLUS(y, z)
   F(true, x, y, z) -> F(gt(x, plus(y, z)), x, y, s(z))
   PLUS(n, s(m)) -> PLUS(n, m)
   GT(s(u), s(v)) -> GT(u, v)

The TRS R consists of the following rules:

   f(true, x, y, z) -> f(gt(x, plus(y, z)), x, s(y), z)
   f(true, x, y, z) -> f(gt(x, plus(y, z)), x, y, s(z))
   plus(n, 0) -> n
   plus(n, s(m)) -> s(plus(n, m))
   gt(0, v) -> false
   gt(s(u), 0) -> true
   gt(s(u), s(v)) -> gt(u, v)

The set Q consists of the following terms:

   f(true, x0, x1, x2)
   plus(x0, 0)
   plus(x0, s(x1))
   gt(0, x0)
   gt(s(x0), 0)
   gt(s(x0), s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 3 SCCs with 2 less nodes.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   GT(s(u), s(v)) -> GT(u, v)

The TRS R consists of the following rules:

   f(true, x, y, z) -> f(gt(x, plus(y, z)), x, s(y), z)
   f(true, x, y, z) -> f(gt(x, plus(y, z)), x, y, s(z))
   plus(n, 0) -> n
   plus(n, s(m)) -> s(plus(n, m))
   gt(0, v) -> false
   gt(s(u), 0) -> true
   gt(s(u), s(v)) -> gt(u, v)

The set Q consists of the following terms:

   f(true, x0, x1, x2)
   plus(x0, 0)
   plus(x0, s(x1))
   gt(0, x0)
   gt(s(x0), 0)
   gt(s(x0), s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(8) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(9)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   GT(s(u), s(v)) -> GT(u, v)

R is empty.
The set Q consists of the following terms:

   f(true, x0, x1, x2)
   plus(x0, 0)
   plus(x0, s(x1))
   gt(0, x0)
   gt(s(x0), 0)
   gt(s(x0), s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(10) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   f(true, x0, x1, x2)
   plus(x0, 0)
   plus(x0, s(x1))
   gt(0, x0)
   gt(s(x0), 0)
   gt(s(x0), s(x1))


----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   GT(s(u), s(v)) -> GT(u, v)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(12) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*GT(s(u), s(v)) -> GT(u, v)
The graph contains the following edges 1 > 1, 2 > 2


----------------------------------------

(13)
YES

----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   PLUS(n, s(m)) -> PLUS(n, m)

The TRS R consists of the following rules:

   f(true, x, y, z) -> f(gt(x, plus(y, z)), x, s(y), z)
   f(true, x, y, z) -> f(gt(x, plus(y, z)), x, y, s(z))
   plus(n, 0) -> n
   plus(n, s(m)) -> s(plus(n, m))
   gt(0, v) -> false
   gt(s(u), 0) -> true
   gt(s(u), s(v)) -> gt(u, v)

The set Q consists of the following terms:

   f(true, x0, x1, x2)
   plus(x0, 0)
   plus(x0, s(x1))
   gt(0, x0)
   gt(s(x0), 0)
   gt(s(x0), s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   PLUS(n, s(m)) -> PLUS(n, m)

R is empty.
The set Q consists of the following terms:

   f(true, x0, x1, x2)
   plus(x0, 0)
   plus(x0, s(x1))
   gt(0, x0)
   gt(s(x0), 0)
   gt(s(x0), s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   f(true, x0, x1, x2)
   plus(x0, 0)
   plus(x0, s(x1))
   gt(0, x0)
   gt(s(x0), 0)
   gt(s(x0), s(x1))


----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   PLUS(n, s(m)) -> PLUS(n, m)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*PLUS(n, s(m)) -> PLUS(n, m)
The graph contains the following edges 1 >= 1, 2 > 2


----------------------------------------

(20)
YES

----------------------------------------

(21)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(true, x, y, z) -> F(gt(x, plus(y, z)), x, y, s(z))
   F(true, x, y, z) -> F(gt(x, plus(y, z)), x, s(y), z)

The TRS R consists of the following rules:

   f(true, x, y, z) -> f(gt(x, plus(y, z)), x, s(y), z)
   f(true, x, y, z) -> f(gt(x, plus(y, z)), x, y, s(z))
   plus(n, 0) -> n
   plus(n, s(m)) -> s(plus(n, m))
   gt(0, v) -> false
   gt(s(u), 0) -> true
   gt(s(u), s(v)) -> gt(u, v)

The set Q consists of the following terms:

   f(true, x0, x1, x2)
   plus(x0, 0)
   plus(x0, s(x1))
   gt(0, x0)
   gt(s(x0), 0)
   gt(s(x0), s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(22) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(23)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(true, x, y, z) -> F(gt(x, plus(y, z)), x, y, s(z))
   F(true, x, y, z) -> F(gt(x, plus(y, z)), x, s(y), z)

The TRS R consists of the following rules:

   plus(n, 0) -> n
   plus(n, s(m)) -> s(plus(n, m))
   gt(0, v) -> false
   gt(s(u), 0) -> true
   gt(s(u), s(v)) -> gt(u, v)

The set Q consists of the following terms:

   f(true, x0, x1, x2)
   plus(x0, 0)
   plus(x0, s(x1))
   gt(0, x0)
   gt(s(x0), 0)
   gt(s(x0), s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(24) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   f(true, x0, x1, x2)


----------------------------------------

(25)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(true, x, y, z) -> F(gt(x, plus(y, z)), x, y, s(z))
   F(true, x, y, z) -> F(gt(x, plus(y, z)), x, s(y), z)

The TRS R consists of the following rules:

   plus(n, 0) -> n
   plus(n, s(m)) -> s(plus(n, m))
   gt(0, v) -> false
   gt(s(u), 0) -> true
   gt(s(u), s(v)) -> gt(u, v)

The set Q consists of the following terms:

   plus(x0, 0)
   plus(x0, s(x1))
   gt(0, x0)
   gt(s(x0), 0)
   gt(s(x0), s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(26) NonInfProof (EQUIVALENT)
The DP Problem is simplified using the Induction Calculus [NONINF] with the following steps:

Note that final constraints are written in bold face.



For Pair F(true, x, y, z) -> F(gt(x, plus(y, z)), x, y, s(z)) the following chains were created:
*We consider the chain F(true, x0, x1, x2) -> F(gt(x0, plus(x1, x2)), x0, x1, s(x2)), F(true, x3, x4, x5) -> F(gt(x3, plus(x4, x5)), x3, x4, s(x5)) which results in the following constraint:

(1)    (F(gt(x0, plus(x1, x2)), x0, x1, s(x2))=F(true, x3, x4, x5)  ==>  F(true, x3, x4, x5)_>=_F(gt(x3, plus(x4, x5)), x3, x4, s(x5)))



We simplified constraint (1) using rules (I), (II), (III), (VII) which results in the following new constraint:

(2)    (plus(x1, x2)=x24 & gt(x0, x24)=true  ==>  F(true, x0, x1, s(x2))_>=_F(gt(x0, plus(x1, s(x2))), x0, x1, s(s(x2))))



We simplified constraint (2) using rule (V) (with possible (I) afterwards) using induction on gt(x0, x24)=true which results in the following new constraints:

(3)    (true=true & plus(x1, x2)=0  ==>  F(true, s(x26), x1, s(x2))_>=_F(gt(s(x26), plus(x1, s(x2))), s(x26), x1, s(s(x2))))

(4)    (gt(x28, x27)=true & plus(x1, x2)=s(x27) & (\/x29,x30:gt(x28, x27)=true & plus(x29, x30)=x27  ==>  F(true, x28, x29, s(x30))_>=_F(gt(x28, plus(x29, s(x30))), x28, x29, s(s(x30))))  ==>  F(true, s(x28), x1, s(x2))_>=_F(gt(s(x28), plus(x1, s(x2))), s(x28), x1, s(s(x2))))



We simplified constraint (3) using rules (I), (II) which results in the following new constraint:

(5)    (plus(x1, x2)=0  ==>  F(true, s(x26), x1, s(x2))_>=_F(gt(s(x26), plus(x1, s(x2))), s(x26), x1, s(s(x2))))



We simplified constraint (4) using rule (V) (with possible (I) afterwards) using induction on plus(x1, x2)=s(x27) which results in the following new constraints:

(6)    (x34=s(x27) & gt(x28, x27)=true & (\/x29,x30:gt(x28, x27)=true & plus(x29, x30)=x27  ==>  F(true, x28, x29, s(x30))_>=_F(gt(x28, plus(x29, s(x30))), x28, x29, s(s(x30))))  ==>  F(true, s(x28), x34, s(0))_>=_F(gt(s(x28), plus(x34, s(0))), s(x28), x34, s(s(0))))

(7)    (s(plus(x36, x35))=s(x27) & gt(x28, x27)=true & (\/x29,x30:gt(x28, x27)=true & plus(x29, x30)=x27  ==>  F(true, x28, x29, s(x30))_>=_F(gt(x28, plus(x29, s(x30))), x28, x29, s(s(x30)))) & (\/x37,x38,x39,x40:plus(x36, x35)=s(x37) & gt(x38, x37)=true & (\/x39,x40:gt(x38, x37)=true & plus(x39, x40)=x37  ==>  F(true, x38, x39, s(x40))_>=_F(gt(x38, plus(x39, s(x40))), x38, x39, s(s(x40))))  ==>  F(true, s(x38), x36, s(x35))_>=_F(gt(s(x38), plus(x36, s(x35))), s(x38), x36, s(s(x35))))  ==>  F(true, s(x28), x36, s(s(x35)))_>=_F(gt(s(x28), plus(x36, s(s(x35)))), s(x28), x36, s(s(s(x35)))))



We simplified constraint (5) using rule (V) (with possible (I) afterwards) using induction on plus(x1, x2)=0 which results in the following new constraint:

(8)    (x31=0  ==>  F(true, s(x26), x31, s(0))_>=_F(gt(s(x26), plus(x31, s(0))), s(x26), x31, s(s(0))))



We simplified constraint (8) using rule (III) which results in the following new constraint:

(9)    (F(true, s(x26), 0, s(0))_>=_F(gt(s(x26), plus(0, s(0))), s(x26), 0, s(s(0))))



We simplified constraint (6) using rules (III), (IV) which results in the following new constraint:

(10)    (gt(x28, x27)=true  ==>  F(true, s(x28), s(x27), s(0))_>=_F(gt(s(x28), plus(s(x27), s(0))), s(x28), s(x27), s(s(0))))



We simplified constraint (7) using rules (I), (II) which results in the following new constraint:

(11)    (plus(x36, x35)=x27 & gt(x28, x27)=true & (\/x29,x30:gt(x28, x27)=true & plus(x29, x30)=x27  ==>  F(true, x28, x29, s(x30))_>=_F(gt(x28, plus(x29, s(x30))), x28, x29, s(s(x30)))) & (\/x37,x38,x39,x40:plus(x36, x35)=s(x37) & gt(x38, x37)=true & (\/x39,x40:gt(x38, x37)=true & plus(x39, x40)=x37  ==>  F(true, x38, x39, s(x40))_>=_F(gt(x38, plus(x39, s(x40))), x38, x39, s(s(x40))))  ==>  F(true, s(x38), x36, s(x35))_>=_F(gt(s(x38), plus(x36, s(x35))), s(x38), x36, s(s(x35))))  ==>  F(true, s(x28), x36, s(s(x35)))_>=_F(gt(s(x28), plus(x36, s(s(x35)))), s(x28), x36, s(s(s(x35)))))



We simplified constraint (10) using rule (V) (with possible (I) afterwards) using induction on gt(x28, x27)=true which results in the following new constraints:

(12)    (true=true  ==>  F(true, s(s(x42)), s(0), s(0))_>=_F(gt(s(s(x42)), plus(s(0), s(0))), s(s(x42)), s(0), s(s(0))))

(13)    (gt(x44, x43)=true & (gt(x44, x43)=true  ==>  F(true, s(x44), s(x43), s(0))_>=_F(gt(s(x44), plus(s(x43), s(0))), s(x44), s(x43), s(s(0))))  ==>  F(true, s(s(x44)), s(s(x43)), s(0))_>=_F(gt(s(s(x44)), plus(s(s(x43)), s(0))), s(s(x44)), s(s(x43)), s(s(0))))



We simplified constraint (12) using rules (I), (II) which results in the following new constraint:

(14)    (F(true, s(s(x42)), s(0), s(0))_>=_F(gt(s(s(x42)), plus(s(0), s(0))), s(s(x42)), s(0), s(s(0))))



We simplified constraint (13) using rule (VI) where we applied the induction hypothesis (gt(x44, x43)=true  ==>  F(true, s(x44), s(x43), s(0))_>=_F(gt(s(x44), plus(s(x43), s(0))), s(x44), s(x43), s(s(0)))) with sigma = [ ] which results in the following new constraint:

(15)    (F(true, s(x44), s(x43), s(0))_>=_F(gt(s(x44), plus(s(x43), s(0))), s(x44), s(x43), s(s(0)))  ==>  F(true, s(s(x44)), s(s(x43)), s(0))_>=_F(gt(s(s(x44)), plus(s(s(x43)), s(0))), s(s(x44)), s(s(x43)), s(s(0))))



We simplified constraint (11) using rule (VI) where we applied the induction hypothesis (\/x29,x30:gt(x28, x27)=true & plus(x29, x30)=x27  ==>  F(true, x28, x29, s(x30))_>=_F(gt(x28, plus(x29, s(x30))), x28, x29, s(s(x30)))) with sigma = [x29 / x36, x30 / x35] which results in the following new constraint:

(16)    (F(true, x28, x36, s(x35))_>=_F(gt(x28, plus(x36, s(x35))), x28, x36, s(s(x35))) & (\/x37,x38,x39,x40:plus(x36, x35)=s(x37) & gt(x38, x37)=true & (\/x39,x40:gt(x38, x37)=true & plus(x39, x40)=x37  ==>  F(true, x38, x39, s(x40))_>=_F(gt(x38, plus(x39, s(x40))), x38, x39, s(s(x40))))  ==>  F(true, s(x38), x36, s(x35))_>=_F(gt(s(x38), plus(x36, s(x35))), s(x38), x36, s(s(x35))))  ==>  F(true, s(x28), x36, s(s(x35)))_>=_F(gt(s(x28), plus(x36, s(s(x35)))), s(x28), x36, s(s(s(x35)))))



We simplified constraint (16) using rule (IV) which results in the following new constraint:

(17)    (F(true, x28, x36, s(x35))_>=_F(gt(x28, plus(x36, s(x35))), x28, x36, s(s(x35)))  ==>  F(true, s(x28), x36, s(s(x35)))_>=_F(gt(s(x28), plus(x36, s(s(x35)))), s(x28), x36, s(s(s(x35)))))




*We consider the chain F(true, x6, x7, x8) -> F(gt(x6, plus(x7, x8)), x6, s(x7), x8), F(true, x9, x10, x11) -> F(gt(x9, plus(x10, x11)), x9, x10, s(x11)) which results in the following constraint:

(1)    (F(gt(x6, plus(x7, x8)), x6, s(x7), x8)=F(true, x9, x10, x11)  ==>  F(true, x9, x10, x11)_>=_F(gt(x9, plus(x10, x11)), x9, x10, s(x11)))



We simplified constraint (1) using rules (I), (II), (III), (VII) which results in the following new constraint:

(2)    (plus(x7, x8)=x45 & gt(x6, x45)=true  ==>  F(true, x6, s(x7), x8)_>=_F(gt(x6, plus(s(x7), x8)), x6, s(x7), s(x8)))



We simplified constraint (2) using rule (V) (with possible (I) afterwards) using induction on gt(x6, x45)=true which results in the following new constraints:

(3)    (true=true & plus(x7, x8)=0  ==>  F(true, s(x47), s(x7), x8)_>=_F(gt(s(x47), plus(s(x7), x8)), s(x47), s(x7), s(x8)))

(4)    (gt(x49, x48)=true & plus(x7, x8)=s(x48) & (\/x50,x51:gt(x49, x48)=true & plus(x50, x51)=x48  ==>  F(true, x49, s(x50), x51)_>=_F(gt(x49, plus(s(x50), x51)), x49, s(x50), s(x51)))  ==>  F(true, s(x49), s(x7), x8)_>=_F(gt(s(x49), plus(s(x7), x8)), s(x49), s(x7), s(x8)))



We simplified constraint (3) using rules (I), (II) which results in the following new constraint:

(5)    (plus(x7, x8)=0  ==>  F(true, s(x47), s(x7), x8)_>=_F(gt(s(x47), plus(s(x7), x8)), s(x47), s(x7), s(x8)))



We simplified constraint (4) using rule (V) (with possible (I) afterwards) using induction on plus(x7, x8)=s(x48) which results in the following new constraints:

(6)    (x55=s(x48) & gt(x49, x48)=true & (\/x50,x51:gt(x49, x48)=true & plus(x50, x51)=x48  ==>  F(true, x49, s(x50), x51)_>=_F(gt(x49, plus(s(x50), x51)), x49, s(x50), s(x51)))  ==>  F(true, s(x49), s(x55), 0)_>=_F(gt(s(x49), plus(s(x55), 0)), s(x49), s(x55), s(0)))

(7)    (s(plus(x57, x56))=s(x48) & gt(x49, x48)=true & (\/x50,x51:gt(x49, x48)=true & plus(x50, x51)=x48  ==>  F(true, x49, s(x50), x51)_>=_F(gt(x49, plus(s(x50), x51)), x49, s(x50), s(x51))) & (\/x58,x59,x60,x61:plus(x57, x56)=s(x58) & gt(x59, x58)=true & (\/x60,x61:gt(x59, x58)=true & plus(x60, x61)=x58  ==>  F(true, x59, s(x60), x61)_>=_F(gt(x59, plus(s(x60), x61)), x59, s(x60), s(x61)))  ==>  F(true, s(x59), s(x57), x56)_>=_F(gt(s(x59), plus(s(x57), x56)), s(x59), s(x57), s(x56)))  ==>  F(true, s(x49), s(x57), s(x56))_>=_F(gt(s(x49), plus(s(x57), s(x56))), s(x49), s(x57), s(s(x56))))



We simplified constraint (5) using rule (V) (with possible (I) afterwards) using induction on plus(x7, x8)=0 which results in the following new constraint:

(8)    (x52=0  ==>  F(true, s(x47), s(x52), 0)_>=_F(gt(s(x47), plus(s(x52), 0)), s(x47), s(x52), s(0)))



We simplified constraint (8) using rule (III) which results in the following new constraint:

(9)    (F(true, s(x47), s(0), 0)_>=_F(gt(s(x47), plus(s(0), 0)), s(x47), s(0), s(0)))



We simplified constraint (6) using rules (III), (IV) which results in the following new constraint:

(10)    (gt(x49, x48)=true  ==>  F(true, s(x49), s(s(x48)), 0)_>=_F(gt(s(x49), plus(s(s(x48)), 0)), s(x49), s(s(x48)), s(0)))



We simplified constraint (7) using rules (I), (II) which results in the following new constraint:

(11)    (plus(x57, x56)=x48 & gt(x49, x48)=true & (\/x50,x51:gt(x49, x48)=true & plus(x50, x51)=x48  ==>  F(true, x49, s(x50), x51)_>=_F(gt(x49, plus(s(x50), x51)), x49, s(x50), s(x51))) & (\/x58,x59,x60,x61:plus(x57, x56)=s(x58) & gt(x59, x58)=true & (\/x60,x61:gt(x59, x58)=true & plus(x60, x61)=x58  ==>  F(true, x59, s(x60), x61)_>=_F(gt(x59, plus(s(x60), x61)), x59, s(x60), s(x61)))  ==>  F(true, s(x59), s(x57), x56)_>=_F(gt(s(x59), plus(s(x57), x56)), s(x59), s(x57), s(x56)))  ==>  F(true, s(x49), s(x57), s(x56))_>=_F(gt(s(x49), plus(s(x57), s(x56))), s(x49), s(x57), s(s(x56))))



We simplified constraint (10) using rule (V) (with possible (I) afterwards) using induction on gt(x49, x48)=true which results in the following new constraints:

(12)    (true=true  ==>  F(true, s(s(x63)), s(s(0)), 0)_>=_F(gt(s(s(x63)), plus(s(s(0)), 0)), s(s(x63)), s(s(0)), s(0)))

(13)    (gt(x65, x64)=true & (gt(x65, x64)=true  ==>  F(true, s(x65), s(s(x64)), 0)_>=_F(gt(s(x65), plus(s(s(x64)), 0)), s(x65), s(s(x64)), s(0)))  ==>  F(true, s(s(x65)), s(s(s(x64))), 0)_>=_F(gt(s(s(x65)), plus(s(s(s(x64))), 0)), s(s(x65)), s(s(s(x64))), s(0)))



We simplified constraint (12) using rules (I), (II) which results in the following new constraint:

(14)    (F(true, s(s(x63)), s(s(0)), 0)_>=_F(gt(s(s(x63)), plus(s(s(0)), 0)), s(s(x63)), s(s(0)), s(0)))



We simplified constraint (13) using rule (VI) where we applied the induction hypothesis (gt(x65, x64)=true  ==>  F(true, s(x65), s(s(x64)), 0)_>=_F(gt(s(x65), plus(s(s(x64)), 0)), s(x65), s(s(x64)), s(0))) with sigma = [ ] which results in the following new constraint:

(15)    (F(true, s(x65), s(s(x64)), 0)_>=_F(gt(s(x65), plus(s(s(x64)), 0)), s(x65), s(s(x64)), s(0))  ==>  F(true, s(s(x65)), s(s(s(x64))), 0)_>=_F(gt(s(s(x65)), plus(s(s(s(x64))), 0)), s(s(x65)), s(s(s(x64))), s(0)))



We simplified constraint (11) using rule (VI) where we applied the induction hypothesis (\/x50,x51:gt(x49, x48)=true & plus(x50, x51)=x48  ==>  F(true, x49, s(x50), x51)_>=_F(gt(x49, plus(s(x50), x51)), x49, s(x50), s(x51))) with sigma = [x50 / x57, x51 / x56] which results in the following new constraint:

(16)    (F(true, x49, s(x57), x56)_>=_F(gt(x49, plus(s(x57), x56)), x49, s(x57), s(x56)) & (\/x58,x59,x60,x61:plus(x57, x56)=s(x58) & gt(x59, x58)=true & (\/x60,x61:gt(x59, x58)=true & plus(x60, x61)=x58  ==>  F(true, x59, s(x60), x61)_>=_F(gt(x59, plus(s(x60), x61)), x59, s(x60), s(x61)))  ==>  F(true, s(x59), s(x57), x56)_>=_F(gt(s(x59), plus(s(x57), x56)), s(x59), s(x57), s(x56)))  ==>  F(true, s(x49), s(x57), s(x56))_>=_F(gt(s(x49), plus(s(x57), s(x56))), s(x49), s(x57), s(s(x56))))



We simplified constraint (16) using rule (IV) which results in the following new constraint:

(17)    (F(true, x49, s(x57), x56)_>=_F(gt(x49, plus(s(x57), x56)), x49, s(x57), s(x56))  ==>  F(true, s(x49), s(x57), s(x56))_>=_F(gt(s(x49), plus(s(x57), s(x56))), s(x49), s(x57), s(s(x56))))








For Pair F(true, x, y, z) -> F(gt(x, plus(y, z)), x, s(y), z) the following chains were created:
*We consider the chain F(true, x12, x13, x14) -> F(gt(x12, plus(x13, x14)), x12, x13, s(x14)), F(true, x15, x16, x17) -> F(gt(x15, plus(x16, x17)), x15, s(x16), x17) which results in the following constraint:

(1)    (F(gt(x12, plus(x13, x14)), x12, x13, s(x14))=F(true, x15, x16, x17)  ==>  F(true, x15, x16, x17)_>=_F(gt(x15, plus(x16, x17)), x15, s(x16), x17))



We simplified constraint (1) using rules (I), (II), (III), (VII) which results in the following new constraint:

(2)    (plus(x13, x14)=x66 & gt(x12, x66)=true  ==>  F(true, x12, x13, s(x14))_>=_F(gt(x12, plus(x13, s(x14))), x12, s(x13), s(x14)))



We simplified constraint (2) using rule (V) (with possible (I) afterwards) using induction on gt(x12, x66)=true which results in the following new constraints:

(3)    (true=true & plus(x13, x14)=0  ==>  F(true, s(x68), x13, s(x14))_>=_F(gt(s(x68), plus(x13, s(x14))), s(x68), s(x13), s(x14)))

(4)    (gt(x70, x69)=true & plus(x13, x14)=s(x69) & (\/x71,x72:gt(x70, x69)=true & plus(x71, x72)=x69  ==>  F(true, x70, x71, s(x72))_>=_F(gt(x70, plus(x71, s(x72))), x70, s(x71), s(x72)))  ==>  F(true, s(x70), x13, s(x14))_>=_F(gt(s(x70), plus(x13, s(x14))), s(x70), s(x13), s(x14)))



We simplified constraint (3) using rules (I), (II) which results in the following new constraint:

(5)    (plus(x13, x14)=0  ==>  F(true, s(x68), x13, s(x14))_>=_F(gt(s(x68), plus(x13, s(x14))), s(x68), s(x13), s(x14)))



We simplified constraint (4) using rule (V) (with possible (I) afterwards) using induction on plus(x13, x14)=s(x69) which results in the following new constraints:

(6)    (x76=s(x69) & gt(x70, x69)=true & (\/x71,x72:gt(x70, x69)=true & plus(x71, x72)=x69  ==>  F(true, x70, x71, s(x72))_>=_F(gt(x70, plus(x71, s(x72))), x70, s(x71), s(x72)))  ==>  F(true, s(x70), x76, s(0))_>=_F(gt(s(x70), plus(x76, s(0))), s(x70), s(x76), s(0)))

(7)    (s(plus(x78, x77))=s(x69) & gt(x70, x69)=true & (\/x71,x72:gt(x70, x69)=true & plus(x71, x72)=x69  ==>  F(true, x70, x71, s(x72))_>=_F(gt(x70, plus(x71, s(x72))), x70, s(x71), s(x72))) & (\/x79,x80,x81,x82:plus(x78, x77)=s(x79) & gt(x80, x79)=true & (\/x81,x82:gt(x80, x79)=true & plus(x81, x82)=x79  ==>  F(true, x80, x81, s(x82))_>=_F(gt(x80, plus(x81, s(x82))), x80, s(x81), s(x82)))  ==>  F(true, s(x80), x78, s(x77))_>=_F(gt(s(x80), plus(x78, s(x77))), s(x80), s(x78), s(x77)))  ==>  F(true, s(x70), x78, s(s(x77)))_>=_F(gt(s(x70), plus(x78, s(s(x77)))), s(x70), s(x78), s(s(x77))))



We simplified constraint (5) using rule (V) (with possible (I) afterwards) using induction on plus(x13, x14)=0 which results in the following new constraint:

(8)    (x73=0  ==>  F(true, s(x68), x73, s(0))_>=_F(gt(s(x68), plus(x73, s(0))), s(x68), s(x73), s(0)))



We simplified constraint (8) using rule (III) which results in the following new constraint:

(9)    (F(true, s(x68), 0, s(0))_>=_F(gt(s(x68), plus(0, s(0))), s(x68), s(0), s(0)))



We simplified constraint (6) using rules (III), (IV) which results in the following new constraint:

(10)    (gt(x70, x69)=true  ==>  F(true, s(x70), s(x69), s(0))_>=_F(gt(s(x70), plus(s(x69), s(0))), s(x70), s(s(x69)), s(0)))



We simplified constraint (7) using rules (I), (II) which results in the following new constraint:

(11)    (plus(x78, x77)=x69 & gt(x70, x69)=true & (\/x71,x72:gt(x70, x69)=true & plus(x71, x72)=x69  ==>  F(true, x70, x71, s(x72))_>=_F(gt(x70, plus(x71, s(x72))), x70, s(x71), s(x72))) & (\/x79,x80,x81,x82:plus(x78, x77)=s(x79) & gt(x80, x79)=true & (\/x81,x82:gt(x80, x79)=true & plus(x81, x82)=x79  ==>  F(true, x80, x81, s(x82))_>=_F(gt(x80, plus(x81, s(x82))), x80, s(x81), s(x82)))  ==>  F(true, s(x80), x78, s(x77))_>=_F(gt(s(x80), plus(x78, s(x77))), s(x80), s(x78), s(x77)))  ==>  F(true, s(x70), x78, s(s(x77)))_>=_F(gt(s(x70), plus(x78, s(s(x77)))), s(x70), s(x78), s(s(x77))))



We simplified constraint (10) using rule (V) (with possible (I) afterwards) using induction on gt(x70, x69)=true which results in the following new constraints:

(12)    (true=true  ==>  F(true, s(s(x84)), s(0), s(0))_>=_F(gt(s(s(x84)), plus(s(0), s(0))), s(s(x84)), s(s(0)), s(0)))

(13)    (gt(x86, x85)=true & (gt(x86, x85)=true  ==>  F(true, s(x86), s(x85), s(0))_>=_F(gt(s(x86), plus(s(x85), s(0))), s(x86), s(s(x85)), s(0)))  ==>  F(true, s(s(x86)), s(s(x85)), s(0))_>=_F(gt(s(s(x86)), plus(s(s(x85)), s(0))), s(s(x86)), s(s(s(x85))), s(0)))



We simplified constraint (12) using rules (I), (II) which results in the following new constraint:

(14)    (F(true, s(s(x84)), s(0), s(0))_>=_F(gt(s(s(x84)), plus(s(0), s(0))), s(s(x84)), s(s(0)), s(0)))



We simplified constraint (13) using rule (VI) where we applied the induction hypothesis (gt(x86, x85)=true  ==>  F(true, s(x86), s(x85), s(0))_>=_F(gt(s(x86), plus(s(x85), s(0))), s(x86), s(s(x85)), s(0))) with sigma = [ ] which results in the following new constraint:

(15)    (F(true, s(x86), s(x85), s(0))_>=_F(gt(s(x86), plus(s(x85), s(0))), s(x86), s(s(x85)), s(0))  ==>  F(true, s(s(x86)), s(s(x85)), s(0))_>=_F(gt(s(s(x86)), plus(s(s(x85)), s(0))), s(s(x86)), s(s(s(x85))), s(0)))



We simplified constraint (11) using rule (VI) where we applied the induction hypothesis (\/x71,x72:gt(x70, x69)=true & plus(x71, x72)=x69  ==>  F(true, x70, x71, s(x72))_>=_F(gt(x70, plus(x71, s(x72))), x70, s(x71), s(x72))) with sigma = [x71 / x78, x72 / x77] which results in the following new constraint:

(16)    (F(true, x70, x78, s(x77))_>=_F(gt(x70, plus(x78, s(x77))), x70, s(x78), s(x77)) & (\/x79,x80,x81,x82:plus(x78, x77)=s(x79) & gt(x80, x79)=true & (\/x81,x82:gt(x80, x79)=true & plus(x81, x82)=x79  ==>  F(true, x80, x81, s(x82))_>=_F(gt(x80, plus(x81, s(x82))), x80, s(x81), s(x82)))  ==>  F(true, s(x80), x78, s(x77))_>=_F(gt(s(x80), plus(x78, s(x77))), s(x80), s(x78), s(x77)))  ==>  F(true, s(x70), x78, s(s(x77)))_>=_F(gt(s(x70), plus(x78, s(s(x77)))), s(x70), s(x78), s(s(x77))))



We simplified constraint (16) using rule (IV) which results in the following new constraint:

(17)    (F(true, x70, x78, s(x77))_>=_F(gt(x70, plus(x78, s(x77))), x70, s(x78), s(x77))  ==>  F(true, s(x70), x78, s(s(x77)))_>=_F(gt(s(x70), plus(x78, s(s(x77)))), s(x70), s(x78), s(s(x77))))




*We consider the chain F(true, x18, x19, x20) -> F(gt(x18, plus(x19, x20)), x18, s(x19), x20), F(true, x21, x22, x23) -> F(gt(x21, plus(x22, x23)), x21, s(x22), x23) which results in the following constraint:

(1)    (F(gt(x18, plus(x19, x20)), x18, s(x19), x20)=F(true, x21, x22, x23)  ==>  F(true, x21, x22, x23)_>=_F(gt(x21, plus(x22, x23)), x21, s(x22), x23))



We simplified constraint (1) using rules (I), (II), (III), (VII) which results in the following new constraint:

(2)    (plus(x19, x20)=x87 & gt(x18, x87)=true  ==>  F(true, x18, s(x19), x20)_>=_F(gt(x18, plus(s(x19), x20)), x18, s(s(x19)), x20))



We simplified constraint (2) using rule (V) (with possible (I) afterwards) using induction on gt(x18, x87)=true which results in the following new constraints:

(3)    (true=true & plus(x19, x20)=0  ==>  F(true, s(x89), s(x19), x20)_>=_F(gt(s(x89), plus(s(x19), x20)), s(x89), s(s(x19)), x20))

(4)    (gt(x91, x90)=true & plus(x19, x20)=s(x90) & (\/x92,x93:gt(x91, x90)=true & plus(x92, x93)=x90  ==>  F(true, x91, s(x92), x93)_>=_F(gt(x91, plus(s(x92), x93)), x91, s(s(x92)), x93))  ==>  F(true, s(x91), s(x19), x20)_>=_F(gt(s(x91), plus(s(x19), x20)), s(x91), s(s(x19)), x20))



We simplified constraint (3) using rules (I), (II) which results in the following new constraint:

(5)    (plus(x19, x20)=0  ==>  F(true, s(x89), s(x19), x20)_>=_F(gt(s(x89), plus(s(x19), x20)), s(x89), s(s(x19)), x20))



We simplified constraint (4) using rule (V) (with possible (I) afterwards) using induction on plus(x19, x20)=s(x90) which results in the following new constraints:

(6)    (x97=s(x90) & gt(x91, x90)=true & (\/x92,x93:gt(x91, x90)=true & plus(x92, x93)=x90  ==>  F(true, x91, s(x92), x93)_>=_F(gt(x91, plus(s(x92), x93)), x91, s(s(x92)), x93))  ==>  F(true, s(x91), s(x97), 0)_>=_F(gt(s(x91), plus(s(x97), 0)), s(x91), s(s(x97)), 0))

(7)    (s(plus(x99, x98))=s(x90) & gt(x91, x90)=true & (\/x92,x93:gt(x91, x90)=true & plus(x92, x93)=x90  ==>  F(true, x91, s(x92), x93)_>=_F(gt(x91, plus(s(x92), x93)), x91, s(s(x92)), x93)) & (\/x100,x101,x102,x103:plus(x99, x98)=s(x100) & gt(x101, x100)=true & (\/x102,x103:gt(x101, x100)=true & plus(x102, x103)=x100  ==>  F(true, x101, s(x102), x103)_>=_F(gt(x101, plus(s(x102), x103)), x101, s(s(x102)), x103))  ==>  F(true, s(x101), s(x99), x98)_>=_F(gt(s(x101), plus(s(x99), x98)), s(x101), s(s(x99)), x98))  ==>  F(true, s(x91), s(x99), s(x98))_>=_F(gt(s(x91), plus(s(x99), s(x98))), s(x91), s(s(x99)), s(x98)))



We simplified constraint (5) using rule (V) (with possible (I) afterwards) using induction on plus(x19, x20)=0 which results in the following new constraint:

(8)    (x94=0  ==>  F(true, s(x89), s(x94), 0)_>=_F(gt(s(x89), plus(s(x94), 0)), s(x89), s(s(x94)), 0))



We simplified constraint (8) using rule (III) which results in the following new constraint:

(9)    (F(true, s(x89), s(0), 0)_>=_F(gt(s(x89), plus(s(0), 0)), s(x89), s(s(0)), 0))



We simplified constraint (6) using rules (III), (IV) which results in the following new constraint:

(10)    (gt(x91, x90)=true  ==>  F(true, s(x91), s(s(x90)), 0)_>=_F(gt(s(x91), plus(s(s(x90)), 0)), s(x91), s(s(s(x90))), 0))



We simplified constraint (7) using rules (I), (II) which results in the following new constraint:

(11)    (plus(x99, x98)=x90 & gt(x91, x90)=true & (\/x92,x93:gt(x91, x90)=true & plus(x92, x93)=x90  ==>  F(true, x91, s(x92), x93)_>=_F(gt(x91, plus(s(x92), x93)), x91, s(s(x92)), x93)) & (\/x100,x101,x102,x103:plus(x99, x98)=s(x100) & gt(x101, x100)=true & (\/x102,x103:gt(x101, x100)=true & plus(x102, x103)=x100  ==>  F(true, x101, s(x102), x103)_>=_F(gt(x101, plus(s(x102), x103)), x101, s(s(x102)), x103))  ==>  F(true, s(x101), s(x99), x98)_>=_F(gt(s(x101), plus(s(x99), x98)), s(x101), s(s(x99)), x98))  ==>  F(true, s(x91), s(x99), s(x98))_>=_F(gt(s(x91), plus(s(x99), s(x98))), s(x91), s(s(x99)), s(x98)))



We simplified constraint (10) using rule (V) (with possible (I) afterwards) using induction on gt(x91, x90)=true which results in the following new constraints:

(12)    (true=true  ==>  F(true, s(s(x105)), s(s(0)), 0)_>=_F(gt(s(s(x105)), plus(s(s(0)), 0)), s(s(x105)), s(s(s(0))), 0))

(13)    (gt(x107, x106)=true & (gt(x107, x106)=true  ==>  F(true, s(x107), s(s(x106)), 0)_>=_F(gt(s(x107), plus(s(s(x106)), 0)), s(x107), s(s(s(x106))), 0))  ==>  F(true, s(s(x107)), s(s(s(x106))), 0)_>=_F(gt(s(s(x107)), plus(s(s(s(x106))), 0)), s(s(x107)), s(s(s(s(x106)))), 0))



We simplified constraint (12) using rules (I), (II) which results in the following new constraint:

(14)    (F(true, s(s(x105)), s(s(0)), 0)_>=_F(gt(s(s(x105)), plus(s(s(0)), 0)), s(s(x105)), s(s(s(0))), 0))



We simplified constraint (13) using rule (VI) where we applied the induction hypothesis (gt(x107, x106)=true  ==>  F(true, s(x107), s(s(x106)), 0)_>=_F(gt(s(x107), plus(s(s(x106)), 0)), s(x107), s(s(s(x106))), 0)) with sigma = [ ] which results in the following new constraint:

(15)    (F(true, s(x107), s(s(x106)), 0)_>=_F(gt(s(x107), plus(s(s(x106)), 0)), s(x107), s(s(s(x106))), 0)  ==>  F(true, s(s(x107)), s(s(s(x106))), 0)_>=_F(gt(s(s(x107)), plus(s(s(s(x106))), 0)), s(s(x107)), s(s(s(s(x106)))), 0))



We simplified constraint (11) using rule (VI) where we applied the induction hypothesis (\/x92,x93:gt(x91, x90)=true & plus(x92, x93)=x90  ==>  F(true, x91, s(x92), x93)_>=_F(gt(x91, plus(s(x92), x93)), x91, s(s(x92)), x93)) with sigma = [x92 / x99, x93 / x98] which results in the following new constraint:

(16)    (F(true, x91, s(x99), x98)_>=_F(gt(x91, plus(s(x99), x98)), x91, s(s(x99)), x98) & (\/x100,x101,x102,x103:plus(x99, x98)=s(x100) & gt(x101, x100)=true & (\/x102,x103:gt(x101, x100)=true & plus(x102, x103)=x100  ==>  F(true, x101, s(x102), x103)_>=_F(gt(x101, plus(s(x102), x103)), x101, s(s(x102)), x103))  ==>  F(true, s(x101), s(x99), x98)_>=_F(gt(s(x101), plus(s(x99), x98)), s(x101), s(s(x99)), x98))  ==>  F(true, s(x91), s(x99), s(x98))_>=_F(gt(s(x91), plus(s(x99), s(x98))), s(x91), s(s(x99)), s(x98)))



We simplified constraint (16) using rule (IV) which results in the following new constraint:

(17)    (F(true, x91, s(x99), x98)_>=_F(gt(x91, plus(s(x99), x98)), x91, s(s(x99)), x98)  ==>  F(true, s(x91), s(x99), s(x98))_>=_F(gt(s(x91), plus(s(x99), s(x98))), s(x91), s(s(x99)), s(x98)))








To summarize, we get the following constraints P__>=_ for the following pairs.

*F(true, x, y, z) -> F(gt(x, plus(y, z)), x, y, s(z))

*(F(true, s(x26), 0, s(0))_>=_F(gt(s(x26), plus(0, s(0))), s(x26), 0, s(s(0))))


*(F(true, s(s(x42)), s(0), s(0))_>=_F(gt(s(s(x42)), plus(s(0), s(0))), s(s(x42)), s(0), s(s(0))))


*(F(true, s(x44), s(x43), s(0))_>=_F(gt(s(x44), plus(s(x43), s(0))), s(x44), s(x43), s(s(0)))  ==>  F(true, s(s(x44)), s(s(x43)), s(0))_>=_F(gt(s(s(x44)), plus(s(s(x43)), s(0))), s(s(x44)), s(s(x43)), s(s(0))))


*(F(true, x28, x36, s(x35))_>=_F(gt(x28, plus(x36, s(x35))), x28, x36, s(s(x35)))  ==>  F(true, s(x28), x36, s(s(x35)))_>=_F(gt(s(x28), plus(x36, s(s(x35)))), s(x28), x36, s(s(s(x35)))))


*(F(true, s(x47), s(0), 0)_>=_F(gt(s(x47), plus(s(0), 0)), s(x47), s(0), s(0)))


*(F(true, s(s(x63)), s(s(0)), 0)_>=_F(gt(s(s(x63)), plus(s(s(0)), 0)), s(s(x63)), s(s(0)), s(0)))


*(F(true, s(x65), s(s(x64)), 0)_>=_F(gt(s(x65), plus(s(s(x64)), 0)), s(x65), s(s(x64)), s(0))  ==>  F(true, s(s(x65)), s(s(s(x64))), 0)_>=_F(gt(s(s(x65)), plus(s(s(s(x64))), 0)), s(s(x65)), s(s(s(x64))), s(0)))


*(F(true, x49, s(x57), x56)_>=_F(gt(x49, plus(s(x57), x56)), x49, s(x57), s(x56))  ==>  F(true, s(x49), s(x57), s(x56))_>=_F(gt(s(x49), plus(s(x57), s(x56))), s(x49), s(x57), s(s(x56))))




*F(true, x, y, z) -> F(gt(x, plus(y, z)), x, s(y), z)

*(F(true, s(x68), 0, s(0))_>=_F(gt(s(x68), plus(0, s(0))), s(x68), s(0), s(0)))


*(F(true, s(s(x84)), s(0), s(0))_>=_F(gt(s(s(x84)), plus(s(0), s(0))), s(s(x84)), s(s(0)), s(0)))


*(F(true, s(x86), s(x85), s(0))_>=_F(gt(s(x86), plus(s(x85), s(0))), s(x86), s(s(x85)), s(0))  ==>  F(true, s(s(x86)), s(s(x85)), s(0))_>=_F(gt(s(s(x86)), plus(s(s(x85)), s(0))), s(s(x86)), s(s(s(x85))), s(0)))


*(F(true, x70, x78, s(x77))_>=_F(gt(x70, plus(x78, s(x77))), x70, s(x78), s(x77))  ==>  F(true, s(x70), x78, s(s(x77)))_>=_F(gt(s(x70), plus(x78, s(s(x77)))), s(x70), s(x78), s(s(x77))))


*(F(true, s(x89), s(0), 0)_>=_F(gt(s(x89), plus(s(0), 0)), s(x89), s(s(0)), 0))


*(F(true, s(s(x105)), s(s(0)), 0)_>=_F(gt(s(s(x105)), plus(s(s(0)), 0)), s(s(x105)), s(s(s(0))), 0))


*(F(true, s(x107), s(s(x106)), 0)_>=_F(gt(s(x107), plus(s(s(x106)), 0)), s(x107), s(s(s(x106))), 0)  ==>  F(true, s(s(x107)), s(s(s(x106))), 0)_>=_F(gt(s(s(x107)), plus(s(s(s(x106))), 0)), s(s(x107)), s(s(s(s(x106)))), 0))


*(F(true, x91, s(x99), x98)_>=_F(gt(x91, plus(s(x99), x98)), x91, s(s(x99)), x98)  ==>  F(true, s(x91), s(x99), s(x98))_>=_F(gt(s(x91), plus(s(x99), s(x98))), s(x91), s(s(x99)), s(x98)))








The constraints for P_> respective P_bound are constructed from P__>=_ where we just replace every occurence of "t _>=_ s" in P__>=_ by  "t > s" respective "t _>=_ c". Here c stands for the fresh constant used for P_bound. 

Using the following integer polynomial ordering the  resulting constraints can be solved 

Polynomial interpretation [NONINF]:

   POL(0) = 0
   POL(F(x_1, x_2, x_3, x_4)) = -1 - x_1 + x_2 - x_3 - x_4
   POL(c) = -1
   POL(false) = 0
   POL(gt(x_1, x_2)) = 0
   POL(plus(x_1, x_2)) = 0
   POL(s(x_1)) = 1 + x_1
   POL(true) = 0


The following pairs  are in P_>:
   F(true, x, y, z) -> F(gt(x, plus(y, z)), x, y, s(z))
   F(true, x, y, z) -> F(gt(x, plus(y, z)), x, s(y), z)
The following pairs are in P_bound:
   F(true, x, y, z) -> F(gt(x, plus(y, z)), x, y, s(z))
   F(true, x, y, z) -> F(gt(x, plus(y, z)), x, s(y), z)
The following rules are usable:
   false -> gt(0, v)
   true -> gt(s(u), 0)
   gt(u, v) -> gt(s(u), s(v))

----------------------------------------

(27)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   plus(n, 0) -> n
   plus(n, s(m)) -> s(plus(n, m))
   gt(0, v) -> false
   gt(s(u), 0) -> true
   gt(s(u), s(v)) -> gt(u, v)

The set Q consists of the following terms:

   plus(x0, 0)
   plus(x0, s(x1))
   gt(0, x0)
   gt(s(x0), 0)
   gt(s(x0), s(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(28) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(29)
YES
