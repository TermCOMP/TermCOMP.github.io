YES

Problem 1: 

(VAR vu95NonEmpty x y)
(RULES
ifu95mod(ffalse,s(x),s(y)) -> s(x)
ifu95mod(ftrue,s(x),s(y)) -> mod(minus(x,y),s(y))
le(num0,y) -> ftrue
le(s(x),num0) -> ffalse
le(s(x),s(y)) -> le(x,y)
minus(x,num0) -> x
minus(x,s(y)) -> pred(minus(x,y))
mod(num0,y) -> num0
mod(s(x),num0) -> num0
mod(s(x),s(y)) -> ifu95mod(le(y,x),s(x),s(y))
pred(s(x)) -> x
)


Problem 1: 

Innermost Equivalent Processor:
-> Rules:
 ifu95mod(ffalse,s(x),s(y)) -> s(x)
 ifu95mod(ftrue,s(x),s(y)) -> mod(minus(x,y),s(y))
 le(num0,y) -> ftrue
 le(s(x),num0) -> ffalse
 le(s(x),s(y)) -> le(x,y)
 minus(x,num0) -> x
 minus(x,s(y)) -> pred(minus(x,y))
 mod(num0,y) -> num0
 mod(s(x),num0) -> num0
 mod(s(x),s(y)) -> ifu95mod(le(y,x),s(x),s(y))
 pred(s(x)) -> x
-> The term rewriting system is non-overlaping or locally confluent overlay system. Therefore, innermost termination implies termination.
 

Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 IFU95MOD(ftrue,s(x),s(y)) -> MINUS(x,y)
 IFU95MOD(ftrue,s(x),s(y)) -> MOD(minus(x,y),s(y))
 LE(s(x),s(y)) -> LE(x,y)
 MINUS(x,s(y)) -> MINUS(x,y)
 MINUS(x,s(y)) -> PRED(minus(x,y))
 MOD(s(x),s(y)) -> IFU95MOD(le(y,x),s(x),s(y))
 MOD(s(x),s(y)) -> LE(y,x)
-> Rules:
 ifu95mod(ffalse,s(x),s(y)) -> s(x)
 ifu95mod(ftrue,s(x),s(y)) -> mod(minus(x,y),s(y))
 le(num0,y) -> ftrue
 le(s(x),num0) -> ffalse
 le(s(x),s(y)) -> le(x,y)
 minus(x,num0) -> x
 minus(x,s(y)) -> pred(minus(x,y))
 mod(num0,y) -> num0
 mod(s(x),num0) -> num0
 mod(s(x),s(y)) -> ifu95mod(le(y,x),s(x),s(y))
 pred(s(x)) -> x

Problem 1: 

SCC Processor:
-> Pairs:
 IFU95MOD(ftrue,s(x),s(y)) -> MINUS(x,y)
 IFU95MOD(ftrue,s(x),s(y)) -> MOD(minus(x,y),s(y))
 LE(s(x),s(y)) -> LE(x,y)
 MINUS(x,s(y)) -> MINUS(x,y)
 MINUS(x,s(y)) -> PRED(minus(x,y))
 MOD(s(x),s(y)) -> IFU95MOD(le(y,x),s(x),s(y))
 MOD(s(x),s(y)) -> LE(y,x)
-> Rules:
 ifu95mod(ffalse,s(x),s(y)) -> s(x)
 ifu95mod(ftrue,s(x),s(y)) -> mod(minus(x,y),s(y))
 le(num0,y) -> ftrue
 le(s(x),num0) -> ffalse
 le(s(x),s(y)) -> le(x,y)
 minus(x,num0) -> x
 minus(x,s(y)) -> pred(minus(x,y))
 mod(num0,y) -> num0
 mod(s(x),num0) -> num0
 mod(s(x),s(y)) -> ifu95mod(le(y,x),s(x),s(y))
 pred(s(x)) -> x
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 MINUS(x,s(y)) -> MINUS(x,y)
->->-> Rules:
 ifu95mod(ffalse,s(x),s(y)) -> s(x)
 ifu95mod(ftrue,s(x),s(y)) -> mod(minus(x,y),s(y))
 le(num0,y) -> ftrue
 le(s(x),num0) -> ffalse
 le(s(x),s(y)) -> le(x,y)
 minus(x,num0) -> x
 minus(x,s(y)) -> pred(minus(x,y))
 mod(num0,y) -> num0
 mod(s(x),num0) -> num0
 mod(s(x),s(y)) -> ifu95mod(le(y,x),s(x),s(y))
 pred(s(x)) -> x
->->Cycle:
->->-> Pairs:
 LE(s(x),s(y)) -> LE(x,y)
->->-> Rules:
 ifu95mod(ffalse,s(x),s(y)) -> s(x)
 ifu95mod(ftrue,s(x),s(y)) -> mod(minus(x,y),s(y))
 le(num0,y) -> ftrue
 le(s(x),num0) -> ffalse
 le(s(x),s(y)) -> le(x,y)
 minus(x,num0) -> x
 minus(x,s(y)) -> pred(minus(x,y))
 mod(num0,y) -> num0
 mod(s(x),num0) -> num0
 mod(s(x),s(y)) -> ifu95mod(le(y,x),s(x),s(y))
 pred(s(x)) -> x
->->Cycle:
->->-> Pairs:
 IFU95MOD(ftrue,s(x),s(y)) -> MOD(minus(x,y),s(y))
 MOD(s(x),s(y)) -> IFU95MOD(le(y,x),s(x),s(y))
->->-> Rules:
 ifu95mod(ffalse,s(x),s(y)) -> s(x)
 ifu95mod(ftrue,s(x),s(y)) -> mod(minus(x,y),s(y))
 le(num0,y) -> ftrue
 le(s(x),num0) -> ffalse
 le(s(x),s(y)) -> le(x,y)
 minus(x,num0) -> x
 minus(x,s(y)) -> pred(minus(x,y))
 mod(num0,y) -> num0
 mod(s(x),num0) -> num0
 mod(s(x),s(y)) -> ifu95mod(le(y,x),s(x),s(y))
 pred(s(x)) -> x


The problem is decomposed in 3 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 MINUS(x,s(y)) -> MINUS(x,y)
-> Rules:
 ifu95mod(ffalse,s(x),s(y)) -> s(x)
 ifu95mod(ftrue,s(x),s(y)) -> mod(minus(x,y),s(y))
 le(num0,y) -> ftrue
 le(s(x),num0) -> ffalse
 le(s(x),s(y)) -> le(x,y)
 minus(x,num0) -> x
 minus(x,s(y)) -> pred(minus(x,y))
 mod(num0,y) -> num0
 mod(s(x),num0) -> num0
 mod(s(x),s(y)) -> ifu95mod(le(y,x),s(x),s(y))
 pred(s(x)) -> x
->Projection:
 pi(MINUS) = 2

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 ifu95mod(ffalse,s(x),s(y)) -> s(x)
 ifu95mod(ftrue,s(x),s(y)) -> mod(minus(x,y),s(y))
 le(num0,y) -> ftrue
 le(s(x),num0) -> ffalse
 le(s(x),s(y)) -> le(x,y)
 minus(x,num0) -> x
 minus(x,s(y)) -> pred(minus(x,y))
 mod(num0,y) -> num0
 mod(s(x),num0) -> num0
 mod(s(x),s(y)) -> ifu95mod(le(y,x),s(x),s(y))
 pred(s(x)) -> x
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Subterm Processor:
-> Pairs:
 LE(s(x),s(y)) -> LE(x,y)
-> Rules:
 ifu95mod(ffalse,s(x),s(y)) -> s(x)
 ifu95mod(ftrue,s(x),s(y)) -> mod(minus(x,y),s(y))
 le(num0,y) -> ftrue
 le(s(x),num0) -> ffalse
 le(s(x),s(y)) -> le(x,y)
 minus(x,num0) -> x
 minus(x,s(y)) -> pred(minus(x,y))
 mod(num0,y) -> num0
 mod(s(x),num0) -> num0
 mod(s(x),s(y)) -> ifu95mod(le(y,x),s(x),s(y))
 pred(s(x)) -> x
->Projection:
 pi(LE) = 1

Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 ifu95mod(ffalse,s(x),s(y)) -> s(x)
 ifu95mod(ftrue,s(x),s(y)) -> mod(minus(x,y),s(y))
 le(num0,y) -> ftrue
 le(s(x),num0) -> ffalse
 le(s(x),s(y)) -> le(x,y)
 minus(x,num0) -> x
 minus(x,s(y)) -> pred(minus(x,y))
 mod(num0,y) -> num0
 mod(s(x),num0) -> num0
 mod(s(x),s(y)) -> ifu95mod(le(y,x),s(x),s(y))
 pred(s(x)) -> x
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Reduction Pairs Processor:
-> Pairs:
 IFU95MOD(ftrue,s(x),s(y)) -> MOD(minus(x,y),s(y))
 MOD(s(x),s(y)) -> IFU95MOD(le(y,x),s(x),s(y))
-> Rules:
 ifu95mod(ffalse,s(x),s(y)) -> s(x)
 ifu95mod(ftrue,s(x),s(y)) -> mod(minus(x,y),s(y))
 le(num0,y) -> ftrue
 le(s(x),num0) -> ffalse
 le(s(x),s(y)) -> le(x,y)
 minus(x,num0) -> x
 minus(x,s(y)) -> pred(minus(x,y))
 mod(num0,y) -> num0
 mod(s(x),num0) -> num0
 mod(s(x),s(y)) -> ifu95mod(le(y,x),s(x),s(y))
 pred(s(x)) -> x
-> Usable rules:
 le(num0,y) -> ftrue
 le(s(x),num0) -> ffalse
 le(s(x),s(y)) -> le(x,y)
 minus(x,num0) -> x
 minus(x,s(y)) -> pred(minus(x,y))
 pred(s(x)) -> x
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[ifu95mod](X1,X2,X3) = 0
[le](X1,X2) = 1
[minus](X1,X2) = X1
[mod](X1,X2) = 0
[pred](X) = X
[num0] = 0
[fSNonEmpty] = 0
[ffalse] = 0
[s](X) = X + 2
[ftrue] = 1
[IFU95MOD](X1,X2,X3) = 2.X1 + 2.X2 + X3
[LE](X1,X2) = 0
[MINUS](X1,X2) = 0
[MOD](X1,X2) = 2.X1 + X2 + 2
[PRED](X) = 0

Problem 1.3: 

SCC Processor:
-> Pairs:
 MOD(s(x),s(y)) -> IFU95MOD(le(y,x),s(x),s(y))
-> Rules:
 ifu95mod(ffalse,s(x),s(y)) -> s(x)
 ifu95mod(ftrue,s(x),s(y)) -> mod(minus(x,y),s(y))
 le(num0,y) -> ftrue
 le(s(x),num0) -> ffalse
 le(s(x),s(y)) -> le(x,y)
 minus(x,num0) -> x
 minus(x,s(y)) -> pred(minus(x,y))
 mod(num0,y) -> num0
 mod(s(x),num0) -> num0
 mod(s(x),s(y)) -> ifu95mod(le(y,x),s(x),s(y))
 pred(s(x)) -> x
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
