YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/2o3qT.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) Overlay + Local Confluence [EQUIVALENT, 0 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 0 ms]
(4) QDP
(5) DependencyGraphProof [EQUIVALENT, 0 ms]
(6) AND
    (7) QDP
        (8) UsableRulesProof [EQUIVALENT, 0 ms]
        (9) QDP
        (10) QReductionProof [EQUIVALENT, 0 ms]
        (11) QDP
        (12) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (13) YES
    (14) QDP
        (15) UsableRulesProof [EQUIVALENT, 0 ms]
        (16) QDP
        (17) QReductionProof [EQUIVALENT, 0 ms]
        (18) QDP
        (19) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (20) YES
    (21) QDP
        (22) UsableRulesProof [EQUIVALENT, 0 ms]
        (23) QDP
        (24) QReductionProof [EQUIVALENT, 0 ms]
        (25) QDP
        (26) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (27) YES
    (28) QDP
        (29) UsableRulesProof [EQUIVALENT, 0 ms]
        (30) QDP
        (31) QReductionProof [EQUIVALENT, 0 ms]
        (32) QDP
        (33) QDPOrderProof [EQUIVALENT, 26 ms]
        (34) QDP
        (35) PisEmptyProof [EQUIVALENT, 0 ms]
        (36) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   half(0) -> 0
   half(s(0)) -> 0
   half(s(s(x))) -> s(half(x))
   le(0, y) -> true
   le(s(x), 0) -> false
   le(s(x), s(y)) -> le(x, y)
   inc(0) -> 0
   inc(s(x)) -> s(inc(x))
   log(x) -> log2(x, 0)
   log2(x, y) -> if(le(x, s(0)), x, inc(y))
   if(true, x, s(y)) -> y
   if(false, x, y) -> log2(half(x), y)

Q is empty.

----------------------------------------

(1) Overlay + Local Confluence (EQUIVALENT)
The TRS is overlay and locally confluent. By [NOC] we can switch to innermost.
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   half(0) -> 0
   half(s(0)) -> 0
   half(s(s(x))) -> s(half(x))
   le(0, y) -> true
   le(s(x), 0) -> false
   le(s(x), s(y)) -> le(x, y)
   inc(0) -> 0
   inc(s(x)) -> s(inc(x))
   log(x) -> log2(x, 0)
   log2(x, y) -> if(le(x, s(0)), x, inc(y))
   if(true, x, s(y)) -> y
   if(false, x, y) -> log2(half(x), y)

The set Q consists of the following terms:

   half(0)
   half(s(0))
   half(s(s(x0)))
   le(0, x0)
   le(s(x0), 0)
   le(s(x0), s(x1))
   inc(0)
   inc(s(x0))
   log(x0)
   log2(x0, x1)
   if(true, x0, s(x1))
   if(false, x0, x1)


----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   HALF(s(s(x))) -> HALF(x)
   LE(s(x), s(y)) -> LE(x, y)
   INC(s(x)) -> INC(x)
   LOG(x) -> LOG2(x, 0)
   LOG2(x, y) -> IF(le(x, s(0)), x, inc(y))
   LOG2(x, y) -> LE(x, s(0))
   LOG2(x, y) -> INC(y)
   IF(false, x, y) -> LOG2(half(x), y)
   IF(false, x, y) -> HALF(x)

The TRS R consists of the following rules:

   half(0) -> 0
   half(s(0)) -> 0
   half(s(s(x))) -> s(half(x))
   le(0, y) -> true
   le(s(x), 0) -> false
   le(s(x), s(y)) -> le(x, y)
   inc(0) -> 0
   inc(s(x)) -> s(inc(x))
   log(x) -> log2(x, 0)
   log2(x, y) -> if(le(x, s(0)), x, inc(y))
   if(true, x, s(y)) -> y
   if(false, x, y) -> log2(half(x), y)

The set Q consists of the following terms:

   half(0)
   half(s(0))
   half(s(s(x0)))
   le(0, x0)
   le(s(x0), 0)
   le(s(x0), s(x1))
   inc(0)
   inc(s(x0))
   log(x0)
   log2(x0, x1)
   if(true, x0, s(x1))
   if(false, x0, x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 4 SCCs with 4 less nodes.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   INC(s(x)) -> INC(x)

The TRS R consists of the following rules:

   half(0) -> 0
   half(s(0)) -> 0
   half(s(s(x))) -> s(half(x))
   le(0, y) -> true
   le(s(x), 0) -> false
   le(s(x), s(y)) -> le(x, y)
   inc(0) -> 0
   inc(s(x)) -> s(inc(x))
   log(x) -> log2(x, 0)
   log2(x, y) -> if(le(x, s(0)), x, inc(y))
   if(true, x, s(y)) -> y
   if(false, x, y) -> log2(half(x), y)

The set Q consists of the following terms:

   half(0)
   half(s(0))
   half(s(s(x0)))
   le(0, x0)
   le(s(x0), 0)
   le(s(x0), s(x1))
   inc(0)
   inc(s(x0))
   log(x0)
   log2(x0, x1)
   if(true, x0, s(x1))
   if(false, x0, x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(8) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(9)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   INC(s(x)) -> INC(x)

R is empty.
The set Q consists of the following terms:

   half(0)
   half(s(0))
   half(s(s(x0)))
   le(0, x0)
   le(s(x0), 0)
   le(s(x0), s(x1))
   inc(0)
   inc(s(x0))
   log(x0)
   log2(x0, x1)
   if(true, x0, s(x1))
   if(false, x0, x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(10) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   half(0)
   half(s(0))
   half(s(s(x0)))
   le(0, x0)
   le(s(x0), 0)
   le(s(x0), s(x1))
   inc(0)
   inc(s(x0))
   log(x0)
   log2(x0, x1)
   if(true, x0, s(x1))
   if(false, x0, x1)


----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   INC(s(x)) -> INC(x)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(12) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*INC(s(x)) -> INC(x)
The graph contains the following edges 1 > 1


----------------------------------------

(13)
YES

----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   LE(s(x), s(y)) -> LE(x, y)

The TRS R consists of the following rules:

   half(0) -> 0
   half(s(0)) -> 0
   half(s(s(x))) -> s(half(x))
   le(0, y) -> true
   le(s(x), 0) -> false
   le(s(x), s(y)) -> le(x, y)
   inc(0) -> 0
   inc(s(x)) -> s(inc(x))
   log(x) -> log2(x, 0)
   log2(x, y) -> if(le(x, s(0)), x, inc(y))
   if(true, x, s(y)) -> y
   if(false, x, y) -> log2(half(x), y)

The set Q consists of the following terms:

   half(0)
   half(s(0))
   half(s(s(x0)))
   le(0, x0)
   le(s(x0), 0)
   le(s(x0), s(x1))
   inc(0)
   inc(s(x0))
   log(x0)
   log2(x0, x1)
   if(true, x0, s(x1))
   if(false, x0, x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   LE(s(x), s(y)) -> LE(x, y)

R is empty.
The set Q consists of the following terms:

   half(0)
   half(s(0))
   half(s(s(x0)))
   le(0, x0)
   le(s(x0), 0)
   le(s(x0), s(x1))
   inc(0)
   inc(s(x0))
   log(x0)
   log2(x0, x1)
   if(true, x0, s(x1))
   if(false, x0, x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   half(0)
   half(s(0))
   half(s(s(x0)))
   le(0, x0)
   le(s(x0), 0)
   le(s(x0), s(x1))
   inc(0)
   inc(s(x0))
   log(x0)
   log2(x0, x1)
   if(true, x0, s(x1))
   if(false, x0, x1)


----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   LE(s(x), s(y)) -> LE(x, y)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*LE(s(x), s(y)) -> LE(x, y)
The graph contains the following edges 1 > 1, 2 > 2


----------------------------------------

(20)
YES

----------------------------------------

(21)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   HALF(s(s(x))) -> HALF(x)

The TRS R consists of the following rules:

   half(0) -> 0
   half(s(0)) -> 0
   half(s(s(x))) -> s(half(x))
   le(0, y) -> true
   le(s(x), 0) -> false
   le(s(x), s(y)) -> le(x, y)
   inc(0) -> 0
   inc(s(x)) -> s(inc(x))
   log(x) -> log2(x, 0)
   log2(x, y) -> if(le(x, s(0)), x, inc(y))
   if(true, x, s(y)) -> y
   if(false, x, y) -> log2(half(x), y)

The set Q consists of the following terms:

   half(0)
   half(s(0))
   half(s(s(x0)))
   le(0, x0)
   le(s(x0), 0)
   le(s(x0), s(x1))
   inc(0)
   inc(s(x0))
   log(x0)
   log2(x0, x1)
   if(true, x0, s(x1))
   if(false, x0, x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(22) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(23)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   HALF(s(s(x))) -> HALF(x)

R is empty.
The set Q consists of the following terms:

   half(0)
   half(s(0))
   half(s(s(x0)))
   le(0, x0)
   le(s(x0), 0)
   le(s(x0), s(x1))
   inc(0)
   inc(s(x0))
   log(x0)
   log2(x0, x1)
   if(true, x0, s(x1))
   if(false, x0, x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(24) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   half(0)
   half(s(0))
   half(s(s(x0)))
   le(0, x0)
   le(s(x0), 0)
   le(s(x0), s(x1))
   inc(0)
   inc(s(x0))
   log(x0)
   log2(x0, x1)
   if(true, x0, s(x1))
   if(false, x0, x1)


----------------------------------------

(25)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   HALF(s(s(x))) -> HALF(x)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(26) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*HALF(s(s(x))) -> HALF(x)
The graph contains the following edges 1 > 1


----------------------------------------

(27)
YES

----------------------------------------

(28)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   IF(false, x, y) -> LOG2(half(x), y)
   LOG2(x, y) -> IF(le(x, s(0)), x, inc(y))

The TRS R consists of the following rules:

   half(0) -> 0
   half(s(0)) -> 0
   half(s(s(x))) -> s(half(x))
   le(0, y) -> true
   le(s(x), 0) -> false
   le(s(x), s(y)) -> le(x, y)
   inc(0) -> 0
   inc(s(x)) -> s(inc(x))
   log(x) -> log2(x, 0)
   log2(x, y) -> if(le(x, s(0)), x, inc(y))
   if(true, x, s(y)) -> y
   if(false, x, y) -> log2(half(x), y)

The set Q consists of the following terms:

   half(0)
   half(s(0))
   half(s(s(x0)))
   le(0, x0)
   le(s(x0), 0)
   le(s(x0), s(x1))
   inc(0)
   inc(s(x0))
   log(x0)
   log2(x0, x1)
   if(true, x0, s(x1))
   if(false, x0, x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(29) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(30)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   IF(false, x, y) -> LOG2(half(x), y)
   LOG2(x, y) -> IF(le(x, s(0)), x, inc(y))

The TRS R consists of the following rules:

   le(0, y) -> true
   le(s(x), s(y)) -> le(x, y)
   inc(0) -> 0
   inc(s(x)) -> s(inc(x))
   le(s(x), 0) -> false
   half(0) -> 0
   half(s(0)) -> 0
   half(s(s(x))) -> s(half(x))

The set Q consists of the following terms:

   half(0)
   half(s(0))
   half(s(s(x0)))
   le(0, x0)
   le(s(x0), 0)
   le(s(x0), s(x1))
   inc(0)
   inc(s(x0))
   log(x0)
   log2(x0, x1)
   if(true, x0, s(x1))
   if(false, x0, x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(31) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   log(x0)
   log2(x0, x1)
   if(true, x0, s(x1))
   if(false, x0, x1)


----------------------------------------

(32)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   IF(false, x, y) -> LOG2(half(x), y)
   LOG2(x, y) -> IF(le(x, s(0)), x, inc(y))

The TRS R consists of the following rules:

   le(0, y) -> true
   le(s(x), s(y)) -> le(x, y)
   inc(0) -> 0
   inc(s(x)) -> s(inc(x))
   le(s(x), 0) -> false
   half(0) -> 0
   half(s(0)) -> 0
   half(s(s(x))) -> s(half(x))

The set Q consists of the following terms:

   half(0)
   half(s(0))
   half(s(s(x0)))
   le(0, x0)
   le(s(x0), 0)
   le(s(x0), s(x1))
   inc(0)
   inc(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(33) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   IF(false, x, y) -> LOG2(half(x), y)
   LOG2(x, y) -> IF(le(x, s(0)), x, inc(y))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO,RATPOLO]:

   POL(0) = 0
   POL(IF(x_1, x_2, x_3)) = x_1 + x_2
   POL(LOG2(x_1, x_2)) = [1/4] + [4]x_1
   POL(false) = [1/2]
   POL(half(x_1)) = [1/4]x_1
   POL(inc(x_1)) = 0
   POL(le(x_1, x_2)) = [2]x_1
   POL(s(x_1)) = [1/4] + [4]x_1
   POL(true) = 0
The value of delta used in the strict ordering is 1/4.
The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   half(0) -> 0
   half(s(0)) -> 0
   half(s(s(x))) -> s(half(x))
   le(0, y) -> true
   le(s(x), s(y)) -> le(x, y)
   le(s(x), 0) -> false


----------------------------------------

(34)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   le(0, y) -> true
   le(s(x), s(y)) -> le(x, y)
   inc(0) -> 0
   inc(s(x)) -> s(inc(x))
   le(s(x), 0) -> false
   half(0) -> 0
   half(s(0)) -> 0
   half(s(s(x))) -> s(half(x))

The set Q consists of the following terms:

   half(0)
   half(s(0))
   half(s(s(x0)))
   le(0, x0)
   le(s(x0), 0)
   le(s(x0), s(x1))
   inc(0)
   inc(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(35) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(36)
YES
