NO
proof of /hpcwork/ff862203/termcomp25/benchmarks/FY8gv.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be disproven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 0 ms]
(2) QDP
(3) DependencyGraphProof [EQUIVALENT, 0 ms]
(4) QDP
(5) NonLoopProof [COMPLETE, 368 ms]
(6) NO


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(X, n__g(X), Y) -> f(activate(Y), activate(Y), activate(Y))
   g(b) -> c
   b -> c
   g(X) -> n__g(X)
   activate(n__g(X)) -> g(X)
   activate(X) -> X

Q is empty.

----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(X, n__g(X), Y) -> F(activate(Y), activate(Y), activate(Y))
   F(X, n__g(X), Y) -> ACTIVATE(Y)
   ACTIVATE(n__g(X)) -> G(X)

The TRS R consists of the following rules:

   f(X, n__g(X), Y) -> f(activate(Y), activate(Y), activate(Y))
   g(b) -> c
   b -> c
   g(X) -> n__g(X)
   activate(n__g(X)) -> g(X)
   activate(X) -> X

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 2 less nodes.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(X, n__g(X), Y) -> F(activate(Y), activate(Y), activate(Y))

The TRS R consists of the following rules:

   f(X, n__g(X), Y) -> f(activate(Y), activate(Y), activate(Y))
   g(b) -> c
   b -> c
   g(X) -> n__g(X)
   activate(n__g(X)) -> g(X)
   activate(X) -> X

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) NonLoopProof (COMPLETE)
By Theorem 8 [NONLOOP] we deduce infiniteness of the QDP.
We apply the theorem with m = 1, b = 0, 
?' = [ ], and ?' = [x0 / c] on the rule
F(c, n__g(c), n__g(b))[ ]^n[ ] -> F(c, n__g(c), n__g(b))[ ]^n[x0 / c]
This rule is correct for the QDP as the following derivation shows:

F(c, n__g(c), n__g(b))[ ]^n[ ] -> F(c, n__g(c), n__g(b))[ ]^n[x0 / c]
    by Equivalency by Simplifying Mu with mu1: [x0 / c] mu2: [ ]
    intermediate steps: Instantiate mu
    F(x0, n__g(x0), n__g(b))[ ]^n[ ] -> F(c, n__g(c), n__g(b))[ ]^n[ ]
        by Narrowing at position: [2]
        F(x0, n__g(x0), n__g(b))[ ]^n[ ] -> F(c, n__g(c), activate(n__g(b)))[ ]^n[ ]
            by Narrowing at position: [1]
            F(x0, n__g(x0), n__g(b))[ ]^n[ ] -> F(c, activate(n__g(c)), activate(n__g(b)))[ ]^n[ ]
                by Narrowing at position: [1,0,0]
                F(x0, n__g(x0), n__g(b))[ ]^n[ ] -> F(c, activate(n__g(b)), activate(n__g(b)))[ ]^n[ ]
                    by Narrowing at position: [0]
                    intermediate steps: Instantiation - Instantiation
                    F(x0, n__g(x0), n__g(y0))[ ]^n[ ] -> F(g(y0), activate(n__g(y0)), activate(n__g(y0)))[ ]^n[ ]
                        by Narrowing at position: [0]
                        intermediate steps: Instantiation - Instantiation
                        F(X, n__g(X), Y)[ ]^n[ ] -> F(activate(Y), activate(Y), activate(Y))[ ]^n[ ]
                            by Rule from TRS P

                        intermediate steps: Instantiation
                        activate(n__g(X))[ ]^n[ ] -> g(X)[ ]^n[ ]
                            by Rule from TRS R

                    g(b)[ ]^n[ ] -> c[ ]^n[ ]
                        by Rule from TRS R

                b[ ]^n[ ] -> c[ ]^n[ ]
                    by Rule from TRS R

            intermediate steps: Instantiation - Instantiation
            activate(X)[ ]^n[ ] -> X[ ]^n[ ]
                by Rule from TRS R

        intermediate steps: Instantiation - Instantiation
        activate(X)[ ]^n[ ] -> X[ ]^n[ ]
            by Rule from TRS R
----------------------------------------

(6)
NO
