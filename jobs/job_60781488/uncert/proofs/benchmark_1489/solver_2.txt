YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/UA5Sp.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 0 ms]
(2) QDP
(3) DependencyGraphProof [EQUIVALENT, 0 ms]
(4) AND
    (5) QDP
        (6) UsableRulesProof [EQUIVALENT, 0 ms]
        (7) QDP
        (8) ATransformationProof [EQUIVALENT, 0 ms]
        (9) QDP
        (10) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (11) YES
    (12) QDP
        (13) UsableRulesProof [EQUIVALENT, 0 ms]
        (14) QDP
        (15) UsableRulesReductionPairsProof [EQUIVALENT, 5 ms]
        (16) QDP
        (17) QDPOrderProof [EQUIVALENT, 0 ms]
        (18) QDP
        (19) PisEmptyProof [EQUIVALENT, 0 ms]
        (20) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(a, x) -> f(b, f(c, x))
   f(a, f(b, x)) -> f(b, f(a, x))
   f(d, f(c, x)) -> f(d, f(a, x))
   f(a, f(c, x)) -> f(c, f(a, x))

Q is empty.

----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(a, x) -> F(b, f(c, x))
   F(a, x) -> F(c, x)
   F(a, f(b, x)) -> F(b, f(a, x))
   F(a, f(b, x)) -> F(a, x)
   F(d, f(c, x)) -> F(d, f(a, x))
   F(d, f(c, x)) -> F(a, x)
   F(a, f(c, x)) -> F(c, f(a, x))
   F(a, f(c, x)) -> F(a, x)

The TRS R consists of the following rules:

   f(a, x) -> f(b, f(c, x))
   f(a, f(b, x)) -> f(b, f(a, x))
   f(d, f(c, x)) -> f(d, f(a, x))
   f(a, f(c, x)) -> f(c, f(a, x))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs with 5 less nodes.
----------------------------------------

(4)
Complex Obligation (AND)

----------------------------------------

(5)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(a, f(c, x)) -> F(a, x)
   F(a, f(b, x)) -> F(a, x)

The TRS R consists of the following rules:

   f(a, x) -> f(b, f(c, x))
   f(a, f(b, x)) -> f(b, f(a, x))
   f(d, f(c, x)) -> f(d, f(a, x))
   f(a, f(c, x)) -> f(c, f(a, x))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(6) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(7)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(a, f(c, x)) -> F(a, x)
   F(a, f(b, x)) -> F(a, x)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(8) ATransformationProof (EQUIVALENT)
We have applied the A-Transformation [FROCOS05] to get from an applicative problem to a standard problem. 
----------------------------------------

(9)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   a(c(x)) -> a(x)
   a(b(x)) -> a(x)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(10) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*a(c(x)) -> a(x)
The graph contains the following edges 1 > 1


*a(b(x)) -> a(x)
The graph contains the following edges 1 > 1


----------------------------------------

(11)
YES

----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(d, f(c, x)) -> F(d, f(a, x))

The TRS R consists of the following rules:

   f(a, x) -> f(b, f(c, x))
   f(a, f(b, x)) -> f(b, f(a, x))
   f(d, f(c, x)) -> f(d, f(a, x))
   f(a, f(c, x)) -> f(c, f(a, x))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(d, f(c, x)) -> F(d, f(a, x))

The TRS R consists of the following rules:

   f(a, x) -> f(b, f(c, x))
   f(a, f(b, x)) -> f(b, f(a, x))
   f(a, f(c, x)) -> f(c, f(a, x))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) UsableRulesReductionPairsProof (EQUIVALENT)
First, we A-transformed [FROCOS05] the QDP-Problem.
Then we obtain the following A-transformed DP problem.

The pairs P are: 

   d(c(x)) -> d(a(x))

and the Q and R are:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a(x) -> b(c(x))
   a(b(x)) -> b(a(x))
   a(c(x)) -> c(a(x))

Q is empty.

By using the usable rules with reduction pair processor [LPAR04] with a polynomial ordering [POLO], all dependency pairs and the corresponding usable rules [FROCOS05] can be oriented non-strictly. All non-usable rules are removed, and those dependency pairs and usable rules that have been oriented strictly or contain non-usable symbols in their left-hand side are removed as well.

No dependency pairs are removed.

The following rules are removed from R:

   f(a, x) -> f(b, f(c, x))
   f(a, f(b, x)) -> f(b, f(a, x))
   f(a, f(c, x)) -> f(c, f(a, x))
Used ordering: POLO with Polynomial interpretation [POLO]:

   POL(a(x_1)) = x_1
   POL(b(x_1)) = x_1
   POL(c(x_1)) = x_1
   POL(d(x_1)) = x_1


----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   d(c(x)) -> d(a(x))

The TRS R consists of the following rules:

   a(x) -> b(c(x))
   a(b(x)) -> b(a(x))
   a(c(x)) -> c(a(x))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   d(c(x)) -> d(a(x))
The remaining pairs can at least be oriented weakly.
Used ordering:  Combined order from the following AFS and order.
d(x1)  =  x1

c(x1)  =  c(x1)

a(x1)  =  x1

b(x1)  =  b


Knuth-Bendix order [KBO] with precedence:trivial

and weight map:

   b=1
   c_1=1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   a(x) -> b(c(x))
   a(b(x)) -> b(a(x))
   a(c(x)) -> c(a(x))


----------------------------------------

(18)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   a(x) -> b(c(x))
   a(b(x)) -> b(a(x))
   a(c(x)) -> c(a(x))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(20)
YES
