YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/An5TS.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRSRRRProof [EQUIVALENT, 7 ms]
(2) QTRS
(3) RisEmptyProof [EQUIVALENT, 0 ms]
(4) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   admit(x, nil) -> nil
   admit(x, .(u, .(v, .(w, z)))) -> cond(=(sum(x, u, v), w), .(u, .(v, .(w, admit(carry(x, u, v), z)))))
   cond(true, y) -> y

Q is empty.

----------------------------------------

(1) QTRSRRRProof (EQUIVALENT)
Used ordering:
Quasi precedence:
[admit_2, ._2] > nil > [w, carry_3]
[admit_2, ._2] > cond_2 > [w, carry_3]
[admit_2, ._2] > =_2 > [w, carry_3]
[admit_2, ._2] > sum_3 > [w, carry_3]
true > [w, carry_3]


Status:
admit_2: [2,1]
nil: multiset status
._2: [1,2]
w: multiset status
cond_2: [2,1]
=_2: multiset status
sum_3: [1,3,2]
carry_3: multiset status
true: multiset status

With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   admit(x, nil) -> nil
   admit(x, .(u, .(v, .(w, z)))) -> cond(=(sum(x, u, v), w), .(u, .(v, .(w, admit(carry(x, u, v), z)))))
   cond(true, y) -> y




----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
R is empty.
Q is empty.

----------------------------------------

(3) RisEmptyProof (EQUIVALENT)
The TRS R is empty. Hence, termination is trivially proven.
----------------------------------------

(4)
YES
