YES

Problem 1: 

(VAR vu95NonEmpty x y z)
(RULES
and(xor(x,y),z) -> xor(and(x,z),and(y,z))
and(x,ffalse) -> ffalse
and(x,ftrue) -> x
and(x,x) -> x
implies(x,y) -> xor(and(x,y),xor(x,ftrue))
not(x) -> xor(x,ftrue)
or(x,y) -> xor(and(x,y),xor(x,y))
xor(x,ffalse) -> x
xor(x,x) -> ffalse
)


Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 AND(xor(x,y),z) -> AND(x,z)
 AND(xor(x,y),z) -> AND(y,z)
 AND(xor(x,y),z) -> XOR(and(x,z),and(y,z))
 IMPLIES(x,y) -> AND(x,y)
 IMPLIES(x,y) -> XOR(and(x,y),xor(x,ftrue))
 IMPLIES(x,y) -> XOR(x,ftrue)
 NOT(x) -> XOR(x,ftrue)
 OR(x,y) -> AND(x,y)
 OR(x,y) -> XOR(and(x,y),xor(x,y))
 OR(x,y) -> XOR(x,y)
-> Rules:
 and(xor(x,y),z) -> xor(and(x,z),and(y,z))
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 implies(x,y) -> xor(and(x,y),xor(x,ftrue))
 not(x) -> xor(x,ftrue)
 or(x,y) -> xor(and(x,y),xor(x,y))
 xor(x,ffalse) -> x
 xor(x,x) -> ffalse

Problem 1: 

SCC Processor:
-> Pairs:
 AND(xor(x,y),z) -> AND(x,z)
 AND(xor(x,y),z) -> AND(y,z)
 AND(xor(x,y),z) -> XOR(and(x,z),and(y,z))
 IMPLIES(x,y) -> AND(x,y)
 IMPLIES(x,y) -> XOR(and(x,y),xor(x,ftrue))
 IMPLIES(x,y) -> XOR(x,ftrue)
 NOT(x) -> XOR(x,ftrue)
 OR(x,y) -> AND(x,y)
 OR(x,y) -> XOR(and(x,y),xor(x,y))
 OR(x,y) -> XOR(x,y)
-> Rules:
 and(xor(x,y),z) -> xor(and(x,z),and(y,z))
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 implies(x,y) -> xor(and(x,y),xor(x,ftrue))
 not(x) -> xor(x,ftrue)
 or(x,y) -> xor(and(x,y),xor(x,y))
 xor(x,ffalse) -> x
 xor(x,x) -> ffalse
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AND(xor(x,y),z) -> AND(x,z)
 AND(xor(x,y),z) -> AND(y,z)
->->-> Rules:
 and(xor(x,y),z) -> xor(and(x,z),and(y,z))
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 implies(x,y) -> xor(and(x,y),xor(x,ftrue))
 not(x) -> xor(x,ftrue)
 or(x,y) -> xor(and(x,y),xor(x,y))
 xor(x,ffalse) -> x
 xor(x,x) -> ffalse

Problem 1: 

Subterm Processor:
-> Pairs:
 AND(xor(x,y),z) -> AND(x,z)
 AND(xor(x,y),z) -> AND(y,z)
-> Rules:
 and(xor(x,y),z) -> xor(and(x,z),and(y,z))
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 implies(x,y) -> xor(and(x,y),xor(x,ftrue))
 not(x) -> xor(x,ftrue)
 or(x,y) -> xor(and(x,y),xor(x,y))
 xor(x,ffalse) -> x
 xor(x,x) -> ffalse
->Projection:
 pi(AND) = 1

Problem 1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 and(xor(x,y),z) -> xor(and(x,z),and(y,z))
 and(x,ffalse) -> ffalse
 and(x,ftrue) -> x
 and(x,x) -> x
 implies(x,y) -> xor(and(x,y),xor(x,ftrue))
 not(x) -> xor(x,ftrue)
 or(x,y) -> xor(and(x,y),xor(x,y))
 xor(x,ffalse) -> x
 xor(x,x) -> ffalse
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
