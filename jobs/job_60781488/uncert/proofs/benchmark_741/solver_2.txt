YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/Qu4jP.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRSRRRProof [EQUIVALENT, 28 ms]
(2) QTRS
(3) RisEmptyProof [EQUIVALENT, 0 ms]
(4) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   not(x) -> xor(x, true)
   or(x, y) -> xor(and(x, y), xor(x, y))
   implies(x, y) -> xor(and(x, y), xor(x, true))
   and(x, true) -> x
   and(x, false) -> false
   and(x, x) -> x
   xor(x, false) -> x
   xor(x, x) -> false
   and(xor(x, y), z) -> xor(and(x, z), and(y, z))

Q is empty.

----------------------------------------

(1) QTRSRRRProof (EQUIVALENT)
Used ordering:
Quasi precedence:
or_2 > and_2 > [xor_2, false]
implies_2 > [not_1, true] > [xor_2, false]
implies_2 > and_2 > [xor_2, false]


Status:
not_1: multiset status
xor_2: multiset status
true: multiset status
or_2: multiset status
and_2: multiset status
implies_2: multiset status
false: multiset status

With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   not(x) -> xor(x, true)
   or(x, y) -> xor(and(x, y), xor(x, y))
   implies(x, y) -> xor(and(x, y), xor(x, true))
   and(x, true) -> x
   and(x, false) -> false
   and(x, x) -> x
   xor(x, false) -> x
   xor(x, x) -> false
   and(xor(x, y), z) -> xor(and(x, z), and(y, z))




----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
R is empty.
Q is empty.

----------------------------------------

(3) RisEmptyProof (EQUIVALENT)
The TRS R is empty. Hence, termination is trivially proven.
----------------------------------------

(4)
YES
