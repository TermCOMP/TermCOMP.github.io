YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/N8ayv.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) AAECC Innermost [EQUIVALENT, 0 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 0 ms]
(4) QDP
(5) UsableRulesProof [EQUIVALENT, 0 ms]
(6) QDP
(7) QReductionProof [EQUIVALENT, 0 ms]
(8) QDP
(9) QDPOrderProof [EQUIVALENT, 0 ms]
(10) QDP
(11) QDPSizeChangeProof [EQUIVALENT, 0 ms]
(12) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   h(x, c(y, z)) -> h(c(s(y), x), z)
   h(c(s(x), c(s(0), y)), z) -> h(y, c(s(0), c(x, z)))

Q is empty.

----------------------------------------

(1) AAECC Innermost (EQUIVALENT)
We have applied [NOC,AAECCNOC] to switch to innermost. The TRS R 1 is none

The TRS R 2 is 
   h(x, c(y, z)) -> h(c(s(y), x), z)
   h(c(s(x), c(s(0), y)), z) -> h(y, c(s(0), c(x, z)))

The signature Sigma is {h_2}
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   h(x, c(y, z)) -> h(c(s(y), x), z)
   h(c(s(x), c(s(0), y)), z) -> h(y, c(s(0), c(x, z)))

The set Q consists of the following terms:

   h(x0, c(x1, x2))
   h(c(s(x0), c(s(0), x1)), x2)


----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   H(x, c(y, z)) -> H(c(s(y), x), z)
   H(c(s(x), c(s(0), y)), z) -> H(y, c(s(0), c(x, z)))

The TRS R consists of the following rules:

   h(x, c(y, z)) -> h(c(s(y), x), z)
   h(c(s(x), c(s(0), y)), z) -> h(y, c(s(0), c(x, z)))

The set Q consists of the following terms:

   h(x0, c(x1, x2))
   h(c(s(x0), c(s(0), x1)), x2)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   H(x, c(y, z)) -> H(c(s(y), x), z)
   H(c(s(x), c(s(0), y)), z) -> H(y, c(s(0), c(x, z)))

R is empty.
The set Q consists of the following terms:

   h(x0, c(x1, x2))
   h(c(s(x0), c(s(0), x1)), x2)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   h(x0, c(x1, x2))
   h(c(s(x0), c(s(0), x1)), x2)


----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   H(x, c(y, z)) -> H(c(s(y), x), z)
   H(c(s(x), c(s(0), y)), z) -> H(y, c(s(0), c(x, z)))

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   H(c(s(x), c(s(0), y)), z) -> H(y, c(s(0), c(x, z)))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO,RATPOLO]:

   POL(0) = [4]
   POL(H(x_1, x_2)) = x_1 + [1/2]x_2
   POL(c(x_1, x_2)) = [1/4]x_1 + x_2
   POL(s(x_1)) = [1/2]x_1
The value of delta used in the strict ordering is 1/4.
The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:
none


----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   H(x, c(y, z)) -> H(c(s(y), x), z)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*H(x, c(y, z)) -> H(c(s(y), x), z)
The graph contains the following edges 2 > 2


----------------------------------------

(12)
YES
