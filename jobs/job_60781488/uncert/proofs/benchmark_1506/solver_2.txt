YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/5mV3p.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) AAECC Innermost [EQUIVALENT, 0 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 0 ms]
(4) QDP
(5) UsableRulesProof [EQUIVALENT, 0 ms]
(6) QDP
(7) QReductionProof [EQUIVALENT, 0 ms]
(8) QDP
(9) QDPToSRSProof [SOUND, 0 ms]
(10) QTRS
(11) DependencyPairsProof [EQUIVALENT, 0 ms]
(12) QDP
(13) MRRProof [EQUIVALENT, 5 ms]
(14) QDP
(15) DependencyGraphProof [EQUIVALENT, 0 ms]
(16) AND
    (17) QDP
        (18) UsableRulesProof [EQUIVALENT, 0 ms]
        (19) QDP
        (20) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (21) YES
    (22) QDP
        (23) UsableRulesProof [EQUIVALENT, 0 ms]
        (24) QDP
        (25) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (26) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(x, a(b(y))) -> f(a(b(x)), y)
   f(x, b(c(y))) -> f(b(c(x)), y)
   f(x, c(a(y))) -> f(c(a(x)), y)
   f(a(x), y) -> f(x, a(y))
   f(b(x), y) -> f(x, b(y))
   f(c(x), y) -> f(x, c(y))

Q is empty.

----------------------------------------

(1) AAECC Innermost (EQUIVALENT)
We have applied [NOC,AAECCNOC] to switch to innermost. The TRS R 1 is none

The TRS R 2 is 
   f(x, a(b(y))) -> f(a(b(x)), y)
   f(x, b(c(y))) -> f(b(c(x)), y)
   f(x, c(a(y))) -> f(c(a(x)), y)
   f(a(x), y) -> f(x, a(y))
   f(b(x), y) -> f(x, b(y))
   f(c(x), y) -> f(x, c(y))

The signature Sigma is {f_2}
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(x, a(b(y))) -> f(a(b(x)), y)
   f(x, b(c(y))) -> f(b(c(x)), y)
   f(x, c(a(y))) -> f(c(a(x)), y)
   f(a(x), y) -> f(x, a(y))
   f(b(x), y) -> f(x, b(y))
   f(c(x), y) -> f(x, c(y))

The set Q consists of the following terms:

   f(x0, a(b(x1)))
   f(x0, b(c(x1)))
   f(x0, c(a(x1)))
   f(a(x0), x1)
   f(b(x0), x1)
   f(c(x0), x1)


----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(x, a(b(y))) -> F(a(b(x)), y)
   F(x, b(c(y))) -> F(b(c(x)), y)
   F(x, c(a(y))) -> F(c(a(x)), y)
   F(a(x), y) -> F(x, a(y))
   F(b(x), y) -> F(x, b(y))
   F(c(x), y) -> F(x, c(y))

The TRS R consists of the following rules:

   f(x, a(b(y))) -> f(a(b(x)), y)
   f(x, b(c(y))) -> f(b(c(x)), y)
   f(x, c(a(y))) -> f(c(a(x)), y)
   f(a(x), y) -> f(x, a(y))
   f(b(x), y) -> f(x, b(y))
   f(c(x), y) -> f(x, c(y))

The set Q consists of the following terms:

   f(x0, a(b(x1)))
   f(x0, b(c(x1)))
   f(x0, c(a(x1)))
   f(a(x0), x1)
   f(b(x0), x1)
   f(c(x0), x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(x, a(b(y))) -> F(a(b(x)), y)
   F(x, b(c(y))) -> F(b(c(x)), y)
   F(x, c(a(y))) -> F(c(a(x)), y)
   F(a(x), y) -> F(x, a(y))
   F(b(x), y) -> F(x, b(y))
   F(c(x), y) -> F(x, c(y))

R is empty.
The set Q consists of the following terms:

   f(x0, a(b(x1)))
   f(x0, b(c(x1)))
   f(x0, c(a(x1)))
   f(a(x0), x1)
   f(b(x0), x1)
   f(c(x0), x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   f(x0, a(b(x1)))
   f(x0, b(c(x1)))
   f(x0, c(a(x1)))
   f(a(x0), x1)
   f(b(x0), x1)
   f(c(x0), x1)


----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(x, a(b(y))) -> F(a(b(x)), y)
   F(x, b(c(y))) -> F(b(c(x)), y)
   F(x, c(a(y))) -> F(c(a(x)), y)
   F(a(x), y) -> F(x, a(y))
   F(b(x), y) -> F(x, b(y))
   F(c(x), y) -> F(x, c(y))

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) QDPToSRSProof (SOUND)
The finiteness of this DP problem is implied by strong termination of a SRS due to [UNKNOWN].

----------------------------------------

(10)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a(b(x)) -> b(a(x))
   b(c(x)) -> c(b(x))
   c(a(x)) -> a(c(x))

Q is empty.

----------------------------------------

(11) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(b(x)) -> B(a(x))
   A(b(x)) -> A(x)
   B(c(x)) -> C(b(x))
   B(c(x)) -> B(x)
   C(a(x)) -> A(c(x))
   C(a(x)) -> C(x)

The TRS R consists of the following rules:

   a(b(x)) -> b(a(x))
   b(c(x)) -> c(b(x))
   c(a(x)) -> a(c(x))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) MRRProof (EQUIVALENT)
By using the rule removal processor [LPAR04] with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented.

Strictly oriented dependency pairs:

   B(c(x)) -> B(x)
   C(a(x)) -> A(c(x))

Strictly oriented rules of the TRS R:

   b(c(x)) -> c(b(x))

Used ordering: Polynomial interpretation [POLO]:

   POL(A(x_1)) = x_1
   POL(B(x_1)) = 2*x_1
   POL(C(x_1)) = 2 + 2*x_1
   POL(a(x_1)) = x_1
   POL(b(x_1)) = 2*x_1
   POL(c(x_1)) = 1 + 2*x_1


----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(b(x)) -> B(a(x))
   A(b(x)) -> A(x)
   B(c(x)) -> C(b(x))
   C(a(x)) -> C(x)

The TRS R consists of the following rules:

   a(b(x)) -> b(a(x))
   c(a(x)) -> a(c(x))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs with 2 less nodes.
----------------------------------------

(16)
Complex Obligation (AND)

----------------------------------------

(17)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C(a(x)) -> C(x)

The TRS R consists of the following rules:

   a(b(x)) -> b(a(x))
   c(a(x)) -> a(c(x))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(18) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(19)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C(a(x)) -> C(x)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(20) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*C(a(x)) -> C(x)
The graph contains the following edges 1 > 1


----------------------------------------

(21)
YES

----------------------------------------

(22)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(b(x)) -> A(x)

The TRS R consists of the following rules:

   a(b(x)) -> b(a(x))
   c(a(x)) -> a(c(x))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(23) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(24)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A(b(x)) -> A(x)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(25) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*A(b(x)) -> A(x)
The graph contains the following edges 1 > 1


----------------------------------------

(26)
YES
