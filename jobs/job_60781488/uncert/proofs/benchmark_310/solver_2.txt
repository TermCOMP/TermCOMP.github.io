YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/Jkrkd.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) AAECC Innermost [EQUIVALENT, 0 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 0 ms]
(4) QDP
(5) DependencyGraphProof [EQUIVALENT, 0 ms]
(6) AND
    (7) QDP
        (8) UsableRulesProof [EQUIVALENT, 0 ms]
        (9) QDP
        (10) QReductionProof [EQUIVALENT, 0 ms]
        (11) QDP
        (12) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (13) YES
    (14) QDP
        (15) UsableRulesProof [EQUIVALENT, 0 ms]
        (16) QDP
        (17) QReductionProof [EQUIVALENT, 0 ms]
        (18) QDP
        (19) QDPQMonotonicMRRProof [EQUIVALENT, 0 ms]
        (20) QDP
        (21) QDPQMonotonicMRRProof [EQUIVALENT, 9 ms]
        (22) QDP
        (23) QDPOrderProof [EQUIVALENT, 37 ms]
        (24) QDP
        (25) QDPOrderProof [EQUIVALENT, 6 ms]
        (26) QDP
        (27) UsableRulesProof [EQUIVALENT, 0 ms]
        (28) QDP
        (29) QReductionProof [EQUIVALENT, 0 ms]
        (30) QDP
        (31) NonInfProof [EQUIVALENT, 22 ms]
        (32) AND
            (33) QDP
                (34) DependencyGraphProof [EQUIVALENT, 0 ms]
                (35) QDP
                (36) NonInfProof [EQUIVALENT, 0 ms]
                (37) AND
                    (38) QDP
                        (39) DependencyGraphProof [EQUIVALENT, 0 ms]
                        (40) TRUE
                    (41) QDP
                        (42) DependencyGraphProof [EQUIVALENT, 0 ms]
                        (43) TRUE
            (44) QDP
                (45) DependencyGraphProof [EQUIVALENT, 0 ms]
                (46) QDP
                (47) NonInfProof [EQUIVALENT, 5 ms]
                (48) QDP
                (49) DependencyGraphProof [EQUIVALENT, 0 ms]
                (50) TRUE


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   cond1(true, x, y) -> cond2(gr(x, y), x, y)
   cond2(true, x, y) -> cond3(gr(x, 0), x, y)
   cond2(false, x, y) -> cond4(gr(y, 0), x, y)
   cond3(true, x, y) -> cond3(gr(x, 0), p(x), y)
   cond3(false, x, y) -> cond1(and(gr(x, 0), gr(y, 0)), x, y)
   cond4(true, x, y) -> cond4(gr(y, 0), x, p(y))
   cond4(false, x, y) -> cond1(and(gr(x, 0), gr(y, 0)), x, y)
   gr(0, x) -> false
   gr(s(x), 0) -> true
   gr(s(x), s(y)) -> gr(x, y)
   and(true, true) -> true
   and(false, x) -> false
   and(x, false) -> false
   p(0) -> 0
   p(s(x)) -> x

Q is empty.

----------------------------------------

(1) AAECC Innermost (EQUIVALENT)
We have applied [NOC,AAECCNOC] to switch to innermost. The TRS R 1 is 
   gr(0, x) -> false
   gr(s(x), 0) -> true
   gr(s(x), s(y)) -> gr(x, y)
   and(true, true) -> true
   and(false, x) -> false
   and(x, false) -> false
   p(0) -> 0
   p(s(x)) -> x

The TRS R 2 is 
   cond1(true, x, y) -> cond2(gr(x, y), x, y)
   cond2(true, x, y) -> cond3(gr(x, 0), x, y)
   cond2(false, x, y) -> cond4(gr(y, 0), x, y)
   cond3(true, x, y) -> cond3(gr(x, 0), p(x), y)
   cond3(false, x, y) -> cond1(and(gr(x, 0), gr(y, 0)), x, y)
   cond4(true, x, y) -> cond4(gr(y, 0), x, p(y))
   cond4(false, x, y) -> cond1(and(gr(x, 0), gr(y, 0)), x, y)

The signature Sigma is {cond1_3, cond2_3, cond3_3, cond4_3}
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   cond1(true, x, y) -> cond2(gr(x, y), x, y)
   cond2(true, x, y) -> cond3(gr(x, 0), x, y)
   cond2(false, x, y) -> cond4(gr(y, 0), x, y)
   cond3(true, x, y) -> cond3(gr(x, 0), p(x), y)
   cond3(false, x, y) -> cond1(and(gr(x, 0), gr(y, 0)), x, y)
   cond4(true, x, y) -> cond4(gr(y, 0), x, p(y))
   cond4(false, x, y) -> cond1(and(gr(x, 0), gr(y, 0)), x, y)
   gr(0, x) -> false
   gr(s(x), 0) -> true
   gr(s(x), s(y)) -> gr(x, y)
   and(true, true) -> true
   and(false, x) -> false
   and(x, false) -> false
   p(0) -> 0
   p(s(x)) -> x

The set Q consists of the following terms:

   cond1(true, x0, x1)
   cond2(true, x0, x1)
   cond2(false, x0, x1)
   cond3(true, x0, x1)
   cond3(false, x0, x1)
   cond4(true, x0, x1)
   cond4(false, x0, x1)
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)
   p(0)
   p(s(x0))


----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND1(true, x, y) -> COND2(gr(x, y), x, y)
   COND1(true, x, y) -> GR(x, y)
   COND2(true, x, y) -> COND3(gr(x, 0), x, y)
   COND2(true, x, y) -> GR(x, 0)
   COND2(false, x, y) -> COND4(gr(y, 0), x, y)
   COND2(false, x, y) -> GR(y, 0)
   COND3(true, x, y) -> COND3(gr(x, 0), p(x), y)
   COND3(true, x, y) -> GR(x, 0)
   COND3(true, x, y) -> P(x)
   COND3(false, x, y) -> COND1(and(gr(x, 0), gr(y, 0)), x, y)
   COND3(false, x, y) -> AND(gr(x, 0), gr(y, 0))
   COND3(false, x, y) -> GR(x, 0)
   COND3(false, x, y) -> GR(y, 0)
   COND4(true, x, y) -> COND4(gr(y, 0), x, p(y))
   COND4(true, x, y) -> GR(y, 0)
   COND4(true, x, y) -> P(y)
   COND4(false, x, y) -> COND1(and(gr(x, 0), gr(y, 0)), x, y)
   COND4(false, x, y) -> AND(gr(x, 0), gr(y, 0))
   COND4(false, x, y) -> GR(x, 0)
   COND4(false, x, y) -> GR(y, 0)
   GR(s(x), s(y)) -> GR(x, y)

The TRS R consists of the following rules:

   cond1(true, x, y) -> cond2(gr(x, y), x, y)
   cond2(true, x, y) -> cond3(gr(x, 0), x, y)
   cond2(false, x, y) -> cond4(gr(y, 0), x, y)
   cond3(true, x, y) -> cond3(gr(x, 0), p(x), y)
   cond3(false, x, y) -> cond1(and(gr(x, 0), gr(y, 0)), x, y)
   cond4(true, x, y) -> cond4(gr(y, 0), x, p(y))
   cond4(false, x, y) -> cond1(and(gr(x, 0), gr(y, 0)), x, y)
   gr(0, x) -> false
   gr(s(x), 0) -> true
   gr(s(x), s(y)) -> gr(x, y)
   and(true, true) -> true
   and(false, x) -> false
   and(x, false) -> false
   p(0) -> 0
   p(s(x)) -> x

The set Q consists of the following terms:

   cond1(true, x0, x1)
   cond2(true, x0, x1)
   cond2(false, x0, x1)
   cond3(true, x0, x1)
   cond3(false, x0, x1)
   cond4(true, x0, x1)
   cond4(false, x0, x1)
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs with 13 less nodes.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   GR(s(x), s(y)) -> GR(x, y)

The TRS R consists of the following rules:

   cond1(true, x, y) -> cond2(gr(x, y), x, y)
   cond2(true, x, y) -> cond3(gr(x, 0), x, y)
   cond2(false, x, y) -> cond4(gr(y, 0), x, y)
   cond3(true, x, y) -> cond3(gr(x, 0), p(x), y)
   cond3(false, x, y) -> cond1(and(gr(x, 0), gr(y, 0)), x, y)
   cond4(true, x, y) -> cond4(gr(y, 0), x, p(y))
   cond4(false, x, y) -> cond1(and(gr(x, 0), gr(y, 0)), x, y)
   gr(0, x) -> false
   gr(s(x), 0) -> true
   gr(s(x), s(y)) -> gr(x, y)
   and(true, true) -> true
   and(false, x) -> false
   and(x, false) -> false
   p(0) -> 0
   p(s(x)) -> x

The set Q consists of the following terms:

   cond1(true, x0, x1)
   cond2(true, x0, x1)
   cond2(false, x0, x1)
   cond3(true, x0, x1)
   cond3(false, x0, x1)
   cond4(true, x0, x1)
   cond4(false, x0, x1)
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(8) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(9)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   GR(s(x), s(y)) -> GR(x, y)

R is empty.
The set Q consists of the following terms:

   cond1(true, x0, x1)
   cond2(true, x0, x1)
   cond2(false, x0, x1)
   cond3(true, x0, x1)
   cond3(false, x0, x1)
   cond4(true, x0, x1)
   cond4(false, x0, x1)
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(10) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   cond1(true, x0, x1)
   cond2(true, x0, x1)
   cond2(false, x0, x1)
   cond3(true, x0, x1)
   cond3(false, x0, x1)
   cond4(true, x0, x1)
   cond4(false, x0, x1)
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)
   p(0)
   p(s(x0))


----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   GR(s(x), s(y)) -> GR(x, y)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(12) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*GR(s(x), s(y)) -> GR(x, y)
The graph contains the following edges 1 > 1, 2 > 2


----------------------------------------

(13)
YES

----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND2(true, x, y) -> COND3(gr(x, 0), x, y)
   COND3(true, x, y) -> COND3(gr(x, 0), p(x), y)
   COND3(false, x, y) -> COND1(and(gr(x, 0), gr(y, 0)), x, y)
   COND1(true, x, y) -> COND2(gr(x, y), x, y)
   COND2(false, x, y) -> COND4(gr(y, 0), x, y)
   COND4(true, x, y) -> COND4(gr(y, 0), x, p(y))
   COND4(false, x, y) -> COND1(and(gr(x, 0), gr(y, 0)), x, y)

The TRS R consists of the following rules:

   cond1(true, x, y) -> cond2(gr(x, y), x, y)
   cond2(true, x, y) -> cond3(gr(x, 0), x, y)
   cond2(false, x, y) -> cond4(gr(y, 0), x, y)
   cond3(true, x, y) -> cond3(gr(x, 0), p(x), y)
   cond3(false, x, y) -> cond1(and(gr(x, 0), gr(y, 0)), x, y)
   cond4(true, x, y) -> cond4(gr(y, 0), x, p(y))
   cond4(false, x, y) -> cond1(and(gr(x, 0), gr(y, 0)), x, y)
   gr(0, x) -> false
   gr(s(x), 0) -> true
   gr(s(x), s(y)) -> gr(x, y)
   and(true, true) -> true
   and(false, x) -> false
   and(x, false) -> false
   p(0) -> 0
   p(s(x)) -> x

The set Q consists of the following terms:

   cond1(true, x0, x1)
   cond2(true, x0, x1)
   cond2(false, x0, x1)
   cond3(true, x0, x1)
   cond3(false, x0, x1)
   cond4(true, x0, x1)
   cond4(false, x0, x1)
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND2(true, x, y) -> COND3(gr(x, 0), x, y)
   COND3(true, x, y) -> COND3(gr(x, 0), p(x), y)
   COND3(false, x, y) -> COND1(and(gr(x, 0), gr(y, 0)), x, y)
   COND1(true, x, y) -> COND2(gr(x, y), x, y)
   COND2(false, x, y) -> COND4(gr(y, 0), x, y)
   COND4(true, x, y) -> COND4(gr(y, 0), x, p(y))
   COND4(false, x, y) -> COND1(and(gr(x, 0), gr(y, 0)), x, y)

The TRS R consists of the following rules:

   gr(0, x) -> false
   gr(s(x), 0) -> true
   and(true, true) -> true
   and(false, x) -> false
   and(x, false) -> false
   p(0) -> 0
   p(s(x)) -> x
   gr(s(x), s(y)) -> gr(x, y)

The set Q consists of the following terms:

   cond1(true, x0, x1)
   cond2(true, x0, x1)
   cond2(false, x0, x1)
   cond3(true, x0, x1)
   cond3(false, x0, x1)
   cond4(true, x0, x1)
   cond4(false, x0, x1)
   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   cond1(true, x0, x1)
   cond2(true, x0, x1)
   cond2(false, x0, x1)
   cond3(true, x0, x1)
   cond3(false, x0, x1)
   cond4(true, x0, x1)
   cond4(false, x0, x1)


----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND2(true, x, y) -> COND3(gr(x, 0), x, y)
   COND3(true, x, y) -> COND3(gr(x, 0), p(x), y)
   COND3(false, x, y) -> COND1(and(gr(x, 0), gr(y, 0)), x, y)
   COND1(true, x, y) -> COND2(gr(x, y), x, y)
   COND2(false, x, y) -> COND4(gr(y, 0), x, y)
   COND4(true, x, y) -> COND4(gr(y, 0), x, p(y))
   COND4(false, x, y) -> COND1(and(gr(x, 0), gr(y, 0)), x, y)

The TRS R consists of the following rules:

   gr(0, x) -> false
   gr(s(x), 0) -> true
   and(true, true) -> true
   and(false, x) -> false
   and(x, false) -> false
   p(0) -> 0
   p(s(x)) -> x
   gr(s(x), s(y)) -> gr(x, y)

The set Q consists of the following terms:

   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) QDPQMonotonicMRRProof (EQUIVALENT)
By using the Q-monotonic rule removal processor with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented such that it always occurs at a strongly monotonic position in a (P,Q,R)-chain.


Strictly oriented rules of the TRS R:

   p(s(x)) -> x

Used ordering: Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(COND1(x_1, x_2, x_3)) = x_2 + 2*x_3
   POL(COND2(x_1, x_2, x_3)) = x_2 + 2*x_3
   POL(COND3(x_1, x_2, x_3)) = x_2 + 2*x_3
   POL(COND4(x_1, x_2, x_3)) = x_2 + 2*x_3
   POL(and(x_1, x_2)) = 0
   POL(false) = 0
   POL(gr(x_1, x_2)) = 2
   POL(p(x_1)) = x_1
   POL(s(x_1)) = 2 + 2*x_1
   POL(true) = 0


----------------------------------------

(20)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND2(true, x, y) -> COND3(gr(x, 0), x, y)
   COND3(true, x, y) -> COND3(gr(x, 0), p(x), y)
   COND3(false, x, y) -> COND1(and(gr(x, 0), gr(y, 0)), x, y)
   COND1(true, x, y) -> COND2(gr(x, y), x, y)
   COND2(false, x, y) -> COND4(gr(y, 0), x, y)
   COND4(true, x, y) -> COND4(gr(y, 0), x, p(y))
   COND4(false, x, y) -> COND1(and(gr(x, 0), gr(y, 0)), x, y)

The TRS R consists of the following rules:

   gr(0, x) -> false
   gr(s(x), 0) -> true
   and(true, true) -> true
   and(false, x) -> false
   and(x, false) -> false
   p(0) -> 0
   gr(s(x), s(y)) -> gr(x, y)

The set Q consists of the following terms:

   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(21) QDPQMonotonicMRRProof (EQUIVALENT)
By using the Q-monotonic rule removal processor with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented such that it always occurs at a strongly monotonic position in a (P,Q,R)-chain.


Strictly oriented rules of the TRS R:

   and(false, x) -> false
   and(x, false) -> false

Used ordering: Polynomial interpretation [POLO]:

   POL(0) = 2
   POL(COND1(x_1, x_2, x_3)) = x_1
   POL(COND2(x_1, x_2, x_3)) = 1
   POL(COND3(x_1, x_2, x_3)) = 1
   POL(COND4(x_1, x_2, x_3)) = 1
   POL(and(x_1, x_2)) = 1
   POL(false) = 0
   POL(gr(x_1, x_2)) = 2*x_2
   POL(p(x_1)) = 2*x_1
   POL(s(x_1)) = 2*x_1
   POL(true) = 1


----------------------------------------

(22)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND2(true, x, y) -> COND3(gr(x, 0), x, y)
   COND3(true, x, y) -> COND3(gr(x, 0), p(x), y)
   COND3(false, x, y) -> COND1(and(gr(x, 0), gr(y, 0)), x, y)
   COND1(true, x, y) -> COND2(gr(x, y), x, y)
   COND2(false, x, y) -> COND4(gr(y, 0), x, y)
   COND4(true, x, y) -> COND4(gr(y, 0), x, p(y))
   COND4(false, x, y) -> COND1(and(gr(x, 0), gr(y, 0)), x, y)

The TRS R consists of the following rules:

   gr(0, x) -> false
   gr(s(x), 0) -> true
   and(true, true) -> true
   p(0) -> 0
   gr(s(x), s(y)) -> gr(x, y)

The set Q consists of the following terms:

   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(23) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   COND3(true, x, y) -> COND3(gr(x, 0), p(x), y)
The remaining pairs can at least be oriented weakly.
Used ordering:  Matrix interpretation [MATRO] with arctic natural numbers [ARCTIC]:

   <<<
 POL(COND2(x_1, x_2, x_3)) =  	[[0A]] 	 +  	[[-I]] 	* 	x_1 	 +  	[[2A]] 	* 	x_2 	 +  	[[-I]] 	* 	x_3
>>>

   <<<
 POL(true) =  	[[2A]]
>>>

   <<<
 POL(COND3(x_1, x_2, x_3)) =  	[[-I]] 	 +  	[[1A]] 	* 	x_1 	 +  	[[2A]] 	* 	x_2 	 +  	[[-I]] 	* 	x_3
>>>

   <<<
 POL(gr(x_1, x_2)) =  	[[-I]] 	 +  	[[0A]] 	* 	x_1 	 +  	[[-I]] 	* 	x_2
>>>

   <<<
 POL(0) =  	[[0A]]
>>>

   <<<
 POL(p(x_1)) =  	[[0A]] 	 +  	[[-I]] 	* 	x_1
>>>

   <<<
 POL(false) =  	[[0A]]
>>>

   <<<
 POL(COND1(x_1, x_2, x_3)) =  	[[-I]] 	 +  	[[0A]] 	* 	x_1 	 +  	[[2A]] 	* 	x_2 	 +  	[[-I]] 	* 	x_3
>>>

   <<<
 POL(and(x_1, x_2)) =  	[[0A]] 	 +  	[[0A]] 	* 	x_1 	 +  	[[-I]] 	* 	x_2
>>>

   <<<
 POL(COND4(x_1, x_2, x_3)) =  	[[0A]] 	 +  	[[-I]] 	* 	x_1 	 +  	[[2A]] 	* 	x_2 	 +  	[[-I]] 	* 	x_3
>>>

   <<<
 POL(s(x_1)) =  	[[2A]] 	 +  	[[-I]] 	* 	x_1
>>>


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   gr(0, x) -> false
   gr(s(x), 0) -> true
   p(0) -> 0
   and(true, true) -> true


----------------------------------------

(24)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND2(true, x, y) -> COND3(gr(x, 0), x, y)
   COND3(false, x, y) -> COND1(and(gr(x, 0), gr(y, 0)), x, y)
   COND1(true, x, y) -> COND2(gr(x, y), x, y)
   COND2(false, x, y) -> COND4(gr(y, 0), x, y)
   COND4(true, x, y) -> COND4(gr(y, 0), x, p(y))
   COND4(false, x, y) -> COND1(and(gr(x, 0), gr(y, 0)), x, y)

The TRS R consists of the following rules:

   gr(0, x) -> false
   gr(s(x), 0) -> true
   and(true, true) -> true
   p(0) -> 0
   gr(s(x), s(y)) -> gr(x, y)

The set Q consists of the following terms:

   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(25) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   COND4(true, x, y) -> COND4(gr(y, 0), x, p(y))
The remaining pairs can at least be oriented weakly.
Used ordering:  Matrix interpretation [MATRO] with arctic natural numbers [ARCTIC]:

   <<<
 POL(COND2(x_1, x_2, x_3)) =  	[[5A]] 	 +  	[[-I]] 	* 	x_1 	 +  	[[-I]] 	* 	x_2 	 +  	[[5A]] 	* 	x_3
>>>

   <<<
 POL(true) =  	[[3A]]
>>>

   <<<
 POL(COND3(x_1, x_2, x_3)) =  	[[5A]] 	 +  	[[-I]] 	* 	x_1 	 +  	[[-I]] 	* 	x_2 	 +  	[[5A]] 	* 	x_3
>>>

   <<<
 POL(gr(x_1, x_2)) =  	[[-I]] 	 +  	[[0A]] 	* 	x_1 	 +  	[[-I]] 	* 	x_2
>>>

   <<<
 POL(0) =  	[[1A]]
>>>

   <<<
 POL(false) =  	[[0A]]
>>>

   <<<
 POL(COND1(x_1, x_2, x_3)) =  	[[0A]] 	 +  	[[3A]] 	* 	x_1 	 +  	[[-I]] 	* 	x_2 	 +  	[[5A]] 	* 	x_3
>>>

   <<<
 POL(and(x_1, x_2)) =  	[[-I]] 	 +  	[[-I]] 	* 	x_1 	 +  	[[0A]] 	* 	x_2
>>>

   <<<
 POL(COND4(x_1, x_2, x_3)) =  	[[-I]] 	 +  	[[4A]] 	* 	x_1 	 +  	[[-I]] 	* 	x_2 	 +  	[[5A]] 	* 	x_3
>>>

   <<<
 POL(p(x_1)) =  	[[1A]] 	 +  	[[-I]] 	* 	x_1
>>>

   <<<
 POL(s(x_1)) =  	[[3A]] 	 +  	[[-I]] 	* 	x_1
>>>


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   gr(0, x) -> false
   gr(s(x), 0) -> true
   and(true, true) -> true
   p(0) -> 0


----------------------------------------

(26)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND2(true, x, y) -> COND3(gr(x, 0), x, y)
   COND3(false, x, y) -> COND1(and(gr(x, 0), gr(y, 0)), x, y)
   COND1(true, x, y) -> COND2(gr(x, y), x, y)
   COND2(false, x, y) -> COND4(gr(y, 0), x, y)
   COND4(false, x, y) -> COND1(and(gr(x, 0), gr(y, 0)), x, y)

The TRS R consists of the following rules:

   gr(0, x) -> false
   gr(s(x), 0) -> true
   and(true, true) -> true
   p(0) -> 0
   gr(s(x), s(y)) -> gr(x, y)

The set Q consists of the following terms:

   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(27) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(28)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND2(true, x, y) -> COND3(gr(x, 0), x, y)
   COND3(false, x, y) -> COND1(and(gr(x, 0), gr(y, 0)), x, y)
   COND1(true, x, y) -> COND2(gr(x, y), x, y)
   COND2(false, x, y) -> COND4(gr(y, 0), x, y)
   COND4(false, x, y) -> COND1(and(gr(x, 0), gr(y, 0)), x, y)

The TRS R consists of the following rules:

   gr(0, x) -> false
   gr(s(x), 0) -> true
   and(true, true) -> true
   gr(s(x), s(y)) -> gr(x, y)

The set Q consists of the following terms:

   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)
   p(0)
   p(s(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(29) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   p(0)
   p(s(x0))


----------------------------------------

(30)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND2(true, x, y) -> COND3(gr(x, 0), x, y)
   COND3(false, x, y) -> COND1(and(gr(x, 0), gr(y, 0)), x, y)
   COND1(true, x, y) -> COND2(gr(x, y), x, y)
   COND2(false, x, y) -> COND4(gr(y, 0), x, y)
   COND4(false, x, y) -> COND1(and(gr(x, 0), gr(y, 0)), x, y)

The TRS R consists of the following rules:

   gr(0, x) -> false
   gr(s(x), 0) -> true
   and(true, true) -> true
   gr(s(x), s(y)) -> gr(x, y)

The set Q consists of the following terms:

   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(31) NonInfProof (EQUIVALENT)
The DP Problem is simplified using the Induction Calculus [NONINF] with the following steps:

Note that final constraints are written in bold face.



For Pair COND2(true, x, y) -> COND3(gr(x, 0), x, y) the following chains were created:
*We consider the chain COND1(true, x4, x5) -> COND2(gr(x4, x5), x4, x5), COND2(true, x6, x7) -> COND3(gr(x6, 0), x6, x7) which results in the following constraint:

(1)    (COND2(gr(x4, x5), x4, x5)=COND2(true, x6, x7)  ==>  COND2(true, x6, x7)_>=_COND3(gr(x6, 0), x6, x7))



We simplified constraint (1) using rules (I), (II), (III) which results in the following new constraint:

(2)    (gr(x4, x5)=true  ==>  COND2(true, x4, x5)_>=_COND3(gr(x4, 0), x4, x5))



We simplified constraint (2) using rule (V) (with possible (I) afterwards) using induction on gr(x4, x5)=true which results in the following new constraints:

(3)    (true=true  ==>  COND2(true, s(x63), 0)_>=_COND3(gr(s(x63), 0), s(x63), 0))

(4)    (gr(x65, x64)=true & (gr(x65, x64)=true  ==>  COND2(true, x65, x64)_>=_COND3(gr(x65, 0), x65, x64))  ==>  COND2(true, s(x65), s(x64))_>=_COND3(gr(s(x65), 0), s(x65), s(x64)))



We simplified constraint (3) using rules (I), (II) which results in the following new constraint:

(5)    (COND2(true, s(x63), 0)_>=_COND3(gr(s(x63), 0), s(x63), 0))



We simplified constraint (4) using rule (VI) where we applied the induction hypothesis (gr(x65, x64)=true  ==>  COND2(true, x65, x64)_>=_COND3(gr(x65, 0), x65, x64)) with sigma = [ ] which results in the following new constraint:

(6)    (COND2(true, x65, x64)_>=_COND3(gr(x65, 0), x65, x64)  ==>  COND2(true, s(x65), s(x64))_>=_COND3(gr(s(x65), 0), s(x65), s(x64)))








For Pair COND3(false, x, y) -> COND1(and(gr(x, 0), gr(y, 0)), x, y) the following chains were created:
*We consider the chain COND2(true, x12, x13) -> COND3(gr(x12, 0), x12, x13), COND3(false, x14, x15) -> COND1(and(gr(x14, 0), gr(x15, 0)), x14, x15) which results in the following constraint:

(1)    (COND3(gr(x12, 0), x12, x13)=COND3(false, x14, x15)  ==>  COND3(false, x14, x15)_>=_COND1(and(gr(x14, 0), gr(x15, 0)), x14, x15))



We simplified constraint (1) using rules (I), (II), (III), (VII) which results in the following new constraint:

(2)    (0=x66 & gr(x12, x66)=false  ==>  COND3(false, x12, x13)_>=_COND1(and(gr(x12, 0), gr(x13, 0)), x12, x13))



We simplified constraint (2) using rule (V) (with possible (I) afterwards) using induction on gr(x12, x66)=false which results in the following new constraints:

(3)    (false=false & 0=x67  ==>  COND3(false, 0, x13)_>=_COND1(and(gr(0, 0), gr(x13, 0)), 0, x13))

(4)    (gr(x70, x69)=false & 0=s(x69) & (\/x71:gr(x70, x69)=false & 0=x69  ==>  COND3(false, x70, x71)_>=_COND1(and(gr(x70, 0), gr(x71, 0)), x70, x71))  ==>  COND3(false, s(x70), x13)_>=_COND1(and(gr(s(x70), 0), gr(x13, 0)), s(x70), x13))



We simplified constraint (3) using rules (I), (II), (IV) which results in the following new constraint:

(5)    (COND3(false, 0, x13)_>=_COND1(and(gr(0, 0), gr(x13, 0)), 0, x13))



We solved constraint (4) using rules (I), (II).




For Pair COND1(true, x, y) -> COND2(gr(x, y), x, y) the following chains were created:
*We consider the chain COND3(false, x26, x27) -> COND1(and(gr(x26, 0), gr(x27, 0)), x26, x27), COND1(true, x28, x29) -> COND2(gr(x28, x29), x28, x29) which results in the following constraint:

(1)    (COND1(and(gr(x26, 0), gr(x27, 0)), x26, x27)=COND1(true, x28, x29)  ==>  COND1(true, x28, x29)_>=_COND2(gr(x28, x29), x28, x29))



We simplified constraint (1) using rules (I), (II), (III), (VII) which results in the following new constraint:

(2)    (0=x74 & gr(x26, x74)=x72 & 0=x75 & gr(x27, x75)=x73 & and(x72, x73)=true  ==>  COND1(true, x26, x27)_>=_COND2(gr(x26, x27), x26, x27))



We simplified constraint (2) using rule (V) (with possible (I) afterwards) using induction on and(x72, x73)=true which results in the following new constraint:

(3)    (true=true & 0=x74 & gr(x26, x74)=true & 0=x75 & gr(x27, x75)=true  ==>  COND1(true, x26, x27)_>=_COND2(gr(x26, x27), x26, x27))



We simplified constraint (3) using rules (I), (II) which results in the following new constraint:

(4)    (0=x74 & gr(x26, x74)=true & 0=x75 & gr(x27, x75)=true  ==>  COND1(true, x26, x27)_>=_COND2(gr(x26, x27), x26, x27))



We simplified constraint (4) using rule (V) (with possible (I) afterwards) using induction on gr(x26, x74)=true which results in the following new constraints:

(5)    (true=true & 0=0 & 0=x75 & gr(x27, x75)=true  ==>  COND1(true, s(x77), x27)_>=_COND2(gr(s(x77), x27), s(x77), x27))

(6)    (gr(x79, x78)=true & 0=s(x78) & 0=x75 & gr(x27, x75)=true & (\/x80,x81:gr(x79, x78)=true & 0=x78 & 0=x80 & gr(x81, x80)=true  ==>  COND1(true, x79, x81)_>=_COND2(gr(x79, x81), x79, x81))  ==>  COND1(true, s(x79), x27)_>=_COND2(gr(s(x79), x27), s(x79), x27))



We simplified constraint (5) using rules (I), (II) which results in the following new constraint:

(7)    (0=x75 & gr(x27, x75)=true  ==>  COND1(true, s(x77), x27)_>=_COND2(gr(s(x77), x27), s(x77), x27))



We solved constraint (6) using rules (I), (II).We simplified constraint (7) using rule (V) (with possible (I) afterwards) using induction on gr(x27, x75)=true which results in the following new constraints:

(8)    (true=true & 0=0  ==>  COND1(true, s(x77), s(x83))_>=_COND2(gr(s(x77), s(x83)), s(x77), s(x83)))

(9)    (gr(x85, x84)=true & 0=s(x84) & (\/x86:gr(x85, x84)=true & 0=x84  ==>  COND1(true, s(x86), x85)_>=_COND2(gr(s(x86), x85), s(x86), x85))  ==>  COND1(true, s(x77), s(x85))_>=_COND2(gr(s(x77), s(x85)), s(x77), s(x85)))



We simplified constraint (8) using rules (I), (II) which results in the following new constraint:

(10)    (COND1(true, s(x77), s(x83))_>=_COND2(gr(s(x77), s(x83)), s(x77), s(x83)))



We solved constraint (9) using rules (I), (II).
*We consider the chain COND4(false, x34, x35) -> COND1(and(gr(x34, 0), gr(x35, 0)), x34, x35), COND1(true, x36, x37) -> COND2(gr(x36, x37), x36, x37) which results in the following constraint:

(1)    (COND1(and(gr(x34, 0), gr(x35, 0)), x34, x35)=COND1(true, x36, x37)  ==>  COND1(true, x36, x37)_>=_COND2(gr(x36, x37), x36, x37))



We simplified constraint (1) using rules (I), (II), (III), (VII) which results in the following new constraint:

(2)    (0=x89 & gr(x34, x89)=x87 & 0=x90 & gr(x35, x90)=x88 & and(x87, x88)=true  ==>  COND1(true, x34, x35)_>=_COND2(gr(x34, x35), x34, x35))



We simplified constraint (2) using rule (V) (with possible (I) afterwards) using induction on and(x87, x88)=true which results in the following new constraint:

(3)    (true=true & 0=x89 & gr(x34, x89)=true & 0=x90 & gr(x35, x90)=true  ==>  COND1(true, x34, x35)_>=_COND2(gr(x34, x35), x34, x35))



We simplified constraint (3) using rules (I), (II) which results in the following new constraint:

(4)    (0=x89 & gr(x34, x89)=true & 0=x90 & gr(x35, x90)=true  ==>  COND1(true, x34, x35)_>=_COND2(gr(x34, x35), x34, x35))



We simplified constraint (4) using rule (V) (with possible (I) afterwards) using induction on gr(x34, x89)=true which results in the following new constraints:

(5)    (true=true & 0=0 & 0=x90 & gr(x35, x90)=true  ==>  COND1(true, s(x92), x35)_>=_COND2(gr(s(x92), x35), s(x92), x35))

(6)    (gr(x94, x93)=true & 0=s(x93) & 0=x90 & gr(x35, x90)=true & (\/x95,x96:gr(x94, x93)=true & 0=x93 & 0=x95 & gr(x96, x95)=true  ==>  COND1(true, x94, x96)_>=_COND2(gr(x94, x96), x94, x96))  ==>  COND1(true, s(x94), x35)_>=_COND2(gr(s(x94), x35), s(x94), x35))



We simplified constraint (5) using rules (I), (II) which results in the following new constraint:

(7)    (0=x90 & gr(x35, x90)=true  ==>  COND1(true, s(x92), x35)_>=_COND2(gr(s(x92), x35), s(x92), x35))



We solved constraint (6) using rules (I), (II).We simplified constraint (7) using rule (V) (with possible (I) afterwards) using induction on gr(x35, x90)=true which results in the following new constraints:

(8)    (true=true & 0=0  ==>  COND1(true, s(x92), s(x98))_>=_COND2(gr(s(x92), s(x98)), s(x92), s(x98)))

(9)    (gr(x100, x99)=true & 0=s(x99) & (\/x101:gr(x100, x99)=true & 0=x99  ==>  COND1(true, s(x101), x100)_>=_COND2(gr(s(x101), x100), s(x101), x100))  ==>  COND1(true, s(x92), s(x100))_>=_COND2(gr(s(x92), s(x100)), s(x92), s(x100)))



We simplified constraint (8) using rules (I), (II) which results in the following new constraint:

(10)    (COND1(true, s(x92), s(x98))_>=_COND2(gr(s(x92), s(x98)), s(x92), s(x98)))



We solved constraint (9) using rules (I), (II).




For Pair COND2(false, x, y) -> COND4(gr(y, 0), x, y) the following chains were created:
*We consider the chain COND1(true, x42, x43) -> COND2(gr(x42, x43), x42, x43), COND2(false, x44, x45) -> COND4(gr(x45, 0), x44, x45) which results in the following constraint:

(1)    (COND2(gr(x42, x43), x42, x43)=COND2(false, x44, x45)  ==>  COND2(false, x44, x45)_>=_COND4(gr(x45, 0), x44, x45))



We simplified constraint (1) using rules (I), (II), (III) which results in the following new constraint:

(2)    (gr(x42, x43)=false  ==>  COND2(false, x42, x43)_>=_COND4(gr(x43, 0), x42, x43))



We simplified constraint (2) using rule (V) (with possible (I) afterwards) using induction on gr(x42, x43)=false which results in the following new constraints:

(3)    (false=false  ==>  COND2(false, 0, x102)_>=_COND4(gr(x102, 0), 0, x102))

(4)    (gr(x105, x104)=false & (gr(x105, x104)=false  ==>  COND2(false, x105, x104)_>=_COND4(gr(x104, 0), x105, x104))  ==>  COND2(false, s(x105), s(x104))_>=_COND4(gr(s(x104), 0), s(x105), s(x104)))



We simplified constraint (3) using rules (I), (II) which results in the following new constraint:

(5)    (COND2(false, 0, x102)_>=_COND4(gr(x102, 0), 0, x102))



We simplified constraint (4) using rule (VI) where we applied the induction hypothesis (gr(x105, x104)=false  ==>  COND2(false, x105, x104)_>=_COND4(gr(x104, 0), x105, x104)) with sigma = [ ] which results in the following new constraint:

(6)    (COND2(false, x105, x104)_>=_COND4(gr(x104, 0), x105, x104)  ==>  COND2(false, s(x105), s(x104))_>=_COND4(gr(s(x104), 0), s(x105), s(x104)))








For Pair COND4(false, x, y) -> COND1(and(gr(x, 0), gr(y, 0)), x, y) the following chains were created:
*We consider the chain COND2(false, x56, x57) -> COND4(gr(x57, 0), x56, x57), COND4(false, x58, x59) -> COND1(and(gr(x58, 0), gr(x59, 0)), x58, x59) which results in the following constraint:

(1)    (COND4(gr(x57, 0), x56, x57)=COND4(false, x58, x59)  ==>  COND4(false, x58, x59)_>=_COND1(and(gr(x58, 0), gr(x59, 0)), x58, x59))



We simplified constraint (1) using rules (I), (II), (III), (VII) which results in the following new constraint:

(2)    (0=x106 & gr(x57, x106)=false  ==>  COND4(false, x56, x57)_>=_COND1(and(gr(x56, 0), gr(x57, 0)), x56, x57))



We simplified constraint (2) using rule (V) (with possible (I) afterwards) using induction on gr(x57, x106)=false which results in the following new constraints:

(3)    (false=false & 0=x107  ==>  COND4(false, x56, 0)_>=_COND1(and(gr(x56, 0), gr(0, 0)), x56, 0))

(4)    (gr(x110, x109)=false & 0=s(x109) & (\/x111:gr(x110, x109)=false & 0=x109  ==>  COND4(false, x111, x110)_>=_COND1(and(gr(x111, 0), gr(x110, 0)), x111, x110))  ==>  COND4(false, x56, s(x110))_>=_COND1(and(gr(x56, 0), gr(s(x110), 0)), x56, s(x110)))



We simplified constraint (3) using rules (I), (II), (IV) which results in the following new constraint:

(5)    (COND4(false, x56, 0)_>=_COND1(and(gr(x56, 0), gr(0, 0)), x56, 0))



We solved constraint (4) using rules (I), (II).




To summarize, we get the following constraints P__>=_ for the following pairs.

*COND2(true, x, y) -> COND3(gr(x, 0), x, y)

*(COND2(true, s(x63), 0)_>=_COND3(gr(s(x63), 0), s(x63), 0))


*(COND2(true, x65, x64)_>=_COND3(gr(x65, 0), x65, x64)  ==>  COND2(true, s(x65), s(x64))_>=_COND3(gr(s(x65), 0), s(x65), s(x64)))




*COND3(false, x, y) -> COND1(and(gr(x, 0), gr(y, 0)), x, y)

*(COND3(false, 0, x13)_>=_COND1(and(gr(0, 0), gr(x13, 0)), 0, x13))




*COND1(true, x, y) -> COND2(gr(x, y), x, y)

*(COND1(true, s(x77), s(x83))_>=_COND2(gr(s(x77), s(x83)), s(x77), s(x83)))


*(COND1(true, s(x92), s(x98))_>=_COND2(gr(s(x92), s(x98)), s(x92), s(x98)))




*COND2(false, x, y) -> COND4(gr(y, 0), x, y)

*(COND2(false, 0, x102)_>=_COND4(gr(x102, 0), 0, x102))


*(COND2(false, x105, x104)_>=_COND4(gr(x104, 0), x105, x104)  ==>  COND2(false, s(x105), s(x104))_>=_COND4(gr(s(x104), 0), s(x105), s(x104)))




*COND4(false, x, y) -> COND1(and(gr(x, 0), gr(y, 0)), x, y)

*(COND4(false, x56, 0)_>=_COND1(and(gr(x56, 0), gr(0, 0)), x56, 0))








The constraints for P_> respective P_bound are constructed from P__>=_ where we just replace every occurence of "t _>=_ s" in P__>=_ by  "t > s" respective "t _>=_ c". Here c stands for the fresh constant used for P_bound. 

Using the following integer polynomial ordering the  resulting constraints can be solved 

Polynomial interpretation [NONINF]:

   POL(0) = 0
   POL(COND1(x_1, x_2, x_3)) = -1 - x_1 - x_3
   POL(COND2(x_1, x_2, x_3)) = -1 + x_1 - x_3
   POL(COND3(x_1, x_2, x_3)) = -1 - x_2 - x_3
   POL(COND4(x_1, x_2, x_3)) = -1 + x_1 - x_3
   POL(and(x_1, x_2)) = 0
   POL(c) = -2
   POL(false) = 0
   POL(gr(x_1, x_2)) = 0
   POL(s(x_1)) = 1 + x_1
   POL(true) = 0


The following pairs  are in P_>:
   COND2(true, x, y) -> COND3(gr(x, 0), x, y)
The following pairs are in P_bound:
   COND4(false, x, y) -> COND1(and(gr(x, 0), gr(y, 0)), x, y)
The following rules are usable:
   gr(0, x) -> false
   gr(s(x), 0) -> true
   true -> and(true, true)
   gr(s(x), s(y)) -> gr(x, y)

----------------------------------------

(32)
Complex Obligation (AND)

----------------------------------------

(33)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND3(false, x, y) -> COND1(and(gr(x, 0), gr(y, 0)), x, y)
   COND1(true, x, y) -> COND2(gr(x, y), x, y)
   COND2(false, x, y) -> COND4(gr(y, 0), x, y)
   COND4(false, x, y) -> COND1(and(gr(x, 0), gr(y, 0)), x, y)

The TRS R consists of the following rules:

   gr(0, x) -> false
   gr(s(x), 0) -> true
   and(true, true) -> true
   gr(s(x), s(y)) -> gr(x, y)

The set Q consists of the following terms:

   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(34) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(35)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND2(false, x, y) -> COND4(gr(y, 0), x, y)
   COND4(false, x, y) -> COND1(and(gr(x, 0), gr(y, 0)), x, y)
   COND1(true, x, y) -> COND2(gr(x, y), x, y)

The TRS R consists of the following rules:

   gr(0, x) -> false
   gr(s(x), 0) -> true
   and(true, true) -> true
   gr(s(x), s(y)) -> gr(x, y)

The set Q consists of the following terms:

   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(36) NonInfProof (EQUIVALENT)
The DP Problem is simplified using the Induction Calculus [NONINF] with the following steps:

Note that final constraints are written in bold face.



For Pair COND1(true, x, y) -> COND2(gr(x, y), x, y) the following chains were created:
*We consider the chain COND4(false, x34, x35) -> COND1(and(gr(x34, 0), gr(x35, 0)), x34, x35), COND1(true, x36, x37) -> COND2(gr(x36, x37), x36, x37) which results in the following constraint:

(1)    (COND1(and(gr(x34, 0), gr(x35, 0)), x34, x35)=COND1(true, x36, x37)  ==>  COND1(true, x36, x37)_>=_COND2(gr(x36, x37), x36, x37))



We simplified constraint (1) using rules (I), (II), (III), (VII) which results in the following new constraint:

(2)    (0=x89 & gr(x34, x89)=x87 & 0=x90 & gr(x35, x90)=x88 & and(x87, x88)=true  ==>  COND1(true, x34, x35)_>=_COND2(gr(x34, x35), x34, x35))



We simplified constraint (2) using rule (V) (with possible (I) afterwards) using induction on and(x87, x88)=true which results in the following new constraint:

(3)    (true=true & 0=x89 & gr(x34, x89)=true & 0=x90 & gr(x35, x90)=true  ==>  COND1(true, x34, x35)_>=_COND2(gr(x34, x35), x34, x35))



We simplified constraint (3) using rules (I), (II) which results in the following new constraint:

(4)    (0=x89 & gr(x34, x89)=true & 0=x90 & gr(x35, x90)=true  ==>  COND1(true, x34, x35)_>=_COND2(gr(x34, x35), x34, x35))



We simplified constraint (4) using rule (V) (with possible (I) afterwards) using induction on gr(x34, x89)=true which results in the following new constraints:

(5)    (true=true & 0=0 & 0=x90 & gr(x35, x90)=true  ==>  COND1(true, s(x92), x35)_>=_COND2(gr(s(x92), x35), s(x92), x35))

(6)    (gr(x94, x93)=true & 0=s(x93) & 0=x90 & gr(x35, x90)=true & (\/x95,x96:gr(x94, x93)=true & 0=x93 & 0=x95 & gr(x96, x95)=true  ==>  COND1(true, x94, x96)_>=_COND2(gr(x94, x96), x94, x96))  ==>  COND1(true, s(x94), x35)_>=_COND2(gr(s(x94), x35), s(x94), x35))



We simplified constraint (5) using rules (I), (II) which results in the following new constraint:

(7)    (0=x90 & gr(x35, x90)=true  ==>  COND1(true, s(x92), x35)_>=_COND2(gr(s(x92), x35), s(x92), x35))



We solved constraint (6) using rules (I), (II).We simplified constraint (7) using rule (V) (with possible (I) afterwards) using induction on gr(x35, x90)=true which results in the following new constraints:

(8)    (true=true & 0=0  ==>  COND1(true, s(x92), s(x98))_>=_COND2(gr(s(x92), s(x98)), s(x92), s(x98)))

(9)    (gr(x100, x99)=true & 0=s(x99) & (\/x101:gr(x100, x99)=true & 0=x99  ==>  COND1(true, s(x101), x100)_>=_COND2(gr(s(x101), x100), s(x101), x100))  ==>  COND1(true, s(x92), s(x100))_>=_COND2(gr(s(x92), s(x100)), s(x92), s(x100)))



We simplified constraint (8) using rules (I), (II) which results in the following new constraint:

(10)    (COND1(true, s(x92), s(x98))_>=_COND2(gr(s(x92), s(x98)), s(x92), s(x98)))



We solved constraint (9) using rules (I), (II).




For Pair COND2(false, x, y) -> COND4(gr(y, 0), x, y) the following chains were created:
*We consider the chain COND1(true, x42, x43) -> COND2(gr(x42, x43), x42, x43), COND2(false, x44, x45) -> COND4(gr(x45, 0), x44, x45) which results in the following constraint:

(1)    (COND2(gr(x42, x43), x42, x43)=COND2(false, x44, x45)  ==>  COND2(false, x44, x45)_>=_COND4(gr(x45, 0), x44, x45))



We simplified constraint (1) using rules (I), (II), (III) which results in the following new constraint:

(2)    (gr(x42, x43)=false  ==>  COND2(false, x42, x43)_>=_COND4(gr(x43, 0), x42, x43))



We simplified constraint (2) using rule (V) (with possible (I) afterwards) using induction on gr(x42, x43)=false which results in the following new constraints:

(3)    (false=false  ==>  COND2(false, 0, x102)_>=_COND4(gr(x102, 0), 0, x102))

(4)    (gr(x105, x104)=false & (gr(x105, x104)=false  ==>  COND2(false, x105, x104)_>=_COND4(gr(x104, 0), x105, x104))  ==>  COND2(false, s(x105), s(x104))_>=_COND4(gr(s(x104), 0), s(x105), s(x104)))



We simplified constraint (3) using rules (I), (II) which results in the following new constraint:

(5)    (COND2(false, 0, x102)_>=_COND4(gr(x102, 0), 0, x102))



We simplified constraint (4) using rule (VI) where we applied the induction hypothesis (gr(x105, x104)=false  ==>  COND2(false, x105, x104)_>=_COND4(gr(x104, 0), x105, x104)) with sigma = [ ] which results in the following new constraint:

(6)    (COND2(false, x105, x104)_>=_COND4(gr(x104, 0), x105, x104)  ==>  COND2(false, s(x105), s(x104))_>=_COND4(gr(s(x104), 0), s(x105), s(x104)))








For Pair COND4(false, x, y) -> COND1(and(gr(x, 0), gr(y, 0)), x, y) the following chains were created:
*We consider the chain COND2(false, x56, x57) -> COND4(gr(x57, 0), x56, x57), COND4(false, x58, x59) -> COND1(and(gr(x58, 0), gr(x59, 0)), x58, x59) which results in the following constraint:

(1)    (COND4(gr(x57, 0), x56, x57)=COND4(false, x58, x59)  ==>  COND4(false, x58, x59)_>=_COND1(and(gr(x58, 0), gr(x59, 0)), x58, x59))



We simplified constraint (1) using rules (I), (II), (III), (VII) which results in the following new constraint:

(2)    (0=x106 & gr(x57, x106)=false  ==>  COND4(false, x56, x57)_>=_COND1(and(gr(x56, 0), gr(x57, 0)), x56, x57))



We simplified constraint (2) using rule (V) (with possible (I) afterwards) using induction on gr(x57, x106)=false which results in the following new constraints:

(3)    (false=false & 0=x107  ==>  COND4(false, x56, 0)_>=_COND1(and(gr(x56, 0), gr(0, 0)), x56, 0))

(4)    (gr(x110, x109)=false & 0=s(x109) & (\/x111:gr(x110, x109)=false & 0=x109  ==>  COND4(false, x111, x110)_>=_COND1(and(gr(x111, 0), gr(x110, 0)), x111, x110))  ==>  COND4(false, x56, s(x110))_>=_COND1(and(gr(x56, 0), gr(s(x110), 0)), x56, s(x110)))



We simplified constraint (3) using rules (I), (II), (IV) which results in the following new constraint:

(5)    (COND4(false, x56, 0)_>=_COND1(and(gr(x56, 0), gr(0, 0)), x56, 0))



We solved constraint (4) using rules (I), (II).




To summarize, we get the following constraints P__>=_ for the following pairs.

*COND1(true, x, y) -> COND2(gr(x, y), x, y)

*(COND1(true, s(x92), s(x98))_>=_COND2(gr(s(x92), s(x98)), s(x92), s(x98)))




*COND2(false, x, y) -> COND4(gr(y, 0), x, y)

*(COND2(false, 0, x102)_>=_COND4(gr(x102, 0), 0, x102))


*(COND2(false, x105, x104)_>=_COND4(gr(x104, 0), x105, x104)  ==>  COND2(false, s(x105), s(x104))_>=_COND4(gr(s(x104), 0), s(x105), s(x104)))




*COND4(false, x, y) -> COND1(and(gr(x, 0), gr(y, 0)), x, y)

*(COND4(false, x56, 0)_>=_COND1(and(gr(x56, 0), gr(0, 0)), x56, 0))








The constraints for P_> respective P_bound are constructed from P__>=_ where we just replace every occurence of "t _>=_ s" in P__>=_ by  "t > s" respective "t _>=_ c". Here c stands for the fresh constant used for P_bound. 

Using the following integer polynomial ordering the  resulting constraints can be solved 

Polynomial interpretation [NONINF]:

   POL(0) = 1
   POL(COND1(x_1, x_2, x_3)) = -1 - x_1 - x_2 - x_3
   POL(COND2(x_1, x_2, x_3)) = -1 - x_1 - x_2
   POL(COND4(x_1, x_2, x_3)) = -1 - x_1 - x_2
   POL(and(x_1, x_2)) = 0
   POL(c) = -2
   POL(false) = 0
   POL(gr(x_1, x_2)) = 0
   POL(s(x_1)) = 0
   POL(true) = 0


The following pairs  are in P_>:
   COND4(false, x, y) -> COND1(and(gr(x, 0), gr(y, 0)), x, y)
The following pairs are in P_bound:
   COND2(false, x, y) -> COND4(gr(y, 0), x, y)
   COND1(true, x, y) -> COND2(gr(x, y), x, y)
The following rules are usable:
   false -> gr(0, x)
   true -> gr(s(x), 0)
   true -> and(true, true)
   gr(x, y) -> gr(s(x), s(y))

----------------------------------------

(37)
Complex Obligation (AND)

----------------------------------------

(38)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND2(false, x, y) -> COND4(gr(y, 0), x, y)
   COND1(true, x, y) -> COND2(gr(x, y), x, y)

The TRS R consists of the following rules:

   gr(0, x) -> false
   gr(s(x), 0) -> true
   and(true, true) -> true
   gr(s(x), s(y)) -> gr(x, y)

The set Q consists of the following terms:

   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(39) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 2 less nodes.
----------------------------------------

(40)
TRUE

----------------------------------------

(41)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND4(false, x, y) -> COND1(and(gr(x, 0), gr(y, 0)), x, y)

The TRS R consists of the following rules:

   gr(0, x) -> false
   gr(s(x), 0) -> true
   and(true, true) -> true
   gr(s(x), s(y)) -> gr(x, y)

The set Q consists of the following terms:

   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(42) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 1 less node.
----------------------------------------

(43)
TRUE

----------------------------------------

(44)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND2(true, x, y) -> COND3(gr(x, 0), x, y)
   COND3(false, x, y) -> COND1(and(gr(x, 0), gr(y, 0)), x, y)
   COND1(true, x, y) -> COND2(gr(x, y), x, y)
   COND2(false, x, y) -> COND4(gr(y, 0), x, y)

The TRS R consists of the following rules:

   gr(0, x) -> false
   gr(s(x), 0) -> true
   and(true, true) -> true
   gr(s(x), s(y)) -> gr(x, y)

The set Q consists of the following terms:

   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(45) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(46)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND3(false, x, y) -> COND1(and(gr(x, 0), gr(y, 0)), x, y)
   COND1(true, x, y) -> COND2(gr(x, y), x, y)
   COND2(true, x, y) -> COND3(gr(x, 0), x, y)

The TRS R consists of the following rules:

   gr(0, x) -> false
   gr(s(x), 0) -> true
   and(true, true) -> true
   gr(s(x), s(y)) -> gr(x, y)

The set Q consists of the following terms:

   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(47) NonInfProof (EQUIVALENT)
The DP Problem is simplified using the Induction Calculus [NONINF] with the following steps:

Note that final constraints are written in bold face.



For Pair COND2(true, x, y) -> COND3(gr(x, 0), x, y) the following chains were created:
*We consider the chain COND1(true, x4, x5) -> COND2(gr(x4, x5), x4, x5), COND2(true, x6, x7) -> COND3(gr(x6, 0), x6, x7) which results in the following constraint:

(1)    (COND2(gr(x4, x5), x4, x5)=COND2(true, x6, x7)  ==>  COND2(true, x6, x7)_>=_COND3(gr(x6, 0), x6, x7))



We simplified constraint (1) using rules (I), (II), (III) which results in the following new constraint:

(2)    (gr(x4, x5)=true  ==>  COND2(true, x4, x5)_>=_COND3(gr(x4, 0), x4, x5))



We simplified constraint (2) using rule (V) (with possible (I) afterwards) using induction on gr(x4, x5)=true which results in the following new constraints:

(3)    (true=true  ==>  COND2(true, s(x63), 0)_>=_COND3(gr(s(x63), 0), s(x63), 0))

(4)    (gr(x65, x64)=true & (gr(x65, x64)=true  ==>  COND2(true, x65, x64)_>=_COND3(gr(x65, 0), x65, x64))  ==>  COND2(true, s(x65), s(x64))_>=_COND3(gr(s(x65), 0), s(x65), s(x64)))



We simplified constraint (3) using rules (I), (II) which results in the following new constraint:

(5)    (COND2(true, s(x63), 0)_>=_COND3(gr(s(x63), 0), s(x63), 0))



We simplified constraint (4) using rule (VI) where we applied the induction hypothesis (gr(x65, x64)=true  ==>  COND2(true, x65, x64)_>=_COND3(gr(x65, 0), x65, x64)) with sigma = [ ] which results in the following new constraint:

(6)    (COND2(true, x65, x64)_>=_COND3(gr(x65, 0), x65, x64)  ==>  COND2(true, s(x65), s(x64))_>=_COND3(gr(s(x65), 0), s(x65), s(x64)))








For Pair COND3(false, x, y) -> COND1(and(gr(x, 0), gr(y, 0)), x, y) the following chains were created:
*We consider the chain COND2(true, x12, x13) -> COND3(gr(x12, 0), x12, x13), COND3(false, x14, x15) -> COND1(and(gr(x14, 0), gr(x15, 0)), x14, x15) which results in the following constraint:

(1)    (COND3(gr(x12, 0), x12, x13)=COND3(false, x14, x15)  ==>  COND3(false, x14, x15)_>=_COND1(and(gr(x14, 0), gr(x15, 0)), x14, x15))



We simplified constraint (1) using rules (I), (II), (III), (VII) which results in the following new constraint:

(2)    (0=x66 & gr(x12, x66)=false  ==>  COND3(false, x12, x13)_>=_COND1(and(gr(x12, 0), gr(x13, 0)), x12, x13))



We simplified constraint (2) using rule (V) (with possible (I) afterwards) using induction on gr(x12, x66)=false which results in the following new constraints:

(3)    (false=false & 0=x67  ==>  COND3(false, 0, x13)_>=_COND1(and(gr(0, 0), gr(x13, 0)), 0, x13))

(4)    (gr(x70, x69)=false & 0=s(x69) & (\/x71:gr(x70, x69)=false & 0=x69  ==>  COND3(false, x70, x71)_>=_COND1(and(gr(x70, 0), gr(x71, 0)), x70, x71))  ==>  COND3(false, s(x70), x13)_>=_COND1(and(gr(s(x70), 0), gr(x13, 0)), s(x70), x13))



We simplified constraint (3) using rules (I), (II), (IV) which results in the following new constraint:

(5)    (COND3(false, 0, x13)_>=_COND1(and(gr(0, 0), gr(x13, 0)), 0, x13))



We solved constraint (4) using rules (I), (II).




For Pair COND1(true, x, y) -> COND2(gr(x, y), x, y) the following chains were created:
*We consider the chain COND3(false, x26, x27) -> COND1(and(gr(x26, 0), gr(x27, 0)), x26, x27), COND1(true, x28, x29) -> COND2(gr(x28, x29), x28, x29) which results in the following constraint:

(1)    (COND1(and(gr(x26, 0), gr(x27, 0)), x26, x27)=COND1(true, x28, x29)  ==>  COND1(true, x28, x29)_>=_COND2(gr(x28, x29), x28, x29))



We simplified constraint (1) using rules (I), (II), (III), (VII) which results in the following new constraint:

(2)    (0=x74 & gr(x26, x74)=x72 & 0=x75 & gr(x27, x75)=x73 & and(x72, x73)=true  ==>  COND1(true, x26, x27)_>=_COND2(gr(x26, x27), x26, x27))



We simplified constraint (2) using rule (V) (with possible (I) afterwards) using induction on and(x72, x73)=true which results in the following new constraint:

(3)    (true=true & 0=x74 & gr(x26, x74)=true & 0=x75 & gr(x27, x75)=true  ==>  COND1(true, x26, x27)_>=_COND2(gr(x26, x27), x26, x27))



We simplified constraint (3) using rules (I), (II) which results in the following new constraint:

(4)    (0=x74 & gr(x26, x74)=true & 0=x75 & gr(x27, x75)=true  ==>  COND1(true, x26, x27)_>=_COND2(gr(x26, x27), x26, x27))



We simplified constraint (4) using rule (V) (with possible (I) afterwards) using induction on gr(x26, x74)=true which results in the following new constraints:

(5)    (true=true & 0=0 & 0=x75 & gr(x27, x75)=true  ==>  COND1(true, s(x77), x27)_>=_COND2(gr(s(x77), x27), s(x77), x27))

(6)    (gr(x79, x78)=true & 0=s(x78) & 0=x75 & gr(x27, x75)=true & (\/x80,x81:gr(x79, x78)=true & 0=x78 & 0=x80 & gr(x81, x80)=true  ==>  COND1(true, x79, x81)_>=_COND2(gr(x79, x81), x79, x81))  ==>  COND1(true, s(x79), x27)_>=_COND2(gr(s(x79), x27), s(x79), x27))



We simplified constraint (5) using rules (I), (II) which results in the following new constraint:

(7)    (0=x75 & gr(x27, x75)=true  ==>  COND1(true, s(x77), x27)_>=_COND2(gr(s(x77), x27), s(x77), x27))



We solved constraint (6) using rules (I), (II).We simplified constraint (7) using rule (V) (with possible (I) afterwards) using induction on gr(x27, x75)=true which results in the following new constraints:

(8)    (true=true & 0=0  ==>  COND1(true, s(x77), s(x83))_>=_COND2(gr(s(x77), s(x83)), s(x77), s(x83)))

(9)    (gr(x85, x84)=true & 0=s(x84) & (\/x86:gr(x85, x84)=true & 0=x84  ==>  COND1(true, s(x86), x85)_>=_COND2(gr(s(x86), x85), s(x86), x85))  ==>  COND1(true, s(x77), s(x85))_>=_COND2(gr(s(x77), s(x85)), s(x77), s(x85)))



We simplified constraint (8) using rules (I), (II) which results in the following new constraint:

(10)    (COND1(true, s(x77), s(x83))_>=_COND2(gr(s(x77), s(x83)), s(x77), s(x83)))



We solved constraint (9) using rules (I), (II).




To summarize, we get the following constraints P__>=_ for the following pairs.

*COND2(true, x, y) -> COND3(gr(x, 0), x, y)

*(COND2(true, s(x63), 0)_>=_COND3(gr(s(x63), 0), s(x63), 0))


*(COND2(true, x65, x64)_>=_COND3(gr(x65, 0), x65, x64)  ==>  COND2(true, s(x65), s(x64))_>=_COND3(gr(s(x65), 0), s(x65), s(x64)))




*COND3(false, x, y) -> COND1(and(gr(x, 0), gr(y, 0)), x, y)

*(COND3(false, 0, x13)_>=_COND1(and(gr(0, 0), gr(x13, 0)), 0, x13))




*COND1(true, x, y) -> COND2(gr(x, y), x, y)

*(COND1(true, s(x77), s(x83))_>=_COND2(gr(s(x77), s(x83)), s(x77), s(x83)))








The constraints for P_> respective P_bound are constructed from P__>=_ where we just replace every occurence of "t _>=_ s" in P__>=_ by  "t > s" respective "t _>=_ c". Here c stands for the fresh constant used for P_bound. 

Using the following integer polynomial ordering the  resulting constraints can be solved 

Polynomial interpretation [NONINF]:

   POL(0) = 0
   POL(COND1(x_1, x_2, x_3)) = -1 - x_1 - x_3
   POL(COND2(x_1, x_2, x_3)) = -1 - x_2 - x_3
   POL(COND3(x_1, x_2, x_3)) = -1 - x_2 - x_3
   POL(and(x_1, x_2)) = 0
   POL(c) = -2
   POL(false) = 0
   POL(gr(x_1, x_2)) = 0
   POL(s(x_1)) = 1
   POL(true) = 0


The following pairs  are in P_>:
   COND1(true, x, y) -> COND2(gr(x, y), x, y)
The following pairs are in P_bound:
   COND1(true, x, y) -> COND2(gr(x, y), x, y)
The following rules are usable:
   true -> and(true, true)

----------------------------------------

(48)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COND3(false, x, y) -> COND1(and(gr(x, 0), gr(y, 0)), x, y)
   COND2(true, x, y) -> COND3(gr(x, 0), x, y)

The TRS R consists of the following rules:

   gr(0, x) -> false
   gr(s(x), 0) -> true
   and(true, true) -> true
   gr(s(x), s(y)) -> gr(x, y)

The set Q consists of the following terms:

   gr(0, x0)
   gr(s(x0), 0)
   gr(s(x0), s(x1))
   and(true, true)
   and(false, x0)
   and(x0, false)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(49) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 2 less nodes.
----------------------------------------

(50)
TRUE
