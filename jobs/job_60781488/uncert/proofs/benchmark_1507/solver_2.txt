YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/aSjJR.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 0 ms]
(2) QDP
(3) UsableRulesReductionPairsProof [EQUIVALENT, 0 ms]
(4) QDP
(5) MRRProof [EQUIVALENT, 0 ms]
(6) QDP
(7) DependencyGraphProof [EQUIVALENT, 0 ms]
(8) AND
    (9) QDP
        (10) UsableRulesProof [EQUIVALENT, 0 ms]
        (11) QDP
        (12) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (13) YES
    (14) QDP
        (15) UsableRulesProof [EQUIVALENT, 0 ms]
        (16) QDP
        (17) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (18) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(a, f(b, x)) -> f(b, f(a, x))
   f(b, f(c, x)) -> f(c, f(b, x))
   f(c, f(a, x)) -> f(a, f(c, x))

Q is empty.

----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(a, f(b, x)) -> F(b, f(a, x))
   F(a, f(b, x)) -> F(a, x)
   F(b, f(c, x)) -> F(c, f(b, x))
   F(b, f(c, x)) -> F(b, x)
   F(c, f(a, x)) -> F(a, f(c, x))
   F(c, f(a, x)) -> F(c, x)

The TRS R consists of the following rules:

   f(a, f(b, x)) -> f(b, f(a, x))
   f(b, f(c, x)) -> f(c, f(b, x))
   f(c, f(a, x)) -> f(a, f(c, x))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) UsableRulesReductionPairsProof (EQUIVALENT)
First, we A-transformed [FROCOS05] the QDP-Problem.
Then we obtain the following A-transformed DP problem.

The pairs P are: 

   a1(b(x)) -> b1(a(x))
   a1(b(x)) -> a1(x)
   b1(c(x)) -> c1(b(x))
   b1(c(x)) -> b1(x)
   c1(a(x)) -> a1(c(x))
   c1(a(x)) -> c1(x)

and the Q and R are:
Q restricted rewrite system:
The TRS R consists of the following rules:

   b(c(x)) -> c(b(x))
   c(a(x)) -> a(c(x))
   a(b(x)) -> b(a(x))

Q is empty.

By using the usable rules with reduction pair processor [LPAR04] with a polynomial ordering [POLO], all dependency pairs and the corresponding usable rules [FROCOS05] can be oriented non-strictly. All non-usable rules are removed, and those dependency pairs and usable rules that have been oriented strictly or contain non-usable symbols in their left-hand side are removed as well.

No dependency pairs are removed.

The following rules are removed from R:

   f(a, f(b, x)) -> f(b, f(a, x))
   f(b, f(c, x)) -> f(c, f(b, x))
   f(c, f(a, x)) -> f(a, f(c, x))
Used ordering: POLO with Polynomial interpretation [POLO]:

   POL(a(x_1)) = 2*x_1
   POL(a1(x_1)) = 2*x_1
   POL(b(x_1)) = x_1
   POL(b1(x_1)) = x_1
   POL(c(x_1)) = 2*x_1
   POL(c1(x_1)) = 2*x_1


----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   a1(b(x)) -> b1(a(x))
   a1(b(x)) -> a1(x)
   b1(c(x)) -> c1(b(x))
   b1(c(x)) -> b1(x)
   c1(a(x)) -> a1(c(x))
   c1(a(x)) -> c1(x)

The TRS R consists of the following rules:

   b(c(x)) -> c(b(x))
   c(a(x)) -> a(c(x))
   a(b(x)) -> b(a(x))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) MRRProof (EQUIVALENT)
By using the rule removal processor [LPAR04] with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented.

Strictly oriented dependency pairs:

   b1(c(x)) -> b1(x)
   c1(a(x)) -> a1(c(x))

Strictly oriented rules of the TRS R:

   b(c(x)) -> c(b(x))

Used ordering: Polynomial interpretation [POLO]:

   POL(a(x_1)) = x_1
   POL(a1(x_1)) = x_1
   POL(b(x_1)) = 2*x_1
   POL(b1(x_1)) = 2*x_1
   POL(c(x_1)) = 1 + 2*x_1
   POL(c1(x_1)) = 2 + 2*x_1


----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   a1(b(x)) -> b1(a(x))
   a1(b(x)) -> a1(x)
   b1(c(x)) -> c1(b(x))
   c1(a(x)) -> c1(x)

The TRS R consists of the following rules:

   c(a(x)) -> a(c(x))
   a(b(x)) -> b(a(x))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs with 2 less nodes.
----------------------------------------

(8)
Complex Obligation (AND)

----------------------------------------

(9)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   c1(a(x)) -> c1(x)

The TRS R consists of the following rules:

   c(a(x)) -> a(c(x))
   a(b(x)) -> b(a(x))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(10) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   c1(a(x)) -> c1(x)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(12) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*c1(a(x)) -> c1(x)
The graph contains the following edges 1 > 1


----------------------------------------

(13)
YES

----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   a1(b(x)) -> a1(x)

The TRS R consists of the following rules:

   c(a(x)) -> a(c(x))
   a(b(x)) -> b(a(x))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   a1(b(x)) -> a1(x)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*a1(b(x)) -> a1(x)
The graph contains the following edges 1 > 1


----------------------------------------

(18)
YES
