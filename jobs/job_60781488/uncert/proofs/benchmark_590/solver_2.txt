YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/Pz2jH.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 0 ms]
(2) QDP
(3) DependencyGraphProof [EQUIVALENT, 0 ms]
(4) QDP
(5) UsableRulesProof [EQUIVALENT, 0 ms]
(6) QDP
(7) TransformationProof [EQUIVALENT, 0 ms]
(8) QDP
(9) TransformationProof [EQUIVALENT, 0 ms]
(10) QDP
(11) DependencyGraphProof [EQUIVALENT, 0 ms]
(12) TRUE


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(f(y, z), f(x, f(a, x))) -> f(f(f(a, z), f(x, a)), f(a, y))

Q is empty.

----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(f(y, z), f(x, f(a, x))) -> F(f(f(a, z), f(x, a)), f(a, y))
   F(f(y, z), f(x, f(a, x))) -> F(f(a, z), f(x, a))
   F(f(y, z), f(x, f(a, x))) -> F(a, z)
   F(f(y, z), f(x, f(a, x))) -> F(x, a)
   F(f(y, z), f(x, f(a, x))) -> F(a, y)

The TRS R consists of the following rules:

   f(f(y, z), f(x, f(a, x))) -> f(f(f(a, z), f(x, a)), f(a, y))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 4 less nodes.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(f(y, z), f(x, f(a, x))) -> F(f(f(a, z), f(x, a)), f(a, y))

The TRS R consists of the following rules:

   f(f(y, z), f(x, f(a, x))) -> f(f(f(a, z), f(x, a)), f(a, y))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(f(y, z), f(x, f(a, x))) -> F(f(f(a, z), f(x, a)), f(a, y))

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule F(f(y, z), f(x, f(a, x))) -> F(f(f(a, z), f(x, a)), f(a, y)) we obtained the following new rules [LPAR04]:

   (F(f(f(a, z1), f(z2, a)), f(a, f(a, a))) -> F(f(f(a, f(z2, a)), f(a, a)), f(a, f(a, z1))),F(f(f(a, z1), f(z2, a)), f(a, f(a, a))) -> F(f(f(a, f(z2, a)), f(a, a)), f(a, f(a, z1))))


----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(f(f(a, z1), f(z2, a)), f(a, f(a, a))) -> F(f(f(a, f(z2, a)), f(a, a)), f(a, f(a, z1)))

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule F(f(f(a, z1), f(z2, a)), f(a, f(a, a))) -> F(f(f(a, f(z2, a)), f(a, a)), f(a, f(a, z1))) we obtained the following new rules [LPAR04]:

   (F(f(f(a, f(z1, a)), f(a, a)), f(a, f(a, a))) -> F(f(f(a, f(a, a)), f(a, a)), f(a, f(a, f(z1, a)))),F(f(f(a, f(z1, a)), f(a, a)), f(a, f(a, a))) -> F(f(f(a, f(a, a)), f(a, a)), f(a, f(a, f(z1, a)))))


----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(f(f(a, f(z1, a)), f(a, a)), f(a, f(a, a))) -> F(f(f(a, f(a, a)), f(a, a)), f(a, f(a, f(z1, a))))

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 1 less node.
----------------------------------------

(12)
TRUE
