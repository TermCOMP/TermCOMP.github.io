YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/0POuq.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) Overlay + Local Confluence [EQUIVALENT, 0 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 0 ms]
(4) QDP
(5) DependencyGraphProof [EQUIVALENT, 0 ms]
(6) AND
    (7) QDP
        (8) UsableRulesProof [EQUIVALENT, 0 ms]
        (9) QDP
        (10) QReductionProof [EQUIVALENT, 0 ms]
        (11) QDP
        (12) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (13) YES
    (14) QDP
        (15) UsableRulesProof [EQUIVALENT, 0 ms]
        (16) QDP
        (17) QReductionProof [EQUIVALENT, 0 ms]
        (18) QDP
        (19) MRRProof [EQUIVALENT, 4 ms]
        (20) QDP
        (21) QDPOrderProof [EQUIVALENT, 0 ms]
        (22) QDP
        (23) PisEmptyProof [EQUIVALENT, 0 ms]
        (24) YES
    (25) QDP
        (26) UsableRulesProof [EQUIVALENT, 0 ms]
        (27) QDP
        (28) QReductionProof [EQUIVALENT, 0 ms]
        (29) QDP
        (30) MRRProof [EQUIVALENT, 6 ms]
        (31) QDP
        (32) QDPOrderProof [EQUIVALENT, 0 ms]
        (33) QDP
        (34) PisEmptyProof [EQUIVALENT, 0 ms]
        (35) YES
    (36) QDP
        (37) UsableRulesProof [EQUIVALENT, 0 ms]
        (38) QDP
        (39) QReductionProof [EQUIVALENT, 0 ms]
        (40) QDP
        (41) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (42) YES
    (43) QDP
        (44) UsableRulesProof [EQUIVALENT, 0 ms]
        (45) QDP
        (46) QReductionProof [EQUIVALENT, 0 ms]
        (47) QDP
        (48) QDPOrderProof [EQUIVALENT, 24 ms]
        (49) QDP
        (50) PisEmptyProof [EQUIVALENT, 0 ms]
        (51) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   plus(0, x) -> x
   plus(s(x), y) -> s(plus(p(s(x)), y))
   times(0, y) -> 0
   times(s(x), y) -> plus(y, times(p(s(x)), y))
   exp(x, 0) -> s(0)
   exp(x, s(y)) -> times(x, exp(x, y))
   p(s(0)) -> 0
   p(s(s(x))) -> s(p(s(x)))
   tower(x, y) -> towerIter(x, y, s(0))
   towerIter(0, y, z) -> z
   towerIter(s(x), y, z) -> towerIter(p(s(x)), y, exp(y, z))

Q is empty.

----------------------------------------

(1) Overlay + Local Confluence (EQUIVALENT)
The TRS is overlay and locally confluent. By [NOC] we can switch to innermost.
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   plus(0, x) -> x
   plus(s(x), y) -> s(plus(p(s(x)), y))
   times(0, y) -> 0
   times(s(x), y) -> plus(y, times(p(s(x)), y))
   exp(x, 0) -> s(0)
   exp(x, s(y)) -> times(x, exp(x, y))
   p(s(0)) -> 0
   p(s(s(x))) -> s(p(s(x)))
   tower(x, y) -> towerIter(x, y, s(0))
   towerIter(0, y, z) -> z
   towerIter(s(x), y, z) -> towerIter(p(s(x)), y, exp(y, z))

The set Q consists of the following terms:

   plus(0, x0)
   plus(s(x0), x1)
   times(0, x0)
   times(s(x0), x1)
   exp(x0, 0)
   exp(x0, s(x1))
   p(s(0))
   p(s(s(x0)))
   tower(x0, x1)
   towerIter(0, x0, x1)
   towerIter(s(x0), x1, x2)


----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   PLUS(s(x), y) -> PLUS(p(s(x)), y)
   PLUS(s(x), y) -> P(s(x))
   TIMES(s(x), y) -> PLUS(y, times(p(s(x)), y))
   TIMES(s(x), y) -> TIMES(p(s(x)), y)
   TIMES(s(x), y) -> P(s(x))
   EXP(x, s(y)) -> TIMES(x, exp(x, y))
   EXP(x, s(y)) -> EXP(x, y)
   P(s(s(x))) -> P(s(x))
   TOWER(x, y) -> TOWERITER(x, y, s(0))
   TOWERITER(s(x), y, z) -> TOWERITER(p(s(x)), y, exp(y, z))
   TOWERITER(s(x), y, z) -> P(s(x))
   TOWERITER(s(x), y, z) -> EXP(y, z)

The TRS R consists of the following rules:

   plus(0, x) -> x
   plus(s(x), y) -> s(plus(p(s(x)), y))
   times(0, y) -> 0
   times(s(x), y) -> plus(y, times(p(s(x)), y))
   exp(x, 0) -> s(0)
   exp(x, s(y)) -> times(x, exp(x, y))
   p(s(0)) -> 0
   p(s(s(x))) -> s(p(s(x)))
   tower(x, y) -> towerIter(x, y, s(0))
   towerIter(0, y, z) -> z
   towerIter(s(x), y, z) -> towerIter(p(s(x)), y, exp(y, z))

The set Q consists of the following terms:

   plus(0, x0)
   plus(s(x0), x1)
   times(0, x0)
   times(s(x0), x1)
   exp(x0, 0)
   exp(x0, s(x1))
   p(s(0))
   p(s(s(x0)))
   tower(x0, x1)
   towerIter(0, x0, x1)
   towerIter(s(x0), x1, x2)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 5 SCCs with 7 less nodes.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   P(s(s(x))) -> P(s(x))

The TRS R consists of the following rules:

   plus(0, x) -> x
   plus(s(x), y) -> s(plus(p(s(x)), y))
   times(0, y) -> 0
   times(s(x), y) -> plus(y, times(p(s(x)), y))
   exp(x, 0) -> s(0)
   exp(x, s(y)) -> times(x, exp(x, y))
   p(s(0)) -> 0
   p(s(s(x))) -> s(p(s(x)))
   tower(x, y) -> towerIter(x, y, s(0))
   towerIter(0, y, z) -> z
   towerIter(s(x), y, z) -> towerIter(p(s(x)), y, exp(y, z))

The set Q consists of the following terms:

   plus(0, x0)
   plus(s(x0), x1)
   times(0, x0)
   times(s(x0), x1)
   exp(x0, 0)
   exp(x0, s(x1))
   p(s(0))
   p(s(s(x0)))
   tower(x0, x1)
   towerIter(0, x0, x1)
   towerIter(s(x0), x1, x2)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(8) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(9)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   P(s(s(x))) -> P(s(x))

R is empty.
The set Q consists of the following terms:

   plus(0, x0)
   plus(s(x0), x1)
   times(0, x0)
   times(s(x0), x1)
   exp(x0, 0)
   exp(x0, s(x1))
   p(s(0))
   p(s(s(x0)))
   tower(x0, x1)
   towerIter(0, x0, x1)
   towerIter(s(x0), x1, x2)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(10) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   plus(0, x0)
   plus(s(x0), x1)
   times(0, x0)
   times(s(x0), x1)
   exp(x0, 0)
   exp(x0, s(x1))
   p(s(0))
   p(s(s(x0)))
   tower(x0, x1)
   towerIter(0, x0, x1)
   towerIter(s(x0), x1, x2)


----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   P(s(s(x))) -> P(s(x))

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(12) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*P(s(s(x))) -> P(s(x))
The graph contains the following edges 1 > 1


----------------------------------------

(13)
YES

----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   PLUS(s(x), y) -> PLUS(p(s(x)), y)

The TRS R consists of the following rules:

   plus(0, x) -> x
   plus(s(x), y) -> s(plus(p(s(x)), y))
   times(0, y) -> 0
   times(s(x), y) -> plus(y, times(p(s(x)), y))
   exp(x, 0) -> s(0)
   exp(x, s(y)) -> times(x, exp(x, y))
   p(s(0)) -> 0
   p(s(s(x))) -> s(p(s(x)))
   tower(x, y) -> towerIter(x, y, s(0))
   towerIter(0, y, z) -> z
   towerIter(s(x), y, z) -> towerIter(p(s(x)), y, exp(y, z))

The set Q consists of the following terms:

   plus(0, x0)
   plus(s(x0), x1)
   times(0, x0)
   times(s(x0), x1)
   exp(x0, 0)
   exp(x0, s(x1))
   p(s(0))
   p(s(s(x0)))
   tower(x0, x1)
   towerIter(0, x0, x1)
   towerIter(s(x0), x1, x2)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   PLUS(s(x), y) -> PLUS(p(s(x)), y)

The TRS R consists of the following rules:

   p(s(0)) -> 0
   p(s(s(x))) -> s(p(s(x)))

The set Q consists of the following terms:

   plus(0, x0)
   plus(s(x0), x1)
   times(0, x0)
   times(s(x0), x1)
   exp(x0, 0)
   exp(x0, s(x1))
   p(s(0))
   p(s(s(x0)))
   tower(x0, x1)
   towerIter(0, x0, x1)
   towerIter(s(x0), x1, x2)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   plus(0, x0)
   plus(s(x0), x1)
   times(0, x0)
   times(s(x0), x1)
   exp(x0, 0)
   exp(x0, s(x1))
   tower(x0, x1)
   towerIter(0, x0, x1)
   towerIter(s(x0), x1, x2)


----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   PLUS(s(x), y) -> PLUS(p(s(x)), y)

The TRS R consists of the following rules:

   p(s(0)) -> 0
   p(s(s(x))) -> s(p(s(x)))

The set Q consists of the following terms:

   p(s(0))
   p(s(s(x0)))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) MRRProof (EQUIVALENT)
By using the rule removal processor [LPAR04] with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented.


Strictly oriented rules of the TRS R:

   p(s(0)) -> 0

Used ordering: Polynomial interpretation [POLO]:

   POL(0) = 2
   POL(PLUS(x_1, x_2)) = x_1 + x_2
   POL(p(x_1)) = x_1
   POL(s(x_1)) = 2*x_1


----------------------------------------

(20)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   PLUS(s(x), y) -> PLUS(p(s(x)), y)

The TRS R consists of the following rules:

   p(s(s(x))) -> s(p(s(x)))

The set Q consists of the following terms:

   p(s(0))
   p(s(s(x0)))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(21) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   PLUS(s(x), y) -> PLUS(p(s(x)), y)
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial Order [NEGPOLO,POLO] with Interpretation:

POL( PLUS_2(x_1, x_2) ) = 2x_1 + 2
POL( p_1(x_1) ) = max{0, x_1 - 1}
POL( s_1(x_1) ) = 2x_1 + 2

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   p(s(s(x))) -> s(p(s(x)))


----------------------------------------

(22)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   p(s(s(x))) -> s(p(s(x)))

The set Q consists of the following terms:

   p(s(0))
   p(s(s(x0)))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(23) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(24)
YES

----------------------------------------

(25)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TIMES(s(x), y) -> TIMES(p(s(x)), y)

The TRS R consists of the following rules:

   plus(0, x) -> x
   plus(s(x), y) -> s(plus(p(s(x)), y))
   times(0, y) -> 0
   times(s(x), y) -> plus(y, times(p(s(x)), y))
   exp(x, 0) -> s(0)
   exp(x, s(y)) -> times(x, exp(x, y))
   p(s(0)) -> 0
   p(s(s(x))) -> s(p(s(x)))
   tower(x, y) -> towerIter(x, y, s(0))
   towerIter(0, y, z) -> z
   towerIter(s(x), y, z) -> towerIter(p(s(x)), y, exp(y, z))

The set Q consists of the following terms:

   plus(0, x0)
   plus(s(x0), x1)
   times(0, x0)
   times(s(x0), x1)
   exp(x0, 0)
   exp(x0, s(x1))
   p(s(0))
   p(s(s(x0)))
   tower(x0, x1)
   towerIter(0, x0, x1)
   towerIter(s(x0), x1, x2)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(26) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(27)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TIMES(s(x), y) -> TIMES(p(s(x)), y)

The TRS R consists of the following rules:

   p(s(0)) -> 0
   p(s(s(x))) -> s(p(s(x)))

The set Q consists of the following terms:

   plus(0, x0)
   plus(s(x0), x1)
   times(0, x0)
   times(s(x0), x1)
   exp(x0, 0)
   exp(x0, s(x1))
   p(s(0))
   p(s(s(x0)))
   tower(x0, x1)
   towerIter(0, x0, x1)
   towerIter(s(x0), x1, x2)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(28) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   plus(0, x0)
   plus(s(x0), x1)
   times(0, x0)
   times(s(x0), x1)
   exp(x0, 0)
   exp(x0, s(x1))
   tower(x0, x1)
   towerIter(0, x0, x1)
   towerIter(s(x0), x1, x2)


----------------------------------------

(29)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TIMES(s(x), y) -> TIMES(p(s(x)), y)

The TRS R consists of the following rules:

   p(s(0)) -> 0
   p(s(s(x))) -> s(p(s(x)))

The set Q consists of the following terms:

   p(s(0))
   p(s(s(x0)))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(30) MRRProof (EQUIVALENT)
By using the rule removal processor [LPAR04] with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented.


Strictly oriented rules of the TRS R:

   p(s(0)) -> 0

Used ordering: Polynomial interpretation [POLO]:

   POL(0) = 2
   POL(TIMES(x_1, x_2)) = x_1 + x_2
   POL(p(x_1)) = x_1
   POL(s(x_1)) = 2*x_1


----------------------------------------

(31)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TIMES(s(x), y) -> TIMES(p(s(x)), y)

The TRS R consists of the following rules:

   p(s(s(x))) -> s(p(s(x)))

The set Q consists of the following terms:

   p(s(0))
   p(s(s(x0)))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(32) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   TIMES(s(x), y) -> TIMES(p(s(x)), y)
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial Order [NEGPOLO,POLO] with Interpretation:

POL( TIMES_2(x_1, x_2) ) = 2x_1 + 2
POL( p_1(x_1) ) = max{0, x_1 - 1}
POL( s_1(x_1) ) = 2x_1 + 2

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   p(s(s(x))) -> s(p(s(x)))


----------------------------------------

(33)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   p(s(s(x))) -> s(p(s(x)))

The set Q consists of the following terms:

   p(s(0))
   p(s(s(x0)))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(34) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(35)
YES

----------------------------------------

(36)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   EXP(x, s(y)) -> EXP(x, y)

The TRS R consists of the following rules:

   plus(0, x) -> x
   plus(s(x), y) -> s(plus(p(s(x)), y))
   times(0, y) -> 0
   times(s(x), y) -> plus(y, times(p(s(x)), y))
   exp(x, 0) -> s(0)
   exp(x, s(y)) -> times(x, exp(x, y))
   p(s(0)) -> 0
   p(s(s(x))) -> s(p(s(x)))
   tower(x, y) -> towerIter(x, y, s(0))
   towerIter(0, y, z) -> z
   towerIter(s(x), y, z) -> towerIter(p(s(x)), y, exp(y, z))

The set Q consists of the following terms:

   plus(0, x0)
   plus(s(x0), x1)
   times(0, x0)
   times(s(x0), x1)
   exp(x0, 0)
   exp(x0, s(x1))
   p(s(0))
   p(s(s(x0)))
   tower(x0, x1)
   towerIter(0, x0, x1)
   towerIter(s(x0), x1, x2)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(37) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(38)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   EXP(x, s(y)) -> EXP(x, y)

R is empty.
The set Q consists of the following terms:

   plus(0, x0)
   plus(s(x0), x1)
   times(0, x0)
   times(s(x0), x1)
   exp(x0, 0)
   exp(x0, s(x1))
   p(s(0))
   p(s(s(x0)))
   tower(x0, x1)
   towerIter(0, x0, x1)
   towerIter(s(x0), x1, x2)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(39) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   plus(0, x0)
   plus(s(x0), x1)
   times(0, x0)
   times(s(x0), x1)
   exp(x0, 0)
   exp(x0, s(x1))
   p(s(0))
   p(s(s(x0)))
   tower(x0, x1)
   towerIter(0, x0, x1)
   towerIter(s(x0), x1, x2)


----------------------------------------

(40)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   EXP(x, s(y)) -> EXP(x, y)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(41) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*EXP(x, s(y)) -> EXP(x, y)
The graph contains the following edges 1 >= 1, 2 > 2


----------------------------------------

(42)
YES

----------------------------------------

(43)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TOWERITER(s(x), y, z) -> TOWERITER(p(s(x)), y, exp(y, z))

The TRS R consists of the following rules:

   plus(0, x) -> x
   plus(s(x), y) -> s(plus(p(s(x)), y))
   times(0, y) -> 0
   times(s(x), y) -> plus(y, times(p(s(x)), y))
   exp(x, 0) -> s(0)
   exp(x, s(y)) -> times(x, exp(x, y))
   p(s(0)) -> 0
   p(s(s(x))) -> s(p(s(x)))
   tower(x, y) -> towerIter(x, y, s(0))
   towerIter(0, y, z) -> z
   towerIter(s(x), y, z) -> towerIter(p(s(x)), y, exp(y, z))

The set Q consists of the following terms:

   plus(0, x0)
   plus(s(x0), x1)
   times(0, x0)
   times(s(x0), x1)
   exp(x0, 0)
   exp(x0, s(x1))
   p(s(0))
   p(s(s(x0)))
   tower(x0, x1)
   towerIter(0, x0, x1)
   towerIter(s(x0), x1, x2)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(44) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(45)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TOWERITER(s(x), y, z) -> TOWERITER(p(s(x)), y, exp(y, z))

The TRS R consists of the following rules:

   p(s(0)) -> 0
   p(s(s(x))) -> s(p(s(x)))
   exp(x, 0) -> s(0)
   exp(x, s(y)) -> times(x, exp(x, y))
   times(0, y) -> 0
   times(s(x), y) -> plus(y, times(p(s(x)), y))
   plus(0, x) -> x
   plus(s(x), y) -> s(plus(p(s(x)), y))

The set Q consists of the following terms:

   plus(0, x0)
   plus(s(x0), x1)
   times(0, x0)
   times(s(x0), x1)
   exp(x0, 0)
   exp(x0, s(x1))
   p(s(0))
   p(s(s(x0)))
   tower(x0, x1)
   towerIter(0, x0, x1)
   towerIter(s(x0), x1, x2)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(46) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   tower(x0, x1)
   towerIter(0, x0, x1)
   towerIter(s(x0), x1, x2)


----------------------------------------

(47)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TOWERITER(s(x), y, z) -> TOWERITER(p(s(x)), y, exp(y, z))

The TRS R consists of the following rules:

   p(s(0)) -> 0
   p(s(s(x))) -> s(p(s(x)))
   exp(x, 0) -> s(0)
   exp(x, s(y)) -> times(x, exp(x, y))
   times(0, y) -> 0
   times(s(x), y) -> plus(y, times(p(s(x)), y))
   plus(0, x) -> x
   plus(s(x), y) -> s(plus(p(s(x)), y))

The set Q consists of the following terms:

   plus(0, x0)
   plus(s(x0), x1)
   times(0, x0)
   times(s(x0), x1)
   exp(x0, 0)
   exp(x0, s(x1))
   p(s(0))
   p(s(s(x0)))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(48) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   TOWERITER(s(x), y, z) -> TOWERITER(p(s(x)), y, exp(y, z))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial Order [NEGPOLO,POLO] with Interpretation:

POL( TOWERITER_3(x_1, ..., x_3) ) = x_1 + 1
POL( plus_2(x_1, x_2) ) = max{0, 2x_2 - 2}
POL( s_1(x_1) ) = x_1 + 1
POL( times_2(x_1, x_2) ) = x_2 + 2
POL( p_1(x_1) ) = max{0, x_1 - 1}
POL( 0 ) = 0
POL( exp_2(x_1, x_2) ) = 2

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   p(s(0)) -> 0
   p(s(s(x))) -> s(p(s(x)))


----------------------------------------

(49)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   p(s(0)) -> 0
   p(s(s(x))) -> s(p(s(x)))
   exp(x, 0) -> s(0)
   exp(x, s(y)) -> times(x, exp(x, y))
   times(0, y) -> 0
   times(s(x), y) -> plus(y, times(p(s(x)), y))
   plus(0, x) -> x
   plus(s(x), y) -> s(plus(p(s(x)), y))

The set Q consists of the following terms:

   plus(0, x0)
   plus(s(x0), x1)
   times(0, x0)
   times(s(x0), x1)
   exp(x0, 0)
   exp(x0, s(x1))
   p(s(0))
   p(s(s(x0)))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(50) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(51)
YES
