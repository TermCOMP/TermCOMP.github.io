NO
proof of /hpcwork/ff862203/termcomp25/benchmarks/hdYQK.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be disproven:

(0) QTRS
(1) Overlay + Local Confluence [EQUIVALENT, 0 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 0 ms]
(4) QDP
(5) TransformationProof [EQUIVALENT, 0 ms]
(6) QDP
(7) MNOCProof [EQUIVALENT, 0 ms]
(8) QDP
(9) NonTerminationLoopProof [COMPLETE, 1 ms]
(10) NO


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(x, h(y)) -> h(f(f(h(a), y), x))

Q is empty.

----------------------------------------

(1) Overlay + Local Confluence (EQUIVALENT)
The TRS is overlay and locally confluent. By [NOC] we can switch to innermost.
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(x, h(y)) -> h(f(f(h(a), y), x))

The set Q consists of the following terms:

   f(x0, h(x1))


----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(x, h(y)) -> F(f(h(a), y), x)
   F(x, h(y)) -> F(h(a), y)

The TRS R consists of the following rules:

   f(x, h(y)) -> h(f(f(h(a), y), x))

The set Q consists of the following terms:

   f(x0, h(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) TransformationProof (EQUIVALENT)
By forward instantiating [JAR06] the rule F(x, h(y)) -> F(h(a), y) we obtained the following new rules [LPAR04]:

   (F(x0, h(h(y_1))) -> F(h(a), h(y_1)),F(x0, h(h(y_1))) -> F(h(a), h(y_1)))


----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(x, h(y)) -> F(f(h(a), y), x)
   F(x0, h(h(y_1))) -> F(h(a), h(y_1))

The TRS R consists of the following rules:

   f(x, h(y)) -> h(f(f(h(a), y), x))

The set Q consists of the following terms:

   f(x0, h(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) MNOCProof (EQUIVALENT)
We use the modular non-overlap check [FROCOS05] to decrease Q to the empty set.
----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(x, h(y)) -> F(f(h(a), y), x)
   F(x0, h(h(y_1))) -> F(h(a), h(y_1))

The TRS R consists of the following rules:

   f(x, h(y)) -> h(f(f(h(a), y), x))

Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(9) NonTerminationLoopProof (COMPLETE)
We used the non-termination processor [FROCOS05] to show that the DP problem is infinite.
Found a loop by narrowing to the left:

s = F(x, f(x', f(x'', h(y)))) evaluates to  t =F(f(h(a), f(f(h(a), f(f(h(a), y), x'')), x')), x)

Thus s starts an infinite chain as s semiunifies with t with the following substitutions:
* Matcher: [y / y', y' / y'', y'' / y''', x'' / x''', y''' / a, x''' / f(h(a), f(f(h(a), y), x''))]
* Semiunifier: [x / f(h(y'''), f(x''', h(y'))), x' / h(y'')]

--------------------------------------------------------------------------------
Rewriting sequence

F(f(h(y'''), f(x''', h(y'))), f(h(y''), f(x'', h(y)))) -> F(f(h(y'''), f(x''', h(y'))), f(h(y''), h(f(f(h(a), y), x''))))
with rule f(x'''', h(y1)) -> h(f(f(h(a), y1), x'''')) at position [1,1] and matcher [x'''' / x'', y1 / y]

F(f(h(y'''), f(x''', h(y'))), f(h(y''), h(f(f(h(a), y), x'')))) -> F(f(h(y'''), f(x''', h(y'))), h(f(f(h(a), f(f(h(a), y), x'')), h(y''))))
with rule f(x', h(y'1)) -> h(f(f(h(a), y'1), x')) at position [1] and matcher [x' / h(y''), y'1 / f(f(h(a), y), x'')]

F(f(h(y'''), f(x''', h(y'))), h(f(f(h(a), f(f(h(a), y), x'')), h(y'')))) -> F(f(h(a), f(f(h(a), f(f(h(a), y), x'')), h(y''))), f(h(y'''), f(x''', h(y'))))
with rule F(x, h(y)) -> F(f(h(a), y), x)

Now applying the matcher to the start term leads to a term which is equal to the last term in the rewriting sequence


All these steps are and every following step will be a correct step w.r.t to Q.




----------------------------------------

(10)
NO
