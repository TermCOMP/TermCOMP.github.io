YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/3w6HP.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRS Reverse [EQUIVALENT, 0 ms]
(2) QTRS
(3) QTRSRRRProof [EQUIVALENT, 12 ms]
(4) QTRS
(5) DependencyPairsProof [EQUIVALENT, 0 ms]
(6) QDP
(7) DependencyGraphProof [EQUIVALENT, 0 ms]
(8) AND
    (9) QDP
        (10) QDPOrderProof [EQUIVALENT, 19 ms]
        (11) QDP
        (12) PisEmptyProof [EQUIVALENT, 0 ms]
        (13) YES
    (14) QDP
        (15) QDPOrderProof [EQUIVALENT, 5 ms]
        (16) QDP
        (17) PisEmptyProof [EQUIVALENT, 0 ms]
        (18) YES
    (19) QDP
        (20) QDPOrderProof [EQUIVALENT, 15 ms]
        (21) QDP
        (22) PisEmptyProof [EQUIVALENT, 0 ms]
        (23) YES
    (24) QDP
        (25) QDPOrderProof [EQUIVALENT, 14 ms]
        (26) QDP
        (27) PisEmptyProof [EQUIVALENT, 0 ms]
        (28) YES
    (29) QDP
        (30) MRRProof [EQUIVALENT, 8 ms]
        (31) QDP
        (32) QDPOrderProof [EQUIVALENT, 3 ms]
        (33) QDP
        (34) QDPOrderProof [EQUIVALENT, 9 ms]
        (35) QDP
        (36) PisEmptyProof [EQUIVALENT, 0 ms]
        (37) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   active(f(f(X))) -> mark(c(f(g(f(X)))))
   active(c(X)) -> mark(d(X))
   active(h(X)) -> mark(c(d(X)))
   mark(f(X)) -> active(f(mark(X)))
   mark(c(X)) -> active(c(X))
   mark(g(X)) -> active(g(X))
   mark(d(X)) -> active(d(X))
   mark(h(X)) -> active(h(mark(X)))
   f(mark(X)) -> f(X)
   f(active(X)) -> f(X)
   c(mark(X)) -> c(X)
   c(active(X)) -> c(X)
   g(mark(X)) -> g(X)
   g(active(X)) -> g(X)
   d(mark(X)) -> d(X)
   d(active(X)) -> d(X)
   h(mark(X)) -> h(X)
   h(active(X)) -> h(X)

Q is empty.

----------------------------------------

(1) QTRS Reverse (EQUIVALENT)
We applied the QTRS Reverse Processor [REVERSE].
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(f(active(X))) -> f(g(f(c(mark(X)))))
   c(active(X)) -> d(mark(X))
   h(active(X)) -> d(c(mark(X)))
   f(mark(X)) -> mark(f(active(X)))
   c(mark(X)) -> c(active(X))
   g(mark(X)) -> g(active(X))
   d(mark(X)) -> d(active(X))
   h(mark(X)) -> mark(h(active(X)))
   mark(f(X)) -> f(X)
   active(f(X)) -> f(X)
   mark(c(X)) -> c(X)
   active(c(X)) -> c(X)
   mark(g(X)) -> g(X)
   active(g(X)) -> g(X)
   mark(d(X)) -> d(X)
   active(d(X)) -> d(X)
   mark(h(X)) -> h(X)
   active(h(X)) -> h(X)

Q is empty.

----------------------------------------

(3) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(active(x_1)) = x_1
   POL(c(x_1)) = x_1
   POL(d(x_1)) = x_1
   POL(f(x_1)) = x_1
   POL(g(x_1)) = x_1
   POL(h(x_1)) = 1 + x_1
   POL(mark(x_1)) = x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   h(active(X)) -> d(c(mark(X)))




----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(f(active(X))) -> f(g(f(c(mark(X)))))
   c(active(X)) -> d(mark(X))
   f(mark(X)) -> mark(f(active(X)))
   c(mark(X)) -> c(active(X))
   g(mark(X)) -> g(active(X))
   d(mark(X)) -> d(active(X))
   h(mark(X)) -> mark(h(active(X)))
   mark(f(X)) -> f(X)
   active(f(X)) -> f(X)
   mark(c(X)) -> c(X)
   active(c(X)) -> c(X)
   mark(g(X)) -> g(X)
   active(g(X)) -> g(X)
   mark(d(X)) -> d(X)
   active(d(X)) -> d(X)
   mark(h(X)) -> h(X)
   active(h(X)) -> h(X)

Q is empty.

----------------------------------------

(5) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(f(active(X))) -> F(g(f(c(mark(X)))))
   F(f(active(X))) -> G(f(c(mark(X))))
   F(f(active(X))) -> F(c(mark(X)))
   F(f(active(X))) -> C(mark(X))
   F(f(active(X))) -> MARK(X)
   C(active(X)) -> D(mark(X))
   C(active(X)) -> MARK(X)
   F(mark(X)) -> MARK(f(active(X)))
   F(mark(X)) -> F(active(X))
   F(mark(X)) -> ACTIVE(X)
   C(mark(X)) -> C(active(X))
   C(mark(X)) -> ACTIVE(X)
   G(mark(X)) -> G(active(X))
   G(mark(X)) -> ACTIVE(X)
   D(mark(X)) -> D(active(X))
   D(mark(X)) -> ACTIVE(X)
   H(mark(X)) -> MARK(h(active(X)))
   H(mark(X)) -> H(active(X))
   H(mark(X)) -> ACTIVE(X)

The TRS R consists of the following rules:

   f(f(active(X))) -> f(g(f(c(mark(X)))))
   c(active(X)) -> d(mark(X))
   f(mark(X)) -> mark(f(active(X)))
   c(mark(X)) -> c(active(X))
   g(mark(X)) -> g(active(X))
   d(mark(X)) -> d(active(X))
   h(mark(X)) -> mark(h(active(X)))
   mark(f(X)) -> f(X)
   active(f(X)) -> f(X)
   mark(c(X)) -> c(X)
   active(c(X)) -> c(X)
   mark(g(X)) -> g(X)
   active(g(X)) -> g(X)
   mark(d(X)) -> d(X)
   active(d(X)) -> d(X)
   mark(h(X)) -> h(X)
   active(h(X)) -> h(X)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 5 SCCs with 12 less nodes.
----------------------------------------

(8)
Complex Obligation (AND)

----------------------------------------

(9)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   H(mark(X)) -> H(active(X))

The TRS R consists of the following rules:

   f(f(active(X))) -> f(g(f(c(mark(X)))))
   c(active(X)) -> d(mark(X))
   f(mark(X)) -> mark(f(active(X)))
   c(mark(X)) -> c(active(X))
   g(mark(X)) -> g(active(X))
   d(mark(X)) -> d(active(X))
   h(mark(X)) -> mark(h(active(X)))
   mark(f(X)) -> f(X)
   active(f(X)) -> f(X)
   mark(c(X)) -> c(X)
   active(c(X)) -> c(X)
   mark(g(X)) -> g(X)
   active(g(X)) -> g(X)
   mark(d(X)) -> d(X)
   active(d(X)) -> d(X)
   mark(h(X)) -> h(X)
   active(h(X)) -> h(X)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(10) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   H(mark(X)) -> H(active(X))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial Order [NEGPOLO,POLO] with Interpretation:

POL( H_1(x_1) ) = x_1 + 1
POL( active_1(x_1) ) = x_1
POL( f_1(x_1) ) = 2x_1
POL( c_1(x_1) ) = max{0, -2}
POL( g_1(x_1) ) = x_1
POL( d_1(x_1) ) = max{0, -2}
POL( h_1(x_1) ) = 2x_1
POL( mark_1(x_1) ) = 2x_1 + 1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   active(f(X)) -> f(X)
   active(c(X)) -> c(X)
   active(g(X)) -> g(X)
   active(d(X)) -> d(X)
   active(h(X)) -> h(X)
   f(mark(X)) -> mark(f(active(X)))
   mark(f(X)) -> f(X)
   f(f(active(X))) -> f(g(f(c(mark(X)))))
   mark(h(X)) -> h(X)
   h(mark(X)) -> mark(h(active(X)))
   c(active(X)) -> d(mark(X))
   c(mark(X)) -> c(active(X))
   g(mark(X)) -> g(active(X))
   d(mark(X)) -> d(active(X))
   mark(c(X)) -> c(X)
   mark(g(X)) -> g(X)
   mark(d(X)) -> d(X)


----------------------------------------

(11)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   f(f(active(X))) -> f(g(f(c(mark(X)))))
   c(active(X)) -> d(mark(X))
   f(mark(X)) -> mark(f(active(X)))
   c(mark(X)) -> c(active(X))
   g(mark(X)) -> g(active(X))
   d(mark(X)) -> d(active(X))
   h(mark(X)) -> mark(h(active(X)))
   mark(f(X)) -> f(X)
   active(f(X)) -> f(X)
   mark(c(X)) -> c(X)
   active(c(X)) -> c(X)
   mark(g(X)) -> g(X)
   active(g(X)) -> g(X)
   mark(d(X)) -> d(X)
   active(d(X)) -> d(X)
   mark(h(X)) -> h(X)
   active(h(X)) -> h(X)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(12) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(13)
YES

----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   D(mark(X)) -> D(active(X))

The TRS R consists of the following rules:

   f(f(active(X))) -> f(g(f(c(mark(X)))))
   c(active(X)) -> d(mark(X))
   f(mark(X)) -> mark(f(active(X)))
   c(mark(X)) -> c(active(X))
   g(mark(X)) -> g(active(X))
   d(mark(X)) -> d(active(X))
   h(mark(X)) -> mark(h(active(X)))
   mark(f(X)) -> f(X)
   active(f(X)) -> f(X)
   mark(c(X)) -> c(X)
   active(c(X)) -> c(X)
   mark(g(X)) -> g(X)
   active(g(X)) -> g(X)
   mark(d(X)) -> d(X)
   active(d(X)) -> d(X)
   mark(h(X)) -> h(X)
   active(h(X)) -> h(X)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   D(mark(X)) -> D(active(X))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(D(x_1)) = x_1
   POL(active(x_1)) = x_1
   POL(c(x_1)) = 0
   POL(d(x_1)) = 0
   POL(f(x_1)) = 1 + x_1
   POL(g(x_1)) = x_1
   POL(h(x_1)) = 1 + x_1
   POL(mark(x_1)) = 1 + x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   active(f(X)) -> f(X)
   active(c(X)) -> c(X)
   active(g(X)) -> g(X)
   active(d(X)) -> d(X)
   active(h(X)) -> h(X)
   f(mark(X)) -> mark(f(active(X)))
   mark(f(X)) -> f(X)
   f(f(active(X))) -> f(g(f(c(mark(X)))))
   mark(h(X)) -> h(X)
   h(mark(X)) -> mark(h(active(X)))
   c(active(X)) -> d(mark(X))
   c(mark(X)) -> c(active(X))
   g(mark(X)) -> g(active(X))
   d(mark(X)) -> d(active(X))
   mark(c(X)) -> c(X)
   mark(g(X)) -> g(X)
   mark(d(X)) -> d(X)


----------------------------------------

(16)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   f(f(active(X))) -> f(g(f(c(mark(X)))))
   c(active(X)) -> d(mark(X))
   f(mark(X)) -> mark(f(active(X)))
   c(mark(X)) -> c(active(X))
   g(mark(X)) -> g(active(X))
   d(mark(X)) -> d(active(X))
   h(mark(X)) -> mark(h(active(X)))
   mark(f(X)) -> f(X)
   active(f(X)) -> f(X)
   mark(c(X)) -> c(X)
   active(c(X)) -> c(X)
   mark(g(X)) -> g(X)
   active(g(X)) -> g(X)
   mark(d(X)) -> d(X)
   active(d(X)) -> d(X)
   mark(h(X)) -> h(X)
   active(h(X)) -> h(X)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(18)
YES

----------------------------------------

(19)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   G(mark(X)) -> G(active(X))

The TRS R consists of the following rules:

   f(f(active(X))) -> f(g(f(c(mark(X)))))
   c(active(X)) -> d(mark(X))
   f(mark(X)) -> mark(f(active(X)))
   c(mark(X)) -> c(active(X))
   g(mark(X)) -> g(active(X))
   d(mark(X)) -> d(active(X))
   h(mark(X)) -> mark(h(active(X)))
   mark(f(X)) -> f(X)
   active(f(X)) -> f(X)
   mark(c(X)) -> c(X)
   active(c(X)) -> c(X)
   mark(g(X)) -> g(X)
   active(g(X)) -> g(X)
   mark(d(X)) -> d(X)
   active(d(X)) -> d(X)
   mark(h(X)) -> h(X)
   active(h(X)) -> h(X)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(20) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   G(mark(X)) -> G(active(X))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(G(x_1)) = 4*x_1
   POL(active(x_1)) = x_1
   POL(c(x_1)) = 4 + 5*x_1
   POL(d(x_1)) = 2 + x_1
   POL(f(x_1)) = x_1
   POL(g(x_1)) = 0
   POL(h(x_1)) = x_1
   POL(mark(x_1)) = 2 + 5*x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   active(f(X)) -> f(X)
   active(c(X)) -> c(X)
   active(g(X)) -> g(X)
   active(d(X)) -> d(X)
   active(h(X)) -> h(X)
   f(mark(X)) -> mark(f(active(X)))
   mark(f(X)) -> f(X)
   f(f(active(X))) -> f(g(f(c(mark(X)))))
   mark(h(X)) -> h(X)
   h(mark(X)) -> mark(h(active(X)))
   c(active(X)) -> d(mark(X))
   c(mark(X)) -> c(active(X))
   g(mark(X)) -> g(active(X))
   d(mark(X)) -> d(active(X))
   mark(c(X)) -> c(X)
   mark(g(X)) -> g(X)
   mark(d(X)) -> d(X)


----------------------------------------

(21)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   f(f(active(X))) -> f(g(f(c(mark(X)))))
   c(active(X)) -> d(mark(X))
   f(mark(X)) -> mark(f(active(X)))
   c(mark(X)) -> c(active(X))
   g(mark(X)) -> g(active(X))
   d(mark(X)) -> d(active(X))
   h(mark(X)) -> mark(h(active(X)))
   mark(f(X)) -> f(X)
   active(f(X)) -> f(X)
   mark(c(X)) -> c(X)
   active(c(X)) -> c(X)
   mark(g(X)) -> g(X)
   active(g(X)) -> g(X)
   mark(d(X)) -> d(X)
   active(d(X)) -> d(X)
   mark(h(X)) -> h(X)
   active(h(X)) -> h(X)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(22) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(23)
YES

----------------------------------------

(24)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C(mark(X)) -> C(active(X))

The TRS R consists of the following rules:

   f(f(active(X))) -> f(g(f(c(mark(X)))))
   c(active(X)) -> d(mark(X))
   f(mark(X)) -> mark(f(active(X)))
   c(mark(X)) -> c(active(X))
   g(mark(X)) -> g(active(X))
   d(mark(X)) -> d(active(X))
   h(mark(X)) -> mark(h(active(X)))
   mark(f(X)) -> f(X)
   active(f(X)) -> f(X)
   mark(c(X)) -> c(X)
   active(c(X)) -> c(X)
   mark(g(X)) -> g(X)
   active(g(X)) -> g(X)
   mark(d(X)) -> d(X)
   active(d(X)) -> d(X)
   mark(h(X)) -> h(X)
   active(h(X)) -> h(X)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(25) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   C(mark(X)) -> C(active(X))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial Order [NEGPOLO,POLO] with Interpretation:

POL( C_1(x_1) ) = x_1 + 1
POL( active_1(x_1) ) = x_1
POL( f_1(x_1) ) = 2x_1
POL( c_1(x_1) ) = max{0, -2}
POL( g_1(x_1) ) = x_1
POL( d_1(x_1) ) = max{0, -2}
POL( h_1(x_1) ) = 2x_1
POL( mark_1(x_1) ) = 2x_1 + 1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   active(f(X)) -> f(X)
   active(c(X)) -> c(X)
   active(g(X)) -> g(X)
   active(d(X)) -> d(X)
   active(h(X)) -> h(X)
   f(mark(X)) -> mark(f(active(X)))
   mark(f(X)) -> f(X)
   f(f(active(X))) -> f(g(f(c(mark(X)))))
   mark(h(X)) -> h(X)
   h(mark(X)) -> mark(h(active(X)))
   c(active(X)) -> d(mark(X))
   c(mark(X)) -> c(active(X))
   g(mark(X)) -> g(active(X))
   d(mark(X)) -> d(active(X))
   mark(c(X)) -> c(X)
   mark(g(X)) -> g(X)
   mark(d(X)) -> d(X)


----------------------------------------

(26)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   f(f(active(X))) -> f(g(f(c(mark(X)))))
   c(active(X)) -> d(mark(X))
   f(mark(X)) -> mark(f(active(X)))
   c(mark(X)) -> c(active(X))
   g(mark(X)) -> g(active(X))
   d(mark(X)) -> d(active(X))
   h(mark(X)) -> mark(h(active(X)))
   mark(f(X)) -> f(X)
   active(f(X)) -> f(X)
   mark(c(X)) -> c(X)
   active(c(X)) -> c(X)
   mark(g(X)) -> g(X)
   active(g(X)) -> g(X)
   mark(d(X)) -> d(X)
   active(d(X)) -> d(X)
   mark(h(X)) -> h(X)
   active(h(X)) -> h(X)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(27) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(28)
YES

----------------------------------------

(29)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(f(active(X))) -> F(c(mark(X)))
   F(f(active(X))) -> F(g(f(c(mark(X)))))
   F(mark(X)) -> F(active(X))

The TRS R consists of the following rules:

   f(f(active(X))) -> f(g(f(c(mark(X)))))
   c(active(X)) -> d(mark(X))
   f(mark(X)) -> mark(f(active(X)))
   c(mark(X)) -> c(active(X))
   g(mark(X)) -> g(active(X))
   d(mark(X)) -> d(active(X))
   h(mark(X)) -> mark(h(active(X)))
   mark(f(X)) -> f(X)
   active(f(X)) -> f(X)
   mark(c(X)) -> c(X)
   active(c(X)) -> c(X)
   mark(g(X)) -> g(X)
   active(g(X)) -> g(X)
   mark(d(X)) -> d(X)
   active(d(X)) -> d(X)
   mark(h(X)) -> h(X)
   active(h(X)) -> h(X)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(30) MRRProof (EQUIVALENT)
By using the rule removal processor [LPAR04] with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented.

Strictly oriented dependency pairs:

   F(f(active(X))) -> F(c(mark(X)))


Used ordering: Polynomial interpretation [POLO]:

   POL(F(x_1)) = 2*x_1
   POL(active(x_1)) = x_1
   POL(c(x_1)) = x_1
   POL(d(x_1)) = x_1
   POL(f(x_1)) = 1 + 2*x_1
   POL(g(x_1)) = x_1
   POL(h(x_1)) = 2*x_1
   POL(mark(x_1)) = x_1


----------------------------------------

(31)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(f(active(X))) -> F(g(f(c(mark(X)))))
   F(mark(X)) -> F(active(X))

The TRS R consists of the following rules:

   f(f(active(X))) -> f(g(f(c(mark(X)))))
   c(active(X)) -> d(mark(X))
   f(mark(X)) -> mark(f(active(X)))
   c(mark(X)) -> c(active(X))
   g(mark(X)) -> g(active(X))
   d(mark(X)) -> d(active(X))
   h(mark(X)) -> mark(h(active(X)))
   mark(f(X)) -> f(X)
   active(f(X)) -> f(X)
   mark(c(X)) -> c(X)
   active(c(X)) -> c(X)
   mark(g(X)) -> g(X)
   active(g(X)) -> g(X)
   mark(d(X)) -> d(X)
   active(d(X)) -> d(X)
   mark(h(X)) -> h(X)
   active(h(X)) -> h(X)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(32) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   F(mark(X)) -> F(active(X))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(F(x_1)) = x_1
   POL(active(x_1)) = x_1
   POL(c(x_1)) = 0
   POL(d(x_1)) = 0
   POL(f(x_1)) = x_1
   POL(g(x_1)) = 0
   POL(h(x_1)) = 1 + x_1
   POL(mark(x_1)) = 1 + x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   f(mark(X)) -> mark(f(active(X)))
   mark(f(X)) -> f(X)
   f(f(active(X))) -> f(g(f(c(mark(X)))))
   mark(h(X)) -> h(X)
   h(mark(X)) -> mark(h(active(X)))
   mark(c(X)) -> c(X)
   mark(g(X)) -> g(X)
   mark(d(X)) -> d(X)
   c(active(X)) -> d(mark(X))
   c(mark(X)) -> c(active(X))
   g(mark(X)) -> g(active(X))
   active(f(X)) -> f(X)
   active(c(X)) -> c(X)
   active(g(X)) -> g(X)
   active(d(X)) -> d(X)
   active(h(X)) -> h(X)
   d(mark(X)) -> d(active(X))


----------------------------------------

(33)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(f(active(X))) -> F(g(f(c(mark(X)))))

The TRS R consists of the following rules:

   f(f(active(X))) -> f(g(f(c(mark(X)))))
   c(active(X)) -> d(mark(X))
   f(mark(X)) -> mark(f(active(X)))
   c(mark(X)) -> c(active(X))
   g(mark(X)) -> g(active(X))
   d(mark(X)) -> d(active(X))
   h(mark(X)) -> mark(h(active(X)))
   mark(f(X)) -> f(X)
   active(f(X)) -> f(X)
   mark(c(X)) -> c(X)
   active(c(X)) -> c(X)
   mark(g(X)) -> g(X)
   active(g(X)) -> g(X)
   mark(d(X)) -> d(X)
   active(d(X)) -> d(X)
   mark(h(X)) -> h(X)
   active(h(X)) -> h(X)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(34) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   F(f(active(X))) -> F(g(f(c(mark(X)))))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial Order [NEGPOLO,POLO] with Interpretation:

POL( F_1(x_1) ) = 2x_1 + 1
POL( g_1(x_1) ) = 0
POL( f_1(x_1) ) = 2x_1 + 2
POL( mark_1(x_1) ) = max{0, -2}
POL( active_1(x_1) ) = 2
POL( c_1(x_1) ) = max{0, -2}
POL( h_1(x_1) ) = 2x_1
POL( d_1(x_1) ) = max{0, -2}

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   g(mark(X)) -> g(active(X))


----------------------------------------

(35)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   f(f(active(X))) -> f(g(f(c(mark(X)))))
   c(active(X)) -> d(mark(X))
   f(mark(X)) -> mark(f(active(X)))
   c(mark(X)) -> c(active(X))
   g(mark(X)) -> g(active(X))
   d(mark(X)) -> d(active(X))
   h(mark(X)) -> mark(h(active(X)))
   mark(f(X)) -> f(X)
   active(f(X)) -> f(X)
   mark(c(X)) -> c(X)
   active(c(X)) -> c(X)
   mark(g(X)) -> g(X)
   active(g(X)) -> g(X)
   mark(d(X)) -> d(X)
   active(d(X)) -> d(X)
   mark(h(X)) -> h(X)
   active(h(X)) -> h(X)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(36) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(37)
YES
