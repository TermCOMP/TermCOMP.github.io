YES

Problem 1: 

(VAR vu95NonEmpty X)
(RULES
active(c(X)) -> mark(d(X))
active(f(f(X))) -> mark(c(f(g(f(X)))))
active(h(X)) -> mark(c(d(X)))
c(active(X)) -> c(X)
c(mark(X)) -> c(X)
d(active(X)) -> d(X)
d(mark(X)) -> d(X)
f(active(X)) -> f(X)
f(mark(X)) -> f(X)
g(active(X)) -> g(X)
g(mark(X)) -> g(X)
h(active(X)) -> h(X)
h(mark(X)) -> h(X)
mark(c(X)) -> active(c(X))
mark(d(X)) -> active(d(X))
mark(f(X)) -> active(f(mark(X)))
mark(g(X)) -> active(g(X))
mark(h(X)) -> active(h(mark(X)))
)


Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 ACTIVE(c(X)) -> D(X)
 ACTIVE(c(X)) -> MARK(d(X))
 ACTIVE(f(f(X))) -> C(f(g(f(X))))
 ACTIVE(f(f(X))) -> F(g(f(X)))
 ACTIVE(f(f(X))) -> G(f(X))
 ACTIVE(f(f(X))) -> MARK(c(f(g(f(X)))))
 ACTIVE(h(X)) -> C(d(X))
 ACTIVE(h(X)) -> D(X)
 ACTIVE(h(X)) -> MARK(c(d(X)))
 C(active(X)) -> C(X)
 C(mark(X)) -> C(X)
 D(active(X)) -> D(X)
 D(mark(X)) -> D(X)
 F(active(X)) -> F(X)
 F(mark(X)) -> F(X)
 G(active(X)) -> G(X)
 G(mark(X)) -> G(X)
 H(active(X)) -> H(X)
 H(mark(X)) -> H(X)
 MARK(c(X)) -> ACTIVE(c(X))
 MARK(d(X)) -> ACTIVE(d(X))
 MARK(f(X)) -> ACTIVE(f(mark(X)))
 MARK(f(X)) -> F(mark(X))
 MARK(f(X)) -> MARK(X)
 MARK(g(X)) -> ACTIVE(g(X))
 MARK(h(X)) -> ACTIVE(h(mark(X)))
 MARK(h(X)) -> H(mark(X))
 MARK(h(X)) -> MARK(X)
-> Rules:
 active(c(X)) -> mark(d(X))
 active(f(f(X))) -> mark(c(f(g(f(X)))))
 active(h(X)) -> mark(c(d(X)))
 c(active(X)) -> c(X)
 c(mark(X)) -> c(X)
 d(active(X)) -> d(X)
 d(mark(X)) -> d(X)
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(c(X)) -> active(c(X))
 mark(d(X)) -> active(d(X))
 mark(f(X)) -> active(f(mark(X)))
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(mark(X)))

Problem 1: 

SCC Processor:
-> Pairs:
 ACTIVE(c(X)) -> D(X)
 ACTIVE(c(X)) -> MARK(d(X))
 ACTIVE(f(f(X))) -> C(f(g(f(X))))
 ACTIVE(f(f(X))) -> F(g(f(X)))
 ACTIVE(f(f(X))) -> G(f(X))
 ACTIVE(f(f(X))) -> MARK(c(f(g(f(X)))))
 ACTIVE(h(X)) -> C(d(X))
 ACTIVE(h(X)) -> D(X)
 ACTIVE(h(X)) -> MARK(c(d(X)))
 C(active(X)) -> C(X)
 C(mark(X)) -> C(X)
 D(active(X)) -> D(X)
 D(mark(X)) -> D(X)
 F(active(X)) -> F(X)
 F(mark(X)) -> F(X)
 G(active(X)) -> G(X)
 G(mark(X)) -> G(X)
 H(active(X)) -> H(X)
 H(mark(X)) -> H(X)
 MARK(c(X)) -> ACTIVE(c(X))
 MARK(d(X)) -> ACTIVE(d(X))
 MARK(f(X)) -> ACTIVE(f(mark(X)))
 MARK(f(X)) -> F(mark(X))
 MARK(f(X)) -> MARK(X)
 MARK(g(X)) -> ACTIVE(g(X))
 MARK(h(X)) -> ACTIVE(h(mark(X)))
 MARK(h(X)) -> H(mark(X))
 MARK(h(X)) -> MARK(X)
-> Rules:
 active(c(X)) -> mark(d(X))
 active(f(f(X))) -> mark(c(f(g(f(X)))))
 active(h(X)) -> mark(c(d(X)))
 c(active(X)) -> c(X)
 c(mark(X)) -> c(X)
 d(active(X)) -> d(X)
 d(mark(X)) -> d(X)
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(c(X)) -> active(c(X))
 mark(d(X)) -> active(d(X))
 mark(f(X)) -> active(f(mark(X)))
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(mark(X)))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 H(active(X)) -> H(X)
 H(mark(X)) -> H(X)
->->-> Rules:
 active(c(X)) -> mark(d(X))
 active(f(f(X))) -> mark(c(f(g(f(X)))))
 active(h(X)) -> mark(c(d(X)))
 c(active(X)) -> c(X)
 c(mark(X)) -> c(X)
 d(active(X)) -> d(X)
 d(mark(X)) -> d(X)
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(c(X)) -> active(c(X))
 mark(d(X)) -> active(d(X))
 mark(f(X)) -> active(f(mark(X)))
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(mark(X)))
->->Cycle:
->->-> Pairs:
 G(active(X)) -> G(X)
 G(mark(X)) -> G(X)
->->-> Rules:
 active(c(X)) -> mark(d(X))
 active(f(f(X))) -> mark(c(f(g(f(X)))))
 active(h(X)) -> mark(c(d(X)))
 c(active(X)) -> c(X)
 c(mark(X)) -> c(X)
 d(active(X)) -> d(X)
 d(mark(X)) -> d(X)
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(c(X)) -> active(c(X))
 mark(d(X)) -> active(d(X))
 mark(f(X)) -> active(f(mark(X)))
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(mark(X)))
->->Cycle:
->->-> Pairs:
 F(active(X)) -> F(X)
 F(mark(X)) -> F(X)
->->-> Rules:
 active(c(X)) -> mark(d(X))
 active(f(f(X))) -> mark(c(f(g(f(X)))))
 active(h(X)) -> mark(c(d(X)))
 c(active(X)) -> c(X)
 c(mark(X)) -> c(X)
 d(active(X)) -> d(X)
 d(mark(X)) -> d(X)
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(c(X)) -> active(c(X))
 mark(d(X)) -> active(d(X))
 mark(f(X)) -> active(f(mark(X)))
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(mark(X)))
->->Cycle:
->->-> Pairs:
 D(active(X)) -> D(X)
 D(mark(X)) -> D(X)
->->-> Rules:
 active(c(X)) -> mark(d(X))
 active(f(f(X))) -> mark(c(f(g(f(X)))))
 active(h(X)) -> mark(c(d(X)))
 c(active(X)) -> c(X)
 c(mark(X)) -> c(X)
 d(active(X)) -> d(X)
 d(mark(X)) -> d(X)
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(c(X)) -> active(c(X))
 mark(d(X)) -> active(d(X))
 mark(f(X)) -> active(f(mark(X)))
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(mark(X)))
->->Cycle:
->->-> Pairs:
 C(active(X)) -> C(X)
 C(mark(X)) -> C(X)
->->-> Rules:
 active(c(X)) -> mark(d(X))
 active(f(f(X))) -> mark(c(f(g(f(X)))))
 active(h(X)) -> mark(c(d(X)))
 c(active(X)) -> c(X)
 c(mark(X)) -> c(X)
 d(active(X)) -> d(X)
 d(mark(X)) -> d(X)
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(c(X)) -> active(c(X))
 mark(d(X)) -> active(d(X))
 mark(f(X)) -> active(f(mark(X)))
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(mark(X)))
->->Cycle:
->->-> Pairs:
 ACTIVE(c(X)) -> MARK(d(X))
 ACTIVE(f(f(X))) -> MARK(c(f(g(f(X)))))
 ACTIVE(h(X)) -> MARK(c(d(X)))
 MARK(c(X)) -> ACTIVE(c(X))
 MARK(d(X)) -> ACTIVE(d(X))
 MARK(f(X)) -> ACTIVE(f(mark(X)))
 MARK(f(X)) -> MARK(X)
 MARK(g(X)) -> ACTIVE(g(X))
 MARK(h(X)) -> ACTIVE(h(mark(X)))
 MARK(h(X)) -> MARK(X)
->->-> Rules:
 active(c(X)) -> mark(d(X))
 active(f(f(X))) -> mark(c(f(g(f(X)))))
 active(h(X)) -> mark(c(d(X)))
 c(active(X)) -> c(X)
 c(mark(X)) -> c(X)
 d(active(X)) -> d(X)
 d(mark(X)) -> d(X)
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(c(X)) -> active(c(X))
 mark(d(X)) -> active(d(X))
 mark(f(X)) -> active(f(mark(X)))
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(mark(X)))


The problem is decomposed in 6 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 H(active(X)) -> H(X)
 H(mark(X)) -> H(X)
-> Rules:
 active(c(X)) -> mark(d(X))
 active(f(f(X))) -> mark(c(f(g(f(X)))))
 active(h(X)) -> mark(c(d(X)))
 c(active(X)) -> c(X)
 c(mark(X)) -> c(X)
 d(active(X)) -> d(X)
 d(mark(X)) -> d(X)
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(c(X)) -> active(c(X))
 mark(d(X)) -> active(d(X))
 mark(f(X)) -> active(f(mark(X)))
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(mark(X)))
->Projection:
 pi(H) = 1

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(c(X)) -> mark(d(X))
 active(f(f(X))) -> mark(c(f(g(f(X)))))
 active(h(X)) -> mark(c(d(X)))
 c(active(X)) -> c(X)
 c(mark(X)) -> c(X)
 d(active(X)) -> d(X)
 d(mark(X)) -> d(X)
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(c(X)) -> active(c(X))
 mark(d(X)) -> active(d(X))
 mark(f(X)) -> active(f(mark(X)))
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(mark(X)))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Subterm Processor:
-> Pairs:
 G(active(X)) -> G(X)
 G(mark(X)) -> G(X)
-> Rules:
 active(c(X)) -> mark(d(X))
 active(f(f(X))) -> mark(c(f(g(f(X)))))
 active(h(X)) -> mark(c(d(X)))
 c(active(X)) -> c(X)
 c(mark(X)) -> c(X)
 d(active(X)) -> d(X)
 d(mark(X)) -> d(X)
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(c(X)) -> active(c(X))
 mark(d(X)) -> active(d(X))
 mark(f(X)) -> active(f(mark(X)))
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(mark(X)))
->Projection:
 pi(G) = 1

Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(c(X)) -> mark(d(X))
 active(f(f(X))) -> mark(c(f(g(f(X)))))
 active(h(X)) -> mark(c(d(X)))
 c(active(X)) -> c(X)
 c(mark(X)) -> c(X)
 d(active(X)) -> d(X)
 d(mark(X)) -> d(X)
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(c(X)) -> active(c(X))
 mark(d(X)) -> active(d(X))
 mark(f(X)) -> active(f(mark(X)))
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(mark(X)))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Subterm Processor:
-> Pairs:
 F(active(X)) -> F(X)
 F(mark(X)) -> F(X)
-> Rules:
 active(c(X)) -> mark(d(X))
 active(f(f(X))) -> mark(c(f(g(f(X)))))
 active(h(X)) -> mark(c(d(X)))
 c(active(X)) -> c(X)
 c(mark(X)) -> c(X)
 d(active(X)) -> d(X)
 d(mark(X)) -> d(X)
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(c(X)) -> active(c(X))
 mark(d(X)) -> active(d(X))
 mark(f(X)) -> active(f(mark(X)))
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(mark(X)))
->Projection:
 pi(F) = 1

Problem 1.3: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(c(X)) -> mark(d(X))
 active(f(f(X))) -> mark(c(f(g(f(X)))))
 active(h(X)) -> mark(c(d(X)))
 c(active(X)) -> c(X)
 c(mark(X)) -> c(X)
 d(active(X)) -> d(X)
 d(mark(X)) -> d(X)
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(c(X)) -> active(c(X))
 mark(d(X)) -> active(d(X))
 mark(f(X)) -> active(f(mark(X)))
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(mark(X)))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.4: 

Subterm Processor:
-> Pairs:
 D(active(X)) -> D(X)
 D(mark(X)) -> D(X)
-> Rules:
 active(c(X)) -> mark(d(X))
 active(f(f(X))) -> mark(c(f(g(f(X)))))
 active(h(X)) -> mark(c(d(X)))
 c(active(X)) -> c(X)
 c(mark(X)) -> c(X)
 d(active(X)) -> d(X)
 d(mark(X)) -> d(X)
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(c(X)) -> active(c(X))
 mark(d(X)) -> active(d(X))
 mark(f(X)) -> active(f(mark(X)))
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(mark(X)))
->Projection:
 pi(D) = 1

Problem 1.4: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(c(X)) -> mark(d(X))
 active(f(f(X))) -> mark(c(f(g(f(X)))))
 active(h(X)) -> mark(c(d(X)))
 c(active(X)) -> c(X)
 c(mark(X)) -> c(X)
 d(active(X)) -> d(X)
 d(mark(X)) -> d(X)
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(c(X)) -> active(c(X))
 mark(d(X)) -> active(d(X))
 mark(f(X)) -> active(f(mark(X)))
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(mark(X)))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.5: 

Subterm Processor:
-> Pairs:
 C(active(X)) -> C(X)
 C(mark(X)) -> C(X)
-> Rules:
 active(c(X)) -> mark(d(X))
 active(f(f(X))) -> mark(c(f(g(f(X)))))
 active(h(X)) -> mark(c(d(X)))
 c(active(X)) -> c(X)
 c(mark(X)) -> c(X)
 d(active(X)) -> d(X)
 d(mark(X)) -> d(X)
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(c(X)) -> active(c(X))
 mark(d(X)) -> active(d(X))
 mark(f(X)) -> active(f(mark(X)))
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(mark(X)))
->Projection:
 pi(C) = 1

Problem 1.5: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(c(X)) -> mark(d(X))
 active(f(f(X))) -> mark(c(f(g(f(X)))))
 active(h(X)) -> mark(c(d(X)))
 c(active(X)) -> c(X)
 c(mark(X)) -> c(X)
 d(active(X)) -> d(X)
 d(mark(X)) -> d(X)
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(c(X)) -> active(c(X))
 mark(d(X)) -> active(d(X))
 mark(f(X)) -> active(f(mark(X)))
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(mark(X)))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.6: 

Reduction Pair Processor:
-> Pairs:
 ACTIVE(c(X)) -> MARK(d(X))
 ACTIVE(f(f(X))) -> MARK(c(f(g(f(X)))))
 ACTIVE(h(X)) -> MARK(c(d(X)))
 MARK(c(X)) -> ACTIVE(c(X))
 MARK(d(X)) -> ACTIVE(d(X))
 MARK(f(X)) -> ACTIVE(f(mark(X)))
 MARK(f(X)) -> MARK(X)
 MARK(g(X)) -> ACTIVE(g(X))
 MARK(h(X)) -> ACTIVE(h(mark(X)))
 MARK(h(X)) -> MARK(X)
-> Rules:
 active(c(X)) -> mark(d(X))
 active(f(f(X))) -> mark(c(f(g(f(X)))))
 active(h(X)) -> mark(c(d(X)))
 c(active(X)) -> c(X)
 c(mark(X)) -> c(X)
 d(active(X)) -> d(X)
 d(mark(X)) -> d(X)
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(c(X)) -> active(c(X))
 mark(d(X)) -> active(d(X))
 mark(f(X)) -> active(f(mark(X)))
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(mark(X)))
-> Usable rules:
 active(c(X)) -> mark(d(X))
 active(f(f(X))) -> mark(c(f(g(f(X)))))
 active(h(X)) -> mark(c(d(X)))
 c(active(X)) -> c(X)
 c(mark(X)) -> c(X)
 d(active(X)) -> d(X)
 d(mark(X)) -> d(X)
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(c(X)) -> active(c(X))
 mark(d(X)) -> active(d(X))
 mark(f(X)) -> active(f(mark(X)))
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(mark(X)))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[active](X) = X
[c](X) = 2.X + 1
[d](X) = X
[f](X) = 2.X + 2
[g](X) = 0
[h](X) = 2.X + 1
[mark](X) = X
[fSNonEmpty] = 0
[ACTIVE](X) = 2.X + 2
[C](X) = 0
[D](X) = 0
[F](X) = 0
[G](X) = 0
[H](X) = 0
[MARK](X) = 2.X + 2

Problem 1.6: 

SCC Processor:
-> Pairs:
 ACTIVE(f(f(X))) -> MARK(c(f(g(f(X)))))
 ACTIVE(h(X)) -> MARK(c(d(X)))
 MARK(c(X)) -> ACTIVE(c(X))
 MARK(d(X)) -> ACTIVE(d(X))
 MARK(f(X)) -> ACTIVE(f(mark(X)))
 MARK(f(X)) -> MARK(X)
 MARK(g(X)) -> ACTIVE(g(X))
 MARK(h(X)) -> ACTIVE(h(mark(X)))
 MARK(h(X)) -> MARK(X)
-> Rules:
 active(c(X)) -> mark(d(X))
 active(f(f(X))) -> mark(c(f(g(f(X)))))
 active(h(X)) -> mark(c(d(X)))
 c(active(X)) -> c(X)
 c(mark(X)) -> c(X)
 d(active(X)) -> d(X)
 d(mark(X)) -> d(X)
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(c(X)) -> active(c(X))
 mark(d(X)) -> active(d(X))
 mark(f(X)) -> active(f(mark(X)))
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(mark(X)))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(f(f(X))) -> MARK(c(f(g(f(X)))))
 ACTIVE(h(X)) -> MARK(c(d(X)))
 MARK(c(X)) -> ACTIVE(c(X))
 MARK(d(X)) -> ACTIVE(d(X))
 MARK(f(X)) -> ACTIVE(f(mark(X)))
 MARK(f(X)) -> MARK(X)
 MARK(g(X)) -> ACTIVE(g(X))
 MARK(h(X)) -> ACTIVE(h(mark(X)))
 MARK(h(X)) -> MARK(X)
->->-> Rules:
 active(c(X)) -> mark(d(X))
 active(f(f(X))) -> mark(c(f(g(f(X)))))
 active(h(X)) -> mark(c(d(X)))
 c(active(X)) -> c(X)
 c(mark(X)) -> c(X)
 d(active(X)) -> d(X)
 d(mark(X)) -> d(X)
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(c(X)) -> active(c(X))
 mark(d(X)) -> active(d(X))
 mark(f(X)) -> active(f(mark(X)))
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(mark(X)))

Problem 1.6: 

Reduction Pair Processor:
-> Pairs:
 ACTIVE(f(f(X))) -> MARK(c(f(g(f(X)))))
 ACTIVE(h(X)) -> MARK(c(d(X)))
 MARK(c(X)) -> ACTIVE(c(X))
 MARK(d(X)) -> ACTIVE(d(X))
 MARK(f(X)) -> ACTIVE(f(mark(X)))
 MARK(f(X)) -> MARK(X)
 MARK(g(X)) -> ACTIVE(g(X))
 MARK(h(X)) -> ACTIVE(h(mark(X)))
 MARK(h(X)) -> MARK(X)
-> Rules:
 active(c(X)) -> mark(d(X))
 active(f(f(X))) -> mark(c(f(g(f(X)))))
 active(h(X)) -> mark(c(d(X)))
 c(active(X)) -> c(X)
 c(mark(X)) -> c(X)
 d(active(X)) -> d(X)
 d(mark(X)) -> d(X)
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(c(X)) -> active(c(X))
 mark(d(X)) -> active(d(X))
 mark(f(X)) -> active(f(mark(X)))
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(mark(X)))
-> Usable rules:
 active(c(X)) -> mark(d(X))
 active(f(f(X))) -> mark(c(f(g(f(X)))))
 active(h(X)) -> mark(c(d(X)))
 c(active(X)) -> c(X)
 c(mark(X)) -> c(X)
 d(active(X)) -> d(X)
 d(mark(X)) -> d(X)
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(c(X)) -> active(c(X))
 mark(d(X)) -> active(d(X))
 mark(f(X)) -> active(f(mark(X)))
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(mark(X)))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[active](X) = X + 2
[c](X) = 2
[d](X) = 2
[f](X) = 2.X + 2
[g](X) = 2
[h](X) = 2.X + 2
[mark](X) = 2.X
[fSNonEmpty] = 0
[ACTIVE](X) = X + 2
[C](X) = 0
[D](X) = 0
[F](X) = 0
[G](X) = 0
[H](X) = 0
[MARK](X) = 2.X

Problem 1.6: 

SCC Processor:
-> Pairs:
 ACTIVE(h(X)) -> MARK(c(d(X)))
 MARK(c(X)) -> ACTIVE(c(X))
 MARK(d(X)) -> ACTIVE(d(X))
 MARK(f(X)) -> ACTIVE(f(mark(X)))
 MARK(f(X)) -> MARK(X)
 MARK(g(X)) -> ACTIVE(g(X))
 MARK(h(X)) -> ACTIVE(h(mark(X)))
 MARK(h(X)) -> MARK(X)
-> Rules:
 active(c(X)) -> mark(d(X))
 active(f(f(X))) -> mark(c(f(g(f(X)))))
 active(h(X)) -> mark(c(d(X)))
 c(active(X)) -> c(X)
 c(mark(X)) -> c(X)
 d(active(X)) -> d(X)
 d(mark(X)) -> d(X)
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(c(X)) -> active(c(X))
 mark(d(X)) -> active(d(X))
 mark(f(X)) -> active(f(mark(X)))
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(mark(X)))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(h(X)) -> MARK(c(d(X)))
 MARK(c(X)) -> ACTIVE(c(X))
 MARK(d(X)) -> ACTIVE(d(X))
 MARK(f(X)) -> ACTIVE(f(mark(X)))
 MARK(f(X)) -> MARK(X)
 MARK(g(X)) -> ACTIVE(g(X))
 MARK(h(X)) -> ACTIVE(h(mark(X)))
 MARK(h(X)) -> MARK(X)
->->-> Rules:
 active(c(X)) -> mark(d(X))
 active(f(f(X))) -> mark(c(f(g(f(X)))))
 active(h(X)) -> mark(c(d(X)))
 c(active(X)) -> c(X)
 c(mark(X)) -> c(X)
 d(active(X)) -> d(X)
 d(mark(X)) -> d(X)
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(c(X)) -> active(c(X))
 mark(d(X)) -> active(d(X))
 mark(f(X)) -> active(f(mark(X)))
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(mark(X)))

Problem 1.6: 

Reduction Pair Processor:
-> Pairs:
 ACTIVE(h(X)) -> MARK(c(d(X)))
 MARK(c(X)) -> ACTIVE(c(X))
 MARK(d(X)) -> ACTIVE(d(X))
 MARK(f(X)) -> ACTIVE(f(mark(X)))
 MARK(f(X)) -> MARK(X)
 MARK(g(X)) -> ACTIVE(g(X))
 MARK(h(X)) -> ACTIVE(h(mark(X)))
 MARK(h(X)) -> MARK(X)
-> Rules:
 active(c(X)) -> mark(d(X))
 active(f(f(X))) -> mark(c(f(g(f(X)))))
 active(h(X)) -> mark(c(d(X)))
 c(active(X)) -> c(X)
 c(mark(X)) -> c(X)
 d(active(X)) -> d(X)
 d(mark(X)) -> d(X)
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(c(X)) -> active(c(X))
 mark(d(X)) -> active(d(X))
 mark(f(X)) -> active(f(mark(X)))
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(mark(X)))
-> Usable rules:
 active(c(X)) -> mark(d(X))
 active(f(f(X))) -> mark(c(f(g(f(X)))))
 active(h(X)) -> mark(c(d(X)))
 c(active(X)) -> c(X)
 c(mark(X)) -> c(X)
 d(active(X)) -> d(X)
 d(mark(X)) -> d(X)
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(c(X)) -> active(c(X))
 mark(d(X)) -> active(d(X))
 mark(f(X)) -> active(f(mark(X)))
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(mark(X)))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[active](X) = X + 1
[c](X) = 0
[d](X) = 0
[f](X) = 2.X + 2
[g](X) = 2
[h](X) = 2.X + 2
[mark](X) = 2.X + 1
[fSNonEmpty] = 0
[ACTIVE](X) = X + 2
[C](X) = 0
[D](X) = 0
[F](X) = 0
[G](X) = 0
[H](X) = 0
[MARK](X) = 2.X + 2

Problem 1.6: 

SCC Processor:
-> Pairs:
 MARK(c(X)) -> ACTIVE(c(X))
 MARK(d(X)) -> ACTIVE(d(X))
 MARK(f(X)) -> ACTIVE(f(mark(X)))
 MARK(f(X)) -> MARK(X)
 MARK(g(X)) -> ACTIVE(g(X))
 MARK(h(X)) -> ACTIVE(h(mark(X)))
 MARK(h(X)) -> MARK(X)
-> Rules:
 active(c(X)) -> mark(d(X))
 active(f(f(X))) -> mark(c(f(g(f(X)))))
 active(h(X)) -> mark(c(d(X)))
 c(active(X)) -> c(X)
 c(mark(X)) -> c(X)
 d(active(X)) -> d(X)
 d(mark(X)) -> d(X)
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(c(X)) -> active(c(X))
 mark(d(X)) -> active(d(X))
 mark(f(X)) -> active(f(mark(X)))
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(mark(X)))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 MARK(f(X)) -> MARK(X)
 MARK(h(X)) -> MARK(X)
->->-> Rules:
 active(c(X)) -> mark(d(X))
 active(f(f(X))) -> mark(c(f(g(f(X)))))
 active(h(X)) -> mark(c(d(X)))
 c(active(X)) -> c(X)
 c(mark(X)) -> c(X)
 d(active(X)) -> d(X)
 d(mark(X)) -> d(X)
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(c(X)) -> active(c(X))
 mark(d(X)) -> active(d(X))
 mark(f(X)) -> active(f(mark(X)))
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(mark(X)))

Problem 1.6: 

Subterm Processor:
-> Pairs:
 MARK(f(X)) -> MARK(X)
 MARK(h(X)) -> MARK(X)
-> Rules:
 active(c(X)) -> mark(d(X))
 active(f(f(X))) -> mark(c(f(g(f(X)))))
 active(h(X)) -> mark(c(d(X)))
 c(active(X)) -> c(X)
 c(mark(X)) -> c(X)
 d(active(X)) -> d(X)
 d(mark(X)) -> d(X)
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(c(X)) -> active(c(X))
 mark(d(X)) -> active(d(X))
 mark(f(X)) -> active(f(mark(X)))
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(mark(X)))
->Projection:
 pi(MARK) = 1

Problem 1.6: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(c(X)) -> mark(d(X))
 active(f(f(X))) -> mark(c(f(g(f(X)))))
 active(h(X)) -> mark(c(d(X)))
 c(active(X)) -> c(X)
 c(mark(X)) -> c(X)
 d(active(X)) -> d(X)
 d(mark(X)) -> d(X)
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(c(X)) -> active(c(X))
 mark(d(X)) -> active(d(X))
 mark(f(X)) -> active(f(mark(X)))
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(mark(X)))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
