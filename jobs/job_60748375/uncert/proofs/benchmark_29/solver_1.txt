SAST
proof of /home/ff862203/input_JGgGdn4jGN.ari
# AProVE Commit ID: 1c9e2a6453f9f0dca490585733f1cff3767d3e54 jan-christoph 20250828 unpublished


Complexity of the given CpxPTRS could be proven:

(0) CpxPTRS
(1) CpxPTRS_DirectPoloProof [FINISHED, 31 ms]
(2) BOUNDS(1, EXP)


----------------------------------------

(0)
Obligation:
Probabilistic term rewrite system:
The TRS has the following probabilistic rules:

   ifEq(false, y, xs) -> 1 / 2 : cons(y, remove(xs)) || 1 / 2 : ifEq(false, y, xs)
   ifEq(true, y, xs) -> 1 : remove(xs)
   remove(x, nil) -> 1 : nil
   eq(s(x), 0) -> 1 : false
   eq(0, s(x)) -> 1 : false
   eq(s(x), s(y)) -> 1 : eq(x, y)
   remove(x, cons(y, xs)) -> 1 : ifEq(eq(x, y), y, xs)
   eq(0, 0) -> 1 : true

and uses the full rewrite strategy.

----------------------------------------

(1) CpxPTRS_DirectPoloProof (FINISHED)


We use the direct application of polynomial interpretations [ADY19].
Using the following Interpretation: 
Resulting in the following upper complexity bound: EXPPolynomial interpretation [POLO]:

   POL(0) = 1
   POL(cons(x_1, x_2)) = 1 + 2*x_1 + 2*x_2
   POL(eq(x_1, x_2)) = x_1 + x_2
   POL(false) = 0
   POL(ifEq(x_1, x_2, x_3)) = 2 + 2*x_1 + 2*x_2 + 2*x_3
   POL(nil) = 0
   POL(remove(x_1)) = x_1
   POL(remove(x_1, x_2)) = 2 + 2*x_1 + 2*x_2
   POL(s(x_1)) = 1 + 2*x_1
   POL(true) = 0

----------------------------------------

(2)
BOUNDS(1, EXP)
