AST
proof of /home/ff862203/input_hUUmFluHVp.ari
# AProVE Commit ID: 1c9e2a6453f9f0dca490585733f1cff3767d3e54 jan-christoph 20250828 unpublished


AST of the given PTRS could be proven:

(0) PTRS
(1) PTRStoQTRSProof [SOUND, 0 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 0 ms]
(4) QDP
(5) DependencyGraphProof [EQUIVALENT, 0 ms]
(6) QDP
(7) QDPOrderProof [EQUIVALENT, 0 ms]
(8) QDP
(9) DependencyGraphProof [EQUIVALENT, 0 ms]
(10) TRUE


----------------------------------------

(0)
Obligation:
Probabilistic term rewrite system:
The TRS has the following probabilistic rules:

   p(s(x)) -> 1 : x
   if(true, x, y) -> 1 : rand(p(x), rand_inc(y))
   random(x) -> 1 : rand(x, 0)
   rand_inc(x) -> 1 / 5 : s(s(x)) || 3 / 5 : s(s(s(s(x)))) || 1 / 5 : s(s(s(s(s(s(s(s(x))))))))
   p(0) -> 1 : 0
   nonZero(0) -> 1 : false
   nonZero(s(x)) -> 1 : true
   rand(x, y) -> 1 : if(nonZero(x), x, y)
   if(false, x, y) -> 1 : y

and uses the full rewrite strategy.

----------------------------------------

(1) PTRStoQTRSProof (SOUND)
A PTRS R is terminating if the TRS NonProb(R) is terminating
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   rand_inc(x) -> s(s(s(s(s(s(s(s(x))))))))
   p(0) -> 0
   nonZero(s(x)) -> true
   if(true, x, y) -> rand(p(x), rand_inc(y))
   p(s(x)) -> x
   rand_inc(x) -> s(s(x))
   rand_inc(x) -> s(s(s(s(x))))
   rand(x, y) -> if(nonZero(x), x, y)
   random(x) -> rand(x, 0)
   nonZero(0) -> false
   if(false, x, y) -> y

Q is empty.

----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   IF(true, x, y) -> RAND(p(x), rand_inc(y))
   IF(true, x, y) -> P(x)
   IF(true, x, y) -> RAND_INC(y)
   RAND(x, y) -> IF(nonZero(x), x, y)
   RAND(x, y) -> NONZERO(x)
   RANDOM(x) -> RAND(x, 0)

The TRS R consists of the following rules:

   rand_inc(x) -> s(s(s(s(s(s(s(s(x))))))))
   p(0) -> 0
   nonZero(s(x)) -> true
   if(true, x, y) -> rand(p(x), rand_inc(y))
   p(s(x)) -> x
   rand_inc(x) -> s(s(x))
   rand_inc(x) -> s(s(s(s(x))))
   rand(x, y) -> if(nonZero(x), x, y)
   random(x) -> rand(x, 0)
   nonZero(0) -> false
   if(false, x, y) -> y

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 4 less nodes.
----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   RAND(x, y) -> IF(nonZero(x), x, y)
   IF(true, x, y) -> RAND(p(x), rand_inc(y))

The TRS R consists of the following rules:

   rand_inc(x) -> s(s(s(s(s(s(s(s(x))))))))
   p(0) -> 0
   nonZero(s(x)) -> true
   if(true, x, y) -> rand(p(x), rand_inc(y))
   p(s(x)) -> x
   rand_inc(x) -> s(s(x))
   rand_inc(x) -> s(s(s(s(x))))
   rand(x, y) -> if(nonZero(x), x, y)
   random(x) -> rand(x, 0)
   nonZero(0) -> false
   if(false, x, y) -> y

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   IF(true, x, y) -> RAND(p(x), rand_inc(y))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO,RATPOLO]:

   POL(0) = 0
   POL(IF(x_1, x_2, x_3)) = [1/2]x_1 + x_2
   POL(RAND(x_1, x_2)) = [2]x_1
   POL(false) = 0
   POL(nonZero(x_1)) = [1/4]x_1
   POL(p(x_1)) = [1/4]x_1
   POL(rand_inc(x_1)) = 0
   POL(s(x_1)) = [1] + [4]x_1
   POL(true) = [1/4]
The value of delta used in the strict ordering is 1/8.
The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   nonZero(s(x)) -> true
   nonZero(0) -> false
   p(0) -> 0
   p(s(x)) -> x


----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   RAND(x, y) -> IF(nonZero(x), x, y)

The TRS R consists of the following rules:

   rand_inc(x) -> s(s(s(s(s(s(s(s(x))))))))
   p(0) -> 0
   nonZero(s(x)) -> true
   if(true, x, y) -> rand(p(x), rand_inc(y))
   p(s(x)) -> x
   rand_inc(x) -> s(s(x))
   rand_inc(x) -> s(s(s(s(x))))
   rand(x, y) -> if(nonZero(x), x, y)
   random(x) -> rand(x, 0)
   nonZero(0) -> false
   if(false, x, y) -> y

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 1 less node.
----------------------------------------

(10)
TRUE
