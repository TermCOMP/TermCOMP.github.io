NO
proof of /hpcwork/ff862203/termcomp25/benchmarks/LRUBP.jar
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


termination of the given Bare JBC problem could be disproven:

(0) Bare JBC problem
(1) BareJBCToJBCProof [EQUIVALENT, 0 ms]
(2) JBC problem
(3) JBCNonTerm [COMPLETE, 118 ms]
(4) NO


----------------------------------------

(0)
Obligation:
need to prove termination of the following program:
public class AlternDivWide {

    public static void loop(int i, int w) {
	if (i != 0) {
	    if (i < -w) loop(-1 * (i - 1), w);
	    else {
		if (i > w) loop(-1 * (i + 1), w);
		else loop(0, w);
	    }
	}
    }

    public static void main(String args[]) {
	loop(args.length, -5);
    }
}



----------------------------------------

(1) BareJBCToJBCProof (EQUIVALENT)
initialized classpath
----------------------------------------

(2)
Obligation:
need to prove termination of the following program:
public class AlternDivWide {

    public static void loop(int i, int w) {
	if (i != 0) {
	    if (i < -w) loop(-1 * (i - 1), w);
	    else {
		if (i > w) loop(-1 * (i + 1), w);
		else loop(0, w);
	    }
	}
    }

    public static void main(String args[]) {
	loop(args.length, -5);
    }
}



----------------------------------------

(3) JBCNonTerm (COMPLETE)
Constructed a run with a repetition. States 4 and 30 are repetitions (when considering only the interesting positions [lv_0_0, lv_0_1]).

0:<AlternDivWide.main||0: load ADDR #0||#0: a2|| ->
	a2([java.lang.String...]): length 4 -->{java.lang.Object...}
YES:  (JL1)
1:<AlternDivWide.main||1: arraylength|| - ||a2>
	a2([java.lang.String...]): length 4 -->{java.lang.Object...}
YES:  (JL1)
2:<AlternDivWide.main||2: push -5|| - ||4>
YES:  (JL1)
3:<AlternDivWide.main||4: AlternDivWide.loop(II)V|| - ||4, -5>
YES:  (JL1)
4:<AlternDivWide.loop||0: load INT #0||#0: 4, #1: -5|| ->
YES:  (JL1)
5:<AlternDivWide.loop||1: EQ 0||#0: 4, #1: -5||4>
YES:  (JL1)
6:<AlternDivWide.loop||4: load INT #0||#0: 4, #1: -5|| ->
YES:  (JL1)
7:<AlternDivWide.loop||5: load INT #1||#0: 4, #1: -5||4>
YES:  (JL1)
8:<AlternDivWide.loop||6: NEG||#0: 4, #1: -5||4, -5>
YES:  (JL1)
9:<AlternDivWide.loop||7: GE||#0: 4, #1: -5||4, 5>
YES:  (JL1)
10:<AlternDivWide.loop||10: push -1||#0: 4, #1: -5|| ->
YES:  (JL1)
11:<AlternDivWide.loop||11: load INT #0||#0: 4, #1: -5||-1>
YES:  (JL1)
12:<AlternDivWide.loop||12: push 1||#1: -5||-1, 4>
YES:  (JL1)
13:<AlternDivWide.loop||13: SUB||#1: -5||-1, 4, 1>
YES:  (JL1)
14:<AlternDivWide.loop||14: MUL||#1: -5||-1, 3>
YES:  (JL1)
15:<AlternDivWide.loop||15: load INT #1||#1: -5||-3>
YES:  (JL1)
16:<AlternDivWide.loop||16: AlternDivWide.loop(II)V|| - ||-3, -5>
YES:  (JL1)
17:<AlternDivWide.loop||0: load INT #0||#0: -3, #1: -5|| ->
YES:  (JL1)
18:<AlternDivWide.loop||1: EQ 0||#0: -3, #1: -5||-3>
YES:  (JL1)
19:<AlternDivWide.loop||4: load INT #0||#0: -3, #1: -5|| ->
YES:  (JL1)
20:<AlternDivWide.loop||5: load INT #1||#0: -3, #1: -5||-3>
YES:  (JL1)
21:<AlternDivWide.loop||6: NEG||#0: -3, #1: -5||-3, -5>
YES:  (JL1)
22:<AlternDivWide.loop||7: GE||#0: -3, #1: -5||-3, 5>
YES:  (JL1)
23:<AlternDivWide.loop||10: push -1||#0: -3, #1: -5|| ->
YES:  (JL1)
24:<AlternDivWide.loop||11: load INT #0||#0: -3, #1: -5||-1>
YES:  (JL1)
25:<AlternDivWide.loop||12: push 1||#1: -5||-1, -3>
YES:  (JL1)
26:<AlternDivWide.loop||13: SUB||#1: -5||-1, -3, 1>
YES:  (JL1)
27:<AlternDivWide.loop||14: MUL||#1: -5||-1, -4>
YES:  (JL1)
28:<AlternDivWide.loop||15: load INT #1||#1: -5||4>
YES:  (JL1)
29:<AlternDivWide.loop||16: AlternDivWide.loop(II)V|| - ||4, -5>
YES:  (JL1)
30:<AlternDivWide.loop||0: load INT #0||#0: 4, #1: -5|| ->
YES:  (JL1)

----------------------------------------

(4)
NO
