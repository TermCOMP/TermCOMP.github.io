YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/hS2DN.jar
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


termination of the given Bare JBC problem could be proven:

(0) Bare JBC problem
(1) BareJBCToJBCProof [EQUIVALENT, 0 ms]
(2) JBC problem
(3) JBCToGraph [EQUIVALENT, 752 ms]
(4) JBCTerminationGraph
(5) TerminationGraphToSCCProof [SOUND, 0 ms]
(6) AND
    (7) JBCTerminationSCC
        (8) SCCToIRSProof [SOUND, 39 ms]
        (9) IRSwT
        (10) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (11) IRSwT
        (12) IRSwTTerminationDigraphProof [EQUIVALENT, 10 ms]
        (13) IRSwT
        (14) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (15) IRSwT
        (16) TempFilterProof [SOUND, 156 ms]
        (17) IRSwT
        (18) IRSwTTerminationDigraphProof [EQUIVALENT, 0 ms]
        (19) IRSwT
        (20) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
        (21) IRSwT
        (22) IRSwTOrderProof [EQUIVALENT, 0 ms]
        (23) YES
    (24) JBCTerminationSCC
        (25) SCCToIRSProof [SOUND, 42 ms]
        (26) IRSwT
        (27) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (28) IRSwT
        (29) IRSwTTerminationDigraphProof [EQUIVALENT, 7 ms]
        (30) AND
            (31) IRSwT
                (32) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                (33) IRSwT
                (34) TempFilterProof [SOUND, 6 ms]
                (35) IntTRS
                (36) PolynomialOrderProcessor [EQUIVALENT, 2 ms]
                (37) YES
            (38) IRSwT
                (39) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                (40) IRSwT
                (41) TempFilterProof [SOUND, 7 ms]
                (42) IntTRS
                (43) RankingReductionPairProof [EQUIVALENT, 3 ms]
                (44) YES


----------------------------------------

(0)
Obligation:
need to prove termination of the following program:
package ConvertRec;

public class ConvertRec {

  public static int convert(List xs, int b) {
    if (xs == null) return 0;
    if (xs.value <= 0) return  b * convert(xs.next, b);
    return 1 + convert(new List(xs.value - 1, xs.next), b);
  }

  public static void main(String[] args) {
    Random.args = args;

    List xs = createList(Random.random());

    convert(xs, Random.random());
  }

  public static List createList(int l) {
	if (l <= 0) {
		return null;
	} else {
		return new List(Random.random(), createList(l-1));
	}
  }
}


package ConvertRec;

public class List {

  int value;
  List next;

  public List() {}

  public List(int value, List next) {
    this.value = value;
    this.next = next;
  }

  public static List copy(List x) {
    if (x == null) return null;
    else return new List(x.value,copy(x.next));
  }
}


package ConvertRec;

public class Random {
  static String[] args;
  static int index = 0;

  public static int random() {
    if (args.length <= index) {
      return 0;
    }
    String string = args[index];
    index++;
    if (string == null) {
      return 0;
    }
    return string.length();
  }
}



----------------------------------------

(1) BareJBCToJBCProof (EQUIVALENT)
initialized classpath
----------------------------------------

(2)
Obligation:
need to prove termination of the following program:
package ConvertRec;

public class ConvertRec {

  public static int convert(List xs, int b) {
    if (xs == null) return 0;
    if (xs.value <= 0) return  b * convert(xs.next, b);
    return 1 + convert(new List(xs.value - 1, xs.next), b);
  }

  public static void main(String[] args) {
    Random.args = args;

    List xs = createList(Random.random());

    convert(xs, Random.random());
  }

  public static List createList(int l) {
	if (l <= 0) {
		return null;
	} else {
		return new List(Random.random(), createList(l-1));
	}
  }
}


package ConvertRec;

public class List {

  int value;
  List next;

  public List() {}

  public List(int value, List next) {
    this.value = value;
    this.next = next;
  }

  public static List copy(List x) {
    if (x == null) return null;
    else return new List(x.value,copy(x.next));
  }
}


package ConvertRec;

public class Random {
  static String[] args;
  static int index = 0;

  public static int random() {
    if (args.length <= index) {
      return 0;
    }
    String string = args[index];
    index++;
    if (string == null) {
      return 0;
    }
    return string.length();
  }
}



----------------------------------------

(3) JBCToGraph (EQUIVALENT)
Constructed TerminationGraph.
----------------------------------------

(4)
Obligation:
Termination Graph based on JBC Program:
ConvertRec.ConvertRec.main([Ljava/lang/String;)V: Graph of 377 nodes with 0 SCCs.



ConvertRec.ConvertRec.createList(I)LConvertRec/List;: Graph of 199 nodes with 0 SCCs.



ConvertRec.ConvertRec.convert(LConvertRec/List;I)I: Graph of 84 nodes with 0 SCCs.





----------------------------------------

(5) TerminationGraphToSCCProof (SOUND)
Splitted TerminationGraph to 2 SCCss.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: ConvertRec.ConvertRec.convert(LConvertRec/List;I)I
SCC calls the following helper methods: ConvertRec.ConvertRec.convert(LConvertRec/List;I)I
Performed SCC analyses:
*Used field analysis yielded the following read fields:
*ConvertRec.List: [value, next]
*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(8) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 47 IRulesP rules:
f15132_0_convert_NONNULL(EOS(STATIC_15132), java.lang.Object(o2419sub), java.lang.Object(o2419sub), java.lang.Object(o2419sub)) -> f15133_0_convert_NONNULL(EOS(STATIC_15133), java.lang.Object(o2419sub), java.lang.Object(o2419sub), java.lang.Object(o2419sub)) :|: TRUE
f15133_0_convert_NONNULL(EOS(STATIC_15133), java.lang.Object(o2419sub), java.lang.Object(o2419sub), java.lang.Object(o2419sub)) -> f15135_0_convert_Load(EOS(STATIC_15135), java.lang.Object(o2419sub), java.lang.Object(o2419sub)) :|: TRUE
f15135_0_convert_Load(EOS(STATIC_15135), java.lang.Object(o2419sub), java.lang.Object(o2419sub)) -> f15137_0_convert_FieldAccess(EOS(STATIC_15137), java.lang.Object(o2419sub), java.lang.Object(o2419sub), java.lang.Object(o2419sub)) :|: TRUE
f15137_0_convert_FieldAccess(EOS(STATIC_15137), java.lang.Object(ConvertRec.List(EOC, i3766, o2421)), java.lang.Object(ConvertRec.List(EOC, i3766, o2421)), java.lang.Object(ConvertRec.List(EOC, i3766, o2421))) -> f15139_0_convert_FieldAccess(EOS(STATIC_15139), java.lang.Object(ConvertRec.List(EOC, i3766, o2421)), java.lang.Object(ConvertRec.List(EOC, i3766, o2421)), java.lang.Object(ConvertRec.List(EOC, i3766, o2421))) :|: TRUE
f15139_0_convert_FieldAccess(EOS(STATIC_15139), java.lang.Object(ConvertRec.List(EOC, i3766, o2421)), java.lang.Object(ConvertRec.List(EOC, i3766, o2421)), java.lang.Object(ConvertRec.List(EOC, i3766, o2421))) -> f15141_0_convert_GT(EOS(STATIC_15141), java.lang.Object(ConvertRec.List(EOC, i3766, o2421)), java.lang.Object(ConvertRec.List(EOC, i3766, o2421)), i3766) :|: TRUE
f15141_0_convert_GT(EOS(STATIC_15141), java.lang.Object(ConvertRec.List(EOC, i3799, o2421)), java.lang.Object(ConvertRec.List(EOC, i3799, o2421)), i3799) -> f15142_0_convert_GT(EOS(STATIC_15142), java.lang.Object(ConvertRec.List(EOC, i3799, o2421)), java.lang.Object(ConvertRec.List(EOC, i3799, o2421)), i3799) :|: TRUE
f15141_0_convert_GT(EOS(STATIC_15141), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), i3800) -> f15143_0_convert_GT(EOS(STATIC_15143), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), i3800) :|: TRUE
f15142_0_convert_GT(EOS(STATIC_15142), java.lang.Object(ConvertRec.List(EOC, i3799, o2421)), java.lang.Object(ConvertRec.List(EOC, i3799, o2421)), i3799) -> f15151_0_convert_Load(EOS(STATIC_15151), java.lang.Object(ConvertRec.List(EOC, i3799, o2421)), java.lang.Object(ConvertRec.List(EOC, i3799, o2421))) :|: i3799 <= 0
f15151_0_convert_Load(EOS(STATIC_15151), java.lang.Object(ConvertRec.List(EOC, i3799, o2421)), java.lang.Object(ConvertRec.List(EOC, i3799, o2421))) -> f15153_0_convert_Load(EOS(STATIC_15153), java.lang.Object(ConvertRec.List(EOC, i3799, o2421)), java.lang.Object(ConvertRec.List(EOC, i3799, o2421))) :|: TRUE
f15153_0_convert_Load(EOS(STATIC_15153), java.lang.Object(ConvertRec.List(EOC, i3799, o2421)), java.lang.Object(ConvertRec.List(EOC, i3799, o2421))) -> f15155_0_convert_FieldAccess(EOS(STATIC_15155), java.lang.Object(ConvertRec.List(EOC, i3799, o2421)), java.lang.Object(ConvertRec.List(EOC, i3799, o2421))) :|: TRUE
f15155_0_convert_FieldAccess(EOS(STATIC_15155), java.lang.Object(ConvertRec.List(EOC, i3799, o2421)), java.lang.Object(ConvertRec.List(EOC, i3799, o2421))) -> f15157_0_convert_Load(EOS(STATIC_15157), java.lang.Object(ConvertRec.List(EOC, i3799, o2421)), o2421) :|: TRUE
f15157_0_convert_Load(EOS(STATIC_15157), java.lang.Object(ConvertRec.List(EOC, i3799, o2421)), o2421) -> f15159_0_convert_InvokeMethod(EOS(STATIC_15159), java.lang.Object(ConvertRec.List(EOC, i3799, o2421)), o2421) :|: TRUE
f15159_0_convert_InvokeMethod(EOS(STATIC_15159), java.lang.Object(ConvertRec.List(EOC, i3799, o2421)), o2421) -> f15161_0_convert_Load(EOS(STATIC_15161), o2421, java.lang.Object(ConvertRec.List(EOC, i3799, o2421)), o2421) :|: i3799 < 1
f15159_0_convert_InvokeMethod(EOS(STATIC_15159), java.lang.Object(ConvertRec.List(EOC, i3799, o2421)), o2421) -> f15161_1_convert_Load(EOS(STATIC_15161), java.lang.Object(ConvertRec.List(EOC, i3799, o2421)), o2421) :|: i3799 < 1
f15161_0_convert_Load(EOS(STATIC_15161), o2421, java.lang.Object(ConvertRec.List(EOC, i3799, o2421)), o2421) -> f15163_0_convert_Load(EOS(STATIC_15163), o2421, java.lang.Object(ConvertRec.List(EOC, i3799, o2421)), o2421) :|: TRUE
f15163_0_convert_Load(EOS(STATIC_15163), o2421, java.lang.Object(ConvertRec.List(EOC, i3799, o2421)), o2421) -> f15165_0_convert_Load(EOS(STATIC_15165), o2421, java.lang.Object(ConvertRec.List(EOC, i3799, o2421)), o2421) :|: TRUE
f15165_0_convert_Load(EOS(STATIC_15165), o2439, o2444, o2439) -> f15169_0_convert_Load(EOS(STATIC_15169), o2439, o2439) :|: TRUE
f15169_0_convert_Load(EOS(STATIC_15169), o2439, o2439) -> f15131_0_convert_Load(EOS(STATIC_15131), o2439, o2439) :|: TRUE
f15131_0_convert_Load(EOS(STATIC_15131), o2414, o2414) -> f15132_0_convert_NONNULL(EOS(STATIC_15132), o2414, o2414, o2414) :|: TRUE
f15143_0_convert_GT(EOS(STATIC_15143), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), i3800) -> f15152_0_convert_ConstantStackPush(EOS(STATIC_15152), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), java.lang.Object(ConvertRec.List(EOC, i3800, o2421))) :|: i3800 > 0
f15152_0_convert_ConstantStackPush(EOS(STATIC_15152), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), java.lang.Object(ConvertRec.List(EOC, i3800, o2421))) -> f15154_0_convert_New(EOS(STATIC_15154), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), 1) :|: TRUE
f15154_0_convert_New(EOS(STATIC_15154), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), matching1) -> f15156_0_convert_Duplicate(EOS(STATIC_15156), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), 1, java.lang.Object(ConvertRec.List(EOC, 0, NULL))) :|: TRUE && matching1 = 1
f15156_0_convert_Duplicate(EOS(STATIC_15156), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), matching1, java.lang.Object(ConvertRec.List(EOC, matching2, NULL))) -> f15158_0_convert_Load(EOS(STATIC_15158), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), 1, java.lang.Object(ConvertRec.List(EOC, 0, NULL)), java.lang.Object(ConvertRec.List(EOC, 0, NULL))) :|: TRUE && matching1 = 1 && matching2 = 0
f15158_0_convert_Load(EOS(STATIC_15158), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), matching1, java.lang.Object(ConvertRec.List(EOC, matching2, NULL)), java.lang.Object(ConvertRec.List(EOC, matching3, NULL))) -> f15160_0_convert_FieldAccess(EOS(STATIC_15160), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), 1, java.lang.Object(ConvertRec.List(EOC, 0, NULL)), java.lang.Object(ConvertRec.List(EOC, 0, NULL)), java.lang.Object(ConvertRec.List(EOC, i3800, o2421))) :|: TRUE && matching1 = 1 && matching2 = 0 && matching3 = 0
f15160_0_convert_FieldAccess(EOS(STATIC_15160), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), matching1, java.lang.Object(ConvertRec.List(EOC, matching2, NULL)), java.lang.Object(ConvertRec.List(EOC, matching3, NULL)), java.lang.Object(ConvertRec.List(EOC, i3800, o2421))) -> f15162_0_convert_ConstantStackPush(EOS(STATIC_15162), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), 1, java.lang.Object(ConvertRec.List(EOC, 0, NULL)), java.lang.Object(ConvertRec.List(EOC, 0, NULL)), i3800) :|: TRUE && matching1 = 1 && matching2 = 0 && matching3 = 0
f15162_0_convert_ConstantStackPush(EOS(STATIC_15162), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), matching1, java.lang.Object(ConvertRec.List(EOC, matching2, NULL)), java.lang.Object(ConvertRec.List(EOC, matching3, NULL)), i3800) -> f15164_0_convert_IntArithmetic(EOS(STATIC_15164), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), 1, java.lang.Object(ConvertRec.List(EOC, 0, NULL)), java.lang.Object(ConvertRec.List(EOC, 0, NULL)), i3800, 1) :|: TRUE && matching1 = 1 && matching2 = 0 && matching3 = 0
f15164_0_convert_IntArithmetic(EOS(STATIC_15164), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), matching1, java.lang.Object(ConvertRec.List(EOC, matching2, NULL)), java.lang.Object(ConvertRec.List(EOC, matching3, NULL)), i3800, matching4) -> f15166_0_convert_Load(EOS(STATIC_15166), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), 1, java.lang.Object(ConvertRec.List(EOC, 0, NULL)), java.lang.Object(ConvertRec.List(EOC, 0, NULL)), i3800 - 1) :|: i3800 > 0 && matching1 = 1 && matching2 = 0 && matching3 = 0 && matching4 = 1
f15166_0_convert_Load(EOS(STATIC_15166), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), matching1, java.lang.Object(ConvertRec.List(EOC, matching2, NULL)), java.lang.Object(ConvertRec.List(EOC, matching3, NULL)), i3811) -> f15167_0_convert_FieldAccess(EOS(STATIC_15167), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), 1, java.lang.Object(ConvertRec.List(EOC, 0, NULL)), java.lang.Object(ConvertRec.List(EOC, 0, NULL)), i3811, java.lang.Object(ConvertRec.List(EOC, i3800, o2421))) :|: TRUE && matching1 = 1 && matching2 = 0 && matching3 = 0
f15167_0_convert_FieldAccess(EOS(STATIC_15167), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), matching1, java.lang.Object(ConvertRec.List(EOC, matching2, NULL)), java.lang.Object(ConvertRec.List(EOC, matching3, NULL)), i3811, java.lang.Object(ConvertRec.List(EOC, i3800, o2421))) -> f15168_0_convert_InvokeMethod(EOS(STATIC_15168), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), 1, java.lang.Object(ConvertRec.List(EOC, 0, NULL)), java.lang.Object(ConvertRec.List(EOC, 0, NULL)), i3811, o2421) :|: TRUE && matching1 = 1 && matching2 = 0 && matching3 = 0
f15168_0_convert_InvokeMethod(EOS(STATIC_15168), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), matching1, java.lang.Object(ConvertRec.List(EOC, matching2, NULL)), java.lang.Object(ConvertRec.List(EOC, matching3, NULL)), i3811, o2421) -> f15171_0__init__Load(EOS(STATIC_15171), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), 1, java.lang.Object(ConvertRec.List(EOC, 0, NULL)), java.lang.Object(ConvertRec.List(EOC, 0, NULL)), i3811, o2421) :|: TRUE && matching1 = 1 && matching2 = 0 && matching3 = 0
f15171_0__init__Load(EOS(STATIC_15171), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), matching1, java.lang.Object(ConvertRec.List(EOC, matching2, NULL)), java.lang.Object(ConvertRec.List(EOC, matching3, NULL)), i3811, o2421) -> f15174_0__init__InvokeMethod(EOS(STATIC_15174), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), 1, java.lang.Object(ConvertRec.List(EOC, 0, NULL)), java.lang.Object(ConvertRec.List(EOC, 0, NULL)), i3811, o2421, java.lang.Object(ConvertRec.List(EOC, 0, NULL))) :|: TRUE && matching1 = 1 && matching2 = 0 && matching3 = 0
f15174_0__init__InvokeMethod(EOS(STATIC_15174), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), matching1, java.lang.Object(ConvertRec.List(EOC, matching2, NULL)), java.lang.Object(ConvertRec.List(EOC, matching3, NULL)), i3811, o2421, java.lang.Object(ConvertRec.List(EOC, matching4, NULL))) -> f15176_0__init__Load(EOS(STATIC_15176), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), 1, java.lang.Object(ConvertRec.List(EOC, 0, NULL)), java.lang.Object(ConvertRec.List(EOC, 0, NULL)), i3811, o2421) :|: TRUE && matching1 = 1 && matching2 = 0 && matching3 = 0 && matching4 = 0
f15176_0__init__Load(EOS(STATIC_15176), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), matching1, java.lang.Object(ConvertRec.List(EOC, matching2, NULL)), java.lang.Object(ConvertRec.List(EOC, matching3, NULL)), i3811, o2421) -> f15177_0__init__Load(EOS(STATIC_15177), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), 1, java.lang.Object(ConvertRec.List(EOC, 0, NULL)), java.lang.Object(ConvertRec.List(EOC, 0, NULL)), i3811, o2421, java.lang.Object(ConvertRec.List(EOC, 0, NULL))) :|: TRUE && matching1 = 1 && matching2 = 0 && matching3 = 0
f15177_0__init__Load(EOS(STATIC_15177), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), matching1, java.lang.Object(ConvertRec.List(EOC, matching2, NULL)), java.lang.Object(ConvertRec.List(EOC, matching3, NULL)), i3811, o2421, java.lang.Object(ConvertRec.List(EOC, matching4, NULL))) -> f15186_0__init__FieldAccess(EOS(STATIC_15186), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), 1, java.lang.Object(ConvertRec.List(EOC, 0, NULL)), java.lang.Object(ConvertRec.List(EOC, 0, NULL)), o2421, java.lang.Object(ConvertRec.List(EOC, 0, NULL)), i3811) :|: TRUE && matching1 = 1 && matching2 = 0 && matching3 = 0 && matching4 = 0
f15186_0__init__FieldAccess(EOS(STATIC_15186), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), matching1, java.lang.Object(ConvertRec.List(EOC, matching2, NULL)), java.lang.Object(ConvertRec.List(EOC, matching3, NULL)), o2421, java.lang.Object(ConvertRec.List(EOC, matching4, NULL)), i3811) -> f15188_0__init__Load(EOS(STATIC_15188), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), 1, java.lang.Object(ConvertRec.List(EOC, i3811, NULL)), java.lang.Object(ConvertRec.List(EOC, i3811, NULL)), o2421) :|: TRUE && matching1 = 1 && matching2 = 0 && matching3 = 0 && matching4 = 0
f15188_0__init__Load(EOS(STATIC_15188), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), matching1, java.lang.Object(ConvertRec.List(EOC, i3811, NULL)), java.lang.Object(ConvertRec.List(EOC, i3811, NULL)), o2421) -> f15190_0__init__Load(EOS(STATIC_15190), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), 1, java.lang.Object(ConvertRec.List(EOC, i3811, NULL)), o2421, java.lang.Object(ConvertRec.List(EOC, i3811, NULL))) :|: TRUE && matching1 = 1
f15190_0__init__Load(EOS(STATIC_15190), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), matching1, java.lang.Object(ConvertRec.List(EOC, i3811, NULL)), o2421, java.lang.Object(ConvertRec.List(EOC, i3811, NULL))) -> f15192_0__init__FieldAccess(EOS(STATIC_15192), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), 1, java.lang.Object(ConvertRec.List(EOC, i3811, NULL)), java.lang.Object(ConvertRec.List(EOC, i3811, NULL)), o2421) :|: TRUE && matching1 = 1
f15192_0__init__FieldAccess(EOS(STATIC_15192), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), matching1, java.lang.Object(ConvertRec.List(EOC, i3811, NULL)), java.lang.Object(ConvertRec.List(EOC, i3811, NULL)), o2421) -> f15193_0__init__Return(EOS(STATIC_15193), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), 1, java.lang.Object(ConvertRec.List(EOC, i3811, o2421))) :|: TRUE && matching1 = 1
f15193_0__init__Return(EOS(STATIC_15193), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), matching1, java.lang.Object(ConvertRec.List(EOC, i3811, o2421))) -> f15203_0_convert_Load(EOS(STATIC_15203), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), 1, java.lang.Object(ConvertRec.List(EOC, i3811, o2421))) :|: TRUE && matching1 = 1
f15203_0_convert_Load(EOS(STATIC_15203), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), matching1, java.lang.Object(ConvertRec.List(EOC, i3811, o2421))) -> f15205_0_convert_InvokeMethod(EOS(STATIC_15205), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), 1, java.lang.Object(ConvertRec.List(EOC, i3811, o2421))) :|: TRUE && matching1 = 1
f15205_0_convert_InvokeMethod(EOS(STATIC_15205), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), matching1, java.lang.Object(ConvertRec.List(EOC, i3811, o2421))) -> f15207_0_convert_Load(EOS(STATIC_15207), o2421, java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), java.lang.Object(ConvertRec.List(EOC, i3811, o2421))) :|: i3800 >= 1 && i3811 < i3800 && matching1 = 1
f15205_0_convert_InvokeMethod(EOS(STATIC_15205), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), matching1, java.lang.Object(ConvertRec.List(EOC, i3811, o2421))) -> f15207_1_convert_Load(EOS(STATIC_15207), java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), 1, java.lang.Object(ConvertRec.List(EOC, i3811, o2421))) :|: i3800 >= 1 && i3811 < i3800 && matching1 = 1
f15207_0_convert_Load(EOS(STATIC_15207), o2421, java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), java.lang.Object(ConvertRec.List(EOC, i3811, o2421))) -> f15209_0_convert_Load(EOS(STATIC_15209), o2421, java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), java.lang.Object(ConvertRec.List(EOC, i3811, o2421))) :|: TRUE
f15209_0_convert_Load(EOS(STATIC_15209), o2421, java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), java.lang.Object(ConvertRec.List(EOC, i3811, o2421))) -> f15210_0_convert_Load(EOS(STATIC_15210), o2421, java.lang.Object(ConvertRec.List(EOC, i3800, o2421)), java.lang.Object(ConvertRec.List(EOC, i3811, o2421))) :|: TRUE
f15210_0_convert_Load(EOS(STATIC_15210), o2642, o2643, java.lang.Object(ConvertRec.List(EOC, i3811, o2642))) -> f15219_0_convert_Load(EOS(STATIC_15219), o2643, o2642, java.lang.Object(ConvertRec.List(EOC, i3811, o2642))) :|: TRUE
f15219_0_convert_Load(EOS(STATIC_15219), o2643, o2653, java.lang.Object(ConvertRec.List(EOC, i3811, o2642))) -> f15220_0_convert_Load(EOS(STATIC_15220), java.lang.Object(ConvertRec.List(EOC, i3811, o2642)), java.lang.Object(ConvertRec.List(EOC, i3811, o2642))) :|: TRUE
f15220_0_convert_Load(EOS(STATIC_15220), java.lang.Object(ConvertRec.List(EOC, i3811, o2642)), java.lang.Object(ConvertRec.List(EOC, i3811, o2642))) -> f15131_0_convert_Load(EOS(STATIC_15131), java.lang.Object(ConvertRec.List(EOC, i3811, o2642)), java.lang.Object(ConvertRec.List(EOC, i3811, o2642))) :|: TRUE
Combined rules. Obtained 4 IRulesP rules:
f15132_0_convert_NONNULL(EOS(STATIC_15132), java.lang.Object(ConvertRec.List(EOC, i3766:0, o2421:0)), java.lang.Object(ConvertRec.List(EOC, i3766:0, o2421:0)), java.lang.Object(ConvertRec.List(EOC, i3766:0, o2421:0))) -> f15132_0_convert_NONNULL(EOS(STATIC_15132), java.lang.Object(ConvertRec.List(EOC, i3766:0 - 1, o2421:0)), java.lang.Object(ConvertRec.List(EOC, i3766:0 - 1, o2421:0)), java.lang.Object(ConvertRec.List(EOC, i3766:0 - 1, o2421:0))) :|: i3766:0 > 0 && i3766:0 - 1 < i3766:0
f15132_0_convert_NONNULL(EOS(STATIC_15132), java.lang.Object(ConvertRec.List(EOC, i3766:0, o2421:0)), java.lang.Object(ConvertRec.List(EOC, i3766:0, o2421:0)), java.lang.Object(ConvertRec.List(EOC, i3766:0, o2421:0))) -> f15132_0_convert_NONNULL(EOS(STATIC_15132), o2421:0, o2421:0, o2421:0) :|: i3766:0 < 1
Removed following non-SCC rules:
f15132_0_convert_NONNULL(EOS(STATIC_15132), java.lang.Object(ConvertRec.List(EOC, i3766:0, o2421:0)), java.lang.Object(ConvertRec.List(EOC, i3766:0, o2421:0)), java.lang.Object(ConvertRec.List(EOC, i3766:0, o2421:0))) -> f15161_1_convert_Load(EOS(STATIC_15161), java.lang.Object(ConvertRec.List(EOC, i3766:0, o2421:0)), o2421:0) :|: i3766:0 < 1
f15132_0_convert_NONNULL(EOS(STATIC_15132), java.lang.Object(ConvertRec.List(EOC, i3766:0, o2421:0)), java.lang.Object(ConvertRec.List(EOC, i3766:0, o2421:0)), java.lang.Object(ConvertRec.List(EOC, i3766:0, o2421:0))) -> f15207_1_convert_Load(EOS(STATIC_15207), java.lang.Object(ConvertRec.List(EOC, i3766:0, o2421:0)), 1, java.lang.Object(ConvertRec.List(EOC, i3766:0 - 1, o2421:0))) :|: i3766:0 > 0 && i3766:0 - 1 < i3766:0
Filtered constant ground arguments:
   f15132_0_convert_NONNULL(x1, x2, x3, x4) -> f15132_0_convert_NONNULL(x2, x3, x4)
   EOS(x1) -> EOS
   ConvertRec.List(x1, x2, x3) -> ConvertRec.List(x2, x3)
Filtered duplicate arguments:
   f15132_0_convert_NONNULL(x1, x2, x3) -> f15132_0_convert_NONNULL(x3)
Finished conversion. Obtained 2 rules.P rules:
f15132_0_convert_NONNULL(java.lang.Object(ConvertRec.List(i3766:0, o2421:0))) -> f15132_0_convert_NONNULL(java.lang.Object(ConvertRec.List(i3766:0 - 1, o2421:0))) :|: i3766:0 > 0 && i3766:0 - 1 < i3766:0
f15132_0_convert_NONNULL(java.lang.Object(ConvertRec.List(i3766:0, o2421:0))) -> f15132_0_convert_NONNULL(o2421:0) :|: i3766:0 < 1

----------------------------------------

(9)
Obligation:
Rules:
f15132_0_convert_NONNULL(java.lang.Object(ConvertRec.List(i3766:0, o2421:0))) -> f15132_0_convert_NONNULL(java.lang.Object(ConvertRec.List(i3766:0 - 1, o2421:0))) :|: i3766:0 > 0 && i3766:0 - 1 < i3766:0
f15132_0_convert_NONNULL(java.lang.Object(ConvertRec.List(x, x1))) -> f15132_0_convert_NONNULL(x1) :|: x < 1

----------------------------------------

(10) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(11)
Obligation:
Rules:
f15132_0_convert_NONNULL(java.lang.Object(ConvertRec.List(i3766:0, o2421:0))) -> f15132_0_convert_NONNULL(java.lang.Object(ConvertRec.List(arith, o2421:0))) :|: i3766:0 > 0 && i3766:0 - 1 < i3766:0 && arith = i3766:0 - 1
f15132_0_convert_NONNULL(java.lang.Object(ConvertRec.List(x, x1))) -> f15132_0_convert_NONNULL(x1) :|: x < 1

----------------------------------------

(12) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f15132_0_convert_NONNULL(java.lang.Object(ConvertRec.List(i3766:0, o2421:0))) -> f15132_0_convert_NONNULL(java.lang.Object(ConvertRec.List(arith, o2421:0))) :|: i3766:0 > 0 && i3766:0 - 1 < i3766:0 && arith = i3766:0 - 1
(2) f15132_0_convert_NONNULL(java.lang.Object(ConvertRec.List(x, x1))) -> f15132_0_convert_NONNULL(x1) :|: x < 1

Arcs:
(1) -> (1), (2)
(2) -> (1), (2)

This digraph is fully evaluated!
----------------------------------------

(13)
Obligation:

Termination digraph:
Nodes:
(1) f15132_0_convert_NONNULL(java.lang.Object(ConvertRec.List(i3766:0, o2421:0))) -> f15132_0_convert_NONNULL(java.lang.Object(ConvertRec.List(arith, o2421:0))) :|: i3766:0 > 0 && i3766:0 - 1 < i3766:0 && arith = i3766:0 - 1
(2) f15132_0_convert_NONNULL(java.lang.Object(ConvertRec.List(x, x1))) -> f15132_0_convert_NONNULL(x1) :|: x < 1

Arcs:
(1) -> (1), (2)
(2) -> (1), (2)

This digraph is fully evaluated!

----------------------------------------

(14) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(15)
Obligation:
Rules:
f15132_0_convert_NONNULL(java.lang.Object(ConvertRec.List(i3766:0:0, o2421:0:0))) -> f15132_0_convert_NONNULL(java.lang.Object(ConvertRec.List(i3766:0:0 - 1, o2421:0:0))) :|: i3766:0:0 > 0 && i3766:0:0 - 1 < i3766:0:0
f15132_0_convert_NONNULL(java.lang.Object(ConvertRec.List(x:0, x1:0))) -> f15132_0_convert_NONNULL(x1:0) :|: x:0 < 1

----------------------------------------

(16) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f15132_0_convert_NONNULL(VARIABLE)
java.lang.Object(VARIABLE)
ConvertRec.List(INTEGER, VARIABLE)
Removed predefined arithmetic.The following proof was generated: 
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination of the given IRSwT could not be shown:



- IRSwT
  - IRSwTToQDPProof

Rules:
f15132_0_convert_NONNULL(java.lang.Object(ConvertRec.List(o2421:0:0))) -> f15132_0_convert_NONNULL(java.lang.Object(ConvertRec.List(o2421:0:0)))
f15132_0_convert_NONNULL(java.lang.Object(ConvertRec.List(x1:0))) -> f15132_0_convert_NONNULL(x1:0)

Removed the integers and created a QDP-Problem.

- IRSwT
  - IRSwTToQDPProof
    - QDP
      - MRRProof

Q DP problem:
The TRS P consists of the following rules:

   f15132_0_convert_NONNULL(java.lang.Object(ConvertRec.List(o2421:0:0))) -> f15132_0_convert_NONNULL(java.lang.Object(ConvertRec.List(o2421:0:0)))
   f15132_0_convert_NONNULL(java.lang.Object(ConvertRec.List(x1:0))) -> f15132_0_convert_NONNULL(x1:0)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
By using the rule removal processor [LPAR04] with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented.

Strictly oriented dependency pairs:

   f15132_0_convert_NONNULL(java.lang.Object(ConvertRec.List(x1:0))) -> f15132_0_convert_NONNULL(x1:0)


Used ordering: Knuth-Bendix order [KBO] with precedence:ConvertRec.List_1 > java.lang.Object_1 > f15132_0_convert_NONNULL_1

and weight map:

   f15132_0_convert_NONNULL_1=1
   java.lang.Object_1=1
   ConvertRec.List_1=1

The variable weight is 1


- IRSwT
  - IRSwTToQDPProof
    - QDP
      - MRRProof
        - QDP

Q DP problem:
The TRS P consists of the following rules:

   f15132_0_convert_NONNULL(java.lang.Object(ConvertRec.List(o2421:0:0))) -> f15132_0_convert_NONNULL(java.lang.Object(ConvertRec.List(o2421:0:0)))

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.


----------------------------------------

(17)
Obligation:
Rules:
f15132_0_convert_NONNULL(java.lang.Object(ConvertRec.List(i3766:0:0, o2421:0:0))) -> f15132_0_convert_NONNULL(java.lang.Object(ConvertRec.List(i3766:0:0 - 1, o2421:0:0))) :|: i3766:0:0 > 0 && i3766:0:0 - 1 < i3766:0:0

----------------------------------------

(18) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f15132_0_convert_NONNULL(java.lang.Object(ConvertRec.List(i3766:0:0, o2421:0:0))) -> f15132_0_convert_NONNULL(java.lang.Object(ConvertRec.List(i3766:0:0 - 1, o2421:0:0))) :|: i3766:0:0 > 0 && i3766:0:0 - 1 < i3766:0:0

Arcs:
(1) -> (1)

This digraph is fully evaluated!
----------------------------------------

(19)
Obligation:

Termination digraph:
Nodes:
(1) f15132_0_convert_NONNULL(java.lang.Object(ConvertRec.List(i3766:0:0, o2421:0:0))) -> f15132_0_convert_NONNULL(java.lang.Object(ConvertRec.List(i3766:0:0 - 1, o2421:0:0))) :|: i3766:0:0 > 0 && i3766:0:0 - 1 < i3766:0:0

Arcs:
(1) -> (1)

This digraph is fully evaluated!

----------------------------------------

(20) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   ConvertRec.List(x1, x2) -> ConvertRec.List(x1)

----------------------------------------

(21)
Obligation:
Rules:
f15132_0_convert_NONNULL(java.lang.Object(ConvertRec.List(i3766:0:0))) -> f15132_0_convert_NONNULL(java.lang.Object(ConvertRec.List(i3766:0:0 - 1))) :|: i3766:0:0 > 0 && i3766:0:0 - 1 < i3766:0:0

----------------------------------------

(22) IRSwTOrderProof (EQUIVALENT)
[f15132_0_convert_NONNULL(x)] = -10 + 5*x
[java.lang.Object(x1)] = 0 + 1*x1
[ConvertRec.List(x2)] = 0 + 2*x2

The following rules are decreasing: 
f15132_0_convert_NONNULL(java.lang.Object(ConvertRec.List(i3766:0:0))) -> f15132_0_convert_NONNULL(java.lang.Object(ConvertRec.List(i3766:0:0 - 1))) :|: i3766:0:0 > 0 && i3766:0:0 - 1 < i3766:0:0

The following rules are bounded: 
f15132_0_convert_NONNULL(java.lang.Object(ConvertRec.List(i3766:0:0))) -> f15132_0_convert_NONNULL(java.lang.Object(ConvertRec.List(i3766:0:0 - 1))) :|: i3766:0:0 > 0 && i3766:0:0 - 1 < i3766:0:0

----------------------------------------

(23)
YES

----------------------------------------

(24)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: ConvertRec.ConvertRec.createList(I)LConvertRec/List;
SCC calls the following helper methods: ConvertRec.ConvertRec.createList(I)LConvertRec/List;
Performed SCC analyses:
*Used field analysis yielded the following read fields:
*java.lang.String: [count]
*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(25) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 61 IRulesP rules:
f2109_0_createList_GT(EOS(STATIC_2109(java.lang.Object(o137sub), i168)), i170, i170, i170) -> f2130_0_createList_GT(EOS(STATIC_2130(java.lang.Object(o137sub), i168)), i170, i170, i170) :|: TRUE
f2130_0_createList_GT(EOS(STATIC_2130(java.lang.Object(o137sub), i168)), i170, i170, i170) -> f2151_0_createList_New(EOS(STATIC_2151(java.lang.Object(o137sub), i168)), i170, i170) :|: i170 > 0
f2151_0_createList_New(EOS(STATIC_2151(java.lang.Object(o137sub), i168)), i170, i170) -> f2169_0_createList_Duplicate(EOS(STATIC_2169(java.lang.Object(o137sub), i168)), i170, i170) :|: TRUE
f2169_0_createList_Duplicate(EOS(STATIC_2169(java.lang.Object(o137sub), i168)), i170, i170) -> f2192_0_createList_InvokeMethod(EOS(STATIC_2192(java.lang.Object(o137sub), i168)), i170, i170) :|: TRUE
f2192_0_createList_InvokeMethod(EOS(STATIC_2192(java.lang.Object(o137sub), i168)), i170, i170) -> f2255_0_random_FieldAccess(EOS(STATIC_2255(java.lang.Object(o137sub), i168)), i170, i170) :|: TRUE
f2255_0_random_FieldAccess(EOS(STATIC_2255(java.lang.Object(o137sub), i168)), i170, i170) -> f2405_0_random_ArrayLength(EOS(STATIC_2405(java.lang.Object(o137sub), i168)), i170, i170, java.lang.Object(o137sub)) :|: TRUE
f2405_0_random_ArrayLength(EOS(STATIC_2405(java.lang.Object(ARRAY(i205)), i168)), i170, i170, java.lang.Object(ARRAY(i205))) -> f2415_0_random_ArrayLength(EOS(STATIC_2415(java.lang.Object(ARRAY(i205)), i168)), i170, i170, java.lang.Object(ARRAY(i205))) :|: i205 >= 0
f2415_0_random_ArrayLength(EOS(STATIC_2415(java.lang.Object(ARRAY(i205)), i168)), i170, i170, java.lang.Object(ARRAY(i205))) -> f2423_0_random_FieldAccess(EOS(STATIC_2423(java.lang.Object(ARRAY(i205)), i168)), i170, i170, i205) :|: i205 >= 0
f2423_0_random_FieldAccess(EOS(STATIC_2423(java.lang.Object(ARRAY(i205)), i168)), i170, i170, i205) -> f2427_0_random_GT(EOS(STATIC_2427(java.lang.Object(ARRAY(i205)), i168)), i170, i170, i205, i168) :|: TRUE
f2427_0_random_GT(EOS(STATIC_2427(java.lang.Object(ARRAY(i205)), i168)), i170, i170, i205, i168) -> f2436_0_random_GT(EOS(STATIC_2436(java.lang.Object(ARRAY(i205)), i168)), i170, i170, i205, i168) :|: i205 > i168
f2427_0_random_GT(EOS(STATIC_2427(java.lang.Object(ARRAY(i205)), i168)), i170, i170, i205, i168) -> f2437_0_random_GT(EOS(STATIC_2437(java.lang.Object(ARRAY(i205)), i168)), i170, i170, i205, i168) :|: i205 <= i168
f2436_0_random_GT(EOS(STATIC_2436(java.lang.Object(ARRAY(i205)), i168)), i170, i170, i205, i168) -> f2455_0_random_FieldAccess(EOS(STATIC_2455(java.lang.Object(ARRAY(i205)), i168)), i170, i170) :|: i205 > i168
f2455_0_random_FieldAccess(EOS(STATIC_2455(java.lang.Object(ARRAY(i205)), i168)), i170, i170) -> f2472_0_random_FieldAccess(EOS(STATIC_2472(java.lang.Object(ARRAY(i205)), i168)), i170, i170, java.lang.Object(ARRAY(i205))) :|: TRUE
f2472_0_random_FieldAccess(EOS(STATIC_2472(java.lang.Object(ARRAY(i205)), i168)), i170, i170, java.lang.Object(ARRAY(i205))) -> f2533_0_random_ArrayAccess(EOS(STATIC_2533(java.lang.Object(ARRAY(i205)), i168)), i170, i170, java.lang.Object(ARRAY(i205)), i168) :|: TRUE
f2533_0_random_ArrayAccess(EOS(STATIC_2533(java.lang.Object(ARRAY(i205)), i168)), i170, i170, java.lang.Object(ARRAY(i205)), i168) -> f2592_0_random_ArrayAccess(EOS(STATIC_2592(java.lang.Object(ARRAY(i205)), i168)), i170, i170, java.lang.Object(ARRAY(i205)), i168) :|: TRUE
f2592_0_random_ArrayAccess(EOS(STATIC_2592(java.lang.Object(ARRAY(i205)), i168)), i170, i170, java.lang.Object(ARRAY(i205)), i168) -> f2629_0_random_Store(EOS(STATIC_2629(java.lang.Object(ARRAY(i205)), i168)), i170, i170, o164) :|: i168 < i205
f2629_0_random_Store(EOS(STATIC_2629(java.lang.Object(ARRAY(i205)), i168)), i170, i170, o164) -> f2652_0_random_FieldAccess(EOS(STATIC_2652(java.lang.Object(ARRAY(i205)), i168)), i170, i170, o164) :|: TRUE
f2652_0_random_FieldAccess(EOS(STATIC_2652(java.lang.Object(ARRAY(i205)), i168)), i170, i170, o164) -> f2670_0_random_ConstantStackPush(EOS(STATIC_2670(java.lang.Object(ARRAY(i205)), i168)), i170, i170, o164, i168) :|: TRUE
f2670_0_random_ConstantStackPush(EOS(STATIC_2670(java.lang.Object(ARRAY(i205)), i168)), i170, i170, o164, i168) -> f2680_0_random_IntArithmetic(EOS(STATIC_2680(java.lang.Object(ARRAY(i205)), i168)), i170, i170, o164, i168, 1) :|: TRUE
f2680_0_random_IntArithmetic(EOS(STATIC_2680(java.lang.Object(ARRAY(i205)), i168)), i170, i170, o164, i168, matching1) -> f2701_0_random_FieldAccess(EOS(STATIC_2701(java.lang.Object(ARRAY(i205)), i168)), i170, i170, o164, i168 + 1) :|: i168 >= 0 && matching1 = 1
f2701_0_random_FieldAccess(EOS(STATIC_2701(java.lang.Object(ARRAY(i205)), i168)), i170, i170, o164, i234) -> f2725_0_random_Load(EOS(STATIC_2725(java.lang.Object(ARRAY(i205)), i234)), i170, i170, o164) :|: TRUE
f2725_0_random_Load(EOS(STATIC_2725(java.lang.Object(ARRAY(i205)), i234)), i170, i170, o164) -> f2735_0_random_NONNULL(EOS(STATIC_2735(java.lang.Object(ARRAY(i205)), i234)), i170, i170, o164, o164) :|: TRUE
f2735_0_random_NONNULL(EOS(STATIC_2735(java.lang.Object(ARRAY(i205)), i234)), i170, i170, java.lang.Object(o202sub), java.lang.Object(o202sub)) -> f2862_0_random_NONNULL(EOS(STATIC_2862(java.lang.Object(ARRAY(i205)), i234)), i170, i170, java.lang.Object(o202sub), java.lang.Object(o202sub)) :|: TRUE
f2735_0_random_NONNULL(EOS(STATIC_2735(java.lang.Object(ARRAY(i205)), i234)), i170, i170, NULL, NULL) -> f2863_0_random_NONNULL(EOS(STATIC_2863(java.lang.Object(ARRAY(i205)), i234)), i170, i170, NULL, NULL) :|: TRUE
f2862_0_random_NONNULL(EOS(STATIC_2862(java.lang.Object(ARRAY(i205)), i234)), i170, i170, java.lang.Object(o202sub), java.lang.Object(o202sub)) -> f5175_0_random_Load(EOS(STATIC_5175(java.lang.Object(ARRAY(i205)), i234)), i170, i170, java.lang.Object(o202sub)) :|: TRUE
f5175_0_random_Load(EOS(STATIC_5175(java.lang.Object(ARRAY(i205)), i234)), i170, i170, java.lang.Object(o202sub)) -> f5186_0_random_InvokeMethod(EOS(STATIC_5186(java.lang.Object(ARRAY(i205)), i234)), i170, i170, java.lang.Object(o202sub)) :|: TRUE
f5186_0_random_InvokeMethod(EOS(STATIC_5186(java.lang.Object(ARRAY(i205)), i234)), i170, i170, java.lang.Object(o304sub)) -> f5202_0_random_InvokeMethod(EOS(STATIC_5202(java.lang.Object(ARRAY(i205)), i234)), i170, i170, java.lang.Object(o304sub)) :|: TRUE
f5202_0_random_InvokeMethod(EOS(STATIC_5202(java.lang.Object(ARRAY(i205)), i234)), i170, i170, java.lang.Object(o304sub)) -> f5208_0_length_Load(EOS(STATIC_5208(java.lang.Object(ARRAY(i205)), i234)), i170, i170, java.lang.Object(o304sub)) :|: TRUE
f5208_0_length_Load(EOS(STATIC_5208(java.lang.Object(ARRAY(i205)), i234)), i170, i170, java.lang.Object(o304sub)) -> f5247_0_length_FieldAccess(EOS(STATIC_5247(java.lang.Object(ARRAY(i205)), i234)), i170, i170, java.lang.Object(o304sub)) :|: TRUE
f5247_0_length_FieldAccess(EOS(STATIC_5247(java.lang.Object(ARRAY(i205)), i234)), i170, i170, java.lang.Object(java.lang.String(EOC, i416))) -> f5260_0_length_FieldAccess(EOS(STATIC_5260(java.lang.Object(ARRAY(i205)), i234)), i170, i170, java.lang.Object(java.lang.String(EOC, i416))) :|: TRUE
f5260_0_length_FieldAccess(EOS(STATIC_5260(java.lang.Object(ARRAY(i205)), i234)), i170, i170, java.lang.Object(java.lang.String(EOC, i416))) -> f5278_0_length_Return(EOS(STATIC_5278(java.lang.Object(ARRAY(i205)), i234)), i170, i170) :|: TRUE
f5278_0_length_Return(EOS(STATIC_5278(java.lang.Object(ARRAY(i205)), i234)), i170, i170) -> f5300_0_random_Return(EOS(STATIC_5300(java.lang.Object(ARRAY(i205)), i234)), i170, i170) :|: TRUE
f5300_0_random_Return(EOS(STATIC_5300(java.lang.Object(ARRAY(i205)), i234)), i170, i170) -> f5308_0_createList_Load(EOS(STATIC_5308(java.lang.Object(ARRAY(i205)), i234)), i170, i170) :|: TRUE
f5308_0_createList_Load(EOS(STATIC_5308(java.lang.Object(ARRAY(i205)), i234)), i170, i170) -> f5314_0_createList_ConstantStackPush(EOS(STATIC_5314(java.lang.Object(ARRAY(i205)), i234)), i170, i170) :|: TRUE
f5314_0_createList_ConstantStackPush(EOS(STATIC_5314(java.lang.Object(ARRAY(i205)), i234)), i170, i170) -> f5337_0_createList_IntArithmetic(EOS(STATIC_5337(java.lang.Object(ARRAY(i205)), i234)), i170, i170, 1) :|: TRUE
f5337_0_createList_IntArithmetic(EOS(STATIC_5337(java.lang.Object(ARRAY(i205)), i234)), i170, i170, matching1) -> f6593_0_createList_InvokeMethod(EOS(STATIC_6593(java.lang.Object(ARRAY(i205)), i234)), i170, i170 - 1) :|: i170 > 0 && matching1 = 1
f6593_0_createList_InvokeMethod(EOS(STATIC_6593(java.lang.Object(ARRAY(i205)), i234)), i170, i501) -> f6615_0_createList_Load(EOS(STATIC_6615(java.lang.Object(ARRAY(i205)), i234)), i501, i501) :|: i170 >= 1 && i234 >= 1 && i205 >= 1 && i234 <= i205 && i501 < i170
f6593_0_createList_InvokeMethod(EOS(STATIC_6593(java.lang.Object(ARRAY(i205)), i234)), i170, i501) -> f6615_1_createList_Load(EOS(STATIC_6615(java.lang.Object(ARRAY(i205)), i234)), i170, i501) :|: i170 >= 1 && i234 >= 1 && i205 >= 1 && i234 <= i205 && i501 < i170
f6615_0_createList_Load(EOS(STATIC_6615(java.lang.Object(ARRAY(i205)), i234)), i501, i501) -> f6738_0_createList_Load(EOS(STATIC_6738(java.lang.Object(ARRAY(i205)), i234)), i501, i501) :|: TRUE
f6738_0_createList_Load(EOS(STATIC_6738(java.lang.Object(ARRAY(i205)), i234)), i501, i501) -> f2093_0_createList_Load(EOS(STATIC_2093(java.lang.Object(ARRAY(i205)), i234)), i501, i501) :|: TRUE
f2093_0_createList_Load(EOS(STATIC_2093(java.lang.Object(o137sub), i168)), i169, i169) -> f2109_0_createList_GT(EOS(STATIC_2109(java.lang.Object(o137sub), i168)), i169, i169, i169) :|: TRUE
f2863_0_random_NONNULL(EOS(STATIC_2863(java.lang.Object(ARRAY(i205)), i234)), i170, i170, NULL, NULL) -> f5176_0_random_ConstantStackPush(EOS(STATIC_5176(java.lang.Object(ARRAY(i205)), i234)), i170, i170) :|: TRUE
f5176_0_random_ConstantStackPush(EOS(STATIC_5176(java.lang.Object(ARRAY(i205)), i234)), i170, i170) -> f5187_0_random_Return(EOS(STATIC_5187(java.lang.Object(ARRAY(i205)), i234)), i170, i170) :|: TRUE
f5187_0_random_Return(EOS(STATIC_5187(java.lang.Object(ARRAY(i205)), i234)), i170, i170) -> f5203_0_createList_Load(EOS(STATIC_5203(java.lang.Object(ARRAY(i205)), i234)), i170, i170) :|: TRUE
f5203_0_createList_Load(EOS(STATIC_5203(java.lang.Object(ARRAY(i205)), i234)), i170, i170) -> f5209_0_createList_ConstantStackPush(EOS(STATIC_5209(java.lang.Object(ARRAY(i205)), i234)), i170, i170) :|: TRUE
f5209_0_createList_ConstantStackPush(EOS(STATIC_5209(java.lang.Object(ARRAY(i205)), i234)), i170, i170) -> f5224_0_createList_IntArithmetic(EOS(STATIC_5224(java.lang.Object(ARRAY(i205)), i234)), i170, i170, 1) :|: TRUE
f5224_0_createList_IntArithmetic(EOS(STATIC_5224(java.lang.Object(ARRAY(i205)), i234)), i170, i170, matching1) -> f5249_0_createList_InvokeMethod(EOS(STATIC_5249(java.lang.Object(ARRAY(i205)), i234)), i170, i170 - 1) :|: i170 > 0 && matching1 = 1
f5249_0_createList_InvokeMethod(EOS(STATIC_5249(java.lang.Object(ARRAY(i205)), i234)), i170, i411) -> f5263_0_createList_Load(EOS(STATIC_5263(java.lang.Object(ARRAY(i205)), i234)), i411, i411) :|: i170 >= 1 && i234 >= 1 && i205 >= 1 && i234 <= i205 && i411 < i170
f5249_0_createList_InvokeMethod(EOS(STATIC_5249(java.lang.Object(ARRAY(i205)), i234)), i170, i411) -> f5263_1_createList_Load(EOS(STATIC_5263(java.lang.Object(ARRAY(i205)), i234)), i170, i411) :|: i170 >= 1 && i234 >= 1 && i205 >= 1 && i234 <= i205 && i411 < i170
f5263_0_createList_Load(EOS(STATIC_5263(java.lang.Object(ARRAY(i205)), i234)), i411, i411) -> f5285_0_createList_Load(EOS(STATIC_5285(java.lang.Object(ARRAY(i205)), i234)), i411, i411) :|: TRUE
f5285_0_createList_Load(EOS(STATIC_5285(java.lang.Object(ARRAY(i205)), i234)), i411, i411) -> f2093_0_createList_Load(EOS(STATIC_2093(java.lang.Object(ARRAY(i205)), i234)), i411, i411) :|: TRUE
f2437_0_random_GT(EOS(STATIC_2437(java.lang.Object(ARRAY(i205)), i168)), i170, i170, i205, i168) -> f2463_0_random_ConstantStackPush(EOS(STATIC_2463(java.lang.Object(ARRAY(i205)), i168)), i170, i170) :|: i205 <= i168
f2463_0_random_ConstantStackPush(EOS(STATIC_2463(java.lang.Object(ARRAY(i205)), i168)), i170, i170) -> f2473_0_random_Return(EOS(STATIC_2473(java.lang.Object(ARRAY(i205)), i168)), i170, i170) :|: TRUE
f2473_0_random_Return(EOS(STATIC_2473(java.lang.Object(ARRAY(i205)), i168)), i170, i170) -> f2536_0_createList_Load(EOS(STATIC_2536(java.lang.Object(ARRAY(i205)), i168)), i170, i170) :|: TRUE
f2536_0_createList_Load(EOS(STATIC_2536(java.lang.Object(ARRAY(i205)), i168)), i170, i170) -> f2594_0_createList_ConstantStackPush(EOS(STATIC_2594(java.lang.Object(ARRAY(i205)), i168)), i170, i170) :|: TRUE
f2594_0_createList_ConstantStackPush(EOS(STATIC_2594(java.lang.Object(ARRAY(i205)), i168)), i170, i170) -> f2636_0_createList_IntArithmetic(EOS(STATIC_2636(java.lang.Object(ARRAY(i205)), i168)), i170, i170, 1) :|: TRUE
f2636_0_createList_IntArithmetic(EOS(STATIC_2636(java.lang.Object(ARRAY(i205)), i168)), i170, i170, matching1) -> f2657_0_createList_InvokeMethod(EOS(STATIC_2657(java.lang.Object(ARRAY(i205)), i168)), i170, i170 - 1) :|: i170 > 0 && matching1 = 1
f2657_0_createList_InvokeMethod(EOS(STATIC_2657(java.lang.Object(ARRAY(i205)), i168)), i170, i227) -> f2672_0_createList_Load(EOS(STATIC_2672(java.lang.Object(ARRAY(i205)), i168)), i227, i227) :|: i170 >= 1 && i205 <= i168 && i227 < i170
f2657_0_createList_InvokeMethod(EOS(STATIC_2657(java.lang.Object(ARRAY(i205)), i168)), i170, i227) -> f2672_1_createList_Load(EOS(STATIC_2672(java.lang.Object(ARRAY(i205)), i168)), i170, i227) :|: i170 >= 1 && i205 <= i168 && i227 < i170
f2672_0_createList_Load(EOS(STATIC_2672(java.lang.Object(ARRAY(i205)), i168)), i227, i227) -> f2684_0_createList_Load(EOS(STATIC_2684(java.lang.Object(ARRAY(i205)), i168)), i227, i227) :|: TRUE
f2684_0_createList_Load(EOS(STATIC_2684(java.lang.Object(ARRAY(i205)), i168)), i227, i227) -> f2093_0_createList_Load(EOS(STATIC_2093(java.lang.Object(ARRAY(i205)), i168)), i227, i227) :|: TRUE
Combined rules. Obtained 5 IRulesP rules:
f2109_0_createList_GT(EOS(STATIC_2109(java.lang.Object(ARRAY(i205:0)), i168:0)), i170:0, i170:0, i170:0) -> f2109_0_createList_GT(EOS(STATIC_2109(java.lang.Object(ARRAY(i205:0)), i168:0 + 1)), i170:0 - 1, i170:0 - 1, i170:0 - 1) :|: i205:0 > 0 && i170:0 > 0 && i205:0 > i168:0 && i168:0 > -1 && i205:0 >= i168:0 + 1 && i170:0 - 1 < i170:0
f2109_0_createList_GT(EOS(STATIC_2109(java.lang.Object(ARRAY(i205:0)), i168:0)), i170:0, i170:0, i170:0) -> f2109_0_createList_GT(EOS(STATIC_2109(java.lang.Object(ARRAY(i205:0)), i168:0)), i170:0 - 1, i170:0 - 1, i170:0 - 1) :|: i170:0 > 0 && i205:0 > -1 && i205:0 <= i168:0 && i170:0 - 1 < i170:0
Removed following non-SCC rules:
f2109_0_createList_GT(EOS(STATIC_2109(java.lang.Object(ARRAY(i205:0)), i168:0)), i170:0, i170:0, i170:0) -> f6615_1_createList_Load(EOS(STATIC_6615(java.lang.Object(ARRAY(i205:0)), i168:0 + 1)), i170:0, i170:0 - 1) :|: i205:0 > 0 && i170:0 > 0 && i205:0 > i168:0 && i168:0 > -1 && i205:0 >= i168:0 + 1 && i170:0 - 1 < i170:0
f2109_0_createList_GT(EOS(STATIC_2109(java.lang.Object(ARRAY(i205:0)), i168:0)), i170:0, i170:0, i170:0) -> f5263_1_createList_Load(EOS(STATIC_5263(java.lang.Object(ARRAY(i205:0)), i168:0 + 1)), i170:0, i170:0 - 1) :|: i205:0 > 0 && i170:0 > 0 && i205:0 > i168:0 && i168:0 > -1 && i205:0 >= i168:0 + 1 && i170:0 - 1 < i170:0
f2109_0_createList_GT(EOS(STATIC_2109(java.lang.Object(ARRAY(i205:0)), i168:0)), i170:0, i170:0, i170:0) -> f2672_1_createList_Load(EOS(STATIC_2672(java.lang.Object(ARRAY(i205:0)), i168:0)), i170:0, i170:0 - 1) :|: i170:0 > 0 && i205:0 > -1 && i205:0 <= i168:0 && i170:0 - 1 < i170:0
Filtered duplicate arguments:
   f2109_0_createList_GT(x1, x2, x3, x4) -> f2109_0_createList_GT(x1, x4)
Finished conversion. Obtained 2 rules.P rules:
f2109_0_createList_GT(i170:0, i205:0, i168:0) -> f2109_0_createList_GT(i170:0 - 1, i205:0, i168:0 + 1) :|: i170:0 > 0 && i205:0 > 0 && i205:0 > i168:0 && i168:0 > -1 && i170:0 - 1 < i170:0 && i205:0 >= i168:0 + 1
f2109_0_createList_GT(i170:0, i205:0, i168:0) -> f2109_0_createList_GT(i170:0 - 1, i205:0, i168:0) :|: i205:0 > -1 && i170:0 > 0 && i170:0 - 1 < i170:0 && i205:0 <= i168:0

----------------------------------------

(26)
Obligation:
Rules:
f2109_0_createList_GT(i170:0, i205:0, i168:0) -> f2109_0_createList_GT(i170:0 - 1, i205:0, i168:0 + 1) :|: i170:0 > 0 && i205:0 > 0 && i205:0 > i168:0 && i168:0 > -1 && i170:0 - 1 < i170:0 && i205:0 >= i168:0 + 1
f2109_0_createList_GT(x, x1, x2) -> f2109_0_createList_GT(x - 1, x1, x2) :|: x1 > -1 && x > 0 && x - 1 < x && x1 <= x2

----------------------------------------

(27) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(28)
Obligation:
Rules:
f2109_0_createList_GT(i170:0, i205:0, i168:0) -> f2109_0_createList_GT(arith, i205:0, arith1) :|: i170:0 > 0 && i205:0 > 0 && i205:0 > i168:0 && i168:0 > -1 && i170:0 - 1 < i170:0 && i205:0 >= i168:0 + 1 && arith = i170:0 - 1 && arith1 = i168:0 + 1
f2109_0_createList_GT(x3, x4, x5) -> f2109_0_createList_GT(x6, x4, x5) :|: x4 > -1 && x3 > 0 && x3 - 1 < x3 && x4 <= x5 && x6 = x3 - 1

----------------------------------------

(29) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f2109_0_createList_GT(i170:0, i205:0, i168:0) -> f2109_0_createList_GT(arith, i205:0, arith1) :|: i170:0 > 0 && i205:0 > 0 && i205:0 > i168:0 && i168:0 > -1 && i170:0 - 1 < i170:0 && i205:0 >= i168:0 + 1 && arith = i170:0 - 1 && arith1 = i168:0 + 1
(2) f2109_0_createList_GT(x3, x4, x5) -> f2109_0_createList_GT(x6, x4, x5) :|: x4 > -1 && x3 > 0 && x3 - 1 < x3 && x4 <= x5 && x6 = x3 - 1

Arcs:
(1) -> (1), (2)
(2) -> (2)

This digraph is fully evaluated!
----------------------------------------

(30)
Complex Obligation (AND)

----------------------------------------

(31)
Obligation:

Termination digraph:
Nodes:
(1) f2109_0_createList_GT(i170:0, i205:0, i168:0) -> f2109_0_createList_GT(arith, i205:0, arith1) :|: i170:0 > 0 && i205:0 > 0 && i205:0 > i168:0 && i168:0 > -1 && i170:0 - 1 < i170:0 && i205:0 >= i168:0 + 1 && arith = i170:0 - 1 && arith1 = i168:0 + 1

Arcs:
(1) -> (1)

This digraph is fully evaluated!

----------------------------------------

(32) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(33)
Obligation:
Rules:
f2109_0_createList_GT(i170:0:0, i205:0:0, i168:0:0) -> f2109_0_createList_GT(i170:0:0 - 1, i205:0:0, i168:0:0 + 1) :|: i170:0:0 - 1 < i170:0:0 && i205:0:0 >= i168:0:0 + 1 && i168:0:0 > -1 && i205:0:0 > i168:0:0 && i205:0:0 > 0 && i170:0:0 > 0

----------------------------------------

(34) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f2109_0_createList_GT(INTEGER, INTEGER, INTEGER)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(35)
Obligation:
Rules:
f2109_0_createList_GT(i170:0:0, i205:0:0, i168:0:0) -> f2109_0_createList_GT(c, i205:0:0, c1) :|: c1 = i168:0:0 + 1 && c = i170:0:0 - 1 && (i170:0:0 - 1 < i170:0:0 && i205:0:0 >= i168:0:0 + 1 && i168:0:0 > -1 && i205:0:0 > i168:0:0 && i205:0:0 > 0 && i170:0:0 > 0)

----------------------------------------

(36) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f2109_0_createList_GT(x, x1, x2)] = x1 - x2

The following rules are decreasing:
f2109_0_createList_GT(i170:0:0, i205:0:0, i168:0:0) -> f2109_0_createList_GT(c, i205:0:0, c1) :|: c1 = i168:0:0 + 1 && c = i170:0:0 - 1 && (i170:0:0 - 1 < i170:0:0 && i205:0:0 >= i168:0:0 + 1 && i168:0:0 > -1 && i205:0:0 > i168:0:0 && i205:0:0 > 0 && i170:0:0 > 0)
The following rules are bounded:
f2109_0_createList_GT(i170:0:0, i205:0:0, i168:0:0) -> f2109_0_createList_GT(c, i205:0:0, c1) :|: c1 = i168:0:0 + 1 && c = i170:0:0 - 1 && (i170:0:0 - 1 < i170:0:0 && i205:0:0 >= i168:0:0 + 1 && i168:0:0 > -1 && i205:0:0 > i168:0:0 && i205:0:0 > 0 && i170:0:0 > 0)

----------------------------------------

(37)
YES

----------------------------------------

(38)
Obligation:

Termination digraph:
Nodes:
(1) f2109_0_createList_GT(x3, x4, x5) -> f2109_0_createList_GT(x6, x4, x5) :|: x4 > -1 && x3 > 0 && x3 - 1 < x3 && x4 <= x5 && x6 = x3 - 1

Arcs:
(1) -> (1)

This digraph is fully evaluated!

----------------------------------------

(39) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(40)
Obligation:
Rules:
f2109_0_createList_GT(x3:0, x4:0, x5:0) -> f2109_0_createList_GT(x3:0 - 1, x4:0, x5:0) :|: x3:0 - 1 < x3:0 && x5:0 >= x4:0 && x3:0 > 0 && x4:0 > -1

----------------------------------------

(41) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f2109_0_createList_GT(INTEGER, INTEGER, INTEGER)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(42)
Obligation:
Rules:
f2109_0_createList_GT(x3:0, x4:0, x5:0) -> f2109_0_createList_GT(c, x4:0, x5:0) :|: c = x3:0 - 1 && (x3:0 - 1 < x3:0 && x5:0 >= x4:0 && x3:0 > 0 && x4:0 > -1)

----------------------------------------

(43) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f2109_0_createList_GT ] = f2109_0_createList_GT_1

The following rules are decreasing:
f2109_0_createList_GT(x3:0, x4:0, x5:0) -> f2109_0_createList_GT(c, x4:0, x5:0) :|: c = x3:0 - 1 && (x3:0 - 1 < x3:0 && x5:0 >= x4:0 && x3:0 > 0 && x4:0 > -1)

The following rules are bounded:
f2109_0_createList_GT(x3:0, x4:0, x5:0) -> f2109_0_createList_GT(c, x4:0, x5:0) :|: c = x3:0 - 1 && (x3:0 - 1 < x3:0 && x5:0 >= x4:0 && x3:0 > 0 && x4:0 > -1)


----------------------------------------

(44)
YES
