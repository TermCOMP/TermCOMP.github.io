NO
proof of /hpcwork/ff862203/termcomp25/benchmarks/F0eB5.jar
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


termination of the given Bare JBC problem could be disproven:

(0) Bare JBC problem
(1) BareJBCToJBCProof [EQUIVALENT, 0 ms]
(2) JBC problem
(3) JBCNonTerm [COMPLETE, 345 ms]
(4) NO


----------------------------------------

(0)
Obligation:
need to prove termination of the following program:
public class MirrorIntervSim {

    public static void loop(int i) {
	if (i != 0) {
	    if (-5 <= i && i <= 35) {
		if (i < 0) {
		    i = -5;
		} else {
		    if (i > 30) {
			i = 35;
		    } else {
			i--;
		    }	
		}					
	    } else {
		i = 0;
	    }
	    loop(i);
	}
    }

    public static void main(String[] args) {
	loop(args.length + 28);
    }
}



----------------------------------------

(1) BareJBCToJBCProof (EQUIVALENT)
initialized classpath
----------------------------------------

(2)
Obligation:
need to prove termination of the following program:
public class MirrorIntervSim {

    public static void loop(int i) {
	if (i != 0) {
	    if (-5 <= i && i <= 35) {
		if (i < 0) {
		    i = -5;
		} else {
		    if (i > 30) {
			i = 35;
		    } else {
			i--;
		    }	
		}					
	    } else {
		i = 0;
	    }
	    loop(i);
	}
    }

    public static void main(String[] args) {
	loop(args.length + 28);
    }
}



----------------------------------------

(3) JBCNonTerm (COMPLETE)
Reached a loop using the following run: 

0:<MirrorIntervSim.main||0: load ADDR #0||#0: a2|| ->
	a2([java.lang.String...]): length 3 -->{java.lang.Object...}
YES:  (JL1)
1:<MirrorIntervSim.main||1: arraylength|| - ||a2>
	a2([java.lang.String...]): length 3 -->{java.lang.Object...}
YES:  (JL1)
2:<MirrorIntervSim.main||2: push 28|| - ||3>
YES:  (JL1)
3:<MirrorIntervSim.main||4: ADD|| - ||3, 28>
YES:  (JL1)
4:<MirrorIntervSim.main||5: MirrorIntervSim.loop(I)V|| - ||31>
YES:  (JL1)
5:<MirrorIntervSim.loop||0: load INT #0||#0: 31|| ->
YES:  (JL1)
Start state of loop: 

[i18(lv_0_0)]
<MirrorIntervSim.loop||0: load INT #0||#0: i18|| ->
	i18: [0,+inf)(l1)
YES:  (JL1)


In the loop head node, references [i18] were interesting.

All methods calls in the loop body are side-effect free, hence they can be ignored.

By SMT, we could prove

(0 <= initial_i18 and (((path3_i18 = path3_i20 and path3_i20 = path3_i22 and path3_i22 = path3_i25 and 35 = res_i18 and path3_i18 = initial_i18) and (path3_i20 > 0 and -5 <= path3_i20 and T and 35 = 35 and path3_i22 <= 35 and path3_i22 >= 0 and T and 30 = 30 and path3_i25 > 30)) and ((res3_i18 = res3_i20 and res3_i20 = res3_i22 and res3_i22 = res3_i25 and res_i18 = res3_i18) and !(res3_i20 > 0 and -5 <= res3_i20 and T and 35 = 35 and res3_i22 <= 35 and res3_i22 >= 0 and T and 30 = 30 and res3_i25 > 30))))

to be UNSAT. Consequently, the loop will not terminate.
----------------------------------------

(4)
NO
