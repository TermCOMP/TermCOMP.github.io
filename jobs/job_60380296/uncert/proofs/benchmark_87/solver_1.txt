YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/hXav5.jar
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


termination of the given Bare JBC problem could be proven:

(0) Bare JBC problem
(1) BareJBCToJBCProof [EQUIVALENT, 66 ms]
(2) JBC problem
(3) JBCToGraph [EQUIVALENT, 229 ms]
(4) JBCTerminationGraph
(5) TerminationGraphToSCCProof [SOUND, 0 ms]
(6) AND
    (7) JBCTerminationSCC
        (8) SCCToIRSProof [SOUND, 38 ms]
        (9) IRSwT
        (10) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (11) IRSwT
        (12) IRSwTTerminationDigraphProof [EQUIVALENT, 13 ms]
        (13) IRSwT
        (14) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (15) IRSwT
        (16) TempFilterProof [SOUND, 10 ms]
        (17) IntTRS
        (18) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (19) YES
    (20) JBCTerminationSCC
        (21) SCCToIRSProof [SOUND, 79 ms]
        (22) IRSwT
        (23) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (24) IRSwT
        (25) IRSwTTerminationDigraphProof [EQUIVALENT, 25 ms]
        (26) IRSwT
        (27) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (28) IRSwT
        (29) TempFilterProof [SOUND, 20 ms]
        (30) IntTRS
        (31) RankingReductionPairProof [EQUIVALENT, 0 ms]
        (32) IntTRS
        (33) RankingReductionPairProof [EQUIVALENT, 3 ms]
        (34) YES


----------------------------------------

(0)
Obligation:
need to prove termination of the following program:
public class Test10 {
    public static void main(String[] args) {
	rec(args.length);
    }

    private static void rec(long l) {
	if (l > 0) {
	    for (int i = (int) l ; i < 100; i++)
		test(i);

	    rec (l - 1);
	}
    }

    private static void test(int i) {
	descend(i);
	descend(i);
	descend(i);
	descend(i);
	descend(i);
	descend(i);
	descend(i);
	descend(i);
    }

    private static void descend(int i) {
	if (i > 0)
	    descend(i - 1);
    }
}


----------------------------------------

(1) BareJBCToJBCProof (EQUIVALENT)
initialized classpath
----------------------------------------

(2)
Obligation:
need to prove termination of the following program:
public class Test10 {
    public static void main(String[] args) {
	rec(args.length);
    }

    private static void rec(long l) {
	if (l > 0) {
	    for (int i = (int) l ; i < 100; i++)
		test(i);

	    rec (l - 1);
	}
    }

    private static void test(int i) {
	descend(i);
	descend(i);
	descend(i);
	descend(i);
	descend(i);
	descend(i);
	descend(i);
	descend(i);
    }

    private static void descend(int i) {
	if (i > 0)
	    descend(i - 1);
    }
}


----------------------------------------

(3) JBCToGraph (EQUIVALENT)
Constructed TerminationGraph.
----------------------------------------

(4)
Obligation:
Termination Graph based on JBC Program:
Test10.main([Ljava/lang/String;)V: Graph of 11 nodes with 0 SCCs.



Test10.rec(J)V: Graph of 73 nodes with 1 SCC.



Test10.descend(I)V: Graph of 16 nodes with 0 SCCs.





----------------------------------------

(5) TerminationGraphToSCCProof (SOUND)
Splitted TerminationGraph to 2 SCCss.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: Test10.descend(I)V
SCC calls the following helper methods: Test10.descend(I)V
Performed SCC analyses:
*Used field analysis yielded the following read fields:

*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(8) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 10 IRulesP rules:
f3276_0_descend_LE(EOS(STATIC_3276), i503, i503, i503) -> f3281_0_descend_LE(EOS(STATIC_3281), i503, i503, i503) :|: TRUE
f3281_0_descend_LE(EOS(STATIC_3281), i503, i503, i503) -> f3284_0_descend_Load(EOS(STATIC_3284), i503, i503) :|: i503 > 0
f3284_0_descend_Load(EOS(STATIC_3284), i503, i503) -> f3286_0_descend_ConstantStackPush(EOS(STATIC_3286), i503, i503) :|: TRUE
f3286_0_descend_ConstantStackPush(EOS(STATIC_3286), i503, i503) -> f3313_0_descend_IntArithmetic(EOS(STATIC_3313), i503, i503, 1) :|: TRUE
f3313_0_descend_IntArithmetic(EOS(STATIC_3313), i503, i503, matching1) -> f3318_0_descend_InvokeMethod(EOS(STATIC_3318), i503, i503 - 1) :|: i503 > 0 && matching1 = 1
f3318_0_descend_InvokeMethod(EOS(STATIC_3318), i503, i508) -> f3320_0_descend_Load(EOS(STATIC_3320), i508, i508) :|: i503 >= 1 && i508 < i503
f3318_0_descend_InvokeMethod(EOS(STATIC_3318), i503, i508) -> f3320_1_descend_Load(EOS(STATIC_3320), i503, i508) :|: i503 >= 1 && i508 < i503
f3320_0_descend_Load(EOS(STATIC_3320), i508, i508) -> f3321_0_descend_Load(EOS(STATIC_3321), i508, i508) :|: TRUE
f3321_0_descend_Load(EOS(STATIC_3321), i508, i508) -> f3269_0_descend_Load(EOS(STATIC_3269), i508, i508) :|: TRUE
f3269_0_descend_Load(EOS(STATIC_3269), i501, i501) -> f3276_0_descend_LE(EOS(STATIC_3276), i501, i501, i501) :|: TRUE
Combined rules. Obtained 2 IRulesP rules:
f3276_0_descend_LE(EOS(STATIC_3276), i503:0, i503:0, i503:0) -> f3276_0_descend_LE(EOS(STATIC_3276), i503:0 - 1, i503:0 - 1, i503:0 - 1) :|: i503:0 > 0 && i503:0 - 1 < i503:0
Removed following non-SCC rules:
f3276_0_descend_LE(EOS(STATIC_3276), i503:0, i503:0, i503:0) -> f3320_1_descend_Load(EOS(STATIC_3320), i503:0, i503:0 - 1) :|: i503:0 > 0 && i503:0 - 1 < i503:0
Filtered constant ground arguments:
   f3276_0_descend_LE(x1, x2, x3, x4) -> f3276_0_descend_LE(x2, x3, x4)
   EOS(x1) -> EOS
Filtered duplicate arguments:
   f3276_0_descend_LE(x1, x2, x3) -> f3276_0_descend_LE(x3)
Finished conversion. Obtained 1 rules.P rules:
f3276_0_descend_LE(i503:0) -> f3276_0_descend_LE(i503:0 - 1) :|: i503:0 > 0 && i503:0 - 1 < i503:0

----------------------------------------

(9)
Obligation:
Rules:
f3276_0_descend_LE(i503:0) -> f3276_0_descend_LE(i503:0 - 1) :|: i503:0 > 0 && i503:0 - 1 < i503:0

----------------------------------------

(10) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(11)
Obligation:
Rules:
f3276_0_descend_LE(i503:0) -> f3276_0_descend_LE(arith) :|: i503:0 > 0 && i503:0 - 1 < i503:0 && arith = i503:0 - 1

----------------------------------------

(12) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f3276_0_descend_LE(i503:0) -> f3276_0_descend_LE(arith) :|: i503:0 > 0 && i503:0 - 1 < i503:0 && arith = i503:0 - 1

Arcs:
(1) -> (1)

This digraph is fully evaluated!
----------------------------------------

(13)
Obligation:

Termination digraph:
Nodes:
(1) f3276_0_descend_LE(i503:0) -> f3276_0_descend_LE(arith) :|: i503:0 > 0 && i503:0 - 1 < i503:0 && arith = i503:0 - 1

Arcs:
(1) -> (1)

This digraph is fully evaluated!

----------------------------------------

(14) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(15)
Obligation:
Rules:
f3276_0_descend_LE(i503:0:0) -> f3276_0_descend_LE(i503:0:0 - 1) :|: i503:0:0 > 0 && i503:0:0 - 1 < i503:0:0

----------------------------------------

(16) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f3276_0_descend_LE(INTEGER)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(17)
Obligation:
Rules:
f3276_0_descend_LE(i503:0:0) -> f3276_0_descend_LE(c) :|: c = i503:0:0 - 1 && (i503:0:0 > 0 && i503:0:0 - 1 < i503:0:0)

----------------------------------------

(18) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f3276_0_descend_LE(x)] = x

The following rules are decreasing:
f3276_0_descend_LE(i503:0:0) -> f3276_0_descend_LE(c) :|: c = i503:0:0 - 1 && (i503:0:0 > 0 && i503:0:0 - 1 < i503:0:0)
The following rules are bounded:
f3276_0_descend_LE(i503:0:0) -> f3276_0_descend_LE(c) :|: c = i503:0:0 - 1 && (i503:0:0 > 0 && i503:0:0 - 1 < i503:0:0)

----------------------------------------

(19)
YES

----------------------------------------

(20)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: Test10.rec(J)V
SCC calls the following helper methods: Test10.descend(I)V, Test10.rec(J)V
Performed SCC analyses:
*Used field analysis yielded the following read fields:

*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(21) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 75 IRulesP rules:
f17_0_rec_ConstantStackPush(EOS(STATIC_17), i4, i4, i4) -> f18_0_rec_Cmp(EOS(STATIC_18), i4, i4, i4, 0) :|: TRUE
f18_0_rec_Cmp(EOS(STATIC_18), i5, i5, i5, matching1) -> f20_0_rec_Cmp(EOS(STATIC_20), i5, i5, i5, 0) :|: TRUE && matching1 = 0
f20_0_rec_Cmp(EOS(STATIC_20), i5, i5, i5, matching1) -> f24_0_rec_LE(EOS(STATIC_24), i5, i5, 1) :|: TRUE && matching1 = 0
f24_0_rec_LE(EOS(STATIC_24), i5, i5, matching1) -> f26_0_rec_Load(EOS(STATIC_26), i5, i5) :|: 1 > 0 && matching1 = 1
f26_0_rec_Load(EOS(STATIC_26), i5, i5) -> f31_0_rec_TypeCast(EOS(STATIC_31), i5, i5, i5) :|: TRUE
f31_0_rec_TypeCast(EOS(STATIC_31), i5, i5, i5) -> f48_0_rec_Store(EOS(STATIC_48), i5, i5, i10) :|: i10 = i5
f48_0_rec_Store(EOS(STATIC_48), i5, i5, i10) -> f50_0_rec_Load(EOS(STATIC_50), i5, i5, i10) :|: TRUE
f50_0_rec_Load(EOS(STATIC_50), i5, i5, i10) -> f52_0_rec_ConstantStackPush(EOS(STATIC_52), i5, i5, i10, i10) :|: TRUE
f52_0_rec_ConstantStackPush(EOS(STATIC_52), i5, i5, i10, i10) -> f54_0_rec_GE(EOS(STATIC_54), i5, i5, i10, i10, 100) :|: TRUE
f54_0_rec_GE(EOS(STATIC_54), i5, i5, i12, i12, matching1) -> f59_0_rec_GE(EOS(STATIC_59), i5, i5, i12, i12, 100) :|: TRUE && matching1 = 100
f54_0_rec_GE(EOS(STATIC_54), i5, i5, i13, i13, matching1) -> f60_0_rec_GE(EOS(STATIC_60), i5, i5, i13, i13, 100) :|: TRUE && matching1 = 100
f59_0_rec_GE(EOS(STATIC_59), i5, i5, i12, i12, matching1) -> f65_0_rec_Load(EOS(STATIC_65), i5, i5, i12) :|: i12 < 100 && matching1 = 100
f65_0_rec_Load(EOS(STATIC_65), i5, i5, i12) -> f67_0_rec_InvokeMethod(EOS(STATIC_67), i5, i5, i12, i12) :|: TRUE
f67_0_rec_InvokeMethod(EOS(STATIC_67), i5, i5, i12, i12) -> f69_0_test_Load(EOS(STATIC_69), i5, i5, i12, i12) :|: TRUE
f69_0_test_Load(EOS(STATIC_69), i5, i5, i12, i12) -> f75_0_test_InvokeMethod(EOS(STATIC_75), i5, i5, i12, i12, i12) :|: TRUE
f75_0_test_InvokeMethod(EOS(STATIC_75), i5, i5, i12, i12, i12) -> f77_0_descend_Load(EOS(STATIC_77), i12, i12) :|: i12 >= 1
f75_0_test_InvokeMethod(EOS(STATIC_75), i5, i5, i12, i12, i12) -> f77_1_descend_Load(EOS(STATIC_77), i5, i5, i12, i12, i12) :|: i12 >= 1
f77_0_descend_Load(EOS(STATIC_77), i12, i12) -> f11118_0_descend_Load(EOS(STATIC_11118), i12, i12) :|: TRUE
f4539_0_descend_Return(EOS(STATIC_4539), i5, i5, i687, i687) -> f4544_0_test_Load(EOS(STATIC_4544), i5, i5, i687, i687) :|: TRUE
f4544_0_test_Load(EOS(STATIC_4544), i5, i5, i687, i687) -> f4546_0_test_InvokeMethod(EOS(STATIC_4546), i5, i5, i687, i687, i687) :|: TRUE
f4546_0_test_InvokeMethod(EOS(STATIC_4546), i5, i5, i687, i687, i687) -> f4549_0_descend_Load(EOS(STATIC_4549), i687, i687) :|: i687 >= 1
f4546_0_test_InvokeMethod(EOS(STATIC_4546), i5, i5, i687, i687, i687) -> f4549_1_descend_Load(EOS(STATIC_4549), i5, i5, i687, i687, i687) :|: i687 >= 1
f4549_0_descend_Load(EOS(STATIC_4549), i687, i687) -> f11134_0_descend_Load(EOS(STATIC_11134), i687, i687) :|: TRUE
f5862_0_descend_Return(EOS(STATIC_5862), i5, i5, i701, i701) -> f5867_0_test_Load(EOS(STATIC_5867), i5, i5, i701, i701) :|: TRUE
f5867_0_test_Load(EOS(STATIC_5867), i5, i5, i701, i701) -> f5869_0_test_InvokeMethod(EOS(STATIC_5869), i5, i5, i701, i701, i701) :|: TRUE
f5869_0_test_InvokeMethod(EOS(STATIC_5869), i5, i5, i701, i701, i701) -> f5872_0_descend_Load(EOS(STATIC_5872), i701, i701) :|: i701 >= 1
f5869_0_test_InvokeMethod(EOS(STATIC_5869), i5, i5, i701, i701, i701) -> f5872_1_descend_Load(EOS(STATIC_5872), i5, i5, i701, i701, i701) :|: i701 >= 1
f5872_0_descend_Load(EOS(STATIC_5872), i701, i701) -> f11150_0_descend_Load(EOS(STATIC_11150), i701, i701) :|: TRUE
f7613_0_descend_Return(EOS(STATIC_7613), i5, i5, i885, i885) -> f7614_0_test_Load(EOS(STATIC_7614), i5, i5, i885, i885) :|: TRUE
f7614_0_test_Load(EOS(STATIC_7614), i5, i5, i885, i885) -> f7616_0_test_InvokeMethod(EOS(STATIC_7616), i5, i5, i885, i885, i885) :|: TRUE
f7616_0_test_InvokeMethod(EOS(STATIC_7616), i5, i5, i885, i885, i885) -> f7617_0_descend_Load(EOS(STATIC_7617), i885, i885) :|: i885 >= 1
f7616_0_test_InvokeMethod(EOS(STATIC_7616), i5, i5, i885, i885, i885) -> f7617_1_descend_Load(EOS(STATIC_7617), i5, i5, i885, i885, i885) :|: i885 >= 1
f7617_0_descend_Load(EOS(STATIC_7617), i885, i885) -> f11167_0_descend_Load(EOS(STATIC_11167), i885, i885) :|: TRUE
f10336_0_descend_Return(EOS(STATIC_10336), i5, i5, i1135, i1135) -> f10338_0_test_Load(EOS(STATIC_10338), i5, i5, i1135, i1135) :|: TRUE
f10338_0_test_Load(EOS(STATIC_10338), i5, i5, i1135, i1135) -> f10340_0_test_InvokeMethod(EOS(STATIC_10340), i5, i5, i1135, i1135, i1135) :|: TRUE
f10340_0_test_InvokeMethod(EOS(STATIC_10340), i5, i5, i1135, i1135, i1135) -> f10342_0_descend_Load(EOS(STATIC_10342), i1135, i1135) :|: i1135 >= 1
f10340_0_test_InvokeMethod(EOS(STATIC_10340), i5, i5, i1135, i1135, i1135) -> f10342_1_descend_Load(EOS(STATIC_10342), i5, i5, i1135, i1135, i1135) :|: i1135 >= 1
f10342_0_descend_Load(EOS(STATIC_10342), i1135, i1135) -> f11183_0_descend_Load(EOS(STATIC_11183), i1135, i1135) :|: TRUE
f10375_0_descend_Return(EOS(STATIC_10375), i5, i5, i1530, i1530) -> f10377_0_test_Load(EOS(STATIC_10377), i5, i5, i1530, i1530) :|: TRUE
f10377_0_test_Load(EOS(STATIC_10377), i5, i5, i1530, i1530) -> f10380_0_test_InvokeMethod(EOS(STATIC_10380), i5, i5, i1530, i1530, i1530) :|: TRUE
f10380_0_test_InvokeMethod(EOS(STATIC_10380), i5, i5, i1530, i1530, i1530) -> f10417_0_descend_Load(EOS(STATIC_10417), i1530, i1530) :|: i1530 >= 1
f10380_0_test_InvokeMethod(EOS(STATIC_10380), i5, i5, i1530, i1530, i1530) -> f10417_1_descend_Load(EOS(STATIC_10417), i5, i5, i1530, i1530, i1530) :|: i1530 >= 1
f10417_0_descend_Load(EOS(STATIC_10417), i1530, i1530) -> f11199_0_descend_Load(EOS(STATIC_11199), i1530, i1530) :|: TRUE
f10507_0_descend_Return(EOS(STATIC_10507), i5, i5, i1551, i1551) -> f10513_0_test_Load(EOS(STATIC_10513), i5, i5, i1551, i1551) :|: TRUE
f10513_0_test_Load(EOS(STATIC_10513), i5, i5, i1551, i1551) -> f10516_0_test_InvokeMethod(EOS(STATIC_10516), i5, i5, i1551, i1551, i1551) :|: TRUE
f10516_0_test_InvokeMethod(EOS(STATIC_10516), i5, i5, i1551, i1551, i1551) -> f10518_0_descend_Load(EOS(STATIC_10518), i1551, i1551) :|: i1551 >= 1
f10516_0_test_InvokeMethod(EOS(STATIC_10516), i5, i5, i1551, i1551, i1551) -> f10518_1_descend_Load(EOS(STATIC_10518), i5, i5, i1551, i1551, i1551) :|: i1551 >= 1
f10518_0_descend_Load(EOS(STATIC_10518), i1551, i1551) -> f11215_0_descend_Load(EOS(STATIC_11215), i1551, i1551) :|: TRUE
f10554_0_descend_Return(EOS(STATIC_10554), i5, i5, i1563, i1563) -> f10557_0_test_Load(EOS(STATIC_10557), i5, i5, i1563, i1563) :|: TRUE
f10557_0_test_Load(EOS(STATIC_10557), i5, i5, i1563, i1563) -> f10559_0_test_InvokeMethod(EOS(STATIC_10559), i5, i5, i1563, i1563) :|: TRUE
f10559_0_test_InvokeMethod(EOS(STATIC_10559), i5, i5, i1563, i1563) -> f10562_0_descend_Load(EOS(STATIC_10562), i1563, i1563) :|: i1563 >= 1
f10559_0_test_InvokeMethod(EOS(STATIC_10559), i5, i5, i1563, i1563) -> f10562_1_descend_Load(EOS(STATIC_10562), i5, i5, i1563, i1563) :|: i1563 >= 1
f10562_0_descend_Load(EOS(STATIC_10562), i1563, i1563) -> f11232_0_descend_Load(EOS(STATIC_11232), i1563, i1563) :|: TRUE
f10648_0_descend_Return(EOS(STATIC_10648), i5, i5, i1570) -> f10654_0_test_Return(EOS(STATIC_10654), i5, i5, i1570) :|: TRUE
f10654_0_test_Return(EOS(STATIC_10654), i5, i5, i1570) -> f10656_0_rec_Inc(EOS(STATIC_10656), i5, i5, i1570) :|: TRUE
f10656_0_rec_Inc(EOS(STATIC_10656), i5, i5, i1570) -> f10662_0_rec_JMP(EOS(STATIC_10662), i5, i5, i1570 + 1) :|: TRUE
f10662_0_rec_JMP(EOS(STATIC_10662), i5, i5, i1585) -> f10792_0_rec_Load(EOS(STATIC_10792), i5, i5, i1585) :|: TRUE
f10792_0_rec_Load(EOS(STATIC_10792), i5, i5, i1585) -> f50_0_rec_Load(EOS(STATIC_50), i5, i5, i1585) :|: TRUE
f60_0_rec_GE(EOS(STATIC_60), i5, i5, i13, i13, matching1) -> f66_0_rec_Load(EOS(STATIC_66), i5, i5) :|: i13 >= 100 && matching1 = 100
f66_0_rec_Load(EOS(STATIC_66), i5, i5) -> f68_0_rec_ConstantStackPush(EOS(STATIC_68), i5, i5) :|: TRUE
f68_0_rec_ConstantStackPush(EOS(STATIC_68), i5, i5) -> f72_0_rec_IntArithmetic(EOS(STATIC_72), i5, i5, 1) :|: TRUE
f72_0_rec_IntArithmetic(EOS(STATIC_72), i5, i5, matching1) -> f74_0_rec_InvokeMethod(EOS(STATIC_74), i5, i5 - 1) :|: i5 > 0 && matching1 = 1
f74_0_rec_InvokeMethod(EOS(STATIC_74), i5, i15) -> f76_0_rec_Load(EOS(STATIC_76), i15, i15) :|: i15 < i5
f74_0_rec_InvokeMethod(EOS(STATIC_74), i5, i15) -> f76_1_rec_Load(EOS(STATIC_76), i5, i15) :|: i15 < i5
f76_0_rec_Load(EOS(STATIC_76), i15, i15) -> f78_0_rec_Load(EOS(STATIC_78), i15, i15) :|: TRUE
f78_0_rec_Load(EOS(STATIC_78), i15, i15) -> f16_0_rec_Load(EOS(STATIC_16), i15, i15) :|: TRUE
f16_0_rec_Load(EOS(STATIC_16), i4, i4) -> f17_0_rec_ConstantStackPush(EOS(STATIC_17), i4, i4, i4) :|: TRUE
f77_1_descend_Load(EOS(STATIC_77), i5, i5, i687, i687, i687) -> f4539_0_descend_Return(EOS(STATIC_4539), i5, i5, i687, i687) :|: TRUE
f4549_1_descend_Load(EOS(STATIC_4549), i5, i5, i701, i701, i701) -> f5862_0_descend_Return(EOS(STATIC_5862), i5, i5, i701, i701) :|: TRUE
f5872_1_descend_Load(EOS(STATIC_5872), i5, i5, i885, i885, i885) -> f7613_0_descend_Return(EOS(STATIC_7613), i5, i5, i885, i885) :|: TRUE
f7617_1_descend_Load(EOS(STATIC_7617), i5, i5, i1135, i1135, i1135) -> f10336_0_descend_Return(EOS(STATIC_10336), i5, i5, i1135, i1135) :|: TRUE
f10342_1_descend_Load(EOS(STATIC_10342), i5, i5, i1530, i1530, i1530) -> f10375_0_descend_Return(EOS(STATIC_10375), i5, i5, i1530, i1530) :|: TRUE
f10417_1_descend_Load(EOS(STATIC_10417), i5, i5, i1551, i1551, i1551) -> f10507_0_descend_Return(EOS(STATIC_10507), i5, i5, i1551, i1551) :|: TRUE
f10518_1_descend_Load(EOS(STATIC_10518), i5, i5, i1563, i1563, i1563) -> f10554_0_descend_Return(EOS(STATIC_10554), i5, i5, i1563, i1563) :|: TRUE
f10562_1_descend_Load(EOS(STATIC_10562), i5, i5, i1570, i1570) -> f10648_0_descend_Return(EOS(STATIC_10648), i5, i5, i1570) :|: TRUE
Combined rules. Obtained 11 IRulesP rules:
f54_0_rec_GE(EOS(STATIC_54), i5:0, i5:0, i13:0, i13:0, 100) -> f54_0_rec_GE(EOS(STATIC_54), i5:0 - 1, i5:0 - 1, i5:0 - 1, i5:0 - 1, 100) :|: i13:0 > 99 && i5:0 - 1 < i5:0 && i5:0 > 0
f54_0_rec_GE(EOS(STATIC_54), i5:0, i5:0, i12:0, i12:0, 100) -> f54_0_rec_GE(EOS(STATIC_54), i5:0, i5:0, i12:0 + 1, i12:0 + 1, 100) :|: i12:0 < 100 && i12:0 > 0
Removed following non-SCC rules:
f54_0_rec_GE(EOS(STATIC_54), i5:0, i5:0, i12:0, i12:0, 100) -> f11167_0_descend_Load(EOS(STATIC_11167), i12:0, i12:0) :|: i12:0 < 100 && i12:0 > 0
f54_0_rec_GE(EOS(STATIC_54), i5:0, i5:0, i12:0, i12:0, 100) -> f11134_0_descend_Load(EOS(STATIC_11134), i12:0, i12:0) :|: i12:0 < 100 && i12:0 > 0
f54_0_rec_GE(EOS(STATIC_54), i5:0, i5:0, i12:0, i12:0, 100) -> f11232_0_descend_Load(EOS(STATIC_11232), i12:0, i12:0) :|: i12:0 < 100 && i12:0 > 0
f54_0_rec_GE(EOS(STATIC_54), i5:0, i5:0, i13:0, i13:0, 100) -> f76_1_rec_Load(EOS(STATIC_76), i5:0, i5:0 - 1) :|: i13:0 > 99 && i5:0 - 1 < i5:0 && i5:0 > 0
f54_0_rec_GE(EOS(STATIC_54), i5:0, i5:0, i12:0, i12:0, 100) -> f11150_0_descend_Load(EOS(STATIC_11150), i12:0, i12:0) :|: i12:0 < 100 && i12:0 > 0
f54_0_rec_GE(EOS(STATIC_54), i5:0, i5:0, i12:0, i12:0, 100) -> f11199_0_descend_Load(EOS(STATIC_11199), i12:0, i12:0) :|: i12:0 < 100 && i12:0 > 0
f54_0_rec_GE(EOS(STATIC_54), i5:0, i5:0, i12:0, i12:0, 100) -> f11118_0_descend_Load(EOS(STATIC_11118), i12:0, i12:0) :|: i12:0 > 0 && i12:0 < 100
f54_0_rec_GE(EOS(STATIC_54), i5:0, i5:0, i12:0, i12:0, 100) -> f11215_0_descend_Load(EOS(STATIC_11215), i12:0, i12:0) :|: i12:0 < 100 && i12:0 > 0
f54_0_rec_GE(EOS(STATIC_54), i5:0, i5:0, i12:0, i12:0, 100) -> f11183_0_descend_Load(EOS(STATIC_11183), i12:0, i12:0) :|: i12:0 < 100 && i12:0 > 0
Filtered constant ground arguments:
   f54_0_rec_GE(x1, x2, x3, x4, x5, x6) -> f54_0_rec_GE(x2, x3, x4, x5)
   EOS(x1) -> EOS
Filtered duplicate arguments:
   f54_0_rec_GE(x1, x2, x3, x4) -> f54_0_rec_GE(x2, x4)
Finished conversion. Obtained 2 rules.P rules:
f54_0_rec_GE(i5:0, i13:0) -> f54_0_rec_GE(i5:0 - 1, i5:0 - 1) :|: i5:0 - 1 < i5:0 && i5:0 > 0 && i13:0 > 99
f54_0_rec_GE(i5:0, i12:0) -> f54_0_rec_GE(i5:0, i12:0 + 1) :|: i12:0 < 100 && i12:0 > 0

----------------------------------------

(22)
Obligation:
Rules:
f54_0_rec_GE(i5:0, i13:0) -> f54_0_rec_GE(i5:0 - 1, i5:0 - 1) :|: i5:0 - 1 < i5:0 && i5:0 > 0 && i13:0 > 99
f54_0_rec_GE(x, x1) -> f54_0_rec_GE(x, x1 + 1) :|: x1 < 100 && x1 > 0

----------------------------------------

(23) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(24)
Obligation:
Rules:
f54_0_rec_GE(i5:0, i13:0) -> f54_0_rec_GE(arith, arith) :|: i5:0 - 1 < i5:0 && i5:0 > 0 && i13:0 > 99 && arith = i5:0 - 1 && arith = i5:0 - 1
f54_0_rec_GE(x2, x3) -> f54_0_rec_GE(x2, x4) :|: x3 < 100 && x3 > 0 && x4 = x3 + 1

----------------------------------------

(25) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f54_0_rec_GE(i5:0, i13:0) -> f54_0_rec_GE(arith, arith) :|: i5:0 - 1 < i5:0 && i5:0 > 0 && i13:0 > 99 && arith = i5:0 - 1 && arith = i5:0 - 1
(2) f54_0_rec_GE(x2, x3) -> f54_0_rec_GE(x2, x4) :|: x3 < 100 && x3 > 0 && x4 = x3 + 1

Arcs:
(1) -> (1), (2)
(2) -> (1), (2)

This digraph is fully evaluated!
----------------------------------------

(26)
Obligation:

Termination digraph:
Nodes:
(1) f54_0_rec_GE(i5:0, i13:0) -> f54_0_rec_GE(arith, arith) :|: i5:0 - 1 < i5:0 && i5:0 > 0 && i13:0 > 99 && arith = i5:0 - 1 && arith = i5:0 - 1
(2) f54_0_rec_GE(x2, x3) -> f54_0_rec_GE(x2, x4) :|: x3 < 100 && x3 > 0 && x4 = x3 + 1

Arcs:
(1) -> (1), (2)
(2) -> (1), (2)

This digraph is fully evaluated!

----------------------------------------

(27) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(28)
Obligation:
Rules:
f54_0_rec_GE(x2:0, x3:0) -> f54_0_rec_GE(x2:0, x3:0 + 1) :|: x3:0 < 100 && x3:0 > 0
f54_0_rec_GE(i5:0:0, i13:0:0) -> f54_0_rec_GE(i5:0:0 - 1, i5:0:0 - 1) :|: i5:0:0 - 1 < i5:0:0 && i5:0:0 > 0 && i13:0:0 > 99

----------------------------------------

(29) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f54_0_rec_GE(VARIABLE, INTEGER)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(30)
Obligation:
Rules:
f54_0_rec_GE(x2:0, x3:0) -> f54_0_rec_GE(x2:0, c) :|: c = x3:0 + 1 && (x3:0 < 100 && x3:0 > 0)
f54_0_rec_GE(i5:0:0, i13:0:0) -> f54_0_rec_GE(c1, c2) :|: c2 = i5:0:0 - 1 && c1 = i5:0:0 - 1 && (i5:0:0 - 1 < i5:0:0 && i5:0:0 > 0 && i13:0:0 > 99)

----------------------------------------

(31) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f54_0_rec_GE ] = 2*f54_0_rec_GE_1 + 1

The following rules are decreasing:
f54_0_rec_GE(i5:0:0, i13:0:0) -> f54_0_rec_GE(c1, c2) :|: c2 = i5:0:0 - 1 && c1 = i5:0:0 - 1 && (i5:0:0 - 1 < i5:0:0 && i5:0:0 > 0 && i13:0:0 > 99)

The following rules are bounded:
f54_0_rec_GE(i5:0:0, i13:0:0) -> f54_0_rec_GE(c1, c2) :|: c2 = i5:0:0 - 1 && c1 = i5:0:0 - 1 && (i5:0:0 - 1 < i5:0:0 && i5:0:0 > 0 && i13:0:0 > 99)


----------------------------------------

(32)
Obligation:
Rules:
f54_0_rec_GE(x2:0, x3:0) -> f54_0_rec_GE(x2:0, c) :|: c = x3:0 + 1 && (x3:0 < 100 && x3:0 > 0)

----------------------------------------

(33) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f54_0_rec_GE ] = -1*f54_0_rec_GE_2

The following rules are decreasing:
f54_0_rec_GE(x2:0, x3:0) -> f54_0_rec_GE(x2:0, c) :|: c = x3:0 + 1 && (x3:0 < 100 && x3:0 > 0)

The following rules are bounded:
f54_0_rec_GE(x2:0, x3:0) -> f54_0_rec_GE(x2:0, c) :|: c = x3:0 + 1 && (x3:0 < 100 && x3:0 > 0)


----------------------------------------

(34)
YES
