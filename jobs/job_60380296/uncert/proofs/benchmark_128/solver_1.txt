NO
proof of /hpcwork/ff862203/termcomp25/benchmarks/KQqVP.jar
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


termination of the given Bare JBC problem could be disproven:

(0) Bare JBC problem
(1) BareJBCToJBCProof [EQUIVALENT, 0 ms]
(2) JBC problem
(3) JBCNonTerm [COMPLETE, 219 ms]
(4) NO


----------------------------------------

(0)
Obligation:
need to prove termination of the following program:
public class MirrorInterv {

    public static void loop_aux(int i, int range) {
	if (-range <= i & i <= range) {
	    if (range - i < 5 || range + i < 5)
		i = i*(-1);
	    else {
		range++;
		i--;
		if (i == 0) range = -1;
	    }
	    loop_aux(i, range);
	}
    }

    public static void loop(int i) {
	loop_aux(i, 20);
    }

    public static void main(String[] args) {
	loop(args.length);
    }
}



----------------------------------------

(1) BareJBCToJBCProof (EQUIVALENT)
initialized classpath
----------------------------------------

(2)
Obligation:
need to prove termination of the following program:
public class MirrorInterv {

    public static void loop_aux(int i, int range) {
	if (-range <= i & i <= range) {
	    if (range - i < 5 || range + i < 5)
		i = i*(-1);
	    else {
		range++;
		i--;
		if (i == 0) range = -1;
	    }
	    loop_aux(i, range);
	}
    }

    public static void loop(int i) {
	loop_aux(i, 20);
    }

    public static void main(String[] args) {
	loop(args.length);
    }
}



----------------------------------------

(3) JBCNonTerm (COMPLETE)
Constructed a run with a repetition. States 6 and 63 are repetitions (when considering only the interesting positions [lv_0_0, lv_0_1]).

0:<MirrorInterv.main||0: load ADDR #0||#0: a2|| ->
	a2([java.lang.String...]): length 16 -->{java.lang.Object...}
YES:  (JL1)
1:<MirrorInterv.main||1: arraylength|| - ||a2>
	a2([java.lang.String...]): length 16 -->{java.lang.Object...}
YES:  (JL1)
2:<MirrorInterv.main||2: MirrorInterv.loop(I)V|| - ||16>
YES:  (JL1)
3:<MirrorInterv.loop||0: load INT #0||#0: 16|| ->
<MirrorInterv.main||2: MirrorInterv.loop|| - || ->
YES:  (JL1)
4:<MirrorInterv.loop||1: push 20|| - ||16>
<MirrorInterv.main||2: MirrorInterv.loop|| - || ->
YES:  (JL1)
5:<MirrorInterv.loop||3: MirrorInterv.loop_aux(II)V|| - ||16, 20>
<MirrorInterv.main||2: MirrorInterv.loop|| - || ->
YES:  (JL1)
6:<MirrorInterv.loop_aux||0: load INT #1||#0: 16, #1: 20|| ->
YES:  (JL1)
7:<MirrorInterv.loop_aux||1: NEG||#0: 16, #1: 20||20>
YES:  (JL1)
8:<MirrorInterv.loop_aux||2: load INT #0||#0: 16, #1: 20||-20>
YES:  (JL1)
9:<MirrorInterv.loop_aux||3: GT||#0: 16, #1: 20||-20, 16>
YES:  (JL1)
10:<MirrorInterv.loop_aux||6: push 1||#0: 16, #1: 20|| ->
YES:  (JL1)
11:<MirrorInterv.loop_aux||7: jmp||#0: 16, #1: 20||1>
YES:  (JL1)
12:<MirrorInterv.loop_aux||11: load INT #0||#0: 16, #1: 20||1>
YES:  (JL1)
13:<MirrorInterv.loop_aux||12: load INT #1||#0: 16, #1: 20||1, 16>
YES:  (JL1)
14:<MirrorInterv.loop_aux||13: GT||#0: 16, #1: 20||1, 16, 20>
YES:  (JL1)
15:<MirrorInterv.loop_aux||16: push 1||#0: 16, #1: 20||1>
YES:  (JL1)
16:<MirrorInterv.loop_aux||17: jmp||#0: 16, #1: 20||1, 1>
YES:  (JL1)
17:<MirrorInterv.loop_aux||21: AND||#0: 16, #1: 20||1, 1>
YES:  (JL1)
18:<MirrorInterv.loop_aux||22: EQ 0||#0: 16, #1: 20||1>
YES:  (JL1)
19:<MirrorInterv.loop_aux||25: load INT #1||#0: 16, #1: 20|| ->
YES:  (JL1)
20:<MirrorInterv.loop_aux||26: load INT #0||#0: 16, #1: 20||20>
YES:  (JL1)
21:<MirrorInterv.loop_aux||27: SUB||#0: 16, #1: 20||20, 16>
YES:  (JL1)
22:<MirrorInterv.loop_aux||28: push 5||#0: 16, #1: 20||4>
YES:  (JL1)
23:<MirrorInterv.loop_aux||29: LT||#0: 16, #1: 20||4, 5>
YES:  (JL1)
24:<MirrorInterv.loop_aux||39: load INT #0||#0: 16, #1: 20|| ->
YES:  (JL1)
25:<MirrorInterv.loop_aux||40: push -1||#1: 20||16>
YES:  (JL1)
26:<MirrorInterv.loop_aux||41: MUL||#1: 20||16, -1>
YES:  (JL1)
27:<MirrorInterv.loop_aux||42: store INT to #0||#1: 20||-16>
YES:  (JL1)
28:<MirrorInterv.loop_aux||43: jmp||#0: -16, #1: 20|| ->
YES:  (JL1)
29:<MirrorInterv.loop_aux||58: load INT #0||#0: -16, #1: 20|| ->
YES:  (JL1)
30:<MirrorInterv.loop_aux||59: load INT #1||#1: 20||-16>
YES:  (JL1)
31:<MirrorInterv.loop_aux||60: MirrorInterv.loop_aux(II)V|| - ||-16, 20>
YES:  (JL1)
32:<MirrorInterv.loop_aux||0: load INT #1||#0: -16, #1: 20|| ->
YES:  (JL1)
33:<MirrorInterv.loop_aux||1: NEG||#0: -16, #1: 20||20>
YES:  (JL1)
34:<MirrorInterv.loop_aux||2: load INT #0||#0: -16, #1: 20||-20>
YES:  (JL1)
35:<MirrorInterv.loop_aux||3: GT||#0: -16, #1: 20||-20, -16>
YES:  (JL1)
36:<MirrorInterv.loop_aux||6: push 1||#0: -16, #1: 20|| ->
YES:  (JL1)
37:<MirrorInterv.loop_aux||7: jmp||#0: -16, #1: 20||1>
YES:  (JL1)
38:<MirrorInterv.loop_aux||11: load INT #0||#0: -16, #1: 20||1>
YES:  (JL1)
39:<MirrorInterv.loop_aux||12: load INT #1||#0: -16, #1: 20||1, -16>
YES:  (JL1)
40:<MirrorInterv.loop_aux||13: GT||#0: -16, #1: 20||1, -16, 20>
YES:  (JL1)
41:<MirrorInterv.loop_aux||16: push 1||#0: -16, #1: 20||1>
YES:  (JL1)
42:<MirrorInterv.loop_aux||17: jmp||#0: -16, #1: 20||1, 1>
YES:  (JL1)
43:<MirrorInterv.loop_aux||21: AND||#0: -16, #1: 20||1, 1>
YES:  (JL1)
44:<MirrorInterv.loop_aux||22: EQ 0||#0: -16, #1: 20||1>
YES:  (JL1)
45:<MirrorInterv.loop_aux||25: load INT #1||#0: -16, #1: 20|| ->
YES:  (JL1)
46:<MirrorInterv.loop_aux||26: load INT #0||#0: -16, #1: 20||20>
YES:  (JL1)
47:<MirrorInterv.loop_aux||27: SUB||#0: -16, #1: 20||20, -16>
YES:  (JL1)
48:<MirrorInterv.loop_aux||28: push 5||#0: -16, #1: 20||36>
YES:  (JL1)
49:<MirrorInterv.loop_aux||29: LT||#0: -16, #1: 20||36, 5>
YES:  (JL1)
50:<MirrorInterv.loop_aux||32: load INT #1||#0: -16, #1: 20|| ->
YES:  (JL1)
51:<MirrorInterv.loop_aux||33: load INT #0||#0: -16, #1: 20||20>
YES:  (JL1)
52:<MirrorInterv.loop_aux||34: ADD||#0: -16, #1: 20||20, -16>
YES:  (JL1)
53:<MirrorInterv.loop_aux||35: push 5||#0: -16, #1: 20||4>
YES:  (JL1)
54:<MirrorInterv.loop_aux||36: GE||#0: -16, #1: 20||4, 5>
YES:  (JL1)
55:<MirrorInterv.loop_aux||39: load INT #0||#0: -16, #1: 20|| ->
YES:  (JL1)
56:<MirrorInterv.loop_aux||40: push -1||#1: 20||-16>
YES:  (JL1)
57:<MirrorInterv.loop_aux||41: MUL||#1: 20||-16, -1>
YES:  (JL1)
58:<MirrorInterv.loop_aux||42: store INT to #0||#1: 20||16>
YES:  (JL1)
59:<MirrorInterv.loop_aux||43: jmp||#0: 16, #1: 20|| ->
YES:  (JL1)
60:<MirrorInterv.loop_aux||58: load INT #0||#0: 16, #1: 20|| ->
YES:  (JL1)
61:<MirrorInterv.loop_aux||59: load INT #1||#1: 20||16>
YES:  (JL1)
62:<MirrorInterv.loop_aux||60: MirrorInterv.loop_aux(II)V|| - ||16, 20>
YES:  (JL1)
63:<MirrorInterv.loop_aux||0: load INT #1||#0: 16, #1: 20|| ->
YES:  (JL1)

----------------------------------------

(4)
NO
