YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/peaoD.jar
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


termination of the given Bare JBC problem could be proven:

(0) Bare JBC problem
(1) BareJBCToJBCProof [EQUIVALENT, 0 ms]
(2) JBC problem
(3) JBCToGraph [EQUIVALENT, 471 ms]
(4) JBCTerminationGraph
(5) TerminationGraphToSCCProof [SOUND, 0 ms]
(6) JBCTerminationSCC
(7) SCCToIRSProof [SOUND, 114 ms]
(8) IRSwT
(9) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
(10) IRSwT
(11) IRSwTTerminationDigraphProof [EQUIVALENT, 11 ms]
(12) AND
    (13) IRSwT
        (14) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (15) IRSwT
        (16) TempFilterProof [SOUND, 4 ms]
        (17) IntTRS
        (18) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (19) YES
    (20) IRSwT
        (21) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (22) IRSwT
        (23) TempFilterProof [SOUND, 17 ms]
        (24) IntTRS
        (25) RankingReductionPairProof [EQUIVALENT, 0 ms]
        (26) YES


----------------------------------------

(0)
Obligation:
need to prove termination of the following program:
public class FibSLR {

    public static int fib(int n){
	if (n  < 2) return 1;
	else return fib(n-1) + fib(n-2);	  
    }

    public static int doSum(List x){
	if (x==null) return 1;
	else return fib(x.head) + doSum(x.tail);	
    }

    public static void main(String [] args) {
	Random.args = args;
	List l = List.mk(Random.random()*Random.random());
	//System.out.println(doSum(l));
    }
}



public class List {
    public int head;
    public List tail;

    public List(int head, List tail) {
	this.head = head;
	this.tail = tail;
    }

    public List getTail() {
	return tail;
    }

    public static List mk(int len) {
	List result = null;

	while (len-- > 0)
	    result = new List(Random.random(), result);

	return result;
    }
}

public class Random {
  static String[] args;
  static int index = 0;

  public static int random() {
      if (index >= args.length)
	  return 0;

      String string = args[index];
      index++;
      return string.length();
  }
}



----------------------------------------

(1) BareJBCToJBCProof (EQUIVALENT)
initialized classpath
----------------------------------------

(2)
Obligation:
need to prove termination of the following program:
public class FibSLR {

    public static int fib(int n){
	if (n  < 2) return 1;
	else return fib(n-1) + fib(n-2);	  
    }

    public static int doSum(List x){
	if (x==null) return 1;
	else return fib(x.head) + doSum(x.tail);	
    }

    public static void main(String [] args) {
	Random.args = args;
	List l = List.mk(Random.random()*Random.random());
	//System.out.println(doSum(l));
    }
}



public class List {
    public int head;
    public List tail;

    public List(int head, List tail) {
	this.head = head;
	this.tail = tail;
    }

    public List getTail() {
	return tail;
    }

    public static List mk(int len) {
	List result = null;

	while (len-- > 0)
	    result = new List(Random.random(), result);

	return result;
    }
}

public class Random {
  static String[] args;
  static int index = 0;

  public static int random() {
      if (index >= args.length)
	  return 0;

      String string = args[index];
      index++;
      return string.length();
  }
}



----------------------------------------

(3) JBCToGraph (EQUIVALENT)
Constructed TerminationGraph.
----------------------------------------

(4)
Obligation:
Termination Graph based on JBC Program:
FibSLR.main([Ljava/lang/String;)V: Graph of 232 nodes with 0 SCCs.



List.mk(I)LList;: Graph of 264 nodes with 1 SCC.





----------------------------------------

(5) TerminationGraphToSCCProof (SOUND)
Splitted TerminationGraph to 1 SCCs.
----------------------------------------

(6)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: List.mk(I)LList;
SCC calls the following helper methods: 
Performed SCC analyses:
*Used field analysis yielded the following read fields:
*java.lang.String: [count]
*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(7) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 67 IRulesP rules:
f5264_0_mk_Inc(EOS(STATIC_5264(java.lang.Object(ARRAY(i651)), i652)), i1614, i1614) -> f5288_0_mk_LE(EOS(STATIC_5288(java.lang.Object(ARRAY(i651)), i652)), i1614 + -1, i1614) :|: TRUE
f5288_0_mk_LE(EOS(STATIC_5288(java.lang.Object(ARRAY(i651)), i652)), i1637, i1614) -> f5865_0_mk_LE(EOS(STATIC_5865(java.lang.Object(ARRAY(i651)), i652)), i1637, i1614) :|: TRUE
f5865_0_mk_LE(EOS(STATIC_5865(java.lang.Object(ARRAY(i2063)), i2064)), i2066, i2092) -> f5873_0_mk_LE(EOS(STATIC_5873(java.lang.Object(ARRAY(i2063)), i2064)), i2066, i2092) :|: TRUE
f5873_0_mk_LE(EOS(STATIC_5873(java.lang.Object(ARRAY(i2063)), i2064)), i2066, i2092) -> f5875_0_mk_New(EOS(STATIC_5875(java.lang.Object(ARRAY(i2063)), i2064)), i2066) :|: i2092 > 0
f5875_0_mk_New(EOS(STATIC_5875(java.lang.Object(ARRAY(i2063)), i2064)), i2066) -> f5877_0_mk_Duplicate(EOS(STATIC_5877(java.lang.Object(ARRAY(i2063)), i2064)), i2066) :|: TRUE
f5877_0_mk_Duplicate(EOS(STATIC_5877(java.lang.Object(ARRAY(i2063)), i2064)), i2066) -> f5879_0_mk_InvokeMethod(EOS(STATIC_5879(java.lang.Object(ARRAY(i2063)), i2064)), i2066) :|: TRUE
f5879_0_mk_InvokeMethod(EOS(STATIC_5879(java.lang.Object(ARRAY(i2063)), i2064)), i2066) -> f5918_0_random_FieldAccess(EOS(STATIC_5918(java.lang.Object(ARRAY(i2063)), i2064)), i2066) :|: TRUE
f5918_0_random_FieldAccess(EOS(STATIC_5918(java.lang.Object(ARRAY(i2063)), i2064)), i2066) -> f5952_0_random_FieldAccess(EOS(STATIC_5952(java.lang.Object(ARRAY(i2063)), i2064)), i2066, i2064) :|: TRUE
f5952_0_random_FieldAccess(EOS(STATIC_5952(java.lang.Object(ARRAY(i2063)), i2064)), i2066, i2064) -> f5956_0_random_ArrayLength(EOS(STATIC_5956(java.lang.Object(ARRAY(i2063)), i2064)), i2066, i2064, java.lang.Object(ARRAY(i2063))) :|: TRUE
f5956_0_random_ArrayLength(EOS(STATIC_5956(java.lang.Object(ARRAY(i2063)), i2064)), i2066, i2064, java.lang.Object(ARRAY(i2063))) -> f5965_0_random_LT(EOS(STATIC_5965(java.lang.Object(ARRAY(i2063)), i2064)), i2066, i2064, i2063) :|: i2063 >= 0
f5965_0_random_LT(EOS(STATIC_5965(java.lang.Object(ARRAY(i2063)), i2064)), i2066, i2064, i2063) -> f5972_0_random_LT(EOS(STATIC_5972(java.lang.Object(ARRAY(i2063)), i2064)), i2066, i2064, i2063) :|: i2064 < i2063
f5965_0_random_LT(EOS(STATIC_5965(java.lang.Object(ARRAY(i2063)), i2064)), i2066, i2064, i2063) -> f5974_0_random_LT(EOS(STATIC_5974(java.lang.Object(ARRAY(i2063)), i2064)), i2066, i2064, i2063) :|: i2064 >= i2063
f5972_0_random_LT(EOS(STATIC_5972(java.lang.Object(ARRAY(i2063)), i2064)), i2066, i2064, i2063) -> f5984_0_random_FieldAccess(EOS(STATIC_5984(java.lang.Object(ARRAY(i2063)), i2064)), i2066) :|: i2064 < i2063
f5984_0_random_FieldAccess(EOS(STATIC_5984(java.lang.Object(ARRAY(i2063)), i2064)), i2066) -> f5994_0_random_FieldAccess(EOS(STATIC_5994(java.lang.Object(ARRAY(i2063)), i2064)), i2066, java.lang.Object(ARRAY(i2063))) :|: TRUE
f5994_0_random_FieldAccess(EOS(STATIC_5994(java.lang.Object(ARRAY(i2063)), i2064)), i2066, java.lang.Object(ARRAY(i2063))) -> f6002_0_random_ArrayAccess(EOS(STATIC_6002(java.lang.Object(ARRAY(i2063)), i2064)), i2066, java.lang.Object(ARRAY(i2063)), i2064) :|: TRUE
f6002_0_random_ArrayAccess(EOS(STATIC_6002(java.lang.Object(ARRAY(i2063)), i2170)), i2066, java.lang.Object(ARRAY(i2063)), i2170) -> f6009_0_random_ArrayAccess(EOS(STATIC_6009(java.lang.Object(ARRAY(i2063)), i2170)), i2066, java.lang.Object(ARRAY(i2063)), i2170) :|: TRUE
f6009_0_random_ArrayAccess(EOS(STATIC_6009(java.lang.Object(ARRAY(i2063)), i2170)), i2066, java.lang.Object(ARRAY(i2063)), i2170) -> f6018_0_random_ArrayAccess(EOS(STATIC_6018(java.lang.Object(ARRAY(i2063)), i2170)), i2066, java.lang.Object(ARRAY(i2063)), i2170) :|: TRUE
f6018_0_random_ArrayAccess(EOS(STATIC_6018(java.lang.Object(ARRAY(i2063)), i2170)), i2066, java.lang.Object(ARRAY(i2063)), i2170) -> f6021_0_random_Store(EOS(STATIC_6021(java.lang.Object(ARRAY(i2063)), i2170)), i2066, o927) :|: TRUE
f6021_0_random_Store(EOS(STATIC_6021(java.lang.Object(ARRAY(i2063)), i2170)), i2066, o927) -> f6030_0_random_FieldAccess(EOS(STATIC_6030(java.lang.Object(ARRAY(i2063)), i2170)), i2066, o927) :|: TRUE
f6030_0_random_FieldAccess(EOS(STATIC_6030(java.lang.Object(ARRAY(i2063)), i2170)), i2066, o927) -> f6043_0_random_ConstantStackPush(EOS(STATIC_6043(java.lang.Object(ARRAY(i2063)), i2170)), i2066, o927, i2170) :|: TRUE
f6043_0_random_ConstantStackPush(EOS(STATIC_6043(java.lang.Object(ARRAY(i2063)), i2170)), i2066, o927, i2170) -> f6053_0_random_IntArithmetic(EOS(STATIC_6053(java.lang.Object(ARRAY(i2063)), i2170)), i2066, o927, i2170, 1) :|: TRUE
f6053_0_random_IntArithmetic(EOS(STATIC_6053(java.lang.Object(ARRAY(i2063)), i2170)), i2066, o927, i2170, matching1) -> f6065_0_random_FieldAccess(EOS(STATIC_6065(java.lang.Object(ARRAY(i2063)), i2170)), i2066, o927, i2170 + 1) :|: i2170 >= 0 && matching1 = 1
f6065_0_random_FieldAccess(EOS(STATIC_6065(java.lang.Object(ARRAY(i2063)), i2170)), i2066, o927, i2203) -> f6069_0_random_Load(EOS(STATIC_6069(java.lang.Object(ARRAY(i2063)), i2203)), i2066, o927) :|: TRUE
f6069_0_random_Load(EOS(STATIC_6069(java.lang.Object(ARRAY(i2063)), i2203)), i2066, o927) -> f6078_0_random_InvokeMethod(EOS(STATIC_6078(java.lang.Object(ARRAY(i2063)), i2203)), i2066, o927) :|: TRUE
f6078_0_random_InvokeMethod(EOS(STATIC_6078(java.lang.Object(ARRAY(i2063)), i2203)), i2066, java.lang.Object(o957sub)) -> f6085_0_random_InvokeMethod(EOS(STATIC_6085(java.lang.Object(ARRAY(i2063)), i2203)), i2066, java.lang.Object(o957sub)) :|: TRUE
f6085_0_random_InvokeMethod(EOS(STATIC_6085(java.lang.Object(ARRAY(i2063)), i2203)), i2066, java.lang.Object(o961sub)) -> f6095_0_random_InvokeMethod(EOS(STATIC_6095(java.lang.Object(ARRAY(i2063)), i2203)), i2066, java.lang.Object(o961sub)) :|: TRUE
f6095_0_random_InvokeMethod(EOS(STATIC_6095(java.lang.Object(ARRAY(i2063)), i2203)), i2066, java.lang.Object(o961sub)) -> f6109_0_length_Load(EOS(STATIC_6109(java.lang.Object(ARRAY(i2063)), i2203)), i2066, java.lang.Object(o961sub)) :|: TRUE
f6109_0_length_Load(EOS(STATIC_6109(java.lang.Object(ARRAY(i2063)), i2203)), i2066, java.lang.Object(o961sub)) -> f6127_0_length_FieldAccess(EOS(STATIC_6127(java.lang.Object(ARRAY(i2063)), i2203)), i2066, java.lang.Object(o961sub)) :|: TRUE
f6127_0_length_FieldAccess(EOS(STATIC_6127(java.lang.Object(ARRAY(i2063)), i2203)), i2066, java.lang.Object(java.lang.String(EOC, i2282))) -> f6169_0_length_FieldAccess(EOS(STATIC_6169(java.lang.Object(ARRAY(i2063)), i2203)), i2066, java.lang.Object(java.lang.String(EOC, i2282))) :|: TRUE
f6169_0_length_FieldAccess(EOS(STATIC_6169(java.lang.Object(ARRAY(i2063)), i2203)), i2066, java.lang.Object(java.lang.String(EOC, i2282))) -> f6176_0_length_Return(EOS(STATIC_6176(java.lang.Object(ARRAY(i2063)), i2203)), i2066) :|: TRUE
f6176_0_length_Return(EOS(STATIC_6176(java.lang.Object(ARRAY(i2063)), i2203)), i2066) -> f6186_0_random_Return(EOS(STATIC_6186(java.lang.Object(ARRAY(i2063)), i2203)), i2066) :|: TRUE
f6186_0_random_Return(EOS(STATIC_6186(java.lang.Object(ARRAY(i2063)), i2203)), i2066) -> f6190_0_mk_Load(EOS(STATIC_6190(java.lang.Object(ARRAY(i2063)), i2203)), i2066) :|: TRUE
f6190_0_mk_Load(EOS(STATIC_6190(java.lang.Object(ARRAY(i2063)), i2203)), i2066) -> f6199_0_mk_InvokeMethod(EOS(STATIC_6199(java.lang.Object(ARRAY(i2063)), i2203)), i2066) :|: TRUE
f6199_0_mk_InvokeMethod(EOS(STATIC_6199(java.lang.Object(ARRAY(i2063)), i2203)), i2066) -> f6220_0__init__Load(EOS(STATIC_6220(java.lang.Object(ARRAY(i2063)), i2203)), i2066) :|: TRUE
f6220_0__init__Load(EOS(STATIC_6220(java.lang.Object(ARRAY(i2063)), i2203)), i2066) -> f6245_0__init__InvokeMethod(EOS(STATIC_6245(java.lang.Object(ARRAY(i2063)), i2203)), i2066) :|: TRUE
f6245_0__init__InvokeMethod(EOS(STATIC_6245(java.lang.Object(ARRAY(i2063)), i2203)), i2066) -> f6253_0__init__Load(EOS(STATIC_6253(java.lang.Object(ARRAY(i2063)), i2203)), i2066) :|: TRUE
f6253_0__init__Load(EOS(STATIC_6253(java.lang.Object(ARRAY(i2063)), i2203)), i2066) -> f6270_0__init__Load(EOS(STATIC_6270(java.lang.Object(ARRAY(i2063)), i2203)), i2066) :|: TRUE
f6270_0__init__Load(EOS(STATIC_6270(java.lang.Object(ARRAY(i2063)), i2203)), i2066) -> f6286_0__init__FieldAccess(EOS(STATIC_6286(java.lang.Object(ARRAY(i2063)), i2203)), i2066) :|: TRUE
f6286_0__init__FieldAccess(EOS(STATIC_6286(java.lang.Object(ARRAY(i2063)), i2203)), i2066) -> f6290_0__init__Load(EOS(STATIC_6290(java.lang.Object(ARRAY(i2063)), i2203)), i2066) :|: TRUE
f6290_0__init__Load(EOS(STATIC_6290(java.lang.Object(ARRAY(i2063)), i2203)), i2066) -> f6294_0__init__Load(EOS(STATIC_6294(java.lang.Object(ARRAY(i2063)), i2203)), i2066) :|: TRUE
f6294_0__init__Load(EOS(STATIC_6294(java.lang.Object(ARRAY(i2063)), i2203)), i2066) -> f6298_0__init__FieldAccess(EOS(STATIC_6298(java.lang.Object(ARRAY(i2063)), i2203)), i2066) :|: TRUE
f6298_0__init__FieldAccess(EOS(STATIC_6298(java.lang.Object(ARRAY(i2063)), i2203)), i2066) -> f6312_0__init__Return(EOS(STATIC_6312(java.lang.Object(ARRAY(i2063)), i2203)), i2066) :|: TRUE
f6312_0__init__Return(EOS(STATIC_6312(java.lang.Object(ARRAY(i2063)), i2203)), i2066) -> f6316_0_mk_Store(EOS(STATIC_6316(java.lang.Object(ARRAY(i2063)), i2203)), i2066) :|: TRUE
f6316_0_mk_Store(EOS(STATIC_6316(java.lang.Object(ARRAY(i2063)), i2203)), i2066) -> f6358_0_mk_JMP(EOS(STATIC_6358(java.lang.Object(ARRAY(i2063)), i2203)), i2066) :|: TRUE
f6358_0_mk_JMP(EOS(STATIC_6358(java.lang.Object(ARRAY(i2063)), i2203)), i2066) -> f6443_0_mk_Load(EOS(STATIC_6443(java.lang.Object(ARRAY(i2063)), i2203)), i2066) :|: TRUE
f6443_0_mk_Load(EOS(STATIC_6443(java.lang.Object(ARRAY(i2063)), i2203)), i2066) -> f6444_0_mk_Load(EOS(STATIC_6444(java.lang.Object(ARRAY(i2063)), i2203)), i2066) :|: TRUE
f6444_0_mk_Load(EOS(STATIC_6444(java.lang.Object(ARRAY(i2487)), i2488)), i2490) -> f6520_0_mk_Inc(EOS(STATIC_6520(java.lang.Object(ARRAY(i2487)), i2488)), i2490, i2490) :|: TRUE
f6520_0_mk_Inc(EOS(STATIC_6520(java.lang.Object(ARRAY(i2487)), i2488)), i2490, i2490) -> f6620_0_mk_LE(EOS(STATIC_6620(java.lang.Object(ARRAY(i2487)), i2488)), i2490 + -1, i2490) :|: TRUE
f6620_0_mk_LE(EOS(STATIC_6620(java.lang.Object(ARRAY(i2487)), i2488)), i2566, i2490) -> f5865_0_mk_LE(EOS(STATIC_5865(java.lang.Object(ARRAY(i2487)), i2488)), i2566, i2490) :|: TRUE
f5974_0_random_LT(EOS(STATIC_5974(java.lang.Object(ARRAY(i2063)), i2064)), i2066, i2064, i2063) -> f5990_0_random_ConstantStackPush(EOS(STATIC_5990(java.lang.Object(ARRAY(i2063)), i2064)), i2066) :|: i2064 >= i2063
f5990_0_random_ConstantStackPush(EOS(STATIC_5990(java.lang.Object(ARRAY(i2063)), i2064)), i2066) -> f5999_0_random_Return(EOS(STATIC_5999(java.lang.Object(ARRAY(i2063)), i2064)), i2066) :|: TRUE
f5999_0_random_Return(EOS(STATIC_5999(java.lang.Object(ARRAY(i2063)), i2064)), i2066) -> f6005_0_mk_Load(EOS(STATIC_6005(java.lang.Object(ARRAY(i2063)), i2064)), i2066) :|: TRUE
f6005_0_mk_Load(EOS(STATIC_6005(java.lang.Object(ARRAY(i2063)), i2064)), i2066) -> f6014_0_mk_InvokeMethod(EOS(STATIC_6014(java.lang.Object(ARRAY(i2063)), i2064)), i2066) :|: TRUE
f6014_0_mk_InvokeMethod(EOS(STATIC_6014(java.lang.Object(ARRAY(i2063)), i2064)), i2066) -> f6020_0__init__Load(EOS(STATIC_6020(java.lang.Object(ARRAY(i2063)), i2064)), i2066) :|: TRUE
f6020_0__init__Load(EOS(STATIC_6020(java.lang.Object(ARRAY(i2063)), i2064)), i2066) -> f6036_0__init__InvokeMethod(EOS(STATIC_6036(java.lang.Object(ARRAY(i2063)), i2064)), i2066) :|: TRUE
f6036_0__init__InvokeMethod(EOS(STATIC_6036(java.lang.Object(ARRAY(i2063)), i2064)), i2066) -> f6048_0__init__Load(EOS(STATIC_6048(java.lang.Object(ARRAY(i2063)), i2064)), i2066) :|: TRUE
f6048_0__init__Load(EOS(STATIC_6048(java.lang.Object(ARRAY(i2063)), i2064)), i2066) -> f6062_0__init__Load(EOS(STATIC_6062(java.lang.Object(ARRAY(i2063)), i2064)), i2066) :|: TRUE
f6062_0__init__Load(EOS(STATIC_6062(java.lang.Object(ARRAY(i2063)), i2064)), i2066) -> f6066_0__init__FieldAccess(EOS(STATIC_6066(java.lang.Object(ARRAY(i2063)), i2064)), i2066) :|: TRUE
f6066_0__init__FieldAccess(EOS(STATIC_6066(java.lang.Object(ARRAY(i2063)), i2064)), i2066) -> f6077_0__init__Load(EOS(STATIC_6077(java.lang.Object(ARRAY(i2063)), i2064)), i2066) :|: TRUE
f6077_0__init__Load(EOS(STATIC_6077(java.lang.Object(ARRAY(i2063)), i2064)), i2066) -> f6080_0__init__Load(EOS(STATIC_6080(java.lang.Object(ARRAY(i2063)), i2064)), i2066) :|: TRUE
f6080_0__init__Load(EOS(STATIC_6080(java.lang.Object(ARRAY(i2063)), i2064)), i2066) -> f6090_0__init__FieldAccess(EOS(STATIC_6090(java.lang.Object(ARRAY(i2063)), i2064)), i2066) :|: TRUE
f6090_0__init__FieldAccess(EOS(STATIC_6090(java.lang.Object(ARRAY(i2063)), i2064)), i2066) -> f6107_0__init__Return(EOS(STATIC_6107(java.lang.Object(ARRAY(i2063)), i2064)), i2066) :|: TRUE
f6107_0__init__Return(EOS(STATIC_6107(java.lang.Object(ARRAY(i2063)), i2064)), i2066) -> f6111_0_mk_Store(EOS(STATIC_6111(java.lang.Object(ARRAY(i2063)), i2064)), i2066) :|: TRUE
f6111_0_mk_Store(EOS(STATIC_6111(java.lang.Object(ARRAY(i2063)), i2064)), i2066) -> f6122_0_mk_JMP(EOS(STATIC_6122(java.lang.Object(ARRAY(i2063)), i2064)), i2066) :|: TRUE
f6122_0_mk_JMP(EOS(STATIC_6122(java.lang.Object(ARRAY(i2063)), i2064)), i2066) -> f6162_0_mk_Load(EOS(STATIC_6162(java.lang.Object(ARRAY(i2063)), i2064)), i2066) :|: TRUE
f6162_0_mk_Load(EOS(STATIC_6162(java.lang.Object(ARRAY(i2063)), i2064)), i2066) -> f5244_0_mk_Load(EOS(STATIC_5244(java.lang.Object(ARRAY(i2063)), i2064)), i2066) :|: TRUE
f5244_0_mk_Load(EOS(STATIC_5244(java.lang.Object(ARRAY(i651)), i652)), i1614) -> f5264_0_mk_Inc(EOS(STATIC_5264(java.lang.Object(ARRAY(i651)), i652)), i1614, i1614) :|: TRUE
Combined rules. Obtained 2 IRulesP rules:
f5965_0_random_LT(EOS(STATIC_5965(java.lang.Object(ARRAY(i2063:0)), i2064:0)), i2066:0, i2064:0, i2063:0) -> f5965_0_random_LT(EOS(STATIC_5965(java.lang.Object(ARRAY(i2063:0)), i2064:0)), i2066:0 - 1, i2064:0, i2063:0) :|: i2064:0 >= i2063:0 && i2063:0 > -1 && i2066:0 > 0
f5965_0_random_LT(EOS(STATIC_5965(java.lang.Object(ARRAY(i2063:0)), i2064:0)), i2066:0, i2064:0, i2063:0) -> f5965_0_random_LT(EOS(STATIC_5965(java.lang.Object(ARRAY(i2063:0)), i2064:0 + 1)), i2066:0 - 1, i2064:0 + 1, i2063:0) :|: i2064:0 < i2063:0 && i2064:0 > -1 && i2063:0 > -1 && i2066:0 > 0
Finished conversion. Obtained 2 rules.P rules:
f5965_0_random_LT(i2066:0, i2064:0, i2063:0, i2063:0, i2064:0) -> f5965_0_random_LT(i2066:0 - 1, i2064:0, i2063:0, i2063:0, i2064:0) :|: i2063:0 > -1 && i2066:0 > 0 && i2064:0 >= i2063:0
f5965_0_random_LT(i2066:0, i2064:0, i2063:0, i2063:0, i2064:0) -> f5965_0_random_LT(i2066:0 - 1, i2064:0 + 1, i2063:0, i2063:0, i2064:0 + 1) :|: i2064:0 > -1 && i2064:0 < i2063:0 && i2066:0 > 0 && i2063:0 > -1

----------------------------------------

(8)
Obligation:
Rules:
f5965_0_random_LT(i2066:0, i2064:0, i2063:0, i2063:0, i2064:0) -> f5965_0_random_LT(i2066:0 - 1, i2064:0, i2063:0, i2063:0, i2064:0) :|: i2063:0 > -1 && i2066:0 > 0 && i2064:0 >= i2063:0
f5965_0_random_LT(x, x1, x2, x2, x1) -> f5965_0_random_LT(x - 1, x1 + 1, x2, x2, x1 + 1) :|: x1 > -1 && x1 < x2 && x > 0 && x2 > -1

----------------------------------------

(9) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(10)
Obligation:
Rules:
f5965_0_random_LT(i2066:0, i2064:0, i2063:0, i2063:0, i2064:0) -> f5965_0_random_LT(arith, i2064:0, i2063:0, i2063:0, i2064:0) :|: i2063:0 > -1 && i2066:0 > 0 && i2064:0 >= i2063:0 && arith = i2066:0 - 1
f5965_0_random_LT(x3, x4, x5, x5, x4) -> f5965_0_random_LT(x6, x7, x5, x5, x7) :|: x4 > -1 && x4 < x5 && x3 > 0 && x5 > -1 && x6 = x3 - 1 && x7 = x4 + 1 && x7 = x4 + 1

----------------------------------------

(11) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f5965_0_random_LT(i2066:0, i2064:0, i2063:0, i2063:0, i2064:0) -> f5965_0_random_LT(arith, i2064:0, i2063:0, i2063:0, i2064:0) :|: i2063:0 > -1 && i2066:0 > 0 && i2064:0 >= i2063:0 && arith = i2066:0 - 1
(2) f5965_0_random_LT(x3, x4, x5, x5, x4) -> f5965_0_random_LT(x6, x7, x5, x5, x7) :|: x4 > -1 && x4 < x5 && x3 > 0 && x5 > -1 && x6 = x3 - 1 && x7 = x4 + 1 && x7 = x4 + 1

Arcs:
(1) -> (1)
(2) -> (1), (2)

This digraph is fully evaluated!
----------------------------------------

(12)
Complex Obligation (AND)

----------------------------------------

(13)
Obligation:

Termination digraph:
Nodes:
(1) f5965_0_random_LT(x3, x4, x5, x5, x4) -> f5965_0_random_LT(x6, x7, x5, x5, x7) :|: x4 > -1 && x4 < x5 && x3 > 0 && x5 > -1 && x6 = x3 - 1 && x7 = x4 + 1 && x7 = x4 + 1

Arcs:
(1) -> (1)

This digraph is fully evaluated!

----------------------------------------

(14) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(15)
Obligation:
Rules:
f5965_0_random_LT(x3:0, x4:0, x5:0, x5:0, x4:0) -> f5965_0_random_LT(x3:0 - 1, x4:0 + 1, x5:0, x5:0, x4:0 + 1) :|: x3:0 > 0 && x5:0 > -1 && x5:0 > x4:0 && x4:0 > -1

----------------------------------------

(16) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f5965_0_random_LT(INTEGER, INTEGER, INTEGER, INTEGER, INTEGER)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(17)
Obligation:
Rules:
f5965_0_random_LT(x3:0, x4:0, x5:0, x5:0, x4:0) -> f5965_0_random_LT(c, c1, x5:0, x5:0, c2) :|: c2 = x4:0 + 1 && (c1 = x4:0 + 1 && c = x3:0 - 1) && (x3:0 > 0 && x5:0 > -1 && x5:0 > x4:0 && x4:0 > -1)

----------------------------------------

(18) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f5965_0_random_LT(x, x1, x2, x3, x4)] = x

The following rules are decreasing:
f5965_0_random_LT(x3:0, x4:0, x5:0, x5:0, x4:0) -> f5965_0_random_LT(c, c1, x5:0, x5:0, c2) :|: c2 = x4:0 + 1 && (c1 = x4:0 + 1 && c = x3:0 - 1) && (x3:0 > 0 && x5:0 > -1 && x5:0 > x4:0 && x4:0 > -1)
The following rules are bounded:
f5965_0_random_LT(x3:0, x4:0, x5:0, x5:0, x4:0) -> f5965_0_random_LT(c, c1, x5:0, x5:0, c2) :|: c2 = x4:0 + 1 && (c1 = x4:0 + 1 && c = x3:0 - 1) && (x3:0 > 0 && x5:0 > -1 && x5:0 > x4:0 && x4:0 > -1)

----------------------------------------

(19)
YES

----------------------------------------

(20)
Obligation:

Termination digraph:
Nodes:
(1) f5965_0_random_LT(i2066:0, i2064:0, i2063:0, i2063:0, i2064:0) -> f5965_0_random_LT(arith, i2064:0, i2063:0, i2063:0, i2064:0) :|: i2063:0 > -1 && i2066:0 > 0 && i2064:0 >= i2063:0 && arith = i2066:0 - 1

Arcs:
(1) -> (1)

This digraph is fully evaluated!

----------------------------------------

(21) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(22)
Obligation:
Rules:
f5965_0_random_LT(i2066:0:0, i2064:0:0, i2063:0:0, i2063:0:0, i2064:0:0) -> f5965_0_random_LT(i2066:0:0 - 1, i2064:0:0, i2063:0:0, i2063:0:0, i2064:0:0) :|: i2063:0:0 > -1 && i2066:0:0 > 0 && i2064:0:0 >= i2063:0:0

----------------------------------------

(23) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f5965_0_random_LT(INTEGER, INTEGER, INTEGER, INTEGER, INTEGER)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(24)
Obligation:
Rules:
f5965_0_random_LT(i2066:0:0, i2064:0:0, i2063:0:0, i2063:0:0, i2064:0:0) -> f5965_0_random_LT(c, i2064:0:0, i2063:0:0, i2063:0:0, i2064:0:0) :|: c = i2066:0:0 - 1 && (i2063:0:0 > -1 && i2066:0:0 > 0 && i2064:0:0 >= i2063:0:0)

----------------------------------------

(25) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f5965_0_random_LT ] = f5965_0_random_LT_1

The following rules are decreasing:
f5965_0_random_LT(i2066:0:0, i2064:0:0, i2063:0:0, i2063:0:0, i2064:0:0) -> f5965_0_random_LT(c, i2064:0:0, i2063:0:0, i2063:0:0, i2064:0:0) :|: c = i2066:0:0 - 1 && (i2063:0:0 > -1 && i2066:0:0 > 0 && i2064:0:0 >= i2063:0:0)

The following rules are bounded:
f5965_0_random_LT(i2066:0:0, i2064:0:0, i2063:0:0, i2063:0:0, i2064:0:0) -> f5965_0_random_LT(c, i2064:0:0, i2063:0:0, i2063:0:0, i2064:0:0) :|: c = i2066:0:0 - 1 && (i2063:0:0 > -1 && i2066:0:0 > 0 && i2064:0:0 >= i2063:0:0)


----------------------------------------

(26)
YES
