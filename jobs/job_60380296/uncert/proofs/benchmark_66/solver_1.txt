YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/EH1mt.jar
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


termination of the given Bare JBC problem could be proven:

(0) Bare JBC problem
(1) BareJBCToJBCProof [EQUIVALENT, 0 ms]
(2) JBC problem
(3) JBCToGraph [EQUIVALENT, 148 ms]
(4) JBCTerminationGraph
(5) TerminationGraphToSCCProof [SOUND, 0 ms]
(6) TRUE


----------------------------------------

(0)
Obligation:
need to prove termination of the following program:
public class Hanoi {
    private void solve(int h, int from, int to, int support) {
	if (h < 1) return;
	else if (h == 1) {
	    //System.out.println("from " + from + " to " + to + "\n");
	}
	else {
	    solve(h - 1, from, support, to);
	    //System.out.println("from " + from + " to " + to + "\n");
	    solve(h - 1, support, to, from);
	}
    }

    public static void main(String[] args) {
	new Hanoi().solve(5,1,2,3);
    }
}



----------------------------------------

(1) BareJBCToJBCProof (EQUIVALENT)
initialized classpath
----------------------------------------

(2)
Obligation:
need to prove termination of the following program:
public class Hanoi {
    private void solve(int h, int from, int to, int support) {
	if (h < 1) return;
	else if (h == 1) {
	    //System.out.println("from " + from + " to " + to + "\n");
	}
	else {
	    solve(h - 1, from, support, to);
	    //System.out.println("from " + from + " to " + to + "\n");
	    solve(h - 1, support, to, from);
	}
    }

    public static void main(String[] args) {
	new Hanoi().solve(5,1,2,3);
    }
}



----------------------------------------

(3) JBCToGraph (EQUIVALENT)
Constructed TerminationGraph.
----------------------------------------

(4)
Obligation:
Termination Graph based on JBC Program:
Hanoi.main([Ljava/lang/String;)V: Graph of 486 nodes with 0 SCCs.





----------------------------------------

(5) TerminationGraphToSCCProof (SOUND)
Proven termination by absence of SCCs
----------------------------------------

(6)
TRUE
