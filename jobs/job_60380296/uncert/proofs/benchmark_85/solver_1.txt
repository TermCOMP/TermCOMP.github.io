YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/tvzAQ.jar
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


termination of the given Bare JBC problem could be proven:

(0) Bare JBC problem
(1) BareJBCToJBCProof [EQUIVALENT, 51 ms]
(2) JBC problem
(3) JBCToGraph [EQUIVALENT, 293 ms]
(4) JBCTerminationGraph
(5) TerminationGraphToSCCProof [SOUND, 0 ms]
(6) AND
    (7) JBCTerminationSCC
        (8) SCCToIRSProof [SOUND, 35 ms]
        (9) IRSwT
        (10) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (11) IRSwT
        (12) IRSwTTerminationDigraphProof [EQUIVALENT, 4 ms]
        (13) IRSwT
        (14) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (15) IRSwT
        (16) TempFilterProof [SOUND, 14 ms]
        (17) IntTRS
        (18) RankingReductionPairProof [EQUIVALENT, 0 ms]
        (19) YES
    (20) JBCTerminationSCC
        (21) SCCToIRSProof [SOUND, 56 ms]
        (22) IRSwT
        (23) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (24) IRSwT
        (25) IRSwTTerminationDigraphProof [EQUIVALENT, 7 ms]
        (26) IRSwT
        (27) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (28) IRSwT
        (29) TempFilterProof [SOUND, 6 ms]
        (30) IntTRS
        (31) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (32) YES
    (33) JBCTerminationSCC
        (34) SCCToIRSProof [SOUND, 27 ms]
        (35) IRSwT
        (36) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (37) IRSwT
        (38) IRSwTTerminationDigraphProof [EQUIVALENT, 4 ms]
        (39) IRSwT
        (40) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (41) IRSwT
        (42) TempFilterProof [SOUND, 3 ms]
        (43) IntTRS
        (44) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (45) YES
    (46) JBCTerminationSCC
        (47) SCCToIRSProof [SOUND, 35 ms]
        (48) IRSwT
        (49) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (50) IRSwT
        (51) IRSwTTerminationDigraphProof [EQUIVALENT, 9 ms]
        (52) IRSwT
        (53) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (54) IRSwT
        (55) TempFilterProof [SOUND, 1 ms]
        (56) IntTRS
        (57) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (58) YES
    (59) JBCTerminationSCC
        (60) SCCToIRSProof [SOUND, 33 ms]
        (61) IRSwT
        (62) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (63) IRSwT
        (64) IRSwTTerminationDigraphProof [EQUIVALENT, 7 ms]
        (65) IRSwT
        (66) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (67) IRSwT
        (68) TempFilterProof [SOUND, 2 ms]
        (69) IntTRS
        (70) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (71) YES
    (72) JBCTerminationSCC
        (73) SCCToIRSProof [SOUND, 26 ms]
        (74) IRSwT
        (75) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (76) IRSwT
        (77) IRSwTTerminationDigraphProof [EQUIVALENT, 3 ms]
        (78) IRSwT
        (79) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (80) IRSwT
        (81) TempFilterProof [SOUND, 4 ms]
        (82) IntTRS
        (83) RankingReductionPairProof [EQUIVALENT, 0 ms]
        (84) YES


----------------------------------------

(0)
Obligation:
need to prove termination of the following program:
public class Recursions {
    public static void main(String args[]) {
	for (int i = 0; i < args.length; i++)
	    rec0(0, args.length);
    }

    public static void rec0(int i, int stop) {
        if (i <= stop) {
            rec1(0, 2*i, i);
            rec0(i+1, stop);
        }
    }

    public static void rec1(int j, int stop, int i) {
        if (j <= stop) {
            rec2(i+j, 0, i, j);
            rec1(j+1, stop, i);
        }
    }

    public static void rec2(int k, int stop, int i, int j) {
        if (k >= stop) {
            rec3(0, 2*i + 3*j + 4*k, i, j ,k);
            rec2(k-1, stop, i, j);
        }
    }

    public static void rec3(int l, int stop, int i, int j, int k) {
        if (l <= stop) {
            rec4(1000*i+100*j+10*k+l, 0);
            rec3(l+1, stop, i, j, k);
        }
    }

    public static void rec4(int m, int stop) {
        if (m >= stop)
            rec4(m-1, stop);
    }
}



----------------------------------------

(1) BareJBCToJBCProof (EQUIVALENT)
initialized classpath
----------------------------------------

(2)
Obligation:
need to prove termination of the following program:
public class Recursions {
    public static void main(String args[]) {
	for (int i = 0; i < args.length; i++)
	    rec0(0, args.length);
    }

    public static void rec0(int i, int stop) {
        if (i <= stop) {
            rec1(0, 2*i, i);
            rec0(i+1, stop);
        }
    }

    public static void rec1(int j, int stop, int i) {
        if (j <= stop) {
            rec2(i+j, 0, i, j);
            rec1(j+1, stop, i);
        }
    }

    public static void rec2(int k, int stop, int i, int j) {
        if (k >= stop) {
            rec3(0, 2*i + 3*j + 4*k, i, j ,k);
            rec2(k-1, stop, i, j);
        }
    }

    public static void rec3(int l, int stop, int i, int j, int k) {
        if (l <= stop) {
            rec4(1000*i+100*j+10*k+l, 0);
            rec3(l+1, stop, i, j, k);
        }
    }

    public static void rec4(int m, int stop) {
        if (m >= stop)
            rec4(m-1, stop);
    }
}



----------------------------------------

(3) JBCToGraph (EQUIVALENT)
Constructed TerminationGraph.
----------------------------------------

(4)
Obligation:
Termination Graph based on JBC Program:
Recursions.main([Ljava/lang/String;)V: Graph of 24 nodes with 1 SCC.



Recursions.rec0(II)V: Graph of 25 nodes with 0 SCCs.



Recursions.rec1(III)V: Graph of 27 nodes with 0 SCCs.



Recursions.rec2(IIII)V: Graph of 38 nodes with 0 SCCs.



Recursions.rec3(IIIII)V: Graph of 37 nodes with 0 SCCs.



Recursions.rec4(II)V: Graph of 16 nodes with 0 SCCs.





----------------------------------------

(5) TerminationGraphToSCCProof (SOUND)
Splitted TerminationGraph to 6 SCCss.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: Recursions.rec4(II)V
SCC calls the following helper methods: Recursions.rec4(II)V
Performed SCC analyses:
*Used field analysis yielded the following read fields:

*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(8) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 12 IRulesP rules:
f3710_0_rec4_Load(EOS(STATIC_3710), i243, matching1, i244, matching2, i244) -> f3713_0_rec4_LT(EOS(STATIC_3713), i243, 0, i244, 0, i244, 0) :|: TRUE && matching1 = 0 && matching2 = 0
f3713_0_rec4_LT(EOS(STATIC_3713), i243, matching1, i247, matching2, i247, matching3) -> f3719_0_rec4_LT(EOS(STATIC_3719), i243, 0, i247, 0, i247, 0) :|: TRUE && matching1 = 0 && matching2 = 0 && matching3 = 0
f3719_0_rec4_LT(EOS(STATIC_3719), i243, matching1, i247, matching2, i247, matching3) -> f3726_0_rec4_Load(EOS(STATIC_3726), i243, 0, i247, 0) :|: i247 >= 0 && matching1 = 0 && matching2 = 0 && matching3 = 0
f3726_0_rec4_Load(EOS(STATIC_3726), i243, matching1, i247, matching2) -> f3732_0_rec4_ConstantStackPush(EOS(STATIC_3732), i243, 0, 0, i247) :|: TRUE && matching1 = 0 && matching2 = 0
f3732_0_rec4_ConstantStackPush(EOS(STATIC_3732), i243, matching1, matching2, i247) -> f3741_0_rec4_IntArithmetic(EOS(STATIC_3741), i243, 0, 0, i247, 1) :|: TRUE && matching1 = 0 && matching2 = 0
f3741_0_rec4_IntArithmetic(EOS(STATIC_3741), i243, matching1, matching2, i247, matching3) -> f3752_0_rec4_Load(EOS(STATIC_3752), i243, 0, 0, i247 - 1) :|: i247 >= 0 && matching1 = 0 && matching2 = 0 && matching3 = 1
f3752_0_rec4_Load(EOS(STATIC_3752), i243, matching1, matching2, i253) -> f3761_0_rec4_InvokeMethod(EOS(STATIC_3761), i243, 0, i253, 0) :|: TRUE && matching1 = 0 && matching2 = 0
f3761_0_rec4_InvokeMethod(EOS(STATIC_3761), i243, matching1, i253, matching2) -> f3766_0_rec4_Load(EOS(STATIC_3766), i253, 0, i253, 0) :|: TRUE && matching1 = 0 && matching2 = 0
f3761_0_rec4_InvokeMethod(EOS(STATIC_3761), i243, matching1, i253, matching2) -> f3766_1_rec4_Load(EOS(STATIC_3766), i243, 0, i253, 0) :|: TRUE && matching1 = 0 && matching2 = 0
f3766_0_rec4_Load(EOS(STATIC_3766), i253, matching1, i253, matching2) -> f3769_0_rec4_Load(EOS(STATIC_3769), i253, 0, i253, 0) :|: TRUE && matching1 = 0 && matching2 = 0
f3769_0_rec4_Load(EOS(STATIC_3769), i253, matching1, i253, matching2) -> f3696_0_rec4_Load(EOS(STATIC_3696), i253, 0, i253, 0) :|: TRUE && matching1 = 0 && matching2 = 0
f3696_0_rec4_Load(EOS(STATIC_3696), i243, matching1, i244, matching2) -> f3710_0_rec4_Load(EOS(STATIC_3710), i243, 0, i244, 0, i244) :|: TRUE && matching1 = 0 && matching2 = 0
Combined rules. Obtained 2 IRulesP rules:
f3710_0_rec4_Load(EOS(STATIC_3710), i243:0, 0, i244:0, 0, i244:0) -> f3710_0_rec4_Load(EOS(STATIC_3710), i244:0 - 1, 0, i244:0 - 1, 0, i244:0 - 1) :|: i244:0 > -1
Removed following non-SCC rules:
f3710_0_rec4_Load(EOS(STATIC_3710), i243:0, 0, i244:0, 0, i244:0) -> f3766_1_rec4_Load(EOS(STATIC_3766), i243:0, 0, i244:0 - 1, 0) :|: i244:0 > -1
Filtered constant ground arguments:
   f3710_0_rec4_Load(x1, x2, x3, x4, x5, x6) -> f3710_0_rec4_Load(x2, x4, x6)
   EOS(x1) -> EOS
Filtered duplicate arguments:
   f3710_0_rec4_Load(x1, x2, x3) -> f3710_0_rec4_Load(x1, x3)
Filtered unneeded arguments:
   f3710_0_rec4_Load(x1, x2) -> f3710_0_rec4_Load(x2)
Finished conversion. Obtained 1 rules.P rules:
f3710_0_rec4_Load(i244:0) -> f3710_0_rec4_Load(i244:0 - 1) :|: i244:0 > -1

----------------------------------------

(9)
Obligation:
Rules:
f3710_0_rec4_Load(i244:0) -> f3710_0_rec4_Load(i244:0 - 1) :|: i244:0 > -1

----------------------------------------

(10) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(11)
Obligation:
Rules:
f3710_0_rec4_Load(i244:0) -> f3710_0_rec4_Load(arith) :|: i244:0 > -1 && arith = i244:0 - 1

----------------------------------------

(12) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f3710_0_rec4_Load(i244:0) -> f3710_0_rec4_Load(arith) :|: i244:0 > -1 && arith = i244:0 - 1

Arcs:
(1) -> (1)

This digraph is fully evaluated!
----------------------------------------

(13)
Obligation:

Termination digraph:
Nodes:
(1) f3710_0_rec4_Load(i244:0) -> f3710_0_rec4_Load(arith) :|: i244:0 > -1 && arith = i244:0 - 1

Arcs:
(1) -> (1)

This digraph is fully evaluated!

----------------------------------------

(14) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(15)
Obligation:
Rules:
f3710_0_rec4_Load(i244:0:0) -> f3710_0_rec4_Load(i244:0:0 - 1) :|: i244:0:0 > -1

----------------------------------------

(16) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f3710_0_rec4_Load(INTEGER)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(17)
Obligation:
Rules:
f3710_0_rec4_Load(i244:0:0) -> f3710_0_rec4_Load(c) :|: c = i244:0:0 - 1 && i244:0:0 > -1

----------------------------------------

(18) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f3710_0_rec4_Load ] = f3710_0_rec4_Load_1

The following rules are decreasing:
f3710_0_rec4_Load(i244:0:0) -> f3710_0_rec4_Load(c) :|: c = i244:0:0 - 1 && i244:0:0 > -1

The following rules are bounded:
f3710_0_rec4_Load(i244:0:0) -> f3710_0_rec4_Load(c) :|: c = i244:0:0 - 1 && i244:0:0 > -1


----------------------------------------

(19)
YES

----------------------------------------

(20)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: Recursions.rec3(IIIII)V
SCC calls the following helper methods: Recursions.rec4(II)V, Recursions.rec3(IIIII)V
Performed SCC analyses:
*Used field analysis yielded the following read fields:

*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(21) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 34 IRulesP rules:
f3815_0_rec3_Load(EOS(STATIC_3815), i283, i124, i125, i126, i127, i284, i124, i125, i126, i127, i284) -> f3817_0_rec3_GT(EOS(STATIC_3817), i283, i124, i125, i126, i127, i284, i124, i125, i126, i127, i284, i124) :|: TRUE
f3817_0_rec3_GT(EOS(STATIC_3817), i283, i124, i125, i126, i127, i284, i124, i125, i126, i127, i284, i124) -> f3819_0_rec3_GT(EOS(STATIC_3819), i283, i124, i125, i126, i127, i284, i124, i125, i126, i127, i284, i124) :|: i284 <= i124
f3819_0_rec3_GT(EOS(STATIC_3819), i283, i124, i125, i126, i127, i284, i124, i125, i126, i127, i284, i124) -> f3825_0_rec3_ConstantStackPush(EOS(STATIC_3825), i283, i124, i125, i126, i127, i284, i124, i125, i126, i127) :|: i284 <= i124
f3825_0_rec3_ConstantStackPush(EOS(STATIC_3825), i283, i124, i125, i126, i127, i284, i124, i125, i126, i127) -> f3828_0_rec3_Load(EOS(STATIC_3828), i283, i124, i125, i126, i127, i284, i124, i125, i126, i127, 1000) :|: TRUE
f3828_0_rec3_Load(EOS(STATIC_3828), i283, i124, i125, i126, i127, i284, i124, i125, i126, i127, matching1) -> f3832_0_rec3_IntArithmetic(EOS(STATIC_3832), i283, i124, i125, i126, i127, i284, i124, i125, i126, i127, 1000, i125) :|: TRUE && matching1 = 1000
f3832_0_rec3_IntArithmetic(EOS(STATIC_3832), i283, i124, i125, i126, i127, i284, i124, i125, i126, i127, matching1, i125) -> f3841_0_rec3_ConstantStackPush(EOS(STATIC_3841), i283, i124, i125, i126, i127, i284, i124, i125, i126, i127, 1000 * i125) :|: TRUE && matching1 = 1000
f3841_0_rec3_ConstantStackPush(EOS(STATIC_3841), i283, i124, i125, i126, i127, i284, i124, i125, i126, i127, i301) -> f3842_0_rec3_Load(EOS(STATIC_3842), i283, i124, i125, i126, i127, i284, i124, i125, i126, i127, i301, 100) :|: TRUE
f3842_0_rec3_Load(EOS(STATIC_3842), i283, i124, i125, i126, i127, i284, i124, i125, i126, i127, i301, matching1) -> f3843_0_rec3_IntArithmetic(EOS(STATIC_3843), i283, i124, i125, i126, i127, i284, i124, i125, i126, i127, i301, 100, i126) :|: TRUE && matching1 = 100
f3843_0_rec3_IntArithmetic(EOS(STATIC_3843), i283, i124, i125, i126, i127, i284, i124, i125, i126, i127, i301, matching1, i126) -> f3844_0_rec3_IntArithmetic(EOS(STATIC_3844), i283, i124, i125, i126, i127, i284, i124, i125, i126, i127, i301, 100 * i126) :|: TRUE && matching1 = 100
f3844_0_rec3_IntArithmetic(EOS(STATIC_3844), i283, i124, i125, i126, i127, i284, i124, i125, i126, i127, i301, i302) -> f3845_0_rec3_ConstantStackPush(EOS(STATIC_3845), i283, i124, i125, i126, i127, i284, i124, i125, i126, i127, i301 + i302) :|: i301 >= 0 && i302 >= 0
f3845_0_rec3_ConstantStackPush(EOS(STATIC_3845), i283, i124, i125, i126, i127, i284, i124, i125, i126, i127, i303) -> f3846_0_rec3_Load(EOS(STATIC_3846), i283, i124, i125, i126, i127, i284, i124, i125, i126, i127, i303, 10) :|: TRUE
f3846_0_rec3_Load(EOS(STATIC_3846), i283, i124, i125, i126, i127, i284, i124, i125, i126, i127, i303, matching1) -> f3847_0_rec3_IntArithmetic(EOS(STATIC_3847), i283, i124, i125, i126, i127, i284, i124, i125, i126, i127, i303, 10, i127) :|: TRUE && matching1 = 10
f3847_0_rec3_IntArithmetic(EOS(STATIC_3847), i283, i124, i125, i126, i127, i284, i124, i125, i126, i127, i303, matching1, i127) -> f3848_0_rec3_IntArithmetic(EOS(STATIC_3848), i283, i124, i125, i126, i127, i284, i124, i125, i126, i127, i303, 10 * i127) :|: TRUE && matching1 = 10
f3848_0_rec3_IntArithmetic(EOS(STATIC_3848), i283, i124, i125, i126, i127, i284, i124, i125, i126, i127, i303, i304) -> f3850_0_rec3_Load(EOS(STATIC_3850), i283, i124, i125, i126, i127, i284, i124, i125, i126, i127, i303 + i304) :|: i303 >= 0 && i304 >= 0
f3850_0_rec3_Load(EOS(STATIC_3850), i283, i124, i125, i126, i127, i284, i124, i125, i126, i127, i305) -> f3851_0_rec3_IntArithmetic(EOS(STATIC_3851), i283, i124, i125, i126, i127, i284, i124, i125, i126, i127, i305, i284) :|: TRUE
f3851_0_rec3_IntArithmetic(EOS(STATIC_3851), i283, i124, i125, i126, i127, i284, i124, i125, i126, i127, i305, i284) -> f3852_0_rec3_ConstantStackPush(EOS(STATIC_3852), i283, i124, i125, i126, i127, i284, i124, i125, i126, i127, i305 + i284) :|: i305 >= 0 && i284 >= 0
f3852_0_rec3_ConstantStackPush(EOS(STATIC_3852), i283, i124, i125, i126, i127, i284, i124, i125, i126, i127, i306) -> f3854_0_rec3_InvokeMethod(EOS(STATIC_3854), i283, i124, i125, i126, i127, i284, i124, i125, i126, i127, i306, 0) :|: TRUE
f3854_0_rec3_InvokeMethod(EOS(STATIC_3854), i283, i124, i125, i126, i127, i284, i124, i125, i126, i127, i306, matching1) -> f3855_0_rec4_Load(EOS(STATIC_3855), i306, 0, i306, 0) :|: i284 <= i124 && matching1 = 0
f3854_0_rec3_InvokeMethod(EOS(STATIC_3854), i283, i124, i125, i126, i127, i284, i124, i125, i126, i127, i306, matching1) -> f3855_1_rec4_Load(EOS(STATIC_3855), i283, i124, i125, i126, i127, i284, i124, i125, i126, i127, i306, 0) :|: i284 <= i124 && matching1 = 0
f3855_0_rec4_Load(EOS(STATIC_3855), i306, matching1, i306, matching2) -> f3988_0_rec4_Load(EOS(STATIC_3988), i306, 0, i306, 0) :|: TRUE && matching1 = 0 && matching2 = 0
f3868_0_rec4_Return(EOS(STATIC_3868), i283, i124, i125, i126, i127, i284, i124, i125, i126, i127) -> f3869_0_rec3_Load(EOS(STATIC_3869), i283, i124, i125, i126, i127, i284, i124, i125, i126, i127) :|: TRUE
f3869_0_rec3_Load(EOS(STATIC_3869), i283, i124, i125, i126, i127, i284, i124, i125, i126, i127) -> f3870_0_rec3_ConstantStackPush(EOS(STATIC_3870), i283, i124, i125, i126, i127, i124, i125, i126, i127, i284) :|: TRUE
f3870_0_rec3_ConstantStackPush(EOS(STATIC_3870), i283, i124, i125, i126, i127, i124, i125, i126, i127, i284) -> f3871_0_rec3_IntArithmetic(EOS(STATIC_3871), i283, i124, i125, i126, i127, i124, i125, i126, i127, i284, 1) :|: TRUE
f3871_0_rec3_IntArithmetic(EOS(STATIC_3871), i283, i124, i125, i126, i127, i124, i125, i126, i127, i284, matching1) -> f3872_0_rec3_Load(EOS(STATIC_3872), i283, i124, i125, i126, i127, i124, i125, i126, i127, i284 + 1) :|: i284 >= 0 && matching1 = 1
f3872_0_rec3_Load(EOS(STATIC_3872), i283, i124, i125, i126, i127, i124, i125, i126, i127, i313) -> f3873_0_rec3_Load(EOS(STATIC_3873), i283, i124, i125, i126, i127, i125, i126, i127, i313, i124) :|: TRUE
f3873_0_rec3_Load(EOS(STATIC_3873), i283, i124, i125, i126, i127, i125, i126, i127, i313, i124) -> f3874_0_rec3_Load(EOS(STATIC_3874), i283, i124, i125, i126, i127, i126, i127, i313, i124, i125) :|: TRUE
f3874_0_rec3_Load(EOS(STATIC_3874), i283, i124, i125, i126, i127, i126, i127, i313, i124, i125) -> f3875_0_rec3_Load(EOS(STATIC_3875), i283, i124, i125, i126, i127, i127, i313, i124, i125, i126) :|: TRUE
f3875_0_rec3_Load(EOS(STATIC_3875), i283, i124, i125, i126, i127, i127, i313, i124, i125, i126) -> f3876_0_rec3_InvokeMethod(EOS(STATIC_3876), i283, i124, i125, i126, i127, i313, i124, i125, i126, i127) :|: TRUE
f3876_0_rec3_InvokeMethod(EOS(STATIC_3876), i283, i124, i125, i126, i127, i313, i124, i125, i126, i127) -> f3877_0_rec3_Load(EOS(STATIC_3877), i313, i124, i125, i126, i127, i313, i124, i125, i126, i127) :|: i313 >= 1
f3876_0_rec3_InvokeMethod(EOS(STATIC_3876), i283, i124, i125, i126, i127, i313, i124, i125, i126, i127) -> f3877_1_rec3_Load(EOS(STATIC_3877), i283, i124, i125, i126, i127, i313, i124, i125, i126, i127) :|: i313 >= 1
f3877_0_rec3_Load(EOS(STATIC_3877), i313, i124, i125, i126, i127, i313, i124, i125, i126, i127) -> f3878_0_rec3_Load(EOS(STATIC_3878), i313, i124, i125, i126, i127, i313, i124, i125, i126, i127) :|: TRUE
f3878_0_rec3_Load(EOS(STATIC_3878), i313, i124, i125, i126, i127, i313, i124, i125, i126, i127) -> f3811_0_rec3_Load(EOS(STATIC_3811), i313, i124, i125, i126, i127, i313, i124, i125, i126, i127) :|: TRUE
f3811_0_rec3_Load(EOS(STATIC_3811), i283, i124, i125, i126, i127, i284, i124, i125, i126, i127) -> f3815_0_rec3_Load(EOS(STATIC_3815), i283, i124, i125, i126, i127, i284, i124, i125, i126, i127, i284) :|: TRUE
f3855_1_rec4_Load(EOS(STATIC_3855), i283, i124, i125, i126, i127, i284, i124, i125, i126, i127, i306, matching1) -> f3868_0_rec4_Return(EOS(STATIC_3868), i283, i124, i125, i126, i127, i284, i124, i125, i126, i127) :|: TRUE && matching1 = 0
Combined rules. Obtained 3 IRulesP rules:
f3868_0_rec4_Return(EOS(STATIC_3868), i283:0, i124:0, i125:0, i126:0, i127:0, i284:0, i124:0, i125:0, i126:0, i127:0) -> f3868_0_rec4_Return(EOS(STATIC_3868), i284:0 + 1, i124:0, i125:0, i126:0, i127:0, i284:0 + 1, i124:0, i125:0, i126:0, i127:0) :|: i284:0 > -1 && i284:0 + 1 <= i124:0 && 100 * i126:0 >= 0 && 1000 * i125:0 >= 0 && 10 * i127:0 >= 0 && 1000 * i125:0 + 100 * i126:0 >= 0 && 1000 * i125:0 + 100 * i126:0 + 10 * i127:0 >= 0
Removed following non-SCC rules:
f3868_0_rec4_Return(EOS(STATIC_3868), i283:0, i124:0, i125:0, i126:0, i127:0, i284:0, i124:0, i125:0, i126:0, i127:0) -> f3988_0_rec4_Load(EOS(STATIC_3988), 1000 * i125:0 + 100 * i126:0 + 10 * i127:0 + (i284:0 + 1), 0, 1000 * i125:0 + 100 * i126:0 + 10 * i127:0 + (i284:0 + 1), 0) :|: i284:0 > -1 && i284:0 + 1 <= i124:0 && 100 * i126:0 >= 0 && 1000 * i125:0 >= 0 && 10 * i127:0 >= 0 && 1000 * i125:0 + 100 * i126:0 >= 0 && 1000 * i125:0 + 100 * i126:0 + 10 * i127:0 >= 0
f3868_0_rec4_Return(EOS(STATIC_3868), i283:0, i124:0, i125:0, i126:0, i127:0, i284:0, i124:0, i125:0, i126:0, i127:0) -> f3877_1_rec3_Load(EOS(STATIC_3877), i283:0, i124:0, i125:0, i126:0, i127:0, i284:0 + 1, i124:0, i125:0, i126:0, i127:0) :|: i284:0 > -1
Filtered constant ground arguments:
   f3868_0_rec4_Return(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11) -> f3868_0_rec4_Return(x2, x3, x4, x5, x6, x7, x8, x9, x10, x11)
   EOS(x1) -> EOS
Filtered duplicate arguments:
   f3868_0_rec4_Return(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f3868_0_rec4_Return(x1, x6, x7, x8, x9, x10)
Filtered unneeded arguments:
   f3868_0_rec4_Return(x1, x2, x3, x4, x5, x6) -> f3868_0_rec4_Return(x2, x3, x4, x5, x6)
Finished conversion. Obtained 1 rules.P rules:
f3868_0_rec4_Return(i284:0, i124:0, i125:0, i126:0, i127:0) -> f3868_0_rec4_Return(i284:0 + 1, i124:0, i125:0, i126:0, i127:0) :|: i284:0 + 1 <= i124:0 && i284:0 > -1 && 100 * i126:0 >= 0 && 1000 * i125:0 >= 0 && 10 * i127:0 >= 0 && 1000 * i125:0 + 100 * i126:0 + 10 * i127:0 >= 0 && 1000 * i125:0 + 100 * i126:0 >= 0

----------------------------------------

(22)
Obligation:
Rules:
f3868_0_rec4_Return(i284:0, i124:0, i125:0, i126:0, i127:0) -> f3868_0_rec4_Return(i284:0 + 1, i124:0, i125:0, i126:0, i127:0) :|: i284:0 + 1 <= i124:0 && i284:0 > -1 && 100 * i126:0 >= 0 && 1000 * i125:0 >= 0 && 10 * i127:0 >= 0 && 1000 * i125:0 + 100 * i126:0 + 10 * i127:0 >= 0 && 1000 * i125:0 + 100 * i126:0 >= 0

----------------------------------------

(23) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(24)
Obligation:
Rules:
f3868_0_rec4_Return(i284:0, i124:0, i125:0, i126:0, i127:0) -> f3868_0_rec4_Return(arith, i124:0, i125:0, i126:0, i127:0) :|: i284:0 + 1 <= i124:0 && i284:0 > -1 && 100 * i126:0 >= 0 && 1000 * i125:0 >= 0 && 10 * i127:0 >= 0 && 1000 * i125:0 + 100 * i126:0 + 10 * i127:0 >= 0 && 1000 * i125:0 + 100 * i126:0 >= 0 && arith = i284:0 + 1

----------------------------------------

(25) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f3868_0_rec4_Return(i284:0, i124:0, i125:0, i126:0, i127:0) -> f3868_0_rec4_Return(arith, i124:0, i125:0, i126:0, i127:0) :|: i284:0 + 1 <= i124:0 && i284:0 > -1 && 100 * i126:0 >= 0 && 1000 * i125:0 >= 0 && 10 * i127:0 >= 0 && 1000 * i125:0 + 100 * i126:0 + 10 * i127:0 >= 0 && 1000 * i125:0 + 100 * i126:0 >= 0 && arith = i284:0 + 1

Arcs:
(1) -> (1)

This digraph is fully evaluated!
----------------------------------------

(26)
Obligation:

Termination digraph:
Nodes:
(1) f3868_0_rec4_Return(i284:0, i124:0, i125:0, i126:0, i127:0) -> f3868_0_rec4_Return(arith, i124:0, i125:0, i126:0, i127:0) :|: i284:0 + 1 <= i124:0 && i284:0 > -1 && 100 * i126:0 >= 0 && 1000 * i125:0 >= 0 && 10 * i127:0 >= 0 && 1000 * i125:0 + 100 * i126:0 + 10 * i127:0 >= 0 && 1000 * i125:0 + 100 * i126:0 >= 0 && arith = i284:0 + 1

Arcs:
(1) -> (1)

This digraph is fully evaluated!

----------------------------------------

(27) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(28)
Obligation:
Rules:
f3868_0_rec4_Return(i284:0:0, i124:0:0, i125:0:0, i126:0:0, i127:0:0) -> f3868_0_rec4_Return(i284:0:0 + 1, i124:0:0, i125:0:0, i126:0:0, i127:0:0) :|: 1000 * i125:0:0 + 100 * i126:0:0 + 10 * i127:0:0 >= 0 && 1000 * i125:0:0 + 100 * i126:0:0 >= 0 && 10 * i127:0:0 >= 0 && 1000 * i125:0:0 >= 0 && 100 * i126:0:0 >= 0 && i284:0:0 > -1 && i284:0:0 + 1 <= i124:0:0

----------------------------------------

(29) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f3868_0_rec4_Return(INTEGER, INTEGER, INTEGER, INTEGER, INTEGER)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(30)
Obligation:
Rules:
f3868_0_rec4_Return(i284:0:0, i124:0:0, i125:0:0, i126:0:0, i127:0:0) -> f3868_0_rec4_Return(c, i124:0:0, i125:0:0, i126:0:0, i127:0:0) :|: c = i284:0:0 + 1 && (1000 * i125:0:0 + 100 * i126:0:0 + 10 * i127:0:0 >= 0 && 1000 * i125:0:0 + 100 * i126:0:0 >= 0 && 10 * i127:0:0 >= 0 && 1000 * i125:0:0 >= 0 && 100 * i126:0:0 >= 0 && i284:0:0 > -1 && i284:0:0 + 1 <= i124:0:0)

----------------------------------------

(31) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f3868_0_rec4_Return(x, x1, x2, x3, x4)] = -x + x1

The following rules are decreasing:
f3868_0_rec4_Return(i284:0:0, i124:0:0, i125:0:0, i126:0:0, i127:0:0) -> f3868_0_rec4_Return(c, i124:0:0, i125:0:0, i126:0:0, i127:0:0) :|: c = i284:0:0 + 1 && (1000 * i125:0:0 + 100 * i126:0:0 + 10 * i127:0:0 >= 0 && 1000 * i125:0:0 + 100 * i126:0:0 >= 0 && 10 * i127:0:0 >= 0 && 1000 * i125:0:0 >= 0 && 100 * i126:0:0 >= 0 && i284:0:0 > -1 && i284:0:0 + 1 <= i124:0:0)
The following rules are bounded:
f3868_0_rec4_Return(i284:0:0, i124:0:0, i125:0:0, i126:0:0, i127:0:0) -> f3868_0_rec4_Return(c, i124:0:0, i125:0:0, i126:0:0, i127:0:0) :|: c = i284:0:0 + 1 && (1000 * i125:0:0 + 100 * i126:0:0 + 10 * i127:0:0 >= 0 && 1000 * i125:0:0 + 100 * i126:0:0 >= 0 && 10 * i127:0:0 >= 0 && 1000 * i125:0:0 >= 0 && 100 * i126:0:0 >= 0 && i284:0:0 > -1 && i284:0:0 + 1 <= i124:0:0)

----------------------------------------

(32)
YES

----------------------------------------

(33)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: Recursions.rec2(IIII)V
SCC calls the following helper methods: Recursions.rec3(IIIII)V, Recursions.rec2(IIII)V, Recursions.rec4(II)V
Performed SCC analyses:
*Used field analysis yielded the following read fields:

*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(34) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 35 IRulesP rules:
f3227_0_rec2_Load(EOS(STATIC_3227), i72, matching1, i73, i74, i75, matching2, i73, i74, i75) -> f3240_0_rec2_LT(EOS(STATIC_3240), i72, 0, i73, i74, i75, 0, i73, i74, i75, 0) :|: TRUE && matching1 = 0 && matching2 = 0
f3240_0_rec2_LT(EOS(STATIC_3240), i72, matching1, i73, i74, i79, matching2, i73, i74, i79, matching3) -> f3246_0_rec2_LT(EOS(STATIC_3246), i72, 0, i73, i74, i79, 0, i73, i74, i79, 0) :|: TRUE && matching1 = 0 && matching2 = 0 && matching3 = 0
f3246_0_rec2_LT(EOS(STATIC_3246), i72, matching1, i73, i74, i79, matching2, i73, i74, i79, matching3) -> f3254_0_rec2_ConstantStackPush(EOS(STATIC_3254), i72, 0, i73, i74, i79, 0, i73, i74) :|: i79 >= 0 && matching1 = 0 && matching2 = 0 && matching3 = 0
f3254_0_rec2_ConstantStackPush(EOS(STATIC_3254), i72, matching1, i73, i74, i79, matching2, i73, i74) -> f3264_0_rec2_ConstantStackPush(EOS(STATIC_3264), i72, 0, i73, i74, i79, 0, i73, i74, 0) :|: TRUE && matching1 = 0 && matching2 = 0
f3264_0_rec2_ConstantStackPush(EOS(STATIC_3264), i72, matching1, i73, i74, i79, matching2, i73, i74, matching3) -> f3282_0_rec2_Load(EOS(STATIC_3282), i72, 0, i73, i74, i79, 0, i73, i74, 0, 2) :|: TRUE && matching1 = 0 && matching2 = 0 && matching3 = 0
f3282_0_rec2_Load(EOS(STATIC_3282), i72, matching1, i73, i74, i79, matching2, i73, i74, matching3, matching4) -> f3286_0_rec2_IntArithmetic(EOS(STATIC_3286), i72, 0, i73, i74, i79, 0, i73, i74, 0, 2, i73) :|: TRUE && matching1 = 0 && matching2 = 0 && matching3 = 0 && matching4 = 2
f3286_0_rec2_IntArithmetic(EOS(STATIC_3286), i72, matching1, i73, i74, i79, matching2, i73, i74, matching3, matching4, i73) -> f3301_0_rec2_ConstantStackPush(EOS(STATIC_3301), i72, 0, i73, i74, i79, 0, i73, i74, 0, 2 * i73) :|: TRUE && matching1 = 0 && matching2 = 0 && matching3 = 0 && matching4 = 2
f3301_0_rec2_ConstantStackPush(EOS(STATIC_3301), i72, matching1, i73, i74, i79, matching2, i73, i74, matching3, i93) -> f3306_0_rec2_Load(EOS(STATIC_3306), i72, 0, i73, i74, i79, 0, i73, i74, 0, i93, 3) :|: TRUE && matching1 = 0 && matching2 = 0 && matching3 = 0
f3306_0_rec2_Load(EOS(STATIC_3306), i72, matching1, i73, i74, i79, matching2, i73, i74, matching3, i93, matching4) -> f3313_0_rec2_IntArithmetic(EOS(STATIC_3313), i72, 0, i73, i74, i79, 0, i73, i74, 0, i93, 3, i74) :|: TRUE && matching1 = 0 && matching2 = 0 && matching3 = 0 && matching4 = 3
f3313_0_rec2_IntArithmetic(EOS(STATIC_3313), i72, matching1, i73, i74, i79, matching2, i73, i74, matching3, i93, matching4, i74) -> f3317_0_rec2_IntArithmetic(EOS(STATIC_3317), i72, 0, i73, i74, i79, 0, i73, i74, 0, i93, 3 * i74) :|: TRUE && matching1 = 0 && matching2 = 0 && matching3 = 0 && matching4 = 3
f3317_0_rec2_IntArithmetic(EOS(STATIC_3317), i72, matching1, i73, i74, i79, matching2, i73, i74, matching3, i93, i96) -> f3365_0_rec2_ConstantStackPush(EOS(STATIC_3365), i72, 0, i73, i74, i79, 0, i73, i74, 0, i93 + i96) :|: i93 >= 0 && i96 >= 0 && matching1 = 0 && matching2 = 0 && matching3 = 0
f3365_0_rec2_ConstantStackPush(EOS(STATIC_3365), i72, matching1, i73, i74, i79, matching2, i73, i74, matching3, i99) -> f3372_0_rec2_Load(EOS(STATIC_3372), i72, 0, i73, i74, i79, 0, i73, i74, 0, i99, 4) :|: TRUE && matching1 = 0 && matching2 = 0 && matching3 = 0
f3372_0_rec2_Load(EOS(STATIC_3372), i72, matching1, i73, i74, i79, matching2, i73, i74, matching3, i99, matching4) -> f3375_0_rec2_IntArithmetic(EOS(STATIC_3375), i72, 0, i73, i74, i79, 0, i73, i74, 0, i99, 4, i79) :|: TRUE && matching1 = 0 && matching2 = 0 && matching3 = 0 && matching4 = 4
f3375_0_rec2_IntArithmetic(EOS(STATIC_3375), i72, matching1, i73, i74, i79, matching2, i73, i74, matching3, i99, matching4, i79) -> f3380_0_rec2_IntArithmetic(EOS(STATIC_3380), i72, 0, i73, i74, i79, 0, i73, i74, 0, i99, 4 * i79) :|: TRUE && matching1 = 0 && matching2 = 0 && matching3 = 0 && matching4 = 4
f3380_0_rec2_IntArithmetic(EOS(STATIC_3380), i72, matching1, i73, i74, i79, matching2, i73, i74, matching3, i99, i101) -> f3414_0_rec2_Load(EOS(STATIC_3414), i72, 0, i73, i74, i79, 0, i73, i74, 0, i99 + i101) :|: i99 >= 0 && i101 >= 0 && matching1 = 0 && matching2 = 0 && matching3 = 0
f3414_0_rec2_Load(EOS(STATIC_3414), i72, matching1, i73, i74, i79, matching2, i73, i74, matching3, i109) -> f3424_0_rec2_Load(EOS(STATIC_3424), i72, 0, i73, i74, i79, 0, i73, i74, 0, i109, i73) :|: TRUE && matching1 = 0 && matching2 = 0 && matching3 = 0
f3424_0_rec2_Load(EOS(STATIC_3424), i72, matching1, i73, i74, i79, matching2, i73, i74, matching3, i109, i73) -> f3433_0_rec2_Load(EOS(STATIC_3433), i72, 0, i73, i74, i79, 0, i73, i74, 0, i109, i73, i74) :|: TRUE && matching1 = 0 && matching2 = 0 && matching3 = 0
f3433_0_rec2_Load(EOS(STATIC_3433), i72, matching1, i73, i74, i79, matching2, i73, i74, matching3, i109, i73, i74) -> f3444_0_rec2_InvokeMethod(EOS(STATIC_3444), i72, 0, i73, i74, i79, 0, i73, i74, 0, i109, i73, i74, i79) :|: TRUE && matching1 = 0 && matching2 = 0 && matching3 = 0
f3444_0_rec2_InvokeMethod(EOS(STATIC_3444), i72, matching1, i73, i74, i79, matching2, i73, i74, matching3, i109, i73, i74, i79) -> f3456_0_rec3_Load(EOS(STATIC_3456), 0, i109, i73, i74, i79, 0, i109, i73, i74, i79) :|: TRUE && matching1 = 0 && matching2 = 0 && matching3 = 0
f3444_0_rec2_InvokeMethod(EOS(STATIC_3444), i72, matching1, i73, i74, i79, matching2, i73, i74, matching3, i109, i73, i74, i79) -> f3456_1_rec3_Load(EOS(STATIC_3456), i72, 0, i73, i74, i79, 0, i73, i74, 0, i109, i73, i74, i79) :|: TRUE && matching1 = 0 && matching2 = 0 && matching3 = 0
f3456_0_rec3_Load(EOS(STATIC_3456), matching1, i109, i73, i74, i79, matching2, i109, i73, i74, i79) -> f4112_0_rec3_Load(EOS(STATIC_4112), 0, i109, i73, i74, i79, 0, i109, i73, i74, i79) :|: TRUE && matching1 = 0 && matching2 = 0
f3839_0_rec3_Return(EOS(STATIC_3839), i72, matching1, i293, i295, i297, matching2, i293, i295) -> f3556_0_rec3_Return(EOS(STATIC_3556), i72, 0, i293, i295, i297, 0, i293, i295) :|: TRUE && matching1 = 0 && matching2 = 0
f3556_0_rec3_Return(EOS(STATIC_3556), i72, matching1, i150, i152, i154, matching2, i150, i152) -> f3562_0_rec2_Load(EOS(STATIC_3562), i72, 0, i150, i152, i154, 0, i150, i152) :|: TRUE && matching1 = 0 && matching2 = 0
f3562_0_rec2_Load(EOS(STATIC_3562), i72, matching1, i150, i152, i154, matching2, i150, i152) -> f3569_0_rec2_ConstantStackPush(EOS(STATIC_3569), i72, 0, i150, i152, 0, i150, i152, i154) :|: TRUE && matching1 = 0 && matching2 = 0
f3569_0_rec2_ConstantStackPush(EOS(STATIC_3569), i72, matching1, i150, i152, matching2, i150, i152, i154) -> f3574_0_rec2_IntArithmetic(EOS(STATIC_3574), i72, 0, i150, i152, 0, i150, i152, i154, 1) :|: TRUE && matching1 = 0 && matching2 = 0
f3574_0_rec2_IntArithmetic(EOS(STATIC_3574), i72, matching1, i150, i152, matching2, i150, i152, i154, matching3) -> f3586_0_rec2_Load(EOS(STATIC_3586), i72, 0, i150, i152, 0, i150, i152, i154 - 1) :|: i154 >= 0 && matching1 = 0 && matching2 = 0 && matching3 = 1
f3586_0_rec2_Load(EOS(STATIC_3586), i72, matching1, i150, i152, matching2, i150, i152, i177) -> f3607_0_rec2_Load(EOS(STATIC_3607), i72, 0, i150, i152, i150, i152, i177, 0) :|: TRUE && matching1 = 0 && matching2 = 0
f3607_0_rec2_Load(EOS(STATIC_3607), i72, matching1, i150, i152, i150, i152, i177, matching2) -> f3616_0_rec2_Load(EOS(STATIC_3616), i72, 0, i150, i152, i152, i177, 0, i150) :|: TRUE && matching1 = 0 && matching2 = 0
f3616_0_rec2_Load(EOS(STATIC_3616), i72, matching1, i150, i152, i152, i177, matching2, i150) -> f3622_0_rec2_InvokeMethod(EOS(STATIC_3622), i72, 0, i150, i152, i177, 0, i150, i152) :|: TRUE && matching1 = 0 && matching2 = 0
f3622_0_rec2_InvokeMethod(EOS(STATIC_3622), i72, matching1, i150, i152, i177, matching2, i150, i152) -> f3628_0_rec2_Load(EOS(STATIC_3628), i177, 0, i150, i152, i177, 0, i150, i152) :|: TRUE && matching1 = 0 && matching2 = 0
f3622_0_rec2_InvokeMethod(EOS(STATIC_3622), i72, matching1, i150, i152, i177, matching2, i150, i152) -> f3628_1_rec2_Load(EOS(STATIC_3628), i72, 0, i150, i152, i177, 0, i150, i152) :|: TRUE && matching1 = 0 && matching2 = 0
f3628_0_rec2_Load(EOS(STATIC_3628), i177, matching1, i150, i152, i177, matching2, i150, i152) -> f3635_0_rec2_Load(EOS(STATIC_3635), i177, 0, i150, i152, i177, 0, i150, i152) :|: TRUE && matching1 = 0 && matching2 = 0
f3635_0_rec2_Load(EOS(STATIC_3635), i177, matching1, i150, i152, i177, matching2, i150, i152) -> f3221_0_rec2_Load(EOS(STATIC_3221), i177, 0, i150, i152, i177, 0, i150, i152) :|: TRUE && matching1 = 0 && matching2 = 0
f3221_0_rec2_Load(EOS(STATIC_3221), i72, matching1, i73, i74, i75, matching2, i73, i74) -> f3227_0_rec2_Load(EOS(STATIC_3227), i72, 0, i73, i74, i75, 0, i73, i74, i75) :|: TRUE && matching1 = 0 && matching2 = 0
f3456_1_rec3_Load(EOS(STATIC_3456), i72, matching1, i293, i295, i297, matching2, i293, i295, matching3, i109, i293, i295, i297) -> f3839_0_rec3_Return(EOS(STATIC_3839), i72, 0, i293, i295, i297, 0, i293, i295) :|: TRUE && matching1 = 0 && matching2 = 0 && matching3 = 0
Combined rules. Obtained 3 IRulesP rules:
f3839_0_rec3_Return(EOS(STATIC_3839), i72:0, 0, i293:0, i295:0, i297:0, 0, i293:0, i295:0) -> f3839_0_rec3_Return(EOS(STATIC_3839), i297:0 - 1, 0, i293:0, i295:0, i297:0 - 1, 0, i293:0, i295:0) :|: i297:0 > 0 && 3 * i295:0 >= 0 && 2 * i293:0 >= 0 && 2 * i293:0 + 3 * i295:0 >= 0 && 4 * (i297:0 - 1) >= 0
Removed following non-SCC rules:
f3839_0_rec3_Return(EOS(STATIC_3839), i72:0, 0, i293:0, i295:0, i297:0, 0, i293:0, i295:0) -> f4112_0_rec3_Load(EOS(STATIC_4112), 0, 2 * i293:0 + 3 * i295:0 + 4 * (i297:0 - 1), i293:0, i295:0, i297:0 - 1, 0, 2 * i293:0 + 3 * i295:0 + 4 * (i297:0 - 1), i293:0, i295:0, i297:0 - 1) :|: i297:0 > 0 && 3 * i295:0 >= 0 && 2 * i293:0 >= 0 && 2 * i293:0 + 3 * i295:0 >= 0 && 4 * (i297:0 - 1) >= 0
f3839_0_rec3_Return(EOS(STATIC_3839), i72:0, 0, i293:0, i295:0, i297:0, 0, i293:0, i295:0) -> f3628_1_rec2_Load(EOS(STATIC_3628), i72:0, 0, i293:0, i295:0, i297:0 - 1, 0, i293:0, i295:0) :|: i297:0 > -1
Filtered constant ground arguments:
   f3839_0_rec3_Return(x1, x2, x3, x4, x5, x6, x7, x8, x9) -> f3839_0_rec3_Return(x2, x4, x5, x6, x8, x9)
   EOS(x1) -> EOS
Filtered duplicate arguments:
   f3839_0_rec3_Return(x1, x2, x3, x4, x5, x6) -> f3839_0_rec3_Return(x1, x4, x5, x6)
Filtered unneeded arguments:
   f3839_0_rec3_Return(x1, x2, x3, x4) -> f3839_0_rec3_Return(x2, x3, x4)
Finished conversion. Obtained 1 rules.P rules:
f3839_0_rec3_Return(i297:0, i293:0, i295:0) -> f3839_0_rec3_Return(i297:0 - 1, i293:0, i295:0) :|: 3 * i295:0 >= 0 && i297:0 > 0 && 2 * i293:0 >= 0 && 4 * i297:0 >= 4 && 2 * i293:0 + 3 * i295:0 >= 0

----------------------------------------

(35)
Obligation:
Rules:
f3839_0_rec3_Return(i297:0, i293:0, i295:0) -> f3839_0_rec3_Return(i297:0 - 1, i293:0, i295:0) :|: 3 * i295:0 >= 0 && i297:0 > 0 && 2 * i293:0 >= 0 && 4 * i297:0 >= 4 && 2 * i293:0 + 3 * i295:0 >= 0

----------------------------------------

(36) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(37)
Obligation:
Rules:
f3839_0_rec3_Return(i297:0, i293:0, i295:0) -> f3839_0_rec3_Return(arith, i293:0, i295:0) :|: 3 * i295:0 >= 0 && i297:0 > 0 && 2 * i293:0 >= 0 && 4 * i297:0 >= 4 && 2 * i293:0 + 3 * i295:0 >= 0 && arith = i297:0 - 1

----------------------------------------

(38) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f3839_0_rec3_Return(i297:0, i293:0, i295:0) -> f3839_0_rec3_Return(arith, i293:0, i295:0) :|: 3 * i295:0 >= 0 && i297:0 > 0 && 2 * i293:0 >= 0 && 4 * i297:0 >= 4 && 2 * i293:0 + 3 * i295:0 >= 0 && arith = i297:0 - 1

Arcs:
(1) -> (1)

This digraph is fully evaluated!
----------------------------------------

(39)
Obligation:

Termination digraph:
Nodes:
(1) f3839_0_rec3_Return(i297:0, i293:0, i295:0) -> f3839_0_rec3_Return(arith, i293:0, i295:0) :|: 3 * i295:0 >= 0 && i297:0 > 0 && 2 * i293:0 >= 0 && 4 * i297:0 >= 4 && 2 * i293:0 + 3 * i295:0 >= 0 && arith = i297:0 - 1

Arcs:
(1) -> (1)

This digraph is fully evaluated!

----------------------------------------

(40) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(41)
Obligation:
Rules:
f3839_0_rec3_Return(i297:0:0, i293:0:0, i295:0:0) -> f3839_0_rec3_Return(i297:0:0 - 1, i293:0:0, i295:0:0) :|: 4 * i297:0:0 >= 4 && 2 * i293:0:0 + 3 * i295:0:0 >= 0 && 2 * i293:0:0 >= 0 && i297:0:0 > 0 && 3 * i295:0:0 >= 0

----------------------------------------

(42) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f3839_0_rec3_Return(INTEGER, INTEGER, INTEGER)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(43)
Obligation:
Rules:
f3839_0_rec3_Return(i297:0:0, i293:0:0, i295:0:0) -> f3839_0_rec3_Return(c, i293:0:0, i295:0:0) :|: c = i297:0:0 - 1 && (4 * i297:0:0 >= 4 && 2 * i293:0:0 + 3 * i295:0:0 >= 0 && 2 * i293:0:0 >= 0 && i297:0:0 > 0 && 3 * i295:0:0 >= 0)

----------------------------------------

(44) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f3839_0_rec3_Return(x, x1, x2)] = x

The following rules are decreasing:
f3839_0_rec3_Return(i297:0:0, i293:0:0, i295:0:0) -> f3839_0_rec3_Return(c, i293:0:0, i295:0:0) :|: c = i297:0:0 - 1 && (4 * i297:0:0 >= 4 && 2 * i293:0:0 + 3 * i295:0:0 >= 0 && 2 * i293:0:0 >= 0 && i297:0:0 > 0 && 3 * i295:0:0 >= 0)
The following rules are bounded:
f3839_0_rec3_Return(i297:0:0, i293:0:0, i295:0:0) -> f3839_0_rec3_Return(c, i293:0:0, i295:0:0) :|: c = i297:0:0 - 1 && (4 * i297:0:0 >= 4 && 2 * i293:0:0 + 3 * i295:0:0 >= 0 && 2 * i293:0:0 >= 0 && i297:0:0 > 0 && 3 * i295:0:0 >= 0)

----------------------------------------

(45)
YES

----------------------------------------

(46)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: Recursions.rec1(III)V
SCC calls the following helper methods: Recursions.rec2(IIII)V, Recursions.rec1(III)V, Recursions.rec3(IIIII)V, Recursions.rec4(II)V
Performed SCC analyses:
*Used field analysis yielded the following read fields:

*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(47) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 24 IRulesP rules:
f3422_0_rec1_Load(EOS(STATIC_3422), i105, i106, i107, i108, i106, i107, i108) -> f3432_0_rec1_GT(EOS(STATIC_3432), i105, i106, i107, i108, i106, i107, i108, i106) :|: TRUE
f3432_0_rec1_GT(EOS(STATIC_3432), i105, i106, i107, i108, i106, i107, i108, i106) -> f3443_0_rec1_GT(EOS(STATIC_3443), i105, i106, i107, i108, i106, i107, i108, i106) :|: i108 <= i106
f3443_0_rec1_GT(EOS(STATIC_3443), i105, i106, i107, i108, i106, i107, i108, i106) -> f3455_0_rec1_Load(EOS(STATIC_3455), i105, i106, i107, i108, i106, i107) :|: i108 <= i106
f3455_0_rec1_Load(EOS(STATIC_3455), i105, i106, i107, i108, i106, i107) -> f3459_0_rec1_Load(EOS(STATIC_3459), i105, i106, i107, i108, i106, i107, i107) :|: TRUE
f3459_0_rec1_Load(EOS(STATIC_3459), i105, i106, i107, i108, i106, i107, i107) -> f3465_0_rec1_IntArithmetic(EOS(STATIC_3465), i105, i106, i107, i108, i106, i107, i107, i108) :|: TRUE
f3465_0_rec1_IntArithmetic(EOS(STATIC_3465), i105, i106, i107, i108, i106, i107, i107, i108) -> f3470_0_rec1_ConstantStackPush(EOS(STATIC_3470), i105, i106, i107, i108, i106, i107, i107 + i108) :|: i107 >= 0 && i108 >= 0
f3470_0_rec1_ConstantStackPush(EOS(STATIC_3470), i105, i106, i107, i108, i106, i107, i117) -> f3473_0_rec1_Load(EOS(STATIC_3473), i105, i106, i107, i108, i106, i107, i117, 0) :|: TRUE
f3473_0_rec1_Load(EOS(STATIC_3473), i105, i106, i107, i108, i106, i107, i117, matching1) -> f3491_0_rec1_Load(EOS(STATIC_3491), i105, i106, i107, i108, i106, i107, i117, 0, i107) :|: TRUE && matching1 = 0
f3491_0_rec1_Load(EOS(STATIC_3491), i105, i106, i107, i108, i106, i107, i117, matching1, i107) -> f3506_0_rec1_InvokeMethod(EOS(STATIC_3506), i105, i106, i107, i108, i106, i107, i117, 0, i107, i108) :|: TRUE && matching1 = 0
f3506_0_rec1_InvokeMethod(EOS(STATIC_3506), i105, i106, i107, i108, i106, i107, i117, matching1, i107, i108) -> f3511_0_rec2_Load(EOS(STATIC_3511), i117, 0, i107, i108, i117, 0, i107, i108) :|: i108 <= i106 && matching1 = 0
f3506_0_rec1_InvokeMethod(EOS(STATIC_3506), i105, i106, i107, i108, i106, i107, i117, matching1, i107, i108) -> f3511_1_rec2_Load(EOS(STATIC_3511), i105, i106, i107, i108, i106, i107, i117, 0, i107, i108) :|: i108 <= i106 && matching1 = 0
f3511_0_rec2_Load(EOS(STATIC_3511), i117, matching1, i107, i108, i117, matching2, i107, i108) -> f4300_0_rec2_Load(EOS(STATIC_4300), i117, 0, i107, i108, i117, 0, i107, i108) :|: TRUE && matching1 = 0 && matching2 = 0
f3561_0_rec2_Return(EOS(STATIC_3561), i105, i106, i166, i168, i106, i166) -> f3568_0_rec1_Load(EOS(STATIC_3568), i105, i106, i166, i168, i106, i166) :|: TRUE
f3568_0_rec1_Load(EOS(STATIC_3568), i105, i106, i166, i168, i106, i166) -> f3573_0_rec1_ConstantStackPush(EOS(STATIC_3573), i105, i106, i166, i106, i166, i168) :|: TRUE
f3573_0_rec1_ConstantStackPush(EOS(STATIC_3573), i105, i106, i166, i106, i166, i168) -> f3585_0_rec1_IntArithmetic(EOS(STATIC_3585), i105, i106, i166, i106, i166, i168, 1) :|: TRUE
f3585_0_rec1_IntArithmetic(EOS(STATIC_3585), i105, i106, i166, i106, i166, i168, matching1) -> f3606_0_rec1_Load(EOS(STATIC_3606), i105, i106, i166, i106, i166, i168 + 1) :|: i168 >= 0 && matching1 = 1
f3606_0_rec1_Load(EOS(STATIC_3606), i105, i106, i166, i106, i166, i179) -> f3615_0_rec1_Load(EOS(STATIC_3615), i105, i106, i166, i166, i179, i106) :|: TRUE
f3615_0_rec1_Load(EOS(STATIC_3615), i105, i106, i166, i166, i179, i106) -> f3621_0_rec1_InvokeMethod(EOS(STATIC_3621), i105, i106, i166, i179, i106, i166) :|: TRUE
f3621_0_rec1_InvokeMethod(EOS(STATIC_3621), i105, i106, i166, i179, i106, i166) -> f3627_0_rec1_Load(EOS(STATIC_3627), i179, i106, i166, i179, i106, i166) :|: i179 >= 1
f3621_0_rec1_InvokeMethod(EOS(STATIC_3621), i105, i106, i166, i179, i106, i166) -> f3627_1_rec1_Load(EOS(STATIC_3627), i105, i106, i166, i179, i106, i166) :|: i179 >= 1
f3627_0_rec1_Load(EOS(STATIC_3627), i179, i106, i166, i179, i106, i166) -> f3634_0_rec1_Load(EOS(STATIC_3634), i179, i106, i166, i179, i106, i166) :|: TRUE
f3634_0_rec1_Load(EOS(STATIC_3634), i179, i106, i166, i179, i106, i166) -> f3409_0_rec1_Load(EOS(STATIC_3409), i179, i106, i166, i179, i106, i166) :|: TRUE
f3409_0_rec1_Load(EOS(STATIC_3409), i105, i106, i107, i108, i106, i107) -> f3422_0_rec1_Load(EOS(STATIC_3422), i105, i106, i107, i108, i106, i107, i108) :|: TRUE
f3511_1_rec2_Load(EOS(STATIC_3511), i105, i106, i166, i168, i106, i166, i117, matching1, i166, i168) -> f3561_0_rec2_Return(EOS(STATIC_3561), i105, i106, i166, i168, i106, i166) :|: TRUE && matching1 = 0
Combined rules. Obtained 3 IRulesP rules:
f3561_0_rec2_Return(EOS(STATIC_3561), i105:0, i106:0, i166:0, i168:0, i106:0, i166:0) -> f3561_0_rec2_Return(EOS(STATIC_3561), i168:0 + 1, i106:0, i166:0, i168:0 + 1, i106:0, i166:0) :|: i168:0 > -1 && i168:0 + 1 <= i106:0 && i166:0 > -1
Removed following non-SCC rules:
f3561_0_rec2_Return(EOS(STATIC_3561), i105:0, i106:0, i166:0, i168:0, i106:0, i166:0) -> f4300_0_rec2_Load(EOS(STATIC_4300), i166:0 + (i168:0 + 1), 0, i166:0, i168:0 + 1, i166:0 + (i168:0 + 1), 0, i166:0, i168:0 + 1) :|: i168:0 > -1 && i168:0 + 1 <= i106:0 && i166:0 > -1
f3561_0_rec2_Return(EOS(STATIC_3561), i105:0, i106:0, i166:0, i168:0, i106:0, i166:0) -> f3627_1_rec1_Load(EOS(STATIC_3627), i105:0, i106:0, i166:0, i168:0 + 1, i106:0, i166:0) :|: i168:0 > -1
Filtered constant ground arguments:
   f3561_0_rec2_Return(x1, x2, x3, x4, x5, x6, x7) -> f3561_0_rec2_Return(x2, x3, x4, x5, x6, x7)
   EOS(x1) -> EOS
Filtered duplicate arguments:
   f3561_0_rec2_Return(x1, x2, x3, x4, x5, x6) -> f3561_0_rec2_Return(x1, x4, x5, x6)
Filtered unneeded arguments:
   f3561_0_rec2_Return(x1, x2, x3, x4) -> f3561_0_rec2_Return(x2, x3, x4)
Finished conversion. Obtained 1 rules.P rules:
f3561_0_rec2_Return(i168:0, i106:0, i166:0) -> f3561_0_rec2_Return(i168:0 + 1, i106:0, i166:0) :|: i168:0 + 1 <= i106:0 && i166:0 > -1 && i168:0 > -1

----------------------------------------

(48)
Obligation:
Rules:
f3561_0_rec2_Return(i168:0, i106:0, i166:0) -> f3561_0_rec2_Return(i168:0 + 1, i106:0, i166:0) :|: i168:0 + 1 <= i106:0 && i166:0 > -1 && i168:0 > -1

----------------------------------------

(49) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(50)
Obligation:
Rules:
f3561_0_rec2_Return(i168:0, i106:0, i166:0) -> f3561_0_rec2_Return(arith, i106:0, i166:0) :|: i168:0 + 1 <= i106:0 && i166:0 > -1 && i168:0 > -1 && arith = i168:0 + 1

----------------------------------------

(51) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f3561_0_rec2_Return(i168:0, i106:0, i166:0) -> f3561_0_rec2_Return(arith, i106:0, i166:0) :|: i168:0 + 1 <= i106:0 && i166:0 > -1 && i168:0 > -1 && arith = i168:0 + 1

Arcs:
(1) -> (1)

This digraph is fully evaluated!
----------------------------------------

(52)
Obligation:

Termination digraph:
Nodes:
(1) f3561_0_rec2_Return(i168:0, i106:0, i166:0) -> f3561_0_rec2_Return(arith, i106:0, i166:0) :|: i168:0 + 1 <= i106:0 && i166:0 > -1 && i168:0 > -1 && arith = i168:0 + 1

Arcs:
(1) -> (1)

This digraph is fully evaluated!

----------------------------------------

(53) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(54)
Obligation:
Rules:
f3561_0_rec2_Return(i168:0:0, i106:0:0, i166:0:0) -> f3561_0_rec2_Return(i168:0:0 + 1, i106:0:0, i166:0:0) :|: i168:0:0 + 1 <= i106:0:0 && i166:0:0 > -1 && i168:0:0 > -1

----------------------------------------

(55) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f3561_0_rec2_Return(INTEGER, INTEGER, INTEGER)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(56)
Obligation:
Rules:
f3561_0_rec2_Return(i168:0:0, i106:0:0, i166:0:0) -> f3561_0_rec2_Return(c, i106:0:0, i166:0:0) :|: c = i168:0:0 + 1 && (i168:0:0 + 1 <= i106:0:0 && i166:0:0 > -1 && i168:0:0 > -1)

----------------------------------------

(57) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f3561_0_rec2_Return(x, x1, x2)] = -x + x1

The following rules are decreasing:
f3561_0_rec2_Return(i168:0:0, i106:0:0, i166:0:0) -> f3561_0_rec2_Return(c, i106:0:0, i166:0:0) :|: c = i168:0:0 + 1 && (i168:0:0 + 1 <= i106:0:0 && i166:0:0 > -1 && i168:0:0 > -1)
The following rules are bounded:
f3561_0_rec2_Return(i168:0:0, i106:0:0, i166:0:0) -> f3561_0_rec2_Return(c, i106:0:0, i166:0:0) :|: c = i168:0:0 + 1 && (i168:0:0 + 1 <= i106:0:0 && i166:0:0 > -1 && i168:0:0 > -1)

----------------------------------------

(58)
YES

----------------------------------------

(59)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: Recursions.rec0(II)V
SCC calls the following helper methods: Recursions.rec1(III)V, Recursions.rec0(II)V, Recursions.rec2(IIII)V, Recursions.rec3(IIIII)V, Recursions.rec4(II)V
Performed SCC analyses:
*Used field analysis yielded the following read fields:

*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(60) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 22 IRulesP rules:
f3572_0_rec0_Load(EOS(STATIC_3572), i174, i3, i175, i3, i175) -> f3584_0_rec0_GT(EOS(STATIC_3584), i174, i3, i175, i3, i175, i3) :|: TRUE
f3584_0_rec0_GT(EOS(STATIC_3584), i174, i3, i175, i3, i175, i3) -> f3605_0_rec0_GT(EOS(STATIC_3605), i174, i3, i175, i3, i175, i3) :|: i175 <= i3
f3605_0_rec0_GT(EOS(STATIC_3605), i174, i3, i175, i3, i175, i3) -> f3614_0_rec0_ConstantStackPush(EOS(STATIC_3614), i174, i3, i175, i3) :|: i175 <= i3
f3614_0_rec0_ConstantStackPush(EOS(STATIC_3614), i174, i3, i175, i3) -> f3620_0_rec0_ConstantStackPush(EOS(STATIC_3620), i174, i3, i175, i3, 0) :|: TRUE
f3620_0_rec0_ConstantStackPush(EOS(STATIC_3620), i174, i3, i175, i3, matching1) -> f3626_0_rec0_Load(EOS(STATIC_3626), i174, i3, i175, i3, 0, 2) :|: TRUE && matching1 = 0
f3626_0_rec0_Load(EOS(STATIC_3626), i174, i3, i175, i3, matching1, matching2) -> f3632_0_rec0_IntArithmetic(EOS(STATIC_3632), i174, i3, i175, i3, 0, 2, i175) :|: TRUE && matching1 = 0 && matching2 = 2
f3632_0_rec0_IntArithmetic(EOS(STATIC_3632), i174, i3, i175, i3, matching1, matching2, i175) -> f3638_0_rec0_Load(EOS(STATIC_3638), i174, i3, i175, i3, 0, 2 * i175) :|: TRUE && matching1 = 0 && matching2 = 2
f3638_0_rec0_Load(EOS(STATIC_3638), i174, i3, i175, i3, matching1, i182) -> f3640_0_rec0_InvokeMethod(EOS(STATIC_3640), i174, i3, i175, i3, 0, i182, i175) :|: TRUE && matching1 = 0
f3640_0_rec0_InvokeMethod(EOS(STATIC_3640), i174, i3, i175, i3, matching1, i182, i175) -> f3642_0_rec1_Load(EOS(STATIC_3642), 0, i182, i175, 0, i182, i175) :|: i3 >= 1 && i175 <= i3 && matching1 = 0
f3640_0_rec0_InvokeMethod(EOS(STATIC_3640), i174, i3, i175, i3, matching1, i182, i175) -> f3642_1_rec1_Load(EOS(STATIC_3642), i174, i3, i175, i3, 0, i182, i175) :|: i3 >= 1 && i175 <= i3 && matching1 = 0
f3642_0_rec1_Load(EOS(STATIC_3642), matching1, i182, i175, matching2, i182, i175) -> f4566_0_rec1_Load(EOS(STATIC_4566), 0, i182, i175, 0, i182, i175) :|: TRUE && matching1 = 0 && matching2 = 0
f3709_0_rec1_Return(EOS(STATIC_3709), i174, i3, i239, i3) -> f3712_0_rec0_Load(EOS(STATIC_3712), i174, i3, i239, i3) :|: TRUE
f3712_0_rec0_Load(EOS(STATIC_3712), i174, i3, i239, i3) -> f3715_0_rec0_ConstantStackPush(EOS(STATIC_3715), i174, i3, i3, i239) :|: TRUE
f3715_0_rec0_ConstantStackPush(EOS(STATIC_3715), i174, i3, i3, i239) -> f3722_0_rec0_IntArithmetic(EOS(STATIC_3722), i174, i3, i3, i239, 1) :|: TRUE
f3722_0_rec0_IntArithmetic(EOS(STATIC_3722), i174, i3, i3, i239, matching1) -> f3729_0_rec0_Load(EOS(STATIC_3729), i174, i3, i3, i239 + 1) :|: i239 >= 0 && matching1 = 1
f3729_0_rec0_Load(EOS(STATIC_3729), i174, i3, i3, i249) -> f3738_0_rec0_InvokeMethod(EOS(STATIC_3738), i174, i3, i249, i3) :|: TRUE
f3738_0_rec0_InvokeMethod(EOS(STATIC_3738), i174, i3, i249, i3) -> f3749_0_rec0_Load(EOS(STATIC_3749), i249, i3, i249, i3) :|: i3 >= 1 && i249 >= 1
f3738_0_rec0_InvokeMethod(EOS(STATIC_3738), i174, i3, i249, i3) -> f3749_1_rec0_Load(EOS(STATIC_3749), i174, i3, i249, i3) :|: i3 >= 1 && i249 >= 1
f3749_0_rec0_Load(EOS(STATIC_3749), i249, i3, i249, i3) -> f3758_0_rec0_Load(EOS(STATIC_3758), i249, i3, i249, i3) :|: TRUE
f3758_0_rec0_Load(EOS(STATIC_3758), i249, i3, i249, i3) -> f3567_0_rec0_Load(EOS(STATIC_3567), i249, i3, i249, i3) :|: TRUE
f3567_0_rec0_Load(EOS(STATIC_3567), i174, i3, i175, i3) -> f3572_0_rec0_Load(EOS(STATIC_3572), i174, i3, i175, i3, i175) :|: TRUE
f3642_1_rec1_Load(EOS(STATIC_3642), i174, i3, i239, i3, matching1, i182, i239) -> f3709_0_rec1_Return(EOS(STATIC_3709), i174, i3, i239, i3) :|: TRUE && matching1 = 0
Combined rules. Obtained 3 IRulesP rules:
f3709_0_rec1_Return(EOS(STATIC_3709), i174:0, i3:0, i239:0, i3:0) -> f3709_0_rec1_Return(EOS(STATIC_3709), i239:0 + 1, i3:0, i239:0 + 1, i3:0) :|: i3:0 >= i239:0 + 1 && i239:0 > -1 && i3:0 > 0
Removed following non-SCC rules:
f3709_0_rec1_Return(EOS(STATIC_3709), i174:0, i3:0, i239:0, i3:0) -> f3749_1_rec0_Load(EOS(STATIC_3749), i174:0, i3:0, i239:0 + 1, i3:0) :|: i239:0 > -1 && i3:0 > 0
f3709_0_rec1_Return(EOS(STATIC_3709), i174:0, i3:0, i239:0, i3:0) -> f4566_0_rec1_Load(EOS(STATIC_4566), 0, 2 * (i239:0 + 1), i239:0 + 1, 0, 2 * (i239:0 + 1), i239:0 + 1) :|: i3:0 >= i239:0 + 1 && i239:0 > -1 && i3:0 > 0
Filtered constant ground arguments:
   f3709_0_rec1_Return(x1, x2, x3, x4, x5) -> f3709_0_rec1_Return(x2, x3, x4, x5)
   EOS(x1) -> EOS
Filtered duplicate arguments:
   f3709_0_rec1_Return(x1, x2, x3, x4) -> f3709_0_rec1_Return(x1, x3, x4)
Filtered unneeded arguments:
   f3709_0_rec1_Return(x1, x2, x3) -> f3709_0_rec1_Return(x2, x3)
Finished conversion. Obtained 1 rules.P rules:
f3709_0_rec1_Return(i239:0, i3:0) -> f3709_0_rec1_Return(i239:0 + 1, i3:0) :|: i239:0 > -1 && i3:0 > 0 && i3:0 >= i239:0 + 1

----------------------------------------

(61)
Obligation:
Rules:
f3709_0_rec1_Return(i239:0, i3:0) -> f3709_0_rec1_Return(i239:0 + 1, i3:0) :|: i239:0 > -1 && i3:0 > 0 && i3:0 >= i239:0 + 1

----------------------------------------

(62) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(63)
Obligation:
Rules:
f3709_0_rec1_Return(i239:0, i3:0) -> f3709_0_rec1_Return(arith, i3:0) :|: i239:0 > -1 && i3:0 > 0 && i3:0 >= i239:0 + 1 && arith = i239:0 + 1

----------------------------------------

(64) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f3709_0_rec1_Return(i239:0, i3:0) -> f3709_0_rec1_Return(arith, i3:0) :|: i239:0 > -1 && i3:0 > 0 && i3:0 >= i239:0 + 1 && arith = i239:0 + 1

Arcs:
(1) -> (1)

This digraph is fully evaluated!
----------------------------------------

(65)
Obligation:

Termination digraph:
Nodes:
(1) f3709_0_rec1_Return(i239:0, i3:0) -> f3709_0_rec1_Return(arith, i3:0) :|: i239:0 > -1 && i3:0 > 0 && i3:0 >= i239:0 + 1 && arith = i239:0 + 1

Arcs:
(1) -> (1)

This digraph is fully evaluated!

----------------------------------------

(66) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(67)
Obligation:
Rules:
f3709_0_rec1_Return(i239:0:0, i3:0:0) -> f3709_0_rec1_Return(i239:0:0 + 1, i3:0:0) :|: i239:0:0 > -1 && i3:0:0 > 0 && i3:0:0 >= i239:0:0 + 1

----------------------------------------

(68) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f3709_0_rec1_Return(INTEGER, INTEGER)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(69)
Obligation:
Rules:
f3709_0_rec1_Return(i239:0:0, i3:0:0) -> f3709_0_rec1_Return(c, i3:0:0) :|: c = i239:0:0 + 1 && (i239:0:0 > -1 && i3:0:0 > 0 && i3:0:0 >= i239:0:0 + 1)

----------------------------------------

(70) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f3709_0_rec1_Return(x, x1)] = -x + x1

The following rules are decreasing:
f3709_0_rec1_Return(i239:0:0, i3:0:0) -> f3709_0_rec1_Return(c, i3:0:0) :|: c = i239:0:0 + 1 && (i239:0:0 > -1 && i3:0:0 > 0 && i3:0:0 >= i239:0:0 + 1)
The following rules are bounded:
f3709_0_rec1_Return(i239:0:0, i3:0:0) -> f3709_0_rec1_Return(c, i3:0:0) :|: c = i239:0:0 + 1 && (i239:0:0 > -1 && i3:0:0 > 0 && i3:0:0 >= i239:0:0 + 1)

----------------------------------------

(71)
YES

----------------------------------------

(72)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: Recursions.main([Ljava/lang/String;)V
SCC calls the following helper methods: Recursions.rec0(II)V, Recursions.rec1(III)V, Recursions.rec2(IIII)V, Recursions.rec3(IIIII)V, Recursions.rec4(II)V
Performed SCC analyses:
*Used field analysis yielded the following read fields:

*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(73) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 17 IRulesP rules:
f3711_0_main_Load(EOS(STATIC_3711), java.lang.Object(o12sub), java.lang.Object(o12sub), i245, i245) -> f3714_0_main_ArrayLength(EOS(STATIC_3714), java.lang.Object(o12sub), java.lang.Object(o12sub), i245, i245, java.lang.Object(o12sub)) :|: TRUE
f3714_0_main_ArrayLength(EOS(STATIC_3714), java.lang.Object(ARRAY(i248)), java.lang.Object(ARRAY(i248)), i245, i245, java.lang.Object(ARRAY(i248))) -> f3721_0_main_ArrayLength(EOS(STATIC_3721), java.lang.Object(ARRAY(i248)), java.lang.Object(ARRAY(i248)), i245, i245, java.lang.Object(ARRAY(i248))) :|: i248 >= 0
f3721_0_main_ArrayLength(EOS(STATIC_3721), java.lang.Object(ARRAY(i248)), java.lang.Object(ARRAY(i248)), i245, i245, java.lang.Object(ARRAY(i248))) -> f3728_0_main_GE(EOS(STATIC_3728), java.lang.Object(ARRAY(i248)), java.lang.Object(ARRAY(i248)), i245, i245, i248) :|: i248 >= 0
f3728_0_main_GE(EOS(STATIC_3728), java.lang.Object(ARRAY(i248)), java.lang.Object(ARRAY(i248)), i245, i245, i248) -> f3736_0_main_GE(EOS(STATIC_3736), java.lang.Object(ARRAY(i248)), java.lang.Object(ARRAY(i248)), i245, i245, i248) :|: i245 < i248
f3736_0_main_GE(EOS(STATIC_3736), java.lang.Object(ARRAY(i248)), java.lang.Object(ARRAY(i248)), i245, i245, i248) -> f3748_0_main_ConstantStackPush(EOS(STATIC_3748), java.lang.Object(ARRAY(i248)), java.lang.Object(ARRAY(i248)), i245) :|: i245 < i248
f3748_0_main_ConstantStackPush(EOS(STATIC_3748), java.lang.Object(ARRAY(i248)), java.lang.Object(ARRAY(i248)), i245) -> f3755_0_main_Load(EOS(STATIC_3755), java.lang.Object(ARRAY(i248)), java.lang.Object(ARRAY(i248)), i245, 0) :|: TRUE
f3755_0_main_Load(EOS(STATIC_3755), java.lang.Object(ARRAY(i248)), java.lang.Object(ARRAY(i248)), i245, matching1) -> f3762_0_main_ArrayLength(EOS(STATIC_3762), java.lang.Object(ARRAY(i248)), java.lang.Object(ARRAY(i248)), i245, 0, java.lang.Object(ARRAY(i248))) :|: TRUE && matching1 = 0
f3762_0_main_ArrayLength(EOS(STATIC_3762), java.lang.Object(ARRAY(i248)), java.lang.Object(ARRAY(i248)), i245, matching1, java.lang.Object(ARRAY(i248))) -> f3767_0_main_InvokeMethod(EOS(STATIC_3767), java.lang.Object(ARRAY(i248)), java.lang.Object(ARRAY(i248)), i245, 0, i248) :|: i248 >= 0 && matching1 = 0
f3767_0_main_InvokeMethod(EOS(STATIC_3767), java.lang.Object(ARRAY(i248)), java.lang.Object(ARRAY(i248)), i245, matching1, i248) -> f3770_0_rec0_Load(EOS(STATIC_3770), 0, i248, 0, i248) :|: i248 >= 1 && i245 < i248 && matching1 = 0
f3767_0_main_InvokeMethod(EOS(STATIC_3767), java.lang.Object(ARRAY(i248)), java.lang.Object(ARRAY(i248)), i245, matching1, i248) -> f3770_1_rec0_Load(EOS(STATIC_3770), java.lang.Object(ARRAY(i248)), java.lang.Object(ARRAY(i248)), i245, 0, i248) :|: i248 >= 1 && i245 < i248 && matching1 = 0
f3770_0_rec0_Load(EOS(STATIC_3770), matching1, i248, matching2, i248) -> f4892_0_rec0_Load(EOS(STATIC_4892), 0, i248, 0, i248) :|: TRUE && matching1 = 0 && matching2 = 0
f3800_0_rec0_Return(EOS(STATIC_3800), java.lang.Object(ARRAY(i279)), java.lang.Object(ARRAY(i279)), i245) -> f3803_0_main_Inc(EOS(STATIC_3803), java.lang.Object(ARRAY(i279)), java.lang.Object(ARRAY(i279)), i245) :|: TRUE
f3803_0_main_Inc(EOS(STATIC_3803), java.lang.Object(ARRAY(i279)), java.lang.Object(ARRAY(i279)), i245) -> f3807_0_main_JMP(EOS(STATIC_3807), java.lang.Object(ARRAY(i279)), java.lang.Object(ARRAY(i279)), i245 + 1) :|: TRUE
f3807_0_main_JMP(EOS(STATIC_3807), java.lang.Object(ARRAY(i279)), java.lang.Object(ARRAY(i279)), i280) -> f3810_0_main_Load(EOS(STATIC_3810), java.lang.Object(ARRAY(i279)), java.lang.Object(ARRAY(i279)), i280) :|: TRUE
f3810_0_main_Load(EOS(STATIC_3810), java.lang.Object(ARRAY(i279)), java.lang.Object(ARRAY(i279)), i280) -> f3708_0_main_Load(EOS(STATIC_3708), java.lang.Object(ARRAY(i279)), java.lang.Object(ARRAY(i279)), i280) :|: TRUE
f3708_0_main_Load(EOS(STATIC_3708), java.lang.Object(o12sub), java.lang.Object(o12sub), i245) -> f3711_0_main_Load(EOS(STATIC_3711), java.lang.Object(o12sub), java.lang.Object(o12sub), i245, i245) :|: TRUE
f3770_1_rec0_Load(EOS(STATIC_3770), java.lang.Object(ARRAY(i248)), java.lang.Object(ARRAY(i248)), i245, matching1, i279) -> f3800_0_rec0_Return(EOS(STATIC_3800), java.lang.Object(ARRAY(i279)), java.lang.Object(ARRAY(i279)), i245) :|: TRUE && matching1 = 0
Combined rules. Obtained 2 IRulesP rules:
f3800_0_rec0_Return(EOS(STATIC_3800), java.lang.Object(ARRAY(i279:0)), java.lang.Object(ARRAY(i279:0)), i245:0) -> f3800_0_rec0_Return(EOS(STATIC_3800), java.lang.Object(ARRAY(i279:0)), java.lang.Object(ARRAY(i279:0)), i245:0 + 1) :|: i279:0 > 0 && i279:0 > i245:0 + 1
Removed following non-SCC rules:
f3800_0_rec0_Return(EOS(STATIC_3800), java.lang.Object(ARRAY(i279:0)), java.lang.Object(ARRAY(i279:0)), i245:0) -> f4892_0_rec0_Load(EOS(STATIC_4892), 0, i279:0, 0, i279:0) :|: i279:0 > 0 && i279:0 > i245:0 + 1
Filtered constant ground arguments:
   f3800_0_rec0_Return(x1, x2, x3, x4) -> f3800_0_rec0_Return(x2, x3, x4)
   EOS(x1) -> EOS
Filtered duplicate arguments:
   f3800_0_rec0_Return(x1, x2, x3) -> f3800_0_rec0_Return(x2, x3)
Finished conversion. Obtained 1 rules.P rules:
f3800_0_rec0_Return(java.lang.Object(ARRAY(i279:0)), i245:0, i279:0) -> f3800_0_rec0_Return(java.lang.Object(ARRAY(i279:0)), i245:0 + 1, i279:0) :|: i279:0 > 0 && i279:0 > i245:0 + 1

----------------------------------------

(74)
Obligation:
Rules:
f3800_0_rec0_Return(java.lang.Object(ARRAY(i279:0)), i245:0, i279:0) -> f3800_0_rec0_Return(java.lang.Object(ARRAY(i279:0)), i245:0 + 1, i279:0) :|: i279:0 > 0 && i279:0 > i245:0 + 1

----------------------------------------

(75) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(76)
Obligation:
Rules:
f3800_0_rec0_Return(java.lang.Object(ARRAY(i279:0)), i245:0, i279:0) -> f3800_0_rec0_Return(java.lang.Object(ARRAY(i279:0)), arith, i279:0) :|: i279:0 > 0 && i279:0 > i245:0 + 1 && arith = i245:0 + 1

----------------------------------------

(77) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f3800_0_rec0_Return(java.lang.Object(ARRAY(i279:0)), i245:0, i279:0) -> f3800_0_rec0_Return(java.lang.Object(ARRAY(i279:0)), arith, i279:0) :|: i279:0 > 0 && i279:0 > i245:0 + 1 && arith = i245:0 + 1

Arcs:
(1) -> (1)

This digraph is fully evaluated!
----------------------------------------

(78)
Obligation:

Termination digraph:
Nodes:
(1) f3800_0_rec0_Return(java.lang.Object(ARRAY(i279:0)), i245:0, i279:0) -> f3800_0_rec0_Return(java.lang.Object(ARRAY(i279:0)), arith, i279:0) :|: i279:0 > 0 && i279:0 > i245:0 + 1 && arith = i245:0 + 1

Arcs:
(1) -> (1)

This digraph is fully evaluated!

----------------------------------------

(79) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(80)
Obligation:
Rules:
f3800_0_rec0_Return(java.lang.Object(ARRAY(i279:0:0)), i245:0:0, i279:0:0) -> f3800_0_rec0_Return(java.lang.Object(ARRAY(i279:0:0)), i245:0:0 + 1, i279:0:0) :|: i279:0:0 > 0 && i279:0:0 > i245:0:0 + 1

----------------------------------------

(81) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f3800_0_rec0_Return(VARIABLE, INTEGER, INTEGER)
java.lang.Object(VARIABLE)
ARRAY(INTEGER)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(82)
Obligation:
Rules:
f3800_0_rec0_Return(c, i245:0:0, i279:0:0) -> f3800_0_rec0_Return(c1, c2, i279:0:0) :|: c2 = i245:0:0 + 1 && (c1 = 0 && c = 0) && (i279:0:0 > 0 && i279:0:0 > i245:0:0 + 1)

----------------------------------------

(83) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f3800_0_rec0_Return ] = f3800_0_rec0_Return_3 + -1*f3800_0_rec0_Return_2

The following rules are decreasing:
f3800_0_rec0_Return(c, i245:0:0, i279:0:0) -> f3800_0_rec0_Return(c1, c2, i279:0:0) :|: c2 = i245:0:0 + 1 && (c1 = 0 && c = 0) && (i279:0:0 > 0 && i279:0:0 > i245:0:0 + 1)

The following rules are bounded:
f3800_0_rec0_Return(c, i245:0:0, i279:0:0) -> f3800_0_rec0_Return(c1, c2, i279:0:0) :|: c2 = i245:0:0 + 1 && (c1 = 0 && c = 0) && (i279:0:0 > 0 && i279:0:0 > i245:0:0 + 1)


----------------------------------------

(84)
YES
