YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/wUGtN.jar
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


termination of the given Bare JBC problem could be proven:

(0) Bare JBC problem
(1) BareJBCToJBCProof [EQUIVALENT, 0 ms]
(2) JBC problem
(3) JBCToGraph [EQUIVALENT, 528 ms]
(4) JBCTerminationGraph
(5) TerminationGraphToSCCProof [SOUND, 0 ms]
(6) JBCTerminationSCC
(7) SCCToIRSProof [SOUND, 76 ms]
(8) IRSwT
(9) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
(10) IRSwT
(11) IRSwTTerminationDigraphProof [EQUIVALENT, 51 ms]
(12) AND
    (13) IRSwT
        (14) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (15) IRSwT
        (16) TempFilterProof [SOUND, 7 ms]
        (17) IntTRS
        (18) PolynomialOrderProcessor [EQUIVALENT, 2 ms]
        (19) YES
    (20) IRSwT
        (21) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (22) IRSwT
        (23) TempFilterProof [SOUND, 20 ms]
        (24) IntTRS
        (25) PolynomialOrderProcessor [EQUIVALENT, 6 ms]
        (26) YES


----------------------------------------

(0)
Obligation:
need to prove termination of the following program:
public class FactSLR {

    public static int factorial(int n){
	if (n  < 1) return 1;
	else return n*factorial(n-1);	  
    }

    public static int doSum(List x){
	if (x==null) return 0;
	else return factorial(x.head) + doSum(x.tail);	
    }

    public static void main(String [] args) {
	Random.args = args;
	List l = List.mk(3*Random.random());
	//System.out.println(doSum(l));
    }
}



public class List {
    public int head;
    public List tail;

    public List(int head, List tail) {
	this.head = head;
	this.tail = tail;
    }

    public List getTail() {
	return tail;
    }

    public static List mk(int len) {
	List result = null;

	while (len-- > 0)
	    result = new List(Random.random(), result);

	return result;
    }
}

public class Random {
  static String[] args;
  static int index = 0;

  public static int random() {
      if (index >= args.length)
	  return 0;

      String string = args[index];
      index++;
      return string.length();
  }
}



----------------------------------------

(1) BareJBCToJBCProof (EQUIVALENT)
initialized classpath
----------------------------------------

(2)
Obligation:
need to prove termination of the following program:
public class FactSLR {

    public static int factorial(int n){
	if (n  < 1) return 1;
	else return n*factorial(n-1);	  
    }

    public static int doSum(List x){
	if (x==null) return 0;
	else return factorial(x.head) + doSum(x.tail);	
    }

    public static void main(String [] args) {
	Random.args = args;
	List l = List.mk(3*Random.random());
	//System.out.println(doSum(l));
    }
}



public class List {
    public int head;
    public List tail;

    public List(int head, List tail) {
	this.head = head;
	this.tail = tail;
    }

    public List getTail() {
	return tail;
    }

    public static List mk(int len) {
	List result = null;

	while (len-- > 0)
	    result = new List(Random.random(), result);

	return result;
    }
}

public class Random {
  static String[] args;
  static int index = 0;

  public static int random() {
      if (index >= args.length)
	  return 0;

      String string = args[index];
      index++;
      return string.length();
  }
}



----------------------------------------

(3) JBCToGraph (EQUIVALENT)
Constructed TerminationGraph.
----------------------------------------

(4)
Obligation:
Termination Graph based on JBC Program:
FactSLR.main([Ljava/lang/String;)V: Graph of 141 nodes with 0 SCCs.



List.mk(I)LList;: Graph of 264 nodes with 1 SCC.





----------------------------------------

(5) TerminationGraphToSCCProof (SOUND)
Splitted TerminationGraph to 1 SCCs.
----------------------------------------

(6)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: List.mk(I)LList;
SCC calls the following helper methods: 
Performed SCC analyses:
*Used field analysis yielded the following read fields:
*java.lang.String: [count]
*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(7) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 67 IRulesP rules:
f3219_0_mk_Inc(EOS(STATIC_3219(java.lang.Object(ARRAY(i445)), i446)), i1285, i1285) -> f3238_0_mk_LE(EOS(STATIC_3238(java.lang.Object(ARRAY(i445)), i446)), i1285 + -1, i1285) :|: TRUE
f3238_0_mk_LE(EOS(STATIC_3238(java.lang.Object(ARRAY(i445)), i446)), i1315, i1285) -> f3829_0_mk_LE(EOS(STATIC_3829(java.lang.Object(ARRAY(i445)), i446)), i1315, i1285) :|: TRUE
f3829_0_mk_LE(EOS(STATIC_3829(java.lang.Object(ARRAY(i1727)), i1728)), i1730, i1757) -> f3831_0_mk_LE(EOS(STATIC_3831(java.lang.Object(ARRAY(i1727)), i1728)), i1730, i1757) :|: TRUE
f3831_0_mk_LE(EOS(STATIC_3831(java.lang.Object(ARRAY(i1727)), i1728)), i1730, i1757) -> f3833_0_mk_New(EOS(STATIC_3833(java.lang.Object(ARRAY(i1727)), i1728)), i1730) :|: i1757 > 0
f3833_0_mk_New(EOS(STATIC_3833(java.lang.Object(ARRAY(i1727)), i1728)), i1730) -> f3835_0_mk_Duplicate(EOS(STATIC_3835(java.lang.Object(ARRAY(i1727)), i1728)), i1730) :|: TRUE
f3835_0_mk_Duplicate(EOS(STATIC_3835(java.lang.Object(ARRAY(i1727)), i1728)), i1730) -> f3837_0_mk_InvokeMethod(EOS(STATIC_3837(java.lang.Object(ARRAY(i1727)), i1728)), i1730) :|: TRUE
f3837_0_mk_InvokeMethod(EOS(STATIC_3837(java.lang.Object(ARRAY(i1727)), i1728)), i1730) -> f3912_0_random_FieldAccess(EOS(STATIC_3912(java.lang.Object(ARRAY(i1727)), i1728)), i1730) :|: TRUE
f3912_0_random_FieldAccess(EOS(STATIC_3912(java.lang.Object(ARRAY(i1727)), i1728)), i1730) -> f3930_0_random_FieldAccess(EOS(STATIC_3930(java.lang.Object(ARRAY(i1727)), i1728)), i1730, i1728) :|: TRUE
f3930_0_random_FieldAccess(EOS(STATIC_3930(java.lang.Object(ARRAY(i1727)), i1728)), i1730, i1728) -> f3931_0_random_ArrayLength(EOS(STATIC_3931(java.lang.Object(ARRAY(i1727)), i1728)), i1730, i1728, java.lang.Object(ARRAY(i1727))) :|: TRUE
f3931_0_random_ArrayLength(EOS(STATIC_3931(java.lang.Object(ARRAY(i1727)), i1728)), i1730, i1728, java.lang.Object(ARRAY(i1727))) -> f3945_0_random_LT(EOS(STATIC_3945(java.lang.Object(ARRAY(i1727)), i1728)), i1730, i1728, i1727) :|: i1727 >= 0
f3945_0_random_LT(EOS(STATIC_3945(java.lang.Object(ARRAY(i1727)), i1728)), i1730, i1728, i1727) -> f3957_0_random_LT(EOS(STATIC_3957(java.lang.Object(ARRAY(i1727)), i1728)), i1730, i1728, i1727) :|: i1728 < i1727
f3945_0_random_LT(EOS(STATIC_3945(java.lang.Object(ARRAY(i1727)), i1728)), i1730, i1728, i1727) -> f3958_0_random_LT(EOS(STATIC_3958(java.lang.Object(ARRAY(i1727)), i1728)), i1730, i1728, i1727) :|: i1728 >= i1727
f3957_0_random_LT(EOS(STATIC_3957(java.lang.Object(ARRAY(i1727)), i1728)), i1730, i1728, i1727) -> f3966_0_random_FieldAccess(EOS(STATIC_3966(java.lang.Object(ARRAY(i1727)), i1728)), i1730) :|: i1728 < i1727
f3966_0_random_FieldAccess(EOS(STATIC_3966(java.lang.Object(ARRAY(i1727)), i1728)), i1730) -> f3970_0_random_FieldAccess(EOS(STATIC_3970(java.lang.Object(ARRAY(i1727)), i1728)), i1730, java.lang.Object(ARRAY(i1727))) :|: TRUE
f3970_0_random_FieldAccess(EOS(STATIC_3970(java.lang.Object(ARRAY(i1727)), i1728)), i1730, java.lang.Object(ARRAY(i1727))) -> f3983_0_random_ArrayAccess(EOS(STATIC_3983(java.lang.Object(ARRAY(i1727)), i1728)), i1730, java.lang.Object(ARRAY(i1727)), i1728) :|: TRUE
f3983_0_random_ArrayAccess(EOS(STATIC_3983(java.lang.Object(ARRAY(i1727)), i1820)), i1730, java.lang.Object(ARRAY(i1727)), i1820) -> f3988_0_random_ArrayAccess(EOS(STATIC_3988(java.lang.Object(ARRAY(i1727)), i1820)), i1730, java.lang.Object(ARRAY(i1727)), i1820) :|: TRUE
f3988_0_random_ArrayAccess(EOS(STATIC_3988(java.lang.Object(ARRAY(i1727)), i1820)), i1730, java.lang.Object(ARRAY(i1727)), i1820) -> f3992_0_random_ArrayAccess(EOS(STATIC_3992(java.lang.Object(ARRAY(i1727)), i1820)), i1730, java.lang.Object(ARRAY(i1727)), i1820) :|: TRUE
f3992_0_random_ArrayAccess(EOS(STATIC_3992(java.lang.Object(ARRAY(i1727)), i1820)), i1730, java.lang.Object(ARRAY(i1727)), i1820) -> f3996_0_random_Store(EOS(STATIC_3996(java.lang.Object(ARRAY(i1727)), i1820)), i1730, o784) :|: TRUE
f3996_0_random_Store(EOS(STATIC_3996(java.lang.Object(ARRAY(i1727)), i1820)), i1730, o784) -> f3999_0_random_FieldAccess(EOS(STATIC_3999(java.lang.Object(ARRAY(i1727)), i1820)), i1730, o784) :|: TRUE
f3999_0_random_FieldAccess(EOS(STATIC_3999(java.lang.Object(ARRAY(i1727)), i1820)), i1730, o784) -> f4002_0_random_ConstantStackPush(EOS(STATIC_4002(java.lang.Object(ARRAY(i1727)), i1820)), i1730, o784, i1820) :|: TRUE
f4002_0_random_ConstantStackPush(EOS(STATIC_4002(java.lang.Object(ARRAY(i1727)), i1820)), i1730, o784, i1820) -> f4005_0_random_IntArithmetic(EOS(STATIC_4005(java.lang.Object(ARRAY(i1727)), i1820)), i1730, o784, i1820, 1) :|: TRUE
f4005_0_random_IntArithmetic(EOS(STATIC_4005(java.lang.Object(ARRAY(i1727)), i1820)), i1730, o784, i1820, matching1) -> f4009_0_random_FieldAccess(EOS(STATIC_4009(java.lang.Object(ARRAY(i1727)), i1820)), i1730, o784, i1820 + 1) :|: i1820 >= 0 && matching1 = 1
f4009_0_random_FieldAccess(EOS(STATIC_4009(java.lang.Object(ARRAY(i1727)), i1820)), i1730, o784, i1849) -> f4012_0_random_Load(EOS(STATIC_4012(java.lang.Object(ARRAY(i1727)), i1849)), i1730, o784) :|: TRUE
f4012_0_random_Load(EOS(STATIC_4012(java.lang.Object(ARRAY(i1727)), i1849)), i1730, o784) -> f4023_0_random_InvokeMethod(EOS(STATIC_4023(java.lang.Object(ARRAY(i1727)), i1849)), i1730, o784) :|: TRUE
f4023_0_random_InvokeMethod(EOS(STATIC_4023(java.lang.Object(ARRAY(i1727)), i1849)), i1730, java.lang.Object(o813sub)) -> f4032_0_random_InvokeMethod(EOS(STATIC_4032(java.lang.Object(ARRAY(i1727)), i1849)), i1730, java.lang.Object(o813sub)) :|: TRUE
f4032_0_random_InvokeMethod(EOS(STATIC_4032(java.lang.Object(ARRAY(i1727)), i1849)), i1730, java.lang.Object(o816sub)) -> f4037_0_random_InvokeMethod(EOS(STATIC_4037(java.lang.Object(ARRAY(i1727)), i1849)), i1730, java.lang.Object(o816sub)) :|: TRUE
f4037_0_random_InvokeMethod(EOS(STATIC_4037(java.lang.Object(ARRAY(i1727)), i1849)), i1730, java.lang.Object(o816sub)) -> f4050_0_length_Load(EOS(STATIC_4050(java.lang.Object(ARRAY(i1727)), i1849)), i1730, java.lang.Object(o816sub)) :|: TRUE
f4050_0_length_Load(EOS(STATIC_4050(java.lang.Object(ARRAY(i1727)), i1849)), i1730, java.lang.Object(o816sub)) -> f4072_0_length_FieldAccess(EOS(STATIC_4072(java.lang.Object(ARRAY(i1727)), i1849)), i1730, java.lang.Object(o816sub)) :|: TRUE
f4072_0_length_FieldAccess(EOS(STATIC_4072(java.lang.Object(ARRAY(i1727)), i1849)), i1730, java.lang.Object(java.lang.String(EOC, i1928))) -> f4103_0_length_FieldAccess(EOS(STATIC_4103(java.lang.Object(ARRAY(i1727)), i1849)), i1730, java.lang.Object(java.lang.String(EOC, i1928))) :|: TRUE
f4103_0_length_FieldAccess(EOS(STATIC_4103(java.lang.Object(ARRAY(i1727)), i1849)), i1730, java.lang.Object(java.lang.String(EOC, i1928))) -> f4106_0_length_Return(EOS(STATIC_4106(java.lang.Object(ARRAY(i1727)), i1849)), i1730) :|: TRUE
f4106_0_length_Return(EOS(STATIC_4106(java.lang.Object(ARRAY(i1727)), i1849)), i1730) -> f4109_0_random_Return(EOS(STATIC_4109(java.lang.Object(ARRAY(i1727)), i1849)), i1730) :|: TRUE
f4109_0_random_Return(EOS(STATIC_4109(java.lang.Object(ARRAY(i1727)), i1849)), i1730) -> f4113_0_mk_Load(EOS(STATIC_4113(java.lang.Object(ARRAY(i1727)), i1849)), i1730) :|: TRUE
f4113_0_mk_Load(EOS(STATIC_4113(java.lang.Object(ARRAY(i1727)), i1849)), i1730) -> f4116_0_mk_InvokeMethod(EOS(STATIC_4116(java.lang.Object(ARRAY(i1727)), i1849)), i1730) :|: TRUE
f4116_0_mk_InvokeMethod(EOS(STATIC_4116(java.lang.Object(ARRAY(i1727)), i1849)), i1730) -> f4128_0__init__Load(EOS(STATIC_4128(java.lang.Object(ARRAY(i1727)), i1849)), i1730) :|: TRUE
f4128_0__init__Load(EOS(STATIC_4128(java.lang.Object(ARRAY(i1727)), i1849)), i1730) -> f4167_0__init__InvokeMethod(EOS(STATIC_4167(java.lang.Object(ARRAY(i1727)), i1849)), i1730) :|: TRUE
f4167_0__init__InvokeMethod(EOS(STATIC_4167(java.lang.Object(ARRAY(i1727)), i1849)), i1730) -> f4176_0__init__Load(EOS(STATIC_4176(java.lang.Object(ARRAY(i1727)), i1849)), i1730) :|: TRUE
f4176_0__init__Load(EOS(STATIC_4176(java.lang.Object(ARRAY(i1727)), i1849)), i1730) -> f4202_0__init__Load(EOS(STATIC_4202(java.lang.Object(ARRAY(i1727)), i1849)), i1730) :|: TRUE
f4202_0__init__Load(EOS(STATIC_4202(java.lang.Object(ARRAY(i1727)), i1849)), i1730) -> f4209_0__init__FieldAccess(EOS(STATIC_4209(java.lang.Object(ARRAY(i1727)), i1849)), i1730) :|: TRUE
f4209_0__init__FieldAccess(EOS(STATIC_4209(java.lang.Object(ARRAY(i1727)), i1849)), i1730) -> f4231_0__init__Load(EOS(STATIC_4231(java.lang.Object(ARRAY(i1727)), i1849)), i1730) :|: TRUE
f4231_0__init__Load(EOS(STATIC_4231(java.lang.Object(ARRAY(i1727)), i1849)), i1730) -> f4250_0__init__Load(EOS(STATIC_4250(java.lang.Object(ARRAY(i1727)), i1849)), i1730) :|: TRUE
f4250_0__init__Load(EOS(STATIC_4250(java.lang.Object(ARRAY(i1727)), i1849)), i1730) -> f4255_0__init__FieldAccess(EOS(STATIC_4255(java.lang.Object(ARRAY(i1727)), i1849)), i1730) :|: TRUE
f4255_0__init__FieldAccess(EOS(STATIC_4255(java.lang.Object(ARRAY(i1727)), i1849)), i1730) -> f4273_0__init__Return(EOS(STATIC_4273(java.lang.Object(ARRAY(i1727)), i1849)), i1730) :|: TRUE
f4273_0__init__Return(EOS(STATIC_4273(java.lang.Object(ARRAY(i1727)), i1849)), i1730) -> f4283_0_mk_Store(EOS(STATIC_4283(java.lang.Object(ARRAY(i1727)), i1849)), i1730) :|: TRUE
f4283_0_mk_Store(EOS(STATIC_4283(java.lang.Object(ARRAY(i1727)), i1849)), i1730) -> f4317_0_mk_JMP(EOS(STATIC_4317(java.lang.Object(ARRAY(i1727)), i1849)), i1730) :|: TRUE
f4317_0_mk_JMP(EOS(STATIC_4317(java.lang.Object(ARRAY(i1727)), i1849)), i1730) -> f4474_0_mk_Load(EOS(STATIC_4474(java.lang.Object(ARRAY(i1727)), i1849)), i1730) :|: TRUE
f4474_0_mk_Load(EOS(STATIC_4474(java.lang.Object(ARRAY(i1727)), i1849)), i1730) -> f4475_0_mk_Load(EOS(STATIC_4475(java.lang.Object(ARRAY(i1727)), i1849)), i1730) :|: TRUE
f4475_0_mk_Load(EOS(STATIC_4475(java.lang.Object(ARRAY(i2146)), i2147)), i2149) -> f4543_0_mk_Inc(EOS(STATIC_4543(java.lang.Object(ARRAY(i2146)), i2147)), i2149, i2149) :|: TRUE
f4543_0_mk_Inc(EOS(STATIC_4543(java.lang.Object(ARRAY(i2146)), i2147)), i2149, i2149) -> f4608_0_mk_LE(EOS(STATIC_4608(java.lang.Object(ARRAY(i2146)), i2147)), i2149 + -1, i2149) :|: TRUE
f4608_0_mk_LE(EOS(STATIC_4608(java.lang.Object(ARRAY(i2146)), i2147)), i2219, i2149) -> f3829_0_mk_LE(EOS(STATIC_3829(java.lang.Object(ARRAY(i2146)), i2147)), i2219, i2149) :|: TRUE
f3958_0_random_LT(EOS(STATIC_3958(java.lang.Object(ARRAY(i1727)), i1728)), i1730, i1728, i1727) -> f3967_0_random_ConstantStackPush(EOS(STATIC_3967(java.lang.Object(ARRAY(i1727)), i1728)), i1730) :|: i1728 >= i1727
f3967_0_random_ConstantStackPush(EOS(STATIC_3967(java.lang.Object(ARRAY(i1727)), i1728)), i1730) -> f3975_0_random_Return(EOS(STATIC_3975(java.lang.Object(ARRAY(i1727)), i1728)), i1730) :|: TRUE
f3975_0_random_Return(EOS(STATIC_3975(java.lang.Object(ARRAY(i1727)), i1728)), i1730) -> f3984_0_mk_Load(EOS(STATIC_3984(java.lang.Object(ARRAY(i1727)), i1728)), i1730) :|: TRUE
f3984_0_mk_Load(EOS(STATIC_3984(java.lang.Object(ARRAY(i1727)), i1728)), i1730) -> f3990_0_mk_InvokeMethod(EOS(STATIC_3990(java.lang.Object(ARRAY(i1727)), i1728)), i1730) :|: TRUE
f3990_0_mk_InvokeMethod(EOS(STATIC_3990(java.lang.Object(ARRAY(i1727)), i1728)), i1730) -> f3994_0__init__Load(EOS(STATIC_3994(java.lang.Object(ARRAY(i1727)), i1728)), i1730) :|: TRUE
f3994_0__init__Load(EOS(STATIC_3994(java.lang.Object(ARRAY(i1727)), i1728)), i1730) -> f4000_0__init__InvokeMethod(EOS(STATIC_4000(java.lang.Object(ARRAY(i1727)), i1728)), i1730) :|: TRUE
f4000_0__init__InvokeMethod(EOS(STATIC_4000(java.lang.Object(ARRAY(i1727)), i1728)), i1730) -> f4004_0__init__Load(EOS(STATIC_4004(java.lang.Object(ARRAY(i1727)), i1728)), i1730) :|: TRUE
f4004_0__init__Load(EOS(STATIC_4004(java.lang.Object(ARRAY(i1727)), i1728)), i1730) -> f4007_0__init__Load(EOS(STATIC_4007(java.lang.Object(ARRAY(i1727)), i1728)), i1730) :|: TRUE
f4007_0__init__Load(EOS(STATIC_4007(java.lang.Object(ARRAY(i1727)), i1728)), i1730) -> f4010_0__init__FieldAccess(EOS(STATIC_4010(java.lang.Object(ARRAY(i1727)), i1728)), i1730) :|: TRUE
f4010_0__init__FieldAccess(EOS(STATIC_4010(java.lang.Object(ARRAY(i1727)), i1728)), i1730) -> f4017_0__init__Load(EOS(STATIC_4017(java.lang.Object(ARRAY(i1727)), i1728)), i1730) :|: TRUE
f4017_0__init__Load(EOS(STATIC_4017(java.lang.Object(ARRAY(i1727)), i1728)), i1730) -> f4025_0__init__Load(EOS(STATIC_4025(java.lang.Object(ARRAY(i1727)), i1728)), i1730) :|: TRUE
f4025_0__init__Load(EOS(STATIC_4025(java.lang.Object(ARRAY(i1727)), i1728)), i1730) -> f4035_0__init__FieldAccess(EOS(STATIC_4035(java.lang.Object(ARRAY(i1727)), i1728)), i1730) :|: TRUE
f4035_0__init__FieldAccess(EOS(STATIC_4035(java.lang.Object(ARRAY(i1727)), i1728)), i1730) -> f4047_0__init__Return(EOS(STATIC_4047(java.lang.Object(ARRAY(i1727)), i1728)), i1730) :|: TRUE
f4047_0__init__Return(EOS(STATIC_4047(java.lang.Object(ARRAY(i1727)), i1728)), i1730) -> f4055_0_mk_Store(EOS(STATIC_4055(java.lang.Object(ARRAY(i1727)), i1728)), i1730) :|: TRUE
f4055_0_mk_Store(EOS(STATIC_4055(java.lang.Object(ARRAY(i1727)), i1728)), i1730) -> f4063_0_mk_JMP(EOS(STATIC_4063(java.lang.Object(ARRAY(i1727)), i1728)), i1730) :|: TRUE
f4063_0_mk_JMP(EOS(STATIC_4063(java.lang.Object(ARRAY(i1727)), i1728)), i1730) -> f4102_0_mk_Load(EOS(STATIC_4102(java.lang.Object(ARRAY(i1727)), i1728)), i1730) :|: TRUE
f4102_0_mk_Load(EOS(STATIC_4102(java.lang.Object(ARRAY(i1727)), i1728)), i1730) -> f3212_0_mk_Load(EOS(STATIC_3212(java.lang.Object(ARRAY(i1727)), i1728)), i1730) :|: TRUE
f3212_0_mk_Load(EOS(STATIC_3212(java.lang.Object(ARRAY(i445)), i446)), i1285) -> f3219_0_mk_Inc(EOS(STATIC_3219(java.lang.Object(ARRAY(i445)), i446)), i1285, i1285) :|: TRUE
Combined rules. Obtained 2 IRulesP rules:
f3945_0_random_LT(EOS(STATIC_3945(java.lang.Object(ARRAY(i1727:0)), i1728:0)), i1730:0, i1728:0, i1727:0) -> f3945_0_random_LT(EOS(STATIC_3945(java.lang.Object(ARRAY(i1727:0)), i1728:0 + 1)), i1730:0 - 1, i1728:0 + 1, i1727:0) :|: i1728:0 < i1727:0 && i1728:0 > -1 && i1727:0 > -1 && i1730:0 > 0
f3945_0_random_LT(EOS(STATIC_3945(java.lang.Object(ARRAY(i1727:0)), i1728:0)), i1730:0, i1728:0, i1727:0) -> f3945_0_random_LT(EOS(STATIC_3945(java.lang.Object(ARRAY(i1727:0)), i1728:0)), i1730:0 - 1, i1728:0, i1727:0) :|: i1728:0 >= i1727:0 && i1727:0 > -1 && i1730:0 > 0
Finished conversion. Obtained 2 rules.P rules:
f3945_0_random_LT(i1730:0, i1728:0, i1727:0, i1727:0, i1728:0) -> f3945_0_random_LT(i1730:0 - 1, i1728:0 + 1, i1727:0, i1727:0, i1728:0 + 1) :|: i1728:0 > -1 && i1728:0 < i1727:0 && i1730:0 > 0 && i1727:0 > -1
f3945_0_random_LT(i1730:0, i1728:0, i1727:0, i1727:0, i1728:0) -> f3945_0_random_LT(i1730:0 - 1, i1728:0, i1727:0, i1727:0, i1728:0) :|: i1727:0 > -1 && i1730:0 > 0 && i1728:0 >= i1727:0

----------------------------------------

(8)
Obligation:
Rules:
f3945_0_random_LT(i1730:0, i1728:0, i1727:0, i1727:0, i1728:0) -> f3945_0_random_LT(i1730:0 - 1, i1728:0 + 1, i1727:0, i1727:0, i1728:0 + 1) :|: i1728:0 > -1 && i1728:0 < i1727:0 && i1730:0 > 0 && i1727:0 > -1
f3945_0_random_LT(x, x1, x2, x2, x1) -> f3945_0_random_LT(x - 1, x1, x2, x2, x1) :|: x2 > -1 && x > 0 && x1 >= x2

----------------------------------------

(9) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(10)
Obligation:
Rules:
f3945_0_random_LT(i1730:0, i1728:0, i1727:0, i1727:0, i1728:0) -> f3945_0_random_LT(arith, arith1, i1727:0, i1727:0, arith1) :|: i1728:0 > -1 && i1728:0 < i1727:0 && i1730:0 > 0 && i1727:0 > -1 && arith = i1730:0 - 1 && arith1 = i1728:0 + 1 && arith1 = i1728:0 + 1
f3945_0_random_LT(x3, x4, x5, x5, x4) -> f3945_0_random_LT(x6, x4, x5, x5, x4) :|: x5 > -1 && x3 > 0 && x4 >= x5 && x6 = x3 - 1

----------------------------------------

(11) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f3945_0_random_LT(i1730:0, i1728:0, i1727:0, i1727:0, i1728:0) -> f3945_0_random_LT(arith, arith1, i1727:0, i1727:0, arith1) :|: i1728:0 > -1 && i1728:0 < i1727:0 && i1730:0 > 0 && i1727:0 > -1 && arith = i1730:0 - 1 && arith1 = i1728:0 + 1 && arith1 = i1728:0 + 1
(2) f3945_0_random_LT(x3, x4, x5, x5, x4) -> f3945_0_random_LT(x6, x4, x5, x5, x4) :|: x5 > -1 && x3 > 0 && x4 >= x5 && x6 = x3 - 1

Arcs:
(1) -> (1), (2)
(2) -> (2)

This digraph is fully evaluated!
----------------------------------------

(12)
Complex Obligation (AND)

----------------------------------------

(13)
Obligation:

Termination digraph:
Nodes:
(1) f3945_0_random_LT(i1730:0, i1728:0, i1727:0, i1727:0, i1728:0) -> f3945_0_random_LT(arith, arith1, i1727:0, i1727:0, arith1) :|: i1728:0 > -1 && i1728:0 < i1727:0 && i1730:0 > 0 && i1727:0 > -1 && arith = i1730:0 - 1 && arith1 = i1728:0 + 1 && arith1 = i1728:0 + 1

Arcs:
(1) -> (1)

This digraph is fully evaluated!

----------------------------------------

(14) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(15)
Obligation:
Rules:
f3945_0_random_LT(i1730:0:0, i1728:0:0, i1727:0:0, i1727:0:0, i1728:0:0) -> f3945_0_random_LT(i1730:0:0 - 1, i1728:0:0 + 1, i1727:0:0, i1727:0:0, i1728:0:0 + 1) :|: i1730:0:0 > 0 && i1727:0:0 > -1 && i1728:0:0 < i1727:0:0 && i1728:0:0 > -1

----------------------------------------

(16) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f3945_0_random_LT(INTEGER, INTEGER, INTEGER, INTEGER, INTEGER)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(17)
Obligation:
Rules:
f3945_0_random_LT(i1730:0:0, i1728:0:0, i1727:0:0, i1727:0:0, i1728:0:0) -> f3945_0_random_LT(c, c1, i1727:0:0, i1727:0:0, c2) :|: c2 = i1728:0:0 + 1 && (c1 = i1728:0:0 + 1 && c = i1730:0:0 - 1) && (i1730:0:0 > 0 && i1727:0:0 > -1 && i1728:0:0 < i1727:0:0 && i1728:0:0 > -1)

----------------------------------------

(18) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f3945_0_random_LT(x, x1, x2, x3, x4)] = -x1 + x2

The following rules are decreasing:
f3945_0_random_LT(i1730:0:0, i1728:0:0, i1727:0:0, i1727:0:0, i1728:0:0) -> f3945_0_random_LT(c, c1, i1727:0:0, i1727:0:0, c2) :|: c2 = i1728:0:0 + 1 && (c1 = i1728:0:0 + 1 && c = i1730:0:0 - 1) && (i1730:0:0 > 0 && i1727:0:0 > -1 && i1728:0:0 < i1727:0:0 && i1728:0:0 > -1)
The following rules are bounded:
f3945_0_random_LT(i1730:0:0, i1728:0:0, i1727:0:0, i1727:0:0, i1728:0:0) -> f3945_0_random_LT(c, c1, i1727:0:0, i1727:0:0, c2) :|: c2 = i1728:0:0 + 1 && (c1 = i1728:0:0 + 1 && c = i1730:0:0 - 1) && (i1730:0:0 > 0 && i1727:0:0 > -1 && i1728:0:0 < i1727:0:0 && i1728:0:0 > -1)

----------------------------------------

(19)
YES

----------------------------------------

(20)
Obligation:

Termination digraph:
Nodes:
(1) f3945_0_random_LT(x3, x4, x5, x5, x4) -> f3945_0_random_LT(x6, x4, x5, x5, x4) :|: x5 > -1 && x3 > 0 && x4 >= x5 && x6 = x3 - 1

Arcs:
(1) -> (1)

This digraph is fully evaluated!

----------------------------------------

(21) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(22)
Obligation:
Rules:
f3945_0_random_LT(x3:0, x4:0, x5:0, x5:0, x4:0) -> f3945_0_random_LT(x3:0 - 1, x4:0, x5:0, x5:0, x4:0) :|: x5:0 > -1 && x3:0 > 0 && x5:0 <= x4:0

----------------------------------------

(23) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f3945_0_random_LT(INTEGER, INTEGER, INTEGER, INTEGER, INTEGER)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(24)
Obligation:
Rules:
f3945_0_random_LT(x3:0, x4:0, x5:0, x5:0, x4:0) -> f3945_0_random_LT(c, x4:0, x5:0, x5:0, x4:0) :|: c = x3:0 - 1 && (x5:0 > -1 && x3:0 > 0 && x5:0 <= x4:0)

----------------------------------------

(25) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f3945_0_random_LT(x, x1, x2, x3, x4)] = x

The following rules are decreasing:
f3945_0_random_LT(x3:0, x4:0, x5:0, x5:0, x4:0) -> f3945_0_random_LT(c, x4:0, x5:0, x5:0, x4:0) :|: c = x3:0 - 1 && (x5:0 > -1 && x3:0 > 0 && x5:0 <= x4:0)
The following rules are bounded:
f3945_0_random_LT(x3:0, x4:0, x5:0, x5:0, x4:0) -> f3945_0_random_LT(c, x4:0, x5:0, x5:0, x4:0) :|: c = x3:0 - 1 && (x5:0 > -1 && x3:0 > 0 && x5:0 <= x4:0)

----------------------------------------

(26)
YES
