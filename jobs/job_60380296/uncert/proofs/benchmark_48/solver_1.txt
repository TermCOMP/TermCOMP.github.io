YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/8dej2.jar
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


termination of the given Bare JBC problem could be proven:

(0) Bare JBC problem
(1) BareJBCToJBCProof [EQUIVALENT, 0 ms]
(2) JBC problem
(3) JBCToGraph [EQUIVALENT, 466 ms]
(4) JBCTerminationGraph
(5) TerminationGraphToSCCProof [SOUND, 0 ms]
(6) AND
    (7) JBCTerminationSCC
        (8) SCCToIRSProof [SOUND, 53 ms]
        (9) IRSwT
        (10) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (11) IRSwT
        (12) IRSwTTerminationDigraphProof [EQUIVALENT, 15 ms]
        (13) IRSwT
        (14) TempFilterProof [SOUND, 11 ms]
        (15) IRSwT
        (16) IRSwTToQDPProof [SOUND, 9 ms]
        (17) QDP
        (18) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (19) YES
    (20) JBCTerminationSCC
        (21) SCCToIRSProof [SOUND, 75 ms]
        (22) IRSwT
        (23) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (24) IRSwT
        (25) IRSwTTerminationDigraphProof [EQUIVALENT, 3 ms]
        (26) IRSwT
        (27) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (28) IRSwT
        (29) TempFilterProof [SOUND, 27 ms]
        (30) IntTRS
        (31) PolynomialOrderProcessor [EQUIVALENT, 5 ms]
        (32) YES


----------------------------------------

(0)
Obligation:
need to prove termination of the following program:
package SearchTreeR;
public class Random {
  static String[] args;
  static int index = 0;

  public static int random() {
    final String string = args[index];
    index++;
    return string.length();
  }
}


package SearchTreeR;


public class SearchTreeR {
  public static void main(final String[] args) {
    Random.args = args;

    final Tree t = new Tree(Random.random());

    final int numberOfVals = Random.random();
    for (int i = 0; i < numberOfVals; i++) {
        t.insert(Random.random());
    }
  }
}


package SearchTreeR;

public class Tree {
    Tree left;
    Tree right;
    int value;

    public Tree(final int val) {
        this.value = val;
    }

    public void insert(final int v) {
        if (v <= this.value) {
            if (this.left == null) {
                this.left = new Tree(v);
            } else {
                this.left.insert(v);
            }
        } else {
            if (this.right == null) {
                this.right = new Tree(v);
            } else {
                this.right.insert(v);
            }
        }
    }
}



----------------------------------------

(1) BareJBCToJBCProof (EQUIVALENT)
initialized classpath
----------------------------------------

(2)
Obligation:
need to prove termination of the following program:
package SearchTreeR;
public class Random {
  static String[] args;
  static int index = 0;

  public static int random() {
    final String string = args[index];
    index++;
    return string.length();
  }
}


package SearchTreeR;


public class SearchTreeR {
  public static void main(final String[] args) {
    Random.args = args;

    final Tree t = new Tree(Random.random());

    final int numberOfVals = Random.random();
    for (int i = 0; i < numberOfVals; i++) {
        t.insert(Random.random());
    }
  }
}


package SearchTreeR;

public class Tree {
    Tree left;
    Tree right;
    int value;

    public Tree(final int val) {
        this.value = val;
    }

    public void insert(final int v) {
        if (v <= this.value) {
            if (this.left == null) {
                this.left = new Tree(v);
            } else {
                this.left.insert(v);
            }
        } else {
            if (this.right == null) {
                this.right = new Tree(v);
            } else {
                this.right.insert(v);
            }
        }
    }
}



----------------------------------------

(3) JBCToGraph (EQUIVALENT)
Constructed TerminationGraph.
----------------------------------------

(4)
Obligation:
Termination Graph based on JBC Program:
SearchTreeR.SearchTreeR.main([Ljava/lang/String;)V: Graph of 292 nodes with 1 SCC.



SearchTreeR.Tree.insert(I)V: Graph of 74 nodes with 0 SCCs.





----------------------------------------

(5) TerminationGraphToSCCProof (SOUND)
Splitted TerminationGraph to 2 SCCss.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: SearchTreeR.Tree.insert(I)V
SCC calls the following helper methods: SearchTreeR.Tree.insert(I)V
Performed SCC analyses:
*Used field analysis yielded the following read fields:
*SearchTreeR.Tree: [value, right, left]
*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(8) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 30 IRulesP rules:
f4107_0_insert_Load(EOS(STATIC_4107), java.lang.Object(o757sub), i669, java.lang.Object(o757sub), i669, i669) -> f4111_0_insert_FieldAccess(EOS(STATIC_4111), java.lang.Object(o757sub), i669, java.lang.Object(o757sub), i669, i669, java.lang.Object(o757sub)) :|: TRUE
f4111_0_insert_FieldAccess(EOS(STATIC_4111), java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, o775)), i669, java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, o775)), i669, i669, java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, o775))) -> f4116_0_insert_FieldAccess(EOS(STATIC_4116), java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, o775)), i669, java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, o775)), i669, i669, java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, o775))) :|: TRUE
f4116_0_insert_FieldAccess(EOS(STATIC_4116), java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, o775)), i669, java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, o775)), i669, i669, java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, o775))) -> f4123_0_insert_GT(EOS(STATIC_4123), java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, o775)), i669, java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, o775)), i669, i669, i694) :|: TRUE
f4123_0_insert_GT(EOS(STATIC_4123), java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, o775)), i669, java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, o775)), i669, i669, i694) -> f4130_0_insert_GT(EOS(STATIC_4130), java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, o775)), i669, java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, o775)), i669, i669, i694) :|: i669 > i694
f4123_0_insert_GT(EOS(STATIC_4123), java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, o775)), i669, java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, o775)), i669, i669, i694) -> f4131_0_insert_GT(EOS(STATIC_4131), java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, o775)), i669, java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, o775)), i669, i669, i694) :|: i669 <= i694
f4130_0_insert_GT(EOS(STATIC_4130), java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, o775)), i669, java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, o775)), i669, i669, i694) -> f4137_0_insert_Load(EOS(STATIC_4137), java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, o775)), i669, java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, o775)), i669) :|: i669 > i694
f4137_0_insert_Load(EOS(STATIC_4137), java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, o775)), i669, java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, o775)), i669) -> f4144_0_insert_FieldAccess(EOS(STATIC_4144), java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, o775)), i669, java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, o775)), i669, java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, o775))) :|: TRUE
f4144_0_insert_FieldAccess(EOS(STATIC_4144), java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, o775)), i669, java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, o775)), i669, java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, o775))) -> f4148_0_insert_NONNULL(EOS(STATIC_4148), java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, o775)), i669, java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, o775)), i669, o776) :|: TRUE
f4148_0_insert_NONNULL(EOS(STATIC_4148), java.lang.Object(SearchTreeR.Tree(EOC, i694, java.lang.Object(o793sub), o775)), i669, java.lang.Object(SearchTreeR.Tree(EOC, i694, java.lang.Object(o793sub), o775)), i669, java.lang.Object(o793sub)) -> f4152_0_insert_NONNULL(EOS(STATIC_4152), java.lang.Object(SearchTreeR.Tree(EOC, i694, java.lang.Object(o793sub), o775)), i669, java.lang.Object(SearchTreeR.Tree(EOC, i694, java.lang.Object(o793sub), o775)), i669, java.lang.Object(o793sub)) :|: TRUE
f4152_0_insert_NONNULL(EOS(STATIC_4152), java.lang.Object(SearchTreeR.Tree(EOC, i694, java.lang.Object(o793sub), o775)), i669, java.lang.Object(SearchTreeR.Tree(EOC, i694, java.lang.Object(o793sub), o775)), i669, java.lang.Object(o793sub)) -> f4159_0_insert_Load(EOS(STATIC_4159), java.lang.Object(SearchTreeR.Tree(EOC, i694, java.lang.Object(o793sub), o775)), i669, java.lang.Object(SearchTreeR.Tree(EOC, i694, java.lang.Object(o793sub), o775)), i669) :|: TRUE
f4159_0_insert_Load(EOS(STATIC_4159), java.lang.Object(SearchTreeR.Tree(EOC, i694, java.lang.Object(o793sub), o775)), i669, java.lang.Object(SearchTreeR.Tree(EOC, i694, java.lang.Object(o793sub), o775)), i669) -> f4164_0_insert_FieldAccess(EOS(STATIC_4164), java.lang.Object(SearchTreeR.Tree(EOC, i694, java.lang.Object(o793sub), o775)), i669, i669, java.lang.Object(SearchTreeR.Tree(EOC, i694, java.lang.Object(o793sub), o775))) :|: TRUE
f4164_0_insert_FieldAccess(EOS(STATIC_4164), java.lang.Object(SearchTreeR.Tree(EOC, i694, java.lang.Object(o793sub), o775)), i669, i669, java.lang.Object(SearchTreeR.Tree(EOC, i694, java.lang.Object(o793sub), o775))) -> f4169_0_insert_Load(EOS(STATIC_4169), java.lang.Object(SearchTreeR.Tree(EOC, i694, java.lang.Object(o793sub), o775)), i669, i669, java.lang.Object(o793sub)) :|: TRUE
f4169_0_insert_Load(EOS(STATIC_4169), java.lang.Object(SearchTreeR.Tree(EOC, i694, java.lang.Object(o793sub), o775)), i669, i669, java.lang.Object(o793sub)) -> f4176_0_insert_InvokeMethod(EOS(STATIC_4176), java.lang.Object(SearchTreeR.Tree(EOC, i694, java.lang.Object(o793sub), o775)), i669, java.lang.Object(o793sub), i669) :|: TRUE
f4176_0_insert_InvokeMethod(EOS(STATIC_4176), java.lang.Object(SearchTreeR.Tree(EOC, i694, java.lang.Object(o793sub), o775)), i669, java.lang.Object(o793sub), i669) -> f4180_0_insert_Load(EOS(STATIC_4180), java.lang.Object(o793sub), i669, java.lang.Object(o793sub), i669) :|: i668 >= 1 && i669 > i694
f4176_0_insert_InvokeMethod(EOS(STATIC_4176), java.lang.Object(SearchTreeR.Tree(EOC, i694, java.lang.Object(o793sub), o775)), i669, java.lang.Object(o793sub), i669) -> f4180_1_insert_Load(EOS(STATIC_4180), java.lang.Object(SearchTreeR.Tree(EOC, i694, java.lang.Object(o793sub), o775)), i669, java.lang.Object(o793sub), i669) :|: i668 >= 1 && i669 > i694
f4180_0_insert_Load(EOS(STATIC_4180), java.lang.Object(o793sub), i669, java.lang.Object(o793sub), i669) -> f4184_0_insert_Load(EOS(STATIC_4184), java.lang.Object(o793sub), i669, java.lang.Object(o793sub), i669) :|: TRUE
f4184_0_insert_Load(EOS(STATIC_4184), java.lang.Object(o793sub), i669, java.lang.Object(o793sub), i669) -> f4100_0_insert_Load(EOS(STATIC_4100), java.lang.Object(o793sub), i669, java.lang.Object(o793sub), i669) :|: TRUE
f4100_0_insert_Load(EOS(STATIC_4100), java.lang.Object(o757sub), i669, java.lang.Object(o757sub), i669) -> f4107_0_insert_Load(EOS(STATIC_4107), java.lang.Object(o757sub), i669, java.lang.Object(o757sub), i669, i669) :|: TRUE
f4131_0_insert_GT(EOS(STATIC_4131), java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, o775)), i669, java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, o775)), i669, i669, i694) -> f4138_0_insert_Load(EOS(STATIC_4138), java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, o775)), i669, java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, o775)), i669) :|: i669 <= i694
f4138_0_insert_Load(EOS(STATIC_4138), java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, o775)), i669, java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, o775)), i669) -> f4145_0_insert_FieldAccess(EOS(STATIC_4145), java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, o775)), i669, java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, o775)), i669, java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, o775))) :|: TRUE
f4145_0_insert_FieldAccess(EOS(STATIC_4145), java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, o775)), i669, java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, o775)), i669, java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, o775))) -> f4149_0_insert_NONNULL(EOS(STATIC_4149), java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, o775)), i669, java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, o775)), i669, o775) :|: TRUE
f4149_0_insert_NONNULL(EOS(STATIC_4149), java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, java.lang.Object(o794sub))), i669, java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, java.lang.Object(o794sub))), i669, java.lang.Object(o794sub)) -> f4154_0_insert_NONNULL(EOS(STATIC_4154), java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, java.lang.Object(o794sub))), i669, java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, java.lang.Object(o794sub))), i669, java.lang.Object(o794sub)) :|: TRUE
f4154_0_insert_NONNULL(EOS(STATIC_4154), java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, java.lang.Object(o794sub))), i669, java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, java.lang.Object(o794sub))), i669, java.lang.Object(o794sub)) -> f4161_0_insert_Load(EOS(STATIC_4161), java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, java.lang.Object(o794sub))), i669, java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, java.lang.Object(o794sub))), i669) :|: TRUE
f4161_0_insert_Load(EOS(STATIC_4161), java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, java.lang.Object(o794sub))), i669, java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, java.lang.Object(o794sub))), i669) -> f4166_0_insert_FieldAccess(EOS(STATIC_4166), java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, java.lang.Object(o794sub))), i669, i669, java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, java.lang.Object(o794sub)))) :|: TRUE
f4166_0_insert_FieldAccess(EOS(STATIC_4166), java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, java.lang.Object(o794sub))), i669, i669, java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, java.lang.Object(o794sub)))) -> f4173_0_insert_Load(EOS(STATIC_4173), java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, java.lang.Object(o794sub))), i669, i669, java.lang.Object(o794sub)) :|: TRUE
f4173_0_insert_Load(EOS(STATIC_4173), java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, java.lang.Object(o794sub))), i669, i669, java.lang.Object(o794sub)) -> f4178_0_insert_InvokeMethod(EOS(STATIC_4178), java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, java.lang.Object(o794sub))), i669, java.lang.Object(o794sub), i669) :|: TRUE
f4178_0_insert_InvokeMethod(EOS(STATIC_4178), java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, java.lang.Object(o794sub))), i669, java.lang.Object(o794sub), i669) -> f4182_0_insert_Load(EOS(STATIC_4182), java.lang.Object(o794sub), i669, java.lang.Object(o794sub), i669) :|: i668 >= 1 && i669 <= i694
f4178_0_insert_InvokeMethod(EOS(STATIC_4178), java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, java.lang.Object(o794sub))), i669, java.lang.Object(o794sub), i669) -> f4182_1_insert_Load(EOS(STATIC_4182), java.lang.Object(SearchTreeR.Tree(EOC, i694, o776, java.lang.Object(o794sub))), i669, java.lang.Object(o794sub), i669) :|: i668 >= 1 && i669 <= i694
f4182_0_insert_Load(EOS(STATIC_4182), java.lang.Object(o794sub), i669, java.lang.Object(o794sub), i669) -> f4186_0_insert_Load(EOS(STATIC_4186), java.lang.Object(o794sub), i669, java.lang.Object(o794sub), i669) :|: TRUE
f4186_0_insert_Load(EOS(STATIC_4186), java.lang.Object(o794sub), i669, java.lang.Object(o794sub), i669) -> f4100_0_insert_Load(EOS(STATIC_4100), java.lang.Object(o794sub), i669, java.lang.Object(o794sub), i669) :|: TRUE
Combined rules. Obtained 4 IRulesP rules:
f4107_0_insert_Load(EOS(STATIC_4107), java.lang.Object(SearchTreeR.Tree(EOC, i694:0, o776:0, java.lang.Object(o794sub:0))), i669:0, java.lang.Object(SearchTreeR.Tree(EOC, i694:0, o776:0, java.lang.Object(o794sub:0))), i669:0, i669:0) -> f4107_0_insert_Load(EOS(STATIC_4107), java.lang.Object(o794sub:0), i669:0, java.lang.Object(o794sub:0), i669:0, i669:0) :|: i694:0 >= i669:0 && i668:0 > 0
f4107_0_insert_Load(EOS(STATIC_4107), java.lang.Object(SearchTreeR.Tree(EOC, i694:0, java.lang.Object(o793sub:0), o775:0)), i669:0, java.lang.Object(SearchTreeR.Tree(EOC, i694:0, java.lang.Object(o793sub:0), o775:0)), i669:0, i669:0) -> f4107_0_insert_Load(EOS(STATIC_4107), java.lang.Object(o793sub:0), i669:0, java.lang.Object(o793sub:0), i669:0, i669:0) :|: i694:0 < i669:0 && i668:0 > 0
Removed following non-SCC rules:
f4107_0_insert_Load(EOS(STATIC_4107), java.lang.Object(SearchTreeR.Tree(EOC, i694:0, o776:0, java.lang.Object(o794sub:0))), i669:0, java.lang.Object(SearchTreeR.Tree(EOC, i694:0, o776:0, java.lang.Object(o794sub:0))), i669:0, i669:0) -> f4182_1_insert_Load(EOS(STATIC_4182), java.lang.Object(SearchTreeR.Tree(EOC, i694:0, o776:0, java.lang.Object(o794sub:0))), i669:0, java.lang.Object(o794sub:0), i669:0) :|: i694:0 >= i669:0 && i668:0 > 0
f4107_0_insert_Load(EOS(STATIC_4107), java.lang.Object(SearchTreeR.Tree(EOC, i694:0, java.lang.Object(o793sub:0), o775:0)), i669:0, java.lang.Object(SearchTreeR.Tree(EOC, i694:0, java.lang.Object(o793sub:0), o775:0)), i669:0, i669:0) -> f4180_1_insert_Load(EOS(STATIC_4180), java.lang.Object(SearchTreeR.Tree(EOC, i694:0, java.lang.Object(o793sub:0), o775:0)), i669:0, java.lang.Object(o793sub:0), i669:0) :|: i694:0 < i669:0 && i668:0 > 0
Filtered constant ground arguments:
   f4107_0_insert_Load(x1, x2, x3, x4, x5, x6) -> f4107_0_insert_Load(x2, x3, x4, x5, x6)
   EOS(x1) -> EOS
   SearchTreeR.Tree(x1, x2, x3, x4) -> SearchTreeR.Tree(x2, x3, x4)
Filtered duplicate arguments:
   f4107_0_insert_Load(x1, x2, x3, x4, x5) -> f4107_0_insert_Load(x3, x5)
Finished conversion. Obtained 2 rules.P rules:
f4107_0_insert_Load(java.lang.Object(SearchTreeR.Tree(i694:0, o776:0, java.lang.Object(o794sub:0))), i669:0) -> f4107_0_insert_Load(java.lang.Object(o794sub:0), i669:0) :|: i694:0 >= i669:0 && i668:0 > 0
f4107_0_insert_Load(java.lang.Object(SearchTreeR.Tree(i694:0, java.lang.Object(o793sub:0), o775:0)), i669:0) -> f4107_0_insert_Load(java.lang.Object(o793sub:0), i669:0) :|: i694:0 < i669:0 && i668:0 > 0

----------------------------------------

(9)
Obligation:
Rules:
f4107_0_insert_Load(java.lang.Object(SearchTreeR.Tree(i694:0, o776:0, java.lang.Object(o794sub:0))), i669:0) -> f4107_0_insert_Load(java.lang.Object(o794sub:0), i669:0) :|: i694:0 >= i669:0 && i668:0 > 0
f4107_0_insert_Load(java.lang.Object(SearchTreeR.Tree(x, java.lang.Object(x1), x2)), x3) -> f4107_0_insert_Load(java.lang.Object(x1), x3) :|: x < x3 && x4 > 0

----------------------------------------

(10) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(11)
Obligation:
Rules:
f4107_0_insert_Load(java.lang.Object(SearchTreeR.Tree(i694:0, o776:0, java.lang.Object(o794sub:0))), i669:0) -> f4107_0_insert_Load(java.lang.Object(o794sub:0), i669:0) :|: i694:0 >= i669:0 && i668:0 > 0
f4107_0_insert_Load(java.lang.Object(SearchTreeR.Tree(x, java.lang.Object(x1), x2)), x3) -> f4107_0_insert_Load(java.lang.Object(x1), x3) :|: x < x3 && x4 > 0

----------------------------------------

(12) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f4107_0_insert_Load(java.lang.Object(SearchTreeR.Tree(i694:0, o776:0, java.lang.Object(o794sub:0))), i669:0) -> f4107_0_insert_Load(java.lang.Object(o794sub:0), i669:0) :|: i694:0 >= i669:0 && i668:0 > 0
(2) f4107_0_insert_Load(java.lang.Object(SearchTreeR.Tree(x, java.lang.Object(x1), x2)), x3) -> f4107_0_insert_Load(java.lang.Object(x1), x3) :|: x < x3 && x4 > 0

Arcs:
(1) -> (1), (2)
(2) -> (1), (2)

This digraph is fully evaluated!
----------------------------------------

(13)
Obligation:

Termination digraph:
Nodes:
(1) f4107_0_insert_Load(java.lang.Object(SearchTreeR.Tree(i694:0, o776:0, java.lang.Object(o794sub:0))), i669:0) -> f4107_0_insert_Load(java.lang.Object(o794sub:0), i669:0) :|: i694:0 >= i669:0 && i668:0 > 0
(2) f4107_0_insert_Load(java.lang.Object(SearchTreeR.Tree(x, java.lang.Object(x1), x2)), x3) -> f4107_0_insert_Load(java.lang.Object(x1), x3) :|: x < x3 && x4 > 0

Arcs:
(1) -> (1), (2)
(2) -> (1), (2)

This digraph is fully evaluated!

----------------------------------------

(14) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f4107_0_insert_Load(VARIABLE, INTEGER)
java.lang.Object(VARIABLE)
SearchTreeR.Tree(INTEGER, VARIABLE, VARIABLE)
Removed predefined arithmetic.
----------------------------------------

(15)
Obligation:
Rules:
f4107_0_insert_Load(java.lang.Object(SearchTreeR.Tree(o776:0, java.lang.Object(o794sub:0)))) -> f4107_0_insert_Load(java.lang.Object(o794sub:0))
f4107_0_insert_Load(java.lang.Object(SearchTreeR.Tree(java.lang.Object(x1), x2))) -> f4107_0_insert_Load(java.lang.Object(x1))

----------------------------------------

(16) IRSwTToQDPProof (SOUND)
Removed the integers and created a QDP-Problem.
----------------------------------------

(17)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   f4107_0_insert_Load(java.lang.Object(SearchTreeR.Tree(o776:0, java.lang.Object(o794sub:0)))) -> f4107_0_insert_Load(java.lang.Object(o794sub:0))
   f4107_0_insert_Load(java.lang.Object(SearchTreeR.Tree(java.lang.Object(x1), x2))) -> f4107_0_insert_Load(java.lang.Object(x1))

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(18) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*f4107_0_insert_Load(java.lang.Object(SearchTreeR.Tree(o776:0, java.lang.Object(o794sub:0)))) -> f4107_0_insert_Load(java.lang.Object(o794sub:0))
The graph contains the following edges 1 > 1


*f4107_0_insert_Load(java.lang.Object(SearchTreeR.Tree(java.lang.Object(x1), x2))) -> f4107_0_insert_Load(java.lang.Object(x1))
The graph contains the following edges 1 > 1


----------------------------------------

(19)
YES

----------------------------------------

(20)
Obligation:
SCC of termination graph based on JBC Program.
SCC contains nodes from the following methods: SearchTreeR.SearchTreeR.main([Ljava/lang/String;)V
SCC calls the following helper methods: SearchTreeR.Tree.insert(I)V
Performed SCC analyses:
*Used field analysis yielded the following read fields:
*java.lang.String: [count]
*Marker field analysis yielded the following relations that could be markers:

----------------------------------------

(21) SCCToIRSProof (SOUND)
Transformed FIGraph SCCs to intTRSs. Log: 
Generated rules. Obtained 40 IRulesP rules:
f3999_0_main_Load(EOS(STATIC_3999(java.lang.Object(ARRAY(i4)), i547)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, i550) -> f4000_0_main_GE(EOS(STATIC_4000(java.lang.Object(ARRAY(i4)), i547)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, i550, i549) :|: TRUE
f4000_0_main_GE(EOS(STATIC_4000(java.lang.Object(ARRAY(i4)), i547)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, i550, i549) -> f4009_0_main_GE(EOS(STATIC_4009(java.lang.Object(ARRAY(i4)), i547)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, i550, i549) :|: i550 < i549
f4009_0_main_GE(EOS(STATIC_4009(java.lang.Object(ARRAY(i4)), i547)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, i550, i549) -> f4011_0_main_Load(EOS(STATIC_4011(java.lang.Object(ARRAY(i4)), i547)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550) :|: i550 < i549
f4011_0_main_Load(EOS(STATIC_4011(java.lang.Object(ARRAY(i4)), i547)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550) -> f4013_0_main_InvokeMethod(EOS(STATIC_4013(java.lang.Object(ARRAY(i4)), i547)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, java.lang.Object(SearchTreeR.Tree(EOC))) :|: TRUE
f4013_0_main_InvokeMethod(EOS(STATIC_4013(java.lang.Object(ARRAY(i4)), i547)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, java.lang.Object(SearchTreeR.Tree(EOC))) -> f4014_0_random_FieldAccess(EOS(STATIC_4014(java.lang.Object(ARRAY(i4)), i547)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, java.lang.Object(SearchTreeR.Tree(EOC))) :|: TRUE
f4014_0_random_FieldAccess(EOS(STATIC_4014(java.lang.Object(ARRAY(i4)), i547)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, java.lang.Object(SearchTreeR.Tree(EOC))) -> f4015_0_random_FieldAccess(EOS(STATIC_4015(java.lang.Object(ARRAY(i4)), i547)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, java.lang.Object(SearchTreeR.Tree(EOC)), java.lang.Object(ARRAY(i4))) :|: TRUE
f4015_0_random_FieldAccess(EOS(STATIC_4015(java.lang.Object(ARRAY(i4)), i547)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, java.lang.Object(SearchTreeR.Tree(EOC)), java.lang.Object(ARRAY(i4))) -> f4016_0_random_ArrayAccess(EOS(STATIC_4016(java.lang.Object(ARRAY(i4)), i547)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, java.lang.Object(SearchTreeR.Tree(EOC)), java.lang.Object(ARRAY(i4)), i547) :|: TRUE
f4016_0_random_ArrayAccess(EOS(STATIC_4016(java.lang.Object(ARRAY(i4)), i565)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, java.lang.Object(SearchTreeR.Tree(EOC)), java.lang.Object(ARRAY(i4)), i565) -> f4018_0_random_ArrayAccess(EOS(STATIC_4018(java.lang.Object(ARRAY(i4)), i565)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, java.lang.Object(SearchTreeR.Tree(EOC)), java.lang.Object(ARRAY(i4)), i565) :|: TRUE
f4018_0_random_ArrayAccess(EOS(STATIC_4018(java.lang.Object(ARRAY(i4)), i565)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, java.lang.Object(SearchTreeR.Tree(EOC)), java.lang.Object(ARRAY(i4)), i565) -> f4020_0_random_ArrayAccess(EOS(STATIC_4020(java.lang.Object(ARRAY(i4)), i565)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, java.lang.Object(SearchTreeR.Tree(EOC)), java.lang.Object(ARRAY(i4)), i565) :|: TRUE
f4020_0_random_ArrayAccess(EOS(STATIC_4020(java.lang.Object(ARRAY(i4)), i565)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, java.lang.Object(SearchTreeR.Tree(EOC)), java.lang.Object(ARRAY(i4)), i565) -> f4022_0_random_Store(EOS(STATIC_4022(java.lang.Object(ARRAY(i4)), i565)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, java.lang.Object(SearchTreeR.Tree(EOC)), o679) :|: i565 < i4
f4022_0_random_Store(EOS(STATIC_4022(java.lang.Object(ARRAY(i4)), i565)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, java.lang.Object(SearchTreeR.Tree(EOC)), o679) -> f4025_0_random_FieldAccess(EOS(STATIC_4025(java.lang.Object(ARRAY(i4)), i565)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, java.lang.Object(SearchTreeR.Tree(EOC)), o679) :|: TRUE
f4025_0_random_FieldAccess(EOS(STATIC_4025(java.lang.Object(ARRAY(i4)), i565)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, java.lang.Object(SearchTreeR.Tree(EOC)), o679) -> f4027_0_random_ConstantStackPush(EOS(STATIC_4027(java.lang.Object(ARRAY(i4)), i565)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, java.lang.Object(SearchTreeR.Tree(EOC)), o679, i565) :|: TRUE
f4027_0_random_ConstantStackPush(EOS(STATIC_4027(java.lang.Object(ARRAY(i4)), i565)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, java.lang.Object(SearchTreeR.Tree(EOC)), o679, i565) -> f4029_0_random_IntArithmetic(EOS(STATIC_4029(java.lang.Object(ARRAY(i4)), i565)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, java.lang.Object(SearchTreeR.Tree(EOC)), o679, i565, 1) :|: TRUE
f4029_0_random_IntArithmetic(EOS(STATIC_4029(java.lang.Object(ARRAY(i4)), i565)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, java.lang.Object(SearchTreeR.Tree(EOC)), o679, i565, matching1) -> f4032_0_random_FieldAccess(EOS(STATIC_4032(java.lang.Object(ARRAY(i4)), i565)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, java.lang.Object(SearchTreeR.Tree(EOC)), o679, i565 + 1) :|: i565 >= 0 && matching1 = 1
f4032_0_random_FieldAccess(EOS(STATIC_4032(java.lang.Object(ARRAY(i4)), i565)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, java.lang.Object(SearchTreeR.Tree(EOC)), o679, i578) -> f4034_0_random_Load(EOS(STATIC_4034(java.lang.Object(ARRAY(i4)), i578)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, java.lang.Object(SearchTreeR.Tree(EOC)), o679) :|: TRUE
f4034_0_random_Load(EOS(STATIC_4034(java.lang.Object(ARRAY(i4)), i578)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, java.lang.Object(SearchTreeR.Tree(EOC)), o679) -> f4036_0_random_InvokeMethod(EOS(STATIC_4036(java.lang.Object(ARRAY(i4)), i578)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, java.lang.Object(SearchTreeR.Tree(EOC)), o679) :|: TRUE
f4036_0_random_InvokeMethod(EOS(STATIC_4036(java.lang.Object(ARRAY(i4)), i578)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, java.lang.Object(SearchTreeR.Tree(EOC)), java.lang.Object(o702sub)) -> f4041_0_random_InvokeMethod(EOS(STATIC_4041(java.lang.Object(ARRAY(i4)), i578)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, java.lang.Object(SearchTreeR.Tree(EOC)), java.lang.Object(o702sub)) :|: TRUE
f4041_0_random_InvokeMethod(EOS(STATIC_4041(java.lang.Object(ARRAY(i4)), i578)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, java.lang.Object(SearchTreeR.Tree(EOC)), java.lang.Object(o703sub)) -> f4044_0_random_InvokeMethod(EOS(STATIC_4044(java.lang.Object(ARRAY(i4)), i578)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, java.lang.Object(SearchTreeR.Tree(EOC)), java.lang.Object(o703sub)) :|: TRUE
f4044_0_random_InvokeMethod(EOS(STATIC_4044(java.lang.Object(ARRAY(i4)), i578)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, java.lang.Object(SearchTreeR.Tree(EOC)), java.lang.Object(o703sub)) -> f4047_0_length_Load(EOS(STATIC_4047(java.lang.Object(ARRAY(i4)), i578)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, java.lang.Object(SearchTreeR.Tree(EOC)), java.lang.Object(o703sub)) :|: TRUE
f4047_0_length_Load(EOS(STATIC_4047(java.lang.Object(ARRAY(i4)), i578)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, java.lang.Object(SearchTreeR.Tree(EOC)), java.lang.Object(o703sub)) -> f4056_0_length_FieldAccess(EOS(STATIC_4056(java.lang.Object(ARRAY(i4)), i578)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, java.lang.Object(SearchTreeR.Tree(EOC)), java.lang.Object(o703sub)) :|: TRUE
f4056_0_length_FieldAccess(EOS(STATIC_4056(java.lang.Object(ARRAY(i4)), i578)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, java.lang.Object(SearchTreeR.Tree(EOC)), java.lang.Object(java.lang.String(EOC, i617))) -> f4059_0_length_FieldAccess(EOS(STATIC_4059(java.lang.Object(ARRAY(i4)), i578)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, java.lang.Object(SearchTreeR.Tree(EOC)), java.lang.Object(java.lang.String(EOC, i617))) :|: i617 >= 0
f4059_0_length_FieldAccess(EOS(STATIC_4059(java.lang.Object(ARRAY(i4)), i578)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, java.lang.Object(SearchTreeR.Tree(EOC)), java.lang.Object(java.lang.String(EOC, i617))) -> f4062_0_length_Return(EOS(STATIC_4062(java.lang.Object(ARRAY(i4)), i578)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, java.lang.Object(SearchTreeR.Tree(EOC)), i617) :|: TRUE
f4062_0_length_Return(EOS(STATIC_4062(java.lang.Object(ARRAY(i4)), i578)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, java.lang.Object(SearchTreeR.Tree(EOC)), i617) -> f4065_0_random_Return(EOS(STATIC_4065(java.lang.Object(ARRAY(i4)), i578)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, java.lang.Object(SearchTreeR.Tree(EOC)), i617) :|: TRUE
f4065_0_random_Return(EOS(STATIC_4065(java.lang.Object(ARRAY(i4)), i578)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, java.lang.Object(SearchTreeR.Tree(EOC)), i617) -> f4069_0_main_InvokeMethod(EOS(STATIC_4069(java.lang.Object(ARRAY(i4)), i578)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, java.lang.Object(SearchTreeR.Tree(EOC)), i617) :|: TRUE
f4069_0_main_InvokeMethod(EOS(STATIC_4069(java.lang.Object(ARRAY(i4)), i578)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, java.lang.Object(SearchTreeR.Tree(EOC)), i617) -> f4072_0_insert_Load(EOS(STATIC_4072(java.lang.Object(ARRAY(i4)), i578)), java.lang.Object(SearchTreeR.Tree(EOC)), i617, java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i617) :|: i549 >= 1 && i578 >= 1 && i550 < i549 && i578 > i550
f4069_0_main_InvokeMethod(EOS(STATIC_4069(java.lang.Object(ARRAY(i4)), i578)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, java.lang.Object(SearchTreeR.Tree(EOC)), i617) -> f4072_1_insert_Load(EOS(STATIC_4072(java.lang.Object(ARRAY(i4)), i578)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, java.lang.Object(SearchTreeR.Tree(EOC)), i617) :|: i549 >= 1 && i578 >= 1 && i550 < i549 && i578 > i550
f4072_0_insert_Load(EOS(STATIC_4072(java.lang.Object(ARRAY(i4)), i578)), java.lang.Object(SearchTreeR.Tree(EOC)), i617, java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i617) -> f5532_0_insert_Load(EOS(STATIC_5532(java.lang.Object(ARRAY(i4)), i578)), java.lang.Object(SearchTreeR.Tree(EOC)), i617, java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i617) :|: TRUE
f5056_0_insert_Return(EOS(STATIC_5056(java.lang.Object(ARRAY(i4)), i771)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550) -> f5060_0_insert_Return(EOS(STATIC_5060(java.lang.Object(ARRAY(i4)), i771)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550) :|: TRUE
f5060_0_insert_Return(EOS(STATIC_5060(java.lang.Object(ARRAY(i4)), i820)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550) -> f5115_0_main_Inc(EOS(STATIC_5115(java.lang.Object(ARRAY(i4)), i820)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550) :|: TRUE
f5115_0_main_Inc(EOS(STATIC_5115(java.lang.Object(ARRAY(i4)), i820)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550) -> f5118_0_main_JMP(EOS(STATIC_5118(java.lang.Object(ARRAY(i4)), i820)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550 + 1) :|: TRUE
f5118_0_main_JMP(EOS(STATIC_5118(java.lang.Object(ARRAY(i4)), i820)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i842) -> f5131_0_main_Load(EOS(STATIC_5131(java.lang.Object(ARRAY(i4)), i820)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i842) :|: TRUE
f5131_0_main_Load(EOS(STATIC_5131(java.lang.Object(ARRAY(i4)), i820)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i842) -> f3994_0_main_Load(EOS(STATIC_3994(java.lang.Object(ARRAY(i4)), i820)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i842) :|: TRUE
f3994_0_main_Load(EOS(STATIC_3994(java.lang.Object(ARRAY(i4)), i547)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550) -> f3999_0_main_Load(EOS(STATIC_3999(java.lang.Object(ARRAY(i4)), i547)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, i550) :|: TRUE
f5059_0_insert_Return(EOS(STATIC_5059(java.lang.Object(ARRAY(i4)), i802)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550) -> f5060_0_insert_Return(EOS(STATIC_5060(java.lang.Object(ARRAY(i4)), i802)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550) :|: TRUE
f5194_0_insert_Return(EOS(STATIC_5194(java.lang.Object(ARRAY(i4)), i857)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550) -> f5060_0_insert_Return(EOS(STATIC_5060(java.lang.Object(ARRAY(i4)), i857)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550) :|: TRUE
f5248_0_insert_Return(EOS(STATIC_5248(java.lang.Object(ARRAY(i4)), i889)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550) -> f5060_0_insert_Return(EOS(STATIC_5060(java.lang.Object(ARRAY(i4)), i889)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550) :|: TRUE
f4072_1_insert_Load(EOS(STATIC_4072(java.lang.Object(ARRAY(i4)), i771)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, java.lang.Object(SearchTreeR.Tree(EOC)), i773) -> f5056_0_insert_Return(EOS(STATIC_5056(java.lang.Object(ARRAY(i4)), i771)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550) :|: TRUE
f4072_1_insert_Load(EOS(STATIC_4072(java.lang.Object(ARRAY(i4)), i802)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, java.lang.Object(SearchTreeR.Tree(EOC)), i804) -> f5059_0_insert_Return(EOS(STATIC_5059(java.lang.Object(ARRAY(i4)), i802)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550) :|: TRUE
f4072_1_insert_Load(EOS(STATIC_4072(java.lang.Object(ARRAY(i4)), i857)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, java.lang.Object(SearchTreeR.Tree(EOC)), i617) -> f5194_0_insert_Return(EOS(STATIC_5194(java.lang.Object(ARRAY(i4)), i857)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550) :|: TRUE
f4072_1_insert_Load(EOS(STATIC_4072(java.lang.Object(ARRAY(i4)), i889)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550, java.lang.Object(SearchTreeR.Tree(EOC)), i617) -> f5248_0_insert_Return(EOS(STATIC_5248(java.lang.Object(ARRAY(i4)), i889)), java.lang.Object(ARRAY(i4)), java.lang.Object(SearchTreeR.Tree(EOC)), i549, i550) :|: TRUE
Combined rules. Obtained 2 IRulesP rules:
f3999_0_main_Load(EOS(STATIC_3999(java.lang.Object(ARRAY(i4:0)), i547:0)), java.lang.Object(ARRAY(i4:0)), java.lang.Object(SearchTreeR.Tree(EOC)), i549:0, i550:0, i550:0) -> f3999_0_main_Load(EOS(STATIC_3999(java.lang.Object(ARRAY(i4:0)), i547:0 + 1)), java.lang.Object(ARRAY(i4:0)), java.lang.Object(SearchTreeR.Tree(EOC)), i549:0, i550:0 + 1, i550:0 + 1) :|: i550:0 < i549:0 && i547:0 < i4:0 && i547:0 > -1 && i617:0 > -1 && i549:0 > 0 && i550:0 < i547:0 + 1
Removed following non-SCC rules:
f3999_0_main_Load(EOS(STATIC_3999(java.lang.Object(ARRAY(i4:0)), i547:0)), java.lang.Object(ARRAY(i4:0)), java.lang.Object(SearchTreeR.Tree(EOC)), i549:0, i550:0, i550:0) -> f5532_0_insert_Load(EOS(STATIC_5532(java.lang.Object(ARRAY(i4:0)), i547:0 + 1)), java.lang.Object(SearchTreeR.Tree(EOC)), i617:0, java.lang.Object(ARRAY(i4:0)), java.lang.Object(SearchTreeR.Tree(EOC)), i617:0) :|: i550:0 < i549:0 && i547:0 < i4:0 && i547:0 > -1 && i617:0 > -1 && i549:0 > 0 && i550:0 < i547:0 + 1
Filtered constant ground arguments:
   f3999_0_main_Load(x1, x2, x3, x4, x5, x6) -> f3999_0_main_Load(x1, x2, x4, x5, x6)
   SearchTreeR.Tree(x1) -> SearchTreeR.Tree
Filtered duplicate arguments:
   f3999_0_main_Load(x1, x2, x3, x4, x5) -> f3999_0_main_Load(x1, x2, x3, x5)
Finished conversion. Obtained 1 rules.P rules:
f3999_0_main_Load(java.lang.Object(ARRAY(i4:0)), i549:0, i550:0, i4:0, i547:0, i4:0) -> f3999_0_main_Load(java.lang.Object(ARRAY(i4:0)), i549:0, i550:0 + 1, i4:0, i547:0 + 1, i4:0) :|: i547:0 < i4:0 && i550:0 < i549:0 && i547:0 > -1 && i617:0 > -1 && i550:0 < i547:0 + 1 && i549:0 > 0

----------------------------------------

(22)
Obligation:
Rules:
f3999_0_main_Load(java.lang.Object(ARRAY(i4:0)), i549:0, i550:0, i4:0, i547:0, i4:0) -> f3999_0_main_Load(java.lang.Object(ARRAY(i4:0)), i549:0, i550:0 + 1, i4:0, i547:0 + 1, i4:0) :|: i547:0 < i4:0 && i550:0 < i549:0 && i547:0 > -1 && i617:0 > -1 && i550:0 < i547:0 + 1 && i549:0 > 0

----------------------------------------

(23) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(24)
Obligation:
Rules:
f3999_0_main_Load(java.lang.Object(ARRAY(i4:0)), i549:0, i550:0, i4:0, i547:0, i4:0) -> f3999_0_main_Load(java.lang.Object(ARRAY(i4:0)), i549:0, arith, i4:0, arith1, i4:0) :|: i547:0 < i4:0 && i550:0 < i549:0 && i547:0 > -1 && i617:0 > -1 && i550:0 < i547:0 + 1 && i549:0 > 0 && arith = i550:0 + 1 && arith1 = i547:0 + 1

----------------------------------------

(25) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f3999_0_main_Load(java.lang.Object(ARRAY(i4:0)), i549:0, i550:0, i4:0, i547:0, i4:0) -> f3999_0_main_Load(java.lang.Object(ARRAY(i4:0)), i549:0, arith, i4:0, arith1, i4:0) :|: i547:0 < i4:0 && i550:0 < i549:0 && i547:0 > -1 && i617:0 > -1 && i550:0 < i547:0 + 1 && i549:0 > 0 && arith = i550:0 + 1 && arith1 = i547:0 + 1

Arcs:
(1) -> (1)

This digraph is fully evaluated!
----------------------------------------

(26)
Obligation:

Termination digraph:
Nodes:
(1) f3999_0_main_Load(java.lang.Object(ARRAY(i4:0)), i549:0, i550:0, i4:0, i547:0, i4:0) -> f3999_0_main_Load(java.lang.Object(ARRAY(i4:0)), i549:0, arith, i4:0, arith1, i4:0) :|: i547:0 < i4:0 && i550:0 < i549:0 && i547:0 > -1 && i617:0 > -1 && i550:0 < i547:0 + 1 && i549:0 > 0 && arith = i550:0 + 1 && arith1 = i547:0 + 1

Arcs:
(1) -> (1)

This digraph is fully evaluated!

----------------------------------------

(27) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(28)
Obligation:
Rules:
f3999_0_main_Load(java.lang.Object(ARRAY(i4:0:0)), i549:0:0, i550:0:0, i4:0:0, i547:0:0, i4:0:0) -> f3999_0_main_Load(java.lang.Object(ARRAY(i4:0:0)), i549:0:0, i550:0:0 + 1, i4:0:0, i547:0:0 + 1, i4:0:0) :|: i550:0:0 < i547:0:0 + 1 && i549:0:0 > 0 && i617:0:0 > -1 && i547:0:0 > -1 && i550:0:0 < i549:0:0 && i547:0:0 < i4:0:0

----------------------------------------

(29) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f3999_0_main_Load(VARIABLE, INTEGER, INTEGER, INTEGER, INTEGER, INTEGER)
java.lang.Object(VARIABLE)
ARRAY(INTEGER)
Replaced non-predefined constructor symbols by 0.
----------------------------------------

(30)
Obligation:
Rules:
f3999_0_main_Load(c, i549:0:0, i550:0:0, i4:0:0, i547:0:0, i4:0:0) -> f3999_0_main_Load(c1, i549:0:0, c2, i4:0:0, c3, i4:0:0) :|: c3 = i547:0:0 + 1 && (c2 = i550:0:0 + 1 && (c1 = 0 && c = 0)) && (i550:0:0 < i547:0:0 + 1 && i549:0:0 > 0 && i617:0:0 > -1 && i547:0:0 > -1 && i550:0:0 < i549:0:0 && i547:0:0 < i4:0:0)

----------------------------------------

(31) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f3999_0_main_Load(x, x1, x2, x3, x4, x5)] = c*x + x1 - x2

The following rules are decreasing:
f3999_0_main_Load(c, i549:0:0, i550:0:0, i4:0:0, i547:0:0, i4:0:0) -> f3999_0_main_Load(c1, i549:0:0, c2, i4:0:0, c3, i4:0:0) :|: c3 = i547:0:0 + 1 && (c2 = i550:0:0 + 1 && (c1 = 0 && c = 0)) && (i550:0:0 < i547:0:0 + 1 && i549:0:0 > 0 && i617:0:0 > -1 && i547:0:0 > -1 && i550:0:0 < i549:0:0 && i547:0:0 < i4:0:0)
The following rules are bounded:
f3999_0_main_Load(c, i549:0:0, i550:0:0, i4:0:0, i547:0:0, i4:0:0) -> f3999_0_main_Load(c1, i549:0:0, c2, i4:0:0, c3, i4:0:0) :|: c3 = i547:0:0 + 1 && (c2 = i550:0:0 + 1 && (c1 = 0 && c = 0)) && (i550:0:0 < i547:0:0 + 1 && i549:0:0 > 0 && i617:0:0 > -1 && i547:0:0 > -1 && i550:0:0 < i549:0:0 && i547:0:0 < i4:0:0)

----------------------------------------

(32)
YES
