NO
proof of /hpcwork/ff862203/termcomp25/benchmarks/bqVEY.jar
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


termination of the given Bare JBC problem could be disproven:

(0) Bare JBC problem
(1) BareJBCToJBCProof [EQUIVALENT, 0 ms]
(2) JBC problem
(3) JBCNonTerm [COMPLETE, 112 ms]
(4) NO


----------------------------------------

(0)
Obligation:
need to prove termination of the following program:
public class Ex01 {

    public static void loop(int i) {
	if (i < 0) loop(i - 1);
    }

    public static void main(String[] args) {
	loop(-1 * args.length);
    }
}



----------------------------------------

(1) BareJBCToJBCProof (EQUIVALENT)
initialized classpath
----------------------------------------

(2)
Obligation:
need to prove termination of the following program:
public class Ex01 {

    public static void loop(int i) {
	if (i < 0) loop(i - 1);
    }

    public static void main(String[] args) {
	loop(-1 * args.length);
    }
}



----------------------------------------

(3) JBCNonTerm (COMPLETE)
Reached a loop using the following run: 

0:<Ex01.main||0: push -1||#0: a2|| ->
	a2([java.lang.String...]): length 1 -->{java.lang.Object...}
YES:  (JL1)
1:<Ex01.main||1: load ADDR #0||#0: a2||-1>
	a2([java.lang.String...]): length 1 -->{java.lang.Object...}
YES:  (JL1)
2:<Ex01.main||2: arraylength|| - ||-1, a2>
	a2([java.lang.String...]): length 1 -->{java.lang.Object...}
YES:  (JL1)
3:<Ex01.main||3: MUL|| - ||-1, 1>
YES:  (JL1)
4:<Ex01.main||4: Ex01.loop(I)V|| - ||-1>
YES:  (JL1)
5:<Ex01.loop||0: load INT #0||#0: -1|| ->
YES:  (JL1)
Start state of loop: 

[i3(lv_0_0)]
<Ex01.loop||0: load INT #0||#0: i3|| ->
	i3: (-inf,0]{-inf,+inf}
YES:  (JL1)


In the loop head node, references [i3] were interesting.

All methods calls in the loop body are side-effect free, hence they can be ignored.

By SMT, we could prove

(initial_i3 <= 0 and (((path1_i3 = path1_i6 and path1_i14 = (path1_i6 - 1) and path1_i14 = res_i3 and path1_i3 = initial_i3) and path1_i6 < 0) and ((res1_i3 = res1_i6 and res1_i14 = (res1_i6 - 1) and res_i3 = res1_i3) and !res1_i6 < 0)))

to be UNSAT. Consequently, the loop will not terminate.
----------------------------------------

(4)
NO
