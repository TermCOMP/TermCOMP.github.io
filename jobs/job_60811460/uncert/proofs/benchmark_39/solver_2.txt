WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [evalDis1bb1in/7,evalDis1bb2in/7,evalDis1bb3in/7,evalDis1bbin/7]
1. non_recursive  : [evalDis1stop/5]
2. non_recursive  : [evalDis1returnin/5]
3. non_recursive  : [exit_location/1]
4. non_recursive  : [evalDis1bb3in_loop_cont/6]
5. non_recursive  : [evalDis1entryin/5]
6. non_recursive  : [evalDis1start/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into evalDis1bb3in/7
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into evalDis1bb3in_loop_cont/6
5. SCC is partially evaluated into evalDis1entryin/5
6. SCC is partially evaluated into evalDis1start/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations evalDis1bb3in/7 
* CE 6 is refined into CE [9] 
* CE 5 is refined into CE [10] 
* CE 3 is refined into CE [11] 
* CE 4 is refined into CE [12] 


### Cost equations --> "Loop" of evalDis1bb3in/7 
* CEs [11] --> Loop 9 
* CEs [12] --> Loop 10 
* CEs [9] --> Loop 11 
* CEs [10] --> Loop 12 

### Ranking functions of CR evalDis1bb3in(A,B,C,D,E,F,G) 
* RF of phase [9]: [C-D]
* RF of phase [10]: [A-B]

#### Partial ranking functions of CR evalDis1bb3in(A,B,C,D,E,F,G) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    C-D
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    A-B


### Specialization of cost equations evalDis1bb3in_loop_cont/6 
* CE 8 is refined into CE [13] 
* CE 7 is refined into CE [14] 


### Cost equations --> "Loop" of evalDis1bb3in_loop_cont/6 
* CEs [13] --> Loop 13 
* CEs [14] --> Loop 14 

### Ranking functions of CR evalDis1bb3in_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR evalDis1bb3in_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations evalDis1entryin/5 
* CE 2 is refined into CE [15,16,17,18,19,20] 


### Cost equations --> "Loop" of evalDis1entryin/5 
* CEs [15] --> Loop 15 
* CEs [17,19] --> Loop 16 
* CEs [16,20] --> Loop 17 
* CEs [18] --> Loop 18 

### Ranking functions of CR evalDis1entryin(A,B,C,D,E) 

#### Partial ranking functions of CR evalDis1entryin(A,B,C,D,E) 


### Specialization of cost equations evalDis1start/5 
* CE 1 is refined into CE [21,22,23,24] 


### Cost equations --> "Loop" of evalDis1start/5 
* CEs [24] --> Loop 19 
* CEs [23] --> Loop 20 
* CEs [22] --> Loop 21 
* CEs [21] --> Loop 22 

### Ranking functions of CR evalDis1start(A,B,C,D,E) 

#### Partial ranking functions of CR evalDis1start(A,B,C,D,E) 


Computing Bounds
=====================================

#### Cost of chains of evalDis1bb3in(A,B,C,D,E,F,G):
* Chain [[10],12]: 1*it(10)+0
  Such that:it(10) =< A-B

  with precondition: [E=2,A=F,D=G,A>=B+1,D>=C] 

* Chain [[10],11]: 1*it(10)+0
  Such that:it(10) =< A-B

  with precondition: [E=3,A>=B+1,D>=C] 

* Chain [[9],[10],12]: 1*it(9)+1*it(10)+0
  Such that:it(10) =< A-B
it(9) =< C-D

  with precondition: [E=2,A=F,C=G,A>=B+1,C>=D+1] 

* Chain [[9],[10],11]: 1*it(9)+1*it(10)+0
  Such that:it(10) =< A-B
it(9) =< C-D

  with precondition: [E=3,A>=B+1,C>=D+1] 

* Chain [[9],11]: 1*it(9)+0
  Such that:it(9) =< C-D

  with precondition: [E=3,A>=B+1,C>=D+1] 

* Chain [12]: 0
  with precondition: [E=2,G=D,B=F,B>=A] 

* Chain [11]: 0
  with precondition: [E=3] 


#### Cost of chains of evalDis1bb3in_loop_cont(A,B,C,D,E,F):
* Chain [14]: 0
  with precondition: [A=2] 

* Chain [13]: 0
  with precondition: [A=3] 


#### Cost of chains of evalDis1entryin(A,B,C,D,E):
* Chain [18]: 0
  with precondition: [] 

* Chain [17]: 2*s(4)+3*s(5)+0
  Such that:aux(2) =< -A+B
aux(3) =< -C+D
s(4) =< aux(2)
s(5) =< aux(3)

  with precondition: [B>=A+1,D>=C+1] 

* Chain [16]: 2*s(9)+0
  Such that:aux(4) =< -A+B
s(9) =< aux(4)

  with precondition: [B>=A+1,C>=D] 

* Chain [15]: 0
  with precondition: [A>=B] 


#### Cost of chains of evalDis1start(A,B,C,D,E):
* Chain [22]: 0
  with precondition: [] 

* Chain [21]: 2*s(13)+3*s(14)+0
  Such that:s(11) =< -A+B
s(12) =< -C+D
s(13) =< s(11)
s(14) =< s(12)

  with precondition: [B>=A+1,D>=C+1] 

* Chain [20]: 2*s(16)+0
  Such that:s(15) =< -A+B
s(16) =< s(15)

  with precondition: [B>=A+1,C>=D] 

* Chain [19]: 0
  with precondition: [A>=B] 


Closed-form bounds of evalDis1start(A,B,C,D,E): 
-------------------------------------
* Chain [22] with precondition: [] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [21] with precondition: [B>=A+1,D>=C+1] 
    - Upper bound: -2*A+2*B-3*C+3*D 
    - Complexity: n 
* Chain [20] with precondition: [B>=A+1,C>=D] 
    - Upper bound: -2*A+2*B 
    - Complexity: n 
* Chain [19] with precondition: [A>=B] 
    - Upper bound: 0 
    - Complexity: constant 

### Maximum cost of evalDis1start(A,B,C,D,E): nat(-C+D)*3+nat(-A+B)*2 
Asymptotic class: n 
* Total analysis performed in 74 ms.

