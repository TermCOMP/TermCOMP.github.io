WORST_CASE(Omega(n^1),O(n^1))

# LoAT Proof:
WORST_CASE(Omega(n^1),?)

WORST_CASE(Omega(n^1),?)
Initial ITS

Start location: start

Location map:
LoAT_sink -> 0
start -> 1
eval -> 2

Rules:
   0: (-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4
   1: (-1+i4 >= 0 /\ -2+i1 == 0 /\ -1+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4
   2: (-1+i4 >= 0 /\ -2+i1 == 0 /\ -1+i5 >= 0 /\ -i4 >= 0) /\ i1'=2, i3'=1+i3, i5'=-1+i5
   3: (-2+i1 == 0 /\ -1+i5 >= 0 /\ -i4 >= 0) /\ i1'=2, i3'=1+i3, i5'=-1+i5
   4: (-1+i4 >= 0 /\ -2+i1 == 0 /\ -i5 >= 0 /\ -i4 >= 0) /\ i1'=2, i3'=1+i3
   5: (-2+i1 == 0 /\ -i5 >= 0 /\ -1+i5 >= 0 /\ -i4 >= 0) /\ i1'=2, i3'=1+i3
   6: -1+i1 == 0 /\ i1'=2, i3'=1+i3

Dependency graph:
0 -> 0, 0 -> 1, 0 -> 2, 0 -> 3, 0 -> 4, 0 -> 5
1 -> 0, 1 -> 1, 1 -> 2, 1 -> 3, 1 -> 4, 1 -> 5
2 -> 0, 2 -> 1, 2 -> 2, 2 -> 3, 2 -> 4, 2 -> 5
3 -> 0, 3 -> 1, 3 -> 2, 3 -> 3, 3 -> 4, 3 -> 5
4 -> 0, 4 -> 1, 4 -> 2, 4 -> 3, 4 -> 4, 4 -> 5
5 -> 0, 5 -> 1, 5 -> 2, 5 -> 3, 5 -> 4, 5 -> 5
6 -> 0, 6 -> 1, 6 -> 2, 6 -> 3, 6 -> 4, 6 -> 5

Refined Dependency Graph

	Removed the following edges: 0 -> 2, 0 -> 4, 0 -> 5, 1 -> 2, 1 -> 4, 1 -> 5, 2 -> 0, 2 -> 1, 2 -> 2, 2 -> 3, 2 -> 4, 2 -> 5, 3 -> 0, 3 -> 1, 3 -> 2, 3 -> 4, 3 -> 5, 4 -> 0, 4 -> 1, 4 -> 2, 4 -> 3, 4 -> 4, 4 -> 5, 5 -> 0, 5 -> 1, 5 -> 2, 5 -> 3, 5 -> 4, 5 -> 5, 6 -> 2, 6 -> 4, 6 -> 5

Start location: start

Location map:
LoAT_sink -> 0
start -> 1
eval -> 2

Rules:
   0: (-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4
   1: (-1+i4 >= 0 /\ -2+i1 == 0 /\ -1+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4
   2: (-1+i4 >= 0 /\ -2+i1 == 0 /\ -1+i5 >= 0 /\ -i4 >= 0) /\ i1'=2, i3'=1+i3, i5'=-1+i5
   3: (-2+i1 == 0 /\ -1+i5 >= 0 /\ -i4 >= 0) /\ i1'=2, i3'=1+i3, i5'=-1+i5
   4: (-1+i4 >= 0 /\ -2+i1 == 0 /\ -i5 >= 0 /\ -i4 >= 0) /\ i1'=2, i3'=1+i3
   5: (-2+i1 == 0 /\ -i5 >= 0 /\ -1+i5 >= 0 /\ -i4 >= 0) /\ i1'=2, i3'=1+i3
   6: -1+i1 == 0 /\ i1'=2, i3'=1+i3

Dependency graph:
0 -> 0, 0 -> 1, 0 -> 3
1 -> 0, 1 -> 1, 1 -> 3
3 -> 3
6 -> 0, 6 -> 1, 6 -> 3

Step with 6

	Trace

	6[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 3

	Trace

	6[(-1+i1 == 0)]
	3[(-2+i1 == 0 /\ -1+i5 >= 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Poly(n^1)

Accelerate

	Loop Acceleration

	Original rule:
	(-2+i1 == 0 /\ -1+i5 >= 0 /\ -i4 >= 0) /\ i1'=2, i3'=1+i3, i5'=-1+i5
	New rule:
	(-it9+i5 >= 0 /\ -2+i1 >= 0 /\ -1+it9 >= 0 /\ 2-i1 >= 0 /\ -i4 >= 0) /\ i1'=i1, i3'=i3+it9, i5'=-it9+i5

		-2+i1 >= 0 [0]: unchanged
		
		-1+i5 >= 0 [0]: montonic decrease yields -it9+i5 >= 0
		
		2-i1 >= 0 [0]: unchanged
		
		-i4 >= 0 [0]: unchanged
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, -1+i5 >= 0 -> -it9+i5 >= 0, 2-i1 >= 0 -> 2-i1 >= 0, -i4 >= 0 -> -i4 >= 0}

	Removed Trivial Updates

	Original rule:
	(-it9+i5 >= 0 /\ -2+i1 >= 0 /\ -1+it9 >= 0 /\ 2-i1 >= 0 /\ -i4 >= 0) /\ i1'=i1, i3'=i3+it9, i5'=-it9+i5
	New rule:
	(-it9+i5 >= 0 /\ -2+i1 >= 0 /\ -1+it9 >= 0 /\ 2-i1 >= 0 /\ -i4 >= 0) /\ i3'=i3+it9, i5'=-it9+i5
	
	Instantiation

	Original rule:
	(-it9+i5 >= 0 /\ -2+i1 >= 0 /\ -1+it9 >= 0 /\ 2-i1 >= 0 /\ -i4 >= 0) /\ i3'=i3+it9, i5'=-it9+i5
	New rule:
	(0 >= 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0 /\ -i4 >= 0) /\ i3'=i3+i5, i5'=0

Start location: start

Location map:
LoAT_sink -> 0
start -> 1
eval -> 2

Rules:
   0: (-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4
   1: (-1+i4 >= 0 /\ -2+i1 == 0 /\ -1+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4
   2: (-1+i4 >= 0 /\ -2+i1 == 0 /\ -1+i5 >= 0 /\ -i4 >= 0) /\ i1'=2, i3'=1+i3, i5'=-1+i5
   3: (-2+i1 == 0 /\ -1+i5 >= 0 /\ -i4 >= 0) /\ i1'=2, i3'=1+i3, i5'=-1+i5
   4: (-1+i4 >= 0 /\ -2+i1 == 0 /\ -i5 >= 0 /\ -i4 >= 0) /\ i1'=2, i3'=1+i3
   5: (-2+i1 == 0 /\ -i5 >= 0 /\ -1+i5 >= 0 /\ -i4 >= 0) /\ i1'=2, i3'=1+i3
   6: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   7: (0 >= 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0 /\ -i4 >= 0) /\ i3'=i3+i5, i5'=0

Dependency graph:
0 -> 0, 0 -> 1, 0 -> 3, 0 -> 7
1 -> 0, 1 -> 1, 1 -> 3, 1 -> 7
3 -> 3, 3 -> 7
6 -> 0, 6 -> 1, 6 -> 3, 6 -> 7
7 -> 3

	Trace

	6[(-1+i1 == 0)]
	7[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{}
	{3[T], 7[T]}
	
Backtrack

	Trace

	6[(-1+i1 == 0)]
	
	Blocked

	{}
	{7[T]}
	
Step with 1

	Trace

	6[(-1+i1 == 0)]
	1[(-1+i4 >= 0 /\ -2+i1 == 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{7[T]}
	{}
	
Accelerate

	Loop Acceleration

	Original rule:
	(-1+i4 >= 0 /\ -2+i1 == 0 /\ -1+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4
	New rule:
	(-2+i1 >= 0 /\ -1+it26 >= 0 /\ -1+i5 >= 0 /\ i4-it26 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it26, i4'=i4-it26

		-1+i4 >= 0 [0]: montonic decrease yields i4-it26 >= 0
		
		-2+i1 >= 0 [0]: unchanged
		
		-1+i5 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-1+i4 >= 0 -> i4-it26 >= 0, -2+i1 >= 0 -> -2+i1 >= 0, -1+i5 >= 0 -> -1+i5 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-2+i1 >= 0 /\ -1+it26 >= 0 /\ -1+i5 >= 0 /\ i4-it26 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it26, i4'=i4-it26
	New rule:
	(-2+i1 >= 0 /\ -1+it26 >= 0 /\ -1+i5 >= 0 /\ i4-it26 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+it26, i4'=i4-it26
	
	Instantiation

	Original rule:
	(-2+i1 >= 0 /\ -1+it26 >= 0 /\ -1+i5 >= 0 /\ i4-it26 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+it26, i4'=i4-it26
	New rule:
	(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+i4, i4'=0

Start location: start

Location map:
LoAT_sink -> 0
start -> 1
eval -> 2

Rules:
   0: (-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4
   1: (-1+i4 >= 0 /\ -2+i1 == 0 /\ -1+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4
   2: (-1+i4 >= 0 /\ -2+i1 == 0 /\ -1+i5 >= 0 /\ -i4 >= 0) /\ i1'=2, i3'=1+i3, i5'=-1+i5
   3: (-2+i1 == 0 /\ -1+i5 >= 0 /\ -i4 >= 0) /\ i1'=2, i3'=1+i3, i5'=-1+i5
   4: (-1+i4 >= 0 /\ -2+i1 == 0 /\ -i5 >= 0 /\ -i4 >= 0) /\ i1'=2, i3'=1+i3
   5: (-2+i1 == 0 /\ -i5 >= 0 /\ -1+i5 >= 0 /\ -i4 >= 0) /\ i1'=2, i3'=1+i3
   6: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   7: (0 >= 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0 /\ -i4 >= 0) /\ i3'=i3+i5, i5'=0
   8: (0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+i4, i4'=0

Dependency graph:
0 -> 0, 0 -> 1, 0 -> 3, 0 -> 7, 0 -> 8
1 -> 0, 1 -> 1, 1 -> 3, 1 -> 7, 1 -> 8
3 -> 3, 3 -> 7
6 -> 0, 6 -> 1, 6 -> 3, 6 -> 7, 6 -> 8
7 -> 3
8 -> 0, 8 -> 1, 8 -> 3, 8 -> 7

	Trace

	6[(-1+i1 == 0)]
	8[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{7[T]}
	{1[T], 8[T]}
	
Step with 3

	Trace

	6[(-1+i1 == 0)]
	8[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0)]
	3[(-2+i1 == 0 /\ -1+i5 >= 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{7[T]}
	{1[T], 8[T]}
	{}
	
Covered

	Trace

	6[(-1+i1 == 0)]
	8[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{7[T]}
	{1[T], 3[T], 8[T]}
	
Step with 7

	Trace

	6[(-1+i1 == 0)]
	8[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0)]
	7[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{7[T]}
	{1[T], 3[T], 8[T]}
	{7[T]}
	
Backtrack

	Trace

	6[(-1+i1 == 0)]
	8[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{7[T]}
	{1[T], 3[T], 7[T], 8[T]}
	
Backtrack

	Trace

	6[(-1+i1 == 0)]
	
	Blocked

	{}
	{7[T], 8[T]}
	
Step with 0

	Trace

	6[(-1+i1 == 0)]
	0[(-1+i4 >= 0 /\ -2+i1 == 0)]
	
	Blocked

	{}
	{7[T], 8[T]}
	{}
	
Accelerate

	Loop Acceleration

	Original rule:
	(-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4
	New rule:
	(-2+i1 >= 0 /\ -it43+i4 >= 0 /\ -1+it43 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it43, i4'=-it43+i4

		-1+i4 >= 0 [0]: montonic decrease yields -it43+i4 >= 0
		
		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-1+i4 >= 0 -> -it43+i4 >= 0, -2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-2+i1 >= 0 /\ -it43+i4 >= 0 /\ -1+it43 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it43, i4'=-it43+i4
	New rule:
	(-2+i1 >= 0 /\ -it43+i4 >= 0 /\ -1+it43 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+it43, i4'=-it43+i4
	
	Instantiation

	Original rule:
	(-2+i1 >= 0 /\ -it43+i4 >= 0 /\ -1+it43 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+it43, i4'=-it43+i4
	New rule:
	(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+i4, i4'=0

Start location: start

Location map:
LoAT_sink -> 0
start -> 1
eval -> 2

Rules:
   0: (-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4
   1: (-1+i4 >= 0 /\ -2+i1 == 0 /\ -1+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4
   2: (-1+i4 >= 0 /\ -2+i1 == 0 /\ -1+i5 >= 0 /\ -i4 >= 0) /\ i1'=2, i3'=1+i3, i5'=-1+i5
   3: (-2+i1 == 0 /\ -1+i5 >= 0 /\ -i4 >= 0) /\ i1'=2, i3'=1+i3, i5'=-1+i5
   4: (-1+i4 >= 0 /\ -2+i1 == 0 /\ -i5 >= 0 /\ -i4 >= 0) /\ i1'=2, i3'=1+i3
   5: (-2+i1 == 0 /\ -i5 >= 0 /\ -1+i5 >= 0 /\ -i4 >= 0) /\ i1'=2, i3'=1+i3
   6: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   7: (0 >= 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0 /\ -i4 >= 0) /\ i3'=i3+i5, i5'=0
   8: (0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+i4, i4'=0
   9: (0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+i4, i4'=0

Dependency graph:
0 -> 0, 0 -> 1, 0 -> 3, 0 -> 7, 0 -> 8, 0 -> 9
1 -> 0, 1 -> 1, 1 -> 3, 1 -> 7, 1 -> 8, 1 -> 9
3 -> 3, 3 -> 7
6 -> 0, 6 -> 1, 6 -> 3, 6 -> 7, 6 -> 8, 6 -> 9
7 -> 3
8 -> 0, 8 -> 1, 8 -> 3, 8 -> 7, 8 -> 9
9 -> 0, 9 -> 1, 9 -> 3, 9 -> 7, 9 -> 8

	Trace

	6[(-1+i1 == 0)]
	9[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{7[T], 8[T]}
	{0[T], 9[T]}
	
Step with 3

	Trace

	6[(-1+i1 == 0)]
	9[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	3[(-2+i1 == 0 /\ -1+i5 >= 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{7[T], 8[T]}
	{0[T], 9[T]}
	{}
	
Covered

	Trace

	6[(-1+i1 == 0)]
	9[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{7[T], 8[T]}
	{0[T], 3[T], 9[T]}
	
Step with 7

	Trace

	6[(-1+i1 == 0)]
	9[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	7[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{7[T], 8[T]}
	{0[T], 3[T], 9[T]}
	{7[T]}
	
Backtrack

	Trace

	6[(-1+i1 == 0)]
	9[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{7[T], 8[T]}
	{0[T], 3[T], 7[T], 9[T]}
	
Backtrack

	Trace

	6[(-1+i1 == 0)]
	
	Blocked

	{}
	{7[T], 8[T], 9[T]}
	
Step with 3

	Trace

	6[(-1+i1 == 0)]
	3[(-2+i1 == 0 /\ -1+i5 >= 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{7[T], 8[T], 9[T]}
	{}
	
Covered

	Trace

	6[(-1+i1 == 0)]
	
	Blocked

	{}
	{3[T], 7[T], 8[T], 9[T]}
	
Step with 0

	Trace

	6[(-1+i1 == 0)]
	0[(-1+i4 >= 0 /\ -2+i1 == 0)]
	
	Blocked

	{}
	{3[T], 7[T], 8[T], 9[T]}
	{}
	
Covered

	Trace

	6[(-1+i1 == 0)]
	
	Blocked

	{}
	{0[T], 3[T], 7[T], 8[T], 9[T]}
	
Step with 1

	Trace

	6[(-1+i1 == 0)]
	1[(-1+i4 >= 0 /\ -2+i1 == 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{0[T], 3[T], 7[T], 8[T], 9[T]}
	{}
	
Covered

	Trace

	6[(-1+i1 == 0)]
	
	Blocked

	{}
	{0[T], 1[T], 3[T], 7[T], 8[T], 9[T]}
	
Backtrack

	Trace

	Blocked

	{6[T]}
	
Accept

Poly(n^1)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁
  Temp_Vars:  
  Locations:  l0, l1
  Return Locations:  
  Transitions:
  t₆: l0(X₀, X₁) → l1(X₀, X₁)
  t₀: l1(X₀, X₁) → l1(X₀-1, X₁) :|: 1 ≤ X₀
  t₁: l1(X₀, X₁) → l1(X₀-1, X₁) :|: 1 ≤ X₀ ∧ 1 ≤ X₁
  t₂: l1(X₀, X₁) → l1(X₀, X₁-1) :|: 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ X₀ ≤ 0
  t₃: l1(X₀, X₁) → l1(X₀, X₁-1) :|: 1 ≤ X₁ ∧ X₀ ≤ 0
  t₄: l1(X₀, X₁) → l1(X₀, X₁) :|: 1 ≤ X₀ ∧ X₀ ≤ 0 ∧ X₁ ≤ 0
  t₅: l1(X₀, X₁) → l1(X₀, X₁) :|: 1 ≤ X₁ ∧ X₀ ≤ 0 ∧ X₁ ≤ 0


Preprocessing
  Cut unsatisfiable transition [t₂: l1→l1; t₄: l1→l1; t₅: l1→l1]


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁
  Temp_Vars:  
  Locations:  l0, l1
  Return Locations:  
  Transitions:
  t₆: l0(X₀, X₁) → l1(X₀, X₁)
  t₀: l1(X₀, X₁) → l1(X₀-1, X₁) :|: 1 ≤ X₀
  t₁: l1(X₀, X₁) → l1(X₀-1, X₁) :|: 1 ≤ X₀ ∧ 1 ≤ X₁
  t₃: l1(X₀, X₁) → l1(X₀, X₁-1) :|: 1 ≤ X₁ ∧ X₀ ≤ 0


MPRF for transition t₀: l1(X₀, X₁) → l1(X₀-1, X₁) :|: 1 ≤ X₀ of depth 1:
  new bound:
    X₀ {O(n)}

  MPRF:
    • l1: [X₀]




MPRF for transition t₁: l1(X₀, X₁) → l1(X₀-1, X₁) :|: 1 ≤ X₀ ∧ 1 ≤ X₁ of depth 1:
  new bound:
    X₀ {O(n)}

  MPRF:
    • l1: [X₀]




MPRF for transition t₃: l1(X₀, X₁) → l1(X₀, X₁-1) :|: 1 ≤ X₁ ∧ X₀ ≤ 0 of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l1: [X₁]




All Bounds
Timebounds
  Overall timebound:2⋅X₀+X₁+1 {O(n)}
    t₀: X₀ {O(n)}
    t₁: X₀ {O(n)}
    t₃: X₁ {O(n)}
    t₆: 1 {O(1)}


Costbounds
  Overall costbound: 2⋅X₀+X₁+1 {O(n)}
    t₀: X₀ {O(n)}
    t₁: X₀ {O(n)}
    t₃: X₁ {O(n)}
    t₆: 1 {O(1)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₁, X₀: X₀ {O(n)}
    t₁, X₁: X₁ {O(n)}
    t₃, X₀: 3⋅X₀ {O(n)}
    t₃, X₁: 3⋅X₁ {O(n)}
    t₆, X₀: X₀ {O(n)}
    t₆, X₁: X₁ {O(n)}

