MAYBE

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [f2/6]
1. non_recursive  : [exit_location/1]
2. non_recursive  : [f300/4]
3. non_recursive  : [f2_loop_cont/5]
4. non_recursive  : [f1/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into f2/6
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into f2_loop_cont/5
4. SCC is partially evaluated into f1/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations f2/6 
* CE 5 is refined into CE [8] 
* CE 4 is refined into CE [9] 
* CE 3 is refined into CE [10] 
* CE 2 is refined into CE [11] 


### Cost equations --> "Loop" of f2/6 
* CEs [10] --> Loop 8 
* CEs [11] --> Loop 9 
* CEs [8] --> Loop 10 
* CEs [9] --> Loop 11 

### Ranking functions of CR f2(A,B,C,E,F,G) 
* RF of phase [9]: [-A+B]

#### Partial ranking functions of CR f2(A,B,C,E,F,G) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    -A+B


### Specialization of cost equations f2_loop_cont/5 
* CE 7 is refined into CE [12] 
* CE 6 is refined into CE [13] 


### Cost equations --> "Loop" of f2_loop_cont/5 
* CEs [12] --> Loop 12 
* CEs [13] --> Loop 13 

### Ranking functions of CR f2_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR f2_loop_cont(A,B,C,D,E) 


### Specialization of cost equations f1/4 
* CE 1 is refined into CE [14,15,16,17,18,19,20] 


### Cost equations --> "Loop" of f1/4 
* CEs [19,20] --> Loop 14 
* CEs [18] --> Loop 15 
* CEs [15,17] --> Loop 16 
* CEs [14] --> Loop 17 
* CEs [16] --> Loop 18 

### Ranking functions of CR f1(A,B,C,E) 

#### Partial ranking functions of CR f1(A,B,C,E) 


Computing Bounds
=====================================

#### Cost of chains of f2(A,B,C,E,F,G):
* Chain [[9],11]: 1*it(9)+0
  Such that:it(9) =< -A+F

  with precondition: [E=2,B=F,B>=A+1] 

* Chain [[9],10]: 1*it(9)+0
  Such that:it(9) =< -A+B

  with precondition: [E=3,B>=A+1] 

* Chain [[8]]...: 1*it(8)+0
  with precondition: [A>=B+1] 

* Chain [[8],10]: 1*it(8)+0
  with precondition: [E=3,A>=B+1] 

* Chain [11]: 0
  with precondition: [E=2,A=B,A=F] 

* Chain [10]: 0
  with precondition: [E=3] 


#### Cost of chains of f2_loop_cont(A,B,C,D,E):
* Chain [13]: 0
  with precondition: [A=2] 

* Chain [12]: 0
  with precondition: [A=3] 


#### Cost of chains of f1(A,B,C,E):
* Chain [18]: 0
  with precondition: [] 

* Chain [17]: 0
  with precondition: [B=A] 

* Chain [16]: 2*s(1)+0
  Such that:aux(1) =< -A+B
s(1) =< aux(1)

  with precondition: [B>=A+1] 

* Chain [15]: 1*s(3)+0
  with precondition: [A>=B+1] 

* Chain [14]...: 1*aux(2)+0
  with precondition: [A>=B+1] 


Closed-form bounds of f1(A,B,C,E): 
-------------------------------------
* Chain [18] with precondition: [] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [17] with precondition: [B=A] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [16] with precondition: [B>=A+1] 
    - Upper bound: -2*A+2*B 
    - Complexity: n 
* Chain [15] with precondition: [A>=B+1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [14]... with precondition: [A>=B+1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of f1(A,B,C,E): inf 
Asymptotic class: infinity 
* Total analysis performed in 41 ms.

