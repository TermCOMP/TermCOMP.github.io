WORST_CASE(?,O(1))

# LoAT Proof:
Initial ITS

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f18 -> 2
f24 -> 3
f31 -> 4
f39 -> 5

Rules:
   0: (-2+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=2, i3'=1+i3, i5'=1+i5
   1: (-3+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=3, i3'=1+i3, i5'=1+i5
   2: (-4+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=4, i3'=1+i3, i5'=1+i5
   3: (-i4+i5 >= 0 /\ -4+i1 == 0) /\ i1'=5, i3'=1+i3
   4: (-3+i1 == 0 /\ -i4+i5 >= 0) /\ i1'=4, i3'=1+i3, i5'=0
   5: (-i4+i5 >= 0 /\ -2+i1 == 0) /\ i1'=3, i3'=1+i3, i5'=0
   6: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=10, i5'=0, i6'=10, i7'=it4, i8'=10, i9'=it3

Dependency graph:
0 -> 0, 0 -> 5
1 -> 1, 1 -> 4
2 -> 2, 2 -> 3
4 -> 2, 4 -> 3
5 -> 1, 5 -> 4
6 -> 0, 6 -> 5

Refined Dependency Graph

	Removed the following edges: 6 -> 5

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f18 -> 2
f24 -> 3
f31 -> 4
f39 -> 5

Rules:
   0: (-2+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=2, i3'=1+i3, i5'=1+i5
   1: (-3+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=3, i3'=1+i3, i5'=1+i5
   2: (-4+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=4, i3'=1+i3, i5'=1+i5
   3: (-i4+i5 >= 0 /\ -4+i1 == 0) /\ i1'=5, i3'=1+i3
   4: (-3+i1 == 0 /\ -i4+i5 >= 0) /\ i1'=4, i3'=1+i3, i5'=0
   5: (-i4+i5 >= 0 /\ -2+i1 == 0) /\ i1'=3, i3'=1+i3, i5'=0
   6: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=10, i5'=0, i6'=10, i7'=it4, i8'=10, i9'=it3

Dependency graph:
0 -> 0, 0 -> 5
1 -> 1, 1 -> 4
2 -> 2, 2 -> 3
4 -> 2, 4 -> 3
5 -> 1, 5 -> 4
6 -> 0

Step with 6

	Trace

	6[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 0

	Trace

	6[(-1+i1 == 0)]
	0[(-2+i1 == 0 /\ -1+i4-i5 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Accelerate

	Loop Acceleration

	Original rule:
	(-2+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=2, i3'=1+i3, i5'=1+i5
	New rule:
	(-2+i1 >= 0 /\ -it23+i4-i5 >= 0 /\ 2-i1 >= 0 /\ -1+it23 >= 0) /\ i1'=i1, i3'=it23+i3, i5'=it23+i5

		-2+i1 >= 0 [0]: unchanged
		
		-1+i4-i5 >= 0 [0]: montonic decrease yields -it23+i4-i5 >= 0
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, -1+i4-i5 >= 0 -> -it23+i4-i5 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-2+i1 >= 0 /\ -it23+i4-i5 >= 0 /\ 2-i1 >= 0 /\ -1+it23 >= 0) /\ i1'=i1, i3'=it23+i3, i5'=it23+i5
	New rule:
	(-2+i1 >= 0 /\ -it23+i4-i5 >= 0 /\ 2-i1 >= 0 /\ -1+it23 >= 0) /\ i3'=it23+i3, i5'=it23+i5
	
	Instantiation

	Original rule:
	(-2+i1 >= 0 /\ -it23+i4-i5 >= 0 /\ 2-i1 >= 0 /\ -1+it23 >= 0) /\ i3'=it23+i3, i5'=it23+i5
	New rule:
	(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+i4-i5, i5'=i4

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f18 -> 2
f24 -> 3
f31 -> 4
f39 -> 5

Rules:
   0: (-2+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=2, i3'=1+i3, i5'=1+i5
   1: (-3+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=3, i3'=1+i3, i5'=1+i5
   2: (-4+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=4, i3'=1+i3, i5'=1+i5
   3: (-i4+i5 >= 0 /\ -4+i1 == 0) /\ i1'=5, i3'=1+i3
   4: (-3+i1 == 0 /\ -i4+i5 >= 0) /\ i1'=4, i3'=1+i3, i5'=0
   5: (-i4+i5 >= 0 /\ -2+i1 == 0) /\ i1'=3, i3'=1+i3, i5'=0
   6: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=10, i5'=0, i6'=10, i7'=it4, i8'=10, i9'=it3
   7: (0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+i4-i5, i5'=i4

Dependency graph:
0 -> 0, 0 -> 5, 0 -> 7
1 -> 1, 1 -> 4
2 -> 2, 2 -> 3
4 -> 2, 4 -> 3
5 -> 1, 5 -> 4
6 -> 0, 6 -> 7
7 -> 0, 7 -> 5

	Trace

	6[(-1+i1 == 0)]
	7[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{}
	{0[T], 7[T]}
	
Step with 5

	Trace

	6[(-1+i1 == 0)]
	7[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	5[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	
	Blocked

	{}
	{}
	{0[T], 7[T]}
	{}
	
Step with 1

	Trace

	6[(-1+i1 == 0)]
	7[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	5[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	1[(-3+i1 == 0 /\ -1+i4-i5 >= 0)]
	
	Blocked

	{}
	{}
	{0[T], 7[T]}
	{4[T]}
	{}
	
Accelerate

	Loop Acceleration

	Original rule:
	(-3+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=3, i3'=1+i3, i5'=1+i5
	New rule:
	(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+it48 >= 0 /\ i4-it48-i5 >= 0) /\ i1'=i1, i3'=i3+it48, i5'=it48+i5

		-3+i1 >= 0 [0]: unchanged
		
		3-i1 >= 0 [0]: unchanged
		
		-1+i4-i5 >= 0 [0]: montonic decrease yields i4-it48-i5 >= 0
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, 3-i1 >= 0 -> 3-i1 >= 0, -1+i4-i5 >= 0 -> i4-it48-i5 >= 0}

	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+it48 >= 0 /\ i4-it48-i5 >= 0) /\ i1'=i1, i3'=i3+it48, i5'=it48+i5
	New rule:
	(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+it48 >= 0 /\ i4-it48-i5 >= 0) /\ i3'=i3+it48, i5'=it48+i5
	
	Instantiation

	Original rule:
	(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+it48 >= 0 /\ i4-it48-i5 >= 0) /\ i3'=i3+it48, i5'=it48+i5
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i4-i5 >= 0) /\ i3'=i3+i4-i5, i5'=i4

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f18 -> 2
f24 -> 3
f31 -> 4
f39 -> 5

Rules:
   0: (-2+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=2, i3'=1+i3, i5'=1+i5
   1: (-3+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=3, i3'=1+i3, i5'=1+i5
   2: (-4+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=4, i3'=1+i3, i5'=1+i5
   3: (-i4+i5 >= 0 /\ -4+i1 == 0) /\ i1'=5, i3'=1+i3
   4: (-3+i1 == 0 /\ -i4+i5 >= 0) /\ i1'=4, i3'=1+i3, i5'=0
   5: (-i4+i5 >= 0 /\ -2+i1 == 0) /\ i1'=3, i3'=1+i3, i5'=0
   6: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=10, i5'=0, i6'=10, i7'=it4, i8'=10, i9'=it3
   7: (0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+i4-i5, i5'=i4
   8: (0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i4-i5 >= 0) /\ i3'=i3+i4-i5, i5'=i4

Dependency graph:
0 -> 0, 0 -> 5, 0 -> 7
1 -> 1, 1 -> 4, 1 -> 8
2 -> 2, 2 -> 3
4 -> 2, 4 -> 3
5 -> 1, 5 -> 4, 5 -> 8
6 -> 0, 6 -> 7
7 -> 0, 7 -> 5
8 -> 1, 8 -> 4

	Trace

	6[(-1+i1 == 0)]
	7[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	5[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i4-i5 >= 0)]
	
	Blocked

	{}
	{}
	{0[T], 7[T]}
	{4[T]}
	{1[T], 8[T]}
	
Step with 4

	Trace

	6[(-1+i1 == 0)]
	7[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	5[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i4-i5 >= 0)]
	4[(-3+i1 == 0 /\ -i4+i5 >= 0)]
	
	Blocked

	{}
	{}
	{0[T], 7[T]}
	{4[T]}
	{1[T], 8[T]}
	{}
	
Step with 2

	Trace

	6[(-1+i1 == 0)]
	7[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	5[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i4-i5 >= 0)]
	4[(-3+i1 == 0 /\ -i4+i5 >= 0)]
	2[(-4+i1 == 0 /\ -1+i4-i5 >= 0)]
	
	Blocked

	{}
	{}
	{0[T], 7[T]}
	{4[T]}
	{1[T], 8[T]}
	{3[T]}
	{}
	
Accelerate

	Loop Acceleration

	Original rule:
	(-4+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=4, i3'=1+i3, i5'=1+i5
	New rule:
	(-1+it73 >= 0 /\ -it73+i4-i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0) /\ i1'=i1, i3'=i3+it73, i5'=it73+i5

		-4+i1 >= 0 [0]: unchanged
		
		4-i1 >= 0 [0]: unchanged
		
		-1+i4-i5 >= 0 [0]: montonic decrease yields -it73+i4-i5 >= 0
		
		Replacement map: {-4+i1 >= 0 -> -4+i1 >= 0, 4-i1 >= 0 -> 4-i1 >= 0, -1+i4-i5 >= 0 -> -it73+i4-i5 >= 0}

	Removed Trivial Updates

	Original rule:
	(-1+it73 >= 0 /\ -it73+i4-i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0) /\ i1'=i1, i3'=i3+it73, i5'=it73+i5
	New rule:
	(-1+it73 >= 0 /\ -it73+i4-i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0) /\ i3'=i3+it73, i5'=it73+i5
	
	Instantiation

	Original rule:
	(-1+it73 >= 0 /\ -it73+i4-i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0) /\ i3'=i3+it73, i5'=it73+i5
	New rule:
	(0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+i4-i5 >= 0) /\ i3'=i3+i4-i5, i5'=i4

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f18 -> 2
f24 -> 3
f31 -> 4
f39 -> 5

Rules:
   0: (-2+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=2, i3'=1+i3, i5'=1+i5
   1: (-3+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=3, i3'=1+i3, i5'=1+i5
   2: (-4+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=4, i3'=1+i3, i5'=1+i5
   3: (-i4+i5 >= 0 /\ -4+i1 == 0) /\ i1'=5, i3'=1+i3
   4: (-3+i1 == 0 /\ -i4+i5 >= 0) /\ i1'=4, i3'=1+i3, i5'=0
   5: (-i4+i5 >= 0 /\ -2+i1 == 0) /\ i1'=3, i3'=1+i3, i5'=0
   6: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=10, i5'=0, i6'=10, i7'=it4, i8'=10, i9'=it3
   7: (0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+i4-i5, i5'=i4
   8: (0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i4-i5 >= 0) /\ i3'=i3+i4-i5, i5'=i4
   9: (0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+i4-i5 >= 0) /\ i3'=i3+i4-i5, i5'=i4

Dependency graph:
0 -> 0, 0 -> 5, 0 -> 7
1 -> 1, 1 -> 4, 1 -> 8
2 -> 2, 2 -> 3, 2 -> 9
4 -> 2, 4 -> 3, 4 -> 9
5 -> 1, 5 -> 4, 5 -> 8
6 -> 0, 6 -> 7
7 -> 0, 7 -> 5
8 -> 1, 8 -> 4
9 -> 2, 9 -> 3

	Trace

	6[(-1+i1 == 0)]
	7[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	5[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i4-i5 >= 0)]
	4[(-3+i1 == 0 /\ -i4+i5 >= 0)]
	9[(0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+i4-i5 >= 0)]
	
	Blocked

	{}
	{}
	{0[T], 7[T]}
	{4[T]}
	{1[T], 8[T]}
	{3[T]}
	{2[T], 9[T]}
	
Step with 3

	Trace

	6[(-1+i1 == 0)]
	7[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	5[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i4-i5 >= 0)]
	4[(-3+i1 == 0 /\ -i4+i5 >= 0)]
	9[(0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+i4-i5 >= 0)]
	3[(-i4+i5 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{}
	{0[T], 7[T]}
	{4[T]}
	{1[T], 8[T]}
	{3[T]}
	{2[T], 9[T]}
	{}
	
Backtrack

	Trace

	6[(-1+i1 == 0)]
	7[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	5[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i4-i5 >= 0)]
	4[(-3+i1 == 0 /\ -i4+i5 >= 0)]
	9[(0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+i4-i5 >= 0)]
	
	Blocked

	{}
	{}
	{0[T], 7[T]}
	{4[T]}
	{1[T], 8[T]}
	{3[T]}
	{2[T], 3[T], 9[T]}
	
Backtrack

	Trace

	6[(-1+i1 == 0)]
	7[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	5[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i4-i5 >= 0)]
	4[(-3+i1 == 0 /\ -i4+i5 >= 0)]
	
	Blocked

	{}
	{}
	{0[T], 7[T]}
	{4[T]}
	{1[T], 8[T]}
	{3[T], 9[T]}
	
Step with 2

	Trace

	6[(-1+i1 == 0)]
	7[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	5[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i4-i5 >= 0)]
	4[(-3+i1 == 0 /\ -i4+i5 >= 0)]
	2[(-4+i1 == 0 /\ -1+i4-i5 >= 0)]
	
	Blocked

	{}
	{}
	{0[T], 7[T]}
	{4[T]}
	{1[T], 8[T]}
	{3[T], 9[T]}
	{}
	
Covered

	Trace

	6[(-1+i1 == 0)]
	7[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	5[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i4-i5 >= 0)]
	4[(-3+i1 == 0 /\ -i4+i5 >= 0)]
	
	Blocked

	{}
	{}
	{0[T], 7[T]}
	{4[T]}
	{1[T], 8[T]}
	{2[T], 3[T], 9[T]}
	
Backtrack

	Trace

	6[(-1+i1 == 0)]
	7[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	5[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i4-i5 >= 0)]
	
	Blocked

	{}
	{}
	{0[T], 7[T]}
	{4[T]}
	{1[T], 4[T], 8[T]}
	
Backtrack

	Trace

	6[(-1+i1 == 0)]
	7[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	5[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	
	Blocked

	{}
	{}
	{0[T], 7[T]}
	{4[T], 8[T]}
	
Step with 1

	Trace

	6[(-1+i1 == 0)]
	7[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	5[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	1[(-3+i1 == 0 /\ -1+i4-i5 >= 0)]
	
	Blocked

	{}
	{}
	{0[T], 7[T]}
	{4[T], 8[T]}
	{}
	
Covered

	Trace

	6[(-1+i1 == 0)]
	7[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	5[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	
	Blocked

	{}
	{}
	{0[T], 7[T]}
	{1[T], 4[T], 8[T]}
	
Backtrack

	Trace

	6[(-1+i1 == 0)]
	7[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{}
	{0[T], 5[T], 7[T]}
	
Backtrack

	Trace

	6[(-1+i1 == 0)]
	
	Blocked

	{}
	{7[T]}
	
Step with 0

	Trace

	6[(-1+i1 == 0)]
	0[(-2+i1 == 0 /\ -1+i4-i5 >= 0)]
	
	Blocked

	{}
	{7[T]}
	{}
	
Covered

	Trace

	6[(-1+i1 == 0)]
	
	Blocked

	{}
	{0[T], 7[T]}
	
Backtrack

	Trace

	Blocked

	{6[T]}
	
Accept

Constant


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄, X₅
  Temp_Vars:  G, H
  Locations:  l0, l1, l2, l3, l4
  Return Locations:  
  Transitions:
  t₆: l0(X₀, X₁, X₂, X₃, X₄, X₅) → l1(10, 0, 10, G, 10, H)
  t₀: l1(X₀, X₁, X₂, X₃, X₄, X₅) → l1(X₀, 1+X₁, X₂, X₃, X₄, X₅) :|: 1+X₁ ≤ X₀
  t₅: l1(X₀, X₁, X₂, X₃, X₄, X₅) → l2(X₀, 0, X₂, X₃, X₄, X₅) :|: X₀ ≤ X₁
  t₁: l2(X₀, X₁, X₂, X₃, X₄, X₅) → l2(X₀, 1+X₁, X₂, X₃, X₄, X₅) :|: 1+X₁ ≤ X₀
  t₄: l2(X₀, X₁, X₂, X₃, X₄, X₅) → l3(X₀, 0, X₂, X₃, X₄, X₅) :|: X₀ ≤ X₁
  t₂: l3(X₀, X₁, X₂, X₃, X₄, X₅) → l3(X₀, 1+X₁, X₂, X₃, X₄, X₅) :|: 1+X₁ ≤ X₀
  t₃: l3(X₀, X₁, X₂, X₃, X₄, X₅) → l4(X₀, X₁, X₂, X₃, X₄, X₅) :|: X₀ ≤ X₁


Preprocessing
  Eliminate variables [G; H; X₂; X₃; X₄; X₅] that do not contribute to the problem


  Found invariant 0 ≤ X₁ ∧ 10 ≤ X₀+X₁ ∧ X₀ ≤ 10+X₁ ∧ X₀ ≤ 10 ∧ 10 ≤ X₀ for location l2


  Found invariant X₁ ≤ 10 ∧ X₁ ≤ X₀ ∧ X₀+X₁ ≤ 20 ∧ 0 ≤ X₁ ∧ 10 ≤ X₀+X₁ ∧ X₀ ≤ 10+X₁ ∧ X₀ ≤ 10 ∧ 10 ≤ X₀ for location l1


  Found invariant 10 ≤ X₁ ∧ 20 ≤ X₀+X₁ ∧ X₀ ≤ X₁ ∧ X₀ ≤ 10 ∧ 10 ≤ X₀ for location l4


  Found invariant 0 ≤ X₁ ∧ 10 ≤ X₀+X₁ ∧ X₀ ≤ 10+X₁ ∧ X₀ ≤ 10 ∧ 10 ≤ X₀ for location l3


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁
  Temp_Vars:  
  Locations:  l0, l1, l2, l3, l4
  Return Locations:  
  Transitions:
  t₇: l0(X₀, X₁) → l1(10, 0)
  t₈: l1(X₀, X₁) → l1(X₀, 1+X₁) :|: 1+X₁ ≤ X₀ ∧ X₀+X₁ ≤ 20 ∧ X₀ ≤ 10 ∧ X₀ ≤ 10+X₁ ∧ X₁ ≤ 10 ∧ 10 ≤ X₀ ∧ 10 ≤ X₀+X₁ ∧ X₁ ≤ X₀ ∧ 0 ≤ X₁
  t₉: l1(X₀, X₁) → l2(X₀, 0) :|: X₀ ≤ X₁ ∧ X₀+X₁ ≤ 20 ∧ X₀ ≤ 10 ∧ X₀ ≤ 10+X₁ ∧ X₁ ≤ 10 ∧ 10 ≤ X₀ ∧ 10 ≤ X₀+X₁ ∧ X₁ ≤ X₀ ∧ 0 ≤ X₁
  t₁₀: l2(X₀, X₁) → l2(X₀, 1+X₁) :|: 1+X₁ ≤ X₀ ∧ X₀ ≤ 10 ∧ X₀ ≤ 10+X₁ ∧ 10 ≤ X₀ ∧ 10 ≤ X₀+X₁ ∧ 0 ≤ X₁
  t₁₁: l2(X₀, X₁) → l3(X₀, 0) :|: X₀ ≤ X₁ ∧ X₀ ≤ 10 ∧ X₀ ≤ 10+X₁ ∧ 10 ≤ X₀ ∧ 10 ≤ X₀+X₁ ∧ 0 ≤ X₁
  t₁₂: l3(X₀, X₁) → l3(X₀, 1+X₁) :|: 1+X₁ ≤ X₀ ∧ X₀ ≤ 10 ∧ X₀ ≤ 10+X₁ ∧ 10 ≤ X₀ ∧ 10 ≤ X₀+X₁ ∧ 0 ≤ X₁
  t₁₃: l3(X₀, X₁) → l4(X₀, X₁) :|: X₀ ≤ X₁ ∧ X₀ ≤ 10 ∧ X₀ ≤ 10+X₁ ∧ 10 ≤ X₀ ∧ 10 ≤ X₀+X₁ ∧ 0 ≤ X₁


MPRF for transition t₈: l1(X₀, X₁) → l1(X₀, 1+X₁) :|: 1+X₁ ≤ X₀ ∧ X₀+X₁ ≤ 20 ∧ X₀ ≤ 10 ∧ X₀ ≤ 10+X₁ ∧ X₁ ≤ 10 ∧ 10 ≤ X₀ ∧ 10 ≤ X₀+X₁ ∧ X₁ ≤ X₀ ∧ 0 ≤ X₁ of depth 1:
  new bound:
    11 {O(1)}

  MPRF:
    • l1: [11-X₁]




MPRF for transition t₁₀: l2(X₀, X₁) → l2(X₀, 1+X₁) :|: 1+X₁ ≤ X₀ ∧ X₀ ≤ 10 ∧ X₀ ≤ 10+X₁ ∧ 10 ≤ X₀ ∧ 10 ≤ X₀+X₁ ∧ 0 ≤ X₁ of depth 1:
  new bound:
    10 {O(1)}

  MPRF:
    • l2: [X₀-X₁]




MPRF for transition t₁₂: l3(X₀, X₁) → l3(X₀, 1+X₁) :|: 1+X₁ ≤ X₀ ∧ X₀ ≤ 10 ∧ X₀ ≤ 10+X₁ ∧ 10 ≤ X₀ ∧ 10 ≤ X₀+X₁ ∧ 0 ≤ X₁ of depth 1:
  new bound:
    10 {O(1)}

  MPRF:
    • l3: [X₀-X₁]




All Bounds
Timebounds
  Overall timebound:35 {O(1)}
    t₇: 1 {O(1)}
    t₈: 11 {O(1)}
    t₉: 1 {O(1)}
    t₁₀: 10 {O(1)}
    t₁₁: 1 {O(1)}
    t₁₂: 10 {O(1)}
    t₁₃: 1 {O(1)}


Costbounds
  Overall costbound: 35 {O(1)}
    t₇: 1 {O(1)}
    t₈: 11 {O(1)}
    t₉: 1 {O(1)}
    t₁₀: 10 {O(1)}
    t₁₁: 1 {O(1)}
    t₁₂: 10 {O(1)}
    t₁₃: 1 {O(1)}


Sizebounds
    t₇, X₀: 10 {O(1)}
    t₇, X₁: 0 {O(1)}
    t₈, X₀: 10 {O(1)}
    t₈, X₁: 10 {O(1)}
    t₉, X₀: 10 {O(1)}
    t₉, X₁: 0 {O(1)}
    t₁₀, X₀: 10 {O(1)}
    t₁₀, X₁: 10 {O(1)}
    t₁₁, X₀: 10 {O(1)}
    t₁₁, X₁: 0 {O(1)}
    t₁₂, X₀: 10 {O(1)}
    t₁₂, X₁: 10 {O(1)}
    t₁₃, X₀: 10 {O(1)}
    t₁₃, X₁: 10 {O(1)}

