WORST_CASE(?,O(1))

# LoAT Proof:
Initial ITS

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f5 -> 2
f12 -> 3

Rules:
   0: (-1+i1 == 0 /\ -1+it2 >= 0) /\ i1'=2, i3'=1+i3, i4'=it2
   1: (19-i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
   2: (-it3 >= 0 /\ -1+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=it3
   3: (-2+i1 == 0 /\ -20+i4 >= 0) /\ i1'=3, i3'=1+i3

Dependency graph:
0 -> 1, 0 -> 3
1 -> 1, 1 -> 3

Step with 2

	Trace

	2[(-it3 >= 0 /\ -1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Backtrack

	Trace

	Blocked

	{2[T]}
	
Step with 0

	Trace

	0[(-1+i1 == 0 /\ -1+it2 >= 0)]
	
	Blocked

	{2[T]}
	{}
	
Step with 1

	Trace

	0[(-1+i1 == 0 /\ -1+it2 >= 0)]
	1[(19-i4 >= 0 /\ -2+i1 == 0)]
	
	Blocked

	{2[T]}
	{}
	{}
	
Accelerate

	Loop Acceleration

	Original rule:
	(19-i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
	New rule:
	(20-it15-i4 >= 0 /\ -2+i1 >= 0 /\ -1+it15 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it15, i4'=it15+i4

		19-i4 >= 0 [0]: montonic decrease yields 20-it15-i4 >= 0
		
		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {19-i4 >= 0 -> 20-it15-i4 >= 0, -2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(20-it15-i4 >= 0 /\ -2+i1 >= 0 /\ -1+it15 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it15, i4'=it15+i4
	New rule:
	(20-it15-i4 >= 0 /\ -2+i1 >= 0 /\ -1+it15 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+it15, i4'=it15+i4
	
	Instantiation

	Original rule:
	(20-it15-i4 >= 0 /\ -2+i1 >= 0 /\ -1+it15 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+it15, i4'=it15+i4
	New rule:
	(0 >= 0 /\ 19-i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0) /\ i3'=20+i3-i4, i4'=20

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f5 -> 2
f12 -> 3

Rules:
   0: (-1+i1 == 0 /\ -1+it2 >= 0) /\ i1'=2, i3'=1+i3, i4'=it2
   1: (19-i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
   2: (-it3 >= 0 /\ -1+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=it3
   3: (-2+i1 == 0 /\ -20+i4 >= 0) /\ i1'=3, i3'=1+i3
   4: (0 >= 0 /\ 19-i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0) /\ i3'=20+i3-i4, i4'=20

Dependency graph:
0 -> 1, 0 -> 3, 0 -> 4
1 -> 1, 1 -> 3, 1 -> 4
4 -> 1, 4 -> 3

	Trace

	0[(-1+i1 == 0 /\ -1+it2 >= 0)]
	4[(0 >= 0 /\ 19-i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{2[T]}
	{}
	{1[T], 4[T]}
	
Step with 3

	Trace

	0[(-1+i1 == 0 /\ -1+it2 >= 0)]
	4[(0 >= 0 /\ 19-i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	3[(-2+i1 == 0 /\ -20+i4 >= 0)]
	
	Blocked

	{2[T]}
	{}
	{1[T], 4[T]}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0 /\ -1+it2 >= 0)]
	4[(0 >= 0 /\ 19-i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{2[T]}
	{}
	{1[T], 3[T], 4[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0 /\ -1+it2 >= 0)]
	
	Blocked

	{2[T]}
	{4[T]}
	
Step with 3

	Trace

	0[(-1+i1 == 0 /\ -1+it2 >= 0)]
	3[(-2+i1 == 0 /\ -20+i4 >= 0)]
	
	Blocked

	{2[T]}
	{4[T]}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0 /\ -1+it2 >= 0)]
	
	Blocked

	{2[T]}
	{3[T], 4[T]}
	
Step with 1

	Trace

	0[(-1+i1 == 0 /\ -1+it2 >= 0)]
	1[(19-i4 >= 0 /\ -2+i1 == 0)]
	
	Blocked

	{2[T]}
	{3[T], 4[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0 /\ -1+it2 >= 0)]
	
	Blocked

	{2[T]}
	{1[T], 3[T], 4[T]}
	
Backtrack

	Trace

	Blocked

	{0[T], 2[T]}
	
Accept

Constant


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀
  Temp_Vars:  B
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₂: l0(X₀) → l1(B) :|: B ≤ 0
  t₀: l0(X₀) → l2(B) :|: 1 ≤ B
  t₃: l2(X₀) → l1(X₀) :|: 20 ≤ X₀
  t₁: l2(X₀) → l2(1+X₀) :|: X₀ ≤ 19


Preprocessing
  Found invariant 1 ≤ X₀ for location l2


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀
  Temp_Vars:  B
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₂: l0(X₀) → l1(B) :|: B ≤ 0
  t₀: l0(X₀) → l2(B) :|: 1 ≤ B
  t₃: l2(X₀) → l1(X₀) :|: 20 ≤ X₀ ∧ 1 ≤ X₀
  t₁: l2(X₀) → l2(1+X₀) :|: X₀ ≤ 19 ∧ 1 ≤ X₀


  Found invariant X₀ ≤ 20 ∧ 2 ≤ X₀ for location l2_v1


  Found invariant 1 ≤ X₀ for location l2


Analysing control-flow refined program
MPRF for transition t₁₇: l2_v1(X₀) → l2_v1(1+X₀) :|: X₀ ≤ 19 ∧ X₀ ≤ 20 ∧ 1 ≤ X₀ ∧ 2 ≤ X₀ of depth 1:
  new bound:
    41 {O(1)}

  MPRF:
    • l2_v1: [21-X₀]




CFR: Improvement to new bound with the following program: 
  method: PartialEvaluation new bound: 
    O(1)

  cfr-program: 
    Start:  l0
    Program_Vars:  X₀
    Temp_Vars:  B
    Locations:  l0, l1, l2, l2_v1
    Return Locations:  
    Transitions:
    t₂: l0(X₀) → l1(B) :|: B ≤ 0
    t₀: l0(X₀) → l2(B) :|: 1 ≤ B
    t₃: l2(X₀) → l1(X₀) :|: 20 ≤ X₀ ∧ 1 ≤ X₀
    t₁₆: l2(X₀) → l1(X₀) :|: 20 ≤ X₀ ∧ 1 ≤ X₀
    t₁₅: l2(X₀) → l2_v1(1+X₀) :|: X₀ ≤ 19 ∧ 1 ≤ X₀
    t₁₈: l2_v1(X₀) → l1(X₀) :|: 20 ≤ X₀ ∧ X₀ ≤ 20 ∧ 1 ≤ X₀ ∧ 2 ≤ X₀
    t₁₇: l2_v1(X₀) → l2_v1(1+X₀) :|: X₀ ≤ 19 ∧ X₀ ≤ 20 ∧ 1 ≤ X₀ ∧ 2 ≤ X₀




All Bounds
Timebounds
  Overall timebound:47 {O(1)}
    t₀: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₁₅: 1 {O(1)}
    t₁₆: 1 {O(1)}
    t₁₇: 41 {O(1)}
    t₁₈: 1 {O(1)}


Costbounds
  Overall costbound: 47 {O(1)}
    t₀: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₁₅: 1 {O(1)}
    t₁₆: 1 {O(1)}
    t₁₇: 41 {O(1)}
    t₁₈: 1 {O(1)}


Sizebounds
    t₁₅, X₀: 20 {O(1)}
    t₁₇, X₀: 20 {O(1)}
    t₁₈, X₀: 20 {O(1)}

