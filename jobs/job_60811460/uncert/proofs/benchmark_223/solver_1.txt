WORST_CASE(?,O(1))

# LoAT Proof:
Initial ITS

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f3 -> 2
f11 -> 3

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=0
   1: (-2+i1 == 0 /\ 9-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
   2: (-1-it2 >= 0 /\ -2+i1 == 0 /\ -10+i4 >= 0) /\ i1'=3, i3'=1+i3
   3: (-2+i1 == 0 /\ -10+i4 >= 0) /\ i1'=3, i3'=1+i3

Dependency graph:
0 -> 1, 0 -> 2, 0 -> 3
1 -> 1, 1 -> 2, 1 -> 3

Preprocessed Transitions

	Eliminated Temporary Variables

	Original rule:
	(-1-it2 >= 0 /\ -2+i1 == 0 /\ -10+i4 >= 0) /\ i1'=3, i3'=1+i3
	New rule:
	(-2+i1 == 0 /\ -10+i4 >= 0) /\ i1'=3, i3'=1+i3

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f3 -> 2
f11 -> 3

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=0
   1: (-2+i1 == 0 /\ 9-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
   3: (-2+i1 == 0 /\ -10+i4 >= 0) /\ i1'=3, i3'=1+i3
   4: (-2+i1 == 0 /\ -10+i4 >= 0) /\ i1'=3, i3'=1+i3

Dependency graph:
0 -> 1, 0 -> 3, 0 -> 4
1 -> 1, 1 -> 3, 1 -> 4

Refined Dependency Graph

	Removed the following edges: 0 -> 3, 0 -> 4

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f3 -> 2
f11 -> 3

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=0
   1: (-2+i1 == 0 /\ 9-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
   3: (-2+i1 == 0 /\ -10+i4 >= 0) /\ i1'=3, i3'=1+i3
   4: (-2+i1 == 0 /\ -10+i4 >= 0) /\ i1'=3, i3'=1+i3

Dependency graph:
0 -> 1
1 -> 1, 1 -> 3, 1 -> 4

Step with 0

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	1[(-2+i1 == 0 /\ 9-i4 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Accelerate

	Loop Acceleration

	Original rule:
	(-2+i1 == 0 /\ 9-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
	New rule:
	(-2+i1 >= 0 /\ -1+it9 >= 0 /\ 2-i1 >= 0 /\ 10-it9-i4 >= 0) /\ i1'=i1, i3'=i3+it9, i4'=it9+i4

		-2+i1 >= 0 [0]: unchanged
		
		9-i4 >= 0 [0]: montonic decrease yields 10-it9-i4 >= 0
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, 9-i4 >= 0 -> 10-it9-i4 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-2+i1 >= 0 /\ -1+it9 >= 0 /\ 2-i1 >= 0 /\ 10-it9-i4 >= 0) /\ i1'=i1, i3'=i3+it9, i4'=it9+i4
	New rule:
	(-2+i1 >= 0 /\ -1+it9 >= 0 /\ 2-i1 >= 0 /\ 10-it9-i4 >= 0) /\ i3'=i3+it9, i4'=it9+i4
	
	Instantiation

	Original rule:
	(-2+i1 >= 0 /\ -1+it9 >= 0 /\ 2-i1 >= 0 /\ 10-it9-i4 >= 0) /\ i3'=i3+it9, i4'=it9+i4
	New rule:
	(0 >= 0 /\ -2+i1 >= 0 /\ 9-i4 >= 0 /\ 2-i1 >= 0) /\ i3'=10+i3-i4, i4'=10

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f3 -> 2
f11 -> 3

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=0
   1: (-2+i1 == 0 /\ 9-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
   3: (-2+i1 == 0 /\ -10+i4 >= 0) /\ i1'=3, i3'=1+i3
   4: (-2+i1 == 0 /\ -10+i4 >= 0) /\ i1'=3, i3'=1+i3
   5: (0 >= 0 /\ -2+i1 >= 0 /\ 9-i4 >= 0 /\ 2-i1 >= 0) /\ i3'=10+i3-i4, i4'=10

Dependency graph:
0 -> 1, 0 -> 5
1 -> 1, 1 -> 3, 1 -> 4, 1 -> 5
5 -> 1, 5 -> 3, 5 -> 4

	Trace

	0[(-1+i1 == 0)]
	5[(0 >= 0 /\ -2+i1 >= 0 /\ 9-i4 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{}
	{1[T], 5[T]}
	
Step with 4

	Trace

	0[(-1+i1 == 0)]
	5[(0 >= 0 /\ -2+i1 >= 0 /\ 9-i4 >= 0 /\ 2-i1 >= 0)]
	4[(-2+i1 == 0 /\ -10+i4 >= 0)]
	
	Blocked

	{}
	{}
	{1[T], 5[T]}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	5[(0 >= 0 /\ -2+i1 >= 0 /\ 9-i4 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{}
	{1[T], 4[T], 5[T]}
	
Step with 3

	Trace

	0[(-1+i1 == 0)]
	5[(0 >= 0 /\ -2+i1 >= 0 /\ 9-i4 >= 0 /\ 2-i1 >= 0)]
	3[(-2+i1 == 0 /\ -10+i4 >= 0)]
	
	Blocked

	{}
	{}
	{1[T], 4[T], 5[T]}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	5[(0 >= 0 /\ -2+i1 >= 0 /\ 9-i4 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{}
	{1[T], 3[T], 4[T], 5[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{5[T]}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	1[(-2+i1 == 0 /\ 9-i4 >= 0)]
	
	Blocked

	{}
	{5[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{1[T], 5[T]}
	
Backtrack

	Trace

	Blocked

	{0[T]}
	
Accept

Constant


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀
  Temp_Vars:  B
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₀: l0(X₀) → l1(0)
  t₁: l1(X₀) → l1(1+X₀) :|: X₀ ≤ 9
  t₂: l1(X₀) → l2(X₀) :|: 1+B ≤ 0 ∧ 10 ≤ X₀
  t₃: l1(X₀) → l2(X₀) :|: 10 ≤ X₀


Preprocessing
  Found invariant X₀ ≤ 10 ∧ 0 ≤ X₀ for location l1


  Found invariant X₀ ≤ 10 ∧ 10 ≤ X₀ for location l2


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀
  Temp_Vars:  B
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₀: l0(X₀) → l1(0)
  t₁: l1(X₀) → l1(1+X₀) :|: X₀ ≤ 9 ∧ X₀ ≤ 10 ∧ 0 ≤ X₀
  t₂: l1(X₀) → l2(X₀) :|: 1+B ≤ 0 ∧ 10 ≤ X₀ ∧ X₀ ≤ 10 ∧ 0 ≤ X₀
  t₃: l1(X₀) → l2(X₀) :|: 10 ≤ X₀ ∧ X₀ ≤ 10 ∧ 0 ≤ X₀


MPRF for transition t₁: l1(X₀) → l1(1+X₀) :|: X₀ ≤ 9 ∧ X₀ ≤ 10 ∧ 0 ≤ X₀ of depth 1:
  new bound:
    11 {O(1)}

  MPRF:
    • l1: [11-X₀]




All Bounds
Timebounds
  Overall timebound:14 {O(1)}
    t₀: 1 {O(1)}
    t₁: 11 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}


Costbounds
  Overall costbound: 14 {O(1)}
    t₀: 1 {O(1)}
    t₁: 11 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}


Sizebounds
    t₀, X₀: 0 {O(1)}
    t₁, X₀: 10 {O(1)}
    t₂, X₀: 10 {O(1)}
    t₃, X₀: 10 {O(1)}

