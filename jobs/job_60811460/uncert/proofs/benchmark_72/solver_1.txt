WORST_CASE(Omega(n^1),O(n^2))

# LoAT Proof:
WORST_CASE(Omega(n^1),?)

WORST_CASE(Omega(n^1),?)
Initial ITS

Start location: evalrsdstart

Location map:
LoAT_sink -> 0
evalrsdstart -> 1
evalrsdentryin -> 2
evalrsdbbin -> 3
evalrsdreturnin -> 4
evalrsdbb4in -> 5
evalrsdbb1in -> 6
evalrsdbb2in -> 7
evalrsdbb3in -> 8
evalrsdstop -> 9

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-2+i1 == 0 /\ i4 >= 0) /\ i1'=3, i3'=1+i3
   2: (-2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=4, i3'=1+i3
   3: -3+i1 == 0 /\ i1'=5, i3'=1+i3, i5'=2*i4, i6'=2*i4
   4: (i6-i4 >= 0 /\ -5+i1 == 0) /\ i1'=6, i3'=1+i3
   5: (-5+i1 == 0 /\ -1-i6+i4 >= 0) /\ i1'=4, i3'=1+i3
   6: (-6+i1 == 0 /\ -1-it2 >= 0) /\ i1'=7, i3'=1+i3
   7: (-1+it3 >= 0 /\ -6+i1 == 0) /\ i1'=7, i3'=1+i3
   8: -6+i1 == 0 /\ i1'=8, i3'=1+i3
   9: -7+i1 == 0 /\ i1'=5, i3'=1+i3, i6'=-1+i6
  10: -8+i1 == 0 /\ i1'=5, i3'=1+i3, i5'=-1+i5, i6'=-1+i5
  11: -4+i1 == 0 /\ i1'=9, i3'=1+i3

Dependency graph:
0 -> 1, 0 -> 2
1 -> 3
2 -> 11
3 -> 4, 3 -> 5
4 -> 6, 4 -> 7, 4 -> 8
5 -> 11
6 -> 9
7 -> 9
8 -> 10
9 -> 4, 9 -> 5
10 -> 4, 10 -> 5

Chained Linear Paths

	Applied Chaining

	First rule:
	(-2+i1 == 0 /\ i4 >= 0) /\ i1'=3, i3'=1+i3
	Second rule:
	-3+i1 == 0 /\ i1'=5, i3'=1+i3, i5'=2*i4, i6'=2*i4
	New rule:
	(0 == 0 /\ -2+i1 == 0 /\ i4 >= 0) /\ i1'=5, i3'=2+i3, i5'=2*i4, i6'=2*i4
	
	Applied Deletion

	Removed the following rules: 1, 3
	
	Applied Chaining

	First rule:
	(-2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=4, i3'=1+i3
	Second rule:
	-4+i1 == 0 /\ i1'=9, i3'=1+i3
	New rule:
	(0 == 0 /\ -2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=9, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 2
	
	Applied Chaining

	First rule:
	(-5+i1 == 0 /\ -1-i6+i4 >= 0) /\ i1'=4, i3'=1+i3
	Second rule:
	-4+i1 == 0 /\ i1'=9, i3'=1+i3
	New rule:
	(0 == 0 /\ -5+i1 == 0 /\ -1-i6+i4 >= 0) /\ i1'=9, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 5, 11
	
	Applied Chaining

	First rule:
	(-6+i1 == 0 /\ -1-it2 >= 0) /\ i1'=7, i3'=1+i3
	Second rule:
	-7+i1 == 0 /\ i1'=5, i3'=1+i3, i6'=-1+i6
	New rule:
	(0 == 0 /\ -6+i1 == 0 /\ -1-it2 >= 0) /\ i1'=5, i3'=2+i3, i6'=-1+i6
	
	Applied Deletion

	Removed the following rules: 6
	
	Applied Chaining

	First rule:
	(-1+it3 >= 0 /\ -6+i1 == 0) /\ i1'=7, i3'=1+i3
	Second rule:
	-7+i1 == 0 /\ i1'=5, i3'=1+i3, i6'=-1+i6
	New rule:
	(0 == 0 /\ -1+it3 >= 0 /\ -6+i1 == 0) /\ i1'=5, i3'=2+i3, i6'=-1+i6
	
	Applied Deletion

	Removed the following rules: 7, 9
	
	Applied Chaining

	First rule:
	-6+i1 == 0 /\ i1'=8, i3'=1+i3
	Second rule:
	-8+i1 == 0 /\ i1'=5, i3'=1+i3, i5'=-1+i5, i6'=-1+i5
	New rule:
	(0 == 0 /\ -6+i1 == 0) /\ i1'=5, i3'=2+i3, i5'=-1+i5, i6'=-1+i5
	
	Applied Deletion

	Removed the following rules: 8, 10

Start location: evalrsdstart

Location map:
LoAT_sink -> 0
evalrsdstart -> 1
evalrsdentryin -> 2
evalrsdbbin -> 3
evalrsdreturnin -> 4
evalrsdbb4in -> 5
evalrsdbb1in -> 6
evalrsdbb2in -> 7
evalrsdbb3in -> 8
evalrsdstop -> 9

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   4: (i6-i4 >= 0 /\ -5+i1 == 0) /\ i1'=6, i3'=1+i3
  12: (0 == 0 /\ -2+i1 == 0 /\ i4 >= 0) /\ i1'=5, i3'=2+i3, i5'=2*i4, i6'=2*i4
  13: (0 == 0 /\ -2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=9, i3'=2+i3
  14: (0 == 0 /\ -5+i1 == 0 /\ -1-i6+i4 >= 0) /\ i1'=9, i3'=2+i3
  15: (0 == 0 /\ -6+i1 == 0 /\ -1-it2 >= 0) /\ i1'=5, i3'=2+i3, i6'=-1+i6
  16: (0 == 0 /\ -1+it3 >= 0 /\ -6+i1 == 0) /\ i1'=5, i3'=2+i3, i6'=-1+i6
  17: (0 == 0 /\ -6+i1 == 0) /\ i1'=5, i3'=2+i3, i5'=-1+i5, i6'=-1+i5

Dependency graph:
0 -> 12, 0 -> 13
4 -> 15, 4 -> 16, 4 -> 17
12 -> 4, 12 -> 14
15 -> 4, 15 -> 14
16 -> 4, 16 -> 14
17 -> 4, 17 -> 14

Preprocessed Transitions

	Simplified Guard

	Original rule:
	(0 == 0 /\ -2+i1 == 0 /\ i4 >= 0) /\ i1'=5, i3'=2+i3, i5'=2*i4, i6'=2*i4
	New rule:
	(-2+i1 == 0 /\ i4 >= 0) /\ i1'=5, i3'=2+i3, i5'=2*i4, i6'=2*i4
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=9, i3'=2+i3
	New rule:
	(-2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=9, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -5+i1 == 0 /\ -1-i6+i4 >= 0) /\ i1'=9, i3'=2+i3
	New rule:
	(-5+i1 == 0 /\ -1-i6+i4 >= 0) /\ i1'=9, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -6+i1 == 0 /\ -1-it2 >= 0) /\ i1'=5, i3'=2+i3, i6'=-1+i6
	New rule:
	(-6+i1 == 0 /\ -1-it2 >= 0) /\ i1'=5, i3'=2+i3, i6'=-1+i6
	
	Eliminated Temporary Variables

	Original rule:
	(-6+i1 == 0 /\ -1-it2 >= 0) /\ i1'=5, i3'=2+i3, i6'=-1+i6
	New rule:
	(-6+i1 == 0) /\ i1'=5, i3'=2+i3, i6'=-1+i6
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+it3 >= 0 /\ -6+i1 == 0) /\ i1'=5, i3'=2+i3, i6'=-1+i6
	New rule:
	(-1+it3 >= 0 /\ -6+i1 == 0) /\ i1'=5, i3'=2+i3, i6'=-1+i6
	
	Eliminated Temporary Variables

	Original rule:
	(-1+it3 >= 0 /\ -6+i1 == 0) /\ i1'=5, i3'=2+i3, i6'=-1+i6
	New rule:
	(-6+i1 == 0) /\ i1'=5, i3'=2+i3, i6'=-1+i6
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -6+i1 == 0) /\ i1'=5, i3'=2+i3, i5'=-1+i5, i6'=-1+i5
	New rule:
	-6+i1 == 0 /\ i1'=5, i3'=2+i3, i5'=-1+i5, i6'=-1+i5

Start location: evalrsdstart

Location map:
LoAT_sink -> 0
evalrsdstart -> 1
evalrsdentryin -> 2
evalrsdbbin -> 3
evalrsdreturnin -> 4
evalrsdbb4in -> 5
evalrsdbb1in -> 6
evalrsdbb2in -> 7
evalrsdbb3in -> 8
evalrsdstop -> 9

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   4: (i6-i4 >= 0 /\ -5+i1 == 0) /\ i1'=6, i3'=1+i3
  18: (-2+i1 == 0 /\ i4 >= 0) /\ i1'=5, i3'=2+i3, i5'=2*i4, i6'=2*i4
  19: (-2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=9, i3'=2+i3
  20: (-5+i1 == 0 /\ -1-i6+i4 >= 0) /\ i1'=9, i3'=2+i3
  21: (-6+i1 == 0) /\ i1'=5, i3'=2+i3, i6'=-1+i6
  22: (-6+i1 == 0) /\ i1'=5, i3'=2+i3, i6'=-1+i6
  23: -6+i1 == 0 /\ i1'=5, i3'=2+i3, i5'=-1+i5, i6'=-1+i5

Dependency graph:
0 -> 18, 0 -> 19
4 -> 21, 4 -> 22, 4 -> 23
18 -> 4, 18 -> 20
21 -> 4, 21 -> 20
22 -> 4, 22 -> 20
23 -> 4, 23 -> 20

Refined Dependency Graph

	Removed the following edges: 18 -> 20

Start location: evalrsdstart

Location map:
LoAT_sink -> 0
evalrsdstart -> 1
evalrsdentryin -> 2
evalrsdbbin -> 3
evalrsdreturnin -> 4
evalrsdbb4in -> 5
evalrsdbb1in -> 6
evalrsdbb2in -> 7
evalrsdbb3in -> 8
evalrsdstop -> 9

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   4: (i6-i4 >= 0 /\ -5+i1 == 0) /\ i1'=6, i3'=1+i3
  18: (-2+i1 == 0 /\ i4 >= 0) /\ i1'=5, i3'=2+i3, i5'=2*i4, i6'=2*i4
  19: (-2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=9, i3'=2+i3
  20: (-5+i1 == 0 /\ -1-i6+i4 >= 0) /\ i1'=9, i3'=2+i3
  21: (-6+i1 == 0) /\ i1'=5, i3'=2+i3, i6'=-1+i6
  22: (-6+i1 == 0) /\ i1'=5, i3'=2+i3, i6'=-1+i6
  23: -6+i1 == 0 /\ i1'=5, i3'=2+i3, i5'=-1+i5, i6'=-1+i5

Dependency graph:
0 -> 18, 0 -> 19
4 -> 21, 4 -> 22, 4 -> 23
18 -> 4
21 -> 4, 21 -> 20
22 -> 4, 22 -> 20
23 -> 4, 23 -> 20

Step with 0

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 19

	Trace

	0[(-1+i1 == 0)]
	19[(-2+i1 == 0 /\ -1-i4 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{19[T]}
	
Step with 18

	Trace

	0[(-1+i1 == 0)]
	18[(-2+i1 == 0 /\ i4 >= 0)]
	
	Blocked

	{}
	{19[T]}
	{}
	
Step with 4

	Trace

	0[(-1+i1 == 0)]
	18[(-2+i1 == 0 /\ i4 >= 0)]
	4[(i6-i4 >= 0 /\ -5+i1 == 0)]
	
	Blocked

	{}
	{19[T]}
	{}
	{}
	
Step with 21

	Trace

	0[(-1+i1 == 0)]
	18[(-2+i1 == 0 /\ i4 >= 0)]
	4[(i6-i4 >= 0 /\ -5+i1 == 0)]
	21[(-6+i1 == 0)]
	
	Blocked

	{}
	{19[T]}
	{}
	{}
	{}
	
Poly(n^1)

Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ i6-i4 >= 0 /\ -5+i1 == 0) /\ i1'=5, i3'=3+i3, i6'=-1+i6
		New rule:
		(i6-i4 >= 0 /\ -5+i1 == 0) /\ i1'=5, i3'=3+i3, i6'=-1+i6

	Loop Acceleration

	Original rule:
	(i6-i4 >= 0 /\ -5+i1 == 0) /\ i1'=5, i3'=3+i3, i6'=-1+i6
	New rule:
	(-5+i1 >= 0 /\ 5-i1 >= 0 /\ 1-it29+i6-i4 >= 0 /\ -1+it29 >= 0) /\ i1'=i1, i3'=3*it29+i3, i6'=-it29+i6

		i6-i4 >= 0 [0]: montonic decrease yields 1-it29+i6-i4 >= 0
		
		-5+i1 >= 0 [0]: unchanged
		
		5-i1 >= 0 [0]: unchanged
		
		Replacement map: {i6-i4 >= 0 -> 1-it29+i6-i4 >= 0, -5+i1 >= 0 -> -5+i1 >= 0, 5-i1 >= 0 -> 5-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-5+i1 >= 0 /\ 5-i1 >= 0 /\ 1-it29+i6-i4 >= 0 /\ -1+it29 >= 0) /\ i1'=i1, i3'=3*it29+i3, i6'=-it29+i6
	New rule:
	(-5+i1 >= 0 /\ 5-i1 >= 0 /\ 1-it29+i6-i4 >= 0 /\ -1+it29 >= 0) /\ i3'=3*it29+i3, i6'=-it29+i6
	
	Instantiation

	Original rule:
	(-5+i1 >= 0 /\ 5-i1 >= 0 /\ 1-it29+i6-i4 >= 0 /\ -1+it29 >= 0) /\ i3'=3*it29+i3, i6'=-it29+i6
	New rule:
	(0 >= 0 /\ i6-i4 >= 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0) /\ i3'=3+3*i6+i3-3*i4, i6'=-1+i4

Start location: evalrsdstart

Location map:
LoAT_sink -> 0
evalrsdstart -> 1
evalrsdentryin -> 2
evalrsdbbin -> 3
evalrsdreturnin -> 4
evalrsdbb4in -> 5
evalrsdbb1in -> 6
evalrsdbb2in -> 7
evalrsdbb3in -> 8
evalrsdstop -> 9

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   4: (i6-i4 >= 0 /\ -5+i1 == 0) /\ i1'=6, i3'=1+i3
  18: (-2+i1 == 0 /\ i4 >= 0) /\ i1'=5, i3'=2+i3, i5'=2*i4, i6'=2*i4
  19: (-2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=9, i3'=2+i3
  20: (-5+i1 == 0 /\ -1-i6+i4 >= 0) /\ i1'=9, i3'=2+i3
  21: (-6+i1 == 0) /\ i1'=5, i3'=2+i3, i6'=-1+i6
  22: (-6+i1 == 0) /\ i1'=5, i3'=2+i3, i6'=-1+i6
  23: -6+i1 == 0 /\ i1'=5, i3'=2+i3, i5'=-1+i5, i6'=-1+i5
  24: (0 >= 0 /\ i6-i4 >= 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0) /\ i3'=3+3*i6+i3-3*i4, i6'=-1+i4

Dependency graph:
0 -> 18, 0 -> 19
4 -> 21, 4 -> 22, 4 -> 23
18 -> 4, 18 -> 24
21 -> 4, 21 -> 20, 21 -> 24
22 -> 4, 22 -> 20, 22 -> 24
23 -> 4, 23 -> 20, 23 -> 24
24 -> 4, 24 -> 20

	Trace

	0[(-1+i1 == 0)]
	18[(-2+i1 == 0 /\ i4 >= 0)]
	24[(0 >= 0 /\ i6-i4 >= 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0)]
	
	Blocked

	{}
	{19[T]}
	{}
	{24[T]}
	
Step with 20

	Trace

	0[(-1+i1 == 0)]
	18[(-2+i1 == 0 /\ i4 >= 0)]
	24[(0 >= 0 /\ i6-i4 >= 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0)]
	20[(-5+i1 == 0 /\ -1-i6+i4 >= 0)]
	
	Blocked

	{}
	{19[T]}
	{}
	{24[T]}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	18[(-2+i1 == 0 /\ i4 >= 0)]
	24[(0 >= 0 /\ i6-i4 >= 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0)]
	
	Blocked

	{}
	{19[T]}
	{}
	{20[T], 24[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	18[(-2+i1 == 0 /\ i4 >= 0)]
	
	Blocked

	{}
	{19[T]}
	{24[T]}
	
Step with 4

	Trace

	0[(-1+i1 == 0)]
	18[(-2+i1 == 0 /\ i4 >= 0)]
	4[(i6-i4 >= 0 /\ -5+i1 == 0)]
	
	Blocked

	{}
	{19[T]}
	{24[T]}
	{}
	
Step with 23

	Trace

	0[(-1+i1 == 0)]
	18[(-2+i1 == 0 /\ i4 >= 0)]
	4[(i6-i4 >= 0 /\ -5+i1 == 0)]
	23[(-6+i1 == 0)]
	
	Blocked

	{}
	{19[T]}
	{24[T]}
	{}
	{}
	
Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ i6-i4 >= 0 /\ -5+i1 == 0) /\ i1'=5, i3'=3+i3, i5'=-1+i5, i6'=-1+i5
		New rule:
		(i6-i4 >= 0 /\ -5+i1 == 0) /\ i1'=5, i3'=3+i3, i5'=-1+i5, i6'=-1+i5

	Loop Acceleration

	Original rule:
	(i6-i4 >= 0 /\ -5+i1 == 0) /\ i1'=5, i3'=3+i3, i5'=-1+i5, i6'=-1+i5
	New rule:
	(-1+it56 >= 0 /\ i6-i4 >= 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0 /\ 1-i4-it56+i5 >= 0) /\ i1'=i1, i3'=i3+3*it56, i5'=-it56+i5, i6'=-it56+i5

		i6-i4 >= 0 [0]: eventual decrease yields (i6-i4 >= 0 /\ 1-i4-it56+i5 >= 0)
		
		-5+i1 >= 0 [0]: unchanged
		
		5-i1 >= 0 [0]: unchanged
		
		Replacement map: {i6-i4 >= 0 -> (i6-i4 >= 0 /\ 1-i4-it56+i5 >= 0), -5+i1 >= 0 -> -5+i1 >= 0, 5-i1 >= 0 -> 5-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-1+it56 >= 0 /\ i6-i4 >= 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0 /\ 1-i4-it56+i5 >= 0) /\ i1'=i1, i3'=i3+3*it56, i5'=-it56+i5, i6'=-it56+i5
	New rule:
	(-1+it56 >= 0 /\ i6-i4 >= 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0 /\ 1-i4-it56+i5 >= 0) /\ i3'=i3+3*it56, i5'=-it56+i5, i6'=-it56+i5
	
	Instantiation

	Original rule:
	(-1+it56 >= 0 /\ i6-i4 >= 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0 /\ 1-i4-it56+i5 >= 0) /\ i3'=i3+3*it56, i5'=-it56+i5, i6'=-it56+i5
	New rule:
	(0 >= 0 /\ -i4+i5 >= 0 /\ i6-i4 >= 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0) /\ i3'=3+i3-3*i4+3*i5, i5'=-1+i4, i6'=-1+i4

Start location: evalrsdstart

Location map:
LoAT_sink -> 0
evalrsdstart -> 1
evalrsdentryin -> 2
evalrsdbbin -> 3
evalrsdreturnin -> 4
evalrsdbb4in -> 5
evalrsdbb1in -> 6
evalrsdbb2in -> 7
evalrsdbb3in -> 8
evalrsdstop -> 9

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   4: (i6-i4 >= 0 /\ -5+i1 == 0) /\ i1'=6, i3'=1+i3
  18: (-2+i1 == 0 /\ i4 >= 0) /\ i1'=5, i3'=2+i3, i5'=2*i4, i6'=2*i4
  19: (-2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=9, i3'=2+i3
  20: (-5+i1 == 0 /\ -1-i6+i4 >= 0) /\ i1'=9, i3'=2+i3
  21: (-6+i1 == 0) /\ i1'=5, i3'=2+i3, i6'=-1+i6
  22: (-6+i1 == 0) /\ i1'=5, i3'=2+i3, i6'=-1+i6
  23: -6+i1 == 0 /\ i1'=5, i3'=2+i3, i5'=-1+i5, i6'=-1+i5
  24: (0 >= 0 /\ i6-i4 >= 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0) /\ i3'=3+3*i6+i3-3*i4, i6'=-1+i4
  25: (0 >= 0 /\ -i4+i5 >= 0 /\ i6-i4 >= 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0) /\ i3'=3+i3-3*i4+3*i5, i5'=-1+i4, i6'=-1+i4

Dependency graph:
0 -> 18, 0 -> 19
4 -> 21, 4 -> 22, 4 -> 23
18 -> 4, 18 -> 24, 18 -> 25
21 -> 4, 21 -> 20, 21 -> 24, 21 -> 25
22 -> 4, 22 -> 20, 22 -> 24, 22 -> 25
23 -> 4, 23 -> 20, 23 -> 24, 23 -> 25
24 -> 4, 24 -> 20, 24 -> 25
25 -> 4, 25 -> 20, 25 -> 24

	Trace

	0[(-1+i1 == 0)]
	18[(-2+i1 == 0 /\ i4 >= 0)]
	25[(0 >= 0 /\ -i4+i5 >= 0 /\ i6-i4 >= 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0)]
	
	Blocked

	{}
	{19[T]}
	{24[T]}
	{25[T]}
	
Step with 20

	Trace

	0[(-1+i1 == 0)]
	18[(-2+i1 == 0 /\ i4 >= 0)]
	25[(0 >= 0 /\ -i4+i5 >= 0 /\ i6-i4 >= 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0)]
	20[(-5+i1 == 0 /\ -1-i6+i4 >= 0)]
	
	Blocked

	{}
	{19[T]}
	{24[T]}
	{4[T], 24[T], 25[T]}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	18[(-2+i1 == 0 /\ i4 >= 0)]
	25[(0 >= 0 /\ -i4+i5 >= 0 /\ i6-i4 >= 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0)]
	
	Blocked

	{}
	{19[T]}
	{24[T]}
	{4[T], 20[T], 24[T], 25[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	18[(-2+i1 == 0 /\ i4 >= 0)]
	
	Blocked

	{}
	{19[T]}
	{24[T], 25[T]}
	
Step with 4

	Trace

	0[(-1+i1 == 0)]
	18[(-2+i1 == 0 /\ i4 >= 0)]
	4[(i6-i4 >= 0 /\ -5+i1 == 0)]
	
	Blocked

	{}
	{19[T]}
	{24[T], 25[T]}
	{}
	
Step with 22

	Trace

	0[(-1+i1 == 0)]
	18[(-2+i1 == 0 /\ i4 >= 0)]
	4[(i6-i4 >= 0 /\ -5+i1 == 0)]
	22[(-6+i1 == 0)]
	
	Blocked

	{}
	{19[T]}
	{24[T], 25[T]}
	{}
	{}
	
Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ i6-i4 >= 0 /\ -5+i1 == 0) /\ i1'=5, i3'=3+i3, i6'=-1+i6
		New rule:
		(i6-i4 >= 0 /\ -5+i1 == 0) /\ i1'=5, i3'=3+i3, i6'=-1+i6

	Loop Acceleration

	Original rule:
	(i6-i4 >= 0 /\ -5+i1 == 0) /\ i1'=5, i3'=3+i3, i6'=-1+i6
	New rule:
	(-5+i1 >= 0 /\ 5-i1 >= 0 /\ -1+it77 >= 0 /\ 1+i6-it77-i4 >= 0) /\ i1'=i1, i3'=i3+3*it77, i6'=i6-it77

		i6-i4 >= 0 [0]: montonic decrease yields 1+i6-it77-i4 >= 0
		
		-5+i1 >= 0 [0]: unchanged
		
		5-i1 >= 0 [0]: unchanged
		
		Replacement map: {i6-i4 >= 0 -> 1+i6-it77-i4 >= 0, -5+i1 >= 0 -> -5+i1 >= 0, 5-i1 >= 0 -> 5-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-5+i1 >= 0 /\ 5-i1 >= 0 /\ -1+it77 >= 0 /\ 1+i6-it77-i4 >= 0) /\ i1'=i1, i3'=i3+3*it77, i6'=i6-it77
	New rule:
	(-5+i1 >= 0 /\ 5-i1 >= 0 /\ -1+it77 >= 0 /\ 1+i6-it77-i4 >= 0) /\ i3'=i3+3*it77, i6'=i6-it77
	
	Instantiation

	Original rule:
	(-5+i1 >= 0 /\ 5-i1 >= 0 /\ -1+it77 >= 0 /\ 1+i6-it77-i4 >= 0) /\ i3'=i3+3*it77, i6'=i6-it77
	New rule:
	(0 >= 0 /\ i6-i4 >= 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0) /\ i3'=3+3*i6+i3-3*i4, i6'=-1+i4

Start location: evalrsdstart

Location map:
LoAT_sink -> 0
evalrsdstart -> 1
evalrsdentryin -> 2
evalrsdbbin -> 3
evalrsdreturnin -> 4
evalrsdbb4in -> 5
evalrsdbb1in -> 6
evalrsdbb2in -> 7
evalrsdbb3in -> 8
evalrsdstop -> 9

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   4: (i6-i4 >= 0 /\ -5+i1 == 0) /\ i1'=6, i3'=1+i3
  18: (-2+i1 == 0 /\ i4 >= 0) /\ i1'=5, i3'=2+i3, i5'=2*i4, i6'=2*i4
  19: (-2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=9, i3'=2+i3
  20: (-5+i1 == 0 /\ -1-i6+i4 >= 0) /\ i1'=9, i3'=2+i3
  21: (-6+i1 == 0) /\ i1'=5, i3'=2+i3, i6'=-1+i6
  22: (-6+i1 == 0) /\ i1'=5, i3'=2+i3, i6'=-1+i6
  23: -6+i1 == 0 /\ i1'=5, i3'=2+i3, i5'=-1+i5, i6'=-1+i5
  24: (0 >= 0 /\ i6-i4 >= 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0) /\ i3'=3+3*i6+i3-3*i4, i6'=-1+i4
  25: (0 >= 0 /\ -i4+i5 >= 0 /\ i6-i4 >= 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0) /\ i3'=3+i3-3*i4+3*i5, i5'=-1+i4, i6'=-1+i4
  26: (0 >= 0 /\ i6-i4 >= 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0) /\ i3'=3+3*i6+i3-3*i4, i6'=-1+i4

Dependency graph:
0 -> 18, 0 -> 19
4 -> 21, 4 -> 22, 4 -> 23
18 -> 4, 18 -> 24, 18 -> 25, 18 -> 26
21 -> 4, 21 -> 20, 21 -> 24, 21 -> 25, 21 -> 26
22 -> 4, 22 -> 20, 22 -> 24, 22 -> 25, 22 -> 26
23 -> 4, 23 -> 20, 23 -> 24, 23 -> 25, 23 -> 26
24 -> 4, 24 -> 20, 24 -> 25, 24 -> 26
25 -> 4, 25 -> 20, 25 -> 24, 25 -> 26
26 -> 4, 26 -> 20, 26 -> 24, 26 -> 25

	Trace

	0[(-1+i1 == 0)]
	18[(-2+i1 == 0 /\ i4 >= 0)]
	26[(0 >= 0 /\ i6-i4 >= 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0)]
	
	Blocked

	{}
	{19[T]}
	{24[T], 25[T]}
	{26[T]}
	
Step with 20

	Trace

	0[(-1+i1 == 0)]
	18[(-2+i1 == 0 /\ i4 >= 0)]
	26[(0 >= 0 /\ i6-i4 >= 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0)]
	20[(-5+i1 == 0 /\ -1-i6+i4 >= 0)]
	
	Blocked

	{}
	{19[T]}
	{24[T], 25[T]}
	{4[T], 24[T], 25[T], 26[T]}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	18[(-2+i1 == 0 /\ i4 >= 0)]
	26[(0 >= 0 /\ i6-i4 >= 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0)]
	
	Blocked

	{}
	{19[T]}
	{24[T], 25[T]}
	{4[T], 20[T], 24[T], 25[T], 26[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	18[(-2+i1 == 0 /\ i4 >= 0)]
	
	Blocked

	{}
	{19[T]}
	{24[T], 25[T], 26[T]}
	
Step with 4

	Trace

	0[(-1+i1 == 0)]
	18[(-2+i1 == 0 /\ i4 >= 0)]
	4[(i6-i4 >= 0 /\ -5+i1 == 0)]
	
	Blocked

	{}
	{19[T]}
	{24[T], 25[T], 26[T]}
	{}
	
Step with 23

	Trace

	0[(-1+i1 == 0)]
	18[(-2+i1 == 0 /\ i4 >= 0)]
	4[(i6-i4 >= 0 /\ -5+i1 == 0)]
	23[(-6+i1 == 0)]
	
	Blocked

	{}
	{19[T]}
	{24[T], 25[T], 26[T]}
	{}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	18[(-2+i1 == 0 /\ i4 >= 0)]
	4[(i6-i4 >= 0 /\ -5+i1 == 0)]
	
	Blocked

	{}
	{19[T]}
	{24[T], 25[T], 26[T]}
	{23[T]}
	
Step with 22

	Trace

	0[(-1+i1 == 0)]
	18[(-2+i1 == 0 /\ i4 >= 0)]
	4[(i6-i4 >= 0 /\ -5+i1 == 0)]
	22[(-6+i1 == 0)]
	
	Blocked

	{}
	{19[T]}
	{24[T], 25[T], 26[T]}
	{23[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	18[(-2+i1 == 0 /\ i4 >= 0)]
	4[(i6-i4 >= 0 /\ -5+i1 == 0)]
	
	Blocked

	{}
	{19[T]}
	{24[T], 25[T], 26[T]}
	{22[T], 23[T]}
	
Step with 21

	Trace

	0[(-1+i1 == 0)]
	18[(-2+i1 == 0 /\ i4 >= 0)]
	4[(i6-i4 >= 0 /\ -5+i1 == 0)]
	21[(-6+i1 == 0)]
	
	Blocked

	{}
	{19[T]}
	{24[T], 25[T], 26[T]}
	{22[T], 23[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	18[(-2+i1 == 0 /\ i4 >= 0)]
	4[(i6-i4 >= 0 /\ -5+i1 == 0)]
	
	Blocked

	{}
	{19[T]}
	{24[T], 25[T], 26[T]}
	{21[T], 22[T], 23[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	18[(-2+i1 == 0 /\ i4 >= 0)]
	
	Blocked

	{}
	{19[T]}
	{4[T], 24[T], 25[T], 26[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{18[T], 19[T]}
	
Backtrack

	Trace

	Blocked

	{0[T]}
	
Accept

Poly(n^1)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^2))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  D
  Locations:  l0, l1, l2, l3, l4, l5, l6, l7, l8
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂) → l7(X₀, X₁, X₂)
  t₉: l1(X₀, X₁, X₂) → l3(X₀, X₁, X₂-1)
  t₁₀: l2(X₀, X₁, X₂) → l3(X₀, X₁-1, X₁-1)
  t₄: l3(X₀, X₁, X₂) → l4(X₀, X₁, X₂) :|: X₀ ≤ X₂
  t₅: l3(X₀, X₁, X₂) → l5(X₀, X₁, X₂) :|: 1+X₂ ≤ X₀
  t₆: l4(X₀, X₁, X₂) → l1(X₀, X₁, X₂) :|: 1+D ≤ 0
  t₇: l4(X₀, X₁, X₂) → l1(X₀, X₁, X₂) :|: 1 ≤ D
  t₈: l4(X₀, X₁, X₂) → l2(X₀, X₁, X₂)
  t₁₁: l5(X₀, X₁, X₂) → l8(X₀, X₁, X₂)
  t₃: l6(X₀, X₁, X₂) → l3(X₀, 2⋅X₀, 2⋅X₀)
  t₂: l7(X₀, X₁, X₂) → l5(X₀, X₁, X₂) :|: 1+X₀ ≤ 0
  t₁: l7(X₀, X₁, X₂) → l6(X₀, X₁, X₂) :|: 0 ≤ X₀


Preprocessing
  Found invariant 0 ≤ X₂ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₀ for location l2


  Found invariant 0 ≤ X₀ for location l6


  Found invariant 0 ≤ X₂ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₀ for location l1


  Found invariant 0 ≤ X₂ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₀ for location l4


  Found invariant 0 ≤ X₀ for location l3


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  D
  Locations:  l0, l1, l2, l3, l4, l5, l6, l7, l8
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂) → l7(X₀, X₁, X₂)
  t₉: l1(X₀, X₁, X₂) → l3(X₀, X₁, X₂-1) :|: 0 ≤ X₀ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₂
  t₁₀: l2(X₀, X₁, X₂) → l3(X₀, X₁-1, X₁-1) :|: 0 ≤ X₀ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₂
  t₄: l3(X₀, X₁, X₂) → l4(X₀, X₁, X₂) :|: X₀ ≤ X₂ ∧ 0 ≤ X₀
  t₅: l3(X₀, X₁, X₂) → l5(X₀, X₁, X₂) :|: 1+X₂ ≤ X₀ ∧ 0 ≤ X₀
  t₆: l4(X₀, X₁, X₂) → l1(X₀, X₁, X₂) :|: 1+D ≤ 0 ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₂
  t₇: l4(X₀, X₁, X₂) → l1(X₀, X₁, X₂) :|: 1 ≤ D ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₂
  t₈: l4(X₀, X₁, X₂) → l2(X₀, X₁, X₂) :|: 0 ≤ X₀ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₂
  t₁₁: l5(X₀, X₁, X₂) → l8(X₀, X₁, X₂)
  t₃: l6(X₀, X₁, X₂) → l3(X₀, 2⋅X₀, 2⋅X₀) :|: 0 ≤ X₀
  t₂: l7(X₀, X₁, X₂) → l5(X₀, X₁, X₂) :|: 1+X₀ ≤ 0
  t₁: l7(X₀, X₁, X₂) → l6(X₀, X₁, X₂) :|: 0 ≤ X₀


MPRF for transition t₈: l4(X₀, X₁, X₂) → l2(X₀, X₁, X₂) :|: 0 ≤ X₀ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₂ of depth 2:
  new bound:
    40⋅X₀+1 {O(n)}

  MPRF:
    • l1: [X₁-X₀; X₂]
    • l2: [X₁-1-X₀; X₁-1]
    • l3: [X₁-X₀; X₂]
    • l4: [X₁-X₀; X₂]




MPRF for transition t₁₀: l2(X₀, X₁, X₂) → l3(X₀, X₁-1, X₁-1) :|: 0 ≤ X₀ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₂ of depth 2:
  new bound:
    32⋅X₀+1 {O(n)}

  MPRF:
    • l1: [X₁; X₂]
    • l2: [X₁; 0]
    • l3: [X₁; X₂]
    • l4: [X₁; X₂]




MPRF for transition t₄: l3(X₀, X₁, X₂) → l4(X₀, X₁, X₂) :|: X₀ ≤ X₂ ∧ 0 ≤ X₀ of depth 1:
  new bound:
    1088⋅X₀^2+164⋅X₀+6 {O(n^2)}

  MPRF:
    • l1: [1+X₂]
    • l2: [1+X₂]
    • l3: [2+X₂]
    • l4: [1+X₂]




MPRF for transition t₆: l4(X₀, X₁, X₂) → l1(X₀, X₁, X₂) :|: 1+D ≤ 0 ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₂ of depth 1:
  new bound:
    1088⋅X₀^2+132⋅X₀+4 {O(n^2)}

  MPRF:
    • l1: [X₂]
    • l2: [1+X₂]
    • l3: [1+X₂]
    • l4: [1+X₂]




MPRF for transition t₇: l4(X₀, X₁, X₂) → l1(X₀, X₁, X₂) :|: 1 ≤ D ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₂ of depth 1:
  new bound:
    1088⋅X₀^2+132⋅X₀+4 {O(n^2)}

  MPRF:
    • l1: [X₂]
    • l2: [1+X₂]
    • l3: [1+X₂]
    • l4: [1+X₂]




MPRF for transition t₉: l1(X₀, X₁, X₂) → l3(X₀, X₁, X₂-1) :|: 0 ≤ X₀ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₂ of depth 1:
  new bound:
    1088⋅X₀^2+132⋅X₀+4 {O(n^2)}

  MPRF:
    • l1: [1+X₂]
    • l2: [1]
    • l3: [1+X₂]
    • l4: [1+X₂]




  Cut unsatisfiable transition [t₅: l3→l5; t₂₀₁: l3→l5]


  Found invariant 1+X₂ ≤ X₁ ∧ 0 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l2_v3


  Found invariant 1+X₂ ≤ X₁ ∧ 0 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l1_v3


  Found invariant 0 ≤ X₂ ∧ 0 ≤ X₁+X₂ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₁ ∧ 0 ≤ X₀+X₁ ∧ X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l1_v1


  Found invariant 1+X₂ ≤ X₁ ∧ 0 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l4_v3


  Found invariant 0 ≤ X₀ for location l6


  Found invariant X₂ ≤ X₁ ∧ 0 ≤ 1+X₂ ∧ 0 ≤ 2+X₁+X₂ ∧ X₁ ≤ X₂ ∧ 0 ≤ 1+X₀+X₂ ∧ X₀ ≤ 1+X₂ ∧ 0 ≤ 1+X₁ ∧ 0 ≤ 1+X₀+X₁ ∧ X₀ ≤ 1+X₁ ∧ 0 ≤ X₀ for location l3_v5


  Found invariant 1+X₂ ≤ X₁ ∧ 0 ≤ 1+X₂ ∧ 0 ≤ 1+X₁+X₂ ∧ 0 ≤ 1+X₀+X₂ ∧ X₀ ≤ 1+X₂ ∧ 0 ≤ X₁ ∧ 0 ≤ X₀+X₁ ∧ X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l3_v3


  Found invariant 0 ≤ X₂ ∧ 0 ≤ X₁+X₂ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₁ ∧ 0 ≤ X₀+X₁ ∧ X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l4_v1


  Found invariant X₂ ≤ X₁ ∧ 0 ≤ X₂ ∧ 0 ≤ X₁+X₂ ∧ X₁ ≤ X₂ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₁ ∧ 0 ≤ X₀+X₁ ∧ X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l4_v2


  Found invariant 0 ≤ X₂ ∧ 0 ≤ X₁+X₂ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₁ ∧ 0 ≤ X₀+X₁ ∧ X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l3


  Found invariant 0 ≤ 1+X₂ ∧ 0 ≤ 1+X₁+X₂ ∧ 0 ≤ 1+X₀+X₂ ∧ X₀ ≤ 1+X₂ ∧ 0 ≤ X₁ ∧ 0 ≤ X₀+X₁ ∧ X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l3_v1


  Found invariant X₂ ≤ X₁ ∧ 0 ≤ X₂ ∧ 0 ≤ X₁+X₂ ∧ X₁ ≤ X₂ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₁ ∧ 0 ≤ X₀+X₁ ∧ X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l1_v2


  Found invariant X₂ ≤ X₁ ∧ 0 ≤ 1+X₂ ∧ 0 ≤ 2+X₁+X₂ ∧ X₁ ≤ X₂ ∧ 0 ≤ 1+X₀+X₂ ∧ X₀ ≤ 1+X₂ ∧ 0 ≤ 1+X₁ ∧ 0 ≤ 1+X₀+X₁ ∧ X₀ ≤ 1+X₁ ∧ 0 ≤ X₀ for location l3_v2


  Found invariant 0 ≤ X₂ ∧ 0 ≤ X₁+X₂ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₁ ∧ 0 ≤ X₀+X₁ ∧ X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l2_v1


  Found invariant X₂ ≤ X₁ ∧ 0 ≤ X₂ ∧ 0 ≤ X₁+X₂ ∧ X₁ ≤ X₂ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₁ ∧ 0 ≤ X₀+X₁ ∧ X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l2_v2


  Found invariant X₂ ≤ X₁ ∧ 0 ≤ X₂ ∧ 0 ≤ X₁+X₂ ∧ X₁ ≤ X₂ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₁ ∧ 0 ≤ X₀+X₁ ∧ X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l3_v4


All Bounds
Timebounds
  Overall timebound:4352⋅X₀^2+632⋅X₀+26 {O(n^2)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1088⋅X₀^2+164⋅X₀+6 {O(n^2)}
    t₅: 1 {O(1)}
    t₆: 1088⋅X₀^2+132⋅X₀+4 {O(n^2)}
    t₇: 1088⋅X₀^2+132⋅X₀+4 {O(n^2)}
    t₈: 40⋅X₀+1 {O(n)}
    t₉: 1088⋅X₀^2+132⋅X₀+4 {O(n^2)}
    t₁₀: 32⋅X₀+1 {O(n)}
    t₁₁: 1 {O(1)}


Costbounds
  Overall costbound: 4352⋅X₀^2+632⋅X₀+26 {O(n^2)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1088⋅X₀^2+164⋅X₀+6 {O(n^2)}
    t₅: 1 {O(1)}
    t₆: 1088⋅X₀^2+132⋅X₀+4 {O(n^2)}
    t₇: 1088⋅X₀^2+132⋅X₀+4 {O(n^2)}
    t₈: 40⋅X₀+1 {O(n)}
    t₉: 1088⋅X₀^2+132⋅X₀+4 {O(n^2)}
    t₁₀: 32⋅X₀+1 {O(n)}
    t₁₁: 1 {O(1)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₀, X₂: X₂ {O(n)}
    t₁, X₀: X₀ {O(n)}
    t₁, X₁: X₁ {O(n)}
    t₁, X₂: X₂ {O(n)}
    t₂, X₀: X₀ {O(n)}
    t₂, X₁: X₁ {O(n)}
    t₂, X₂: X₂ {O(n)}
    t₃, X₀: X₀ {O(n)}
    t₃, X₁: 2⋅X₀ {O(n)}
    t₃, X₂: 2⋅X₀ {O(n)}
    t₄, X₀: X₀ {O(n)}
    t₄, X₁: 34⋅X₀+1 {O(n)}
    t₄, X₂: 36⋅X₀+4 {O(n)}
    t₅, X₀: 2⋅X₀ {O(n)}
    t₅, X₁: 68⋅X₀+2 {O(n)}
    t₅, X₂: 70⋅X₀+6 {O(n)}
    t₆, X₀: X₀ {O(n)}
    t₆, X₁: 34⋅X₀+1 {O(n)}
    t₆, X₂: 36⋅X₀+4 {O(n)}
    t₇, X₀: X₀ {O(n)}
    t₇, X₁: 34⋅X₀+1 {O(n)}
    t₇, X₂: 36⋅X₀+4 {O(n)}
    t₈, X₀: X₀ {O(n)}
    t₈, X₁: 34⋅X₀+1 {O(n)}
    t₈, X₂: 36⋅X₀+4 {O(n)}
    t₉, X₀: X₀ {O(n)}
    t₉, X₁: 34⋅X₀+1 {O(n)}
    t₉, X₂: 36⋅X₀+4 {O(n)}
    t₁₀, X₀: X₀ {O(n)}
    t₁₀, X₁: 34⋅X₀+1 {O(n)}
    t₁₀, X₂: 34⋅X₀+2 {O(n)}
    t₁₁, X₀: 3⋅X₀ {O(n)}
    t₁₁, X₁: 68⋅X₀+X₁+2 {O(n)}
    t₁₁, X₂: 70⋅X₀+X₂+6 {O(n)}

