WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [evalrsdbb1in/6,evalrsdbb2in/6,evalrsdbb3in/6,evalrsdbb4in/6]
1. non_recursive  : [evalrsdstop/4]
2. non_recursive  : [evalrsdreturnin/4]
3. non_recursive  : [exit_location/1]
4. non_recursive  : [evalrsdbb4in_loop_cont/5]
5. non_recursive  : [evalrsdbbin/4]
6. non_recursive  : [evalrsdentryin/4]
7. non_recursive  : [evalrsdstart/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into evalrsdbb4in/6
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into evalrsdbb4in_loop_cont/5
5. SCC is partially evaluated into evalrsdbbin/4
6. SCC is partially evaluated into evalrsdentryin/4
7. SCC is partially evaluated into evalrsdstart/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations evalrsdbb4in/6 
* CE 8 is refined into CE [11] 
* CE 7 is refined into CE [12] 
* CE 6 is refined into CE [13] 
* CE 5 is refined into CE [14] 


### Cost equations --> "Loop" of evalrsdbb4in/6 
* CEs [13] --> Loop 11 
* CEs [14] --> Loop 12 
* CEs [11] --> Loop 13 
* CEs [12] --> Loop 14 

### Ranking functions of CR evalrsdbb4in(A,B,C,E,F,G) 

#### Partial ranking functions of CR evalrsdbb4in(A,B,C,E,F,G) 
* Partial RF of phase [11,12]:
  - RF of loop [11:1]:
    -A+B+1
    B+1
  - RF of loop [12:1]:
    -A+C+1 depends on loops [11:1] 
    -B/2+C+1/2 depends on loops [11:1] 
    C+1 depends on loops [11:1] 


### Specialization of cost equations evalrsdbb4in_loop_cont/5 
* CE 10 is refined into CE [15] 
* CE 9 is refined into CE [16] 


### Cost equations --> "Loop" of evalrsdbb4in_loop_cont/5 
* CEs [15] --> Loop 15 
* CEs [16] --> Loop 16 

### Ranking functions of CR evalrsdbb4in_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR evalrsdbb4in_loop_cont(A,B,C,D,E) 


### Specialization of cost equations evalrsdbbin/4 
* CE 4 is refined into CE [17,18,19] 


### Cost equations --> "Loop" of evalrsdbbin/4 
* CEs [17,18,19] --> Loop 17 

### Ranking functions of CR evalrsdbbin(A,B,C,E) 

#### Partial ranking functions of CR evalrsdbbin(A,B,C,E) 


### Specialization of cost equations evalrsdentryin/4 
* CE 2 is refined into CE [20] 
* CE 3 is refined into CE [21] 


### Cost equations --> "Loop" of evalrsdentryin/4 
* CEs [20] --> Loop 18 
* CEs [21] --> Loop 19 

### Ranking functions of CR evalrsdentryin(A,B,C,E) 

#### Partial ranking functions of CR evalrsdentryin(A,B,C,E) 


### Specialization of cost equations evalrsdstart/4 
* CE 1 is refined into CE [22,23] 


### Cost equations --> "Loop" of evalrsdstart/4 
* CEs [23] --> Loop 20 
* CEs [22] --> Loop 21 

### Ranking functions of CR evalrsdstart(A,B,C,E) 

#### Partial ranking functions of CR evalrsdstart(A,B,C,E) 


Computing Bounds
=====================================

#### Cost of chains of evalrsdbb4in(A,B,C,E,F,G):
* Chain [[11,12],14]: 1*it(11)+1*it(12)+0
  Such that:aux(21) =< B
it(11) =< B-F
aux(13) =< B-G
aux(6) =< -B/2+C+1/2
aux(12) =< -B/2+C+F/2-G
aux(15) =< C
aux(2) =< C+1
aux(25) =< G+1
aux(26) =< C-G
aux(12) =< aux(26)
aux(13) =< aux(25)
aux(15) =< aux(25)
aux(23) =< aux(13)
aux(23) =< aux(15)-1/2
aux(21) =< aux(15)
aux(17) =< aux(13)
aux(16) =< it(11)*aux(15)
aux(5) =< it(11)*aux(15)
aux(14) =< it(11)*aux(13)
aux(1) =< it(11)*aux(13)
aux(24) =< it(11)*aux(23)
aux(3) =< it(11)*aux(23)
aux(22) =< it(11)*aux(21)
aux(5) =< it(11)*aux(21)
aux(18) =< it(11)*aux(17)
aux(1) =< it(11)*aux(17)
aux(3) =< it(11)*aux(17)
aux(11) =< aux(16)
aux(7) =< aux(14)
aux(9) =< aux(24)
aux(11) =< aux(22)
aux(7) =< aux(18)
aux(9) =< aux(18)
it(12) =< aux(5)+aux(6)
it(12) =< aux(3)+aux(26)
it(12) =< aux(1)+aux(2)
it(12) =< aux(11)+aux(12)
it(12) =< aux(9)+aux(26)
it(12) =< aux(7)+aux(26)

  with precondition: [E=2,A=G+1,C>=A,F+1>=A,2*A>=B,B>=C,B>=F] 

* Chain [[11,12],13]: 1*it(11)+1*it(12)+0
  Such that:aux(13) =< -A+B
it(11) =< -A+B+1
aux(25) =< A
aux(21) =< B
aux(6) =< -B/2+C+1/2
aux(15) =< C
aux(2) =< C+1
aux(27) =< -A+C+1
aux(28) =< -B/2+C+1
aux(8) =< aux(27)
aux(8) =< aux(28)
aux(13) =< aux(25)
aux(15) =< aux(25)
aux(23) =< aux(13)
aux(23) =< aux(15)-1/2
aux(21) =< aux(15)
aux(17) =< aux(13)
aux(16) =< it(11)*aux(15)
aux(5) =< it(11)*aux(15)
aux(14) =< it(11)*aux(13)
aux(1) =< it(11)*aux(13)
aux(24) =< it(11)*aux(23)
aux(3) =< it(11)*aux(23)
aux(22) =< it(11)*aux(21)
aux(5) =< it(11)*aux(21)
aux(18) =< it(11)*aux(17)
aux(1) =< it(11)*aux(17)
aux(3) =< it(11)*aux(17)
aux(11) =< aux(16)
aux(7) =< aux(14)
aux(9) =< aux(24)
aux(11) =< aux(22)
aux(7) =< aux(18)
aux(9) =< aux(18)
it(12) =< aux(5)+aux(6)
it(12) =< aux(3)+aux(27)
it(12) =< aux(1)+aux(2)
it(12) =< aux(11)+aux(8)
it(12) =< aux(9)+aux(8)
it(12) =< aux(7)+aux(8)

  with precondition: [E=3,C>=A,2*A>=B,B>=C] 

* Chain [13]: 0
  with precondition: [E=3,A>=0,2*A>=B,B>=C] 


#### Cost of chains of evalrsdbb4in_loop_cont(A,B,C,D,E):
* Chain [16]: 0
  with precondition: [A=2,B>=0] 

* Chain [15]: 0
  with precondition: [A=3,B>=0] 


#### Cost of chains of evalrsdbbin(A,B,C,E):
* Chain [17]: 1*s(2)+1*s(23)+1*s(25)+1*s(47)+0
  Such that:aux(31) =< 2*A+2
aux(35) =< A
aux(36) =< A+1
aux(37) =< A+1/2
aux(38) =< 2*A
aux(39) =< 2*A+1
s(2) =< aux(36)
s(3) =< aux(36)
s(5) =< aux(36)
s(1) =< aux(38)
s(6) =< aux(38)
s(2) =< aux(31)
s(5) =< aux(31)
s(3) =< aux(35)
s(6) =< aux(35)
s(10) =< s(3)
s(10) =< s(6)-1/2
s(1) =< s(6)
s(11) =< s(3)
s(12) =< s(2)*s(6)
s(13) =< s(2)*s(6)
s(14) =< s(2)*s(3)
s(15) =< s(2)*s(3)
s(16) =< s(2)*s(10)
s(17) =< s(2)*s(10)
s(18) =< s(2)*s(1)
s(13) =< s(2)*s(1)
s(19) =< s(2)*s(11)
s(15) =< s(2)*s(11)
s(17) =< s(2)*s(11)
s(20) =< s(12)
s(21) =< s(14)
s(22) =< s(16)
s(20) =< s(18)
s(21) =< s(19)
s(22) =< s(19)
s(23) =< s(13)+aux(37)
s(23) =< s(17)+aux(36)
s(23) =< s(15)+aux(39)
s(23) =< s(20)+s(5)
s(23) =< s(22)+aux(36)
s(23) =< s(21)+aux(36)
s(25) =< aux(36)
s(34) =< aux(35)
s(34) =< s(6)-1/2
s(35) =< aux(35)
s(36) =< s(25)*s(6)
s(37) =< s(25)*s(6)
s(38) =< s(25)*aux(35)
s(39) =< s(25)*aux(35)
s(40) =< s(25)*s(34)
s(41) =< s(25)*s(34)
s(42) =< s(25)*s(1)
s(37) =< s(25)*s(1)
s(43) =< s(25)*s(35)
s(39) =< s(25)*s(35)
s(41) =< s(25)*s(35)
s(44) =< s(36)
s(45) =< s(38)
s(46) =< s(40)
s(44) =< s(42)
s(45) =< s(43)
s(46) =< s(43)
s(47) =< s(37)+aux(37)
s(47) =< s(41)+aux(36)
s(47) =< s(39)+aux(39)
s(47) =< s(44)+aux(36)
s(47) =< s(46)+aux(36)
s(47) =< s(45)+aux(36)

  with precondition: [A>=0] 


#### Cost of chains of evalrsdentryin(A,B,C,E):
* Chain [19]: 0
  with precondition: [0>=A+1] 

* Chain [18]: 1*s(54)+1*s(72)+1*s(73)+1*s(87)+0
  Such that:s(49) =< A
s(50) =< A+1
s(51) =< A+1/2
s(52) =< 2*A
s(53) =< 2*A+1
s(48) =< 2*A+2
s(54) =< s(50)
s(55) =< s(50)
s(56) =< s(50)
s(57) =< s(52)
s(58) =< s(52)
s(54) =< s(48)
s(56) =< s(48)
s(55) =< s(49)
s(58) =< s(49)
s(59) =< s(55)
s(59) =< s(58)-1/2
s(57) =< s(58)
s(60) =< s(55)
s(61) =< s(54)*s(58)
s(62) =< s(54)*s(58)
s(63) =< s(54)*s(55)
s(64) =< s(54)*s(55)
s(65) =< s(54)*s(59)
s(66) =< s(54)*s(59)
s(67) =< s(54)*s(57)
s(62) =< s(54)*s(57)
s(68) =< s(54)*s(60)
s(64) =< s(54)*s(60)
s(66) =< s(54)*s(60)
s(69) =< s(61)
s(70) =< s(63)
s(71) =< s(65)
s(69) =< s(67)
s(70) =< s(68)
s(71) =< s(68)
s(72) =< s(62)+s(51)
s(72) =< s(66)+s(50)
s(72) =< s(64)+s(53)
s(72) =< s(69)+s(56)
s(72) =< s(71)+s(50)
s(72) =< s(70)+s(50)
s(73) =< s(50)
s(74) =< s(49)
s(74) =< s(58)-1/2
s(75) =< s(49)
s(76) =< s(73)*s(58)
s(77) =< s(73)*s(58)
s(78) =< s(73)*s(49)
s(79) =< s(73)*s(49)
s(80) =< s(73)*s(74)
s(81) =< s(73)*s(74)
s(82) =< s(73)*s(57)
s(77) =< s(73)*s(57)
s(83) =< s(73)*s(75)
s(79) =< s(73)*s(75)
s(81) =< s(73)*s(75)
s(84) =< s(76)
s(85) =< s(78)
s(86) =< s(80)
s(84) =< s(82)
s(85) =< s(83)
s(86) =< s(83)
s(87) =< s(77)+s(51)
s(87) =< s(81)+s(50)
s(87) =< s(79)+s(53)
s(87) =< s(84)+s(50)
s(87) =< s(86)+s(50)
s(87) =< s(85)+s(50)

  with precondition: [A>=0] 


#### Cost of chains of evalrsdstart(A,B,C,E):
* Chain [21]: 0
  with precondition: [0>=A+1] 

* Chain [20]: 1*s(94)+1*s(112)+1*s(113)+1*s(127)+0
  Such that:s(88) =< A
s(89) =< A+1
s(90) =< A+1/2
s(91) =< 2*A
s(92) =< 2*A+1
s(93) =< 2*A+2
s(94) =< s(89)
s(95) =< s(89)
s(96) =< s(89)
s(97) =< s(91)
s(98) =< s(91)
s(94) =< s(93)
s(96) =< s(93)
s(95) =< s(88)
s(98) =< s(88)
s(99) =< s(95)
s(99) =< s(98)-1/2
s(97) =< s(98)
s(100) =< s(95)
s(101) =< s(94)*s(98)
s(102) =< s(94)*s(98)
s(103) =< s(94)*s(95)
s(104) =< s(94)*s(95)
s(105) =< s(94)*s(99)
s(106) =< s(94)*s(99)
s(107) =< s(94)*s(97)
s(102) =< s(94)*s(97)
s(108) =< s(94)*s(100)
s(104) =< s(94)*s(100)
s(106) =< s(94)*s(100)
s(109) =< s(101)
s(110) =< s(103)
s(111) =< s(105)
s(109) =< s(107)
s(110) =< s(108)
s(111) =< s(108)
s(112) =< s(102)+s(90)
s(112) =< s(106)+s(89)
s(112) =< s(104)+s(92)
s(112) =< s(109)+s(96)
s(112) =< s(111)+s(89)
s(112) =< s(110)+s(89)
s(113) =< s(89)
s(114) =< s(88)
s(114) =< s(98)-1/2
s(115) =< s(88)
s(116) =< s(113)*s(98)
s(117) =< s(113)*s(98)
s(118) =< s(113)*s(88)
s(119) =< s(113)*s(88)
s(120) =< s(113)*s(114)
s(121) =< s(113)*s(114)
s(122) =< s(113)*s(97)
s(117) =< s(113)*s(97)
s(123) =< s(113)*s(115)
s(119) =< s(113)*s(115)
s(121) =< s(113)*s(115)
s(124) =< s(116)
s(125) =< s(118)
s(126) =< s(120)
s(124) =< s(122)
s(125) =< s(123)
s(126) =< s(123)
s(127) =< s(117)+s(90)
s(127) =< s(121)+s(89)
s(127) =< s(119)+s(92)
s(127) =< s(124)+s(89)
s(127) =< s(126)+s(89)
s(127) =< s(125)+s(89)

  with precondition: [A>=0] 


Closed-form bounds of evalrsdstart(A,B,C,E): 
-------------------------------------
* Chain [21] with precondition: [0>=A+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [20] with precondition: [A>=0] 
    - Upper bound: 2*A+2+(A+1)*(4*A)+(2*A+1) 
    - Complexity: n^2 

### Maximum cost of evalrsdstart(A,B,C,E): nat(2*A)*2*nat(A+1)+nat(A+1)*2+nat(A+1/2)*2 
Asymptotic class: n^2 
* Total analysis performed in 147 ms.

