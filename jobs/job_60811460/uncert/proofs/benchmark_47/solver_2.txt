WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [evalSimpleSingle2bb1in/7,evalSimpleSingle2bb2in/7,evalSimpleSingle2bb3in/7,evalSimpleSingle2bb4in/7,evalSimpleSingle2bbin/7]
1. non_recursive  : [evalSimpleSingle2stop/5]
2. non_recursive  : [evalSimpleSingle2returnin/5]
3. non_recursive  : [exit_location/1]
4. non_recursive  : [evalSimpleSingle2bb4in_loop_cont/6]
5. non_recursive  : [evalSimpleSingle2entryin/5]
6. non_recursive  : [evalSimpleSingle2start/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into evalSimpleSingle2bb4in/7
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into evalSimpleSingle2bb4in_loop_cont/6
5. SCC is partially evaluated into evalSimpleSingle2entryin/5
6. SCC is partially evaluated into evalSimpleSingle2start/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations evalSimpleSingle2bb4in/7 
* CE 6 is refined into CE [9] 
* CE 3 is refined into CE [10] 
* CE 5 is refined into CE [11] 
* CE 4 is refined into CE [12] 


### Cost equations --> "Loop" of evalSimpleSingle2bb4in/7 
* CEs [12] --> Loop 9 
* CEs [11] --> Loop 10 
* CEs [9] --> Loop 11 
* CEs [10] --> Loop 12 

### Ranking functions of CR evalSimpleSingle2bb4in(A,B,C,D,F,G,H) 
* RF of phase [9]: [-A+D,-B+D]
* RF of phase [10]: [-A+C,-B+C]

#### Partial ranking functions of CR evalSimpleSingle2bb4in(A,B,C,D,F,G,H) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    -A+D
    -B+D
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    -A+C
    -B+C


### Specialization of cost equations evalSimpleSingle2bb4in_loop_cont/6 
* CE 8 is refined into CE [13] 
* CE 7 is refined into CE [14] 


### Cost equations --> "Loop" of evalSimpleSingle2bb4in_loop_cont/6 
* CEs [13] --> Loop 13 
* CEs [14] --> Loop 14 

### Ranking functions of CR evalSimpleSingle2bb4in_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR evalSimpleSingle2bb4in_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations evalSimpleSingle2entryin/5 
* CE 2 is refined into CE [15,16,17,18,19,20,21,22] 


### Cost equations --> "Loop" of evalSimpleSingle2entryin/5 
* CEs [16,21] --> Loop 15 
* CEs [18,20] --> Loop 16 
* CEs [17,22] --> Loop 17 
* CEs [15,19] --> Loop 18 

### Ranking functions of CR evalSimpleSingle2entryin(A,B,C,D,F) 

#### Partial ranking functions of CR evalSimpleSingle2entryin(A,B,C,D,F) 


### Specialization of cost equations evalSimpleSingle2start/5 
* CE 1 is refined into CE [23,24,25,26] 


### Cost equations --> "Loop" of evalSimpleSingle2start/5 
* CEs [26] --> Loop 19 
* CEs [25] --> Loop 20 
* CEs [24] --> Loop 21 
* CEs [23] --> Loop 22 

### Ranking functions of CR evalSimpleSingle2start(A,B,C,D,F) 

#### Partial ranking functions of CR evalSimpleSingle2start(A,B,C,D,F) 


Computing Bounds
=====================================

#### Cost of chains of evalSimpleSingle2bb4in(A,B,C,D,F,G,H):
* Chain [[10],[9],12]: 1*it(9)+1*it(10)+0
  Such that:it(10) =< -A+C
it(9) =< -C+H

  with precondition: [F=2,A=B,G=H,A>=0,C>=A+1,G>=C+1,D>=G] 

* Chain [[10],[9],11]: 1*it(9)+1*it(10)+0
  Such that:it(10) =< -A+C
it(9) =< -C+D

  with precondition: [F=3,A=B,A>=0,C>=A+1,D>=C+1] 

* Chain [[10],12]: 1*it(10)+0
  Such that:it(10) =< -A+G

  with precondition: [F=2,A=B,G=H,A>=0,G>=A+1,C>=G] 

* Chain [[10],11]: 1*it(10)+0
  Such that:it(10) =< -A+C

  with precondition: [F=3,A=B,A>=0,C>=A+1] 

* Chain [[9],12]: 1*it(9)+0
  Such that:it(9) =< -A+H

  with precondition: [F=2,A=B,G=H,A>=0,G>=A+1,A>=C,D>=G] 

* Chain [[9],11]: 1*it(9)+0
  Such that:it(9) =< -A+D

  with precondition: [F=3,A=B,A>=0,D>=A+1,A>=C] 

* Chain [12]: 0
  with precondition: [F=2,B=A,B=G,B=H,B>=0] 

* Chain [11]: 0
  with precondition: [F=3,B=A,B>=0] 


#### Cost of chains of evalSimpleSingle2bb4in_loop_cont(A,B,C,D,E,F):
* Chain [14]: 0
  with precondition: [A=2] 

* Chain [13]: 0
  with precondition: [A=3] 


#### Cost of chains of evalSimpleSingle2entryin(A,B,C,D,F):
* Chain [18]: 0
  with precondition: [] 

* Chain [17]: 2*s(1)+0
  Such that:aux(1) =< D
s(1) =< aux(1)

  with precondition: [0>=C,D>=1] 

* Chain [16]: 2*s(3)+0
  Such that:aux(2) =< C
s(3) =< aux(2)

  with precondition: [C>=1] 

* Chain [15]: 2*s(5)+2*s(6)+0
  Such that:aux(3) =< -C+D
aux(4) =< C
s(6) =< aux(3)
s(5) =< aux(4)

  with precondition: [C>=1,D>=C+1] 


#### Cost of chains of evalSimpleSingle2start(A,B,C,D,F):
* Chain [22]: 0
  with precondition: [] 

* Chain [21]: 2*s(10)+0
  Such that:s(9) =< D
s(10) =< s(9)

  with precondition: [0>=C,D>=1] 

* Chain [20]: 2*s(12)+0
  Such that:s(11) =< C
s(12) =< s(11)

  with precondition: [C>=1] 

* Chain [19]: 2*s(15)+2*s(16)+0
  Such that:s(13) =< -C+D
s(14) =< C
s(15) =< s(13)
s(16) =< s(14)

  with precondition: [C>=1,D>=C+1] 


Closed-form bounds of evalSimpleSingle2start(A,B,C,D,F): 
-------------------------------------
* Chain [22] with precondition: [] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [21] with precondition: [0>=C,D>=1] 
    - Upper bound: 2*D 
    - Complexity: n 
* Chain [20] with precondition: [C>=1] 
    - Upper bound: 2*C 
    - Complexity: n 
* Chain [19] with precondition: [C>=1,D>=C+1] 
    - Upper bound: 2*D 
    - Complexity: n 

### Maximum cost of evalSimpleSingle2start(A,B,C,D,F): max([nat(D)*2,nat(-C+D)*2+nat(C)*2]) 
Asymptotic class: n 
* Total analysis performed in 96 ms.

