NO

# LoAT Proof:
NO

NO

Initial ITS

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f2 -> 2
f3 -> 3
f5 -> 4

Rules:
   0: -2+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=1+i4
   1: (-3+i1 == 0 /\ -1+i5 >= 0) /\ i1'=3, i3'=1+i3, i5'=-1+i5
   2: -4+i1 == 0 /\ i1'=4, i3'=1+i3, i6'=1
   3: (-1+i1 == 0 /\ -1+i6 >= 0) /\ i1'=2, i3'=1+i3, i4'=0
   4: (-i6 >= 0 /\ -1+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=0
   5: (-3+i1 == 0 /\ -i5 >= 0) /\ i1'=4, i3'=1+i3, i4'=0

Dependency graph:
0 -> 0
1 -> 1, 1 -> 5
2 -> 2
3 -> 0
4 -> 1, 4 -> 5
5 -> 2

Step with 4

	Trace

	4[(-i6 >= 0 /\ -1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 5

	Trace

	4[(-i6 >= 0 /\ -1+i1 == 0)]
	5[(-3+i1 == 0 /\ -i5 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Step with 2

	Trace

	4[(-i6 >= 0 /\ -1+i1 == 0)]
	5[(-3+i1 == 0 /\ -i5 >= 0)]
	2[(-4+i1 == 0)]
	
	Blocked

	{}
	{}
	{}
	{}
	
Nonterm

	Certificate of Non-Termination

	Original rule:
	(-4+i1 == 0) /\ i1'=4, i3'=1+i3, i6'=1
	New rule:
	(-4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+it16 >= 0) /\ i1'=0

		-4+i1 >= 0 [0]: unchanged
		
		4-i1 >= 0 [0]: unchanged
		
		Replacement map: {-4+i1 >= 0 -> -4+i1 >= 0, 4-i1 >= 0 -> 4-i1 >= 0}

	Loop Acceleration

	Original rule:
	(-4+i1 == 0) /\ i1'=4, i3'=1+i3, i6'=1
	New rule:
	(-4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+it16 >= 0) /\ i1'=i1, i3'=it16+i3, i6'=1

		-4+i1 >= 0 [0]: unchanged
		
		4-i1 >= 0 [0]: unchanged
		
		Replacement map: {-4+i1 >= 0 -> -4+i1 >= 0, 4-i1 >= 0 -> 4-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+it16 >= 0) /\ i1'=i1, i3'=it16+i3, i6'=1
	New rule:
	(-4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+it16 >= 0) /\ i3'=it16+i3, i6'=1

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f2 -> 2
f3 -> 3
f5 -> 4

Rules:
   0: -2+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=1+i4
   1: (-3+i1 == 0 /\ -1+i5 >= 0) /\ i1'=3, i3'=1+i3, i5'=-1+i5
   2: -4+i1 == 0 /\ i1'=4, i3'=1+i3, i6'=1
   3: (-1+i1 == 0 /\ -1+i6 >= 0) /\ i1'=2, i3'=1+i3, i4'=0
   4: (-i6 >= 0 /\ -1+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=0
   5: (-3+i1 == 0 /\ -i5 >= 0) /\ i1'=4, i3'=1+i3, i4'=0
   6: (-4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+it16 >= 0) /\ i1'=0
   7: (-4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+it16 >= 0) /\ i3'=it16+i3, i6'=1

Dependency graph:
0 -> 0
1 -> 1, 1 -> 5
2 -> 2, 2 -> 6, 2 -> 7
3 -> 0
4 -> 1, 4 -> 5
5 -> 2, 5 -> 6, 5 -> 7
7 -> 2, 7 -> 6

Step with 6

	Trace

	4[(-i6 >= 0 /\ -1+i1 == 0)]
	5[(-3+i1 == 0 /\ -i5 >= 0)]
	6[(-4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+it16 >= 0)]
	
	Blocked

	{}
	{}
	{}
	{6[T]}
	
Refute

	Counterexample

	(i1=1, i3=-1, i5=0, i6=0)
	-4-> (i1=3, i3=0, i4=0, i5=0, i6=0 )
	-5-> (i1=4, i3=1, i4=0, i5=0, i6=0 )
	-6-> ( )
	
NO

Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
MAYBE


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  
  Locations:  l0, l1, l2, l3
  Return Locations:  
  Transitions:
  t₃: l0(X₀, X₁, X₂) → l1(0, X₁, X₂) :|: 1 ≤ X₂
  t₄: l0(X₀, X₁, X₂) → l2(0, X₁, X₂) :|: X₂ ≤ 0
  t₀: l1(X₀, X₁, X₂) → l1(1+X₀, X₁, X₂)
  t₁: l2(X₀, X₁, X₂) → l2(X₀, X₁-1, X₂) :|: 1 ≤ X₁
  t₅: l2(X₀, X₁, X₂) → l3(0, X₁, X₂) :|: X₁ ≤ 0
  t₂: l3(X₀, X₁, X₂) → l3(X₀, X₁, 1)


Preprocessing
  Eliminate variables [X₀] that do not contribute to the problem


  Found invariant 1 ≤ X₁ for location l1


  Found invariant X₁ ≤ 0 for location l2


  Found invariant X₁ ≤ 1 ∧ X₀+X₁ ≤ 1 ∧ X₀ ≤ 0 for location l3


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁
  Temp_Vars:  
  Locations:  l0, l1, l2, l3
  Return Locations:  
  Transitions:
  t₆: l0(X₀, X₁) → l1(X₀, X₁) :|: 1 ≤ X₁
  t₇: l0(X₀, X₁) → l2(X₀, X₁) :|: X₁ ≤ 0
  t₈: l1(X₀, X₁) → l1(X₀, X₁) :|: 1 ≤ X₁
  t₉: l2(X₀, X₁) → l2(X₀-1, X₁) :|: 1 ≤ X₀ ∧ X₁ ≤ 0
  t₁₀: l2(X₀, X₁) → l3(X₀, X₁) :|: X₀ ≤ 0 ∧ X₁ ≤ 0
  t₁₁: l3(X₀, X₁) → l3(X₀, 1) :|: X₀+X₁ ≤ 1 ∧ X₁ ≤ 1 ∧ X₀ ≤ 0


  Found invariant X₁ ≤ 0 for location l2


  Found invariant 1 ≤ X₁ for location l1_v1


  Found invariant 1 ≤ X₁ for location l1


  Found invariant X₁ ≤ 1 ∧ X₀+X₁ ≤ 1 ∧ X₀ ≤ 0 for location l3


MPRF for transition t₉: l2(X₀, X₁) → l2(X₀-1, X₁) :|: 1 ≤ X₀ ∧ X₁ ≤ 0 of depth 1:
  new bound:
    X₀ {O(n)}

  MPRF:
    • l2: [X₀]




  Found invariant X₁ ≤ 0 for location l2


  Found invariant 1 ≤ X₁ for location l1


  Found invariant X₁ ≤ 0 ∧ X₀+X₁ ≤ 0 ∧ X₀ ≤ 0 for location l3


  Found invariant X₁ ≤ 1 ∧ X₀+X₁ ≤ 1 ∧ 1 ≤ X₁ ∧ 1+X₀ ≤ X₁ ∧ X₀ ≤ 0 for location l3_v1


All Bounds
Timebounds
  Overall timebound:inf {Infinity}
    t₆: 1 {O(1)}
    t₇: 1 {O(1)}
    t₈: inf {Infinity}
    t₉: X₀ {O(n)}
    t₁₀: 1 {O(1)}
    t₁₁: inf {Infinity}


Costbounds
  Overall costbound: inf {Infinity}
    t₆: 1 {O(1)}
    t₇: 1 {O(1)}
    t₈: inf {Infinity}
    t₉: X₀ {O(n)}
    t₁₀: 1 {O(1)}
    t₁₁: inf {Infinity}


Sizebounds
    t₆, X₀: X₀ {O(n)}
    t₆, X₁: X₁ {O(n)}
    t₇, X₀: X₀ {O(n)}
    t₇, X₁: X₁ {O(n)}
    t₈, X₀: X₀ {O(n)}
    t₈, X₁: X₁ {O(n)}
    t₉, X₀: X₀ {O(n)}
    t₉, X₁: X₁ {O(n)}
    t₁₀, X₀: 2⋅X₀ {O(n)}
    t₁₀, X₁: 2⋅X₁ {O(n)}
    t₁₁, X₀: 2⋅X₀ {O(n)}
    t₁₁, X₁: 1 {O(1)}

