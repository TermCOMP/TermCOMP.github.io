WORST_CASE(INF,?)

# LoAT Proof:
WORST_CASE(INF,?)

WORST_CASE(INF,?)
Initial ITS

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f12 -> 2
f25 -> 3
f34 -> 4

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=it6, i5'=it5, i6'=it4, i7'=0
   1: (-2+i1 == 0 /\ -1+i6-i7 >= 0) /\ i1'=2, i3'=1+i3, i7'=1+i7
   2: (-3+i1 == 0 /\ -1+i8-i9 >= 0) /\ i1'=3, i3'=1+i3, i9'=1+i9
   3: (-3+i1 == 0 /\ -i8+i9 >= 0) /\ i1'=4, i3'=1+i3
   4: (-2+i1 == 0 /\ -i6+i7 >= 0) /\ i1'=3, i3'=1+i3, i8'=i4, i9'=0, i10'=it7

Dependency graph:
0 -> 1, 0 -> 4
1 -> 1, 1 -> 4
2 -> 2, 2 -> 3
4 -> 2, 4 -> 3

Step with 0

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 4

	Trace

	0[(-1+i1 == 0)]
	4[(-2+i1 == 0 /\ -i6+i7 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Step with 3

	Trace

	0[(-1+i1 == 0)]
	4[(-2+i1 == 0 /\ -i6+i7 >= 0)]
	3[(-3+i1 == 0 /\ -i8+i9 >= 0)]
	
	Blocked

	{}
	{}
	{}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	4[(-2+i1 == 0 /\ -i6+i7 >= 0)]
	
	Blocked

	{}
	{}
	{3[T]}
	
Step with 2

	Trace

	0[(-1+i1 == 0)]
	4[(-2+i1 == 0 /\ -i6+i7 >= 0)]
	2[(-3+i1 == 0 /\ -1+i8-i9 >= 0)]
	
	Blocked

	{}
	{}
	{3[T]}
	{}
	
Unbounded

Accelerate

	Loop Acceleration

	Original rule:
	(-3+i1 == 0 /\ -1+i8-i9 >= 0) /\ i1'=3, i3'=1+i3, i9'=1+i9
	New rule:
	(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+it48 >= 0 /\ -it48+i8-i9 >= 0) /\ i1'=i1, i3'=i3+it48, i9'=it48+i9

		-3+i1 >= 0 [0]: unchanged
		
		-1+i8-i9 >= 0 [0]: montonic decrease yields -it48+i8-i9 >= 0
		
		3-i1 >= 0 [0]: unchanged
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, -1+i8-i9 >= 0 -> -it48+i8-i9 >= 0, 3-i1 >= 0 -> 3-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+it48 >= 0 /\ -it48+i8-i9 >= 0) /\ i1'=i1, i3'=i3+it48, i9'=it48+i9
	New rule:
	(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+it48 >= 0 /\ -it48+i8-i9 >= 0) /\ i3'=i3+it48, i9'=it48+i9
	
	Instantiation

	Original rule:
	(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+it48 >= 0 /\ -it48+i8-i9 >= 0) /\ i3'=i3+it48, i9'=it48+i9
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ -1+i8-i9 >= 0 /\ 3-i1 >= 0) /\ i3'=i3+i8-i9, i9'=i8

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f12 -> 2
f25 -> 3
f34 -> 4

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=it6, i5'=it5, i6'=it4, i7'=0
   1: (-2+i1 == 0 /\ -1+i6-i7 >= 0) /\ i1'=2, i3'=1+i3, i7'=1+i7
   2: (-3+i1 == 0 /\ -1+i8-i9 >= 0) /\ i1'=3, i3'=1+i3, i9'=1+i9
   3: (-3+i1 == 0 /\ -i8+i9 >= 0) /\ i1'=4, i3'=1+i3
   4: (-2+i1 == 0 /\ -i6+i7 >= 0) /\ i1'=3, i3'=1+i3, i8'=i4, i9'=0, i10'=it7
   5: (0 >= 0 /\ -3+i1 >= 0 /\ -1+i8-i9 >= 0 /\ 3-i1 >= 0) /\ i3'=i3+i8-i9, i9'=i8

Dependency graph:
0 -> 1, 0 -> 4
1 -> 1, 1 -> 4
2 -> 2, 2 -> 3, 2 -> 5
4 -> 2, 4 -> 3, 4 -> 5
5 -> 2, 5 -> 3

	Trace

	0[(-1+i1 == 0)]
	4[(-2+i1 == 0 /\ -i6+i7 >= 0)]
	5[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i8-i9 >= 0 /\ 3-i1 >= 0)]
	
	Blocked

	{}
	{}
	{3[T]}
	{2[T], 5[T]}
	
Step with 3

	Trace

	0[(-1+i1 == 0)]
	4[(-2+i1 == 0 /\ -i6+i7 >= 0)]
	5[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i8-i9 >= 0 /\ 3-i1 >= 0)]
	3[(-3+i1 == 0 /\ -i8+i9 >= 0)]
	
	Blocked

	{}
	{}
	{3[T]}
	{2[T], 5[T]}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	4[(-2+i1 == 0 /\ -i6+i7 >= 0)]
	5[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i8-i9 >= 0 /\ 3-i1 >= 0)]
	
	Blocked

	{}
	{}
	{3[T]}
	{2[T], 3[T], 5[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	4[(-2+i1 == 0 /\ -i6+i7 >= 0)]
	
	Blocked

	{}
	{}
	{3[T], 5[T]}
	
Step with 2

	Trace

	0[(-1+i1 == 0)]
	4[(-2+i1 == 0 /\ -i6+i7 >= 0)]
	2[(-3+i1 == 0 /\ -1+i8-i9 >= 0)]
	
	Blocked

	{}
	{}
	{3[T], 5[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	4[(-2+i1 == 0 /\ -i6+i7 >= 0)]
	
	Blocked

	{}
	{}
	{2[T], 3[T], 5[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{4[T]}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	1[(-2+i1 == 0 /\ -1+i6-i7 >= 0)]
	
	Blocked

	{}
	{4[T]}
	{}
	
Accelerate

	Loop Acceleration

	Original rule:
	(-2+i1 == 0 /\ -1+i6-i7 >= 0) /\ i1'=2, i3'=1+i3, i7'=1+i7
	New rule:
	(-1+it101 >= 0 /\ -2+i1 >= 0 /\ i6-i7-it101 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it101, i7'=i7+it101

		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		-1+i6-i7 >= 0 [0]: montonic decrease yields i6-i7-it101 >= 0
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0, -1+i6-i7 >= 0 -> i6-i7-it101 >= 0}

	Removed Trivial Updates

	Original rule:
	(-1+it101 >= 0 /\ -2+i1 >= 0 /\ i6-i7-it101 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it101, i7'=i7+it101
	New rule:
	(-1+it101 >= 0 /\ -2+i1 >= 0 /\ i6-i7-it101 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+it101, i7'=i7+it101
	
	Instantiation

	Original rule:
	(-1+it101 >= 0 /\ -2+i1 >= 0 /\ i6-i7-it101 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+it101, i7'=i7+it101
	New rule:
	(0 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+i6-i7 >= 0) /\ i3'=i6+i3-i7, i7'=i6

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f12 -> 2
f25 -> 3
f34 -> 4

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=it6, i5'=it5, i6'=it4, i7'=0
   1: (-2+i1 == 0 /\ -1+i6-i7 >= 0) /\ i1'=2, i3'=1+i3, i7'=1+i7
   2: (-3+i1 == 0 /\ -1+i8-i9 >= 0) /\ i1'=3, i3'=1+i3, i9'=1+i9
   3: (-3+i1 == 0 /\ -i8+i9 >= 0) /\ i1'=4, i3'=1+i3
   4: (-2+i1 == 0 /\ -i6+i7 >= 0) /\ i1'=3, i3'=1+i3, i8'=i4, i9'=0, i10'=it7
   5: (0 >= 0 /\ -3+i1 >= 0 /\ -1+i8-i9 >= 0 /\ 3-i1 >= 0) /\ i3'=i3+i8-i9, i9'=i8
   6: (0 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+i6-i7 >= 0) /\ i3'=i6+i3-i7, i7'=i6

Dependency graph:
0 -> 1, 0 -> 4, 0 -> 6
1 -> 1, 1 -> 4, 1 -> 6
2 -> 2, 2 -> 3, 2 -> 5
4 -> 2, 4 -> 3, 4 -> 5
5 -> 2, 5 -> 3
6 -> 1, 6 -> 4

	Trace

	0[(-1+i1 == 0)]
	6[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+i6-i7 >= 0)]
	
	Blocked

	{}
	{4[T]}
	{1[T], 6[T]}
	
Step with 4

	Trace

	0[(-1+i1 == 0)]
	6[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+i6-i7 >= 0)]
	4[(-2+i1 == 0 /\ -i6+i7 >= 0)]
	
	Blocked

	{}
	{4[T]}
	{1[T], 6[T]}
	{}
	
Step with 2

	Trace

	0[(-1+i1 == 0)]
	6[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+i6-i7 >= 0)]
	4[(-2+i1 == 0 /\ -i6+i7 >= 0)]
	2[(-3+i1 == 0 /\ -1+i8-i9 >= 0)]
	
	Blocked

	{}
	{4[T]}
	{1[T], 6[T]}
	{}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	6[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+i6-i7 >= 0)]
	4[(-2+i1 == 0 /\ -i6+i7 >= 0)]
	
	Blocked

	{}
	{4[T]}
	{1[T], 6[T]}
	{2[T]}
	
Step with 3

	Trace

	0[(-1+i1 == 0)]
	6[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+i6-i7 >= 0)]
	4[(-2+i1 == 0 /\ -i6+i7 >= 0)]
	3[(-3+i1 == 0 /\ -i8+i9 >= 0)]
	
	Blocked

	{}
	{4[T]}
	{1[T], 6[T]}
	{2[T]}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	6[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+i6-i7 >= 0)]
	4[(-2+i1 == 0 /\ -i6+i7 >= 0)]
	
	Blocked

	{}
	{4[T]}
	{1[T], 6[T]}
	{2[T], 3[T]}
	
Step with 5

	Trace

	0[(-1+i1 == 0)]
	6[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+i6-i7 >= 0)]
	4[(-2+i1 == 0 /\ -i6+i7 >= 0)]
	5[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i8-i9 >= 0 /\ 3-i1 >= 0)]
	
	Blocked

	{}
	{4[T]}
	{1[T], 6[T]}
	{2[T], 3[T]}
	{5[T]}
	
Step with 3

	Trace

	0[(-1+i1 == 0)]
	6[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+i6-i7 >= 0)]
	4[(-2+i1 == 0 /\ -i6+i7 >= 0)]
	5[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i8-i9 >= 0 /\ 3-i1 >= 0)]
	3[(-3+i1 == 0 /\ -i8+i9 >= 0)]
	
	Blocked

	{}
	{4[T]}
	{1[T], 6[T]}
	{2[T], 3[T]}
	{2[T], 5[T]}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	6[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+i6-i7 >= 0)]
	4[(-2+i1 == 0 /\ -i6+i7 >= 0)]
	5[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i8-i9 >= 0 /\ 3-i1 >= 0)]
	
	Blocked

	{}
	{4[T]}
	{1[T], 6[T]}
	{2[T], 3[T]}
	{2[T], 3[T], 5[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	6[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+i6-i7 >= 0)]
	4[(-2+i1 == 0 /\ -i6+i7 >= 0)]
	
	Blocked

	{}
	{4[T]}
	{1[T], 6[T]}
	{2[T], 3[T], 5[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	6[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+i6-i7 >= 0)]
	
	Blocked

	{}
	{4[T]}
	{1[T], 4[T], 6[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{4[T], 6[T]}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	1[(-2+i1 == 0 /\ -1+i6-i7 >= 0)]
	
	Blocked

	{}
	{4[T], 6[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{1[T], 4[T], 6[T]}
	
Backtrack

	Trace

	Blocked

	{0[T]}
	
Accept

Unbounded


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
MAYBE


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄, X₅, X₆
  Temp_Vars:  H, I, J
  Locations:  l0, l1, l2, l3
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l1(H, I, J, 0, X₄, X₅, X₆)
  t₁: l1(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l1(X₀, X₁, X₂, 1+X₃, X₄, X₅, X₆) :|: 1+X₃ ≤ X₂
  t₄: l1(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l2(X₀, X₁, X₂, X₃, X₀, 0, H) :|: X₂ ≤ X₃
  t₂: l2(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l2(X₀, X₁, X₂, X₃, X₄, 1+X₅, X₆) :|: 1+X₅ ≤ X₄
  t₃: l2(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l3(X₀, X₁, X₂, X₃, X₄, X₅, X₆) :|: X₄ ≤ X₅


Preprocessing
  Eliminate variables [I; X₁; X₆] that do not contribute to the problem


  Found invariant 0 ≤ X₂ for location l1


  Found invariant 0 ≤ X₄ ∧ 0 ≤ X₂+X₄ ∧ X₃ ≤ X₀ ∧ X₀ ≤ X₃ ∧ 0 ≤ X₂ ∧ X₁ ≤ X₂ for location l2


  Found invariant 0 ≤ X₄ ∧ X₃ ≤ X₄ ∧ 0 ≤ X₂+X₄ ∧ X₀ ≤ X₄ ∧ X₃ ≤ X₀ ∧ X₀ ≤ X₃ ∧ 0 ≤ X₂ ∧ X₁ ≤ X₂ for location l3


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄
  Temp_Vars:  H, J
  Locations:  l0, l1, l2, l3
  Return Locations:  
  Transitions:
  t₅: l0(X₀, X₁, X₂, X₃, X₄) → l1(H, J, 0, X₃, X₄)
  t₆: l1(X₀, X₁, X₂, X₃, X₄) → l1(X₀, X₁, 1+X₂, X₃, X₄) :|: 1+X₂ ≤ X₁ ∧ 0 ≤ X₂
  t₇: l1(X₀, X₁, X₂, X₃, X₄) → l2(X₀, X₁, X₂, X₀, 0) :|: X₁ ≤ X₂ ∧ 0 ≤ X₂
  t₈: l2(X₀, X₁, X₂, X₃, X₄) → l2(X₀, X₁, X₂, X₃, 1+X₄) :|: 1+X₄ ≤ X₃ ∧ X₃ ≤ X₀ ∧ X₀ ≤ X₃ ∧ X₁ ≤ X₂ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₄ ∧ 0 ≤ X₄
  t₉: l2(X₀, X₁, X₂, X₃, X₄) → l3(X₀, X₁, X₂, X₃, X₄) :|: X₃ ≤ X₄ ∧ X₃ ≤ X₀ ∧ X₀ ≤ X₃ ∧ X₁ ≤ X₂ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₄ ∧ 0 ≤ X₄


  Found invariant 0 ≤ X₄ ∧ 0 ≤ X₂+X₄ ∧ X₃ ≤ X₀ ∧ X₀ ≤ X₃ ∧ 0 ≤ X₂ ∧ X₁ ≤ X₂ for location l2


  Found invariant X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 1 ≤ X₁ for location l1_v1


  Found invariant X₂ ≤ 0 ∧ 0 ≤ X₂ for location l1


  Found invariant 0 ≤ X₄ ∧ X₃ ≤ X₄ ∧ 0 ≤ X₂+X₄ ∧ X₀ ≤ X₄ ∧ X₃ ≤ X₀ ∧ X₀ ≤ X₃ ∧ 0 ≤ X₂ ∧ X₁ ≤ X₂ for location l3


  Found invariant X₄ ≤ 0 ∧ X₄ ≤ X₂ ∧ 0 ≤ X₄ ∧ 0 ≤ X₂+X₄ ∧ X₃ ≤ X₀ ∧ X₀ ≤ X₃ ∧ 0 ≤ X₂ ∧ X₁ ≤ X₂ for location l2


  Found invariant X₄ ≤ X₃ ∧ X₄ ≤ X₀ ∧ 1 ≤ X₄ ∧ 2 ≤ X₃+X₄ ∧ 1 ≤ X₂+X₄ ∧ 2 ≤ X₀+X₄ ∧ X₃ ≤ X₀ ∧ 1 ≤ X₃ ∧ 1 ≤ X₂+X₃ ∧ 2 ≤ X₀+X₃ ∧ X₀ ≤ X₃ ∧ 0 ≤ X₂ ∧ X₁ ≤ X₂ ∧ 1 ≤ X₀+X₂ ∧ 1 ≤ X₀ for location l2_v1


  Found invariant 0 ≤ X₂ for location l1


  Found invariant 0 ≤ X₄ ∧ X₃ ≤ X₄ ∧ 0 ≤ X₂+X₄ ∧ X₀ ≤ X₄ ∧ X₃ ≤ X₀ ∧ X₀ ≤ X₃ ∧ 0 ≤ X₂ ∧ X₁ ≤ X₂ for location l3


All Bounds
Timebounds
  Overall timebound:inf {Infinity}
    t₅: 1 {O(1)}
    t₆: inf {Infinity}
    t₇: 1 {O(1)}
    t₈: inf {Infinity}
    t₉: 1 {O(1)}


Costbounds
  Overall costbound: inf {Infinity}
    t₅: 1 {O(1)}
    t₆: inf {Infinity}
    t₇: 1 {O(1)}
    t₈: inf {Infinity}
    t₉: 1 {O(1)}


Sizebounds
    t₅, X₂: 0 {O(1)}
    t₅, X₃: X₃ {O(n)}
    t₅, X₄: X₄ {O(n)}
    t₆, X₃: X₃ {O(n)}
    t₆, X₄: X₄ {O(n)}
    t₇, X₄: 0 {O(1)}

