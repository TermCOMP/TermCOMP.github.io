WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_start_bb1_in/5,eval_start_bb2_in/5]
1. recursive  : [eval_start_bb3_in/4,eval_start_bb4_in/4]
2. non_recursive  : [eval_start_stop/5]
3. non_recursive  : [eval_start_bb5_in/5]
4. non_recursive  : [exit_location/1]
5. non_recursive  : [eval_start_bb3_in_loop_cont/6]
6. non_recursive  : [eval_start_bb1_in_loop_cont/6]
7. non_recursive  : [eval_start_3/5]
8. non_recursive  : [eval_start_2/5]
9. non_recursive  : [eval_start_1/5]
10. non_recursive  : [eval_start_0/5]
11. non_recursive  : [eval_start_bb0_in/5]
12. non_recursive  : [eval_start_start/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_start_bb1_in/5
1. SCC is partially evaluated into eval_start_bb3_in/4
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_start_bb3_in_loop_cont/6
6. SCC is partially evaluated into eval_start_bb1_in_loop_cont/6
7. SCC is partially evaluated into eval_start_3/5
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into eval_start_start/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_start_bb1_in/5 
* CE 4 is refined into CE [13] 
* CE 5 is refined into CE [14] 
* CE 3 is refined into CE [15] 


### Cost equations --> "Loop" of eval_start_bb1_in/5 
* CEs [15] --> Loop 13 
* CEs [13] --> Loop 14 
* CEs [14] --> Loop 15 

### Ranking functions of CR eval_start_bb1_in(V__0,V__01,V_y,B,C) 
* RF of phase [13]: [-V__0+V_y]

#### Partial ranking functions of CR eval_start_bb1_in(V__0,V__01,V_y,B,C) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    -V__0+V_y


### Specialization of cost equations eval_start_bb3_in/4 
* CE 10 is refined into CE [16] 
* CE 9 is refined into CE [17] 
* CE 8 is refined into CE [18] 


### Cost equations --> "Loop" of eval_start_bb3_in/4 
* CEs [18] --> Loop 16 
* CEs [16] --> Loop 17 
* CEs [17] --> Loop 18 

### Ranking functions of CR eval_start_bb3_in(V__0,V__01,B,C) 
* RF of phase [16]: [V__0-V__01]

#### Partial ranking functions of CR eval_start_bb3_in(V__0,V__01,B,C) 
* Partial RF of phase [16]:
  - RF of loop [16:1]:
    V__0-V__01


### Specialization of cost equations eval_start_bb3_in_loop_cont/6 
* CE 12 is refined into CE [19] 
* CE 11 is refined into CE [20] 


### Cost equations --> "Loop" of eval_start_bb3_in_loop_cont/6 
* CEs [19] --> Loop 19 
* CEs [20] --> Loop 20 

### Ranking functions of CR eval_start_bb3_in_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR eval_start_bb3_in_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations eval_start_bb1_in_loop_cont/6 
* CE 7 is refined into CE [21,22,23,24] 
* CE 6 is refined into CE [25] 


### Cost equations --> "Loop" of eval_start_bb1_in_loop_cont/6 
* CEs [21,24] --> Loop 21 
* CEs [22] --> Loop 22 
* CEs [23] --> Loop 23 
* CEs [25] --> Loop 24 

### Ranking functions of CR eval_start_bb1_in_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR eval_start_bb1_in_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations eval_start_3/5 
* CE 2 is refined into CE [26,27,28,29,30,31,32] 


### Cost equations --> "Loop" of eval_start_3/5 
* CEs [30] --> Loop 25 
* CEs [28] --> Loop 26 
* CEs [27,31,32] --> Loop 27 
* CEs [29] --> Loop 28 
* CEs [26] --> Loop 29 

### Ranking functions of CR eval_start_3(V__0,V__01,V_x,V_y,B) 

#### Partial ranking functions of CR eval_start_3(V__0,V__01,V_x,V_y,B) 


### Specialization of cost equations eval_start_start/5 
* CE 1 is refined into CE [33,34,35,36,37] 


### Cost equations --> "Loop" of eval_start_start/5 
* CEs [37] --> Loop 30 
* CEs [36] --> Loop 31 
* CEs [35] --> Loop 32 
* CEs [34] --> Loop 33 
* CEs [33] --> Loop 34 

### Ranking functions of CR eval_start_start(V__0,V__01,V_x,V_y,B) 

#### Partial ranking functions of CR eval_start_start(V__0,V__01,V_x,V_y,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_start_bb1_in(V__0,V__01,V_y,B,C):
* Chain [[13],15]: 1*it(13)+0
  Such that:it(13) =< -V__0+V_y

  with precondition: [B=3,V_y>=V__0+1] 

* Chain [[13],14]: 1*it(13)+0
  Such that:it(13) =< -V__0+V_y

  with precondition: [B=4,V_y=C,V_y>=V__0+1] 

* Chain [15]: 0
  with precondition: [B=3] 

* Chain [14]: 0
  with precondition: [B=4,V__0=C,V__0>=V_y] 


#### Cost of chains of eval_start_bb3_in(V__0,V__01,B,C):
* Chain [[16],18]: 1*it(16)+0
  Such that:it(16) =< V__0-V__01

  with precondition: [B=2,V__0=C,V__0>=V__01+1] 

* Chain [[16],17]: 1*it(16)+0
  Such that:it(16) =< V__0-V__01

  with precondition: [B=3,V__0>=V__01+1] 

* Chain [18]: 0
  with precondition: [B=2,V__01=C,V__01>=V__0] 

* Chain [17]: 0
  with precondition: [B=3] 


#### Cost of chains of eval_start_bb3_in_loop_cont(A,B,C,D,E,F):
* Chain [20]: 0
  with precondition: [A=2] 

* Chain [19]: 0
  with precondition: [A=3] 


#### Cost of chains of eval_start_bb1_in_loop_cont(A,B,C,D,E,F):
* Chain [24]: 0
  with precondition: [A=3,E=C] 

* Chain [23]: 0
  with precondition: [A=4,E=C] 

* Chain [22]: 0
  with precondition: [A=4,E=C,E>=B] 

* Chain [21]: 2*s(1)+0
  Such that:aux(1) =< B-C
s(1) =< aux(1)

  with precondition: [A=4,E=C,B>=E+1] 


#### Cost of chains of eval_start_3(V__0,V__01,V_x,V_y,B):
* Chain [29]: 0
  with precondition: [] 

* Chain [28]: 0
  with precondition: [V_y=V_x] 

* Chain [27]: 3*s(3)+0
  Such that:aux(2) =< -V_x+V_y
s(3) =< aux(2)

  with precondition: [V_y>=V_x+1] 

* Chain [26]: 0
  with precondition: [V_x>=V_y] 

* Chain [25]: 2*s(7)+0
  Such that:s(6) =< V_x-V_y
s(7) =< s(6)

  with precondition: [V_x>=V_y+1] 


#### Cost of chains of eval_start_start(V__0,V__01,V_x,V_y,B):
* Chain [34]: 0
  with precondition: [] 

* Chain [33]: 0
  with precondition: [V_y=V_x] 

* Chain [32]: 3*s(9)+0
  Such that:s(8) =< -V_x+V_y
s(9) =< s(8)

  with precondition: [V_y>=V_x+1] 

* Chain [31]: 0
  with precondition: [V_x>=V_y] 

* Chain [30]: 2*s(11)+0
  Such that:s(10) =< V_x-V_y
s(11) =< s(10)

  with precondition: [V_x>=V_y+1] 


Closed-form bounds of eval_start_start(V__0,V__01,V_x,V_y,B): 
-------------------------------------
* Chain [34] with precondition: [] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [33] with precondition: [V_y=V_x] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [32] with precondition: [V_y>=V_x+1] 
    - Upper bound: -3*V_x+3*V_y 
    - Complexity: n 
* Chain [31] with precondition: [V_x>=V_y] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [30] with precondition: [V_x>=V_y+1] 
    - Upper bound: 2*V_x-2*V_y 
    - Complexity: n 

### Maximum cost of eval_start_start(V__0,V__01,V_x,V_y,B): max([nat(-V_x+V_y)*3,nat(V_x-V_y)*2]) 
Asymptotic class: n 
* Total analysis performed in 72 ms.

