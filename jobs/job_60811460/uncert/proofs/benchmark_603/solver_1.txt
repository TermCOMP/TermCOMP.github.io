NO

# LoAT Proof:
NO

NO

Initial ITS

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f9 -> 2
f10 -> 3
f25 -> 4
f2 -> 5
f27 -> 6
f29 -> 7
f19 -> 8

Rules:
   0: (-2+i1 == 0 /\ 5-i4 >= 0) /\ i1'=3, i3'=1+i3
   1: -4+i1 == 0 /\ i1'=5, i3'=1+i3
   2: -5+i1 == 0 /\ i1'=5, i3'=1+i3
   3: (-2+i1 == 0 /\ -1-it2 >= 0 /\ -6+i4 >= 0) /\ i1'=3, i3'=1+i3, i5'=it2
   4: (-2+i1 == 0 /\ -1+it3 >= 0 /\ -6+i4 >= 0) /\ i1'=3, i3'=1+i3, i5'=it3
   5: (-3+i1 == 0 /\ -6+i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
   6: -6+i1 == 0 /\ i1'=7, i3'=1+i3
   7: (-8+i1 == 0 /\ -3+i4 >= 0) /\ i1'=8, i3'=1+i3, i4'=-1+i4
   8: (2-i4 >= 0 /\ -8+i1 == 0) /\ i1'=2, i3'=1+i3
   9: (-3+i1 == 0 /\ 5-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
  10: (-2+i1 == 0 /\ -6+i4 >= 0) /\ i1'=8, i3'=1+i3, i5'=0
  11: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=it4

Dependency graph:
0 -> 5, 0 -> 9
1 -> 2
2 -> 2
3 -> 5, 3 -> 9
4 -> 5, 4 -> 9
5 -> 0, 5 -> 3, 5 -> 4, 5 -> 10
7 -> 7, 7 -> 8
8 -> 0, 8 -> 3, 8 -> 4, 8 -> 10
9 -> 0, 9 -> 3, 9 -> 4, 9 -> 10
10 -> 7, 10 -> 8
11 -> 0, 11 -> 3, 11 -> 4, 11 -> 10

Refined Dependency Graph

	Removed the following edges: 0 -> 5, 3 -> 9, 4 -> 9, 5 -> 0, 8 -> 3, 8 -> 4, 8 -> 10, 10 -> 8

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f9 -> 2
f10 -> 3
f25 -> 4
f2 -> 5
f27 -> 6
f29 -> 7
f19 -> 8

Rules:
   0: (-2+i1 == 0 /\ 5-i4 >= 0) /\ i1'=3, i3'=1+i3
   1: -4+i1 == 0 /\ i1'=5, i3'=1+i3
   2: -5+i1 == 0 /\ i1'=5, i3'=1+i3
   3: (-2+i1 == 0 /\ -1-it2 >= 0 /\ -6+i4 >= 0) /\ i1'=3, i3'=1+i3, i5'=it2
   4: (-2+i1 == 0 /\ -1+it3 >= 0 /\ -6+i4 >= 0) /\ i1'=3, i3'=1+i3, i5'=it3
   5: (-3+i1 == 0 /\ -6+i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
   6: -6+i1 == 0 /\ i1'=7, i3'=1+i3
   7: (-8+i1 == 0 /\ -3+i4 >= 0) /\ i1'=8, i3'=1+i3, i4'=-1+i4
   8: (2-i4 >= 0 /\ -8+i1 == 0) /\ i1'=2, i3'=1+i3
   9: (-3+i1 == 0 /\ 5-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
  10: (-2+i1 == 0 /\ -6+i4 >= 0) /\ i1'=8, i3'=1+i3, i5'=0
  11: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=it4

Dependency graph:
0 -> 9
1 -> 2
2 -> 2
3 -> 5
4 -> 5
5 -> 3, 5 -> 4, 5 -> 10
7 -> 7, 7 -> 8
8 -> 0
9 -> 0, 9 -> 3, 9 -> 4, 9 -> 10
10 -> 7
11 -> 0, 11 -> 3, 11 -> 4, 11 -> 10

Step with 11

	Trace

	11[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 4

	Trace

	11[(-1+i1 == 0)]
	4[(-2+i1 == 0 /\ -1+it3 >= 0 /\ -6+i4 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Step with 5

	Trace

	11[(-1+i1 == 0)]
	4[(-2+i1 == 0 /\ -1+it3 >= 0 /\ -6+i4 >= 0)]
	5[(-3+i1 == 0 /\ -6+i4 >= 0)]
	
	Blocked

	{}
	{}
	{}
	{}
	
Nonterm

	Certificate of Non-Termination

	Original rule:
	(-2+i1 == 0 /\ -1+it3 >= 0 /\ -6+i4 >= 0) /\ i1'=2, i3'=2+i3, i4'=1+i4, i5'=it3
	New rule:
	(-2+i1 >= 0 /\ -1+it19 >= 0 /\ -1+it3 >= 0 /\ -6+i4 >= 0 /\ 2-i1 >= 0) /\ i1'=0

		-2+i1 >= 0 [0]: unchanged
		
		-1+it3 >= 0 [0]: unchanged
		
		-6+i4 >= 0 [0]: monotonic increase yields -6+i4 >= 0
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, -1+it3 >= 0 -> -1+it3 >= 0, -6+i4 >= 0 -> -6+i4 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

		Simplified Guard

		Original rule:
		(0 == 0 /\ -2+i1 == 0 /\ -1+it3 >= 0 /\ -6+i4 >= 0) /\ i1'=2, i3'=2+i3, i4'=1+i4, i5'=it3
		New rule:
		(-2+i1 == 0 /\ -1+it3 >= 0 /\ -6+i4 >= 0) /\ i1'=2, i3'=2+i3, i4'=1+i4, i5'=it3

	Loop Acceleration

	Original rule:
	(-2+i1 == 0 /\ -1+it3 >= 0 /\ -6+i4 >= 0) /\ i1'=2, i3'=2+i3, i4'=1+i4, i5'=it3
	New rule:
	(-2+i1 >= 0 /\ -1+it19 >= 0 /\ -1+it3 >= 0 /\ -6+i4 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+2*it19, i4'=i4+it19, i5'=it3

		-2+i1 >= 0 [0]: unchanged
		
		-1+it3 >= 0 [0]: unchanged
		
		-6+i4 >= 0 [0]: monotonic increase yields -6+i4 >= 0
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, -1+it3 >= 0 -> -1+it3 >= 0, -6+i4 >= 0 -> -6+i4 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-2+i1 >= 0 /\ -1+it19 >= 0 /\ -1+it3 >= 0 /\ -6+i4 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+2*it19, i4'=i4+it19, i5'=it3
	New rule:
	(-2+i1 >= 0 /\ -1+it19 >= 0 /\ -1+it3 >= 0 /\ -6+i4 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+2*it19, i4'=i4+it19, i5'=it3

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f9 -> 2
f10 -> 3
f25 -> 4
f2 -> 5
f27 -> 6
f29 -> 7
f19 -> 8

Rules:
   0: (-2+i1 == 0 /\ 5-i4 >= 0) /\ i1'=3, i3'=1+i3
   1: -4+i1 == 0 /\ i1'=5, i3'=1+i3
   2: -5+i1 == 0 /\ i1'=5, i3'=1+i3
   3: (-2+i1 == 0 /\ -1-it2 >= 0 /\ -6+i4 >= 0) /\ i1'=3, i3'=1+i3, i5'=it2
   4: (-2+i1 == 0 /\ -1+it3 >= 0 /\ -6+i4 >= 0) /\ i1'=3, i3'=1+i3, i5'=it3
   5: (-3+i1 == 0 /\ -6+i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
   6: -6+i1 == 0 /\ i1'=7, i3'=1+i3
   7: (-8+i1 == 0 /\ -3+i4 >= 0) /\ i1'=8, i3'=1+i3, i4'=-1+i4
   8: (2-i4 >= 0 /\ -8+i1 == 0) /\ i1'=2, i3'=1+i3
   9: (-3+i1 == 0 /\ 5-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
  10: (-2+i1 == 0 /\ -6+i4 >= 0) /\ i1'=8, i3'=1+i3, i5'=0
  11: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=it4
  12: (-2+i1 >= 0 /\ -1+it19 >= 0 /\ -1+it3 >= 0 /\ -6+i4 >= 0 /\ 2-i1 >= 0) /\ i1'=0
  13: (-2+i1 >= 0 /\ -1+it19 >= 0 /\ -1+it3 >= 0 /\ -6+i4 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+2*it19, i4'=i4+it19, i5'=it3

Dependency graph:
0 -> 9
1 -> 2
2 -> 2
3 -> 5
4 -> 5
5 -> 3, 5 -> 4, 5 -> 10, 5 -> 12, 5 -> 13
7 -> 7, 7 -> 8
8 -> 0
9 -> 0, 9 -> 3, 9 -> 4, 9 -> 10, 9 -> 12, 9 -> 13
10 -> 7
11 -> 0, 11 -> 3, 11 -> 4, 11 -> 10, 11 -> 12, 11 -> 13
13 -> 3, 13 -> 4, 13 -> 10, 13 -> 12

Step with 12

	Trace

	11[(-1+i1 == 0)]
	12[(-2+i1 >= 0 /\ -1+it19 >= 0 /\ -1+it3 >= 0 /\ -6+i4 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{}
	{12[T]}
	
Refute

	Counterexample

	(i1=1, i3=-1, i5=0)
	-11-> (i1=2, i3=0, i4=6, i5=0 )
	-12-> ( )
	
NO

Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
MAYBE


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁
  Temp_Vars:  C
  Locations:  l0, l1, l2, l3, l4, l5, l6, l7
  Return Locations:  
  Transitions:
  t₁₁: l0(X₀, X₁) → l1(C, X₁)
  t₀: l1(X₀, X₁) → l2(X₀, X₁) :|: X₀ ≤ 5
  t₃: l1(X₀, X₁) → l2(X₀, C) :|: 1+C ≤ 0 ∧ 6 ≤ X₀
  t₄: l1(X₀, X₁) → l2(X₀, C) :|: 1 ≤ C ∧ 6 ≤ X₀
  t₁₀: l1(X₀, X₁) → l3(X₀, 0) :|: 6 ≤ X₀
  t₅: l2(X₀, X₁) → l1(1+X₀, X₁) :|: 6 ≤ X₀
  t₉: l2(X₀, X₁) → l1(1+X₀, X₁) :|: X₀ ≤ 5
  t₈: l3(X₀, X₁) → l1(X₀, X₁) :|: X₀ ≤ 2
  t₇: l3(X₀, X₁) → l3(X₀-1, X₁) :|: 3 ≤ X₀
  t₂: l4(X₀, X₁) → l4(X₀, X₁)
  t₁: l5(X₀, X₁) → l4(X₀, X₁)
  t₆: l7(X₀, X₁) → l6(X₀, X₁)


Preprocessing
  Cut unreachable locations [l4; l5; l6; l7] from the program graph


  Eliminate variables [X₁] that do not contribute to the problem


  Found invariant 2 ≤ X₀ for location l3


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀
  Temp_Vars:  C
  Locations:  l0, l1, l2, l3
  Return Locations:  
  Transitions:
  t₁₂: l0(X₀) → l1(C)
  t₁₃: l1(X₀) → l2(X₀) :|: X₀ ≤ 5
  t₁₄: l1(X₀) → l2(X₀) :|: 1+C ≤ 0 ∧ 6 ≤ X₀
  t₁₅: l1(X₀) → l2(X₀) :|: 1 ≤ C ∧ 6 ≤ X₀
  t₁₆: l1(X₀) → l3(X₀) :|: 6 ≤ X₀
  t₁₇: l2(X₀) → l1(1+X₀) :|: 6 ≤ X₀
  t₁₈: l2(X₀) → l1(1+X₀) :|: X₀ ≤ 5
  t₁₉: l3(X₀) → l1(X₀) :|: X₀ ≤ 2 ∧ 2 ≤ X₀
  t₂₀: l3(X₀) → l3(X₀-1) :|: 3 ≤ X₀ ∧ 2 ≤ X₀


  Found invariant 7 ≤ X₀ for location l1_v2


  Found invariant X₀ ≤ 6 ∧ 6 ≤ X₀ for location l2_v3


  Found invariant 5 ≤ X₀ for location l3_v2


  Found invariant X₀ ≤ 2 ∧ 2 ≤ X₀ for location l1_v3


  Found invariant X₀ ≤ 6 for location l1_v1


  Found invariant 6 ≤ X₀ for location l2_v1


  Found invariant 7 ≤ X₀ for location l2_v4


  Found invariant 2 ≤ X₀ for location l3_v3


  Found invariant X₀ ≤ 5 for location l2_v2


  Found invariant X₀ ≤ 2 ∧ 2 ≤ X₀ for location l2_v5


  Found invariant X₀ ≤ 5 ∧ 3 ≤ X₀ for location l2_v6


  Found invariant X₀ ≤ 3 ∧ 3 ≤ X₀ for location l1_v4


  Found invariant X₀ ≤ 6 ∧ 4 ≤ X₀ for location l1_v5


  Found invariant 6 ≤ X₀ for location l3_v1


All Bounds
Timebounds
  Overall timebound:inf {Infinity}
    t₁₂: 1 {O(1)}
    t₁₃: inf {Infinity}
    t₁₄: inf {Infinity}
    t₁₅: inf {Infinity}
    t₁₆: inf {Infinity}
    t₁₇: inf {Infinity}
    t₁₈: inf {Infinity}
    t₁₉: inf {Infinity}
    t₂₀: inf {Infinity}


Costbounds
  Overall costbound: inf {Infinity}
    t₁₂: 1 {O(1)}
    t₁₃: inf {Infinity}
    t₁₄: inf {Infinity}
    t₁₅: inf {Infinity}
    t₁₆: inf {Infinity}
    t₁₇: inf {Infinity}
    t₁₈: inf {Infinity}
    t₁₉: inf {Infinity}
    t₂₀: inf {Infinity}


Sizebounds
    t₁₉, X₀: 2 {O(1)}

