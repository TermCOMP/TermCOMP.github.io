MAYBE

# LoAT Proof:
WORST_CASE(Omega(n^1),?)

WORST_CASE(Omega(n^1),?)
Initial ITS

Start location: l0

Location map:
LoAT_sink -> 0
l0 -> 1
l1 -> 2
l2 -> 3
l3 -> 4
l4 -> 5

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=it2
   1: (it4 == 0 /\ 1-i4 <= 0 /\ -2+i1 == 0 /\ -3+i4 <= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
   2: -3+i1 == 0 /\ i1'=2, i3'=1+i3, i5'=-1+i5
   3: (-2+i1 == 0 /\ -1+it5 == 0 /\ i5 > 0) /\ i1'=3, i3'=1+i3
   4: -3+i1 == 0 /\ i1'=4, i3'=1+i3
   5: (-4+i1 == 0 /\ -i8+i9 < 0 /\ i9 > 0) /\ i1'=4, i3'=1+i3, i8'=2*i8, i9'=3*i9
   6: -4+i1 == 0 /\ i1'=5, i3'=1+i3
   7: (-5+i1 == 0 /\ i8 > 0) /\ i1'=5, i3'=1+i3, i8'=-1+i8

Dependency graph:
0 -> 1, 0 -> 3
1 -> 1, 1 -> 3
2 -> 1, 2 -> 3
3 -> 2, 3 -> 4
4 -> 5, 4 -> 6
5 -> 5, 5 -> 6
6 -> 7
7 -> 7

Preprocessed Transitions

	Propagated Equalities

	Original rule:
	(it4 == 0 /\ 1-i4 <= 0 /\ -2+i1 == 0 /\ -3+i4 <= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
	New rule:
	(0 == 0 /\ 1-i4 <= 0 /\ -2+i1 == 0 /\ -3+i4 <= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
	
		propagated equality it4 = 0
		
	Simplified Guard

	Original rule:
	(0 == 0 /\ 1-i4 <= 0 /\ -2+i1 == 0 /\ -3+i4 <= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
	New rule:
	(1-i4 <= 0 /\ -2+i1 == 0 /\ -3+i4 <= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
	
	Propagated Equalities

	Original rule:
	(-2+i1 == 0 /\ -1+it5 == 0 /\ i5 > 0) /\ i1'=3, i3'=1+i3
	New rule:
	(0 == 0 /\ -2+i1 == 0 /\ i5 > 0) /\ i1'=3, i3'=1+i3
	
		propagated equality it5 = 1
		
	Simplified Guard

	Original rule:
	(0 == 0 /\ -2+i1 == 0 /\ i5 > 0) /\ i1'=3, i3'=1+i3
	New rule:
	(-2+i1 == 0 /\ i5 > 0) /\ i1'=3, i3'=1+i3

Start location: l0

Location map:
LoAT_sink -> 0
l0 -> 1
l1 -> 2
l2 -> 3
l3 -> 4
l4 -> 5

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=it2
   2: -3+i1 == 0 /\ i1'=2, i3'=1+i3, i5'=-1+i5
   4: -3+i1 == 0 /\ i1'=4, i3'=1+i3
   5: (-4+i1 == 0 /\ -i8+i9 < 0 /\ i9 > 0) /\ i1'=4, i3'=1+i3, i8'=2*i8, i9'=3*i9
   6: -4+i1 == 0 /\ i1'=5, i3'=1+i3
   7: (-5+i1 == 0 /\ i8 > 0) /\ i1'=5, i3'=1+i3, i8'=-1+i8
   8: (1-i4 <= 0 /\ -2+i1 == 0 /\ -3+i4 <= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
   9: (-2+i1 == 0 /\ i5 > 0) /\ i1'=3, i3'=1+i3

Dependency graph:
0 -> 8, 0 -> 9
2 -> 8, 2 -> 9
4 -> 5, 4 -> 6
5 -> 5, 5 -> 6
6 -> 7
7 -> 7
8 -> 8, 8 -> 9
9 -> 2, 9 -> 4

Step with 0

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 9

	Trace

	0[(-1+i1 == 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	
	Blocked

	{}
	{}
	{}
	
Step with 4

	Trace

	0[(-1+i1 == 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	
	Blocked

	{}
	{}
	{}
	{}
	
Step with 5

	Trace

	0[(-1+i1 == 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	5[(-4+i1 == 0 /\ -i8+i9 < 0 /\ i9 > 0)]
	
	Blocked

	{}
	{}
	{}
	{}
	{}
	
Step with 6

	Trace

	0[(-1+i1 == 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	5[(-4+i1 == 0 /\ -i8+i9 < 0 /\ i9 > 0)]
	6[(-4+i1 == 0)]
	
	Blocked

	{}
	{}
	{}
	{}
	{}
	{}
	
Step with 7

	Trace

	0[(-1+i1 == 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	5[(-4+i1 == 0 /\ -i8+i9 < 0 /\ i9 > 0)]
	6[(-4+i1 == 0)]
	7[(-5+i1 == 0 /\ i8 > 0)]
	
	Blocked

	{}
	{}
	{}
	{}
	{}
	{}
	{}
	
Poly(n^1)

Accelerate

	Loop Acceleration

	Original rule:
	(-5+i1 == 0 /\ i8 > 0) /\ i1'=5, i3'=1+i3, i8'=-1+i8
	New rule:
	(-1+it44 >= 0 /\ 1-it44+i8 > 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0) /\ i1'=i1, i3'=i3+it44, i8'=-it44+i8

		-5+i1 >= 0 [0]: unchanged
		
		5-i1 >= 0 [0]: unchanged
		
		i8 > 0 [0]: montonic decrease yields 1-it44+i8 > 0
		
		Replacement map: {-5+i1 >= 0 -> -5+i1 >= 0, 5-i1 >= 0 -> 5-i1 >= 0, i8 > 0 -> 1-it44+i8 > 0}

	Removed Trivial Updates

	Original rule:
	(-1+it44 >= 0 /\ 1-it44+i8 > 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0) /\ i1'=i1, i3'=i3+it44, i8'=-it44+i8
	New rule:
	(-1+it44 >= 0 /\ 1-it44+i8 > 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0) /\ i3'=i3+it44, i8'=-it44+i8
	
	Instantiation

	Original rule:
	(-1+it44 >= 0 /\ 1-it44+i8 > 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0) /\ i3'=i3+it44, i8'=-it44+i8
	New rule:
	(1 > 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0 /\ -1+i8 >= 0) /\ i3'=i3+i8, i8'=0

Start location: l0

Location map:
LoAT_sink -> 0
l0 -> 1
l1 -> 2
l2 -> 3
l3 -> 4
l4 -> 5

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=it2
   2: -3+i1 == 0 /\ i1'=2, i3'=1+i3, i5'=-1+i5
   4: -3+i1 == 0 /\ i1'=4, i3'=1+i3
   5: (-4+i1 == 0 /\ -i8+i9 < 0 /\ i9 > 0) /\ i1'=4, i3'=1+i3, i8'=2*i8, i9'=3*i9
   6: -4+i1 == 0 /\ i1'=5, i3'=1+i3
   7: (-5+i1 == 0 /\ i8 > 0) /\ i1'=5, i3'=1+i3, i8'=-1+i8
   8: (1-i4 <= 0 /\ -2+i1 == 0 /\ -3+i4 <= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
   9: (-2+i1 == 0 /\ i5 > 0) /\ i1'=3, i3'=1+i3
  10: (1 > 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0 /\ -1+i8 >= 0) /\ i3'=i3+i8, i8'=0

Dependency graph:
0 -> 8, 0 -> 9
2 -> 8, 2 -> 9
4 -> 5, 4 -> 6
5 -> 5, 5 -> 6
6 -> 7, 6 -> 10
7 -> 7, 7 -> 10
8 -> 8, 8 -> 9
9 -> 2, 9 -> 4
10 -> 7

	Trace

	0[(-1+i1 == 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	5[(-4+i1 == 0 /\ -i8+i9 < 0 /\ i9 > 0)]
	6[(-4+i1 == 0)]
	10[(1 > 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0 /\ -1+i8 >= 0)]
	
	Blocked

	{}
	{}
	{}
	{}
	{}
	{}
	{7[T], 10[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	5[(-4+i1 == 0 /\ -i8+i9 < 0 /\ i9 > 0)]
	6[(-4+i1 == 0)]
	
	Blocked

	{}
	{}
	{}
	{}
	{}
	{10[T]}
	
Step with 7

	Trace

	0[(-1+i1 == 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	5[(-4+i1 == 0 /\ -i8+i9 < 0 /\ i9 > 0)]
	6[(-4+i1 == 0)]
	7[(-5+i1 == 0 /\ i8 > 0)]
	
	Blocked

	{}
	{}
	{}
	{}
	{}
	{10[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	5[(-4+i1 == 0 /\ -i8+i9 < 0 /\ i9 > 0)]
	6[(-4+i1 == 0)]
	
	Blocked

	{}
	{}
	{}
	{}
	{}
	{7[T], 10[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	5[(-4+i1 == 0 /\ -i8+i9 < 0 /\ i9 > 0)]
	
	Blocked

	{}
	{}
	{}
	{}
	{6[T]}
	
Step with 5

	Trace

	0[(-1+i1 == 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	5[(-4+i1 == 0 /\ -i8+i9 < 0 /\ i9 > 0)]
	5[(-4+i1 == 0 /\ -i8+i9 < 0 /\ i9 > 0)]
	
	Blocked

	{}
	{}
	{}
	{}
	{6[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	5[(-4+i1 == 0 /\ -i8+i9 < 0 /\ i9 > 0)]
	
	Blocked

	{}
	{}
	{}
	{}
	{5[T], 6[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	
	Blocked

	{}
	{}
	{}
	{5[T]}
	
Step with 6

	Trace

	0[(-1+i1 == 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	6[(-4+i1 == 0)]
	
	Blocked

	{}
	{}
	{}
	{5[T]}
	{}
	
Step with 7

	Trace

	0[(-1+i1 == 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	6[(-4+i1 == 0)]
	7[(-5+i1 == 0 /\ i8 > 0)]
	
	Blocked

	{}
	{}
	{}
	{5[T]}
	{}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	6[(-4+i1 == 0)]
	
	Blocked

	{}
	{}
	{}
	{5[T]}
	{7[T]}
	
Step with 10

	Trace

	0[(-1+i1 == 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	6[(-4+i1 == 0)]
	10[(1 > 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0 /\ -1+i8 >= 0)]
	
	Blocked

	{}
	{}
	{}
	{5[T]}
	{7[T]}
	{10[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	6[(-4+i1 == 0)]
	
	Blocked

	{}
	{}
	{}
	{5[T]}
	{7[T], 10[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	
	Blocked

	{}
	{}
	{}
	{5[T], 6[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	
	Blocked

	{}
	{}
	{4[T]}
	
Step with 2

	Trace

	0[(-1+i1 == 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	2[(-3+i1 == 0)]
	
	Blocked

	{}
	{}
	{4[T]}
	{}
	
Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -2+i1 == 0 /\ i5 > 0) /\ i1'=2, i3'=2+i3, i5'=-1+i5
		New rule:
		(-2+i1 == 0 /\ i5 > 0) /\ i1'=2, i3'=2+i3, i5'=-1+i5

	Loop Acceleration

	Original rule:
	(-2+i1 == 0 /\ i5 > 0) /\ i1'=2, i3'=2+i3, i5'=-1+i5
	New rule:
	(-1+it97 >= 0 /\ -2+i1 >= 0 /\ 1+i5-it97 > 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+2*it97, i5'=i5-it97

		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		i5 > 0 [0]: montonic decrease yields 1+i5-it97 > 0
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0, i5 > 0 -> 1+i5-it97 > 0}

	Removed Trivial Updates

	Original rule:
	(-1+it97 >= 0 /\ -2+i1 >= 0 /\ 1+i5-it97 > 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+2*it97, i5'=i5-it97
	New rule:
	(-1+it97 >= 0 /\ -2+i1 >= 0 /\ 1+i5-it97 > 0 /\ 2-i1 >= 0) /\ i3'=i3+2*it97, i5'=i5-it97
	
	Instantiation

	Original rule:
	(-1+it97 >= 0 /\ -2+i1 >= 0 /\ 1+i5-it97 > 0 /\ 2-i1 >= 0) /\ i3'=i3+2*it97, i5'=i5-it97
	New rule:
	(1 > 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+2*i5, i5'=0

Start location: l0

Location map:
LoAT_sink -> 0
l0 -> 1
l1 -> 2
l2 -> 3
l3 -> 4
l4 -> 5

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=it2
   2: -3+i1 == 0 /\ i1'=2, i3'=1+i3, i5'=-1+i5
   4: -3+i1 == 0 /\ i1'=4, i3'=1+i3
   5: (-4+i1 == 0 /\ -i8+i9 < 0 /\ i9 > 0) /\ i1'=4, i3'=1+i3, i8'=2*i8, i9'=3*i9
   6: -4+i1 == 0 /\ i1'=5, i3'=1+i3
   7: (-5+i1 == 0 /\ i8 > 0) /\ i1'=5, i3'=1+i3, i8'=-1+i8
   8: (1-i4 <= 0 /\ -2+i1 == 0 /\ -3+i4 <= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
   9: (-2+i1 == 0 /\ i5 > 0) /\ i1'=3, i3'=1+i3
  10: (1 > 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0 /\ -1+i8 >= 0) /\ i3'=i3+i8, i8'=0
  11: (1 > 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+2*i5, i5'=0

Dependency graph:
0 -> 8, 0 -> 9, 0 -> 11
2 -> 8, 2 -> 9, 2 -> 11
4 -> 5, 4 -> 6
5 -> 5, 5 -> 6
6 -> 7, 6 -> 10
7 -> 7, 7 -> 10
8 -> 8, 8 -> 9, 8 -> 11
9 -> 2, 9 -> 4
10 -> 7
11 -> 8, 11 -> 9

	Trace

	0[(-1+i1 == 0)]
	11[(1 > 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{}
	{11[T]}
	
Step with 8

	Trace

	0[(-1+i1 == 0)]
	11[(1 > 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0)]
	8[(1-i4 <= 0 /\ -2+i1 == 0 /\ -3+i4 <= 0)]
	
	Blocked

	{}
	{}
	{9[T], 11[T]}
	{}
	
Accelerate

	Loop Acceleration

	Original rule:
	(1-i4 <= 0 /\ -2+i1 == 0 /\ -3+i4 <= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
	New rule:
	(-1+i4 >= 0 /\ -2+i1 >= 0 /\ 4-it110-i4 >= 0 /\ -1+it110 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it110, i4'=it110+i4

		-1+i4 >= 0 [0]: monotonic increase yields -1+i4 >= 0
		
		-2+i1 >= 0 [0]: unchanged
		
		3-i4 >= 0 [0]: montonic decrease yields 4-it110-i4 >= 0
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-1+i4 >= 0 -> -1+i4 >= 0, -2+i1 >= 0 -> -2+i1 >= 0, 3-i4 >= 0 -> 4-it110-i4 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-1+i4 >= 0 /\ -2+i1 >= 0 /\ 4-it110-i4 >= 0 /\ -1+it110 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it110, i4'=it110+i4
	New rule:
	(-1+i4 >= 0 /\ -2+i1 >= 0 /\ 4-it110-i4 >= 0 /\ -1+it110 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+it110, i4'=it110+i4
	
	Instantiation

	Original rule:
	(-1+i4 >= 0 /\ -2+i1 >= 0 /\ 4-it110-i4 >= 0 /\ -1+it110 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+it110, i4'=it110+i4
	New rule:
	(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0) /\ i3'=4+i3-i4, i4'=4

Start location: l0

Location map:
LoAT_sink -> 0
l0 -> 1
l1 -> 2
l2 -> 3
l3 -> 4
l4 -> 5

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=it2
   2: -3+i1 == 0 /\ i1'=2, i3'=1+i3, i5'=-1+i5
   4: -3+i1 == 0 /\ i1'=4, i3'=1+i3
   5: (-4+i1 == 0 /\ -i8+i9 < 0 /\ i9 > 0) /\ i1'=4, i3'=1+i3, i8'=2*i8, i9'=3*i9
   6: -4+i1 == 0 /\ i1'=5, i3'=1+i3
   7: (-5+i1 == 0 /\ i8 > 0) /\ i1'=5, i3'=1+i3, i8'=-1+i8
   8: (1-i4 <= 0 /\ -2+i1 == 0 /\ -3+i4 <= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
   9: (-2+i1 == 0 /\ i5 > 0) /\ i1'=3, i3'=1+i3
  10: (1 > 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0 /\ -1+i8 >= 0) /\ i3'=i3+i8, i8'=0
  11: (1 > 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+2*i5, i5'=0
  12: (0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0) /\ i3'=4+i3-i4, i4'=4

Dependency graph:
0 -> 8, 0 -> 9, 0 -> 11, 0 -> 12
2 -> 8, 2 -> 9, 2 -> 11, 2 -> 12
4 -> 5, 4 -> 6
5 -> 5, 5 -> 6
6 -> 7, 6 -> 10
7 -> 7, 7 -> 10
8 -> 8, 8 -> 9, 8 -> 11, 8 -> 12
9 -> 2, 9 -> 4
10 -> 7
11 -> 8, 11 -> 9, 11 -> 12
12 -> 8, 12 -> 9, 12 -> 11

	Trace

	0[(-1+i1 == 0)]
	11[(1 > 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0)]
	12[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{}
	{9[T], 11[T]}
	{8[T], 12[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	11[(1 > 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{}
	{9[T], 11[T], 12[T]}
	
Step with 8

	Trace

	0[(-1+i1 == 0)]
	11[(1 > 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0)]
	8[(1-i4 <= 0 /\ -2+i1 == 0 /\ -3+i4 <= 0)]
	
	Blocked

	{}
	{}
	{9[T], 11[T], 12[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	11[(1 > 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{}
	{8[T], 9[T], 11[T], 12[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{11[T]}
	
Step with 12

	Trace

	0[(-1+i1 == 0)]
	12[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{11[T]}
	{12[T]}
	
Step with 9

	Trace

	0[(-1+i1 == 0)]
	12[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	
	Blocked

	{}
	{11[T]}
	{12[T]}
	{}
	
Step with 2

	Trace

	0[(-1+i1 == 0)]
	12[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	2[(-3+i1 == 0)]
	
	Blocked

	{}
	{11[T]}
	{12[T]}
	{}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	12[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	
	Blocked

	{}
	{11[T]}
	{12[T]}
	{2[T]}
	
Step with 4

	Trace

	0[(-1+i1 == 0)]
	12[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	
	Blocked

	{}
	{11[T]}
	{12[T]}
	{2[T]}
	{}
	
Step with 5

	Trace

	0[(-1+i1 == 0)]
	12[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	5[(-4+i1 == 0 /\ -i8+i9 < 0 /\ i9 > 0)]
	
	Blocked

	{}
	{11[T]}
	{12[T]}
	{2[T]}
	{}
	{}
	
Step with 5

	Trace

	0[(-1+i1 == 0)]
	12[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	5[(-4+i1 == 0 /\ -i8+i9 < 0 /\ i9 > 0)]
	5[(-4+i1 == 0 /\ -i8+i9 < 0 /\ i9 > 0)]
	
	Blocked

	{}
	{11[T]}
	{12[T]}
	{2[T]}
	{}
	{}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	12[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	5[(-4+i1 == 0 /\ -i8+i9 < 0 /\ i9 > 0)]
	
	Blocked

	{}
	{11[T]}
	{12[T]}
	{2[T]}
	{}
	{5[T]}
	
Step with 6

	Trace

	0[(-1+i1 == 0)]
	12[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	5[(-4+i1 == 0 /\ -i8+i9 < 0 /\ i9 > 0)]
	6[(-4+i1 == 0)]
	
	Blocked

	{}
	{11[T]}
	{12[T]}
	{2[T]}
	{}
	{5[T]}
	{}
	
Step with 10

	Trace

	0[(-1+i1 == 0)]
	12[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	5[(-4+i1 == 0 /\ -i8+i9 < 0 /\ i9 > 0)]
	6[(-4+i1 == 0)]
	10[(1 > 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0 /\ -1+i8 >= 0)]
	
	Blocked

	{}
	{11[T]}
	{12[T]}
	{2[T]}
	{}
	{5[T]}
	{}
	{10[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	12[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	5[(-4+i1 == 0 /\ -i8+i9 < 0 /\ i9 > 0)]
	6[(-4+i1 == 0)]
	
	Blocked

	{}
	{11[T]}
	{12[T]}
	{2[T]}
	{}
	{5[T]}
	{10[T]}
	
Step with 7

	Trace

	0[(-1+i1 == 0)]
	12[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	5[(-4+i1 == 0 /\ -i8+i9 < 0 /\ i9 > 0)]
	6[(-4+i1 == 0)]
	7[(-5+i1 == 0 /\ i8 > 0)]
	
	Blocked

	{}
	{11[T]}
	{12[T]}
	{2[T]}
	{}
	{5[T]}
	{10[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	12[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	5[(-4+i1 == 0 /\ -i8+i9 < 0 /\ i9 > 0)]
	6[(-4+i1 == 0)]
	
	Blocked

	{}
	{11[T]}
	{12[T]}
	{2[T]}
	{}
	{5[T]}
	{7[T], 10[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	12[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	5[(-4+i1 == 0 /\ -i8+i9 < 0 /\ i9 > 0)]
	
	Blocked

	{}
	{11[T]}
	{12[T]}
	{2[T]}
	{}
	{5[T], 6[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	12[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	
	Blocked

	{}
	{11[T]}
	{12[T]}
	{2[T]}
	{5[T]}
	
Step with 6

	Trace

	0[(-1+i1 == 0)]
	12[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	6[(-4+i1 == 0)]
	
	Blocked

	{}
	{11[T]}
	{12[T]}
	{2[T]}
	{5[T]}
	{}
	
Step with 7

	Trace

	0[(-1+i1 == 0)]
	12[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	6[(-4+i1 == 0)]
	7[(-5+i1 == 0 /\ i8 > 0)]
	
	Blocked

	{}
	{11[T]}
	{12[T]}
	{2[T]}
	{5[T]}
	{}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	12[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	6[(-4+i1 == 0)]
	
	Blocked

	{}
	{11[T]}
	{12[T]}
	{2[T]}
	{5[T]}
	{7[T]}
	
Step with 10

	Trace

	0[(-1+i1 == 0)]
	12[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	6[(-4+i1 == 0)]
	10[(1 > 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0 /\ -1+i8 >= 0)]
	
	Blocked

	{}
	{11[T]}
	{12[T]}
	{2[T]}
	{5[T]}
	{7[T]}
	{10[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	12[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	6[(-4+i1 == 0)]
	
	Blocked

	{}
	{11[T]}
	{12[T]}
	{2[T]}
	{5[T]}
	{7[T], 10[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	12[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	
	Blocked

	{}
	{11[T]}
	{12[T]}
	{2[T]}
	{5[T], 6[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	12[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	
	Blocked

	{}
	{11[T]}
	{12[T]}
	{2[T], 4[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	12[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{11[T]}
	{9[T], 12[T]}
	
Step with 11

	Trace

	0[(-1+i1 == 0)]
	12[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0)]
	11[(1 > 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{11[T]}
	{9[T], 12[T]}
	{11[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	12[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{11[T]}
	{9[T], 11[T], 12[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{11[T], 12[T]}
	
Step with 8

	Trace

	0[(-1+i1 == 0)]
	8[(1-i4 <= 0 /\ -2+i1 == 0 /\ -3+i4 <= 0)]
	
	Blocked

	{}
	{11[T], 12[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{8[T], 11[T], 12[T]}
	
Step with 9

	Trace

	0[(-1+i1 == 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	
	Blocked

	{}
	{8[T], 11[T], 12[T]}
	{}
	
Step with 2

	Trace

	0[(-1+i1 == 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	2[(-3+i1 == 0)]
	
	Blocked

	{}
	{8[T], 11[T], 12[T]}
	{}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	
	Blocked

	{}
	{8[T], 11[T], 12[T]}
	{2[T]}
	
Step with 4

	Trace

	0[(-1+i1 == 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	
	Blocked

	{}
	{8[T], 11[T], 12[T]}
	{2[T]}
	{}
	
Step with 6

	Trace

	0[(-1+i1 == 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	6[(-4+i1 == 0)]
	
	Blocked

	{}
	{8[T], 11[T], 12[T]}
	{2[T]}
	{}
	{}
	
Step with 7

	Trace

	0[(-1+i1 == 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	6[(-4+i1 == 0)]
	7[(-5+i1 == 0 /\ i8 > 0)]
	
	Blocked

	{}
	{8[T], 11[T], 12[T]}
	{2[T]}
	{}
	{}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	6[(-4+i1 == 0)]
	
	Blocked

	{}
	{8[T], 11[T], 12[T]}
	{2[T]}
	{}
	{7[T]}
	
Step with 10

	Trace

	0[(-1+i1 == 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	6[(-4+i1 == 0)]
	10[(1 > 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0 /\ -1+i8 >= 0)]
	
	Blocked

	{}
	{8[T], 11[T], 12[T]}
	{2[T]}
	{}
	{7[T]}
	{10[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	6[(-4+i1 == 0)]
	
	Blocked

	{}
	{8[T], 11[T], 12[T]}
	{2[T]}
	{}
	{7[T], 10[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	
	Blocked

	{}
	{8[T], 11[T], 12[T]}
	{2[T]}
	{6[T]}
	
Step with 5

	Trace

	0[(-1+i1 == 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	5[(-4+i1 == 0 /\ -i8+i9 < 0 /\ i9 > 0)]
	
	Blocked

	{}
	{8[T], 11[T], 12[T]}
	{2[T]}
	{6[T]}
	{}
	
Step with 5

	Trace

	0[(-1+i1 == 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	5[(-4+i1 == 0 /\ -i8+i9 < 0 /\ i9 > 0)]
	5[(-4+i1 == 0 /\ -i8+i9 < 0 /\ i9 > 0)]
	
	Blocked

	{}
	{8[T], 11[T], 12[T]}
	{2[T]}
	{6[T]}
	{}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	5[(-4+i1 == 0 /\ -i8+i9 < 0 /\ i9 > 0)]
	
	Blocked

	{}
	{8[T], 11[T], 12[T]}
	{2[T]}
	{6[T]}
	{5[T]}
	
Step with 6

	Trace

	0[(-1+i1 == 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	5[(-4+i1 == 0 /\ -i8+i9 < 0 /\ i9 > 0)]
	6[(-4+i1 == 0)]
	
	Blocked

	{}
	{8[T], 11[T], 12[T]}
	{2[T]}
	{6[T]}
	{5[T]}
	{}
	
Step with 10

	Trace

	0[(-1+i1 == 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	5[(-4+i1 == 0 /\ -i8+i9 < 0 /\ i9 > 0)]
	6[(-4+i1 == 0)]
	10[(1 > 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0 /\ -1+i8 >= 0)]
	
	Blocked

	{}
	{8[T], 11[T], 12[T]}
	{2[T]}
	{6[T]}
	{5[T]}
	{}
	{10[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	5[(-4+i1 == 0 /\ -i8+i9 < 0 /\ i9 > 0)]
	6[(-4+i1 == 0)]
	
	Blocked

	{}
	{8[T], 11[T], 12[T]}
	{2[T]}
	{6[T]}
	{5[T]}
	{10[T]}
	
Step with 7

	Trace

	0[(-1+i1 == 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	5[(-4+i1 == 0 /\ -i8+i9 < 0 /\ i9 > 0)]
	6[(-4+i1 == 0)]
	7[(-5+i1 == 0 /\ i8 > 0)]
	
	Blocked

	{}
	{8[T], 11[T], 12[T]}
	{2[T]}
	{6[T]}
	{5[T]}
	{10[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	5[(-4+i1 == 0 /\ -i8+i9 < 0 /\ i9 > 0)]
	6[(-4+i1 == 0)]
	
	Blocked

	{}
	{8[T], 11[T], 12[T]}
	{2[T]}
	{6[T]}
	{5[T]}
	{7[T], 10[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	5[(-4+i1 == 0 /\ -i8+i9 < 0 /\ i9 > 0)]
	
	Blocked

	{}
	{8[T], 11[T], 12[T]}
	{2[T]}
	{6[T]}
	{5[T], 6[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	
	Blocked

	{}
	{8[T], 11[T], 12[T]}
	{2[T]}
	{5[T], 6[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	9[(-2+i1 == 0 /\ i5 > 0)]
	
	Blocked

	{}
	{8[T], 11[T], 12[T]}
	{2[T], 4[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{8[T], 9[T], 11[T], 12[T]}
	
Backtrack

	Trace

	Blocked

	{0[T]}
	
Accept

Poly(n^1)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(EXP))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄, X₅
  Temp_Vars:  U, V
  Locations:  l0, l1, l2, l3, l4
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃, X₄, X₅) → l1(U, X₁, X₂, X₃, X₄, X₅)
  t₁: l1(X₀, X₁, X₂, X₃, X₄, X₅) → l1(1+X₀, X₁, X₂, X₃, X₄, X₅) :|: X₀ ≤ 3 ∧ 1 ≤ X₀ ∧ 0 ≤ V ∧ V ≤ 0
  t₃: l1(X₀, X₁, X₂, X₃, X₄, X₅) → l2(X₀, X₁, X₂, X₃, X₄, X₅) :|: V ≤ 1 ∧ 1 ≤ V ∧ 1 ≤ X₁
  t₂: l2(X₀, X₁, X₂, X₃, X₄, X₅) → l1(X₀, X₁-1, X₂, X₃, X₄, X₅)
  t₄: l2(X₀, X₁, X₂, X₃, X₄, X₅) → l3(X₀, X₁, X₂, X₃, X₄, X₅)
  t₅: l3(X₀, X₁, X₂, X₃, X₄, X₅) → l3(X₀, X₁, X₂, X₃, 2⋅X₄, 3⋅X₅) :|: 1+X₅ ≤ X₄ ∧ 1 ≤ X₅
  t₆: l3(X₀, X₁, X₂, X₃, X₄, X₅) → l4(X₀, X₁, X₂, X₃, X₄, X₅)
  t₇: l4(X₀, X₁, X₂, X₃, X₄, X₅) → l4(X₀, X₁, X₂, X₃, X₄-1, X₅) :|: 1 ≤ X₄


Preprocessing
  Eliminate variables [X₂; X₃] that do not contribute to the problem


  Found invariant 1 ≤ X₁ for location l2


  Found invariant 1 ≤ X₁ for location l4


  Found invariant 1 ≤ X₁ for location l3


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃
  Temp_Vars:  U, V
  Locations:  l0, l1, l2, l3, l4
  Return Locations:  
  Transitions:
  t₈: l0(X₀, X₁, X₂, X₃) → l1(U, X₁, X₂, X₃)
  t₉: l1(X₀, X₁, X₂, X₃) → l1(1+X₀, X₁, X₂, X₃) :|: X₀ ≤ 3 ∧ 1 ≤ X₀ ∧ 0 ≤ V ∧ V ≤ 0
  t₁₀: l1(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, X₃) :|: V ≤ 1 ∧ 1 ≤ V ∧ 1 ≤ X₁
  t₁₁: l2(X₀, X₁, X₂, X₃) → l1(X₀, X₁-1, X₂, X₃) :|: 1 ≤ X₁
  t₁₂: l2(X₀, X₁, X₂, X₃) → l3(X₀, X₁, X₂, X₃) :|: 1 ≤ X₁
  t₁₃: l3(X₀, X₁, X₂, X₃) → l3(X₀, X₁, 2⋅X₂, 3⋅X₃) :|: 1+X₃ ≤ X₂ ∧ 1 ≤ X₃ ∧ 1 ≤ X₁
  t₁₄: l3(X₀, X₁, X₂, X₃) → l4(X₀, X₁, X₂, X₃) :|: 1 ≤ X₁
  t₁₅: l4(X₀, X₁, X₂, X₃) → l4(X₀, X₁, X₂-1, X₃) :|: 1 ≤ X₂ ∧ 1 ≤ X₁


MPRF for transition t₁₀: l1(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, X₃) :|: V ≤ 1 ∧ 1 ≤ V ∧ 1 ≤ X₁ of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l1: [X₁]
    • l2: [X₁-1]




MPRF for transition t₁₁: l2(X₀, X₁, X₂, X₃) → l1(X₀, X₁-1, X₂, X₃) :|: 1 ≤ X₁ of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l1: [X₁]
    • l2: [X₁]




  Found invariant 1 ≤ X₁ for location l2


  Found invariant X₀ ≤ 4 ∧ 2 ≤ X₀ for location l1_v1


  Found invariant 1 ≤ X₁ for location l4


  Found invariant 1 ≤ X₁ for location l3


Analysing control-flow refined program
  knowledge_propagation leads to new time bound X₁+1 {O(n)} for transition t₅₈: l1(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, X₃) :|: V ≤ 1 ∧ 1 ≤ V ∧ 1 ≤ X₁


  knowledge_propagation leads to new time bound X₁+1 {O(n)} for transition t₅₉: l1(X₀, X₁, X₂, X₃) → l1_v1(1+X₀, X₁, X₂, X₃) :|: X₀ ≤ 3 ∧ 1 ≤ X₀ ∧ 0 ≤ V ∧ V ≤ 0


MPRF for transition t₆₀: l1_v1(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, X₃) :|: V ≤ 1 ∧ 1 ≤ V ∧ 1 ≤ X₁ ∧ X₀ ≤ 4 ∧ 1 ≤ X₀ ∧ 2 ≤ X₀ of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l1: [X₁]
    • l1_v1: [X₁]
    • l2: [X₁-1]




MPRF for transition t₆₁: l1_v1(X₀, X₁, X₂, X₃) → l1_v1(1+X₀, X₁, X₂, X₃) :|: X₀ ≤ 3 ∧ 1 ≤ X₀ ∧ 0 ≤ V ∧ V ≤ 0 ∧ X₀ ≤ 4 ∧ 2 ≤ X₀ of depth 1:
  new bound:
    9⋅X₁+10 {O(n)}

  MPRF:
    • l1: [1]
    • l1_v1: [5-X₀]
    • l2: [1]




CFR: Improvement to new bound with the following program: 
  method: PartialEvaluation new bound: 
    O(n)

  cfr-program: 
    Start:  l0
    Program_Vars:  X₀, X₁, X₂, X₃
    Temp_Vars:  U, V
    Locations:  l0, l1, l1_v1, l2, l3, l4
    Return Locations:  
    Transitions:
    t₈: l0(X₀, X₁, X₂, X₃) → l1(U, X₁, X₂, X₃)
    t₅₉: l1(X₀, X₁, X₂, X₃) → l1_v1(1+X₀, X₁, X₂, X₃) :|: X₀ ≤ 3 ∧ 1 ≤ X₀ ∧ 0 ≤ V ∧ V ≤ 0
    t₁₀: l1(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, X₃) :|: V ≤ 1 ∧ 1 ≤ V ∧ 1 ≤ X₁
    t₅₈: l1(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, X₃) :|: V ≤ 1 ∧ 1 ≤ V ∧ 1 ≤ X₁
    t₆₁: l1_v1(X₀, X₁, X₂, X₃) → l1_v1(1+X₀, X₁, X₂, X₃) :|: X₀ ≤ 3 ∧ 1 ≤ X₀ ∧ 0 ≤ V ∧ V ≤ 0 ∧ X₀ ≤ 4 ∧ 2 ≤ X₀
    t₆₀: l1_v1(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, X₃) :|: V ≤ 1 ∧ 1 ≤ V ∧ 1 ≤ X₁ ∧ X₀ ≤ 4 ∧ 1 ≤ X₀ ∧ 2 ≤ X₀
    t₁₁: l2(X₀, X₁, X₂, X₃) → l1(X₀, X₁-1, X₂, X₃) :|: 1 ≤ X₁
    t₁₂: l2(X₀, X₁, X₂, X₃) → l3(X₀, X₁, X₂, X₃) :|: 1 ≤ X₁
    t₁₃: l3(X₀, X₁, X₂, X₃) → l3(X₀, X₁, 2⋅X₂, 3⋅X₃) :|: 1+X₃ ≤ X₂ ∧ 1 ≤ X₃ ∧ 1 ≤ X₁
    t₁₄: l3(X₀, X₁, X₂, X₃) → l4(X₀, X₁, X₂, X₃) :|: 1 ≤ X₁
    t₁₅: l4(X₀, X₁, X₂, X₃) → l4(X₀, X₁, X₂-1, X₃) :|: 1 ≤ X₂ ∧ 1 ≤ X₁




TWN: t₁₃: l3→l3


  cycle: [t₁₃: l3→l3]
  original loop: (1+X₃ ≤ X₂ ∧ 1 ≤ X₃ ∧ 1 ≤ X₁,(X₁,X₂,X₃) -> (X₁,2⋅X₂,3⋅X₃))
  transformed loop: (1+X₃ ≤ X₂ ∧ 1 ≤ X₃ ∧ 1 ≤ X₁,(X₁,X₂,X₃) -> (X₁,2⋅X₂,3⋅X₃))
  loop: (1+X₃ ≤ X₂ ∧ 1 ≤ X₃ ∧ 1 ≤ X₁,(X₁,X₂,X₃) -> (X₁,2⋅X₂,3⋅X₃))
  order: [X₃; X₂; X₁]
closed-form:  X₃: X₃⋅(3)^n
  X₂: X₂⋅(2)^n
  X₁: X₁

  Termination: true
  Formula: 
    0 ≤ 1 ∧ 1 ≤ 0 ∧ 1 ≤ X₁ ∧ 1 ≤ X₃ ∧ 0 ≤ X₂ ∧ X₂ ≤ 0 ∧ 0 ≤ X₃ ∧ X₃ ≤ 0
     ∨ 1 ≤ 0 ∧ 1 ≤ X₁ ∧ 1 ≤ X₃ ∧ 0 ≤ X₂ ∧ X₂ ≤ 0 ∧ 0 ≤ X₃ ∧ X₃ ≤ 0
     ∨ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 1 ≤ X₃ ∧ 0 ≤ X₃ ∧ X₃ ≤ 0
     ∨ 1 ≤ X₁ ∧ 1 ≤ X₃ ∧ 1+X₃ ≤ 0



Stabilization-Threshold for: 1+X₃ ≤ X₂
  alphas_abs: X₂
  M: 0
  N: 1
  Bound: 2⋅X₂+2 {O(n)}

TWN - Lifting for [13: l3->l3] of 2⋅X₂+4 {O(n)}
relevant size-bounds w.r.t. t₁₂: l2→l3:
X₂: X₂ {O(n)}
Runtime-bound of t₁₂: 1 {O(1)}
Results in: 2⋅X₂+4 {O(n)}
MPRF for transition t₁₅: l4(X₀, X₁, X₂, X₃) → l4(X₀, X₁, X₂-1, X₃) :|: 1 ≤ X₂ ∧ 1 ≤ X₁ of depth 1:
  new bound:
    2^(2⋅X₂+4)⋅X₂+X₂ {O(EXP)}

  MPRF:
    • l4: [X₂]




  Found invariant 1 ≤ X₁ for location l2


  Found invariant X₀ ≤ 4 ∧ 2 ≤ X₀ for location l1_v1


  Found invariant 1 ≤ X₁ for location l4


  Found invariant 1 ≤ X₁ for location l3


  Found invariant 0 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 1 ≤ X₁ for location l4_v1


All Bounds
Timebounds
  Overall timebound:2^(2⋅X₂+4)⋅X₂+14⋅X₁+3⋅X₂+19 {O(EXP)}
    t₈: 1 {O(1)}
    t₁₀: X₁ {O(n)}
    t₁₁: X₁ {O(n)}
    t₁₂: 1 {O(1)}
    t₁₃: 2⋅X₂+4 {O(n)}
    t₁₄: 1 {O(1)}
    t₁₅: 2^(2⋅X₂+4)⋅X₂+X₂ {O(EXP)}
    t₅₈: X₁+1 {O(n)}
    t₅₉: X₁+1 {O(n)}
    t₆₀: X₁ {O(n)}
    t₆₁: 9⋅X₁+10 {O(n)}


Costbounds
  Overall costbound: 2^(2⋅X₂+4)⋅X₂+14⋅X₁+3⋅X₂+19 {O(EXP)}
    t₈: 1 {O(1)}
    t₁₀: X₁ {O(n)}
    t₁₁: X₁ {O(n)}
    t₁₂: 1 {O(1)}
    t₁₃: 2⋅X₂+4 {O(n)}
    t₁₄: 1 {O(1)}
    t₁₅: 2^(2⋅X₂+4)⋅X₂+X₂ {O(EXP)}
    t₅₈: X₁+1 {O(n)}
    t₅₉: X₁+1 {O(n)}
    t₆₀: X₁ {O(n)}
    t₆₁: 9⋅X₁+10 {O(n)}


Sizebounds
    t₈, X₁: X₁ {O(n)}
    t₈, X₂: X₂ {O(n)}
    t₈, X₃: X₃ {O(n)}
    t₁₀, X₁: X₁ {O(n)}
    t₁₀, X₂: X₂ {O(n)}
    t₁₀, X₃: X₃ {O(n)}
    t₁₁, X₁: X₁ {O(n)}
    t₁₁, X₂: X₂ {O(n)}
    t₁₁, X₃: X₃ {O(n)}
    t₁₂, X₁: X₁ {O(n)}
    t₁₂, X₂: X₂ {O(n)}
    t₁₂, X₃: X₃ {O(n)}
    t₁₃, X₁: X₁ {O(n)}
    t₁₃, X₂: 2^(2⋅X₂+4)⋅X₂ {O(EXP)}
    t₁₃, X₃: 3^(2⋅X₂+4)⋅X₃ {O(EXP)}
    t₁₄, X₁: 2⋅X₁ {O(n)}
    t₁₄, X₂: 2^(2⋅X₂+4)⋅X₂+X₂ {O(EXP)}
    t₁₄, X₃: 3^(2⋅X₂+4)⋅X₃+X₃ {O(EXP)}
    t₁₅, X₁: 2⋅X₁ {O(n)}
    t₁₅, X₂: 2^(2⋅X₂+4)⋅X₂+X₂ {O(EXP)}
    t₁₅, X₃: 3^(2⋅X₂+4)⋅X₃+X₃ {O(EXP)}
    t₅₈, X₁: X₁ {O(n)}
    t₅₈, X₂: X₂ {O(n)}
    t₅₈, X₃: X₃ {O(n)}
    t₅₉, X₀: 4 {O(1)}
    t₅₉, X₁: X₁ {O(n)}
    t₅₉, X₂: X₂ {O(n)}
    t₅₉, X₃: X₃ {O(n)}
    t₆₀, X₀: 4 {O(1)}
    t₆₀, X₁: X₁ {O(n)}
    t₆₀, X₂: X₂ {O(n)}
    t₆₀, X₃: X₃ {O(n)}
    t₆₁, X₀: 4 {O(1)}
    t₆₁, X₁: X₁ {O(n)}
    t₆₁, X₂: X₂ {O(n)}
    t₆₁, X₃: X₃ {O(n)}

