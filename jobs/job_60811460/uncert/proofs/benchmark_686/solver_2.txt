WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_rank1_8/6,eval_rank1_9/6,eval_rank1_bb3_in/6,eval_rank1_bb4_in/6,eval_rank1_bb5_in/6]
1. recursive  : [eval_rank1_13/18,eval_rank1_14/18,eval_rank1_6/18,eval_rank1_7/18,eval_rank1__critedge_in/18,eval_rank1_bb1_in/18,eval_rank1_bb2_in/18,eval_rank1_bb3_in_loop_cont/19,eval_rank1_bb6_in/18]
2. non_recursive  : [eval_rank1_stop/10]
3. non_recursive  : [eval_rank1_bb7_in/10]
4. non_recursive  : [exit_location/1]
5. non_recursive  : [eval_rank1_bb1_in_loop_cont/11]
6. non_recursive  : [eval_rank1_5/10]
7. non_recursive  : [eval_rank1_4/10]
8. non_recursive  : [eval_rank1_3/10]
9. non_recursive  : [eval_rank1_2/10]
10. non_recursive  : [eval_rank1_1/10]
11. non_recursive  : [eval_rank1_0/10]
12. non_recursive  : [eval_rank1_bb0_in/10]
13. non_recursive  : [eval_rank1_start/10]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_rank1_bb3_in/6
1. SCC is partially evaluated into eval_rank1_bb1_in/18
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_rank1_bb1_in_loop_cont/11
6. SCC is partially evaluated into eval_rank1_5/10
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into eval_rank1_start/10

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_rank1_bb3_in/6 
* CE 14 is refined into CE [15] 
* CE 11 is refined into CE [16] 
* CE 13 is refined into CE [17] 
* CE 12 is refined into CE [18] 


### Cost equations --> "Loop" of eval_rank1_bb3_in/6 
* CEs [18] --> Loop 15 
* CEs [15] --> Loop 16 
* CEs [16] --> Loop 17 
* CEs [17] --> Loop 18 

### Ranking functions of CR eval_rank1_bb3_in(V_5,V_m,V_y_1,B,C,D) 
* RF of phase [15]: [V_m-V_y_1+1]

#### Partial ranking functions of CR eval_rank1_bb3_in(V_5,V_m,V_y_1,B,C,D) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    V_m-V_y_1+1


### Specialization of cost equations eval_rank1_bb1_in/18 
* CE 7 is refined into CE [19] 
* CE 6 is refined into CE [20] 
* CE 5 is refined into CE [21,22] 
* CE 8 is refined into CE [23] 
* CE 3 is refined into CE [24] 
* CE 4 is refined into CE [25,26,27,28] 


### Cost equations --> "Loop" of eval_rank1_bb1_in/18 
* CEs [24] --> Loop 19 
* CEs [28] --> Loop 20 
* CEs [27] --> Loop 21 
* CEs [25] --> Loop 22 
* CEs [26] --> Loop 23 
* CEs [19] --> Loop 24 
* CEs [20] --> Loop 25 
* CEs [23] --> Loop 26 
* CEs [22] --> Loop 27 
* CEs [21] --> Loop 28 

### Ranking functions of CR eval_rank1_bb1_in(V_2,V_5,V_8,V_m,V_x_0,V_x_1,V_y_0,V_y_1,V_y_2,B,C,D,E,F,G,H,I,J) 

#### Partial ranking functions of CR eval_rank1_bb1_in(V_2,V_5,V_8,V_m,V_x_0,V_x_1,V_y_0,V_y_1,V_y_2,B,C,D,E,F,G,H,I,J) 
* Partial RF of phase [19,20,21,22,23]:
  - RF of loop [19:1,21:1]:
    V_y_0+1 depends on loops [20:1,23:1] 
  - RF of loop [20:1,21:1,22:1,23:1]:
    V_x_0+1
  - RF of loop [22:1]:
    -V_m+V_y_0 depends on loops [20:1,23:1] 
    V_y_0 depends on loops [20:1,23:1] 


### Specialization of cost equations eval_rank1_bb1_in_loop_cont/11 
* CE 9 is refined into CE [29] 
* CE 10 is refined into CE [30] 


### Cost equations --> "Loop" of eval_rank1_bb1_in_loop_cont/11 
* CEs [29] --> Loop 29 
* CEs [30] --> Loop 30 

### Ranking functions of CR eval_rank1_bb1_in_loop_cont(A,B,C,D,E,F,G,H,I,J,K) 

#### Partial ranking functions of CR eval_rank1_bb1_in_loop_cont(A,B,C,D,E,F,G,H,I,J,K) 


### Specialization of cost equations eval_rank1_5/10 
* CE 2 is refined into CE [31,32,33,34,35,36,37] 


### Cost equations --> "Loop" of eval_rank1_5/10 
* CEs [33] --> Loop 31 
* CEs [31,32,35,36] --> Loop 32 
* CEs [37] --> Loop 33 
* CEs [34] --> Loop 34 

### Ranking functions of CR eval_rank1_5(V_2,V_5,V_8,V_m,V_x_0,V_x_1,V_y_0,V_y_1,V_y_2,B) 

#### Partial ranking functions of CR eval_rank1_5(V_2,V_5,V_8,V_m,V_x_0,V_x_1,V_y_0,V_y_1,V_y_2,B) 


### Specialization of cost equations eval_rank1_start/10 
* CE 1 is refined into CE [38,39,40,41] 


### Cost equations --> "Loop" of eval_rank1_start/10 
* CEs [41] --> Loop 35 
* CEs [40] --> Loop 36 
* CEs [39] --> Loop 37 
* CEs [38] --> Loop 38 

### Ranking functions of CR eval_rank1_start(V_2,V_5,V_8,V_m,V_x_0,V_x_1,V_y_0,V_y_1,V_y_2,B) 

#### Partial ranking functions of CR eval_rank1_start(V_2,V_5,V_8,V_m,V_x_0,V_x_1,V_y_0,V_y_1,V_y_2,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_rank1_bb3_in(V_5,V_m,V_y_1,B,C,D):
* Chain [[15],18]: 1*it(15)+0
  Such that:it(15) =< -V_y_1+D

  with precondition: [B=2,V_m+1=D,V_y_1>=0,C>=1,V_m>=V_y_1] 

* Chain [[15],17]: 1*it(15)+0
  Such that:it(15) =< -V_y_1+D

  with precondition: [B=2,0>=C,V_y_1>=0,D>=V_y_1+1,V_m>=D] 

* Chain [[15],16]: 1*it(15)+0
  Such that:it(15) =< V_m-V_y_1+1

  with precondition: [B=3,V_y_1>=0,V_m>=V_y_1] 

* Chain [18]: 0
  with precondition: [B=2,C=V_5,V_y_1=D,V_m>=0,V_y_1>=V_m+1] 

* Chain [17]: 0
  with precondition: [B=2,V_y_1=D,0>=C,V_y_1>=0,V_m>=V_y_1] 

* Chain [16]: 0
  with precondition: [B=3,V_m>=0,V_y_1>=0] 


#### Cost of chains of eval_rank1_bb1_in(V_2,V_5,V_8,V_m,V_x_0,V_x_1,V_y_0,V_y_1,V_y_2,B,C,D,E,F,G,H,I,J):
* Chain [[19,20,21,22,23],28]: 1*it(19)+2*it(20)+2*it(21)+1*s(5)+1*s(6)+0
  Such that:aux(51) =< V_m
aux(52) =< V_m+V_x_0
aux(36) =< V_m+V_x_0-V_y_0+1
aux(52) =< V_m+2*V_x_0
aux(54) =< V_x_0
aux(53) =< V_x_0+1
aux(56) =< V_y_0
aux(55) =< V_y_0+1
it(20) =< aux(53)
it(21) =< aux(53)
it(20) =< aux(54)
it(21) =< aux(54)
aux(38) =< aux(51)+1
aux(12) =< aux(51)
aux(11) =< it(20)*aux(51)
aux(1) =< it(20)*aux(51)
s(5) =< it(20)*aux(51)
aux(13) =< it(20)*aux(12)
aux(4) =< aux(11)
aux(1) =< it(20)*aux(12)
aux(4) =< aux(13)
aux(2) =< it(20)*aux(38)
s(6) =< it(20)*aux(38)
it(19) =< aux(2)+aux(1)+aux(55)
it(21) =< aux(2)+aux(1)+aux(55)
it(19) =< aux(2)+aux(4)+aux(56)
it(21) =< aux(2)+aux(4)+aux(56)
s(6) =< it(19)+aux(52)
s(6) =< it(19)+aux(36)

  with precondition: [B=3,V_x_0>=0,V_y_0>=0,V_m>=V_x_0,V_x_0+V_y_0>=1] 

* Chain [[19,20,21,22,23],27]: 1*it(19)+2*it(20)+2*it(21)+1*s(5)+1*s(6)+1*s(7)+0
  Such that:aux(51) =< V_m
s(7) =< V_m+1
aux(52) =< V_m+V_x_0-V_y_0
aux(36) =< V_m+V_x_0-V_y_0+1
aux(52) =< V_m+2*V_x_0
aux(54) =< V_x_0
aux(53) =< V_x_0+1
aux(56) =< V_y_0
aux(55) =< V_y_0+1
it(20) =< aux(53)
it(21) =< aux(53)
it(20) =< aux(54)
it(21) =< aux(54)
aux(38) =< aux(51)+1
aux(12) =< aux(51)
aux(11) =< it(20)*aux(51)
aux(1) =< it(20)*aux(51)
s(5) =< it(20)*aux(51)
aux(13) =< it(20)*aux(12)
aux(4) =< aux(11)
aux(1) =< it(20)*aux(12)
aux(4) =< aux(13)
aux(2) =< it(20)*aux(38)
s(6) =< it(20)*aux(38)
it(19) =< aux(2)+aux(1)+aux(55)
it(21) =< aux(2)+aux(1)+aux(55)
it(19) =< aux(2)+aux(4)+aux(56)
it(21) =< aux(2)+aux(4)+aux(56)
s(6) =< it(19)+aux(52)
s(6) =< it(19)+aux(36)

  with precondition: [B=3,V_x_0>=0,V_y_0>=0,V_m>=V_x_0,V_x_0+V_y_0>=1] 

* Chain [[19,20,21,22,23],26]: 1*it(19)+2*it(20)+2*it(21)+1*s(5)+1*s(6)+0
  Such that:aux(51) =< V_m
aux(52) =< V_m+V_x_0+1
aux(36) =< V_m+V_x_0-V_y_0+1
aux(57) =< V_x_0+1
aux(58) =< V_y_0+1
it(20) =< aux(57)
it(21) =< aux(57)
aux(38) =< aux(51)+1
aux(12) =< aux(51)
aux(11) =< it(20)*aux(51)
aux(1) =< it(20)*aux(51)
s(5) =< it(20)*aux(51)
aux(13) =< it(20)*aux(12)
aux(4) =< aux(11)
aux(1) =< it(20)*aux(12)
aux(4) =< aux(13)
aux(2) =< it(20)*aux(38)
s(6) =< it(20)*aux(38)
it(19) =< aux(2)+aux(1)+aux(58)
it(21) =< aux(2)+aux(1)+aux(58)
it(19) =< aux(2)+aux(4)+aux(58)
it(21) =< aux(2)+aux(4)+aux(58)
s(6) =< it(19)+aux(52)
s(6) =< it(19)+aux(36)

  with precondition: [B=3,V_x_0>=0,V_y_0>=0,V_m>=V_x_0] 

* Chain [[19,20,21,22,23],25]: 1*it(19)+2*it(20)+2*it(21)+1*s(5)+1*s(6)+0
  Such that:aux(51) =< V_m
aux(36) =< V_m+V_x_0-V_y_0+1
aux(52) =< V_m-V_y_0+H+1
aux(52) =< V_x_0-V_y_0+J
aux(55) =< V_y_0+1
aux(56) =< V_y_0-J+1
aux(59) =< V_x_0+1
it(20) =< aux(59)
it(21) =< aux(59)
aux(38) =< aux(51)+1
aux(12) =< aux(51)
aux(11) =< it(20)*aux(51)
aux(1) =< it(20)*aux(51)
s(5) =< it(20)*aux(51)
aux(13) =< it(20)*aux(12)
aux(4) =< aux(11)
aux(1) =< it(20)*aux(12)
aux(4) =< aux(13)
aux(2) =< it(20)*aux(38)
s(6) =< it(20)*aux(38)
it(19) =< aux(2)+aux(1)+aux(55)
it(21) =< aux(2)+aux(1)+aux(55)
it(19) =< aux(2)+aux(4)+aux(56)
it(21) =< aux(2)+aux(4)+aux(56)
s(6) =< it(19)+aux(52)
s(6) =< it(19)+aux(36)

  with precondition: [B=4,E+1=0,F+1=0,G+1=0,H+1=I,H+1=J,V_x_0>=0,V_y_0>=0,C>=1,H+1>=0,V_m>=V_x_0] 

* Chain [[19,20,21,22,23],24]: 1*it(19)+2*it(20)+2*it(21)+1*s(5)+1*s(6)+0
  Such that:aux(51) =< V_m
aux(36) =< V_m+V_x_0-V_y_0+1
aux(52) =< V_m-V_y_0-G
aux(53) =< V_x_0+1
aux(52) =< V_x_0-V_y_0-G
aux(54) =< V_x_0-F
aux(60) =< V_y_0+1
it(20) =< aux(53)
it(21) =< aux(53)
it(20) =< aux(54)
it(21) =< aux(54)
aux(38) =< aux(51)+1
aux(12) =< aux(51)
aux(11) =< it(20)*aux(51)
aux(1) =< it(20)*aux(51)
s(5) =< it(20)*aux(51)
aux(13) =< it(20)*aux(12)
aux(4) =< aux(11)
aux(1) =< it(20)*aux(12)
aux(4) =< aux(13)
aux(2) =< it(20)*aux(38)
s(6) =< it(20)*aux(38)
it(19) =< aux(2)+aux(1)+aux(60)
it(21) =< aux(2)+aux(1)+aux(60)
it(19) =< aux(2)+aux(4)+aux(60)
it(21) =< aux(2)+aux(4)+aux(60)
s(6) =< it(19)+aux(52)
s(6) =< it(19)+aux(36)

  with precondition: [B=4,H+1=0,J=0,F=G,V_x_0>=0,V_y_0>=0,F+1>=0,V_m>=V_x_0,V_x_0>=F] 

* Chain [28]: 0
  with precondition: [B=3,V_x_0>=0,V_y_0>=0,V_m>=V_x_0] 

* Chain [27]: 1*s(7)+0
  Such that:s(7) =< V_m-V_y_0+1

  with precondition: [B=3,V_x_0>=0,V_y_0>=0,V_m>=V_x_0,V_m>=V_y_0] 

* Chain [26]: 0
  with precondition: [B=3,V_y_0+1>=0,V_m>=V_x_0] 

* Chain [25]: 0
  with precondition: [B=4,C=V_2,D=V_5,E=V_8,G=V_x_1,I=V_y_1,J=V_y_2,V_x_0=F,V_y_0=H,0>=V_x_0+1,V_y_0+1>=0,V_m>=V_x_0] 


#### Cost of chains of eval_rank1_bb1_in_loop_cont(A,B,C,D,E,F,G,H,I,J,K):
* Chain [30]: 0
  with precondition: [A=3] 

* Chain [29]: 0
  with precondition: [A=4] 


#### Cost of chains of eval_rank1_5(V_2,V_5,V_8,V_m,V_x_0,V_x_1,V_y_0,V_y_1,V_y_2,B):
* Chain [34]: 0
  with precondition: [] 

* Chain [33]: 0
  with precondition: [0>=V_m+1] 

* Chain [32]: 7*s(69)+6*s(70)+3*s(75)+2*s(79)+3*s(80)+1*s(116)+0
  Such that:aux(71) =< 1
aux(72) =< V_m
aux(73) =< V_m+1
aux(74) =< 2*V_m+1
s(69) =< aux(73)
s(70) =< aux(73)
s(71) =< aux(72)+1
s(72) =< aux(72)
s(73) =< s(69)*aux(72)
s(74) =< s(69)*aux(72)
s(75) =< s(69)*aux(72)
s(76) =< s(69)*s(72)
s(77) =< s(73)
s(74) =< s(69)*s(72)
s(77) =< s(76)
s(78) =< s(69)*s(71)
s(79) =< s(69)*s(71)
s(80) =< s(78)+s(74)+aux(71)
s(70) =< s(78)+s(74)+aux(71)
s(80) =< s(78)+s(77)+aux(71)
s(70) =< s(78)+s(77)+aux(71)
s(79) =< s(80)+aux(74)
s(116) =< s(69)*s(71)
s(116) =< s(80)+aux(73)
s(116) =< s(80)+aux(74)

  with precondition: [V_m>=0] 

* Chain [31]: 1*s(118)+4*s(128)+4*s(129)+2*s(134)+2*s(138)+2*s(139)+0
  Such that:s(127) =< 1
s(122) =< 2*V_m+1
s(123) =< 3*V_m
aux(75) =< V_m
aux(76) =< V_m+1
aux(77) =< 2*V_m
s(118) =< aux(76)
s(119) =< aux(77)
s(119) =< s(123)
s(128) =< aux(76)
s(129) =< aux(76)
s(128) =< aux(75)
s(129) =< aux(75)
s(130) =< aux(75)+1
s(131) =< aux(75)
s(132) =< s(128)*aux(75)
s(133) =< s(128)*aux(75)
s(134) =< s(128)*aux(75)
s(135) =< s(128)*s(131)
s(136) =< s(132)
s(133) =< s(128)*s(131)
s(136) =< s(135)
s(137) =< s(128)*s(130)
s(138) =< s(128)*s(130)
s(139) =< s(137)+s(133)+s(127)
s(129) =< s(137)+s(133)+s(127)
s(139) =< s(137)+s(136)
s(129) =< s(137)+s(136)
s(138) =< s(139)+s(119)
s(138) =< s(139)+s(122)

  with precondition: [V_m>=1] 


#### Cost of chains of eval_rank1_start(V_2,V_5,V_8,V_m,V_x_0,V_x_1,V_y_0,V_y_1,V_y_2,B):
* Chain [38]: 0
  with precondition: [] 

* Chain [37]: 0
  with precondition: [0>=V_m+1] 

* Chain [36]: 7*s(145)+6*s(146)+3*s(151)+2*s(155)+3*s(156)+1*s(157)+0
  Such that:s(141) =< 1
s(142) =< V_m
s(143) =< V_m+1
s(144) =< 2*V_m+1
s(145) =< s(143)
s(146) =< s(143)
s(147) =< s(142)+1
s(148) =< s(142)
s(149) =< s(145)*s(142)
s(150) =< s(145)*s(142)
s(151) =< s(145)*s(142)
s(152) =< s(145)*s(148)
s(153) =< s(149)
s(150) =< s(145)*s(148)
s(153) =< s(152)
s(154) =< s(145)*s(147)
s(155) =< s(145)*s(147)
s(156) =< s(154)+s(150)+s(141)
s(146) =< s(154)+s(150)+s(141)
s(156) =< s(154)+s(153)+s(141)
s(146) =< s(154)+s(153)+s(141)
s(155) =< s(156)+s(144)
s(157) =< s(145)*s(147)
s(157) =< s(156)+s(143)
s(157) =< s(156)+s(144)

  with precondition: [V_m>=0] 

* Chain [35]: 1*s(164)+4*s(166)+4*s(167)+2*s(172)+2*s(176)+2*s(177)+0
  Such that:s(158) =< 1
s(161) =< V_m
s(162) =< V_m+1
s(163) =< 2*V_m
s(159) =< 2*V_m+1
s(160) =< 3*V_m
s(164) =< s(162)
s(165) =< s(163)
s(165) =< s(160)
s(166) =< s(162)
s(167) =< s(162)
s(166) =< s(161)
s(167) =< s(161)
s(168) =< s(161)+1
s(169) =< s(161)
s(170) =< s(166)*s(161)
s(171) =< s(166)*s(161)
s(172) =< s(166)*s(161)
s(173) =< s(166)*s(169)
s(174) =< s(170)
s(171) =< s(166)*s(169)
s(174) =< s(173)
s(175) =< s(166)*s(168)
s(176) =< s(166)*s(168)
s(177) =< s(175)+s(171)+s(158)
s(167) =< s(175)+s(171)+s(158)
s(177) =< s(175)+s(174)
s(167) =< s(175)+s(174)
s(176) =< s(177)+s(165)
s(176) =< s(177)+s(159)

  with precondition: [V_m>=1] 


Closed-form bounds of eval_rank1_start(V_2,V_5,V_8,V_m,V_x_0,V_x_1,V_y_0,V_y_1,V_y_2,B): 
-------------------------------------
* Chain [38] with precondition: [] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [37] with precondition: [0>=V_m+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [36] with precondition: [V_m>=0] 
    - Upper bound: (V_m+1)*(12*V_m)+3+(19*V_m+19) 
    - Complexity: n^2 
* Chain [35] with precondition: [V_m>=1] 
    - Upper bound: (V_m+1)*(8*V_m)+2+(13*V_m+13) 
    - Complexity: n^2 

### Maximum cost of eval_rank1_start(V_2,V_5,V_8,V_m,V_x_0,V_x_1,V_y_0,V_y_1,V_y_2,B): nat(V_m)*8*nat(V_m+1)+2+nat(V_m+1)*13+(nat(V_m)*4*nat(V_m+1)+1+nat(V_m+1)*6) 
Asymptotic class: n^2 
* Total analysis performed in 539 ms.

