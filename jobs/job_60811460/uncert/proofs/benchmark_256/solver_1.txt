WORST_CASE(Omega(n^1),?)

# LoAT Proof:
WORST_CASE(Omega(n^1),?)

WORST_CASE(Omega(n^1),?)
Initial ITS

Start location: f1

Location map:
LoAT_sink -> 0
f1 -> 1
f0 -> 2
f2 -> 3

Rules:
   0: (-2+i1 == 0 /\ -i4 >= 0) /\ i1'=3, i3'=1+i3, i5'=it2
   1: (-3+i6 >= 0 /\ -1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i6'=-1+i6, i7'=it5, i8'=0, i9'=it4
   2: (-1-it8 >= 0 /\ -1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i6'=it7, i7'=it9, i8'=it8
   3: (-1+it11 >= 0 /\ -1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i6'=it10, i7'=it12, i8'=it11
   4: -1+i1 == 0 /\ i1'=2, i3'=1+i3

Dependency graph:
1 -> 0, 1 -> 1, 1 -> 2, 1 -> 3
2 -> 0, 2 -> 1, 2 -> 2, 2 -> 3
3 -> 0, 3 -> 1, 3 -> 2, 3 -> 3
4 -> 0, 4 -> 1, 4 -> 2, 4 -> 3

Refined Dependency Graph

	Removed the following edges: 1 -> 0

Start location: f1

Location map:
LoAT_sink -> 0
f1 -> 1
f0 -> 2
f2 -> 3

Rules:
   0: (-2+i1 == 0 /\ -i4 >= 0) /\ i1'=3, i3'=1+i3, i5'=it2
   1: (-3+i6 >= 0 /\ -1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i6'=-1+i6, i7'=it5, i8'=0, i9'=it4
   2: (-1-it8 >= 0 /\ -1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i6'=it7, i7'=it9, i8'=it8
   3: (-1+it11 >= 0 /\ -1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i6'=it10, i7'=it12, i8'=it11
   4: -1+i1 == 0 /\ i1'=2, i3'=1+i3

Dependency graph:
1 -> 1, 1 -> 2, 1 -> 3
2 -> 0, 2 -> 1, 2 -> 2, 2 -> 3
3 -> 0, 3 -> 1, 3 -> 2, 3 -> 3
4 -> 0, 4 -> 1, 4 -> 2, 4 -> 3

Step with 4

	Trace

	4[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 2

	Trace

	4[(-1+i1 == 0)]
	2[(-1-it8 >= 0 /\ -1+i4 >= 0 /\ -2+i1 == 0)]
	
	Blocked

	{}
	{}
	{}
	
Poly(n^1)

Accelerate

	Loop Acceleration

	Original rule:
	(-1-it8 >= 0 /\ -1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i6'=it7, i7'=it9, i8'=it8
	New rule:
	(-1+it40 >= 0 /\ -1-it8 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ i4-it40 >= 0) /\ i1'=i1, i3'=i3+it40, i4'=i4-it40, i6'=it7, i7'=it9, i8'=it8

		-1-it8 >= 0 [0]: unchanged
		
		-1+i4 >= 0 [0]: montonic decrease yields (-1+i4 >= 0 /\ i4-it40 >= 0)
		
		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-1-it8 >= 0 -> -1-it8 >= 0, -1+i4 >= 0 -> (-1+i4 >= 0 /\ i4-it40 >= 0), -2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-1+it40 >= 0 /\ -1-it8 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ i4-it40 >= 0) /\ i1'=i1, i3'=i3+it40, i4'=i4-it40, i6'=it7, i7'=it9, i8'=it8
	New rule:
	(-1+it40 >= 0 /\ -1-it8 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ i4-it40 >= 0) /\ i3'=i3+it40, i4'=i4-it40, i6'=it7, i7'=it9, i8'=it8
	
	Instantiation

	Original rule:
	(-1+it40 >= 0 /\ -1-it8 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ i4-it40 >= 0) /\ i3'=i3+it40, i4'=i4-it40, i6'=it7, i7'=it9, i8'=it8
	New rule:
	(0 >= 0 /\ -1-it8 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+i4, i4'=0, i6'=it7, i7'=it9, i8'=it8

Start location: f1

Location map:
LoAT_sink -> 0
f1 -> 1
f0 -> 2
f2 -> 3

Rules:
   0: (-2+i1 == 0 /\ -i4 >= 0) /\ i1'=3, i3'=1+i3, i5'=it2
   1: (-3+i6 >= 0 /\ -1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i6'=-1+i6, i7'=it5, i8'=0, i9'=it4
   2: (-1-it8 >= 0 /\ -1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i6'=it7, i7'=it9, i8'=it8
   3: (-1+it11 >= 0 /\ -1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i6'=it10, i7'=it12, i8'=it11
   4: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   5: (0 >= 0 /\ -1-it8 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+i4, i4'=0, i6'=it7, i7'=it9, i8'=it8

Dependency graph:
1 -> 1, 1 -> 2, 1 -> 3, 1 -> 5
2 -> 0, 2 -> 1, 2 -> 2, 2 -> 3, 2 -> 5
3 -> 0, 3 -> 1, 3 -> 2, 3 -> 3, 3 -> 5
4 -> 0, 4 -> 1, 4 -> 2, 4 -> 3, 4 -> 5
5 -> 0, 5 -> 1, 5 -> 2, 5 -> 3

	Trace

	4[(-1+i1 == 0)]
	5[(0 >= 0 /\ -1-it8 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{}
	{2[T], 5[T]}
	
Step with 0

	Trace

	4[(-1+i1 == 0)]
	5[(0 >= 0 /\ -1-it8 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	0[(-2+i1 == 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{}
	{2[T], 5[T]}
	{}
	
Backtrack

	Trace

	4[(-1+i1 == 0)]
	5[(0 >= 0 /\ -1-it8 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{}
	{0[T], 2[T], 5[T]}
	
Backtrack

	Trace

	4[(-1+i1 == 0)]
	
	Blocked

	{}
	{5[T]}
	
Step with 2

	Trace

	4[(-1+i1 == 0)]
	2[(-1-it8 >= 0 /\ -1+i4 >= 0 /\ -2+i1 == 0)]
	
	Blocked

	{}
	{5[T]}
	{}
	
Covered

	Trace

	4[(-1+i1 == 0)]
	
	Blocked

	{}
	{2[T], 5[T]}
	
Step with 0

	Trace

	4[(-1+i1 == 0)]
	0[(-2+i1 == 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{2[T], 5[T]}
	{}
	
Backtrack

	Trace

	4[(-1+i1 == 0)]
	
	Blocked

	{}
	{0[T], 2[T], 5[T]}
	
Step with 3

	Trace

	4[(-1+i1 == 0)]
	3[(-1+it11 >= 0 /\ -1+i4 >= 0 /\ -2+i1 == 0)]
	
	Blocked

	{}
	{0[T], 2[T], 5[T]}
	{}
	
Accelerate

	Loop Acceleration

	Original rule:
	(-1+it11 >= 0 /\ -1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i6'=it10, i7'=it12, i8'=it11
	New rule:
	(-1+it11 >= 0 /\ -1+it100 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ -it100+i4 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it100, i4'=-it100+i4, i6'=it10, i7'=it12, i8'=it11

		-1+it11 >= 0 [0]: unchanged
		
		-1+i4 >= 0 [0]: montonic decrease yields (-1+i4 >= 0 /\ -it100+i4 >= 0)
		
		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-1+it11 >= 0 -> -1+it11 >= 0, -1+i4 >= 0 -> (-1+i4 >= 0 /\ -it100+i4 >= 0), -2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-1+it11 >= 0 /\ -1+it100 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ -it100+i4 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it100, i4'=-it100+i4, i6'=it10, i7'=it12, i8'=it11
	New rule:
	(-1+it11 >= 0 /\ -1+it100 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ -it100+i4 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+it100, i4'=-it100+i4, i6'=it10, i7'=it12, i8'=it11
	
	Instantiation

	Original rule:
	(-1+it11 >= 0 /\ -1+it100 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ -it100+i4 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+it100, i4'=-it100+i4, i6'=it10, i7'=it12, i8'=it11
	New rule:
	(0 >= 0 /\ -1+it11 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+i4, i4'=0, i6'=it10, i7'=it12, i8'=it11

Start location: f1

Location map:
LoAT_sink -> 0
f1 -> 1
f0 -> 2
f2 -> 3

Rules:
   0: (-2+i1 == 0 /\ -i4 >= 0) /\ i1'=3, i3'=1+i3, i5'=it2
   1: (-3+i6 >= 0 /\ -1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i6'=-1+i6, i7'=it5, i8'=0, i9'=it4
   2: (-1-it8 >= 0 /\ -1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i6'=it7, i7'=it9, i8'=it8
   3: (-1+it11 >= 0 /\ -1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i6'=it10, i7'=it12, i8'=it11
   4: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   5: (0 >= 0 /\ -1-it8 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+i4, i4'=0, i6'=it7, i7'=it9, i8'=it8
   6: (0 >= 0 /\ -1+it11 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+i4, i4'=0, i6'=it10, i7'=it12, i8'=it11

Dependency graph:
1 -> 1, 1 -> 2, 1 -> 3, 1 -> 5, 1 -> 6
2 -> 0, 2 -> 1, 2 -> 2, 2 -> 3, 2 -> 5, 2 -> 6
3 -> 0, 3 -> 1, 3 -> 2, 3 -> 3, 3 -> 5, 3 -> 6
4 -> 0, 4 -> 1, 4 -> 2, 4 -> 3, 4 -> 5, 4 -> 6
5 -> 0, 5 -> 1, 5 -> 2, 5 -> 3, 5 -> 6
6 -> 0, 6 -> 1, 6 -> 2, 6 -> 3, 6 -> 5

	Trace

	4[(-1+i1 == 0)]
	6[(0 >= 0 /\ -1+it11 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{0[T], 2[T], 5[T]}
	{3[T], 6[T]}
	
Step with 0

	Trace

	4[(-1+i1 == 0)]
	6[(0 >= 0 /\ -1+it11 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	0[(-2+i1 == 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{0[T], 2[T], 5[T]}
	{1[T], 2[T], 3[T], 5[T], 6[T]}
	{}
	
Backtrack

	Trace

	4[(-1+i1 == 0)]
	6[(0 >= 0 /\ -1+it11 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{0[T], 2[T], 5[T]}
	{0[T], 1[T], 2[T], 3[T], 5[T], 6[T]}
	
Backtrack

	Trace

	4[(-1+i1 == 0)]
	
	Blocked

	{}
	{0[T], 2[T], 5[T], 6[T]}
	
Step with 3

	Trace

	4[(-1+i1 == 0)]
	3[(-1+it11 >= 0 /\ -1+i4 >= 0 /\ -2+i1 == 0)]
	
	Blocked

	{}
	{0[T], 2[T], 5[T], 6[T]}
	{}
	
Covered

	Trace

	4[(-1+i1 == 0)]
	
	Blocked

	{}
	{0[T], 2[T], 3[T], 5[T], 6[T]}
	
Step with 1

	Trace

	4[(-1+i1 == 0)]
	1[(-3+i6 >= 0 /\ -1+i4 >= 0 /\ -2+i1 == 0)]
	
	Blocked

	{}
	{0[T], 2[T], 3[T], 5[T], 6[T]}
	{}
	
Accelerate

	Loop Acceleration

	Original rule:
	(-3+i6 >= 0 /\ -1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i6'=-1+i6, i7'=it5, i8'=0, i9'=it4
	New rule:
	(-1+it142 >= 0 /\ -3+i6 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ -2+i6-it142 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it142, i6'=i6-it142, i7'=it5, i8'=0, i9'=it4

		-3+i6 >= 0 [0]: montonic decrease yields (-3+i6 >= 0 /\ -2+i6-it142 >= 0)
		
		-1+i4 >= 0 [0]: unchanged
		
		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-3+i6 >= 0 -> (-3+i6 >= 0 /\ -2+i6-it142 >= 0), -1+i4 >= 0 -> -1+i4 >= 0, -2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-1+it142 >= 0 /\ -3+i6 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ -2+i6-it142 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it142, i6'=i6-it142, i7'=it5, i8'=0, i9'=it4
	New rule:
	(-1+it142 >= 0 /\ -3+i6 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ -2+i6-it142 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+it142, i6'=i6-it142, i7'=it5, i8'=0, i9'=it4
	
	Instantiation

	Original rule:
	(-1+it142 >= 0 /\ -3+i6 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ -2+i6-it142 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+it142, i6'=i6-it142, i7'=it5, i8'=0, i9'=it4
	New rule:
	(0 >= 0 /\ -3+i6 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0) /\ i3'=-2+i6+i3, i6'=2, i7'=it5, i8'=0, i9'=it4

Start location: f1

Location map:
LoAT_sink -> 0
f1 -> 1
f0 -> 2
f2 -> 3

Rules:
   0: (-2+i1 == 0 /\ -i4 >= 0) /\ i1'=3, i3'=1+i3, i5'=it2
   1: (-3+i6 >= 0 /\ -1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i6'=-1+i6, i7'=it5, i8'=0, i9'=it4
   2: (-1-it8 >= 0 /\ -1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i6'=it7, i7'=it9, i8'=it8
   3: (-1+it11 >= 0 /\ -1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i6'=it10, i7'=it12, i8'=it11
   4: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   5: (0 >= 0 /\ -1-it8 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+i4, i4'=0, i6'=it7, i7'=it9, i8'=it8
   6: (0 >= 0 /\ -1+it11 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+i4, i4'=0, i6'=it10, i7'=it12, i8'=it11
   7: (0 >= 0 /\ -3+i6 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0) /\ i3'=-2+i6+i3, i6'=2, i7'=it5, i8'=0, i9'=it4

Dependency graph:
1 -> 1, 1 -> 2, 1 -> 3, 1 -> 5, 1 -> 6, 1 -> 7
2 -> 0, 2 -> 1, 2 -> 2, 2 -> 3, 2 -> 5, 2 -> 6, 2 -> 7
3 -> 0, 3 -> 1, 3 -> 2, 3 -> 3, 3 -> 5, 3 -> 6, 3 -> 7
4 -> 0, 4 -> 1, 4 -> 2, 4 -> 3, 4 -> 5, 4 -> 6, 4 -> 7
5 -> 0, 5 -> 1, 5 -> 2, 5 -> 3, 5 -> 6, 5 -> 7
6 -> 0, 6 -> 1, 6 -> 2, 6 -> 3, 6 -> 5, 6 -> 7
7 -> 1, 7 -> 2, 7 -> 3, 7 -> 5, 7 -> 6

	Trace

	4[(-1+i1 == 0)]
	7[(0 >= 0 /\ -3+i6 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{0[T], 2[T], 3[T], 5[T], 6[T]}
	{1[T], 7[T]}
	
Step with 3

	Trace

	4[(-1+i1 == 0)]
	7[(0 >= 0 /\ -3+i6 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	3[(-1+it11 >= 0 /\ -1+i4 >= 0 /\ -2+i1 == 0)]
	
	Blocked

	{}
	{0[T], 2[T], 3[T], 5[T], 6[T]}
	{1[T], 7[T]}
	{}
	
Covered

	Trace

	4[(-1+i1 == 0)]
	7[(0 >= 0 /\ -3+i6 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{0[T], 2[T], 3[T], 5[T], 6[T]}
	{1[T], 3[T], 7[T]}
	
Step with 6

	Trace

	4[(-1+i1 == 0)]
	7[(0 >= 0 /\ -3+i6 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	6[(0 >= 0 /\ -1+it11 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{0[T], 2[T], 3[T], 5[T], 6[T]}
	{1[T], 3[T], 7[T]}
	{6[T]}
	
Step with 0

	Trace

	4[(-1+i1 == 0)]
	7[(0 >= 0 /\ -3+i6 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	6[(0 >= 0 /\ -1+it11 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	0[(-2+i1 == 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{0[T], 2[T], 3[T], 5[T], 6[T]}
	{1[T], 3[T], 7[T]}
	{2[T], 3[T], 5[T], 6[T], 7[T]}
	{}
	
Backtrack

	Trace

	4[(-1+i1 == 0)]
	7[(0 >= 0 /\ -3+i6 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	6[(0 >= 0 /\ -1+it11 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{0[T], 2[T], 3[T], 5[T], 6[T]}
	{1[T], 3[T], 7[T]}
	{0[T], 2[T], 3[T], 5[T], 6[T], 7[T]}
	
Backtrack

	Trace

	4[(-1+i1 == 0)]
	7[(0 >= 0 /\ -3+i6 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{0[T], 2[T], 3[T], 5[T], 6[T]}
	{1[T], 3[T], 6[T], 7[T]}
	
Step with 2

	Trace

	4[(-1+i1 == 0)]
	7[(0 >= 0 /\ -3+i6 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	2[(-1-it8 >= 0 /\ -1+i4 >= 0 /\ -2+i1 == 0)]
	
	Blocked

	{}
	{0[T], 2[T], 3[T], 5[T], 6[T]}
	{1[T], 3[T], 6[T], 7[T]}
	{}
	
Covered

	Trace

	4[(-1+i1 == 0)]
	7[(0 >= 0 /\ -3+i6 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{0[T], 2[T], 3[T], 5[T], 6[T]}
	{1[T], 2[T], 3[T], 6[T], 7[T]}
	
Step with 5

	Trace

	4[(-1+i1 == 0)]
	7[(0 >= 0 /\ -3+i6 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	5[(0 >= 0 /\ -1-it8 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{0[T], 2[T], 3[T], 5[T], 6[T]}
	{1[T], 2[T], 3[T], 6[T], 7[T]}
	{5[T]}
	
Step with 0

	Trace

	4[(-1+i1 == 0)]
	7[(0 >= 0 /\ -3+i6 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	5[(0 >= 0 /\ -1-it8 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	0[(-2+i1 == 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{0[T], 2[T], 3[T], 5[T], 6[T]}
	{1[T], 2[T], 3[T], 6[T], 7[T]}
	{5[T]}
	{}
	
Backtrack

	Trace

	4[(-1+i1 == 0)]
	7[(0 >= 0 /\ -3+i6 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	5[(0 >= 0 /\ -1-it8 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{0[T], 2[T], 3[T], 5[T], 6[T]}
	{1[T], 2[T], 3[T], 6[T], 7[T]}
	{0[T], 5[T]}
	
Backtrack

	Trace

	4[(-1+i1 == 0)]
	7[(0 >= 0 /\ -3+i6 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{0[T], 2[T], 3[T], 5[T], 6[T]}
	{1[T], 2[T], 3[T], 5[T], 6[T], 7[T]}
	
Backtrack

	Trace

	4[(-1+i1 == 0)]
	
	Blocked

	{}
	{0[T], 2[T], 3[T], 5[T], 6[T], 7[T]}
	
Step with 1

	Trace

	4[(-1+i1 == 0)]
	1[(-3+i6 >= 0 /\ -1+i4 >= 0 /\ -2+i1 == 0)]
	
	Blocked

	{}
	{0[T], 2[T], 3[T], 5[T], 6[T], 7[T]}
	{}
	
Covered

	Trace

	4[(-1+i1 == 0)]
	
	Blocked

	{}
	{0[T], 1[T], 2[T], 3[T], 5[T], 6[T], 7[T]}
	
Backtrack

	Trace

	Blocked

	{4[T]}
	
Accept

Poly(n^1)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
MAYBE


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄, X₅
  Temp_Vars:  G, H, I
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₄: l0(X₀, X₁, X₂, X₃, X₄, X₅) → l1(X₀, X₁, X₂, X₃, X₄, X₅)
  t₁: l1(X₀, X₁, X₂, X₃, X₄, X₅) → l1(X₀, X₁, X₂-1, G, 0, H) :|: 1 ≤ X₀ ∧ 3 ≤ X₂
  t₂: l1(X₀, X₁, X₂, X₃, X₄, X₅) → l1(X₀-1, X₁, I, G, H, X₅) :|: 1+H ≤ 0 ∧ 1 ≤ X₀
  t₃: l1(X₀, X₁, X₂, X₃, X₄, X₅) → l1(X₀-1, X₁, I, G, H, X₅) :|: 1 ≤ H ∧ 1 ≤ X₀
  t₀: l1(X₀, X₁, X₂, X₃, X₄, X₅) → l2(X₀, G, X₂, X₃, X₄, X₅) :|: X₀ ≤ 0


Preprocessing
  Eliminate variables [G; X₁; X₃; X₄; X₅] that do not contribute to the problem


  Found invariant X₀ ≤ 0 for location l2


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁
  Temp_Vars:  H, I
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₅: l0(X₀, X₁) → l1(X₀, X₁)
  t₆: l1(X₀, X₁) → l1(X₀, X₁-1) :|: 1 ≤ X₀ ∧ 3 ≤ X₁
  t₇: l1(X₀, X₁) → l1(X₀-1, I) :|: 1+H ≤ 0 ∧ 1 ≤ X₀
  t₈: l1(X₀, X₁) → l1(X₀-1, I) :|: 1 ≤ H ∧ 1 ≤ X₀
  t₉: l1(X₀, X₁) → l2(X₀, X₁) :|: X₀ ≤ 0


MPRF for transition t₇: l1(X₀, X₁) → l1(X₀-1, I) :|: 1+H ≤ 0 ∧ 1 ≤ X₀ of depth 1:
  new bound:
    X₀ {O(n)}

  MPRF:
    • l1: [X₀]




MPRF for transition t₈: l1(X₀, X₁) → l1(X₀-1, I) :|: 1 ≤ H ∧ 1 ≤ X₀ of depth 1:
  new bound:
    X₀ {O(n)}

  MPRF:
    • l1: [X₀]




  Found invariant 2 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l1_v2


  Found invariant X₀ ≤ 0 for location l2


  Found invariant 0 ≤ X₀ for location l1_v1


All Bounds
Timebounds
  Overall timebound:inf {Infinity}
    t₅: 1 {O(1)}
    t₆: inf {Infinity}
    t₇: X₀ {O(n)}
    t₈: X₀ {O(n)}
    t₉: 1 {O(1)}


Costbounds
  Overall costbound: inf {Infinity}
    t₅: 1 {O(1)}
    t₆: inf {Infinity}
    t₇: X₀ {O(n)}
    t₈: X₀ {O(n)}
    t₉: 1 {O(1)}


Sizebounds
    t₅, X₀: X₀ {O(n)}
    t₅, X₁: X₁ {O(n)}
    t₆, X₀: X₀ {O(n)}
    t₇, X₀: X₀ {O(n)}
    t₈, X₀: X₀ {O(n)}
    t₉, X₀: 3⋅X₀ {O(n)}

