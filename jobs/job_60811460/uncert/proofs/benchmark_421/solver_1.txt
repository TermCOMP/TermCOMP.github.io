NO

# LoAT Proof:
NO

NO

Initial ITS

Start location: f3

Location map:
LoAT_sink -> 0
f3 -> 1
f2 -> 2
f300 -> 3

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-2+i1 == 0 /\ i4 >= 0 /\ -1+it2 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i5'=it2
   2: (-2+i1 == 0 /\ i4 >= 0 /\ -1-it3 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i5'=it3
   3: (-2+i1 == 0 /\ i4 >= 0) /\ i1'=2, i3'=1+i3, i5'=0
   4: (-2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=3, i3'=1+i3, i6'=it4

Dependency graph:
0 -> 1, 0 -> 2, 0 -> 3, 0 -> 4
1 -> 1, 1 -> 2, 1 -> 3, 1 -> 4
2 -> 1, 2 -> 2, 2 -> 3, 2 -> 4
3 -> 1, 3 -> 2, 3 -> 3, 3 -> 4

Refined Dependency Graph

	Removed the following edges: 3 -> 4

Start location: f3

Location map:
LoAT_sink -> 0
f3 -> 1
f2 -> 2
f300 -> 3

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-2+i1 == 0 /\ i4 >= 0 /\ -1+it2 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i5'=it2
   2: (-2+i1 == 0 /\ i4 >= 0 /\ -1-it3 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i5'=it3
   3: (-2+i1 == 0 /\ i4 >= 0) /\ i1'=2, i3'=1+i3, i5'=0
   4: (-2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=3, i3'=1+i3, i6'=it4

Dependency graph:
0 -> 1, 0 -> 2, 0 -> 3, 0 -> 4
1 -> 1, 1 -> 2, 1 -> 3, 1 -> 4
2 -> 1, 2 -> 2, 2 -> 3, 2 -> 4
3 -> 1, 3 -> 2, 3 -> 3

Step with 0

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 3

	Trace

	0[(-1+i1 == 0)]
	3[(-2+i1 == 0 /\ i4 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Nonterm

	Certificate of Non-Termination

	Original rule:
	(-2+i1 == 0 /\ i4 >= 0) /\ i1'=2, i3'=1+i3, i5'=0
	New rule:
	(-1+it17 >= 0 /\ -2+i1 >= 0 /\ i4 >= 0 /\ 2-i1 >= 0) /\ i1'=0

		-2+i1 >= 0 [0]: unchanged
		
		i4 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, i4 >= 0 -> i4 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Loop Acceleration

	Original rule:
	(-2+i1 == 0 /\ i4 >= 0) /\ i1'=2, i3'=1+i3, i5'=0
	New rule:
	(-1+it17 >= 0 /\ -2+i1 >= 0 /\ i4 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it17, i5'=0

		-2+i1 >= 0 [0]: unchanged
		
		i4 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, i4 >= 0 -> i4 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-1+it17 >= 0 /\ -2+i1 >= 0 /\ i4 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it17, i5'=0
	New rule:
	(-1+it17 >= 0 /\ -2+i1 >= 0 /\ i4 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+it17, i5'=0

Start location: f3

Location map:
LoAT_sink -> 0
f3 -> 1
f2 -> 2
f300 -> 3

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-2+i1 == 0 /\ i4 >= 0 /\ -1+it2 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i5'=it2
   2: (-2+i1 == 0 /\ i4 >= 0 /\ -1-it3 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i5'=it3
   3: (-2+i1 == 0 /\ i4 >= 0) /\ i1'=2, i3'=1+i3, i5'=0
   4: (-2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=3, i3'=1+i3, i6'=it4
   5: (-1+it17 >= 0 /\ -2+i1 >= 0 /\ i4 >= 0 /\ 2-i1 >= 0) /\ i1'=0
   6: (-1+it17 >= 0 /\ -2+i1 >= 0 /\ i4 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+it17, i5'=0

Dependency graph:
0 -> 1, 0 -> 2, 0 -> 3, 0 -> 4, 0 -> 5, 0 -> 6
1 -> 1, 1 -> 2, 1 -> 3, 1 -> 4, 1 -> 5, 1 -> 6
2 -> 1, 2 -> 2, 2 -> 3, 2 -> 4, 2 -> 5, 2 -> 6
3 -> 1, 3 -> 2, 3 -> 3, 3 -> 5, 3 -> 6
6 -> 1, 6 -> 2, 6 -> 3, 6 -> 5

Step with 5

	Trace

	0[(-1+i1 == 0)]
	5[(-1+it17 >= 0 /\ -2+i1 >= 0 /\ i4 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{}
	{5[T]}
	
Refute

	Counterexample

	(i1=1, i3=-1, i4=0, i5=0, i6=0)
	-0-> (i1=2, i3=0, i4=0, i5=0, i6=0 )
	-5-> ( )
	
NO

Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
MAYBE


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  D
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂) → l1(X₀, X₁, X₂)
  t₁: l1(X₀, X₁, X₂) → l1(X₀-1, D, X₂) :|: 1 ≤ D ∧ 0 ≤ X₀
  t₂: l1(X₀, X₁, X₂) → l1(X₀-1, D, X₂) :|: 1+D ≤ 0 ∧ 0 ≤ X₀
  t₃: l1(X₀, X₁, X₂) → l1(X₀, 0, X₂) :|: 0 ≤ X₀
  t₄: l1(X₀, X₁, X₂) → l2(X₀, X₁, D) :|: 1+X₀ ≤ 0


Preprocessing
  Eliminate variables [X₁; X₂] that do not contribute to the problem


  Found invariant 1+X₀ ≤ 0 for location l2


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀
  Temp_Vars:  D
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₅: l0(X₀) → l1(X₀)
  t₆: l1(X₀) → l1(X₀-1) :|: 1 ≤ D ∧ 0 ≤ X₀
  t₇: l1(X₀) → l1(X₀-1) :|: 1+D ≤ 0 ∧ 0 ≤ X₀
  t₈: l1(X₀) → l1(X₀) :|: 0 ≤ X₀
  t₉: l1(X₀) → l2(X₀) :|: 1+X₀ ≤ 0


MPRF for transition t₆: l1(X₀) → l1(X₀-1) :|: 1 ≤ D ∧ 0 ≤ X₀ of depth 1:
  new bound:
    X₀+1 {O(n)}

  MPRF:
    • l1: [1+X₀]




MPRF for transition t₇: l1(X₀) → l1(X₀-1) :|: 1+D ≤ 0 ∧ 0 ≤ X₀ of depth 1:
  new bound:
    X₀+1 {O(n)}

  MPRF:
    • l1: [1+X₀]




  Found invariant 0 ≤ 1+X₀ for location l1_v2


  Found invariant 1+X₀ ≤ 0 for location l2


  Found invariant 0 ≤ X₀ for location l1_v1


All Bounds
Timebounds
  Overall timebound:inf {Infinity}
    t₅: 1 {O(1)}
    t₆: X₀+1 {O(n)}
    t₇: X₀+1 {O(n)}
    t₈: inf {Infinity}
    t₉: 1 {O(1)}


Costbounds
  Overall costbound: inf {Infinity}
    t₅: 1 {O(1)}
    t₆: X₀+1 {O(n)}
    t₇: X₀+1 {O(n)}
    t₈: inf {Infinity}
    t₉: 1 {O(1)}


Sizebounds
    t₅, X₀: X₀ {O(n)}
    t₆, X₀: X₀+2 {O(n)}
    t₇, X₀: X₀+2 {O(n)}
    t₈, X₀: X₀+2 {O(n)}
    t₉, X₀: 3⋅X₀+4 {O(n)}

