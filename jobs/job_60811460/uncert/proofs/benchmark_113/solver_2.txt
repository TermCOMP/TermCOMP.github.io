WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval2/5]
1. recursive  : [eval1/3,eval2_loop_cont/4]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [eval1_loop_cont/2]
4. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval2/5
1. SCC is partially evaluated into eval1/3
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval2/5 
* CE 7 is refined into CE [8] 
* CE 6 is refined into CE [9] 
* CE 5 is refined into CE [10] 


### Cost equations --> "Loop" of eval2/5 
* CEs [10] --> Loop 8 
* CEs [8] --> Loop 9 
* CEs [9] --> Loop 10 

### Ranking functions of CR eval2(A,B,C,D,E) 
* RF of phase [8]: [A-B]

#### Partial ranking functions of CR eval2(A,B,C,D,E) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    A-B


### Specialization of cost equations eval1/3 
* CE 2 is refined into CE [11,12] 
* CE 4 is refined into CE [13] 
* CE 3 is refined into CE [14,15] 


### Cost equations --> "Loop" of eval1/3 
* CEs [15] --> Loop 11 
* CEs [14] --> Loop 12 
* CEs [12] --> Loop 13 
* CEs [11] --> Loop 14 
* CEs [13] --> Loop 15 

### Ranking functions of CR eval1(A,B,C) 
* RF of phase [11]: [A]

#### Partial ranking functions of CR eval1(A,B,C) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    A


### Specialization of cost equations start/3 
* CE 1 is refined into CE [16,17,18,19,20] 


### Cost equations --> "Loop" of start/3 
* CEs [20] --> Loop 16 
* CEs [19] --> Loop 17 
* CEs [18] --> Loop 18 
* CEs [16] --> Loop 19 
* CEs [17] --> Loop 20 

### Ranking functions of CR start(A,B,C) 

#### Partial ranking functions of CR start(A,B,C) 


Computing Bounds
=====================================

#### Cost of chains of eval2(A,B,C,D,E):
* Chain [[8],10]: 1*it(8)+0
  Such that:it(8) =< -B+E

  with precondition: [C=2,A=D+1,A=E,B>=0,A>=B+1] 

* Chain [[8],9]: 1*it(8)+0
  Such that:it(8) =< A-B

  with precondition: [C=3,B>=0,A>=B+1] 

* Chain [10]: 0
  with precondition: [C=2,B=A,B=D+1,B=E,B>=0] 

* Chain [9]: 0
  with precondition: [C=3,B>=0,A>=B] 


#### Cost of chains of eval1(A,B,C):
* Chain [[11],15]: 1*it(11)+1*s(3)+0
  Such that:aux(3) =< A
it(11) =< aux(3)
s(3) =< it(11)*aux(3)

  with precondition: [C=3,A>=1] 

* Chain [[11],14]: 1*it(11)+1*s(3)+0
  Such that:aux(4) =< A
it(11) =< aux(4)
s(3) =< it(11)*aux(4)

  with precondition: [C=3,A>=1] 

* Chain [[11],13]: 2*it(11)+1*s(3)+0
  Such that:aux(5) =< A
it(11) =< aux(5)
s(3) =< it(11)*aux(5)

  with precondition: [C=3,A>=2] 

* Chain [[11],12,15]: 1*it(11)+1*s(3)+1
  Such that:aux(6) =< A
it(11) =< aux(6)
s(3) =< it(11)*aux(6)

  with precondition: [C=3,A>=1] 

* Chain [15]: 0
  with precondition: [C=3] 

* Chain [14]: 0
  with precondition: [C=3,A>=0] 

* Chain [13]: 1*s(4)+0
  Such that:s(4) =< A

  with precondition: [C=3,A>=1] 

* Chain [12,15]: 1
  with precondition: [A=0,C=3] 


#### Cost of chains of start(A,B,C):
* Chain [20]: 0
  with precondition: [] 

* Chain [19]: 1
  with precondition: [A=0] 

* Chain [18]: 0
  with precondition: [A>=0] 

* Chain [17]: 4*s(16)+3*s(17)+1
  Such that:s(15) =< A
s(16) =< s(15)
s(17) =< s(16)*s(15)

  with precondition: [A>=1] 

* Chain [16]: 2*s(19)+1*s(20)+0
  Such that:s(18) =< A
s(19) =< s(18)
s(20) =< s(19)*s(18)

  with precondition: [A>=2] 


Closed-form bounds of start(A,B,C): 
-------------------------------------
* Chain [20] with precondition: [] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [19] with precondition: [A=0] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [18] with precondition: [A>=0] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [17] with precondition: [A>=1] 
    - Upper bound: 4*A+1+3*A*A 
    - Complexity: n^2 
* Chain [16] with precondition: [A>=2] 
    - Upper bound: 2*A+A*A 
    - Complexity: n^2 

### Maximum cost of start(A,B,C): max([1,nat(A)*2+1+nat(A)*2*nat(A)+(nat(A)*nat(A)+nat(A)*2)]) 
Asymptotic class: n^2 
* Total analysis performed in 48 ms.

