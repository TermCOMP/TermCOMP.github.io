WORST_CASE(?,O(1))

# LoAT Proof:
Initial ITS

Start location: evalfstart

Location map:
LoAT_sink -> 0
evalfstart -> 1
evalfentryin -> 2
evalfbb3in -> 3
evalfbbin -> 4
evalfreturnin -> 5
evalfbb1in -> 6
evalfbb2in -> 7
evalfstop -> 8

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: -2+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=i5, i5'=i4
   2: (-3+i1 == 0 /\ 254-i5 >= 0 /\ -1+i5 >= 0) /\ i1'=4, i3'=1+i3
   3: (-3+i1 == 0 /\ -i5 >= 0) /\ i1'=5, i3'=1+i3
   4: (-3+i1 == 0 /\ -255+i5 >= 0) /\ i1'=5, i3'=1+i3
   5: (-4+i1 == 0 /\ -1-i4 >= 0) /\ i1'=6, i3'=1+i3
   6: (-1+i4 >= 0 /\ -4+i1 == 0) /\ i1'=6, i3'=1+i3
   7: (-4+i1 == 0 /\ i4 == 0) /\ i1'=7, i3'=1+i3
   8: -6+i1 == 0 /\ i1'=3, i3'=1+i3, i5'=1+i5
   9: -7+i1 == 0 /\ i1'=3, i3'=1+i3, i5'=-1+i5
  10: -5+i1 == 0 /\ i1'=8, i3'=1+i3

Dependency graph:
0 -> 1
1 -> 2, 1 -> 3, 1 -> 4
2 -> 5, 2 -> 6, 2 -> 7
3 -> 10
4 -> 10
5 -> 8
6 -> 8
7 -> 9
8 -> 2, 8 -> 3, 8 -> 4
9 -> 2, 9 -> 3, 9 -> 4

Chained Linear Paths

	Applied Chaining

	First rule:
	-1+i1 == 0 /\ i1'=2, i3'=1+i3
	Second rule:
	-2+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=i5, i5'=i4
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=i5, i5'=i4
	
	Applied Deletion

	Removed the following rules: 0, 1
	
	Applied Chaining

	First rule:
	(-3+i1 == 0 /\ -i5 >= 0) /\ i1'=5, i3'=1+i3
	Second rule:
	-5+i1 == 0 /\ i1'=8, i3'=1+i3
	New rule:
	(0 == 0 /\ -3+i1 == 0 /\ -i5 >= 0) /\ i1'=8, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 3
	
	Applied Chaining

	First rule:
	(-3+i1 == 0 /\ -255+i5 >= 0) /\ i1'=5, i3'=1+i3
	Second rule:
	-5+i1 == 0 /\ i1'=8, i3'=1+i3
	New rule:
	(0 == 0 /\ -3+i1 == 0 /\ -255+i5 >= 0) /\ i1'=8, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 4, 10
	
	Applied Chaining

	First rule:
	(-4+i1 == 0 /\ -1-i4 >= 0) /\ i1'=6, i3'=1+i3
	Second rule:
	-6+i1 == 0 /\ i1'=3, i3'=1+i3, i5'=1+i5
	New rule:
	(0 == 0 /\ -4+i1 == 0 /\ -1-i4 >= 0) /\ i1'=3, i3'=2+i3, i5'=1+i5
	
	Applied Deletion

	Removed the following rules: 5
	
	Applied Chaining

	First rule:
	(-1+i4 >= 0 /\ -4+i1 == 0) /\ i1'=6, i3'=1+i3
	Second rule:
	-6+i1 == 0 /\ i1'=3, i3'=1+i3, i5'=1+i5
	New rule:
	(0 == 0 /\ -1+i4 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=2+i3, i5'=1+i5
	
	Applied Deletion

	Removed the following rules: 6, 8
	
	Applied Chaining

	First rule:
	(-4+i1 == 0 /\ i4 == 0) /\ i1'=7, i3'=1+i3
	Second rule:
	-7+i1 == 0 /\ i1'=3, i3'=1+i3, i5'=-1+i5
	New rule:
	(0 == 0 /\ -4+i1 == 0 /\ i4 == 0) /\ i1'=3, i3'=2+i3, i5'=-1+i5
	
	Applied Deletion

	Removed the following rules: 7, 9

Start location: evalfstart

Location map:
LoAT_sink -> 0
evalfstart -> 1
evalfentryin -> 2
evalfbb3in -> 3
evalfbbin -> 4
evalfreturnin -> 5
evalfbb1in -> 6
evalfbb2in -> 7
evalfstop -> 8

Rules:
   2: (-3+i1 == 0 /\ 254-i5 >= 0 /\ -1+i5 >= 0) /\ i1'=4, i3'=1+i3
  11: (0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=i5, i5'=i4
  12: (0 == 0 /\ -3+i1 == 0 /\ -i5 >= 0) /\ i1'=8, i3'=2+i3
  13: (0 == 0 /\ -3+i1 == 0 /\ -255+i5 >= 0) /\ i1'=8, i3'=2+i3
  14: (0 == 0 /\ -4+i1 == 0 /\ -1-i4 >= 0) /\ i1'=3, i3'=2+i3, i5'=1+i5
  15: (0 == 0 /\ -1+i4 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=2+i3, i5'=1+i5
  16: (0 == 0 /\ -4+i1 == 0 /\ i4 == 0) /\ i1'=3, i3'=2+i3, i5'=-1+i5

Dependency graph:
2 -> 14, 2 -> 15, 2 -> 16
11 -> 2, 11 -> 12, 11 -> 13
14 -> 2, 14 -> 12, 14 -> 13
15 -> 2, 15 -> 12, 15 -> 13
16 -> 2, 16 -> 12, 16 -> 13

Preprocessed Transitions

	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=i5, i5'=i4
	New rule:
	-1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=i5, i5'=i4
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -3+i1 == 0 /\ -i5 >= 0) /\ i1'=8, i3'=2+i3
	New rule:
	(-3+i1 == 0 /\ -i5 >= 0) /\ i1'=8, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -3+i1 == 0 /\ -255+i5 >= 0) /\ i1'=8, i3'=2+i3
	New rule:
	(-3+i1 == 0 /\ -255+i5 >= 0) /\ i1'=8, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -4+i1 == 0 /\ -1-i4 >= 0) /\ i1'=3, i3'=2+i3, i5'=1+i5
	New rule:
	(-4+i1 == 0 /\ -1-i4 >= 0) /\ i1'=3, i3'=2+i3, i5'=1+i5
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+i4 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=2+i3, i5'=1+i5
	New rule:
	(-1+i4 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=2+i3, i5'=1+i5
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -4+i1 == 0 /\ i4 == 0) /\ i1'=3, i3'=2+i3, i5'=-1+i5
	New rule:
	(-4+i1 == 0 /\ i4 == 0) /\ i1'=3, i3'=2+i3, i5'=-1+i5

Start location: evalfstart

Location map:
LoAT_sink -> 0
evalfstart -> 1
evalfentryin -> 2
evalfbb3in -> 3
evalfbbin -> 4
evalfreturnin -> 5
evalfbb1in -> 6
evalfbb2in -> 7
evalfstop -> 8

Rules:
   2: (-3+i1 == 0 /\ 254-i5 >= 0 /\ -1+i5 >= 0) /\ i1'=4, i3'=1+i3
  17: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=i5, i5'=i4
  18: (-3+i1 == 0 /\ -i5 >= 0) /\ i1'=8, i3'=2+i3
  19: (-3+i1 == 0 /\ -255+i5 >= 0) /\ i1'=8, i3'=2+i3
  20: (-4+i1 == 0 /\ -1-i4 >= 0) /\ i1'=3, i3'=2+i3, i5'=1+i5
  21: (-1+i4 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=2+i3, i5'=1+i5
  22: (-4+i1 == 0 /\ i4 == 0) /\ i1'=3, i3'=2+i3, i5'=-1+i5

Dependency graph:
2 -> 20, 2 -> 21, 2 -> 22
17 -> 2, 17 -> 18, 17 -> 19
20 -> 2, 20 -> 18, 20 -> 19
21 -> 2, 21 -> 18, 21 -> 19
22 -> 2, 22 -> 18, 22 -> 19

Step with 17

	Trace

	17[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 19

	Trace

	17[(-1+i1 == 0)]
	19[(-3+i1 == 0 /\ -255+i5 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Backtrack

	Trace

	17[(-1+i1 == 0)]
	
	Blocked

	{}
	{19[T]}
	
Step with 2

	Trace

	17[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ 254-i5 >= 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{19[T]}
	{}
	
Step with 20

	Trace

	17[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ 254-i5 >= 0 /\ -1+i5 >= 0)]
	20[(-4+i1 == 0 /\ -1-i4 >= 0)]
	
	Blocked

	{}
	{19[T]}
	{}
	{}
	
Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -3+i1 == 0 /\ 254-i5 >= 0 /\ -1+i5 >= 0 /\ -1-i4 >= 0) /\ i1'=3, i3'=3+i3, i5'=1+i5
		New rule:
		(-3+i1 == 0 /\ 254-i5 >= 0 /\ -1+i5 >= 0 /\ -1-i4 >= 0) /\ i1'=3, i3'=3+i3, i5'=1+i5

	Loop Acceleration

	Original rule:
	(-3+i1 == 0 /\ 254-i5 >= 0 /\ -1+i5 >= 0 /\ -1-i4 >= 0) /\ i1'=3, i3'=3+i3, i5'=1+i5
	New rule:
	(-3+i1 >= 0 /\ 255-it17-i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -1+it17 >= 0 /\ -1-i4 >= 0) /\ i1'=i1, i3'=3*it17+i3, i5'=it17+i5

		-3+i1 >= 0 [0]: unchanged
		
		254-i5 >= 0 [0]: montonic decrease yields 255-it17-i5 >= 0
		
		3-i1 >= 0 [0]: unchanged
		
		-1+i5 >= 0 [0]: monotonic increase yields -1+i5 >= 0
		
		-1-i4 >= 0 [0]: unchanged
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, 254-i5 >= 0 -> 255-it17-i5 >= 0, 3-i1 >= 0 -> 3-i1 >= 0, -1+i5 >= 0 -> -1+i5 >= 0, -1-i4 >= 0 -> -1-i4 >= 0}

	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ 255-it17-i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -1+it17 >= 0 /\ -1-i4 >= 0) /\ i1'=i1, i3'=3*it17+i3, i5'=it17+i5
	New rule:
	(-3+i1 >= 0 /\ 255-it17-i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -1+it17 >= 0 /\ -1-i4 >= 0) /\ i3'=3*it17+i3, i5'=it17+i5
	
	Instantiation

	Original rule:
	(-3+i1 >= 0 /\ 255-it17-i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -1+it17 >= 0 /\ -1-i4 >= 0) /\ i3'=3*it17+i3, i5'=it17+i5
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ 254-i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -1-i4 >= 0) /\ i3'=765+i3-3*i5, i5'=255

Start location: evalfstart

Location map:
LoAT_sink -> 0
evalfstart -> 1
evalfentryin -> 2
evalfbb3in -> 3
evalfbbin -> 4
evalfreturnin -> 5
evalfbb1in -> 6
evalfbb2in -> 7
evalfstop -> 8

Rules:
   2: (-3+i1 == 0 /\ 254-i5 >= 0 /\ -1+i5 >= 0) /\ i1'=4, i3'=1+i3
  17: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=i5, i5'=i4
  18: (-3+i1 == 0 /\ -i5 >= 0) /\ i1'=8, i3'=2+i3
  19: (-3+i1 == 0 /\ -255+i5 >= 0) /\ i1'=8, i3'=2+i3
  20: (-4+i1 == 0 /\ -1-i4 >= 0) /\ i1'=3, i3'=2+i3, i5'=1+i5
  21: (-1+i4 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=2+i3, i5'=1+i5
  22: (-4+i1 == 0 /\ i4 == 0) /\ i1'=3, i3'=2+i3, i5'=-1+i5
  23: (0 >= 0 /\ -3+i1 >= 0 /\ 254-i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -1-i4 >= 0) /\ i3'=765+i3-3*i5, i5'=255

Dependency graph:
2 -> 20, 2 -> 21, 2 -> 22
17 -> 2, 17 -> 18, 17 -> 19, 17 -> 23
20 -> 2, 20 -> 18, 20 -> 19, 20 -> 23
21 -> 2, 21 -> 18, 21 -> 19, 21 -> 23
22 -> 2, 22 -> 18, 22 -> 19, 22 -> 23
23 -> 2, 23 -> 18, 23 -> 19

	Trace

	17[(-1+i1 == 0)]
	23[(0 >= 0 /\ -3+i1 >= 0 /\ 254-i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -1-i4 >= 0)]
	
	Blocked

	{}
	{19[T]}
	{23[T]}
	
Step with 19

	Trace

	17[(-1+i1 == 0)]
	23[(0 >= 0 /\ -3+i1 >= 0 /\ 254-i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -1-i4 >= 0)]
	19[(-3+i1 == 0 /\ -255+i5 >= 0)]
	
	Blocked

	{}
	{19[T]}
	{2[T], 18[T], 23[T]}
	{}
	
Backtrack

	Trace

	17[(-1+i1 == 0)]
	23[(0 >= 0 /\ -3+i1 >= 0 /\ 254-i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -1-i4 >= 0)]
	
	Blocked

	{}
	{19[T]}
	{2[T], 18[T], 19[T], 23[T]}
	
Backtrack

	Trace

	17[(-1+i1 == 0)]
	
	Blocked

	{}
	{19[T], 23[T]}
	
Step with 2

	Trace

	17[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ 254-i5 >= 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{19[T], 23[T]}
	{}
	
Step with 20

	Trace

	17[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ 254-i5 >= 0 /\ -1+i5 >= 0)]
	20[(-4+i1 == 0 /\ -1-i4 >= 0)]
	
	Blocked

	{}
	{19[T], 23[T]}
	{}
	{}
	
Covered

	Trace

	17[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ 254-i5 >= 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{19[T], 23[T]}
	{20[T]}
	
Step with 22

	Trace

	17[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ 254-i5 >= 0 /\ -1+i5 >= 0)]
	22[(-4+i1 == 0 /\ i4 == 0)]
	
	Blocked

	{}
	{19[T], 23[T]}
	{20[T]}
	{}
	
Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -3+i1 == 0 /\ 254-i5 >= 0 /\ i4 == 0 /\ -1+i5 >= 0) /\ i1'=3, i3'=3+i3, i5'=-1+i5
		New rule:
		(-3+i1 == 0 /\ 254-i5 >= 0 /\ i4 == 0 /\ -1+i5 >= 0) /\ i1'=3, i3'=3+i3, i5'=-1+i5

	Loop Acceleration

	Original rule:
	(-3+i1 == 0 /\ 254-i5 >= 0 /\ i4 == 0 /\ -1+i5 >= 0) /\ i1'=3, i3'=3+i3, i5'=-1+i5
	New rule:
	(-3+i1 >= 0 /\ 254-i5 >= 0 /\ i4 >= 0 /\ -it78+i5 >= 0 /\ 3-i1 >= 0 /\ -1+it78 >= 0 /\ -i4 >= 0) /\ i1'=i1, i3'=i3+3*it78, i5'=-it78+i5

		-3+i1 >= 0 [0]: unchanged
		
		254-i5 >= 0 [0]: monotonic increase yields 254-i5 >= 0
		
		i4 >= 0 [0]: unchanged
		
		3-i1 >= 0 [0]: unchanged
		
		-1+i5 >= 0 [0]: montonic decrease yields -it78+i5 >= 0
		
		-i4 >= 0 [0]: unchanged
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, 254-i5 >= 0 -> 254-i5 >= 0, i4 >= 0 -> i4 >= 0, 3-i1 >= 0 -> 3-i1 >= 0, -1+i5 >= 0 -> -it78+i5 >= 0, -i4 >= 0 -> -i4 >= 0}

	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ 254-i5 >= 0 /\ i4 >= 0 /\ -it78+i5 >= 0 /\ 3-i1 >= 0 /\ -1+it78 >= 0 /\ -i4 >= 0) /\ i1'=i1, i3'=i3+3*it78, i5'=-it78+i5
	New rule:
	(-3+i1 >= 0 /\ 254-i5 >= 0 /\ i4 >= 0 /\ -it78+i5 >= 0 /\ 3-i1 >= 0 /\ -1+it78 >= 0 /\ -i4 >= 0) /\ i3'=i3+3*it78, i5'=-it78+i5
	
	Instantiation

	Original rule:
	(-3+i1 >= 0 /\ 254-i5 >= 0 /\ i4 >= 0 /\ -it78+i5 >= 0 /\ 3-i1 >= 0 /\ -1+it78 >= 0 /\ -i4 >= 0) /\ i3'=i3+3*it78, i5'=-it78+i5
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ 254-i5 >= 0 /\ i4 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -i4 >= 0) /\ i3'=i3+3*i5, i5'=0

Start location: evalfstart

Location map:
LoAT_sink -> 0
evalfstart -> 1
evalfentryin -> 2
evalfbb3in -> 3
evalfbbin -> 4
evalfreturnin -> 5
evalfbb1in -> 6
evalfbb2in -> 7
evalfstop -> 8

Rules:
   2: (-3+i1 == 0 /\ 254-i5 >= 0 /\ -1+i5 >= 0) /\ i1'=4, i3'=1+i3
  17: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=i5, i5'=i4
  18: (-3+i1 == 0 /\ -i5 >= 0) /\ i1'=8, i3'=2+i3
  19: (-3+i1 == 0 /\ -255+i5 >= 0) /\ i1'=8, i3'=2+i3
  20: (-4+i1 == 0 /\ -1-i4 >= 0) /\ i1'=3, i3'=2+i3, i5'=1+i5
  21: (-1+i4 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=2+i3, i5'=1+i5
  22: (-4+i1 == 0 /\ i4 == 0) /\ i1'=3, i3'=2+i3, i5'=-1+i5
  23: (0 >= 0 /\ -3+i1 >= 0 /\ 254-i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -1-i4 >= 0) /\ i3'=765+i3-3*i5, i5'=255
  24: (0 >= 0 /\ -3+i1 >= 0 /\ 254-i5 >= 0 /\ i4 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -i4 >= 0) /\ i3'=i3+3*i5, i5'=0

Dependency graph:
2 -> 20, 2 -> 21, 2 -> 22
17 -> 2, 17 -> 18, 17 -> 19, 17 -> 23, 17 -> 24
20 -> 2, 20 -> 18, 20 -> 19, 20 -> 23, 20 -> 24
21 -> 2, 21 -> 18, 21 -> 19, 21 -> 23, 21 -> 24
22 -> 2, 22 -> 18, 22 -> 19, 22 -> 23, 22 -> 24
23 -> 2, 23 -> 18, 23 -> 19, 23 -> 24
24 -> 2, 24 -> 18, 24 -> 19, 24 -> 23

	Trace

	17[(-1+i1 == 0)]
	24[(0 >= 0 /\ -3+i1 >= 0 /\ 254-i5 >= 0 /\ i4 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{19[T], 23[T]}
	{24[T]}
	
Step with 18

	Trace

	17[(-1+i1 == 0)]
	24[(0 >= 0 /\ -3+i1 >= 0 /\ 254-i5 >= 0 /\ i4 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -i4 >= 0)]
	18[(-3+i1 == 0 /\ -i5 >= 0)]
	
	Blocked

	{}
	{19[T], 23[T]}
	{19[T], 23[T], 24[T]}
	{}
	
Backtrack

	Trace

	17[(-1+i1 == 0)]
	24[(0 >= 0 /\ -3+i1 >= 0 /\ 254-i5 >= 0 /\ i4 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{19[T], 23[T]}
	{18[T], 19[T], 23[T], 24[T]}
	
Backtrack

	Trace

	17[(-1+i1 == 0)]
	
	Blocked

	{}
	{19[T], 23[T], 24[T]}
	
Step with 18

	Trace

	17[(-1+i1 == 0)]
	18[(-3+i1 == 0 /\ -i5 >= 0)]
	
	Blocked

	{}
	{19[T], 23[T], 24[T]}
	{}
	
Backtrack

	Trace

	17[(-1+i1 == 0)]
	
	Blocked

	{}
	{18[T], 19[T], 23[T], 24[T]}
	
Step with 2

	Trace

	17[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ 254-i5 >= 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{18[T], 19[T], 23[T], 24[T]}
	{}
	
Step with 22

	Trace

	17[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ 254-i5 >= 0 /\ -1+i5 >= 0)]
	22[(-4+i1 == 0 /\ i4 == 0)]
	
	Blocked

	{}
	{18[T], 19[T], 23[T], 24[T]}
	{}
	{}
	
Covered

	Trace

	17[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ 254-i5 >= 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{18[T], 19[T], 23[T], 24[T]}
	{22[T]}
	
Step with 21

	Trace

	17[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ 254-i5 >= 0 /\ -1+i5 >= 0)]
	21[(-1+i4 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{18[T], 19[T], 23[T], 24[T]}
	{22[T]}
	{}
	
Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -3+i1 == 0 /\ -1+i4 >= 0 /\ 254-i5 >= 0 /\ -1+i5 >= 0) /\ i1'=3, i3'=3+i3, i5'=1+i5
		New rule:
		(-3+i1 == 0 /\ -1+i4 >= 0 /\ 254-i5 >= 0 /\ -1+i5 >= 0) /\ i1'=3, i3'=3+i3, i5'=1+i5

	Loop Acceleration

	Original rule:
	(-3+i1 == 0 /\ -1+i4 >= 0 /\ 254-i5 >= 0 /\ -1+i5 >= 0) /\ i1'=3, i3'=3+i3, i5'=1+i5
	New rule:
	(-3+i1 >= 0 /\ -1+i4 >= 0 /\ 255-it131-i5 >= 0 /\ -1+it131 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0) /\ i1'=i1, i3'=i3+3*it131, i5'=it131+i5

		-3+i1 >= 0 [0]: unchanged
		
		-1+i4 >= 0 [0]: unchanged
		
		254-i5 >= 0 [0]: montonic decrease yields 255-it131-i5 >= 0
		
		3-i1 >= 0 [0]: unchanged
		
		-1+i5 >= 0 [0]: monotonic increase yields -1+i5 >= 0
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, -1+i4 >= 0 -> -1+i4 >= 0, 254-i5 >= 0 -> 255-it131-i5 >= 0, 3-i1 >= 0 -> 3-i1 >= 0, -1+i5 >= 0 -> -1+i5 >= 0}

	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ -1+i4 >= 0 /\ 255-it131-i5 >= 0 /\ -1+it131 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0) /\ i1'=i1, i3'=i3+3*it131, i5'=it131+i5
	New rule:
	(-3+i1 >= 0 /\ -1+i4 >= 0 /\ 255-it131-i5 >= 0 /\ -1+it131 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0) /\ i3'=i3+3*it131, i5'=it131+i5
	
	Instantiation

	Original rule:
	(-3+i1 >= 0 /\ -1+i4 >= 0 /\ 255-it131-i5 >= 0 /\ -1+it131 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0) /\ i3'=i3+3*it131, i5'=it131+i5
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 254-i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0) /\ i3'=765+i3-3*i5, i5'=255

Start location: evalfstart

Location map:
LoAT_sink -> 0
evalfstart -> 1
evalfentryin -> 2
evalfbb3in -> 3
evalfbbin -> 4
evalfreturnin -> 5
evalfbb1in -> 6
evalfbb2in -> 7
evalfstop -> 8

Rules:
   2: (-3+i1 == 0 /\ 254-i5 >= 0 /\ -1+i5 >= 0) /\ i1'=4, i3'=1+i3
  17: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=i5, i5'=i4
  18: (-3+i1 == 0 /\ -i5 >= 0) /\ i1'=8, i3'=2+i3
  19: (-3+i1 == 0 /\ -255+i5 >= 0) /\ i1'=8, i3'=2+i3
  20: (-4+i1 == 0 /\ -1-i4 >= 0) /\ i1'=3, i3'=2+i3, i5'=1+i5
  21: (-1+i4 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=2+i3, i5'=1+i5
  22: (-4+i1 == 0 /\ i4 == 0) /\ i1'=3, i3'=2+i3, i5'=-1+i5
  23: (0 >= 0 /\ -3+i1 >= 0 /\ 254-i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -1-i4 >= 0) /\ i3'=765+i3-3*i5, i5'=255
  24: (0 >= 0 /\ -3+i1 >= 0 /\ 254-i5 >= 0 /\ i4 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -i4 >= 0) /\ i3'=i3+3*i5, i5'=0
  25: (0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 254-i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0) /\ i3'=765+i3-3*i5, i5'=255

Dependency graph:
2 -> 20, 2 -> 21, 2 -> 22
17 -> 2, 17 -> 18, 17 -> 19, 17 -> 23, 17 -> 24, 17 -> 25
20 -> 2, 20 -> 18, 20 -> 19, 20 -> 23, 20 -> 24, 20 -> 25
21 -> 2, 21 -> 18, 21 -> 19, 21 -> 23, 21 -> 24, 21 -> 25
22 -> 2, 22 -> 18, 22 -> 19, 22 -> 23, 22 -> 24, 22 -> 25
23 -> 2, 23 -> 18, 23 -> 19, 23 -> 24, 23 -> 25
24 -> 2, 24 -> 18, 24 -> 19, 24 -> 23, 24 -> 25
25 -> 2, 25 -> 18, 25 -> 19, 25 -> 23, 25 -> 24

	Trace

	17[(-1+i1 == 0)]
	25[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 254-i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{18[T], 19[T], 23[T], 24[T]}
	{25[T]}
	
Step with 19

	Trace

	17[(-1+i1 == 0)]
	25[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 254-i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0)]
	19[(-3+i1 == 0 /\ -255+i5 >= 0)]
	
	Blocked

	{}
	{18[T], 19[T], 23[T], 24[T]}
	{25[T]}
	{}
	
Backtrack

	Trace

	17[(-1+i1 == 0)]
	25[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 254-i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{18[T], 19[T], 23[T], 24[T]}
	{19[T], 25[T]}
	
Backtrack

	Trace

	17[(-1+i1 == 0)]
	
	Blocked

	{}
	{18[T], 19[T], 23[T], 24[T], 25[T]}
	
Step with 2

	Trace

	17[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ 254-i5 >= 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{18[T], 19[T], 23[T], 24[T], 25[T]}
	{}
	
Step with 22

	Trace

	17[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ 254-i5 >= 0 /\ -1+i5 >= 0)]
	22[(-4+i1 == 0 /\ i4 == 0)]
	
	Blocked

	{}
	{18[T], 19[T], 23[T], 24[T], 25[T]}
	{}
	{}
	
Covered

	Trace

	17[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ 254-i5 >= 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{18[T], 19[T], 23[T], 24[T], 25[T]}
	{22[T]}
	
Step with 21

	Trace

	17[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ 254-i5 >= 0 /\ -1+i5 >= 0)]
	21[(-1+i4 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{18[T], 19[T], 23[T], 24[T], 25[T]}
	{22[T]}
	{}
	
Covered

	Trace

	17[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ 254-i5 >= 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{18[T], 19[T], 23[T], 24[T], 25[T]}
	{21[T], 22[T]}
	
Step with 20

	Trace

	17[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ 254-i5 >= 0 /\ -1+i5 >= 0)]
	20[(-4+i1 == 0 /\ -1-i4 >= 0)]
	
	Blocked

	{}
	{18[T], 19[T], 23[T], 24[T], 25[T]}
	{21[T], 22[T]}
	{}
	
Covered

	Trace

	17[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ 254-i5 >= 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{18[T], 19[T], 23[T], 24[T], 25[T]}
	{20[T], 21[T], 22[T]}
	
Backtrack

	Trace

	17[(-1+i1 == 0)]
	
	Blocked

	{}
	{2[T], 18[T], 19[T], 23[T], 24[T], 25[T]}
	
Backtrack

	Trace

	Blocked

	{17[T]}
	
Accept

Constant


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁
  Temp_Vars:  
  Locations:  l0, l1, l2, l3, l4, l5, l6, l7
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁) → l6(X₀, X₁)
  t₂: l1(X₀, X₁) → l2(X₀, X₁) :|: X₁ ≤ 254 ∧ 1 ≤ X₁
  t₃: l1(X₀, X₁) → l5(X₀, X₁) :|: X₁ ≤ 0
  t₄: l1(X₀, X₁) → l5(X₀, X₁) :|: 255 ≤ X₁
  t₅: l2(X₀, X₁) → l3(X₀, X₁) :|: 1+X₀ ≤ 0
  t₆: l2(X₀, X₁) → l3(X₀, X₁) :|: 1 ≤ X₀
  t₇: l2(X₀, X₁) → l4(X₀, X₁) :|: 0 ≤ X₀ ∧ X₀ ≤ 0
  t₈: l3(X₀, X₁) → l1(X₀, 1+X₁)
  t₉: l4(X₀, X₁) → l1(X₀, X₁-1)
  t₁₀: l5(X₀, X₁) → l7(X₀, X₁)
  t₁: l6(X₀, X₁) → l1(X₁, X₀)


Preprocessing
  Found invariant X₁ ≤ 254 ∧ 1 ≤ X₁ for location l2


  Found invariant X₁ ≤ 254 ∧ X₁ ≤ 254+X₀ ∧ X₀+X₁ ≤ 254 ∧ 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ X₀ ≤ 0 ∧ 0 ≤ X₀ for location l4


  Found invariant X₁ ≤ 254 ∧ 1 ≤ X₁ for location l3


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁
  Temp_Vars:  
  Locations:  l0, l1, l2, l3, l4, l5, l6, l7
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁) → l6(X₀, X₁)
  t₂: l1(X₀, X₁) → l2(X₀, X₁) :|: X₁ ≤ 254 ∧ 1 ≤ X₁
  t₃: l1(X₀, X₁) → l5(X₀, X₁) :|: X₁ ≤ 0
  t₄: l1(X₀, X₁) → l5(X₀, X₁) :|: 255 ≤ X₁
  t₅: l2(X₀, X₁) → l3(X₀, X₁) :|: 1+X₀ ≤ 0 ∧ X₁ ≤ 254 ∧ 1 ≤ X₁
  t₆: l2(X₀, X₁) → l3(X₀, X₁) :|: 1 ≤ X₀ ∧ X₁ ≤ 254 ∧ 1 ≤ X₁
  t₇: l2(X₀, X₁) → l4(X₀, X₁) :|: 0 ≤ X₀ ∧ X₀ ≤ 0 ∧ X₁ ≤ 254 ∧ 1 ≤ X₁
  t₈: l3(X₀, X₁) → l1(X₀, 1+X₁) :|: X₁ ≤ 254 ∧ 1 ≤ X₁
  t₉: l4(X₀, X₁) → l1(X₀, X₁-1) :|: X₁ ≤ 254+X₀ ∧ X₀+X₁ ≤ 254 ∧ X₁ ≤ 254 ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 0 ≤ X₀ ∧ X₀ ≤ 0
  t₁₀: l5(X₀, X₁) → l7(X₀, X₁)
  t₁: l6(X₀, X₁) → l1(X₁, X₀)


  Found invariant X₁ ≤ 254 ∧ X₁ ≤ 253+X₀ ∧ 2 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l2_v3


  Found invariant X₁ ≤ 253 ∧ X₁ ≤ 253+X₀ ∧ X₀+X₁ ≤ 253 ∧ 0 ≤ X₁ ∧ 0 ≤ X₀+X₁ ∧ X₀ ≤ X₁ ∧ X₀ ≤ 0 ∧ 0 ≤ X₀ for location l1_v3


  Found invariant X₁ ≤ 255 ∧ X₀+X₁ ≤ 254 ∧ 2 ≤ X₁ ∧ 3+X₀ ≤ X₁ ∧ 1+X₀ ≤ 0 for location l1_v1


  Found invariant X₁ ≤ 254 ∧ X₀+X₁ ≤ 253 ∧ 2 ≤ X₁ ∧ 3+X₀ ≤ X₁ ∧ 1+X₀ ≤ 0 for location l3_v3


  Found invariant X₁ ≤ 254 ∧ X₁ ≤ 254+X₀ ∧ X₀+X₁ ≤ 254 ∧ 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ X₀ ≤ 0 ∧ 0 ≤ X₀ for location l4_v1


  Found invariant X₁ ≤ 253 ∧ X₁ ≤ 253+X₀ ∧ X₀+X₁ ≤ 253 ∧ 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ X₀ ≤ 0 ∧ 0 ≤ X₀ for location l4_v2


  Found invariant X₁ ≤ 254 ∧ X₁ ≤ 253+X₀ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l3_v1


  Found invariant X₁ ≤ 255 ∧ X₁ ≤ 254+X₀ ∧ 2 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l1_v2


  Found invariant X₁ ≤ 254 ∧ X₀+X₁ ≤ 253 ∧ 1 ≤ X₁ ∧ 2+X₀ ≤ X₁ ∧ 1+X₀ ≤ 0 for location l3_v2


  Found invariant X₁ ≤ 254 ∧ 1 ≤ X₁ for location l2_v1


  Found invariant X₁ ≤ 253 ∧ X₁ ≤ 253+X₀ ∧ X₀+X₁ ≤ 253 ∧ 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ X₀ ≤ 0 ∧ 0 ≤ X₀ for location l2_v4


  Found invariant X₁ ≤ 254 ∧ X₀+X₁ ≤ 253 ∧ 2 ≤ X₁ ∧ 3+X₀ ≤ X₁ ∧ 1+X₀ ≤ 0 for location l2_v2


  Found invariant X₁ ≤ 254 ∧ X₁ ≤ 253+X₀ ∧ 2 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l3_v4


Analysing control-flow refined program
MPRF for transition t₂₆₉: l1_v2(X₀, X₁) → l2_v3(X₀, X₁) :|: X₁ ≤ 254 ∧ 1 ≤ X₁ ∧ X₁ ≤ 255 ∧ X₁ ≤ 254+X₀ ∧ 1 ≤ X₀ ∧ 2 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 0 ≤ X₀ ∧ 0 ≤ X₁ of depth 1:
  new bound:
    511 {O(1)}

  MPRF:
    • l1_v2: [256-X₁]
    • l2_v3: [255-X₁]
    • l3_v4: [255-X₁]




MPRF for transition t₂₇₀: l2_v3(X₀, X₁) → l3_v4(X₀, X₁) :|: 1 ≤ X₀ ∧ X₁ ≤ 254 ∧ X₁ ≤ 253+X₀ ∧ 1 ≤ X₁ ∧ 2 ≤ X₁ ∧ 3 ≤ X₀+X₁ of depth 1:
  new bound:
    510 {O(1)}

  MPRF:
    • l1_v2: [255-X₁]
    • l2_v3: [255-X₁]
    • l3_v4: [254-X₁]




MPRF for transition t₂₇₁: l3_v4(X₀, X₁) → l1_v2(X₀, 1+X₁) :|: X₁ ≤ 254 ∧ X₁ ≤ 253+X₀ ∧ 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ 2 ≤ X₁ ∧ 3 ≤ X₀+X₁ of depth 1:
  new bound:
    510 {O(1)}

  MPRF:
    • l1_v2: [255-X₁]
    • l2_v3: [255-X₁]
    • l3_v4: [255-X₁]




MPRF for transition t₂₆₄: l1_v1(X₀, X₁) → l2_v2(X₀, X₁) :|: X₁ ≤ 254 ∧ 1 ≤ X₁ ∧ X₁ ≤ 255 ∧ X₀+X₁ ≤ 254 ∧ 1+X₀ ≤ 0 ∧ 2 ≤ X₁ ∧ 3+X₀ ≤ X₁ ∧ X₀ ≤ 0 ∧ 0 ≤ X₁ of depth 1:
  new bound:
    511 {O(1)}

  MPRF:
    • l1_v1: [256-X₁]
    • l2_v2: [255-X₁]
    • l3_v3: [255-X₁]




MPRF for transition t₂₆₅: l2_v2(X₀, X₁) → l3_v3(X₀, X₁) :|: 1+X₀ ≤ 0 ∧ X₁ ≤ 254 ∧ X₀+X₁ ≤ 253 ∧ 1 ≤ X₁ ∧ 2 ≤ X₁ ∧ 3+X₀ ≤ X₁ of depth 1:
  new bound:
    510 {O(1)}

  MPRF:
    • l1_v1: [255-X₁]
    • l2_v2: [255-X₁]
    • l3_v3: [254-X₁]




MPRF for transition t₂₆₆: l3_v3(X₀, X₁) → l1_v1(X₀, 1+X₁) :|: X₁ ≤ 254 ∧ X₀+X₁ ≤ 253 ∧ 1+X₀ ≤ 0 ∧ 1 ≤ X₁ ∧ 2 ≤ X₁ ∧ 3+X₀ ≤ X₁ of depth 1:
  new bound:
    510 {O(1)}

  MPRF:
    • l1_v1: [255-X₁]
    • l2_v2: [255-X₁]
    • l3_v3: [255-X₁]




MPRF for transition t₂₇₄: l1_v3(X₀, X₁) → l2_v4(X₀, X₁) :|: X₁ ≤ 254 ∧ 1 ≤ X₁ ∧ X₁ ≤ 255 ∧ X₁ ≤ 253+X₀ ∧ X₀+X₁ ≤ 253 ∧ X₁ ≤ 253 ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ X₀ ≤ 0 ∧ X₀ ≤ X₁ ∧ 0 ≤ X₁ of depth 1:
  new bound:
    254 {O(1)}

  MPRF:
    • l1_v3: [1+X₁]
    • l2_v4: [X₁]
    • l4_v2: [X₁]




MPRF for transition t₂₇₅: l2_v4(X₀, X₁) → l4_v2(X₀, X₁) :|: 0 ≤ X₀ ∧ X₀ ≤ 0 ∧ X₁ ≤ 254 ∧ X₁ ≤ 253+X₀ ∧ X₀+X₁ ≤ 253 ∧ X₁ ≤ 253 ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ of depth 1:
  new bound:
    253 {O(1)}

  MPRF:
    • l1_v3: [X₁]
    • l2_v4: [X₁]
    • l4_v2: [X₁-1]




MPRF for transition t₂₇₆: l4_v2(X₀, X₁) → l1_v3(X₀, X₁-1) :|: X₁ ≤ 254+X₀ ∧ X₀+X₁ ≤ 254 ∧ X₁ ≤ 254 ∧ X₁ ≤ 253+X₀ ∧ X₀+X₁ ≤ 253 ∧ X₁ ≤ 253 ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 0 ≤ X₀ ∧ X₀ ≤ 0 of depth 1:
  new bound:
    253 {O(1)}

  MPRF:
    • l1_v3: [X₁]
    • l2_v4: [X₁]
    • l4_v2: [X₁]




CFR: Improvement to new bound with the following program: 
  method: PartialEvaluation new bound: 
    O(1)

  cfr-program: 
    Start:  l0
    Program_Vars:  X₀, X₁
    Temp_Vars:  
    Locations:  l0, l1, l1_v1, l1_v2, l1_v3, l2_v1, l2_v2, l2_v3, l2_v4, l3_v1, l3_v2, l3_v3, l3_v4, l4_v1, l4_v2, l5, l6, l7
    Return Locations:  
    Transitions:
    t₀: l0(X₀, X₁) → l6(X₀, X₁)
    t₂₅₈: l1(X₀, X₁) → l2_v1(X₀, X₁) :|: X₁ ≤ 254 ∧ 1 ≤ X₁
    t₃: l1(X₀, X₁) → l5(X₀, X₁) :|: X₁ ≤ 0
    t₄: l1(X₀, X₁) → l5(X₀, X₁) :|: 255 ≤ X₁
    t₂₅₆: l1(X₀, X₁) → l5(X₀, X₁) :|: 255 ≤ X₁
    t₂₅₇: l1(X₀, X₁) → l5(X₀, X₁) :|: X₁ ≤ 0
    t₂₆₄: l1_v1(X₀, X₁) → l2_v2(X₀, X₁) :|: X₁ ≤ 254 ∧ 1 ≤ X₁ ∧ X₁ ≤ 255 ∧ X₀+X₁ ≤ 254 ∧ 1+X₀ ≤ 0 ∧ 2 ≤ X₁ ∧ 3+X₀ ≤ X₁ ∧ X₀ ≤ 0 ∧ 0 ≤ X₁
    t₂₆₃: l1_v1(X₀, X₁) → l5(X₀, X₁) :|: 255 ≤ X₁ ∧ X₁ ≤ 255 ∧ X₀+X₁ ≤ 254 ∧ 1+X₀ ≤ 0 ∧ 1 ≤ X₁ ∧ 2 ≤ X₁ ∧ 3+X₀ ≤ X₁ ∧ X₀ ≤ 0 ∧ 0 ≤ X₁
    t₂₆₉: l1_v2(X₀, X₁) → l2_v3(X₀, X₁) :|: X₁ ≤ 254 ∧ 1 ≤ X₁ ∧ X₁ ≤ 255 ∧ X₁ ≤ 254+X₀ ∧ 1 ≤ X₀ ∧ 2 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 0 ≤ X₀ ∧ 0 ≤ X₁
    t₂₆₈: l1_v2(X₀, X₁) → l5(X₀, X₁) :|: 255 ≤ X₁ ∧ X₁ ≤ 255 ∧ X₁ ≤ 254+X₀ ∧ 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ 2 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 0 ≤ X₀ ∧ 0 ≤ X₁
    t₂₇₄: l1_v3(X₀, X₁) → l2_v4(X₀, X₁) :|: X₁ ≤ 254 ∧ 1 ≤ X₁ ∧ X₁ ≤ 255 ∧ X₁ ≤ 253+X₀ ∧ X₀+X₁ ≤ 253 ∧ X₁ ≤ 253 ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ X₀ ≤ 0 ∧ X₀ ≤ X₁ ∧ 0 ≤ X₁
    t₂₇₃: l1_v3(X₀, X₁) → l5(X₀, X₁) :|: X₁ ≤ 0 ∧ X₁ ≤ 255 ∧ X₁ ≤ 254 ∧ X₁ ≤ 253+X₀ ∧ X₀+X₁ ≤ 253 ∧ X₁ ≤ 253 ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ X₀ ≤ 0 ∧ X₀ ≤ X₁ ∧ 0 ≤ X₁
    t₂₆₀: l2_v1(X₀, X₁) → l3_v1(X₀, X₁) :|: 1 ≤ X₀ ∧ X₁ ≤ 254 ∧ 1 ≤ X₁
    t₂₆₁: l2_v1(X₀, X₁) → l3_v2(X₀, X₁) :|: 1+X₀ ≤ 0 ∧ X₁ ≤ 254 ∧ 1 ≤ X₁
    t₂₅₉: l2_v1(X₀, X₁) → l4_v1(X₀, X₁) :|: 0 ≤ X₀ ∧ X₀ ≤ 0 ∧ X₁ ≤ 254 ∧ 1 ≤ X₁
    t₂₆₅: l2_v2(X₀, X₁) → l3_v3(X₀, X₁) :|: 1+X₀ ≤ 0 ∧ X₁ ≤ 254 ∧ X₀+X₁ ≤ 253 ∧ 1 ≤ X₁ ∧ 2 ≤ X₁ ∧ 3+X₀ ≤ X₁
    t₂₇₀: l2_v3(X₀, X₁) → l3_v4(X₀, X₁) :|: 1 ≤ X₀ ∧ X₁ ≤ 254 ∧ X₁ ≤ 253+X₀ ∧ 1 ≤ X₁ ∧ 2 ≤ X₁ ∧ 3 ≤ X₀+X₁
    t₂₇₅: l2_v4(X₀, X₁) → l4_v2(X₀, X₁) :|: 0 ≤ X₀ ∧ X₀ ≤ 0 ∧ X₁ ≤ 254 ∧ X₁ ≤ 253+X₀ ∧ X₀+X₁ ≤ 253 ∧ X₁ ≤ 253 ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁
    t₂₆₇: l3_v1(X₀, X₁) → l1_v2(X₀, 1+X₁) :|: X₁ ≤ 254 ∧ X₁ ≤ 253+X₀ ∧ 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀+X₁
    t₂₆₂: l3_v2(X₀, X₁) → l1_v1(X₀, 1+X₁) :|: X₁ ≤ 254 ∧ X₀+X₁ ≤ 253 ∧ 1+X₀ ≤ 0 ∧ 1 ≤ X₁ ∧ 2+X₀ ≤ X₁
    t₂₆₆: l3_v3(X₀, X₁) → l1_v1(X₀, 1+X₁) :|: X₁ ≤ 254 ∧ X₀+X₁ ≤ 253 ∧ 1+X₀ ≤ 0 ∧ 1 ≤ X₁ ∧ 2 ≤ X₁ ∧ 3+X₀ ≤ X₁
    t₂₇₁: l3_v4(X₀, X₁) → l1_v2(X₀, 1+X₁) :|: X₁ ≤ 254 ∧ X₁ ≤ 253+X₀ ∧ 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ 2 ≤ X₁ ∧ 3 ≤ X₀+X₁
    t₂₇₂: l4_v1(X₀, X₁) → l1_v3(X₀, X₁-1) :|: X₁ ≤ 254+X₀ ∧ X₀+X₁ ≤ 254 ∧ X₁ ≤ 254 ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 0 ≤ X₀ ∧ X₀ ≤ 0
    t₂₇₆: l4_v2(X₀, X₁) → l1_v3(X₀, X₁-1) :|: X₁ ≤ 254+X₀ ∧ X₀+X₁ ≤ 254 ∧ X₁ ≤ 254 ∧ X₁ ≤ 253+X₀ ∧ X₀+X₁ ≤ 253 ∧ X₁ ≤ 253 ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 0 ≤ X₀ ∧ X₀ ≤ 0
    t₁₀: l5(X₀, X₁) → l7(X₀, X₁)
    t₁: l6(X₀, X₁) → l1(X₁, X₀)




All Bounds
Timebounds
  Overall timebound:3839 {O(1)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₁₀: 1 {O(1)}
    t₂₅₆: 1 {O(1)}
    t₂₅₇: 1 {O(1)}
    t₂₅₈: 1 {O(1)}
    t₂₅₉: 1 {O(1)}
    t₂₆₀: 1 {O(1)}
    t₂₆₁: 1 {O(1)}
    t₂₆₂: 1 {O(1)}
    t₂₆₃: 1 {O(1)}
    t₂₆₄: 511 {O(1)}
    t₂₆₅: 510 {O(1)}
    t₂₆₆: 510 {O(1)}
    t₂₆₇: 1 {O(1)}
    t₂₆₈: 1 {O(1)}
    t₂₆₉: 511 {O(1)}
    t₂₇₀: 510 {O(1)}
    t₂₇₁: 510 {O(1)}
    t₂₇₂: 1 {O(1)}
    t₂₇₃: 1 {O(1)}
    t₂₇₄: 254 {O(1)}
    t₂₇₅: 253 {O(1)}
    t₂₇₆: 253 {O(1)}


Costbounds
  Overall costbound: 3839 {O(1)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₁₀: 1 {O(1)}
    t₂₅₆: 1 {O(1)}
    t₂₅₇: 1 {O(1)}
    t₂₅₈: 1 {O(1)}
    t₂₅₉: 1 {O(1)}
    t₂₆₀: 1 {O(1)}
    t₂₆₁: 1 {O(1)}
    t₂₆₂: 1 {O(1)}
    t₂₆₃: 1 {O(1)}
    t₂₆₄: 511 {O(1)}
    t₂₆₅: 510 {O(1)}
    t₂₆₆: 510 {O(1)}
    t₂₆₇: 1 {O(1)}
    t₂₆₈: 1 {O(1)}
    t₂₆₉: 511 {O(1)}
    t₂₇₀: 510 {O(1)}
    t₂₇₁: 510 {O(1)}
    t₂₇₂: 1 {O(1)}
    t₂₇₃: 1 {O(1)}
    t₂₇₄: 254 {O(1)}
    t₂₇₅: 253 {O(1)}
    t₂₇₆: 253 {O(1)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₁, X₀: X₁ {O(n)}
    t₁, X₁: X₀ {O(n)}
    t₃, X₀: X₁ {O(n)}
    t₃, X₁: X₀ {O(n)}
    t₄, X₀: X₁ {O(n)}
    t₄, X₁: X₀ {O(n)}
    t₁₀, X₀: 8⋅X₁ {O(n)}
    t₁₀, X₁: 4⋅X₀+510 {O(n)}
    t₂₅₆, X₀: X₁ {O(n)}
    t₂₅₆, X₁: X₀ {O(n)}
    t₂₅₇, X₀: X₁ {O(n)}
    t₂₅₇, X₁: X₀ {O(n)}
    t₂₅₈, X₀: X₁ {O(n)}
    t₂₅₈, X₁: 254 {O(1)}
    t₂₅₉, X₀: 0 {O(1)}
    t₂₅₉, X₁: 254 {O(1)}
    t₂₆₀, X₀: X₁ {O(n)}
    t₂₆₀, X₁: 254 {O(1)}
    t₂₆₁, X₀: X₁ {O(n)}
    t₂₆₁, X₁: 254 {O(1)}
    t₂₆₂, X₀: X₁ {O(n)}
    t₂₆₂, X₁: 255 {O(1)}
    t₂₆₃, X₀: 2⋅X₁ {O(n)}
    t₂₆₃, X₁: 255 {O(1)}
    t₂₆₄, X₀: X₁ {O(n)}
    t₂₆₄, X₁: 254 {O(1)}
    t₂₆₅, X₀: X₁ {O(n)}
    t₂₆₅, X₁: 254 {O(1)}
    t₂₆₆, X₀: X₁ {O(n)}
    t₂₆₆, X₁: 255 {O(1)}
    t₂₆₇, X₀: X₁ {O(n)}
    t₂₆₇, X₁: 255 {O(1)}
    t₂₆₈, X₀: 2⋅X₁ {O(n)}
    t₂₆₈, X₁: 255 {O(1)}
    t₂₆₉, X₀: X₁ {O(n)}
    t₂₆₉, X₁: 254 {O(1)}
    t₂₇₀, X₀: X₁ {O(n)}
    t₂₇₀, X₁: 254 {O(1)}
    t₂₇₁, X₀: X₁ {O(n)}
    t₂₇₁, X₁: 255 {O(1)}
    t₂₇₂, X₀: 0 {O(1)}
    t₂₇₂, X₁: 253 {O(1)}
    t₂₇₃, X₀: 0 {O(1)}
    t₂₇₃, X₁: 0 {O(1)}
    t₂₇₄, X₀: 0 {O(1)}
    t₂₇₄, X₁: 253 {O(1)}
    t₂₇₅, X₀: 0 {O(1)}
    t₂₇₅, X₁: 253 {O(1)}
    t₂₇₆, X₀: 0 {O(1)}
    t₂₇₆, X₁: 252 {O(1)}

