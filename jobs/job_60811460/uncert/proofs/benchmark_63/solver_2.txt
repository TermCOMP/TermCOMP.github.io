WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [evalperfectbb3in/4,evalperfectbb4in/4]
1. recursive  : [evalperfectbb4in_loop_cont/10,evalperfectbb5in/9,evalperfectbb8in/9]
2. non_recursive  : [evalperfectstop/5]
3. non_recursive  : [evalperfectreturnin/5]
4. non_recursive  : [evalperfectbb9in/5]
5. non_recursive  : [exit_location/1]
6. non_recursive  : [evalperfectbb8in_loop_cont/6]
7. non_recursive  : [evalperfectbb1in/5]
8. non_recursive  : [evalperfectentryin/5]
9. non_recursive  : [evalperfectstart/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into evalperfectbb4in/4
1. SCC is partially evaluated into evalperfectbb8in/9
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into evalperfectbb9in/5
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into evalperfectbb8in_loop_cont/6
7. SCC is partially evaluated into evalperfectbb1in/5
8. SCC is partially evaluated into evalperfectentryin/5
9. SCC is partially evaluated into evalperfectstart/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations evalperfectbb4in/4 
* CE 15 is refined into CE [19] 
* CE 14 is refined into CE [20] 
* CE 13 is refined into CE [21] 


### Cost equations --> "Loop" of evalperfectbb4in/4 
* CEs [21] --> Loop 19 
* CEs [19] --> Loop 20 
* CEs [20] --> Loop 21 

### Ranking functions of CR evalperfectbb4in(C,D,E,F) 
* RF of phase [19]: [-C+D+1,D]

#### Partial ranking functions of CR evalperfectbb4in(C,D,E,F) 
* Partial RF of phase [19]:
  - RF of loop [19:1]:
    -C+D+1
    D


### Specialization of cost equations evalperfectbb8in/9 
* CE 9 is refined into CE [22] 
* CE 8 is refined into CE [23,24] 
* CE 10 is refined into CE [25] 
* CE 5 is refined into CE [26] 
* CE 6 is discarded (unfeasible) 
* CE 7 is refined into CE [27] 


### Cost equations --> "Loop" of evalperfectbb8in/9 
* CEs [26] --> Loop 22 
* CEs [27] --> Loop 23 
* CEs [22] --> Loop 24 
* CEs [23,24] --> Loop 25 
* CEs [25] --> Loop 26 

### Ranking functions of CR evalperfectbb8in(A,B,C,D,E,F,G,H,I) 
* RF of phase [22,23]: [C]

#### Partial ranking functions of CR evalperfectbb8in(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [22,23]:
  - RF of loop [22:1]:
    C-1
  - RF of loop [23:1]:
    C


### Specialization of cost equations evalperfectbb9in/5 
* CE 17 is refined into CE [28] 
* CE 16 is refined into CE [29] 
* CE 18 is refined into CE [30] 


### Cost equations --> "Loop" of evalperfectbb9in/5 
* CEs [28] --> Loop 27 
* CEs [29] --> Loop 28 
* CEs [30] --> Loop 29 

### Ranking functions of CR evalperfectbb9in(A,B,C,D,E) 

#### Partial ranking functions of CR evalperfectbb9in(A,B,C,D,E) 


### Specialization of cost equations evalperfectbb8in_loop_cont/6 
* CE 11 is refined into CE [31,32,33] 
* CE 12 is refined into CE [34] 


### Cost equations --> "Loop" of evalperfectbb8in_loop_cont/6 
* CEs [33] --> Loop 30 
* CEs [32] --> Loop 31 
* CEs [31] --> Loop 32 
* CEs [34] --> Loop 33 

### Ranking functions of CR evalperfectbb8in_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR evalperfectbb8in_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations evalperfectbb1in/5 
* CE 4 is refined into CE [35,36,37,38,39,40] 


### Cost equations --> "Loop" of evalperfectbb1in/5 
* CEs [37] --> Loop 34 
* CEs [35,36,38,39,40] --> Loop 35 

### Ranking functions of CR evalperfectbb1in(A,B,C,D,E) 

#### Partial ranking functions of CR evalperfectbb1in(A,B,C,D,E) 


### Specialization of cost equations evalperfectentryin/5 
* CE 3 is refined into CE [41,42] 
* CE 2 is refined into CE [43] 


### Cost equations --> "Loop" of evalperfectentryin/5 
* CEs [42] --> Loop 36 
* CEs [41] --> Loop 37 
* CEs [43] --> Loop 38 

### Ranking functions of CR evalperfectentryin(A,B,C,D,E) 

#### Partial ranking functions of CR evalperfectentryin(A,B,C,D,E) 


### Specialization of cost equations evalperfectstart/5 
* CE 1 is refined into CE [44,45,46] 


### Cost equations --> "Loop" of evalperfectstart/5 
* CEs [46] --> Loop 39 
* CEs [45] --> Loop 40 
* CEs [44] --> Loop 41 

### Ranking functions of CR evalperfectstart(A,B,C,D,E) 

#### Partial ranking functions of CR evalperfectstart(A,B,C,D,E) 


Computing Bounds
=====================================

#### Cost of chains of evalperfectbb4in(C,D,E,F):
* Chain [[19],21]: 1*it(19)+0
  Such that:it(19) =< -C+D+1

  with precondition: [E=2,F>=0,C>=F+1,D>=C+F] 

* Chain [[19],20]: 1*it(19)+0
  Such that:it(19) =< -C+D+1

  with precondition: [E=3,C>=1,D>=C] 

* Chain [20]: 0
  with precondition: [E=3,C>=1] 


#### Cost of chains of evalperfectbb8in(A,B,C,D,E,F,G,H,I):
* Chain [[22,23],26]: 2*it(22)+1*s(5)+1*s(6)+0
  Such that:aux(1) =< A
aux(5) =< C
it(22) =< aux(5)
aux(2) =< aux(1)
s(5) =< it(22)*aux(1)
s(6) =< it(22)*aux(2)

  with precondition: [E=3,C>=1,A>=B,A>=C+1] 

* Chain [[22,23],25]: 2*it(22)+1*s(5)+1*s(6)+1*s(7)+0
  Such that:aux(6) =< A
aux(7) =< C
s(7) =< aux(6)
it(22) =< aux(7)
aux(2) =< aux(6)
s(5) =< it(22)*aux(6)
s(6) =< it(22)*aux(2)

  with precondition: [E=3,C>=2,A>=B,A>=C+1] 

* Chain [[22,23],24]: 2*it(22)+1*s(5)+1*s(6)+0
  Such that:aux(1) =< A
aux(8) =< C
it(22) =< aux(8)
aux(2) =< aux(1)
s(5) =< it(22)*aux(1)
s(6) =< it(22)*aux(2)

  with precondition: [E=4,H=0,I=0,F=G,C>=1,A>=B,A>=C+1,B>=F+1] 

* Chain [26]: 0
  with precondition: [E=3,A>=2,A>=B,A>=C+1,A+C>=B+1] 

* Chain [25]: 1*s(7)+0
  Such that:s(7) =< A-C+1

  with precondition: [E=3,C>=1,A>=B,A>=C+1] 


#### Cost of chains of evalperfectbb9in(A,B,C,D,E):
* Chain [29]: 0
  with precondition: [A=0] 

* Chain [28]: 0
  with precondition: [0>=A+1] 

* Chain [27]: 0
  with precondition: [A>=1] 


#### Cost of chains of evalperfectbb8in_loop_cont(A,B,C,D,E,F):
* Chain [33]: 0
  with precondition: [A=3] 

* Chain [32]: 0
  with precondition: [A=4,B=0] 

* Chain [31]: 0
  with precondition: [A=4,0>=B+1] 

* Chain [30]: 0
  with precondition: [A=4,B>=1] 


#### Cost of chains of evalperfectbb1in(A,B,C,D,E):
* Chain [35]: 1*s(16)+8*s(18)+4*s(20)+4*s(21)+0
  Such that:s(16) =< 2
aux(13) =< A
s(18) =< aux(13)
s(19) =< aux(13)
s(20) =< s(18)*aux(13)
s(21) =< s(18)*s(19)

  with precondition: [A>=2] 

* Chain [34]: 3*s(42)+1*s(45)+1*s(46)+0
  Such that:aux(14) =< A
s(42) =< aux(14)
s(44) =< aux(14)
s(45) =< s(42)*aux(14)
s(46) =< s(42)*s(44)

  with precondition: [A>=3] 


#### Cost of chains of evalperfectentryin(A,B,C,D,E):
* Chain [38]: 0
  with precondition: [1>=A] 

* Chain [37]: 1*s(47)+8*s(49)+4*s(51)+4*s(52)+0
  Such that:s(47) =< 2
s(48) =< A
s(49) =< s(48)
s(50) =< s(48)
s(51) =< s(49)*s(48)
s(52) =< s(49)*s(50)

  with precondition: [A>=2] 

* Chain [36]: 3*s(54)+1*s(56)+1*s(57)+0
  Such that:s(53) =< A
s(54) =< s(53)
s(55) =< s(53)
s(56) =< s(54)*s(53)
s(57) =< s(54)*s(55)

  with precondition: [A>=3] 


#### Cost of chains of evalperfectstart(A,B,C,D,E):
* Chain [41]: 0
  with precondition: [1>=A] 

* Chain [40]: 1*s(58)+8*s(60)+4*s(62)+4*s(63)+0
  Such that:s(58) =< 2
s(59) =< A
s(60) =< s(59)
s(61) =< s(59)
s(62) =< s(60)*s(59)
s(63) =< s(60)*s(61)

  with precondition: [A>=2] 

* Chain [39]: 3*s(65)+1*s(67)+1*s(68)+0
  Such that:s(64) =< A
s(65) =< s(64)
s(66) =< s(64)
s(67) =< s(65)*s(64)
s(68) =< s(65)*s(66)

  with precondition: [A>=3] 


Closed-form bounds of evalperfectstart(A,B,C,D,E): 
-------------------------------------
* Chain [41] with precondition: [1>=A] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [40] with precondition: [A>=2] 
    - Upper bound: 8*A+2+8*A*A 
    - Complexity: n^2 
* Chain [39] with precondition: [A>=3] 
    - Upper bound: 2*A*A+3*A 
    - Complexity: n^2 

### Maximum cost of evalperfectstart(A,B,C,D,E): nat(A)*5+2+nat(A)*6*nat(A)+(nat(A)*2*nat(A)+nat(A)*3) 
Asymptotic class: n^2 
* Total analysis performed in 146 ms.

