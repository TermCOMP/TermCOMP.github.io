WORST_CASE(Omega(n^1),O(n^1))

# LoAT Proof:
WORST_CASE(Omega(n^1),?)

WORST_CASE(Omega(n^1),?)
Initial ITS

Start location: evalfstart

Location map:
LoAT_sink -> 0
evalfstart -> 1
evalfentryin -> 2
evalfbb5in -> 3
evalfreturnin -> 4
evalfbb6in -> 5
evalfbb2in -> 6
evalfbb4in -> 7
evalfbb3in -> 8
evalfbb1in -> 9
evalfstop -> 10

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: -2+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=0
   2: (-3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=4, i3'=1+i3
   3: (-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=5, i3'=1+i3
   4: (-1-it2 >= 0 /\ -5+i1 == 0) /\ i1'=6, i3'=1+i3, i6'=i4
   5: (-1+it3 >= 0 /\ -5+i1 == 0) /\ i1'=6, i3'=1+i3, i6'=i4
   6: -5+i1 == 0 /\ i1'=4, i3'=1+i3
   7: (-6+i1 == 0 /\ i6-i5 >= 0) /\ i1'=7, i3'=1+i3
   8: (-6+i1 == 0 /\ -1-i6+i5 >= 0) /\ i1'=8, i3'=1+i3
   9: (-1-it4 >= 0 /\ -8+i1 == 0) /\ i1'=9, i3'=1+i3
  10: (-1+it5 >= 0 /\ -8+i1 == 0) /\ i1'=9, i3'=1+i3
  11: -8+i1 == 0 /\ i1'=7, i3'=1+i3
  12: -9+i1 == 0 /\ i1'=6, i3'=1+i3, i6'=1+i6
  13: -7+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=1+i6
  14: -4+i1 == 0 /\ i1'=10, i3'=1+i3

Dependency graph:
0 -> 1
1 -> 2, 1 -> 3
2 -> 14
3 -> 4, 3 -> 5, 3 -> 6
4 -> 7, 4 -> 8
5 -> 7, 5 -> 8
6 -> 14
7 -> 13
8 -> 9, 8 -> 10, 8 -> 11
9 -> 12
10 -> 12
11 -> 13
12 -> 7, 12 -> 8
13 -> 2, 13 -> 3

Chained Linear Paths

	Applied Chaining

	First rule:
	-1+i1 == 0 /\ i1'=2, i3'=1+i3
	Second rule:
	-2+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=0
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=0
	
	Applied Deletion

	Removed the following rules: 0, 1
	
	Applied Chaining

	First rule:
	(-3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=4, i3'=1+i3
	Second rule:
	-4+i1 == 0 /\ i1'=10, i3'=1+i3
	New rule:
	(0 == 0 /\ -3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=10, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 2
	
	Applied Chaining

	First rule:
	-5+i1 == 0 /\ i1'=4, i3'=1+i3
	Second rule:
	-4+i1 == 0 /\ i1'=10, i3'=1+i3
	New rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=10, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 6, 14
	
	Applied Chaining

	First rule:
	(-6+i1 == 0 /\ i6-i5 >= 0) /\ i1'=7, i3'=1+i3
	Second rule:
	-7+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=1+i6
	New rule:
	(0 == 0 /\ -6+i1 == 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i6
	
	Applied Deletion

	Removed the following rules: 7
	
	Applied Chaining

	First rule:
	(-1-it4 >= 0 /\ -8+i1 == 0) /\ i1'=9, i3'=1+i3
	Second rule:
	-9+i1 == 0 /\ i1'=6, i3'=1+i3, i6'=1+i6
	New rule:
	(0 == 0 /\ -1-it4 >= 0 /\ -8+i1 == 0) /\ i1'=6, i3'=2+i3, i6'=1+i6
	
	Applied Deletion

	Removed the following rules: 9
	
	Applied Chaining

	First rule:
	(-1+it5 >= 0 /\ -8+i1 == 0) /\ i1'=9, i3'=1+i3
	Second rule:
	-9+i1 == 0 /\ i1'=6, i3'=1+i3, i6'=1+i6
	New rule:
	(0 == 0 /\ -1+it5 >= 0 /\ -8+i1 == 0) /\ i1'=6, i3'=2+i3, i6'=1+i6
	
	Applied Deletion

	Removed the following rules: 10, 12
	
	Applied Chaining

	First rule:
	-8+i1 == 0 /\ i1'=7, i3'=1+i3
	Second rule:
	-7+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=1+i6
	New rule:
	(0 == 0 /\ -8+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=1+i6
	
	Applied Deletion

	Removed the following rules: 11, 13

Start location: evalfstart

Location map:
LoAT_sink -> 0
evalfstart -> 1
evalfentryin -> 2
evalfbb5in -> 3
evalfreturnin -> 4
evalfbb6in -> 5
evalfbb2in -> 6
evalfbb4in -> 7
evalfbb3in -> 8
evalfbb1in -> 9
evalfstop -> 10

Rules:
   3: (-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=5, i3'=1+i3
   4: (-1-it2 >= 0 /\ -5+i1 == 0) /\ i1'=6, i3'=1+i3, i6'=i4
   5: (-1+it3 >= 0 /\ -5+i1 == 0) /\ i1'=6, i3'=1+i3, i6'=i4
   8: (-6+i1 == 0 /\ -1-i6+i5 >= 0) /\ i1'=8, i3'=1+i3
  15: (0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=0
  16: (0 == 0 /\ -3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=10, i3'=2+i3
  17: (0 == 0 /\ -5+i1 == 0) /\ i1'=10, i3'=2+i3
  18: (0 == 0 /\ -6+i1 == 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i6
  19: (0 == 0 /\ -1-it4 >= 0 /\ -8+i1 == 0) /\ i1'=6, i3'=2+i3, i6'=1+i6
  20: (0 == 0 /\ -1+it5 >= 0 /\ -8+i1 == 0) /\ i1'=6, i3'=2+i3, i6'=1+i6
  21: (0 == 0 /\ -8+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=1+i6

Dependency graph:
3 -> 4, 3 -> 5, 3 -> 17
4 -> 8, 4 -> 18
5 -> 8, 5 -> 18
8 -> 19, 8 -> 20, 8 -> 21
15 -> 3, 15 -> 16
18 -> 3, 18 -> 16
19 -> 8, 19 -> 18
20 -> 8, 20 -> 18
21 -> 3, 21 -> 16

Preprocessed Transitions

	Eliminated Temporary Variables

	Original rule:
	(-1-it2 >= 0 /\ -5+i1 == 0) /\ i1'=6, i3'=1+i3, i6'=i4
	New rule:
	(-5+i1 == 0) /\ i1'=6, i3'=1+i3, i6'=i4
	
	Eliminated Temporary Variables

	Original rule:
	(-1+it3 >= 0 /\ -5+i1 == 0) /\ i1'=6, i3'=1+i3, i6'=i4
	New rule:
	(-5+i1 == 0) /\ i1'=6, i3'=1+i3, i6'=i4
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=0
	New rule:
	-1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=0
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=10, i3'=2+i3
	New rule:
	(-3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=10, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=10, i3'=2+i3
	New rule:
	-5+i1 == 0 /\ i1'=10, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -6+i1 == 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i6
	New rule:
	(-6+i1 == 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i6
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -1-it4 >= 0 /\ -8+i1 == 0) /\ i1'=6, i3'=2+i3, i6'=1+i6
	New rule:
	(-1-it4 >= 0 /\ -8+i1 == 0) /\ i1'=6, i3'=2+i3, i6'=1+i6
	
	Eliminated Temporary Variables

	Original rule:
	(-1-it4 >= 0 /\ -8+i1 == 0) /\ i1'=6, i3'=2+i3, i6'=1+i6
	New rule:
	(-8+i1 == 0) /\ i1'=6, i3'=2+i3, i6'=1+i6
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+it5 >= 0 /\ -8+i1 == 0) /\ i1'=6, i3'=2+i3, i6'=1+i6
	New rule:
	(-1+it5 >= 0 /\ -8+i1 == 0) /\ i1'=6, i3'=2+i3, i6'=1+i6
	
	Eliminated Temporary Variables

	Original rule:
	(-1+it5 >= 0 /\ -8+i1 == 0) /\ i1'=6, i3'=2+i3, i6'=1+i6
	New rule:
	(-8+i1 == 0) /\ i1'=6, i3'=2+i3, i6'=1+i6
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -8+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=1+i6
	New rule:
	-8+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=1+i6

Start location: evalfstart

Location map:
LoAT_sink -> 0
evalfstart -> 1
evalfentryin -> 2
evalfbb5in -> 3
evalfreturnin -> 4
evalfbb6in -> 5
evalfbb2in -> 6
evalfbb4in -> 7
evalfbb3in -> 8
evalfbb1in -> 9
evalfstop -> 10

Rules:
   3: (-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=5, i3'=1+i3
   8: (-6+i1 == 0 /\ -1-i6+i5 >= 0) /\ i1'=8, i3'=1+i3
  22: (-5+i1 == 0) /\ i1'=6, i3'=1+i3, i6'=i4
  23: (-5+i1 == 0) /\ i1'=6, i3'=1+i3, i6'=i4
  24: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=0
  25: (-3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=10, i3'=2+i3
  26: -5+i1 == 0 /\ i1'=10, i3'=2+i3
  27: (-6+i1 == 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i6
  28: (-8+i1 == 0) /\ i1'=6, i3'=2+i3, i6'=1+i6
  29: (-8+i1 == 0) /\ i1'=6, i3'=2+i3, i6'=1+i6
  30: -8+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=1+i6

Dependency graph:
3 -> 22, 3 -> 23, 3 -> 26
8 -> 28, 8 -> 29, 8 -> 30
22 -> 8, 22 -> 27
23 -> 8, 23 -> 27
24 -> 3, 24 -> 25
27 -> 3, 27 -> 25
28 -> 8, 28 -> 27
29 -> 8, 29 -> 27
30 -> 3, 30 -> 25

Refined Dependency Graph

	Removed the following edges: 27 -> 3

Start location: evalfstart

Location map:
LoAT_sink -> 0
evalfstart -> 1
evalfentryin -> 2
evalfbb5in -> 3
evalfreturnin -> 4
evalfbb6in -> 5
evalfbb2in -> 6
evalfbb4in -> 7
evalfbb3in -> 8
evalfbb1in -> 9
evalfstop -> 10

Rules:
   3: (-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=5, i3'=1+i3
   8: (-6+i1 == 0 /\ -1-i6+i5 >= 0) /\ i1'=8, i3'=1+i3
  22: (-5+i1 == 0) /\ i1'=6, i3'=1+i3, i6'=i4
  23: (-5+i1 == 0) /\ i1'=6, i3'=1+i3, i6'=i4
  24: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=0
  25: (-3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=10, i3'=2+i3
  26: -5+i1 == 0 /\ i1'=10, i3'=2+i3
  27: (-6+i1 == 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i6
  28: (-8+i1 == 0) /\ i1'=6, i3'=2+i3, i6'=1+i6
  29: (-8+i1 == 0) /\ i1'=6, i3'=2+i3, i6'=1+i6
  30: -8+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=1+i6

Dependency graph:
3 -> 22, 3 -> 23, 3 -> 26
8 -> 28, 8 -> 29, 8 -> 30
22 -> 8, 22 -> 27
23 -> 8, 23 -> 27
24 -> 3, 24 -> 25
27 -> 25
28 -> 8, 28 -> 27
29 -> 8, 29 -> 27
30 -> 3, 30 -> 25

Step with 24

	Trace

	24[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 25

	Trace

	24[(-1+i1 == 0)]
	25[(-3+i1 == 0 /\ i4-i5 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	
	Blocked

	{}
	{25[T]}
	
Step with 3

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{25[T]}
	{}
	
Step with 22

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	
	Blocked

	{}
	{25[T]}
	{}
	{}
	
Step with 8

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	8[(-6+i1 == 0 /\ -1-i6+i5 >= 0)]
	
	Blocked

	{}
	{25[T]}
	{}
	{27[T]}
	{}
	
Step with 30

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	8[(-6+i1 == 0 /\ -1-i6+i5 >= 0)]
	30[(-8+i1 == 0)]
	
	Blocked

	{}
	{25[T]}
	{}
	{27[T]}
	{}
	{}
	
Poly(n^1)

Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=5+i3, i4'=1+i4, i6'=i4
		New rule:
		(-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=5+i3, i4'=1+i4, i6'=i4

	Loop Acceleration

	Original rule:
	(-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=5+i3, i4'=1+i4, i6'=i4
	New rule:
	(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+it36 >= 0 /\ -it36-i4+i5 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=i1, i3'=i3+5*it36, i4'=it36+i4, i6'=-1+it36+i4

		-3+i1 >= 0 [0]: unchanged
		
		3-i1 >= 0 [0]: unchanged
		
		-1-i4+i5 >= 0 [0]: montonic decrease yields (-it36-i4+i5 >= 0 /\ -1-i4+i5 >= 0)
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, 3-i1 >= 0 -> 3-i1 >= 0, -1-i4+i5 >= 0 -> (-it36-i4+i5 >= 0 /\ -1-i4+i5 >= 0)}

	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+it36 >= 0 /\ -it36-i4+i5 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=i1, i3'=i3+5*it36, i4'=it36+i4, i6'=-1+it36+i4
	New rule:
	(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+it36 >= 0 /\ -it36-i4+i5 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3+5*it36, i4'=it36+i4, i6'=-1+it36+i4
	
	Instantiation

	Original rule:
	(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+it36 >= 0 /\ -it36-i4+i5 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3+5*it36, i4'=it36+i4, i6'=-1+it36+i4
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3-5*i4+5*i5, i4'=i5, i6'=-1+i5

Start location: evalfstart

Location map:
LoAT_sink -> 0
evalfstart -> 1
evalfentryin -> 2
evalfbb5in -> 3
evalfreturnin -> 4
evalfbb6in -> 5
evalfbb2in -> 6
evalfbb4in -> 7
evalfbb3in -> 8
evalfbb1in -> 9
evalfstop -> 10

Rules:
   3: (-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=5, i3'=1+i3
   8: (-6+i1 == 0 /\ -1-i6+i5 >= 0) /\ i1'=8, i3'=1+i3
  22: (-5+i1 == 0) /\ i1'=6, i3'=1+i3, i6'=i4
  23: (-5+i1 == 0) /\ i1'=6, i3'=1+i3, i6'=i4
  24: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=0
  25: (-3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=10, i3'=2+i3
  26: -5+i1 == 0 /\ i1'=10, i3'=2+i3
  27: (-6+i1 == 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i6
  28: (-8+i1 == 0) /\ i1'=6, i3'=2+i3, i6'=1+i6
  29: (-8+i1 == 0) /\ i1'=6, i3'=2+i3, i6'=1+i6
  30: -8+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=1+i6
  31: (0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3-5*i4+5*i5, i4'=i5, i6'=-1+i5

Dependency graph:
3 -> 22, 3 -> 23, 3 -> 26
8 -> 28, 8 -> 29, 8 -> 30
22 -> 8, 22 -> 27
23 -> 8, 23 -> 27
24 -> 3, 24 -> 25, 24 -> 31
27 -> 25
28 -> 8, 28 -> 27
29 -> 8, 29 -> 27
30 -> 3, 30 -> 25, 30 -> 31
31 -> 3, 31 -> 25

	Trace

	24[(-1+i1 == 0)]
	31[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{25[T]}
	{31[T]}
	
Step with 25

	Trace

	24[(-1+i1 == 0)]
	31[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0)]
	25[(-3+i1 == 0 /\ i4-i5 >= 0)]
	
	Blocked

	{}
	{25[T]}
	{31[T]}
	{}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	31[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{25[T]}
	{25[T], 31[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	
	Blocked

	{}
	{25[T], 31[T]}
	
Step with 3

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T]}
	{}
	
Step with 22

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	
	Blocked

	{}
	{25[T], 31[T]}
	{}
	{}
	
Step with 8

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	8[(-6+i1 == 0 /\ -1-i6+i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T]}
	{}
	{}
	{}
	
Step with 29

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	8[(-6+i1 == 0 /\ -1-i6+i5 >= 0)]
	29[(-8+i1 == 0)]
	
	Blocked

	{}
	{25[T], 31[T]}
	{}
	{}
	{}
	{}
	
Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -6+i1 == 0 /\ -1-i6+i5 >= 0) /\ i1'=6, i3'=3+i3, i6'=1+i6
		New rule:
		(-6+i1 == 0 /\ -1-i6+i5 >= 0) /\ i1'=6, i3'=3+i3, i6'=1+i6

	Loop Acceleration

	Original rule:
	(-6+i1 == 0 /\ -1-i6+i5 >= 0) /\ i1'=6, i3'=3+i3, i6'=1+i6
	New rule:
	(-it73-i6+i5 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it73 >= 0) /\ i1'=i1, i3'=3*it73+i3, i6'=it73+i6

		-6+i1 >= 0 [0]: unchanged
		
		6-i1 >= 0 [0]: unchanged
		
		-1-i6+i5 >= 0 [0]: montonic decrease yields -it73-i6+i5 >= 0
		
		Replacement map: {-6+i1 >= 0 -> -6+i1 >= 0, 6-i1 >= 0 -> 6-i1 >= 0, -1-i6+i5 >= 0 -> -it73-i6+i5 >= 0}

	Removed Trivial Updates

	Original rule:
	(-it73-i6+i5 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it73 >= 0) /\ i1'=i1, i3'=3*it73+i3, i6'=it73+i6
	New rule:
	(-it73-i6+i5 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it73 >= 0) /\ i3'=3*it73+i3, i6'=it73+i6
	
	Instantiation

	Original rule:
	(-it73-i6+i5 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it73 >= 0) /\ i3'=3*it73+i3, i6'=it73+i6
	New rule:
	(0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0) /\ i3'=-3*i6+i3+3*i5, i6'=i5

Start location: evalfstart

Location map:
LoAT_sink -> 0
evalfstart -> 1
evalfentryin -> 2
evalfbb5in -> 3
evalfreturnin -> 4
evalfbb6in -> 5
evalfbb2in -> 6
evalfbb4in -> 7
evalfbb3in -> 8
evalfbb1in -> 9
evalfstop -> 10

Rules:
   3: (-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=5, i3'=1+i3
   8: (-6+i1 == 0 /\ -1-i6+i5 >= 0) /\ i1'=8, i3'=1+i3
  22: (-5+i1 == 0) /\ i1'=6, i3'=1+i3, i6'=i4
  23: (-5+i1 == 0) /\ i1'=6, i3'=1+i3, i6'=i4
  24: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=0
  25: (-3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=10, i3'=2+i3
  26: -5+i1 == 0 /\ i1'=10, i3'=2+i3
  27: (-6+i1 == 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i6
  28: (-8+i1 == 0) /\ i1'=6, i3'=2+i3, i6'=1+i6
  29: (-8+i1 == 0) /\ i1'=6, i3'=2+i3, i6'=1+i6
  30: -8+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=1+i6
  31: (0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3-5*i4+5*i5, i4'=i5, i6'=-1+i5
  32: (0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0) /\ i3'=-3*i6+i3+3*i5, i6'=i5

Dependency graph:
3 -> 22, 3 -> 23, 3 -> 26
8 -> 28, 8 -> 29, 8 -> 30
22 -> 8, 22 -> 27, 22 -> 32
23 -> 8, 23 -> 27, 23 -> 32
24 -> 3, 24 -> 25, 24 -> 31
27 -> 25
28 -> 8, 28 -> 27, 28 -> 32
29 -> 8, 29 -> 27, 29 -> 32
30 -> 3, 30 -> 25, 30 -> 31
31 -> 3, 31 -> 25
32 -> 8, 32 -> 27

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	32[(0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T]}
	{}
	{}
	{32[T]}
	
Step with 27

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	32[(0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0)]
	27[(-6+i1 == 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T]}
	{}
	{}
	{8[T], 32[T]}
	{}
	
Step with 25

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	32[(0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0)]
	27[(-6+i1 == 0 /\ i6-i5 >= 0)]
	25[(-3+i1 == 0 /\ i4-i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T]}
	{}
	{}
	{8[T], 32[T]}
	{}
	{}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	32[(0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0)]
	27[(-6+i1 == 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T]}
	{}
	{}
	{8[T], 32[T]}
	{25[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	32[(0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T]}
	{}
	{}
	{8[T], 27[T], 32[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	
	Blocked

	{}
	{25[T], 31[T]}
	{}
	{32[T]}
	
Step with 8

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	8[(-6+i1 == 0 /\ -1-i6+i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T]}
	{}
	{32[T]}
	{}
	
Step with 30

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	8[(-6+i1 == 0 /\ -1-i6+i5 >= 0)]
	30[(-8+i1 == 0)]
	
	Blocked

	{}
	{25[T], 31[T]}
	{}
	{32[T]}
	{}
	{}
	
Covered

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	8[(-6+i1 == 0 /\ -1-i6+i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T]}
	{}
	{32[T]}
	{30[T]}
	
Step with 29

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	8[(-6+i1 == 0 /\ -1-i6+i5 >= 0)]
	29[(-8+i1 == 0)]
	
	Blocked

	{}
	{25[T], 31[T]}
	{}
	{32[T]}
	{30[T]}
	{}
	
Covered

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	8[(-6+i1 == 0 /\ -1-i6+i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T]}
	{}
	{32[T]}
	{29[T], 30[T]}
	
Step with 28

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	8[(-6+i1 == 0 /\ -1-i6+i5 >= 0)]
	28[(-8+i1 == 0)]
	
	Blocked

	{}
	{25[T], 31[T]}
	{}
	{32[T]}
	{29[T], 30[T]}
	{}
	
Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -6+i1 == 0 /\ -1-i6+i5 >= 0) /\ i1'=6, i3'=3+i3, i6'=1+i6
		New rule:
		(-6+i1 == 0 /\ -1-i6+i5 >= 0) /\ i1'=6, i3'=3+i3, i6'=1+i6

	Loop Acceleration

	Original rule:
	(-6+i1 == 0 /\ -1-i6+i5 >= 0) /\ i1'=6, i3'=3+i3, i6'=1+i6
	New rule:
	(-i6-it109+i5 >= 0 /\ -1+it109 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0) /\ i1'=i1, i3'=i3+3*it109, i6'=i6+it109

		-6+i1 >= 0 [0]: unchanged
		
		6-i1 >= 0 [0]: unchanged
		
		-1-i6+i5 >= 0 [0]: montonic decrease yields -i6-it109+i5 >= 0
		
		Replacement map: {-6+i1 >= 0 -> -6+i1 >= 0, 6-i1 >= 0 -> 6-i1 >= 0, -1-i6+i5 >= 0 -> -i6-it109+i5 >= 0}

	Removed Trivial Updates

	Original rule:
	(-i6-it109+i5 >= 0 /\ -1+it109 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0) /\ i1'=i1, i3'=i3+3*it109, i6'=i6+it109
	New rule:
	(-i6-it109+i5 >= 0 /\ -1+it109 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0) /\ i3'=i3+3*it109, i6'=i6+it109
	
	Instantiation

	Original rule:
	(-i6-it109+i5 >= 0 /\ -1+it109 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0) /\ i3'=i3+3*it109, i6'=i6+it109
	New rule:
	(0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0) /\ i3'=-3*i6+i3+3*i5, i6'=i5

Start location: evalfstart

Location map:
LoAT_sink -> 0
evalfstart -> 1
evalfentryin -> 2
evalfbb5in -> 3
evalfreturnin -> 4
evalfbb6in -> 5
evalfbb2in -> 6
evalfbb4in -> 7
evalfbb3in -> 8
evalfbb1in -> 9
evalfstop -> 10

Rules:
   3: (-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=5, i3'=1+i3
   8: (-6+i1 == 0 /\ -1-i6+i5 >= 0) /\ i1'=8, i3'=1+i3
  22: (-5+i1 == 0) /\ i1'=6, i3'=1+i3, i6'=i4
  23: (-5+i1 == 0) /\ i1'=6, i3'=1+i3, i6'=i4
  24: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=0
  25: (-3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=10, i3'=2+i3
  26: -5+i1 == 0 /\ i1'=10, i3'=2+i3
  27: (-6+i1 == 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i6
  28: (-8+i1 == 0) /\ i1'=6, i3'=2+i3, i6'=1+i6
  29: (-8+i1 == 0) /\ i1'=6, i3'=2+i3, i6'=1+i6
  30: -8+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=1+i6
  31: (0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3-5*i4+5*i5, i4'=i5, i6'=-1+i5
  32: (0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0) /\ i3'=-3*i6+i3+3*i5, i6'=i5
  33: (0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0) /\ i3'=-3*i6+i3+3*i5, i6'=i5

Dependency graph:
3 -> 22, 3 -> 23, 3 -> 26
8 -> 28, 8 -> 29, 8 -> 30
22 -> 8, 22 -> 27, 22 -> 32, 22 -> 33
23 -> 8, 23 -> 27, 23 -> 32, 23 -> 33
24 -> 3, 24 -> 25, 24 -> 31
27 -> 25
28 -> 8, 28 -> 27, 28 -> 32, 28 -> 33
29 -> 8, 29 -> 27, 29 -> 32, 29 -> 33
30 -> 3, 30 -> 25, 30 -> 31
31 -> 3, 31 -> 25
32 -> 8, 32 -> 27, 32 -> 33
33 -> 8, 33 -> 27, 33 -> 32

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	33[(0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T]}
	{}
	{32[T]}
	{33[T]}
	
Step with 27

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	33[(0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0)]
	27[(-6+i1 == 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T]}
	{}
	{32[T]}
	{8[T], 32[T], 33[T]}
	{}
	
Step with 25

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	33[(0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0)]
	27[(-6+i1 == 0 /\ i6-i5 >= 0)]
	25[(-3+i1 == 0 /\ i4-i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T]}
	{}
	{32[T]}
	{8[T], 32[T], 33[T]}
	{}
	{}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	33[(0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0)]
	27[(-6+i1 == 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T]}
	{}
	{32[T]}
	{8[T], 32[T], 33[T]}
	{25[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	33[(0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T]}
	{}
	{32[T]}
	{8[T], 27[T], 32[T], 33[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	
	Blocked

	{}
	{25[T], 31[T]}
	{}
	{32[T], 33[T]}
	
Step with 8

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	8[(-6+i1 == 0 /\ -1-i6+i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T]}
	{}
	{27[T], 32[T], 33[T]}
	{}
	
Step with 28

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	8[(-6+i1 == 0 /\ -1-i6+i5 >= 0)]
	28[(-8+i1 == 0)]
	
	Blocked

	{}
	{25[T], 31[T]}
	{}
	{27[T], 32[T], 33[T]}
	{}
	{}
	
Covered

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	8[(-6+i1 == 0 /\ -1-i6+i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T]}
	{}
	{27[T], 32[T], 33[T]}
	{28[T]}
	
Step with 30

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	8[(-6+i1 == 0 /\ -1-i6+i5 >= 0)]
	30[(-8+i1 == 0)]
	
	Blocked

	{}
	{25[T], 31[T]}
	{}
	{27[T], 32[T], 33[T]}
	{28[T]}
	{}
	
Covered

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	8[(-6+i1 == 0 /\ -1-i6+i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T]}
	{}
	{27[T], 32[T], 33[T]}
	{28[T], 30[T]}
	
Step with 29

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	8[(-6+i1 == 0 /\ -1-i6+i5 >= 0)]
	29[(-8+i1 == 0)]
	
	Blocked

	{}
	{25[T], 31[T]}
	{}
	{27[T], 32[T], 33[T]}
	{28[T], 30[T]}
	{}
	
Covered

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	8[(-6+i1 == 0 /\ -1-i6+i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T]}
	{}
	{27[T], 32[T], 33[T]}
	{28[T], 29[T], 30[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	
	Blocked

	{}
	{25[T], 31[T]}
	{}
	{8[T], 27[T], 32[T], 33[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T]}
	{22[T]}
	
Step with 26

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	26[(-5+i1 == 0)]
	
	Blocked

	{}
	{25[T], 31[T]}
	{22[T]}
	{}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T]}
	{22[T], 26[T]}
	
Step with 23

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	23[(-5+i1 == 0)]
	
	Blocked

	{}
	{25[T], 31[T]}
	{22[T], 26[T]}
	{}
	
Step with 8

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	23[(-5+i1 == 0)]
	8[(-6+i1 == 0 /\ -1-i6+i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T]}
	{22[T], 26[T]}
	{}
	{}
	
Step with 28

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	23[(-5+i1 == 0)]
	8[(-6+i1 == 0 /\ -1-i6+i5 >= 0)]
	28[(-8+i1 == 0)]
	
	Blocked

	{}
	{25[T], 31[T]}
	{22[T], 26[T]}
	{}
	{}
	{}
	
Covered

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	23[(-5+i1 == 0)]
	8[(-6+i1 == 0 /\ -1-i6+i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T]}
	{22[T], 26[T]}
	{}
	{28[T]}
	
Step with 29

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	23[(-5+i1 == 0)]
	8[(-6+i1 == 0 /\ -1-i6+i5 >= 0)]
	29[(-8+i1 == 0)]
	
	Blocked

	{}
	{25[T], 31[T]}
	{22[T], 26[T]}
	{}
	{28[T]}
	{}
	
Covered

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	23[(-5+i1 == 0)]
	8[(-6+i1 == 0 /\ -1-i6+i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T]}
	{22[T], 26[T]}
	{}
	{28[T], 29[T]}
	
Step with 30

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	23[(-5+i1 == 0)]
	8[(-6+i1 == 0 /\ -1-i6+i5 >= 0)]
	30[(-8+i1 == 0)]
	
	Blocked

	{}
	{25[T], 31[T]}
	{22[T], 26[T]}
	{}
	{28[T], 29[T]}
	{}
	
Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=5+i3, i4'=1+i4, i6'=i4
		New rule:
		(-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=5+i3, i4'=1+i4, i6'=i4

	Loop Acceleration

	Original rule:
	(-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=5+i3, i4'=1+i4, i6'=i4
	New rule:
	(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+it175 >= 0 /\ -i4-it175+i5 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=i1, i3'=i3+5*it175, i4'=i4+it175, i6'=-1+i4+it175

		-3+i1 >= 0 [0]: unchanged
		
		3-i1 >= 0 [0]: unchanged
		
		-1-i4+i5 >= 0 [0]: montonic decrease yields (-i4-it175+i5 >= 0 /\ -1-i4+i5 >= 0)
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, 3-i1 >= 0 -> 3-i1 >= 0, -1-i4+i5 >= 0 -> (-i4-it175+i5 >= 0 /\ -1-i4+i5 >= 0)}

	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+it175 >= 0 /\ -i4-it175+i5 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=i1, i3'=i3+5*it175, i4'=i4+it175, i6'=-1+i4+it175
	New rule:
	(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+it175 >= 0 /\ -i4-it175+i5 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3+5*it175, i4'=i4+it175, i6'=-1+i4+it175
	
	Instantiation

	Original rule:
	(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+it175 >= 0 /\ -i4-it175+i5 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3+5*it175, i4'=i4+it175, i6'=-1+i4+it175
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3-5*i4+5*i5, i4'=i5, i6'=-1+i5

Start location: evalfstart

Location map:
LoAT_sink -> 0
evalfstart -> 1
evalfentryin -> 2
evalfbb5in -> 3
evalfreturnin -> 4
evalfbb6in -> 5
evalfbb2in -> 6
evalfbb4in -> 7
evalfbb3in -> 8
evalfbb1in -> 9
evalfstop -> 10

Rules:
   3: (-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=5, i3'=1+i3
   8: (-6+i1 == 0 /\ -1-i6+i5 >= 0) /\ i1'=8, i3'=1+i3
  22: (-5+i1 == 0) /\ i1'=6, i3'=1+i3, i6'=i4
  23: (-5+i1 == 0) /\ i1'=6, i3'=1+i3, i6'=i4
  24: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=0
  25: (-3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=10, i3'=2+i3
  26: -5+i1 == 0 /\ i1'=10, i3'=2+i3
  27: (-6+i1 == 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i6
  28: (-8+i1 == 0) /\ i1'=6, i3'=2+i3, i6'=1+i6
  29: (-8+i1 == 0) /\ i1'=6, i3'=2+i3, i6'=1+i6
  30: -8+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=1+i6
  31: (0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3-5*i4+5*i5, i4'=i5, i6'=-1+i5
  32: (0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0) /\ i3'=-3*i6+i3+3*i5, i6'=i5
  33: (0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0) /\ i3'=-3*i6+i3+3*i5, i6'=i5
  34: (0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3-5*i4+5*i5, i4'=i5, i6'=-1+i5

Dependency graph:
3 -> 22, 3 -> 23, 3 -> 26
8 -> 28, 8 -> 29, 8 -> 30
22 -> 8, 22 -> 27, 22 -> 32, 22 -> 33
23 -> 8, 23 -> 27, 23 -> 32, 23 -> 33
24 -> 3, 24 -> 25, 24 -> 31, 24 -> 34
27 -> 25
28 -> 8, 28 -> 27, 28 -> 32, 28 -> 33
29 -> 8, 29 -> 27, 29 -> 32, 29 -> 33
30 -> 3, 30 -> 25, 30 -> 31, 30 -> 34
31 -> 3, 31 -> 25, 31 -> 34
32 -> 8, 32 -> 27, 32 -> 33
33 -> 8, 33 -> 27, 33 -> 32
34 -> 3, 34 -> 25, 34 -> 31

	Trace

	24[(-1+i1 == 0)]
	34[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T]}
	{34[T]}
	
Step with 25

	Trace

	24[(-1+i1 == 0)]
	34[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0)]
	25[(-3+i1 == 0 /\ i4-i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T]}
	{3[T], 31[T], 34[T]}
	{}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	34[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T]}
	{3[T], 25[T], 31[T], 34[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	
	Blocked

	{}
	{25[T], 31[T], 34[T]}
	
Step with 3

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T], 34[T]}
	{}
	
Step with 22

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	
	Blocked

	{}
	{25[T], 31[T], 34[T]}
	{}
	{}
	
Step with 32

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	32[(0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T], 34[T]}
	{}
	{}
	{32[T]}
	
Step with 27

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	32[(0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0)]
	27[(-6+i1 == 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T], 34[T]}
	{}
	{}
	{8[T], 32[T]}
	{}
	
Step with 25

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	32[(0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0)]
	27[(-6+i1 == 0 /\ i6-i5 >= 0)]
	25[(-3+i1 == 0 /\ i4-i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T], 34[T]}
	{}
	{}
	{8[T], 32[T]}
	{}
	{}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	32[(0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0)]
	27[(-6+i1 == 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T], 34[T]}
	{}
	{}
	{8[T], 32[T]}
	{25[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	32[(0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T], 34[T]}
	{}
	{}
	{8[T], 27[T], 32[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	
	Blocked

	{}
	{25[T], 31[T], 34[T]}
	{}
	{32[T]}
	
Step with 8

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	8[(-6+i1 == 0 /\ -1-i6+i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T], 34[T]}
	{}
	{32[T]}
	{}
	
Step with 30

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	8[(-6+i1 == 0 /\ -1-i6+i5 >= 0)]
	30[(-8+i1 == 0)]
	
	Blocked

	{}
	{25[T], 31[T], 34[T]}
	{}
	{32[T]}
	{}
	{}
	
Covered

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	8[(-6+i1 == 0 /\ -1-i6+i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T], 34[T]}
	{}
	{32[T]}
	{30[T]}
	
Step with 29

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	8[(-6+i1 == 0 /\ -1-i6+i5 >= 0)]
	29[(-8+i1 == 0)]
	
	Blocked

	{}
	{25[T], 31[T], 34[T]}
	{}
	{32[T]}
	{30[T]}
	{}
	
Covered

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	8[(-6+i1 == 0 /\ -1-i6+i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T], 34[T]}
	{}
	{32[T]}
	{29[T], 30[T]}
	
Step with 28

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	8[(-6+i1 == 0 /\ -1-i6+i5 >= 0)]
	28[(-8+i1 == 0)]
	
	Blocked

	{}
	{25[T], 31[T], 34[T]}
	{}
	{32[T]}
	{29[T], 30[T]}
	{}
	
Covered

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	8[(-6+i1 == 0 /\ -1-i6+i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T], 34[T]}
	{}
	{32[T]}
	{28[T], 29[T], 30[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	
	Blocked

	{}
	{25[T], 31[T], 34[T]}
	{}
	{8[T], 32[T]}
	
Step with 33

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	33[(0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T], 34[T]}
	{}
	{8[T], 27[T], 32[T]}
	{33[T]}
	
Step with 27

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	33[(0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0)]
	27[(-6+i1 == 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T], 34[T]}
	{}
	{8[T], 27[T], 32[T]}
	{33[T]}
	{}
	
Step with 25

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	33[(0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0)]
	27[(-6+i1 == 0 /\ i6-i5 >= 0)]
	25[(-3+i1 == 0 /\ i4-i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T], 34[T]}
	{}
	{8[T], 27[T], 32[T]}
	{33[T]}
	{}
	{}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	33[(0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0)]
	27[(-6+i1 == 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T], 34[T]}
	{}
	{8[T], 27[T], 32[T]}
	{33[T]}
	{25[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	33[(0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T], 34[T]}
	{}
	{8[T], 27[T], 32[T]}
	{27[T], 33[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-5+i1 == 0)]
	
	Blocked

	{}
	{25[T], 31[T], 34[T]}
	{}
	{8[T], 27[T], 32[T], 33[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T], 34[T]}
	{22[T]}
	
Step with 26

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	26[(-5+i1 == 0)]
	
	Blocked

	{}
	{25[T], 31[T], 34[T]}
	{22[T]}
	{}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T], 34[T]}
	{22[T], 26[T]}
	
Step with 23

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	23[(-5+i1 == 0)]
	
	Blocked

	{}
	{25[T], 31[T], 34[T]}
	{22[T], 26[T]}
	{}
	
Step with 8

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	23[(-5+i1 == 0)]
	8[(-6+i1 == 0 /\ -1-i6+i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T], 34[T]}
	{22[T], 26[T]}
	{}
	{}
	
Step with 30

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	23[(-5+i1 == 0)]
	8[(-6+i1 == 0 /\ -1-i6+i5 >= 0)]
	30[(-8+i1 == 0)]
	
	Blocked

	{}
	{25[T], 31[T], 34[T]}
	{22[T], 26[T]}
	{}
	{}
	{}
	
Covered

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	23[(-5+i1 == 0)]
	8[(-6+i1 == 0 /\ -1-i6+i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T], 34[T]}
	{22[T], 26[T]}
	{}
	{30[T]}
	
Step with 28

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	23[(-5+i1 == 0)]
	8[(-6+i1 == 0 /\ -1-i6+i5 >= 0)]
	28[(-8+i1 == 0)]
	
	Blocked

	{}
	{25[T], 31[T], 34[T]}
	{22[T], 26[T]}
	{}
	{30[T]}
	{}
	
Covered

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	23[(-5+i1 == 0)]
	8[(-6+i1 == 0 /\ -1-i6+i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T], 34[T]}
	{22[T], 26[T]}
	{}
	{28[T], 30[T]}
	
Step with 29

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	23[(-5+i1 == 0)]
	8[(-6+i1 == 0 /\ -1-i6+i5 >= 0)]
	29[(-8+i1 == 0)]
	
	Blocked

	{}
	{25[T], 31[T], 34[T]}
	{22[T], 26[T]}
	{}
	{28[T], 30[T]}
	{}
	
Covered

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	23[(-5+i1 == 0)]
	8[(-6+i1 == 0 /\ -1-i6+i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T], 34[T]}
	{22[T], 26[T]}
	{}
	{28[T], 29[T], 30[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	23[(-5+i1 == 0)]
	
	Blocked

	{}
	{25[T], 31[T], 34[T]}
	{22[T], 26[T]}
	{8[T]}
	
Step with 32

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	23[(-5+i1 == 0)]
	32[(0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T], 34[T]}
	{22[T], 26[T]}
	{8[T], 27[T]}
	{32[T]}
	
Step with 27

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	23[(-5+i1 == 0)]
	32[(0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0)]
	27[(-6+i1 == 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T], 34[T]}
	{22[T], 26[T]}
	{8[T], 27[T]}
	{32[T]}
	{}
	
Step with 25

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	23[(-5+i1 == 0)]
	32[(0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0)]
	27[(-6+i1 == 0 /\ i6-i5 >= 0)]
	25[(-3+i1 == 0 /\ i4-i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T], 34[T]}
	{22[T], 26[T]}
	{8[T], 27[T]}
	{32[T]}
	{}
	{}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	23[(-5+i1 == 0)]
	32[(0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0)]
	27[(-6+i1 == 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T], 34[T]}
	{22[T], 26[T]}
	{8[T], 27[T]}
	{32[T]}
	{25[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	23[(-5+i1 == 0)]
	32[(0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T], 34[T]}
	{22[T], 26[T]}
	{8[T], 27[T]}
	{27[T], 32[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	23[(-5+i1 == 0)]
	
	Blocked

	{}
	{25[T], 31[T], 34[T]}
	{22[T], 26[T]}
	{8[T], 27[T], 32[T]}
	
Step with 33

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	23[(-5+i1 == 0)]
	33[(0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T], 34[T]}
	{22[T], 26[T]}
	{8[T], 27[T], 32[T]}
	{33[T]}
	
Step with 27

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	23[(-5+i1 == 0)]
	33[(0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0)]
	27[(-6+i1 == 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T], 34[T]}
	{22[T], 26[T]}
	{8[T], 27[T], 32[T]}
	{8[T], 32[T], 33[T]}
	{}
	
Step with 25

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	23[(-5+i1 == 0)]
	33[(0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0)]
	27[(-6+i1 == 0 /\ i6-i5 >= 0)]
	25[(-3+i1 == 0 /\ i4-i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T], 34[T]}
	{22[T], 26[T]}
	{8[T], 27[T], 32[T]}
	{8[T], 32[T], 33[T]}
	{}
	{}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	23[(-5+i1 == 0)]
	33[(0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0)]
	27[(-6+i1 == 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T], 34[T]}
	{22[T], 26[T]}
	{8[T], 27[T], 32[T]}
	{8[T], 32[T], 33[T]}
	{25[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	23[(-5+i1 == 0)]
	33[(0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T], 34[T]}
	{22[T], 26[T]}
	{8[T], 27[T], 32[T]}
	{8[T], 27[T], 32[T], 33[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	23[(-5+i1 == 0)]
	
	Blocked

	{}
	{25[T], 31[T], 34[T]}
	{22[T], 26[T]}
	{8[T], 27[T], 32[T], 33[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{25[T], 31[T], 34[T]}
	{22[T], 23[T], 26[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	
	Blocked

	{}
	{3[T], 25[T], 31[T], 34[T]}
	
Backtrack

	Trace

	Blocked

	{24[T]}
	
Accept

Poly(n^1)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  D
  Locations:  l0, l1, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂) → l8(X₀, X₁, X₂)
  t₈: l1(X₀, X₁, X₂) → l2(X₀, X₁, X₂) :|: 1+X₂ ≤ X₁
  t₇: l1(X₀, X₁, X₂) → l4(X₀, X₁, X₂) :|: X₁ ≤ X₂
  t₉: l2(X₀, X₁, X₂) → l3(X₀, X₁, X₂) :|: 1+D ≤ 0
  t₁₀: l2(X₀, X₁, X₂) → l3(X₀, X₁, X₂) :|: 1 ≤ D
  t₁₁: l2(X₀, X₁, X₂) → l4(X₀, X₁, X₂)
  t₁₂: l3(X₀, X₁, X₂) → l1(X₀, X₁, 1+X₂)
  t₁₃: l4(X₀, X₁, X₂) → l6(1+X₂, X₁, X₂)
  t₄: l5(X₀, X₁, X₂) → l1(X₀, X₁, X₀) :|: 1+D ≤ 0
  t₅: l5(X₀, X₁, X₂) → l1(X₀, X₁, X₀) :|: 1 ≤ D
  t₆: l5(X₀, X₁, X₂) → l7(X₀, X₁, X₂)
  t₃: l6(X₀, X₁, X₂) → l5(X₀, X₁, X₂) :|: 1+X₀ ≤ X₁
  t₂: l6(X₀, X₁, X₂) → l7(X₀, X₁, X₂) :|: X₁ ≤ X₀
  t₁₄: l7(X₀, X₁, X₂) → l9(X₀, X₁, X₂)
  t₁: l8(X₀, X₁, X₂) → l6(0, X₁, X₂)


Preprocessing
  Found invariant 1+X₂ ≤ X₁ ∧ 0 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l2


  Found invariant 0 ≤ X₀ for location l6


  Found invariant 0 ≤ X₀ for location l7


  Found invariant 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l5


  Found invariant X₂ ≤ X₁ ∧ 0 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l1


  Found invariant X₂ ≤ X₁ ∧ 0 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l4


  Found invariant 0 ≤ X₀ for location l9


  Found invariant 1+X₂ ≤ X₁ ∧ 0 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l3


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  D
  Locations:  l0, l1, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂) → l8(X₀, X₁, X₂)
  t₈: l1(X₀, X₁, X₂) → l2(X₀, X₁, X₂) :|: 1+X₂ ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₂
  t₇: l1(X₀, X₁, X₂) → l4(X₀, X₁, X₂) :|: X₁ ≤ X₂ ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₂
  t₉: l2(X₀, X₁, X₂) → l3(X₀, X₁, X₂) :|: 1+D ≤ 0 ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₂
  t₁₀: l2(X₀, X₁, X₂) → l3(X₀, X₁, X₂) :|: 1 ≤ D ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₂
  t₁₁: l2(X₀, X₁, X₂) → l4(X₀, X₁, X₂) :|: 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₂
  t₁₂: l3(X₀, X₁, X₂) → l1(X₀, X₁, 1+X₂) :|: 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₂
  t₁₃: l4(X₀, X₁, X₂) → l6(1+X₂, X₁, X₂) :|: 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₂
  t₄: l5(X₀, X₁, X₂) → l1(X₀, X₁, X₀) :|: 1+D ≤ 0 ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 0 ≤ X₀
  t₅: l5(X₀, X₁, X₂) → l1(X₀, X₁, X₀) :|: 1 ≤ D ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 0 ≤ X₀
  t₆: l5(X₀, X₁, X₂) → l7(X₀, X₁, X₂) :|: 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 0 ≤ X₀
  t₃: l6(X₀, X₁, X₂) → l5(X₀, X₁, X₂) :|: 1+X₀ ≤ X₁ ∧ 0 ≤ X₀
  t₂: l6(X₀, X₁, X₂) → l7(X₀, X₁, X₂) :|: X₁ ≤ X₀ ∧ 0 ≤ X₀
  t₁₄: l7(X₀, X₁, X₂) → l9(X₀, X₁, X₂) :|: 0 ≤ X₀
  t₁: l8(X₀, X₁, X₂) → l6(0, X₁, X₂)


MPRF for transition t₃: l6(X₀, X₁, X₂) → l5(X₀, X₁, X₂) :|: 1+X₀ ≤ X₁ ∧ 0 ≤ X₀ of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l1: [X₁-1-X₂]
    • l2: [X₁-1-X₂]
    • l3: [X₁-1-X₂]
    • l4: [X₁-1-X₂]
    • l5: [X₁-1-X₀]
    • l6: [X₁-X₀]




MPRF for transition t₄: l5(X₀, X₁, X₂) → l1(X₀, X₁, X₀) :|: 1+D ≤ 0 ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 0 ≤ X₀ of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l1: [X₁-1-X₂]
    • l2: [X₁-1-X₂]
    • l3: [X₁-1-X₂]
    • l4: [X₁-1-X₂]
    • l5: [X₁-X₀]
    • l6: [X₁-X₀]




MPRF for transition t₅: l5(X₀, X₁, X₂) → l1(X₀, X₁, X₀) :|: 1 ≤ D ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 0 ≤ X₀ of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l1: [X₁-1-X₂]
    • l2: [X₁-1-X₂]
    • l3: [X₁-1-X₂]
    • l4: [X₁-1-X₂]
    • l5: [X₁-X₀]
    • l6: [X₁-X₀]




MPRF for transition t₇: l1(X₀, X₁, X₂) → l4(X₀, X₁, X₂) :|: X₁ ≤ X₂ ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₂ of depth 1:
  new bound:
    X₁+1 {O(n)}

  MPRF:
    • l1: [1+X₁-X₂]
    • l2: [1+X₁-X₂]
    • l3: [1+X₁-X₂]
    • l4: [X₁-X₂]
    • l5: [1+X₁-X₀]
    • l6: [1+X₁-X₀]




MPRF for transition t₈: l1(X₀, X₁, X₂) → l2(X₀, X₁, X₂) :|: 1+X₂ ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₂ of depth 1:
  new bound:
    X₁+1 {O(n)}

  MPRF:
    • l1: [1+X₁-X₂]
    • l2: [X₁-X₂]
    • l3: [X₁-X₂]
    • l4: [X₁-X₂]
    • l5: [1+X₁-X₀]
    • l6: [1+X₁-X₀]




MPRF for transition t₉: l2(X₀, X₁, X₂) → l3(X₀, X₁, X₂) :|: 1+D ≤ 0 ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₂ of depth 1:
  new bound:
    X₁+1 {O(n)}

  MPRF:
    • l1: [1+X₁-X₂]
    • l2: [1+X₁-X₂]
    • l3: [X₁-X₂]
    • l4: [X₁-X₂]
    • l5: [1+X₁-X₀]
    • l6: [1+X₁-X₀]




MPRF for transition t₁₀: l2(X₀, X₁, X₂) → l3(X₀, X₁, X₂) :|: 1 ≤ D ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₂ of depth 1:
  new bound:
    X₁+1 {O(n)}

  MPRF:
    • l1: [1+X₁-X₂]
    • l2: [1+X₁-X₂]
    • l3: [X₁-X₂]
    • l4: [X₁-X₂]
    • l5: [1+X₁-X₀]
    • l6: [1+X₁-X₀]




MPRF for transition t₁₁: l2(X₀, X₁, X₂) → l4(X₀, X₁, X₂) :|: 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₂ of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l1: [X₁-X₂]
    • l2: [X₁-X₂]
    • l3: [X₁-X₂]
    • l4: [X₁-1-X₂]
    • l5: [X₁-X₀]
    • l6: [X₁-X₀]




MPRF for transition t₁₂: l3(X₀, X₁, X₂) → l1(X₀, X₁, 1+X₂) :|: 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₂ of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l1: [X₁-X₂]
    • l2: [X₁-X₂]
    • l3: [X₁-X₂]
    • l4: [X₁-X₂]
    • l5: [X₁-X₀]
    • l6: [X₁-X₀]




MPRF for transition t₁₃: l4(X₀, X₁, X₂) → l6(1+X₂, X₁, X₂) :|: 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₂ of depth 1:
  new bound:
    X₁+1 {O(n)}

  MPRF:
    • l1: [1+X₁-X₀]
    • l2: [1+X₁-X₀]
    • l3: [1+X₁-X₀]
    • l4: [1+X₁-X₂]
    • l5: [1+X₁-X₀]
    • l6: [1+X₁-X₀]




All Bounds
Timebounds
  Overall timebound:10⋅X₁+10 {O(n)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: X₁ {O(n)}
    t₄: X₁ {O(n)}
    t₅: X₁ {O(n)}
    t₆: 1 {O(1)}
    t₇: X₁+1 {O(n)}
    t₈: X₁+1 {O(n)}
    t₉: X₁+1 {O(n)}
    t₁₀: X₁+1 {O(n)}
    t₁₁: X₁ {O(n)}
    t₁₂: X₁ {O(n)}
    t₁₃: X₁+1 {O(n)}
    t₁₄: 1 {O(1)}


Costbounds
  Overall costbound: 10⋅X₁+10 {O(n)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: X₁ {O(n)}
    t₄: X₁ {O(n)}
    t₅: X₁ {O(n)}
    t₆: 1 {O(1)}
    t₇: X₁+1 {O(n)}
    t₈: X₁+1 {O(n)}
    t₉: X₁+1 {O(n)}
    t₁₀: X₁+1 {O(n)}
    t₁₁: X₁ {O(n)}
    t₁₂: X₁ {O(n)}
    t₁₃: X₁+1 {O(n)}
    t₁₄: 1 {O(1)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₀, X₂: X₂ {O(n)}
    t₁, X₀: 0 {O(1)}
    t₁, X₁: X₁ {O(n)}
    t₁, X₂: X₂ {O(n)}
    t₂, X₀: 2⋅X₁+1 {O(n)}
    t₂, X₁: 2⋅X₁ {O(n)}
    t₂, X₂: 4⋅X₁+X₂+2 {O(n)}
    t₃, X₀: 2⋅X₁+1 {O(n)}
    t₃, X₁: X₁ {O(n)}
    t₃, X₂: 4⋅X₁+X₂+2 {O(n)}
    t₄, X₀: 2⋅X₁+1 {O(n)}
    t₄, X₁: X₁ {O(n)}
    t₄, X₂: 2⋅X₁+1 {O(n)}
    t₅, X₀: 2⋅X₁+1 {O(n)}
    t₅, X₁: X₁ {O(n)}
    t₅, X₂: 2⋅X₁+1 {O(n)}
    t₆, X₀: 2⋅X₁+1 {O(n)}
    t₆, X₁: X₁ {O(n)}
    t₆, X₂: 4⋅X₁+X₂+2 {O(n)}
    t₇, X₀: 4⋅X₁+2 {O(n)}
    t₇, X₁: X₁ {O(n)}
    t₇, X₂: 2⋅X₁+1 {O(n)}
    t₈, X₀: 4⋅X₁+2 {O(n)}
    t₈, X₁: X₁ {O(n)}
    t₈, X₂: 2⋅X₁+1 {O(n)}
    t₉, X₀: 4⋅X₁+2 {O(n)}
    t₉, X₁: X₁ {O(n)}
    t₉, X₂: 2⋅X₁+1 {O(n)}
    t₁₀, X₀: 4⋅X₁+2 {O(n)}
    t₁₀, X₁: X₁ {O(n)}
    t₁₀, X₂: 2⋅X₁+1 {O(n)}
    t₁₁, X₀: 4⋅X₁+2 {O(n)}
    t₁₁, X₁: X₁ {O(n)}
    t₁₁, X₂: 2⋅X₁+1 {O(n)}
    t₁₂, X₀: 4⋅X₁+2 {O(n)}
    t₁₂, X₁: X₁ {O(n)}
    t₁₂, X₂: 2⋅X₁+1 {O(n)}
    t₁₃, X₀: 2⋅X₁+1 {O(n)}
    t₁₃, X₁: X₁ {O(n)}
    t₁₃, X₂: 4⋅X₁+2 {O(n)}
    t₁₄, X₀: 4⋅X₁+2 {O(n)}
    t₁₄, X₁: 3⋅X₁ {O(n)}
    t₁₄, X₂: 2⋅X₂+8⋅X₁+4 {O(n)}

