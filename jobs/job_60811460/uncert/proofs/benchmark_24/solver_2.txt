WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [evalfbb1in/4,evalfbb2in/4,evalfbb3in/4]
1. recursive  : [evalfbb2in_loop_cont/7,evalfbb4in/6,evalfbb5in/6,evalfbb6in/6]
2. non_recursive  : [evalfstop/4]
3. non_recursive  : [evalfreturnin/4]
4. non_recursive  : [exit_location/1]
5. non_recursive  : [evalfbb5in_loop_cont/5]
6. non_recursive  : [evalfentryin/4]
7. non_recursive  : [evalfstart/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into evalfbb2in/4
1. SCC is partially evaluated into evalfbb5in/6
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into evalfbb5in_loop_cont/5
6. SCC is partially evaluated into evalfentryin/4
7. SCC is partially evaluated into evalfstart/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations evalfbb2in/4 
* CE 13 is refined into CE [14] 
* CE 10 is refined into CE [15] 
* CE 12 is refined into CE [16] 
* CE 11 is refined into CE [17] 


### Cost equations --> "Loop" of evalfbb2in/4 
* CEs [17] --> Loop 14 
* CEs [14] --> Loop 15 
* CEs [15] --> Loop 16 
* CEs [16] --> Loop 17 

### Ranking functions of CR evalfbb2in(B,C,E,F) 
* RF of phase [14]: [B-C]

#### Partial ranking functions of CR evalfbb2in(B,C,E,F) 
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    B-C


### Specialization of cost equations evalfbb5in/6 
* CE 6 is refined into CE [18] 
* CE 5 is refined into CE [19] 
* CE 3 is refined into CE [20,21] 
* CE 7 is refined into CE [22] 
* CE 4 is refined into CE [23,24,25] 


### Cost equations --> "Loop" of evalfbb5in/6 
* CEs [25] --> Loop 18 
* CEs [23] --> Loop 19 
* CEs [24] --> Loop 20 
* CEs [18] --> Loop 21 
* CEs [19] --> Loop 22 
* CEs [20,21] --> Loop 23 
* CEs [22] --> Loop 24 

### Ranking functions of CR evalfbb5in(A,B,C,E,F,G) 
* RF of phase [18,20]: [-A+B]

#### Partial ranking functions of CR evalfbb5in(A,B,C,E,F,G) 
* Partial RF of phase [18,20]:
  - RF of loop [18:1]:
    -A/2+B/2-1/2
  - RF of loop [20:1]:
    -A+B


### Specialization of cost equations evalfbb5in_loop_cont/5 
* CE 8 is refined into CE [26] 
* CE 9 is refined into CE [27] 


### Cost equations --> "Loop" of evalfbb5in_loop_cont/5 
* CEs [26] --> Loop 25 
* CEs [27] --> Loop 26 

### Ranking functions of CR evalfbb5in_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR evalfbb5in_loop_cont(A,B,C,D,E) 


### Specialization of cost equations evalfentryin/4 
* CE 2 is refined into CE [28,29,30,31,32,33,34,35,36] 


### Cost equations --> "Loop" of evalfentryin/4 
* CEs [30,34,36] --> Loop 27 
* CEs [29,31,33,35] --> Loop 28 
* CEs [32] --> Loop 29 
* CEs [28] --> Loop 30 

### Ranking functions of CR evalfentryin(A,B,C,E) 

#### Partial ranking functions of CR evalfentryin(A,B,C,E) 


### Specialization of cost equations evalfstart/4 
* CE 1 is refined into CE [37,38,39,40] 


### Cost equations --> "Loop" of evalfstart/4 
* CEs [40] --> Loop 31 
* CEs [39] --> Loop 32 
* CEs [38] --> Loop 33 
* CEs [37] --> Loop 34 

### Ranking functions of CR evalfstart(A,B,C,E) 

#### Partial ranking functions of CR evalfstart(A,B,C,E) 


Computing Bounds
=====================================

#### Cost of chains of evalfbb2in(B,C,E,F):
* Chain [[14],17]: 1*it(14)+0
  Such that:it(14) =< B-C

  with precondition: [E=2,B=F,B>=C+1] 

* Chain [[14],16]: 1*it(14)+0
  Such that:it(14) =< -C+F

  with precondition: [E=2,F>=C+1,B>=F+1] 

* Chain [[14],15]: 1*it(14)+0
  Such that:it(14) =< B-C

  with precondition: [E=3,B>=C+1] 

* Chain [16]: 0
  with precondition: [E=2,C=F,B>=C+1] 

* Chain [15]: 0
  with precondition: [E=3,B>=C] 


#### Cost of chains of evalfbb5in(A,B,C,E,F,G):
* Chain [[18,20],24]: 1*it(18)+2*it(20)+0
  Such that:it(18) =< -A/2+B/2
aux(3) =< -A+B
it(18) =< aux(3)
it(20) =< aux(3)

  with precondition: [E=3,A>=0,B>=A+1] 

* Chain [[18,20],23]: 1*it(18)+3*it(20)+0
  Such that:it(18) =< -A/2+B/2
aux(4) =< -A+B
it(18) =< aux(4)
it(20) =< aux(4)

  with precondition: [E=3,A>=0,B>=A+2] 

* Chain [[18,20],22]: 1*it(18)+2*it(20)+0
  Such that:aux(1) =< -A+B
aux(2) =< -A+F
it(18) =< -A/2+F/2
it(18) =< aux(1)
it(20) =< aux(1)
it(18) =< aux(2)
it(20) =< aux(2)

  with precondition: [E=4,F=G+1,A>=0,F>=A+1,B>=F+1] 

* Chain [[18,20],21]: 1*it(18)+2*it(20)+0
  Such that:it(18) =< -A/2+F/2
aux(5) =< -A+F
it(18) =< aux(5)
it(20) =< aux(5)

  with precondition: [E=4,B=F,B=G+1,A>=0,B>=A+1] 

* Chain [[18,20],19,24]: 1*it(18)+3*it(20)+1
  Such that:it(18) =< -A/2+B/2
aux(6) =< -A+B
it(18) =< aux(6)
it(20) =< aux(6)

  with precondition: [E=3,A>=0,B>=A+2] 

* Chain [[18,20],19,21]: 1*it(18)+3*it(20)+1
  Such that:it(18) =< -A/2+F/2
aux(7) =< -A+F
it(18) =< aux(7)
it(20) =< aux(7)

  with precondition: [E=4,B+1=F,B=G,A>=0,B>=A+2] 

* Chain [24]: 0
  with precondition: [E=3,A>=0] 

* Chain [23]: 1*s(4)+0
  Such that:s(4) =< -A+B

  with precondition: [E=3,A>=0,B>=A+1] 

* Chain [22]: 0
  with precondition: [E=4,G=C,A=F,A>=0,B>=A+1] 

* Chain [21]: 0
  with precondition: [E=4,G=C,A=F,A>=0,A>=B] 

* Chain [19,24]: 1*s(5)+1
  Such that:s(5) =< -A+B

  with precondition: [E=3,A>=0,B>=A+1] 

* Chain [19,21]: 1*s(5)+1
  Such that:s(5) =< -A+F

  with precondition: [E=4,B+1=F,B=G,A>=0,B>=A+1] 


#### Cost of chains of evalfbb5in_loop_cont(A,B,C,D,E):
* Chain [26]: 0
  with precondition: [A=3] 

* Chain [25]: 0
  with precondition: [A=4] 


#### Cost of chains of evalfentryin(A,B,C,E):
* Chain [30]: 0
  with precondition: [] 

* Chain [29]: 0
  with precondition: [0>=B] 

* Chain [28]: 2*s(17)+6*s(19)+1*s(20)+1
  Such that:s(20) =< B+1
aux(11) =< B
aux(12) =< B/2
s(17) =< aux(12)
s(19) =< aux(11)
s(17) =< aux(11)

  with precondition: [B>=1] 

* Chain [27]: 3*s(26)+8*s(27)+1*s(28)+3*s(30)+1
  Such that:s(29) =< B+1
s(28) =< B/2+1/2
aux(14) =< B
aux(15) =< B/2
s(26) =< aux(15)
s(26) =< aux(14)
s(27) =< aux(14)
s(28) =< s(29)
s(30) =< s(29)

  with precondition: [B>=2] 


#### Cost of chains of evalfstart(A,B,C,E):
* Chain [34]: 0
  with precondition: [] 

* Chain [33]: 0
  with precondition: [0>=B] 

* Chain [32]: 1*s(35)+2*s(38)+6*s(39)+1
  Such that:s(36) =< B
s(35) =< B+1
s(37) =< B/2
s(38) =< s(37)
s(39) =< s(36)
s(38) =< s(36)

  with precondition: [B>=1] 

* Chain [31]: 1*s(41)+3*s(44)+8*s(45)+3*s(46)+1
  Such that:s(42) =< B
s(40) =< B+1
s(43) =< B/2
s(41) =< B/2+1/2
s(44) =< s(43)
s(44) =< s(42)
s(45) =< s(42)
s(41) =< s(40)
s(46) =< s(40)

  with precondition: [B>=2] 


Closed-form bounds of evalfstart(A,B,C,E): 
-------------------------------------
* Chain [34] with precondition: [] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [33] with precondition: [0>=B] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [32] with precondition: [B>=1] 
    - Upper bound: 8*B+2 
    - Complexity: n 
* Chain [31] with precondition: [B>=2] 
    - Upper bound: 13*B+9/2 
    - Complexity: n 

### Maximum cost of evalfstart(A,B,C,E): nat(B+1)*2+nat(B)*2+nat(B/2+1/2)+nat(B/2)+(nat(B)*6+1+nat(B+1)+nat(B/2)*2) 
Asymptotic class: n 
* Total analysis performed in 126 ms.

