WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval2/6]
1. recursive  : [eval1/4,eval2_loop_cont/5]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [eval1_loop_cont/2]
4. non_recursive  : [start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval2/6
1. SCC is partially evaluated into eval1/4
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval2/6 
* CE 7 is refined into CE [8] 
* CE 6 is refined into CE [9] 
* CE 5 is refined into CE [10] 


### Cost equations --> "Loop" of eval2/6 
* CEs [10] --> Loop 8 
* CEs [8] --> Loop 9 
* CEs [9] --> Loop 10 

### Ranking functions of CR eval2(A,B,C,D,E,F) 
* RF of phase [8]: [-B+C]

#### Partial ranking functions of CR eval2(A,B,C,D,E,F) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    -B+C


### Specialization of cost equations eval1/4 
* CE 2 is refined into CE [11,12] 
* CE 4 is refined into CE [13] 
* CE 3 is refined into CE [14,15] 


### Cost equations --> "Loop" of eval1/4 
* CEs [15] --> Loop 11 
* CEs [14] --> Loop 12 
* CEs [12] --> Loop 13 
* CEs [11] --> Loop 14 
* CEs [13] --> Loop 15 

### Ranking functions of CR eval1(A,B,C,D) 
* RF of phase [11]: [A-B,A-C]

#### Partial ranking functions of CR eval1(A,B,C,D) 
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    A-B
    A-C


### Specialization of cost equations start/4 
* CE 1 is refined into CE [16,17,18,19,20,21,22] 


### Cost equations --> "Loop" of start/4 
* CEs [22] --> Loop 16 
* CEs [21] --> Loop 17 
* CEs [20] --> Loop 18 
* CEs [19] --> Loop 19 
* CEs [18] --> Loop 20 
* CEs [17] --> Loop 21 
* CEs [16] --> Loop 22 

### Ranking functions of CR start(A,B,C,D) 

#### Partial ranking functions of CR start(A,B,C,D) 


Computing Bounds
=====================================

#### Cost of chains of eval2(A,B,C,D,E,F):
* Chain [[8],10]: 1*it(8)+0
  Such that:it(8) =< C-F

  with precondition: [D=2,A=E+1,B=F,A>=B+1,C>=B+1] 

* Chain [[8],9]: 1*it(8)+0
  Such that:it(8) =< -B+C

  with precondition: [D=3,A>=B+1,C>=B+1] 

* Chain [10]: 0
  with precondition: [D=2,A=E+1,C=F,A>=B+1,B>=C] 

* Chain [9]: 0
  with precondition: [D=3,A>=B+1] 


#### Cost of chains of eval1(A,B,C,D):
* Chain [[11],15]: 1*it(11)+0
  Such that:it(11) =< A-B

  with precondition: [D=3,A>=B+1,B>=C] 

* Chain [[11],14]: 1*it(11)+0
  Such that:it(11) =< A-B

  with precondition: [D=3,A>=B+2,B>=C] 

* Chain [15]: 0
  with precondition: [D=3] 

* Chain [14]: 0
  with precondition: [D=3,A>=B+1] 

* Chain [13]: 1*s(1)+0
  Such that:s(1) =< -B+C

  with precondition: [D=3,A>=B+1,C>=B+1] 

* Chain [12,[11],15]: 1*it(11)+1*s(2)+1
  Such that:it(11) =< A-B
s(2) =< -B+C

  with precondition: [D=3,A>=B+2,C>=B+1] 

* Chain [12,[11],14]: 1*it(11)+1*s(2)+1
  Such that:it(11) =< A-B
s(2) =< -B+C

  with precondition: [D=3,A>=B+3,C>=B+1] 

* Chain [12,15]: 1*s(2)+1
  Such that:s(2) =< -B+C

  with precondition: [D=3,A>=B+1,C>=B+1] 

* Chain [12,14]: 1*s(2)+1
  Such that:s(2) =< -B+C

  with precondition: [D=3,A>=B+2,C>=B+1] 


#### Cost of chains of start(A,B,C,D):
* Chain [22]: 0
  with precondition: [] 

* Chain [21]: 0
  with precondition: [A>=B+1] 

* Chain [20]: 2*s(9)+1
  Such that:s(8) =< -B+C
s(9) =< s(8)

  with precondition: [A>=B+1,C>=B+1] 

* Chain [19]: 1*s(10)+0
  Such that:s(10) =< A-B

  with precondition: [A>=B+1,B>=C] 

* Chain [18]: 1*s(11)+2*s(13)+1
  Such that:s(11) =< A-B
s(12) =< -B+C
s(13) =< s(12)

  with precondition: [A>=B+2,C>=B+1] 

* Chain [17]: 1*s(14)+0
  Such that:s(14) =< A-B

  with precondition: [A>=B+2,B>=C] 

* Chain [16]: 1*s(15)+1*s(16)+1
  Such that:s(15) =< A-B
s(16) =< -B+C

  with precondition: [A>=B+3,C>=B+1] 


Closed-form bounds of start(A,B,C,D): 
-------------------------------------
* Chain [22] with precondition: [] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [21] with precondition: [A>=B+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [20] with precondition: [A>=B+1,C>=B+1] 
    - Upper bound: -2*B+2*C+1 
    - Complexity: n 
* Chain [19] with precondition: [A>=B+1,B>=C] 
    - Upper bound: A-B 
    - Complexity: n 
* Chain [18] with precondition: [A>=B+2,C>=B+1] 
    - Upper bound: A-3*B+2*C+1 
    - Complexity: n 
* Chain [17] with precondition: [A>=B+2,B>=C] 
    - Upper bound: A-B 
    - Complexity: n 
* Chain [16] with precondition: [A>=B+3,C>=B+1] 
    - Upper bound: A-2*B+C+1 
    - Complexity: n 

### Maximum cost of start(A,B,C,D): nat(-B+C)*2+1+nat(A-B) 
Asymptotic class: n 
* Total analysis performed in 67 ms.

