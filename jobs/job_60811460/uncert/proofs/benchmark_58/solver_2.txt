WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [evalinsertsortbb1in/4,evalinsertsortbb2in/4,evalinsertsortbb3in/4]
1. recursive  : [evalinsertsortbb2in_loop_cont/9,evalinsertsortbb4in/8,evalinsertsortbb5in/8,evalinsertsortbbin/8]
2. non_recursive  : [evalinsertsortstop/5]
3. non_recursive  : [evalinsertsortreturnin/5]
4. non_recursive  : [exit_location/1]
5. non_recursive  : [evalinsertsortbb5in_loop_cont/6]
6. non_recursive  : [evalinsertsortentryin/5]
7. non_recursive  : [evalinsertsortstart/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into evalinsertsortbb2in/4
1. SCC is partially evaluated into evalinsertsortbb5in/8
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into evalinsertsortbb5in_loop_cont/6
6. SCC is partially evaluated into evalinsertsortentryin/5
7. SCC is partially evaluated into evalinsertsortstart/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations evalinsertsortbb2in/4 
* CE 12 is refined into CE [13] 
* CE 9 is refined into CE [14] 
* CE 11 is refined into CE [15] 
* CE 10 is refined into CE [16] 


### Cost equations --> "Loop" of evalinsertsortbb2in/4 
* CEs [16] --> Loop 13 
* CEs [13] --> Loop 14 
* CEs [14] --> Loop 15 
* CEs [15] --> Loop 16 

### Ranking functions of CR evalinsertsortbb2in(C,D,F,G) 
* RF of phase [13]: [D+1]

#### Partial ranking functions of CR evalinsertsortbb2in(C,D,F,G) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    D+1


### Specialization of cost equations evalinsertsortbb5in/8 
* CE 5 is refined into CE [17] 
* CE 3 is refined into CE [18,19] 
* CE 6 is refined into CE [20] 
* CE 4 is refined into CE [21,22,23] 


### Cost equations --> "Loop" of evalinsertsortbb5in/8 
* CEs [23] --> Loop 17 
* CEs [22] --> Loop 18 
* CEs [21] --> Loop 19 
* CEs [17] --> Loop 20 
* CEs [18,19] --> Loop 21 
* CEs [20] --> Loop 22 

### Ranking functions of CR evalinsertsortbb5in(A,B,C,D,F,G,H,I) 
* RF of phase [17,18,19]: [-A+B]

#### Partial ranking functions of CR evalinsertsortbb5in(A,B,C,D,F,G,H,I) 
* Partial RF of phase [17,18,19]:
  - RF of loop [17:1,18:1,19:1]:
    -A+B


### Specialization of cost equations evalinsertsortbb5in_loop_cont/6 
* CE 7 is refined into CE [24] 
* CE 8 is refined into CE [25] 


### Cost equations --> "Loop" of evalinsertsortbb5in_loop_cont/6 
* CEs [24] --> Loop 23 
* CEs [25] --> Loop 24 

### Ranking functions of CR evalinsertsortbb5in_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR evalinsertsortbb5in_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations evalinsertsortentryin/5 
* CE 2 is refined into CE [26,27,28,29,30] 


### Cost equations --> "Loop" of evalinsertsortentryin/5 
* CEs [28] --> Loop 25 
* CEs [27,30] --> Loop 26 
* CEs [29] --> Loop 27 
* CEs [26] --> Loop 28 

### Ranking functions of CR evalinsertsortentryin(A,B,C,D,F) 

#### Partial ranking functions of CR evalinsertsortentryin(A,B,C,D,F) 


### Specialization of cost equations evalinsertsortstart/5 
* CE 1 is refined into CE [31,32,33,34] 


### Cost equations --> "Loop" of evalinsertsortstart/5 
* CEs [34] --> Loop 29 
* CEs [33] --> Loop 30 
* CEs [32] --> Loop 31 
* CEs [31] --> Loop 32 

### Ranking functions of CR evalinsertsortstart(A,B,C,D,F) 

#### Partial ranking functions of CR evalinsertsortstart(A,B,C,D,F) 


Computing Bounds
=====================================

#### Cost of chains of evalinsertsortbb2in(C,D,F,G):
* Chain [[13],16]: 1*it(13)+0
  Such that:it(13) =< D+1

  with precondition: [F=2,G+1=0,D>=0] 

* Chain [[13],15]: 1*it(13)+0
  Such that:it(13) =< D-G

  with precondition: [F=2,G>=0,D>=G+1] 

* Chain [[13],14]: 1*it(13)+0
  Such that:it(13) =< D+1

  with precondition: [F=3,D>=0] 

* Chain [15]: 0
  with precondition: [F=2,D=G,D>=0] 

* Chain [14]: 0
  with precondition: [F=3,D+1>=0] 


#### Cost of chains of evalinsertsortbb5in(A,B,C,D,F,G,H,I):
* Chain [[17,18,19],22]: 3*it(17)+1*s(5)+1*s(6)+0
  Such that:aux(1) =< B
aux(5) =< -A+B
it(17) =< aux(5)
aux(2) =< aux(1)
s(5) =< it(17)*aux(1)
s(6) =< it(17)*aux(2)

  with precondition: [F=3,A>=1,B>=A+1] 

* Chain [[17,18,19],21]: 3*it(17)+1*s(5)+1*s(6)+1*s(7)+0
  Such that:aux(6) =< -A+B
aux(7) =< B
s(7) =< aux(7)
it(17) =< aux(6)
aux(2) =< aux(7)
s(5) =< it(17)*aux(7)
s(6) =< it(17)*aux(2)

  with precondition: [F=3,A>=1,B>=A+2] 

* Chain [[17,18,19],20]: 3*it(17)+1*s(5)+1*s(6)+0
  Such that:aux(1) =< G
aux(8) =< -A+G
it(17) =< aux(8)
aux(2) =< aux(1)
s(5) =< it(17)*aux(1)
s(6) =< it(17)*aux(2)

  with precondition: [F=4,B=G,A>=1,I+1>=0,B>=A+1,B>=I+2] 

* Chain [22]: 0
  with precondition: [F=3,A>=1] 

* Chain [21]: 1*s(7)+0
  Such that:s(7) =< A

  with precondition: [F=3,A>=1,B>=A+1] 

* Chain [20]: 0
  with precondition: [F=4,H=C,I=D,A=G,A>=1,A>=B] 


#### Cost of chains of evalinsertsortbb5in_loop_cont(A,B,C,D,E,F):
* Chain [24]: 0
  with precondition: [A=3] 

* Chain [23]: 0
  with precondition: [A=4] 


#### Cost of chains of evalinsertsortentryin(A,B,C,D,F):
* Chain [28]: 0
  with precondition: [] 

* Chain [27]: 0
  with precondition: [1>=B] 

* Chain [26]: 1*s(16)+6*s(18)+2*s(20)+2*s(21)+0
  Such that:s(16) =< 1
aux(11) =< B
s(18) =< aux(11)
s(19) =< aux(11)
s(20) =< s(18)*aux(11)
s(21) =< s(18)*s(19)

  with precondition: [B>=2] 

* Chain [25]: 4*s(30)+1*s(33)+1*s(34)+0
  Such that:aux(12) =< B
s(30) =< aux(12)
s(32) =< aux(12)
s(33) =< s(30)*aux(12)
s(34) =< s(30)*s(32)

  with precondition: [B>=3] 


#### Cost of chains of evalinsertsortstart(A,B,C,D,F):
* Chain [32]: 0
  with precondition: [] 

* Chain [31]: 0
  with precondition: [1>=B] 

* Chain [30]: 1*s(35)+6*s(37)+2*s(39)+2*s(40)+0
  Such that:s(35) =< 1
s(36) =< B
s(37) =< s(36)
s(38) =< s(36)
s(39) =< s(37)*s(36)
s(40) =< s(37)*s(38)

  with precondition: [B>=2] 

* Chain [29]: 4*s(42)+1*s(44)+1*s(45)+0
  Such that:s(41) =< B
s(42) =< s(41)
s(43) =< s(41)
s(44) =< s(42)*s(41)
s(45) =< s(42)*s(43)

  with precondition: [B>=3] 


Closed-form bounds of evalinsertsortstart(A,B,C,D,F): 
-------------------------------------
* Chain [32] with precondition: [] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [31] with precondition: [1>=B] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [30] with precondition: [B>=2] 
    - Upper bound: 6*B+1+4*B*B 
    - Complexity: n^2 
* Chain [29] with precondition: [B>=3] 
    - Upper bound: 2*B*B+4*B 
    - Complexity: n^2 

### Maximum cost of evalinsertsortstart(A,B,C,D,F): nat(B)*2+1+nat(B)*2*nat(B)+(nat(B)*2*nat(B)+nat(B)*4) 
Asymptotic class: n^2 
* Total analysis performed in 102 ms.

