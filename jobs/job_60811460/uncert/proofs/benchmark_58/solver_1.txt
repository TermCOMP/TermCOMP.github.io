WORST_CASE(Omega(n^2),O(n^2))

# LoAT Proof:
WORST_CASE(Omega(n^2),?)

WORST_CASE(Omega(n^1),?)
WORST_CASE(Omega(n^2),?)
Initial ITS

Start location: evalinsertsortstart

Location map:
LoAT_sink -> 0
evalinsertsortstart -> 1
evalinsertsortentryin -> 2
evalinsertsortbb5in -> 3
evalinsertsortbbin -> 4
evalinsertsortreturnin -> 5
evalinsertsortbb2in -> 6
evalinsertsortbb4in -> 7
evalinsertsortbb3in -> 8
evalinsertsortbb1in -> 9
evalinsertsortstop -> 10

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: -2+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=1
   2: (-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=4, i3'=1+i3
   3: (-3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=5, i3'=1+i3
   4: -4+i1 == 0 /\ i1'=6, i3'=1+i3, i6'=it2, i7'=-1+i4
   5: (-6+i1 == 0 /\ -1-i7 >= 0) /\ i1'=7, i3'=1+i3
   6: (-6+i1 == 0 /\ i7 >= 0) /\ i1'=8, i3'=1+i3
   7: (-1-i6+it3 >= 0 /\ -8+i1 == 0) /\ i1'=9, i3'=1+i3
   8: (i6-it4 >= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3
   9: -9+i1 == 0 /\ i1'=6, i3'=1+i3, i7'=-1+i7
  10: -7+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=1+i4
  11: -5+i1 == 0 /\ i1'=10, i3'=1+i3

Dependency graph:
0 -> 1
1 -> 2, 1 -> 3
2 -> 4
3 -> 11
4 -> 5, 4 -> 6
5 -> 10
6 -> 7, 6 -> 8
7 -> 9
8 -> 10
9 -> 5, 9 -> 6
10 -> 2, 10 -> 3

Chained Linear Paths

	Applied Chaining

	First rule:
	-1+i1 == 0 /\ i1'=2, i3'=1+i3
	Second rule:
	-2+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=1
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=1
	
	Applied Deletion

	Removed the following rules: 0, 1
	
	Applied Chaining

	First rule:
	(-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=4, i3'=1+i3
	Second rule:
	-4+i1 == 0 /\ i1'=6, i3'=1+i3, i6'=it2, i7'=-1+i4
	New rule:
	(0 == 0 /\ -3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=6, i3'=2+i3, i6'=it2, i7'=-1+i4
	
	Applied Deletion

	Removed the following rules: 2, 4
	
	Applied Chaining

	First rule:
	(-3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=5, i3'=1+i3
	Second rule:
	-5+i1 == 0 /\ i1'=10, i3'=1+i3
	New rule:
	(0 == 0 /\ -3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=10, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 3, 11
	
	Applied Chaining

	First rule:
	(-6+i1 == 0 /\ -1-i7 >= 0) /\ i1'=7, i3'=1+i3
	Second rule:
	-7+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=1+i4
	New rule:
	(0 == 0 /\ -6+i1 == 0 /\ -1-i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i4
	
	Applied Deletion

	Removed the following rules: 5
	
	Applied Chaining

	First rule:
	(-1-i6+it3 >= 0 /\ -8+i1 == 0) /\ i1'=9, i3'=1+i3
	Second rule:
	-9+i1 == 0 /\ i1'=6, i3'=1+i3, i7'=-1+i7
	New rule:
	(0 == 0 /\ -1-i6+it3 >= 0 /\ -8+i1 == 0) /\ i1'=6, i3'=2+i3, i7'=-1+i7
	
	Applied Deletion

	Removed the following rules: 7, 9
	
	Applied Chaining

	First rule:
	(i6-it4 >= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3
	Second rule:
	-7+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=1+i4
	New rule:
	(0 == 0 /\ i6-it4 >= 0 /\ -8+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=1+i4
	
	Applied Deletion

	Removed the following rules: 8, 10

Start location: evalinsertsortstart

Location map:
LoAT_sink -> 0
evalinsertsortstart -> 1
evalinsertsortentryin -> 2
evalinsertsortbb5in -> 3
evalinsertsortbbin -> 4
evalinsertsortreturnin -> 5
evalinsertsortbb2in -> 6
evalinsertsortbb4in -> 7
evalinsertsortbb3in -> 8
evalinsertsortbb1in -> 9
evalinsertsortstop -> 10

Rules:
   6: (-6+i1 == 0 /\ i7 >= 0) /\ i1'=8, i3'=1+i3
  12: (0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=1
  13: (0 == 0 /\ -3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=6, i3'=2+i3, i6'=it2, i7'=-1+i4
  14: (0 == 0 /\ -3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=10, i3'=2+i3
  15: (0 == 0 /\ -6+i1 == 0 /\ -1-i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i4
  16: (0 == 0 /\ -1-i6+it3 >= 0 /\ -8+i1 == 0) /\ i1'=6, i3'=2+i3, i7'=-1+i7
  17: (0 == 0 /\ i6-it4 >= 0 /\ -8+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=1+i4

Dependency graph:
6 -> 16, 6 -> 17
12 -> 13, 12 -> 14
13 -> 6, 13 -> 15
15 -> 13, 15 -> 14
16 -> 6, 16 -> 15
17 -> 13, 17 -> 14

Preprocessed Transitions

	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=1
	New rule:
	-1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=1
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=6, i3'=2+i3, i6'=it2, i7'=-1+i4
	New rule:
	(-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=6, i3'=2+i3, i6'=it2, i7'=-1+i4
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=10, i3'=2+i3
	New rule:
	(-3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=10, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -6+i1 == 0 /\ -1-i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i4
	New rule:
	(-6+i1 == 0 /\ -1-i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i4
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -1-i6+it3 >= 0 /\ -8+i1 == 0) /\ i1'=6, i3'=2+i3, i7'=-1+i7
	New rule:
	(-1-i6+it3 >= 0 /\ -8+i1 == 0) /\ i1'=6, i3'=2+i3, i7'=-1+i7
	
	Eliminated Temporary Variables

	Original rule:
	(-1-i6+it3 >= 0 /\ -8+i1 == 0) /\ i1'=6, i3'=2+i3, i7'=-1+i7
	New rule:
	(-8+i1 == 0) /\ i1'=6, i3'=2+i3, i7'=-1+i7
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ i6-it4 >= 0 /\ -8+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=1+i4
	New rule:
	(i6-it4 >= 0 /\ -8+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=1+i4
	
	Eliminated Temporary Variables

	Original rule:
	(i6-it4 >= 0 /\ -8+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=1+i4
	New rule:
	(-8+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=1+i4

Start location: evalinsertsortstart

Location map:
LoAT_sink -> 0
evalinsertsortstart -> 1
evalinsertsortentryin -> 2
evalinsertsortbb5in -> 3
evalinsertsortbbin -> 4
evalinsertsortreturnin -> 5
evalinsertsortbb2in -> 6
evalinsertsortbb4in -> 7
evalinsertsortbb3in -> 8
evalinsertsortbb1in -> 9
evalinsertsortstop -> 10

Rules:
   6: (-6+i1 == 0 /\ i7 >= 0) /\ i1'=8, i3'=1+i3
  18: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=1
  19: (-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=6, i3'=2+i3, i6'=it2, i7'=-1+i4
  20: (-3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=10, i3'=2+i3
  21: (-6+i1 == 0 /\ -1-i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i4
  22: (-8+i1 == 0) /\ i1'=6, i3'=2+i3, i7'=-1+i7
  23: (-8+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=1+i4

Dependency graph:
6 -> 22, 6 -> 23
18 -> 19, 18 -> 20
19 -> 6, 19 -> 21
21 -> 19, 21 -> 20
22 -> 6, 22 -> 21
23 -> 19, 23 -> 20

Step with 18

	Trace

	18[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 20

	Trace

	18[(-1+i1 == 0)]
	20[(-3+i1 == 0 /\ i4-i5 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Backtrack

	Trace

	18[(-1+i1 == 0)]
	
	Blocked

	{}
	{20[T]}
	
Step with 19

	Trace

	18[(-1+i1 == 0)]
	19[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{20[T]}
	{}
	
Step with 6

	Trace

	18[(-1+i1 == 0)]
	19[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	6[(-6+i1 == 0 /\ i7 >= 0)]
	
	Blocked

	{}
	{20[T]}
	{}
	{}
	
Step with 23

	Trace

	18[(-1+i1 == 0)]
	19[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	6[(-6+i1 == 0 /\ i7 >= 0)]
	23[(-8+i1 == 0)]
	
	Blocked

	{}
	{20[T]}
	{}
	{}
	{}
	
Poly(n^1)

Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -3+i1 == 0 /\ -1+i4 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=5+i3, i4'=1+i4, i6'=it2, i7'=-1+i4
		New rule:
		(-3+i1 == 0 /\ -1+i4 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=5+i3, i4'=1+i4, i6'=it2, i7'=-1+i4

	Loop Acceleration

	Original rule:
	(-3+i1 == 0 /\ -1+i4 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=5+i3, i4'=1+i4, i6'=it2, i7'=-1+i4
	New rule:
	(-3+i1 >= 0 /\ -1+it36 >= 0 /\ -1+i4 >= 0 /\ -i4-it36+i5 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=i1, i3'=i3+5*it36, i4'=i4+it36, i6'=it2, i7'=-2+i4+it36

		-3+i1 >= 0 [0]: unchanged
		
		-1+i4 >= 0 [0]: monotonic increase yields -1+i4 >= 0
		
		3-i1 >= 0 [0]: unchanged
		
		-1-i4+i5 >= 0 [0]: montonic decrease yields (-i4-it36+i5 >= 0 /\ -1-i4+i5 >= 0)
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, -1+i4 >= 0 -> -1+i4 >= 0, 3-i1 >= 0 -> 3-i1 >= 0, -1-i4+i5 >= 0 -> (-i4-it36+i5 >= 0 /\ -1-i4+i5 >= 0)}

	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ -1+it36 >= 0 /\ -1+i4 >= 0 /\ -i4-it36+i5 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=i1, i3'=i3+5*it36, i4'=i4+it36, i6'=it2, i7'=-2+i4+it36
	New rule:
	(-3+i1 >= 0 /\ -1+it36 >= 0 /\ -1+i4 >= 0 /\ -i4-it36+i5 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3+5*it36, i4'=i4+it36, i6'=it2, i7'=-2+i4+it36
	
	Instantiation

	Original rule:
	(-3+i1 >= 0 /\ -1+it36 >= 0 /\ -1+i4 >= 0 /\ -i4-it36+i5 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3+5*it36, i4'=i4+it36, i6'=it2, i7'=-2+i4+it36
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3-5*i4+5*i5, i4'=i5, i6'=it2, i7'=-2+i5

Start location: evalinsertsortstart

Location map:
LoAT_sink -> 0
evalinsertsortstart -> 1
evalinsertsortentryin -> 2
evalinsertsortbb5in -> 3
evalinsertsortbbin -> 4
evalinsertsortreturnin -> 5
evalinsertsortbb2in -> 6
evalinsertsortbb4in -> 7
evalinsertsortbb3in -> 8
evalinsertsortbb1in -> 9
evalinsertsortstop -> 10

Rules:
   6: (-6+i1 == 0 /\ i7 >= 0) /\ i1'=8, i3'=1+i3
  18: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=1
  19: (-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=6, i3'=2+i3, i6'=it2, i7'=-1+i4
  20: (-3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=10, i3'=2+i3
  21: (-6+i1 == 0 /\ -1-i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i4
  22: (-8+i1 == 0) /\ i1'=6, i3'=2+i3, i7'=-1+i7
  23: (-8+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=1+i4
  24: (0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3-5*i4+5*i5, i4'=i5, i6'=it2, i7'=-2+i5

Dependency graph:
6 -> 22, 6 -> 23
18 -> 19, 18 -> 20, 18 -> 24
19 -> 6, 19 -> 21
21 -> 19, 21 -> 20, 21 -> 24
22 -> 6, 22 -> 21
23 -> 19, 23 -> 20, 23 -> 24
24 -> 19, 24 -> 20

	Trace

	18[(-1+i1 == 0)]
	24[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{20[T]}
	{24[T]}
	
Step with 20

	Trace

	18[(-1+i1 == 0)]
	24[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0)]
	20[(-3+i1 == 0 /\ i4-i5 >= 0)]
	
	Blocked

	{}
	{20[T]}
	{19[T], 24[T]}
	{}
	
Backtrack

	Trace

	18[(-1+i1 == 0)]
	24[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{20[T]}
	{19[T], 20[T], 24[T]}
	
Backtrack

	Trace

	18[(-1+i1 == 0)]
	
	Blocked

	{}
	{20[T], 24[T]}
	
Step with 19

	Trace

	18[(-1+i1 == 0)]
	19[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{20[T], 24[T]}
	{}
	
Step with 6

	Trace

	18[(-1+i1 == 0)]
	19[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	6[(-6+i1 == 0 /\ i7 >= 0)]
	
	Blocked

	{}
	{20[T], 24[T]}
	{}
	{}
	
Step with 22

	Trace

	18[(-1+i1 == 0)]
	19[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	6[(-6+i1 == 0 /\ i7 >= 0)]
	22[(-8+i1 == 0)]
	
	Blocked

	{}
	{20[T], 24[T]}
	{}
	{}
	{}
	
Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -6+i1 == 0 /\ i7 >= 0) /\ i1'=6, i3'=3+i3, i7'=-1+i7
		New rule:
		(-6+i1 == 0 /\ i7 >= 0) /\ i1'=6, i3'=3+i3, i7'=-1+i7

	Loop Acceleration

	Original rule:
	(-6+i1 == 0 /\ i7 >= 0) /\ i1'=6, i3'=3+i3, i7'=-1+i7
	New rule:
	(1+i7-it75 >= 0 /\ -1+it75 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0) /\ i1'=i1, i3'=i3+3*it75, i7'=i7-it75

		-6+i1 >= 0 [0]: unchanged
		
		6-i1 >= 0 [0]: unchanged
		
		i7 >= 0 [0]: montonic decrease yields 1+i7-it75 >= 0
		
		Replacement map: {-6+i1 >= 0 -> -6+i1 >= 0, 6-i1 >= 0 -> 6-i1 >= 0, i7 >= 0 -> 1+i7-it75 >= 0}

	Removed Trivial Updates

	Original rule:
	(1+i7-it75 >= 0 /\ -1+it75 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0) /\ i1'=i1, i3'=i3+3*it75, i7'=i7-it75
	New rule:
	(1+i7-it75 >= 0 /\ -1+it75 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0) /\ i3'=i3+3*it75, i7'=i7-it75
	
	Instantiation

	Original rule:
	(1+i7-it75 >= 0 /\ -1+it75 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0) /\ i3'=i3+3*it75, i7'=i7-it75
	New rule:
	(0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ i7 >= 0) /\ i3'=3+i3+3*i7, i7'=-1

Start location: evalinsertsortstart

Location map:
LoAT_sink -> 0
evalinsertsortstart -> 1
evalinsertsortentryin -> 2
evalinsertsortbb5in -> 3
evalinsertsortbbin -> 4
evalinsertsortreturnin -> 5
evalinsertsortbb2in -> 6
evalinsertsortbb4in -> 7
evalinsertsortbb3in -> 8
evalinsertsortbb1in -> 9
evalinsertsortstop -> 10

Rules:
   6: (-6+i1 == 0 /\ i7 >= 0) /\ i1'=8, i3'=1+i3
  18: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=1
  19: (-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=6, i3'=2+i3, i6'=it2, i7'=-1+i4
  20: (-3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=10, i3'=2+i3
  21: (-6+i1 == 0 /\ -1-i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i4
  22: (-8+i1 == 0) /\ i1'=6, i3'=2+i3, i7'=-1+i7
  23: (-8+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=1+i4
  24: (0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3-5*i4+5*i5, i4'=i5, i6'=it2, i7'=-2+i5
  25: (0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ i7 >= 0) /\ i3'=3+i3+3*i7, i7'=-1

Dependency graph:
6 -> 22, 6 -> 23
18 -> 19, 18 -> 20, 18 -> 24
19 -> 6, 19 -> 21, 19 -> 25
21 -> 19, 21 -> 20, 21 -> 24
22 -> 6, 22 -> 21, 22 -> 25
23 -> 19, 23 -> 20, 23 -> 24
24 -> 19, 24 -> 20
25 -> 6, 25 -> 21

	Trace

	18[(-1+i1 == 0)]
	19[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	25[(0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ i7 >= 0)]
	
	Blocked

	{}
	{20[T], 24[T]}
	{}
	{25[T]}
	
Step with 21

	Trace

	18[(-1+i1 == 0)]
	19[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	25[(0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ i7 >= 0)]
	21[(-6+i1 == 0 /\ -1-i7 >= 0)]
	
	Blocked

	{}
	{20[T], 24[T]}
	{}
	{6[T], 25[T]}
	{}
	
Poly(n^2)

Accelerate

		Simplified Guard

		Original rule:
		(0 >= 0 /\ 0 == 0 /\ -3+i1 == 0 /\ -1+i4 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=4+i3+3*i4, i4'=1+i4, i6'=it2, i7'=-1
		New rule:
		(-3+i1 == 0 /\ -1+i4 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=4+i3+3*i4, i4'=1+i4, i6'=it2, i7'=-1

	Loop Acceleration

	Original rule:
	(-3+i1 == 0 /\ -1+i4 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=4+i3+3*i4, i4'=1+i4, i6'=it2, i7'=-1
	New rule:
	(-3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ -1+it88 >= 0 /\ -1-i4+i5 >= 0 /\ -i4-it88+i5 >= 0) /\ i1'=i1, i3'=i3+3*i4*it88+5/2*it88+3/2*it88^2, i4'=i4+it88, i6'=it2, i7'=-1

		-3+i1 >= 0 [0]: unchanged
		
		-1+i4 >= 0 [0]: monotonic increase yields -1+i4 >= 0
		
		3-i1 >= 0 [0]: unchanged
		
		-1-i4+i5 >= 0 [0]: montonic decrease yields (-1-i4+i5 >= 0 /\ -i4-it88+i5 >= 0)
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, -1+i4 >= 0 -> -1+i4 >= 0, 3-i1 >= 0 -> 3-i1 >= 0, -1-i4+i5 >= 0 -> (-1-i4+i5 >= 0 /\ -i4-it88+i5 >= 0)}

	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ -1+it88 >= 0 /\ -1-i4+i5 >= 0 /\ -i4-it88+i5 >= 0) /\ i1'=i1, i3'=i3+3*i4*it88+5/2*it88+3/2*it88^2, i4'=i4+it88, i6'=it2, i7'=-1
	New rule:
	(-3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ -1+it88 >= 0 /\ -1-i4+i5 >= 0 /\ -i4-it88+i5 >= 0) /\ i3'=i3+3*i4*it88+5/2*it88+3/2*it88^2, i4'=i4+it88, i6'=it2, i7'=-1
	
	Instantiation

	Original rule:
	(-3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ -1+it88 >= 0 /\ -1-i4+i5 >= 0 /\ -i4-it88+i5 >= 0) /\ i3'=i3+3*i4*it88+5/2*it88+3/2*it88^2, i4'=i4+it88, i6'=it2, i7'=-1
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3+3/2*(i4-i5)^2-5/2*i4+5/2*i5-3*i4*(i4-i5), i4'=i5, i6'=it2, i7'=-1

Start location: evalinsertsortstart

Location map:
LoAT_sink -> 0
evalinsertsortstart -> 1
evalinsertsortentryin -> 2
evalinsertsortbb5in -> 3
evalinsertsortbbin -> 4
evalinsertsortreturnin -> 5
evalinsertsortbb2in -> 6
evalinsertsortbb4in -> 7
evalinsertsortbb3in -> 8
evalinsertsortbb1in -> 9
evalinsertsortstop -> 10

Rules:
   6: (-6+i1 == 0 /\ i7 >= 0) /\ i1'=8, i3'=1+i3
  18: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=1
  19: (-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=6, i3'=2+i3, i6'=it2, i7'=-1+i4
  20: (-3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=10, i3'=2+i3
  21: (-6+i1 == 0 /\ -1-i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i4
  22: (-8+i1 == 0) /\ i1'=6, i3'=2+i3, i7'=-1+i7
  23: (-8+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=1+i4
  24: (0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3-5*i4+5*i5, i4'=i5, i6'=it2, i7'=-2+i5
  25: (0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ i7 >= 0) /\ i3'=3+i3+3*i7, i7'=-1
  26: (0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3+3/2*(i4-i5)^2-5/2*i4+5/2*i5-3*i4*(i4-i5), i4'=i5, i6'=it2, i7'=-1

Dependency graph:
6 -> 22, 6 -> 23
18 -> 19, 18 -> 20, 18 -> 24, 18 -> 26
19 -> 6, 19 -> 21, 19 -> 25
21 -> 19, 21 -> 20, 21 -> 24, 21 -> 26
22 -> 6, 22 -> 21, 22 -> 25
23 -> 19, 23 -> 20, 23 -> 24, 23 -> 26
24 -> 19, 24 -> 20, 24 -> 26
25 -> 6, 25 -> 21
26 -> 19, 26 -> 20, 26 -> 24

	Trace

	18[(-1+i1 == 0)]
	26[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{20[T], 24[T]}
	{26[T]}
	
Step with 20

	Trace

	18[(-1+i1 == 0)]
	26[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0)]
	20[(-3+i1 == 0 /\ i4-i5 >= 0)]
	
	Blocked

	{}
	{20[T], 24[T]}
	{26[T]}
	{}
	
Backtrack

	Trace

	18[(-1+i1 == 0)]
	26[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{20[T], 24[T]}
	{20[T], 26[T]}
	
Backtrack

	Trace

	18[(-1+i1 == 0)]
	
	Blocked

	{}
	{20[T], 24[T], 26[T]}
	
Step with 19

	Trace

	18[(-1+i1 == 0)]
	19[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{20[T], 24[T], 26[T]}
	{}
	
Step with 25

	Trace

	18[(-1+i1 == 0)]
	19[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	25[(0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ i7 >= 0)]
	
	Blocked

	{}
	{20[T], 24[T], 26[T]}
	{}
	{25[T]}
	
Step with 21

	Trace

	18[(-1+i1 == 0)]
	19[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	25[(0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ i7 >= 0)]
	21[(-6+i1 == 0 /\ -1-i7 >= 0)]
	
	Blocked

	{}
	{20[T], 24[T], 26[T]}
	{}
	{6[T], 25[T]}
	{}
	
Covered

	Trace

	18[(-1+i1 == 0)]
	19[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	25[(0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ i7 >= 0)]
	
	Blocked

	{}
	{20[T], 24[T], 26[T]}
	{}
	{6[T], 21[T], 25[T]}
	
Backtrack

	Trace

	18[(-1+i1 == 0)]
	19[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{20[T], 24[T], 26[T]}
	{25[T]}
	
Step with 6

	Trace

	18[(-1+i1 == 0)]
	19[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	6[(-6+i1 == 0 /\ i7 >= 0)]
	
	Blocked

	{}
	{20[T], 24[T], 26[T]}
	{25[T]}
	{}
	
Step with 23

	Trace

	18[(-1+i1 == 0)]
	19[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	6[(-6+i1 == 0 /\ i7 >= 0)]
	23[(-8+i1 == 0)]
	
	Blocked

	{}
	{20[T], 24[T], 26[T]}
	{25[T]}
	{}
	{}
	
Covered

	Trace

	18[(-1+i1 == 0)]
	19[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	6[(-6+i1 == 0 /\ i7 >= 0)]
	
	Blocked

	{}
	{20[T], 24[T], 26[T]}
	{25[T]}
	{23[T]}
	
Step with 22

	Trace

	18[(-1+i1 == 0)]
	19[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	6[(-6+i1 == 0 /\ i7 >= 0)]
	22[(-8+i1 == 0)]
	
	Blocked

	{}
	{20[T], 24[T], 26[T]}
	{25[T]}
	{23[T]}
	{}
	
Covered

	Trace

	18[(-1+i1 == 0)]
	19[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	6[(-6+i1 == 0 /\ i7 >= 0)]
	
	Blocked

	{}
	{20[T], 24[T], 26[T]}
	{25[T]}
	{22[T], 23[T]}
	
Backtrack

	Trace

	18[(-1+i1 == 0)]
	19[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{20[T], 24[T], 26[T]}
	{6[T], 25[T]}
	
Backtrack

	Trace

	18[(-1+i1 == 0)]
	
	Blocked

	{}
	{19[T], 20[T], 24[T], 26[T]}
	
Backtrack

	Trace

	Blocked

	{18[T]}
	
Accept

Poly(n^2)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^2))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃
  Temp_Vars:  E
  Locations:  l0, l1, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃) → l8(X₀, X₁, X₂, X₃)
  t₆: l1(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, X₃) :|: 0 ≤ X₃
  t₅: l1(X₀, X₁, X₂, X₃) → l4(X₀, X₁, X₂, X₃) :|: 1+X₃ ≤ 0
  t₇: l2(X₀, X₁, X₂, X₃) → l3(X₀, X₁, X₂, X₃) :|: 1+X₂ ≤ E
  t₈: l2(X₀, X₁, X₂, X₃) → l4(X₀, X₁, X₂, X₃) :|: E ≤ X₂
  t₉: l3(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, X₃-1)
  t₁₀: l4(X₀, X₁, X₂, X₃) → l6(1+X₀, X₁, X₂, X₃)
  t₄: l5(X₀, X₁, X₂, X₃) → l1(X₀, X₁, E, X₀-1)
  t₂: l6(X₀, X₁, X₂, X₃) → l5(X₀, X₁, X₂, X₃) :|: 1+X₀ ≤ X₁
  t₃: l6(X₀, X₁, X₂, X₃) → l7(X₀, X₁, X₂, X₃) :|: X₁ ≤ X₀
  t₁₁: l7(X₀, X₁, X₂, X₃) → l9(X₀, X₁, X₂, X₃)
  t₁: l8(X₀, X₁, X₂, X₃) → l6(1, X₁, X₂, X₃)


Preprocessing
  Found invariant 2+X₃ ≤ X₁ ∧ 1+X₃ ≤ X₀ ∧ 0 ≤ X₃ ∧ 2 ≤ X₁+X₃ ∧ 1 ≤ X₀+X₃ ∧ 2 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₀ for location l2


  Found invariant 1 ≤ X₀ for location l6


  Found invariant X₁ ≤ X₀ ∧ 1 ≤ X₀ for location l7


  Found invariant 2 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₀ for location l5


  Found invariant 2+X₃ ≤ X₁ ∧ 1+X₃ ≤ X₀ ∧ 0 ≤ 1+X₃ ∧ 1 ≤ X₁+X₃ ∧ 0 ≤ X₀+X₃ ∧ 2 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₀ for location l1


  Found invariant 2+X₃ ≤ X₁ ∧ 1+X₃ ≤ X₀ ∧ 0 ≤ 1+X₃ ∧ 1 ≤ X₁+X₃ ∧ 0 ≤ X₀+X₃ ∧ 2 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₀ for location l4


  Found invariant X₁ ≤ X₀ ∧ 1 ≤ X₀ for location l9


  Found invariant 2+X₃ ≤ X₁ ∧ 1+X₃ ≤ X₀ ∧ 0 ≤ X₃ ∧ 2 ≤ X₁+X₃ ∧ 1 ≤ X₀+X₃ ∧ 2 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₀ for location l3


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃
  Temp_Vars:  E
  Locations:  l0, l1, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃) → l8(X₀, X₁, X₂, X₃)
  t₆: l1(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, X₃) :|: 0 ≤ X₃ ∧ 0 ≤ 1+X₃ ∧ 1 ≤ X₀ ∧ 1+X₃ ≤ X₀ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 2 ≤ X₁ ∧ 2+X₃ ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 0 ≤ X₀+X₃
  t₅: l1(X₀, X₁, X₂, X₃) → l4(X₀, X₁, X₂, X₃) :|: 1+X₃ ≤ 0 ∧ 0 ≤ 1+X₃ ∧ 1 ≤ X₀ ∧ 1+X₃ ≤ X₀ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 2 ≤ X₁ ∧ 2+X₃ ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 0 ≤ X₀+X₃
  t₇: l2(X₀, X₁, X₂, X₃) → l3(X₀, X₁, X₂, X₃) :|: 1+X₂ ≤ E ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₃ ∧ 1+X₃ ≤ X₀ ∧ 1+X₀ ≤ X₁ ∧ 2 ≤ X₁ ∧ 2 ≤ X₁+X₃ ∧ 2+X₃ ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 0 ≤ X₃
  t₈: l2(X₀, X₁, X₂, X₃) → l4(X₀, X₁, X₂, X₃) :|: E ≤ X₂ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₃ ∧ 1+X₃ ≤ X₀ ∧ 1+X₀ ≤ X₁ ∧ 2 ≤ X₁ ∧ 2 ≤ X₁+X₃ ∧ 2+X₃ ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 0 ≤ X₃
  t₉: l3(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, X₃-1) :|: 1 ≤ X₀ ∧ 1 ≤ X₀+X₃ ∧ 1+X₃ ≤ X₀ ∧ 1+X₀ ≤ X₁ ∧ 2 ≤ X₁ ∧ 2 ≤ X₁+X₃ ∧ 2+X₃ ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 0 ≤ X₃
  t₁₀: l4(X₀, X₁, X₂, X₃) → l6(1+X₀, X₁, X₂, X₃) :|: 0 ≤ 1+X₃ ∧ 1 ≤ X₀ ∧ 1+X₃ ≤ X₀ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 2 ≤ X₁ ∧ 2+X₃ ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 0 ≤ X₀+X₃
  t₄: l5(X₀, X₁, X₂, X₃) → l1(X₀, X₁, E, X₀-1) :|: 1 ≤ X₀ ∧ 1+X₀ ≤ X₁ ∧ 2 ≤ X₁ ∧ 3 ≤ X₀+X₁
  t₂: l6(X₀, X₁, X₂, X₃) → l5(X₀, X₁, X₂, X₃) :|: 1+X₀ ≤ X₁ ∧ 1 ≤ X₀
  t₃: l6(X₀, X₁, X₂, X₃) → l7(X₀, X₁, X₂, X₃) :|: X₁ ≤ X₀ ∧ 1 ≤ X₀
  t₁₁: l7(X₀, X₁, X₂, X₃) → l9(X₀, X₁, X₂, X₃) :|: 1 ≤ X₀ ∧ X₁ ≤ X₀
  t₁: l8(X₀, X₁, X₂, X₃) → l6(1, X₁, X₂, X₃)


MPRF for transition t₂: l6(X₀, X₁, X₂, X₃) → l5(X₀, X₁, X₂, X₃) :|: 1+X₀ ≤ X₁ ∧ 1 ≤ X₀ of depth 1:
  new bound:
    X₁+1 {O(n)}

  MPRF:
    • l1: [X₁-1-X₀]
    • l2: [X₁-1-X₀]
    • l3: [X₁-1-X₀]
    • l4: [X₁-1-X₀]
    • l5: [X₁-1-X₀]
    • l6: [X₁-X₀]




MPRF for transition t₄: l5(X₀, X₁, X₂, X₃) → l1(X₀, X₁, E, X₀-1) :|: 1 ≤ X₀ ∧ 1+X₀ ≤ X₁ ∧ 2 ≤ X₁ ∧ 3 ≤ X₀+X₁ of depth 1:
  new bound:
    X₁+1 {O(n)}

  MPRF:
    • l1: [X₁-1-X₀]
    • l2: [X₁-1-X₀]
    • l3: [X₁-1-X₀]
    • l4: [X₁-1-X₀]
    • l5: [X₁-X₀]
    • l6: [X₁-X₀]




MPRF for transition t₅: l1(X₀, X₁, X₂, X₃) → l4(X₀, X₁, X₂, X₃) :|: 1+X₃ ≤ 0 ∧ 0 ≤ 1+X₃ ∧ 1 ≤ X₀ ∧ 1+X₃ ≤ X₀ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 2 ≤ X₁ ∧ 2+X₃ ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 0 ≤ X₀+X₃ of depth 1:
  new bound:
    X₁+1 {O(n)}

  MPRF:
    • l1: [X₁-X₀]
    • l2: [X₁-X₀]
    • l3: [X₁-X₀]
    • l4: [X₁-1-X₀]
    • l5: [X₁-X₀]
    • l6: [X₁-X₀]




MPRF for transition t₈: l2(X₀, X₁, X₂, X₃) → l4(X₀, X₁, X₂, X₃) :|: E ≤ X₂ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₃ ∧ 1+X₃ ≤ X₀ ∧ 1+X₀ ≤ X₁ ∧ 2 ≤ X₁ ∧ 2 ≤ X₁+X₃ ∧ 2+X₃ ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 0 ≤ X₃ of depth 1:
  new bound:
    X₁+1 {O(n)}

  MPRF:
    • l1: [X₁-X₀]
    • l2: [X₁-X₀]
    • l3: [X₁-X₀]
    • l4: [X₁-1-X₀]
    • l5: [X₁-X₀]
    • l6: [X₁-X₀]




MPRF for transition t₁₀: l4(X₀, X₁, X₂, X₃) → l6(1+X₀, X₁, X₂, X₃) :|: 0 ≤ 1+X₃ ∧ 1 ≤ X₀ ∧ 1+X₃ ≤ X₀ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 2 ≤ X₁ ∧ 2+X₃ ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 0 ≤ X₀+X₃ of depth 1:
  new bound:
    X₁+1 {O(n)}

  MPRF:
    • l1: [X₁-X₀]
    • l2: [X₁-X₀]
    • l3: [X₁-X₀]
    • l4: [X₁-X₀]
    • l5: [X₁-X₀]
    • l6: [X₁-X₀]




MPRF for transition t₆: l1(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, X₃) :|: 0 ≤ X₃ ∧ 0 ≤ 1+X₃ ∧ 1 ≤ X₀ ∧ 1+X₃ ≤ X₀ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 2 ≤ X₁ ∧ 2+X₃ ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 0 ≤ X₀+X₃ of depth 1:
  new bound:
    X₁^2+3⋅X₁+3 {O(n^2)}

  MPRF:
    • l1: [1+X₃]
    • l2: [X₃]
    • l3: [X₃]
    • l4: [X₃]
    • l5: [X₀]
    • l6: [X₀]




MPRF for transition t₇: l2(X₀, X₁, X₂, X₃) → l3(X₀, X₁, X₂, X₃) :|: 1+X₂ ≤ E ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₃ ∧ 1+X₃ ≤ X₀ ∧ 1+X₀ ≤ X₁ ∧ 2 ≤ X₁ ∧ 2 ≤ X₁+X₃ ∧ 2+X₃ ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 0 ≤ X₃ of depth 1:
  new bound:
    X₁^2+3⋅X₁+3 {O(n^2)}

  MPRF:
    • l1: [1+X₃]
    • l2: [1+X₃]
    • l3: [X₃]
    • l4: [X₃]
    • l5: [X₀]
    • l6: [X₀]




MPRF for transition t₉: l3(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, X₃-1) :|: 1 ≤ X₀ ∧ 1 ≤ X₀+X₃ ∧ 1+X₃ ≤ X₀ ∧ 1+X₀ ≤ X₁ ∧ 2 ≤ X₁ ∧ 2 ≤ X₁+X₃ ∧ 2+X₃ ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 0 ≤ X₃ of depth 1:
  new bound:
    X₁^2+3⋅X₁+3 {O(n^2)}

  MPRF:
    • l1: [1+X₃]
    • l2: [1+X₃]
    • l3: [1+X₃]
    • l4: [X₃]
    • l5: [X₀]
    • l6: [X₀]




  Cut unreachable locations [l1] from the program graph


  Found invariant 2+X₃ ≤ X₁ ∧ 1+X₃ ≤ X₀ ∧ 0 ≤ X₃ ∧ 2 ≤ X₁+X₃ ∧ 1 ≤ X₀+X₃ ∧ X₀ ≤ 1+X₃ ∧ 2 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₀ for location l1_v1


  Found invariant X₀ ≤ 1 ∧ 1 ≤ X₀ for location l6


  Found invariant 3+X₃ ≤ X₁ ∧ 2+X₃ ≤ X₀ ∧ 0 ≤ 1+X₃ ∧ 2 ≤ X₁+X₃ ∧ 1 ≤ X₀+X₃ ∧ 3 ≤ X₁ ∧ 5 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 2 ≤ X₀ for location l5_v1


  Found invariant 2+X₃ ≤ X₁ ∧ 1+X₃ ≤ X₀ ∧ 0 ≤ X₃ ∧ 2 ≤ X₁+X₃ ∧ 1 ≤ X₀+X₃ ∧ X₀ ≤ 1+X₃ ∧ 2 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₀ for location l4_v1


  Found invariant 3+X₃ ≤ X₁ ∧ 2+X₃ ≤ X₀ ∧ 0 ≤ X₃ ∧ 3 ≤ X₁+X₃ ∧ 2 ≤ X₀+X₃ ∧ 3 ≤ X₁ ∧ 5 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 2 ≤ X₀ for location l4_v2


  Found invariant 2 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ X₀ ≤ 1 ∧ 1 ≤ X₀ for location l5_v2


  Found invariant 1+X₃ ≤ 0 ∧ 3+X₃ ≤ X₁ ∧ 2+X₃ ≤ X₀ ∧ 0 ≤ 1+X₃ ∧ 1 ≤ X₁+X₃ ∧ 0 ≤ X₀+X₃ ∧ 2 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₀ for location l4


  Found invariant 2+X₃ ≤ X₁ ∧ 1+X₃ ≤ X₀ ∧ 0 ≤ X₃ ∧ 2 ≤ X₁+X₃ ∧ 1 ≤ X₀+X₃ ∧ X₀ ≤ 1+X₃ ∧ 2 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₀ for location l3_v1


  Found invariant 3+X₃ ≤ X₁ ∧ 2+X₃ ≤ X₀ ∧ 0 ≤ 1+X₃ ∧ 1 ≤ X₁+X₃ ∧ 0 ≤ X₀+X₃ ∧ 2 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₀ for location l1_v2


  Found invariant 3+X₃ ≤ X₁ ∧ 2+X₃ ≤ X₀ ∧ 0 ≤ X₃ ∧ 3 ≤ X₁+X₃ ∧ 2 ≤ X₀+X₃ ∧ 3 ≤ X₁ ∧ 5 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 2 ≤ X₀ for location l3_v2


  Found invariant 2+X₃ ≤ X₁ ∧ 1+X₃ ≤ X₀ ∧ 0 ≤ X₃ ∧ 2 ≤ X₁+X₃ ∧ 1 ≤ X₀+X₃ ∧ X₀ ≤ 1+X₃ ∧ 2 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₀ for location l2_v1


  Found invariant 2+X₃ ≤ X₁ ∧ 2+X₃ ≤ X₀ ∧ 0 ≤ 1+X₃ ∧ 1 ≤ X₁+X₃ ∧ 1 ≤ X₀+X₃ ∧ 2 ≤ X₁ ∧ 4 ≤ X₀+X₁ ∧ X₀ ≤ X₁ ∧ 2 ≤ X₀ for location l6_v1


  Found invariant 3+X₃ ≤ X₁ ∧ 2+X₃ ≤ X₀ ∧ 0 ≤ X₃ ∧ 3 ≤ X₁+X₃ ∧ 2 ≤ X₀+X₃ ∧ 3 ≤ X₁ ∧ 5 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 2 ≤ X₀ for location l2_v2


  Found invariant X₁ ≤ X₀ ∧ 1 ≤ X₀ for location l7


  Found invariant X₁ ≤ X₀ ∧ 1 ≤ X₀ for location l9


All Bounds
Timebounds
  Overall timebound:3⋅X₁^2+14⋅X₁+18 {O(n^2)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: X₁+1 {O(n)}
    t₃: 1 {O(1)}
    t₄: X₁+1 {O(n)}
    t₅: X₁+1 {O(n)}
    t₆: X₁^2+3⋅X₁+3 {O(n^2)}
    t₇: X₁^2+3⋅X₁+3 {O(n^2)}
    t₈: X₁+1 {O(n)}
    t₉: X₁^2+3⋅X₁+3 {O(n^2)}
    t₁₀: X₁+1 {O(n)}
    t₁₁: 1 {O(1)}


Costbounds
  Overall costbound: 3⋅X₁^2+14⋅X₁+18 {O(n^2)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: X₁+1 {O(n)}
    t₃: 1 {O(1)}
    t₄: X₁+1 {O(n)}
    t₅: X₁+1 {O(n)}
    t₆: X₁^2+3⋅X₁+3 {O(n^2)}
    t₇: X₁^2+3⋅X₁+3 {O(n^2)}
    t₈: X₁+1 {O(n)}
    t₉: X₁^2+3⋅X₁+3 {O(n^2)}
    t₁₀: X₁+1 {O(n)}
    t₁₁: 1 {O(1)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₀, X₂: X₂ {O(n)}
    t₀, X₃: X₃ {O(n)}
    t₁, X₀: 1 {O(1)}
    t₁, X₁: X₁ {O(n)}
    t₁, X₂: X₂ {O(n)}
    t₁, X₃: X₃ {O(n)}
    t₂, X₀: X₁+2 {O(n)}
    t₂, X₁: X₁ {O(n)}
    t₂, X₃: X₁+X₃+5 {O(n)}
    t₃, X₀: X₁+3 {O(n)}
    t₃, X₁: 2⋅X₁ {O(n)}
    t₃, X₃: X₁+X₃+5 {O(n)}
    t₄, X₀: X₁+2 {O(n)}
    t₄, X₁: X₁ {O(n)}
    t₄, X₃: X₁+2 {O(n)}
    t₅, X₀: X₁+2 {O(n)}
    t₅, X₁: X₁ {O(n)}
    t₅, X₃: 1 {O(1)}
    t₆, X₀: X₁+2 {O(n)}
    t₆, X₁: X₁ {O(n)}
    t₆, X₃: X₁+4 {O(n)}
    t₇, X₀: X₁+2 {O(n)}
    t₇, X₁: X₁ {O(n)}
    t₇, X₃: X₁+4 {O(n)}
    t₈, X₀: X₁+2 {O(n)}
    t₈, X₁: X₁ {O(n)}
    t₈, X₃: X₁+4 {O(n)}
    t₉, X₀: X₁+2 {O(n)}
    t₉, X₁: X₁ {O(n)}
    t₉, X₃: X₁+4 {O(n)}
    t₁₀, X₀: X₁+2 {O(n)}
    t₁₀, X₁: X₁ {O(n)}
    t₁₀, X₃: X₁+5 {O(n)}
    t₁₁, X₀: X₁+3 {O(n)}
    t₁₁, X₁: 2⋅X₁ {O(n)}
    t₁₁, X₃: X₁+X₃+5 {O(n)}

