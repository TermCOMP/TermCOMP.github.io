WORST_CASE(Omega(n^2),O(n^2))

# LoAT Proof:
WORST_CASE(Omega(n^2),?)

WORST_CASE(Omega(n^1),?)
WORST_CASE(Omega(n^2),?)
Initial ITS

Start location: start

Location map:
LoAT_sink -> 0
start -> 1
eval1 -> 2
eval2 -> 3

Rules:
   0: (-2+i1 == 0 /\ i4 >= 0) /\ i1'=3, i3'=1+i3, i4'=1+i4, i5'=1
   1: (-3+i1 == 0 /\ i4 >= 0 /\ i4-i5 >= 0 /\ -1+i5 >= 0) /\ i1'=3, i3'=1+i3, i5'=1+i5
   2: (-3+i1 == 0 /\ i4 >= 0 /\ -1+i5 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=-2+i4
   3: -1+i1 == 0 /\ i1'=2, i3'=1+i3

Dependency graph:
0 -> 1, 0 -> 2
1 -> 1, 1 -> 2
2 -> 0
3 -> 0

Chained Linear Paths

	Applied Chaining

	First rule:
	(-3+i1 == 0 /\ i4 >= 0 /\ -1+i5 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=-2+i4
	Second rule:
	(-2+i1 == 0 /\ i4 >= 0) /\ i1'=3, i3'=1+i3, i4'=1+i4, i5'=1
	New rule:
	(0 == 0 /\ -3+i1 == 0 /\ i4 >= 0 /\ -1+i5 >= 0 /\ -2+i4 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=-1+i4, i5'=1
	
	Applied Deletion

	Removed the following rules: 2
	
	Applied Chaining

	First rule:
	-1+i1 == 0 /\ i1'=2, i3'=1+i3
	Second rule:
	(-2+i1 == 0 /\ i4 >= 0) /\ i1'=3, i3'=1+i3, i4'=1+i4, i5'=1
	New rule:
	(0 == 0 /\ i4 >= 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=1+i4, i5'=1
	
	Applied Deletion

	Removed the following rules: 0, 3

Start location: start

Location map:
LoAT_sink -> 0
start -> 1
eval1 -> 2
eval2 -> 3

Rules:
   1: (-3+i1 == 0 /\ i4 >= 0 /\ i4-i5 >= 0 /\ -1+i5 >= 0) /\ i1'=3, i3'=1+i3, i5'=1+i5
   4: (0 == 0 /\ -3+i1 == 0 /\ i4 >= 0 /\ -1+i5 >= 0 /\ -2+i4 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=-1+i4, i5'=1
   5: (0 == 0 /\ i4 >= 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=1+i4, i5'=1

Dependency graph:
1 -> 1, 1 -> 4
4 -> 1, 4 -> 4
5 -> 1, 5 -> 4

Preprocessed Transitions

	Simplified Guard

	Original rule:
	(0 == 0 /\ -3+i1 == 0 /\ i4 >= 0 /\ -1+i5 >= 0 /\ -2+i4 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=-1+i4, i5'=1
	New rule:
	(-3+i1 == 0 /\ i4 >= 0 /\ -1+i5 >= 0 /\ -2+i4 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=-1+i4, i5'=1
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ i4 >= 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=1+i4, i5'=1
	New rule:
	(i4 >= 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=1+i4, i5'=1

Start location: start

Location map:
LoAT_sink -> 0
start -> 1
eval1 -> 2
eval2 -> 3

Rules:
   1: (-3+i1 == 0 /\ i4 >= 0 /\ i4-i5 >= 0 /\ -1+i5 >= 0) /\ i1'=3, i3'=1+i3, i5'=1+i5
   6: (-3+i1 == 0 /\ i4 >= 0 /\ -1+i5 >= 0 /\ -2+i4 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=-1+i4, i5'=1
   7: (i4 >= 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=1+i4, i5'=1

Dependency graph:
1 -> 1, 1 -> 6
6 -> 1, 6 -> 6
7 -> 1, 7 -> 6

Refined Dependency Graph

	Removed the following edges: 6 -> 6, 7 -> 6

Start location: start

Location map:
LoAT_sink -> 0
start -> 1
eval1 -> 2
eval2 -> 3

Rules:
   1: (-3+i1 == 0 /\ i4 >= 0 /\ i4-i5 >= 0 /\ -1+i5 >= 0) /\ i1'=3, i3'=1+i3, i5'=1+i5
   6: (-3+i1 == 0 /\ i4 >= 0 /\ -1+i5 >= 0 /\ -2+i4 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=-1+i4, i5'=1
   7: (i4 >= 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=1+i4, i5'=1

Dependency graph:
1 -> 1, 1 -> 6
6 -> 1
7 -> 1

Step with 7

	Trace

	7[(i4 >= 0 /\ -1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 1

	Trace

	7[(i4 >= 0 /\ -1+i1 == 0)]
	1[(-3+i1 == 0 /\ i4 >= 0 /\ i4-i5 >= 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Poly(n^1)

Accelerate

	Loop Acceleration

	Original rule:
	(-3+i1 == 0 /\ i4 >= 0 /\ i4-i5 >= 0 /\ -1+i5 >= 0) /\ i1'=3, i3'=1+i3, i5'=1+i5
	New rule:
	(-3+i1 >= 0 /\ 1+i4-it9-i5 >= 0 /\ i4 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -1+it9 >= 0) /\ i1'=i1, i3'=i3+it9, i5'=it9+i5

		-3+i1 >= 0 [0]: unchanged
		
		i4 >= 0 [0]: unchanged
		
		i4-i5 >= 0 [0]: montonic decrease yields 1+i4-it9-i5 >= 0
		
		3-i1 >= 0 [0]: unchanged
		
		-1+i5 >= 0 [0]: monotonic increase yields -1+i5 >= 0
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, i4 >= 0 -> i4 >= 0, i4-i5 >= 0 -> 1+i4-it9-i5 >= 0, 3-i1 >= 0 -> 3-i1 >= 0, -1+i5 >= 0 -> -1+i5 >= 0}

	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ 1+i4-it9-i5 >= 0 /\ i4 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -1+it9 >= 0) /\ i1'=i1, i3'=i3+it9, i5'=it9+i5
	New rule:
	(-3+i1 >= 0 /\ 1+i4-it9-i5 >= 0 /\ i4 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -1+it9 >= 0) /\ i3'=i3+it9, i5'=it9+i5
	
	Instantiation

	Original rule:
	(-3+i1 >= 0 /\ 1+i4-it9-i5 >= 0 /\ i4 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -1+it9 >= 0) /\ i3'=i3+it9, i5'=it9+i5
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ i4 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0) /\ i3'=1+i3+i4-i5, i5'=1+i4

Start location: start

Location map:
LoAT_sink -> 0
start -> 1
eval1 -> 2
eval2 -> 3

Rules:
   1: (-3+i1 == 0 /\ i4 >= 0 /\ i4-i5 >= 0 /\ -1+i5 >= 0) /\ i1'=3, i3'=1+i3, i5'=1+i5
   6: (-3+i1 == 0 /\ i4 >= 0 /\ -1+i5 >= 0 /\ -2+i4 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=-1+i4, i5'=1
   7: (i4 >= 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=1+i4, i5'=1
   8: (0 >= 0 /\ -3+i1 >= 0 /\ i4 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0) /\ i3'=1+i3+i4-i5, i5'=1+i4

Dependency graph:
1 -> 1, 1 -> 6, 1 -> 8
6 -> 1, 6 -> 8
7 -> 1, 7 -> 8
8 -> 1, 8 -> 6

	Trace

	7[(i4 >= 0 /\ -1+i1 == 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ i4 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{}
	{1[T], 8[T]}
	
Step with 6

	Trace

	7[(i4 >= 0 /\ -1+i1 == 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ i4 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0)]
	6[(-3+i1 == 0 /\ i4 >= 0 /\ -1+i5 >= 0 /\ -2+i4 >= 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{}
	{1[T], 8[T]}
	{}
	
Poly(n^2)

Accelerate

		Extracted Implied Equalities

		Original rule:
		(0 >= 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ i4 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -2+i4 >= 0) /\ i1'=3, i3'=3+i3+i4-i5, i4'=-1+i4, i5'=1
		New rule:
		(0 >= 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ i4 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i5 >= 0 /\ -2+i4 >= 0) /\ i1'=3, i3'=3+i3+i4-i5, i4'=-1+i4, i5'=1
		
		Simplified Guard

		Original rule:
		(0 >= 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ i4 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i5 >= 0 /\ -2+i4 >= 0) /\ i1'=3, i3'=3+i3+i4-i5, i4'=-1+i4, i5'=1
		New rule:
		(-3+i1 >= 0 /\ -3+i1 == 0 /\ i4 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i5 >= 0 /\ -2+i4 >= 0) /\ i1'=3, i3'=3+i3+i4-i5, i4'=-1+i4, i5'=1

	Loop Acceleration

	Original rule:
	(-3+i1 >= 0 /\ -3+i1 == 0 /\ i4 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i5 >= 0 /\ -2+i4 >= 0) /\ i1'=3, i3'=3+i3+i4-i5, i4'=-1+i4, i5'=1
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ -1+it24 >= 0 /\ -1+i4-it24 >= 0 /\ -1+i4 >= 0 /\ i4 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i5 >= 0 /\ -2+i4 >= 0 /\ -2+i4-it24 >= 0 /\ -3+i4 >= 0) /\ i1'=i1, i3'=3+i3+i4-1/2*it24^2+5/2*it24+(-1+i4)*it24-i5, i4'=-1+i4-it24, i5'=1

		-3+i1 >= 0 [0]: unchanged
		
		i4 >= 0 [0]: monotonic increase yields i4 >= 0, dependencies: i4-i5 >= 0 -1+i5 >= 0
		
		i4 >= 0 [1]: montonic decrease yields (i4 >= 0 /\ 1+i4-it24 >= 0)
		
		i4-i5 >= 0 [0]: eventual decrease yields (i4-i5 >= 0 /\ i4-it24 >= 0)
		
		3-i1 >= 0 [0]: unchanged
		
		-1+i5 >= 0 [0]: trivial
		
		-2+i4 >= 0 [0]: montonic decrease yields (-1+i4-it24 >= 0 /\ -2+i4 >= 0)
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, i4 >= 0 -> i4 >= 0, i4-i5 >= 0 -> (i4-i5 >= 0 /\ i4-it24 >= 0), 3-i1 >= 0 -> 3-i1 >= 0, -1+i5 >= 0 -> -1+i5 >= 0, -2+i4 >= 0 -> (-1+i4-it24 >= 0 /\ -2+i4 >= 0)}

	Extracted Implied Equalities

	Original rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ -1+it24 >= 0 /\ -1+i4-it24 >= 0 /\ -1+i4 >= 0 /\ i4 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i5 >= 0 /\ -2+i4 >= 0 /\ -2+i4-it24 >= 0 /\ -3+i4 >= 0) /\ i1'=i1, i3'=3+i3+i4-1/2*it24^2+5/2*it24+(-1+i4)*it24-i5, i4'=-1+i4-it24, i5'=1
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ -1+it24 >= 0 /\ -1+i4-it24 >= 0 /\ -1+i4 >= 0 /\ i4 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i5 >= 0 /\ -2+i4 >= 0 /\ -2+i4-it24 >= 0 /\ -3+i4 >= 0) /\ i1'=i1, i3'=3+i3+i4-1/2*it24^2+5/2*it24+(-1+i4)*it24-i5, i4'=-1+i4-it24, i5'=1
	
	Simplified Guard

	Original rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ -1+it24 >= 0 /\ -1+i4-it24 >= 0 /\ -1+i4 >= 0 /\ i4 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i5 >= 0 /\ -2+i4 >= 0 /\ -2+i4-it24 >= 0 /\ -3+i4 >= 0) /\ i1'=i1, i3'=3+i3+i4-1/2*it24^2+5/2*it24+(-1+i4)*it24-i5, i4'=-1+i4-it24, i5'=1
	New rule:
	(-3+i1 >= 0 /\ -3+i1 == 0 /\ -1+it24 >= 0 /\ -1+i4-it24 >= 0 /\ -1+i4 >= 0 /\ i4 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i5 >= 0 /\ -2+i4 >= 0 /\ -2+i4-it24 >= 0 /\ -3+i4 >= 0) /\ i1'=i1, i3'=3+i3+i4-1/2*it24^2+5/2*it24+(-1+i4)*it24-i5, i4'=-1+i4-it24, i5'=1
	
	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ -3+i1 == 0 /\ -1+it24 >= 0 /\ -1+i4-it24 >= 0 /\ -1+i4 >= 0 /\ i4 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i5 >= 0 /\ -2+i4 >= 0 /\ -2+i4-it24 >= 0 /\ -3+i4 >= 0) /\ i1'=i1, i3'=3+i3+i4-1/2*it24^2+5/2*it24+(-1+i4)*it24-i5, i4'=-1+i4-it24, i5'=1
	New rule:
	(-3+i1 >= 0 /\ -3+i1 == 0 /\ -1+it24 >= 0 /\ -1+i4-it24 >= 0 /\ -1+i4 >= 0 /\ i4 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i5 >= 0 /\ -2+i4 >= 0 /\ -2+i4-it24 >= 0 /\ -3+i4 >= 0) /\ i3'=3+i3+i4-1/2*it24^2+5/2*it24+(-1+i4)*it24-i5, i4'=-1+i4-it24, i5'=1
	
	Instantiation

	Original rule:
	(-3+i1 >= 0 /\ -3+i1 == 0 /\ -1+it24 >= 0 /\ -1+i4-it24 >= 0 /\ -1+i4 >= 0 /\ i4 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i5 >= 0 /\ -2+i4 >= 0 /\ -2+i4-it24 >= 0 /\ -3+i4 >= 0) /\ i3'=3+i3+i4-1/2*it24^2+5/2*it24+(-1+i4)*it24-i5, i4'=-1+i4-it24, i5'=1
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ 1 >= 0 /\ -1+i4 >= 0 /\ i4 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i5 >= 0 /\ -2+i4 >= 0 /\ -3+i4 >= 0) /\ i3'=-2-1/2*(-2+i4)^2+i3+7/2*i4-i5+(-1+i4)*(-2+i4), i4'=1, i5'=1

Start location: start

Location map:
LoAT_sink -> 0
start -> 1
eval1 -> 2
eval2 -> 3

Rules:
   1: (-3+i1 == 0 /\ i4 >= 0 /\ i4-i5 >= 0 /\ -1+i5 >= 0) /\ i1'=3, i3'=1+i3, i5'=1+i5
   6: (-3+i1 == 0 /\ i4 >= 0 /\ -1+i5 >= 0 /\ -2+i4 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=-1+i4, i5'=1
   7: (i4 >= 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=1+i4, i5'=1
   8: (0 >= 0 /\ -3+i1 >= 0 /\ i4 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0) /\ i3'=1+i3+i4-i5, i5'=1+i4
   9: (0 >= 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ 1 >= 0 /\ -1+i4 >= 0 /\ i4 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i5 >= 0 /\ -2+i4 >= 0 /\ -3+i4 >= 0) /\ i3'=-2-1/2*(-2+i4)^2+i3+7/2*i4-i5+(-1+i4)*(-2+i4), i4'=1, i5'=1

Dependency graph:
1 -> 1, 1 -> 6, 1 -> 8, 1 -> 9
6 -> 1, 6 -> 8, 6 -> 9
7 -> 1, 7 -> 8, 7 -> 9
8 -> 1, 8 -> 6
9 -> 1, 9 -> 8

	Trace

	7[(i4 >= 0 /\ -1+i1 == 0)]
	9[(0 >= 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ 1 >= 0 /\ -1+i4 >= 0 /\ i4 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i5 >= 0 /\ -2+i4 >= 0 /\ -3+i4 >= 0)]
	
	Blocked

	{}
	{}
	{9[T]}
	
Step with 8

	Trace

	7[(i4 >= 0 /\ -1+i1 == 0)]
	9[(0 >= 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ 1 >= 0 /\ -1+i4 >= 0 /\ i4 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i5 >= 0 /\ -2+i4 >= 0 /\ -3+i4 >= 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ i4 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{}
	{9[T]}
	{8[T]}
	
Backtrack

	Trace

	7[(i4 >= 0 /\ -1+i1 == 0)]
	9[(0 >= 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ 1 >= 0 /\ -1+i4 >= 0 /\ i4 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i5 >= 0 /\ -2+i4 >= 0 /\ -3+i4 >= 0)]
	
	Blocked

	{}
	{}
	{8[T], 9[T]}
	
Step with 1

	Trace

	7[(i4 >= 0 /\ -1+i1 == 0)]
	9[(0 >= 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ 1 >= 0 /\ -1+i4 >= 0 /\ i4 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i5 >= 0 /\ -2+i4 >= 0 /\ -3+i4 >= 0)]
	1[(-3+i1 == 0 /\ i4 >= 0 /\ i4-i5 >= 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{}
	{8[T], 9[T]}
	{}
	
Covered

	Trace

	7[(i4 >= 0 /\ -1+i1 == 0)]
	9[(0 >= 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ 1 >= 0 /\ -1+i4 >= 0 /\ i4 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i5 >= 0 /\ -2+i4 >= 0 /\ -3+i4 >= 0)]
	
	Blocked

	{}
	{}
	{1[T], 8[T], 9[T]}
	
Backtrack

	Trace

	7[(i4 >= 0 /\ -1+i1 == 0)]
	
	Blocked

	{}
	{9[T]}
	
Step with 8

	Trace

	7[(i4 >= 0 /\ -1+i1 == 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ i4 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{9[T]}
	{8[T]}
	
Step with 6

	Trace

	7[(i4 >= 0 /\ -1+i1 == 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ i4 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0)]
	6[(-3+i1 == 0 /\ i4 >= 0 /\ -1+i5 >= 0 /\ -2+i4 >= 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{9[T]}
	{8[T]}
	{}
	
Covered

	Trace

	7[(i4 >= 0 /\ -1+i1 == 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ i4 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{9[T]}
	{6[T], 8[T]}
	
Backtrack

	Trace

	7[(i4 >= 0 /\ -1+i1 == 0)]
	
	Blocked

	{}
	{8[T], 9[T]}
	
Step with 1

	Trace

	7[(i4 >= 0 /\ -1+i1 == 0)]
	1[(-3+i1 == 0 /\ i4 >= 0 /\ i4-i5 >= 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{8[T], 9[T]}
	{}
	
Covered

	Trace

	7[(i4 >= 0 /\ -1+i1 == 0)]
	
	Blocked

	{}
	{1[T], 8[T], 9[T]}
	
Backtrack

	Trace

	Blocked

	{7[T]}
	
Accept

Poly(n^2)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^2))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁
  Temp_Vars:  
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₃: l0(X₀, X₁) → l2(X₀, X₁)
  t₁: l1(X₀, X₁) → l1(X₀, 1+X₁) :|: 1 ≤ X₁ ∧ 0 ≤ X₀ ∧ X₁ ≤ X₀
  t₂: l1(X₀, X₁) → l2(X₀-2, X₁) :|: 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 0 ≤ X₀
  t₀: l2(X₀, X₁) → l1(1+X₀, 1) :|: 0 ≤ X₀


Preprocessing
  Found invariant X₁ ≤ 1+X₀ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l1


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁
  Temp_Vars:  
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₃: l0(X₀, X₁) → l2(X₀, X₁)
  t₁: l1(X₀, X₁) → l1(X₀, 1+X₁) :|: 1 ≤ X₁ ∧ 0 ≤ X₀ ∧ X₁ ≤ X₀ ∧ X₁ ≤ 1+X₀ ∧ 1 ≤ X₀ ∧ 2 ≤ X₀+X₁
  t₂: l1(X₀, X₁) → l2(X₀-2, X₁) :|: 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 0 ≤ X₀ ∧ X₁ ≤ 1+X₀ ∧ 1 ≤ X₀ ∧ 2 ≤ X₀+X₁
  t₀: l2(X₀, X₁) → l1(1+X₀, 1) :|: 0 ≤ X₀


MPRF for transition t₀: l2(X₀, X₁) → l1(1+X₀, 1) :|: 0 ≤ X₀ of depth 1:
  new bound:
    X₀+1 {O(n)}

  MPRF:
    • l1: [X₀-1]
    • l2: [1+X₀]




MPRF for transition t₂: l1(X₀, X₁) → l2(X₀-2, X₁) :|: 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 0 ≤ X₀ ∧ X₁ ≤ 1+X₀ ∧ 1 ≤ X₀ ∧ 2 ≤ X₀+X₁ of depth 1:
  new bound:
    X₀+2 {O(n)}

  MPRF:
    • l1: [1+X₀]
    • l2: [2+X₀]




MPRF for transition t₁: l1(X₀, X₁) → l1(X₀, 1+X₁) :|: 1 ≤ X₁ ∧ 0 ≤ X₀ ∧ X₁ ≤ X₀ ∧ X₁ ≤ 1+X₀ ∧ 1 ≤ X₀ ∧ 2 ≤ X₀+X₁ of depth 1:
  new bound:
    2⋅X₀^2+7⋅X₀+5 {O(n^2)}

  MPRF:
    • l1: [1+X₀-X₁]
    • l2: [1+X₀]




  Cut unsatisfiable transition [t₂: l1→l2; t₅₉: l1→l2]


  Found invariant X₁ ≤ 1 ∧ X₁ ≤ X₀ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l1


  Found invariant X₁ ≤ 1+X₀ ∧ 2 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l1_v1


All Bounds
Timebounds
  Overall timebound:2⋅X₀^2+9⋅X₀+9 {O(n^2)}
    t₀: X₀+1 {O(n)}
    t₁: 2⋅X₀^2+7⋅X₀+5 {O(n^2)}
    t₂: X₀+2 {O(n)}
    t₃: 1 {O(1)}


Costbounds
  Overall costbound: 2⋅X₀^2+9⋅X₀+9 {O(n^2)}
    t₀: X₀+1 {O(n)}
    t₁: 2⋅X₀^2+7⋅X₀+5 {O(n^2)}
    t₂: X₀+2 {O(n)}
    t₃: 1 {O(1)}


Sizebounds
    t₀, X₀: 2⋅X₀+1 {O(n)}
    t₀, X₁: 1 {O(1)}
    t₁, X₀: 2⋅X₀+1 {O(n)}
    t₁, X₁: 2⋅X₀^2+7⋅X₀+6 {O(n^2)}
    t₂, X₀: 2⋅X₀+1 {O(n)}
    t₂, X₁: 2⋅X₀^2+7⋅X₀+6 {O(n^2)}
    t₃, X₀: X₀ {O(n)}
    t₃, X₁: X₁ {O(n)}

