NO

# LoAT Proof:
NO

NO

Initial ITS

Start location: f300

Location map:
LoAT_sink -> 0
f300 -> 1
f2 -> 2
f1 -> 3

Rules:
   0: (-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i5'=i6, i7'=it6, i8'=it5, i9'=it4
   1: (-i10 >= 0 /\ -1+i1 == 0) /\ i1'=3, i3'=1+i3, i5'=it17, i6'=it15, i7'=it14, i8'=it13, i11'=it17, i12'=it16, i13'=it12, i14'=it11
   2: (-1+i4 >= 0 /\ -1+i10 >= 0 /\ -1+i1 == 0) /\ i1'=2, i3'=1+i3, i5'=it22, i6'=it22, i7'=it21, i8'=it20, i9'=it18, i11'=it24, i12'=it23, i13'=it19
   3: (-1+i10 >= 0 /\ -1+i1 == 0 /\ -i4 >= 0) /\ i1'=3, i3'=1+i3, i5'=it31, i6'=it31, i7'=it30, i8'=it29, i9'=it27, i11'=it33, i12'=it32, i13'=it28, i14'=it26

Dependency graph:
0 -> 0
2 -> 0

Step with 3

	Trace

	3[(-1+i10 >= 0 /\ -1+i1 == 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{}
	
Backtrack

	Trace

	Blocked

	{3[T]}
	
Step with 1

	Trace

	1[(-i10 >= 0 /\ -1+i1 == 0)]
	
	Blocked

	{3[T]}
	{}
	
Backtrack

	Trace

	Blocked

	{1[T], 3[T]}
	
Step with 2

	Trace

	2[(-1+i4 >= 0 /\ -1+i10 >= 0 /\ -1+i1 == 0)]
	
	Blocked

	{1[T], 3[T]}
	{}
	
Step with 0

	Trace

	2[(-1+i4 >= 0 /\ -1+i10 >= 0 /\ -1+i1 == 0)]
	0[(-1+i4 >= 0 /\ -2+i1 == 0)]
	
	Blocked

	{1[T], 3[T]}
	{}
	{}
	
Nonterm

	Certificate of Non-Termination

	Original rule:
	(-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i5'=i6, i7'=it6, i8'=it5, i9'=it4
	New rule:
	(-1+i4 >= 0 /\ -2+i1 >= 0 /\ -1+it114 >= 0 /\ 2-i1 >= 0) /\ i1'=0

		-1+i4 >= 0 [0]: unchanged
		
		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-1+i4 >= 0 -> -1+i4 >= 0, -2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Loop Acceleration

	Original rule:
	(-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i5'=i6, i7'=it6, i8'=it5, i9'=it4
	New rule:
	(-1+i4 >= 0 /\ -2+i1 >= 0 /\ -1+it114 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it114, i5'=i6, i7'=it6, i8'=it5, i9'=it4

		-1+i4 >= 0 [0]: unchanged
		
		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-1+i4 >= 0 -> -1+i4 >= 0, -2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-1+i4 >= 0 /\ -2+i1 >= 0 /\ -1+it114 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it114, i5'=i6, i7'=it6, i8'=it5, i9'=it4
	New rule:
	(-1+i4 >= 0 /\ -2+i1 >= 0 /\ -1+it114 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+it114, i5'=i6, i7'=it6, i8'=it5, i9'=it4

Start location: f300

Location map:
LoAT_sink -> 0
f300 -> 1
f2 -> 2
f1 -> 3

Rules:
   0: (-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i5'=i6, i7'=it6, i8'=it5, i9'=it4
   1: (-i10 >= 0 /\ -1+i1 == 0) /\ i1'=3, i3'=1+i3, i5'=it17, i6'=it15, i7'=it14, i8'=it13, i11'=it17, i12'=it16, i13'=it12, i14'=it11
   2: (-1+i4 >= 0 /\ -1+i10 >= 0 /\ -1+i1 == 0) /\ i1'=2, i3'=1+i3, i5'=it22, i6'=it22, i7'=it21, i8'=it20, i9'=it18, i11'=it24, i12'=it23, i13'=it19
   3: (-1+i10 >= 0 /\ -1+i1 == 0 /\ -i4 >= 0) /\ i1'=3, i3'=1+i3, i5'=it31, i6'=it31, i7'=it30, i8'=it29, i9'=it27, i11'=it33, i12'=it32, i13'=it28, i14'=it26
   4: (-1+i4 >= 0 /\ -2+i1 >= 0 /\ -1+it114 >= 0 /\ 2-i1 >= 0) /\ i1'=0
   5: (-1+i4 >= 0 /\ -2+i1 >= 0 /\ -1+it114 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+it114, i5'=i6, i7'=it6, i8'=it5, i9'=it4

Dependency graph:
0 -> 0, 0 -> 4, 0 -> 5
2 -> 0, 2 -> 4, 2 -> 5
5 -> 0, 5 -> 4

Step with 4

	Trace

	2[(-1+i4 >= 0 /\ -1+i10 >= 0 /\ -1+i1 == 0)]
	4[(-1+i4 >= 0 /\ -2+i1 >= 0 /\ -1+it114 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{1[T], 3[T]}
	{}
	{4[T]}
	
Refute

	Counterexample

	(i1=1, i3=0, i4=1, i9=0, i10=1, i14=0)
	-2-> (i1=2, i3=1, i4=1, i5=0, i6=0, i7=0, i8=0, i9=0, i10=1, i11=0, i12=0, i13=0, i14=0 )
	-4-> ( )
	
NO

Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
MAYBE


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄, X₅, X₆, X₇, X₈, X₉, X₁₀
  Temp_Vars:  L, M, N, O, P, Q, R, S
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₁: l0(X₀, X₁, X₂, X₃, X₄, X₅, X₆, X₇, X₈, X₉, X₁₀) → l1(X₀, L, N, P, Q, X₅, X₆, L, M, O, R) :|: X₆ ≤ 0
  t₃: l0(X₀, X₁, X₂, X₃, X₄, X₅, X₆, X₇, X₈, X₉, X₁₀) → l1(X₀, N, N, P, Q, R, X₆, L, M, O, S) :|: 1 ≤ X₆ ∧ X₀ ≤ 0
  t₂: l0(X₀, X₁, X₂, X₃, X₄, X₅, X₆, X₇, X₈, X₉, X₁₀) → l2(X₀, N, N, P, Q, R, X₆, L, M, O, X₁₀) :|: 1 ≤ X₀ ∧ 1 ≤ X₆
  t₀: l2(X₀, X₁, X₂, X₃, X₄, X₅, X₆, X₇, X₈, X₉, X₁₀) → l2(X₀, X₂, X₂, L, M, N, X₆, X₇, X₈, X₉, X₁₀) :|: 1 ≤ X₀


Preprocessing
  Eliminate variables [L; M; N; O; P; Q; R; S; X₁; X₂; X₃; X₄; X₅; X₇; X₈; X₉; X₁₀] that do not contribute to the problem


  Found invariant 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l2


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁
  Temp_Vars:  
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₄: l0(X₀, X₁) → l1(X₀, X₁) :|: X₁ ≤ 0
  t₅: l0(X₀, X₁) → l1(X₀, X₁) :|: 1 ≤ X₁ ∧ X₀ ≤ 0
  t₆: l0(X₀, X₁) → l2(X₀, X₁) :|: 1 ≤ X₀ ∧ 1 ≤ X₁
  t₇: l2(X₀, X₁) → l2(X₀, X₁) :|: 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀+X₁


  Found invariant 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l2_v1


  Found invariant 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l2


All Bounds
Timebounds
  Overall timebound:inf {Infinity}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: inf {Infinity}


Costbounds
  Overall costbound: inf {Infinity}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: inf {Infinity}


Sizebounds
    t₄, X₀: X₀ {O(n)}
    t₄, X₁: X₁ {O(n)}
    t₅, X₀: X₀ {O(n)}
    t₅, X₁: X₁ {O(n)}
    t₆, X₀: X₀ {O(n)}
    t₆, X₁: X₁ {O(n)}
    t₇, X₀: X₀ {O(n)}
    t₇, X₁: X₁ {O(n)}

