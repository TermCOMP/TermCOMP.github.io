WORST_CASE(Omega(n^1),O(n^1))

# LoAT Proof:
WORST_CASE(Omega(n^1),?)

WORST_CASE(Omega(n^1),?)
Initial ITS

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_bb1_in -> 7
eval_start_bb2_in -> 8
eval_start_bb4_in -> 9
eval_start_4 -> 10
eval_start_5 -> 11
eval_start_bb3_in -> 12
eval_start_bb5_in -> 13
eval_start_bb6_in -> 14
eval_start_stop -> 15

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: -2+i1 == 0 /\ i1'=3, i3'=1+i3
   2: -3+i1 == 0 /\ i1'=4, i3'=1+i3
   3: -4+i1 == 0 /\ i1'=5, i3'=1+i3
   4: -5+i1 == 0 /\ i1'=6, i3'=1+i3
   5: -6+i1 == 0 /\ i1'=7, i3'=1+i3, i6'=0
   6: (-7+i1 == 0 /\ i6-i5 < 0) /\ i1'=8, i3'=1+i3
   7: (-7+i1 == 0 /\ i6-i5 >= 0) /\ i1'=9, i3'=1+i3, i7'=i6
   8: -8+i1 == 0 /\ i1'=10, i3'=1+i3
   9: -10+i1 == 0 /\ i1'=11, i3'=1+i3, i4'=it2
  10: (-11+i1 == 0 /\ i4 > 0) /\ i1'=9, i3'=1+i3, i7'=i6
  11: (-11+i1 == 0 /\ i4 <= 0) /\ i1'=12, i3'=1+i3
  12: -12+i1 == 0 /\ i1'=7, i3'=1+i3, i6'=1+i6
  13: (-9+i1 == 0 /\ i7-i5 < 0) /\ i1'=13, i3'=1+i3
  14: (-9+i1 == 0 /\ i7-i5 >= 0) /\ i1'=14, i3'=1+i3
  15: -13+i1 == 0 /\ i1'=9, i3'=1+i3, i7'=1+i7
  16: -14+i1 == 0 /\ i1'=15, i3'=1+i3

Dependency graph:
0 -> 1
1 -> 2
2 -> 3
3 -> 4
4 -> 5
5 -> 6, 5 -> 7
6 -> 8
7 -> 13, 7 -> 14
8 -> 9
9 -> 10, 9 -> 11
10 -> 13, 10 -> 14
11 -> 12
12 -> 6, 12 -> 7
13 -> 15
14 -> 16
15 -> 13, 15 -> 14

Chained Linear Paths

	Applied Chaining

	First rule:
	-1+i1 == 0 /\ i1'=2, i3'=1+i3
	Second rule:
	-2+i1 == 0 /\ i1'=3, i3'=1+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 0, 1
	
	Applied Chaining

	First rule:
	-3+i1 == 0 /\ i1'=4, i3'=1+i3
	Second rule:
	-4+i1 == 0 /\ i1'=5, i3'=1+i3
	New rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 2, 3
	
	Applied Chaining

	First rule:
	-5+i1 == 0 /\ i1'=6, i3'=1+i3
	Second rule:
	-6+i1 == 0 /\ i1'=7, i3'=1+i3, i6'=0
	New rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=7, i3'=2+i3, i6'=0
	
	Applied Deletion

	Removed the following rules: 4, 5
	
	Applied Chaining

	First rule:
	(-7+i1 == 0 /\ i6-i5 < 0) /\ i1'=8, i3'=1+i3
	Second rule:
	-8+i1 == 0 /\ i1'=10, i3'=1+i3
	New rule:
	(0 == 0 /\ -7+i1 == 0 /\ i6-i5 < 0) /\ i1'=10, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 6, 8
	
	Applied Chaining

	First rule:
	(-11+i1 == 0 /\ i4 <= 0) /\ i1'=12, i3'=1+i3
	Second rule:
	-12+i1 == 0 /\ i1'=7, i3'=1+i3, i6'=1+i6
	New rule:
	(0 == 0 /\ -11+i1 == 0 /\ i4 <= 0) /\ i1'=7, i3'=2+i3, i6'=1+i6
	
	Applied Deletion

	Removed the following rules: 11, 12
	
	Applied Chaining

	First rule:
	(-9+i1 == 0 /\ i7-i5 < 0) /\ i1'=13, i3'=1+i3
	Second rule:
	-13+i1 == 0 /\ i1'=9, i3'=1+i3, i7'=1+i7
	New rule:
	(0 == 0 /\ -9+i1 == 0 /\ i7-i5 < 0) /\ i1'=9, i3'=2+i3, i7'=1+i7
	
	Applied Deletion

	Removed the following rules: 13, 15
	
	Applied Chaining

	First rule:
	(-9+i1 == 0 /\ i7-i5 >= 0) /\ i1'=14, i3'=1+i3
	Second rule:
	-14+i1 == 0 /\ i1'=15, i3'=1+i3
	New rule:
	(0 == 0 /\ -9+i1 == 0 /\ i7-i5 >= 0) /\ i1'=15, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 14, 16
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	Second rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	
	Applied Deletion

	Removed the following rules: 17, 18
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -7+i1 == 0 /\ i6-i5 < 0) /\ i1'=10, i3'=2+i3
	Second rule:
	-10+i1 == 0 /\ i1'=11, i3'=1+i3, i4'=it2
	New rule:
	(0 == 0 /\ -7+i1 == 0 /\ i6-i5 < 0) /\ i1'=11, i3'=3+i3, i4'=it2
	
	Applied Deletion

	Removed the following rules: 9, 20
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	Second rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=7, i3'=2+i3, i6'=0
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=7, i3'=6+i3, i6'=0
	
	Applied Deletion

	Removed the following rules: 19, 24

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_bb1_in -> 7
eval_start_bb2_in -> 8
eval_start_bb4_in -> 9
eval_start_4 -> 10
eval_start_5 -> 11
eval_start_bb3_in -> 12
eval_start_bb5_in -> 13
eval_start_bb6_in -> 14
eval_start_stop -> 15

Rules:
   7: (-7+i1 == 0 /\ i6-i5 >= 0) /\ i1'=9, i3'=1+i3, i7'=i6
  10: (-11+i1 == 0 /\ i4 > 0) /\ i1'=9, i3'=1+i3, i7'=i6
  21: (0 == 0 /\ -11+i1 == 0 /\ i4 <= 0) /\ i1'=7, i3'=2+i3, i6'=1+i6
  22: (0 == 0 /\ -9+i1 == 0 /\ i7-i5 < 0) /\ i1'=9, i3'=2+i3, i7'=1+i7
  23: (0 == 0 /\ -9+i1 == 0 /\ i7-i5 >= 0) /\ i1'=15, i3'=2+i3
  25: (0 == 0 /\ -7+i1 == 0 /\ i6-i5 < 0) /\ i1'=11, i3'=3+i3, i4'=it2
  26: (0 == 0 /\ -1+i1 == 0) /\ i1'=7, i3'=6+i3, i6'=0

Dependency graph:
7 -> 22, 7 -> 23
10 -> 22, 10 -> 23
21 -> 7, 21 -> 25
22 -> 22, 22 -> 23
25 -> 10, 25 -> 21
26 -> 7, 26 -> 25

Preprocessed Transitions

	Simplified Guard

	Original rule:
	(0 == 0 /\ -11+i1 == 0 /\ i4 <= 0) /\ i1'=7, i3'=2+i3, i6'=1+i6
	New rule:
	(-11+i1 == 0 /\ i4 <= 0) /\ i1'=7, i3'=2+i3, i6'=1+i6
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -9+i1 == 0 /\ i7-i5 < 0) /\ i1'=9, i3'=2+i3, i7'=1+i7
	New rule:
	(-9+i1 == 0 /\ i7-i5 < 0) /\ i1'=9, i3'=2+i3, i7'=1+i7
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -9+i1 == 0 /\ i7-i5 >= 0) /\ i1'=15, i3'=2+i3
	New rule:
	(-9+i1 == 0 /\ i7-i5 >= 0) /\ i1'=15, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -7+i1 == 0 /\ i6-i5 < 0) /\ i1'=11, i3'=3+i3, i4'=it2
	New rule:
	(-7+i1 == 0 /\ i6-i5 < 0) /\ i1'=11, i3'=3+i3, i4'=it2
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=7, i3'=6+i3, i6'=0
	New rule:
	-1+i1 == 0 /\ i1'=7, i3'=6+i3, i6'=0

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_bb1_in -> 7
eval_start_bb2_in -> 8
eval_start_bb4_in -> 9
eval_start_4 -> 10
eval_start_5 -> 11
eval_start_bb3_in -> 12
eval_start_bb5_in -> 13
eval_start_bb6_in -> 14
eval_start_stop -> 15

Rules:
   7: (-7+i1 == 0 /\ i6-i5 >= 0) /\ i1'=9, i3'=1+i3, i7'=i6
  10: (-11+i1 == 0 /\ i4 > 0) /\ i1'=9, i3'=1+i3, i7'=i6
  27: (-11+i1 == 0 /\ i4 <= 0) /\ i1'=7, i3'=2+i3, i6'=1+i6
  28: (-9+i1 == 0 /\ i7-i5 < 0) /\ i1'=9, i3'=2+i3, i7'=1+i7
  29: (-9+i1 == 0 /\ i7-i5 >= 0) /\ i1'=15, i3'=2+i3
  30: (-7+i1 == 0 /\ i6-i5 < 0) /\ i1'=11, i3'=3+i3, i4'=it2
  31: -1+i1 == 0 /\ i1'=7, i3'=6+i3, i6'=0

Dependency graph:
7 -> 28, 7 -> 29
10 -> 28, 10 -> 29
27 -> 7, 27 -> 30
28 -> 28, 28 -> 29
30 -> 10, 30 -> 27
31 -> 7, 31 -> 30

Refined Dependency Graph

	Removed the following edges: 7 -> 28

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_bb1_in -> 7
eval_start_bb2_in -> 8
eval_start_bb4_in -> 9
eval_start_4 -> 10
eval_start_5 -> 11
eval_start_bb3_in -> 12
eval_start_bb5_in -> 13
eval_start_bb6_in -> 14
eval_start_stop -> 15

Rules:
   7: (-7+i1 == 0 /\ i6-i5 >= 0) /\ i1'=9, i3'=1+i3, i7'=i6
  10: (-11+i1 == 0 /\ i4 > 0) /\ i1'=9, i3'=1+i3, i7'=i6
  27: (-11+i1 == 0 /\ i4 <= 0) /\ i1'=7, i3'=2+i3, i6'=1+i6
  28: (-9+i1 == 0 /\ i7-i5 < 0) /\ i1'=9, i3'=2+i3, i7'=1+i7
  29: (-9+i1 == 0 /\ i7-i5 >= 0) /\ i1'=15, i3'=2+i3
  30: (-7+i1 == 0 /\ i6-i5 < 0) /\ i1'=11, i3'=3+i3, i4'=it2
  31: -1+i1 == 0 /\ i1'=7, i3'=6+i3, i6'=0

Dependency graph:
7 -> 29
10 -> 28, 10 -> 29
27 -> 7, 27 -> 30
28 -> 28, 28 -> 29
30 -> 10, 30 -> 27
31 -> 7, 31 -> 30

Step with 31

	Trace

	31[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 30

	Trace

	31[(-1+i1 == 0)]
	30[(-7+i1 == 0 /\ i6-i5 < 0)]
	
	Blocked

	{}
	{}
	{}
	
Step with 27

	Trace

	31[(-1+i1 == 0)]
	30[(-7+i1 == 0 /\ i6-i5 < 0)]
	27[(-11+i1 == 0 /\ i4 <= 0)]
	
	Blocked

	{}
	{}
	{}
	{}
	
Poly(n^1)

Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -7+i1 == 0 /\ it2 <= 0 /\ i6-i5 < 0) /\ i1'=7, i3'=5+i3, i4'=it2, i6'=1+i6
		New rule:
		(-7+i1 == 0 /\ it2 <= 0 /\ i6-i5 < 0) /\ i1'=7, i3'=5+i3, i4'=it2, i6'=1+i6

	Loop Acceleration

	Original rule:
	(-7+i1 == 0 /\ it2 <= 0 /\ i6-i5 < 0) /\ i1'=7, i3'=5+i3, i4'=it2, i6'=1+i6
	New rule:
	(-7+i1 >= 0 /\ 7-i1 >= 0 /\ 1-i6-it22+i5 > 0 /\ -1+it22 >= 0 /\ -i6+i5 > 0 /\ -it2 >= 0) /\ i1'=i1, i3'=i3+5*it22, i4'=it2, i6'=i6+it22

		-7+i1 >= 0 [0]: unchanged
		
		7-i1 >= 0 [0]: unchanged
		
		-i6+i5 > 0 [0]: montonic decrease yields (1-i6-it22+i5 > 0 /\ -i6+i5 > 0)
		
		-it2 >= 0 [0]: unchanged
		
		Replacement map: {-7+i1 >= 0 -> -7+i1 >= 0, 7-i1 >= 0 -> 7-i1 >= 0, -i6+i5 > 0 -> (1-i6-it22+i5 > 0 /\ -i6+i5 > 0), -it2 >= 0 -> -it2 >= 0}

	Removed Trivial Updates

	Original rule:
	(-7+i1 >= 0 /\ 7-i1 >= 0 /\ 1-i6-it22+i5 > 0 /\ -1+it22 >= 0 /\ -i6+i5 > 0 /\ -it2 >= 0) /\ i1'=i1, i3'=i3+5*it22, i4'=it2, i6'=i6+it22
	New rule:
	(-7+i1 >= 0 /\ 7-i1 >= 0 /\ 1-i6-it22+i5 > 0 /\ -1+it22 >= 0 /\ -i6+i5 > 0 /\ -it2 >= 0) /\ i3'=i3+5*it22, i4'=it2, i6'=i6+it22
	
	Instantiation

	Original rule:
	(-7+i1 >= 0 /\ 7-i1 >= 0 /\ 1-i6-it22+i5 > 0 /\ -1+it22 >= 0 /\ -i6+i5 > 0 /\ -it2 >= 0) /\ i3'=i3+5*it22, i4'=it2, i6'=i6+it22
	New rule:
	(1 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ -1-i6+i5 >= 0 /\ -i6+i5 > 0 /\ -it2 >= 0) /\ i3'=-5*i6+i3+5*i5, i4'=it2, i6'=i5

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_bb1_in -> 7
eval_start_bb2_in -> 8
eval_start_bb4_in -> 9
eval_start_4 -> 10
eval_start_5 -> 11
eval_start_bb3_in -> 12
eval_start_bb5_in -> 13
eval_start_bb6_in -> 14
eval_start_stop -> 15

Rules:
   7: (-7+i1 == 0 /\ i6-i5 >= 0) /\ i1'=9, i3'=1+i3, i7'=i6
  10: (-11+i1 == 0 /\ i4 > 0) /\ i1'=9, i3'=1+i3, i7'=i6
  27: (-11+i1 == 0 /\ i4 <= 0) /\ i1'=7, i3'=2+i3, i6'=1+i6
  28: (-9+i1 == 0 /\ i7-i5 < 0) /\ i1'=9, i3'=2+i3, i7'=1+i7
  29: (-9+i1 == 0 /\ i7-i5 >= 0) /\ i1'=15, i3'=2+i3
  30: (-7+i1 == 0 /\ i6-i5 < 0) /\ i1'=11, i3'=3+i3, i4'=it2
  31: -1+i1 == 0 /\ i1'=7, i3'=6+i3, i6'=0
  32: (1 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ -1-i6+i5 >= 0 /\ -i6+i5 > 0 /\ -it2 >= 0) /\ i3'=-5*i6+i3+5*i5, i4'=it2, i6'=i5

Dependency graph:
7 -> 29
10 -> 28, 10 -> 29
27 -> 7, 27 -> 30, 27 -> 32
28 -> 28, 28 -> 29
30 -> 10, 30 -> 27
31 -> 7, 31 -> 30, 31 -> 32
32 -> 7, 32 -> 30

	Trace

	31[(-1+i1 == 0)]
	32[(1 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ -1-i6+i5 >= 0 /\ -i6+i5 > 0 /\ -it2 >= 0)]
	
	Blocked

	{}
	{}
	{32[T]}
	
Step with 7

	Trace

	31[(-1+i1 == 0)]
	32[(1 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ -1-i6+i5 >= 0 /\ -i6+i5 > 0 /\ -it2 >= 0)]
	7[(-7+i1 == 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{}
	{32[T]}
	{}
	
Step with 29

	Trace

	31[(-1+i1 == 0)]
	32[(1 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ -1-i6+i5 >= 0 /\ -i6+i5 > 0 /\ -it2 >= 0)]
	7[(-7+i1 == 0 /\ i6-i5 >= 0)]
	29[(-9+i1 == 0 /\ i7-i5 >= 0)]
	
	Blocked

	{}
	{}
	{32[T]}
	{}
	{}
	
Backtrack

	Trace

	31[(-1+i1 == 0)]
	32[(1 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ -1-i6+i5 >= 0 /\ -i6+i5 > 0 /\ -it2 >= 0)]
	7[(-7+i1 == 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{}
	{32[T]}
	{29[T]}
	
Backtrack

	Trace

	31[(-1+i1 == 0)]
	32[(1 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ -1-i6+i5 >= 0 /\ -i6+i5 > 0 /\ -it2 >= 0)]
	
	Blocked

	{}
	{}
	{7[T], 32[T]}
	
Backtrack

	Trace

	31[(-1+i1 == 0)]
	
	Blocked

	{}
	{32[T]}
	
Step with 30

	Trace

	31[(-1+i1 == 0)]
	30[(-7+i1 == 0 /\ i6-i5 < 0)]
	
	Blocked

	{}
	{32[T]}
	{}
	
Step with 27

	Trace

	31[(-1+i1 == 0)]
	30[(-7+i1 == 0 /\ i6-i5 < 0)]
	27[(-11+i1 == 0 /\ i4 <= 0)]
	
	Blocked

	{}
	{32[T]}
	{}
	{}
	
Covered

	Trace

	31[(-1+i1 == 0)]
	30[(-7+i1 == 0 /\ i6-i5 < 0)]
	
	Blocked

	{}
	{32[T]}
	{27[T]}
	
Step with 10

	Trace

	31[(-1+i1 == 0)]
	30[(-7+i1 == 0 /\ i6-i5 < 0)]
	10[(-11+i1 == 0 /\ i4 > 0)]
	
	Blocked

	{}
	{32[T]}
	{27[T]}
	{}
	
Step with 28

	Trace

	31[(-1+i1 == 0)]
	30[(-7+i1 == 0 /\ i6-i5 < 0)]
	10[(-11+i1 == 0 /\ i4 > 0)]
	28[(-9+i1 == 0 /\ i7-i5 < 0)]
	
	Blocked

	{}
	{32[T]}
	{27[T]}
	{}
	{}
	
Accelerate

	Loop Acceleration

	Original rule:
	(-9+i1 == 0 /\ i7-i5 < 0) /\ i1'=9, i3'=2+i3, i7'=1+i7
	New rule:
	(-9+i1 >= 0 /\ -1+it75 >= 0 /\ 9-i1 >= 0 /\ 1-i7+i5-it75 > 0) /\ i1'=i1, i3'=i3+2*it75, i7'=i7+it75

		-9+i1 >= 0 [0]: unchanged
		
		9-i1 >= 0 [0]: unchanged
		
		-i7+i5 > 0 [0]: montonic decrease yields 1-i7+i5-it75 > 0
		
		Replacement map: {-9+i1 >= 0 -> -9+i1 >= 0, 9-i1 >= 0 -> 9-i1 >= 0, -i7+i5 > 0 -> 1-i7+i5-it75 > 0}

	Removed Trivial Updates

	Original rule:
	(-9+i1 >= 0 /\ -1+it75 >= 0 /\ 9-i1 >= 0 /\ 1-i7+i5-it75 > 0) /\ i1'=i1, i3'=i3+2*it75, i7'=i7+it75
	New rule:
	(-9+i1 >= 0 /\ -1+it75 >= 0 /\ 9-i1 >= 0 /\ 1-i7+i5-it75 > 0) /\ i3'=i3+2*it75, i7'=i7+it75
	
	Instantiation

	Original rule:
	(-9+i1 >= 0 /\ -1+it75 >= 0 /\ 9-i1 >= 0 /\ 1-i7+i5-it75 > 0) /\ i3'=i3+2*it75, i7'=i7+it75
	New rule:
	(1 > 0 /\ -9+i1 >= 0 /\ -1-i7+i5 >= 0 /\ 9-i1 >= 0) /\ i3'=i3-2*i7+2*i5, i7'=i5

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_bb1_in -> 7
eval_start_bb2_in -> 8
eval_start_bb4_in -> 9
eval_start_4 -> 10
eval_start_5 -> 11
eval_start_bb3_in -> 12
eval_start_bb5_in -> 13
eval_start_bb6_in -> 14
eval_start_stop -> 15

Rules:
   7: (-7+i1 == 0 /\ i6-i5 >= 0) /\ i1'=9, i3'=1+i3, i7'=i6
  10: (-11+i1 == 0 /\ i4 > 0) /\ i1'=9, i3'=1+i3, i7'=i6
  27: (-11+i1 == 0 /\ i4 <= 0) /\ i1'=7, i3'=2+i3, i6'=1+i6
  28: (-9+i1 == 0 /\ i7-i5 < 0) /\ i1'=9, i3'=2+i3, i7'=1+i7
  29: (-9+i1 == 0 /\ i7-i5 >= 0) /\ i1'=15, i3'=2+i3
  30: (-7+i1 == 0 /\ i6-i5 < 0) /\ i1'=11, i3'=3+i3, i4'=it2
  31: -1+i1 == 0 /\ i1'=7, i3'=6+i3, i6'=0
  32: (1 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ -1-i6+i5 >= 0 /\ -i6+i5 > 0 /\ -it2 >= 0) /\ i3'=-5*i6+i3+5*i5, i4'=it2, i6'=i5
  33: (1 > 0 /\ -9+i1 >= 0 /\ -1-i7+i5 >= 0 /\ 9-i1 >= 0) /\ i3'=i3-2*i7+2*i5, i7'=i5

Dependency graph:
7 -> 29
10 -> 28, 10 -> 29, 10 -> 33
27 -> 7, 27 -> 30, 27 -> 32
28 -> 28, 28 -> 29, 28 -> 33
30 -> 10, 30 -> 27
31 -> 7, 31 -> 30, 31 -> 32
32 -> 7, 32 -> 30
33 -> 28, 33 -> 29

	Trace

	31[(-1+i1 == 0)]
	30[(-7+i1 == 0 /\ i6-i5 < 0)]
	10[(-11+i1 == 0 /\ i4 > 0)]
	33[(1 > 0 /\ -9+i1 >= 0 /\ -1-i7+i5 >= 0 /\ 9-i1 >= 0)]
	
	Blocked

	{}
	{32[T]}
	{27[T]}
	{}
	{28[T], 33[T]}
	
Step with 29

	Trace

	31[(-1+i1 == 0)]
	30[(-7+i1 == 0 /\ i6-i5 < 0)]
	10[(-11+i1 == 0 /\ i4 > 0)]
	33[(1 > 0 /\ -9+i1 >= 0 /\ -1-i7+i5 >= 0 /\ 9-i1 >= 0)]
	29[(-9+i1 == 0 /\ i7-i5 >= 0)]
	
	Blocked

	{}
	{32[T]}
	{27[T]}
	{}
	{28[T], 33[T]}
	{}
	
Backtrack

	Trace

	31[(-1+i1 == 0)]
	30[(-7+i1 == 0 /\ i6-i5 < 0)]
	10[(-11+i1 == 0 /\ i4 > 0)]
	33[(1 > 0 /\ -9+i1 >= 0 /\ -1-i7+i5 >= 0 /\ 9-i1 >= 0)]
	
	Blocked

	{}
	{32[T]}
	{27[T]}
	{}
	{28[T], 29[T], 33[T]}
	
Backtrack

	Trace

	31[(-1+i1 == 0)]
	30[(-7+i1 == 0 /\ i6-i5 < 0)]
	10[(-11+i1 == 0 /\ i4 > 0)]
	
	Blocked

	{}
	{32[T]}
	{27[T]}
	{33[T]}
	
Step with 28

	Trace

	31[(-1+i1 == 0)]
	30[(-7+i1 == 0 /\ i6-i5 < 0)]
	10[(-11+i1 == 0 /\ i4 > 0)]
	28[(-9+i1 == 0 /\ i7-i5 < 0)]
	
	Blocked

	{}
	{32[T]}
	{27[T]}
	{29[T], 33[T]}
	{}
	
Covered

	Trace

	31[(-1+i1 == 0)]
	30[(-7+i1 == 0 /\ i6-i5 < 0)]
	10[(-11+i1 == 0 /\ i4 > 0)]
	
	Blocked

	{}
	{32[T]}
	{27[T]}
	{28[T], 29[T], 33[T]}
	
Backtrack

	Trace

	31[(-1+i1 == 0)]
	30[(-7+i1 == 0 /\ i6-i5 < 0)]
	
	Blocked

	{}
	{32[T]}
	{10[T], 27[T]}
	
Backtrack

	Trace

	31[(-1+i1 == 0)]
	
	Blocked

	{}
	{30[T], 32[T]}
	
Step with 7

	Trace

	31[(-1+i1 == 0)]
	7[(-7+i1 == 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{30[T], 32[T]}
	{}
	
Step with 29

	Trace

	31[(-1+i1 == 0)]
	7[(-7+i1 == 0 /\ i6-i5 >= 0)]
	29[(-9+i1 == 0 /\ i7-i5 >= 0)]
	
	Blocked

	{}
	{30[T], 32[T]}
	{}
	{}
	
Backtrack

	Trace

	31[(-1+i1 == 0)]
	7[(-7+i1 == 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{30[T], 32[T]}
	{29[T]}
	
Backtrack

	Trace

	31[(-1+i1 == 0)]
	
	Blocked

	{}
	{7[T], 30[T], 32[T]}
	
Backtrack

	Trace

	Blocked

	{31[T]}
	
Accept

Poly(n^1)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃
  Temp_Vars:  nondef_0
  Locations:  l0, l1, l10, l11, l12, l13, l14, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, X₃)
  t₃: l1(X₀, X₁, X₂, X₃) → l4(X₀, X₁, X₂, X₃)
  t₁₂: l10(X₀, X₁, X₂, X₃) → l6(X₀, X₁, 1+X₂, X₃)
  t₁₃: l11(X₀, X₁, X₂, X₃) → l12(X₀, X₁, X₂, X₃) :|: 1+X₃ ≤ X₁
  t₁₄: l11(X₀, X₁, X₂, X₃) → l13(X₀, X₁, X₂, X₃) :|: X₁ ≤ X₃
  t₁₅: l12(X₀, X₁, X₂, X₃) → l11(X₀, X₁, X₂, 1+X₃)
  t₁₆: l13(X₀, X₁, X₂, X₃) → l14(X₀, X₁, X₂, X₃)
  t₁: l2(X₀, X₁, X₂, X₃) → l3(X₀, X₁, X₂, X₃)
  t₂: l3(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, X₃)
  t₄: l4(X₀, X₁, X₂, X₃) → l5(X₀, X₁, X₂, X₃)
  t₅: l5(X₀, X₁, X₂, X₃) → l6(X₀, X₁, 0, X₃)
  t₇: l6(X₀, X₁, X₂, X₃) → l11(X₀, X₁, X₂, X₂) :|: X₁ ≤ X₂
  t₆: l6(X₀, X₁, X₂, X₃) → l8(X₀, X₁, X₂, X₃) :|: 1+X₂ ≤ X₁
  t₁₁: l7(X₀, X₁, X₂, X₃) → l10(X₀, X₁, X₂, X₃) :|: X₀ ≤ 0
  t₁₀: l7(X₀, X₁, X₂, X₃) → l11(X₀, X₁, X₂, X₂) :|: 1 ≤ X₀
  t₈: l8(X₀, X₁, X₂, X₃) → l9(X₀, X₁, X₂, X₃)
  t₉: l9(X₀, X₁, X₂, X₃) → l7(nondef_0, X₁, X₂, X₃)


Preprocessing
  Found invariant 0 ≤ X₃ ∧ 0 ≤ X₂+X₃ ∧ X₂ ≤ X₃ ∧ 0 ≤ X₂ for location l11


  Found invariant 0 ≤ X₂ for location l6


  Found invariant 1+X₃ ≤ X₁ ∧ 0 ≤ X₃ ∧ 0 ≤ X₂+X₃ ∧ X₂ ≤ X₃ ∧ 1 ≤ X₁+X₃ ∧ 1+X₂ ≤ X₁ ∧ 0 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 1 ≤ X₁ for location l12


  Found invariant 1+X₂ ≤ X₁ ∧ 0 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 1 ≤ X₁ for location l7


  Found invariant 0 ≤ X₃ ∧ 0 ≤ X₂+X₃ ∧ X₂ ≤ X₃ ∧ X₁ ≤ X₃ ∧ 0 ≤ X₂ for location l13


  Found invariant 1+X₂ ≤ X₁ ∧ 0 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 1 ≤ X₁ for location l8


  Found invariant 1+X₂ ≤ X₁ ∧ 0 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1+X₀ ≤ X₁ ∧ X₀ ≤ 0 for location l10


  Found invariant 1+X₂ ≤ X₁ ∧ 0 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 1 ≤ X₁ for location l9


  Found invariant 0 ≤ X₃ ∧ 0 ≤ X₂+X₃ ∧ X₂ ≤ X₃ ∧ X₁ ≤ X₃ ∧ 0 ≤ X₂ for location l14


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃
  Temp_Vars:  nondef_0
  Locations:  l0, l1, l10, l11, l12, l13, l14, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, X₃)
  t₃: l1(X₀, X₁, X₂, X₃) → l4(X₀, X₁, X₂, X₃)
  t₁₂: l10(X₀, X₁, X₂, X₃) → l6(X₀, X₁, 1+X₂, X₃) :|: 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ X₀ ≤ 0 ∧ X₀ ≤ X₂ ∧ 0 ≤ X₂
  t₁₃: l11(X₀, X₁, X₂, X₃) → l12(X₀, X₁, X₂, X₃) :|: 1+X₃ ≤ X₁ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ X₂ ≤ X₃ ∧ 0 ≤ X₃
  t₁₄: l11(X₀, X₁, X₂, X₃) → l13(X₀, X₁, X₂, X₃) :|: X₁ ≤ X₃ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ X₂ ≤ X₃ ∧ 0 ≤ X₃
  t₁₅: l12(X₀, X₁, X₂, X₃) → l11(X₀, X₁, X₂, 1+X₃) :|: 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 1+X₃ ≤ X₁ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ X₂ ≤ X₃ ∧ 0 ≤ X₃
  t₁₆: l13(X₀, X₁, X₂, X₃) → l14(X₀, X₁, X₂, X₃) :|: X₁ ≤ X₃ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ X₂ ≤ X₃ ∧ 0 ≤ X₃
  t₁: l2(X₀, X₁, X₂, X₃) → l3(X₀, X₁, X₂, X₃)
  t₂: l3(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, X₃)
  t₄: l4(X₀, X₁, X₂, X₃) → l5(X₀, X₁, X₂, X₃)
  t₅: l5(X₀, X₁, X₂, X₃) → l6(X₀, X₁, 0, X₃)
  t₇: l6(X₀, X₁, X₂, X₃) → l11(X₀, X₁, X₂, X₂) :|: X₁ ≤ X₂ ∧ 0 ≤ X₂
  t₆: l6(X₀, X₁, X₂, X₃) → l8(X₀, X₁, X₂, X₃) :|: 1+X₂ ≤ X₁ ∧ 0 ≤ X₂
  t₁₁: l7(X₀, X₁, X₂, X₃) → l10(X₀, X₁, X₂, X₃) :|: X₀ ≤ 0 ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ 0 ≤ X₂
  t₁₀: l7(X₀, X₁, X₂, X₃) → l11(X₀, X₁, X₂, X₂) :|: 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ 0 ≤ X₂
  t₈: l8(X₀, X₁, X₂, X₃) → l9(X₀, X₁, X₂, X₃) :|: 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ 0 ≤ X₂
  t₉: l9(X₀, X₁, X₂, X₃) → l7(nondef_0, X₁, X₂, X₃) :|: 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ 0 ≤ X₂


MPRF for transition t₆: l6(X₀, X₁, X₂, X₃) → l8(X₀, X₁, X₂, X₃) :|: 1+X₂ ≤ X₁ ∧ 0 ≤ X₂ of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l10: [X₁-1-X₂]
    • l6: [X₁-X₂]
    • l7: [X₁-1-X₂]
    • l8: [X₁-1-X₂]
    • l9: [X₁-1-X₂]




MPRF for transition t₈: l8(X₀, X₁, X₂, X₃) → l9(X₀, X₁, X₂, X₃) :|: 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ 0 ≤ X₂ of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l10: [X₁-1-X₂]
    • l6: [X₁-X₂]
    • l7: [X₁-1-X₂]
    • l8: [X₁-X₂]
    • l9: [X₁-1-X₂]




MPRF for transition t₉: l9(X₀, X₁, X₂, X₃) → l7(nondef_0, X₁, X₂, X₃) :|: 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ 0 ≤ X₂ of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l10: [X₁-1-X₂]
    • l6: [X₁-X₂]
    • l7: [X₁-1-X₂]
    • l8: [X₁-X₂]
    • l9: [X₁-X₂]




MPRF for transition t₁₁: l7(X₀, X₁, X₂, X₃) → l10(X₀, X₁, X₂, X₃) :|: X₀ ≤ 0 ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ 0 ≤ X₂ of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l10: [X₁-1-X₂]
    • l6: [X₁-X₂]
    • l7: [X₁-X₂]
    • l8: [X₁-X₂]
    • l9: [X₁-X₂]




MPRF for transition t₁₂: l10(X₀, X₁, X₂, X₃) → l6(X₀, X₁, 1+X₂, X₃) :|: 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ X₀ ≤ 0 ∧ X₀ ≤ X₂ ∧ 0 ≤ X₂ of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l10: [X₁-X₂]
    • l6: [X₁-X₂]
    • l7: [X₁-X₂]
    • l8: [X₁-X₂]
    • l9: [X₁-X₂]




MPRF for transition t₁₃: l11(X₀, X₁, X₂, X₃) → l12(X₀, X₁, X₂, X₃) :|: 1+X₃ ≤ X₁ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ X₂ ≤ X₃ ∧ 0 ≤ X₃ of depth 1:
  new bound:
    2⋅X₁ {O(n)}

  MPRF:
    • l11: [X₁-X₃]
    • l12: [X₁-1-X₃]




MPRF for transition t₁₅: l12(X₀, X₁, X₂, X₃) → l11(X₀, X₁, X₂, 1+X₃) :|: 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 1+X₃ ≤ X₁ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ X₂ ≤ X₃ ∧ 0 ≤ X₃ of depth 1:
  new bound:
    2⋅X₁ {O(n)}

  MPRF:
    • l11: [X₁-X₃]
    • l12: [X₁-X₃]




All Bounds
Timebounds
  Overall timebound:9⋅X₁+10 {O(n)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: X₁ {O(n)}
    t₇: 1 {O(1)}
    t₈: X₁ {O(n)}
    t₉: X₁ {O(n)}
    t₁₀: 1 {O(1)}
    t₁₁: X₁ {O(n)}
    t₁₂: X₁ {O(n)}
    t₁₃: 2⋅X₁ {O(n)}
    t₁₄: 1 {O(1)}
    t₁₅: 2⋅X₁ {O(n)}
    t₁₆: 1 {O(1)}


Costbounds
  Overall costbound: 9⋅X₁+10 {O(n)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: X₁ {O(n)}
    t₇: 1 {O(1)}
    t₈: X₁ {O(n)}
    t₉: X₁ {O(n)}
    t₁₀: 1 {O(1)}
    t₁₁: X₁ {O(n)}
    t₁₂: X₁ {O(n)}
    t₁₃: 2⋅X₁ {O(n)}
    t₁₄: 1 {O(1)}
    t₁₅: 2⋅X₁ {O(n)}
    t₁₆: 1 {O(1)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₀, X₂: X₂ {O(n)}
    t₀, X₃: X₃ {O(n)}
    t₁, X₀: X₀ {O(n)}
    t₁, X₁: X₁ {O(n)}
    t₁, X₂: X₂ {O(n)}
    t₁, X₃: X₃ {O(n)}
    t₂, X₀: X₀ {O(n)}
    t₂, X₁: X₁ {O(n)}
    t₂, X₂: X₂ {O(n)}
    t₂, X₃: X₃ {O(n)}
    t₃, X₀: X₀ {O(n)}
    t₃, X₁: X₁ {O(n)}
    t₃, X₂: X₂ {O(n)}
    t₃, X₃: X₃ {O(n)}
    t₄, X₀: X₀ {O(n)}
    t₄, X₁: X₁ {O(n)}
    t₄, X₂: X₂ {O(n)}
    t₄, X₃: X₃ {O(n)}
    t₅, X₀: X₀ {O(n)}
    t₅, X₁: X₁ {O(n)}
    t₅, X₂: 0 {O(1)}
    t₅, X₃: X₃ {O(n)}
    t₆, X₁: X₁ {O(n)}
    t₆, X₂: X₁ {O(n)}
    t₆, X₃: X₃ {O(n)}
    t₇, X₁: 2⋅X₁ {O(n)}
    t₇, X₂: X₁ {O(n)}
    t₇, X₃: X₁ {O(n)}
    t₈, X₁: X₁ {O(n)}
    t₈, X₂: X₁ {O(n)}
    t₈, X₃: X₃ {O(n)}
    t₉, X₁: X₁ {O(n)}
    t₉, X₂: X₁ {O(n)}
    t₉, X₃: X₃ {O(n)}
    t₁₀, X₁: X₁ {O(n)}
    t₁₀, X₂: X₁ {O(n)}
    t₁₀, X₃: X₁ {O(n)}
    t₁₁, X₁: X₁ {O(n)}
    t₁₁, X₂: X₁ {O(n)}
    t₁₁, X₃: X₃ {O(n)}
    t₁₂, X₁: X₁ {O(n)}
    t₁₂, X₂: X₁ {O(n)}
    t₁₂, X₃: X₃ {O(n)}
    t₁₃, X₁: X₁ {O(n)}
    t₁₃, X₂: X₁ {O(n)}
    t₁₃, X₃: 3⋅X₁ {O(n)}
    t₁₄, X₁: 3⋅X₁ {O(n)}
    t₁₄, X₂: 2⋅X₁ {O(n)}
    t₁₄, X₃: 4⋅X₁ {O(n)}
    t₁₅, X₁: X₁ {O(n)}
    t₁₅, X₂: X₁ {O(n)}
    t₁₅, X₃: 3⋅X₁ {O(n)}
    t₁₆, X₁: 3⋅X₁ {O(n)}
    t₁₆, X₂: 2⋅X₁ {O(n)}
    t₁₆, X₃: 4⋅X₁ {O(n)}

