MAYBE

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [evalEx2bb1in/9,evalEx2bb2in/9]
1. recursive  : [evalEx2bb2in_loop_cont/10,evalEx2bb3in/9,evalEx2bbin/9]
2. non_recursive  : [evalEx2stop/5]
3. non_recursive  : [evalEx2returnin/5]
4. non_recursive  : [exit_location/1]
5. non_recursive  : [evalEx2bb3in_loop_cont/6]
6. non_recursive  : [evalEx2entryin/5]
7. non_recursive  : [evalEx2start/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into evalEx2bb2in/9
1. SCC is partially evaluated into evalEx2bb3in/9
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into evalEx2bb3in_loop_cont/6
6. SCC is partially evaluated into evalEx2entryin/5
7. SCC is partially evaluated into evalEx2start/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations evalEx2bb2in/9 
* CE 12 is refined into CE [13] 
* CE 11 is refined into CE [14] 
* CE 10 is refined into CE [15] 


### Cost equations --> "Loop" of evalEx2bb2in/9 
* CEs [15] --> Loop 13 
* CEs [13] --> Loop 14 
* CEs [14] --> Loop 15 

### Ranking functions of CR evalEx2bb2in(A,B,C,D,F,G,H,I,J) 

#### Partial ranking functions of CR evalEx2bb2in(A,B,C,D,F,G,H,I,J) 


### Specialization of cost equations evalEx2bb3in/9 
* CE 5 is refined into CE [16] 
* CE 6 is refined into CE [17] 
* CE 3 is refined into CE [18,19,20] 
* CE 7 is refined into CE [21] 
* CE 4 is refined into CE [22,23,24] 


### Cost equations --> "Loop" of evalEx2bb3in/9 
* CEs [24] --> Loop 16 
* CEs [23] --> Loop 17 
* CEs [22] --> Loop 18 
* CEs [16] --> Loop 19 
* CEs [17] --> Loop 20 
* CEs [18,19] --> Loop 21 
* CEs [21] --> Loop 22 
* CEs [20] --> Loop 23 

### Ranking functions of CR evalEx2bb3in(A,B,C,D,F,G,H,I,J) 

#### Partial ranking functions of CR evalEx2bb3in(A,B,C,D,F,G,H,I,J) 
* Partial RF of phase [16,17,18]:
  - RF of loop [17:1]:
    A/2+B/2-1/2 depends on loops [16:1] 
    B/2 depends on loops [16:1] 
  - RF of loop [18:1]:
    A depends on loops [16:1,17:1] 
    B depends on loops [16:1] 


### Specialization of cost equations evalEx2bb3in_loop_cont/6 
* CE 8 is refined into CE [25] 
* CE 9 is refined into CE [26] 


### Cost equations --> "Loop" of evalEx2bb3in_loop_cont/6 
* CEs [25] --> Loop 24 
* CEs [26] --> Loop 25 

### Ranking functions of CR evalEx2bb3in_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR evalEx2bb3in_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations evalEx2entryin/5 
* CE 2 is refined into CE [27,28,29,30,31,32,33,34,35] 


### Cost equations --> "Loop" of evalEx2entryin/5 
* CEs [33,34,35] --> Loop 26 
* CEs [28,31,32] --> Loop 27 
* CEs [30] --> Loop 28 
* CEs [29] --> Loop 29 
* CEs [27] --> Loop 30 

### Ranking functions of CR evalEx2entryin(A,B,C,D,F) 

#### Partial ranking functions of CR evalEx2entryin(A,B,C,D,F) 


### Specialization of cost equations evalEx2start/5 
* CE 1 is refined into CE [36,37,38,39,40] 


### Cost equations --> "Loop" of evalEx2start/5 
* CEs [40] --> Loop 31 
* CEs [39] --> Loop 32 
* CEs [38] --> Loop 33 
* CEs [37] --> Loop 34 
* CEs [36] --> Loop 35 

### Ranking functions of CR evalEx2start(A,B,C,D,F) 

#### Partial ranking functions of CR evalEx2start(A,B,C,D,F) 


Computing Bounds
=====================================

#### Cost of chains of evalEx2bb2in(A,B,C,D,F,G,H,I,J):
* Chain [[13]]...: 1*it(13)+0
  with precondition: [C+1>=A,B>=1,A>=1,A+B=C+D+2,F>=2,3>=F] 

* Chain [[13],15]: 1*it(13)+0
  with precondition: [F=2,G=I,A+B=C+D+2,A+B=G+H+2,A+B=G+J+2,A>=1,B>=1,C+1>=A,G>=C+1] 

* Chain [[13],14]: 1*it(13)+0
  with precondition: [F=3,A+B=C+D+2,A>=1,B>=1,C+1>=A] 

* Chain [15]: 0
  with precondition: [F=2,C=G,D=H,C=I,D=J,C+D+2=A+B,A>=1,C+1>=A,C+D+1>=A] 

* Chain [14]: 0
  with precondition: [F=3,C+D+2=A+B,A>=1,C+1>=A,C+D+1>=A] 


#### Cost of chains of evalEx2bb3in(A,B,C,D,F,G,H,I,J):
* Chain [[16,17,18]]...: 5*it(16)+0
  with precondition: [A>=1,B>=1] 

* Chain [[16,17,18],23]...: 6*it(16)+0
  with precondition: [F=3,A>=1,B>=1] 

* Chain [[16,17,18],22]: 5*it(16)+0
  with precondition: [F=3,A>=1,B>=1] 

* Chain [[16,17,18],21]: 6*aux(1)+0
  with precondition: [F=3,A>=1,B>=1] 

* Chain [[16,17,18],20]: 5*it(16)+0
  with precondition: [F=4,0>=G,A>=1,B>=1] 

* Chain [[16,17,18],19]: 5*it(16)+0
  with precondition: [F=4,0>=H,A>=1,B>=1] 

* Chain [23]...: 1*s(7)+0
  with precondition: [F=3,A>=1,B>=1] 

* Chain [22]: 0
  with precondition: [F=3] 

* Chain [21]: 1*aux(1)+0
  with precondition: [F=3,A>=1,B>=1] 

* Chain [20]: 0
  with precondition: [F=4,H=B,I=C,J=D,A=G,0>=A] 

* Chain [19]: 0
  with precondition: [F=4,G=A,I=C,J=D,B=H,0>=B] 


#### Cost of chains of evalEx2bb3in_loop_cont(A,B,C,D,E,F):
* Chain [25]: 0
  with precondition: [A=3] 

* Chain [24]: 0
  with precondition: [A=4] 


#### Cost of chains of evalEx2entryin(A,B,C,D,F):
* Chain [30]: 0
  with precondition: [] 

* Chain [29]: 0
  with precondition: [0>=A] 

* Chain [28]: 0
  with precondition: [0>=B] 

* Chain [27]: 1*aux(4)+0
  with precondition: [A>=1,B>=1] 

* Chain [26]...: 1*aux(5)+0
  with precondition: [A>=1,B>=1] 


#### Cost of chains of evalEx2start(A,B,C,D,F):
* Chain [35]: 0
  with precondition: [] 

* Chain [34]: 0
  with precondition: [0>=A] 

* Chain [33]: 0
  with precondition: [0>=B] 

* Chain [32]: 1*s(20)+0
  with precondition: [A>=1,B>=1] 

* Chain [31]...: 1*s(21)+0
  with precondition: [A>=1,B>=1] 


Closed-form bounds of evalEx2start(A,B,C,D,F): 
-------------------------------------
* Chain [35] with precondition: [] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [34] with precondition: [0>=A] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [33] with precondition: [0>=B] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [32] with precondition: [A>=1,B>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [31]... with precondition: [A>=1,B>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of evalEx2start(A,B,C,D,F): inf 
Asymptotic class: infinity 
* Total analysis performed in 121 ms.

