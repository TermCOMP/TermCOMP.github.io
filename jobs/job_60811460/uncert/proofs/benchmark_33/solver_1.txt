NO

# LoAT Proof:
NO

WORST_CASE(Omega(n^1),?)
NO

Initial ITS

Start location: evalEx2start

Location map:
LoAT_sink -> 0
evalEx2start -> 1
evalEx2entryin -> 2
evalEx2bb3in -> 3
evalEx2bbin -> 4
evalEx2returnin -> 5
evalEx2bb2in -> 6
evalEx2bb1in -> 7
evalEx2stop -> 8

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: -2+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=i5, i5'=i4
   2: (-3+i1 == 0 /\ -1+i4 >= 0 /\ -1+i5 >= 0) /\ i1'=4, i3'=1+i3
   3: (-3+i1 == 0 /\ -i5 >= 0) /\ i1'=5, i3'=1+i3
   4: (-3+i1 == 0 /\ -i4 >= 0) /\ i1'=5, i3'=1+i3
   5: -4+i1 == 0 /\ i1'=6, i3'=1+i3, i6'=-1+i4, i7'=-1+i5
   6: (-6+i1 == 0 /\ -1-it2 >= 0) /\ i1'=7, i3'=1+i3
   7: (-6+i1 == 0 /\ -1+it3 >= 0) /\ i1'=7, i3'=1+i3
   8: -6+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=i6, i5'=i7
   9: -7+i1 == 0 /\ i1'=6, i3'=1+i3, i6'=1+i6, i7'=-1+i7
  10: -5+i1 == 0 /\ i1'=8, i3'=1+i3

Dependency graph:
0 -> 1
1 -> 2, 1 -> 3, 1 -> 4
2 -> 5
3 -> 10
4 -> 10
5 -> 6, 5 -> 7, 5 -> 8
6 -> 9
7 -> 9
8 -> 2, 8 -> 3, 8 -> 4
9 -> 6, 9 -> 7, 9 -> 8

Chained Linear Paths

	Applied Chaining

	First rule:
	-1+i1 == 0 /\ i1'=2, i3'=1+i3
	Second rule:
	-2+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=i5, i5'=i4
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=i5, i5'=i4
	
	Applied Deletion

	Removed the following rules: 0, 1
	
	Applied Chaining

	First rule:
	(-3+i1 == 0 /\ -1+i4 >= 0 /\ -1+i5 >= 0) /\ i1'=4, i3'=1+i3
	Second rule:
	-4+i1 == 0 /\ i1'=6, i3'=1+i3, i6'=-1+i4, i7'=-1+i5
	New rule:
	(0 == 0 /\ -3+i1 == 0 /\ -1+i4 >= 0 /\ -1+i5 >= 0) /\ i1'=6, i3'=2+i3, i6'=-1+i4, i7'=-1+i5
	
	Applied Deletion

	Removed the following rules: 2, 5
	
	Applied Chaining

	First rule:
	(-3+i1 == 0 /\ -i5 >= 0) /\ i1'=5, i3'=1+i3
	Second rule:
	-5+i1 == 0 /\ i1'=8, i3'=1+i3
	New rule:
	(0 == 0 /\ -3+i1 == 0 /\ -i5 >= 0) /\ i1'=8, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 3
	
	Applied Chaining

	First rule:
	(-3+i1 == 0 /\ -i4 >= 0) /\ i1'=5, i3'=1+i3
	Second rule:
	-5+i1 == 0 /\ i1'=8, i3'=1+i3
	New rule:
	(0 == 0 /\ -3+i1 == 0 /\ -i4 >= 0) /\ i1'=8, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 4, 10
	
	Applied Chaining

	First rule:
	(-6+i1 == 0 /\ -1-it2 >= 0) /\ i1'=7, i3'=1+i3
	Second rule:
	-7+i1 == 0 /\ i1'=6, i3'=1+i3, i6'=1+i6, i7'=-1+i7
	New rule:
	(0 == 0 /\ -6+i1 == 0 /\ -1-it2 >= 0) /\ i1'=6, i3'=2+i3, i6'=1+i6, i7'=-1+i7
	
	Applied Deletion

	Removed the following rules: 6
	
	Applied Chaining

	First rule:
	(-6+i1 == 0 /\ -1+it3 >= 0) /\ i1'=7, i3'=1+i3
	Second rule:
	-7+i1 == 0 /\ i1'=6, i3'=1+i3, i6'=1+i6, i7'=-1+i7
	New rule:
	(0 == 0 /\ -6+i1 == 0 /\ -1+it3 >= 0) /\ i1'=6, i3'=2+i3, i6'=1+i6, i7'=-1+i7
	
	Applied Deletion

	Removed the following rules: 7, 9

Start location: evalEx2start

Location map:
LoAT_sink -> 0
evalEx2start -> 1
evalEx2entryin -> 2
evalEx2bb3in -> 3
evalEx2bbin -> 4
evalEx2returnin -> 5
evalEx2bb2in -> 6
evalEx2bb1in -> 7
evalEx2stop -> 8

Rules:
   8: -6+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=i6, i5'=i7
  11: (0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=i5, i5'=i4
  12: (0 == 0 /\ -3+i1 == 0 /\ -1+i4 >= 0 /\ -1+i5 >= 0) /\ i1'=6, i3'=2+i3, i6'=-1+i4, i7'=-1+i5
  13: (0 == 0 /\ -3+i1 == 0 /\ -i5 >= 0) /\ i1'=8, i3'=2+i3
  14: (0 == 0 /\ -3+i1 == 0 /\ -i4 >= 0) /\ i1'=8, i3'=2+i3
  15: (0 == 0 /\ -6+i1 == 0 /\ -1-it2 >= 0) /\ i1'=6, i3'=2+i3, i6'=1+i6, i7'=-1+i7
  16: (0 == 0 /\ -6+i1 == 0 /\ -1+it3 >= 0) /\ i1'=6, i3'=2+i3, i6'=1+i6, i7'=-1+i7

Dependency graph:
8 -> 12, 8 -> 13, 8 -> 14
11 -> 12, 11 -> 13, 11 -> 14
12 -> 8, 12 -> 15, 12 -> 16
15 -> 8, 15 -> 15, 15 -> 16
16 -> 8, 16 -> 15, 16 -> 16

Preprocessed Transitions

	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=i5, i5'=i4
	New rule:
	-1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=i5, i5'=i4
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -3+i1 == 0 /\ -1+i4 >= 0 /\ -1+i5 >= 0) /\ i1'=6, i3'=2+i3, i6'=-1+i4, i7'=-1+i5
	New rule:
	(-3+i1 == 0 /\ -1+i4 >= 0 /\ -1+i5 >= 0) /\ i1'=6, i3'=2+i3, i6'=-1+i4, i7'=-1+i5
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -3+i1 == 0 /\ -i5 >= 0) /\ i1'=8, i3'=2+i3
	New rule:
	(-3+i1 == 0 /\ -i5 >= 0) /\ i1'=8, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -3+i1 == 0 /\ -i4 >= 0) /\ i1'=8, i3'=2+i3
	New rule:
	(-3+i1 == 0 /\ -i4 >= 0) /\ i1'=8, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -6+i1 == 0 /\ -1-it2 >= 0) /\ i1'=6, i3'=2+i3, i6'=1+i6, i7'=-1+i7
	New rule:
	(-6+i1 == 0 /\ -1-it2 >= 0) /\ i1'=6, i3'=2+i3, i6'=1+i6, i7'=-1+i7
	
	Eliminated Temporary Variables

	Original rule:
	(-6+i1 == 0 /\ -1-it2 >= 0) /\ i1'=6, i3'=2+i3, i6'=1+i6, i7'=-1+i7
	New rule:
	(-6+i1 == 0) /\ i1'=6, i3'=2+i3, i6'=1+i6, i7'=-1+i7
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -6+i1 == 0 /\ -1+it3 >= 0) /\ i1'=6, i3'=2+i3, i6'=1+i6, i7'=-1+i7
	New rule:
	(-6+i1 == 0 /\ -1+it3 >= 0) /\ i1'=6, i3'=2+i3, i6'=1+i6, i7'=-1+i7
	
	Eliminated Temporary Variables

	Original rule:
	(-6+i1 == 0 /\ -1+it3 >= 0) /\ i1'=6, i3'=2+i3, i6'=1+i6, i7'=-1+i7
	New rule:
	(-6+i1 == 0) /\ i1'=6, i3'=2+i3, i6'=1+i6, i7'=-1+i7

Start location: evalEx2start

Location map:
LoAT_sink -> 0
evalEx2start -> 1
evalEx2entryin -> 2
evalEx2bb3in -> 3
evalEx2bbin -> 4
evalEx2returnin -> 5
evalEx2bb2in -> 6
evalEx2bb1in -> 7
evalEx2stop -> 8

Rules:
   8: -6+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=i6, i5'=i7
  17: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=i5, i5'=i4
  18: (-3+i1 == 0 /\ -1+i4 >= 0 /\ -1+i5 >= 0) /\ i1'=6, i3'=2+i3, i6'=-1+i4, i7'=-1+i5
  19: (-3+i1 == 0 /\ -i5 >= 0) /\ i1'=8, i3'=2+i3
  20: (-3+i1 == 0 /\ -i4 >= 0) /\ i1'=8, i3'=2+i3
  21: (-6+i1 == 0) /\ i1'=6, i3'=2+i3, i6'=1+i6, i7'=-1+i7
  22: (-6+i1 == 0) /\ i1'=6, i3'=2+i3, i6'=1+i6, i7'=-1+i7

Dependency graph:
8 -> 18, 8 -> 19, 8 -> 20
17 -> 18, 17 -> 19, 17 -> 20
18 -> 8, 18 -> 21, 18 -> 22
21 -> 8, 21 -> 21, 21 -> 22
22 -> 8, 22 -> 21, 22 -> 22

Step with 17

	Trace

	17[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 20

	Trace

	17[(-1+i1 == 0)]
	20[(-3+i1 == 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Backtrack

	Trace

	17[(-1+i1 == 0)]
	
	Blocked

	{}
	{20[T]}
	
Step with 18

	Trace

	17[(-1+i1 == 0)]
	18[(-3+i1 == 0 /\ -1+i4 >= 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{20[T]}
	{}
	
Step with 8

	Trace

	17[(-1+i1 == 0)]
	18[(-3+i1 == 0 /\ -1+i4 >= 0 /\ -1+i5 >= 0)]
	8[(-6+i1 == 0)]
	
	Blocked

	{}
	{20[T]}
	{}
	{}
	
Poly(n^1)

Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -3+i1 == 0 /\ -1+i4 >= 0 /\ -1+i5 >= 0) /\ i1'=3, i3'=3+i3, i4'=-1+i4, i5'=-1+i5, i6'=-1+i4, i7'=-1+i5
		New rule:
		(-3+i1 == 0 /\ -1+i4 >= 0 /\ -1+i5 >= 0) /\ i1'=3, i3'=3+i3, i4'=-1+i4, i5'=-1+i5, i6'=-1+i4, i7'=-1+i5

	Loop Acceleration

	Original rule:
	(-3+i1 == 0 /\ -1+i4 >= 0 /\ -1+i5 >= 0) /\ i1'=3, i3'=3+i3, i4'=-1+i4, i5'=-1+i5, i6'=-1+i4, i7'=-1+i5
	New rule:
	(-3+i1 >= 0 /\ -it28+i4 >= 0 /\ -1+i4 >= 0 /\ -it28+i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -1+it28 >= 0) /\ i1'=i1, i3'=3*it28+i3, i4'=-it28+i4, i5'=-it28+i5, i6'=-it28+i4, i7'=-it28+i5

		-3+i1 >= 0 [0]: unchanged
		
		-1+i4 >= 0 [0]: montonic decrease yields (-it28+i4 >= 0 /\ -1+i4 >= 0)
		
		3-i1 >= 0 [0]: unchanged
		
		-1+i5 >= 0 [0]: montonic decrease yields (-it28+i5 >= 0 /\ -1+i5 >= 0)
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, -1+i4 >= 0 -> (-it28+i4 >= 0 /\ -1+i4 >= 0), 3-i1 >= 0 -> 3-i1 >= 0, -1+i5 >= 0 -> (-it28+i5 >= 0 /\ -1+i5 >= 0)}

	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ -it28+i4 >= 0 /\ -1+i4 >= 0 /\ -it28+i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -1+it28 >= 0) /\ i1'=i1, i3'=3*it28+i3, i4'=-it28+i4, i5'=-it28+i5, i6'=-it28+i4, i7'=-it28+i5
	New rule:
	(-3+i1 >= 0 /\ -it28+i4 >= 0 /\ -1+i4 >= 0 /\ -it28+i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -1+it28 >= 0) /\ i3'=3*it28+i3, i4'=-it28+i4, i5'=-it28+i5, i6'=-it28+i4, i7'=-it28+i5

Start location: evalEx2start

Location map:
LoAT_sink -> 0
evalEx2start -> 1
evalEx2entryin -> 2
evalEx2bb3in -> 3
evalEx2bbin -> 4
evalEx2returnin -> 5
evalEx2bb2in -> 6
evalEx2bb1in -> 7
evalEx2stop -> 8

Rules:
   8: -6+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=i6, i5'=i7
  17: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=i5, i5'=i4
  18: (-3+i1 == 0 /\ -1+i4 >= 0 /\ -1+i5 >= 0) /\ i1'=6, i3'=2+i3, i6'=-1+i4, i7'=-1+i5
  19: (-3+i1 == 0 /\ -i5 >= 0) /\ i1'=8, i3'=2+i3
  20: (-3+i1 == 0 /\ -i4 >= 0) /\ i1'=8, i3'=2+i3
  21: (-6+i1 == 0) /\ i1'=6, i3'=2+i3, i6'=1+i6, i7'=-1+i7
  22: (-6+i1 == 0) /\ i1'=6, i3'=2+i3, i6'=1+i6, i7'=-1+i7
  23: (-3+i1 >= 0 /\ -it28+i4 >= 0 /\ -1+i4 >= 0 /\ -it28+i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -1+it28 >= 0) /\ i3'=3*it28+i3, i4'=-it28+i4, i5'=-it28+i5, i6'=-it28+i4, i7'=-it28+i5

Dependency graph:
8 -> 18, 8 -> 19, 8 -> 20, 8 -> 23
17 -> 18, 17 -> 19, 17 -> 20, 17 -> 23
18 -> 8, 18 -> 21, 18 -> 22
21 -> 8, 21 -> 21, 21 -> 22
22 -> 8, 22 -> 21, 22 -> 22
23 -> 18, 23 -> 19, 23 -> 20

	Trace

	17[(-1+i1 == 0)]
	23[(-3+i1 >= 0 /\ -it28+i4 >= 0 /\ -1+i4 >= 0 /\ -it28+i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -1+it28 >= 0)]
	
	Blocked

	{}
	{20[T]}
	{23[T]}
	
Step with 19

	Trace

	17[(-1+i1 == 0)]
	23[(-3+i1 >= 0 /\ -it28+i4 >= 0 /\ -1+i4 >= 0 /\ -it28+i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -1+it28 >= 0)]
	19[(-3+i1 == 0 /\ -i5 >= 0)]
	
	Blocked

	{}
	{20[T]}
	{23[T]}
	{}
	
Backtrack

	Trace

	17[(-1+i1 == 0)]
	23[(-3+i1 >= 0 /\ -it28+i4 >= 0 /\ -1+i4 >= 0 /\ -it28+i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -1+it28 >= 0)]
	
	Blocked

	{}
	{20[T]}
	{19[T], 23[T]}
	
Step with 20

	Trace

	17[(-1+i1 == 0)]
	23[(-3+i1 >= 0 /\ -it28+i4 >= 0 /\ -1+i4 >= 0 /\ -it28+i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -1+it28 >= 0)]
	20[(-3+i1 == 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{20[T]}
	{19[T], 23[T]}
	{}
	
Backtrack

	Trace

	17[(-1+i1 == 0)]
	23[(-3+i1 >= 0 /\ -it28+i4 >= 0 /\ -1+i4 >= 0 /\ -it28+i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -1+it28 >= 0)]
	
	Blocked

	{}
	{20[T]}
	{19[T], 20[T], 23[T]}
	
Step with 18

	Trace

	17[(-1+i1 == 0)]
	23[(-3+i1 >= 0 /\ -it28+i4 >= 0 /\ -1+i4 >= 0 /\ -it28+i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -1+it28 >= 0)]
	18[(-3+i1 == 0 /\ -1+i4 >= 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{20[T]}
	{19[T], 20[T], 23[T]}
	{}
	
Step with 22

	Trace

	17[(-1+i1 == 0)]
	23[(-3+i1 >= 0 /\ -it28+i4 >= 0 /\ -1+i4 >= 0 /\ -it28+i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -1+it28 >= 0)]
	18[(-3+i1 == 0 /\ -1+i4 >= 0 /\ -1+i5 >= 0)]
	22[(-6+i1 == 0)]
	
	Blocked

	{}
	{20[T]}
	{19[T], 20[T], 23[T]}
	{}
	{}
	
Nonterm

	Certificate of Non-Termination

	Original rule:
	(-6+i1 == 0) /\ i1'=6, i3'=2+i3, i6'=1+i6, i7'=-1+i7
	New rule:
	(-1+it102 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0) /\ i1'=0

		-6+i1 >= 0 [0]: unchanged
		
		6-i1 >= 0 [0]: unchanged
		
		Replacement map: {-6+i1 >= 0 -> -6+i1 >= 0, 6-i1 >= 0 -> 6-i1 >= 0}

	Loop Acceleration

	Original rule:
	(-6+i1 == 0) /\ i1'=6, i3'=2+i3, i6'=1+i6, i7'=-1+i7
	New rule:
	(-1+it102 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0) /\ i1'=i1, i3'=i3+2*it102, i6'=i6+it102, i7'=i7-it102

		-6+i1 >= 0 [0]: unchanged
		
		6-i1 >= 0 [0]: unchanged
		
		Replacement map: {-6+i1 >= 0 -> -6+i1 >= 0, 6-i1 >= 0 -> 6-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-1+it102 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0) /\ i1'=i1, i3'=i3+2*it102, i6'=i6+it102, i7'=i7-it102
	New rule:
	(-1+it102 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0) /\ i3'=i3+2*it102, i6'=i6+it102, i7'=i7-it102

Start location: evalEx2start

Location map:
LoAT_sink -> 0
evalEx2start -> 1
evalEx2entryin -> 2
evalEx2bb3in -> 3
evalEx2bbin -> 4
evalEx2returnin -> 5
evalEx2bb2in -> 6
evalEx2bb1in -> 7
evalEx2stop -> 8

Rules:
   8: -6+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=i6, i5'=i7
  17: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=i5, i5'=i4
  18: (-3+i1 == 0 /\ -1+i4 >= 0 /\ -1+i5 >= 0) /\ i1'=6, i3'=2+i3, i6'=-1+i4, i7'=-1+i5
  19: (-3+i1 == 0 /\ -i5 >= 0) /\ i1'=8, i3'=2+i3
  20: (-3+i1 == 0 /\ -i4 >= 0) /\ i1'=8, i3'=2+i3
  21: (-6+i1 == 0) /\ i1'=6, i3'=2+i3, i6'=1+i6, i7'=-1+i7
  22: (-6+i1 == 0) /\ i1'=6, i3'=2+i3, i6'=1+i6, i7'=-1+i7
  23: (-3+i1 >= 0 /\ -it28+i4 >= 0 /\ -1+i4 >= 0 /\ -it28+i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -1+it28 >= 0) /\ i3'=3*it28+i3, i4'=-it28+i4, i5'=-it28+i5, i6'=-it28+i4, i7'=-it28+i5
  24: (-1+it102 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0) /\ i1'=0
  25: (-1+it102 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0) /\ i3'=i3+2*it102, i6'=i6+it102, i7'=i7-it102

Dependency graph:
8 -> 18, 8 -> 19, 8 -> 20, 8 -> 23
17 -> 18, 17 -> 19, 17 -> 20, 17 -> 23
18 -> 8, 18 -> 21, 18 -> 22, 18 -> 24, 18 -> 25
21 -> 8, 21 -> 21, 21 -> 22, 21 -> 24, 21 -> 25
22 -> 8, 22 -> 21, 22 -> 22, 22 -> 24, 22 -> 25
23 -> 18, 23 -> 19, 23 -> 20
25 -> 8, 25 -> 21, 25 -> 22, 25 -> 24

Step with 24

	Trace

	17[(-1+i1 == 0)]
	23[(-3+i1 >= 0 /\ -it28+i4 >= 0 /\ -1+i4 >= 0 /\ -it28+i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -1+it28 >= 0)]
	18[(-3+i1 == 0 /\ -1+i4 >= 0 /\ -1+i5 >= 0)]
	24[(-1+it102 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0)]
	
	Blocked

	{}
	{20[T]}
	{19[T], 20[T], 23[T]}
	{}
	{24[T]}
	
Refute

	Counterexample

	(i1=1, i3=-4, i4=2, i5=2, i6=0, i7=0)
	-17-> (i1=3, i3=-2, i4=2, i5=2, i6=0, i7=0 )
	-23-> (i1=3, i3=1, i4=1, i5=1, i6=1, i7=1 )
	-18-> (i1=6, i3=3, i4=1, i5=1, i6=0, i7=0 )
	-24-> ( )
	
NO

Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
MAYBE


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃
  Temp_Vars:  E
  Locations:  l0, l1, l2, l3, l4, l5, l6, l7
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃) → l6(X₀, X₁, X₂, X₃)
  t₆: l1(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, X₃) :|: 1+E ≤ 0
  t₇: l1(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, X₃) :|: 1 ≤ E
  t₈: l1(X₀, X₁, X₂, X₃) → l3(X₂, X₃, X₂, X₃)
  t₉: l2(X₀, X₁, X₂, X₃) → l1(X₀, X₁, 1+X₂, X₃-1)
  t₂: l3(X₀, X₁, X₂, X₃) → l4(X₀, X₁, X₂, X₃) :|: 1 ≤ X₀ ∧ 1 ≤ X₁
  t₃: l3(X₀, X₁, X₂, X₃) → l5(X₀, X₁, X₂, X₃) :|: X₁ ≤ 0
  t₄: l3(X₀, X₁, X₂, X₃) → l5(X₀, X₁, X₂, X₃) :|: X₀ ≤ 0
  t₅: l4(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₀-1, X₁-1)
  t₁₀: l5(X₀, X₁, X₂, X₃) → l7(X₀, X₁, X₂, X₃)
  t₁: l6(X₀, X₁, X₂, X₃) → l3(X₁, X₀, X₂, X₃)


Preprocessing
  Found invariant 1+X₃ ≤ X₁ ∧ 0 ≤ X₂+X₃ ∧ 0 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 1 ≤ X₀+X₂ ∧ X₀ ≤ 1+X₂ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l2


  Found invariant 1+X₃ ≤ X₁ ∧ 0 ≤ X₂+X₃ ∧ 0 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 1 ≤ X₀+X₂ ∧ X₀ ≤ 1+X₂ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l1


  Found invariant 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l4


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃
  Temp_Vars:  E
  Locations:  l0, l1, l2, l3, l4, l5, l6, l7
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃) → l6(X₀, X₁, X₂, X₃)
  t₆: l1(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, X₃) :|: 1+E ≤ 0 ∧ X₀ ≤ 1+X₂ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₃ ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃
  t₇: l1(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, X₃) :|: 1 ≤ E ∧ X₀ ≤ 1+X₂ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₃ ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃
  t₈: l1(X₀, X₁, X₂, X₃) → l3(X₂, X₃, X₂, X₃) :|: X₀ ≤ 1+X₂ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₃ ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃
  t₉: l2(X₀, X₁, X₂, X₃) → l1(X₀, X₁, 1+X₂, X₃-1) :|: X₀ ≤ 1+X₂ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₃ ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃
  t₂: l3(X₀, X₁, X₂, X₃) → l4(X₀, X₁, X₂, X₃) :|: 1 ≤ X₀ ∧ 1 ≤ X₁
  t₃: l3(X₀, X₁, X₂, X₃) → l5(X₀, X₁, X₂, X₃) :|: X₁ ≤ 0
  t₄: l3(X₀, X₁, X₂, X₃) → l5(X₀, X₁, X₂, X₃) :|: X₀ ≤ 0
  t₅: l4(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₀-1, X₁-1) :|: 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀+X₁
  t₁₀: l5(X₀, X₁, X₂, X₃) → l7(X₀, X₁, X₂, X₃)
  t₁: l6(X₀, X₁, X₂, X₃) → l3(X₁, X₀, X₂, X₃)


MPRF for transition t₂: l3(X₀, X₁, X₂, X₃) → l4(X₀, X₁, X₂, X₃) :|: 1 ≤ X₀ ∧ 1 ≤ X₁ of depth 1:
  new bound:
    X₀ {O(n)}

  MPRF:
    • l1: [X₃]
    • l2: [X₃-1]
    • l3: [X₁]
    • l4: [X₁-1]




MPRF for transition t₅: l4(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₀-1, X₁-1) :|: 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ of depth 1:
  new bound:
    X₀+X₁+1 {O(n)}

  MPRF:
    • l1: [X₂+X₃]
    • l2: [X₂+X₃]
    • l3: [X₀+X₁-1]
    • l4: [X₀+X₁-1]




MPRF for transition t₈: l1(X₀, X₁, X₂, X₃) → l3(X₂, X₃, X₂, X₃) :|: X₀ ≤ 1+X₂ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₃ ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ of depth 1:
  new bound:
    X₀ {O(n)}

  MPRF:
    • l1: [X₁]
    • l2: [X₁]
    • l3: [X₁]
    • l4: [X₁]




  Found invariant 2+X₃ ≤ X₁ ∧ 0 ≤ X₂+X₃ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l1_v1


  Found invariant 1+X₃ ≤ X₁ ∧ 0 ≤ X₂+X₃ ∧ 0 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 1 ≤ X₀+X₂ ∧ X₀ ≤ 1+X₂ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l2_v1


  Found invariant 1+X₃ ≤ X₁ ∧ 0 ≤ X₃ ∧ 0 ≤ X₂+X₃ ∧ 1 ≤ X₁+X₃ ∧ X₁ ≤ 1+X₃ ∧ 1 ≤ X₀+X₃ ∧ 1+X₂ ≤ X₀ ∧ 0 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 1 ≤ X₀+X₂ ∧ X₀ ≤ 1+X₂ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l1


  Found invariant 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l4


All Bounds
Timebounds
  Overall timebound:inf {Infinity}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: X₀ {O(n)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: X₀+X₁+1 {O(n)}
    t₆: inf {Infinity}
    t₇: inf {Infinity}
    t₈: X₀ {O(n)}
    t₉: inf {Infinity}
    t₁₀: 1 {O(1)}


Costbounds
  Overall costbound: inf {Infinity}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: X₀ {O(n)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: X₀+X₁+1 {O(n)}
    t₆: inf {Infinity}
    t₇: inf {Infinity}
    t₈: X₀ {O(n)}
    t₉: inf {Infinity}
    t₁₀: 1 {O(1)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₀, X₂: X₂ {O(n)}
    t₀, X₃: X₃ {O(n)}
    t₁, X₀: X₁ {O(n)}
    t₁, X₁: X₀ {O(n)}
    t₁, X₂: X₂ {O(n)}
    t₁, X₃: X₃ {O(n)}

