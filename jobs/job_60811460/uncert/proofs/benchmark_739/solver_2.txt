WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_start_bb3_in/4,eval_start_bb4_in/4]
1. recursive  : [eval_start_bb1_in/8,eval_start_bb2_in/8,eval_start_bb3_in_loop_cont/9]
2. non_recursive  : [eval_start_stop/6]
3. non_recursive  : [eval_start_bb5_in/6]
4. non_recursive  : [exit_location/1]
5. non_recursive  : [eval_start_bb1_in_loop_cont/7]
6. non_recursive  : [eval_start_11/6]
7. non_recursive  : [eval_start_10/6]
8. non_recursive  : [eval_start_bb6_in/6]
9. non_recursive  : [eval_start_2/6]
10. non_recursive  : [eval_start_1/6]
11. non_recursive  : [eval_start_0/6]
12. non_recursive  : [eval_start_bb0_in/6]
13. non_recursive  : [eval_start_start/6]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_start_bb3_in/4
1. SCC is partially evaluated into eval_start_bb1_in/8
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_start_bb1_in_loop_cont/7
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into eval_start_2/6
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into eval_start_start/6

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_start_bb3_in/4 
* CE 12 is refined into CE [13] 
* CE 11 is refined into CE [14] 
* CE 10 is refined into CE [15] 


### Cost equations --> "Loop" of eval_start_bb3_in/4 
* CEs [15] --> Loop 13 
* CEs [13] --> Loop 14 
* CEs [14] --> Loop 15 

### Ranking functions of CR eval_start_bb3_in(V__0,V_z_0,B,C) 
* RF of phase [13]: [V_z_0]

#### Partial ranking functions of CR eval_start_bb3_in(V__0,V_z_0,B,C) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    V_z_0


### Specialization of cost equations eval_start_bb1_in/8 
* CE 6 is refined into CE [16] 
* CE 4 is refined into CE [17,18] 
* CE 7 is refined into CE [19] 
* CE 5 is refined into CE [20] 


### Cost equations --> "Loop" of eval_start_bb1_in/8 
* CEs [20] --> Loop 16 
* CEs [16] --> Loop 17 
* CEs [17,18] --> Loop 18 
* CEs [19] --> Loop 19 

### Ranking functions of CR eval_start_bb1_in(V__0,V_3,V_y,V_z_0,B,C,D,E) 
* RF of phase [16]: [V__0,V__0-V_y]

#### Partial ranking functions of CR eval_start_bb1_in(V__0,V_3,V_y,V_z_0,B,C,D,E) 
* Partial RF of phase [16]:
  - RF of loop [16:1]:
    V__0
    V__0-V_y


### Specialization of cost equations eval_start_bb1_in_loop_cont/7 
* CE 8 is refined into CE [21] 
* CE 9 is refined into CE [22] 


### Cost equations --> "Loop" of eval_start_bb1_in_loop_cont/7 
* CEs [21] --> Loop 20 
* CEs [22] --> Loop 21 

### Ranking functions of CR eval_start_bb1_in_loop_cont(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR eval_start_bb1_in_loop_cont(A,B,C,D,E,F,G) 


### Specialization of cost equations eval_start_2/6 
* CE 3 is refined into CE [23,24,25,26,27] 
* CE 2 is refined into CE [28] 


### Cost equations --> "Loop" of eval_start_2/6 
* CEs [25,26] --> Loop 22 
* CEs [27] --> Loop 23 
* CEs [24] --> Loop 24 
* CEs [23] --> Loop 25 
* CEs [28] --> Loop 26 

### Ranking functions of CR eval_start_2(V__0,V_3,V_x,V_y,V_z_0,B) 

#### Partial ranking functions of CR eval_start_2(V__0,V_3,V_x,V_y,V_z_0,B) 


### Specialization of cost equations eval_start_start/6 
* CE 1 is refined into CE [29,30,31,32,33] 


### Cost equations --> "Loop" of eval_start_start/6 
* CEs [33] --> Loop 27 
* CEs [32] --> Loop 28 
* CEs [31] --> Loop 29 
* CEs [30] --> Loop 30 
* CEs [29] --> Loop 31 

### Ranking functions of CR eval_start_start(V__0,V_3,V_x,V_y,V_z_0,B) 

#### Partial ranking functions of CR eval_start_start(V__0,V_3,V_x,V_y,V_z_0,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_start_bb3_in(V__0,V_z_0,B,C):
* Chain [[13],15]: 1*it(13)+0
  Such that:it(13) =< V_z_0

  with precondition: [B=2,C=0,V__0>=1,V_z_0>=1,2*V__0+98>=V_z_0] 

* Chain [[13],14]: 1*it(13)+0
  Such that:it(13) =< V_z_0

  with precondition: [B=3,V__0>=1,V_z_0>=1,2*V__0+98>=V_z_0] 

* Chain [14]: 0
  with precondition: [B=3,V__0>=1,2*V__0+98>=V_z_0] 


#### Cost of chains of eval_start_bb1_in(V__0,V_3,V_y,V_z_0,B,C,D,E):
* Chain [[16],19]: 1*it(16)+1*s(3)+0
  Such that:it(16) =< V__0-V_y
s(3) =< 100*V__0-98*V_y

  with precondition: [B=3,V_y>=0,V__0>=V_y+1] 

* Chain [[16],18]: 1*it(16)+1*s(3)+1*s(4)+0
  Such that:it(16) =< V__0-V_y
s(3) =< 100*V__0-100*V_y
s(4) =< 2*V_y+100

  with precondition: [B=3,V_y>=0,V__0>=2*V_y+2] 

* Chain [[16],17]: 1*it(16)+1*s(3)+0
  Such that:it(16) =< V__0-V_y
s(3) =< 100*V__0-98*V_y
s(3) =< 100*V__0-100*D

  with precondition: [B=4,E=0,C=D,C>=0,V_y>=C,V__0>=V_y+C+1] 

* Chain [19]: 0
  with precondition: [B=3,V_y>=0] 

* Chain [18]: 1*s(4)+0
  Such that:s(4) =< 2*V_y+100

  with precondition: [B=3,V_y>=0,V__0>=V_y+1] 

* Chain [17]: 0
  with precondition: [B=4,D=V_3,E=V_z_0,V__0=C,V_y>=0,V_y>=V__0] 


#### Cost of chains of eval_start_bb1_in_loop_cont(A,B,C,D,E,F,G):
* Chain [21]: 0
  with precondition: [A=3,E>=0] 

* Chain [20]: 0
  with precondition: [A=4,E>=0] 


#### Cost of chains of eval_start_2(V__0,V_3,V_x,V_y,V_z_0,B):
* Chain [26]: 0
  with precondition: [0>=V_y+1] 

* Chain [25]: 0
  with precondition: [V_y>=0] 

* Chain [24]: 1*s(8)+1*s(9)+1*s(10)+0
  Such that:s(8) =< V_x-V_y
s(9) =< 100*V_x-100*V_y
s(10) =< 2*V_y+100

  with precondition: [V_y>=0,V_x>=2*V_y+2] 

* Chain [23]: 0
  with precondition: [V_y>=0,V_y>=V_x] 

* Chain [22]: 2*s(11)+2*s(12)+1*s(13)+0
  Such that:s(13) =< 2*V_y+100
aux(1) =< V_x-V_y
aux(2) =< 100*V_x-98*V_y
s(11) =< aux(1)
s(12) =< aux(2)

  with precondition: [V_y>=0,V_x>=V_y+1] 


#### Cost of chains of eval_start_start(V__0,V_3,V_x,V_y,V_z_0,B):
* Chain [31]: 0
  with precondition: [0>=V_y+1] 

* Chain [30]: 0
  with precondition: [V_y>=0] 

* Chain [29]: 1*s(16)+1*s(17)+1*s(18)+0
  Such that:s(16) =< V_x-V_y
s(17) =< 100*V_x-100*V_y
s(18) =< 2*V_y+100

  with precondition: [V_y>=0,V_x>=2*V_y+2] 

* Chain [28]: 0
  with precondition: [V_y>=0,V_y>=V_x] 

* Chain [27]: 1*s(19)+2*s(22)+2*s(23)+0
  Such that:s(20) =< V_x-V_y
s(21) =< 100*V_x-98*V_y
s(19) =< 2*V_y+100
s(22) =< s(20)
s(23) =< s(21)

  with precondition: [V_y>=0,V_x>=V_y+1] 


Closed-form bounds of eval_start_start(V__0,V_3,V_x,V_y,V_z_0,B): 
-------------------------------------
* Chain [31] with precondition: [0>=V_y+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [30] with precondition: [V_y>=0] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [29] with precondition: [V_y>=0,V_x>=2*V_y+2] 
    - Upper bound: 101*V_x-99*V_y+100 
    - Complexity: n 
* Chain [28] with precondition: [V_y>=0,V_y>=V_x] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [27] with precondition: [V_y>=0,V_x>=V_y+1] 
    - Upper bound: 202*V_x-196*V_y+100 
    - Complexity: n 

### Maximum cost of eval_start_start(V__0,V_3,V_x,V_y,V_z_0,B): nat(V_x-V_y)+nat(2*V_y+100)+max([nat(100*V_x-100*V_y),nat(100*V_x-98*V_y)*2+nat(V_x-V_y)]) 
Asymptotic class: n 
* Total analysis performed in 105 ms.

