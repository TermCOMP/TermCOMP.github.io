WORST_CASE(?,O(1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [f8/7]
1. non_recursive  : [exit_location/1]
2. recursive  : [f22/8]
3. recursive  : [f18/9,f22_loop_cont/10,f33/9]
4. non_recursive  : [f40/8]
5. non_recursive  : [f18_loop_cont/9]
6. non_recursive  : [f8_loop_cont/9]
7. non_recursive  : [f0/8]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into f8/7
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into f22/8
3. SCC is partially evaluated into f18/9
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into f18_loop_cont/9
6. SCC is partially evaluated into f8_loop_cont/9
7. SCC is partially evaluated into f0/8

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations f8/7 
* CE 3 is refined into CE [20] 
* CE 4 is refined into CE [21] 
* CE 2 is refined into CE [22] 


### Cost equations --> "Loop" of f8/7 
* CEs [22] --> Loop 20 
* CEs [20] --> Loop 21 
* CEs [21] --> Loop 22 

### Ranking functions of CR f8(C,D,E,I,J,K,L) 
* RF of phase [20]: [-C+101]

#### Partial ranking functions of CR f8(C,D,E,I,J,K,L) 
* Partial RF of phase [20]:
  - RF of loop [20:1]:
    -C+101


### Specialization of cost equations f22/8 
* CE 19 is refined into CE [23] 
* CE 15 is refined into CE [24] 
* CE 16 is refined into CE [25] 
* CE 17 is refined into CE [26] 
* CE 18 is refined into CE [27] 


### Cost equations --> "Loop" of f22/8 
* CEs [26] --> Loop 23 
* CEs [27] --> Loop 24 
* CEs [23] --> Loop 25 
* CEs [24] --> Loop 26 
* CEs [25] --> Loop 27 

### Ranking functions of CR f22(D,E,F,G,I,J,K,L) 
* RF of phase [23,24]: [-D-F+101,-F+100]

#### Partial ranking functions of CR f22(D,E,F,G,I,J,K,L) 
* Partial RF of phase [23,24]:
  - RF of loop [23:1,24:1]:
    -D-F+101
    -F+100


### Specialization of cost equations f18/9 
* CE 7 is refined into CE [28,29] 
* CE 8 is refined into CE [30,31] 
* CE 11 is refined into CE [32] 
* CE 10 is refined into CE [33,34] 
* CE 12 is refined into CE [35] 
* CE 9 is refined into CE [36,37] 


### Cost equations --> "Loop" of f18/9 
* CEs [37] --> Loop 28 
* CEs [36] --> Loop 29 
* CEs [29] --> Loop 30 
* CEs [31] --> Loop 31 
* CEs [32] --> Loop 32 
* CEs [30] --> Loop 33 
* CEs [28] --> Loop 34 
* CEs [33,34] --> Loop 35 
* CEs [35] --> Loop 36 

### Ranking functions of CR f18(D,E,F,G,I,J,K,L,M) 
* RF of phase [28]: [-D+100]
* RF of phase [29]: [-D+2]

#### Partial ranking functions of CR f18(D,E,F,G,I,J,K,L,M) 
* Partial RF of phase [28]:
  - RF of loop [28:1]:
    -D+100
* Partial RF of phase [29]:
  - RF of loop [29:1]:
    -D+2


### Specialization of cost equations f18_loop_cont/9 
* CE 13 is refined into CE [38] 
* CE 14 is refined into CE [39] 


### Cost equations --> "Loop" of f18_loop_cont/9 
* CEs [38] --> Loop 37 
* CEs [39] --> Loop 38 

### Ranking functions of CR f18_loop_cont(A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR f18_loop_cont(A,B,C,D,E,F,G,H,I) 


### Specialization of cost equations f8_loop_cont/9 
* CE 6 is refined into CE [40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59] 
* CE 5 is refined into CE [60] 


### Cost equations --> "Loop" of f8_loop_cont/9 
* CEs [53] --> Loop 39 
* CEs [51,52] --> Loop 40 
* CEs [44,45,46,48,49,50,56,57] --> Loop 41 
* CEs [43,59] --> Loop 42 
* CEs [42,47,55] --> Loop 43 
* CEs [41] --> Loop 44 
* CEs [58] --> Loop 45 
* CEs [54] --> Loop 46 
* CEs [40] --> Loop 47 
* CEs [60] --> Loop 48 

### Ranking functions of CR f8_loop_cont(A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR f8_loop_cont(A,B,C,D,E,F,G,H,I) 


### Specialization of cost equations f0/8 
* CE 1 is refined into CE [61,62,63,64,65] 


### Cost equations --> "Loop" of f0/8 
* CEs [61,62,63,64,65] --> Loop 49 

### Ranking functions of CR f0(A,B,C,D,E,F,G,I) 

#### Partial ranking functions of CR f0(A,B,C,D,E,F,G,I) 


Computing Bounds
=====================================

#### Cost of chains of f8(C,D,E,I,J,K,L):
* Chain [[20],22]: 1*it(20)+0
  Such that:it(20) =< -C+101

  with precondition: [I=3,100>=C,C>=1] 

* Chain [[20],21]: 1*it(20)+0
  Such that:it(20) =< -C+101

  with precondition: [I=5,J=101,K=1,L=0,100>=C,C>=1] 

* Chain [22]: 0
  with precondition: [I=3,C>=1] 


#### Cost of chains of f22(D,E,F,G,I,J,K,L):
* Chain [[23,24],27]: 2*it(23)+0
  Such that:aux(3) =< -F+100
aux(5) =< -D-F+101
it(23) =< aux(5)
it(23) =< aux(3)

  with precondition: [I=2,D+K=101,1>=E,D>=2,100>=D+F,E+F>=2,E+9596>=97*J+95*D+95*F,97*J+9696>=96*D+96*E+96*F] 

* Chain [[23,24],26]: 2*it(23)+0
  Such that:aux(1) =< -D-F+101
aux(6) =< -F+100
it(23) =< aux(1)
it(23) =< aux(6)

  with precondition: [I=2,K=100,1>=D,1>=E,99>=F,E+F>=2,E+9601>=98*J+96*F,98*J+9700>=97*E+97*F] 

* Chain [[23,24],25]: 2*it(23)+0
  Such that:aux(7) =< -D-F+101
aux(8) =< -F+100
aux(2) =< aux(7)
aux(2) =< aux(8)
it(23) =< aux(7)
it(23) =< aux(2)
it(23) =< aux(8)

  with precondition: [I=3,1>=E,99>=F,100>=D+F,E+F>=2] 

* Chain [25]: 0
  with precondition: [I=3,99>=D,1>=E,E+F>=2] 


#### Cost of chains of f18(D,E,F,G,I,J,K,L,M):
* Chain [[29],[28],36]: 1*it(28)+1*it(29)+2*s(7)+2*s(16)+0
  Such that:aux(12) =< 98
s(9) =< 9507
aux(14) =< -D+100
aux(17) =< -D+2
it(28) =< aux(12)
s(8) =< aux(12)*99
s(7) =< s(9)
s(7) =< s(8)
it(29) =< aux(17)
s(18) =< it(29)*aux(14)
s(17) =< aux(17)*99
s(16) =< s(18)
s(16) =< s(17)

  with precondition: [I=3,1>=D] 

* Chain [[29],[28],35]: 1*it(28)+1*it(29)+2*s(7)+2*s(16)+2*s(22)+0
  Such that:aux(11) =< 97
aux(19) =< 98
s(20) =< 99
s(9) =< 9506
aux(18) =< 9604
aux(14) =< -D+100
aux(20) =< -D+2
s(9) =< aux(18)
s(19) =< aux(18)
aux(11) =< aux(19)
s(19) =< aux(19)
s(21) =< s(19)
s(21) =< s(20)
s(22) =< s(19)
s(22) =< s(21)
s(22) =< s(20)
aux(9) =< aux(19)
it(28) =< aux(19)
aux(9) =< aux(11)
it(28) =< aux(11)
s(8) =< aux(9)*99
s(7) =< s(9)
s(7) =< s(8)
it(29) =< aux(20)
s(18) =< it(29)*aux(14)
s(17) =< aux(20)*99
s(16) =< s(18)
s(16) =< s(17)

  with precondition: [I=3,1>=D] 

* Chain [[29],[28],32]: 1*it(28)+1*it(29)+2*s(7)+2*s(16)+0
  Such that:aux(21) =< 98
s(9) =< 9507
aux(14) =< -D+100
aux(22) =< -D+2
it(28) =< aux(21)
s(8) =< aux(21)*99
s(7) =< s(9)
s(7) =< s(8)
it(29) =< aux(22)
s(18) =< it(29)*aux(14)
s(17) =< aux(22)*99
s(16) =< s(18)
s(16) =< s(17)

  with precondition: [I=4,J=100,K=0,L=2,1>=D] 

* Chain [[29],[28],31]: 1*it(28)+1*it(29)+2*s(7)+2*s(16)+2*s(25)+0
  Such that:aux(10) =< 98
s(23) =< 99
aux(14) =< -D+100
s(9) =< -98*L+9702
aux(11) =< -L+99
s(24) =< L
aux(23) =< -D+2
s(25) =< s(24)
s(25) =< s(23)
aux(9) =< aux(10)
it(28) =< aux(10)
aux(9) =< aux(11)
it(28) =< aux(11)
s(8) =< aux(9)*99
s(7) =< s(9)
s(7) =< s(8)
it(29) =< aux(23)
s(18) =< it(29)*aux(14)
s(17) =< aux(23)*99
s(16) =< s(18)
s(16) =< s(17)

  with precondition: [I=4,J+L=101,1>=D,0>=K+1,J>=3,97*K+9504>=96*J] 

* Chain [[29],[28],30]: 1*it(28)+1*it(29)+2*s(7)+2*s(16)+2*s(28)+0
  Such that:aux(10) =< 98
s(26) =< 99
aux(14) =< -D+100
s(9) =< -98*L+9702
aux(11) =< -L+99
s(27) =< L
aux(24) =< -D+2
s(28) =< s(27)
s(28) =< s(26)
aux(9) =< aux(10)
it(28) =< aux(10)
aux(9) =< aux(11)
it(28) =< aux(11)
s(8) =< aux(9)*99
s(7) =< s(9)
s(7) =< s(8)
it(29) =< aux(24)
s(18) =< it(29)*aux(14)
s(17) =< aux(24)*99
s(16) =< s(18)
s(16) =< s(17)

  with precondition: [I=4,J+L=101,1>=D,J>=3,K>=1,9502>=97*K+95*J] 

* Chain [[29],36]: 1*it(29)+2*s(16)+0
  Such that:aux(14) =< -D+100
aux(25) =< -D+2
it(29) =< aux(25)
s(18) =< it(29)*aux(14)
s(17) =< aux(25)*99
s(16) =< s(18)
s(16) =< s(17)

  with precondition: [I=3,1>=D] 

* Chain [[29],35]: 1*it(29)+2*s(16)+2*s(22)+0
  Such that:s(20) =< 99
s(19) =< -D+99
aux(26) =< -D+2
aux(27) =< -D+100
aux(16) =< aux(26)
aux(16) =< aux(27)
s(19) =< aux(27)
s(21) =< s(19)
s(21) =< s(20)
s(22) =< s(19)
s(22) =< s(21)
s(22) =< s(20)
aux(13) =< aux(26)
it(29) =< aux(26)
aux(13) =< aux(16)
it(29) =< aux(16)
s(18) =< it(29)*aux(27)
s(17) =< aux(13)*99
s(16) =< s(18)
s(16) =< s(17)

  with precondition: [I=3,1>=D] 

* Chain [[29],34]: 1*it(29)+2*s(16)+2*s(31)+0
  Such that:s(30) =< 99
aux(15) =< -D+2
aux(14) =< -D+100
aux(16) =< -D+J
s(29) =< -J+100
s(31) =< s(29)
s(31) =< s(30)
aux(13) =< aux(15)
it(29) =< aux(15)
aux(13) =< aux(16)
it(29) =< aux(16)
s(18) =< it(29)*aux(14)
s(17) =< aux(13)*99
s(16) =< s(18)
s(16) =< s(17)

  with precondition: [I=4,L=100,1>=J,97>=K,K>=1,J>=D+1] 

* Chain [[29],33]: 1*it(29)+2*s(16)+2*s(34)+0
  Such that:s(33) =< 99
aux(15) =< -D+2
aux(14) =< -D+100
aux(16) =< -D+J
s(32) =< -J+100
s(34) =< s(32)
s(34) =< s(33)
aux(13) =< aux(15)
it(29) =< aux(15)
aux(13) =< aux(16)
it(29) =< aux(16)
s(18) =< it(29)*aux(14)
s(17) =< aux(13)*99
s(16) =< s(18)
s(16) =< s(17)

  with precondition: [I=4,L=100,1>=J,0>=K+1,K+97>=0,J>=D+1] 

* Chain [[29],31]: 1*it(29)+2*s(16)+2*s(25)+0
  Such that:s(24) =< 98
s(23) =< 99
aux(14) =< -D+100
aux(28) =< -D+2
s(25) =< s(24)
s(25) =< s(23)
it(29) =< aux(28)
s(18) =< it(29)*aux(14)
s(17) =< aux(28)*99
s(16) =< s(18)
s(16) =< s(17)

  with precondition: [I=4,J=2,L=99,1>=D,0>=K+1,K+96>=0] 

* Chain [[29],30]: 1*it(29)+2*s(16)+2*s(28)+0
  Such that:s(27) =< 98
s(26) =< 99
aux(14) =< -D+100
aux(29) =< -D+2
s(28) =< s(27)
s(28) =< s(26)
it(29) =< aux(29)
s(18) =< it(29)*aux(14)
s(17) =< aux(29)*99
s(16) =< s(18)
s(16) =< s(17)

  with precondition: [I=4,J=2,L=99,1>=D,96>=K,K>=1] 

* Chain [[28],36]: 1*it(28)+2*s(7)+0
  Such that:s(9) =< -98*D+9703
aux(12) =< -D+100
it(28) =< aux(12)
s(8) =< aux(12)*99
s(7) =< s(9)
s(7) =< s(8)

  with precondition: [I=3,99>=D,D>=2] 

* Chain [[28],35]: 1*it(28)+2*s(7)+2*s(22)+0
  Such that:s(20) =< 99
s(9) =< -98*D+9702
aux(11) =< -D+99
aux(18) =< -98*D+9800
aux(19) =< -D+100
s(9) =< aux(18)
s(19) =< aux(18)
aux(11) =< aux(19)
s(19) =< aux(19)
s(21) =< s(19)
s(21) =< s(20)
s(22) =< s(19)
s(22) =< s(21)
s(22) =< s(20)
aux(9) =< aux(19)
it(28) =< aux(19)
aux(9) =< aux(11)
it(28) =< aux(11)
s(8) =< aux(9)*99
s(7) =< s(9)
s(7) =< s(8)

  with precondition: [I=3,98>=D,D>=2] 

* Chain [[28],32]: 1*it(28)+2*s(7)+0
  Such that:s(9) =< -98*D+9703
aux(21) =< -D+100
it(28) =< aux(21)
s(8) =< aux(21)*99
s(7) =< s(9)
s(7) =< s(8)

  with precondition: [I=4,J=100,K=0,L=2,99>=D,D>=2] 

* Chain [[28],31]: 1*it(28)+2*s(7)+2*s(25)+0
  Such that:s(23) =< 99
s(9) =< -98*D-98*L+9898
aux(10) =< -D+100
aux(11) =< -D-L+101
s(24) =< L
s(25) =< s(24)
s(25) =< s(23)
aux(9) =< aux(10)
it(28) =< aux(10)
aux(9) =< aux(11)
it(28) =< aux(11)
s(8) =< aux(9)*99
s(7) =< s(9)
s(7) =< s(8)

  with precondition: [I=4,J+L=101,0>=K+1,D>=2,97*K+9504>=96*J,J>=D+1] 

* Chain [[28],30]: 1*it(28)+2*s(7)+2*s(28)+0
  Such that:s(26) =< 99
s(9) =< -98*D-98*L+9898
aux(10) =< -D+100
aux(11) =< -D-L+101
s(27) =< L
s(28) =< s(27)
s(28) =< s(26)
aux(9) =< aux(10)
it(28) =< aux(10)
aux(9) =< aux(11)
it(28) =< aux(11)
s(8) =< aux(9)*99
s(7) =< s(9)
s(7) =< s(8)

  with precondition: [I=4,J+L=101,D>=2,K>=1,9502>=97*K+95*J,J>=D+1] 

* Chain [36]: 0
  with precondition: [I=3] 

* Chain [35]: 2*s(22)+0
  Such that:s(20) =< 99
s(19) =< -D+100
s(21) =< s(19)
s(21) =< s(20)
s(22) =< s(19)
s(22) =< s(21)
s(22) =< s(20)

  with precondition: [I=3,99>=D] 

* Chain [34]: 2*s(31)+0
  Such that:s(30) =< 99
s(29) =< -D+100
s(31) =< s(29)
s(31) =< s(30)

  with precondition: [I=4,L=100,D=J,1>=D,97>=K,K>=1] 

* Chain [33]: 2*s(34)+0
  Such that:s(33) =< 99
s(32) =< -D+100
s(34) =< s(32)
s(34) =< s(33)

  with precondition: [I=4,L=100,D=J,1>=D,0>=K+1,K+97>=0] 

* Chain [32]: 0
  with precondition: [I=4,K=E,L=F,M=G,D=J,D>=100] 

* Chain [31]: 2*s(25)+0
  Such that:s(23) =< 99
s(24) =< -D+100
s(25) =< s(24)
s(25) =< s(23)

  with precondition: [I=4,D=J,D+L=101,0>=K+1,D>=2,97*K+9504>=96*D] 

* Chain [30]: 2*s(28)+0
  Such that:s(26) =< 99
s(27) =< -D+100
s(28) =< s(27)
s(28) =< s(26)

  with precondition: [I=4,D=J,D+L=101,D>=2,K>=1,9502>=97*K+95*D] 


#### Cost of chains of f18_loop_cont(A,B,C,D,E,F,G,H,I):
* Chain [38]: 0
  with precondition: [A=3,B+1=0,C+1=0] 

* Chain [37]: 0
  with precondition: [A=4,B+1=0,C+1=0] 


#### Cost of chains of f8_loop_cont(A,B,C,D,E,F,G,H,I):
* Chain [48]: 0
  with precondition: [A=3,B+1=0,C+1=0] 

* Chain [47]: 0
  with precondition: [A=5,B+1=0,C+1=0] 

* Chain [46]: 2*s(84)+0
  Such that:s(82) =< 99
s(83) =< -E+100
s(84) =< s(83)
s(84) =< s(82)

  with precondition: [A=5,B+1=0,C+1=0,9407>=96*E,E>=2] 

* Chain [45]: 2*s(90)+1*s(92)+2*s(94)+0
  Such that:s(85) =< 99
s(86) =< -98*E+460943/48
s(87) =< -E+100
s(88) =< -E+9407/96
aux(34) =< -98*E+9898
aux(35) =< -E+101
s(86) =< aux(34)
s(89) =< aux(34)
s(88) =< aux(35)
s(89) =< aux(35)
s(90) =< s(89)
s(90) =< s(85)
s(91) =< s(87)
s(92) =< s(87)
s(91) =< s(88)
s(92) =< s(88)
s(93) =< s(91)*99
s(94) =< s(86)
s(94) =< s(93)

  with precondition: [A=5,B+1=0,C+1=0,9311>=96*E,E>=2] 

* Chain [44]: 2*s(98)+0
  Such that:s(95) =< 99
s(96) =< -E+100
s(97) =< s(96)
s(97) =< s(95)
s(98) =< s(96)
s(98) =< s(97)
s(98) =< s(95)

  with precondition: [A=5,B+1=0,C+1=0,99>=E] 

* Chain [43]: 2*s(101)+4*s(103)+2*s(111)+0
  Such that:s(109) =< 99
aux(36) =< -98*E+9703
aux(37) =< -E+100
s(111) =< aux(37)
s(111) =< s(109)
s(101) =< aux(37)
s(102) =< aux(37)*99
s(103) =< aux(36)
s(103) =< s(102)

  with precondition: [A=5,B+1=0,C+1=0,99>=E,E>=2] 

* Chain [42]: 2*s(119)+1*s(121)+2*s(123)+2*s(129)+1*s(131)+2*s(133)+0
  Such that:s(115) =< -98*E+9800
aux(38) =< -98*E+9898
aux(39) =< -E+101
aux(40) =< 99
aux(41) =< -98*E+9702
aux(42) =< -E+99
aux(43) =< -E+100
s(113) =< aux(41)
s(125) =< aux(41)
s(114) =< aux(42)
s(127) =< aux(42)
s(113) =< s(115)
s(117) =< s(115)
s(114) =< aux(43)
s(117) =< aux(43)
s(118) =< s(117)
s(118) =< aux(40)
s(119) =< s(117)
s(119) =< s(118)
s(119) =< aux(40)
s(120) =< aux(43)
s(121) =< aux(43)
s(120) =< s(114)
s(121) =< s(114)
s(122) =< s(120)*99
s(123) =< s(113)
s(123) =< s(122)
s(125) =< aux(38)
s(128) =< aux(38)
s(127) =< aux(39)
s(128) =< aux(39)
s(129) =< s(128)
s(129) =< aux(40)
s(130) =< aux(43)
s(131) =< aux(43)
s(130) =< s(127)
s(131) =< s(127)
s(132) =< s(130)*99
s(133) =< s(125)
s(133) =< s(132)

  with precondition: [A=5,B+1=0,C+1=0,98>=E,E>=2] 

* Chain [41]: 2*s(145)+1*s(147)+2*s(149)+8*s(150)+16*s(153)+2*s(154)+4*s(156)+2*s(159)+1*s(161)+2*s(164)+4*s(169)+4*s(196)+4*s(207)+1*s(209)+2*s(211)+1*s(225)+2*s(227)+0
  Such that:s(137) =< 9604
s(204) =< 9215/96
s(203) =< 451535/48
s(138) =< -E+99
aux(48) =< 97
aux(49) =< 98
aux(50) =< 99
aux(51) =< 9506
aux(52) =< 9507
aux(53) =< 9702
aux(54) =< -E+2
aux(55) =< -E+100
s(134) =< aux(48)
s(220) =< aux(48)
s(135) =< aux(51)
s(219) =< aux(51)
s(203) =< aux(53)
s(219) =< aux(53)
s(135) =< s(137)
s(143) =< s(137)
s(134) =< aux(49)
s(143) =< aux(49)
s(144) =< s(143)
s(144) =< aux(50)
s(145) =< s(143)
s(145) =< s(144)
s(145) =< aux(50)
s(146) =< aux(49)
s(147) =< aux(49)
s(146) =< s(134)
s(147) =< s(134)
s(148) =< s(146)*99
s(149) =< s(135)
s(149) =< s(148)
s(150) =< aux(54)
s(151) =< s(150)*aux(55)
s(152) =< aux(54)*99
s(153) =< s(151)
s(153) =< s(152)
s(154) =< aux(49)
s(155) =< aux(49)*99
s(156) =< aux(52)
s(156) =< s(155)
s(157) =< aux(54)
s(157) =< aux(55)
s(138) =< aux(55)
s(158) =< s(138)
s(158) =< aux(50)
s(159) =< s(138)
s(159) =< s(158)
s(159) =< aux(50)
s(160) =< aux(54)
s(161) =< aux(54)
s(160) =< s(157)
s(161) =< s(157)
s(162) =< s(161)*aux(55)
s(163) =< s(160)*99
s(164) =< s(162)
s(164) =< s(163)
s(205) =< aux(49)
s(220) =< aux(50)
s(205) =< aux(50)
s(207) =< s(205)
s(207) =< aux(50)
s(224) =< aux(49)
s(225) =< aux(49)
s(224) =< s(220)
s(225) =< s(220)
s(226) =< s(224)*99
s(227) =< s(219)
s(227) =< s(226)
s(169) =< aux(49)
s(169) =< aux(50)
s(196) =< aux(55)
s(196) =< aux(50)
s(204) =< aux(50)
s(208) =< aux(49)
s(209) =< aux(49)
s(208) =< s(204)
s(209) =< s(204)
s(210) =< s(208)*99
s(211) =< s(203)
s(211) =< s(210)

  with precondition: [A=5,B+1=0,C+1=0,1>=E] 

* Chain [40]: 4*s(237)+2*s(239)+4*s(242)+0
  Such that:aux(58) =< 99
aux(59) =< -E+1
aux(60) =< -E+2
aux(61) =< -E+99
aux(62) =< -E+100
s(235) =< aux(59)
s(236) =< aux(61)
s(235) =< aux(62)
s(236) =< aux(62)
s(237) =< s(236)
s(237) =< aux(58)
s(238) =< aux(60)
s(239) =< aux(60)
s(238) =< s(235)
s(239) =< s(235)
s(240) =< s(239)*aux(62)
s(241) =< s(238)*99
s(242) =< s(240)
s(242) =< s(241)

  with precondition: [A=5,B+1=0,C+1=0,0>=E] 

* Chain [39]: 0
  with precondition: [A=5,B+1=0,C+1=0,E>=100] 


#### Cost of chains of f0(A,B,C,D,E,F,G,I):
* Chain [49]: 2839895/24
  with precondition: [] 


Closed-form bounds of f0(A,B,C,D,E,F,G,I): 
-------------------------------------
* Chain [49] with precondition: [] 
    - Upper bound: 2839895/24 
    - Complexity: constant 

### Maximum cost of f0(A,B,C,D,E,F,G,I): 2839895/24 
Asymptotic class: constant 
* Total analysis performed in 372 ms.

