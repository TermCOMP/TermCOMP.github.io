WORST_CASE(?,O(1))

# LoAT Proof:
Initial ITS

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f1 -> 2

Rules:
   0: (3-i4 >= 0 /\ i4 >= 0 /\ i5 >= 0 /\ 3-i5 >= 0 /\ -1+i1 == 0) /\ i1'=2, i3'=1+i3, i6'=2
   1: (-2 >= 0 /\ -2+i1 == 0 /\ -1+i6+i4-2*i5 >= 0) /\ i1'=2, i3'=1+i3, i5'=1+i5, i7'=1+i5
   2: (-2+i1 == 0 /\ -1+i6+i4-2*i5 >= 0) /\ i1'=2, i3'=1+i3, i5'=1+i5, i7'=1+i5
   3: (-2+i1 == 0 /\ -2-i6-i4+2*i5 >= 0) /\ i1'=2, i3'=1+i3, i5'=-1+i5, i7'=-1+i5
   4: (-2 >= 0 /\ -2+i1 == 0 /\ -2-i6-i4+2*i5 >= 0) /\ i1'=2, i3'=1+i3, i5'=-1+i5, i7'=-1+i5
   5: (-2+i1 == 0 /\ 1+i6+i4-2*i5 >= 0 /\ -i6-i4+2*i5 >= 0 /\ -1 >= 0) /\ i1'=2, i3'=1+i3, i7'=i5
   6: (-2+i1 == 0 /\ 1+i6+i4-2*i5 >= 0 /\ -i6-i4+2*i5 >= 0 /\ -1 >= 0) /\ i1'=2, i3'=1+i3, i7'=i5

Dependency graph:
0 -> 1, 0 -> 2, 0 -> 3, 0 -> 4, 0 -> 5, 0 -> 6
1 -> 1, 1 -> 2, 1 -> 3, 1 -> 4, 1 -> 5, 1 -> 6
2 -> 1, 2 -> 2, 2 -> 3, 2 -> 4, 2 -> 5, 2 -> 6
3 -> 1, 3 -> 2, 3 -> 3, 3 -> 4, 3 -> 5, 3 -> 6
4 -> 1, 4 -> 2, 4 -> 3, 4 -> 4, 4 -> 5, 4 -> 6
5 -> 1, 5 -> 2, 5 -> 3, 5 -> 4, 5 -> 5, 5 -> 6
6 -> 1, 6 -> 2, 6 -> 3, 6 -> 4, 6 -> 5, 6 -> 6

Preprocessed Transitions

	Simplified Guard

	Original rule:
	(-2 >= 0 /\ -2+i1 == 0 /\ -1+i6+i4-2*i5 >= 0) /\ i1'=2, i3'=1+i3, i5'=1+i5, i7'=1+i5
	New rule:
	_|_ /\ i1'=2, i3'=1+i3, i5'=1+i5, i7'=1+i5
	
	Simplified Guard

	Original rule:
	(-2 >= 0 /\ -2+i1 == 0 /\ -2-i6-i4+2*i5 >= 0) /\ i1'=2, i3'=1+i3, i5'=-1+i5, i7'=-1+i5
	New rule:
	_|_ /\ i1'=2, i3'=1+i3, i5'=-1+i5, i7'=-1+i5
	
	Simplified Guard

	Original rule:
	(-2+i1 == 0 /\ 1+i6+i4-2*i5 >= 0 /\ -i6-i4+2*i5 >= 0 /\ -1 >= 0) /\ i1'=2, i3'=1+i3, i7'=i5
	New rule:
	_|_ /\ i1'=2, i3'=1+i3, i7'=i5
	
	Simplified Guard

	Original rule:
	(-2+i1 == 0 /\ 1+i6+i4-2*i5 >= 0 /\ -i6-i4+2*i5 >= 0 /\ -1 >= 0) /\ i1'=2, i3'=1+i3, i7'=i5
	New rule:
	_|_ /\ i1'=2, i3'=1+i3, i7'=i5

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f1 -> 2

Rules:
   0: (3-i4 >= 0 /\ i4 >= 0 /\ i5 >= 0 /\ 3-i5 >= 0 /\ -1+i1 == 0) /\ i1'=2, i3'=1+i3, i6'=2
   2: (-2+i1 == 0 /\ -1+i6+i4-2*i5 >= 0) /\ i1'=2, i3'=1+i3, i5'=1+i5, i7'=1+i5
   3: (-2+i1 == 0 /\ -2-i6-i4+2*i5 >= 0) /\ i1'=2, i3'=1+i3, i5'=-1+i5, i7'=-1+i5
   7: _|_ /\ i1'=2, i3'=1+i3, i5'=1+i5, i7'=1+i5
   8: _|_ /\ i1'=2, i3'=1+i3, i5'=-1+i5, i7'=-1+i5
   9: _|_ /\ i1'=2, i3'=1+i3, i7'=i5
  10: _|_ /\ i1'=2, i3'=1+i3, i7'=i5

Dependency graph:
0 -> 2, 0 -> 3, 0 -> 7, 0 -> 8, 0 -> 9, 0 -> 10
2 -> 2, 2 -> 3, 2 -> 7, 2 -> 8, 2 -> 9, 2 -> 10
3 -> 2, 3 -> 3, 3 -> 7, 3 -> 8, 3 -> 9, 3 -> 10
7 -> 2, 7 -> 3, 7 -> 7, 7 -> 8, 7 -> 9, 7 -> 10
8 -> 2, 8 -> 3, 8 -> 7, 8 -> 8, 8 -> 9, 8 -> 10
9 -> 2, 9 -> 3, 9 -> 7, 9 -> 8, 9 -> 9, 9 -> 10
10 -> 2, 10 -> 3, 10 -> 7, 10 -> 8, 10 -> 9, 10 -> 10

Refined Dependency Graph

	Removed the following edges: 0 -> 7, 0 -> 8, 0 -> 9, 0 -> 10, 2 -> 3, 2 -> 7, 2 -> 8, 2 -> 9, 2 -> 10, 3 -> 2, 3 -> 7, 3 -> 8, 3 -> 9, 3 -> 10, 7 -> 2, 7 -> 3, 7 -> 7, 7 -> 8, 7 -> 9, 7 -> 10, 8 -> 2, 8 -> 3, 8 -> 7, 8 -> 8, 8 -> 9, 8 -> 10, 9 -> 2, 9 -> 3, 9 -> 7, 9 -> 8, 9 -> 9, 9 -> 10, 10 -> 2, 10 -> 3, 10 -> 7, 10 -> 8, 10 -> 9, 10 -> 10

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f1 -> 2

Rules:
   0: (3-i4 >= 0 /\ i4 >= 0 /\ i5 >= 0 /\ 3-i5 >= 0 /\ -1+i1 == 0) /\ i1'=2, i3'=1+i3, i6'=2
   2: (-2+i1 == 0 /\ -1+i6+i4-2*i5 >= 0) /\ i1'=2, i3'=1+i3, i5'=1+i5, i7'=1+i5
   3: (-2+i1 == 0 /\ -2-i6-i4+2*i5 >= 0) /\ i1'=2, i3'=1+i3, i5'=-1+i5, i7'=-1+i5
   7: _|_ /\ i1'=2, i3'=1+i3, i5'=1+i5, i7'=1+i5
   8: _|_ /\ i1'=2, i3'=1+i3, i5'=-1+i5, i7'=-1+i5
   9: _|_ /\ i1'=2, i3'=1+i3, i7'=i5
  10: _|_ /\ i1'=2, i3'=1+i3, i7'=i5

Dependency graph:
0 -> 2, 0 -> 3
2 -> 2
3 -> 3

Step with 0

	Trace

	0[(3-i4 >= 0 /\ i4 >= 0 /\ i5 >= 0 /\ 3-i5 >= 0 /\ -1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 3

	Trace

	0[(3-i4 >= 0 /\ i4 >= 0 /\ i5 >= 0 /\ 3-i5 >= 0 /\ -1+i1 == 0)]
	3[(-2+i1 == 0 /\ -2-i6-i4+2*i5 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Accelerate

	Loop Acceleration

	Original rule:
	(-2+i1 == 0 /\ -2-i6-i4+2*i5 >= 0) /\ i1'=2, i3'=1+i3, i5'=-1+i5, i7'=-1+i5
	New rule:
	(-1+it13 >= 0 /\ -2+i1 >= 0 /\ -2-i6-i4+2*i5 >= 0 /\ 2-i1 >= 0 /\ -i6-i4-2*it13+2*i5 >= 0) /\ i1'=i1, i3'=i3+it13, i5'=-it13+i5, i7'=-it13+i5

		-2+i1 >= 0 [0]: unchanged
		
		-2-i6-i4+2*i5 >= 0 [0]: montonic decrease yields (-2-i6-i4+2*i5 >= 0 /\ -i6-i4-2*it13+2*i5 >= 0)
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, -2-i6-i4+2*i5 >= 0 -> (-2-i6-i4+2*i5 >= 0 /\ -i6-i4-2*it13+2*i5 >= 0), 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-1+it13 >= 0 /\ -2+i1 >= 0 /\ -2-i6-i4+2*i5 >= 0 /\ 2-i1 >= 0 /\ -i6-i4-2*it13+2*i5 >= 0) /\ i1'=i1, i3'=i3+it13, i5'=-it13+i5, i7'=-it13+i5
	New rule:
	(-1+it13 >= 0 /\ -2+i1 >= 0 /\ -2-i6-i4+2*i5 >= 0 /\ 2-i1 >= 0 /\ -i6-i4-2*it13+2*i5 >= 0) /\ i3'=i3+it13, i5'=-it13+i5, i7'=-it13+i5

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f1 -> 2

Rules:
   0: (3-i4 >= 0 /\ i4 >= 0 /\ i5 >= 0 /\ 3-i5 >= 0 /\ -1+i1 == 0) /\ i1'=2, i3'=1+i3, i6'=2
   2: (-2+i1 == 0 /\ -1+i6+i4-2*i5 >= 0) /\ i1'=2, i3'=1+i3, i5'=1+i5, i7'=1+i5
   3: (-2+i1 == 0 /\ -2-i6-i4+2*i5 >= 0) /\ i1'=2, i3'=1+i3, i5'=-1+i5, i7'=-1+i5
   7: _|_ /\ i1'=2, i3'=1+i3, i5'=1+i5, i7'=1+i5
   8: _|_ /\ i1'=2, i3'=1+i3, i5'=-1+i5, i7'=-1+i5
   9: _|_ /\ i1'=2, i3'=1+i3, i7'=i5
  10: _|_ /\ i1'=2, i3'=1+i3, i7'=i5
  11: (-1+it13 >= 0 /\ -2+i1 >= 0 /\ -2-i6-i4+2*i5 >= 0 /\ 2-i1 >= 0 /\ -i6-i4-2*it13+2*i5 >= 0) /\ i3'=i3+it13, i5'=-it13+i5, i7'=-it13+i5

Dependency graph:
0 -> 2, 0 -> 3, 0 -> 11
2 -> 2
3 -> 3, 3 -> 11
11 -> 3

	Trace

	0[(3-i4 >= 0 /\ i4 >= 0 /\ i5 >= 0 /\ 3-i5 >= 0 /\ -1+i1 == 0)]
	11[(-1+it13 >= 0 /\ -2+i1 >= 0 /\ -2-i6-i4+2*i5 >= 0 /\ 2-i1 >= 0 /\ -i6-i4-2*it13+2*i5 >= 0)]
	
	Blocked

	{}
	{}
	{3[T], 11[T]}
	
Backtrack

	Trace

	0[(3-i4 >= 0 /\ i4 >= 0 /\ i5 >= 0 /\ 3-i5 >= 0 /\ -1+i1 == 0)]
	
	Blocked

	{}
	{11[T]}
	
Step with 2

	Trace

	0[(3-i4 >= 0 /\ i4 >= 0 /\ i5 >= 0 /\ 3-i5 >= 0 /\ -1+i1 == 0)]
	2[(-2+i1 == 0 /\ -1+i6+i4-2*i5 >= 0)]
	
	Blocked

	{}
	{11[T]}
	{}
	
Accelerate

	Loop Acceleration

	Original rule:
	(-2+i1 == 0 /\ -1+i6+i4-2*i5 >= 0) /\ i1'=2, i3'=1+i3, i5'=1+i5, i7'=1+i5
	New rule:
	(1+i6-2*it83+i4-2*i5 >= 0 /\ -1+it83 >= 0 /\ -2+i1 >= 0 /\ -1+i6+i4-2*i5 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it83, i5'=it83+i5, i7'=it83+i5

		-2+i1 >= 0 [0]: unchanged
		
		-1+i6+i4-2*i5 >= 0 [0]: montonic decrease yields (1+i6-2*it83+i4-2*i5 >= 0 /\ -1+i6+i4-2*i5 >= 0)
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, -1+i6+i4-2*i5 >= 0 -> (1+i6-2*it83+i4-2*i5 >= 0 /\ -1+i6+i4-2*i5 >= 0), 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(1+i6-2*it83+i4-2*i5 >= 0 /\ -1+it83 >= 0 /\ -2+i1 >= 0 /\ -1+i6+i4-2*i5 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it83, i5'=it83+i5, i7'=it83+i5
	New rule:
	(1+i6-2*it83+i4-2*i5 >= 0 /\ -1+it83 >= 0 /\ -2+i1 >= 0 /\ -1+i6+i4-2*i5 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+it83, i5'=it83+i5, i7'=it83+i5

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f1 -> 2

Rules:
   0: (3-i4 >= 0 /\ i4 >= 0 /\ i5 >= 0 /\ 3-i5 >= 0 /\ -1+i1 == 0) /\ i1'=2, i3'=1+i3, i6'=2
   2: (-2+i1 == 0 /\ -1+i6+i4-2*i5 >= 0) /\ i1'=2, i3'=1+i3, i5'=1+i5, i7'=1+i5
   3: (-2+i1 == 0 /\ -2-i6-i4+2*i5 >= 0) /\ i1'=2, i3'=1+i3, i5'=-1+i5, i7'=-1+i5
   7: _|_ /\ i1'=2, i3'=1+i3, i5'=1+i5, i7'=1+i5
   8: _|_ /\ i1'=2, i3'=1+i3, i5'=-1+i5, i7'=-1+i5
   9: _|_ /\ i1'=2, i3'=1+i3, i7'=i5
  10: _|_ /\ i1'=2, i3'=1+i3, i7'=i5
  11: (-1+it13 >= 0 /\ -2+i1 >= 0 /\ -2-i6-i4+2*i5 >= 0 /\ 2-i1 >= 0 /\ -i6-i4-2*it13+2*i5 >= 0) /\ i3'=i3+it13, i5'=-it13+i5, i7'=-it13+i5
  12: (1+i6-2*it83+i4-2*i5 >= 0 /\ -1+it83 >= 0 /\ -2+i1 >= 0 /\ -1+i6+i4-2*i5 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+it83, i5'=it83+i5, i7'=it83+i5

Dependency graph:
0 -> 2, 0 -> 3, 0 -> 11, 0 -> 12
2 -> 2, 2 -> 12
3 -> 3, 3 -> 11
11 -> 3
12 -> 2

	Trace

	0[(3-i4 >= 0 /\ i4 >= 0 /\ i5 >= 0 /\ 3-i5 >= 0 /\ -1+i1 == 0)]
	12[(1+i6-2*it83+i4-2*i5 >= 0 /\ -1+it83 >= 0 /\ -2+i1 >= 0 /\ -1+i6+i4-2*i5 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{11[T]}
	{2[T], 12[T]}
	
Backtrack

	Trace

	0[(3-i4 >= 0 /\ i4 >= 0 /\ i5 >= 0 /\ 3-i5 >= 0 /\ -1+i1 == 0)]
	
	Blocked

	{}
	{11[T], 12[T]}
	
Step with 2

	Trace

	0[(3-i4 >= 0 /\ i4 >= 0 /\ i5 >= 0 /\ 3-i5 >= 0 /\ -1+i1 == 0)]
	2[(-2+i1 == 0 /\ -1+i6+i4-2*i5 >= 0)]
	
	Blocked

	{}
	{11[T], 12[T]}
	{}
	
Covered

	Trace

	0[(3-i4 >= 0 /\ i4 >= 0 /\ i5 >= 0 /\ 3-i5 >= 0 /\ -1+i1 == 0)]
	
	Blocked

	{}
	{2[T], 11[T], 12[T]}
	
Step with 3

	Trace

	0[(3-i4 >= 0 /\ i4 >= 0 /\ i5 >= 0 /\ 3-i5 >= 0 /\ -1+i1 == 0)]
	3[(-2+i1 == 0 /\ -2-i6-i4+2*i5 >= 0)]
	
	Blocked

	{}
	{2[T], 11[T], 12[T]}
	{}
	
Covered

	Trace

	0[(3-i4 >= 0 /\ i4 >= 0 /\ i5 >= 0 /\ 3-i5 >= 0 /\ -1+i1 == 0)]
	
	Blocked

	{}
	{2[T], 3[T], 11[T], 12[T]}
	
Backtrack

	Trace

	Blocked

	{0[T]}
	
Accept

Constant


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃
  Temp_Vars:  
  Locations:  l0, l1
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃) → l1(X₀, X₁, 2, X₃) :|: X₀ ≤ 3 ∧ X₁ ≤ 3 ∧ 0 ≤ X₀ ∧ 0 ≤ X₁
  t₁: l1(X₀, X₁, X₂, X₃) → l1(X₀, 1+X₁, X₂, 1+X₁) :|: 1 ≤ 0 ∧ 1+2⋅X₁ ≤ X₀+X₂
  t₂: l1(X₀, X₁, X₂, X₃) → l1(X₀, 1+X₁, X₂, 1+X₁) :|: 1+2⋅X₁ ≤ X₀+X₂
  t₃: l1(X₀, X₁, X₂, X₃) → l1(X₀, X₁-1, X₂, X₁-1) :|: 2+X₀+X₂ ≤ 2⋅X₁
  t₄: l1(X₀, X₁, X₂, X₃) → l1(X₀, X₁-1, X₂, X₁-1) :|: 1 ≤ 0 ∧ 2+X₀+X₂ ≤ 2⋅X₁
  t₅: l1(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, X₁) :|: 2⋅X₁ ≤ 1+X₀+X₂ ∧ 1 ≤ 0 ∧ X₀+X₂ ≤ 2⋅X₁
  t₆: l1(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, X₁) :|: 2⋅X₁ ≤ 1+X₀+X₂ ∧ 1 ≤ 0 ∧ X₀+X₂ ≤ 2⋅X₁


Preprocessing
  Cut unsatisfiable transition [t₁: l1→l1; t₄: l1→l1; t₅: l1→l1; t₆: l1→l1]


  Eliminate variables [X₃] that do not contribute to the problem


  Found invariant X₂ ≤ 2 ∧ X₂ ≤ 2+X₁ ∧ X₁+X₂ ≤ 5 ∧ X₂ ≤ 2+X₀ ∧ X₀+X₂ ≤ 5 ∧ 2 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ X₁ ≤ 1+X₂ ∧ 2 ≤ X₀+X₂ ∧ X₀ ≤ 1+X₂ ∧ X₁ ≤ 3 ∧ X₁ ≤ 3+X₀ ∧ X₀+X₁ ≤ 6 ∧ 0 ≤ X₁ ∧ 0 ≤ X₀+X₁ ∧ X₀ ≤ 3+X₁ ∧ X₀ ≤ 3 ∧ 0 ≤ X₀ for location l1


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  
  Locations:  l0, l1
  Return Locations:  
  Transitions:
  t₇: l0(X₀, X₁, X₂) → l1(X₀, X₁, 2) :|: X₀ ≤ 3 ∧ X₁ ≤ 3 ∧ 0 ≤ X₀ ∧ 0 ≤ X₁
  t₈: l1(X₀, X₁, X₂) → l1(X₀, 1+X₁, X₂) :|: 1+2⋅X₁ ≤ X₀+X₂ ∧ X₀+X₁ ≤ 6 ∧ X₀+X₂ ≤ 5 ∧ X₁+X₂ ≤ 5 ∧ X₁ ≤ 3+X₀ ∧ X₀ ≤ 3 ∧ X₀ ≤ 3+X₁ ∧ X₁ ≤ 3 ∧ X₂ ≤ 2+X₀ ∧ X₂ ≤ 2+X₁ ∧ X₂ ≤ 2 ∧ X₀ ≤ 1+X₂ ∧ X₁ ≤ 1+X₂ ∧ 2 ≤ X₀+X₂ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₁
  t₉: l1(X₀, X₁, X₂) → l1(X₀, X₁-1, X₂) :|: 2+X₀+X₂ ≤ 2⋅X₁ ∧ X₀+X₁ ≤ 6 ∧ X₀+X₂ ≤ 5 ∧ X₁+X₂ ≤ 5 ∧ X₁ ≤ 3+X₀ ∧ X₀ ≤ 3 ∧ X₀ ≤ 3+X₁ ∧ X₁ ≤ 3 ∧ X₂ ≤ 2+X₀ ∧ X₂ ≤ 2+X₁ ∧ X₂ ≤ 2 ∧ X₀ ≤ 1+X₂ ∧ X₁ ≤ 1+X₂ ∧ 2 ≤ X₀+X₂ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₁


MPRF for transition t₈: l1(X₀, X₁, X₂) → l1(X₀, 1+X₁, X₂) :|: 1+2⋅X₁ ≤ X₀+X₂ ∧ X₀+X₁ ≤ 6 ∧ X₀+X₂ ≤ 5 ∧ X₁+X₂ ≤ 5 ∧ X₁ ≤ 3+X₀ ∧ X₀ ≤ 3 ∧ X₀ ≤ 3+X₁ ∧ X₁ ≤ 3 ∧ X₂ ≤ 2+X₀ ∧ X₂ ≤ 2+X₁ ∧ X₂ ≤ 2 ∧ X₀ ≤ 1+X₂ ∧ X₁ ≤ 1+X₂ ∧ 2 ≤ X₀+X₂ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₁ of depth 1:
  new bound:
    7 {O(1)}

  MPRF:
    • l1: [4-X₁]




MPRF for transition t₉: l1(X₀, X₁, X₂) → l1(X₀, X₁-1, X₂) :|: 2+X₀+X₂ ≤ 2⋅X₁ ∧ X₀+X₁ ≤ 6 ∧ X₀+X₂ ≤ 5 ∧ X₁+X₂ ≤ 5 ∧ X₁ ≤ 3+X₀ ∧ X₀ ≤ 3 ∧ X₀ ≤ 3+X₁ ∧ X₁ ≤ 3 ∧ X₂ ≤ 2+X₀ ∧ X₂ ≤ 2+X₁ ∧ X₂ ≤ 2 ∧ X₀ ≤ 1+X₂ ∧ X₁ ≤ 1+X₂ ∧ 2 ≤ X₀+X₂ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₁ of depth 1:
  new bound:
    4 {O(1)}

  MPRF:
    • l1: [1+X₁]




All Bounds
Timebounds
  Overall timebound:12 {O(1)}
    t₇: 1 {O(1)}
    t₈: 7 {O(1)}
    t₉: 4 {O(1)}


Costbounds
  Overall costbound: 12 {O(1)}
    t₇: 1 {O(1)}
    t₈: 7 {O(1)}
    t₉: 4 {O(1)}


Sizebounds
    t₇, X₀: 3 {O(1)}
    t₇, X₁: 3 {O(1)}
    t₇, X₂: 2 {O(1)}
    t₈, X₀: 3 {O(1)}
    t₈, X₁: 3 {O(1)}
    t₈, X₂: 2 {O(1)}
    t₉, X₀: 2 {O(1)}
    t₉, X₁: 2 {O(1)}
    t₉, X₂: 2 {O(1)}

