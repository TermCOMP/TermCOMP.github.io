WORST_CASE(Omega(n^1),O(n^1))

# LoAT Proof:
WORST_CASE(Omega(n^1),?)

WORST_CASE(Omega(n^1),?)
Initial ITS

Start location: evalwcet2start

Location map:
LoAT_sink -> 0
evalwcet2start -> 1
evalwcet2entryin -> 2
evalwcet2bb5in -> 3
evalwcet2bb2in -> 4
evalwcet2returnin -> 5
evalwcet2bb1in -> 6
evalwcet2bb4in -> 7
evalwcet2stop -> 8

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: -2+i1 == 0 /\ i1'=3, i3'=1+i3
   2: (-3+i1 == 0 /\ 4-i4 >= 0) /\ i1'=4, i3'=1+i3, i5'=0
   3: (-3+i1 == 0 /\ -5+i4 >= 0) /\ i1'=5, i3'=1+i3
   4: (-4+i1 == 0 /\ -3+i4 >= 0 /\ 9-i5 >= 0) /\ i1'=6, i3'=1+i3
   5: (2-i4 >= 0 /\ -4+i1 == 0) /\ i1'=7, i3'=1+i3
   6: (-4+i1 == 0 /\ -10+i5 >= 0) /\ i1'=7, i3'=1+i3
   7: -6+i1 == 0 /\ i1'=4, i3'=1+i3, i5'=1+i5
   8: -7+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=1+i4
   9: -5+i1 == 0 /\ i1'=8, i3'=1+i3

Dependency graph:
0 -> 1
1 -> 2, 1 -> 3
2 -> 4, 2 -> 5, 2 -> 6
3 -> 9
4 -> 7
5 -> 8
6 -> 8
7 -> 4, 7 -> 5, 7 -> 6
8 -> 2, 8 -> 3

Chained Linear Paths

	Applied Chaining

	First rule:
	-1+i1 == 0 /\ i1'=2, i3'=1+i3
	Second rule:
	-2+i1 == 0 /\ i1'=3, i3'=1+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 0, 1
	
	Applied Chaining

	First rule:
	(-3+i1 == 0 /\ -5+i4 >= 0) /\ i1'=5, i3'=1+i3
	Second rule:
	-5+i1 == 0 /\ i1'=8, i3'=1+i3
	New rule:
	(0 == 0 /\ -3+i1 == 0 /\ -5+i4 >= 0) /\ i1'=8, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 3, 9
	
	Applied Chaining

	First rule:
	(-4+i1 == 0 /\ -3+i4 >= 0 /\ 9-i5 >= 0) /\ i1'=6, i3'=1+i3
	Second rule:
	-6+i1 == 0 /\ i1'=4, i3'=1+i3, i5'=1+i5
	New rule:
	(0 == 0 /\ -4+i1 == 0 /\ -3+i4 >= 0 /\ 9-i5 >= 0) /\ i1'=4, i3'=2+i3, i5'=1+i5
	
	Applied Deletion

	Removed the following rules: 4, 7
	
	Applied Chaining

	First rule:
	(2-i4 >= 0 /\ -4+i1 == 0) /\ i1'=7, i3'=1+i3
	Second rule:
	-7+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=1+i4
	New rule:
	(0 == 0 /\ 2-i4 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=1+i4
	
	Applied Deletion

	Removed the following rules: 5
	
	Applied Chaining

	First rule:
	(-4+i1 == 0 /\ -10+i5 >= 0) /\ i1'=7, i3'=1+i3
	Second rule:
	-7+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=1+i4
	New rule:
	(0 == 0 /\ -4+i1 == 0 /\ -10+i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i4
	
	Applied Deletion

	Removed the following rules: 6, 8

Start location: evalwcet2start

Location map:
LoAT_sink -> 0
evalwcet2start -> 1
evalwcet2entryin -> 2
evalwcet2bb5in -> 3
evalwcet2bb2in -> 4
evalwcet2returnin -> 5
evalwcet2bb1in -> 6
evalwcet2bb4in -> 7
evalwcet2stop -> 8

Rules:
   2: (-3+i1 == 0 /\ 4-i4 >= 0) /\ i1'=4, i3'=1+i3, i5'=0
  10: (0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
  11: (0 == 0 /\ -3+i1 == 0 /\ -5+i4 >= 0) /\ i1'=8, i3'=2+i3
  12: (0 == 0 /\ -4+i1 == 0 /\ -3+i4 >= 0 /\ 9-i5 >= 0) /\ i1'=4, i3'=2+i3, i5'=1+i5
  13: (0 == 0 /\ 2-i4 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=1+i4
  14: (0 == 0 /\ -4+i1 == 0 /\ -10+i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i4

Dependency graph:
2 -> 12, 2 -> 13, 2 -> 14
10 -> 2, 10 -> 11
12 -> 12, 12 -> 13, 12 -> 14
13 -> 2, 13 -> 11
14 -> 2, 14 -> 11

Preprocessed Transitions

	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	New rule:
	-1+i1 == 0 /\ i1'=3, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -3+i1 == 0 /\ -5+i4 >= 0) /\ i1'=8, i3'=2+i3
	New rule:
	(-3+i1 == 0 /\ -5+i4 >= 0) /\ i1'=8, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -4+i1 == 0 /\ -3+i4 >= 0 /\ 9-i5 >= 0) /\ i1'=4, i3'=2+i3, i5'=1+i5
	New rule:
	(-4+i1 == 0 /\ -3+i4 >= 0 /\ 9-i5 >= 0) /\ i1'=4, i3'=2+i3, i5'=1+i5
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ 2-i4 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=1+i4
	New rule:
	(2-i4 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=1+i4
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -4+i1 == 0 /\ -10+i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i4
	New rule:
	(-4+i1 == 0 /\ -10+i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i4

Start location: evalwcet2start

Location map:
LoAT_sink -> 0
evalwcet2start -> 1
evalwcet2entryin -> 2
evalwcet2bb5in -> 3
evalwcet2bb2in -> 4
evalwcet2returnin -> 5
evalwcet2bb1in -> 6
evalwcet2bb4in -> 7
evalwcet2stop -> 8

Rules:
   2: (-3+i1 == 0 /\ 4-i4 >= 0) /\ i1'=4, i3'=1+i3, i5'=0
  15: -1+i1 == 0 /\ i1'=3, i3'=2+i3
  16: (-3+i1 == 0 /\ -5+i4 >= 0) /\ i1'=8, i3'=2+i3
  17: (-4+i1 == 0 /\ -3+i4 >= 0 /\ 9-i5 >= 0) /\ i1'=4, i3'=2+i3, i5'=1+i5
  18: (2-i4 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=1+i4
  19: (-4+i1 == 0 /\ -10+i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i4

Dependency graph:
2 -> 17, 2 -> 18, 2 -> 19
15 -> 2, 15 -> 16
17 -> 17, 17 -> 18, 17 -> 19
18 -> 2, 18 -> 16
19 -> 2, 19 -> 16

Refined Dependency Graph

	Removed the following edges: 2 -> 19, 17 -> 18, 18 -> 16

Start location: evalwcet2start

Location map:
LoAT_sink -> 0
evalwcet2start -> 1
evalwcet2entryin -> 2
evalwcet2bb5in -> 3
evalwcet2bb2in -> 4
evalwcet2returnin -> 5
evalwcet2bb1in -> 6
evalwcet2bb4in -> 7
evalwcet2stop -> 8

Rules:
   2: (-3+i1 == 0 /\ 4-i4 >= 0) /\ i1'=4, i3'=1+i3, i5'=0
  15: -1+i1 == 0 /\ i1'=3, i3'=2+i3
  16: (-3+i1 == 0 /\ -5+i4 >= 0) /\ i1'=8, i3'=2+i3
  17: (-4+i1 == 0 /\ -3+i4 >= 0 /\ 9-i5 >= 0) /\ i1'=4, i3'=2+i3, i5'=1+i5
  18: (2-i4 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=1+i4
  19: (-4+i1 == 0 /\ -10+i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i4

Dependency graph:
2 -> 17, 2 -> 18
15 -> 2, 15 -> 16
17 -> 17, 17 -> 19
18 -> 2
19 -> 2, 19 -> 16

Step with 15

	Trace

	15[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 16

	Trace

	15[(-1+i1 == 0)]
	16[(-3+i1 == 0 /\ -5+i4 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Backtrack

	Trace

	15[(-1+i1 == 0)]
	
	Blocked

	{}
	{16[T]}
	
Step with 2

	Trace

	15[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ 4-i4 >= 0)]
	
	Blocked

	{}
	{16[T]}
	{}
	
Step with 17

	Trace

	15[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ 4-i4 >= 0)]
	17[(-4+i1 == 0 /\ -3+i4 >= 0 /\ 9-i5 >= 0)]
	
	Blocked

	{}
	{16[T]}
	{}
	{}
	
Accelerate

	Loop Acceleration

	Original rule:
	(-4+i1 == 0 /\ -3+i4 >= 0 /\ 9-i5 >= 0) /\ i1'=4, i3'=2+i3, i5'=1+i5
	New rule:
	(-4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+it17 >= 0 /\ 10-it17-i5 >= 0 /\ -3+i4 >= 0) /\ i1'=i1, i3'=2*it17+i3, i5'=it17+i5

		-4+i1 >= 0 [0]: unchanged
		
		4-i1 >= 0 [0]: unchanged
		
		-3+i4 >= 0 [0]: unchanged
		
		9-i5 >= 0 [0]: montonic decrease yields 10-it17-i5 >= 0
		
		Replacement map: {-4+i1 >= 0 -> -4+i1 >= 0, 4-i1 >= 0 -> 4-i1 >= 0, -3+i4 >= 0 -> -3+i4 >= 0, 9-i5 >= 0 -> 10-it17-i5 >= 0}

	Removed Trivial Updates

	Original rule:
	(-4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+it17 >= 0 /\ 10-it17-i5 >= 0 /\ -3+i4 >= 0) /\ i1'=i1, i3'=2*it17+i3, i5'=it17+i5
	New rule:
	(-4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+it17 >= 0 /\ 10-it17-i5 >= 0 /\ -3+i4 >= 0) /\ i3'=2*it17+i3, i5'=it17+i5
	
	Instantiation

	Original rule:
	(-4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+it17 >= 0 /\ 10-it17-i5 >= 0 /\ -3+i4 >= 0) /\ i3'=2*it17+i3, i5'=it17+i5
	New rule:
	(0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -3+i4 >= 0 /\ 9-i5 >= 0) /\ i3'=20+i3-2*i5, i5'=10

Start location: evalwcet2start

Location map:
LoAT_sink -> 0
evalwcet2start -> 1
evalwcet2entryin -> 2
evalwcet2bb5in -> 3
evalwcet2bb2in -> 4
evalwcet2returnin -> 5
evalwcet2bb1in -> 6
evalwcet2bb4in -> 7
evalwcet2stop -> 8

Rules:
   2: (-3+i1 == 0 /\ 4-i4 >= 0) /\ i1'=4, i3'=1+i3, i5'=0
  15: -1+i1 == 0 /\ i1'=3, i3'=2+i3
  16: (-3+i1 == 0 /\ -5+i4 >= 0) /\ i1'=8, i3'=2+i3
  17: (-4+i1 == 0 /\ -3+i4 >= 0 /\ 9-i5 >= 0) /\ i1'=4, i3'=2+i3, i5'=1+i5
  18: (2-i4 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=1+i4
  19: (-4+i1 == 0 /\ -10+i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i4
  20: (0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -3+i4 >= 0 /\ 9-i5 >= 0) /\ i3'=20+i3-2*i5, i5'=10

Dependency graph:
2 -> 17, 2 -> 18, 2 -> 20
15 -> 2, 15 -> 16
17 -> 17, 17 -> 19, 17 -> 20
18 -> 2
19 -> 2, 19 -> 16
20 -> 17, 20 -> 19

	Trace

	15[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ 4-i4 >= 0)]
	20[(0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -3+i4 >= 0 /\ 9-i5 >= 0)]
	
	Blocked

	{}
	{16[T]}
	{}
	{17[T], 20[T]}
	
Step with 19

	Trace

	15[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ 4-i4 >= 0)]
	20[(0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -3+i4 >= 0 /\ 9-i5 >= 0)]
	19[(-4+i1 == 0 /\ -10+i5 >= 0)]
	
	Blocked

	{}
	{16[T]}
	{}
	{17[T], 20[T]}
	{}
	
Accelerate

		Simplified Guard

		Original rule:
		(0 >= 0 /\ 0 == 0 /\ -3+i1 == 0 /\ 9 >= 0 /\ 4-i4 >= 0 /\ -3+i4 >= 0) /\ i1'=3, i3'=23+i3, i4'=1+i4, i5'=10
		New rule:
		(-3+i1 == 0 /\ 4-i4 >= 0 /\ -3+i4 >= 0) /\ i1'=3, i3'=23+i3, i4'=1+i4, i5'=10

	Loop Acceleration

	Original rule:
	(-3+i1 == 0 /\ 4-i4 >= 0 /\ -3+i4 >= 0) /\ i1'=3, i3'=23+i3, i4'=1+i4, i5'=10
	New rule:
	(-3+i1 >= 0 /\ -1+it26 >= 0 /\ 5-i4-it26 >= 0 /\ 3-i1 >= 0 /\ 4-i4 >= 0 /\ -3+i4 >= 0) /\ i1'=i1, i3'=i3+23*it26, i4'=i4+it26, i5'=10

		-3+i1 >= 0 [0]: unchanged
		
		3-i1 >= 0 [0]: unchanged
		
		4-i4 >= 0 [0]: montonic decrease yields (5-i4-it26 >= 0 /\ 4-i4 >= 0)
		
		-3+i4 >= 0 [0]: monotonic increase yields -3+i4 >= 0
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, 3-i1 >= 0 -> 3-i1 >= 0, 4-i4 >= 0 -> (5-i4-it26 >= 0 /\ 4-i4 >= 0), -3+i4 >= 0 -> -3+i4 >= 0}

	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ -1+it26 >= 0 /\ 5-i4-it26 >= 0 /\ 3-i1 >= 0 /\ 4-i4 >= 0 /\ -3+i4 >= 0) /\ i1'=i1, i3'=i3+23*it26, i4'=i4+it26, i5'=10
	New rule:
	(-3+i1 >= 0 /\ -1+it26 >= 0 /\ 5-i4-it26 >= 0 /\ 3-i1 >= 0 /\ 4-i4 >= 0 /\ -3+i4 >= 0) /\ i3'=i3+23*it26, i4'=i4+it26, i5'=10
	
	Instantiation

	Original rule:
	(-3+i1 >= 0 /\ -1+it26 >= 0 /\ 5-i4-it26 >= 0 /\ 3-i1 >= 0 /\ 4-i4 >= 0 /\ -3+i4 >= 0) /\ i3'=i3+23*it26, i4'=i4+it26, i5'=10
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ 4-i4 >= 0 /\ -3+i4 >= 0) /\ i3'=115+i3-23*i4, i4'=5, i5'=10

Start location: evalwcet2start

Location map:
LoAT_sink -> 0
evalwcet2start -> 1
evalwcet2entryin -> 2
evalwcet2bb5in -> 3
evalwcet2bb2in -> 4
evalwcet2returnin -> 5
evalwcet2bb1in -> 6
evalwcet2bb4in -> 7
evalwcet2stop -> 8

Rules:
   2: (-3+i1 == 0 /\ 4-i4 >= 0) /\ i1'=4, i3'=1+i3, i5'=0
  15: -1+i1 == 0 /\ i1'=3, i3'=2+i3
  16: (-3+i1 == 0 /\ -5+i4 >= 0) /\ i1'=8, i3'=2+i3
  17: (-4+i1 == 0 /\ -3+i4 >= 0 /\ 9-i5 >= 0) /\ i1'=4, i3'=2+i3, i5'=1+i5
  18: (2-i4 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=1+i4
  19: (-4+i1 == 0 /\ -10+i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i4
  20: (0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -3+i4 >= 0 /\ 9-i5 >= 0) /\ i3'=20+i3-2*i5, i5'=10
  21: (0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ 4-i4 >= 0 /\ -3+i4 >= 0) /\ i3'=115+i3-23*i4, i4'=5, i5'=10

Dependency graph:
2 -> 17, 2 -> 18, 2 -> 20
15 -> 2, 15 -> 16, 15 -> 21
17 -> 17, 17 -> 19, 17 -> 20
18 -> 2, 18 -> 21
19 -> 2, 19 -> 16, 19 -> 21
20 -> 17, 20 -> 19
21 -> 2, 21 -> 16

	Trace

	15[(-1+i1 == 0)]
	21[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ 4-i4 >= 0 /\ -3+i4 >= 0)]
	
	Blocked

	{}
	{16[T]}
	{21[T]}
	
Step with 16

	Trace

	15[(-1+i1 == 0)]
	21[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ 4-i4 >= 0 /\ -3+i4 >= 0)]
	16[(-3+i1 == 0 /\ -5+i4 >= 0)]
	
	Blocked

	{}
	{16[T]}
	{2[T], 21[T]}
	{}
	
Backtrack

	Trace

	15[(-1+i1 == 0)]
	21[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ 4-i4 >= 0 /\ -3+i4 >= 0)]
	
	Blocked

	{}
	{16[T]}
	{2[T], 16[T], 21[T]}
	
Backtrack

	Trace

	15[(-1+i1 == 0)]
	
	Blocked

	{}
	{16[T], 21[T]}
	
Step with 2

	Trace

	15[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ 4-i4 >= 0)]
	
	Blocked

	{}
	{16[T], 21[T]}
	{}
	
Step with 17

	Trace

	15[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ 4-i4 >= 0)]
	17[(-4+i1 == 0 /\ -3+i4 >= 0 /\ 9-i5 >= 0)]
	
	Blocked

	{}
	{16[T], 21[T]}
	{}
	{}
	
Covered

	Trace

	15[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ 4-i4 >= 0)]
	
	Blocked

	{}
	{16[T], 21[T]}
	{17[T]}
	
Step with 20

	Trace

	15[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ 4-i4 >= 0)]
	20[(0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -3+i4 >= 0 /\ 9-i5 >= 0)]
	
	Blocked

	{}
	{16[T], 21[T]}
	{17[T]}
	{20[T]}
	
Step with 19

	Trace

	15[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ 4-i4 >= 0)]
	20[(0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -3+i4 >= 0 /\ 9-i5 >= 0)]
	19[(-4+i1 == 0 /\ -10+i5 >= 0)]
	
	Blocked

	{}
	{16[T], 21[T]}
	{17[T]}
	{17[T], 20[T]}
	{}
	
Covered

	Trace

	15[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ 4-i4 >= 0)]
	20[(0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -3+i4 >= 0 /\ 9-i5 >= 0)]
	
	Blocked

	{}
	{16[T], 21[T]}
	{17[T]}
	{17[T], 19[T], 20[T]}
	
Backtrack

	Trace

	15[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ 4-i4 >= 0)]
	
	Blocked

	{}
	{16[T], 21[T]}
	{17[T], 20[T]}
	
Step with 18

	Trace

	15[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ 4-i4 >= 0)]
	18[(2-i4 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{16[T], 21[T]}
	{17[T], 20[T]}
	{}
	
Poly(n^1)

Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -3+i1 == 0 /\ 2-i4 >= 0 /\ 4-i4 >= 0) /\ i1'=3, i3'=3+i3, i4'=1+i4, i5'=0
		New rule:
		(-3+i1 == 0 /\ 2-i4 >= 0 /\ 4-i4 >= 0) /\ i1'=3, i3'=3+i3, i4'=1+i4, i5'=0

	Loop Acceleration

	Original rule:
	(-3+i1 == 0 /\ 2-i4 >= 0 /\ 4-i4 >= 0) /\ i1'=3, i3'=3+i3, i4'=1+i4, i5'=0
	New rule:
	(-3+i1 >= 0 /\ 2-i4 >= 0 /\ 3-i1 >= 0 /\ 4-i4 >= 0 /\ 3-i4-it83 >= 0 /\ -1+it83 >= 0) /\ i1'=i1, i3'=i3+3*it83, i4'=i4+it83, i5'=0

		-3+i1 >= 0 [0]: unchanged
		
		2-i4 >= 0 [0]: montonic decrease yields (2-i4 >= 0 /\ 3-i4-it83 >= 0)
		
		3-i1 >= 0 [0]: unchanged
		
		4-i4 >= 0 [0]: monotonic increase yields 4-i4 >= 0, dependencies: 2-i4 >= 0
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, 2-i4 >= 0 -> (2-i4 >= 0 /\ 3-i4-it83 >= 0), 3-i1 >= 0 -> 3-i1 >= 0, 4-i4 >= 0 -> 4-i4 >= 0}

	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ 2-i4 >= 0 /\ 3-i1 >= 0 /\ 4-i4 >= 0 /\ 3-i4-it83 >= 0 /\ -1+it83 >= 0) /\ i1'=i1, i3'=i3+3*it83, i4'=i4+it83, i5'=0
	New rule:
	(-3+i1 >= 0 /\ 2-i4 >= 0 /\ 3-i1 >= 0 /\ 4-i4 >= 0 /\ 3-i4-it83 >= 0 /\ -1+it83 >= 0) /\ i3'=i3+3*it83, i4'=i4+it83, i5'=0
	
	Instantiation

	Original rule:
	(-3+i1 >= 0 /\ 2-i4 >= 0 /\ 3-i1 >= 0 /\ 4-i4 >= 0 /\ 3-i4-it83 >= 0 /\ -1+it83 >= 0) /\ i3'=i3+3*it83, i4'=i4+it83, i5'=0
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ 2-i4 >= 0 /\ 3-i1 >= 0 /\ 4-i4 >= 0) /\ i3'=9+i3-3*i4, i4'=3, i5'=0

Start location: evalwcet2start

Location map:
LoAT_sink -> 0
evalwcet2start -> 1
evalwcet2entryin -> 2
evalwcet2bb5in -> 3
evalwcet2bb2in -> 4
evalwcet2returnin -> 5
evalwcet2bb1in -> 6
evalwcet2bb4in -> 7
evalwcet2stop -> 8

Rules:
   2: (-3+i1 == 0 /\ 4-i4 >= 0) /\ i1'=4, i3'=1+i3, i5'=0
  15: -1+i1 == 0 /\ i1'=3, i3'=2+i3
  16: (-3+i1 == 0 /\ -5+i4 >= 0) /\ i1'=8, i3'=2+i3
  17: (-4+i1 == 0 /\ -3+i4 >= 0 /\ 9-i5 >= 0) /\ i1'=4, i3'=2+i3, i5'=1+i5
  18: (2-i4 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=1+i4
  19: (-4+i1 == 0 /\ -10+i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i4
  20: (0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -3+i4 >= 0 /\ 9-i5 >= 0) /\ i3'=20+i3-2*i5, i5'=10
  21: (0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ 4-i4 >= 0 /\ -3+i4 >= 0) /\ i3'=115+i3-23*i4, i4'=5, i5'=10
  22: (0 >= 0 /\ -3+i1 >= 0 /\ 2-i4 >= 0 /\ 3-i1 >= 0 /\ 4-i4 >= 0) /\ i3'=9+i3-3*i4, i4'=3, i5'=0

Dependency graph:
2 -> 17, 2 -> 18, 2 -> 20
15 -> 2, 15 -> 16, 15 -> 21, 15 -> 22
17 -> 17, 17 -> 19, 17 -> 20
18 -> 2, 18 -> 21, 18 -> 22
19 -> 2, 19 -> 16, 19 -> 21, 19 -> 22
20 -> 17, 20 -> 19
21 -> 2, 21 -> 16, 21 -> 22
22 -> 2, 22 -> 21

	Trace

	15[(-1+i1 == 0)]
	22[(0 >= 0 /\ -3+i1 >= 0 /\ 2-i4 >= 0 /\ 3-i1 >= 0 /\ 4-i4 >= 0)]
	
	Blocked

	{}
	{16[T], 21[T]}
	{22[T]}
	
Step with 2

	Trace

	15[(-1+i1 == 0)]
	22[(0 >= 0 /\ -3+i1 >= 0 /\ 2-i4 >= 0 /\ 3-i1 >= 0 /\ 4-i4 >= 0)]
	2[(-3+i1 == 0 /\ 4-i4 >= 0)]
	
	Blocked

	{}
	{16[T], 21[T]}
	{22[T]}
	{}
	
Step with 20

	Trace

	15[(-1+i1 == 0)]
	22[(0 >= 0 /\ -3+i1 >= 0 /\ 2-i4 >= 0 /\ 3-i1 >= 0 /\ 4-i4 >= 0)]
	2[(-3+i1 == 0 /\ 4-i4 >= 0)]
	20[(0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -3+i4 >= 0 /\ 9-i5 >= 0)]
	
	Blocked

	{}
	{16[T], 21[T]}
	{22[T]}
	{}
	{20[T]}
	
Step with 19

	Trace

	15[(-1+i1 == 0)]
	22[(0 >= 0 /\ -3+i1 >= 0 /\ 2-i4 >= 0 /\ 3-i1 >= 0 /\ 4-i4 >= 0)]
	2[(-3+i1 == 0 /\ 4-i4 >= 0)]
	20[(0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -3+i4 >= 0 /\ 9-i5 >= 0)]
	19[(-4+i1 == 0 /\ -10+i5 >= 0)]
	
	Blocked

	{}
	{16[T], 21[T]}
	{22[T]}
	{}
	{20[T]}
	{}
	
Covered

	Trace

	15[(-1+i1 == 0)]
	22[(0 >= 0 /\ -3+i1 >= 0 /\ 2-i4 >= 0 /\ 3-i1 >= 0 /\ 4-i4 >= 0)]
	2[(-3+i1 == 0 /\ 4-i4 >= 0)]
	20[(0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -3+i4 >= 0 /\ 9-i5 >= 0)]
	
	Blocked

	{}
	{16[T], 21[T]}
	{22[T]}
	{}
	{19[T], 20[T]}
	
Backtrack

	Trace

	15[(-1+i1 == 0)]
	22[(0 >= 0 /\ -3+i1 >= 0 /\ 2-i4 >= 0 /\ 3-i1 >= 0 /\ 4-i4 >= 0)]
	2[(-3+i1 == 0 /\ 4-i4 >= 0)]
	
	Blocked

	{}
	{16[T], 21[T]}
	{22[T]}
	{20[T]}
	
Step with 17

	Trace

	15[(-1+i1 == 0)]
	22[(0 >= 0 /\ -3+i1 >= 0 /\ 2-i4 >= 0 /\ 3-i1 >= 0 /\ 4-i4 >= 0)]
	2[(-3+i1 == 0 /\ 4-i4 >= 0)]
	17[(-4+i1 == 0 /\ -3+i4 >= 0 /\ 9-i5 >= 0)]
	
	Blocked

	{}
	{16[T], 21[T]}
	{22[T]}
	{20[T]}
	{}
	
Covered

	Trace

	15[(-1+i1 == 0)]
	22[(0 >= 0 /\ -3+i1 >= 0 /\ 2-i4 >= 0 /\ 3-i1 >= 0 /\ 4-i4 >= 0)]
	2[(-3+i1 == 0 /\ 4-i4 >= 0)]
	
	Blocked

	{}
	{16[T], 21[T]}
	{22[T]}
	{17[T], 20[T]}
	
Backtrack

	Trace

	15[(-1+i1 == 0)]
	22[(0 >= 0 /\ -3+i1 >= 0 /\ 2-i4 >= 0 /\ 3-i1 >= 0 /\ 4-i4 >= 0)]
	
	Blocked

	{}
	{16[T], 21[T]}
	{2[T], 22[T]}
	
Step with 21

	Trace

	15[(-1+i1 == 0)]
	22[(0 >= 0 /\ -3+i1 >= 0 /\ 2-i4 >= 0 /\ 3-i1 >= 0 /\ 4-i4 >= 0)]
	21[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ 4-i4 >= 0 /\ -3+i4 >= 0)]
	
	Blocked

	{}
	{16[T], 21[T]}
	{2[T], 22[T]}
	{21[T]}
	
Step with 16

	Trace

	15[(-1+i1 == 0)]
	22[(0 >= 0 /\ -3+i1 >= 0 /\ 2-i4 >= 0 /\ 3-i1 >= 0 /\ 4-i4 >= 0)]
	21[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ 4-i4 >= 0 /\ -3+i4 >= 0)]
	16[(-3+i1 == 0 /\ -5+i4 >= 0)]
	
	Blocked

	{}
	{16[T], 21[T]}
	{2[T], 22[T]}
	{2[T], 21[T], 22[T]}
	{}
	
Backtrack

	Trace

	15[(-1+i1 == 0)]
	22[(0 >= 0 /\ -3+i1 >= 0 /\ 2-i4 >= 0 /\ 3-i1 >= 0 /\ 4-i4 >= 0)]
	21[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ 4-i4 >= 0 /\ -3+i4 >= 0)]
	
	Blocked

	{}
	{16[T], 21[T]}
	{2[T], 22[T]}
	{2[T], 16[T], 21[T], 22[T]}
	
Backtrack

	Trace

	15[(-1+i1 == 0)]
	22[(0 >= 0 /\ -3+i1 >= 0 /\ 2-i4 >= 0 /\ 3-i1 >= 0 /\ 4-i4 >= 0)]
	
	Blocked

	{}
	{16[T], 21[T]}
	{2[T], 21[T], 22[T]}
	
Backtrack

	Trace

	15[(-1+i1 == 0)]
	
	Blocked

	{}
	{16[T], 21[T], 22[T]}
	
Step with 2

	Trace

	15[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ 4-i4 >= 0)]
	
	Blocked

	{}
	{16[T], 21[T], 22[T]}
	{}
	
Step with 17

	Trace

	15[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ 4-i4 >= 0)]
	17[(-4+i1 == 0 /\ -3+i4 >= 0 /\ 9-i5 >= 0)]
	
	Blocked

	{}
	{16[T], 21[T], 22[T]}
	{}
	{}
	
Covered

	Trace

	15[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ 4-i4 >= 0)]
	
	Blocked

	{}
	{16[T], 21[T], 22[T]}
	{17[T]}
	
Step with 20

	Trace

	15[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ 4-i4 >= 0)]
	20[(0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -3+i4 >= 0 /\ 9-i5 >= 0)]
	
	Blocked

	{}
	{16[T], 21[T], 22[T]}
	{17[T]}
	{20[T]}
	
Step with 19

	Trace

	15[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ 4-i4 >= 0)]
	20[(0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -3+i4 >= 0 /\ 9-i5 >= 0)]
	19[(-4+i1 == 0 /\ -10+i5 >= 0)]
	
	Blocked

	{}
	{16[T], 21[T], 22[T]}
	{17[T]}
	{20[T]}
	{}
	
Covered

	Trace

	15[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ 4-i4 >= 0)]
	20[(0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -3+i4 >= 0 /\ 9-i5 >= 0)]
	
	Blocked

	{}
	{16[T], 21[T], 22[T]}
	{17[T]}
	{19[T], 20[T]}
	
Backtrack

	Trace

	15[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ 4-i4 >= 0)]
	
	Blocked

	{}
	{16[T], 21[T], 22[T]}
	{17[T], 20[T]}
	
Step with 18

	Trace

	15[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ 4-i4 >= 0)]
	18[(2-i4 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{16[T], 21[T], 22[T]}
	{17[T], 20[T]}
	{}
	
Covered

	Trace

	15[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ 4-i4 >= 0)]
	
	Blocked

	{}
	{16[T], 21[T], 22[T]}
	{17[T], 18[T], 20[T]}
	
Backtrack

	Trace

	15[(-1+i1 == 0)]
	
	Blocked

	{}
	{2[T], 16[T], 21[T], 22[T]}
	
Backtrack

	Trace

	Blocked

	{15[T]}
	
Accept

Poly(n^1)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁
  Temp_Vars:  
  Locations:  l0, l1, l2, l3, l4, l5, l6, l7
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁) → l6(X₀, X₁)
  t₄: l1(X₀, X₁) → l2(X₀, X₁) :|: X₁ ≤ 9 ∧ 3 ≤ X₀
  t₅: l1(X₀, X₁) → l3(X₀, X₁) :|: X₀ ≤ 2
  t₆: l1(X₀, X₁) → l3(X₀, X₁) :|: 10 ≤ X₁
  t₇: l2(X₀, X₁) → l1(X₀, 1+X₁)
  t₈: l3(X₀, X₁) → l4(1+X₀, X₁)
  t₂: l4(X₀, X₁) → l1(X₀, 0) :|: X₀ ≤ 4
  t₃: l4(X₀, X₁) → l5(X₀, X₁) :|: 5 ≤ X₀
  t₉: l5(X₀, X₁) → l7(X₀, X₁)
  t₁: l6(X₀, X₁) → l4(X₀, X₁)


Preprocessing
  Found invariant X₁ ≤ 9 ∧ X₁ ≤ 6+X₀ ∧ X₀+X₁ ≤ 13 ∧ 0 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ X₀ ≤ 4+X₁ ∧ X₀ ≤ 4 ∧ 3 ≤ X₀ for location l2


  Found invariant 5 ≤ X₀ for location l7


  Found invariant 5 ≤ X₀ for location l5


  Found invariant 0 ≤ X₁ ∧ X₀ ≤ 4+X₁ ∧ X₀ ≤ 4 for location l1


  Found invariant 0 ≤ X₁ ∧ X₀ ≤ 2+X₁ ∧ X₀ ≤ 4 for location l3


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁
  Temp_Vars:  
  Locations:  l0, l1, l2, l3, l4, l5, l6, l7
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁) → l6(X₀, X₁)
  t₄: l1(X₀, X₁) → l2(X₀, X₁) :|: X₁ ≤ 9 ∧ 3 ≤ X₀ ∧ X₀ ≤ 4 ∧ X₀ ≤ 4+X₁ ∧ 0 ≤ X₁
  t₅: l1(X₀, X₁) → l3(X₀, X₁) :|: X₀ ≤ 2 ∧ X₀ ≤ 4 ∧ X₀ ≤ 4+X₁ ∧ 0 ≤ X₁
  t₆: l1(X₀, X₁) → l3(X₀, X₁) :|: 10 ≤ X₁ ∧ X₀ ≤ 4 ∧ X₀ ≤ 4+X₁ ∧ 0 ≤ X₁
  t₇: l2(X₀, X₁) → l1(X₀, 1+X₁) :|: X₀+X₁ ≤ 13 ∧ X₁ ≤ 9 ∧ X₁ ≤ 6+X₀ ∧ X₀ ≤ 4 ∧ X₀ ≤ 4+X₁ ∧ 3 ≤ X₀ ∧ 3 ≤ X₀+X₁ ∧ 0 ≤ X₁
  t₈: l3(X₀, X₁) → l4(1+X₀, X₁) :|: X₀ ≤ 4 ∧ X₀ ≤ 2+X₁ ∧ 0 ≤ X₁
  t₂: l4(X₀, X₁) → l1(X₀, 0) :|: X₀ ≤ 4
  t₃: l4(X₀, X₁) → l5(X₀, X₁) :|: 5 ≤ X₀
  t₉: l5(X₀, X₁) → l7(X₀, X₁) :|: 5 ≤ X₀
  t₁: l6(X₀, X₁) → l4(X₀, X₁)


MPRF for transition t₂: l4(X₀, X₁) → l1(X₀, 0) :|: X₀ ≤ 4 of depth 1:
  new bound:
    X₀+5 {O(n)}

  MPRF:
    • l1: [4-X₀]
    • l2: [4-X₀]
    • l3: [4-X₀]
    • l4: [5-X₀]




MPRF for transition t₅: l1(X₀, X₁) → l3(X₀, X₁) :|: X₀ ≤ 2 ∧ X₀ ≤ 4 ∧ X₀ ≤ 4+X₁ ∧ 0 ≤ X₁ of depth 1:
  new bound:
    X₀+5 {O(n)}

  MPRF:
    • l1: [5-X₀]
    • l2: [5-X₀]
    • l3: [4-X₀]
    • l4: [5-X₀]




MPRF for transition t₆: l1(X₀, X₁) → l3(X₀, X₁) :|: 10 ≤ X₁ ∧ X₀ ≤ 4 ∧ X₀ ≤ 4+X₁ ∧ 0 ≤ X₁ of depth 1:
  new bound:
    X₀+5 {O(n)}

  MPRF:
    • l1: [5-X₀]
    • l2: [5-X₀]
    • l3: [4-X₀]
    • l4: [5-X₀]




MPRF for transition t₈: l3(X₀, X₁) → l4(1+X₀, X₁) :|: X₀ ≤ 4 ∧ X₀ ≤ 2+X₁ ∧ 0 ≤ X₁ of depth 1:
  new bound:
    X₀+5 {O(n)}

  MPRF:
    • l1: [5-X₀]
    • l2: [5-X₀]
    • l3: [5-X₀]
    • l4: [5-X₀]




MPRF for transition t₄: l1(X₀, X₁) → l2(X₀, X₁) :|: X₁ ≤ 9 ∧ 3 ≤ X₀ ∧ X₀ ≤ 4 ∧ X₀ ≤ 4+X₁ ∧ 0 ≤ X₁ of depth 1:
  new bound:
    10⋅X₀+60 {O(n)}

  MPRF:
    • l1: [10-X₁]
    • l2: [9-X₁]
    • l3: [-X₁]
    • l4: [10]




MPRF for transition t₇: l2(X₀, X₁) → l1(X₀, 1+X₁) :|: X₀+X₁ ≤ 13 ∧ X₁ ≤ 9 ∧ X₁ ≤ 6+X₀ ∧ X₀ ≤ 4 ∧ X₀ ≤ 4+X₁ ∧ 3 ≤ X₀ ∧ 3 ≤ X₀+X₁ ∧ 0 ≤ X₁ of depth 1:
  new bound:
    10⋅X₀+60 {O(n)}

  MPRF:
    • l1: [10-X₁]
    • l2: [10-X₁]
    • l3: [-X₁]
    • l4: [10]




All Bounds
Timebounds
  Overall timebound:24⋅X₀+144 {O(n)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: X₀+5 {O(n)}
    t₃: 1 {O(1)}
    t₄: 10⋅X₀+60 {O(n)}
    t₅: X₀+5 {O(n)}
    t₆: X₀+5 {O(n)}
    t₇: 10⋅X₀+60 {O(n)}
    t₈: X₀+5 {O(n)}
    t₉: 1 {O(1)}


Costbounds
  Overall costbound: 24⋅X₀+144 {O(n)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: X₀+5 {O(n)}
    t₃: 1 {O(1)}
    t₄: 10⋅X₀+60 {O(n)}
    t₅: X₀+5 {O(n)}
    t₆: X₀+5 {O(n)}
    t₇: 10⋅X₀+60 {O(n)}
    t₈: X₀+5 {O(n)}
    t₉: 1 {O(1)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₁, X₀: X₀ {O(n)}
    t₁, X₁: X₁ {O(n)}
    t₂, X₀: 2⋅X₀+9 {O(n)}
    t₂, X₁: 0 {O(1)}
    t₃, X₀: 3⋅X₀+9 {O(n)}
    t₃, X₁: X₁+10 {O(n)}
    t₄, X₀: 4 {O(1)}
    t₄, X₁: 9 {O(1)}
    t₅, X₀: 2⋅X₀+9 {O(n)}
    t₅, X₁: 0 {O(1)}
    t₆, X₀: 4 {O(1)}
    t₆, X₁: 10 {O(1)}
    t₇, X₀: 4 {O(1)}
    t₇, X₁: 10 {O(1)}
    t₈, X₀: 2⋅X₀+9 {O(n)}
    t₈, X₁: 10 {O(1)}
    t₉, X₀: 3⋅X₀+9 {O(n)}
    t₉, X₁: X₁+10 {O(n)}

