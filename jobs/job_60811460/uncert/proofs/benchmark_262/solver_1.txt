WORST_CASE(?,O(1))

# LoAT Proof:
Initial ITS

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f4 -> 2
f5 -> 3
f11 -> 4
f14 -> 5

Rules:
   0: (-1-it2 >= 0 /\ -2+i1 == 0) /\ i1'=3, i3'=1+i3
   1: -2+i1 == 0 /\ i1'=3, i3'=1+i3
   2: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=0
   3: (-3+i1 == 0 /\ -3+i4 >= 0) /\ i1'=4, i3'=1+i3
   4: -2+i1 == 0 /\ i1'=4, i3'=1+i3
   5: (-3+i1 == 0 /\ 2-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
   6: (1-i4 >= 0 /\ -4+i1 == 0) /\ i1'=5, i3'=1+i3
   7: (-4+i1 == 0 /\ -2+i4 >= 0) /\ i1'=5, i3'=1+i3

Dependency graph:
0 -> 3, 0 -> 5
1 -> 3, 1 -> 5
2 -> 0, 2 -> 1, 2 -> 4
3 -> 6, 3 -> 7
4 -> 6, 4 -> 7
5 -> 0, 5 -> 1, 5 -> 4

Preprocessed Transitions

	Eliminated Temporary Variables

	Original rule:
	(-1-it2 >= 0 /\ -2+i1 == 0) /\ i1'=3, i3'=1+i3
	New rule:
	(-2+i1 == 0) /\ i1'=3, i3'=1+i3

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f4 -> 2
f5 -> 3
f11 -> 4
f14 -> 5

Rules:
   1: -2+i1 == 0 /\ i1'=3, i3'=1+i3
   2: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=0
   3: (-3+i1 == 0 /\ -3+i4 >= 0) /\ i1'=4, i3'=1+i3
   4: -2+i1 == 0 /\ i1'=4, i3'=1+i3
   5: (-3+i1 == 0 /\ 2-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
   6: (1-i4 >= 0 /\ -4+i1 == 0) /\ i1'=5, i3'=1+i3
   7: (-4+i1 == 0 /\ -2+i4 >= 0) /\ i1'=5, i3'=1+i3
   8: (-2+i1 == 0) /\ i1'=3, i3'=1+i3

Dependency graph:
1 -> 3, 1 -> 5
2 -> 1, 2 -> 4, 2 -> 8
3 -> 6, 3 -> 7
4 -> 6, 4 -> 7
5 -> 1, 5 -> 4, 5 -> 8
8 -> 3, 8 -> 5

Refined Dependency Graph

	Removed the following edges: 3 -> 6

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f4 -> 2
f5 -> 3
f11 -> 4
f14 -> 5

Rules:
   1: -2+i1 == 0 /\ i1'=3, i3'=1+i3
   2: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=0
   3: (-3+i1 == 0 /\ -3+i4 >= 0) /\ i1'=4, i3'=1+i3
   4: -2+i1 == 0 /\ i1'=4, i3'=1+i3
   5: (-3+i1 == 0 /\ 2-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
   6: (1-i4 >= 0 /\ -4+i1 == 0) /\ i1'=5, i3'=1+i3
   7: (-4+i1 == 0 /\ -2+i4 >= 0) /\ i1'=5, i3'=1+i3
   8: (-2+i1 == 0) /\ i1'=3, i3'=1+i3

Dependency graph:
1 -> 3, 1 -> 5
2 -> 1, 2 -> 4, 2 -> 8
3 -> 7
4 -> 6, 4 -> 7
5 -> 1, 5 -> 4, 5 -> 8
8 -> 3, 8 -> 5

Step with 2

	Trace

	2[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 8

	Trace

	2[(-1+i1 == 0)]
	8[(-2+i1 == 0)]
	
	Blocked

	{}
	{}
	{}
	
Step with 5

	Trace

	2[(-1+i1 == 0)]
	8[(-2+i1 == 0)]
	5[(-3+i1 == 0 /\ 2-i4 >= 0)]
	
	Blocked

	{}
	{}
	{}
	{}
	
Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -2+i1 == 0 /\ 2-i4 >= 0) /\ i1'=2, i3'=2+i3, i4'=1+i4
		New rule:
		(-2+i1 == 0 /\ 2-i4 >= 0) /\ i1'=2, i3'=2+i3, i4'=1+i4

	Loop Acceleration

	Original rule:
	(-2+i1 == 0 /\ 2-i4 >= 0) /\ i1'=2, i3'=2+i3, i4'=1+i4
	New rule:
	(-2+i1 >= 0 /\ -1+it12 >= 0 /\ 3-it12-i4 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+2*it12, i4'=it12+i4

		-2+i1 >= 0 [0]: unchanged
		
		2-i4 >= 0 [0]: montonic decrease yields 3-it12-i4 >= 0
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, 2-i4 >= 0 -> 3-it12-i4 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-2+i1 >= 0 /\ -1+it12 >= 0 /\ 3-it12-i4 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+2*it12, i4'=it12+i4
	New rule:
	(-2+i1 >= 0 /\ -1+it12 >= 0 /\ 3-it12-i4 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+2*it12, i4'=it12+i4
	
	Instantiation

	Original rule:
	(-2+i1 >= 0 /\ -1+it12 >= 0 /\ 3-it12-i4 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+2*it12, i4'=it12+i4
	New rule:
	(0 >= 0 /\ -2+i1 >= 0 /\ 2-i4 >= 0 /\ 2-i1 >= 0) /\ i3'=6+i3-2*i4, i4'=3

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f4 -> 2
f5 -> 3
f11 -> 4
f14 -> 5

Rules:
   1: -2+i1 == 0 /\ i1'=3, i3'=1+i3
   2: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=0
   3: (-3+i1 == 0 /\ -3+i4 >= 0) /\ i1'=4, i3'=1+i3
   4: -2+i1 == 0 /\ i1'=4, i3'=1+i3
   5: (-3+i1 == 0 /\ 2-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
   6: (1-i4 >= 0 /\ -4+i1 == 0) /\ i1'=5, i3'=1+i3
   7: (-4+i1 == 0 /\ -2+i4 >= 0) /\ i1'=5, i3'=1+i3
   8: (-2+i1 == 0) /\ i1'=3, i3'=1+i3
   9: (0 >= 0 /\ -2+i1 >= 0 /\ 2-i4 >= 0 /\ 2-i1 >= 0) /\ i3'=6+i3-2*i4, i4'=3

Dependency graph:
1 -> 3, 1 -> 5
2 -> 1, 2 -> 4, 2 -> 8, 2 -> 9
3 -> 7
4 -> 6, 4 -> 7
5 -> 1, 5 -> 4, 5 -> 8, 5 -> 9
8 -> 3, 8 -> 5
9 -> 1, 9 -> 4, 9 -> 8

	Trace

	2[(-1+i1 == 0)]
	9[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i4 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{}
	{9[T]}
	
Step with 1

	Trace

	2[(-1+i1 == 0)]
	9[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i4 >= 0 /\ 2-i1 >= 0)]
	1[(-2+i1 == 0)]
	
	Blocked

	{}
	{}
	{9[T]}
	{}
	
Step with 3

	Trace

	2[(-1+i1 == 0)]
	9[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i4 >= 0 /\ 2-i1 >= 0)]
	1[(-2+i1 == 0)]
	3[(-3+i1 == 0 /\ -3+i4 >= 0)]
	
	Blocked

	{}
	{}
	{9[T]}
	{5[T]}
	{}
	
Step with 7

	Trace

	2[(-1+i1 == 0)]
	9[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i4 >= 0 /\ 2-i1 >= 0)]
	1[(-2+i1 == 0)]
	3[(-3+i1 == 0 /\ -3+i4 >= 0)]
	7[(-4+i1 == 0 /\ -2+i4 >= 0)]
	
	Blocked

	{}
	{}
	{9[T]}
	{5[T]}
	{}
	{}
	
Backtrack

	Trace

	2[(-1+i1 == 0)]
	9[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i4 >= 0 /\ 2-i1 >= 0)]
	1[(-2+i1 == 0)]
	3[(-3+i1 == 0 /\ -3+i4 >= 0)]
	
	Blocked

	{}
	{}
	{9[T]}
	{5[T]}
	{7[T]}
	
Backtrack

	Trace

	2[(-1+i1 == 0)]
	9[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i4 >= 0 /\ 2-i1 >= 0)]
	1[(-2+i1 == 0)]
	
	Blocked

	{}
	{}
	{9[T]}
	{3[T], 5[T]}
	
Backtrack

	Trace

	2[(-1+i1 == 0)]
	9[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i4 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{}
	{1[T], 9[T]}
	
Step with 4

	Trace

	2[(-1+i1 == 0)]
	9[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i4 >= 0 /\ 2-i1 >= 0)]
	4[(-2+i1 == 0)]
	
	Blocked

	{}
	{}
	{1[T], 9[T]}
	{}
	
Step with 7

	Trace

	2[(-1+i1 == 0)]
	9[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i4 >= 0 /\ 2-i1 >= 0)]
	4[(-2+i1 == 0)]
	7[(-4+i1 == 0 /\ -2+i4 >= 0)]
	
	Blocked

	{}
	{}
	{1[T], 9[T]}
	{}
	{}
	
Backtrack

	Trace

	2[(-1+i1 == 0)]
	9[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i4 >= 0 /\ 2-i1 >= 0)]
	4[(-2+i1 == 0)]
	
	Blocked

	{}
	{}
	{1[T], 9[T]}
	{7[T]}
	
Backtrack

	Trace

	2[(-1+i1 == 0)]
	9[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i4 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{}
	{1[T], 4[T], 9[T]}
	
Step with 8

	Trace

	2[(-1+i1 == 0)]
	9[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i4 >= 0 /\ 2-i1 >= 0)]
	8[(-2+i1 == 0)]
	
	Blocked

	{}
	{}
	{1[T], 4[T], 9[T]}
	{}
	
Step with 3

	Trace

	2[(-1+i1 == 0)]
	9[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i4 >= 0 /\ 2-i1 >= 0)]
	8[(-2+i1 == 0)]
	3[(-3+i1 == 0 /\ -3+i4 >= 0)]
	
	Blocked

	{}
	{}
	{1[T], 4[T], 9[T]}
	{}
	{}
	
Step with 7

	Trace

	2[(-1+i1 == 0)]
	9[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i4 >= 0 /\ 2-i1 >= 0)]
	8[(-2+i1 == 0)]
	3[(-3+i1 == 0 /\ -3+i4 >= 0)]
	7[(-4+i1 == 0 /\ -2+i4 >= 0)]
	
	Blocked

	{}
	{}
	{1[T], 4[T], 9[T]}
	{}
	{}
	{}
	
Backtrack

	Trace

	2[(-1+i1 == 0)]
	9[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i4 >= 0 /\ 2-i1 >= 0)]
	8[(-2+i1 == 0)]
	3[(-3+i1 == 0 /\ -3+i4 >= 0)]
	
	Blocked

	{}
	{}
	{1[T], 4[T], 9[T]}
	{}
	{7[T]}
	
Backtrack

	Trace

	2[(-1+i1 == 0)]
	9[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i4 >= 0 /\ 2-i1 >= 0)]
	8[(-2+i1 == 0)]
	
	Blocked

	{}
	{}
	{1[T], 4[T], 9[T]}
	{3[T]}
	
Backtrack

	Trace

	2[(-1+i1 == 0)]
	9[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i4 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{}
	{1[T], 4[T], 8[T], 9[T]}
	
Backtrack

	Trace

	2[(-1+i1 == 0)]
	
	Blocked

	{}
	{9[T]}
	
Step with 4

	Trace

	2[(-1+i1 == 0)]
	4[(-2+i1 == 0)]
	
	Blocked

	{}
	{9[T]}
	{}
	
Step with 6

	Trace

	2[(-1+i1 == 0)]
	4[(-2+i1 == 0)]
	6[(1-i4 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{9[T]}
	{7[T]}
	{}
	
Backtrack

	Trace

	2[(-1+i1 == 0)]
	4[(-2+i1 == 0)]
	
	Blocked

	{}
	{9[T]}
	{6[T], 7[T]}
	
Backtrack

	Trace

	2[(-1+i1 == 0)]
	
	Blocked

	{}
	{4[T], 9[T]}
	
Step with 1

	Trace

	2[(-1+i1 == 0)]
	1[(-2+i1 == 0)]
	
	Blocked

	{}
	{4[T], 9[T]}
	{}
	
Step with 5

	Trace

	2[(-1+i1 == 0)]
	1[(-2+i1 == 0)]
	5[(-3+i1 == 0 /\ 2-i4 >= 0)]
	
	Blocked

	{}
	{4[T], 9[T]}
	{}
	{}
	
Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -2+i1 == 0 /\ 2-i4 >= 0) /\ i1'=2, i3'=2+i3, i4'=1+i4
		New rule:
		(-2+i1 == 0 /\ 2-i4 >= 0) /\ i1'=2, i3'=2+i3, i4'=1+i4

	Loop Acceleration

	Original rule:
	(-2+i1 == 0 /\ 2-i4 >= 0) /\ i1'=2, i3'=2+i3, i4'=1+i4
	New rule:
	(3-i4-it52 >= 0 /\ -1+it52 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+2*it52, i4'=i4+it52

		-2+i1 >= 0 [0]: unchanged
		
		2-i4 >= 0 [0]: montonic decrease yields 3-i4-it52 >= 0
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, 2-i4 >= 0 -> 3-i4-it52 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(3-i4-it52 >= 0 /\ -1+it52 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+2*it52, i4'=i4+it52
	New rule:
	(3-i4-it52 >= 0 /\ -1+it52 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+2*it52, i4'=i4+it52
	
	Instantiation

	Original rule:
	(3-i4-it52 >= 0 /\ -1+it52 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+2*it52, i4'=i4+it52
	New rule:
	(0 >= 0 /\ -2+i1 >= 0 /\ 2-i4 >= 0 /\ 2-i1 >= 0) /\ i3'=6+i3-2*i4, i4'=3

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f4 -> 2
f5 -> 3
f11 -> 4
f14 -> 5

Rules:
   1: -2+i1 == 0 /\ i1'=3, i3'=1+i3
   2: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=0
   3: (-3+i1 == 0 /\ -3+i4 >= 0) /\ i1'=4, i3'=1+i3
   4: -2+i1 == 0 /\ i1'=4, i3'=1+i3
   5: (-3+i1 == 0 /\ 2-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
   6: (1-i4 >= 0 /\ -4+i1 == 0) /\ i1'=5, i3'=1+i3
   7: (-4+i1 == 0 /\ -2+i4 >= 0) /\ i1'=5, i3'=1+i3
   8: (-2+i1 == 0) /\ i1'=3, i3'=1+i3
   9: (0 >= 0 /\ -2+i1 >= 0 /\ 2-i4 >= 0 /\ 2-i1 >= 0) /\ i3'=6+i3-2*i4, i4'=3
  10: (0 >= 0 /\ -2+i1 >= 0 /\ 2-i4 >= 0 /\ 2-i1 >= 0) /\ i3'=6+i3-2*i4, i4'=3

Dependency graph:
1 -> 3, 1 -> 5
2 -> 1, 2 -> 4, 2 -> 8, 2 -> 9, 2 -> 10
3 -> 7
4 -> 6, 4 -> 7
5 -> 1, 5 -> 4, 5 -> 8, 5 -> 9, 5 -> 10
8 -> 3, 8 -> 5
9 -> 1, 9 -> 4, 9 -> 8, 9 -> 10
10 -> 1, 10 -> 4, 10 -> 8, 10 -> 9

	Trace

	2[(-1+i1 == 0)]
	10[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i4 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{4[T], 9[T]}
	{10[T]}
	
Step with 4

	Trace

	2[(-1+i1 == 0)]
	10[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i4 >= 0 /\ 2-i1 >= 0)]
	4[(-2+i1 == 0)]
	
	Blocked

	{}
	{4[T], 9[T]}
	{10[T]}
	{}
	
Step with 7

	Trace

	2[(-1+i1 == 0)]
	10[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i4 >= 0 /\ 2-i1 >= 0)]
	4[(-2+i1 == 0)]
	7[(-4+i1 == 0 /\ -2+i4 >= 0)]
	
	Blocked

	{}
	{4[T], 9[T]}
	{10[T]}
	{6[T]}
	{}
	
Backtrack

	Trace

	2[(-1+i1 == 0)]
	10[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i4 >= 0 /\ 2-i1 >= 0)]
	4[(-2+i1 == 0)]
	
	Blocked

	{}
	{4[T], 9[T]}
	{10[T]}
	{6[T], 7[T]}
	
Backtrack

	Trace

	2[(-1+i1 == 0)]
	10[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i4 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{4[T], 9[T]}
	{4[T], 10[T]}
	
Step with 1

	Trace

	2[(-1+i1 == 0)]
	10[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i4 >= 0 /\ 2-i1 >= 0)]
	1[(-2+i1 == 0)]
	
	Blocked

	{}
	{4[T], 9[T]}
	{4[T], 10[T]}
	{}
	
Step with 3

	Trace

	2[(-1+i1 == 0)]
	10[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i4 >= 0 /\ 2-i1 >= 0)]
	1[(-2+i1 == 0)]
	3[(-3+i1 == 0 /\ -3+i4 >= 0)]
	
	Blocked

	{}
	{4[T], 9[T]}
	{4[T], 10[T]}
	{}
	{}
	
Step with 7

	Trace

	2[(-1+i1 == 0)]
	10[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i4 >= 0 /\ 2-i1 >= 0)]
	1[(-2+i1 == 0)]
	3[(-3+i1 == 0 /\ -3+i4 >= 0)]
	7[(-4+i1 == 0 /\ -2+i4 >= 0)]
	
	Blocked

	{}
	{4[T], 9[T]}
	{4[T], 10[T]}
	{}
	{}
	{}
	
Backtrack

	Trace

	2[(-1+i1 == 0)]
	10[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i4 >= 0 /\ 2-i1 >= 0)]
	1[(-2+i1 == 0)]
	3[(-3+i1 == 0 /\ -3+i4 >= 0)]
	
	Blocked

	{}
	{4[T], 9[T]}
	{4[T], 10[T]}
	{}
	{7[T]}
	
Backtrack

	Trace

	2[(-1+i1 == 0)]
	10[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i4 >= 0 /\ 2-i1 >= 0)]
	1[(-2+i1 == 0)]
	
	Blocked

	{}
	{4[T], 9[T]}
	{4[T], 10[T]}
	{3[T]}
	
Backtrack

	Trace

	2[(-1+i1 == 0)]
	10[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i4 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{4[T], 9[T]}
	{1[T], 4[T], 10[T]}
	
Step with 8

	Trace

	2[(-1+i1 == 0)]
	10[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i4 >= 0 /\ 2-i1 >= 0)]
	8[(-2+i1 == 0)]
	
	Blocked

	{}
	{4[T], 9[T]}
	{1[T], 4[T], 9[T], 10[T]}
	{}
	
Step with 3

	Trace

	2[(-1+i1 == 0)]
	10[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i4 >= 0 /\ 2-i1 >= 0)]
	8[(-2+i1 == 0)]
	3[(-3+i1 == 0 /\ -3+i4 >= 0)]
	
	Blocked

	{}
	{4[T], 9[T]}
	{1[T], 4[T], 9[T], 10[T]}
	{}
	{}
	
Step with 7

	Trace

	2[(-1+i1 == 0)]
	10[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i4 >= 0 /\ 2-i1 >= 0)]
	8[(-2+i1 == 0)]
	3[(-3+i1 == 0 /\ -3+i4 >= 0)]
	7[(-4+i1 == 0 /\ -2+i4 >= 0)]
	
	Blocked

	{}
	{4[T], 9[T]}
	{1[T], 4[T], 9[T], 10[T]}
	{}
	{}
	{}
	
Backtrack

	Trace

	2[(-1+i1 == 0)]
	10[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i4 >= 0 /\ 2-i1 >= 0)]
	8[(-2+i1 == 0)]
	3[(-3+i1 == 0 /\ -3+i4 >= 0)]
	
	Blocked

	{}
	{4[T], 9[T]}
	{1[T], 4[T], 9[T], 10[T]}
	{}
	{7[T]}
	
Backtrack

	Trace

	2[(-1+i1 == 0)]
	10[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i4 >= 0 /\ 2-i1 >= 0)]
	8[(-2+i1 == 0)]
	
	Blocked

	{}
	{4[T], 9[T]}
	{1[T], 4[T], 9[T], 10[T]}
	{3[T]}
	
Backtrack

	Trace

	2[(-1+i1 == 0)]
	10[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i4 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{4[T], 9[T]}
	{1[T], 4[T], 8[T], 9[T], 10[T]}
	
Backtrack

	Trace

	2[(-1+i1 == 0)]
	
	Blocked

	{}
	{4[T], 9[T], 10[T]}
	
Step with 8

	Trace

	2[(-1+i1 == 0)]
	8[(-2+i1 == 0)]
	
	Blocked

	{}
	{4[T], 9[T], 10[T]}
	{}
	
Step with 5

	Trace

	2[(-1+i1 == 0)]
	8[(-2+i1 == 0)]
	5[(-3+i1 == 0 /\ 2-i4 >= 0)]
	
	Blocked

	{}
	{4[T], 9[T], 10[T]}
	{}
	{}
	
Covered

	Trace

	2[(-1+i1 == 0)]
	8[(-2+i1 == 0)]
	
	Blocked

	{}
	{4[T], 9[T], 10[T]}
	{5[T]}
	
Backtrack

	Trace

	2[(-1+i1 == 0)]
	
	Blocked

	{}
	{4[T], 8[T], 9[T], 10[T]}
	
Step with 1

	Trace

	2[(-1+i1 == 0)]
	1[(-2+i1 == 0)]
	
	Blocked

	{}
	{4[T], 8[T], 9[T], 10[T]}
	{}
	
Step with 5

	Trace

	2[(-1+i1 == 0)]
	1[(-2+i1 == 0)]
	5[(-3+i1 == 0 /\ 2-i4 >= 0)]
	
	Blocked

	{}
	{4[T], 8[T], 9[T], 10[T]}
	{}
	{}
	
Covered

	Trace

	2[(-1+i1 == 0)]
	1[(-2+i1 == 0)]
	
	Blocked

	{}
	{4[T], 8[T], 9[T], 10[T]}
	{5[T]}
	
Backtrack

	Trace

	2[(-1+i1 == 0)]
	
	Blocked

	{}
	{1[T], 4[T], 8[T], 9[T], 10[T]}
	
Backtrack

	Trace

	Blocked

	{2[T]}
	
Accept

Constant


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀
  Temp_Vars:  B
  Locations:  l0, l1, l2, l3, l4
  Return Locations:  
  Transitions:
  t₂: l0(X₀) → l1(0)
  t₀: l1(X₀) → l3(X₀) :|: 1+B ≤ 0
  t₁: l1(X₀) → l3(X₀)
  t₄: l1(X₀) → l4(X₀)
  t₅: l3(X₀) → l1(1+X₀) :|: X₀ ≤ 2
  t₃: l3(X₀) → l4(X₀) :|: 3 ≤ X₀
  t₆: l4(X₀) → l2(X₀) :|: X₀ ≤ 1
  t₇: l4(X₀) → l2(X₀) :|: 2 ≤ X₀


Preprocessing
  Found invariant X₀ ≤ 3 ∧ 0 ≤ X₀ for location l2


  Found invariant X₀ ≤ 3 ∧ 0 ≤ X₀ for location l1


  Found invariant X₀ ≤ 3 ∧ 0 ≤ X₀ for location l4


  Found invariant X₀ ≤ 3 ∧ 0 ≤ X₀ for location l3


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀
  Temp_Vars:  B
  Locations:  l0, l1, l2, l3, l4
  Return Locations:  
  Transitions:
  t₂: l0(X₀) → l1(0)
  t₀: l1(X₀) → l3(X₀) :|: 1+B ≤ 0 ∧ X₀ ≤ 3 ∧ 0 ≤ X₀
  t₁: l1(X₀) → l3(X₀) :|: X₀ ≤ 3 ∧ 0 ≤ X₀
  t₄: l1(X₀) → l4(X₀) :|: X₀ ≤ 3 ∧ 0 ≤ X₀
  t₅: l3(X₀) → l1(1+X₀) :|: X₀ ≤ 2 ∧ X₀ ≤ 3 ∧ 0 ≤ X₀
  t₃: l3(X₀) → l4(X₀) :|: 3 ≤ X₀ ∧ X₀ ≤ 3 ∧ 0 ≤ X₀
  t₆: l4(X₀) → l2(X₀) :|: X₀ ≤ 1 ∧ X₀ ≤ 3 ∧ 0 ≤ X₀
  t₇: l4(X₀) → l2(X₀) :|: 2 ≤ X₀ ∧ X₀ ≤ 3 ∧ 0 ≤ X₀


MPRF for transition t₀: l1(X₀) → l3(X₀) :|: 1+B ≤ 0 ∧ X₀ ≤ 3 ∧ 0 ≤ X₀ of depth 1:
  new bound:
    4 {O(1)}

  MPRF:
    • l1: [4-X₀]
    • l3: [3-X₀]




MPRF for transition t₁: l1(X₀) → l3(X₀) :|: X₀ ≤ 3 ∧ 0 ≤ X₀ of depth 1:
  new bound:
    4 {O(1)}

  MPRF:
    • l1: [4-X₀]
    • l3: [3-X₀]




MPRF for transition t₅: l3(X₀) → l1(1+X₀) :|: X₀ ≤ 2 ∧ X₀ ≤ 3 ∧ 0 ≤ X₀ of depth 1:
  new bound:
    4 {O(1)}

  MPRF:
    • l1: [4-X₀]
    • l3: [4-X₀]




All Bounds
Timebounds
  Overall timebound:17 {O(1)}
    t₀: 4 {O(1)}
    t₁: 4 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 4 {O(1)}
    t₆: 1 {O(1)}
    t₇: 1 {O(1)}


Costbounds
  Overall costbound: 17 {O(1)}
    t₀: 4 {O(1)}
    t₁: 4 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 4 {O(1)}
    t₆: 1 {O(1)}
    t₇: 1 {O(1)}


Sizebounds
    t₀, X₀: 3 {O(1)}
    t₁, X₀: 3 {O(1)}
    t₂, X₀: 0 {O(1)}
    t₃, X₀: 3 {O(1)}
    t₄, X₀: 3 {O(1)}
    t₅, X₀: 3 {O(1)}
    t₆, X₀: 1 {O(1)}
    t₇, X₀: 3 {O(1)}

