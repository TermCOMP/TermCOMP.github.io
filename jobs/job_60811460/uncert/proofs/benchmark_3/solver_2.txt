WORST_CASE(?,O(n^4))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [evalfbb3in/4,evalfbb4in/4]
1. recursive  : [evalfbb4in_loop_cont/7,evalfbb5in/6,evalfbb6in/6]
2. recursive  : [evalfbb6in_loop_cont/11,evalfbb7in/10,evalfbb8in/10]
3. recursive  : [evalfbb10in/10,evalfbb8in_loop_cont/11]
4. non_recursive  : [evalfstop/6]
5. non_recursive  : [evalfreturnin/6]
6. non_recursive  : [exit_location/1]
7. non_recursive  : [evalfbb10in_loop_cont/7]
8. non_recursive  : [evalfentryin/6]
9. non_recursive  : [evalfstart/6]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into evalfbb4in/4
1. SCC is partially evaluated into evalfbb6in/6
2. SCC is partially evaluated into evalfbb8in/10
3. SCC is partially evaluated into evalfbb10in/10
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into evalfbb10in_loop_cont/7
8. SCC is partially evaluated into evalfentryin/6
9. SCC is partially evaluated into evalfstart/6

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations evalfbb4in/4 
* CE 19 is refined into CE [20] 
* CE 18 is refined into CE [21] 
* CE 17 is refined into CE [22] 


### Cost equations --> "Loop" of evalfbb4in/4 
* CEs [22] --> Loop 20 
* CEs [20] --> Loop 21 
* CEs [21] --> Loop 22 

### Ranking functions of CR evalfbb4in(D,E,F,G) 
* RF of phase [20]: [D-E+1]

#### Partial ranking functions of CR evalfbb4in(D,E,F,G) 
* Partial RF of phase [20]:
  - RF of loop [20:1]:
    D-E+1


### Specialization of cost equations evalfbb6in/6 
* CE 15 is refined into CE [23] 
* CE 13 is refined into CE [24,25] 
* CE 16 is refined into CE [26] 
* CE 14 is refined into CE [27] 


### Cost equations --> "Loop" of evalfbb6in/6 
* CEs [27] --> Loop 23 
* CEs [23] --> Loop 24 
* CEs [24,25] --> Loop 25 
* CEs [26] --> Loop 26 

### Ranking functions of CR evalfbb6in(B,D,E,F,G,H) 
* RF of phase [23]: [B-D+1]

#### Partial ranking functions of CR evalfbb6in(B,D,E,F,G,H) 
* Partial RF of phase [23]:
  - RF of loop [23:1]:
    B-D+1


### Specialization of cost equations evalfbb8in/10 
* CE 11 is refined into CE [28] 
* CE 9 is refined into CE [29,30,31] 
* CE 12 is refined into CE [32] 
* CE 10 is refined into CE [33,34] 


### Cost equations --> "Loop" of evalfbb8in/10 
* CEs [34] --> Loop 27 
* CEs [33] --> Loop 28 
* CEs [28] --> Loop 29 
* CEs [31] --> Loop 30 
* CEs [30] --> Loop 31 
* CEs [29] --> Loop 32 
* CEs [32] --> Loop 33 

### Ranking functions of CR evalfbb8in(A,B,C,D,E,F,G,H,I,J) 
* RF of phase [27]: [A-C+1,B-C]
* RF of phase [28]: [A-C+1,B-C+1]

#### Partial ranking functions of CR evalfbb8in(A,B,C,D,E,F,G,H,I,J) 
* Partial RF of phase [27]:
  - RF of loop [27:1]:
    A-C+1
    B-C
* Partial RF of phase [28]:
  - RF of loop [28:1]:
    A-C+1
    B-C+1


### Specialization of cost equations evalfbb10in/10 
* CE 5 is refined into CE [35] 
* CE 3 is refined into CE [36,37,38,39,40,41,42,43] 
* CE 6 is refined into CE [44] 
* CE 4 is refined into CE [45,46,47] 


### Cost equations --> "Loop" of evalfbb10in/10 
* CEs [45] --> Loop 34 
* CEs [47] --> Loop 35 
* CEs [46] --> Loop 36 
* CEs [35] --> Loop 37 
* CEs [38] --> Loop 38 
* CEs [43] --> Loop 39 
* CEs [41] --> Loop 40 
* CEs [42] --> Loop 41 
* CEs [40] --> Loop 42 
* CEs [39] --> Loop 43 
* CEs [37] --> Loop 44 
* CEs [36] --> Loop 45 
* CEs [44] --> Loop 46 

### Ranking functions of CR evalfbb10in(A,B,C,D,E,F,G,H,I,J) 
* RF of phase [35]: [-A+B]

#### Partial ranking functions of CR evalfbb10in(A,B,C,D,E,F,G,H,I,J) 
* Partial RF of phase [35]:
  - RF of loop [35:1]:
    -A+B


### Specialization of cost equations evalfbb10in_loop_cont/7 
* CE 7 is refined into CE [48] 
* CE 8 is refined into CE [49] 


### Cost equations --> "Loop" of evalfbb10in_loop_cont/7 
* CEs [48] --> Loop 47 
* CEs [49] --> Loop 48 

### Ranking functions of CR evalfbb10in_loop_cont(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR evalfbb10in_loop_cont(A,B,C,D,E,F,G) 


### Specialization of cost equations evalfentryin/6 
* CE 2 is refined into CE [50,51,52,53,54,55,56,57,58] 


### Cost equations --> "Loop" of evalfentryin/6 
* CEs [55] --> Loop 49 
* CEs [54] --> Loop 50 
* CEs [53,58] --> Loop 51 
* CEs [52] --> Loop 52 
* CEs [57] --> Loop 53 
* CEs [50,56] --> Loop 54 
* CEs [51] --> Loop 55 

### Ranking functions of CR evalfentryin(A,B,C,D,E,F) 

#### Partial ranking functions of CR evalfentryin(A,B,C,D,E,F) 


### Specialization of cost equations evalfstart/6 
* CE 1 is refined into CE [59,60,61,62,63,64,65] 


### Cost equations --> "Loop" of evalfstart/6 
* CEs [65] --> Loop 56 
* CEs [64] --> Loop 57 
* CEs [63] --> Loop 58 
* CEs [62] --> Loop 59 
* CEs [61] --> Loop 60 
* CEs [60] --> Loop 61 
* CEs [59] --> Loop 62 

### Ranking functions of CR evalfstart(A,B,C,D,E,F) 

#### Partial ranking functions of CR evalfstart(A,B,C,D,E,F) 


Computing Bounds
=====================================

#### Cost of chains of evalfbb4in(D,E,F,G):
* Chain [[20],22]: 1*it(20)+0
  Such that:it(20) =< -E+G

  with precondition: [F=2,D+1=G,D>=2,E>=1,D>=E] 

* Chain [[20],21]: 1*it(20)+0
  Such that:it(20) =< D-E+1

  with precondition: [F=3,D>=2,E>=1,D>=E] 

* Chain [21]: 0
  with precondition: [F=3,D>=2,E>=1] 


#### Cost of chains of evalfbb6in(B,D,E,F,G,H):
* Chain [[23],26]: 1*it(23)+1*s(3)+0
  Such that:aux(1) =< B+1
it(23) =< B-D+1
s(3) =< it(23)*aux(1)

  with precondition: [F=3,D>=2,B>=D] 

* Chain [[23],25]: 1*it(23)+1*s(3)+1*s(4)+0
  Such that:s(4) =< B
aux(1) =< B+1
it(23) =< B-D
s(3) =< it(23)*aux(1)

  with precondition: [F=3,D>=2,B>=D+1] 

* Chain [[23],24]: 1*it(23)+1*s(3)+0
  Such that:it(23) =< -D+G
aux(1) =< G
s(3) =< it(23)*aux(1)

  with precondition: [F=4,B+1=G,B+1=H,D>=2,B>=D] 

* Chain [26]: 0
  with precondition: [F=3,D>=2,B+1>=D] 

* Chain [25]: 1*s(4)+0
  Such that:s(4) =< D

  with precondition: [F=3,D>=2,B>=D] 

* Chain [24]: 0
  with precondition: [F=4,B+1=D,H=E,B+1=G,B>=1] 


#### Cost of chains of evalfbb8in(A,B,C,D,E,F,G,H,I,J):
* Chain [[28],33]: 1*it(28)+0
  Such that:it(28) =< A-C+1

  with precondition: [F=3,A=B,C>=1,A>=C] 

* Chain [[28],32]: 1*it(28)+0
  Such that:it(28) =< A-C

  with precondition: [F=3,A=B,C>=1,A>=C+1] 

* Chain [[28],29]: 1*it(28)+0
  Such that:it(28) =< -C+H

  with precondition: [F=5,A=B,A+1=G,A+1=H,A+1=I,E=J,C>=1,A>=C] 

* Chain [[27],33]: 1*it(27)+1*s(15)+1*s(16)+0
  Such that:aux(2) =< -A+B
it(27) =< A-C+1
s(13) =< B+1
aux(3) =< B-C
aux(2) =< aux(3)
it(27) =< aux(3)
s(15) =< it(27)*aux(2)
s(16) =< s(15)*s(13)

  with precondition: [F=3,C>=1,B>=A+1,A>=C] 

* Chain [[27],32]: 1*it(27)+1*s(15)+1*s(16)+0
  Such that:aux(2) =< -A+B
it(27) =< A-C
s(13) =< B+1
aux(3) =< B-C
aux(2) =< aux(3)
it(27) =< aux(3)
s(15) =< it(27)*aux(2)
s(16) =< s(15)*s(13)

  with precondition: [F=3,C>=1,B>=A+1,A>=C+1] 

* Chain [[27],31]: 1*it(27)+1*s(15)+1*s(16)+1*s(18)+1*s(19)+1*s(20)+0
  Such that:s(19) =< A+1
it(27) =< A-C
aux(3) =< B-C
aux(4) =< -A+B
aux(5) =< B+1
aux(2) =< aux(4)
s(18) =< aux(4)
s(20) =< s(18)*aux(5)
aux(2) =< aux(3)
it(27) =< aux(3)
s(15) =< it(27)*aux(2)
s(16) =< s(15)*aux(5)

  with precondition: [F=3,C>=1,B>=A+1,A>=C+1] 

* Chain [[27],30]: 1*it(27)+1*s(15)+1*s(16)+1*s(21)+1*s(23)+1*s(24)+0
  Such that:it(27) =< A-C
s(21) =< B
aux(3) =< B-C
aux(6) =< -A+B
aux(7) =< B+1
aux(2) =< aux(6)
s(23) =< aux(6)
s(24) =< s(23)*aux(7)
aux(2) =< aux(3)
it(27) =< aux(3)
s(15) =< it(27)*aux(2)
s(16) =< s(15)*aux(7)

  with precondition: [F=3,C>=1,B>=A+2,A>=C+1] 

* Chain [[27],29]: 1*it(27)+1*s(15)+1*s(16)+0
  Such that:it(27) =< -C+H
aux(3) =< -C+I
aux(2) =< -H+I
s(13) =< I
aux(2) =< aux(3)
it(27) =< aux(3)
s(15) =< it(27)*aux(2)
s(16) =< s(15)*s(13)

  with precondition: [F=5,A+1=G,A+1=H,B+1=I,B+1=J,C>=1,B>=A+1,A>=C] 

* Chain [33]: 0
  with precondition: [F=3,C>=1,B>=A] 

* Chain [32]: 0
  with precondition: [F=3,C>=1,B>=A,A>=C] 

* Chain [31]: 1*s(18)+1*s(19)+1*s(20)+0
  Such that:s(18) =< -A+B
s(19) =< A+1
s(17) =< B+1
s(20) =< s(18)*s(17)

  with precondition: [F=3,C>=1,B>=A+1,A>=C] 

* Chain [30]: 1*s(21)+1*s(23)+1*s(24)+0
  Such that:s(23) =< -A+B
s(21) =< B
s(22) =< B+1
s(24) =< s(23)*s(22)

  with precondition: [F=3,C>=1,B>=A+2,A>=C] 

* Chain [29]: 0
  with precondition: [F=5,I=D,J=E,A+1=G,C=H,C>=1,B>=A,C>=A+1] 


#### Cost of chains of evalfbb10in(A,B,C,D,E,F,G,H,I,J):
* Chain [[35],46]: 1*it(35)+1*s(63)+1*s(64)+1*s(65)+0
  Such that:it(35) =< -A+B
aux(16) =< B
aux(15) =< aux(16)
s(59) =< aux(16)
aux(15) =< s(59)+1
aux(14) =< s(59)+1
s(58) =< s(59)+2
s(63) =< it(35)*aux(15)
s(66) =< it(35)*aux(14)
s(59) =< aux(14)
s(63) =< s(66)
s(64) =< s(63)*s(59)
s(65) =< s(64)*s(58)

  with precondition: [F=3,A>=1,B>=A+1] 

* Chain [[35],45]: 1*it(35)+1*s(63)+1*s(64)+1*s(65)+1*s(67)+0
  Such that:it(35) =< -A+B
aux(17) =< B
s(67) =< aux(17)
aux(15) =< aux(17)
s(59) =< aux(17)
aux(15) =< s(59)+1
aux(14) =< s(59)+1
s(58) =< s(59)+2
s(63) =< it(35)*aux(15)
s(66) =< it(35)*aux(14)
s(59) =< aux(14)
s(63) =< s(66)
s(64) =< s(63)*s(59)
s(65) =< s(64)*s(58)

  with precondition: [F=3,A>=1,B>=A+1] 

* Chain [[35],44]: 1*it(35)+1*s(63)+1*s(64)+1*s(65)+1*s(68)+0
  Such that:it(35) =< -A+B
aux(18) =< B
s(68) =< aux(18)
aux(15) =< aux(18)
s(59) =< aux(18)
aux(15) =< s(59)+1
aux(14) =< s(59)+1
s(58) =< s(59)+2
s(63) =< it(35)*aux(15)
s(66) =< it(35)*aux(14)
s(59) =< aux(14)
s(63) =< s(66)
s(64) =< s(63)*s(59)
s(65) =< s(64)*s(58)

  with precondition: [F=3,A>=1,B>=A+1] 

* Chain [[35],43]: 1*it(35)+1*s(63)+1*s(64)+1*s(65)+0
  Such that:it(35) =< -A+B
aux(16) =< B
aux(15) =< aux(16)
s(59) =< aux(16)
aux(15) =< s(59)+1
aux(14) =< s(59)+1
s(58) =< s(59)+2
s(63) =< it(35)*aux(15)
s(66) =< it(35)*aux(14)
s(59) =< aux(14)
s(63) =< s(66)
s(64) =< s(63)*s(59)
s(65) =< s(64)*s(58)

  with precondition: [F=3,A>=1,B>=A+1] 

* Chain [[35],42]: 1*it(35)+1*s(63)+1*s(64)+1*s(65)+1*s(69)+1*s(70)+1*s(74)+1*s(76)+1*s(77)+1*s(78)+0
  Such that:it(35) =< -A+B
aux(19) =< B
aux(20) =< B+1
s(69) =< aux(19)
s(70) =< aux(19)
s(72) =< aux(19)
s(69) =< aux(20)
s(72) =< aux(20)
s(74) =< s(72)
s(75) =< s(72)
s(76) =< s(74)*aux(20)
s(75) =< aux(19)
s(77) =< s(70)*s(75)
s(78) =< s(77)*aux(20)
aux(15) =< aux(19)
s(59) =< aux(19)
aux(15) =< s(59)+1
aux(14) =< s(59)+1
s(58) =< s(59)+2
s(63) =< it(35)*aux(15)
s(66) =< it(35)*aux(14)
s(59) =< aux(14)
s(63) =< s(66)
s(64) =< s(63)*s(59)
s(65) =< s(64)*s(58)

  with precondition: [F=3,A>=1,B>=A+2] 

* Chain [[35],41]: 2*it(35)+1*s(63)+1*s(64)+1*s(65)+1*s(80)+1*s(82)+0
  Such that:s(81) =< B+1
aux(21) =< -A+B
aux(22) =< B
it(35) =< aux(21)
s(80) =< aux(22)
s(82) =< it(35)*s(81)
aux(15) =< aux(22)
s(59) =< aux(22)
aux(15) =< s(59)+1
aux(14) =< s(59)+1
s(58) =< s(59)+2
s(63) =< it(35)*aux(15)
s(66) =< it(35)*aux(14)
s(59) =< aux(14)
s(63) =< s(66)
s(64) =< s(63)*s(59)
s(65) =< s(64)*s(58)

  with precondition: [F=3,A>=1,B>=A+3] 

* Chain [[35],40]: 1*it(35)+1*s(63)+1*s(64)+1*s(65)+1*s(83)+2*s(89)+2*s(90)+2*s(91)+1*s(92)+1*s(93)+0
  Such that:it(35) =< -A+B
aux(23) =< B
aux(24) =< B+1
s(83) =< aux(23)
s(84) =< aux(23)
s(83) =< aux(24)
s(84) =< aux(24)
s(88) =< s(84)
s(89) =< aux(23)
s(88) =< aux(23)
s(90) =< s(89)*s(88)
s(91) =< s(90)*aux(24)
s(92) =< s(84)
s(93) =< s(92)*aux(24)
aux(15) =< aux(23)
s(59) =< aux(23)
aux(15) =< s(59)+1
aux(14) =< s(59)+1
s(58) =< s(59)+2
s(63) =< it(35)*aux(15)
s(66) =< it(35)*aux(14)
s(59) =< aux(14)
s(63) =< s(66)
s(64) =< s(63)*s(59)
s(65) =< s(64)*s(58)

  with precondition: [F=3,A>=1,B>=A+2] 

* Chain [[35],39]: 1*it(35)+1*s(63)+1*s(64)+1*s(65)+2*s(94)+1*s(100)+1*s(101)+1*s(102)+1*s(103)+0
  Such that:s(98) =< B+1
aux(26) =< -A+B
aux(27) =< B
it(35) =< aux(26)
s(97) =< aux(26)
s(94) =< aux(27)
s(97) =< aux(27)
s(99) =< s(97)
s(100) =< s(97)
s(101) =< s(100)*s(98)
s(99) =< aux(27)
s(102) =< s(94)*s(99)
s(103) =< s(102)*s(98)
aux(15) =< aux(27)
s(59) =< aux(27)
aux(15) =< s(59)+1
aux(14) =< s(59)+1
s(58) =< s(59)+2
s(63) =< it(35)*aux(15)
s(66) =< it(35)*aux(14)
s(59) =< aux(14)
s(63) =< s(66)
s(64) =< s(63)*s(59)
s(65) =< s(64)*s(58)

  with precondition: [F=3,A>=1,B>=A+3] 

* Chain [[35],38]: 1*it(35)+1*s(63)+1*s(64)+1*s(65)+0
  Such that:it(35) =< -A+B
aux(16) =< B
aux(15) =< aux(16)
s(59) =< aux(16)
aux(15) =< s(59)+1
aux(14) =< s(59)+1
s(58) =< s(59)+2
s(63) =< it(35)*aux(15)
s(66) =< it(35)*aux(14)
s(59) =< aux(14)
s(63) =< s(66)
s(64) =< s(63)*s(59)
s(65) =< s(64)*s(58)

  with precondition: [F=3,A>=1,B>=A+1] 

* Chain [[35],34,46]: 1*it(35)+1*s(63)+1*s(64)+1*s(65)+1*s(104)+1
  Such that:it(35) =< -A+B
aux(28) =< B
s(104) =< aux(28)
aux(15) =< aux(28)
s(59) =< aux(28)
aux(15) =< s(59)+1
aux(14) =< s(59)+1
s(58) =< s(59)+2
s(63) =< it(35)*aux(15)
s(66) =< it(35)*aux(14)
s(59) =< aux(14)
s(63) =< s(66)
s(64) =< s(63)*s(59)
s(65) =< s(64)*s(58)

  with precondition: [F=3,A>=1,B>=A+1] 

* Chain [[35],34,37]: 1*it(35)+1*s(63)+1*s(64)+1*s(65)+1*s(104)+1
  Such that:it(35) =< -A+G
aux(29) =< G
s(104) =< aux(29)
aux(15) =< aux(29)
s(59) =< aux(29)
aux(15) =< s(59)+1
aux(14) =< s(59)+1
s(58) =< s(59)+2
s(63) =< it(35)*aux(15)
s(66) =< it(35)*aux(14)
s(59) =< aux(14)
s(63) =< s(66)
s(64) =< s(63)*s(59)
s(65) =< s(64)*s(58)

  with precondition: [F=6,B+1=G,B+1=H,B+1=I,B+1=J,A>=1,B>=A+1] 

* Chain [46]: 0
  with precondition: [F=3,A>=1] 

* Chain [45]: 1*s(67)+0
  Such that:s(67) =< B

  with precondition: [F=3,A=B,A>=1] 

* Chain [43]: 0
  with precondition: [F=3,A>=1,B>=A] 

* Chain [42]: 1*s(69)+1*s(70)+1*s(74)+1*s(76)+1*s(77)+1*s(78)+0
  Such that:s(72) =< -A+B
s(70) =< A
s(69) =< A+1
s(71) =< B
s(73) =< B+1
s(74) =< s(72)
s(75) =< s(72)
s(76) =< s(74)*s(73)
s(75) =< s(71)
s(70) =< s(71)
s(77) =< s(70)*s(75)
s(78) =< s(77)*s(73)

  with precondition: [F=3,A>=1,B>=A+1] 

* Chain [41]: 1*s(79)+1*s(80)+1*s(82)+0
  Such that:s(79) =< -A+B
s(80) =< B
s(81) =< B+1
s(82) =< s(79)*s(81)

  with precondition: [F=3,A>=1,B>=A+2] 

* Chain [38]: 0
  with precondition: [F=3,A>=1,B>=A] 

* Chain [37]: 0
  with precondition: [F=6,H=C,I=D,J=E,A=G,A>=1,A>=B+1] 

* Chain [34,46]: 1*s(104)+1
  Such that:s(104) =< A

  with precondition: [F=3,A=B,A>=1] 

* Chain [34,37]: 1*s(104)+1
  Such that:s(104) =< G

  with precondition: [F=6,A=B,A+1=G,A+1=H,A+1=I,E=J,A>=1] 


#### Cost of chains of evalfbb10in_loop_cont(A,B,C,D,E,F,G):
* Chain [48]: 0
  with precondition: [A=3] 

* Chain [47]: 0
  with precondition: [A=6] 


#### Cost of chains of evalfentryin(A,B,C,D,E,F):
* Chain [55]: 0
  with precondition: [] 

* Chain [54]: 5
  with precondition: [B=1] 

* Chain [53]: 0
  with precondition: [0>=B] 

* Chain [52]: 0
  with precondition: [B>=1] 

* Chain [51]: 1*s(258)+1*s(259)+11*s(263)+1*s(265)+1*s(266)+1*s(267)+1*s(273)+1*s(275)+1*s(276)+1*s(281)+1*s(283)+1*s(284)+1*s(289)+1*s(291)+1*s(292)+1*s(297)+1*s(299)+1*s(300)+1*s(305)+1*s(307)+1*s(308)+1*s(313)+1*s(315)+1*s(316)+1*s(319)+1*s(324)+1*s(326)+1*s(327)+1
  Such that:s(258) =< 1
s(259) =< 2
aux(40) =< B
aux(41) =< B+1
s(263) =< aux(40)
s(265) =< s(263)*aux(41)
s(258) =< aux(40)
s(266) =< s(258)*aux(40)
s(267) =< s(266)*aux(41)
s(269) =< aux(40)
s(270) =< aux(40)
s(269) =< s(270)+1
s(271) =< s(270)+1
s(272) =< s(270)+2
s(273) =< s(263)*s(269)
s(274) =< s(263)*s(271)
s(270) =< s(271)
s(273) =< s(274)
s(275) =< s(273)*s(270)
s(276) =< s(275)*s(272)
s(277) =< aux(40)
s(278) =< aux(40)
s(277) =< s(278)+1
s(279) =< s(278)+1
s(280) =< s(278)+2
s(281) =< s(263)*s(277)
s(282) =< s(263)*s(279)
s(278) =< s(279)
s(281) =< s(282)
s(283) =< s(281)*s(278)
s(284) =< s(283)*s(280)
s(285) =< aux(40)
s(286) =< aux(40)
s(285) =< s(286)+1
s(287) =< s(286)+1
s(288) =< s(286)+2
s(289) =< s(263)*s(285)
s(290) =< s(263)*s(287)
s(286) =< s(287)
s(289) =< s(290)
s(291) =< s(289)*s(286)
s(292) =< s(291)*s(288)
s(293) =< aux(40)
s(294) =< aux(40)
s(293) =< s(294)+1
s(295) =< s(294)+1
s(296) =< s(294)+2
s(297) =< s(263)*s(293)
s(298) =< s(263)*s(295)
s(294) =< s(295)
s(297) =< s(298)
s(299) =< s(297)*s(294)
s(300) =< s(299)*s(296)
s(301) =< aux(40)
s(302) =< aux(40)
s(301) =< s(302)+1
s(303) =< s(302)+1
s(304) =< s(302)+2
s(305) =< s(263)*s(301)
s(306) =< s(263)*s(303)
s(302) =< s(303)
s(305) =< s(306)
s(307) =< s(305)*s(302)
s(308) =< s(307)*s(304)
s(309) =< aux(40)
s(310) =< aux(40)
s(309) =< s(310)+1
s(311) =< s(310)+1
s(312) =< s(310)+2
s(313) =< s(263)*s(309)
s(314) =< s(263)*s(311)
s(310) =< s(311)
s(313) =< s(314)
s(315) =< s(313)*s(310)
s(316) =< s(315)*s(312)
s(319) =< aux(41)
s(320) =< aux(41)
s(321) =< aux(41)
s(320) =< s(321)+1
s(322) =< s(321)+1
s(323) =< s(321)+2
s(324) =< s(263)*s(320)
s(325) =< s(263)*s(322)
s(321) =< s(322)
s(324) =< s(325)
s(326) =< s(324)*s(321)
s(327) =< s(326)*s(323)

  with precondition: [B>=2] 

* Chain [50]: 7*s(331)+1*s(333)+2*s(334)+3*s(337)+3*s(338)+2*s(339)+2*s(340)+1*s(345)+1*s(347)+1*s(348)+1*s(353)+1*s(355)+1*s(356)+0
  Such that:s(330) =< B+1
aux(42) =< B
s(331) =< aux(42)
s(333) =< s(331)*s(330)
s(334) =< aux(42)
s(335) =< aux(42)
s(334) =< s(330)
s(335) =< s(330)
s(336) =< s(335)
s(336) =< aux(42)
s(337) =< s(331)*s(336)
s(338) =< s(337)*s(330)
s(339) =< s(335)
s(340) =< s(339)*s(330)
s(341) =< aux(42)
s(342) =< aux(42)
s(341) =< s(342)+1
s(343) =< s(342)+1
s(344) =< s(342)+2
s(345) =< s(331)*s(341)
s(346) =< s(331)*s(343)
s(342) =< s(343)
s(345) =< s(346)
s(347) =< s(345)*s(342)
s(348) =< s(347)*s(344)
s(349) =< aux(42)
s(350) =< aux(42)
s(349) =< s(350)+1
s(351) =< s(350)+1
s(352) =< s(350)+2
s(353) =< s(331)*s(349)
s(354) =< s(331)*s(351)
s(350) =< s(351)
s(353) =< s(354)
s(355) =< s(353)*s(350)
s(356) =< s(355)*s(352)

  with precondition: [B>=3] 

* Chain [49]: 7*s(360)+2*s(365)+1*s(366)+1*s(367)+1*s(372)+1*s(374)+1*s(375)+1*s(381)+1*s(383)+1*s(384)+0
  Such that:s(359) =< B+1
aux(43) =< B
s(360) =< aux(43)
s(365) =< s(360)*s(359)
s(366) =< s(360)*aux(43)
s(367) =< s(366)*s(359)
s(368) =< aux(43)
s(369) =< aux(43)
s(368) =< s(369)+1
s(370) =< s(369)+1
s(371) =< s(369)+2
s(372) =< s(360)*s(368)
s(373) =< s(360)*s(370)
s(369) =< s(370)
s(372) =< s(373)
s(374) =< s(372)*s(369)
s(375) =< s(374)*s(371)
s(377) =< aux(43)
s(378) =< aux(43)
s(377) =< s(378)+1
s(379) =< s(378)+1
s(380) =< s(378)+2
s(381) =< s(360)*s(377)
s(382) =< s(360)*s(379)
s(378) =< s(379)
s(381) =< s(382)
s(383) =< s(381)*s(378)
s(384) =< s(383)*s(380)

  with precondition: [B>=4] 


#### Cost of chains of evalfstart(A,B,C,D,E,F):
* Chain [62]: 0
  with precondition: [] 

* Chain [61]: 5
  with precondition: [B=1] 

* Chain [60]: 0
  with precondition: [0>=B] 

* Chain [59]: 0
  with precondition: [B>=1] 

* Chain [58]: 1*s(385)+1*s(386)+11*s(389)+1*s(390)+1*s(391)+1*s(392)+1*s(397)+1*s(399)+1*s(400)+1*s(405)+1*s(407)+1*s(408)+1*s(413)+1*s(415)+1*s(416)+1*s(421)+1*s(423)+1*s(424)+1*s(429)+1*s(431)+1*s(432)+1*s(437)+1*s(439)+1*s(440)+1*s(441)+1*s(446)+1*s(448)+1*s(449)+1
  Such that:s(385) =< 1
s(386) =< 2
s(387) =< B
s(388) =< B+1
s(389) =< s(387)
s(390) =< s(389)*s(388)
s(385) =< s(387)
s(391) =< s(385)*s(387)
s(392) =< s(391)*s(388)
s(393) =< s(387)
s(394) =< s(387)
s(393) =< s(394)+1
s(395) =< s(394)+1
s(396) =< s(394)+2
s(397) =< s(389)*s(393)
s(398) =< s(389)*s(395)
s(394) =< s(395)
s(397) =< s(398)
s(399) =< s(397)*s(394)
s(400) =< s(399)*s(396)
s(401) =< s(387)
s(402) =< s(387)
s(401) =< s(402)+1
s(403) =< s(402)+1
s(404) =< s(402)+2
s(405) =< s(389)*s(401)
s(406) =< s(389)*s(403)
s(402) =< s(403)
s(405) =< s(406)
s(407) =< s(405)*s(402)
s(408) =< s(407)*s(404)
s(409) =< s(387)
s(410) =< s(387)
s(409) =< s(410)+1
s(411) =< s(410)+1
s(412) =< s(410)+2
s(413) =< s(389)*s(409)
s(414) =< s(389)*s(411)
s(410) =< s(411)
s(413) =< s(414)
s(415) =< s(413)*s(410)
s(416) =< s(415)*s(412)
s(417) =< s(387)
s(418) =< s(387)
s(417) =< s(418)+1
s(419) =< s(418)+1
s(420) =< s(418)+2
s(421) =< s(389)*s(417)
s(422) =< s(389)*s(419)
s(418) =< s(419)
s(421) =< s(422)
s(423) =< s(421)*s(418)
s(424) =< s(423)*s(420)
s(425) =< s(387)
s(426) =< s(387)
s(425) =< s(426)+1
s(427) =< s(426)+1
s(428) =< s(426)+2
s(429) =< s(389)*s(425)
s(430) =< s(389)*s(427)
s(426) =< s(427)
s(429) =< s(430)
s(431) =< s(429)*s(426)
s(432) =< s(431)*s(428)
s(433) =< s(387)
s(434) =< s(387)
s(433) =< s(434)+1
s(435) =< s(434)+1
s(436) =< s(434)+2
s(437) =< s(389)*s(433)
s(438) =< s(389)*s(435)
s(434) =< s(435)
s(437) =< s(438)
s(439) =< s(437)*s(434)
s(440) =< s(439)*s(436)
s(441) =< s(388)
s(442) =< s(388)
s(443) =< s(388)
s(442) =< s(443)+1
s(444) =< s(443)+1
s(445) =< s(443)+2
s(446) =< s(389)*s(442)
s(447) =< s(389)*s(444)
s(443) =< s(444)
s(446) =< s(447)
s(448) =< s(446)*s(443)
s(449) =< s(448)*s(445)

  with precondition: [B>=2] 

* Chain [57]: 7*s(452)+1*s(453)+2*s(454)+3*s(457)+3*s(458)+2*s(459)+2*s(460)+1*s(465)+1*s(467)+1*s(468)+1*s(473)+1*s(475)+1*s(476)+0
  Such that:s(451) =< B
s(450) =< B+1
s(452) =< s(451)
s(453) =< s(452)*s(450)
s(454) =< s(451)
s(455) =< s(451)
s(454) =< s(450)
s(455) =< s(450)
s(456) =< s(455)
s(456) =< s(451)
s(457) =< s(452)*s(456)
s(458) =< s(457)*s(450)
s(459) =< s(455)
s(460) =< s(459)*s(450)
s(461) =< s(451)
s(462) =< s(451)
s(461) =< s(462)+1
s(463) =< s(462)+1
s(464) =< s(462)+2
s(465) =< s(452)*s(461)
s(466) =< s(452)*s(463)
s(462) =< s(463)
s(465) =< s(466)
s(467) =< s(465)*s(462)
s(468) =< s(467)*s(464)
s(469) =< s(451)
s(470) =< s(451)
s(469) =< s(470)+1
s(471) =< s(470)+1
s(472) =< s(470)+2
s(473) =< s(452)*s(469)
s(474) =< s(452)*s(471)
s(470) =< s(471)
s(473) =< s(474)
s(475) =< s(473)*s(470)
s(476) =< s(475)*s(472)

  with precondition: [B>=3] 

* Chain [56]: 7*s(479)+2*s(480)+1*s(481)+1*s(482)+1*s(487)+1*s(489)+1*s(490)+1*s(495)+1*s(497)+1*s(498)+0
  Such that:s(478) =< B
s(477) =< B+1
s(479) =< s(478)
s(480) =< s(479)*s(477)
s(481) =< s(479)*s(478)
s(482) =< s(481)*s(477)
s(483) =< s(478)
s(484) =< s(478)
s(483) =< s(484)+1
s(485) =< s(484)+1
s(486) =< s(484)+2
s(487) =< s(479)*s(483)
s(488) =< s(479)*s(485)
s(484) =< s(485)
s(487) =< s(488)
s(489) =< s(487)*s(484)
s(490) =< s(489)*s(486)
s(491) =< s(478)
s(492) =< s(478)
s(491) =< s(492)+1
s(493) =< s(492)+1
s(494) =< s(492)+2
s(495) =< s(479)*s(491)
s(496) =< s(479)*s(493)
s(492) =< s(493)
s(495) =< s(496)
s(497) =< s(495)*s(492)
s(498) =< s(497)*s(494)

  with precondition: [B>=4] 


Closed-form bounds of evalfstart(A,B,C,D,E,F): 
-------------------------------------
* Chain [62] with precondition: [] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [61] with precondition: [B=1] 
    - Upper bound: 5 
    - Complexity: constant 
* Chain [60] with precondition: [0>=B] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [59] with precondition: [B>=1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [58] with precondition: [B>=2] 
    - Upper bound: 12*B+4+6*B*B+18*B*B*B+6*B*B*B*B+(B+1)*(3*B)+(B+1)*((B+1)*(3*B))+(B+1)*((B+1)*((B+1)*B))+(B+1) 
    - Complexity: n^4 
* Chain [57] with precondition: [B>=3] 
    - Upper bound: 5*B*B+11*B+6*B*B*B+2*B*B*B*B+(B+1)*(3*B*B)+(B+1)*(3*B) 
    - Complexity: n^4 
* Chain [56] with precondition: [B>=4] 
    - Upper bound: 3*B*B+7*B+6*B*B*B+2*B*B*B*B+(B+1)*(B*B)+(B+1)*(2*B) 
    - Complexity: n^4 

### Maximum cost of evalfstart(A,B,C,D,E,F): max([5,nat(B)*3*nat(B)+nat(B)*7+nat(B)*6*nat(B)*nat(B)+nat(B)*2*nat(B)*nat(B)*nat(B)+nat(B)*2*nat(B+1)+max([nat(B)*nat(B)*nat(B+1),nat(B)*2*nat(B)+nat(B)*4+nat(B+1)*nat(B)+max([nat(B)*3*nat(B)*nat(B+1),nat(B)+4+nat(B)*nat(B)+nat(B)*12*nat(B)*nat(B)+nat(B)*4*nat(B)*nat(B)*nat(B)+nat(B)*3*nat(B+1)*nat(B+1)+nat(B+1)*nat(B)*nat(B+1)*nat(B+1)+nat(B+1)])])]) 
Asymptotic class: n^4 
* Total analysis performed in 360 ms.

