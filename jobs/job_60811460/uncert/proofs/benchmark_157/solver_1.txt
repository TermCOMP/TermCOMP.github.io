WORST_CASE(NON_POLY,?)

# LoAT Proof:
WORST_CASE(EXP,?)

WORST_CASE(Omega(n^1),?)
WORST_CASE(EXP,?)
Initial ITS

Start location: f

Location map:
LoAT_sink -> 0
f -> 1
g -> 2
g1 -> 3
h -> 4

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i5'=1, i6'=0
   1: (-2+i1 == 0 /\ i4 > 0) /\ i1'=3, i3'=1+i3, i4'=-1+i4, i6'=i5
   2: -3+i1 == 0 /\ i1'=2, i3'=1+i3, i5'=i6+i5
   3: (-2+i1 == 0 /\ i4 <= 0) /\ i1'=4, i3'=1+i3
   4: (-4+i1 == 0 /\ i5 > 0) /\ i1'=4, i3'=1+i3, i5'=-1+i5

Dependency graph:
0 -> 1, 0 -> 3
1 -> 2
2 -> 1, 2 -> 3
3 -> 4
4 -> 4

Chained Linear Paths

	Applied Chaining

	First rule:
	(-2+i1 == 0 /\ i4 > 0) /\ i1'=3, i3'=1+i3, i4'=-1+i4, i6'=i5
	Second rule:
	-3+i1 == 0 /\ i1'=2, i3'=1+i3, i5'=i6+i5
	New rule:
	(0 == 0 /\ -2+i1 == 0 /\ i4 > 0) /\ i1'=2, i3'=2+i3, i4'=-1+i4, i5'=2*i5, i6'=i5
	
	Applied Deletion

	Removed the following rules: 1, 2

Start location: f

Location map:
LoAT_sink -> 0
f -> 1
g -> 2
g1 -> 3
h -> 4

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i5'=1, i6'=0
   3: (-2+i1 == 0 /\ i4 <= 0) /\ i1'=4, i3'=1+i3
   4: (-4+i1 == 0 /\ i5 > 0) /\ i1'=4, i3'=1+i3, i5'=-1+i5
   5: (0 == 0 /\ -2+i1 == 0 /\ i4 > 0) /\ i1'=2, i3'=2+i3, i4'=-1+i4, i5'=2*i5, i6'=i5

Dependency graph:
0 -> 3, 0 -> 5
3 -> 4
4 -> 4
5 -> 3, 5 -> 5

Preprocessed Transitions

	Simplified Guard

	Original rule:
	(0 == 0 /\ -2+i1 == 0 /\ i4 > 0) /\ i1'=2, i3'=2+i3, i4'=-1+i4, i5'=2*i5, i6'=i5
	New rule:
	(-2+i1 == 0 /\ i4 > 0) /\ i1'=2, i3'=2+i3, i4'=-1+i4, i5'=2*i5, i6'=i5

Start location: f

Location map:
LoAT_sink -> 0
f -> 1
g -> 2
g1 -> 3
h -> 4

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i5'=1, i6'=0
   3: (-2+i1 == 0 /\ i4 <= 0) /\ i1'=4, i3'=1+i3
   4: (-4+i1 == 0 /\ i5 > 0) /\ i1'=4, i3'=1+i3, i5'=-1+i5
   6: (-2+i1 == 0 /\ i4 > 0) /\ i1'=2, i3'=2+i3, i4'=-1+i4, i5'=2*i5, i6'=i5

Dependency graph:
0 -> 3, 0 -> 6
3 -> 4
4 -> 4
6 -> 3, 6 -> 6

Step with 0

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 6

	Trace

	0[(-1+i1 == 0)]
	6[(-2+i1 == 0 /\ i4 > 0)]
	
	Blocked

	{}
	{}
	{}
	
Poly(n^1)

Accelerate

	Loop Acceleration

	Original rule:
	(-2+i1 == 0 /\ i4 > 0) /\ i1'=2, i3'=2+i3, i4'=-1+i4, i5'=2*i5, i6'=i5
	New rule:
	(-2+i1 >= 0 /\ 1+i4-it11 > 0 /\ i4 > 0 /\ 2-i1 >= 0 /\ -1+it11 >= 0) /\ i1'=i1, i3'=i3+2*it11, i4'=i4-it11, i5'=2^it11*i5, i6'=i5*2^(-1+it11)

		-2+i1 >= 0 [0]: unchanged
		
		i4 > 0 [0]: montonic decrease yields (1+i4-it11 > 0 /\ i4 > 0)
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, i4 > 0 -> (1+i4-it11 > 0 /\ i4 > 0), 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-2+i1 >= 0 /\ 1+i4-it11 > 0 /\ i4 > 0 /\ 2-i1 >= 0 /\ -1+it11 >= 0) /\ i1'=i1, i3'=i3+2*it11, i4'=i4-it11, i5'=2^it11*i5, i6'=i5*2^(-1+it11)
	New rule:
	(-2+i1 >= 0 /\ 1+i4-it11 > 0 /\ i4 > 0 /\ 2-i1 >= 0 /\ -1+it11 >= 0) /\ i3'=i3+2*it11, i4'=i4-it11, i5'=2^it11*i5, i6'=i5*2^(-1+it11)
	
	Instantiation

	Original rule:
	(-2+i1 >= 0 /\ 1+i4-it11 > 0 /\ i4 > 0 /\ 2-i1 >= 0 /\ -1+it11 >= 0) /\ i3'=i3+2*it11, i4'=i4-it11, i5'=2^it11*i5, i6'=i5*2^(-1+it11)
	New rule:
	(1 > 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ i4 > 0 /\ 2-i1 >= 0) /\ i3'=i3+2*i4, i4'=0, i5'=2^i4*i5, i6'=2^(-1+i4)*i5

Start location: f

Location map:
LoAT_sink -> 0
f -> 1
g -> 2
g1 -> 3
h -> 4

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i5'=1, i6'=0
   3: (-2+i1 == 0 /\ i4 <= 0) /\ i1'=4, i3'=1+i3
   4: (-4+i1 == 0 /\ i5 > 0) /\ i1'=4, i3'=1+i3, i5'=-1+i5
   6: (-2+i1 == 0 /\ i4 > 0) /\ i1'=2, i3'=2+i3, i4'=-1+i4, i5'=2*i5, i6'=i5
   7: (1 > 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ i4 > 0 /\ 2-i1 >= 0) /\ i3'=i3+2*i4, i4'=0, i5'=2^i4*i5, i6'=2^(-1+i4)*i5

Dependency graph:
0 -> 3, 0 -> 6, 0 -> 7
3 -> 4
4 -> 4
6 -> 3, 6 -> 6, 6 -> 7
7 -> 3, 7 -> 6

	Trace

	0[(-1+i1 == 0)]
	7[(1 > 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ i4 > 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{}
	{6[T], 7[T]}
	
Step with 3

	Trace

	0[(-1+i1 == 0)]
	7[(1 > 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ i4 > 0 /\ 2-i1 >= 0)]
	3[(-2+i1 == 0 /\ i4 <= 0)]
	
	Blocked

	{}
	{}
	{6[T], 7[T]}
	{}
	
Step with 4

	Trace

	0[(-1+i1 == 0)]
	7[(1 > 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ i4 > 0 /\ 2-i1 >= 0)]
	3[(-2+i1 == 0 /\ i4 <= 0)]
	4[(-4+i1 == 0 /\ i5 > 0)]
	
	Blocked

	{}
	{}
	{6[T], 7[T]}
	{}
	{}
	
Exp

Accelerate

	Loop Acceleration

	Original rule:
	(-4+i1 == 0 /\ i5 > 0) /\ i1'=4, i3'=1+i3, i5'=-1+i5
	New rule:
	(1-it35+i5 > 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+it35 >= 0) /\ i1'=i1, i3'=i3+it35, i5'=-it35+i5

		-4+i1 >= 0 [0]: unchanged
		
		4-i1 >= 0 [0]: unchanged
		
		i5 > 0 [0]: montonic decrease yields 1-it35+i5 > 0
		
		Replacement map: {-4+i1 >= 0 -> -4+i1 >= 0, 4-i1 >= 0 -> 4-i1 >= 0, i5 > 0 -> 1-it35+i5 > 0}

	Removed Trivial Updates

	Original rule:
	(1-it35+i5 > 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+it35 >= 0) /\ i1'=i1, i3'=i3+it35, i5'=-it35+i5
	New rule:
	(1-it35+i5 > 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+it35 >= 0) /\ i3'=i3+it35, i5'=-it35+i5
	
	Instantiation

	Original rule:
	(1-it35+i5 > 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+it35 >= 0) /\ i3'=i3+it35, i5'=-it35+i5
	New rule:
	(1 > 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+i5 >= 0) /\ i3'=i3+i5, i5'=0

Start location: f

Location map:
LoAT_sink -> 0
f -> 1
g -> 2
g1 -> 3
h -> 4

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i5'=1, i6'=0
   3: (-2+i1 == 0 /\ i4 <= 0) /\ i1'=4, i3'=1+i3
   4: (-4+i1 == 0 /\ i5 > 0) /\ i1'=4, i3'=1+i3, i5'=-1+i5
   6: (-2+i1 == 0 /\ i4 > 0) /\ i1'=2, i3'=2+i3, i4'=-1+i4, i5'=2*i5, i6'=i5
   7: (1 > 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ i4 > 0 /\ 2-i1 >= 0) /\ i3'=i3+2*i4, i4'=0, i5'=2^i4*i5, i6'=2^(-1+i4)*i5
   8: (1 > 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+i5 >= 0) /\ i3'=i3+i5, i5'=0

Dependency graph:
0 -> 3, 0 -> 6, 0 -> 7
3 -> 4, 3 -> 8
4 -> 4, 4 -> 8
6 -> 3, 6 -> 6, 6 -> 7
7 -> 3, 7 -> 6
8 -> 4

	Trace

	0[(-1+i1 == 0)]
	7[(1 > 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ i4 > 0 /\ 2-i1 >= 0)]
	3[(-2+i1 == 0 /\ i4 <= 0)]
	8[(1 > 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{}
	{6[T], 7[T]}
	{}
	{4[T], 8[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	7[(1 > 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ i4 > 0 /\ 2-i1 >= 0)]
	3[(-2+i1 == 0 /\ i4 <= 0)]
	
	Blocked

	{}
	{}
	{6[T], 7[T]}
	{8[T]}
	
Step with 4

	Trace

	0[(-1+i1 == 0)]
	7[(1 > 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ i4 > 0 /\ 2-i1 >= 0)]
	3[(-2+i1 == 0 /\ i4 <= 0)]
	4[(-4+i1 == 0 /\ i5 > 0)]
	
	Blocked

	{}
	{}
	{6[T], 7[T]}
	{8[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	7[(1 > 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ i4 > 0 /\ 2-i1 >= 0)]
	3[(-2+i1 == 0 /\ i4 <= 0)]
	
	Blocked

	{}
	{}
	{6[T], 7[T]}
	{4[T], 8[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	7[(1 > 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ i4 > 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{}
	{3[T], 6[T], 7[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{7[T]}
	
Step with 6

	Trace

	0[(-1+i1 == 0)]
	6[(-2+i1 == 0 /\ i4 > 0)]
	
	Blocked

	{}
	{7[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{6[T], 7[T]}
	
Step with 3

	Trace

	0[(-1+i1 == 0)]
	3[(-2+i1 == 0 /\ i4 <= 0)]
	
	Blocked

	{}
	{6[T], 7[T]}
	{}
	
Step with 4

	Trace

	0[(-1+i1 == 0)]
	3[(-2+i1 == 0 /\ i4 <= 0)]
	4[(-4+i1 == 0 /\ i5 > 0)]
	
	Blocked

	{}
	{6[T], 7[T]}
	{}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	3[(-2+i1 == 0 /\ i4 <= 0)]
	
	Blocked

	{}
	{6[T], 7[T]}
	{4[T]}
	
Step with 8

	Trace

	0[(-1+i1 == 0)]
	3[(-2+i1 == 0 /\ i4 <= 0)]
	8[(1 > 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{6[T], 7[T]}
	{4[T]}
	{8[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	3[(-2+i1 == 0 /\ i4 <= 0)]
	
	Blocked

	{}
	{6[T], 7[T]}
	{4[T], 8[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{3[T], 6[T], 7[T]}
	
Backtrack

	Trace

	Blocked

	{0[T]}
	
Accept

Exp


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(EXP))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  
  Locations:  l0, l1, l2, l3
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂) → l1(X₀, 1, 0)
  t₁: l1(X₀, X₁, X₂) → l2(X₀-1, X₁, X₁) :|: 1 ≤ X₀
  t₃: l1(X₀, X₁, X₂) → l3(X₀, X₁, X₂) :|: X₀ ≤ 0
  t₂: l2(X₀, X₁, X₂) → l1(X₀, X₁+X₂, X₂)
  t₄: l3(X₀, X₁, X₂) → l3(X₀, X₁-1, X₂) :|: 1 ≤ X₁


Preprocessing
  Found invariant 1+X₂ ≤ X₁ ∧ 0 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 1 ≤ X₁ for location l1


  Found invariant X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ X₁ ≤ X₂ ∧ 1 ≤ X₀+X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 0 ≤ X₀ for location l2


  Found invariant 0 ≤ X₂ ∧ 0 ≤ X₁+X₂ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₁ ∧ X₀ ≤ X₁ ∧ X₀ ≤ 0 for location l3


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  
  Locations:  l0, l1, l2, l3
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂) → l1(X₀, 1, 0)
  t₁: l1(X₀, X₁, X₂) → l2(X₀-1, X₁, X₁) :|: 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ 0 ≤ X₂
  t₃: l1(X₀, X₁, X₂) → l3(X₀, X₁, X₂) :|: X₀ ≤ 0 ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ 0 ≤ X₂
  t₂: l2(X₀, X₁, X₂) → l1(X₀, X₁+X₂, X₂) :|: 1 ≤ X₀+X₁ ∧ 1 ≤ X₀+X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 0 ≤ X₀ ∧ X₂ ≤ X₁ ∧ X₁ ≤ X₂
  t₄: l3(X₀, X₁, X₂) → l3(X₀, X₁-1, X₂) :|: 1 ≤ X₁ ∧ X₀ ≤ 0 ∧ X₀ ≤ X₁ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₁ ∧ 0 ≤ X₁+X₂ ∧ 0 ≤ X₂


MPRF for transition t₁: l1(X₀, X₁, X₂) → l2(X₀-1, X₁, X₁) :|: 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ 0 ≤ X₂ of depth 1:
  new bound:
    X₀ {O(n)}

  MPRF:
    • l1: [X₀]
    • l2: [X₀]




MPRF for transition t₂: l2(X₀, X₁, X₂) → l1(X₀, X₁+X₂, X₂) :|: 1 ≤ X₀+X₁ ∧ 1 ≤ X₀+X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 0 ≤ X₀ ∧ X₂ ≤ X₁ ∧ X₁ ≤ X₂ of depth 1:
  new bound:
    X₀ {O(n)}

  MPRF:
    • l1: [X₀]
    • l2: [1+X₀]




MPRF for transition t₄: l3(X₀, X₁, X₂) → l3(X₀, X₁-1, X₂) :|: 1 ≤ X₁ ∧ X₀ ≤ 0 ∧ X₀ ≤ X₁ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₁ ∧ 0 ≤ X₁+X₂ ∧ 0 ≤ X₂ of depth 1:
  new bound:
    2^X₀+2 {O(EXP)}

  MPRF:
    • l3: [1+X₁]




  Found invariant X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ X₁ ≤ X₂ ∧ 1 ≤ X₀+X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 0 ≤ X₀ for location l2


  Found invariant 1+X₂ ≤ X₁ ∧ 0 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 1 ≤ X₁ for location l1


  Found invariant 1+X₂ ≤ X₁ ∧ 0 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1+X₀ ≤ X₁ ∧ X₀ ≤ 0 for location l3


  Found invariant 0 ≤ X₂ ∧ 0 ≤ X₁+X₂ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₁ ∧ X₀ ≤ X₁ ∧ X₀ ≤ 0 for location l3_v1


All Bounds
Timebounds
  Overall timebound:2^X₀+2⋅X₀+4 {O(EXP)}
    t₀: 1 {O(1)}
    t₁: X₀ {O(n)}
    t₂: X₀ {O(n)}
    t₃: 1 {O(1)}
    t₄: 2^X₀+2 {O(EXP)}


Costbounds
  Overall costbound: 2^X₀+2⋅X₀+4 {O(EXP)}
    t₀: 1 {O(1)}
    t₁: X₀ {O(n)}
    t₂: X₀ {O(n)}
    t₃: 1 {O(1)}
    t₄: 2^X₀+2 {O(EXP)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: 1 {O(1)}
    t₀, X₂: 0 {O(1)}
    t₁, X₀: X₀ {O(n)}
    t₁, X₁: 2^X₀ {O(EXP)}
    t₁, X₂: 2^X₀+1 {O(EXP)}
    t₂, X₀: X₀ {O(n)}
    t₂, X₁: 2^X₀ {O(EXP)}
    t₂, X₂: 2^X₀+1 {O(EXP)}
    t₃, X₀: 2⋅X₀ {O(n)}
    t₃, X₁: 2^X₀+1 {O(EXP)}
    t₃, X₂: 2^X₀+1 {O(EXP)}
    t₄, X₀: 2⋅X₀ {O(n)}
    t₄, X₁: 2^X₀+1 {O(EXP)}
    t₄, X₂: 2^X₀+1 {O(EXP)}

