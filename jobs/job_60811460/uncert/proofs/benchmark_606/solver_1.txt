NO

# LoAT Proof:
NO

NO

Initial ITS

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f6 -> 2
f9 -> 3
f17 -> 4
f24 -> 5

Rules:
   0: (-2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=3, i3'=1+i3, i5'=it2
   1: (-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=3, i3'=1+i3, i5'=it3
   2: (-2+i1 == 0 /\ i4 == 0) /\ i1'=4, i3'=1+i3, i4'=0
   3: (-i6 >= 0 /\ -4+i1 == 0) /\ i1'=5, i3'=1+i3
   4: (-2+i6 >= 0 /\ -4+i1 == 0) /\ i1'=5, i3'=1+i3
   5: (-4+i1 == 0 /\ -1+i6 == 0) /\ i1'=5, i3'=1+i3, i6'=0
   6: (-3+i1 == 0 /\ i5 == 0) /\ i1'=4, i3'=1+i3, i5'=0, i6'=1
   7: (-3+i1 == 0 /\ -1-i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=it4
   8: (-3+i1 == 0 /\ -1+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=it5
   9: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=it6, i6'=0

Dependency graph:
0 -> 6, 0 -> 7, 0 -> 8
1 -> 6, 1 -> 7, 1 -> 8
2 -> 3, 2 -> 4, 2 -> 5
6 -> 3, 6 -> 4, 6 -> 5
7 -> 0, 7 -> 1, 7 -> 2
8 -> 0, 8 -> 1, 8 -> 2
9 -> 0, 9 -> 1, 9 -> 2

Refined Dependency Graph

	Removed the following edges: 6 -> 3, 6 -> 4

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f6 -> 2
f9 -> 3
f17 -> 4
f24 -> 5

Rules:
   0: (-2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=3, i3'=1+i3, i5'=it2
   1: (-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=3, i3'=1+i3, i5'=it3
   2: (-2+i1 == 0 /\ i4 == 0) /\ i1'=4, i3'=1+i3, i4'=0
   3: (-i6 >= 0 /\ -4+i1 == 0) /\ i1'=5, i3'=1+i3
   4: (-2+i6 >= 0 /\ -4+i1 == 0) /\ i1'=5, i3'=1+i3
   5: (-4+i1 == 0 /\ -1+i6 == 0) /\ i1'=5, i3'=1+i3, i6'=0
   6: (-3+i1 == 0 /\ i5 == 0) /\ i1'=4, i3'=1+i3, i5'=0, i6'=1
   7: (-3+i1 == 0 /\ -1-i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=it4
   8: (-3+i1 == 0 /\ -1+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=it5
   9: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=it6, i6'=0

Dependency graph:
0 -> 6, 0 -> 7, 0 -> 8
1 -> 6, 1 -> 7, 1 -> 8
2 -> 3, 2 -> 4, 2 -> 5
6 -> 5
7 -> 0, 7 -> 1, 7 -> 2
8 -> 0, 8 -> 1, 8 -> 2
9 -> 0, 9 -> 1, 9 -> 2

Step with 9

	Trace

	9[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 2

	Trace

	9[(-1+i1 == 0)]
	2[(-2+i1 == 0 /\ i4 == 0)]
	
	Blocked

	{}
	{}
	{}
	
Step with 3

	Trace

	9[(-1+i1 == 0)]
	2[(-2+i1 == 0 /\ i4 == 0)]
	3[(-i6 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{}
	{5[T]}
	{}
	
Backtrack

	Trace

	9[(-1+i1 == 0)]
	2[(-2+i1 == 0 /\ i4 == 0)]
	
	Blocked

	{}
	{}
	{3[T], 5[T]}
	
Backtrack

	Trace

	9[(-1+i1 == 0)]
	
	Blocked

	{}
	{2[T]}
	
Step with 1

	Trace

	9[(-1+i1 == 0)]
	1[(-1+i4 >= 0 /\ -2+i1 == 0)]
	
	Blocked

	{}
	{2[T]}
	{}
	
Step with 8

	Trace

	9[(-1+i1 == 0)]
	1[(-1+i4 >= 0 /\ -2+i1 == 0)]
	8[(-3+i1 == 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{2[T]}
	{}
	{}
	
Nonterm

	Certificate of Non-Termination

	Original rule:
	(-1+it3 >= 0 /\ -1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=2+i3, i4'=it5, i5'=it3
	New rule:
	(-1+it3 >= 0 /\ i4-it5 <= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0) /\ i1'=0

		-1+it3 >= 0 [0]: unchanged
		
		-1+i4 >= 0 [0]: eventual decrease yields (-1+i4 >= 0 /\ -1+it5 >= 0)
		
		-1+i4 >= 0 [1]: eventual increase yields (i4-it5 <= 0 /\ -1+i4 >= 0)
		
		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-1+it3 >= 0 -> -1+it3 >= 0, -1+i4 >= 0 -> (i4-it5 <= 0 /\ -1+i4 >= 0), -2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

		Simplified Guard

		Original rule:
		(0 == 0 /\ -1+it3 >= 0 /\ -1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=2+i3, i4'=it5, i5'=it3
		New rule:
		(-1+it3 >= 0 /\ -1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=2+i3, i4'=it5, i5'=it3

	Loop Acceleration

	Original rule:
	(-1+it3 >= 0 /\ -1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=2+i3, i4'=it5, i5'=it3
	New rule:
	(-1+it3 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ -1+it35 >= 0 /\ 2-i1 >= 0 /\ -1+it5 >= 0) /\ i1'=i1, i3'=i3+2*it35, i4'=it5, i5'=it3

		-1+it3 >= 0 [0]: unchanged
		
		-1+i4 >= 0 [0]: eventual decrease yields (-1+i4 >= 0 /\ -1+it5 >= 0)
		
		-1+i4 >= 0 [1]: eventual increase yields (i4-it5 <= 0 /\ -1+i4 >= 0)
		
		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-1+it3 >= 0 -> -1+it3 >= 0, -1+i4 >= 0 -> (-1+i4 >= 0 /\ -1+it5 >= 0), -2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-1+it3 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ -1+it35 >= 0 /\ 2-i1 >= 0 /\ -1+it5 >= 0) /\ i1'=i1, i3'=i3+2*it35, i4'=it5, i5'=it3
	New rule:
	(-1+it3 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ -1+it35 >= 0 /\ 2-i1 >= 0 /\ -1+it5 >= 0) /\ i3'=i3+2*it35, i4'=it5, i5'=it3

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f6 -> 2
f9 -> 3
f17 -> 4
f24 -> 5

Rules:
   0: (-2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=3, i3'=1+i3, i5'=it2
   1: (-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=3, i3'=1+i3, i5'=it3
   2: (-2+i1 == 0 /\ i4 == 0) /\ i1'=4, i3'=1+i3, i4'=0
   3: (-i6 >= 0 /\ -4+i1 == 0) /\ i1'=5, i3'=1+i3
   4: (-2+i6 >= 0 /\ -4+i1 == 0) /\ i1'=5, i3'=1+i3
   5: (-4+i1 == 0 /\ -1+i6 == 0) /\ i1'=5, i3'=1+i3, i6'=0
   6: (-3+i1 == 0 /\ i5 == 0) /\ i1'=4, i3'=1+i3, i5'=0, i6'=1
   7: (-3+i1 == 0 /\ -1-i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=it4
   8: (-3+i1 == 0 /\ -1+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=it5
   9: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=it6, i6'=0
  10: (-1+it3 >= 0 /\ i4-it5 <= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0) /\ i1'=0
  11: (-1+it3 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ -1+it35 >= 0 /\ 2-i1 >= 0 /\ -1+it5 >= 0) /\ i3'=i3+2*it35, i4'=it5, i5'=it3

Dependency graph:
0 -> 6, 0 -> 7, 0 -> 8
1 -> 6, 1 -> 7, 1 -> 8
2 -> 3, 2 -> 4, 2 -> 5
6 -> 5
7 -> 0, 7 -> 1, 7 -> 2, 7 -> 10, 7 -> 11
8 -> 0, 8 -> 1, 8 -> 2, 8 -> 10, 8 -> 11
9 -> 0, 9 -> 1, 9 -> 2, 9 -> 10, 9 -> 11
11 -> 0, 11 -> 1, 11 -> 2, 11 -> 10

Step with 10

	Trace

	9[(-1+i1 == 0)]
	10[(-1+it3 >= 0 /\ i4-it5 <= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{2[T]}
	{10[T]}
	
Refute

	Counterexample

	(i1=1, i3=-1, i5=0)
	-9-> (i1=2, i3=0, i4=1, i5=0, i6=0 )
	-10-> ( )
	
NO

Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
MAYBE


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  D
  Locations:  l0, l1, l2, l3, l4
  Return Locations:  
  Transitions:
  t₉: l0(X₀, X₁, X₂) → l1(D, X₁, 0)
  t₀: l1(X₀, X₁, X₂) → l3(X₀, D, X₂) :|: 1+X₀ ≤ 0
  t₁: l1(X₀, X₁, X₂) → l3(X₀, D, X₂) :|: 1 ≤ X₀
  t₂: l1(X₀, X₁, X₂) → l4(0, X₁, X₂) :|: 0 ≤ X₀ ∧ X₀ ≤ 0
  t₇: l3(X₀, X₁, X₂) → l1(D, X₁, X₂) :|: 1+X₁ ≤ 0
  t₈: l3(X₀, X₁, X₂) → l1(D, X₁, X₂) :|: 1 ≤ X₁
  t₆: l3(X₀, X₁, X₂) → l4(X₀, 0, 1) :|: 0 ≤ X₁ ∧ X₁ ≤ 0
  t₃: l4(X₀, X₁, X₂) → l2(X₀, X₁, X₂) :|: X₂ ≤ 0
  t₄: l4(X₀, X₁, X₂) → l2(X₀, X₁, X₂) :|: 2 ≤ X₂
  t₅: l4(X₀, X₁, X₂) → l2(X₀, X₁, 0) :|: X₂ ≤ 1 ∧ 1 ≤ X₂


Preprocessing
  Found invariant X₂ ≤ 0 ∧ 0 ≤ X₂ for location l2


  Found invariant X₂ ≤ 0 ∧ 0 ≤ X₂ for location l1


  Found invariant X₂ ≤ 1 ∧ 0 ≤ X₂ for location l4


  Found invariant X₂ ≤ 0 ∧ 0 ≤ X₂ for location l3


  Cut unsatisfiable transition [t₄: l4→l2]


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  D
  Locations:  l0, l1, l2, l3, l4
  Return Locations:  
  Transitions:
  t₉: l0(X₀, X₁, X₂) → l1(D, X₁, 0)
  t₀: l1(X₀, X₁, X₂) → l3(X₀, D, X₂) :|: 1+X₀ ≤ 0 ∧ 0 ≤ X₂ ∧ X₂ ≤ 0
  t₁: l1(X₀, X₁, X₂) → l3(X₀, D, X₂) :|: 1 ≤ X₀ ∧ 0 ≤ X₂ ∧ X₂ ≤ 0
  t₂: l1(X₀, X₁, X₂) → l4(0, X₁, X₂) :|: 0 ≤ X₀ ∧ X₀ ≤ 0 ∧ 0 ≤ X₂ ∧ X₂ ≤ 0
  t₇: l3(X₀, X₁, X₂) → l1(D, X₁, X₂) :|: 1+X₁ ≤ 0 ∧ 0 ≤ X₂ ∧ X₂ ≤ 0
  t₈: l3(X₀, X₁, X₂) → l1(D, X₁, X₂) :|: 1 ≤ X₁ ∧ 0 ≤ X₂ ∧ X₂ ≤ 0
  t₆: l3(X₀, X₁, X₂) → l4(X₀, 0, 1) :|: 0 ≤ X₁ ∧ X₁ ≤ 0 ∧ 0 ≤ X₂ ∧ X₂ ≤ 0
  t₃: l4(X₀, X₁, X₂) → l2(X₀, X₁, X₂) :|: X₂ ≤ 0 ∧ X₂ ≤ 1 ∧ 0 ≤ X₂
  t₅: l4(X₀, X₁, X₂) → l2(X₀, X₁, 0) :|: X₂ ≤ 1 ∧ 1 ≤ X₂ ∧ 0 ≤ X₂


  Cut unreachable locations [l3] from the program graph


  Found invariant X₂ ≤ 0 ∧ 1+X₁+X₂ ≤ 0 ∧ 0 ≤ X₂ ∧ 1+X₁ ≤ X₂ ∧ 1+X₁ ≤ 0 for location l1_v2


  Found invariant X₂ ≤ 0 ∧ 0 ≤ X₂ for location l2


  Found invariant X₂ ≤ 0 ∧ 1+X₀+X₂ ≤ 0 ∧ 0 ≤ X₂ ∧ 1+X₀ ≤ X₂ ∧ 1+X₀ ≤ 0 for location l3_v2


  Found invariant X₂ ≤ 0 ∧ 1+X₂ ≤ X₁ ∧ 0 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 1 ≤ X₁ for location l1_v1


  Found invariant X₂ ≤ 0 ∧ 0 ≤ X₂ for location l1


  Found invariant X₂ ≤ 1 ∧ 0 ≤ X₂ for location l4


  Found invariant X₂ ≤ 0 ∧ 1+X₂ ≤ X₀ ∧ 0 ≤ X₂ ∧ 1 ≤ X₀+X₂ ∧ 1 ≤ X₀ for location l3_v1


All Bounds
Timebounds
  Overall timebound:inf {Infinity}
    t₀: inf {Infinity}
    t₁: inf {Infinity}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: inf {Infinity}
    t₈: inf {Infinity}
    t₉: 1 {O(1)}


Costbounds
  Overall costbound: inf {Infinity}
    t₀: inf {Infinity}
    t₁: inf {Infinity}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: inf {Infinity}
    t₈: inf {Infinity}
    t₉: 1 {O(1)}


Sizebounds
    t₀, X₂: 0 {O(1)}
    t₁, X₂: 0 {O(1)}
    t₂, X₀: 0 {O(1)}
    t₂, X₂: 0 {O(1)}
    t₃, X₀: 0 {O(1)}
    t₃, X₂: 0 {O(1)}
    t₅, X₁: 0 {O(1)}
    t₅, X₂: 0 {O(1)}
    t₆, X₁: 0 {O(1)}
    t₆, X₂: 1 {O(1)}
    t₇, X₂: 0 {O(1)}
    t₈, X₂: 0 {O(1)}
    t₉, X₁: X₁ {O(n)}
    t₉, X₂: 0 {O(1)}

