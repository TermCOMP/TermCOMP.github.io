WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [lbl72/13]
1. recursive  : [lbl52/13,lbl72_loop_cont/14]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [stop/7]
4. non_recursive  : [lbl52_loop_cont/8]
5. non_recursive  : [start/7]
6. non_recursive  : [start0/7]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into lbl72/13
1. SCC is partially evaluated into lbl52/13
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into lbl52_loop_cont/8
5. SCC is partially evaluated into start/7
6. SCC is partially evaluated into start0/7

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations lbl72/13 
* CE 9 is refined into CE [17] 
* CE 8 is refined into CE [18] 
* CE 7 is refined into CE [19] 


### Cost equations --> "Loop" of lbl72/13 
* CEs [17] --> Loop 15 
* CEs [18] --> Loop 16 
* CEs [19] --> Loop 17 

### Ranking functions of CR lbl72(A,B,C,D,E,F,G,H,I,J,K,L,M) 

#### Partial ranking functions of CR lbl72(A,B,C,D,E,F,G,H,I,J,K,L,M) 


### Specialization of cost equations lbl52/13 
* CE 16 is refined into CE [20] 
* CE 12 is refined into CE [21] 
* CE 14 is refined into CE [22] 
* CE 15 is refined into CE [23] 
* CE 13 is refined into CE [24] 


### Cost equations --> "Loop" of lbl52/13 
* CEs [23] --> Loop 18 
* CEs [24] --> Loop 19 
* CEs [20] --> Loop 20 
* CEs [21] --> Loop 21 
* CEs [22] --> Loop 22 

### Ranking functions of CR lbl52(A,B,C,D,E,F,G,H,I,J,K,L,M) 

#### Partial ranking functions of CR lbl52(A,B,C,D,E,F,G,H,I,J,K,L,M) 
* Partial RF of phase [18,19]:
  - RF of loop [18:1]:
    B depends on loops [19:1] 
  - RF of loop [19:1]:
    -B+1 depends on loops [18:1] 
    D-1


### Specialization of cost equations lbl52_loop_cont/8 
* CE 10 is refined into CE [25] 
* CE 11 is refined into CE [26] 


### Cost equations --> "Loop" of lbl52_loop_cont/8 
* CEs [25] --> Loop 23 
* CEs [26] --> Loop 24 

### Ranking functions of CR lbl52_loop_cont(A,B,C,D,E,F,G,H) 

#### Partial ranking functions of CR lbl52_loop_cont(A,B,C,D,E,F,G,H) 


### Specialization of cost equations start/7 
* CE 6 is refined into CE [27,28,29,30,31] 
* CE 2 is refined into CE [32] 
* CE 3 is refined into CE [33,34,35] 
* CE 4 is refined into CE [36] 
* CE 5 is refined into CE [37] 


### Cost equations --> "Loop" of start/7 
* CEs [29,31] --> Loop 25 
* CEs [30] --> Loop 26 
* CEs [33,34,35] --> Loop 27 
* CEs [32] --> Loop 28 
* CEs [37] --> Loop 29 
* CEs [28] --> Loop 30 
* CEs [36] --> Loop 31 
* CEs [27] --> Loop 32 

### Ranking functions of CR start(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR start(A,B,C,D,E,F,G) 


### Specialization of cost equations start0/7 
* CE 1 is refined into CE [38,39,40,41,42,43,44,45] 


### Cost equations --> "Loop" of start0/7 
* CEs [45] --> Loop 33 
* CEs [44] --> Loop 34 
* CEs [42] --> Loop 35 
* CEs [41] --> Loop 36 
* CEs [43] --> Loop 37 
* CEs [40] --> Loop 38 
* CEs [39] --> Loop 39 
* CEs [38] --> Loop 40 

### Ranking functions of CR start0(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR start0(A,B,C,D,E,F,G) 


Computing Bounds
=====================================

#### Cost of chains of lbl72(A,B,C,D,E,F,G,H,I,J,K,L,M):
* Chain [17]: 0
  with precondition: [D=0,G=2,K=0,B=A,J=C,L=E,B=F,B=H,B=I,B=M,B>=1] 

* Chain [16]: 0
  with precondition: [G=3,B=A,J=C,L=E,B=F,B=H,B=I+1,D=K,B=M,D>=1,B>=D+1] 

* Chain [15]: 0
  with precondition: [G=4,B=A,B=F,D>=0,B>=D+1] 


#### Cost of chains of lbl52(A,B,C,D,E,F,G,H,I,J,K,L,M):
* Chain [[18,19],22]: 1*it(18)+1*it(19)+0
  Such that:it(19) =< D
aux(23) =< B
aux(24) =< I
aux(17) =< aux(24)
aux(17) =< aux(24)
aux(18) =< it(19)*aux(17)
aux(1) =< it(19)*aux(17)
aux(12) =< it(19)*aux(24)
aux(1) =< it(19)*aux(24)
aux(3) =< aux(18)
aux(3) =< aux(12)
it(18) =< aux(1)+aux(23)
it(18) =< aux(3)+aux(23)

  with precondition: [G=2,K=0,A=F,A=H,A=I,C=J,E=L,A=M,B>=0,D>=1,A>=D,B+D>=2] 

* Chain [[18,19],21]: 1*it(18)+1*it(19)+0
  Such that:it(19) =< D
aux(25) =< B
aux(26) =< F
aux(17) =< aux(26)
aux(17) =< aux(26)
aux(18) =< it(19)*aux(17)
aux(1) =< it(19)*aux(17)
aux(12) =< it(19)*aux(26)
aux(1) =< it(19)*aux(26)
aux(3) =< aux(18)
aux(3) =< aux(12)
it(18) =< aux(1)+aux(25)
it(18) =< aux(3)+aux(25)

  with precondition: [G=4,A=F,B>=0,D>=1,A>=D,B+D>=2] 

* Chain [[18,19],20]: 1*it(18)+1*it(19)+0
  Such that:it(19) =< D
aux(27) =< B
aux(28) =< F
aux(17) =< aux(28)
aux(17) =< aux(28)
aux(18) =< it(19)*aux(17)
aux(1) =< it(19)*aux(17)
aux(12) =< it(19)*aux(28)
aux(1) =< it(19)*aux(28)
aux(3) =< aux(18)
aux(3) =< aux(12)
it(18) =< aux(1)+aux(27)
it(18) =< aux(3)+aux(27)

  with precondition: [G=4,A=F,B>=0,D>=1,A>=D,B+D>=2] 

* Chain [22]: 0
  with precondition: [B=0,D=1,G=2,K=0,J=C,L=E,A=F,A=H,A=I,A=M,A>=1] 

* Chain [21]: 0
  with precondition: [B=0,G=4,A=F,D>=1,A>=D] 

* Chain [20]: 0
  with precondition: [G=4] 


#### Cost of chains of lbl52_loop_cont(A,B,C,D,E,F,G,H):
* Chain [24]: 0
  with precondition: [A=2] 

* Chain [23]: 0
  with precondition: [A=4] 


#### Cost of chains of start(A,B,C,D,E,F,G):
* Chain [32]: 0
  with precondition: [A=1,B=1,C=1,F=1,E=D] 

* Chain [31]: 0
  with precondition: [A=1,F=1,C=B,E=D,0>=C] 

* Chain [30]: 0
  with precondition: [B=1,C=1,F=A,E=D,F>=1] 

* Chain [29]: 0
  with precondition: [F=A,C=B,E=D,0>=F] 

* Chain [28]: 0
  with precondition: [F=A,C=B,E=D,0>=C,F>=1] 

* Chain [27]: 3*s(19)+3*s(27)+1
  Such that:aux(34) =< F
s(19) =< aux(34)
s(22) =< aux(34)
s(22) =< aux(34)
s(23) =< s(19)*s(22)
s(24) =< s(19)*s(22)
s(25) =< s(19)*aux(34)
s(24) =< s(19)*aux(34)
s(26) =< s(23)
s(26) =< s(25)
s(27) =< s(24)+aux(34)
s(27) =< s(26)+aux(34)

  with precondition: [F=A,C=B,E=D,0>=C,F>=2] 

* Chain [26]: 0
  with precondition: [F=A,C=B,E=D,C>=1,F>=1] 

* Chain [25]: 3*s(38)+1*s(46)+2*s(56)+0
  Such that:s(47) =< B
s(39) =< C
aux(37) =< F
s(38) =< aux(37)
s(41) =< aux(37)
s(41) =< aux(37)
s(42) =< s(38)*s(41)
s(43) =< s(38)*s(41)
s(44) =< s(38)*aux(37)
s(43) =< s(38)*aux(37)
s(45) =< s(42)
s(45) =< s(44)
s(56) =< s(43)+s(47)
s(56) =< s(45)+s(47)
s(46) =< s(43)+s(39)
s(46) =< s(45)+s(39)

  with precondition: [F=A,C=B,E=D,C>=1,F>=1,C+F>=3] 


#### Cost of chains of start0(A,B,C,D,E,F,G):
* Chain [40]: 0
  with precondition: [A=1,C=1] 

* Chain [39]: 0
  with precondition: [A=1,0>=C] 

* Chain [38]: 0
  with precondition: [C=1,A>=1] 

* Chain [37]: 0
  with precondition: [0>=A] 

* Chain [36]: 0
  with precondition: [0>=C,A>=1] 

* Chain [35]: 3*s(58)+3*s(64)+1
  Such that:s(57) =< A
s(58) =< s(57)
s(59) =< s(57)
s(59) =< s(57)
s(60) =< s(58)*s(59)
s(61) =< s(58)*s(59)
s(62) =< s(58)*s(57)
s(61) =< s(58)*s(57)
s(63) =< s(60)
s(63) =< s(62)
s(64) =< s(61)+s(57)
s(64) =< s(63)+s(57)

  with precondition: [0>=C,A>=2] 

* Chain [34]: 0
  with precondition: [A>=1,C>=1] 

* Chain [33]: 3*s(68)+3*s(74)+0
  Such that:s(67) =< A
aux(38) =< C
s(68) =< s(67)
s(69) =< s(67)
s(69) =< s(67)
s(70) =< s(68)*s(69)
s(71) =< s(68)*s(69)
s(72) =< s(68)*s(67)
s(71) =< s(68)*s(67)
s(73) =< s(70)
s(73) =< s(72)
s(74) =< s(71)+aux(38)
s(74) =< s(73)+aux(38)

  with precondition: [A>=1,C>=1,A+C>=3] 


Closed-form bounds of start0(A,B,C,D,E,F,G): 
-------------------------------------
* Chain [40] with precondition: [A=1,C=1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [39] with precondition: [A=1,0>=C] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [38] with precondition: [C=1,A>=1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [37] with precondition: [0>=A] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [36] with precondition: [0>=C,A>=1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [35] with precondition: [0>=C,A>=2] 
    - Upper bound: 6*A+1+3*A*A 
    - Complexity: n^2 
* Chain [34] with precondition: [A>=1,C>=1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [33] with precondition: [A>=1,C>=1,A+C>=3] 
    - Upper bound: 3*A*A+3*A+3*C 
    - Complexity: n^2 

### Maximum cost of start0(A,B,C,D,E,F,G): nat(A)*3*nat(A)+nat(A)*3+max([nat(C)*3,nat(A)*3+1]) 
Asymptotic class: n^2 
* Total analysis performed in 225 ms.

