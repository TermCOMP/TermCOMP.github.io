WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_ex1_10/8,eval_ex1_9/8,eval_ex1_bb3_in/8,eval_ex1_bb4_in/8,eval_ex1_bb5_in/8]
1. recursive  : [eval_ex1_15/12,eval_ex1_16/12,eval_ex1__critedge_in/12,eval_ex1_bb1_in/12,eval_ex1_bb2_in/12,eval_ex1_bb3_in_loop_cont/13]
2. non_recursive  : [eval_ex1_stop/7]
3. non_recursive  : [eval_ex1_bb6_in/7]
4. non_recursive  : [exit_location/1]
5. non_recursive  : [eval_ex1_bb1_in_loop_cont/8]
6. non_recursive  : [eval_ex1_6/7]
7. non_recursive  : [eval_ex1_5/7]
8. non_recursive  : [eval_ex1_4/7]
9. non_recursive  : [eval_ex1_3/7]
10. non_recursive  : [eval_ex1_2/7]
11. non_recursive  : [eval_ex1_1/7]
12. non_recursive  : [eval_ex1_0/7]
13. non_recursive  : [eval_ex1_bb0_in/7]
14. non_recursive  : [eval_ex1_start/7]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_ex1_bb3_in/8
1. SCC is partially evaluated into eval_ex1_bb1_in/12
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_ex1_bb1_in_loop_cont/8
6. SCC is partially evaluated into eval_ex1_6/7
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is partially evaluated into eval_ex1_start/7

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_ex1_bb3_in/8 
* CE 13 is refined into CE [14] 
* CE 10 is refined into CE [15] 
* CE 12 is refined into CE [16] 
* CE 11 is refined into CE [17] 


### Cost equations --> "Loop" of eval_ex1_bb3_in/8 
* CEs [17] --> Loop 14 
* CEs [14] --> Loop 15 
* CEs [15] --> Loop 16 
* CEs [16] --> Loop 17 

### Ranking functions of CR eval_ex1_bb3_in(V_3,V_i_1,V_j_0,V_n,B,C,D,E) 
* RF of phase [14]: [-V_i_1+V_n]

#### Partial ranking functions of CR eval_ex1_bb3_in(V_3,V_i_1,V_j_0,V_n,B,C,D,E) 
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    -V_i_1+V_n


### Specialization of cost equations eval_ex1_bb1_in/12 
* CE 6 is refined into CE [18] 
* CE 5 is refined into CE [19,20] 
* CE 7 is refined into CE [21] 
* CE 3 is refined into CE [22,23] 
* CE 4 is refined into CE [24,25] 


### Cost equations --> "Loop" of eval_ex1_bb1_in/12 
* CEs [25] --> Loop 18 
* CEs [24] --> Loop 19 
* CEs [23] --> Loop 20 
* CEs [22] --> Loop 21 
* CEs [18] --> Loop 22 
* CEs [20] --> Loop 23 
* CEs [19] --> Loop 24 
* CEs [21] --> Loop 25 

### Ranking functions of CR eval_ex1_bb1_in(V_3,V_8,V_i_0,V_i_1,V_j_0,V_n,B,C,D,E,F,G) 
* RF of phase [18,20]: [-V_i_0+V_n-1]

#### Partial ranking functions of CR eval_ex1_bb1_in(V_3,V_8,V_i_0,V_i_1,V_j_0,V_n,B,C,D,E,F,G) 
* Partial RF of phase [18,20]:
  - RF of loop [18:1]:
    -V_i_0+V_n-2
  - RF of loop [20:1]:
    -V_i_0+V_n-1


### Specialization of cost equations eval_ex1_bb1_in_loop_cont/8 
* CE 8 is refined into CE [26] 
* CE 9 is refined into CE [27] 


### Cost equations --> "Loop" of eval_ex1_bb1_in_loop_cont/8 
* CEs [26] --> Loop 26 
* CEs [27] --> Loop 27 

### Ranking functions of CR eval_ex1_bb1_in_loop_cont(A,B,C,D,E,F,G,H) 

#### Partial ranking functions of CR eval_ex1_bb1_in_loop_cont(A,B,C,D,E,F,G,H) 


### Specialization of cost equations eval_ex1_6/7 
* CE 2 is refined into CE [28,29,30,31,32,33,34,35,36,37] 


### Cost equations --> "Loop" of eval_ex1_6/7 
* CEs [32,36] --> Loop 28 
* CEs [31,34,35] --> Loop 29 
* CEs [30] --> Loop 30 
* CEs [37] --> Loop 31 
* CEs [28,33] --> Loop 32 
* CEs [29] --> Loop 33 

### Ranking functions of CR eval_ex1_6(V_3,V_8,V_i_0,V_i_1,V_j_0,V_n,B) 

#### Partial ranking functions of CR eval_ex1_6(V_3,V_8,V_i_0,V_i_1,V_j_0,V_n,B) 


### Specialization of cost equations eval_ex1_start/7 
* CE 1 is refined into CE [38,39,40,41,42,43] 


### Cost equations --> "Loop" of eval_ex1_start/7 
* CEs [43] --> Loop 34 
* CEs [42] --> Loop 35 
* CEs [41] --> Loop 36 
* CEs [40] --> Loop 37 
* CEs [39] --> Loop 38 
* CEs [38] --> Loop 39 

### Ranking functions of CR eval_ex1_start(V_3,V_8,V_i_0,V_i_1,V_j_0,V_n,B) 

#### Partial ranking functions of CR eval_ex1_start(V_3,V_8,V_i_0,V_i_1,V_j_0,V_n,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_ex1_bb3_in(V_3,V_i_1,V_j_0,V_n,B,C,D,E):
* Chain [[14],17]: 1*it(14)+0
  Such that:it(14) =< -V_j_0+E

  with precondition: [B=2,V_n=D,V_i_1+E=V_j_0+V_n,V_j_0>=0,C>=1,V_n>=V_i_1+1] 

* Chain [[14],16]: 1*it(14)+0
  Such that:it(14) =< -V_i_1+D

  with precondition: [B=2,V_i_1+E=V_j_0+D,0>=C,V_j_0>=0,D>=V_i_1+1,V_n>=D+1] 

* Chain [[14],15]: 1*it(14)+0
  Such that:it(14) =< -V_i_1+V_n

  with precondition: [B=3,V_j_0>=0,V_n>=V_i_1+1] 

* Chain [17]: 0
  with precondition: [B=2,C=V_3,V_n=V_i_1,V_n=D,V_j_0=E,V_j_0>=0] 

* Chain [16]: 0
  with precondition: [B=2,V_i_1=D,V_j_0=E,0>=C,V_j_0>=0,V_n>=V_i_1+1] 

* Chain [15]: 0
  with precondition: [B=3,V_j_0>=0,V_n>=V_i_1] 


#### Cost of chains of eval_ex1_bb1_in(V_3,V_8,V_i_0,V_i_1,V_j_0,V_n,B,C,D,E,F,G):
* Chain [[18,20],25]: 3*it(18)+0
  Such that:aux(3) =< -V_i_0+V_n
it(18) =< aux(3)

  with precondition: [B=3,V_i_0>=0,V_n>=V_i_0+2] 

* Chain [[18,20],24]: 3*it(18)+0
  Such that:aux(4) =< -V_i_0+V_n
it(18) =< aux(4)

  with precondition: [B=3,V_i_0>=0,V_n>=V_i_0+2] 

* Chain [[18,20],23]: 4*it(18)+0
  Such that:aux(5) =< -V_i_0+V_n
it(18) =< aux(5)

  with precondition: [B=3,V_i_0>=0,V_n>=V_i_0+3] 

* Chain [[18,20],21,25]: 3*it(18)+1
  Such that:aux(6) =< -V_i_0+V_n
it(18) =< aux(6)

  with precondition: [B=3,V_i_0>=0,V_n>=V_i_0+2] 

* Chain [[18,20],21,22]: 3*it(18)+1
  Such that:aux(7) =< -V_i_0+V_n
it(18) =< aux(7)

  with precondition: [B=4,G=0,V_n=D+1,V_n=E,V_n=F,0>=C,V_i_0>=0,V_n>=V_i_0+2] 

* Chain [[18,20],19,25]: 4*it(18)+1
  Such that:aux(8) =< -V_i_0+V_n
it(18) =< aux(8)

  with precondition: [B=3,V_i_0>=0,V_n>=V_i_0+3] 

* Chain [[18,20],19,24]: 4*it(18)+1
  Such that:aux(9) =< -V_i_0+V_n
it(18) =< aux(9)

  with precondition: [B=3,V_i_0>=0,V_n>=V_i_0+3] 

* Chain [[18,20],19,21,25]: 4*it(18)+2
  Such that:aux(10) =< -V_i_0+V_n
it(18) =< aux(10)

  with precondition: [B=3,V_i_0>=0,V_n>=V_i_0+3] 

* Chain [[18,20],19,21,22]: 4*it(18)+2
  Such that:aux(11) =< -V_i_0+V_n
it(18) =< aux(11)

  with precondition: [B=4,G=0,V_n=D+1,V_n=E,V_n=F,V_i_0>=0,C>=1,V_n>=V_i_0+3] 

* Chain [25]: 0
  with precondition: [B=3,V_i_0>=0] 

* Chain [24]: 0
  with precondition: [B=3,V_i_0>=0,V_n>=V_i_0+1] 

* Chain [23]: 1*s(4)+0
  Such that:s(4) =< -V_i_0+V_n

  with precondition: [B=3,V_i_0>=0,V_n>=V_i_0+2] 

* Chain [22]: 0
  with precondition: [B=4,C=V_3,D=V_8,F=V_i_1,G=V_j_0,V_i_0=E,V_i_0>=0,V_i_0>=V_n] 

* Chain [21,25]: 1
  with precondition: [B=3,V_n=V_i_0+1,V_n>=1] 

* Chain [21,22]: 1
  with precondition: [B=4,G=0,V_n=V_i_0+1,V_3=C,V_n=D+1,V_n=E,V_n=F,V_n>=1] 

* Chain [19,25]: 1*s(5)+1
  Such that:s(5) =< -V_i_0+V_n

  with precondition: [B=3,V_i_0>=0,V_n>=V_i_0+2] 

* Chain [19,24]: 1*s(5)+1
  Such that:s(5) =< -V_i_0+V_n

  with precondition: [B=3,V_i_0>=0,V_n>=V_i_0+2] 

* Chain [19,21,25]: 1*s(5)+2
  Such that:s(5) =< -V_i_0+V_n

  with precondition: [B=3,V_i_0>=0,V_n>=V_i_0+2] 

* Chain [19,21,22]: 1*s(5)+2
  Such that:s(5) =< -V_i_0+D

  with precondition: [B=4,G=0,V_n=D+1,V_n=E,V_n=F,V_i_0>=0,C>=1,V_n>=V_i_0+2] 


#### Cost of chains of eval_ex1_bb1_in_loop_cont(A,B,C,D,E,F,G,H):
* Chain [27]: 0
  with precondition: [A=3] 

* Chain [26]: 0
  with precondition: [A=4] 


#### Cost of chains of eval_ex1_6(V_3,V_8,V_i_0,V_i_1,V_j_0,V_n,B):
* Chain [33]: 0
  with precondition: [] 

* Chain [32]: 1
  with precondition: [V_n=1] 

* Chain [31]: 0
  with precondition: [0>=V_n] 

* Chain [30]: 0
  with precondition: [V_n>=1] 

* Chain [29]: 17*s(25)+2
  Such that:aux(14) =< V_n
s(25) =< aux(14)

  with precondition: [V_n>=2] 

* Chain [28]: 20*s(30)+2
  Such that:aux(15) =< V_n
s(30) =< aux(15)

  with precondition: [V_n>=3] 


#### Cost of chains of eval_ex1_start(V_3,V_8,V_i_0,V_i_1,V_j_0,V_n,B):
* Chain [39]: 0
  with precondition: [] 

* Chain [38]: 1
  with precondition: [V_n=1] 

* Chain [37]: 0
  with precondition: [0>=V_n] 

* Chain [36]: 0
  with precondition: [V_n>=1] 

* Chain [35]: 17*s(34)+2
  Such that:s(33) =< V_n
s(34) =< s(33)

  with precondition: [V_n>=2] 

* Chain [34]: 20*s(36)+2
  Such that:s(35) =< V_n
s(36) =< s(35)

  with precondition: [V_n>=3] 


Closed-form bounds of eval_ex1_start(V_3,V_8,V_i_0,V_i_1,V_j_0,V_n,B): 
-------------------------------------
* Chain [39] with precondition: [] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [38] with precondition: [V_n=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [37] with precondition: [0>=V_n] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [36] with precondition: [V_n>=1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [35] with precondition: [V_n>=2] 
    - Upper bound: 17*V_n+2 
    - Complexity: n 
* Chain [34] with precondition: [V_n>=3] 
    - Upper bound: 20*V_n+2 
    - Complexity: n 

### Maximum cost of eval_ex1_start(V_3,V_8,V_i_0,V_i_1,V_j_0,V_n,B): nat(V_n)*20+1+1 
Asymptotic class: n 
* Total analysis performed in 269 ms.

