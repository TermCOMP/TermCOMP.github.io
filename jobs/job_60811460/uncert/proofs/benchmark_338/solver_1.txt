NO

# LoAT Proof:
NO

NO

Initial ITS

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f14 -> 2
f22 -> 3

Rules:
   0: (-1+i1 == 0 /\ -it2 >= 0) /\ i1'=2, i3'=1+i3, i4'=it2, i5'=it2, i6'=0
   1: (-1024+it3 >= 0 /\ -1+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=it3, i5'=it3, i6'=0
   2: (1023-it6 >= 0 /\ -1+it6 >= 0 /\ -1+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=it6, i5'=it6, i6'=0, i7'=it5
   3: (-2+i1 == 0 /\ -1-i6+it7 >= 0) /\ i1'=2, i3'=1+i3, i6'=1+i6
   4: (-2+i1 == 0 /\ i6-it8 >= 0) /\ i1'=3, i3'=1+i3

Dependency graph:
0 -> 3, 0 -> 4
1 -> 3, 1 -> 4
2 -> 3, 2 -> 4
3 -> 3, 3 -> 4

Preprocessed Transitions

	Eliminated Temporary Variables

	Original rule:
	(-2+i1 == 0 /\ -1-i6+it7 >= 0) /\ i1'=2, i3'=1+i3, i6'=1+i6
	New rule:
	(-2+i1 == 0) /\ i1'=2, i3'=1+i3, i6'=1+i6
	
	Eliminated Temporary Variables

	Original rule:
	(-2+i1 == 0 /\ i6-it8 >= 0) /\ i1'=3, i3'=1+i3
	New rule:
	(-2+i1 == 0) /\ i1'=3, i3'=1+i3

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f14 -> 2
f22 -> 3

Rules:
   0: (-1+i1 == 0 /\ -it2 >= 0) /\ i1'=2, i3'=1+i3, i4'=it2, i5'=it2, i6'=0
   1: (-1024+it3 >= 0 /\ -1+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=it3, i5'=it3, i6'=0
   2: (1023-it6 >= 0 /\ -1+it6 >= 0 /\ -1+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=it6, i5'=it6, i6'=0, i7'=it5
   5: (-2+i1 == 0) /\ i1'=2, i3'=1+i3, i6'=1+i6
   6: (-2+i1 == 0) /\ i1'=3, i3'=1+i3

Dependency graph:
0 -> 5, 0 -> 6
1 -> 5, 1 -> 6
2 -> 5, 2 -> 6
5 -> 5, 5 -> 6

Step with 2

	Trace

	2[(1023-it6 >= 0 /\ -1+it6 >= 0 /\ -1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 6

	Trace

	2[(1023-it6 >= 0 /\ -1+it6 >= 0 /\ -1+i1 == 0)]
	6[(-2+i1 == 0)]
	
	Blocked

	{}
	{}
	{}
	
Backtrack

	Trace

	2[(1023-it6 >= 0 /\ -1+it6 >= 0 /\ -1+i1 == 0)]
	
	Blocked

	{}
	{6[T]}
	
Step with 5

	Trace

	2[(1023-it6 >= 0 /\ -1+it6 >= 0 /\ -1+i1 == 0)]
	5[(-2+i1 == 0)]
	
	Blocked

	{}
	{6[T]}
	{}
	
Nonterm

	Certificate of Non-Termination

	Original rule:
	(-2+i1 == 0) /\ i1'=2, i3'=1+i3, i6'=1+i6
	New rule:
	(-2+i1 >= 0 /\ -1+it29 >= 0 /\ 2-i1 >= 0) /\ i1'=0

		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Loop Acceleration

	Original rule:
	(-2+i1 == 0) /\ i1'=2, i3'=1+i3, i6'=1+i6
	New rule:
	(-2+i1 >= 0 /\ -1+it29 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it29, i6'=i6+it29

		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-2+i1 >= 0 /\ -1+it29 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it29, i6'=i6+it29
	New rule:
	(-2+i1 >= 0 /\ -1+it29 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+it29, i6'=i6+it29

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f14 -> 2
f22 -> 3

Rules:
   0: (-1+i1 == 0 /\ -it2 >= 0) /\ i1'=2, i3'=1+i3, i4'=it2, i5'=it2, i6'=0
   1: (-1024+it3 >= 0 /\ -1+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=it3, i5'=it3, i6'=0
   2: (1023-it6 >= 0 /\ -1+it6 >= 0 /\ -1+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=it6, i5'=it6, i6'=0, i7'=it5
   5: (-2+i1 == 0) /\ i1'=2, i3'=1+i3, i6'=1+i6
   6: (-2+i1 == 0) /\ i1'=3, i3'=1+i3
   7: (-2+i1 >= 0 /\ -1+it29 >= 0 /\ 2-i1 >= 0) /\ i1'=0
   8: (-2+i1 >= 0 /\ -1+it29 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+it29, i6'=i6+it29

Dependency graph:
0 -> 5, 0 -> 6, 0 -> 7, 0 -> 8
1 -> 5, 1 -> 6, 1 -> 7, 1 -> 8
2 -> 5, 2 -> 6, 2 -> 7, 2 -> 8
5 -> 5, 5 -> 6, 5 -> 7, 5 -> 8
8 -> 5, 8 -> 6, 8 -> 7

Step with 7

	Trace

	2[(1023-it6 >= 0 /\ -1+it6 >= 0 /\ -1+i1 == 0)]
	7[(-2+i1 >= 0 /\ -1+it29 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{6[T]}
	{7[T]}
	
Refute

	Counterexample

	(i1=1, i3=-1)
	-2-> (i1=2, i3=0, i4=1, i5=1, i6=0, i7=0 )
	-7-> ( )
	
NO

Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
MAYBE


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃
  Temp_Vars:  E, F
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃) → l1(E, E, 0, X₃) :|: E ≤ 0
  t₁: l0(X₀, X₁, X₂, X₃) → l1(E, E, 0, X₃) :|: 1024 ≤ E
  t₂: l0(X₀, X₁, X₂, X₃) → l1(E, E, 0, F) :|: E ≤ 1023 ∧ 1 ≤ E
  t₃: l1(X₀, X₁, X₂, X₃) → l1(X₀, X₁, 1+X₂, X₃) :|: 1+X₂ ≤ E
  t₄: l1(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, X₃) :|: E ≤ X₂


Preprocessing
  Eliminate variables [F; X₀; X₁; X₃] that do not contribute to the problem


  Found invariant 0 ≤ X₀ for location l1


  Found invariant 0 ≤ X₀ for location l2


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀
  Temp_Vars:  E
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₅: l0(X₀) → l1(0) :|: E ≤ 0
  t₆: l0(X₀) → l1(0) :|: 1024 ≤ E
  t₇: l0(X₀) → l1(0) :|: E ≤ 1023 ∧ 1 ≤ E
  t₈: l1(X₀) → l1(1+X₀) :|: 1+X₀ ≤ E ∧ 0 ≤ X₀
  t₉: l1(X₀) → l2(X₀) :|: E ≤ X₀ ∧ 0 ≤ X₀


  Found invariant X₀ ≤ 0 ∧ 0 ≤ X₀ for location l1


  Found invariant 0 ≤ X₀ for location l2


  Found invariant 1 ≤ X₀ for location l1_v1


All Bounds
Timebounds
  Overall timebound:inf {Infinity}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: 1 {O(1)}
    t₈: inf {Infinity}
    t₉: 1 {O(1)}


Costbounds
  Overall costbound: inf {Infinity}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: 1 {O(1)}
    t₈: inf {Infinity}
    t₉: 1 {O(1)}


Sizebounds
    t₅, X₀: 0 {O(1)}
    t₆, X₀: 0 {O(1)}
    t₇, X₀: 0 {O(1)}

