WORST_CASE(INF,?)

# LoAT Proof:
WORST_CASE(INF,?)

WORST_CASE(INF,?)
Initial ITS

Start location: evalcousot9start

Location map:
LoAT_sink -> 0
evalcousot9start -> 1
evalcousot9entryin -> 2
evalcousot9bb3in -> 3
evalcousot9bbin -> 4
evalcousot9returnin -> 5
evalcousot9bb1in -> 6
evalcousot9bb2in -> 7
evalcousot9stop -> 8

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: -2+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=it2, i5'=i6
   2: (-3+i1 == 0 /\ -1+i5 >= 0) /\ i1'=4, i3'=1+i3
   3: (-3+i1 == 0 /\ -i5 >= 0) /\ i1'=5, i3'=1+i3
   4: (-1+i4 >= 0 /\ -4+i1 == 0) /\ i1'=6, i3'=1+i3
   5: (-4+i1 == 0 /\ -i4 >= 0) /\ i1'=7, i3'=1+i3
   6: -6+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=-1+i4
   7: -7+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=i6, i5'=-1+i5
   8: -5+i1 == 0 /\ i1'=8, i3'=1+i3

Dependency graph:
0 -> 1
1 -> 2, 1 -> 3
2 -> 4, 2 -> 5
3 -> 8
4 -> 6
5 -> 7
6 -> 2, 6 -> 3
7 -> 2, 7 -> 3

Chained Linear Paths

	Applied Chaining

	First rule:
	-1+i1 == 0 /\ i1'=2, i3'=1+i3
	Second rule:
	-2+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=it2, i5'=i6
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=it2, i5'=i6
	
	Applied Deletion

	Removed the following rules: 0, 1
	
	Applied Chaining

	First rule:
	(-3+i1 == 0 /\ -i5 >= 0) /\ i1'=5, i3'=1+i3
	Second rule:
	-5+i1 == 0 /\ i1'=8, i3'=1+i3
	New rule:
	(0 == 0 /\ -3+i1 == 0 /\ -i5 >= 0) /\ i1'=8, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 3, 8
	
	Applied Chaining

	First rule:
	(-1+i4 >= 0 /\ -4+i1 == 0) /\ i1'=6, i3'=1+i3
	Second rule:
	-6+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=-1+i4
	New rule:
	(0 == 0 /\ -1+i4 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=-1+i4
	
	Applied Deletion

	Removed the following rules: 4, 6
	
	Applied Chaining

	First rule:
	(-4+i1 == 0 /\ -i4 >= 0) /\ i1'=7, i3'=1+i3
	Second rule:
	-7+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=i6, i5'=-1+i5
	New rule:
	(0 == 0 /\ -4+i1 == 0 /\ -i4 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6, i5'=-1+i5
	
	Applied Deletion

	Removed the following rules: 5, 7

Start location: evalcousot9start

Location map:
LoAT_sink -> 0
evalcousot9start -> 1
evalcousot9entryin -> 2
evalcousot9bb3in -> 3
evalcousot9bbin -> 4
evalcousot9returnin -> 5
evalcousot9bb1in -> 6
evalcousot9bb2in -> 7
evalcousot9stop -> 8

Rules:
   2: (-3+i1 == 0 /\ -1+i5 >= 0) /\ i1'=4, i3'=1+i3
   9: (0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=it2, i5'=i6
  10: (0 == 0 /\ -3+i1 == 0 /\ -i5 >= 0) /\ i1'=8, i3'=2+i3
  11: (0 == 0 /\ -1+i4 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=-1+i4
  12: (0 == 0 /\ -4+i1 == 0 /\ -i4 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6, i5'=-1+i5

Dependency graph:
2 -> 11, 2 -> 12
9 -> 2, 9 -> 10
11 -> 2, 11 -> 10
12 -> 2, 12 -> 10

Preprocessed Transitions

	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=it2, i5'=i6
	New rule:
	-1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=it2, i5'=i6
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -3+i1 == 0 /\ -i5 >= 0) /\ i1'=8, i3'=2+i3
	New rule:
	(-3+i1 == 0 /\ -i5 >= 0) /\ i1'=8, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+i4 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=-1+i4
	New rule:
	(-1+i4 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=-1+i4
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -4+i1 == 0 /\ -i4 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6, i5'=-1+i5
	New rule:
	(-4+i1 == 0 /\ -i4 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6, i5'=-1+i5

Start location: evalcousot9start

Location map:
LoAT_sink -> 0
evalcousot9start -> 1
evalcousot9entryin -> 2
evalcousot9bb3in -> 3
evalcousot9bbin -> 4
evalcousot9returnin -> 5
evalcousot9bb1in -> 6
evalcousot9bb2in -> 7
evalcousot9stop -> 8

Rules:
   2: (-3+i1 == 0 /\ -1+i5 >= 0) /\ i1'=4, i3'=1+i3
  13: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=it2, i5'=i6
  14: (-3+i1 == 0 /\ -i5 >= 0) /\ i1'=8, i3'=2+i3
  15: (-1+i4 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=-1+i4
  16: (-4+i1 == 0 /\ -i4 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6, i5'=-1+i5

Dependency graph:
2 -> 15, 2 -> 16
13 -> 2, 13 -> 14
15 -> 2, 15 -> 14
16 -> 2, 16 -> 14

Step with 13

	Trace

	13[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 14

	Trace

	13[(-1+i1 == 0)]
	14[(-3+i1 == 0 /\ -i5 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	
	Blocked

	{}
	{14[T]}
	
Step with 2

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{14[T]}
	{}
	
Step with 15

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	15[(-1+i4 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{14[T]}
	{}
	{}
	
Unbounded

Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -3+i1 == 0 /\ -1+i4 >= 0 /\ -1+i5 >= 0) /\ i1'=3, i3'=3+i3, i4'=-1+i4
		New rule:
		(-3+i1 == 0 /\ -1+i4 >= 0 /\ -1+i5 >= 0) /\ i1'=3, i3'=3+i3, i4'=-1+i4

	Loop Acceleration

	Original rule:
	(-3+i1 == 0 /\ -1+i4 >= 0 /\ -1+i5 >= 0) /\ i1'=3, i3'=3+i3, i4'=-1+i4
	New rule:
	(-1+it24 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ i4-it24 >= 0) /\ i1'=i1, i3'=i3+3*it24, i4'=i4-it24

		-3+i1 >= 0 [0]: unchanged
		
		-1+i4 >= 0 [0]: montonic decrease yields i4-it24 >= 0
		
		3-i1 >= 0 [0]: unchanged
		
		-1+i5 >= 0 [0]: unchanged
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, -1+i4 >= 0 -> i4-it24 >= 0, 3-i1 >= 0 -> 3-i1 >= 0, -1+i5 >= 0 -> -1+i5 >= 0}

	Removed Trivial Updates

	Original rule:
	(-1+it24 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ i4-it24 >= 0) /\ i1'=i1, i3'=i3+3*it24, i4'=i4-it24
	New rule:
	(-1+it24 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ i4-it24 >= 0) /\ i3'=i3+3*it24, i4'=i4-it24
	
	Instantiation

	Original rule:
	(-1+it24 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ i4-it24 >= 0) /\ i3'=i3+3*it24, i4'=i4-it24
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0) /\ i3'=i3+3*i4, i4'=0

Start location: evalcousot9start

Location map:
LoAT_sink -> 0
evalcousot9start -> 1
evalcousot9entryin -> 2
evalcousot9bb3in -> 3
evalcousot9bbin -> 4
evalcousot9returnin -> 5
evalcousot9bb1in -> 6
evalcousot9bb2in -> 7
evalcousot9stop -> 8

Rules:
   2: (-3+i1 == 0 /\ -1+i5 >= 0) /\ i1'=4, i3'=1+i3
  13: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=it2, i5'=i6
  14: (-3+i1 == 0 /\ -i5 >= 0) /\ i1'=8, i3'=2+i3
  15: (-1+i4 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=-1+i4
  16: (-4+i1 == 0 /\ -i4 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6, i5'=-1+i5
  17: (0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0) /\ i3'=i3+3*i4, i4'=0

Dependency graph:
2 -> 15, 2 -> 16
13 -> 2, 13 -> 14, 13 -> 17
15 -> 2, 15 -> 14, 15 -> 17
16 -> 2, 16 -> 14, 16 -> 17
17 -> 2, 17 -> 14

	Trace

	13[(-1+i1 == 0)]
	17[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{14[T]}
	{17[T]}
	
Step with 2

	Trace

	13[(-1+i1 == 0)]
	17[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{14[T]}
	{14[T], 17[T]}
	{}
	
Step with 16

	Trace

	13[(-1+i1 == 0)]
	17[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	16[(-4+i1 == 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{14[T]}
	{14[T], 17[T]}
	{15[T]}
	{}
	
Accelerate and Drop

		Simplified Guard

		Original rule:
		(0 == 0 /\ -3+i1 == 0 /\ -1+i5 >= 0 /\ -i4 >= 0) /\ i1'=3, i3'=3+i3, i4'=i6, i5'=-1+i5
		New rule:
		(-3+i1 == 0 /\ -1+i5 >= 0 /\ -i4 >= 0) /\ i1'=3, i3'=3+i3, i4'=i6, i5'=-1+i5

	Loop Acceleration

	Original rule:
	(-3+i1 == 0 /\ -1+i5 >= 0 /\ -i4 >= 0) /\ i1'=3, i3'=3+i3, i4'=i6, i5'=-1+i5
	New rule:
	(-1+it64 >= 0 /\ -3+i1 >= 0 /\ -i6 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ i5-it64 >= 0 /\ -i4 >= 0) /\ i1'=i1, i3'=i3+3*it64, i4'=i6, i5'=i5-it64

		-3+i1 >= 0 [0]: unchanged
		
		3-i1 >= 0 [0]: unchanged
		
		-1+i5 >= 0 [0]: montonic decrease yields (-1+i5 >= 0 /\ i5-it64 >= 0)
		
		-i4 >= 0 [0]: eventual decrease yields (-i6 >= 0 /\ -i4 >= 0)
		
		-i4 >= 0 [1]: eventual increase yields (i6-i4 <= 0 /\ -i4 >= 0)
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, 3-i1 >= 0 -> 3-i1 >= 0, -1+i5 >= 0 -> (-1+i5 >= 0 /\ i5-it64 >= 0), -i4 >= 0 -> (-i6 >= 0 /\ -i4 >= 0)}

	Removed Trivial Updates

	Original rule:
	(-1+it64 >= 0 /\ -3+i1 >= 0 /\ -i6 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ i5-it64 >= 0 /\ -i4 >= 0) /\ i1'=i1, i3'=i3+3*it64, i4'=i6, i5'=i5-it64
	New rule:
	(-1+it64 >= 0 /\ -3+i1 >= 0 /\ -i6 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ i5-it64 >= 0 /\ -i4 >= 0) /\ i3'=i3+3*it64, i4'=i6, i5'=i5-it64
	
	Instantiation

	Original rule:
	(-1+it64 >= 0 /\ -3+i1 >= 0 /\ -i6 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ i5-it64 >= 0 /\ -i4 >= 0) /\ i3'=i3+3*it64, i4'=i6, i5'=i5-it64
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ -i6 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -i4 >= 0) /\ i3'=i3+3*i5, i4'=i6, i5'=0

Start location: evalcousot9start

Location map:
LoAT_sink -> 0
evalcousot9start -> 1
evalcousot9entryin -> 2
evalcousot9bb3in -> 3
evalcousot9bbin -> 4
evalcousot9returnin -> 5
evalcousot9bb1in -> 6
evalcousot9bb2in -> 7
evalcousot9stop -> 8

Rules:
   2: (-3+i1 == 0 /\ -1+i5 >= 0) /\ i1'=4, i3'=1+i3
  13: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=it2, i5'=i6
  14: (-3+i1 == 0 /\ -i5 >= 0) /\ i1'=8, i3'=2+i3
  15: (-1+i4 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=-1+i4
  16: (-4+i1 == 0 /\ -i4 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6, i5'=-1+i5
  17: (0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0) /\ i3'=i3+3*i4, i4'=0
  18: (0 >= 0 /\ -3+i1 >= 0 /\ -i6 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -i4 >= 0) /\ i3'=i3+3*i5, i4'=i6, i5'=0

Dependency graph:
2 -> 15, 2 -> 16
13 -> 2, 13 -> 14, 13 -> 17, 13 -> 18
15 -> 2, 15 -> 14, 15 -> 17, 15 -> 18
16 -> 2, 16 -> 14, 16 -> 17, 16 -> 18
17 -> 2, 17 -> 14, 17 -> 18
18 -> 2, 18 -> 14, 18 -> 17

	Trace

	13[(-1+i1 == 0)]
	17[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{14[T]}
	{14[T], 17[T]}
	
Step with 2

	Trace

	13[(-1+i1 == 0)]
	17[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{14[T]}
	{14[T], 17[T], 18[T]}
	{}
	
Step with 16

	Trace

	13[(-1+i1 == 0)]
	17[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	16[(-4+i1 == 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{14[T]}
	{14[T], 17[T], 18[T]}
	{}
	{}
	
Accelerate

		Extracted Implied Equalities

		Original rule:
		(0 >= 0 /\ 0 == 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0) /\ i1'=3, i3'=3+i3+3*i4, i4'=i6, i5'=-1+i5
		New rule:
		(0 >= 0 /\ 0 == 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i5 >= 0) /\ i1'=3, i3'=3+i3+3*i4, i4'=i6, i5'=-1+i5
		
		Simplified Guard

		Original rule:
		(0 >= 0 /\ 0 == 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i5 >= 0) /\ i1'=3, i3'=3+i3+3*i4, i4'=i6, i5'=-1+i5
		New rule:
		(-3+i1 >= 0 /\ -3+i1 == 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i5 >= 0) /\ i1'=3, i3'=3+i3+3*i4, i4'=i6, i5'=-1+i5

	Loop Acceleration

	Original rule:
	(-3+i1 >= 0 /\ -3+i1 == 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i5 >= 0) /\ i1'=3, i3'=3+i3+3*i4, i4'=i6, i5'=-1+i5
	New rule:
	(-3+i1 >= 0 /\ -3+i1 == 0 /\ -1+it91 >= 0 /\ -1+i4 >= 0 /\ -1+i5-it91 >= 0 /\ -2+i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i5 >= 0 /\ -1+i6 >= 0) /\ i1'=i1, i3'=3+i3+3*i6*it91+3*i4+3*it91, i4'=i6, i5'=-1+i5-it91

		-3+i1 >= 0 [0]: unchanged
		
		-1+i4 >= 0 [0]: eventual decrease yields (-1+i4 >= 0 /\ -1+i6 >= 0)
		
		-1+i4 >= 0 [1]: eventual increase yields (-i6+i4 <= 0 /\ -1+i4 >= 0)
		
		3-i1 >= 0 [0]: unchanged
		
		-1+i5 >= 0 [0]: montonic decrease yields (i5-it91 >= 0 /\ -1+i5 >= 0)
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, -1+i4 >= 0 -> (-1+i4 >= 0 /\ -1+i6 >= 0), 3-i1 >= 0 -> 3-i1 >= 0, -1+i5 >= 0 -> (i5-it91 >= 0 /\ -1+i5 >= 0)}

	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ -3+i1 == 0 /\ -1+it91 >= 0 /\ -1+i4 >= 0 /\ -1+i5-it91 >= 0 /\ -2+i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i5 >= 0 /\ -1+i6 >= 0) /\ i1'=i1, i3'=3+i3+3*i6*it91+3*i4+3*it91, i4'=i6, i5'=-1+i5-it91
	New rule:
	(-3+i1 >= 0 /\ -3+i1 == 0 /\ -1+it91 >= 0 /\ -1+i4 >= 0 /\ -1+i5-it91 >= 0 /\ -2+i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i5 >= 0 /\ -1+i6 >= 0) /\ i3'=3+i3+3*i6*it91+3*i4+3*it91, i4'=i6, i5'=-1+i5-it91
	
	Instantiation

	Original rule:
	(-3+i1 >= 0 /\ -3+i1 == 0 /\ -1+it91 >= 0 /\ -1+i4 >= 0 /\ -1+i5-it91 >= 0 /\ -2+i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i5 >= 0 /\ -1+i6 >= 0) /\ i3'=3+i3+3*i6*it91+3*i4+3*it91, i4'=i6, i5'=-1+i5-it91
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ -1+i4 >= 0 /\ -2+i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i5 >= 0 /\ -1+i6 >= 0) /\ i3'=i3+3*i4+3*i6*(-1+i5)+3*i5, i4'=i6, i5'=0

Start location: evalcousot9start

Location map:
LoAT_sink -> 0
evalcousot9start -> 1
evalcousot9entryin -> 2
evalcousot9bb3in -> 3
evalcousot9bbin -> 4
evalcousot9returnin -> 5
evalcousot9bb1in -> 6
evalcousot9bb2in -> 7
evalcousot9stop -> 8

Rules:
   2: (-3+i1 == 0 /\ -1+i5 >= 0) /\ i1'=4, i3'=1+i3
  13: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=it2, i5'=i6
  14: (-3+i1 == 0 /\ -i5 >= 0) /\ i1'=8, i3'=2+i3
  15: (-1+i4 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=-1+i4
  16: (-4+i1 == 0 /\ -i4 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6, i5'=-1+i5
  17: (0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0) /\ i3'=i3+3*i4, i4'=0
  18: (0 >= 0 /\ -3+i1 >= 0 /\ -i6 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -i4 >= 0) /\ i3'=i3+3*i5, i4'=i6, i5'=0
  19: (0 >= 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ -1+i4 >= 0 /\ -2+i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i5 >= 0 /\ -1+i6 >= 0) /\ i3'=i3+3*i4+3*i6*(-1+i5)+3*i5, i4'=i6, i5'=0

Dependency graph:
2 -> 15, 2 -> 16
13 -> 2, 13 -> 14, 13 -> 17, 13 -> 18, 13 -> 19
15 -> 2, 15 -> 14, 15 -> 17, 15 -> 18, 15 -> 19
16 -> 2, 16 -> 14, 16 -> 17, 16 -> 18, 16 -> 19
17 -> 2, 17 -> 14, 17 -> 18
18 -> 2, 18 -> 14, 18 -> 17, 18 -> 19
19 -> 2, 19 -> 14, 19 -> 17, 19 -> 18

	Trace

	13[(-1+i1 == 0)]
	19[(0 >= 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ -1+i4 >= 0 /\ -2+i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i5 >= 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{14[T]}
	{19[T]}
	
Step with 14

	Trace

	13[(-1+i1 == 0)]
	19[(0 >= 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ -1+i4 >= 0 /\ -2+i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i5 >= 0 /\ -1+i6 >= 0)]
	14[(-3+i1 == 0 /\ -i5 >= 0)]
	
	Blocked

	{}
	{14[T]}
	{18[T], 19[T]}
	{}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	19[(0 >= 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ -1+i4 >= 0 /\ -2+i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i5 >= 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{14[T]}
	{14[T], 18[T], 19[T]}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	
	Blocked

	{}
	{14[T], 19[T]}
	
Step with 17

	Trace

	13[(-1+i1 == 0)]
	17[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{14[T], 19[T]}
	{17[T]}
	
Step with 2

	Trace

	13[(-1+i1 == 0)]
	17[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{14[T], 19[T]}
	{17[T], 18[T]}
	{}
	
Step with 16

	Trace

	13[(-1+i1 == 0)]
	17[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	16[(-4+i1 == 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{14[T], 19[T]}
	{17[T], 18[T]}
	{}
	{}
	
Covered

	Trace

	13[(-1+i1 == 0)]
	17[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{14[T], 19[T]}
	{17[T], 18[T]}
	{16[T]}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	17[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{14[T], 19[T]}
	{2[T], 17[T], 18[T]}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	
	Blocked

	{}
	{14[T], 17[T], 19[T]}
	
Step with 2

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{14[T], 17[T], 18[T], 19[T]}
	{}
	
Step with 16

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	16[(-4+i1 == 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{14[T], 17[T], 18[T], 19[T]}
	{}
	{}
	
Step with 14

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	16[(-4+i1 == 0 /\ -i4 >= 0)]
	14[(-3+i1 == 0 /\ -i5 >= 0)]
	
	Blocked

	{}
	{14[T], 17[T], 18[T], 19[T]}
	{}
	{}
	{}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	16[(-4+i1 == 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{14[T], 17[T], 18[T], 19[T]}
	{}
	{14[T]}
	
Step with 17

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	16[(-4+i1 == 0 /\ -i4 >= 0)]
	17[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{14[T], 17[T], 18[T], 19[T]}
	{}
	{14[T]}
	{17[T]}
	
Accelerate

		Simplified Guard

		Original rule:
		(0 >= 0 /\ 0 == 0 /\ -3+i1 == 0 /\ -2+i5 >= 0 /\ -1+i5 >= 0 /\ -i4 >= 0 /\ -1+i6 >= 0) /\ i1'=3, i3'=3+3*i6+i3, i4'=0, i5'=-1+i5
		New rule:
		(-3+i1 == 0 /\ -2+i5 >= 0 /\ -1+i5 >= 0 /\ -i4 >= 0 /\ -1+i6 >= 0) /\ i1'=3, i3'=3+3*i6+i3, i4'=0, i5'=-1+i5

	Loop Acceleration

	Original rule:
	(-3+i1 == 0 /\ -2+i5 >= 0 /\ -1+i5 >= 0 /\ -i4 >= 0 /\ -1+i6 >= 0) /\ i1'=3, i3'=3+3*i6+i3, i4'=0, i5'=-1+i5
	New rule:
	(-3+i1 >= 0 /\ -1-it177+i5 >= 0 /\ -2+i5 >= 0 /\ -it177+i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -i4 >= 0 /\ -1+it177 >= 0 /\ -1+i6 >= 0) /\ i1'=i1, i3'=i3+3*it177+3*i6*it177, i4'=0, i5'=-it177+i5

		-3+i1 >= 0 [0]: unchanged
		
		-2+i5 >= 0 [0]: montonic decrease yields (-1-it177+i5 >= 0 /\ -2+i5 >= 0)
		
		3-i1 >= 0 [0]: unchanged
		
		-1+i5 >= 0 [0]: montonic decrease yields (-it177+i5 >= 0 /\ -1+i5 >= 0)
		
		-i4 >= 0 [0]: trivial
		
		-1+i6 >= 0 [0]: unchanged
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, -2+i5 >= 0 -> (-1-it177+i5 >= 0 /\ -2+i5 >= 0), 3-i1 >= 0 -> 3-i1 >= 0, -1+i5 >= 0 -> (-it177+i5 >= 0 /\ -1+i5 >= 0), -i4 >= 0 -> -i4 >= 0, -1+i6 >= 0 -> -1+i6 >= 0}

	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ -1-it177+i5 >= 0 /\ -2+i5 >= 0 /\ -it177+i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -i4 >= 0 /\ -1+it177 >= 0 /\ -1+i6 >= 0) /\ i1'=i1, i3'=i3+3*it177+3*i6*it177, i4'=0, i5'=-it177+i5
	New rule:
	(-3+i1 >= 0 /\ -1-it177+i5 >= 0 /\ -2+i5 >= 0 /\ -it177+i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -i4 >= 0 /\ -1+it177 >= 0 /\ -1+i6 >= 0) /\ i3'=i3+3*it177+3*i6*it177, i4'=0, i5'=-it177+i5
	
	Instantiation

	Original rule:
	(-3+i1 >= 0 /\ -1-it177+i5 >= 0 /\ -2+i5 >= 0 /\ -it177+i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -i4 >= 0 /\ -1+it177 >= 0 /\ -1+i6 >= 0) /\ i3'=i3+3*it177+3*i6*it177, i4'=0, i5'=-it177+i5
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -2+i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -i4 >= 0 /\ -1+i6 >= 0) /\ i3'=-3+i3+3*i6*(-1+i5)+3*i5, i4'=0, i5'=1

Start location: evalcousot9start

Location map:
LoAT_sink -> 0
evalcousot9start -> 1
evalcousot9entryin -> 2
evalcousot9bb3in -> 3
evalcousot9bbin -> 4
evalcousot9returnin -> 5
evalcousot9bb1in -> 6
evalcousot9bb2in -> 7
evalcousot9stop -> 8

Rules:
   2: (-3+i1 == 0 /\ -1+i5 >= 0) /\ i1'=4, i3'=1+i3
  13: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=it2, i5'=i6
  14: (-3+i1 == 0 /\ -i5 >= 0) /\ i1'=8, i3'=2+i3
  15: (-1+i4 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=-1+i4
  16: (-4+i1 == 0 /\ -i4 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6, i5'=-1+i5
  17: (0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0) /\ i3'=i3+3*i4, i4'=0
  18: (0 >= 0 /\ -3+i1 >= 0 /\ -i6 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -i4 >= 0) /\ i3'=i3+3*i5, i4'=i6, i5'=0
  19: (0 >= 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ -1+i4 >= 0 /\ -2+i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i5 >= 0 /\ -1+i6 >= 0) /\ i3'=i3+3*i4+3*i6*(-1+i5)+3*i5, i4'=i6, i5'=0
  20: (0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -2+i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -i4 >= 0 /\ -1+i6 >= 0) /\ i3'=-3+i3+3*i6*(-1+i5)+3*i5, i4'=0, i5'=1

Dependency graph:
2 -> 15, 2 -> 16
13 -> 2, 13 -> 14, 13 -> 17, 13 -> 18, 13 -> 19, 13 -> 20
15 -> 2, 15 -> 14, 15 -> 17, 15 -> 18, 15 -> 19, 15 -> 20
16 -> 2, 16 -> 14, 16 -> 17, 16 -> 18, 16 -> 19, 16 -> 20
17 -> 2, 17 -> 14, 17 -> 18, 17 -> 20
18 -> 2, 18 -> 14, 18 -> 17, 18 -> 19, 18 -> 20
19 -> 2, 19 -> 14, 19 -> 17, 19 -> 18, 19 -> 20
20 -> 2, 20 -> 14, 20 -> 18

	Trace

	13[(-1+i1 == 0)]
	20[(0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -2+i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -i4 >= 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{14[T], 17[T], 18[T], 19[T]}
	{20[T]}
	
Step with 2

	Trace

	13[(-1+i1 == 0)]
	20[(0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -2+i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -i4 >= 0 /\ -1+i6 >= 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{14[T], 17[T], 18[T], 19[T]}
	{20[T]}
	{}
	
Step with 16

	Trace

	13[(-1+i1 == 0)]
	20[(0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -2+i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -i4 >= 0 /\ -1+i6 >= 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	16[(-4+i1 == 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{14[T], 17[T], 18[T], 19[T]}
	{20[T]}
	{15[T]}
	{}
	
Step with 14

	Trace

	13[(-1+i1 == 0)]
	20[(0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -2+i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -i4 >= 0 /\ -1+i6 >= 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	16[(-4+i1 == 0 /\ -i4 >= 0)]
	14[(-3+i1 == 0 /\ -i5 >= 0)]
	
	Blocked

	{}
	{14[T], 17[T], 18[T], 19[T]}
	{20[T]}
	{15[T]}
	{2[T], 17[T], 18[T], 19[T], 20[T]}
	{}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	20[(0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -2+i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -i4 >= 0 /\ -1+i6 >= 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	16[(-4+i1 == 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{14[T], 17[T], 18[T], 19[T]}
	{20[T]}
	{15[T]}
	{2[T], 14[T], 17[T], 18[T], 19[T], 20[T]}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	20[(0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -2+i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -i4 >= 0 /\ -1+i6 >= 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{14[T], 17[T], 18[T], 19[T]}
	{20[T]}
	{15[T], 16[T]}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	20[(0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -2+i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -i4 >= 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{14[T], 17[T], 18[T], 19[T]}
	{2[T], 20[T]}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	
	Blocked

	{}
	{14[T], 17[T], 18[T], 19[T], 20[T]}
	
Step with 2

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{14[T], 17[T], 18[T], 19[T], 20[T]}
	{}
	
Step with 15

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	15[(-1+i4 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{14[T], 17[T], 18[T], 19[T], 20[T]}
	{}
	{}
	
Covered

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{14[T], 17[T], 18[T], 19[T], 20[T]}
	{15[T]}
	
Step with 16

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	16[(-4+i1 == 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{14[T], 17[T], 18[T], 19[T], 20[T]}
	{15[T]}
	{}
	
Step with 17

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	16[(-4+i1 == 0 /\ -i4 >= 0)]
	17[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{14[T], 17[T], 18[T], 19[T], 20[T]}
	{15[T]}
	{}
	{17[T]}
	
Covered

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	16[(-4+i1 == 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{14[T], 17[T], 18[T], 19[T], 20[T]}
	{15[T]}
	{17[T]}
	
Step with 2

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	16[(-4+i1 == 0 /\ -i4 >= 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{14[T], 17[T], 18[T], 19[T], 20[T]}
	{15[T]}
	{17[T]}
	{}
	
Accelerate and Drop

		Simplified Guard

		Original rule:
		(0 == 0 /\ -2+i5 >= 0 /\ -4+i1 == 0 /\ -i4 >= 0) /\ i1'=4, i3'=3+i3, i4'=i6, i5'=-1+i5
		New rule:
		(-2+i5 >= 0 /\ -4+i1 == 0 /\ -i4 >= 0) /\ i1'=4, i3'=3+i3, i4'=i6, i5'=-1+i5

	Loop Acceleration

	Original rule:
	(-2+i5 >= 0 /\ -4+i1 == 0 /\ -i4 >= 0) /\ i1'=4, i3'=3+i3, i4'=i6, i5'=-1+i5
	New rule:
	(-i6 >= 0 /\ -1+i5-it223 >= 0 /\ -1+it223 >= 0 /\ -2+i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -i4 >= 0) /\ i1'=i1, i3'=i3+3*it223, i4'=i6, i5'=i5-it223

		-2+i5 >= 0 [0]: montonic decrease yields (-1+i5-it223 >= 0 /\ -2+i5 >= 0)
		
		-4+i1 >= 0 [0]: unchanged
		
		4-i1 >= 0 [0]: unchanged
		
		-i4 >= 0 [0]: eventual decrease yields (-i6 >= 0 /\ -i4 >= 0)
		
		-i4 >= 0 [1]: eventual increase yields (i6-i4 <= 0 /\ -i4 >= 0)
		
		Replacement map: {-2+i5 >= 0 -> (-1+i5-it223 >= 0 /\ -2+i5 >= 0), -4+i1 >= 0 -> -4+i1 >= 0, 4-i1 >= 0 -> 4-i1 >= 0, -i4 >= 0 -> (-i6 >= 0 /\ -i4 >= 0)}

	Removed Trivial Updates

	Original rule:
	(-i6 >= 0 /\ -1+i5-it223 >= 0 /\ -1+it223 >= 0 /\ -2+i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -i4 >= 0) /\ i1'=i1, i3'=i3+3*it223, i4'=i6, i5'=i5-it223
	New rule:
	(-i6 >= 0 /\ -1+i5-it223 >= 0 /\ -1+it223 >= 0 /\ -2+i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -i4 >= 0) /\ i3'=i3+3*it223, i4'=i6, i5'=i5-it223
	
	Instantiation

	Original rule:
	(-i6 >= 0 /\ -1+i5-it223 >= 0 /\ -1+it223 >= 0 /\ -2+i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -i4 >= 0) /\ i3'=i3+3*it223, i4'=i6, i5'=i5-it223
	New rule:
	(0 >= 0 /\ -i6 >= 0 /\ -2+i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -i4 >= 0) /\ i3'=-3+i3+3*i5, i4'=i6, i5'=1

Start location: evalcousot9start

Location map:
LoAT_sink -> 0
evalcousot9start -> 1
evalcousot9entryin -> 2
evalcousot9bb3in -> 3
evalcousot9bbin -> 4
evalcousot9returnin -> 5
evalcousot9bb1in -> 6
evalcousot9bb2in -> 7
evalcousot9stop -> 8

Rules:
   2: (-3+i1 == 0 /\ -1+i5 >= 0) /\ i1'=4, i3'=1+i3
  13: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=it2, i5'=i6
  14: (-3+i1 == 0 /\ -i5 >= 0) /\ i1'=8, i3'=2+i3
  15: (-1+i4 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=-1+i4
  16: (-4+i1 == 0 /\ -i4 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6, i5'=-1+i5
  17: (0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0) /\ i3'=i3+3*i4, i4'=0
  18: (0 >= 0 /\ -3+i1 >= 0 /\ -i6 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -i4 >= 0) /\ i3'=i3+3*i5, i4'=i6, i5'=0
  19: (0 >= 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ -1+i4 >= 0 /\ -2+i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i5 >= 0 /\ -1+i6 >= 0) /\ i3'=i3+3*i4+3*i6*(-1+i5)+3*i5, i4'=i6, i5'=0
  20: (0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -2+i5 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -i4 >= 0 /\ -1+i6 >= 0) /\ i3'=-3+i3+3*i6*(-1+i5)+3*i5, i4'=0, i5'=1
  21: (0 >= 0 /\ -i6 >= 0 /\ -2+i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -i4 >= 0) /\ i3'=-3+i3+3*i5, i4'=i6, i5'=1

Dependency graph:
2 -> 15, 2 -> 16, 2 -> 21
13 -> 2, 13 -> 14, 13 -> 17, 13 -> 18, 13 -> 19, 13 -> 20
15 -> 2, 15 -> 14, 15 -> 17, 15 -> 18, 15 -> 19, 15 -> 20
16 -> 2, 16 -> 14, 16 -> 17, 16 -> 18, 16 -> 19, 16 -> 20
17 -> 2, 17 -> 14, 17 -> 18, 17 -> 20
18 -> 2, 18 -> 14, 18 -> 17, 18 -> 19, 18 -> 20
19 -> 2, 19 -> 14, 19 -> 17, 19 -> 18, 19 -> 20
20 -> 2, 20 -> 14, 20 -> 18
21 -> 15, 21 -> 16

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{14[T], 17[T], 18[T], 19[T], 20[T]}
	{15[T]}
	
Step with 16

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	16[(-4+i1 == 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{14[T], 17[T], 18[T], 19[T], 20[T]}
	{15[T], 21[T]}
	{}
	
Step with 2

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	16[(-4+i1 == 0 /\ -i4 >= 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{14[T], 17[T], 18[T], 19[T], 20[T]}
	{15[T], 21[T]}
	{}
	{}
	
Step with 15

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	16[(-4+i1 == 0 /\ -i4 >= 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	15[(-1+i4 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{14[T], 17[T], 18[T], 19[T], 20[T]}
	{15[T], 21[T]}
	{}
	{16[T]}
	{}
	
Covered

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	16[(-4+i1 == 0 /\ -i4 >= 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{14[T], 17[T], 18[T], 19[T], 20[T]}
	{15[T], 21[T]}
	{}
	{15[T], 16[T]}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	16[(-4+i1 == 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{14[T], 17[T], 18[T], 19[T], 20[T]}
	{15[T], 21[T]}
	{2[T]}
	
Step with 17

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	16[(-4+i1 == 0 /\ -i4 >= 0)]
	17[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{14[T], 17[T], 18[T], 19[T], 20[T]}
	{15[T], 21[T]}
	{2[T]}
	{17[T]}
	
Covered

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	16[(-4+i1 == 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{14[T], 17[T], 18[T], 19[T], 20[T]}
	{15[T], 21[T]}
	{2[T], 17[T]}
	
Step with 14

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	16[(-4+i1 == 0 /\ -i4 >= 0)]
	14[(-3+i1 == 0 /\ -i5 >= 0)]
	
	Blocked

	{}
	{14[T], 17[T], 18[T], 19[T], 20[T]}
	{15[T], 21[T]}
	{2[T], 17[T], 18[T], 20[T]}
	{}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	16[(-4+i1 == 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{14[T], 17[T], 18[T], 19[T], 20[T]}
	{15[T], 21[T]}
	{2[T], 14[T], 17[T], 18[T], 20[T]}
	
Step with 19

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	16[(-4+i1 == 0 /\ -i4 >= 0)]
	19[(0 >= 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ -1+i4 >= 0 /\ -2+i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i5 >= 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{14[T], 17[T], 18[T], 19[T], 20[T]}
	{15[T], 21[T]}
	{2[T], 14[T], 17[T], 18[T], 20[T]}
	{19[T]}
	
Step with 14

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	16[(-4+i1 == 0 /\ -i4 >= 0)]
	19[(0 >= 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ -1+i4 >= 0 /\ -2+i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i5 >= 0 /\ -1+i6 >= 0)]
	14[(-3+i1 == 0 /\ -i5 >= 0)]
	
	Blocked

	{}
	{14[T], 17[T], 18[T], 19[T], 20[T]}
	{15[T], 21[T]}
	{2[T], 14[T], 17[T], 18[T], 20[T]}
	{19[T], 20[T]}
	{}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	16[(-4+i1 == 0 /\ -i4 >= 0)]
	19[(0 >= 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ -1+i4 >= 0 /\ -2+i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i5 >= 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{14[T], 17[T], 18[T], 19[T], 20[T]}
	{15[T], 21[T]}
	{2[T], 14[T], 17[T], 18[T], 20[T]}
	{14[T], 19[T], 20[T]}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	16[(-4+i1 == 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{14[T], 17[T], 18[T], 19[T], 20[T]}
	{15[T], 21[T]}
	{2[T], 14[T], 17[T], 18[T], 19[T], 20[T]}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{14[T], 17[T], 18[T], 19[T], 20[T]}
	{15[T], 16[T], 21[T]}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	
	Blocked

	{}
	{2[T], 14[T], 17[T], 18[T], 19[T], 20[T]}
	
Backtrack

	Trace

	Blocked

	{13[T]}
	
Accept

Unbounded


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
MAYBE


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  D
  Locations:  l0, l1, l2, l3, l4, l5, l6, l7
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂) → l6(X₀, X₁, X₂)
  t₂: l1(X₀, X₁, X₂) → l2(X₀, X₁, X₂) :|: 1 ≤ X₁
  t₃: l1(X₀, X₁, X₂) → l5(X₀, X₁, X₂) :|: X₁ ≤ 0
  t₄: l2(X₀, X₁, X₂) → l3(X₀, X₁, X₂) :|: 1 ≤ X₀
  t₅: l2(X₀, X₁, X₂) → l4(X₀, X₁, X₂) :|: X₀ ≤ 0
  t₆: l3(X₀, X₁, X₂) → l1(X₀-1, X₁, X₂)
  t₇: l4(X₀, X₁, X₂) → l1(X₂, X₁-1, X₂)
  t₈: l5(X₀, X₁, X₂) → l7(X₀, X₁, X₂)
  t₁: l6(X₀, X₁, X₂) → l1(D, X₂, X₂)


Preprocessing
  Found invariant 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ X₁ ≤ X₂ ∧ 1 ≤ X₁ for location l2


  Found invariant X₁ ≤ X₂ ∧ X₁ ≤ 0 for location l7


  Found invariant X₁ ≤ X₂ ∧ X₁ ≤ 0 for location l5


  Found invariant X₁ ≤ X₂ for location l1


  Found invariant 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ X₁ ≤ X₂ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1+X₀ ≤ X₁ ∧ X₀ ≤ 0 for location l4


  Found invariant 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ X₁ ≤ X₂ ∧ 2 ≤ X₀+X₂ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l3


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  D
  Locations:  l0, l1, l2, l3, l4, l5, l6, l7
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂) → l6(X₀, X₁, X₂)
  t₂: l1(X₀, X₁, X₂) → l2(X₀, X₁, X₂) :|: 1 ≤ X₁ ∧ X₁ ≤ X₂
  t₃: l1(X₀, X₁, X₂) → l5(X₀, X₁, X₂) :|: X₁ ≤ 0 ∧ X₁ ≤ X₂
  t₄: l2(X₀, X₁, X₂) → l3(X₀, X₁, X₂) :|: 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ X₁ ≤ X₂
  t₅: l2(X₀, X₁, X₂) → l4(X₀, X₁, X₂) :|: X₀ ≤ 0 ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ X₁ ≤ X₂
  t₆: l3(X₀, X₁, X₂) → l1(X₀-1, X₁, X₂) :|: 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀+X₁ ∧ 2 ≤ X₀+X₂ ∧ 2 ≤ X₁+X₂ ∧ X₁ ≤ X₂
  t₇: l4(X₀, X₁, X₂) → l1(X₂, X₁-1, X₂) :|: 1+X₀ ≤ X₁ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ X₀ ≤ 0 ∧ X₁ ≤ X₂
  t₈: l5(X₀, X₁, X₂) → l7(X₀, X₁, X₂) :|: X₁ ≤ 0 ∧ X₁ ≤ X₂
  t₁: l6(X₀, X₁, X₂) → l1(D, X₂, X₂)


MPRF for transition t₅: l2(X₀, X₁, X₂) → l4(X₀, X₁, X₂) :|: X₀ ≤ 0 ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ X₁ ≤ X₂ of depth 1:
  new bound:
    X₂ {O(n)}

  MPRF:
    • l1: [X₁]
    • l2: [X₁]
    • l3: [X₁]
    • l4: [X₁-1]




MPRF for transition t₇: l4(X₀, X₁, X₂) → l1(X₂, X₁-1, X₂) :|: 1+X₀ ≤ X₁ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ X₀ ≤ 0 ∧ X₁ ≤ X₂ of depth 1:
  new bound:
    2⋅X₂ {O(n)}

  MPRF:
    • l1: [X₁+X₂]
    • l2: [X₁+X₂]
    • l3: [X₁+X₂]
    • l4: [X₁+X₂]




  Found invariant X₂ ≤ X₀ ∧ 2 ≤ X₂ ∧ 3 ≤ X₁+X₂ ∧ 1+X₁ ≤ X₂ ∧ 4 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 1+X₁ ≤ X₀ ∧ 1 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 2 ≤ X₀ for location l2_v3


  Found invariant X₂ ≤ 1+X₀ ∧ 2 ≤ X₂ ∧ 3 ≤ X₁+X₂ ∧ 1+X₁ ≤ X₂ ∧ 3 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ X₁ ≤ X₀ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l1_v3


  Found invariant X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ X₁ ≤ X₂ ∧ 1 ≤ X₀+X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 0 ≤ X₀ for location l1_v1


  Found invariant 2 ≤ X₂ ∧ 3 ≤ X₁+X₂ ∧ 1+X₁ ≤ X₂ ∧ 2 ≤ X₀+X₂ ∧ 2+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ X₀ ≤ 0 ∧ 0 ≤ X₀ for location l4_v3


  Found invariant 2 ≤ X₂ ∧ 3 ≤ X₁+X₂ ∧ 1+X₁ ≤ X₂ ∧ 3 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l3_v3


  Found invariant X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ X₁ ≤ X₂ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1+X₀ ≤ X₁ ∧ X₀ ≤ 0 for location l4_v1


  Found invariant X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ X₁ ≤ X₂ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ X₀ ≤ 0 ∧ 0 ≤ X₀ for location l4_v2


  Found invariant 2 ≤ X₂ ∧ 3 ≤ X₁+X₂ ∧ 1+X₁ ≤ X₂ ∧ 2 ≤ X₀+X₂ ∧ 2+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 0 ≤ X₀ for location l2_v5


  Found invariant X₂ ≤ X₁ ∧ X₁ ≤ X₂ for location l1


  Found invariant 2 ≤ X₂ ∧ 3 ≤ X₁+X₂ ∧ 1+X₁ ≤ X₂ ∧ 2 ≤ X₀+X₂ ∧ 2+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 0 ≤ X₀ for location l1_v4


  Found invariant X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ X₁ ≤ X₂ ∧ 2 ≤ X₀+X₂ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l3_v1


  Found invariant X₂ ≤ X₀ ∧ 1 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 1+X₁ ≤ X₂ ∧ 2 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 1+X₁ ≤ X₀ ∧ 0 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l1_v2


  Found invariant X₂ ≤ X₀ ∧ 2 ≤ X₂ ∧ 3 ≤ X₁+X₂ ∧ 1+X₁ ≤ X₂ ∧ 4 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 1+X₁ ≤ X₀ ∧ 1 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 2 ≤ X₀ for location l3_v2


  Found invariant X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ X₁ ≤ X₂ ∧ 1 ≤ X₁ for location l2_v1


  Found invariant X₂ ≤ 1+X₀ ∧ 2 ≤ X₂ ∧ 3 ≤ X₁+X₂ ∧ 1+X₁ ≤ X₂ ∧ 3 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ X₁ ≤ X₀ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l2_v4


  Found invariant X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ X₁ ≤ X₂ ∧ 1 ≤ X₀+X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 0 ≤ X₀ for location l2_v2


  Found invariant X₁ ≤ X₂ ∧ X₁ ≤ 0 for location l7


  Found invariant X₁ ≤ X₂ ∧ X₁ ≤ 0 for location l5


All Bounds
Timebounds
  Overall timebound:inf {Infinity}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: inf {Infinity}
    t₃: 1 {O(1)}
    t₄: inf {Infinity}
    t₅: X₂ {O(n)}
    t₆: inf {Infinity}
    t₇: 2⋅X₂ {O(n)}
    t₈: 1 {O(1)}


Costbounds
  Overall costbound: inf {Infinity}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: inf {Infinity}
    t₃: 1 {O(1)}
    t₄: inf {Infinity}
    t₅: X₂ {O(n)}
    t₆: inf {Infinity}
    t₇: 2⋅X₂ {O(n)}
    t₈: 1 {O(1)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₀, X₂: X₂ {O(n)}
    t₁, X₁: X₂ {O(n)}
    t₁, X₂: X₂ {O(n)}
    t₂, X₁: X₂ {O(n)}
    t₂, X₂: X₂ {O(n)}
    t₃, X₁: 2⋅X₂ {O(n)}
    t₃, X₂: 2⋅X₂ {O(n)}
    t₄, X₁: X₂ {O(n)}
    t₄, X₂: X₂ {O(n)}
    t₅, X₁: X₂ {O(n)}
    t₅, X₂: X₂ {O(n)}
    t₆, X₁: X₂ {O(n)}
    t₆, X₂: X₂ {O(n)}
    t₇, X₀: X₂ {O(n)}
    t₇, X₁: X₂ {O(n)}
    t₇, X₂: X₂ {O(n)}
    t₈, X₁: 2⋅X₂ {O(n)}
    t₈, X₂: 2⋅X₂ {O(n)}

