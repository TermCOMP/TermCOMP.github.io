WORST_CASE(Omega(n^1),O(n^1))

# LoAT Proof:
WORST_CASE(Omega(n^1),?)

WORST_CASE(Omega(n^1),?)
Initial ITS

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_4 -> 7
eval_start_bb1_in -> 8
eval_start_bb2_in -> 9
eval_start_bb3_in -> 10
eval_start_5 -> 11
eval_start_6 -> 12
eval_start_stop -> 13

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: -2+i1 == 0 /\ i1'=3, i3'=1+i3
   2: -3+i1 == 0 /\ i1'=4, i3'=1+i3
   3: -4+i1 == 0 /\ i1'=5, i3'=1+i3
   4: -5+i1 == 0 /\ i1'=6, i3'=1+i3
   5: -6+i1 == 0 /\ i1'=7, i3'=1+i3
   6: -7+i1 == 0 /\ i1'=8, i3'=1+i3, i4'=i7, i5'=i8
   7: (i4-i5 > 0 /\ -8+i1 == 0) /\ i1'=9, i3'=1+i3
   8: (i4-i5 <= 0 /\ -8+i1 == 0) /\ i1'=10, i3'=1+i3
   9: -9+i1 == 0 /\ i1'=11, i3'=1+i3
  10: -11+i1 == 0 /\ i1'=12, i3'=1+i3, i6'=it2
  11: (i6 > 0 /\ -12+i1 == 0) /\ i1'=8, i3'=1+i3, i5'=1+i5
  12: (i6 <= 0 /\ i6 > 0 /\ -12+i1 == 0) /\ i1'=8, i3'=1+i3, i4'=-1+i4, i5'=1+i5
  13: (i6 <= 0 /\ i6 > 0 /\ -12+i1 == 0) /\ i1'=8, i3'=1+i3
  14: (i6 <= 0 /\ -12+i1 == 0) /\ i1'=8, i3'=1+i3, i4'=-1+i4
  15: -10+i1 == 0 /\ i1'=13, i3'=1+i3

Dependency graph:
0 -> 1
1 -> 2
2 -> 3
3 -> 4
4 -> 5
5 -> 6
6 -> 7, 6 -> 8
7 -> 9
8 -> 15
9 -> 10
10 -> 11, 10 -> 12, 10 -> 13, 10 -> 14
11 -> 7, 11 -> 8
12 -> 7, 12 -> 8
13 -> 7, 13 -> 8
14 -> 7, 14 -> 8

Chained Linear Paths

	Applied Chaining

	First rule:
	-1+i1 == 0 /\ i1'=2, i3'=1+i3
	Second rule:
	-2+i1 == 0 /\ i1'=3, i3'=1+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 0, 1
	
	Applied Chaining

	First rule:
	-3+i1 == 0 /\ i1'=4, i3'=1+i3
	Second rule:
	-4+i1 == 0 /\ i1'=5, i3'=1+i3
	New rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 2, 3
	
	Applied Chaining

	First rule:
	-5+i1 == 0 /\ i1'=6, i3'=1+i3
	Second rule:
	-6+i1 == 0 /\ i1'=7, i3'=1+i3
	New rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=7, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 4, 5
	
	Applied Chaining

	First rule:
	(i4-i5 > 0 /\ -8+i1 == 0) /\ i1'=9, i3'=1+i3
	Second rule:
	-9+i1 == 0 /\ i1'=11, i3'=1+i3
	New rule:
	(0 == 0 /\ i4-i5 > 0 /\ -8+i1 == 0) /\ i1'=11, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 7, 9
	
	Applied Chaining

	First rule:
	(i4-i5 <= 0 /\ -8+i1 == 0) /\ i1'=10, i3'=1+i3
	Second rule:
	-10+i1 == 0 /\ i1'=13, i3'=1+i3
	New rule:
	(0 == 0 /\ i4-i5 <= 0 /\ -8+i1 == 0) /\ i1'=13, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 8, 15
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	Second rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	
	Applied Deletion

	Removed the following rules: 16, 17
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=7, i3'=2+i3
	Second rule:
	-7+i1 == 0 /\ i1'=8, i3'=1+i3, i4'=i7, i5'=i8
	New rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=8, i3'=3+i3, i4'=i7, i5'=i8
	
	Applied Deletion

	Removed the following rules: 6, 18
	
	Applied Chaining

	First rule:
	(0 == 0 /\ i4-i5 > 0 /\ -8+i1 == 0) /\ i1'=11, i3'=2+i3
	Second rule:
	-11+i1 == 0 /\ i1'=12, i3'=1+i3, i6'=it2
	New rule:
	(0 == 0 /\ i4-i5 > 0 /\ -8+i1 == 0) /\ i1'=12, i3'=3+i3, i6'=it2
	
	Applied Deletion

	Removed the following rules: 10, 19
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	Second rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=8, i3'=3+i3, i4'=i7, i5'=i8
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=8, i3'=7+i3, i4'=i7, i5'=i8
	
	Applied Deletion

	Removed the following rules: 21, 22

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_4 -> 7
eval_start_bb1_in -> 8
eval_start_bb2_in -> 9
eval_start_bb3_in -> 10
eval_start_5 -> 11
eval_start_6 -> 12
eval_start_stop -> 13

Rules:
  11: (i6 > 0 /\ -12+i1 == 0) /\ i1'=8, i3'=1+i3, i5'=1+i5
  12: (i6 <= 0 /\ i6 > 0 /\ -12+i1 == 0) /\ i1'=8, i3'=1+i3, i4'=-1+i4, i5'=1+i5
  13: (i6 <= 0 /\ i6 > 0 /\ -12+i1 == 0) /\ i1'=8, i3'=1+i3
  14: (i6 <= 0 /\ -12+i1 == 0) /\ i1'=8, i3'=1+i3, i4'=-1+i4
  20: (0 == 0 /\ i4-i5 <= 0 /\ -8+i1 == 0) /\ i1'=13, i3'=2+i3
  23: (0 == 0 /\ i4-i5 > 0 /\ -8+i1 == 0) /\ i1'=12, i3'=3+i3, i6'=it2
  24: (0 == 0 /\ -1+i1 == 0) /\ i1'=8, i3'=7+i3, i4'=i7, i5'=i8

Dependency graph:
11 -> 20, 11 -> 23
12 -> 20, 12 -> 23
13 -> 20, 13 -> 23
14 -> 20, 14 -> 23
23 -> 11, 23 -> 12, 23 -> 13, 23 -> 14
24 -> 20, 24 -> 23

Preprocessed Transitions

	Simplified Guard

	Original rule:
	(0 == 0 /\ i4-i5 <= 0 /\ -8+i1 == 0) /\ i1'=13, i3'=2+i3
	New rule:
	(i4-i5 <= 0 /\ -8+i1 == 0) /\ i1'=13, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ i4-i5 > 0 /\ -8+i1 == 0) /\ i1'=12, i3'=3+i3, i6'=it2
	New rule:
	(i4-i5 > 0 /\ -8+i1 == 0) /\ i1'=12, i3'=3+i3, i6'=it2
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=8, i3'=7+i3, i4'=i7, i5'=i8
	New rule:
	-1+i1 == 0 /\ i1'=8, i3'=7+i3, i4'=i7, i5'=i8

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_4 -> 7
eval_start_bb1_in -> 8
eval_start_bb2_in -> 9
eval_start_bb3_in -> 10
eval_start_5 -> 11
eval_start_6 -> 12
eval_start_stop -> 13

Rules:
  11: (i6 > 0 /\ -12+i1 == 0) /\ i1'=8, i3'=1+i3, i5'=1+i5
  12: (i6 <= 0 /\ i6 > 0 /\ -12+i1 == 0) /\ i1'=8, i3'=1+i3, i4'=-1+i4, i5'=1+i5
  13: (i6 <= 0 /\ i6 > 0 /\ -12+i1 == 0) /\ i1'=8, i3'=1+i3
  14: (i6 <= 0 /\ -12+i1 == 0) /\ i1'=8, i3'=1+i3, i4'=-1+i4
  25: (i4-i5 <= 0 /\ -8+i1 == 0) /\ i1'=13, i3'=2+i3
  26: (i4-i5 > 0 /\ -8+i1 == 0) /\ i1'=12, i3'=3+i3, i6'=it2
  27: -1+i1 == 0 /\ i1'=8, i3'=7+i3, i4'=i7, i5'=i8

Dependency graph:
11 -> 25, 11 -> 26
12 -> 25, 12 -> 26
13 -> 25, 13 -> 26
14 -> 25, 14 -> 26
26 -> 11, 26 -> 12, 26 -> 13, 26 -> 14
27 -> 25, 27 -> 26

Refined Dependency Graph

	Removed the following edges: 12 -> 25, 12 -> 26, 13 -> 25, 13 -> 26, 26 -> 12, 26 -> 13

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_4 -> 7
eval_start_bb1_in -> 8
eval_start_bb2_in -> 9
eval_start_bb3_in -> 10
eval_start_5 -> 11
eval_start_6 -> 12
eval_start_stop -> 13

Rules:
  11: (i6 > 0 /\ -12+i1 == 0) /\ i1'=8, i3'=1+i3, i5'=1+i5
  12: (i6 <= 0 /\ i6 > 0 /\ -12+i1 == 0) /\ i1'=8, i3'=1+i3, i4'=-1+i4, i5'=1+i5
  13: (i6 <= 0 /\ i6 > 0 /\ -12+i1 == 0) /\ i1'=8, i3'=1+i3
  14: (i6 <= 0 /\ -12+i1 == 0) /\ i1'=8, i3'=1+i3, i4'=-1+i4
  25: (i4-i5 <= 0 /\ -8+i1 == 0) /\ i1'=13, i3'=2+i3
  26: (i4-i5 > 0 /\ -8+i1 == 0) /\ i1'=12, i3'=3+i3, i6'=it2
  27: -1+i1 == 0 /\ i1'=8, i3'=7+i3, i4'=i7, i5'=i8

Dependency graph:
11 -> 25, 11 -> 26
14 -> 25, 14 -> 26
26 -> 11, 26 -> 14
27 -> 25, 27 -> 26

Step with 27

	Trace

	27[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 26

	Trace

	27[(-1+i1 == 0)]
	26[(i4-i5 > 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{}
	{}
	
Step with 14

	Trace

	27[(-1+i1 == 0)]
	26[(i4-i5 > 0 /\ -8+i1 == 0)]
	14[(i6 <= 0 /\ -12+i1 == 0)]
	
	Blocked

	{}
	{}
	{}
	{}
	
Poly(n^1)

Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ it2 <= 0 /\ i4-i5 > 0 /\ -8+i1 == 0) /\ i1'=8, i3'=4+i3, i4'=-1+i4, i6'=it2
		New rule:
		(it2 <= 0 /\ i4-i5 > 0 /\ -8+i1 == 0) /\ i1'=8, i3'=4+i3, i4'=-1+i4, i6'=it2

	Loop Acceleration

	Original rule:
	(it2 <= 0 /\ i4-i5 > 0 /\ -8+i1 == 0) /\ i1'=8, i3'=4+i3, i4'=-1+i4, i6'=it2
	New rule:
	(-1+it25 >= 0 /\ i4-i5 > 0 /\ -it2 >= 0 /\ 1-it25+i4-i5 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0) /\ i1'=i1, i3'=i3+4*it25, i4'=-it25+i4, i6'=it2

		i4-i5 > 0 [0]: montonic decrease yields (i4-i5 > 0 /\ 1-it25+i4-i5 > 0)
		
		-it2 >= 0 [0]: unchanged
		
		8-i1 >= 0 [0]: unchanged
		
		-8+i1 >= 0 [0]: unchanged
		
		Replacement map: {i4-i5 > 0 -> (i4-i5 > 0 /\ 1-it25+i4-i5 > 0), -it2 >= 0 -> -it2 >= 0, 8-i1 >= 0 -> 8-i1 >= 0, -8+i1 >= 0 -> -8+i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-1+it25 >= 0 /\ i4-i5 > 0 /\ -it2 >= 0 /\ 1-it25+i4-i5 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0) /\ i1'=i1, i3'=i3+4*it25, i4'=-it25+i4, i6'=it2
	New rule:
	(-1+it25 >= 0 /\ i4-i5 > 0 /\ -it2 >= 0 /\ 1-it25+i4-i5 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0) /\ i3'=i3+4*it25, i4'=-it25+i4, i6'=it2
	
	Instantiation

	Original rule:
	(-1+it25 >= 0 /\ i4-i5 > 0 /\ -it2 >= 0 /\ 1-it25+i4-i5 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0) /\ i3'=i3+4*it25, i4'=-it25+i4, i6'=it2
	New rule:
	(1 > 0 /\ i4-i5 > 0 /\ -it2 >= 0 /\ -1+i4-i5 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0) /\ i3'=i3+4*i4-4*i5, i4'=i5, i6'=it2

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_4 -> 7
eval_start_bb1_in -> 8
eval_start_bb2_in -> 9
eval_start_bb3_in -> 10
eval_start_5 -> 11
eval_start_6 -> 12
eval_start_stop -> 13

Rules:
  11: (i6 > 0 /\ -12+i1 == 0) /\ i1'=8, i3'=1+i3, i5'=1+i5
  12: (i6 <= 0 /\ i6 > 0 /\ -12+i1 == 0) /\ i1'=8, i3'=1+i3, i4'=-1+i4, i5'=1+i5
  13: (i6 <= 0 /\ i6 > 0 /\ -12+i1 == 0) /\ i1'=8, i3'=1+i3
  14: (i6 <= 0 /\ -12+i1 == 0) /\ i1'=8, i3'=1+i3, i4'=-1+i4
  25: (i4-i5 <= 0 /\ -8+i1 == 0) /\ i1'=13, i3'=2+i3
  26: (i4-i5 > 0 /\ -8+i1 == 0) /\ i1'=12, i3'=3+i3, i6'=it2
  27: -1+i1 == 0 /\ i1'=8, i3'=7+i3, i4'=i7, i5'=i8
  28: (1 > 0 /\ i4-i5 > 0 /\ -it2 >= 0 /\ -1+i4-i5 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0) /\ i3'=i3+4*i4-4*i5, i4'=i5, i6'=it2

Dependency graph:
11 -> 25, 11 -> 26, 11 -> 28
14 -> 25, 14 -> 26, 14 -> 28
26 -> 11, 26 -> 14
27 -> 25, 27 -> 26, 27 -> 28
28 -> 25, 28 -> 26

	Trace

	27[(-1+i1 == 0)]
	28[(1 > 0 /\ i4-i5 > 0 /\ -it2 >= 0 /\ -1+i4-i5 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0)]
	
	Blocked

	{}
	{}
	{28[T]}
	
Step with 25

	Trace

	27[(-1+i1 == 0)]
	28[(1 > 0 /\ i4-i5 > 0 /\ -it2 >= 0 /\ -1+i4-i5 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0)]
	25[(i4-i5 <= 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{}
	{28[T]}
	{}
	
Backtrack

	Trace

	27[(-1+i1 == 0)]
	28[(1 > 0 /\ i4-i5 > 0 /\ -it2 >= 0 /\ -1+i4-i5 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0)]
	
	Blocked

	{}
	{}
	{25[T], 28[T]}
	
Backtrack

	Trace

	27[(-1+i1 == 0)]
	
	Blocked

	{}
	{28[T]}
	
Step with 26

	Trace

	27[(-1+i1 == 0)]
	26[(i4-i5 > 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{28[T]}
	{}
	
Step with 14

	Trace

	27[(-1+i1 == 0)]
	26[(i4-i5 > 0 /\ -8+i1 == 0)]
	14[(i6 <= 0 /\ -12+i1 == 0)]
	
	Blocked

	{}
	{28[T]}
	{}
	{}
	
Covered

	Trace

	27[(-1+i1 == 0)]
	26[(i4-i5 > 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{28[T]}
	{14[T]}
	
Step with 11

	Trace

	27[(-1+i1 == 0)]
	26[(i4-i5 > 0 /\ -8+i1 == 0)]
	11[(i6 > 0 /\ -12+i1 == 0)]
	
	Blocked

	{}
	{28[T]}
	{14[T]}
	{}
	
Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ it2 > 0 /\ i4-i5 > 0 /\ -8+i1 == 0) /\ i1'=8, i3'=4+i3, i5'=1+i5, i6'=it2
		New rule:
		(it2 > 0 /\ i4-i5 > 0 /\ -8+i1 == 0) /\ i1'=8, i3'=4+i3, i5'=1+i5, i6'=it2

	Loop Acceleration

	Original rule:
	(it2 > 0 /\ i4-i5 > 0 /\ -8+i1 == 0) /\ i1'=8, i3'=4+i3, i5'=1+i5, i6'=it2
	New rule:
	(1-it73+i4-i5 > 0 /\ it2 > 0 /\ i4-i5 > 0 /\ -1+it73 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0) /\ i1'=i1, i3'=i3+4*it73, i5'=it73+i5, i6'=it2

		it2 > 0 [0]: unchanged
		
		i4-i5 > 0 [0]: montonic decrease yields (1-it73+i4-i5 > 0 /\ i4-i5 > 0)
		
		8-i1 >= 0 [0]: unchanged
		
		-8+i1 >= 0 [0]: unchanged
		
		Replacement map: {it2 > 0 -> it2 > 0, i4-i5 > 0 -> (1-it73+i4-i5 > 0 /\ i4-i5 > 0), 8-i1 >= 0 -> 8-i1 >= 0, -8+i1 >= 0 -> -8+i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(1-it73+i4-i5 > 0 /\ it2 > 0 /\ i4-i5 > 0 /\ -1+it73 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0) /\ i1'=i1, i3'=i3+4*it73, i5'=it73+i5, i6'=it2
	New rule:
	(1-it73+i4-i5 > 0 /\ it2 > 0 /\ i4-i5 > 0 /\ -1+it73 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0) /\ i3'=i3+4*it73, i5'=it73+i5, i6'=it2
	
	Instantiation

	Original rule:
	(1-it73+i4-i5 > 0 /\ it2 > 0 /\ i4-i5 > 0 /\ -1+it73 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0) /\ i3'=i3+4*it73, i5'=it73+i5, i6'=it2
	New rule:
	(1 > 0 /\ it2 > 0 /\ i4-i5 > 0 /\ -1+i4-i5 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0) /\ i3'=i3+4*i4-4*i5, i5'=i4, i6'=it2

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_4 -> 7
eval_start_bb1_in -> 8
eval_start_bb2_in -> 9
eval_start_bb3_in -> 10
eval_start_5 -> 11
eval_start_6 -> 12
eval_start_stop -> 13

Rules:
  11: (i6 > 0 /\ -12+i1 == 0) /\ i1'=8, i3'=1+i3, i5'=1+i5
  12: (i6 <= 0 /\ i6 > 0 /\ -12+i1 == 0) /\ i1'=8, i3'=1+i3, i4'=-1+i4, i5'=1+i5
  13: (i6 <= 0 /\ i6 > 0 /\ -12+i1 == 0) /\ i1'=8, i3'=1+i3
  14: (i6 <= 0 /\ -12+i1 == 0) /\ i1'=8, i3'=1+i3, i4'=-1+i4
  25: (i4-i5 <= 0 /\ -8+i1 == 0) /\ i1'=13, i3'=2+i3
  26: (i4-i5 > 0 /\ -8+i1 == 0) /\ i1'=12, i3'=3+i3, i6'=it2
  27: -1+i1 == 0 /\ i1'=8, i3'=7+i3, i4'=i7, i5'=i8
  28: (1 > 0 /\ i4-i5 > 0 /\ -it2 >= 0 /\ -1+i4-i5 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0) /\ i3'=i3+4*i4-4*i5, i4'=i5, i6'=it2
  29: (1 > 0 /\ it2 > 0 /\ i4-i5 > 0 /\ -1+i4-i5 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0) /\ i3'=i3+4*i4-4*i5, i5'=i4, i6'=it2

Dependency graph:
11 -> 25, 11 -> 26, 11 -> 28, 11 -> 29
14 -> 25, 14 -> 26, 14 -> 28, 14 -> 29
26 -> 11, 26 -> 14
27 -> 25, 27 -> 26, 27 -> 28, 27 -> 29
28 -> 25, 28 -> 26, 28 -> 29
29 -> 25, 29 -> 26, 29 -> 28

	Trace

	27[(-1+i1 == 0)]
	29[(1 > 0 /\ it2 > 0 /\ i4-i5 > 0 /\ -1+i4-i5 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0)]
	
	Blocked

	{}
	{28[T]}
	{29[T]}
	
Step with 25

	Trace

	27[(-1+i1 == 0)]
	29[(1 > 0 /\ it2 > 0 /\ i4-i5 > 0 /\ -1+i4-i5 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0)]
	25[(i4-i5 <= 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{28[T]}
	{29[T]}
	{}
	
Backtrack

	Trace

	27[(-1+i1 == 0)]
	29[(1 > 0 /\ it2 > 0 /\ i4-i5 > 0 /\ -1+i4-i5 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0)]
	
	Blocked

	{}
	{28[T]}
	{25[T], 29[T]}
	
Backtrack

	Trace

	27[(-1+i1 == 0)]
	
	Blocked

	{}
	{28[T], 29[T]}
	
Step with 26

	Trace

	27[(-1+i1 == 0)]
	26[(i4-i5 > 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{28[T], 29[T]}
	{}
	
Step with 11

	Trace

	27[(-1+i1 == 0)]
	26[(i4-i5 > 0 /\ -8+i1 == 0)]
	11[(i6 > 0 /\ -12+i1 == 0)]
	
	Blocked

	{}
	{28[T], 29[T]}
	{}
	{}
	
Covered

	Trace

	27[(-1+i1 == 0)]
	26[(i4-i5 > 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{28[T], 29[T]}
	{11[T]}
	
Step with 14

	Trace

	27[(-1+i1 == 0)]
	26[(i4-i5 > 0 /\ -8+i1 == 0)]
	14[(i6 <= 0 /\ -12+i1 == 0)]
	
	Blocked

	{}
	{28[T], 29[T]}
	{11[T]}
	{}
	
Covered

	Trace

	27[(-1+i1 == 0)]
	26[(i4-i5 > 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{28[T], 29[T]}
	{11[T], 14[T]}
	
Backtrack

	Trace

	27[(-1+i1 == 0)]
	
	Blocked

	{}
	{26[T], 28[T], 29[T]}
	
Step with 25

	Trace

	27[(-1+i1 == 0)]
	25[(i4-i5 <= 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{26[T], 28[T], 29[T]}
	{}
	
Backtrack

	Trace

	27[(-1+i1 == 0)]
	
	Blocked

	{}
	{25[T], 26[T], 28[T], 29[T]}
	
Backtrack

	Trace

	Blocked

	{27[T]}
	
Accept

Poly(n^1)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄
  Temp_Vars:  nondef_0
  Locations:  l0, l1, l10, l11, l12, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃, X₄) → l2(X₀, X₁, X₂, X₃, X₄)
  t₃: l1(X₀, X₁, X₂, X₃, X₄) → l4(X₀, X₁, X₂, X₃, X₄)
  t₁₀: l10(X₀, X₁, X₂, X₃, X₄) → l8(X₀, X₁, nondef_0, X₃, X₄)
  t₁₅: l11(X₀, X₁, X₂, X₃, X₄) → l12(X₀, X₁, X₂, X₃, X₄)
  t₁: l2(X₀, X₁, X₂, X₃, X₄) → l3(X₀, X₁, X₂, X₃, X₄)
  t₂: l3(X₀, X₁, X₂, X₃, X₄) → l1(X₀, X₁, X₂, X₃, X₄)
  t₄: l4(X₀, X₁, X₂, X₃, X₄) → l5(X₀, X₁, X₂, X₃, X₄)
  t₅: l5(X₀, X₁, X₂, X₃, X₄) → l6(X₀, X₁, X₂, X₃, X₄)
  t₆: l6(X₀, X₁, X₂, X₃, X₄) → l7(X₃, X₄, X₂, X₃, X₄)
  t₈: l7(X₀, X₁, X₂, X₃, X₄) → l11(X₀, X₁, X₂, X₃, X₄) :|: X₀ ≤ X₁
  t₇: l7(X₀, X₁, X₂, X₃, X₄) → l9(X₀, X₁, X₂, X₃, X₄) :|: 1+X₁ ≤ X₀
  t₁₁: l8(X₀, X₁, X₂, X₃, X₄) → l7(X₀, 1+X₁, X₂, X₃, X₄) :|: 1 ≤ X₂
  t₁₂: l8(X₀, X₁, X₂, X₃, X₄) → l7(X₀-1, 1+X₁, X₂, X₃, X₄) :|: 1 ≤ X₂ ∧ X₂ ≤ 0
  t₁₃: l8(X₀, X₁, X₂, X₃, X₄) → l7(X₀, X₁, X₂, X₃, X₄) :|: 1 ≤ X₂ ∧ X₂ ≤ 0
  t₁₄: l8(X₀, X₁, X₂, X₃, X₄) → l7(X₀-1, X₁, X₂, X₃, X₄) :|: X₂ ≤ 0
  t₉: l9(X₀, X₁, X₂, X₃, X₄) → l10(X₀, X₁, X₂, X₃, X₄)


Preprocessing
  Cut unsatisfiable transition [t₁₂: l8→l7; t₁₃: l8→l7]


  Found invariant X₄ ≤ X₁ ∧ X₀ ≤ X₃ ∧ X₀ ≤ X₁ for location l11


  Found invariant X₄ ≤ X₁ ∧ X₀ ≤ X₃ ∧ X₀ ≤ X₁ for location l12


  Found invariant X₄ ≤ X₁ ∧ X₀ ≤ X₃ for location l7


  Found invariant 1+X₄ ≤ X₃ ∧ X₄ ≤ X₁ ∧ 1+X₄ ≤ X₀ ∧ 1+X₁ ≤ X₃ ∧ X₀ ≤ X₃ ∧ 1+X₁ ≤ X₀ for location l8


  Found invariant 1+X₄ ≤ X₃ ∧ X₄ ≤ X₁ ∧ 1+X₄ ≤ X₀ ∧ 1+X₁ ≤ X₃ ∧ X₀ ≤ X₃ ∧ 1+X₁ ≤ X₀ for location l10


  Found invariant 1+X₄ ≤ X₃ ∧ X₄ ≤ X₁ ∧ 1+X₄ ≤ X₀ ∧ 1+X₁ ≤ X₃ ∧ X₀ ≤ X₃ ∧ 1+X₁ ≤ X₀ for location l9


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄
  Temp_Vars:  nondef_0
  Locations:  l0, l1, l10, l11, l12, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃, X₄) → l2(X₀, X₁, X₂, X₃, X₄)
  t₃: l1(X₀, X₁, X₂, X₃, X₄) → l4(X₀, X₁, X₂, X₃, X₄)
  t₁₀: l10(X₀, X₁, X₂, X₃, X₄) → l8(X₀, X₁, nondef_0, X₃, X₄) :|: 1+X₁ ≤ X₀ ∧ 1+X₄ ≤ X₀ ∧ 1+X₁ ≤ X₃ ∧ 1+X₄ ≤ X₃ ∧ X₀ ≤ X₃ ∧ X₄ ≤ X₁
  t₁₅: l11(X₀, X₁, X₂, X₃, X₄) → l12(X₀, X₁, X₂, X₃, X₄) :|: X₀ ≤ X₁ ∧ X₀ ≤ X₃ ∧ X₄ ≤ X₁
  t₁: l2(X₀, X₁, X₂, X₃, X₄) → l3(X₀, X₁, X₂, X₃, X₄)
  t₂: l3(X₀, X₁, X₂, X₃, X₄) → l1(X₀, X₁, X₂, X₃, X₄)
  t₄: l4(X₀, X₁, X₂, X₃, X₄) → l5(X₀, X₁, X₂, X₃, X₄)
  t₅: l5(X₀, X₁, X₂, X₃, X₄) → l6(X₀, X₁, X₂, X₃, X₄)
  t₆: l6(X₀, X₁, X₂, X₃, X₄) → l7(X₃, X₄, X₂, X₃, X₄)
  t₈: l7(X₀, X₁, X₂, X₃, X₄) → l11(X₀, X₁, X₂, X₃, X₄) :|: X₀ ≤ X₁ ∧ X₀ ≤ X₃ ∧ X₄ ≤ X₁
  t₇: l7(X₀, X₁, X₂, X₃, X₄) → l9(X₀, X₁, X₂, X₃, X₄) :|: 1+X₁ ≤ X₀ ∧ X₀ ≤ X₃ ∧ X₄ ≤ X₁
  t₁₁: l8(X₀, X₁, X₂, X₃, X₄) → l7(X₀, 1+X₁, X₂, X₃, X₄) :|: 1 ≤ X₂ ∧ 1+X₁ ≤ X₀ ∧ 1+X₄ ≤ X₀ ∧ 1+X₁ ≤ X₃ ∧ 1+X₄ ≤ X₃ ∧ X₀ ≤ X₃ ∧ X₄ ≤ X₁
  t₁₄: l8(X₀, X₁, X₂, X₃, X₄) → l7(X₀-1, X₁, X₂, X₃, X₄) :|: X₂ ≤ 0 ∧ 1+X₁ ≤ X₀ ∧ 1+X₄ ≤ X₀ ∧ 1+X₁ ≤ X₃ ∧ 1+X₄ ≤ X₃ ∧ X₀ ≤ X₃ ∧ X₄ ≤ X₁
  t₉: l9(X₀, X₁, X₂, X₃, X₄) → l10(X₀, X₁, X₂, X₃, X₄) :|: 1+X₁ ≤ X₀ ∧ 1+X₄ ≤ X₀ ∧ 1+X₁ ≤ X₃ ∧ 1+X₄ ≤ X₃ ∧ X₀ ≤ X₃ ∧ X₄ ≤ X₁


MPRF for transition t₇: l7(X₀, X₁, X₂, X₃, X₄) → l9(X₀, X₁, X₂, X₃, X₄) :|: 1+X₁ ≤ X₀ ∧ X₀ ≤ X₃ ∧ X₄ ≤ X₁ of depth 1:
  new bound:
    X₃+X₄ {O(n)}

  MPRF:
    • l10: [X₀-1-X₁]
    • l7: [X₀-X₁]
    • l8: [X₀-1-X₁]
    • l9: [X₀-1-X₁]




MPRF for transition t₉: l9(X₀, X₁, X₂, X₃, X₄) → l10(X₀, X₁, X₂, X₃, X₄) :|: 1+X₁ ≤ X₀ ∧ 1+X₄ ≤ X₀ ∧ 1+X₁ ≤ X₃ ∧ 1+X₄ ≤ X₃ ∧ X₀ ≤ X₃ ∧ X₄ ≤ X₁ of depth 1:
  new bound:
    X₃+X₄ {O(n)}

  MPRF:
    • l10: [X₀-1-X₁]
    • l7: [X₀-X₁]
    • l8: [X₀-1-X₁]
    • l9: [X₀-X₁]




MPRF for transition t₁₀: l10(X₀, X₁, X₂, X₃, X₄) → l8(X₀, X₁, nondef_0, X₃, X₄) :|: 1+X₁ ≤ X₀ ∧ 1+X₄ ≤ X₀ ∧ 1+X₁ ≤ X₃ ∧ 1+X₄ ≤ X₃ ∧ X₀ ≤ X₃ ∧ X₄ ≤ X₁ of depth 1:
  new bound:
    2⋅X₃+2⋅X₄+1 {O(n)}

  MPRF:
    • l10: [X₀+X₃-1-2⋅X₁]
    • l7: [X₀+X₃-1-2⋅X₁]
    • l8: [X₀+X₃-2-2⋅X₁]
    • l9: [X₀+X₃-1-2⋅X₁]




MPRF for transition t₁₁: l8(X₀, X₁, X₂, X₃, X₄) → l7(X₀, 1+X₁, X₂, X₃, X₄) :|: 1 ≤ X₂ ∧ 1+X₁ ≤ X₀ ∧ 1+X₄ ≤ X₀ ∧ 1+X₁ ≤ X₃ ∧ 1+X₄ ≤ X₃ ∧ X₀ ≤ X₃ ∧ X₄ ≤ X₁ of depth 1:
  new bound:
    X₃+X₄ {O(n)}

  MPRF:
    • l10: [X₃-X₁]
    • l7: [X₃-X₁]
    • l8: [X₃-X₁]
    • l9: [X₃-X₁]




MPRF for transition t₁₄: l8(X₀, X₁, X₂, X₃, X₄) → l7(X₀-1, X₁, X₂, X₃, X₄) :|: X₂ ≤ 0 ∧ 1+X₁ ≤ X₀ ∧ 1+X₄ ≤ X₀ ∧ 1+X₁ ≤ X₃ ∧ 1+X₄ ≤ X₃ ∧ X₀ ≤ X₃ ∧ X₄ ≤ X₁ of depth 1:
  new bound:
    X₃+X₄ {O(n)}

  MPRF:
    • l10: [X₀-X₄]
    • l7: [X₀-X₄]
    • l8: [X₀-X₄]
    • l9: [X₀-X₄]




All Bounds
Timebounds
  Overall timebound:6⋅X₃+6⋅X₄+10 {O(n)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: X₃+X₄ {O(n)}
    t₈: 1 {O(1)}
    t₉: X₃+X₄ {O(n)}
    t₁₀: 2⋅X₃+2⋅X₄+1 {O(n)}
    t₁₁: X₃+X₄ {O(n)}
    t₁₄: X₃+X₄ {O(n)}
    t₁₅: 1 {O(1)}


Costbounds
  Overall costbound: 6⋅X₃+6⋅X₄+10 {O(n)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: X₃+X₄ {O(n)}
    t₈: 1 {O(1)}
    t₉: X₃+X₄ {O(n)}
    t₁₀: 2⋅X₃+2⋅X₄+1 {O(n)}
    t₁₁: X₃+X₄ {O(n)}
    t₁₄: X₃+X₄ {O(n)}
    t₁₅: 1 {O(1)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₀, X₂: X₂ {O(n)}
    t₀, X₃: X₃ {O(n)}
    t₀, X₄: X₄ {O(n)}
    t₁, X₀: X₀ {O(n)}
    t₁, X₁: X₁ {O(n)}
    t₁, X₂: X₂ {O(n)}
    t₁, X₃: X₃ {O(n)}
    t₁, X₄: X₄ {O(n)}
    t₂, X₀: X₀ {O(n)}
    t₂, X₁: X₁ {O(n)}
    t₂, X₂: X₂ {O(n)}
    t₂, X₃: X₃ {O(n)}
    t₂, X₄: X₄ {O(n)}
    t₃, X₀: X₀ {O(n)}
    t₃, X₁: X₁ {O(n)}
    t₃, X₂: X₂ {O(n)}
    t₃, X₃: X₃ {O(n)}
    t₃, X₄: X₄ {O(n)}
    t₄, X₀: X₀ {O(n)}
    t₄, X₁: X₁ {O(n)}
    t₄, X₂: X₂ {O(n)}
    t₄, X₃: X₃ {O(n)}
    t₄, X₄: X₄ {O(n)}
    t₅, X₀: X₀ {O(n)}
    t₅, X₁: X₁ {O(n)}
    t₅, X₂: X₂ {O(n)}
    t₅, X₃: X₃ {O(n)}
    t₅, X₄: X₄ {O(n)}
    t₆, X₀: X₃ {O(n)}
    t₆, X₁: X₄ {O(n)}
    t₆, X₂: X₂ {O(n)}
    t₆, X₃: X₃ {O(n)}
    t₆, X₄: X₄ {O(n)}
    t₇, X₀: 2⋅X₃+X₄ {O(n)}
    t₇, X₁: 2⋅X₄+X₃ {O(n)}
    t₇, X₃: X₃ {O(n)}
    t₇, X₄: X₄ {O(n)}
    t₈, X₀: 2⋅X₄+5⋅X₃ {O(n)}
    t₈, X₁: 2⋅X₃+5⋅X₄ {O(n)}
    t₈, X₃: 3⋅X₃ {O(n)}
    t₈, X₄: 3⋅X₄ {O(n)}
    t₉, X₀: 2⋅X₃+X₄ {O(n)}
    t₉, X₁: 2⋅X₄+X₃ {O(n)}
    t₉, X₃: X₃ {O(n)}
    t₉, X₄: X₄ {O(n)}
    t₁₀, X₀: 2⋅X₃+X₄ {O(n)}
    t₁₀, X₁: 2⋅X₄+X₃ {O(n)}
    t₁₀, X₃: X₃ {O(n)}
    t₁₀, X₄: X₄ {O(n)}
    t₁₁, X₀: 2⋅X₃+X₄ {O(n)}
    t₁₁, X₁: 2⋅X₄+X₃ {O(n)}
    t₁₁, X₃: X₃ {O(n)}
    t₁₁, X₄: X₄ {O(n)}
    t₁₄, X₀: 2⋅X₃+X₄ {O(n)}
    t₁₄, X₁: 2⋅X₄+X₃ {O(n)}
    t₁₄, X₃: X₃ {O(n)}
    t₁₄, X₄: X₄ {O(n)}
    t₁₅, X₀: 2⋅X₄+5⋅X₃ {O(n)}
    t₁₅, X₁: 2⋅X₃+5⋅X₄ {O(n)}
    t₁₅, X₃: 3⋅X₃ {O(n)}
    t₁₅, X₄: 3⋅X₄ {O(n)}

