WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [evalrandom2dLeafBlock1in/8,evalrandom2dLeafBlock3in/8,evalrandom2dLeafBlock5in/8,evalrandom2dLeafBlockin/8,evalrandom2dNewDefaultin/8,evalrandom2dNodeBlock7in/8,evalrandom2dNodeBlock9in/8,evalrandom2dNodeBlockin/8,evalrandom2dbb10in/8,evalrandom2dbb2in/8,evalrandom2dbb3in/8,evalrandom2dbb5in/8,evalrandom2dbb7in/8,evalrandom2dbb9in/8,evalrandom2dbbin/8]
1. non_recursive  : [evalrandom2dstop/5]
2. non_recursive  : [evalrandom2dreturnin/5]
3. non_recursive  : [exit_location/1]
4. non_recursive  : [evalrandom2dbb10in_loop_cont/6]
5. non_recursive  : [evalrandom2dentryin/5]
6. non_recursive  : [evalrandom2dstart/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into evalrandom2dbb10in/8
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into evalrandom2dbb10in_loop_cont/6
5. SCC is partially evaluated into evalrandom2dentryin/5
6. SCC is partially evaluated into evalrandom2dstart/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations evalrandom2dbb10in/8 
* CE 9 is refined into CE [12] 
* CE 8 is refined into CE [13] 
* CE 7 is refined into CE [14] 
* CE 5 is refined into CE [15] 
* CE 4 is refined into CE [16] 
* CE 3 is refined into CE [17] 
* CE 6 is refined into CE [18] 


### Cost equations --> "Loop" of evalrandom2dbb10in/8 
* CEs [14] --> Loop 12 
* CEs [15] --> Loop 13 
* CEs [16] --> Loop 14 
* CEs [17] --> Loop 15 
* CEs [18] --> Loop 16 
* CEs [12] --> Loop 17 
* CEs [13] --> Loop 18 

### Ranking functions of CR evalrandom2dbb10in(A,B,C,D,F,G,H,I) 
* RF of phase [12,13,14,15,16]: [-A+B]

#### Partial ranking functions of CR evalrandom2dbb10in(A,B,C,D,F,G,H,I) 
* Partial RF of phase [12,13,14,15,16]:
  - RF of loop [12:1,13:1,14:1,15:1,16:1]:
    -A+B


### Specialization of cost equations evalrandom2dbb10in_loop_cont/6 
* CE 11 is refined into CE [19] 
* CE 10 is refined into CE [20] 


### Cost equations --> "Loop" of evalrandom2dbb10in_loop_cont/6 
* CEs [19] --> Loop 19 
* CEs [20] --> Loop 20 

### Ranking functions of CR evalrandom2dbb10in_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR evalrandom2dbb10in_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations evalrandom2dentryin/5 
* CE 2 is refined into CE [21,22,23,24] 


### Cost equations --> "Loop" of evalrandom2dentryin/5 
* CEs [22,24] --> Loop 21 
* CEs [21] --> Loop 22 
* CEs [23] --> Loop 23 

### Ranking functions of CR evalrandom2dentryin(A,B,C,D,F) 

#### Partial ranking functions of CR evalrandom2dentryin(A,B,C,D,F) 


### Specialization of cost equations evalrandom2dstart/5 
* CE 1 is refined into CE [25,26,27] 


### Cost equations --> "Loop" of evalrandom2dstart/5 
* CEs [27] --> Loop 24 
* CEs [26] --> Loop 25 
* CEs [25] --> Loop 26 

### Ranking functions of CR evalrandom2dstart(A,B,C,D,F) 

#### Partial ranking functions of CR evalrandom2dstart(A,B,C,D,F) 


Computing Bounds
=====================================

#### Cost of chains of evalrandom2dbb10in(A,B,C,D,F,G,H,I):
* Chain [[12,13,14,15,16],18]: 5*it(12)+0
  Such that:aux(3) =< -A+G
it(12) =< aux(3)

  with precondition: [F=2,B=G,A>=0,B>=A+1] 

* Chain [[12,13,14,15,16],17]: 5*it(12)+0
  Such that:aux(4) =< -A+B
it(12) =< aux(4)

  with precondition: [F=3,A>=0,B>=A+1] 

* Chain [18]: 0
  with precondition: [F=2,H=C,I=D,A=G,A>=0,A>=B] 

* Chain [17]: 0
  with precondition: [F=3,A>=0] 


#### Cost of chains of evalrandom2dbb10in_loop_cont(A,B,C,D,E,F):
* Chain [20]: 0
  with precondition: [A=2] 

* Chain [19]: 0
  with precondition: [A=3] 


#### Cost of chains of evalrandom2dentryin(A,B,C,D,F):
* Chain [23]: 0
  with precondition: [] 

* Chain [22]: 0
  with precondition: [0>=B] 

* Chain [21]: 10*s(2)+0
  Such that:aux(5) =< B
s(2) =< aux(5)

  with precondition: [B>=1] 


#### Cost of chains of evalrandom2dstart(A,B,C,D,F):
* Chain [26]: 0
  with precondition: [] 

* Chain [25]: 0
  with precondition: [0>=B] 

* Chain [24]: 10*s(6)+0
  Such that:s(5) =< B
s(6) =< s(5)

  with precondition: [B>=1] 


Closed-form bounds of evalrandom2dstart(A,B,C,D,F): 
-------------------------------------
* Chain [26] with precondition: [] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [25] with precondition: [0>=B] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [24] with precondition: [B>=1] 
    - Upper bound: 10*B 
    - Complexity: n 

### Maximum cost of evalrandom2dstart(A,B,C,D,F): nat(B)*10 
Asymptotic class: n 
* Total analysis performed in 115 ms.

