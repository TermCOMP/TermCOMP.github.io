WORST_CASE(Omega(n^1),O(n^1))

# LoAT Proof:
WORST_CASE(Omega(n^1),?)

WORST_CASE(Omega(n^1),?)
Initial ITS

Start location: evalrandom2dstart

Location map:
LoAT_sink -> 0
evalrandom2dstart -> 1
evalrandom2dentryin -> 2
evalrandom2dbb10in -> 3
evalrandom2dbbin -> 4
evalrandom2dreturnin -> 5
evalrandom2dbb2in -> 6
evalrandom2dNodeBlock9in -> 7
evalrandom2dNodeBlockin -> 8
evalrandom2dNodeBlock7in -> 9
evalrandom2dLeafBlockin -> 10
evalrandom2dLeafBlock1in -> 11
evalrandom2dbb3in -> 12
evalrandom2dNewDefaultin -> 13
evalrandom2dbb5in -> 14
evalrandom2dLeafBlock3in -> 15
evalrandom2dLeafBlock5in -> 16
evalrandom2dbb7in -> 17
evalrandom2dbb9in -> 18
evalrandom2dstop -> 19

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: -2+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=0
   2: (-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=4, i3'=1+i3
   3: (-3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=5, i3'=1+i3
   4: (3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0) /\ i1'=6, i3'=1+i3, i6'=1+i4, i7'=it2
   5: (-4+i1 == 0 /\ -1-it3 >= 0) /\ i1'=3, i3'=1+i3, i4'=1+i4
   6: (-4+i1 == 0 /\ -4+it4 >= 0) /\ i1'=3, i3'=1+i3, i4'=1+i4
   7: -6+i1 == 0 /\ i1'=7, i3'=1+i3
   8: (-7+i1 == 0 /\ 1-i7 >= 0) /\ i1'=8, i3'=1+i3
   9: (-7+i1 == 0 /\ -2+i7 >= 0) /\ i1'=9, i3'=1+i3
  10: (-i7 >= 0 /\ -8+i1 == 0) /\ i1'=10, i3'=1+i3
  11: (-1+i7 >= 0 /\ -8+i1 == 0) /\ i1'=11, i3'=1+i3
  12: (i7 == 0 /\ -10+i1 == 0) /\ i1'=12, i3'=1+i3
  13: (-1-i7 >= 0 /\ -10+i1 == 0) /\ i1'=13, i3'=1+i3
  14: (-1+i7 >= 0 /\ -10+i1 == 0) /\ i1'=13, i3'=1+i3
  15: -12+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=i6
  16: (-11+i1 == 0 /\ -1+i7 == 0) /\ i1'=14, i3'=1+i3
  17: (-11+i1 == 0 /\ -i7 >= 0) /\ i1'=13, i3'=1+i3
  18: (-11+i1 == 0 /\ -2+i7 >= 0) /\ i1'=13, i3'=1+i3
  19: -14+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=i6
  20: (-9+i1 == 0 /\ 2-i7 >= 0) /\ i1'=15, i3'=1+i3
  21: (-9+i1 == 0 /\ -3+i7 >= 0) /\ i1'=16, i3'=1+i3
  22: (-15+i1 == 0 /\ -2+i7 == 0) /\ i1'=17, i3'=1+i3
  23: (-15+i1 == 0 /\ 1-i7 >= 0) /\ i1'=13, i3'=1+i3
  24: (-15+i1 == 0 /\ -3+i7 >= 0) /\ i1'=13, i3'=1+i3
  25: -17+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=i6
  26: (-16+i1 == 0 /\ -3+i7 == 0) /\ i1'=18, i3'=1+i3
  27: (-16+i1 == 0 /\ 2-i7 >= 0) /\ i1'=13, i3'=1+i3
  28: (-16+i1 == 0 /\ -4+i7 >= 0) /\ i1'=13, i3'=1+i3
  29: -18+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=i6
  30: -13+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=i6
  31: -5+i1 == 0 /\ i1'=19, i3'=1+i3

Dependency graph:
0 -> 1
1 -> 2, 1 -> 3
2 -> 4, 2 -> 5, 2 -> 6
3 -> 31
4 -> 7
5 -> 2, 5 -> 3
6 -> 2, 6 -> 3
7 -> 8, 7 -> 9
8 -> 10, 8 -> 11
9 -> 20, 9 -> 21
10 -> 12, 10 -> 13, 10 -> 14
11 -> 16, 11 -> 17, 11 -> 18
12 -> 15
13 -> 30
14 -> 30
15 -> 2, 15 -> 3
16 -> 19
17 -> 30
18 -> 30
19 -> 2, 19 -> 3
20 -> 22, 20 -> 23, 20 -> 24
21 -> 26, 21 -> 27, 21 -> 28
22 -> 25
23 -> 30
24 -> 30
25 -> 2, 25 -> 3
26 -> 29
27 -> 30
28 -> 30
29 -> 2, 29 -> 3
30 -> 2, 30 -> 3

Chained Linear Paths

	Applied Chaining

	First rule:
	-1+i1 == 0 /\ i1'=2, i3'=1+i3
	Second rule:
	-2+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=0
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=0
	
	Applied Deletion

	Removed the following rules: 0, 1
	
	Applied Chaining

	First rule:
	(-3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=5, i3'=1+i3
	Second rule:
	-5+i1 == 0 /\ i1'=19, i3'=1+i3
	New rule:
	(0 == 0 /\ -3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=19, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 3, 31
	
	Applied Chaining

	First rule:
	(3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0) /\ i1'=6, i3'=1+i3, i6'=1+i4, i7'=it2
	Second rule:
	-6+i1 == 0 /\ i1'=7, i3'=1+i3
	New rule:
	(0 == 0 /\ 3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0) /\ i1'=7, i3'=2+i3, i6'=1+i4, i7'=it2
	
	Applied Deletion

	Removed the following rules: 4, 7
	
	Applied Chaining

	First rule:
	(i7 == 0 /\ -10+i1 == 0) /\ i1'=12, i3'=1+i3
	Second rule:
	-12+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=i6
	New rule:
	(0 == 0 /\ i7 == 0 /\ -10+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
	
	Applied Deletion

	Removed the following rules: 12, 15
	
	Applied Chaining

	First rule:
	(-1-i7 >= 0 /\ -10+i1 == 0) /\ i1'=13, i3'=1+i3
	Second rule:
	-13+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=i6
	New rule:
	(0 == 0 /\ -1-i7 >= 0 /\ -10+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
	
	Applied Deletion

	Removed the following rules: 13
	
	Applied Chaining

	First rule:
	(-1+i7 >= 0 /\ -10+i1 == 0) /\ i1'=13, i3'=1+i3
	Second rule:
	-13+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=i6
	New rule:
	(0 == 0 /\ -1+i7 >= 0 /\ -10+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
	
	Applied Deletion

	Removed the following rules: 14
	
	Applied Chaining

	First rule:
	(-11+i1 == 0 /\ -1+i7 == 0) /\ i1'=14, i3'=1+i3
	Second rule:
	-14+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=i6
	New rule:
	(0 == 0 /\ -11+i1 == 0 /\ -1+i7 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
	
	Applied Deletion

	Removed the following rules: 16, 19
	
	Applied Chaining

	First rule:
	(-11+i1 == 0 /\ -i7 >= 0) /\ i1'=13, i3'=1+i3
	Second rule:
	-13+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=i6
	New rule:
	(0 == 0 /\ -11+i1 == 0 /\ -i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
	
	Applied Deletion

	Removed the following rules: 17
	
	Applied Chaining

	First rule:
	(-11+i1 == 0 /\ -2+i7 >= 0) /\ i1'=13, i3'=1+i3
	Second rule:
	-13+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=i6
	New rule:
	(0 == 0 /\ -11+i1 == 0 /\ -2+i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
	
	Applied Deletion

	Removed the following rules: 18
	
	Applied Chaining

	First rule:
	(-15+i1 == 0 /\ -2+i7 == 0) /\ i1'=17, i3'=1+i3
	Second rule:
	-17+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=i6
	New rule:
	(0 == 0 /\ -15+i1 == 0 /\ -2+i7 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
	
	Applied Deletion

	Removed the following rules: 22, 25
	
	Applied Chaining

	First rule:
	(-15+i1 == 0 /\ 1-i7 >= 0) /\ i1'=13, i3'=1+i3
	Second rule:
	-13+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=i6
	New rule:
	(0 == 0 /\ -15+i1 == 0 /\ 1-i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
	
	Applied Deletion

	Removed the following rules: 23
	
	Applied Chaining

	First rule:
	(-15+i1 == 0 /\ -3+i7 >= 0) /\ i1'=13, i3'=1+i3
	Second rule:
	-13+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=i6
	New rule:
	(0 == 0 /\ -15+i1 == 0 /\ -3+i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
	
	Applied Deletion

	Removed the following rules: 24
	
	Applied Chaining

	First rule:
	(-16+i1 == 0 /\ -3+i7 == 0) /\ i1'=18, i3'=1+i3
	Second rule:
	-18+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=i6
	New rule:
	(0 == 0 /\ -16+i1 == 0 /\ -3+i7 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
	
	Applied Deletion

	Removed the following rules: 26, 29
	
	Applied Chaining

	First rule:
	(-16+i1 == 0 /\ 2-i7 >= 0) /\ i1'=13, i3'=1+i3
	Second rule:
	-13+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=i6
	New rule:
	(0 == 0 /\ -16+i1 == 0 /\ 2-i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
	
	Applied Deletion

	Removed the following rules: 27
	
	Applied Chaining

	First rule:
	(-16+i1 == 0 /\ -4+i7 >= 0) /\ i1'=13, i3'=1+i3
	Second rule:
	-13+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=i6
	New rule:
	(0 == 0 /\ -16+i1 == 0 /\ -4+i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
	
	Applied Deletion

	Removed the following rules: 28, 30

Start location: evalrandom2dstart

Location map:
LoAT_sink -> 0
evalrandom2dstart -> 1
evalrandom2dentryin -> 2
evalrandom2dbb10in -> 3
evalrandom2dbbin -> 4
evalrandom2dreturnin -> 5
evalrandom2dbb2in -> 6
evalrandom2dNodeBlock9in -> 7
evalrandom2dNodeBlockin -> 8
evalrandom2dNodeBlock7in -> 9
evalrandom2dLeafBlockin -> 10
evalrandom2dLeafBlock1in -> 11
evalrandom2dbb3in -> 12
evalrandom2dNewDefaultin -> 13
evalrandom2dbb5in -> 14
evalrandom2dLeafBlock3in -> 15
evalrandom2dLeafBlock5in -> 16
evalrandom2dbb7in -> 17
evalrandom2dbb9in -> 18
evalrandom2dstop -> 19

Rules:
   2: (-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=4, i3'=1+i3
   5: (-4+i1 == 0 /\ -1-it3 >= 0) /\ i1'=3, i3'=1+i3, i4'=1+i4
   6: (-4+i1 == 0 /\ -4+it4 >= 0) /\ i1'=3, i3'=1+i3, i4'=1+i4
   8: (-7+i1 == 0 /\ 1-i7 >= 0) /\ i1'=8, i3'=1+i3
   9: (-7+i1 == 0 /\ -2+i7 >= 0) /\ i1'=9, i3'=1+i3
  10: (-i7 >= 0 /\ -8+i1 == 0) /\ i1'=10, i3'=1+i3
  11: (-1+i7 >= 0 /\ -8+i1 == 0) /\ i1'=11, i3'=1+i3
  20: (-9+i1 == 0 /\ 2-i7 >= 0) /\ i1'=15, i3'=1+i3
  21: (-9+i1 == 0 /\ -3+i7 >= 0) /\ i1'=16, i3'=1+i3
  32: (0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=0
  33: (0 == 0 /\ -3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=19, i3'=2+i3
  34: (0 == 0 /\ 3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0) /\ i1'=7, i3'=2+i3, i6'=1+i4, i7'=it2
  35: (0 == 0 /\ i7 == 0 /\ -10+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  36: (0 == 0 /\ -1-i7 >= 0 /\ -10+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  37: (0 == 0 /\ -1+i7 >= 0 /\ -10+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  38: (0 == 0 /\ -11+i1 == 0 /\ -1+i7 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  39: (0 == 0 /\ -11+i1 == 0 /\ -i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
  40: (0 == 0 /\ -11+i1 == 0 /\ -2+i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
  41: (0 == 0 /\ -15+i1 == 0 /\ -2+i7 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  42: (0 == 0 /\ -15+i1 == 0 /\ 1-i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
  43: (0 == 0 /\ -15+i1 == 0 /\ -3+i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
  44: (0 == 0 /\ -16+i1 == 0 /\ -3+i7 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  45: (0 == 0 /\ -16+i1 == 0 /\ 2-i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
  46: (0 == 0 /\ -16+i1 == 0 /\ -4+i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6

Dependency graph:
2 -> 5, 2 -> 6, 2 -> 34
5 -> 2, 5 -> 33
6 -> 2, 6 -> 33
8 -> 10, 8 -> 11
9 -> 20, 9 -> 21
10 -> 35, 10 -> 36, 10 -> 37
11 -> 38, 11 -> 39, 11 -> 40
20 -> 41, 20 -> 42, 20 -> 43
21 -> 44, 21 -> 45, 21 -> 46
32 -> 2, 32 -> 33
34 -> 8, 34 -> 9
35 -> 2, 35 -> 33
36 -> 2, 36 -> 33
37 -> 2, 37 -> 33
38 -> 2, 38 -> 33
39 -> 2, 39 -> 33
40 -> 2, 40 -> 33
41 -> 2, 41 -> 33
42 -> 2, 42 -> 33
43 -> 2, 43 -> 33
44 -> 2, 44 -> 33
45 -> 2, 45 -> 33
46 -> 2, 46 -> 33

Preprocessed Transitions

	Eliminated Temporary Variables

	Original rule:
	(-4+i1 == 0 /\ -1-it3 >= 0) /\ i1'=3, i3'=1+i3, i4'=1+i4
	New rule:
	(-4+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=1+i4
	
	Eliminated Temporary Variables

	Original rule:
	(-4+i1 == 0 /\ -4+it4 >= 0) /\ i1'=3, i3'=1+i3, i4'=1+i4
	New rule:
	(-4+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=1+i4
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=0
	New rule:
	-1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=0
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=19, i3'=2+i3
	New rule:
	(-3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=19, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ 3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0) /\ i1'=7, i3'=2+i3, i6'=1+i4, i7'=it2
	New rule:
	(3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0) /\ i1'=7, i3'=2+i3, i6'=1+i4, i7'=it2
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ i7 == 0 /\ -10+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
	New rule:
	(i7 == 0 /\ -10+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -1-i7 >= 0 /\ -10+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
	New rule:
	(-1-i7 >= 0 /\ -10+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+i7 >= 0 /\ -10+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
	New rule:
	(-1+i7 >= 0 /\ -10+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -11+i1 == 0 /\ -1+i7 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
	New rule:
	(-11+i1 == 0 /\ -1+i7 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -11+i1 == 0 /\ -i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
	New rule:
	(-11+i1 == 0 /\ -i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -11+i1 == 0 /\ -2+i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
	New rule:
	(-11+i1 == 0 /\ -2+i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -15+i1 == 0 /\ -2+i7 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
	New rule:
	(-15+i1 == 0 /\ -2+i7 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -15+i1 == 0 /\ 1-i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
	New rule:
	(-15+i1 == 0 /\ 1-i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -15+i1 == 0 /\ -3+i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
	New rule:
	(-15+i1 == 0 /\ -3+i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -16+i1 == 0 /\ -3+i7 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
	New rule:
	(-16+i1 == 0 /\ -3+i7 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -16+i1 == 0 /\ 2-i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
	New rule:
	(-16+i1 == 0 /\ 2-i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -16+i1 == 0 /\ -4+i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
	New rule:
	(-16+i1 == 0 /\ -4+i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6

Start location: evalrandom2dstart

Location map:
LoAT_sink -> 0
evalrandom2dstart -> 1
evalrandom2dentryin -> 2
evalrandom2dbb10in -> 3
evalrandom2dbbin -> 4
evalrandom2dreturnin -> 5
evalrandom2dbb2in -> 6
evalrandom2dNodeBlock9in -> 7
evalrandom2dNodeBlockin -> 8
evalrandom2dNodeBlock7in -> 9
evalrandom2dLeafBlockin -> 10
evalrandom2dLeafBlock1in -> 11
evalrandom2dbb3in -> 12
evalrandom2dNewDefaultin -> 13
evalrandom2dbb5in -> 14
evalrandom2dLeafBlock3in -> 15
evalrandom2dLeafBlock5in -> 16
evalrandom2dbb7in -> 17
evalrandom2dbb9in -> 18
evalrandom2dstop -> 19

Rules:
   2: (-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=4, i3'=1+i3
   8: (-7+i1 == 0 /\ 1-i7 >= 0) /\ i1'=8, i3'=1+i3
   9: (-7+i1 == 0 /\ -2+i7 >= 0) /\ i1'=9, i3'=1+i3
  10: (-i7 >= 0 /\ -8+i1 == 0) /\ i1'=10, i3'=1+i3
  11: (-1+i7 >= 0 /\ -8+i1 == 0) /\ i1'=11, i3'=1+i3
  20: (-9+i1 == 0 /\ 2-i7 >= 0) /\ i1'=15, i3'=1+i3
  21: (-9+i1 == 0 /\ -3+i7 >= 0) /\ i1'=16, i3'=1+i3
  47: (-4+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=1+i4
  48: (-4+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=1+i4
  49: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=0
  50: (-3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=19, i3'=2+i3
  51: (3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0) /\ i1'=7, i3'=2+i3, i6'=1+i4, i7'=it2
  52: (i7 == 0 /\ -10+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  53: (-1-i7 >= 0 /\ -10+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  54: (-1+i7 >= 0 /\ -10+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  55: (-11+i1 == 0 /\ -1+i7 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  56: (-11+i1 == 0 /\ -i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
  57: (-11+i1 == 0 /\ -2+i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
  58: (-15+i1 == 0 /\ -2+i7 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  59: (-15+i1 == 0 /\ 1-i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
  60: (-15+i1 == 0 /\ -3+i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
  61: (-16+i1 == 0 /\ -3+i7 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  62: (-16+i1 == 0 /\ 2-i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
  63: (-16+i1 == 0 /\ -4+i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6

Dependency graph:
2 -> 47, 2 -> 48, 2 -> 51
8 -> 10, 8 -> 11
9 -> 20, 9 -> 21
10 -> 52, 10 -> 53, 10 -> 54
11 -> 55, 11 -> 56, 11 -> 57
20 -> 58, 20 -> 59, 20 -> 60
21 -> 61, 21 -> 62, 21 -> 63
47 -> 2, 47 -> 50
48 -> 2, 48 -> 50
49 -> 2, 49 -> 50
51 -> 8, 51 -> 9
52 -> 2, 52 -> 50
53 -> 2, 53 -> 50
54 -> 2, 54 -> 50
55 -> 2, 55 -> 50
56 -> 2, 56 -> 50
57 -> 2, 57 -> 50
58 -> 2, 58 -> 50
59 -> 2, 59 -> 50
60 -> 2, 60 -> 50
61 -> 2, 61 -> 50
62 -> 2, 62 -> 50
63 -> 2, 63 -> 50

Refined Dependency Graph

	Removed the following edges: 10 -> 54, 11 -> 56, 20 -> 60, 21 -> 62

Start location: evalrandom2dstart

Location map:
LoAT_sink -> 0
evalrandom2dstart -> 1
evalrandom2dentryin -> 2
evalrandom2dbb10in -> 3
evalrandom2dbbin -> 4
evalrandom2dreturnin -> 5
evalrandom2dbb2in -> 6
evalrandom2dNodeBlock9in -> 7
evalrandom2dNodeBlockin -> 8
evalrandom2dNodeBlock7in -> 9
evalrandom2dLeafBlockin -> 10
evalrandom2dLeafBlock1in -> 11
evalrandom2dbb3in -> 12
evalrandom2dNewDefaultin -> 13
evalrandom2dbb5in -> 14
evalrandom2dLeafBlock3in -> 15
evalrandom2dLeafBlock5in -> 16
evalrandom2dbb7in -> 17
evalrandom2dbb9in -> 18
evalrandom2dstop -> 19

Rules:
   2: (-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=4, i3'=1+i3
   8: (-7+i1 == 0 /\ 1-i7 >= 0) /\ i1'=8, i3'=1+i3
   9: (-7+i1 == 0 /\ -2+i7 >= 0) /\ i1'=9, i3'=1+i3
  10: (-i7 >= 0 /\ -8+i1 == 0) /\ i1'=10, i3'=1+i3
  11: (-1+i7 >= 0 /\ -8+i1 == 0) /\ i1'=11, i3'=1+i3
  20: (-9+i1 == 0 /\ 2-i7 >= 0) /\ i1'=15, i3'=1+i3
  21: (-9+i1 == 0 /\ -3+i7 >= 0) /\ i1'=16, i3'=1+i3
  47: (-4+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=1+i4
  48: (-4+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=1+i4
  49: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=0
  50: (-3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=19, i3'=2+i3
  51: (3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0) /\ i1'=7, i3'=2+i3, i6'=1+i4, i7'=it2
  52: (i7 == 0 /\ -10+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  53: (-1-i7 >= 0 /\ -10+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  54: (-1+i7 >= 0 /\ -10+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  55: (-11+i1 == 0 /\ -1+i7 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  56: (-11+i1 == 0 /\ -i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
  57: (-11+i1 == 0 /\ -2+i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
  58: (-15+i1 == 0 /\ -2+i7 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  59: (-15+i1 == 0 /\ 1-i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
  60: (-15+i1 == 0 /\ -3+i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
  61: (-16+i1 == 0 /\ -3+i7 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  62: (-16+i1 == 0 /\ 2-i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
  63: (-16+i1 == 0 /\ -4+i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6

Dependency graph:
2 -> 47, 2 -> 48, 2 -> 51
8 -> 10, 8 -> 11
9 -> 20, 9 -> 21
10 -> 52, 10 -> 53
11 -> 55, 11 -> 57
20 -> 58, 20 -> 59
21 -> 61, 21 -> 63
47 -> 2, 47 -> 50
48 -> 2, 48 -> 50
49 -> 2, 49 -> 50
51 -> 8, 51 -> 9
52 -> 2, 52 -> 50
53 -> 2, 53 -> 50
54 -> 2, 54 -> 50
55 -> 2, 55 -> 50
56 -> 2, 56 -> 50
57 -> 2, 57 -> 50
58 -> 2, 58 -> 50
59 -> 2, 59 -> 50
60 -> 2, 60 -> 50
61 -> 2, 61 -> 50
62 -> 2, 62 -> 50
63 -> 2, 63 -> 50

Step with 49

	Trace

	49[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 50

	Trace

	49[(-1+i1 == 0)]
	50[(-3+i1 == 0 /\ i4-i5 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Backtrack

	Trace

	49[(-1+i1 == 0)]
	
	Blocked

	{}
	{50[T]}
	
Step with 2

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{50[T]}
	{}
	
Step with 47

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	47[(-4+i1 == 0)]
	
	Blocked

	{}
	{50[T]}
	{}
	{}
	
Poly(n^1)

Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i4
		New rule:
		(-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i4

	Loop Acceleration

	Original rule:
	(-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i4
	New rule:
	(-3+i1 >= 0 /\ -it29-i4+i5 >= 0 /\ -1+it29 >= 0 /\ 3-i1 >= 0) /\ i1'=i1, i3'=i3+2*it29, i4'=it29+i4

		-3+i1 >= 0 [0]: unchanged
		
		3-i1 >= 0 [0]: unchanged
		
		-1-i4+i5 >= 0 [0]: montonic decrease yields -it29-i4+i5 >= 0
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, 3-i1 >= 0 -> 3-i1 >= 0, -1-i4+i5 >= 0 -> -it29-i4+i5 >= 0}

	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ -it29-i4+i5 >= 0 /\ -1+it29 >= 0 /\ 3-i1 >= 0) /\ i1'=i1, i3'=i3+2*it29, i4'=it29+i4
	New rule:
	(-3+i1 >= 0 /\ -it29-i4+i5 >= 0 /\ -1+it29 >= 0 /\ 3-i1 >= 0) /\ i3'=i3+2*it29, i4'=it29+i4
	
	Instantiation

	Original rule:
	(-3+i1 >= 0 /\ -it29-i4+i5 >= 0 /\ -1+it29 >= 0 /\ 3-i1 >= 0) /\ i3'=i3+2*it29, i4'=it29+i4
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3-2*i4+2*i5, i4'=i5

Start location: evalrandom2dstart

Location map:
LoAT_sink -> 0
evalrandom2dstart -> 1
evalrandom2dentryin -> 2
evalrandom2dbb10in -> 3
evalrandom2dbbin -> 4
evalrandom2dreturnin -> 5
evalrandom2dbb2in -> 6
evalrandom2dNodeBlock9in -> 7
evalrandom2dNodeBlockin -> 8
evalrandom2dNodeBlock7in -> 9
evalrandom2dLeafBlockin -> 10
evalrandom2dLeafBlock1in -> 11
evalrandom2dbb3in -> 12
evalrandom2dNewDefaultin -> 13
evalrandom2dbb5in -> 14
evalrandom2dLeafBlock3in -> 15
evalrandom2dLeafBlock5in -> 16
evalrandom2dbb7in -> 17
evalrandom2dbb9in -> 18
evalrandom2dstop -> 19

Rules:
   2: (-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=4, i3'=1+i3
   8: (-7+i1 == 0 /\ 1-i7 >= 0) /\ i1'=8, i3'=1+i3
   9: (-7+i1 == 0 /\ -2+i7 >= 0) /\ i1'=9, i3'=1+i3
  10: (-i7 >= 0 /\ -8+i1 == 0) /\ i1'=10, i3'=1+i3
  11: (-1+i7 >= 0 /\ -8+i1 == 0) /\ i1'=11, i3'=1+i3
  20: (-9+i1 == 0 /\ 2-i7 >= 0) /\ i1'=15, i3'=1+i3
  21: (-9+i1 == 0 /\ -3+i7 >= 0) /\ i1'=16, i3'=1+i3
  47: (-4+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=1+i4
  48: (-4+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=1+i4
  49: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=0
  50: (-3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=19, i3'=2+i3
  51: (3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0) /\ i1'=7, i3'=2+i3, i6'=1+i4, i7'=it2
  52: (i7 == 0 /\ -10+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  53: (-1-i7 >= 0 /\ -10+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  54: (-1+i7 >= 0 /\ -10+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  55: (-11+i1 == 0 /\ -1+i7 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  56: (-11+i1 == 0 /\ -i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
  57: (-11+i1 == 0 /\ -2+i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
  58: (-15+i1 == 0 /\ -2+i7 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  59: (-15+i1 == 0 /\ 1-i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
  60: (-15+i1 == 0 /\ -3+i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
  61: (-16+i1 == 0 /\ -3+i7 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  62: (-16+i1 == 0 /\ 2-i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
  63: (-16+i1 == 0 /\ -4+i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
  64: (0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3-2*i4+2*i5, i4'=i5

Dependency graph:
2 -> 47, 2 -> 48, 2 -> 51
8 -> 10, 8 -> 11
9 -> 20, 9 -> 21
10 -> 52, 10 -> 53
11 -> 55, 11 -> 57
20 -> 58, 20 -> 59
21 -> 61, 21 -> 63
47 -> 2, 47 -> 50, 47 -> 64
48 -> 2, 48 -> 50, 48 -> 64
49 -> 2, 49 -> 50, 49 -> 64
51 -> 8, 51 -> 9
52 -> 2, 52 -> 50, 52 -> 64
53 -> 2, 53 -> 50, 53 -> 64
54 -> 2, 54 -> 50, 54 -> 64
55 -> 2, 55 -> 50, 55 -> 64
56 -> 2, 56 -> 50, 56 -> 64
57 -> 2, 57 -> 50, 57 -> 64
58 -> 2, 58 -> 50, 58 -> 64
59 -> 2, 59 -> 50, 59 -> 64
60 -> 2, 60 -> 50, 60 -> 64
61 -> 2, 61 -> 50, 61 -> 64
62 -> 2, 62 -> 50, 62 -> 64
63 -> 2, 63 -> 50, 63 -> 64
64 -> 2, 64 -> 50

	Trace

	49[(-1+i1 == 0)]
	64[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{50[T]}
	{64[T]}
	
Step with 50

	Trace

	49[(-1+i1 == 0)]
	64[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0)]
	50[(-3+i1 == 0 /\ i4-i5 >= 0)]
	
	Blocked

	{}
	{50[T]}
	{64[T]}
	{}
	
Backtrack

	Trace

	49[(-1+i1 == 0)]
	64[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{50[T]}
	{50[T], 64[T]}
	
Backtrack

	Trace

	49[(-1+i1 == 0)]
	
	Blocked

	{}
	{50[T], 64[T]}
	
Step with 2

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{50[T], 64[T]}
	{}
	
Step with 51

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	51[(3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0)]
	
	Blocked

	{}
	{50[T], 64[T]}
	{}
	{}
	
Step with 8

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	51[(3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0)]
	8[(-7+i1 == 0 /\ 1-i7 >= 0)]
	
	Blocked

	{}
	{50[T], 64[T]}
	{}
	{}
	{}
	
Step with 10

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	51[(3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0)]
	8[(-7+i1 == 0 /\ 1-i7 >= 0)]
	10[(-i7 >= 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{50[T], 64[T]}
	{}
	{}
	{}
	{}
	
Step with 52

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	51[(3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0)]
	8[(-7+i1 == 0 /\ 1-i7 >= 0)]
	10[(-i7 >= 0 /\ -8+i1 == 0)]
	52[(i7 == 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{50[T], 64[T]}
	{}
	{}
	{}
	{}
	{}
	
Accelerate

		Extracted Implied Equalities

		Original rule:
		(0 == 0 /\ -3+i1 == 0 /\ 1-it2 >= 0 /\ 3-it2 >= 0 /\ -1-i4+i5 >= 0 /\ -it2 >= 0 /\ it2 >= 0 /\ it2 == 0) /\ i1'=3, i3'=7+i3, i4'=1+i4, i6'=1+i4, i7'=it2
		New rule:
		(0 == 0 /\ -3+i1 == 0 /\ 1-it2 >= 0 /\ 3-it2 >= 0 /\ -1-i4+i5 >= 0 /\ -it2 >= 0 /\ it2 >= 0 /\ it2 == 0) /\ i1'=3, i3'=7+i3, i4'=1+i4, i6'=1+i4, i7'=it2
		
		Propagated Equalities

		Original rule:
		(0 == 0 /\ -3+i1 == 0 /\ 1-it2 >= 0 /\ 3-it2 >= 0 /\ -1-i4+i5 >= 0 /\ -it2 >= 0 /\ it2 >= 0 /\ it2 == 0) /\ i1'=3, i3'=7+i3, i4'=1+i4, i6'=1+i4, i7'=it2
		New rule:
		(0 >= 0 /\ 0 == 0 /\ -3+i1 == 0 /\ 1 >= 0 /\ 3 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=7+i3, i4'=1+i4, i6'=1+i4, i7'=0
		
			propagated equality it2 = 0
			
		Simplified Guard

		Original rule:
		(0 >= 0 /\ 0 == 0 /\ -3+i1 == 0 /\ 1 >= 0 /\ 3 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=7+i3, i4'=1+i4, i6'=1+i4, i7'=0
		New rule:
		(-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=7+i3, i4'=1+i4, i6'=1+i4, i7'=0

	Loop Acceleration

	Original rule:
	(-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=7+i3, i4'=1+i4, i6'=1+i4, i7'=0
	New rule:
	(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+it79 >= 0 /\ -1-i4+i5 >= 0 /\ -it79-i4+i5 >= 0) /\ i1'=i1, i3'=i3+7*it79, i4'=it79+i4, i6'=it79+i4, i7'=0

		-3+i1 >= 0 [0]: unchanged
		
		3-i1 >= 0 [0]: unchanged
		
		-1-i4+i5 >= 0 [0]: montonic decrease yields (-1-i4+i5 >= 0 /\ -it79-i4+i5 >= 0)
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, 3-i1 >= 0 -> 3-i1 >= 0, -1-i4+i5 >= 0 -> (-1-i4+i5 >= 0 /\ -it79-i4+i5 >= 0)}

	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+it79 >= 0 /\ -1-i4+i5 >= 0 /\ -it79-i4+i5 >= 0) /\ i1'=i1, i3'=i3+7*it79, i4'=it79+i4, i6'=it79+i4, i7'=0
	New rule:
	(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+it79 >= 0 /\ -1-i4+i5 >= 0 /\ -it79-i4+i5 >= 0) /\ i3'=i3+7*it79, i4'=it79+i4, i6'=it79+i4, i7'=0
	
	Instantiation

	Original rule:
	(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+it79 >= 0 /\ -1-i4+i5 >= 0 /\ -it79-i4+i5 >= 0) /\ i3'=i3+7*it79, i4'=it79+i4, i6'=it79+i4, i7'=0
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3-7*i4+7*i5, i4'=i5, i6'=i5, i7'=0

Start location: evalrandom2dstart

Location map:
LoAT_sink -> 0
evalrandom2dstart -> 1
evalrandom2dentryin -> 2
evalrandom2dbb10in -> 3
evalrandom2dbbin -> 4
evalrandom2dreturnin -> 5
evalrandom2dbb2in -> 6
evalrandom2dNodeBlock9in -> 7
evalrandom2dNodeBlockin -> 8
evalrandom2dNodeBlock7in -> 9
evalrandom2dLeafBlockin -> 10
evalrandom2dLeafBlock1in -> 11
evalrandom2dbb3in -> 12
evalrandom2dNewDefaultin -> 13
evalrandom2dbb5in -> 14
evalrandom2dLeafBlock3in -> 15
evalrandom2dLeafBlock5in -> 16
evalrandom2dbb7in -> 17
evalrandom2dbb9in -> 18
evalrandom2dstop -> 19

Rules:
   2: (-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=4, i3'=1+i3
   8: (-7+i1 == 0 /\ 1-i7 >= 0) /\ i1'=8, i3'=1+i3
   9: (-7+i1 == 0 /\ -2+i7 >= 0) /\ i1'=9, i3'=1+i3
  10: (-i7 >= 0 /\ -8+i1 == 0) /\ i1'=10, i3'=1+i3
  11: (-1+i7 >= 0 /\ -8+i1 == 0) /\ i1'=11, i3'=1+i3
  20: (-9+i1 == 0 /\ 2-i7 >= 0) /\ i1'=15, i3'=1+i3
  21: (-9+i1 == 0 /\ -3+i7 >= 0) /\ i1'=16, i3'=1+i3
  47: (-4+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=1+i4
  48: (-4+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=1+i4
  49: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=0
  50: (-3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=19, i3'=2+i3
  51: (3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0) /\ i1'=7, i3'=2+i3, i6'=1+i4, i7'=it2
  52: (i7 == 0 /\ -10+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  53: (-1-i7 >= 0 /\ -10+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  54: (-1+i7 >= 0 /\ -10+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  55: (-11+i1 == 0 /\ -1+i7 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  56: (-11+i1 == 0 /\ -i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
  57: (-11+i1 == 0 /\ -2+i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
  58: (-15+i1 == 0 /\ -2+i7 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  59: (-15+i1 == 0 /\ 1-i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
  60: (-15+i1 == 0 /\ -3+i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
  61: (-16+i1 == 0 /\ -3+i7 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  62: (-16+i1 == 0 /\ 2-i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
  63: (-16+i1 == 0 /\ -4+i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
  64: (0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3-2*i4+2*i5, i4'=i5
  65: (0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3-7*i4+7*i5, i4'=i5, i6'=i5, i7'=0

Dependency graph:
2 -> 47, 2 -> 48, 2 -> 51
8 -> 10, 8 -> 11
9 -> 20, 9 -> 21
10 -> 52, 10 -> 53
11 -> 55, 11 -> 57
20 -> 58, 20 -> 59
21 -> 61, 21 -> 63
47 -> 2, 47 -> 50, 47 -> 64, 47 -> 65
48 -> 2, 48 -> 50, 48 -> 64, 48 -> 65
49 -> 2, 49 -> 50, 49 -> 64, 49 -> 65
51 -> 8, 51 -> 9
52 -> 2, 52 -> 50, 52 -> 64, 52 -> 65
53 -> 2, 53 -> 50, 53 -> 64, 53 -> 65
54 -> 2, 54 -> 50, 54 -> 64, 54 -> 65
55 -> 2, 55 -> 50, 55 -> 64, 55 -> 65
56 -> 2, 56 -> 50, 56 -> 64, 56 -> 65
57 -> 2, 57 -> 50, 57 -> 64, 57 -> 65
58 -> 2, 58 -> 50, 58 -> 64, 58 -> 65
59 -> 2, 59 -> 50, 59 -> 64, 59 -> 65
60 -> 2, 60 -> 50, 60 -> 64, 60 -> 65
61 -> 2, 61 -> 50, 61 -> 64, 61 -> 65
62 -> 2, 62 -> 50, 62 -> 64, 62 -> 65
63 -> 2, 63 -> 50, 63 -> 64, 63 -> 65
64 -> 2, 64 -> 50, 64 -> 65
65 -> 2, 65 -> 50, 65 -> 64

	Trace

	49[(-1+i1 == 0)]
	65[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{50[T], 64[T]}
	{65[T]}
	
Step with 50

	Trace

	49[(-1+i1 == 0)]
	65[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0)]
	50[(-3+i1 == 0 /\ i4-i5 >= 0)]
	
	Blocked

	{}
	{50[T], 64[T]}
	{65[T]}
	{}
	
Backtrack

	Trace

	49[(-1+i1 == 0)]
	65[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{50[T], 64[T]}
	{50[T], 65[T]}
	
Backtrack

	Trace

	49[(-1+i1 == 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T]}
	
Step with 2

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T]}
	{}
	
Step with 51

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	51[(3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T]}
	{}
	{}
	
Step with 8

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	51[(3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0)]
	8[(-7+i1 == 0 /\ 1-i7 >= 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T]}
	{}
	{}
	{}
	
Step with 10

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	51[(3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0)]
	8[(-7+i1 == 0 /\ 1-i7 >= 0)]
	10[(-i7 >= 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T]}
	{}
	{}
	{}
	{}
	
Step with 52

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	51[(3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0)]
	8[(-7+i1 == 0 /\ 1-i7 >= 0)]
	10[(-i7 >= 0 /\ -8+i1 == 0)]
	52[(i7 == 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T]}
	{}
	{}
	{}
	{53[T]}
	{}
	
Covered

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	51[(3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0)]
	8[(-7+i1 == 0 /\ 1-i7 >= 0)]
	10[(-i7 >= 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T]}
	{}
	{}
	{}
	{52[T], 53[T]}
	
Backtrack

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	51[(3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0)]
	8[(-7+i1 == 0 /\ 1-i7 >= 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T]}
	{}
	{}
	{10[T]}
	
Step with 11

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	51[(3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0)]
	8[(-7+i1 == 0 /\ 1-i7 >= 0)]
	11[(-1+i7 >= 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T]}
	{}
	{}
	{10[T]}
	{}
	
Step with 55

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	51[(3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0)]
	8[(-7+i1 == 0 /\ 1-i7 >= 0)]
	11[(-1+i7 >= 0 /\ -8+i1 == 0)]
	55[(-11+i1 == 0 /\ -1+i7 == 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T]}
	{}
	{}
	{10[T]}
	{57[T]}
	{}
	
Accelerate

		Extracted Implied Equalities

		Original rule:
		(0 == 0 /\ -3+i1 == 0 /\ 1-it2 >= 0 /\ -1+it2 >= 0 /\ -1+it2 == 0 /\ 3-it2 >= 0 /\ -1-i4+i5 >= 0 /\ it2 >= 0) /\ i1'=3, i3'=7+i3, i4'=1+i4, i6'=1+i4, i7'=it2
		New rule:
		(0 == 0 /\ -3+i1 == 0 /\ 1-it2 >= 0 /\ -1+it2 >= 0 /\ -1+it2 == 0 /\ 3-it2 >= 0 /\ -1-i4+i5 >= 0 /\ it2 >= 0) /\ i1'=3, i3'=7+i3, i4'=1+i4, i6'=1+i4, i7'=it2
		
		Propagated Equalities

		Original rule:
		(0 == 0 /\ -3+i1 == 0 /\ 1-it2 >= 0 /\ -1+it2 >= 0 /\ -1+it2 == 0 /\ 3-it2 >= 0 /\ -1-i4+i5 >= 0 /\ it2 >= 0) /\ i1'=3, i3'=7+i3, i4'=1+i4, i6'=1+i4, i7'=it2
		New rule:
		(0 >= 0 /\ 0 == 0 /\ -3+i1 == 0 /\ 1 >= 0 /\ 2 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=7+i3, i4'=1+i4, i6'=1+i4, i7'=1
		
			propagated equality it2 = 1
			
		Simplified Guard

		Original rule:
		(0 >= 0 /\ 0 == 0 /\ -3+i1 == 0 /\ 1 >= 0 /\ 2 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=7+i3, i4'=1+i4, i6'=1+i4, i7'=1
		New rule:
		(-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=7+i3, i4'=1+i4, i6'=1+i4, i7'=1

	Loop Acceleration

	Original rule:
	(-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=7+i3, i4'=1+i4, i6'=1+i4, i7'=1
	New rule:
	(-3+i1 >= 0 /\ -i4-it135+i5 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0 /\ -1+it135 >= 0) /\ i1'=i1, i3'=i3+7*it135, i4'=i4+it135, i6'=i4+it135, i7'=1

		-3+i1 >= 0 [0]: unchanged
		
		3-i1 >= 0 [0]: unchanged
		
		-1-i4+i5 >= 0 [0]: montonic decrease yields (-i4-it135+i5 >= 0 /\ -1-i4+i5 >= 0)
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, 3-i1 >= 0 -> 3-i1 >= 0, -1-i4+i5 >= 0 -> (-i4-it135+i5 >= 0 /\ -1-i4+i5 >= 0)}

	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ -i4-it135+i5 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0 /\ -1+it135 >= 0) /\ i1'=i1, i3'=i3+7*it135, i4'=i4+it135, i6'=i4+it135, i7'=1
	New rule:
	(-3+i1 >= 0 /\ -i4-it135+i5 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0 /\ -1+it135 >= 0) /\ i3'=i3+7*it135, i4'=i4+it135, i6'=i4+it135, i7'=1
	
	Instantiation

	Original rule:
	(-3+i1 >= 0 /\ -i4-it135+i5 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0 /\ -1+it135 >= 0) /\ i3'=i3+7*it135, i4'=i4+it135, i6'=i4+it135, i7'=1
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3-7*i4+7*i5, i4'=i5, i6'=i5, i7'=1

Start location: evalrandom2dstart

Location map:
LoAT_sink -> 0
evalrandom2dstart -> 1
evalrandom2dentryin -> 2
evalrandom2dbb10in -> 3
evalrandom2dbbin -> 4
evalrandom2dreturnin -> 5
evalrandom2dbb2in -> 6
evalrandom2dNodeBlock9in -> 7
evalrandom2dNodeBlockin -> 8
evalrandom2dNodeBlock7in -> 9
evalrandom2dLeafBlockin -> 10
evalrandom2dLeafBlock1in -> 11
evalrandom2dbb3in -> 12
evalrandom2dNewDefaultin -> 13
evalrandom2dbb5in -> 14
evalrandom2dLeafBlock3in -> 15
evalrandom2dLeafBlock5in -> 16
evalrandom2dbb7in -> 17
evalrandom2dbb9in -> 18
evalrandom2dstop -> 19

Rules:
   2: (-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=4, i3'=1+i3
   8: (-7+i1 == 0 /\ 1-i7 >= 0) /\ i1'=8, i3'=1+i3
   9: (-7+i1 == 0 /\ -2+i7 >= 0) /\ i1'=9, i3'=1+i3
  10: (-i7 >= 0 /\ -8+i1 == 0) /\ i1'=10, i3'=1+i3
  11: (-1+i7 >= 0 /\ -8+i1 == 0) /\ i1'=11, i3'=1+i3
  20: (-9+i1 == 0 /\ 2-i7 >= 0) /\ i1'=15, i3'=1+i3
  21: (-9+i1 == 0 /\ -3+i7 >= 0) /\ i1'=16, i3'=1+i3
  47: (-4+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=1+i4
  48: (-4+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=1+i4
  49: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=0
  50: (-3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=19, i3'=2+i3
  51: (3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0) /\ i1'=7, i3'=2+i3, i6'=1+i4, i7'=it2
  52: (i7 == 0 /\ -10+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  53: (-1-i7 >= 0 /\ -10+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  54: (-1+i7 >= 0 /\ -10+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  55: (-11+i1 == 0 /\ -1+i7 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  56: (-11+i1 == 0 /\ -i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
  57: (-11+i1 == 0 /\ -2+i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
  58: (-15+i1 == 0 /\ -2+i7 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  59: (-15+i1 == 0 /\ 1-i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
  60: (-15+i1 == 0 /\ -3+i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
  61: (-16+i1 == 0 /\ -3+i7 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  62: (-16+i1 == 0 /\ 2-i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
  63: (-16+i1 == 0 /\ -4+i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
  64: (0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3-2*i4+2*i5, i4'=i5
  65: (0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3-7*i4+7*i5, i4'=i5, i6'=i5, i7'=0
  66: (0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3-7*i4+7*i5, i4'=i5, i6'=i5, i7'=1

Dependency graph:
2 -> 47, 2 -> 48, 2 -> 51
8 -> 10, 8 -> 11
9 -> 20, 9 -> 21
10 -> 52, 10 -> 53
11 -> 55, 11 -> 57
20 -> 58, 20 -> 59
21 -> 61, 21 -> 63
47 -> 2, 47 -> 50, 47 -> 64, 47 -> 65, 47 -> 66
48 -> 2, 48 -> 50, 48 -> 64, 48 -> 65, 48 -> 66
49 -> 2, 49 -> 50, 49 -> 64, 49 -> 65, 49 -> 66
51 -> 8, 51 -> 9
52 -> 2, 52 -> 50, 52 -> 64, 52 -> 65, 52 -> 66
53 -> 2, 53 -> 50, 53 -> 64, 53 -> 65, 53 -> 66
54 -> 2, 54 -> 50, 54 -> 64, 54 -> 65, 54 -> 66
55 -> 2, 55 -> 50, 55 -> 64, 55 -> 65, 55 -> 66
56 -> 2, 56 -> 50, 56 -> 64, 56 -> 65, 56 -> 66
57 -> 2, 57 -> 50, 57 -> 64, 57 -> 65, 57 -> 66
58 -> 2, 58 -> 50, 58 -> 64, 58 -> 65, 58 -> 66
59 -> 2, 59 -> 50, 59 -> 64, 59 -> 65, 59 -> 66
60 -> 2, 60 -> 50, 60 -> 64, 60 -> 65, 60 -> 66
61 -> 2, 61 -> 50, 61 -> 64, 61 -> 65, 61 -> 66
62 -> 2, 62 -> 50, 62 -> 64, 62 -> 65, 62 -> 66
63 -> 2, 63 -> 50, 63 -> 64, 63 -> 65, 63 -> 66
64 -> 2, 64 -> 50, 64 -> 65, 64 -> 66
65 -> 2, 65 -> 50, 65 -> 64, 65 -> 66
66 -> 2, 66 -> 50, 66 -> 64, 66 -> 65

	Trace

	49[(-1+i1 == 0)]
	66[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T]}
	{66[T]}
	
Step with 50

	Trace

	49[(-1+i1 == 0)]
	66[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0)]
	50[(-3+i1 == 0 /\ i4-i5 >= 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T]}
	{2[T], 64[T], 66[T]}
	{}
	
Backtrack

	Trace

	49[(-1+i1 == 0)]
	66[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T]}
	{2[T], 50[T], 64[T], 66[T]}
	
Backtrack

	Trace

	49[(-1+i1 == 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T]}
	
Step with 2

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T]}
	{}
	
Step with 51

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	51[(3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T]}
	{}
	{}
	
Step with 9

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	51[(3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0)]
	9[(-7+i1 == 0 /\ -2+i7 >= 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T]}
	{}
	{}
	{}
	
Step with 20

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	51[(3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0)]
	9[(-7+i1 == 0 /\ -2+i7 >= 0)]
	20[(-9+i1 == 0 /\ 2-i7 >= 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T]}
	{}
	{}
	{}
	{}
	
Step with 58

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	51[(3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0)]
	9[(-7+i1 == 0 /\ -2+i7 >= 0)]
	20[(-9+i1 == 0 /\ 2-i7 >= 0)]
	58[(-15+i1 == 0 /\ -2+i7 == 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T]}
	{}
	{}
	{}
	{}
	{}
	
Accelerate

		Extracted Implied Equalities

		Original rule:
		(0 == 0 /\ -3+i1 == 0 /\ 3-it2 >= 0 /\ 2-it2 >= 0 /\ -2+it2 >= 0 /\ -2+it2 == 0 /\ -1-i4+i5 >= 0 /\ it2 >= 0) /\ i1'=3, i3'=7+i3, i4'=1+i4, i6'=1+i4, i7'=it2
		New rule:
		(0 == 0 /\ -3+i1 == 0 /\ 3-it2 >= 0 /\ 2-it2 >= 0 /\ -2+it2 >= 0 /\ -2+it2 == 0 /\ -1-i4+i5 >= 0 /\ it2 >= 0) /\ i1'=3, i3'=7+i3, i4'=1+i4, i6'=1+i4, i7'=it2
		
		Propagated Equalities

		Original rule:
		(0 == 0 /\ -3+i1 == 0 /\ 3-it2 >= 0 /\ 2-it2 >= 0 /\ -2+it2 >= 0 /\ -2+it2 == 0 /\ -1-i4+i5 >= 0 /\ it2 >= 0) /\ i1'=3, i3'=7+i3, i4'=1+i4, i6'=1+i4, i7'=it2
		New rule:
		(0 >= 0 /\ 0 == 0 /\ -3+i1 == 0 /\ 1 >= 0 /\ 2 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=7+i3, i4'=1+i4, i6'=1+i4, i7'=2
		
			propagated equality it2 = 2
			
		Simplified Guard

		Original rule:
		(0 >= 0 /\ 0 == 0 /\ -3+i1 == 0 /\ 1 >= 0 /\ 2 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=7+i3, i4'=1+i4, i6'=1+i4, i7'=2
		New rule:
		(-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=7+i3, i4'=1+i4, i6'=1+i4, i7'=2

	Loop Acceleration

	Original rule:
	(-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=7+i3, i4'=1+i4, i6'=1+i4, i7'=2
	New rule:
	(-3+i1 >= 0 /\ -it179-i4+i5 >= 0 /\ 3-i1 >= 0 /\ -1+it179 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=i1, i3'=i3+7*it179, i4'=it179+i4, i6'=it179+i4, i7'=2

		-3+i1 >= 0 [0]: unchanged
		
		3-i1 >= 0 [0]: unchanged
		
		-1-i4+i5 >= 0 [0]: montonic decrease yields (-it179-i4+i5 >= 0 /\ -1-i4+i5 >= 0)
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, 3-i1 >= 0 -> 3-i1 >= 0, -1-i4+i5 >= 0 -> (-it179-i4+i5 >= 0 /\ -1-i4+i5 >= 0)}

	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ -it179-i4+i5 >= 0 /\ 3-i1 >= 0 /\ -1+it179 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=i1, i3'=i3+7*it179, i4'=it179+i4, i6'=it179+i4, i7'=2
	New rule:
	(-3+i1 >= 0 /\ -it179-i4+i5 >= 0 /\ 3-i1 >= 0 /\ -1+it179 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3+7*it179, i4'=it179+i4, i6'=it179+i4, i7'=2
	
	Instantiation

	Original rule:
	(-3+i1 >= 0 /\ -it179-i4+i5 >= 0 /\ 3-i1 >= 0 /\ -1+it179 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3+7*it179, i4'=it179+i4, i6'=it179+i4, i7'=2
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3-7*i4+7*i5, i4'=i5, i6'=i5, i7'=2

Start location: evalrandom2dstart

Location map:
LoAT_sink -> 0
evalrandom2dstart -> 1
evalrandom2dentryin -> 2
evalrandom2dbb10in -> 3
evalrandom2dbbin -> 4
evalrandom2dreturnin -> 5
evalrandom2dbb2in -> 6
evalrandom2dNodeBlock9in -> 7
evalrandom2dNodeBlockin -> 8
evalrandom2dNodeBlock7in -> 9
evalrandom2dLeafBlockin -> 10
evalrandom2dLeafBlock1in -> 11
evalrandom2dbb3in -> 12
evalrandom2dNewDefaultin -> 13
evalrandom2dbb5in -> 14
evalrandom2dLeafBlock3in -> 15
evalrandom2dLeafBlock5in -> 16
evalrandom2dbb7in -> 17
evalrandom2dbb9in -> 18
evalrandom2dstop -> 19

Rules:
   2: (-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=4, i3'=1+i3
   8: (-7+i1 == 0 /\ 1-i7 >= 0) /\ i1'=8, i3'=1+i3
   9: (-7+i1 == 0 /\ -2+i7 >= 0) /\ i1'=9, i3'=1+i3
  10: (-i7 >= 0 /\ -8+i1 == 0) /\ i1'=10, i3'=1+i3
  11: (-1+i7 >= 0 /\ -8+i1 == 0) /\ i1'=11, i3'=1+i3
  20: (-9+i1 == 0 /\ 2-i7 >= 0) /\ i1'=15, i3'=1+i3
  21: (-9+i1 == 0 /\ -3+i7 >= 0) /\ i1'=16, i3'=1+i3
  47: (-4+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=1+i4
  48: (-4+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=1+i4
  49: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=0
  50: (-3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=19, i3'=2+i3
  51: (3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0) /\ i1'=7, i3'=2+i3, i6'=1+i4, i7'=it2
  52: (i7 == 0 /\ -10+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  53: (-1-i7 >= 0 /\ -10+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  54: (-1+i7 >= 0 /\ -10+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  55: (-11+i1 == 0 /\ -1+i7 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  56: (-11+i1 == 0 /\ -i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
  57: (-11+i1 == 0 /\ -2+i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
  58: (-15+i1 == 0 /\ -2+i7 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  59: (-15+i1 == 0 /\ 1-i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
  60: (-15+i1 == 0 /\ -3+i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
  61: (-16+i1 == 0 /\ -3+i7 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  62: (-16+i1 == 0 /\ 2-i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
  63: (-16+i1 == 0 /\ -4+i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
  64: (0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3-2*i4+2*i5, i4'=i5
  65: (0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3-7*i4+7*i5, i4'=i5, i6'=i5, i7'=0
  66: (0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3-7*i4+7*i5, i4'=i5, i6'=i5, i7'=1
  67: (0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3-7*i4+7*i5, i4'=i5, i6'=i5, i7'=2

Dependency graph:
2 -> 47, 2 -> 48, 2 -> 51
8 -> 10, 8 -> 11
9 -> 20, 9 -> 21
10 -> 52, 10 -> 53
11 -> 55, 11 -> 57
20 -> 58, 20 -> 59
21 -> 61, 21 -> 63
47 -> 2, 47 -> 50, 47 -> 64, 47 -> 65, 47 -> 66, 47 -> 67
48 -> 2, 48 -> 50, 48 -> 64, 48 -> 65, 48 -> 66, 48 -> 67
49 -> 2, 49 -> 50, 49 -> 64, 49 -> 65, 49 -> 66, 49 -> 67
51 -> 8, 51 -> 9
52 -> 2, 52 -> 50, 52 -> 64, 52 -> 65, 52 -> 66, 52 -> 67
53 -> 2, 53 -> 50, 53 -> 64, 53 -> 65, 53 -> 66, 53 -> 67
54 -> 2, 54 -> 50, 54 -> 64, 54 -> 65, 54 -> 66, 54 -> 67
55 -> 2, 55 -> 50, 55 -> 64, 55 -> 65, 55 -> 66, 55 -> 67
56 -> 2, 56 -> 50, 56 -> 64, 56 -> 65, 56 -> 66, 56 -> 67
57 -> 2, 57 -> 50, 57 -> 64, 57 -> 65, 57 -> 66, 57 -> 67
58 -> 2, 58 -> 50, 58 -> 64, 58 -> 65, 58 -> 66, 58 -> 67
59 -> 2, 59 -> 50, 59 -> 64, 59 -> 65, 59 -> 66, 59 -> 67
60 -> 2, 60 -> 50, 60 -> 64, 60 -> 65, 60 -> 66, 60 -> 67
61 -> 2, 61 -> 50, 61 -> 64, 61 -> 65, 61 -> 66, 61 -> 67
62 -> 2, 62 -> 50, 62 -> 64, 62 -> 65, 62 -> 66, 62 -> 67
63 -> 2, 63 -> 50, 63 -> 64, 63 -> 65, 63 -> 66, 63 -> 67
64 -> 2, 64 -> 50, 64 -> 65, 64 -> 66, 64 -> 67
65 -> 2, 65 -> 50, 65 -> 64, 65 -> 66, 65 -> 67
66 -> 2, 66 -> 50, 66 -> 64, 66 -> 65, 66 -> 67
67 -> 2, 67 -> 50, 67 -> 64, 67 -> 65, 67 -> 66

	Trace

	49[(-1+i1 == 0)]
	67[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T]}
	{67[T]}
	
Step with 50

	Trace

	49[(-1+i1 == 0)]
	67[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0)]
	50[(-3+i1 == 0 /\ i4-i5 >= 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T]}
	{65[T], 66[T], 67[T]}
	{}
	
Backtrack

	Trace

	49[(-1+i1 == 0)]
	67[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T]}
	{50[T], 65[T], 66[T], 67[T]}
	
Backtrack

	Trace

	49[(-1+i1 == 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T], 67[T]}
	
Step with 2

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T], 67[T]}
	{}
	
Step with 47

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	47[(-4+i1 == 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T], 67[T]}
	{}
	{}
	
Covered

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T], 67[T]}
	{47[T]}
	
Step with 48

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	48[(-4+i1 == 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T], 67[T]}
	{47[T]}
	{}
	
Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i4
		New rule:
		(-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i4

	Loop Acceleration

	Original rule:
	(-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i4
	New rule:
	(-it210-i4+i5 >= 0 /\ -3+i1 >= 0 /\ -1+it210 >= 0 /\ 3-i1 >= 0) /\ i1'=i1, i3'=i3+2*it210, i4'=it210+i4

		-3+i1 >= 0 [0]: unchanged
		
		3-i1 >= 0 [0]: unchanged
		
		-1-i4+i5 >= 0 [0]: montonic decrease yields -it210-i4+i5 >= 0
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, 3-i1 >= 0 -> 3-i1 >= 0, -1-i4+i5 >= 0 -> -it210-i4+i5 >= 0}

	Removed Trivial Updates

	Original rule:
	(-it210-i4+i5 >= 0 /\ -3+i1 >= 0 /\ -1+it210 >= 0 /\ 3-i1 >= 0) /\ i1'=i1, i3'=i3+2*it210, i4'=it210+i4
	New rule:
	(-it210-i4+i5 >= 0 /\ -3+i1 >= 0 /\ -1+it210 >= 0 /\ 3-i1 >= 0) /\ i3'=i3+2*it210, i4'=it210+i4
	
	Instantiation

	Original rule:
	(-it210-i4+i5 >= 0 /\ -3+i1 >= 0 /\ -1+it210 >= 0 /\ 3-i1 >= 0) /\ i3'=i3+2*it210, i4'=it210+i4
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3-2*i4+2*i5, i4'=i5

Start location: evalrandom2dstart

Location map:
LoAT_sink -> 0
evalrandom2dstart -> 1
evalrandom2dentryin -> 2
evalrandom2dbb10in -> 3
evalrandom2dbbin -> 4
evalrandom2dreturnin -> 5
evalrandom2dbb2in -> 6
evalrandom2dNodeBlock9in -> 7
evalrandom2dNodeBlockin -> 8
evalrandom2dNodeBlock7in -> 9
evalrandom2dLeafBlockin -> 10
evalrandom2dLeafBlock1in -> 11
evalrandom2dbb3in -> 12
evalrandom2dNewDefaultin -> 13
evalrandom2dbb5in -> 14
evalrandom2dLeafBlock3in -> 15
evalrandom2dLeafBlock5in -> 16
evalrandom2dbb7in -> 17
evalrandom2dbb9in -> 18
evalrandom2dstop -> 19

Rules:
   2: (-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=4, i3'=1+i3
   8: (-7+i1 == 0 /\ 1-i7 >= 0) /\ i1'=8, i3'=1+i3
   9: (-7+i1 == 0 /\ -2+i7 >= 0) /\ i1'=9, i3'=1+i3
  10: (-i7 >= 0 /\ -8+i1 == 0) /\ i1'=10, i3'=1+i3
  11: (-1+i7 >= 0 /\ -8+i1 == 0) /\ i1'=11, i3'=1+i3
  20: (-9+i1 == 0 /\ 2-i7 >= 0) /\ i1'=15, i3'=1+i3
  21: (-9+i1 == 0 /\ -3+i7 >= 0) /\ i1'=16, i3'=1+i3
  47: (-4+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=1+i4
  48: (-4+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=1+i4
  49: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=0
  50: (-3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=19, i3'=2+i3
  51: (3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0) /\ i1'=7, i3'=2+i3, i6'=1+i4, i7'=it2
  52: (i7 == 0 /\ -10+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  53: (-1-i7 >= 0 /\ -10+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  54: (-1+i7 >= 0 /\ -10+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  55: (-11+i1 == 0 /\ -1+i7 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  56: (-11+i1 == 0 /\ -i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
  57: (-11+i1 == 0 /\ -2+i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
  58: (-15+i1 == 0 /\ -2+i7 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  59: (-15+i1 == 0 /\ 1-i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
  60: (-15+i1 == 0 /\ -3+i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
  61: (-16+i1 == 0 /\ -3+i7 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  62: (-16+i1 == 0 /\ 2-i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
  63: (-16+i1 == 0 /\ -4+i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
  64: (0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3-2*i4+2*i5, i4'=i5
  65: (0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3-7*i4+7*i5, i4'=i5, i6'=i5, i7'=0
  66: (0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3-7*i4+7*i5, i4'=i5, i6'=i5, i7'=1
  67: (0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3-7*i4+7*i5, i4'=i5, i6'=i5, i7'=2
  68: (0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3-2*i4+2*i5, i4'=i5

Dependency graph:
2 -> 47, 2 -> 48, 2 -> 51
8 -> 10, 8 -> 11
9 -> 20, 9 -> 21
10 -> 52, 10 -> 53
11 -> 55, 11 -> 57
20 -> 58, 20 -> 59
21 -> 61, 21 -> 63
47 -> 2, 47 -> 50, 47 -> 64, 47 -> 65, 47 -> 66, 47 -> 67, 47 -> 68
48 -> 2, 48 -> 50, 48 -> 64, 48 -> 65, 48 -> 66, 48 -> 67, 48 -> 68
49 -> 2, 49 -> 50, 49 -> 64, 49 -> 65, 49 -> 66, 49 -> 67, 49 -> 68
51 -> 8, 51 -> 9
52 -> 2, 52 -> 50, 52 -> 64, 52 -> 65, 52 -> 66, 52 -> 67, 52 -> 68
53 -> 2, 53 -> 50, 53 -> 64, 53 -> 65, 53 -> 66, 53 -> 67, 53 -> 68
54 -> 2, 54 -> 50, 54 -> 64, 54 -> 65, 54 -> 66, 54 -> 67, 54 -> 68
55 -> 2, 55 -> 50, 55 -> 64, 55 -> 65, 55 -> 66, 55 -> 67, 55 -> 68
56 -> 2, 56 -> 50, 56 -> 64, 56 -> 65, 56 -> 66, 56 -> 67, 56 -> 68
57 -> 2, 57 -> 50, 57 -> 64, 57 -> 65, 57 -> 66, 57 -> 67, 57 -> 68
58 -> 2, 58 -> 50, 58 -> 64, 58 -> 65, 58 -> 66, 58 -> 67, 58 -> 68
59 -> 2, 59 -> 50, 59 -> 64, 59 -> 65, 59 -> 66, 59 -> 67, 59 -> 68
60 -> 2, 60 -> 50, 60 -> 64, 60 -> 65, 60 -> 66, 60 -> 67, 60 -> 68
61 -> 2, 61 -> 50, 61 -> 64, 61 -> 65, 61 -> 66, 61 -> 67, 61 -> 68
62 -> 2, 62 -> 50, 62 -> 64, 62 -> 65, 62 -> 66, 62 -> 67, 62 -> 68
63 -> 2, 63 -> 50, 63 -> 64, 63 -> 65, 63 -> 66, 63 -> 67, 63 -> 68
64 -> 2, 64 -> 50, 64 -> 65, 64 -> 66, 64 -> 67, 64 -> 68
65 -> 2, 65 -> 50, 65 -> 64, 65 -> 66, 65 -> 67, 65 -> 68
66 -> 2, 66 -> 50, 66 -> 64, 66 -> 65, 66 -> 67, 66 -> 68
67 -> 2, 67 -> 50, 67 -> 64, 67 -> 65, 67 -> 66, 67 -> 68
68 -> 2, 68 -> 50, 68 -> 64, 68 -> 65, 68 -> 66, 68 -> 67

	Trace

	49[(-1+i1 == 0)]
	68[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T], 67[T]}
	{68[T]}
	
Step with 50

	Trace

	49[(-1+i1 == 0)]
	68[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0)]
	50[(-3+i1 == 0 /\ i4-i5 >= 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T], 67[T]}
	{68[T]}
	{}
	
Backtrack

	Trace

	49[(-1+i1 == 0)]
	68[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T], 67[T]}
	{50[T], 68[T]}
	
Backtrack

	Trace

	49[(-1+i1 == 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T], 67[T], 68[T]}
	
Step with 2

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T], 67[T], 68[T]}
	{}
	
Step with 48

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	48[(-4+i1 == 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T], 67[T], 68[T]}
	{}
	{}
	
Covered

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T], 67[T], 68[T]}
	{48[T]}
	
Step with 47

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	47[(-4+i1 == 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T], 67[T], 68[T]}
	{48[T]}
	{}
	
Covered

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T], 67[T], 68[T]}
	{47[T], 48[T]}
	
Step with 51

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	51[(3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T], 67[T], 68[T]}
	{47[T], 48[T]}
	{}
	
Step with 9

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	51[(3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0)]
	9[(-7+i1 == 0 /\ -2+i7 >= 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T], 67[T], 68[T]}
	{47[T], 48[T]}
	{}
	{}
	
Step with 21

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	51[(3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0)]
	9[(-7+i1 == 0 /\ -2+i7 >= 0)]
	21[(-9+i1 == 0 /\ -3+i7 >= 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T], 67[T], 68[T]}
	{47[T], 48[T]}
	{}
	{}
	{}
	
Step with 61

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	51[(3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0)]
	9[(-7+i1 == 0 /\ -2+i7 >= 0)]
	21[(-9+i1 == 0 /\ -3+i7 >= 0)]
	61[(-16+i1 == 0 /\ -3+i7 == 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T], 67[T], 68[T]}
	{47[T], 48[T]}
	{}
	{}
	{63[T]}
	{}
	
Accelerate

		Extracted Implied Equalities

		Original rule:
		(0 == 0 /\ -3+i1 == 0 /\ 3-it2 >= 0 /\ -3+it2 >= 0 /\ -3+it2 == 0 /\ -2+it2 >= 0 /\ -1-i4+i5 >= 0 /\ it2 >= 0) /\ i1'=3, i3'=7+i3, i4'=1+i4, i6'=1+i4, i7'=it2
		New rule:
		(0 == 0 /\ -3+i1 == 0 /\ 3-it2 >= 0 /\ -3+it2 >= 0 /\ -3+it2 == 0 /\ -2+it2 >= 0 /\ -1-i4+i5 >= 0 /\ it2 >= 0) /\ i1'=3, i3'=7+i3, i4'=1+i4, i6'=1+i4, i7'=it2
		
		Propagated Equalities

		Original rule:
		(0 == 0 /\ -3+i1 == 0 /\ 3-it2 >= 0 /\ -3+it2 >= 0 /\ -3+it2 == 0 /\ -2+it2 >= 0 /\ -1-i4+i5 >= 0 /\ it2 >= 0) /\ i1'=3, i3'=7+i3, i4'=1+i4, i6'=1+i4, i7'=it2
		New rule:
		(0 >= 0 /\ 0 == 0 /\ -3+i1 == 0 /\ 1 >= 0 /\ 3 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=7+i3, i4'=1+i4, i6'=1+i4, i7'=3
		
			propagated equality it2 = 3
			
		Simplified Guard

		Original rule:
		(0 >= 0 /\ 0 == 0 /\ -3+i1 == 0 /\ 1 >= 0 /\ 3 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=7+i3, i4'=1+i4, i6'=1+i4, i7'=3
		New rule:
		(-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=7+i3, i4'=1+i4, i6'=1+i4, i7'=3

	Loop Acceleration

	Original rule:
	(-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=7+i3, i4'=1+i4, i6'=1+i4, i7'=3
	New rule:
	(-3+i1 >= 0 /\ -i4-it266+i5 >= 0 /\ 3-i1 >= 0 /\ -1+it266 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=i1, i3'=i3+7*it266, i4'=i4+it266, i6'=i4+it266, i7'=3

		-3+i1 >= 0 [0]: unchanged
		
		3-i1 >= 0 [0]: unchanged
		
		-1-i4+i5 >= 0 [0]: montonic decrease yields (-i4-it266+i5 >= 0 /\ -1-i4+i5 >= 0)
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, 3-i1 >= 0 -> 3-i1 >= 0, -1-i4+i5 >= 0 -> (-i4-it266+i5 >= 0 /\ -1-i4+i5 >= 0)}

	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ -i4-it266+i5 >= 0 /\ 3-i1 >= 0 /\ -1+it266 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=i1, i3'=i3+7*it266, i4'=i4+it266, i6'=i4+it266, i7'=3
	New rule:
	(-3+i1 >= 0 /\ -i4-it266+i5 >= 0 /\ 3-i1 >= 0 /\ -1+it266 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3+7*it266, i4'=i4+it266, i6'=i4+it266, i7'=3
	
	Instantiation

	Original rule:
	(-3+i1 >= 0 /\ -i4-it266+i5 >= 0 /\ 3-i1 >= 0 /\ -1+it266 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3+7*it266, i4'=i4+it266, i6'=i4+it266, i7'=3
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3-7*i4+7*i5, i4'=i5, i6'=i5, i7'=3

Start location: evalrandom2dstart

Location map:
LoAT_sink -> 0
evalrandom2dstart -> 1
evalrandom2dentryin -> 2
evalrandom2dbb10in -> 3
evalrandom2dbbin -> 4
evalrandom2dreturnin -> 5
evalrandom2dbb2in -> 6
evalrandom2dNodeBlock9in -> 7
evalrandom2dNodeBlockin -> 8
evalrandom2dNodeBlock7in -> 9
evalrandom2dLeafBlockin -> 10
evalrandom2dLeafBlock1in -> 11
evalrandom2dbb3in -> 12
evalrandom2dNewDefaultin -> 13
evalrandom2dbb5in -> 14
evalrandom2dLeafBlock3in -> 15
evalrandom2dLeafBlock5in -> 16
evalrandom2dbb7in -> 17
evalrandom2dbb9in -> 18
evalrandom2dstop -> 19

Rules:
   2: (-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=4, i3'=1+i3
   8: (-7+i1 == 0 /\ 1-i7 >= 0) /\ i1'=8, i3'=1+i3
   9: (-7+i1 == 0 /\ -2+i7 >= 0) /\ i1'=9, i3'=1+i3
  10: (-i7 >= 0 /\ -8+i1 == 0) /\ i1'=10, i3'=1+i3
  11: (-1+i7 >= 0 /\ -8+i1 == 0) /\ i1'=11, i3'=1+i3
  20: (-9+i1 == 0 /\ 2-i7 >= 0) /\ i1'=15, i3'=1+i3
  21: (-9+i1 == 0 /\ -3+i7 >= 0) /\ i1'=16, i3'=1+i3
  47: (-4+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=1+i4
  48: (-4+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=1+i4
  49: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=0
  50: (-3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=19, i3'=2+i3
  51: (3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0) /\ i1'=7, i3'=2+i3, i6'=1+i4, i7'=it2
  52: (i7 == 0 /\ -10+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  53: (-1-i7 >= 0 /\ -10+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  54: (-1+i7 >= 0 /\ -10+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  55: (-11+i1 == 0 /\ -1+i7 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  56: (-11+i1 == 0 /\ -i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
  57: (-11+i1 == 0 /\ -2+i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
  58: (-15+i1 == 0 /\ -2+i7 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  59: (-15+i1 == 0 /\ 1-i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
  60: (-15+i1 == 0 /\ -3+i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
  61: (-16+i1 == 0 /\ -3+i7 == 0) /\ i1'=3, i3'=2+i3, i4'=i6
  62: (-16+i1 == 0 /\ 2-i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
  63: (-16+i1 == 0 /\ -4+i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=i6
  64: (0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3-2*i4+2*i5, i4'=i5
  65: (0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3-7*i4+7*i5, i4'=i5, i6'=i5, i7'=0
  66: (0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3-7*i4+7*i5, i4'=i5, i6'=i5, i7'=1
  67: (0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3-7*i4+7*i5, i4'=i5, i6'=i5, i7'=2
  68: (0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3-2*i4+2*i5, i4'=i5
  69: (0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3-7*i4+7*i5, i4'=i5, i6'=i5, i7'=3

Dependency graph:
2 -> 47, 2 -> 48, 2 -> 51
8 -> 10, 8 -> 11
9 -> 20, 9 -> 21
10 -> 52, 10 -> 53
11 -> 55, 11 -> 57
20 -> 58, 20 -> 59
21 -> 61, 21 -> 63
47 -> 2, 47 -> 50, 47 -> 64, 47 -> 65, 47 -> 66, 47 -> 67, 47 -> 68, 47 -> 69
48 -> 2, 48 -> 50, 48 -> 64, 48 -> 65, 48 -> 66, 48 -> 67, 48 -> 68, 48 -> 69
49 -> 2, 49 -> 50, 49 -> 64, 49 -> 65, 49 -> 66, 49 -> 67, 49 -> 68, 49 -> 69
51 -> 8, 51 -> 9
52 -> 2, 52 -> 50, 52 -> 64, 52 -> 65, 52 -> 66, 52 -> 67, 52 -> 68, 52 -> 69
53 -> 2, 53 -> 50, 53 -> 64, 53 -> 65, 53 -> 66, 53 -> 67, 53 -> 68, 53 -> 69
54 -> 2, 54 -> 50, 54 -> 64, 54 -> 65, 54 -> 66, 54 -> 67, 54 -> 68, 54 -> 69
55 -> 2, 55 -> 50, 55 -> 64, 55 -> 65, 55 -> 66, 55 -> 67, 55 -> 68, 55 -> 69
56 -> 2, 56 -> 50, 56 -> 64, 56 -> 65, 56 -> 66, 56 -> 67, 56 -> 68, 56 -> 69
57 -> 2, 57 -> 50, 57 -> 64, 57 -> 65, 57 -> 66, 57 -> 67, 57 -> 68, 57 -> 69
58 -> 2, 58 -> 50, 58 -> 64, 58 -> 65, 58 -> 66, 58 -> 67, 58 -> 68, 58 -> 69
59 -> 2, 59 -> 50, 59 -> 64, 59 -> 65, 59 -> 66, 59 -> 67, 59 -> 68, 59 -> 69
60 -> 2, 60 -> 50, 60 -> 64, 60 -> 65, 60 -> 66, 60 -> 67, 60 -> 68, 60 -> 69
61 -> 2, 61 -> 50, 61 -> 64, 61 -> 65, 61 -> 66, 61 -> 67, 61 -> 68, 61 -> 69
62 -> 2, 62 -> 50, 62 -> 64, 62 -> 65, 62 -> 66, 62 -> 67, 62 -> 68, 62 -> 69
63 -> 2, 63 -> 50, 63 -> 64, 63 -> 65, 63 -> 66, 63 -> 67, 63 -> 68, 63 -> 69
64 -> 2, 64 -> 50, 64 -> 65, 64 -> 66, 64 -> 67, 64 -> 68, 64 -> 69
65 -> 2, 65 -> 50, 65 -> 64, 65 -> 66, 65 -> 67, 65 -> 68, 65 -> 69
66 -> 2, 66 -> 50, 66 -> 64, 66 -> 65, 66 -> 67, 66 -> 68, 66 -> 69
67 -> 2, 67 -> 50, 67 -> 64, 67 -> 65, 67 -> 66, 67 -> 68, 67 -> 69
68 -> 2, 68 -> 50, 68 -> 64, 68 -> 65, 68 -> 66, 68 -> 67, 68 -> 69
69 -> 2, 69 -> 50, 69 -> 64, 69 -> 65, 69 -> 66, 69 -> 67, 69 -> 68

	Trace

	49[(-1+i1 == 0)]
	69[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T], 67[T], 68[T]}
	{69[T]}
	
Step with 50

	Trace

	49[(-1+i1 == 0)]
	69[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0)]
	50[(-3+i1 == 0 /\ i4-i5 >= 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T], 67[T], 68[T]}
	{2[T], 64[T], 65[T], 66[T], 67[T], 68[T], 69[T]}
	{}
	
Backtrack

	Trace

	49[(-1+i1 == 0)]
	69[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T], 67[T], 68[T]}
	{2[T], 50[T], 64[T], 65[T], 66[T], 67[T], 68[T], 69[T]}
	
Backtrack

	Trace

	49[(-1+i1 == 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T], 67[T], 68[T], 69[T]}
	
Step with 2

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T], 67[T], 68[T], 69[T]}
	{}
	
Step with 48

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	48[(-4+i1 == 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T], 67[T], 68[T], 69[T]}
	{}
	{}
	
Covered

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T], 67[T], 68[T], 69[T]}
	{48[T]}
	
Step with 51

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	51[(3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T], 67[T], 68[T], 69[T]}
	{48[T]}
	{}
	
Step with 9

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	51[(3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0)]
	9[(-7+i1 == 0 /\ -2+i7 >= 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T], 67[T], 68[T], 69[T]}
	{48[T]}
	{}
	{}
	
Step with 20

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	51[(3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0)]
	9[(-7+i1 == 0 /\ -2+i7 >= 0)]
	20[(-9+i1 == 0 /\ 2-i7 >= 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T], 67[T], 68[T], 69[T]}
	{48[T]}
	{}
	{}
	{}
	
Step with 58

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	51[(3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0)]
	9[(-7+i1 == 0 /\ -2+i7 >= 0)]
	20[(-9+i1 == 0 /\ 2-i7 >= 0)]
	58[(-15+i1 == 0 /\ -2+i7 == 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T], 67[T], 68[T], 69[T]}
	{48[T]}
	{}
	{}
	{59[T]}
	{}
	
Covered

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	51[(3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0)]
	9[(-7+i1 == 0 /\ -2+i7 >= 0)]
	20[(-9+i1 == 0 /\ 2-i7 >= 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T], 67[T], 68[T], 69[T]}
	{48[T]}
	{}
	{}
	{58[T], 59[T]}
	
Backtrack

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	51[(3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0)]
	9[(-7+i1 == 0 /\ -2+i7 >= 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T], 67[T], 68[T], 69[T]}
	{48[T]}
	{}
	{20[T]}
	
Step with 21

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	51[(3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0)]
	9[(-7+i1 == 0 /\ -2+i7 >= 0)]
	21[(-9+i1 == 0 /\ -3+i7 >= 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T], 67[T], 68[T], 69[T]}
	{48[T]}
	{}
	{20[T]}
	{}
	
Step with 61

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	51[(3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0)]
	9[(-7+i1 == 0 /\ -2+i7 >= 0)]
	21[(-9+i1 == 0 /\ -3+i7 >= 0)]
	61[(-16+i1 == 0 /\ -3+i7 == 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T], 67[T], 68[T], 69[T]}
	{48[T]}
	{}
	{20[T]}
	{63[T]}
	{}
	
Covered

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	51[(3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0)]
	9[(-7+i1 == 0 /\ -2+i7 >= 0)]
	21[(-9+i1 == 0 /\ -3+i7 >= 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T], 67[T], 68[T], 69[T]}
	{48[T]}
	{}
	{20[T]}
	{61[T], 63[T]}
	
Backtrack

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	51[(3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0)]
	9[(-7+i1 == 0 /\ -2+i7 >= 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T], 67[T], 68[T], 69[T]}
	{48[T]}
	{}
	{20[T], 21[T]}
	
Backtrack

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	51[(3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T], 67[T], 68[T], 69[T]}
	{48[T]}
	{9[T]}
	
Step with 8

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	51[(3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0)]
	8[(-7+i1 == 0 /\ 1-i7 >= 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T], 67[T], 68[T], 69[T]}
	{48[T]}
	{9[T]}
	{}
	
Step with 10

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	51[(3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0)]
	8[(-7+i1 == 0 /\ 1-i7 >= 0)]
	10[(-i7 >= 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T], 67[T], 68[T], 69[T]}
	{48[T]}
	{9[T]}
	{}
	{}
	
Step with 52

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	51[(3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0)]
	8[(-7+i1 == 0 /\ 1-i7 >= 0)]
	10[(-i7 >= 0 /\ -8+i1 == 0)]
	52[(i7 == 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T], 67[T], 68[T], 69[T]}
	{48[T]}
	{9[T]}
	{}
	{53[T]}
	{}
	
Covered

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	51[(3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0)]
	8[(-7+i1 == 0 /\ 1-i7 >= 0)]
	10[(-i7 >= 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T], 67[T], 68[T], 69[T]}
	{48[T]}
	{9[T]}
	{}
	{52[T], 53[T]}
	
Backtrack

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	51[(3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0)]
	8[(-7+i1 == 0 /\ 1-i7 >= 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T], 67[T], 68[T], 69[T]}
	{48[T]}
	{9[T]}
	{10[T]}
	
Step with 11

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	51[(3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0)]
	8[(-7+i1 == 0 /\ 1-i7 >= 0)]
	11[(-1+i7 >= 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T], 67[T], 68[T], 69[T]}
	{48[T]}
	{9[T]}
	{10[T]}
	{}
	
Step with 55

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	51[(3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0)]
	8[(-7+i1 == 0 /\ 1-i7 >= 0)]
	11[(-1+i7 >= 0 /\ -8+i1 == 0)]
	55[(-11+i1 == 0 /\ -1+i7 == 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T], 67[T], 68[T], 69[T]}
	{48[T]}
	{9[T]}
	{10[T]}
	{}
	{}
	
Covered

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	51[(3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0)]
	8[(-7+i1 == 0 /\ 1-i7 >= 0)]
	11[(-1+i7 >= 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T], 67[T], 68[T], 69[T]}
	{48[T]}
	{9[T]}
	{10[T]}
	{55[T]}
	
Backtrack

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	51[(3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0)]
	8[(-7+i1 == 0 /\ 1-i7 >= 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T], 67[T], 68[T], 69[T]}
	{48[T]}
	{9[T]}
	{10[T], 11[T]}
	
Backtrack

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	51[(3-it2 >= 0 /\ -4+i1 == 0 /\ it2 >= 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T], 67[T], 68[T], 69[T]}
	{48[T]}
	{8[T], 9[T]}
	
Backtrack

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T], 67[T], 68[T], 69[T]}
	{48[T], 51[T]}
	
Step with 47

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	47[(-4+i1 == 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T], 67[T], 68[T], 69[T]}
	{48[T], 51[T]}
	{}
	
Covered

	Trace

	49[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{50[T], 64[T], 65[T], 66[T], 67[T], 68[T], 69[T]}
	{47[T], 48[T], 51[T]}
	
Backtrack

	Trace

	49[(-1+i1 == 0)]
	
	Blocked

	{}
	{2[T], 50[T], 64[T], 65[T], 66[T], 67[T], 68[T], 69[T]}
	
Backtrack

	Trace

	Blocked

	{49[T]}
	
Accept

Poly(n^1)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃
  Temp_Vars:  E
  Locations:  l0, l1, l10, l11, l12, l13, l14, l15, l16, l17, l18, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃) → l17(X₀, X₁, X₂, X₃)
  t₃₀: l1(X₀, X₁, X₂, X₃) → l12(X₂, X₁, X₂, X₃)
  t₁₅: l10(X₀, X₁, X₂, X₃) → l12(X₂, X₁, X₂, X₃)
  t₁₃: l11(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, X₃) :|: 1+X₃ ≤ 0
  t₁₄: l11(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, X₃) :|: 1 ≤ X₃
  t₁₂: l11(X₀, X₁, X₂, X₃) → l10(X₀, X₁, X₂, X₃) :|: 0 ≤ X₃ ∧ X₃ ≤ 0
  t₂: l12(X₀, X₁, X₂, X₃) → l15(X₀, X₁, X₂, X₃) :|: 1+X₀ ≤ X₁
  t₃: l12(X₀, X₁, X₂, X₃) → l16(X₀, X₁, X₂, X₃) :|: X₁ ≤ X₀
  t₈: l13(X₀, X₁, X₂, X₃) → l3(X₀, X₁, X₂, X₃) :|: X₃ ≤ 1
  t₉: l13(X₀, X₁, X₂, X₃) → l6(X₀, X₁, X₂, X₃) :|: 2 ≤ X₃
  t₇: l14(X₀, X₁, X₂, X₃) → l13(X₀, X₁, X₂, X₃)
  t₅: l15(X₀, X₁, X₂, X₃) → l12(1+X₀, X₁, X₂, X₃) :|: 1+E ≤ 0
  t₆: l15(X₀, X₁, X₂, X₃) → l12(1+X₀, X₁, X₂, X₃) :|: 4 ≤ E
  t₄: l15(X₀, X₁, X₂, X₃) → l14(X₀, X₁, 1+X₀, E) :|: E ≤ 3 ∧ 0 ≤ E
  t₃₁: l16(X₀, X₁, X₂, X₃) → l18(X₀, X₁, X₂, X₃)
  t₁: l17(X₀, X₁, X₂, X₃) → l12(0, X₁, X₂, X₃)
  t₁₉: l2(X₀, X₁, X₂, X₃) → l12(X₂, X₁, X₂, X₃)
  t₁₀: l3(X₀, X₁, X₂, X₃) → l11(X₀, X₁, X₂, X₃) :|: X₃ ≤ 0
  t₁₁: l3(X₀, X₁, X₂, X₃) → l4(X₀, X₁, X₂, X₃) :|: 1 ≤ X₃
  t₁₇: l4(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, X₃) :|: X₃ ≤ 0
  t₁₈: l4(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, X₃) :|: 2 ≤ X₃
  t₁₆: l4(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, X₃) :|: X₃ ≤ 1 ∧ 1 ≤ X₃
  t₂₅: l5(X₀, X₁, X₂, X₃) → l12(X₂, X₁, X₂, X₃)
  t₂₀: l6(X₀, X₁, X₂, X₃) → l7(X₀, X₁, X₂, X₃) :|: X₃ ≤ 2
  t₂₁: l6(X₀, X₁, X₂, X₃) → l9(X₀, X₁, X₂, X₃) :|: 3 ≤ X₃
  t₂₃: l7(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, X₃) :|: X₃ ≤ 1
  t₂₄: l7(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, X₃) :|: 3 ≤ X₃
  t₂₂: l7(X₀, X₁, X₂, X₃) → l5(X₀, X₁, X₂, X₃) :|: X₃ ≤ 2 ∧ 2 ≤ X₃
  t₂₉: l8(X₀, X₁, X₂, X₃) → l12(X₂, X₁, X₂, X₃)
  t₂₇: l9(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, X₃) :|: X₃ ≤ 2
  t₂₈: l9(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, X₃) :|: 4 ≤ X₃
  t₂₆: l9(X₀, X₁, X₂, X₃) → l8(X₀, X₁, X₂, X₃) :|: X₃ ≤ 3 ∧ 3 ≤ X₃


Preprocessing
  Cut unsatisfiable transition [t₁₄: l11→l1; t₁₇: l4→l1; t₂₄: l7→l1; t₂₇: l9→l1]


  Found invariant X₃ ≤ 3 ∧ X₃ ≤ 2+X₂ ∧ X₃ ≤ 2+X₁ ∧ X₃ ≤ 3+X₀ ∧ 2 ≤ X₃ ∧ 3 ≤ X₂+X₃ ∧ 3 ≤ X₁+X₃ ∧ 2 ≤ X₀+X₃ ∧ X₂ ≤ X₁ ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l6


  Found invariant 0 ≤ X₀ for location l12


  Found invariant 1 ≤ 0 for location l1


  Found invariant X₃ ≤ 0 ∧ 1+X₃ ≤ X₂ ∧ 1+X₃ ≤ X₁ ∧ X₃ ≤ X₀ ∧ 0 ≤ X₃ ∧ 1 ≤ X₂+X₃ ∧ 1 ≤ X₁+X₃ ∧ 0 ≤ X₀+X₃ ∧ X₂ ≤ X₁ ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l10


  Found invariant X₁ ≤ X₀ ∧ 0 ≤ X₀ for location l18


  Found invariant X₃ ≤ 1 ∧ X₃ ≤ X₂ ∧ X₃ ≤ X₁ ∧ X₃ ≤ 1+X₀ ∧ 1 ≤ X₃ ∧ 2 ≤ X₂+X₃ ∧ 2 ≤ X₁+X₃ ∧ 1 ≤ X₀+X₃ ∧ X₂ ≤ X₁ ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l4


  Found invariant X₃ ≤ 1 ∧ X₃ ≤ X₂ ∧ X₃ ≤ X₁ ∧ X₃ ≤ 1+X₀ ∧ 0 ≤ X₃ ∧ 1 ≤ X₂+X₃ ∧ 1 ≤ X₁+X₃ ∧ 0 ≤ X₀+X₃ ∧ X₂ ≤ X₁ ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l3


  Found invariant X₃ ≤ 3 ∧ X₃ ≤ 2+X₂ ∧ X₃ ≤ 2+X₁ ∧ X₃ ≤ 3+X₀ ∧ 0 ≤ X₃ ∧ 1 ≤ X₂+X₃ ∧ 1 ≤ X₁+X₃ ∧ 0 ≤ X₀+X₃ ∧ X₂ ≤ X₁ ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l14


  Found invariant X₃ ≤ 0 ∧ 1+X₃ ≤ X₂ ∧ 1+X₃ ≤ X₁ ∧ X₃ ≤ X₀ ∧ 0 ≤ X₃ ∧ 1 ≤ X₂+X₃ ∧ 1 ≤ X₁+X₃ ∧ 0 ≤ X₀+X₃ ∧ X₂ ≤ X₁ ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l11


  Found invariant X₃ ≤ 1 ∧ X₃ ≤ X₂ ∧ X₃ ≤ X₁ ∧ X₃ ≤ 1+X₀ ∧ 1 ≤ X₃ ∧ 2 ≤ X₂+X₃ ∧ 2 ≤ X₁+X₃ ∧ 1 ≤ X₀+X₃ ∧ X₂ ≤ X₁ ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l2


  Found invariant 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l15


  Found invariant X₃ ≤ 2 ∧ X₃ ≤ 1+X₂ ∧ X₃ ≤ 1+X₁ ∧ X₃ ≤ 2+X₀ ∧ 2 ≤ X₃ ∧ 3 ≤ X₂+X₃ ∧ 3 ≤ X₁+X₃ ∧ 2 ≤ X₀+X₃ ∧ X₂ ≤ X₁ ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l7


  Found invariant X₃ ≤ 2 ∧ X₃ ≤ 1+X₂ ∧ X₃ ≤ 1+X₁ ∧ X₃ ≤ 2+X₀ ∧ 2 ≤ X₃ ∧ 3 ≤ X₂+X₃ ∧ 3 ≤ X₁+X₃ ∧ 2 ≤ X₀+X₃ ∧ X₂ ≤ X₁ ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l5


  Found invariant X₃ ≤ 3 ∧ X₃ ≤ 2+X₂ ∧ X₃ ≤ 2+X₁ ∧ X₃ ≤ 3+X₀ ∧ 0 ≤ X₃ ∧ 1 ≤ X₂+X₃ ∧ 1 ≤ X₁+X₃ ∧ 0 ≤ X₀+X₃ ∧ X₂ ≤ X₁ ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l13


  Found invariant X₃ ≤ 3 ∧ X₃ ≤ 2+X₂ ∧ X₃ ≤ 2+X₁ ∧ X₃ ≤ 3+X₀ ∧ 3 ≤ X₃ ∧ 4 ≤ X₂+X₃ ∧ 4 ≤ X₁+X₃ ∧ 3 ≤ X₀+X₃ ∧ X₂ ≤ X₁ ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l8


  Found invariant X₁ ≤ X₀ ∧ 0 ≤ X₀ for location l16


  Found invariant X₃ ≤ 3 ∧ X₃ ≤ 2+X₂ ∧ X₃ ≤ 2+X₁ ∧ X₃ ≤ 3+X₀ ∧ 3 ≤ X₃ ∧ 4 ≤ X₂+X₃ ∧ 4 ≤ X₁+X₃ ∧ 3 ≤ X₀+X₃ ∧ X₂ ≤ X₁ ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l9


  Cut unsatisfiable transition [t₁₃: l11→l1; t₁₈: l4→l1; t₂₃: l7→l1; t₂₈: l9→l1; t₃₀: l1→l12]


  Cut unreachable locations [l1] from the program graph


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃
  Temp_Vars:  E
  Locations:  l0, l10, l11, l12, l13, l14, l15, l16, l17, l18, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃) → l17(X₀, X₁, X₂, X₃)
  t₁₅: l10(X₀, X₁, X₂, X₃) → l12(X₂, X₁, X₂, X₃) :|: X₂ ≤ 1+X₀ ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₁ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 1+X₃ ≤ X₁ ∧ 1 ≤ X₂ ∧ 1 ≤ X₂+X₃ ∧ 1+X₃ ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₃ ∧ X₃ ≤ X₀ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₃ ∧ X₃ ≤ 0
  t₁₂: l11(X₀, X₁, X₂, X₃) → l10(X₀, X₁, X₂, X₃) :|: 0 ≤ X₃ ∧ X₃ ≤ 0 ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₁ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 1+X₃ ≤ X₁ ∧ 1 ≤ X₂ ∧ 1 ≤ X₂+X₃ ∧ 1+X₃ ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₃ ∧ X₃ ≤ X₀ ∧ X₂ ≤ X₁
  t₂: l12(X₀, X₁, X₂, X₃) → l15(X₀, X₁, X₂, X₃) :|: 1+X₀ ≤ X₁ ∧ 0 ≤ X₀
  t₃: l12(X₀, X₁, X₂, X₃) → l16(X₀, X₁, X₂, X₃) :|: X₁ ≤ X₀ ∧ 0 ≤ X₀
  t₈: l13(X₀, X₁, X₂, X₃) → l3(X₀, X₁, X₂, X₃) :|: X₃ ≤ 1 ∧ X₃ ≤ 3+X₀ ∧ X₃ ≤ 3 ∧ X₃ ≤ 2+X₁ ∧ X₃ ≤ 2+X₂ ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₁ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 1 ≤ X₂ ∧ 1 ≤ X₂+X₃ ∧ 2 ≤ X₁+X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₃ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₃
  t₉: l13(X₀, X₁, X₂, X₃) → l6(X₀, X₁, X₂, X₃) :|: 2 ≤ X₃ ∧ X₃ ≤ 3+X₀ ∧ X₃ ≤ 3 ∧ X₃ ≤ 2+X₁ ∧ X₃ ≤ 2+X₂ ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₁ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 1 ≤ X₂ ∧ 1 ≤ X₂+X₃ ∧ 2 ≤ X₁+X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₃ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₃
  t₇: l14(X₀, X₁, X₂, X₃) → l13(X₀, X₁, X₂, X₃) :|: X₃ ≤ 3+X₀ ∧ X₃ ≤ 3 ∧ X₃ ≤ 2+X₁ ∧ X₃ ≤ 2+X₂ ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₁ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 1 ≤ X₂ ∧ 1 ≤ X₂+X₃ ∧ 2 ≤ X₁+X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₃ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₃
  t₅: l15(X₀, X₁, X₂, X₃) → l12(1+X₀, X₁, X₂, X₃) :|: 1+E ≤ 0 ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 0 ≤ X₀
  t₆: l15(X₀, X₁, X₂, X₃) → l12(1+X₀, X₁, X₂, X₃) :|: 4 ≤ E ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 0 ≤ X₀
  t₄: l15(X₀, X₁, X₂, X₃) → l14(X₀, X₁, 1+X₀, E) :|: E ≤ 3 ∧ 0 ≤ E ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 0 ≤ X₀
  t₃₁: l16(X₀, X₁, X₂, X₃) → l18(X₀, X₁, X₂, X₃) :|: 0 ≤ X₀ ∧ X₁ ≤ X₀
  t₁: l17(X₀, X₁, X₂, X₃) → l12(0, X₁, X₂, X₃)
  t₁₉: l2(X₀, X₁, X₂, X₃) → l12(X₂, X₁, X₂, X₃) :|: X₂ ≤ 1+X₀ ∧ X₃ ≤ 1+X₀ ∧ X₃ ≤ 1 ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₀+X₂ ∧ 1 ≤ X₀+X₃ ∧ 1+X₀ ≤ X₁ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 1 ≤ X₃ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₁+X₃ ∧ 2 ≤ X₂+X₃ ∧ 0 ≤ X₀ ∧ X₂ ≤ X₁ ∧ X₃ ≤ X₁ ∧ X₃ ≤ X₂
  t₁₀: l3(X₀, X₁, X₂, X₃) → l11(X₀, X₁, X₂, X₃) :|: X₃ ≤ 0 ∧ X₂ ≤ 1+X₀ ∧ X₃ ≤ 1+X₀ ∧ X₃ ≤ 1 ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₁ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 1 ≤ X₂ ∧ 1 ≤ X₂+X₃ ∧ 2 ≤ X₁+X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₃ ∧ X₂ ≤ X₁ ∧ X₃ ≤ X₁ ∧ X₃ ≤ X₂ ∧ 0 ≤ X₃
  t₁₁: l3(X₀, X₁, X₂, X₃) → l4(X₀, X₁, X₂, X₃) :|: 1 ≤ X₃ ∧ X₂ ≤ 1+X₀ ∧ X₃ ≤ 1+X₀ ∧ X₃ ≤ 1 ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₁ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 1 ≤ X₂ ∧ 1 ≤ X₂+X₃ ∧ 2 ≤ X₁+X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₃ ∧ X₂ ≤ X₁ ∧ X₃ ≤ X₁ ∧ X₃ ≤ X₂ ∧ 0 ≤ X₃
  t₁₆: l4(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, X₃) :|: X₃ ≤ 1 ∧ 1 ≤ X₃ ∧ X₂ ≤ 1+X₀ ∧ X₃ ≤ 1+X₀ ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₀+X₂ ∧ 1 ≤ X₀+X₃ ∧ 1+X₀ ≤ X₁ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₁+X₃ ∧ 2 ≤ X₂+X₃ ∧ 0 ≤ X₀ ∧ X₂ ≤ X₁ ∧ X₃ ≤ X₁ ∧ X₃ ≤ X₂
  t₂₅: l5(X₀, X₁, X₂, X₃) → l12(X₂, X₁, X₂, X₃) :|: X₃ ≤ 2+X₀ ∧ X₃ ≤ 2 ∧ X₂ ≤ 1+X₀ ∧ X₃ ≤ 1+X₁ ∧ X₃ ≤ 1+X₂ ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₁ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀+X₃ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₃ ∧ 3 ≤ X₁+X₃ ∧ 3 ≤ X₂+X₃ ∧ 0 ≤ X₀ ∧ X₂ ≤ X₁
  t₂₀: l6(X₀, X₁, X₂, X₃) → l7(X₀, X₁, X₂, X₃) :|: X₃ ≤ 2 ∧ X₃ ≤ 3+X₀ ∧ X₃ ≤ 3 ∧ X₃ ≤ 2+X₁ ∧ X₃ ≤ 2+X₂ ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₁ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀+X₃ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₃ ∧ 3 ≤ X₁+X₃ ∧ 3 ≤ X₂+X₃ ∧ 0 ≤ X₀ ∧ X₂ ≤ X₁
  t₂₁: l6(X₀, X₁, X₂, X₃) → l9(X₀, X₁, X₂, X₃) :|: 3 ≤ X₃ ∧ X₃ ≤ 3+X₀ ∧ X₃ ≤ 3 ∧ X₃ ≤ 2+X₁ ∧ X₃ ≤ 2+X₂ ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₁ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀+X₃ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₃ ∧ 3 ≤ X₁+X₃ ∧ 3 ≤ X₂+X₃ ∧ 0 ≤ X₀ ∧ X₂ ≤ X₁
  t₂₂: l7(X₀, X₁, X₂, X₃) → l5(X₀, X₁, X₂, X₃) :|: X₃ ≤ 2 ∧ 2 ≤ X₃ ∧ X₃ ≤ 2+X₀ ∧ X₂ ≤ 1+X₀ ∧ X₃ ≤ 1+X₁ ∧ X₃ ≤ 1+X₂ ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₁ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀+X₃ ∧ 2 ≤ X₁+X₂ ∧ 3 ≤ X₁+X₃ ∧ 3 ≤ X₂+X₃ ∧ 0 ≤ X₀ ∧ X₂ ≤ X₁
  t₂₉: l8(X₀, X₁, X₂, X₃) → l12(X₂, X₁, X₂, X₃) :|: X₃ ≤ 3+X₀ ∧ X₃ ≤ 3 ∧ X₃ ≤ 2+X₁ ∧ X₃ ≤ 2+X₂ ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₁ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 3 ≤ X₀+X₃ ∧ 3 ≤ X₃ ∧ 4 ≤ X₁+X₃ ∧ 4 ≤ X₂+X₃ ∧ 0 ≤ X₀ ∧ X₂ ≤ X₁
  t₂₆: l9(X₀, X₁, X₂, X₃) → l8(X₀, X₁, X₂, X₃) :|: X₃ ≤ 3 ∧ 3 ≤ X₃ ∧ X₃ ≤ 3+X₀ ∧ X₃ ≤ 2+X₁ ∧ X₃ ≤ 2+X₂ ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₁ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 3 ≤ X₀+X₃ ∧ 4 ≤ X₁+X₃ ∧ 4 ≤ X₂+X₃ ∧ 0 ≤ X₀ ∧ X₂ ≤ X₁


MPRF for transition t₂: l12(X₀, X₁, X₂, X₃) → l15(X₀, X₁, X₂, X₃) :|: 1+X₀ ≤ X₁ ∧ 0 ≤ X₀ of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l10: [X₁-1-X₀]
    • l11: [X₁-1-X₀]
    • l12: [X₁-X₀]
    • l13: [X₁-1-X₀]
    • l14: [X₁-1-X₀]
    • l15: [X₁-1-X₀]
    • l2: [X₁-X₂]
    • l3: [X₁-1-X₀]
    • l4: [X₁-1-X₀]
    • l5: [X₁-1-X₀]
    • l6: [X₁-1-X₀]
    • l7: [X₁-1-X₀]
    • l8: [X₁-X₂]
    • l9: [X₁-X₂]




MPRF for transition t₄: l15(X₀, X₁, X₂, X₃) → l14(X₀, X₁, 1+X₀, E) :|: E ≤ 3 ∧ 0 ≤ E ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 0 ≤ X₀ of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l10: [X₁-X₂]
    • l11: [X₁-X₂]
    • l12: [X₁-X₀]
    • l13: [X₁-1-X₀]
    • l14: [X₁-1-X₀]
    • l15: [X₁-X₀]
    • l2: [X₁-1-X₀]
    • l3: [X₁-1-X₀]
    • l4: [X₁-1-X₀]
    • l5: [X₁-1-X₀]
    • l6: [X₁-1-X₀]
    • l7: [X₁-1-X₀]
    • l8: [X₁-1-X₀]
    • l9: [X₁-1-X₀]




MPRF for transition t₅: l15(X₀, X₁, X₂, X₃) → l12(1+X₀, X₁, X₂, X₃) :|: 1+E ≤ 0 ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 0 ≤ X₀ of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l10: [X₁-X₂]
    • l11: [X₁-X₀]
    • l12: [X₁-X₀]
    • l13: [X₁-X₀]
    • l14: [X₁-X₀]
    • l15: [X₁-X₀]
    • l2: [X₁-X₀]
    • l3: [X₁-X₀]
    • l4: [X₁-X₀]
    • l5: [X₁-X₀]
    • l6: [X₁-X₀]
    • l7: [X₁-X₀]
    • l8: [X₁-X₀]
    • l9: [X₁-X₀]




MPRF for transition t₆: l15(X₀, X₁, X₂, X₃) → l12(1+X₀, X₁, X₂, X₃) :|: 4 ≤ E ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 0 ≤ X₀ of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l10: [X₁-X₂]
    • l11: [X₁-X₂]
    • l12: [X₁-X₀]
    • l13: [X₁-X₂]
    • l14: [X₁-X₀]
    • l15: [X₁-X₀]
    • l2: [X₁-X₂]
    • l3: [X₁-X₂]
    • l4: [X₁-X₂]
    • l5: [X₁-X₂]
    • l6: [X₁-X₂]
    • l7: [X₁-X₂]
    • l8: [X₁-X₂]
    • l9: [X₁-X₂]




MPRF for transition t₇: l14(X₀, X₁, X₂, X₃) → l13(X₀, X₁, X₂, X₃) :|: X₃ ≤ 3+X₀ ∧ X₃ ≤ 3 ∧ X₃ ≤ 2+X₁ ∧ X₃ ≤ 2+X₂ ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₁ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 1 ≤ X₂ ∧ 1 ≤ X₂+X₃ ∧ 2 ≤ X₁+X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₃ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₃ of depth 1:
  new bound:
    X₁+1 {O(n)}

  MPRF:
    • l10: [X₁-X₀]
    • l11: [X₁-X₀]
    • l12: [1+X₁-X₀]
    • l13: [X₁-X₀]
    • l14: [1+X₁-X₀]
    • l15: [1+X₁-X₀]
    • l2: [X₁-X₀]
    • l3: [X₁-X₀]
    • l4: [X₁-X₀]
    • l5: [1+X₁-X₂]
    • l6: [1+X₁-X₂]
    • l7: [X₁+X₃-1-X₂]
    • l8: [1+X₁-X₂]
    • l9: [1+X₁-X₂]




MPRF for transition t₈: l13(X₀, X₁, X₂, X₃) → l3(X₀, X₁, X₂, X₃) :|: X₃ ≤ 1 ∧ X₃ ≤ 3+X₀ ∧ X₃ ≤ 3 ∧ X₃ ≤ 2+X₁ ∧ X₃ ≤ 2+X₂ ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₁ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 1 ≤ X₂ ∧ 1 ≤ X₂+X₃ ∧ 2 ≤ X₁+X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₃ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₃ of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l10: [X₁-X₂]
    • l11: [X₁-X₂]
    • l12: [X₁-X₀]
    • l13: [1+X₁-X₂]
    • l14: [X₁-X₀]
    • l15: [X₁-X₀]
    • l2: [X₁-X₂]
    • l3: [X₁-X₂]
    • l4: [X₁-X₂]
    • l5: [X₁-X₂]
    • l6: [X₁-X₂]
    • l7: [X₁-X₂]
    • l8: [X₁-X₂]
    • l9: [X₁-X₂]




MPRF for transition t₉: l13(X₀, X₁, X₂, X₃) → l6(X₀, X₁, X₂, X₃) :|: 2 ≤ X₃ ∧ X₃ ≤ 3+X₀ ∧ X₃ ≤ 3 ∧ X₃ ≤ 2+X₁ ∧ X₃ ≤ 2+X₂ ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₁ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 1 ≤ X₂ ∧ 1 ≤ X₂+X₃ ∧ 2 ≤ X₁+X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₃ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₃ of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l10: [X₁-X₀]
    • l11: [X₁-X₀]
    • l12: [X₁-X₀]
    • l13: [1+X₁-X₂]
    • l14: [X₁-X₀]
    • l15: [X₁-X₀]
    • l2: [1+X₁-X₂]
    • l3: [X₁-X₀]
    • l4: [X₁-X₀]
    • l5: [X₁-X₂]
    • l6: [X₁-1-X₀]
    • l7: [X₁-X₂]
    • l8: [X₁-1-X₀]
    • l9: [X₁-1-X₀]




MPRF for transition t₁₀: l3(X₀, X₁, X₂, X₃) → l11(X₀, X₁, X₂, X₃) :|: X₃ ≤ 0 ∧ X₂ ≤ 1+X₀ ∧ X₃ ≤ 1+X₀ ∧ X₃ ≤ 1 ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₁ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 1 ≤ X₂ ∧ 1 ≤ X₂+X₃ ∧ 2 ≤ X₁+X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₃ ∧ X₂ ≤ X₁ ∧ X₃ ≤ X₁ ∧ X₃ ≤ X₂ ∧ 0 ≤ X₃ of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l10: [X₁-X₂]
    • l11: [X₁-X₂]
    • l12: [X₁-X₀]
    • l13: [1+X₁-X₂]
    • l14: [X₁-X₀]
    • l15: [X₁-X₀]
    • l2: [X₁-X₂]
    • l3: [1+X₁-X₂]
    • l4: [X₁-X₂]
    • l5: [X₁-X₂]
    • l6: [X₁-X₂]
    • l7: [X₁-X₂]
    • l8: [X₁-X₂]
    • l9: [X₁-X₂]




MPRF for transition t₁₁: l3(X₀, X₁, X₂, X₃) → l4(X₀, X₁, X₂, X₃) :|: 1 ≤ X₃ ∧ X₂ ≤ 1+X₀ ∧ X₃ ≤ 1+X₀ ∧ X₃ ≤ 1 ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₁ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 1 ≤ X₂ ∧ 1 ≤ X₂+X₃ ∧ 2 ≤ X₁+X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₃ ∧ X₂ ≤ X₁ ∧ X₃ ≤ X₁ ∧ X₃ ≤ X₂ ∧ 0 ≤ X₃ of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l10: [1+X₁-X₂]
    • l11: [1+X₁-X₂]
    • l12: [X₁-X₀]
    • l13: [1+X₁-X₂]
    • l14: [X₁-X₀]
    • l15: [X₁-X₀]
    • l2: [X₁-X₂]
    • l3: [1+X₁-X₂]
    • l4: [X₁-1-X₀]
    • l5: [X₁-X₀]
    • l6: [X₁-X₀]
    • l7: [X₁-X₀]
    • l8: [X₁-X₀]
    • l9: [X₁-X₀]




MPRF for transition t₁₂: l11(X₀, X₁, X₂, X₃) → l10(X₀, X₁, X₂, X₃) :|: 0 ≤ X₃ ∧ X₃ ≤ 0 ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₁ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 1+X₃ ≤ X₁ ∧ 1 ≤ X₂ ∧ 1 ≤ X₂+X₃ ∧ 1+X₃ ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₃ ∧ X₃ ≤ X₀ ∧ X₂ ≤ X₁ of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l10: [X₁-X₂]
    • l11: [1+X₁-X₂]
    • l12: [X₁-X₀]
    • l13: [1+X₁-X₂]
    • l14: [1+X₁-X₂]
    • l15: [X₁-X₀]
    • l2: [X₁-X₂]
    • l3: [1+X₁-X₂]
    • l4: [X₁-X₂]
    • l5: [X₁-X₀]
    • l6: [X₁-X₀]
    • l7: [X₁-X₀]
    • l8: [X₁-X₀]
    • l9: [X₁-X₀]




MPRF for transition t₁₅: l10(X₀, X₁, X₂, X₃) → l12(X₂, X₁, X₂, X₃) :|: X₂ ≤ 1+X₀ ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₁ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 1+X₃ ≤ X₁ ∧ 1 ≤ X₂ ∧ 1 ≤ X₂+X₃ ∧ 1+X₃ ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₃ ∧ X₃ ≤ X₀ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₃ ∧ X₃ ≤ 0 of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l10: [X₁-X₀]
    • l11: [1+X₁-X₂]
    • l12: [X₁-X₀]
    • l13: [1+X₁-X₂]
    • l14: [X₁-X₀]
    • l15: [X₁-X₀]
    • l2: [X₁-X₀]
    • l3: [X₁-X₀]
    • l4: [X₁-X₀]
    • l5: [X₁-X₂]
    • l6: [X₁-X₂]
    • l7: [X₁-X₂]
    • l8: [X₁-X₂]
    • l9: [X₁-X₂]




MPRF for transition t₁₆: l4(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, X₃) :|: X₃ ≤ 1 ∧ 1 ≤ X₃ ∧ X₂ ≤ 1+X₀ ∧ X₃ ≤ 1+X₀ ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₀+X₂ ∧ 1 ≤ X₀+X₃ ∧ 1+X₀ ≤ X₁ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₁+X₃ ∧ 2 ≤ X₂+X₃ ∧ 0 ≤ X₀ ∧ X₂ ≤ X₁ ∧ X₃ ≤ X₁ ∧ X₃ ≤ X₂ of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l10: [1+X₁-X₂]
    • l11: [1+X₁-X₂]
    • l12: [X₁-X₀]
    • l13: [1+X₁-X₂]
    • l14: [1+X₁-X₂]
    • l15: [X₁-X₀]
    • l2: [X₁-1-X₀]
    • l3: [X₁-X₀]
    • l4: [X₁-X₀]
    • l5: [X₁-X₀]
    • l6: [X₁-X₀]
    • l7: [X₁-X₀]
    • l8: [X₁-X₀]
    • l9: [X₁-X₀]




MPRF for transition t₁₉: l2(X₀, X₁, X₂, X₃) → l12(X₂, X₁, X₂, X₃) :|: X₂ ≤ 1+X₀ ∧ X₃ ≤ 1+X₀ ∧ X₃ ≤ 1 ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₀+X₂ ∧ 1 ≤ X₀+X₃ ∧ 1+X₀ ≤ X₁ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 1 ≤ X₃ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₁+X₃ ∧ 2 ≤ X₂+X₃ ∧ 0 ≤ X₀ ∧ X₂ ≤ X₁ ∧ X₃ ≤ X₁ ∧ X₃ ≤ X₂ of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l10: [X₁-X₂]
    • l11: [X₁-X₂]
    • l12: [X₁-X₀]
    • l13: [1+X₁-X₂]
    • l14: [X₁-X₀]
    • l15: [X₁-X₀]
    • l2: [1+X₁-X₂]
    • l3: [X₁-X₀]
    • l4: [X₁-X₀]
    • l5: [X₁-X₂]
    • l6: [X₁-X₂]
    • l7: [X₁-X₂]
    • l8: [X₁-X₂]
    • l9: [X₁-X₂]




MPRF for transition t₂₀: l6(X₀, X₁, X₂, X₃) → l7(X₀, X₁, X₂, X₃) :|: X₃ ≤ 2 ∧ X₃ ≤ 3+X₀ ∧ X₃ ≤ 3 ∧ X₃ ≤ 2+X₁ ∧ X₃ ≤ 2+X₂ ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₁ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀+X₃ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₃ ∧ 3 ≤ X₁+X₃ ∧ 3 ≤ X₂+X₃ ∧ 0 ≤ X₀ ∧ X₂ ≤ X₁ of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l10: [X₁-X₀]
    • l11: [1+X₁-X₂]
    • l12: [X₁-X₀]
    • l13: [1+X₁-X₂]
    • l14: [X₁-X₀]
    • l15: [X₁-X₀]
    • l2: [X₁-X₀]
    • l3: [1+X₁-X₂]
    • l4: [X₁+X₃-X₂]
    • l5: [X₁-X₂]
    • l6: [1+X₁-X₂]
    • l7: [X₁-X₂]
    • l8: [X₁-X₂]
    • l9: [X₁-X₂]




MPRF for transition t₂₁: l6(X₀, X₁, X₂, X₃) → l9(X₀, X₁, X₂, X₃) :|: 3 ≤ X₃ ∧ X₃ ≤ 3+X₀ ∧ X₃ ≤ 3 ∧ X₃ ≤ 2+X₁ ∧ X₃ ≤ 2+X₂ ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₁ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀+X₃ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₃ ∧ 3 ≤ X₁+X₃ ∧ 3 ≤ X₂+X₃ ∧ 0 ≤ X₀ ∧ X₂ ≤ X₁ of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l10: [1+X₁-X₂]
    • l11: [1+X₁-X₂]
    • l12: [X₁-X₀]
    • l13: [1+X₁-X₂]
    • l14: [1+X₁-X₂]
    • l15: [X₁-X₀]
    • l2: [X₁-X₀]
    • l3: [1+X₁-X₂]
    • l4: [X₁-X₀]
    • l5: [1+X₁-X₂]
    • l6: [X₁-X₀]
    • l7: [X₁-X₀]
    • l8: [X₁-X₂]
    • l9: [X₁-1-X₀]




MPRF for transition t₂₂: l7(X₀, X₁, X₂, X₃) → l5(X₀, X₁, X₂, X₃) :|: X₃ ≤ 2 ∧ 2 ≤ X₃ ∧ X₃ ≤ 2+X₀ ∧ X₂ ≤ 1+X₀ ∧ X₃ ≤ 1+X₁ ∧ X₃ ≤ 1+X₂ ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₁ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀+X₃ ∧ 2 ≤ X₁+X₂ ∧ 3 ≤ X₁+X₃ ∧ 3 ≤ X₂+X₃ ∧ 0 ≤ X₀ ∧ X₂ ≤ X₁ of depth 1:
  new bound:
    X₁+1 {O(n)}

  MPRF:
    • l10: [X₁-X₀]
    • l11: [1+X₁-X₂]
    • l12: [1+X₁-X₀]
    • l13: [1+X₁-X₀]
    • l14: [2+X₁-X₂]
    • l15: [1+X₁-X₀]
    • l2: [X₁-X₀]
    • l3: [X₁-X₀]
    • l4: [X₁-X₀]
    • l5: [X₁-X₀]
    • l6: [1+X₁-X₀]
    • l7: [1+X₁-X₀]
    • l8: [X₁-X₀]
    • l9: [X₁-X₀]




MPRF for transition t₂₅: l5(X₀, X₁, X₂, X₃) → l12(X₂, X₁, X₂, X₃) :|: X₃ ≤ 2+X₀ ∧ X₃ ≤ 2 ∧ X₂ ≤ 1+X₀ ∧ X₃ ≤ 1+X₁ ∧ X₃ ≤ 1+X₂ ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₁ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀+X₃ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₃ ∧ 3 ≤ X₁+X₃ ∧ 3 ≤ X₂+X₃ ∧ 0 ≤ X₀ ∧ X₂ ≤ X₁ of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l10: [X₁-X₂]
    • l11: [X₁-X₀]
    • l12: [X₁-X₀]
    • l13: [X₁-X₀]
    • l14: [X₁-X₀]
    • l15: [X₁-X₀]
    • l2: [X₁-X₂]
    • l3: [X₁-X₀]
    • l4: [X₁-X₀]
    • l5: [X₁-X₀]
    • l6: [X₁-X₀]
    • l7: [X₁-X₀]
    • l8: [X₁-X₀]
    • l9: [X₁-X₀]




MPRF for transition t₂₆: l9(X₀, X₁, X₂, X₃) → l8(X₀, X₁, X₂, X₃) :|: X₃ ≤ 3 ∧ 3 ≤ X₃ ∧ X₃ ≤ 3+X₀ ∧ X₃ ≤ 2+X₁ ∧ X₃ ≤ 2+X₂ ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₁ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 3 ≤ X₀+X₃ ∧ 4 ≤ X₁+X₃ ∧ 4 ≤ X₂+X₃ ∧ 0 ≤ X₀ ∧ X₂ ≤ X₁ of depth 1:
  new bound:
    X₁+1 {O(n)}

  MPRF:
    • l10: [1+X₁-X₂]
    • l11: [1+X₁-X₂]
    • l12: [1+X₁-X₀]
    • l13: [1+X₁-X₀]
    • l14: [2+X₁-X₂]
    • l15: [1+X₁-X₀]
    • l2: [1+X₁-X₂]
    • l3: [X₁-X₀]
    • l4: [1+X₁-X₂]
    • l5: [X₁+X₃-1-X₀]
    • l6: [2+X₁-X₂]
    • l7: [1+X₁-X₀]
    • l8: [1+X₁-X₂]
    • l9: [2+X₁-X₂]




MPRF for transition t₂₉: l8(X₀, X₁, X₂, X₃) → l12(X₂, X₁, X₂, X₃) :|: X₃ ≤ 3+X₀ ∧ X₃ ≤ 3 ∧ X₃ ≤ 2+X₁ ∧ X₃ ≤ 2+X₂ ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₁ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 3 ≤ X₀+X₃ ∧ 3 ≤ X₃ ∧ 4 ≤ X₁+X₃ ∧ 4 ≤ X₂+X₃ ∧ 0 ≤ X₀ ∧ X₂ ≤ X₁ of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l10: [X₁-X₂]
    • l11: [X₁-X₂]
    • l12: [X₁-X₀]
    • l13: [1+X₁-X₂]
    • l14: [X₁-X₀]
    • l15: [X₁-X₀]
    • l2: [X₁-X₂]
    • l3: [X₁-X₂]
    • l4: [X₁-X₂]
    • l5: [X₁-X₂]
    • l6: [X₁-X₀]
    • l7: [X₁-X₀]
    • l8: [X₁-X₀]
    • l9: [X₁-X₀]




All Bounds
Timebounds
  Overall timebound:19⋅X₁+7 {O(n)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: X₁ {O(n)}
    t₃: 1 {O(1)}
    t₄: X₁ {O(n)}
    t₅: X₁ {O(n)}
    t₆: X₁ {O(n)}
    t₇: X₁+1 {O(n)}
    t₈: X₁ {O(n)}
    t₉: X₁ {O(n)}
    t₁₀: X₁ {O(n)}
    t₁₁: X₁ {O(n)}
    t₁₂: X₁ {O(n)}
    t₁₅: X₁ {O(n)}
    t₁₆: X₁ {O(n)}
    t₁₉: X₁ {O(n)}
    t₂₀: X₁ {O(n)}
    t₂₁: X₁ {O(n)}
    t₂₂: X₁+1 {O(n)}
    t₂₅: X₁ {O(n)}
    t₂₆: X₁+1 {O(n)}
    t₂₉: X₁ {O(n)}
    t₃₁: 1 {O(1)}


Costbounds
  Overall costbound: 19⋅X₁+7 {O(n)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: X₁ {O(n)}
    t₃: 1 {O(1)}
    t₄: X₁ {O(n)}
    t₅: X₁ {O(n)}
    t₆: X₁ {O(n)}
    t₇: X₁+1 {O(n)}
    t₈: X₁ {O(n)}
    t₉: X₁ {O(n)}
    t₁₀: X₁ {O(n)}
    t₁₁: X₁ {O(n)}
    t₁₂: X₁ {O(n)}
    t₁₅: X₁ {O(n)}
    t₁₆: X₁ {O(n)}
    t₁₉: X₁ {O(n)}
    t₂₀: X₁ {O(n)}
    t₂₁: X₁ {O(n)}
    t₂₂: X₁+1 {O(n)}
    t₂₅: X₁ {O(n)}
    t₂₆: X₁+1 {O(n)}
    t₂₉: X₁ {O(n)}
    t₃₁: 1 {O(1)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₀, X₂: X₂ {O(n)}
    t₀, X₃: X₃ {O(n)}
    t₁, X₀: 0 {O(1)}
    t₁, X₁: X₁ {O(n)}
    t₁, X₂: X₂ {O(n)}
    t₁, X₃: X₃ {O(n)}
    t₂, X₀: 6⋅X₁ {O(n)}
    t₂, X₁: X₁ {O(n)}
    t₂, X₂: 24⋅X₁+X₂+4 {O(n)}
    t₂, X₃: X₃+6 {O(n)}
    t₃, X₀: 36⋅X₁ {O(n)}
    t₃, X₁: 7⋅X₁ {O(n)}
    t₃, X₂: 3⋅X₂+72⋅X₁+12 {O(n)}
    t₃, X₃: 3⋅X₃+18 {O(n)}
    t₄, X₀: 6⋅X₁ {O(n)}
    t₄, X₁: X₁ {O(n)}
    t₄, X₂: 6⋅X₁+1 {O(n)}
    t₄, X₃: 3 {O(1)}
    t₅, X₀: 6⋅X₁ {O(n)}
    t₅, X₁: X₁ {O(n)}
    t₅, X₂: 24⋅X₁+X₂+4 {O(n)}
    t₅, X₃: X₃+6 {O(n)}
    t₆, X₀: 6⋅X₁ {O(n)}
    t₆, X₁: X₁ {O(n)}
    t₆, X₂: 24⋅X₁+X₂+4 {O(n)}
    t₆, X₃: X₃+6 {O(n)}
    t₇, X₀: 6⋅X₁ {O(n)}
    t₇, X₁: X₁ {O(n)}
    t₇, X₂: 6⋅X₁+1 {O(n)}
    t₇, X₃: 3 {O(1)}
    t₈, X₀: 6⋅X₁ {O(n)}
    t₈, X₁: X₁ {O(n)}
    t₈, X₂: 6⋅X₁+1 {O(n)}
    t₈, X₃: 1 {O(1)}
    t₉, X₀: 6⋅X₁ {O(n)}
    t₉, X₁: X₁ {O(n)}
    t₉, X₂: 6⋅X₁+1 {O(n)}
    t₉, X₃: 3 {O(1)}
    t₁₀, X₀: 6⋅X₁ {O(n)}
    t₁₀, X₁: X₁ {O(n)}
    t₁₀, X₂: 6⋅X₁+1 {O(n)}
    t₁₀, X₃: 0 {O(1)}
    t₁₁, X₀: 6⋅X₁ {O(n)}
    t₁₁, X₁: X₁ {O(n)}
    t₁₁, X₂: 6⋅X₁+1 {O(n)}
    t₁₁, X₃: 1 {O(1)}
    t₁₂, X₀: 6⋅X₁ {O(n)}
    t₁₂, X₁: X₁ {O(n)}
    t₁₂, X₂: 6⋅X₁+1 {O(n)}
    t₁₂, X₃: 0 {O(1)}
    t₁₅, X₀: 6⋅X₁ {O(n)}
    t₁₅, X₁: X₁ {O(n)}
    t₁₅, X₂: 6⋅X₁+1 {O(n)}
    t₁₅, X₃: 0 {O(1)}
    t₁₆, X₀: 6⋅X₁ {O(n)}
    t₁₆, X₁: X₁ {O(n)}
    t₁₆, X₂: 6⋅X₁+1 {O(n)}
    t₁₆, X₃: 1 {O(1)}
    t₁₉, X₀: 6⋅X₁ {O(n)}
    t₁₉, X₁: X₁ {O(n)}
    t₁₉, X₂: 6⋅X₁+1 {O(n)}
    t₁₉, X₃: 1 {O(1)}
    t₂₀, X₀: 6⋅X₁ {O(n)}
    t₂₀, X₁: X₁ {O(n)}
    t₂₀, X₂: 6⋅X₁+1 {O(n)}
    t₂₀, X₃: 2 {O(1)}
    t₂₁, X₀: 6⋅X₁ {O(n)}
    t₂₁, X₁: X₁ {O(n)}
    t₂₁, X₂: 6⋅X₁+1 {O(n)}
    t₂₁, X₃: 3 {O(1)}
    t₂₂, X₀: 6⋅X₁ {O(n)}
    t₂₂, X₁: X₁ {O(n)}
    t₂₂, X₂: 6⋅X₁+1 {O(n)}
    t₂₂, X₃: 2 {O(1)}
    t₂₅, X₀: 6⋅X₁ {O(n)}
    t₂₅, X₁: X₁ {O(n)}
    t₂₅, X₂: 6⋅X₁+1 {O(n)}
    t₂₅, X₃: 2 {O(1)}
    t₂₆, X₀: 6⋅X₁ {O(n)}
    t₂₆, X₁: X₁ {O(n)}
    t₂₆, X₂: 6⋅X₁+1 {O(n)}
    t₂₆, X₃: 3 {O(1)}
    t₂₉, X₀: 6⋅X₁ {O(n)}
    t₂₉, X₁: X₁ {O(n)}
    t₂₉, X₂: 6⋅X₁+1 {O(n)}
    t₂₉, X₃: 3 {O(1)}
    t₃₁, X₀: 36⋅X₁ {O(n)}
    t₃₁, X₁: 7⋅X₁ {O(n)}
    t₃₁, X₂: 3⋅X₂+72⋅X₁+12 {O(n)}
    t₃₁, X₃: 3⋅X₃+18 {O(n)}

