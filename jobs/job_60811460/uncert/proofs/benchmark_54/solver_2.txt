WORST_CASE(?,O(1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [evaleasy1bb1in/4,evaleasy1bb2in/4,evaleasy1bb3in/4,evaleasy1bbin/4]
1. non_recursive  : [evaleasy1stop/3]
2. non_recursive  : [evaleasy1returnin/3]
3. non_recursive  : [exit_location/1]
4. non_recursive  : [evaleasy1bb3in_loop_cont/4]
5. non_recursive  : [evaleasy1entryin/3]
6. non_recursive  : [evaleasy1start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into evaleasy1bb3in/4
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into evaleasy1bb3in_loop_cont/4
5. SCC is partially evaluated into evaleasy1entryin/3
6. SCC is partially evaluated into evaleasy1start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations evaleasy1bb3in/4 
* CE 7 is refined into CE [10] 
* CE 6 is refined into CE [11] 
* CE 5 is refined into CE [12] 
* CE 4 is refined into CE [13] 
* CE 3 is refined into CE [14] 


### Cost equations --> "Loop" of evaleasy1bb3in/4 
* CEs [12] --> Loop 10 
* CEs [13] --> Loop 11 
* CEs [14] --> Loop 12 
* CEs [10] --> Loop 13 
* CEs [11] --> Loop 14 

### Ranking functions of CR evaleasy1bb3in(A,B,C,D) 
* RF of phase [10]: [-A/2+20]
* RF of phase [11]: [-A/2+20]
* RF of phase [12]: [-A+40]

#### Partial ranking functions of CR evaleasy1bb3in(A,B,C,D) 
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    -A/2+20
* Partial RF of phase [11]:
  - RF of loop [11:1]:
    -A/2+20
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    -A+40


### Specialization of cost equations evaleasy1bb3in_loop_cont/4 
* CE 9 is refined into CE [15] 
* CE 8 is refined into CE [16] 


### Cost equations --> "Loop" of evaleasy1bb3in_loop_cont/4 
* CEs [15] --> Loop 15 
* CEs [16] --> Loop 16 

### Ranking functions of CR evaleasy1bb3in_loop_cont(A,B,C,D) 

#### Partial ranking functions of CR evaleasy1bb3in_loop_cont(A,B,C,D) 


### Specialization of cost equations evaleasy1entryin/3 
* CE 2 is refined into CE [17,18,19,20,21,22,23] 


### Cost equations --> "Loop" of evaleasy1entryin/3 
* CEs [20,22] --> Loop 17 
* CEs [19,21] --> Loop 18 
* CEs [17,18] --> Loop 19 
* CEs [23] --> Loop 20 

### Ranking functions of CR evaleasy1entryin(A,B,C) 

#### Partial ranking functions of CR evaleasy1entryin(A,B,C) 


### Specialization of cost equations evaleasy1start/3 
* CE 1 is refined into CE [24,25,26,27] 


### Cost equations --> "Loop" of evaleasy1start/3 
* CEs [27] --> Loop 21 
* CEs [26] --> Loop 22 
* CEs [25] --> Loop 23 
* CEs [24] --> Loop 24 

### Ranking functions of CR evaleasy1start(A,B,C) 

#### Partial ranking functions of CR evaleasy1start(A,B,C) 


Computing Bounds
=====================================

#### Cost of chains of evaleasy1bb3in(A,B,C,D):
* Chain [[12],14]: 1*it(12)+0
  Such that:it(12) =< -A+40

  with precondition: [B=0,C=2,D=40,39>=A,A>=0] 

* Chain [[12],13]: 1*it(12)+0
  Such that:it(12) =< -A+40

  with precondition: [B=0,C=3,39>=A,A>=0] 

* Chain [[11],14]: 1*it(11)+0
  Such that:it(11) =< -A/2+20

  with precondition: [C=2,0>=B+1,41>=D,A>=0,D>=40,D>=A+2] 

* Chain [[11],13]: 1*it(11)+0
  Such that:it(11) =< -A/2+20

  with precondition: [C=3,39>=A,0>=B+1,A>=0] 

* Chain [[10],14]: 1*it(10)+0
  Such that:it(10) =< -A/2+20

  with precondition: [C=2,41>=D,A>=0,B>=1,D>=40,D>=A+2] 

* Chain [[10],13]: 1*it(10)+0
  Such that:it(10) =< -A/2+20

  with precondition: [C=3,39>=A,A>=0,B>=1] 

* Chain [13]: 0
  with precondition: [C=3,A>=0] 


#### Cost of chains of evaleasy1bb3in_loop_cont(A,B,C,D):
* Chain [16]: 0
  with precondition: [A=2] 

* Chain [15]: 0
  with precondition: [A=3] 


#### Cost of chains of evaleasy1entryin(A,B,C):
* Chain [20]: 0
  with precondition: [] 

* Chain [19]: 80
  with precondition: [B=0] 

* Chain [18]: 40
  with precondition: [0>=B+1] 

* Chain [17]: 40
  with precondition: [B>=1] 


#### Cost of chains of evaleasy1start(A,B,C):
* Chain [24]: 0
  with precondition: [] 

* Chain [23]: 80
  with precondition: [B=0] 

* Chain [22]: 40
  with precondition: [0>=B+1] 

* Chain [21]: 40
  with precondition: [B>=1] 


Closed-form bounds of evaleasy1start(A,B,C): 
-------------------------------------
* Chain [24] with precondition: [] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [23] with precondition: [B=0] 
    - Upper bound: 80 
    - Complexity: constant 
* Chain [22] with precondition: [0>=B+1] 
    - Upper bound: 40 
    - Complexity: constant 
* Chain [21] with precondition: [B>=1] 
    - Upper bound: 40 
    - Complexity: constant 

### Maximum cost of evaleasy1start(A,B,C): 80 
Asymptotic class: constant 
* Total analysis performed in 62 ms.

