WORST_CASE(Omega(n^1),O(n^1))

# LoAT Proof:
WORST_CASE(Omega(n^1),?)

WORST_CASE(Omega(n^1),?)
Initial ITS

Start location: eval_wcet2_start

Location map:
LoAT_sink -> 0
eval_wcet2_start -> 1
eval_wcet2_bb0_in -> 2
eval_wcet2_0 -> 3
eval_wcet2_1 -> 4
eval_wcet2_2 -> 5
eval_wcet2_3 -> 6
eval_wcet2_bb1_in -> 7
eval_wcet2_bb2_in -> 8
eval_wcet2_bb5_in -> 9
eval_wcet2_bb3_in -> 10
eval_wcet2_bb4_in -> 11
eval_wcet2_7 -> 12
eval_wcet2_8 -> 13
eval_wcet2_stop -> 14

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: -2+i1 == 0 /\ i1'=3, i3'=1+i3
   2: -3+i1 == 0 /\ i1'=4, i3'=1+i3
   3: -4+i1 == 0 /\ i1'=5, i3'=1+i3
   4: -5+i1 == 0 /\ i1'=6, i3'=1+i3
   5: -6+i1 == 0 /\ i1'=7, i3'=1+i3, i4'=i6
   6: (-7+i1 == 0 /\ -5+i4 < 0) /\ i1'=8, i3'=1+i3, i7'=0
   7: (-7+i1 == 0 /\ -5+i4 >= 0) /\ i1'=9, i3'=1+i3
   8: (-9+i7 <= 0 /\ -2+i4 > 0 /\ -8+i1 == 0) /\ i1'=10, i3'=1+i3
   9: (-2+i4 <= 0 /\ -8+i1 == 0) /\ i1'=11, i3'=1+i3
  10: (-9+i7 > 0 /\ -8+i1 == 0) /\ i1'=11, i3'=1+i3
  11: -10+i1 == 0 /\ i1'=8, i3'=1+i3, i7'=1+i7
  12: -11+i1 == 0 /\ i1'=12, i3'=1+i3, i5'=1+i4
  13: -12+i1 == 0 /\ i1'=13, i3'=1+i3
  14: -13+i1 == 0 /\ i1'=7, i3'=1+i3, i4'=i5
  15: -9+i1 == 0 /\ i1'=14, i3'=1+i3

Dependency graph:
0 -> 1
1 -> 2
2 -> 3
3 -> 4
4 -> 5
5 -> 6, 5 -> 7
6 -> 8, 6 -> 9, 6 -> 10
7 -> 15
8 -> 11
9 -> 12
10 -> 12
11 -> 8, 11 -> 9, 11 -> 10
12 -> 13
13 -> 14
14 -> 6, 14 -> 7

Chained Linear Paths

	Applied Chaining

	First rule:
	-1+i1 == 0 /\ i1'=2, i3'=1+i3
	Second rule:
	-2+i1 == 0 /\ i1'=3, i3'=1+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 0, 1
	
	Applied Chaining

	First rule:
	-3+i1 == 0 /\ i1'=4, i3'=1+i3
	Second rule:
	-4+i1 == 0 /\ i1'=5, i3'=1+i3
	New rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 2, 3
	
	Applied Chaining

	First rule:
	-5+i1 == 0 /\ i1'=6, i3'=1+i3
	Second rule:
	-6+i1 == 0 /\ i1'=7, i3'=1+i3, i4'=i6
	New rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=7, i3'=2+i3, i4'=i6
	
	Applied Deletion

	Removed the following rules: 4, 5
	
	Applied Chaining

	First rule:
	(-7+i1 == 0 /\ -5+i4 >= 0) /\ i1'=9, i3'=1+i3
	Second rule:
	-9+i1 == 0 /\ i1'=14, i3'=1+i3
	New rule:
	(0 == 0 /\ -7+i1 == 0 /\ -5+i4 >= 0) /\ i1'=14, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 7, 15
	
	Applied Chaining

	First rule:
	(-9+i7 <= 0 /\ -2+i4 > 0 /\ -8+i1 == 0) /\ i1'=10, i3'=1+i3
	Second rule:
	-10+i1 == 0 /\ i1'=8, i3'=1+i3, i7'=1+i7
	New rule:
	(0 == 0 /\ -9+i7 <= 0 /\ -2+i4 > 0 /\ -8+i1 == 0) /\ i1'=8, i3'=2+i3, i7'=1+i7
	
	Applied Deletion

	Removed the following rules: 8, 11
	
	Applied Chaining

	First rule:
	(-2+i4 <= 0 /\ -8+i1 == 0) /\ i1'=11, i3'=1+i3
	Second rule:
	-11+i1 == 0 /\ i1'=12, i3'=1+i3, i5'=1+i4
	New rule:
	(0 == 0 /\ -2+i4 <= 0 /\ -8+i1 == 0) /\ i1'=12, i3'=2+i3, i5'=1+i4
	
	Applied Deletion

	Removed the following rules: 9
	
	Applied Chaining

	First rule:
	(-9+i7 > 0 /\ -8+i1 == 0) /\ i1'=11, i3'=1+i3
	Second rule:
	-11+i1 == 0 /\ i1'=12, i3'=1+i3, i5'=1+i4
	New rule:
	(0 == 0 /\ -9+i7 > 0 /\ -8+i1 == 0) /\ i1'=12, i3'=2+i3, i5'=1+i4
	
	Applied Deletion

	Removed the following rules: 10, 12
	
	Applied Chaining

	First rule:
	-12+i1 == 0 /\ i1'=13, i3'=1+i3
	Second rule:
	-13+i1 == 0 /\ i1'=7, i3'=1+i3, i4'=i5
	New rule:
	(0 == 0 /\ -12+i1 == 0) /\ i1'=7, i3'=2+i3, i4'=i5
	
	Applied Deletion

	Removed the following rules: 13, 14
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	Second rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	
	Applied Deletion

	Removed the following rules: 16, 17
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -2+i4 <= 0 /\ -8+i1 == 0) /\ i1'=12, i3'=2+i3, i5'=1+i4
	Second rule:
	(0 == 0 /\ -12+i1 == 0) /\ i1'=7, i3'=2+i3, i4'=i5
	New rule:
	(0 == 0 /\ -2+i4 <= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=4+i3, i4'=1+i4, i5'=1+i4
	
	Applied Deletion

	Removed the following rules: 21
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -9+i7 > 0 /\ -8+i1 == 0) /\ i1'=12, i3'=2+i3, i5'=1+i4
	Second rule:
	(0 == 0 /\ -12+i1 == 0) /\ i1'=7, i3'=2+i3, i4'=i5
	New rule:
	(0 == 0 /\ -9+i7 > 0 /\ -8+i1 == 0) /\ i1'=7, i3'=4+i3, i4'=1+i4, i5'=1+i4
	
	Applied Deletion

	Removed the following rules: 22, 23
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	Second rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=7, i3'=2+i3, i4'=i6
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=7, i3'=6+i3, i4'=i6
	
	Applied Deletion

	Removed the following rules: 18, 24

Start location: eval_wcet2_start

Location map:
LoAT_sink -> 0
eval_wcet2_start -> 1
eval_wcet2_bb0_in -> 2
eval_wcet2_0 -> 3
eval_wcet2_1 -> 4
eval_wcet2_2 -> 5
eval_wcet2_3 -> 6
eval_wcet2_bb1_in -> 7
eval_wcet2_bb2_in -> 8
eval_wcet2_bb5_in -> 9
eval_wcet2_bb3_in -> 10
eval_wcet2_bb4_in -> 11
eval_wcet2_7 -> 12
eval_wcet2_8 -> 13
eval_wcet2_stop -> 14

Rules:
   6: (-7+i1 == 0 /\ -5+i4 < 0) /\ i1'=8, i3'=1+i3, i7'=0
  19: (0 == 0 /\ -7+i1 == 0 /\ -5+i4 >= 0) /\ i1'=14, i3'=2+i3
  20: (0 == 0 /\ -9+i7 <= 0 /\ -2+i4 > 0 /\ -8+i1 == 0) /\ i1'=8, i3'=2+i3, i7'=1+i7
  25: (0 == 0 /\ -2+i4 <= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=4+i3, i4'=1+i4, i5'=1+i4
  26: (0 == 0 /\ -9+i7 > 0 /\ -8+i1 == 0) /\ i1'=7, i3'=4+i3, i4'=1+i4, i5'=1+i4
  27: (0 == 0 /\ -1+i1 == 0) /\ i1'=7, i3'=6+i3, i4'=i6

Dependency graph:
6 -> 20, 6 -> 25, 6 -> 26
20 -> 20, 20 -> 25, 20 -> 26
25 -> 6, 25 -> 19
26 -> 6, 26 -> 19
27 -> 6, 27 -> 19

Preprocessed Transitions

	Simplified Guard

	Original rule:
	(0 == 0 /\ -7+i1 == 0 /\ -5+i4 >= 0) /\ i1'=14, i3'=2+i3
	New rule:
	(-7+i1 == 0 /\ -5+i4 >= 0) /\ i1'=14, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -9+i7 <= 0 /\ -2+i4 > 0 /\ -8+i1 == 0) /\ i1'=8, i3'=2+i3, i7'=1+i7
	New rule:
	(-9+i7 <= 0 /\ -2+i4 > 0 /\ -8+i1 == 0) /\ i1'=8, i3'=2+i3, i7'=1+i7
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -2+i4 <= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=4+i3, i4'=1+i4, i5'=1+i4
	New rule:
	(-2+i4 <= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=4+i3, i4'=1+i4, i5'=1+i4
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -9+i7 > 0 /\ -8+i1 == 0) /\ i1'=7, i3'=4+i3, i4'=1+i4, i5'=1+i4
	New rule:
	(-9+i7 > 0 /\ -8+i1 == 0) /\ i1'=7, i3'=4+i3, i4'=1+i4, i5'=1+i4
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=7, i3'=6+i3, i4'=i6
	New rule:
	-1+i1 == 0 /\ i1'=7, i3'=6+i3, i4'=i6

Start location: eval_wcet2_start

Location map:
LoAT_sink -> 0
eval_wcet2_start -> 1
eval_wcet2_bb0_in -> 2
eval_wcet2_0 -> 3
eval_wcet2_1 -> 4
eval_wcet2_2 -> 5
eval_wcet2_3 -> 6
eval_wcet2_bb1_in -> 7
eval_wcet2_bb2_in -> 8
eval_wcet2_bb5_in -> 9
eval_wcet2_bb3_in -> 10
eval_wcet2_bb4_in -> 11
eval_wcet2_7 -> 12
eval_wcet2_8 -> 13
eval_wcet2_stop -> 14

Rules:
   6: (-7+i1 == 0 /\ -5+i4 < 0) /\ i1'=8, i3'=1+i3, i7'=0
  28: (-7+i1 == 0 /\ -5+i4 >= 0) /\ i1'=14, i3'=2+i3
  29: (-9+i7 <= 0 /\ -2+i4 > 0 /\ -8+i1 == 0) /\ i1'=8, i3'=2+i3, i7'=1+i7
  30: (-2+i4 <= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=4+i3, i4'=1+i4, i5'=1+i4
  31: (-9+i7 > 0 /\ -8+i1 == 0) /\ i1'=7, i3'=4+i3, i4'=1+i4, i5'=1+i4
  32: -1+i1 == 0 /\ i1'=7, i3'=6+i3, i4'=i6

Dependency graph:
6 -> 29, 6 -> 30, 6 -> 31
29 -> 29, 29 -> 30, 29 -> 31
30 -> 6, 30 -> 28
31 -> 6, 31 -> 28
32 -> 6, 32 -> 28

Refined Dependency Graph

	Removed the following edges: 6 -> 31, 29 -> 30, 30 -> 28

Start location: eval_wcet2_start

Location map:
LoAT_sink -> 0
eval_wcet2_start -> 1
eval_wcet2_bb0_in -> 2
eval_wcet2_0 -> 3
eval_wcet2_1 -> 4
eval_wcet2_2 -> 5
eval_wcet2_3 -> 6
eval_wcet2_bb1_in -> 7
eval_wcet2_bb2_in -> 8
eval_wcet2_bb5_in -> 9
eval_wcet2_bb3_in -> 10
eval_wcet2_bb4_in -> 11
eval_wcet2_7 -> 12
eval_wcet2_8 -> 13
eval_wcet2_stop -> 14

Rules:
   6: (-7+i1 == 0 /\ -5+i4 < 0) /\ i1'=8, i3'=1+i3, i7'=0
  28: (-7+i1 == 0 /\ -5+i4 >= 0) /\ i1'=14, i3'=2+i3
  29: (-9+i7 <= 0 /\ -2+i4 > 0 /\ -8+i1 == 0) /\ i1'=8, i3'=2+i3, i7'=1+i7
  30: (-2+i4 <= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=4+i3, i4'=1+i4, i5'=1+i4
  31: (-9+i7 > 0 /\ -8+i1 == 0) /\ i1'=7, i3'=4+i3, i4'=1+i4, i5'=1+i4
  32: -1+i1 == 0 /\ i1'=7, i3'=6+i3, i4'=i6

Dependency graph:
6 -> 29, 6 -> 30
29 -> 29, 29 -> 31
30 -> 6
31 -> 6, 31 -> 28
32 -> 6, 32 -> 28

Step with 32

	Trace

	32[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 28

	Trace

	32[(-1+i1 == 0)]
	28[(-7+i1 == 0 /\ -5+i4 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Backtrack

	Trace

	32[(-1+i1 == 0)]
	
	Blocked

	{}
	{28[T]}
	
Step with 6

	Trace

	32[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ -5+i4 < 0)]
	
	Blocked

	{}
	{28[T]}
	{}
	
Step with 29

	Trace

	32[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ -5+i4 < 0)]
	29[(-9+i7 <= 0 /\ -2+i4 > 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{28[T]}
	{}
	{}
	
Accelerate

	Loop Acceleration

	Original rule:
	(-9+i7 <= 0 /\ -2+i4 > 0 /\ -8+i1 == 0) /\ i1'=8, i3'=2+i3, i7'=1+i7
	New rule:
	(10-it25-i7 >= 0 /\ -2+i4 > 0 /\ -1+it25 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0) /\ i1'=i1, i3'=2*it25+i3, i7'=it25+i7

		9-i7 >= 0 [0]: montonic decrease yields 10-it25-i7 >= 0
		
		-2+i4 > 0 [0]: unchanged
		
		8-i1 >= 0 [0]: unchanged
		
		-8+i1 >= 0 [0]: unchanged
		
		Replacement map: {9-i7 >= 0 -> 10-it25-i7 >= 0, -2+i4 > 0 -> -2+i4 > 0, 8-i1 >= 0 -> 8-i1 >= 0, -8+i1 >= 0 -> -8+i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(10-it25-i7 >= 0 /\ -2+i4 > 0 /\ -1+it25 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0) /\ i1'=i1, i3'=2*it25+i3, i7'=it25+i7
	New rule:
	(10-it25-i7 >= 0 /\ -2+i4 > 0 /\ -1+it25 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0) /\ i3'=2*it25+i3, i7'=it25+i7
	
	Instantiation

	Original rule:
	(10-it25-i7 >= 0 /\ -2+i4 > 0 /\ -1+it25 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0) /\ i3'=2*it25+i3, i7'=it25+i7
	New rule:
	(0 >= 0 /\ 9-i7 >= 0 /\ -2+i4 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0) /\ i3'=20+i3-2*i7, i7'=10

Start location: eval_wcet2_start

Location map:
LoAT_sink -> 0
eval_wcet2_start -> 1
eval_wcet2_bb0_in -> 2
eval_wcet2_0 -> 3
eval_wcet2_1 -> 4
eval_wcet2_2 -> 5
eval_wcet2_3 -> 6
eval_wcet2_bb1_in -> 7
eval_wcet2_bb2_in -> 8
eval_wcet2_bb5_in -> 9
eval_wcet2_bb3_in -> 10
eval_wcet2_bb4_in -> 11
eval_wcet2_7 -> 12
eval_wcet2_8 -> 13
eval_wcet2_stop -> 14

Rules:
   6: (-7+i1 == 0 /\ -5+i4 < 0) /\ i1'=8, i3'=1+i3, i7'=0
  28: (-7+i1 == 0 /\ -5+i4 >= 0) /\ i1'=14, i3'=2+i3
  29: (-9+i7 <= 0 /\ -2+i4 > 0 /\ -8+i1 == 0) /\ i1'=8, i3'=2+i3, i7'=1+i7
  30: (-2+i4 <= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=4+i3, i4'=1+i4, i5'=1+i4
  31: (-9+i7 > 0 /\ -8+i1 == 0) /\ i1'=7, i3'=4+i3, i4'=1+i4, i5'=1+i4
  32: -1+i1 == 0 /\ i1'=7, i3'=6+i3, i4'=i6
  33: (0 >= 0 /\ 9-i7 >= 0 /\ -2+i4 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0) /\ i3'=20+i3-2*i7, i7'=10

Dependency graph:
6 -> 29, 6 -> 30, 6 -> 33
29 -> 29, 29 -> 31, 29 -> 33
30 -> 6
31 -> 6, 31 -> 28
32 -> 6, 32 -> 28
33 -> 29, 33 -> 31

	Trace

	32[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ -5+i4 < 0)]
	33[(0 >= 0 /\ 9-i7 >= 0 /\ -2+i4 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0)]
	
	Blocked

	{}
	{28[T]}
	{}
	{29[T], 33[T]}
	
Step with 31

	Trace

	32[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ -5+i4 < 0)]
	33[(0 >= 0 /\ 9-i7 >= 0 /\ -2+i4 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0)]
	31[(-9+i7 > 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{28[T]}
	{}
	{29[T], 33[T]}
	{}
	
Accelerate

		Extracted Implied Equalities

		Original rule:
		(0 >= 0 /\ 0 == 0 /\ 1 > 0 /\ -7+i1 == 0 /\ 9 >= 0 /\ -5+i4 < 0 /\ -2+i4 > 0) /\ i1'=7, i3'=25+i3, i4'=1+i4, i5'=1+i4, i7'=10
		New rule:
		(0 >= 0 /\ 0 == 0 /\ 1 > 0 /\ -7+i1 == 0 /\ 9 >= 0 /\ -5+i4 < 0 /\ -2+i4 > 0) /\ i1'=7, i3'=25+i3, i4'=1+i4, i5'=1+i4, i7'=10
		
		Simplified Guard

		Original rule:
		(0 >= 0 /\ 0 == 0 /\ 1 > 0 /\ -7+i1 == 0 /\ 9 >= 0 /\ -5+i4 < 0 /\ -2+i4 > 0) /\ i1'=7, i3'=25+i3, i4'=1+i4, i5'=1+i4, i7'=10
		New rule:
		(-7+i1 == 0 /\ -5+i4 < 0 /\ -2+i4 > 0) /\ i1'=7, i3'=25+i3, i4'=1+i4, i5'=1+i4, i7'=10

	Loop Acceleration

	Original rule:
	(-7+i1 == 0 /\ -5+i4 < 0 /\ -2+i4 > 0) /\ i1'=7, i3'=25+i3, i4'=1+i4, i5'=1+i4, i7'=10
	New rule:
	(-7+i1 >= 0 /\ 7-i1 >= 0 /\ 5-i4 > 0 /\ -1+it38 >= 0 /\ -2+i4 > 0 /\ 6-it38-i4 > 0) /\ i1'=i1, i3'=i3+25*it38, i4'=it38+i4, i5'=it38+i4, i7'=10

		-7+i1 >= 0 [0]: unchanged
		
		7-i1 >= 0 [0]: unchanged
		
		5-i4 > 0 [0]: montonic decrease yields (5-i4 > 0 /\ 6-it38-i4 > 0)
		
		-2+i4 > 0 [0]: monotonic increase yields -2+i4 > 0
		
		Replacement map: {-7+i1 >= 0 -> -7+i1 >= 0, 7-i1 >= 0 -> 7-i1 >= 0, 5-i4 > 0 -> (5-i4 > 0 /\ 6-it38-i4 > 0), -2+i4 > 0 -> -2+i4 > 0}

	Removed Trivial Updates

	Original rule:
	(-7+i1 >= 0 /\ 7-i1 >= 0 /\ 5-i4 > 0 /\ -1+it38 >= 0 /\ -2+i4 > 0 /\ 6-it38-i4 > 0) /\ i1'=i1, i3'=i3+25*it38, i4'=it38+i4, i5'=it38+i4, i7'=10
	New rule:
	(-7+i1 >= 0 /\ 7-i1 >= 0 /\ 5-i4 > 0 /\ -1+it38 >= 0 /\ -2+i4 > 0 /\ 6-it38-i4 > 0) /\ i3'=i3+25*it38, i4'=it38+i4, i5'=it38+i4, i7'=10
	
	Instantiation

	Original rule:
	(-7+i1 >= 0 /\ 7-i1 >= 0 /\ 5-i4 > 0 /\ -1+it38 >= 0 /\ -2+i4 > 0 /\ 6-it38-i4 > 0) /\ i3'=i3+25*it38, i4'=it38+i4, i5'=it38+i4, i7'=10
	New rule:
	(1 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ 5-i4 > 0 /\ 4-i4 >= 0 /\ -2+i4 > 0) /\ i3'=125+i3-25*i4, i4'=5, i5'=5, i7'=10

Start location: eval_wcet2_start

Location map:
LoAT_sink -> 0
eval_wcet2_start -> 1
eval_wcet2_bb0_in -> 2
eval_wcet2_0 -> 3
eval_wcet2_1 -> 4
eval_wcet2_2 -> 5
eval_wcet2_3 -> 6
eval_wcet2_bb1_in -> 7
eval_wcet2_bb2_in -> 8
eval_wcet2_bb5_in -> 9
eval_wcet2_bb3_in -> 10
eval_wcet2_bb4_in -> 11
eval_wcet2_7 -> 12
eval_wcet2_8 -> 13
eval_wcet2_stop -> 14

Rules:
   6: (-7+i1 == 0 /\ -5+i4 < 0) /\ i1'=8, i3'=1+i3, i7'=0
  28: (-7+i1 == 0 /\ -5+i4 >= 0) /\ i1'=14, i3'=2+i3
  29: (-9+i7 <= 0 /\ -2+i4 > 0 /\ -8+i1 == 0) /\ i1'=8, i3'=2+i3, i7'=1+i7
  30: (-2+i4 <= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=4+i3, i4'=1+i4, i5'=1+i4
  31: (-9+i7 > 0 /\ -8+i1 == 0) /\ i1'=7, i3'=4+i3, i4'=1+i4, i5'=1+i4
  32: -1+i1 == 0 /\ i1'=7, i3'=6+i3, i4'=i6
  33: (0 >= 0 /\ 9-i7 >= 0 /\ -2+i4 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0) /\ i3'=20+i3-2*i7, i7'=10
  34: (1 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ 5-i4 > 0 /\ 4-i4 >= 0 /\ -2+i4 > 0) /\ i3'=125+i3-25*i4, i4'=5, i5'=5, i7'=10

Dependency graph:
6 -> 29, 6 -> 30, 6 -> 33
29 -> 29, 29 -> 31, 29 -> 33
30 -> 6, 30 -> 34
31 -> 6, 31 -> 28, 31 -> 34
32 -> 6, 32 -> 28, 32 -> 34
33 -> 29, 33 -> 31
34 -> 6, 34 -> 28

	Trace

	32[(-1+i1 == 0)]
	34[(1 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ 5-i4 > 0 /\ 4-i4 >= 0 /\ -2+i4 > 0)]
	
	Blocked

	{}
	{28[T]}
	{34[T]}
	
Step with 28

	Trace

	32[(-1+i1 == 0)]
	34[(1 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ 5-i4 > 0 /\ 4-i4 >= 0 /\ -2+i4 > 0)]
	28[(-7+i1 == 0 /\ -5+i4 >= 0)]
	
	Blocked

	{}
	{28[T]}
	{6[T], 34[T]}
	{}
	
Backtrack

	Trace

	32[(-1+i1 == 0)]
	34[(1 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ 5-i4 > 0 /\ 4-i4 >= 0 /\ -2+i4 > 0)]
	
	Blocked

	{}
	{28[T]}
	{6[T], 28[T], 34[T]}
	
Backtrack

	Trace

	32[(-1+i1 == 0)]
	
	Blocked

	{}
	{28[T], 34[T]}
	
Step with 6

	Trace

	32[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ -5+i4 < 0)]
	
	Blocked

	{}
	{28[T], 34[T]}
	{}
	
Step with 29

	Trace

	32[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ -5+i4 < 0)]
	29[(-9+i7 <= 0 /\ -2+i4 > 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{28[T], 34[T]}
	{}
	{}
	
Covered

	Trace

	32[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ -5+i4 < 0)]
	
	Blocked

	{}
	{28[T], 34[T]}
	{29[T]}
	
Step with 33

	Trace

	32[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ -5+i4 < 0)]
	33[(0 >= 0 /\ 9-i7 >= 0 /\ -2+i4 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0)]
	
	Blocked

	{}
	{28[T], 34[T]}
	{29[T]}
	{33[T]}
	
Step with 31

	Trace

	32[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ -5+i4 < 0)]
	33[(0 >= 0 /\ 9-i7 >= 0 /\ -2+i4 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0)]
	31[(-9+i7 > 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{28[T], 34[T]}
	{29[T]}
	{29[T], 33[T]}
	{}
	
Covered

	Trace

	32[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ -5+i4 < 0)]
	33[(0 >= 0 /\ 9-i7 >= 0 /\ -2+i4 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0)]
	
	Blocked

	{}
	{28[T], 34[T]}
	{29[T]}
	{29[T], 31[T], 33[T]}
	
Backtrack

	Trace

	32[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ -5+i4 < 0)]
	
	Blocked

	{}
	{28[T], 34[T]}
	{29[T], 33[T]}
	
Step with 30

	Trace

	32[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ -5+i4 < 0)]
	30[(-2+i4 <= 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{28[T], 34[T]}
	{29[T], 33[T]}
	{}
	
Poly(n^1)

Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -7+i1 == 0 /\ -5+i4 < 0 /\ -2+i4 <= 0) /\ i1'=7, i3'=5+i3, i4'=1+i4, i5'=1+i4, i7'=0
		New rule:
		(-7+i1 == 0 /\ -5+i4 < 0 /\ -2+i4 <= 0) /\ i1'=7, i3'=5+i3, i4'=1+i4, i5'=1+i4, i7'=0

	Loop Acceleration

	Original rule:
	(-7+i1 == 0 /\ -5+i4 < 0 /\ -2+i4 <= 0) /\ i1'=7, i3'=5+i3, i4'=1+i4, i5'=1+i4, i7'=0
	New rule:
	(2-i4 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ 3-i4-it109 >= 0 /\ 5-i4 > 0 /\ -1+it109 >= 0) /\ i1'=i1, i3'=i3+5*it109, i4'=i4+it109, i5'=i4+it109, i7'=0

		2-i4 >= 0 [0]: montonic decrease yields (2-i4 >= 0 /\ 3-i4-it109 >= 0)
		
		-7+i1 >= 0 [0]: unchanged
		
		7-i1 >= 0 [0]: unchanged
		
		5-i4 > 0 [0]: monotonic increase yields 5-i4 > 0, dependencies: 2-i4 >= 0
		
		Replacement map: {2-i4 >= 0 -> (2-i4 >= 0 /\ 3-i4-it109 >= 0), -7+i1 >= 0 -> -7+i1 >= 0, 7-i1 >= 0 -> 7-i1 >= 0, 5-i4 > 0 -> 5-i4 > 0}

	Removed Trivial Updates

	Original rule:
	(2-i4 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ 3-i4-it109 >= 0 /\ 5-i4 > 0 /\ -1+it109 >= 0) /\ i1'=i1, i3'=i3+5*it109, i4'=i4+it109, i5'=i4+it109, i7'=0
	New rule:
	(2-i4 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ 3-i4-it109 >= 0 /\ 5-i4 > 0 /\ -1+it109 >= 0) /\ i3'=i3+5*it109, i4'=i4+it109, i5'=i4+it109, i7'=0
	
	Instantiation

	Original rule:
	(2-i4 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ 3-i4-it109 >= 0 /\ 5-i4 > 0 /\ -1+it109 >= 0) /\ i3'=i3+5*it109, i4'=i4+it109, i5'=i4+it109, i7'=0
	New rule:
	(0 >= 0 /\ 2-i4 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ 5-i4 > 0) /\ i3'=15+i3-5*i4, i4'=3, i5'=3, i7'=0

Start location: eval_wcet2_start

Location map:
LoAT_sink -> 0
eval_wcet2_start -> 1
eval_wcet2_bb0_in -> 2
eval_wcet2_0 -> 3
eval_wcet2_1 -> 4
eval_wcet2_2 -> 5
eval_wcet2_3 -> 6
eval_wcet2_bb1_in -> 7
eval_wcet2_bb2_in -> 8
eval_wcet2_bb5_in -> 9
eval_wcet2_bb3_in -> 10
eval_wcet2_bb4_in -> 11
eval_wcet2_7 -> 12
eval_wcet2_8 -> 13
eval_wcet2_stop -> 14

Rules:
   6: (-7+i1 == 0 /\ -5+i4 < 0) /\ i1'=8, i3'=1+i3, i7'=0
  28: (-7+i1 == 0 /\ -5+i4 >= 0) /\ i1'=14, i3'=2+i3
  29: (-9+i7 <= 0 /\ -2+i4 > 0 /\ -8+i1 == 0) /\ i1'=8, i3'=2+i3, i7'=1+i7
  30: (-2+i4 <= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=4+i3, i4'=1+i4, i5'=1+i4
  31: (-9+i7 > 0 /\ -8+i1 == 0) /\ i1'=7, i3'=4+i3, i4'=1+i4, i5'=1+i4
  32: -1+i1 == 0 /\ i1'=7, i3'=6+i3, i4'=i6
  33: (0 >= 0 /\ 9-i7 >= 0 /\ -2+i4 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0) /\ i3'=20+i3-2*i7, i7'=10
  34: (1 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ 5-i4 > 0 /\ 4-i4 >= 0 /\ -2+i4 > 0) /\ i3'=125+i3-25*i4, i4'=5, i5'=5, i7'=10
  35: (0 >= 0 /\ 2-i4 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ 5-i4 > 0) /\ i3'=15+i3-5*i4, i4'=3, i5'=3, i7'=0

Dependency graph:
6 -> 29, 6 -> 30, 6 -> 33
29 -> 29, 29 -> 31, 29 -> 33
30 -> 6, 30 -> 34, 30 -> 35
31 -> 6, 31 -> 28, 31 -> 34, 31 -> 35
32 -> 6, 32 -> 28, 32 -> 34, 32 -> 35
33 -> 29, 33 -> 31
34 -> 6, 34 -> 28, 34 -> 35
35 -> 6, 35 -> 34

	Trace

	32[(-1+i1 == 0)]
	35[(0 >= 0 /\ 2-i4 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ 5-i4 > 0)]
	
	Blocked

	{}
	{28[T], 34[T]}
	{35[T]}
	
Step with 6

	Trace

	32[(-1+i1 == 0)]
	35[(0 >= 0 /\ 2-i4 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ 5-i4 > 0)]
	6[(-7+i1 == 0 /\ -5+i4 < 0)]
	
	Blocked

	{}
	{28[T], 34[T]}
	{35[T]}
	{}
	
Step with 33

	Trace

	32[(-1+i1 == 0)]
	35[(0 >= 0 /\ 2-i4 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ 5-i4 > 0)]
	6[(-7+i1 == 0 /\ -5+i4 < 0)]
	33[(0 >= 0 /\ 9-i7 >= 0 /\ -2+i4 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0)]
	
	Blocked

	{}
	{28[T], 34[T]}
	{35[T]}
	{}
	{33[T]}
	
Step with 31

	Trace

	32[(-1+i1 == 0)]
	35[(0 >= 0 /\ 2-i4 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ 5-i4 > 0)]
	6[(-7+i1 == 0 /\ -5+i4 < 0)]
	33[(0 >= 0 /\ 9-i7 >= 0 /\ -2+i4 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0)]
	31[(-9+i7 > 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{28[T], 34[T]}
	{35[T]}
	{}
	{33[T]}
	{}
	
Covered

	Trace

	32[(-1+i1 == 0)]
	35[(0 >= 0 /\ 2-i4 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ 5-i4 > 0)]
	6[(-7+i1 == 0 /\ -5+i4 < 0)]
	33[(0 >= 0 /\ 9-i7 >= 0 /\ -2+i4 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0)]
	
	Blocked

	{}
	{28[T], 34[T]}
	{35[T]}
	{}
	{31[T], 33[T]}
	
Backtrack

	Trace

	32[(-1+i1 == 0)]
	35[(0 >= 0 /\ 2-i4 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ 5-i4 > 0)]
	6[(-7+i1 == 0 /\ -5+i4 < 0)]
	
	Blocked

	{}
	{28[T], 34[T]}
	{35[T]}
	{33[T]}
	
Step with 29

	Trace

	32[(-1+i1 == 0)]
	35[(0 >= 0 /\ 2-i4 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ 5-i4 > 0)]
	6[(-7+i1 == 0 /\ -5+i4 < 0)]
	29[(-9+i7 <= 0 /\ -2+i4 > 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{28[T], 34[T]}
	{35[T]}
	{33[T]}
	{}
	
Covered

	Trace

	32[(-1+i1 == 0)]
	35[(0 >= 0 /\ 2-i4 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ 5-i4 > 0)]
	6[(-7+i1 == 0 /\ -5+i4 < 0)]
	
	Blocked

	{}
	{28[T], 34[T]}
	{35[T]}
	{29[T], 33[T]}
	
Backtrack

	Trace

	32[(-1+i1 == 0)]
	35[(0 >= 0 /\ 2-i4 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ 5-i4 > 0)]
	
	Blocked

	{}
	{28[T], 34[T]}
	{6[T], 35[T]}
	
Step with 34

	Trace

	32[(-1+i1 == 0)]
	35[(0 >= 0 /\ 2-i4 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ 5-i4 > 0)]
	34[(1 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ 5-i4 > 0 /\ 4-i4 >= 0 /\ -2+i4 > 0)]
	
	Blocked

	{}
	{28[T], 34[T]}
	{6[T], 35[T]}
	{34[T]}
	
Step with 28

	Trace

	32[(-1+i1 == 0)]
	35[(0 >= 0 /\ 2-i4 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ 5-i4 > 0)]
	34[(1 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ 5-i4 > 0 /\ 4-i4 >= 0 /\ -2+i4 > 0)]
	28[(-7+i1 == 0 /\ -5+i4 >= 0)]
	
	Blocked

	{}
	{28[T], 34[T]}
	{6[T], 35[T]}
	{6[T], 34[T], 35[T]}
	{}
	
Backtrack

	Trace

	32[(-1+i1 == 0)]
	35[(0 >= 0 /\ 2-i4 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ 5-i4 > 0)]
	34[(1 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ 5-i4 > 0 /\ 4-i4 >= 0 /\ -2+i4 > 0)]
	
	Blocked

	{}
	{28[T], 34[T]}
	{6[T], 35[T]}
	{6[T], 28[T], 34[T], 35[T]}
	
Backtrack

	Trace

	32[(-1+i1 == 0)]
	35[(0 >= 0 /\ 2-i4 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ 5-i4 > 0)]
	
	Blocked

	{}
	{28[T], 34[T]}
	{6[T], 34[T], 35[T]}
	
Backtrack

	Trace

	32[(-1+i1 == 0)]
	
	Blocked

	{}
	{28[T], 34[T], 35[T]}
	
Step with 6

	Trace

	32[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ -5+i4 < 0)]
	
	Blocked

	{}
	{28[T], 34[T], 35[T]}
	{}
	
Step with 29

	Trace

	32[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ -5+i4 < 0)]
	29[(-9+i7 <= 0 /\ -2+i4 > 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{28[T], 34[T], 35[T]}
	{}
	{}
	
Covered

	Trace

	32[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ -5+i4 < 0)]
	
	Blocked

	{}
	{28[T], 34[T], 35[T]}
	{29[T]}
	
Step with 33

	Trace

	32[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ -5+i4 < 0)]
	33[(0 >= 0 /\ 9-i7 >= 0 /\ -2+i4 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0)]
	
	Blocked

	{}
	{28[T], 34[T], 35[T]}
	{29[T]}
	{33[T]}
	
Step with 31

	Trace

	32[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ -5+i4 < 0)]
	33[(0 >= 0 /\ 9-i7 >= 0 /\ -2+i4 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0)]
	31[(-9+i7 > 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{28[T], 34[T], 35[T]}
	{29[T]}
	{33[T]}
	{}
	
Covered

	Trace

	32[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ -5+i4 < 0)]
	33[(0 >= 0 /\ 9-i7 >= 0 /\ -2+i4 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0)]
	
	Blocked

	{}
	{28[T], 34[T], 35[T]}
	{29[T]}
	{31[T], 33[T]}
	
Backtrack

	Trace

	32[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ -5+i4 < 0)]
	
	Blocked

	{}
	{28[T], 34[T], 35[T]}
	{29[T], 33[T]}
	
Step with 30

	Trace

	32[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ -5+i4 < 0)]
	30[(-2+i4 <= 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{28[T], 34[T], 35[T]}
	{29[T], 33[T]}
	{}
	
Covered

	Trace

	32[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ -5+i4 < 0)]
	
	Blocked

	{}
	{28[T], 34[T], 35[T]}
	{29[T], 30[T], 33[T]}
	
Backtrack

	Trace

	32[(-1+i1 == 0)]
	
	Blocked

	{}
	{6[T], 28[T], 34[T], 35[T]}
	
Backtrack

	Trace

	Blocked

	{32[T]}
	
Accept

Poly(n^1)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃
  Temp_Vars:  
  Locations:  l0, l1, l10, l11, l12, l13, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, X₃)
  t₃: l1(X₀, X₁, X₂, X₃) → l4(X₀, X₁, X₂, X₃)
  t₈: l10(X₀, X₁, X₂, X₃) → l12(X₀, X₁, X₂, X₃) :|: X₃ ≤ 9 ∧ 3 ≤ X₀
  t₉: l10(X₀, X₁, X₂, X₃) → l8(X₀, X₁, X₂, X₃) :|: X₀ ≤ 2
  t₁₀: l10(X₀, X₁, X₂, X₃) → l8(X₀, X₁, X₂, X₃) :|: 10 ≤ X₃
  t₁₅: l11(X₀, X₁, X₂, X₃) → l13(X₀, X₁, X₂, X₃)
  t₁₁: l12(X₀, X₁, X₂, X₃) → l10(X₀, X₁, X₂, 1+X₃)
  t₁: l2(X₀, X₁, X₂, X₃) → l3(X₀, X₁, X₂, X₃)
  t₂: l3(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, X₃)
  t₄: l4(X₀, X₁, X₂, X₃) → l5(X₀, X₁, X₂, X₃)
  t₅: l5(X₀, X₁, X₂, X₃) → l6(X₂, X₁, X₂, X₃)
  t₆: l6(X₀, X₁, X₂, X₃) → l10(X₀, X₁, X₂, 0) :|: X₀ ≤ 4
  t₇: l6(X₀, X₁, X₂, X₃) → l11(X₀, X₁, X₂, X₃) :|: 5 ≤ X₀
  t₁₄: l7(X₀, X₁, X₂, X₃) → l6(X₁, X₁, X₂, X₃)
  t₁₂: l8(X₀, X₁, X₂, X₃) → l9(X₀, 1+X₀, X₂, X₃)
  t₁₃: l9(X₀, X₁, X₂, X₃) → l7(X₀, X₁, X₂, X₃)


Preprocessing
  Found invariant X₂ ≤ X₀ ∧ 5 ≤ X₀ for location l11


  Found invariant X₂ ≤ X₀ for location l6


  Found invariant X₃ ≤ 9 ∧ X₂+X₃ ≤ 13 ∧ X₃ ≤ 6+X₀ ∧ X₀+X₃ ≤ 13 ∧ 0 ≤ X₃ ∧ X₂ ≤ 4+X₃ ∧ 3 ≤ X₀+X₃ ∧ X₀ ≤ 4+X₃ ∧ X₂ ≤ 4 ∧ X₂ ≤ X₀ ∧ X₀+X₂ ≤ 8 ∧ X₀ ≤ 4 ∧ 3 ≤ X₀ for location l12


  Found invariant 0 ≤ X₃ ∧ X₂ ≤ 2+X₃ ∧ X₁ ≤ 3+X₃ ∧ X₀ ≤ 2+X₃ ∧ X₂ ≤ 4 ∧ 1+X₂ ≤ X₁ ∧ X₁+X₂ ≤ 9 ∧ X₂ ≤ X₀ ∧ X₀+X₂ ≤ 8 ∧ X₁ ≤ 5 ∧ X₁ ≤ 1+X₀ ∧ X₀+X₁ ≤ 9 ∧ 1+X₀ ≤ X₁ ∧ X₀ ≤ 4 for location l7


  Found invariant X₂ ≤ X₀ ∧ 5 ≤ X₀ for location l13


  Found invariant 0 ≤ X₃ ∧ X₂ ≤ 2+X₃ ∧ X₀ ≤ 2+X₃ ∧ X₂ ≤ 4 ∧ X₂ ≤ X₀ ∧ X₀+X₂ ≤ 8 ∧ X₀ ≤ 4 for location l8


  Found invariant 0 ≤ X₃ ∧ X₂ ≤ 4+X₃ ∧ X₀ ≤ 4+X₃ ∧ X₂ ≤ 4 ∧ X₂ ≤ X₀ ∧ X₀+X₂ ≤ 8 ∧ X₀ ≤ 4 for location l10


  Found invariant 0 ≤ X₃ ∧ X₂ ≤ 2+X₃ ∧ X₁ ≤ 3+X₃ ∧ X₀ ≤ 2+X₃ ∧ X₂ ≤ 4 ∧ 1+X₂ ≤ X₁ ∧ X₁+X₂ ≤ 9 ∧ X₂ ≤ X₀ ∧ X₀+X₂ ≤ 8 ∧ X₁ ≤ 5 ∧ X₁ ≤ 1+X₀ ∧ X₀+X₁ ≤ 9 ∧ 1+X₀ ≤ X₁ ∧ X₀ ≤ 4 for location l9


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃
  Temp_Vars:  
  Locations:  l0, l1, l10, l11, l12, l13, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, X₃)
  t₃: l1(X₀, X₁, X₂, X₃) → l4(X₀, X₁, X₂, X₃)
  t₈: l10(X₀, X₁, X₂, X₃) → l12(X₀, X₁, X₂, X₃) :|: X₃ ≤ 9 ∧ 3 ≤ X₀ ∧ X₀+X₂ ≤ 8 ∧ X₀ ≤ 4 ∧ X₀ ≤ 4+X₃ ∧ X₂ ≤ 4 ∧ X₂ ≤ 4+X₃ ∧ X₂ ≤ X₀ ∧ 0 ≤ X₃
  t₉: l10(X₀, X₁, X₂, X₃) → l8(X₀, X₁, X₂, X₃) :|: X₀ ≤ 2 ∧ X₀+X₂ ≤ 8 ∧ X₀ ≤ 4 ∧ X₀ ≤ 4+X₃ ∧ X₂ ≤ 4 ∧ X₂ ≤ 4+X₃ ∧ X₂ ≤ X₀ ∧ 0 ≤ X₃
  t₁₀: l10(X₀, X₁, X₂, X₃) → l8(X₀, X₁, X₂, X₃) :|: 10 ≤ X₃ ∧ X₀+X₂ ≤ 8 ∧ X₀ ≤ 4 ∧ X₀ ≤ 4+X₃ ∧ X₂ ≤ 4 ∧ X₂ ≤ 4+X₃ ∧ X₂ ≤ X₀ ∧ 0 ≤ X₃
  t₁₅: l11(X₀, X₁, X₂, X₃) → l13(X₀, X₁, X₂, X₃) :|: 5 ≤ X₀ ∧ X₂ ≤ X₀
  t₁₁: l12(X₀, X₁, X₂, X₃) → l10(X₀, X₁, X₂, 1+X₃) :|: X₀+X₃ ≤ 13 ∧ X₂+X₃ ≤ 13 ∧ X₃ ≤ 9 ∧ X₀+X₂ ≤ 8 ∧ X₃ ≤ 6+X₀ ∧ X₀ ≤ 4 ∧ X₀ ≤ 4+X₃ ∧ X₂ ≤ 4 ∧ X₂ ≤ 4+X₃ ∧ 3 ≤ X₀ ∧ 3 ≤ X₀+X₃ ∧ X₂ ≤ X₀ ∧ 0 ≤ X₃
  t₁: l2(X₀, X₁, X₂, X₃) → l3(X₀, X₁, X₂, X₃)
  t₂: l3(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, X₃)
  t₄: l4(X₀, X₁, X₂, X₃) → l5(X₀, X₁, X₂, X₃)
  t₅: l5(X₀, X₁, X₂, X₃) → l6(X₂, X₁, X₂, X₃)
  t₆: l6(X₀, X₁, X₂, X₃) → l10(X₀, X₁, X₂, 0) :|: X₀ ≤ 4 ∧ X₂ ≤ X₀
  t₇: l6(X₀, X₁, X₂, X₃) → l11(X₀, X₁, X₂, X₃) :|: 5 ≤ X₀ ∧ X₂ ≤ X₀
  t₁₄: l7(X₀, X₁, X₂, X₃) → l6(X₁, X₁, X₂, X₃) :|: X₀+X₁ ≤ 9 ∧ X₁+X₂ ≤ 9 ∧ X₀+X₂ ≤ 8 ∧ X₁ ≤ 5 ∧ X₀ ≤ 4 ∧ X₂ ≤ 4 ∧ X₁ ≤ 3+X₃ ∧ X₀ ≤ 2+X₃ ∧ X₂ ≤ 2+X₃ ∧ X₁ ≤ 1+X₀ ∧ 1+X₀ ≤ X₁ ∧ 1+X₂ ≤ X₁ ∧ X₂ ≤ X₀ ∧ 0 ≤ X₃
  t₁₂: l8(X₀, X₁, X₂, X₃) → l9(X₀, 1+X₀, X₂, X₃) :|: X₀+X₂ ≤ 8 ∧ X₀ ≤ 4 ∧ X₂ ≤ 4 ∧ X₀ ≤ 2+X₃ ∧ X₂ ≤ 2+X₃ ∧ X₂ ≤ X₀ ∧ 0 ≤ X₃
  t₁₃: l9(X₀, X₁, X₂, X₃) → l7(X₀, X₁, X₂, X₃) :|: X₀+X₁ ≤ 9 ∧ X₁+X₂ ≤ 9 ∧ X₀+X₂ ≤ 8 ∧ X₁ ≤ 5 ∧ X₀ ≤ 4 ∧ X₂ ≤ 4 ∧ X₁ ≤ 3+X₃ ∧ X₀ ≤ 2+X₃ ∧ X₂ ≤ 2+X₃ ∧ X₁ ≤ 1+X₀ ∧ 1+X₀ ≤ X₁ ∧ 1+X₂ ≤ X₁ ∧ X₂ ≤ X₀ ∧ 0 ≤ X₃


MPRF for transition t₆: l6(X₀, X₁, X₂, X₃) → l10(X₀, X₁, X₂, 0) :|: X₀ ≤ 4 ∧ X₂ ≤ X₀ of depth 1:
  new bound:
    X₂+5 {O(n)}

  MPRF:
    • l10: [4-X₀]
    • l12: [4-X₀]
    • l6: [5-X₀]
    • l7: [5-X₁]
    • l8: [4-X₀]
    • l9: [5-X₁]




MPRF for transition t₉: l10(X₀, X₁, X₂, X₃) → l8(X₀, X₁, X₂, X₃) :|: X₀ ≤ 2 ∧ X₀+X₂ ≤ 8 ∧ X₀ ≤ 4 ∧ X₀ ≤ 4+X₃ ∧ X₂ ≤ 4 ∧ X₂ ≤ 4+X₃ ∧ X₂ ≤ X₀ ∧ 0 ≤ X₃ of depth 1:
  new bound:
    X₂+5 {O(n)}

  MPRF:
    • l10: [5-X₀]
    • l12: [5-X₀]
    • l6: [5-X₀]
    • l7: [5-X₁]
    • l8: [4-X₀]
    • l9: [5-X₁]




MPRF for transition t₁₀: l10(X₀, X₁, X₂, X₃) → l8(X₀, X₁, X₂, X₃) :|: 10 ≤ X₃ ∧ X₀+X₂ ≤ 8 ∧ X₀ ≤ 4 ∧ X₀ ≤ 4+X₃ ∧ X₂ ≤ 4 ∧ X₂ ≤ 4+X₃ ∧ X₂ ≤ X₀ ∧ 0 ≤ X₃ of depth 1:
  new bound:
    X₂+5 {O(n)}

  MPRF:
    • l10: [5-X₀]
    • l12: [5-X₀]
    • l6: [5-X₀]
    • l7: [5-X₁]
    • l8: [4-X₀]
    • l9: [5-X₁]




MPRF for transition t₁₂: l8(X₀, X₁, X₂, X₃) → l9(X₀, 1+X₀, X₂, X₃) :|: X₀+X₂ ≤ 8 ∧ X₀ ≤ 4 ∧ X₂ ≤ 4 ∧ X₀ ≤ 2+X₃ ∧ X₂ ≤ 2+X₃ ∧ X₂ ≤ X₀ ∧ 0 ≤ X₃ of depth 1:
  new bound:
    X₂+5 {O(n)}

  MPRF:
    • l10: [5-X₀]
    • l12: [5-X₀]
    • l6: [5-X₀]
    • l7: [5-X₁]
    • l8: [5-X₀]
    • l9: [4-X₀]




MPRF for transition t₁₃: l9(X₀, X₁, X₂, X₃) → l7(X₀, X₁, X₂, X₃) :|: X₀+X₁ ≤ 9 ∧ X₁+X₂ ≤ 9 ∧ X₀+X₂ ≤ 8 ∧ X₁ ≤ 5 ∧ X₀ ≤ 4 ∧ X₂ ≤ 4 ∧ X₁ ≤ 3+X₃ ∧ X₀ ≤ 2+X₃ ∧ X₂ ≤ 2+X₃ ∧ X₁ ≤ 1+X₀ ∧ 1+X₀ ≤ X₁ ∧ 1+X₂ ≤ X₁ ∧ X₂ ≤ X₀ ∧ 0 ≤ X₃ of depth 1:
  new bound:
    X₂+5 {O(n)}

  MPRF:
    • l10: [5-X₀]
    • l12: [5-X₀]
    • l6: [5-X₀]
    • l7: [4-X₀]
    • l8: [5-X₀]
    • l9: [5-X₀]




MPRF for transition t₁₄: l7(X₀, X₁, X₂, X₃) → l6(X₁, X₁, X₂, X₃) :|: X₀+X₁ ≤ 9 ∧ X₁+X₂ ≤ 9 ∧ X₀+X₂ ≤ 8 ∧ X₁ ≤ 5 ∧ X₀ ≤ 4 ∧ X₂ ≤ 4 ∧ X₁ ≤ 3+X₃ ∧ X₀ ≤ 2+X₃ ∧ X₂ ≤ 2+X₃ ∧ X₁ ≤ 1+X₀ ∧ 1+X₀ ≤ X₁ ∧ 1+X₂ ≤ X₁ ∧ X₂ ≤ X₀ ∧ 0 ≤ X₃ of depth 1:
  new bound:
    X₂+5 {O(n)}

  MPRF:
    • l10: [5-X₀]
    • l12: [5-X₀]
    • l6: [5-X₀]
    • l7: [5-X₀]
    • l8: [5-X₀]
    • l9: [5-X₀]




MPRF for transition t₈: l10(X₀, X₁, X₂, X₃) → l12(X₀, X₁, X₂, X₃) :|: X₃ ≤ 9 ∧ 3 ≤ X₀ ∧ X₀+X₂ ≤ 8 ∧ X₀ ≤ 4 ∧ X₀ ≤ 4+X₃ ∧ X₂ ≤ 4 ∧ X₂ ≤ 4+X₃ ∧ X₂ ≤ X₀ ∧ 0 ≤ X₃ of depth 1:
  new bound:
    10⋅X₂+60 {O(n)}

  MPRF:
    • l10: [10-X₃]
    • l12: [9-X₃]
    • l6: [10]
    • l7: [-X₃]
    • l8: [-X₃]
    • l9: [-X₃]




MPRF for transition t₁₁: l12(X₀, X₁, X₂, X₃) → l10(X₀, X₁, X₂, 1+X₃) :|: X₀+X₃ ≤ 13 ∧ X₂+X₃ ≤ 13 ∧ X₃ ≤ 9 ∧ X₀+X₂ ≤ 8 ∧ X₃ ≤ 6+X₀ ∧ X₀ ≤ 4 ∧ X₀ ≤ 4+X₃ ∧ X₂ ≤ 4 ∧ X₂ ≤ 4+X₃ ∧ 3 ≤ X₀ ∧ 3 ≤ X₀+X₃ ∧ X₂ ≤ X₀ ∧ 0 ≤ X₃ of depth 1:
  new bound:
    10⋅X₂+60 {O(n)}

  MPRF:
    • l10: [10-X₃]
    • l12: [10-X₃]
    • l6: [10]
    • l7: [-X₃]
    • l8: [-X₃]
    • l9: [-X₃]




All Bounds
Timebounds
  Overall timebound:26⋅X₂+158 {O(n)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: X₂+5 {O(n)}
    t₇: 1 {O(1)}
    t₈: 10⋅X₂+60 {O(n)}
    t₉: X₂+5 {O(n)}
    t₁₀: X₂+5 {O(n)}
    t₁₁: 10⋅X₂+60 {O(n)}
    t₁₂: X₂+5 {O(n)}
    t₁₃: X₂+5 {O(n)}
    t₁₄: X₂+5 {O(n)}
    t₁₅: 1 {O(1)}


Costbounds
  Overall costbound: 26⋅X₂+158 {O(n)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: X₂+5 {O(n)}
    t₇: 1 {O(1)}
    t₈: 10⋅X₂+60 {O(n)}
    t₉: X₂+5 {O(n)}
    t₁₀: X₂+5 {O(n)}
    t₁₁: 10⋅X₂+60 {O(n)}
    t₁₂: X₂+5 {O(n)}
    t₁₃: X₂+5 {O(n)}
    t₁₄: X₂+5 {O(n)}
    t₁₅: 1 {O(1)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₀, X₂: X₂ {O(n)}
    t₀, X₃: X₃ {O(n)}
    t₁, X₀: X₀ {O(n)}
    t₁, X₁: X₁ {O(n)}
    t₁, X₂: X₂ {O(n)}
    t₁, X₃: X₃ {O(n)}
    t₂, X₀: X₀ {O(n)}
    t₂, X₁: X₁ {O(n)}
    t₂, X₂: X₂ {O(n)}
    t₂, X₃: X₃ {O(n)}
    t₃, X₀: X₀ {O(n)}
    t₃, X₁: X₁ {O(n)}
    t₃, X₂: X₂ {O(n)}
    t₃, X₃: X₃ {O(n)}
    t₄, X₀: X₀ {O(n)}
    t₄, X₁: X₁ {O(n)}
    t₄, X₂: X₂ {O(n)}
    t₄, X₃: X₃ {O(n)}
    t₅, X₀: X₂ {O(n)}
    t₅, X₁: X₁ {O(n)}
    t₅, X₂: X₂ {O(n)}
    t₅, X₃: X₃ {O(n)}
    t₆, X₀: 2⋅X₂+9 {O(n)}
    t₆, X₁: 2⋅X₂+X₁+15 {O(n)}
    t₆, X₂: X₂ {O(n)}
    t₆, X₃: 0 {O(1)}
    t₇, X₀: 3⋅X₂+9 {O(n)}
    t₇, X₁: 2⋅X₂+X₁+15 {O(n)}
    t₇, X₂: 2⋅X₂ {O(n)}
    t₇, X₃: X₃+10 {O(n)}
    t₈, X₀: 4 {O(1)}
    t₈, X₁: 2⋅X₂+X₁+15 {O(n)}
    t₈, X₂: X₂ {O(n)}
    t₈, X₃: 9 {O(1)}
    t₉, X₀: 2⋅X₂+9 {O(n)}
    t₉, X₁: 2⋅X₂+X₁+15 {O(n)}
    t₉, X₂: X₂ {O(n)}
    t₉, X₃: 0 {O(1)}
    t₁₀, X₀: 4 {O(1)}
    t₁₀, X₁: 2⋅X₂+X₁+15 {O(n)}
    t₁₀, X₂: X₂ {O(n)}
    t₁₀, X₃: 10 {O(1)}
    t₁₁, X₀: 4 {O(1)}
    t₁₁, X₁: 2⋅X₂+X₁+15 {O(n)}
    t₁₁, X₂: X₂ {O(n)}
    t₁₁, X₃: 10 {O(1)}
    t₁₂, X₀: 2⋅X₂+9 {O(n)}
    t₁₂, X₁: 2⋅X₂+15 {O(n)}
    t₁₂, X₂: X₂ {O(n)}
    t₁₂, X₃: 10 {O(1)}
    t₁₃, X₀: 2⋅X₂+9 {O(n)}
    t₁₃, X₁: 2⋅X₂+15 {O(n)}
    t₁₃, X₂: X₂ {O(n)}
    t₁₃, X₃: 10 {O(1)}
    t₁₄, X₀: 2⋅X₂+9 {O(n)}
    t₁₄, X₁: 2⋅X₂+15 {O(n)}
    t₁₄, X₂: X₂ {O(n)}
    t₁₄, X₃: 10 {O(1)}
    t₁₅, X₀: 3⋅X₂+9 {O(n)}
    t₁₅, X₁: 2⋅X₂+X₁+15 {O(n)}
    t₁₅, X₂: 2⋅X₂ {O(n)}
    t₁₅, X₃: X₃+10 {O(n)}

