NO

# LoAT Proof:
NO

NO

Initial ITS

Start location: f1

Location map:
LoAT_sink -> 0
f1 -> 1
f2 -> 2
f300 -> 3

Rules:
   0: -2+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=1+i4, i5'=1+i5, i6'=-1+i6
   1: (-i6+i4 >= 0 /\ -i4+i5 >= 0 /\ -1+i1 == 0 /\ i6-i5 >= 0) /\ i1'=2, i3'=1+i3
   2: (-i4+i5 >= 0 /\ -1+i6-i4 >= 0 /\ -1+i1 == 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=1+i3, i7'=it2
   3: (-i4+i5 >= 0 /\ -1-i6+i5 >= 0 /\ -1+i1 == 0) /\ i1'=3, i3'=1+i3, i7'=it3
   4: (-1+i4-i5 >= 0 /\ -1+i1 == 0) /\ i1'=3, i3'=1+i3, i7'=it4

Dependency graph:
0 -> 0
1 -> 0

Step with 3

	Trace

	3[(-i4+i5 >= 0 /\ -1-i6+i5 >= 0 /\ -1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Backtrack

	Trace

	Blocked

	{3[T]}
	
Step with 1

	Trace

	1[(-i6+i4 >= 0 /\ -i4+i5 >= 0 /\ -1+i1 == 0 /\ i6-i5 >= 0)]
	
	Blocked

	{3[T]}
	{}
	
Step with 0

	Trace

	1[(-i6+i4 >= 0 /\ -i4+i5 >= 0 /\ -1+i1 == 0 /\ i6-i5 >= 0)]
	0[(-2+i1 == 0)]
	
	Blocked

	{3[T]}
	{}
	{}
	
Nonterm

	Certificate of Non-Termination

	Original rule:
	(-2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i5'=1+i5, i6'=-1+i6
	New rule:
	(-2+i1 >= 0 /\ -1+it24 >= 0 /\ 2-i1 >= 0) /\ i1'=0

		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Loop Acceleration

	Original rule:
	(-2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i5'=1+i5, i6'=-1+i6
	New rule:
	(-2+i1 >= 0 /\ -1+it24 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it24, i4'=i4+it24, i5'=i5+it24, i6'=i6-it24

		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-2+i1 >= 0 /\ -1+it24 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it24, i4'=i4+it24, i5'=i5+it24, i6'=i6-it24
	New rule:
	(-2+i1 >= 0 /\ -1+it24 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+it24, i4'=i4+it24, i5'=i5+it24, i6'=i6-it24

Start location: f1

Location map:
LoAT_sink -> 0
f1 -> 1
f2 -> 2
f300 -> 3

Rules:
   0: -2+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=1+i4, i5'=1+i5, i6'=-1+i6
   1: (-i6+i4 >= 0 /\ -i4+i5 >= 0 /\ -1+i1 == 0 /\ i6-i5 >= 0) /\ i1'=2, i3'=1+i3
   2: (-i4+i5 >= 0 /\ -1+i6-i4 >= 0 /\ -1+i1 == 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=1+i3, i7'=it2
   3: (-i4+i5 >= 0 /\ -1-i6+i5 >= 0 /\ -1+i1 == 0) /\ i1'=3, i3'=1+i3, i7'=it3
   4: (-1+i4-i5 >= 0 /\ -1+i1 == 0) /\ i1'=3, i3'=1+i3, i7'=it4
   5: (-2+i1 >= 0 /\ -1+it24 >= 0 /\ 2-i1 >= 0) /\ i1'=0
   6: (-2+i1 >= 0 /\ -1+it24 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+it24, i4'=i4+it24, i5'=i5+it24, i6'=i6-it24

Dependency graph:
0 -> 0, 0 -> 5, 0 -> 6
1 -> 0, 1 -> 5, 1 -> 6
6 -> 0, 6 -> 5

Step with 5

	Trace

	1[(-i6+i4 >= 0 /\ -i4+i5 >= 0 /\ -1+i1 == 0 /\ i6-i5 >= 0)]
	5[(-2+i1 >= 0 /\ -1+it24 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{3[T]}
	{}
	{5[T]}
	
Refute

	Counterexample

	(i1=1, i3=0, i4=0, i5=0, i6=0, i7=0)
	-1-> (i1=2, i3=1, i4=0, i5=0, i6=0, i7=0 )
	-5-> ( )
	
NO

Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
MAYBE


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃
  Temp_Vars:  E
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₁: l0(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, X₃) :|: X₂ ≤ X₀ ∧ X₀ ≤ X₁ ∧ X₁ ≤ X₂
  t₂: l0(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, E) :|: 1+X₀ ≤ X₂ ∧ X₀ ≤ X₁ ∧ X₁ ≤ X₂
  t₃: l0(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, E) :|: 1+X₂ ≤ X₁ ∧ X₀ ≤ X₁
  t₄: l0(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, E) :|: 1+X₁ ≤ X₀
  t₀: l1(X₀, X₁, X₂, X₃) → l1(1+X₀, 1+X₁, X₂-1, X₃)


Preprocessing
  Eliminate variables [E; X₃] that do not contribute to the problem


  Found invariant X₂ ≤ X₁ ∧ X₂ ≤ X₀ ∧ X₁ ≤ X₀ ∧ X₀ ≤ X₁ for location l1


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₅: l0(X₀, X₁, X₂) → l1(X₀, X₁, X₂) :|: X₂ ≤ X₀ ∧ X₀ ≤ X₁ ∧ X₁ ≤ X₂
  t₆: l0(X₀, X₁, X₂) → l2(X₀, X₁, X₂) :|: 1+X₀ ≤ X₂ ∧ X₀ ≤ X₁ ∧ X₁ ≤ X₂
  t₇: l0(X₀, X₁, X₂) → l2(X₀, X₁, X₂) :|: 1+X₂ ≤ X₁ ∧ X₀ ≤ X₁
  t₈: l0(X₀, X₁, X₂) → l2(X₀, X₁, X₂) :|: 1+X₁ ≤ X₀
  t₉: l1(X₀, X₁, X₂) → l1(1+X₀, 1+X₁, X₂-1) :|: X₁ ≤ X₀ ∧ X₂ ≤ X₀ ∧ X₀ ≤ X₁ ∧ X₂ ≤ X₁


  Found invariant X₂ ≤ X₁ ∧ X₂ ≤ X₀ ∧ X₁ ≤ X₂ ∧ X₀ ≤ X₂ ∧ X₁ ≤ X₀ ∧ X₀ ≤ X₁ for location l1


  Found invariant 2+X₂ ≤ X₁ ∧ 2+X₂ ≤ X₀ ∧ X₁ ≤ X₀ ∧ X₀ ≤ X₁ for location l1_v1


All Bounds
Timebounds
  Overall timebound:inf {Infinity}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: 1 {O(1)}
    t₈: 1 {O(1)}
    t₉: inf {Infinity}


Costbounds
  Overall costbound: inf {Infinity}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: 1 {O(1)}
    t₈: 1 {O(1)}
    t₉: inf {Infinity}


Sizebounds
    t₅, X₀: X₀ {O(n)}
    t₅, X₁: X₁ {O(n)}
    t₅, X₂: X₂ {O(n)}
    t₆, X₀: X₀ {O(n)}
    t₆, X₁: X₁ {O(n)}
    t₆, X₂: X₂ {O(n)}
    t₇, X₀: X₀ {O(n)}
    t₇, X₁: X₁ {O(n)}
    t₇, X₂: X₂ {O(n)}
    t₈, X₀: X₀ {O(n)}
    t₈, X₁: X₁ {O(n)}
    t₈, X₂: X₂ {O(n)}

