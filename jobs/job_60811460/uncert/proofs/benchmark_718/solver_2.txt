WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_speedpldi2_bb1_in/6,eval_speedpldi2_bb2_in/6,eval_speedpldi2_bb3_in/6]
1. non_recursive  : [eval_speedpldi2_stop/5]
2. non_recursive  : [eval_speedpldi2_bb4_in/5]
3. non_recursive  : [exit_location/1]
4. non_recursive  : [eval_speedpldi2_bb1_in_loop_cont/6]
5. non_recursive  : [eval_speedpldi2_2/5]
6. non_recursive  : [eval_speedpldi2_1/5]
7. non_recursive  : [eval_speedpldi2_0/5]
8. non_recursive  : [eval_speedpldi2_bb0_in/5]
9. non_recursive  : [eval_speedpldi2_start/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_speedpldi2_bb1_in/6
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_speedpldi2_bb1_in_loop_cont/6
5. SCC is partially evaluated into eval_speedpldi2_2/5
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into eval_speedpldi2_start/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_speedpldi2_bb1_in/6 
* CE 8 is refined into CE [11] 
* CE 7 is refined into CE [12] 
* CE 6 is refined into CE [13] 
* CE 5 is refined into CE [14] 


### Cost equations --> "Loop" of eval_speedpldi2_bb1_in/6 
* CEs [13] --> Loop 11 
* CEs [14] --> Loop 12 
* CEs [11] --> Loop 13 
* CEs [12] --> Loop 14 

### Ranking functions of CR eval_speedpldi2_bb1_in(V_m,V_v1_0,V_v2_0,B,C,D) 
* RF of phase [11,12]: [2*V_v1_0+V_v2_0-1]

#### Partial ranking functions of CR eval_speedpldi2_bb1_in(V_m,V_v1_0,V_v2_0,B,C,D) 
* Partial RF of phase [11,12]:
  - RF of loop [11:1]:
    V_m-V_v2_0 depends on loops [12:1] 
    V_v1_0
  - RF of loop [12:1]:
    -V_m+V_v2_0+1 depends on loops [11:1] 
    V_v2_0 depends on loops [11:1] 


### Specialization of cost equations eval_speedpldi2_bb1_in_loop_cont/6 
* CE 10 is refined into CE [15] 
* CE 9 is refined into CE [16] 


### Cost equations --> "Loop" of eval_speedpldi2_bb1_in_loop_cont/6 
* CEs [15] --> Loop 15 
* CEs [16] --> Loop 16 

### Ranking functions of CR eval_speedpldi2_bb1_in_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR eval_speedpldi2_bb1_in_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations eval_speedpldi2_2/5 
* CE 4 is refined into CE [17,18,19,20] 
* CE 2 is refined into CE [21] 
* CE 3 is refined into CE [22] 


### Cost equations --> "Loop" of eval_speedpldi2_2/5 
* CEs [18,20] --> Loop 17 
* CEs [19] --> Loop 18 
* CEs [21] --> Loop 19 
* CEs [22] --> Loop 20 
* CEs [17] --> Loop 21 

### Ranking functions of CR eval_speedpldi2_2(V_m,V_n,V_v1_0,V_v2_0,B) 

#### Partial ranking functions of CR eval_speedpldi2_2(V_m,V_n,V_v1_0,V_v2_0,B) 


### Specialization of cost equations eval_speedpldi2_start/5 
* CE 1 is refined into CE [23,24,25,26,27] 


### Cost equations --> "Loop" of eval_speedpldi2_start/5 
* CEs [27] --> Loop 22 
* CEs [26] --> Loop 23 
* CEs [25] --> Loop 24 
* CEs [24] --> Loop 25 
* CEs [23] --> Loop 26 

### Ranking functions of CR eval_speedpldi2_start(V_m,V_n,V_v1_0,V_v2_0,B) 

#### Partial ranking functions of CR eval_speedpldi2_start(V_m,V_n,V_v1_0,V_v2_0,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_speedpldi2_bb1_in(V_m,V_v1_0,V_v2_0,B,C,D):
* Chain [[11,12],14]: 1*it(11)+1*it(12)+0
  Such that:it(11) =< V_v1_0
aux(16) =< 2*V_v1_0+V_v2_0
aux(17) =< 2*V_v1_0+V_v2_0-D
it(11) =< aux(16)
it(12) =< aux(16)
it(11) =< aux(17)
it(12) =< aux(17)

  with precondition: [B=2,C=0,V_m>=1,V_v1_0>=1,V_v2_0>=0,V_m>=D,V_v1_0+V_v2_0>=D] 

* Chain [[11,12],13]: 1*it(11)+1*it(12)+0
  Such that:it(11) =< V_v1_0
aux(20) =< 2*V_v1_0+V_v2_0
it(11) =< aux(20)
it(12) =< aux(20)

  with precondition: [B=3,V_m>=1,V_v1_0>=1,V_v2_0>=0] 

* Chain [14]: 0
  with precondition: [V_v1_0=0,B=2,C=0,V_v2_0=D,V_m>=1,V_v2_0>=0] 

* Chain [13]: 0
  with precondition: [B=3,V_m>=1,V_v1_0>=0,V_v2_0>=0] 


#### Cost of chains of eval_speedpldi2_bb1_in_loop_cont(A,B,C,D,E,F):
* Chain [16]: 0
  with precondition: [A=2,B>=1,C>=0] 

* Chain [15]: 0
  with precondition: [A=3,B>=1,C>=0] 


#### Cost of chains of eval_speedpldi2_2(V_m,V_n,V_v1_0,V_v2_0,B):
* Chain [21]: 0
  with precondition: [V_n=0,V_m>=1] 

* Chain [20]: 0
  with precondition: [0>=V_m] 

* Chain [19]: 0
  with precondition: [0>=V_n+1] 

* Chain [18]: 0
  with precondition: [V_m>=1,V_n>=0] 

* Chain [17]: 2*s(1)+2*s(4)+0
  Such that:aux(21) =< V_n
aux(22) =< 2*V_n
s(1) =< aux(21)
s(1) =< aux(22)
s(4) =< aux(22)

  with precondition: [V_m>=1,V_n>=1] 


#### Cost of chains of eval_speedpldi2_start(V_m,V_n,V_v1_0,V_v2_0,B):
* Chain [26]: 0
  with precondition: [V_n=0,V_m>=1] 

* Chain [25]: 0
  with precondition: [0>=V_m] 

* Chain [24]: 0
  with precondition: [0>=V_n+1] 

* Chain [23]: 0
  with precondition: [V_m>=1,V_n>=0] 

* Chain [22]: 2*s(10)+2*s(11)+0
  Such that:s(8) =< V_n
s(9) =< 2*V_n
s(10) =< s(8)
s(10) =< s(9)
s(11) =< s(9)

  with precondition: [V_m>=1,V_n>=1] 


Closed-form bounds of eval_speedpldi2_start(V_m,V_n,V_v1_0,V_v2_0,B): 
-------------------------------------
* Chain [26] with precondition: [V_n=0,V_m>=1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [25] with precondition: [0>=V_m] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [24] with precondition: [0>=V_n+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [23] with precondition: [V_m>=1,V_n>=0] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [22] with precondition: [V_m>=1,V_n>=1] 
    - Upper bound: 6*V_n 
    - Complexity: n 

### Maximum cost of eval_speedpldi2_start(V_m,V_n,V_v1_0,V_v2_0,B): nat(2*V_n)*2+nat(V_n)*2 
Asymptotic class: n 
* Total analysis performed in 84 ms.

