WORST_CASE(Omega(n^1),O(n^1))

# LoAT Proof:
WORST_CASE(Omega(n^1),?)

WORST_CASE(Omega(n^1),?)
Initial ITS

Start location: eval_speedpldi2_start

Location map:
LoAT_sink -> 0
eval_speedpldi2_start -> 1
eval_speedpldi2_bb0_in -> 2
eval_speedpldi2_0 -> 3
eval_speedpldi2_1 -> 4
eval_speedpldi2_2 -> 5
eval_speedpldi2_bb1_in -> 6
eval_speedpldi2_bb4_in -> 7
eval_speedpldi2_bb2_in -> 8
eval_speedpldi2_bb3_in -> 9
eval_speedpldi2_stop -> 10

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: -2+i1 == 0 /\ i1'=3, i3'=1+i3
   2: -3+i1 == 0 /\ i1'=4, i3'=1+i3
   3: -4+i1 == 0 /\ i1'=5, i3'=1+i3
   4: (i4 > 0 /\ -5+i1 == 0 /\ i5 >= 0) /\ i1'=6, i3'=1+i3, i6'=i5, i7'=0
   5: (-5+i1 == 0 /\ i5 < 0) /\ i1'=7, i3'=1+i3
   6: (i4 <= 0 /\ -5+i1 == 0) /\ i1'=7, i3'=1+i3
   7: (i6 > 0 /\ -6+i1 == 0) /\ i1'=8, i3'=1+i3
   8: (i6 <= 0 /\ -6+i1 == 0) /\ i1'=7, i3'=1+i3
   9: (i7-i4 < 0 /\ -8+i1 == 0) /\ i1'=9, i3'=1+i3
  10: (i7-i4 >= 0 /\ -8+i1 == 0) /\ i1'=6, i3'=1+i3, i7'=0
  11: -9+i1 == 0 /\ i1'=6, i3'=1+i3, i6'=-1+i6, i7'=1+i7
  12: -7+i1 == 0 /\ i1'=10, i3'=1+i3

Dependency graph:
0 -> 1
1 -> 2
2 -> 3
3 -> 4, 3 -> 5, 3 -> 6
4 -> 7, 4 -> 8
5 -> 12
6 -> 12
7 -> 9, 7 -> 10
8 -> 12
9 -> 11
10 -> 7, 10 -> 8
11 -> 7, 11 -> 8

Chained Linear Paths

	Applied Chaining

	First rule:
	-1+i1 == 0 /\ i1'=2, i3'=1+i3
	Second rule:
	-2+i1 == 0 /\ i1'=3, i3'=1+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 0, 1
	
	Applied Chaining

	First rule:
	-3+i1 == 0 /\ i1'=4, i3'=1+i3
	Second rule:
	-4+i1 == 0 /\ i1'=5, i3'=1+i3
	New rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 2, 3
	
	Applied Chaining

	First rule:
	(-5+i1 == 0 /\ i5 < 0) /\ i1'=7, i3'=1+i3
	Second rule:
	-7+i1 == 0 /\ i1'=10, i3'=1+i3
	New rule:
	(0 == 0 /\ -5+i1 == 0 /\ i5 < 0) /\ i1'=10, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 5
	
	Applied Chaining

	First rule:
	(i4 <= 0 /\ -5+i1 == 0) /\ i1'=7, i3'=1+i3
	Second rule:
	-7+i1 == 0 /\ i1'=10, i3'=1+i3
	New rule:
	(0 == 0 /\ i4 <= 0 /\ -5+i1 == 0) /\ i1'=10, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 6
	
	Applied Chaining

	First rule:
	(i6 <= 0 /\ -6+i1 == 0) /\ i1'=7, i3'=1+i3
	Second rule:
	-7+i1 == 0 /\ i1'=10, i3'=1+i3
	New rule:
	(0 == 0 /\ i6 <= 0 /\ -6+i1 == 0) /\ i1'=10, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 8, 12
	
	Applied Chaining

	First rule:
	(i7-i4 < 0 /\ -8+i1 == 0) /\ i1'=9, i3'=1+i3
	Second rule:
	-9+i1 == 0 /\ i1'=6, i3'=1+i3, i6'=-1+i6, i7'=1+i7
	New rule:
	(0 == 0 /\ i7-i4 < 0 /\ -8+i1 == 0) /\ i1'=6, i3'=2+i3, i6'=-1+i6, i7'=1+i7
	
	Applied Deletion

	Removed the following rules: 9, 11
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	Second rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	
	Applied Deletion

	Removed the following rules: 13, 14

Start location: eval_speedpldi2_start

Location map:
LoAT_sink -> 0
eval_speedpldi2_start -> 1
eval_speedpldi2_bb0_in -> 2
eval_speedpldi2_0 -> 3
eval_speedpldi2_1 -> 4
eval_speedpldi2_2 -> 5
eval_speedpldi2_bb1_in -> 6
eval_speedpldi2_bb4_in -> 7
eval_speedpldi2_bb2_in -> 8
eval_speedpldi2_bb3_in -> 9
eval_speedpldi2_stop -> 10

Rules:
   4: (i4 > 0 /\ -5+i1 == 0 /\ i5 >= 0) /\ i1'=6, i3'=1+i3, i6'=i5, i7'=0
   7: (i6 > 0 /\ -6+i1 == 0) /\ i1'=8, i3'=1+i3
  10: (i7-i4 >= 0 /\ -8+i1 == 0) /\ i1'=6, i3'=1+i3, i7'=0
  15: (0 == 0 /\ -5+i1 == 0 /\ i5 < 0) /\ i1'=10, i3'=2+i3
  16: (0 == 0 /\ i4 <= 0 /\ -5+i1 == 0) /\ i1'=10, i3'=2+i3
  17: (0 == 0 /\ i6 <= 0 /\ -6+i1 == 0) /\ i1'=10, i3'=2+i3
  18: (0 == 0 /\ i7-i4 < 0 /\ -8+i1 == 0) /\ i1'=6, i3'=2+i3, i6'=-1+i6, i7'=1+i7
  19: (0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3

Dependency graph:
4 -> 7, 4 -> 17
7 -> 10, 7 -> 18
10 -> 7, 10 -> 17
18 -> 7, 18 -> 17
19 -> 4, 19 -> 15, 19 -> 16

Preprocessed Transitions

	Simplified Guard

	Original rule:
	(0 == 0 /\ -5+i1 == 0 /\ i5 < 0) /\ i1'=10, i3'=2+i3
	New rule:
	(-5+i1 == 0 /\ i5 < 0) /\ i1'=10, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ i4 <= 0 /\ -5+i1 == 0) /\ i1'=10, i3'=2+i3
	New rule:
	(i4 <= 0 /\ -5+i1 == 0) /\ i1'=10, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ i6 <= 0 /\ -6+i1 == 0) /\ i1'=10, i3'=2+i3
	New rule:
	(i6 <= 0 /\ -6+i1 == 0) /\ i1'=10, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ i7-i4 < 0 /\ -8+i1 == 0) /\ i1'=6, i3'=2+i3, i6'=-1+i6, i7'=1+i7
	New rule:
	(i7-i4 < 0 /\ -8+i1 == 0) /\ i1'=6, i3'=2+i3, i6'=-1+i6, i7'=1+i7
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	New rule:
	-1+i1 == 0 /\ i1'=5, i3'=4+i3

Start location: eval_speedpldi2_start

Location map:
LoAT_sink -> 0
eval_speedpldi2_start -> 1
eval_speedpldi2_bb0_in -> 2
eval_speedpldi2_0 -> 3
eval_speedpldi2_1 -> 4
eval_speedpldi2_2 -> 5
eval_speedpldi2_bb1_in -> 6
eval_speedpldi2_bb4_in -> 7
eval_speedpldi2_bb2_in -> 8
eval_speedpldi2_bb3_in -> 9
eval_speedpldi2_stop -> 10

Rules:
   4: (i4 > 0 /\ -5+i1 == 0 /\ i5 >= 0) /\ i1'=6, i3'=1+i3, i6'=i5, i7'=0
   7: (i6 > 0 /\ -6+i1 == 0) /\ i1'=8, i3'=1+i3
  10: (i7-i4 >= 0 /\ -8+i1 == 0) /\ i1'=6, i3'=1+i3, i7'=0
  20: (-5+i1 == 0 /\ i5 < 0) /\ i1'=10, i3'=2+i3
  21: (i4 <= 0 /\ -5+i1 == 0) /\ i1'=10, i3'=2+i3
  22: (i6 <= 0 /\ -6+i1 == 0) /\ i1'=10, i3'=2+i3
  23: (i7-i4 < 0 /\ -8+i1 == 0) /\ i1'=6, i3'=2+i3, i6'=-1+i6, i7'=1+i7
  24: -1+i1 == 0 /\ i1'=5, i3'=4+i3

Dependency graph:
4 -> 7, 4 -> 22
7 -> 10, 7 -> 23
10 -> 7, 10 -> 22
23 -> 7, 23 -> 22
24 -> 4, 24 -> 20, 24 -> 21

Step with 24

	Trace

	24[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 21

	Trace

	24[(-1+i1 == 0)]
	21[(i4 <= 0 /\ -5+i1 == 0)]
	
	Blocked

	{}
	{}
	{}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	
	Blocked

	{}
	{21[T]}
	
Step with 4

	Trace

	24[(-1+i1 == 0)]
	4[(i4 > 0 /\ -5+i1 == 0 /\ i5 >= 0)]
	
	Blocked

	{}
	{21[T]}
	{}
	
Step with 7

	Trace

	24[(-1+i1 == 0)]
	4[(i4 > 0 /\ -5+i1 == 0 /\ i5 >= 0)]
	7[(i6 > 0 /\ -6+i1 == 0)]
	
	Blocked

	{}
	{21[T]}
	{}
	{}
	
Step with 23

	Trace

	24[(-1+i1 == 0)]
	4[(i4 > 0 /\ -5+i1 == 0 /\ i5 >= 0)]
	7[(i6 > 0 /\ -6+i1 == 0)]
	23[(i7-i4 < 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{21[T]}
	{}
	{}
	{}
	
Poly(n^1)

Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ i6 > 0 /\ i7-i4 < 0 /\ -6+i1 == 0) /\ i1'=6, i3'=3+i3, i6'=-1+i6, i7'=1+i7
		New rule:
		(i6 > 0 /\ i7-i4 < 0 /\ -6+i1 == 0) /\ i1'=6, i3'=3+i3, i6'=-1+i6, i7'=1+i7

	Loop Acceleration

	Original rule:
	(i6 > 0 /\ i7-i4 < 0 /\ -6+i1 == 0) /\ i1'=6, i3'=3+i3, i6'=-1+i6, i7'=1+i7
	New rule:
	(-1+it31 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0) /\ i1'=i1, i3'=i3+3*it31, i6'=i6-it31, i7'=i7+it31

		i6 > 0 [0]: montonic decrease yields 1+i6-it31 > 0
		
		-6+i1 >= 0 [0]: unchanged
		
		6-i1 >= 0 [0]: unchanged
		
		-i7+i4 > 0 [0]: montonic decrease yields 1-i7+i4-it31 > 0
		
		Replacement map: {i6 > 0 -> 1+i6-it31 > 0, -6+i1 >= 0 -> -6+i1 >= 0, 6-i1 >= 0 -> 6-i1 >= 0, -i7+i4 > 0 -> 1-i7+i4-it31 > 0}

	Removed Trivial Updates

	Original rule:
	(-1+it31 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0) /\ i1'=i1, i3'=i3+3*it31, i6'=i6-it31, i7'=i7+it31
	New rule:
	(-1+it31 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0) /\ i3'=i3+3*it31, i6'=i6-it31, i7'=i7+it31

Start location: eval_speedpldi2_start

Location map:
LoAT_sink -> 0
eval_speedpldi2_start -> 1
eval_speedpldi2_bb0_in -> 2
eval_speedpldi2_0 -> 3
eval_speedpldi2_1 -> 4
eval_speedpldi2_2 -> 5
eval_speedpldi2_bb1_in -> 6
eval_speedpldi2_bb4_in -> 7
eval_speedpldi2_bb2_in -> 8
eval_speedpldi2_bb3_in -> 9
eval_speedpldi2_stop -> 10

Rules:
   4: (i4 > 0 /\ -5+i1 == 0 /\ i5 >= 0) /\ i1'=6, i3'=1+i3, i6'=i5, i7'=0
   7: (i6 > 0 /\ -6+i1 == 0) /\ i1'=8, i3'=1+i3
  10: (i7-i4 >= 0 /\ -8+i1 == 0) /\ i1'=6, i3'=1+i3, i7'=0
  20: (-5+i1 == 0 /\ i5 < 0) /\ i1'=10, i3'=2+i3
  21: (i4 <= 0 /\ -5+i1 == 0) /\ i1'=10, i3'=2+i3
  22: (i6 <= 0 /\ -6+i1 == 0) /\ i1'=10, i3'=2+i3
  23: (i7-i4 < 0 /\ -8+i1 == 0) /\ i1'=6, i3'=2+i3, i6'=-1+i6, i7'=1+i7
  24: -1+i1 == 0 /\ i1'=5, i3'=4+i3
  25: (-1+it31 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0) /\ i3'=i3+3*it31, i6'=i6-it31, i7'=i7+it31

Dependency graph:
4 -> 7, 4 -> 22, 4 -> 25
7 -> 10, 7 -> 23
10 -> 7, 10 -> 22, 10 -> 25
23 -> 7, 23 -> 22, 23 -> 25
24 -> 4, 24 -> 20, 24 -> 21
25 -> 7, 25 -> 22

	Trace

	24[(-1+i1 == 0)]
	4[(i4 > 0 /\ -5+i1 == 0 /\ i5 >= 0)]
	25[(-1+it31 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0)]
	
	Blocked

	{}
	{21[T]}
	{}
	{25[T]}
	
Step with 7

	Trace

	24[(-1+i1 == 0)]
	4[(i4 > 0 /\ -5+i1 == 0 /\ i5 >= 0)]
	25[(-1+it31 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0)]
	7[(i6 > 0 /\ -6+i1 == 0)]
	
	Blocked

	{}
	{21[T]}
	{}
	{25[T]}
	{}
	
Step with 23

	Trace

	24[(-1+i1 == 0)]
	4[(i4 > 0 /\ -5+i1 == 0 /\ i5 >= 0)]
	25[(-1+it31 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0)]
	7[(i6 > 0 /\ -6+i1 == 0)]
	23[(i7-i4 < 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{21[T]}
	{}
	{25[T]}
	{}
	{}
	
Covered

	Trace

	24[(-1+i1 == 0)]
	4[(i4 > 0 /\ -5+i1 == 0 /\ i5 >= 0)]
	25[(-1+it31 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0)]
	7[(i6 > 0 /\ -6+i1 == 0)]
	
	Blocked

	{}
	{21[T]}
	{}
	{25[T]}
	{23[T]}
	
Step with 10

	Trace

	24[(-1+i1 == 0)]
	4[(i4 > 0 /\ -5+i1 == 0 /\ i5 >= 0)]
	25[(-1+it31 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0)]
	7[(i6 > 0 /\ -6+i1 == 0)]
	10[(i7-i4 >= 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{21[T]}
	{}
	{25[T]}
	{23[T]}
	{}
	
Accelerate and Drop

	Certificate of Non-Termination

	Original rule:
	(i6 > 0 /\ i7-i4 >= 0 /\ -6+i1 == 0) /\ i1'=6, i3'=2+i3, i7'=0
	New rule:
	(i6 > 0 /\ i7-i4 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ i7 <= 0) /\ i1'=0

		i6 > 0 [0]: unchanged
		
		i7-i4 >= 0 [0]: eventual decrease yields (i7-i4 >= 0 /\ -i4 >= 0)
		
		i7-i4 >= 0 [1]: eventual increase yields (i7-i4 >= 0 /\ i7 <= 0)
		
		-6+i1 >= 0 [0]: unchanged
		
		6-i1 >= 0 [0]: unchanged
		
		Replacement map: {i6 > 0 -> i6 > 0, i7-i4 >= 0 -> (i7-i4 >= 0 /\ i7 <= 0), -6+i1 >= 0 -> -6+i1 >= 0, 6-i1 >= 0 -> 6-i1 >= 0}

		Simplified Guard

		Original rule:
		(0 == 0 /\ i6 > 0 /\ i7-i4 >= 0 /\ -6+i1 == 0) /\ i1'=6, i3'=2+i3, i7'=0
		New rule:
		(i6 > 0 /\ i7-i4 >= 0 /\ -6+i1 == 0) /\ i1'=6, i3'=2+i3, i7'=0

	Loop Acceleration

	Original rule:
	(i6 > 0 /\ i7-i4 >= 0 /\ -6+i1 == 0) /\ i1'=6, i3'=2+i3, i7'=0
	New rule:
	(-1+it99 >= 0 /\ i6 > 0 /\ i7-i4 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -i4 >= 0) /\ i1'=i1, i3'=i3+2*it99, i7'=0

		i6 > 0 [0]: unchanged
		
		i7-i4 >= 0 [0]: eventual decrease yields (i7-i4 >= 0 /\ -i4 >= 0)
		
		i7-i4 >= 0 [1]: eventual increase yields (i7-i4 >= 0 /\ i7 <= 0)
		
		-6+i1 >= 0 [0]: unchanged
		
		6-i1 >= 0 [0]: unchanged
		
		Replacement map: {i6 > 0 -> i6 > 0, i7-i4 >= 0 -> (i7-i4 >= 0 /\ -i4 >= 0), -6+i1 >= 0 -> -6+i1 >= 0, 6-i1 >= 0 -> 6-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-1+it99 >= 0 /\ i6 > 0 /\ i7-i4 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -i4 >= 0) /\ i1'=i1, i3'=i3+2*it99, i7'=0
	New rule:
	(-1+it99 >= 0 /\ i6 > 0 /\ i7-i4 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -i4 >= 0) /\ i3'=i3+2*it99, i7'=0

Start location: eval_speedpldi2_start

Location map:
LoAT_sink -> 0
eval_speedpldi2_start -> 1
eval_speedpldi2_bb0_in -> 2
eval_speedpldi2_0 -> 3
eval_speedpldi2_1 -> 4
eval_speedpldi2_2 -> 5
eval_speedpldi2_bb1_in -> 6
eval_speedpldi2_bb4_in -> 7
eval_speedpldi2_bb2_in -> 8
eval_speedpldi2_bb3_in -> 9
eval_speedpldi2_stop -> 10

Rules:
   4: (i4 > 0 /\ -5+i1 == 0 /\ i5 >= 0) /\ i1'=6, i3'=1+i3, i6'=i5, i7'=0
   7: (i6 > 0 /\ -6+i1 == 0) /\ i1'=8, i3'=1+i3
  10: (i7-i4 >= 0 /\ -8+i1 == 0) /\ i1'=6, i3'=1+i3, i7'=0
  20: (-5+i1 == 0 /\ i5 < 0) /\ i1'=10, i3'=2+i3
  21: (i4 <= 0 /\ -5+i1 == 0) /\ i1'=10, i3'=2+i3
  22: (i6 <= 0 /\ -6+i1 == 0) /\ i1'=10, i3'=2+i3
  23: (i7-i4 < 0 /\ -8+i1 == 0) /\ i1'=6, i3'=2+i3, i6'=-1+i6, i7'=1+i7
  24: -1+i1 == 0 /\ i1'=5, i3'=4+i3
  25: (-1+it31 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0) /\ i3'=i3+3*it31, i6'=i6-it31, i7'=i7+it31
  26: (i6 > 0 /\ i7-i4 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ i7 <= 0) /\ i1'=0
  27: (-1+it99 >= 0 /\ i6 > 0 /\ i7-i4 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -i4 >= 0) /\ i3'=i3+2*it99, i7'=0

Dependency graph:
4 -> 7, 4 -> 22, 4 -> 25, 4 -> 26, 4 -> 27
7 -> 10, 7 -> 23
10 -> 7, 10 -> 22, 10 -> 25, 10 -> 26, 10 -> 27
23 -> 7, 23 -> 22, 23 -> 25, 23 -> 26, 23 -> 27
24 -> 4, 24 -> 20, 24 -> 21
25 -> 7, 25 -> 22, 25 -> 26, 25 -> 27
27 -> 7, 27 -> 22, 27 -> 25, 27 -> 26

	Trace

	24[(-1+i1 == 0)]
	4[(i4 > 0 /\ -5+i1 == 0 /\ i5 >= 0)]
	25[(-1+it31 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0)]
	
	Blocked

	{}
	{21[T]}
	{}
	{25[T]}
	
Step with 22

	Trace

	24[(-1+i1 == 0)]
	4[(i4 > 0 /\ -5+i1 == 0 /\ i5 >= 0)]
	25[(-1+it31 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0)]
	22[(i6 <= 0 /\ -6+i1 == 0)]
	
	Blocked

	{}
	{21[T]}
	{}
	{25[T], 27[T]}
	{}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	4[(i4 > 0 /\ -5+i1 == 0 /\ i5 >= 0)]
	25[(-1+it31 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0)]
	
	Blocked

	{}
	{21[T]}
	{}
	{22[T], 25[T], 27[T]}
	
Step with 7

	Trace

	24[(-1+i1 == 0)]
	4[(i4 > 0 /\ -5+i1 == 0 /\ i5 >= 0)]
	25[(-1+it31 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0)]
	7[(i6 > 0 /\ -6+i1 == 0)]
	
	Blocked

	{}
	{21[T]}
	{}
	{22[T], 25[T], 26[T], 27[T]}
	{}
	
Step with 10

	Trace

	24[(-1+i1 == 0)]
	4[(i4 > 0 /\ -5+i1 == 0 /\ i5 >= 0)]
	25[(-1+it31 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0)]
	7[(i6 > 0 /\ -6+i1 == 0)]
	10[(i7-i4 >= 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{21[T]}
	{}
	{22[T], 25[T], 26[T], 27[T]}
	{}
	{}
	
Accelerate

		Extracted Implied Equalities

		Original rule:
		(0 == 0 /\ -1+it31 >= 0 /\ -6+i1 >= 0 /\ -6+i1 == 0 /\ 6-i1 >= 0 /\ i6-it31 > 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0 /\ i7-i4+it31 >= 0) /\ i1'=6, i3'=2+i3+3*it31, i6'=i6-it31, i7'=0
		New rule:
		(0 == 0 /\ -1+it31 >= 0 /\ -6+i1 >= 0 /\ -6+i1 == 0 /\ 6-i1 >= 0 /\ 6-i1 == 0 /\ i6-it31 > 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0 /\ i7-i4+it31 >= 0 /\ i7-i4+it31 == 0) /\ i1'=6, i3'=2+i3+3*it31, i6'=i6-it31, i7'=0
		
		Propagated Equalities

		Original rule:
		(0 == 0 /\ -1+it31 >= 0 /\ -6+i1 >= 0 /\ -6+i1 == 0 /\ 6-i1 >= 0 /\ 6-i1 == 0 /\ i6-it31 > 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0 /\ i7-i4+it31 >= 0 /\ i7-i4+it31 == 0) /\ i1'=6, i3'=2+i3+3*it31, i6'=i6-it31, i7'=0
		New rule:
		(0 >= 0 /\ 0 == 0 /\ 1 > 0 /\ -6+i1 >= 0 /\ -6+i1 == 0 /\ 6-i1 >= 0 /\ 6-i1 == 0 /\ -1-i7+i4 >= 0 /\ 1+i6+i7-i4 > 0 /\ i6+i7-i4 > 0) /\ i1'=6, i3'=2+i3-3*i7+3*i4, i6'=i6+i7-i4, i7'=0
		
			propagated equality it31 = -i7+i4
			
		Simplified Guard

		Original rule:
		(0 >= 0 /\ 0 == 0 /\ 1 > 0 /\ -6+i1 >= 0 /\ -6+i1 == 0 /\ 6-i1 >= 0 /\ 6-i1 == 0 /\ -1-i7+i4 >= 0 /\ 1+i6+i7-i4 > 0 /\ i6+i7-i4 > 0) /\ i1'=6, i3'=2+i3-3*i7+3*i4, i6'=i6+i7-i4, i7'=0
		New rule:
		(-6+i1 >= 0 /\ -6+i1 == 0 /\ 6-i1 >= 0 /\ 6-i1 == 0 /\ -1-i7+i4 >= 0 /\ 1+i6+i7-i4 > 0 /\ i6+i7-i4 > 0) /\ i1'=6, i3'=2+i3-3*i7+3*i4, i6'=i6+i7-i4, i7'=0

	Loop Acceleration

	Original rule:
	(-6+i1 >= 0 /\ -6+i1 == 0 /\ 6-i1 >= 0 /\ 6-i1 == 0 /\ -1-i7+i4 >= 0 /\ 1+i6+i7-i4 > 0 /\ i6+i7-i4 > 0) /\ i1'=6, i3'=2+i3-3*i7+3*i4, i6'=i6+i7-i4, i7'=0
	New rule:
	(i6+i7-2*i4 > 0 /\ -1+it134 >= 0 /\ 1+i6+i7-2*i4 > 0 /\ i6-(-1+it134)*i4+i7-2*i4 > 0 /\ 1+i6-(-1+it134)*i4+i7-2*i4 > 0 /\ -1+i4 >= 0 /\ -6+i1 >= 0 /\ -6+i1 == 0 /\ 6-i1 >= 0 /\ 6-i1 == 0 /\ -1-i7+i4 >= 0 /\ 1+i6+i7-i4 > 0 /\ i6+i7-i4 > 0) /\ i1'=i1, i3'=2+i3-3*i7+3*i4+2*it134+3*i4*it134, i6'=i6+i7-i4-i4*it134, i7'=0

		-6+i1 >= 0 [0]: unchanged
		
		6-i1 >= 0 [0]: unchanged
		
		-1-i7+i4 >= 0 [0]: eventual decrease yields (-1+i4 >= 0 /\ -1-i7+i4 >= 0)
		
		-1-i7+i4 >= 0 [1]: eventual increase yields (-1-i7+i4 >= 0 /\ -i7 <= 0)
		
		1+i6+i7-i4 > 0 [0]: montonic decrease yields (1+i6-(-1+it134)*i4-i4 > 0 /\ 1+i6+i7-i4 > 0), dependencies: i6+i7-i4 > 0
		
		1+i6+i7-i4 > 0 [1]: eventual decrease yields (1+i6-(-1+it134)*i4-i4 > 0 /\ 1+i6+i7-i4 > 0)
		
		1+i6+i7-i4 > 0 [2]: eventual increase yields (i4 <= 0 /\ 1+i6+i7-i4 > 0)
		
		i6+i7-i4 > 0 [0]: eventual decrease yields (i6-(-1+it134)*i4-i4 > 0 /\ i6+i7-i4 > 0)
		
		i6+i7-i4 > 0 [1]: eventual increase yields (i4 <= 0 /\ i6+i7-i4 > 0)
		
		Replacement map: {-6+i1 >= 0 -> -6+i1 >= 0, 6-i1 >= 0 -> 6-i1 >= 0, -1-i7+i4 >= 0 -> (-1+i4 >= 0 /\ -1-i7+i4 >= 0), 1+i6+i7-i4 > 0 -> (1+i6-(-1+it134)*i4-i4 > 0 /\ 1+i6+i7-i4 > 0), i6+i7-i4 > 0 -> (i6-(-1+it134)*i4-i4 > 0 /\ i6+i7-i4 > 0)}

	Removed Trivial Updates

	Original rule:
	(i6+i7-2*i4 > 0 /\ -1+it134 >= 0 /\ 1+i6+i7-2*i4 > 0 /\ i6-(-1+it134)*i4+i7-2*i4 > 0 /\ 1+i6-(-1+it134)*i4+i7-2*i4 > 0 /\ -1+i4 >= 0 /\ -6+i1 >= 0 /\ -6+i1 == 0 /\ 6-i1 >= 0 /\ 6-i1 == 0 /\ -1-i7+i4 >= 0 /\ 1+i6+i7-i4 > 0 /\ i6+i7-i4 > 0) /\ i1'=i1, i3'=2+i3-3*i7+3*i4+2*it134+3*i4*it134, i6'=i6+i7-i4-i4*it134, i7'=0
	New rule:
	(i6+i7-2*i4 > 0 /\ -1+it134 >= 0 /\ 1+i6+i7-2*i4 > 0 /\ i6-(-1+it134)*i4+i7-2*i4 > 0 /\ 1+i6-(-1+it134)*i4+i7-2*i4 > 0 /\ -1+i4 >= 0 /\ -6+i1 >= 0 /\ -6+i1 == 0 /\ 6-i1 >= 0 /\ 6-i1 == 0 /\ -1-i7+i4 >= 0 /\ 1+i6+i7-i4 > 0 /\ i6+i7-i4 > 0) /\ i3'=2+i3-3*i7+3*i4+2*it134+3*i4*it134, i6'=i6+i7-i4-i4*it134, i7'=0

Start location: eval_speedpldi2_start

Location map:
LoAT_sink -> 0
eval_speedpldi2_start -> 1
eval_speedpldi2_bb0_in -> 2
eval_speedpldi2_0 -> 3
eval_speedpldi2_1 -> 4
eval_speedpldi2_2 -> 5
eval_speedpldi2_bb1_in -> 6
eval_speedpldi2_bb4_in -> 7
eval_speedpldi2_bb2_in -> 8
eval_speedpldi2_bb3_in -> 9
eval_speedpldi2_stop -> 10

Rules:
   4: (i4 > 0 /\ -5+i1 == 0 /\ i5 >= 0) /\ i1'=6, i3'=1+i3, i6'=i5, i7'=0
   7: (i6 > 0 /\ -6+i1 == 0) /\ i1'=8, i3'=1+i3
  10: (i7-i4 >= 0 /\ -8+i1 == 0) /\ i1'=6, i3'=1+i3, i7'=0
  20: (-5+i1 == 0 /\ i5 < 0) /\ i1'=10, i3'=2+i3
  21: (i4 <= 0 /\ -5+i1 == 0) /\ i1'=10, i3'=2+i3
  22: (i6 <= 0 /\ -6+i1 == 0) /\ i1'=10, i3'=2+i3
  23: (i7-i4 < 0 /\ -8+i1 == 0) /\ i1'=6, i3'=2+i3, i6'=-1+i6, i7'=1+i7
  24: -1+i1 == 0 /\ i1'=5, i3'=4+i3
  25: (-1+it31 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0) /\ i3'=i3+3*it31, i6'=i6-it31, i7'=i7+it31
  26: (i6 > 0 /\ i7-i4 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ i7 <= 0) /\ i1'=0
  27: (-1+it99 >= 0 /\ i6 > 0 /\ i7-i4 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -i4 >= 0) /\ i3'=i3+2*it99, i7'=0
  28: (i6+i7-2*i4 > 0 /\ -1+it134 >= 0 /\ 1+i6+i7-2*i4 > 0 /\ i6-(-1+it134)*i4+i7-2*i4 > 0 /\ 1+i6-(-1+it134)*i4+i7-2*i4 > 0 /\ -1+i4 >= 0 /\ -6+i1 >= 0 /\ -6+i1 == 0 /\ 6-i1 >= 0 /\ 6-i1 == 0 /\ -1-i7+i4 >= 0 /\ 1+i6+i7-i4 > 0 /\ i6+i7-i4 > 0) /\ i3'=2+i3-3*i7+3*i4+2*it134+3*i4*it134, i6'=i6+i7-i4-i4*it134, i7'=0

Dependency graph:
4 -> 7, 4 -> 22, 4 -> 25, 4 -> 26, 4 -> 27, 4 -> 28
7 -> 10, 7 -> 23
10 -> 7, 10 -> 22, 10 -> 25, 10 -> 26, 10 -> 27, 10 -> 28
23 -> 7, 23 -> 22, 23 -> 25, 23 -> 26, 23 -> 27, 23 -> 28
24 -> 4, 24 -> 20, 24 -> 21
25 -> 7, 25 -> 22, 25 -> 26, 25 -> 27
27 -> 7, 27 -> 22, 27 -> 25, 27 -> 26, 27 -> 28
28 -> 7, 28 -> 22, 28 -> 25, 28 -> 26, 28 -> 27

	Trace

	24[(-1+i1 == 0)]
	4[(i4 > 0 /\ -5+i1 == 0 /\ i5 >= 0)]
	28[(i6+i7-2*i4 > 0 /\ -1+it134 >= 0 /\ 1+i6+i7-2*i4 > 0 /\ i6-(-1+it134)*i4+i7-2*i4 > 0 /\ 1+i6-(-1+it134)*i4+i7-2*i4 > 0 /\ -1+i4 >= 0 /\ -6+i1 >= 0 /\ -6+i1 == 0 /\ 6-i1 >= 0 /\ 6-i1 == 0 /\ -1-i7+i4 >= 0 /\ 1+i6+i7-i4 > 0 /\ i6+i7-i4 > 0)]
	
	Blocked

	{}
	{21[T]}
	{}
	{28[T]}
	
Step with 25

	Trace

	24[(-1+i1 == 0)]
	4[(i4 > 0 /\ -5+i1 == 0 /\ i5 >= 0)]
	28[(i6+i7-2*i4 > 0 /\ -1+it134 >= 0 /\ 1+i6+i7-2*i4 > 0 /\ i6-(-1+it134)*i4+i7-2*i4 > 0 /\ 1+i6-(-1+it134)*i4+i7-2*i4 > 0 /\ -1+i4 >= 0 /\ -6+i1 >= 0 /\ -6+i1 == 0 /\ 6-i1 >= 0 /\ 6-i1 == 0 /\ -1-i7+i4 >= 0 /\ 1+i6+i7-i4 > 0 /\ i6+i7-i4 > 0)]
	25[(-1+it31 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0)]
	
	Blocked

	{}
	{21[T]}
	{}
	{26[T], 27[T], 28[T]}
	{25[T]}
	
Step with 22

	Trace

	24[(-1+i1 == 0)]
	4[(i4 > 0 /\ -5+i1 == 0 /\ i5 >= 0)]
	28[(i6+i7-2*i4 > 0 /\ -1+it134 >= 0 /\ 1+i6+i7-2*i4 > 0 /\ i6-(-1+it134)*i4+i7-2*i4 > 0 /\ 1+i6-(-1+it134)*i4+i7-2*i4 > 0 /\ -1+i4 >= 0 /\ -6+i1 >= 0 /\ -6+i1 == 0 /\ 6-i1 >= 0 /\ 6-i1 == 0 /\ -1-i7+i4 >= 0 /\ 1+i6+i7-i4 > 0 /\ i6+i7-i4 > 0)]
	25[(-1+it31 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0)]
	22[(i6 <= 0 /\ -6+i1 == 0)]
	
	Blocked

	{}
	{21[T]}
	{}
	{26[T], 27[T], 28[T]}
	{25[T], 26[T]}
	{}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	4[(i4 > 0 /\ -5+i1 == 0 /\ i5 >= 0)]
	28[(i6+i7-2*i4 > 0 /\ -1+it134 >= 0 /\ 1+i6+i7-2*i4 > 0 /\ i6-(-1+it134)*i4+i7-2*i4 > 0 /\ 1+i6-(-1+it134)*i4+i7-2*i4 > 0 /\ -1+i4 >= 0 /\ -6+i1 >= 0 /\ -6+i1 == 0 /\ 6-i1 >= 0 /\ 6-i1 == 0 /\ -1-i7+i4 >= 0 /\ 1+i6+i7-i4 > 0 /\ i6+i7-i4 > 0)]
	25[(-1+it31 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0)]
	
	Blocked

	{}
	{21[T]}
	{}
	{26[T], 27[T], 28[T]}
	{22[T], 25[T], 26[T]}
	
Step with 7

	Trace

	24[(-1+i1 == 0)]
	4[(i4 > 0 /\ -5+i1 == 0 /\ i5 >= 0)]
	28[(i6+i7-2*i4 > 0 /\ -1+it134 >= 0 /\ 1+i6+i7-2*i4 > 0 /\ i6-(-1+it134)*i4+i7-2*i4 > 0 /\ 1+i6-(-1+it134)*i4+i7-2*i4 > 0 /\ -1+i4 >= 0 /\ -6+i1 >= 0 /\ -6+i1 == 0 /\ 6-i1 >= 0 /\ 6-i1 == 0 /\ -1-i7+i4 >= 0 /\ 1+i6+i7-i4 > 0 /\ i6+i7-i4 > 0)]
	25[(-1+it31 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0)]
	7[(i6 > 0 /\ -6+i1 == 0)]
	
	Blocked

	{}
	{21[T]}
	{}
	{26[T], 27[T], 28[T]}
	{22[T], 25[T], 26[T], 27[T]}
	{}
	
Step with 23

	Trace

	24[(-1+i1 == 0)]
	4[(i4 > 0 /\ -5+i1 == 0 /\ i5 >= 0)]
	28[(i6+i7-2*i4 > 0 /\ -1+it134 >= 0 /\ 1+i6+i7-2*i4 > 0 /\ i6-(-1+it134)*i4+i7-2*i4 > 0 /\ 1+i6-(-1+it134)*i4+i7-2*i4 > 0 /\ -1+i4 >= 0 /\ -6+i1 >= 0 /\ -6+i1 == 0 /\ 6-i1 >= 0 /\ 6-i1 == 0 /\ -1-i7+i4 >= 0 /\ 1+i6+i7-i4 > 0 /\ i6+i7-i4 > 0)]
	25[(-1+it31 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0)]
	7[(i6 > 0 /\ -6+i1 == 0)]
	23[(i7-i4 < 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{21[T]}
	{}
	{26[T], 27[T], 28[T]}
	{22[T], 25[T], 26[T], 27[T]}
	{}
	{}
	
Covered

	Trace

	24[(-1+i1 == 0)]
	4[(i4 > 0 /\ -5+i1 == 0 /\ i5 >= 0)]
	28[(i6+i7-2*i4 > 0 /\ -1+it134 >= 0 /\ 1+i6+i7-2*i4 > 0 /\ i6-(-1+it134)*i4+i7-2*i4 > 0 /\ 1+i6-(-1+it134)*i4+i7-2*i4 > 0 /\ -1+i4 >= 0 /\ -6+i1 >= 0 /\ -6+i1 == 0 /\ 6-i1 >= 0 /\ 6-i1 == 0 /\ -1-i7+i4 >= 0 /\ 1+i6+i7-i4 > 0 /\ i6+i7-i4 > 0)]
	25[(-1+it31 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0)]
	7[(i6 > 0 /\ -6+i1 == 0)]
	
	Blocked

	{}
	{21[T]}
	{}
	{26[T], 27[T], 28[T]}
	{22[T], 25[T], 26[T], 27[T]}
	{23[T]}
	
Step with 10

	Trace

	24[(-1+i1 == 0)]
	4[(i4 > 0 /\ -5+i1 == 0 /\ i5 >= 0)]
	28[(i6+i7-2*i4 > 0 /\ -1+it134 >= 0 /\ 1+i6+i7-2*i4 > 0 /\ i6-(-1+it134)*i4+i7-2*i4 > 0 /\ 1+i6-(-1+it134)*i4+i7-2*i4 > 0 /\ -1+i4 >= 0 /\ -6+i1 >= 0 /\ -6+i1 == 0 /\ 6-i1 >= 0 /\ 6-i1 == 0 /\ -1-i7+i4 >= 0 /\ 1+i6+i7-i4 > 0 /\ i6+i7-i4 > 0)]
	25[(-1+it31 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0)]
	7[(i6 > 0 /\ -6+i1 == 0)]
	10[(i7-i4 >= 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{21[T]}
	{}
	{26[T], 27[T], 28[T]}
	{22[T], 25[T], 26[T], 27[T]}
	{23[T]}
	{}
	
Covered

	Trace

	24[(-1+i1 == 0)]
	4[(i4 > 0 /\ -5+i1 == 0 /\ i5 >= 0)]
	28[(i6+i7-2*i4 > 0 /\ -1+it134 >= 0 /\ 1+i6+i7-2*i4 > 0 /\ i6-(-1+it134)*i4+i7-2*i4 > 0 /\ 1+i6-(-1+it134)*i4+i7-2*i4 > 0 /\ -1+i4 >= 0 /\ -6+i1 >= 0 /\ -6+i1 == 0 /\ 6-i1 >= 0 /\ 6-i1 == 0 /\ -1-i7+i4 >= 0 /\ 1+i6+i7-i4 > 0 /\ i6+i7-i4 > 0)]
	25[(-1+it31 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0)]
	7[(i6 > 0 /\ -6+i1 == 0)]
	
	Blocked

	{}
	{21[T]}
	{}
	{26[T], 27[T], 28[T]}
	{22[T], 25[T], 26[T], 27[T]}
	{10[T], 23[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	4[(i4 > 0 /\ -5+i1 == 0 /\ i5 >= 0)]
	28[(i6+i7-2*i4 > 0 /\ -1+it134 >= 0 /\ 1+i6+i7-2*i4 > 0 /\ i6-(-1+it134)*i4+i7-2*i4 > 0 /\ 1+i6-(-1+it134)*i4+i7-2*i4 > 0 /\ -1+i4 >= 0 /\ -6+i1 >= 0 /\ -6+i1 == 0 /\ 6-i1 >= 0 /\ 6-i1 == 0 /\ -1-i7+i4 >= 0 /\ 1+i6+i7-i4 > 0 /\ i6+i7-i4 > 0)]
	25[(-1+it31 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0)]
	
	Blocked

	{}
	{21[T]}
	{}
	{26[T], 27[T], 28[T]}
	{7[T], 22[T], 25[T], 26[T], 27[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	4[(i4 > 0 /\ -5+i1 == 0 /\ i5 >= 0)]
	28[(i6+i7-2*i4 > 0 /\ -1+it134 >= 0 /\ 1+i6+i7-2*i4 > 0 /\ i6-(-1+it134)*i4+i7-2*i4 > 0 /\ 1+i6-(-1+it134)*i4+i7-2*i4 > 0 /\ -1+i4 >= 0 /\ -6+i1 >= 0 /\ -6+i1 == 0 /\ 6-i1 >= 0 /\ 6-i1 == 0 /\ -1-i7+i4 >= 0 /\ 1+i6+i7-i4 > 0 /\ i6+i7-i4 > 0)]
	
	Blocked

	{}
	{21[T]}
	{}
	{25[T], 26[T], 27[T], 28[T]}
	
Step with 7

	Trace

	24[(-1+i1 == 0)]
	4[(i4 > 0 /\ -5+i1 == 0 /\ i5 >= 0)]
	28[(i6+i7-2*i4 > 0 /\ -1+it134 >= 0 /\ 1+i6+i7-2*i4 > 0 /\ i6-(-1+it134)*i4+i7-2*i4 > 0 /\ 1+i6-(-1+it134)*i4+i7-2*i4 > 0 /\ -1+i4 >= 0 /\ -6+i1 >= 0 /\ -6+i1 == 0 /\ 6-i1 >= 0 /\ 6-i1 == 0 /\ -1-i7+i4 >= 0 /\ 1+i6+i7-i4 > 0 /\ i6+i7-i4 > 0)]
	7[(i6 > 0 /\ -6+i1 == 0)]
	
	Blocked

	{}
	{21[T]}
	{}
	{25[T], 26[T], 27[T], 28[T]}
	{}
	
Step with 23

	Trace

	24[(-1+i1 == 0)]
	4[(i4 > 0 /\ -5+i1 == 0 /\ i5 >= 0)]
	28[(i6+i7-2*i4 > 0 /\ -1+it134 >= 0 /\ 1+i6+i7-2*i4 > 0 /\ i6-(-1+it134)*i4+i7-2*i4 > 0 /\ 1+i6-(-1+it134)*i4+i7-2*i4 > 0 /\ -1+i4 >= 0 /\ -6+i1 >= 0 /\ -6+i1 == 0 /\ 6-i1 >= 0 /\ 6-i1 == 0 /\ -1-i7+i4 >= 0 /\ 1+i6+i7-i4 > 0 /\ i6+i7-i4 > 0)]
	7[(i6 > 0 /\ -6+i1 == 0)]
	23[(i7-i4 < 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{21[T]}
	{}
	{25[T], 26[T], 27[T], 28[T]}
	{10[T]}
	{}
	
Covered

	Trace

	24[(-1+i1 == 0)]
	4[(i4 > 0 /\ -5+i1 == 0 /\ i5 >= 0)]
	28[(i6+i7-2*i4 > 0 /\ -1+it134 >= 0 /\ 1+i6+i7-2*i4 > 0 /\ i6-(-1+it134)*i4+i7-2*i4 > 0 /\ 1+i6-(-1+it134)*i4+i7-2*i4 > 0 /\ -1+i4 >= 0 /\ -6+i1 >= 0 /\ -6+i1 == 0 /\ 6-i1 >= 0 /\ 6-i1 == 0 /\ -1-i7+i4 >= 0 /\ 1+i6+i7-i4 > 0 /\ i6+i7-i4 > 0)]
	7[(i6 > 0 /\ -6+i1 == 0)]
	
	Blocked

	{}
	{21[T]}
	{}
	{25[T], 26[T], 27[T], 28[T]}
	{10[T], 23[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	4[(i4 > 0 /\ -5+i1 == 0 /\ i5 >= 0)]
	28[(i6+i7-2*i4 > 0 /\ -1+it134 >= 0 /\ 1+i6+i7-2*i4 > 0 /\ i6-(-1+it134)*i4+i7-2*i4 > 0 /\ 1+i6-(-1+it134)*i4+i7-2*i4 > 0 /\ -1+i4 >= 0 /\ -6+i1 >= 0 /\ -6+i1 == 0 /\ 6-i1 >= 0 /\ 6-i1 == 0 /\ -1-i7+i4 >= 0 /\ 1+i6+i7-i4 > 0 /\ i6+i7-i4 > 0)]
	
	Blocked

	{}
	{21[T]}
	{}
	{7[T], 25[T], 26[T], 27[T], 28[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	4[(i4 > 0 /\ -5+i1 == 0 /\ i5 >= 0)]
	
	Blocked

	{}
	{21[T]}
	{28[T]}
	
Step with 7

	Trace

	24[(-1+i1 == 0)]
	4[(i4 > 0 /\ -5+i1 == 0 /\ i5 >= 0)]
	7[(i6 > 0 /\ -6+i1 == 0)]
	
	Blocked

	{}
	{21[T]}
	{28[T]}
	{}
	
Step with 23

	Trace

	24[(-1+i1 == 0)]
	4[(i4 > 0 /\ -5+i1 == 0 /\ i5 >= 0)]
	7[(i6 > 0 /\ -6+i1 == 0)]
	23[(i7-i4 < 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{21[T]}
	{28[T]}
	{}
	{}
	
Covered

	Trace

	24[(-1+i1 == 0)]
	4[(i4 > 0 /\ -5+i1 == 0 /\ i5 >= 0)]
	7[(i6 > 0 /\ -6+i1 == 0)]
	
	Blocked

	{}
	{21[T]}
	{28[T]}
	{23[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	4[(i4 > 0 /\ -5+i1 == 0 /\ i5 >= 0)]
	
	Blocked

	{}
	{21[T]}
	{7[T], 28[T]}
	
Step with 22

	Trace

	24[(-1+i1 == 0)]
	4[(i4 > 0 /\ -5+i1 == 0 /\ i5 >= 0)]
	22[(i6 <= 0 /\ -6+i1 == 0)]
	
	Blocked

	{}
	{21[T]}
	{7[T], 28[T]}
	{}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	4[(i4 > 0 /\ -5+i1 == 0 /\ i5 >= 0)]
	
	Blocked

	{}
	{21[T]}
	{7[T], 22[T], 28[T]}
	
Step with 25

	Trace

	24[(-1+i1 == 0)]
	4[(i4 > 0 /\ -5+i1 == 0 /\ i5 >= 0)]
	25[(-1+it31 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0)]
	
	Blocked

	{}
	{21[T]}
	{7[T], 22[T], 27[T], 28[T]}
	{25[T]}
	
Step with 22

	Trace

	24[(-1+i1 == 0)]
	4[(i4 > 0 /\ -5+i1 == 0 /\ i5 >= 0)]
	25[(-1+it31 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0)]
	22[(i6 <= 0 /\ -6+i1 == 0)]
	
	Blocked

	{}
	{21[T]}
	{7[T], 22[T], 27[T], 28[T]}
	{25[T], 26[T]}
	{}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	4[(i4 > 0 /\ -5+i1 == 0 /\ i5 >= 0)]
	25[(-1+it31 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0)]
	
	Blocked

	{}
	{21[T]}
	{7[T], 22[T], 27[T], 28[T]}
	{22[T], 25[T], 26[T]}
	
Step with 7

	Trace

	24[(-1+i1 == 0)]
	4[(i4 > 0 /\ -5+i1 == 0 /\ i5 >= 0)]
	25[(-1+it31 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0)]
	7[(i6 > 0 /\ -6+i1 == 0)]
	
	Blocked

	{}
	{21[T]}
	{7[T], 22[T], 27[T], 28[T]}
	{22[T], 25[T], 26[T]}
	{}
	
Step with 10

	Trace

	24[(-1+i1 == 0)]
	4[(i4 > 0 /\ -5+i1 == 0 /\ i5 >= 0)]
	25[(-1+it31 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0)]
	7[(i6 > 0 /\ -6+i1 == 0)]
	10[(i7-i4 >= 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{21[T]}
	{7[T], 22[T], 27[T], 28[T]}
	{22[T], 25[T], 26[T]}
	{}
	{}
	
Covered

	Trace

	24[(-1+i1 == 0)]
	4[(i4 > 0 /\ -5+i1 == 0 /\ i5 >= 0)]
	25[(-1+it31 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0)]
	7[(i6 > 0 /\ -6+i1 == 0)]
	
	Blocked

	{}
	{21[T]}
	{7[T], 22[T], 27[T], 28[T]}
	{22[T], 25[T], 26[T]}
	{10[T]}
	
Step with 23

	Trace

	24[(-1+i1 == 0)]
	4[(i4 > 0 /\ -5+i1 == 0 /\ i5 >= 0)]
	25[(-1+it31 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0)]
	7[(i6 > 0 /\ -6+i1 == 0)]
	23[(i7-i4 < 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{21[T]}
	{7[T], 22[T], 27[T], 28[T]}
	{22[T], 25[T], 26[T]}
	{10[T]}
	{}
	
Covered

	Trace

	24[(-1+i1 == 0)]
	4[(i4 > 0 /\ -5+i1 == 0 /\ i5 >= 0)]
	25[(-1+it31 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0)]
	7[(i6 > 0 /\ -6+i1 == 0)]
	
	Blocked

	{}
	{21[T]}
	{7[T], 22[T], 27[T], 28[T]}
	{22[T], 25[T], 26[T]}
	{10[T], 23[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	4[(i4 > 0 /\ -5+i1 == 0 /\ i5 >= 0)]
	25[(-1+it31 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0)]
	
	Blocked

	{}
	{21[T]}
	{7[T], 22[T], 27[T], 28[T]}
	{7[T], 22[T], 25[T], 26[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	4[(i4 > 0 /\ -5+i1 == 0 /\ i5 >= 0)]
	
	Blocked

	{}
	{21[T]}
	{7[T], 22[T], 25[T], 27[T], 28[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	
	Blocked

	{}
	{4[T], 21[T]}
	
Step with 20

	Trace

	24[(-1+i1 == 0)]
	20[(-5+i1 == 0 /\ i5 < 0)]
	
	Blocked

	{}
	{4[T], 21[T]}
	{}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	
	Blocked

	{}
	{4[T], 20[T], 21[T]}
	
Backtrack

	Trace

	Blocked

	{24[T]}
	
Accept

Poly(n^1)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃
  Temp_Vars:  
  Locations:  l0, l1, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, X₃)
  t₃: l1(X₀, X₁, X₂, X₃) → l4(X₀, X₁, X₂, X₃)
  t₁: l2(X₀, X₁, X₂, X₃) → l3(X₀, X₁, X₂, X₃)
  t₂: l3(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, X₃)
  t₄: l4(X₀, X₁, X₂, X₃) → l5(X₀, X₁, X₁, 0) :|: 1 ≤ X₀ ∧ 0 ≤ X₁
  t₅: l4(X₀, X₁, X₂, X₃) → l6(X₀, X₁, X₂, X₃) :|: 1+X₁ ≤ 0
  t₆: l4(X₀, X₁, X₂, X₃) → l6(X₀, X₁, X₂, X₃) :|: X₀ ≤ 0
  t₈: l5(X₀, X₁, X₂, X₃) → l6(X₀, X₁, X₂, X₃) :|: X₂ ≤ 0
  t₇: l5(X₀, X₁, X₂, X₃) → l7(X₀, X₁, X₂, X₃) :|: 1 ≤ X₂
  t₁₂: l6(X₀, X₁, X₂, X₃) → l9(X₀, X₁, X₂, X₃)
  t₁₀: l7(X₀, X₁, X₂, X₃) → l5(X₀, X₁, X₂, 0) :|: X₀ ≤ X₃
  t₉: l7(X₀, X₁, X₂, X₃) → l8(X₀, X₁, X₂, X₃) :|: 1+X₃ ≤ X₀
  t₁₁: l8(X₀, X₁, X₂, X₃) → l5(X₀, X₁, X₂-1, 1+X₃)


Preprocessing
  Found invariant X₃ ≤ X₀ ∧ 0 ≤ X₃ ∧ 1 ≤ X₂+X₃ ∧ 1 ≤ X₁+X₃ ∧ 1 ≤ X₀+X₃ ∧ X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₀+X₂ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l7


  Found invariant X₃ ≤ X₀ ∧ 0 ≤ X₃ ∧ 0 ≤ X₂+X₃ ∧ 0 ≤ X₁+X₃ ∧ 1 ≤ X₀+X₃ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₂ ∧ 0 ≤ X₁+X₂ ∧ 1 ≤ X₀+X₂ ∧ 0 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l5


  Found invariant 1+X₃ ≤ X₀ ∧ 0 ≤ X₃ ∧ 1 ≤ X₂+X₃ ∧ 1 ≤ X₁+X₃ ∧ 1 ≤ X₀+X₃ ∧ X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₀+X₂ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l8


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃
  Temp_Vars:  
  Locations:  l0, l1, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, X₃)
  t₃: l1(X₀, X₁, X₂, X₃) → l4(X₀, X₁, X₂, X₃)
  t₁: l2(X₀, X₁, X₂, X₃) → l3(X₀, X₁, X₂, X₃)
  t₂: l3(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, X₃)
  t₄: l4(X₀, X₁, X₂, X₃) → l5(X₀, X₁, X₁, 0) :|: 1 ≤ X₀ ∧ 0 ≤ X₁
  t₅: l4(X₀, X₁, X₂, X₃) → l6(X₀, X₁, X₂, X₃) :|: 1+X₁ ≤ 0
  t₆: l4(X₀, X₁, X₂, X₃) → l6(X₀, X₁, X₂, X₃) :|: X₀ ≤ 0
  t₈: l5(X₀, X₁, X₂, X₃) → l6(X₀, X₁, X₂, X₃) :|: X₂ ≤ 0 ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₀+X₂ ∧ 1 ≤ X₀+X₃ ∧ X₃ ≤ X₀ ∧ 0 ≤ X₁ ∧ 0 ≤ X₁+X₂ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₁+X₃ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ 0 ≤ X₃
  t₇: l5(X₀, X₁, X₂, X₃) → l7(X₀, X₁, X₂, X₃) :|: 1 ≤ X₂ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₀+X₂ ∧ 1 ≤ X₀+X₃ ∧ X₃ ≤ X₀ ∧ 0 ≤ X₁ ∧ 0 ≤ X₁+X₂ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₁+X₃ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ 0 ≤ X₃
  t₁₂: l6(X₀, X₁, X₂, X₃) → l9(X₀, X₁, X₂, X₃)
  t₁₀: l7(X₀, X₁, X₂, X₃) → l5(X₀, X₁, X₂, 0) :|: X₀ ≤ X₃ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₃ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 1 ≤ X₂ ∧ 1 ≤ X₂+X₃ ∧ 2 ≤ X₀+X₁ ∧ 2 ≤ X₀+X₂ ∧ 2 ≤ X₁+X₂ ∧ X₃ ≤ X₀ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₃
  t₉: l7(X₀, X₁, X₂, X₃) → l8(X₀, X₁, X₂, X₃) :|: 1+X₃ ≤ X₀ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₃ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 1 ≤ X₂ ∧ 1 ≤ X₂+X₃ ∧ 2 ≤ X₀+X₁ ∧ 2 ≤ X₀+X₂ ∧ 2 ≤ X₁+X₂ ∧ X₃ ≤ X₀ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₃
  t₁₁: l8(X₀, X₁, X₂, X₃) → l5(X₀, X₁, X₂-1, 1+X₃) :|: 1 ≤ X₀ ∧ 1 ≤ X₀+X₃ ∧ 1+X₃ ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 1 ≤ X₂ ∧ 1 ≤ X₂+X₃ ∧ 2 ≤ X₀+X₁ ∧ 2 ≤ X₀+X₂ ∧ 2 ≤ X₁+X₂ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₃


MPRF for transition t₇: l5(X₀, X₁, X₂, X₃) → l7(X₀, X₁, X₂, X₃) :|: 1 ≤ X₂ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₀+X₂ ∧ 1 ≤ X₀+X₃ ∧ X₃ ≤ X₀ ∧ 0 ≤ X₁ ∧ 0 ≤ X₁+X₂ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₁+X₃ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ 0 ≤ X₃ of depth 1:
  new bound:
    2⋅X₁+1 {O(n)}

  MPRF:
    • l5: [1+2⋅X₂+X₃]
    • l7: [2⋅X₂+X₃]
    • l8: [2⋅X₂+X₃]




MPRF for transition t₉: l7(X₀, X₁, X₂, X₃) → l8(X₀, X₁, X₂, X₃) :|: 1+X₃ ≤ X₀ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₃ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 1 ≤ X₂ ∧ 1 ≤ X₂+X₃ ∧ 2 ≤ X₀+X₁ ∧ 2 ≤ X₀+X₂ ∧ 2 ≤ X₁+X₂ ∧ X₃ ≤ X₀ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₃ of depth 1:
  new bound:
    2⋅X₁+1 {O(n)}

  MPRF:
    • l5: [X₁+X₂-1]
    • l7: [X₁+X₂-1]
    • l8: [X₁+X₂-2]




MPRF for transition t₁₀: l7(X₀, X₁, X₂, X₃) → l5(X₀, X₁, X₂, 0) :|: X₀ ≤ X₃ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₃ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 1 ≤ X₂ ∧ 1 ≤ X₂+X₃ ∧ 2 ≤ X₀+X₁ ∧ 2 ≤ X₀+X₂ ∧ 2 ≤ X₁+X₂ ∧ X₃ ≤ X₀ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₃ of depth 1:
  new bound:
    X₀+X₁ {O(n)}

  MPRF:
    • l5: [X₀+X₂+X₃]
    • l7: [X₀+X₂+X₃]
    • l8: [X₀+X₂+X₃]




MPRF for transition t₁₁: l8(X₀, X₁, X₂, X₃) → l5(X₀, X₁, X₂-1, 1+X₃) :|: 1 ≤ X₀ ∧ 1 ≤ X₀+X₃ ∧ 1+X₃ ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 1 ≤ X₂ ∧ 1 ≤ X₂+X₃ ∧ 2 ≤ X₀+X₁ ∧ 2 ≤ X₀+X₂ ∧ 2 ≤ X₁+X₂ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₃ of depth 1:
  new bound:
    X₀+X₁+1 {O(n)}

  MPRF:
    • l5: [X₀+X₂-1]
    • l7: [X₀+X₂-1]
    • l8: [X₀+X₂-1]




All Bounds
Timebounds
  Overall timebound:2⋅X₀+6⋅X₁+12 {O(n)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: 2⋅X₁+1 {O(n)}
    t₈: 1 {O(1)}
    t₉: 2⋅X₁+1 {O(n)}
    t₁₀: X₀+X₁ {O(n)}
    t₁₁: X₀+X₁+1 {O(n)}
    t₁₂: 1 {O(1)}


Costbounds
  Overall costbound: 2⋅X₀+6⋅X₁+12 {O(n)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: 2⋅X₁+1 {O(n)}
    t₈: 1 {O(1)}
    t₉: 2⋅X₁+1 {O(n)}
    t₁₀: X₀+X₁ {O(n)}
    t₁₁: X₀+X₁+1 {O(n)}
    t₁₂: 1 {O(1)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₀, X₂: X₂ {O(n)}
    t₀, X₃: X₃ {O(n)}
    t₁, X₀: X₀ {O(n)}
    t₁, X₁: X₁ {O(n)}
    t₁, X₂: X₂ {O(n)}
    t₁, X₃: X₃ {O(n)}
    t₂, X₀: X₀ {O(n)}
    t₂, X₁: X₁ {O(n)}
    t₂, X₂: X₂ {O(n)}
    t₂, X₃: X₃ {O(n)}
    t₃, X₀: X₀ {O(n)}
    t₃, X₁: X₁ {O(n)}
    t₃, X₂: X₂ {O(n)}
    t₃, X₃: X₃ {O(n)}
    t₄, X₀: X₀ {O(n)}
    t₄, X₁: X₁ {O(n)}
    t₄, X₂: X₁ {O(n)}
    t₄, X₃: 0 {O(1)}
    t₅, X₀: X₀ {O(n)}
    t₅, X₁: X₁ {O(n)}
    t₅, X₂: X₂ {O(n)}
    t₅, X₃: X₃ {O(n)}
    t₆, X₀: X₀ {O(n)}
    t₆, X₁: X₁ {O(n)}
    t₆, X₂: X₂ {O(n)}
    t₆, X₃: X₃ {O(n)}
    t₇, X₀: X₀ {O(n)}
    t₇, X₁: X₁ {O(n)}
    t₇, X₂: X₁ {O(n)}
    t₇, X₃: X₀+X₁+1 {O(n)}
    t₈, X₀: 2⋅X₀ {O(n)}
    t₈, X₁: 2⋅X₁ {O(n)}
    t₈, X₂: 0 {O(1)}
    t₈, X₃: X₀+X₁+1 {O(n)}
    t₉, X₀: X₀ {O(n)}
    t₉, X₁: X₁ {O(n)}
    t₉, X₂: X₁ {O(n)}
    t₉, X₃: X₀+X₁+1 {O(n)}
    t₁₀, X₀: X₀ {O(n)}
    t₁₀, X₁: X₁ {O(n)}
    t₁₀, X₂: X₁ {O(n)}
    t₁₀, X₃: 0 {O(1)}
    t₁₁, X₀: X₀ {O(n)}
    t₁₁, X₁: X₁ {O(n)}
    t₁₁, X₂: X₁ {O(n)}
    t₁₁, X₃: X₀+X₁+1 {O(n)}
    t₁₂, X₀: 4⋅X₀ {O(n)}
    t₁₂, X₁: 4⋅X₁ {O(n)}
    t₁₂, X₂: 2⋅X₂ {O(n)}
    t₁₂, X₃: 2⋅X₃+X₀+X₁+1 {O(n)}

