WORST_CASE(Omega(n^1),O(n^1))

# LoAT Proof:
WORST_CASE(Omega(n^1),?)

WORST_CASE(Omega(n^1),?)
Initial ITS

Start location: f2

Location map:
LoAT_sink -> 0
f2 -> 1
f300 -> 2
f1 -> 3

Rules:
   0: (-1+i4 >= 0 /\ -2+i1 == 0 /\ -1+i4+i5 >= 0 /\ -1+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i5'=-2+i4
   1: (-1+i4 >= 0 /\ -2+i1 == 0 /\ -1+i5 >= 0 /\ -i4-i5 >= 0) /\ i1'=3, i3'=1+i3, i6'=it2
   2: (-2+i1 == 0 /\ -1+i5 >= 0 /\ -i4 >= 0) /\ i1'=3, i3'=1+i3, i6'=it3
   3: (-2+i1 == 0 /\ -i5 >= 0) /\ i1'=3, i3'=1+i3, i6'=it4
   4: -1+i1 == 0 /\ i1'=2, i3'=1+i3

Dependency graph:
0 -> 0, 0 -> 1, 0 -> 2, 0 -> 3
4 -> 0, 4 -> 1, 4 -> 2, 4 -> 3

Refined Dependency Graph

	Removed the following edges: 0 -> 1, 0 -> 2, 4 -> 1

Start location: f2

Location map:
LoAT_sink -> 0
f2 -> 1
f300 -> 2
f1 -> 3

Rules:
   0: (-1+i4 >= 0 /\ -2+i1 == 0 /\ -1+i4+i5 >= 0 /\ -1+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i5'=-2+i4
   1: (-1+i4 >= 0 /\ -2+i1 == 0 /\ -1+i5 >= 0 /\ -i4-i5 >= 0) /\ i1'=3, i3'=1+i3, i6'=it2
   2: (-2+i1 == 0 /\ -1+i5 >= 0 /\ -i4 >= 0) /\ i1'=3, i3'=1+i3, i6'=it3
   3: (-2+i1 == 0 /\ -i5 >= 0) /\ i1'=3, i3'=1+i3, i6'=it4
   4: -1+i1 == 0 /\ i1'=2, i3'=1+i3

Dependency graph:
0 -> 0, 0 -> 3
4 -> 0, 4 -> 2, 4 -> 3

Step with 4

	Trace

	4[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 3

	Trace

	4[(-1+i1 == 0)]
	3[(-2+i1 == 0 /\ -i5 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Backtrack

	Trace

	4[(-1+i1 == 0)]
	
	Blocked

	{}
	{3[T]}
	
Step with 0

	Trace

	4[(-1+i1 == 0)]
	0[(-1+i4 >= 0 /\ -2+i1 == 0 /\ -1+i4+i5 >= 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{3[T]}
	{}
	
Poly(n^1)

Accelerate

	Loop Acceleration

	Original rule:
	(-1+i4 >= 0 /\ -2+i1 == 0 /\ -1+i4+i5 >= 0 /\ -1+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i5'=-2+i4
	New rule:
	(-1+i4 >= 0 /\ -2+i1 >= 0 /\ i4-it21 >= 0 /\ 2*i4-2*it21 >= 0 /\ -1+i4+i5 >= 0 /\ -1+i4-it21 >= 0 /\ -1+i5 >= 0 /\ -1+it21 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it21, i4'=i4-it21, i5'=-1+i4-it21

		-1+i4 >= 0 [0]: montonic decrease yields (-1+i4 >= 0 /\ i4-it21 >= 0)
		
		-2+i1 >= 0 [0]: unchanged
		
		-1+i4+i5 >= 0 [0]: montonic decrease yields (2*i4-2*it21 >= 0 /\ -1+i4+i5 >= 0), dependencies: -1+i4 >= 0 -1+i5 >= 0
		
		-1+i4+i5 >= 0 [1]: eventual decrease yields (2*i4-2*it21 >= 0 /\ -1+i4+i5 >= 0)
		
		-1+i5 >= 0 [0]: eventual decrease yields (-1+i4-it21 >= 0 /\ -1+i5 >= 0)
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-1+i4 >= 0 -> (-1+i4 >= 0 /\ i4-it21 >= 0), -2+i1 >= 0 -> -2+i1 >= 0, -1+i4+i5 >= 0 -> (2*i4-2*it21 >= 0 /\ -1+i4+i5 >= 0), -1+i5 >= 0 -> (-1+i4-it21 >= 0 /\ -1+i5 >= 0), 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-1+i4 >= 0 /\ -2+i1 >= 0 /\ i4-it21 >= 0 /\ 2*i4-2*it21 >= 0 /\ -1+i4+i5 >= 0 /\ -1+i4-it21 >= 0 /\ -1+i5 >= 0 /\ -1+it21 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it21, i4'=i4-it21, i5'=-1+i4-it21
	New rule:
	(-1+i4 >= 0 /\ -2+i1 >= 0 /\ i4-it21 >= 0 /\ 2*i4-2*it21 >= 0 /\ -1+i4+i5 >= 0 /\ -1+i4-it21 >= 0 /\ -1+i5 >= 0 /\ -1+it21 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+it21, i4'=i4-it21, i5'=-1+i4-it21
	
	Instantiation

	Original rule:
	(-1+i4 >= 0 /\ -2+i1 >= 0 /\ i4-it21 >= 0 /\ 2*i4-2*it21 >= 0 /\ -1+i4+i5 >= 0 /\ -1+i4-it21 >= 0 /\ -1+i5 >= 0 /\ -1+it21 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+it21, i4'=i4-it21, i5'=-1+i4-it21
	New rule:
	(0 >= 0 /\ 1 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ -1+i4+i5 >= 0 /\ 2 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0 /\ -2+i4 >= 0) /\ i3'=-1+i3+i4, i4'=1, i5'=0

Start location: f2

Location map:
LoAT_sink -> 0
f2 -> 1
f300 -> 2
f1 -> 3

Rules:
   0: (-1+i4 >= 0 /\ -2+i1 == 0 /\ -1+i4+i5 >= 0 /\ -1+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i5'=-2+i4
   1: (-1+i4 >= 0 /\ -2+i1 == 0 /\ -1+i5 >= 0 /\ -i4-i5 >= 0) /\ i1'=3, i3'=1+i3, i6'=it2
   2: (-2+i1 == 0 /\ -1+i5 >= 0 /\ -i4 >= 0) /\ i1'=3, i3'=1+i3, i6'=it3
   3: (-2+i1 == 0 /\ -i5 >= 0) /\ i1'=3, i3'=1+i3, i6'=it4
   4: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   5: (0 >= 0 /\ 1 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ -1+i4+i5 >= 0 /\ 2 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0 /\ -2+i4 >= 0) /\ i3'=-1+i3+i4, i4'=1, i5'=0

Dependency graph:
0 -> 0, 0 -> 3, 0 -> 5
4 -> 0, 4 -> 2, 4 -> 3, 4 -> 5
5 -> 0, 5 -> 3

	Trace

	4[(-1+i1 == 0)]
	5[(0 >= 0 /\ 1 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ -1+i4+i5 >= 0 /\ 2 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0 /\ -2+i4 >= 0)]
	
	Blocked

	{}
	{3[T]}
	{0[T], 5[T]}
	
Step with 3

	Trace

	4[(-1+i1 == 0)]
	5[(0 >= 0 /\ 1 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ -1+i4+i5 >= 0 /\ 2 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0 /\ -2+i4 >= 0)]
	3[(-2+i1 == 0 /\ -i5 >= 0)]
	
	Blocked

	{}
	{3[T]}
	{0[T], 5[T]}
	{}
	
Backtrack

	Trace

	4[(-1+i1 == 0)]
	5[(0 >= 0 /\ 1 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ -1+i4+i5 >= 0 /\ 2 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0 /\ -2+i4 >= 0)]
	
	Blocked

	{}
	{3[T]}
	{0[T], 3[T], 5[T]}
	
Backtrack

	Trace

	4[(-1+i1 == 0)]
	
	Blocked

	{}
	{3[T], 5[T]}
	
Step with 2

	Trace

	4[(-1+i1 == 0)]
	2[(-2+i1 == 0 /\ -1+i5 >= 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{3[T], 5[T]}
	{}
	
Backtrack

	Trace

	4[(-1+i1 == 0)]
	
	Blocked

	{}
	{2[T], 3[T], 5[T]}
	
Step with 0

	Trace

	4[(-1+i1 == 0)]
	0[(-1+i4 >= 0 /\ -2+i1 == 0 /\ -1+i4+i5 >= 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{2[T], 3[T], 5[T]}
	{}
	
Covered

	Trace

	4[(-1+i1 == 0)]
	
	Blocked

	{}
	{0[T], 2[T], 3[T], 5[T]}
	
Backtrack

	Trace

	Blocked

	{4[T]}
	
Accept

Poly(n^1)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  D
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₄: l0(X₀, X₁, X₂) → l1(X₀, X₁, X₂)
  t₀: l1(X₀, X₁, X₂) → l1(X₀-1, X₀-2, X₂) :|: 1 ≤ X₀ ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₁
  t₁: l1(X₀, X₁, X₂) → l2(X₀, X₁, D) :|: 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ X₀+X₁ ≤ 0
  t₂: l1(X₀, X₁, X₂) → l2(X₀, X₁, D) :|: 1 ≤ X₁ ∧ X₀ ≤ 0
  t₃: l1(X₀, X₁, X₂) → l2(X₀, X₁, D) :|: X₁ ≤ 0


Preprocessing
  Cut unsatisfiable transition [t₁: l1→l2]


  Eliminate variables [D; X₂] that do not contribute to the problem


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁
  Temp_Vars:  
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₅: l0(X₀, X₁) → l1(X₀, X₁)
  t₆: l1(X₀, X₁) → l1(X₀-1, X₀-2) :|: 1 ≤ X₀ ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₁
  t₇: l1(X₀, X₁) → l2(X₀, X₁) :|: 1 ≤ X₁ ∧ X₀ ≤ 0
  t₈: l1(X₀, X₁) → l2(X₀, X₁) :|: X₁ ≤ 0


MPRF for transition t₆: l1(X₀, X₁) → l1(X₀-1, X₀-2) :|: 1 ≤ X₀ ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₁ of depth 1:
  new bound:
    X₀ {O(n)}

  MPRF:
    • l1: [X₀]




All Bounds
Timebounds
  Overall timebound:X₀+3 {O(n)}
    t₅: 1 {O(1)}
    t₆: X₀ {O(n)}
    t₇: 1 {O(1)}
    t₈: 1 {O(1)}


Costbounds
  Overall costbound: X₀+3 {O(n)}
    t₅: 1 {O(1)}
    t₆: X₀ {O(n)}
    t₇: 1 {O(1)}
    t₈: 1 {O(1)}


Sizebounds
    t₅, X₀: X₀ {O(n)}
    t₅, X₁: X₁ {O(n)}
    t₆, X₀: X₀ {O(n)}
    t₆, X₁: 2⋅X₀ {O(n)}
    t₇, X₀: X₀ {O(n)}
    t₇, X₁: X₁ {O(n)}
    t₈, X₀: 2⋅X₀ {O(n)}
    t₈, X₁: 2⋅X₀+X₁ {O(n)}

