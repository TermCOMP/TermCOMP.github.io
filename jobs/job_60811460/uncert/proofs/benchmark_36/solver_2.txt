MAYBE

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [evalEx5bb1in/7,evalEx5bb2in/7,evalEx5bb3in/7]
1. recursive  : [evalEx5bb3in_loop_cont/12,evalEx5bb4in/11,evalEx5bb6in/11]
2. non_recursive  : [evalEx5stop/6]
3. non_recursive  : [evalEx5returnin/6]
4. non_recursive  : [exit_location/1]
5. non_recursive  : [evalEx5bb6in_loop_cont/7]
6. non_recursive  : [evalEx5entryin/6]
7. non_recursive  : [evalEx5start/6]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into evalEx5bb3in/7
1. SCC is partially evaluated into evalEx5bb6in/11
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into evalEx5bb6in_loop_cont/7
6. SCC is partially evaluated into evalEx5entryin/6
7. SCC is partially evaluated into evalEx5start/6

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations evalEx5bb3in/7 
* CE 14 is refined into CE [15] 
* CE 13 is refined into CE [16] 
* CE 11 is refined into CE [17] 
* CE 12 is refined into CE [18] 


### Cost equations --> "Loop" of evalEx5bb3in/7 
* CEs [17] --> Loop 15 
* CEs [18] --> Loop 16 
* CEs [15] --> Loop 17 
* CEs [16] --> Loop 18 

### Ranking functions of CR evalEx5bb3in(C,D,E,G,H,I,J) 

#### Partial ranking functions of CR evalEx5bb3in(C,D,E,G,H,I,J) 


### Specialization of cost equations evalEx5bb6in/11 
* CE 7 is refined into CE [19] 
* CE 6 is refined into CE [20,21] 
* CE 8 is refined into CE [22] 
* CE 3 is refined into CE [23,24] 
* CE 4 is refined into CE [25] 
* CE 5 is refined into CE [26,27,28] 


### Cost equations --> "Loop" of evalEx5bb6in/11 
* CEs [24] --> Loop 19 
* CEs [25] --> Loop 20 
* CEs [28] --> Loop 21 
* CEs [23] --> Loop 22 
* CEs [27] --> Loop 23 
* CEs [26] --> Loop 24 
* CEs [19] --> Loop 25 
* CEs [20] --> Loop 26 
* CEs [22] --> Loop 27 
* CEs [21] --> Loop 28 

### Ranking functions of CR evalEx5bb6in(A,B,C,D,E,G,H,I,J,K,L) 

#### Partial ranking functions of CR evalEx5bb6in(A,B,C,D,E,G,H,I,J,K,L) 
* Partial RF of phase [19,20,21,22,23,24]:
  - RF of loop [22:1]:
    B depends on loops [19:1,20:1,21:1] 
  - RF of loop [22:1,23:1,24:1]:
    -A+B depends on loops [19:1,20:1,21:1] 


### Specialization of cost equations evalEx5bb6in_loop_cont/7 
* CE 9 is refined into CE [29] 
* CE 10 is refined into CE [30] 


### Cost equations --> "Loop" of evalEx5bb6in_loop_cont/7 
* CEs [29] --> Loop 29 
* CEs [30] --> Loop 30 

### Ranking functions of CR evalEx5bb6in_loop_cont(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR evalEx5bb6in_loop_cont(A,B,C,D,E,F,G) 


### Specialization of cost equations evalEx5entryin/6 
* CE 2 is refined into CE [31,32,33,34,35,36,37] 


### Cost equations --> "Loop" of evalEx5entryin/6 
* CEs [35,36,37] --> Loop 31 
* CEs [32,34] --> Loop 32 
* CEs [33] --> Loop 33 
* CEs [31] --> Loop 34 

### Ranking functions of CR evalEx5entryin(A,B,C,D,E,G) 

#### Partial ranking functions of CR evalEx5entryin(A,B,C,D,E,G) 


### Specialization of cost equations evalEx5start/6 
* CE 1 is refined into CE [38,39,40,41] 


### Cost equations --> "Loop" of evalEx5start/6 
* CEs [41] --> Loop 35 
* CEs [40] --> Loop 36 
* CEs [39] --> Loop 37 
* CEs [38] --> Loop 38 

### Ranking functions of CR evalEx5start(A,B,C,D,E,G) 

#### Partial ranking functions of CR evalEx5start(A,B,C,D,E,G) 


Computing Bounds
=====================================

#### Cost of chains of evalEx5bb3in(C,D,E,G,H,I,J):
* Chain [[15,16]]...: 2*it(15)+0
  with precondition: [1>=C,C>=0,G>=2,3>=G] 

* Chain [[15,16],18]: 2*it(15)+0
  with precondition: [G=2,1>=H,C>=0,H>=C,C+D>=H+I] 

* Chain [[15,16],17]: 2*it(15)+0
  with precondition: [G=3,1>=C,C>=0] 

* Chain [18]: 0
  with precondition: [G=2,I=D,J=E,C=H,1>=C,C>=0] 

* Chain [17]: 0
  with precondition: [G=3,1>=C,C>=0] 


#### Cost of chains of evalEx5bb6in(A,B,C,D,E,G,H,I,J,K,L):
* Chain [[19,20,21,22,23,24]]...: 16*it(19)+0
  with precondition: [B>=A+1,A>=0] 

* Chain [[19,20,21,22,23,24],28]...: 18*it(19)+0
  with precondition: [G=3,A>=0,B>=A+1] 

* Chain [[19,20,21,22,23,24],27]: 16*it(19)+0
  with precondition: [G=3,A>=0,B>=A+1] 

* Chain [[19,20,21,22,23,24],26]: 17*it(19)+0
  with precondition: [G=3,A>=0,B>=A+1] 

* Chain [[19,20,21,22,23,24],25]: 16*it(19)+0
  with precondition: [G=4,I=K,A>=0,B>=A+1,H>=A,H>=I] 

* Chain [28]...: 2*s(17)+0
  with precondition: [G=3,A>=0,B>=A+1] 

* Chain [27]: 0
  with precondition: [G=3,A>=0] 

* Chain [26]: 1*s(18)+0
  with precondition: [G=3,A>=0,B>=A+1] 

* Chain [25]: 0
  with precondition: [G=4,J=C,K=D,L=E,A=H,B=I,A>=0,A>=B] 


#### Cost of chains of evalEx5bb6in_loop_cont(A,B,C,D,E,F,G):
* Chain [30]: 0
  with precondition: [A=3] 

* Chain [29]: 0
  with precondition: [A=4] 


#### Cost of chains of evalEx5entryin(A,B,C,D,E,G):
* Chain [34]: 0
  with precondition: [] 

* Chain [33]: 0
  with precondition: [0>=A] 

* Chain [32]: 1*aux(44)+0
  with precondition: [A>=1] 

* Chain [31]...: 1*aux(45)+0
  with precondition: [A>=1] 


#### Cost of chains of evalEx5start(A,B,C,D,E,G):
* Chain [38]: 0
  with precondition: [] 

* Chain [37]: 0
  with precondition: [0>=A] 

* Chain [36]: 1*s(29)+0
  with precondition: [A>=1] 

* Chain [35]...: 1*s(30)+0
  with precondition: [A>=1] 


Closed-form bounds of evalEx5start(A,B,C,D,E,G): 
-------------------------------------
* Chain [38] with precondition: [] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [37] with precondition: [0>=A] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [36] with precondition: [A>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [35]... with precondition: [A>=1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of evalEx5start(A,B,C,D,E,G): inf 
Asymptotic class: infinity 
* Total analysis performed in 218 ms.

