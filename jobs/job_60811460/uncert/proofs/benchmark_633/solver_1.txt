NO

# LoAT Proof:
NO

NO

Initial ITS

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f1 -> 2

Rules:
   0: (-2+it2 >= 0 /\ -1+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=it2
   1: (1-it5 >= 0 /\ -2+i1 == 0 /\ -2+it4 >= 0 /\ 1+it5 >= 0) /\ i1'=2, i3'=1+i3, i4'=it5

Dependency graph:
0 -> 1
1 -> 1

Preprocessed Transitions

	Eliminated Temporary Variables

	Original rule:
	(1-it5 >= 0 /\ -2+i1 == 0 /\ -2+it4 >= 0 /\ 1+it5 >= 0) /\ i1'=2, i3'=1+i3, i4'=it5
	New rule:
	(1-it5 >= 0 /\ -2+i1 == 0 /\ 1+it5 >= 0) /\ i1'=2, i3'=1+i3, i4'=it5

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f1 -> 2

Rules:
   0: (-2+it2 >= 0 /\ -1+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=it2
   2: (1-it5 >= 0 /\ -2+i1 == 0 /\ 1+it5 >= 0) /\ i1'=2, i3'=1+i3, i4'=it5

Dependency graph:
0 -> 2
2 -> 2

Step with 0

	Trace

	0[(-2+it2 >= 0 /\ -1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 2

	Trace

	0[(-2+it2 >= 0 /\ -1+i1 == 0)]
	2[(1-it5 >= 0 /\ -2+i1 == 0 /\ 1+it5 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Nonterm

	Certificate of Non-Termination

	Original rule:
	(1-it5 >= 0 /\ -2+i1 == 0 /\ 1+it5 >= 0) /\ i1'=2, i3'=1+i3, i4'=it5
	New rule:
	(1-it5 >= 0 /\ -2+i1 >= 0 /\ -1+it15 >= 0 /\ 2-i1 >= 0 /\ 1+it5 >= 0) /\ i1'=0

		1-it5 >= 0 [0]: unchanged
		
		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		1+it5 >= 0 [0]: unchanged
		
		Replacement map: {1-it5 >= 0 -> 1-it5 >= 0, -2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0, 1+it5 >= 0 -> 1+it5 >= 0}

	Loop Acceleration

	Original rule:
	(1-it5 >= 0 /\ -2+i1 == 0 /\ 1+it5 >= 0) /\ i1'=2, i3'=1+i3, i4'=it5
	New rule:
	(1-it5 >= 0 /\ -2+i1 >= 0 /\ -1+it15 >= 0 /\ 2-i1 >= 0 /\ 1+it5 >= 0) /\ i1'=i1, i3'=i3+it15, i4'=it5

		1-it5 >= 0 [0]: unchanged
		
		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		1+it5 >= 0 [0]: unchanged
		
		Replacement map: {1-it5 >= 0 -> 1-it5 >= 0, -2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0, 1+it5 >= 0 -> 1+it5 >= 0}

	Removed Trivial Updates

	Original rule:
	(1-it5 >= 0 /\ -2+i1 >= 0 /\ -1+it15 >= 0 /\ 2-i1 >= 0 /\ 1+it5 >= 0) /\ i1'=i1, i3'=i3+it15, i4'=it5
	New rule:
	(1-it5 >= 0 /\ -2+i1 >= 0 /\ -1+it15 >= 0 /\ 2-i1 >= 0 /\ 1+it5 >= 0) /\ i3'=i3+it15, i4'=it5

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f1 -> 2

Rules:
   0: (-2+it2 >= 0 /\ -1+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=it2
   2: (1-it5 >= 0 /\ -2+i1 == 0 /\ 1+it5 >= 0) /\ i1'=2, i3'=1+i3, i4'=it5
   3: (1-it5 >= 0 /\ -2+i1 >= 0 /\ -1+it15 >= 0 /\ 2-i1 >= 0 /\ 1+it5 >= 0) /\ i1'=0
   4: (1-it5 >= 0 /\ -2+i1 >= 0 /\ -1+it15 >= 0 /\ 2-i1 >= 0 /\ 1+it5 >= 0) /\ i3'=i3+it15, i4'=it5

Dependency graph:
0 -> 2, 0 -> 3, 0 -> 4
2 -> 2, 2 -> 3, 2 -> 4
4 -> 2, 4 -> 3

Step with 3

	Trace

	0[(-2+it2 >= 0 /\ -1+i1 == 0)]
	3[(1-it5 >= 0 /\ -2+i1 >= 0 /\ -1+it15 >= 0 /\ 2-i1 >= 0 /\ 1+it5 >= 0)]
	
	Blocked

	{}
	{}
	{3[T]}
	
Refute

	Counterexample

	(i1=1, i3=-1)
	-0-> (i1=2, i3=0, i4=2 )
	-3-> ( )
	
NO

Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
MAYBE


Initial Problem
  Start:  l0
  Program_Vars:  X₀
  Temp_Vars:  B, C
  Locations:  l0, l1
  Return Locations:  
  Transitions:
  t₀: l0(X₀) → l1(B) :|: 2 ≤ B
  t₁: l1(X₀) → l1(B) :|: 0 ≤ 1+B ∧ B ≤ 1 ∧ 2 ≤ C


Preprocessing
  Eliminate variables [X₀] that do not contribute to the problem


Problem after Preprocessing
  Start:  l0
  Program_Vars:  
  Temp_Vars:  B, C
  Locations:  l0, l1
  Return Locations:  
  Transitions:
  t₂: l0 → l1 :|: 2 ≤ B
  t₃: l1 → l1 :|: 0 ≤ 1+B ∧ B ≤ 1 ∧ 2 ≤ C


All Bounds
Timebounds
  Overall timebound:inf {Infinity}
    t₂: 1 {O(1)}
    t₃: inf {Infinity}


Costbounds
  Overall costbound: inf {Infinity}
    t₂: 1 {O(1)}
    t₃: inf {Infinity}


Sizebounds

