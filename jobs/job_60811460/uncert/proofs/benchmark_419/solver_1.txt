NO

# LoAT Proof:
NO

NO

Initial ITS

Start location: f1

Location map:
LoAT_sink -> 0
f1 -> 1
f2 -> 2
f300 -> 3

Rules:
   0: (-1+it6 >= 0 /\ -2+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=2, i3'=1+i3, i6'=it8, i7'=it7, i8'=it6, i9'=it5
   1: (-2+i1 == 0 /\ -1-it10 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=2, i3'=1+i3, i6'=it12, i7'=it11, i8'=it10, i9'=it9
   2: (-2+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=2, i3'=1+i3, i6'=it14, i7'=it13, i8'=0
   3: (-2+i1 == 0 /\ i4-i5 >= 0) /\ i1'=3, i3'=1+i3, i6'=it17, i7'=it16, i10'=it15
   4: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i11'=it19, i12'=it18, i13'=it18, i14'=it19

Dependency graph:
0 -> 0, 0 -> 1, 0 -> 2, 0 -> 3
1 -> 0, 1 -> 1, 1 -> 2, 1 -> 3
2 -> 0, 2 -> 1, 2 -> 2, 2 -> 3
4 -> 0, 4 -> 1, 4 -> 2, 4 -> 3

Refined Dependency Graph

	Removed the following edges: 0 -> 3, 1 -> 3, 2 -> 3

Start location: f1

Location map:
LoAT_sink -> 0
f1 -> 1
f2 -> 2
f300 -> 3

Rules:
   0: (-1+it6 >= 0 /\ -2+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=2, i3'=1+i3, i6'=it8, i7'=it7, i8'=it6, i9'=it5
   1: (-2+i1 == 0 /\ -1-it10 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=2, i3'=1+i3, i6'=it12, i7'=it11, i8'=it10, i9'=it9
   2: (-2+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=2, i3'=1+i3, i6'=it14, i7'=it13, i8'=0
   3: (-2+i1 == 0 /\ i4-i5 >= 0) /\ i1'=3, i3'=1+i3, i6'=it17, i7'=it16, i10'=it15
   4: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i11'=it19, i12'=it18, i13'=it18, i14'=it19

Dependency graph:
0 -> 0, 0 -> 1, 0 -> 2
1 -> 0, 1 -> 1, 1 -> 2
2 -> 0, 2 -> 1, 2 -> 2
4 -> 0, 4 -> 1, 4 -> 2, 4 -> 3

Step with 4

	Trace

	4[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 2

	Trace

	4[(-1+i1 == 0)]
	2[(-2+i1 == 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Nonterm

	Certificate of Non-Termination

	Original rule:
	(-2+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=2, i3'=1+i3, i6'=it14, i7'=it13, i8'=0
	New rule:
	(-2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+it60 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=0

		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		-1-i4+i5 >= 0 [0]: unchanged
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0, -1-i4+i5 >= 0 -> -1-i4+i5 >= 0}

	Loop Acceleration

	Original rule:
	(-2+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=2, i3'=1+i3, i6'=it14, i7'=it13, i8'=0
	New rule:
	(-2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+it60 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=i1, i3'=i3+it60, i6'=it14, i7'=it13, i8'=0

		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		-1-i4+i5 >= 0 [0]: unchanged
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0, -1-i4+i5 >= 0 -> -1-i4+i5 >= 0}

	Removed Trivial Updates

	Original rule:
	(-2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+it60 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=i1, i3'=i3+it60, i6'=it14, i7'=it13, i8'=0
	New rule:
	(-2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+it60 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3+it60, i6'=it14, i7'=it13, i8'=0

Start location: f1

Location map:
LoAT_sink -> 0
f1 -> 1
f2 -> 2
f300 -> 3

Rules:
   0: (-1+it6 >= 0 /\ -2+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=2, i3'=1+i3, i6'=it8, i7'=it7, i8'=it6, i9'=it5
   1: (-2+i1 == 0 /\ -1-it10 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=2, i3'=1+i3, i6'=it12, i7'=it11, i8'=it10, i9'=it9
   2: (-2+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=2, i3'=1+i3, i6'=it14, i7'=it13, i8'=0
   3: (-2+i1 == 0 /\ i4-i5 >= 0) /\ i1'=3, i3'=1+i3, i6'=it17, i7'=it16, i10'=it15
   4: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i11'=it19, i12'=it18, i13'=it18, i14'=it19
   5: (-2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+it60 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=0
   6: (-2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+it60 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3+it60, i6'=it14, i7'=it13, i8'=0

Dependency graph:
0 -> 0, 0 -> 1, 0 -> 2, 0 -> 5, 0 -> 6
1 -> 0, 1 -> 1, 1 -> 2, 1 -> 5, 1 -> 6
2 -> 0, 2 -> 1, 2 -> 2, 2 -> 5, 2 -> 6
4 -> 0, 4 -> 1, 4 -> 2, 4 -> 3, 4 -> 5, 4 -> 6
6 -> 0, 6 -> 1, 6 -> 2, 6 -> 5

Step with 5

	Trace

	4[(-1+i1 == 0)]
	5[(-2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+it60 >= 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{}
	{5[T]}
	
Refute

	Counterexample

	(i1=1, i3=0, i4=-1, i5=0, i6=0, i7=0, i8=0, i9=0, i10=0)
	-4-> (i1=2, i3=1, i4=-1, i5=0, i6=0, i7=0, i8=0, i9=0, i10=0, i11=0, i12=0, i13=0, i14=0 )
	-5-> ( )
	
NO

Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
MAYBE


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄, X₅, X₆, X₇, X₈, X₉, X₁₀
  Temp_Vars:  L, M, N, O
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₄: l0(X₀, X₁, X₂, X₃, X₄, X₅, X₆, X₇, X₈, X₉, X₁₀) → l1(X₀, X₁, X₂, X₃, X₄, X₅, X₆, M, N, N, M)
  t₀: l1(X₀, X₁, X₂, X₃, X₄, X₅, X₆, X₇, X₈, X₉, X₁₀) → l1(X₀, X₁, M, N, L, O, X₆, X₇, X₈, X₉, X₁₀) :|: 1 ≤ L ∧ 1+X₀ ≤ X₁
  t₁: l1(X₀, X₁, X₂, X₃, X₄, X₅, X₆, X₇, X₈, X₉, X₁₀) → l1(X₀, X₁, M, N, L, O, X₆, X₇, X₈, X₉, X₁₀) :|: 1+L ≤ 0 ∧ 1+X₀ ≤ X₁
  t₂: l1(X₀, X₁, X₂, X₃, X₄, X₅, X₆, X₇, X₈, X₉, X₁₀) → l1(X₀, X₁, M, N, 0, X₅, X₆, X₇, X₈, X₉, X₁₀) :|: 1+X₀ ≤ X₁
  t₃: l1(X₀, X₁, X₂, X₃, X₄, X₅, X₆, X₇, X₈, X₉, X₁₀) → l2(X₀, X₁, M, N, X₄, X₅, L, X₇, X₈, X₉, X₁₀) :|: X₁ ≤ X₀


Preprocessing
  Eliminate variables [M; N; O; X₂; X₃; X₄; X₅; X₆; X₇; X₈; X₉; X₁₀] that do not contribute to the problem


  Found invariant X₁ ≤ X₀ for location l2


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁
  Temp_Vars:  L
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₅: l0(X₀, X₁) → l1(X₀, X₁)
  t₆: l1(X₀, X₁) → l1(X₀, X₁) :|: 1 ≤ L ∧ 1+X₀ ≤ X₁
  t₇: l1(X₀, X₁) → l1(X₀, X₁) :|: 1+L ≤ 0 ∧ 1+X₀ ≤ X₁
  t₈: l1(X₀, X₁) → l1(X₀, X₁) :|: 1+X₀ ≤ X₁
  t₉: l1(X₀, X₁) → l2(X₀, X₁) :|: X₁ ≤ X₀


  Found invariant X₁ ≤ X₀ for location l2


  Found invariant 1+X₀ ≤ X₁ for location l1_v1


All Bounds
Timebounds
  Overall timebound:inf {Infinity}
    t₅: 1 {O(1)}
    t₆: inf {Infinity}
    t₇: inf {Infinity}
    t₈: inf {Infinity}
    t₉: 1 {O(1)}


Costbounds
  Overall costbound: inf {Infinity}
    t₅: 1 {O(1)}
    t₆: inf {Infinity}
    t₇: inf {Infinity}
    t₈: inf {Infinity}
    t₉: 1 {O(1)}


Sizebounds
    t₅, X₀: X₀ {O(n)}
    t₅, X₁: X₁ {O(n)}
    t₆, X₀: X₀ {O(n)}
    t₆, X₁: X₁ {O(n)}
    t₇, X₀: X₀ {O(n)}
    t₇, X₁: X₁ {O(n)}
    t₈, X₀: X₀ {O(n)}
    t₈, X₁: X₁ {O(n)}
    t₉, X₀: X₀ {O(n)}
    t₉, X₁: X₁ {O(n)}

