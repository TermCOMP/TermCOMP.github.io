WORST_CASE(Omega(n^1),?)

# LoAT Proof:
WORST_CASE(Omega(n^1),?)

WORST_CASE(Omega(n^1),?)
Initial ITS

Start location: start

Location map:
LoAT_sink -> 0
start -> 1
eval -> 2

Rules:
   0: (-2+i1 == 0 /\ -i6+i5^3 >= 0 /\ i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i6'=-1+i6
   1: (-2+i1 == 0 /\ -i6+i5^3 >= 0 /\ i4 >= 0) /\ i1'=2, i3'=1+i3, i5'=i6+i5, i6'=-1+i6
   2: -1+i1 == 0 /\ i1'=2, i3'=1+i3

Dependency graph:
0 -> 0, 0 -> 1
1 -> 0, 1 -> 1
2 -> 0, 2 -> 1

Step with 2

	Trace

	2[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 1

	Trace

	2[(-1+i1 == 0)]
	1[(-2+i1 == 0 /\ -i6+i5^3 >= 0 /\ i4 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Poly(n^1)

Accelerate

	Loop Acceleration

	Original rule:
	(-2+i1 == 0 /\ -i6+i5^3 >= 0 /\ i4 >= 0) /\ i1'=2, i3'=1+i3, i5'=i6+i5, i6'=-1+i6
	New rule:
	(-2+i1 >= 0 /\ -i6+i5^3 >= 0 /\ -1-i6+it11+1/8*(-1+2*i6*(-1+it11)-(-1+it11)^2+it11+2*i5)^3 >= 0 /\ i4 >= 0 /\ 2-i1 >= 0 /\ -1+it11 >= 0) /\ i1'=i1, i3'=i3+it11, i5'=1/2*it11-1/2*it11^2+i6*it11+i5, i6'=i6-it11

		-2+i1 >= 0 [0]: unchanged
		
		-i6+i5^3 >= 0 [0]: eventual decrease yields (-i6+i5^3 >= 0 /\ -1-i6+it11+1/8*(-1+2*i6*(-1+it11)-(-1+it11)^2+it11+2*i5)^3 >= 0)
		
		i4 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, -i6+i5^3 >= 0 -> (-i6+i5^3 >= 0 /\ -1-i6+it11+1/8*(-1+2*i6*(-1+it11)-(-1+it11)^2+it11+2*i5)^3 >= 0), i4 >= 0 -> i4 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-2+i1 >= 0 /\ -i6+i5^3 >= 0 /\ -1-i6+it11+1/8*(-1+2*i6*(-1+it11)-(-1+it11)^2+it11+2*i5)^3 >= 0 /\ i4 >= 0 /\ 2-i1 >= 0 /\ -1+it11 >= 0) /\ i1'=i1, i3'=i3+it11, i5'=1/2*it11-1/2*it11^2+i6*it11+i5, i6'=i6-it11
	New rule:
	(-2+i1 >= 0 /\ -i6+i5^3 >= 0 /\ -1-i6+it11+1/8*(-1+2*i6*(-1+it11)-(-1+it11)^2+it11+2*i5)^3 >= 0 /\ i4 >= 0 /\ 2-i1 >= 0 /\ -1+it11 >= 0) /\ i3'=i3+it11, i5'=1/2*it11-1/2*it11^2+i6*it11+i5, i6'=i6-it11

Start location: start

Location map:
LoAT_sink -> 0
start -> 1
eval -> 2

Rules:
   0: (-2+i1 == 0 /\ -i6+i5^3 >= 0 /\ i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i6'=-1+i6
   1: (-2+i1 == 0 /\ -i6+i5^3 >= 0 /\ i4 >= 0) /\ i1'=2, i3'=1+i3, i5'=i6+i5, i6'=-1+i6
   2: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   3: (-2+i1 >= 0 /\ -i6+i5^3 >= 0 /\ -1-i6+it11+1/8*(-1+2*i6*(-1+it11)-(-1+it11)^2+it11+2*i5)^3 >= 0 /\ i4 >= 0 /\ 2-i1 >= 0 /\ -1+it11 >= 0) /\ i3'=i3+it11, i5'=1/2*it11-1/2*it11^2+i6*it11+i5, i6'=i6-it11

Dependency graph:
0 -> 0, 0 -> 1, 0 -> 3
1 -> 0, 1 -> 1, 1 -> 3
2 -> 0, 2 -> 1, 2 -> 3
3 -> 0, 3 -> 1

	Trace

	2[(-1+i1 == 0)]
	3[(-2+i1 >= 0 /\ -i6+i5^3 >= 0 /\ -1-i6+it11+1/8*(-1+2*i6*(-1+it11)-(-1+it11)^2+it11+2*i5)^3 >= 0 /\ i4 >= 0 /\ 2-i1 >= 0 /\ -1+it11 >= 0)]
	
	Blocked

	{}
	{}
	{1[T], 3[T]}
	
Step with 0

	Trace

	2[(-1+i1 == 0)]
	3[(-2+i1 >= 0 /\ -i6+i5^3 >= 0 /\ -1-i6+it11+1/8*(-1+2*i6*(-1+it11)-(-1+it11)^2+it11+2*i5)^3 >= 0 /\ i4 >= 0 /\ 2-i1 >= 0 /\ -1+it11 >= 0)]
	0[(-2+i1 == 0 /\ -i6+i5^3 >= 0 /\ i4 >= 0)]
	
	Blocked

	{}
	{}
	{1[T], 3[T]}
	{}
	
Accelerate

	Loop Acceleration

	Original rule:
	(-2+i1 == 0 /\ -i6+i5^3 >= 0 /\ i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i6'=-1+i6
	New rule:
	(1+i4-it63 >= 0 /\ -2+i1 >= 0 /\ -i6+i5^3 >= 0 /\ 2-i1 >= 0 /\ -1+it63 >= 0) /\ i1'=i1, i3'=i3+it63, i4'=i4-it63, i6'=i6-it63

		-2+i1 >= 0 [0]: unchanged
		
		-i6+i5^3 >= 0 [0]: monotonic increase yields -i6+i5^3 >= 0
		
		i4 >= 0 [0]: montonic decrease yields 1+i4-it63 >= 0
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, -i6+i5^3 >= 0 -> -i6+i5^3 >= 0, i4 >= 0 -> 1+i4-it63 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(1+i4-it63 >= 0 /\ -2+i1 >= 0 /\ -i6+i5^3 >= 0 /\ 2-i1 >= 0 /\ -1+it63 >= 0) /\ i1'=i1, i3'=i3+it63, i4'=i4-it63, i6'=i6-it63
	New rule:
	(1+i4-it63 >= 0 /\ -2+i1 >= 0 /\ -i6+i5^3 >= 0 /\ 2-i1 >= 0 /\ -1+it63 >= 0) /\ i3'=i3+it63, i4'=i4-it63, i6'=i6-it63
	
	Instantiation

	Original rule:
	(1+i4-it63 >= 0 /\ -2+i1 >= 0 /\ -i6+i5^3 >= 0 /\ 2-i1 >= 0 /\ -1+it63 >= 0) /\ i3'=i3+it63, i4'=i4-it63, i6'=i6-it63
	New rule:
	(0 >= 0 /\ -2+i1 >= 0 /\ -i6+i5^3 >= 0 /\ i4 >= 0 /\ 2-i1 >= 0) /\ i3'=1+i3+i4, i4'=-1, i6'=-1+i6-i4

Start location: start

Location map:
LoAT_sink -> 0
start -> 1
eval -> 2

Rules:
   0: (-2+i1 == 0 /\ -i6+i5^3 >= 0 /\ i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i6'=-1+i6
   1: (-2+i1 == 0 /\ -i6+i5^3 >= 0 /\ i4 >= 0) /\ i1'=2, i3'=1+i3, i5'=i6+i5, i6'=-1+i6
   2: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   3: (-2+i1 >= 0 /\ -i6+i5^3 >= 0 /\ -1-i6+it11+1/8*(-1+2*i6*(-1+it11)-(-1+it11)^2+it11+2*i5)^3 >= 0 /\ i4 >= 0 /\ 2-i1 >= 0 /\ -1+it11 >= 0) /\ i3'=i3+it11, i5'=1/2*it11-1/2*it11^2+i6*it11+i5, i6'=i6-it11
   4: (0 >= 0 /\ -2+i1 >= 0 /\ -i6+i5^3 >= 0 /\ i4 >= 0 /\ 2-i1 >= 0) /\ i3'=1+i3+i4, i4'=-1, i6'=-1+i6-i4

Dependency graph:
0 -> 0, 0 -> 1, 0 -> 3, 0 -> 4
1 -> 0, 1 -> 1, 1 -> 3, 1 -> 4
2 -> 0, 2 -> 1, 2 -> 3, 2 -> 4
3 -> 0, 3 -> 1, 3 -> 4
4 -> 0, 4 -> 1, 4 -> 3

	Trace

	2[(-1+i1 == 0)]
	3[(-2+i1 >= 0 /\ -i6+i5^3 >= 0 /\ -1-i6+it11+1/8*(-1+2*i6*(-1+it11)-(-1+it11)^2+it11+2*i5)^3 >= 0 /\ i4 >= 0 /\ 2-i1 >= 0 /\ -1+it11 >= 0)]
	4[(0 >= 0 /\ -2+i1 >= 0 /\ -i6+i5^3 >= 0 /\ i4 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{}
	{1[T], 3[T]}
	{0[T], 4[T]}
	
Backtrack

	Trace

	2[(-1+i1 == 0)]
	3[(-2+i1 >= 0 /\ -i6+i5^3 >= 0 /\ -1-i6+it11+1/8*(-1+2*i6*(-1+it11)-(-1+it11)^2+it11+2*i5)^3 >= 0 /\ i4 >= 0 /\ 2-i1 >= 0 /\ -1+it11 >= 0)]
	
	Blocked

	{}
	{}
	{1[T], 3[T], 4[T]}
	
Step with 0

	Trace

	2[(-1+i1 == 0)]
	3[(-2+i1 >= 0 /\ -i6+i5^3 >= 0 /\ -1-i6+it11+1/8*(-1+2*i6*(-1+it11)-(-1+it11)^2+it11+2*i5)^3 >= 0 /\ i4 >= 0 /\ 2-i1 >= 0 /\ -1+it11 >= 0)]
	0[(-2+i1 == 0 /\ -i6+i5^3 >= 0 /\ i4 >= 0)]
	
	Blocked

	{}
	{}
	{1[T], 3[T], 4[T]}
	{}
	
Covered

	Trace

	2[(-1+i1 == 0)]
	3[(-2+i1 >= 0 /\ -i6+i5^3 >= 0 /\ -1-i6+it11+1/8*(-1+2*i6*(-1+it11)-(-1+it11)^2+it11+2*i5)^3 >= 0 /\ i4 >= 0 /\ 2-i1 >= 0 /\ -1+it11 >= 0)]
	
	Blocked

	{}
	{}
	{0[T], 1[T], 3[T], 4[T]}
	
Backtrack

	Trace

	2[(-1+i1 == 0)]
	
	Blocked

	{}
	{3[T]}
	
Step with 4

	Trace

	2[(-1+i1 == 0)]
	4[(0 >= 0 /\ -2+i1 >= 0 /\ -i6+i5^3 >= 0 /\ i4 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{3[T]}
	{4[T]}
	
Backtrack

	Trace

	2[(-1+i1 == 0)]
	
	Blocked

	{}
	{3[T], 4[T]}
	
Step with 0

	Trace

	2[(-1+i1 == 0)]
	0[(-2+i1 == 0 /\ -i6+i5^3 >= 0 /\ i4 >= 0)]
	
	Blocked

	{}
	{3[T], 4[T]}
	{}
	
Covered

	Trace

	2[(-1+i1 == 0)]
	
	Blocked

	{}
	{0[T], 3[T], 4[T]}
	
Step with 1

	Trace

	2[(-1+i1 == 0)]
	1[(-2+i1 == 0 /\ -i6+i5^3 >= 0 /\ i4 >= 0)]
	
	Blocked

	{}
	{0[T], 3[T], 4[T]}
	{}
	
Covered

	Trace

	2[(-1+i1 == 0)]
	
	Blocked

	{}
	{0[T], 1[T], 3[T], 4[T]}
	
Backtrack

	Trace

	Blocked

	{2[T]}
	
Accept

Poly(n^1)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
MAYBE


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  
  Locations:  l0, l1
  Return Locations:  
  Transitions:
  t₂: l0(X₀, X₁, X₂) → l1(X₀, X₁, X₂)
  t₀: l1(X₀, X₁, X₂) → l1(X₀-1, X₁, X₂-1) :|: 0 ≤ X₀ ∧ X₂ ≤ (X₁)³
  t₁: l1(X₀, X₁, X₂) → l1(X₀, X₁+X₂, X₂-1) :|: 0 ≤ X₀ ∧ X₂ ≤ (X₁)³


Preprocessing
Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  
  Locations:  l0, l1
  Return Locations:  
  Transitions:
  t₂: l0(X₀, X₁, X₂) → l1(X₀, X₁, X₂)
  t₀: l1(X₀, X₁, X₂) → l1(X₀-1, X₁, X₂-1) :|: 0 ≤ X₀ ∧ X₂ ≤ (X₁)³
  t₁: l1(X₀, X₁, X₂) → l1(X₀, X₁+X₂, X₂-1) :|: 0 ≤ X₀ ∧ X₂ ≤ (X₁)³


MPRF for transition t₀: l1(X₀, X₁, X₂) → l1(X₀-1, X₁, X₂-1) :|: 0 ≤ X₀ ∧ X₂ ≤ (X₁)³ of depth 1:
  new bound:
    X₀+1 {O(n)}

  MPRF:
    • l1: [1+X₀]




  Found invariant 0 ≤ 1+X₀ for location l1_v2


  Found invariant 0 ≤ X₀ for location l1_v1


All Bounds
Timebounds
  Overall timebound:inf {Infinity}
    t₀: X₀+1 {O(n)}
    t₁: inf {Infinity}
    t₂: 1 {O(1)}


Costbounds
  Overall costbound: inf {Infinity}
    t₀: X₀+1 {O(n)}
    t₁: inf {Infinity}
    t₂: 1 {O(1)}


Sizebounds
    t₀, X₀: X₀+2 {O(n)}
    t₁, X₀: X₀+2 {O(n)}
    t₂, X₀: X₀ {O(n)}
    t₂, X₁: X₁ {O(n)}
    t₂, X₂: X₂ {O(n)}

