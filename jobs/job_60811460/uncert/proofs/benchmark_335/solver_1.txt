WORST_CASE(?,O(1))

# LoAT Proof:
Initial ITS

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f4 -> 2
f24 -> 3
f37 -> 4

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=0
   1: (-3+i1 == 0 /\ 199-i5 >= 0) /\ i1'=3, i3'=1+i3, i5'=1+i5, i6'=i5
   2: (-3+i1 == 0 /\ -200+i5 >= 0) /\ i1'=4, i3'=1+i3
   3: (-2+i1 == 0 /\ 99-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i7'=i4, i8'=i4
   4: (-2+i1 == 0 /\ -100+i4 >= 0) /\ i1'=3, i3'=1+i3, i5'=100

Dependency graph:
0 -> 3, 0 -> 4
1 -> 1, 1 -> 2
3 -> 3, 3 -> 4
4 -> 1, 4 -> 2

Refined Dependency Graph

	Removed the following edges: 0 -> 4, 4 -> 2

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f4 -> 2
f24 -> 3
f37 -> 4

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=0
   1: (-3+i1 == 0 /\ 199-i5 >= 0) /\ i1'=3, i3'=1+i3, i5'=1+i5, i6'=i5
   2: (-3+i1 == 0 /\ -200+i5 >= 0) /\ i1'=4, i3'=1+i3
   3: (-2+i1 == 0 /\ 99-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i7'=i4, i8'=i4
   4: (-2+i1 == 0 /\ -100+i4 >= 0) /\ i1'=3, i3'=1+i3, i5'=100

Dependency graph:
0 -> 3
1 -> 1, 1 -> 2
3 -> 3, 3 -> 4
4 -> 1

Step with 0

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 3

	Trace

	0[(-1+i1 == 0)]
	3[(-2+i1 == 0 /\ 99-i4 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Accelerate

	Loop Acceleration

	Original rule:
	(-2+i1 == 0 /\ 99-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i7'=i4, i8'=i4
	New rule:
	(-1+it15 >= 0 /\ -2+i1 >= 0 /\ 100-it15-i4 >= 0 /\ 2-i1 >= 0 /\ 99-i4 >= 0) /\ i1'=i1, i3'=i3+it15, i4'=it15+i4, i7'=-1+it15+i4, i8'=-1+it15+i4

		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		99-i4 >= 0 [0]: montonic decrease yields (100-it15-i4 >= 0 /\ 99-i4 >= 0)
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0, 99-i4 >= 0 -> (100-it15-i4 >= 0 /\ 99-i4 >= 0)}

	Removed Trivial Updates

	Original rule:
	(-1+it15 >= 0 /\ -2+i1 >= 0 /\ 100-it15-i4 >= 0 /\ 2-i1 >= 0 /\ 99-i4 >= 0) /\ i1'=i1, i3'=i3+it15, i4'=it15+i4, i7'=-1+it15+i4, i8'=-1+it15+i4
	New rule:
	(-1+it15 >= 0 /\ -2+i1 >= 0 /\ 100-it15-i4 >= 0 /\ 2-i1 >= 0 /\ 99-i4 >= 0) /\ i3'=i3+it15, i4'=it15+i4, i7'=-1+it15+i4, i8'=-1+it15+i4
	
	Instantiation

	Original rule:
	(-1+it15 >= 0 /\ -2+i1 >= 0 /\ 100-it15-i4 >= 0 /\ 2-i1 >= 0 /\ 99-i4 >= 0) /\ i3'=i3+it15, i4'=it15+i4, i7'=-1+it15+i4, i8'=-1+it15+i4
	New rule:
	(0 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ 99-i4 >= 0) /\ i3'=100+i3-i4, i4'=100, i7'=99, i8'=99

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f4 -> 2
f24 -> 3
f37 -> 4

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=0
   1: (-3+i1 == 0 /\ 199-i5 >= 0) /\ i1'=3, i3'=1+i3, i5'=1+i5, i6'=i5
   2: (-3+i1 == 0 /\ -200+i5 >= 0) /\ i1'=4, i3'=1+i3
   3: (-2+i1 == 0 /\ 99-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i7'=i4, i8'=i4
   4: (-2+i1 == 0 /\ -100+i4 >= 0) /\ i1'=3, i3'=1+i3, i5'=100
   5: (0 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ 99-i4 >= 0) /\ i3'=100+i3-i4, i4'=100, i7'=99, i8'=99

Dependency graph:
0 -> 3, 0 -> 5
1 -> 1, 1 -> 2
3 -> 3, 3 -> 4, 3 -> 5
4 -> 1
5 -> 3, 5 -> 4

	Trace

	0[(-1+i1 == 0)]
	5[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ 99-i4 >= 0)]
	
	Blocked

	{}
	{}
	{3[T], 5[T]}
	
Step with 4

	Trace

	0[(-1+i1 == 0)]
	5[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ 99-i4 >= 0)]
	4[(-2+i1 == 0 /\ -100+i4 >= 0)]
	
	Blocked

	{}
	{}
	{3[T], 5[T]}
	{}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	5[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ 99-i4 >= 0)]
	4[(-2+i1 == 0 /\ -100+i4 >= 0)]
	1[(-3+i1 == 0 /\ 199-i5 >= 0)]
	
	Blocked

	{}
	{}
	{3[T], 5[T]}
	{}
	{}
	
Accelerate

	Loop Acceleration

	Original rule:
	(-3+i1 == 0 /\ 199-i5 >= 0) /\ i1'=3, i3'=1+i3, i5'=1+i5, i6'=i5
	New rule:
	(-3+i1 >= 0 /\ 199-i5 >= 0 /\ 200-it37-i5 >= 0 /\ 3-i1 >= 0 /\ -1+it37 >= 0) /\ i1'=i1, i3'=i3+it37, i5'=it37+i5, i6'=-1+it37+i5

		-3+i1 >= 0 [0]: unchanged
		
		199-i5 >= 0 [0]: montonic decrease yields (199-i5 >= 0 /\ 200-it37-i5 >= 0)
		
		3-i1 >= 0 [0]: unchanged
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, 199-i5 >= 0 -> (199-i5 >= 0 /\ 200-it37-i5 >= 0), 3-i1 >= 0 -> 3-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ 199-i5 >= 0 /\ 200-it37-i5 >= 0 /\ 3-i1 >= 0 /\ -1+it37 >= 0) /\ i1'=i1, i3'=i3+it37, i5'=it37+i5, i6'=-1+it37+i5
	New rule:
	(-3+i1 >= 0 /\ 199-i5 >= 0 /\ 200-it37-i5 >= 0 /\ 3-i1 >= 0 /\ -1+it37 >= 0) /\ i3'=i3+it37, i5'=it37+i5, i6'=-1+it37+i5
	
	Instantiation

	Original rule:
	(-3+i1 >= 0 /\ 199-i5 >= 0 /\ 200-it37-i5 >= 0 /\ 3-i1 >= 0 /\ -1+it37 >= 0) /\ i3'=i3+it37, i5'=it37+i5, i6'=-1+it37+i5
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ 199-i5 >= 0 /\ 3-i1 >= 0) /\ i3'=200+i3-i5, i5'=200, i6'=199

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f4 -> 2
f24 -> 3
f37 -> 4

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=0
   1: (-3+i1 == 0 /\ 199-i5 >= 0) /\ i1'=3, i3'=1+i3, i5'=1+i5, i6'=i5
   2: (-3+i1 == 0 /\ -200+i5 >= 0) /\ i1'=4, i3'=1+i3
   3: (-2+i1 == 0 /\ 99-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i7'=i4, i8'=i4
   4: (-2+i1 == 0 /\ -100+i4 >= 0) /\ i1'=3, i3'=1+i3, i5'=100
   5: (0 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ 99-i4 >= 0) /\ i3'=100+i3-i4, i4'=100, i7'=99, i8'=99
   6: (0 >= 0 /\ -3+i1 >= 0 /\ 199-i5 >= 0 /\ 3-i1 >= 0) /\ i3'=200+i3-i5, i5'=200, i6'=199

Dependency graph:
0 -> 3, 0 -> 5
1 -> 1, 1 -> 2, 1 -> 6
3 -> 3, 3 -> 4, 3 -> 5
4 -> 1, 4 -> 6
5 -> 3, 5 -> 4
6 -> 1, 6 -> 2

	Trace

	0[(-1+i1 == 0)]
	5[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ 99-i4 >= 0)]
	4[(-2+i1 == 0 /\ -100+i4 >= 0)]
	6[(0 >= 0 /\ -3+i1 >= 0 /\ 199-i5 >= 0 /\ 3-i1 >= 0)]
	
	Blocked

	{}
	{}
	{3[T], 5[T]}
	{}
	{1[T], 6[T]}
	
Step with 2

	Trace

	0[(-1+i1 == 0)]
	5[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ 99-i4 >= 0)]
	4[(-2+i1 == 0 /\ -100+i4 >= 0)]
	6[(0 >= 0 /\ -3+i1 >= 0 /\ 199-i5 >= 0 /\ 3-i1 >= 0)]
	2[(-3+i1 == 0 /\ -200+i5 >= 0)]
	
	Blocked

	{}
	{}
	{3[T], 5[T]}
	{}
	{1[T], 6[T]}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	5[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ 99-i4 >= 0)]
	4[(-2+i1 == 0 /\ -100+i4 >= 0)]
	6[(0 >= 0 /\ -3+i1 >= 0 /\ 199-i5 >= 0 /\ 3-i1 >= 0)]
	
	Blocked

	{}
	{}
	{3[T], 5[T]}
	{}
	{1[T], 2[T], 6[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	5[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ 99-i4 >= 0)]
	4[(-2+i1 == 0 /\ -100+i4 >= 0)]
	
	Blocked

	{}
	{}
	{3[T], 5[T]}
	{6[T]}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	5[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ 99-i4 >= 0)]
	4[(-2+i1 == 0 /\ -100+i4 >= 0)]
	1[(-3+i1 == 0 /\ 199-i5 >= 0)]
	
	Blocked

	{}
	{}
	{3[T], 5[T]}
	{6[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	5[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ 99-i4 >= 0)]
	4[(-2+i1 == 0 /\ -100+i4 >= 0)]
	
	Blocked

	{}
	{}
	{3[T], 5[T]}
	{1[T], 6[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	5[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ 99-i4 >= 0)]
	
	Blocked

	{}
	{}
	{3[T], 4[T], 5[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{5[T]}
	
Step with 3

	Trace

	0[(-1+i1 == 0)]
	3[(-2+i1 == 0 /\ 99-i4 >= 0)]
	
	Blocked

	{}
	{5[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{3[T], 5[T]}
	
Backtrack

	Trace

	Blocked

	{0[T]}
	
Accept

Constant


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄
  Temp_Vars:  
  Locations:  l0, l1, l2, l3
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃, X₄) → l1(0, X₁, X₂, X₃, X₄)
  t₃: l1(X₀, X₁, X₂, X₃, X₄) → l1(1+X₀, X₁, X₂, X₀, X₀) :|: X₀ ≤ 99
  t₄: l1(X₀, X₁, X₂, X₃, X₄) → l2(X₀, 100, X₂, X₃, X₄) :|: 100 ≤ X₀
  t₁: l2(X₀, X₁, X₂, X₃, X₄) → l2(X₀, 1+X₁, X₁, X₃, X₄) :|: X₁ ≤ 199
  t₂: l2(X₀, X₁, X₂, X₃, X₄) → l3(X₀, X₁, X₂, X₃, X₄) :|: 200 ≤ X₁


Preprocessing
  Eliminate variables [X₂; X₃; X₄] that do not contribute to the problem


  Found invariant X₀ ≤ 100 ∧ 0 ≤ X₀ for location l1


  Found invariant X₁ ≤ 200 ∧ X₁ ≤ 100+X₀ ∧ X₀+X₁ ≤ 300 ∧ 100 ≤ X₁ ∧ 200 ≤ X₀+X₁ ∧ X₀ ≤ X₁ ∧ X₀ ≤ 100 ∧ 100 ≤ X₀ for location l2


  Found invariant X₁ ≤ 200 ∧ X₁ ≤ 100+X₀ ∧ X₀+X₁ ≤ 300 ∧ 200 ≤ X₁ ∧ 300 ≤ X₀+X₁ ∧ 100+X₀ ≤ X₁ ∧ X₀ ≤ 100 ∧ 100 ≤ X₀ for location l3


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁
  Temp_Vars:  
  Locations:  l0, l1, l2, l3
  Return Locations:  
  Transitions:
  t₅: l0(X₀, X₁) → l1(0, X₁)
  t₆: l1(X₀, X₁) → l1(1+X₀, X₁) :|: X₀ ≤ 99 ∧ X₀ ≤ 100 ∧ 0 ≤ X₀
  t₇: l1(X₀, X₁) → l2(X₀, 100) :|: 100 ≤ X₀ ∧ X₀ ≤ 100 ∧ 0 ≤ X₀
  t₈: l2(X₀, X₁) → l2(X₀, 1+X₁) :|: X₁ ≤ 199 ∧ X₀+X₁ ≤ 300 ∧ X₁ ≤ 200 ∧ X₁ ≤ 100+X₀ ∧ X₀ ≤ 100 ∧ 100 ≤ X₀ ∧ 100 ≤ X₁ ∧ 200 ≤ X₀+X₁ ∧ X₀ ≤ X₁
  t₉: l2(X₀, X₁) → l3(X₀, X₁) :|: 200 ≤ X₁ ∧ X₀+X₁ ≤ 300 ∧ X₁ ≤ 200 ∧ X₁ ≤ 100+X₀ ∧ X₀ ≤ 100 ∧ 100 ≤ X₀ ∧ 100 ≤ X₁ ∧ 200 ≤ X₀+X₁ ∧ X₀ ≤ X₁


MPRF for transition t₆: l1(X₀, X₁) → l1(1+X₀, X₁) :|: X₀ ≤ 99 ∧ X₀ ≤ 100 ∧ 0 ≤ X₀ of depth 1:
  new bound:
    101 {O(1)}

  MPRF:
    • l1: [101-X₀]




MPRF for transition t₈: l2(X₀, X₁) → l2(X₀, 1+X₁) :|: X₁ ≤ 199 ∧ X₀+X₁ ≤ 300 ∧ X₁ ≤ 200 ∧ X₁ ≤ 100+X₀ ∧ X₀ ≤ 100 ∧ 100 ≤ X₀ ∧ 100 ≤ X₁ ∧ 200 ≤ X₀+X₁ ∧ X₀ ≤ X₁ of depth 1:
  new bound:
    300 {O(1)}

  MPRF:
    • l2: [200-X₁]




All Bounds
Timebounds
  Overall timebound:404 {O(1)}
    t₅: 1 {O(1)}
    t₆: 101 {O(1)}
    t₇: 1 {O(1)}
    t₈: 300 {O(1)}
    t₉: 1 {O(1)}


Costbounds
  Overall costbound: 404 {O(1)}
    t₅: 1 {O(1)}
    t₆: 101 {O(1)}
    t₇: 1 {O(1)}
    t₈: 300 {O(1)}
    t₉: 1 {O(1)}


Sizebounds
    t₅, X₀: 0 {O(1)}
    t₅, X₁: X₁ {O(n)}
    t₆, X₀: 100 {O(1)}
    t₆, X₁: X₁ {O(n)}
    t₇, X₀: 100 {O(1)}
    t₇, X₁: 100 {O(1)}
    t₈, X₀: 100 {O(1)}
    t₈, X₁: 200 {O(1)}
    t₉, X₀: 100 {O(1)}
    t₉, X₁: 200 {O(1)}

