WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_start_12/8,eval_start_13/8,eval_start_bb3_in/8,eval_start_bb4_in/8,eval_start_bb5_in/8]
1. recursive  : [eval_start_8/13,eval_start_9/13,eval_start__critedge_in/13,eval_start_bb1_in/13,eval_start_bb2_in/13,eval_start_bb3_in_loop_cont/14]
2. non_recursive  : [eval_start_stop/8]
3. non_recursive  : [eval_start_bb6_in/8]
4. non_recursive  : [exit_location/1]
5. non_recursive  : [eval_start__critedge_in_loop_cont/9]
6. non_recursive  : [eval_start_6/8]
7. non_recursive  : [eval_start_5/8]
8. non_recursive  : [eval_start_4/8]
9. non_recursive  : [eval_start_3/8]
10. non_recursive  : [eval_start_2/8]
11. non_recursive  : [eval_start_1/8]
12. non_recursive  : [eval_start_0/8]
13. non_recursive  : [eval_start_bb0_in/8]
14. non_recursive  : [eval_start_start/8]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_start_bb3_in/8
1. SCC is partially evaluated into eval_start__critedge_in/13
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_start__critedge_in_loop_cont/9
6. SCC is partially evaluated into eval_start_6/8
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is partially evaluated into eval_start_start/8

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_start_bb3_in/8 
* CE 13 is refined into CE [14] 
* CE 10 is refined into CE [15] 
* CE 12 is refined into CE [16] 
* CE 11 is refined into CE [17] 


### Cost equations --> "Loop" of eval_start_bb3_in/8 
* CEs [17] --> Loop 14 
* CEs [14] --> Loop 15 
* CEs [15] --> Loop 16 
* CEs [16] --> Loop 17 

### Ranking functions of CR eval_start_bb3_in(V_6,V_i_0,V_n_0,V_n_1,B,C,D,E) 
* RF of phase [14]: [V_n_1]

#### Partial ranking functions of CR eval_start_bb3_in(V_6,V_i_0,V_n_0,V_n_1,B,C,D,E) 
* Partial RF of phase [14]:
  - RF of loop [14:1]:
    V_n_1


### Specialization of cost equations eval_start__critedge_in/13 
* CE 6 is refined into CE [18] 
* CE 5 is refined into CE [19,20] 
* CE 7 is refined into CE [21] 
* CE 4 is refined into CE [22,23,24,25] 
* CE 3 is refined into CE [26] 


### Cost equations --> "Loop" of eval_start__critedge_in/13 
* CEs [25] --> Loop 18 
* CEs [24] --> Loop 19 
* CEs [23] --> Loop 20 
* CEs [26] --> Loop 21 
* CEs [22] --> Loop 22 
* CEs [18] --> Loop 23 
* CEs [19] --> Loop 24 
* CEs [20] --> Loop 25 
* CEs [21] --> Loop 26 

### Ranking functions of CR eval_start__critedge_in(V_1,V_2,V_6,V_i_0,V_n_0,V_n_1,B,C,D,E,F,G,H) 
* RF of phase [18,19,20,21,22]: [V_i_0]

#### Partial ranking functions of CR eval_start__critedge_in(V_1,V_2,V_6,V_i_0,V_n_0,V_n_1,B,C,D,E,F,G,H) 
* Partial RF of phase [18,19,20,21,22]:
  - RF of loop [18:1]:
    V_n_0-1 depends on loops [21:1] 
  - RF of loop [18:1,19:1,20:1,21:1,22:1]:
    V_i_0
  - RF of loop [22:1]:
    V_n_0 depends on loops [21:1] 


### Specialization of cost equations eval_start__critedge_in_loop_cont/9 
* CE 8 is refined into CE [27] 
* CE 9 is refined into CE [28] 


### Cost equations --> "Loop" of eval_start__critedge_in_loop_cont/9 
* CEs [27] --> Loop 27 
* CEs [28] --> Loop 28 

### Ranking functions of CR eval_start__critedge_in_loop_cont(A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR eval_start__critedge_in_loop_cont(A,B,C,D,E,F,G,H,I) 


### Specialization of cost equations eval_start_6/8 
* CE 2 is refined into CE [29,30,31,32,33] 


### Cost equations --> "Loop" of eval_start_6/8 
* CEs [30] --> Loop 29 
* CEs [29,32] --> Loop 30 
* CEs [33] --> Loop 31 
* CEs [31] --> Loop 32 

### Ranking functions of CR eval_start_6(V_1,V_2,V_6,V_i_0,V_m,V_n_0,V_n_1,B) 

#### Partial ranking functions of CR eval_start_6(V_1,V_2,V_6,V_i_0,V_m,V_n_0,V_n_1,B) 


### Specialization of cost equations eval_start_start/8 
* CE 1 is refined into CE [34,35,36,37] 


### Cost equations --> "Loop" of eval_start_start/8 
* CEs [37] --> Loop 33 
* CEs [36] --> Loop 34 
* CEs [35] --> Loop 35 
* CEs [34] --> Loop 36 

### Ranking functions of CR eval_start_start(V_1,V_2,V_6,V_i_0,V_m,V_n_0,V_n_1,B) 

#### Partial ranking functions of CR eval_start_start(V_1,V_2,V_6,V_i_0,V_m,V_n_0,V_n_1,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_start_bb3_in(V_6,V_i_0,V_n_0,V_n_1,B,C,D,E):
* Chain [[14],17]: 1*it(14)+0
  Such that:it(14) =< V_n_1

  with precondition: [B=2,D=0,E=0,V_i_0>=1,V_n_1>=1,C>=1,V_n_0>=V_n_1] 

* Chain [[14],16]: 1*it(14)+0
  Such that:it(14) =< V_n_1-D

  with precondition: [B=2,D=E,0>=C,V_i_0>=1,D>=1,V_n_0>=V_n_1,V_n_1>=D+1] 

* Chain [[14],15]: 1*it(14)+0
  Such that:it(14) =< V_n_1

  with precondition: [B=3,V_i_0>=1,V_n_1>=1,V_n_0>=V_n_1] 

* Chain [17]: 0
  with precondition: [B=2,C=V_6,V_n_1=D,V_n_1=E,0>=V_n_1,V_i_0>=1,V_n_0>=V_n_1] 

* Chain [16]: 0
  with precondition: [B=2,V_n_1=D,V_n_1=E,0>=C,V_i_0>=1,V_n_1>=1,V_n_0>=V_n_1] 

* Chain [15]: 0
  with precondition: [B=3,V_i_0>=1,V_n_0>=V_n_1] 


#### Cost of chains of eval_start__critedge_in(V_1,V_2,V_6,V_i_0,V_n_0,V_n_1,B,C,D,E,F,G,H):
* Chain [[18,19,20,21,22],26]: 2*it(18)+3*it(19)+1*s(5)+1*s(6)+0
  Such that:aux(5) =< V_i_0+V_n_0
aux(15) =< V_i_0
aux(16) =< V_n_0
it(18) =< aux(15)
it(19) =< aux(15)
aux(10) =< aux(5)+1
s(6) =< it(19)+aux(16)
it(18) =< it(19)+aux(16)
s(5) =< it(19)+aux(16)
s(6) =< it(18)*aux(10)
s(5) =< it(18)*aux(5)

  with precondition: [B=3,V_i_0>=1,V_n_0>=0] 

* Chain [[18,19,20,21,22],25]: 2*it(18)+3*it(19)+1*s(5)+1*s(6)+0
  Such that:aux(5) =< V_i_0+V_n_0
aux(17) =< V_i_0
aux(18) =< V_n_0
it(18) =< aux(17)
it(19) =< aux(17)
aux(10) =< aux(5)+1
s(6) =< it(19)+aux(18)
it(18) =< it(19)+aux(18)
s(5) =< it(19)+aux(18)
s(6) =< it(18)*aux(10)
s(5) =< it(18)*aux(5)

  with precondition: [B=3,V_i_0>=2,V_n_0>=0] 

* Chain [[18,19,20,21,22],24]: 2*it(18)+3*it(19)+1*s(5)+1*s(6)+1*s(7)+0
  Such that:aux(19) =< V_i_0
aux(20) =< V_i_0+V_n_0
aux(21) =< V_n_0
s(7) =< aux(20)
it(18) =< aux(19)
it(19) =< aux(19)
aux(10) =< aux(20)+1
s(6) =< it(19)+aux(21)
it(18) =< it(19)+aux(21)
s(5) =< it(19)+aux(21)
s(6) =< it(18)*aux(10)
s(5) =< it(18)*aux(20)

  with precondition: [B=3,V_i_0>=2,V_n_0>=0] 

* Chain [[18,19,20,21,22],23]: 2*it(18)+3*it(19)+1*s(5)+1*s(6)+0
  Such that:aux(5) =< V_i_0+V_n_0
aux(13) =< V_n_0
aux(14) =< V_n_0-G
aux(22) =< V_i_0
it(18) =< aux(22)
it(19) =< aux(22)
aux(10) =< aux(5)+1
s(6) =< it(19)+aux(14)
s(6) =< it(19)+aux(13)
it(18) =< it(19)+aux(14)
it(18) =< it(19)+aux(13)
s(5) =< it(19)+aux(14)
s(5) =< it(19)+aux(13)
s(6) =< it(18)*aux(10)
s(5) =< it(18)*aux(5)

  with precondition: [B=4,C=0,F=0,V_i_0>=1,V_n_0>=0,G>=0,V_i_0+V_n_0>=G] 

* Chain [26]: 0
  with precondition: [B=3,V_n_0>=0] 

* Chain [25]: 0
  with precondition: [B=3,V_i_0>=1,V_n_0>=0] 

* Chain [23]: 0
  with precondition: [B=4,C=V_1,D=V_2,E=V_6,H=V_n_1,V_i_0=F,V_n_0=G,0>=V_i_0,V_n_0>=0] 


#### Cost of chains of eval_start__critedge_in_loop_cont(A,B,C,D,E,F,G,H,I):
* Chain [28]: 0
  with precondition: [A=3] 

* Chain [27]: 0
  with precondition: [A=4] 


#### Cost of chains of eval_start_6(V_1,V_2,V_6,V_i_0,V_m,V_n_0,V_n_1,B):
* Chain [32]: 0
  with precondition: [] 

* Chain [31]: 0
  with precondition: [0>=V_m] 

* Chain [30]: 4*s(36)+6*s(37)+2*s(39)+2*s(40)+0
  Such that:aux(29) =< V_m
s(36) =< aux(29)
s(37) =< aux(29)
s(38) =< aux(29)+1
s(39) =< s(37)
s(36) =< s(37)
s(40) =< s(37)
s(39) =< s(36)*s(38)
s(40) =< s(36)*aux(29)

  with precondition: [V_m>=1] 

* Chain [29]: 7*s(53)+4*s(54)+2*s(57)+2*s(58)+0
  Such that:aux(30) =< V_m
s(53) =< aux(30)
s(54) =< aux(30)
s(56) =< aux(30)+1
s(57) =< s(53)
s(54) =< s(53)
s(58) =< s(53)
s(57) =< s(54)*s(56)
s(58) =< s(54)*aux(30)

  with precondition: [V_m>=2] 


#### Cost of chains of eval_start_start(V_1,V_2,V_6,V_i_0,V_m,V_n_0,V_n_1,B):
* Chain [36]: 0
  with precondition: [] 

* Chain [35]: 0
  with precondition: [0>=V_m] 

* Chain [34]: 4*s(60)+6*s(61)+2*s(63)+2*s(64)+0
  Such that:s(59) =< V_m
s(60) =< s(59)
s(61) =< s(59)
s(62) =< s(59)+1
s(63) =< s(61)
s(60) =< s(61)
s(64) =< s(61)
s(63) =< s(60)*s(62)
s(64) =< s(60)*s(59)

  with precondition: [V_m>=1] 

* Chain [33]: 7*s(66)+4*s(67)+2*s(69)+2*s(70)+0
  Such that:s(65) =< V_m
s(66) =< s(65)
s(67) =< s(65)
s(68) =< s(65)+1
s(69) =< s(66)
s(67) =< s(66)
s(70) =< s(66)
s(69) =< s(67)*s(68)
s(70) =< s(67)*s(65)

  with precondition: [V_m>=2] 


Closed-form bounds of eval_start_start(V_1,V_2,V_6,V_i_0,V_m,V_n_0,V_n_1,B): 
-------------------------------------
* Chain [36] with precondition: [] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [35] with precondition: [0>=V_m] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [34] with precondition: [V_m>=1] 
    - Upper bound: 14*V_m 
    - Complexity: n 
* Chain [33] with precondition: [V_m>=2] 
    - Upper bound: 15*V_m 
    - Complexity: n 

### Maximum cost of eval_start_start(V_1,V_2,V_6,V_i_0,V_m,V_n_0,V_n_1,B): nat(V_m)*15 
Asymptotic class: n 
* Total analysis performed in 241 ms.

