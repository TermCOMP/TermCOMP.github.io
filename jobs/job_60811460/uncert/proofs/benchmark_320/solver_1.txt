NO

# LoAT Proof:
NO

NO

Initial ITS

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f5 -> 2
f12 -> 3
f20 -> 4

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (15-it3 >= 0 /\ -1+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=it4
   2: (-3+i1 == 0 /\ -1-i4 >= 0) /\ i1'=4, i3'=1+i3, i5'=it5, i6'=it5
   3: (-3+i1 == 0 /\ -1+i4 >= 0) /\ i1'=4, i3'=1+i3, i5'=it6, i6'=it6
   4: (15-it7 >= 0 /\ -1+i1 == 0) /\ i1'=2, i3'=1+i3, i7'=1, i8'=1
   5: -4+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=-1+i4, i9'=0, i10'=0
   6: (-3+i1 == 0 /\ i4 == 0) /\ i1'=2, i3'=1+i3, i4'=0, i7'=0, i8'=0, i11'=it8, i12'=it8, i13'=0, i14'=0

Dependency graph:
1 -> 2, 1 -> 3, 1 -> 6
2 -> 5
3 -> 5
5 -> 2, 5 -> 3, 5 -> 6

Chained Linear Paths

	Applied Chaining

	First rule:
	(-3+i1 == 0 /\ -1-i4 >= 0) /\ i1'=4, i3'=1+i3, i5'=it5, i6'=it5
	Second rule:
	-4+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=-1+i4, i9'=0, i10'=0
	New rule:
	(0 == 0 /\ -3+i1 == 0 /\ -1-i4 >= 0) /\ i1'=3, i3'=2+i3, i4'=-1+i4, i5'=it5, i6'=it5, i9'=0, i10'=0
	
	Applied Deletion

	Removed the following rules: 2
	
	Applied Chaining

	First rule:
	(-3+i1 == 0 /\ -1+i4 >= 0) /\ i1'=4, i3'=1+i3, i5'=it6, i6'=it6
	Second rule:
	-4+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=-1+i4, i9'=0, i10'=0
	New rule:
	(0 == 0 /\ -3+i1 == 0 /\ -1+i4 >= 0) /\ i1'=3, i3'=2+i3, i4'=-1+i4, i5'=it6, i6'=it6, i9'=0, i10'=0
	
	Applied Deletion

	Removed the following rules: 3, 5

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f5 -> 2
f12 -> 3
f20 -> 4

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (15-it3 >= 0 /\ -1+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=it4
   4: (15-it7 >= 0 /\ -1+i1 == 0) /\ i1'=2, i3'=1+i3, i7'=1, i8'=1
   6: (-3+i1 == 0 /\ i4 == 0) /\ i1'=2, i3'=1+i3, i4'=0, i7'=0, i8'=0, i11'=it8, i12'=it8, i13'=0, i14'=0
   7: (0 == 0 /\ -3+i1 == 0 /\ -1-i4 >= 0) /\ i1'=3, i3'=2+i3, i4'=-1+i4, i5'=it5, i6'=it5, i9'=0, i10'=0
   8: (0 == 0 /\ -3+i1 == 0 /\ -1+i4 >= 0) /\ i1'=3, i3'=2+i3, i4'=-1+i4, i5'=it6, i6'=it6, i9'=0, i10'=0

Dependency graph:
1 -> 6, 1 -> 7, 1 -> 8
7 -> 6, 7 -> 7, 7 -> 8
8 -> 6, 8 -> 7, 8 -> 8

Preprocessed Transitions

	Eliminated Temporary Variables

	Original rule:
	(15-it3 >= 0 /\ -1+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=it4
	New rule:
	(-1+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=it4
	
	Eliminated Temporary Variables

	Original rule:
	(15-it7 >= 0 /\ -1+i1 == 0) /\ i1'=2, i3'=1+i3, i7'=1, i8'=1
	New rule:
	(-1+i1 == 0) /\ i1'=2, i3'=1+i3, i7'=1, i8'=1
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -3+i1 == 0 /\ -1-i4 >= 0) /\ i1'=3, i3'=2+i3, i4'=-1+i4, i5'=it5, i6'=it5, i9'=0, i10'=0
	New rule:
	(-3+i1 == 0 /\ -1-i4 >= 0) /\ i1'=3, i3'=2+i3, i4'=-1+i4, i5'=it5, i6'=it5, i9'=0, i10'=0
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -3+i1 == 0 /\ -1+i4 >= 0) /\ i1'=3, i3'=2+i3, i4'=-1+i4, i5'=it6, i6'=it6, i9'=0, i10'=0
	New rule:
	(-3+i1 == 0 /\ -1+i4 >= 0) /\ i1'=3, i3'=2+i3, i4'=-1+i4, i5'=it6, i6'=it6, i9'=0, i10'=0

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f5 -> 2
f12 -> 3
f20 -> 4

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   6: (-3+i1 == 0 /\ i4 == 0) /\ i1'=2, i3'=1+i3, i4'=0, i7'=0, i8'=0, i11'=it8, i12'=it8, i13'=0, i14'=0
   9: (-1+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=it4
  10: (-1+i1 == 0) /\ i1'=2, i3'=1+i3, i7'=1, i8'=1
  11: (-3+i1 == 0 /\ -1-i4 >= 0) /\ i1'=3, i3'=2+i3, i4'=-1+i4, i5'=it5, i6'=it5, i9'=0, i10'=0
  12: (-3+i1 == 0 /\ -1+i4 >= 0) /\ i1'=3, i3'=2+i3, i4'=-1+i4, i5'=it6, i6'=it6, i9'=0, i10'=0

Dependency graph:
9 -> 6, 9 -> 11, 9 -> 12
11 -> 6, 11 -> 11, 11 -> 12
12 -> 6, 12 -> 11, 12 -> 12

Refined Dependency Graph

	Removed the following edges: 11 -> 6, 11 -> 12, 12 -> 11

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f5 -> 2
f12 -> 3
f20 -> 4

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   6: (-3+i1 == 0 /\ i4 == 0) /\ i1'=2, i3'=1+i3, i4'=0, i7'=0, i8'=0, i11'=it8, i12'=it8, i13'=0, i14'=0
   9: (-1+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=it4
  10: (-1+i1 == 0) /\ i1'=2, i3'=1+i3, i7'=1, i8'=1
  11: (-3+i1 == 0 /\ -1-i4 >= 0) /\ i1'=3, i3'=2+i3, i4'=-1+i4, i5'=it5, i6'=it5, i9'=0, i10'=0
  12: (-3+i1 == 0 /\ -1+i4 >= 0) /\ i1'=3, i3'=2+i3, i4'=-1+i4, i5'=it6, i6'=it6, i9'=0, i10'=0

Dependency graph:
9 -> 6, 9 -> 11, 9 -> 12
11 -> 11
12 -> 6, 12 -> 12

Step with 10

	Trace

	10[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Backtrack

	Trace

	Blocked

	{10[T]}
	
Step with 0

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{10[T]}
	{}
	
Backtrack

	Trace

	Blocked

	{0[T], 10[T]}
	
Step with 9

	Trace

	9[(-1+i1 == 0)]
	
	Blocked

	{0[T], 10[T]}
	{}
	
Step with 11

	Trace

	9[(-1+i1 == 0)]
	11[(-3+i1 == 0 /\ -1-i4 >= 0)]
	
	Blocked

	{0[T], 10[T]}
	{}
	{}
	
Nonterm

	Certificate of Non-Termination

	Original rule:
	(-3+i1 == 0 /\ -1-i4 >= 0) /\ i1'=3, i3'=2+i3, i4'=-1+i4, i5'=it5, i6'=it5, i9'=0, i10'=0
	New rule:
	(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+it65 >= 0 /\ -1-i4 >= 0) /\ i1'=0

		-3+i1 >= 0 [0]: unchanged
		
		3-i1 >= 0 [0]: unchanged
		
		-1-i4 >= 0 [0]: monotonic increase yields -1-i4 >= 0
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, 3-i1 >= 0 -> 3-i1 >= 0, -1-i4 >= 0 -> -1-i4 >= 0}

	Loop Acceleration

	Original rule:
	(-3+i1 == 0 /\ -1-i4 >= 0) /\ i1'=3, i3'=2+i3, i4'=-1+i4, i5'=it5, i6'=it5, i9'=0, i10'=0
	New rule:
	(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+it65 >= 0 /\ -1-i4 >= 0) /\ i1'=i1, i3'=i3+2*it65, i4'=-it65+i4, i5'=it5, i6'=it5, i9'=0, i10'=0

		-3+i1 >= 0 [0]: unchanged
		
		3-i1 >= 0 [0]: unchanged
		
		-1-i4 >= 0 [0]: monotonic increase yields -1-i4 >= 0
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, 3-i1 >= 0 -> 3-i1 >= 0, -1-i4 >= 0 -> -1-i4 >= 0}

	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+it65 >= 0 /\ -1-i4 >= 0) /\ i1'=i1, i3'=i3+2*it65, i4'=-it65+i4, i5'=it5, i6'=it5, i9'=0, i10'=0
	New rule:
	(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+it65 >= 0 /\ -1-i4 >= 0) /\ i3'=i3+2*it65, i4'=-it65+i4, i5'=it5, i6'=it5, i9'=0, i10'=0

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f5 -> 2
f12 -> 3
f20 -> 4

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   6: (-3+i1 == 0 /\ i4 == 0) /\ i1'=2, i3'=1+i3, i4'=0, i7'=0, i8'=0, i11'=it8, i12'=it8, i13'=0, i14'=0
   9: (-1+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=it4
  10: (-1+i1 == 0) /\ i1'=2, i3'=1+i3, i7'=1, i8'=1
  11: (-3+i1 == 0 /\ -1-i4 >= 0) /\ i1'=3, i3'=2+i3, i4'=-1+i4, i5'=it5, i6'=it5, i9'=0, i10'=0
  12: (-3+i1 == 0 /\ -1+i4 >= 0) /\ i1'=3, i3'=2+i3, i4'=-1+i4, i5'=it6, i6'=it6, i9'=0, i10'=0
  13: (-3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+it65 >= 0 /\ -1-i4 >= 0) /\ i1'=0
  14: (-3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+it65 >= 0 /\ -1-i4 >= 0) /\ i3'=i3+2*it65, i4'=-it65+i4, i5'=it5, i6'=it5, i9'=0, i10'=0

Dependency graph:
9 -> 6, 9 -> 11, 9 -> 12, 9 -> 13, 9 -> 14
11 -> 11, 11 -> 13, 11 -> 14
12 -> 6, 12 -> 12
14 -> 11, 14 -> 13

Step with 13

	Trace

	9[(-1+i1 == 0)]
	13[(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+it65 >= 0 /\ -1-i4 >= 0)]
	
	Blocked

	{0[T], 10[T]}
	{}
	{13[T]}
	
Refute

	Counterexample

	(i1=1, i3=-1, i4=0, i5=0, i6=0, i7=0, i8=0, i9=0, i10=0, i11=0, i12=0, i13=0, i14=0)
	-9-> (i1=3, i3=0, i4=-1, i5=0, i6=0, i7=0, i8=0, i9=0, i10=0, i11=0, i12=0, i13=0, i14=0 )
	-13-> ( )
	
NO

Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
MAYBE


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄, X₅, X₆, X₇, X₈, X₉, X₁₀
  Temp_Vars:  L, M
  Locations:  l0, l1, l2, l3
  Return Locations:  
  Transitions:
  t₁: l0(X₀, X₁, X₂, X₃, X₄, X₅, X₆, X₇, X₈, X₉, X₁₀) → l1(M, X₁, X₂, X₃, X₄, X₅, X₆, X₇, X₈, X₉, X₁₀) :|: L ≤ 15
  t₀: l0(X₀, X₁, X₂, X₃, X₄, X₅, X₆, X₇, X₈, X₉, X₁₀) → l2(X₀, X₁, X₂, X₃, X₄, X₅, X₆, X₇, X₈, X₉, X₁₀)
  t₄: l0(X₀, X₁, X₂, X₃, X₄, X₅, X₆, X₇, X₈, X₉, X₁₀) → l2(X₀, X₁, X₂, 1, 1, X₅, X₆, X₇, X₈, X₉, X₁₀) :|: M ≤ 15
  t₆: l1(X₀, X₁, X₂, X₃, X₄, X₅, X₆, X₇, X₈, X₉, X₁₀) → l2(0, X₁, X₂, 0, 0, X₅, X₆, M, M, 0, 0) :|: 0 ≤ X₀ ∧ X₀ ≤ 0
  t₂: l1(X₀, X₁, X₂, X₃, X₄, X₅, X₆, X₇, X₈, X₉, X₁₀) → l3(X₀, M, M, X₃, X₄, X₅, X₆, X₇, X₈, X₉, X₁₀) :|: 1+X₀ ≤ 0
  t₃: l1(X₀, X₁, X₂, X₃, X₄, X₅, X₆, X₇, X₈, X₉, X₁₀) → l3(X₀, M, M, X₃, X₄, X₅, X₆, X₇, X₈, X₉, X₁₀) :|: 1 ≤ X₀
  t₅: l3(X₀, X₁, X₂, X₃, X₄, X₅, X₆, X₇, X₈, X₉, X₁₀) → l1(X₀-1, X₁, X₂, X₃, X₄, 0, 0, X₇, X₈, X₉, X₁₀)


Preprocessing
  Eliminate variables [X₁; X₂; X₃; X₄; X₅; X₆; X₇; X₈; X₉; X₁₀] that do not contribute to the problem


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀
  Temp_Vars:  L, M
  Locations:  l0, l1, l2, l3
  Return Locations:  
  Transitions:
  t₇: l0(X₀) → l1(M) :|: L ≤ 15
  t₈: l0(X₀) → l2(X₀)
  t₉: l0(X₀) → l2(X₀) :|: M ≤ 15
  t₁₀: l1(X₀) → l2(0) :|: 0 ≤ X₀ ∧ X₀ ≤ 0
  t₁₁: l1(X₀) → l3(X₀) :|: 1+X₀ ≤ 0
  t₁₂: l1(X₀) → l3(X₀) :|: 1 ≤ X₀
  t₁₃: l3(X₀) → l1(X₀-1)


  Found invariant 0 ≤ X₀ for location l1_v2


  Found invariant 1+X₀ ≤ 0 for location l3_v2


  Found invariant 2+X₀ ≤ 0 for location l1_v1


  Found invariant 1 ≤ X₀ for location l3_v1


All Bounds
Timebounds
  Overall timebound:inf {Infinity}
    t₇: 1 {O(1)}
    t₈: 1 {O(1)}
    t₉: 1 {O(1)}
    t₁₀: 1 {O(1)}
    t₁₁: inf {Infinity}
    t₁₂: inf {Infinity}
    t₁₃: inf {Infinity}


Costbounds
  Overall costbound: inf {Infinity}
    t₇: 1 {O(1)}
    t₈: 1 {O(1)}
    t₉: 1 {O(1)}
    t₁₀: 1 {O(1)}
    t₁₁: inf {Infinity}
    t₁₂: inf {Infinity}
    t₁₃: inf {Infinity}


Sizebounds
    t₈, X₀: X₀ {O(n)}
    t₉, X₀: X₀ {O(n)}
    t₁₀, X₀: 0 {O(1)}

