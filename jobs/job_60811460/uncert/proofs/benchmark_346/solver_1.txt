WORST_CASE(?,O(1))

# LoAT Proof:
Initial ITS

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f8 -> 2
f6 -> 3

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=0, i5'=10, i6'=0
   1: (-2+i1 == 0 /\ -1-i6+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=2+i4, i6'=1+i6
   2: (-2+i1 == 0 /\ -1-i4+2*i5 >= 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=1+i3
   3: (-2+i1 == 0 /\ i4-2*i5 >= 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=1+i3

Dependency graph:
0 -> 1, 0 -> 2, 0 -> 3
1 -> 1, 1 -> 2, 1 -> 3

Refined Dependency Graph

	Removed the following edges: 0 -> 2, 0 -> 3

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f8 -> 2
f6 -> 3

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=0, i5'=10, i6'=0
   1: (-2+i1 == 0 /\ -1-i6+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=2+i4, i6'=1+i6
   2: (-2+i1 == 0 /\ -1-i4+2*i5 >= 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=1+i3
   3: (-2+i1 == 0 /\ i4-2*i5 >= 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=1+i3

Dependency graph:
0 -> 1
1 -> 1, 1 -> 2, 1 -> 3

Step with 0

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	1[(-2+i1 == 0 /\ -1-i6+i5 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Accelerate

	Loop Acceleration

	Original rule:
	(-2+i1 == 0 /\ -1-i6+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=2+i4, i6'=1+i6
	New rule:
	(-i6-it11+i5 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+it11 >= 0) /\ i1'=i1, i3'=i3+it11, i4'=i4+2*it11, i6'=i6+it11

		-2+i1 >= 0 [0]: unchanged
		
		-1-i6+i5 >= 0 [0]: montonic decrease yields -i6-it11+i5 >= 0
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, -1-i6+i5 >= 0 -> -i6-it11+i5 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-i6-it11+i5 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+it11 >= 0) /\ i1'=i1, i3'=i3+it11, i4'=i4+2*it11, i6'=i6+it11
	New rule:
	(-i6-it11+i5 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+it11 >= 0) /\ i3'=i3+it11, i4'=i4+2*it11, i6'=i6+it11
	
	Instantiation

	Original rule:
	(-i6-it11+i5 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+it11 >= 0) /\ i3'=i3+it11, i4'=i4+2*it11, i6'=i6+it11
	New rule:
	(0 >= 0 /\ -2+i1 >= 0 /\ -1-i6+i5 >= 0 /\ 2-i1 >= 0) /\ i3'=-i6+i3+i5, i4'=-2*i6+i4+2*i5, i6'=i5

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f8 -> 2
f6 -> 3

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=0, i5'=10, i6'=0
   1: (-2+i1 == 0 /\ -1-i6+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=2+i4, i6'=1+i6
   2: (-2+i1 == 0 /\ -1-i4+2*i5 >= 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=1+i3
   3: (-2+i1 == 0 /\ i4-2*i5 >= 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=1+i3
   4: (0 >= 0 /\ -2+i1 >= 0 /\ -1-i6+i5 >= 0 /\ 2-i1 >= 0) /\ i3'=-i6+i3+i5, i4'=-2*i6+i4+2*i5, i6'=i5

Dependency graph:
0 -> 1, 0 -> 4
1 -> 1, 1 -> 2, 1 -> 3, 1 -> 4
4 -> 1, 4 -> 2, 4 -> 3

	Trace

	0[(-1+i1 == 0)]
	4[(0 >= 0 /\ -2+i1 >= 0 /\ -1-i6+i5 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{}
	{1[T], 4[T]}
	
Step with 3

	Trace

	0[(-1+i1 == 0)]
	4[(0 >= 0 /\ -2+i1 >= 0 /\ -1-i6+i5 >= 0 /\ 2-i1 >= 0)]
	3[(-2+i1 == 0 /\ i4-2*i5 >= 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{}
	{1[T], 4[T]}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	4[(0 >= 0 /\ -2+i1 >= 0 /\ -1-i6+i5 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{}
	{1[T], 3[T], 4[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{4[T]}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	1[(-2+i1 == 0 /\ -1-i6+i5 >= 0)]
	
	Blocked

	{}
	{4[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{1[T], 4[T]}
	
Backtrack

	Trace

	Blocked

	{0[T]}
	
Accept

Constant


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂) → l1(0, 10, 0)
  t₁: l1(X₀, X₁, X₂) → l1(2+X₀, X₁, 1+X₂) :|: 1+X₂ ≤ X₁
  t₂: l1(X₀, X₁, X₂) → l2(X₀, X₁, X₂) :|: 1+X₀ ≤ 2⋅X₁ ∧ X₁ ≤ X₂
  t₃: l1(X₀, X₁, X₂) → l2(X₀, X₁, X₂) :|: 2⋅X₁ ≤ X₀ ∧ X₁ ≤ X₂


Preprocessing
  Found invariant X₂ ≤ 10 ∧ X₂ ≤ X₁ ∧ X₁+X₂ ≤ 20 ∧ X₂ ≤ X₀ ∧ 0 ≤ X₂ ∧ 10 ≤ X₁+X₂ ∧ X₁ ≤ 10+X₂ ∧ 0 ≤ X₀+X₂ ∧ X₁ ≤ 10 ∧ X₁ ≤ 10+X₀ ∧ 10 ≤ X₁ ∧ 10 ≤ X₀+X₁ ∧ 0 ≤ X₀ for location l1


  Found invariant X₂ ≤ 10 ∧ X₂ ≤ X₁ ∧ X₁+X₂ ≤ 20 ∧ X₂ ≤ X₀ ∧ 10 ≤ X₂ ∧ 20 ≤ X₁+X₂ ∧ X₁ ≤ X₂ ∧ 20 ≤ X₀+X₂ ∧ X₁ ≤ 10 ∧ X₁ ≤ X₀ ∧ 10 ≤ X₁ ∧ 20 ≤ X₀+X₁ ∧ 10 ≤ X₀ for location l2


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂) → l1(0, 10, 0)
  t₁: l1(X₀, X₁, X₂) → l1(2+X₀, X₁, 1+X₂) :|: 1+X₂ ≤ X₁ ∧ X₁+X₂ ≤ 20 ∧ X₁ ≤ 10+X₀ ∧ X₁ ≤ 10 ∧ X₁ ≤ 10+X₂ ∧ X₂ ≤ 10 ∧ 10 ≤ X₀+X₁ ∧ 10 ≤ X₁ ∧ 10 ≤ X₁+X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₂ ∧ X₂ ≤ X₀ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₂
  t₂: l1(X₀, X₁, X₂) → l2(X₀, X₁, X₂) :|: 1+X₀ ≤ 2⋅X₁ ∧ X₁ ≤ X₂ ∧ X₁+X₂ ≤ 20 ∧ X₁ ≤ 10+X₀ ∧ X₁ ≤ 10 ∧ X₁ ≤ 10+X₂ ∧ X₂ ≤ 10 ∧ 10 ≤ X₀+X₁ ∧ 10 ≤ X₁ ∧ 10 ≤ X₁+X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₂ ∧ X₂ ≤ X₀ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₂
  t₃: l1(X₀, X₁, X₂) → l2(X₀, X₁, X₂) :|: 2⋅X₁ ≤ X₀ ∧ X₁ ≤ X₂ ∧ X₁+X₂ ≤ 20 ∧ X₁ ≤ 10+X₀ ∧ X₁ ≤ 10 ∧ X₁ ≤ 10+X₂ ∧ X₂ ≤ 10 ∧ 10 ≤ X₀+X₁ ∧ 10 ≤ X₁ ∧ 10 ≤ X₁+X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₂ ∧ X₂ ≤ X₀ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₂


MPRF for transition t₁: l1(X₀, X₁, X₂) → l1(2+X₀, X₁, 1+X₂) :|: 1+X₂ ≤ X₁ ∧ X₁+X₂ ≤ 20 ∧ X₁ ≤ 10+X₀ ∧ X₁ ≤ 10 ∧ X₁ ≤ 10+X₂ ∧ X₂ ≤ 10 ∧ 10 ≤ X₀+X₁ ∧ 10 ≤ X₁ ∧ 10 ≤ X₁+X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₂ ∧ X₂ ≤ X₀ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₂ of depth 1:
  new bound:
    11 {O(1)}

  MPRF:
    • l1: [1+X₁-X₂]




All Bounds
Timebounds
  Overall timebound:14 {O(1)}
    t₀: 1 {O(1)}
    t₁: 11 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}


Costbounds
  Overall costbound: 14 {O(1)}
    t₀: 1 {O(1)}
    t₁: 11 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}


Sizebounds
    t₀, X₀: 0 {O(1)}
    t₀, X₁: 10 {O(1)}
    t₀, X₂: 0 {O(1)}
    t₁, X₀: 22 {O(1)}
    t₁, X₁: 10 {O(1)}
    t₁, X₂: 10 {O(1)}
    t₂, X₀: 19 {O(1)}
    t₂, X₁: 10 {O(1)}
    t₂, X₂: 10 {O(1)}
    t₃, X₀: 22 {O(1)}
    t₃, X₁: 10 {O(1)}
    t₃, X₂: 10 {O(1)}

