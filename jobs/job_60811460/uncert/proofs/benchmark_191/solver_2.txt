WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [lbl111/7]
1. recursive  : [lbl111_loop_cont/14,lbl121/13]
2. non_recursive  : [stop/7]
3. non_recursive  : [cut/7]
4. non_recursive  : [exit_location/1]
5. non_recursive  : [lbl121_loop_cont/8]
6. non_recursive  : [lbl6/7]
7. non_recursive  : [start/7]
8. non_recursive  : [start0/7]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into lbl111/7
1. SCC is partially evaluated into lbl121/13
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into lbl121_loop_cont/8
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into start/7
8. SCC is partially evaluated into start0/7

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations lbl111/7 
* CE 14 is refined into CE [15] 
* CE 12 is refined into CE [16] 
* CE 13 is refined into CE [17] 


### Cost equations --> "Loop" of lbl111/7 
* CEs [17] --> Loop 15 
* CEs [15] --> Loop 16 
* CEs [16] --> Loop 17 

### Ranking functions of CR lbl111(A,B,C,D,E,G,H) 
* RF of phase [15]: [E]

#### Partial ranking functions of CR lbl111(A,B,C,D,E,G,H) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    E


### Specialization of cost equations lbl121/13 
* CE 5 is refined into CE [18,19] 
* CE 9 is refined into CE [20] 
* CE 6 is refined into CE [21,22] 
* CE 7 is refined into CE [23] 
* CE 8 is refined into CE [24] 


### Cost equations --> "Loop" of lbl121/13 
* CEs [24] --> Loop 18 
* CEs [19] --> Loop 19 
* CEs [18] --> Loop 20 
* CEs [20] --> Loop 21 
* CEs [22] --> Loop 22 
* CEs [21] --> Loop 23 
* CEs [23] --> Loop 24 

### Ranking functions of CR lbl121(A,B,C,D,E,F,G,H,I,J,K,L,M) 
* RF of phase [18]: [-A+E+1,-D+E+1,E]

#### Partial ranking functions of CR lbl121(A,B,C,D,E,F,G,H,I,J,K,L,M) 
* Partial RF of phase [18]:
  - RF of loop [18:1]:
    -A+E+1
    -D+E+1
    E


### Specialization of cost equations lbl121_loop_cont/8 
* CE 11 is refined into CE [25] 
* CE 10 is refined into CE [26] 


### Cost equations --> "Loop" of lbl121_loop_cont/8 
* CEs [25] --> Loop 25 
* CEs [26] --> Loop 26 

### Ranking functions of CR lbl121_loop_cont(A,B,C,D,E,F,G,H) 

#### Partial ranking functions of CR lbl121_loop_cont(A,B,C,D,E,F,G,H) 


### Specialization of cost equations start/7 
* CE 3 is refined into CE [27] 
* CE 4 is refined into CE [28,29,30,31,32,33,34,35,36,37,38] 
* CE 2 is refined into CE [39] 


### Cost equations --> "Loop" of start/7 
* CEs [29,35] --> Loop 27 
* CEs [34] --> Loop 28 
* CEs [32,38] --> Loop 29 
* CEs [31,37] --> Loop 30 
* CEs [27] --> Loop 31 
* CEs [33] --> Loop 32 
* CEs [30,36] --> Loop 33 
* CEs [39] --> Loop 34 
* CEs [28] --> Loop 35 

### Ranking functions of CR start(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR start(A,B,C,D,E,F,G) 


### Specialization of cost equations start0/7 
* CE 1 is refined into CE [40,41,42,43,44,45,46,47,48] 


### Cost equations --> "Loop" of start0/7 
* CEs [48] --> Loop 36 
* CEs [47] --> Loop 37 
* CEs [46] --> Loop 38 
* CEs [45] --> Loop 39 
* CEs [43] --> Loop 40 
* CEs [44] --> Loop 41 
* CEs [42] --> Loop 42 
* CEs [41] --> Loop 43 
* CEs [40] --> Loop 44 

### Ranking functions of CR start0(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR start0(A,B,C,D,E,F,G) 


Computing Bounds
=====================================

#### Cost of chains of lbl111(A,B,C,D,E,G,H):
* Chain [[15],17]: 1*it(15)+0
  Such that:it(15) =< E

  with precondition: [G=2,H=0,B=C,A=D,E>=1,A>=E+2,B>=A+E+1] 

* Chain [[15],16]: 1*it(15)+0
  Such that:it(15) =< E

  with precondition: [G=4,B=C,A=D,E>=1,A>=E+2,B>=A+E+1] 

* Chain [17]: 0
  with precondition: [E=0,G=2,H=0,D=A,C=B,D>=2,C>=D+1] 

* Chain [16]: 0
  with precondition: [G=4,D=A,C=B,E>=0,D>=E+2,C>=D+E+1] 


#### Cost of chains of lbl121(A,B,C,D,E,F,G,H,I,J,K,L,M):
* Chain [[18],24]: 1*it(18)+0
  Such that:it(18) =< -A+E+1

  with precondition: [G=2,L=0,B=C,A=D,A=H,B=I,B=J,A=K,F=M,A>=1,E>=A,B>=A+E] 

* Chain [[18],23]: 1*it(18)+0
  Such that:it(18) =< -A+E+1

  with precondition: [G=2,L=0,B=C,A=D,A=H,B=I,B=J,A=K,F=M,A>=2,E>=A+1,B>=A+E] 

* Chain [[18],22]: 1*it(18)+1*s(1)+0
  Such that:s(1) =< E-K
it(18) =< E-K+1
s(1) =< K

  with precondition: [G=2,L=0,B=C,A=D,A=H,B=I,B=J,A=K,F=M,A>=3,E>=A+2,B>=A+E] 

* Chain [[18],21]: 1*it(18)+0
  Such that:it(18) =< -A+E+1

  with precondition: [G=4,B=C,A=D,A>=1,E>=A,B>=A+E] 

* Chain [[18],20]: 1*it(18)+0
  Such that:it(18) =< -A+E+1

  with precondition: [G=4,B=C,A=D,A>=2,E>=A+1,B>=A+E] 

* Chain [[18],19]: 1*it(18)+1*s(2)+0
  Such that:s(2) =< -A+E
it(18) =< -A+E+1
s(2) =< A

  with precondition: [G=4,B=C,A=D,A>=3,E>=A+2,B>=A+E] 

* Chain [23]: 0
  with precondition: [E=1,G=2,L=0,D=A,C=B,M=F,D=H,C=I,C=J,D=K,D>=2,C>=D+1] 

* Chain [22]: 1*s(1)+0
  Such that:s(1) =< E

  with precondition: [G=2,L=0,D=A,C=B,M=F,D=H,C=I,C=J,D=K,E>=2,D>=E+1,C>=D+E] 

* Chain [21]: 0
  with precondition: [G=4,D=A,C=B,D>=1,E>=0,C>=D+1,C>=D+E] 

* Chain [20]: 0
  with precondition: [G=4,D=A,C=B,E>=1,D>=E+1,C>=D+E] 

* Chain [19]: 1*s(2)+0
  Such that:s(2) =< E

  with precondition: [G=4,D=A,C=B,E>=2,D>=E+1,C>=D+E] 


#### Cost of chains of lbl121_loop_cont(A,B,C,D,E,F,G,H):
* Chain [26]: 0
  with precondition: [A=2,F=0,C=D,B=E,B>=1,C>=B+1] 

* Chain [25]: 0
  with precondition: [A=4] 


#### Cost of chains of start(A,B,C,D,E,F,G):
* Chain [35]: 0
  with precondition: [B=A+1,B=C,B=D+1,F=E,B>=3] 

* Chain [34]: 0
  with precondition: [D=A,C=B,F=E,0>=D] 

* Chain [33]: 2*s(3)+0
  Such that:aux(1) =< -2*A+B+1
s(3) =< aux(1)

  with precondition: [D=A,C=B,F=E,D>=1,C>=2*D] 

* Chain [32]: 0
  with precondition: [D=A,C=B,F=E,D>=1,C>=D+1] 

* Chain [31]: 0
  with precondition: [D=A,C=B,F=E,D>=1,D>=C] 

* Chain [30]: 2*s(5)+0
  Such that:aux(2) =< -2*A+B+1
s(5) =< aux(2)

  with precondition: [D=A,C=B,F=E,D>=2,C>=2*D+1] 

* Chain [29]: 2*s(7)+2*s(8)+0
  Such that:aux(3) =< C-2*D
aux(4) =< C-2*D+1
aux(5) =< D
s(7) =< aux(3)
s(8) =< aux(4)
s(7) =< aux(5)

  with precondition: [D=A,C=B,F=E,D>=3,C>=2*D+2] 

* Chain [28]: 0
  with precondition: [D=A,C=B,F=E,2*D>=C+1,C>=D+1] 

* Chain [27]: 2*s(11)+0
  Such that:aux(6) =< -A+B
s(11) =< aux(6)

  with precondition: [D=A,C=B,F=E,2*D>=C+1,C>=D+2] 


#### Cost of chains of start0(A,B,C,D,E,F,G):
* Chain [44]: 0
  with precondition: [A+1=C,A>=2] 

* Chain [43]: 0
  with precondition: [0>=A] 

* Chain [42]: 2*s(14)+0
  Such that:s(13) =< -2*A+C+1
s(14) =< s(13)

  with precondition: [A>=1,C>=2*A] 

* Chain [41]: 0
  with precondition: [A>=1,C>=A+1] 

* Chain [40]: 0
  with precondition: [A>=1,A>=C] 

* Chain [39]: 2*s(16)+0
  Such that:s(15) =< -2*A+C+1
s(16) =< s(15)

  with precondition: [A>=2,C>=2*A+1] 

* Chain [38]: 2*s(20)+2*s(21)+0
  Such that:s(17) =< -2*A+C
s(18) =< -2*A+C+1
s(19) =< A
s(20) =< s(17)
s(21) =< s(18)
s(20) =< s(19)

  with precondition: [A>=3,C>=2*A+2] 

* Chain [37]: 0
  with precondition: [C>=A+1,2*A>=C+1] 

* Chain [36]: 2*s(23)+0
  Such that:s(22) =< -A+C
s(23) =< s(22)

  with precondition: [C>=A+2,2*A>=C+1] 


Closed-form bounds of start0(A,B,C,D,E,F,G): 
-------------------------------------
* Chain [44] with precondition: [A+1=C,A>=2] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [43] with precondition: [0>=A] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [42] with precondition: [A>=1,C>=2*A] 
    - Upper bound: -4*A+2*C+2 
    - Complexity: n 
* Chain [41] with precondition: [A>=1,C>=A+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [40] with precondition: [A>=1,A>=C] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [39] with precondition: [A>=2,C>=2*A+1] 
    - Upper bound: -4*A+2*C+2 
    - Complexity: n 
* Chain [38] with precondition: [A>=3,C>=2*A+2] 
    - Upper bound: -8*A+4*C+2 
    - Complexity: n 
* Chain [37] with precondition: [C>=A+1,2*A>=C+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [36] with precondition: [C>=A+2,2*A>=C+1] 
    - Upper bound: -2*A+2*C 
    - Complexity: n 

### Maximum cost of start0(A,B,C,D,E,F,G): max([nat(-A+C)*2,nat(-2*A+C+1)*2+nat(-2*A+C)*2]) 
Asymptotic class: n 
* Total analysis performed in 236 ms.

