WORST_CASE(Omega(n^1),O(n^1))

# LoAT Proof:
WORST_CASE(Omega(n^1),?)

WORST_CASE(Omega(n^1),?)
Initial ITS

Start location: start0

Location map:
LoAT_sink -> 0
start0 -> 1
start -> 2
stop -> 3
lbl32 -> 4

Rules:
   0: (i7-i4 == 0 /\ 1-i4 >= 0 /\ -2+i1 == 0 /\ -i6+i5 == 0) /\ i1'=3, i3'=1+i3
   1: (i7-i4 == 0 /\ -2+i1 == 0 /\ -i6+i5 == 0 /\ -2+i4 >= 0) /\ i1'=4, i3'=1+i3, i7'=-1+i7
   2: (-1+i7 == 0 /\ -4+i1 == 0 /\ -i6+i5 == 0 /\ -2+i4 >= 0) /\ i1'=3, i3'=1+i3
   3: (-1+i7 >= 0 /\ -4+i1 == 0 /\ -1-i7+i4 >= 0 /\ -2+i7 >= 0 /\ -i6+i5 == 0) /\ i1'=4, i3'=1+i3, i7'=-1+i7
   4: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i5'=i6, i7'=i4

Dependency graph:
1 -> 2, 1 -> 3
3 -> 2, 3 -> 3
4 -> 0, 4 -> 1

Step with 4

	Trace

	4[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 1

	Trace

	4[(-1+i1 == 0)]
	1[(i7-i4 == 0 /\ -2+i1 == 0 /\ -i6+i5 == 0 /\ -2+i4 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Step with 3

	Trace

	4[(-1+i1 == 0)]
	1[(i7-i4 == 0 /\ -2+i1 == 0 /\ -i6+i5 == 0 /\ -2+i4 >= 0)]
	3[(-1+i7 >= 0 /\ -4+i1 == 0 /\ -1-i7+i4 >= 0 /\ -2+i7 >= 0 /\ -i6+i5 == 0)]
	
	Blocked

	{}
	{}
	{}
	{}
	
Poly(n^1)

Accelerate

	Loop Acceleration

	Original rule:
	(-1+i7 >= 0 /\ -4+i1 == 0 /\ -1-i7+i4 >= 0 /\ -2+i7 >= 0 /\ -i6+i5 == 0) /\ i1'=4, i3'=1+i3, i7'=-1+i7
	New rule:
	(-it19+i7 >= 0 /\ -1+it19 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-i7+i4 >= 0 /\ -i6+i5 >= 0 /\ -1-it19+i7 >= 0 /\ i6-i5 >= 0) /\ i1'=i1, i3'=i3+it19, i7'=-it19+i7

		-1+i7 >= 0 [0]: montonic decrease yields -it19+i7 >= 0
		
		-4+i1 >= 0 [0]: unchanged
		
		4-i1 >= 0 [0]: unchanged
		
		-1-i7+i4 >= 0 [0]: monotonic increase yields -1-i7+i4 >= 0
		
		-2+i7 >= 0 [0]: montonic decrease yields -1-it19+i7 >= 0
		
		-i6+i5 >= 0 [0]: unchanged
		
		i6-i5 >= 0 [0]: unchanged
		
		Replacement map: {-1+i7 >= 0 -> -it19+i7 >= 0, -4+i1 >= 0 -> -4+i1 >= 0, 4-i1 >= 0 -> 4-i1 >= 0, -1-i7+i4 >= 0 -> -1-i7+i4 >= 0, -2+i7 >= 0 -> -1-it19+i7 >= 0, -i6+i5 >= 0 -> -i6+i5 >= 0, i6-i5 >= 0 -> i6-i5 >= 0}

	Removed Trivial Updates

	Original rule:
	(-it19+i7 >= 0 /\ -1+it19 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-i7+i4 >= 0 /\ -i6+i5 >= 0 /\ -1-it19+i7 >= 0 /\ i6-i5 >= 0) /\ i1'=i1, i3'=i3+it19, i7'=-it19+i7
	New rule:
	(-it19+i7 >= 0 /\ -1+it19 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-i7+i4 >= 0 /\ -i6+i5 >= 0 /\ -1-it19+i7 >= 0 /\ i6-i5 >= 0) /\ i3'=i3+it19, i7'=-it19+i7
	
	Instantiation

	Original rule:
	(-it19+i7 >= 0 /\ -1+it19 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-i7+i4 >= 0 /\ -i6+i5 >= 0 /\ -1-it19+i7 >= 0 /\ i6-i5 >= 0) /\ i3'=i3+it19, i7'=-it19+i7
	New rule:
	(0 >= 0 /\ 1 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-i7+i4 >= 0 /\ -2+i7 >= 0 /\ -i6+i5 >= 0 /\ i6-i5 >= 0) /\ i3'=-1+i3+i7, i7'=1

Start location: start0

Location map:
LoAT_sink -> 0
start0 -> 1
start -> 2
stop -> 3
lbl32 -> 4

Rules:
   0: (i7-i4 == 0 /\ 1-i4 >= 0 /\ -2+i1 == 0 /\ -i6+i5 == 0) /\ i1'=3, i3'=1+i3
   1: (i7-i4 == 0 /\ -2+i1 == 0 /\ -i6+i5 == 0 /\ -2+i4 >= 0) /\ i1'=4, i3'=1+i3, i7'=-1+i7
   2: (-1+i7 == 0 /\ -4+i1 == 0 /\ -i6+i5 == 0 /\ -2+i4 >= 0) /\ i1'=3, i3'=1+i3
   3: (-1+i7 >= 0 /\ -4+i1 == 0 /\ -1-i7+i4 >= 0 /\ -2+i7 >= 0 /\ -i6+i5 == 0) /\ i1'=4, i3'=1+i3, i7'=-1+i7
   4: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i5'=i6, i7'=i4
   5: (0 >= 0 /\ 1 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-i7+i4 >= 0 /\ -2+i7 >= 0 /\ -i6+i5 >= 0 /\ i6-i5 >= 0) /\ i3'=-1+i3+i7, i7'=1

Dependency graph:
1 -> 2, 1 -> 3, 1 -> 5
3 -> 2, 3 -> 3, 3 -> 5
4 -> 0, 4 -> 1
5 -> 2, 5 -> 3

	Trace

	4[(-1+i1 == 0)]
	1[(i7-i4 == 0 /\ -2+i1 == 0 /\ -i6+i5 == 0 /\ -2+i4 >= 0)]
	5[(0 >= 0 /\ 1 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-i7+i4 >= 0 /\ -2+i7 >= 0 /\ -i6+i5 >= 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{}
	{}
	{3[T], 5[T]}
	
Step with 2

	Trace

	4[(-1+i1 == 0)]
	1[(i7-i4 == 0 /\ -2+i1 == 0 /\ -i6+i5 == 0 /\ -2+i4 >= 0)]
	5[(0 >= 0 /\ 1 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-i7+i4 >= 0 /\ -2+i7 >= 0 /\ -i6+i5 >= 0 /\ i6-i5 >= 0)]
	2[(-1+i7 == 0 /\ -4+i1 == 0 /\ -i6+i5 == 0 /\ -2+i4 >= 0)]
	
	Blocked

	{}
	{}
	{}
	{3[T], 5[T]}
	{}
	
Backtrack

	Trace

	4[(-1+i1 == 0)]
	1[(i7-i4 == 0 /\ -2+i1 == 0 /\ -i6+i5 == 0 /\ -2+i4 >= 0)]
	5[(0 >= 0 /\ 1 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-i7+i4 >= 0 /\ -2+i7 >= 0 /\ -i6+i5 >= 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{}
	{}
	{2[T], 3[T], 5[T]}
	
Backtrack

	Trace

	4[(-1+i1 == 0)]
	1[(i7-i4 == 0 /\ -2+i1 == 0 /\ -i6+i5 == 0 /\ -2+i4 >= 0)]
	
	Blocked

	{}
	{}
	{5[T]}
	
Step with 3

	Trace

	4[(-1+i1 == 0)]
	1[(i7-i4 == 0 /\ -2+i1 == 0 /\ -i6+i5 == 0 /\ -2+i4 >= 0)]
	3[(-1+i7 >= 0 /\ -4+i1 == 0 /\ -1-i7+i4 >= 0 /\ -2+i7 >= 0 /\ -i6+i5 == 0)]
	
	Blocked

	{}
	{}
	{5[T]}
	{}
	
Covered

	Trace

	4[(-1+i1 == 0)]
	1[(i7-i4 == 0 /\ -2+i1 == 0 /\ -i6+i5 == 0 /\ -2+i4 >= 0)]
	
	Blocked

	{}
	{}
	{3[T], 5[T]}
	
Step with 2

	Trace

	4[(-1+i1 == 0)]
	1[(i7-i4 == 0 /\ -2+i1 == 0 /\ -i6+i5 == 0 /\ -2+i4 >= 0)]
	2[(-1+i7 == 0 /\ -4+i1 == 0 /\ -i6+i5 == 0 /\ -2+i4 >= 0)]
	
	Blocked

	{}
	{}
	{3[T], 5[T]}
	{}
	
Backtrack

	Trace

	4[(-1+i1 == 0)]
	1[(i7-i4 == 0 /\ -2+i1 == 0 /\ -i6+i5 == 0 /\ -2+i4 >= 0)]
	
	Blocked

	{}
	{}
	{2[T], 3[T], 5[T]}
	
Backtrack

	Trace

	4[(-1+i1 == 0)]
	
	Blocked

	{}
	{1[T]}
	
Step with 0

	Trace

	4[(-1+i1 == 0)]
	0[(i7-i4 == 0 /\ 1-i4 >= 0 /\ -2+i1 == 0 /\ -i6+i5 == 0)]
	
	Blocked

	{}
	{1[T]}
	{}
	
Backtrack

	Trace

	4[(-1+i1 == 0)]
	
	Blocked

	{}
	{0[T], 1[T]}
	
Backtrack

	Trace

	Blocked

	{4[T]}
	
Accept

Poly(n^1)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃
  Temp_Vars:  
  Locations:  l0, l1, l2, l3
  Return Locations:  
  Transitions:
  t₄: l0(X₀, X₁, X₂, X₃) → l3(X₀, X₂, X₂, X₀)
  t₃: l1(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, X₃-1) :|: 1+X₃ ≤ X₀ ∧ 1 ≤ X₃ ∧ 2 ≤ X₃ ∧ X₂ ≤ X₁ ∧ X₁ ≤ X₂
  t₂: l1(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, X₃) :|: X₃ ≤ 1 ∧ 1 ≤ X₃ ∧ 2 ≤ X₀ ∧ X₂ ≤ X₁ ∧ X₁ ≤ X₂
  t₁: l3(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, X₃-1) :|: 2 ≤ X₀ ∧ X₃ ≤ X₀ ∧ X₀ ≤ X₃ ∧ X₂ ≤ X₁ ∧ X₁ ≤ X₂
  t₀: l3(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, X₃) :|: X₀ ≤ 1 ∧ X₃ ≤ X₀ ∧ X₀ ≤ X₃ ∧ X₂ ≤ X₁ ∧ X₁ ≤ X₂


Preprocessing
  Found invariant 1+X₃ ≤ X₀ ∧ 1 ≤ X₃ ∧ 3 ≤ X₀+X₃ ∧ X₂ ≤ X₁ ∧ X₁ ≤ X₂ ∧ 2 ≤ X₀ for location l1


  Found invariant X₃ ≤ 1 ∧ X₃ ≤ X₀ ∧ X₂ ≤ X₁ ∧ X₁ ≤ X₂ for location l2


  Found invariant X₃ ≤ X₀ ∧ X₀ ≤ X₃ ∧ X₂ ≤ X₁ ∧ X₁ ≤ X₂ for location l3


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃
  Temp_Vars:  
  Locations:  l0, l1, l2, l3
  Return Locations:  
  Transitions:
  t₄: l0(X₀, X₁, X₂, X₃) → l3(X₀, X₂, X₂, X₀)
  t₃: l1(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, X₃-1) :|: 1+X₃ ≤ X₀ ∧ 1 ≤ X₃ ∧ 2 ≤ X₃ ∧ X₂ ≤ X₁ ∧ X₁ ≤ X₂ ∧ 2 ≤ X₀ ∧ 3 ≤ X₀+X₃
  t₂: l1(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, X₃) :|: X₃ ≤ 1 ∧ 1 ≤ X₃ ∧ 2 ≤ X₀ ∧ X₂ ≤ X₁ ∧ X₁ ≤ X₂ ∧ 1+X₃ ≤ X₀ ∧ 3 ≤ X₀+X₃
  t₁: l3(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, X₃-1) :|: 2 ≤ X₀ ∧ X₃ ≤ X₀ ∧ X₀ ≤ X₃ ∧ X₂ ≤ X₁ ∧ X₁ ≤ X₂
  t₀: l3(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, X₃) :|: X₀ ≤ 1 ∧ X₃ ≤ X₀ ∧ X₀ ≤ X₃ ∧ X₂ ≤ X₁ ∧ X₁ ≤ X₂


MPRF for transition t₃: l1(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, X₃-1) :|: 1+X₃ ≤ X₀ ∧ 1 ≤ X₃ ∧ 2 ≤ X₃ ∧ X₂ ≤ X₁ ∧ X₁ ≤ X₂ ∧ 2 ≤ X₀ ∧ 3 ≤ X₀+X₃ of depth 1:
  new bound:
    X₀ {O(n)}

  MPRF:
    • l1: [X₃]




All Bounds
Timebounds
  Overall timebound:X₀+4 {O(n)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: X₀ {O(n)}
    t₄: 1 {O(1)}


Costbounds
  Overall costbound: X₀+4 {O(n)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: X₀ {O(n)}
    t₄: 1 {O(1)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₂ {O(n)}
    t₀, X₂: X₂ {O(n)}
    t₀, X₃: X₀ {O(n)}
    t₁, X₀: X₀ {O(n)}
    t₁, X₁: X₂ {O(n)}
    t₁, X₂: X₂ {O(n)}
    t₁, X₃: X₀ {O(n)}
    t₂, X₀: 2⋅X₀ {O(n)}
    t₂, X₁: 2⋅X₂ {O(n)}
    t₂, X₂: 2⋅X₂ {O(n)}
    t₂, X₃: 1 {O(1)}
    t₃, X₀: X₀ {O(n)}
    t₃, X₁: X₂ {O(n)}
    t₃, X₂: X₂ {O(n)}
    t₃, X₃: X₀ {O(n)}
    t₄, X₀: X₀ {O(n)}
    t₄, X₁: X₂ {O(n)}
    t₄, X₂: X₂ {O(n)}
    t₄, X₃: X₀ {O(n)}

