WORST_CASE(Omega(n^2),O(n^2))

# LoAT Proof:
WORST_CASE(Omega(n^2),?)

WORST_CASE(Omega(n^1),?)
WORST_CASE(Omega(n^2),?)
Initial ITS

Start location: eval_ax_start

Location map:
LoAT_sink -> 0
eval_ax_start -> 1
eval_ax_bb0_in -> 2
eval_ax_0 -> 3
eval_ax_1 -> 4
eval_ax_2 -> 5
eval_ax_3 -> 6
eval_ax_4 -> 7
eval_ax_5 -> 8
eval_ax_6 -> 9
eval_ax_bb1_in -> 10
eval_ax_bb2_in -> 11
eval_ax_bb3_in -> 12
eval_ax_bb4_in -> 13
eval_ax_12 -> 14
eval_ax_13 -> 15
eval_ax_bb5_in -> 16
eval_ax_stop -> 17

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: -2+i1 == 0 /\ i1'=3, i3'=1+i3
   2: -3+i1 == 0 /\ i1'=4, i3'=1+i3
   3: -4+i1 == 0 /\ i1'=5, i3'=1+i3
   4: -5+i1 == 0 /\ i1'=6, i3'=1+i3
   5: -6+i1 == 0 /\ i1'=7, i3'=1+i3
   6: -7+i1 == 0 /\ i1'=8, i3'=1+i3
   7: -8+i1 == 0 /\ i1'=9, i3'=1+i3
   8: -9+i1 == 0 /\ i1'=10, i3'=1+i3, i4'=0
   9: -10+i1 == 0 /\ i1'=11, i3'=1+i3, i5'=0
  10: (-11+i1 == 0 /\ 1+i5-i9 < 0) /\ i1'=12, i3'=1+i3
  11: (-11+i1 == 0 /\ 1+i5-i9 >= 0) /\ i1'=13, i3'=1+i3
  12: -12+i1 == 0 /\ i1'=11, i3'=1+i3, i5'=1+i5
  13: -13+i1 == 0 /\ i1'=14, i3'=1+i3, i6'=1+i4
  14: -14+i1 == 0 /\ i1'=15, i3'=1+i3
  15: (-15+i1 == 0 /\ 1+i6-i9 < 0 /\ 1+i5-i9 >= 0) /\ i1'=10, i3'=1+i3, i4'=i6
  16: (-15+i1 == 0 /\ 1+i5-i9 < 0) /\ i1'=16, i3'=1+i3
  17: (-15+i1 == 0 /\ 1+i6-i9 >= 0) /\ i1'=16, i3'=1+i3
  18: -16+i1 == 0 /\ i1'=17, i3'=1+i3

Dependency graph:
0 -> 1
1 -> 2
2 -> 3
3 -> 4
4 -> 5
5 -> 6
6 -> 7
7 -> 8
8 -> 9
9 -> 10, 9 -> 11
10 -> 12
11 -> 13
12 -> 10, 12 -> 11
13 -> 14
14 -> 15, 14 -> 16, 14 -> 17
15 -> 9
16 -> 18
17 -> 18

Chained Linear Paths

	Applied Chaining

	First rule:
	-1+i1 == 0 /\ i1'=2, i3'=1+i3
	Second rule:
	-2+i1 == 0 /\ i1'=3, i3'=1+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 0, 1
	
	Applied Chaining

	First rule:
	-3+i1 == 0 /\ i1'=4, i3'=1+i3
	Second rule:
	-4+i1 == 0 /\ i1'=5, i3'=1+i3
	New rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 2, 3
	
	Applied Chaining

	First rule:
	-5+i1 == 0 /\ i1'=6, i3'=1+i3
	Second rule:
	-6+i1 == 0 /\ i1'=7, i3'=1+i3
	New rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=7, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 4, 5
	
	Applied Chaining

	First rule:
	-7+i1 == 0 /\ i1'=8, i3'=1+i3
	Second rule:
	-8+i1 == 0 /\ i1'=9, i3'=1+i3
	New rule:
	(0 == 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 6, 7
	
	Applied Chaining

	First rule:
	-9+i1 == 0 /\ i1'=10, i3'=1+i3, i4'=0
	Second rule:
	-10+i1 == 0 /\ i1'=11, i3'=1+i3, i5'=0
	New rule:
	(0 == 0 /\ -9+i1 == 0) /\ i1'=11, i3'=2+i3, i4'=0, i5'=0
	
	Applied Deletion

	Removed the following rules: 8
	
	Applied Chaining

	First rule:
	(-11+i1 == 0 /\ 1+i5-i9 < 0) /\ i1'=12, i3'=1+i3
	Second rule:
	-12+i1 == 0 /\ i1'=11, i3'=1+i3, i5'=1+i5
	New rule:
	(0 == 0 /\ -11+i1 == 0 /\ 1+i5-i9 < 0) /\ i1'=11, i3'=2+i3, i5'=1+i5
	
	Applied Deletion

	Removed the following rules: 10, 12
	
	Applied Chaining

	First rule:
	(-11+i1 == 0 /\ 1+i5-i9 >= 0) /\ i1'=13, i3'=1+i3
	Second rule:
	-13+i1 == 0 /\ i1'=14, i3'=1+i3, i6'=1+i4
	New rule:
	(0 == 0 /\ -11+i1 == 0 /\ 1+i5-i9 >= 0) /\ i1'=14, i3'=2+i3, i6'=1+i4
	
	Applied Deletion

	Removed the following rules: 11, 13
	
	Applied Chaining

	First rule:
	(-15+i1 == 0 /\ 1+i6-i9 < 0 /\ 1+i5-i9 >= 0) /\ i1'=10, i3'=1+i3, i4'=i6
	Second rule:
	-10+i1 == 0 /\ i1'=11, i3'=1+i3, i5'=0
	New rule:
	(0 == 0 /\ -15+i1 == 0 /\ 1+i6-i9 < 0 /\ 1+i5-i9 >= 0) /\ i1'=11, i3'=2+i3, i4'=i6, i5'=0
	
	Applied Deletion

	Removed the following rules: 9, 15
	
	Applied Chaining

	First rule:
	(-15+i1 == 0 /\ 1+i5-i9 < 0) /\ i1'=16, i3'=1+i3
	Second rule:
	-16+i1 == 0 /\ i1'=17, i3'=1+i3
	New rule:
	(0 == 0 /\ -15+i1 == 0 /\ 1+i5-i9 < 0) /\ i1'=17, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 16
	
	Applied Chaining

	First rule:
	(-15+i1 == 0 /\ 1+i6-i9 >= 0) /\ i1'=16, i3'=1+i3
	Second rule:
	-16+i1 == 0 /\ i1'=17, i3'=1+i3
	New rule:
	(0 == 0 /\ -15+i1 == 0 /\ 1+i6-i9 >= 0) /\ i1'=17, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 17, 18
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	Second rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	
	Applied Deletion

	Removed the following rules: 19, 20
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=7, i3'=2+i3
	Second rule:
	(0 == 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
	New rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=9, i3'=4+i3
	
	Applied Deletion

	Removed the following rules: 21, 22
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -11+i1 == 0 /\ 1+i5-i9 >= 0) /\ i1'=14, i3'=2+i3, i6'=1+i4
	Second rule:
	-14+i1 == 0 /\ i1'=15, i3'=1+i3
	New rule:
	(0 == 0 /\ -11+i1 == 0 /\ 1+i5-i9 >= 0) /\ i1'=15, i3'=3+i3, i6'=1+i4
	
	Applied Deletion

	Removed the following rules: 14, 25
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	Second rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=9, i3'=4+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=9, i3'=8+i3
	
	Applied Deletion

	Removed the following rules: 29, 30
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=9, i3'=8+i3
	Second rule:
	(0 == 0 /\ -9+i1 == 0) /\ i1'=11, i3'=2+i3, i4'=0, i5'=0
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=11, i3'=10+i3, i4'=0, i5'=0
	
	Applied Deletion

	Removed the following rules: 23, 32

Start location: eval_ax_start

Location map:
LoAT_sink -> 0
eval_ax_start -> 1
eval_ax_bb0_in -> 2
eval_ax_0 -> 3
eval_ax_1 -> 4
eval_ax_2 -> 5
eval_ax_3 -> 6
eval_ax_4 -> 7
eval_ax_5 -> 8
eval_ax_6 -> 9
eval_ax_bb1_in -> 10
eval_ax_bb2_in -> 11
eval_ax_bb3_in -> 12
eval_ax_bb4_in -> 13
eval_ax_12 -> 14
eval_ax_13 -> 15
eval_ax_bb5_in -> 16
eval_ax_stop -> 17

Rules:
  24: (0 == 0 /\ -11+i1 == 0 /\ 1+i5-i9 < 0) /\ i1'=11, i3'=2+i3, i5'=1+i5
  26: (0 == 0 /\ -15+i1 == 0 /\ 1+i6-i9 < 0 /\ 1+i5-i9 >= 0) /\ i1'=11, i3'=2+i3, i4'=i6, i5'=0
  27: (0 == 0 /\ -15+i1 == 0 /\ 1+i5-i9 < 0) /\ i1'=17, i3'=2+i3
  28: (0 == 0 /\ -15+i1 == 0 /\ 1+i6-i9 >= 0) /\ i1'=17, i3'=2+i3
  31: (0 == 0 /\ -11+i1 == 0 /\ 1+i5-i9 >= 0) /\ i1'=15, i3'=3+i3, i6'=1+i4
  33: (0 == 0 /\ -1+i1 == 0) /\ i1'=11, i3'=10+i3, i4'=0, i5'=0

Dependency graph:
24 -> 24, 24 -> 31
26 -> 24, 26 -> 31
31 -> 26, 31 -> 27, 31 -> 28
33 -> 24, 33 -> 31

Preprocessed Transitions

	Simplified Guard

	Original rule:
	(0 == 0 /\ -11+i1 == 0 /\ 1+i5-i9 < 0) /\ i1'=11, i3'=2+i3, i5'=1+i5
	New rule:
	(-11+i1 == 0 /\ 1+i5-i9 < 0) /\ i1'=11, i3'=2+i3, i5'=1+i5
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -15+i1 == 0 /\ 1+i6-i9 < 0 /\ 1+i5-i9 >= 0) /\ i1'=11, i3'=2+i3, i4'=i6, i5'=0
	New rule:
	(-15+i1 == 0 /\ 1+i6-i9 < 0 /\ 1+i5-i9 >= 0) /\ i1'=11, i3'=2+i3, i4'=i6, i5'=0
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -15+i1 == 0 /\ 1+i5-i9 < 0) /\ i1'=17, i3'=2+i3
	New rule:
	(-15+i1 == 0 /\ 1+i5-i9 < 0) /\ i1'=17, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -15+i1 == 0 /\ 1+i6-i9 >= 0) /\ i1'=17, i3'=2+i3
	New rule:
	(-15+i1 == 0 /\ 1+i6-i9 >= 0) /\ i1'=17, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -11+i1 == 0 /\ 1+i5-i9 >= 0) /\ i1'=15, i3'=3+i3, i6'=1+i4
	New rule:
	(-11+i1 == 0 /\ 1+i5-i9 >= 0) /\ i1'=15, i3'=3+i3, i6'=1+i4
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=11, i3'=10+i3, i4'=0, i5'=0
	New rule:
	-1+i1 == 0 /\ i1'=11, i3'=10+i3, i4'=0, i5'=0

Start location: eval_ax_start

Location map:
LoAT_sink -> 0
eval_ax_start -> 1
eval_ax_bb0_in -> 2
eval_ax_0 -> 3
eval_ax_1 -> 4
eval_ax_2 -> 5
eval_ax_3 -> 6
eval_ax_4 -> 7
eval_ax_5 -> 8
eval_ax_6 -> 9
eval_ax_bb1_in -> 10
eval_ax_bb2_in -> 11
eval_ax_bb3_in -> 12
eval_ax_bb4_in -> 13
eval_ax_12 -> 14
eval_ax_13 -> 15
eval_ax_bb5_in -> 16
eval_ax_stop -> 17

Rules:
  34: (-11+i1 == 0 /\ 1+i5-i9 < 0) /\ i1'=11, i3'=2+i3, i5'=1+i5
  35: (-15+i1 == 0 /\ 1+i6-i9 < 0 /\ 1+i5-i9 >= 0) /\ i1'=11, i3'=2+i3, i4'=i6, i5'=0
  36: (-15+i1 == 0 /\ 1+i5-i9 < 0) /\ i1'=17, i3'=2+i3
  37: (-15+i1 == 0 /\ 1+i6-i9 >= 0) /\ i1'=17, i3'=2+i3
  38: (-11+i1 == 0 /\ 1+i5-i9 >= 0) /\ i1'=15, i3'=3+i3, i6'=1+i4
  39: -1+i1 == 0 /\ i1'=11, i3'=10+i3, i4'=0, i5'=0

Dependency graph:
34 -> 34, 34 -> 38
35 -> 34, 35 -> 38
38 -> 35, 38 -> 36, 38 -> 37
39 -> 34, 39 -> 38

Refined Dependency Graph

	Removed the following edges: 38 -> 36

Start location: eval_ax_start

Location map:
LoAT_sink -> 0
eval_ax_start -> 1
eval_ax_bb0_in -> 2
eval_ax_0 -> 3
eval_ax_1 -> 4
eval_ax_2 -> 5
eval_ax_3 -> 6
eval_ax_4 -> 7
eval_ax_5 -> 8
eval_ax_6 -> 9
eval_ax_bb1_in -> 10
eval_ax_bb2_in -> 11
eval_ax_bb3_in -> 12
eval_ax_bb4_in -> 13
eval_ax_12 -> 14
eval_ax_13 -> 15
eval_ax_bb5_in -> 16
eval_ax_stop -> 17

Rules:
  34: (-11+i1 == 0 /\ 1+i5-i9 < 0) /\ i1'=11, i3'=2+i3, i5'=1+i5
  35: (-15+i1 == 0 /\ 1+i6-i9 < 0 /\ 1+i5-i9 >= 0) /\ i1'=11, i3'=2+i3, i4'=i6, i5'=0
  36: (-15+i1 == 0 /\ 1+i5-i9 < 0) /\ i1'=17, i3'=2+i3
  37: (-15+i1 == 0 /\ 1+i6-i9 >= 0) /\ i1'=17, i3'=2+i3
  38: (-11+i1 == 0 /\ 1+i5-i9 >= 0) /\ i1'=15, i3'=3+i3, i6'=1+i4
  39: -1+i1 == 0 /\ i1'=11, i3'=10+i3, i4'=0, i5'=0

Dependency graph:
34 -> 34, 34 -> 38
35 -> 34, 35 -> 38
38 -> 35, 38 -> 37
39 -> 34, 39 -> 38

Step with 39

	Trace

	39[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 38

	Trace

	39[(-1+i1 == 0)]
	38[(-11+i1 == 0 /\ 1+i5-i9 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Step with 37

	Trace

	39[(-1+i1 == 0)]
	38[(-11+i1 == 0 /\ 1+i5-i9 >= 0)]
	37[(-15+i1 == 0 /\ 1+i6-i9 >= 0)]
	
	Blocked

	{}
	{}
	{}
	{}
	
Backtrack

	Trace

	39[(-1+i1 == 0)]
	38[(-11+i1 == 0 /\ 1+i5-i9 >= 0)]
	
	Blocked

	{}
	{}
	{37[T]}
	
Backtrack

	Trace

	39[(-1+i1 == 0)]
	
	Blocked

	{}
	{38[T]}
	
Step with 34

	Trace

	39[(-1+i1 == 0)]
	34[(-11+i1 == 0 /\ 1+i5-i9 < 0)]
	
	Blocked

	{}
	{38[T]}
	{}
	
Poly(n^1)

Accelerate

	Loop Acceleration

	Original rule:
	(-11+i1 == 0 /\ 1+i5-i9 < 0) /\ i1'=11, i3'=2+i3, i5'=1+i5
	New rule:
	(-11+i1 >= 0 /\ -1+it25 >= 0 /\ 11-i1 >= 0 /\ -it25-i5+i9 > 0) /\ i1'=i1, i3'=i3+2*it25, i5'=it25+i5

		-1-i5+i9 > 0 [0]: montonic decrease yields -it25-i5+i9 > 0
		
		-11+i1 >= 0 [0]: unchanged
		
		11-i1 >= 0 [0]: unchanged
		
		Replacement map: {-1-i5+i9 > 0 -> -it25-i5+i9 > 0, -11+i1 >= 0 -> -11+i1 >= 0, 11-i1 >= 0 -> 11-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-11+i1 >= 0 /\ -1+it25 >= 0 /\ 11-i1 >= 0 /\ -it25-i5+i9 > 0) /\ i1'=i1, i3'=i3+2*it25, i5'=it25+i5
	New rule:
	(-11+i1 >= 0 /\ -1+it25 >= 0 /\ 11-i1 >= 0 /\ -it25-i5+i9 > 0) /\ i3'=i3+2*it25, i5'=it25+i5
	
	Instantiation

	Original rule:
	(-11+i1 >= 0 /\ -1+it25 >= 0 /\ 11-i1 >= 0 /\ -it25-i5+i9 > 0) /\ i3'=i3+2*it25, i5'=it25+i5
	New rule:
	(1 > 0 /\ -11+i1 >= 0 /\ 11-i1 >= 0 /\ -2-i5+i9 >= 0) /\ i3'=-2+i3-2*i5+2*i9, i5'=-1+i9

Start location: eval_ax_start

Location map:
LoAT_sink -> 0
eval_ax_start -> 1
eval_ax_bb0_in -> 2
eval_ax_0 -> 3
eval_ax_1 -> 4
eval_ax_2 -> 5
eval_ax_3 -> 6
eval_ax_4 -> 7
eval_ax_5 -> 8
eval_ax_6 -> 9
eval_ax_bb1_in -> 10
eval_ax_bb2_in -> 11
eval_ax_bb3_in -> 12
eval_ax_bb4_in -> 13
eval_ax_12 -> 14
eval_ax_13 -> 15
eval_ax_bb5_in -> 16
eval_ax_stop -> 17

Rules:
  34: (-11+i1 == 0 /\ 1+i5-i9 < 0) /\ i1'=11, i3'=2+i3, i5'=1+i5
  35: (-15+i1 == 0 /\ 1+i6-i9 < 0 /\ 1+i5-i9 >= 0) /\ i1'=11, i3'=2+i3, i4'=i6, i5'=0
  36: (-15+i1 == 0 /\ 1+i5-i9 < 0) /\ i1'=17, i3'=2+i3
  37: (-15+i1 == 0 /\ 1+i6-i9 >= 0) /\ i1'=17, i3'=2+i3
  38: (-11+i1 == 0 /\ 1+i5-i9 >= 0) /\ i1'=15, i3'=3+i3, i6'=1+i4
  39: -1+i1 == 0 /\ i1'=11, i3'=10+i3, i4'=0, i5'=0
  40: (1 > 0 /\ -11+i1 >= 0 /\ 11-i1 >= 0 /\ -2-i5+i9 >= 0) /\ i3'=-2+i3-2*i5+2*i9, i5'=-1+i9

Dependency graph:
34 -> 34, 34 -> 38, 34 -> 40
35 -> 34, 35 -> 38, 35 -> 40
38 -> 35, 38 -> 37
39 -> 34, 39 -> 38, 39 -> 40
40 -> 34, 40 -> 38

	Trace

	39[(-1+i1 == 0)]
	40[(1 > 0 /\ -11+i1 >= 0 /\ 11-i1 >= 0 /\ -2-i5+i9 >= 0)]
	
	Blocked

	{}
	{38[T]}
	{34[T], 40[T]}
	
Step with 38

	Trace

	39[(-1+i1 == 0)]
	40[(1 > 0 /\ -11+i1 >= 0 /\ 11-i1 >= 0 /\ -2-i5+i9 >= 0)]
	38[(-11+i1 == 0 /\ 1+i5-i9 >= 0)]
	
	Blocked

	{}
	{38[T]}
	{34[T], 40[T]}
	{}
	
Step with 37

	Trace

	39[(-1+i1 == 0)]
	40[(1 > 0 /\ -11+i1 >= 0 /\ 11-i1 >= 0 /\ -2-i5+i9 >= 0)]
	38[(-11+i1 == 0 /\ 1+i5-i9 >= 0)]
	37[(-15+i1 == 0 /\ 1+i6-i9 >= 0)]
	
	Blocked

	{}
	{38[T]}
	{34[T], 40[T]}
	{}
	{}
	
Backtrack

	Trace

	39[(-1+i1 == 0)]
	40[(1 > 0 /\ -11+i1 >= 0 /\ 11-i1 >= 0 /\ -2-i5+i9 >= 0)]
	38[(-11+i1 == 0 /\ 1+i5-i9 >= 0)]
	
	Blocked

	{}
	{38[T]}
	{34[T], 40[T]}
	{37[T]}
	
Step with 35

	Trace

	39[(-1+i1 == 0)]
	40[(1 > 0 /\ -11+i1 >= 0 /\ 11-i1 >= 0 /\ -2-i5+i9 >= 0)]
	38[(-11+i1 == 0 /\ 1+i5-i9 >= 0)]
	35[(-15+i1 == 0 /\ 1+i6-i9 < 0 /\ 1+i5-i9 >= 0)]
	
	Blocked

	{}
	{38[T]}
	{34[T], 40[T]}
	{37[T]}
	{}
	
Accelerate and Drop

		Simplified Guard

		Original rule:
		(0 == 0 /\ -11+i1 == 0 /\ 2+i4-i9 < 0 /\ 1+i5-i9 >= 0) /\ i1'=11, i3'=5+i3, i4'=1+i4, i5'=0, i6'=1+i4
		New rule:
		(-11+i1 == 0 /\ 2+i4-i9 < 0 /\ 1+i5-i9 >= 0) /\ i1'=11, i3'=5+i3, i4'=1+i4, i5'=0, i6'=1+i4

	Loop Acceleration

	Original rule:
	(-11+i1 == 0 /\ 2+i4-i9 < 0 /\ 1+i5-i9 >= 0) /\ i1'=11, i3'=5+i3, i4'=1+i4, i5'=0, i6'=1+i4
	New rule:
	(-1-i4-it56+i9 > 0 /\ 1-i9 >= 0 /\ -11+i1 >= 0 /\ -1+it56 >= 0 /\ -2-i4+i9 > 0 /\ 1+i5-i9 >= 0 /\ 11-i1 >= 0) /\ i1'=i1, i3'=i3+5*it56, i4'=i4+it56, i5'=0, i6'=i4+it56

		-11+i1 >= 0 [0]: unchanged
		
		-2-i4+i9 > 0 [0]: montonic decrease yields (-1-i4-it56+i9 > 0 /\ -2-i4+i9 > 0)
		
		1+i5-i9 >= 0 [0]: eventual decrease yields (1-i9 >= 0 /\ 1+i5-i9 >= 0)
		
		1+i5-i9 >= 0 [1]: eventual increase yields (1+i5-i9 >= 0 /\ i5 <= 0)
		
		11-i1 >= 0 [0]: unchanged
		
		Replacement map: {-11+i1 >= 0 -> -11+i1 >= 0, -2-i4+i9 > 0 -> (-1-i4-it56+i9 > 0 /\ -2-i4+i9 > 0), 1+i5-i9 >= 0 -> (1-i9 >= 0 /\ 1+i5-i9 >= 0), 11-i1 >= 0 -> 11-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-1-i4-it56+i9 > 0 /\ 1-i9 >= 0 /\ -11+i1 >= 0 /\ -1+it56 >= 0 /\ -2-i4+i9 > 0 /\ 1+i5-i9 >= 0 /\ 11-i1 >= 0) /\ i1'=i1, i3'=i3+5*it56, i4'=i4+it56, i5'=0, i6'=i4+it56
	New rule:
	(-1-i4-it56+i9 > 0 /\ 1-i9 >= 0 /\ -11+i1 >= 0 /\ -1+it56 >= 0 /\ -2-i4+i9 > 0 /\ 1+i5-i9 >= 0 /\ 11-i1 >= 0) /\ i3'=i3+5*it56, i4'=i4+it56, i5'=0, i6'=i4+it56
	
	Instantiation

	Original rule:
	(-1-i4-it56+i9 > 0 /\ 1-i9 >= 0 /\ -11+i1 >= 0 /\ -1+it56 >= 0 /\ -2-i4+i9 > 0 /\ 1+i5-i9 >= 0 /\ 11-i1 >= 0) /\ i3'=i3+5*it56, i4'=i4+it56, i5'=0, i6'=i4+it56
	New rule:
	(1-i9 >= 0 /\ 1 > 0 /\ -11+i1 >= 0 /\ -2-i4+i9 > 0 /\ 1+i5-i9 >= 0 /\ -3-i4+i9 >= 0 /\ 11-i1 >= 0) /\ i3'=-10+i3-5*i4+5*i9, i4'=-2+i9, i5'=0, i6'=-2+i9

Start location: eval_ax_start

Location map:
LoAT_sink -> 0
eval_ax_start -> 1
eval_ax_bb0_in -> 2
eval_ax_0 -> 3
eval_ax_1 -> 4
eval_ax_2 -> 5
eval_ax_3 -> 6
eval_ax_4 -> 7
eval_ax_5 -> 8
eval_ax_6 -> 9
eval_ax_bb1_in -> 10
eval_ax_bb2_in -> 11
eval_ax_bb3_in -> 12
eval_ax_bb4_in -> 13
eval_ax_12 -> 14
eval_ax_13 -> 15
eval_ax_bb5_in -> 16
eval_ax_stop -> 17

Rules:
  34: (-11+i1 == 0 /\ 1+i5-i9 < 0) /\ i1'=11, i3'=2+i3, i5'=1+i5
  35: (-15+i1 == 0 /\ 1+i6-i9 < 0 /\ 1+i5-i9 >= 0) /\ i1'=11, i3'=2+i3, i4'=i6, i5'=0
  36: (-15+i1 == 0 /\ 1+i5-i9 < 0) /\ i1'=17, i3'=2+i3
  37: (-15+i1 == 0 /\ 1+i6-i9 >= 0) /\ i1'=17, i3'=2+i3
  38: (-11+i1 == 0 /\ 1+i5-i9 >= 0) /\ i1'=15, i3'=3+i3, i6'=1+i4
  39: -1+i1 == 0 /\ i1'=11, i3'=10+i3, i4'=0, i5'=0
  40: (1 > 0 /\ -11+i1 >= 0 /\ 11-i1 >= 0 /\ -2-i5+i9 >= 0) /\ i3'=-2+i3-2*i5+2*i9, i5'=-1+i9
  41: (1-i9 >= 0 /\ 1 > 0 /\ -11+i1 >= 0 /\ -2-i4+i9 > 0 /\ 1+i5-i9 >= 0 /\ -3-i4+i9 >= 0 /\ 11-i1 >= 0) /\ i3'=-10+i3-5*i4+5*i9, i4'=-2+i9, i5'=0, i6'=-2+i9

Dependency graph:
34 -> 34, 34 -> 38, 34 -> 40, 34 -> 41
35 -> 34, 35 -> 38, 35 -> 40, 35 -> 41
38 -> 35, 38 -> 37
39 -> 34, 39 -> 38, 39 -> 40, 39 -> 41
40 -> 34, 40 -> 38, 40 -> 41
41 -> 34, 41 -> 38, 41 -> 40

	Trace

	39[(-1+i1 == 0)]
	40[(1 > 0 /\ -11+i1 >= 0 /\ 11-i1 >= 0 /\ -2-i5+i9 >= 0)]
	
	Blocked

	{}
	{38[T]}
	{34[T], 40[T]}
	
Step with 38

	Trace

	39[(-1+i1 == 0)]
	40[(1 > 0 /\ -11+i1 >= 0 /\ 11-i1 >= 0 /\ -2-i5+i9 >= 0)]
	38[(-11+i1 == 0 /\ 1+i5-i9 >= 0)]
	
	Blocked

	{}
	{38[T]}
	{34[T], 40[T], 41[T]}
	{}
	
Step with 35

	Trace

	39[(-1+i1 == 0)]
	40[(1 > 0 /\ -11+i1 >= 0 /\ 11-i1 >= 0 /\ -2-i5+i9 >= 0)]
	38[(-11+i1 == 0 /\ 1+i5-i9 >= 0)]
	35[(-15+i1 == 0 /\ 1+i6-i9 < 0 /\ 1+i5-i9 >= 0)]
	
	Blocked

	{}
	{38[T]}
	{34[T], 40[T], 41[T]}
	{}
	{}
	
Poly(n^2)

Accelerate

		Extracted Implied Equalities

		Original rule:
		(0 >= 0 /\ 0 == 0 /\ 1 > 0 /\ -11+i1 >= 0 /\ -11+i1 == 0 /\ 2+i4-i9 < 0 /\ 11-i1 >= 0 /\ -2-i5+i9 >= 0) /\ i1'=11, i3'=3+i3-2*i5+2*i9, i4'=1+i4, i5'=0, i6'=1+i4
		New rule:
		(0 >= 0 /\ 0 == 0 /\ 1 > 0 /\ -11+i1 >= 0 /\ -11+i1 == 0 /\ 2+i4-i9 < 0 /\ 11-i1 >= 0 /\ 11-i1 == 0 /\ -2-i5+i9 >= 0) /\ i1'=11, i3'=3+i3-2*i5+2*i9, i4'=1+i4, i5'=0, i6'=1+i4
		
		Simplified Guard

		Original rule:
		(0 >= 0 /\ 0 == 0 /\ 1 > 0 /\ -11+i1 >= 0 /\ -11+i1 == 0 /\ 2+i4-i9 < 0 /\ 11-i1 >= 0 /\ 11-i1 == 0 /\ -2-i5+i9 >= 0) /\ i1'=11, i3'=3+i3-2*i5+2*i9, i4'=1+i4, i5'=0, i6'=1+i4
		New rule:
		(-11+i1 >= 0 /\ -11+i1 == 0 /\ 2+i4-i9 < 0 /\ 11-i1 >= 0 /\ 11-i1 == 0 /\ -2-i5+i9 >= 0) /\ i1'=11, i3'=3+i3-2*i5+2*i9, i4'=1+i4, i5'=0, i6'=1+i4

	Loop Acceleration

	Original rule:
	(-11+i1 >= 0 /\ -11+i1 == 0 /\ 2+i4-i9 < 0 /\ 11-i1 >= 0 /\ 11-i1 == 0 /\ -2-i5+i9 >= 0) /\ i1'=11, i3'=3+i3-2*i5+2*i9, i4'=1+i4, i5'=0, i6'=1+i4
	New rule:
	(-11+i1 >= 0 /\ -11+i1 == 0 /\ -1+it69 >= 0 /\ -2-it69-i4+i9 > 0 /\ 2+i4-i9 < 0 /\ -3-i4+i9 > 0 /\ 11-i1 >= 0 /\ 11-i1 == 0 /\ -2-i5+i9 >= 0 /\ -2+i9 >= 0) /\ i1'=i1, i3'=3+2*it69*i9+i3+3*it69-2*i5+2*i9, i4'=1+it69+i4, i5'=0, i6'=1+it69+i4

		-11+i1 >= 0 [0]: unchanged
		
		-2-i4+i9 > 0 [0]: montonic decrease yields (-1-it69-i4+i9 > 0 /\ -2-i4+i9 > 0)
		
		11-i1 >= 0 [0]: unchanged
		
		-2-i5+i9 >= 0 [0]: eventual decrease yields (-2-i5+i9 >= 0 /\ -2+i9 >= 0)
		
		-2-i5+i9 >= 0 [1]: eventual increase yields (-i5 <= 0 /\ -2-i5+i9 >= 0)
		
		Replacement map: {-11+i1 >= 0 -> -11+i1 >= 0, -2-i4+i9 > 0 -> (-1-it69-i4+i9 > 0 /\ -2-i4+i9 > 0), 11-i1 >= 0 -> 11-i1 >= 0, -2-i5+i9 >= 0 -> (-2-i5+i9 >= 0 /\ -2+i9 >= 0)}

	Removed Trivial Updates

	Original rule:
	(-11+i1 >= 0 /\ -11+i1 == 0 /\ -1+it69 >= 0 /\ -2-it69-i4+i9 > 0 /\ 2+i4-i9 < 0 /\ -3-i4+i9 > 0 /\ 11-i1 >= 0 /\ 11-i1 == 0 /\ -2-i5+i9 >= 0 /\ -2+i9 >= 0) /\ i1'=i1, i3'=3+2*it69*i9+i3+3*it69-2*i5+2*i9, i4'=1+it69+i4, i5'=0, i6'=1+it69+i4
	New rule:
	(-11+i1 >= 0 /\ -11+i1 == 0 /\ -1+it69 >= 0 /\ -2-it69-i4+i9 > 0 /\ 2+i4-i9 < 0 /\ -3-i4+i9 > 0 /\ 11-i1 >= 0 /\ 11-i1 == 0 /\ -2-i5+i9 >= 0 /\ -2+i9 >= 0) /\ i3'=3+2*it69*i9+i3+3*it69-2*i5+2*i9, i4'=1+it69+i4, i5'=0, i6'=1+it69+i4
	
	Instantiation

	Original rule:
	(-11+i1 >= 0 /\ -11+i1 == 0 /\ -1+it69 >= 0 /\ -2-it69-i4+i9 > 0 /\ 2+i4-i9 < 0 /\ -3-i4+i9 > 0 /\ 11-i1 >= 0 /\ 11-i1 == 0 /\ -2-i5+i9 >= 0 /\ -2+i9 >= 0) /\ i3'=3+2*it69*i9+i3+3*it69-2*i5+2*i9, i4'=1+it69+i4, i5'=0, i6'=1+it69+i4
	New rule:
	(1 > 0 /\ -11+i1 >= 0 /\ -11+i1 == 0 /\ 2+i4-i9 < 0 /\ -3-i4+i9 > 0 /\ 11-i1 >= 0 /\ 11-i1 == 0 /\ -4-i4+i9 >= 0 /\ -2-i5+i9 >= 0 /\ -2+i9 >= 0) /\ i3'=-6+i3-3*i4-2*(3+i4-i9)*i9-2*i5+5*i9, i4'=-2+i9, i5'=0, i6'=-2+i9

Start location: eval_ax_start

Location map:
LoAT_sink -> 0
eval_ax_start -> 1
eval_ax_bb0_in -> 2
eval_ax_0 -> 3
eval_ax_1 -> 4
eval_ax_2 -> 5
eval_ax_3 -> 6
eval_ax_4 -> 7
eval_ax_5 -> 8
eval_ax_6 -> 9
eval_ax_bb1_in -> 10
eval_ax_bb2_in -> 11
eval_ax_bb3_in -> 12
eval_ax_bb4_in -> 13
eval_ax_12 -> 14
eval_ax_13 -> 15
eval_ax_bb5_in -> 16
eval_ax_stop -> 17

Rules:
  34: (-11+i1 == 0 /\ 1+i5-i9 < 0) /\ i1'=11, i3'=2+i3, i5'=1+i5
  35: (-15+i1 == 0 /\ 1+i6-i9 < 0 /\ 1+i5-i9 >= 0) /\ i1'=11, i3'=2+i3, i4'=i6, i5'=0
  36: (-15+i1 == 0 /\ 1+i5-i9 < 0) /\ i1'=17, i3'=2+i3
  37: (-15+i1 == 0 /\ 1+i6-i9 >= 0) /\ i1'=17, i3'=2+i3
  38: (-11+i1 == 0 /\ 1+i5-i9 >= 0) /\ i1'=15, i3'=3+i3, i6'=1+i4
  39: -1+i1 == 0 /\ i1'=11, i3'=10+i3, i4'=0, i5'=0
  40: (1 > 0 /\ -11+i1 >= 0 /\ 11-i1 >= 0 /\ -2-i5+i9 >= 0) /\ i3'=-2+i3-2*i5+2*i9, i5'=-1+i9
  41: (1-i9 >= 0 /\ 1 > 0 /\ -11+i1 >= 0 /\ -2-i4+i9 > 0 /\ 1+i5-i9 >= 0 /\ -3-i4+i9 >= 0 /\ 11-i1 >= 0) /\ i3'=-10+i3-5*i4+5*i9, i4'=-2+i9, i5'=0, i6'=-2+i9
  42: (1 > 0 /\ -11+i1 >= 0 /\ -11+i1 == 0 /\ 2+i4-i9 < 0 /\ -3-i4+i9 > 0 /\ 11-i1 >= 0 /\ 11-i1 == 0 /\ -4-i4+i9 >= 0 /\ -2-i5+i9 >= 0 /\ -2+i9 >= 0) /\ i3'=-6+i3-3*i4-2*(3+i4-i9)*i9-2*i5+5*i9, i4'=-2+i9, i5'=0, i6'=-2+i9

Dependency graph:
34 -> 34, 34 -> 38, 34 -> 40, 34 -> 41, 34 -> 42
35 -> 34, 35 -> 38, 35 -> 40, 35 -> 41, 35 -> 42
38 -> 35, 38 -> 37
39 -> 34, 39 -> 38, 39 -> 40, 39 -> 41, 39 -> 42
40 -> 34, 40 -> 38, 40 -> 41
41 -> 34, 41 -> 38, 41 -> 40, 41 -> 42
42 -> 34, 42 -> 38, 42 -> 40, 42 -> 41

	Trace

	39[(-1+i1 == 0)]
	42[(1 > 0 /\ -11+i1 >= 0 /\ -11+i1 == 0 /\ 2+i4-i9 < 0 /\ -3-i4+i9 > 0 /\ 11-i1 >= 0 /\ 11-i1 == 0 /\ -4-i4+i9 >= 0 /\ -2-i5+i9 >= 0 /\ -2+i9 >= 0)]
	
	Blocked

	{}
	{38[T]}
	{42[T]}
	
Step with 40

	Trace

	39[(-1+i1 == 0)]
	42[(1 > 0 /\ -11+i1 >= 0 /\ -11+i1 == 0 /\ 2+i4-i9 < 0 /\ -3-i4+i9 > 0 /\ 11-i1 >= 0 /\ 11-i1 == 0 /\ -4-i4+i9 >= 0 /\ -2-i5+i9 >= 0 /\ -2+i9 >= 0)]
	40[(1 > 0 /\ -11+i1 >= 0 /\ 11-i1 >= 0 /\ -2-i5+i9 >= 0)]
	
	Blocked

	{}
	{38[T]}
	{41[T], 42[T]}
	{40[T]}
	
Step with 38

	Trace

	39[(-1+i1 == 0)]
	42[(1 > 0 /\ -11+i1 >= 0 /\ -11+i1 == 0 /\ 2+i4-i9 < 0 /\ -3-i4+i9 > 0 /\ 11-i1 >= 0 /\ 11-i1 == 0 /\ -4-i4+i9 >= 0 /\ -2-i5+i9 >= 0 /\ -2+i9 >= 0)]
	40[(1 > 0 /\ -11+i1 >= 0 /\ 11-i1 >= 0 /\ -2-i5+i9 >= 0)]
	38[(-11+i1 == 0 /\ 1+i5-i9 >= 0)]
	
	Blocked

	{}
	{38[T]}
	{41[T], 42[T]}
	{40[T], 41[T]}
	{}
	
Step with 37

	Trace

	39[(-1+i1 == 0)]
	42[(1 > 0 /\ -11+i1 >= 0 /\ -11+i1 == 0 /\ 2+i4-i9 < 0 /\ -3-i4+i9 > 0 /\ 11-i1 >= 0 /\ 11-i1 == 0 /\ -4-i4+i9 >= 0 /\ -2-i5+i9 >= 0 /\ -2+i9 >= 0)]
	40[(1 > 0 /\ -11+i1 >= 0 /\ 11-i1 >= 0 /\ -2-i5+i9 >= 0)]
	38[(-11+i1 == 0 /\ 1+i5-i9 >= 0)]
	37[(-15+i1 == 0 /\ 1+i6-i9 >= 0)]
	
	Blocked

	{}
	{38[T]}
	{41[T], 42[T]}
	{40[T], 41[T]}
	{35[T]}
	{}
	
Backtrack

	Trace

	39[(-1+i1 == 0)]
	42[(1 > 0 /\ -11+i1 >= 0 /\ -11+i1 == 0 /\ 2+i4-i9 < 0 /\ -3-i4+i9 > 0 /\ 11-i1 >= 0 /\ 11-i1 == 0 /\ -4-i4+i9 >= 0 /\ -2-i5+i9 >= 0 /\ -2+i9 >= 0)]
	40[(1 > 0 /\ -11+i1 >= 0 /\ 11-i1 >= 0 /\ -2-i5+i9 >= 0)]
	38[(-11+i1 == 0 /\ 1+i5-i9 >= 0)]
	
	Blocked

	{}
	{38[T]}
	{41[T], 42[T]}
	{40[T], 41[T]}
	{35[T], 37[T]}
	
Backtrack

	Trace

	39[(-1+i1 == 0)]
	42[(1 > 0 /\ -11+i1 >= 0 /\ -11+i1 == 0 /\ 2+i4-i9 < 0 /\ -3-i4+i9 > 0 /\ 11-i1 >= 0 /\ 11-i1 == 0 /\ -4-i4+i9 >= 0 /\ -2-i5+i9 >= 0 /\ -2+i9 >= 0)]
	40[(1 > 0 /\ -11+i1 >= 0 /\ 11-i1 >= 0 /\ -2-i5+i9 >= 0)]
	
	Blocked

	{}
	{38[T]}
	{41[T], 42[T]}
	{38[T], 40[T], 41[T]}
	
Backtrack

	Trace

	39[(-1+i1 == 0)]
	42[(1 > 0 /\ -11+i1 >= 0 /\ -11+i1 == 0 /\ 2+i4-i9 < 0 /\ -3-i4+i9 > 0 /\ 11-i1 >= 0 /\ 11-i1 == 0 /\ -4-i4+i9 >= 0 /\ -2-i5+i9 >= 0 /\ -2+i9 >= 0)]
	
	Blocked

	{}
	{38[T]}
	{40[T], 41[T], 42[T]}
	
Step with 34

	Trace

	39[(-1+i1 == 0)]
	42[(1 > 0 /\ -11+i1 >= 0 /\ -11+i1 == 0 /\ 2+i4-i9 < 0 /\ -3-i4+i9 > 0 /\ 11-i1 >= 0 /\ 11-i1 == 0 /\ -4-i4+i9 >= 0 /\ -2-i5+i9 >= 0 /\ -2+i9 >= 0)]
	34[(-11+i1 == 0 /\ 1+i5-i9 < 0)]
	
	Blocked

	{}
	{38[T]}
	{38[T], 40[T], 41[T], 42[T]}
	{}
	
Covered

	Trace

	39[(-1+i1 == 0)]
	42[(1 > 0 /\ -11+i1 >= 0 /\ -11+i1 == 0 /\ 2+i4-i9 < 0 /\ -3-i4+i9 > 0 /\ 11-i1 >= 0 /\ 11-i1 == 0 /\ -4-i4+i9 >= 0 /\ -2-i5+i9 >= 0 /\ -2+i9 >= 0)]
	
	Blocked

	{}
	{38[T]}
	{34[T], 38[T], 40[T], 41[T], 42[T]}
	
Backtrack

	Trace

	39[(-1+i1 == 0)]
	
	Blocked

	{}
	{38[T], 42[T]}
	
Step with 40

	Trace

	39[(-1+i1 == 0)]
	40[(1 > 0 /\ -11+i1 >= 0 /\ 11-i1 >= 0 /\ -2-i5+i9 >= 0)]
	
	Blocked

	{}
	{38[T], 42[T]}
	{40[T]}
	
Step with 38

	Trace

	39[(-1+i1 == 0)]
	40[(1 > 0 /\ -11+i1 >= 0 /\ 11-i1 >= 0 /\ -2-i5+i9 >= 0)]
	38[(-11+i1 == 0 /\ 1+i5-i9 >= 0)]
	
	Blocked

	{}
	{38[T], 42[T]}
	{34[T], 40[T], 41[T]}
	{}
	
Step with 35

	Trace

	39[(-1+i1 == 0)]
	40[(1 > 0 /\ -11+i1 >= 0 /\ 11-i1 >= 0 /\ -2-i5+i9 >= 0)]
	38[(-11+i1 == 0 /\ 1+i5-i9 >= 0)]
	35[(-15+i1 == 0 /\ 1+i6-i9 < 0 /\ 1+i5-i9 >= 0)]
	
	Blocked

	{}
	{38[T], 42[T]}
	{34[T], 40[T], 41[T]}
	{}
	{}
	
Covered

	Trace

	39[(-1+i1 == 0)]
	40[(1 > 0 /\ -11+i1 >= 0 /\ 11-i1 >= 0 /\ -2-i5+i9 >= 0)]
	38[(-11+i1 == 0 /\ 1+i5-i9 >= 0)]
	
	Blocked

	{}
	{38[T], 42[T]}
	{34[T], 40[T], 41[T]}
	{35[T]}
	
Step with 37

	Trace

	39[(-1+i1 == 0)]
	40[(1 > 0 /\ -11+i1 >= 0 /\ 11-i1 >= 0 /\ -2-i5+i9 >= 0)]
	38[(-11+i1 == 0 /\ 1+i5-i9 >= 0)]
	37[(-15+i1 == 0 /\ 1+i6-i9 >= 0)]
	
	Blocked

	{}
	{38[T], 42[T]}
	{34[T], 40[T], 41[T]}
	{35[T]}
	{}
	
Backtrack

	Trace

	39[(-1+i1 == 0)]
	40[(1 > 0 /\ -11+i1 >= 0 /\ 11-i1 >= 0 /\ -2-i5+i9 >= 0)]
	38[(-11+i1 == 0 /\ 1+i5-i9 >= 0)]
	
	Blocked

	{}
	{38[T], 42[T]}
	{34[T], 40[T], 41[T]}
	{35[T], 37[T]}
	
Backtrack

	Trace

	39[(-1+i1 == 0)]
	40[(1 > 0 /\ -11+i1 >= 0 /\ 11-i1 >= 0 /\ -2-i5+i9 >= 0)]
	
	Blocked

	{}
	{38[T], 42[T]}
	{34[T], 38[T], 40[T], 41[T]}
	
Backtrack

	Trace

	39[(-1+i1 == 0)]
	
	Blocked

	{}
	{38[T], 40[T], 42[T]}
	
Step with 34

	Trace

	39[(-1+i1 == 0)]
	34[(-11+i1 == 0 /\ 1+i5-i9 < 0)]
	
	Blocked

	{}
	{38[T], 40[T], 42[T]}
	{}
	
Covered

	Trace

	39[(-1+i1 == 0)]
	
	Blocked

	{}
	{34[T], 38[T], 40[T], 42[T]}
	
Backtrack

	Trace

	Blocked

	{39[T]}
	
Accept

Poly(n^2)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^2))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄, X₅
  Temp_Vars:  
  Locations:  l0, l1, l10, l11, l12, l13, l14, l15, l16, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃, X₄, X₅) → l2(X₀, X₁, X₂, X₃, X₄, X₅)
  t₃: l1(X₀, X₁, X₂, X₃, X₄, X₅) → l4(X₀, X₁, X₂, X₃, X₄, X₅)
  t₅: l10(X₀, X₁, X₂, X₃, X₄, X₅) → l11(X₀, X₁, X₂, X₃, X₄, X₅)
  t₆: l11(X₀, X₁, X₂, X₃, X₄, X₅) → l12(X₀, X₁, X₂, X₃, X₄, X₅)
  t₇: l12(X₀, X₁, X₂, X₃, X₄, X₅) → l13(X₀, X₁, X₂, X₃, X₄, X₅)
  t₈: l13(X₀, X₁, X₂, X₃, X₄, X₅) → l8(0, X₁, X₂, X₃, X₄, X₅)
  t₁₀: l14(X₀, X₁, X₂, X₃, X₄, X₅) → l15(X₀, X₁, X₂, X₃, X₄, X₅) :|: 2+X₁ ≤ X₅
  t₁₁: l14(X₀, X₁, X₂, X₃, X₄, X₅) → l6(X₀, X₁, X₂, X₃, X₄, X₅) :|: X₅ ≤ 1+X₁
  t₁₂: l15(X₀, X₁, X₂, X₃, X₄, X₅) → l14(X₀, 1+X₁, X₂, X₃, X₄, X₅)
  t₁: l2(X₀, X₁, X₂, X₃, X₄, X₅) → l3(X₀, X₁, X₂, X₃, X₄, X₅)
  t₂: l3(X₀, X₁, X₂, X₃, X₄, X₅) → l1(X₀, X₁, X₂, X₃, X₄, X₅)
  t₄: l4(X₀, X₁, X₂, X₃, X₄, X₅) → l10(X₀, X₁, X₂, X₃, X₄, X₅)
  t₁₅: l5(X₀, X₁, X₂, X₃, X₄, X₅) → l8(X₂, X₁, X₂, X₃, X₄, X₅) :|: X₅ ≤ 1+X₁ ∧ 2+X₂ ≤ X₅
  t₁₆: l5(X₀, X₁, X₂, X₃, X₄, X₅) → l9(X₀, X₁, X₂, X₃, X₄, X₅) :|: 2+X₁ ≤ X₅
  t₁₇: l5(X₀, X₁, X₂, X₃, X₄, X₅) → l9(X₀, X₁, X₂, X₃, X₄, X₅) :|: X₅ ≤ 1+X₂
  t₁₃: l6(X₀, X₁, X₂, X₃, X₄, X₅) → l7(X₀, X₁, 1+X₀, X₃, X₄, X₅)
  t₁₄: l7(X₀, X₁, X₂, X₃, X₄, X₅) → l5(X₀, X₁, X₂, X₃, X₄, X₅)
  t₉: l8(X₀, X₁, X₂, X₃, X₄, X₅) → l14(X₀, 0, X₂, X₃, X₄, X₅)
  t₁₈: l9(X₀, X₁, X₂, X₃, X₄, X₅) → l16(X₀, X₁, X₂, X₃, X₄, X₅)


Preprocessing
  Eliminate variables [X₃; X₄] that do not contribute to the problem


  Found invariant X₃ ≤ 1+X₁ ∧ 0 ≤ X₁ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₀ for location l6


  Found invariant 0 ≤ X₁ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₀ for location l14


  Found invariant 2 ≤ X₃ ∧ 2 ≤ X₁+X₃ ∧ 2+X₁ ≤ X₃ ∧ 2 ≤ X₀+X₃ ∧ 0 ≤ X₁ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₀ for location l15


  Found invariant X₃ ≤ 1+X₁ ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 0 ≤ X₁ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₀ for location l7


  Found invariant X₃ ≤ 1+X₁ ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 0 ≤ X₁ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₀ for location l5


  Found invariant 0 ≤ X₀ for location l8


  Found invariant X₃ ≤ 1+X₂ ∧ X₃ ≤ 1+X₁ ∧ X₃ ≤ 2+X₀ ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 0 ≤ X₁ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₀ for location l16


  Found invariant X₃ ≤ 1+X₂ ∧ X₃ ≤ 1+X₁ ∧ X₃ ≤ 2+X₀ ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 0 ≤ X₁ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₀ for location l9


  Cut unsatisfiable transition [t₃₂: l5→l9]


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃
  Temp_Vars:  
  Locations:  l0, l1, l10, l11, l12, l13, l14, l15, l16, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₁₉: l0(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, X₃)
  t₂₀: l1(X₀, X₁, X₂, X₃) → l4(X₀, X₁, X₂, X₃)
  t₂₁: l10(X₀, X₁, X₂, X₃) → l11(X₀, X₁, X₂, X₃)
  t₂₂: l11(X₀, X₁, X₂, X₃) → l12(X₀, X₁, X₂, X₃)
  t₂₃: l12(X₀, X₁, X₂, X₃) → l13(X₀, X₁, X₂, X₃)
  t₂₄: l13(X₀, X₁, X₂, X₃) → l8(0, X₁, X₂, X₃)
  t₂₅: l14(X₀, X₁, X₂, X₃) → l15(X₀, X₁, X₂, X₃) :|: 2+X₁ ≤ X₃ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₁
  t₂₆: l14(X₀, X₁, X₂, X₃) → l6(X₀, X₁, X₂, X₃) :|: X₃ ≤ 1+X₁ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₁
  t₂₇: l15(X₀, X₁, X₂, X₃) → l14(X₀, 1+X₁, X₂, X₃) :|: 2 ≤ X₀+X₃ ∧ 2 ≤ X₁+X₃ ∧ 2+X₁ ≤ X₃ ∧ 2 ≤ X₃ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₁
  t₂₈: l2(X₀, X₁, X₂, X₃) → l3(X₀, X₁, X₂, X₃)
  t₂₉: l3(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, X₃)
  t₃₀: l4(X₀, X₁, X₂, X₃) → l10(X₀, X₁, X₂, X₃)
  t₃₁: l5(X₀, X₁, X₂, X₃) → l8(X₂, X₁, X₂, X₃) :|: X₃ ≤ 1+X₁ ∧ 2+X₂ ≤ X₃ ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 1 ≤ X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₁
  t₃₃: l5(X₀, X₁, X₂, X₃) → l9(X₀, X₁, X₂, X₃) :|: X₃ ≤ 1+X₂ ∧ X₂ ≤ 1+X₀ ∧ X₃ ≤ 1+X₁ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 1 ≤ X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₁
  t₃₄: l6(X₀, X₁, X₂, X₃) → l7(X₀, X₁, 1+X₀, X₃) :|: X₃ ≤ 1+X₁ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₁
  t₃₅: l7(X₀, X₁, X₂, X₃) → l5(X₀, X₁, X₂, X₃) :|: X₂ ≤ 1+X₀ ∧ X₃ ≤ 1+X₁ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 1 ≤ X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₁
  t₃₆: l8(X₀, X₁, X₂, X₃) → l14(X₀, 0, X₂, X₃) :|: 0 ≤ X₀
  t₃₇: l9(X₀, X₁, X₂, X₃) → l16(X₀, X₁, X₂, X₃) :|: X₃ ≤ 2+X₀ ∧ X₂ ≤ 1+X₀ ∧ X₃ ≤ 1+X₁ ∧ X₃ ≤ 1+X₂ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 1 ≤ X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₁


MPRF for transition t₃₁: l5(X₀, X₁, X₂, X₃) → l8(X₂, X₁, X₂, X₃) :|: X₃ ≤ 1+X₁ ∧ 2+X₂ ≤ X₃ ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 1 ≤ X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₁ of depth 1:
  new bound:
    X₃+1 {O(n)}

  MPRF:
    • l14: [1+X₃-X₀]
    • l15: [1+X₃-X₀]
    • l5: [2+X₃-X₂]
    • l6: [1+X₃-X₀]
    • l7: [1+X₃-X₀]
    • l8: [1+X₃-X₀]




  knowledge_propagation leads to new time bound X₃+2 {O(n)} for transition t₃₆: l8(X₀, X₁, X₂, X₃) → l14(X₀, 0, X₂, X₃) :|: 0 ≤ X₀


MPRF for transition t₂₅: l14(X₀, X₁, X₂, X₃) → l15(X₀, X₁, X₂, X₃) :|: 2+X₁ ≤ X₃ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₁ of depth 1:
  new bound:
    X₃^2+2⋅X₃ {O(n^2)}

  MPRF:
    • l14: [X₃-X₁]
    • l15: [X₃-1-X₁]
    • l5: [X₃-X₁]
    • l6: [X₃-X₁]
    • l7: [X₃-X₁]
    • l8: [X₃-X₁]




MPRF for transition t₂₆: l14(X₀, X₁, X₂, X₃) → l6(X₀, X₁, X₂, X₃) :|: X₃ ≤ 1+X₁ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₁ of depth 1:
  new bound:
    2⋅X₃+4 {O(n)}

  MPRF:
    • l14: [2]
    • l15: [2]
    • l5: [1]
    • l6: [1]
    • l7: [1]
    • l8: [1]




MPRF for transition t₂₇: l15(X₀, X₁, X₂, X₃) → l14(X₀, 1+X₁, X₂, X₃) :|: 2 ≤ X₀+X₃ ∧ 2 ≤ X₁+X₃ ∧ 2+X₁ ≤ X₃ ∧ 2 ≤ X₃ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₁ of depth 1:
  new bound:
    X₃^2+2⋅X₃ {O(n^2)}

  MPRF:
    • l14: [X₃-X₁]
    • l15: [X₃-X₁]
    • l5: [X₃-X₁]
    • l6: [X₃-X₁]
    • l7: [X₃-X₁]
    • l8: [1-X₁]




MPRF for transition t₃₄: l6(X₀, X₁, X₂, X₃) → l7(X₀, X₁, 1+X₀, X₃) :|: X₃ ≤ 1+X₁ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₁ of depth 1:
  new bound:
    2⋅X₃+4 {O(n)}

  MPRF:
    • l14: [2]
    • l15: [2]
    • l5: [1]
    • l6: [2]
    • l7: [1]
    • l8: [1]




MPRF for transition t₃₅: l7(X₀, X₁, X₂, X₃) → l5(X₀, X₁, X₂, X₃) :|: X₂ ≤ 1+X₀ ∧ X₃ ≤ 1+X₁ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 1 ≤ X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₁ of depth 1:
  new bound:
    X₃+2 {O(n)}

  MPRF:
    • l14: [1]
    • l15: [1]
    • l5: [0]
    • l6: [1]
    • l7: [1]
    • l8: [1-X₀]




  Found invariant X₃ ≤ 1+X₁ ∧ 0 ≤ X₁ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₀ for location l6


  Found invariant 2 ≤ X₃ ∧ 2 ≤ X₁+X₃ ∧ 2+X₁ ≤ X₃ ∧ 2 ≤ X₀+X₃ ∧ X₁ ≤ 0 ∧ X₁ ≤ X₀ ∧ 0 ≤ X₁ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₀ for location l15_v1


  Found invariant 3 ≤ X₃ ∧ 4 ≤ X₁+X₃ ∧ 2+X₁ ≤ X₃ ∧ 3 ≤ X₀+X₃ ∧ 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 0 ≤ X₀ for location l15_v2


  Found invariant 2 ≤ X₃ ∧ 3 ≤ X₁+X₃ ∧ 1+X₁ ≤ X₃ ∧ 2 ≤ X₀+X₃ ∧ 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 0 ≤ X₀ for location l14_v1


  Found invariant X₁ ≤ 0 ∧ X₁ ≤ X₀ ∧ 0 ≤ X₁ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₀ for location l14


  Found invariant X₃ ≤ 1+X₁ ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 0 ≤ X₁ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₀ for location l7


  Found invariant X₃ ≤ 1+X₁ ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 0 ≤ X₁ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₀ for location l5


  Found invariant 0 ≤ X₀ for location l8


  Found invariant X₃ ≤ 1+X₂ ∧ X₃ ≤ 1+X₁ ∧ X₃ ≤ 2+X₀ ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 0 ≤ X₁ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₀ for location l16


  Found invariant X₃ ≤ 1+X₂ ∧ X₃ ≤ 1+X₁ ∧ X₃ ≤ 2+X₀ ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 0 ≤ X₁ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₀ for location l9


All Bounds
Timebounds
  Overall timebound:2⋅X₃^2+11⋅X₃+24 {O(n^2)}
    t₁₉: 1 {O(1)}
    t₂₀: 1 {O(1)}
    t₂₁: 1 {O(1)}
    t₂₂: 1 {O(1)}
    t₂₃: 1 {O(1)}
    t₂₄: 1 {O(1)}
    t₂₅: X₃^2+2⋅X₃ {O(n^2)}
    t₂₆: 2⋅X₃+4 {O(n)}
    t₂₇: X₃^2+2⋅X₃ {O(n^2)}
    t₂₈: 1 {O(1)}
    t₂₉: 1 {O(1)}
    t₃₀: 1 {O(1)}
    t₃₁: X₃+1 {O(n)}
    t₃₃: 1 {O(1)}
    t₃₄: 2⋅X₃+4 {O(n)}
    t₃₅: X₃+2 {O(n)}
    t₃₆: X₃+2 {O(n)}
    t₃₇: 1 {O(1)}


Costbounds
  Overall costbound: 2⋅X₃^2+11⋅X₃+24 {O(n^2)}
    t₁₉: 1 {O(1)}
    t₂₀: 1 {O(1)}
    t₂₁: 1 {O(1)}
    t₂₂: 1 {O(1)}
    t₂₃: 1 {O(1)}
    t₂₄: 1 {O(1)}
    t₂₅: X₃^2+2⋅X₃ {O(n^2)}
    t₂₆: 2⋅X₃+4 {O(n)}
    t₂₇: X₃^2+2⋅X₃ {O(n^2)}
    t₂₈: 1 {O(1)}
    t₂₉: 1 {O(1)}
    t₃₀: 1 {O(1)}
    t₃₁: X₃+1 {O(n)}
    t₃₃: 1 {O(1)}
    t₃₄: 2⋅X₃+4 {O(n)}
    t₃₅: X₃+2 {O(n)}
    t₃₆: X₃+2 {O(n)}
    t₃₇: 1 {O(1)}


Sizebounds
    t₁₉, X₀: X₀ {O(n)}
    t₁₉, X₁: X₁ {O(n)}
    t₁₉, X₂: X₂ {O(n)}
    t₁₉, X₃: X₃ {O(n)}
    t₂₀, X₀: X₀ {O(n)}
    t₂₀, X₁: X₁ {O(n)}
    t₂₀, X₂: X₂ {O(n)}
    t₂₀, X₃: X₃ {O(n)}
    t₂₁, X₀: X₀ {O(n)}
    t₂₁, X₁: X₁ {O(n)}
    t₂₁, X₂: X₂ {O(n)}
    t₂₁, X₃: X₃ {O(n)}
    t₂₂, X₀: X₀ {O(n)}
    t₂₂, X₁: X₁ {O(n)}
    t₂₂, X₂: X₂ {O(n)}
    t₂₂, X₃: X₃ {O(n)}
    t₂₃, X₀: X₀ {O(n)}
    t₂₃, X₁: X₁ {O(n)}
    t₂₃, X₂: X₂ {O(n)}
    t₂₃, X₃: X₃ {O(n)}
    t₂₄, X₀: 0 {O(1)}
    t₂₄, X₁: X₁ {O(n)}
    t₂₄, X₂: X₂ {O(n)}
    t₂₄, X₃: X₃ {O(n)}
    t₂₅, X₀: X₃+1 {O(n)}
    t₂₅, X₁: X₃^2+2⋅X₃ {O(n^2)}
    t₂₅, X₂: X₂+X₃+2 {O(n)}
    t₂₅, X₃: X₃ {O(n)}
    t₂₆, X₀: X₃+1 {O(n)}
    t₂₆, X₁: X₃^2+2⋅X₃ {O(n^2)}
    t₂₆, X₂: 2⋅X₂+2⋅X₃+4 {O(n)}
    t₂₆, X₃: X₃ {O(n)}
    t₂₇, X₀: X₃+1 {O(n)}
    t₂₇, X₁: X₃^2+2⋅X₃ {O(n^2)}
    t₂₇, X₂: X₂+X₃+2 {O(n)}
    t₂₇, X₃: X₃ {O(n)}
    t₂₈, X₀: X₀ {O(n)}
    t₂₈, X₁: X₁ {O(n)}
    t₂₈, X₂: X₂ {O(n)}
    t₂₈, X₃: X₃ {O(n)}
    t₂₉, X₀: X₀ {O(n)}
    t₂₉, X₁: X₁ {O(n)}
    t₂₉, X₂: X₂ {O(n)}
    t₂₉, X₃: X₃ {O(n)}
    t₃₀, X₀: X₀ {O(n)}
    t₃₀, X₁: X₁ {O(n)}
    t₃₀, X₂: X₂ {O(n)}
    t₃₀, X₃: X₃ {O(n)}
    t₃₁, X₀: X₃+1 {O(n)}
    t₃₁, X₁: X₃^2+2⋅X₃ {O(n^2)}
    t₃₁, X₂: X₃+2 {O(n)}
    t₃₁, X₃: X₃ {O(n)}
    t₃₃, X₀: X₃+1 {O(n)}
    t₃₃, X₁: X₃^2+2⋅X₃ {O(n^2)}
    t₃₃, X₂: X₃+2 {O(n)}
    t₃₃, X₃: X₃ {O(n)}
    t₃₄, X₀: X₃+1 {O(n)}
    t₃₄, X₁: X₃^2+2⋅X₃ {O(n^2)}
    t₃₄, X₂: X₃+2 {O(n)}
    t₃₄, X₃: X₃ {O(n)}
    t₃₅, X₀: X₃+1 {O(n)}
    t₃₅, X₁: X₃^2+2⋅X₃ {O(n^2)}
    t₃₅, X₂: X₃+2 {O(n)}
    t₃₅, X₃: X₃ {O(n)}
    t₃₆, X₀: X₃+1 {O(n)}
    t₃₆, X₁: 0 {O(1)}
    t₃₆, X₂: X₂+X₃+2 {O(n)}
    t₃₆, X₃: X₃ {O(n)}
    t₃₇, X₀: X₃+1 {O(n)}
    t₃₇, X₁: X₃^2+2⋅X₃ {O(n^2)}
    t₃₇, X₂: X₃+2 {O(n)}
    t₃₇, X₃: X₃ {O(n)}

