WORST_CASE(Omega(n^2),O(n^2))

# LoAT Proof:
WORST_CASE(Omega(n^2),?)

WORST_CASE(Omega(n^1),?)
WORST_CASE(Omega(n^2),?)
Initial ITS

Start location: eval_abc_start

Location map:
LoAT_sink -> 0
eval_abc_start -> 1
eval_abc_bb0_in -> 2
eval_abc_0 -> 3
eval_abc_1 -> 4
eval_abc_2 -> 5
eval_abc_3 -> 6
eval_abc_4 -> 7
eval_abc_5 -> 8
eval_abc_6 -> 9
eval_abc_7 -> 10
eval_abc_bb1_in -> 11
eval_abc_bb2_in -> 12
eval_abc_bb5_in -> 13
eval_abc_bb3_in -> 14
eval_abc_bb4_in -> 15
eval_abc_11 -> 16
eval_abc_12 -> 17
eval_abc_stop -> 18

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: -2+i1 == 0 /\ i1'=3, i3'=1+i3
   2: -3+i1 == 0 /\ i1'=4, i3'=1+i3
   3: -4+i1 == 0 /\ i1'=5, i3'=1+i3
   4: -5+i1 == 0 /\ i1'=6, i3'=1+i3
   5: -6+i1 == 0 /\ i1'=7, i3'=1+i3
   6: -7+i1 == 0 /\ i1'=8, i3'=1+i3
   7: -8+i1 == 0 /\ i1'=9, i3'=1+i3
   8: -9+i1 == 0 /\ i1'=10, i3'=1+i3
   9: -10+i1 == 0 /\ i1'=11, i3'=1+i3, i9'=i5
  10: (-11+i1 == 0 /\ -i6+i9 <= 0) /\ i1'=12, i3'=1+i3, i10'=i7
  11: (-11+i1 == 0 /\ -i6+i9 > 0) /\ i1'=13, i3'=1+i3
  12: (-12+i1 == 0 /\ i10-i8 <= 0) /\ i1'=14, i3'=1+i3
  13: (-12+i1 == 0 /\ i10-i8 > 0) /\ i1'=15, i3'=1+i3
  14: -14+i1 == 0 /\ i1'=12, i3'=1+i3, i10'=1+i10
  15: -15+i1 == 0 /\ i1'=16, i3'=1+i3, i4'=1+i9
  16: -16+i1 == 0 /\ i1'=17, i3'=1+i3
  17: -17+i1 == 0 /\ i1'=11, i3'=1+i3, i9'=i4
  18: -13+i1 == 0 /\ i1'=18, i3'=1+i3

Dependency graph:
0 -> 1
1 -> 2
2 -> 3
3 -> 4
4 -> 5
5 -> 6
6 -> 7
7 -> 8
8 -> 9
9 -> 10, 9 -> 11
10 -> 12, 10 -> 13
11 -> 18
12 -> 14
13 -> 15
14 -> 12, 14 -> 13
15 -> 16
16 -> 17
17 -> 10, 17 -> 11

Chained Linear Paths

	Applied Chaining

	First rule:
	-1+i1 == 0 /\ i1'=2, i3'=1+i3
	Second rule:
	-2+i1 == 0 /\ i1'=3, i3'=1+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 0, 1
	
	Applied Chaining

	First rule:
	-3+i1 == 0 /\ i1'=4, i3'=1+i3
	Second rule:
	-4+i1 == 0 /\ i1'=5, i3'=1+i3
	New rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 2, 3
	
	Applied Chaining

	First rule:
	-5+i1 == 0 /\ i1'=6, i3'=1+i3
	Second rule:
	-6+i1 == 0 /\ i1'=7, i3'=1+i3
	New rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=7, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 4, 5
	
	Applied Chaining

	First rule:
	-7+i1 == 0 /\ i1'=8, i3'=1+i3
	Second rule:
	-8+i1 == 0 /\ i1'=9, i3'=1+i3
	New rule:
	(0 == 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 6, 7
	
	Applied Chaining

	First rule:
	-9+i1 == 0 /\ i1'=10, i3'=1+i3
	Second rule:
	-10+i1 == 0 /\ i1'=11, i3'=1+i3, i9'=i5
	New rule:
	(0 == 0 /\ -9+i1 == 0) /\ i1'=11, i3'=2+i3, i9'=i5
	
	Applied Deletion

	Removed the following rules: 8, 9
	
	Applied Chaining

	First rule:
	(-11+i1 == 0 /\ -i6+i9 > 0) /\ i1'=13, i3'=1+i3
	Second rule:
	-13+i1 == 0 /\ i1'=18, i3'=1+i3
	New rule:
	(0 == 0 /\ -11+i1 == 0 /\ -i6+i9 > 0) /\ i1'=18, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 11, 18
	
	Applied Chaining

	First rule:
	(-12+i1 == 0 /\ i10-i8 <= 0) /\ i1'=14, i3'=1+i3
	Second rule:
	-14+i1 == 0 /\ i1'=12, i3'=1+i3, i10'=1+i10
	New rule:
	(0 == 0 /\ -12+i1 == 0 /\ i10-i8 <= 0) /\ i1'=12, i3'=2+i3, i10'=1+i10
	
	Applied Deletion

	Removed the following rules: 12, 14
	
	Applied Chaining

	First rule:
	(-12+i1 == 0 /\ i10-i8 > 0) /\ i1'=15, i3'=1+i3
	Second rule:
	-15+i1 == 0 /\ i1'=16, i3'=1+i3, i4'=1+i9
	New rule:
	(0 == 0 /\ -12+i1 == 0 /\ i10-i8 > 0) /\ i1'=16, i3'=2+i3, i4'=1+i9
	
	Applied Deletion

	Removed the following rules: 13, 15
	
	Applied Chaining

	First rule:
	-16+i1 == 0 /\ i1'=17, i3'=1+i3
	Second rule:
	-17+i1 == 0 /\ i1'=11, i3'=1+i3, i9'=i4
	New rule:
	(0 == 0 /\ -16+i1 == 0) /\ i1'=11, i3'=2+i3, i9'=i4
	
	Applied Deletion

	Removed the following rules: 16, 17
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	Second rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	
	Applied Deletion

	Removed the following rules: 19, 20
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=7, i3'=2+i3
	Second rule:
	(0 == 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
	New rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=9, i3'=4+i3
	
	Applied Deletion

	Removed the following rules: 21, 22
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -12+i1 == 0 /\ i10-i8 > 0) /\ i1'=16, i3'=2+i3, i4'=1+i9
	Second rule:
	(0 == 0 /\ -16+i1 == 0) /\ i1'=11, i3'=2+i3, i9'=i4
	New rule:
	(0 == 0 /\ -12+i1 == 0 /\ i10-i8 > 0) /\ i1'=11, i3'=4+i3, i4'=1+i9, i9'=1+i9
	
	Applied Deletion

	Removed the following rules: 26, 27
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	Second rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=9, i3'=4+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=9, i3'=8+i3
	
	Applied Deletion

	Removed the following rules: 28, 29
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=9, i3'=8+i3
	Second rule:
	(0 == 0 /\ -9+i1 == 0) /\ i1'=11, i3'=2+i3, i9'=i5
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=11, i3'=10+i3, i9'=i5
	
	Applied Deletion

	Removed the following rules: 23, 31

Start location: eval_abc_start

Location map:
LoAT_sink -> 0
eval_abc_start -> 1
eval_abc_bb0_in -> 2
eval_abc_0 -> 3
eval_abc_1 -> 4
eval_abc_2 -> 5
eval_abc_3 -> 6
eval_abc_4 -> 7
eval_abc_5 -> 8
eval_abc_6 -> 9
eval_abc_7 -> 10
eval_abc_bb1_in -> 11
eval_abc_bb2_in -> 12
eval_abc_bb5_in -> 13
eval_abc_bb3_in -> 14
eval_abc_bb4_in -> 15
eval_abc_11 -> 16
eval_abc_12 -> 17
eval_abc_stop -> 18

Rules:
  10: (-11+i1 == 0 /\ -i6+i9 <= 0) /\ i1'=12, i3'=1+i3, i10'=i7
  24: (0 == 0 /\ -11+i1 == 0 /\ -i6+i9 > 0) /\ i1'=18, i3'=2+i3
  25: (0 == 0 /\ -12+i1 == 0 /\ i10-i8 <= 0) /\ i1'=12, i3'=2+i3, i10'=1+i10
  30: (0 == 0 /\ -12+i1 == 0 /\ i10-i8 > 0) /\ i1'=11, i3'=4+i3, i4'=1+i9, i9'=1+i9
  32: (0 == 0 /\ -1+i1 == 0) /\ i1'=11, i3'=10+i3, i9'=i5

Dependency graph:
10 -> 25, 10 -> 30
25 -> 25, 25 -> 30
30 -> 10, 30 -> 24
32 -> 10, 32 -> 24

Preprocessed Transitions

	Simplified Guard

	Original rule:
	(0 == 0 /\ -11+i1 == 0 /\ -i6+i9 > 0) /\ i1'=18, i3'=2+i3
	New rule:
	(-11+i1 == 0 /\ -i6+i9 > 0) /\ i1'=18, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -12+i1 == 0 /\ i10-i8 <= 0) /\ i1'=12, i3'=2+i3, i10'=1+i10
	New rule:
	(-12+i1 == 0 /\ i10-i8 <= 0) /\ i1'=12, i3'=2+i3, i10'=1+i10
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -12+i1 == 0 /\ i10-i8 > 0) /\ i1'=11, i3'=4+i3, i4'=1+i9, i9'=1+i9
	New rule:
	(-12+i1 == 0 /\ i10-i8 > 0) /\ i1'=11, i3'=4+i3, i4'=1+i9, i9'=1+i9
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=11, i3'=10+i3, i9'=i5
	New rule:
	-1+i1 == 0 /\ i1'=11, i3'=10+i3, i9'=i5

Start location: eval_abc_start

Location map:
LoAT_sink -> 0
eval_abc_start -> 1
eval_abc_bb0_in -> 2
eval_abc_0 -> 3
eval_abc_1 -> 4
eval_abc_2 -> 5
eval_abc_3 -> 6
eval_abc_4 -> 7
eval_abc_5 -> 8
eval_abc_6 -> 9
eval_abc_7 -> 10
eval_abc_bb1_in -> 11
eval_abc_bb2_in -> 12
eval_abc_bb5_in -> 13
eval_abc_bb3_in -> 14
eval_abc_bb4_in -> 15
eval_abc_11 -> 16
eval_abc_12 -> 17
eval_abc_stop -> 18

Rules:
  10: (-11+i1 == 0 /\ -i6+i9 <= 0) /\ i1'=12, i3'=1+i3, i10'=i7
  33: (-11+i1 == 0 /\ -i6+i9 > 0) /\ i1'=18, i3'=2+i3
  34: (-12+i1 == 0 /\ i10-i8 <= 0) /\ i1'=12, i3'=2+i3, i10'=1+i10
  35: (-12+i1 == 0 /\ i10-i8 > 0) /\ i1'=11, i3'=4+i3, i4'=1+i9, i9'=1+i9
  36: -1+i1 == 0 /\ i1'=11, i3'=10+i3, i9'=i5

Dependency graph:
10 -> 34, 10 -> 35
34 -> 34, 34 -> 35
35 -> 10, 35 -> 33
36 -> 10, 36 -> 33

Step with 36

	Trace

	36[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 33

	Trace

	36[(-1+i1 == 0)]
	33[(-11+i1 == 0 /\ -i6+i9 > 0)]
	
	Blocked

	{}
	{}
	{}
	
Backtrack

	Trace

	36[(-1+i1 == 0)]
	
	Blocked

	{}
	{33[T]}
	
Step with 10

	Trace

	36[(-1+i1 == 0)]
	10[(-11+i1 == 0 /\ -i6+i9 <= 0)]
	
	Blocked

	{}
	{33[T]}
	{}
	
Step with 34

	Trace

	36[(-1+i1 == 0)]
	10[(-11+i1 == 0 /\ -i6+i9 <= 0)]
	34[(-12+i1 == 0 /\ i10-i8 <= 0)]
	
	Blocked

	{}
	{33[T]}
	{}
	{}
	
Poly(n^1)

Accelerate

	Loop Acceleration

	Original rule:
	(-12+i1 == 0 /\ i10-i8 <= 0) /\ i1'=12, i3'=2+i3, i10'=1+i10
	New rule:
	(12-i1 >= 0 /\ -1+it37 >= 0 /\ 1-i10+i8-it37 >= 0 /\ -12+i1 >= 0) /\ i1'=i1, i3'=i3+2*it37, i10'=i10+it37

		12-i1 >= 0 [0]: unchanged
		
		-i10+i8 >= 0 [0]: montonic decrease yields 1-i10+i8-it37 >= 0
		
		-12+i1 >= 0 [0]: unchanged
		
		Replacement map: {12-i1 >= 0 -> 12-i1 >= 0, -i10+i8 >= 0 -> 1-i10+i8-it37 >= 0, -12+i1 >= 0 -> -12+i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(12-i1 >= 0 /\ -1+it37 >= 0 /\ 1-i10+i8-it37 >= 0 /\ -12+i1 >= 0) /\ i1'=i1, i3'=i3+2*it37, i10'=i10+it37
	New rule:
	(12-i1 >= 0 /\ -1+it37 >= 0 /\ 1-i10+i8-it37 >= 0 /\ -12+i1 >= 0) /\ i3'=i3+2*it37, i10'=i10+it37
	
	Instantiation

	Original rule:
	(12-i1 >= 0 /\ -1+it37 >= 0 /\ 1-i10+i8-it37 >= 0 /\ -12+i1 >= 0) /\ i3'=i3+2*it37, i10'=i10+it37
	New rule:
	(0 >= 0 /\ 12-i1 >= 0 /\ -i10+i8 >= 0 /\ -12+i1 >= 0) /\ i3'=2+i3-2*i10+2*i8, i10'=1+i8

Start location: eval_abc_start

Location map:
LoAT_sink -> 0
eval_abc_start -> 1
eval_abc_bb0_in -> 2
eval_abc_0 -> 3
eval_abc_1 -> 4
eval_abc_2 -> 5
eval_abc_3 -> 6
eval_abc_4 -> 7
eval_abc_5 -> 8
eval_abc_6 -> 9
eval_abc_7 -> 10
eval_abc_bb1_in -> 11
eval_abc_bb2_in -> 12
eval_abc_bb5_in -> 13
eval_abc_bb3_in -> 14
eval_abc_bb4_in -> 15
eval_abc_11 -> 16
eval_abc_12 -> 17
eval_abc_stop -> 18

Rules:
  10: (-11+i1 == 0 /\ -i6+i9 <= 0) /\ i1'=12, i3'=1+i3, i10'=i7
  33: (-11+i1 == 0 /\ -i6+i9 > 0) /\ i1'=18, i3'=2+i3
  34: (-12+i1 == 0 /\ i10-i8 <= 0) /\ i1'=12, i3'=2+i3, i10'=1+i10
  35: (-12+i1 == 0 /\ i10-i8 > 0) /\ i1'=11, i3'=4+i3, i4'=1+i9, i9'=1+i9
  36: -1+i1 == 0 /\ i1'=11, i3'=10+i3, i9'=i5
  37: (0 >= 0 /\ 12-i1 >= 0 /\ -i10+i8 >= 0 /\ -12+i1 >= 0) /\ i3'=2+i3-2*i10+2*i8, i10'=1+i8

Dependency graph:
10 -> 34, 10 -> 35, 10 -> 37
34 -> 34, 34 -> 35, 34 -> 37
35 -> 10, 35 -> 33
36 -> 10, 36 -> 33
37 -> 34, 37 -> 35

	Trace

	36[(-1+i1 == 0)]
	10[(-11+i1 == 0 /\ -i6+i9 <= 0)]
	37[(0 >= 0 /\ 12-i1 >= 0 /\ -i10+i8 >= 0 /\ -12+i1 >= 0)]
	
	Blocked

	{}
	{33[T]}
	{}
	{34[T], 37[T]}
	
Step with 35

	Trace

	36[(-1+i1 == 0)]
	10[(-11+i1 == 0 /\ -i6+i9 <= 0)]
	37[(0 >= 0 /\ 12-i1 >= 0 /\ -i10+i8 >= 0 /\ -12+i1 >= 0)]
	35[(-12+i1 == 0 /\ i10-i8 > 0)]
	
	Blocked

	{}
	{33[T]}
	{}
	{34[T], 37[T]}
	{}
	
Poly(n^2)

Accelerate

		Extracted Implied Equalities

		Original rule:
		(0 >= 0 /\ 0 == 0 /\ 1 > 0 /\ -11+i1 == 0 /\ -i6+i9 <= 0 /\ -i7+i8 >= 0) /\ i1'=11, i3'=7+i3-2*i7+2*i8, i4'=1+i9, i9'=1+i9, i10'=1+i8
		New rule:
		(0 >= 0 /\ 0 == 0 /\ 1 > 0 /\ -11+i1 == 0 /\ -i6+i9 <= 0 /\ -i7+i8 >= 0) /\ i1'=11, i3'=7+i3-2*i7+2*i8, i4'=1+i9, i9'=1+i9, i10'=1+i8
		
		Simplified Guard

		Original rule:
		(0 >= 0 /\ 0 == 0 /\ 1 > 0 /\ -11+i1 == 0 /\ -i6+i9 <= 0 /\ -i7+i8 >= 0) /\ i1'=11, i3'=7+i3-2*i7+2*i8, i4'=1+i9, i9'=1+i9, i10'=1+i8
		New rule:
		(-11+i1 == 0 /\ -i6+i9 <= 0 /\ -i7+i8 >= 0) /\ i1'=11, i3'=7+i3-2*i7+2*i8, i4'=1+i9, i9'=1+i9, i10'=1+i8

	Loop Acceleration

	Original rule:
	(-11+i1 == 0 /\ -i6+i9 <= 0 /\ -i7+i8 >= 0) /\ i1'=11, i3'=7+i3-2*i7+2*i8, i4'=1+i9, i9'=1+i9, i10'=1+i8
	New rule:
	(-11+i1 >= 0 /\ i6-i9 >= 0 /\ -1+it68 >= 0 /\ 11-i1 >= 0 /\ -i7+i8 >= 0 /\ 1+i6-it68-i9 >= 0) /\ i1'=i1, i3'=i3+2*i8*it68-2*i7*it68+7*it68, i4'=it68+i9, i9'=it68+i9, i10'=1+i8

		-11+i1 >= 0 [0]: unchanged
		
		i6-i9 >= 0 [0]: montonic decrease yields (i6-i9 >= 0 /\ 1+i6-it68-i9 >= 0)
		
		11-i1 >= 0 [0]: unchanged
		
		-i7+i8 >= 0 [0]: unchanged
		
		Replacement map: {-11+i1 >= 0 -> -11+i1 >= 0, i6-i9 >= 0 -> (i6-i9 >= 0 /\ 1+i6-it68-i9 >= 0), 11-i1 >= 0 -> 11-i1 >= 0, -i7+i8 >= 0 -> -i7+i8 >= 0}

	Removed Trivial Updates

	Original rule:
	(-11+i1 >= 0 /\ i6-i9 >= 0 /\ -1+it68 >= 0 /\ 11-i1 >= 0 /\ -i7+i8 >= 0 /\ 1+i6-it68-i9 >= 0) /\ i1'=i1, i3'=i3+2*i8*it68-2*i7*it68+7*it68, i4'=it68+i9, i9'=it68+i9, i10'=1+i8
	New rule:
	(-11+i1 >= 0 /\ i6-i9 >= 0 /\ -1+it68 >= 0 /\ 11-i1 >= 0 /\ -i7+i8 >= 0 /\ 1+i6-it68-i9 >= 0) /\ i3'=i3+2*i8*it68-2*i7*it68+7*it68, i4'=it68+i9, i9'=it68+i9, i10'=1+i8
	
	Instantiation

	Original rule:
	(-11+i1 >= 0 /\ i6-i9 >= 0 /\ -1+it68 >= 0 /\ 11-i1 >= 0 /\ -i7+i8 >= 0 /\ 1+i6-it68-i9 >= 0) /\ i3'=i3+2*i8*it68-2*i7*it68+7*it68, i4'=it68+i9, i9'=it68+i9, i10'=1+i8
	New rule:
	(0 >= 0 /\ -11+i1 >= 0 /\ i6-i9 >= 0 /\ 11-i1 >= 0 /\ -i7+i8 >= 0) /\ i3'=7-2*i7*(1+i6-i9)+7*i6+i3+2*(1+i6-i9)*i8-7*i9, i4'=1+i6, i9'=1+i6, i10'=1+i8

Start location: eval_abc_start

Location map:
LoAT_sink -> 0
eval_abc_start -> 1
eval_abc_bb0_in -> 2
eval_abc_0 -> 3
eval_abc_1 -> 4
eval_abc_2 -> 5
eval_abc_3 -> 6
eval_abc_4 -> 7
eval_abc_5 -> 8
eval_abc_6 -> 9
eval_abc_7 -> 10
eval_abc_bb1_in -> 11
eval_abc_bb2_in -> 12
eval_abc_bb5_in -> 13
eval_abc_bb3_in -> 14
eval_abc_bb4_in -> 15
eval_abc_11 -> 16
eval_abc_12 -> 17
eval_abc_stop -> 18

Rules:
  10: (-11+i1 == 0 /\ -i6+i9 <= 0) /\ i1'=12, i3'=1+i3, i10'=i7
  33: (-11+i1 == 0 /\ -i6+i9 > 0) /\ i1'=18, i3'=2+i3
  34: (-12+i1 == 0 /\ i10-i8 <= 0) /\ i1'=12, i3'=2+i3, i10'=1+i10
  35: (-12+i1 == 0 /\ i10-i8 > 0) /\ i1'=11, i3'=4+i3, i4'=1+i9, i9'=1+i9
  36: -1+i1 == 0 /\ i1'=11, i3'=10+i3, i9'=i5
  37: (0 >= 0 /\ 12-i1 >= 0 /\ -i10+i8 >= 0 /\ -12+i1 >= 0) /\ i3'=2+i3-2*i10+2*i8, i10'=1+i8
  38: (0 >= 0 /\ -11+i1 >= 0 /\ i6-i9 >= 0 /\ 11-i1 >= 0 /\ -i7+i8 >= 0) /\ i3'=7-2*i7*(1+i6-i9)+7*i6+i3+2*(1+i6-i9)*i8-7*i9, i4'=1+i6, i9'=1+i6, i10'=1+i8

Dependency graph:
10 -> 34, 10 -> 35, 10 -> 37
34 -> 34, 34 -> 35, 34 -> 37
35 -> 10, 35 -> 33, 35 -> 38
36 -> 10, 36 -> 33, 36 -> 38
37 -> 34, 37 -> 35
38 -> 10, 38 -> 33

	Trace

	36[(-1+i1 == 0)]
	38[(0 >= 0 /\ -11+i1 >= 0 /\ i6-i9 >= 0 /\ 11-i1 >= 0 /\ -i7+i8 >= 0)]
	
	Blocked

	{}
	{33[T]}
	{38[T]}
	
Step with 33

	Trace

	36[(-1+i1 == 0)]
	38[(0 >= 0 /\ -11+i1 >= 0 /\ i6-i9 >= 0 /\ 11-i1 >= 0 /\ -i7+i8 >= 0)]
	33[(-11+i1 == 0 /\ -i6+i9 > 0)]
	
	Blocked

	{}
	{33[T]}
	{10[T], 38[T]}
	{}
	
Backtrack

	Trace

	36[(-1+i1 == 0)]
	38[(0 >= 0 /\ -11+i1 >= 0 /\ i6-i9 >= 0 /\ 11-i1 >= 0 /\ -i7+i8 >= 0)]
	
	Blocked

	{}
	{33[T]}
	{10[T], 33[T], 38[T]}
	
Backtrack

	Trace

	36[(-1+i1 == 0)]
	
	Blocked

	{}
	{33[T], 38[T]}
	
Step with 10

	Trace

	36[(-1+i1 == 0)]
	10[(-11+i1 == 0 /\ -i6+i9 <= 0)]
	
	Blocked

	{}
	{33[T], 38[T]}
	{}
	
Step with 34

	Trace

	36[(-1+i1 == 0)]
	10[(-11+i1 == 0 /\ -i6+i9 <= 0)]
	34[(-12+i1 == 0 /\ i10-i8 <= 0)]
	
	Blocked

	{}
	{33[T], 38[T]}
	{}
	{}
	
Covered

	Trace

	36[(-1+i1 == 0)]
	10[(-11+i1 == 0 /\ -i6+i9 <= 0)]
	
	Blocked

	{}
	{33[T], 38[T]}
	{34[T]}
	
Step with 37

	Trace

	36[(-1+i1 == 0)]
	10[(-11+i1 == 0 /\ -i6+i9 <= 0)]
	37[(0 >= 0 /\ 12-i1 >= 0 /\ -i10+i8 >= 0 /\ -12+i1 >= 0)]
	
	Blocked

	{}
	{33[T], 38[T]}
	{34[T]}
	{37[T]}
	
Step with 35

	Trace

	36[(-1+i1 == 0)]
	10[(-11+i1 == 0 /\ -i6+i9 <= 0)]
	37[(0 >= 0 /\ 12-i1 >= 0 /\ -i10+i8 >= 0 /\ -12+i1 >= 0)]
	35[(-12+i1 == 0 /\ i10-i8 > 0)]
	
	Blocked

	{}
	{33[T], 38[T]}
	{34[T]}
	{34[T], 37[T]}
	{}
	
Covered

	Trace

	36[(-1+i1 == 0)]
	10[(-11+i1 == 0 /\ -i6+i9 <= 0)]
	37[(0 >= 0 /\ 12-i1 >= 0 /\ -i10+i8 >= 0 /\ -12+i1 >= 0)]
	
	Blocked

	{}
	{33[T], 38[T]}
	{34[T]}
	{34[T], 35[T], 37[T]}
	
Backtrack

	Trace

	36[(-1+i1 == 0)]
	10[(-11+i1 == 0 /\ -i6+i9 <= 0)]
	
	Blocked

	{}
	{33[T], 38[T]}
	{34[T], 37[T]}
	
Step with 35

	Trace

	36[(-1+i1 == 0)]
	10[(-11+i1 == 0 /\ -i6+i9 <= 0)]
	35[(-12+i1 == 0 /\ i10-i8 > 0)]
	
	Blocked

	{}
	{33[T], 38[T]}
	{34[T], 37[T]}
	{}
	
Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -11+i1 == 0 /\ -i6+i9 <= 0 /\ i7-i8 > 0) /\ i1'=11, i3'=5+i3, i4'=1+i9, i9'=1+i9, i10'=i7
		New rule:
		(-11+i1 == 0 /\ -i6+i9 <= 0 /\ i7-i8 > 0) /\ i1'=11, i3'=5+i3, i4'=1+i9, i9'=1+i9, i10'=i7

	Loop Acceleration

	Original rule:
	(-11+i1 == 0 /\ -i6+i9 <= 0 /\ i7-i8 > 0) /\ i1'=11, i3'=5+i3, i4'=1+i9, i9'=1+i9, i10'=i7
	New rule:
	(-11+i1 >= 0 /\ i6-i9 >= 0 /\ 1+i6-it144-i9 >= 0 /\ i7-i8 > 0 /\ 11-i1 >= 0 /\ -1+it144 >= 0) /\ i1'=i1, i3'=i3+5*it144, i4'=it144+i9, i9'=it144+i9, i10'=i7

		-11+i1 >= 0 [0]: unchanged
		
		i6-i9 >= 0 [0]: montonic decrease yields (i6-i9 >= 0 /\ 1+i6-it144-i9 >= 0)
		
		i7-i8 > 0 [0]: unchanged
		
		11-i1 >= 0 [0]: unchanged
		
		Replacement map: {-11+i1 >= 0 -> -11+i1 >= 0, i6-i9 >= 0 -> (i6-i9 >= 0 /\ 1+i6-it144-i9 >= 0), i7-i8 > 0 -> i7-i8 > 0, 11-i1 >= 0 -> 11-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-11+i1 >= 0 /\ i6-i9 >= 0 /\ 1+i6-it144-i9 >= 0 /\ i7-i8 > 0 /\ 11-i1 >= 0 /\ -1+it144 >= 0) /\ i1'=i1, i3'=i3+5*it144, i4'=it144+i9, i9'=it144+i9, i10'=i7
	New rule:
	(-11+i1 >= 0 /\ i6-i9 >= 0 /\ 1+i6-it144-i9 >= 0 /\ i7-i8 > 0 /\ 11-i1 >= 0 /\ -1+it144 >= 0) /\ i3'=i3+5*it144, i4'=it144+i9, i9'=it144+i9, i10'=i7
	
	Instantiation

	Original rule:
	(-11+i1 >= 0 /\ i6-i9 >= 0 /\ 1+i6-it144-i9 >= 0 /\ i7-i8 > 0 /\ 11-i1 >= 0 /\ -1+it144 >= 0) /\ i3'=i3+5*it144, i4'=it144+i9, i9'=it144+i9, i10'=i7
	New rule:
	(0 >= 0 /\ -11+i1 >= 0 /\ i6-i9 >= 0 /\ i7-i8 > 0 /\ 11-i1 >= 0) /\ i3'=5+5*i6+i3-5*i9, i4'=1+i6, i9'=1+i6, i10'=i7

Start location: eval_abc_start

Location map:
LoAT_sink -> 0
eval_abc_start -> 1
eval_abc_bb0_in -> 2
eval_abc_0 -> 3
eval_abc_1 -> 4
eval_abc_2 -> 5
eval_abc_3 -> 6
eval_abc_4 -> 7
eval_abc_5 -> 8
eval_abc_6 -> 9
eval_abc_7 -> 10
eval_abc_bb1_in -> 11
eval_abc_bb2_in -> 12
eval_abc_bb5_in -> 13
eval_abc_bb3_in -> 14
eval_abc_bb4_in -> 15
eval_abc_11 -> 16
eval_abc_12 -> 17
eval_abc_stop -> 18

Rules:
  10: (-11+i1 == 0 /\ -i6+i9 <= 0) /\ i1'=12, i3'=1+i3, i10'=i7
  33: (-11+i1 == 0 /\ -i6+i9 > 0) /\ i1'=18, i3'=2+i3
  34: (-12+i1 == 0 /\ i10-i8 <= 0) /\ i1'=12, i3'=2+i3, i10'=1+i10
  35: (-12+i1 == 0 /\ i10-i8 > 0) /\ i1'=11, i3'=4+i3, i4'=1+i9, i9'=1+i9
  36: -1+i1 == 0 /\ i1'=11, i3'=10+i3, i9'=i5
  37: (0 >= 0 /\ 12-i1 >= 0 /\ -i10+i8 >= 0 /\ -12+i1 >= 0) /\ i3'=2+i3-2*i10+2*i8, i10'=1+i8
  38: (0 >= 0 /\ -11+i1 >= 0 /\ i6-i9 >= 0 /\ 11-i1 >= 0 /\ -i7+i8 >= 0) /\ i3'=7-2*i7*(1+i6-i9)+7*i6+i3+2*(1+i6-i9)*i8-7*i9, i4'=1+i6, i9'=1+i6, i10'=1+i8
  39: (0 >= 0 /\ -11+i1 >= 0 /\ i6-i9 >= 0 /\ i7-i8 > 0 /\ 11-i1 >= 0) /\ i3'=5+5*i6+i3-5*i9, i4'=1+i6, i9'=1+i6, i10'=i7

Dependency graph:
10 -> 34, 10 -> 35, 10 -> 37
34 -> 34, 34 -> 35, 34 -> 37
35 -> 10, 35 -> 33, 35 -> 38, 35 -> 39
36 -> 10, 36 -> 33, 36 -> 38, 36 -> 39
37 -> 34, 37 -> 35
38 -> 10, 38 -> 33, 38 -> 39
39 -> 10, 39 -> 33, 39 -> 38

	Trace

	36[(-1+i1 == 0)]
	39[(0 >= 0 /\ -11+i1 >= 0 /\ i6-i9 >= 0 /\ i7-i8 > 0 /\ 11-i1 >= 0)]
	
	Blocked

	{}
	{33[T], 38[T]}
	{39[T]}
	
Step with 33

	Trace

	36[(-1+i1 == 0)]
	39[(0 >= 0 /\ -11+i1 >= 0 /\ i6-i9 >= 0 /\ i7-i8 > 0 /\ 11-i1 >= 0)]
	33[(-11+i1 == 0 /\ -i6+i9 > 0)]
	
	Blocked

	{}
	{33[T], 38[T]}
	{10[T], 38[T], 39[T]}
	{}
	
Backtrack

	Trace

	36[(-1+i1 == 0)]
	39[(0 >= 0 /\ -11+i1 >= 0 /\ i6-i9 >= 0 /\ i7-i8 > 0 /\ 11-i1 >= 0)]
	
	Blocked

	{}
	{33[T], 38[T]}
	{10[T], 33[T], 38[T], 39[T]}
	
Backtrack

	Trace

	36[(-1+i1 == 0)]
	
	Blocked

	{}
	{33[T], 38[T], 39[T]}
	
Step with 10

	Trace

	36[(-1+i1 == 0)]
	10[(-11+i1 == 0 /\ -i6+i9 <= 0)]
	
	Blocked

	{}
	{33[T], 38[T], 39[T]}
	{}
	
Step with 34

	Trace

	36[(-1+i1 == 0)]
	10[(-11+i1 == 0 /\ -i6+i9 <= 0)]
	34[(-12+i1 == 0 /\ i10-i8 <= 0)]
	
	Blocked

	{}
	{33[T], 38[T], 39[T]}
	{}
	{}
	
Covered

	Trace

	36[(-1+i1 == 0)]
	10[(-11+i1 == 0 /\ -i6+i9 <= 0)]
	
	Blocked

	{}
	{33[T], 38[T], 39[T]}
	{34[T]}
	
Step with 37

	Trace

	36[(-1+i1 == 0)]
	10[(-11+i1 == 0 /\ -i6+i9 <= 0)]
	37[(0 >= 0 /\ 12-i1 >= 0 /\ -i10+i8 >= 0 /\ -12+i1 >= 0)]
	
	Blocked

	{}
	{33[T], 38[T], 39[T]}
	{34[T]}
	{37[T]}
	
Step with 35

	Trace

	36[(-1+i1 == 0)]
	10[(-11+i1 == 0 /\ -i6+i9 <= 0)]
	37[(0 >= 0 /\ 12-i1 >= 0 /\ -i10+i8 >= 0 /\ -12+i1 >= 0)]
	35[(-12+i1 == 0 /\ i10-i8 > 0)]
	
	Blocked

	{}
	{33[T], 38[T], 39[T]}
	{34[T]}
	{37[T]}
	{}
	
Covered

	Trace

	36[(-1+i1 == 0)]
	10[(-11+i1 == 0 /\ -i6+i9 <= 0)]
	37[(0 >= 0 /\ 12-i1 >= 0 /\ -i10+i8 >= 0 /\ -12+i1 >= 0)]
	
	Blocked

	{}
	{33[T], 38[T], 39[T]}
	{34[T]}
	{35[T], 37[T]}
	
Backtrack

	Trace

	36[(-1+i1 == 0)]
	10[(-11+i1 == 0 /\ -i6+i9 <= 0)]
	
	Blocked

	{}
	{33[T], 38[T], 39[T]}
	{34[T], 37[T]}
	
Step with 35

	Trace

	36[(-1+i1 == 0)]
	10[(-11+i1 == 0 /\ -i6+i9 <= 0)]
	35[(-12+i1 == 0 /\ i10-i8 > 0)]
	
	Blocked

	{}
	{33[T], 38[T], 39[T]}
	{34[T], 37[T]}
	{}
	
Covered

	Trace

	36[(-1+i1 == 0)]
	10[(-11+i1 == 0 /\ -i6+i9 <= 0)]
	
	Blocked

	{}
	{33[T], 38[T], 39[T]}
	{34[T], 35[T], 37[T]}
	
Backtrack

	Trace

	36[(-1+i1 == 0)]
	
	Blocked

	{}
	{10[T], 33[T], 38[T], 39[T]}
	
Backtrack

	Trace

	Blocked

	{36[T]}
	
Accept

Poly(n^2)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^2))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄, X₅, X₆
  Temp_Vars:  
  Locations:  l0, l1, l10, l11, l12, l13, l14, l15, l16, l17, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l2(X₀, X₁, X₂, X₃, X₄, X₅, X₆)
  t₃: l1(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l4(X₀, X₁, X₂, X₃, X₄, X₅, X₆)
  t₆: l10(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l11(X₀, X₁, X₂, X₃, X₄, X₅, X₆)
  t₇: l11(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l12(X₀, X₁, X₂, X₃, X₄, X₅, X₆)
  t₈: l12(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l13(X₀, X₁, X₂, X₃, X₄, X₅, X₆)
  t₉: l13(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l8(X₀, X₁, X₂, X₃, X₄, X₁, X₆)
  t₁₂: l14(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l16(X₀, X₁, X₂, X₃, X₄, X₅, X₆) :|: X₆ ≤ X₄
  t₁₃: l14(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l6(X₀, X₁, X₂, X₃, X₄, X₅, X₆) :|: 1+X₄ ≤ X₆
  t₁₈: l15(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l17(X₀, X₁, X₂, X₃, X₄, X₅, X₆)
  t₁₄: l16(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l14(X₀, X₁, X₂, X₃, X₄, X₅, 1+X₆)
  t₁: l2(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l3(X₀, X₁, X₂, X₃, X₄, X₅, X₆)
  t₂: l3(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l1(X₀, X₁, X₂, X₃, X₄, X₅, X₆)
  t₄: l4(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l9(X₀, X₁, X₂, X₃, X₄, X₅, X₆)
  t₁₇: l5(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l8(X₀, X₁, X₂, X₃, X₄, X₀, X₆)
  t₁₅: l6(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l7(1+X₅, X₁, X₂, X₃, X₄, X₅, X₆)
  t₁₆: l7(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l5(X₀, X₁, X₂, X₃, X₄, X₅, X₆)
  t₁₀: l8(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l14(X₀, X₁, X₂, X₃, X₄, X₅, X₃) :|: X₅ ≤ X₂
  t₁₁: l8(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l15(X₀, X₁, X₂, X₃, X₄, X₅, X₆) :|: 1+X₂ ≤ X₅
  t₅: l9(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l10(X₀, X₁, X₂, X₃, X₄, X₅, X₆)


Preprocessing
  Found invariant 1+X₄ ≤ X₆ ∧ X₃ ≤ X₆ ∧ X₅ ≤ X₂ ∧ X₁ ≤ X₅ ∧ X₁ ≤ X₂ for location l6


  Found invariant X₃ ≤ X₆ ∧ X₅ ≤ X₂ ∧ X₁ ≤ X₅ ∧ X₁ ≤ X₂ for location l14


  Found invariant 1+X₂ ≤ X₅ ∧ X₁ ≤ X₅ for location l15


  Found invariant 1+X₂ ≤ X₅ ∧ X₁ ≤ X₅ for location l17


  Found invariant 1+X₄ ≤ X₆ ∧ X₃ ≤ X₆ ∧ X₅ ≤ X₂ ∧ 1+X₅ ≤ X₀ ∧ X₁ ≤ X₅ ∧ X₀ ≤ 1+X₅ ∧ X₁ ≤ X₂ ∧ X₀ ≤ 1+X₂ ∧ 1+X₁ ≤ X₀ for location l7


  Found invariant 1+X₄ ≤ X₆ ∧ X₃ ≤ X₆ ∧ X₅ ≤ X₂ ∧ 1+X₅ ≤ X₀ ∧ X₁ ≤ X₅ ∧ X₀ ≤ 1+X₅ ∧ X₁ ≤ X₂ ∧ X₀ ≤ 1+X₂ ∧ 1+X₁ ≤ X₀ for location l5


  Found invariant X₁ ≤ X₅ for location l8


  Found invariant X₆ ≤ X₄ ∧ X₃ ≤ X₆ ∧ X₅ ≤ X₂ ∧ X₁ ≤ X₅ ∧ X₃ ≤ X₄ ∧ X₁ ≤ X₂ for location l16


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄, X₅, X₆
  Temp_Vars:  
  Locations:  l0, l1, l10, l11, l12, l13, l14, l15, l16, l17, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l2(X₀, X₁, X₂, X₃, X₄, X₅, X₆)
  t₃: l1(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l4(X₀, X₁, X₂, X₃, X₄, X₅, X₆)
  t₆: l10(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l11(X₀, X₁, X₂, X₃, X₄, X₅, X₆)
  t₇: l11(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l12(X₀, X₁, X₂, X₃, X₄, X₅, X₆)
  t₈: l12(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l13(X₀, X₁, X₂, X₃, X₄, X₅, X₆)
  t₉: l13(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l8(X₀, X₁, X₂, X₃, X₄, X₁, X₆)
  t₁₂: l14(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l16(X₀, X₁, X₂, X₃, X₄, X₅, X₆) :|: X₆ ≤ X₄ ∧ X₁ ≤ X₂ ∧ X₁ ≤ X₅ ∧ X₅ ≤ X₂ ∧ X₃ ≤ X₆
  t₁₃: l14(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l6(X₀, X₁, X₂, X₃, X₄, X₅, X₆) :|: 1+X₄ ≤ X₆ ∧ X₁ ≤ X₂ ∧ X₁ ≤ X₅ ∧ X₅ ≤ X₂ ∧ X₃ ≤ X₆
  t₁₈: l15(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l17(X₀, X₁, X₂, X₃, X₄, X₅, X₆) :|: 1+X₂ ≤ X₅ ∧ X₁ ≤ X₅
  t₁₄: l16(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l14(X₀, X₁, X₂, X₃, X₄, X₅, 1+X₆) :|: X₁ ≤ X₂ ∧ X₁ ≤ X₅ ∧ X₅ ≤ X₂ ∧ X₃ ≤ X₄ ∧ X₃ ≤ X₆ ∧ X₆ ≤ X₄
  t₁: l2(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l3(X₀, X₁, X₂, X₃, X₄, X₅, X₆)
  t₂: l3(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l1(X₀, X₁, X₂, X₃, X₄, X₅, X₆)
  t₄: l4(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l9(X₀, X₁, X₂, X₃, X₄, X₅, X₆)
  t₁₇: l5(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l8(X₀, X₁, X₂, X₃, X₄, X₀, X₆) :|: X₀ ≤ 1+X₂ ∧ X₀ ≤ 1+X₅ ∧ 1+X₁ ≤ X₀ ∧ 1+X₅ ≤ X₀ ∧ 1+X₄ ≤ X₆ ∧ X₁ ≤ X₂ ∧ X₁ ≤ X₅ ∧ X₅ ≤ X₂ ∧ X₃ ≤ X₆
  t₁₅: l6(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l7(1+X₅, X₁, X₂, X₃, X₄, X₅, X₆) :|: 1+X₄ ≤ X₆ ∧ X₁ ≤ X₂ ∧ X₁ ≤ X₅ ∧ X₅ ≤ X₂ ∧ X₃ ≤ X₆
  t₁₆: l7(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l5(X₀, X₁, X₂, X₃, X₄, X₅, X₆) :|: X₀ ≤ 1+X₂ ∧ X₀ ≤ 1+X₅ ∧ 1+X₁ ≤ X₀ ∧ 1+X₅ ≤ X₀ ∧ 1+X₄ ≤ X₆ ∧ X₁ ≤ X₂ ∧ X₁ ≤ X₅ ∧ X₅ ≤ X₂ ∧ X₃ ≤ X₆
  t₁₀: l8(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l14(X₀, X₁, X₂, X₃, X₄, X₅, X₃) :|: X₅ ≤ X₂ ∧ X₁ ≤ X₅
  t₁₁: l8(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l15(X₀, X₁, X₂, X₃, X₄, X₅, X₆) :|: 1+X₂ ≤ X₅ ∧ X₁ ≤ X₅
  t₅: l9(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l10(X₀, X₁, X₂, X₃, X₄, X₅, X₆)


MPRF for transition t₁₀: l8(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l14(X₀, X₁, X₂, X₃, X₄, X₅, X₃) :|: X₅ ≤ X₂ ∧ X₁ ≤ X₅ of depth 1:
  new bound:
    X₁+X₂+1 {O(n)}

  MPRF:
    • l14: [X₂-X₅]
    • l16: [X₂-X₅]
    • l5: [1+X₂-X₀]
    • l6: [X₂-X₅]
    • l7: [1+X₂-X₀]
    • l8: [1+X₂-X₅]




MPRF for transition t₁₃: l14(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l6(X₀, X₁, X₂, X₃, X₄, X₅, X₆) :|: 1+X₄ ≤ X₆ ∧ X₁ ≤ X₂ ∧ X₁ ≤ X₅ ∧ X₅ ≤ X₂ ∧ X₃ ≤ X₆ of depth 1:
  new bound:
    X₁+X₂+1 {O(n)}

  MPRF:
    • l14: [1+X₂-X₅]
    • l16: [1+X₂-X₅]
    • l5: [1+X₂-X₀]
    • l6: [X₂-X₅]
    • l7: [1+X₂-X₀]
    • l8: [1+X₂-X₅]




MPRF for transition t₁₅: l6(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l7(1+X₅, X₁, X₂, X₃, X₄, X₅, X₆) :|: 1+X₄ ≤ X₆ ∧ X₁ ≤ X₂ ∧ X₁ ≤ X₅ ∧ X₅ ≤ X₂ ∧ X₃ ≤ X₆ of depth 1:
  new bound:
    X₁+X₂+1 {O(n)}

  MPRF:
    • l14: [1+X₂-X₅]
    • l16: [1+X₂-X₅]
    • l5: [1+X₂-X₀]
    • l6: [1+X₂-X₅]
    • l7: [1+X₂-X₀]
    • l8: [1+X₂-X₅]




MPRF for transition t₁₆: l7(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l5(X₀, X₁, X₂, X₃, X₄, X₅, X₆) :|: X₀ ≤ 1+X₂ ∧ X₀ ≤ 1+X₅ ∧ 1+X₁ ≤ X₀ ∧ 1+X₅ ≤ X₀ ∧ 1+X₄ ≤ X₆ ∧ X₁ ≤ X₂ ∧ X₁ ≤ X₅ ∧ X₅ ≤ X₂ ∧ X₃ ≤ X₆ of depth 1:
  new bound:
    X₁+X₂+1 {O(n)}

  MPRF:
    • l14: [1+X₂-X₅]
    • l16: [1+X₂-X₅]
    • l5: [X₂-X₅]
    • l6: [1+X₂-X₅]
    • l7: [1+X₂-X₅]
    • l8: [1+X₂-X₅]




MPRF for transition t₁₇: l5(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l8(X₀, X₁, X₂, X₃, X₄, X₀, X₆) :|: X₀ ≤ 1+X₂ ∧ X₀ ≤ 1+X₅ ∧ 1+X₁ ≤ X₀ ∧ 1+X₅ ≤ X₀ ∧ 1+X₄ ≤ X₆ ∧ X₁ ≤ X₂ ∧ X₁ ≤ X₅ ∧ X₅ ≤ X₂ ∧ X₃ ≤ X₆ of depth 1:
  new bound:
    X₁+X₂+1 {O(n)}

  MPRF:
    • l14: [1+X₂-X₅]
    • l16: [1+X₂-X₅]
    • l5: [1+X₂-X₅]
    • l6: [1+X₂-X₅]
    • l7: [2+X₂-X₀]
    • l8: [1+X₂-X₅]




MPRF for transition t₁₂: l14(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l16(X₀, X₁, X₂, X₃, X₄, X₅, X₆) :|: X₆ ≤ X₄ ∧ X₁ ≤ X₂ ∧ X₁ ≤ X₅ ∧ X₅ ≤ X₂ ∧ X₃ ≤ X₆ of depth 1:
  new bound:
    X₁⋅X₃+X₁⋅X₄+X₂⋅X₃+X₂⋅X₄+2⋅X₃+2⋅X₄+X₁+X₂+2 {O(n^2)}

  MPRF:
    • l14: [1+X₄-X₆]
    • l16: [X₄-X₆]
    • l5: [X₄-X₆]
    • l6: [X₄-X₆]
    • l7: [X₄-X₆]
    • l8: [1+X₄-X₃]




MPRF for transition t₁₄: l16(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l14(X₀, X₁, X₂, X₃, X₄, X₅, 1+X₆) :|: X₁ ≤ X₂ ∧ X₁ ≤ X₅ ∧ X₅ ≤ X₂ ∧ X₃ ≤ X₄ ∧ X₃ ≤ X₆ ∧ X₆ ≤ X₄ of depth 1:
  new bound:
    X₁⋅X₃+X₁⋅X₄+X₂⋅X₃+X₂⋅X₄+2⋅X₃+2⋅X₄+X₁+X₂+2 {O(n^2)}

  MPRF:
    • l14: [1+X₄-X₆]
    • l16: [1+X₄-X₆]
    • l5: [X₄-X₆]
    • l6: [X₄-X₆]
    • l7: [X₄-X₆]
    • l8: [1+X₄-X₃]




  Found invariant 1+X₄ ≤ X₆ ∧ X₃ ≤ X₆ ∧ X₅ ≤ X₂ ∧ X₁ ≤ X₅ ∧ X₁ ≤ X₂ for location l6


  Found invariant X₆ ≤ X₄ ∧ 1+X₃ ≤ X₆ ∧ X₅ ≤ X₂ ∧ X₁ ≤ X₅ ∧ 1+X₃ ≤ X₄ ∧ X₁ ≤ X₂ for location l16_v2


  Found invariant X₆ ≤ 1+X₄ ∧ 1+X₃ ≤ X₆ ∧ X₅ ≤ X₂ ∧ X₁ ≤ X₅ ∧ X₃ ≤ X₄ ∧ X₁ ≤ X₂ for location l14_v1


  Found invariant X₆ ≤ X₃ ∧ X₃ ≤ X₆ ∧ X₅ ≤ X₂ ∧ X₁ ≤ X₅ ∧ X₁ ≤ X₂ for location l14


  Found invariant 1+X₂ ≤ X₅ ∧ X₁ ≤ X₅ for location l15


  Found invariant X₆ ≤ X₄ ∧ X₆ ≤ X₃ ∧ X₃ ≤ X₆ ∧ X₅ ≤ X₂ ∧ X₁ ≤ X₅ ∧ X₃ ≤ X₄ ∧ X₁ ≤ X₂ for location l16_v1


  Found invariant 1+X₂ ≤ X₅ ∧ X₁ ≤ X₅ for location l17


  Found invariant 1+X₄ ≤ X₆ ∧ X₃ ≤ X₆ ∧ X₅ ≤ X₂ ∧ 1+X₅ ≤ X₀ ∧ X₁ ≤ X₅ ∧ X₀ ≤ 1+X₅ ∧ X₁ ≤ X₂ ∧ X₀ ≤ 1+X₂ ∧ 1+X₁ ≤ X₀ for location l7


  Found invariant 1+X₄ ≤ X₆ ∧ X₃ ≤ X₆ ∧ X₅ ≤ X₂ ∧ 1+X₅ ≤ X₀ ∧ X₁ ≤ X₅ ∧ X₀ ≤ 1+X₅ ∧ X₁ ≤ X₂ ∧ X₀ ≤ 1+X₂ ∧ 1+X₁ ≤ X₀ for location l5


  Found invariant X₁ ≤ X₅ for location l8


All Bounds
Timebounds
  Overall timebound:2⋅X₁⋅X₃+2⋅X₁⋅X₄+2⋅X₂⋅X₃+2⋅X₂⋅X₄+4⋅X₃+4⋅X₄+7⋅X₁+7⋅X₂+21 {O(n^2)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: 1 {O(1)}
    t₈: 1 {O(1)}
    t₉: 1 {O(1)}
    t₁₀: X₁+X₂+1 {O(n)}
    t₁₁: 1 {O(1)}
    t₁₂: X₁⋅X₃+X₁⋅X₄+X₂⋅X₃+X₂⋅X₄+2⋅X₃+2⋅X₄+X₁+X₂+2 {O(n^2)}
    t₁₃: X₁+X₂+1 {O(n)}
    t₁₄: X₁⋅X₃+X₁⋅X₄+X₂⋅X₃+X₂⋅X₄+2⋅X₃+2⋅X₄+X₁+X₂+2 {O(n^2)}
    t₁₅: X₁+X₂+1 {O(n)}
    t₁₆: X₁+X₂+1 {O(n)}
    t₁₇: X₁+X₂+1 {O(n)}
    t₁₈: 1 {O(1)}


Costbounds
  Overall costbound: 2⋅X₁⋅X₃+2⋅X₁⋅X₄+2⋅X₂⋅X₃+2⋅X₂⋅X₄+4⋅X₃+4⋅X₄+7⋅X₁+7⋅X₂+21 {O(n^2)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: 1 {O(1)}
    t₈: 1 {O(1)}
    t₉: 1 {O(1)}
    t₁₀: X₁+X₂+1 {O(n)}
    t₁₁: 1 {O(1)}
    t₁₂: X₁⋅X₃+X₁⋅X₄+X₂⋅X₃+X₂⋅X₄+2⋅X₃+2⋅X₄+X₁+X₂+2 {O(n^2)}
    t₁₃: X₁+X₂+1 {O(n)}
    t₁₄: X₁⋅X₃+X₁⋅X₄+X₂⋅X₃+X₂⋅X₄+2⋅X₃+2⋅X₄+X₁+X₂+2 {O(n^2)}
    t₁₅: X₁+X₂+1 {O(n)}
    t₁₆: X₁+X₂+1 {O(n)}
    t₁₇: X₁+X₂+1 {O(n)}
    t₁₈: 1 {O(1)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₀, X₂: X₂ {O(n)}
    t₀, X₃: X₃ {O(n)}
    t₀, X₄: X₄ {O(n)}
    t₀, X₅: X₅ {O(n)}
    t₀, X₆: X₆ {O(n)}
    t₁, X₀: X₀ {O(n)}
    t₁, X₁: X₁ {O(n)}
    t₁, X₂: X₂ {O(n)}
    t₁, X₃: X₃ {O(n)}
    t₁, X₄: X₄ {O(n)}
    t₁, X₅: X₅ {O(n)}
    t₁, X₆: X₆ {O(n)}
    t₂, X₀: X₀ {O(n)}
    t₂, X₁: X₁ {O(n)}
    t₂, X₂: X₂ {O(n)}
    t₂, X₃: X₃ {O(n)}
    t₂, X₄: X₄ {O(n)}
    t₂, X₅: X₅ {O(n)}
    t₂, X₆: X₆ {O(n)}
    t₃, X₀: X₀ {O(n)}
    t₃, X₁: X₁ {O(n)}
    t₃, X₂: X₂ {O(n)}
    t₃, X₃: X₃ {O(n)}
    t₃, X₄: X₄ {O(n)}
    t₃, X₅: X₅ {O(n)}
    t₃, X₆: X₆ {O(n)}
    t₄, X₀: X₀ {O(n)}
    t₄, X₁: X₁ {O(n)}
    t₄, X₂: X₂ {O(n)}
    t₄, X₃: X₃ {O(n)}
    t₄, X₄: X₄ {O(n)}
    t₄, X₅: X₅ {O(n)}
    t₄, X₆: X₆ {O(n)}
    t₅, X₀: X₀ {O(n)}
    t₅, X₁: X₁ {O(n)}
    t₅, X₂: X₂ {O(n)}
    t₅, X₃: X₃ {O(n)}
    t₅, X₄: X₄ {O(n)}
    t₅, X₅: X₅ {O(n)}
    t₅, X₆: X₆ {O(n)}
    t₆, X₀: X₀ {O(n)}
    t₆, X₁: X₁ {O(n)}
    t₆, X₂: X₂ {O(n)}
    t₆, X₃: X₃ {O(n)}
    t₆, X₄: X₄ {O(n)}
    t₆, X₅: X₅ {O(n)}
    t₆, X₆: X₆ {O(n)}
    t₇, X₀: X₀ {O(n)}
    t₇, X₁: X₁ {O(n)}
    t₇, X₂: X₂ {O(n)}
    t₇, X₃: X₃ {O(n)}
    t₇, X₄: X₄ {O(n)}
    t₇, X₅: X₅ {O(n)}
    t₇, X₆: X₆ {O(n)}
    t₈, X₀: X₀ {O(n)}
    t₈, X₁: X₁ {O(n)}
    t₈, X₂: X₂ {O(n)}
    t₈, X₃: X₃ {O(n)}
    t₈, X₄: X₄ {O(n)}
    t₈, X₅: X₅ {O(n)}
    t₈, X₆: X₆ {O(n)}
    t₉, X₀: X₀ {O(n)}
    t₉, X₁: X₁ {O(n)}
    t₉, X₂: X₂ {O(n)}
    t₉, X₃: X₃ {O(n)}
    t₉, X₄: X₄ {O(n)}
    t₉, X₅: X₁ {O(n)}
    t₉, X₆: X₆ {O(n)}
    t₁₀, X₀: 2⋅X₁+X₀+X₂+1 {O(n)}
    t₁₀, X₁: X₁ {O(n)}
    t₁₀, X₂: X₂ {O(n)}
    t₁₀, X₃: X₃ {O(n)}
    t₁₀, X₄: X₄ {O(n)}
    t₁₀, X₅: 2⋅X₁+X₂+1 {O(n)}
    t₁₀, X₆: 2⋅X₃ {O(n)}
    t₁₁, X₀: 2⋅X₁+X₀+X₂+1 {O(n)}
    t₁₁, X₁: 2⋅X₁ {O(n)}
    t₁₁, X₂: 2⋅X₂ {O(n)}
    t₁₁, X₃: 2⋅X₃ {O(n)}
    t₁₁, X₄: 2⋅X₄ {O(n)}
    t₁₁, X₅: 3⋅X₁+X₂+1 {O(n)}
    t₁₁, X₆: X₁⋅X₃+X₁⋅X₄+X₂⋅X₃+X₂⋅X₄+2⋅X₄+6⋅X₃+X₁+X₂+X₆+2 {O(n^2)}
    t₁₂, X₀: 2⋅X₁+X₀+X₂+1 {O(n)}
    t₁₂, X₁: X₁ {O(n)}
    t₁₂, X₂: X₂ {O(n)}
    t₁₂, X₃: X₃ {O(n)}
    t₁₂, X₄: X₄ {O(n)}
    t₁₂, X₅: 2⋅X₁+X₂+1 {O(n)}
    t₁₂, X₆: X₁⋅X₃+X₁⋅X₄+X₂⋅X₃+X₂⋅X₄+2⋅X₄+4⋅X₃+X₁+X₂+2 {O(n^2)}
    t₁₃, X₀: 2⋅X₀+2⋅X₂+4⋅X₁+2 {O(n)}
    t₁₃, X₁: X₁ {O(n)}
    t₁₃, X₂: X₂ {O(n)}
    t₁₃, X₃: X₃ {O(n)}
    t₁₃, X₄: X₄ {O(n)}
    t₁₃, X₅: 2⋅X₁+X₂+1 {O(n)}
    t₁₃, X₆: X₁⋅X₃+X₁⋅X₄+X₂⋅X₃+X₂⋅X₄+2⋅X₄+6⋅X₃+X₁+X₂+2 {O(n^2)}
    t₁₄, X₀: 2⋅X₁+X₀+X₂+1 {O(n)}
    t₁₄, X₁: X₁ {O(n)}
    t₁₄, X₂: X₂ {O(n)}
    t₁₄, X₃: X₃ {O(n)}
    t₁₄, X₄: X₄ {O(n)}
    t₁₄, X₅: 2⋅X₁+X₂+1 {O(n)}
    t₁₄, X₆: X₁⋅X₃+X₁⋅X₄+X₂⋅X₃+X₂⋅X₄+2⋅X₄+4⋅X₃+X₁+X₂+2 {O(n^2)}
    t₁₅, X₀: 2⋅X₁+X₂+1 {O(n)}
    t₁₅, X₁: X₁ {O(n)}
    t₁₅, X₂: X₂ {O(n)}
    t₁₅, X₃: X₃ {O(n)}
    t₁₅, X₄: X₄ {O(n)}
    t₁₅, X₅: 2⋅X₁+X₂+1 {O(n)}
    t₁₅, X₆: X₁⋅X₃+X₁⋅X₄+X₂⋅X₃+X₂⋅X₄+2⋅X₄+6⋅X₃+X₁+X₂+2 {O(n^2)}
    t₁₆, X₀: 2⋅X₁+X₂+1 {O(n)}
    t₁₆, X₁: X₁ {O(n)}
    t₁₆, X₂: X₂ {O(n)}
    t₁₆, X₃: X₃ {O(n)}
    t₁₆, X₄: X₄ {O(n)}
    t₁₆, X₅: 2⋅X₁+X₂+1 {O(n)}
    t₁₆, X₆: X₁⋅X₃+X₁⋅X₄+X₂⋅X₃+X₂⋅X₄+2⋅X₄+6⋅X₃+X₁+X₂+2 {O(n^2)}
    t₁₇, X₀: 2⋅X₁+X₂+1 {O(n)}
    t₁₇, X₁: X₁ {O(n)}
    t₁₇, X₂: X₂ {O(n)}
    t₁₇, X₃: X₃ {O(n)}
    t₁₇, X₄: X₄ {O(n)}
    t₁₇, X₅: 2⋅X₁+X₂+1 {O(n)}
    t₁₇, X₆: X₁⋅X₃+X₁⋅X₄+X₂⋅X₃+X₂⋅X₄+2⋅X₄+6⋅X₃+X₁+X₂+2 {O(n^2)}
    t₁₈, X₀: 2⋅X₁+X₀+X₂+1 {O(n)}
    t₁₈, X₁: 2⋅X₁ {O(n)}
    t₁₈, X₂: 2⋅X₂ {O(n)}
    t₁₈, X₃: 2⋅X₃ {O(n)}
    t₁₈, X₄: 2⋅X₄ {O(n)}
    t₁₈, X₅: 3⋅X₁+X₂+1 {O(n)}
    t₁₈, X₆: X₁⋅X₃+X₁⋅X₄+X₂⋅X₃+X₂⋅X₄+2⋅X₄+6⋅X₃+X₁+X₂+X₆+2 {O(n^2)}

