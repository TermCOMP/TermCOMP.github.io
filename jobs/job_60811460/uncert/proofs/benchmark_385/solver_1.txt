NO

# LoAT Proof:
NO

NO

Initial ITS

Start location: f3

Location map:
LoAT_sink -> 0
f3 -> 1
f0 -> 2
f4 -> 3

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=0
   1: (-2+i1 == 0 /\ -1+i5 >= 0) /\ i1'=2, i3'=1+i3, i5'=-1+i5
   2: -3+i1 == 0 /\ i1'=3, i3'=1+i3
   3: (-2+i1 == 0 /\ -i5 >= 0) /\ i1'=3, i3'=1+i3, i4'=-1

Dependency graph:
0 -> 1, 0 -> 3
1 -> 1, 1 -> 3
2 -> 2
3 -> 2

Step with 0

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 3

	Trace

	0[(-1+i1 == 0)]
	3[(-2+i1 == 0 /\ -i5 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Step with 2

	Trace

	0[(-1+i1 == 0)]
	3[(-2+i1 == 0 /\ -i5 >= 0)]
	2[(-3+i1 == 0)]
	
	Blocked

	{}
	{}
	{}
	{}
	
Nonterm

	Certificate of Non-Termination

	Original rule:
	(-3+i1 == 0) /\ i1'=3, i3'=1+i3
	New rule:
	(-3+i1 >= 0 /\ -1+it13 >= 0 /\ 3-i1 >= 0) /\ i1'=0

		-3+i1 >= 0 [0]: unchanged
		
		3-i1 >= 0 [0]: unchanged
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, 3-i1 >= 0 -> 3-i1 >= 0}

	Loop Acceleration

	Original rule:
	(-3+i1 == 0) /\ i1'=3, i3'=1+i3
	New rule:
	(-3+i1 >= 0 /\ -1+it13 >= 0 /\ 3-i1 >= 0) /\ i1'=i1, i3'=i3+it13

		-3+i1 >= 0 [0]: unchanged
		
		3-i1 >= 0 [0]: unchanged
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, 3-i1 >= 0 -> 3-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ -1+it13 >= 0 /\ 3-i1 >= 0) /\ i1'=i1, i3'=i3+it13
	New rule:
	(-3+i1 >= 0 /\ -1+it13 >= 0 /\ 3-i1 >= 0) /\ i3'=i3+it13

Start location: f3

Location map:
LoAT_sink -> 0
f3 -> 1
f0 -> 2
f4 -> 3

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=0
   1: (-2+i1 == 0 /\ -1+i5 >= 0) /\ i1'=2, i3'=1+i3, i5'=-1+i5
   2: -3+i1 == 0 /\ i1'=3, i3'=1+i3
   3: (-2+i1 == 0 /\ -i5 >= 0) /\ i1'=3, i3'=1+i3, i4'=-1
   4: (-3+i1 >= 0 /\ -1+it13 >= 0 /\ 3-i1 >= 0) /\ i1'=0
   5: (-3+i1 >= 0 /\ -1+it13 >= 0 /\ 3-i1 >= 0) /\ i3'=i3+it13

Dependency graph:
0 -> 1, 0 -> 3
1 -> 1, 1 -> 3
2 -> 2, 2 -> 4, 2 -> 5
3 -> 2, 3 -> 4, 3 -> 5
5 -> 2, 5 -> 4

Step with 4

	Trace

	0[(-1+i1 == 0)]
	3[(-2+i1 == 0 /\ -i5 >= 0)]
	4[(-3+i1 >= 0 /\ -1+it13 >= 0 /\ 3-i1 >= 0)]
	
	Blocked

	{}
	{}
	{}
	{4[T]}
	
Refute

	Counterexample

	(i1=1, i3=-1, i5=0)
	-0-> (i1=2, i3=0, i4=0, i5=0 )
	-3-> (i1=3, i3=1, i4=-1, i5=0 )
	-4-> ( )
	
NO

Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
MAYBE


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁
  Temp_Vars:  
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁) → l1(0, X₁)
  t₁: l1(X₀, X₁) → l1(X₀, X₁-1) :|: 1 ≤ X₁
  t₃: l1(X₀, X₁) → l2(-1, X₁) :|: X₁ ≤ 0
  t₂: l2(X₀, X₁) → l2(X₀, X₁)


Preprocessing
  Eliminate variables [X₀] that do not contribute to the problem


  Found invariant X₀ ≤ 0 for location l2


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀
  Temp_Vars:  
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₄: l0(X₀) → l1(X₀)
  t₅: l1(X₀) → l1(X₀-1) :|: 1 ≤ X₀
  t₆: l1(X₀) → l2(X₀) :|: X₀ ≤ 0
  t₇: l2(X₀) → l2(X₀) :|: X₀ ≤ 0


MPRF for transition t₅: l1(X₀) → l1(X₀-1) :|: 1 ≤ X₀ of depth 1:
  new bound:
    X₀ {O(n)}

  MPRF:
    • l1: [X₀]




  Found invariant X₀ ≤ 0 for location l2_v1


  Found invariant X₀ ≤ 0 for location l2


All Bounds
Timebounds
  Overall timebound:inf {Infinity}
    t₄: 1 {O(1)}
    t₅: X₀ {O(n)}
    t₆: 1 {O(1)}
    t₇: inf {Infinity}


Costbounds
  Overall costbound: inf {Infinity}
    t₄: 1 {O(1)}
    t₅: X₀ {O(n)}
    t₆: 1 {O(1)}
    t₇: inf {Infinity}


Sizebounds
    t₄, X₀: X₀ {O(n)}
    t₅, X₀: X₀ {O(n)}
    t₆, X₀: 2⋅X₀ {O(n)}
    t₇, X₀: 2⋅X₀ {O(n)}

