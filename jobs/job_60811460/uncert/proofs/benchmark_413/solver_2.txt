WORST_CASE(?,O(1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [f13/5]
1. recursive  : [f10/5,f13_loop_cont/6]
2. non_recursive  : [exit_location/1]
3. recursive  : [f27/5]
4. recursive  : [f24/7,f27_loop_cont/8]
5. recursive  : [f21/7,f24_loop_cont/8]
6. non_recursive  : [f39/4]
7. non_recursive  : [f21_loop_cont/5]
8. non_recursive  : [f10_loop_cont/5]
9. non_recursive  : [f0/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into f13/5
1. SCC is partially evaluated into f10/5
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into f27/5
4. SCC is partially evaluated into f24/7
5. SCC is partially evaluated into f21/7
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into f21_loop_cont/5
8. SCC is partially evaluated into f10_loop_cont/5
9. SCC is partially evaluated into f0/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations f13/5 
* CE 9 is refined into CE [24] 
* CE 10 is refined into CE [25] 
* CE 8 is refined into CE [26] 


### Cost equations --> "Loop" of f13/5 
* CEs [26] --> Loop 24 
* CEs [24] --> Loop 25 
* CEs [25] --> Loop 26 

### Ranking functions of CR f13(A,B,D,E,F) 
* RF of phase [24]: [-B+6]

#### Partial ranking functions of CR f13(A,B,D,E,F) 
* Partial RF of phase [24]:
  - RF of loop [24:1]:
    -B+6


### Specialization of cost equations f10/5 
* CE 4 is refined into CE [27] 
* CE 2 is refined into CE [28,29] 
* CE 5 is refined into CE [30] 
* CE 3 is refined into CE [31] 


### Cost equations --> "Loop" of f10/5 
* CEs [31] --> Loop 27 
* CEs [27] --> Loop 28 
* CEs [28,29] --> Loop 29 
* CEs [30] --> Loop 30 

### Ranking functions of CR f10(A,B,D,E,F) 
* RF of phase [27]: [-A+6]

#### Partial ranking functions of CR f10(A,B,D,E,F) 
* Partial RF of phase [27]:
  - RF of loop [27:1]:
    -A+6


### Specialization of cost equations f27/5 
* CE 23 is refined into CE [32] 
* CE 22 is refined into CE [33] 
* CE 21 is refined into CE [34] 


### Cost equations --> "Loop" of f27/5 
* CEs [34] --> Loop 31 
* CEs [32] --> Loop 32 
* CEs [33] --> Loop 33 

### Ranking functions of CR f27(B,C,D,E,F) 
* RF of phase [31]: [-C+6]

#### Partial ranking functions of CR f27(B,C,D,E,F) 
* Partial RF of phase [31]:
  - RF of loop [31:1]:
    -C+6


### Specialization of cost equations f24/7 
* CE 19 is refined into CE [35] 
* CE 17 is refined into CE [36,37] 
* CE 20 is refined into CE [38] 
* CE 18 is refined into CE [39] 


### Cost equations --> "Loop" of f24/7 
* CEs [39] --> Loop 34 
* CEs [35] --> Loop 35 
* CEs [36,37] --> Loop 36 
* CEs [38] --> Loop 37 

### Ranking functions of CR f24(A,B,C,D,E,F,G) 
* RF of phase [34]: [-B+6]

#### Partial ranking functions of CR f24(A,B,C,D,E,F,G) 
* Partial RF of phase [34]:
  - RF of loop [34:1]:
    -B+6


### Specialization of cost equations f21/7 
* CE 13 is refined into CE [40] 
* CE 11 is refined into CE [41,42,43] 
* CE 14 is refined into CE [44] 
* CE 12 is refined into CE [45] 


### Cost equations --> "Loop" of f21/7 
* CEs [45] --> Loop 38 
* CEs [40] --> Loop 39 
* CEs [41,42,43] --> Loop 40 
* CEs [44] --> Loop 41 

### Ranking functions of CR f21(A,B,C,D,E,F,G) 
* RF of phase [38]: [-A+6]

#### Partial ranking functions of CR f21(A,B,C,D,E,F,G) 
* Partial RF of phase [38]:
  - RF of loop [38:1]:
    -A+6


### Specialization of cost equations f21_loop_cont/5 
* CE 15 is refined into CE [46] 
* CE 16 is refined into CE [47] 


### Cost equations --> "Loop" of f21_loop_cont/5 
* CEs [46] --> Loop 42 
* CEs [47] --> Loop 43 

### Ranking functions of CR f21_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR f21_loop_cont(A,B,C,D,E) 


### Specialization of cost equations f10_loop_cont/5 
* CE 7 is refined into CE [48,49,50,51,52] 
* CE 6 is refined into CE [53] 


### Cost equations --> "Loop" of f10_loop_cont/5 
* CEs [52] --> Loop 44 
* CEs [50] --> Loop 45 
* CEs [49,51] --> Loop 46 
* CEs [48] --> Loop 47 
* CEs [53] --> Loop 48 

### Ranking functions of CR f10_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR f10_loop_cont(A,B,C,D,E) 


### Specialization of cost equations f0/4 
* CE 1 is refined into CE [54,55,56,57,58,59] 


### Cost equations --> "Loop" of f0/4 
* CEs [54,55,56,57,58,59] --> Loop 49 

### Ranking functions of CR f0(A,B,C,D) 

#### Partial ranking functions of CR f0(A,B,C,D) 


Computing Bounds
=====================================

#### Cost of chains of f13(A,B,D,E,F):
* Chain [[24],26]: 1*it(24)+0
  Such that:it(24) =< -B+6

  with precondition: [D=3,5>=A,5>=B,B>=1] 

* Chain [[24],25]: 1*it(24)+0
  Such that:it(24) =< -B+6

  with precondition: [D=5,F=6,A+1=E,5>=A,5>=B,B>=1] 

* Chain [26]: 0
  with precondition: [D=3,5>=A,B>=1] 


#### Cost of chains of f10(A,B,D,E,F):
* Chain [[27],30]: 1*it(27)+1*s(3)+0
  Such that:aux(4) =< -A+6
it(27) =< aux(4)
s(3) =< aux(4)*5

  with precondition: [D=3,5>=A,A>=1] 

* Chain [[27],29]: 1*it(27)+1*s(3)+5
  Such that:aux(3) =< -A+5
aux(2) =< -A+6
aux(1) =< aux(2)
it(27) =< aux(2)
aux(1) =< aux(3)
it(27) =< aux(3)
s(3) =< aux(1)*5

  with precondition: [D=3,4>=A,A>=1] 

* Chain [[27],28]: 1*it(27)+1*s(3)+0
  Such that:aux(5) =< -A+6
it(27) =< aux(5)
s(3) =< aux(5)*5

  with precondition: [D=4,E=1,F=6,5>=A] 

* Chain [30]: 0
  with precondition: [D=3,A>=1] 

* Chain [29]: 5
  with precondition: [D=3,5>=A,A>=1] 


#### Cost of chains of f27(B,C,D,E,F):
* Chain [[31],33]: 1*it(31)+0
  Such that:it(31) =< -C+6

  with precondition: [D=2,F=6,B+1=E,5>=B,5>=C,C>=1] 

* Chain [[31],32]: 1*it(31)+0
  Such that:it(31) =< -C+6

  with precondition: [D=3,5>=B,5>=C,C>=1] 

* Chain [32]: 0
  with precondition: [D=3,5>=B,C>=1] 


#### Cost of chains of f24(A,B,C,D,E,F,G):
* Chain [[34],37]: 1*it(34)+1*s(10)+0
  Such that:aux(9) =< -B+6
it(34) =< aux(9)
s(10) =< aux(9)*5

  with precondition: [D=3,5>=A,5>=B,B>=1] 

* Chain [[34],36]: 1*it(34)+1*s(10)+5
  Such that:aux(8) =< -B+5
aux(7) =< -B+6
aux(6) =< aux(7)
it(34) =< aux(7)
aux(6) =< aux(8)
it(34) =< aux(8)
s(10) =< aux(6)*5

  with precondition: [D=3,5>=A,4>=B,B>=1] 

* Chain [[34],35]: 1*it(34)+1*s(10)+0
  Such that:aux(10) =< -B+6
it(34) =< aux(10)
s(10) =< aux(10)*5

  with precondition: [D=4,F=6,G=6,A+1=E,5>=A,5>=B] 

* Chain [37]: 0
  with precondition: [D=3,5>=A,B>=1] 

* Chain [36]: 5
  with precondition: [D=3,5>=A,5>=B,B>=1] 


#### Cost of chains of f21(A,B,C,D,E,F,G):
* Chain [[38],41]: 1*it(38)+1*s(21)+1*s(22)+0
  Such that:aux(14) =< -A+6
it(38) =< aux(14)
s(23) =< aux(14)*5
s(21) =< s(23)
s(22) =< s(23)*5

  with precondition: [D=3,5>=A] 

* Chain [[38],40]: 1*it(38)+1*s(21)+1*s(22)+65
  Such that:aux(13) =< -A+5
aux(12) =< -A+6
aux(11) =< aux(12)
it(38) =< aux(12)
aux(11) =< aux(13)
it(38) =< aux(13)
s(23) =< aux(11)*5
s(21) =< s(23)
s(22) =< s(23)*5

  with precondition: [D=3,4>=A] 

* Chain [[38],39]: 1*it(38)+1*s(21)+1*s(22)+0
  Such that:aux(16) =< -A+6
it(38) =< aux(16)
s(23) =< aux(16)*5
s(21) =< s(23)
s(22) =< s(23)*5

  with precondition: [D=6,E=6,F=6,G=6,5>=A] 

* Chain [41]: 0
  with precondition: [D=3] 

* Chain [40]: 65
  with precondition: [D=3,5>=A] 

* Chain [39]: 0
  with precondition: [D=6,F=B,G=C,A=E,A>=6] 


#### Cost of chains of f21_loop_cont(A,B,C,D,E):
* Chain [43]: 0
  with precondition: [A=3] 

* Chain [42]: 0
  with precondition: [A=6] 


#### Cost of chains of f10_loop_cont(A,B,C,D,E):
* Chain [48]: 0
  with precondition: [A=3] 

* Chain [47]: 0
  with precondition: [A=4] 

* Chain [46]: 2*s(38)+2*s(40)+2*s(41)+65
  Such that:aux(17) =< -B+6
s(38) =< aux(17)
s(39) =< aux(17)*5
s(40) =< s(39)
s(41) =< s(39)*5

  with precondition: [A=4,5>=B] 

* Chain [45]: 1*s(50)+1*s(52)+1*s(53)+65
  Such that:s(47) =< -B+5
s(48) =< -B+6
s(49) =< s(48)
s(50) =< s(48)
s(49) =< s(47)
s(50) =< s(47)
s(51) =< s(49)*5
s(52) =< s(51)
s(53) =< s(51)*5

  with precondition: [A=4,4>=B] 

* Chain [44]: 0
  with precondition: [A=4,B>=6] 


#### Cost of chains of f0(A,B,C,D):
* Chain [49]: 680
  with precondition: [] 


Closed-form bounds of f0(A,B,C,D): 
-------------------------------------
* Chain [49] with precondition: [] 
    - Upper bound: 680 
    - Complexity: constant 

### Maximum cost of f0(A,B,C,D): 680 
Asymptotic class: constant 
* Total analysis performed in 156 ms.

