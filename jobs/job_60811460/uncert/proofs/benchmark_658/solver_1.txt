WORST_CASE(Omega(n^2),O(n^2))

# LoAT Proof:
WORST_CASE(Omega(n^2),?)

WORST_CASE(Omega(n^1),?)
WORST_CASE(Omega(n^2),?)
Initial ITS

Start location: eval_insertsort_start

Location map:
LoAT_sink -> 0
eval_insertsort_start -> 1
eval_insertsort_bb0_in -> 2
eval_insertsort_0 -> 3
eval_insertsort_1 -> 4
eval_insertsort_2 -> 5
eval_insertsort_3 -> 6
eval_insertsort_4 -> 7
eval_insertsort_5 -> 8
eval_insertsort_6 -> 9
eval_insertsort_bb1_in -> 10
eval_insertsort_bb2_in -> 11
eval_insertsort_bb7_in -> 12
eval_insertsort_bb3_in -> 13
eval_insertsort_bb4_in -> 14
eval_insertsort_bb6_in -> 15
eval_insertsort_bb5_in -> 16
eval_insertsort_25 -> 17
eval_insertsort_26 -> 18
eval_insertsort_stop -> 19

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: -2+i1 == 0 /\ i1'=3, i3'=1+i3
   2: -3+i1 == 0 /\ i1'=4, i3'=1+i3
   3: -4+i1 == 0 /\ i1'=5, i3'=1+i3
   4: -5+i1 == 0 /\ i1'=6, i3'=1+i3
   5: -6+i1 == 0 /\ i1'=7, i3'=1+i3
   6: -7+i1 == 0 /\ i1'=8, i3'=1+i3
   7: -8+i1 == 0 /\ i1'=9, i3'=1+i3
   8: -9+i1 == 0 /\ i1'=10, i3'=1+i3, i6'=1
   9: (-10+i1 == 0 /\ i6-i8 < 0) /\ i1'=11, i3'=1+i3
  10: (-10+i1 == 0 /\ i6-i8 >= 0) /\ i1'=12, i3'=1+i3
  11: -11+i1 == 0 /\ i1'=13, i3'=1+i3, i5'=it2, i7'=-1+i6
  12: (-13+i1 == 0 /\ i7 >= 0) /\ i1'=14, i3'=1+i3
  13: (-13+i1 == 0 /\ i7 < 0) /\ i1'=15, i3'=1+i3
  14: (-14+i1 == 0 /\ -i5+it4 > 0) /\ i1'=16, i3'=1+i3
  15: (it5-i5 <= 0 /\ -14+i1 == 0) /\ i1'=15, i3'=1+i3
  16: -16+i1 == 0 /\ i1'=13, i3'=1+i3, i7'=-1+i7
  17: -15+i1 == 0 /\ i1'=17, i3'=1+i3, i4'=1+i6
  18: -17+i1 == 0 /\ i1'=18, i3'=1+i3
  19: -18+i1 == 0 /\ i1'=10, i3'=1+i3, i6'=i4
  20: -12+i1 == 0 /\ i1'=19, i3'=1+i3

Dependency graph:
0 -> 1
1 -> 2
2 -> 3
3 -> 4
4 -> 5
5 -> 6
6 -> 7
7 -> 8
8 -> 9, 8 -> 10
9 -> 11
10 -> 20
11 -> 12, 11 -> 13
12 -> 14, 12 -> 15
13 -> 17
14 -> 16
15 -> 17
16 -> 12, 16 -> 13
17 -> 18
18 -> 19
19 -> 9, 19 -> 10

Chained Linear Paths

	Applied Chaining

	First rule:
	-1+i1 == 0 /\ i1'=2, i3'=1+i3
	Second rule:
	-2+i1 == 0 /\ i1'=3, i3'=1+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 0, 1
	
	Applied Chaining

	First rule:
	-3+i1 == 0 /\ i1'=4, i3'=1+i3
	Second rule:
	-4+i1 == 0 /\ i1'=5, i3'=1+i3
	New rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 2, 3
	
	Applied Chaining

	First rule:
	-5+i1 == 0 /\ i1'=6, i3'=1+i3
	Second rule:
	-6+i1 == 0 /\ i1'=7, i3'=1+i3
	New rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=7, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 4, 5
	
	Applied Chaining

	First rule:
	-7+i1 == 0 /\ i1'=8, i3'=1+i3
	Second rule:
	-8+i1 == 0 /\ i1'=9, i3'=1+i3
	New rule:
	(0 == 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 6, 7
	
	Applied Chaining

	First rule:
	(-10+i1 == 0 /\ i6-i8 < 0) /\ i1'=11, i3'=1+i3
	Second rule:
	-11+i1 == 0 /\ i1'=13, i3'=1+i3, i5'=it2, i7'=-1+i6
	New rule:
	(0 == 0 /\ -10+i1 == 0 /\ i6-i8 < 0) /\ i1'=13, i3'=2+i3, i5'=it2, i7'=-1+i6
	
	Applied Deletion

	Removed the following rules: 9, 11
	
	Applied Chaining

	First rule:
	(-10+i1 == 0 /\ i6-i8 >= 0) /\ i1'=12, i3'=1+i3
	Second rule:
	-12+i1 == 0 /\ i1'=19, i3'=1+i3
	New rule:
	(0 == 0 /\ -10+i1 == 0 /\ i6-i8 >= 0) /\ i1'=19, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 10, 20
	
	Applied Chaining

	First rule:
	(-13+i1 == 0 /\ i7 < 0) /\ i1'=15, i3'=1+i3
	Second rule:
	-15+i1 == 0 /\ i1'=17, i3'=1+i3, i4'=1+i6
	New rule:
	(0 == 0 /\ -13+i1 == 0 /\ i7 < 0) /\ i1'=17, i3'=2+i3, i4'=1+i6
	
	Applied Deletion

	Removed the following rules: 13
	
	Applied Chaining

	First rule:
	(-14+i1 == 0 /\ -i5+it4 > 0) /\ i1'=16, i3'=1+i3
	Second rule:
	-16+i1 == 0 /\ i1'=13, i3'=1+i3, i7'=-1+i7
	New rule:
	(0 == 0 /\ -14+i1 == 0 /\ -i5+it4 > 0) /\ i1'=13, i3'=2+i3, i7'=-1+i7
	
	Applied Deletion

	Removed the following rules: 14, 16
	
	Applied Chaining

	First rule:
	(it5-i5 <= 0 /\ -14+i1 == 0) /\ i1'=15, i3'=1+i3
	Second rule:
	-15+i1 == 0 /\ i1'=17, i3'=1+i3, i4'=1+i6
	New rule:
	(0 == 0 /\ it5-i5 <= 0 /\ -14+i1 == 0) /\ i1'=17, i3'=2+i3, i4'=1+i6
	
	Applied Deletion

	Removed the following rules: 15, 17
	
	Applied Chaining

	First rule:
	-17+i1 == 0 /\ i1'=18, i3'=1+i3
	Second rule:
	-18+i1 == 0 /\ i1'=10, i3'=1+i3, i6'=i4
	New rule:
	(0 == 0 /\ -17+i1 == 0) /\ i1'=10, i3'=2+i3, i6'=i4
	
	Applied Deletion

	Removed the following rules: 18, 19
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	Second rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	
	Applied Deletion

	Removed the following rules: 21, 22
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=7, i3'=2+i3
	Second rule:
	(0 == 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
	New rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=9, i3'=4+i3
	
	Applied Deletion

	Removed the following rules: 23, 24
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -13+i1 == 0 /\ i7 < 0) /\ i1'=17, i3'=2+i3, i4'=1+i6
	Second rule:
	(0 == 0 /\ -17+i1 == 0) /\ i1'=10, i3'=2+i3, i6'=i4
	New rule:
	(0 == 0 /\ -13+i1 == 0 /\ i7 < 0) /\ i1'=10, i3'=4+i3, i4'=1+i6, i6'=1+i6
	
	Applied Deletion

	Removed the following rules: 27
	
	Applied Chaining

	First rule:
	(0 == 0 /\ it5-i5 <= 0 /\ -14+i1 == 0) /\ i1'=17, i3'=2+i3, i4'=1+i6
	Second rule:
	(0 == 0 /\ -17+i1 == 0) /\ i1'=10, i3'=2+i3, i6'=i4
	New rule:
	(0 == 0 /\ it5-i5 <= 0 /\ -14+i1 == 0) /\ i1'=10, i3'=4+i3, i4'=1+i6, i6'=1+i6
	
	Applied Deletion

	Removed the following rules: 29, 30
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	Second rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=9, i3'=4+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=9, i3'=8+i3
	
	Applied Deletion

	Removed the following rules: 31, 32
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=9, i3'=8+i3
	Second rule:
	-9+i1 == 0 /\ i1'=10, i3'=1+i3, i6'=1
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=10, i3'=9+i3, i6'=1
	
	Applied Deletion

	Removed the following rules: 8, 35

Start location: eval_insertsort_start

Location map:
LoAT_sink -> 0
eval_insertsort_start -> 1
eval_insertsort_bb0_in -> 2
eval_insertsort_0 -> 3
eval_insertsort_1 -> 4
eval_insertsort_2 -> 5
eval_insertsort_3 -> 6
eval_insertsort_4 -> 7
eval_insertsort_5 -> 8
eval_insertsort_6 -> 9
eval_insertsort_bb1_in -> 10
eval_insertsort_bb2_in -> 11
eval_insertsort_bb7_in -> 12
eval_insertsort_bb3_in -> 13
eval_insertsort_bb4_in -> 14
eval_insertsort_bb6_in -> 15
eval_insertsort_bb5_in -> 16
eval_insertsort_25 -> 17
eval_insertsort_26 -> 18
eval_insertsort_stop -> 19

Rules:
  12: (-13+i1 == 0 /\ i7 >= 0) /\ i1'=14, i3'=1+i3
  25: (0 == 0 /\ -10+i1 == 0 /\ i6-i8 < 0) /\ i1'=13, i3'=2+i3, i5'=it2, i7'=-1+i6
  26: (0 == 0 /\ -10+i1 == 0 /\ i6-i8 >= 0) /\ i1'=19, i3'=2+i3
  28: (0 == 0 /\ -14+i1 == 0 /\ -i5+it4 > 0) /\ i1'=13, i3'=2+i3, i7'=-1+i7
  33: (0 == 0 /\ -13+i1 == 0 /\ i7 < 0) /\ i1'=10, i3'=4+i3, i4'=1+i6, i6'=1+i6
  34: (0 == 0 /\ it5-i5 <= 0 /\ -14+i1 == 0) /\ i1'=10, i3'=4+i3, i4'=1+i6, i6'=1+i6
  36: (0 == 0 /\ -1+i1 == 0) /\ i1'=10, i3'=9+i3, i6'=1

Dependency graph:
12 -> 28, 12 -> 34
25 -> 12, 25 -> 33
28 -> 12, 28 -> 33
33 -> 25, 33 -> 26
34 -> 25, 34 -> 26
36 -> 25, 36 -> 26

Preprocessed Transitions

	Simplified Guard

	Original rule:
	(0 == 0 /\ -10+i1 == 0 /\ i6-i8 < 0) /\ i1'=13, i3'=2+i3, i5'=it2, i7'=-1+i6
	New rule:
	(-10+i1 == 0 /\ i6-i8 < 0) /\ i1'=13, i3'=2+i3, i5'=it2, i7'=-1+i6
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -10+i1 == 0 /\ i6-i8 >= 0) /\ i1'=19, i3'=2+i3
	New rule:
	(-10+i1 == 0 /\ i6-i8 >= 0) /\ i1'=19, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -14+i1 == 0 /\ -i5+it4 > 0) /\ i1'=13, i3'=2+i3, i7'=-1+i7
	New rule:
	(-14+i1 == 0 /\ -i5+it4 > 0) /\ i1'=13, i3'=2+i3, i7'=-1+i7
	
	Eliminated Temporary Variables

	Original rule:
	(-14+i1 == 0 /\ -i5+it4 > 0) /\ i1'=13, i3'=2+i3, i7'=-1+i7
	New rule:
	(-14+i1 == 0) /\ i1'=13, i3'=2+i3, i7'=-1+i7
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -13+i1 == 0 /\ i7 < 0) /\ i1'=10, i3'=4+i3, i4'=1+i6, i6'=1+i6
	New rule:
	(-13+i1 == 0 /\ i7 < 0) /\ i1'=10, i3'=4+i3, i4'=1+i6, i6'=1+i6
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ it5-i5 <= 0 /\ -14+i1 == 0) /\ i1'=10, i3'=4+i3, i4'=1+i6, i6'=1+i6
	New rule:
	(it5-i5 <= 0 /\ -14+i1 == 0) /\ i1'=10, i3'=4+i3, i4'=1+i6, i6'=1+i6
	
	Eliminated Temporary Variables

	Original rule:
	(it5-i5 <= 0 /\ -14+i1 == 0) /\ i1'=10, i3'=4+i3, i4'=1+i6, i6'=1+i6
	New rule:
	(-14+i1 == 0) /\ i1'=10, i3'=4+i3, i4'=1+i6, i6'=1+i6
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=10, i3'=9+i3, i6'=1
	New rule:
	-1+i1 == 0 /\ i1'=10, i3'=9+i3, i6'=1

Start location: eval_insertsort_start

Location map:
LoAT_sink -> 0
eval_insertsort_start -> 1
eval_insertsort_bb0_in -> 2
eval_insertsort_0 -> 3
eval_insertsort_1 -> 4
eval_insertsort_2 -> 5
eval_insertsort_3 -> 6
eval_insertsort_4 -> 7
eval_insertsort_5 -> 8
eval_insertsort_6 -> 9
eval_insertsort_bb1_in -> 10
eval_insertsort_bb2_in -> 11
eval_insertsort_bb7_in -> 12
eval_insertsort_bb3_in -> 13
eval_insertsort_bb4_in -> 14
eval_insertsort_bb6_in -> 15
eval_insertsort_bb5_in -> 16
eval_insertsort_25 -> 17
eval_insertsort_26 -> 18
eval_insertsort_stop -> 19

Rules:
  12: (-13+i1 == 0 /\ i7 >= 0) /\ i1'=14, i3'=1+i3
  37: (-10+i1 == 0 /\ i6-i8 < 0) /\ i1'=13, i3'=2+i3, i5'=it2, i7'=-1+i6
  38: (-10+i1 == 0 /\ i6-i8 >= 0) /\ i1'=19, i3'=2+i3
  39: (-14+i1 == 0) /\ i1'=13, i3'=2+i3, i7'=-1+i7
  40: (-13+i1 == 0 /\ i7 < 0) /\ i1'=10, i3'=4+i3, i4'=1+i6, i6'=1+i6
  41: (-14+i1 == 0) /\ i1'=10, i3'=4+i3, i4'=1+i6, i6'=1+i6
  42: -1+i1 == 0 /\ i1'=10, i3'=9+i3, i6'=1

Dependency graph:
12 -> 39, 12 -> 41
37 -> 12, 37 -> 40
39 -> 12, 39 -> 40
40 -> 37, 40 -> 38
41 -> 37, 41 -> 38
42 -> 37, 42 -> 38

Step with 42

	Trace

	42[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 38

	Trace

	42[(-1+i1 == 0)]
	38[(-10+i1 == 0 /\ i6-i8 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Backtrack

	Trace

	42[(-1+i1 == 0)]
	
	Blocked

	{}
	{38[T]}
	
Step with 37

	Trace

	42[(-1+i1 == 0)]
	37[(-10+i1 == 0 /\ i6-i8 < 0)]
	
	Blocked

	{}
	{38[T]}
	{}
	
Step with 12

	Trace

	42[(-1+i1 == 0)]
	37[(-10+i1 == 0 /\ i6-i8 < 0)]
	12[(-13+i1 == 0 /\ i7 >= 0)]
	
	Blocked

	{}
	{38[T]}
	{}
	{}
	
Step with 41

	Trace

	42[(-1+i1 == 0)]
	37[(-10+i1 == 0 /\ i6-i8 < 0)]
	12[(-13+i1 == 0 /\ i7 >= 0)]
	41[(-14+i1 == 0)]
	
	Blocked

	{}
	{38[T]}
	{}
	{}
	{}
	
Poly(n^1)

Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -10+i1 == 0 /\ i6-i8 < 0 /\ -1+i6 >= 0) /\ i1'=10, i3'=7+i3, i4'=1+i6, i5'=it2, i6'=1+i6, i7'=-1+i6
		New rule:
		(-10+i1 == 0 /\ i6-i8 < 0 /\ -1+i6 >= 0) /\ i1'=10, i3'=7+i3, i4'=1+i6, i5'=it2, i6'=1+i6, i7'=-1+i6

	Loop Acceleration

	Original rule:
	(-10+i1 == 0 /\ i6-i8 < 0 /\ -1+i6 >= 0) /\ i1'=10, i3'=7+i3, i4'=1+i6, i5'=it2, i6'=1+i6, i7'=-1+i6
	New rule:
	(10-i1 >= 0 /\ -1+it42 >= 0 /\ 1-i6+i8-it42 > 0 /\ -i6+i8 > 0 /\ -10+i1 >= 0 /\ -1+i6 >= 0) /\ i1'=i1, i3'=i3+7*it42, i4'=i6+it42, i5'=it2, i6'=i6+it42, i7'=-2+i6+it42

		10-i1 >= 0 [0]: unchanged
		
		-i6+i8 > 0 [0]: montonic decrease yields (1-i6+i8-it42 > 0 /\ -i6+i8 > 0)
		
		-10+i1 >= 0 [0]: unchanged
		
		-1+i6 >= 0 [0]: monotonic increase yields -1+i6 >= 0
		
		Replacement map: {10-i1 >= 0 -> 10-i1 >= 0, -i6+i8 > 0 -> (1-i6+i8-it42 > 0 /\ -i6+i8 > 0), -10+i1 >= 0 -> -10+i1 >= 0, -1+i6 >= 0 -> -1+i6 >= 0}

	Removed Trivial Updates

	Original rule:
	(10-i1 >= 0 /\ -1+it42 >= 0 /\ 1-i6+i8-it42 > 0 /\ -i6+i8 > 0 /\ -10+i1 >= 0 /\ -1+i6 >= 0) /\ i1'=i1, i3'=i3+7*it42, i4'=i6+it42, i5'=it2, i6'=i6+it42, i7'=-2+i6+it42
	New rule:
	(10-i1 >= 0 /\ -1+it42 >= 0 /\ 1-i6+i8-it42 > 0 /\ -i6+i8 > 0 /\ -10+i1 >= 0 /\ -1+i6 >= 0) /\ i3'=i3+7*it42, i4'=i6+it42, i5'=it2, i6'=i6+it42, i7'=-2+i6+it42
	
	Instantiation

	Original rule:
	(10-i1 >= 0 /\ -1+it42 >= 0 /\ 1-i6+i8-it42 > 0 /\ -i6+i8 > 0 /\ -10+i1 >= 0 /\ -1+i6 >= 0) /\ i3'=i3+7*it42, i4'=i6+it42, i5'=it2, i6'=i6+it42, i7'=-2+i6+it42
	New rule:
	(1 > 0 /\ 10-i1 >= 0 /\ -1-i6+i8 >= 0 /\ -i6+i8 > 0 /\ -10+i1 >= 0 /\ -1+i6 >= 0) /\ i3'=-7*i6+i3+7*i8, i4'=i8, i5'=it2, i6'=i8, i7'=-2+i8

Start location: eval_insertsort_start

Location map:
LoAT_sink -> 0
eval_insertsort_start -> 1
eval_insertsort_bb0_in -> 2
eval_insertsort_0 -> 3
eval_insertsort_1 -> 4
eval_insertsort_2 -> 5
eval_insertsort_3 -> 6
eval_insertsort_4 -> 7
eval_insertsort_5 -> 8
eval_insertsort_6 -> 9
eval_insertsort_bb1_in -> 10
eval_insertsort_bb2_in -> 11
eval_insertsort_bb7_in -> 12
eval_insertsort_bb3_in -> 13
eval_insertsort_bb4_in -> 14
eval_insertsort_bb6_in -> 15
eval_insertsort_bb5_in -> 16
eval_insertsort_25 -> 17
eval_insertsort_26 -> 18
eval_insertsort_stop -> 19

Rules:
  12: (-13+i1 == 0 /\ i7 >= 0) /\ i1'=14, i3'=1+i3
  37: (-10+i1 == 0 /\ i6-i8 < 0) /\ i1'=13, i3'=2+i3, i5'=it2, i7'=-1+i6
  38: (-10+i1 == 0 /\ i6-i8 >= 0) /\ i1'=19, i3'=2+i3
  39: (-14+i1 == 0) /\ i1'=13, i3'=2+i3, i7'=-1+i7
  40: (-13+i1 == 0 /\ i7 < 0) /\ i1'=10, i3'=4+i3, i4'=1+i6, i6'=1+i6
  41: (-14+i1 == 0) /\ i1'=10, i3'=4+i3, i4'=1+i6, i6'=1+i6
  42: -1+i1 == 0 /\ i1'=10, i3'=9+i3, i6'=1
  43: (1 > 0 /\ 10-i1 >= 0 /\ -1-i6+i8 >= 0 /\ -i6+i8 > 0 /\ -10+i1 >= 0 /\ -1+i6 >= 0) /\ i3'=-7*i6+i3+7*i8, i4'=i8, i5'=it2, i6'=i8, i7'=-2+i8

Dependency graph:
12 -> 39, 12 -> 41
37 -> 12, 37 -> 40
39 -> 12, 39 -> 40
40 -> 37, 40 -> 38, 40 -> 43
41 -> 37, 41 -> 38, 41 -> 43
42 -> 37, 42 -> 38, 42 -> 43
43 -> 37, 43 -> 38

	Trace

	42[(-1+i1 == 0)]
	43[(1 > 0 /\ 10-i1 >= 0 /\ -1-i6+i8 >= 0 /\ -i6+i8 > 0 /\ -10+i1 >= 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{38[T]}
	{43[T]}
	
Step with 38

	Trace

	42[(-1+i1 == 0)]
	43[(1 > 0 /\ 10-i1 >= 0 /\ -1-i6+i8 >= 0 /\ -i6+i8 > 0 /\ -10+i1 >= 0 /\ -1+i6 >= 0)]
	38[(-10+i1 == 0 /\ i6-i8 >= 0)]
	
	Blocked

	{}
	{38[T]}
	{37[T], 43[T]}
	{}
	
Backtrack

	Trace

	42[(-1+i1 == 0)]
	43[(1 > 0 /\ 10-i1 >= 0 /\ -1-i6+i8 >= 0 /\ -i6+i8 > 0 /\ -10+i1 >= 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{38[T]}
	{37[T], 38[T], 43[T]}
	
Backtrack

	Trace

	42[(-1+i1 == 0)]
	
	Blocked

	{}
	{38[T], 43[T]}
	
Step with 37

	Trace

	42[(-1+i1 == 0)]
	37[(-10+i1 == 0 /\ i6-i8 < 0)]
	
	Blocked

	{}
	{38[T], 43[T]}
	{}
	
Step with 12

	Trace

	42[(-1+i1 == 0)]
	37[(-10+i1 == 0 /\ i6-i8 < 0)]
	12[(-13+i1 == 0 /\ i7 >= 0)]
	
	Blocked

	{}
	{38[T], 43[T]}
	{}
	{}
	
Step with 39

	Trace

	42[(-1+i1 == 0)]
	37[(-10+i1 == 0 /\ i6-i8 < 0)]
	12[(-13+i1 == 0 /\ i7 >= 0)]
	39[(-14+i1 == 0)]
	
	Blocked

	{}
	{38[T], 43[T]}
	{}
	{}
	{}
	
Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -13+i1 == 0 /\ i7 >= 0) /\ i1'=13, i3'=3+i3, i7'=-1+i7
		New rule:
		(-13+i1 == 0 /\ i7 >= 0) /\ i1'=13, i3'=3+i3, i7'=-1+i7

	Loop Acceleration

	Original rule:
	(-13+i1 == 0 /\ i7 >= 0) /\ i1'=13, i3'=3+i3, i7'=-1+i7
	New rule:
	(-13+i1 >= 0 /\ 13-i1 >= 0 /\ -1+it86 >= 0 /\ 1+i7-it86 >= 0) /\ i1'=i1, i3'=i3+3*it86, i7'=i7-it86

		-13+i1 >= 0 [0]: unchanged
		
		i7 >= 0 [0]: montonic decrease yields 1+i7-it86 >= 0
		
		13-i1 >= 0 [0]: unchanged
		
		Replacement map: {-13+i1 >= 0 -> -13+i1 >= 0, i7 >= 0 -> 1+i7-it86 >= 0, 13-i1 >= 0 -> 13-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-13+i1 >= 0 /\ 13-i1 >= 0 /\ -1+it86 >= 0 /\ 1+i7-it86 >= 0) /\ i1'=i1, i3'=i3+3*it86, i7'=i7-it86
	New rule:
	(-13+i1 >= 0 /\ 13-i1 >= 0 /\ -1+it86 >= 0 /\ 1+i7-it86 >= 0) /\ i3'=i3+3*it86, i7'=i7-it86
	
	Instantiation

	Original rule:
	(-13+i1 >= 0 /\ 13-i1 >= 0 /\ -1+it86 >= 0 /\ 1+i7-it86 >= 0) /\ i3'=i3+3*it86, i7'=i7-it86
	New rule:
	(0 >= 0 /\ -13+i1 >= 0 /\ i7 >= 0 /\ 13-i1 >= 0) /\ i3'=3+i3+3*i7, i7'=-1

Start location: eval_insertsort_start

Location map:
LoAT_sink -> 0
eval_insertsort_start -> 1
eval_insertsort_bb0_in -> 2
eval_insertsort_0 -> 3
eval_insertsort_1 -> 4
eval_insertsort_2 -> 5
eval_insertsort_3 -> 6
eval_insertsort_4 -> 7
eval_insertsort_5 -> 8
eval_insertsort_6 -> 9
eval_insertsort_bb1_in -> 10
eval_insertsort_bb2_in -> 11
eval_insertsort_bb7_in -> 12
eval_insertsort_bb3_in -> 13
eval_insertsort_bb4_in -> 14
eval_insertsort_bb6_in -> 15
eval_insertsort_bb5_in -> 16
eval_insertsort_25 -> 17
eval_insertsort_26 -> 18
eval_insertsort_stop -> 19

Rules:
  12: (-13+i1 == 0 /\ i7 >= 0) /\ i1'=14, i3'=1+i3
  37: (-10+i1 == 0 /\ i6-i8 < 0) /\ i1'=13, i3'=2+i3, i5'=it2, i7'=-1+i6
  38: (-10+i1 == 0 /\ i6-i8 >= 0) /\ i1'=19, i3'=2+i3
  39: (-14+i1 == 0) /\ i1'=13, i3'=2+i3, i7'=-1+i7
  40: (-13+i1 == 0 /\ i7 < 0) /\ i1'=10, i3'=4+i3, i4'=1+i6, i6'=1+i6
  41: (-14+i1 == 0) /\ i1'=10, i3'=4+i3, i4'=1+i6, i6'=1+i6
  42: -1+i1 == 0 /\ i1'=10, i3'=9+i3, i6'=1
  43: (1 > 0 /\ 10-i1 >= 0 /\ -1-i6+i8 >= 0 /\ -i6+i8 > 0 /\ -10+i1 >= 0 /\ -1+i6 >= 0) /\ i3'=-7*i6+i3+7*i8, i4'=i8, i5'=it2, i6'=i8, i7'=-2+i8
  44: (0 >= 0 /\ -13+i1 >= 0 /\ i7 >= 0 /\ 13-i1 >= 0) /\ i3'=3+i3+3*i7, i7'=-1

Dependency graph:
12 -> 39, 12 -> 41
37 -> 12, 37 -> 40, 37 -> 44
39 -> 12, 39 -> 40, 39 -> 44
40 -> 37, 40 -> 38, 40 -> 43
41 -> 37, 41 -> 38, 41 -> 43
42 -> 37, 42 -> 38, 42 -> 43
43 -> 37, 43 -> 38
44 -> 12, 44 -> 40

	Trace

	42[(-1+i1 == 0)]
	37[(-10+i1 == 0 /\ i6-i8 < 0)]
	44[(0 >= 0 /\ -13+i1 >= 0 /\ i7 >= 0 /\ 13-i1 >= 0)]
	
	Blocked

	{}
	{38[T], 43[T]}
	{}
	{44[T]}
	
Step with 40

	Trace

	42[(-1+i1 == 0)]
	37[(-10+i1 == 0 /\ i6-i8 < 0)]
	44[(0 >= 0 /\ -13+i1 >= 0 /\ i7 >= 0 /\ 13-i1 >= 0)]
	40[(-13+i1 == 0 /\ i7 < 0)]
	
	Blocked

	{}
	{38[T], 43[T]}
	{}
	{12[T], 44[T]}
	{}
	
Poly(n^2)

Accelerate

		Extracted Implied Equalities

		Original rule:
		(0 >= 0 /\ 0 == 0 /\ -10+i1 == 0 /\ -1 < 0 /\ i6-i8 < 0 /\ -1+i6 >= 0) /\ i1'=10, i3'=6+3*i6+i3, i4'=1+i6, i5'=it2, i6'=1+i6, i7'=-1
		New rule:
		(0 >= 0 /\ 0 == 0 /\ -10+i1 == 0 /\ -1 < 0 /\ i6-i8 < 0 /\ -1+i6 >= 0) /\ i1'=10, i3'=6+3*i6+i3, i4'=1+i6, i5'=it2, i6'=1+i6, i7'=-1
		
		Simplified Guard

		Original rule:
		(0 >= 0 /\ 0 == 0 /\ -10+i1 == 0 /\ -1 < 0 /\ i6-i8 < 0 /\ -1+i6 >= 0) /\ i1'=10, i3'=6+3*i6+i3, i4'=1+i6, i5'=it2, i6'=1+i6, i7'=-1
		New rule:
		(-10+i1 == 0 /\ i6-i8 < 0 /\ -1+i6 >= 0) /\ i1'=10, i3'=6+3*i6+i3, i4'=1+i6, i5'=it2, i6'=1+i6, i7'=-1

	Loop Acceleration

	Original rule:
	(-10+i1 == 0 /\ i6-i8 < 0 /\ -1+i6 >= 0) /\ i1'=10, i3'=6+3*i6+i3, i4'=1+i6, i5'=it2, i6'=1+i6, i7'=-1
	New rule:
	(1-i6-it101+i8 > 0 /\ 10-i1 >= 0 /\ -i6+i8 > 0 /\ -10+i1 >= 0 /\ -1+it101 >= 0 /\ -1+i6 >= 0) /\ i1'=i1, i3'=9/2*it101+i3+3/2*it101^2+3*i6*it101, i4'=i6+it101, i5'=it2, i6'=i6+it101, i7'=-1

		10-i1 >= 0 [0]: unchanged
		
		-i6+i8 > 0 [0]: montonic decrease yields (1-i6-it101+i8 > 0 /\ -i6+i8 > 0)
		
		-10+i1 >= 0 [0]: unchanged
		
		-1+i6 >= 0 [0]: monotonic increase yields -1+i6 >= 0
		
		Replacement map: {10-i1 >= 0 -> 10-i1 >= 0, -i6+i8 > 0 -> (1-i6-it101+i8 > 0 /\ -i6+i8 > 0), -10+i1 >= 0 -> -10+i1 >= 0, -1+i6 >= 0 -> -1+i6 >= 0}

	Removed Trivial Updates

	Original rule:
	(1-i6-it101+i8 > 0 /\ 10-i1 >= 0 /\ -i6+i8 > 0 /\ -10+i1 >= 0 /\ -1+it101 >= 0 /\ -1+i6 >= 0) /\ i1'=i1, i3'=9/2*it101+i3+3/2*it101^2+3*i6*it101, i4'=i6+it101, i5'=it2, i6'=i6+it101, i7'=-1
	New rule:
	(1-i6-it101+i8 > 0 /\ 10-i1 >= 0 /\ -i6+i8 > 0 /\ -10+i1 >= 0 /\ -1+it101 >= 0 /\ -1+i6 >= 0) /\ i3'=9/2*it101+i3+3/2*it101^2+3*i6*it101, i4'=i6+it101, i5'=it2, i6'=i6+it101, i7'=-1
	
	Instantiation

	Original rule:
	(1-i6-it101+i8 > 0 /\ 10-i1 >= 0 /\ -i6+i8 > 0 /\ -10+i1 >= 0 /\ -1+it101 >= 0 /\ -1+i6 >= 0) /\ i3'=9/2*it101+i3+3/2*it101^2+3*i6*it101, i4'=i6+it101, i5'=it2, i6'=i6+it101, i7'=-1
	New rule:
	(1 > 0 /\ 10-i1 >= 0 /\ -1-i6+i8 >= 0 /\ -i6+i8 > 0 /\ -10+i1 >= 0 /\ -1+i6 >= 0) /\ i3'=-9/2*i6+i3-3*i6*(i6-i8)+3/2*(i6-i8)^2+9/2*i8, i4'=i8, i5'=it2, i6'=i8, i7'=-1

Start location: eval_insertsort_start

Location map:
LoAT_sink -> 0
eval_insertsort_start -> 1
eval_insertsort_bb0_in -> 2
eval_insertsort_0 -> 3
eval_insertsort_1 -> 4
eval_insertsort_2 -> 5
eval_insertsort_3 -> 6
eval_insertsort_4 -> 7
eval_insertsort_5 -> 8
eval_insertsort_6 -> 9
eval_insertsort_bb1_in -> 10
eval_insertsort_bb2_in -> 11
eval_insertsort_bb7_in -> 12
eval_insertsort_bb3_in -> 13
eval_insertsort_bb4_in -> 14
eval_insertsort_bb6_in -> 15
eval_insertsort_bb5_in -> 16
eval_insertsort_25 -> 17
eval_insertsort_26 -> 18
eval_insertsort_stop -> 19

Rules:
  12: (-13+i1 == 0 /\ i7 >= 0) /\ i1'=14, i3'=1+i3
  37: (-10+i1 == 0 /\ i6-i8 < 0) /\ i1'=13, i3'=2+i3, i5'=it2, i7'=-1+i6
  38: (-10+i1 == 0 /\ i6-i8 >= 0) /\ i1'=19, i3'=2+i3
  39: (-14+i1 == 0) /\ i1'=13, i3'=2+i3, i7'=-1+i7
  40: (-13+i1 == 0 /\ i7 < 0) /\ i1'=10, i3'=4+i3, i4'=1+i6, i6'=1+i6
  41: (-14+i1 == 0) /\ i1'=10, i3'=4+i3, i4'=1+i6, i6'=1+i6
  42: -1+i1 == 0 /\ i1'=10, i3'=9+i3, i6'=1
  43: (1 > 0 /\ 10-i1 >= 0 /\ -1-i6+i8 >= 0 /\ -i6+i8 > 0 /\ -10+i1 >= 0 /\ -1+i6 >= 0) /\ i3'=-7*i6+i3+7*i8, i4'=i8, i5'=it2, i6'=i8, i7'=-2+i8
  44: (0 >= 0 /\ -13+i1 >= 0 /\ i7 >= 0 /\ 13-i1 >= 0) /\ i3'=3+i3+3*i7, i7'=-1
  45: (1 > 0 /\ 10-i1 >= 0 /\ -1-i6+i8 >= 0 /\ -i6+i8 > 0 /\ -10+i1 >= 0 /\ -1+i6 >= 0) /\ i3'=-9/2*i6+i3-3*i6*(i6-i8)+3/2*(i6-i8)^2+9/2*i8, i4'=i8, i5'=it2, i6'=i8, i7'=-1

Dependency graph:
12 -> 39, 12 -> 41
37 -> 12, 37 -> 40, 37 -> 44
39 -> 12, 39 -> 40, 39 -> 44
40 -> 37, 40 -> 38, 40 -> 43, 40 -> 45
41 -> 37, 41 -> 38, 41 -> 43, 41 -> 45
42 -> 37, 42 -> 38, 42 -> 43, 42 -> 45
43 -> 37, 43 -> 38, 43 -> 45
44 -> 12, 44 -> 40
45 -> 37, 45 -> 38, 45 -> 43

	Trace

	42[(-1+i1 == 0)]
	45[(1 > 0 /\ 10-i1 >= 0 /\ -1-i6+i8 >= 0 /\ -i6+i8 > 0 /\ -10+i1 >= 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{38[T], 43[T]}
	{45[T]}
	
Step with 38

	Trace

	42[(-1+i1 == 0)]
	45[(1 > 0 /\ 10-i1 >= 0 /\ -1-i6+i8 >= 0 /\ -i6+i8 > 0 /\ -10+i1 >= 0 /\ -1+i6 >= 0)]
	38[(-10+i1 == 0 /\ i6-i8 >= 0)]
	
	Blocked

	{}
	{38[T], 43[T]}
	{45[T]}
	{}
	
Backtrack

	Trace

	42[(-1+i1 == 0)]
	45[(1 > 0 /\ 10-i1 >= 0 /\ -1-i6+i8 >= 0 /\ -i6+i8 > 0 /\ -10+i1 >= 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{38[T], 43[T]}
	{38[T], 45[T]}
	
Backtrack

	Trace

	42[(-1+i1 == 0)]
	
	Blocked

	{}
	{38[T], 43[T], 45[T]}
	
Step with 37

	Trace

	42[(-1+i1 == 0)]
	37[(-10+i1 == 0 /\ i6-i8 < 0)]
	
	Blocked

	{}
	{38[T], 43[T], 45[T]}
	{}
	
Step with 44

	Trace

	42[(-1+i1 == 0)]
	37[(-10+i1 == 0 /\ i6-i8 < 0)]
	44[(0 >= 0 /\ -13+i1 >= 0 /\ i7 >= 0 /\ 13-i1 >= 0)]
	
	Blocked

	{}
	{38[T], 43[T], 45[T]}
	{}
	{44[T]}
	
Step with 40

	Trace

	42[(-1+i1 == 0)]
	37[(-10+i1 == 0 /\ i6-i8 < 0)]
	44[(0 >= 0 /\ -13+i1 >= 0 /\ i7 >= 0 /\ 13-i1 >= 0)]
	40[(-13+i1 == 0 /\ i7 < 0)]
	
	Blocked

	{}
	{38[T], 43[T], 45[T]}
	{}
	{12[T], 44[T]}
	{}
	
Covered

	Trace

	42[(-1+i1 == 0)]
	37[(-10+i1 == 0 /\ i6-i8 < 0)]
	44[(0 >= 0 /\ -13+i1 >= 0 /\ i7 >= 0 /\ 13-i1 >= 0)]
	
	Blocked

	{}
	{38[T], 43[T], 45[T]}
	{}
	{12[T], 40[T], 44[T]}
	
Backtrack

	Trace

	42[(-1+i1 == 0)]
	37[(-10+i1 == 0 /\ i6-i8 < 0)]
	
	Blocked

	{}
	{38[T], 43[T], 45[T]}
	{44[T]}
	
Step with 12

	Trace

	42[(-1+i1 == 0)]
	37[(-10+i1 == 0 /\ i6-i8 < 0)]
	12[(-13+i1 == 0 /\ i7 >= 0)]
	
	Blocked

	{}
	{38[T], 43[T], 45[T]}
	{44[T]}
	{}
	
Step with 41

	Trace

	42[(-1+i1 == 0)]
	37[(-10+i1 == 0 /\ i6-i8 < 0)]
	12[(-13+i1 == 0 /\ i7 >= 0)]
	41[(-14+i1 == 0)]
	
	Blocked

	{}
	{38[T], 43[T], 45[T]}
	{44[T]}
	{}
	{}
	
Covered

	Trace

	42[(-1+i1 == 0)]
	37[(-10+i1 == 0 /\ i6-i8 < 0)]
	12[(-13+i1 == 0 /\ i7 >= 0)]
	
	Blocked

	{}
	{38[T], 43[T], 45[T]}
	{44[T]}
	{41[T]}
	
Step with 39

	Trace

	42[(-1+i1 == 0)]
	37[(-10+i1 == 0 /\ i6-i8 < 0)]
	12[(-13+i1 == 0 /\ i7 >= 0)]
	39[(-14+i1 == 0)]
	
	Blocked

	{}
	{38[T], 43[T], 45[T]}
	{44[T]}
	{41[T]}
	{}
	
Covered

	Trace

	42[(-1+i1 == 0)]
	37[(-10+i1 == 0 /\ i6-i8 < 0)]
	12[(-13+i1 == 0 /\ i7 >= 0)]
	
	Blocked

	{}
	{38[T], 43[T], 45[T]}
	{44[T]}
	{39[T], 41[T]}
	
Backtrack

	Trace

	42[(-1+i1 == 0)]
	37[(-10+i1 == 0 /\ i6-i8 < 0)]
	
	Blocked

	{}
	{38[T], 43[T], 45[T]}
	{12[T], 44[T]}
	
Backtrack

	Trace

	42[(-1+i1 == 0)]
	
	Blocked

	{}
	{37[T], 38[T], 43[T], 45[T]}
	
Backtrack

	Trace

	Blocked

	{42[T]}
	
Accept

Poly(n^2)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^2))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄
  Temp_Vars:  nondef_0, nondef_1
  Locations:  l0, l1, l10, l11, l12, l13, l14, l15, l16, l17, l18, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃, X₄) → l2(X₀, X₁, X₂, X₃, X₄)
  t₃: l1(X₀, X₁, X₂, X₃, X₄) → l4(X₀, X₁, X₂, X₃, X₄)
  t₆: l10(X₀, X₁, X₂, X₃, X₄) → l11(X₀, X₁, X₂, X₃, X₄)
  t₇: l11(X₀, X₁, X₂, X₃, X₄) → l12(X₀, X₁, X₂, X₃, X₄)
  t₈: l12(X₀, X₁, X₂, X₃, X₄) → l9(X₀, X₁, 1, X₃, X₄)
  t₁₁: l13(X₀, X₁, X₂, X₃, X₄) → l15(X₀, nondef_0, X₂, X₂-1, X₄)
  t₂₀: l14(X₀, X₁, X₂, X₃, X₄) → l18(X₀, X₁, X₂, X₃, X₄)
  t₁₂: l15(X₀, X₁, X₂, X₃, X₄) → l16(X₀, X₁, X₂, X₃, X₄) :|: 0 ≤ X₃
  t₁₃: l15(X₀, X₁, X₂, X₃, X₄) → l7(X₀, X₁, X₂, X₃, X₄) :|: 1+X₃ ≤ 0
  t₁₄: l16(X₀, X₁, X₂, X₃, X₄) → l17(X₀, X₁, X₂, X₃, X₄) :|: 1+X₁ ≤ nondef_1
  t₁₅: l16(X₀, X₁, X₂, X₃, X₄) → l7(X₀, X₁, X₂, X₃, X₄) :|: nondef_1 ≤ X₁
  t₁₆: l17(X₀, X₁, X₂, X₃, X₄) → l15(X₀, X₁, X₂, X₃-1, X₄)
  t₁: l2(X₀, X₁, X₂, X₃, X₄) → l3(X₀, X₁, X₂, X₃, X₄)
  t₂: l3(X₀, X₁, X₂, X₃, X₄) → l1(X₀, X₁, X₂, X₃, X₄)
  t₄: l4(X₀, X₁, X₂, X₃, X₄) → l5(X₀, X₁, X₂, X₃, X₄)
  t₅: l5(X₀, X₁, X₂, X₃, X₄) → l10(X₀, X₁, X₂, X₃, X₄)
  t₁₉: l6(X₀, X₁, X₂, X₃, X₄) → l9(X₀, X₁, X₀, X₃, X₄)
  t₁₇: l7(X₀, X₁, X₂, X₃, X₄) → l8(1+X₂, X₁, X₂, X₃, X₄)
  t₁₈: l8(X₀, X₁, X₂, X₃, X₄) → l6(X₀, X₁, X₂, X₃, X₄)
  t₉: l9(X₀, X₁, X₂, X₃, X₄) → l13(X₀, X₁, X₂, X₃, X₄) :|: 1+X₂ ≤ X₄
  t₁₀: l9(X₀, X₁, X₂, X₃, X₄) → l14(X₀, X₁, X₂, X₃, X₄) :|: X₄ ≤ X₂


Preprocessing
  Found invariant 2 ≤ X₄ ∧ 1 ≤ X₃+X₄ ∧ 2+X₃ ≤ X₄ ∧ 3 ≤ X₂+X₄ ∧ 1+X₂ ≤ X₄ ∧ 4 ≤ X₀+X₄ ∧ X₀ ≤ X₄ ∧ 1+X₃ ≤ X₂ ∧ 2+X₃ ≤ X₀ ∧ 0 ≤ 1+X₃ ∧ 0 ≤ X₂+X₃ ∧ 1 ≤ X₀+X₃ ∧ 1+X₂ ≤ X₀ ∧ 1 ≤ X₂ ∧ 3 ≤ X₀+X₂ ∧ X₀ ≤ 1+X₂ ∧ 2 ≤ X₀ for location l6


  Found invariant X₄ ≤ X₂ ∧ 1 ≤ X₂ for location l18


  Found invariant X₄ ≤ X₂ ∧ 1 ≤ X₂ for location l14


  Found invariant 2 ≤ X₄ ∧ 1 ≤ X₃+X₄ ∧ 2+X₃ ≤ X₄ ∧ 3 ≤ X₂+X₄ ∧ 1+X₂ ≤ X₄ ∧ 1+X₃ ≤ X₂ ∧ 0 ≤ 1+X₃ ∧ 0 ≤ X₂+X₃ ∧ 1 ≤ X₂ for location l15


  Found invariant 2 ≤ X₄ ∧ 2 ≤ X₃+X₄ ∧ 2+X₃ ≤ X₄ ∧ 3 ≤ X₂+X₄ ∧ 1+X₂ ≤ X₄ ∧ 1+X₃ ≤ X₂ ∧ 0 ≤ X₃ ∧ 1 ≤ X₂+X₃ ∧ 1 ≤ X₂ for location l17


  Found invariant 2 ≤ X₄ ∧ 1 ≤ X₃+X₄ ∧ 2+X₃ ≤ X₄ ∧ 3 ≤ X₂+X₄ ∧ 1+X₂ ≤ X₄ ∧ 1+X₃ ≤ X₂ ∧ 0 ≤ 1+X₃ ∧ 0 ≤ X₂+X₃ ∧ 1 ≤ X₂ for location l7


  Found invariant 2 ≤ X₄ ∧ 3 ≤ X₂+X₄ ∧ 1+X₂ ≤ X₄ ∧ 1 ≤ X₂ for location l13


  Found invariant 2 ≤ X₄ ∧ 1 ≤ X₃+X₄ ∧ 2+X₃ ≤ X₄ ∧ 3 ≤ X₂+X₄ ∧ 1+X₂ ≤ X₄ ∧ 4 ≤ X₀+X₄ ∧ X₀ ≤ X₄ ∧ 1+X₃ ≤ X₂ ∧ 2+X₃ ≤ X₀ ∧ 0 ≤ 1+X₃ ∧ 0 ≤ X₂+X₃ ∧ 1 ≤ X₀+X₃ ∧ 1+X₂ ≤ X₀ ∧ 1 ≤ X₂ ∧ 3 ≤ X₀+X₂ ∧ X₀ ≤ 1+X₂ ∧ 2 ≤ X₀ for location l8


  Found invariant 2 ≤ X₄ ∧ 2 ≤ X₃+X₄ ∧ 2+X₃ ≤ X₄ ∧ 3 ≤ X₂+X₄ ∧ 1+X₂ ≤ X₄ ∧ 1+X₃ ≤ X₂ ∧ 0 ≤ X₃ ∧ 1 ≤ X₂+X₃ ∧ 1 ≤ X₂ for location l16


  Found invariant 1 ≤ X₂ for location l9


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄
  Temp_Vars:  nondef_0, nondef_1
  Locations:  l0, l1, l10, l11, l12, l13, l14, l15, l16, l17, l18, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃, X₄) → l2(X₀, X₁, X₂, X₃, X₄)
  t₃: l1(X₀, X₁, X₂, X₃, X₄) → l4(X₀, X₁, X₂, X₃, X₄)
  t₆: l10(X₀, X₁, X₂, X₃, X₄) → l11(X₀, X₁, X₂, X₃, X₄)
  t₇: l11(X₀, X₁, X₂, X₃, X₄) → l12(X₀, X₁, X₂, X₃, X₄)
  t₈: l12(X₀, X₁, X₂, X₃, X₄) → l9(X₀, X₁, 1, X₃, X₄)
  t₁₁: l13(X₀, X₁, X₂, X₃, X₄) → l15(X₀, nondef_0, X₂, X₂-1, X₄) :|: 1 ≤ X₂ ∧ 1+X₂ ≤ X₄ ∧ 2 ≤ X₄ ∧ 3 ≤ X₂+X₄
  t₂₀: l14(X₀, X₁, X₂, X₃, X₄) → l18(X₀, X₁, X₂, X₃, X₄) :|: 1 ≤ X₂ ∧ X₄ ≤ X₂
  t₁₂: l15(X₀, X₁, X₂, X₃, X₄) → l16(X₀, X₁, X₂, X₃, X₄) :|: 0 ≤ X₃ ∧ 0 ≤ 1+X₃ ∧ 1 ≤ X₂ ∧ 1+X₃ ≤ X₂ ∧ 1+X₂ ≤ X₄ ∧ 1 ≤ X₃+X₄ ∧ 2+X₃ ≤ X₄ ∧ 2 ≤ X₄ ∧ 3 ≤ X₂+X₄ ∧ 0 ≤ X₂+X₃
  t₁₃: l15(X₀, X₁, X₂, X₃, X₄) → l7(X₀, X₁, X₂, X₃, X₄) :|: 1+X₃ ≤ 0 ∧ 0 ≤ 1+X₃ ∧ 1 ≤ X₂ ∧ 1+X₃ ≤ X₂ ∧ 1+X₂ ≤ X₄ ∧ 1 ≤ X₃+X₄ ∧ 2+X₃ ≤ X₄ ∧ 2 ≤ X₄ ∧ 3 ≤ X₂+X₄ ∧ 0 ≤ X₂+X₃
  t₁₄: l16(X₀, X₁, X₂, X₃, X₄) → l17(X₀, X₁, X₂, X₃, X₄) :|: 1+X₁ ≤ nondef_1 ∧ 1 ≤ X₂ ∧ 1 ≤ X₂+X₃ ∧ 1+X₃ ≤ X₂ ∧ 1+X₂ ≤ X₄ ∧ 2 ≤ X₃+X₄ ∧ 2+X₃ ≤ X₄ ∧ 2 ≤ X₄ ∧ 3 ≤ X₂+X₄ ∧ 0 ≤ X₃
  t₁₅: l16(X₀, X₁, X₂, X₃, X₄) → l7(X₀, X₁, X₂, X₃, X₄) :|: nondef_1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 1 ≤ X₂+X₃ ∧ 1+X₃ ≤ X₂ ∧ 1+X₂ ≤ X₄ ∧ 2 ≤ X₃+X₄ ∧ 2+X₃ ≤ X₄ ∧ 2 ≤ X₄ ∧ 3 ≤ X₂+X₄ ∧ 0 ≤ X₃
  t₁₆: l17(X₀, X₁, X₂, X₃, X₄) → l15(X₀, X₁, X₂, X₃-1, X₄) :|: 1 ≤ X₂ ∧ 1 ≤ X₂+X₃ ∧ 1+X₃ ≤ X₂ ∧ 1+X₂ ≤ X₄ ∧ 2 ≤ X₃+X₄ ∧ 2+X₃ ≤ X₄ ∧ 2 ≤ X₄ ∧ 3 ≤ X₂+X₄ ∧ 0 ≤ X₃
  t₁: l2(X₀, X₁, X₂, X₃, X₄) → l3(X₀, X₁, X₂, X₃, X₄)
  t₂: l3(X₀, X₁, X₂, X₃, X₄) → l1(X₀, X₁, X₂, X₃, X₄)
  t₄: l4(X₀, X₁, X₂, X₃, X₄) → l5(X₀, X₁, X₂, X₃, X₄)
  t₅: l5(X₀, X₁, X₂, X₃, X₄) → l10(X₀, X₁, X₂, X₃, X₄)
  t₁₉: l6(X₀, X₁, X₂, X₃, X₄) → l9(X₀, X₁, X₀, X₃, X₄) :|: X₀ ≤ 1+X₂ ∧ 0 ≤ 1+X₃ ∧ 1+X₂ ≤ X₀ ∧ 1 ≤ X₀+X₃ ∧ 1 ≤ X₂ ∧ 1+X₃ ≤ X₂ ∧ 1+X₂ ≤ X₄ ∧ 1 ≤ X₃+X₄ ∧ 2 ≤ X₀ ∧ 2+X₃ ≤ X₀ ∧ 2+X₃ ≤ X₄ ∧ 2 ≤ X₄ ∧ 3 ≤ X₀+X₂ ∧ 3 ≤ X₂+X₄ ∧ 4 ≤ X₀+X₄ ∧ X₀ ≤ X₄ ∧ 0 ≤ X₂+X₃
  t₁₇: l7(X₀, X₁, X₂, X₃, X₄) → l8(1+X₂, X₁, X₂, X₃, X₄) :|: 0 ≤ 1+X₃ ∧ 1 ≤ X₂ ∧ 1+X₃ ≤ X₂ ∧ 1+X₂ ≤ X₄ ∧ 1 ≤ X₃+X₄ ∧ 2+X₃ ≤ X₄ ∧ 2 ≤ X₄ ∧ 3 ≤ X₂+X₄ ∧ 0 ≤ X₂+X₃
  t₁₈: l8(X₀, X₁, X₂, X₃, X₄) → l6(X₀, X₁, X₂, X₃, X₄) :|: X₀ ≤ 1+X₂ ∧ 0 ≤ 1+X₃ ∧ 1+X₂ ≤ X₀ ∧ 1 ≤ X₀+X₃ ∧ 1 ≤ X₂ ∧ 1+X₃ ≤ X₂ ∧ 1+X₂ ≤ X₄ ∧ 1 ≤ X₃+X₄ ∧ 2 ≤ X₀ ∧ 2+X₃ ≤ X₀ ∧ 2+X₃ ≤ X₄ ∧ 2 ≤ X₄ ∧ 3 ≤ X₀+X₂ ∧ 3 ≤ X₂+X₄ ∧ 4 ≤ X₀+X₄ ∧ X₀ ≤ X₄ ∧ 0 ≤ X₂+X₃
  t₉: l9(X₀, X₁, X₂, X₃, X₄) → l13(X₀, X₁, X₂, X₃, X₄) :|: 1+X₂ ≤ X₄ ∧ 1 ≤ X₂
  t₁₀: l9(X₀, X₁, X₂, X₃, X₄) → l14(X₀, X₁, X₂, X₃, X₄) :|: X₄ ≤ X₂ ∧ 1 ≤ X₂


MPRF for transition t₉: l9(X₀, X₁, X₂, X₃, X₄) → l13(X₀, X₁, X₂, X₃, X₄) :|: 1+X₂ ≤ X₄ ∧ 1 ≤ X₂ of depth 1:
  new bound:
    X₄+1 {O(n)}

  MPRF:
    • l13: [X₄-1-X₂]
    • l15: [X₄-1-X₂]
    • l16: [X₄-1-X₂]
    • l17: [X₄-1-X₂]
    • l6: [X₄-X₀]
    • l7: [X₄-1-X₂]
    • l8: [X₄-X₀]
    • l9: [X₄-X₂]




MPRF for transition t₁₁: l13(X₀, X₁, X₂, X₃, X₄) → l15(X₀, nondef_0, X₂, X₂-1, X₄) :|: 1 ≤ X₂ ∧ 1+X₂ ≤ X₄ ∧ 2 ≤ X₄ ∧ 3 ≤ X₂+X₄ of depth 1:
  new bound:
    X₄+1 {O(n)}

  MPRF:
    • l13: [X₄-X₂]
    • l15: [X₄-1-X₂]
    • l16: [X₄-1-X₂]
    • l17: [X₄-1-X₂]
    • l6: [X₄-X₀]
    • l7: [X₄-1-X₂]
    • l8: [X₄-1-X₂]
    • l9: [X₄-X₂]




MPRF for transition t₁₃: l15(X₀, X₁, X₂, X₃, X₄) → l7(X₀, X₁, X₂, X₃, X₄) :|: 1+X₃ ≤ 0 ∧ 0 ≤ 1+X₃ ∧ 1 ≤ X₂ ∧ 1+X₃ ≤ X₂ ∧ 1+X₂ ≤ X₄ ∧ 1 ≤ X₃+X₄ ∧ 2+X₃ ≤ X₄ ∧ 2 ≤ X₄ ∧ 3 ≤ X₂+X₄ ∧ 0 ≤ X₂+X₃ of depth 1:
  new bound:
    X₄+1 {O(n)}

  MPRF:
    • l13: [X₄-X₂]
    • l15: [X₄-X₂]
    • l16: [X₄-X₂]
    • l17: [X₄-X₂]
    • l6: [X₄-1-X₂]
    • l7: [X₄-1-X₂]
    • l8: [X₄-1-X₂]
    • l9: [X₄-X₂]




MPRF for transition t₁₅: l16(X₀, X₁, X₂, X₃, X₄) → l7(X₀, X₁, X₂, X₃, X₄) :|: nondef_1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 1 ≤ X₂+X₃ ∧ 1+X₃ ≤ X₂ ∧ 1+X₂ ≤ X₄ ∧ 2 ≤ X₃+X₄ ∧ 2+X₃ ≤ X₄ ∧ 2 ≤ X₄ ∧ 3 ≤ X₂+X₄ ∧ 0 ≤ X₃ of depth 1:
  new bound:
    X₄+1 {O(n)}

  MPRF:
    • l13: [X₄-X₂]
    • l15: [X₄-X₂]
    • l16: [X₄-X₂]
    • l17: [X₄-X₂]
    • l6: [X₄-1-X₂]
    • l7: [X₄-1-X₂]
    • l8: [X₄-1-X₂]
    • l9: [X₄-X₂]




MPRF for transition t₁₇: l7(X₀, X₁, X₂, X₃, X₄) → l8(1+X₂, X₁, X₂, X₃, X₄) :|: 0 ≤ 1+X₃ ∧ 1 ≤ X₂ ∧ 1+X₃ ≤ X₂ ∧ 1+X₂ ≤ X₄ ∧ 1 ≤ X₃+X₄ ∧ 2+X₃ ≤ X₄ ∧ 2 ≤ X₄ ∧ 3 ≤ X₂+X₄ ∧ 0 ≤ X₂+X₃ of depth 1:
  new bound:
    X₄+1 {O(n)}

  MPRF:
    • l13: [X₄-X₂]
    • l15: [X₄-X₂]
    • l16: [X₄-X₂]
    • l17: [X₄-X₂]
    • l6: [X₄-X₀]
    • l7: [X₄-X₂]
    • l8: [X₄-1-X₂]
    • l9: [X₄-X₂]




MPRF for transition t₁₈: l8(X₀, X₁, X₂, X₃, X₄) → l6(X₀, X₁, X₂, X₃, X₄) :|: X₀ ≤ 1+X₂ ∧ 0 ≤ 1+X₃ ∧ 1+X₂ ≤ X₀ ∧ 1 ≤ X₀+X₃ ∧ 1 ≤ X₂ ∧ 1+X₃ ≤ X₂ ∧ 1+X₂ ≤ X₄ ∧ 1 ≤ X₃+X₄ ∧ 2 ≤ X₀ ∧ 2+X₃ ≤ X₀ ∧ 2+X₃ ≤ X₄ ∧ 2 ≤ X₄ ∧ 3 ≤ X₀+X₂ ∧ 3 ≤ X₂+X₄ ∧ 4 ≤ X₀+X₄ ∧ X₀ ≤ X₄ ∧ 0 ≤ X₂+X₃ of depth 1:
  new bound:
    X₄+1 {O(n)}

  MPRF:
    • l13: [X₄-X₂]
    • l15: [X₄-X₂]
    • l16: [X₄-X₂]
    • l17: [X₄-X₂]
    • l6: [X₄-1-X₂]
    • l7: [X₄-X₂]
    • l8: [X₄-X₂]
    • l9: [X₄-X₂]




MPRF for transition t₁₉: l6(X₀, X₁, X₂, X₃, X₄) → l9(X₀, X₁, X₀, X₃, X₄) :|: X₀ ≤ 1+X₂ ∧ 0 ≤ 1+X₃ ∧ 1+X₂ ≤ X₀ ∧ 1 ≤ X₀+X₃ ∧ 1 ≤ X₂ ∧ 1+X₃ ≤ X₂ ∧ 1+X₂ ≤ X₄ ∧ 1 ≤ X₃+X₄ ∧ 2 ≤ X₀ ∧ 2+X₃ ≤ X₀ ∧ 2+X₃ ≤ X₄ ∧ 2 ≤ X₄ ∧ 3 ≤ X₀+X₂ ∧ 3 ≤ X₂+X₄ ∧ 4 ≤ X₀+X₄ ∧ X₀ ≤ X₄ ∧ 0 ≤ X₂+X₃ of depth 1:
  new bound:
    X₄+1 {O(n)}

  MPRF:
    • l13: [X₄-X₂]
    • l15: [X₄-X₂]
    • l16: [X₄-X₂]
    • l17: [X₄-X₂]
    • l6: [1+X₄-X₀]
    • l7: [X₄-X₂]
    • l8: [X₄-X₂]
    • l9: [X₄-X₂]




MPRF for transition t₁₂: l15(X₀, X₁, X₂, X₃, X₄) → l16(X₀, X₁, X₂, X₃, X₄) :|: 0 ≤ X₃ ∧ 0 ≤ 1+X₃ ∧ 1 ≤ X₂ ∧ 1+X₃ ≤ X₂ ∧ 1+X₂ ≤ X₄ ∧ 1 ≤ X₃+X₄ ∧ 2+X₃ ≤ X₄ ∧ 2 ≤ X₄ ∧ 3 ≤ X₂+X₄ ∧ 0 ≤ X₂+X₃ of depth 1:
  new bound:
    X₄^2+3⋅X₄+3 {O(n^2)}

  MPRF:
    • l13: [X₂]
    • l15: [1+X₃]
    • l16: [X₃]
    • l17: [X₃]
    • l6: [X₃]
    • l7: [X₃]
    • l8: [X₃]
    • l9: [X₂]




MPRF for transition t₁₄: l16(X₀, X₁, X₂, X₃, X₄) → l17(X₀, X₁, X₂, X₃, X₄) :|: 1+X₁ ≤ nondef_1 ∧ 1 ≤ X₂ ∧ 1 ≤ X₂+X₃ ∧ 1+X₃ ≤ X₂ ∧ 1+X₂ ≤ X₄ ∧ 2 ≤ X₃+X₄ ∧ 2+X₃ ≤ X₄ ∧ 2 ≤ X₄ ∧ 3 ≤ X₂+X₄ ∧ 0 ≤ X₃ of depth 1:
  new bound:
    2⋅X₄^2+6⋅X₄+6 {O(n^2)}

  MPRF:
    • l13: [2⋅X₂]
    • l15: [X₂+X₃]
    • l16: [X₂+X₃]
    • l17: [X₂+X₃-1]
    • l6: [X₀+X₃-1]
    • l7: [X₂+X₃]
    • l8: [X₀+X₃-1]
    • l9: [2⋅X₂]




MPRF for transition t₁₆: l17(X₀, X₁, X₂, X₃, X₄) → l15(X₀, X₁, X₂, X₃-1, X₄) :|: 1 ≤ X₂ ∧ 1 ≤ X₂+X₃ ∧ 1+X₃ ≤ X₂ ∧ 1+X₂ ≤ X₄ ∧ 2 ≤ X₃+X₄ ∧ 2+X₃ ≤ X₄ ∧ 2 ≤ X₄ ∧ 3 ≤ X₂+X₄ ∧ 0 ≤ X₃ of depth 1:
  new bound:
    X₄^2+3⋅X₄+3 {O(n^2)}

  MPRF:
    • l13: [X₂]
    • l15: [1+X₃]
    • l16: [1+X₃]
    • l17: [1+X₃]
    • l6: [X₃]
    • l7: [X₃]
    • l8: [X₃]
    • l9: [X₂]




  Cut unreachable locations [l16] from the program graph


  Cut unsatisfiable transition [t₁₃: l15→l7; t₃₂₆: l15→l7]


  Found invariant 2 ≤ X₄ ∧ 1 ≤ X₃+X₄ ∧ 2+X₃ ≤ X₄ ∧ 3 ≤ X₂+X₄ ∧ 1+X₂ ≤ X₄ ∧ 4 ≤ X₀+X₄ ∧ X₀ ≤ X₄ ∧ 1+X₃ ≤ X₂ ∧ 2+X₃ ≤ X₀ ∧ 0 ≤ 1+X₃ ∧ 0 ≤ X₂+X₃ ∧ 1 ≤ X₀+X₃ ∧ 1+X₂ ≤ X₀ ∧ 1 ≤ X₂ ∧ 3 ≤ X₀+X₂ ∧ X₀ ≤ 1+X₂ ∧ 2 ≤ X₀ for location l6


  Found invariant 2 ≤ X₄ ∧ 1 ≤ X₃+X₄ ∧ 3+X₃ ≤ X₄ ∧ 3 ≤ X₂+X₄ ∧ 1+X₂ ≤ X₄ ∧ 2+X₃ ≤ X₂ ∧ 0 ≤ 1+X₃ ∧ 0 ≤ X₂+X₃ ∧ 1 ≤ X₂ for location l15_v1


  Found invariant 2 ≤ X₄ ∧ 2 ≤ X₃+X₄ ∧ 2+X₃ ≤ X₄ ∧ 3 ≤ X₂+X₄ ∧ 1+X₂ ≤ X₄ ∧ 1+X₃ ≤ X₂ ∧ 0 ≤ X₃ ∧ 1 ≤ X₂+X₃ ∧ X₂ ≤ 1+X₃ ∧ 1 ≤ X₂ for location l17_v1


  Found invariant 3 ≤ X₄ ∧ 3 ≤ X₃+X₄ ∧ 3+X₃ ≤ X₄ ∧ 5 ≤ X₂+X₄ ∧ 1+X₂ ≤ X₄ ∧ 2+X₃ ≤ X₂ ∧ 0 ≤ X₃ ∧ 2 ≤ X₂+X₃ ∧ 2 ≤ X₂ for location l17_v2


  Found invariant 3 ≤ X₄ ∧ 3 ≤ X₃+X₄ ∧ 3+X₃ ≤ X₄ ∧ 5 ≤ X₂+X₄ ∧ 1+X₂ ≤ X₄ ∧ 2+X₃ ≤ X₂ ∧ 0 ≤ X₃ ∧ 2 ≤ X₂+X₃ ∧ 2 ≤ X₂ for location l16_v2


  Found invariant X₄ ≤ X₂ ∧ 1 ≤ X₂ for location l18


  Found invariant X₄ ≤ X₂ ∧ 1 ≤ X₂ for location l14


  Found invariant 2 ≤ X₄ ∧ 2 ≤ X₃+X₄ ∧ 2+X₃ ≤ X₄ ∧ 3 ≤ X₂+X₄ ∧ 1+X₂ ≤ X₄ ∧ 1+X₃ ≤ X₂ ∧ 0 ≤ X₃ ∧ 1 ≤ X₂+X₃ ∧ X₂ ≤ 1+X₃ ∧ 1 ≤ X₂ for location l15


  Found invariant 2 ≤ X₄ ∧ 2 ≤ X₃+X₄ ∧ 2+X₃ ≤ X₄ ∧ 3 ≤ X₂+X₄ ∧ 1+X₂ ≤ X₄ ∧ 1+X₃ ≤ X₂ ∧ 0 ≤ X₃ ∧ 1 ≤ X₂+X₃ ∧ X₂ ≤ 1+X₃ ∧ 1 ≤ X₂ for location l16_v1


  Found invariant 2 ≤ X₄ ∧ 1 ≤ X₃+X₄ ∧ 2+X₃ ≤ X₄ ∧ 3 ≤ X₂+X₄ ∧ 1+X₂ ≤ X₄ ∧ 1+X₃ ≤ X₂ ∧ 0 ≤ 1+X₃ ∧ 0 ≤ X₂+X₃ ∧ 1 ≤ X₂ for location l7


  Found invariant 2 ≤ X₄ ∧ 3 ≤ X₂+X₄ ∧ 1+X₂ ≤ X₄ ∧ 1 ≤ X₂ for location l13


  Found invariant 2 ≤ X₄ ∧ 1 ≤ X₃+X₄ ∧ 2+X₃ ≤ X₄ ∧ 3 ≤ X₂+X₄ ∧ 1+X₂ ≤ X₄ ∧ 4 ≤ X₀+X₄ ∧ X₀ ≤ X₄ ∧ 1+X₃ ≤ X₂ ∧ 2+X₃ ≤ X₀ ∧ 0 ≤ 1+X₃ ∧ 0 ≤ X₂+X₃ ∧ 1 ≤ X₀+X₃ ∧ 1+X₂ ≤ X₀ ∧ 1 ≤ X₂ ∧ 3 ≤ X₀+X₂ ∧ X₀ ≤ 1+X₂ ∧ 2 ≤ X₀ for location l8


  Found invariant 1 ≤ X₂ for location l9


All Bounds
Timebounds
  Overall timebound:4⋅X₄^2+19⋅X₄+30 {O(n^2)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: 1 {O(1)}
    t₈: 1 {O(1)}
    t₉: X₄+1 {O(n)}
    t₁₀: 1 {O(1)}
    t₁₁: X₄+1 {O(n)}
    t₁₂: X₄^2+3⋅X₄+3 {O(n^2)}
    t₁₃: X₄+1 {O(n)}
    t₁₄: 2⋅X₄^2+6⋅X₄+6 {O(n^2)}
    t₁₅: X₄+1 {O(n)}
    t₁₆: X₄^2+3⋅X₄+3 {O(n^2)}
    t₁₇: X₄+1 {O(n)}
    t₁₈: X₄+1 {O(n)}
    t₁₉: X₄+1 {O(n)}
    t₂₀: 1 {O(1)}


Costbounds
  Overall costbound: 4⋅X₄^2+19⋅X₄+30 {O(n^2)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: 1 {O(1)}
    t₈: 1 {O(1)}
    t₉: X₄+1 {O(n)}
    t₁₀: 1 {O(1)}
    t₁₁: X₄+1 {O(n)}
    t₁₂: X₄^2+3⋅X₄+3 {O(n^2)}
    t₁₃: X₄+1 {O(n)}
    t₁₄: 2⋅X₄^2+6⋅X₄+6 {O(n^2)}
    t₁₅: X₄+1 {O(n)}
    t₁₆: X₄^2+3⋅X₄+3 {O(n^2)}
    t₁₇: X₄+1 {O(n)}
    t₁₈: X₄+1 {O(n)}
    t₁₉: X₄+1 {O(n)}
    t₂₀: 1 {O(1)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₀, X₂: X₂ {O(n)}
    t₀, X₃: X₃ {O(n)}
    t₀, X₄: X₄ {O(n)}
    t₁, X₀: X₀ {O(n)}
    t₁, X₁: X₁ {O(n)}
    t₁, X₂: X₂ {O(n)}
    t₁, X₃: X₃ {O(n)}
    t₁, X₄: X₄ {O(n)}
    t₂, X₀: X₀ {O(n)}
    t₂, X₁: X₁ {O(n)}
    t₂, X₂: X₂ {O(n)}
    t₂, X₃: X₃ {O(n)}
    t₂, X₄: X₄ {O(n)}
    t₃, X₀: X₀ {O(n)}
    t₃, X₁: X₁ {O(n)}
    t₃, X₂: X₂ {O(n)}
    t₃, X₃: X₃ {O(n)}
    t₃, X₄: X₄ {O(n)}
    t₄, X₀: X₀ {O(n)}
    t₄, X₁: X₁ {O(n)}
    t₄, X₂: X₂ {O(n)}
    t₄, X₃: X₃ {O(n)}
    t₄, X₄: X₄ {O(n)}
    t₅, X₀: X₀ {O(n)}
    t₅, X₁: X₁ {O(n)}
    t₅, X₂: X₂ {O(n)}
    t₅, X₃: X₃ {O(n)}
    t₅, X₄: X₄ {O(n)}
    t₆, X₀: X₀ {O(n)}
    t₆, X₁: X₁ {O(n)}
    t₆, X₂: X₂ {O(n)}
    t₆, X₃: X₃ {O(n)}
    t₆, X₄: X₄ {O(n)}
    t₇, X₀: X₀ {O(n)}
    t₇, X₁: X₁ {O(n)}
    t₇, X₂: X₂ {O(n)}
    t₇, X₃: X₃ {O(n)}
    t₇, X₄: X₄ {O(n)}
    t₈, X₀: X₀ {O(n)}
    t₈, X₁: X₁ {O(n)}
    t₈, X₂: 1 {O(1)}
    t₈, X₃: X₃ {O(n)}
    t₈, X₄: X₄ {O(n)}
    t₉, X₀: X₀+X₄+2 {O(n)}
    t₉, X₂: X₄+2 {O(n)}
    t₉, X₃: X₃+X₄+5 {O(n)}
    t₉, X₄: X₄ {O(n)}
    t₁₀, X₀: X₀+X₄+2 {O(n)}
    t₁₀, X₂: X₄+3 {O(n)}
    t₁₀, X₃: X₃+X₄+5 {O(n)}
    t₁₀, X₄: 2⋅X₄ {O(n)}
    t₁₁, X₀: X₀+X₄+2 {O(n)}
    t₁₁, X₂: X₄+2 {O(n)}
    t₁₁, X₃: X₄+2 {O(n)}
    t₁₁, X₄: X₄ {O(n)}
    t₁₂, X₀: X₀+X₄+2 {O(n)}
    t₁₂, X₂: X₄+2 {O(n)}
    t₁₂, X₃: X₄+4 {O(n)}
    t₁₂, X₄: X₄ {O(n)}
    t₁₃, X₀: X₀+X₄+2 {O(n)}
    t₁₃, X₂: X₄+2 {O(n)}
    t₁₃, X₃: 1 {O(1)}
    t₁₃, X₄: X₄ {O(n)}
    t₁₄, X₀: X₀+X₄+2 {O(n)}
    t₁₄, X₂: X₄+2 {O(n)}
    t₁₄, X₃: X₄+4 {O(n)}
    t₁₄, X₄: X₄ {O(n)}
    t₁₅, X₀: X₀+X₄+2 {O(n)}
    t₁₅, X₂: X₄+2 {O(n)}
    t₁₅, X₃: X₄+4 {O(n)}
    t₁₅, X₄: X₄ {O(n)}
    t₁₆, X₀: X₀+X₄+2 {O(n)}
    t₁₆, X₂: X₄+2 {O(n)}
    t₁₆, X₃: X₄+4 {O(n)}
    t₁₆, X₄: X₄ {O(n)}
    t₁₇, X₀: X₄+2 {O(n)}
    t₁₇, X₂: 2⋅X₄+4 {O(n)}
    t₁₇, X₃: X₄+5 {O(n)}
    t₁₇, X₄: X₄ {O(n)}
    t₁₈, X₀: X₄+2 {O(n)}
    t₁₈, X₂: 2⋅X₄+4 {O(n)}
    t₁₈, X₃: X₄+5 {O(n)}
    t₁₈, X₄: X₄ {O(n)}
    t₁₉, X₀: X₄+2 {O(n)}
    t₁₉, X₂: X₄+2 {O(n)}
    t₁₉, X₃: X₄+5 {O(n)}
    t₁₉, X₄: X₄ {O(n)}
    t₂₀, X₀: X₀+X₄+2 {O(n)}
    t₂₀, X₂: X₄+3 {O(n)}
    t₂₀, X₃: X₃+X₄+5 {O(n)}
    t₂₀, X₄: 2⋅X₄ {O(n)}

