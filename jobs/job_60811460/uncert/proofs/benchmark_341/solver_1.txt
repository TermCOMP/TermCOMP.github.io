WORST_CASE(?,O(1))

# LoAT Proof:
Initial ITS

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f8 -> 2
f19 -> 3
f28 -> 4
f36 -> 5

Rules:
   0: (-2+i1 == 0 /\ i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4
   1: (-3+i1 == 0 /\ i5 >= 0) /\ i1'=3, i3'=1+i3, i5'=-1+i5
   2: (i6 >= 0 /\ -4+i1 == 0) /\ i1'=4, i3'=1+i3, i6'=-1+i6
   3: (-1-i6 >= 0 /\ -4+i1 == 0) /\ i1'=5, i3'=1+i3
   4: (-3+i1 == 0 /\ -1-i5 >= 0) /\ i1'=4, i3'=1+i3, i6'=999
   5: -1+i1 == 0 /\ i1'=3, i3'=1+i3, i5'=999, i7'=1
   6: (-2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=3, i3'=1+i3, i5'=999

Dependency graph:
0 -> 0, 0 -> 6
1 -> 1, 1 -> 4
2 -> 2, 2 -> 3
4 -> 2, 4 -> 3
5 -> 1, 5 -> 4
6 -> 1, 6 -> 4

Refined Dependency Graph

	Removed the following edges: 4 -> 3, 5 -> 4, 6 -> 4

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f8 -> 2
f19 -> 3
f28 -> 4
f36 -> 5

Rules:
   0: (-2+i1 == 0 /\ i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4
   1: (-3+i1 == 0 /\ i5 >= 0) /\ i1'=3, i3'=1+i3, i5'=-1+i5
   2: (i6 >= 0 /\ -4+i1 == 0) /\ i1'=4, i3'=1+i3, i6'=-1+i6
   3: (-1-i6 >= 0 /\ -4+i1 == 0) /\ i1'=5, i3'=1+i3
   4: (-3+i1 == 0 /\ -1-i5 >= 0) /\ i1'=4, i3'=1+i3, i6'=999
   5: -1+i1 == 0 /\ i1'=3, i3'=1+i3, i5'=999, i7'=1
   6: (-2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=3, i3'=1+i3, i5'=999

Dependency graph:
0 -> 0, 0 -> 6
1 -> 1, 1 -> 4
2 -> 2, 2 -> 3
4 -> 2
5 -> 1
6 -> 1

Step with 5

	Trace

	5[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 1

	Trace

	5[(-1+i1 == 0)]
	1[(-3+i1 == 0 /\ i5 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Accelerate

	Loop Acceleration

	Original rule:
	(-3+i1 == 0 /\ i5 >= 0) /\ i1'=3, i3'=1+i3, i5'=-1+i5
	New rule:
	(-3+i1 >= 0 /\ -1+it13 >= 0 /\ 1-it13+i5 >= 0 /\ 3-i1 >= 0) /\ i1'=i1, i3'=i3+it13, i5'=-it13+i5

		-3+i1 >= 0 [0]: unchanged
		
		3-i1 >= 0 [0]: unchanged
		
		i5 >= 0 [0]: montonic decrease yields 1-it13+i5 >= 0
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, 3-i1 >= 0 -> 3-i1 >= 0, i5 >= 0 -> 1-it13+i5 >= 0}

	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ -1+it13 >= 0 /\ 1-it13+i5 >= 0 /\ 3-i1 >= 0) /\ i1'=i1, i3'=i3+it13, i5'=-it13+i5
	New rule:
	(-3+i1 >= 0 /\ -1+it13 >= 0 /\ 1-it13+i5 >= 0 /\ 3-i1 >= 0) /\ i3'=i3+it13, i5'=-it13+i5
	
	Instantiation

	Original rule:
	(-3+i1 >= 0 /\ -1+it13 >= 0 /\ 1-it13+i5 >= 0 /\ 3-i1 >= 0) /\ i3'=i3+it13, i5'=-it13+i5
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ i5 >= 0) /\ i3'=1+i3+i5, i5'=-1

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f8 -> 2
f19 -> 3
f28 -> 4
f36 -> 5

Rules:
   0: (-2+i1 == 0 /\ i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4
   1: (-3+i1 == 0 /\ i5 >= 0) /\ i1'=3, i3'=1+i3, i5'=-1+i5
   2: (i6 >= 0 /\ -4+i1 == 0) /\ i1'=4, i3'=1+i3, i6'=-1+i6
   3: (-1-i6 >= 0 /\ -4+i1 == 0) /\ i1'=5, i3'=1+i3
   4: (-3+i1 == 0 /\ -1-i5 >= 0) /\ i1'=4, i3'=1+i3, i6'=999
   5: -1+i1 == 0 /\ i1'=3, i3'=1+i3, i5'=999, i7'=1
   6: (-2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=3, i3'=1+i3, i5'=999
   7: (0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ i5 >= 0) /\ i3'=1+i3+i5, i5'=-1

Dependency graph:
0 -> 0, 0 -> 6
1 -> 1, 1 -> 4, 1 -> 7
2 -> 2, 2 -> 3
4 -> 2
5 -> 1, 5 -> 7
6 -> 1, 6 -> 7
7 -> 1, 7 -> 4

	Trace

	5[(-1+i1 == 0)]
	7[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ i5 >= 0)]
	
	Blocked

	{}
	{}
	{1[T], 7[T]}
	
Step with 4

	Trace

	5[(-1+i1 == 0)]
	7[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ i5 >= 0)]
	4[(-3+i1 == 0 /\ -1-i5 >= 0)]
	
	Blocked

	{}
	{}
	{1[T], 7[T]}
	{}
	
Step with 2

	Trace

	5[(-1+i1 == 0)]
	7[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ i5 >= 0)]
	4[(-3+i1 == 0 /\ -1-i5 >= 0)]
	2[(i6 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{}
	{1[T], 7[T]}
	{}
	{}
	
Accelerate

	Loop Acceleration

	Original rule:
	(i6 >= 0 /\ -4+i1 == 0) /\ i1'=4, i3'=1+i3, i6'=-1+i6
	New rule:
	(1+i6-it32 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+it32 >= 0) /\ i1'=i1, i3'=i3+it32, i6'=i6-it32

		i6 >= 0 [0]: montonic decrease yields 1+i6-it32 >= 0
		
		-4+i1 >= 0 [0]: unchanged
		
		4-i1 >= 0 [0]: unchanged
		
		Replacement map: {i6 >= 0 -> 1+i6-it32 >= 0, -4+i1 >= 0 -> -4+i1 >= 0, 4-i1 >= 0 -> 4-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(1+i6-it32 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+it32 >= 0) /\ i1'=i1, i3'=i3+it32, i6'=i6-it32
	New rule:
	(1+i6-it32 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+it32 >= 0) /\ i3'=i3+it32, i6'=i6-it32
	
	Instantiation

	Original rule:
	(1+i6-it32 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+it32 >= 0) /\ i3'=i3+it32, i6'=i6-it32
	New rule:
	(0 >= 0 /\ i6 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0) /\ i3'=1+i6+i3, i6'=-1

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f8 -> 2
f19 -> 3
f28 -> 4
f36 -> 5

Rules:
   0: (-2+i1 == 0 /\ i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4
   1: (-3+i1 == 0 /\ i5 >= 0) /\ i1'=3, i3'=1+i3, i5'=-1+i5
   2: (i6 >= 0 /\ -4+i1 == 0) /\ i1'=4, i3'=1+i3, i6'=-1+i6
   3: (-1-i6 >= 0 /\ -4+i1 == 0) /\ i1'=5, i3'=1+i3
   4: (-3+i1 == 0 /\ -1-i5 >= 0) /\ i1'=4, i3'=1+i3, i6'=999
   5: -1+i1 == 0 /\ i1'=3, i3'=1+i3, i5'=999, i7'=1
   6: (-2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=3, i3'=1+i3, i5'=999
   7: (0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ i5 >= 0) /\ i3'=1+i3+i5, i5'=-1
   8: (0 >= 0 /\ i6 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0) /\ i3'=1+i6+i3, i6'=-1

Dependency graph:
0 -> 0, 0 -> 6
1 -> 1, 1 -> 4, 1 -> 7
2 -> 2, 2 -> 3, 2 -> 8
4 -> 2, 4 -> 8
5 -> 1, 5 -> 7
6 -> 1, 6 -> 7
7 -> 1, 7 -> 4
8 -> 2, 8 -> 3

	Trace

	5[(-1+i1 == 0)]
	7[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ i5 >= 0)]
	4[(-3+i1 == 0 /\ -1-i5 >= 0)]
	8[(0 >= 0 /\ i6 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0)]
	
	Blocked

	{}
	{}
	{1[T], 7[T]}
	{}
	{2[T], 8[T]}
	
Step with 3

	Trace

	5[(-1+i1 == 0)]
	7[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ i5 >= 0)]
	4[(-3+i1 == 0 /\ -1-i5 >= 0)]
	8[(0 >= 0 /\ i6 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0)]
	3[(-1-i6 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{}
	{1[T], 7[T]}
	{}
	{2[T], 8[T]}
	{}
	
Backtrack

	Trace

	5[(-1+i1 == 0)]
	7[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ i5 >= 0)]
	4[(-3+i1 == 0 /\ -1-i5 >= 0)]
	8[(0 >= 0 /\ i6 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0)]
	
	Blocked

	{}
	{}
	{1[T], 7[T]}
	{}
	{2[T], 3[T], 8[T]}
	
Backtrack

	Trace

	5[(-1+i1 == 0)]
	7[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ i5 >= 0)]
	4[(-3+i1 == 0 /\ -1-i5 >= 0)]
	
	Blocked

	{}
	{}
	{1[T], 7[T]}
	{8[T]}
	
Step with 2

	Trace

	5[(-1+i1 == 0)]
	7[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ i5 >= 0)]
	4[(-3+i1 == 0 /\ -1-i5 >= 0)]
	2[(i6 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{}
	{1[T], 7[T]}
	{8[T]}
	{}
	
Covered

	Trace

	5[(-1+i1 == 0)]
	7[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ i5 >= 0)]
	4[(-3+i1 == 0 /\ -1-i5 >= 0)]
	
	Blocked

	{}
	{}
	{1[T], 7[T]}
	{2[T], 8[T]}
	
Backtrack

	Trace

	5[(-1+i1 == 0)]
	7[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ i5 >= 0)]
	
	Blocked

	{}
	{}
	{1[T], 4[T], 7[T]}
	
Backtrack

	Trace

	5[(-1+i1 == 0)]
	
	Blocked

	{}
	{7[T]}
	
Step with 1

	Trace

	5[(-1+i1 == 0)]
	1[(-3+i1 == 0 /\ i5 >= 0)]
	
	Blocked

	{}
	{7[T]}
	{}
	
Covered

	Trace

	5[(-1+i1 == 0)]
	
	Blocked

	{}
	{1[T], 7[T]}
	
Backtrack

	Trace

	Blocked

	{5[T]}
	
Accept

Constant


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃
  Temp_Vars:  
  Locations:  l0, l1, l2, l3, l4
  Return Locations:  
  Transitions:
  t₅: l0(X₀, X₁, X₂, X₃) → l1(X₀, 999, X₂, 1)
  t₁: l1(X₀, X₁, X₂, X₃) → l1(X₀, X₁-1, X₂, X₃) :|: 0 ≤ X₁
  t₄: l1(X₀, X₁, X₂, X₃) → l2(X₀, X₁, 999, X₃) :|: 1+X₁ ≤ 0
  t₂: l2(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂-1, X₃) :|: 0 ≤ X₂
  t₃: l2(X₀, X₁, X₂, X₃) → l4(X₀, X₁, X₂, X₃) :|: 1+X₂ ≤ 0
  t₆: l3(X₀, X₁, X₂, X₃) → l1(X₀, 999, X₂, X₃) :|: 1+X₀ ≤ 0
  t₀: l3(X₀, X₁, X₂, X₃) → l3(X₀-1, X₁, X₂, X₃) :|: 0 ≤ X₀


Preprocessing
  Cut unreachable locations [l3] from the program graph


  Eliminate variables [X₀; X₃] that do not contribute to the problem


  Found invariant X₀ ≤ 999 ∧ 0 ≤ 1+X₀ for location l1


  Found invariant X₁ ≤ 999 ∧ X₁ ≤ 1000+X₀ ∧ X₀+X₁ ≤ 998 ∧ 0 ≤ 1+X₁ ∧ 0 ≤ 2+X₀+X₁ ∧ X₀ ≤ X₁ ∧ 1+X₀ ≤ 0 ∧ 0 ≤ 1+X₀ for location l2


  Found invariant 1+X₁ ≤ 0 ∧ X₁ ≤ X₀ ∧ 2+X₀+X₁ ≤ 0 ∧ 0 ≤ 1+X₁ ∧ 0 ≤ 2+X₀+X₁ ∧ X₀ ≤ X₁ ∧ 1+X₀ ≤ 0 ∧ 0 ≤ 1+X₀ for location l4


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁
  Temp_Vars:  
  Locations:  l0, l1, l2, l4
  Return Locations:  
  Transitions:
  t₇: l0(X₀, X₁) → l1(999, X₁)
  t₈: l1(X₀, X₁) → l1(X₀-1, X₁) :|: 0 ≤ X₀ ∧ X₀ ≤ 999 ∧ 0 ≤ 1+X₀
  t₉: l1(X₀, X₁) → l2(X₀, 999) :|: 1+X₀ ≤ 0 ∧ X₀ ≤ 999 ∧ 0 ≤ 1+X₀
  t₁₀: l2(X₀, X₁) → l2(X₀, X₁-1) :|: 0 ≤ X₁ ∧ X₁ ≤ 1000+X₀ ∧ X₁ ≤ 999 ∧ X₀+X₁ ≤ 998 ∧ 0 ≤ 2+X₀+X₁ ∧ 0 ≤ 1+X₀ ∧ 0 ≤ 1+X₁ ∧ 1+X₀ ≤ 0 ∧ X₀ ≤ X₁
  t₁₁: l2(X₀, X₁) → l4(X₀, X₁) :|: 1+X₁ ≤ 0 ∧ X₁ ≤ 1000+X₀ ∧ X₁ ≤ 999 ∧ X₀+X₁ ≤ 998 ∧ 0 ≤ 2+X₀+X₁ ∧ 0 ≤ 1+X₀ ∧ 0 ≤ 1+X₁ ∧ 1+X₀ ≤ 0 ∧ X₀ ≤ X₁


MPRF for transition t₈: l1(X₀, X₁) → l1(X₀-1, X₁) :|: 0 ≤ X₀ ∧ X₀ ≤ 999 ∧ 0 ≤ 1+X₀ of depth 1:
  new bound:
    1000 {O(1)}

  MPRF:
    • l1: [1+X₀]




MPRF for transition t₁₀: l2(X₀, X₁) → l2(X₀, X₁-1) :|: 0 ≤ X₁ ∧ X₁ ≤ 1000+X₀ ∧ X₁ ≤ 999 ∧ X₀+X₁ ≤ 998 ∧ 0 ≤ 2+X₀+X₁ ∧ 0 ≤ 1+X₀ ∧ 0 ≤ 1+X₁ ∧ 1+X₀ ≤ 0 ∧ X₀ ≤ X₁ of depth 1:
  new bound:
    1000 {O(1)}

  MPRF:
    • l2: [1+X₁]




All Bounds
Timebounds
  Overall timebound:2003 {O(1)}
    t₇: 1 {O(1)}
    t₈: 1000 {O(1)}
    t₉: 1 {O(1)}
    t₁₀: 1000 {O(1)}
    t₁₁: 1 {O(1)}


Costbounds
  Overall costbound: 2003 {O(1)}
    t₇: 1 {O(1)}
    t₈: 1000 {O(1)}
    t₉: 1 {O(1)}
    t₁₀: 1000 {O(1)}
    t₁₁: 1 {O(1)}


Sizebounds
    t₇, X₀: 999 {O(1)}
    t₇, X₁: X₁ {O(n)}
    t₈, X₀: 998 {O(1)}
    t₈, X₁: X₁ {O(n)}
    t₉, X₀: 1 {O(1)}
    t₉, X₁: 999 {O(1)}
    t₁₀, X₀: 1 {O(1)}
    t₁₀, X₁: 998 {O(1)}
    t₁₁, X₀: 1 {O(1)}
    t₁₁, X₁: 1 {O(1)}

