MAYBE
WARNING: Excluded non-linear constraints:[J=B+C*C]

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_aaron12_10/9,eval_aaron12_9/9,eval_aaron12_bb1_in/9,eval_aaron12_bb2_in/9,eval_aaron12_bb3_in/9,eval_aaron12_bb4_in/9]
1. non_recursive  : [eval_aaron12_stop/8]
2. non_recursive  : [eval_aaron12_bb5_in/8]
3. non_recursive  : [exit_location/1]
4. non_recursive  : [eval_aaron12_bb1_in_loop_cont/9]
5. non_recursive  : [eval_aaron12_8/8]
6. non_recursive  : [eval_aaron12_7/8]
7. non_recursive  : [eval_aaron12_6/8]
8. non_recursive  : [eval_aaron12_5/8]
9. non_recursive  : [eval_aaron12_4/8]
10. non_recursive  : [eval_aaron12_3/8]
11. non_recursive  : [eval_aaron12_2/8]
12. non_recursive  : [eval_aaron12_1/8]
13. non_recursive  : [eval_aaron12_0/8]
14. non_recursive  : [eval_aaron12_bb0_in/8]
15. non_recursive  : [eval_aaron12_start/8]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_aaron12_bb1_in/9
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into eval_aaron12_bb1_in_loop_cont/9
5. SCC is partially evaluated into eval_aaron12_8/8
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is partially evaluated into eval_aaron12_start/8

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_aaron12_bb1_in/9 
* CE 6 is refined into CE [9] 
* CE 5 is refined into CE [10] 
* CE 4 is refined into CE [11] 
* CE 3 is refined into CE [12] 


### Cost equations --> "Loop" of eval_aaron12_bb1_in/9 
* CEs [11] --> Loop 9 
* CEs [12] --> Loop 10 
* CEs [9] --> Loop 11 
* CEs [10] --> Loop 12 

### Ranking functions of CR eval_aaron12_bb1_in(V__0,V__01,V__03,V_1,B,C,D,E,F) 

#### Partial ranking functions of CR eval_aaron12_bb1_in(V__0,V__01,V__03,V_1,B,C,D,E,F) 


### Specialization of cost equations eval_aaron12_bb1_in_loop_cont/9 
* CE 8 is refined into CE [13] 
* CE 7 is refined into CE [14] 


### Cost equations --> "Loop" of eval_aaron12_bb1_in_loop_cont/9 
* CEs [13] --> Loop 13 
* CEs [14] --> Loop 14 

### Ranking functions of CR eval_aaron12_bb1_in_loop_cont(A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR eval_aaron12_bb1_in_loop_cont(A,B,C,D,E,F,G,H,I) 


### Specialization of cost equations eval_aaron12_8/8 
* CE 2 is refined into CE [15,16,17,18,19,20] 


### Cost equations --> "Loop" of eval_aaron12_8/8 
* CEs [19,20] --> Loop 15 
* CEs [16,18] --> Loop 16 
* CEs [15] --> Loop 17 
* CEs [17] --> Loop 18 

### Ranking functions of CR eval_aaron12_8(V__0,V__01,V__03,V_1,V_x,V_y,V_z,B) 

#### Partial ranking functions of CR eval_aaron12_8(V__0,V__01,V__03,V_1,V_x,V_y,V_z,B) 


### Specialization of cost equations eval_aaron12_start/8 
* CE 1 is refined into CE [21,22,23,24] 


### Cost equations --> "Loop" of eval_aaron12_start/8 
* CEs [24] --> Loop 19 
* CEs [23] --> Loop 20 
* CEs [22] --> Loop 21 
* CEs [21] --> Loop 22 

### Ranking functions of CR eval_aaron12_start(V__0,V__01,V__03,V_1,V_x,V_y,V_z,B) 

#### Partial ranking functions of CR eval_aaron12_start(V__0,V__01,V__03,V_1,V_x,V_y,V_z,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_aaron12_bb1_in(V__0,V__01,V__03,V_1,B,C,D,E,F):
* Chain [[9,10]]...: 2*it(9)+0
  with precondition: [V__0>=V__01] 

* Chain [[9,10],12]: 2*it(9)+0
  with precondition: [B=2,V__0>=V__01,D>=C+1,V__03>=E] 

* Chain [[9,10],11]: 2*it(9)+0
  with precondition: [B=3,V__0>=V__01] 

* Chain [12]: 0
  with precondition: [B=2,E=V__03,F=V_1,V__0=C,V__01=D,V__01>=V__0+1] 

* Chain [11]: 0
  with precondition: [B=3] 


#### Cost of chains of eval_aaron12_bb1_in_loop_cont(A,B,C,D,E,F,G,H,I):
* Chain [14]: 0
  with precondition: [A=2] 

* Chain [13]: 0
  with precondition: [A=3] 


#### Cost of chains of eval_aaron12_8(V__0,V__01,V__03,V_1,V_x,V_y,V_z,B):
* Chain [18]: 0
  with precondition: [] 

* Chain [17]: 0
  with precondition: [V_y>=V_x+1] 

* Chain [16]: 1*aux(1)+0
  with precondition: [V_x>=V_y] 

* Chain [15]...: 1*aux(2)+0
  with precondition: [V_x>=V_y] 


#### Cost of chains of eval_aaron12_start(V__0,V__01,V__03,V_1,V_x,V_y,V_z,B):
* Chain [22]: 0
  with precondition: [] 

* Chain [21]: 0
  with precondition: [V_y>=V_x+1] 

* Chain [20]: 1*s(5)+0
  with precondition: [V_x>=V_y] 

* Chain [19]...: 1*s(6)+0
  with precondition: [V_x>=V_y] 


Closed-form bounds of eval_aaron12_start(V__0,V__01,V__03,V_1,V_x,V_y,V_z,B): 
-------------------------------------
* Chain [22] with precondition: [] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [21] with precondition: [V_y>=V_x+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [20] with precondition: [V_x>=V_y] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [19]... with precondition: [V_x>=V_y] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_aaron12_start(V__0,V__01,V__03,V_1,V_x,V_y,V_z,B): inf 
Asymptotic class: infinity 
* Total analysis performed in 72 ms.

