WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [stop/5]
1. non_recursive  : [cut/5]
2. recursive  : [lbl111/9]
3. recursive  : [lbl101/9,lbl111_loop_cont/10]
4. non_recursive  : [exit_location/1]
5. non_recursive  : [lbl101_loop_cont/6]
6. non_recursive  : [lbl6/5]
7. non_recursive  : [start/5]
8. non_recursive  : [start0/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into lbl111/9
3. SCC is partially evaluated into lbl101/9
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into lbl101_loop_cont/6
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into start/5
8. SCC is partially evaluated into start0/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations lbl111/9 
* CE 12 is refined into CE [21] 
* CE 10 is refined into CE [22] 
* CE 9 is refined into CE [23] 
* CE 11 is refined into CE [24] 


### Cost equations --> "Loop" of lbl111/9 
* CEs [24] --> Loop 19 
* CEs [21] --> Loop 20 
* CEs [22] --> Loop 21 
* CEs [23] --> Loop 22 

### Ranking functions of CR lbl111(A,B,C,D,E,F,G,H,I) 
* RF of phase [19]: [-B+D,D-1]

#### Partial ranking functions of CR lbl111(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [19]:
  - RF of loop [19:1]:
    -B+D
    D-1


### Specialization of cost equations lbl101/9 
* CE 15 is refined into CE [25,26] 
* CE 20 is refined into CE [27] 
* CE 17 is refined into CE [28,29] 
* CE 18 is refined into CE [30] 
* CE 16 is refined into CE [31,32] 
* CE 19 is refined into CE [33] 


### Cost equations --> "Loop" of lbl101/9 
* CEs [32] --> Loop 23 
* CEs [31] --> Loop 24 
* CEs [33] --> Loop 25 
* CEs [25] --> Loop 26 
* CEs [26] --> Loop 27 
* CEs [27] --> Loop 28 
* CEs [29] --> Loop 29 
* CEs [28] --> Loop 30 
* CEs [30] --> Loop 31 

### Ranking functions of CR lbl101(A,B,C,D,E,F,G,H,I) 
* RF of phase [23,24,25]: [B-1]

#### Partial ranking functions of CR lbl101(A,B,C,D,E,F,G,H,I) 
* Partial RF of phase [23,24,25]:
  - RF of loop [23:1]:
    -B+D/2 depends on loops [24:1,25:1] 
    D/4-1
  - RF of loop [23:1,24:1,25:1]:
    B-1
  - RF of loop [24:1]:
    -B+D depends on loops [25:1] 
    D/2-1
  - RF of loop [25:1]:
    B-D depends on loops [23:1,24:1] 


### Specialization of cost equations lbl101_loop_cont/6 
* CE 14 is refined into CE [34] 
* CE 13 is refined into CE [35] 


### Cost equations --> "Loop" of lbl101_loop_cont/6 
* CEs [34] --> Loop 32 
* CEs [35] --> Loop 33 

### Ranking functions of CR lbl101_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR lbl101_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations start/5 
* CE 2 is refined into CE [36,37] 
* CE 3 is refined into CE [38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61] 
* CE 4 is refined into CE [62,63] 
* CE 8 is refined into CE [64,65,66,67,68,69,70,71,72,73,74,75] 
* CE 6 is refined into CE [76] 
* CE 5 is refined into CE [77] 
* CE 7 is refined into CE [78] 


### Cost equations --> "Loop" of start/5 
* CEs [41,49] --> Loop 34 
* CEs [42,48] --> Loop 35 
* CEs [43,47] --> Loop 36 
* CEs [44] --> Loop 37 
* CEs [46] --> Loop 38 
* CEs [45] --> Loop 39 
* CEs [53] --> Loop 40 
* CEs [54] --> Loop 41 
* CEs [52] --> Loop 42 
* CEs [55] --> Loop 43 
* CEs [56] --> Loop 44 
* CEs [36] --> Loop 45 
* CEs [37] --> Loop 46 
* CEs [63] --> Loop 47 
* CEs [67,75] --> Loop 48 
* CEs [68,74] --> Loop 49 
* CEs [69,73] --> Loop 50 
* CEs [70] --> Loop 51 
* CEs [76] --> Loop 52 
* CEs [77] --> Loop 53 
* CEs [64] --> Loop 54 
* CEs [72] --> Loop 55 
* CEs [71] --> Loop 56 
* CEs [66] --> Loop 57 
* CEs [40] --> Loop 58 
* CEs [61] --> Loop 59 
* CEs [60] --> Loop 60 
* CEs [57] --> Loop 61 
* CEs [59] --> Loop 62 
* CEs [58] --> Loop 63 
* CEs [51] --> Loop 64 
* CEs [50] --> Loop 65 
* CEs [78] --> Loop 66 
* CEs [62] --> Loop 67 
* CEs [65] --> Loop 68 
* CEs [38] --> Loop 69 
* CEs [39] --> Loop 70 

### Ranking functions of CR start(A,B,C,D,E) 

#### Partial ranking functions of CR start(A,B,C,D,E) 


### Specialization of cost equations start0/5 
* CE 1 is refined into CE [79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115] 


### Cost equations --> "Loop" of start0/5 
* CEs [103] --> Loop 71 
* CEs [102] --> Loop 72 
* CEs [101] --> Loop 73 
* CEs [100] --> Loop 74 
* CEs [114] --> Loop 75 
* CEs [113] --> Loop 76 
* CEs [112] --> Loop 77 
* CEs [99] --> Loop 78 
* CEs [98] --> Loop 79 
* CEs [111] --> Loop 80 
* CEs [93,110] --> Loop 81 
* CEs [92,109] --> Loop 82 
* CEs [108] --> Loop 83 
* CEs [91] --> Loop 84 
* CEs [90,107] --> Loop 85 
* CEs [106] --> Loop 86 
* CEs [105] --> Loop 87 
* CEs [89] --> Loop 88 
* CEs [104] --> Loop 89 
* CEs [88] --> Loop 90 
* CEs [87] --> Loop 91 
* CEs [86] --> Loop 92 
* CEs [97] --> Loop 93 
* CEs [96] --> Loop 94 
* CEs [95] --> Loop 95 
* CEs [94] --> Loop 96 
* CEs [84] --> Loop 97 
* CEs [85] --> Loop 98 
* CEs [81] --> Loop 99 
* CEs [83] --> Loop 100 
* CEs [79] --> Loop 101 
* CEs [115] --> Loop 102 
* CEs [82] --> Loop 103 
* CEs [80] --> Loop 104 

### Ranking functions of CR start0(A,B,C,D,E) 

#### Partial ranking functions of CR start0(A,B,C,D,E) 


Computing Bounds
=====================================

#### Cost of chains of lbl111(A,B,C,D,E,F,G,H,I):
* Chain [[19],22]: 1*it(19)+0
  Such that:it(19) =< D-I

  with precondition: [E=2,A=F,B=G,C=H,B=I,B>=1,D>=2*B,C>=B,A>=B+D] 

* Chain [[19],21]: 1*it(19)+0
  Such that:it(19) =< D-G-I

  with precondition: [E=3,A=F,C=H,B=G+I,G>=1,C>=B,B>=G+1,D+G>=2*B,A>=B+D] 

* Chain [[19],20]: 1*it(19)+0
  Such that:it(19) =< -B+D

  with precondition: [E=4,B>=1,C>=B,D>=B+1,A>=B+D] 

* Chain [22]: 0
  with precondition: [E=2,D=B,A=F,D=G,C=H,D=I,D>=1,A>=2*D,C>=D] 

* Chain [21]: 0
  with precondition: [E=3,A=F,C=H,D=I,D+G=B,D>=1,C>=B,B>=D+1,A>=B+D] 

* Chain [20]: 0
  with precondition: [E=4,B>=1,D>=1,C>=B,A>=B+D] 


#### Cost of chains of lbl101(A,B,C,D,E,F,G,H,I):
* Chain [[23,24,25],31]: 1*it(23)+1*it(24)+1*it(25)+1*s(3)+0
  Such that:aux(9) =< -3*B+2*D
aux(14) =< -3*B+2*D+I
aux(62) =< B
aux(63) =< B-I
aux(24) =< C/6
aux(17) =< D
aux(61) =< D-2*I
aux(14) =< 2*D-5*I
it(24) =< D/2-I/2
it(23) =< D/4-I/4
aux(22) =< F/4
aux(64) =< -B+D
aux(61) =< aux(64)
it(23) =< aux(62)
it(24) =< aux(62)
it(25) =< aux(62)
it(23) =< aux(63)
it(24) =< aux(63)
it(25) =< aux(63)
aux(52) =< aux(24)*3+2
aux(44) =< aux(22)*4+3
aux(28) =< aux(24)*2-1
aux(26) =< aux(22)*2-1
aux(53) =< it(25)*aux(52)
aux(45) =< it(25)*aux(44)
s(3) =< it(23)*aux(17)
aux(8) =< aux(53)*3
aux(5) =< aux(53)
aux(8) =< aux(45)*3
aux(5) =< aux(45)
it(24) =< aux(5)+aux(61)
s(3) =< aux(5)+aux(61)
s(3) =< aux(5)+aux(64)
aux(29) =< it(24)*aux(28)
aux(7) =< it(24)*aux(28)
aux(27) =< it(24)*aux(26)
aux(7) =< it(24)*aux(26)
aux(12) =< aux(29)
aux(12) =< aux(27)
s(3) =< aux(8)+aux(7)+aux(9)
s(3) =< aux(8)+aux(12)+aux(14)

  with precondition: [E=2,A=F,C=H,G=I,G>=1,B>=2*G,A>=D,D>=G,C>=B+D] 

* Chain [[23,24,25],30]: 1*it(23)+1*it(24)+1*it(25)+1*s(3)+0
  Such that:aux(9) =< -3*B+2*D
aux(14) =< -3*B+2*D-G
aux(60) =< -B+D
aux(61) =< -B+D-G
aux(62) =< B
aux(63) =< B-I
aux(24) =< C/6
aux(17) =< D
aux(61) =< D-4*G
aux(14) =< 2*D-10*G
it(24) =< D/2-I
it(23) =< D/4-I/2
aux(22) =< F/4
it(23) =< aux(62)
it(24) =< aux(62)
it(25) =< aux(62)
it(23) =< aux(63)
it(24) =< aux(63)
it(25) =< aux(63)
aux(52) =< aux(24)*3+2
aux(44) =< aux(22)*4+3
aux(28) =< aux(24)*2-1
aux(26) =< aux(22)*2-1
aux(53) =< it(25)*aux(52)
aux(45) =< it(25)*aux(44)
s(3) =< it(23)*aux(17)
aux(8) =< aux(53)*3
aux(5) =< aux(53)
aux(8) =< aux(45)*3
aux(5) =< aux(45)
it(24) =< aux(5)+aux(61)
s(3) =< aux(5)+aux(61)
s(3) =< aux(5)+aux(60)
aux(29) =< it(24)*aux(28)
aux(7) =< it(24)*aux(28)
aux(27) =< it(24)*aux(26)
aux(7) =< it(24)*aux(26)
aux(12) =< aux(29)
aux(12) =< aux(27)
s(3) =< aux(8)+aux(7)+aux(9)
s(3) =< aux(8)+aux(12)+aux(14)

  with precondition: [E=2,A=F,C=H,G=I,G>=1,B>=3*G,D>=2*G,A>=D,C>=B+D] 

* Chain [[23,24,25],29]: 1*it(23)+1*it(24)+1*it(25)+1*s(3)+1*s(4)+0
  Such that:aux(9) =< -3*B+2*D
aux(14) =< -3*B+2*D-3*I
aux(60) =< -B+D
aux(61) =< -B+D-2*I
aux(62) =< B
aux(63) =< B-I
aux(24) =< C/6
aux(17) =< D
aux(61) =< D-6*G
aux(14) =< 2*D-15*G
it(24) =< D/2-3/2*I
it(23) =< D/4-3/4*I
aux(22) =< F/4
aux(65) =< D-2*I
it(23) =< aux(65)
it(24) =< aux(65)
s(4) =< aux(65)
it(23) =< aux(62)
it(24) =< aux(62)
it(25) =< aux(62)
it(23) =< aux(63)
it(24) =< aux(63)
it(25) =< aux(63)
aux(52) =< aux(24)*3+2
aux(44) =< aux(22)*4+3
aux(28) =< aux(24)*2-1
aux(26) =< aux(22)*2-1
aux(53) =< it(25)*aux(52)
aux(45) =< it(25)*aux(44)
s(3) =< it(23)*aux(17)
aux(8) =< aux(53)*3
aux(5) =< aux(53)
aux(8) =< aux(45)*3
aux(5) =< aux(45)
it(24) =< aux(5)+aux(61)
s(3) =< aux(5)+aux(61)
s(3) =< aux(5)+aux(60)
aux(29) =< it(24)*aux(28)
aux(7) =< it(24)*aux(28)
aux(27) =< it(24)*aux(26)
aux(7) =< it(24)*aux(26)
aux(12) =< aux(29)
aux(12) =< aux(27)
s(3) =< aux(8)+aux(7)+aux(9)
s(3) =< aux(8)+aux(12)+aux(14)

  with precondition: [E=2,A=F,C=H,G=I,G>=1,B>=4*G,D>=3*G,A>=D,C>=B+D] 

* Chain [[23,24,25],28]: 1*it(23)+1*it(24)+1*it(25)+1*s(3)+0
  Such that:aux(61) =< A
aux(14) =< 2*A
aux(22) =< A/4
aux(9) =< -3*B+2*D
aux(60) =< -B+D
aux(24) =< C/6
aux(14) =< 2*D
it(24) =< D/2
it(23) =< D/4
aux(66) =< B
aux(67) =< D
aux(61) =< aux(67)
it(23) =< aux(66)
it(24) =< aux(66)
it(25) =< aux(66)
aux(52) =< aux(24)*3+2
aux(44) =< aux(22)*4+3
aux(28) =< aux(24)*2-1
aux(26) =< aux(22)*2-1
aux(53) =< it(25)*aux(52)
aux(45) =< it(25)*aux(44)
s(3) =< it(23)*aux(67)
aux(8) =< aux(53)*3
aux(5) =< aux(53)
aux(8) =< aux(45)*3
aux(5) =< aux(45)
it(24) =< aux(5)+aux(61)
s(3) =< aux(5)+aux(61)
s(3) =< aux(5)+aux(60)
aux(29) =< it(24)*aux(28)
aux(7) =< it(24)*aux(28)
aux(27) =< it(24)*aux(26)
aux(7) =< it(24)*aux(26)
aux(12) =< aux(29)
aux(12) =< aux(27)
s(3) =< aux(8)+aux(7)+aux(9)
s(3) =< aux(8)+aux(12)+aux(14)

  with precondition: [E=4,B>=2,D>=1,A>=D,C>=B+D] 

* Chain [[23,24,25],27]: 1*it(23)+1*it(24)+1*it(25)+1*s(3)+1*s(5)+0
  Such that:aux(22) =< A/4
aux(24) =< C/6
aux(14) =< 2*D
it(24) =< D/2
it(23) =< D/4
aux(68) =< -3*B+2*D
aux(69) =< -B+D
aux(70) =< B
aux(71) =< D
aux(14) =< aux(68)
aux(61) =< aux(69)
aux(61) =< aux(71)
it(23) =< aux(71)
it(24) =< aux(71)
s(5) =< aux(71)
it(23) =< aux(70)
it(24) =< aux(70)
it(25) =< aux(70)
aux(52) =< aux(24)*3+2
aux(44) =< aux(22)*4+3
aux(28) =< aux(24)*2-1
aux(26) =< aux(22)*2-1
aux(53) =< it(25)*aux(52)
aux(45) =< it(25)*aux(44)
s(3) =< it(23)*aux(71)
aux(8) =< aux(53)*3
aux(5) =< aux(53)
aux(8) =< aux(45)*3
aux(5) =< aux(45)
it(24) =< aux(5)+aux(61)
s(3) =< aux(5)+aux(61)
s(3) =< aux(5)+aux(69)
aux(29) =< it(24)*aux(28)
aux(7) =< it(24)*aux(28)
aux(27) =< it(24)*aux(26)
aux(7) =< it(24)*aux(26)
aux(12) =< aux(29)
aux(12) =< aux(27)
s(3) =< aux(8)+aux(7)+aux(68)
s(3) =< aux(8)+aux(12)+aux(14)

  with precondition: [E=4,B>=4,D>=3,A>=D,C>=B+D] 

* Chain [[23,24,25],26]: 1*it(23)+1*it(24)+1*it(25)+1*s(3)+0
  Such that:aux(22) =< A/4
aux(9) =< -3*B+2*D
aux(14) =< -3*B+3*D
aux(14) =< -5/2*B+2*D
aux(24) =< C/6
it(24) =< D/2
it(23) =< D/4
aux(72) =< -B+D
aux(73) =< B
aux(74) =< D
aux(61) =< aux(72)
aux(61) =< aux(74)
it(23) =< aux(73)
it(24) =< aux(73)
it(25) =< aux(73)
aux(52) =< aux(24)*3+2
aux(44) =< aux(22)*4+3
aux(28) =< aux(24)*2-1
aux(26) =< aux(22)*2-1
aux(53) =< it(25)*aux(52)
aux(45) =< it(25)*aux(44)
s(3) =< it(23)*aux(74)
aux(8) =< aux(53)*3
aux(5) =< aux(53)
aux(8) =< aux(45)*3
aux(5) =< aux(45)
it(24) =< aux(5)+aux(61)
s(3) =< aux(5)+aux(61)
s(3) =< aux(5)+aux(72)
aux(29) =< it(24)*aux(28)
aux(7) =< it(24)*aux(28)
aux(27) =< it(24)*aux(26)
aux(7) =< it(24)*aux(26)
aux(12) =< aux(29)
aux(12) =< aux(27)
s(3) =< aux(8)+aux(7)+aux(9)
s(3) =< aux(8)+aux(12)+aux(14)

  with precondition: [E=4,B>=3,D>=2,A>=D,C>=B+D] 

* Chain [31]: 0
  with precondition: [E=2,B=D,A=F,B=G,C=H,B=I,B>=1,C>=2*B,A>=B] 

* Chain [30]: 0
  with precondition: [E=2,2*B=D,A=F,B=G,C=H,B=I,B>=1,C>=3*B,A>=2*B] 

* Chain [29]: 1*s(4)+0
  Such that:s(4) =< -2*B+D

  with precondition: [E=2,A=F,B=G,C=H,B=I,B>=1,D>=3*B,A>=D,C>=B+D] 

* Chain [28]: 0
  with precondition: [E=4] 

* Chain [27]: 1*s(5)+0
  Such that:s(5) =< -2*B+D

  with precondition: [E=4,B>=1,D>=2*B+1,A>=D,C>=B+D] 

* Chain [26]: 0
  with precondition: [E=4,B>=1,D>=B+1,A>=D,C>=B+D] 


#### Cost of chains of lbl101_loop_cont(A,B,C,D,E,F):
* Chain [33]: 0
  with precondition: [A=2,C=E,C>=1,B>=C,D>=C] 

* Chain [32]: 0
  with precondition: [A=4] 


#### Cost of chains of start(A,B,C,D,E):
* Chain [70]: 1
  with precondition: [5*B=3*A,5*B=3*D,B=C,B>=3] 

* Chain [69]: 1
  with precondition: [3*B=2*A,3*B=2*D,B=C,B>=2] 

* Chain [68]: 0
  with precondition: [2*B=3*A,2*B=3*D,B=C,B>=3] 

* Chain [67]: 0
  with precondition: [2*B=A,B=C,2*B=D,B>=1] 

* Chain [66]: 0
  with precondition: [B=A,B=C,B=D,B>=1] 

* Chain [65]: 1*s(6)+1
  Such that:s(6) =< -2*C+D

  with precondition: [D=A,B=C,B>=2,2*D>=5*B] 

* Chain [64]: 1*s(7)+1
  Such that:s(7) =< -2*C+D

  with precondition: [D=A,B=C,B>=3,3*D>=8*B] 

* Chain [63]: 1*s(8)+1
  Such that:s(8) =< -2*C+D

  with precondition: [D=A,B=C,B>=3,2*D>=5*B+1] 

* Chain [62]: 1*s(9)+1*s(16)+1*s(17)+1*s(20)+1*s(27)+1
  Such that:s(13) =< 5*A-13*C
s(9) =< -2*B+D
s(11) =< 2*B
s(16) =< B/2
s(17) =< B/4
s(15) =< B/6
s(14) =< -5*C+2*D
s(14) =< C
s(13) =< 2*C
s(10) =< D
s(12) =< D/4
aux(75) =< B
s(16) =< aux(75)
s(17) =< aux(75)
s(10) =< aux(75)
s(20) =< aux(75)
s(21) =< s(15)*3+2
s(22) =< s(12)*4+3
s(23) =< s(15)*2-1
s(24) =< s(12)*2-1
s(25) =< s(20)*s(21)
s(26) =< s(20)*s(22)
s(27) =< s(17)*aux(75)
s(28) =< s(25)*3
s(29) =< s(25)
s(28) =< s(26)*3
s(29) =< s(26)
s(16) =< s(29)+s(10)
s(27) =< s(29)+s(10)
s(27) =< s(29)+s(14)
s(30) =< s(16)*s(23)
s(31) =< s(16)*s(23)
s(32) =< s(16)*s(24)
s(31) =< s(16)*s(24)
s(33) =< s(30)
s(33) =< s(32)
s(27) =< s(28)+s(31)+s(13)
s(27) =< s(28)+s(33)+s(11)

  with precondition: [D=A,B=C,B>=3,D>=2*B+1] 

* Chain [61]: 1*s(34)+1*s(35)+1
  Such that:s(35) =< -8*B+3*D
s(34) =< -2*B+D
s(35) =< B

  with precondition: [D=A,B=C,B>=4,3*D>=8*B+1] 

* Chain [60]: 1*s(36)+1*s(41)+1*s(42)+1*s(47)+1*s(54)+1
  Such that:s(43) =< 2*A-5*B
s(38) =< 5*A-13*B
s(39) =< 6*A-15*B
s(41) =< A/2-C
s(37) =< A/4
s(42) =< A/4-C/2
s(39) =< 9/2*A-23/2*B
s(43) =< B
s(39) =< 3*B
s(40) =< C/6
aux(76) =< A-2*C
aux(77) =< 2*B
aux(78) =< C
s(36) =< aux(76)
s(45) =< aux(76)
s(38) =< aux(77)
s(39) =< aux(77)
s(41) =< aux(78)
s(42) =< aux(78)
s(45) =< aux(78)
s(46) =< s(43)
s(46) =< s(45)
s(47) =< aux(78)
s(48) =< s(40)*3+2
s(49) =< s(37)*4+3
s(50) =< s(40)*2-1
s(51) =< s(37)*2-1
s(52) =< s(47)*s(48)
s(53) =< s(47)*s(49)
s(54) =< s(42)*s(45)
s(55) =< s(52)*3
s(56) =< s(52)
s(55) =< s(53)*3
s(56) =< s(53)
s(41) =< s(56)+s(46)
s(54) =< s(56)+s(46)
s(54) =< s(56)+s(43)
s(57) =< s(41)*s(50)
s(58) =< s(41)*s(50)
s(59) =< s(41)*s(51)
s(58) =< s(41)*s(51)
s(60) =< s(57)
s(60) =< s(59)
s(54) =< s(55)+s(58)+s(38)
s(54) =< s(55)+s(60)+s(39)

  with precondition: [D=A,B=C,B>=5,D>=2*B+2] 

* Chain [59]: 1*s(61)+1*s(65)+1*s(66)+1*s(72)+1*s(73)+1*s(80)+1
  Such that:s(68) =< 2*A-5*B
s(64) =< 2*A-4*B
s(67) =< 5*A-13*B
s(65) =< A/2-B
s(62) =< A/4
s(66) =< A/4-B/2
s(63) =< B/6
aux(79) =< A-2*B
aux(80) =< B
aux(81) =< 2*B
s(61) =< aux(79)
s(70) =< aux(79)
s(65) =< aux(80)
s(66) =< aux(80)
s(68) =< aux(80)
s(69) =< aux(80)
s(70) =< aux(80)
s(64) =< aux(81)
s(67) =< aux(81)
s(69) =< aux(81)
s(64) =< s(67)
s(71) =< s(68)
s(71) =< s(70)
s(66) =< s(70)
s(65) =< s(70)
s(72) =< s(70)
s(66) =< s(69)
s(65) =< s(69)
s(73) =< s(69)
s(74) =< s(63)*3+2
s(75) =< s(62)*4+3
s(76) =< s(63)*2-1
s(77) =< s(62)*2-1
s(78) =< s(73)*s(74)
s(79) =< s(73)*s(75)
s(80) =< s(66)*s(70)
s(81) =< s(78)*3
s(82) =< s(78)
s(81) =< s(79)*3
s(82) =< s(79)
s(65) =< s(82)+s(71)
s(80) =< s(82)+s(71)
s(80) =< s(82)+s(68)
s(83) =< s(65)*s(76)
s(84) =< s(65)*s(76)
s(85) =< s(65)*s(77)
s(84) =< s(65)*s(77)
s(86) =< s(83)
s(86) =< s(85)
s(80) =< s(81)+s(84)+s(67)
s(80) =< s(81)+s(86)+s(64)

  with precondition: [D=A,B=C,B>=7,D>=2*B+3] 

* Chain [58]: 1*s(87)+1
  Such that:s(87) =< -5*C+3*D

  with precondition: [D=A,B=C,4*D>=7*B,2*B>=D+1] 

* Chain [57]: 1*s(88)+0
  Such that:s(88) =< -2*C+3*D

  with precondition: [D=A,B=C,4*D>=3*B,B>=D+1] 

* Chain [56]: 1*s(89)+0
  Such that:s(89) =< -2*C+3*D

  with precondition: [D=A,B=C,3*D>=2*B+1,B>=D+1] 

* Chain [55]: 0
  with precondition: [D=A,B=C,2*D>=B+1,B>=D+1] 

* Chain [54]: 0
  with precondition: [B=2*A,B=2*D,B=C,B>=2] 

* Chain [53]: 0
  with precondition: [D=A,C=B,0>=D] 

* Chain [52]: 0
  with precondition: [D=A,C=B,0>=C,D>=1] 

* Chain [51]: 0
  with precondition: [D=A,C=B,D>=1,C>=D+1] 

* Chain [50]: 1*s(97)+1*s(98)+1*s(101)+1*s(108)+1*s(121)+1*s(122)+1*s(125)+1*s(132)+0
  Such that:aux(82) =< -A+C
aux(83) =< A
s(91) =< 2*A
s(100) =< 2*A-B
s(119) =< 2*A-C
s(118) =< 5*A-3*B
s(91) =< 6*A-3*C
s(97) =< A/2
aux(84) =< A/4
s(91) =< 9/2*A-5/2*C
s(90) =< -3*B+5*D
s(123) =< B-D
s(120) =< B/6
s(94) =< C/6
s(121) =< D/2
aux(86) =< D/4
aux(87) =< -3*C+5*D
aux(88) =< -C+2*D
aux(89) =< D
aux(90) =< 2*D
s(90) =< aux(87)
s(118) =< aux(87)
s(100) =< aux(88)
s(119) =< aux(88)
s(96) =< aux(89)
s(91) =< aux(90)
s(96) =< aux(83)
s(98) =< aux(84)
s(96) =< s(100)
s(98) =< aux(82)
s(97) =< aux(82)
s(101) =< aux(82)
s(102) =< s(94)*3+2
s(103) =< aux(84)*4+3
s(104) =< s(94)*2-1
s(105) =< aux(84)*2-1
s(106) =< s(101)*s(102)
s(107) =< s(101)*s(103)
s(108) =< s(98)*aux(83)
s(109) =< s(106)*3
s(110) =< s(106)
s(109) =< s(107)*3
s(110) =< s(107)
s(97) =< s(110)+s(96)
s(108) =< s(110)+s(96)
s(108) =< s(110)+s(100)
s(111) =< s(97)*s(104)
s(112) =< s(97)*s(104)
s(113) =< s(97)*s(105)
s(112) =< s(97)*s(105)
s(114) =< s(111)
s(114) =< s(113)
s(108) =< s(109)+s(112)+s(90)
s(108) =< s(109)+s(114)+s(91)
s(122) =< aux(86)
s(122) =< s(123)
s(121) =< s(123)
s(125) =< s(123)
s(126) =< s(120)*3+2
s(127) =< aux(86)*4+3
s(128) =< s(120)*2-1
s(129) =< aux(86)*2-1
s(130) =< s(125)*s(126)
s(131) =< s(125)*s(127)
s(132) =< s(122)*aux(89)
s(133) =< s(130)*3
s(134) =< s(130)
s(133) =< s(131)*3
s(134) =< s(131)
s(121) =< s(134)+aux(89)
s(132) =< s(134)+aux(89)
s(132) =< s(134)+s(119)
s(135) =< s(121)*s(128)
s(136) =< s(121)*s(128)
s(137) =< s(121)*s(129)
s(136) =< s(121)*s(129)
s(138) =< s(135)
s(138) =< s(137)
s(132) =< s(133)+s(136)+s(118)
s(132) =< s(133)+s(138)+aux(90)

  with precondition: [D=A,C=B,D>=1,C>=D+2] 

* Chain [49]: 1*s(147)+2*s(148)+2*s(150)+1*s(157)+1*s(168)+1*s(181)+0
  Such that:s(140) =< 2*A
aux(93) =< 2*A-B
s(140) =< 5*A-3*B
s(166) =< -3*B+6*D
s(170) =< -B+2*D
s(166) =< -5/2*B+9/2*D
s(166) =< -3*C+6*D
s(166) =< -5/2*C+9/2*D
s(142) =< D
s(140) =< 2*D
aux(98) =< -A+B
aux(99) =< A
aux(100) =< A/2
aux(101) =< A/4
aux(102) =< -3*B+5*D
aux(103) =< B/6
aux(104) =< -3*C+5*D
aux(105) =< -C+2*D
s(147) =< aux(100)
s(168) =< aux(100)
s(139) =< aux(102)
s(139) =< aux(104)
s(170) =< aux(105)
s(148) =< aux(101)
s(173) =< s(170)
s(173) =< aux(99)
s(148) =< aux(98)
s(168) =< aux(98)
s(150) =< aux(98)
s(151) =< aux(103)*3+2
s(152) =< aux(101)*4+3
s(153) =< aux(103)*2-1
s(154) =< aux(101)*2-1
s(155) =< s(150)*s(151)
s(156) =< s(150)*s(152)
s(181) =< s(148)*aux(99)
s(158) =< s(155)*3
s(159) =< s(155)
s(158) =< s(156)*3
s(159) =< s(156)
s(168) =< s(159)+s(173)
s(181) =< s(159)+s(173)
s(181) =< s(159)+s(170)
s(184) =< s(168)*s(153)
s(185) =< s(168)*s(153)
s(186) =< s(168)*s(154)
s(185) =< s(168)*s(154)
s(187) =< s(184)
s(187) =< s(186)
s(181) =< s(158)+s(185)+s(139)
s(181) =< s(158)+s(187)+s(166)
s(142) =< aux(99)
s(141) =< aux(93)
s(142) =< aux(93)
s(140) =< aux(104)
s(141) =< aux(105)
s(142) =< aux(105)
s(147) =< aux(98)
s(157) =< s(148)*aux(99)
s(147) =< s(159)+s(142)
s(157) =< s(159)+s(142)
s(157) =< s(159)+s(141)
s(160) =< s(147)*s(153)
s(161) =< s(147)*s(153)
s(162) =< s(147)*s(154)
s(161) =< s(147)*s(154)
s(163) =< s(160)
s(163) =< s(162)
s(157) =< s(158)+s(161)+s(139)
s(157) =< s(158)+s(163)+s(140)

  with precondition: [D=A,C=B,D>=2,C>=D+3] 

* Chain [48]: 1*s(196)+2*s(197)+2*s(200)+2*s(201)+1*s(208)+1*s(218)+1*s(233)+0
  Such that:s(191) =< 2*A-B
s(189) =< 5*A-3*B
s(188) =< 5*A-3*C
s(220) =< -3*B+5*D
s(191) =< D
s(189) =< 2*D
aux(112) =< -A+B
aux(113) =< A
aux(114) =< 2*A
aux(115) =< A/2
aux(116) =< A/4
aux(117) =< -B+2*D
aux(118) =< B/6
aux(119) =< -3*C+5*D
aux(120) =< -C+2*D
s(189) =< aux(114)
s(217) =< aux(114)
s(196) =< aux(115)
s(218) =< aux(115)
s(190) =< aux(117)
s(220) =< aux(119)
s(190) =< aux(120)
s(197) =< aux(116)
s(217) =< s(220)
s(224) =< s(190)
s(224) =< aux(113)
s(197) =< aux(113)
s(218) =< aux(113)
s(200) =< aux(113)
s(197) =< aux(112)
s(218) =< aux(112)
s(201) =< aux(112)
s(202) =< aux(118)*3+2
s(203) =< aux(116)*4+3
s(204) =< aux(118)*2-1
s(205) =< aux(116)*2-1
s(206) =< s(201)*s(202)
s(207) =< s(201)*s(203)
s(233) =< s(197)*aux(113)
s(209) =< s(206)*3
s(210) =< s(206)
s(209) =< s(207)*3
s(210) =< s(207)
s(218) =< s(210)+s(224)
s(233) =< s(210)+s(224)
s(233) =< s(210)+s(190)
s(236) =< s(218)*s(204)
s(237) =< s(218)*s(204)
s(238) =< s(218)*s(205)
s(237) =< s(218)*s(205)
s(239) =< s(236)
s(239) =< s(238)
s(233) =< s(209)+s(237)+s(220)
s(233) =< s(209)+s(239)+s(217)
s(191) =< aux(113)
s(188) =< aux(119)
s(189) =< aux(119)
s(191) =< aux(120)
s(196) =< aux(113)
s(196) =< aux(112)
s(208) =< s(197)*aux(113)
s(196) =< s(210)+s(191)
s(208) =< s(210)+s(191)
s(208) =< s(210)+s(190)
s(211) =< s(196)*s(204)
s(212) =< s(196)*s(204)
s(213) =< s(196)*s(205)
s(212) =< s(196)*s(205)
s(214) =< s(211)
s(214) =< s(213)
s(208) =< s(209)+s(212)+s(188)
s(208) =< s(209)+s(214)+s(189)

  with precondition: [D=A,C=B,D>=3,C>=D+4] 

* Chain [47]: 1*s(240)+0
  Such that:s(240) =< -2*C+D

  with precondition: [D=A,C=B,C>=1,D>=3*C] 

* Chain [46]: 1*s(241)+0
  Such that:s(241) =< -2*C+D

  with precondition: [D=A,C=B,C>=1,D>=2*C+1] 

* Chain [45]: 0
  with precondition: [D=A,C=B,C>=1,D>=C+1] 

* Chain [44]: 1*s(242)+1
  Such that:s(242) =< -2*C+D

  with precondition: [D=A,C=B,C>=2,D>=2*C+1] 

* Chain [43]: 1*s(243)+1*s(251)+2*s(252)+1*s(262)+1
  Such that:s(245) =< -15*B+6*D
s(254) =< -5*B+2*D
s(254) =< B
s(245) =< 2*B
s(244) =< -13*C+5*D
s(245) =< -4*C+2*D
s(248) =< C/6
s(253) =< D/4
aux(121) =< -2*C+D
aux(122) =< C
aux(123) =< 2*C
s(243) =< aux(121)
s(250) =< aux(121)
s(250) =< aux(122)
s(251) =< aux(122)
s(252) =< aux(122)
s(244) =< aux(123)
s(245) =< aux(123)
s(250) =< s(254)
s(256) =< s(248)*3+2
s(257) =< s(253)*4+3
s(258) =< s(248)*2-1
s(259) =< s(253)*2-1
s(260) =< s(252)*s(256)
s(261) =< s(252)*s(257)
s(262) =< s(252)*aux(122)
s(263) =< s(260)*3
s(264) =< s(260)
s(263) =< s(261)*3
s(264) =< s(261)
s(251) =< s(264)+s(250)
s(262) =< s(264)+s(250)
s(262) =< s(264)+s(254)
s(265) =< s(251)*s(258)
s(266) =< s(251)*s(258)
s(267) =< s(251)*s(259)
s(266) =< s(251)*s(259)
s(268) =< s(265)
s(268) =< s(267)
s(262) =< s(263)+s(266)+s(244)
s(262) =< s(263)+s(268)+s(245)

  with precondition: [D=A,C=B,C>=3,D>=2*C+1] 

* Chain [42]: 1*s(269)+1*s(270)+1
  Such that:s(270) =< -8*B+3*D
s(269) =< -2*B+D
s(270) =< B

  with precondition: [D=A,C=B,C>=4,4*D>=11*C] 

* Chain [41]: 1*s(271)+1*s(280)+2*s(281)+1*s(290)+1
  Such that:s(274) =< -5*B+2*D
s(274) =< B
s(275) =< -5*C+2*D
s(273) =< -4*C+2*D
s(278) =< C/6
s(282) =< D/4
aux(124) =< -13*C+5*D
aux(125) =< -2*C+D
aux(126) =< C
aux(127) =< 2*C
s(272) =< aux(124)
s(273) =< aux(124)
s(271) =< aux(125)
s(275) =< aux(125)
s(275) =< aux(126)
s(280) =< aux(126)
s(281) =< aux(126)
s(272) =< aux(127)
s(273) =< aux(127)
s(284) =< s(278)*3+2
s(285) =< s(282)*4+3
s(286) =< s(278)*2-1
s(287) =< s(282)*2-1
s(288) =< s(281)*s(284)
s(289) =< s(281)*s(285)
s(290) =< s(281)*aux(126)
s(291) =< s(288)*3
s(292) =< s(288)
s(291) =< s(289)*3
s(292) =< s(289)
s(280) =< s(292)+s(275)
s(290) =< s(292)+s(275)
s(290) =< s(292)+s(274)
s(293) =< s(280)*s(286)
s(294) =< s(280)*s(286)
s(295) =< s(280)*s(287)
s(294) =< s(280)*s(287)
s(296) =< s(293)
s(296) =< s(295)
s(290) =< s(291)+s(294)+s(272)
s(290) =< s(291)+s(296)+s(273)

  with precondition: [D=A,C=B,C>=5,D>=2*C+2] 

* Chain [40]: 1*s(297)+1*s(306)+3*s(307)+1*s(318)+1
  Such that:s(301) =< 2*A-5*B
s(300) =< 2*A-5*C
s(299) =< -4*B+2*D
s(301) =< -2*B+D
s(301) =< B
s(297) =< -2*C+D
s(304) =< C/6
s(308) =< D/4
aux(128) =< 5*A-13*B
aux(129) =< 2*B
aux(130) =< C
s(298) =< aux(128)
s(299) =< aux(128)
s(298) =< aux(129)
s(299) =< aux(129)
s(300) =< aux(130)
s(306) =< aux(130)
s(307) =< aux(130)
s(312) =< s(304)*3+2
s(313) =< s(308)*4+3
s(314) =< s(304)*2-1
s(315) =< s(308)*2-1
s(316) =< s(307)*s(312)
s(317) =< s(307)*s(313)
s(318) =< s(307)*aux(130)
s(319) =< s(316)*3
s(320) =< s(316)
s(319) =< s(317)*3
s(320) =< s(317)
s(306) =< s(320)+s(301)
s(318) =< s(320)+s(301)
s(318) =< s(320)+s(300)
s(321) =< s(306)*s(314)
s(322) =< s(306)*s(314)
s(323) =< s(306)*s(315)
s(322) =< s(306)*s(315)
s(324) =< s(321)
s(324) =< s(323)
s(318) =< s(319)+s(322)+s(298)
s(318) =< s(319)+s(324)+s(299)

  with precondition: [D=A,C=B,C>=7,D>=2*C+3] 

* Chain [39]: 1*s(325)+1
  Such that:s(325) =< -5*C+3*D

  with precondition: [D=A,C=B,3*D>=5*C+1,2*C>=D+1] 

* Chain [38]: 1
  with precondition: [D=A,C=B,2*D>=3*C+1,2*C>=D+1] 

* Chain [37]: 1
  with precondition: [D=A,C=B,D>=C+1,2*C>=D+1] 

* Chain [36]: 1*s(333)+1*s(334)+1*s(337)+1*s(344)+1*s(357)+1*s(358)+1*s(361)+1*s(368)+1
  Such that:aux(131) =< -A+2*C
s(332) =< A-B
s(331) =< A-C
s(336) =< 2*A-3*B
s(327) =< 2*A-2*B
s(355) =< 2*A-3*C
s(354) =< 5*A-8*B
s(327) =< 6*A-9*C
s(333) =< A/2-C/2
s(335) =< A/4
s(334) =< A/4-C/4
s(327) =< 9/2*A-7*C
s(326) =< -8*B+5*D
s(352) =< -2*B+2*D
s(360) =< -B+D
s(359) =< 2*B-D
s(357) =< -B/2+D/2
s(358) =< -B/4+D/4
s(356) =< B/6
s(327) =< -2*C+2*D
s(332) =< -C+D
s(330) =< C/6
s(351) =< D
s(353) =< D/4
aux(132) =< -8*C+5*D
aux(133) =< -3*C+2*D
s(326) =< aux(132)
s(354) =< aux(132)
s(336) =< aux(133)
s(355) =< aux(133)
s(332) =< s(336)
s(334) =< aux(131)
s(333) =< aux(131)
s(337) =< aux(131)
s(338) =< s(330)*3+2
s(339) =< s(335)*4+3
s(340) =< s(330)*2-1
s(341) =< s(335)*2-1
s(342) =< s(337)*s(338)
s(343) =< s(337)*s(339)
s(344) =< s(334)*s(331)
s(345) =< s(342)*3
s(346) =< s(342)
s(345) =< s(343)*3
s(346) =< s(343)
s(333) =< s(346)+s(332)
s(344) =< s(346)+s(332)
s(344) =< s(346)+s(336)
s(347) =< s(333)*s(340)
s(348) =< s(333)*s(340)
s(349) =< s(333)*s(341)
s(348) =< s(333)*s(341)
s(350) =< s(347)
s(350) =< s(349)
s(344) =< s(345)+s(348)+s(326)
s(344) =< s(345)+s(350)+s(327)
s(351) =< s(360)
s(358) =< s(359)
s(357) =< s(359)
s(361) =< s(359)
s(362) =< s(356)*3+2
s(363) =< s(353)*4+3
s(364) =< s(356)*2-1
s(365) =< s(353)*2-1
s(366) =< s(361)*s(362)
s(367) =< s(361)*s(363)
s(368) =< s(358)*s(360)
s(369) =< s(366)*3
s(370) =< s(366)
s(369) =< s(367)*3
s(370) =< s(367)
s(357) =< s(370)+s(351)
s(368) =< s(370)+s(351)
s(368) =< s(370)+s(355)
s(371) =< s(357)*s(364)
s(372) =< s(357)*s(364)
s(373) =< s(357)*s(365)
s(372) =< s(357)*s(365)
s(374) =< s(371)
s(374) =< s(373)
s(368) =< s(369)+s(372)+s(354)
s(368) =< s(369)+s(374)+s(352)

  with precondition: [D=A,C=B,D>=C+1,2*C>=D+2] 

* Chain [35]: 1*s(383)+2*s(384)+2*s(386)+1*s(393)+1*s(404)+1*s(417)+1
  Such that:aux(136) =< 2*A-3*B
s(376) =< 2*A-2*B
s(376) =< 5*A-8*B
s(402) =< -9*B+6*D
s(402) =< -7*B+9/2*D
s(406) =< -3*B+2*D
s(402) =< -9*C+6*D
s(402) =< -7*C+9/2*D
s(376) =< -2*C+2*D
s(378) =< -C+D
aux(139) =< -A+2*B
aux(140) =< A-B
aux(141) =< A/2-B/2
aux(142) =< A/4
aux(143) =< A/4-B/4
aux(144) =< -8*B+5*D
aux(145) =< B/6
aux(146) =< -8*C+5*D
aux(147) =< -3*C+2*D
s(383) =< aux(141)
s(404) =< aux(141)
s(384) =< aux(143)
s(375) =< aux(144)
s(375) =< aux(146)
s(406) =< aux(147)
s(409) =< s(406)
s(409) =< aux(140)
s(384) =< aux(139)
s(404) =< aux(139)
s(386) =< aux(139)
s(387) =< aux(145)*3+2
s(388) =< aux(142)*4+3
s(389) =< aux(145)*2-1
s(390) =< aux(142)*2-1
s(391) =< s(386)*s(387)
s(392) =< s(386)*s(388)
s(417) =< s(384)*aux(140)
s(394) =< s(391)*3
s(395) =< s(391)
s(394) =< s(392)*3
s(395) =< s(392)
s(404) =< s(395)+s(409)
s(417) =< s(395)+s(409)
s(417) =< s(395)+s(406)
s(420) =< s(404)*s(389)
s(421) =< s(404)*s(389)
s(422) =< s(404)*s(390)
s(421) =< s(404)*s(390)
s(423) =< s(420)
s(423) =< s(422)
s(417) =< s(394)+s(421)+s(375)
s(417) =< s(394)+s(423)+s(402)
s(378) =< aux(140)
s(377) =< aux(136)
s(378) =< aux(136)
s(376) =< aux(146)
s(377) =< aux(147)
s(378) =< aux(147)
s(383) =< aux(139)
s(393) =< s(384)*aux(140)
s(383) =< s(395)+s(378)
s(393) =< s(395)+s(378)
s(393) =< s(395)+s(377)
s(396) =< s(383)*s(389)
s(397) =< s(383)*s(389)
s(398) =< s(383)*s(390)
s(397) =< s(383)*s(390)
s(399) =< s(396)
s(399) =< s(398)
s(393) =< s(394)+s(397)+s(375)
s(393) =< s(394)+s(399)+s(376)

  with precondition: [D=A,C=B,D>=C+2,2*C>=D+3] 

* Chain [34]: 1*s(432)+2*s(433)+2*s(436)+2*s(437)+1*s(444)+1*s(454)+1*s(469)+1
  Such that:s(427) =< 2*A-3*B
s(425) =< 5*A-8*B
s(424) =< 5*A-8*C
s(456) =< -8*B+5*D
s(425) =< -2*C+2*D
s(427) =< -C+D
aux(152) =< -A+2*B
aux(153) =< A-B
aux(154) =< 2*A-2*B
aux(155) =< A/2-B/2
aux(156) =< A/4
aux(157) =< A/4-B/4
aux(158) =< -3*B+2*D
aux(159) =< B/6
aux(160) =< -8*C+5*D
aux(161) =< -3*C+2*D
s(425) =< aux(154)
s(453) =< aux(154)
s(432) =< aux(155)
s(454) =< aux(155)
s(433) =< aux(157)
s(426) =< aux(158)
s(456) =< aux(160)
s(426) =< aux(161)
s(453) =< s(456)
s(460) =< s(426)
s(460) =< aux(153)
s(433) =< aux(153)
s(454) =< aux(153)
s(436) =< aux(153)
s(433) =< aux(152)
s(454) =< aux(152)
s(437) =< aux(152)
s(438) =< aux(159)*3+2
s(439) =< aux(156)*4+3
s(440) =< aux(159)*2-1
s(441) =< aux(156)*2-1
s(442) =< s(437)*s(438)
s(443) =< s(437)*s(439)
s(469) =< s(433)*aux(153)
s(445) =< s(442)*3
s(446) =< s(442)
s(445) =< s(443)*3
s(446) =< s(443)
s(454) =< s(446)+s(460)
s(469) =< s(446)+s(460)
s(469) =< s(446)+s(426)
s(472) =< s(454)*s(440)
s(473) =< s(454)*s(440)
s(474) =< s(454)*s(441)
s(473) =< s(454)*s(441)
s(475) =< s(472)
s(475) =< s(474)
s(469) =< s(445)+s(473)+s(456)
s(469) =< s(445)+s(475)+s(453)
s(427) =< aux(153)
s(424) =< aux(160)
s(425) =< aux(160)
s(427) =< aux(161)
s(432) =< aux(153)
s(432) =< aux(152)
s(444) =< s(433)*aux(153)
s(432) =< s(446)+s(427)
s(444) =< s(446)+s(427)
s(444) =< s(446)+s(426)
s(447) =< s(432)*s(440)
s(448) =< s(432)*s(440)
s(449) =< s(432)*s(441)
s(448) =< s(432)*s(441)
s(450) =< s(447)
s(450) =< s(449)
s(444) =< s(445)+s(448)+s(424)
s(444) =< s(445)+s(450)+s(425)

  with precondition: [D=A,C=B,D>=C+3,2*C>=D+4] 


#### Cost of chains of start0(A,B,C,D,E):
* Chain [104]: 1
  with precondition: [3*A=5*C,A>=5] 

* Chain [103]: 1
  with precondition: [2*A=3*C,A>=3] 

* Chain [102]: 0
  with precondition: [A=2*C,A>=2] 

* Chain [101]: 0
  with precondition: [3*A=2*C,A>=2] 

* Chain [100]: 0
  with precondition: [A=C,A>=1] 

* Chain [99]: 0
  with precondition: [2*A=C,A>=1] 

* Chain [98]: 0
  with precondition: [0>=A] 

* Chain [97]: 0
  with precondition: [0>=C,A>=1] 

* Chain [96]: 0
  with precondition: [A>=1,C>=A+1] 

* Chain [95]: 1*s(482)+1*s(488)+2*s(495)+2*s(496)+1*s(503)+1*s(518)+0
  Such that:s(478) =< 6*A-3*C
s(478) =< 9/2*A-5/2*C
s(478) =< 3*C
aux(162) =< -A+C
aux(163) =< A
aux(164) =< 2*A
aux(165) =< 2*A-C
aux(166) =< 5*A-3*C
aux(167) =< A/2
aux(168) =< A/4
aux(169) =< C
aux(170) =< 2*C
aux(171) =< C/6
s(478) =< aux(164)
s(479) =< aux(165)
s(491) =< aux(165)
s(481) =< aux(166)
s(490) =< aux(166)
s(482) =< aux(167)
s(488) =< aux(167)
s(479) =< aux(169)
s(491) =< aux(169)
s(478) =< aux(170)
s(481) =< aux(170)
s(490) =< aux(170)
s(481) =< s(490)
s(479) =< s(491)
s(494) =< aux(163)
s(495) =< aux(168)
s(494) =< s(479)
s(495) =< aux(162)
s(482) =< aux(162)
s(496) =< aux(162)
s(497) =< aux(171)*3+2
s(498) =< aux(168)*4+3
s(499) =< aux(171)*2-1
s(500) =< aux(168)*2-1
s(501) =< s(496)*s(497)
s(502) =< s(496)*s(498)
s(503) =< s(495)*aux(163)
s(504) =< s(501)*3
s(505) =< s(501)
s(504) =< s(502)*3
s(505) =< s(502)
s(482) =< s(505)+s(494)
s(503) =< s(505)+s(494)
s(503) =< s(505)+s(479)
s(506) =< s(482)*s(499)
s(507) =< s(482)*s(499)
s(508) =< s(482)*s(500)
s(507) =< s(482)*s(500)
s(509) =< s(506)
s(509) =< s(508)
s(503) =< s(504)+s(507)+s(481)
s(503) =< s(504)+s(509)+s(478)
s(488) =< aux(162)
s(518) =< s(495)*aux(163)
s(488) =< s(505)+aux(163)
s(518) =< s(505)+aux(163)
s(518) =< s(505)+s(479)
s(521) =< s(488)*s(499)
s(522) =< s(488)*s(499)
s(523) =< s(488)*s(500)
s(522) =< s(488)*s(500)
s(524) =< s(521)
s(524) =< s(523)
s(518) =< s(504)+s(522)+s(481)
s(518) =< s(504)+s(524)+aux(164)

  with precondition: [A>=1,C>=A+2] 

* Chain [94]: 1*s(538)+1*s(539)+2*s(541)+2*s(543)+1*s(550)+1*s(558)+0
  Such that:s(530) =< -A+C
s(525) =< 2*A
s(527) =< 6*A-3*C
s(532) =< A/2
s(533) =< A/4
s(527) =< 9/2*A-5/2*C
s(527) =< 3*C
s(535) =< C/6
aux(172) =< A
aux(173) =< 2*A-C
aux(174) =< 5*A-3*C
aux(175) =< C
aux(176) =< 2*C
s(529) =< aux(172)
s(526) =< aux(173)
s(528) =< aux(173)
s(525) =< aux(174)
s(534) =< aux(174)
s(526) =< aux(175)
s(528) =< aux(175)
s(525) =< aux(176)
s(527) =< aux(176)
s(534) =< aux(176)
s(538) =< s(532)
s(539) =< s(532)
s(528) =< s(526)
s(541) =< s(533)
s(542) =< s(528)
s(542) =< aux(172)
s(541) =< s(530)
s(539) =< s(530)
s(543) =< s(530)
s(544) =< s(535)*3+2
s(545) =< s(533)*4+3
s(546) =< s(535)*2-1
s(547) =< s(533)*2-1
s(548) =< s(543)*s(544)
s(549) =< s(543)*s(545)
s(550) =< s(541)*aux(172)
s(551) =< s(548)*3
s(552) =< s(548)
s(551) =< s(549)*3
s(552) =< s(549)
s(539) =< s(552)+s(542)
s(550) =< s(552)+s(542)
s(550) =< s(552)+s(528)
s(553) =< s(539)*s(546)
s(554) =< s(539)*s(546)
s(555) =< s(539)*s(547)
s(554) =< s(539)*s(547)
s(556) =< s(553)
s(556) =< s(555)
s(550) =< s(551)+s(554)+s(534)
s(550) =< s(551)+s(556)+s(527)
s(529) =< s(526)
s(525) =< s(534)
s(538) =< s(530)
s(558) =< s(541)*aux(172)
s(538) =< s(552)+s(529)
s(558) =< s(552)+s(529)
s(558) =< s(552)+s(526)
s(559) =< s(538)*s(546)
s(560) =< s(538)*s(546)
s(561) =< s(538)*s(547)
s(560) =< s(538)*s(547)
s(562) =< s(559)
s(562) =< s(561)
s(558) =< s(551)+s(560)+s(534)
s(558) =< s(551)+s(562)+s(525)

  with precondition: [A>=2,C>=A+3] 

* Chain [93]: 1*s(577)+1*s(578)+2*s(580)+2*s(582)+2*s(583)+1*s(590)+1*s(597)+0
  Such that:s(567) =< -A+C
s(570) =< A/2
s(571) =< A/4
s(573) =< C/6
aux(177) =< A
aux(178) =< 2*A
aux(179) =< 2*A-C
aux(180) =< 5*A-3*C
aux(181) =< C
aux(182) =< 2*C
s(563) =< aux(177)
s(564) =< aux(178)
s(563) =< aux(179)
s(572) =< aux(179)
s(564) =< aux(180)
s(565) =< aux(180)
s(574) =< aux(180)
s(563) =< aux(181)
s(572) =< aux(181)
s(564) =< aux(182)
s(565) =< aux(182)
s(574) =< aux(182)
s(576) =< aux(178)
s(577) =< s(570)
s(578) =< s(570)
s(565) =< s(574)
s(580) =< s(571)
s(576) =< s(565)
s(581) =< s(572)
s(581) =< aux(177)
s(580) =< aux(177)
s(578) =< aux(177)
s(582) =< aux(177)
s(580) =< s(567)
s(578) =< s(567)
s(583) =< s(567)
s(584) =< s(573)*3+2
s(585) =< s(571)*4+3
s(586) =< s(573)*2-1
s(587) =< s(571)*2-1
s(588) =< s(583)*s(584)
s(589) =< s(583)*s(585)
s(590) =< s(580)*aux(177)
s(591) =< s(588)*3
s(592) =< s(588)
s(591) =< s(589)*3
s(592) =< s(589)
s(578) =< s(592)+s(581)
s(590) =< s(592)+s(581)
s(590) =< s(592)+s(572)
s(593) =< s(578)*s(586)
s(594) =< s(578)*s(586)
s(595) =< s(578)*s(587)
s(594) =< s(578)*s(587)
s(596) =< s(593)
s(596) =< s(595)
s(590) =< s(591)+s(594)+s(565)
s(590) =< s(591)+s(596)+s(576)
s(564) =< s(574)
s(563) =< s(572)
s(577) =< aux(177)
s(577) =< s(567)
s(597) =< s(580)*aux(177)
s(577) =< s(592)+s(563)
s(597) =< s(592)+s(563)
s(597) =< s(592)+s(572)
s(598) =< s(577)*s(586)
s(599) =< s(577)*s(586)
s(600) =< s(577)*s(587)
s(599) =< s(577)*s(587)
s(601) =< s(598)
s(601) =< s(600)
s(597) =< s(591)+s(599)+s(565)
s(597) =< s(591)+s(601)+s(564)

  with precondition: [A>=3,C>=A+4] 

* Chain [92]: 1*s(602)+0
  Such that:s(602) =< A-2*C

  with precondition: [C>=1,A>=3*C] 

* Chain [91]: 1*s(603)+0
  Such that:s(603) =< A-2*C

  with precondition: [C>=1,A>=2*C+1] 

* Chain [90]: 0
  with precondition: [C>=1,A>=C+1] 

* Chain [89]: 1*s(604)+1
  Such that:s(604) =< A-2*C

  with precondition: [C>=2,2*A>=5*C] 

* Chain [88]: 1*s(605)+1
  Such that:s(605) =< A-2*C

  with precondition: [C>=2,A>=2*C+1] 

* Chain [87]: 1*s(606)+1
  Such that:s(606) =< A-2*C

  with precondition: [C>=3,3*A>=8*C] 

* Chain [86]: 1*s(607)+1
  Such that:s(607) =< A-2*C

  with precondition: [C>=3,2*A>=5*C+1] 

* Chain [85]: 2*s(616)+1*s(618)+3*s(619)+1*s(626)+1*s(636)+1*s(637)+1*s(650)+1
  Such that:s(640) =< A
s(608) =< 2*A-4*C
s(608) =< 6*A-15*C
s(636) =< C/2
s(637) =< C/4
aux(187) =< A-2*C
aux(188) =< 2*A-5*C
aux(189) =< 5*A-13*C
aux(190) =< A/4
aux(191) =< C
aux(192) =< 2*C
aux(193) =< C/6
s(616) =< aux(187)
s(609) =< aux(188)
s(610) =< aux(189)
s(609) =< aux(191)
s(610) =< aux(192)
s(636) =< aux(191)
s(637) =< aux(191)
s(640) =< aux(191)
s(619) =< aux(191)
s(620) =< aux(193)*3+2
s(621) =< aux(190)*4+3
s(622) =< aux(193)*2-1
s(623) =< aux(190)*2-1
s(624) =< s(619)*s(620)
s(625) =< s(619)*s(621)
s(650) =< s(637)*aux(191)
s(627) =< s(624)*3
s(628) =< s(624)
s(627) =< s(625)*3
s(628) =< s(625)
s(636) =< s(628)+s(640)
s(650) =< s(628)+s(640)
s(650) =< s(628)+s(609)
s(653) =< s(636)*s(622)
s(654) =< s(636)*s(622)
s(655) =< s(636)*s(623)
s(654) =< s(636)*s(623)
s(656) =< s(653)
s(656) =< s(655)
s(650) =< s(627)+s(654)+s(610)
s(650) =< s(627)+s(656)+aux(192)
s(608) =< aux(192)
s(617) =< aux(187)
s(617) =< aux(191)
s(618) =< aux(191)
s(617) =< s(609)
s(626) =< s(619)*aux(191)
s(618) =< s(628)+s(617)
s(626) =< s(628)+s(617)
s(626) =< s(628)+s(609)
s(629) =< s(618)*s(622)
s(630) =< s(618)*s(622)
s(631) =< s(618)*s(623)
s(630) =< s(618)*s(623)
s(632) =< s(629)
s(632) =< s(631)
s(626) =< s(627)+s(630)+s(610)
s(626) =< s(627)+s(632)+s(608)

  with precondition: [C>=3,A>=2*C+1] 

* Chain [84]: 1*s(657)+1*s(658)+1
  Such that:s(658) =< A-2*C
s(657) =< 3*A-8*C
s(657) =< C

  with precondition: [C>=4,4*A>=11*C] 

* Chain [83]: 1*s(659)+1*s(660)+1
  Such that:s(660) =< A-2*C
s(659) =< 3*A-8*C
s(659) =< C

  with precondition: [C>=4,3*A>=8*C+1] 

* Chain [82]: 2*s(671)+1*s(672)+3*s(673)+1*s(680)+1*s(690)+1*s(692)+1*s(707)+1
  Such that:s(663) =< 2*A-4*C
s(689) =< 6*A-15*C
s(690) =< A/2-C
s(692) =< A/4-C/2
s(689) =< 9/2*A-23/2*C
s(689) =< 3*C
aux(197) =< A-2*C
aux(198) =< 2*A-5*C
aux(199) =< 5*A-13*C
aux(200) =< A/4
aux(201) =< C
aux(202) =< 2*C
aux(203) =< C/6
s(661) =< aux(198)
s(670) =< aux(199)
s(662) =< aux(198)
s(661) =< aux(201)
s(663) =< aux(199)
s(671) =< aux(197)
s(662) =< aux(197)
s(662) =< aux(201)
s(672) =< aux(201)
s(673) =< aux(201)
s(670) =< aux(202)
s(663) =< aux(202)
s(674) =< aux(203)*3+2
s(675) =< aux(200)*4+3
s(676) =< aux(203)*2-1
s(677) =< aux(200)*2-1
s(678) =< s(673)*s(674)
s(679) =< s(673)*s(675)
s(680) =< s(673)*aux(201)
s(681) =< s(678)*3
s(682) =< s(678)
s(681) =< s(679)*3
s(682) =< s(679)
s(672) =< s(682)+s(662)
s(680) =< s(682)+s(662)
s(680) =< s(682)+s(661)
s(683) =< s(672)*s(676)
s(684) =< s(672)*s(676)
s(685) =< s(672)*s(677)
s(684) =< s(672)*s(677)
s(686) =< s(683)
s(686) =< s(685)
s(680) =< s(681)+s(684)+s(670)
s(680) =< s(681)+s(686)+s(663)
s(698) =< aux(197)
s(689) =< aux(202)
s(690) =< aux(201)
s(692) =< aux(201)
s(698) =< aux(201)
s(699) =< s(661)
s(699) =< s(698)
s(707) =< s(692)*s(698)
s(690) =< s(682)+s(699)
s(707) =< s(682)+s(699)
s(707) =< s(682)+s(661)
s(710) =< s(690)*s(676)
s(711) =< s(690)*s(676)
s(712) =< s(690)*s(677)
s(711) =< s(690)*s(677)
s(713) =< s(710)
s(713) =< s(712)
s(707) =< s(681)+s(711)+s(670)
s(707) =< s(681)+s(713)+s(689)

  with precondition: [C>=5,A>=2*C+2] 

* Chain [81]: 2*s(717)+1*s(724)+3*s(725)+1*s(732)+1*s(742)+1*s(744)+1*s(753)+1*s(754)+1*s(761)+1
  Such that:s(742) =< A/2-C
s(744) =< A/4-C/2
aux(207) =< A-2*C
aux(208) =< 2*A-5*C
aux(209) =< 2*A-4*C
aux(210) =< 5*A-13*C
aux(211) =< A/4
aux(212) =< C
aux(213) =< 2*C
aux(214) =< C/6
s(715) =< aux(208)
s(716) =< aux(209)
s(740) =< aux(209)
s(723) =< aux(210)
s(717) =< aux(207)
s(750) =< aux(207)
s(742) =< aux(212)
s(744) =< aux(212)
s(715) =< aux(212)
s(751) =< aux(212)
s(750) =< aux(212)
s(740) =< aux(213)
s(723) =< aux(213)
s(751) =< aux(213)
s(740) =< s(723)
s(752) =< s(715)
s(752) =< s(750)
s(744) =< s(750)
s(742) =< s(750)
s(753) =< s(750)
s(744) =< s(751)
s(742) =< s(751)
s(754) =< s(751)
s(726) =< aux(214)*3+2
s(727) =< aux(211)*4+3
s(728) =< aux(214)*2-1
s(729) =< aux(211)*2-1
s(759) =< s(754)*s(726)
s(760) =< s(754)*s(727)
s(761) =< s(744)*s(750)
s(762) =< s(759)*3
s(763) =< s(759)
s(762) =< s(760)*3
s(763) =< s(760)
s(742) =< s(763)+s(752)
s(761) =< s(763)+s(752)
s(761) =< s(763)+s(715)
s(764) =< s(742)*s(728)
s(765) =< s(742)*s(728)
s(766) =< s(742)*s(729)
s(765) =< s(742)*s(729)
s(767) =< s(764)
s(767) =< s(766)
s(761) =< s(762)+s(765)+s(723)
s(761) =< s(762)+s(767)+s(740)
s(714) =< aux(207)
s(714) =< aux(208)
s(714) =< aux(212)
s(716) =< aux(210)
s(716) =< aux(213)
s(724) =< aux(212)
s(725) =< aux(212)
s(730) =< s(725)*s(726)
s(731) =< s(725)*s(727)
s(732) =< s(725)*aux(212)
s(733) =< s(730)*3
s(734) =< s(730)
s(733) =< s(731)*3
s(734) =< s(731)
s(724) =< s(734)+s(714)
s(732) =< s(734)+s(714)
s(732) =< s(734)+s(715)
s(735) =< s(724)*s(728)
s(736) =< s(724)*s(728)
s(737) =< s(724)*s(729)
s(736) =< s(724)*s(729)
s(738) =< s(735)
s(738) =< s(737)
s(732) =< s(733)+s(736)+s(723)
s(732) =< s(733)+s(738)+s(716)

  with precondition: [C>=7,A>=2*C+3] 

* Chain [80]: 1*s(768)+1
  Such that:s(768) =< 3*A-5*C

  with precondition: [4*A>=7*C,2*C>=A+1] 

* Chain [79]: 1*s(769)+1
  Such that:s(769) =< 3*A-5*C

  with precondition: [3*A>=5*C+1,2*C>=A+1] 

* Chain [78]: 1
  with precondition: [2*A>=3*C+1,2*C>=A+1] 

* Chain [77]: 1*s(770)+0
  Such that:s(770) =< 3*A-2*C

  with precondition: [4*A>=3*C,C>=A+1] 

* Chain [76]: 1*s(771)+0
  Such that:s(771) =< 3*A-2*C

  with precondition: [3*A>=2*C+1,C>=A+1] 

* Chain [75]: 0
  with precondition: [C>=A+1,2*A>=C+1] 

* Chain [74]: 1
  with precondition: [2*C>=A+1,A>=C+1] 

* Chain [73]: 1*s(779)+2*s(781)+1*s(786)+2*s(794)+1*s(801)+1*s(815)+1
  Such that:s(790) =< A
s(776) =< 6*A-9*C
s(776) =< 9/2*A-7*C
s(776) =< 3*C
aux(215) =< -A+2*C
aux(216) =< A-C
aux(217) =< 2*A-3*C
aux(218) =< 2*A-2*C
aux(219) =< 5*A-8*C
aux(220) =< A/2-C/2
aux(221) =< A/4
aux(222) =< A/4-C/4
aux(223) =< C
aux(224) =< 2*C
aux(225) =< C/6
s(773) =< aux(216)
s(775) =< aux(217)
s(793) =< aux(217)
s(776) =< aux(218)
s(778) =< aux(219)
s(792) =< aux(219)
s(779) =< aux(220)
s(786) =< aux(220)
s(781) =< aux(222)
s(775) =< aux(223)
s(793) =< aux(223)
s(776) =< aux(224)
s(778) =< aux(224)
s(792) =< aux(224)
s(778) =< s(792)
s(775) =< s(793)
s(773) =< s(775)
s(781) =< aux(215)
s(779) =< aux(215)
s(794) =< aux(215)
s(795) =< aux(225)*3+2
s(796) =< aux(221)*4+3
s(797) =< aux(225)*2-1
s(798) =< aux(221)*2-1
s(799) =< s(794)*s(795)
s(800) =< s(794)*s(796)
s(801) =< s(781)*aux(216)
s(802) =< s(799)*3
s(803) =< s(799)
s(802) =< s(800)*3
s(803) =< s(800)
s(779) =< s(803)+s(773)
s(801) =< s(803)+s(773)
s(801) =< s(803)+s(775)
s(804) =< s(779)*s(797)
s(805) =< s(779)*s(797)
s(806) =< s(779)*s(798)
s(805) =< s(779)*s(798)
s(807) =< s(804)
s(807) =< s(806)
s(801) =< s(802)+s(805)+s(778)
s(801) =< s(802)+s(807)+s(776)
s(790) =< aux(216)
s(786) =< aux(215)
s(815) =< s(781)*aux(216)
s(786) =< s(803)+s(790)
s(815) =< s(803)+s(790)
s(815) =< s(803)+s(775)
s(818) =< s(786)*s(797)
s(819) =< s(786)*s(797)
s(820) =< s(786)*s(798)
s(819) =< s(786)*s(798)
s(821) =< s(818)
s(821) =< s(820)
s(815) =< s(802)+s(819)+s(778)
s(815) =< s(802)+s(821)+aux(218)

  with precondition: [2*C>=A+2,A>=C+1] 

* Chain [72]: 1*s(836)+1*s(837)+2*s(838)+2*s(841)+1*s(848)+1*s(856)+1
  Such that:s(827) =< -A+2*C
s(823) =< 2*A-2*C
s(824) =< 6*A-9*C
s(829) =< A/2-C/2
s(830) =< A/4
s(831) =< A/4-C/4
s(824) =< 9/2*A-7*C
s(824) =< 3*C
s(833) =< C/6
aux(226) =< A-C
aux(227) =< 2*A-3*C
aux(228) =< 5*A-8*C
aux(229) =< C
aux(230) =< 2*C
s(826) =< aux(226)
s(822) =< aux(227)
s(825) =< aux(227)
s(823) =< aux(228)
s(832) =< aux(228)
s(822) =< aux(229)
s(825) =< aux(229)
s(823) =< aux(230)
s(824) =< aux(230)
s(832) =< aux(230)
s(836) =< s(829)
s(837) =< s(829)
s(838) =< s(831)
s(825) =< s(822)
s(840) =< s(825)
s(840) =< aux(226)
s(838) =< s(827)
s(837) =< s(827)
s(841) =< s(827)
s(842) =< s(833)*3+2
s(843) =< s(830)*4+3
s(844) =< s(833)*2-1
s(845) =< s(830)*2-1
s(846) =< s(841)*s(842)
s(847) =< s(841)*s(843)
s(848) =< s(838)*aux(226)
s(849) =< s(846)*3
s(850) =< s(846)
s(849) =< s(847)*3
s(850) =< s(847)
s(837) =< s(850)+s(840)
s(848) =< s(850)+s(840)
s(848) =< s(850)+s(825)
s(851) =< s(837)*s(844)
s(852) =< s(837)*s(844)
s(853) =< s(837)*s(845)
s(852) =< s(837)*s(845)
s(854) =< s(851)
s(854) =< s(853)
s(848) =< s(849)+s(852)+s(832)
s(848) =< s(849)+s(854)+s(824)
s(826) =< s(822)
s(823) =< s(832)
s(836) =< s(827)
s(856) =< s(838)*aux(226)
s(836) =< s(850)+s(826)
s(856) =< s(850)+s(826)
s(856) =< s(850)+s(822)
s(857) =< s(836)*s(844)
s(858) =< s(836)*s(844)
s(859) =< s(836)*s(845)
s(858) =< s(836)*s(845)
s(860) =< s(857)
s(860) =< s(859)
s(856) =< s(849)+s(858)+s(832)
s(856) =< s(849)+s(860)+s(823)

  with precondition: [2*C>=A+3,A>=C+2] 

* Chain [71]: 1*s(876)+1*s(877)+2*s(878)+2*s(881)+2*s(882)+1*s(889)+1*s(896)+1
  Such that:s(865) =< -A+2*C
s(868) =< A/2-C/2
s(869) =< A/4
s(870) =< A/4-C/4
s(872) =< C/6
aux(231) =< A-C
aux(232) =< 2*A-3*C
aux(233) =< 2*A-2*C
aux(234) =< 5*A-8*C
aux(235) =< C
aux(236) =< 2*C
s(861) =< aux(231)
s(861) =< aux(232)
s(871) =< aux(232)
s(862) =< aux(233)
s(862) =< aux(234)
s(863) =< aux(234)
s(873) =< aux(234)
s(861) =< aux(235)
s(871) =< aux(235)
s(862) =< aux(236)
s(863) =< aux(236)
s(873) =< aux(236)
s(875) =< aux(233)
s(876) =< s(868)
s(877) =< s(868)
s(878) =< s(870)
s(863) =< s(873)
s(875) =< s(863)
s(880) =< s(871)
s(880) =< aux(231)
s(878) =< aux(231)
s(877) =< aux(231)
s(881) =< aux(231)
s(878) =< s(865)
s(877) =< s(865)
s(882) =< s(865)
s(883) =< s(872)*3+2
s(884) =< s(869)*4+3
s(885) =< s(872)*2-1
s(886) =< s(869)*2-1
s(887) =< s(882)*s(883)
s(888) =< s(882)*s(884)
s(889) =< s(878)*aux(231)
s(890) =< s(887)*3
s(891) =< s(887)
s(890) =< s(888)*3
s(891) =< s(888)
s(877) =< s(891)+s(880)
s(889) =< s(891)+s(880)
s(889) =< s(891)+s(871)
s(892) =< s(877)*s(885)
s(893) =< s(877)*s(885)
s(894) =< s(877)*s(886)
s(893) =< s(877)*s(886)
s(895) =< s(892)
s(895) =< s(894)
s(889) =< s(890)+s(893)+s(863)
s(889) =< s(890)+s(895)+s(875)
s(862) =< s(873)
s(861) =< s(871)
s(876) =< aux(231)
s(876) =< s(865)
s(896) =< s(878)*aux(231)
s(876) =< s(891)+s(861)
s(896) =< s(891)+s(861)
s(896) =< s(891)+s(871)
s(897) =< s(876)*s(885)
s(898) =< s(876)*s(885)
s(899) =< s(876)*s(886)
s(898) =< s(876)*s(886)
s(900) =< s(897)
s(900) =< s(899)
s(896) =< s(890)+s(898)+s(863)
s(896) =< s(890)+s(900)+s(862)

  with precondition: [2*C>=A+4,A>=C+3] 


Closed-form bounds of start0(A,B,C,D,E): 
-------------------------------------
* Chain [104] with precondition: [3*A=5*C,A>=5] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [103] with precondition: [2*A=3*C,A>=3] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [102] with precondition: [A=2*C,A>=2] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [101] with precondition: [3*A=2*C,A>=2] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [100] with precondition: [A=C,A>=1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [99] with precondition: [2*A=C,A>=1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [98] with precondition: [0>=A] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [97] with precondition: [0>=C,A>=1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [96] with precondition: [A>=1,C>=A+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [95] with precondition: [A>=1,C>=A+2] 
    - Upper bound: A/2+(-2*A+2*C+A/4*(2*A)+A) 
    - Complexity: n^2 
* Chain [94] with precondition: [A>=2,C>=A+3] 
    - Upper bound: A/2+(-2*A+2*C+A/4*(2*A)+A) 
    - Complexity: n^2 
* Chain [93] with precondition: [A>=3,C>=A+4] 
    - Upper bound: A/2+(A/4*(2*A)+2*A+(-2*A+2*C)+A) 
    - Complexity: n^2 
* Chain [92] with precondition: [C>=1,A>=3*C] 
    - Upper bound: A-2*C 
    - Complexity: n 
* Chain [91] with precondition: [C>=1,A>=2*C+1] 
    - Upper bound: A-2*C 
    - Complexity: n 
* Chain [90] with precondition: [C>=1,A>=C+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [89] with precondition: [C>=2,2*A>=5*C] 
    - Upper bound: A-2*C+1 
    - Complexity: n 
* Chain [88] with precondition: [C>=2,A>=2*C+1] 
    - Upper bound: A-2*C+1 
    - Complexity: n 
* Chain [87] with precondition: [C>=3,3*A>=8*C] 
    - Upper bound: A-2*C+1 
    - Complexity: n 
* Chain [86] with precondition: [C>=3,2*A>=5*C+1] 
    - Upper bound: A-2*C+1 
    - Complexity: n 
* Chain [85] with precondition: [C>=3,A>=2*C+1] 
    - Upper bound: C/4+(C/2+(2*A-4*C+(4*C+1+C*C+C/4*C))) 
    - Complexity: n^2 
* Chain [84] with precondition: [C>=4,4*A>=11*C] 
    - Upper bound: 4*A-10*C+1 
    - Complexity: n 
* Chain [83] with precondition: [C>=4,3*A>=8*C+1] 
    - Upper bound: 4*A-10*C+1 
    - Complexity: n 
* Chain [82] with precondition: [C>=5,A>=2*C+2] 
    - Upper bound: A/4-C/2+(A/2-C+(2*A-4*C+(4*C+1+C*C)+(A/4-C/2)*(A-2*C))) 
    - Complexity: n^2 
* Chain [81] with precondition: [C>=7,A>=2*C+3] 
    - Upper bound: A/4-C/2+(A/2-C+(3*A-6*C+(5*C+1+C*C)+(A/4-C/2)*(A-2*C))) 
    - Complexity: n^2 
* Chain [80] with precondition: [4*A>=7*C,2*C>=A+1] 
    - Upper bound: 3*A-5*C+1 
    - Complexity: n 
* Chain [79] with precondition: [3*A>=5*C+1,2*C>=A+1] 
    - Upper bound: 3*A-5*C+1 
    - Complexity: n 
* Chain [78] with precondition: [2*A>=3*C+1,2*C>=A+1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [77] with precondition: [4*A>=3*C,C>=A+1] 
    - Upper bound: 3*A-2*C 
    - Complexity: n 
* Chain [76] with precondition: [3*A>=2*C+1,C>=A+1] 
    - Upper bound: 3*A-2*C 
    - Complexity: n 
* Chain [75] with precondition: [C>=A+1,2*A>=C+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [74] with precondition: [2*C>=A+1,A>=C+1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [73] with precondition: [2*C>=A+2,A>=C+1] 
    - Upper bound: A/2-C/2+(A-C+(-2*A+4*C+1+(A/4-C/4)*(2*A-2*C))) 
    - Complexity: n^2 
* Chain [72] with precondition: [2*C>=A+3,A>=C+2] 
    - Upper bound: A/2-C/2+(A-C+(-2*A+4*C+1+(A/4-C/4)*(2*A-2*C))) 
    - Complexity: n^2 
* Chain [71] with precondition: [2*C>=A+4,A>=C+3] 
    - Upper bound: A/2-C/2+(A-C+(2*C+1+(A/4-C/4)*(2*A-2*C))) 
    - Complexity: n^2 

### Maximum cost of start0(A,B,C,D,E): max([max([max([max([1,nat(3*A-2*C),nat(3*A-5*C)+1]),nat(-A+2*C)*2+1+nat(A-C)*2*nat(A/4-C/4)+nat(A/2-C/2)*2+nat(A/4-C/4)*2+nat(A-C)*2]),nat(A)*2*nat(A/4)+nat(-A+C)*2+nat(A/2)*2+nat(A/4)*2+nat(A)*2]),nat(A-2*C)+max([max([1,nat(3*A-8*C)+1]),nat(C)*4+1+nat(C)*nat(C)+nat(A-2*C)+max([nat(C/4)*nat(C)+nat(C/2)+nat(C/4),nat(A/4-C/2)*nat(A-2*C)+nat(A/2-C)+nat(A/4-C/2)+(nat(A-2*C)+nat(C))])])]) 
Asymptotic class: n^2 
* Total analysis performed in 1025 ms.

