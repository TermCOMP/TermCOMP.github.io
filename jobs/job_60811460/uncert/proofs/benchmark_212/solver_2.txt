MAYBE

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [f7/5]
1. non_recursive  : [exit_location/1]
2. recursive  : [f13/1]
3. non_recursive  : [f13_loop_cont/2]
4. non_recursive  : [f7_loop_cont/4]
5. non_recursive  : [f0/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into f7/5
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into f13/1
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into f7_loop_cont/4
5. SCC is partially evaluated into f0/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations f7/5 
* CE 5 is refined into CE [10] 
* CE 4 is refined into CE [11] 
* CE 3 is refined into CE [12] 
* CE 2 is refined into CE [13] 


### Cost equations --> "Loop" of f7/5 
* CEs [12] --> Loop 10 
* CEs [13] --> Loop 11 
* CEs [10] --> Loop 12 
* CEs [11] --> Loop 13 

### Ranking functions of CR f7(A,B,D,E,F) 

#### Partial ranking functions of CR f7(A,B,D,E,F) 


### Specialization of cost equations f13/1 
* CE 9 is refined into CE [14] 
* CE 8 is refined into CE [15] 


### Cost equations --> "Loop" of f13/1 
* CEs [15] --> Loop 14 
* CEs [14] --> Loop 15 

### Ranking functions of CR f13(D) 

#### Partial ranking functions of CR f13(D) 


### Specialization of cost equations f7_loop_cont/4 
* CE 7 is refined into CE [16,17] 
* CE 6 is refined into CE [18] 


### Cost equations --> "Loop" of f7_loop_cont/4 
* CEs [16] --> Loop 16 
* CEs [18] --> Loop 17 
* CEs [17] --> Loop 18 

### Ranking functions of CR f7_loop_cont(A,B,C,D) 

#### Partial ranking functions of CR f7_loop_cont(A,B,C,D) 


### Specialization of cost equations f0/3 
* CE 1 is refined into CE [19,20,21,22,23,24,25,26] 


### Cost equations --> "Loop" of f0/3 
* CEs [20,23,24,25,26] --> Loop 19 
* CEs [19,21,22] --> Loop 20 

### Ranking functions of CR f0(A,B,D) 

#### Partial ranking functions of CR f0(A,B,D) 


Computing Bounds
=====================================

#### Cost of chains of f7(A,B,D,E,F):
* Chain [[10,11]]...: 2*it(10)+0
  with precondition: [B=1] 

* Chain [[10,11],13]: 2*it(10)+0
  with precondition: [B=1,D=3,E=0,F=1] 

* Chain [[10,11],12]: 2*it(10)+0
  with precondition: [B=1,D=2] 

* Chain [13]: 0
  with precondition: [A=0,B=1,D=3,E=0,F=1] 

* Chain [12]: 0
  with precondition: [B=1,D=2] 


#### Cost of chains of f13(D):
* Chain [[14]]...: 1*it(14)+0
  with precondition: [D=2] 

* Chain [[14],15]: 1*it(14)+0
  with precondition: [D=2] 

* Chain [15]: 0
  with precondition: [D=2] 


#### Cost of chains of f7_loop_cont(A,B,C,D):
* Chain [18]...: 1*s(3)+0
  with precondition: [A=3] 

* Chain [17]: 0
  with precondition: [A=2] 

* Chain [16]: 1*s(4)+0
  with precondition: [A=3] 


#### Cost of chains of f0(A,B,D):
* Chain [20]: 1*aux(3)+0
  with precondition: [] 

* Chain [19]...: 1*aux(4)+0
  with precondition: [] 


Closed-form bounds of f0(A,B,D): 
-------------------------------------
* Chain [20] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [19]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of f0(A,B,D): inf 
Asymptotic class: infinity 
* Total analysis performed in 35 ms.

