WORST_CASE(Omega(n^2),O(n^2))

# LoAT Proof:
WORST_CASE(Omega(n^2),?)

WORST_CASE(Omega(n^1),?)
WORST_CASE(Omega(n^2),?)
Initial ITS

Start location: evalfstart

Location map:
LoAT_sink -> 0
evalfstart -> 1
evalfentryin -> 2
evalfbb4in -> 3
evalfbb2in -> 4
evalfreturnin -> 5
evalfbb1in -> 6
evalfbb3in -> 7
evalfstop -> 8

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: -2+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=1
   2: (-3+i1 == 0 /\ -i4+i5 >= 0) /\ i1'=4, i3'=1+i3, i6'=1
   3: (-3+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=5, i3'=1+i3
   4: (-4+i1 == 0 /\ -i6+i7 >= 0) /\ i1'=6, i3'=1+i3
   5: (-4+i1 == 0 /\ -1+i6-i7 >= 0) /\ i1'=7, i3'=1+i3
   6: -6+i1 == 0 /\ i1'=4, i3'=1+i3, i6'=1+i6
   7: -7+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=1+i4
   8: -5+i1 == 0 /\ i1'=8, i3'=1+i3

Dependency graph:
0 -> 1
1 -> 2, 1 -> 3
2 -> 4, 2 -> 5
3 -> 8
4 -> 6
5 -> 7
6 -> 4, 6 -> 5
7 -> 2, 7 -> 3

Chained Linear Paths

	Applied Chaining

	First rule:
	-1+i1 == 0 /\ i1'=2, i3'=1+i3
	Second rule:
	-2+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=1
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=1
	
	Applied Deletion

	Removed the following rules: 0, 1
	
	Applied Chaining

	First rule:
	(-3+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=5, i3'=1+i3
	Second rule:
	-5+i1 == 0 /\ i1'=8, i3'=1+i3
	New rule:
	(0 == 0 /\ -3+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=8, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 3, 8
	
	Applied Chaining

	First rule:
	(-4+i1 == 0 /\ -i6+i7 >= 0) /\ i1'=6, i3'=1+i3
	Second rule:
	-6+i1 == 0 /\ i1'=4, i3'=1+i3, i6'=1+i6
	New rule:
	(0 == 0 /\ -4+i1 == 0 /\ -i6+i7 >= 0) /\ i1'=4, i3'=2+i3, i6'=1+i6
	
	Applied Deletion

	Removed the following rules: 4, 6
	
	Applied Chaining

	First rule:
	(-4+i1 == 0 /\ -1+i6-i7 >= 0) /\ i1'=7, i3'=1+i3
	Second rule:
	-7+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=1+i4
	New rule:
	(0 == 0 /\ -4+i1 == 0 /\ -1+i6-i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i4
	
	Applied Deletion

	Removed the following rules: 5, 7

Start location: evalfstart

Location map:
LoAT_sink -> 0
evalfstart -> 1
evalfentryin -> 2
evalfbb4in -> 3
evalfbb2in -> 4
evalfreturnin -> 5
evalfbb1in -> 6
evalfbb3in -> 7
evalfstop -> 8

Rules:
   2: (-3+i1 == 0 /\ -i4+i5 >= 0) /\ i1'=4, i3'=1+i3, i6'=1
   9: (0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=1
  10: (0 == 0 /\ -3+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=8, i3'=2+i3
  11: (0 == 0 /\ -4+i1 == 0 /\ -i6+i7 >= 0) /\ i1'=4, i3'=2+i3, i6'=1+i6
  12: (0 == 0 /\ -4+i1 == 0 /\ -1+i6-i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i4

Dependency graph:
2 -> 11, 2 -> 12
9 -> 2, 9 -> 10
11 -> 11, 11 -> 12
12 -> 2, 12 -> 10

Preprocessed Transitions

	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=1
	New rule:
	-1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=1
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -3+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=8, i3'=2+i3
	New rule:
	(-3+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=8, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -4+i1 == 0 /\ -i6+i7 >= 0) /\ i1'=4, i3'=2+i3, i6'=1+i6
	New rule:
	(-4+i1 == 0 /\ -i6+i7 >= 0) /\ i1'=4, i3'=2+i3, i6'=1+i6
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -4+i1 == 0 /\ -1+i6-i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i4
	New rule:
	(-4+i1 == 0 /\ -1+i6-i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i4

Start location: evalfstart

Location map:
LoAT_sink -> 0
evalfstart -> 1
evalfentryin -> 2
evalfbb4in -> 3
evalfbb2in -> 4
evalfreturnin -> 5
evalfbb1in -> 6
evalfbb3in -> 7
evalfstop -> 8

Rules:
   2: (-3+i1 == 0 /\ -i4+i5 >= 0) /\ i1'=4, i3'=1+i3, i6'=1
  13: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=1
  14: (-3+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=8, i3'=2+i3
  15: (-4+i1 == 0 /\ -i6+i7 >= 0) /\ i1'=4, i3'=2+i3, i6'=1+i6
  16: (-4+i1 == 0 /\ -1+i6-i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i4

Dependency graph:
2 -> 15, 2 -> 16
13 -> 2, 13 -> 14
15 -> 15, 15 -> 16
16 -> 2, 16 -> 14

Step with 13

	Trace

	13[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 14

	Trace

	13[(-1+i1 == 0)]
	14[(-3+i1 == 0 /\ -1+i4-i5 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	
	Blocked

	{}
	{14[T]}
	
Step with 2

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -i4+i5 >= 0)]
	
	Blocked

	{}
	{14[T]}
	{}
	
Step with 15

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -i4+i5 >= 0)]
	15[(-4+i1 == 0 /\ -i6+i7 >= 0)]
	
	Blocked

	{}
	{14[T]}
	{}
	{}
	
Poly(n^1)

Accelerate

	Loop Acceleration

	Original rule:
	(-4+i1 == 0 /\ -i6+i7 >= 0) /\ i1'=4, i3'=2+i3, i6'=1+i6
	New rule:
	(-4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+it25 >= 0 /\ 1-i6-it25+i7 >= 0) /\ i1'=i1, i3'=2*it25+i3, i6'=i6+it25

		-4+i1 >= 0 [0]: unchanged
		
		4-i1 >= 0 [0]: unchanged
		
		-i6+i7 >= 0 [0]: montonic decrease yields 1-i6-it25+i7 >= 0
		
		Replacement map: {-4+i1 >= 0 -> -4+i1 >= 0, 4-i1 >= 0 -> 4-i1 >= 0, -i6+i7 >= 0 -> 1-i6-it25+i7 >= 0}

	Removed Trivial Updates

	Original rule:
	(-4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+it25 >= 0 /\ 1-i6-it25+i7 >= 0) /\ i1'=i1, i3'=2*it25+i3, i6'=i6+it25
	New rule:
	(-4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+it25 >= 0 /\ 1-i6-it25+i7 >= 0) /\ i3'=2*it25+i3, i6'=i6+it25
	
	Instantiation

	Original rule:
	(-4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+it25 >= 0 /\ 1-i6-it25+i7 >= 0) /\ i3'=2*it25+i3, i6'=i6+it25
	New rule:
	(0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -i6+i7 >= 0) /\ i3'=2-2*i6+i3+2*i7, i6'=1+i7

Start location: evalfstart

Location map:
LoAT_sink -> 0
evalfstart -> 1
evalfentryin -> 2
evalfbb4in -> 3
evalfbb2in -> 4
evalfreturnin -> 5
evalfbb1in -> 6
evalfbb3in -> 7
evalfstop -> 8

Rules:
   2: (-3+i1 == 0 /\ -i4+i5 >= 0) /\ i1'=4, i3'=1+i3, i6'=1
  13: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=1
  14: (-3+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=8, i3'=2+i3
  15: (-4+i1 == 0 /\ -i6+i7 >= 0) /\ i1'=4, i3'=2+i3, i6'=1+i6
  16: (-4+i1 == 0 /\ -1+i6-i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i4
  17: (0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -i6+i7 >= 0) /\ i3'=2-2*i6+i3+2*i7, i6'=1+i7

Dependency graph:
2 -> 15, 2 -> 16, 2 -> 17
13 -> 2, 13 -> 14
15 -> 15, 15 -> 16, 15 -> 17
16 -> 2, 16 -> 14
17 -> 15, 17 -> 16

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -i4+i5 >= 0)]
	17[(0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -i6+i7 >= 0)]
	
	Blocked

	{}
	{14[T]}
	{}
	{15[T], 17[T]}
	
Step with 16

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -i4+i5 >= 0)]
	17[(0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -i6+i7 >= 0)]
	16[(-4+i1 == 0 /\ -1+i6-i7 >= 0)]
	
	Blocked

	{}
	{14[T]}
	{}
	{15[T], 17[T]}
	{}
	
Poly(n^2)

Accelerate

		Simplified Guard

		Original rule:
		(0 >= 0 /\ 0 == 0 /\ -3+i1 == 0 /\ -i4+i5 >= 0 /\ -1+i7 >= 0) /\ i1'=3, i3'=3+i3+2*i7, i4'=1+i4, i6'=1+i7
		New rule:
		(-3+i1 == 0 /\ -i4+i5 >= 0 /\ -1+i7 >= 0) /\ i1'=3, i3'=3+i3+2*i7, i4'=1+i4, i6'=1+i7

	Loop Acceleration

	Original rule:
	(-3+i1 == 0 /\ -i4+i5 >= 0 /\ -1+i7 >= 0) /\ i1'=3, i3'=3+i3+2*i7, i4'=1+i4, i6'=1+i7
	New rule:
	(-1+it46 >= 0 /\ -3+i1 >= 0 /\ -i4+i5 >= 0 /\ 1-i4+i5-it46 >= 0 /\ -1+i7 >= 0 /\ 3-i1 >= 0) /\ i1'=i1, i3'=i3+2*i7*it46+3*it46, i4'=i4+it46, i6'=1+i7

		-3+i1 >= 0 [0]: unchanged
		
		-i4+i5 >= 0 [0]: montonic decrease yields (-i4+i5 >= 0 /\ 1-i4+i5-it46 >= 0)
		
		-1+i7 >= 0 [0]: unchanged
		
		3-i1 >= 0 [0]: unchanged
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, -i4+i5 >= 0 -> (-i4+i5 >= 0 /\ 1-i4+i5-it46 >= 0), -1+i7 >= 0 -> -1+i7 >= 0, 3-i1 >= 0 -> 3-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-1+it46 >= 0 /\ -3+i1 >= 0 /\ -i4+i5 >= 0 /\ 1-i4+i5-it46 >= 0 /\ -1+i7 >= 0 /\ 3-i1 >= 0) /\ i1'=i1, i3'=i3+2*i7*it46+3*it46, i4'=i4+it46, i6'=1+i7
	New rule:
	(-1+it46 >= 0 /\ -3+i1 >= 0 /\ -i4+i5 >= 0 /\ 1-i4+i5-it46 >= 0 /\ -1+i7 >= 0 /\ 3-i1 >= 0) /\ i3'=i3+2*i7*it46+3*it46, i4'=i4+it46, i6'=1+i7
	
	Instantiation

	Original rule:
	(-1+it46 >= 0 /\ -3+i1 >= 0 /\ -i4+i5 >= 0 /\ 1-i4+i5-it46 >= 0 /\ -1+i7 >= 0 /\ 3-i1 >= 0) /\ i3'=i3+2*i7*it46+3*it46, i4'=i4+it46, i6'=1+i7
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ -i4+i5 >= 0 /\ -1+i7 >= 0 /\ 3-i1 >= 0) /\ i3'=3+i3-3*i4-2*i7*(-1+i4-i5)+3*i5, i4'=1+i5, i6'=1+i7

Start location: evalfstart

Location map:
LoAT_sink -> 0
evalfstart -> 1
evalfentryin -> 2
evalfbb4in -> 3
evalfbb2in -> 4
evalfreturnin -> 5
evalfbb1in -> 6
evalfbb3in -> 7
evalfstop -> 8

Rules:
   2: (-3+i1 == 0 /\ -i4+i5 >= 0) /\ i1'=4, i3'=1+i3, i6'=1
  13: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=1
  14: (-3+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=8, i3'=2+i3
  15: (-4+i1 == 0 /\ -i6+i7 >= 0) /\ i1'=4, i3'=2+i3, i6'=1+i6
  16: (-4+i1 == 0 /\ -1+i6-i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i4
  17: (0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -i6+i7 >= 0) /\ i3'=2-2*i6+i3+2*i7, i6'=1+i7
  18: (0 >= 0 /\ -3+i1 >= 0 /\ -i4+i5 >= 0 /\ -1+i7 >= 0 /\ 3-i1 >= 0) /\ i3'=3+i3-3*i4-2*i7*(-1+i4-i5)+3*i5, i4'=1+i5, i6'=1+i7

Dependency graph:
2 -> 15, 2 -> 16, 2 -> 17
13 -> 2, 13 -> 14, 13 -> 18
15 -> 15, 15 -> 16, 15 -> 17
16 -> 2, 16 -> 14, 16 -> 18
17 -> 15, 17 -> 16
18 -> 2, 18 -> 14

	Trace

	13[(-1+i1 == 0)]
	18[(0 >= 0 /\ -3+i1 >= 0 /\ -i4+i5 >= 0 /\ -1+i7 >= 0 /\ 3-i1 >= 0)]
	
	Blocked

	{}
	{14[T]}
	{18[T]}
	
Step with 14

	Trace

	13[(-1+i1 == 0)]
	18[(0 >= 0 /\ -3+i1 >= 0 /\ -i4+i5 >= 0 /\ -1+i7 >= 0 /\ 3-i1 >= 0)]
	14[(-3+i1 == 0 /\ -1+i4-i5 >= 0)]
	
	Blocked

	{}
	{14[T]}
	{2[T], 18[T]}
	{}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	18[(0 >= 0 /\ -3+i1 >= 0 /\ -i4+i5 >= 0 /\ -1+i7 >= 0 /\ 3-i1 >= 0)]
	
	Blocked

	{}
	{14[T]}
	{2[T], 14[T], 18[T]}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	
	Blocked

	{}
	{14[T], 18[T]}
	
Step with 2

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -i4+i5 >= 0)]
	
	Blocked

	{}
	{14[T], 18[T]}
	{}
	
Step with 15

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -i4+i5 >= 0)]
	15[(-4+i1 == 0 /\ -i6+i7 >= 0)]
	
	Blocked

	{}
	{14[T], 18[T]}
	{}
	{}
	
Covered

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -i4+i5 >= 0)]
	
	Blocked

	{}
	{14[T], 18[T]}
	{15[T]}
	
Step with 17

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -i4+i5 >= 0)]
	17[(0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -i6+i7 >= 0)]
	
	Blocked

	{}
	{14[T], 18[T]}
	{15[T]}
	{17[T]}
	
Step with 16

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -i4+i5 >= 0)]
	17[(0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -i6+i7 >= 0)]
	16[(-4+i1 == 0 /\ -1+i6-i7 >= 0)]
	
	Blocked

	{}
	{14[T], 18[T]}
	{15[T]}
	{15[T], 17[T]}
	{}
	
Covered

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -i4+i5 >= 0)]
	17[(0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -i6+i7 >= 0)]
	
	Blocked

	{}
	{14[T], 18[T]}
	{15[T]}
	{15[T], 16[T], 17[T]}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -i4+i5 >= 0)]
	
	Blocked

	{}
	{14[T], 18[T]}
	{15[T], 17[T]}
	
Step with 16

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -i4+i5 >= 0)]
	16[(-4+i1 == 0 /\ -1+i6-i7 >= 0)]
	
	Blocked

	{}
	{14[T], 18[T]}
	{15[T], 17[T]}
	{}
	
Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -3+i1 == 0 /\ -i4+i5 >= 0 /\ -i7 >= 0) /\ i1'=3, i3'=3+i3, i4'=1+i4, i6'=1
		New rule:
		(-3+i1 == 0 /\ -i4+i5 >= 0 /\ -i7 >= 0) /\ i1'=3, i3'=3+i3, i4'=1+i4, i6'=1

	Loop Acceleration

	Original rule:
	(-3+i1 == 0 /\ -i4+i5 >= 0 /\ -i7 >= 0) /\ i1'=3, i3'=3+i3, i4'=1+i4, i6'=1
	New rule:
	(-3+i1 >= 0 /\ -i4+i5 >= 0 /\ 3-i1 >= 0 /\ -i7 >= 0 /\ -1+it97 >= 0 /\ 1-it97-i4+i5 >= 0) /\ i1'=i1, i3'=3*it97+i3, i4'=it97+i4, i6'=1

		-3+i1 >= 0 [0]: unchanged
		
		-i4+i5 >= 0 [0]: montonic decrease yields (-i4+i5 >= 0 /\ 1-it97-i4+i5 >= 0)
		
		3-i1 >= 0 [0]: unchanged
		
		-i7 >= 0 [0]: unchanged
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, -i4+i5 >= 0 -> (-i4+i5 >= 0 /\ 1-it97-i4+i5 >= 0), 3-i1 >= 0 -> 3-i1 >= 0, -i7 >= 0 -> -i7 >= 0}

	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ -i4+i5 >= 0 /\ 3-i1 >= 0 /\ -i7 >= 0 /\ -1+it97 >= 0 /\ 1-it97-i4+i5 >= 0) /\ i1'=i1, i3'=3*it97+i3, i4'=it97+i4, i6'=1
	New rule:
	(-3+i1 >= 0 /\ -i4+i5 >= 0 /\ 3-i1 >= 0 /\ -i7 >= 0 /\ -1+it97 >= 0 /\ 1-it97-i4+i5 >= 0) /\ i3'=3*it97+i3, i4'=it97+i4, i6'=1
	
	Instantiation

	Original rule:
	(-3+i1 >= 0 /\ -i4+i5 >= 0 /\ 3-i1 >= 0 /\ -i7 >= 0 /\ -1+it97 >= 0 /\ 1-it97-i4+i5 >= 0) /\ i3'=3*it97+i3, i4'=it97+i4, i6'=1
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ -i4+i5 >= 0 /\ 3-i1 >= 0 /\ -i7 >= 0) /\ i3'=3+i3-3*i4+3*i5, i4'=1+i5, i6'=1

Start location: evalfstart

Location map:
LoAT_sink -> 0
evalfstart -> 1
evalfentryin -> 2
evalfbb4in -> 3
evalfbb2in -> 4
evalfreturnin -> 5
evalfbb1in -> 6
evalfbb3in -> 7
evalfstop -> 8

Rules:
   2: (-3+i1 == 0 /\ -i4+i5 >= 0) /\ i1'=4, i3'=1+i3, i6'=1
  13: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=1
  14: (-3+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=8, i3'=2+i3
  15: (-4+i1 == 0 /\ -i6+i7 >= 0) /\ i1'=4, i3'=2+i3, i6'=1+i6
  16: (-4+i1 == 0 /\ -1+i6-i7 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i4
  17: (0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -i6+i7 >= 0) /\ i3'=2-2*i6+i3+2*i7, i6'=1+i7
  18: (0 >= 0 /\ -3+i1 >= 0 /\ -i4+i5 >= 0 /\ -1+i7 >= 0 /\ 3-i1 >= 0) /\ i3'=3+i3-3*i4-2*i7*(-1+i4-i5)+3*i5, i4'=1+i5, i6'=1+i7
  19: (0 >= 0 /\ -3+i1 >= 0 /\ -i4+i5 >= 0 /\ 3-i1 >= 0 /\ -i7 >= 0) /\ i3'=3+i3-3*i4+3*i5, i4'=1+i5, i6'=1

Dependency graph:
2 -> 15, 2 -> 16, 2 -> 17
13 -> 2, 13 -> 14, 13 -> 18, 13 -> 19
15 -> 15, 15 -> 16, 15 -> 17
16 -> 2, 16 -> 14, 16 -> 18, 16 -> 19
17 -> 15, 17 -> 16
18 -> 2, 18 -> 14, 18 -> 19
19 -> 2, 19 -> 14, 19 -> 18

	Trace

	13[(-1+i1 == 0)]
	19[(0 >= 0 /\ -3+i1 >= 0 /\ -i4+i5 >= 0 /\ 3-i1 >= 0 /\ -i7 >= 0)]
	
	Blocked

	{}
	{14[T], 18[T]}
	{19[T]}
	
Step with 14

	Trace

	13[(-1+i1 == 0)]
	19[(0 >= 0 /\ -3+i1 >= 0 /\ -i4+i5 >= 0 /\ 3-i1 >= 0 /\ -i7 >= 0)]
	14[(-3+i1 == 0 /\ -1+i4-i5 >= 0)]
	
	Blocked

	{}
	{14[T], 18[T]}
	{2[T], 18[T], 19[T]}
	{}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	19[(0 >= 0 /\ -3+i1 >= 0 /\ -i4+i5 >= 0 /\ 3-i1 >= 0 /\ -i7 >= 0)]
	
	Blocked

	{}
	{14[T], 18[T]}
	{2[T], 14[T], 18[T], 19[T]}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	
	Blocked

	{}
	{14[T], 18[T], 19[T]}
	
Step with 2

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -i4+i5 >= 0)]
	
	Blocked

	{}
	{14[T], 18[T], 19[T]}
	{}
	
Step with 15

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -i4+i5 >= 0)]
	15[(-4+i1 == 0 /\ -i6+i7 >= 0)]
	
	Blocked

	{}
	{14[T], 18[T], 19[T]}
	{}
	{}
	
Covered

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -i4+i5 >= 0)]
	
	Blocked

	{}
	{14[T], 18[T], 19[T]}
	{15[T]}
	
Step with 17

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -i4+i5 >= 0)]
	17[(0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -i6+i7 >= 0)]
	
	Blocked

	{}
	{14[T], 18[T], 19[T]}
	{15[T]}
	{17[T]}
	
Step with 16

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -i4+i5 >= 0)]
	17[(0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -i6+i7 >= 0)]
	16[(-4+i1 == 0 /\ -1+i6-i7 >= 0)]
	
	Blocked

	{}
	{14[T], 18[T], 19[T]}
	{15[T]}
	{17[T]}
	{}
	
Covered

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -i4+i5 >= 0)]
	17[(0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -i6+i7 >= 0)]
	
	Blocked

	{}
	{14[T], 18[T], 19[T]}
	{15[T]}
	{16[T], 17[T]}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -i4+i5 >= 0)]
	
	Blocked

	{}
	{14[T], 18[T], 19[T]}
	{15[T], 17[T]}
	
Step with 16

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -i4+i5 >= 0)]
	16[(-4+i1 == 0 /\ -1+i6-i7 >= 0)]
	
	Blocked

	{}
	{14[T], 18[T], 19[T]}
	{15[T], 17[T]}
	{}
	
Covered

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -i4+i5 >= 0)]
	
	Blocked

	{}
	{14[T], 18[T], 19[T]}
	{15[T], 16[T], 17[T]}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	
	Blocked

	{}
	{2[T], 14[T], 18[T], 19[T]}
	
Backtrack

	Trace

	Blocked

	{13[T]}
	
Accept

Poly(n^2)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^2))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃
  Temp_Vars:  
  Locations:  l0, l1, l2, l3, l4, l5, l6, l7
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃) → l6(X₀, X₁, X₂, X₃)
  t₄: l1(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, X₃) :|: X₂ ≤ X₃
  t₅: l1(X₀, X₁, X₂, X₃) → l3(X₀, X₁, X₂, X₃) :|: 1+X₃ ≤ X₂
  t₆: l2(X₀, X₁, X₂, X₃) → l1(X₀, X₁, 1+X₂, X₃)
  t₇: l3(X₀, X₁, X₂, X₃) → l4(1+X₀, X₁, X₂, X₃)
  t₂: l4(X₀, X₁, X₂, X₃) → l1(X₀, X₁, 1, X₃) :|: X₀ ≤ X₁
  t₃: l4(X₀, X₁, X₂, X₃) → l5(X₀, X₁, X₂, X₃) :|: 1+X₁ ≤ X₀
  t₈: l5(X₀, X₁, X₂, X₃) → l7(X₀, X₁, X₂, X₃)
  t₁: l6(X₀, X₁, X₂, X₃) → l4(1, X₁, X₂, X₃)


Preprocessing
  Found invariant 1 ≤ X₃ ∧ 2 ≤ X₂+X₃ ∧ X₂ ≤ X₃ ∧ 2 ≤ X₁+X₃ ∧ 2 ≤ X₀+X₃ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₀+X₂ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ X₀ ≤ X₁ ∧ 1 ≤ X₀ for location l2


  Found invariant 1+X₁ ≤ X₀ ∧ 1 ≤ X₀ for location l7


  Found invariant 1+X₁ ≤ X₀ ∧ 1 ≤ X₀ for location l5


  Found invariant 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₀+X₂ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ X₀ ≤ X₁ ∧ 1 ≤ X₀ for location l1


  Found invariant 1 ≤ X₀ for location l4


  Found invariant 1+X₃ ≤ X₂ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₀+X₂ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ X₀ ≤ X₁ ∧ 1 ≤ X₀ for location l3


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃
  Temp_Vars:  
  Locations:  l0, l1, l2, l3, l4, l5, l6, l7
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃) → l6(X₀, X₁, X₂, X₃)
  t₄: l1(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, X₃) :|: X₂ ≤ X₃ ∧ 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀+X₁ ∧ 2 ≤ X₀+X₂ ∧ 2 ≤ X₁+X₂ ∧ X₀ ≤ X₁
  t₅: l1(X₀, X₁, X₂, X₃) → l3(X₀, X₁, X₂, X₃) :|: 1+X₃ ≤ X₂ ∧ 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀+X₁ ∧ 2 ≤ X₀+X₂ ∧ 2 ≤ X₁+X₂ ∧ X₀ ≤ X₁
  t₆: l2(X₀, X₁, X₂, X₃) → l1(X₀, X₁, 1+X₂, X₃) :|: 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 1 ≤ X₃ ∧ 2 ≤ X₀+X₁ ∧ 2 ≤ X₀+X₂ ∧ 2 ≤ X₀+X₃ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₁+X₃ ∧ 2 ≤ X₂+X₃ ∧ X₀ ≤ X₁ ∧ X₂ ≤ X₃
  t₇: l3(X₀, X₁, X₂, X₃) → l4(1+X₀, X₁, X₂, X₃) :|: 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 1+X₃ ≤ X₂ ∧ 2 ≤ X₀+X₁ ∧ 2 ≤ X₀+X₂ ∧ 2 ≤ X₁+X₂ ∧ X₀ ≤ X₁
  t₂: l4(X₀, X₁, X₂, X₃) → l1(X₀, X₁, 1, X₃) :|: X₀ ≤ X₁ ∧ 1 ≤ X₀
  t₃: l4(X₀, X₁, X₂, X₃) → l5(X₀, X₁, X₂, X₃) :|: 1+X₁ ≤ X₀ ∧ 1 ≤ X₀
  t₈: l5(X₀, X₁, X₂, X₃) → l7(X₀, X₁, X₂, X₃) :|: 1 ≤ X₀ ∧ 1+X₁ ≤ X₀
  t₁: l6(X₀, X₁, X₂, X₃) → l4(1, X₁, X₂, X₃)


MPRF for transition t₂: l4(X₀, X₁, X₂, X₃) → l1(X₀, X₁, 1, X₃) :|: X₀ ≤ X₁ ∧ 1 ≤ X₀ of depth 1:
  new bound:
    X₁+2 {O(n)}

  MPRF:
    • l1: [X₁-X₀]
    • l2: [X₁-X₀]
    • l3: [X₁-X₀]
    • l4: [1+X₁-X₀]




MPRF for transition t₅: l1(X₀, X₁, X₂, X₃) → l3(X₀, X₁, X₂, X₃) :|: 1+X₃ ≤ X₂ ∧ 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀+X₁ ∧ 2 ≤ X₀+X₂ ∧ 2 ≤ X₁+X₂ ∧ X₀ ≤ X₁ of depth 1:
  new bound:
    X₁+2 {O(n)}

  MPRF:
    • l1: [1+X₁-X₀]
    • l2: [1+X₁-X₀]
    • l3: [X₁-X₀]
    • l4: [1+X₁-X₀]




MPRF for transition t₇: l3(X₀, X₁, X₂, X₃) → l4(1+X₀, X₁, X₂, X₃) :|: 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 1+X₃ ≤ X₂ ∧ 2 ≤ X₀+X₁ ∧ 2 ≤ X₀+X₂ ∧ 2 ≤ X₁+X₂ ∧ X₀ ≤ X₁ of depth 1:
  new bound:
    2⋅X₁+1 {O(n)}

  MPRF:
    • l1: [2⋅X₁-X₀]
    • l2: [2⋅X₁-X₀]
    • l3: [2⋅X₁-X₀]
    • l4: [2⋅X₁-X₀]




MPRF for transition t₄: l1(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, X₃) :|: X₂ ≤ X₃ ∧ 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀+X₁ ∧ 2 ≤ X₀+X₂ ∧ 2 ≤ X₁+X₂ ∧ X₀ ≤ X₁ of depth 1:
  new bound:
    2⋅X₁⋅X₃+2⋅X₃ {O(n^2)}

  MPRF:
    • l1: [1+X₃-X₂]
    • l2: [X₃-X₂]
    • l3: [X₃-X₂]
    • l4: [X₃]




MPRF for transition t₆: l2(X₀, X₁, X₂, X₃) → l1(X₀, X₁, 1+X₂, X₃) :|: 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 1 ≤ X₃ ∧ 2 ≤ X₀+X₁ ∧ 2 ≤ X₀+X₂ ∧ 2 ≤ X₀+X₃ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₁+X₃ ∧ 2 ≤ X₂+X₃ ∧ X₀ ≤ X₁ ∧ X₂ ≤ X₃ of depth 1:
  new bound:
    2⋅X₁⋅X₃+2⋅X₃ {O(n^2)}

  MPRF:
    • l1: [1+X₃-X₂]
    • l2: [1+X₃-X₂]
    • l3: [X₃-X₂]
    • l4: [X₃]




  Found invariant 1 ≤ X₃ ∧ 3 ≤ X₂+X₃ ∧ X₂ ≤ 1+X₃ ∧ 2 ≤ X₁+X₃ ∧ 2 ≤ X₀+X₃ ∧ 2 ≤ X₂ ∧ 3 ≤ X₁+X₂ ∧ 3 ≤ X₀+X₂ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ X₀ ≤ X₁ ∧ 1 ≤ X₀ for location l1_v1


  Found invariant 1 ≤ X₃ ∧ 2 ≤ X₂+X₃ ∧ X₂ ≤ X₃ ∧ 2 ≤ X₁+X₃ ∧ 2 ≤ X₀+X₃ ∧ X₂ ≤ 1 ∧ X₂ ≤ X₁ ∧ X₂ ≤ X₀ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₀+X₂ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ X₀ ≤ X₁ ∧ 1 ≤ X₀ for location l2_v1


  Found invariant 2 ≤ X₃ ∧ 4 ≤ X₂+X₃ ∧ X₂ ≤ X₃ ∧ 3 ≤ X₁+X₃ ∧ 3 ≤ X₀+X₃ ∧ 2 ≤ X₂ ∧ 3 ≤ X₁+X₂ ∧ 3 ≤ X₀+X₂ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ X₀ ≤ X₁ ∧ 1 ≤ X₀ for location l2_v2


  Found invariant 1+X₁ ≤ X₀ ∧ 1 ≤ X₀ for location l7


  Found invariant 1+X₁ ≤ X₀ ∧ 1 ≤ X₀ for location l5


  Found invariant X₂ ≤ 1 ∧ X₂ ≤ X₁ ∧ X₂ ≤ X₀ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₀+X₂ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ X₀ ≤ X₁ ∧ 1 ≤ X₀ for location l1


  Found invariant 1 ≤ X₀ for location l4


  Found invariant 1+X₃ ≤ X₂ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₀+X₂ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ X₀ ≤ X₁ ∧ 1 ≤ X₀ for location l3


All Bounds
Timebounds
  Overall timebound:4⋅X₁⋅X₃+4⋅X₁+4⋅X₃+9 {O(n^2)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: X₁+2 {O(n)}
    t₃: 1 {O(1)}
    t₄: 2⋅X₁⋅X₃+2⋅X₃ {O(n^2)}
    t₅: X₁+2 {O(n)}
    t₆: 2⋅X₁⋅X₃+2⋅X₃ {O(n^2)}
    t₇: 2⋅X₁+1 {O(n)}
    t₈: 1 {O(1)}


Costbounds
  Overall costbound: 4⋅X₁⋅X₃+4⋅X₁+4⋅X₃+9 {O(n^2)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: X₁+2 {O(n)}
    t₃: 1 {O(1)}
    t₄: 2⋅X₁⋅X₃+2⋅X₃ {O(n^2)}
    t₅: X₁+2 {O(n)}
    t₆: 2⋅X₁⋅X₃+2⋅X₃ {O(n^2)}
    t₇: 2⋅X₁+1 {O(n)}
    t₈: 1 {O(1)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₀, X₂: X₂ {O(n)}
    t₀, X₃: X₃ {O(n)}
    t₁, X₀: 1 {O(1)}
    t₁, X₁: X₁ {O(n)}
    t₁, X₂: X₂ {O(n)}
    t₁, X₃: X₃ {O(n)}
    t₂, X₀: 2⋅X₁+2 {O(n)}
    t₂, X₁: X₁ {O(n)}
    t₂, X₂: 1 {O(1)}
    t₂, X₃: X₃ {O(n)}
    t₃, X₀: 2⋅X₁+3 {O(n)}
    t₃, X₁: 2⋅X₁ {O(n)}
    t₃, X₂: 2⋅X₁⋅X₃+2⋅X₃+X₂+2 {O(n^2)}
    t₃, X₃: 2⋅X₃ {O(n)}
    t₄, X₀: 2⋅X₁+2 {O(n)}
    t₄, X₁: X₁ {O(n)}
    t₄, X₂: 2⋅X₁⋅X₃+2⋅X₃+1 {O(n^2)}
    t₄, X₃: X₃ {O(n)}
    t₅, X₀: 2⋅X₁+2 {O(n)}
    t₅, X₁: X₁ {O(n)}
    t₅, X₂: 2⋅X₁⋅X₃+2⋅X₃+2 {O(n^2)}
    t₅, X₃: X₃ {O(n)}
    t₆, X₀: 2⋅X₁+2 {O(n)}
    t₆, X₁: X₁ {O(n)}
    t₆, X₂: 2⋅X₁⋅X₃+2⋅X₃+1 {O(n^2)}
    t₆, X₃: X₃ {O(n)}
    t₇, X₀: 2⋅X₁+2 {O(n)}
    t₇, X₁: X₁ {O(n)}
    t₇, X₂: 2⋅X₁⋅X₃+2⋅X₃+2 {O(n^2)}
    t₇, X₃: X₃ {O(n)}
    t₈, X₀: 2⋅X₁+3 {O(n)}
    t₈, X₁: 2⋅X₁ {O(n)}
    t₈, X₂: 2⋅X₁⋅X₃+2⋅X₃+X₂+2 {O(n^2)}
    t₈, X₃: 2⋅X₃ {O(n)}

