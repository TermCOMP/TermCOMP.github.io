WORST_CASE(Omega(n^1),O(n^1))

# LoAT Proof:
WORST_CASE(Omega(n^1),?)

WORST_CASE(Omega(n^1),?)
Initial ITS

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_bb1_in -> 7
eval_start_bb4_in -> 8
eval_start_bb2_in -> 9
eval_start_bb3_in -> 10
eval_start_stop -> 11
eval_start_8 -> 12
eval_start_9 -> 13

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: -2+i1 == 0 /\ i1'=3, i3'=1+i3
   2: -3+i1 == 0 /\ i1'=4, i3'=1+i3
   3: -4+i1 == 0 /\ i1'=5, i3'=1+i3
   4: -5+i1 == 0 /\ i1'=6, i3'=1+i3
   5: (-6+i1 == 0 /\ -i5 < 0) /\ i1'=7, i3'=1+i3, i4'=i6
   6: (-6+i1 == 0 /\ -i5 >= 0) /\ i1'=8, i3'=1+i3
   7: (-7+i1 == 0 /\ i4 > 0) /\ i1'=9, i3'=1+i3
   8: (-7+i1 == 0 /\ i4 <= 0) /\ i1'=10, i3'=1+i3
   9: (-9+i1 == 0 /\ i4-i5 < 0) /\ i1'=7, i3'=1+i3, i4'=-1+i4
  10: (-9+i1 == 0 /\ i4-i5 >= 0) /\ i1'=7, i3'=1+i3, i4'=i4-i5
  11: -10+i1 == 0 /\ i1'=11, i3'=1+i3
  12: -8+i1 == 0 /\ i1'=12, i3'=1+i3
  13: -12+i1 == 0 /\ i1'=13, i3'=1+i3
  14: -13+i1 == 0 /\ i1'=11, i3'=1+i3

Dependency graph:
0 -> 1
1 -> 2
2 -> 3
3 -> 4
4 -> 5, 4 -> 6
5 -> 7, 5 -> 8
6 -> 12
7 -> 9, 7 -> 10
8 -> 11
9 -> 7, 9 -> 8
10 -> 7, 10 -> 8
12 -> 13
13 -> 14

Chained Linear Paths

	Applied Chaining

	First rule:
	-1+i1 == 0 /\ i1'=2, i3'=1+i3
	Second rule:
	-2+i1 == 0 /\ i1'=3, i3'=1+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 0, 1
	
	Applied Chaining

	First rule:
	-3+i1 == 0 /\ i1'=4, i3'=1+i3
	Second rule:
	-4+i1 == 0 /\ i1'=5, i3'=1+i3
	New rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 2, 3
	
	Applied Chaining

	First rule:
	(-6+i1 == 0 /\ -i5 >= 0) /\ i1'=8, i3'=1+i3
	Second rule:
	-8+i1 == 0 /\ i1'=12, i3'=1+i3
	New rule:
	(0 == 0 /\ -6+i1 == 0 /\ -i5 >= 0) /\ i1'=12, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 6, 12
	
	Applied Chaining

	First rule:
	(-7+i1 == 0 /\ i4 <= 0) /\ i1'=10, i3'=1+i3
	Second rule:
	-10+i1 == 0 /\ i1'=11, i3'=1+i3
	New rule:
	(0 == 0 /\ -7+i1 == 0 /\ i4 <= 0) /\ i1'=11, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 8, 11
	
	Applied Chaining

	First rule:
	-12+i1 == 0 /\ i1'=13, i3'=1+i3
	Second rule:
	-13+i1 == 0 /\ i1'=11, i3'=1+i3
	New rule:
	(0 == 0 /\ -12+i1 == 0) /\ i1'=11, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 13, 14
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	Second rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	
	Applied Deletion

	Removed the following rules: 15, 16
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -6+i1 == 0 /\ -i5 >= 0) /\ i1'=12, i3'=2+i3
	Second rule:
	(0 == 0 /\ -12+i1 == 0) /\ i1'=11, i3'=2+i3
	New rule:
	(0 == 0 /\ -6+i1 == 0 /\ -i5 >= 0) /\ i1'=11, i3'=4+i3
	
	Applied Deletion

	Removed the following rules: 17, 19
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	Second rule:
	-5+i1 == 0 /\ i1'=6, i3'=1+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=6, i3'=5+i3
	
	Applied Deletion

	Removed the following rules: 4, 20

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_bb1_in -> 7
eval_start_bb4_in -> 8
eval_start_bb2_in -> 9
eval_start_bb3_in -> 10
eval_start_stop -> 11
eval_start_8 -> 12
eval_start_9 -> 13

Rules:
   5: (-6+i1 == 0 /\ -i5 < 0) /\ i1'=7, i3'=1+i3, i4'=i6
   7: (-7+i1 == 0 /\ i4 > 0) /\ i1'=9, i3'=1+i3
   9: (-9+i1 == 0 /\ i4-i5 < 0) /\ i1'=7, i3'=1+i3, i4'=-1+i4
  10: (-9+i1 == 0 /\ i4-i5 >= 0) /\ i1'=7, i3'=1+i3, i4'=i4-i5
  18: (0 == 0 /\ -7+i1 == 0 /\ i4 <= 0) /\ i1'=11, i3'=2+i3
  21: (0 == 0 /\ -6+i1 == 0 /\ -i5 >= 0) /\ i1'=11, i3'=4+i3
  22: (0 == 0 /\ -1+i1 == 0) /\ i1'=6, i3'=5+i3

Dependency graph:
5 -> 7, 5 -> 18
7 -> 9, 7 -> 10
9 -> 7, 9 -> 18
10 -> 7, 10 -> 18
22 -> 5, 22 -> 21

Preprocessed Transitions

	Simplified Guard

	Original rule:
	(0 == 0 /\ -7+i1 == 0 /\ i4 <= 0) /\ i1'=11, i3'=2+i3
	New rule:
	(-7+i1 == 0 /\ i4 <= 0) /\ i1'=11, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -6+i1 == 0 /\ -i5 >= 0) /\ i1'=11, i3'=4+i3
	New rule:
	(-6+i1 == 0 /\ -i5 >= 0) /\ i1'=11, i3'=4+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=6, i3'=5+i3
	New rule:
	-1+i1 == 0 /\ i1'=6, i3'=5+i3

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_bb1_in -> 7
eval_start_bb4_in -> 8
eval_start_bb2_in -> 9
eval_start_bb3_in -> 10
eval_start_stop -> 11
eval_start_8 -> 12
eval_start_9 -> 13

Rules:
   5: (-6+i1 == 0 /\ -i5 < 0) /\ i1'=7, i3'=1+i3, i4'=i6
   7: (-7+i1 == 0 /\ i4 > 0) /\ i1'=9, i3'=1+i3
   9: (-9+i1 == 0 /\ i4-i5 < 0) /\ i1'=7, i3'=1+i3, i4'=-1+i4
  10: (-9+i1 == 0 /\ i4-i5 >= 0) /\ i1'=7, i3'=1+i3, i4'=i4-i5
  23: (-7+i1 == 0 /\ i4 <= 0) /\ i1'=11, i3'=2+i3
  24: (-6+i1 == 0 /\ -i5 >= 0) /\ i1'=11, i3'=4+i3
  25: -1+i1 == 0 /\ i1'=6, i3'=5+i3

Dependency graph:
5 -> 7, 5 -> 23
7 -> 9, 7 -> 10
9 -> 7, 9 -> 23
10 -> 7, 10 -> 23
25 -> 5, 25 -> 24

Step with 25

	Trace

	25[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 24

	Trace

	25[(-1+i1 == 0)]
	24[(-6+i1 == 0 /\ -i5 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Backtrack

	Trace

	25[(-1+i1 == 0)]
	
	Blocked

	{}
	{24[T]}
	
Step with 5

	Trace

	25[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ -i5 < 0)]
	
	Blocked

	{}
	{24[T]}
	{}
	
Step with 7

	Trace

	25[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ -i5 < 0)]
	7[(-7+i1 == 0 /\ i4 > 0)]
	
	Blocked

	{}
	{24[T]}
	{}
	{}
	
Step with 10

	Trace

	25[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ -i5 < 0)]
	7[(-7+i1 == 0 /\ i4 > 0)]
	10[(-9+i1 == 0 /\ i4-i5 >= 0)]
	
	Blocked

	{}
	{24[T]}
	{}
	{}
	{}
	
Poly(n^1)

Accelerate

	Certificate of Non-Termination

	Original rule:
	(-7+i1 == 0 /\ i4 > 0 /\ i4-i5 >= 0) /\ i1'=7, i3'=2+i3, i4'=i4-i5
	New rule:
	(-7+i1 >= 0 /\ 7-i1 >= 0 /\ i4 > 0 /\ i4-i5 >= 0 /\ i5 <= 0) /\ i1'=0

		-7+i1 >= 0 [0]: unchanged
		
		7-i1 >= 0 [0]: unchanged
		
		i4 > 0 [0]: eventual decrease yields (i4 > 0 /\ i4-i5*(-1+it26) > 0)
		
		i4 > 0 [1]: eventual increase yields (i4 > 0 /\ i5 <= 0)
		
		i4-i5 >= 0 [0]: montonic decrease yields i4-i5-i5*(-1+it26) >= 0, dependencies: i4 > 0
		
		i4-i5 >= 0 [1]: eventual increase yields (i4-i5 >= 0 /\ i5 <= 0)
		
		Replacement map: {-7+i1 >= 0 -> -7+i1 >= 0, 7-i1 >= 0 -> 7-i1 >= 0, i4 > 0 -> (i4 > 0 /\ i5 <= 0), i4-i5 >= 0 -> (i4-i5 >= 0 /\ i5 <= 0)}

		Simplified Guard

		Original rule:
		(0 == 0 /\ -7+i1 == 0 /\ i4 > 0 /\ i4-i5 >= 0) /\ i1'=7, i3'=2+i3, i4'=i4-i5
		New rule:
		(-7+i1 == 0 /\ i4 > 0 /\ i4-i5 >= 0) /\ i1'=7, i3'=2+i3, i4'=i4-i5

	Loop Acceleration

	Original rule:
	(-7+i1 == 0 /\ i4 > 0 /\ i4-i5 >= 0) /\ i1'=7, i3'=2+i3, i4'=i4-i5
	New rule:
	(-7+i1 >= 0 /\ 7-i1 >= 0 /\ i4 > 0 /\ i4-i5-i5*(-1+it26) >= 0 /\ i4-i5*(-1+it26) > 0 /\ -1+it26 >= 0) /\ i1'=i1, i3'=2*it26+i3, i4'=i4-it26*i5

		-7+i1 >= 0 [0]: unchanged
		
		7-i1 >= 0 [0]: unchanged
		
		i4 > 0 [0]: eventual decrease yields (i4 > 0 /\ i4-i5*(-1+it26) > 0)
		
		i4 > 0 [1]: eventual increase yields (i4 > 0 /\ i5 <= 0)
		
		i4-i5 >= 0 [0]: montonic decrease yields i4-i5-i5*(-1+it26) >= 0, dependencies: i4 > 0
		
		i4-i5 >= 0 [1]: eventual increase yields (i4-i5 >= 0 /\ i5 <= 0)
		
		Replacement map: {-7+i1 >= 0 -> -7+i1 >= 0, 7-i1 >= 0 -> 7-i1 >= 0, i4 > 0 -> (i4 > 0 /\ i4-i5*(-1+it26) > 0), i4-i5 >= 0 -> i4-i5-i5*(-1+it26) >= 0}

	Removed Trivial Updates

	Original rule:
	(-7+i1 >= 0 /\ 7-i1 >= 0 /\ i4 > 0 /\ i4-i5-i5*(-1+it26) >= 0 /\ i4-i5*(-1+it26) > 0 /\ -1+it26 >= 0) /\ i1'=i1, i3'=2*it26+i3, i4'=i4-it26*i5
	New rule:
	(-7+i1 >= 0 /\ 7-i1 >= 0 /\ i4 > 0 /\ i4-i5-i5*(-1+it26) >= 0 /\ i4-i5*(-1+it26) > 0 /\ -1+it26 >= 0) /\ i3'=2*it26+i3, i4'=i4-it26*i5

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_bb1_in -> 7
eval_start_bb4_in -> 8
eval_start_bb2_in -> 9
eval_start_bb3_in -> 10
eval_start_stop -> 11
eval_start_8 -> 12
eval_start_9 -> 13

Rules:
   5: (-6+i1 == 0 /\ -i5 < 0) /\ i1'=7, i3'=1+i3, i4'=i6
   7: (-7+i1 == 0 /\ i4 > 0) /\ i1'=9, i3'=1+i3
   9: (-9+i1 == 0 /\ i4-i5 < 0) /\ i1'=7, i3'=1+i3, i4'=-1+i4
  10: (-9+i1 == 0 /\ i4-i5 >= 0) /\ i1'=7, i3'=1+i3, i4'=i4-i5
  23: (-7+i1 == 0 /\ i4 <= 0) /\ i1'=11, i3'=2+i3
  24: (-6+i1 == 0 /\ -i5 >= 0) /\ i1'=11, i3'=4+i3
  25: -1+i1 == 0 /\ i1'=6, i3'=5+i3
  26: (-7+i1 >= 0 /\ 7-i1 >= 0 /\ i4 > 0 /\ i4-i5 >= 0 /\ i5 <= 0) /\ i1'=0
  27: (-7+i1 >= 0 /\ 7-i1 >= 0 /\ i4 > 0 /\ i4-i5-i5*(-1+it26) >= 0 /\ i4-i5*(-1+it26) > 0 /\ -1+it26 >= 0) /\ i3'=2*it26+i3, i4'=i4-it26*i5

Dependency graph:
5 -> 7, 5 -> 23, 5 -> 26, 5 -> 27
7 -> 9, 7 -> 10
9 -> 7, 9 -> 23, 9 -> 26, 9 -> 27
10 -> 7, 10 -> 23, 10 -> 26, 10 -> 27
25 -> 5, 25 -> 24
27 -> 7, 27 -> 23, 27 -> 26

	Trace

	25[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ -i5 < 0)]
	27[(-7+i1 >= 0 /\ 7-i1 >= 0 /\ i4 > 0 /\ i4-i5-i5*(-1+it26) >= 0 /\ i4-i5*(-1+it26) > 0 /\ -1+it26 >= 0)]
	
	Blocked

	{}
	{24[T]}
	{}
	{27[T]}
	
Step with 23

	Trace

	25[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ -i5 < 0)]
	27[(-7+i1 >= 0 /\ 7-i1 >= 0 /\ i4 > 0 /\ i4-i5-i5*(-1+it26) >= 0 /\ i4-i5*(-1+it26) > 0 /\ -1+it26 >= 0)]
	23[(-7+i1 == 0 /\ i4 <= 0)]
	
	Blocked

	{}
	{24[T]}
	{}
	{26[T], 27[T]}
	{}
	
Backtrack

	Trace

	25[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ -i5 < 0)]
	27[(-7+i1 >= 0 /\ 7-i1 >= 0 /\ i4 > 0 /\ i4-i5-i5*(-1+it26) >= 0 /\ i4-i5*(-1+it26) > 0 /\ -1+it26 >= 0)]
	
	Blocked

	{}
	{24[T]}
	{}
	{23[T], 26[T], 27[T]}
	
Step with 7

	Trace

	25[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ -i5 < 0)]
	27[(-7+i1 >= 0 /\ 7-i1 >= 0 /\ i4 > 0 /\ i4-i5-i5*(-1+it26) >= 0 /\ i4-i5*(-1+it26) > 0 /\ -1+it26 >= 0)]
	7[(-7+i1 == 0 /\ i4 > 0)]
	
	Blocked

	{}
	{24[T]}
	{}
	{23[T], 26[T], 27[T]}
	{}
	
Step with 10

	Trace

	25[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ -i5 < 0)]
	27[(-7+i1 >= 0 /\ 7-i1 >= 0 /\ i4 > 0 /\ i4-i5-i5*(-1+it26) >= 0 /\ i4-i5*(-1+it26) > 0 /\ -1+it26 >= 0)]
	7[(-7+i1 == 0 /\ i4 > 0)]
	10[(-9+i1 == 0 /\ i4-i5 >= 0)]
	
	Blocked

	{}
	{24[T]}
	{}
	{23[T], 26[T], 27[T]}
	{}
	{}
	
Covered

	Trace

	25[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ -i5 < 0)]
	27[(-7+i1 >= 0 /\ 7-i1 >= 0 /\ i4 > 0 /\ i4-i5-i5*(-1+it26) >= 0 /\ i4-i5*(-1+it26) > 0 /\ -1+it26 >= 0)]
	7[(-7+i1 == 0 /\ i4 > 0)]
	
	Blocked

	{}
	{24[T]}
	{}
	{23[T], 26[T], 27[T]}
	{10[T]}
	
Step with 9

	Trace

	25[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ -i5 < 0)]
	27[(-7+i1 >= 0 /\ 7-i1 >= 0 /\ i4 > 0 /\ i4-i5-i5*(-1+it26) >= 0 /\ i4-i5*(-1+it26) > 0 /\ -1+it26 >= 0)]
	7[(-7+i1 == 0 /\ i4 > 0)]
	9[(-9+i1 == 0 /\ i4-i5 < 0)]
	
	Blocked

	{}
	{24[T]}
	{}
	{23[T], 26[T], 27[T]}
	{10[T]}
	{}
	
Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -7+i1 == 0 /\ i4 > 0 /\ i4-i5 < 0) /\ i1'=7, i3'=2+i3, i4'=-1+i4
		New rule:
		(-7+i1 == 0 /\ i4 > 0 /\ i4-i5 < 0) /\ i1'=7, i3'=2+i3, i4'=-1+i4

	Loop Acceleration

	Original rule:
	(-7+i1 == 0 /\ i4 > 0 /\ i4-i5 < 0) /\ i1'=7, i3'=2+i3, i4'=-1+i4
	New rule:
	(-i4+i5 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ 1-it127+i4 > 0 /\ -1+it127 >= 0) /\ i1'=i1, i3'=i3+2*it127, i4'=-it127+i4

		-i4+i5 > 0 [0]: monotonic increase yields -i4+i5 > 0
		
		-7+i1 >= 0 [0]: unchanged
		
		7-i1 >= 0 [0]: unchanged
		
		i4 > 0 [0]: montonic decrease yields 1-it127+i4 > 0
		
		Replacement map: {-i4+i5 > 0 -> -i4+i5 > 0, -7+i1 >= 0 -> -7+i1 >= 0, 7-i1 >= 0 -> 7-i1 >= 0, i4 > 0 -> 1-it127+i4 > 0}

	Removed Trivial Updates

	Original rule:
	(-i4+i5 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ 1-it127+i4 > 0 /\ -1+it127 >= 0) /\ i1'=i1, i3'=i3+2*it127, i4'=-it127+i4
	New rule:
	(-i4+i5 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ 1-it127+i4 > 0 /\ -1+it127 >= 0) /\ i3'=i3+2*it127, i4'=-it127+i4
	
	Instantiation

	Original rule:
	(-i4+i5 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ 1-it127+i4 > 0 /\ -1+it127 >= 0) /\ i3'=i3+2*it127, i4'=-it127+i4
	New rule:
	(1 > 0 /\ -i4+i5 > 0 /\ -1+i4 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0) /\ i3'=i3+2*i4, i4'=0

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_bb1_in -> 7
eval_start_bb4_in -> 8
eval_start_bb2_in -> 9
eval_start_bb3_in -> 10
eval_start_stop -> 11
eval_start_8 -> 12
eval_start_9 -> 13

Rules:
   5: (-6+i1 == 0 /\ -i5 < 0) /\ i1'=7, i3'=1+i3, i4'=i6
   7: (-7+i1 == 0 /\ i4 > 0) /\ i1'=9, i3'=1+i3
   9: (-9+i1 == 0 /\ i4-i5 < 0) /\ i1'=7, i3'=1+i3, i4'=-1+i4
  10: (-9+i1 == 0 /\ i4-i5 >= 0) /\ i1'=7, i3'=1+i3, i4'=i4-i5
  23: (-7+i1 == 0 /\ i4 <= 0) /\ i1'=11, i3'=2+i3
  24: (-6+i1 == 0 /\ -i5 >= 0) /\ i1'=11, i3'=4+i3
  25: -1+i1 == 0 /\ i1'=6, i3'=5+i3
  26: (-7+i1 >= 0 /\ 7-i1 >= 0 /\ i4 > 0 /\ i4-i5 >= 0 /\ i5 <= 0) /\ i1'=0
  27: (-7+i1 >= 0 /\ 7-i1 >= 0 /\ i4 > 0 /\ i4-i5-i5*(-1+it26) >= 0 /\ i4-i5*(-1+it26) > 0 /\ -1+it26 >= 0) /\ i3'=2*it26+i3, i4'=i4-it26*i5
  28: (1 > 0 /\ -i4+i5 > 0 /\ -1+i4 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0) /\ i3'=i3+2*i4, i4'=0

Dependency graph:
5 -> 7, 5 -> 23, 5 -> 26, 5 -> 27, 5 -> 28
7 -> 9, 7 -> 10
9 -> 7, 9 -> 23, 9 -> 26, 9 -> 27, 9 -> 28
10 -> 7, 10 -> 23, 10 -> 26, 10 -> 27, 10 -> 28
25 -> 5, 25 -> 24
27 -> 7, 27 -> 23, 27 -> 26, 27 -> 28
28 -> 7, 28 -> 23, 28 -> 26, 28 -> 27

	Trace

	25[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ -i5 < 0)]
	27[(-7+i1 >= 0 /\ 7-i1 >= 0 /\ i4 > 0 /\ i4-i5-i5*(-1+it26) >= 0 /\ i4-i5*(-1+it26) > 0 /\ -1+it26 >= 0)]
	28[(1 > 0 /\ -i4+i5 > 0 /\ -1+i4 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0)]
	
	Blocked

	{}
	{24[T]}
	{}
	{23[T], 26[T], 27[T]}
	{28[T]}
	
Step with 23

	Trace

	25[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ -i5 < 0)]
	27[(-7+i1 >= 0 /\ 7-i1 >= 0 /\ i4 > 0 /\ i4-i5-i5*(-1+it26) >= 0 /\ i4-i5*(-1+it26) > 0 /\ -1+it26 >= 0)]
	28[(1 > 0 /\ -i4+i5 > 0 /\ -1+i4 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0)]
	23[(-7+i1 == 0 /\ i4 <= 0)]
	
	Blocked

	{}
	{24[T]}
	{}
	{23[T], 26[T], 27[T]}
	{7[T], 26[T], 28[T]}
	{}
	
Backtrack

	Trace

	25[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ -i5 < 0)]
	27[(-7+i1 >= 0 /\ 7-i1 >= 0 /\ i4 > 0 /\ i4-i5-i5*(-1+it26) >= 0 /\ i4-i5*(-1+it26) > 0 /\ -1+it26 >= 0)]
	28[(1 > 0 /\ -i4+i5 > 0 /\ -1+i4 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0)]
	
	Blocked

	{}
	{24[T]}
	{}
	{23[T], 26[T], 27[T]}
	{7[T], 23[T], 26[T], 28[T]}
	
Backtrack

	Trace

	25[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ -i5 < 0)]
	27[(-7+i1 >= 0 /\ 7-i1 >= 0 /\ i4 > 0 /\ i4-i5-i5*(-1+it26) >= 0 /\ i4-i5*(-1+it26) > 0 /\ -1+it26 >= 0)]
	
	Blocked

	{}
	{24[T]}
	{}
	{23[T], 26[T], 27[T], 28[T]}
	
Step with 7

	Trace

	25[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ -i5 < 0)]
	27[(-7+i1 >= 0 /\ 7-i1 >= 0 /\ i4 > 0 /\ i4-i5-i5*(-1+it26) >= 0 /\ i4-i5*(-1+it26) > 0 /\ -1+it26 >= 0)]
	7[(-7+i1 == 0 /\ i4 > 0)]
	
	Blocked

	{}
	{24[T]}
	{}
	{23[T], 26[T], 27[T], 28[T]}
	{}
	
Step with 10

	Trace

	25[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ -i5 < 0)]
	27[(-7+i1 >= 0 /\ 7-i1 >= 0 /\ i4 > 0 /\ i4-i5-i5*(-1+it26) >= 0 /\ i4-i5*(-1+it26) > 0 /\ -1+it26 >= 0)]
	7[(-7+i1 == 0 /\ i4 > 0)]
	10[(-9+i1 == 0 /\ i4-i5 >= 0)]
	
	Blocked

	{}
	{24[T]}
	{}
	{23[T], 26[T], 27[T], 28[T]}
	{}
	{}
	
Covered

	Trace

	25[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ -i5 < 0)]
	27[(-7+i1 >= 0 /\ 7-i1 >= 0 /\ i4 > 0 /\ i4-i5-i5*(-1+it26) >= 0 /\ i4-i5*(-1+it26) > 0 /\ -1+it26 >= 0)]
	7[(-7+i1 == 0 /\ i4 > 0)]
	
	Blocked

	{}
	{24[T]}
	{}
	{23[T], 26[T], 27[T], 28[T]}
	{10[T]}
	
Step with 9

	Trace

	25[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ -i5 < 0)]
	27[(-7+i1 >= 0 /\ 7-i1 >= 0 /\ i4 > 0 /\ i4-i5-i5*(-1+it26) >= 0 /\ i4-i5*(-1+it26) > 0 /\ -1+it26 >= 0)]
	7[(-7+i1 == 0 /\ i4 > 0)]
	9[(-9+i1 == 0 /\ i4-i5 < 0)]
	
	Blocked

	{}
	{24[T]}
	{}
	{23[T], 26[T], 27[T], 28[T]}
	{10[T]}
	{}
	
Covered

	Trace

	25[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ -i5 < 0)]
	27[(-7+i1 >= 0 /\ 7-i1 >= 0 /\ i4 > 0 /\ i4-i5-i5*(-1+it26) >= 0 /\ i4-i5*(-1+it26) > 0 /\ -1+it26 >= 0)]
	7[(-7+i1 == 0 /\ i4 > 0)]
	
	Blocked

	{}
	{24[T]}
	{}
	{23[T], 26[T], 27[T], 28[T]}
	{9[T], 10[T]}
	
Backtrack

	Trace

	25[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ -i5 < 0)]
	27[(-7+i1 >= 0 /\ 7-i1 >= 0 /\ i4 > 0 /\ i4-i5-i5*(-1+it26) >= 0 /\ i4-i5*(-1+it26) > 0 /\ -1+it26 >= 0)]
	
	Blocked

	{}
	{24[T]}
	{}
	{7[T], 23[T], 26[T], 27[T], 28[T]}
	
Backtrack

	Trace

	25[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ -i5 < 0)]
	
	Blocked

	{}
	{24[T]}
	{27[T]}
	
Step with 23

	Trace

	25[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ -i5 < 0)]
	23[(-7+i1 == 0 /\ i4 <= 0)]
	
	Blocked

	{}
	{24[T]}
	{26[T], 27[T]}
	{}
	
Backtrack

	Trace

	25[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ -i5 < 0)]
	
	Blocked

	{}
	{24[T]}
	{23[T], 26[T], 27[T]}
	
Step with 7

	Trace

	25[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ -i5 < 0)]
	7[(-7+i1 == 0 /\ i4 > 0)]
	
	Blocked

	{}
	{24[T]}
	{23[T], 26[T], 27[T]}
	{}
	
Step with 9

	Trace

	25[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ -i5 < 0)]
	7[(-7+i1 == 0 /\ i4 > 0)]
	9[(-9+i1 == 0 /\ i4-i5 < 0)]
	
	Blocked

	{}
	{24[T]}
	{23[T], 26[T], 27[T]}
	{}
	{}
	
Covered

	Trace

	25[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ -i5 < 0)]
	7[(-7+i1 == 0 /\ i4 > 0)]
	
	Blocked

	{}
	{24[T]}
	{23[T], 26[T], 27[T]}
	{9[T]}
	
Step with 10

	Trace

	25[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ -i5 < 0)]
	7[(-7+i1 == 0 /\ i4 > 0)]
	10[(-9+i1 == 0 /\ i4-i5 >= 0)]
	
	Blocked

	{}
	{24[T]}
	{23[T], 26[T], 27[T]}
	{9[T]}
	{}
	
Covered

	Trace

	25[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ -i5 < 0)]
	7[(-7+i1 == 0 /\ i4 > 0)]
	
	Blocked

	{}
	{24[T]}
	{23[T], 26[T], 27[T]}
	{9[T], 10[T]}
	
Backtrack

	Trace

	25[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ -i5 < 0)]
	
	Blocked

	{}
	{24[T]}
	{7[T], 23[T], 26[T], 27[T]}
	
Step with 28

	Trace

	25[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ -i5 < 0)]
	28[(1 > 0 /\ -i4+i5 > 0 /\ -1+i4 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0)]
	
	Blocked

	{}
	{24[T]}
	{7[T], 23[T], 26[T], 27[T]}
	{28[T]}
	
Step with 23

	Trace

	25[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ -i5 < 0)]
	28[(1 > 0 /\ -i4+i5 > 0 /\ -1+i4 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0)]
	23[(-7+i1 == 0 /\ i4 <= 0)]
	
	Blocked

	{}
	{24[T]}
	{7[T], 23[T], 26[T], 27[T]}
	{7[T], 26[T], 27[T], 28[T]}
	{}
	
Backtrack

	Trace

	25[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ -i5 < 0)]
	28[(1 > 0 /\ -i4+i5 > 0 /\ -1+i4 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0)]
	
	Blocked

	{}
	{24[T]}
	{7[T], 23[T], 26[T], 27[T]}
	{7[T], 23[T], 26[T], 27[T], 28[T]}
	
Backtrack

	Trace

	25[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ -i5 < 0)]
	
	Blocked

	{}
	{24[T]}
	{7[T], 23[T], 26[T], 27[T], 28[T]}
	
Backtrack

	Trace

	25[(-1+i1 == 0)]
	
	Blocked

	{}
	{5[T], 24[T]}
	
Backtrack

	Trace

	Blocked

	{25[T]}
	
Accept

Poly(n^1)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  
  Locations:  l0, l1, l10, l11, l12, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂) → l2(X₀, X₁, X₂)
  t₃: l1(X₀, X₁, X₂) → l4(X₀, X₁, X₂)
  t₉: l11(X₀, X₁, X₂) → l6(X₀-1, X₁, X₂) :|: 1+X₀ ≤ X₁
  t₁₀: l11(X₀, X₁, X₂) → l6(X₀-X₁, X₁, X₂) :|: X₁ ≤ X₀
  t₁₁: l12(X₀, X₁, X₂) → l10(X₀, X₁, X₂)
  t₁: l2(X₀, X₁, X₂) → l3(X₀, X₁, X₂)
  t₂: l3(X₀, X₁, X₂) → l1(X₀, X₁, X₂)
  t₄: l4(X₀, X₁, X₂) → l5(X₀, X₁, X₂)
  t₅: l5(X₀, X₁, X₂) → l6(X₂, X₁, X₂) :|: 1 ≤ X₁
  t₆: l5(X₀, X₁, X₂) → l7(X₀, X₁, X₂) :|: X₁ ≤ 0
  t₇: l6(X₀, X₁, X₂) → l11(X₀, X₁, X₂) :|: 1 ≤ X₀
  t₈: l6(X₀, X₁, X₂) → l12(X₀, X₁, X₂) :|: X₀ ≤ 0
  t₁₂: l7(X₀, X₁, X₂) → l9(X₀, X₁, X₂)
  t₁₄: l8(X₀, X₁, X₂) → l10(X₀, X₁, X₂)
  t₁₃: l9(X₀, X₁, X₂) → l8(X₀, X₁, X₂)


Preprocessing
  Found invariant 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l11


  Found invariant X₀ ≤ X₂ ∧ 1 ≤ X₁ for location l6


  Found invariant X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1+X₀ ≤ X₁ ∧ X₀ ≤ 0 for location l12


  Found invariant X₁ ≤ 0 for location l7


  Found invariant X₁ ≤ 0 for location l8


  Found invariant X₁ ≤ 0 for location l9


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  
  Locations:  l0, l1, l10, l11, l12, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂) → l2(X₀, X₁, X₂)
  t₃: l1(X₀, X₁, X₂) → l4(X₀, X₁, X₂)
  t₉: l11(X₀, X₁, X₂) → l6(X₀-1, X₁, X₂) :|: 1+X₀ ≤ X₁ ∧ 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀+X₁ ∧ 2 ≤ X₀+X₂ ∧ 2 ≤ X₁+X₂ ∧ X₀ ≤ X₂
  t₁₀: l11(X₀, X₁, X₂) → l6(X₀-X₁, X₁, X₂) :|: X₁ ≤ X₀ ∧ 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀+X₁ ∧ 2 ≤ X₀+X₂ ∧ 2 ≤ X₁+X₂ ∧ X₀ ≤ X₂
  t₁₁: l12(X₀, X₁, X₂) → l10(X₀, X₁, X₂) :|: 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ X₀ ≤ 0 ∧ X₀ ≤ X₂
  t₁: l2(X₀, X₁, X₂) → l3(X₀, X₁, X₂)
  t₂: l3(X₀, X₁, X₂) → l1(X₀, X₁, X₂)
  t₄: l4(X₀, X₁, X₂) → l5(X₀, X₁, X₂)
  t₅: l5(X₀, X₁, X₂) → l6(X₂, X₁, X₂) :|: 1 ≤ X₁
  t₆: l5(X₀, X₁, X₂) → l7(X₀, X₁, X₂) :|: X₁ ≤ 0
  t₇: l6(X₀, X₁, X₂) → l11(X₀, X₁, X₂) :|: 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ X₀ ≤ X₂
  t₈: l6(X₀, X₁, X₂) → l12(X₀, X₁, X₂) :|: X₀ ≤ 0 ∧ 1 ≤ X₁ ∧ X₀ ≤ X₂
  t₁₂: l7(X₀, X₁, X₂) → l9(X₀, X₁, X₂) :|: X₁ ≤ 0
  t₁₄: l8(X₀, X₁, X₂) → l10(X₀, X₁, X₂) :|: X₁ ≤ 0
  t₁₃: l9(X₀, X₁, X₂) → l8(X₀, X₁, X₂) :|: X₁ ≤ 0


MPRF for transition t₇: l6(X₀, X₁, X₂) → l11(X₀, X₁, X₂) :|: 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ X₀ ≤ X₂ of depth 1:
  new bound:
    X₂ {O(n)}

  MPRF:
    • l11: [X₀-1]
    • l6: [X₀]




MPRF for transition t₉: l11(X₀, X₁, X₂) → l6(X₀-1, X₁, X₂) :|: 1+X₀ ≤ X₁ ∧ 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀+X₁ ∧ 2 ≤ X₀+X₂ ∧ 2 ≤ X₁+X₂ ∧ X₀ ≤ X₂ of depth 1:
  new bound:
    X₂ {O(n)}

  MPRF:
    • l11: [X₀]
    • l6: [X₀]




MPRF for transition t₁₀: l11(X₀, X₁, X₂) → l6(X₀-X₁, X₁, X₂) :|: X₁ ≤ X₀ ∧ 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀+X₁ ∧ 2 ≤ X₀+X₂ ∧ 2 ≤ X₁+X₂ ∧ X₀ ≤ X₂ of depth 1:
  new bound:
    X₂ {O(n)}

  MPRF:
    • l11: [X₀]
    • l6: [X₀]




All Bounds
Timebounds
  Overall timebound:3⋅X₂+12 {O(n)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: X₂ {O(n)}
    t₈: 1 {O(1)}
    t₉: X₂ {O(n)}
    t₁₀: X₂ {O(n)}
    t₁₁: 1 {O(1)}
    t₁₂: 1 {O(1)}
    t₁₃: 1 {O(1)}
    t₁₄: 1 {O(1)}


Costbounds
  Overall costbound: 3⋅X₂+12 {O(n)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: X₂ {O(n)}
    t₈: 1 {O(1)}
    t₉: X₂ {O(n)}
    t₁₀: X₂ {O(n)}
    t₁₁: 1 {O(1)}
    t₁₂: 1 {O(1)}
    t₁₃: 1 {O(1)}
    t₁₄: 1 {O(1)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₀, X₂: X₂ {O(n)}
    t₁, X₀: X₀ {O(n)}
    t₁, X₁: X₁ {O(n)}
    t₁, X₂: X₂ {O(n)}
    t₂, X₀: X₀ {O(n)}
    t₂, X₁: X₁ {O(n)}
    t₂, X₂: X₂ {O(n)}
    t₃, X₀: X₀ {O(n)}
    t₃, X₁: X₁ {O(n)}
    t₃, X₂: X₂ {O(n)}
    t₄, X₀: X₀ {O(n)}
    t₄, X₁: X₁ {O(n)}
    t₄, X₂: X₂ {O(n)}
    t₅, X₀: X₂ {O(n)}
    t₅, X₁: X₁ {O(n)}
    t₅, X₂: X₂ {O(n)}
    t₆, X₀: X₀ {O(n)}
    t₆, X₁: X₁ {O(n)}
    t₆, X₂: X₂ {O(n)}
    t₇, X₀: X₂ {O(n)}
    t₇, X₁: X₁ {O(n)}
    t₇, X₂: X₂ {O(n)}
    t₈, X₀: 3⋅X₂ {O(n)}
    t₈, X₁: 3⋅X₁ {O(n)}
    t₈, X₂: 3⋅X₂ {O(n)}
    t₉, X₀: X₂ {O(n)}
    t₉, X₁: X₁ {O(n)}
    t₉, X₂: X₂ {O(n)}
    t₁₀, X₀: X₂ {O(n)}
    t₁₀, X₁: X₁ {O(n)}
    t₁₀, X₂: X₂ {O(n)}
    t₁₁, X₀: 3⋅X₂ {O(n)}
    t₁₁, X₁: 3⋅X₁ {O(n)}
    t₁₁, X₂: 3⋅X₂ {O(n)}
    t₁₂, X₀: X₀ {O(n)}
    t₁₂, X₁: X₁ {O(n)}
    t₁₂, X₂: X₂ {O(n)}
    t₁₃, X₀: X₀ {O(n)}
    t₁₃, X₁: X₁ {O(n)}
    t₁₃, X₂: X₂ {O(n)}
    t₁₄, X₀: X₀ {O(n)}
    t₁₄, X₁: X₁ {O(n)}
    t₁₄, X₂: X₂ {O(n)}

