WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [f8/8]
1. recursive  : [f16/8,f4/8,f8_loop_cont/9]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [f20/5]
4. non_recursive  : [f4_loop_cont/6]
5. non_recursive  : [f0/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into f8/8
1. SCC is partially evaluated into f4/8
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into f4_loop_cont/6
5. SCC is partially evaluated into f0/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations f8/8 
* CE 13 is refined into CE [14] 
* CE 10 is refined into CE [15] 
* CE 9 is refined into CE [16] 
* CE 12 is refined into CE [17] 
* CE 11 is refined into CE [18] 


### Cost equations --> "Loop" of f8/8 
* CEs [17] --> Loop 14 
* CEs [18] --> Loop 15 
* CEs [14] --> Loop 16 
* CEs [15] --> Loop 17 
* CEs [16] --> Loop 18 

### Ranking functions of CR f8(A,B,C,D,F,G,H,I) 
* RF of phase [14,15]: [-A+B]

#### Partial ranking functions of CR f8(A,B,C,D,F,G,H,I) 
* Partial RF of phase [14,15]:
  - RF of loop [14:1,15:1]:
    -A+B


### Specialization of cost equations f4/8 
* CE 5 is refined into CE [19] 
* CE 4 is refined into CE [20,21] 
* CE 6 is refined into CE [22] 
* CE 2 is refined into CE [23,24] 
* CE 3 is refined into CE [25,26] 


### Cost equations --> "Loop" of f4/8 
* CEs [24] --> Loop 19 
* CEs [23] --> Loop 20 
* CEs [26] --> Loop 21 
* CEs [25] --> Loop 22 
* CEs [19] --> Loop 23 
* CEs [21] --> Loop 24 
* CEs [20] --> Loop 25 
* CEs [22] --> Loop 26 

### Ranking functions of CR f4(A,B,C,D,F,G,H,I) 
* RF of phase [20,22]: [-A+B-1]

#### Partial ranking functions of CR f4(A,B,C,D,F,G,H,I) 
* Partial RF of phase [20,22]:
  - RF of loop [20:1]:
    -A+B-2
  - RF of loop [22:1]:
    -A+B-1


### Specialization of cost equations f4_loop_cont/6 
* CE 7 is refined into CE [27] 
* CE 8 is refined into CE [28] 


### Cost equations --> "Loop" of f4_loop_cont/6 
* CEs [27] --> Loop 27 
* CEs [28] --> Loop 28 

### Ranking functions of CR f4_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR f4_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations f0/5 
* CE 1 is refined into CE [29,30,31,32,33,34,35,36,37,38] 


### Cost equations --> "Loop" of f0/5 
* CEs [33,37] --> Loop 29 
* CEs [32,34,36] --> Loop 30 
* CEs [31] --> Loop 31 
* CEs [38] --> Loop 32 
* CEs [29,35] --> Loop 33 
* CEs [30] --> Loop 34 

### Ranking functions of CR f0(A,B,C,D,F) 

#### Partial ranking functions of CR f0(A,B,C,D,F) 


Computing Bounds
=====================================

#### Cost of chains of f8(A,B,C,D,F,G,H,I):
* Chain [[14,15],18]: 2*it(14)+0
  Such that:aux(1) =< -A+B
aux(2) =< -A+G
it(14) =< aux(1)
it(14) =< aux(2)

  with precondition: [F=2,I=0,A+H=C+G,C>=0,G>=A+1,B>=G+1] 

* Chain [[14,15],17]: 2*it(14)+0
  Such that:aux(3) =< -A+B
it(14) =< aux(3)

  with precondition: [F=2,B=G,A+H=B+C,C>=0,B>=A+1] 

* Chain [[14,15],16]: 2*it(14)+0
  Such that:aux(4) =< -A+B
it(14) =< aux(4)

  with precondition: [F=3,C>=0,B>=A+1] 

* Chain [18]: 0
  with precondition: [F=2,I=0,A=G,C=H,C>=0,B>=A+1] 

* Chain [17]: 0
  with precondition: [F=2,B=A,I=D,B=G,C=H,C>=0] 

* Chain [16]: 0
  with precondition: [F=3,C>=0,B>=A] 


#### Cost of chains of f4(A,B,C,D,F,G,H,I):
* Chain [[20,22],26]: 2*it(20)+2*s(7)+0
  Such that:aux(5) =< B
aux(8) =< -A+B
aux(5) =< aux(8)
it(20) =< aux(8)
s(9) =< it(20)*aux(5)
s(7) =< s(9)
s(7) =< aux(8)

  with precondition: [F=3,A>=0,B>=A+2] 

* Chain [[20,22],25]: 2*it(20)+2*s(7)+0
  Such that:aux(5) =< B
aux(9) =< -A+B
aux(5) =< aux(9)
it(20) =< aux(9)
s(9) =< it(20)*aux(5)
s(7) =< s(9)
s(7) =< aux(9)

  with precondition: [F=3,A>=0,B>=A+2] 

* Chain [[20,22],24]: 4*it(20)+2*s(7)+0
  Such that:aux(5) =< B
aux(10) =< -A+B
it(20) =< aux(10)
aux(5) =< aux(10)
s(9) =< it(20)*aux(5)
s(7) =< s(9)
s(7) =< aux(10)

  with precondition: [F=3,A>=0,B>=A+3] 

* Chain [[20,22],21,26]: 2*it(20)+2*s(7)+1
  Such that:aux(5) =< B
aux(11) =< -A+B
aux(5) =< aux(11)
it(20) =< aux(11)
s(9) =< it(20)*aux(5)
s(7) =< s(9)
s(7) =< aux(11)

  with precondition: [F=3,A>=0,B>=A+2] 

* Chain [[20,22],21,23]: 2*it(20)+2*s(7)+1
  Such that:aux(5) =< G
aux(12) =< -A+G
aux(5) =< aux(12)
it(20) =< aux(12)
s(9) =< it(20)*aux(5)
s(7) =< s(9)
s(7) =< aux(12)

  with precondition: [F=4,H=0,I=0,B=G,A>=0,B>=A+2] 

* Chain [[20,22],19,26]: 4*it(20)+2*s(7)+1
  Such that:aux(5) =< B
aux(13) =< -A+B
it(20) =< aux(13)
aux(5) =< aux(13)
s(9) =< it(20)*aux(5)
s(7) =< s(9)
s(7) =< aux(13)

  with precondition: [F=3,A>=0,B>=A+3] 

* Chain [[20,22],19,25]: 4*it(20)+2*s(7)+1
  Such that:aux(5) =< B
aux(14) =< -A+B
it(20) =< aux(14)
aux(5) =< aux(14)
s(9) =< it(20)*aux(5)
s(7) =< s(9)
s(7) =< aux(14)

  with precondition: [F=3,A>=0,B>=A+3] 

* Chain [[20,22],19,21,26]: 4*it(20)+2*s(7)+2
  Such that:aux(5) =< B
aux(15) =< -A+B
it(20) =< aux(15)
aux(5) =< aux(15)
s(9) =< it(20)*aux(5)
s(7) =< s(9)
s(7) =< aux(15)

  with precondition: [F=3,A>=0,B>=A+3] 

* Chain [[20,22],19,21,23]: 4*it(20)+2*s(7)+2
  Such that:aux(5) =< G
aux(16) =< -A+G
it(20) =< aux(16)
aux(5) =< aux(16)
s(9) =< it(20)*aux(5)
s(7) =< s(9)
s(7) =< aux(16)

  with precondition: [F=4,H=0,B=G,A>=0,B>=A+3] 

* Chain [26]: 0
  with precondition: [F=3,A>=0] 

* Chain [25]: 0
  with precondition: [F=3,A>=0,B>=A+1] 

* Chain [24]: 2*s(11)+0
  Such that:s(10) =< -A+B
s(11) =< s(10)

  with precondition: [F=3,A>=0,B>=A+2] 

* Chain [23]: 0
  with precondition: [F=4,H=C,I=D,A=G,A>=0,A>=B] 

* Chain [21,26]: 1
  with precondition: [F=3,B=A+1,B>=1] 

* Chain [21,23]: 1
  with precondition: [F=4,H=0,B=A+1,B=G,D=I,B>=1] 

* Chain [19,26]: 2*s(13)+1
  Such that:s(12) =< -A+B
s(13) =< s(12)

  with precondition: [F=3,A>=0,B>=A+2] 

* Chain [19,25]: 2*s(13)+1
  Such that:s(12) =< -A+B
s(13) =< s(12)

  with precondition: [F=3,A>=0,B>=A+2] 

* Chain [19,21,26]: 2*s(13)+2
  Such that:s(12) =< -A+B
s(13) =< s(12)

  with precondition: [F=3,A>=0,B>=A+2] 

* Chain [19,21,23]: 2*s(13)+2
  Such that:s(12) =< -A+B
s(13) =< s(12)

  with precondition: [F=4,H=0,B=G,A>=0,B>=A+2] 


#### Cost of chains of f4_loop_cont(A,B,C,D,E,F):
* Chain [28]: 0
  with precondition: [A=3] 

* Chain [27]: 0
  with precondition: [A=4] 


#### Cost of chains of f0(A,B,C,D,F):
* Chain [34]: 0
  with precondition: [] 

* Chain [33]: 1
  with precondition: [B=1] 

* Chain [32]: 0
  with precondition: [0>=B] 

* Chain [31]: 0
  with precondition: [B>=1] 

* Chain [30]: 18*s(60)+8*s(62)+2
  Such that:aux(23) =< B
s(60) =< aux(23)
s(61) =< s(60)*aux(23)
s(62) =< s(61)
s(62) =< aux(23)

  with precondition: [B>=2] 

* Chain [29]: 20*s(73)+10*s(75)+2
  Such that:aux(26) =< B
s(73) =< aux(26)
s(74) =< s(73)*aux(26)
s(75) =< s(74)
s(75) =< aux(26)

  with precondition: [B>=3] 


Closed-form bounds of f0(A,B,C,D,F): 
-------------------------------------
* Chain [34] with precondition: [] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [33] with precondition: [B=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [32] with precondition: [0>=B] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [31] with precondition: [B>=1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [30] with precondition: [B>=2] 
    - Upper bound: 26*B+2 
    - Complexity: n 
* Chain [29] with precondition: [B>=3] 
    - Upper bound: 30*B+2 
    - Complexity: n 

### Maximum cost of f0(A,B,C,D,F): nat(B)*30+1+1 
Asymptotic class: n 
* Total analysis performed in 219 ms.

