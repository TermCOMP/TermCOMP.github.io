WORST_CASE(Omega(n^1),?)

# LoAT Proof:
WORST_CASE(Omega(n^1),?)

WORST_CASE(Omega(n^1),?)
Initial ITS

Start location: evalspeedFails4start

Location map:
LoAT_sink -> 0
evalspeedFails4start -> 1
evalspeedFails4entryin -> 2
evalspeedFails4bb6in -> 3
evalspeedFails4bb3in -> 4
evalspeedFails4returnin -> 5
evalspeedFails4bb4in -> 6
evalspeedFails4bb5in -> 7
evalspeedFails4stop -> 8

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=1, i5'=i6, i6'=i4, i7'=i5
   2: (-2+i1 == 0 /\ -i4 >= 0) /\ i1'=3, i3'=1+i3, i4'=-1, i5'=i6, i6'=i4, i7'=i5
   3: (-3+i1 == 0 /\ -i7+i5 >= 0) /\ i1'=4, i3'=1+i3
   4: (-3+i1 == 0 /\ -1+i7-i5 >= 0) /\ i1'=5, i3'=1+i3
   5: (-4+i1 == 0 /\ -1+i6 >= 0) /\ i1'=6, i3'=1+i3
   6: (-i6 >= 0 /\ -4+i1 == 0) /\ i1'=7, i3'=1+i3
   7: -6+i1 == 0 /\ i1'=3, i3'=1+i3, i7'=i7+i4
   8: -7+i1 == 0 /\ i1'=3, i3'=1+i3, i7'=i7-i4
   9: -5+i1 == 0 /\ i1'=8, i3'=1+i3

Dependency graph:
0 -> 1, 0 -> 2
1 -> 3, 1 -> 4
2 -> 3, 2 -> 4
3 -> 5, 3 -> 6
4 -> 9
5 -> 7
6 -> 8
7 -> 3, 7 -> 4
8 -> 3, 8 -> 4

Chained Linear Paths

	Applied Chaining

	First rule:
	(-3+i1 == 0 /\ -1+i7-i5 >= 0) /\ i1'=5, i3'=1+i3
	Second rule:
	-5+i1 == 0 /\ i1'=8, i3'=1+i3
	New rule:
	(0 == 0 /\ -3+i1 == 0 /\ -1+i7-i5 >= 0) /\ i1'=8, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 4, 9
	
	Applied Chaining

	First rule:
	(-4+i1 == 0 /\ -1+i6 >= 0) /\ i1'=6, i3'=1+i3
	Second rule:
	-6+i1 == 0 /\ i1'=3, i3'=1+i3, i7'=i7+i4
	New rule:
	(0 == 0 /\ -4+i1 == 0 /\ -1+i6 >= 0) /\ i1'=3, i3'=2+i3, i7'=i7+i4
	
	Applied Deletion

	Removed the following rules: 5, 7
	
	Applied Chaining

	First rule:
	(-i6 >= 0 /\ -4+i1 == 0) /\ i1'=7, i3'=1+i3
	Second rule:
	-7+i1 == 0 /\ i1'=3, i3'=1+i3, i7'=i7-i4
	New rule:
	(0 == 0 /\ -i6 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=2+i3, i7'=i7-i4
	
	Applied Deletion

	Removed the following rules: 6, 8

Start location: evalspeedFails4start

Location map:
LoAT_sink -> 0
evalspeedFails4start -> 1
evalspeedFails4entryin -> 2
evalspeedFails4bb6in -> 3
evalspeedFails4bb3in -> 4
evalspeedFails4returnin -> 5
evalspeedFails4bb4in -> 6
evalspeedFails4bb5in -> 7
evalspeedFails4stop -> 8

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=1, i5'=i6, i6'=i4, i7'=i5
   2: (-2+i1 == 0 /\ -i4 >= 0) /\ i1'=3, i3'=1+i3, i4'=-1, i5'=i6, i6'=i4, i7'=i5
   3: (-3+i1 == 0 /\ -i7+i5 >= 0) /\ i1'=4, i3'=1+i3
  10: (0 == 0 /\ -3+i1 == 0 /\ -1+i7-i5 >= 0) /\ i1'=8, i3'=2+i3
  11: (0 == 0 /\ -4+i1 == 0 /\ -1+i6 >= 0) /\ i1'=3, i3'=2+i3, i7'=i7+i4
  12: (0 == 0 /\ -i6 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=2+i3, i7'=i7-i4

Dependency graph:
0 -> 1, 0 -> 2
1 -> 3, 1 -> 10
2 -> 3, 2 -> 10
3 -> 11, 3 -> 12
11 -> 3, 11 -> 10
12 -> 3, 12 -> 10

Preprocessed Transitions

	Simplified Guard

	Original rule:
	(0 == 0 /\ -3+i1 == 0 /\ -1+i7-i5 >= 0) /\ i1'=8, i3'=2+i3
	New rule:
	(-3+i1 == 0 /\ -1+i7-i5 >= 0) /\ i1'=8, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -4+i1 == 0 /\ -1+i6 >= 0) /\ i1'=3, i3'=2+i3, i7'=i7+i4
	New rule:
	(-4+i1 == 0 /\ -1+i6 >= 0) /\ i1'=3, i3'=2+i3, i7'=i7+i4
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -i6 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=2+i3, i7'=i7-i4
	New rule:
	(-i6 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=2+i3, i7'=i7-i4

Start location: evalspeedFails4start

Location map:
LoAT_sink -> 0
evalspeedFails4start -> 1
evalspeedFails4entryin -> 2
evalspeedFails4bb6in -> 3
evalspeedFails4bb3in -> 4
evalspeedFails4returnin -> 5
evalspeedFails4bb4in -> 6
evalspeedFails4bb5in -> 7
evalspeedFails4stop -> 8

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=1, i5'=i6, i6'=i4, i7'=i5
   2: (-2+i1 == 0 /\ -i4 >= 0) /\ i1'=3, i3'=1+i3, i4'=-1, i5'=i6, i6'=i4, i7'=i5
   3: (-3+i1 == 0 /\ -i7+i5 >= 0) /\ i1'=4, i3'=1+i3
  13: (-3+i1 == 0 /\ -1+i7-i5 >= 0) /\ i1'=8, i3'=2+i3
  14: (-4+i1 == 0 /\ -1+i6 >= 0) /\ i1'=3, i3'=2+i3, i7'=i7+i4
  15: (-i6 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=2+i3, i7'=i7-i4

Dependency graph:
0 -> 1, 0 -> 2
1 -> 3, 1 -> 13
2 -> 3, 2 -> 13
3 -> 14, 3 -> 15
14 -> 3, 14 -> 13
15 -> 3, 15 -> 13

Step with 0

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 2

	Trace

	0[(-1+i1 == 0)]
	2[(-2+i1 == 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Step with 13

	Trace

	0[(-1+i1 == 0)]
	2[(-2+i1 == 0 /\ -i4 >= 0)]
	13[(-3+i1 == 0 /\ -1+i7-i5 >= 0)]
	
	Blocked

	{}
	{}
	{}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	2[(-2+i1 == 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{}
	{13[T]}
	
Step with 3

	Trace

	0[(-1+i1 == 0)]
	2[(-2+i1 == 0 /\ -i4 >= 0)]
	3[(-3+i1 == 0 /\ -i7+i5 >= 0)]
	
	Blocked

	{}
	{}
	{13[T]}
	{}
	
Step with 15

	Trace

	0[(-1+i1 == 0)]
	2[(-2+i1 == 0 /\ -i4 >= 0)]
	3[(-3+i1 == 0 /\ -i7+i5 >= 0)]
	15[(-i6 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{}
	{13[T]}
	{}
	{}
	
Poly(n^1)

Accelerate

	Certificate of Non-Termination

	Original rule:
	(-3+i1 == 0 /\ -i6 >= 0 /\ -i7+i5 >= 0) /\ i1'=3, i3'=3+i3, i7'=i7-i4
	New rule:
	(-3+i1 >= 0 /\ -i6 >= 0 /\ 3-i1 >= 0 /\ -i4 <= 0 /\ -i7+i5 >= 0) /\ i1'=0

		-3+i1 >= 0 [0]: unchanged
		
		-i6 >= 0 [0]: unchanged
		
		3-i1 >= 0 [0]: unchanged
		
		-i7+i5 >= 0 [0]: eventual decrease yields (-i7+(-1+it31)*i4+i5 >= 0 /\ -i7+i5 >= 0)
		
		-i7+i5 >= 0 [1]: eventual increase yields (-i4 <= 0 /\ -i7+i5 >= 0)
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, -i6 >= 0 -> -i6 >= 0, 3-i1 >= 0 -> 3-i1 >= 0, -i7+i5 >= 0 -> (-i4 <= 0 /\ -i7+i5 >= 0)}

		Simplified Guard

		Original rule:
		(0 == 0 /\ -3+i1 == 0 /\ -i6 >= 0 /\ -i7+i5 >= 0) /\ i1'=3, i3'=3+i3, i7'=i7-i4
		New rule:
		(-3+i1 == 0 /\ -i6 >= 0 /\ -i7+i5 >= 0) /\ i1'=3, i3'=3+i3, i7'=i7-i4

	Loop Acceleration

	Original rule:
	(-3+i1 == 0 /\ -i6 >= 0 /\ -i7+i5 >= 0) /\ i1'=3, i3'=3+i3, i7'=i7-i4
	New rule:
	(-1+it31 >= 0 /\ -3+i1 >= 0 /\ -i6 >= 0 /\ 3-i1 >= 0 /\ -i7+(-1+it31)*i4+i5 >= 0 /\ -i7+i5 >= 0) /\ i1'=i1, i3'=i3+3*it31, i7'=i7-i4*it31

		-3+i1 >= 0 [0]: unchanged
		
		-i6 >= 0 [0]: unchanged
		
		3-i1 >= 0 [0]: unchanged
		
		-i7+i5 >= 0 [0]: eventual decrease yields (-i7+(-1+it31)*i4+i5 >= 0 /\ -i7+i5 >= 0)
		
		-i7+i5 >= 0 [1]: eventual increase yields (-i4 <= 0 /\ -i7+i5 >= 0)
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, -i6 >= 0 -> -i6 >= 0, 3-i1 >= 0 -> 3-i1 >= 0, -i7+i5 >= 0 -> (-i7+(-1+it31)*i4+i5 >= 0 /\ -i7+i5 >= 0)}

	Removed Trivial Updates

	Original rule:
	(-1+it31 >= 0 /\ -3+i1 >= 0 /\ -i6 >= 0 /\ 3-i1 >= 0 /\ -i7+(-1+it31)*i4+i5 >= 0 /\ -i7+i5 >= 0) /\ i1'=i1, i3'=i3+3*it31, i7'=i7-i4*it31
	New rule:
	(-1+it31 >= 0 /\ -3+i1 >= 0 /\ -i6 >= 0 /\ 3-i1 >= 0 /\ -i7+(-1+it31)*i4+i5 >= 0 /\ -i7+i5 >= 0) /\ i3'=i3+3*it31, i7'=i7-i4*it31

Start location: evalspeedFails4start

Location map:
LoAT_sink -> 0
evalspeedFails4start -> 1
evalspeedFails4entryin -> 2
evalspeedFails4bb6in -> 3
evalspeedFails4bb3in -> 4
evalspeedFails4returnin -> 5
evalspeedFails4bb4in -> 6
evalspeedFails4bb5in -> 7
evalspeedFails4stop -> 8

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=1, i5'=i6, i6'=i4, i7'=i5
   2: (-2+i1 == 0 /\ -i4 >= 0) /\ i1'=3, i3'=1+i3, i4'=-1, i5'=i6, i6'=i4, i7'=i5
   3: (-3+i1 == 0 /\ -i7+i5 >= 0) /\ i1'=4, i3'=1+i3
  13: (-3+i1 == 0 /\ -1+i7-i5 >= 0) /\ i1'=8, i3'=2+i3
  14: (-4+i1 == 0 /\ -1+i6 >= 0) /\ i1'=3, i3'=2+i3, i7'=i7+i4
  15: (-i6 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=2+i3, i7'=i7-i4
  16: (-3+i1 >= 0 /\ -i6 >= 0 /\ 3-i1 >= 0 /\ -i4 <= 0 /\ -i7+i5 >= 0) /\ i1'=0
  17: (-1+it31 >= 0 /\ -3+i1 >= 0 /\ -i6 >= 0 /\ 3-i1 >= 0 /\ -i7+(-1+it31)*i4+i5 >= 0 /\ -i7+i5 >= 0) /\ i3'=i3+3*it31, i7'=i7-i4*it31

Dependency graph:
0 -> 1, 0 -> 2
1 -> 3, 1 -> 13, 1 -> 16, 1 -> 17
2 -> 3, 2 -> 13, 2 -> 16, 2 -> 17
3 -> 14, 3 -> 15
14 -> 3, 14 -> 13, 14 -> 16, 14 -> 17
15 -> 3, 15 -> 13, 15 -> 16, 15 -> 17
17 -> 3, 17 -> 13, 17 -> 16

	Trace

	0[(-1+i1 == 0)]
	2[(-2+i1 == 0 /\ -i4 >= 0)]
	17[(-1+it31 >= 0 /\ -3+i1 >= 0 /\ -i6 >= 0 /\ 3-i1 >= 0 /\ -i7+(-1+it31)*i4+i5 >= 0 /\ -i7+i5 >= 0)]
	
	Blocked

	{}
	{}
	{13[T]}
	{17[T]}
	
Step with 13

	Trace

	0[(-1+i1 == 0)]
	2[(-2+i1 == 0 /\ -i4 >= 0)]
	17[(-1+it31 >= 0 /\ -3+i1 >= 0 /\ -i6 >= 0 /\ 3-i1 >= 0 /\ -i7+(-1+it31)*i4+i5 >= 0 /\ -i7+i5 >= 0)]
	13[(-3+i1 == 0 /\ -1+i7-i5 >= 0)]
	
	Blocked

	{}
	{}
	{13[T]}
	{16[T], 17[T]}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	2[(-2+i1 == 0 /\ -i4 >= 0)]
	17[(-1+it31 >= 0 /\ -3+i1 >= 0 /\ -i6 >= 0 /\ 3-i1 >= 0 /\ -i7+(-1+it31)*i4+i5 >= 0 /\ -i7+i5 >= 0)]
	
	Blocked

	{}
	{}
	{13[T]}
	{13[T], 16[T], 17[T]}
	
Step with 3

	Trace

	0[(-1+i1 == 0)]
	2[(-2+i1 == 0 /\ -i4 >= 0)]
	17[(-1+it31 >= 0 /\ -3+i1 >= 0 /\ -i6 >= 0 /\ 3-i1 >= 0 /\ -i7+(-1+it31)*i4+i5 >= 0 /\ -i7+i5 >= 0)]
	3[(-3+i1 == 0 /\ -i7+i5 >= 0)]
	
	Blocked

	{}
	{}
	{13[T]}
	{13[T], 16[T], 17[T]}
	{}
	
Step with 15

	Trace

	0[(-1+i1 == 0)]
	2[(-2+i1 == 0 /\ -i4 >= 0)]
	17[(-1+it31 >= 0 /\ -3+i1 >= 0 /\ -i6 >= 0 /\ 3-i1 >= 0 /\ -i7+(-1+it31)*i4+i5 >= 0 /\ -i7+i5 >= 0)]
	3[(-3+i1 == 0 /\ -i7+i5 >= 0)]
	15[(-i6 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{}
	{13[T]}
	{13[T], 16[T], 17[T]}
	{}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	2[(-2+i1 == 0 /\ -i4 >= 0)]
	17[(-1+it31 >= 0 /\ -3+i1 >= 0 /\ -i6 >= 0 /\ 3-i1 >= 0 /\ -i7+(-1+it31)*i4+i5 >= 0 /\ -i7+i5 >= 0)]
	3[(-3+i1 == 0 /\ -i7+i5 >= 0)]
	
	Blocked

	{}
	{}
	{13[T]}
	{13[T], 16[T], 17[T]}
	{15[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	2[(-2+i1 == 0 /\ -i4 >= 0)]
	17[(-1+it31 >= 0 /\ -3+i1 >= 0 /\ -i6 >= 0 /\ 3-i1 >= 0 /\ -i7+(-1+it31)*i4+i5 >= 0 /\ -i7+i5 >= 0)]
	
	Blocked

	{}
	{}
	{13[T]}
	{3[T], 13[T], 16[T], 17[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	2[(-2+i1 == 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{}
	{13[T], 17[T]}
	
Step with 3

	Trace

	0[(-1+i1 == 0)]
	2[(-2+i1 == 0 /\ -i4 >= 0)]
	3[(-3+i1 == 0 /\ -i7+i5 >= 0)]
	
	Blocked

	{}
	{}
	{13[T], 16[T], 17[T]}
	{}
	
Step with 15

	Trace

	0[(-1+i1 == 0)]
	2[(-2+i1 == 0 /\ -i4 >= 0)]
	3[(-3+i1 == 0 /\ -i7+i5 >= 0)]
	15[(-i6 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{}
	{13[T], 16[T], 17[T]}
	{14[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	2[(-2+i1 == 0 /\ -i4 >= 0)]
	3[(-3+i1 == 0 /\ -i7+i5 >= 0)]
	
	Blocked

	{}
	{}
	{13[T], 16[T], 17[T]}
	{14[T], 15[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	2[(-2+i1 == 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{}
	{3[T], 13[T], 16[T], 17[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{2[T]}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	1[(-1+i4 >= 0 /\ -2+i1 == 0)]
	
	Blocked

	{}
	{2[T]}
	{}
	
Step with 13

	Trace

	0[(-1+i1 == 0)]
	1[(-1+i4 >= 0 /\ -2+i1 == 0)]
	13[(-3+i1 == 0 /\ -1+i7-i5 >= 0)]
	
	Blocked

	{}
	{2[T]}
	{16[T], 17[T]}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	1[(-1+i4 >= 0 /\ -2+i1 == 0)]
	
	Blocked

	{}
	{2[T]}
	{13[T], 16[T], 17[T]}
	
Step with 3

	Trace

	0[(-1+i1 == 0)]
	1[(-1+i4 >= 0 /\ -2+i1 == 0)]
	3[(-3+i1 == 0 /\ -i7+i5 >= 0)]
	
	Blocked

	{}
	{2[T]}
	{13[T], 16[T], 17[T]}
	{}
	
Step with 14

	Trace

	0[(-1+i1 == 0)]
	1[(-1+i4 >= 0 /\ -2+i1 == 0)]
	3[(-3+i1 == 0 /\ -i7+i5 >= 0)]
	14[(-4+i1 == 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{2[T]}
	{13[T], 16[T], 17[T]}
	{15[T]}
	{}
	
Accelerate

	Certificate of Non-Termination

	Original rule:
	(-3+i1 == 0 /\ -i7+i5 >= 0 /\ -1+i6 >= 0) /\ i1'=3, i3'=3+i3, i7'=i7+i4
	New rule:
	(-3+i1 >= 0 /\ i4 <= 0 /\ 3-i1 >= 0 /\ -i7+i5 >= 0 /\ -1+i6 >= 0) /\ i1'=0

		-3+i1 >= 0 [0]: unchanged
		
		3-i1 >= 0 [0]: unchanged
		
		-i7+i5 >= 0 [0]: eventual decrease yields (-i7+i5 >= 0 /\ -i7-(-1+it145)*i4+i5 >= 0)
		
		-i7+i5 >= 0 [1]: eventual increase yields (i4 <= 0 /\ -i7+i5 >= 0)
		
		-1+i6 >= 0 [0]: unchanged
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, 3-i1 >= 0 -> 3-i1 >= 0, -i7+i5 >= 0 -> (i4 <= 0 /\ -i7+i5 >= 0), -1+i6 >= 0 -> -1+i6 >= 0}

		Simplified Guard

		Original rule:
		(0 == 0 /\ -3+i1 == 0 /\ -i7+i5 >= 0 /\ -1+i6 >= 0) /\ i1'=3, i3'=3+i3, i7'=i7+i4
		New rule:
		(-3+i1 == 0 /\ -i7+i5 >= 0 /\ -1+i6 >= 0) /\ i1'=3, i3'=3+i3, i7'=i7+i4

	Loop Acceleration

	Original rule:
	(-3+i1 == 0 /\ -i7+i5 >= 0 /\ -1+i6 >= 0) /\ i1'=3, i3'=3+i3, i7'=i7+i4
	New rule:
	(-3+i1 >= 0 /\ -1+it145 >= 0 /\ 3-i1 >= 0 /\ -i7+i5 >= 0 /\ -i7-(-1+it145)*i4+i5 >= 0 /\ -1+i6 >= 0) /\ i1'=i1, i3'=i3+3*it145, i7'=i7+i4*it145

		-3+i1 >= 0 [0]: unchanged
		
		3-i1 >= 0 [0]: unchanged
		
		-i7+i5 >= 0 [0]: eventual decrease yields (-i7+i5 >= 0 /\ -i7-(-1+it145)*i4+i5 >= 0)
		
		-i7+i5 >= 0 [1]: eventual increase yields (i4 <= 0 /\ -i7+i5 >= 0)
		
		-1+i6 >= 0 [0]: unchanged
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, 3-i1 >= 0 -> 3-i1 >= 0, -i7+i5 >= 0 -> (-i7+i5 >= 0 /\ -i7-(-1+it145)*i4+i5 >= 0), -1+i6 >= 0 -> -1+i6 >= 0}

	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ -1+it145 >= 0 /\ 3-i1 >= 0 /\ -i7+i5 >= 0 /\ -i7-(-1+it145)*i4+i5 >= 0 /\ -1+i6 >= 0) /\ i1'=i1, i3'=i3+3*it145, i7'=i7+i4*it145
	New rule:
	(-3+i1 >= 0 /\ -1+it145 >= 0 /\ 3-i1 >= 0 /\ -i7+i5 >= 0 /\ -i7-(-1+it145)*i4+i5 >= 0 /\ -1+i6 >= 0) /\ i3'=i3+3*it145, i7'=i7+i4*it145

Start location: evalspeedFails4start

Location map:
LoAT_sink -> 0
evalspeedFails4start -> 1
evalspeedFails4entryin -> 2
evalspeedFails4bb6in -> 3
evalspeedFails4bb3in -> 4
evalspeedFails4returnin -> 5
evalspeedFails4bb4in -> 6
evalspeedFails4bb5in -> 7
evalspeedFails4stop -> 8

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=1, i5'=i6, i6'=i4, i7'=i5
   2: (-2+i1 == 0 /\ -i4 >= 0) /\ i1'=3, i3'=1+i3, i4'=-1, i5'=i6, i6'=i4, i7'=i5
   3: (-3+i1 == 0 /\ -i7+i5 >= 0) /\ i1'=4, i3'=1+i3
  13: (-3+i1 == 0 /\ -1+i7-i5 >= 0) /\ i1'=8, i3'=2+i3
  14: (-4+i1 == 0 /\ -1+i6 >= 0) /\ i1'=3, i3'=2+i3, i7'=i7+i4
  15: (-i6 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=2+i3, i7'=i7-i4
  16: (-3+i1 >= 0 /\ -i6 >= 0 /\ 3-i1 >= 0 /\ -i4 <= 0 /\ -i7+i5 >= 0) /\ i1'=0
  17: (-1+it31 >= 0 /\ -3+i1 >= 0 /\ -i6 >= 0 /\ 3-i1 >= 0 /\ -i7+(-1+it31)*i4+i5 >= 0 /\ -i7+i5 >= 0) /\ i3'=i3+3*it31, i7'=i7-i4*it31
  18: (-3+i1 >= 0 /\ i4 <= 0 /\ 3-i1 >= 0 /\ -i7+i5 >= 0 /\ -1+i6 >= 0) /\ i1'=0
  19: (-3+i1 >= 0 /\ -1+it145 >= 0 /\ 3-i1 >= 0 /\ -i7+i5 >= 0 /\ -i7-(-1+it145)*i4+i5 >= 0 /\ -1+i6 >= 0) /\ i3'=i3+3*it145, i7'=i7+i4*it145

Dependency graph:
0 -> 1, 0 -> 2
1 -> 3, 1 -> 13, 1 -> 16, 1 -> 17, 1 -> 18, 1 -> 19
2 -> 3, 2 -> 13, 2 -> 16, 2 -> 17, 2 -> 18, 2 -> 19
3 -> 14, 3 -> 15
14 -> 3, 14 -> 13, 14 -> 16, 14 -> 17, 14 -> 18, 14 -> 19
15 -> 3, 15 -> 13, 15 -> 16, 15 -> 17, 15 -> 18, 15 -> 19
17 -> 3, 17 -> 13, 17 -> 16, 17 -> 18, 17 -> 19
19 -> 3, 19 -> 13, 19 -> 16, 19 -> 17, 19 -> 18

	Trace

	0[(-1+i1 == 0)]
	1[(-1+i4 >= 0 /\ -2+i1 == 0)]
	19[(-3+i1 >= 0 /\ -1+it145 >= 0 /\ 3-i1 >= 0 /\ -i7+i5 >= 0 /\ -i7-(-1+it145)*i4+i5 >= 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{2[T]}
	{13[T], 16[T], 17[T]}
	{19[T]}
	
Step with 3

	Trace

	0[(-1+i1 == 0)]
	1[(-1+i4 >= 0 /\ -2+i1 == 0)]
	19[(-3+i1 >= 0 /\ -1+it145 >= 0 /\ 3-i1 >= 0 /\ -i7+i5 >= 0 /\ -i7-(-1+it145)*i4+i5 >= 0 /\ -1+i6 >= 0)]
	3[(-3+i1 == 0 /\ -i7+i5 >= 0)]
	
	Blocked

	{}
	{2[T]}
	{13[T], 16[T], 17[T]}
	{16[T], 18[T], 19[T]}
	{}
	
Step with 14

	Trace

	0[(-1+i1 == 0)]
	1[(-1+i4 >= 0 /\ -2+i1 == 0)]
	19[(-3+i1 >= 0 /\ -1+it145 >= 0 /\ 3-i1 >= 0 /\ -i7+i5 >= 0 /\ -i7-(-1+it145)*i4+i5 >= 0 /\ -1+i6 >= 0)]
	3[(-3+i1 == 0 /\ -i7+i5 >= 0)]
	14[(-4+i1 == 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{2[T]}
	{13[T], 16[T], 17[T]}
	{16[T], 18[T], 19[T]}
	{}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	1[(-1+i4 >= 0 /\ -2+i1 == 0)]
	19[(-3+i1 >= 0 /\ -1+it145 >= 0 /\ 3-i1 >= 0 /\ -i7+i5 >= 0 /\ -i7-(-1+it145)*i4+i5 >= 0 /\ -1+i6 >= 0)]
	3[(-3+i1 == 0 /\ -i7+i5 >= 0)]
	
	Blocked

	{}
	{2[T]}
	{13[T], 16[T], 17[T]}
	{16[T], 18[T], 19[T]}
	{14[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	1[(-1+i4 >= 0 /\ -2+i1 == 0)]
	19[(-3+i1 >= 0 /\ -1+it145 >= 0 /\ 3-i1 >= 0 /\ -i7+i5 >= 0 /\ -i7-(-1+it145)*i4+i5 >= 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{2[T]}
	{13[T], 16[T], 17[T]}
	{3[T], 16[T], 18[T], 19[T]}
	
Step with 13

	Trace

	0[(-1+i1 == 0)]
	1[(-1+i4 >= 0 /\ -2+i1 == 0)]
	19[(-3+i1 >= 0 /\ -1+it145 >= 0 /\ 3-i1 >= 0 /\ -i7+i5 >= 0 /\ -i7-(-1+it145)*i4+i5 >= 0 /\ -1+i6 >= 0)]
	13[(-3+i1 == 0 /\ -1+i7-i5 >= 0)]
	
	Blocked

	{}
	{2[T]}
	{13[T], 16[T], 17[T]}
	{3[T], 16[T], 17[T], 18[T], 19[T]}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	1[(-1+i4 >= 0 /\ -2+i1 == 0)]
	19[(-3+i1 >= 0 /\ -1+it145 >= 0 /\ 3-i1 >= 0 /\ -i7+i5 >= 0 /\ -i7-(-1+it145)*i4+i5 >= 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{2[T]}
	{13[T], 16[T], 17[T]}
	{3[T], 13[T], 16[T], 17[T], 18[T], 19[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	1[(-1+i4 >= 0 /\ -2+i1 == 0)]
	
	Blocked

	{}
	{2[T]}
	{13[T], 16[T], 17[T], 19[T]}
	
Step with 3

	Trace

	0[(-1+i1 == 0)]
	1[(-1+i4 >= 0 /\ -2+i1 == 0)]
	3[(-3+i1 == 0 /\ -i7+i5 >= 0)]
	
	Blocked

	{}
	{2[T]}
	{13[T], 16[T], 17[T], 19[T]}
	{}
	
Step with 14

	Trace

	0[(-1+i1 == 0)]
	1[(-1+i4 >= 0 /\ -2+i1 == 0)]
	3[(-3+i1 == 0 /\ -i7+i5 >= 0)]
	14[(-4+i1 == 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{2[T]}
	{13[T], 16[T], 17[T], 19[T]}
	{15[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	1[(-1+i4 >= 0 /\ -2+i1 == 0)]
	3[(-3+i1 == 0 /\ -i7+i5 >= 0)]
	
	Blocked

	{}
	{2[T]}
	{13[T], 16[T], 17[T], 19[T]}
	{14[T], 15[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	1[(-1+i4 >= 0 /\ -2+i1 == 0)]
	
	Blocked

	{}
	{2[T]}
	{3[T], 13[T], 16[T], 17[T], 19[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{1[T], 2[T]}
	
Backtrack

	Trace

	Blocked

	{0[T]}
	
Accept

Poly(n^1)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
MAYBE


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃
  Temp_Vars:  
  Locations:  l0, l1, l2, l3, l4, l5, l6, l7
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃) → l6(X₀, X₁, X₂, X₃)
  t₇: l1(X₀, X₁, X₂, X₃) → l3(X₀, X₁, X₂, X₀+X₃)
  t₈: l2(X₀, X₁, X₂, X₃) → l3(X₀, X₁, X₂, X₃-X₀)
  t₃: l3(X₀, X₁, X₂, X₃) → l4(X₀, X₁, X₂, X₃) :|: X₃ ≤ X₁
  t₄: l3(X₀, X₁, X₂, X₃) → l5(X₀, X₁, X₂, X₃) :|: 1+X₁ ≤ X₃
  t₅: l4(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, X₃) :|: 1 ≤ X₂
  t₆: l4(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, X₃) :|: X₂ ≤ 0
  t₉: l5(X₀, X₁, X₂, X₃) → l7(X₀, X₁, X₂, X₃)
  t₁: l6(X₀, X₁, X₂, X₃) → l3(1, X₂, X₀, X₁) :|: 1 ≤ X₀
  t₂: l6(X₀, X₁, X₂, X₃) → l3(-1, X₂, X₀, X₁) :|: X₀ ≤ 0


Preprocessing
  Found invariant X₃ ≤ X₁ ∧ X₂ ≤ 0 ∧ X₂ ≤ 1+X₀ ∧ X₀+X₂ ≤ 1 ∧ X₀ ≤ 1 ∧ 0 ≤ 1+X₀ for location l2


  Found invariant 1+X₁ ≤ X₃ ∧ X₀ ≤ 1 ∧ 0 ≤ 1+X₀ for location l7


  Found invariant 1+X₁ ≤ X₃ ∧ X₀ ≤ 1 ∧ 0 ≤ 1+X₀ for location l5


  Found invariant X₃ ≤ X₁ ∧ 1 ≤ X₂ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ X₀ ≤ 1 ∧ 0 ≤ 1+X₀ for location l1


  Found invariant X₃ ≤ X₁ ∧ X₀ ≤ 1 ∧ 0 ≤ 1+X₀ for location l4


  Found invariant X₀ ≤ 1 ∧ 0 ≤ 1+X₀ for location l3


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃
  Temp_Vars:  
  Locations:  l0, l1, l2, l3, l4, l5, l6, l7
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃) → l6(X₀, X₁, X₂, X₃)
  t₇: l1(X₀, X₁, X₂, X₃) → l3(X₀, X₁, X₂, X₀+X₃) :|: 0 ≤ 1+X₀ ∧ X₀ ≤ 1 ∧ 1 ≤ X₂ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ X₃ ≤ X₁
  t₈: l2(X₀, X₁, X₂, X₃) → l3(X₀, X₁, X₂, X₃-X₀) :|: 0 ≤ 1+X₀ ∧ X₂ ≤ 1+X₀ ∧ X₀ ≤ 1 ∧ X₀+X₂ ≤ 1 ∧ X₃ ≤ X₁ ∧ X₂ ≤ 0
  t₃: l3(X₀, X₁, X₂, X₃) → l4(X₀, X₁, X₂, X₃) :|: X₃ ≤ X₁ ∧ 0 ≤ 1+X₀ ∧ X₀ ≤ 1
  t₄: l3(X₀, X₁, X₂, X₃) → l5(X₀, X₁, X₂, X₃) :|: 1+X₁ ≤ X₃ ∧ 0 ≤ 1+X₀ ∧ X₀ ≤ 1
  t₅: l4(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, X₃) :|: 1 ≤ X₂ ∧ 0 ≤ 1+X₀ ∧ X₀ ≤ 1 ∧ X₃ ≤ X₁
  t₆: l4(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, X₃) :|: X₂ ≤ 0 ∧ 0 ≤ 1+X₀ ∧ X₀ ≤ 1 ∧ X₃ ≤ X₁
  t₉: l5(X₀, X₁, X₂, X₃) → l7(X₀, X₁, X₂, X₃) :|: 0 ≤ 1+X₀ ∧ X₀ ≤ 1 ∧ 1+X₁ ≤ X₃
  t₁: l6(X₀, X₁, X₂, X₃) → l3(1, X₂, X₀, X₁) :|: 1 ≤ X₀
  t₂: l6(X₀, X₁, X₂, X₃) → l3(-1, X₂, X₀, X₁) :|: X₀ ≤ 0


  Found invariant X₃ ≤ X₁ ∧ 1 ≤ X₂ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ X₀ ≤ 1 ∧ 0 ≤ 1+X₀ for location l1_v2


  Found invariant X₃ ≤ 1+X₁ ∧ X₂ ≤ 0 ∧ X₂ ≤ 1+X₀ ∧ X₀+X₂ ≤ 1 ∧ X₀ ≤ 1 ∧ 0 ≤ 1+X₀ for location l3_v2


  Found invariant X₃ ≤ X₁ ∧ 1 ≤ X₂ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ X₀ ≤ 1 ∧ 0 ≤ 1+X₀ for location l1_v1


  Found invariant X₃ ≤ X₁ ∧ X₂ ≤ 0 ∧ X₂ ≤ 1+X₀ ∧ X₀+X₂ ≤ 1 ∧ X₀ ≤ 1 ∧ 0 ≤ 1+X₀ for location l4_v3


  Found invariant X₃ ≤ X₁ ∧ X₂ ≤ 0 ∧ X₂ ≤ 1+X₀ ∧ X₀+X₂ ≤ 1 ∧ X₀ ≤ 1 ∧ 0 ≤ 1+X₀ for location l2_v1


  Found invariant X₃ ≤ X₁ ∧ X₀ ≤ 1 ∧ 0 ≤ 1+X₀ for location l4_v1


  Found invariant X₃ ≤ X₁ ∧ 1 ≤ X₂ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ X₀ ≤ 1 ∧ 0 ≤ 1+X₀ for location l4_v2


  Found invariant X₃ ≤ X₁ ∧ X₂ ≤ 0 ∧ X₂ ≤ 1+X₀ ∧ X₀+X₂ ≤ 1 ∧ X₀ ≤ 1 ∧ 0 ≤ 1+X₀ for location l2_v2


  Found invariant 1+X₁ ≤ X₃ ∧ X₀ ≤ 1 ∧ 0 ≤ 1+X₀ for location l7


  Found invariant 1+X₁ ≤ X₃ ∧ X₀ ≤ 1 ∧ 0 ≤ 1+X₀ for location l5


  Found invariant X₀ ≤ 1 ∧ 0 ≤ 1+X₀ for location l3


  Found invariant X₃ ≤ 1+X₁ ∧ 1 ≤ X₂ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ X₀ ≤ 1 ∧ 0 ≤ 1+X₀ for location l3_v1


All Bounds
Timebounds
  Overall timebound:inf {Infinity}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: inf {Infinity}
    t₄: 1 {O(1)}
    t₅: inf {Infinity}
    t₆: inf {Infinity}
    t₇: inf {Infinity}
    t₈: inf {Infinity}
    t₉: 1 {O(1)}


Costbounds
  Overall costbound: inf {Infinity}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: inf {Infinity}
    t₄: 1 {O(1)}
    t₅: inf {Infinity}
    t₆: inf {Infinity}
    t₇: inf {Infinity}
    t₈: inf {Infinity}
    t₉: 1 {O(1)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₀, X₂: X₂ {O(n)}
    t₀, X₃: X₃ {O(n)}
    t₁, X₀: 1 {O(1)}
    t₁, X₁: X₂ {O(n)}
    t₁, X₂: X₀ {O(n)}
    t₁, X₃: X₁ {O(n)}
    t₂, X₀: 1 {O(1)}
    t₂, X₁: X₂ {O(n)}
    t₂, X₂: X₀ {O(n)}
    t₂, X₃: X₁ {O(n)}
    t₃, X₀: 1 {O(1)}
    t₃, X₁: 2⋅X₂ {O(n)}
    t₃, X₂: 2⋅X₀ {O(n)}
    t₄, X₀: 1 {O(1)}
    t₄, X₁: 6⋅X₂ {O(n)}
    t₄, X₂: 6⋅X₀ {O(n)}
    t₅, X₀: 1 {O(1)}
    t₅, X₁: 2⋅X₂ {O(n)}
    t₅, X₂: 2⋅X₀ {O(n)}
    t₆, X₀: 1 {O(1)}
    t₆, X₁: 2⋅X₂ {O(n)}
    t₆, X₂: 2⋅X₀ {O(n)}
    t₇, X₀: 1 {O(1)}
    t₇, X₁: 2⋅X₂ {O(n)}
    t₇, X₂: 2⋅X₀ {O(n)}
    t₈, X₀: 1 {O(1)}
    t₈, X₁: 2⋅X₂ {O(n)}
    t₈, X₂: 2⋅X₀ {O(n)}
    t₉, X₀: 1 {O(1)}
    t₉, X₁: 6⋅X₂ {O(n)}
    t₉, X₂: 6⋅X₀ {O(n)}

