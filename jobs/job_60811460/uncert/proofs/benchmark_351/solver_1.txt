NO

# LoAT Proof:
NO

NO

Initial ITS

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f9 -> 2
f24 -> 3
f37 -> 4
f48 -> 5

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=it2, i5'=it2, i6'=it2, i7'=0
   1: (-2+i1 == 0 /\ -1+i6-i7 >= 0) /\ i1'=2, i3'=1+i3, i7'=1+i7, i8'=it3
   2: (-3+i1 == 0 /\ -1-it4 >= 0) /\ i1'=3, i3'=1+i3
   3: -3+i1 == 0 /\ i1'=3, i3'=1+i3
   4: (-1-it6+it7 >= 0 /\ -4+i1 == 0) /\ i1'=4, i3'=1+i3
   5: -4+i1 == 0 /\ i1'=4, i3'=1+i3
   6: -4+i1 == 0 /\ i1'=5, i3'=1+i3
   7: -3+i1 == 0 /\ i1'=4, i3'=1+i3
   8: (-2+i1 == 0 /\ -i6+i7 >= 0) /\ i1'=3, i3'=1+i3

Dependency graph:
0 -> 1, 0 -> 8
1 -> 1, 1 -> 8
2 -> 2, 2 -> 3, 2 -> 7
3 -> 2, 3 -> 3, 3 -> 7
4 -> 4, 4 -> 5, 4 -> 6
5 -> 4, 5 -> 5, 5 -> 6
7 -> 4, 7 -> 5, 7 -> 6
8 -> 2, 8 -> 3, 8 -> 7

Preprocessed Transitions

	Eliminated Temporary Variables

	Original rule:
	(-3+i1 == 0 /\ -1-it4 >= 0) /\ i1'=3, i3'=1+i3
	New rule:
	(-3+i1 == 0) /\ i1'=3, i3'=1+i3
	
	Eliminated Temporary Variables

	Original rule:
	(-1-it6+it7 >= 0 /\ -4+i1 == 0) /\ i1'=4, i3'=1+i3
	New rule:
	(-4+i1 == 0) /\ i1'=4, i3'=1+i3

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f9 -> 2
f24 -> 3
f37 -> 4
f48 -> 5

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=it2, i5'=it2, i6'=it2, i7'=0
   1: (-2+i1 == 0 /\ -1+i6-i7 >= 0) /\ i1'=2, i3'=1+i3, i7'=1+i7, i8'=it3
   3: -3+i1 == 0 /\ i1'=3, i3'=1+i3
   5: -4+i1 == 0 /\ i1'=4, i3'=1+i3
   6: -4+i1 == 0 /\ i1'=5, i3'=1+i3
   7: -3+i1 == 0 /\ i1'=4, i3'=1+i3
   8: (-2+i1 == 0 /\ -i6+i7 >= 0) /\ i1'=3, i3'=1+i3
   9: (-3+i1 == 0) /\ i1'=3, i3'=1+i3
  10: (-4+i1 == 0) /\ i1'=4, i3'=1+i3

Dependency graph:
0 -> 1, 0 -> 8
1 -> 1, 1 -> 8
3 -> 3, 3 -> 7, 3 -> 9
5 -> 5, 5 -> 6, 5 -> 10
7 -> 5, 7 -> 6, 7 -> 10
8 -> 3, 8 -> 7, 8 -> 9
9 -> 3, 9 -> 7, 9 -> 9
10 -> 5, 10 -> 6, 10 -> 10

Step with 0

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 8

	Trace

	0[(-1+i1 == 0)]
	8[(-2+i1 == 0 /\ -i6+i7 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Step with 9

	Trace

	0[(-1+i1 == 0)]
	8[(-2+i1 == 0 /\ -i6+i7 >= 0)]
	9[(-3+i1 == 0)]
	
	Blocked

	{}
	{}
	{}
	{}
	
Nonterm

	Certificate of Non-Termination

	Original rule:
	(-3+i1 == 0) /\ i1'=3, i3'=1+i3
	New rule:
	(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+it31 >= 0) /\ i1'=0

		-3+i1 >= 0 [0]: unchanged
		
		3-i1 >= 0 [0]: unchanged
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, 3-i1 >= 0 -> 3-i1 >= 0}

	Loop Acceleration

	Original rule:
	(-3+i1 == 0) /\ i1'=3, i3'=1+i3
	New rule:
	(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+it31 >= 0) /\ i1'=i1, i3'=i3+it31

		-3+i1 >= 0 [0]: unchanged
		
		3-i1 >= 0 [0]: unchanged
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, 3-i1 >= 0 -> 3-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+it31 >= 0) /\ i1'=i1, i3'=i3+it31
	New rule:
	(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+it31 >= 0) /\ i3'=i3+it31

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f9 -> 2
f24 -> 3
f37 -> 4
f48 -> 5

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=it2, i5'=it2, i6'=it2, i7'=0
   1: (-2+i1 == 0 /\ -1+i6-i7 >= 0) /\ i1'=2, i3'=1+i3, i7'=1+i7, i8'=it3
   3: -3+i1 == 0 /\ i1'=3, i3'=1+i3
   5: -4+i1 == 0 /\ i1'=4, i3'=1+i3
   6: -4+i1 == 0 /\ i1'=5, i3'=1+i3
   7: -3+i1 == 0 /\ i1'=4, i3'=1+i3
   8: (-2+i1 == 0 /\ -i6+i7 >= 0) /\ i1'=3, i3'=1+i3
   9: (-3+i1 == 0) /\ i1'=3, i3'=1+i3
  10: (-4+i1 == 0) /\ i1'=4, i3'=1+i3
  11: (-3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+it31 >= 0) /\ i1'=0
  12: (-3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+it31 >= 0) /\ i3'=i3+it31

Dependency graph:
0 -> 1, 0 -> 8
1 -> 1, 1 -> 8
3 -> 3, 3 -> 7, 3 -> 9, 3 -> 11, 3 -> 12
5 -> 5, 5 -> 6, 5 -> 10
7 -> 5, 7 -> 6, 7 -> 10
8 -> 3, 8 -> 7, 8 -> 9, 8 -> 11, 8 -> 12
9 -> 3, 9 -> 7, 9 -> 9, 9 -> 11, 9 -> 12
10 -> 5, 10 -> 6, 10 -> 10
12 -> 3, 12 -> 7, 12 -> 9, 12 -> 11

Step with 11

	Trace

	0[(-1+i1 == 0)]
	8[(-2+i1 == 0 /\ -i6+i7 >= 0)]
	11[(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+it31 >= 0)]
	
	Blocked

	{}
	{}
	{}
	{11[T]}
	
Refute

	Counterexample

	(i1=1, i3=-1, i8=0)
	-0-> (i1=2, i3=0, i4=0, i5=0, i6=0, i7=0, i8=0 )
	-8-> (i1=3, i3=1, i4=0, i5=0, i6=0, i7=0, i8=0 )
	-11-> ( )
	
NO

Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
MAYBE


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄
  Temp_Vars:  F, G
  Locations:  l0, l1, l2, l3, l4
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃, X₄) → l1(F, F, F, 0, X₄)
  t₁: l1(X₀, X₁, X₂, X₃, X₄) → l1(X₀, X₁, X₂, 1+X₃, F) :|: 1+X₃ ≤ X₂
  t₈: l1(X₀, X₁, X₂, X₃, X₄) → l2(X₀, X₁, X₂, X₃, X₄) :|: X₂ ≤ X₃
  t₂: l2(X₀, X₁, X₂, X₃, X₄) → l2(X₀, X₁, X₂, X₃, X₄) :|: 1+F ≤ 0
  t₃: l2(X₀, X₁, X₂, X₃, X₄) → l2(X₀, X₁, X₂, X₃, X₄)
  t₇: l2(X₀, X₁, X₂, X₃, X₄) → l3(X₀, X₁, X₂, X₃, X₄)
  t₄: l3(X₀, X₁, X₂, X₃, X₄) → l3(X₀, X₁, X₂, X₃, X₄) :|: 1+G ≤ F
  t₅: l3(X₀, X₁, X₂, X₃, X₄) → l3(X₀, X₁, X₂, X₃, X₄)
  t₆: l3(X₀, X₁, X₂, X₃, X₄) → l4(X₀, X₁, X₂, X₃, X₄)


Preprocessing
  Eliminate variables [X₀; X₁; X₄] that do not contribute to the problem


  Found invariant 0 ≤ X₁ ∧ X₀ ≤ X₁ for location l2


  Found invariant 0 ≤ X₁ for location l1


  Found invariant 0 ≤ X₁ ∧ X₀ ≤ X₁ for location l4


  Found invariant 0 ≤ X₁ ∧ X₀ ≤ X₁ for location l3


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁
  Temp_Vars:  F, G
  Locations:  l0, l1, l2, l3, l4
  Return Locations:  
  Transitions:
  t₉: l0(X₀, X₁) → l1(F, 0)
  t₁₀: l1(X₀, X₁) → l1(X₀, 1+X₁) :|: 1+X₁ ≤ X₀ ∧ 0 ≤ X₁
  t₁₁: l1(X₀, X₁) → l2(X₀, X₁) :|: X₀ ≤ X₁ ∧ 0 ≤ X₁
  t₁₂: l2(X₀, X₁) → l2(X₀, X₁) :|: 1+F ≤ 0 ∧ X₀ ≤ X₁ ∧ 0 ≤ X₁
  t₁₃: l2(X₀, X₁) → l2(X₀, X₁) :|: X₀ ≤ X₁ ∧ 0 ≤ X₁
  t₁₄: l2(X₀, X₁) → l3(X₀, X₁) :|: X₀ ≤ X₁ ∧ 0 ≤ X₁
  t₁₅: l3(X₀, X₁) → l3(X₀, X₁) :|: 1+G ≤ F ∧ X₀ ≤ X₁ ∧ 0 ≤ X₁
  t₁₆: l3(X₀, X₁) → l3(X₀, X₁) :|: X₀ ≤ X₁ ∧ 0 ≤ X₁
  t₁₇: l3(X₀, X₁) → l4(X₀, X₁) :|: X₀ ≤ X₁ ∧ 0 ≤ X₁


  Found invariant 0 ≤ X₁ ∧ X₀ ≤ X₁ for location l2


  Found invariant X₁ ≤ X₀ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l1_v1


  Found invariant X₁ ≤ 0 ∧ 0 ≤ X₁ for location l1


  Found invariant 0 ≤ X₁ ∧ X₀ ≤ X₁ for location l4


  Found invariant 0 ≤ X₁ ∧ X₀ ≤ X₁ for location l3


  Found invariant 0 ≤ X₁ ∧ X₀ ≤ X₁ for location l2


  Found invariant 0 ≤ X₁ ∧ X₀ ≤ X₁ for location l2_v1


  Found invariant 0 ≤ X₁ for location l1


  Found invariant 0 ≤ X₁ ∧ X₀ ≤ X₁ for location l4


  Found invariant 0 ≤ X₁ ∧ X₀ ≤ X₁ for location l3


  Found invariant 0 ≤ X₁ ∧ X₀ ≤ X₁ for location l2


  Found invariant 0 ≤ X₁ for location l1


  Found invariant 0 ≤ X₁ ∧ X₀ ≤ X₁ for location l4


  Found invariant 0 ≤ X₁ ∧ X₀ ≤ X₁ for location l3


  Found invariant 0 ≤ X₁ ∧ X₀ ≤ X₁ for location l3_v1


All Bounds
Timebounds
  Overall timebound:inf {Infinity}
    t₉: 1 {O(1)}
    t₁₀: inf {Infinity}
    t₁₁: 1 {O(1)}
    t₁₂: inf {Infinity}
    t₁₃: inf {Infinity}
    t₁₄: 1 {O(1)}
    t₁₅: inf {Infinity}
    t₁₆: inf {Infinity}
    t₁₇: 1 {O(1)}


Costbounds
  Overall costbound: inf {Infinity}
    t₉: 1 {O(1)}
    t₁₀: inf {Infinity}
    t₁₁: 1 {O(1)}
    t₁₂: inf {Infinity}
    t₁₃: inf {Infinity}
    t₁₄: 1 {O(1)}
    t₁₅: inf {Infinity}
    t₁₆: inf {Infinity}
    t₁₇: 1 {O(1)}


Sizebounds
    t₉, X₁: 0 {O(1)}

