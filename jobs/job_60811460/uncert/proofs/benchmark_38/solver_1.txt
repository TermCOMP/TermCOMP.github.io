WORST_CASE(Omega(n^1),O(n^1))

# LoAT Proof:
WORST_CASE(Omega(n^1),?)

WORST_CASE(Omega(n^1),?)
Initial ITS

Start location: evalEx7start

Location map:
LoAT_sink -> 0
evalEx7start -> 1
evalEx7entryin -> 2
evalEx7bb3in -> 3
evalEx7bbin -> 4
evalEx7returnin -> 5
evalEx7stop -> 6

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-1+i4 >= 0 /\ -2+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=1+i3, i6'=1+i4
   2: (-3+i1 == 0 /\ -1-i6+i4 >= 0) /\ i1'=4, i3'=1+i3
   3: (-3+i1 == 0 /\ -1+i6-i4 >= 0) /\ i1'=4, i3'=1+i3
   4: (-3+i1 == 0 /\ i6-i4 == 0) /\ i1'=5, i3'=1+i3
   5: (-1+i6-i5 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=1+i3, i6'=0
   6: (-4+i1 == 0 /\ -i6+i5 >= 0) /\ i1'=3, i3'=1+i3, i6'=1+i6
   7: -5+i1 == 0 /\ i1'=6, i3'=1+i3

Dependency graph:
0 -> 1
1 -> 2, 1 -> 3, 1 -> 4
2 -> 5, 2 -> 6
3 -> 5, 3 -> 6
4 -> 7
5 -> 2, 5 -> 3, 5 -> 4
6 -> 2, 6 -> 3, 6 -> 4

Chained Linear Paths

	Applied Chaining

	First rule:
	-1+i1 == 0 /\ i1'=2, i3'=1+i3
	Second rule:
	(-1+i4 >= 0 /\ -2+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=1+i3, i6'=1+i4
	New rule:
	(0 == 0 /\ -1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=2+i3, i6'=1+i4
	
	Applied Deletion

	Removed the following rules: 0, 1
	
	Applied Chaining

	First rule:
	(-3+i1 == 0 /\ i6-i4 == 0) /\ i1'=5, i3'=1+i3
	Second rule:
	-5+i1 == 0 /\ i1'=6, i3'=1+i3
	New rule:
	(0 == 0 /\ -3+i1 == 0 /\ i6-i4 == 0) /\ i1'=6, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 4, 7

Start location: evalEx7start

Location map:
LoAT_sink -> 0
evalEx7start -> 1
evalEx7entryin -> 2
evalEx7bb3in -> 3
evalEx7bbin -> 4
evalEx7returnin -> 5
evalEx7stop -> 6

Rules:
   2: (-3+i1 == 0 /\ -1-i6+i4 >= 0) /\ i1'=4, i3'=1+i3
   3: (-3+i1 == 0 /\ -1+i6-i4 >= 0) /\ i1'=4, i3'=1+i3
   5: (-1+i6-i5 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=1+i3, i6'=0
   6: (-4+i1 == 0 /\ -i6+i5 >= 0) /\ i1'=3, i3'=1+i3, i6'=1+i6
   8: (0 == 0 /\ -1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=2+i3, i6'=1+i4
   9: (0 == 0 /\ -3+i1 == 0 /\ i6-i4 == 0) /\ i1'=6, i3'=2+i3

Dependency graph:
2 -> 5, 2 -> 6
3 -> 5, 3 -> 6
5 -> 2, 5 -> 3, 5 -> 9
6 -> 2, 6 -> 3, 6 -> 9
8 -> 2, 8 -> 3, 8 -> 9

Preprocessed Transitions

	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=2+i3, i6'=1+i4
	New rule:
	(-1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=2+i3, i6'=1+i4
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -3+i1 == 0 /\ i6-i4 == 0) /\ i1'=6, i3'=2+i3
	New rule:
	(-3+i1 == 0 /\ i6-i4 == 0) /\ i1'=6, i3'=2+i3

Start location: evalEx7start

Location map:
LoAT_sink -> 0
evalEx7start -> 1
evalEx7entryin -> 2
evalEx7bb3in -> 3
evalEx7bbin -> 4
evalEx7returnin -> 5
evalEx7stop -> 6

Rules:
   2: (-3+i1 == 0 /\ -1-i6+i4 >= 0) /\ i1'=4, i3'=1+i3
   3: (-3+i1 == 0 /\ -1+i6-i4 >= 0) /\ i1'=4, i3'=1+i3
   5: (-1+i6-i5 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=1+i3, i6'=0
   6: (-4+i1 == 0 /\ -i6+i5 >= 0) /\ i1'=3, i3'=1+i3, i6'=1+i6
  10: (-1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=2+i3, i6'=1+i4
  11: (-3+i1 == 0 /\ i6-i4 == 0) /\ i1'=6, i3'=2+i3

Dependency graph:
2 -> 5, 2 -> 6
3 -> 5, 3 -> 6
5 -> 2, 5 -> 3, 5 -> 11
6 -> 2, 6 -> 3, 6 -> 11
10 -> 2, 10 -> 3, 10 -> 11

Refined Dependency Graph

	Removed the following edges: 10 -> 2, 10 -> 11

Start location: evalEx7start

Location map:
LoAT_sink -> 0
evalEx7start -> 1
evalEx7entryin -> 2
evalEx7bb3in -> 3
evalEx7bbin -> 4
evalEx7returnin -> 5
evalEx7stop -> 6

Rules:
   2: (-3+i1 == 0 /\ -1-i6+i4 >= 0) /\ i1'=4, i3'=1+i3
   3: (-3+i1 == 0 /\ -1+i6-i4 >= 0) /\ i1'=4, i3'=1+i3
   5: (-1+i6-i5 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=1+i3, i6'=0
   6: (-4+i1 == 0 /\ -i6+i5 >= 0) /\ i1'=3, i3'=1+i3, i6'=1+i6
  10: (-1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=2+i3, i6'=1+i4
  11: (-3+i1 == 0 /\ i6-i4 == 0) /\ i1'=6, i3'=2+i3

Dependency graph:
2 -> 5, 2 -> 6
3 -> 5, 3 -> 6
5 -> 2, 5 -> 3, 5 -> 11
6 -> 2, 6 -> 3, 6 -> 11
10 -> 3

Step with 10

	Trace

	10[(-1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{}
	
Step with 3

	Trace

	10[(-1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0)]
	3[(-3+i1 == 0 /\ -1+i6-i4 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Step with 6

	Trace

	10[(-1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0)]
	3[(-3+i1 == 0 /\ -1+i6-i4 >= 0)]
	6[(-4+i1 == 0 /\ -i6+i5 >= 0)]
	
	Blocked

	{}
	{}
	{}
	{}
	
Poly(n^1)

Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -3+i1 == 0 /\ -1+i6-i4 >= 0 /\ -i6+i5 >= 0) /\ i1'=3, i3'=2+i3, i6'=1+i6
		New rule:
		(-3+i1 == 0 /\ -1+i6-i4 >= 0 /\ -i6+i5 >= 0) /\ i1'=3, i3'=2+i3, i6'=1+i6

	Loop Acceleration

	Original rule:
	(-3+i1 == 0 /\ -1+i6-i4 >= 0 /\ -i6+i5 >= 0) /\ i1'=3, i3'=2+i3, i6'=1+i6
	New rule:
	(-3+i1 >= 0 /\ 1-i6-it16+i5 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -1+it16 >= 0) /\ i1'=i1, i3'=2*it16+i3, i6'=i6+it16

		-3+i1 >= 0 [0]: unchanged
		
		-1+i6-i4 >= 0 [0]: monotonic increase yields -1+i6-i4 >= 0
		
		3-i1 >= 0 [0]: unchanged
		
		-i6+i5 >= 0 [0]: montonic decrease yields 1-i6-it16+i5 >= 0
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, -1+i6-i4 >= 0 -> -1+i6-i4 >= 0, 3-i1 >= 0 -> 3-i1 >= 0, -i6+i5 >= 0 -> 1-i6-it16+i5 >= 0}

	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ 1-i6-it16+i5 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -1+it16 >= 0) /\ i1'=i1, i3'=2*it16+i3, i6'=i6+it16
	New rule:
	(-3+i1 >= 0 /\ 1-i6-it16+i5 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -1+it16 >= 0) /\ i3'=2*it16+i3, i6'=i6+it16
	
	Instantiation

	Original rule:
	(-3+i1 >= 0 /\ 1-i6-it16+i5 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -1+it16 >= 0) /\ i3'=2*it16+i3, i6'=i6+it16
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -i6+i5 >= 0) /\ i3'=2-2*i6+i3+2*i5, i6'=1+i5

Start location: evalEx7start

Location map:
LoAT_sink -> 0
evalEx7start -> 1
evalEx7entryin -> 2
evalEx7bb3in -> 3
evalEx7bbin -> 4
evalEx7returnin -> 5
evalEx7stop -> 6

Rules:
   2: (-3+i1 == 0 /\ -1-i6+i4 >= 0) /\ i1'=4, i3'=1+i3
   3: (-3+i1 == 0 /\ -1+i6-i4 >= 0) /\ i1'=4, i3'=1+i3
   5: (-1+i6-i5 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=1+i3, i6'=0
   6: (-4+i1 == 0 /\ -i6+i5 >= 0) /\ i1'=3, i3'=1+i3, i6'=1+i6
  10: (-1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=2+i3, i6'=1+i4
  11: (-3+i1 == 0 /\ i6-i4 == 0) /\ i1'=6, i3'=2+i3
  12: (0 >= 0 /\ -3+i1 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -i6+i5 >= 0) /\ i3'=2-2*i6+i3+2*i5, i6'=1+i5

Dependency graph:
2 -> 5, 2 -> 6
3 -> 5, 3 -> 6
5 -> 2, 5 -> 3, 5 -> 11, 5 -> 12
6 -> 2, 6 -> 3, 6 -> 11, 6 -> 12
10 -> 3, 10 -> 12
12 -> 2, 12 -> 3, 12 -> 11

	Trace

	10[(-1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0)]
	12[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -i6+i5 >= 0)]
	
	Blocked

	{}
	{}
	{12[T]}
	
Step with 3

	Trace

	10[(-1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0)]
	12[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -i6+i5 >= 0)]
	3[(-3+i1 == 0 /\ -1+i6-i4 >= 0)]
	
	Blocked

	{}
	{}
	{2[T], 11[T], 12[T]}
	{}
	
Step with 5

	Trace

	10[(-1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0)]
	12[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -i6+i5 >= 0)]
	3[(-3+i1 == 0 /\ -1+i6-i4 >= 0)]
	5[(-1+i6-i5 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{}
	{2[T], 11[T], 12[T]}
	{}
	{}
	
Accelerate and Drop

	Certificate of Non-Termination

	Original rule:
	(-3+i1 == 0 /\ -1+i6-i5 >= 0 /\ -1+i6-i4 >= 0) /\ i1'=3, i3'=2+i3, i6'=0
	New rule:
	(i6 <= 0 /\ -3+i1 >= 0 /\ -1+i6-i5 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0) /\ i1'=0

		-3+i1 >= 0 [0]: unchanged
		
		-1+i6-i5 >= 0 [0]: eventual decrease yields (-1+i6-i5 >= 0 /\ -1-i5 >= 0)
		
		-1+i6-i5 >= 0 [1]: eventual increase yields (i6 <= 0 /\ -1+i6-i5 >= 0)
		
		-1+i6-i4 >= 0 [0]: eventual decrease yields (-1+i6-i4 >= 0 /\ -1-i4 >= 0)
		
		-1+i6-i4 >= 0 [1]: eventual increase yields (i6 <= 0 /\ -1+i6-i4 >= 0)
		
		3-i1 >= 0 [0]: unchanged
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, -1+i6-i5 >= 0 -> (i6 <= 0 /\ -1+i6-i5 >= 0), -1+i6-i4 >= 0 -> (i6 <= 0 /\ -1+i6-i4 >= 0), 3-i1 >= 0 -> 3-i1 >= 0}

		Simplified Guard

		Original rule:
		(0 == 0 /\ -3+i1 == 0 /\ -1+i6-i5 >= 0 /\ -1+i6-i4 >= 0) /\ i1'=3, i3'=2+i3, i6'=0
		New rule:
		(-3+i1 == 0 /\ -1+i6-i5 >= 0 /\ -1+i6-i4 >= 0) /\ i1'=3, i3'=2+i3, i6'=0

	Loop Acceleration

	Original rule:
	(-3+i1 == 0 /\ -1+i6-i5 >= 0 /\ -1+i6-i4 >= 0) /\ i1'=3, i3'=2+i3, i6'=0
	New rule:
	(-3+i1 >= 0 /\ -1+i6-i5 >= 0 /\ -1-i5 >= 0 /\ -1+it40 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -1-i4 >= 0) /\ i1'=i1, i3'=i3+2*it40, i6'=0

		-3+i1 >= 0 [0]: unchanged
		
		-1+i6-i5 >= 0 [0]: eventual decrease yields (-1+i6-i5 >= 0 /\ -1-i5 >= 0)
		
		-1+i6-i5 >= 0 [1]: eventual increase yields (i6 <= 0 /\ -1+i6-i5 >= 0)
		
		-1+i6-i4 >= 0 [0]: eventual decrease yields (-1+i6-i4 >= 0 /\ -1-i4 >= 0)
		
		-1+i6-i4 >= 0 [1]: eventual increase yields (i6 <= 0 /\ -1+i6-i4 >= 0)
		
		3-i1 >= 0 [0]: unchanged
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, -1+i6-i5 >= 0 -> (-1+i6-i5 >= 0 /\ -1-i5 >= 0), -1+i6-i4 >= 0 -> (-1+i6-i4 >= 0 /\ -1-i4 >= 0), 3-i1 >= 0 -> 3-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ -1+i6-i5 >= 0 /\ -1-i5 >= 0 /\ -1+it40 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -1-i4 >= 0) /\ i1'=i1, i3'=i3+2*it40, i6'=0
	New rule:
	(-3+i1 >= 0 /\ -1+i6-i5 >= 0 /\ -1-i5 >= 0 /\ -1+it40 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -1-i4 >= 0) /\ i3'=i3+2*it40, i6'=0

Start location: evalEx7start

Location map:
LoAT_sink -> 0
evalEx7start -> 1
evalEx7entryin -> 2
evalEx7bb3in -> 3
evalEx7bbin -> 4
evalEx7returnin -> 5
evalEx7stop -> 6

Rules:
   2: (-3+i1 == 0 /\ -1-i6+i4 >= 0) /\ i1'=4, i3'=1+i3
   3: (-3+i1 == 0 /\ -1+i6-i4 >= 0) /\ i1'=4, i3'=1+i3
   5: (-1+i6-i5 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=1+i3, i6'=0
   6: (-4+i1 == 0 /\ -i6+i5 >= 0) /\ i1'=3, i3'=1+i3, i6'=1+i6
  10: (-1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=2+i3, i6'=1+i4
  11: (-3+i1 == 0 /\ i6-i4 == 0) /\ i1'=6, i3'=2+i3
  12: (0 >= 0 /\ -3+i1 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -i6+i5 >= 0) /\ i3'=2-2*i6+i3+2*i5, i6'=1+i5
  13: (i6 <= 0 /\ -3+i1 >= 0 /\ -1+i6-i5 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0) /\ i1'=0
  14: (-3+i1 >= 0 /\ -1+i6-i5 >= 0 /\ -1-i5 >= 0 /\ -1+it40 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -1-i4 >= 0) /\ i3'=i3+2*it40, i6'=0

Dependency graph:
2 -> 5, 2 -> 6
3 -> 5, 3 -> 6
5 -> 2, 5 -> 3, 5 -> 11, 5 -> 12, 5 -> 13, 5 -> 14
6 -> 2, 6 -> 3, 6 -> 11, 6 -> 12, 6 -> 13, 6 -> 14
10 -> 3, 10 -> 12, 10 -> 13, 10 -> 14
12 -> 2, 12 -> 3, 12 -> 11, 12 -> 13, 12 -> 14
14 -> 2, 14 -> 3, 14 -> 11, 14 -> 12, 14 -> 13

	Trace

	10[(-1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0)]
	12[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -i6+i5 >= 0)]
	
	Blocked

	{}
	{}
	{2[T], 11[T], 12[T]}
	
Step with 3

	Trace

	10[(-1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0)]
	12[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -i6+i5 >= 0)]
	3[(-3+i1 == 0 /\ -1+i6-i4 >= 0)]
	
	Blocked

	{}
	{}
	{2[T], 11[T], 12[T], 13[T], 14[T]}
	{}
	
Step with 5

	Trace

	10[(-1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0)]
	12[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -i6+i5 >= 0)]
	3[(-3+i1 == 0 /\ -1+i6-i4 >= 0)]
	5[(-1+i6-i5 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{}
	{2[T], 11[T], 12[T], 13[T], 14[T]}
	{6[T]}
	{}
	
Accelerate and Drop

	Certificate of Non-Termination

	Original rule:
	(-3+i1 >= 0 /\ -3+i1 == 0 /\ -i4+i5 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -i6+i5 >= 0) /\ i1'=3, i3'=4-2*i6+i3+2*i5, i6'=0
	New rule:
	(i6 <= 0 /\ -3+i1 >= 0 /\ -i6 <= 0 /\ -i4+i5 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -i6+i5 >= 0) /\ i1'=0

		-3+i1 >= 0 [0]: unchanged
		
		-i4+i5 >= 0 [0]: unchanged
		
		-1+i6-i4 >= 0 [0]: eventual decrease yields (-1+i6-i4 >= 0 /\ -1-i4 >= 0)
		
		-1+i6-i4 >= 0 [1]: eventual increase yields (i6 <= 0 /\ -1+i6-i4 >= 0)
		
		3-i1 >= 0 [0]: unchanged
		
		-i6+i5 >= 0 [0]: eventual decrease yields (-i6+i5 >= 0 /\ i5 >= 0)
		
		-i6+i5 >= 0 [1]: eventual increase yields (-i6 <= 0 /\ -i6+i5 >= 0)
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, -i4+i5 >= 0 -> -i4+i5 >= 0, -1+i6-i4 >= 0 -> (i6 <= 0 /\ -1+i6-i4 >= 0), 3-i1 >= 0 -> 3-i1 >= 0, -i6+i5 >= 0 -> (-i6 <= 0 /\ -i6+i5 >= 0)}

		Extracted Implied Equalities

		Original rule:
		(0 >= 0 /\ 0 == 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ -i4+i5 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -i6+i5 >= 0) /\ i1'=3, i3'=4-2*i6+i3+2*i5, i6'=0
		New rule:
		(0 >= 0 /\ 0 == 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ -i4+i5 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -i6+i5 >= 0) /\ i1'=3, i3'=4-2*i6+i3+2*i5, i6'=0
		
		Simplified Guard

		Original rule:
		(0 >= 0 /\ 0 == 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ -i4+i5 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -i6+i5 >= 0) /\ i1'=3, i3'=4-2*i6+i3+2*i5, i6'=0
		New rule:
		(-3+i1 >= 0 /\ -3+i1 == 0 /\ -i4+i5 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -i6+i5 >= 0) /\ i1'=3, i3'=4-2*i6+i3+2*i5, i6'=0

	Loop Acceleration

	Original rule:
	(-3+i1 >= 0 /\ -3+i1 == 0 /\ -i4+i5 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -i6+i5 >= 0) /\ i1'=3, i3'=4-2*i6+i3+2*i5, i6'=0
	New rule:
	(-3+i1 >= 0 /\ -3+i1 == 0 /\ -1+it51 >= 0 /\ -i4+i5 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -i6+i5 >= 0 /\ i5 >= 0 /\ -1-i4 >= 0) /\ i1'=i1, i3'=4-2*i6+i3+2*it51*i5+4*it51+2*i5, i6'=0

		-3+i1 >= 0 [0]: unchanged
		
		-i4+i5 >= 0 [0]: unchanged
		
		-1+i6-i4 >= 0 [0]: eventual decrease yields (-1+i6-i4 >= 0 /\ -1-i4 >= 0)
		
		-1+i6-i4 >= 0 [1]: eventual increase yields (i6 <= 0 /\ -1+i6-i4 >= 0)
		
		3-i1 >= 0 [0]: unchanged
		
		-i6+i5 >= 0 [0]: eventual decrease yields (-i6+i5 >= 0 /\ i5 >= 0)
		
		-i6+i5 >= 0 [1]: eventual increase yields (-i6 <= 0 /\ -i6+i5 >= 0)
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, -i4+i5 >= 0 -> -i4+i5 >= 0, -1+i6-i4 >= 0 -> (-1+i6-i4 >= 0 /\ -1-i4 >= 0), 3-i1 >= 0 -> 3-i1 >= 0, -i6+i5 >= 0 -> (-i6+i5 >= 0 /\ i5 >= 0)}

	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ -3+i1 == 0 /\ -1+it51 >= 0 /\ -i4+i5 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -i6+i5 >= 0 /\ i5 >= 0 /\ -1-i4 >= 0) /\ i1'=i1, i3'=4-2*i6+i3+2*it51*i5+4*it51+2*i5, i6'=0
	New rule:
	(-3+i1 >= 0 /\ -3+i1 == 0 /\ -1+it51 >= 0 /\ -i4+i5 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -i6+i5 >= 0 /\ i5 >= 0 /\ -1-i4 >= 0) /\ i3'=4-2*i6+i3+2*it51*i5+4*it51+2*i5, i6'=0

Start location: evalEx7start

Location map:
LoAT_sink -> 0
evalEx7start -> 1
evalEx7entryin -> 2
evalEx7bb3in -> 3
evalEx7bbin -> 4
evalEx7returnin -> 5
evalEx7stop -> 6

Rules:
   2: (-3+i1 == 0 /\ -1-i6+i4 >= 0) /\ i1'=4, i3'=1+i3
   3: (-3+i1 == 0 /\ -1+i6-i4 >= 0) /\ i1'=4, i3'=1+i3
   5: (-1+i6-i5 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=1+i3, i6'=0
   6: (-4+i1 == 0 /\ -i6+i5 >= 0) /\ i1'=3, i3'=1+i3, i6'=1+i6
  10: (-1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=2+i3, i6'=1+i4
  11: (-3+i1 == 0 /\ i6-i4 == 0) /\ i1'=6, i3'=2+i3
  12: (0 >= 0 /\ -3+i1 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -i6+i5 >= 0) /\ i3'=2-2*i6+i3+2*i5, i6'=1+i5
  13: (i6 <= 0 /\ -3+i1 >= 0 /\ -1+i6-i5 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0) /\ i1'=0
  14: (-3+i1 >= 0 /\ -1+i6-i5 >= 0 /\ -1-i5 >= 0 /\ -1+it40 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -1-i4 >= 0) /\ i3'=i3+2*it40, i6'=0
  15: (i6 <= 0 /\ -3+i1 >= 0 /\ -i6 <= 0 /\ -i4+i5 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -i6+i5 >= 0) /\ i1'=0
  16: (-3+i1 >= 0 /\ -3+i1 == 0 /\ -1+it51 >= 0 /\ -i4+i5 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -i6+i5 >= 0 /\ i5 >= 0 /\ -1-i4 >= 0) /\ i3'=4-2*i6+i3+2*it51*i5+4*it51+2*i5, i6'=0

Dependency graph:
2 -> 5, 2 -> 6
3 -> 5, 3 -> 6
5 -> 2, 5 -> 3, 5 -> 11, 5 -> 12, 5 -> 13, 5 -> 14, 5 -> 15, 5 -> 16
6 -> 2, 6 -> 3, 6 -> 11, 6 -> 12, 6 -> 13, 6 -> 14, 6 -> 15, 6 -> 16
10 -> 3, 10 -> 12, 10 -> 13, 10 -> 14, 10 -> 15, 10 -> 16
12 -> 2, 12 -> 3, 12 -> 11, 12 -> 13, 12 -> 14
14 -> 2, 14 -> 3, 14 -> 11, 14 -> 12, 14 -> 13, 14 -> 15, 14 -> 16
16 -> 2, 16 -> 3, 16 -> 11, 16 -> 12, 16 -> 13, 16 -> 14, 16 -> 15

	Trace

	10[(-1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{}
	
Step with 3

	Trace

	10[(-1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0)]
	3[(-3+i1 == 0 /\ -1+i6-i4 >= 0)]
	
	Blocked

	{}
	{14[T]}
	{}
	
Step with 6

	Trace

	10[(-1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0)]
	3[(-3+i1 == 0 /\ -1+i6-i4 >= 0)]
	6[(-4+i1 == 0 /\ -i6+i5 >= 0)]
	
	Blocked

	{}
	{14[T]}
	{5[T]}
	{}
	
Covered

	Trace

	10[(-1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0)]
	3[(-3+i1 == 0 /\ -1+i6-i4 >= 0)]
	
	Blocked

	{}
	{14[T]}
	{5[T], 6[T]}
	
Backtrack

	Trace

	10[(-1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{3[T], 14[T]}
	
Step with 12

	Trace

	10[(-1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0)]
	12[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -i6+i5 >= 0)]
	
	Blocked

	{}
	{3[T], 13[T], 14[T], 15[T], 16[T]}
	{12[T]}
	
Step with 3

	Trace

	10[(-1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0)]
	12[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -i6+i5 >= 0)]
	3[(-3+i1 == 0 /\ -1+i6-i4 >= 0)]
	
	Blocked

	{}
	{3[T], 13[T], 14[T], 15[T], 16[T]}
	{2[T], 12[T], 13[T], 14[T]}
	{}
	
Step with 5

	Trace

	10[(-1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0)]
	12[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -i6+i5 >= 0)]
	3[(-3+i1 == 0 /\ -1+i6-i4 >= 0)]
	5[(-1+i6-i5 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{3[T], 13[T], 14[T], 15[T], 16[T]}
	{2[T], 12[T], 13[T], 14[T]}
	{}
	{}
	
Step with 2

	Trace

	10[(-1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0)]
	12[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -i6+i5 >= 0)]
	3[(-3+i1 == 0 /\ -1+i6-i4 >= 0)]
	5[(-1+i6-i5 >= 0 /\ -4+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i6+i4 >= 0)]
	
	Blocked

	{}
	{3[T], 13[T], 14[T], 15[T], 16[T]}
	{2[T], 12[T], 13[T], 14[T]}
	{}
	{3[T], 11[T], 12[T], 13[T], 15[T]}
	{}
	
Accelerate and Drop

	Certificate of Non-Termination

	Original rule:
	(-1+i6-i5 >= 0 /\ -1+i4 >= 0 /\ -4+i1 == 0) /\ i1'=4, i3'=2+i3, i6'=0
	New rule:
	(i6 <= 0 /\ -1+i6-i5 >= 0 /\ -1+i4 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0) /\ i1'=0

		-1+i6-i5 >= 0 [0]: eventual decrease yields (-1+i6-i5 >= 0 /\ -1-i5 >= 0)
		
		-1+i6-i5 >= 0 [1]: eventual increase yields (i6 <= 0 /\ -1+i6-i5 >= 0)
		
		-1+i4 >= 0 [0]: unchanged
		
		-4+i1 >= 0 [0]: unchanged
		
		4-i1 >= 0 [0]: unchanged
		
		Replacement map: {-1+i6-i5 >= 0 -> (i6 <= 0 /\ -1+i6-i5 >= 0), -1+i4 >= 0 -> -1+i4 >= 0, -4+i1 >= 0 -> -4+i1 >= 0, 4-i1 >= 0 -> 4-i1 >= 0}

		Simplified Guard

		Original rule:
		(0 == 0 /\ -1+i6-i5 >= 0 /\ -1+i4 >= 0 /\ -4+i1 == 0) /\ i1'=4, i3'=2+i3, i6'=0
		New rule:
		(-1+i6-i5 >= 0 /\ -1+i4 >= 0 /\ -4+i1 == 0) /\ i1'=4, i3'=2+i3, i6'=0

	Loop Acceleration

	Original rule:
	(-1+i6-i5 >= 0 /\ -1+i4 >= 0 /\ -4+i1 == 0) /\ i1'=4, i3'=2+i3, i6'=0
	New rule:
	(-1+i6-i5 >= 0 /\ -1+i4 >= 0 /\ -1-i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+it82 >= 0) /\ i1'=i1, i3'=i3+2*it82, i6'=0

		-1+i6-i5 >= 0 [0]: eventual decrease yields (-1+i6-i5 >= 0 /\ -1-i5 >= 0)
		
		-1+i6-i5 >= 0 [1]: eventual increase yields (i6 <= 0 /\ -1+i6-i5 >= 0)
		
		-1+i4 >= 0 [0]: unchanged
		
		-4+i1 >= 0 [0]: unchanged
		
		4-i1 >= 0 [0]: unchanged
		
		Replacement map: {-1+i6-i5 >= 0 -> (-1+i6-i5 >= 0 /\ -1-i5 >= 0), -1+i4 >= 0 -> -1+i4 >= 0, -4+i1 >= 0 -> -4+i1 >= 0, 4-i1 >= 0 -> 4-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-1+i6-i5 >= 0 /\ -1+i4 >= 0 /\ -1-i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+it82 >= 0) /\ i1'=i1, i3'=i3+2*it82, i6'=0
	New rule:
	(-1+i6-i5 >= 0 /\ -1+i4 >= 0 /\ -1-i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+it82 >= 0) /\ i3'=i3+2*it82, i6'=0

Start location: evalEx7start

Location map:
LoAT_sink -> 0
evalEx7start -> 1
evalEx7entryin -> 2
evalEx7bb3in -> 3
evalEx7bbin -> 4
evalEx7returnin -> 5
evalEx7stop -> 6

Rules:
   2: (-3+i1 == 0 /\ -1-i6+i4 >= 0) /\ i1'=4, i3'=1+i3
   3: (-3+i1 == 0 /\ -1+i6-i4 >= 0) /\ i1'=4, i3'=1+i3
   5: (-1+i6-i5 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=1+i3, i6'=0
   6: (-4+i1 == 0 /\ -i6+i5 >= 0) /\ i1'=3, i3'=1+i3, i6'=1+i6
  10: (-1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=2+i3, i6'=1+i4
  11: (-3+i1 == 0 /\ i6-i4 == 0) /\ i1'=6, i3'=2+i3
  12: (0 >= 0 /\ -3+i1 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -i6+i5 >= 0) /\ i3'=2-2*i6+i3+2*i5, i6'=1+i5
  13: (i6 <= 0 /\ -3+i1 >= 0 /\ -1+i6-i5 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0) /\ i1'=0
  14: (-3+i1 >= 0 /\ -1+i6-i5 >= 0 /\ -1-i5 >= 0 /\ -1+it40 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -1-i4 >= 0) /\ i3'=i3+2*it40, i6'=0
  15: (i6 <= 0 /\ -3+i1 >= 0 /\ -i6 <= 0 /\ -i4+i5 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -i6+i5 >= 0) /\ i1'=0
  16: (-3+i1 >= 0 /\ -3+i1 == 0 /\ -1+it51 >= 0 /\ -i4+i5 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -i6+i5 >= 0 /\ i5 >= 0 /\ -1-i4 >= 0) /\ i3'=4-2*i6+i3+2*it51*i5+4*it51+2*i5, i6'=0
  17: (i6 <= 0 /\ -1+i6-i5 >= 0 /\ -1+i4 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0) /\ i1'=0
  18: (-1+i6-i5 >= 0 /\ -1+i4 >= 0 /\ -1-i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+it82 >= 0) /\ i3'=i3+2*it82, i6'=0

Dependency graph:
2 -> 5, 2 -> 6, 2 -> 17, 2 -> 18
3 -> 5, 3 -> 6, 3 -> 17, 3 -> 18
5 -> 2, 5 -> 3, 5 -> 11, 5 -> 12, 5 -> 13, 5 -> 14, 5 -> 15, 5 -> 16
6 -> 2, 6 -> 3, 6 -> 11, 6 -> 12, 6 -> 13, 6 -> 14, 6 -> 15, 6 -> 16
10 -> 3, 10 -> 12, 10 -> 13, 10 -> 14, 10 -> 15, 10 -> 16
12 -> 2, 12 -> 3, 12 -> 11, 12 -> 13, 12 -> 14
14 -> 2, 14 -> 3, 14 -> 11, 14 -> 12, 14 -> 13, 14 -> 15, 14 -> 16
16 -> 2, 16 -> 3, 16 -> 11, 16 -> 12, 16 -> 13, 16 -> 14, 16 -> 15
18 -> 5, 18 -> 6, 18 -> 17

	Trace

	10[(-1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0)]
	12[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -i6+i5 >= 0)]
	3[(-3+i1 == 0 /\ -1+i6-i4 >= 0)]
	
	Blocked

	{}
	{3[T], 13[T], 14[T], 15[T], 16[T]}
	{2[T], 12[T], 13[T], 14[T]}
	{}
	
Step with 5

	Trace

	10[(-1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0)]
	12[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -i6+i5 >= 0)]
	3[(-3+i1 == 0 /\ -1+i6-i4 >= 0)]
	5[(-1+i6-i5 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{3[T], 13[T], 14[T], 15[T], 16[T]}
	{2[T], 12[T], 13[T], 14[T]}
	{}
	{}
	
Step with 2

	Trace

	10[(-1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0)]
	12[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -i6+i5 >= 0)]
	3[(-3+i1 == 0 /\ -1+i6-i4 >= 0)]
	5[(-1+i6-i5 >= 0 /\ -4+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i6+i4 >= 0)]
	
	Blocked

	{}
	{3[T], 13[T], 14[T], 15[T], 16[T]}
	{2[T], 12[T], 13[T], 14[T]}
	{}
	{3[T], 12[T], 13[T], 14[T], 15[T], 16[T]}
	{}
	
Step with 6

	Trace

	10[(-1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0)]
	12[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -i6+i5 >= 0)]
	3[(-3+i1 == 0 /\ -1+i6-i4 >= 0)]
	5[(-1+i6-i5 >= 0 /\ -4+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i6+i4 >= 0)]
	6[(-4+i1 == 0 /\ -i6+i5 >= 0)]
	
	Blocked

	{}
	{3[T], 13[T], 14[T], 15[T], 16[T]}
	{2[T], 12[T], 13[T], 14[T]}
	{}
	{3[T], 12[T], 13[T], 14[T], 15[T], 16[T]}
	{17[T], 18[T]}
	{}
	
Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -3+i1 == 0 /\ -i6+i5 >= 0 /\ -1-i6+i4 >= 0) /\ i1'=3, i3'=2+i3, i6'=1+i6
		New rule:
		(-3+i1 == 0 /\ -i6+i5 >= 0 /\ -1-i6+i4 >= 0) /\ i1'=3, i3'=2+i3, i6'=1+i6

	Loop Acceleration

	Original rule:
	(-3+i1 == 0 /\ -i6+i5 >= 0 /\ -1-i6+i4 >= 0) /\ i1'=3, i3'=2+i3, i6'=1+i6
	New rule:
	(-3+i1 >= 0 /\ 1-i6+i5-it98 >= 0 /\ -1+it98 >= 0 /\ -i6+i4-it98 >= 0 /\ 3-i1 >= 0) /\ i1'=i1, i3'=i3+2*it98, i6'=i6+it98

		-3+i1 >= 0 [0]: unchanged
		
		3-i1 >= 0 [0]: unchanged
		
		-i6+i5 >= 0 [0]: montonic decrease yields 1-i6+i5-it98 >= 0
		
		-1-i6+i4 >= 0 [0]: montonic decrease yields -i6+i4-it98 >= 0
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, 3-i1 >= 0 -> 3-i1 >= 0, -i6+i5 >= 0 -> 1-i6+i5-it98 >= 0, -1-i6+i4 >= 0 -> -i6+i4-it98 >= 0}

	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ 1-i6+i5-it98 >= 0 /\ -1+it98 >= 0 /\ -i6+i4-it98 >= 0 /\ 3-i1 >= 0) /\ i1'=i1, i3'=i3+2*it98, i6'=i6+it98
	New rule:
	(-3+i1 >= 0 /\ 1-i6+i5-it98 >= 0 /\ -1+it98 >= 0 /\ -i6+i4-it98 >= 0 /\ 3-i1 >= 0) /\ i3'=i3+2*it98, i6'=i6+it98

Start location: evalEx7start

Location map:
LoAT_sink -> 0
evalEx7start -> 1
evalEx7entryin -> 2
evalEx7bb3in -> 3
evalEx7bbin -> 4
evalEx7returnin -> 5
evalEx7stop -> 6

Rules:
   2: (-3+i1 == 0 /\ -1-i6+i4 >= 0) /\ i1'=4, i3'=1+i3
   3: (-3+i1 == 0 /\ -1+i6-i4 >= 0) /\ i1'=4, i3'=1+i3
   5: (-1+i6-i5 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=1+i3, i6'=0
   6: (-4+i1 == 0 /\ -i6+i5 >= 0) /\ i1'=3, i3'=1+i3, i6'=1+i6
  10: (-1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=2+i3, i6'=1+i4
  11: (-3+i1 == 0 /\ i6-i4 == 0) /\ i1'=6, i3'=2+i3
  12: (0 >= 0 /\ -3+i1 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -i6+i5 >= 0) /\ i3'=2-2*i6+i3+2*i5, i6'=1+i5
  13: (i6 <= 0 /\ -3+i1 >= 0 /\ -1+i6-i5 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0) /\ i1'=0
  14: (-3+i1 >= 0 /\ -1+i6-i5 >= 0 /\ -1-i5 >= 0 /\ -1+it40 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -1-i4 >= 0) /\ i3'=i3+2*it40, i6'=0
  15: (i6 <= 0 /\ -3+i1 >= 0 /\ -i6 <= 0 /\ -i4+i5 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -i6+i5 >= 0) /\ i1'=0
  16: (-3+i1 >= 0 /\ -3+i1 == 0 /\ -1+it51 >= 0 /\ -i4+i5 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -i6+i5 >= 0 /\ i5 >= 0 /\ -1-i4 >= 0) /\ i3'=4-2*i6+i3+2*it51*i5+4*it51+2*i5, i6'=0
  17: (i6 <= 0 /\ -1+i6-i5 >= 0 /\ -1+i4 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0) /\ i1'=0
  18: (-1+i6-i5 >= 0 /\ -1+i4 >= 0 /\ -1-i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+it82 >= 0) /\ i3'=i3+2*it82, i6'=0
  19: (-3+i1 >= 0 /\ 1-i6+i5-it98 >= 0 /\ -1+it98 >= 0 /\ -i6+i4-it98 >= 0 /\ 3-i1 >= 0) /\ i3'=i3+2*it98, i6'=i6+it98

Dependency graph:
2 -> 5, 2 -> 6, 2 -> 17, 2 -> 18
3 -> 5, 3 -> 6, 3 -> 17, 3 -> 18
5 -> 2, 5 -> 3, 5 -> 11, 5 -> 12, 5 -> 13, 5 -> 14, 5 -> 15, 5 -> 16, 5 -> 19
6 -> 2, 6 -> 3, 6 -> 11, 6 -> 12, 6 -> 13, 6 -> 14, 6 -> 15, 6 -> 16, 6 -> 19
10 -> 3, 10 -> 12, 10 -> 13, 10 -> 14, 10 -> 15, 10 -> 16
12 -> 2, 12 -> 3, 12 -> 11, 12 -> 13, 12 -> 14, 12 -> 19
14 -> 2, 14 -> 3, 14 -> 11, 14 -> 12, 14 -> 13, 14 -> 15, 14 -> 16, 14 -> 19
16 -> 2, 16 -> 3, 16 -> 11, 16 -> 12, 16 -> 13, 16 -> 14, 16 -> 15, 16 -> 19
18 -> 5, 18 -> 6, 18 -> 17
19 -> 2, 19 -> 3, 19 -> 11, 19 -> 12, 19 -> 13, 19 -> 14, 19 -> 15, 19 -> 16

	Trace

	10[(-1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0)]
	12[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -i6+i5 >= 0)]
	3[(-3+i1 == 0 /\ -1+i6-i4 >= 0)]
	5[(-1+i6-i5 >= 0 /\ -4+i1 == 0)]
	19[(-3+i1 >= 0 /\ 1-i6+i5-it98 >= 0 /\ -1+it98 >= 0 /\ -i6+i4-it98 >= 0 /\ 3-i1 >= 0)]
	
	Blocked

	{}
	{3[T], 13[T], 14[T], 15[T], 16[T]}
	{2[T], 12[T], 13[T], 14[T]}
	{}
	{3[T], 12[T], 13[T], 14[T], 15[T], 16[T]}
	{19[T]}
	
Step with 2

	Trace

	10[(-1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0)]
	12[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -i6+i5 >= 0)]
	3[(-3+i1 == 0 /\ -1+i6-i4 >= 0)]
	5[(-1+i6-i5 >= 0 /\ -4+i1 == 0)]
	19[(-3+i1 >= 0 /\ 1-i6+i5-it98 >= 0 /\ -1+it98 >= 0 /\ -i6+i4-it98 >= 0 /\ 3-i1 >= 0)]
	2[(-3+i1 == 0 /\ -1-i6+i4 >= 0)]
	
	Blocked

	{}
	{3[T], 13[T], 14[T], 15[T], 16[T]}
	{2[T], 12[T], 13[T], 14[T]}
	{}
	{3[T], 12[T], 13[T], 14[T], 15[T], 16[T]}
	{13[T], 15[T], 19[T]}
	{}
	
Accelerate and Drop

	Certificate of Non-Termination

	Original rule:
	(-1+i6-i5 >= 0 /\ -1+i4-it98 >= 0 /\ -4+i1 == 0 /\ -1+it98 >= 0 /\ i4-it98 >= 0 /\ 1+i5-it98 >= 0) /\ i1'=4, i3'=2+i3+2*it98, i6'=it98
	New rule:
	(i6-it98 <= 0 /\ -1+i6-i5 >= 0 /\ -1+i4-it98 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+it98 >= 0 /\ i4-it98 >= 0 /\ 1+i5-it98 >= 0) /\ i1'=0

		-1+i6-i5 >= 0 [0]: eventual decrease yields (-1+i6-i5 >= 0 /\ -1-i5+it98 >= 0)
		
		-1+i6-i5 >= 0 [1]: eventual increase yields (i6-it98 <= 0 /\ -1+i6-i5 >= 0)
		
		-1+i4-it98 >= 0 [0]: unchanged
		
		-4+i1 >= 0 [0]: unchanged
		
		4-i1 >= 0 [0]: unchanged
		
		-1+it98 >= 0 [0]: unchanged
		
		i4-it98 >= 0 [0]: unchanged
		
		1+i5-it98 >= 0 [0]: unchanged
		
		Replacement map: {-1+i6-i5 >= 0 -> (i6-it98 <= 0 /\ -1+i6-i5 >= 0), -1+i4-it98 >= 0 -> -1+i4-it98 >= 0, -4+i1 >= 0 -> -4+i1 >= 0, 4-i1 >= 0 -> 4-i1 >= 0, -1+it98 >= 0 -> -1+it98 >= 0, i4-it98 >= 0 -> i4-it98 >= 0, 1+i5-it98 >= 0 -> 1+i5-it98 >= 0}

		Simplified Guard

		Original rule:
		(0 >= 0 /\ 0 == 0 /\ -1+i6-i5 >= 0 /\ -1+i4-it98 >= 0 /\ -4+i1 == 0 /\ -1+it98 >= 0 /\ i4-it98 >= 0 /\ 1+i5-it98 >= 0) /\ i1'=4, i3'=2+i3+2*it98, i6'=it98
		New rule:
		(-1+i6-i5 >= 0 /\ -1+i4-it98 >= 0 /\ -4+i1 == 0 /\ -1+it98 >= 0 /\ i4-it98 >= 0 /\ 1+i5-it98 >= 0) /\ i1'=4, i3'=2+i3+2*it98, i6'=it98

	Loop Acceleration

	Original rule:
	(-1+i6-i5 >= 0 /\ -1+i4-it98 >= 0 /\ -4+i1 == 0 /\ -1+it98 >= 0 /\ i4-it98 >= 0 /\ 1+i5-it98 >= 0) /\ i1'=4, i3'=2+i3+2*it98, i6'=it98
	New rule:
	(-1+i6-i5 >= 0 /\ -1+i4-it98 >= 0 /\ -1-i5+it98 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+it98 >= 0 /\ i4-it98 >= 0 /\ -1+it144 >= 0 /\ 1+i5-it98 >= 0) /\ i1'=i1, i3'=2*it144+i3+2*it144*it98, i6'=it98

		-1+i6-i5 >= 0 [0]: eventual decrease yields (-1+i6-i5 >= 0 /\ -1-i5+it98 >= 0)
		
		-1+i6-i5 >= 0 [1]: eventual increase yields (i6-it98 <= 0 /\ -1+i6-i5 >= 0)
		
		-1+i4-it98 >= 0 [0]: unchanged
		
		-4+i1 >= 0 [0]: unchanged
		
		4-i1 >= 0 [0]: unchanged
		
		-1+it98 >= 0 [0]: unchanged
		
		i4-it98 >= 0 [0]: unchanged
		
		1+i5-it98 >= 0 [0]: unchanged
		
		Replacement map: {-1+i6-i5 >= 0 -> (-1+i6-i5 >= 0 /\ -1-i5+it98 >= 0), -1+i4-it98 >= 0 -> -1+i4-it98 >= 0, -4+i1 >= 0 -> -4+i1 >= 0, 4-i1 >= 0 -> 4-i1 >= 0, -1+it98 >= 0 -> -1+it98 >= 0, i4-it98 >= 0 -> i4-it98 >= 0, 1+i5-it98 >= 0 -> 1+i5-it98 >= 0}

	Extracted Implied Equalities

	Original rule:
	(-1+i6-i5 >= 0 /\ -1+i4-it98 >= 0 /\ -1-i5+it98 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+it98 >= 0 /\ i4-it98 >= 0 /\ -1+it144 >= 0 /\ 1+i5-it98 >= 0) /\ i1'=i1, i3'=2*it144+i3+2*it144*it98, i6'=it98
	New rule:
	(-1+i6-i5 >= 0 /\ -1+i4-it98 >= 0 /\ -1-i5+it98 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ 4-i1 == 0 /\ -1+it98 >= 0 /\ i4-it98 >= 0 /\ -1+it144 >= 0 /\ 1+i5-it98 >= 0 /\ 1+i5-it98 == 0) /\ i1'=i1, i3'=2*it144+i3+2*it144*it98, i6'=it98
	
	Propagated Equalities

	Original rule:
	(-1+i6-i5 >= 0 /\ -1+i4-it98 >= 0 /\ -1-i5+it98 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ 4-i1 == 0 /\ -1+it98 >= 0 /\ i4-it98 >= 0 /\ -1+it144 >= 0 /\ 1+i5-it98 >= 0 /\ 1+i5-it98 == 0) /\ i1'=i1, i3'=2*it144+i3+2*it144*it98, i6'=it98
	New rule:
	(0 >= 0 /\ 0 == 0 /\ -1+i6-i5 >= 0 /\ -2+i4-i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ 4-i1 == 0 /\ -1+i4-i5 >= 0 /\ i5 >= 0 /\ -1+it144 >= 0) /\ i1'=i1, i3'=2*it144+i3+2*it144*(1+i5), i6'=1+i5
	
		propagated equality it98 = 1+i5
		
	Simplified Guard

	Original rule:
	(0 >= 0 /\ 0 == 0 /\ -1+i6-i5 >= 0 /\ -2+i4-i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ 4-i1 == 0 /\ -1+i4-i5 >= 0 /\ i5 >= 0 /\ -1+it144 >= 0) /\ i1'=i1, i3'=2*it144+i3+2*it144*(1+i5), i6'=1+i5
	New rule:
	(-1+i6-i5 >= 0 /\ -2+i4-i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ 4-i1 == 0 /\ -1+i4-i5 >= 0 /\ i5 >= 0 /\ -1+it144 >= 0) /\ i1'=i1, i3'=2*it144+i3+2*it144*(1+i5), i6'=1+i5
	
	Removed Trivial Updates

	Original rule:
	(-1+i6-i5 >= 0 /\ -2+i4-i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ 4-i1 == 0 /\ -1+i4-i5 >= 0 /\ i5 >= 0 /\ -1+it144 >= 0) /\ i1'=i1, i3'=2*it144+i3+2*it144*(1+i5), i6'=1+i5
	New rule:
	(-1+i6-i5 >= 0 /\ -2+i4-i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ 4-i1 == 0 /\ -1+i4-i5 >= 0 /\ i5 >= 0 /\ -1+it144 >= 0) /\ i3'=2*it144+i3+2*it144*(1+i5), i6'=1+i5

Start location: evalEx7start

Location map:
LoAT_sink -> 0
evalEx7start -> 1
evalEx7entryin -> 2
evalEx7bb3in -> 3
evalEx7bbin -> 4
evalEx7returnin -> 5
evalEx7stop -> 6

Rules:
   2: (-3+i1 == 0 /\ -1-i6+i4 >= 0) /\ i1'=4, i3'=1+i3
   3: (-3+i1 == 0 /\ -1+i6-i4 >= 0) /\ i1'=4, i3'=1+i3
   5: (-1+i6-i5 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=1+i3, i6'=0
   6: (-4+i1 == 0 /\ -i6+i5 >= 0) /\ i1'=3, i3'=1+i3, i6'=1+i6
  10: (-1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=2+i3, i6'=1+i4
  11: (-3+i1 == 0 /\ i6-i4 == 0) /\ i1'=6, i3'=2+i3
  12: (0 >= 0 /\ -3+i1 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -i6+i5 >= 0) /\ i3'=2-2*i6+i3+2*i5, i6'=1+i5
  13: (i6 <= 0 /\ -3+i1 >= 0 /\ -1+i6-i5 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0) /\ i1'=0
  14: (-3+i1 >= 0 /\ -1+i6-i5 >= 0 /\ -1-i5 >= 0 /\ -1+it40 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -1-i4 >= 0) /\ i3'=i3+2*it40, i6'=0
  15: (i6 <= 0 /\ -3+i1 >= 0 /\ -i6 <= 0 /\ -i4+i5 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -i6+i5 >= 0) /\ i1'=0
  16: (-3+i1 >= 0 /\ -3+i1 == 0 /\ -1+it51 >= 0 /\ -i4+i5 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -i6+i5 >= 0 /\ i5 >= 0 /\ -1-i4 >= 0) /\ i3'=4-2*i6+i3+2*it51*i5+4*it51+2*i5, i6'=0
  17: (i6 <= 0 /\ -1+i6-i5 >= 0 /\ -1+i4 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0) /\ i1'=0
  18: (-1+i6-i5 >= 0 /\ -1+i4 >= 0 /\ -1-i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+it82 >= 0) /\ i3'=i3+2*it82, i6'=0
  19: (-3+i1 >= 0 /\ 1-i6+i5-it98 >= 0 /\ -1+it98 >= 0 /\ -i6+i4-it98 >= 0 /\ 3-i1 >= 0) /\ i3'=i3+2*it98, i6'=i6+it98
  20: (i6-it98 <= 0 /\ -1+i6-i5 >= 0 /\ -1+i4-it98 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+it98 >= 0 /\ i4-it98 >= 0 /\ 1+i5-it98 >= 0) /\ i1'=0
  21: (-1+i6-i5 >= 0 /\ -2+i4-i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ 4-i1 == 0 /\ -1+i4-i5 >= 0 /\ i5 >= 0 /\ -1+it144 >= 0) /\ i3'=2*it144+i3+2*it144*(1+i5), i6'=1+i5

Dependency graph:
2 -> 5, 2 -> 6, 2 -> 17, 2 -> 18, 2 -> 20, 2 -> 21
3 -> 5, 3 -> 6, 3 -> 17, 3 -> 18, 3 -> 20, 3 -> 21
5 -> 2, 5 -> 3, 5 -> 11, 5 -> 12, 5 -> 13, 5 -> 14, 5 -> 15, 5 -> 16, 5 -> 19
6 -> 2, 6 -> 3, 6 -> 11, 6 -> 12, 6 -> 13, 6 -> 14, 6 -> 15, 6 -> 16, 6 -> 19
10 -> 3, 10 -> 12, 10 -> 13, 10 -> 14, 10 -> 15, 10 -> 16
12 -> 2, 12 -> 3, 12 -> 11, 12 -> 13, 12 -> 14, 12 -> 19
14 -> 2, 14 -> 3, 14 -> 11, 14 -> 12, 14 -> 13, 14 -> 15, 14 -> 16, 14 -> 19
16 -> 2, 16 -> 3, 16 -> 11, 16 -> 12, 16 -> 13, 16 -> 14, 16 -> 15, 16 -> 19
18 -> 5, 18 -> 6, 18 -> 17, 18 -> 20, 18 -> 21
19 -> 2, 19 -> 3, 19 -> 11, 19 -> 12, 19 -> 13, 19 -> 14, 19 -> 15, 19 -> 16
21 -> 5, 21 -> 6, 21 -> 17, 21 -> 18, 21 -> 20

	Trace

	10[(-1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0)]
	12[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -i6+i5 >= 0)]
	3[(-3+i1 == 0 /\ -1+i6-i4 >= 0)]
	
	Blocked

	{}
	{3[T], 13[T], 14[T], 15[T], 16[T]}
	{2[T], 12[T], 13[T], 14[T]}
	{}
	
Step with 5

	Trace

	10[(-1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0)]
	12[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -i6+i5 >= 0)]
	3[(-3+i1 == 0 /\ -1+i6-i4 >= 0)]
	5[(-1+i6-i5 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{3[T], 13[T], 14[T], 15[T], 16[T]}
	{2[T], 12[T], 13[T], 14[T]}
	{17[T], 18[T], 20[T], 21[T]}
	{}
	
Step with 2

	Trace

	10[(-1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0)]
	12[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -i6+i5 >= 0)]
	3[(-3+i1 == 0 /\ -1+i6-i4 >= 0)]
	5[(-1+i6-i5 >= 0 /\ -4+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i6+i4 >= 0)]
	
	Blocked

	{}
	{3[T], 13[T], 14[T], 15[T], 16[T]}
	{2[T], 12[T], 13[T], 14[T]}
	{17[T], 18[T], 20[T], 21[T]}
	{3[T], 11[T], 12[T], 13[T], 14[T], 15[T], 16[T]}
	{}
	
Step with 6

	Trace

	10[(-1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0)]
	12[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -i6+i5 >= 0)]
	3[(-3+i1 == 0 /\ -1+i6-i4 >= 0)]
	5[(-1+i6-i5 >= 0 /\ -4+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i6+i4 >= 0)]
	6[(-4+i1 == 0 /\ -i6+i5 >= 0)]
	
	Blocked

	{}
	{3[T], 13[T], 14[T], 15[T], 16[T]}
	{2[T], 12[T], 13[T], 14[T]}
	{17[T], 18[T], 20[T], 21[T]}
	{3[T], 11[T], 12[T], 13[T], 14[T], 15[T], 16[T]}
	{17[T], 20[T]}
	{}
	
Covered

	Trace

	10[(-1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0)]
	12[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -i6+i5 >= 0)]
	3[(-3+i1 == 0 /\ -1+i6-i4 >= 0)]
	5[(-1+i6-i5 >= 0 /\ -4+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i6+i4 >= 0)]
	
	Blocked

	{}
	{3[T], 13[T], 14[T], 15[T], 16[T]}
	{2[T], 12[T], 13[T], 14[T]}
	{17[T], 18[T], 20[T], 21[T]}
	{3[T], 11[T], 12[T], 13[T], 14[T], 15[T], 16[T]}
	{6[T], 17[T], 20[T]}
	
Backtrack

	Trace

	10[(-1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0)]
	12[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -i6+i5 >= 0)]
	3[(-3+i1 == 0 /\ -1+i6-i4 >= 0)]
	5[(-1+i6-i5 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{3[T], 13[T], 14[T], 15[T], 16[T]}
	{2[T], 12[T], 13[T], 14[T]}
	{17[T], 18[T], 20[T], 21[T]}
	{2[T], 3[T], 11[T], 12[T], 13[T], 14[T], 15[T], 16[T]}
	
Step with 19

	Trace

	10[(-1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0)]
	12[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -i6+i5 >= 0)]
	3[(-3+i1 == 0 /\ -1+i6-i4 >= 0)]
	5[(-1+i6-i5 >= 0 /\ -4+i1 == 0)]
	19[(-3+i1 >= 0 /\ 1-i6+i5-it98 >= 0 /\ -1+it98 >= 0 /\ -i6+i4-it98 >= 0 /\ 3-i1 >= 0)]
	
	Blocked

	{}
	{3[T], 13[T], 14[T], 15[T], 16[T]}
	{2[T], 12[T], 13[T], 14[T]}
	{17[T], 18[T], 20[T], 21[T]}
	{2[T], 3[T], 11[T], 12[T], 13[T], 14[T], 15[T], 16[T]}
	{19[T]}
	
Step with 2

	Trace

	10[(-1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0)]
	12[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -i6+i5 >= 0)]
	3[(-3+i1 == 0 /\ -1+i6-i4 >= 0)]
	5[(-1+i6-i5 >= 0 /\ -4+i1 == 0)]
	19[(-3+i1 >= 0 /\ 1-i6+i5-it98 >= 0 /\ -1+it98 >= 0 /\ -i6+i4-it98 >= 0 /\ 3-i1 >= 0)]
	2[(-3+i1 == 0 /\ -1-i6+i4 >= 0)]
	
	Blocked

	{}
	{3[T], 13[T], 14[T], 15[T], 16[T]}
	{2[T], 12[T], 13[T], 14[T]}
	{17[T], 18[T], 20[T], 21[T]}
	{2[T], 3[T], 11[T], 12[T], 13[T], 14[T], 15[T], 16[T]}
	{13[T], 15[T], 19[T]}
	{}
	
Step with 6

	Trace

	10[(-1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0)]
	12[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -i6+i5 >= 0)]
	3[(-3+i1 == 0 /\ -1+i6-i4 >= 0)]
	5[(-1+i6-i5 >= 0 /\ -4+i1 == 0)]
	19[(-3+i1 >= 0 /\ 1-i6+i5-it98 >= 0 /\ -1+it98 >= 0 /\ -i6+i4-it98 >= 0 /\ 3-i1 >= 0)]
	2[(-3+i1 == 0 /\ -1-i6+i4 >= 0)]
	6[(-4+i1 == 0 /\ -i6+i5 >= 0)]
	
	Blocked

	{}
	{3[T], 13[T], 14[T], 15[T], 16[T]}
	{2[T], 12[T], 13[T], 14[T]}
	{17[T], 18[T], 20[T], 21[T]}
	{2[T], 3[T], 11[T], 12[T], 13[T], 14[T], 15[T], 16[T]}
	{13[T], 15[T], 19[T]}
	{5[T], 17[T], 18[T], 20[T], 21[T]}
	{}
	
Covered

	Trace

	10[(-1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0)]
	12[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -i6+i5 >= 0)]
	3[(-3+i1 == 0 /\ -1+i6-i4 >= 0)]
	5[(-1+i6-i5 >= 0 /\ -4+i1 == 0)]
	19[(-3+i1 >= 0 /\ 1-i6+i5-it98 >= 0 /\ -1+it98 >= 0 /\ -i6+i4-it98 >= 0 /\ 3-i1 >= 0)]
	2[(-3+i1 == 0 /\ -1-i6+i4 >= 0)]
	
	Blocked

	{}
	{3[T], 13[T], 14[T], 15[T], 16[T]}
	{2[T], 12[T], 13[T], 14[T]}
	{17[T], 18[T], 20[T], 21[T]}
	{2[T], 3[T], 11[T], 12[T], 13[T], 14[T], 15[T], 16[T]}
	{13[T], 15[T], 19[T]}
	{5[T], 6[T], 17[T], 18[T], 20[T], 21[T]}
	
Backtrack

	Trace

	10[(-1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0)]
	12[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -i6+i5 >= 0)]
	3[(-3+i1 == 0 /\ -1+i6-i4 >= 0)]
	5[(-1+i6-i5 >= 0 /\ -4+i1 == 0)]
	19[(-3+i1 >= 0 /\ 1-i6+i5-it98 >= 0 /\ -1+it98 >= 0 /\ -i6+i4-it98 >= 0 /\ 3-i1 >= 0)]
	
	Blocked

	{}
	{3[T], 13[T], 14[T], 15[T], 16[T]}
	{2[T], 12[T], 13[T], 14[T]}
	{17[T], 18[T], 20[T], 21[T]}
	{2[T], 3[T], 11[T], 12[T], 13[T], 14[T], 15[T], 16[T]}
	{2[T], 13[T], 15[T], 19[T]}
	
Step with 11

	Trace

	10[(-1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0)]
	12[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -i6+i5 >= 0)]
	3[(-3+i1 == 0 /\ -1+i6-i4 >= 0)]
	5[(-1+i6-i5 >= 0 /\ -4+i1 == 0)]
	19[(-3+i1 >= 0 /\ 1-i6+i5-it98 >= 0 /\ -1+it98 >= 0 /\ -i6+i4-it98 >= 0 /\ 3-i1 >= 0)]
	11[(-3+i1 == 0 /\ i6-i4 == 0)]
	
	Blocked

	{}
	{3[T], 13[T], 14[T], 15[T], 16[T]}
	{2[T], 12[T], 13[T], 14[T]}
	{17[T], 18[T], 20[T], 21[T]}
	{2[T], 3[T], 11[T], 12[T], 13[T], 14[T], 15[T], 16[T]}
	{2[T], 3[T], 12[T], 13[T], 14[T], 15[T], 16[T], 19[T]}
	{}
	
Backtrack

	Trace

	10[(-1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0)]
	12[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -i6+i5 >= 0)]
	3[(-3+i1 == 0 /\ -1+i6-i4 >= 0)]
	5[(-1+i6-i5 >= 0 /\ -4+i1 == 0)]
	19[(-3+i1 >= 0 /\ 1-i6+i5-it98 >= 0 /\ -1+it98 >= 0 /\ -i6+i4-it98 >= 0 /\ 3-i1 >= 0)]
	
	Blocked

	{}
	{3[T], 13[T], 14[T], 15[T], 16[T]}
	{2[T], 12[T], 13[T], 14[T]}
	{17[T], 18[T], 20[T], 21[T]}
	{2[T], 3[T], 11[T], 12[T], 13[T], 14[T], 15[T], 16[T]}
	{2[T], 3[T], 11[T], 12[T], 13[T], 14[T], 15[T], 16[T], 19[T]}
	
Backtrack

	Trace

	10[(-1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0)]
	12[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -i6+i5 >= 0)]
	3[(-3+i1 == 0 /\ -1+i6-i4 >= 0)]
	5[(-1+i6-i5 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{3[T], 13[T], 14[T], 15[T], 16[T]}
	{2[T], 12[T], 13[T], 14[T]}
	{17[T], 18[T], 20[T], 21[T]}
	{2[T], 3[T], 11[T], 12[T], 13[T], 14[T], 15[T], 16[T], 19[T]}
	
Backtrack

	Trace

	10[(-1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0)]
	12[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -i6+i5 >= 0)]
	3[(-3+i1 == 0 /\ -1+i6-i4 >= 0)]
	
	Blocked

	{}
	{3[T], 13[T], 14[T], 15[T], 16[T]}
	{2[T], 12[T], 13[T], 14[T]}
	{5[T], 17[T], 18[T], 20[T], 21[T]}
	
Backtrack

	Trace

	10[(-1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0)]
	12[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i6-i4 >= 0 /\ 3-i1 >= 0 /\ -i6+i5 >= 0)]
	
	Blocked

	{}
	{3[T], 13[T], 14[T], 15[T], 16[T]}
	{2[T], 3[T], 12[T], 13[T], 14[T]}
	
Backtrack

	Trace

	10[(-1+i4 >= 0 /\ -1+i1 == 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{3[T], 12[T], 13[T], 14[T], 15[T], 16[T]}
	
Backtrack

	Trace

	Blocked

	{10[T]}
	
Accept

Poly(n^1)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  
  Locations:  l0, l1, l2, l3, l4, l5
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂) → l3(X₀, X₁, X₂)
  t₅: l1(X₀, X₁, X₂) → l4(X₀, X₁, 0) :|: 1+X₁ ≤ X₂
  t₆: l1(X₀, X₁, X₂) → l4(X₀, X₁, 1+X₂) :|: X₂ ≤ X₁
  t₇: l2(X₀, X₁, X₂) → l5(X₀, X₁, X₂)
  t₁: l3(X₀, X₁, X₂) → l4(X₀, X₁, 1+X₀) :|: 1 ≤ X₀ ∧ 1+X₀ ≤ X₁
  t₂: l4(X₀, X₁, X₂) → l1(X₀, X₁, X₂) :|: 1+X₂ ≤ X₀
  t₃: l4(X₀, X₁, X₂) → l1(X₀, X₁, X₂) :|: 1+X₀ ≤ X₂
  t₄: l4(X₀, X₁, X₂) → l2(X₀, X₁, X₂) :|: X₂ ≤ X₀ ∧ X₀ ≤ X₂


Preprocessing
  Found invariant 1+X₂ ≤ X₁ ∧ X₂ ≤ X₀ ∧ 1 ≤ X₂ ∧ 3 ≤ X₁+X₂ ∧ 2 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 2 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₀ for location l2


  Found invariant 1+X₂ ≤ X₁ ∧ X₂ ≤ X₀ ∧ 1 ≤ X₂ ∧ 3 ≤ X₁+X₂ ∧ 2 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 2 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₀ for location l5


  Found invariant X₂ ≤ 1+X₁ ∧ 0 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 1 ≤ X₀+X₂ ∧ 2 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₀ for location l1


  Found invariant X₂ ≤ 1+X₁ ∧ 0 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 1 ≤ X₀+X₂ ∧ 2 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₀ for location l4


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  
  Locations:  l0, l1, l2, l3, l4, l5
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂) → l3(X₀, X₁, X₂)
  t₅: l1(X₀, X₁, X₂) → l4(X₀, X₁, 0) :|: 1+X₁ ≤ X₂ ∧ X₂ ≤ 1+X₁ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₁ ∧ 2 ≤ X₁ ∧ 2 ≤ X₁+X₂ ∧ 3 ≤ X₀+X₁ ∧ 0 ≤ X₂
  t₆: l1(X₀, X₁, X₂) → l4(X₀, X₁, 1+X₂) :|: X₂ ≤ X₁ ∧ X₂ ≤ 1+X₁ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₁ ∧ 2 ≤ X₁ ∧ 2 ≤ X₁+X₂ ∧ 3 ≤ X₀+X₁ ∧ 0 ≤ X₂
  t₇: l2(X₀, X₁, X₂) → l5(X₀, X₁, X₂) :|: 1 ≤ X₀ ∧ 1+X₀ ≤ X₁ ∧ 1+X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀+X₂ ∧ 2 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 3 ≤ X₁+X₂ ∧ X₂ ≤ X₀ ∧ X₀ ≤ X₂
  t₁: l3(X₀, X₁, X₂) → l4(X₀, X₁, 1+X₀) :|: 1 ≤ X₀ ∧ 1+X₀ ≤ X₁
  t₂: l4(X₀, X₁, X₂) → l1(X₀, X₁, X₂) :|: 1+X₂ ≤ X₀ ∧ X₂ ≤ 1+X₁ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₁ ∧ 2 ≤ X₁ ∧ 2 ≤ X₁+X₂ ∧ 3 ≤ X₀+X₁ ∧ 0 ≤ X₂
  t₃: l4(X₀, X₁, X₂) → l1(X₀, X₁, X₂) :|: 1+X₀ ≤ X₂ ∧ X₂ ≤ 1+X₁ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₁ ∧ 2 ≤ X₁ ∧ 2 ≤ X₁+X₂ ∧ 3 ≤ X₀+X₁ ∧ 0 ≤ X₂
  t₄: l4(X₀, X₁, X₂) → l2(X₀, X₁, X₂) :|: X₂ ≤ X₀ ∧ X₀ ≤ X₂ ∧ X₂ ≤ 1+X₁ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₁ ∧ 2 ≤ X₁ ∧ 2 ≤ X₁+X₂ ∧ 3 ≤ X₀+X₁ ∧ 0 ≤ X₂


  Cut unsatisfiable transition [t₄: l4→l2; t₁₆₈: l4→l2; t₁₇₀: l4→l1_v2]


  Cut unreachable locations [l1_v2; l1_v3; l1_v4; l4_v1; l4_v2] from the program graph


  Found invariant 1+X₂ ≤ X₁ ∧ X₂ ≤ X₀ ∧ 1 ≤ X₂ ∧ 3 ≤ X₁+X₂ ∧ 2 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 2 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₀ for location l2


  Found invariant X₂ ≤ X₁ ∧ X₂ ≤ 1+X₀ ∧ 2 ≤ X₂ ∧ 4 ≤ X₁+X₂ ∧ 3 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 2 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₀ for location l1_v1


  Found invariant X₂ ≤ 1 ∧ 2+X₂ ≤ X₁ ∧ 1+X₂ ≤ X₀ ∧ 1 ≤ X₂ ∧ 4 ≤ X₁+X₂ ∧ 3 ≤ X₀+X₂ ∧ 3 ≤ X₁ ∧ 5 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 2 ≤ X₀ for location l1_v7


  Found invariant 1+X₂ ≤ X₁ ∧ X₂ ≤ X₀ ∧ 3 ≤ X₂ ∧ 7 ≤ X₁+X₂ ∧ 6 ≤ X₀+X₂ ∧ 4 ≤ X₁ ∧ 7 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 3 ≤ X₀ for location l4_v3


  Found invariant X₂ ≤ 2 ∧ 2+X₂ ≤ X₁ ∧ 1+X₂ ≤ X₀ ∧ 2 ≤ X₂ ∧ 6 ≤ X₁+X₂ ∧ 5 ≤ X₀+X₂ ∧ 4 ≤ X₁ ∧ 7 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 3 ≤ X₀ for location l1_v8


  Found invariant X₂ ≤ 1+X₁ ∧ 3 ≤ X₂ ∧ 5 ≤ X₁+X₂ ∧ 4 ≤ X₀+X₂ ∧ 2+X₀ ≤ X₂ ∧ 2 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₀ for location l4_v4


  Found invariant X₂ ≤ 0 ∧ 2+X₂ ≤ X₁ ∧ 1+X₂ ≤ X₀ ∧ 0 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 1 ≤ X₀+X₂ ∧ 2 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₀ for location l1_v6


  Found invariant X₂ ≤ 1 ∧ 1+X₂ ≤ X₁ ∧ X₂ ≤ X₀ ∧ 1 ≤ X₂ ∧ 3 ≤ X₁+X₂ ∧ 2 ≤ X₀+X₂ ∧ 2 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₀ for location l4_v6


  Found invariant 1+X₂ ≤ X₁ ∧ X₂ ≤ X₀ ∧ 1 ≤ X₂ ∧ 3 ≤ X₁+X₂ ∧ 2 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 2 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₀ for location l5


  Found invariant X₂ ≤ 1+X₁ ∧ 3 ≤ X₂ ∧ 5 ≤ X₁+X₂ ∧ 4 ≤ X₀+X₂ ∧ 2+X₀ ≤ X₂ ∧ 2 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₀ for location l1_v9


  Found invariant X₂ ≤ X₁ ∧ X₂ ≤ 1+X₀ ∧ 2 ≤ X₂ ∧ 4 ≤ X₁+X₂ ∧ 3 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 2 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₀ for location l4


  Found invariant X₂ ≤ 2 ∧ 1+X₂ ≤ X₁ ∧ X₂ ≤ X₀ ∧ 2 ≤ X₂ ∧ 5 ≤ X₁+X₂ ∧ 4 ≤ X₀+X₂ ∧ 3 ≤ X₁ ∧ 5 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 2 ≤ X₀ for location l4_v7


  Found invariant 2+X₂ ≤ X₁ ∧ 1+X₂ ≤ X₀ ∧ 3 ≤ X₂ ∧ 8 ≤ X₁+X₂ ∧ 7 ≤ X₀+X₂ ∧ 5 ≤ X₁ ∧ 9 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 4 ≤ X₀ for location l1_v5


  Found invariant X₂ ≤ 0 ∧ 2+X₂ ≤ X₁ ∧ 1+X₂ ≤ X₀ ∧ 0 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 1 ≤ X₀+X₂ ∧ 2 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₀ for location l4_v5


  Cut unsatisfiable transition [t₁₈₂: l1_v1→l4_v5]


Analysing control-flow refined program
MPRF for transition t₁₉₁: l4_v4(X₀, X₁, X₂) → l1_v9(X₀, X₁, X₂) :|: 1+X₀ ≤ X₂ ∧ X₂ ≤ 1+X₁ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₂ ∧ 2+X₀ ≤ X₂ ∧ 2 ≤ X₁ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₂ ∧ 3 ≤ X₀+X₁ ∧ 3 ≤ X₂ ∧ 4 ≤ X₀+X₂ ∧ 5 ≤ X₁+X₂ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₂ of depth 1:
  new bound:
    X₀+X₁+4 {O(n)}

  MPRF:
    • l1_v9: [1+X₁-X₂]
    • l4_v4: [2+X₁-X₂]




MPRF for transition t₁₉₂: l1_v9(X₀, X₁, X₂) → l4_v4(X₀, X₁, 1+X₂) :|: X₂ ≤ X₁ ∧ X₂ ≤ 1+X₁ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₁ ∧ 2+X₀ ≤ X₂ ∧ 2 ≤ X₁ ∧ 2 ≤ X₁+X₂ ∧ 3 ≤ X₀+X₁ ∧ 3 ≤ X₂ ∧ 4 ≤ X₀+X₂ ∧ 5 ≤ X₁+X₂ ∧ 0 ≤ X₂ of depth 1:
  new bound:
    X₀+X₁+3 {O(n)}

  MPRF:
    • l1_v9: [1+X₁-X₂]
    • l4_v4: [1+X₁-X₂]




MPRF for transition t₁₇₉: l4_v3(X₀, X₁, X₂) → l1_v5(X₀, X₁, X₂) :|: 1+X₂ ≤ X₀ ∧ X₂ ≤ 1+X₀ ∧ X₂ ≤ 1+X₁ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₁ ∧ 1+X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₂ ∧ 3 ≤ X₀ ∧ 3 ≤ X₀+X₁ ∧ 3 ≤ X₂ ∧ 4 ≤ X₁ ∧ 6 ≤ X₀+X₂ ∧ 7 ≤ X₀+X₁ ∧ 7 ≤ X₁+X₂ ∧ X₂ ≤ X₀ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₂ of depth 1:
  new bound:
    X₁+4 {O(n)}

  MPRF:
    • l1_v5: [X₁-X₂]
    • l4_v3: [1+X₁-X₂]




MPRF for transition t₁₈₀: l1_v5(X₀, X₁, X₂) → l4_v3(X₀, X₁, 1+X₂) :|: X₂ ≤ X₁ ∧ X₂ ≤ 1+X₁ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₂ ∧ 1+X₂ ≤ X₀ ∧ 1+X₀ ≤ X₁ ∧ 2 ≤ X₁ ∧ 2 ≤ X₁+X₂ ∧ 2+X₂ ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 3 ≤ X₂ ∧ 4 ≤ X₀ ∧ 5 ≤ X₁ ∧ 7 ≤ X₀+X₂ ∧ 8 ≤ X₁+X₂ ∧ 9 ≤ X₀+X₁ ∧ 0 ≤ X₂ of depth 1:
  new bound:
    X₁+4 {O(n)}

  MPRF:
    • l1_v5: [1+X₁-X₂]
    • l4_v3: [1+X₁-X₂]




CFR: Improvement to new bound with the following program: 
  method: PartialEvaluation new bound: 
    O(n)

  cfr-program: 
    Start:  l0
    Program_Vars:  X₀, X₁, X₂
    Temp_Vars:  
    Locations:  l0, l1_v1, l1_v5, l1_v6, l1_v7, l1_v8, l1_v9, l2, l3, l4, l4_v3, l4_v4, l4_v5, l4_v6, l4_v7, l5
    Return Locations:  
    Transitions:
    t₀: l0(X₀, X₁, X₂) → l3(X₀, X₁, X₂)
    t₁₈₁: l1_v1(X₀, X₁, X₂) → l4_v4(X₀, X₁, 1+X₂) :|: X₂ ≤ X₁ ∧ X₂ ≤ 1+X₀ ∧ X₂ ≤ 1+X₁ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₁ ∧ 1+X₀ ≤ X₂ ∧ 2 ≤ X₁ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₂ ∧ 3 ≤ X₀+X₁ ∧ 3 ≤ X₀+X₂ ∧ 4 ≤ X₁+X₂ ∧ 0 ≤ X₂
    t₁₈₀: l1_v5(X₀, X₁, X₂) → l4_v3(X₀, X₁, 1+X₂) :|: X₂ ≤ X₁ ∧ X₂ ≤ 1+X₁ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₂ ∧ 1+X₂ ≤ X₀ ∧ 1+X₀ ≤ X₁ ∧ 2 ≤ X₁ ∧ 2 ≤ X₁+X₂ ∧ 2+X₂ ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 3 ≤ X₂ ∧ 4 ≤ X₀ ∧ 5 ≤ X₁ ∧ 7 ≤ X₀+X₂ ∧ 8 ≤ X₁+X₂ ∧ 9 ≤ X₀+X₁ ∧ 0 ≤ X₂
    t₁₈₄: l1_v6(X₀, X₁, X₂) → l4_v6(X₀, X₁, 1+X₂) :|: X₂ ≤ X₁ ∧ X₂ ≤ 1+X₁ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₂ ∧ 1+X₂ ≤ X₀ ∧ 1+X₀ ≤ X₁ ∧ 2 ≤ X₁ ∧ 2 ≤ X₁+X₂ ∧ 2+X₂ ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 0 ≤ X₂ ∧ X₂ ≤ 0
    t₁₈₇: l1_v7(X₀, X₁, X₂) → l4_v7(X₀, X₁, 1+X₂) :|: X₂ ≤ X₁ ∧ X₂ ≤ 1+X₁ ∧ X₂ ≤ 1 ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₂ ∧ 1+X₂ ≤ X₀ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀ ∧ 2 ≤ X₁ ∧ 2 ≤ X₁+X₂ ∧ 2+X₂ ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 3 ≤ X₀+X₂ ∧ 3 ≤ X₁ ∧ 4 ≤ X₁+X₂ ∧ 5 ≤ X₀+X₁ ∧ 0 ≤ X₂
    t₁₉₀: l1_v8(X₀, X₁, X₂) → l4_v3(X₀, X₁, 1+X₂) :|: X₂ ≤ X₁ ∧ X₂ ≤ 2 ∧ X₂ ≤ 1+X₁ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₂ ∧ 1+X₂ ≤ X₀ ∧ 1+X₀ ≤ X₁ ∧ 2 ≤ X₁ ∧ 2 ≤ X₁+X₂ ∧ 2+X₂ ≤ X₁ ∧ 2 ≤ X₂ ∧ 3 ≤ X₀ ∧ 3 ≤ X₀+X₁ ∧ 4 ≤ X₁ ∧ 5 ≤ X₀+X₂ ∧ 6 ≤ X₁+X₂ ∧ 7 ≤ X₀+X₁ ∧ 0 ≤ X₂
    t₁₉₂: l1_v9(X₀, X₁, X₂) → l4_v4(X₀, X₁, 1+X₂) :|: X₂ ≤ X₁ ∧ X₂ ≤ 1+X₁ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₁ ∧ 2+X₀ ≤ X₂ ∧ 2 ≤ X₁ ∧ 2 ≤ X₁+X₂ ∧ 3 ≤ X₀+X₁ ∧ 3 ≤ X₂ ∧ 4 ≤ X₀+X₂ ∧ 5 ≤ X₁+X₂ ∧ 0 ≤ X₂
    t₁₉₃: l1_v9(X₀, X₁, X₂) → l4_v5(X₀, X₁, 0) :|: 1+X₁ ≤ X₂ ∧ X₂ ≤ 1+X₁ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₁ ∧ 2+X₀ ≤ X₂ ∧ 2 ≤ X₁ ∧ 2 ≤ X₁+X₂ ∧ 3 ≤ X₀+X₁ ∧ 3 ≤ X₂ ∧ 4 ≤ X₀+X₂ ∧ 5 ≤ X₁+X₂ ∧ 0 ≤ X₂
    t₇: l2(X₀, X₁, X₂) → l5(X₀, X₁, X₂) :|: 1 ≤ X₀ ∧ 1+X₀ ≤ X₁ ∧ 1+X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀+X₂ ∧ 2 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 3 ≤ X₁+X₂ ∧ X₂ ≤ X₀ ∧ X₀ ≤ X₂
    t₁: l3(X₀, X₁, X₂) → l4(X₀, X₁, 1+X₀) :|: 1 ≤ X₀ ∧ 1+X₀ ≤ X₁
    t₁₆₉: l4(X₀, X₁, X₂) → l1_v1(X₀, X₁, X₂) :|: 1+X₀ ≤ X₂ ∧ X₂ ≤ 1+X₀ ∧ X₂ ≤ 1+X₁ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₁ ∧ 2 ≤ X₁ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₂ ∧ 3 ≤ X₀+X₁ ∧ 3 ≤ X₀+X₂ ∧ 4 ≤ X₁+X₂ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₂
    t₁₇₉: l4_v3(X₀, X₁, X₂) → l1_v5(X₀, X₁, X₂) :|: 1+X₂ ≤ X₀ ∧ X₂ ≤ 1+X₀ ∧ X₂ ≤ 1+X₁ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₁ ∧ 1+X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₂ ∧ 3 ≤ X₀ ∧ 3 ≤ X₀+X₁ ∧ 3 ≤ X₂ ∧ 4 ≤ X₁ ∧ 6 ≤ X₀+X₂ ∧ 7 ≤ X₀+X₁ ∧ 7 ≤ X₁+X₂ ∧ X₂ ≤ X₀ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₂
    t₁₇₈: l4_v3(X₀, X₁, X₂) → l2(X₀, X₁, X₂) :|: X₂ ≤ X₀ ∧ X₀ ≤ X₂ ∧ X₂ ≤ 1+X₀ ∧ X₂ ≤ 1+X₁ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₁ ∧ 1+X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₂ ∧ 3 ≤ X₀ ∧ 3 ≤ X₀+X₁ ∧ 3 ≤ X₂ ∧ 4 ≤ X₁ ∧ 6 ≤ X₀+X₂ ∧ 7 ≤ X₀+X₁ ∧ 7 ≤ X₁+X₂ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₂
    t₁₉₁: l4_v4(X₀, X₁, X₂) → l1_v9(X₀, X₁, X₂) :|: 1+X₀ ≤ X₂ ∧ X₂ ≤ 1+X₁ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₂ ∧ 2+X₀ ≤ X₂ ∧ 2 ≤ X₁ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₂ ∧ 3 ≤ X₀+X₁ ∧ 3 ≤ X₂ ∧ 4 ≤ X₀+X₂ ∧ 5 ≤ X₁+X₂ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₂
    t₁₈₃: l4_v5(X₀, X₁, X₂) → l1_v6(X₀, X₁, X₂) :|: 1+X₂ ≤ X₀ ∧ X₂ ≤ 2 ∧ X₂ ≤ 1+X₀ ∧ X₂ ≤ 1+X₁ ∧ X₂ ≤ 1 ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₁ ∧ 2 ≤ X₁ ∧ 2 ≤ X₁+X₂ ∧ 2+X₂ ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ X₂ ≤ X₀ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₂ ∧ X₂ ≤ 0
    t₁₈₆: l4_v6(X₀, X₁, X₂) → l1_v7(X₀, X₁, X₂) :|: 1+X₂ ≤ X₀ ∧ X₂ ≤ 2 ∧ X₂ ≤ 1+X₀ ∧ X₂ ≤ 1+X₁ ∧ X₂ ≤ 1 ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₁ ∧ 1+X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀+X₂ ∧ 2 ≤ X₁ ∧ 2 ≤ X₁+X₂ ∧ 3 ≤ X₀+X₁ ∧ 3 ≤ X₁+X₂ ∧ X₂ ≤ X₀ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₂
    t₁₈₅: l4_v6(X₀, X₁, X₂) → l2(X₀, X₁, X₂) :|: X₂ ≤ X₀ ∧ X₀ ≤ X₂ ∧ X₂ ≤ 2 ∧ X₂ ≤ 1+X₀ ∧ X₂ ≤ 1+X₁ ∧ X₂ ≤ 1 ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₁ ∧ 1+X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀+X₂ ∧ 2 ≤ X₁ ∧ 2 ≤ X₁+X₂ ∧ 3 ≤ X₀+X₁ ∧ 3 ≤ X₁+X₂ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₂
    t₁₈₉: l4_v7(X₀, X₁, X₂) → l1_v8(X₀, X₁, X₂) :|: 1+X₂ ≤ X₀ ∧ X₂ ≤ 2 ∧ X₂ ≤ 1+X₀ ∧ X₂ ≤ 1+X₁ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₁ ∧ 1+X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀ ∧ 2 ≤ X₁ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₂ ∧ 3 ≤ X₀+X₁ ∧ 3 ≤ X₁ ∧ 4 ≤ X₀+X₂ ∧ 5 ≤ X₀+X₁ ∧ 5 ≤ X₁+X₂ ∧ X₂ ≤ X₀ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₂
    t₁₈₈: l4_v7(X₀, X₁, X₂) → l2(X₀, X₁, X₂) :|: X₂ ≤ X₀ ∧ X₀ ≤ X₂ ∧ X₂ ≤ 2 ∧ X₂ ≤ 1+X₀ ∧ X₂ ≤ 1+X₁ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₁ ∧ 1+X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀ ∧ 2 ≤ X₁ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₂ ∧ 3 ≤ X₀+X₁ ∧ 3 ≤ X₁ ∧ 4 ≤ X₀+X₂ ∧ 5 ≤ X₀+X₁ ∧ 5 ≤ X₁+X₂ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₂




All Bounds
Timebounds
  Overall timebound:2⋅X₀+4⋅X₁+30 {O(n)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₇: 1 {O(1)}
    t₁₆₉: 1 {O(1)}
    t₁₇₈: 1 {O(1)}
    t₁₇₉: X₁+4 {O(n)}
    t₁₈₀: X₁+4 {O(n)}
    t₁₈₁: 1 {O(1)}
    t₁₈₃: 1 {O(1)}
    t₁₈₄: 1 {O(1)}
    t₁₈₅: 1 {O(1)}
    t₁₈₆: 1 {O(1)}
    t₁₈₇: 1 {O(1)}
    t₁₈₈: 1 {O(1)}
    t₁₈₉: 1 {O(1)}
    t₁₉₀: 1 {O(1)}
    t₁₉₁: X₀+X₁+4 {O(n)}
    t₁₉₂: X₀+X₁+3 {O(n)}
    t₁₉₃: 1 {O(1)}


Costbounds
  Overall costbound: 2⋅X₀+4⋅X₁+30 {O(n)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₇: 1 {O(1)}
    t₁₆₉: 1 {O(1)}
    t₁₇₈: 1 {O(1)}
    t₁₇₉: X₁+4 {O(n)}
    t₁₈₀: X₁+4 {O(n)}
    t₁₈₁: 1 {O(1)}
    t₁₈₃: 1 {O(1)}
    t₁₈₄: 1 {O(1)}
    t₁₈₅: 1 {O(1)}
    t₁₈₆: 1 {O(1)}
    t₁₈₇: 1 {O(1)}
    t₁₈₈: 1 {O(1)}
    t₁₈₉: 1 {O(1)}
    t₁₉₀: 1 {O(1)}
    t₁₉₁: X₀+X₁+4 {O(n)}
    t₁₉₂: X₀+X₁+3 {O(n)}
    t₁₉₃: 1 {O(1)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₀, X₂: X₂ {O(n)}
    t₁, X₀: X₀ {O(n)}
    t₁, X₁: X₁ {O(n)}
    t₁, X₂: X₀+1 {O(n)}
    t₇, X₀: 2⋅X₀+3 {O(n)}
    t₇, X₁: 4⋅X₁ {O(n)}
    t₇, X₂: X₁+13 {O(n)}
    t₁₆₉, X₀: X₀ {O(n)}
    t₁₆₉, X₁: X₁ {O(n)}
    t₁₆₉, X₂: X₀+1 {O(n)}
    t₁₇₈, X₀: 2⋅X₀ {O(n)}
    t₁₇₈, X₁: 2⋅X₁ {O(n)}
    t₁₇₈, X₂: X₁+10 {O(n)}
    t₁₇₉, X₀: X₀ {O(n)}
    t₁₇₉, X₁: X₁ {O(n)}
    t₁₇₉, X₂: X₁+7 {O(n)}
    t₁₈₀, X₀: X₀ {O(n)}
    t₁₈₀, X₁: X₁ {O(n)}
    t₁₈₀, X₂: X₁+7 {O(n)}
    t₁₈₁, X₀: X₀ {O(n)}
    t₁₈₁, X₁: X₁ {O(n)}
    t₁₈₁, X₂: X₀+2 {O(n)}
    t₁₈₃, X₀: X₀ {O(n)}
    t₁₈₃, X₁: X₁ {O(n)}
    t₁₈₃, X₂: 0 {O(1)}
    t₁₈₄, X₀: X₀ {O(n)}
    t₁₈₄, X₁: X₁ {O(n)}
    t₁₈₄, X₂: 1 {O(1)}
    t₁₈₅, X₀: 1 {O(1)}
    t₁₈₅, X₁: X₁ {O(n)}
    t₁₈₅, X₂: 1 {O(1)}
    t₁₈₆, X₀: X₀ {O(n)}
    t₁₈₆, X₁: X₁ {O(n)}
    t₁₈₆, X₂: 1 {O(1)}
    t₁₈₇, X₀: X₀ {O(n)}
    t₁₈₇, X₁: X₁ {O(n)}
    t₁₈₇, X₂: 2 {O(1)}
    t₁₈₈, X₀: 2 {O(1)}
    t₁₈₈, X₁: X₁ {O(n)}
    t₁₈₈, X₂: 2 {O(1)}
    t₁₈₉, X₀: X₀ {O(n)}
    t₁₈₉, X₁: X₁ {O(n)}
    t₁₈₉, X₂: 2 {O(1)}
    t₁₉₀, X₀: X₀ {O(n)}
    t₁₉₀, X₁: X₁ {O(n)}
    t₁₉₀, X₂: 3 {O(1)}
    t₁₉₁, X₀: X₀ {O(n)}
    t₁₉₁, X₁: X₁ {O(n)}
    t₁₉₁, X₂: 2⋅X₀+X₁+5 {O(n)}
    t₁₉₂, X₀: X₀ {O(n)}
    t₁₉₂, X₁: X₁ {O(n)}
    t₁₉₂, X₂: 2⋅X₀+X₁+5 {O(n)}
    t₁₉₃, X₀: X₀ {O(n)}
    t₁₉₃, X₁: X₁ {O(n)}
    t₁₉₃, X₂: 0 {O(1)}

