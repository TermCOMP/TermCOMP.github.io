NO

# LoAT Proof:
NO

NO

Initial ITS

Start location: f2

Location map:
LoAT_sink -> 0
f2 -> 1
f1 -> 2
f300 -> 3

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-1+it2 >= 0 /\ -2+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i6'=it2
   2: (-2+i1 == 0 /\ -1-it3 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i6'=it3
   3: (-2+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=2, i3'=1+i3, i6'=0
   4: (-2+i1 == 0 /\ i4-i5 == 0 /\ -1+it6 >= 0 /\ i5-it5 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i5'=i4, i6'=it6
   5: (-it7+i5 >= 0 /\ -2+i1 == 0 /\ i4-i5 == 0 /\ -1-it8 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i5'=i4, i6'=it8
   6: (-2+i1 == 0 /\ i4-i5 == 0 /\ -it9+i5 >= 0) /\ i1'=2, i3'=1+i3, i5'=i4, i6'=0
   7: (-2+i1 == 0 /\ i4-i5 >= 0 /\ -1+i4-i5 >= 0) /\ i1'=3, i3'=1+i3, i7'=it10
   8: (-2+i1 == 0 /\ i4-i5 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=1+i3, i7'=it11

Dependency graph:
0 -> 1, 0 -> 2, 0 -> 3, 0 -> 4, 0 -> 5, 0 -> 6, 0 -> 7, 0 -> 8
1 -> 1, 1 -> 2, 1 -> 3, 1 -> 4, 1 -> 5, 1 -> 6, 1 -> 7, 1 -> 8
2 -> 1, 2 -> 2, 2 -> 3, 2 -> 4, 2 -> 5, 2 -> 6, 2 -> 7, 2 -> 8
3 -> 1, 3 -> 2, 3 -> 3, 3 -> 4, 3 -> 5, 3 -> 6, 3 -> 7, 3 -> 8
4 -> 1, 4 -> 2, 4 -> 3, 4 -> 4, 4 -> 5, 4 -> 6, 4 -> 7, 4 -> 8
5 -> 1, 5 -> 2, 5 -> 3, 5 -> 4, 5 -> 5, 5 -> 6, 5 -> 7, 5 -> 8
6 -> 1, 6 -> 2, 6 -> 3, 6 -> 4, 6 -> 5, 6 -> 6, 6 -> 7, 6 -> 8

Preprocessed Transitions

	Eliminated Temporary Variables

	Original rule:
	(-2+i1 == 0 /\ i4-i5 == 0 /\ -1+it6 >= 0 /\ i5-it5 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i5'=i4, i6'=it6
	New rule:
	(-2+i1 == 0 /\ i4-i5 == 0 /\ -1+it6 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i5'=i4, i6'=it6
	
	Eliminated Temporary Variables

	Original rule:
	(-it7+i5 >= 0 /\ -2+i1 == 0 /\ i4-i5 == 0 /\ -1-it8 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i5'=i4, i6'=it8
	New rule:
	(-2+i1 == 0 /\ i4-i5 == 0 /\ -1-it8 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i5'=i4, i6'=it8
	
	Eliminated Temporary Variables

	Original rule:
	(-2+i1 == 0 /\ i4-i5 == 0 /\ -it9+i5 >= 0) /\ i1'=2, i3'=1+i3, i5'=i4, i6'=0
	New rule:
	(-2+i1 == 0 /\ i4-i5 == 0) /\ i1'=2, i3'=1+i3, i5'=i4, i6'=0

Start location: f2

Location map:
LoAT_sink -> 0
f2 -> 1
f1 -> 2
f300 -> 3

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-1+it2 >= 0 /\ -2+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i6'=it2
   2: (-2+i1 == 0 /\ -1-it3 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i6'=it3
   3: (-2+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=2, i3'=1+i3, i6'=0
   7: (-2+i1 == 0 /\ i4-i5 >= 0 /\ -1+i4-i5 >= 0) /\ i1'=3, i3'=1+i3, i7'=it10
   8: (-2+i1 == 0 /\ i4-i5 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=1+i3, i7'=it11
   9: (-2+i1 == 0 /\ i4-i5 == 0 /\ -1+it6 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i5'=i4, i6'=it6
  10: (-2+i1 == 0 /\ i4-i5 == 0 /\ -1-it8 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i5'=i4, i6'=it8
  11: (-2+i1 == 0 /\ i4-i5 == 0) /\ i1'=2, i3'=1+i3, i5'=i4, i6'=0

Dependency graph:
0 -> 1, 0 -> 2, 0 -> 3, 0 -> 7, 0 -> 8, 0 -> 9, 0 -> 10, 0 -> 11
1 -> 1, 1 -> 2, 1 -> 3, 1 -> 7, 1 -> 8, 1 -> 9, 1 -> 10, 1 -> 11
2 -> 1, 2 -> 2, 2 -> 3, 2 -> 7, 2 -> 8, 2 -> 9, 2 -> 10, 2 -> 11
3 -> 1, 3 -> 2, 3 -> 3, 3 -> 7, 3 -> 8, 3 -> 9, 3 -> 10, 3 -> 11
9 -> 1, 9 -> 2, 9 -> 3, 9 -> 7, 9 -> 8, 9 -> 9, 9 -> 10, 9 -> 11
10 -> 1, 10 -> 2, 10 -> 3, 10 -> 7, 10 -> 8, 10 -> 9, 10 -> 10, 10 -> 11
11 -> 1, 11 -> 2, 11 -> 3, 11 -> 7, 11 -> 8, 11 -> 9, 11 -> 10, 11 -> 11

Refined Dependency Graph

	Removed the following edges: 0 -> 8, 1 -> 7, 1 -> 8, 2 -> 7, 2 -> 8, 3 -> 7, 3 -> 8, 3 -> 9, 3 -> 10, 3 -> 11, 9 -> 1, 9 -> 2, 9 -> 3, 9 -> 8, 9 -> 9, 9 -> 10, 9 -> 11, 10 -> 1, 10 -> 2, 10 -> 3, 10 -> 8, 10 -> 9, 10 -> 10, 10 -> 11, 11 -> 1, 11 -> 2, 11 -> 3, 11 -> 7, 11 -> 8

Start location: f2

Location map:
LoAT_sink -> 0
f2 -> 1
f1 -> 2
f300 -> 3

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-1+it2 >= 0 /\ -2+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i6'=it2
   2: (-2+i1 == 0 /\ -1-it3 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i6'=it3
   3: (-2+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=2, i3'=1+i3, i6'=0
   7: (-2+i1 == 0 /\ i4-i5 >= 0 /\ -1+i4-i5 >= 0) /\ i1'=3, i3'=1+i3, i7'=it10
   8: (-2+i1 == 0 /\ i4-i5 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=1+i3, i7'=it11
   9: (-2+i1 == 0 /\ i4-i5 == 0 /\ -1+it6 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i5'=i4, i6'=it6
  10: (-2+i1 == 0 /\ i4-i5 == 0 /\ -1-it8 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i5'=i4, i6'=it8
  11: (-2+i1 == 0 /\ i4-i5 == 0) /\ i1'=2, i3'=1+i3, i5'=i4, i6'=0

Dependency graph:
0 -> 1, 0 -> 2, 0 -> 3, 0 -> 7, 0 -> 9, 0 -> 10, 0 -> 11
1 -> 1, 1 -> 2, 1 -> 3, 1 -> 9, 1 -> 10, 1 -> 11
2 -> 1, 2 -> 2, 2 -> 3, 2 -> 9, 2 -> 10, 2 -> 11
3 -> 1, 3 -> 2, 3 -> 3
9 -> 7
10 -> 7
11 -> 9, 11 -> 10, 11 -> 11

Step with 0

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 7

	Trace

	0[(-1+i1 == 0)]
	7[(-2+i1 == 0 /\ i4-i5 >= 0 /\ -1+i4-i5 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{7[T]}
	
Step with 9

	Trace

	0[(-1+i1 == 0)]
	9[(-2+i1 == 0 /\ i4-i5 == 0 /\ -1+it6 >= 0)]
	
	Blocked

	{}
	{7[T]}
	{}
	
Step with 7

	Trace

	0[(-1+i1 == 0)]
	9[(-2+i1 == 0 /\ i4-i5 == 0 /\ -1+it6 >= 0)]
	7[(-2+i1 == 0 /\ i4-i5 >= 0 /\ -1+i4-i5 >= 0)]
	
	Blocked

	{}
	{7[T]}
	{}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	9[(-2+i1 == 0 /\ i4-i5 == 0 /\ -1+it6 >= 0)]
	
	Blocked

	{}
	{7[T]}
	{7[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{7[T], 9[T]}
	
Step with 11

	Trace

	0[(-1+i1 == 0)]
	11[(-2+i1 == 0 /\ i4-i5 == 0)]
	
	Blocked

	{}
	{7[T], 9[T]}
	{}
	
Nonterm

	Certificate of Non-Termination

	Original rule:
	(-2+i1 == 0 /\ i4-i5 == 0) /\ i1'=2, i3'=1+i3, i5'=i4, i6'=0
	New rule:
	(-i4+i5 >= 0 /\ -2+i1 >= 0 /\ i4-i5 >= 0 /\ 2-i1 >= 0 /\ -1+it49 >= 0) /\ i1'=0

		-i4+i5 >= 0 [0]: trivial
		
		-2+i1 >= 0 [0]: unchanged
		
		i4-i5 >= 0 [0]: trivial
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-i4+i5 >= 0 -> -i4+i5 >= 0, -2+i1 >= 0 -> -2+i1 >= 0, i4-i5 >= 0 -> i4-i5 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Loop Acceleration

	Original rule:
	(-2+i1 == 0 /\ i4-i5 == 0) /\ i1'=2, i3'=1+i3, i5'=i4, i6'=0
	New rule:
	(-i4+i5 >= 0 /\ -2+i1 >= 0 /\ i4-i5 >= 0 /\ 2-i1 >= 0 /\ -1+it49 >= 0) /\ i1'=i1, i3'=i3+it49, i5'=i4, i6'=0

		-i4+i5 >= 0 [0]: trivial
		
		-2+i1 >= 0 [0]: unchanged
		
		i4-i5 >= 0 [0]: trivial
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-i4+i5 >= 0 -> -i4+i5 >= 0, -2+i1 >= 0 -> -2+i1 >= 0, i4-i5 >= 0 -> i4-i5 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-i4+i5 >= 0 /\ -2+i1 >= 0 /\ i4-i5 >= 0 /\ 2-i1 >= 0 /\ -1+it49 >= 0) /\ i1'=i1, i3'=i3+it49, i5'=i4, i6'=0
	New rule:
	(-i4+i5 >= 0 /\ -2+i1 >= 0 /\ i4-i5 >= 0 /\ 2-i1 >= 0 /\ -1+it49 >= 0) /\ i3'=i3+it49, i5'=i4, i6'=0

Start location: f2

Location map:
LoAT_sink -> 0
f2 -> 1
f1 -> 2
f300 -> 3

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-1+it2 >= 0 /\ -2+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i6'=it2
   2: (-2+i1 == 0 /\ -1-it3 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i6'=it3
   3: (-2+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=2, i3'=1+i3, i6'=0
   7: (-2+i1 == 0 /\ i4-i5 >= 0 /\ -1+i4-i5 >= 0) /\ i1'=3, i3'=1+i3, i7'=it10
   8: (-2+i1 == 0 /\ i4-i5 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=1+i3, i7'=it11
   9: (-2+i1 == 0 /\ i4-i5 == 0 /\ -1+it6 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i5'=i4, i6'=it6
  10: (-2+i1 == 0 /\ i4-i5 == 0 /\ -1-it8 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i5'=i4, i6'=it8
  11: (-2+i1 == 0 /\ i4-i5 == 0) /\ i1'=2, i3'=1+i3, i5'=i4, i6'=0
  12: (-i4+i5 >= 0 /\ -2+i1 >= 0 /\ i4-i5 >= 0 /\ 2-i1 >= 0 /\ -1+it49 >= 0) /\ i1'=0
  13: (-i4+i5 >= 0 /\ -2+i1 >= 0 /\ i4-i5 >= 0 /\ 2-i1 >= 0 /\ -1+it49 >= 0) /\ i3'=i3+it49, i5'=i4, i6'=0

Dependency graph:
0 -> 1, 0 -> 2, 0 -> 3, 0 -> 7, 0 -> 9, 0 -> 10, 0 -> 11, 0 -> 12, 0 -> 13
1 -> 1, 1 -> 2, 1 -> 3, 1 -> 9, 1 -> 10, 1 -> 11, 1 -> 12, 1 -> 13
2 -> 1, 2 -> 2, 2 -> 3, 2 -> 9, 2 -> 10, 2 -> 11, 2 -> 12, 2 -> 13
3 -> 1, 3 -> 2, 3 -> 3
9 -> 7
10 -> 7
11 -> 9, 11 -> 10, 11 -> 11, 11 -> 12, 11 -> 13
13 -> 9, 13 -> 10, 13 -> 11, 13 -> 12

Step with 12

	Trace

	0[(-1+i1 == 0)]
	12[(-i4+i5 >= 0 /\ -2+i1 >= 0 /\ i4-i5 >= 0 /\ 2-i1 >= 0 /\ -1+it49 >= 0)]
	
	Blocked

	{}
	{7[T], 9[T]}
	{12[T]}
	
Refute

	Counterexample

	(i1=1, i3=-2, i4=0, i5=0, i6=0, i7=0)
	-0-> (i1=2, i3=-1, i4=0, i5=0, i6=0, i7=0 )
	-12-> ( )
	
NO

Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
MAYBE


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃
  Temp_Vars:  E, F
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, X₃)
  t₁: l1(X₀, X₁, X₂, X₃) → l1(1+X₀, X₁, E, X₃) :|: 1 ≤ E ∧ 1+X₀ ≤ X₁
  t₂: l1(X₀, X₁, X₂, X₃) → l1(1+X₀, X₁, E, X₃) :|: 1+E ≤ 0 ∧ 1+X₀ ≤ X₁
  t₃: l1(X₀, X₁, X₂, X₃) → l1(X₀, X₁, 0, X₃) :|: 1+X₀ ≤ X₁
  t₄: l1(X₀, X₁, X₂, X₃) → l1(1+X₀, X₀, E, X₃) :|: 1 ≤ E ∧ F ≤ X₁ ∧ X₁ ≤ X₀ ∧ X₀ ≤ X₁
  t₅: l1(X₀, X₁, X₂, X₃) → l1(1+X₀, X₀, E, X₃) :|: 1+E ≤ 0 ∧ F ≤ X₁ ∧ X₁ ≤ X₀ ∧ X₀ ≤ X₁
  t₆: l1(X₀, X₁, X₂, X₃) → l1(X₀, X₀, 0, X₃) :|: E ≤ X₁ ∧ X₁ ≤ X₀ ∧ X₀ ≤ X₁
  t₇: l1(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, E) :|: 1+X₁ ≤ X₀ ∧ X₁ ≤ X₀
  t₈: l1(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, E) :|: 1+X₀ ≤ X₁ ∧ X₁ ≤ X₀


Preprocessing
  Cut unsatisfiable transition [t₈: l1→l2]


  Eliminate variables [X₂; X₃] that do not contribute to the problem


  Found invariant 1+X₁ ≤ X₀ for location l2


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁
  Temp_Vars:  E, F
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₉: l0(X₀, X₁) → l1(X₀, X₁)
  t₁₀: l1(X₀, X₁) → l1(1+X₀, X₁) :|: 1 ≤ E ∧ 1+X₀ ≤ X₁
  t₁₁: l1(X₀, X₁) → l1(1+X₀, X₁) :|: 1+E ≤ 0 ∧ 1+X₀ ≤ X₁
  t₁₂: l1(X₀, X₁) → l1(X₀, X₁) :|: 1+X₀ ≤ X₁
  t₁₃: l1(X₀, X₁) → l1(1+X₀, X₀) :|: 1 ≤ E ∧ F ≤ X₁ ∧ X₁ ≤ X₀ ∧ X₀ ≤ X₁
  t₁₄: l1(X₀, X₁) → l1(1+X₀, X₀) :|: 1+E ≤ 0 ∧ F ≤ X₁ ∧ X₁ ≤ X₀ ∧ X₀ ≤ X₁
  t₁₅: l1(X₀, X₁) → l1(X₀, X₀) :|: E ≤ X₁ ∧ X₁ ≤ X₀ ∧ X₀ ≤ X₁
  t₁₆: l1(X₀, X₁) → l2(X₀, X₁) :|: 1+X₁ ≤ X₀ ∧ X₁ ≤ X₀


MPRF for transition t₁₀: l1(X₀, X₁) → l1(1+X₀, X₁) :|: 1 ≤ E ∧ 1+X₀ ≤ X₁ of depth 1:
  new bound:
    X₀+X₁ {O(n)}

  MPRF:
    • l1: [X₁-X₀]




MPRF for transition t₁₁: l1(X₀, X₁) → l1(1+X₀, X₁) :|: 1+E ≤ 0 ∧ 1+X₀ ≤ X₁ of depth 1:
  new bound:
    X₀+X₁ {O(n)}

  MPRF:
    • l1: [X₁-X₀]




MPRF for transition t₁₃: l1(X₀, X₁) → l1(1+X₀, X₀) :|: 1 ≤ E ∧ F ≤ X₁ ∧ X₁ ≤ X₀ ∧ X₀ ≤ X₁ of depth 1:
  new bound:
    X₀+X₁+1 {O(n)}

  MPRF:
    • l1: [1+X₁-X₀]




MPRF for transition t₁₄: l1(X₀, X₁) → l1(1+X₀, X₀) :|: 1+E ≤ 0 ∧ F ≤ X₁ ∧ X₁ ≤ X₀ ∧ X₀ ≤ X₁ of depth 1:
  new bound:
    X₀+X₁+1 {O(n)}

  MPRF:
    • l1: [1+X₁-X₀]




  Found invariant 1+X₁ ≤ X₀ ∧ X₀ ≤ 1+X₁ for location l1_v2


  Found invariant 1+X₁ ≤ X₀ for location l2


  Found invariant 1+X₀ ≤ X₁ for location l1_v3


  Found invariant X₁ ≤ X₀ ∧ X₀ ≤ X₁ for location l1_v1


  Found invariant X₀ ≤ X₁ for location l1_v4


All Bounds
Timebounds
  Overall timebound:inf {Infinity}
    t₉: 1 {O(1)}
    t₁₀: X₀+X₁ {O(n)}
    t₁₁: X₀+X₁ {O(n)}
    t₁₂: inf {Infinity}
    t₁₃: X₀+X₁+1 {O(n)}
    t₁₄: X₀+X₁+1 {O(n)}
    t₁₅: inf {Infinity}
    t₁₆: 1 {O(1)}


Costbounds
  Overall costbound: inf {Infinity}
    t₉: 1 {O(1)}
    t₁₀: X₀+X₁ {O(n)}
    t₁₁: X₀+X₁ {O(n)}
    t₁₂: inf {Infinity}
    t₁₃: X₀+X₁+1 {O(n)}
    t₁₄: X₀+X₁+1 {O(n)}
    t₁₅: inf {Infinity}
    t₁₆: 1 {O(1)}


Sizebounds
    t₉, X₀: X₀ {O(n)}
    t₉, X₁: X₁ {O(n)}
    t₁₀, X₀: 2⋅X₁+3⋅X₀ {O(n)}
    t₁₀, X₁: X₁ {O(n)}
    t₁₁, X₀: 2⋅X₁+3⋅X₀ {O(n)}
    t₁₁, X₁: X₁ {O(n)}
    t₁₂, X₀: 2⋅X₁+3⋅X₀ {O(n)}
    t₁₂, X₁: X₁ {O(n)}
    t₁₃, X₀: 14⋅X₀+8⋅X₁+4 {O(n)}
    t₁₃, X₁: 14⋅X₀+8⋅X₁ {O(n)}
    t₁₄, X₀: 14⋅X₀+8⋅X₁+4 {O(n)}
    t₁₄, X₁: 14⋅X₀+8⋅X₁ {O(n)}
    t₁₅, X₀: 4⋅X₁+7⋅X₀ {O(n)}
    t₁₅, X₁: 14⋅X₀+8⋅X₁ {O(n)}
    t₁₆, X₀: 16⋅X₁+29⋅X₀+8 {O(n)}
    t₁₆, X₁: 17⋅X₁+28⋅X₀ {O(n)}

