MAYBE

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [f2/27,f3/27,f4/27,f6/27]
1. non_recursive  : [exit_location/1]
2. non_recursive  : [f7/15]
3. non_recursive  : [f2_loop_cont/16]
4. non_recursive  : [f1/15]
5. non_recursive  : [f0/15]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into f2/27
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into f2_loop_cont/16
4. SCC is partially evaluated into f1/15
5. SCC is partially evaluated into f0/15

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations f2/27 
* CE 45 is refined into CE [48] 
* CE 18 is refined into CE [49] 
* CE 12 is refined into CE [50] 
* CE 19 is refined into CE [51] 
* CE 13 is refined into CE [52] 
* CE 20 is refined into CE [53] 
* CE 14 is refined into CE [54] 
* CE 15 is refined into CE [55] 
* CE 9 is refined into CE [56] 
* CE 16 is refined into CE [57] 
* CE 10 is refined into CE [58] 
* CE 17 is refined into CE [59] 
* CE 11 is refined into CE [60] 
* CE 6 is refined into CE [61] 
* CE 8 is refined into CE [62] 
* CE 7 is refined into CE [63] 
* CE 34 is refined into CE [64] 
* CE 28 is refined into CE [65] 
* CE 35 is refined into CE [66] 
* CE 29 is refined into CE [67] 
* CE 30 is refined into CE [68] 
* CE 24 is refined into CE [69] 
* CE 31 is refined into CE [70] 
* CE 25 is refined into CE [71] 
* CE 32 is refined into CE [72] 
* CE 26 is refined into CE [73] 
* CE 21 is refined into CE [74] 
* CE 23 is refined into CE [75] 
* CE 22 is refined into CE [76] 
* CE 33 is refined into CE [77] 
* CE 27 is refined into CE [78] 
* CE 43 is refined into CE [79] 
* CE 40 is refined into CE [80] 
* CE 44 is refined into CE [81] 
* CE 41 is refined into CE [82] 
* CE 36 is refined into CE [83] 
* CE 37 is refined into CE [84] 
* CE 38 is refined into CE [85] 
* CE 42 is refined into CE [86] 
* CE 39 is refined into CE [87] 


### Cost equations --> "Loop" of f2/27 
* CEs [79] --> Loop 45 
* CEs [80] --> Loop 46 
* CEs [81] --> Loop 47 
* CEs [82] --> Loop 48 
* CEs [83] --> Loop 49 
* CEs [84] --> Loop 50 
* CEs [85] --> Loop 51 
* CEs [86] --> Loop 52 
* CEs [87] --> Loop 53 
* CEs [48] --> Loop 54 
* CEs [49] --> Loop 55 
* CEs [50] --> Loop 56 
* CEs [51] --> Loop 57 
* CEs [52] --> Loop 58 
* CEs [53] --> Loop 59 
* CEs [54] --> Loop 60 
* CEs [55] --> Loop 61 
* CEs [56] --> Loop 62 
* CEs [57] --> Loop 63 
* CEs [58] --> Loop 64 
* CEs [59] --> Loop 65 
* CEs [60] --> Loop 66 
* CEs [61] --> Loop 67 
* CEs [62] --> Loop 68 
* CEs [63] --> Loop 69 
* CEs [64] --> Loop 70 
* CEs [65] --> Loop 71 
* CEs [66] --> Loop 72 
* CEs [67] --> Loop 73 
* CEs [70] --> Loop 74 
* CEs [71] --> Loop 75 
* CEs [72] --> Loop 76 
* CEs [73] --> Loop 77 
* CEs [74] --> Loop 78 
* CEs [75] --> Loop 79 
* CEs [76] --> Loop 80 
* CEs [68] --> Loop 81 
* CEs [69] --> Loop 82 
* CEs [77] --> Loop 83 
* CEs [78] --> Loop 84 

### Ranking functions of CR f2(A,B,C,D,E,F,G,H,I,J,K,L,M,N,Q,R,S,T,U,V,W,X,Y,Z,A1,B1,C1) 

#### Partial ranking functions of CR f2(A,B,C,D,E,F,G,H,I,J,K,L,M,N,Q,R,S,T,U,V,W,X,Y,Z,A1,B1,C1) 
* Partial RF of phase [45,46,47,48,49,50,51,52,53]:
  - RF of loop [45:1,46:1,51:1]:
    -B/2+N/2-1
    -C/2+N/2-1
    -D/2+M/2-1
    -E/2+M/2-1
  - RF of loop [47:1,48:1,49:1]:
    -B+N-1
    -C+N-1
    -D+M-1
    -E+M-1
  - RF of loop [50:1]:
    -B/3+N/3-1
    -C/3+N/3-1
    -D/3+M/3-1
    -E/3+M/3-1


### Specialization of cost equations f2_loop_cont/16 
* CE 47 is refined into CE [88] 
* CE 46 is refined into CE [89] 


### Cost equations --> "Loop" of f2_loop_cont/16 
* CEs [88] --> Loop 85 
* CEs [89] --> Loop 86 

### Ranking functions of CR f2_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P) 

#### Partial ranking functions of CR f2_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P) 


### Specialization of cost equations f1/15 
* CE 2 is refined into CE [90] 
* CE 3 is refined into CE [91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148] 
* CE 4 is refined into CE [149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206] 
* CE 5 is refined into CE [207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266] 


### Cost equations --> "Loop" of f1/15 
* CEs [147,148,205,206,265,266] --> Loop 87 
* CEs [91,92,149,150] --> Loop 88 
* CEs [95,101,102,109,110,153,159,160,167,168,207,208,209,210] --> Loop 89 
* CEs [94,99,100,107,108,152,157,158,165,166,213,219,220,227,228] --> Loop 90 
* CEs [93,151,212,217,218,225,226] --> Loop 91 
* CEs [211] --> Loop 92 
* CEs [97,103,104,111,112,155,161,162,169,170,215,221,222,229,230] --> Loop 93 
* CEs [96,154,214] --> Loop 94 
* CEs [118,119,120,127,128,129,130,131,132,137,138,139,140,141,142,146,176,177,178,185,186,187,188,189,190,195,196,197,198,199,200,204,236,237,238,245,246,247,248,249,250,255,256,257,258,259,260,264] --> Loop 95 
* CEs [98,105,106,113,114,156,163,164,171,172,216,223,224,231,232] --> Loop 96 
* CEs [90,115,116,117,121,122,123,124,125,126,133,134,135,136,143,144,145,173,174,175,179,180,181,182,183,184,191,192,193,194,201,202,203,233,234,235,239,240,241,242,243,244,251,252,253,254,261,262,263] --> Loop 97 

### Ranking functions of CR f1(A,B,C,D,E,F,G,H,I,J,K,L,M,N,Q) 

#### Partial ranking functions of CR f1(A,B,C,D,E,F,G,H,I,J,K,L,M,N,Q) 


### Specialization of cost equations f0/15 
* CE 1 is refined into CE [267,268,269,270,271,272,273,274,275,276,277] 


### Cost equations --> "Loop" of f0/15 
* CEs [277] --> Loop 98 
* CEs [276] --> Loop 99 
* CEs [275] --> Loop 100 
* CEs [274] --> Loop 101 
* CEs [273] --> Loop 102 
* CEs [272] --> Loop 103 
* CEs [271] --> Loop 104 
* CEs [270] --> Loop 105 
* CEs [269] --> Loop 106 
* CEs [268] --> Loop 107 
* CEs [267] --> Loop 108 

### Ranking functions of CR f0(A,B,C,D,E,F,G,H,I,J,K,L,M,N,Q) 

#### Partial ranking functions of CR f0(A,B,C,D,E,F,G,H,I,J,K,L,M,N,Q) 


Computing Bounds
=====================================

#### Cost of chains of f2(A,B,C,D,E,F,G,H,I,J,K,L,M,N,Q,R,S,T,U,V,W,X,Y,Z,A1,B1,C1):
* Chain [[45,46,47,48,49,50,51,52,53]]...: 2*it(45)+3*it(47)+1*it(50)+1*it(51)+2*it(52)+0
  Such that:it(50) =< -B/3+N/3
it(50) =< -E/3+M/3
aux(17) =< -B+N
aux(18) =< -B/2+N/2
aux(19) =< -E+M
aux(20) =< -E/2+M/2
aux(2) =< aux(17)
aux(4) =< aux(18)
aux(2) =< aux(19)
aux(4) =< aux(20)
it(47) =< aux(17)
it(50) =< aux(17)
it(51) =< aux(17)
it(47) =< aux(2)
it(50) =< aux(2)
it(51) =< aux(2)
it(45) =< aux(18)
it(50) =< aux(18)
it(51) =< aux(18)
it(45) =< aux(4)
it(50) =< aux(4)
it(51) =< aux(4)
it(47) =< aux(19)
it(50) =< aux(19)
it(51) =< aux(19)
it(45) =< aux(20)
it(50) =< aux(20)
it(51) =< aux(20)

  with precondition: [G=K,F=J,D=E,B=C,A=0,H+N>=B+2,H+M>=D+2,F+2*H>=3,4*H+3>=F,1>=H,M>=1,N>=1,G>=1,7>=G,I=0,L=2] 

* Chain [[45,46,47,48,49,50,51,52,53],80]: 2*it(45)+3*it(47)+1*it(50)+1*it(51)+2*it(52)+0
  Such that:it(50) =< -E/3+V/3
aux(21) =< -E+M
aux(22) =< -E+N-T+V
aux(23) =< -E+V
aux(24) =< -E/2+M/2
aux(25) =< -E/2+N/2-T/2+V/2
aux(26) =< -E/2+V/2
it(47) =< aux(22)
it(50) =< aux(22)
it(51) =< aux(22)
it(47) =< aux(23)
it(50) =< aux(23)
it(51) =< aux(23)
it(45) =< aux(25)
it(50) =< aux(25)
it(51) =< aux(25)
it(45) =< aux(26)
it(50) =< aux(26)
it(51) =< aux(26)
it(47) =< aux(21)
it(50) =< aux(21)
it(51) =< aux(21)
it(45) =< aux(24)
it(50) =< aux(24)
it(51) =< aux(24)

  with precondition: [A=0,I=0,L=2,Q=2,R=0,X=4,Y=1,Z=0,B1=4,C1=7,B=C,D=E,F=J,G=K,S=T,W=A1,D+S=B+U,D+S=B+V,7>=G,1>=H,7>=W,G>=1,M>=1,N>=1,W>=1,4*H+3>=F,S>=N,N+2>=S,F+2*H>=3,H+S>=B+4,D+S>=B+M,B+M+2>=D+S] 

* Chain [[45,46,47,48,49,50,51,52,53],79]: 2*it(45)+3*it(47)+1*it(50)+1*it(51)+2*it(52)+0
  Such that:it(50) =< -E/3+V/3
aux(27) =< -E+M
aux(28) =< -E+N-T+V
aux(29) =< -E+V
aux(30) =< -E/2+M/2
aux(31) =< -E/2+N/2-T/2+V/2
aux(32) =< -E/2+V/2
it(47) =< aux(28)
it(50) =< aux(28)
it(51) =< aux(28)
it(47) =< aux(29)
it(50) =< aux(29)
it(51) =< aux(29)
it(45) =< aux(31)
it(50) =< aux(31)
it(51) =< aux(31)
it(45) =< aux(32)
it(50) =< aux(32)
it(51) =< aux(32)
it(47) =< aux(27)
it(50) =< aux(27)
it(51) =< aux(27)
it(45) =< aux(30)
it(50) =< aux(30)
it(51) =< aux(30)

  with precondition: [A=0,I=0,L=2,Q=2,R=0,X=4,Y=1,Z=0,B1=4,C1=7,B=C,D=E,F=J,G=K,S=T,W=A1,D+S=B+U,D+S=B+V,7>=G,1>=H,7>=W,G>=1,M>=1,N>=1,W>=1,4*H+3>=F,S>=N,N+1>=S,F+2*H>=3,H+S>=B+3,D+S>=B+M,B+M+1>=D+S] 

* Chain [[45,46,47,48,49,50,51,52,53],78]: 2*it(45)+3*it(47)+1*it(50)+1*it(51)+2*it(52)+0
  Such that:it(50) =< -E/3+V/3
aux(33) =< -E+V
aux(34) =< -E/2+V/2
it(47) =< aux(33)
it(50) =< aux(33)
it(51) =< aux(33)
it(45) =< aux(34)
it(50) =< aux(34)
it(51) =< aux(34)

  with precondition: [A=0,I=0,L=2,Q=2,R=0,X=4,Y=1,Z=0,B1=4,C1=7,B=C,D=E,F=J,G=K,M=U,M=V,W=A1,B+M=D+N,B+M=D+S,B+M=D+T,7>=G,1>=H,7>=W,G>=1,M>=1,W>=1,4*H+3>=F,F+2*H>=3,B+M>=D+1,H+M>=D+2] 

* Chain [[45,46,47,48,49,50,51,52,53],77]: 2*it(45)+3*it(47)+1*it(50)+1*it(51)+2*it(52)+0
  Such that:it(50) =< -E/3+V/3
aux(35) =< -E+V
aux(36) =< -E/2+V/2
it(47) =< aux(35)
it(50) =< aux(35)
it(51) =< aux(35)
it(45) =< aux(36)
it(50) =< aux(36)
it(51) =< aux(36)

  with precondition: [A=0,I=0,L=2,Q=2,R=0,Y=0,Z=0,C1=7,B=C,D=E,F=J,G=K,M=U,M=V,W=A1,X=B1,B+M=D+N,B+M=D+S,B+M=D+T,7>=G,1>=H,7>=W,7>=X,G>=1,M>=1,W>=1,X>=5,4*H+3>=F,F+2*H>=3,B+M>=D+1,H+M>=D+2] 

* Chain [[45,46,47,48,49,50,51,52,53],76]: 2*it(45)+3*it(47)+1*it(50)+1*it(51)+2*it(52)+0
  Such that:it(50) =< -E/3+V/3
aux(37) =< -E+V
aux(38) =< -E/2+V/2
it(47) =< aux(37)
it(50) =< aux(37)
it(51) =< aux(37)
it(45) =< aux(38)
it(50) =< aux(38)
it(51) =< aux(38)

  with precondition: [A=0,I=0,L=2,Q=2,R=0,Y=0,Z=0,C1=7,B=C,D=E,F=J,G=K,M=U,M=V,W=A1,X=B1,B+M=D+N,B+M=D+S,B+M=D+T,7>=G,1>=H,7>=W,3>=X,G>=1,M>=1,W>=1,X>=1,4*H+3>=F,F+2*H>=3,B+M>=D+1,H+M>=D+2] 

* Chain [[45,46,47,48,49,50,51,52,53],75]: 2*it(45)+3*it(47)+1*it(50)+1*it(51)+2*it(52)+0
  Such that:it(50) =< -E/3+V/3
aux(39) =< -E+M
aux(40) =< -E+N-T+V
aux(41) =< -E+V
aux(42) =< -E/2+M/2
aux(43) =< -E/2+N/2-T/2+V/2
aux(44) =< -E/2+V/2
it(47) =< aux(40)
it(50) =< aux(40)
it(51) =< aux(40)
it(47) =< aux(41)
it(50) =< aux(41)
it(51) =< aux(41)
it(45) =< aux(43)
it(50) =< aux(43)
it(51) =< aux(43)
it(45) =< aux(44)
it(50) =< aux(44)
it(51) =< aux(44)
it(47) =< aux(39)
it(50) =< aux(39)
it(51) =< aux(39)
it(45) =< aux(42)
it(50) =< aux(42)
it(51) =< aux(42)

  with precondition: [A=0,I=0,L=2,Q=2,R=0,Y=0,Z=0,C1=7,B=C,D=E,F=J,G=K,S=T,W=A1,X=B1,D+S=B+U,D+S=B+V,7>=G,1>=H,7>=W,7>=X,G>=1,M>=1,N>=1,W>=1,X>=5,4*H+3>=F,S>=N,N+1>=S,F+2*H>=3,H+S>=B+3,D+S>=B+M,B+M+1>=D+S] 

* Chain [[45,46,47,48,49,50,51,52,53],74]: 2*it(45)+3*it(47)+1*it(50)+1*it(51)+2*it(52)+0
  Such that:it(50) =< -E/3+V/3
aux(45) =< -E+M
aux(46) =< -E+N-T+V
aux(47) =< -E+V
aux(48) =< -E/2+M/2
aux(49) =< -E/2+N/2-T/2+V/2
aux(50) =< -E/2+V/2
it(47) =< aux(46)
it(50) =< aux(46)
it(51) =< aux(46)
it(47) =< aux(47)
it(50) =< aux(47)
it(51) =< aux(47)
it(45) =< aux(49)
it(50) =< aux(49)
it(51) =< aux(49)
it(45) =< aux(50)
it(50) =< aux(50)
it(51) =< aux(50)
it(47) =< aux(45)
it(50) =< aux(45)
it(51) =< aux(45)
it(45) =< aux(48)
it(50) =< aux(48)
it(51) =< aux(48)

  with precondition: [A=0,I=0,L=2,Q=2,R=0,Y=0,Z=0,C1=7,B=C,D=E,F=J,G=K,S=T,W=A1,X=B1,D+S=B+U,D+S=B+V,7>=G,1>=H,7>=W,3>=X,G>=1,M>=1,N>=1,W>=1,X>=1,4*H+3>=F,S>=N,N+1>=S,F+2*H>=3,H+S>=B+3,D+S>=B+M,B+M+1>=D+S] 

* Chain [[45,46,47,48,49,50,51,52,53],73]: 2*it(45)+3*it(47)+1*it(50)+1*it(51)+2*it(52)+0
  Such that:it(50) =< -E/3+V/3
aux(51) =< -E+V
aux(52) =< -E/2+V/2
it(47) =< aux(51)
it(50) =< aux(51)
it(51) =< aux(51)
it(45) =< aux(52)
it(50) =< aux(52)
it(51) =< aux(52)

  with precondition: [A=0,I=0,L=2,Q=2,R=0,Y=1,Z=0,C1=7,B=C,D=E,F=J,G=K,M=U,M=V,W=A1,X=B1,B+M=D+N,B+M=D+S,B+M=D+T,7>=G,1>=H,7>=W,7>=X,G>=1,M>=1,W>=1,X>=5,4*H+3>=F,F+2*H>=3,B+M>=D+1,H+M>=D+2] 

* Chain [[45,46,47,48,49,50,51,52,53],72]: 2*it(45)+3*it(47)+1*it(50)+1*it(51)+2*it(52)+0
  Such that:it(50) =< -E/3+V/3
aux(53) =< -E+V
aux(54) =< -E/2+V/2
it(47) =< aux(53)
it(50) =< aux(53)
it(51) =< aux(53)
it(45) =< aux(54)
it(50) =< aux(54)
it(51) =< aux(54)

  with precondition: [A=0,I=0,L=2,Q=2,R=0,Y=1,Z=0,C1=7,B=C,D=E,F=J,G=K,M=U,M=V,W=A1,X=B1,B+M=D+N,B+M=D+S,B+M=D+T,7>=G,1>=H,7>=W,3>=X,G>=1,M>=1,W>=1,X>=1,4*H+3>=F,F+2*H>=3,B+M>=D+1,H+M>=D+2] 

* Chain [[45,46,47,48,49,50,51,52,53],71]: 2*it(45)+3*it(47)+1*it(50)+1*it(51)+2*it(52)+0
  Such that:it(50) =< -E/3+V/3
aux(55) =< -E+M
aux(56) =< -E+N-T+V
aux(57) =< -E+V
aux(58) =< -E/2+M/2
aux(59) =< -E/2+N/2-T/2+V/2
aux(60) =< -E/2+V/2
it(47) =< aux(56)
it(50) =< aux(56)
it(51) =< aux(56)
it(47) =< aux(57)
it(50) =< aux(57)
it(51) =< aux(57)
it(45) =< aux(59)
it(50) =< aux(59)
it(51) =< aux(59)
it(45) =< aux(60)
it(50) =< aux(60)
it(51) =< aux(60)
it(47) =< aux(55)
it(50) =< aux(55)
it(51) =< aux(55)
it(45) =< aux(58)
it(50) =< aux(58)
it(51) =< aux(58)

  with precondition: [A=0,I=0,L=2,Q=2,R=0,Y=1,Z=0,C1=7,B=C,D=E,F=J,G=K,S=T,W=A1,X=B1,D+S=B+U,D+S=B+V,7>=G,1>=H,7>=W,7>=X,G>=1,M>=1,N>=1,W>=1,X>=5,4*H+3>=F,S>=N,N+1>=S,F+2*H>=3,H+S>=B+3,D+S>=B+M,B+M+1>=D+S] 

* Chain [[45,46,47,48,49,50,51,52,53],70]: 2*it(45)+3*it(47)+1*it(50)+1*it(51)+2*it(52)+0
  Such that:it(50) =< -E/3+V/3
aux(61) =< -E+M
aux(62) =< -E+N-T+V
aux(63) =< -E+V
aux(64) =< -E/2+M/2
aux(65) =< -E/2+N/2-T/2+V/2
aux(66) =< -E/2+V/2
it(47) =< aux(62)
it(50) =< aux(62)
it(51) =< aux(62)
it(47) =< aux(63)
it(50) =< aux(63)
it(51) =< aux(63)
it(45) =< aux(65)
it(50) =< aux(65)
it(51) =< aux(65)
it(45) =< aux(66)
it(50) =< aux(66)
it(51) =< aux(66)
it(47) =< aux(61)
it(50) =< aux(61)
it(51) =< aux(61)
it(45) =< aux(64)
it(50) =< aux(64)
it(51) =< aux(64)

  with precondition: [A=0,I=0,L=2,Q=2,R=0,Y=1,Z=0,C1=7,B=C,D=E,F=J,G=K,S=T,W=A1,X=B1,D+S=B+U,D+S=B+V,7>=G,1>=H,7>=W,3>=X,G>=1,M>=1,N>=1,W>=1,X>=1,4*H+3>=F,S>=N,N+1>=S,F+2*H>=3,H+S>=B+3,D+S>=B+M,B+M+1>=D+S] 

* Chain [[45,46,47,48,49,50,51,52,53],69]: 2*it(45)+3*it(47)+1*it(50)+1*it(51)+2*it(52)+0
  Such that:it(50) =< -C/3+T/3
aux(67) =< -C+M+T-V
aux(68) =< -C+N
aux(69) =< -C+T
aux(70) =< -C/2+M/2+T/2-V/2
aux(71) =< -C/2+N/2
aux(72) =< -C/2+T/2
it(47) =< aux(68)
it(50) =< aux(68)
it(51) =< aux(68)
it(47) =< aux(69)
it(50) =< aux(69)
it(51) =< aux(69)
it(45) =< aux(71)
it(50) =< aux(71)
it(51) =< aux(71)
it(45) =< aux(72)
it(50) =< aux(72)
it(51) =< aux(72)
it(47) =< aux(67)
it(50) =< aux(67)
it(51) =< aux(67)
it(45) =< aux(70)
it(50) =< aux(70)
it(51) =< aux(70)

  with precondition: [A=0,I=0,L=2,Q=2,R=1,X=4,Y=1,Z=1,B1=4,C1=7,B=C,D=E,F=J,G=K,S=T,W=A1,D+S=B+U,D+S=B+V,7>=G,1>=H,7>=W,G>=1,M>=1,N>=1,W>=1,4*H+3>=F,N+2>=S,F+2*H>=3,H+S>=B+4,B+M+2>=D+S] 

* Chain [[45,46,47,48,49,50,51,52,53],68]: 2*it(45)+3*it(47)+1*it(50)+1*it(51)+2*it(52)+0
  Such that:it(50) =< -C/3+T/3
aux(73) =< -C+M+T-V
aux(74) =< -C+N
aux(75) =< -C+T
aux(76) =< -C/2+M/2+T/2-V/2
aux(77) =< -C/2+N/2
aux(78) =< -C/2+T/2
it(47) =< aux(74)
it(50) =< aux(74)
it(51) =< aux(74)
it(47) =< aux(75)
it(50) =< aux(75)
it(51) =< aux(75)
it(45) =< aux(77)
it(50) =< aux(77)
it(51) =< aux(77)
it(45) =< aux(78)
it(50) =< aux(78)
it(51) =< aux(78)
it(47) =< aux(73)
it(50) =< aux(73)
it(51) =< aux(73)
it(45) =< aux(76)
it(50) =< aux(76)
it(51) =< aux(76)

  with precondition: [A=0,I=0,L=2,Q=2,R=1,X=4,Y=1,Z=1,B1=4,C1=7,B=C,D=E,F=J,G=K,S=T,W=A1,D+S=B+U,D+S=B+V,7>=G,1>=H,7>=W,G>=1,M>=1,N>=1,W>=1,4*H+3>=F,N+1>=S,F+2*H>=3,H+S>=B+3,B+M+1>=D+S] 

* Chain [[45,46,47,48,49,50,51,52,53],67]: 2*it(45)+3*it(47)+1*it(50)+1*it(51)+2*it(52)+0
  Such that:it(50) =< -C/3+T/3
aux(79) =< -C+M+T-V
aux(80) =< -C+N
aux(81) =< -C+T
aux(82) =< -C/2+M/2+T/2-V/2
aux(83) =< -C/2+N/2
aux(84) =< -C/2+T/2
it(47) =< aux(80)
it(50) =< aux(80)
it(51) =< aux(80)
it(47) =< aux(81)
it(50) =< aux(81)
it(51) =< aux(81)
it(45) =< aux(83)
it(50) =< aux(83)
it(51) =< aux(83)
it(45) =< aux(84)
it(50) =< aux(84)
it(51) =< aux(84)
it(47) =< aux(79)
it(50) =< aux(79)
it(51) =< aux(79)
it(45) =< aux(82)
it(50) =< aux(82)
it(51) =< aux(82)

  with precondition: [A=0,I=0,L=2,Q=2,R=1,X=4,Y=1,Z=1,B1=4,C1=7,B=C,D=E,F=J,G=K,S=T,W=A1,D+S=B+U,D+S=B+V,7>=G,1>=H,7>=W,G>=1,M>=1,N>=1,W>=1,4*H+3>=F,N>=S,F+2*H>=3,H+S>=B+2,B+M>=D+S] 

* Chain [[45,46,47,48,49,50,51,52,53],66]: 2*it(45)+3*it(47)+1*it(50)+1*it(51)+2*it(52)+0
  Such that:it(50) =< -B/3+T/3
aux(85) =< -B+M+T-V
aux(86) =< -B+N
aux(87) =< -B+T
aux(88) =< -B/2+M/2+T/2-V/2
aux(89) =< -B/2+N/2
aux(90) =< -B/2+T/2
it(47) =< aux(86)
it(50) =< aux(86)
it(51) =< aux(86)
it(47) =< aux(87)
it(50) =< aux(87)
it(51) =< aux(87)
it(45) =< aux(89)
it(50) =< aux(89)
it(51) =< aux(89)
it(45) =< aux(90)
it(50) =< aux(90)
it(51) =< aux(90)
it(47) =< aux(85)
it(50) =< aux(85)
it(51) =< aux(85)
it(45) =< aux(88)
it(50) =< aux(88)
it(51) =< aux(88)

  with precondition: [A=0,I=0,L=2,Q=2,R=1,Y=0,Z=1,C1=7,B=C,D=E,F=J,G=K,S=T,W=A1,X=B1,D+S=B+U,D+S=B+V,7>=G,1>=H,7>=W,7>=X,G>=1,M>=1,N>=1,W>=1,X>=5,4*H+3>=F,N>=S,F+2*H>=3,H+S>=B+2,B+M>=D+S] 

* Chain [[45,46,47,48,49,50,51,52,53],65]: 2*it(45)+3*it(47)+1*it(50)+1*it(51)+2*it(52)+0
  Such that:it(50) =< -B/3+T/3
aux(91) =< -B+M+T-V
aux(92) =< -B+N
aux(93) =< -B+T
aux(94) =< -B/2+M/2+T/2-V/2
aux(95) =< -B/2+N/2
aux(96) =< -B/2+T/2
it(47) =< aux(92)
it(50) =< aux(92)
it(51) =< aux(92)
it(47) =< aux(93)
it(50) =< aux(93)
it(51) =< aux(93)
it(45) =< aux(95)
it(50) =< aux(95)
it(51) =< aux(95)
it(45) =< aux(96)
it(50) =< aux(96)
it(51) =< aux(96)
it(47) =< aux(91)
it(50) =< aux(91)
it(51) =< aux(91)
it(45) =< aux(94)
it(50) =< aux(94)
it(51) =< aux(94)

  with precondition: [A=0,I=0,L=2,Q=2,R=1,Y=0,Z=1,C1=7,B=C,D=E,F=J,G=K,S=T,W=A1,X=B1,D+S=B+U,D+S=B+V,7>=G,1>=H,7>=W,3>=X,G>=1,M>=1,N>=1,W>=1,X>=1,4*H+3>=F,N>=S,F+2*H>=3,H+S>=B+2,B+M>=D+S] 

* Chain [[45,46,47,48,49,50,51,52,53],64]: 2*it(45)+3*it(47)+1*it(50)+1*it(51)+2*it(52)+0
  Such that:it(50) =< -B/3+T/3
aux(97) =< -B+M+T-V
aux(98) =< -B+N
aux(99) =< -B+T
aux(100) =< -B/2+M/2+T/2-V/2
aux(101) =< -B/2+N/2
aux(102) =< -B/2+T/2
it(47) =< aux(98)
it(50) =< aux(98)
it(51) =< aux(98)
it(47) =< aux(99)
it(50) =< aux(99)
it(51) =< aux(99)
it(45) =< aux(101)
it(50) =< aux(101)
it(51) =< aux(101)
it(45) =< aux(102)
it(50) =< aux(102)
it(51) =< aux(102)
it(47) =< aux(97)
it(50) =< aux(97)
it(51) =< aux(97)
it(45) =< aux(100)
it(50) =< aux(100)
it(51) =< aux(100)

  with precondition: [A=0,I=0,L=2,Q=2,R=1,Y=0,Z=1,C1=7,B=C,D=E,F=J,G=K,S=T,W=A1,X=B1,D+S=B+U,D+S=B+V,7>=G,1>=H,7>=W,7>=X,G>=1,M>=1,N>=1,W>=1,X>=5,4*H+3>=F,N+1>=S,F+2*H>=3,H+S>=B+3,B+M+1>=D+S] 

* Chain [[45,46,47,48,49,50,51,52,53],63]: 2*it(45)+3*it(47)+1*it(50)+1*it(51)+2*it(52)+0
  Such that:it(50) =< -B/3+T/3
aux(103) =< -B+M+T-V
aux(104) =< -B+N
aux(105) =< -B+T
aux(106) =< -B/2+M/2+T/2-V/2
aux(107) =< -B/2+N/2
aux(108) =< -B/2+T/2
it(47) =< aux(104)
it(50) =< aux(104)
it(51) =< aux(104)
it(47) =< aux(105)
it(50) =< aux(105)
it(51) =< aux(105)
it(45) =< aux(107)
it(50) =< aux(107)
it(51) =< aux(107)
it(45) =< aux(108)
it(50) =< aux(108)
it(51) =< aux(108)
it(47) =< aux(103)
it(50) =< aux(103)
it(51) =< aux(103)
it(45) =< aux(106)
it(50) =< aux(106)
it(51) =< aux(106)

  with precondition: [A=0,I=0,L=2,Q=2,R=1,Y=0,Z=1,C1=7,B=C,D=E,F=J,G=K,S=T,W=A1,X=B1,D+S=B+U,D+S=B+V,7>=G,1>=H,7>=W,3>=X,G>=1,M>=1,N>=1,W>=1,X>=1,4*H+3>=F,N+1>=S,F+2*H>=3,H+S>=B+3,B+M+1>=D+S] 

* Chain [[45,46,47,48,49,50,51,52,53],62]: 2*it(45)+3*it(47)+1*it(50)+1*it(51)+2*it(52)+0
  Such that:it(50) =< -B/3+T/3
aux(109) =< -B+M+T-V
aux(110) =< -B+N
aux(111) =< -B+T
aux(112) =< -B/2+M/2+T/2-V/2
aux(113) =< -B/2+N/2
aux(114) =< -B/2+T/2
it(47) =< aux(110)
it(50) =< aux(110)
it(51) =< aux(110)
it(47) =< aux(111)
it(50) =< aux(111)
it(51) =< aux(111)
it(45) =< aux(113)
it(50) =< aux(113)
it(51) =< aux(113)
it(45) =< aux(114)
it(50) =< aux(114)
it(51) =< aux(114)
it(47) =< aux(109)
it(50) =< aux(109)
it(51) =< aux(109)
it(45) =< aux(112)
it(50) =< aux(112)
it(51) =< aux(112)

  with precondition: [A=0,I=0,L=2,Q=2,R=1,Y=0,Z=1,C1=7,B=C,D=E,F=J,G=K,S=T,W=A1,X=B1,D+S=B+U,D+S=B+V,7>=G,1>=H,7>=W,7>=X,G>=1,M>=1,N>=1,W>=1,X>=5,4*H+3>=F,N>=S+1,F+2*H>=3,H+S>=B+1,B+M>=D+S+1] 

* Chain [[45,46,47,48,49,50,51,52,53],61]: 2*it(45)+3*it(47)+1*it(50)+1*it(51)+2*it(52)+0
  Such that:it(50) =< -B/3+T/3
aux(115) =< -B+M+T-V
aux(116) =< -B+N
aux(117) =< -B+T
aux(118) =< -B/2+M/2+T/2-V/2
aux(119) =< -B/2+N/2
aux(120) =< -B/2+T/2
it(47) =< aux(116)
it(50) =< aux(116)
it(51) =< aux(116)
it(47) =< aux(117)
it(50) =< aux(117)
it(51) =< aux(117)
it(45) =< aux(119)
it(50) =< aux(119)
it(51) =< aux(119)
it(45) =< aux(120)
it(50) =< aux(120)
it(51) =< aux(120)
it(47) =< aux(115)
it(50) =< aux(115)
it(51) =< aux(115)
it(45) =< aux(118)
it(50) =< aux(118)
it(51) =< aux(118)

  with precondition: [A=0,I=0,L=2,Q=2,R=1,Y=0,Z=1,C1=7,B=C,D=E,F=J,G=K,S=T,W=A1,X=B1,D+S=B+U,D+S=B+V,7>=G,1>=H,7>=W,3>=X,G>=1,M>=1,N>=1,W>=1,X>=1,4*H+3>=F,N>=S+1,F+2*H>=3,H+S>=B+1,B+M>=D+S+1] 

* Chain [[45,46,47,48,49,50,51,52,53],60]: 2*it(45)+3*it(47)+1*it(50)+1*it(51)+2*it(52)+0
  Such that:it(50) =< -B/3+T/3
aux(121) =< -B+M+T-V
aux(122) =< -B+N
aux(123) =< -B+T
aux(124) =< -B/2+M/2+T/2-V/2
aux(125) =< -B/2+N/2
aux(126) =< -B/2+T/2
it(47) =< aux(122)
it(50) =< aux(122)
it(51) =< aux(122)
it(47) =< aux(123)
it(50) =< aux(123)
it(51) =< aux(123)
it(45) =< aux(125)
it(50) =< aux(125)
it(51) =< aux(125)
it(45) =< aux(126)
it(50) =< aux(126)
it(51) =< aux(126)
it(47) =< aux(121)
it(50) =< aux(121)
it(51) =< aux(121)
it(45) =< aux(124)
it(50) =< aux(124)
it(51) =< aux(124)

  with precondition: [A=0,I=0,L=2,Q=2,R=1,Y=1,Z=1,C1=7,B=C,D=E,F=J,G=K,S=T,W=A1,X=B1,D+S=B+U,D+S=B+V,7>=G,1>=H,7>=W,7>=X,G>=1,M>=1,N>=1,W>=1,X>=5,4*H+3>=F,N>=S,F+2*H>=3,H+S>=B+2,B+M>=D+S] 

* Chain [[45,46,47,48,49,50,51,52,53],59]: 2*it(45)+3*it(47)+1*it(50)+1*it(51)+2*it(52)+0
  Such that:it(50) =< -B/3+T/3
aux(127) =< -B+M+T-V
aux(128) =< -B+N
aux(129) =< -B+T
aux(130) =< -B/2+M/2+T/2-V/2
aux(131) =< -B/2+N/2
aux(132) =< -B/2+T/2
it(47) =< aux(128)
it(50) =< aux(128)
it(51) =< aux(128)
it(47) =< aux(129)
it(50) =< aux(129)
it(51) =< aux(129)
it(45) =< aux(131)
it(50) =< aux(131)
it(51) =< aux(131)
it(45) =< aux(132)
it(50) =< aux(132)
it(51) =< aux(132)
it(47) =< aux(127)
it(50) =< aux(127)
it(51) =< aux(127)
it(45) =< aux(130)
it(50) =< aux(130)
it(51) =< aux(130)

  with precondition: [A=0,I=0,L=2,Q=2,R=1,Y=1,Z=1,C1=7,B=C,D=E,F=J,G=K,S=T,W=A1,X=B1,D+S=B+U,D+S=B+V,7>=G,1>=H,7>=W,3>=X,G>=1,M>=1,N>=1,W>=1,X>=1,4*H+3>=F,N>=S,F+2*H>=3,H+S>=B+2,B+M>=D+S] 

* Chain [[45,46,47,48,49,50,51,52,53],58]: 2*it(45)+3*it(47)+1*it(50)+1*it(51)+2*it(52)+0
  Such that:it(50) =< -B/3+T/3
aux(133) =< -B+M+T-V
aux(134) =< -B+N
aux(135) =< -B+T
aux(136) =< -B/2+M/2+T/2-V/2
aux(137) =< -B/2+N/2
aux(138) =< -B/2+T/2
it(47) =< aux(134)
it(50) =< aux(134)
it(51) =< aux(134)
it(47) =< aux(135)
it(50) =< aux(135)
it(51) =< aux(135)
it(45) =< aux(137)
it(50) =< aux(137)
it(51) =< aux(137)
it(45) =< aux(138)
it(50) =< aux(138)
it(51) =< aux(138)
it(47) =< aux(133)
it(50) =< aux(133)
it(51) =< aux(133)
it(45) =< aux(136)
it(50) =< aux(136)
it(51) =< aux(136)

  with precondition: [A=0,I=0,L=2,Q=2,R=1,Y=1,Z=1,C1=7,B=C,D=E,F=J,G=K,S=T,W=A1,X=B1,D+S=B+U,D+S=B+V,7>=G,1>=H,7>=W,7>=X,G>=1,M>=1,N>=1,W>=1,X>=5,4*H+3>=F,N+1>=S,F+2*H>=3,H+S>=B+3,B+M+1>=D+S] 

* Chain [[45,46,47,48,49,50,51,52,53],57]: 2*it(45)+3*it(47)+1*it(50)+1*it(51)+2*it(52)+0
  Such that:it(50) =< -B/3+T/3
aux(139) =< -B+M+T-V
aux(140) =< -B+N
aux(141) =< -B+T
aux(142) =< -B/2+M/2+T/2-V/2
aux(143) =< -B/2+N/2
aux(144) =< -B/2+T/2
it(47) =< aux(140)
it(50) =< aux(140)
it(51) =< aux(140)
it(47) =< aux(141)
it(50) =< aux(141)
it(51) =< aux(141)
it(45) =< aux(143)
it(50) =< aux(143)
it(51) =< aux(143)
it(45) =< aux(144)
it(50) =< aux(144)
it(51) =< aux(144)
it(47) =< aux(139)
it(50) =< aux(139)
it(51) =< aux(139)
it(45) =< aux(142)
it(50) =< aux(142)
it(51) =< aux(142)

  with precondition: [A=0,I=0,L=2,Q=2,R=1,Y=1,Z=1,C1=7,B=C,D=E,F=J,G=K,S=T,W=A1,X=B1,D+S=B+U,D+S=B+V,7>=G,1>=H,7>=W,3>=X,G>=1,M>=1,N>=1,W>=1,X>=1,4*H+3>=F,N+1>=S,F+2*H>=3,H+S>=B+3,B+M+1>=D+S] 

* Chain [[45,46,47,48,49,50,51,52,53],56]: 2*it(45)+3*it(47)+1*it(50)+1*it(51)+2*it(52)+0
  Such that:it(50) =< -B/3+T/3
aux(145) =< -B+M+T-V
aux(146) =< -B+N
aux(147) =< -B+T
aux(148) =< -B/2+M/2+T/2-V/2
aux(149) =< -B/2+N/2
aux(150) =< -B/2+T/2
it(47) =< aux(146)
it(50) =< aux(146)
it(51) =< aux(146)
it(47) =< aux(147)
it(50) =< aux(147)
it(51) =< aux(147)
it(45) =< aux(149)
it(50) =< aux(149)
it(51) =< aux(149)
it(45) =< aux(150)
it(50) =< aux(150)
it(51) =< aux(150)
it(47) =< aux(145)
it(50) =< aux(145)
it(51) =< aux(145)
it(45) =< aux(148)
it(50) =< aux(148)
it(51) =< aux(148)

  with precondition: [A=0,I=0,L=2,Q=2,R=1,Y=1,Z=1,C1=7,B=C,D=E,F=J,G=K,S=T,W=A1,X=B1,D+S=B+U,D+S=B+V,7>=G,1>=H,7>=W,7>=X,G>=1,M>=1,N>=1,W>=1,X>=5,4*H+3>=F,N>=S+1,F+2*H>=3,H+S>=B+1,B+M>=D+S+1] 

* Chain [[45,46,47,48,49,50,51,52,53],55]: 2*it(45)+3*it(47)+1*it(50)+1*it(51)+2*it(52)+0
  Such that:it(50) =< -B/3+T/3
aux(151) =< -B+M+T-V
aux(152) =< -B+N
aux(153) =< -B+T
aux(154) =< -B/2+M/2+T/2-V/2
aux(155) =< -B/2+N/2
aux(156) =< -B/2+T/2
it(47) =< aux(152)
it(50) =< aux(152)
it(51) =< aux(152)
it(47) =< aux(153)
it(50) =< aux(153)
it(51) =< aux(153)
it(45) =< aux(155)
it(50) =< aux(155)
it(51) =< aux(155)
it(45) =< aux(156)
it(50) =< aux(156)
it(51) =< aux(156)
it(47) =< aux(151)
it(50) =< aux(151)
it(51) =< aux(151)
it(45) =< aux(154)
it(50) =< aux(154)
it(51) =< aux(154)

  with precondition: [A=0,I=0,L=2,Q=2,R=1,Y=1,Z=1,C1=7,B=C,D=E,F=J,G=K,S=T,W=A1,X=B1,D+S=B+U,D+S=B+V,7>=G,1>=H,7>=W,3>=X,G>=1,M>=1,N>=1,W>=1,X>=1,4*H+3>=F,N>=S+1,F+2*H>=3,H+S>=B+1,B+M>=D+S+1] 

* Chain [[45,46,47,48,49,50,51,52,53],54]: 2*it(45)+3*it(47)+1*it(50)+1*it(51)+2*it(52)+0
  Such that:it(50) =< -B/3+N/3
it(50) =< -E/3+M/3
aux(157) =< -B+N
aux(158) =< -B/2+N/2
aux(159) =< -E+M
aux(160) =< -E/2+M/2
aux(2) =< aux(157)
aux(4) =< aux(158)
aux(2) =< aux(159)
aux(4) =< aux(160)
it(47) =< aux(157)
it(50) =< aux(157)
it(51) =< aux(157)
it(47) =< aux(2)
it(50) =< aux(2)
it(51) =< aux(2)
it(45) =< aux(158)
it(50) =< aux(158)
it(51) =< aux(158)
it(45) =< aux(4)
it(50) =< aux(4)
it(51) =< aux(4)
it(47) =< aux(159)
it(50) =< aux(159)
it(51) =< aux(159)
it(45) =< aux(160)
it(50) =< aux(160)
it(51) =< aux(160)

  with precondition: [A=0,I=0,L=2,Q=3,B=C,D=E,F=J,G=K,7>=G,1>=H,G>=1,M>=1,N>=1,4*H+3>=F,F+2*H>=3,H+N>=B+2,H+M>=D+2] 

* Chain [84]: 0
  with precondition: [A=0,F=3,G=4,H=1,I=0,J=3,K=4,L=2,Q=2,R=0,Y=1,Z=0,C1=7,C=B,E=D,C=S,C=T,E=U,E=V,W=A1,X=B1,7>=W,7>=X,W>=1,X>=5,E>=M,C>=N] 

* Chain [83]: 0
  with precondition: [A=0,F=3,G=4,H=1,I=0,J=3,K=4,L=2,Q=2,R=0,Y=1,Z=0,C1=7,C=B,E=D,C=S,C=T,E=U,E=V,W=A1,X=B1,7>=W,3>=X,W>=1,X>=1,E>=M,C>=N] 

* Chain [82]: 0
  with precondition: [A=0,F=3,I=0,J=3,L=2,Q=2,R=0,Y=0,Z=0,C1=7,C=B,E=D,K=G,C=S,C=T,E=U,E=V,W=A1,X=B1,7>=W,7>=X,H>=0,W>=1,X>=5,7>=3*H+K,K>=3*H+1,E>=M,C>=N] 

* Chain [81]: 0
  with precondition: [A=0,F=3,I=0,J=3,L=2,Q=2,R=0,Y=0,Z=0,C1=7,C=B,E=D,K=G,C=S,C=T,E=U,E=V,W=A1,X=B1,7>=W,3>=X,H>=0,W>=1,X>=1,7>=3*H+K,K>=3*H+1,E>=M,C>=N] 

* Chain [80]: 0
  with precondition: [A=0,I=0,L=2,Q=2,R=0,X=4,Y=1,Z=0,B1=4,C1=7,C=B,E=D,J=F,K=G,C+3=S,C+3=T,E+3=U,E+3=V,W=A1,1>=H,7>=K,7>=W,K>=1,W>=1,4*H+3>=J,E+3>=M,C+3>=N,J+2*H>=3] 

* Chain [79]: 0
  with precondition: [A=0,I=0,L=2,Q=2,R=0,X=4,Y=1,Z=0,B1=4,C1=7,C=B,E=D,J=F,K=G,C+2=S,C+2=T,E+2=U,E+2=V,W=A1,1>=H,7>=K,7>=W,K>=1,W>=1,4*H+3>=J,E+2>=M,C+2>=N,J+2*H>=3] 

* Chain [78]: 0
  with precondition: [A=0,I=0,L=2,Q=2,R=0,X=4,Y=1,Z=0,B1=4,C1=7,C=B,E=D,J=F,K=G,C+1=S,C+1=T,E+1=U,E+1=V,W=A1,1>=H,7>=K,7>=W,K>=1,W>=1,4*H+3>=J,E+1>=M,C+1>=N,J+2*H>=3] 

* Chain [77]: 0
  with precondition: [A=0,I=0,L=2,Q=2,R=0,Y=0,Z=0,C1=7,B=C,D=E,J=F,K=G,B+1=S,B+1=T,D+1=U,D+1=V,W=A1,X=B1,1>=H,7>=K,7>=W,7>=X,K>=1,W>=1,X>=5,4*H+3>=J,D+1>=M,B+1>=N,J+2*H>=3] 

* Chain [76]: 0
  with precondition: [A=0,I=0,L=2,Q=2,R=0,Y=0,Z=0,C1=7,B=C,D=E,J=F,K=G,B+1=S,B+1=T,D+1=U,D+1=V,W=A1,X=B1,1>=H,7>=K,7>=W,3>=X,K>=1,W>=1,X>=1,4*H+3>=J,D+1>=M,B+1>=N,J+2*H>=3] 

* Chain [75]: 0
  with precondition: [A=0,I=0,L=2,Q=2,R=0,Y=0,Z=0,C1=7,B=C,D=E,J=F,K=G,B+2=S,B+2=T,D+2=U,D+2=V,W=A1,X=B1,1>=H,7>=K,7>=W,7>=X,K>=1,W>=1,X>=5,4*H+3>=J,D+2>=M,B+2>=N,J+2*H>=3] 

* Chain [74]: 0
  with precondition: [A=0,I=0,L=2,Q=2,R=0,Y=0,Z=0,C1=7,B=C,D=E,J=F,K=G,B+2=S,B+2=T,D+2=U,D+2=V,W=A1,X=B1,1>=H,7>=K,7>=W,3>=X,K>=1,W>=1,X>=1,4*H+3>=J,D+2>=M,B+2>=N,J+2*H>=3] 

* Chain [73]: 0
  with precondition: [A=0,I=0,L=2,Q=2,R=0,Y=1,Z=0,C1=7,B=C,D=E,J=F,K=G,B+1=S,B+1=T,D+1=U,D+1=V,W=A1,X=B1,1>=H,7>=K,7>=W,7>=X,K>=1,W>=1,X>=5,4*H+3>=J,D+1>=M,B+1>=N,J+2*H>=3] 

* Chain [72]: 0
  with precondition: [A=0,I=0,L=2,Q=2,R=0,Y=1,Z=0,C1=7,B=C,D=E,J=F,K=G,B+1=S,B+1=T,D+1=U,D+1=V,W=A1,X=B1,1>=H,7>=K,7>=W,3>=X,K>=1,W>=1,X>=1,4*H+3>=J,D+1>=M,B+1>=N,J+2*H>=3] 

* Chain [71]: 0
  with precondition: [A=0,I=0,L=2,Q=2,R=0,Y=1,Z=0,C1=7,B=C,D=E,J=F,K=G,B+2=S,B+2=T,D+2=U,D+2=V,W=A1,X=B1,1>=H,7>=K,7>=W,7>=X,K>=1,W>=1,X>=5,4*H+3>=J,D+2>=M,B+2>=N,J+2*H>=3] 

* Chain [70]: 0
  with precondition: [A=0,I=0,L=2,Q=2,R=0,Y=1,Z=0,C1=7,B=C,D=E,J=F,K=G,B+2=S,B+2=T,D+2=U,D+2=V,W=A1,X=B1,1>=H,7>=K,7>=W,3>=X,K>=1,W>=1,X>=1,4*H+3>=J,D+2>=M,B+2>=N,J+2*H>=3] 

* Chain [69]: 0
  with precondition: [A=0,I=0,L=2,Q=2,R=1,X=4,Y=1,Z=1,B1=4,C1=7,C=B,E=D,J=F,K=G,C+3=S,C+3=T,E+3=U,E+3=V,W=A1,1>=H,7>=K,7>=W,K>=1,W>=1,4*H+3>=J,J+2*H>=3] 

* Chain [68]: 0
  with precondition: [A=0,I=0,L=2,Q=2,R=1,X=4,Y=1,Z=1,B1=4,C1=7,C=B,E=D,J=F,K=G,C+2=S,C+2=T,E+2=U,E+2=V,W=A1,1>=H,7>=K,7>=W,K>=1,W>=1,4*H+3>=J,J+2*H>=3] 

* Chain [67]: 0
  with precondition: [A=0,I=0,L=2,Q=2,R=1,X=4,Y=1,Z=1,B1=4,C1=7,C=B,E=D,J=F,K=G,C+1=S,C+1=T,E+1=U,E+1=V,W=A1,1>=H,7>=K,7>=W,K>=1,W>=1,4*H+3>=J,J+2*H>=3] 

* Chain [66]: 0
  with precondition: [A=0,I=0,L=2,Q=2,R=1,Y=0,Z=1,C1=7,B=C,D=E,J=F,K=G,B+1=S,B+1=T,D+1=U,D+1=V,W=A1,X=B1,1>=H,7>=K,7>=W,7>=X,K>=1,W>=1,X>=5,4*H+3>=J,J+2*H>=3] 

* Chain [65]: 0
  with precondition: [A=0,I=0,L=2,Q=2,R=1,Y=0,Z=1,C1=7,B=C,D=E,J=F,K=G,B+1=S,B+1=T,D+1=U,D+1=V,W=A1,X=B1,1>=H,7>=K,7>=W,3>=X,K>=1,W>=1,X>=1,4*H+3>=J,J+2*H>=3] 

* Chain [64]: 0
  with precondition: [A=0,I=0,L=2,Q=2,R=1,Y=0,Z=1,C1=7,B=C,D=E,J=F,K=G,B+2=S,B+2=T,D+2=U,D+2=V,W=A1,X=B1,1>=H,7>=K,7>=W,7>=X,K>=1,W>=1,X>=5,4*H+3>=J,J+2*H>=3] 

* Chain [63]: 0
  with precondition: [A=0,I=0,L=2,Q=2,R=1,Y=0,Z=1,C1=7,B=C,D=E,J=F,K=G,B+2=S,B+2=T,D+2=U,D+2=V,W=A1,X=B1,1>=H,7>=K,7>=W,3>=X,K>=1,W>=1,X>=1,4*H+3>=J,J+2*H>=3] 

* Chain [62]: 0
  with precondition: [A=0,I=0,L=2,Q=2,R=1,Y=0,Z=1,C1=7,C=B,E=D,J=F,K=G,C=S,C=T,E=U,E=V,W=A1,X=B1,1>=H,7>=K,7>=W,7>=X,K>=1,W>=1,X>=5,4*H+3>=J,J+2*H>=3] 

* Chain [61]: 0
  with precondition: [A=0,I=0,L=2,Q=2,R=1,Y=0,Z=1,C1=7,C=B,E=D,J=F,K=G,C=S,C=T,E=U,E=V,W=A1,X=B1,1>=H,7>=K,7>=W,3>=X,K>=1,W>=1,X>=1,4*H+3>=J,J+2*H>=3] 

* Chain [60]: 0
  with precondition: [A=0,I=0,L=2,Q=2,R=1,Y=1,Z=1,C1=7,B=C,D=E,J=F,K=G,B+1=S,B+1=T,D+1=U,D+1=V,W=A1,X=B1,1>=H,7>=K,7>=W,7>=X,K>=1,W>=1,X>=5,4*H+3>=J,J+2*H>=3] 

* Chain [59]: 0
  with precondition: [A=0,I=0,L=2,Q=2,R=1,Y=1,Z=1,C1=7,B=C,D=E,J=F,K=G,B+1=S,B+1=T,D+1=U,D+1=V,W=A1,X=B1,1>=H,7>=K,7>=W,3>=X,K>=1,W>=1,X>=1,4*H+3>=J,J+2*H>=3] 

* Chain [58]: 0
  with precondition: [A=0,I=0,L=2,Q=2,R=1,Y=1,Z=1,C1=7,B=C,D=E,J=F,K=G,B+2=S,B+2=T,D+2=U,D+2=V,W=A1,X=B1,1>=H,7>=K,7>=W,7>=X,K>=1,W>=1,X>=5,4*H+3>=J,J+2*H>=3] 

* Chain [57]: 0
  with precondition: [A=0,I=0,L=2,Q=2,R=1,Y=1,Z=1,C1=7,B=C,D=E,J=F,K=G,B+2=S,B+2=T,D+2=U,D+2=V,W=A1,X=B1,1>=H,7>=K,7>=W,3>=X,K>=1,W>=1,X>=1,4*H+3>=J,J+2*H>=3] 

* Chain [56]: 0
  with precondition: [A=0,I=0,L=2,Q=2,R=1,Z=1,C1=7,C=B,E=D,J=F,K=G,C=S,C=T,E=U,E=V,H=Y,W=A1,X=B1,1>=H,7>=K,7>=W,7>=X,K>=1,W>=1,X>=5,4*H+3>=J,J+2*H>=3] 

* Chain [55]: 0
  with precondition: [A=0,I=0,L=2,Q=2,R=1,Z=1,C1=7,C=B,E=D,J=F,K=G,C=S,C=T,E=U,E=V,H=Y,W=A1,X=B1,1>=H,7>=K,7>=W,3>=X,K>=1,W>=1,X>=1,4*H+3>=J,J+2*H>=3] 

* Chain [54]: 0
  with precondition: [A=0,I=0,L=2,Q=3,C=B,E=D,J=F,K=G,1>=H,7>=K,K>=1,4*H+3>=J,J+2*H>=3] 


#### Cost of chains of f2_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P):
* Chain [86]: 0
  with precondition: [A=2] 

* Chain [85]: 0
  with precondition: [A=3] 


#### Cost of chains of f1(A,B,C,D,E,F,G,H,I,J,K,L,M,N,Q):
* Chain [97]: 0
  with precondition: [] 

* Chain [96]: 15*s(1)+45*s(4)+15*s(5)+30*s(6)+30*s(7)+0
  Such that:aux(161) =< -E+M
aux(162) =< -E/2+M/2
aux(163) =< -E/3+M/3
s(1) =< aux(163)
s(4) =< aux(161)
s(1) =< aux(161)
s(5) =< aux(161)
s(6) =< aux(162)
s(1) =< aux(162)
s(5) =< aux(162)

  with precondition: [C+M=E+N,M>=1,M>=E+2,C+M>=E+1] 

* Chain [95]: 2*s(106)+6*s(113)+2*s(114)+4*s(115)+96*s(116)+11*s(117)+33*s(124)+11*s(125)+22*s(126)+35*s(128)+105*s(135)+35*s(136)+70*s(137)+0
  Such that:aux(292) =< -C+N
aux(293) =< -C+N+1
aux(294) =< -C+N+2
aux(295) =< -C/2+N/2
aux(296) =< -C/2+N/2+1
aux(297) =< -C/2+N/2+1/2
aux(298) =< -C/3+N/3
aux(299) =< -C/3+N/3+1/3
aux(300) =< -C/3+N/3+2/3
aux(301) =< -E+M
aux(302) =< -E+M+1
aux(303) =< -E+M+2
aux(304) =< -E/2+M/2
aux(305) =< -E/2+M/2+1
aux(306) =< -E/2+M/2+1/2
aux(307) =< -E/3+M/3
aux(308) =< -E/3+M/3+1/3
aux(309) =< -E/3+M/3+2/3
s(120) =< aux(293)
s(109) =< aux(294)
s(112) =< aux(296)
s(123) =< aux(297)
s(128) =< aux(298)
s(117) =< aux(299)
s(106) =< aux(300)
s(120) =< aux(302)
s(109) =< aux(303)
s(112) =< aux(305)
s(123) =< aux(306)
s(128) =< aux(307)
s(117) =< aux(308)
s(106) =< aux(309)
s(113) =< aux(292)
s(106) =< aux(292)
s(114) =< aux(292)
s(113) =< s(109)
s(106) =< s(109)
s(114) =< s(109)
s(115) =< aux(295)
s(106) =< aux(295)
s(114) =< aux(295)
s(115) =< s(112)
s(106) =< s(112)
s(114) =< s(112)
s(113) =< aux(301)
s(106) =< aux(301)
s(114) =< aux(301)
s(115) =< aux(304)
s(106) =< aux(304)
s(114) =< aux(304)
s(124) =< aux(292)
s(117) =< aux(292)
s(125) =< aux(292)
s(124) =< s(120)
s(117) =< s(120)
s(125) =< s(120)
s(126) =< aux(295)
s(117) =< aux(295)
s(125) =< aux(295)
s(126) =< s(123)
s(117) =< s(123)
s(125) =< s(123)
s(124) =< aux(301)
s(117) =< aux(301)
s(125) =< aux(301)
s(126) =< aux(304)
s(117) =< aux(304)
s(125) =< aux(304)
s(131) =< aux(292)
s(134) =< aux(295)
s(131) =< aux(301)
s(134) =< aux(304)
s(135) =< aux(292)
s(128) =< aux(292)
s(136) =< aux(292)
s(135) =< s(131)
s(128) =< s(131)
s(136) =< s(131)
s(137) =< aux(295)
s(128) =< aux(295)
s(136) =< aux(295)
s(137) =< s(134)
s(128) =< s(134)
s(136) =< s(134)
s(135) =< aux(301)
s(128) =< aux(301)
s(136) =< aux(301)
s(137) =< aux(304)
s(128) =< aux(304)
s(136) =< aux(304)

  with precondition: [M>=1,N>=1,N>=C+2,M>=E+2] 

* Chain [94]: 2*s(634)+6*s(641)+2*s(642)+4*s(643)+6*s(644)+1*s(656)+3*s(663)+1*s(664)+2*s(665)+0
  Such that:s(659) =< -C+N+1
s(662) =< -C/2+N/2+1/2
s(656) =< -C/3+N/3+1/3
s(659) =< -E+M+1
s(662) =< -E/2+M/2+1/2
s(656) =< -E/3+M/3+1/3
aux(310) =< -C+N
aux(311) =< -C+N+2
aux(312) =< -C/2+N/2
aux(313) =< -C/2+N/2+1
aux(314) =< -C/3+N/3+2/3
aux(315) =< -E+M
aux(316) =< -E+M+2
aux(317) =< -E/2+M/2
aux(318) =< -E/2+M/2+1
aux(319) =< -E/3+M/3+2/3
s(637) =< aux(311)
s(640) =< aux(313)
s(634) =< aux(314)
s(637) =< aux(316)
s(640) =< aux(318)
s(634) =< aux(319)
s(641) =< aux(310)
s(634) =< aux(310)
s(642) =< aux(310)
s(641) =< s(637)
s(634) =< s(637)
s(642) =< s(637)
s(643) =< aux(312)
s(634) =< aux(312)
s(642) =< aux(312)
s(643) =< s(640)
s(634) =< s(640)
s(642) =< s(640)
s(641) =< aux(315)
s(634) =< aux(315)
s(642) =< aux(315)
s(643) =< aux(317)
s(634) =< aux(317)
s(642) =< aux(317)
s(663) =< aux(310)
s(656) =< aux(310)
s(664) =< aux(310)
s(663) =< s(659)
s(656) =< s(659)
s(664) =< s(659)
s(665) =< aux(312)
s(656) =< aux(312)
s(664) =< aux(312)
s(665) =< s(662)
s(656) =< s(662)
s(664) =< s(662)
s(663) =< aux(315)
s(656) =< aux(315)
s(664) =< aux(315)
s(665) =< aux(317)
s(656) =< aux(317)
s(664) =< aux(317)

  with precondition: [M>=1,N>=1,N>=C+2,M>=E+2,E+N+2>=C+M,C+M+2>=E+N] 

* Chain [93]: 10*s(667)+30*s(674)+10*s(675)+20*s(676)+30*s(677)+5*s(777)+15*s(784)+5*s(785)+10*s(786)+0
  Such that:aux(340) =< -C+N
aux(341) =< -C+N+1
aux(342) =< -C/2+N/2
aux(343) =< -C/2+N/2+1/2
aux(344) =< -C/3+N/3
aux(345) =< -C/3+N/3+1/3
aux(346) =< -E+M
aux(347) =< -E+M+1
aux(348) =< -E/2+M/2
aux(349) =< -E/2+M/2+1/2
aux(350) =< -E/3+M/3
aux(351) =< -E/3+M/3+1/3
s(670) =< aux(341)
s(673) =< aux(343)
s(777) =< aux(344)
s(667) =< aux(345)
s(670) =< aux(347)
s(673) =< aux(349)
s(777) =< aux(350)
s(667) =< aux(351)
s(674) =< aux(340)
s(667) =< aux(340)
s(675) =< aux(340)
s(674) =< s(670)
s(667) =< s(670)
s(675) =< s(670)
s(676) =< aux(342)
s(667) =< aux(342)
s(675) =< aux(342)
s(676) =< s(673)
s(667) =< s(673)
s(675) =< s(673)
s(674) =< aux(346)
s(667) =< aux(346)
s(675) =< aux(346)
s(676) =< aux(348)
s(667) =< aux(348)
s(675) =< aux(348)
s(780) =< aux(340)
s(783) =< aux(342)
s(780) =< aux(346)
s(783) =< aux(348)
s(784) =< aux(340)
s(777) =< aux(340)
s(785) =< aux(340)
s(784) =< s(780)
s(777) =< s(780)
s(785) =< s(780)
s(786) =< aux(342)
s(777) =< aux(342)
s(785) =< aux(342)
s(786) =< s(783)
s(777) =< s(783)
s(785) =< s(783)
s(784) =< aux(346)
s(777) =< aux(346)
s(785) =< aux(346)
s(786) =< aux(348)
s(777) =< aux(348)
s(785) =< aux(348)

  with precondition: [M>=1,N>=1,N>=C+2,M>=E+2,E+N+1>=C+M,C+M+1>=E+N] 

* Chain [92]: 0
  with precondition: [E+4>=M,C+4>=N] 

* Chain [91]: 0
  with precondition: [E+3>=M,C+3>=N] 

* Chain [90]: 0
  with precondition: [E+2>=M,C+2>=N] 

* Chain [89]: 0
  with precondition: [E+1>=M,C+1>=N] 

* Chain [88]: 0
  with precondition: [E>=M,C>=N] 

* Chain [87]...: 6*s(832)+18*s(839)+6*s(840)+12*s(841)+12*s(842)+0
  Such that:aux(352) =< -C+N
aux(353) =< -C/2+N/2
aux(354) =< -C/3+N/3
aux(355) =< -E+M
aux(356) =< -E/2+M/2
aux(357) =< -E/3+M/3
s(832) =< aux(354)
s(832) =< aux(357)
s(837) =< aux(352)
s(838) =< aux(353)
s(837) =< aux(355)
s(838) =< aux(356)
s(839) =< aux(352)
s(832) =< aux(352)
s(840) =< aux(352)
s(839) =< s(837)
s(832) =< s(837)
s(840) =< s(837)
s(841) =< aux(353)
s(832) =< aux(353)
s(840) =< aux(353)
s(841) =< s(838)
s(832) =< s(838)
s(840) =< s(838)
s(839) =< aux(355)
s(832) =< aux(355)
s(840) =< aux(355)
s(841) =< aux(356)
s(832) =< aux(356)
s(840) =< aux(356)

  with precondition: [M>=1,N>=1,N>=C+2,M>=E+2] 


#### Cost of chains of f0(A,B,C,D,E,F,G,H,I,J,K,L,M,N,Q):
* Chain [108]: 0
  with precondition: [] 

* Chain [107]: 15*s(901)+45*s(902)+15*s(903)+30*s(904)+30*s(905)+0
  Such that:s(898) =< -E+M
s(899) =< -E/2+M/2
s(900) =< -E/3+M/3
s(901) =< s(900)
s(902) =< s(898)
s(901) =< s(898)
s(903) =< s(898)
s(904) =< s(899)
s(901) =< s(899)
s(903) =< s(899)

  with precondition: [C+M=E+N,M>=1,M>=E+2,C+M>=E+1] 

* Chain [106]: 35*s(928)+11*s(929)+2*s(930)+6*s(931)+2*s(932)+4*s(933)+33*s(934)+11*s(935)+22*s(936)+105*s(939)+35*s(940)+70*s(941)+96*s(942)+0
  Such that:s(906) =< -C+N
s(907) =< -C+N+1
s(908) =< -C+N+2
s(909) =< -C/2+N/2
s(910) =< -C/2+N/2+1
s(911) =< -C/2+N/2+1/2
s(912) =< -C/3+N/3
s(913) =< -C/3+N/3+1/3
s(914) =< -C/3+N/3+2/3
s(915) =< -E+M
s(916) =< -E+M+1
s(917) =< -E+M+2
s(918) =< -E/2+M/2
s(919) =< -E/2+M/2+1
s(920) =< -E/2+M/2+1/2
s(921) =< -E/3+M/3
s(922) =< -E/3+M/3+1/3
s(923) =< -E/3+M/3+2/3
s(924) =< s(907)
s(925) =< s(908)
s(926) =< s(910)
s(927) =< s(911)
s(928) =< s(912)
s(929) =< s(913)
s(930) =< s(914)
s(924) =< s(916)
s(925) =< s(917)
s(926) =< s(919)
s(927) =< s(920)
s(928) =< s(921)
s(929) =< s(922)
s(930) =< s(923)
s(931) =< s(906)
s(930) =< s(906)
s(932) =< s(906)
s(931) =< s(925)
s(930) =< s(925)
s(932) =< s(925)
s(933) =< s(909)
s(930) =< s(909)
s(932) =< s(909)
s(933) =< s(926)
s(930) =< s(926)
s(932) =< s(926)
s(931) =< s(915)
s(930) =< s(915)
s(932) =< s(915)
s(933) =< s(918)
s(930) =< s(918)
s(932) =< s(918)
s(934) =< s(906)
s(929) =< s(906)
s(935) =< s(906)
s(934) =< s(924)
s(929) =< s(924)
s(935) =< s(924)
s(936) =< s(909)
s(929) =< s(909)
s(935) =< s(909)
s(936) =< s(927)
s(929) =< s(927)
s(935) =< s(927)
s(934) =< s(915)
s(929) =< s(915)
s(935) =< s(915)
s(936) =< s(918)
s(929) =< s(918)
s(935) =< s(918)
s(937) =< s(906)
s(938) =< s(909)
s(937) =< s(915)
s(938) =< s(918)
s(939) =< s(906)
s(928) =< s(906)
s(940) =< s(906)
s(939) =< s(937)
s(928) =< s(937)
s(940) =< s(937)
s(941) =< s(909)
s(928) =< s(909)
s(940) =< s(909)
s(941) =< s(938)
s(928) =< s(938)
s(940) =< s(938)
s(939) =< s(915)
s(928) =< s(915)
s(940) =< s(915)
s(941) =< s(918)
s(928) =< s(918)
s(940) =< s(918)

  with precondition: [M>=1,N>=1,N>=C+2,M>=E+2] 

* Chain [105]: 1*s(945)+2*s(958)+6*s(959)+2*s(960)+4*s(961)+3*s(962)+1*s(963)+2*s(964)+6*s(965)+0
  Such that:s(946) =< -C+N
s(943) =< -C+N+1
s(947) =< -C+N+2
s(948) =< -C/2+N/2
s(949) =< -C/2+N/2+1
s(944) =< -C/2+N/2+1/2
s(945) =< -C/3+N/3+1/3
s(950) =< -C/3+N/3+2/3
s(951) =< -E+M
s(943) =< -E+M+1
s(952) =< -E+M+2
s(953) =< -E/2+M/2
s(954) =< -E/2+M/2+1
s(944) =< -E/2+M/2+1/2
s(945) =< -E/3+M/3+1/3
s(955) =< -E/3+M/3+2/3
s(956) =< s(947)
s(957) =< s(949)
s(958) =< s(950)
s(956) =< s(952)
s(957) =< s(954)
s(958) =< s(955)
s(959) =< s(946)
s(958) =< s(946)
s(960) =< s(946)
s(959) =< s(956)
s(958) =< s(956)
s(960) =< s(956)
s(961) =< s(948)
s(958) =< s(948)
s(960) =< s(948)
s(961) =< s(957)
s(958) =< s(957)
s(960) =< s(957)
s(959) =< s(951)
s(958) =< s(951)
s(960) =< s(951)
s(961) =< s(953)
s(958) =< s(953)
s(960) =< s(953)
s(962) =< s(946)
s(945) =< s(946)
s(963) =< s(946)
s(962) =< s(943)
s(945) =< s(943)
s(963) =< s(943)
s(964) =< s(948)
s(945) =< s(948)
s(963) =< s(948)
s(964) =< s(944)
s(945) =< s(944)
s(963) =< s(944)
s(962) =< s(951)
s(945) =< s(951)
s(963) =< s(951)
s(964) =< s(953)
s(945) =< s(953)
s(963) =< s(953)

  with precondition: [M>=1,N>=1,N>=C+2,M>=E+2,E+N+2>=C+M,C+M+2>=E+N] 

* Chain [104]: 5*s(980)+10*s(981)+30*s(982)+10*s(983)+20*s(984)+15*s(987)+5*s(988)+10*s(989)+30*s(990)+0
  Such that:s(966) =< -C+N
s(967) =< -C+N+1
s(968) =< -C/2+N/2
s(969) =< -C/2+N/2+1/2
s(970) =< -C/3+N/3
s(971) =< -C/3+N/3+1/3
s(972) =< -E+M
s(973) =< -E+M+1
s(974) =< -E/2+M/2
s(975) =< -E/2+M/2+1/2
s(976) =< -E/3+M/3
s(977) =< -E/3+M/3+1/3
s(978) =< s(967)
s(979) =< s(969)
s(980) =< s(970)
s(981) =< s(971)
s(978) =< s(973)
s(979) =< s(975)
s(980) =< s(976)
s(981) =< s(977)
s(982) =< s(966)
s(981) =< s(966)
s(983) =< s(966)
s(982) =< s(978)
s(981) =< s(978)
s(983) =< s(978)
s(984) =< s(968)
s(981) =< s(968)
s(983) =< s(968)
s(984) =< s(979)
s(981) =< s(979)
s(983) =< s(979)
s(982) =< s(972)
s(981) =< s(972)
s(983) =< s(972)
s(984) =< s(974)
s(981) =< s(974)
s(983) =< s(974)
s(985) =< s(966)
s(986) =< s(968)
s(985) =< s(972)
s(986) =< s(974)
s(987) =< s(966)
s(980) =< s(966)
s(988) =< s(966)
s(987) =< s(985)
s(980) =< s(985)
s(988) =< s(985)
s(989) =< s(968)
s(980) =< s(968)
s(988) =< s(968)
s(989) =< s(986)
s(980) =< s(986)
s(988) =< s(986)
s(987) =< s(972)
s(980) =< s(972)
s(988) =< s(972)
s(989) =< s(974)
s(980) =< s(974)
s(988) =< s(974)

  with precondition: [M>=1,N>=1,N>=C+2,M>=E+2,E+N+1>=C+M,C+M+1>=E+N] 

* Chain [103]: 0
  with precondition: [E+4>=M,C+4>=N] 

* Chain [102]: 0
  with precondition: [E+3>=M,C+3>=N] 

* Chain [101]: 0
  with precondition: [E+2>=M,C+2>=N] 

* Chain [100]: 0
  with precondition: [E+1>=M,C+1>=N] 

* Chain [99]: 0
  with precondition: [E>=M,C>=N] 

* Chain [98]...: 6*s(997)+18*s(1000)+6*s(1001)+12*s(1002)+12*s(1003)+0
  Such that:s(991) =< -C+N
s(992) =< -C/2+N/2
s(993) =< -C/3+N/3
s(994) =< -E+M
s(995) =< -E/2+M/2
s(996) =< -E/3+M/3
s(997) =< s(993)
s(997) =< s(996)
s(998) =< s(991)
s(999) =< s(992)
s(998) =< s(994)
s(999) =< s(995)
s(1000) =< s(991)
s(997) =< s(991)
s(1001) =< s(991)
s(1000) =< s(998)
s(997) =< s(998)
s(1001) =< s(998)
s(1002) =< s(992)
s(997) =< s(992)
s(1001) =< s(992)
s(1002) =< s(999)
s(997) =< s(999)
s(1001) =< s(999)
s(1000) =< s(994)
s(997) =< s(994)
s(1001) =< s(994)
s(1002) =< s(995)
s(997) =< s(995)
s(1001) =< s(995)

  with precondition: [M>=1,N>=1,N>=C+2,M>=E+2] 


Closed-form bounds of f0(A,B,C,D,E,F,G,H,I,J,K,L,M,N,Q): 
-------------------------------------
* Chain [108] with precondition: [] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [107] with precondition: [C+M=E+N,M>=1,M>=E+2,C+M>=E+1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [106] with precondition: [M>=1,N>=1,N>=C+2,M>=E+2] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [105] with precondition: [M>=1,N>=1,N>=C+2,M>=E+2,E+N+2>=C+M,C+M+2>=E+N] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [104] with precondition: [M>=1,N>=1,N>=C+2,M>=E+2,E+N+1>=C+M,C+M+1>=E+N] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [103] with precondition: [E+4>=M,C+4>=N] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [102] with precondition: [E+3>=M,C+3>=N] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [101] with precondition: [E+2>=M,C+2>=N] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [100] with precondition: [E+1>=M,C+1>=N] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [99] with precondition: [E>=M,C>=N] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [98]... with precondition: [M>=1,N>=1,N>=C+2,M>=E+2] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of f0(A,B,C,D,E,F,G,H,I,J,K,L,M,N,Q): inf 
Asymptotic class: infinity 
* Total analysis performed in 40764 ms.

