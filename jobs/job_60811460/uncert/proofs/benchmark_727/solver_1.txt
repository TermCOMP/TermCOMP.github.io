WORST_CASE(Omega(n^1),O(n^1))

# LoAT Proof:
WORST_CASE(Omega(n^1),?)

WORST_CASE(Omega(n^1),?)
Initial ITS

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_4 -> 7
eval_start_5 -> 8
eval_start_6 -> 9
eval_start_7 -> 10
eval_start_8 -> 11
eval_start_bb1_in -> 12
eval_start_bb2_in -> 13
eval_start_bb3_in -> 14
eval_start_bb4_in -> 15
eval_start_bb5_in -> 16
eval_start_stop -> 17

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: -2+i1 == 0 /\ i1'=3, i3'=1+i3
   2: -3+i1 == 0 /\ i1'=4, i3'=1+i3
   3: -4+i1 == 0 /\ i1'=5, i3'=1+i3
   4: -5+i1 == 0 /\ i1'=6, i3'=1+i3
   5: -6+i1 == 0 /\ i1'=7, i3'=1+i3
   6: -7+i1 == 0 /\ i1'=8, i3'=1+i3
   7: -8+i1 == 0 /\ i1'=9, i3'=1+i3
   8: -9+i1 == 0 /\ i1'=10, i3'=1+i3
   9: -10+i1 == 0 /\ i1'=11, i3'=1+i3
  10: -11+i1 == 0 /\ i1'=12, i3'=1+i3, i6'=0, i7'=0
  11: (-12+i1 == 0 /\ i6-i5 < 0) /\ i1'=13, i3'=1+i3
  12: (-12+i1 == 0 /\ i6-i5 >= 0) /\ i1'=14, i3'=1+i3
  13: -13+i1 == 0 /\ i1'=12, i3'=1+i3, i6'=1+i6, i7'=1+i7
  14: (i7-i4 < 0 /\ -14+i1 == 0) /\ i1'=15, i3'=1+i3
  15: (i7-i4 >= 0 /\ -14+i1 == 0) /\ i1'=16, i3'=1+i3
  16: -15+i1 == 0 /\ i1'=12, i3'=1+i3, i6'=1+i6, i7'=1+i7
  17: -16+i1 == 0 /\ i1'=17, i3'=1+i3

Dependency graph:
0 -> 1
1 -> 2
2 -> 3
3 -> 4
4 -> 5
5 -> 6
6 -> 7
7 -> 8
8 -> 9
9 -> 10
10 -> 11, 10 -> 12
11 -> 13
12 -> 14, 12 -> 15
13 -> 11, 13 -> 12
14 -> 16
15 -> 17
16 -> 11, 16 -> 12

Chained Linear Paths

	Applied Chaining

	First rule:
	-1+i1 == 0 /\ i1'=2, i3'=1+i3
	Second rule:
	-2+i1 == 0 /\ i1'=3, i3'=1+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 0, 1
	
	Applied Chaining

	First rule:
	-3+i1 == 0 /\ i1'=4, i3'=1+i3
	Second rule:
	-4+i1 == 0 /\ i1'=5, i3'=1+i3
	New rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 2, 3
	
	Applied Chaining

	First rule:
	-5+i1 == 0 /\ i1'=6, i3'=1+i3
	Second rule:
	-6+i1 == 0 /\ i1'=7, i3'=1+i3
	New rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=7, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 4, 5
	
	Applied Chaining

	First rule:
	-7+i1 == 0 /\ i1'=8, i3'=1+i3
	Second rule:
	-8+i1 == 0 /\ i1'=9, i3'=1+i3
	New rule:
	(0 == 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 6, 7
	
	Applied Chaining

	First rule:
	-9+i1 == 0 /\ i1'=10, i3'=1+i3
	Second rule:
	-10+i1 == 0 /\ i1'=11, i3'=1+i3
	New rule:
	(0 == 0 /\ -9+i1 == 0) /\ i1'=11, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 8, 9
	
	Applied Chaining

	First rule:
	(-12+i1 == 0 /\ i6-i5 < 0) /\ i1'=13, i3'=1+i3
	Second rule:
	-13+i1 == 0 /\ i1'=12, i3'=1+i3, i6'=1+i6, i7'=1+i7
	New rule:
	(0 == 0 /\ -12+i1 == 0 /\ i6-i5 < 0) /\ i1'=12, i3'=2+i3, i6'=1+i6, i7'=1+i7
	
	Applied Deletion

	Removed the following rules: 11, 13
	
	Applied Chaining

	First rule:
	(i7-i4 < 0 /\ -14+i1 == 0) /\ i1'=15, i3'=1+i3
	Second rule:
	-15+i1 == 0 /\ i1'=12, i3'=1+i3, i6'=1+i6, i7'=1+i7
	New rule:
	(0 == 0 /\ i7-i4 < 0 /\ -14+i1 == 0) /\ i1'=12, i3'=2+i3, i6'=1+i6, i7'=1+i7
	
	Applied Deletion

	Removed the following rules: 14, 16
	
	Applied Chaining

	First rule:
	(i7-i4 >= 0 /\ -14+i1 == 0) /\ i1'=16, i3'=1+i3
	Second rule:
	-16+i1 == 0 /\ i1'=17, i3'=1+i3
	New rule:
	(0 == 0 /\ i7-i4 >= 0 /\ -14+i1 == 0) /\ i1'=17, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 15, 17
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	Second rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	
	Applied Deletion

	Removed the following rules: 18, 19
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=7, i3'=2+i3
	Second rule:
	(0 == 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
	New rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=9, i3'=4+i3
	
	Applied Deletion

	Removed the following rules: 20, 21
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -9+i1 == 0) /\ i1'=11, i3'=2+i3
	Second rule:
	-11+i1 == 0 /\ i1'=12, i3'=1+i3, i6'=0, i7'=0
	New rule:
	(0 == 0 /\ -9+i1 == 0) /\ i1'=12, i3'=3+i3, i6'=0, i7'=0
	
	Applied Deletion

	Removed the following rules: 10, 22
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	Second rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=9, i3'=4+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=9, i3'=8+i3
	
	Applied Deletion

	Removed the following rules: 26, 27
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=9, i3'=8+i3
	Second rule:
	(0 == 0 /\ -9+i1 == 0) /\ i1'=12, i3'=3+i3, i6'=0, i7'=0
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=12, i3'=11+i3, i6'=0, i7'=0
	
	Applied Deletion

	Removed the following rules: 28, 29

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_4 -> 7
eval_start_5 -> 8
eval_start_6 -> 9
eval_start_7 -> 10
eval_start_8 -> 11
eval_start_bb1_in -> 12
eval_start_bb2_in -> 13
eval_start_bb3_in -> 14
eval_start_bb4_in -> 15
eval_start_bb5_in -> 16
eval_start_stop -> 17

Rules:
  12: (-12+i1 == 0 /\ i6-i5 >= 0) /\ i1'=14, i3'=1+i3
  23: (0 == 0 /\ -12+i1 == 0 /\ i6-i5 < 0) /\ i1'=12, i3'=2+i3, i6'=1+i6, i7'=1+i7
  24: (0 == 0 /\ i7-i4 < 0 /\ -14+i1 == 0) /\ i1'=12, i3'=2+i3, i6'=1+i6, i7'=1+i7
  25: (0 == 0 /\ i7-i4 >= 0 /\ -14+i1 == 0) /\ i1'=17, i3'=2+i3
  30: (0 == 0 /\ -1+i1 == 0) /\ i1'=12, i3'=11+i3, i6'=0, i7'=0

Dependency graph:
12 -> 24, 12 -> 25
23 -> 12, 23 -> 23
24 -> 12, 24 -> 23
30 -> 12, 30 -> 23

Preprocessed Transitions

	Simplified Guard

	Original rule:
	(0 == 0 /\ -12+i1 == 0 /\ i6-i5 < 0) /\ i1'=12, i3'=2+i3, i6'=1+i6, i7'=1+i7
	New rule:
	(-12+i1 == 0 /\ i6-i5 < 0) /\ i1'=12, i3'=2+i3, i6'=1+i6, i7'=1+i7
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ i7-i4 < 0 /\ -14+i1 == 0) /\ i1'=12, i3'=2+i3, i6'=1+i6, i7'=1+i7
	New rule:
	(i7-i4 < 0 /\ -14+i1 == 0) /\ i1'=12, i3'=2+i3, i6'=1+i6, i7'=1+i7
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ i7-i4 >= 0 /\ -14+i1 == 0) /\ i1'=17, i3'=2+i3
	New rule:
	(i7-i4 >= 0 /\ -14+i1 == 0) /\ i1'=17, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=12, i3'=11+i3, i6'=0, i7'=0
	New rule:
	-1+i1 == 0 /\ i1'=12, i3'=11+i3, i6'=0, i7'=0

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_4 -> 7
eval_start_5 -> 8
eval_start_6 -> 9
eval_start_7 -> 10
eval_start_8 -> 11
eval_start_bb1_in -> 12
eval_start_bb2_in -> 13
eval_start_bb3_in -> 14
eval_start_bb4_in -> 15
eval_start_bb5_in -> 16
eval_start_stop -> 17

Rules:
  12: (-12+i1 == 0 /\ i6-i5 >= 0) /\ i1'=14, i3'=1+i3
  31: (-12+i1 == 0 /\ i6-i5 < 0) /\ i1'=12, i3'=2+i3, i6'=1+i6, i7'=1+i7
  32: (i7-i4 < 0 /\ -14+i1 == 0) /\ i1'=12, i3'=2+i3, i6'=1+i6, i7'=1+i7
  33: (i7-i4 >= 0 /\ -14+i1 == 0) /\ i1'=17, i3'=2+i3
  34: -1+i1 == 0 /\ i1'=12, i3'=11+i3, i6'=0, i7'=0

Dependency graph:
12 -> 32, 12 -> 33
31 -> 12, 31 -> 31
32 -> 12, 32 -> 31
34 -> 12, 34 -> 31

Step with 34

	Trace

	34[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 31

	Trace

	34[(-1+i1 == 0)]
	31[(-12+i1 == 0 /\ i6-i5 < 0)]
	
	Blocked

	{}
	{}
	{}
	
Poly(n^1)

Accelerate

	Loop Acceleration

	Original rule:
	(-12+i1 == 0 /\ i6-i5 < 0) /\ i1'=12, i3'=2+i3, i6'=1+i6, i7'=1+i7
	New rule:
	(-1+it13 >= 0 /\ 12-i1 >= 0 /\ 1-i6-it13+i5 > 0 /\ -12+i1 >= 0) /\ i1'=i1, i3'=i3+2*it13, i6'=i6+it13, i7'=i7+it13

		12-i1 >= 0 [0]: unchanged
		
		-i6+i5 > 0 [0]: montonic decrease yields 1-i6-it13+i5 > 0
		
		-12+i1 >= 0 [0]: unchanged
		
		Replacement map: {12-i1 >= 0 -> 12-i1 >= 0, -i6+i5 > 0 -> 1-i6-it13+i5 > 0, -12+i1 >= 0 -> -12+i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-1+it13 >= 0 /\ 12-i1 >= 0 /\ 1-i6-it13+i5 > 0 /\ -12+i1 >= 0) /\ i1'=i1, i3'=i3+2*it13, i6'=i6+it13, i7'=i7+it13
	New rule:
	(-1+it13 >= 0 /\ 12-i1 >= 0 /\ 1-i6-it13+i5 > 0 /\ -12+i1 >= 0) /\ i3'=i3+2*it13, i6'=i6+it13, i7'=i7+it13
	
	Instantiation

	Original rule:
	(-1+it13 >= 0 /\ 12-i1 >= 0 /\ 1-i6-it13+i5 > 0 /\ -12+i1 >= 0) /\ i3'=i3+2*it13, i6'=i6+it13, i7'=i7+it13
	New rule:
	(1 > 0 /\ 12-i1 >= 0 /\ -1-i6+i5 >= 0 /\ -12+i1 >= 0) /\ i3'=-2*i6+i3+2*i5, i6'=i5, i7'=-i6+i7+i5

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_4 -> 7
eval_start_5 -> 8
eval_start_6 -> 9
eval_start_7 -> 10
eval_start_8 -> 11
eval_start_bb1_in -> 12
eval_start_bb2_in -> 13
eval_start_bb3_in -> 14
eval_start_bb4_in -> 15
eval_start_bb5_in -> 16
eval_start_stop -> 17

Rules:
  12: (-12+i1 == 0 /\ i6-i5 >= 0) /\ i1'=14, i3'=1+i3
  31: (-12+i1 == 0 /\ i6-i5 < 0) /\ i1'=12, i3'=2+i3, i6'=1+i6, i7'=1+i7
  32: (i7-i4 < 0 /\ -14+i1 == 0) /\ i1'=12, i3'=2+i3, i6'=1+i6, i7'=1+i7
  33: (i7-i4 >= 0 /\ -14+i1 == 0) /\ i1'=17, i3'=2+i3
  34: -1+i1 == 0 /\ i1'=12, i3'=11+i3, i6'=0, i7'=0
  35: (1 > 0 /\ 12-i1 >= 0 /\ -1-i6+i5 >= 0 /\ -12+i1 >= 0) /\ i3'=-2*i6+i3+2*i5, i6'=i5, i7'=-i6+i7+i5

Dependency graph:
12 -> 32, 12 -> 33
31 -> 12, 31 -> 31, 31 -> 35
32 -> 12, 32 -> 31, 32 -> 35
34 -> 12, 34 -> 31, 34 -> 35
35 -> 12, 35 -> 31

	Trace

	34[(-1+i1 == 0)]
	35[(1 > 0 /\ 12-i1 >= 0 /\ -1-i6+i5 >= 0 /\ -12+i1 >= 0)]
	
	Blocked

	{}
	{}
	{31[T], 35[T]}
	
Step with 12

	Trace

	34[(-1+i1 == 0)]
	35[(1 > 0 /\ 12-i1 >= 0 /\ -1-i6+i5 >= 0 /\ -12+i1 >= 0)]
	12[(-12+i1 == 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{}
	{31[T], 35[T]}
	{}
	
Step with 32

	Trace

	34[(-1+i1 == 0)]
	35[(1 > 0 /\ 12-i1 >= 0 /\ -1-i6+i5 >= 0 /\ -12+i1 >= 0)]
	12[(-12+i1 == 0 /\ i6-i5 >= 0)]
	32[(i7-i4 < 0 /\ -14+i1 == 0)]
	
	Blocked

	{}
	{}
	{31[T], 35[T]}
	{}
	{}
	
Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ i7-i4 < 0 /\ -12+i1 == 0 /\ i6-i5 >= 0) /\ i1'=12, i3'=3+i3, i6'=1+i6, i7'=1+i7
		New rule:
		(i7-i4 < 0 /\ -12+i1 == 0 /\ i6-i5 >= 0) /\ i1'=12, i3'=3+i3, i6'=1+i6, i7'=1+i7

	Loop Acceleration

	Original rule:
	(i7-i4 < 0 /\ -12+i1 == 0 /\ i6-i5 >= 0) /\ i1'=12, i3'=3+i3, i6'=1+i6, i7'=1+i7
	New rule:
	(12-i1 >= 0 /\ 1-it38-i7+i4 > 0 /\ -12+i1 >= 0 /\ -1+it38 >= 0 /\ i6-i5 >= 0) /\ i1'=i1, i3'=3*it38+i3, i6'=it38+i6, i7'=it38+i7

		12-i1 >= 0 [0]: unchanged
		
		-i7+i4 > 0 [0]: montonic decrease yields 1-it38-i7+i4 > 0
		
		-12+i1 >= 0 [0]: unchanged
		
		i6-i5 >= 0 [0]: monotonic increase yields i6-i5 >= 0
		
		Replacement map: {12-i1 >= 0 -> 12-i1 >= 0, -i7+i4 > 0 -> 1-it38-i7+i4 > 0, -12+i1 >= 0 -> -12+i1 >= 0, i6-i5 >= 0 -> i6-i5 >= 0}

	Removed Trivial Updates

	Original rule:
	(12-i1 >= 0 /\ 1-it38-i7+i4 > 0 /\ -12+i1 >= 0 /\ -1+it38 >= 0 /\ i6-i5 >= 0) /\ i1'=i1, i3'=3*it38+i3, i6'=it38+i6, i7'=it38+i7
	New rule:
	(12-i1 >= 0 /\ 1-it38-i7+i4 > 0 /\ -12+i1 >= 0 /\ -1+it38 >= 0 /\ i6-i5 >= 0) /\ i3'=3*it38+i3, i6'=it38+i6, i7'=it38+i7
	
	Instantiation

	Original rule:
	(12-i1 >= 0 /\ 1-it38-i7+i4 > 0 /\ -12+i1 >= 0 /\ -1+it38 >= 0 /\ i6-i5 >= 0) /\ i3'=3*it38+i3, i6'=it38+i6, i7'=it38+i7
	New rule:
	(1 > 0 /\ 12-i1 >= 0 /\ -1-i7+i4 >= 0 /\ -12+i1 >= 0 /\ i6-i5 >= 0) /\ i3'=i3-3*i7+3*i4, i6'=i6-i7+i4, i7'=i4

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_4 -> 7
eval_start_5 -> 8
eval_start_6 -> 9
eval_start_7 -> 10
eval_start_8 -> 11
eval_start_bb1_in -> 12
eval_start_bb2_in -> 13
eval_start_bb3_in -> 14
eval_start_bb4_in -> 15
eval_start_bb5_in -> 16
eval_start_stop -> 17

Rules:
  12: (-12+i1 == 0 /\ i6-i5 >= 0) /\ i1'=14, i3'=1+i3
  31: (-12+i1 == 0 /\ i6-i5 < 0) /\ i1'=12, i3'=2+i3, i6'=1+i6, i7'=1+i7
  32: (i7-i4 < 0 /\ -14+i1 == 0) /\ i1'=12, i3'=2+i3, i6'=1+i6, i7'=1+i7
  33: (i7-i4 >= 0 /\ -14+i1 == 0) /\ i1'=17, i3'=2+i3
  34: -1+i1 == 0 /\ i1'=12, i3'=11+i3, i6'=0, i7'=0
  35: (1 > 0 /\ 12-i1 >= 0 /\ -1-i6+i5 >= 0 /\ -12+i1 >= 0) /\ i3'=-2*i6+i3+2*i5, i6'=i5, i7'=-i6+i7+i5
  36: (1 > 0 /\ 12-i1 >= 0 /\ -1-i7+i4 >= 0 /\ -12+i1 >= 0 /\ i6-i5 >= 0) /\ i3'=i3-3*i7+3*i4, i6'=i6-i7+i4, i7'=i4

Dependency graph:
12 -> 32, 12 -> 33
31 -> 12, 31 -> 31, 31 -> 35, 31 -> 36
32 -> 12, 32 -> 31, 32 -> 35, 32 -> 36
34 -> 12, 34 -> 31, 34 -> 35, 34 -> 36
35 -> 12, 35 -> 31, 35 -> 36
36 -> 12, 36 -> 31, 36 -> 35

	Trace

	34[(-1+i1 == 0)]
	35[(1 > 0 /\ 12-i1 >= 0 /\ -1-i6+i5 >= 0 /\ -12+i1 >= 0)]
	36[(1 > 0 /\ 12-i1 >= 0 /\ -1-i7+i4 >= 0 /\ -12+i1 >= 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{}
	{31[T], 35[T]}
	{36[T]}
	
Step with 12

	Trace

	34[(-1+i1 == 0)]
	35[(1 > 0 /\ 12-i1 >= 0 /\ -1-i6+i5 >= 0 /\ -12+i1 >= 0)]
	36[(1 > 0 /\ 12-i1 >= 0 /\ -1-i7+i4 >= 0 /\ -12+i1 >= 0 /\ i6-i5 >= 0)]
	12[(-12+i1 == 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{}
	{31[T], 35[T]}
	{31[T], 36[T]}
	{}
	
Step with 33

	Trace

	34[(-1+i1 == 0)]
	35[(1 > 0 /\ 12-i1 >= 0 /\ -1-i6+i5 >= 0 /\ -12+i1 >= 0)]
	36[(1 > 0 /\ 12-i1 >= 0 /\ -1-i7+i4 >= 0 /\ -12+i1 >= 0 /\ i6-i5 >= 0)]
	12[(-12+i1 == 0 /\ i6-i5 >= 0)]
	33[(i7-i4 >= 0 /\ -14+i1 == 0)]
	
	Blocked

	{}
	{}
	{31[T], 35[T]}
	{31[T], 36[T]}
	{32[T]}
	{}
	
Backtrack

	Trace

	34[(-1+i1 == 0)]
	35[(1 > 0 /\ 12-i1 >= 0 /\ -1-i6+i5 >= 0 /\ -12+i1 >= 0)]
	36[(1 > 0 /\ 12-i1 >= 0 /\ -1-i7+i4 >= 0 /\ -12+i1 >= 0 /\ i6-i5 >= 0)]
	12[(-12+i1 == 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{}
	{31[T], 35[T]}
	{31[T], 36[T]}
	{32[T], 33[T]}
	
Backtrack

	Trace

	34[(-1+i1 == 0)]
	35[(1 > 0 /\ 12-i1 >= 0 /\ -1-i6+i5 >= 0 /\ -12+i1 >= 0)]
	36[(1 > 0 /\ 12-i1 >= 0 /\ -1-i7+i4 >= 0 /\ -12+i1 >= 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{}
	{31[T], 35[T]}
	{12[T], 31[T], 36[T]}
	
Backtrack

	Trace

	34[(-1+i1 == 0)]
	35[(1 > 0 /\ 12-i1 >= 0 /\ -1-i6+i5 >= 0 /\ -12+i1 >= 0)]
	
	Blocked

	{}
	{}
	{31[T], 35[T], 36[T]}
	
Step with 12

	Trace

	34[(-1+i1 == 0)]
	35[(1 > 0 /\ 12-i1 >= 0 /\ -1-i6+i5 >= 0 /\ -12+i1 >= 0)]
	12[(-12+i1 == 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{}
	{31[T], 35[T], 36[T]}
	{}
	
Step with 32

	Trace

	34[(-1+i1 == 0)]
	35[(1 > 0 /\ 12-i1 >= 0 /\ -1-i6+i5 >= 0 /\ -12+i1 >= 0)]
	12[(-12+i1 == 0 /\ i6-i5 >= 0)]
	32[(i7-i4 < 0 /\ -14+i1 == 0)]
	
	Blocked

	{}
	{}
	{31[T], 35[T], 36[T]}
	{}
	{}
	
Covered

	Trace

	34[(-1+i1 == 0)]
	35[(1 > 0 /\ 12-i1 >= 0 /\ -1-i6+i5 >= 0 /\ -12+i1 >= 0)]
	12[(-12+i1 == 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{}
	{31[T], 35[T], 36[T]}
	{32[T]}
	
Step with 33

	Trace

	34[(-1+i1 == 0)]
	35[(1 > 0 /\ 12-i1 >= 0 /\ -1-i6+i5 >= 0 /\ -12+i1 >= 0)]
	12[(-12+i1 == 0 /\ i6-i5 >= 0)]
	33[(i7-i4 >= 0 /\ -14+i1 == 0)]
	
	Blocked

	{}
	{}
	{31[T], 35[T], 36[T]}
	{32[T]}
	{}
	
Backtrack

	Trace

	34[(-1+i1 == 0)]
	35[(1 > 0 /\ 12-i1 >= 0 /\ -1-i6+i5 >= 0 /\ -12+i1 >= 0)]
	12[(-12+i1 == 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{}
	{31[T], 35[T], 36[T]}
	{32[T], 33[T]}
	
Backtrack

	Trace

	34[(-1+i1 == 0)]
	35[(1 > 0 /\ 12-i1 >= 0 /\ -1-i6+i5 >= 0 /\ -12+i1 >= 0)]
	
	Blocked

	{}
	{}
	{12[T], 31[T], 35[T], 36[T]}
	
Backtrack

	Trace

	34[(-1+i1 == 0)]
	
	Blocked

	{}
	{35[T]}
	
Step with 36

	Trace

	34[(-1+i1 == 0)]
	36[(1 > 0 /\ 12-i1 >= 0 /\ -1-i7+i4 >= 0 /\ -12+i1 >= 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{35[T]}
	{36[T]}
	
Step with 12

	Trace

	34[(-1+i1 == 0)]
	36[(1 > 0 /\ 12-i1 >= 0 /\ -1-i7+i4 >= 0 /\ -12+i1 >= 0 /\ i6-i5 >= 0)]
	12[(-12+i1 == 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{35[T]}
	{35[T], 36[T]}
	{}
	
Step with 33

	Trace

	34[(-1+i1 == 0)]
	36[(1 > 0 /\ 12-i1 >= 0 /\ -1-i7+i4 >= 0 /\ -12+i1 >= 0 /\ i6-i5 >= 0)]
	12[(-12+i1 == 0 /\ i6-i5 >= 0)]
	33[(i7-i4 >= 0 /\ -14+i1 == 0)]
	
	Blocked

	{}
	{35[T]}
	{35[T], 36[T]}
	{32[T]}
	{}
	
Backtrack

	Trace

	34[(-1+i1 == 0)]
	36[(1 > 0 /\ 12-i1 >= 0 /\ -1-i7+i4 >= 0 /\ -12+i1 >= 0 /\ i6-i5 >= 0)]
	12[(-12+i1 == 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{35[T]}
	{35[T], 36[T]}
	{32[T], 33[T]}
	
Backtrack

	Trace

	34[(-1+i1 == 0)]
	36[(1 > 0 /\ 12-i1 >= 0 /\ -1-i7+i4 >= 0 /\ -12+i1 >= 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{35[T]}
	{12[T], 35[T], 36[T]}
	
Backtrack

	Trace

	34[(-1+i1 == 0)]
	
	Blocked

	{}
	{35[T], 36[T]}
	
Step with 12

	Trace

	34[(-1+i1 == 0)]
	12[(-12+i1 == 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{35[T], 36[T]}
	{}
	
Step with 33

	Trace

	34[(-1+i1 == 0)]
	12[(-12+i1 == 0 /\ i6-i5 >= 0)]
	33[(i7-i4 >= 0 /\ -14+i1 == 0)]
	
	Blocked

	{}
	{35[T], 36[T]}
	{}
	{}
	
Backtrack

	Trace

	34[(-1+i1 == 0)]
	12[(-12+i1 == 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{35[T], 36[T]}
	{33[T]}
	
Step with 32

	Trace

	34[(-1+i1 == 0)]
	12[(-12+i1 == 0 /\ i6-i5 >= 0)]
	32[(i7-i4 < 0 /\ -14+i1 == 0)]
	
	Blocked

	{}
	{35[T], 36[T]}
	{33[T]}
	{}
	
Covered

	Trace

	34[(-1+i1 == 0)]
	12[(-12+i1 == 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{35[T], 36[T]}
	{32[T], 33[T]}
	
Backtrack

	Trace

	34[(-1+i1 == 0)]
	
	Blocked

	{}
	{12[T], 35[T], 36[T]}
	
Step with 31

	Trace

	34[(-1+i1 == 0)]
	31[(-12+i1 == 0 /\ i6-i5 < 0)]
	
	Blocked

	{}
	{12[T], 35[T], 36[T]}
	{}
	
Covered

	Trace

	34[(-1+i1 == 0)]
	
	Blocked

	{}
	{12[T], 31[T], 35[T], 36[T]}
	
Backtrack

	Trace

	Blocked

	{34[T]}
	
Accept

Poly(n^1)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃
  Temp_Vars:  
  Locations:  l0, l1, l10, l11, l12, l13, l14, l15, l16, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, X₃)
  t₃: l1(X₀, X₁, X₂, X₃) → l4(X₀, X₁, X₂, X₃)
  t₁₀: l10(X₀, X₁, X₂, X₃) → l11(X₀, X₁, 0, 0)
  t₁₁: l11(X₀, X₁, X₂, X₃) → l12(X₀, X₁, X₂, X₃) :|: 1+X₂ ≤ X₁
  t₁₂: l11(X₀, X₁, X₂, X₃) → l13(X₀, X₁, X₂, X₃) :|: X₁ ≤ X₂
  t₁₃: l12(X₀, X₁, X₂, X₃) → l11(X₀, X₁, 1+X₂, 1+X₃)
  t₁₄: l13(X₀, X₁, X₂, X₃) → l14(X₀, X₁, X₂, X₃) :|: 1+X₃ ≤ X₀
  t₁₅: l13(X₀, X₁, X₂, X₃) → l15(X₀, X₁, X₂, X₃) :|: X₀ ≤ X₃
  t₁₆: l14(X₀, X₁, X₂, X₃) → l11(X₀, X₁, 1+X₂, 1+X₃)
  t₁₇: l15(X₀, X₁, X₂, X₃) → l16(X₀, X₁, X₂, X₃)
  t₁: l2(X₀, X₁, X₂, X₃) → l3(X₀, X₁, X₂, X₃)
  t₂: l3(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, X₃)
  t₄: l4(X₀, X₁, X₂, X₃) → l5(X₀, X₁, X₂, X₃)
  t₅: l5(X₀, X₁, X₂, X₃) → l6(X₀, X₁, X₂, X₃)
  t₆: l6(X₀, X₁, X₂, X₃) → l7(X₀, X₁, X₂, X₃)
  t₇: l7(X₀, X₁, X₂, X₃) → l8(X₀, X₁, X₂, X₃)
  t₈: l8(X₀, X₁, X₂, X₃) → l9(X₀, X₁, X₂, X₃)
  t₉: l9(X₀, X₁, X₂, X₃) → l10(X₀, X₁, X₂, X₃)


Preprocessing
  Found invariant X₃ ≤ X₂ ∧ 1+X₃ ≤ X₁ ∧ 0 ≤ X₃ ∧ 0 ≤ X₂+X₃ ∧ X₂ ≤ X₃ ∧ 1 ≤ X₁+X₃ ∧ 1+X₂ ≤ X₁ ∧ 0 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 1 ≤ X₁ for location l12


  Found invariant X₃ ≤ X₂ ∧ 1+X₃ ≤ X₀ ∧ 0 ≤ X₃ ∧ 0 ≤ X₂+X₃ ∧ X₂ ≤ X₃ ∧ X₁ ≤ X₃ ∧ 1 ≤ X₀+X₃ ∧ 1+X₂ ≤ X₀ ∧ 0 ≤ X₂ ∧ X₁ ≤ X₂ ∧ 1 ≤ X₀+X₂ ∧ 1+X₁ ≤ X₀ ∧ 1 ≤ X₀ for location l14


  Found invariant X₃ ≤ X₂ ∧ 0 ≤ X₃ ∧ 0 ≤ X₂+X₃ ∧ X₂ ≤ X₃ ∧ 0 ≤ X₂ for location l11


  Found invariant X₃ ≤ X₂ ∧ 0 ≤ X₃ ∧ 0 ≤ X₂+X₃ ∧ X₂ ≤ X₃ ∧ X₁ ≤ X₃ ∧ X₀ ≤ X₃ ∧ 0 ≤ X₂ ∧ X₁ ≤ X₂ ∧ X₀ ≤ X₂ for location l15


  Found invariant X₃ ≤ X₂ ∧ 0 ≤ X₃ ∧ 0 ≤ X₂+X₃ ∧ X₂ ≤ X₃ ∧ X₁ ≤ X₃ ∧ 0 ≤ X₂ ∧ X₁ ≤ X₂ for location l13


  Found invariant X₃ ≤ X₂ ∧ 0 ≤ X₃ ∧ 0 ≤ X₂+X₃ ∧ X₂ ≤ X₃ ∧ X₁ ≤ X₃ ∧ X₀ ≤ X₃ ∧ 0 ≤ X₂ ∧ X₁ ≤ X₂ ∧ X₀ ≤ X₂ for location l16


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃
  Temp_Vars:  
  Locations:  l0, l1, l10, l11, l12, l13, l14, l15, l16, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, X₃)
  t₃: l1(X₀, X₁, X₂, X₃) → l4(X₀, X₁, X₂, X₃)
  t₁₀: l10(X₀, X₁, X₂, X₃) → l11(X₀, X₁, 0, 0)
  t₁₁: l11(X₀, X₁, X₂, X₃) → l12(X₀, X₁, X₂, X₃) :|: 1+X₂ ≤ X₁ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ X₃ ≤ X₂ ∧ X₂ ≤ X₃ ∧ 0 ≤ X₃
  t₁₂: l11(X₀, X₁, X₂, X₃) → l13(X₀, X₁, X₂, X₃) :|: X₁ ≤ X₂ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ X₃ ≤ X₂ ∧ X₂ ≤ X₃ ∧ 0 ≤ X₃
  t₁₃: l12(X₀, X₁, X₂, X₃) → l11(X₀, X₁, 1+X₂, 1+X₃) :|: 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 1+X₃ ≤ X₁ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ X₃ ≤ X₂ ∧ X₂ ≤ X₃ ∧ 0 ≤ X₃
  t₁₄: l13(X₀, X₁, X₂, X₃) → l14(X₀, X₁, X₂, X₃) :|: 1+X₃ ≤ X₀ ∧ X₁ ≤ X₂ ∧ X₁ ≤ X₃ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ X₃ ≤ X₂ ∧ X₂ ≤ X₃ ∧ 0 ≤ X₃
  t₁₅: l13(X₀, X₁, X₂, X₃) → l15(X₀, X₁, X₂, X₃) :|: X₀ ≤ X₃ ∧ X₁ ≤ X₂ ∧ X₁ ≤ X₃ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ X₃ ≤ X₂ ∧ X₂ ≤ X₃ ∧ 0 ≤ X₃
  t₁₆: l14(X₀, X₁, X₂, X₃) → l11(X₀, X₁, 1+X₂, 1+X₃) :|: 1 ≤ X₀ ∧ 1+X₁ ≤ X₀ ∧ 1 ≤ X₀+X₂ ∧ 1+X₂ ≤ X₀ ∧ 1 ≤ X₀+X₃ ∧ 1+X₃ ≤ X₀ ∧ X₁ ≤ X₂ ∧ X₁ ≤ X₃ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ X₃ ≤ X₂ ∧ X₂ ≤ X₃ ∧ 0 ≤ X₃
  t₁₇: l15(X₀, X₁, X₂, X₃) → l16(X₀, X₁, X₂, X₃) :|: X₀ ≤ X₂ ∧ X₀ ≤ X₃ ∧ X₁ ≤ X₂ ∧ X₁ ≤ X₃ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ X₃ ≤ X₂ ∧ X₂ ≤ X₃ ∧ 0 ≤ X₃
  t₁: l2(X₀, X₁, X₂, X₃) → l3(X₀, X₁, X₂, X₃)
  t₂: l3(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, X₃)
  t₄: l4(X₀, X₁, X₂, X₃) → l5(X₀, X₁, X₂, X₃)
  t₅: l5(X₀, X₁, X₂, X₃) → l6(X₀, X₁, X₂, X₃)
  t₆: l6(X₀, X₁, X₂, X₃) → l7(X₀, X₁, X₂, X₃)
  t₇: l7(X₀, X₁, X₂, X₃) → l8(X₀, X₁, X₂, X₃)
  t₈: l8(X₀, X₁, X₂, X₃) → l9(X₀, X₁, X₂, X₃)
  t₉: l9(X₀, X₁, X₂, X₃) → l10(X₀, X₁, X₂, X₃)


MPRF for transition t₁₁: l11(X₀, X₁, X₂, X₃) → l12(X₀, X₁, X₂, X₃) :|: 1+X₂ ≤ X₁ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ X₃ ≤ X₂ ∧ X₂ ≤ X₃ ∧ 0 ≤ X₃ of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l11: [X₁-X₂]
    • l12: [X₁-1-X₂]
    • l13: [X₁-X₂]
    • l14: [X₁-X₂]




MPRF for transition t₁₃: l12(X₀, X₁, X₂, X₃) → l11(X₀, X₁, 1+X₂, 1+X₃) :|: 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 1+X₃ ≤ X₁ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ X₃ ≤ X₂ ∧ X₂ ≤ X₃ ∧ 0 ≤ X₃ of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l11: [X₁-X₃]
    • l12: [X₁-X₂]
    • l13: [X₁-X₃]
    • l14: [X₁-X₃]




MPRF for transition t₁₄: l13(X₀, X₁, X₂, X₃) → l14(X₀, X₁, X₂, X₃) :|: 1+X₃ ≤ X₀ ∧ X₁ ≤ X₂ ∧ X₁ ≤ X₃ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ X₃ ≤ X₂ ∧ X₂ ≤ X₃ ∧ 0 ≤ X₃ of depth 1:
  new bound:
    X₀+1 {O(n)}

  MPRF:
    • l11: [1+X₀-X₃]
    • l12: [1+X₀-X₃]
    • l13: [1+X₀-X₂]
    • l14: [X₀-X₃]




MPRF for transition t₁₆: l14(X₀, X₁, X₂, X₃) → l11(X₀, X₁, 1+X₂, 1+X₃) :|: 1 ≤ X₀ ∧ 1+X₁ ≤ X₀ ∧ 1 ≤ X₀+X₂ ∧ 1+X₂ ≤ X₀ ∧ 1 ≤ X₀+X₃ ∧ 1+X₃ ≤ X₀ ∧ X₁ ≤ X₂ ∧ X₁ ≤ X₃ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ X₃ ≤ X₂ ∧ X₂ ≤ X₃ ∧ 0 ≤ X₃ of depth 1:
  new bound:
    X₀ {O(n)}

  MPRF:
    • l11: [X₀-X₂]
    • l12: [X₀-X₂]
    • l13: [X₀-X₂]
    • l14: [X₀-X₂]




  knowledge_propagation leads to new time bound X₀+X₁+1 {O(n)} for transition t₁₂: l11(X₀, X₁, X₂, X₃) → l13(X₀, X₁, X₂, X₃) :|: X₁ ≤ X₂ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ X₃ ≤ X₂ ∧ X₂ ≤ X₃ ∧ 0 ≤ X₃


All Bounds
Timebounds
  Overall timebound:3⋅X₀+3⋅X₁+15 {O(n)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: 1 {O(1)}
    t₈: 1 {O(1)}
    t₉: 1 {O(1)}
    t₁₀: 1 {O(1)}
    t₁₁: X₁ {O(n)}
    t₁₂: X₀+X₁+1 {O(n)}
    t₁₃: X₁ {O(n)}
    t₁₄: X₀+1 {O(n)}
    t₁₅: 1 {O(1)}
    t₁₆: X₀ {O(n)}
    t₁₇: 1 {O(1)}


Costbounds
  Overall costbound: 3⋅X₀+3⋅X₁+15 {O(n)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: 1 {O(1)}
    t₈: 1 {O(1)}
    t₉: 1 {O(1)}
    t₁₀: 1 {O(1)}
    t₁₁: X₁ {O(n)}
    t₁₂: X₀+X₁+1 {O(n)}
    t₁₃: X₁ {O(n)}
    t₁₄: X₀+1 {O(n)}
    t₁₅: 1 {O(1)}
    t₁₆: X₀ {O(n)}
    t₁₇: 1 {O(1)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₀, X₂: X₂ {O(n)}
    t₀, X₃: X₃ {O(n)}
    t₁, X₀: X₀ {O(n)}
    t₁, X₁: X₁ {O(n)}
    t₁, X₂: X₂ {O(n)}
    t₁, X₃: X₃ {O(n)}
    t₂, X₀: X₀ {O(n)}
    t₂, X₁: X₁ {O(n)}
    t₂, X₂: X₂ {O(n)}
    t₂, X₃: X₃ {O(n)}
    t₃, X₀: X₀ {O(n)}
    t₃, X₁: X₁ {O(n)}
    t₃, X₂: X₂ {O(n)}
    t₃, X₃: X₃ {O(n)}
    t₄, X₀: X₀ {O(n)}
    t₄, X₁: X₁ {O(n)}
    t₄, X₂: X₂ {O(n)}
    t₄, X₃: X₃ {O(n)}
    t₅, X₀: X₀ {O(n)}
    t₅, X₁: X₁ {O(n)}
    t₅, X₂: X₂ {O(n)}
    t₅, X₃: X₃ {O(n)}
    t₆, X₀: X₀ {O(n)}
    t₆, X₁: X₁ {O(n)}
    t₆, X₂: X₂ {O(n)}
    t₆, X₃: X₃ {O(n)}
    t₇, X₀: X₀ {O(n)}
    t₇, X₁: X₁ {O(n)}
    t₇, X₂: X₂ {O(n)}
    t₇, X₃: X₃ {O(n)}
    t₈, X₀: X₀ {O(n)}
    t₈, X₁: X₁ {O(n)}
    t₈, X₂: X₂ {O(n)}
    t₈, X₃: X₃ {O(n)}
    t₉, X₀: X₀ {O(n)}
    t₉, X₁: X₁ {O(n)}
    t₉, X₂: X₂ {O(n)}
    t₉, X₃: X₃ {O(n)}
    t₁₀, X₀: X₀ {O(n)}
    t₁₀, X₁: X₁ {O(n)}
    t₁₀, X₂: 0 {O(1)}
    t₁₀, X₃: 0 {O(1)}
    t₁₁, X₀: X₀ {O(n)}
    t₁₁, X₁: X₁ {O(n)}
    t₁₁, X₂: X₁ {O(n)}
    t₁₁, X₃: X₁ {O(n)}
    t₁₂, X₀: X₀ {O(n)}
    t₁₂, X₁: X₁ {O(n)}
    t₁₂, X₂: X₀+X₁ {O(n)}
    t₁₂, X₃: X₀+X₁ {O(n)}
    t₁₃, X₀: X₀ {O(n)}
    t₁₃, X₁: X₁ {O(n)}
    t₁₃, X₂: X₁ {O(n)}
    t₁₃, X₃: X₁ {O(n)}
    t₁₄, X₀: X₀ {O(n)}
    t₁₄, X₁: X₁ {O(n)}
    t₁₄, X₂: X₀+X₁ {O(n)}
    t₁₄, X₃: X₀+X₁ {O(n)}
    t₁₅, X₀: X₀ {O(n)}
    t₁₅, X₁: X₁ {O(n)}
    t₁₅, X₂: X₀+X₁ {O(n)}
    t₁₅, X₃: X₀+X₁ {O(n)}
    t₁₆, X₀: X₀ {O(n)}
    t₁₆, X₁: X₁ {O(n)}
    t₁₆, X₂: X₀+X₁ {O(n)}
    t₁₆, X₃: X₀+X₁ {O(n)}
    t₁₇, X₀: X₀ {O(n)}
    t₁₇, X₁: X₁ {O(n)}
    t₁₇, X₂: X₀+X₁ {O(n)}
    t₁₇, X₃: X₀+X₁ {O(n)}

