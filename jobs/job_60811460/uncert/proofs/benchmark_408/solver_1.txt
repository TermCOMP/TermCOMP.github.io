WORST_CASE(?,O(1))

# LoAT Proof:
Initial ITS

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f4 -> 2
f12 -> 3

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=it2
   1: (-1+i4 >= 0 /\ -2+i1 == 0 /\ 3-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
   2: (-2+i1 == 0 /\ 3-i4 >= 0 /\ -i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=1
   3: (-2+i1 == 0 /\ -4+i4 >= 0) /\ i1'=3, i3'=1+i3

Dependency graph:
0 -> 1, 0 -> 2, 0 -> 3
1 -> 1, 1 -> 2, 1 -> 3
2 -> 1, 2 -> 2, 2 -> 3

Refined Dependency Graph

	Removed the following edges: 1 -> 2, 2 -> 2, 2 -> 3

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f4 -> 2
f12 -> 3

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=it2
   1: (-1+i4 >= 0 /\ -2+i1 == 0 /\ 3-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
   2: (-2+i1 == 0 /\ 3-i4 >= 0 /\ -i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=1
   3: (-2+i1 == 0 /\ -4+i4 >= 0) /\ i1'=3, i3'=1+i3

Dependency graph:
0 -> 1, 0 -> 2, 0 -> 3
1 -> 1, 1 -> 3
2 -> 1

Step with 0

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 3

	Trace

	0[(-1+i1 == 0)]
	3[(-2+i1 == 0 /\ -4+i4 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{3[T]}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	1[(-1+i4 >= 0 /\ -2+i1 == 0 /\ 3-i4 >= 0)]
	
	Blocked

	{}
	{3[T]}
	{}
	
Accelerate

	Loop Acceleration

	Original rule:
	(-1+i4 >= 0 /\ -2+i1 == 0 /\ 3-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
	New rule:
	(4-i4-it13 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+it13 >= 0) /\ i1'=i1, i3'=i3+it13, i4'=i4+it13

		-1+i4 >= 0 [0]: monotonic increase yields -1+i4 >= 0
		
		-2+i1 >= 0 [0]: unchanged
		
		3-i4 >= 0 [0]: montonic decrease yields 4-i4-it13 >= 0
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-1+i4 >= 0 -> -1+i4 >= 0, -2+i1 >= 0 -> -2+i1 >= 0, 3-i4 >= 0 -> 4-i4-it13 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(4-i4-it13 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+it13 >= 0) /\ i1'=i1, i3'=i3+it13, i4'=i4+it13
	New rule:
	(4-i4-it13 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+it13 >= 0) /\ i3'=i3+it13, i4'=i4+it13
	
	Instantiation

	Original rule:
	(4-i4-it13 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+it13 >= 0) /\ i3'=i3+it13, i4'=i4+it13
	New rule:
	(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0) /\ i3'=4+i3-i4, i4'=4

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f4 -> 2
f12 -> 3

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=it2
   1: (-1+i4 >= 0 /\ -2+i1 == 0 /\ 3-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
   2: (-2+i1 == 0 /\ 3-i4 >= 0 /\ -i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=1
   3: (-2+i1 == 0 /\ -4+i4 >= 0) /\ i1'=3, i3'=1+i3
   4: (0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0) /\ i3'=4+i3-i4, i4'=4

Dependency graph:
0 -> 1, 0 -> 2, 0 -> 3, 0 -> 4
1 -> 1, 1 -> 3, 1 -> 4
2 -> 1, 2 -> 4
4 -> 1, 4 -> 3

	Trace

	0[(-1+i1 == 0)]
	4[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{3[T]}
	{1[T], 4[T]}
	
Step with 3

	Trace

	0[(-1+i1 == 0)]
	4[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0)]
	3[(-2+i1 == 0 /\ -4+i4 >= 0)]
	
	Blocked

	{}
	{3[T]}
	{1[T], 4[T]}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	4[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{3[T]}
	{1[T], 3[T], 4[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{3[T], 4[T]}
	
Step with 2

	Trace

	0[(-1+i1 == 0)]
	2[(-2+i1 == 0 /\ 3-i4 >= 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{3[T], 4[T]}
	{}
	
Step with 4

	Trace

	0[(-1+i1 == 0)]
	2[(-2+i1 == 0 /\ 3-i4 >= 0 /\ -i4 >= 0)]
	4[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{3[T], 4[T]}
	{}
	{4[T]}
	
Step with 3

	Trace

	0[(-1+i1 == 0)]
	2[(-2+i1 == 0 /\ 3-i4 >= 0 /\ -i4 >= 0)]
	4[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0)]
	3[(-2+i1 == 0 /\ -4+i4 >= 0)]
	
	Blocked

	{}
	{3[T], 4[T]}
	{}
	{1[T], 4[T]}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	2[(-2+i1 == 0 /\ 3-i4 >= 0 /\ -i4 >= 0)]
	4[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{3[T], 4[T]}
	{}
	{1[T], 3[T], 4[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	2[(-2+i1 == 0 /\ 3-i4 >= 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{3[T], 4[T]}
	{4[T]}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	2[(-2+i1 == 0 /\ 3-i4 >= 0 /\ -i4 >= 0)]
	1[(-1+i4 >= 0 /\ -2+i1 == 0 /\ 3-i4 >= 0)]
	
	Blocked

	{}
	{3[T], 4[T]}
	{4[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	2[(-2+i1 == 0 /\ 3-i4 >= 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{3[T], 4[T]}
	{1[T], 4[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{2[T], 3[T], 4[T]}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	1[(-1+i4 >= 0 /\ -2+i1 == 0 /\ 3-i4 >= 0)]
	
	Blocked

	{}
	{2[T], 3[T], 4[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{1[T], 2[T], 3[T], 4[T]}
	
Backtrack

	Trace

	Blocked

	{0[T]}
	
Accept

Constant


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀
  Temp_Vars:  B
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₀: l0(X₀) → l1(B)
  t₁: l1(X₀) → l1(1+X₀) :|: X₀ ≤ 3 ∧ 1 ≤ X₀
  t₂: l1(X₀) → l1(1) :|: X₀ ≤ 3 ∧ X₀ ≤ 0
  t₃: l1(X₀) → l2(X₀) :|: 4 ≤ X₀


Preprocessing
  Found invariant 4 ≤ X₀ for location l2


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀
  Temp_Vars:  B
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₀: l0(X₀) → l1(B)
  t₁: l1(X₀) → l1(1+X₀) :|: X₀ ≤ 3 ∧ 1 ≤ X₀
  t₂: l1(X₀) → l1(1) :|: X₀ ≤ 3 ∧ X₀ ≤ 0
  t₃: l1(X₀) → l2(X₀) :|: 4 ≤ X₀


  knowledge_propagation leads to new time bound 1 {O(1)} for transition t₂: l1(X₀) → l1(1) :|: X₀ ≤ 3 ∧ X₀ ≤ 0


  Found invariant X₀ ≤ 4 ∧ 2 ≤ X₀ for location l1_v2


  Found invariant 4 ≤ X₀ for location l2


  Found invariant X₀ ≤ 2 ∧ 2 ≤ X₀ for location l1_v3


  Found invariant X₀ ≤ 1 ∧ 1 ≤ X₀ for location l1_v1


Analysing control-flow refined program
MPRF for transition t₂₇: l1_v2(X₀) → l1_v2(1+X₀) :|: X₀ ≤ 3 ∧ 1 ≤ X₀ ∧ X₀ ≤ 4 ∧ 2 ≤ X₀ of depth 1:
  new bound:
    17 {O(1)}

  MPRF:
    • l1_v2: [5-X₀]




CFR: Improvement to new bound with the following program: 
  method: PartialEvaluation new bound: 
    O(1)

  cfr-program: 
    Start:  l0
    Program_Vars:  X₀
    Temp_Vars:  B
    Locations:  l0, l1, l1_v1, l1_v2, l1_v3, l2
    Return Locations:  
    Transitions:
    t₀: l0(X₀) → l1(B)
    t₂₄: l1(X₀) → l1_v1(1) :|: X₀ ≤ 3 ∧ X₀ ≤ 0
    t₂₅: l1(X₀) → l1_v2(1+X₀) :|: X₀ ≤ 3 ∧ 1 ≤ X₀
    t₃: l1(X₀) → l2(X₀) :|: 4 ≤ X₀
    t₂₃: l1(X₀) → l2(X₀) :|: 4 ≤ X₀
    t₂₈: l1_v1(X₀) → l1_v3(1+X₀) :|: X₀ ≤ 3 ∧ 1 ≤ X₀ ∧ X₀ ≤ 4 ∧ X₀ ≤ 1
    t₂₇: l1_v2(X₀) → l1_v2(1+X₀) :|: X₀ ≤ 3 ∧ 1 ≤ X₀ ∧ X₀ ≤ 4 ∧ 2 ≤ X₀
    t₂₆: l1_v2(X₀) → l2(X₀) :|: 4 ≤ X₀ ∧ X₀ ≤ 4 ∧ 1 ≤ X₀ ∧ 2 ≤ X₀
    t₂₉: l1_v3(X₀) → l1_v2(1+X₀) :|: X₀ ≤ 3 ∧ 1 ≤ X₀ ∧ X₀ ≤ 4 ∧ X₀ ≤ 2 ∧ 2 ≤ X₀




All Bounds
Timebounds
  Overall timebound:25 {O(1)}
    t₀: 1 {O(1)}
    t₃: 1 {O(1)}
    t₂₃: 1 {O(1)}
    t₂₄: 1 {O(1)}
    t₂₅: 1 {O(1)}
    t₂₆: 1 {O(1)}
    t₂₇: 17 {O(1)}
    t₂₈: 1 {O(1)}
    t₂₉: 1 {O(1)}


Costbounds
  Overall costbound: 25 {O(1)}
    t₀: 1 {O(1)}
    t₃: 1 {O(1)}
    t₂₃: 1 {O(1)}
    t₂₄: 1 {O(1)}
    t₂₅: 1 {O(1)}
    t₂₆: 1 {O(1)}
    t₂₇: 17 {O(1)}
    t₂₈: 1 {O(1)}
    t₂₉: 1 {O(1)}


Sizebounds
    t₂₄, X₀: 1 {O(1)}
    t₂₅, X₀: 4 {O(1)}
    t₂₆, X₀: 4 {O(1)}
    t₂₇, X₀: 4 {O(1)}
    t₂₈, X₀: 2 {O(1)}
    t₂₉, X₀: 3 {O(1)}

