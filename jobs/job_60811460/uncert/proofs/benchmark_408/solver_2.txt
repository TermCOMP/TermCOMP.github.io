WORST_CASE(?,O(1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [f4/3]
1. non_recursive  : [exit_location/1]
2. non_recursive  : [f12/2]
3. non_recursive  : [f4_loop_cont/3]
4. non_recursive  : [f0/2]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into f4/3
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into f4_loop_cont/3
4. SCC is partially evaluated into f0/2

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations f4/3 
* CE 5 is refined into CE [8] 
* CE 4 is refined into CE [9] 
* CE 2 is refined into CE [10] 
* CE 3 is refined into CE [11] 


### Cost equations --> "Loop" of f4/3 
* CEs [10] --> Loop 8 
* CEs [11] --> Loop 9 
* CEs [8] --> Loop 10 
* CEs [9] --> Loop 11 

### Ranking functions of CR f4(A,C,D) 
* RF of phase [8]: [-A+4]

#### Partial ranking functions of CR f4(A,C,D) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    -A+4


### Specialization of cost equations f4_loop_cont/3 
* CE 7 is refined into CE [12] 
* CE 6 is refined into CE [13] 


### Cost equations --> "Loop" of f4_loop_cont/3 
* CEs [12] --> Loop 12 
* CEs [13] --> Loop 13 

### Ranking functions of CR f4_loop_cont(A,B,C) 

#### Partial ranking functions of CR f4_loop_cont(A,B,C) 


### Specialization of cost equations f0/2 
* CE 1 is refined into CE [14,15,16,17,18,19] 


### Cost equations --> "Loop" of f0/2 
* CEs [14,15,16,17,18,19] --> Loop 14 

### Ranking functions of CR f0(A,C) 

#### Partial ranking functions of CR f0(A,C) 


Computing Bounds
=====================================

#### Cost of chains of f4(A,C,D):
* Chain [[8],11]: 1*it(8)+0
  Such that:it(8) =< -A+4

  with precondition: [C=2,D=4,3>=A,A>=1] 

* Chain [[8],10]: 1*it(8)+0
  Such that:it(8) =< -A+4

  with precondition: [C=3,3>=A,A>=1] 

* Chain [11]: 0
  with precondition: [C=2,A=D,A>=4] 

* Chain [10]: 0
  with precondition: [C=3] 

* Chain [9,[8],11]: 1*it(8)+1
  Such that:it(8) =< 3

  with precondition: [C=2,D=4,0>=A] 

* Chain [9,[8],10]: 1*it(8)+1
  Such that:it(8) =< 3

  with precondition: [C=3,0>=A] 

* Chain [9,10]: 1
  with precondition: [C=3,0>=A] 


#### Cost of chains of f4_loop_cont(A,B,C):
* Chain [13]: 0
  with precondition: [A=2] 

* Chain [12]: 0
  with precondition: [A=3] 


#### Cost of chains of f0(A,C):
* Chain [14]: 13
  with precondition: [] 


Closed-form bounds of f0(A,C): 
-------------------------------------
* Chain [14] with precondition: [] 
    - Upper bound: 13 
    - Complexity: constant 

### Maximum cost of f0(A,C): 13 
Asymptotic class: constant 
* Total analysis performed in 26 ms.

