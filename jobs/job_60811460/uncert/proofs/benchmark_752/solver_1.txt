WORST_CASE(Omega(n^2),O(n^2))

# LoAT Proof:
WORST_CASE(Omega(n^2),?)

WORST_CASE(Omega(n^1),?)
WORST_CASE(Omega(n^2),?)
Initial ITS

Start location: eval_abc_start

Location map:
LoAT_sink -> 0
eval_abc_start -> 1
eval_abc_bb0_in -> 2
eval_abc_0 -> 3
eval_abc_1 -> 4
eval_abc_2 -> 5
eval_abc_3 -> 6
eval_abc_4 -> 7
eval_abc_5 -> 8
eval_abc_bb1_in -> 9
eval_abc_bb2_in -> 10
eval_abc_bb5_in -> 11
eval_abc_bb3_in -> 12
eval_abc_bb4_in -> 13
eval_abc_9 -> 14
eval_abc_10 -> 15
eval_abc_stop -> 16

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: -2+i1 == 0 /\ i1'=3, i3'=1+i3
   2: -3+i1 == 0 /\ i1'=4, i3'=1+i3
   3: -4+i1 == 0 /\ i1'=5, i3'=1+i3
   4: -5+i1 == 0 /\ i1'=6, i3'=1+i3
   5: -6+i1 == 0 /\ i1'=7, i3'=1+i3
   6: -7+i1 == 0 /\ i1'=8, i3'=1+i3
   7: -8+i1 == 0 /\ i1'=9, i3'=1+i3, i6'=1
   8: (-9+i1 == 0 /\ i6-i8 <= 0) /\ i1'=10, i3'=1+i3, i5'=1
   9: (-9+i1 == 0 /\ i6-i8 > 0) /\ i1'=11, i3'=1+i3
  10: (-10+i1 == 0 /\ -i7+i5 <= 0) /\ i1'=12, i3'=1+i3
  11: (-10+i1 == 0 /\ -i7+i5 > 0) /\ i1'=13, i3'=1+i3
  12: -12+i1 == 0 /\ i1'=10, i3'=1+i3, i5'=1+i5
  13: -13+i1 == 0 /\ i1'=14, i3'=1+i3, i4'=1+i6
  14: -14+i1 == 0 /\ i1'=15, i3'=1+i3
  15: -15+i1 == 0 /\ i1'=9, i3'=1+i3, i6'=i4
  16: -11+i1 == 0 /\ i1'=16, i3'=1+i3

Dependency graph:
0 -> 1
1 -> 2
2 -> 3
3 -> 4
4 -> 5
5 -> 6
6 -> 7
7 -> 8, 7 -> 9
8 -> 10, 8 -> 11
9 -> 16
10 -> 12
11 -> 13
12 -> 10, 12 -> 11
13 -> 14
14 -> 15
15 -> 8, 15 -> 9

Chained Linear Paths

	Applied Chaining

	First rule:
	-1+i1 == 0 /\ i1'=2, i3'=1+i3
	Second rule:
	-2+i1 == 0 /\ i1'=3, i3'=1+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 0, 1
	
	Applied Chaining

	First rule:
	-3+i1 == 0 /\ i1'=4, i3'=1+i3
	Second rule:
	-4+i1 == 0 /\ i1'=5, i3'=1+i3
	New rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 2, 3
	
	Applied Chaining

	First rule:
	-5+i1 == 0 /\ i1'=6, i3'=1+i3
	Second rule:
	-6+i1 == 0 /\ i1'=7, i3'=1+i3
	New rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=7, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 4, 5
	
	Applied Chaining

	First rule:
	-7+i1 == 0 /\ i1'=8, i3'=1+i3
	Second rule:
	-8+i1 == 0 /\ i1'=9, i3'=1+i3, i6'=1
	New rule:
	(0 == 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3, i6'=1
	
	Applied Deletion

	Removed the following rules: 6, 7
	
	Applied Chaining

	First rule:
	(-9+i1 == 0 /\ i6-i8 > 0) /\ i1'=11, i3'=1+i3
	Second rule:
	-11+i1 == 0 /\ i1'=16, i3'=1+i3
	New rule:
	(0 == 0 /\ -9+i1 == 0 /\ i6-i8 > 0) /\ i1'=16, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 9, 16
	
	Applied Chaining

	First rule:
	(-10+i1 == 0 /\ -i7+i5 <= 0) /\ i1'=12, i3'=1+i3
	Second rule:
	-12+i1 == 0 /\ i1'=10, i3'=1+i3, i5'=1+i5
	New rule:
	(0 == 0 /\ -10+i1 == 0 /\ -i7+i5 <= 0) /\ i1'=10, i3'=2+i3, i5'=1+i5
	
	Applied Deletion

	Removed the following rules: 10, 12
	
	Applied Chaining

	First rule:
	(-10+i1 == 0 /\ -i7+i5 > 0) /\ i1'=13, i3'=1+i3
	Second rule:
	-13+i1 == 0 /\ i1'=14, i3'=1+i3, i4'=1+i6
	New rule:
	(0 == 0 /\ -10+i1 == 0 /\ -i7+i5 > 0) /\ i1'=14, i3'=2+i3, i4'=1+i6
	
	Applied Deletion

	Removed the following rules: 11, 13
	
	Applied Chaining

	First rule:
	-14+i1 == 0 /\ i1'=15, i3'=1+i3
	Second rule:
	-15+i1 == 0 /\ i1'=9, i3'=1+i3, i6'=i4
	New rule:
	(0 == 0 /\ -14+i1 == 0) /\ i1'=9, i3'=2+i3, i6'=i4
	
	Applied Deletion

	Removed the following rules: 14, 15
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	Second rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	
	Applied Deletion

	Removed the following rules: 17, 18
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=7, i3'=2+i3
	Second rule:
	(0 == 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3, i6'=1
	New rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=9, i3'=4+i3, i6'=1
	
	Applied Deletion

	Removed the following rules: 19, 20
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -10+i1 == 0 /\ -i7+i5 > 0) /\ i1'=14, i3'=2+i3, i4'=1+i6
	Second rule:
	(0 == 0 /\ -14+i1 == 0) /\ i1'=9, i3'=2+i3, i6'=i4
	New rule:
	(0 == 0 /\ -10+i1 == 0 /\ -i7+i5 > 0) /\ i1'=9, i3'=4+i3, i4'=1+i6, i6'=1+i6
	
	Applied Deletion

	Removed the following rules: 23, 24
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	Second rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=9, i3'=4+i3, i6'=1
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=9, i3'=8+i3, i6'=1
	
	Applied Deletion

	Removed the following rules: 25, 26

Start location: eval_abc_start

Location map:
LoAT_sink -> 0
eval_abc_start -> 1
eval_abc_bb0_in -> 2
eval_abc_0 -> 3
eval_abc_1 -> 4
eval_abc_2 -> 5
eval_abc_3 -> 6
eval_abc_4 -> 7
eval_abc_5 -> 8
eval_abc_bb1_in -> 9
eval_abc_bb2_in -> 10
eval_abc_bb5_in -> 11
eval_abc_bb3_in -> 12
eval_abc_bb4_in -> 13
eval_abc_9 -> 14
eval_abc_10 -> 15
eval_abc_stop -> 16

Rules:
   8: (-9+i1 == 0 /\ i6-i8 <= 0) /\ i1'=10, i3'=1+i3, i5'=1
  21: (0 == 0 /\ -9+i1 == 0 /\ i6-i8 > 0) /\ i1'=16, i3'=2+i3
  22: (0 == 0 /\ -10+i1 == 0 /\ -i7+i5 <= 0) /\ i1'=10, i3'=2+i3, i5'=1+i5
  27: (0 == 0 /\ -10+i1 == 0 /\ -i7+i5 > 0) /\ i1'=9, i3'=4+i3, i4'=1+i6, i6'=1+i6
  28: (0 == 0 /\ -1+i1 == 0) /\ i1'=9, i3'=8+i3, i6'=1

Dependency graph:
8 -> 22, 8 -> 27
22 -> 22, 22 -> 27
27 -> 8, 27 -> 21
28 -> 8, 28 -> 21

Preprocessed Transitions

	Simplified Guard

	Original rule:
	(0 == 0 /\ -9+i1 == 0 /\ i6-i8 > 0) /\ i1'=16, i3'=2+i3
	New rule:
	(-9+i1 == 0 /\ i6-i8 > 0) /\ i1'=16, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -10+i1 == 0 /\ -i7+i5 <= 0) /\ i1'=10, i3'=2+i3, i5'=1+i5
	New rule:
	(-10+i1 == 0 /\ -i7+i5 <= 0) /\ i1'=10, i3'=2+i3, i5'=1+i5
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -10+i1 == 0 /\ -i7+i5 > 0) /\ i1'=9, i3'=4+i3, i4'=1+i6, i6'=1+i6
	New rule:
	(-10+i1 == 0 /\ -i7+i5 > 0) /\ i1'=9, i3'=4+i3, i4'=1+i6, i6'=1+i6
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=9, i3'=8+i3, i6'=1
	New rule:
	-1+i1 == 0 /\ i1'=9, i3'=8+i3, i6'=1

Start location: eval_abc_start

Location map:
LoAT_sink -> 0
eval_abc_start -> 1
eval_abc_bb0_in -> 2
eval_abc_0 -> 3
eval_abc_1 -> 4
eval_abc_2 -> 5
eval_abc_3 -> 6
eval_abc_4 -> 7
eval_abc_5 -> 8
eval_abc_bb1_in -> 9
eval_abc_bb2_in -> 10
eval_abc_bb5_in -> 11
eval_abc_bb3_in -> 12
eval_abc_bb4_in -> 13
eval_abc_9 -> 14
eval_abc_10 -> 15
eval_abc_stop -> 16

Rules:
   8: (-9+i1 == 0 /\ i6-i8 <= 0) /\ i1'=10, i3'=1+i3, i5'=1
  29: (-9+i1 == 0 /\ i6-i8 > 0) /\ i1'=16, i3'=2+i3
  30: (-10+i1 == 0 /\ -i7+i5 <= 0) /\ i1'=10, i3'=2+i3, i5'=1+i5
  31: (-10+i1 == 0 /\ -i7+i5 > 0) /\ i1'=9, i3'=4+i3, i4'=1+i6, i6'=1+i6
  32: -1+i1 == 0 /\ i1'=9, i3'=8+i3, i6'=1

Dependency graph:
8 -> 30, 8 -> 31
30 -> 30, 30 -> 31
31 -> 8, 31 -> 29
32 -> 8, 32 -> 29

Step with 32

	Trace

	32[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 29

	Trace

	32[(-1+i1 == 0)]
	29[(-9+i1 == 0 /\ i6-i8 > 0)]
	
	Blocked

	{}
	{}
	{}
	
Backtrack

	Trace

	32[(-1+i1 == 0)]
	
	Blocked

	{}
	{29[T]}
	
Step with 8

	Trace

	32[(-1+i1 == 0)]
	8[(-9+i1 == 0 /\ i6-i8 <= 0)]
	
	Blocked

	{}
	{29[T]}
	{}
	
Step with 30

	Trace

	32[(-1+i1 == 0)]
	8[(-9+i1 == 0 /\ i6-i8 <= 0)]
	30[(-10+i1 == 0 /\ -i7+i5 <= 0)]
	
	Blocked

	{}
	{29[T]}
	{}
	{}
	
Poly(n^1)

Accelerate

	Loop Acceleration

	Original rule:
	(-10+i1 == 0 /\ -i7+i5 <= 0) /\ i1'=10, i3'=2+i3, i5'=1+i5
	New rule:
	(10-i1 >= 0 /\ -1+it29 >= 0 /\ -10+i1 >= 0 /\ 1+i7-it29-i5 >= 0) /\ i1'=i1, i3'=i3+2*it29, i5'=it29+i5

		10-i1 >= 0 [0]: unchanged
		
		-10+i1 >= 0 [0]: unchanged
		
		i7-i5 >= 0 [0]: montonic decrease yields 1+i7-it29-i5 >= 0
		
		Replacement map: {10-i1 >= 0 -> 10-i1 >= 0, -10+i1 >= 0 -> -10+i1 >= 0, i7-i5 >= 0 -> 1+i7-it29-i5 >= 0}

	Removed Trivial Updates

	Original rule:
	(10-i1 >= 0 /\ -1+it29 >= 0 /\ -10+i1 >= 0 /\ 1+i7-it29-i5 >= 0) /\ i1'=i1, i3'=i3+2*it29, i5'=it29+i5
	New rule:
	(10-i1 >= 0 /\ -1+it29 >= 0 /\ -10+i1 >= 0 /\ 1+i7-it29-i5 >= 0) /\ i3'=i3+2*it29, i5'=it29+i5
	
	Instantiation

	Original rule:
	(10-i1 >= 0 /\ -1+it29 >= 0 /\ -10+i1 >= 0 /\ 1+i7-it29-i5 >= 0) /\ i3'=i3+2*it29, i5'=it29+i5
	New rule:
	(0 >= 0 /\ 10-i1 >= 0 /\ -10+i1 >= 0 /\ i7-i5 >= 0) /\ i3'=2+i3+2*i7-2*i5, i5'=1+i7

Start location: eval_abc_start

Location map:
LoAT_sink -> 0
eval_abc_start -> 1
eval_abc_bb0_in -> 2
eval_abc_0 -> 3
eval_abc_1 -> 4
eval_abc_2 -> 5
eval_abc_3 -> 6
eval_abc_4 -> 7
eval_abc_5 -> 8
eval_abc_bb1_in -> 9
eval_abc_bb2_in -> 10
eval_abc_bb5_in -> 11
eval_abc_bb3_in -> 12
eval_abc_bb4_in -> 13
eval_abc_9 -> 14
eval_abc_10 -> 15
eval_abc_stop -> 16

Rules:
   8: (-9+i1 == 0 /\ i6-i8 <= 0) /\ i1'=10, i3'=1+i3, i5'=1
  29: (-9+i1 == 0 /\ i6-i8 > 0) /\ i1'=16, i3'=2+i3
  30: (-10+i1 == 0 /\ -i7+i5 <= 0) /\ i1'=10, i3'=2+i3, i5'=1+i5
  31: (-10+i1 == 0 /\ -i7+i5 > 0) /\ i1'=9, i3'=4+i3, i4'=1+i6, i6'=1+i6
  32: -1+i1 == 0 /\ i1'=9, i3'=8+i3, i6'=1
  33: (0 >= 0 /\ 10-i1 >= 0 /\ -10+i1 >= 0 /\ i7-i5 >= 0) /\ i3'=2+i3+2*i7-2*i5, i5'=1+i7

Dependency graph:
8 -> 30, 8 -> 31, 8 -> 33
30 -> 30, 30 -> 31, 30 -> 33
31 -> 8, 31 -> 29
32 -> 8, 32 -> 29
33 -> 30, 33 -> 31

	Trace

	32[(-1+i1 == 0)]
	8[(-9+i1 == 0 /\ i6-i8 <= 0)]
	33[(0 >= 0 /\ 10-i1 >= 0 /\ -10+i1 >= 0 /\ i7-i5 >= 0)]
	
	Blocked

	{}
	{29[T]}
	{}
	{30[T], 33[T]}
	
Step with 31

	Trace

	32[(-1+i1 == 0)]
	8[(-9+i1 == 0 /\ i6-i8 <= 0)]
	33[(0 >= 0 /\ 10-i1 >= 0 /\ -10+i1 >= 0 /\ i7-i5 >= 0)]
	31[(-10+i1 == 0 /\ -i7+i5 > 0)]
	
	Blocked

	{}
	{29[T]}
	{}
	{30[T], 33[T]}
	{}
	
Poly(n^2)

Accelerate

		Extracted Implied Equalities

		Original rule:
		(0 >= 0 /\ 0 == 0 /\ 1 > 0 /\ -9+i1 == 0 /\ -1+i7 >= 0 /\ i6-i8 <= 0) /\ i1'=9, i3'=5+i3+2*i7, i4'=1+i6, i5'=1+i7, i6'=1+i6
		New rule:
		(0 >= 0 /\ 0 == 0 /\ 1 > 0 /\ -9+i1 == 0 /\ -1+i7 >= 0 /\ i6-i8 <= 0) /\ i1'=9, i3'=5+i3+2*i7, i4'=1+i6, i5'=1+i7, i6'=1+i6
		
		Simplified Guard

		Original rule:
		(0 >= 0 /\ 0 == 0 /\ 1 > 0 /\ -9+i1 == 0 /\ -1+i7 >= 0 /\ i6-i8 <= 0) /\ i1'=9, i3'=5+i3+2*i7, i4'=1+i6, i5'=1+i7, i6'=1+i6
		New rule:
		(-9+i1 == 0 /\ -1+i7 >= 0 /\ i6-i8 <= 0) /\ i1'=9, i3'=5+i3+2*i7, i4'=1+i6, i5'=1+i7, i6'=1+i6

	Loop Acceleration

	Original rule:
	(-9+i1 == 0 /\ -1+i7 >= 0 /\ i6-i8 <= 0) /\ i1'=9, i3'=5+i3+2*i7, i4'=1+i6, i5'=1+i7, i6'=1+i6
	New rule:
	(-9+i1 >= 0 /\ -1+i7 >= 0 /\ -i6+i8 >= 0 /\ 9-i1 >= 0 /\ -1+it52 >= 0 /\ 1-i6-it52+i8 >= 0) /\ i1'=i1, i3'=i3+5*it52+2*it52*i7, i4'=i6+it52, i5'=1+i7, i6'=i6+it52

		-9+i1 >= 0 [0]: unchanged
		
		-1+i7 >= 0 [0]: unchanged
		
		-i6+i8 >= 0 [0]: montonic decrease yields (-i6+i8 >= 0 /\ 1-i6-it52+i8 >= 0)
		
		9-i1 >= 0 [0]: unchanged
		
		Replacement map: {-9+i1 >= 0 -> -9+i1 >= 0, -1+i7 >= 0 -> -1+i7 >= 0, -i6+i8 >= 0 -> (-i6+i8 >= 0 /\ 1-i6-it52+i8 >= 0), 9-i1 >= 0 -> 9-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-9+i1 >= 0 /\ -1+i7 >= 0 /\ -i6+i8 >= 0 /\ 9-i1 >= 0 /\ -1+it52 >= 0 /\ 1-i6-it52+i8 >= 0) /\ i1'=i1, i3'=i3+5*it52+2*it52*i7, i4'=i6+it52, i5'=1+i7, i6'=i6+it52
	New rule:
	(-9+i1 >= 0 /\ -1+i7 >= 0 /\ -i6+i8 >= 0 /\ 9-i1 >= 0 /\ -1+it52 >= 0 /\ 1-i6-it52+i8 >= 0) /\ i3'=i3+5*it52+2*it52*i7, i4'=i6+it52, i5'=1+i7, i6'=i6+it52
	
	Instantiation

	Original rule:
	(-9+i1 >= 0 /\ -1+i7 >= 0 /\ -i6+i8 >= 0 /\ 9-i1 >= 0 /\ -1+it52 >= 0 /\ 1-i6-it52+i8 >= 0) /\ i3'=i3+5*it52+2*it52*i7, i4'=i6+it52, i5'=1+i7, i6'=i6+it52
	New rule:
	(0 >= 0 /\ -9+i1 >= 0 /\ -1+i7 >= 0 /\ -i6+i8 >= 0 /\ 9-i1 >= 0) /\ i3'=5-2*(-1+i6-i8)*i7-5*i6+i3+5*i8, i4'=1+i8, i5'=1+i7, i6'=1+i8

Start location: eval_abc_start

Location map:
LoAT_sink -> 0
eval_abc_start -> 1
eval_abc_bb0_in -> 2
eval_abc_0 -> 3
eval_abc_1 -> 4
eval_abc_2 -> 5
eval_abc_3 -> 6
eval_abc_4 -> 7
eval_abc_5 -> 8
eval_abc_bb1_in -> 9
eval_abc_bb2_in -> 10
eval_abc_bb5_in -> 11
eval_abc_bb3_in -> 12
eval_abc_bb4_in -> 13
eval_abc_9 -> 14
eval_abc_10 -> 15
eval_abc_stop -> 16

Rules:
   8: (-9+i1 == 0 /\ i6-i8 <= 0) /\ i1'=10, i3'=1+i3, i5'=1
  29: (-9+i1 == 0 /\ i6-i8 > 0) /\ i1'=16, i3'=2+i3
  30: (-10+i1 == 0 /\ -i7+i5 <= 0) /\ i1'=10, i3'=2+i3, i5'=1+i5
  31: (-10+i1 == 0 /\ -i7+i5 > 0) /\ i1'=9, i3'=4+i3, i4'=1+i6, i6'=1+i6
  32: -1+i1 == 0 /\ i1'=9, i3'=8+i3, i6'=1
  33: (0 >= 0 /\ 10-i1 >= 0 /\ -10+i1 >= 0 /\ i7-i5 >= 0) /\ i3'=2+i3+2*i7-2*i5, i5'=1+i7
  34: (0 >= 0 /\ -9+i1 >= 0 /\ -1+i7 >= 0 /\ -i6+i8 >= 0 /\ 9-i1 >= 0) /\ i3'=5-2*(-1+i6-i8)*i7-5*i6+i3+5*i8, i4'=1+i8, i5'=1+i7, i6'=1+i8

Dependency graph:
8 -> 30, 8 -> 31, 8 -> 33
30 -> 30, 30 -> 31, 30 -> 33
31 -> 8, 31 -> 29, 31 -> 34
32 -> 8, 32 -> 29, 32 -> 34
33 -> 30, 33 -> 31
34 -> 8, 34 -> 29

	Trace

	32[(-1+i1 == 0)]
	34[(0 >= 0 /\ -9+i1 >= 0 /\ -1+i7 >= 0 /\ -i6+i8 >= 0 /\ 9-i1 >= 0)]
	
	Blocked

	{}
	{29[T]}
	{34[T]}
	
Step with 29

	Trace

	32[(-1+i1 == 0)]
	34[(0 >= 0 /\ -9+i1 >= 0 /\ -1+i7 >= 0 /\ -i6+i8 >= 0 /\ 9-i1 >= 0)]
	29[(-9+i1 == 0 /\ i6-i8 > 0)]
	
	Blocked

	{}
	{29[T]}
	{8[T], 34[T]}
	{}
	
Backtrack

	Trace

	32[(-1+i1 == 0)]
	34[(0 >= 0 /\ -9+i1 >= 0 /\ -1+i7 >= 0 /\ -i6+i8 >= 0 /\ 9-i1 >= 0)]
	
	Blocked

	{}
	{29[T]}
	{8[T], 29[T], 34[T]}
	
Backtrack

	Trace

	32[(-1+i1 == 0)]
	
	Blocked

	{}
	{29[T], 34[T]}
	
Step with 8

	Trace

	32[(-1+i1 == 0)]
	8[(-9+i1 == 0 /\ i6-i8 <= 0)]
	
	Blocked

	{}
	{29[T], 34[T]}
	{}
	
Step with 30

	Trace

	32[(-1+i1 == 0)]
	8[(-9+i1 == 0 /\ i6-i8 <= 0)]
	30[(-10+i1 == 0 /\ -i7+i5 <= 0)]
	
	Blocked

	{}
	{29[T], 34[T]}
	{}
	{}
	
Covered

	Trace

	32[(-1+i1 == 0)]
	8[(-9+i1 == 0 /\ i6-i8 <= 0)]
	
	Blocked

	{}
	{29[T], 34[T]}
	{30[T]}
	
Step with 33

	Trace

	32[(-1+i1 == 0)]
	8[(-9+i1 == 0 /\ i6-i8 <= 0)]
	33[(0 >= 0 /\ 10-i1 >= 0 /\ -10+i1 >= 0 /\ i7-i5 >= 0)]
	
	Blocked

	{}
	{29[T], 34[T]}
	{30[T]}
	{33[T]}
	
Step with 31

	Trace

	32[(-1+i1 == 0)]
	8[(-9+i1 == 0 /\ i6-i8 <= 0)]
	33[(0 >= 0 /\ 10-i1 >= 0 /\ -10+i1 >= 0 /\ i7-i5 >= 0)]
	31[(-10+i1 == 0 /\ -i7+i5 > 0)]
	
	Blocked

	{}
	{29[T], 34[T]}
	{30[T]}
	{30[T], 33[T]}
	{}
	
Covered

	Trace

	32[(-1+i1 == 0)]
	8[(-9+i1 == 0 /\ i6-i8 <= 0)]
	33[(0 >= 0 /\ 10-i1 >= 0 /\ -10+i1 >= 0 /\ i7-i5 >= 0)]
	
	Blocked

	{}
	{29[T], 34[T]}
	{30[T]}
	{30[T], 31[T], 33[T]}
	
Backtrack

	Trace

	32[(-1+i1 == 0)]
	8[(-9+i1 == 0 /\ i6-i8 <= 0)]
	
	Blocked

	{}
	{29[T], 34[T]}
	{30[T], 33[T]}
	
Step with 31

	Trace

	32[(-1+i1 == 0)]
	8[(-9+i1 == 0 /\ i6-i8 <= 0)]
	31[(-10+i1 == 0 /\ -i7+i5 > 0)]
	
	Blocked

	{}
	{29[T], 34[T]}
	{30[T], 33[T]}
	{}
	
Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -9+i1 == 0 /\ 1-i7 > 0 /\ i6-i8 <= 0) /\ i1'=9, i3'=5+i3, i4'=1+i6, i5'=1, i6'=1+i6
		New rule:
		(-9+i1 == 0 /\ 1-i7 > 0 /\ i6-i8 <= 0) /\ i1'=9, i3'=5+i3, i4'=1+i6, i5'=1, i6'=1+i6

	Loop Acceleration

	Original rule:
	(-9+i1 == 0 /\ 1-i7 > 0 /\ i6-i8 <= 0) /\ i1'=9, i3'=5+i3, i4'=1+i6, i5'=1, i6'=1+i6
	New rule:
	(-1+it110 >= 0 /\ -9+i1 >= 0 /\ 1-i7 > 0 /\ -i6+i8 >= 0 /\ 9-i1 >= 0 /\ 1-i6-it110+i8 >= 0) /\ i1'=i1, i3'=i3+5*it110, i4'=i6+it110, i5'=1, i6'=i6+it110

		-9+i1 >= 0 [0]: unchanged
		
		1-i7 > 0 [0]: unchanged
		
		-i6+i8 >= 0 [0]: montonic decrease yields (-i6+i8 >= 0 /\ 1-i6-it110+i8 >= 0)
		
		9-i1 >= 0 [0]: unchanged
		
		Replacement map: {-9+i1 >= 0 -> -9+i1 >= 0, 1-i7 > 0 -> 1-i7 > 0, -i6+i8 >= 0 -> (-i6+i8 >= 0 /\ 1-i6-it110+i8 >= 0), 9-i1 >= 0 -> 9-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-1+it110 >= 0 /\ -9+i1 >= 0 /\ 1-i7 > 0 /\ -i6+i8 >= 0 /\ 9-i1 >= 0 /\ 1-i6-it110+i8 >= 0) /\ i1'=i1, i3'=i3+5*it110, i4'=i6+it110, i5'=1, i6'=i6+it110
	New rule:
	(-1+it110 >= 0 /\ -9+i1 >= 0 /\ 1-i7 > 0 /\ -i6+i8 >= 0 /\ 9-i1 >= 0 /\ 1-i6-it110+i8 >= 0) /\ i3'=i3+5*it110, i4'=i6+it110, i5'=1, i6'=i6+it110
	
	Instantiation

	Original rule:
	(-1+it110 >= 0 /\ -9+i1 >= 0 /\ 1-i7 > 0 /\ -i6+i8 >= 0 /\ 9-i1 >= 0 /\ 1-i6-it110+i8 >= 0) /\ i3'=i3+5*it110, i4'=i6+it110, i5'=1, i6'=i6+it110
	New rule:
	(0 >= 0 /\ -9+i1 >= 0 /\ 1-i7 > 0 /\ -i6+i8 >= 0 /\ 9-i1 >= 0) /\ i3'=5-5*i6+i3+5*i8, i4'=1+i8, i5'=1, i6'=1+i8

Start location: eval_abc_start

Location map:
LoAT_sink -> 0
eval_abc_start -> 1
eval_abc_bb0_in -> 2
eval_abc_0 -> 3
eval_abc_1 -> 4
eval_abc_2 -> 5
eval_abc_3 -> 6
eval_abc_4 -> 7
eval_abc_5 -> 8
eval_abc_bb1_in -> 9
eval_abc_bb2_in -> 10
eval_abc_bb5_in -> 11
eval_abc_bb3_in -> 12
eval_abc_bb4_in -> 13
eval_abc_9 -> 14
eval_abc_10 -> 15
eval_abc_stop -> 16

Rules:
   8: (-9+i1 == 0 /\ i6-i8 <= 0) /\ i1'=10, i3'=1+i3, i5'=1
  29: (-9+i1 == 0 /\ i6-i8 > 0) /\ i1'=16, i3'=2+i3
  30: (-10+i1 == 0 /\ -i7+i5 <= 0) /\ i1'=10, i3'=2+i3, i5'=1+i5
  31: (-10+i1 == 0 /\ -i7+i5 > 0) /\ i1'=9, i3'=4+i3, i4'=1+i6, i6'=1+i6
  32: -1+i1 == 0 /\ i1'=9, i3'=8+i3, i6'=1
  33: (0 >= 0 /\ 10-i1 >= 0 /\ -10+i1 >= 0 /\ i7-i5 >= 0) /\ i3'=2+i3+2*i7-2*i5, i5'=1+i7
  34: (0 >= 0 /\ -9+i1 >= 0 /\ -1+i7 >= 0 /\ -i6+i8 >= 0 /\ 9-i1 >= 0) /\ i3'=5-2*(-1+i6-i8)*i7-5*i6+i3+5*i8, i4'=1+i8, i5'=1+i7, i6'=1+i8
  35: (0 >= 0 /\ -9+i1 >= 0 /\ 1-i7 > 0 /\ -i6+i8 >= 0 /\ 9-i1 >= 0) /\ i3'=5-5*i6+i3+5*i8, i4'=1+i8, i5'=1, i6'=1+i8

Dependency graph:
8 -> 30, 8 -> 31, 8 -> 33
30 -> 30, 30 -> 31, 30 -> 33
31 -> 8, 31 -> 29, 31 -> 34, 31 -> 35
32 -> 8, 32 -> 29, 32 -> 34, 32 -> 35
33 -> 30, 33 -> 31
34 -> 8, 34 -> 29, 34 -> 35
35 -> 8, 35 -> 29, 35 -> 34

	Trace

	32[(-1+i1 == 0)]
	35[(0 >= 0 /\ -9+i1 >= 0 /\ 1-i7 > 0 /\ -i6+i8 >= 0 /\ 9-i1 >= 0)]
	
	Blocked

	{}
	{29[T], 34[T]}
	{35[T]}
	
Step with 29

	Trace

	32[(-1+i1 == 0)]
	35[(0 >= 0 /\ -9+i1 >= 0 /\ 1-i7 > 0 /\ -i6+i8 >= 0 /\ 9-i1 >= 0)]
	29[(-9+i1 == 0 /\ i6-i8 > 0)]
	
	Blocked

	{}
	{29[T], 34[T]}
	{8[T], 34[T], 35[T]}
	{}
	
Backtrack

	Trace

	32[(-1+i1 == 0)]
	35[(0 >= 0 /\ -9+i1 >= 0 /\ 1-i7 > 0 /\ -i6+i8 >= 0 /\ 9-i1 >= 0)]
	
	Blocked

	{}
	{29[T], 34[T]}
	{8[T], 29[T], 34[T], 35[T]}
	
Backtrack

	Trace

	32[(-1+i1 == 0)]
	
	Blocked

	{}
	{29[T], 34[T], 35[T]}
	
Step with 8

	Trace

	32[(-1+i1 == 0)]
	8[(-9+i1 == 0 /\ i6-i8 <= 0)]
	
	Blocked

	{}
	{29[T], 34[T], 35[T]}
	{}
	
Step with 30

	Trace

	32[(-1+i1 == 0)]
	8[(-9+i1 == 0 /\ i6-i8 <= 0)]
	30[(-10+i1 == 0 /\ -i7+i5 <= 0)]
	
	Blocked

	{}
	{29[T], 34[T], 35[T]}
	{}
	{}
	
Covered

	Trace

	32[(-1+i1 == 0)]
	8[(-9+i1 == 0 /\ i6-i8 <= 0)]
	
	Blocked

	{}
	{29[T], 34[T], 35[T]}
	{30[T]}
	
Step with 33

	Trace

	32[(-1+i1 == 0)]
	8[(-9+i1 == 0 /\ i6-i8 <= 0)]
	33[(0 >= 0 /\ 10-i1 >= 0 /\ -10+i1 >= 0 /\ i7-i5 >= 0)]
	
	Blocked

	{}
	{29[T], 34[T], 35[T]}
	{30[T]}
	{33[T]}
	
Step with 31

	Trace

	32[(-1+i1 == 0)]
	8[(-9+i1 == 0 /\ i6-i8 <= 0)]
	33[(0 >= 0 /\ 10-i1 >= 0 /\ -10+i1 >= 0 /\ i7-i5 >= 0)]
	31[(-10+i1 == 0 /\ -i7+i5 > 0)]
	
	Blocked

	{}
	{29[T], 34[T], 35[T]}
	{30[T]}
	{33[T]}
	{}
	
Covered

	Trace

	32[(-1+i1 == 0)]
	8[(-9+i1 == 0 /\ i6-i8 <= 0)]
	33[(0 >= 0 /\ 10-i1 >= 0 /\ -10+i1 >= 0 /\ i7-i5 >= 0)]
	
	Blocked

	{}
	{29[T], 34[T], 35[T]}
	{30[T]}
	{31[T], 33[T]}
	
Backtrack

	Trace

	32[(-1+i1 == 0)]
	8[(-9+i1 == 0 /\ i6-i8 <= 0)]
	
	Blocked

	{}
	{29[T], 34[T], 35[T]}
	{30[T], 33[T]}
	
Step with 31

	Trace

	32[(-1+i1 == 0)]
	8[(-9+i1 == 0 /\ i6-i8 <= 0)]
	31[(-10+i1 == 0 /\ -i7+i5 > 0)]
	
	Blocked

	{}
	{29[T], 34[T], 35[T]}
	{30[T], 33[T]}
	{}
	
Covered

	Trace

	32[(-1+i1 == 0)]
	8[(-9+i1 == 0 /\ i6-i8 <= 0)]
	
	Blocked

	{}
	{29[T], 34[T], 35[T]}
	{30[T], 31[T], 33[T]}
	
Backtrack

	Trace

	32[(-1+i1 == 0)]
	
	Blocked

	{}
	{8[T], 29[T], 34[T], 35[T]}
	
Backtrack

	Trace

	Blocked

	{32[T]}
	
Accept

Poly(n^2)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^2))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄
  Temp_Vars:  
  Locations:  l0, l1, l10, l11, l12, l13, l14, l15, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃, X₄) → l2(X₀, X₁, X₂, X₃, X₄)
  t₃: l1(X₀, X₁, X₂, X₃, X₄) → l4(X₀, X₁, X₂, X₃, X₄)
  t₇: l10(X₀, X₁, X₂, X₃, X₄) → l5(X₀, X₁, 1, X₃, X₄)
  t₁₃: l11(X₀, X₁, X₂, X₃, X₄) → l6(1+X₂, X₁, X₂, X₃, X₄)
  t₁₁: l12(X₀, X₁, X₂, X₃, X₄) → l11(X₀, X₁, X₂, X₃, X₄) :|: 1+X₃ ≤ X₁
  t₁₀: l12(X₀, X₁, X₂, X₃, X₄) → l14(X₀, X₁, X₂, X₃, X₄) :|: X₁ ≤ X₃
  t₁₆: l13(X₀, X₁, X₂, X₃, X₄) → l15(X₀, X₁, X₂, X₃, X₄)
  t₁₂: l14(X₀, X₁, X₂, X₃, X₄) → l12(X₀, 1+X₁, X₂, X₃, X₄)
  t₁: l2(X₀, X₁, X₂, X₃, X₄) → l3(X₀, X₁, X₂, X₃, X₄)
  t₂: l3(X₀, X₁, X₂, X₃, X₄) → l1(X₀, X₁, X₂, X₃, X₄)
  t₄: l4(X₀, X₁, X₂, X₃, X₄) → l8(X₀, X₁, X₂, X₃, X₄)
  t₈: l5(X₀, X₁, X₂, X₃, X₄) → l12(X₀, 1, X₂, X₃, X₄) :|: X₂ ≤ X₄
  t₉: l5(X₀, X₁, X₂, X₃, X₄) → l13(X₀, X₁, X₂, X₃, X₄) :|: 1+X₄ ≤ X₂
  t₁₄: l6(X₀, X₁, X₂, X₃, X₄) → l7(X₀, X₁, X₂, X₃, X₄)
  t₁₅: l7(X₀, X₁, X₂, X₃, X₄) → l5(X₀, X₁, X₀, X₃, X₄)
  t₅: l8(X₀, X₁, X₂, X₃, X₄) → l9(X₀, X₁, X₂, X₃, X₄)
  t₆: l9(X₀, X₁, X₂, X₃, X₄) → l10(X₀, X₁, X₂, X₃, X₄)


Preprocessing
  Found invariant 1 ≤ X₄ ∧ 2 ≤ X₂+X₄ ∧ X₂ ≤ X₄ ∧ 2 ≤ X₁+X₄ ∧ 1+X₃ ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 1 ≤ X₁ for location l11


  Found invariant 1 ≤ X₄ ∧ 2 ≤ X₂+X₄ ∧ X₂ ≤ X₄ ∧ 2 ≤ X₁+X₄ ∧ 3 ≤ X₀+X₄ ∧ X₀ ≤ 1+X₄ ∧ 1+X₃ ≤ X₁ ∧ 1+X₂ ≤ X₀ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 3 ≤ X₀+X₂ ∧ X₀ ≤ 1+X₂ ∧ 1 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 2 ≤ X₀ for location l6


  Found invariant 1+X₄ ≤ X₂ ∧ 1 ≤ X₂ for location l15


  Found invariant 1 ≤ X₄ ∧ 2 ≤ X₂+X₄ ∧ X₂ ≤ X₄ ∧ 2 ≤ X₁+X₄ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 1 ≤ X₁ for location l12


  Found invariant 1 ≤ X₄ ∧ 2 ≤ X₂+X₄ ∧ X₂ ≤ X₄ ∧ 2 ≤ X₁+X₄ ∧ 3 ≤ X₀+X₄ ∧ X₀ ≤ 1+X₄ ∧ 1+X₃ ≤ X₁ ∧ 1+X₂ ≤ X₀ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 3 ≤ X₀+X₂ ∧ X₀ ≤ 1+X₂ ∧ 1 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 2 ≤ X₀ for location l7


  Found invariant 1 ≤ X₂ for location l5


  Found invariant 1+X₄ ≤ X₂ ∧ 1 ≤ X₂ for location l13


  Found invariant 1 ≤ X₄ ∧ 2 ≤ X₃+X₄ ∧ 2 ≤ X₂+X₄ ∧ X₂ ≤ X₄ ∧ 2 ≤ X₁+X₄ ∧ 1 ≤ X₃ ∧ 2 ≤ X₂+X₃ ∧ 2 ≤ X₁+X₃ ∧ X₁ ≤ X₃ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 1 ≤ X₁ for location l14


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄
  Temp_Vars:  
  Locations:  l0, l1, l10, l11, l12, l13, l14, l15, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃, X₄) → l2(X₀, X₁, X₂, X₃, X₄)
  t₃: l1(X₀, X₁, X₂, X₃, X₄) → l4(X₀, X₁, X₂, X₃, X₄)
  t₇: l10(X₀, X₁, X₂, X₃, X₄) → l5(X₀, X₁, 1, X₃, X₄)
  t₁₃: l11(X₀, X₁, X₂, X₃, X₄) → l6(1+X₂, X₁, X₂, X₃, X₄) :|: 1 ≤ X₁ ∧ 1+X₃ ≤ X₁ ∧ 1 ≤ X₂ ∧ 1 ≤ X₄ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₁+X₄ ∧ 2 ≤ X₂+X₄ ∧ X₂ ≤ X₄
  t₁₁: l12(X₀, X₁, X₂, X₃, X₄) → l11(X₀, X₁, X₂, X₃, X₄) :|: 1+X₃ ≤ X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 1 ≤ X₄ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₁+X₄ ∧ 2 ≤ X₂+X₄ ∧ X₂ ≤ X₄
  t₁₀: l12(X₀, X₁, X₂, X₃, X₄) → l14(X₀, X₁, X₂, X₃, X₄) :|: X₁ ≤ X₃ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 1 ≤ X₄ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₁+X₄ ∧ 2 ≤ X₂+X₄ ∧ X₂ ≤ X₄
  t₁₆: l13(X₀, X₁, X₂, X₃, X₄) → l15(X₀, X₁, X₂, X₃, X₄) :|: 1 ≤ X₂ ∧ 1+X₄ ≤ X₂
  t₁₂: l14(X₀, X₁, X₂, X₃, X₄) → l12(X₀, 1+X₁, X₂, X₃, X₄) :|: 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 1 ≤ X₃ ∧ 1 ≤ X₄ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₁+X₃ ∧ 2 ≤ X₁+X₄ ∧ 2 ≤ X₂+X₃ ∧ 2 ≤ X₂+X₄ ∧ 2 ≤ X₃+X₄ ∧ X₁ ≤ X₃ ∧ X₂ ≤ X₄
  t₁: l2(X₀, X₁, X₂, X₃, X₄) → l3(X₀, X₁, X₂, X₃, X₄)
  t₂: l3(X₀, X₁, X₂, X₃, X₄) → l1(X₀, X₁, X₂, X₃, X₄)
  t₄: l4(X₀, X₁, X₂, X₃, X₄) → l8(X₀, X₁, X₂, X₃, X₄)
  t₈: l5(X₀, X₁, X₂, X₃, X₄) → l12(X₀, 1, X₂, X₃, X₄) :|: X₂ ≤ X₄ ∧ 1 ≤ X₂
  t₉: l5(X₀, X₁, X₂, X₃, X₄) → l13(X₀, X₁, X₂, X₃, X₄) :|: 1+X₄ ≤ X₂ ∧ 1 ≤ X₂
  t₁₄: l6(X₀, X₁, X₂, X₃, X₄) → l7(X₀, X₁, X₂, X₃, X₄) :|: X₀ ≤ 1+X₂ ∧ X₀ ≤ 1+X₄ ∧ 1+X₂ ≤ X₀ ∧ 1 ≤ X₁ ∧ 1+X₃ ≤ X₁ ∧ 1 ≤ X₂ ∧ 1 ≤ X₄ ∧ 2 ≤ X₀ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₁+X₄ ∧ 2 ≤ X₂+X₄ ∧ 3 ≤ X₀+X₁ ∧ 3 ≤ X₀+X₂ ∧ 3 ≤ X₀+X₄ ∧ X₂ ≤ X₄
  t₁₅: l7(X₀, X₁, X₂, X₃, X₄) → l5(X₀, X₁, X₀, X₃, X₄) :|: X₀ ≤ 1+X₂ ∧ X₀ ≤ 1+X₄ ∧ 1+X₂ ≤ X₀ ∧ 1 ≤ X₁ ∧ 1+X₃ ≤ X₁ ∧ 1 ≤ X₂ ∧ 1 ≤ X₄ ∧ 2 ≤ X₀ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₁+X₄ ∧ 2 ≤ X₂+X₄ ∧ 3 ≤ X₀+X₁ ∧ 3 ≤ X₀+X₂ ∧ 3 ≤ X₀+X₄ ∧ X₂ ≤ X₄
  t₅: l8(X₀, X₁, X₂, X₃, X₄) → l9(X₀, X₁, X₂, X₃, X₄)
  t₆: l9(X₀, X₁, X₂, X₃, X₄) → l10(X₀, X₁, X₂, X₃, X₄)


MPRF for transition t₈: l5(X₀, X₁, X₂, X₃, X₄) → l12(X₀, 1, X₂, X₃, X₄) :|: X₂ ≤ X₄ ∧ 1 ≤ X₂ of depth 1:
  new bound:
    X₄+2 {O(n)}

  MPRF:
    • l11: [X₄-X₂]
    • l12: [X₄-X₂]
    • l14: [X₄-X₂]
    • l5: [1+X₄-X₂]
    • l6: [1+X₄-X₀]
    • l7: [1+X₄-X₀]




MPRF for transition t₁₁: l12(X₀, X₁, X₂, X₃, X₄) → l11(X₀, X₁, X₂, X₃, X₄) :|: 1+X₃ ≤ X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 1 ≤ X₄ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₁+X₄ ∧ 2 ≤ X₂+X₄ ∧ X₂ ≤ X₄ of depth 1:
  new bound:
    X₄+2 {O(n)}

  MPRF:
    • l11: [X₄-X₂]
    • l12: [1+X₄-X₂]
    • l14: [1+X₄-X₂]
    • l5: [1+X₄-X₂]
    • l6: [X₄-X₂]
    • l7: [1+X₄-X₀]




MPRF for transition t₁₃: l11(X₀, X₁, X₂, X₃, X₄) → l6(1+X₂, X₁, X₂, X₃, X₄) :|: 1 ≤ X₁ ∧ 1+X₃ ≤ X₁ ∧ 1 ≤ X₂ ∧ 1 ≤ X₄ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₁+X₄ ∧ 2 ≤ X₂+X₄ ∧ X₂ ≤ X₄ of depth 1:
  new bound:
    X₄+2 {O(n)}

  MPRF:
    • l11: [1+X₄-X₂]
    • l12: [1+X₄-X₂]
    • l14: [1+X₄-X₂]
    • l5: [1+X₄-X₂]
    • l6: [1+X₄-X₀]
    • l7: [1+X₄-X₀]




MPRF for transition t₁₄: l6(X₀, X₁, X₂, X₃, X₄) → l7(X₀, X₁, X₂, X₃, X₄) :|: X₀ ≤ 1+X₂ ∧ X₀ ≤ 1+X₄ ∧ 1+X₂ ≤ X₀ ∧ 1 ≤ X₁ ∧ 1+X₃ ≤ X₁ ∧ 1 ≤ X₂ ∧ 1 ≤ X₄ ∧ 2 ≤ X₀ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₁+X₄ ∧ 2 ≤ X₂+X₄ ∧ 3 ≤ X₀+X₁ ∧ 3 ≤ X₀+X₂ ∧ 3 ≤ X₀+X₄ ∧ X₂ ≤ X₄ of depth 1:
  new bound:
    X₄+2 {O(n)}

  MPRF:
    • l11: [1+X₄-X₂]
    • l12: [1+X₄-X₂]
    • l14: [1+X₄-X₂]
    • l5: [1+X₄-X₂]
    • l6: [2+X₄-X₀]
    • l7: [1+X₄-X₀]




MPRF for transition t₁₅: l7(X₀, X₁, X₂, X₃, X₄) → l5(X₀, X₁, X₀, X₃, X₄) :|: X₀ ≤ 1+X₂ ∧ X₀ ≤ 1+X₄ ∧ 1+X₂ ≤ X₀ ∧ 1 ≤ X₁ ∧ 1+X₃ ≤ X₁ ∧ 1 ≤ X₂ ∧ 1 ≤ X₄ ∧ 2 ≤ X₀ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₁+X₄ ∧ 2 ≤ X₂+X₄ ∧ 3 ≤ X₀+X₁ ∧ 3 ≤ X₀+X₂ ∧ 3 ≤ X₀+X₄ ∧ X₂ ≤ X₄ of depth 1:
  new bound:
    X₄+2 {O(n)}

  MPRF:
    • l11: [1+X₄-X₂]
    • l12: [1+X₄-X₂]
    • l14: [1+X₄-X₂]
    • l5: [1+X₄-X₂]
    • l6: [X₀+X₄-2⋅X₂]
    • l7: [2+X₄-X₀]




MPRF for transition t₁₀: l12(X₀, X₁, X₂, X₃, X₄) → l14(X₀, X₁, X₂, X₃, X₄) :|: X₁ ≤ X₃ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 1 ≤ X₄ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₁+X₄ ∧ 2 ≤ X₂+X₄ ∧ X₂ ≤ X₄ of depth 1:
  new bound:
    X₃⋅X₄+3⋅X₃ {O(n^2)}

  MPRF:
    • l11: [X₃-X₁]
    • l12: [1+X₃-X₁]
    • l14: [X₃-X₁]
    • l5: [X₃]
    • l6: [X₃-X₁]
    • l7: [X₃-X₁]




MPRF for transition t₁₂: l14(X₀, X₁, X₂, X₃, X₄) → l12(X₀, 1+X₁, X₂, X₃, X₄) :|: 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 1 ≤ X₃ ∧ 1 ≤ X₄ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₁+X₃ ∧ 2 ≤ X₁+X₄ ∧ 2 ≤ X₂+X₃ ∧ 2 ≤ X₂+X₄ ∧ 2 ≤ X₃+X₄ ∧ X₁ ≤ X₃ ∧ X₂ ≤ X₄ of depth 1:
  new bound:
    X₃⋅X₄+3⋅X₃ {O(n^2)}

  MPRF:
    • l11: [X₃-X₁]
    • l12: [1+X₃-X₁]
    • l14: [1+X₃-X₁]
    • l5: [X₃]
    • l6: [X₃-X₁]
    • l7: [X₃-X₁]




  Found invariant 1 ≤ X₄ ∧ 2 ≤ X₃+X₄ ∧ 2 ≤ X₂+X₄ ∧ X₂ ≤ X₄ ∧ 3 ≤ X₁+X₄ ∧ 1 ≤ X₃ ∧ 2 ≤ X₂+X₃ ∧ 3 ≤ X₁+X₃ ∧ X₁ ≤ 1+X₃ ∧ 1 ≤ X₂ ∧ 3 ≤ X₁+X₂ ∧ 2 ≤ X₁ for location l12_v1


  Found invariant 1 ≤ X₄ ∧ 2 ≤ X₂+X₄ ∧ X₂ ≤ X₄ ∧ 2 ≤ X₁+X₄ ∧ 3 ≤ X₀+X₄ ∧ X₀ ≤ 1+X₄ ∧ 1+X₃ ≤ X₁ ∧ 1+X₂ ≤ X₀ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 3 ≤ X₀+X₂ ∧ X₀ ≤ 1+X₂ ∧ 1 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 2 ≤ X₀ for location l6


  Found invariant 1 ≤ X₄ ∧ 2 ≤ X₂+X₄ ∧ X₂ ≤ X₄ ∧ 2 ≤ X₁+X₄ ∧ X₁ ≤ X₄ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ X₁ ≤ X₂ ∧ X₁ ≤ 1 ∧ 1 ≤ X₁ for location l12


  Found invariant 1 ≤ X₄ ∧ 2 ≤ X₃+X₄ ∧ 2 ≤ X₂+X₄ ∧ X₂ ≤ X₄ ∧ 2 ≤ X₁+X₄ ∧ X₁ ≤ X₄ ∧ 1 ≤ X₃ ∧ 2 ≤ X₂+X₃ ∧ 2 ≤ X₁+X₃ ∧ X₁ ≤ X₃ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ X₁ ≤ X₂ ∧ X₁ ≤ 1 ∧ 1 ≤ X₁ for location l14_v1


  Found invariant 1 ≤ X₄ ∧ 2 ≤ X₂+X₄ ∧ X₂ ≤ X₄ ∧ 2 ≤ X₁+X₄ ∧ 1+X₃ ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 1 ≤ X₁ for location l11


  Found invariant 1+X₄ ≤ X₂ ∧ 1 ≤ X₂ for location l15


  Found invariant 1 ≤ X₄ ∧ 3 ≤ X₃+X₄ ∧ 2 ≤ X₂+X₄ ∧ X₂ ≤ X₄ ∧ 3 ≤ X₁+X₄ ∧ 2 ≤ X₃ ∧ 3 ≤ X₂+X₃ ∧ 4 ≤ X₁+X₃ ∧ X₁ ≤ X₃ ∧ 1 ≤ X₂ ∧ 3 ≤ X₁+X₂ ∧ 2 ≤ X₁ for location l14_v2


  Found invariant 1 ≤ X₄ ∧ 2 ≤ X₂+X₄ ∧ X₂ ≤ X₄ ∧ 2 ≤ X₁+X₄ ∧ 3 ≤ X₀+X₄ ∧ X₀ ≤ 1+X₄ ∧ 1+X₃ ≤ X₁ ∧ 1+X₂ ≤ X₀ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 3 ≤ X₀+X₂ ∧ X₀ ≤ 1+X₂ ∧ 1 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 2 ≤ X₀ for location l7


  Found invariant 1 ≤ X₂ for location l5


  Found invariant 1+X₄ ≤ X₂ ∧ 1 ≤ X₂ for location l13


All Bounds
Timebounds
  Overall timebound:2⋅X₃⋅X₄+5⋅X₄+6⋅X₃+20 {O(n^2)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: 1 {O(1)}
    t₈: X₄+2 {O(n)}
    t₉: 1 {O(1)}
    t₁₀: X₃⋅X₄+3⋅X₃ {O(n^2)}
    t₁₁: X₄+2 {O(n)}
    t₁₂: X₃⋅X₄+3⋅X₃ {O(n^2)}
    t₁₃: X₄+2 {O(n)}
    t₁₄: X₄+2 {O(n)}
    t₁₅: X₄+2 {O(n)}
    t₁₆: 1 {O(1)}


Costbounds
  Overall costbound: 2⋅X₃⋅X₄+5⋅X₄+6⋅X₃+20 {O(n^2)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: 1 {O(1)}
    t₈: X₄+2 {O(n)}
    t₉: 1 {O(1)}
    t₁₀: X₃⋅X₄+3⋅X₃ {O(n^2)}
    t₁₁: X₄+2 {O(n)}
    t₁₂: X₃⋅X₄+3⋅X₃ {O(n^2)}
    t₁₃: X₄+2 {O(n)}
    t₁₄: X₄+2 {O(n)}
    t₁₅: X₄+2 {O(n)}
    t₁₆: 1 {O(1)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₀, X₂: X₂ {O(n)}
    t₀, X₃: X₃ {O(n)}
    t₀, X₄: X₄ {O(n)}
    t₁, X₀: X₀ {O(n)}
    t₁, X₁: X₁ {O(n)}
    t₁, X₂: X₂ {O(n)}
    t₁, X₃: X₃ {O(n)}
    t₁, X₄: X₄ {O(n)}
    t₂, X₀: X₀ {O(n)}
    t₂, X₁: X₁ {O(n)}
    t₂, X₂: X₂ {O(n)}
    t₂, X₃: X₃ {O(n)}
    t₂, X₄: X₄ {O(n)}
    t₃, X₀: X₀ {O(n)}
    t₃, X₁: X₁ {O(n)}
    t₃, X₂: X₂ {O(n)}
    t₃, X₃: X₃ {O(n)}
    t₃, X₄: X₄ {O(n)}
    t₄, X₀: X₀ {O(n)}
    t₄, X₁: X₁ {O(n)}
    t₄, X₂: X₂ {O(n)}
    t₄, X₃: X₃ {O(n)}
    t₄, X₄: X₄ {O(n)}
    t₅, X₀: X₀ {O(n)}
    t₅, X₁: X₁ {O(n)}
    t₅, X₂: X₂ {O(n)}
    t₅, X₃: X₃ {O(n)}
    t₅, X₄: X₄ {O(n)}
    t₆, X₀: X₀ {O(n)}
    t₆, X₁: X₁ {O(n)}
    t₆, X₂: X₂ {O(n)}
    t₆, X₃: X₃ {O(n)}
    t₆, X₄: X₄ {O(n)}
    t₇, X₀: X₀ {O(n)}
    t₇, X₁: X₁ {O(n)}
    t₇, X₂: 1 {O(1)}
    t₇, X₃: X₃ {O(n)}
    t₇, X₄: X₄ {O(n)}
    t₈, X₀: X₀+X₄+3 {O(n)}
    t₈, X₁: 1 {O(1)}
    t₈, X₂: X₄+3 {O(n)}
    t₈, X₃: X₃ {O(n)}
    t₈, X₄: X₄ {O(n)}
    t₉, X₀: X₀+X₄+3 {O(n)}
    t₉, X₁: X₃⋅X₄+3⋅X₃+X₁+2 {O(n^2)}
    t₉, X₂: X₄+4 {O(n)}
    t₉, X₃: 2⋅X₃ {O(n)}
    t₉, X₄: 2⋅X₄ {O(n)}
    t₁₀, X₀: X₀+X₄+3 {O(n)}
    t₁₀, X₁: X₃⋅X₄+3⋅X₃+1 {O(n^2)}
    t₁₀, X₂: X₄+3 {O(n)}
    t₁₀, X₃: X₃ {O(n)}
    t₁₀, X₄: X₄ {O(n)}
    t₁₁, X₀: 2⋅X₀+2⋅X₄+6 {O(n)}
    t₁₁, X₁: X₃⋅X₄+3⋅X₃+2 {O(n^2)}
    t₁₁, X₂: X₄+3 {O(n)}
    t₁₁, X₃: X₃ {O(n)}
    t₁₁, X₄: X₄ {O(n)}
    t₁₂, X₀: X₀+X₄+3 {O(n)}
    t₁₂, X₁: X₃⋅X₄+3⋅X₃+1 {O(n^2)}
    t₁₂, X₂: X₄+3 {O(n)}
    t₁₂, X₃: X₃ {O(n)}
    t₁₂, X₄: X₄ {O(n)}
    t₁₃, X₀: X₄+3 {O(n)}
    t₁₃, X₁: X₃⋅X₄+3⋅X₃+2 {O(n^2)}
    t₁₃, X₂: X₄+3 {O(n)}
    t₁₃, X₃: X₃ {O(n)}
    t₁₃, X₄: X₄ {O(n)}
    t₁₄, X₀: X₄+3 {O(n)}
    t₁₄, X₁: X₃⋅X₄+3⋅X₃+2 {O(n^2)}
    t₁₄, X₂: X₄+3 {O(n)}
    t₁₄, X₃: X₃ {O(n)}
    t₁₄, X₄: X₄ {O(n)}
    t₁₅, X₀: X₄+3 {O(n)}
    t₁₅, X₁: X₃⋅X₄+3⋅X₃+2 {O(n^2)}
    t₁₅, X₂: X₄+3 {O(n)}
    t₁₅, X₃: X₃ {O(n)}
    t₁₅, X₄: X₄ {O(n)}
    t₁₆, X₀: X₀+X₄+3 {O(n)}
    t₁₆, X₁: X₃⋅X₄+3⋅X₃+X₁+2 {O(n^2)}
    t₁₆, X₂: X₄+4 {O(n)}
    t₁₆, X₃: 2⋅X₃ {O(n)}
    t₁₆, X₄: 2⋅X₄ {O(n)}

