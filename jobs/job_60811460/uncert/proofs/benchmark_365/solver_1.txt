WORST_CASE(?,O(n^2))

# LoAT Proof:
Initial ITS

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f4 -> 2

Rules:
   0: (-2+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=2, i3'=1+i3, i5'=1+i5
   1: (-i4+i5 >= 0 /\ -2+i1 == 0 /\ -2+i6-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i5'=0
   2: (-1+i1 == 0 /\ -1+i6 >= 0) /\ i1'=2, i3'=1+i3, i4'=0, i5'=0

Dependency graph:
0 -> 0, 0 -> 1
1 -> 0, 1 -> 1
2 -> 0, 2 -> 1

Refined Dependency Graph

	Removed the following edges: 2 -> 0

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f4 -> 2

Rules:
   0: (-2+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=2, i3'=1+i3, i5'=1+i5
   1: (-i4+i5 >= 0 /\ -2+i1 == 0 /\ -2+i6-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i5'=0
   2: (-1+i1 == 0 /\ -1+i6 >= 0) /\ i1'=2, i3'=1+i3, i4'=0, i5'=0

Dependency graph:
0 -> 0, 0 -> 1
1 -> 0, 1 -> 1
2 -> 1

Step with 2

	Trace

	2[(-1+i1 == 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{}
	
Step with 1

	Trace

	2[(-1+i1 == 0 /\ -1+i6 >= 0)]
	1[(-i4+i5 >= 0 /\ -2+i1 == 0 /\ -2+i6-i4 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Accelerate

	Loop Acceleration

	Original rule:
	(-i4+i5 >= 0 /\ -2+i1 == 0 /\ -2+i6-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i5'=0
	New rule:
	(-i4+i5 >= 0 /\ -2+i1 >= 0 /\ -2+i6-i4 >= 0 /\ -1+i6-i4-it11 >= 0 /\ 2-i1 >= 0 /\ 1-i4-it11 >= 0 /\ -1+it11 >= 0) /\ i1'=i1, i3'=i3+it11, i4'=i4+it11, i5'=0

		-i4+i5 >= 0 [0]: eventual decrease yields (-i4+i5 >= 0 /\ 1-i4-it11 >= 0)
		
		-2+i1 >= 0 [0]: unchanged
		
		-2+i6-i4 >= 0 [0]: montonic decrease yields (-2+i6-i4 >= 0 /\ -1+i6-i4-it11 >= 0)
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-i4+i5 >= 0 -> (-i4+i5 >= 0 /\ 1-i4-it11 >= 0), -2+i1 >= 0 -> -2+i1 >= 0, -2+i6-i4 >= 0 -> (-2+i6-i4 >= 0 /\ -1+i6-i4-it11 >= 0), 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-i4+i5 >= 0 /\ -2+i1 >= 0 /\ -2+i6-i4 >= 0 /\ -1+i6-i4-it11 >= 0 /\ 2-i1 >= 0 /\ 1-i4-it11 >= 0 /\ -1+it11 >= 0) /\ i1'=i1, i3'=i3+it11, i4'=i4+it11, i5'=0
	New rule:
	(-i4+i5 >= 0 /\ -2+i1 >= 0 /\ -2+i6-i4 >= 0 /\ -1+i6-i4-it11 >= 0 /\ 2-i1 >= 0 /\ 1-i4-it11 >= 0 /\ -1+it11 >= 0) /\ i3'=i3+it11, i4'=i4+it11, i5'=0

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f4 -> 2

Rules:
   0: (-2+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=2, i3'=1+i3, i5'=1+i5
   1: (-i4+i5 >= 0 /\ -2+i1 == 0 /\ -2+i6-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i5'=0
   2: (-1+i1 == 0 /\ -1+i6 >= 0) /\ i1'=2, i3'=1+i3, i4'=0, i5'=0
   3: (-i4+i5 >= 0 /\ -2+i1 >= 0 /\ -2+i6-i4 >= 0 /\ -1+i6-i4-it11 >= 0 /\ 2-i1 >= 0 /\ 1-i4-it11 >= 0 /\ -1+it11 >= 0) /\ i3'=i3+it11, i4'=i4+it11, i5'=0

Dependency graph:
0 -> 0, 0 -> 1, 0 -> 3
1 -> 0, 1 -> 1, 1 -> 3
2 -> 1, 2 -> 3
3 -> 0, 3 -> 1

	Trace

	2[(-1+i1 == 0 /\ -1+i6 >= 0)]
	3[(-i4+i5 >= 0 /\ -2+i1 >= 0 /\ -2+i6-i4 >= 0 /\ -1+i6-i4-it11 >= 0 /\ 2-i1 >= 0 /\ 1-i4-it11 >= 0 /\ -1+it11 >= 0)]
	
	Blocked

	{}
	{}
	{1[T], 3[T]}
	
Step with 0

	Trace

	2[(-1+i1 == 0 /\ -1+i6 >= 0)]
	3[(-i4+i5 >= 0 /\ -2+i1 >= 0 /\ -2+i6-i4 >= 0 /\ -1+i6-i4-it11 >= 0 /\ 2-i1 >= 0 /\ 1-i4-it11 >= 0 /\ -1+it11 >= 0)]
	0[(-2+i1 == 0 /\ -1+i4-i5 >= 0)]
	
	Blocked

	{}
	{}
	{1[T], 3[T]}
	{}
	
Accelerate

	Loop Acceleration

	Original rule:
	(-2+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=2, i3'=1+i3, i5'=1+i5
	New rule:
	(-1+it23 >= 0 /\ -2+i1 >= 0 /\ i4-it23-i5 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it23, i5'=it23+i5

		-2+i1 >= 0 [0]: unchanged
		
		-1+i4-i5 >= 0 [0]: montonic decrease yields i4-it23-i5 >= 0
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, -1+i4-i5 >= 0 -> i4-it23-i5 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-1+it23 >= 0 /\ -2+i1 >= 0 /\ i4-it23-i5 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it23, i5'=it23+i5
	New rule:
	(-1+it23 >= 0 /\ -2+i1 >= 0 /\ i4-it23-i5 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+it23, i5'=it23+i5
	
	Instantiation

	Original rule:
	(-1+it23 >= 0 /\ -2+i1 >= 0 /\ i4-it23-i5 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+it23, i5'=it23+i5
	New rule:
	(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+i4-i5, i5'=i4

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f4 -> 2

Rules:
   0: (-2+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=2, i3'=1+i3, i5'=1+i5
   1: (-i4+i5 >= 0 /\ -2+i1 == 0 /\ -2+i6-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i5'=0
   2: (-1+i1 == 0 /\ -1+i6 >= 0) /\ i1'=2, i3'=1+i3, i4'=0, i5'=0
   3: (-i4+i5 >= 0 /\ -2+i1 >= 0 /\ -2+i6-i4 >= 0 /\ -1+i6-i4-it11 >= 0 /\ 2-i1 >= 0 /\ 1-i4-it11 >= 0 /\ -1+it11 >= 0) /\ i3'=i3+it11, i4'=i4+it11, i5'=0
   4: (0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+i4-i5, i5'=i4

Dependency graph:
0 -> 0, 0 -> 1, 0 -> 3, 0 -> 4
1 -> 0, 1 -> 1, 1 -> 3, 1 -> 4
2 -> 1, 2 -> 3
3 -> 0, 3 -> 1, 3 -> 4
4 -> 0, 4 -> 1, 4 -> 3

	Trace

	2[(-1+i1 == 0 /\ -1+i6 >= 0)]
	3[(-i4+i5 >= 0 /\ -2+i1 >= 0 /\ -2+i6-i4 >= 0 /\ -1+i6-i4-it11 >= 0 /\ 2-i1 >= 0 /\ 1-i4-it11 >= 0 /\ -1+it11 >= 0)]
	4[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{}
	{1[T], 3[T]}
	{0[T], 4[T]}
	
Step with 1

	Trace

	2[(-1+i1 == 0 /\ -1+i6 >= 0)]
	3[(-i4+i5 >= 0 /\ -2+i1 >= 0 /\ -2+i6-i4 >= 0 /\ -1+i6-i4-it11 >= 0 /\ 2-i1 >= 0 /\ 1-i4-it11 >= 0 /\ -1+it11 >= 0)]
	4[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	1[(-i4+i5 >= 0 /\ -2+i1 == 0 /\ -2+i6-i4 >= 0)]
	
	Blocked

	{}
	{}
	{1[T], 3[T]}
	{0[T], 3[T], 4[T]}
	{}
	
Covered

	Trace

	2[(-1+i1 == 0 /\ -1+i6 >= 0)]
	3[(-i4+i5 >= 0 /\ -2+i1 >= 0 /\ -2+i6-i4 >= 0 /\ -1+i6-i4-it11 >= 0 /\ 2-i1 >= 0 /\ 1-i4-it11 >= 0 /\ -1+it11 >= 0)]
	4[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{}
	{1[T], 3[T]}
	{0[T], 1[T], 3[T], 4[T]}
	
Backtrack

	Trace

	2[(-1+i1 == 0 /\ -1+i6 >= 0)]
	3[(-i4+i5 >= 0 /\ -2+i1 >= 0 /\ -2+i6-i4 >= 0 /\ -1+i6-i4-it11 >= 0 /\ 2-i1 >= 0 /\ 1-i4-it11 >= 0 /\ -1+it11 >= 0)]
	
	Blocked

	{}
	{}
	{1[T], 3[T], 4[T]}
	
Step with 0

	Trace

	2[(-1+i1 == 0 /\ -1+i6 >= 0)]
	3[(-i4+i5 >= 0 /\ -2+i1 >= 0 /\ -2+i6-i4 >= 0 /\ -1+i6-i4-it11 >= 0 /\ 2-i1 >= 0 /\ 1-i4-it11 >= 0 /\ -1+it11 >= 0)]
	0[(-2+i1 == 0 /\ -1+i4-i5 >= 0)]
	
	Blocked

	{}
	{}
	{1[T], 3[T], 4[T]}
	{}
	
Covered

	Trace

	2[(-1+i1 == 0 /\ -1+i6 >= 0)]
	3[(-i4+i5 >= 0 /\ -2+i1 >= 0 /\ -2+i6-i4 >= 0 /\ -1+i6-i4-it11 >= 0 /\ 2-i1 >= 0 /\ 1-i4-it11 >= 0 /\ -1+it11 >= 0)]
	
	Blocked

	{}
	{}
	{0[T], 1[T], 3[T], 4[T]}
	
Backtrack

	Trace

	2[(-1+i1 == 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{3[T]}
	
Step with 1

	Trace

	2[(-1+i1 == 0 /\ -1+i6 >= 0)]
	1[(-i4+i5 >= 0 /\ -2+i1 == 0 /\ -2+i6-i4 >= 0)]
	
	Blocked

	{}
	{3[T]}
	{}
	
Covered

	Trace

	2[(-1+i1 == 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{1[T], 3[T]}
	
Backtrack

	Trace

	Blocked

	{2[T]}
	
Accept

Constant


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^2))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  
  Locations:  l0, l1
  Return Locations:  
  Transitions:
  t₂: l0(X₀, X₁, X₂) → l1(0, 0, X₂) :|: 1 ≤ X₂
  t₀: l1(X₀, X₁, X₂) → l1(X₀, 1+X₁, X₂) :|: 1+X₁ ≤ X₀
  t₁: l1(X₀, X₁, X₂) → l1(1+X₀, 0, X₂) :|: 2+X₀ ≤ X₂ ∧ X₀ ≤ X₁


Preprocessing
  Found invariant 1 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 1+X₁ ≤ X₂ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ X₁ ≤ X₀ ∧ 0 ≤ X₁ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₀ for location l1


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  
  Locations:  l0, l1
  Return Locations:  
  Transitions:
  t₂: l0(X₀, X₁, X₂) → l1(0, 0, X₂) :|: 1 ≤ X₂
  t₀: l1(X₀, X₁, X₂) → l1(X₀, 1+X₁, X₂) :|: 1+X₁ ≤ X₀ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 1+X₁ ≤ X₂ ∧ 1 ≤ X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ X₁ ≤ X₀ ∧ 0 ≤ X₁
  t₁: l1(X₀, X₁, X₂) → l1(1+X₀, 0, X₂) :|: 2+X₀ ≤ X₂ ∧ X₀ ≤ X₁ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 1+X₁ ≤ X₂ ∧ 1 ≤ X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ X₁ ≤ X₀ ∧ 0 ≤ X₁


MPRF for transition t₁: l1(X₀, X₁, X₂) → l1(1+X₀, 0, X₂) :|: 2+X₀ ≤ X₂ ∧ X₀ ≤ X₁ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 1+X₁ ≤ X₂ ∧ 1 ≤ X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ X₁ ≤ X₀ ∧ 0 ≤ X₁ of depth 1:
  new bound:
    X₂ {O(n)}

  MPRF:
    • l1: [X₂-X₀]




MPRF for transition t₀: l1(X₀, X₁, X₂) → l1(X₀, 1+X₁, X₂) :|: 1+X₁ ≤ X₀ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 1+X₁ ≤ X₂ ∧ 1 ≤ X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ X₁ ≤ X₀ ∧ 0 ≤ X₁ of depth 1:
  new bound:
    X₂^2+X₂ {O(n^2)}

  MPRF:
    • l1: [1+X₀-X₁]




  Cut unsatisfiable transition [t₃₄: l1→l1_v2]


  Found invariant 2 ≤ X₂ ∧ 3 ≤ X₁+X₂ ∧ 1+X₁ ≤ X₂ ∧ 3 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ X₁ ≤ X₀ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l1_v2


  Found invariant 1 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 1+X₁ ≤ X₂ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ X₁ ≤ 0 ∧ X₁ ≤ X₀ ∧ X₀+X₁ ≤ 0 ∧ 0 ≤ X₁ ∧ 0 ≤ X₀+X₁ ∧ X₀ ≤ X₁ ∧ X₀ ≤ 0 ∧ 0 ≤ X₀ for location l1


  Found invariant 2 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 2+X₁ ≤ X₂ ∧ 3 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ X₁ ≤ 0 ∧ 1+X₁ ≤ X₀ ∧ 0 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l1_v1


All Bounds
Timebounds
  Overall timebound:X₂^2+2⋅X₂+1 {O(n^2)}
    t₀: X₂^2+X₂ {O(n^2)}
    t₁: X₂ {O(n)}
    t₂: 1 {O(1)}


Costbounds
  Overall costbound: X₂^2+2⋅X₂+1 {O(n^2)}
    t₀: X₂^2+X₂ {O(n^2)}
    t₁: X₂ {O(n)}
    t₂: 1 {O(1)}


Sizebounds
    t₀, X₀: X₂ {O(n)}
    t₀, X₁: X₂^2+X₂ {O(n^2)}
    t₀, X₂: X₂ {O(n)}
    t₁, X₀: X₂ {O(n)}
    t₁, X₁: 0 {O(1)}
    t₁, X₂: X₂ {O(n)}
    t₂, X₀: 0 {O(1)}
    t₂, X₁: 0 {O(1)}
    t₂, X₂: X₂ {O(n)}

