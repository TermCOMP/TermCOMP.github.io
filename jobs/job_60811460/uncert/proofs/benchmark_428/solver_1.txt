NO

# LoAT Proof:
NO

WORST_CASE(Omega(n^1),?)
NO

Initial ITS

Start location: f300

Location map:
LoAT_sink -> 0
f300 -> 1
f3 -> 2

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-2+i1 == 0 /\ -i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4
   2: (-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4

Dependency graph:
0 -> 1, 0 -> 2
1 -> 1, 1 -> 2
2 -> 1, 2 -> 2

Refined Dependency Graph

	Removed the following edges: 1 -> 2

Start location: f300

Location map:
LoAT_sink -> 0
f300 -> 1
f3 -> 2

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-2+i1 == 0 /\ -i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4
   2: (-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4

Dependency graph:
0 -> 1, 0 -> 2
1 -> 1
2 -> 1, 2 -> 2

Step with 0

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 2

	Trace

	0[(-1+i1 == 0)]
	2[(-1+i4 >= 0 /\ -2+i1 == 0)]
	
	Blocked

	{}
	{}
	{}
	
Poly(n^1)

Accelerate

	Loop Acceleration

	Original rule:
	(-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4
	New rule:
	(i4-it7 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+it7 >= 0) /\ i1'=i1, i3'=i3+it7, i4'=i4-it7

		-1+i4 >= 0 [0]: montonic decrease yields i4-it7 >= 0
		
		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-1+i4 >= 0 -> i4-it7 >= 0, -2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(i4-it7 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+it7 >= 0) /\ i1'=i1, i3'=i3+it7, i4'=i4-it7
	New rule:
	(i4-it7 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+it7 >= 0) /\ i3'=i3+it7, i4'=i4-it7
	
	Instantiation

	Original rule:
	(i4-it7 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+it7 >= 0) /\ i3'=i3+it7, i4'=i4-it7
	New rule:
	(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+i4, i4'=0

Start location: f300

Location map:
LoAT_sink -> 0
f300 -> 1
f3 -> 2

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-2+i1 == 0 /\ -i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4
   2: (-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4
   3: (0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+i4, i4'=0

Dependency graph:
0 -> 1, 0 -> 2, 0 -> 3
1 -> 1
2 -> 1, 2 -> 2, 2 -> 3
3 -> 1, 3 -> 2

	Trace

	0[(-1+i1 == 0)]
	3[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{}
	{2[T], 3[T]}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	3[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	1[(-2+i1 == 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{}
	{2[T], 3[T]}
	{}
	
Nonterm

	Certificate of Non-Termination

	Original rule:
	(-2+i1 == 0 /\ -i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4
	New rule:
	(-2+i1 >= 0 /\ 2-i1 >= 0 /\ -i4 >= 0 /\ -1+it20 >= 0) /\ i1'=0

		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		-i4 >= 0 [0]: monotonic increase yields -i4 >= 0
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0, -i4 >= 0 -> -i4 >= 0}

	Loop Acceleration

	Original rule:
	(-2+i1 == 0 /\ -i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4
	New rule:
	(-2+i1 >= 0 /\ 2-i1 >= 0 /\ -i4 >= 0 /\ -1+it20 >= 0) /\ i1'=i1, i3'=i3+it20, i4'=i4-it20

		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		-i4 >= 0 [0]: monotonic increase yields -i4 >= 0
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0, -i4 >= 0 -> -i4 >= 0}

	Removed Trivial Updates

	Original rule:
	(-2+i1 >= 0 /\ 2-i1 >= 0 /\ -i4 >= 0 /\ -1+it20 >= 0) /\ i1'=i1, i3'=i3+it20, i4'=i4-it20
	New rule:
	(-2+i1 >= 0 /\ 2-i1 >= 0 /\ -i4 >= 0 /\ -1+it20 >= 0) /\ i3'=i3+it20, i4'=i4-it20

Start location: f300

Location map:
LoAT_sink -> 0
f300 -> 1
f3 -> 2

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-2+i1 == 0 /\ -i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4
   2: (-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4
   3: (0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+i4, i4'=0
   4: (-2+i1 >= 0 /\ 2-i1 >= 0 /\ -i4 >= 0 /\ -1+it20 >= 0) /\ i1'=0
   5: (-2+i1 >= 0 /\ 2-i1 >= 0 /\ -i4 >= 0 /\ -1+it20 >= 0) /\ i3'=i3+it20, i4'=i4-it20

Dependency graph:
0 -> 1, 0 -> 2, 0 -> 3, 0 -> 4, 0 -> 5
1 -> 1, 1 -> 4, 1 -> 5
2 -> 1, 2 -> 2, 2 -> 3, 2 -> 4, 2 -> 5
3 -> 1, 3 -> 2, 3 -> 4, 3 -> 5
5 -> 1, 5 -> 4

Step with 4

	Trace

	0[(-1+i1 == 0)]
	3[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	4[(-2+i1 >= 0 /\ 2-i1 >= 0 /\ -i4 >= 0 /\ -1+it20 >= 0)]
	
	Blocked

	{}
	{}
	{2[T], 3[T]}
	{4[T]}
	
Refute

	Counterexample

	(i1=1, i3=0, i4=1)
	-0-> (i1=2, i3=1, i4=1 )
	-3-> (i1=2, i3=2, i4=0 )
	-4-> ( )
	
NO

Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
MAYBE


Initial Problem
  Start:  l0
  Program_Vars:  X₀
  Temp_Vars:  
  Locations:  l0, l1
  Return Locations:  
  Transitions:
  t₀: l0(X₀) → l1(X₀)
  t₁: l1(X₀) → l1(X₀-1) :|: X₀ ≤ 0
  t₂: l1(X₀) → l1(X₀-1) :|: 1 ≤ X₀


Preprocessing
Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀
  Temp_Vars:  
  Locations:  l0, l1
  Return Locations:  
  Transitions:
  t₀: l0(X₀) → l1(X₀)
  t₁: l1(X₀) → l1(X₀-1) :|: X₀ ≤ 0
  t₂: l1(X₀) → l1(X₀-1) :|: 1 ≤ X₀


MPRF for transition t₂: l1(X₀) → l1(X₀-1) :|: 1 ≤ X₀ of depth 1:
  new bound:
    X₀ {O(n)}

  MPRF:
    • l1: [X₀]




  Found invariant 1+X₀ ≤ 0 for location l1_v2


  Found invariant 0 ≤ X₀ for location l1_v1


All Bounds
Timebounds
  Overall timebound:inf {Infinity}
    t₀: 1 {O(1)}
    t₁: inf {Infinity}
    t₂: X₀ {O(n)}


Costbounds
  Overall costbound: inf {Infinity}
    t₀: 1 {O(1)}
    t₁: inf {Infinity}
    t₂: X₀ {O(n)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₂, X₀: X₀ {O(n)}

