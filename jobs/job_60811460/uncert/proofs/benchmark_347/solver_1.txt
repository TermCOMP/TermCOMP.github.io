NO

# LoAT Proof:
NO

NO

Initial ITS

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f4 -> 2
f14 -> 3

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=it2, i5'=0
   1: (-2+i1 == 0 /\ -1-it3 >= 0) /\ i1'=2, i3'=1+i3, i5'=1+i5
   2: -2+i1 == 0 /\ i1'=2, i3'=1+i3, i5'=1+i5
   3: (-2+i1 == 0 /\ i4 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=1+i3
   4: (-2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=3, i3'=1+i3
   5: (-2+i1 == 0 /\ i4 >= 0 /\ i4-i5 >= 0) /\ i1'=3, i3'=1+i3
   6: (-2+i1 == 0 /\ i4 >= 0 /\ -1-it4 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=1+i3

Dependency graph:
0 -> 1, 0 -> 2, 0 -> 3, 0 -> 4, 0 -> 5, 0 -> 6
1 -> 1, 1 -> 2, 1 -> 3, 1 -> 4, 1 -> 5, 1 -> 6
2 -> 1, 2 -> 2, 2 -> 3, 2 -> 4, 2 -> 5, 2 -> 6

Preprocessed Transitions

	Eliminated Temporary Variables

	Original rule:
	(-2+i1 == 0 /\ -1-it3 >= 0) /\ i1'=2, i3'=1+i3, i5'=1+i5
	New rule:
	(-2+i1 == 0) /\ i1'=2, i3'=1+i3, i5'=1+i5
	
	Eliminated Temporary Variables

	Original rule:
	(-2+i1 == 0 /\ i4 >= 0 /\ -1-it4 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=1+i3
	New rule:
	(-2+i1 == 0 /\ i4 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=1+i3

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f4 -> 2
f14 -> 3

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=it2, i5'=0
   2: -2+i1 == 0 /\ i1'=2, i3'=1+i3, i5'=1+i5
   3: (-2+i1 == 0 /\ i4 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=1+i3
   4: (-2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=3, i3'=1+i3
   5: (-2+i1 == 0 /\ i4 >= 0 /\ i4-i5 >= 0) /\ i1'=3, i3'=1+i3
   7: (-2+i1 == 0) /\ i1'=2, i3'=1+i3, i5'=1+i5
   8: (-2+i1 == 0 /\ i4 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=1+i3

Dependency graph:
0 -> 2, 0 -> 3, 0 -> 4, 0 -> 5, 0 -> 7, 0 -> 8
2 -> 2, 2 -> 3, 2 -> 4, 2 -> 5, 2 -> 7, 2 -> 8
7 -> 2, 7 -> 3, 7 -> 4, 7 -> 5, 7 -> 7, 7 -> 8

Refined Dependency Graph

	Removed the following edges: 0 -> 3, 0 -> 8

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f4 -> 2
f14 -> 3

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=it2, i5'=0
   2: -2+i1 == 0 /\ i1'=2, i3'=1+i3, i5'=1+i5
   3: (-2+i1 == 0 /\ i4 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=1+i3
   4: (-2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=3, i3'=1+i3
   5: (-2+i1 == 0 /\ i4 >= 0 /\ i4-i5 >= 0) /\ i1'=3, i3'=1+i3
   7: (-2+i1 == 0) /\ i1'=2, i3'=1+i3, i5'=1+i5
   8: (-2+i1 == 0 /\ i4 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=1+i3

Dependency graph:
0 -> 2, 0 -> 4, 0 -> 5, 0 -> 7
2 -> 2, 2 -> 3, 2 -> 4, 2 -> 5, 2 -> 7, 2 -> 8
7 -> 2, 7 -> 3, 7 -> 4, 7 -> 5, 7 -> 7, 7 -> 8

Step with 0

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 5

	Trace

	0[(-1+i1 == 0)]
	5[(-2+i1 == 0 /\ i4 >= 0 /\ i4-i5 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{5[T]}
	
Step with 2

	Trace

	0[(-1+i1 == 0)]
	2[(-2+i1 == 0)]
	
	Blocked

	{}
	{5[T]}
	{}
	
Nonterm

	Certificate of Non-Termination

	Original rule:
	(-2+i1 == 0) /\ i1'=2, i3'=1+i3, i5'=1+i5
	New rule:
	(-1+it18 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0) /\ i1'=0

		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Loop Acceleration

	Original rule:
	(-2+i1 == 0) /\ i1'=2, i3'=1+i3, i5'=1+i5
	New rule:
	(-1+it18 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it18, i5'=it18+i5

		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-1+it18 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it18, i5'=it18+i5
	New rule:
	(-1+it18 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+it18, i5'=it18+i5

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f4 -> 2
f14 -> 3

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=it2, i5'=0
   2: -2+i1 == 0 /\ i1'=2, i3'=1+i3, i5'=1+i5
   3: (-2+i1 == 0 /\ i4 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=1+i3
   4: (-2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=3, i3'=1+i3
   5: (-2+i1 == 0 /\ i4 >= 0 /\ i4-i5 >= 0) /\ i1'=3, i3'=1+i3
   7: (-2+i1 == 0) /\ i1'=2, i3'=1+i3, i5'=1+i5
   8: (-2+i1 == 0 /\ i4 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=1+i3
   9: (-1+it18 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0) /\ i1'=0
  10: (-1+it18 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+it18, i5'=it18+i5

Dependency graph:
0 -> 2, 0 -> 4, 0 -> 5, 0 -> 7, 0 -> 9, 0 -> 10
2 -> 2, 2 -> 3, 2 -> 4, 2 -> 5, 2 -> 7, 2 -> 8, 2 -> 9, 2 -> 10
7 -> 2, 7 -> 3, 7 -> 4, 7 -> 5, 7 -> 7, 7 -> 8, 7 -> 9, 7 -> 10
10 -> 2, 10 -> 3, 10 -> 4, 10 -> 5, 10 -> 7, 10 -> 8, 10 -> 9

Step with 9

	Trace

	0[(-1+i1 == 0)]
	9[(-1+it18 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{5[T]}
	{9[T]}
	
Refute

	Counterexample

	(i1=1, i3=-1)
	-0-> (i1=2, i3=0, i4=0, i5=0 )
	-9-> ( )
	
NO

Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
MAYBE


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁
  Temp_Vars:  C
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁) → l1(C, 0)
  t₁: l1(X₀, X₁) → l1(X₀, 1+X₁) :|: 1+C ≤ 0
  t₂: l1(X₀, X₁) → l1(X₀, 1+X₁)
  t₃: l1(X₀, X₁) → l2(X₀, X₁) :|: 1+X₀ ≤ X₁ ∧ 0 ≤ X₀
  t₄: l1(X₀, X₁) → l2(X₀, X₁) :|: 1+X₀ ≤ 0
  t₅: l1(X₀, X₁) → l2(X₀, X₁) :|: 0 ≤ X₀ ∧ X₁ ≤ X₀
  t₆: l1(X₀, X₁) → l2(X₀, X₁) :|: 1+C ≤ 0 ∧ 1+X₀ ≤ X₁ ∧ 0 ≤ X₀


Preprocessing
  Found invariant 0 ≤ X₁ for location l1


  Found invariant 0 ≤ X₁ for location l2


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁
  Temp_Vars:  C
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁) → l1(C, 0)
  t₁: l1(X₀, X₁) → l1(X₀, 1+X₁) :|: 1+C ≤ 0 ∧ 0 ≤ X₁
  t₂: l1(X₀, X₁) → l1(X₀, 1+X₁) :|: 0 ≤ X₁
  t₃: l1(X₀, X₁) → l2(X₀, X₁) :|: 1+X₀ ≤ X₁ ∧ 0 ≤ X₀ ∧ 0 ≤ X₁
  t₄: l1(X₀, X₁) → l2(X₀, X₁) :|: 1+X₀ ≤ 0 ∧ 0 ≤ X₁
  t₅: l1(X₀, X₁) → l2(X₀, X₁) :|: 0 ≤ X₀ ∧ X₁ ≤ X₀ ∧ 0 ≤ X₁
  t₆: l1(X₀, X₁) → l2(X₀, X₁) :|: 1+C ≤ 0 ∧ 1+X₀ ≤ X₁ ∧ 0 ≤ X₀ ∧ 0 ≤ X₁


  Cut unsatisfiable transition [t₃: l1→l2; t₆: l1→l2; t₅₃: l1→l2; t₅₆: l1→l2]


  Found invariant X₁ ≤ 0 ∧ 0 ≤ X₁ for location l1


  Found invariant 0 ≤ X₁ for location l2


  Found invariant 1 ≤ X₁ for location l1_v1


All Bounds
Timebounds
  Overall timebound:inf {Infinity}
    t₀: 1 {O(1)}
    t₁: inf {Infinity}
    t₂: inf {Infinity}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}


Costbounds
  Overall costbound: inf {Infinity}
    t₀: 1 {O(1)}
    t₁: inf {Infinity}
    t₂: inf {Infinity}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}


Sizebounds
    t₀, X₁: 0 {O(1)}

