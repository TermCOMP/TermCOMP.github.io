WORST_CASE(Omega(n^2),O(n^2))

# LoAT Proof:
WORST_CASE(Omega(n^2),?)

WORST_CASE(Omega(n^1),?)
WORST_CASE(Omega(n^2),?)
Initial ITS

Start location: eval_cousot9_start

Location map:
LoAT_sink -> 0
eval_cousot9_start -> 1
eval_cousot9_bb0_in -> 2
eval_cousot9_0 -> 3
eval_cousot9_1 -> 4
eval_cousot9_2 -> 5
eval_cousot9_3 -> 6
eval_cousot9_4 -> 7
eval_cousot9_5 -> 8
eval_cousot9_6 -> 9
eval_cousot9_bb1_in -> 10
eval_cousot9_bb2_in -> 11
eval_cousot9_bb3_in -> 12
eval_cousot9_stop -> 13

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: -2+i1 == 0 /\ i1'=3, i3'=1+i3
   2: -3+i1 == 0 /\ i1'=4, i3'=1+i3
   3: -4+i1 == 0 /\ i1'=5, i3'=1+i3
   4: -5+i1 == 0 /\ i1'=6, i3'=1+i3
   5: -6+i1 == 0 /\ i1'=7, i3'=1+i3
   6: -7+i1 == 0 /\ i1'=8, i3'=1+i3
   7: -8+i1 == 0 /\ i1'=9, i3'=1+i3
   8: -9+i1 == 0 /\ i1'=10, i3'=1+i3, i4'=i7, i6'=i5
   9: (i6 > 0 /\ -10+i1 == 0) /\ i1'=11, i3'=1+i3
  10: (i6 <= 0 /\ -10+i1 == 0) /\ i1'=12, i3'=1+i3
  11: (-11+i1 == 0 /\ i4 > 0) /\ i1'=10, i3'=1+i3, i4'=-1+i4
  12: (-11+i1 == 0 /\ i4 <= 0 /\ i4 > 0) /\ i1'=10, i3'=1+i3, i4'=i5
  13: (-11+i1 == 0 /\ i4 <= 0 /\ i4 > 0) /\ i1'=10, i3'=1+i3, i4'=-1+i4, i6'=-1+i6
  14: (-11+i1 == 0 /\ i4 <= 0) /\ i1'=10, i3'=1+i3, i4'=i5, i6'=-1+i6
  15: -12+i1 == 0 /\ i1'=13, i3'=1+i3

Dependency graph:
0 -> 1
1 -> 2
2 -> 3
3 -> 4
4 -> 5
5 -> 6
6 -> 7
7 -> 8
8 -> 9, 8 -> 10
9 -> 11, 9 -> 12, 9 -> 13, 9 -> 14
10 -> 15
11 -> 9, 11 -> 10
12 -> 9, 12 -> 10
13 -> 9, 13 -> 10
14 -> 9, 14 -> 10

Chained Linear Paths

	Applied Chaining

	First rule:
	-1+i1 == 0 /\ i1'=2, i3'=1+i3
	Second rule:
	-2+i1 == 0 /\ i1'=3, i3'=1+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 0, 1
	
	Applied Chaining

	First rule:
	-3+i1 == 0 /\ i1'=4, i3'=1+i3
	Second rule:
	-4+i1 == 0 /\ i1'=5, i3'=1+i3
	New rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 2, 3
	
	Applied Chaining

	First rule:
	-5+i1 == 0 /\ i1'=6, i3'=1+i3
	Second rule:
	-6+i1 == 0 /\ i1'=7, i3'=1+i3
	New rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=7, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 4, 5
	
	Applied Chaining

	First rule:
	-7+i1 == 0 /\ i1'=8, i3'=1+i3
	Second rule:
	-8+i1 == 0 /\ i1'=9, i3'=1+i3
	New rule:
	(0 == 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 6, 7
	
	Applied Chaining

	First rule:
	(i6 <= 0 /\ -10+i1 == 0) /\ i1'=12, i3'=1+i3
	Second rule:
	-12+i1 == 0 /\ i1'=13, i3'=1+i3
	New rule:
	(0 == 0 /\ i6 <= 0 /\ -10+i1 == 0) /\ i1'=13, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 10, 15
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	Second rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	
	Applied Deletion

	Removed the following rules: 16, 17
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=7, i3'=2+i3
	Second rule:
	(0 == 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
	New rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=9, i3'=4+i3
	
	Applied Deletion

	Removed the following rules: 18, 19
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	Second rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=9, i3'=4+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=9, i3'=8+i3
	
	Applied Deletion

	Removed the following rules: 21, 22
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=9, i3'=8+i3
	Second rule:
	-9+i1 == 0 /\ i1'=10, i3'=1+i3, i4'=i7, i6'=i5
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=10, i3'=9+i3, i4'=i7, i6'=i5
	
	Applied Deletion

	Removed the following rules: 8, 23

Start location: eval_cousot9_start

Location map:
LoAT_sink -> 0
eval_cousot9_start -> 1
eval_cousot9_bb0_in -> 2
eval_cousot9_0 -> 3
eval_cousot9_1 -> 4
eval_cousot9_2 -> 5
eval_cousot9_3 -> 6
eval_cousot9_4 -> 7
eval_cousot9_5 -> 8
eval_cousot9_6 -> 9
eval_cousot9_bb1_in -> 10
eval_cousot9_bb2_in -> 11
eval_cousot9_bb3_in -> 12
eval_cousot9_stop -> 13

Rules:
   9: (i6 > 0 /\ -10+i1 == 0) /\ i1'=11, i3'=1+i3
  11: (-11+i1 == 0 /\ i4 > 0) /\ i1'=10, i3'=1+i3, i4'=-1+i4
  12: (-11+i1 == 0 /\ i4 <= 0 /\ i4 > 0) /\ i1'=10, i3'=1+i3, i4'=i5
  13: (-11+i1 == 0 /\ i4 <= 0 /\ i4 > 0) /\ i1'=10, i3'=1+i3, i4'=-1+i4, i6'=-1+i6
  14: (-11+i1 == 0 /\ i4 <= 0) /\ i1'=10, i3'=1+i3, i4'=i5, i6'=-1+i6
  20: (0 == 0 /\ i6 <= 0 /\ -10+i1 == 0) /\ i1'=13, i3'=2+i3
  24: (0 == 0 /\ -1+i1 == 0) /\ i1'=10, i3'=9+i3, i4'=i7, i6'=i5

Dependency graph:
9 -> 11, 9 -> 12, 9 -> 13, 9 -> 14
11 -> 9, 11 -> 20
12 -> 9, 12 -> 20
13 -> 9, 13 -> 20
14 -> 9, 14 -> 20
24 -> 9, 24 -> 20

Preprocessed Transitions

	Simplified Guard

	Original rule:
	(0 == 0 /\ i6 <= 0 /\ -10+i1 == 0) /\ i1'=13, i3'=2+i3
	New rule:
	(i6 <= 0 /\ -10+i1 == 0) /\ i1'=13, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=10, i3'=9+i3, i4'=i7, i6'=i5
	New rule:
	-1+i1 == 0 /\ i1'=10, i3'=9+i3, i4'=i7, i6'=i5

Start location: eval_cousot9_start

Location map:
LoAT_sink -> 0
eval_cousot9_start -> 1
eval_cousot9_bb0_in -> 2
eval_cousot9_0 -> 3
eval_cousot9_1 -> 4
eval_cousot9_2 -> 5
eval_cousot9_3 -> 6
eval_cousot9_4 -> 7
eval_cousot9_5 -> 8
eval_cousot9_6 -> 9
eval_cousot9_bb1_in -> 10
eval_cousot9_bb2_in -> 11
eval_cousot9_bb3_in -> 12
eval_cousot9_stop -> 13

Rules:
   9: (i6 > 0 /\ -10+i1 == 0) /\ i1'=11, i3'=1+i3
  11: (-11+i1 == 0 /\ i4 > 0) /\ i1'=10, i3'=1+i3, i4'=-1+i4
  12: (-11+i1 == 0 /\ i4 <= 0 /\ i4 > 0) /\ i1'=10, i3'=1+i3, i4'=i5
  13: (-11+i1 == 0 /\ i4 <= 0 /\ i4 > 0) /\ i1'=10, i3'=1+i3, i4'=-1+i4, i6'=-1+i6
  14: (-11+i1 == 0 /\ i4 <= 0) /\ i1'=10, i3'=1+i3, i4'=i5, i6'=-1+i6
  25: (i6 <= 0 /\ -10+i1 == 0) /\ i1'=13, i3'=2+i3
  26: -1+i1 == 0 /\ i1'=10, i3'=9+i3, i4'=i7, i6'=i5

Dependency graph:
9 -> 11, 9 -> 12, 9 -> 13, 9 -> 14
11 -> 9, 11 -> 25
12 -> 9, 12 -> 25
13 -> 9, 13 -> 25
14 -> 9, 14 -> 25
26 -> 9, 26 -> 25

Refined Dependency Graph

	Removed the following edges: 9 -> 12, 9 -> 13, 12 -> 9, 12 -> 25, 13 -> 9, 13 -> 25

Start location: eval_cousot9_start

Location map:
LoAT_sink -> 0
eval_cousot9_start -> 1
eval_cousot9_bb0_in -> 2
eval_cousot9_0 -> 3
eval_cousot9_1 -> 4
eval_cousot9_2 -> 5
eval_cousot9_3 -> 6
eval_cousot9_4 -> 7
eval_cousot9_5 -> 8
eval_cousot9_6 -> 9
eval_cousot9_bb1_in -> 10
eval_cousot9_bb2_in -> 11
eval_cousot9_bb3_in -> 12
eval_cousot9_stop -> 13

Rules:
   9: (i6 > 0 /\ -10+i1 == 0) /\ i1'=11, i3'=1+i3
  11: (-11+i1 == 0 /\ i4 > 0) /\ i1'=10, i3'=1+i3, i4'=-1+i4
  12: (-11+i1 == 0 /\ i4 <= 0 /\ i4 > 0) /\ i1'=10, i3'=1+i3, i4'=i5
  13: (-11+i1 == 0 /\ i4 <= 0 /\ i4 > 0) /\ i1'=10, i3'=1+i3, i4'=-1+i4, i6'=-1+i6
  14: (-11+i1 == 0 /\ i4 <= 0) /\ i1'=10, i3'=1+i3, i4'=i5, i6'=-1+i6
  25: (i6 <= 0 /\ -10+i1 == 0) /\ i1'=13, i3'=2+i3
  26: -1+i1 == 0 /\ i1'=10, i3'=9+i3, i4'=i7, i6'=i5

Dependency graph:
9 -> 11, 9 -> 14
11 -> 9, 11 -> 25
14 -> 9, 14 -> 25
26 -> 9, 26 -> 25

Step with 26

	Trace

	26[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 25

	Trace

	26[(-1+i1 == 0)]
	25[(i6 <= 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{}
	{}
	
Backtrack

	Trace

	26[(-1+i1 == 0)]
	
	Blocked

	{}
	{25[T]}
	
Step with 9

	Trace

	26[(-1+i1 == 0)]
	9[(i6 > 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{25[T]}
	{}
	
Step with 11

	Trace

	26[(-1+i1 == 0)]
	9[(i6 > 0 /\ -10+i1 == 0)]
	11[(-11+i1 == 0 /\ i4 > 0)]
	
	Blocked

	{}
	{25[T]}
	{}
	{}
	
Poly(n^1)

Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ i6 > 0 /\ i4 > 0 /\ -10+i1 == 0) /\ i1'=10, i3'=2+i3, i4'=-1+i4
		New rule:
		(i6 > 0 /\ i4 > 0 /\ -10+i1 == 0) /\ i1'=10, i3'=2+i3, i4'=-1+i4

	Loop Acceleration

	Original rule:
	(i6 > 0 /\ i4 > 0 /\ -10+i1 == 0) /\ i1'=10, i3'=2+i3, i4'=-1+i4
	New rule:
	(i6 > 0 /\ 10-i1 >= 0 /\ 1-it25+i4 > 0 /\ -10+i1 >= 0 /\ -1+it25 >= 0) /\ i1'=i1, i3'=2*it25+i3, i4'=-it25+i4

		i6 > 0 [0]: unchanged
		
		10-i1 >= 0 [0]: unchanged
		
		i4 > 0 [0]: montonic decrease yields 1-it25+i4 > 0
		
		-10+i1 >= 0 [0]: unchanged
		
		Replacement map: {i6 > 0 -> i6 > 0, 10-i1 >= 0 -> 10-i1 >= 0, i4 > 0 -> 1-it25+i4 > 0, -10+i1 >= 0 -> -10+i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(i6 > 0 /\ 10-i1 >= 0 /\ 1-it25+i4 > 0 /\ -10+i1 >= 0 /\ -1+it25 >= 0) /\ i1'=i1, i3'=2*it25+i3, i4'=-it25+i4
	New rule:
	(i6 > 0 /\ 10-i1 >= 0 /\ 1-it25+i4 > 0 /\ -10+i1 >= 0 /\ -1+it25 >= 0) /\ i3'=2*it25+i3, i4'=-it25+i4
	
	Instantiation

	Original rule:
	(i6 > 0 /\ 10-i1 >= 0 /\ 1-it25+i4 > 0 /\ -10+i1 >= 0 /\ -1+it25 >= 0) /\ i3'=2*it25+i3, i4'=-it25+i4
	New rule:
	(i6 > 0 /\ 1 > 0 /\ 10-i1 >= 0 /\ -1+i4 >= 0 /\ -10+i1 >= 0) /\ i3'=i3+2*i4, i4'=0

Start location: eval_cousot9_start

Location map:
LoAT_sink -> 0
eval_cousot9_start -> 1
eval_cousot9_bb0_in -> 2
eval_cousot9_0 -> 3
eval_cousot9_1 -> 4
eval_cousot9_2 -> 5
eval_cousot9_3 -> 6
eval_cousot9_4 -> 7
eval_cousot9_5 -> 8
eval_cousot9_6 -> 9
eval_cousot9_bb1_in -> 10
eval_cousot9_bb2_in -> 11
eval_cousot9_bb3_in -> 12
eval_cousot9_stop -> 13

Rules:
   9: (i6 > 0 /\ -10+i1 == 0) /\ i1'=11, i3'=1+i3
  11: (-11+i1 == 0 /\ i4 > 0) /\ i1'=10, i3'=1+i3, i4'=-1+i4
  12: (-11+i1 == 0 /\ i4 <= 0 /\ i4 > 0) /\ i1'=10, i3'=1+i3, i4'=i5
  13: (-11+i1 == 0 /\ i4 <= 0 /\ i4 > 0) /\ i1'=10, i3'=1+i3, i4'=-1+i4, i6'=-1+i6
  14: (-11+i1 == 0 /\ i4 <= 0) /\ i1'=10, i3'=1+i3, i4'=i5, i6'=-1+i6
  25: (i6 <= 0 /\ -10+i1 == 0) /\ i1'=13, i3'=2+i3
  26: -1+i1 == 0 /\ i1'=10, i3'=9+i3, i4'=i7, i6'=i5
  27: (i6 > 0 /\ 1 > 0 /\ 10-i1 >= 0 /\ -1+i4 >= 0 /\ -10+i1 >= 0) /\ i3'=i3+2*i4, i4'=0

Dependency graph:
9 -> 11, 9 -> 14
11 -> 9, 11 -> 25, 11 -> 27
14 -> 9, 14 -> 25, 14 -> 27
26 -> 9, 26 -> 25, 26 -> 27
27 -> 9, 27 -> 25

	Trace

	26[(-1+i1 == 0)]
	27[(i6 > 0 /\ 1 > 0 /\ 10-i1 >= 0 /\ -1+i4 >= 0 /\ -10+i1 >= 0)]
	
	Blocked

	{}
	{25[T]}
	{27[T]}
	
Step with 9

	Trace

	26[(-1+i1 == 0)]
	27[(i6 > 0 /\ 1 > 0 /\ 10-i1 >= 0 /\ -1+i4 >= 0 /\ -10+i1 >= 0)]
	9[(i6 > 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{25[T]}
	{25[T], 27[T]}
	{}
	
Step with 14

	Trace

	26[(-1+i1 == 0)]
	27[(i6 > 0 /\ 1 > 0 /\ 10-i1 >= 0 /\ -1+i4 >= 0 /\ -10+i1 >= 0)]
	9[(i6 > 0 /\ -10+i1 == 0)]
	14[(-11+i1 == 0 /\ i4 <= 0)]
	
	Blocked

	{}
	{25[T]}
	{25[T], 27[T]}
	{11[T]}
	{}
	
Accelerate and Drop

		Simplified Guard

		Original rule:
		(0 == 0 /\ i6 > 0 /\ i4 <= 0 /\ -10+i1 == 0) /\ i1'=10, i3'=2+i3, i4'=i5, i6'=-1+i6
		New rule:
		(i6 > 0 /\ i4 <= 0 /\ -10+i1 == 0) /\ i1'=10, i3'=2+i3, i4'=i5, i6'=-1+i6

	Loop Acceleration

	Original rule:
	(i6 > 0 /\ i4 <= 0 /\ -10+i1 == 0) /\ i1'=10, i3'=2+i3, i4'=i5, i6'=-1+i6
	New rule:
	(-1+it52 >= 0 /\ i6 > 0 /\ 10-i1 >= 0 /\ -i5 >= 0 /\ 1+i6-it52 > 0 /\ -10+i1 >= 0 /\ -i4 >= 0) /\ i1'=i1, i3'=i3+2*it52, i4'=i5, i6'=i6-it52

		i6 > 0 [0]: montonic decrease yields (i6 > 0 /\ 1+i6-it52 > 0)
		
		10-i1 >= 0 [0]: unchanged
		
		-10+i1 >= 0 [0]: unchanged
		
		-i4 >= 0 [0]: eventual decrease yields (-i5 >= 0 /\ -i4 >= 0)
		
		-i4 >= 0 [1]: eventual increase yields (-i4+i5 <= 0 /\ -i4 >= 0)
		
		Replacement map: {i6 > 0 -> (i6 > 0 /\ 1+i6-it52 > 0), 10-i1 >= 0 -> 10-i1 >= 0, -10+i1 >= 0 -> -10+i1 >= 0, -i4 >= 0 -> (-i5 >= 0 /\ -i4 >= 0)}

	Removed Trivial Updates

	Original rule:
	(-1+it52 >= 0 /\ i6 > 0 /\ 10-i1 >= 0 /\ -i5 >= 0 /\ 1+i6-it52 > 0 /\ -10+i1 >= 0 /\ -i4 >= 0) /\ i1'=i1, i3'=i3+2*it52, i4'=i5, i6'=i6-it52
	New rule:
	(-1+it52 >= 0 /\ i6 > 0 /\ 10-i1 >= 0 /\ -i5 >= 0 /\ 1+i6-it52 > 0 /\ -10+i1 >= 0 /\ -i4 >= 0) /\ i3'=i3+2*it52, i4'=i5, i6'=i6-it52
	
	Instantiation

	Original rule:
	(-1+it52 >= 0 /\ i6 > 0 /\ 10-i1 >= 0 /\ -i5 >= 0 /\ 1+i6-it52 > 0 /\ -10+i1 >= 0 /\ -i4 >= 0) /\ i3'=i3+2*it52, i4'=i5, i6'=i6-it52
	New rule:
	(i6 > 0 /\ 1 > 0 /\ 10-i1 >= 0 /\ -i5 >= 0 /\ -10+i1 >= 0 /\ -i4 >= 0 /\ -1+i6 >= 0) /\ i3'=2*i6+i3, i4'=i5, i6'=0

Start location: eval_cousot9_start

Location map:
LoAT_sink -> 0
eval_cousot9_start -> 1
eval_cousot9_bb0_in -> 2
eval_cousot9_0 -> 3
eval_cousot9_1 -> 4
eval_cousot9_2 -> 5
eval_cousot9_3 -> 6
eval_cousot9_4 -> 7
eval_cousot9_5 -> 8
eval_cousot9_6 -> 9
eval_cousot9_bb1_in -> 10
eval_cousot9_bb2_in -> 11
eval_cousot9_bb3_in -> 12
eval_cousot9_stop -> 13

Rules:
   9: (i6 > 0 /\ -10+i1 == 0) /\ i1'=11, i3'=1+i3
  11: (-11+i1 == 0 /\ i4 > 0) /\ i1'=10, i3'=1+i3, i4'=-1+i4
  12: (-11+i1 == 0 /\ i4 <= 0 /\ i4 > 0) /\ i1'=10, i3'=1+i3, i4'=i5
  13: (-11+i1 == 0 /\ i4 <= 0 /\ i4 > 0) /\ i1'=10, i3'=1+i3, i4'=-1+i4, i6'=-1+i6
  14: (-11+i1 == 0 /\ i4 <= 0) /\ i1'=10, i3'=1+i3, i4'=i5, i6'=-1+i6
  25: (i6 <= 0 /\ -10+i1 == 0) /\ i1'=13, i3'=2+i3
  26: -1+i1 == 0 /\ i1'=10, i3'=9+i3, i4'=i7, i6'=i5
  27: (i6 > 0 /\ 1 > 0 /\ 10-i1 >= 0 /\ -1+i4 >= 0 /\ -10+i1 >= 0) /\ i3'=i3+2*i4, i4'=0
  28: (i6 > 0 /\ 1 > 0 /\ 10-i1 >= 0 /\ -i5 >= 0 /\ -10+i1 >= 0 /\ -i4 >= 0 /\ -1+i6 >= 0) /\ i3'=2*i6+i3, i4'=i5, i6'=0

Dependency graph:
9 -> 11, 9 -> 14
11 -> 9, 11 -> 25, 11 -> 27, 11 -> 28
14 -> 9, 14 -> 25, 14 -> 27, 14 -> 28
26 -> 9, 26 -> 25, 26 -> 27, 26 -> 28
27 -> 9, 27 -> 25, 27 -> 28
28 -> 9, 28 -> 25, 28 -> 27

	Trace

	26[(-1+i1 == 0)]
	27[(i6 > 0 /\ 1 > 0 /\ 10-i1 >= 0 /\ -1+i4 >= 0 /\ -10+i1 >= 0)]
	
	Blocked

	{}
	{25[T]}
	{25[T], 27[T]}
	
Step with 9

	Trace

	26[(-1+i1 == 0)]
	27[(i6 > 0 /\ 1 > 0 /\ 10-i1 >= 0 /\ -1+i4 >= 0 /\ -10+i1 >= 0)]
	9[(i6 > 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{25[T]}
	{25[T], 27[T], 28[T]}
	{}
	
Step with 14

	Trace

	26[(-1+i1 == 0)]
	27[(i6 > 0 /\ 1 > 0 /\ 10-i1 >= 0 /\ -1+i4 >= 0 /\ -10+i1 >= 0)]
	9[(i6 > 0 /\ -10+i1 == 0)]
	14[(-11+i1 == 0 /\ i4 <= 0)]
	
	Blocked

	{}
	{25[T]}
	{25[T], 27[T], 28[T]}
	{}
	{}
	
Poly(n^2)

Accelerate

		Extracted Implied Equalities

		Original rule:
		(0 <= 0 /\ 0 == 0 /\ i6 > 0 /\ 1 > 0 /\ 10-i1 >= 0 /\ -1+i4 >= 0 /\ -10+i1 >= 0 /\ -10+i1 == 0) /\ i1'=10, i3'=2+i3+2*i4, i4'=i5, i6'=-1+i6
		New rule:
		(0 <= 0 /\ 0 == 0 /\ i6 > 0 /\ 1 > 0 /\ 10-i1 >= 0 /\ -1+i4 >= 0 /\ -10+i1 >= 0 /\ -10+i1 == 0) /\ i1'=10, i3'=2+i3+2*i4, i4'=i5, i6'=-1+i6
		
		Simplified Guard

		Original rule:
		(0 <= 0 /\ 0 == 0 /\ i6 > 0 /\ 1 > 0 /\ 10-i1 >= 0 /\ -1+i4 >= 0 /\ -10+i1 >= 0 /\ -10+i1 == 0) /\ i1'=10, i3'=2+i3+2*i4, i4'=i5, i6'=-1+i6
		New rule:
		(i6 > 0 /\ 10-i1 >= 0 /\ -1+i4 >= 0 /\ -10+i1 >= 0 /\ -10+i1 == 0) /\ i1'=10, i3'=2+i3+2*i4, i4'=i5, i6'=-1+i6

	Loop Acceleration

	Original rule:
	(i6 > 0 /\ 10-i1 >= 0 /\ -1+i4 >= 0 /\ -10+i1 >= 0 /\ -10+i1 == 0) /\ i1'=10, i3'=2+i3+2*i4, i4'=i5, i6'=-1+i6
	New rule:
	(i6 > 0 /\ 10-i1 >= 0 /\ -1+i4 >= 0 /\ -1+it65 >= 0 /\ -1+i5 >= 0 /\ -10+i1 >= 0 /\ -10+i1 == 0 /\ i6-it65 > 0 /\ -1+i6 > 0) /\ i1'=i1, i3'=2+2*it65*i5+i3+2*i4+2*it65, i4'=i5, i6'=-1+i6-it65

		i6 > 0 [0]: montonic decrease yields (i6 > 0 /\ 1+i6-it65 > 0)
		
		10-i1 >= 0 [0]: unchanged
		
		-1+i4 >= 0 [0]: eventual decrease yields (-1+i4 >= 0 /\ -1+i5 >= 0)
		
		-1+i4 >= 0 [1]: eventual increase yields (-1+i4 >= 0 /\ i4-i5 <= 0)
		
		-10+i1 >= 0 [0]: unchanged
		
		Replacement map: {i6 > 0 -> (i6 > 0 /\ 1+i6-it65 > 0), 10-i1 >= 0 -> 10-i1 >= 0, -1+i4 >= 0 -> (-1+i4 >= 0 /\ -1+i5 >= 0), -10+i1 >= 0 -> -10+i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(i6 > 0 /\ 10-i1 >= 0 /\ -1+i4 >= 0 /\ -1+it65 >= 0 /\ -1+i5 >= 0 /\ -10+i1 >= 0 /\ -10+i1 == 0 /\ i6-it65 > 0 /\ -1+i6 > 0) /\ i1'=i1, i3'=2+2*it65*i5+i3+2*i4+2*it65, i4'=i5, i6'=-1+i6-it65
	New rule:
	(i6 > 0 /\ 10-i1 >= 0 /\ -1+i4 >= 0 /\ -1+it65 >= 0 /\ -1+i5 >= 0 /\ -10+i1 >= 0 /\ -10+i1 == 0 /\ i6-it65 > 0 /\ -1+i6 > 0) /\ i3'=2+2*it65*i5+i3+2*i4+2*it65, i4'=i5, i6'=-1+i6-it65
	
	Instantiation

	Original rule:
	(i6 > 0 /\ 10-i1 >= 0 /\ -1+i4 >= 0 /\ -1+it65 >= 0 /\ -1+i5 >= 0 /\ -10+i1 >= 0 /\ -10+i1 == 0 /\ i6-it65 > 0 /\ -1+i6 > 0) /\ i3'=2+2*it65*i5+i3+2*i4+2*it65, i4'=i5, i6'=-1+i6-it65
	New rule:
	(i6 > 0 /\ -2+i6 >= 0 /\ 1 > 0 /\ 10-i1 >= 0 /\ -1+i4 >= 0 /\ -1+i5 >= 0 /\ -10+i1 >= 0 /\ -10+i1 == 0 /\ -1+i6 > 0) /\ i3'=2*i6+i3+2*i4+2*i5*(-1+i6), i4'=i5, i6'=0

Start location: eval_cousot9_start

Location map:
LoAT_sink -> 0
eval_cousot9_start -> 1
eval_cousot9_bb0_in -> 2
eval_cousot9_0 -> 3
eval_cousot9_1 -> 4
eval_cousot9_2 -> 5
eval_cousot9_3 -> 6
eval_cousot9_4 -> 7
eval_cousot9_5 -> 8
eval_cousot9_6 -> 9
eval_cousot9_bb1_in -> 10
eval_cousot9_bb2_in -> 11
eval_cousot9_bb3_in -> 12
eval_cousot9_stop -> 13

Rules:
   9: (i6 > 0 /\ -10+i1 == 0) /\ i1'=11, i3'=1+i3
  11: (-11+i1 == 0 /\ i4 > 0) /\ i1'=10, i3'=1+i3, i4'=-1+i4
  12: (-11+i1 == 0 /\ i4 <= 0 /\ i4 > 0) /\ i1'=10, i3'=1+i3, i4'=i5
  13: (-11+i1 == 0 /\ i4 <= 0 /\ i4 > 0) /\ i1'=10, i3'=1+i3, i4'=-1+i4, i6'=-1+i6
  14: (-11+i1 == 0 /\ i4 <= 0) /\ i1'=10, i3'=1+i3, i4'=i5, i6'=-1+i6
  25: (i6 <= 0 /\ -10+i1 == 0) /\ i1'=13, i3'=2+i3
  26: -1+i1 == 0 /\ i1'=10, i3'=9+i3, i4'=i7, i6'=i5
  27: (i6 > 0 /\ 1 > 0 /\ 10-i1 >= 0 /\ -1+i4 >= 0 /\ -10+i1 >= 0) /\ i3'=i3+2*i4, i4'=0
  28: (i6 > 0 /\ 1 > 0 /\ 10-i1 >= 0 /\ -i5 >= 0 /\ -10+i1 >= 0 /\ -i4 >= 0 /\ -1+i6 >= 0) /\ i3'=2*i6+i3, i4'=i5, i6'=0
  29: (i6 > 0 /\ -2+i6 >= 0 /\ 1 > 0 /\ 10-i1 >= 0 /\ -1+i4 >= 0 /\ -1+i5 >= 0 /\ -10+i1 >= 0 /\ -10+i1 == 0 /\ -1+i6 > 0) /\ i3'=2*i6+i3+2*i4+2*i5*(-1+i6), i4'=i5, i6'=0

Dependency graph:
9 -> 11, 9 -> 14
11 -> 9, 11 -> 25, 11 -> 27, 11 -> 28, 11 -> 29
14 -> 9, 14 -> 25, 14 -> 27, 14 -> 28, 14 -> 29
26 -> 9, 26 -> 25, 26 -> 27, 26 -> 28, 26 -> 29
27 -> 9, 27 -> 25, 27 -> 28
28 -> 9, 28 -> 25, 28 -> 27, 28 -> 29
29 -> 9, 29 -> 25, 29 -> 27, 29 -> 28

	Trace

	26[(-1+i1 == 0)]
	29[(i6 > 0 /\ -2+i6 >= 0 /\ 1 > 0 /\ 10-i1 >= 0 /\ -1+i4 >= 0 /\ -1+i5 >= 0 /\ -10+i1 >= 0 /\ -10+i1 == 0 /\ -1+i6 > 0)]
	
	Blocked

	{}
	{25[T]}
	{29[T]}
	
Step with 25

	Trace

	26[(-1+i1 == 0)]
	29[(i6 > 0 /\ -2+i6 >= 0 /\ 1 > 0 /\ 10-i1 >= 0 /\ -1+i4 >= 0 /\ -1+i5 >= 0 /\ -10+i1 >= 0 /\ -10+i1 == 0 /\ -1+i6 > 0)]
	25[(i6 <= 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{25[T]}
	{28[T], 29[T]}
	{}
	
Backtrack

	Trace

	26[(-1+i1 == 0)]
	29[(i6 > 0 /\ -2+i6 >= 0 /\ 1 > 0 /\ 10-i1 >= 0 /\ -1+i4 >= 0 /\ -1+i5 >= 0 /\ -10+i1 >= 0 /\ -10+i1 == 0 /\ -1+i6 > 0)]
	
	Blocked

	{}
	{25[T]}
	{25[T], 28[T], 29[T]}
	
Backtrack

	Trace

	26[(-1+i1 == 0)]
	
	Blocked

	{}
	{25[T], 29[T]}
	
Step with 27

	Trace

	26[(-1+i1 == 0)]
	27[(i6 > 0 /\ 1 > 0 /\ 10-i1 >= 0 /\ -1+i4 >= 0 /\ -10+i1 >= 0)]
	
	Blocked

	{}
	{25[T], 29[T]}
	{27[T]}
	
Step with 9

	Trace

	26[(-1+i1 == 0)]
	27[(i6 > 0 /\ 1 > 0 /\ 10-i1 >= 0 /\ -1+i4 >= 0 /\ -10+i1 >= 0)]
	9[(i6 > 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{25[T], 29[T]}
	{27[T], 28[T]}
	{}
	
Step with 14

	Trace

	26[(-1+i1 == 0)]
	27[(i6 > 0 /\ 1 > 0 /\ 10-i1 >= 0 /\ -1+i4 >= 0 /\ -10+i1 >= 0)]
	9[(i6 > 0 /\ -10+i1 == 0)]
	14[(-11+i1 == 0 /\ i4 <= 0)]
	
	Blocked

	{}
	{25[T], 29[T]}
	{27[T], 28[T]}
	{}
	{}
	
Covered

	Trace

	26[(-1+i1 == 0)]
	27[(i6 > 0 /\ 1 > 0 /\ 10-i1 >= 0 /\ -1+i4 >= 0 /\ -10+i1 >= 0)]
	9[(i6 > 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{25[T], 29[T]}
	{27[T], 28[T]}
	{14[T]}
	
Backtrack

	Trace

	26[(-1+i1 == 0)]
	27[(i6 > 0 /\ 1 > 0 /\ 10-i1 >= 0 /\ -1+i4 >= 0 /\ -10+i1 >= 0)]
	
	Blocked

	{}
	{25[T], 29[T]}
	{9[T], 27[T], 28[T]}
	
Backtrack

	Trace

	26[(-1+i1 == 0)]
	
	Blocked

	{}
	{25[T], 27[T], 29[T]}
	
Step with 9

	Trace

	26[(-1+i1 == 0)]
	9[(i6 > 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{25[T], 27[T], 28[T], 29[T]}
	{}
	
Step with 14

	Trace

	26[(-1+i1 == 0)]
	9[(i6 > 0 /\ -10+i1 == 0)]
	14[(-11+i1 == 0 /\ i4 <= 0)]
	
	Blocked

	{}
	{25[T], 27[T], 28[T], 29[T]}
	{}
	{}
	
Step with 25

	Trace

	26[(-1+i1 == 0)]
	9[(i6 > 0 /\ -10+i1 == 0)]
	14[(-11+i1 == 0 /\ i4 <= 0)]
	25[(i6 <= 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{25[T], 27[T], 28[T], 29[T]}
	{}
	{}
	{}
	
Backtrack

	Trace

	26[(-1+i1 == 0)]
	9[(i6 > 0 /\ -10+i1 == 0)]
	14[(-11+i1 == 0 /\ i4 <= 0)]
	
	Blocked

	{}
	{25[T], 27[T], 28[T], 29[T]}
	{}
	{25[T]}
	
Step with 27

	Trace

	26[(-1+i1 == 0)]
	9[(i6 > 0 /\ -10+i1 == 0)]
	14[(-11+i1 == 0 /\ i4 <= 0)]
	27[(i6 > 0 /\ 1 > 0 /\ 10-i1 >= 0 /\ -1+i4 >= 0 /\ -10+i1 >= 0)]
	
	Blocked

	{}
	{25[T], 27[T], 28[T], 29[T]}
	{}
	{25[T]}
	{27[T]}
	
Accelerate

		Extracted Implied Equalities

		Original rule:
		(0 >= 0 /\ 0 == 0 /\ i6 > 0 /\ 1 > 0 /\ i4 <= 0 /\ -1+i5 >= 0 /\ -10+i1 == 0 /\ -1+i6 > 0) /\ i1'=10, i3'=2+i3+2*i5, i4'=0, i6'=-1+i6
		New rule:
		(0 >= 0 /\ 0 == 0 /\ i6 > 0 /\ 1 > 0 /\ i4 <= 0 /\ -1+i5 >= 0 /\ -10+i1 == 0 /\ -1+i6 > 0) /\ i1'=10, i3'=2+i3+2*i5, i4'=0, i6'=-1+i6
		
		Simplified Guard

		Original rule:
		(0 >= 0 /\ 0 == 0 /\ i6 > 0 /\ 1 > 0 /\ i4 <= 0 /\ -1+i5 >= 0 /\ -10+i1 == 0 /\ -1+i6 > 0) /\ i1'=10, i3'=2+i3+2*i5, i4'=0, i6'=-1+i6
		New rule:
		(i6 > 0 /\ i4 <= 0 /\ -1+i5 >= 0 /\ -10+i1 == 0 /\ -1+i6 > 0) /\ i1'=10, i3'=2+i3+2*i5, i4'=0, i6'=-1+i6

	Loop Acceleration

	Original rule:
	(i6 > 0 /\ i4 <= 0 /\ -1+i5 >= 0 /\ -10+i1 == 0 /\ -1+i6 > 0) /\ i1'=10, i3'=2+i3+2*i5, i4'=0, i6'=-1+i6
	New rule:
	(i6 > 0 /\ 10-i1 >= 0 /\ 1+i6-it128 > 0 /\ -1+i5 >= 0 /\ i6-it128 > 0 /\ -10+i1 >= 0 /\ -i4 >= 0 /\ -1+it128 >= 0 /\ -1+i6 > 0) /\ i1'=i1, i3'=i3+2*it128+2*it128*i5, i4'=0, i6'=i6-it128

		i6 > 0 [0]: montonic decrease yields (i6 > 0 /\ 1+i6-it128 > 0)
		
		10-i1 >= 0 [0]: unchanged
		
		-1+i5 >= 0 [0]: unchanged
		
		-10+i1 >= 0 [0]: unchanged
		
		-i4 >= 0 [0]: trivial
		
		-1+i6 > 0 [0]: montonic decrease yields (i6-it128 > 0 /\ -1+i6 > 0)
		
		Replacement map: {i6 > 0 -> (i6 > 0 /\ 1+i6-it128 > 0), 10-i1 >= 0 -> 10-i1 >= 0, -1+i5 >= 0 -> -1+i5 >= 0, -10+i1 >= 0 -> -10+i1 >= 0, -i4 >= 0 -> -i4 >= 0, -1+i6 > 0 -> (i6-it128 > 0 /\ -1+i6 > 0)}

	Removed Trivial Updates

	Original rule:
	(i6 > 0 /\ 10-i1 >= 0 /\ 1+i6-it128 > 0 /\ -1+i5 >= 0 /\ i6-it128 > 0 /\ -10+i1 >= 0 /\ -i4 >= 0 /\ -1+it128 >= 0 /\ -1+i6 > 0) /\ i1'=i1, i3'=i3+2*it128+2*it128*i5, i4'=0, i6'=i6-it128
	New rule:
	(i6 > 0 /\ 10-i1 >= 0 /\ 1+i6-it128 > 0 /\ -1+i5 >= 0 /\ i6-it128 > 0 /\ -10+i1 >= 0 /\ -i4 >= 0 /\ -1+it128 >= 0 /\ -1+i6 > 0) /\ i3'=i3+2*it128+2*it128*i5, i4'=0, i6'=i6-it128
	
	Instantiation

	Original rule:
	(i6 > 0 /\ 10-i1 >= 0 /\ 1+i6-it128 > 0 /\ -1+i5 >= 0 /\ i6-it128 > 0 /\ -10+i1 >= 0 /\ -i4 >= 0 /\ -1+it128 >= 0 /\ -1+i6 > 0) /\ i3'=i3+2*it128+2*it128*i5, i4'=0, i6'=i6-it128
	New rule:
	(i6 > 0 /\ -2+i6 >= 0 /\ 1 > 0 /\ 10-i1 >= 0 /\ 2 > 0 /\ -1+i5 >= 0 /\ -10+i1 >= 0 /\ -i4 >= 0 /\ -1+i6 > 0) /\ i3'=-2+2*i6+i3+2*i5*(-1+i6), i4'=0, i6'=1

Start location: eval_cousot9_start

Location map:
LoAT_sink -> 0
eval_cousot9_start -> 1
eval_cousot9_bb0_in -> 2
eval_cousot9_0 -> 3
eval_cousot9_1 -> 4
eval_cousot9_2 -> 5
eval_cousot9_3 -> 6
eval_cousot9_4 -> 7
eval_cousot9_5 -> 8
eval_cousot9_6 -> 9
eval_cousot9_bb1_in -> 10
eval_cousot9_bb2_in -> 11
eval_cousot9_bb3_in -> 12
eval_cousot9_stop -> 13

Rules:
   9: (i6 > 0 /\ -10+i1 == 0) /\ i1'=11, i3'=1+i3
  11: (-11+i1 == 0 /\ i4 > 0) /\ i1'=10, i3'=1+i3, i4'=-1+i4
  12: (-11+i1 == 0 /\ i4 <= 0 /\ i4 > 0) /\ i1'=10, i3'=1+i3, i4'=i5
  13: (-11+i1 == 0 /\ i4 <= 0 /\ i4 > 0) /\ i1'=10, i3'=1+i3, i4'=-1+i4, i6'=-1+i6
  14: (-11+i1 == 0 /\ i4 <= 0) /\ i1'=10, i3'=1+i3, i4'=i5, i6'=-1+i6
  25: (i6 <= 0 /\ -10+i1 == 0) /\ i1'=13, i3'=2+i3
  26: -1+i1 == 0 /\ i1'=10, i3'=9+i3, i4'=i7, i6'=i5
  27: (i6 > 0 /\ 1 > 0 /\ 10-i1 >= 0 /\ -1+i4 >= 0 /\ -10+i1 >= 0) /\ i3'=i3+2*i4, i4'=0
  28: (i6 > 0 /\ 1 > 0 /\ 10-i1 >= 0 /\ -i5 >= 0 /\ -10+i1 >= 0 /\ -i4 >= 0 /\ -1+i6 >= 0) /\ i3'=2*i6+i3, i4'=i5, i6'=0
  29: (i6 > 0 /\ -2+i6 >= 0 /\ 1 > 0 /\ 10-i1 >= 0 /\ -1+i4 >= 0 /\ -1+i5 >= 0 /\ -10+i1 >= 0 /\ -10+i1 == 0 /\ -1+i6 > 0) /\ i3'=2*i6+i3+2*i4+2*i5*(-1+i6), i4'=i5, i6'=0
  30: (i6 > 0 /\ -2+i6 >= 0 /\ 1 > 0 /\ 10-i1 >= 0 /\ 2 > 0 /\ -1+i5 >= 0 /\ -10+i1 >= 0 /\ -i4 >= 0 /\ -1+i6 > 0) /\ i3'=-2+2*i6+i3+2*i5*(-1+i6), i4'=0, i6'=1

Dependency graph:
9 -> 11, 9 -> 14
11 -> 9, 11 -> 25, 11 -> 27, 11 -> 28, 11 -> 29, 11 -> 30
14 -> 9, 14 -> 25, 14 -> 27, 14 -> 28, 14 -> 29, 14 -> 30
26 -> 9, 26 -> 25, 26 -> 27, 26 -> 28, 26 -> 29, 26 -> 30
27 -> 9, 27 -> 25, 27 -> 28, 27 -> 30
28 -> 9, 28 -> 25, 28 -> 27, 28 -> 29, 28 -> 30
29 -> 9, 29 -> 25, 29 -> 27, 29 -> 28, 29 -> 30
30 -> 9, 30 -> 25, 30 -> 28

	Trace

	26[(-1+i1 == 0)]
	30[(i6 > 0 /\ -2+i6 >= 0 /\ 1 > 0 /\ 10-i1 >= 0 /\ 2 > 0 /\ -1+i5 >= 0 /\ -10+i1 >= 0 /\ -i4 >= 0 /\ -1+i6 > 0)]
	
	Blocked

	{}
	{25[T], 27[T], 28[T], 29[T]}
	{30[T]}
	
Step with 9

	Trace

	26[(-1+i1 == 0)]
	30[(i6 > 0 /\ -2+i6 >= 0 /\ 1 > 0 /\ 10-i1 >= 0 /\ 2 > 0 /\ -1+i5 >= 0 /\ -10+i1 >= 0 /\ -i4 >= 0 /\ -1+i6 > 0)]
	9[(i6 > 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{25[T], 27[T], 28[T], 29[T]}
	{30[T]}
	{}
	
Step with 14

	Trace

	26[(-1+i1 == 0)]
	30[(i6 > 0 /\ -2+i6 >= 0 /\ 1 > 0 /\ 10-i1 >= 0 /\ 2 > 0 /\ -1+i5 >= 0 /\ -10+i1 >= 0 /\ -i4 >= 0 /\ -1+i6 > 0)]
	9[(i6 > 0 /\ -10+i1 == 0)]
	14[(-11+i1 == 0 /\ i4 <= 0)]
	
	Blocked

	{}
	{25[T], 27[T], 28[T], 29[T]}
	{30[T]}
	{11[T]}
	{}
	
Step with 25

	Trace

	26[(-1+i1 == 0)]
	30[(i6 > 0 /\ -2+i6 >= 0 /\ 1 > 0 /\ 10-i1 >= 0 /\ 2 > 0 /\ -1+i5 >= 0 /\ -10+i1 >= 0 /\ -i4 >= 0 /\ -1+i6 > 0)]
	9[(i6 > 0 /\ -10+i1 == 0)]
	14[(-11+i1 == 0 /\ i4 <= 0)]
	25[(i6 <= 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{25[T], 27[T], 28[T], 29[T]}
	{30[T]}
	{11[T]}
	{9[T], 27[T], 28[T], 29[T], 30[T]}
	{}
	
Backtrack

	Trace

	26[(-1+i1 == 0)]
	30[(i6 > 0 /\ -2+i6 >= 0 /\ 1 > 0 /\ 10-i1 >= 0 /\ 2 > 0 /\ -1+i5 >= 0 /\ -10+i1 >= 0 /\ -i4 >= 0 /\ -1+i6 > 0)]
	9[(i6 > 0 /\ -10+i1 == 0)]
	14[(-11+i1 == 0 /\ i4 <= 0)]
	
	Blocked

	{}
	{25[T], 27[T], 28[T], 29[T]}
	{30[T]}
	{11[T]}
	{9[T], 25[T], 27[T], 28[T], 29[T], 30[T]}
	
Backtrack

	Trace

	26[(-1+i1 == 0)]
	30[(i6 > 0 /\ -2+i6 >= 0 /\ 1 > 0 /\ 10-i1 >= 0 /\ 2 > 0 /\ -1+i5 >= 0 /\ -10+i1 >= 0 /\ -i4 >= 0 /\ -1+i6 > 0)]
	9[(i6 > 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{25[T], 27[T], 28[T], 29[T]}
	{30[T]}
	{11[T], 14[T]}
	
Backtrack

	Trace

	26[(-1+i1 == 0)]
	30[(i6 > 0 /\ -2+i6 >= 0 /\ 1 > 0 /\ 10-i1 >= 0 /\ 2 > 0 /\ -1+i5 >= 0 /\ -10+i1 >= 0 /\ -i4 >= 0 /\ -1+i6 > 0)]
	
	Blocked

	{}
	{25[T], 27[T], 28[T], 29[T]}
	{9[T], 30[T]}
	
Backtrack

	Trace

	26[(-1+i1 == 0)]
	
	Blocked

	{}
	{25[T], 27[T], 28[T], 29[T], 30[T]}
	
Step with 9

	Trace

	26[(-1+i1 == 0)]
	9[(i6 > 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{25[T], 27[T], 28[T], 29[T], 30[T]}
	{}
	
Step with 11

	Trace

	26[(-1+i1 == 0)]
	9[(i6 > 0 /\ -10+i1 == 0)]
	11[(-11+i1 == 0 /\ i4 > 0)]
	
	Blocked

	{}
	{25[T], 27[T], 28[T], 29[T], 30[T]}
	{}
	{}
	
Covered

	Trace

	26[(-1+i1 == 0)]
	9[(i6 > 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{25[T], 27[T], 28[T], 29[T], 30[T]}
	{11[T]}
	
Step with 14

	Trace

	26[(-1+i1 == 0)]
	9[(i6 > 0 /\ -10+i1 == 0)]
	14[(-11+i1 == 0 /\ i4 <= 0)]
	
	Blocked

	{}
	{25[T], 27[T], 28[T], 29[T], 30[T]}
	{11[T]}
	{}
	
Step with 27

	Trace

	26[(-1+i1 == 0)]
	9[(i6 > 0 /\ -10+i1 == 0)]
	14[(-11+i1 == 0 /\ i4 <= 0)]
	27[(i6 > 0 /\ 1 > 0 /\ 10-i1 >= 0 /\ -1+i4 >= 0 /\ -10+i1 >= 0)]
	
	Blocked

	{}
	{25[T], 27[T], 28[T], 29[T], 30[T]}
	{11[T]}
	{}
	{27[T]}
	
Covered

	Trace

	26[(-1+i1 == 0)]
	9[(i6 > 0 /\ -10+i1 == 0)]
	14[(-11+i1 == 0 /\ i4 <= 0)]
	
	Blocked

	{}
	{25[T], 27[T], 28[T], 29[T], 30[T]}
	{11[T]}
	{27[T]}
	
Step with 9

	Trace

	26[(-1+i1 == 0)]
	9[(i6 > 0 /\ -10+i1 == 0)]
	14[(-11+i1 == 0 /\ i4 <= 0)]
	9[(i6 > 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{25[T], 27[T], 28[T], 29[T], 30[T]}
	{11[T]}
	{27[T]}
	{}
	
Accelerate and Drop

		Simplified Guard

		Original rule:
		(0 == 0 /\ -11+i1 == 0 /\ i4 <= 0 /\ -1+i6 > 0) /\ i1'=11, i3'=2+i3, i4'=i5, i6'=-1+i6
		New rule:
		(-11+i1 == 0 /\ i4 <= 0 /\ -1+i6 > 0) /\ i1'=11, i3'=2+i3, i4'=i5, i6'=-1+i6

	Loop Acceleration

	Original rule:
	(-11+i1 == 0 /\ i4 <= 0 /\ -1+i6 > 0) /\ i1'=11, i3'=2+i3, i4'=i5, i6'=-1+i6
	New rule:
	(-11+i1 >= 0 /\ -i5 >= 0 /\ -1+it183 >= 0 /\ 11-i1 >= 0 /\ -i4 >= 0 /\ i6-it183 > 0 /\ -1+i6 > 0) /\ i1'=i1, i3'=i3+2*it183, i4'=i5, i6'=i6-it183

		-11+i1 >= 0 [0]: unchanged
		
		11-i1 >= 0 [0]: unchanged
		
		-i4 >= 0 [0]: eventual decrease yields (-i5 >= 0 /\ -i4 >= 0)
		
		-i4 >= 0 [1]: eventual increase yields (-i4+i5 <= 0 /\ -i4 >= 0)
		
		-1+i6 > 0 [0]: montonic decrease yields (i6-it183 > 0 /\ -1+i6 > 0)
		
		Replacement map: {-11+i1 >= 0 -> -11+i1 >= 0, 11-i1 >= 0 -> 11-i1 >= 0, -i4 >= 0 -> (-i5 >= 0 /\ -i4 >= 0), -1+i6 > 0 -> (i6-it183 > 0 /\ -1+i6 > 0)}

	Removed Trivial Updates

	Original rule:
	(-11+i1 >= 0 /\ -i5 >= 0 /\ -1+it183 >= 0 /\ 11-i1 >= 0 /\ -i4 >= 0 /\ i6-it183 > 0 /\ -1+i6 > 0) /\ i1'=i1, i3'=i3+2*it183, i4'=i5, i6'=i6-it183
	New rule:
	(-11+i1 >= 0 /\ -i5 >= 0 /\ -1+it183 >= 0 /\ 11-i1 >= 0 /\ -i4 >= 0 /\ i6-it183 > 0 /\ -1+i6 > 0) /\ i3'=i3+2*it183, i4'=i5, i6'=i6-it183
	
	Instantiation

	Original rule:
	(-11+i1 >= 0 /\ -i5 >= 0 /\ -1+it183 >= 0 /\ 11-i1 >= 0 /\ -i4 >= 0 /\ i6-it183 > 0 /\ -1+i6 > 0) /\ i3'=i3+2*it183, i4'=i5, i6'=i6-it183
	New rule:
	(-2+i6 >= 0 /\ 1 > 0 /\ -11+i1 >= 0 /\ -i5 >= 0 /\ 11-i1 >= 0 /\ -i4 >= 0 /\ -1+i6 > 0) /\ i3'=-2+2*i6+i3, i4'=i5, i6'=1

Start location: eval_cousot9_start

Location map:
LoAT_sink -> 0
eval_cousot9_start -> 1
eval_cousot9_bb0_in -> 2
eval_cousot9_0 -> 3
eval_cousot9_1 -> 4
eval_cousot9_2 -> 5
eval_cousot9_3 -> 6
eval_cousot9_4 -> 7
eval_cousot9_5 -> 8
eval_cousot9_6 -> 9
eval_cousot9_bb1_in -> 10
eval_cousot9_bb2_in -> 11
eval_cousot9_bb3_in -> 12
eval_cousot9_stop -> 13

Rules:
   9: (i6 > 0 /\ -10+i1 == 0) /\ i1'=11, i3'=1+i3
  11: (-11+i1 == 0 /\ i4 > 0) /\ i1'=10, i3'=1+i3, i4'=-1+i4
  12: (-11+i1 == 0 /\ i4 <= 0 /\ i4 > 0) /\ i1'=10, i3'=1+i3, i4'=i5
  13: (-11+i1 == 0 /\ i4 <= 0 /\ i4 > 0) /\ i1'=10, i3'=1+i3, i4'=-1+i4, i6'=-1+i6
  14: (-11+i1 == 0 /\ i4 <= 0) /\ i1'=10, i3'=1+i3, i4'=i5, i6'=-1+i6
  25: (i6 <= 0 /\ -10+i1 == 0) /\ i1'=13, i3'=2+i3
  26: -1+i1 == 0 /\ i1'=10, i3'=9+i3, i4'=i7, i6'=i5
  27: (i6 > 0 /\ 1 > 0 /\ 10-i1 >= 0 /\ -1+i4 >= 0 /\ -10+i1 >= 0) /\ i3'=i3+2*i4, i4'=0
  28: (i6 > 0 /\ 1 > 0 /\ 10-i1 >= 0 /\ -i5 >= 0 /\ -10+i1 >= 0 /\ -i4 >= 0 /\ -1+i6 >= 0) /\ i3'=2*i6+i3, i4'=i5, i6'=0
  29: (i6 > 0 /\ -2+i6 >= 0 /\ 1 > 0 /\ 10-i1 >= 0 /\ -1+i4 >= 0 /\ -1+i5 >= 0 /\ -10+i1 >= 0 /\ -10+i1 == 0 /\ -1+i6 > 0) /\ i3'=2*i6+i3+2*i4+2*i5*(-1+i6), i4'=i5, i6'=0
  30: (i6 > 0 /\ -2+i6 >= 0 /\ 1 > 0 /\ 10-i1 >= 0 /\ 2 > 0 /\ -1+i5 >= 0 /\ -10+i1 >= 0 /\ -i4 >= 0 /\ -1+i6 > 0) /\ i3'=-2+2*i6+i3+2*i5*(-1+i6), i4'=0, i6'=1
  31: (-2+i6 >= 0 /\ 1 > 0 /\ -11+i1 >= 0 /\ -i5 >= 0 /\ 11-i1 >= 0 /\ -i4 >= 0 /\ -1+i6 > 0) /\ i3'=-2+2*i6+i3, i4'=i5, i6'=1

Dependency graph:
9 -> 11, 9 -> 14, 9 -> 31
11 -> 9, 11 -> 25, 11 -> 27, 11 -> 28, 11 -> 29, 11 -> 30
14 -> 9, 14 -> 25, 14 -> 27, 14 -> 28, 14 -> 29, 14 -> 30
26 -> 9, 26 -> 25, 26 -> 27, 26 -> 28, 26 -> 29, 26 -> 30
27 -> 9, 27 -> 25, 27 -> 28, 27 -> 30
28 -> 9, 28 -> 25, 28 -> 27, 28 -> 29, 28 -> 30
29 -> 9, 29 -> 25, 29 -> 27, 29 -> 28, 29 -> 30
30 -> 9, 30 -> 25, 30 -> 28
31 -> 11, 31 -> 14

	Trace

	26[(-1+i1 == 0)]
	9[(i6 > 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{25[T], 27[T], 28[T], 29[T], 30[T]}
	{11[T]}
	
Step with 14

	Trace

	26[(-1+i1 == 0)]
	9[(i6 > 0 /\ -10+i1 == 0)]
	14[(-11+i1 == 0 /\ i4 <= 0)]
	
	Blocked

	{}
	{25[T], 27[T], 28[T], 29[T], 30[T]}
	{11[T], 31[T]}
	{}
	
Step with 9

	Trace

	26[(-1+i1 == 0)]
	9[(i6 > 0 /\ -10+i1 == 0)]
	14[(-11+i1 == 0 /\ i4 <= 0)]
	9[(i6 > 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{25[T], 27[T], 28[T], 29[T], 30[T]}
	{11[T], 31[T]}
	{}
	{}
	
Step with 11

	Trace

	26[(-1+i1 == 0)]
	9[(i6 > 0 /\ -10+i1 == 0)]
	14[(-11+i1 == 0 /\ i4 <= 0)]
	9[(i6 > 0 /\ -10+i1 == 0)]
	11[(-11+i1 == 0 /\ i4 > 0)]
	
	Blocked

	{}
	{25[T], 27[T], 28[T], 29[T], 30[T]}
	{11[T], 31[T]}
	{}
	{14[T]}
	{}
	
Covered

	Trace

	26[(-1+i1 == 0)]
	9[(i6 > 0 /\ -10+i1 == 0)]
	14[(-11+i1 == 0 /\ i4 <= 0)]
	9[(i6 > 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{25[T], 27[T], 28[T], 29[T], 30[T]}
	{11[T], 31[T]}
	{}
	{11[T], 14[T]}
	
Backtrack

	Trace

	26[(-1+i1 == 0)]
	9[(i6 > 0 /\ -10+i1 == 0)]
	14[(-11+i1 == 0 /\ i4 <= 0)]
	
	Blocked

	{}
	{25[T], 27[T], 28[T], 29[T], 30[T]}
	{11[T], 31[T]}
	{9[T]}
	
Step with 27

	Trace

	26[(-1+i1 == 0)]
	9[(i6 > 0 /\ -10+i1 == 0)]
	14[(-11+i1 == 0 /\ i4 <= 0)]
	27[(i6 > 0 /\ 1 > 0 /\ 10-i1 >= 0 /\ -1+i4 >= 0 /\ -10+i1 >= 0)]
	
	Blocked

	{}
	{25[T], 27[T], 28[T], 29[T], 30[T]}
	{11[T], 31[T]}
	{9[T]}
	{27[T]}
	
Covered

	Trace

	26[(-1+i1 == 0)]
	9[(i6 > 0 /\ -10+i1 == 0)]
	14[(-11+i1 == 0 /\ i4 <= 0)]
	
	Blocked

	{}
	{25[T], 27[T], 28[T], 29[T], 30[T]}
	{11[T], 31[T]}
	{9[T], 27[T]}
	
Step with 25

	Trace

	26[(-1+i1 == 0)]
	9[(i6 > 0 /\ -10+i1 == 0)]
	14[(-11+i1 == 0 /\ i4 <= 0)]
	25[(i6 <= 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{25[T], 27[T], 28[T], 29[T], 30[T]}
	{11[T], 31[T]}
	{9[T], 27[T], 28[T], 30[T]}
	{}
	
Backtrack

	Trace

	26[(-1+i1 == 0)]
	9[(i6 > 0 /\ -10+i1 == 0)]
	14[(-11+i1 == 0 /\ i4 <= 0)]
	
	Blocked

	{}
	{25[T], 27[T], 28[T], 29[T], 30[T]}
	{11[T], 31[T]}
	{9[T], 25[T], 27[T], 28[T], 30[T]}
	
Step with 29

	Trace

	26[(-1+i1 == 0)]
	9[(i6 > 0 /\ -10+i1 == 0)]
	14[(-11+i1 == 0 /\ i4 <= 0)]
	29[(i6 > 0 /\ -2+i6 >= 0 /\ 1 > 0 /\ 10-i1 >= 0 /\ -1+i4 >= 0 /\ -1+i5 >= 0 /\ -10+i1 >= 0 /\ -10+i1 == 0 /\ -1+i6 > 0)]
	
	Blocked

	{}
	{25[T], 27[T], 28[T], 29[T], 30[T]}
	{11[T], 31[T]}
	{9[T], 25[T], 27[T], 28[T], 30[T]}
	{29[T]}
	
Step with 25

	Trace

	26[(-1+i1 == 0)]
	9[(i6 > 0 /\ -10+i1 == 0)]
	14[(-11+i1 == 0 /\ i4 <= 0)]
	29[(i6 > 0 /\ -2+i6 >= 0 /\ 1 > 0 /\ 10-i1 >= 0 /\ -1+i4 >= 0 /\ -1+i5 >= 0 /\ -10+i1 >= 0 /\ -10+i1 == 0 /\ -1+i6 > 0)]
	25[(i6 <= 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{25[T], 27[T], 28[T], 29[T], 30[T]}
	{11[T], 31[T]}
	{9[T], 25[T], 27[T], 28[T], 30[T]}
	{29[T], 30[T]}
	{}
	
Backtrack

	Trace

	26[(-1+i1 == 0)]
	9[(i6 > 0 /\ -10+i1 == 0)]
	14[(-11+i1 == 0 /\ i4 <= 0)]
	29[(i6 > 0 /\ -2+i6 >= 0 /\ 1 > 0 /\ 10-i1 >= 0 /\ -1+i4 >= 0 /\ -1+i5 >= 0 /\ -10+i1 >= 0 /\ -10+i1 == 0 /\ -1+i6 > 0)]
	
	Blocked

	{}
	{25[T], 27[T], 28[T], 29[T], 30[T]}
	{11[T], 31[T]}
	{9[T], 25[T], 27[T], 28[T], 30[T]}
	{25[T], 29[T], 30[T]}
	
Backtrack

	Trace

	26[(-1+i1 == 0)]
	9[(i6 > 0 /\ -10+i1 == 0)]
	14[(-11+i1 == 0 /\ i4 <= 0)]
	
	Blocked

	{}
	{25[T], 27[T], 28[T], 29[T], 30[T]}
	{11[T], 31[T]}
	{9[T], 25[T], 27[T], 28[T], 29[T], 30[T]}
	
Backtrack

	Trace

	26[(-1+i1 == 0)]
	9[(i6 > 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{25[T], 27[T], 28[T], 29[T], 30[T]}
	{11[T], 14[T], 31[T]}
	
Backtrack

	Trace

	26[(-1+i1 == 0)]
	
	Blocked

	{}
	{9[T], 25[T], 27[T], 28[T], 29[T], 30[T]}
	
Backtrack

	Trace

	Blocked

	{26[T]}
	
Accept

Poly(n^2)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^2))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃
  Temp_Vars:  
  Locations:  l0, l1, l10, l11, l12, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, X₃)
  t₃: l1(X₀, X₁, X₂, X₃) → l4(X₀, X₁, X₂, X₃)
  t₁₁: l10(X₀, X₁, X₂, X₃) → l9(X₀-1, X₁, X₂, X₃) :|: 1 ≤ X₀
  t₁₂: l10(X₀, X₁, X₂, X₃) → l9(X₁, X₁, X₂, X₃) :|: 1 ≤ X₀ ∧ X₀ ≤ 0
  t₁₃: l10(X₀, X₁, X₂, X₃) → l9(X₀-1, X₁, X₂-1, X₃) :|: 1 ≤ X₀ ∧ X₀ ≤ 0
  t₁₄: l10(X₀, X₁, X₂, X₃) → l9(X₁, X₁, X₂-1, X₃) :|: X₀ ≤ 0
  t₁₅: l11(X₀, X₁, X₂, X₃) → l12(X₀, X₁, X₂, X₃)
  t₁: l2(X₀, X₁, X₂, X₃) → l3(X₀, X₁, X₂, X₃)
  t₂: l3(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, X₃)
  t₄: l4(X₀, X₁, X₂, X₃) → l5(X₀, X₁, X₂, X₃)
  t₅: l5(X₀, X₁, X₂, X₃) → l6(X₀, X₁, X₂, X₃)
  t₆: l6(X₀, X₁, X₂, X₃) → l7(X₀, X₁, X₂, X₃)
  t₇: l7(X₀, X₁, X₂, X₃) → l8(X₀, X₁, X₂, X₃)
  t₈: l8(X₀, X₁, X₂, X₃) → l9(X₃, X₁, X₁, X₃)
  t₉: l9(X₀, X₁, X₂, X₃) → l10(X₀, X₁, X₂, X₃) :|: 1 ≤ X₂
  t₁₀: l9(X₀, X₁, X₂, X₃) → l11(X₀, X₁, X₂, X₃) :|: X₂ ≤ 0


Preprocessing
  Cut unsatisfiable transition [t₁₂: l10→l9; t₁₃: l10→l9]


  Found invariant X₂ ≤ 0 ∧ X₂ ≤ X₁ for location l11


  Found invariant X₂ ≤ 0 ∧ X₂ ≤ X₁ for location l12


  Found invariant X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 1 ≤ X₁ for location l10


  Found invariant X₂ ≤ X₁ for location l9


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃
  Temp_Vars:  
  Locations:  l0, l1, l10, l11, l12, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, X₃)
  t₃: l1(X₀, X₁, X₂, X₃) → l4(X₀, X₁, X₂, X₃)
  t₁₁: l10(X₀, X₁, X₂, X₃) → l9(X₀-1, X₁, X₂, X₃) :|: 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ X₂ ≤ X₁
  t₁₄: l10(X₀, X₁, X₂, X₃) → l9(X₁, X₁, X₂-1, X₃) :|: X₀ ≤ 0 ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ X₂ ≤ X₁
  t₁₅: l11(X₀, X₁, X₂, X₃) → l12(X₀, X₁, X₂, X₃) :|: X₂ ≤ X₁ ∧ X₂ ≤ 0
  t₁: l2(X₀, X₁, X₂, X₃) → l3(X₀, X₁, X₂, X₃)
  t₂: l3(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, X₃)
  t₄: l4(X₀, X₁, X₂, X₃) → l5(X₀, X₁, X₂, X₃)
  t₅: l5(X₀, X₁, X₂, X₃) → l6(X₀, X₁, X₂, X₃)
  t₆: l6(X₀, X₁, X₂, X₃) → l7(X₀, X₁, X₂, X₃)
  t₇: l7(X₀, X₁, X₂, X₃) → l8(X₀, X₁, X₂, X₃)
  t₈: l8(X₀, X₁, X₂, X₃) → l9(X₃, X₁, X₁, X₃)
  t₉: l9(X₀, X₁, X₂, X₃) → l10(X₀, X₁, X₂, X₃) :|: 1 ≤ X₂ ∧ X₂ ≤ X₁
  t₁₀: l9(X₀, X₁, X₂, X₃) → l11(X₀, X₁, X₂, X₃) :|: X₂ ≤ 0 ∧ X₂ ≤ X₁


MPRF for transition t₁₄: l10(X₀, X₁, X₂, X₃) → l9(X₁, X₁, X₂-1, X₃) :|: X₀ ≤ 0 ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ X₂ ≤ X₁ of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l10: [X₂]
    • l9: [X₂]




TWN: t₁₁: l10→l9


  cycle: [t₁₁: l10→l9; t₉: l9→l10]
  original loop: (1 ≤ X₂ ∧ X₂ ≤ X₁ ∧ 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ X₂ ≤ X₁,(X₀,X₁,X₂) -> (X₀-1,X₁,X₂))
  transformed loop: (1 ≤ X₂ ∧ X₂ ≤ X₁ ∧ 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ X₂ ≤ X₁,(X₀,X₁,X₂) -> (X₀-1,X₁,X₂))
  loop: (1 ≤ X₂ ∧ X₂ ≤ X₁ ∧ 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ X₂ ≤ X₁,(X₀,X₁,X₂) -> (X₀-1,X₁,X₂))
  order: [X₂; X₁; X₀]
closed-form:  X₂: X₂
  X₁: X₁
  X₀: X₀ + [[n != 0]]⋅-1⋅n^1

  Termination: true
  Formula: 
    0 ≤ 1 ∧ X₀ ≤ 1 ∧ 1 ≤ 0 ∧ 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ X₂ ≤ X₁
     ∨ 0 ≤ 1 ∧ 1 ≤ 0 ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀ ∧ 2 ≤ X₁+X₂ ∧ X₂ ≤ X₁
     ∨ 1 ≤ 0 ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ X₂ ≤ X₁



Stabilization-Threshold for: 1 ≤ X₀
  alphas_abs: X₀
  M: 0
  N: 1
  Bound: 2⋅X₀+2 {O(n)}

  original loop: (1 ≤ X₂ ∧ X₂ ≤ X₁ ∧ 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ X₂ ≤ X₁,(X₀,X₁,X₂) -> (X₀-1,X₁,X₂))
  transformed loop: (1 ≤ X₂ ∧ X₂ ≤ X₁ ∧ 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ X₂ ≤ X₁,(X₀,X₁,X₂) -> (X₀-1,X₁,X₂))
  loop: (1 ≤ X₂ ∧ X₂ ≤ X₁ ∧ 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ X₂ ≤ X₁,(X₀,X₁,X₂) -> (X₀-1,X₁,X₂))
  order: [X₂; X₁; X₀]
closed-form:  X₂: X₂
  X₁: X₁
  X₀: X₀ + [[n != 0]]⋅-1⋅n^1

  Termination: true
  Formula: 
    0 ≤ 1 ∧ X₀ ≤ 1 ∧ 1 ≤ 0 ∧ 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ X₂ ≤ X₁
     ∨ 0 ≤ 1 ∧ 1 ≤ 0 ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀ ∧ 2 ≤ X₁+X₂ ∧ X₂ ≤ X₁
     ∨ 1 ≤ 0 ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ X₂ ≤ X₁



Stabilization-Threshold for: 1 ≤ X₀
  alphas_abs: X₀
  M: 0
  N: 1
  Bound: 2⋅X₀+2 {O(n)}

TWN - Lifting for [9: l9->l10; 11: l10->l9] of 2⋅X₀+4 {O(n)}
relevant size-bounds w.r.t. t₈: l8→l9:
X₀: X₃ {O(n)}
Runtime-bound of t₈: 1 {O(1)}
Results in: 2⋅X₃+4 {O(n)}
TWN - Lifting for [9: l9->l10; 11: l10->l9] of 2⋅X₀+4 {O(n)}
relevant size-bounds w.r.t. t₁₄: l10→l9:
X₀: X₁ {O(n)}
Runtime-bound of t₁₄: X₁ {O(n)}
Results in: 2⋅X₁^2+4⋅X₁ {O(n^2)}
  Found invariant 1+X₂ ≤ X₁ ∧ X₂ ≤ X₀ ∧ 1 ≤ X₂ ∧ 3 ≤ X₁+X₂ ∧ 2 ≤ X₀+X₂ ∧ X₁ ≤ 1+X₀ ∧ 2 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₀ for location l9_v3


  Found invariant X₂ ≤ 0 ∧ X₂ ≤ X₁ for location l12


  Found invariant 1+X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 3 ≤ X₁+X₂ ∧ 1 ≤ X₀+X₂ ∧ 2 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 2+X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l9_v4


  Found invariant 1+X₂ ≤ X₁ ∧ 1+X₂ ≤ X₀ ∧ 1 ≤ X₂ ∧ 3 ≤ X₁+X₂ ∧ 3 ≤ X₀+X₂ ∧ X₁ ≤ X₀ ∧ 2 ≤ X₁ ∧ 4 ≤ X₀+X₁ ∧ X₀ ≤ X₁ ∧ 2 ≤ X₀ for location l10_v3


  Found invariant X₂ ≤ 0 ∧ X₂ ≤ X₁ for location l11


  Found invariant 1 ≤ X₃ ∧ 2 ≤ X₂+X₃ ∧ 2 ≤ X₁+X₃ ∧ 1 ≤ X₀+X₃ ∧ 1+X₀ ≤ X₃ ∧ X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ X₁ ≤ X₂ ∧ 1 ≤ X₀+X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 0 ≤ X₀ for location l10_v2


  Found invariant 1+X₂ ≤ X₁ ∧ 1+X₂ ≤ X₀ ∧ 0 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 1 ≤ X₀+X₂ ∧ X₁ ≤ X₀ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ X₀ ≤ X₁ ∧ 1 ≤ X₀ for location l9_v1


  Found invariant 1 ≤ X₃ ∧ 2 ≤ X₂+X₃ ∧ 2 ≤ X₁+X₃ ∧ 1 ≤ X₀+X₃ ∧ 1+X₀ ≤ X₃ ∧ X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ X₁ ≤ X₂ ∧ 1 ≤ X₀+X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 0 ≤ X₀ for location l9_v2


  Found invariant 1+X₂ ≤ X₁ ∧ X₂ ≤ X₀ ∧ 1 ≤ X₂ ∧ 3 ≤ X₁+X₂ ∧ 2 ≤ X₀+X₂ ∧ X₁ ≤ 1+X₀ ∧ 2 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₀ for location l10_v4


  Found invariant X₃ ≤ X₀ ∧ X₀ ≤ X₃ ∧ X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ X₁ ≤ X₂ ∧ 1 ≤ X₁ for location l10_v1


  Found invariant 1+X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 3 ≤ X₁+X₂ ∧ 1 ≤ X₀+X₂ ∧ 2 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 2+X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l10_v5


  Found invariant X₃ ≤ X₀ ∧ X₀ ≤ X₃ ∧ X₂ ≤ X₁ ∧ X₁ ≤ X₂ for location l9


All Bounds
Timebounds
  Overall timebound:4⋅X₁^2+4⋅X₃+9⋅X₁+19 {O(n^2)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: 1 {O(1)}
    t₈: 1 {O(1)}
    t₉: 2⋅X₁^2+2⋅X₃+4⋅X₁+4 {O(n^2)}
    t₁₀: 1 {O(1)}
    t₁₁: 2⋅X₁^2+2⋅X₃+4⋅X₁+4 {O(n^2)}
    t₁₄: X₁ {O(n)}
    t₁₅: 1 {O(1)}


Costbounds
  Overall costbound: 4⋅X₁^2+4⋅X₃+9⋅X₁+19 {O(n^2)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: 1 {O(1)}
    t₈: 1 {O(1)}
    t₉: 2⋅X₁^2+2⋅X₃+4⋅X₁+4 {O(n^2)}
    t₁₀: 1 {O(1)}
    t₁₁: 2⋅X₁^2+2⋅X₃+4⋅X₁+4 {O(n^2)}
    t₁₄: X₁ {O(n)}
    t₁₅: 1 {O(1)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₀, X₂: X₂ {O(n)}
    t₀, X₃: X₃ {O(n)}
    t₁, X₀: X₀ {O(n)}
    t₁, X₁: X₁ {O(n)}
    t₁, X₂: X₂ {O(n)}
    t₁, X₃: X₃ {O(n)}
    t₂, X₀: X₀ {O(n)}
    t₂, X₁: X₁ {O(n)}
    t₂, X₂: X₂ {O(n)}
    t₂, X₃: X₃ {O(n)}
    t₃, X₀: X₀ {O(n)}
    t₃, X₁: X₁ {O(n)}
    t₃, X₂: X₂ {O(n)}
    t₃, X₃: X₃ {O(n)}
    t₄, X₀: X₀ {O(n)}
    t₄, X₁: X₁ {O(n)}
    t₄, X₂: X₂ {O(n)}
    t₄, X₃: X₃ {O(n)}
    t₅, X₀: X₀ {O(n)}
    t₅, X₁: X₁ {O(n)}
    t₅, X₂: X₂ {O(n)}
    t₅, X₃: X₃ {O(n)}
    t₆, X₀: X₀ {O(n)}
    t₆, X₁: X₁ {O(n)}
    t₆, X₂: X₂ {O(n)}
    t₆, X₃: X₃ {O(n)}
    t₇, X₀: X₀ {O(n)}
    t₇, X₁: X₁ {O(n)}
    t₇, X₂: X₂ {O(n)}
    t₇, X₃: X₃ {O(n)}
    t₈, X₀: X₃ {O(n)}
    t₈, X₁: X₁ {O(n)}
    t₈, X₂: X₁ {O(n)}
    t₈, X₃: X₃ {O(n)}
    t₉, X₀: X₁+X₃ {O(n)}
    t₉, X₁: X₁ {O(n)}
    t₉, X₂: X₁ {O(n)}
    t₉, X₃: X₃ {O(n)}
    t₁₀, X₀: X₁+X₃ {O(n)}
    t₁₀, X₁: 2⋅X₁ {O(n)}
    t₁₀, X₂: 2⋅X₁ {O(n)}
    t₁₀, X₃: 2⋅X₃ {O(n)}
    t₁₁, X₀: X₁+X₃ {O(n)}
    t₁₁, X₁: X₁ {O(n)}
    t₁₁, X₂: X₁ {O(n)}
    t₁₁, X₃: X₃ {O(n)}
    t₁₄, X₀: X₁ {O(n)}
    t₁₄, X₁: X₁ {O(n)}
    t₁₄, X₂: X₁ {O(n)}
    t₁₄, X₃: X₃ {O(n)}
    t₁₅, X₀: X₁+X₃ {O(n)}
    t₁₅, X₁: 2⋅X₁ {O(n)}
    t₁₅, X₂: 2⋅X₁ {O(n)}
    t₁₅, X₃: 2⋅X₃ {O(n)}

