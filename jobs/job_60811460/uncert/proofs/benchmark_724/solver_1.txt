WORST_CASE(Omega(n^1),O(n^1))

# LoAT Proof:
WORST_CASE(Omega(n^1),?)

WORST_CASE(Omega(n^1),?)
Initial ITS

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_bb1_in -> 7
eval_start_bb2_in -> 8
eval_start_bb4_in -> 9
eval_start_bb3_in -> 10
eval_start_6 -> 11
eval_start_7 -> 12
eval_start_stop -> 13

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: -2+i1 == 0 /\ i1'=3, i3'=1+i3
   2: -3+i1 == 0 /\ i1'=4, i3'=1+i3
   3: -4+i1 == 0 /\ i1'=5, i3'=1+i3
   4: -5+i1 == 0 /\ i1'=6, i3'=1+i3
   5: -6+i1 == 0 /\ i1'=7, i3'=1+i3, i7'=0
   6: (-7+i1 == 0 /\ -i6+i7 < 0) /\ i1'=8, i3'=1+i3, i8'=i7
   7: (-7+i1 == 0 /\ -i6+i7 >= 0) /\ i1'=9, i3'=1+i3
   8: (1-i6+i8 < 0 /\ -8+i1 == 0) /\ i1'=10, i3'=1+i3, i4'=1+i8
   9: (1-i6+i8 >= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i7'=1+i8
  10: -10+i1 == 0 /\ i1'=11, i3'=1+i3
  11: -11+i1 == 0 /\ i1'=12, i3'=1+i3, i5'=it2
  12: (i5 > 0 /\ -12+i1 == 0) /\ i1'=7, i3'=1+i3, i7'=i4
  13: (i5 <= 0 /\ -12+i1 == 0) /\ i1'=8, i3'=1+i3, i8'=i4
  14: -9+i1 == 0 /\ i1'=13, i3'=1+i3

Dependency graph:
0 -> 1
1 -> 2
2 -> 3
3 -> 4
4 -> 5
5 -> 6, 5 -> 7
6 -> 8, 6 -> 9
7 -> 14
8 -> 10
9 -> 6, 9 -> 7
10 -> 11
11 -> 12, 11 -> 13
12 -> 6, 12 -> 7
13 -> 8, 13 -> 9

Chained Linear Paths

	Applied Chaining

	First rule:
	-1+i1 == 0 /\ i1'=2, i3'=1+i3
	Second rule:
	-2+i1 == 0 /\ i1'=3, i3'=1+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 0, 1
	
	Applied Chaining

	First rule:
	-3+i1 == 0 /\ i1'=4, i3'=1+i3
	Second rule:
	-4+i1 == 0 /\ i1'=5, i3'=1+i3
	New rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 2, 3
	
	Applied Chaining

	First rule:
	-5+i1 == 0 /\ i1'=6, i3'=1+i3
	Second rule:
	-6+i1 == 0 /\ i1'=7, i3'=1+i3, i7'=0
	New rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=7, i3'=2+i3, i7'=0
	
	Applied Deletion

	Removed the following rules: 4, 5
	
	Applied Chaining

	First rule:
	(-7+i1 == 0 /\ -i6+i7 >= 0) /\ i1'=9, i3'=1+i3
	Second rule:
	-9+i1 == 0 /\ i1'=13, i3'=1+i3
	New rule:
	(0 == 0 /\ -7+i1 == 0 /\ -i6+i7 >= 0) /\ i1'=13, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 7, 14
	
	Applied Chaining

	First rule:
	(1-i6+i8 < 0 /\ -8+i1 == 0) /\ i1'=10, i3'=1+i3, i4'=1+i8
	Second rule:
	-10+i1 == 0 /\ i1'=11, i3'=1+i3
	New rule:
	(0 == 0 /\ 1-i6+i8 < 0 /\ -8+i1 == 0) /\ i1'=11, i3'=2+i3, i4'=1+i8
	
	Applied Deletion

	Removed the following rules: 8, 10
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	Second rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	
	Applied Deletion

	Removed the following rules: 15, 16
	
	Applied Chaining

	First rule:
	(0 == 0 /\ 1-i6+i8 < 0 /\ -8+i1 == 0) /\ i1'=11, i3'=2+i3, i4'=1+i8
	Second rule:
	-11+i1 == 0 /\ i1'=12, i3'=1+i3, i5'=it2
	New rule:
	(0 == 0 /\ 1-i6+i8 < 0 /\ -8+i1 == 0) /\ i1'=12, i3'=3+i3, i4'=1+i8, i5'=it2
	
	Applied Deletion

	Removed the following rules: 11, 19
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	Second rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=7, i3'=2+i3, i7'=0
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=7, i3'=6+i3, i7'=0
	
	Applied Deletion

	Removed the following rules: 17, 20

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_bb1_in -> 7
eval_start_bb2_in -> 8
eval_start_bb4_in -> 9
eval_start_bb3_in -> 10
eval_start_6 -> 11
eval_start_7 -> 12
eval_start_stop -> 13

Rules:
   6: (-7+i1 == 0 /\ -i6+i7 < 0) /\ i1'=8, i3'=1+i3, i8'=i7
   9: (1-i6+i8 >= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i7'=1+i8
  12: (i5 > 0 /\ -12+i1 == 0) /\ i1'=7, i3'=1+i3, i7'=i4
  13: (i5 <= 0 /\ -12+i1 == 0) /\ i1'=8, i3'=1+i3, i8'=i4
  18: (0 == 0 /\ -7+i1 == 0 /\ -i6+i7 >= 0) /\ i1'=13, i3'=2+i3
  21: (0 == 0 /\ 1-i6+i8 < 0 /\ -8+i1 == 0) /\ i1'=12, i3'=3+i3, i4'=1+i8, i5'=it2
  22: (0 == 0 /\ -1+i1 == 0) /\ i1'=7, i3'=6+i3, i7'=0

Dependency graph:
6 -> 9, 6 -> 21
9 -> 6, 9 -> 18
12 -> 6, 12 -> 18
13 -> 9, 13 -> 21
21 -> 12, 21 -> 13
22 -> 6, 22 -> 18

Preprocessed Transitions

	Simplified Guard

	Original rule:
	(0 == 0 /\ -7+i1 == 0 /\ -i6+i7 >= 0) /\ i1'=13, i3'=2+i3
	New rule:
	(-7+i1 == 0 /\ -i6+i7 >= 0) /\ i1'=13, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ 1-i6+i8 < 0 /\ -8+i1 == 0) /\ i1'=12, i3'=3+i3, i4'=1+i8, i5'=it2
	New rule:
	(1-i6+i8 < 0 /\ -8+i1 == 0) /\ i1'=12, i3'=3+i3, i4'=1+i8, i5'=it2
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=7, i3'=6+i3, i7'=0
	New rule:
	-1+i1 == 0 /\ i1'=7, i3'=6+i3, i7'=0

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_bb1_in -> 7
eval_start_bb2_in -> 8
eval_start_bb4_in -> 9
eval_start_bb3_in -> 10
eval_start_6 -> 11
eval_start_7 -> 12
eval_start_stop -> 13

Rules:
   6: (-7+i1 == 0 /\ -i6+i7 < 0) /\ i1'=8, i3'=1+i3, i8'=i7
   9: (1-i6+i8 >= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i7'=1+i8
  12: (i5 > 0 /\ -12+i1 == 0) /\ i1'=7, i3'=1+i3, i7'=i4
  13: (i5 <= 0 /\ -12+i1 == 0) /\ i1'=8, i3'=1+i3, i8'=i4
  23: (-7+i1 == 0 /\ -i6+i7 >= 0) /\ i1'=13, i3'=2+i3
  24: (1-i6+i8 < 0 /\ -8+i1 == 0) /\ i1'=12, i3'=3+i3, i4'=1+i8, i5'=it2
  25: -1+i1 == 0 /\ i1'=7, i3'=6+i3, i7'=0

Dependency graph:
6 -> 9, 6 -> 24
9 -> 6, 9 -> 23
12 -> 6, 12 -> 23
13 -> 9, 13 -> 24
24 -> 12, 24 -> 13
25 -> 6, 25 -> 23

Refined Dependency Graph

	Removed the following edges: 9 -> 6

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_bb1_in -> 7
eval_start_bb2_in -> 8
eval_start_bb4_in -> 9
eval_start_bb3_in -> 10
eval_start_6 -> 11
eval_start_7 -> 12
eval_start_stop -> 13

Rules:
   6: (-7+i1 == 0 /\ -i6+i7 < 0) /\ i1'=8, i3'=1+i3, i8'=i7
   9: (1-i6+i8 >= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i7'=1+i8
  12: (i5 > 0 /\ -12+i1 == 0) /\ i1'=7, i3'=1+i3, i7'=i4
  13: (i5 <= 0 /\ -12+i1 == 0) /\ i1'=8, i3'=1+i3, i8'=i4
  23: (-7+i1 == 0 /\ -i6+i7 >= 0) /\ i1'=13, i3'=2+i3
  24: (1-i6+i8 < 0 /\ -8+i1 == 0) /\ i1'=12, i3'=3+i3, i4'=1+i8, i5'=it2
  25: -1+i1 == 0 /\ i1'=7, i3'=6+i3, i7'=0

Dependency graph:
6 -> 9, 6 -> 24
9 -> 23
12 -> 6, 12 -> 23
13 -> 9, 13 -> 24
24 -> 12, 24 -> 13
25 -> 6, 25 -> 23

Step with 25

	Trace

	25[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 23

	Trace

	25[(-1+i1 == 0)]
	23[(-7+i1 == 0 /\ -i6+i7 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Backtrack

	Trace

	25[(-1+i1 == 0)]
	
	Blocked

	{}
	{23[T]}
	
Step with 6

	Trace

	25[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ -i6+i7 < 0)]
	
	Blocked

	{}
	{23[T]}
	{}
	
Step with 9

	Trace

	25[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ -i6+i7 < 0)]
	9[(1-i6+i8 >= 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{23[T]}
	{}
	{}
	
Step with 23

	Trace

	25[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ -i6+i7 < 0)]
	9[(1-i6+i8 >= 0 /\ -8+i1 == 0)]
	23[(-7+i1 == 0 /\ -i6+i7 >= 0)]
	
	Blocked

	{}
	{23[T]}
	{}
	{}
	{}
	
Backtrack

	Trace

	25[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ -i6+i7 < 0)]
	9[(1-i6+i8 >= 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{23[T]}
	{}
	{23[T]}
	
Backtrack

	Trace

	25[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ -i6+i7 < 0)]
	
	Blocked

	{}
	{23[T]}
	{9[T]}
	
Step with 24

	Trace

	25[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ -i6+i7 < 0)]
	24[(1-i6+i8 < 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{23[T]}
	{9[T]}
	{}
	
Step with 12

	Trace

	25[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ -i6+i7 < 0)]
	24[(1-i6+i8 < 0 /\ -8+i1 == 0)]
	12[(i5 > 0 /\ -12+i1 == 0)]
	
	Blocked

	{}
	{23[T]}
	{9[T]}
	{}
	{}
	
Poly(n^1)

Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ it2 > 0 /\ -7+i1 == 0 /\ 1-i6+i7 < 0 /\ -i6+i7 < 0) /\ i1'=7, i3'=5+i3, i4'=1+i7, i5'=it2, i7'=1+i7, i8'=i7
		New rule:
		(it2 > 0 /\ -7+i1 == 0 /\ 1-i6+i7 < 0 /\ -i6+i7 < 0) /\ i1'=7, i3'=5+i3, i4'=1+i7, i5'=it2, i7'=1+i7, i8'=i7

	Loop Acceleration

	Original rule:
	(it2 > 0 /\ -7+i1 == 0 /\ 1-i6+i7 < 0 /\ -i6+i7 < 0) /\ i1'=7, i3'=5+i3, i4'=1+i7, i5'=it2, i7'=1+i7, i8'=i7
	New rule:
	(i6-i7 > 0 /\ it2 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ -1+it53 >= 0 /\ i6-it53-i7 > 0 /\ 1+i6-it53-i7 > 0 /\ -1+i6-i7 > 0) /\ i1'=i1, i3'=i3+5*it53, i4'=it53+i7, i5'=it2, i7'=it53+i7, i8'=-1+it53+i7

		i6-i7 > 0 [0]: montonic decrease yields (i6-i7 > 0 /\ 1+i6-it53-i7 > 0)
		
		it2 > 0 [0]: unchanged
		
		-7+i1 >= 0 [0]: unchanged
		
		7-i1 >= 0 [0]: unchanged
		
		-1+i6-i7 > 0 [0]: montonic decrease yields (i6-it53-i7 > 0 /\ -1+i6-i7 > 0)
		
		Replacement map: {i6-i7 > 0 -> (i6-i7 > 0 /\ 1+i6-it53-i7 > 0), it2 > 0 -> it2 > 0, -7+i1 >= 0 -> -7+i1 >= 0, 7-i1 >= 0 -> 7-i1 >= 0, -1+i6-i7 > 0 -> (i6-it53-i7 > 0 /\ -1+i6-i7 > 0)}

	Removed Trivial Updates

	Original rule:
	(i6-i7 > 0 /\ it2 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ -1+it53 >= 0 /\ i6-it53-i7 > 0 /\ 1+i6-it53-i7 > 0 /\ -1+i6-i7 > 0) /\ i1'=i1, i3'=i3+5*it53, i4'=it53+i7, i5'=it2, i7'=it53+i7, i8'=-1+it53+i7
	New rule:
	(i6-i7 > 0 /\ it2 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ -1+it53 >= 0 /\ i6-it53-i7 > 0 /\ 1+i6-it53-i7 > 0 /\ -1+i6-i7 > 0) /\ i3'=i3+5*it53, i4'=it53+i7, i5'=it2, i7'=it53+i7, i8'=-1+it53+i7
	
	Instantiation

	Original rule:
	(i6-i7 > 0 /\ it2 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ -1+it53 >= 0 /\ i6-it53-i7 > 0 /\ 1+i6-it53-i7 > 0 /\ -1+i6-i7 > 0) /\ i3'=i3+5*it53, i4'=it53+i7, i5'=it2, i7'=it53+i7, i8'=-1+it53+i7
	New rule:
	(1 > 0 /\ -2+i6-i7 >= 0 /\ i6-i7 > 0 /\ it2 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ 2 > 0 /\ -1+i6-i7 > 0) /\ i3'=-5+5*i6+i3-5*i7, i4'=-1+i6, i5'=it2, i7'=-1+i6, i8'=-2+i6

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_bb1_in -> 7
eval_start_bb2_in -> 8
eval_start_bb4_in -> 9
eval_start_bb3_in -> 10
eval_start_6 -> 11
eval_start_7 -> 12
eval_start_stop -> 13

Rules:
   6: (-7+i1 == 0 /\ -i6+i7 < 0) /\ i1'=8, i3'=1+i3, i8'=i7
   9: (1-i6+i8 >= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i7'=1+i8
  12: (i5 > 0 /\ -12+i1 == 0) /\ i1'=7, i3'=1+i3, i7'=i4
  13: (i5 <= 0 /\ -12+i1 == 0) /\ i1'=8, i3'=1+i3, i8'=i4
  23: (-7+i1 == 0 /\ -i6+i7 >= 0) /\ i1'=13, i3'=2+i3
  24: (1-i6+i8 < 0 /\ -8+i1 == 0) /\ i1'=12, i3'=3+i3, i4'=1+i8, i5'=it2
  25: -1+i1 == 0 /\ i1'=7, i3'=6+i3, i7'=0
  26: (1 > 0 /\ -2+i6-i7 >= 0 /\ i6-i7 > 0 /\ it2 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ 2 > 0 /\ -1+i6-i7 > 0) /\ i3'=-5+5*i6+i3-5*i7, i4'=-1+i6, i5'=it2, i7'=-1+i6, i8'=-2+i6

Dependency graph:
6 -> 9, 6 -> 24
9 -> 23
12 -> 6, 12 -> 23, 12 -> 26
13 -> 9, 13 -> 24
24 -> 12, 24 -> 13
25 -> 6, 25 -> 23, 25 -> 26
26 -> 6, 26 -> 23

	Trace

	25[(-1+i1 == 0)]
	26[(1 > 0 /\ -2+i6-i7 >= 0 /\ i6-i7 > 0 /\ it2 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ 2 > 0 /\ -1+i6-i7 > 0)]
	
	Blocked

	{}
	{23[T]}
	{26[T]}
	
Step with 6

	Trace

	25[(-1+i1 == 0)]
	26[(1 > 0 /\ -2+i6-i7 >= 0 /\ i6-i7 > 0 /\ it2 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ 2 > 0 /\ -1+i6-i7 > 0)]
	6[(-7+i1 == 0 /\ -i6+i7 < 0)]
	
	Blocked

	{}
	{23[T]}
	{23[T], 26[T]}
	{}
	
Step with 9

	Trace

	25[(-1+i1 == 0)]
	26[(1 > 0 /\ -2+i6-i7 >= 0 /\ i6-i7 > 0 /\ it2 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ 2 > 0 /\ -1+i6-i7 > 0)]
	6[(-7+i1 == 0 /\ -i6+i7 < 0)]
	9[(1-i6+i8 >= 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{23[T]}
	{23[T], 26[T]}
	{24[T]}
	{}
	
Step with 23

	Trace

	25[(-1+i1 == 0)]
	26[(1 > 0 /\ -2+i6-i7 >= 0 /\ i6-i7 > 0 /\ it2 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ 2 > 0 /\ -1+i6-i7 > 0)]
	6[(-7+i1 == 0 /\ -i6+i7 < 0)]
	9[(1-i6+i8 >= 0 /\ -8+i1 == 0)]
	23[(-7+i1 == 0 /\ -i6+i7 >= 0)]
	
	Blocked

	{}
	{23[T]}
	{23[T], 26[T]}
	{24[T]}
	{}
	{}
	
Backtrack

	Trace

	25[(-1+i1 == 0)]
	26[(1 > 0 /\ -2+i6-i7 >= 0 /\ i6-i7 > 0 /\ it2 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ 2 > 0 /\ -1+i6-i7 > 0)]
	6[(-7+i1 == 0 /\ -i6+i7 < 0)]
	9[(1-i6+i8 >= 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{23[T]}
	{23[T], 26[T]}
	{24[T]}
	{23[T]}
	
Backtrack

	Trace

	25[(-1+i1 == 0)]
	26[(1 > 0 /\ -2+i6-i7 >= 0 /\ i6-i7 > 0 /\ it2 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ 2 > 0 /\ -1+i6-i7 > 0)]
	6[(-7+i1 == 0 /\ -i6+i7 < 0)]
	
	Blocked

	{}
	{23[T]}
	{23[T], 26[T]}
	{9[T], 24[T]}
	
Backtrack

	Trace

	25[(-1+i1 == 0)]
	26[(1 > 0 /\ -2+i6-i7 >= 0 /\ i6-i7 > 0 /\ it2 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ 2 > 0 /\ -1+i6-i7 > 0)]
	
	Blocked

	{}
	{23[T]}
	{6[T], 23[T], 26[T]}
	
Backtrack

	Trace

	25[(-1+i1 == 0)]
	
	Blocked

	{}
	{23[T], 26[T]}
	
Step with 6

	Trace

	25[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ -i6+i7 < 0)]
	
	Blocked

	{}
	{23[T], 26[T]}
	{}
	
Step with 24

	Trace

	25[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ -i6+i7 < 0)]
	24[(1-i6+i8 < 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{23[T], 26[T]}
	{}
	{}
	
Step with 12

	Trace

	25[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ -i6+i7 < 0)]
	24[(1-i6+i8 < 0 /\ -8+i1 == 0)]
	12[(i5 > 0 /\ -12+i1 == 0)]
	
	Blocked

	{}
	{23[T], 26[T]}
	{}
	{}
	{}
	
Covered

	Trace

	25[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ -i6+i7 < 0)]
	24[(1-i6+i8 < 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{23[T], 26[T]}
	{}
	{12[T]}
	
Step with 13

	Trace

	25[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ -i6+i7 < 0)]
	24[(1-i6+i8 < 0 /\ -8+i1 == 0)]
	13[(i5 <= 0 /\ -12+i1 == 0)]
	
	Blocked

	{}
	{23[T], 26[T]}
	{}
	{12[T]}
	{}
	
Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ it2 <= 0 /\ 1-i6+i8 < 0 /\ -8+i1 == 0) /\ i1'=8, i3'=4+i3, i4'=1+i8, i5'=it2, i8'=1+i8
		New rule:
		(it2 <= 0 /\ 1-i6+i8 < 0 /\ -8+i1 == 0) /\ i1'=8, i3'=4+i3, i4'=1+i8, i5'=it2, i8'=1+i8

	Loop Acceleration

	Original rule:
	(it2 <= 0 /\ 1-i6+i8 < 0 /\ -8+i1 == 0) /\ i1'=8, i3'=4+i3, i4'=1+i8, i5'=it2, i8'=1+i8
	New rule:
	(-1+i6-i8 > 0 /\ i6-i8-it120 > 0 /\ -1+it120 >= 0 /\ -it2 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0) /\ i1'=i1, i3'=i3+4*it120, i4'=i8+it120, i5'=it2, i8'=i8+it120

		-1+i6-i8 > 0 [0]: montonic decrease yields (-1+i6-i8 > 0 /\ i6-i8-it120 > 0)
		
		-it2 >= 0 [0]: unchanged
		
		8-i1 >= 0 [0]: unchanged
		
		-8+i1 >= 0 [0]: unchanged
		
		Replacement map: {-1+i6-i8 > 0 -> (-1+i6-i8 > 0 /\ i6-i8-it120 > 0), -it2 >= 0 -> -it2 >= 0, 8-i1 >= 0 -> 8-i1 >= 0, -8+i1 >= 0 -> -8+i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-1+i6-i8 > 0 /\ i6-i8-it120 > 0 /\ -1+it120 >= 0 /\ -it2 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0) /\ i1'=i1, i3'=i3+4*it120, i4'=i8+it120, i5'=it2, i8'=i8+it120
	New rule:
	(-1+i6-i8 > 0 /\ i6-i8-it120 > 0 /\ -1+it120 >= 0 /\ -it2 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0) /\ i3'=i3+4*it120, i4'=i8+it120, i5'=it2, i8'=i8+it120
	
	Instantiation

	Original rule:
	(-1+i6-i8 > 0 /\ i6-i8-it120 > 0 /\ -1+it120 >= 0 /\ -it2 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0) /\ i3'=i3+4*it120, i4'=i8+it120, i5'=it2, i8'=i8+it120
	New rule:
	(-1+i6-i8 > 0 /\ 1 > 0 /\ -it2 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -2+i6-i8 >= 0) /\ i3'=-4+4*i6+i3-4*i8, i4'=-1+i6, i5'=it2, i8'=-1+i6

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_bb1_in -> 7
eval_start_bb2_in -> 8
eval_start_bb4_in -> 9
eval_start_bb3_in -> 10
eval_start_6 -> 11
eval_start_7 -> 12
eval_start_stop -> 13

Rules:
   6: (-7+i1 == 0 /\ -i6+i7 < 0) /\ i1'=8, i3'=1+i3, i8'=i7
   9: (1-i6+i8 >= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i7'=1+i8
  12: (i5 > 0 /\ -12+i1 == 0) /\ i1'=7, i3'=1+i3, i7'=i4
  13: (i5 <= 0 /\ -12+i1 == 0) /\ i1'=8, i3'=1+i3, i8'=i4
  23: (-7+i1 == 0 /\ -i6+i7 >= 0) /\ i1'=13, i3'=2+i3
  24: (1-i6+i8 < 0 /\ -8+i1 == 0) /\ i1'=12, i3'=3+i3, i4'=1+i8, i5'=it2
  25: -1+i1 == 0 /\ i1'=7, i3'=6+i3, i7'=0
  26: (1 > 0 /\ -2+i6-i7 >= 0 /\ i6-i7 > 0 /\ it2 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ 2 > 0 /\ -1+i6-i7 > 0) /\ i3'=-5+5*i6+i3-5*i7, i4'=-1+i6, i5'=it2, i7'=-1+i6, i8'=-2+i6
  27: (-1+i6-i8 > 0 /\ 1 > 0 /\ -it2 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -2+i6-i8 >= 0) /\ i3'=-4+4*i6+i3-4*i8, i4'=-1+i6, i5'=it2, i8'=-1+i6

Dependency graph:
6 -> 9, 6 -> 24, 6 -> 27
9 -> 23
12 -> 6, 12 -> 23, 12 -> 26
13 -> 9, 13 -> 24, 13 -> 27
24 -> 12, 24 -> 13
25 -> 6, 25 -> 23, 25 -> 26
26 -> 6, 26 -> 23
27 -> 9, 27 -> 24

	Trace

	25[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ -i6+i7 < 0)]
	27[(-1+i6-i8 > 0 /\ 1 > 0 /\ -it2 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -2+i6-i8 >= 0)]
	
	Blocked

	{}
	{23[T], 26[T]}
	{}
	{27[T]}
	
Step with 9

	Trace

	25[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ -i6+i7 < 0)]
	27[(-1+i6-i8 > 0 /\ 1 > 0 /\ -it2 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -2+i6-i8 >= 0)]
	9[(1-i6+i8 >= 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{23[T], 26[T]}
	{}
	{24[T], 27[T]}
	{}
	
Step with 23

	Trace

	25[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ -i6+i7 < 0)]
	27[(-1+i6-i8 > 0 /\ 1 > 0 /\ -it2 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -2+i6-i8 >= 0)]
	9[(1-i6+i8 >= 0 /\ -8+i1 == 0)]
	23[(-7+i1 == 0 /\ -i6+i7 >= 0)]
	
	Blocked

	{}
	{23[T], 26[T]}
	{}
	{24[T], 27[T]}
	{}
	{}
	
Backtrack

	Trace

	25[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ -i6+i7 < 0)]
	27[(-1+i6-i8 > 0 /\ 1 > 0 /\ -it2 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -2+i6-i8 >= 0)]
	9[(1-i6+i8 >= 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{23[T], 26[T]}
	{}
	{24[T], 27[T]}
	{23[T]}
	
Backtrack

	Trace

	25[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ -i6+i7 < 0)]
	27[(-1+i6-i8 > 0 /\ 1 > 0 /\ -it2 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -2+i6-i8 >= 0)]
	
	Blocked

	{}
	{23[T], 26[T]}
	{}
	{9[T], 24[T], 27[T]}
	
Backtrack

	Trace

	25[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ -i6+i7 < 0)]
	
	Blocked

	{}
	{23[T], 26[T]}
	{27[T]}
	
Step with 24

	Trace

	25[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ -i6+i7 < 0)]
	24[(1-i6+i8 < 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{23[T], 26[T]}
	{27[T]}
	{}
	
Step with 12

	Trace

	25[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ -i6+i7 < 0)]
	24[(1-i6+i8 < 0 /\ -8+i1 == 0)]
	12[(i5 > 0 /\ -12+i1 == 0)]
	
	Blocked

	{}
	{23[T], 26[T]}
	{27[T]}
	{}
	{}
	
Covered

	Trace

	25[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ -i6+i7 < 0)]
	24[(1-i6+i8 < 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{23[T], 26[T]}
	{27[T]}
	{12[T]}
	
Step with 13

	Trace

	25[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ -i6+i7 < 0)]
	24[(1-i6+i8 < 0 /\ -8+i1 == 0)]
	13[(i5 <= 0 /\ -12+i1 == 0)]
	
	Blocked

	{}
	{23[T], 26[T]}
	{27[T]}
	{12[T]}
	{}
	
Covered

	Trace

	25[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ -i6+i7 < 0)]
	24[(1-i6+i8 < 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{23[T], 26[T]}
	{27[T]}
	{12[T], 13[T]}
	
Backtrack

	Trace

	25[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ -i6+i7 < 0)]
	
	Blocked

	{}
	{23[T], 26[T]}
	{24[T], 27[T]}
	
Step with 9

	Trace

	25[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ -i6+i7 < 0)]
	9[(1-i6+i8 >= 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{23[T], 26[T]}
	{24[T], 27[T]}
	{}
	
Step with 23

	Trace

	25[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ -i6+i7 < 0)]
	9[(1-i6+i8 >= 0 /\ -8+i1 == 0)]
	23[(-7+i1 == 0 /\ -i6+i7 >= 0)]
	
	Blocked

	{}
	{23[T], 26[T]}
	{24[T], 27[T]}
	{}
	{}
	
Backtrack

	Trace

	25[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ -i6+i7 < 0)]
	9[(1-i6+i8 >= 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{23[T], 26[T]}
	{24[T], 27[T]}
	{23[T]}
	
Backtrack

	Trace

	25[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ -i6+i7 < 0)]
	
	Blocked

	{}
	{23[T], 26[T]}
	{9[T], 24[T], 27[T]}
	
Backtrack

	Trace

	25[(-1+i1 == 0)]
	
	Blocked

	{}
	{6[T], 23[T], 26[T]}
	
Backtrack

	Trace

	Blocked

	{25[T]}
	
Accept

Poly(n^1)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄
  Temp_Vars:  nondef_0
  Locations:  l0, l1, l10, l11, l12, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃, X₄) → l2(X₀, X₁, X₂, X₃, X₄)
  t₃: l1(X₀, X₁, X₂, X₃, X₄) → l4(X₀, X₁, X₂, X₃, X₄)
  t₉: l10(X₀, X₁, X₂, X₃, X₄) → l6(X₀, X₁, X₂, 1+X₄, X₄) :|: X₂ ≤ 1+X₄
  t₈: l10(X₀, X₁, X₂, X₃, X₄) → l8(1+X₄, X₁, X₂, X₃, X₄) :|: 2+X₄ ≤ X₂
  t₁₄: l11(X₀, X₁, X₂, X₃, X₄) → l12(X₀, X₁, X₂, X₃, X₄)
  t₁: l2(X₀, X₁, X₂, X₃, X₄) → l3(X₀, X₁, X₂, X₃, X₄)
  t₂: l3(X₀, X₁, X₂, X₃, X₄) → l1(X₀, X₁, X₂, X₃, X₄)
  t₄: l4(X₀, X₁, X₂, X₃, X₄) → l5(X₀, X₁, X₂, X₃, X₄)
  t₅: l5(X₀, X₁, X₂, X₃, X₄) → l6(X₀, X₁, X₂, 0, X₄)
  t₆: l6(X₀, X₁, X₂, X₃, X₄) → l10(X₀, X₁, X₂, X₃, X₃) :|: 1+X₃ ≤ X₂
  t₇: l6(X₀, X₁, X₂, X₃, X₄) → l11(X₀, X₁, X₂, X₃, X₄) :|: X₂ ≤ X₃
  t₁₃: l7(X₀, X₁, X₂, X₃, X₄) → l10(X₀, X₁, X₂, X₃, X₀) :|: X₁ ≤ 0
  t₁₂: l7(X₀, X₁, X₂, X₃, X₄) → l6(X₀, X₁, X₂, X₀, X₄) :|: 1 ≤ X₁
  t₁₀: l8(X₀, X₁, X₂, X₃, X₄) → l9(X₀, X₁, X₂, X₃, X₄)
  t₁₁: l9(X₀, X₁, X₂, X₃, X₄) → l7(X₀, nondef_0, X₂, X₃, X₄)


Preprocessing
  Found invariant 0 ≤ X₃ ∧ X₂ ≤ X₃ for location l11


  Found invariant 0 ≤ X₃ for location l6


  Found invariant 0 ≤ X₃ ∧ X₂ ≤ X₃ for location l12


  Found invariant 2+X₄ ≤ X₂ ∧ 1+X₄ ≤ X₀ ∧ 0 ≤ X₄ ∧ 0 ≤ X₃+X₄ ∧ X₃ ≤ X₄ ∧ 2 ≤ X₂+X₄ ∧ 1 ≤ X₀+X₄ ∧ X₀ ≤ 1+X₄ ∧ 2+X₃ ≤ X₂ ∧ 1+X₃ ≤ X₀ ∧ 0 ≤ X₃ ∧ 2 ≤ X₂+X₃ ∧ 1 ≤ X₀+X₃ ∧ 2 ≤ X₂ ∧ 3 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₀ for location l7


  Found invariant 2+X₄ ≤ X₂ ∧ 1+X₄ ≤ X₀ ∧ 0 ≤ X₄ ∧ 0 ≤ X₃+X₄ ∧ X₃ ≤ X₄ ∧ 2 ≤ X₂+X₄ ∧ 1 ≤ X₀+X₄ ∧ X₀ ≤ 1+X₄ ∧ 2+X₃ ≤ X₂ ∧ 1+X₃ ≤ X₀ ∧ 0 ≤ X₃ ∧ 2 ≤ X₂+X₃ ∧ 1 ≤ X₀+X₃ ∧ 2 ≤ X₂ ∧ 3 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₀ for location l8


  Found invariant 1+X₄ ≤ X₂ ∧ 0 ≤ X₄ ∧ 0 ≤ X₃+X₄ ∧ X₃ ≤ X₄ ∧ 1 ≤ X₂+X₄ ∧ 1+X₃ ≤ X₂ ∧ 0 ≤ X₃ ∧ 1 ≤ X₂+X₃ ∧ 1 ≤ X₂ for location l10


  Found invariant 2+X₄ ≤ X₂ ∧ 1+X₄ ≤ X₀ ∧ 0 ≤ X₄ ∧ 0 ≤ X₃+X₄ ∧ X₃ ≤ X₄ ∧ 2 ≤ X₂+X₄ ∧ 1 ≤ X₀+X₄ ∧ X₀ ≤ 1+X₄ ∧ 2+X₃ ≤ X₂ ∧ 1+X₃ ≤ X₀ ∧ 0 ≤ X₃ ∧ 2 ≤ X₂+X₃ ∧ 1 ≤ X₀+X₃ ∧ 2 ≤ X₂ ∧ 3 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₀ for location l9


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄
  Temp_Vars:  nondef_0
  Locations:  l0, l1, l10, l11, l12, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃, X₄) → l2(X₀, X₁, X₂, X₃, X₄)
  t₃: l1(X₀, X₁, X₂, X₃, X₄) → l4(X₀, X₁, X₂, X₃, X₄)
  t₉: l10(X₀, X₁, X₂, X₃, X₄) → l6(X₀, X₁, X₂, 1+X₄, X₄) :|: X₂ ≤ 1+X₄ ∧ 1 ≤ X₂ ∧ 1 ≤ X₂+X₃ ∧ 1+X₃ ≤ X₂ ∧ 1 ≤ X₂+X₄ ∧ 1+X₄ ≤ X₂ ∧ 0 ≤ X₃ ∧ 0 ≤ X₃+X₄ ∧ X₃ ≤ X₄ ∧ 0 ≤ X₄
  t₈: l10(X₀, X₁, X₂, X₃, X₄) → l8(1+X₄, X₁, X₂, X₃, X₄) :|: 2+X₄ ≤ X₂ ∧ 1 ≤ X₂ ∧ 1 ≤ X₂+X₃ ∧ 1+X₃ ≤ X₂ ∧ 1 ≤ X₂+X₄ ∧ 1+X₄ ≤ X₂ ∧ 0 ≤ X₃ ∧ 0 ≤ X₃+X₄ ∧ X₃ ≤ X₄ ∧ 0 ≤ X₄
  t₁₄: l11(X₀, X₁, X₂, X₃, X₄) → l12(X₀, X₁, X₂, X₃, X₄) :|: X₂ ≤ X₃ ∧ 0 ≤ X₃
  t₁: l2(X₀, X₁, X₂, X₃, X₄) → l3(X₀, X₁, X₂, X₃, X₄)
  t₂: l3(X₀, X₁, X₂, X₃, X₄) → l1(X₀, X₁, X₂, X₃, X₄)
  t₄: l4(X₀, X₁, X₂, X₃, X₄) → l5(X₀, X₁, X₂, X₃, X₄)
  t₅: l5(X₀, X₁, X₂, X₃, X₄) → l6(X₀, X₁, X₂, 0, X₄)
  t₆: l6(X₀, X₁, X₂, X₃, X₄) → l10(X₀, X₁, X₂, X₃, X₃) :|: 1+X₃ ≤ X₂ ∧ 0 ≤ X₃
  t₇: l6(X₀, X₁, X₂, X₃, X₄) → l11(X₀, X₁, X₂, X₃, X₄) :|: X₂ ≤ X₃ ∧ 0 ≤ X₃
  t₁₃: l7(X₀, X₁, X₂, X₃, X₄) → l10(X₀, X₁, X₂, X₃, X₀) :|: X₁ ≤ 0 ∧ X₀ ≤ 1+X₄ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₃ ∧ 1+X₃ ≤ X₀ ∧ 1 ≤ X₀+X₄ ∧ 1+X₄ ≤ X₀ ∧ 1+X₀ ≤ X₂ ∧ 2 ≤ X₂ ∧ 2 ≤ X₂+X₃ ∧ 2+X₃ ≤ X₂ ∧ 2 ≤ X₂+X₄ ∧ 2+X₄ ≤ X₂ ∧ 3 ≤ X₀+X₂ ∧ 0 ≤ X₃ ∧ 0 ≤ X₃+X₄ ∧ X₃ ≤ X₄ ∧ 0 ≤ X₄
  t₁₂: l7(X₀, X₁, X₂, X₃, X₄) → l6(X₀, X₁, X₂, X₀, X₄) :|: 1 ≤ X₁ ∧ X₀ ≤ 1+X₄ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₃ ∧ 1+X₃ ≤ X₀ ∧ 1 ≤ X₀+X₄ ∧ 1+X₄ ≤ X₀ ∧ 1+X₀ ≤ X₂ ∧ 2 ≤ X₂ ∧ 2 ≤ X₂+X₃ ∧ 2+X₃ ≤ X₂ ∧ 2 ≤ X₂+X₄ ∧ 2+X₄ ≤ X₂ ∧ 3 ≤ X₀+X₂ ∧ 0 ≤ X₃ ∧ 0 ≤ X₃+X₄ ∧ X₃ ≤ X₄ ∧ 0 ≤ X₄
  t₁₀: l8(X₀, X₁, X₂, X₃, X₄) → l9(X₀, X₁, X₂, X₃, X₄) :|: X₀ ≤ 1+X₄ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₃ ∧ 1+X₃ ≤ X₀ ∧ 1 ≤ X₀+X₄ ∧ 1+X₄ ≤ X₀ ∧ 1+X₀ ≤ X₂ ∧ 2 ≤ X₂ ∧ 2 ≤ X₂+X₃ ∧ 2+X₃ ≤ X₂ ∧ 2 ≤ X₂+X₄ ∧ 2+X₄ ≤ X₂ ∧ 3 ≤ X₀+X₂ ∧ 0 ≤ X₃ ∧ 0 ≤ X₃+X₄ ∧ X₃ ≤ X₄ ∧ 0 ≤ X₄
  t₁₁: l9(X₀, X₁, X₂, X₃, X₄) → l7(X₀, nondef_0, X₂, X₃, X₄) :|: X₀ ≤ 1+X₄ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₃ ∧ 1+X₃ ≤ X₀ ∧ 1 ≤ X₀+X₄ ∧ 1+X₄ ≤ X₀ ∧ 1+X₀ ≤ X₂ ∧ 2 ≤ X₂ ∧ 2 ≤ X₂+X₃ ∧ 2+X₃ ≤ X₂ ∧ 2 ≤ X₂+X₄ ∧ 2+X₄ ≤ X₂ ∧ 3 ≤ X₀+X₂ ∧ 0 ≤ X₃ ∧ 0 ≤ X₃+X₄ ∧ X₃ ≤ X₄ ∧ 0 ≤ X₄


MPRF for transition t₆: l6(X₀, X₁, X₂, X₃, X₄) → l10(X₀, X₁, X₂, X₃, X₃) :|: 1+X₃ ≤ X₂ ∧ 0 ≤ X₃ of depth 1:
  new bound:
    X₂ {O(n)}

  MPRF:
    • l10: [X₂-1-X₄]
    • l6: [X₂-X₃]
    • l7: [X₂-X₀]
    • l8: [X₂-1-X₄]
    • l9: [X₂-X₀]




MPRF for transition t₈: l10(X₀, X₁, X₂, X₃, X₄) → l8(1+X₄, X₁, X₂, X₃, X₄) :|: 2+X₄ ≤ X₂ ∧ 1 ≤ X₂ ∧ 1 ≤ X₂+X₃ ∧ 1+X₃ ≤ X₂ ∧ 1 ≤ X₂+X₄ ∧ 1+X₄ ≤ X₂ ∧ 0 ≤ X₃ ∧ 0 ≤ X₃+X₄ ∧ X₃ ≤ X₄ ∧ 0 ≤ X₄ of depth 1:
  new bound:
    X₂+1 {O(n)}

  MPRF:
    • l10: [X₂-1-X₄]
    • l6: [X₂-1-X₃]
    • l7: [X₂-2-X₄]
    • l8: [X₂-1-X₀]
    • l9: [X₂-1-X₀]




MPRF for transition t₉: l10(X₀, X₁, X₂, X₃, X₄) → l6(X₀, X₁, X₂, 1+X₄, X₄) :|: X₂ ≤ 1+X₄ ∧ 1 ≤ X₂ ∧ 1 ≤ X₂+X₃ ∧ 1+X₃ ≤ X₂ ∧ 1 ≤ X₂+X₄ ∧ 1+X₄ ≤ X₂ ∧ 0 ≤ X₃ ∧ 0 ≤ X₃+X₄ ∧ X₃ ≤ X₄ ∧ 0 ≤ X₄ of depth 1:
  new bound:
    X₂ {O(n)}

  MPRF:
    • l10: [X₂-X₄]
    • l6: [X₂-X₃]
    • l7: [X₂-X₀]
    • l8: [X₂-X₄]
    • l9: [X₂-X₄]




MPRF for transition t₁₀: l8(X₀, X₁, X₂, X₃, X₄) → l9(X₀, X₁, X₂, X₃, X₄) :|: X₀ ≤ 1+X₄ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₃ ∧ 1+X₃ ≤ X₀ ∧ 1 ≤ X₀+X₄ ∧ 1+X₄ ≤ X₀ ∧ 1+X₀ ≤ X₂ ∧ 2 ≤ X₂ ∧ 2 ≤ X₂+X₃ ∧ 2+X₃ ≤ X₂ ∧ 2 ≤ X₂+X₄ ∧ 2+X₄ ≤ X₂ ∧ 3 ≤ X₀+X₂ ∧ 0 ≤ X₃ ∧ 0 ≤ X₃+X₄ ∧ X₃ ≤ X₄ ∧ 0 ≤ X₄ of depth 1:
  new bound:
    X₂+1 {O(n)}

  MPRF:
    • l10: [X₂-1-X₄]
    • l6: [X₂-1-X₃]
    • l7: [X₂-1-X₀]
    • l8: [X₂-1-X₄]
    • l9: [X₂-2-X₄]




MPRF for transition t₁₁: l9(X₀, X₁, X₂, X₃, X₄) → l7(X₀, nondef_0, X₂, X₃, X₄) :|: X₀ ≤ 1+X₄ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₃ ∧ 1+X₃ ≤ X₀ ∧ 1 ≤ X₀+X₄ ∧ 1+X₄ ≤ X₀ ∧ 1+X₀ ≤ X₂ ∧ 2 ≤ X₂ ∧ 2 ≤ X₂+X₃ ∧ 2+X₃ ≤ X₂ ∧ 2 ≤ X₂+X₄ ∧ 2+X₄ ≤ X₂ ∧ 3 ≤ X₀+X₂ ∧ 0 ≤ X₃ ∧ 0 ≤ X₃+X₄ ∧ X₃ ≤ X₄ ∧ 0 ≤ X₄ of depth 1:
  new bound:
    X₂+1 {O(n)}

  MPRF:
    • l10: [X₂-1-X₄]
    • l6: [X₂-1-X₃]
    • l7: [X₂-1-X₀]
    • l8: [X₂-1-X₄]
    • l9: [X₂-X₀]




MPRF for transition t₁₂: l7(X₀, X₁, X₂, X₃, X₄) → l6(X₀, X₁, X₂, X₀, X₄) :|: 1 ≤ X₁ ∧ X₀ ≤ 1+X₄ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₃ ∧ 1+X₃ ≤ X₀ ∧ 1 ≤ X₀+X₄ ∧ 1+X₄ ≤ X₀ ∧ 1+X₀ ≤ X₂ ∧ 2 ≤ X₂ ∧ 2 ≤ X₂+X₃ ∧ 2+X₃ ≤ X₂ ∧ 2 ≤ X₂+X₄ ∧ 2+X₄ ≤ X₂ ∧ 3 ≤ X₀+X₂ ∧ 0 ≤ X₃ ∧ 0 ≤ X₃+X₄ ∧ X₃ ≤ X₄ ∧ 0 ≤ X₄ of depth 1:
  new bound:
    X₂+1 {O(n)}

  MPRF:
    • l10: [X₂-1-X₄]
    • l6: [X₂-1-X₃]
    • l7: [X₂-1-X₄]
    • l8: [X₂-1-X₄]
    • l9: [X₂-1-X₄]




MPRF for transition t₁₃: l7(X₀, X₁, X₂, X₃, X₄) → l10(X₀, X₁, X₂, X₃, X₀) :|: X₁ ≤ 0 ∧ X₀ ≤ 1+X₄ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₃ ∧ 1+X₃ ≤ X₀ ∧ 1 ≤ X₀+X₄ ∧ 1+X₄ ≤ X₀ ∧ 1+X₀ ≤ X₂ ∧ 2 ≤ X₂ ∧ 2 ≤ X₂+X₃ ∧ 2+X₃ ≤ X₂ ∧ 2 ≤ X₂+X₄ ∧ 2+X₄ ≤ X₂ ∧ 3 ≤ X₀+X₂ ∧ 0 ≤ X₃ ∧ 0 ≤ X₃+X₄ ∧ X₃ ≤ X₄ ∧ 0 ≤ X₄ of depth 1:
  new bound:
    X₂+1 {O(n)}

  MPRF:
    • l10: [X₂-1-X₄]
    • l6: [X₂-1-X₃]
    • l7: [X₂-1-X₄]
    • l8: [X₂-1-X₄]
    • l9: [X₂-X₀]




All Bounds
Timebounds
  Overall timebound:7⋅X₂+13 {O(n)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: X₂ {O(n)}
    t₇: 1 {O(1)}
    t₈: X₂+1 {O(n)}
    t₉: X₂ {O(n)}
    t₁₀: X₂+1 {O(n)}
    t₁₁: X₂+1 {O(n)}
    t₁₂: X₂+1 {O(n)}
    t₁₃: X₂+1 {O(n)}
    t₁₄: 1 {O(1)}


Costbounds
  Overall costbound: 7⋅X₂+13 {O(n)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: X₂ {O(n)}
    t₇: 1 {O(1)}
    t₈: X₂+1 {O(n)}
    t₉: X₂ {O(n)}
    t₁₀: X₂+1 {O(n)}
    t₁₁: X₂+1 {O(n)}
    t₁₂: X₂+1 {O(n)}
    t₁₃: X₂+1 {O(n)}
    t₁₄: 1 {O(1)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₀, X₂: X₂ {O(n)}
    t₀, X₃: X₃ {O(n)}
    t₀, X₄: X₄ {O(n)}
    t₁, X₀: X₀ {O(n)}
    t₁, X₁: X₁ {O(n)}
    t₁, X₂: X₂ {O(n)}
    t₁, X₃: X₃ {O(n)}
    t₁, X₄: X₄ {O(n)}
    t₂, X₀: X₀ {O(n)}
    t₂, X₁: X₁ {O(n)}
    t₂, X₂: X₂ {O(n)}
    t₂, X₃: X₃ {O(n)}
    t₂, X₄: X₄ {O(n)}
    t₃, X₀: X₀ {O(n)}
    t₃, X₁: X₁ {O(n)}
    t₃, X₂: X₂ {O(n)}
    t₃, X₃: X₃ {O(n)}
    t₃, X₄: X₄ {O(n)}
    t₄, X₀: X₀ {O(n)}
    t₄, X₁: X₁ {O(n)}
    t₄, X₂: X₂ {O(n)}
    t₄, X₃: X₃ {O(n)}
    t₄, X₄: X₄ {O(n)}
    t₅, X₀: X₀ {O(n)}
    t₅, X₁: X₁ {O(n)}
    t₅, X₂: X₂ {O(n)}
    t₅, X₃: 0 {O(1)}
    t₅, X₄: X₄ {O(n)}
    t₆, X₀: X₀+X₂+1 {O(n)}
    t₆, X₂: X₂ {O(n)}
    t₆, X₃: X₂+1 {O(n)}
    t₆, X₄: X₂+1 {O(n)}
    t₇, X₀: 2⋅X₀+2⋅X₂+2 {O(n)}
    t₇, X₂: 3⋅X₂ {O(n)}
    t₇, X₃: 2⋅X₂+4 {O(n)}
    t₇, X₄: 2⋅X₂+X₄+2 {O(n)}
    t₈, X₀: X₂+1 {O(n)}
    t₈, X₂: X₂ {O(n)}
    t₈, X₃: X₂+1 {O(n)}
    t₈, X₄: 2⋅X₂+2 {O(n)}
    t₉, X₀: 2⋅X₂+X₀+2 {O(n)}
    t₉, X₂: 2⋅X₂ {O(n)}
    t₉, X₃: 2⋅X₂+4 {O(n)}
    t₉, X₄: 2⋅X₂+2 {O(n)}
    t₁₀, X₀: X₂+1 {O(n)}
    t₁₀, X₂: X₂ {O(n)}
    t₁₀, X₃: X₂+1 {O(n)}
    t₁₀, X₄: 2⋅X₂+2 {O(n)}
    t₁₁, X₀: X₂+1 {O(n)}
    t₁₁, X₂: X₂ {O(n)}
    t₁₁, X₃: X₂+1 {O(n)}
    t₁₁, X₄: 2⋅X₂+2 {O(n)}
    t₁₂, X₀: X₂+1 {O(n)}
    t₁₂, X₂: X₂ {O(n)}
    t₁₂, X₃: X₂+1 {O(n)}
    t₁₂, X₄: 2⋅X₂+2 {O(n)}
    t₁₃, X₀: X₂+1 {O(n)}
    t₁₃, X₂: X₂ {O(n)}
    t₁₃, X₃: X₂+1 {O(n)}
    t₁₃, X₄: X₂+1 {O(n)}
    t₁₄, X₀: 2⋅X₀+2⋅X₂+2 {O(n)}
    t₁₄, X₂: 3⋅X₂ {O(n)}
    t₁₄, X₃: 2⋅X₂+4 {O(n)}
    t₁₄, X₄: 2⋅X₂+X₄+2 {O(n)}

