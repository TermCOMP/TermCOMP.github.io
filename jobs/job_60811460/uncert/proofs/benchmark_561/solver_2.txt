MAYBE

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [f1/27]
1. non_recursive  : [exit_location/1]
2. recursive  : [f29/44]
3. recursive  : [f17/29]
4. non_recursive  : [f27/66]
5. non_recursive  : [f17_loop_cont/67]
6. recursive  : [f35/33]
7. recursive  : [f34/58,f35_loop_cont/59]
8. recursive  : [f15/31]
9. non_recursive  : [f15_loop_cont/67]
10. non_recursive  : [f34_loop_cont/67]
11. non_recursive  : [f29_loop_cont/67]
12. non_recursive  : [f1_loop_cont/67]
13. recursive  : [f32/10]
14. non_recursive  : [f32_loop_cont/2]
15. non_recursive  : [f26/66]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into f1/27
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into f29/44
3. SCC is partially evaluated into f17/29
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into f17_loop_cont/67
6. SCC is partially evaluated into f35/33
7. SCC is partially evaluated into f34/58
8. SCC is partially evaluated into f15/31
9. SCC is partially evaluated into f15_loop_cont/67
10. SCC is partially evaluated into f34_loop_cont/67
11. SCC is partially evaluated into f29_loop_cont/67
12. SCC is partially evaluated into f1_loop_cont/67
13. SCC is partially evaluated into f32/10
14. SCC is completely evaluated into other SCCs
15. SCC is partially evaluated into f26/66

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations f1/27 
* CE 5 is refined into CE [94] 
* CE 6 is refined into CE [95] 
* CE 4 is refined into CE [96] 


### Cost equations --> "Loop" of f1/27 
* CEs [96] --> Loop 80 
* CEs [94] --> Loop 81 
* CEs [95] --> Loop 82 

### Ranking functions of CR f1(A,C,E,F,Q1,R1,S1,T1,U1,V1,W1,X1,Y1,G3,H3,I3,J3,K3,L3,M3,N3,O3,P3,Q3,R3,S3,T3) 
* RF of phase [80]: [-A+E,-A+Q1]

#### Partial ranking functions of CR f1(A,C,E,F,Q1,R1,S1,T1,U1,V1,W1,X1,Y1,G3,H3,I3,J3,K3,L3,M3,N3,O3,P3,Q3,R3,S3,T3) 
* Partial RF of phase [80]:
  - RF of loop [80:1]:
    -A+E
    -A+Q1


### Specialization of cost equations f29/44 
* CE 19 is refined into CE [97] 
* CE 21 is refined into CE [98] 
* CE 18 is refined into CE [99] 
* CE 20 is refined into CE [100] 
* CE 22 is refined into CE [101] 
* CE 15 is refined into CE [102] 
* CE 14 is refined into CE [103] 
* CE 13 is refined into CE [104] 
* CE 12 is refined into CE [105] 
* CE 17 is refined into CE [106] 
* CE 16 is refined into CE [107] 


### Cost equations --> "Loop" of f29/44 
* CEs [106] --> Loop 83 
* CEs [107] --> Loop 84 
* CEs [97] --> Loop 85 
* CEs [98] --> Loop 86 
* CEs [99] --> Loop 87 
* CEs [100] --> Loop 88 
* CEs [101] --> Loop 89 
* CEs [102] --> Loop 90 
* CEs [103] --> Loop 91 
* CEs [104] --> Loop 92 
* CEs [105] --> Loop 93 

### Ranking functions of CR f29(A,B,C,D,E,F,G,H,J,K,L,M,N,O,Z1,A2,B2,C2,D2,E2,I2,L2,G3,H3,I3,J3,K3,L3,M3,N3,O3,P3,Q3,R3,S3,T3,U3,V3,W3,X3,Y3,Z3,A4,B4) 
* RF of phase [83,84]: [B]

#### Partial ranking functions of CR f29(A,B,C,D,E,F,G,H,J,K,L,M,N,O,Z1,A2,B2,C2,D2,E2,I2,L2,G3,H3,I3,J3,K3,L3,M3,N3,O3,P3,Q3,R3,S3,T3,U3,V3,W3,X3,Y3,Z3,A4,B4) 
* Partial RF of phase [83,84]:
  - RF of loop [83:1,84:1]:
    B


### Specialization of cost equations f17/29 
* CE 31 is refined into CE [108] 
* CE 30 is refined into CE [109] 
* CE 29 is refined into CE [110] 
* CE 28 is refined into CE [111] 
* CE 32 is refined into CE [112] 
* CE 27 is refined into CE [113] 
* CE 26 is refined into CE [114] 


### Cost equations --> "Loop" of f17/29 
* CEs [113] --> Loop 94 
* CEs [114] --> Loop 95 
* CEs [108] --> Loop 96 
* CEs [109] --> Loop 97 
* CEs [110] --> Loop 98 
* CEs [111] --> Loop 99 
* CEs [112] --> Loop 100 

### Ranking functions of CR f17(B,C,E,F,J,Y1,Z1,A2,B2,C2,D2,E2,J2,K2,G3,H3,I3,J3,K3,L3,M3,N3,O3,P3,Q3,R3,S3,T3,U3) 
* RF of phase [94,95]: [J2+1]

#### Partial ranking functions of CR f17(B,C,E,F,J,Y1,Z1,A2,B2,C2,D2,E2,J2,K2,G3,H3,I3,J3,K3,L3,M3,N3,O3,P3,Q3,R3,S3,T3,U3) 
* Partial RF of phase [94,95]:
  - RF of loop [94:1,95:1]:
    J2+1


### Specialization of cost equations f17_loop_cont/67 
* CE 33 is refined into CE [115] 
* CE 34 is refined into CE [116] 


### Cost equations --> "Loop" of f17_loop_cont/67 
* CEs [115] --> Loop 101 
* CEs [116] --> Loop 102 

### Ranking functions of CR f17_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1,R1,S1,T1,U1,V1,W1,X1,Y1,Z1,A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2,O2) 

#### Partial ranking functions of CR f17_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1,R1,S1,T1,U1,V1,W1,X1,Y1,Z1,A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2,O2) 


### Specialization of cost equations f35/33 
* CE 84 is refined into CE [117] 
* CE 83 is refined into CE [118] 
* CE 79 is refined into CE [119] 
* CE 82 is refined into CE [120] 
* CE 78 is refined into CE [121] 
* CE 81 is refined into CE [122] 
* CE 77 is refined into CE [123] 
* CE 80 is refined into CE [124] 
* CE 76 is refined into CE [125] 
* CE 75 is refined into CE [126] 
* CE 73 is refined into CE [127] 
* CE 71 is refined into CE [128] 
* CE 69 is refined into CE [129] 
* CE 74 is refined into CE [130] 
* CE 72 is refined into CE [131] 
* CE 70 is refined into CE [132] 
* CE 68 is refined into CE [133] 
* CE 67 is refined into CE [134] 
* CE 65 is refined into CE [135] 
* CE 63 is refined into CE [136] 
* CE 61 is refined into CE [137] 
* CE 66 is refined into CE [138] 
* CE 64 is refined into CE [139] 
* CE 62 is refined into CE [140] 
* CE 60 is refined into CE [141] 


### Cost equations --> "Loop" of f35/33 
* CEs [126] --> Loop 103 
* CEs [127] --> Loop 104 
* CEs [128] --> Loop 105 
* CEs [129] --> Loop 106 
* CEs [130] --> Loop 107 
* CEs [131] --> Loop 108 
* CEs [132] --> Loop 109 
* CEs [133] --> Loop 110 
* CEs [134] --> Loop 111 
* CEs [135] --> Loop 112 
* CEs [136] --> Loop 113 
* CEs [137] --> Loop 114 
* CEs [138] --> Loop 115 
* CEs [139] --> Loop 116 
* CEs [140] --> Loop 117 
* CEs [141] --> Loop 118 
* CEs [117] --> Loop 119 
* CEs [118] --> Loop 120 
* CEs [119] --> Loop 121 
* CEs [120] --> Loop 122 
* CEs [121] --> Loop 123 
* CEs [122] --> Loop 124 
* CEs [123] --> Loop 125 
* CEs [124] --> Loop 126 
* CEs [125] --> Loop 127 

### Ranking functions of CR f35(B,C,D,E,F,G,I,J,M,I1,J1,K1,L1,M1,N1,O1,P1,G3,H3,I3,J3,K3,L3,M3,N3,O3,P3,Q3,R3,S3,T3,U3,V3) 
* RF of phase [103,104,105,106,107,108,109,110]: [B]
* RF of phase [111,112,113,114,115,116,117,118]: [B]

#### Partial ranking functions of CR f35(B,C,D,E,F,G,I,J,M,I1,J1,K1,L1,M1,N1,O1,P1,G3,H3,I3,J3,K3,L3,M3,N3,O3,P3,Q3,R3,S3,T3,U3,V3) 
* Partial RF of phase [103,104,105,106,107,108,109,110]:
  - RF of loop [103:1,104:1,105:1,106:1,107:1,108:1,109:1,110:1]:
    B
* Partial RF of phase [111,112,113,114,115,116,117,118]:
  - RF of loop [111:1,112:1,113:1,114:1,115:1,116:1,117:1,118:1]:
    B


### Specialization of cost equations f34/58 
* CE 35 is refined into CE [142,143] 
* CE 36 is refined into CE [144,145] 
* CE 37 is refined into CE [146,147] 
* CE 38 is refined into CE [148,149] 
* CE 39 is refined into CE [150,151] 
* CE 40 is refined into CE [152,153] 
* CE 41 is refined into CE [154,155] 
* CE 42 is refined into CE [156,157] 
* CE 57 is refined into CE [158] 
* CE 55 is refined into CE [159] 
* CE 56 is refined into CE [160] 
* CE 43 is refined into CE [161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176] 
* CE 44 is refined into CE [177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192] 
* CE 45 is refined into CE [193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208] 
* CE 46 is refined into CE [209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224] 
* CE 47 is refined into CE [225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240] 
* CE 48 is refined into CE [241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256] 
* CE 49 is refined into CE [257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272] 
* CE 50 is refined into CE [273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288] 
* CE 54 is refined into CE [289] 
* CE 53 is refined into CE [290] 
* CE 52 is refined into CE [291] 
* CE 51 is refined into CE [292] 


### Cost equations --> "Loop" of f34/58 
* CEs [289] --> Loop 128 
* CEs [290] --> Loop 129 
* CEs [291] --> Loop 130 
* CEs [292] --> Loop 131 
* CEs [176,192,208,224] --> Loop 132 
* CEs [175,191,207,223] --> Loop 133 
* CEs [174,190,206,222] --> Loop 134 
* CEs [173,189,205,221] --> Loop 135 
* CEs [172,188,204,220] --> Loop 136 
* CEs [171,187,203,219] --> Loop 137 
* CEs [170,186,202,218] --> Loop 138 
* CEs [169,185,201,217] --> Loop 139 
* CEs [240,256,272,288] --> Loop 140 
* CEs [239,255,271,287] --> Loop 141 
* CEs [238,254,270,286] --> Loop 142 
* CEs [237,253,269,285] --> Loop 143 
* CEs [236,252,268,284] --> Loop 144 
* CEs [235,251,267,283] --> Loop 145 
* CEs [234,250,266,282] --> Loop 146 
* CEs [233,249,265,281] --> Loop 147 
* CEs [168,184,200,216] --> Loop 148 
* CEs [167,183,199,215] --> Loop 149 
* CEs [166,182,198,214] --> Loop 150 
* CEs [165,181,197,213] --> Loop 151 
* CEs [164,180,196,212] --> Loop 152 
* CEs [163,179,195,211] --> Loop 153 
* CEs [162,178,194,210] --> Loop 154 
* CEs [161,177,193,209] --> Loop 155 
* CEs [232,248,264,280] --> Loop 156 
* CEs [231,247,263,279] --> Loop 157 
* CEs [230,246,262,278] --> Loop 158 
* CEs [229,245,261,277] --> Loop 159 
* CEs [228,244,260,276] --> Loop 160 
* CEs [227,243,259,275] --> Loop 161 
* CEs [226,242,258,274] --> Loop 162 
* CEs [225,241,257,273] --> Loop 163 
* CEs [143,145,147,149] --> Loop 164 
* CEs [142,144,146,148] --> Loop 165 
* CEs [150,152,154,156] --> Loop 166 
* CEs [151,153,155,157] --> Loop 167 
* CEs [158] --> Loop 168 
* CEs [159] --> Loop 169 
* CEs [160] --> Loop 170 

### Ranking functions of CR f34(B,C,D,E,F,G,I,J,M,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Z1,A2,B2,C2,D2,E2,F2,G3,H3,I3,J3,K3,L3,M3,N3,O3,P3,Q3,R3,S3,T3,U3,V3,W3,X3,Y3,Z3,A4,B4,C4,D4,E4,F4,G4,H4,I4) 
* RF of phase [128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163]: [I+1]

#### Partial ranking functions of CR f34(B,C,D,E,F,G,I,J,M,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Z1,A2,B2,C2,D2,E2,F2,G3,H3,I3,J3,K3,L3,M3,N3,O3,P3,Q3,R3,S3,T3,U3,V3,W3,X3,Y3,Z3,A4,B4,C4,D4,E4,F4,G4,H4,I4) 
* Partial RF of phase [128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163]:
  - RF of loop [128:1,129:1,130:1,131:1,132:1,133:1,134:1,135:1,136:1,137:1,138:1,139:1,140:1,141:1,142:1,143:1,144:1,145:1,146:1,147:1,148:1,149:1,150:1,151:1,152:1,153:1,154:1,155:1,156:1,157:1,158:1,159:1,160:1,161:1,162:1,163:1]:
    I+1
  - RF of loop [132:1,133:1,134:1,135:1,136:1,137:1,138:1,139:1,140:1,141:1,142:1,143:1,144:1,145:1,146:1,147:1]:
    B/2-1
  - RF of loop [148:1,149:1,150:1,151:1,152:1,153:1,154:1,155:1,156:1,157:1,158:1,159:1,160:1,161:1,162:1,163:1]:
    B-1


### Specialization of cost equations f15/31 
* CE 90 is refined into CE [293] 
* CE 89 is refined into CE [294] 
* CE 88 is refined into CE [295] 
* CE 87 is refined into CE [296] 
* CE 91 is refined into CE [297] 
* CE 86 is refined into CE [298] 
* CE 85 is refined into CE [299] 


### Cost equations --> "Loop" of f15/31 
* CEs [298] --> Loop 171 
* CEs [299] --> Loop 172 
* CEs [293] --> Loop 173 
* CEs [294] --> Loop 174 
* CEs [295] --> Loop 175 
* CEs [296] --> Loop 176 
* CEs [297] --> Loop 177 

### Ranking functions of CR f15(B,C,E,F,G,J,Y1,Z1,A2,B2,C2,D2,E2,G2,H2,G3,H3,I3,J3,K3,L3,M3,N3,O3,P3,Q3,R3,S3,T3,U3,V3) 
* RF of phase [171,172]: [G2+1]

#### Partial ranking functions of CR f15(B,C,E,F,G,J,Y1,Z1,A2,B2,C2,D2,E2,G2,H2,G3,H3,I3,J3,K3,L3,M3,N3,O3,P3,Q3,R3,S3,T3,U3,V3) 
* Partial RF of phase [171,172]:
  - RF of loop [171:1,172:1]:
    G2+1


### Specialization of cost equations f15_loop_cont/67 
* CE 92 is refined into CE [300] 
* CE 93 is refined into CE [301] 


### Cost equations --> "Loop" of f15_loop_cont/67 
* CEs [300] --> Loop 178 
* CEs [301] --> Loop 179 

### Ranking functions of CR f15_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1,R1,S1,T1,U1,V1,W1,X1,Y1,Z1,A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2,O2) 

#### Partial ranking functions of CR f15_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1,R1,S1,T1,U1,V1,W1,X1,Y1,Z1,A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2,O2) 


### Specialization of cost equations f34_loop_cont/67 
* CE 59 is refined into CE [302,303,304,305,306,307,308,309,310,311] 
* CE 58 is refined into CE [312] 


### Cost equations --> "Loop" of f34_loop_cont/67 
* CEs [307] --> Loop 180 
* CEs [308,309,310,311] --> Loop 181 
* CEs [306] --> Loop 182 
* CEs [302,303,304,305] --> Loop 183 
* CEs [312] --> Loop 184 

### Ranking functions of CR f34_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1,R1,S1,T1,U1,V1,W1,X1,Y1,Z1,A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2,O2) 

#### Partial ranking functions of CR f34_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1,R1,S1,T1,U1,V1,W1,X1,Y1,Z1,A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2,O2) 


### Specialization of cost equations f29_loop_cont/67 
* CE 24 is refined into CE [313,314,315,316,317,318,319,320,321,322] 
* CE 23 is refined into CE [323] 
* CE 25 is refined into CE [324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341] 


### Cost equations --> "Loop" of f29_loop_cont/67 
* CEs [319,320,321,322] --> Loop 185 
* CEs [317] --> Loop 186 
* CEs [313,314,315,316] --> Loop 187 
* CEs [318] --> Loop 188 
* CEs [323] --> Loop 189 
* CEs [341] --> Loop 190 
* CEs [340] --> Loop 191 
* CEs [339] --> Loop 192 
* CEs [338] --> Loop 193 
* CEs [337] --> Loop 194 
* CEs [336] --> Loop 195 
* CEs [335] --> Loop 196 
* CEs [334] --> Loop 197 
* CEs [333] --> Loop 198 
* CEs [330] --> Loop 199 
* CEs [331] --> Loop 200 
* CEs [324,326] --> Loop 201 
* CEs [325,327] --> Loop 202 
* CEs [328] --> Loop 203 
* CEs [329] --> Loop 204 
* CEs [332] --> Loop 205 

### Ranking functions of CR f29_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1,R1,S1,T1,U1,V1,W1,X1,Y1,Z1,A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2,O2) 

#### Partial ranking functions of CR f29_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1,R1,S1,T1,U1,V1,W1,X1,Y1,Z1,A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2,O2) 


### Specialization of cost equations f1_loop_cont/67 
* CE 8 is refined into CE [342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403] 
* CE 7 is refined into CE [404] 


### Cost equations --> "Loop" of f1_loop_cont/67 
* CEs [395] --> Loop 206 
* CEs [394] --> Loop 207 
* CEs [391] --> Loop 208 
* CEs [393] --> Loop 209 
* CEs [392] --> Loop 210 
* CEs [403] --> Loop 211 
* CEs [402] --> Loop 212 
* CEs [401] --> Loop 213 
* CEs [400] --> Loop 214 
* CEs [399] --> Loop 215 
* CEs [398] --> Loop 216 
* CEs [397] --> Loop 217 
* CEs [396] --> Loop 218 
* CEs [383,389] --> Loop 219 
* CEs [382,388] --> Loop 220 
* CEs [380,386] --> Loop 221 
* CEs [379,381,385,387] --> Loop 222 
* CEs [378,384] --> Loop 223 
* CEs [359,365] --> Loop 224 
* CEs [358,364] --> Loop 225 
* CEs [356,362] --> Loop 226 
* CEs [355,357,361,363] --> Loop 227 
* CEs [354,360] --> Loop 228 
* CEs [370,376] --> Loop 229 
* CEs [369,375] --> Loop 230 
* CEs [368,374] --> Loop 231 
* CEs [367,371,373,377] --> Loop 232 
* CEs [366,372] --> Loop 233 
* CEs [346,352] --> Loop 234 
* CEs [345,351] --> Loop 235 
* CEs [344,350] --> Loop 236 
* CEs [343,347,349,353] --> Loop 237 
* CEs [342,348] --> Loop 238 
* CEs [390] --> Loop 239 
* CEs [404] --> Loop 240 

### Ranking functions of CR f1_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1,R1,S1,T1,U1,V1,W1,X1,Y1,Z1,A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2,O2) 

#### Partial ranking functions of CR f1_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1,R1,S1,T1,U1,V1,W1,X1,Y1,Z1,A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2,O2) 


### Specialization of cost equations f32/10 
* CE 11 is refined into CE [405] 
* CE 10 is refined into CE [406] 
* CE 9 is refined into CE [407] 


### Cost equations --> "Loop" of f32/10 
* CEs [406] --> Loop 241 
* CEs [407] --> Loop 242 
* CEs [405] --> Loop 243 

### Ranking functions of CR f32(B,C,E,F,G,M,A1,B1,C1,G3) 
* RF of phase [241,242]: [B]

#### Partial ranking functions of CR f32(B,C,E,F,G,M,A1,B1,C1,G3) 
* Partial RF of phase [241,242]:
  - RF of loop [241:1,242:1]:
    B


### Specialization of cost equations f26/66 
* CE 1 is refined into CE [408] 
* CE 2 is refined into CE [409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470] 
* CE 3 is refined into CE [471,472] 


### Cost equations --> "Loop" of f26/66 
* CEs [437,440,467,470] --> Loop 244 
* CEs [436,438,439,466,468,469,472] --> Loop 245 
* CEs [433,435,463,465] --> Loop 246 
* CEs [432,434,462,464] --> Loop 247 
* CEs [421,431,451,461] --> Loop 248 
* CEs [420,430,450,460] --> Loop 249 
* CEs [416,419,426,429,446,449,456,459] --> Loop 250 
* CEs [415,418,425,428,445,448,455,458] --> Loop 251 
* CEs [417,427,447,457] --> Loop 252 
* CEs [414,424,444,454] --> Loop 253 
* CEs [413,423,443,453] --> Loop 254 
* CEs [412,422,442,452] --> Loop 255 
* CEs [408,409,410,411,441,471] --> Loop 256 

### Ranking functions of CR f26(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1,R1,S1,T1,U1,V1,W1,X1,Y1,Z1,A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,G3) 

#### Partial ranking functions of CR f26(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1,R1,S1,T1,U1,V1,W1,X1,Y1,Z1,A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,G3) 


Computing Bounds
=====================================

#### Cost of chains of f1(A,C,E,F,Q1,R1,S1,T1,U1,V1,W1,X1,Y1,G3,H3,I3,J3,K3,L3,M3,N3,O3,P3,Q3,R3,S3,T3):
* Chain [[80],82]: 1*it(80)+0
  Such that:it(80) =< -A+Q1

  with precondition: [G3=3,E=Q1,R1=T1,A>=2,E>=A+1] 

* Chain [[80],81]: 1*it(80)+0
  Such that:it(80) =< -A+E

  with precondition: [G3=7,E=Q1,R1=T1,I3=K3,E=Q3+1,A>=2,J3>=2,E>=A+1,H3>=J3] 

* Chain [82]: 0
  with precondition: [G3=3,Q1=E,T1=R1,A>=2,Q1>=A] 

* Chain [81]: 0
  with precondition: [G3=7,E=A,E=Q1,T1=R1,P3=U1,Q3=V1,T1=I3,T1=K3,E>=2,J3>=2,H3>=J3] 


#### Cost of chains of f29(A,B,C,D,E,F,G,H,J,K,L,M,N,O,Z1,A2,B2,C2,D2,E2,I2,L2,G3,H3,I3,J3,K3,L3,M3,N3,O3,P3,Q3,R3,S3,T3,U3,V3,W3,X3,Y3,Z3,A4,B4):
* Chain [[83,84],93]: 2*it(83)+0
  Such that:aux(1) =< B
aux(2) =< B-S3+1
it(83) =< aux(1)
it(83) =< aux(2)

  with precondition: [D=1,G3=2,J3=1,M3=0,C=I3,N3+1=P3,H3+1=S3,A=T3,Z1=U3,A2=V3,B2=W3,C2=X3,D2=Y3,E2=Z3,I2=A4,L2=B4,0>=C+1,0>=L3+1,A>=2,H3>=1,K3>=2,B>=H3+1] 

* Chain [[83,84],92]: 2*it(83)+0
  Such that:aux(1) =< B
aux(2) =< B-S3+1
it(83) =< aux(1)
it(83) =< aux(2)

  with precondition: [D=1,G3=2,J3=1,M3=0,C=I3,N3+1=P3,H3+1=S3,A=T3,Z1=U3,A2=V3,B2=W3,C2=X3,D2=Y3,E2=Z3,I2=A4,L2=B4,0>=C+1,A>=2,H3>=1,K3>=2,L3>=1,B>=H3+1] 

* Chain [[83,84],91]: 2*it(83)+0
  Such that:aux(1) =< B
aux(2) =< B-S3+1
it(83) =< aux(1)
it(83) =< aux(2)

  with precondition: [D=1,G3=2,J3=1,M3=0,C=I3,N3+1=P3,H3+1=S3,A=T3,Z1=U3,A2=V3,B2=W3,C2=X3,D2=Y3,E2=Z3,I2=A4,L2=B4,0>=L3+1,A>=2,C>=1,H3>=1,K3>=2,B>=H3+1] 

* Chain [[83,84],90]: 2*it(83)+0
  Such that:aux(1) =< B
aux(2) =< B-S3+1
it(83) =< aux(1)
it(83) =< aux(2)

  with precondition: [D=1,G3=2,J3=1,M3=0,C=I3,N3+1=P3,H3+1=S3,A=T3,Z1=U3,A2=V3,B2=W3,C2=X3,D2=Y3,E2=Z3,I2=A4,L2=B4,A>=2,C>=1,H3>=1,K3>=2,L3>=1,B>=H3+1] 

* Chain [[83,84],89]: 2*it(83)+0
  Such that:aux(3) =< B
it(83) =< aux(3)

  with precondition: [G3=3,A>=2,B>=1] 

* Chain [[83,84],88]: 2*it(83)+0
  Such that:aux(4) =< B
it(83) =< aux(4)

  with precondition: [G3=6,S3=1,U3=0,X3=0,C=I3,D=J3,C=L3,H=N3,J=O3,K=P3,L=Q3,A=T3,C=V3,C=W3,C=Y3,C=Z3,A4+1=B4,0>=C+1,0>=H3,A>=2,B>=1,K3>=2] 

* Chain [[83,84],85]: 2*it(83)+0
  Such that:aux(5) =< B
it(83) =< aux(5)

  with precondition: [G3=6,S3=1,U3=0,X3=0,C=I3,D=J3,C=L3,H=N3,J=O3,K=P3,L=Q3,A=T3,C=V3,C=W3,C=Y3,C=Z3,A4+1=B4,0>=H3,A>=2,B>=1,C>=1,K3>=2] 

* Chain [93]: 0
  with precondition: [D=1,G3=2,J3=1,M3=0,S3=N,T3=O,U3=Z1,V3=A2,W3=B2,X3=C2,Y3=D2,Z3=E2,A4=I2,B4=L2,B=H3,C=I3,P3=N3+1,0>=C+1,0>=L3+1,A>=0,B>=1,K3>=2] 

* Chain [92]: 0
  with precondition: [D=1,G3=2,J3=1,M3=0,S3=N,T3=O,U3=Z1,V3=A2,W3=B2,X3=C2,Y3=D2,Z3=E2,A4=I2,B4=L2,B=H3,C=I3,P3=N3+1,0>=C+1,A>=0,B>=1,K3>=2,L3>=1] 

* Chain [91]: 0
  with precondition: [D=1,G3=2,J3=1,M3=0,S3=N,T3=O,U3=Z1,V3=A2,W3=B2,X3=C2,Y3=D2,Z3=E2,A4=I2,B4=L2,B=H3,C=I3,P3=N3+1,0>=L3+1,A>=0,B>=1,C>=1,K3>=2] 

* Chain [90]: 0
  with precondition: [D=1,G3=2,J3=1,M3=0,S3=N,T3=O,U3=Z1,V3=A2,W3=B2,X3=C2,Y3=D2,Z3=E2,A4=I2,B4=L2,B=H3,C=I3,P3=N3+1,A>=0,B>=1,C>=1,K3>=2,L3>=1] 

* Chain [89]: 0
  with precondition: [G3=3] 

* Chain [88]: 0
  with precondition: [G3=6,U3=0,X3=0,J3=D,M3=G,N3=H,O3=J,P3=K,Q3=L,R3=M,S3=N,T3=O,F=I3,F=L3,F=V3,F=W3,F=Y3,F=Z3,B4=A4+1,0>=B,0>=C+1,0>=F+1,0>=H3,A>=2,K3>=2] 

* Chain [87]: 0
  with precondition: [G3=6,U3=0,X3=0,J3=D,M3=G,N3=H,O3=J,P3=K,Q3=L,R3=M,S3=N,T3=O,F=I3,F=L3,F=V3,F=W3,F=Y3,F=Z3,B4=A4+1,0>=B,0>=C+1,0>=H3,A>=2,F>=1,K3>=2] 

* Chain [86]: 0
  with precondition: [G3=6,U3=0,X3=0,J3=D,M3=G,N3=H,O3=J,P3=K,Q3=L,R3=M,S3=N,T3=O,F=I3,F=L3,F=V3,F=W3,F=Y3,F=Z3,B4=A4+1,0>=B,0>=F+1,0>=H3,A>=2,C>=1,K3>=2] 

* Chain [85]: 0
  with precondition: [G3=6,U3=0,X3=0,J3=D,M3=G,N3=H,O3=J,P3=K,Q3=L,R3=M,S3=N,T3=O,F=I3,F=L3,F=V3,F=W3,F=Y3,F=Z3,B4=A4+1,0>=B,0>=H3,A>=2,C>=1,F>=1,K3>=2] 


#### Cost of chains of f17(B,C,E,F,J,Y1,Z1,A2,B2,C2,D2,E2,J2,K2,G3,H3,I3,J3,K3,L3,M3,N3,O3,P3,Q3,R3,S3,T3,U3):
* Chain [[94,95],100]: 2*it(94)+0
  Such that:aux(8) =< J2+1
it(94) =< aux(8)

  with precondition: [Z1=0,G3=3,J2>=0] 

* Chain [[94,95],99]: 2*it(94)+0
  Such that:aux(6) =< J2+1
aux(7) =< J2-T3
it(94) =< aux(6)
it(94) =< aux(7)

  with precondition: [Z1=0,A2=0,G3=4,T3=U3,0>=H3,0>=I3+1,0>=S3+1,J3>=2,T3>=0,J2>=T3+1] 

* Chain [[94,95],98]: 2*it(94)+0
  Such that:aux(6) =< J2+1
aux(7) =< J2-T3
it(94) =< aux(6)
it(94) =< aux(7)

  with precondition: [Z1=0,A2=0,G3=4,T3=U3,0>=H3,0>=I3+1,J3>=2,S3>=1,T3>=0,J2>=T3+1] 

* Chain [[94,95],97]: 2*it(94)+0
  Such that:aux(6) =< J2+1
aux(7) =< J2-T3
it(94) =< aux(6)
it(94) =< aux(7)

  with precondition: [Z1=0,A2=0,G3=4,T3=U3,0>=H3,0>=S3+1,I3>=1,J3>=2,T3>=0,J2>=T3+1] 

* Chain [[94,95],96]: 2*it(94)+0
  Such that:aux(6) =< J2+1
aux(7) =< J2-T3
it(94) =< aux(6)
it(94) =< aux(7)

  with precondition: [Z1=0,A2=0,G3=4,T3=U3,0>=H3,I3>=1,J3>=2,S3>=1,T3>=0,J2>=T3+1] 

* Chain [100]: 0
  with precondition: [G3=3] 

* Chain [99]: 0
  with precondition: [G3=4,K3=F,L3=J,A2=Z1,U3=K2,J2=T3,0>=H3,0>=I3+1,0>=S3+1,J2>=0,J3>=2] 

* Chain [98]: 0
  with precondition: [G3=4,K3=F,L3=J,A2=Z1,U3=K2,J2=T3,0>=H3,0>=I3+1,J2>=0,J3>=2,S3>=1] 

* Chain [97]: 0
  with precondition: [G3=4,K3=F,L3=J,A2=Z1,U3=K2,J2=T3,0>=H3,0>=S3+1,J2>=0,I3>=1,J3>=2] 

* Chain [96]: 0
  with precondition: [G3=4,K3=F,L3=J,A2=Z1,U3=K2,J2=T3,0>=H3,J2>=0,I3>=1,J3>=2,S3>=1] 


#### Cost of chains of f17_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1,R1,S1,T1,U1,V1,W1,X1,Y1,Z1,A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2,O2):
* Chain [102]: 0
  with precondition: [A=3] 

* Chain [101]: 0
  with precondition: [A=4] 


#### Cost of chains of f35(B,C,D,E,F,G,I,J,M,I1,J1,K1,L1,M1,N1,O1,P1,G3,H3,I3,J3,K3,L3,M3,N3,O3,P3,Q3,R3,S3,T3,U3,V3):
* Chain [[111,112,113,114,115,116,117,118],127]: 8*it(111)+0
  Such that:aux(9) =< B
aux(10) =< B-H3
it(111) =< aux(9)
it(111) =< aux(10)

  with precondition: [G3=2,L3=0,D+1=I3,I=M3+1,H3+1=Q3,D=R3,I=S3,D+1=U3,I=V3+1,0>=C+1,0>=K3+1,0>=P3+1,0>=T3+1,D>=0,E>=2,I>=0,H3>=1,J3>=2,B>=H3+1] 

* Chain [[111,112,113,114,115,116,117,118],126]: 8*it(111)+0
  Such that:aux(9) =< B
aux(10) =< B-H3
it(111) =< aux(9)
it(111) =< aux(10)

  with precondition: [G3=2,L3=0,D+1=I3,I=M3+1,H3+1=Q3,D=R3,I=S3,D+1=U3,I=V3+1,0>=C+1,0>=K3+1,0>=P3+1,D>=0,E>=2,I>=0,H3>=1,J3>=2,T3>=1,B>=H3+1] 

* Chain [[111,112,113,114,115,116,117,118],125]: 8*it(111)+0
  Such that:aux(9) =< B
aux(10) =< B-H3
it(111) =< aux(9)
it(111) =< aux(10)

  with precondition: [G3=2,L3=0,D+1=I3,I=M3+1,H3+1=Q3,D=R3,I=S3,D+1=U3,I=V3+1,0>=C+1,0>=K3+1,0>=T3+1,D>=0,E>=2,I>=0,H3>=1,J3>=2,P3>=1,B>=H3+1] 

* Chain [[111,112,113,114,115,116,117,118],124]: 8*it(111)+0
  Such that:aux(9) =< B
aux(10) =< B-H3
it(111) =< aux(9)
it(111) =< aux(10)

  with precondition: [G3=2,L3=0,D+1=I3,I=M3+1,H3+1=Q3,D=R3,I=S3,D+1=U3,I=V3+1,0>=C+1,0>=K3+1,D>=0,E>=2,I>=0,H3>=1,J3>=2,P3>=1,T3>=1,B>=H3+1] 

* Chain [[111,112,113,114,115,116,117,118],123]: 8*it(111)+0
  Such that:aux(9) =< B
aux(10) =< B-H3
it(111) =< aux(9)
it(111) =< aux(10)

  with precondition: [G3=2,L3=0,D+1=I3,I=M3+1,H3+1=Q3,D=R3,I=S3,D+1=U3,I=V3+1,0>=C+1,0>=P3+1,0>=T3+1,D>=0,E>=2,I>=0,H3>=1,J3>=2,K3>=1,B>=H3+1] 

* Chain [[111,112,113,114,115,116,117,118],122]: 8*it(111)+0
  Such that:aux(9) =< B
aux(10) =< B-H3
it(111) =< aux(9)
it(111) =< aux(10)

  with precondition: [G3=2,L3=0,D+1=I3,I=M3+1,H3+1=Q3,D=R3,I=S3,D+1=U3,I=V3+1,0>=C+1,0>=P3+1,D>=0,E>=2,I>=0,H3>=1,J3>=2,K3>=1,T3>=1,B>=H3+1] 

* Chain [[111,112,113,114,115,116,117,118],121]: 8*it(111)+0
  Such that:aux(9) =< B
aux(10) =< B-H3
it(111) =< aux(9)
it(111) =< aux(10)

  with precondition: [G3=2,L3=0,D+1=I3,I=M3+1,H3+1=Q3,D=R3,I=S3,D+1=U3,I=V3+1,0>=C+1,0>=T3+1,D>=0,E>=2,I>=0,H3>=1,J3>=2,K3>=1,P3>=1,B>=H3+1] 

* Chain [[111,112,113,114,115,116,117,118],120]: 8*it(111)+0
  Such that:aux(9) =< B
aux(10) =< B-H3
it(111) =< aux(9)
it(111) =< aux(10)

  with precondition: [G3=2,L3=0,D+1=I3,I=M3+1,H3+1=Q3,D=R3,I=S3,D+1=U3,I=V3+1,0>=C+1,D>=0,E>=2,I>=0,H3>=1,J3>=2,K3>=1,P3>=1,T3>=1,B>=H3+1] 

* Chain [[111,112,113,114,115,116,117,118],119]: 8*it(111)+0
  Such that:aux(11) =< B
it(111) =< aux(11)

  with precondition: [G3=3,0>=C+1,B>=1,D>=0,E>=2,I>=0] 

* Chain [[103,104,105,106,107,108,109,110],127]: 8*it(103)+0
  Such that:aux(12) =< B
aux(13) =< B-H3
it(103) =< aux(12)
it(103) =< aux(13)

  with precondition: [G3=2,L3=0,D+1=I3,I=M3+1,H3+1=Q3,D=R3,I=S3,D+1=U3,I=V3+1,0>=K3+1,0>=P3+1,0>=T3+1,C>=1,D>=0,E>=2,I>=0,H3>=1,J3>=2,B>=H3+1] 

* Chain [[103,104,105,106,107,108,109,110],126]: 8*it(103)+0
  Such that:aux(12) =< B
aux(13) =< B-H3
it(103) =< aux(12)
it(103) =< aux(13)

  with precondition: [G3=2,L3=0,D+1=I3,I=M3+1,H3+1=Q3,D=R3,I=S3,D+1=U3,I=V3+1,0>=K3+1,0>=P3+1,C>=1,D>=0,E>=2,I>=0,H3>=1,J3>=2,T3>=1,B>=H3+1] 

* Chain [[103,104,105,106,107,108,109,110],125]: 8*it(103)+0
  Such that:aux(12) =< B
aux(13) =< B-H3
it(103) =< aux(12)
it(103) =< aux(13)

  with precondition: [G3=2,L3=0,D+1=I3,I=M3+1,H3+1=Q3,D=R3,I=S3,D+1=U3,I=V3+1,0>=K3+1,0>=T3+1,C>=1,D>=0,E>=2,I>=0,H3>=1,J3>=2,P3>=1,B>=H3+1] 

* Chain [[103,104,105,106,107,108,109,110],124]: 8*it(103)+0
  Such that:aux(12) =< B
aux(13) =< B-H3
it(103) =< aux(12)
it(103) =< aux(13)

  with precondition: [G3=2,L3=0,D+1=I3,I=M3+1,H3+1=Q3,D=R3,I=S3,D+1=U3,I=V3+1,0>=K3+1,C>=1,D>=0,E>=2,I>=0,H3>=1,J3>=2,P3>=1,T3>=1,B>=H3+1] 

* Chain [[103,104,105,106,107,108,109,110],123]: 8*it(103)+0
  Such that:aux(12) =< B
aux(13) =< B-H3
it(103) =< aux(12)
it(103) =< aux(13)

  with precondition: [G3=2,L3=0,D+1=I3,I=M3+1,H3+1=Q3,D=R3,I=S3,D+1=U3,I=V3+1,0>=P3+1,0>=T3+1,C>=1,D>=0,E>=2,I>=0,H3>=1,J3>=2,K3>=1,B>=H3+1] 

* Chain [[103,104,105,106,107,108,109,110],122]: 8*it(103)+0
  Such that:aux(12) =< B
aux(13) =< B-H3
it(103) =< aux(12)
it(103) =< aux(13)

  with precondition: [G3=2,L3=0,D+1=I3,I=M3+1,H3+1=Q3,D=R3,I=S3,D+1=U3,I=V3+1,0>=P3+1,C>=1,D>=0,E>=2,I>=0,H3>=1,J3>=2,K3>=1,T3>=1,B>=H3+1] 

* Chain [[103,104,105,106,107,108,109,110],121]: 8*it(103)+0
  Such that:aux(12) =< B
aux(13) =< B-H3
it(103) =< aux(12)
it(103) =< aux(13)

  with precondition: [G3=2,L3=0,D+1=I3,I=M3+1,H3+1=Q3,D=R3,I=S3,D+1=U3,I=V3+1,0>=T3+1,C>=1,D>=0,E>=2,I>=0,H3>=1,J3>=2,K3>=1,P3>=1,B>=H3+1] 

* Chain [[103,104,105,106,107,108,109,110],120]: 8*it(103)+0
  Such that:aux(12) =< B
aux(13) =< B-H3
it(103) =< aux(12)
it(103) =< aux(13)

  with precondition: [G3=2,L3=0,D+1=I3,I=M3+1,H3+1=Q3,D=R3,I=S3,D+1=U3,I=V3+1,C>=1,D>=0,E>=2,I>=0,H3>=1,J3>=2,K3>=1,P3>=1,T3>=1,B>=H3+1] 

* Chain [[103,104,105,106,107,108,109,110],119]: 8*it(103)+0
  Such that:aux(14) =< B
it(103) =< aux(14)

  with precondition: [G3=3,B>=1,C>=1,D>=0,E>=2,I>=0] 

* Chain [127]: 0
  with precondition: [G3=2,L3=0,Q3=J1,R3=K1,S3=L1,B=H3,D+1=I3,I=M3+1,D+1=U3,I=V3+1,0>=K3+1,0>=P3+1,0>=T3+1,B>=1,D>=0,E>=2,I>=0,J3>=2] 

* Chain [126]: 0
  with precondition: [G3=2,L3=0,Q3=J1,R3=K1,S3=L1,B=H3,D+1=I3,I=M3+1,D+1=U3,I=V3+1,0>=K3+1,0>=P3+1,B>=1,D>=0,E>=2,I>=0,J3>=2,T3>=1] 

* Chain [125]: 0
  with precondition: [G3=2,L3=0,Q3=J1,R3=K1,S3=L1,B=H3,D+1=I3,I=M3+1,D+1=U3,I=V3+1,0>=K3+1,0>=T3+1,B>=1,D>=0,E>=2,I>=0,J3>=2,P3>=1] 

* Chain [124]: 0
  with precondition: [G3=2,L3=0,Q3=J1,R3=K1,S3=L1,B=H3,D+1=I3,I=M3+1,D+1=U3,I=V3+1,0>=K3+1,B>=1,D>=0,E>=2,I>=0,J3>=2,P3>=1,T3>=1] 

* Chain [123]: 0
  with precondition: [G3=2,L3=0,Q3=J1,R3=K1,S3=L1,B=H3,D+1=I3,I=M3+1,D+1=U3,I=V3+1,0>=P3+1,0>=T3+1,B>=1,D>=0,E>=2,I>=0,J3>=2,K3>=1] 

* Chain [122]: 0
  with precondition: [G3=2,L3=0,Q3=J1,R3=K1,S3=L1,B=H3,D+1=I3,I=M3+1,D+1=U3,I=V3+1,0>=P3+1,B>=1,D>=0,E>=2,I>=0,J3>=2,K3>=1,T3>=1] 

* Chain [121]: 0
  with precondition: [G3=2,L3=0,Q3=J1,R3=K1,S3=L1,B=H3,D+1=I3,I=M3+1,D+1=U3,I=V3+1,0>=T3+1,B>=1,D>=0,E>=2,I>=0,J3>=2,K3>=1,P3>=1] 

* Chain [120]: 0
  with precondition: [G3=2,L3=0,Q3=J1,R3=K1,S3=L1,B=H3,D+1=I3,I=M3+1,D+1=U3,I=V3+1,B>=1,D>=0,E>=2,I>=0,J3>=2,K3>=1,P3>=1,T3>=1] 

* Chain [119]: 0
  with precondition: [G3=3,B>=0,D>=0,E>=2,I>=0] 


#### Cost of chains of f34(B,C,D,E,F,G,I,J,M,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Z1,A2,B2,C2,D2,E2,F2,G3,H3,I3,J3,K3,L3,M3,N3,O3,P3,Q3,R3,S3,T3,U3,V3,W3,X3,Y3,Z3,A4,B4,C4,D4,E4,F4,G4,H4,I4):
* Chain [[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163],170]: 4*it(128)+1*it(132)+15*it(133)+16*it(148)+32*s(241)+480*s(244)+0
  Such that:aux(67) =< I+1
aux(68) =< I-N3
aux(69) =< B
aux(70) =< B/2
it(133) =< aux(69)
it(148) =< aux(69)
it(132) =< aux(70)
it(133) =< aux(70)
it(128) =< aux(67)
it(132) =< aux(67)
it(133) =< aux(67)
it(148) =< aux(67)
it(128) =< aux(68)
it(132) =< aux(68)
it(133) =< aux(68)
it(148) =< aux(68)
aux(48) =< aux(69)
s(243) =< it(132)*aux(69)
s(246) =< it(133)*aux(48)
s(244) =< s(246)
s(244) =< aux(69)
s(241) =< s(243)
s(241) =< aux(69)

  with precondition: [C=0,G3=5,I3=0,M3=0,R3=0,D4=0,G4=0,D1=Q3,N3=U3,I1=V3,J1=W3,K1=X3,L1=Y3,M1=Z3,N1=A4,O1=B4,P1=C4,L3=E4,L3=F4,L3=H4,L3=I4,N3+T3=D+I,0>=L3+1,B>=1,D>=0,H3>=1,K3>=2,N3>=0,I>=N3+1] 

* Chain [[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163],169]: 4*it(128)+1*it(132)+15*it(133)+16*it(148)+32*s(241)+480*s(244)+0
  Such that:aux(67) =< I+1
aux(68) =< I-N3
aux(71) =< B
aux(72) =< B/2
it(133) =< aux(71)
it(148) =< aux(71)
it(132) =< aux(72)
it(133) =< aux(72)
it(128) =< aux(67)
it(132) =< aux(67)
it(133) =< aux(67)
it(148) =< aux(67)
it(128) =< aux(68)
it(132) =< aux(68)
it(133) =< aux(68)
it(148) =< aux(68)
aux(48) =< aux(71)
s(243) =< it(132)*aux(71)
s(246) =< it(133)*aux(48)
s(244) =< s(246)
s(244) =< aux(71)
s(241) =< s(243)
s(241) =< aux(71)

  with precondition: [C=0,G3=5,I3=0,M3=0,R3=0,D4=0,G4=0,D1=Q3,N3=U3,I1=V3,J1=W3,K1=X3,L1=Y3,M1=Z3,N1=A4,O1=B4,P1=C4,L3=E4,L3=F4,L3=H4,L3=I4,N3+T3=D+I,B>=1,D>=0,H3>=1,K3>=2,L3>=1,N3>=0,I>=N3+1] 

* Chain [[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163],168]: 4*it(128)+1*it(132)+15*it(133)+16*it(148)+32*s(241)+480*s(244)+0
  Such that:aux(73) =< B
aux(74) =< B/2
aux(75) =< I+1
it(133) =< aux(73)
it(148) =< aux(73)
it(132) =< aux(74)
it(133) =< aux(74)
it(128) =< aux(75)
it(132) =< aux(75)
it(133) =< aux(75)
it(148) =< aux(75)
aux(48) =< aux(73)
s(243) =< it(132)*aux(73)
s(246) =< it(133)*aux(48)
s(244) =< s(246)
s(244) =< aux(73)
s(241) =< s(243)
s(241) =< aux(73)

  with precondition: [G3=3,B>=1,D>=0,I>=0] 

* Chain [[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163],167]: 4*it(128)+1*it(132)+15*it(133)+16*it(148)+32*s(241)+480*s(244)+0
  Such that:aux(68) =< I
aux(67) =< I+1
aux(76) =< B
aux(77) =< B/2
it(133) =< aux(76)
it(148) =< aux(76)
it(132) =< aux(77)
it(133) =< aux(77)
it(128) =< aux(67)
it(132) =< aux(67)
it(133) =< aux(67)
it(148) =< aux(67)
it(128) =< aux(68)
it(132) =< aux(68)
it(133) =< aux(68)
it(148) =< aux(68)
aux(48) =< aux(76)
s(243) =< it(132)*aux(76)
s(246) =< it(133)*aux(48)
s(244) =< s(246)
s(244) =< aux(76)
s(241) =< s(243)
s(241) =< aux(76)

  with precondition: [G3=3,0>=C+1,B>=1,D>=0,I>=1] 

* Chain [[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163],166]: 4*it(128)+1*it(132)+15*it(133)+16*it(148)+32*s(241)+480*s(244)+32*s(290)+0
  Such that:aux(68) =< I
aux(67) =< I+1
aux(79) =< B
aux(80) =< B/2
aux(66) =< aux(79)
aux(66) =< aux(80)
s(290) =< aux(79)
it(133) =< aux(79)
it(148) =< aux(79)
it(132) =< aux(80)
it(133) =< aux(80)
it(132) =< aux(66)
it(133) =< aux(66)
it(128) =< aux(67)
it(132) =< aux(67)
it(133) =< aux(67)
it(148) =< aux(67)
it(128) =< aux(68)
it(132) =< aux(68)
it(133) =< aux(68)
it(148) =< aux(68)
aux(48) =< aux(79)
s(243) =< it(132)*aux(79)
s(246) =< it(133)*aux(48)
s(244) =< s(246)
s(244) =< aux(79)
s(241) =< s(243)
s(241) =< aux(79)

  with precondition: [G3=3,0>=C+1,B>=2,D>=0,I>=1] 

* Chain [[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163],165]: 4*it(128)+1*it(132)+15*it(133)+16*it(148)+32*s(241)+480*s(244)+0
  Such that:aux(68) =< I
aux(67) =< I+1
aux(81) =< B
aux(82) =< B/2
it(133) =< aux(81)
it(148) =< aux(81)
it(132) =< aux(82)
it(133) =< aux(82)
it(128) =< aux(67)
it(132) =< aux(67)
it(133) =< aux(67)
it(148) =< aux(67)
it(128) =< aux(68)
it(132) =< aux(68)
it(133) =< aux(68)
it(148) =< aux(68)
aux(48) =< aux(81)
s(243) =< it(132)*aux(81)
s(246) =< it(133)*aux(48)
s(244) =< s(246)
s(244) =< aux(81)
s(241) =< s(243)
s(241) =< aux(81)

  with precondition: [G3=3,B>=1,C>=1,D>=0,I>=1] 

* Chain [[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163],164]: 4*it(128)+1*it(132)+15*it(133)+16*it(148)+32*s(241)+480*s(244)+32*s(298)+0
  Such that:aux(68) =< I
aux(67) =< I+1
aux(84) =< B
aux(85) =< B/2
aux(66) =< aux(84)
aux(66) =< aux(85)
s(298) =< aux(84)
it(133) =< aux(84)
it(148) =< aux(84)
it(132) =< aux(85)
it(133) =< aux(85)
it(132) =< aux(66)
it(133) =< aux(66)
it(128) =< aux(67)
it(132) =< aux(67)
it(133) =< aux(67)
it(148) =< aux(67)
it(128) =< aux(68)
it(132) =< aux(68)
it(133) =< aux(68)
it(148) =< aux(68)
aux(48) =< aux(84)
s(243) =< it(132)*aux(84)
s(246) =< it(133)*aux(48)
s(244) =< s(246)
s(244) =< aux(84)
s(241) =< s(243)
s(241) =< aux(84)

  with precondition: [G3=3,B>=2,C>=1,D>=0,I>=1] 

* Chain [170]: 0
  with precondition: [C=0,G3=5,I3=0,M3=0,D4=0,G4=0,O3=J,P3=M,Q3=D1,R3=E1,S3=F1,T3=G1,U3=H1,V3=I1,W3=J1,X3=K1,Y3=L1,Z3=M1,A4=N1,B4=O1,C4=P1,F=L3,I=N3,F=E4,F=F4,F=H4,F=I4,0>=F+1,D>=0,I>=0,H3>=1,K3>=2] 

* Chain [169]: 0
  with precondition: [C=0,G3=5,I3=0,M3=0,D4=0,G4=0,O3=J,P3=M,Q3=D1,R3=E1,S3=F1,T3=G1,U3=H1,V3=I1,W3=J1,X3=K1,Y3=L1,Z3=M1,A4=N1,B4=O1,C4=P1,F=L3,I=N3,F=E4,F=F4,F=H4,F=I4,D>=0,F>=1,I>=0,H3>=1,K3>=2] 

* Chain [168]: 0
  with precondition: [G3=3] 

* Chain [167]: 0
  with precondition: [G3=3,0>=C+1,B>=1,D>=0,I>=0] 

* Chain [166]: 32*s(290)+0
  Such that:aux(78) =< B
s(290) =< aux(78)

  with precondition: [G3=3,0>=C+1,B>=2,D>=0,I>=0] 

* Chain [165]: 0
  with precondition: [G3=3,B>=1,C>=1,D>=0,I>=0] 

* Chain [164]: 32*s(298)+0
  Such that:aux(83) =< B
s(298) =< aux(83)

  with precondition: [G3=3,B>=2,C>=1,D>=0,I>=0] 


#### Cost of chains of f15(B,C,E,F,G,J,Y1,Z1,A2,B2,C2,D2,E2,G2,H2,G3,H3,I3,J3,K3,L3,M3,N3,O3,P3,Q3,R3,S3,T3,U3,V3):
* Chain [[171,172],177]: 2*it(171)+0
  Such that:aux(88) =< G2+1
it(171) =< aux(88)

  with precondition: [Z1=0,G3=3,G2>=0] 

* Chain [[171,172],176]: 2*it(171)+0
  Such that:aux(86) =< G2+1
aux(87) =< G2-V3
it(171) =< aux(86)
it(171) =< aux(87)

  with precondition: [Z1=0,A2=0,G3=4,I3=0,L3=0,U3=V3,0>=K3+1,0>=T3+1,H3>=1,J3>=2,U3>=0,G2>=U3+1] 

* Chain [[171,172],175]: 2*it(171)+0
  Such that:aux(86) =< G2+1
aux(87) =< G2-V3
it(171) =< aux(86)
it(171) =< aux(87)

  with precondition: [Z1=0,A2=0,G3=4,I3=0,L3=0,U3=V3,0>=K3+1,H3>=1,J3>=2,T3>=1,U3>=0,G2>=U3+1] 

* Chain [[171,172],174]: 2*it(171)+0
  Such that:aux(86) =< G2+1
aux(87) =< G2-V3
it(171) =< aux(86)
it(171) =< aux(87)

  with precondition: [Z1=0,A2=0,G3=4,I3=0,L3=0,U3=V3,0>=T3+1,H3>=1,J3>=2,K3>=1,U3>=0,G2>=U3+1] 

* Chain [[171,172],173]: 2*it(171)+0
  Such that:aux(86) =< G2+1
aux(87) =< G2-V3
it(171) =< aux(86)
it(171) =< aux(87)

  with precondition: [Z1=0,A2=0,G3=4,I3=0,L3=0,U3=V3,H3>=1,J3>=2,K3>=1,T3>=1,U3>=0,G2>=U3+1] 

* Chain [177]: 0
  with precondition: [G3=3] 

* Chain [176]: 0
  with precondition: [G3=4,I3=C,L3=G,M3=J,A2=Z1,V3=H2,G2=U3,0>=K3+1,0>=T3+1,G2>=0,H3>=1,J3>=2] 

* Chain [175]: 0
  with precondition: [G3=4,I3=C,L3=G,M3=J,A2=Z1,V3=H2,G2=U3,0>=K3+1,G2>=0,H3>=1,J3>=2,T3>=1] 

* Chain [174]: 0
  with precondition: [G3=4,I3=C,L3=G,M3=J,A2=Z1,V3=H2,G2=U3,0>=T3+1,G2>=0,H3>=1,J3>=2,K3>=1] 

* Chain [173]: 0
  with precondition: [G3=4,I3=C,L3=G,M3=J,A2=Z1,V3=H2,G2=U3,G2>=0,H3>=1,J3>=2,K3>=1,T3>=1] 


#### Cost of chains of f15_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1,R1,S1,T1,U1,V1,W1,X1,Y1,Z1,A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2,O2):
* Chain [179]: 0
  with precondition: [A=3] 

* Chain [178]: 0
  with precondition: [A=4] 


#### Cost of chains of f34_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1,R1,S1,T1,U1,V1,W1,X1,Y1,Z1,A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2,O2):
* Chain [184]: 0
  with precondition: [A=3,H2=G2] 

* Chain [183]: 8*s(307)+0
  Such that:aux(89) =< H2
aux(90) =< H2+1
s(307) =< aux(90)
s(307) =< aux(89)

  with precondition: [A=5,A2=0,B2=0,H2=G2,H2>=1] 

* Chain [182]: 2*s(318)+0
  Such that:s(317) =< G2+1
s(318) =< s(317)

  with precondition: [A=5,A2=0,H2=G2,H2>=0] 

* Chain [181]: 0
  with precondition: [A=5,B2=A2,H2=G2,H2>=0] 

* Chain [180]: 0
  with precondition: [A=5,H2=G2] 


#### Cost of chains of f29_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1,R1,S1,T1,U1,V1,W1,X1,Y1,Z1,A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2,O2):
* Chain [205]: 0
  with precondition: [A=2] 

* Chain [204]: 0
  with precondition: [A=2,D=0,0>=G+1,E>=0,J>=0] 

* Chain [203]: 2*s(320)+0
  Such that:s(319) =< H2+1
s(320) =< s(319)

  with precondition: [A=2,D=0,0>=G+1,E>=0,J>=0,H2>=0] 

* Chain [202]: 30*s(325)+32*s(326)+2*s(327)+8*s(328)+960*s(332)+64*s(333)+0
  Such that:aux(91) =< C
aux(92) =< C/2
aux(93) =< J
aux(94) =< J+1
s(325) =< aux(91)
s(326) =< aux(91)
s(327) =< aux(92)
s(325) =< aux(92)
s(328) =< aux(94)
s(327) =< aux(94)
s(325) =< aux(94)
s(326) =< aux(94)
s(328) =< aux(93)
s(327) =< aux(93)
s(325) =< aux(93)
s(326) =< aux(93)
s(329) =< aux(91)
s(330) =< s(327)*aux(91)
s(331) =< s(325)*s(329)
s(332) =< s(331)
s(332) =< aux(91)
s(333) =< s(330)
s(333) =< aux(91)

  with precondition: [A=2,D=0,C>=1,E>=0,J>=1] 

* Chain [201]: 30*s(351)+32*s(352)+2*s(353)+8*s(354)+960*s(358)+64*s(359)+4*s(361)+0
  Such that:aux(95) =< C
aux(96) =< C/2
aux(97) =< J
aux(98) =< J+1
aux(99) =< H2+1
s(361) =< aux(99)
s(351) =< aux(95)
s(352) =< aux(95)
s(353) =< aux(96)
s(351) =< aux(96)
s(354) =< aux(98)
s(353) =< aux(98)
s(351) =< aux(98)
s(352) =< aux(98)
s(354) =< aux(97)
s(353) =< aux(97)
s(351) =< aux(97)
s(352) =< aux(97)
s(355) =< aux(95)
s(356) =< s(353)*aux(95)
s(357) =< s(351)*s(355)
s(358) =< s(357)
s(358) =< aux(95)
s(359) =< s(356)
s(359) =< aux(95)

  with precondition: [A=2,D=0,C>=1,E>=0,J>=1,H2>=0] 

* Chain [200]: 0
  with precondition: [A=2,D=0,E>=0,G>=1,J>=0] 

* Chain [199]: 2*s(378)+0
  Such that:s(377) =< H2+1
s(378) =< s(377)

  with precondition: [A=2,D=0,E>=0,G>=1,J>=0,H2>=0] 

* Chain [198]: 0
  with precondition: [A=2,0>=D+1,C>=1,E>=0,J>=0] 

* Chain [197]: 15*s(383)+16*s(384)+1*s(385)+4*s(386)+480*s(390)+32*s(391)+0
  Such that:s(381) =< C
s(382) =< C/2
s(379) =< J
s(380) =< J+1
s(383) =< s(381)
s(384) =< s(381)
s(385) =< s(382)
s(383) =< s(382)
s(386) =< s(380)
s(385) =< s(380)
s(383) =< s(380)
s(384) =< s(380)
s(386) =< s(379)
s(385) =< s(379)
s(383) =< s(379)
s(384) =< s(379)
s(387) =< s(381)
s(388) =< s(385)*s(381)
s(389) =< s(383)*s(387)
s(390) =< s(389)
s(390) =< s(381)
s(391) =< s(388)
s(391) =< s(381)

  with precondition: [A=2,0>=D+1,C>=1,E>=0,J>=1] 

* Chain [196]: 32*s(393)+0
  Such that:s(392) =< C
s(393) =< s(392)

  with precondition: [A=2,0>=D+1,C>=2,E>=0,J>=0] 

* Chain [195]: 32*s(399)+15*s(400)+16*s(401)+1*s(402)+4*s(403)+480*s(407)+32*s(408)+0
  Such that:s(396) =< C
s(397) =< C/2
s(394) =< J
s(395) =< J+1
s(398) =< s(396)
s(398) =< s(397)
s(399) =< s(396)
s(400) =< s(396)
s(401) =< s(396)
s(402) =< s(397)
s(400) =< s(397)
s(402) =< s(398)
s(400) =< s(398)
s(403) =< s(395)
s(402) =< s(395)
s(400) =< s(395)
s(401) =< s(395)
s(403) =< s(394)
s(402) =< s(394)
s(400) =< s(394)
s(401) =< s(394)
s(404) =< s(396)
s(405) =< s(402)*s(396)
s(406) =< s(400)*s(404)
s(407) =< s(406)
s(407) =< s(396)
s(408) =< s(405)
s(408) =< s(396)

  with precondition: [A=2,0>=D+1,C>=2,E>=0,J>=1] 

* Chain [194]: 0
  with precondition: [A=2,C>=1,D>=1,E>=0,J>=0] 

* Chain [193]: 15*s(413)+16*s(414)+1*s(415)+4*s(416)+480*s(420)+32*s(421)+0
  Such that:s(411) =< C
s(412) =< C/2
s(409) =< J
s(410) =< J+1
s(413) =< s(411)
s(414) =< s(411)
s(415) =< s(412)
s(413) =< s(412)
s(416) =< s(410)
s(415) =< s(410)
s(413) =< s(410)
s(414) =< s(410)
s(416) =< s(409)
s(415) =< s(409)
s(413) =< s(409)
s(414) =< s(409)
s(417) =< s(411)
s(418) =< s(415)*s(411)
s(419) =< s(413)*s(417)
s(420) =< s(419)
s(420) =< s(411)
s(421) =< s(418)
s(421) =< s(411)

  with precondition: [A=2,C>=1,D>=1,E>=0,J>=1] 

* Chain [192]: 15*s(425)+16*s(426)+1*s(427)+4*s(428)+480*s(432)+32*s(433)+0
  Such that:s(422) =< C
s(423) =< C/2
s(424) =< J+1
s(425) =< s(422)
s(426) =< s(422)
s(427) =< s(423)
s(425) =< s(423)
s(428) =< s(424)
s(427) =< s(424)
s(425) =< s(424)
s(426) =< s(424)
s(429) =< s(422)
s(430) =< s(427)*s(422)
s(431) =< s(425)*s(429)
s(432) =< s(431)
s(432) =< s(422)
s(433) =< s(430)
s(433) =< s(422)

  with precondition: [A=2,C>=1,E>=0,J>=0] 

* Chain [191]: 32*s(435)+0
  Such that:s(434) =< C
s(435) =< s(434)

  with precondition: [A=2,C>=2,D>=1,E>=0,J>=0] 

* Chain [190]: 32*s(441)+15*s(442)+16*s(443)+1*s(444)+4*s(445)+480*s(449)+32*s(450)+0
  Such that:s(438) =< C
s(439) =< C/2
s(436) =< J
s(437) =< J+1
s(440) =< s(438)
s(440) =< s(439)
s(441) =< s(438)
s(442) =< s(438)
s(443) =< s(438)
s(444) =< s(439)
s(442) =< s(439)
s(444) =< s(440)
s(442) =< s(440)
s(445) =< s(437)
s(444) =< s(437)
s(442) =< s(437)
s(443) =< s(437)
s(445) =< s(436)
s(444) =< s(436)
s(442) =< s(436)
s(443) =< s(436)
s(446) =< s(438)
s(447) =< s(444)*s(438)
s(448) =< s(442)*s(446)
s(449) =< s(448)
s(449) =< s(438)
s(450) =< s(447)
s(450) =< s(438)

  with precondition: [A=2,C>=2,D>=1,E>=0,J>=1] 

* Chain [189]: 0
  with precondition: [A=3] 

* Chain [188]: 0
  with precondition: [A=6] 

* Chain [187]: 8*s(453)+0
  Such that:aux(100) =< K2
aux(101) =< K2+1
s(453) =< aux(101)
s(453) =< aux(100)

  with precondition: [A=6,A2=0,B2=0,K2>=1] 

* Chain [186]: 2*s(464)+0
  Such that:s(463) =< K2+1
s(464) =< s(463)

  with precondition: [A=6,A2=0,K2>=0] 

* Chain [185]: 0
  with precondition: [A=6,B2=A2,K2>=0] 


#### Cost of chains of f1_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1,R1,S1,T1,U1,V1,W1,X1,Y1,Z1,A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,N2,O2):
* Chain [240]: 0
  with precondition: [A=3] 

* Chain [239]: 0
  with precondition: [A=7] 

* Chain [238]: 0
  with precondition: [A=7,E=1,0>=D+1,B>=0,C>=1] 

* Chain [237]: 30*s(468)+32*s(469)+2*s(470)+8*s(471)+960*s(475)+64*s(476)+0
  Such that:aux(102) =< C
aux(103) =< C/2
aux(104) =< J+1
s(468) =< aux(102)
s(469) =< aux(102)
s(470) =< aux(103)
s(468) =< aux(103)
s(471) =< aux(104)
s(470) =< aux(104)
s(468) =< aux(104)
s(469) =< aux(104)
s(472) =< aux(102)
s(473) =< s(470)*aux(102)
s(474) =< s(468)*s(472)
s(475) =< s(474)
s(475) =< aux(102)
s(476) =< s(473)
s(476) =< aux(102)

  with precondition: [A=7,E=1,0>=D+1,B>=0,C>=1,J>=0] 

* Chain [236]: 30*s(493)+32*s(494)+2*s(495)+8*s(496)+960*s(500)+64*s(501)+0
  Such that:aux(105) =< C
aux(106) =< C/2
aux(107) =< J
aux(108) =< J+1
s(493) =< aux(105)
s(494) =< aux(105)
s(495) =< aux(106)
s(493) =< aux(106)
s(496) =< aux(108)
s(495) =< aux(108)
s(493) =< aux(108)
s(494) =< aux(108)
s(496) =< aux(107)
s(495) =< aux(107)
s(493) =< aux(107)
s(494) =< aux(107)
s(497) =< aux(105)
s(498) =< s(495)*aux(105)
s(499) =< s(493)*s(497)
s(500) =< s(499)
s(500) =< aux(105)
s(501) =< s(498)
s(501) =< aux(105)

  with precondition: [A=7,E=1,0>=D+1,B>=0,C>=1,J>=1] 

* Chain [235]: 64*s(516)+0
  Such that:aux(109) =< C
s(516) =< aux(109)

  with precondition: [A=7,E=1,0>=D+1,B>=0,C>=2,J>=0] 

* Chain [234]: 64*s(524)+30*s(525)+32*s(526)+2*s(527)+8*s(528)+960*s(532)+64*s(533)+0
  Such that:aux(110) =< C
aux(111) =< C/2
aux(112) =< J
aux(113) =< J+1
s(523) =< aux(110)
s(523) =< aux(111)
s(524) =< aux(110)
s(525) =< aux(110)
s(526) =< aux(110)
s(527) =< aux(111)
s(525) =< aux(111)
s(527) =< s(523)
s(525) =< s(523)
s(528) =< aux(113)
s(527) =< aux(113)
s(525) =< aux(113)
s(526) =< aux(113)
s(528) =< aux(112)
s(527) =< aux(112)
s(525) =< aux(112)
s(526) =< aux(112)
s(529) =< aux(110)
s(530) =< s(527)*aux(110)
s(531) =< s(525)*s(529)
s(532) =< s(531)
s(532) =< aux(110)
s(533) =< s(530)
s(533) =< aux(110)

  with precondition: [A=7,E=1,0>=D+1,B>=0,C>=2,J>=1] 

* Chain [233]: 4*s(551)+0
  Such that:aux(116) =< C
s(551) =< aux(116)

  with precondition: [A=7,E=1,0>=D+1,B>=2,C>=2] 

* Chain [232]: 8*s(557)+30*s(564)+32*s(565)+2*s(566)+8*s(567)+960*s(571)+64*s(572)+0
  Such that:aux(121) =< C
aux(122) =< C/2
aux(123) =< J+1
s(562) =< aux(122)
s(557) =< aux(121)
s(562) =< aux(121)
s(564) =< aux(121)
s(565) =< aux(121)
s(566) =< s(562)
s(564) =< s(562)
s(567) =< aux(123)
s(566) =< aux(123)
s(564) =< aux(123)
s(565) =< aux(123)
s(568) =< aux(121)
s(569) =< s(566)*aux(121)
s(570) =< s(564)*s(568)
s(571) =< s(570)
s(571) =< aux(121)
s(572) =< s(569)
s(572) =< aux(121)

  with precondition: [A=7,E=1,0>=D+1,B>=2,C>=2,J>=0] 

* Chain [231]: 4*s(593)+30*s(598)+32*s(599)+2*s(600)+8*s(601)+960*s(605)+64*s(606)+0
  Such that:aux(126) =< C
aux(127) =< C/2
aux(128) =< J
aux(129) =< J+1
s(595) =< aux(127)
s(595) =< aux(126)
s(598) =< aux(126)
s(599) =< aux(126)
s(600) =< s(595)
s(598) =< s(595)
s(601) =< aux(129)
s(600) =< aux(129)
s(598) =< aux(129)
s(599) =< aux(129)
s(601) =< aux(128)
s(600) =< aux(128)
s(598) =< aux(128)
s(599) =< aux(128)
s(602) =< aux(126)
s(603) =< s(600)*aux(126)
s(604) =< s(598)*s(602)
s(605) =< s(604)
s(605) =< aux(126)
s(606) =< s(603)
s(606) =< aux(126)
s(593) =< aux(126)

  with precondition: [A=7,E=1,0>=D+1,B>=2,C>=2,J>=1] 

* Chain [230]: 68*s(625)+0
  Such that:aux(132) =< C
s(625) =< aux(132)

  with precondition: [A=7,E=1,0>=D+1,B>=2,C>=3,J>=0] 

* Chain [229]: 68*s(635)+30*s(642)+32*s(643)+2*s(644)+8*s(645)+960*s(649)+64*s(650)+0
  Such that:aux(135) =< C
aux(136) =< C/2
aux(137) =< J
aux(138) =< J+1
s(637) =< aux(136)
s(637) =< aux(135)
s(640) =< aux(135)
s(640) =< s(637)
s(635) =< aux(135)
s(642) =< aux(135)
s(643) =< aux(135)
s(644) =< s(637)
s(642) =< s(637)
s(644) =< s(640)
s(642) =< s(640)
s(645) =< aux(138)
s(644) =< aux(138)
s(642) =< aux(138)
s(643) =< aux(138)
s(645) =< aux(137)
s(644) =< aux(137)
s(642) =< aux(137)
s(643) =< aux(137)
s(646) =< aux(135)
s(647) =< s(644)*aux(135)
s(648) =< s(642)*s(646)
s(649) =< s(648)
s(649) =< aux(135)
s(650) =< s(647)
s(650) =< aux(135)

  with precondition: [A=7,E=1,0>=D+1,B>=2,C>=3,J>=1] 

* Chain [228]: 0
  with precondition: [A=7,E=1,B>=0,C>=1,D>=1] 

* Chain [227]: 30*s(672)+32*s(673)+2*s(674)+8*s(675)+960*s(679)+64*s(680)+0
  Such that:aux(139) =< C
aux(140) =< C/2
aux(141) =< J+1
s(672) =< aux(139)
s(673) =< aux(139)
s(674) =< aux(140)
s(672) =< aux(140)
s(675) =< aux(141)
s(674) =< aux(141)
s(672) =< aux(141)
s(673) =< aux(141)
s(676) =< aux(139)
s(677) =< s(674)*aux(139)
s(678) =< s(672)*s(676)
s(679) =< s(678)
s(679) =< aux(139)
s(680) =< s(677)
s(680) =< aux(139)

  with precondition: [A=7,E=1,B>=0,C>=1,D>=1,J>=0] 

* Chain [226]: 30*s(697)+32*s(698)+2*s(699)+8*s(700)+960*s(704)+64*s(705)+0
  Such that:aux(142) =< C
aux(143) =< C/2
aux(144) =< J
aux(145) =< J+1
s(697) =< aux(142)
s(698) =< aux(142)
s(699) =< aux(143)
s(697) =< aux(143)
s(700) =< aux(145)
s(699) =< aux(145)
s(697) =< aux(145)
s(698) =< aux(145)
s(700) =< aux(144)
s(699) =< aux(144)
s(697) =< aux(144)
s(698) =< aux(144)
s(701) =< aux(142)
s(702) =< s(699)*aux(142)
s(703) =< s(697)*s(701)
s(704) =< s(703)
s(704) =< aux(142)
s(705) =< s(702)
s(705) =< aux(142)

  with precondition: [A=7,E=1,B>=0,C>=1,D>=1,J>=1] 

* Chain [225]: 64*s(720)+0
  Such that:aux(146) =< C
s(720) =< aux(146)

  with precondition: [A=7,E=1,B>=0,C>=2,D>=1,J>=0] 

* Chain [224]: 64*s(728)+30*s(729)+32*s(730)+2*s(731)+8*s(732)+960*s(736)+64*s(737)+0
  Such that:aux(147) =< C
aux(148) =< C/2
aux(149) =< J
aux(150) =< J+1
s(727) =< aux(147)
s(727) =< aux(148)
s(728) =< aux(147)
s(729) =< aux(147)
s(730) =< aux(147)
s(731) =< aux(148)
s(729) =< aux(148)
s(731) =< s(727)
s(729) =< s(727)
s(732) =< aux(150)
s(731) =< aux(150)
s(729) =< aux(150)
s(730) =< aux(150)
s(732) =< aux(149)
s(731) =< aux(149)
s(729) =< aux(149)
s(730) =< aux(149)
s(733) =< aux(147)
s(734) =< s(731)*aux(147)
s(735) =< s(729)*s(733)
s(736) =< s(735)
s(736) =< aux(147)
s(737) =< s(734)
s(737) =< aux(147)

  with precondition: [A=7,E=1,B>=0,C>=2,D>=1,J>=1] 

* Chain [223]: 4*s(755)+0
  Such that:aux(153) =< C
s(755) =< aux(153)

  with precondition: [A=7,E=1,B>=2,C>=2,D>=1] 

* Chain [222]: 8*s(761)+30*s(768)+32*s(769)+2*s(770)+8*s(771)+960*s(775)+64*s(776)+0
  Such that:aux(158) =< C
aux(159) =< C/2
aux(160) =< J+1
s(766) =< aux(159)
s(761) =< aux(158)
s(766) =< aux(158)
s(768) =< aux(158)
s(769) =< aux(158)
s(770) =< s(766)
s(768) =< s(766)
s(771) =< aux(160)
s(770) =< aux(160)
s(768) =< aux(160)
s(769) =< aux(160)
s(772) =< aux(158)
s(773) =< s(770)*aux(158)
s(774) =< s(768)*s(772)
s(775) =< s(774)
s(775) =< aux(158)
s(776) =< s(773)
s(776) =< aux(158)

  with precondition: [A=7,E=1,B>=2,C>=2,D>=1,J>=0] 

* Chain [221]: 4*s(797)+30*s(802)+32*s(803)+2*s(804)+8*s(805)+960*s(809)+64*s(810)+0
  Such that:aux(163) =< C
aux(164) =< C/2
aux(165) =< J
aux(166) =< J+1
s(799) =< aux(164)
s(799) =< aux(163)
s(802) =< aux(163)
s(803) =< aux(163)
s(804) =< s(799)
s(802) =< s(799)
s(805) =< aux(166)
s(804) =< aux(166)
s(802) =< aux(166)
s(803) =< aux(166)
s(805) =< aux(165)
s(804) =< aux(165)
s(802) =< aux(165)
s(803) =< aux(165)
s(806) =< aux(163)
s(807) =< s(804)*aux(163)
s(808) =< s(802)*s(806)
s(809) =< s(808)
s(809) =< aux(163)
s(810) =< s(807)
s(810) =< aux(163)
s(797) =< aux(163)

  with precondition: [A=7,E=1,B>=2,C>=2,D>=1,J>=1] 

* Chain [220]: 68*s(829)+0
  Such that:aux(169) =< C
s(829) =< aux(169)

  with precondition: [A=7,E=1,B>=2,C>=3,D>=1,J>=0] 

* Chain [219]: 68*s(839)+30*s(846)+32*s(847)+2*s(848)+8*s(849)+960*s(853)+64*s(854)+0
  Such that:aux(172) =< C
aux(173) =< C/2
aux(174) =< J
aux(175) =< J+1
s(841) =< aux(173)
s(841) =< aux(172)
s(844) =< aux(172)
s(844) =< s(841)
s(839) =< aux(172)
s(846) =< aux(172)
s(847) =< aux(172)
s(848) =< s(841)
s(846) =< s(841)
s(848) =< s(844)
s(846) =< s(844)
s(849) =< aux(175)
s(848) =< aux(175)
s(846) =< aux(175)
s(847) =< aux(175)
s(849) =< aux(174)
s(848) =< aux(174)
s(846) =< aux(174)
s(847) =< aux(174)
s(850) =< aux(172)
s(851) =< s(848)*aux(172)
s(852) =< s(846)*s(850)
s(853) =< s(852)
s(853) =< aux(172)
s(854) =< s(851)
s(854) =< aux(172)

  with precondition: [A=7,E=1,B>=2,C>=3,D>=1,J>=1] 

* Chain [218]: 0
  with precondition: [A=7,0>=C,0>=D+1,0>=G+1,B>=2] 

* Chain [217]: 2*s(874)+0
  Such that:s(873) =< K2+1
s(874) =< s(873)

  with precondition: [A=7,0>=C,0>=D+1,0>=G+1,B>=2,K2>=0] 

* Chain [216]: 0
  with precondition: [A=7,0>=C,0>=D+1,B>=2,G>=1] 

* Chain [215]: 2*s(876)+0
  Such that:s(875) =< K2+1
s(876) =< s(875)

  with precondition: [A=7,0>=C,0>=D+1,B>=2,G>=1,K2>=0] 

* Chain [214]: 0
  with precondition: [A=7,0>=C,0>=G+1,B>=2,D>=1] 

* Chain [213]: 2*s(878)+0
  Such that:s(877) =< K2+1
s(878) =< s(877)

  with precondition: [A=7,0>=C,0>=G+1,B>=2,D>=1,K2>=0] 

* Chain [212]: 0
  with precondition: [A=7,0>=C,B>=2,D>=1,G>=1] 

* Chain [211]: 2*s(880)+0
  Such that:s(879) =< K2+1
s(880) =< s(879)

  with precondition: [A=7,0>=C,B>=2,D>=1,G>=1,K2>=0] 

* Chain [210]: 2*s(882)+0
  Such that:s(881) =< C
s(882) =< s(881)

  with precondition: [A=7,0>=D+1,B>=2,C>=1] 

* Chain [209]: 2*s(884)+2*s(886)+0
  Such that:s(883) =< C
s(885) =< K2+1
s(886) =< s(885)
s(884) =< s(883)

  with precondition: [A=7,0>=D+1,B>=2,C>=1,K2>=0] 

* Chain [208]: 2*s(888)+0
  Such that:s(887) =< C
s(888) =< s(887)

  with precondition: [A=7,B>=2,C>=1] 

* Chain [207]: 2*s(890)+0
  Such that:s(889) =< C
s(890) =< s(889)

  with precondition: [A=7,B>=2,C>=1,D>=1] 

* Chain [206]: 2*s(892)+2*s(894)+0
  Such that:s(891) =< C
s(893) =< K2+1
s(894) =< s(893)
s(892) =< s(891)

  with precondition: [A=7,B>=2,C>=1,D>=1,K2>=0] 


#### Cost of chains of f32(B,C,E,F,G,M,A1,B1,C1,G3):
* Chain [[241,242],243]: 2*it(241)+0
  Such that:aux(178) =< B
it(241) =< aux(178)

  with precondition: [E=1,G3=3,C=F,B>=1] 

* Chain [243]: 0
  with precondition: [E=1,G3=3,F=C] 


#### Cost of chains of f26(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1,R1,S1,T1,U1,V1,W1,X1,Y1,Z1,A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,G3):
* Chain [256]: 1*aux(179)+0
  with precondition: [] 

* Chain [255]: 1*aux(180)+0
  with precondition: [D=1,B>=1] 

* Chain [254]: 120*s(902)+128*s(903)+8*s(904)+32*s(905)+3840*s(909)+256*s(910)+2*s(923)+0
  Such that:aux(181) =< B
aux(182) =< B/2
aux(183) =< I+1
s(902) =< aux(181)
s(903) =< aux(181)
s(904) =< aux(182)
s(902) =< aux(182)
s(905) =< aux(183)
s(904) =< aux(183)
s(902) =< aux(183)
s(903) =< aux(183)
s(906) =< aux(181)
s(907) =< s(904)*aux(181)
s(908) =< s(902)*s(906)
s(909) =< s(908)
s(909) =< aux(181)
s(910) =< s(907)
s(910) =< aux(181)

  with precondition: [D=1,B>=1,I>=0] 

* Chain [253]: 120*s(953)+128*s(954)+8*s(955)+32*s(956)+3840*s(960)+256*s(961)+2*s(975)+0
  Such that:aux(184) =< B
aux(185) =< B/2
aux(186) =< I
aux(187) =< I+1
s(953) =< aux(184)
s(954) =< aux(184)
s(955) =< aux(185)
s(953) =< aux(185)
s(956) =< aux(187)
s(955) =< aux(187)
s(953) =< aux(187)
s(954) =< aux(187)
s(956) =< aux(186)
s(955) =< aux(186)
s(953) =< aux(186)
s(954) =< aux(186)
s(957) =< aux(184)
s(958) =< s(955)*aux(184)
s(959) =< s(953)*s(957)
s(960) =< s(959)
s(960) =< aux(184)
s(961) =< s(958)
s(961) =< aux(184)

  with precondition: [D=1,B>=1,I>=1] 

* Chain [252]: 16*s(1004)+2*s(1007)+0
  Such that:aux(188) =< B
s(1004) =< aux(188)

  with precondition: [D=1,B>=2] 

* Chain [251]: 288*s(1014)+120*s(1020)+128*s(1021)+8*s(1022)+32*s(1023)+3840*s(1027)+256*s(1028)+4*s(1045)+0
  Such that:aux(189) =< B
aux(190) =< B/2
aux(191) =< I+1
s(1014) =< aux(189)
s(1018) =< aux(190)
s(1018) =< aux(189)
s(1020) =< aux(189)
s(1021) =< aux(189)
s(1022) =< s(1018)
s(1020) =< s(1018)
s(1023) =< aux(191)
s(1022) =< aux(191)
s(1020) =< aux(191)
s(1021) =< aux(191)
s(1024) =< aux(189)
s(1025) =< s(1022)*aux(189)
s(1026) =< s(1020)*s(1024)
s(1027) =< s(1026)
s(1027) =< aux(189)
s(1028) =< s(1025)
s(1028) =< aux(189)

  with precondition: [D=1,B>=2,I>=0] 

* Chain [250]: 272*s(1086)+120*s(1087)+256*s(1088)+8*s(1089)+64*s(1090)+3840*s(1094)+256*s(1095)+120*s(1101)+8*s(1103)+3840*s(1108)+256*s(1109)+4*s(1141)+0
  Such that:aux(192) =< B
aux(193) =< B/2
aux(194) =< I
aux(195) =< I+1
s(1085) =< aux(192)
s(1085) =< aux(193)
s(1086) =< aux(192)
s(1087) =< aux(192)
s(1088) =< aux(192)
s(1089) =< aux(193)
s(1087) =< aux(193)
s(1089) =< s(1085)
s(1087) =< s(1085)
s(1090) =< aux(195)
s(1089) =< aux(195)
s(1087) =< aux(195)
s(1088) =< aux(195)
s(1090) =< aux(194)
s(1089) =< aux(194)
s(1087) =< aux(194)
s(1088) =< aux(194)
s(1091) =< aux(192)
s(1092) =< s(1089)*aux(192)
s(1093) =< s(1087)*s(1091)
s(1094) =< s(1093)
s(1094) =< aux(192)
s(1095) =< s(1092)
s(1095) =< aux(192)
s(1101) =< aux(192)
s(1103) =< s(1085)
s(1101) =< s(1085)
s(1103) =< aux(195)
s(1101) =< aux(195)
s(1103) =< aux(194)
s(1101) =< aux(194)
s(1106) =< s(1103)*aux(192)
s(1107) =< s(1101)*s(1091)
s(1108) =< s(1107)
s(1108) =< aux(192)
s(1109) =< s(1106)
s(1109) =< aux(192)

  with precondition: [D=1,B>=2,I>=1] 

* Chain [249]: 272*s(1206)+2*s(1209)+0
  Such that:aux(196) =< B
s(1206) =< aux(196)

  with precondition: [D=1,B>=3,I>=0] 

* Chain [248]: 272*s(1221)+120*s(1222)+128*s(1223)+8*s(1224)+32*s(1225)+3840*s(1229)+256*s(1230)+2*s(1247)+0
  Such that:aux(197) =< B
aux(198) =< B/2
aux(199) =< I
aux(200) =< I+1
s(1219) =< aux(198)
s(1219) =< aux(197)
s(1220) =< aux(197)
s(1220) =< s(1219)
s(1221) =< aux(197)
s(1222) =< aux(197)
s(1223) =< aux(197)
s(1224) =< s(1219)
s(1222) =< s(1219)
s(1224) =< s(1220)
s(1222) =< s(1220)
s(1225) =< aux(200)
s(1224) =< aux(200)
s(1222) =< aux(200)
s(1223) =< aux(200)
s(1225) =< aux(199)
s(1224) =< aux(199)
s(1222) =< aux(199)
s(1223) =< aux(199)
s(1226) =< aux(197)
s(1227) =< s(1224)*aux(197)
s(1228) =< s(1222)*s(1226)
s(1229) =< s(1228)
s(1229) =< aux(197)
s(1230) =< s(1227)
s(1230) =< aux(197)

  with precondition: [D=1,B>=3,I>=1] 

* Chain [247]: 1*aux(201)+0
  with precondition: [0>=B] 

* Chain [246]: 8*s(1284)+2*s(1287)+0
  Such that:aux(202) =< J2+1
s(1284) =< aux(202)

  with precondition: [0>=B,J2>=0] 

* Chain [245]: 14*s(1294)+3*s(1299)+0
  Such that:aux(203) =< B
s(1294) =< aux(203)

  with precondition: [B>=1] 

* Chain [244]: 8*s(1312)+8*s(1313)+2*s(1318)+0
  Such that:aux(204) =< B
aux(205) =< J2+1
s(1312) =< aux(205)
s(1313) =< aux(204)

  with precondition: [B>=1,J2>=0] 


Closed-form bounds of f26(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1,R1,S1,T1,U1,V1,W1,X1,Y1,Z1,A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,G3): 
-------------------------------------
* Chain [256] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [255] with precondition: [D=1,B>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [254] with precondition: [D=1,B>=1,I>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [253] with precondition: [D=1,B>=1,I>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [252] with precondition: [D=1,B>=2] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [251] with precondition: [D=1,B>=2,I>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [250] with precondition: [D=1,B>=2,I>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [249] with precondition: [D=1,B>=3,I>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [248] with precondition: [D=1,B>=3,I>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [247] with precondition: [0>=B] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [246] with precondition: [0>=B,J2>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [245] with precondition: [B>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [244] with precondition: [B>=1,J2>=0] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of f26(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1,R1,S1,T1,U1,V1,W1,X1,Y1,Z1,A2,B2,C2,D2,E2,F2,G2,H2,I2,J2,K2,L2,M2,G3): inf 
Asymptotic class: infinity 
* Total analysis performed in 16693 ms.

