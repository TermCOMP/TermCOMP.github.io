MAYBE

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_counterex1c_11/16,eval_counterex1c_12/16,eval_counterex1c_15/16,eval_counterex1c_16/16,eval_counterex1c_LeafBlock8_in/16,eval_counterex1c_LeafBlock_in/16,eval_counterex1c_NodeBlock_in/16,eval_counterex1c_bb1_in/16,eval_counterex1c_bb2_in/16,eval_counterex1c_bb3_in/16,eval_counterex1c_bb4_in/16]
1. non_recursive  : [eval_counterex1c_stop/12]
2. non_recursive  : [eval_counterex1c__critedge_in/12]
3. non_recursive  : [eval_counterex1c_NewDefault_in/12]
4. non_recursive  : [exit_location/1]
5. non_recursive  : [eval_counterex1c_bb1_in_loop_cont/13]
6. non_recursive  : [eval_counterex1c_9/12]
7. non_recursive  : [eval_counterex1c_8/12]
8. non_recursive  : [eval_counterex1c_7/12]
9. non_recursive  : [eval_counterex1c_6/12]
10. non_recursive  : [eval_counterex1c_5/12]
11. non_recursive  : [eval_counterex1c_4/12]
12. non_recursive  : [eval_counterex1c_3/12]
13. non_recursive  : [eval_counterex1c_2/12]
14. non_recursive  : [eval_counterex1c_1/12]
15. non_recursive  : [eval_counterex1c_0/12]
16. non_recursive  : [eval_counterex1c_bb0_in/12]
17. non_recursive  : [eval_counterex1c_start/12]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_counterex1c_bb1_in/16
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_counterex1c_bb1_in_loop_cont/13
6. SCC is partially evaluated into eval_counterex1c_9/12
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is partially evaluated into eval_counterex1c_start/12

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_counterex1c_bb1_in/16 
* CE 12 is refined into CE [16] 
* CE 11 is refined into CE [17] 
* CE 10 is refined into CE [18] 
* CE 9 is refined into CE [19] 
* CE 3 is refined into CE [20] 
* CE 6 is refined into CE [21] 
* CE 5 is refined into CE [22] 
* CE 4 is refined into CE [23] 
* CE 7 is refined into CE [24] 
* CE 8 is refined into CE [25] 


### Cost equations --> "Loop" of eval_counterex1c_bb1_in/16 
* CEs [22] --> Loop 16 
* CEs [23] --> Loop 17 
* CEs [24] --> Loop 18 
* CEs [25] --> Loop 19 
* CEs [16] --> Loop 20 
* CEs [17] --> Loop 21 
* CEs [18] --> Loop 22 
* CEs [19] --> Loop 23 
* CEs [20] --> Loop 24 
* CEs [21] --> Loop 25 

### Ranking functions of CR eval_counterex1c_bb1_in(V__0,V__01,V__04,V_3,V_4,V_6,V_7,V_n,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR eval_counterex1c_bb1_in(V__0,V__01,V__04,V_3,V_4,V_6,V_7,V_n,B,C,D,E,F,G,H,I) 
* Partial RF of phase [16,17,18,19]:
  - RF of loop [16:1,17:1]:
    V__04+1 depends on loops [18:1,19:1] 
  - RF of loop [17:1]:
    V__0 depends on loops [18:1] 
    V__01+1
  - RF of loop [18:1]:
    -V__0+1 depends on loops [17:1] 
  - RF of loop [18:1,19:1]:
    -V__04+V_n+1 depends on loops [16:1,17:1] 


### Specialization of cost equations eval_counterex1c_bb1_in_loop_cont/13 
* CE 15 is refined into CE [26] 
* CE 14 is refined into CE [27] 
* CE 13 is refined into CE [28] 


### Cost equations --> "Loop" of eval_counterex1c_bb1_in_loop_cont/13 
* CEs [26] --> Loop 26 
* CEs [27] --> Loop 27 
* CEs [28] --> Loop 28 

### Ranking functions of CR eval_counterex1c_bb1_in_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M) 

#### Partial ranking functions of CR eval_counterex1c_bb1_in_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M) 


### Specialization of cost equations eval_counterex1c_9/12 
* CE 2 is refined into CE [29,30,31,32,33,34,35,36,37,38,39,40,41] 


### Cost equations --> "Loop" of eval_counterex1c_9/12 
* CEs [39,40,41] --> Loop 29 
* CEs [34] --> Loop 30 
* CEs [30] --> Loop 31 
* CEs [33] --> Loop 32 
* CEs [35] --> Loop 33 
* CEs [29] --> Loop 34 
* CEs [36] --> Loop 35 
* CEs [31,32] --> Loop 36 
* CEs [38] --> Loop 37 
* CEs [37] --> Loop 38 

### Ranking functions of CR eval_counterex1c_9(V__0,V__01,V__04,V_3,V_4,V_6,V_7,V_b,V_n,V_x,V_y,B) 

#### Partial ranking functions of CR eval_counterex1c_9(V__0,V__01,V__04,V_3,V_4,V_6,V_7,V_b,V_n,V_x,V_y,B) 


### Specialization of cost equations eval_counterex1c_start/12 
* CE 1 is refined into CE [42,43,44,45,46,47,48,49,50,51] 


### Cost equations --> "Loop" of eval_counterex1c_start/12 
* CEs [51] --> Loop 39 
* CEs [50] --> Loop 40 
* CEs [49] --> Loop 41 
* CEs [48] --> Loop 42 
* CEs [47] --> Loop 43 
* CEs [46] --> Loop 44 
* CEs [45] --> Loop 45 
* CEs [44] --> Loop 46 
* CEs [43] --> Loop 47 
* CEs [42] --> Loop 48 

### Ranking functions of CR eval_counterex1c_start(V__0,V__01,V__04,V_3,V_4,V_6,V_7,V_b,V_n,V_x,V_y,B) 

#### Partial ranking functions of CR eval_counterex1c_start(V__0,V__01,V__04,V_3,V_4,V_6,V_7,V_b,V_n,V_x,V_y,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_counterex1c_bb1_in(V__0,V__01,V__04,V_3,V_4,V_6,V_7,V_n,B,C,D,E,F,G,H,I):
* Chain [[16,17,18,19]]...: 3*it(16)+1*it(17)+0
  Such that:it(17) =< V__01+1

  with precondition: [1>=V__0,V_n>=V__04,V__04>=0,V__01>=0,V__0>=0] 

* Chain [[16,17,18,19],23]: 3*it(16)+1*it(17)+0
  Such that:it(17) =< V__01+1

  with precondition: [B=3,C=0,D+1=0,E=H,1>=V__0,V__0>=0,V__01>=0,V__04>=0,I>=1,V__0+V_n>=V__04+1] 

* Chain [[16,17,18,19],22]: 3*it(16)+1*it(17)+0
  Such that:it(17) =< V__01-D

  with precondition: [B=3,E+1=0,H+1=0,1>=V__0,1>=C,V__0>=0,V__04>=0,C>=0,D+1>=C,V__0+V_n>=V__04+1,V__01+C>=D+1] 

* Chain [[16,17,18,19],21]: 3*it(16)+1*it(17)+0
  Such that:it(17) =< V__01-D

  with precondition: [B=3,V_n+1=E,V_n+1=F,1>=V__0,1>=C,V__0>=0,C>=0,D>=0,V__04>=V__0,V_n>=V__04,V__01>=V__0+D] 

* Chain [[16,17,18,19],20]: 3*it(16)+1*it(17)+0
  Such that:it(17) =< V__01+1

  with precondition: [B=4,1>=V__0,V__0>=0,V__01>=0,V__04>=0,V_n>=V__04] 

* Chain [25]: 0
  with precondition: [B=2,F=V_3,G=V_4,H=V_6,I=V_7,V__0=C,V__01=D,V__04=E,0>=V__0+1,V__01>=0,V__04>=0,V_n>=V__04] 

* Chain [24]: 0
  with precondition: [B=2,F=V_3,G=V_4,H=V_6,I=V_7,V__0=C,V__01=D,V__04=E,V__0>=2,V__01>=0,V__04>=0,V_n>=V__04] 

* Chain [23]: 0
  with precondition: [B=3,C=V__0,E=V__04,F=V_3,G=V_4,H=V_6,I=V_7,V__01=D,0>=V__01+1] 

* Chain [22]: 0
  with precondition: [B=3,C=V__0,D=V__01,F=V_3,G=V_4,H=V_6,I=V_7,V__04=E,0>=V__04+1] 

* Chain [21]: 0
  with precondition: [B=3,C=V__0,D=V__01,F=V_3,G=V_4,H=V_6,I=V_7,V__04=E,V__04>=V_n+1] 

* Chain [20]: 0
  with precondition: [B=4] 


#### Cost of chains of eval_counterex1c_bb1_in_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M):
* Chain [28]: 0
  with precondition: [A=2] 

* Chain [27]: 0
  with precondition: [A=3] 

* Chain [26]: 0
  with precondition: [A=4] 


#### Cost of chains of eval_counterex1c_9(V__0,V__01,V__04,V_3,V_4,V_6,V_7,V_b,V_n,V_x,V_y,B):
* Chain [38]: 0
  with precondition: [] 

* Chain [37]: 1*s(1)+3*s(2)+0
  Such that:s(1) =< V_x+1

  with precondition: [1>=V_b,V_b>=0,V_x>=0,V_y>=0,V_n>=V_y] 

* Chain [36]: 2*s(3)+6*s(4)+0
  Such that:aux(17) =< V_x+1
s(3) =< aux(17)

  with precondition: [1>=V_b,V_b>=0,V_x>=0,V_y>=0,V_b+V_n>=V_y+1] 

* Chain [35]: 1*s(7)+3*s(8)+0
  Such that:s(7) =< V_x

  with precondition: [1>=V_b,V_b>=0,V_x>=V_b,V_y>=V_b,V_n>=V_y] 

* Chain [34]: 0
  with precondition: [0>=V_b+1,V_x>=0,V_y>=0,V_n>=V_y] 

* Chain [33]: 0
  with precondition: [0>=V_x+1] 

* Chain [32]: 0
  with precondition: [0>=V_y+1] 

* Chain [31]: 0
  with precondition: [V_b>=2,V_x>=0,V_y>=0,V_n>=V_y] 

* Chain [30]: 0
  with precondition: [V_y>=V_n+1] 

* Chain [29]...: 3*s(9)+9*s(10)+0
  Such that:aux(18) =< V_x+1
s(9) =< aux(18)

  with precondition: [1>=V_b,V_b>=0,V_x>=0,V_y>=0,V_n>=V_y] 


#### Cost of chains of eval_counterex1c_start(V__0,V__01,V__04,V_3,V_4,V_6,V_7,V_b,V_n,V_x,V_y,B):
* Chain [48]: 0
  with precondition: [] 

* Chain [47]: 1*s(15)+3*s(16)+0
  Such that:s(15) =< V_x+1

  with precondition: [1>=V_b,V_b>=0,V_x>=0,V_y>=0,V_n>=V_y] 

* Chain [46]: 2*s(18)+6*s(19)+0
  Such that:s(17) =< V_x+1
s(18) =< s(17)

  with precondition: [1>=V_b,V_b>=0,V_x>=0,V_y>=0,V_b+V_n>=V_y+1] 

* Chain [45]: 1*s(20)+3*s(21)+0
  Such that:s(20) =< V_x

  with precondition: [1>=V_b,V_b>=0,V_x>=V_b,V_y>=V_b,V_n>=V_y] 

* Chain [44]: 0
  with precondition: [0>=V_b+1,V_x>=0,V_y>=0,V_n>=V_y] 

* Chain [43]: 0
  with precondition: [0>=V_x+1] 

* Chain [42]: 0
  with precondition: [0>=V_y+1] 

* Chain [41]: 0
  with precondition: [V_b>=2,V_x>=0,V_y>=0,V_n>=V_y] 

* Chain [40]: 0
  with precondition: [V_y>=V_n+1] 

* Chain [39]...: 3*s(23)+9*s(24)+0
  Such that:s(22) =< V_x+1
s(23) =< s(22)

  with precondition: [1>=V_b,V_b>=0,V_x>=0,V_y>=0,V_n>=V_y] 


Closed-form bounds of eval_counterex1c_start(V__0,V__01,V__04,V_3,V_4,V_6,V_7,V_b,V_n,V_x,V_y,B): 
-------------------------------------
* Chain [48] with precondition: [] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [47] with precondition: [1>=V_b,V_b>=0,V_x>=0,V_y>=0,V_n>=V_y] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [46] with precondition: [1>=V_b,V_b>=0,V_x>=0,V_y>=0,V_b+V_n>=V_y+1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [45] with precondition: [1>=V_b,V_b>=0,V_x>=V_b,V_y>=V_b,V_n>=V_y] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [44] with precondition: [0>=V_b+1,V_x>=0,V_y>=0,V_n>=V_y] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [43] with precondition: [0>=V_x+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [42] with precondition: [0>=V_y+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [41] with precondition: [V_b>=2,V_x>=0,V_y>=0,V_n>=V_y] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [40] with precondition: [V_y>=V_n+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [39]... with precondition: [1>=V_b,V_b>=0,V_x>=0,V_y>=0,V_n>=V_y] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of eval_counterex1c_start(V__0,V__01,V__04,V_3,V_4,V_6,V_7,V_b,V_n,V_x,V_y,B): inf 
Asymptotic class: infinity 
* Total analysis performed in 334 ms.

