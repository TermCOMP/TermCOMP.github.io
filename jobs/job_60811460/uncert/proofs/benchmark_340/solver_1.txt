NO

# LoAT Proof:
NO

NO

Initial ITS

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f4 -> 2
f11 -> 3

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=0, i5'=99
   1: (-2+i1 == 0 /\ -1+it5-it4 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=it6
   2: (-2+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=2, i3'=1+i3, i5'=it7
   3: (-2+i1 == 0 /\ i4-i5 >= 0) /\ i1'=3, i3'=1+i3

Dependency graph:
0 -> 1, 0 -> 2, 0 -> 3
1 -> 1, 1 -> 2, 1 -> 3
2 -> 1, 2 -> 2, 2 -> 3

Preprocessed Transitions

	Eliminated Temporary Variables

	Original rule:
	(-2+i1 == 0 /\ -1+it5-it4 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=it6
	New rule:
	(-2+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=it6

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f4 -> 2
f11 -> 3

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=0, i5'=99
   2: (-2+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=2, i3'=1+i3, i5'=it7
   3: (-2+i1 == 0 /\ i4-i5 >= 0) /\ i1'=3, i3'=1+i3
   4: (-2+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=it6

Dependency graph:
0 -> 2, 0 -> 3, 0 -> 4
2 -> 2, 2 -> 3, 2 -> 4
4 -> 2, 4 -> 3, 4 -> 4

Refined Dependency Graph

	Removed the following edges: 0 -> 3

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f4 -> 2
f11 -> 3

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=0, i5'=99
   2: (-2+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=2, i3'=1+i3, i5'=it7
   3: (-2+i1 == 0 /\ i4-i5 >= 0) /\ i1'=3, i3'=1+i3
   4: (-2+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=it6

Dependency graph:
0 -> 2, 0 -> 4
2 -> 2, 2 -> 3, 2 -> 4
4 -> 2, 4 -> 3, 4 -> 4

Step with 0

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 4

	Trace

	0[(-1+i1 == 0)]
	4[(-2+i1 == 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Nonterm

	Certificate of Non-Termination

	Original rule:
	(-2+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=it6
	New rule:
	(-2+i1 >= 0 /\ -i4+it6 <= 0 /\ 2-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=0

		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		-1-i4+i5 >= 0 [0]: eventual decrease yields (-1-it6+i5 >= 0 /\ -1-i4+i5 >= 0)
		
		-1-i4+i5 >= 0 [1]: eventual increase yields (-i4+it6 <= 0 /\ -1-i4+i5 >= 0)
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0, -1-i4+i5 >= 0 -> (-i4+it6 <= 0 /\ -1-i4+i5 >= 0)}

	Loop Acceleration

	Original rule:
	(-2+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=it6
	New rule:
	(-1-it6+i5 >= 0 /\ -2+i1 >= 0 /\ -1+it19 >= 0 /\ 2-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=i1, i3'=i3+it19, i4'=it6

		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		-1-i4+i5 >= 0 [0]: eventual decrease yields (-1-it6+i5 >= 0 /\ -1-i4+i5 >= 0)
		
		-1-i4+i5 >= 0 [1]: eventual increase yields (-i4+it6 <= 0 /\ -1-i4+i5 >= 0)
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0, -1-i4+i5 >= 0 -> (-1-it6+i5 >= 0 /\ -1-i4+i5 >= 0)}

	Removed Trivial Updates

	Original rule:
	(-1-it6+i5 >= 0 /\ -2+i1 >= 0 /\ -1+it19 >= 0 /\ 2-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=i1, i3'=i3+it19, i4'=it6
	New rule:
	(-1-it6+i5 >= 0 /\ -2+i1 >= 0 /\ -1+it19 >= 0 /\ 2-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3+it19, i4'=it6

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f4 -> 2
f11 -> 3

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=0, i5'=99
   2: (-2+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=2, i3'=1+i3, i5'=it7
   3: (-2+i1 == 0 /\ i4-i5 >= 0) /\ i1'=3, i3'=1+i3
   4: (-2+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=it6
   5: (-2+i1 >= 0 /\ -i4+it6 <= 0 /\ 2-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=0
   6: (-1-it6+i5 >= 0 /\ -2+i1 >= 0 /\ -1+it19 >= 0 /\ 2-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3+it19, i4'=it6

Dependency graph:
0 -> 2, 0 -> 4, 0 -> 5, 0 -> 6
2 -> 2, 2 -> 3, 2 -> 4, 2 -> 5, 2 -> 6
4 -> 2, 4 -> 3, 4 -> 4, 4 -> 5, 4 -> 6
6 -> 2, 6 -> 3, 6 -> 4, 6 -> 5

Step with 5

	Trace

	0[(-1+i1 == 0)]
	5[(-2+i1 >= 0 /\ -i4+it6 <= 0 /\ 2-i1 >= 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{}
	{5[T]}
	
Refute

	Counterexample

	(i1=1, i3=-1)
	-0-> (i1=2, i3=0, i4=0, i5=99 )
	-5-> ( )
	
NO

Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
MAYBE


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁
  Temp_Vars:  C, D, E
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁) → l1(0, 99)
  t₁: l1(X₀, X₁) → l1(E, X₁) :|: 1+D ≤ C ∧ 1+X₀ ≤ X₁
  t₂: l1(X₀, X₁) → l1(X₀, E) :|: 1+X₀ ≤ X₁
  t₃: l1(X₀, X₁) → l2(X₀, X₁) :|: X₁ ≤ X₀


Preprocessing
  Found invariant X₁ ≤ X₀ for location l2


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁
  Temp_Vars:  C, D, E
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁) → l1(0, 99)
  t₁: l1(X₀, X₁) → l1(E, X₁) :|: 1+D ≤ C ∧ 1+X₀ ≤ X₁
  t₂: l1(X₀, X₁) → l1(X₀, E) :|: 1+X₀ ≤ X₁
  t₃: l1(X₀, X₁) → l2(X₀, X₁) :|: X₁ ≤ X₀


  Found invariant X₁ ≤ X₀ for location l2


All Bounds
Timebounds
  Overall timebound:inf {Infinity}
    t₀: 1 {O(1)}
    t₁: inf {Infinity}
    t₂: inf {Infinity}
    t₃: 1 {O(1)}


Costbounds
  Overall costbound: inf {Infinity}
    t₀: 1 {O(1)}
    t₁: inf {Infinity}
    t₂: inf {Infinity}
    t₃: 1 {O(1)}


Sizebounds
    t₀, X₀: 0 {O(1)}
    t₀, X₁: 99 {O(1)}

