WORST_CASE(?,O(1))

# LoAT Proof:
Initial ITS

Start location: start

Location map:
LoAT_sink -> 0
start -> 1
eval -> 2

Rules:
   0: (-2+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=i5, i5'=i4
   1: -1+i1 == 0 /\ i1'=2, i3'=1+i3

Dependency graph:
0 -> 0
1 -> 0

Unrolled Loops

	Unrolling

	Original rule:
	(-2+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=i5, i5'=i4
	New rule:
	(0 == 0 /\ -2+i1 == 0 /\ -1+i4-i5 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=2, i3'=2+i3, i4'=i4, i5'=i5
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -2+i1 == 0 /\ -1+i4-i5 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=2, i3'=2+i3, i4'=i4, i5'=i5
	New rule:
	(-2+i1 == 0 /\ -1+i4-i5 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=2, i3'=2+i3, i4'=i4, i5'=i5
	
	Removed Trivial Updates

	Original rule:
	(-2+i1 == 0 /\ -1+i4-i5 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=2, i3'=2+i3, i4'=i4, i5'=i5
	New rule:
	(-2+i1 == 0 /\ -1+i4-i5 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=2, i3'=2+i3

Start location: start

Location map:
LoAT_sink -> 0
start -> 1
eval -> 2

Rules:
   0: (-2+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=i5, i5'=i4
   1: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   2: (-2+i1 == 0 /\ -1+i4-i5 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=2, i3'=2+i3

Dependency graph:
0 -> 0, 0 -> 2
1 -> 0, 1 -> 2
2 -> 0, 2 -> 2

Refined Dependency Graph

	Removed the following edges: 0 -> 0, 0 -> 2, 1 -> 2, 2 -> 0, 2 -> 2

Start location: start

Location map:
LoAT_sink -> 0
start -> 1
eval -> 2

Rules:
   0: (-2+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=i5, i5'=i4
   1: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   2: (-2+i1 == 0 /\ -1+i4-i5 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=2, i3'=2+i3

Dependency graph:
1 -> 0

Step with 1

	Trace

	1[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 0

	Trace

	1[(-1+i1 == 0)]
	0[(-2+i1 == 0 /\ -1+i4-i5 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Backtrack

	Trace

	1[(-1+i1 == 0)]
	
	Blocked

	{}
	{0[T]}
	
Backtrack

	Trace

	Blocked

	{1[T]}
	
Accept

Constant


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁
  Temp_Vars:  
  Locations:  l0, l1
  Return Locations:  
  Transitions:
  t₁: l0(X₀, X₁) → l1(X₀, X₁)
  t₀: l1(X₀, X₁) → l1(X₁, X₀) :|: 1+X₁ ≤ X₀


Preprocessing
Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁
  Temp_Vars:  
  Locations:  l0, l1
  Return Locations:  
  Transitions:
  t₁: l0(X₀, X₁) → l1(X₀, X₁)
  t₀: l1(X₀, X₁) → l1(X₁, X₀) :|: 1+X₁ ≤ X₀


  knowledge_propagation leads to new time bound 1 {O(1)} for transition t₀: l1(X₀, X₁) → l1(X₁, X₀) :|: 1+X₁ ≤ X₀


All Bounds
Timebounds
  Overall timebound:2 {O(1)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}


Costbounds
  Overall costbound: 2 {O(1)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}


Sizebounds
    t₀, X₀: X₁ {O(n)}
    t₀, X₁: X₀ {O(n)}
    t₁, X₀: X₀ {O(n)}
    t₁, X₁: X₁ {O(n)}

