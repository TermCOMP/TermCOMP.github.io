WORST_CASE(?,O(n^3))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [evalfbb2in/5,evalfbb3in/5]
1. recursive  : [evalfbb1in/7,evalfbb3in_loop_cont/8,evalfbb4in/7,evalfbb5in/7]
2. recursive  : [evalfbb5in_loop_cont/11,evalfbb6in/10,evalfbb7in/10]
3. non_recursive  : [evalfstop/7]
4. non_recursive  : [evalfreturnin/7]
5. non_recursive  : [exit_location/1]
6. non_recursive  : [evalfbb7in_loop_cont/8]
7. non_recursive  : [evalfentryin/7]
8. non_recursive  : [evalfstart/7]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into evalfbb3in/5
1. SCC is partially evaluated into evalfbb5in/7
2. SCC is partially evaluated into evalfbb7in/10
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into evalfbb7in_loop_cont/8
7. SCC is partially evaluated into evalfentryin/7
8. SCC is partially evaluated into evalfstart/7

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations evalfbb3in/5 
* CE 15 is refined into CE [16] 
* CE 14 is refined into CE [17] 
* CE 13 is refined into CE [18] 


### Cost equations --> "Loop" of evalfbb3in/5 
* CEs [18] --> Loop 16 
* CEs [16] --> Loop 17 
* CEs [17] --> Loop 18 

### Ranking functions of CR evalfbb3in(D,E,F,G,H) 
* RF of phase [16]: [D+E-F+1]

#### Partial ranking functions of CR evalfbb3in(D,E,F,G,H) 
* Partial RF of phase [16]:
  - RF of loop [16:1]:
    D+E-F+1


### Specialization of cost equations evalfbb5in/7 
* CE 11 is refined into CE [19] 
* CE 9 is refined into CE [20,21] 
* CE 12 is refined into CE [22] 
* CE 10 is refined into CE [23,24] 


### Cost equations --> "Loop" of evalfbb5in/7 
* CEs [23] --> Loop 19 
* CEs [24] --> Loop 20 
* CEs [19] --> Loop 21 
* CEs [20] --> Loop 22 
* CEs [21] --> Loop 23 
* CEs [22] --> Loop 24 

### Ranking functions of CR evalfbb5in(C,D,E,F,G,H,I) 
* RF of phase [19]: [C-E+1,-E+1]
* RF of phase [20]: [C-E+1]

#### Partial ranking functions of CR evalfbb5in(C,D,E,F,G,H,I) 
* Partial RF of phase [19]:
  - RF of loop [19:1]:
    C-E+1
    -E+1
* Partial RF of phase [20]:
  - RF of loop [20:1]:
    C-E+1


### Specialization of cost equations evalfbb7in/10 
* CE 5 is refined into CE [25] 
* CE 3 is refined into CE [26,27,28,29,30,31,32,33] 
* CE 6 is refined into CE [34] 
* CE 4 is refined into CE [35,36,37,38] 


### Cost equations --> "Loop" of evalfbb7in/10 
* CEs [35] --> Loop 25 
* CEs [38] --> Loop 26 
* CEs [37] --> Loop 27 
* CEs [36] --> Loop 28 
* CEs [25] --> Loop 29 
* CEs [26] --> Loop 30 
* CEs [33] --> Loop 31 
* CEs [32] --> Loop 32 
* CEs [31] --> Loop 33 
* CEs [30] --> Loop 34 
* CEs [29] --> Loop 35 
* CEs [28] --> Loop 36 
* CEs [27] --> Loop 37 
* CEs [34] --> Loop 38 

### Ranking functions of CR evalfbb7in(A,B,C,D,E,F,G,H,I,J) 
* RF of phase [25]: [A-D+1]
* RF of phase [26]: [A-D+1]
* RF of phase [27]: [A-D+1]
* RF of phase [28]: [A-D+1]

#### Partial ranking functions of CR evalfbb7in(A,B,C,D,E,F,G,H,I,J) 
* Partial RF of phase [25]:
  - RF of loop [25:1]:
    A-D+1
* Partial RF of phase [26]:
  - RF of loop [26:1]:
    A-D+1
* Partial RF of phase [27]:
  - RF of loop [27:1]:
    A-D+1
* Partial RF of phase [28]:
  - RF of loop [28:1]:
    A-D+1


### Specialization of cost equations evalfbb7in_loop_cont/8 
* CE 7 is refined into CE [39] 
* CE 8 is refined into CE [40] 


### Cost equations --> "Loop" of evalfbb7in_loop_cont/8 
* CEs [39] --> Loop 39 
* CEs [40] --> Loop 40 

### Ranking functions of CR evalfbb7in_loop_cont(A,B,C,D,E,F,G,H) 

#### Partial ranking functions of CR evalfbb7in_loop_cont(A,B,C,D,E,F,G,H) 


### Specialization of cost equations evalfentryin/7 
* CE 2 is refined into CE [41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63] 


### Cost equations --> "Loop" of evalfentryin/7 
* CEs [59] --> Loop 41 
* CEs [57] --> Loop 42 
* CEs [56,60] --> Loop 43 
* CEs [55] --> Loop 44 
* CEs [58] --> Loop 45 
* CEs [54] --> Loop 46 
* CEs [52] --> Loop 47 
* CEs [53] --> Loop 48 
* CEs [51,63] --> Loop 49 
* CEs [50] --> Loop 50 
* CEs [49] --> Loop 51 
* CEs [48,61] --> Loop 52 
* CEs [47] --> Loop 53 
* CEs [46] --> Loop 54 
* CEs [45] --> Loop 55 
* CEs [44] --> Loop 56 
* CEs [43] --> Loop 57 
* CEs [42,62] --> Loop 58 
* CEs [41] --> Loop 59 

### Ranking functions of CR evalfentryin(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR evalfentryin(A,B,C,D,E,F,G) 


### Specialization of cost equations evalfstart/7 
* CE 1 is refined into CE [64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82] 


### Cost equations --> "Loop" of evalfstart/7 
* CEs [82] --> Loop 60 
* CEs [81] --> Loop 61 
* CEs [80] --> Loop 62 
* CEs [79] --> Loop 63 
* CEs [78] --> Loop 64 
* CEs [77] --> Loop 65 
* CEs [76] --> Loop 66 
* CEs [75] --> Loop 67 
* CEs [74] --> Loop 68 
* CEs [73] --> Loop 69 
* CEs [72] --> Loop 70 
* CEs [71] --> Loop 71 
* CEs [70] --> Loop 72 
* CEs [69] --> Loop 73 
* CEs [68] --> Loop 74 
* CEs [67] --> Loop 75 
* CEs [66] --> Loop 76 
* CEs [65] --> Loop 77 
* CEs [64] --> Loop 78 

### Ranking functions of CR evalfstart(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR evalfstart(A,B,C,D,E,F,G) 


Computing Bounds
=====================================

#### Cost of chains of evalfbb3in(D,E,F,G,H):
* Chain [[16],18]: 1*it(16)+0
  Such that:it(16) =< -F+H

  with precondition: [G=2,D+E+1=H,E+F>=D,D+E>=F] 

* Chain [[16],17]: 1*it(16)+0
  Such that:it(16) =< D+E-F+1

  with precondition: [G=3,E+F>=D,D+E>=F] 

* Chain [18]: 0
  with precondition: [G=2,F=H,F>=D+E+1,E+F>=D] 

* Chain [17]: 0
  with precondition: [G=3,E+F>=D] 


#### Cost of chains of evalfbb5in(C,D,E,F,G,H,I):
* Chain [[20],24]: 1*it(20)+1*s(3)+0
  Such that:it(20) =< C-E+1
aux(1) =< 2*C+2
s(3) =< it(20)*aux(1)

  with precondition: [G=3,E>=0,C>=E] 

* Chain [[20],23]: 1*it(20)+1*s(3)+1*s(4)+0
  Such that:it(20) =< C-E
s(4) =< 2*C+1
aux(1) =< 2*C+2
s(3) =< it(20)*aux(1)

  with precondition: [G=3,E>=0,C>=E+1] 

* Chain [[20],22]: 1*it(20)+1*s(3)+0
  Such that:it(20) =< C-E
aux(1) =< 2*C+2
s(3) =< it(20)*aux(1)

  with precondition: [G=3,E>=0,C>=E+1] 

* Chain [[20],21]: 1*it(20)+1*s(3)+0
  Such that:aux(1) =< -2*D+2*I
it(20) =< -D-E+I
s(3) =< it(20)*aux(1)

  with precondition: [G=4,C+1=H,C+D+1=I,E>=0,C>=E] 

* Chain [[19],[20],24]: 1*it(19)+1*it(20)+1*s(3)+0
  Such that:it(20) =< C+1
it(19) =< C-E
aux(1) =< 2*C+2
aux(2) =< C-E+1
it(19) =< aux(2)
it(20) =< aux(2)
s(3) =< it(20)*aux(1)

  with precondition: [G=3,0>=2*E+1,C>=0,C>=E+1] 

* Chain [[19],[20],23]: 1*it(19)+1*it(20)+1*s(3)+1*s(4)+0
  Such that:it(20) =< C
s(4) =< 2*C+1
aux(1) =< 2*C+2
it(19) =< -E+1/2
aux(3) =< C-E
it(19) =< aux(3)
it(20) =< aux(3)
s(3) =< it(20)*aux(1)

  with precondition: [G=3,0>=2*E+1,C>=1,C>=E+2] 

* Chain [[19],[20],22]: 1*it(19)+1*it(20)+1*s(3)+0
  Such that:it(20) =< C
aux(1) =< 2*C+2
aux(4) =< C-E
it(19) =< aux(4)
it(20) =< aux(4)
s(3) =< it(20)*aux(1)

  with precondition: [G=3,0>=2*E+1,C>=1,C>=E+2] 

* Chain [[19],[20],21]: 1*it(19)+1*it(20)+1*s(3)+0
  Such that:aux(1) =< -2*D+2*I
it(20) =< -D+I
it(19) =< -E+1/2
aux(5) =< -D-E+I
it(19) =< aux(5)
it(20) =< aux(5)
s(3) =< it(20)*aux(1)

  with precondition: [G=4,C+1=H,C+D+1=I,0>=2*E+1,C>=0,C>=E+1] 

* Chain [[19],24]: 1*it(19)+0
  Such that:it(19) =< C-E+1
it(19) =< -E+1/2

  with precondition: [G=3,0>=2*E+1,C>=E] 

* Chain [[19],23]: 1*it(19)+1*s(4)+0
  Such that:s(4) =< 2
it(19) =< C-E
s(4) =< 2*C+1
it(19) =< -E+1/2

  with precondition: [G=3,0>=2*E+1,C>=0,C>=E+1] 

* Chain [[19],22]: 1*it(19)+0
  Such that:it(19) =< C-E
it(19) =< -E+1/2

  with precondition: [G=3,0>=2*E+1,C>=E+1] 

* Chain [[19],21]: 1*it(19)+0
  Such that:it(19) =< C-E+1

  with precondition: [G=4,C+1=H,C+I=D,0>=2*C+1,C>=E] 

* Chain [24]: 0
  with precondition: [G=3] 

* Chain [23]: 1*s(4)+0
  Such that:s(4) =< 2*E+1

  with precondition: [G=3,E>=0,C>=E] 

* Chain [22]: 0
  with precondition: [G=3,C>=E] 

* Chain [21]: 0
  with precondition: [G=4,I=F,E=H,E>=C+1] 


#### Cost of chains of evalfbb7in(A,B,C,D,E,F,G,H,I,J):
* Chain [[28],38]: 1*it(28)+1*s(36)+0
  Such that:it(28) =< A-D+1
aux(12) =< -B+C+1
s(36) =< it(28)*aux(12)

  with precondition: [G=3,0>=2*C+1,C>=B,A>=D] 

* Chain [[28],35]: 1*it(28)+1*s(36)+1*s(37)+0
  Such that:it(28) =< A-D
aux(13) =< -B+C+1
s(37) =< aux(13)
s(36) =< it(28)*aux(13)

  with precondition: [G=3,0>=2*C+1,C>=B,A>=D+1] 

* Chain [[28],34]: 1*it(28)+1*s(36)+1*s(38)+0
  Such that:it(28) =< A-D
s(38) =< -B+C
aux(12) =< -B+C+1
s(36) =< it(28)*aux(12)

  with precondition: [G=3,0>=2*C+1,C>=B+1,A>=D+1] 

* Chain [[28],31]: 1*it(28)+1*s(36)+0
  Such that:it(28) =< A-D
aux(12) =< -B+C+1
s(36) =< it(28)*aux(12)

  with precondition: [G=3,0>=2*C+1,C>=B,A>=D+1] 

* Chain [[28],30]: 1*it(28)+1*s(36)+0
  Such that:it(28) =< A-D
aux(12) =< -B+C+1
s(36) =< it(28)*aux(12)

  with precondition: [G=3,0>=2*C+1,C>=B,A>=D+1] 

* Chain [[28],29]: 1*it(28)+1*s(36)+0
  Such that:aux(12) =< A-B-J+1
it(28) =< A-D+1
s(36) =< it(28)*aux(12)

  with precondition: [G=5,A+1=H,C+1=I,C+J=A,0>=2*C+1,C>=B,A>=D] 

* Chain [[27],38]: 1*it(27)+1*s(49)+1*s(50)+1*s(51)+0
  Such that:it(27) =< A-D+1
aux(14) =< -B+1/2
aux(15) =< -B+C+1
s(47) =< 2*C+2
aux(16) =< s(47)*(1/2)
s(52) =< it(27)*aux(15)
s(50) =< it(27)*aux(14)
s(49) =< it(27)*aux(16)
s(50) =< s(52)
s(49) =< s(52)
s(51) =< s(49)*s(47)

  with precondition: [G=3,0>=2*B+1,C>=0,C>=B+1,A>=D] 

* Chain [[27],37]: 1*it(27)+1*s(49)+1*s(50)+1*s(51)+1*s(53)+1*s(54)+1*s(57)+1*s(59)+1*s(60)+0
  Such that:s(53) =< 2
it(27) =< A-D
s(58) =< -B+C
s(54) =< C+1
s(53) =< 2*C+1
aux(17) =< -B+1/2
aux(18) =< -B+C+1
aux(19) =< 2*C+2
s(57) =< aux(17)
s(57) =< s(58)
s(59) =< s(58)
s(59) =< aux(18)
s(54) =< aux(18)
s(60) =< s(54)*aux(19)
aux(16) =< aux(19)*(1/2)
s(52) =< it(27)*aux(18)
s(50) =< it(27)*aux(17)
s(49) =< it(27)*aux(16)
s(50) =< s(52)
s(49) =< s(52)
s(51) =< s(49)*aux(19)

  with precondition: [G=3,0>=2*B+1,C>=0,C>=B+1,A>=D+1] 

* Chain [[27],36]: 1*it(27)+1*s(49)+1*s(50)+1*s(51)+1*s(61)+1*s(62)+2*s(66)+1*s(67)+2*s(68)+0
  Such that:it(27) =< A-D
s(64) =< -B+C
aux(15) =< -B+C+1
s(63) =< C
s(61) =< 2*C+1
aux(20) =< -B+1/2
aux(21) =< 2*C+2
s(62) =< aux(20)
s(66) =< s(63)
s(67) =< s(64)
s(66) =< s(64)
s(68) =< s(66)*aux(21)
s(62) =< s(64)
aux(16) =< aux(21)*(1/2)
s(52) =< it(27)*aux(15)
s(50) =< it(27)*aux(20)
s(49) =< it(27)*aux(16)
s(50) =< s(52)
s(49) =< s(52)
s(51) =< s(49)*aux(21)

  with precondition: [G=3,0>=2*B+1,C>=1,C>=B+2,A>=D+1] 

* Chain [[27],35]: 1*it(27)+1*s(37)+1*s(49)+1*s(50)+1*s(51)+0
  Such that:it(27) =< A-D
aux(15) =< -B+C+1
s(47) =< 2*C+2
aux(22) =< -B+1/2
s(37) =< aux(22)
aux(16) =< s(47)*(1/2)
s(52) =< it(27)*aux(15)
s(50) =< it(27)*aux(22)
s(49) =< it(27)*aux(16)
s(50) =< s(52)
s(49) =< s(52)
s(51) =< s(49)*s(47)

  with precondition: [G=3,0>=2*B+1,C>=0,C>=B+1,A>=D+1] 

* Chain [[27],34]: 1*it(27)+1*s(38)+1*s(49)+1*s(50)+1*s(51)+0
  Such that:it(27) =< A-D
s(38) =< -B+C
aux(15) =< -B+C+1
s(47) =< 2*C+2
aux(23) =< -B+1/2
s(38) =< aux(23)
aux(16) =< s(47)*(1/2)
s(52) =< it(27)*aux(15)
s(50) =< it(27)*aux(23)
s(49) =< it(27)*aux(16)
s(50) =< s(52)
s(49) =< s(52)
s(51) =< s(49)*s(47)

  with precondition: [G=3,0>=2*B+1,C>=0,C>=B+1,A>=D+1] 

* Chain [[27],31]: 1*it(27)+1*s(49)+1*s(50)+1*s(51)+0
  Such that:it(27) =< A-D
aux(14) =< -B+1/2
aux(15) =< -B+C+1
s(47) =< 2*C+2
aux(16) =< s(47)*(1/2)
s(52) =< it(27)*aux(15)
s(50) =< it(27)*aux(14)
s(49) =< it(27)*aux(16)
s(50) =< s(52)
s(49) =< s(52)
s(51) =< s(49)*s(47)

  with precondition: [G=3,0>=2*B+1,C>=0,C>=B+1,A>=D+1] 

* Chain [[27],30]: 1*it(27)+1*s(49)+1*s(50)+1*s(51)+0
  Such that:it(27) =< A-D
aux(14) =< -B+1/2
aux(15) =< -B+C+1
s(47) =< 2*C+2
aux(16) =< s(47)*(1/2)
s(52) =< it(27)*aux(15)
s(50) =< it(27)*aux(14)
s(49) =< it(27)*aux(16)
s(50) =< s(52)
s(49) =< s(52)
s(51) =< s(49)*s(47)

  with precondition: [G=3,0>=2*B+1,C>=0,C>=B+1,A>=D+1] 

* Chain [[27],29]: 1*it(27)+1*s(49)+1*s(50)+1*s(51)+0
  Such that:s(47) =< -2*A+2*J
aux(15) =< -A-B+J
it(27) =< A-D+1
aux(14) =< -B+1/2
aux(16) =< s(47)*(1/2)
s(52) =< it(27)*aux(15)
s(50) =< it(27)*aux(14)
s(49) =< it(27)*aux(16)
s(50) =< s(52)
s(49) =< s(52)
s(51) =< s(49)*s(47)

  with precondition: [G=5,A+1=H,C+1=I,A+C+1=J,0>=2*B+1,C>=0,C>=B+1,A>=D] 

* Chain [[26],38]: 1*it(26)+1*s(75)+1*s(76)+0
  Such that:it(26) =< A-D+1
aux(24) =< -B+C+1
s(73) =< 2*C+2
aux(24) =< s(73)*(1/2)
s(75) =< it(26)*aux(24)
s(76) =< s(75)*s(73)

  with precondition: [G=3,B>=0,C>=B,A>=D] 

* Chain [[26],33]: 1*it(26)+1*s(75)+1*s(76)+1*s(77)+1*s(79)+1*s(80)+0
  Such that:it(26) =< A-D
s(79) =< 2*B+1
aux(25) =< -B+C+1
aux(26) =< 2*C+2
aux(24) =< aux(25)
s(77) =< aux(25)
s(80) =< s(77)*aux(26)
aux(24) =< aux(26)*(1/2)
s(75) =< it(26)*aux(24)
s(76) =< s(75)*aux(26)

  with precondition: [G=3,B>=0,C>=B,A>=D+1] 

* Chain [[26],32]: 1*it(26)+1*s(75)+1*s(76)+1*s(81)+2*s(84)+2*s(85)+0
  Such that:it(26) =< A-D
s(82) =< -B+C
aux(24) =< -B+C+1
s(81) =< 2*C+1
aux(27) =< 2*C+2
s(84) =< s(82)
s(85) =< s(84)*aux(27)
aux(24) =< aux(27)*(1/2)
s(75) =< it(26)*aux(24)
s(76) =< s(75)*aux(27)

  with precondition: [G=3,B>=0,C>=B+1,A>=D+1] 

* Chain [[26],31]: 1*it(26)+1*s(75)+1*s(76)+0
  Such that:it(26) =< A-D
aux(24) =< -B+C+1
s(73) =< 2*C+2
aux(24) =< s(73)*(1/2)
s(75) =< it(26)*aux(24)
s(76) =< s(75)*s(73)

  with precondition: [G=3,B>=0,C>=B,A>=D+1] 

* Chain [[26],30]: 1*it(26)+1*s(75)+1*s(76)+0
  Such that:it(26) =< A-D
aux(24) =< -B+C+1
s(73) =< 2*C+2
aux(24) =< s(73)*(1/2)
s(75) =< it(26)*aux(24)
s(76) =< s(75)*s(73)

  with precondition: [G=3,B>=0,C>=B,A>=D+1] 

* Chain [[26],29]: 1*it(26)+1*s(75)+1*s(76)+0
  Such that:s(73) =< -2*A+2*J
aux(24) =< -A-B+J
it(26) =< A-D+1
aux(24) =< s(73)*(1/2)
s(75) =< it(26)*aux(24)
s(76) =< s(75)*s(73)

  with precondition: [G=5,A+1=H,C+1=I,A+C+1=J,B>=0,C>=B,A>=D] 

* Chain [[25],38]: 1*it(25)+0
  Such that:it(25) =< A-D+1

  with precondition: [G=3,B>=C+1,A>=D] 

* Chain [[25],30]: 1*it(25)+0
  Such that:it(25) =< A-D

  with precondition: [G=3,B>=C+1,A>=D+1] 

* Chain [[25],29]: 1*it(25)+0
  Such that:it(25) =< A-D+1

  with precondition: [G=5,A+1=H,B=I,F=J,B>=C+1,A>=D] 

* Chain [38]: 0
  with precondition: [G=3] 

* Chain [37]: 1*s(53)+1*s(54)+1*s(57)+1*s(59)+1*s(60)+0
  Such that:s(53) =< 2
s(57) =< -B+1/2
s(58) =< -B+C
s(55) =< -B+C+1
s(54) =< C+1
s(53) =< 2*C+1
s(56) =< 2*C+2
s(57) =< s(58)
s(59) =< s(58)
s(59) =< s(55)
s(54) =< s(55)
s(60) =< s(54)*s(56)

  with precondition: [G=3,0>=2*B+1,C>=0,C>=B+1,A>=D] 

* Chain [36]: 1*s(61)+1*s(62)+2*s(66)+1*s(67)+2*s(68)+0
  Such that:s(62) =< -B+1/2
s(64) =< -B+C
s(63) =< C
s(61) =< 2*C+1
s(65) =< 2*C+2
s(66) =< s(63)
s(67) =< s(64)
s(66) =< s(64)
s(68) =< s(66)*s(65)
s(62) =< s(64)

  with precondition: [G=3,0>=2*B+1,C>=1,C>=B+2,A>=D] 

* Chain [35]: 1*s(37)+0
  Such that:s(37) =< -B+1/2
s(37) =< -B+C+1

  with precondition: [G=3,0>=2*B+1,C>=B,A>=D] 

* Chain [34]: 1*s(38)+0
  Such that:s(38) =< -B+1/2
s(38) =< -B+C

  with precondition: [G=3,0>=2*B+1,C>=B+1,A>=D] 

* Chain [33]: 1*s(77)+1*s(79)+1*s(80)+0
  Such that:s(77) =< -B+C+1
s(79) =< 2*B+1
s(78) =< 2*C+2
s(80) =< s(77)*s(78)

  with precondition: [G=3,B>=0,C>=B,A>=D] 

* Chain [32]: 1*s(81)+2*s(84)+2*s(85)+0
  Such that:s(82) =< -B+C
s(81) =< 2*C+1
s(83) =< 2*C+2
s(84) =< s(82)
s(85) =< s(84)*s(83)

  with precondition: [G=3,B>=0,C>=B+1,A>=D] 

* Chain [31]: 0
  with precondition: [G=3,C>=B,A>=D] 

* Chain [30]: 0
  with precondition: [G=3,A>=D] 

* Chain [29]: 0
  with precondition: [G=5,I=E,J=F,D=H,D>=A+1] 


#### Cost of chains of evalfbb7in_loop_cont(A,B,C,D,E,F,G,H):
* Chain [40]: 0
  with precondition: [A=3] 

* Chain [39]: 0
  with precondition: [A=5] 


#### Cost of chains of evalfentryin(A,B,C,D,E,F,G):
* Chain [59]: 0
  with precondition: [] 

* Chain [58]: 1*s(194)+2*s(195)+1*s(197)+1*s(201)+1*s(202)+1*s(203)+2*s(206)+2*s(207)+2*s(208)+0
  Such that:s(194) =< 2
s(196) =< -C+D
s(197) =< D+1
s(194) =< 2*D+1
aux(43) =< -A+B+1
aux(44) =< -C+1/2
aux(45) =< -C+D+1
aux(46) =< 2*D+2
s(195) =< aux(43)
s(201) =< aux(44)
s(201) =< s(196)
s(202) =< s(196)
s(202) =< aux(45)
s(197) =< aux(45)
s(203) =< s(197)*aux(46)
s(204) =< aux(46)*(1/2)
s(205) =< s(195)*aux(45)
s(206) =< s(195)*aux(44)
s(207) =< s(195)*s(204)
s(206) =< s(205)
s(207) =< s(205)
s(208) =< s(207)*aux(46)

  with precondition: [0>=2*C+1,D>=0,B>=A,D>=C+1] 

* Chain [57]: 1*s(218)+1*s(219)+5*s(225)+2*s(226)+1*s(227)+1*s(228)+5*s(231)+5*s(232)+5*s(233)+1*s(234)+0
  Such that:s(218) =< 2
s(220) =< -A+B
s(221) =< -C+1/2
s(222) =< -C+D
s(223) =< -C+D+1
s(219) =< D+1
s(218) =< 2*D+1
s(224) =< 2*D+2
s(225) =< s(220)
s(226) =< s(222)
s(226) =< s(221)
s(227) =< s(222)
s(227) =< s(223)
s(219) =< s(223)
s(228) =< s(219)*s(224)
s(229) =< s(224)*(1/2)
s(230) =< s(225)*s(223)
s(231) =< s(225)*s(221)
s(232) =< s(225)*s(229)
s(231) =< s(230)
s(232) =< s(230)
s(233) =< s(232)*s(224)
s(234) =< s(221)

  with precondition: [0>=2*C+1,D>=0,B>=A+1,D>=C+1] 

* Chain [56]: 1*s(235)+1*s(238)+2*s(240)+1*s(241)+2*s(242)+0
  Such that:s(235) =< -C+1/2
s(236) =< -C+D
s(237) =< D
s(238) =< 2*D+1
s(239) =< 2*D+2
s(240) =< s(237)
s(241) =< s(236)
s(240) =< s(236)
s(242) =< s(240)*s(239)
s(235) =< s(236)

  with precondition: [0>=2*C+1,D>=1,B>=A,D>=C+2] 

* Chain [55]: 1*s(243)+1*s(247)+1*s(250)+2*s(251)+1*s(252)+2*s(253)+1*s(256)+1*s(257)+1*s(258)+0
  Such that:s(243) =< -A+B
s(248) =< -C+1/2
s(244) =< -C+D
s(245) =< -C+D+1
s(246) =< D
s(247) =< 2*D+1
s(249) =< 2*D+2
s(250) =< s(248)
s(251) =< s(246)
s(252) =< s(244)
s(251) =< s(244)
s(253) =< s(251)*s(249)
s(250) =< s(244)
s(254) =< s(249)*(1/2)
s(255) =< s(243)*s(245)
s(256) =< s(243)*s(248)
s(257) =< s(243)*s(254)
s(256) =< s(255)
s(257) =< s(255)
s(258) =< s(257)*s(249)

  with precondition: [0>=2*C+1,D>=1,B>=A+1,D>=C+2] 

* Chain [54]: 1*s(259)+0
  Such that:s(259) =< -C+1/2
s(259) =< -C+D+1

  with precondition: [0>=2*C+1,B>=A,D>=C] 

* Chain [53]: 1*s(260)+0
  Such that:s(260) =< -C+1/2
s(260) =< -C+D

  with precondition: [0>=2*C+1,B>=A,D>=C+1] 

* Chain [52]: 2*s(261)+2*s(263)+0
  Such that:aux(47) =< -A+B+1
aux(48) =< -C+D+1
s(261) =< aux(47)
s(263) =< s(261)*aux(48)

  with precondition: [0>=2*D+1,B>=A,D>=C] 

* Chain [51]: 3*s(269)+3*s(270)+1*s(271)+0
  Such that:s(267) =< -A+B
s(268) =< -C+D+1
s(269) =< s(267)
s(270) =< s(269)*s(268)
s(271) =< s(268)

  with precondition: [0>=2*D+1,B>=A+1,D>=C] 

* Chain [50]: 1*s(272)+1*s(273)+1*s(275)+0
  Such that:s(272) =< -A+B
s(273) =< -C+D
s(274) =< -C+D+1
s(275) =< s(272)*s(274)

  with precondition: [0>=2*D+1,B>=A+1,D>=C+1] 

* Chain [49]: 2*s(276)+1*s(277)+1*s(280)+2*s(282)+2*s(283)+1*s(284)+0
  Such that:s(277) =< 2*C+1
aux(49) =< -A+B+1
aux(50) =< -C+D+1
aux(51) =< 2*D+2
s(276) =< aux(49)
s(281) =< aux(50)
s(280) =< aux(50)
s(281) =< aux(51)*(1/2)
s(282) =< s(276)*s(281)
s(283) =< s(282)*aux(51)
s(284) =< s(280)*aux(51)

  with precondition: [C>=0,B>=A,D>=C] 

* Chain [48]: 1*s(291)+2*s(293)+2*s(294)+0
  Such that:s(290) =< -C+D
s(291) =< 2*D+1
s(292) =< 2*D+2
s(293) =< s(290)
s(294) =< s(293)*s(292)

  with precondition: [C>=0,B>=A,D>=C+1] 

* Chain [47]: 1*s(295)+3*s(299)+3*s(301)+3*s(302)+1*s(303)+1*s(304)+0
  Such that:s(296) =< -A+B
s(297) =< -C+D+1
s(295) =< 2*C+1
s(298) =< 2*D+2
s(299) =< s(296)
s(300) =< s(297)
s(300) =< s(298)*(1/2)
s(301) =< s(299)*s(300)
s(302) =< s(301)*s(298)
s(303) =< s(297)
s(304) =< s(303)*s(298)

  with precondition: [C>=0,B>=A+1,D>=C] 

* Chain [46]: 1*s(305)+1*s(308)+2*s(310)+2*s(311)+1*s(312)+1*s(313)+0
  Such that:s(305) =< -A+B
s(306) =< -C+D
s(307) =< -C+D+1
s(308) =< 2*D+1
s(309) =< 2*D+2
s(310) =< s(306)
s(311) =< s(310)*s(309)
s(307) =< s(309)*(1/2)
s(312) =< s(305)*s(307)
s(313) =< s(312)*s(309)

  with precondition: [C>=0,B>=A+1,D>=C+1] 

* Chain [45]: 0
  with precondition: [B>=A] 

* Chain [44]: 0
  with precondition: [B>=A,D>=C] 

* Chain [43]: 2*s(314)+0
  Such that:aux(52) =< -A+B+1
s(314) =< aux(52)

  with precondition: [B>=A,C>=D+1] 

* Chain [42]: 1*s(316)+0
  Such that:s(316) =< -A+B

  with precondition: [B>=A+1,C>=D+1] 

* Chain [41]: 0
  with precondition: [A>=B+1] 


#### Cost of chains of evalfstart(A,B,C,D,E,F,G):
* Chain [78]: 0
  with precondition: [] 

* Chain [77]: 1*s(317)+1*s(319)+2*s(324)+1*s(325)+1*s(326)+1*s(327)+2*s(330)+2*s(331)+2*s(332)+0
  Such that:s(317) =< 2
s(320) =< -A+B+1
s(321) =< -C+1/2
s(318) =< -C+D
s(322) =< -C+D+1
s(319) =< D+1
s(317) =< 2*D+1
s(323) =< 2*D+2
s(324) =< s(320)
s(325) =< s(321)
s(325) =< s(318)
s(326) =< s(318)
s(326) =< s(322)
s(319) =< s(322)
s(327) =< s(319)*s(323)
s(328) =< s(323)*(1/2)
s(329) =< s(324)*s(322)
s(330) =< s(324)*s(321)
s(331) =< s(324)*s(328)
s(330) =< s(329)
s(331) =< s(329)
s(332) =< s(331)*s(323)

  with precondition: [0>=2*C+1,D>=0,B>=A,D>=C+1] 

* Chain [76]: 1*s(333)+1*s(338)+5*s(340)+2*s(341)+1*s(342)+1*s(343)+5*s(346)+5*s(347)+5*s(348)+1*s(349)+0
  Such that:s(333) =< 2
s(334) =< -A+B
s(335) =< -C+1/2
s(336) =< -C+D
s(337) =< -C+D+1
s(338) =< D+1
s(333) =< 2*D+1
s(339) =< 2*D+2
s(340) =< s(334)
s(341) =< s(336)
s(341) =< s(335)
s(342) =< s(336)
s(342) =< s(337)
s(338) =< s(337)
s(343) =< s(338)*s(339)
s(344) =< s(339)*(1/2)
s(345) =< s(340)*s(337)
s(346) =< s(340)*s(335)
s(347) =< s(340)*s(344)
s(346) =< s(345)
s(347) =< s(345)
s(348) =< s(347)*s(339)
s(349) =< s(335)

  with precondition: [0>=2*C+1,D>=0,B>=A+1,D>=C+1] 

* Chain [75]: 1*s(350)+1*s(353)+2*s(355)+1*s(356)+2*s(357)+0
  Such that:s(350) =< -C+1/2
s(351) =< -C+D
s(352) =< D
s(353) =< 2*D+1
s(354) =< 2*D+2
s(355) =< s(352)
s(356) =< s(351)
s(355) =< s(351)
s(357) =< s(355)*s(354)
s(350) =< s(351)

  with precondition: [0>=2*C+1,D>=1,B>=A,D>=C+2] 

* Chain [74]: 1*s(358)+1*s(363)+1*s(365)+2*s(366)+1*s(367)+2*s(368)+1*s(371)+1*s(372)+1*s(373)+0
  Such that:s(358) =< -A+B
s(359) =< -C+1/2
s(360) =< -C+D
s(361) =< -C+D+1
s(362) =< D
s(363) =< 2*D+1
s(364) =< 2*D+2
s(365) =< s(359)
s(366) =< s(362)
s(367) =< s(360)
s(366) =< s(360)
s(368) =< s(366)*s(364)
s(365) =< s(360)
s(369) =< s(364)*(1/2)
s(370) =< s(358)*s(361)
s(371) =< s(358)*s(359)
s(372) =< s(358)*s(369)
s(371) =< s(370)
s(372) =< s(370)
s(373) =< s(372)*s(364)

  with precondition: [0>=2*C+1,D>=1,B>=A+1,D>=C+2] 

* Chain [73]: 1*s(374)+0
  Such that:s(374) =< -C+1/2
s(374) =< -C+D+1

  with precondition: [0>=2*C+1,B>=A,D>=C] 

* Chain [72]: 1*s(375)+0
  Such that:s(375) =< -C+1/2
s(375) =< -C+D

  with precondition: [0>=2*C+1,B>=A,D>=C+1] 

* Chain [71]: 2*s(378)+2*s(379)+0
  Such that:s(376) =< -A+B+1
s(377) =< -C+D+1
s(378) =< s(376)
s(379) =< s(378)*s(377)

  with precondition: [0>=2*D+1,B>=A,D>=C] 

* Chain [70]: 3*s(382)+3*s(383)+1*s(384)+0
  Such that:s(380) =< -A+B
s(381) =< -C+D+1
s(382) =< s(380)
s(383) =< s(382)*s(381)
s(384) =< s(381)

  with precondition: [0>=2*D+1,B>=A+1,D>=C] 

* Chain [69]: 1*s(385)+1*s(386)+1*s(388)+0
  Such that:s(385) =< -A+B
s(386) =< -C+D
s(387) =< -C+D+1
s(388) =< s(385)*s(387)

  with precondition: [0>=2*D+1,B>=A+1,D>=C+1] 

* Chain [68]: 1*s(389)+2*s(393)+1*s(395)+2*s(396)+2*s(397)+1*s(398)+0
  Such that:s(390) =< -A+B+1
s(391) =< -C+D+1
s(389) =< 2*C+1
s(392) =< 2*D+2
s(393) =< s(390)
s(394) =< s(391)
s(395) =< s(391)
s(394) =< s(392)*(1/2)
s(396) =< s(393)*s(394)
s(397) =< s(396)*s(392)
s(398) =< s(395)*s(392)

  with precondition: [C>=0,B>=A,D>=C] 

* Chain [67]: 1*s(400)+2*s(402)+2*s(403)+0
  Such that:s(399) =< -C+D
s(400) =< 2*D+1
s(401) =< 2*D+2
s(402) =< s(399)
s(403) =< s(402)*s(401)

  with precondition: [C>=0,B>=A,D>=C+1] 

* Chain [66]: 1*s(406)+3*s(408)+3*s(410)+3*s(411)+1*s(412)+1*s(413)+0
  Such that:s(404) =< -A+B
s(405) =< -C+D+1
s(406) =< 2*C+1
s(407) =< 2*D+2
s(408) =< s(404)
s(409) =< s(405)
s(409) =< s(407)*(1/2)
s(410) =< s(408)*s(409)
s(411) =< s(410)*s(407)
s(412) =< s(405)
s(413) =< s(412)*s(407)

  with precondition: [C>=0,B>=A+1,D>=C] 

* Chain [65]: 1*s(414)+1*s(417)+2*s(419)+2*s(420)+1*s(421)+1*s(422)+0
  Such that:s(414) =< -A+B
s(415) =< -C+D
s(416) =< -C+D+1
s(417) =< 2*D+1
s(418) =< 2*D+2
s(419) =< s(415)
s(420) =< s(419)*s(418)
s(416) =< s(418)*(1/2)
s(421) =< s(414)*s(416)
s(422) =< s(421)*s(418)

  with precondition: [C>=0,B>=A+1,D>=C+1] 

* Chain [64]: 0
  with precondition: [B>=A] 

* Chain [63]: 0
  with precondition: [B>=A,D>=C] 

* Chain [62]: 2*s(424)+0
  Such that:s(423) =< -A+B+1
s(424) =< s(423)

  with precondition: [B>=A,C>=D+1] 

* Chain [61]: 1*s(425)+0
  Such that:s(425) =< -A+B

  with precondition: [B>=A+1,C>=D+1] 

* Chain [60]: 0
  with precondition: [A>=B+1] 


Closed-form bounds of evalfstart(A,B,C,D,E,F,G): 
-------------------------------------
* Chain [78] with precondition: [] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [77] with precondition: [0>=2*C+1,D>=0,B>=A,D>=C+1] 
    - Upper bound: D+3+(2*D+2)*(D+1)+(-C+D)+(-C+1/2)+(-A+B+1)*(-2*C+1)+(-A+B+1)*((2*D+2)*(2*D+2))+(-A+B+1)*(2*D+2)+(-2*A+2*B+2) 
    - Complexity: n^3 
* Chain [76] with precondition: [0>=2*C+1,D>=0,B>=A+1,D>=C+1] 
    - Upper bound: D+3+(2*D+2)*(D+1)+(-5*A+5*B)+(-5*A+5*B)*(-C+1/2)+(-5/2*A+5/2*B)*(2*D+2)+(2*D+2)*((-5/2*A+5/2*B)*(2*D+2))+(-3*C+3*D)+(-C+1/2) 
    - Complexity: n^3 
* Chain [75] with precondition: [0>=2*C+1,D>=1,B>=A,D>=C+2] 
    - Upper bound: (2*D+2)*(2*D)+2*D+(-C+D)+(-C+1/2)+(2*D+1) 
    - Complexity: n^2 
* Chain [74] with precondition: [0>=2*C+1,D>=1,B>=A+1,D>=C+2] 
    - Upper bound: (2*D+2)*(2*D)+2*D+(-A+B)+(-C+1/2)*(-A+B)+(-A/2+B/2)*(2*D+2)+(2*D+2)*((-A/2+B/2)*(2*D+2))+(-C+D)+(-C+1/2)+(2*D+1) 
    - Complexity: n^3 
* Chain [73] with precondition: [0>=2*C+1,B>=A,D>=C] 
    - Upper bound: -C+1/2 
    - Complexity: n 
* Chain [72] with precondition: [0>=2*C+1,B>=A,D>=C+1] 
    - Upper bound: -C+1/2 
    - Complexity: n 
* Chain [71] with precondition: [0>=2*D+1,B>=A,D>=C] 
    - Upper bound: -2*A+2*B+2+(-2*A+2*B+2)*(-C+D+1) 
    - Complexity: n^2 
* Chain [70] with precondition: [0>=2*D+1,B>=A+1,D>=C] 
    - Upper bound: -3*A+3*B+(-C+D+1)*(-3*A+3*B)+(-C+D+1) 
    - Complexity: n^2 
* Chain [69] with precondition: [0>=2*D+1,B>=A+1,D>=C+1] 
    - Upper bound: -A+B+(-C+D+1)*(-A+B)+(-C+D) 
    - Complexity: n^2 
* Chain [68] with precondition: [C>=0,B>=A,D>=C] 
    - Upper bound: 2*C+1+(-C+D+1)*((-A+B+1)*(4*D+4))+(-C+D+1)*(2*D+2)+(-2*A+2*B+2)+(-2*A+2*B+2)*(-C+D+1)+(-C+D+1) 
    - Complexity: n^3 
* Chain [67] with precondition: [C>=0,B>=A,D>=C+1] 
    - Upper bound: -2*C+2*D+(2*D+2)*(-2*C+2*D)+(2*D+1) 
    - Complexity: n^2 
* Chain [66] with precondition: [C>=0,B>=A+1,D>=C] 
    - Upper bound: -3*A+3*B+(-C+D+1)*((2*D+2)*(-3*A+3*B))+(-C+D+1)*(-3*A+3*B)+(2*C+1)+(-C+D+1)*(2*D+2)+(-C+D+1) 
    - Complexity: n^3 
* Chain [65] with precondition: [C>=0,B>=A+1,D>=C+1] 
    - Upper bound: -A+B+(-C+D+1)*((2*D+2)*(-A+B))+(-C+D+1)*(-A+B)+(-2*C+2*D)+(2*D+2)*(-2*C+2*D)+(2*D+1) 
    - Complexity: n^3 
* Chain [64] with precondition: [B>=A] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [63] with precondition: [B>=A,D>=C] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [62] with precondition: [B>=A,C>=D+1] 
    - Upper bound: -2*A+2*B+2 
    - Complexity: n 
* Chain [61] with precondition: [B>=A+1,C>=D+1] 
    - Upper bound: -A+B 
    - Complexity: n 
* Chain [60] with precondition: [A>=B+1] 
    - Upper bound: 0 
    - Complexity: constant 

### Maximum cost of evalfstart(A,B,C,D,E,F,G): max([max([max([nat(-C+1/2),nat(2*D+1)+nat(-C+D)+max([nat(-C+D)*2*nat(2*D+2)+nat(-C+D),nat(D)*2*nat(2*D+2)+nat(D)*2+nat(-C+1/2)])]),nat(-A+B+1)*2+max([nat(2*D+2)*2*nat(-A+B+1)*nat(-C+D+1)+nat(2*C+1)+nat(-C+D+1)*nat(2*D+2)+nat(-C+D+1)+nat(-A+B+1)*2*nat(-C+D+1),nat(D+1)+2+nat(2*D+2)*nat(D+1)+nat(-C+D)+nat(-C+1/2)+nat(-C+1/2)*2*nat(-A+B+1)+nat(2*D+2)*nat(2*D+2)*nat(-A+B+1)+nat(-A+B+1)*nat(2*D+2)])]),nat(-A+B)+max([nat(-C+D+1)*nat(-A+B)+max([nat(-A+B)*3*nat(2*D+2)*nat(-C+D+1)+nat(2*C+1)+nat(-C+D+1)*nat(2*D+2)+(nat(-A+B)*2*nat(-C+D+1)+nat(-A+B)*2+nat(-C+D+1)),nat(2*D+2)*nat(-A+B)*nat(-C+D+1)+nat(-C+D)+nat(-C+D)*2*nat(2*D+2)+nat(2*D+1)+nat(-C+D)]),1/2*nat(-A+B)*nat(2*D+2)+nat(-C+1/2)*nat(-A+B)+1/2*nat(-A+B)*nat(2*D+2)*nat(2*D+2)+nat(-C+D)+nat(-C+1/2)+max([nat(D)*2*nat(2*D+2)+nat(D)*2+nat(2*D+1),nat(D+1)+2+nat(2*D+2)*nat(D+1)+nat(-A+B)*4+nat(-A+B)*4*nat(-C+1/2)+nat(-A+B)*2*nat(2*D+2)+nat(-A+B)*2*nat(2*D+2)*nat(2*D+2)+nat(-C+D)*2])])]) 
Asymptotic class: n^3 
* Total analysis performed in 495 ms.

