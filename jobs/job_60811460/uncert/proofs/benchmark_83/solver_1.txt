WORST_CASE(Omega(n^1),O(n^1))

# LoAT Proof:
WORST_CASE(Omega(n^1),?)

WORST_CASE(Omega(n^1),?)
Initial ITS

Start location: evalwisestart

Location map:
LoAT_sink -> 0
evalwisestart -> 1
evalwiseentryin -> 2
evalwisereturnin -> 3
evalwisebb6in -> 4
evalwisebb3in -> 5
evalwisebb4in -> 6
evalwisebb5in -> 7
evalwisestop -> 8

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=3, i3'=1+i3
   2: (-2+i1 == 0 /\ -1-i5 >= 0) /\ i1'=3, i3'=1+i3
   3: (-2+i1 == 0 /\ i4 >= 0 /\ i5 >= 0) /\ i1'=4, i3'=1+i3, i4'=i5, i5'=i4
   4: (-3-i4+i5 >= 0 /\ -4+i1 == 0) /\ i1'=5, i3'=1+i3
   5: (-4+i1 == 0 /\ -3+i4-i5 >= 0) /\ i1'=5, i3'=1+i3
   6: (2+i4-i5 >= 0 /\ 2-i4+i5 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=1+i3
   7: (-5+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=6, i3'=1+i3
   8: (-i4+i5 >= 0 /\ -5+i1 == 0) /\ i1'=7, i3'=1+i3
   9: -6+i1 == 0 /\ i1'=4, i3'=1+i3, i5'=1+i5
  10: -7+i1 == 0 /\ i1'=4, i3'=1+i3, i4'=1+i4
  11: -3+i1 == 0 /\ i1'=8, i3'=1+i3

Dependency graph:
0 -> 1, 0 -> 2, 0 -> 3
1 -> 11
2 -> 11
3 -> 4, 3 -> 5, 3 -> 6
4 -> 7, 4 -> 8
5 -> 7, 5 -> 8
6 -> 11
7 -> 9
8 -> 10
9 -> 4, 9 -> 5, 9 -> 6
10 -> 4, 10 -> 5, 10 -> 6

Chained Linear Paths

	Applied Chaining

	First rule:
	(-2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=3, i3'=1+i3
	Second rule:
	-3+i1 == 0 /\ i1'=8, i3'=1+i3
	New rule:
	(0 == 0 /\ -2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=8, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 1
	
	Applied Chaining

	First rule:
	(-2+i1 == 0 /\ -1-i5 >= 0) /\ i1'=3, i3'=1+i3
	Second rule:
	-3+i1 == 0 /\ i1'=8, i3'=1+i3
	New rule:
	(0 == 0 /\ -2+i1 == 0 /\ -1-i5 >= 0) /\ i1'=8, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 2
	
	Applied Chaining

	First rule:
	(2+i4-i5 >= 0 /\ 2-i4+i5 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=1+i3
	Second rule:
	-3+i1 == 0 /\ i1'=8, i3'=1+i3
	New rule:
	(0 == 0 /\ 2+i4-i5 >= 0 /\ 2-i4+i5 >= 0 /\ -4+i1 == 0) /\ i1'=8, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 6, 11
	
	Applied Chaining

	First rule:
	(-5+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=6, i3'=1+i3
	Second rule:
	-6+i1 == 0 /\ i1'=4, i3'=1+i3, i5'=1+i5
	New rule:
	(0 == 0 /\ -5+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=4, i3'=2+i3, i5'=1+i5
	
	Applied Deletion

	Removed the following rules: 7, 9
	
	Applied Chaining

	First rule:
	(-i4+i5 >= 0 /\ -5+i1 == 0) /\ i1'=7, i3'=1+i3
	Second rule:
	-7+i1 == 0 /\ i1'=4, i3'=1+i3, i4'=1+i4
	New rule:
	(0 == 0 /\ -i4+i5 >= 0 /\ -5+i1 == 0) /\ i1'=4, i3'=2+i3, i4'=1+i4
	
	Applied Deletion

	Removed the following rules: 8, 10

Start location: evalwisestart

Location map:
LoAT_sink -> 0
evalwisestart -> 1
evalwiseentryin -> 2
evalwisereturnin -> 3
evalwisebb6in -> 4
evalwisebb3in -> 5
evalwisebb4in -> 6
evalwisebb5in -> 7
evalwisestop -> 8

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   3: (-2+i1 == 0 /\ i4 >= 0 /\ i5 >= 0) /\ i1'=4, i3'=1+i3, i4'=i5, i5'=i4
   4: (-3-i4+i5 >= 0 /\ -4+i1 == 0) /\ i1'=5, i3'=1+i3
   5: (-4+i1 == 0 /\ -3+i4-i5 >= 0) /\ i1'=5, i3'=1+i3
  12: (0 == 0 /\ -2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=8, i3'=2+i3
  13: (0 == 0 /\ -2+i1 == 0 /\ -1-i5 >= 0) /\ i1'=8, i3'=2+i3
  14: (0 == 0 /\ 2+i4-i5 >= 0 /\ 2-i4+i5 >= 0 /\ -4+i1 == 0) /\ i1'=8, i3'=2+i3
  15: (0 == 0 /\ -5+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=4, i3'=2+i3, i5'=1+i5
  16: (0 == 0 /\ -i4+i5 >= 0 /\ -5+i1 == 0) /\ i1'=4, i3'=2+i3, i4'=1+i4

Dependency graph:
0 -> 3, 0 -> 12, 0 -> 13
3 -> 4, 3 -> 5, 3 -> 14
4 -> 15, 4 -> 16
5 -> 15, 5 -> 16
15 -> 4, 15 -> 5, 15 -> 14
16 -> 4, 16 -> 5, 16 -> 14

Preprocessed Transitions

	Simplified Guard

	Original rule:
	(0 == 0 /\ -2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=8, i3'=2+i3
	New rule:
	(-2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=8, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -2+i1 == 0 /\ -1-i5 >= 0) /\ i1'=8, i3'=2+i3
	New rule:
	(-2+i1 == 0 /\ -1-i5 >= 0) /\ i1'=8, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ 2+i4-i5 >= 0 /\ 2-i4+i5 >= 0 /\ -4+i1 == 0) /\ i1'=8, i3'=2+i3
	New rule:
	(2+i4-i5 >= 0 /\ 2-i4+i5 >= 0 /\ -4+i1 == 0) /\ i1'=8, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -5+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=4, i3'=2+i3, i5'=1+i5
	New rule:
	(-5+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=4, i3'=2+i3, i5'=1+i5
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -i4+i5 >= 0 /\ -5+i1 == 0) /\ i1'=4, i3'=2+i3, i4'=1+i4
	New rule:
	(-i4+i5 >= 0 /\ -5+i1 == 0) /\ i1'=4, i3'=2+i3, i4'=1+i4

Start location: evalwisestart

Location map:
LoAT_sink -> 0
evalwisestart -> 1
evalwiseentryin -> 2
evalwisereturnin -> 3
evalwisebb6in -> 4
evalwisebb3in -> 5
evalwisebb4in -> 6
evalwisebb5in -> 7
evalwisestop -> 8

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   3: (-2+i1 == 0 /\ i4 >= 0 /\ i5 >= 0) /\ i1'=4, i3'=1+i3, i4'=i5, i5'=i4
   4: (-3-i4+i5 >= 0 /\ -4+i1 == 0) /\ i1'=5, i3'=1+i3
   5: (-4+i1 == 0 /\ -3+i4-i5 >= 0) /\ i1'=5, i3'=1+i3
  17: (-2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=8, i3'=2+i3
  18: (-2+i1 == 0 /\ -1-i5 >= 0) /\ i1'=8, i3'=2+i3
  19: (2+i4-i5 >= 0 /\ 2-i4+i5 >= 0 /\ -4+i1 == 0) /\ i1'=8, i3'=2+i3
  20: (-5+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=4, i3'=2+i3, i5'=1+i5
  21: (-i4+i5 >= 0 /\ -5+i1 == 0) /\ i1'=4, i3'=2+i3, i4'=1+i4

Dependency graph:
0 -> 3, 0 -> 17, 0 -> 18
3 -> 4, 3 -> 5, 3 -> 19
4 -> 20, 4 -> 21
5 -> 20, 5 -> 21
20 -> 4, 20 -> 5, 20 -> 19
21 -> 4, 21 -> 5, 21 -> 19

Refined Dependency Graph

	Removed the following edges: 4 -> 20, 5 -> 21, 20 -> 4, 21 -> 5

Start location: evalwisestart

Location map:
LoAT_sink -> 0
evalwisestart -> 1
evalwiseentryin -> 2
evalwisereturnin -> 3
evalwisebb6in -> 4
evalwisebb3in -> 5
evalwisebb4in -> 6
evalwisebb5in -> 7
evalwisestop -> 8

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   3: (-2+i1 == 0 /\ i4 >= 0 /\ i5 >= 0) /\ i1'=4, i3'=1+i3, i4'=i5, i5'=i4
   4: (-3-i4+i5 >= 0 /\ -4+i1 == 0) /\ i1'=5, i3'=1+i3
   5: (-4+i1 == 0 /\ -3+i4-i5 >= 0) /\ i1'=5, i3'=1+i3
  17: (-2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=8, i3'=2+i3
  18: (-2+i1 == 0 /\ -1-i5 >= 0) /\ i1'=8, i3'=2+i3
  19: (2+i4-i5 >= 0 /\ 2-i4+i5 >= 0 /\ -4+i1 == 0) /\ i1'=8, i3'=2+i3
  20: (-5+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=4, i3'=2+i3, i5'=1+i5
  21: (-i4+i5 >= 0 /\ -5+i1 == 0) /\ i1'=4, i3'=2+i3, i4'=1+i4

Dependency graph:
0 -> 3, 0 -> 17, 0 -> 18
3 -> 4, 3 -> 5, 3 -> 19
4 -> 21
5 -> 20
20 -> 5, 20 -> 19
21 -> 4, 21 -> 19

Step with 0

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 18

	Trace

	0[(-1+i1 == 0)]
	18[(-2+i1 == 0 /\ -1-i5 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{18[T]}
	
Step with 3

	Trace

	0[(-1+i1 == 0)]
	3[(-2+i1 == 0 /\ i4 >= 0 /\ i5 >= 0)]
	
	Blocked

	{}
	{18[T]}
	{}
	
Step with 4

	Trace

	0[(-1+i1 == 0)]
	3[(-2+i1 == 0 /\ i4 >= 0 /\ i5 >= 0)]
	4[(-3-i4+i5 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{18[T]}
	{}
	{}
	
Step with 21

	Trace

	0[(-1+i1 == 0)]
	3[(-2+i1 == 0 /\ i4 >= 0 /\ i5 >= 0)]
	4[(-3-i4+i5 >= 0 /\ -4+i1 == 0)]
	21[(-i4+i5 >= 0 /\ -5+i1 == 0)]
	
	Blocked

	{}
	{18[T]}
	{}
	{}
	{}
	
Poly(n^1)

Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -i4+i5 >= 0 /\ -3-i4+i5 >= 0 /\ -4+i1 == 0) /\ i1'=4, i3'=3+i3, i4'=1+i4
		New rule:
		(-i4+i5 >= 0 /\ -3-i4+i5 >= 0 /\ -4+i1 == 0) /\ i1'=4, i3'=3+i3, i4'=1+i4

	Loop Acceleration

	Original rule:
	(-i4+i5 >= 0 /\ -3-i4+i5 >= 0 /\ -4+i1 == 0) /\ i1'=4, i3'=3+i3, i4'=1+i4
	New rule:
	(-i4+i5 >= 0 /\ -1+it21 >= 0 /\ -2-it21-i4+i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0) /\ i1'=i1, i3'=i3+3*it21, i4'=it21+i4

		-i4+i5 >= 0 [0]: monotonic increase yields -i4+i5 >= 0, dependencies: -3-i4+i5 >= 0
		
		-i4+i5 >= 0 [1]: montonic decrease yields 1-it21-i4+i5 >= 0, dependencies: -3-i4+i5 >= 0
		
		-i4+i5 >= 0 [2]: eventual decrease yields (-i4+i5 >= 0 /\ 1-it21-i4+i5 >= 0)
		
		-3-i4+i5 >= 0 [0]: montonic decrease yields -2-it21-i4+i5 >= 0
		
		-4+i1 >= 0 [0]: unchanged
		
		4-i1 >= 0 [0]: unchanged
		
		Replacement map: {-i4+i5 >= 0 -> -i4+i5 >= 0, -3-i4+i5 >= 0 -> -2-it21-i4+i5 >= 0, -4+i1 >= 0 -> -4+i1 >= 0, 4-i1 >= 0 -> 4-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-i4+i5 >= 0 /\ -1+it21 >= 0 /\ -2-it21-i4+i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0) /\ i1'=i1, i3'=i3+3*it21, i4'=it21+i4
	New rule:
	(-i4+i5 >= 0 /\ -1+it21 >= 0 /\ -2-it21-i4+i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0) /\ i3'=i3+3*it21, i4'=it21+i4
	
	Instantiation

	Original rule:
	(-i4+i5 >= 0 /\ -1+it21 >= 0 /\ -2-it21-i4+i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0) /\ i3'=i3+3*it21, i4'=it21+i4
	New rule:
	(0 >= 0 /\ -i4+i5 >= 0 /\ -3-i4+i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0) /\ i3'=-6+i3-3*i4+3*i5, i4'=-2+i5

Start location: evalwisestart

Location map:
LoAT_sink -> 0
evalwisestart -> 1
evalwiseentryin -> 2
evalwisereturnin -> 3
evalwisebb6in -> 4
evalwisebb3in -> 5
evalwisebb4in -> 6
evalwisebb5in -> 7
evalwisestop -> 8

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   3: (-2+i1 == 0 /\ i4 >= 0 /\ i5 >= 0) /\ i1'=4, i3'=1+i3, i4'=i5, i5'=i4
   4: (-3-i4+i5 >= 0 /\ -4+i1 == 0) /\ i1'=5, i3'=1+i3
   5: (-4+i1 == 0 /\ -3+i4-i5 >= 0) /\ i1'=5, i3'=1+i3
  17: (-2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=8, i3'=2+i3
  18: (-2+i1 == 0 /\ -1-i5 >= 0) /\ i1'=8, i3'=2+i3
  19: (2+i4-i5 >= 0 /\ 2-i4+i5 >= 0 /\ -4+i1 == 0) /\ i1'=8, i3'=2+i3
  20: (-5+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=4, i3'=2+i3, i5'=1+i5
  21: (-i4+i5 >= 0 /\ -5+i1 == 0) /\ i1'=4, i3'=2+i3, i4'=1+i4
  22: (0 >= 0 /\ -i4+i5 >= 0 /\ -3-i4+i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0) /\ i3'=-6+i3-3*i4+3*i5, i4'=-2+i5

Dependency graph:
0 -> 3, 0 -> 17, 0 -> 18
3 -> 4, 3 -> 5, 3 -> 19, 3 -> 22
4 -> 21
5 -> 20
20 -> 5, 20 -> 19
21 -> 4, 21 -> 19, 21 -> 22
22 -> 4, 22 -> 19

	Trace

	0[(-1+i1 == 0)]
	3[(-2+i1 == 0 /\ i4 >= 0 /\ i5 >= 0)]
	22[(0 >= 0 /\ -i4+i5 >= 0 /\ -3-i4+i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0)]
	
	Blocked

	{}
	{18[T]}
	{}
	{22[T]}
	
Step with 19

	Trace

	0[(-1+i1 == 0)]
	3[(-2+i1 == 0 /\ i4 >= 0 /\ i5 >= 0)]
	22[(0 >= 0 /\ -i4+i5 >= 0 /\ -3-i4+i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0)]
	19[(2+i4-i5 >= 0 /\ 2-i4+i5 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{18[T]}
	{}
	{22[T]}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	3[(-2+i1 == 0 /\ i4 >= 0 /\ i5 >= 0)]
	22[(0 >= 0 /\ -i4+i5 >= 0 /\ -3-i4+i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0)]
	
	Blocked

	{}
	{18[T]}
	{}
	{19[T], 22[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	3[(-2+i1 == 0 /\ i4 >= 0 /\ i5 >= 0)]
	
	Blocked

	{}
	{18[T]}
	{22[T]}
	
Step with 4

	Trace

	0[(-1+i1 == 0)]
	3[(-2+i1 == 0 /\ i4 >= 0 /\ i5 >= 0)]
	4[(-3-i4+i5 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{18[T]}
	{22[T]}
	{}
	
Step with 21

	Trace

	0[(-1+i1 == 0)]
	3[(-2+i1 == 0 /\ i4 >= 0 /\ i5 >= 0)]
	4[(-3-i4+i5 >= 0 /\ -4+i1 == 0)]
	21[(-i4+i5 >= 0 /\ -5+i1 == 0)]
	
	Blocked

	{}
	{18[T]}
	{22[T]}
	{}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	3[(-2+i1 == 0 /\ i4 >= 0 /\ i5 >= 0)]
	4[(-3-i4+i5 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{18[T]}
	{22[T]}
	{21[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	3[(-2+i1 == 0 /\ i4 >= 0 /\ i5 >= 0)]
	
	Blocked

	{}
	{18[T]}
	{4[T], 22[T]}
	
Step with 5

	Trace

	0[(-1+i1 == 0)]
	3[(-2+i1 == 0 /\ i4 >= 0 /\ i5 >= 0)]
	5[(-4+i1 == 0 /\ -3+i4-i5 >= 0)]
	
	Blocked

	{}
	{18[T]}
	{4[T], 22[T]}
	{}
	
Step with 20

	Trace

	0[(-1+i1 == 0)]
	3[(-2+i1 == 0 /\ i4 >= 0 /\ i5 >= 0)]
	5[(-4+i1 == 0 /\ -3+i4-i5 >= 0)]
	20[(-5+i1 == 0 /\ -1+i4-i5 >= 0)]
	
	Blocked

	{}
	{18[T]}
	{4[T], 22[T]}
	{}
	{}
	
Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -4+i1 == 0 /\ -3+i4-i5 >= 0 /\ -1+i4-i5 >= 0) /\ i1'=4, i3'=3+i3, i5'=1+i5
		New rule:
		(-4+i1 == 0 /\ -3+i4-i5 >= 0 /\ -1+i4-i5 >= 0) /\ i1'=4, i3'=3+i3, i5'=1+i5

	Loop Acceleration

	Original rule:
	(-4+i1 == 0 /\ -3+i4-i5 >= 0 /\ -1+i4-i5 >= 0) /\ i1'=4, i3'=3+i3, i5'=1+i5
	New rule:
	(-1+it54 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+i4-i5 >= 0 /\ -2+i4-i5-it54 >= 0) /\ i1'=i1, i3'=i3+3*it54, i5'=i5+it54

		-4+i1 >= 0 [0]: unchanged
		
		4-i1 >= 0 [0]: unchanged
		
		-3+i4-i5 >= 0 [0]: montonic decrease yields -2+i4-i5-it54 >= 0
		
		-1+i4-i5 >= 0 [0]: monotonic increase yields -1+i4-i5 >= 0, dependencies: -3+i4-i5 >= 0
		
		Replacement map: {-4+i1 >= 0 -> -4+i1 >= 0, 4-i1 >= 0 -> 4-i1 >= 0, -3+i4-i5 >= 0 -> -2+i4-i5-it54 >= 0, -1+i4-i5 >= 0 -> -1+i4-i5 >= 0}

	Removed Trivial Updates

	Original rule:
	(-1+it54 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+i4-i5 >= 0 /\ -2+i4-i5-it54 >= 0) /\ i1'=i1, i3'=i3+3*it54, i5'=i5+it54
	New rule:
	(-1+it54 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+i4-i5 >= 0 /\ -2+i4-i5-it54 >= 0) /\ i3'=i3+3*it54, i5'=i5+it54
	
	Instantiation

	Original rule:
	(-1+it54 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+i4-i5 >= 0 /\ -2+i4-i5-it54 >= 0) /\ i3'=i3+3*it54, i5'=i5+it54
	New rule:
	(0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -3+i4-i5 >= 0 /\ -1+i4-i5 >= 0) /\ i3'=-6+i3+3*i4-3*i5, i5'=-2+i4

Start location: evalwisestart

Location map:
LoAT_sink -> 0
evalwisestart -> 1
evalwiseentryin -> 2
evalwisereturnin -> 3
evalwisebb6in -> 4
evalwisebb3in -> 5
evalwisebb4in -> 6
evalwisebb5in -> 7
evalwisestop -> 8

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   3: (-2+i1 == 0 /\ i4 >= 0 /\ i5 >= 0) /\ i1'=4, i3'=1+i3, i4'=i5, i5'=i4
   4: (-3-i4+i5 >= 0 /\ -4+i1 == 0) /\ i1'=5, i3'=1+i3
   5: (-4+i1 == 0 /\ -3+i4-i5 >= 0) /\ i1'=5, i3'=1+i3
  17: (-2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=8, i3'=2+i3
  18: (-2+i1 == 0 /\ -1-i5 >= 0) /\ i1'=8, i3'=2+i3
  19: (2+i4-i5 >= 0 /\ 2-i4+i5 >= 0 /\ -4+i1 == 0) /\ i1'=8, i3'=2+i3
  20: (-5+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=4, i3'=2+i3, i5'=1+i5
  21: (-i4+i5 >= 0 /\ -5+i1 == 0) /\ i1'=4, i3'=2+i3, i4'=1+i4
  22: (0 >= 0 /\ -i4+i5 >= 0 /\ -3-i4+i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0) /\ i3'=-6+i3-3*i4+3*i5, i4'=-2+i5
  23: (0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -3+i4-i5 >= 0 /\ -1+i4-i5 >= 0) /\ i3'=-6+i3+3*i4-3*i5, i5'=-2+i4

Dependency graph:
0 -> 3, 0 -> 17, 0 -> 18
3 -> 4, 3 -> 5, 3 -> 19, 3 -> 22, 3 -> 23
4 -> 21
5 -> 20
20 -> 5, 20 -> 19, 20 -> 23
21 -> 4, 21 -> 19, 21 -> 22
22 -> 4, 22 -> 19
23 -> 5, 23 -> 19

	Trace

	0[(-1+i1 == 0)]
	3[(-2+i1 == 0 /\ i4 >= 0 /\ i5 >= 0)]
	23[(0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -3+i4-i5 >= 0 /\ -1+i4-i5 >= 0)]
	
	Blocked

	{}
	{18[T]}
	{4[T], 22[T]}
	{23[T]}
	
Step with 19

	Trace

	0[(-1+i1 == 0)]
	3[(-2+i1 == 0 /\ i4 >= 0 /\ i5 >= 0)]
	23[(0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -3+i4-i5 >= 0 /\ -1+i4-i5 >= 0)]
	19[(2+i4-i5 >= 0 /\ 2-i4+i5 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{18[T]}
	{4[T], 22[T]}
	{5[T], 23[T]}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	3[(-2+i1 == 0 /\ i4 >= 0 /\ i5 >= 0)]
	23[(0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -3+i4-i5 >= 0 /\ -1+i4-i5 >= 0)]
	
	Blocked

	{}
	{18[T]}
	{4[T], 22[T]}
	{5[T], 19[T], 23[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	3[(-2+i1 == 0 /\ i4 >= 0 /\ i5 >= 0)]
	
	Blocked

	{}
	{18[T]}
	{4[T], 22[T], 23[T]}
	
Step with 19

	Trace

	0[(-1+i1 == 0)]
	3[(-2+i1 == 0 /\ i4 >= 0 /\ i5 >= 0)]
	19[(2+i4-i5 >= 0 /\ 2-i4+i5 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{18[T]}
	{4[T], 22[T], 23[T]}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	3[(-2+i1 == 0 /\ i4 >= 0 /\ i5 >= 0)]
	
	Blocked

	{}
	{18[T]}
	{4[T], 19[T], 22[T], 23[T]}
	
Step with 5

	Trace

	0[(-1+i1 == 0)]
	3[(-2+i1 == 0 /\ i4 >= 0 /\ i5 >= 0)]
	5[(-4+i1 == 0 /\ -3+i4-i5 >= 0)]
	
	Blocked

	{}
	{18[T]}
	{4[T], 19[T], 22[T], 23[T]}
	{}
	
Step with 20

	Trace

	0[(-1+i1 == 0)]
	3[(-2+i1 == 0 /\ i4 >= 0 /\ i5 >= 0)]
	5[(-4+i1 == 0 /\ -3+i4-i5 >= 0)]
	20[(-5+i1 == 0 /\ -1+i4-i5 >= 0)]
	
	Blocked

	{}
	{18[T]}
	{4[T], 19[T], 22[T], 23[T]}
	{}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	3[(-2+i1 == 0 /\ i4 >= 0 /\ i5 >= 0)]
	5[(-4+i1 == 0 /\ -3+i4-i5 >= 0)]
	
	Blocked

	{}
	{18[T]}
	{4[T], 19[T], 22[T], 23[T]}
	{20[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	3[(-2+i1 == 0 /\ i4 >= 0 /\ i5 >= 0)]
	
	Blocked

	{}
	{18[T]}
	{4[T], 5[T], 19[T], 22[T], 23[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{3[T], 18[T]}
	
Step with 17

	Trace

	0[(-1+i1 == 0)]
	17[(-2+i1 == 0 /\ -1-i4 >= 0)]
	
	Blocked

	{}
	{3[T], 18[T]}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{3[T], 17[T], 18[T]}
	
Backtrack

	Trace

	Blocked

	{0[T]}
	
Accept

Poly(n^1)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁
  Temp_Vars:  
  Locations:  l0, l1, l2, l3, l4, l5, l6, l7
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁) → l6(X₀, X₁)
  t₉: l1(X₀, X₁) → l3(X₀, 1+X₁)
  t₁₀: l2(X₀, X₁) → l3(1+X₀, X₁)
  t₄: l3(X₀, X₁) → l4(X₀, X₁) :|: 3+X₀ ≤ X₁
  t₅: l3(X₀, X₁) → l4(X₀, X₁) :|: 3+X₁ ≤ X₀
  t₆: l3(X₀, X₁) → l5(X₀, X₁) :|: X₁ ≤ 2+X₀ ∧ X₀ ≤ 2+X₁
  t₇: l4(X₀, X₁) → l1(X₀, X₁) :|: 1+X₁ ≤ X₀
  t₈: l4(X₀, X₁) → l2(X₀, X₁) :|: X₀ ≤ X₁
  t₁₁: l5(X₀, X₁) → l7(X₀, X₁)
  t₃: l6(X₀, X₁) → l3(X₁, X₀) :|: 0 ≤ X₀ ∧ 0 ≤ X₁
  t₁: l6(X₀, X₁) → l5(X₀, X₁) :|: 1+X₀ ≤ 0
  t₂: l6(X₀, X₁) → l5(X₀, X₁) :|: 1+X₁ ≤ 0


Preprocessing
  Found invariant 2 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l2


  Found invariant 1+X₁ ≤ X₀ ∧ 0 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 2 ≤ X₀ for location l1


  Found invariant 0 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 0 ≤ X₀ for location l4


  Found invariant 0 ≤ X₁ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₀ for location l3


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁
  Temp_Vars:  
  Locations:  l0, l1, l2, l3, l4, l5, l6, l7
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁) → l6(X₀, X₁)
  t₉: l1(X₀, X₁) → l3(X₀, 1+X₁) :|: 1+X₁ ≤ X₀ ∧ 2 ≤ X₀ ∧ 3 ≤ X₀+X₁ ∧ 0 ≤ X₁
  t₁₀: l2(X₀, X₁) → l3(1+X₀, X₁) :|: 2 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 0 ≤ X₀ ∧ X₀ ≤ X₁
  t₄: l3(X₀, X₁) → l4(X₀, X₁) :|: 3+X₀ ≤ X₁ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₁
  t₅: l3(X₀, X₁) → l4(X₀, X₁) :|: 3+X₁ ≤ X₀ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₁
  t₆: l3(X₀, X₁) → l5(X₀, X₁) :|: X₁ ≤ 2+X₀ ∧ X₀ ≤ 2+X₁ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₁
  t₇: l4(X₀, X₁) → l1(X₀, X₁) :|: 1+X₁ ≤ X₀ ∧ 3 ≤ X₀+X₁ ∧ 0 ≤ X₀ ∧ 0 ≤ X₁
  t₈: l4(X₀, X₁) → l2(X₀, X₁) :|: X₀ ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 0 ≤ X₀ ∧ 0 ≤ X₁
  t₁₁: l5(X₀, X₁) → l7(X₀, X₁)
  t₃: l6(X₀, X₁) → l3(X₁, X₀) :|: 0 ≤ X₀ ∧ 0 ≤ X₁
  t₁: l6(X₀, X₁) → l5(X₀, X₁) :|: 1+X₀ ≤ 0
  t₂: l6(X₀, X₁) → l5(X₀, X₁) :|: 1+X₁ ≤ 0


MPRF for transition t₄: l3(X₀, X₁) → l4(X₀, X₁) :|: 3+X₀ ≤ X₁ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₁ of depth 1:
  new bound:
    X₀+X₁+2 {O(n)}

  MPRF:
    • l2: [X₁-3-X₀]
    • l3: [X₁-2-X₀]
    • l4: [X₁-3-X₀]




MPRF for transition t₅: l3(X₀, X₁) → l4(X₀, X₁) :|: 3+X₁ ≤ X₀ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₁ of depth 1:
  new bound:
    X₀+X₁+2 {O(n)}

  MPRF:
    • l1: [X₀-3-X₁]
    • l3: [X₀-2-X₁]
    • l4: [X₀-3-X₁]




MPRF for transition t₇: l4(X₀, X₁) → l1(X₀, X₁) :|: 1+X₁ ≤ X₀ ∧ 3 ≤ X₀+X₁ ∧ 0 ≤ X₀ ∧ 0 ≤ X₁ of depth 1:
  new bound:
    X₀+X₁ {O(n)}

  MPRF:
    • l1: [X₀-1-X₁]
    • l3: [X₀-X₁]
    • l4: [X₀-X₁]




MPRF for transition t₈: l4(X₀, X₁) → l2(X₀, X₁) :|: X₀ ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 0 ≤ X₀ ∧ 0 ≤ X₁ of depth 1:
  new bound:
    X₀+X₁+1 {O(n)}

  MPRF:
    • l2: [X₁-X₀]
    • l3: [1+X₁-X₀]
    • l4: [1+X₁-X₀]




MPRF for transition t₉: l1(X₀, X₁) → l3(X₀, 1+X₁) :|: 1+X₁ ≤ X₀ ∧ 2 ≤ X₀ ∧ 3 ≤ X₀+X₁ ∧ 0 ≤ X₁ of depth 1:
  new bound:
    X₀+X₁+1 {O(n)}

  MPRF:
    • l1: [1+X₀-X₁]
    • l3: [1+X₀-X₁]
    • l4: [1+X₀-X₁]




MPRF for transition t₁₀: l2(X₀, X₁) → l3(1+X₀, X₁) :|: 2 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 0 ≤ X₀ ∧ X₀ ≤ X₁ of depth 1:
  new bound:
    X₀+X₁+4 {O(n)}

  MPRF:
    • l2: [4+X₁-X₀]
    • l3: [4+X₁-X₀]
    • l4: [4+X₁-X₀]




All Bounds
Timebounds
  Overall timebound:6⋅X₀+6⋅X₁+16 {O(n)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: X₀+X₁+2 {O(n)}
    t₅: X₀+X₁+2 {O(n)}
    t₆: 1 {O(1)}
    t₇: X₀+X₁ {O(n)}
    t₈: X₀+X₁+1 {O(n)}
    t₉: X₀+X₁+1 {O(n)}
    t₁₀: X₀+X₁+4 {O(n)}
    t₁₁: 1 {O(1)}


Costbounds
  Overall costbound: 6⋅X₀+6⋅X₁+16 {O(n)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: X₀+X₁+2 {O(n)}
    t₅: X₀+X₁+2 {O(n)}
    t₆: 1 {O(1)}
    t₇: X₀+X₁ {O(n)}
    t₈: X₀+X₁+1 {O(n)}
    t₉: X₀+X₁+1 {O(n)}
    t₁₀: X₀+X₁+4 {O(n)}
    t₁₁: 1 {O(1)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₁, X₀: X₀ {O(n)}
    t₁, X₁: X₁ {O(n)}
    t₂, X₀: X₀ {O(n)}
    t₂, X₁: X₁ {O(n)}
    t₃, X₀: X₁ {O(n)}
    t₃, X₁: X₀ {O(n)}
    t₄, X₀: 2⋅X₁+X₀+4 {O(n)}
    t₄, X₁: X₀ {O(n)}
    t₅, X₀: X₁ {O(n)}
    t₅, X₁: 2⋅X₀+X₁+1 {O(n)}
    t₆, X₀: 4⋅X₁+X₀+4 {O(n)}
    t₆, X₁: 4⋅X₀+X₁+1 {O(n)}
    t₇, X₀: X₁ {O(n)}
    t₇, X₁: 2⋅X₀+X₁+1 {O(n)}
    t₈, X₀: 2⋅X₁+X₀+4 {O(n)}
    t₈, X₁: X₀ {O(n)}
    t₉, X₀: X₁ {O(n)}
    t₉, X₁: 2⋅X₀+X₁+1 {O(n)}
    t₁₀, X₀: 2⋅X₁+X₀+4 {O(n)}
    t₁₀, X₁: X₀ {O(n)}
    t₁₁, X₀: 3⋅X₀+4⋅X₁+4 {O(n)}
    t₁₁, X₁: 3⋅X₁+4⋅X₀+1 {O(n)}

