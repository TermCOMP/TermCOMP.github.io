WORST_CASE(Omega(n^1),O(n^1))

# LoAT Proof:
WORST_CASE(Omega(n^1),?)

WORST_CASE(Omega(n^1),?)
Initial ITS

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f6 -> 2
f15 -> 3
f19 -> 4

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=0, i5'=0
   1: (-1+i6-i5 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i5'=1+i5
   2: (-1+i6-i5 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=2+i4, i5'=1+i5
   3: (-3+i1 == 0 /\ -1-i6+i4 == 0) /\ i1'=4, i3'=1+i3, i4'=1+i6, i7'=1
   4: (-3+i1 == 0 /\ i6-i4 >= 0) /\ i1'=4, i3'=1+i3, i7'=0
   5: (-3+i1 == 0 /\ -2-i6+i4 >= 0) /\ i1'=4, i3'=1+i3, i7'=0
   6: (-2+i1 == 0 /\ -1+i6-i4 >= 0 /\ -i6+i5 >= 0) /\ i1'=3, i3'=1+i3
   7: (-2+i1 == 0 /\ -i6+i5 >= 0 /\ -1-i6+i4 >= 0) /\ i1'=3, i3'=1+i3
   8: (-i6+i4 == 0 /\ -2+i1 == 0 /\ -i6+i5 >= 0) /\ i1'=4, i3'=1+i3, i6'=i4, i7'=1

Dependency graph:
0 -> 1, 0 -> 2, 0 -> 6, 0 -> 7, 0 -> 8
1 -> 1, 1 -> 2, 1 -> 6, 1 -> 7, 1 -> 8
2 -> 1, 2 -> 2, 2 -> 6, 2 -> 7, 2 -> 8
6 -> 3, 6 -> 4, 6 -> 5
7 -> 3, 7 -> 4, 7 -> 5

Refined Dependency Graph

	Removed the following edges: 0 -> 6, 6 -> 3, 6 -> 5, 7 -> 4

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f6 -> 2
f15 -> 3
f19 -> 4

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=0, i5'=0
   1: (-1+i6-i5 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i5'=1+i5
   2: (-1+i6-i5 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=2+i4, i5'=1+i5
   3: (-3+i1 == 0 /\ -1-i6+i4 == 0) /\ i1'=4, i3'=1+i3, i4'=1+i6, i7'=1
   4: (-3+i1 == 0 /\ i6-i4 >= 0) /\ i1'=4, i3'=1+i3, i7'=0
   5: (-3+i1 == 0 /\ -2-i6+i4 >= 0) /\ i1'=4, i3'=1+i3, i7'=0
   6: (-2+i1 == 0 /\ -1+i6-i4 >= 0 /\ -i6+i5 >= 0) /\ i1'=3, i3'=1+i3
   7: (-2+i1 == 0 /\ -i6+i5 >= 0 /\ -1-i6+i4 >= 0) /\ i1'=3, i3'=1+i3
   8: (-i6+i4 == 0 /\ -2+i1 == 0 /\ -i6+i5 >= 0) /\ i1'=4, i3'=1+i3, i6'=i4, i7'=1

Dependency graph:
0 -> 1, 0 -> 2, 0 -> 7, 0 -> 8
1 -> 1, 1 -> 2, 1 -> 6, 1 -> 7, 1 -> 8
2 -> 1, 2 -> 2, 2 -> 6, 2 -> 7, 2 -> 8
6 -> 4
7 -> 3, 7 -> 5

Step with 0

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 7

	Trace

	0[(-1+i1 == 0)]
	7[(-2+i1 == 0 /\ -i6+i5 >= 0 /\ -1-i6+i4 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Step with 3

	Trace

	0[(-1+i1 == 0)]
	7[(-2+i1 == 0 /\ -i6+i5 >= 0 /\ -1-i6+i4 >= 0)]
	3[(-3+i1 == 0 /\ -1-i6+i4 == 0)]
	
	Blocked

	{}
	{}
	{}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	7[(-2+i1 == 0 /\ -i6+i5 >= 0 /\ -1-i6+i4 >= 0)]
	
	Blocked

	{}
	{}
	{3[T]}
	
Step with 5

	Trace

	0[(-1+i1 == 0)]
	7[(-2+i1 == 0 /\ -i6+i5 >= 0 /\ -1-i6+i4 >= 0)]
	5[(-3+i1 == 0 /\ -2-i6+i4 >= 0)]
	
	Blocked

	{}
	{}
	{3[T]}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	7[(-2+i1 == 0 /\ -i6+i5 >= 0 /\ -1-i6+i4 >= 0)]
	
	Blocked

	{}
	{}
	{3[T], 5[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{7[T]}
	
Step with 8

	Trace

	0[(-1+i1 == 0)]
	8[(-i6+i4 == 0 /\ -2+i1 == 0 /\ -i6+i5 >= 0)]
	
	Blocked

	{}
	{7[T]}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{7[T], 8[T]}
	
Step with 2

	Trace

	0[(-1+i1 == 0)]
	2[(-1+i6-i5 >= 0 /\ -2+i1 == 0)]
	
	Blocked

	{}
	{7[T], 8[T]}
	{}
	
Poly(n^1)

Accelerate

	Loop Acceleration

	Original rule:
	(-1+i6-i5 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=2+i4, i5'=1+i5
	New rule:
	(-2+i1 >= 0 /\ -1+it37 >= 0 /\ i6-i5-it37 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it37, i4'=i4+2*it37, i5'=i5+it37

		-1+i6-i5 >= 0 [0]: montonic decrease yields i6-i5-it37 >= 0
		
		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-1+i6-i5 >= 0 -> i6-i5-it37 >= 0, -2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-2+i1 >= 0 /\ -1+it37 >= 0 /\ i6-i5-it37 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it37, i4'=i4+2*it37, i5'=i5+it37
	New rule:
	(-2+i1 >= 0 /\ -1+it37 >= 0 /\ i6-i5-it37 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+it37, i4'=i4+2*it37, i5'=i5+it37
	
	Instantiation

	Original rule:
	(-2+i1 >= 0 /\ -1+it37 >= 0 /\ i6-i5-it37 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+it37, i4'=i4+2*it37, i5'=i5+it37
	New rule:
	(0 >= 0 /\ -1+i6-i5 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0) /\ i3'=i6+i3-i5, i4'=2*i6+i4-2*i5, i5'=i6

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f6 -> 2
f15 -> 3
f19 -> 4

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=0, i5'=0
   1: (-1+i6-i5 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i5'=1+i5
   2: (-1+i6-i5 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=2+i4, i5'=1+i5
   3: (-3+i1 == 0 /\ -1-i6+i4 == 0) /\ i1'=4, i3'=1+i3, i4'=1+i6, i7'=1
   4: (-3+i1 == 0 /\ i6-i4 >= 0) /\ i1'=4, i3'=1+i3, i7'=0
   5: (-3+i1 == 0 /\ -2-i6+i4 >= 0) /\ i1'=4, i3'=1+i3, i7'=0
   6: (-2+i1 == 0 /\ -1+i6-i4 >= 0 /\ -i6+i5 >= 0) /\ i1'=3, i3'=1+i3
   7: (-2+i1 == 0 /\ -i6+i5 >= 0 /\ -1-i6+i4 >= 0) /\ i1'=3, i3'=1+i3
   8: (-i6+i4 == 0 /\ -2+i1 == 0 /\ -i6+i5 >= 0) /\ i1'=4, i3'=1+i3, i6'=i4, i7'=1
   9: (0 >= 0 /\ -1+i6-i5 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0) /\ i3'=i6+i3-i5, i4'=2*i6+i4-2*i5, i5'=i6

Dependency graph:
0 -> 1, 0 -> 2, 0 -> 7, 0 -> 8, 0 -> 9
1 -> 1, 1 -> 2, 1 -> 6, 1 -> 7, 1 -> 8, 1 -> 9
2 -> 1, 2 -> 2, 2 -> 6, 2 -> 7, 2 -> 8, 2 -> 9
6 -> 4
7 -> 3, 7 -> 5
9 -> 1, 9 -> 2, 9 -> 6, 9 -> 7, 9 -> 8

	Trace

	0[(-1+i1 == 0)]
	9[(0 >= 0 /\ -1+i6-i5 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{7[T], 8[T]}
	{2[T], 9[T]}
	
Step with 7

	Trace

	0[(-1+i1 == 0)]
	9[(0 >= 0 /\ -1+i6-i5 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	7[(-2+i1 == 0 /\ -i6+i5 >= 0 /\ -1-i6+i4 >= 0)]
	
	Blocked

	{}
	{7[T], 8[T]}
	{1[T], 2[T], 9[T]}
	{}
	
Step with 3

	Trace

	0[(-1+i1 == 0)]
	9[(0 >= 0 /\ -1+i6-i5 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	7[(-2+i1 == 0 /\ -i6+i5 >= 0 /\ -1-i6+i4 >= 0)]
	3[(-3+i1 == 0 /\ -1-i6+i4 == 0)]
	
	Blocked

	{}
	{7[T], 8[T]}
	{1[T], 2[T], 9[T]}
	{}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	9[(0 >= 0 /\ -1+i6-i5 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	7[(-2+i1 == 0 /\ -i6+i5 >= 0 /\ -1-i6+i4 >= 0)]
	
	Blocked

	{}
	{7[T], 8[T]}
	{1[T], 2[T], 9[T]}
	{3[T]}
	
Step with 5

	Trace

	0[(-1+i1 == 0)]
	9[(0 >= 0 /\ -1+i6-i5 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	7[(-2+i1 == 0 /\ -i6+i5 >= 0 /\ -1-i6+i4 >= 0)]
	5[(-3+i1 == 0 /\ -2-i6+i4 >= 0)]
	
	Blocked

	{}
	{7[T], 8[T]}
	{1[T], 2[T], 9[T]}
	{3[T]}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	9[(0 >= 0 /\ -1+i6-i5 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	7[(-2+i1 == 0 /\ -i6+i5 >= 0 /\ -1-i6+i4 >= 0)]
	
	Blocked

	{}
	{7[T], 8[T]}
	{1[T], 2[T], 9[T]}
	{3[T], 5[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	9[(0 >= 0 /\ -1+i6-i5 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{7[T], 8[T]}
	{1[T], 2[T], 7[T], 9[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{7[T], 8[T], 9[T]}
	
Step with 2

	Trace

	0[(-1+i1 == 0)]
	2[(-1+i6-i5 >= 0 /\ -2+i1 == 0)]
	
	Blocked

	{}
	{7[T], 8[T], 9[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{2[T], 7[T], 8[T], 9[T]}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	1[(-1+i6-i5 >= 0 /\ -2+i1 == 0)]
	
	Blocked

	{}
	{2[T], 7[T], 8[T], 9[T]}
	{}
	
Accelerate

	Loop Acceleration

	Original rule:
	(-1+i6-i5 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i5'=1+i5
	New rule:
	(-2+i1 >= 0 /\ -it80+i6-i5 >= 0 /\ 2-i1 >= 0 /\ -1+it80 >= 0) /\ i1'=i1, i3'=it80+i3, i5'=it80+i5

		-1+i6-i5 >= 0 [0]: montonic decrease yields -it80+i6-i5 >= 0
		
		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-1+i6-i5 >= 0 -> -it80+i6-i5 >= 0, -2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-2+i1 >= 0 /\ -it80+i6-i5 >= 0 /\ 2-i1 >= 0 /\ -1+it80 >= 0) /\ i1'=i1, i3'=it80+i3, i5'=it80+i5
	New rule:
	(-2+i1 >= 0 /\ -it80+i6-i5 >= 0 /\ 2-i1 >= 0 /\ -1+it80 >= 0) /\ i3'=it80+i3, i5'=it80+i5
	
	Instantiation

	Original rule:
	(-2+i1 >= 0 /\ -it80+i6-i5 >= 0 /\ 2-i1 >= 0 /\ -1+it80 >= 0) /\ i3'=it80+i3, i5'=it80+i5
	New rule:
	(0 >= 0 /\ -1+i6-i5 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0) /\ i3'=i6+i3-i5, i5'=i6

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f6 -> 2
f15 -> 3
f19 -> 4

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=0, i5'=0
   1: (-1+i6-i5 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i5'=1+i5
   2: (-1+i6-i5 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=2+i4, i5'=1+i5
   3: (-3+i1 == 0 /\ -1-i6+i4 == 0) /\ i1'=4, i3'=1+i3, i4'=1+i6, i7'=1
   4: (-3+i1 == 0 /\ i6-i4 >= 0) /\ i1'=4, i3'=1+i3, i7'=0
   5: (-3+i1 == 0 /\ -2-i6+i4 >= 0) /\ i1'=4, i3'=1+i3, i7'=0
   6: (-2+i1 == 0 /\ -1+i6-i4 >= 0 /\ -i6+i5 >= 0) /\ i1'=3, i3'=1+i3
   7: (-2+i1 == 0 /\ -i6+i5 >= 0 /\ -1-i6+i4 >= 0) /\ i1'=3, i3'=1+i3
   8: (-i6+i4 == 0 /\ -2+i1 == 0 /\ -i6+i5 >= 0) /\ i1'=4, i3'=1+i3, i6'=i4, i7'=1
   9: (0 >= 0 /\ -1+i6-i5 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0) /\ i3'=i6+i3-i5, i4'=2*i6+i4-2*i5, i5'=i6
  10: (0 >= 0 /\ -1+i6-i5 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0) /\ i3'=i6+i3-i5, i5'=i6

Dependency graph:
0 -> 1, 0 -> 2, 0 -> 7, 0 -> 8, 0 -> 9, 0 -> 10
1 -> 1, 1 -> 2, 1 -> 6, 1 -> 7, 1 -> 8, 1 -> 9, 1 -> 10
2 -> 1, 2 -> 2, 2 -> 6, 2 -> 7, 2 -> 8, 2 -> 9, 2 -> 10
6 -> 4
7 -> 3, 7 -> 5
9 -> 1, 9 -> 2, 9 -> 6, 9 -> 7, 9 -> 8, 9 -> 10
10 -> 1, 10 -> 2, 10 -> 6, 10 -> 7, 10 -> 8, 10 -> 9

	Trace

	0[(-1+i1 == 0)]
	10[(0 >= 0 /\ -1+i6-i5 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{2[T], 7[T], 8[T], 9[T]}
	{1[T], 10[T]}
	
Step with 6

	Trace

	0[(-1+i1 == 0)]
	10[(0 >= 0 /\ -1+i6-i5 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	6[(-2+i1 == 0 /\ -1+i6-i4 >= 0 /\ -i6+i5 >= 0)]
	
	Blocked

	{}
	{2[T], 7[T], 8[T], 9[T]}
	{1[T], 2[T], 7[T], 8[T], 10[T]}
	{}
	
Step with 4

	Trace

	0[(-1+i1 == 0)]
	10[(0 >= 0 /\ -1+i6-i5 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	6[(-2+i1 == 0 /\ -1+i6-i4 >= 0 /\ -i6+i5 >= 0)]
	4[(-3+i1 == 0 /\ i6-i4 >= 0)]
	
	Blocked

	{}
	{2[T], 7[T], 8[T], 9[T]}
	{1[T], 2[T], 7[T], 8[T], 10[T]}
	{}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	10[(0 >= 0 /\ -1+i6-i5 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	6[(-2+i1 == 0 /\ -1+i6-i4 >= 0 /\ -i6+i5 >= 0)]
	
	Blocked

	{}
	{2[T], 7[T], 8[T], 9[T]}
	{1[T], 2[T], 7[T], 8[T], 10[T]}
	{4[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	10[(0 >= 0 /\ -1+i6-i5 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{2[T], 7[T], 8[T], 9[T]}
	{1[T], 2[T], 6[T], 7[T], 8[T], 10[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{2[T], 7[T], 8[T], 9[T], 10[T]}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	1[(-1+i6-i5 >= 0 /\ -2+i1 == 0)]
	
	Blocked

	{}
	{2[T], 7[T], 8[T], 9[T], 10[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{1[T], 2[T], 7[T], 8[T], 9[T], 10[T]}
	
Backtrack

	Trace

	Blocked

	{0[T]}
	
Accept

Poly(n^1)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃
  Temp_Vars:  
  Locations:  l0, l1, l2, l3
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃) → l1(0, 0, X₂, X₃)
  t₁: l1(X₀, X₁, X₂, X₃) → l1(X₀, 1+X₁, X₂, X₃) :|: 1+X₁ ≤ X₂
  t₂: l1(X₀, X₁, X₂, X₃) → l1(2+X₀, 1+X₁, X₂, X₃) :|: 1+X₁ ≤ X₂
  t₈: l1(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₀, 1) :|: X₂ ≤ X₀ ∧ X₀ ≤ X₂ ∧ X₂ ≤ X₁
  t₆: l1(X₀, X₁, X₂, X₃) → l3(X₀, X₁, X₂, X₃) :|: 1+X₀ ≤ X₂ ∧ X₂ ≤ X₁
  t₇: l1(X₀, X₁, X₂, X₃) → l3(X₀, X₁, X₂, X₃) :|: 1+X₂ ≤ X₀ ∧ X₂ ≤ X₁
  t₃: l3(X₀, X₁, X₂, X₃) → l2(1+X₂, X₁, X₂, 1) :|: X₀ ≤ 1+X₂ ∧ 1+X₂ ≤ X₀
  t₄: l3(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, 0) :|: X₀ ≤ X₂
  t₅: l3(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, 0) :|: 2+X₂ ≤ X₀


Preprocessing
  Eliminate variables [X₃] that do not contribute to the problem


  Found invariant 0 ≤ X₁ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₀ for location l1


  Found invariant X₂ ≤ X₁ ∧ 0 ≤ X₁ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₀ for location l2


  Found invariant X₂ ≤ X₁ ∧ 0 ≤ X₁ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₀ for location l3


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  
  Locations:  l0, l1, l2, l3
  Return Locations:  
  Transitions:
  t₉: l0(X₀, X₁, X₂) → l1(0, 0, X₂)
  t₁₀: l1(X₀, X₁, X₂) → l1(X₀, 1+X₁, X₂) :|: 1+X₁ ≤ X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₁
  t₁₁: l1(X₀, X₁, X₂) → l1(2+X₀, 1+X₁, X₂) :|: 1+X₁ ≤ X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₁
  t₁₂: l1(X₀, X₁, X₂) → l2(X₀, X₁, X₀) :|: X₂ ≤ X₀ ∧ X₀ ≤ X₂ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₁
  t₁₃: l1(X₀, X₁, X₂) → l3(X₀, X₁, X₂) :|: 1+X₀ ≤ X₂ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₁
  t₁₄: l1(X₀, X₁, X₂) → l3(X₀, X₁, X₂) :|: 1+X₂ ≤ X₀ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₁
  t₁₅: l3(X₀, X₁, X₂) → l2(1+X₂, X₁, X₂) :|: X₀ ≤ 1+X₂ ∧ 1+X₂ ≤ X₀ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₁ ∧ X₂ ≤ X₁
  t₁₆: l3(X₀, X₁, X₂) → l2(X₀, X₁, X₂) :|: X₀ ≤ X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₁ ∧ X₂ ≤ X₁
  t₁₇: l3(X₀, X₁, X₂) → l2(X₀, X₁, X₂) :|: 2+X₂ ≤ X₀ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₁ ∧ X₂ ≤ X₁


MPRF for transition t₁₀: l1(X₀, X₁, X₂) → l1(X₀, 1+X₁, X₂) :|: 1+X₁ ≤ X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₁ of depth 1:
  new bound:
    X₂ {O(n)}

  MPRF:
    • l1: [X₂-X₁]




MPRF for transition t₁₁: l1(X₀, X₁, X₂) → l1(2+X₀, 1+X₁, X₂) :|: 1+X₁ ≤ X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₁ of depth 1:
  new bound:
    X₂ {O(n)}

  MPRF:
    • l1: [X₂-X₁]




All Bounds
Timebounds
  Overall timebound:2⋅X₂+7 {O(n)}
    t₉: 1 {O(1)}
    t₁₀: X₂ {O(n)}
    t₁₁: X₂ {O(n)}
    t₁₂: 1 {O(1)}
    t₁₃: 1 {O(1)}
    t₁₄: 1 {O(1)}
    t₁₅: 1 {O(1)}
    t₁₆: 1 {O(1)}
    t₁₇: 1 {O(1)}


Costbounds
  Overall costbound: 2⋅X₂+7 {O(n)}
    t₉: 1 {O(1)}
    t₁₀: X₂ {O(n)}
    t₁₁: X₂ {O(n)}
    t₁₂: 1 {O(1)}
    t₁₃: 1 {O(1)}
    t₁₄: 1 {O(1)}
    t₁₅: 1 {O(1)}
    t₁₆: 1 {O(1)}
    t₁₇: 1 {O(1)}


Sizebounds
    t₉, X₀: 0 {O(1)}
    t₉, X₁: 0 {O(1)}
    t₉, X₂: X₂ {O(n)}
    t₁₀, X₀: 2⋅X₂ {O(n)}
    t₁₀, X₁: 2⋅X₂ {O(n)}
    t₁₀, X₂: X₂ {O(n)}
    t₁₁, X₀: 2⋅X₂ {O(n)}
    t₁₁, X₁: 2⋅X₂ {O(n)}
    t₁₁, X₂: X₂ {O(n)}
    t₁₂, X₀: 4⋅X₂ {O(n)}
    t₁₂, X₁: 4⋅X₂ {O(n)}
    t₁₂, X₂: 4⋅X₂ {O(n)}
    t₁₃, X₀: 4⋅X₂ {O(n)}
    t₁₃, X₁: 4⋅X₂ {O(n)}
    t₁₃, X₂: 2⋅X₂ {O(n)}
    t₁₄, X₀: 4⋅X₂ {O(n)}
    t₁₄, X₁: 4⋅X₂ {O(n)}
    t₁₄, X₂: 3⋅X₂ {O(n)}
    t₁₅, X₀: 4⋅X₂ {O(n)}
    t₁₅, X₁: 4⋅X₂ {O(n)}
    t₁₅, X₂: 3⋅X₂ {O(n)}
    t₁₆, X₀: 4⋅X₂ {O(n)}
    t₁₆, X₁: 4⋅X₂ {O(n)}
    t₁₆, X₂: 2⋅X₂ {O(n)}
    t₁₇, X₀: 4⋅X₂ {O(n)}
    t₁₇, X₁: 4⋅X₂ {O(n)}
    t₁₇, X₂: 3⋅X₂ {O(n)}

