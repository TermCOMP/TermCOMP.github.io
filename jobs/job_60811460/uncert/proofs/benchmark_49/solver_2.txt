WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [evalaaron2bb3in/6,evalaaron2bb4in/6,evalaaron2bb5in/6,evalaaron2bb6in/6]
1. non_recursive  : [evalaaron2stop/4]
2. non_recursive  : [evalaaron2returnin/4]
3. non_recursive  : [exit_location/1]
4. non_recursive  : [evalaaron2bb6in_loop_cont/5]
5. non_recursive  : [evalaaron2entryin/4]
6. non_recursive  : [evalaaron2start/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into evalaaron2bb6in/6
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into evalaaron2bb6in_loop_cont/5
5. SCC is partially evaluated into evalaaron2entryin/4
6. SCC is partially evaluated into evalaaron2start/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations evalaaron2bb6in/6 
* CE 8 is refined into CE [11] 
* CE 6 is refined into CE [12] 
* CE 7 is discarded (unfeasible) 
* CE 5 is refined into CE [13] 
* CE 4 is refined into CE [14] 


### Cost equations --> "Loop" of evalaaron2bb6in/6 
* CEs [13] --> Loop 11 
* CEs [14] --> Loop 12 
* CEs [11] --> Loop 13 
* CEs [12] --> Loop 14 

### Ranking functions of CR evalaaron2bb6in(A,B,C,E,F,G) 
* RF of phase [11,12]: [-B+C+1]

#### Partial ranking functions of CR evalaaron2bb6in(A,B,C,E,F,G) 
* Partial RF of phase [11,12]:
  - RF of loop [11:1,12:1]:
    -B+C+1


### Specialization of cost equations evalaaron2bb6in_loop_cont/5 
* CE 10 is refined into CE [15] 
* CE 9 is refined into CE [16] 


### Cost equations --> "Loop" of evalaaron2bb6in_loop_cont/5 
* CEs [15] --> Loop 15 
* CEs [16] --> Loop 16 

### Ranking functions of CR evalaaron2bb6in_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR evalaaron2bb6in_loop_cont(A,B,C,D,E) 


### Specialization of cost equations evalaaron2entryin/4 
* CE 3 is refined into CE [17,18,19,20] 
* CE 2 is refined into CE [21] 


### Cost equations --> "Loop" of evalaaron2entryin/4 
* CEs [18,20] --> Loop 17 
* CEs [17] --> Loop 18 
* CEs [19] --> Loop 19 
* CEs [21] --> Loop 20 

### Ranking functions of CR evalaaron2entryin(A,B,C,E) 

#### Partial ranking functions of CR evalaaron2entryin(A,B,C,E) 


### Specialization of cost equations evalaaron2start/4 
* CE 1 is refined into CE [22,23,24,25] 


### Cost equations --> "Loop" of evalaaron2start/4 
* CEs [25] --> Loop 21 
* CEs [24] --> Loop 22 
* CEs [23] --> Loop 23 
* CEs [22] --> Loop 24 

### Ranking functions of CR evalaaron2start(A,B,C,E) 

#### Partial ranking functions of CR evalaaron2start(A,B,C,E) 


Computing Bounds
=====================================

#### Cost of chains of evalaaron2bb6in(A,B,C,E,F,G):
* Chain [[11,12],14]: 2*it(11)+0
  Such that:aux(1) =< -B+C+1
aux(2) =< -B+C+F-G
it(11) =< aux(1)
it(11) =< aux(2)

  with precondition: [E=2,F>=B,C>=G,F>=G+1,A+G+1>=F,C+F>=A+B+G+1] 

* Chain [[11,12],13]: 2*it(11)+0
  Such that:aux(2) =< A-B+C+1
aux(1) =< -B+C+1
it(11) =< aux(1)
it(11) =< aux(2)

  with precondition: [E=3,A>=0,C>=B] 

* Chain [14]: 0
  with precondition: [E=2,B=F,C=G,A>=0,B>=C+1] 

* Chain [13]: 0
  with precondition: [E=3,A>=0] 


#### Cost of chains of evalaaron2bb6in_loop_cont(A,B,C,D,E):
* Chain [16]: 0
  with precondition: [A=2,B>=0] 

* Chain [15]: 0
  with precondition: [A=3,B>=0] 


#### Cost of chains of evalaaron2entryin(A,B,C,E):
* Chain [20]: 0
  with precondition: [0>=A+1] 

* Chain [19]: 0
  with precondition: [A>=0] 

* Chain [18]: 0
  with precondition: [A>=0,C>=B+1] 

* Chain [17]: 4*s(3)+0
  Such that:aux(3) =< A+B-C+1
aux(4) =< B-C+1
s(3) =< aux(4)
s(3) =< aux(3)

  with precondition: [A>=0,B>=C] 


#### Cost of chains of evalaaron2start(A,B,C,E):
* Chain [24]: 0
  with precondition: [0>=A+1] 

* Chain [23]: 0
  with precondition: [A>=0] 

* Chain [22]: 0
  with precondition: [A>=0,C>=B+1] 

* Chain [21]: 4*s(9)+0
  Such that:s(7) =< A+B-C+1
s(8) =< B-C+1
s(9) =< s(8)
s(9) =< s(7)

  with precondition: [A>=0,B>=C] 


Closed-form bounds of evalaaron2start(A,B,C,E): 
-------------------------------------
* Chain [24] with precondition: [0>=A+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [23] with precondition: [A>=0] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [22] with precondition: [A>=0,C>=B+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [21] with precondition: [A>=0,B>=C] 
    - Upper bound: 4*B-4*C+4 
    - Complexity: n 

### Maximum cost of evalaaron2start(A,B,C,E): nat(B-C+1)*4 
Asymptotic class: n 
* Total analysis performed in 58 ms.

