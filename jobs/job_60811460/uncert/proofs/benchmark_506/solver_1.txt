WORST_CASE(Omega(n^1),O(n^1))

# LoAT Proof:
WORST_CASE(Omega(n^1),?)

WORST_CASE(Omega(n^1),?)
Initial ITS

Start location: f3

Location map:
LoAT_sink -> 0
f3 -> 1
f2 -> 2
f4 -> 3

Rules:
   0: (-1+i4 >= 0 /\ -2+i1 == 0 /\ -1+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i5'=-1+i5, i6'=i4, i7'=i5, i8'=-2+i4
   1: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   2: (-2+i1 == 0 /\ -it4 >= 0 /\ -i5 >= 0) /\ i1'=3, i3'=1+i3, i5'=it4, i9'=it3
   3: (-2+i1 == 0 /\ -1+i5 >= 0 /\ -i4 >= 0) /\ i1'=3, i3'=1+i3, i9'=it5

Dependency graph:
0 -> 0, 0 -> 2, 0 -> 3
1 -> 0, 1 -> 2, 1 -> 3

Step with 1

	Trace

	1[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 3

	Trace

	1[(-1+i1 == 0)]
	3[(-2+i1 == 0 /\ -1+i5 >= 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Backtrack

	Trace

	1[(-1+i1 == 0)]
	
	Blocked

	{}
	{3[T]}
	
Step with 0

	Trace

	1[(-1+i1 == 0)]
	0[(-1+i4 >= 0 /\ -2+i1 == 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{3[T]}
	{}
	
Poly(n^1)

Accelerate

	Loop Acceleration

	Original rule:
	(-1+i4 >= 0 /\ -2+i1 == 0 /\ -1+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i5'=-1+i5, i6'=i4, i7'=i5, i8'=-2+i4
	New rule:
	(i4-it31 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ -it31+i5 >= 0 /\ 2-i1 >= 0 /\ -1+it31 >= 0) /\ i1'=i1, i3'=i3+it31, i4'=i4-it31, i5'=-it31+i5, i6'=1+i4-it31, i7'=1-it31+i5, i8'=-1+i4-it31

		-1+i4 >= 0 [0]: montonic decrease yields (i4-it31 >= 0 /\ -1+i4 >= 0)
		
		-2+i1 >= 0 [0]: unchanged
		
		-1+i5 >= 0 [0]: montonic decrease yields (-1+i5 >= 0 /\ -it31+i5 >= 0)
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-1+i4 >= 0 -> (i4-it31 >= 0 /\ -1+i4 >= 0), -2+i1 >= 0 -> -2+i1 >= 0, -1+i5 >= 0 -> (-1+i5 >= 0 /\ -it31+i5 >= 0), 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(i4-it31 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ -it31+i5 >= 0 /\ 2-i1 >= 0 /\ -1+it31 >= 0) /\ i1'=i1, i3'=i3+it31, i4'=i4-it31, i5'=-it31+i5, i6'=1+i4-it31, i7'=1-it31+i5, i8'=-1+i4-it31
	New rule:
	(i4-it31 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ -it31+i5 >= 0 /\ 2-i1 >= 0 /\ -1+it31 >= 0) /\ i3'=i3+it31, i4'=i4-it31, i5'=-it31+i5, i6'=1+i4-it31, i7'=1-it31+i5, i8'=-1+i4-it31

Start location: f3

Location map:
LoAT_sink -> 0
f3 -> 1
f2 -> 2
f4 -> 3

Rules:
   0: (-1+i4 >= 0 /\ -2+i1 == 0 /\ -1+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i5'=-1+i5, i6'=i4, i7'=i5, i8'=-2+i4
   1: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   2: (-2+i1 == 0 /\ -it4 >= 0 /\ -i5 >= 0) /\ i1'=3, i3'=1+i3, i5'=it4, i9'=it3
   3: (-2+i1 == 0 /\ -1+i5 >= 0 /\ -i4 >= 0) /\ i1'=3, i3'=1+i3, i9'=it5
   4: (i4-it31 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ -it31+i5 >= 0 /\ 2-i1 >= 0 /\ -1+it31 >= 0) /\ i3'=i3+it31, i4'=i4-it31, i5'=-it31+i5, i6'=1+i4-it31, i7'=1-it31+i5, i8'=-1+i4-it31

Dependency graph:
0 -> 0, 0 -> 2, 0 -> 3, 0 -> 4
1 -> 0, 1 -> 2, 1 -> 3, 1 -> 4
4 -> 0, 4 -> 2, 4 -> 3

	Trace

	1[(-1+i1 == 0)]
	4[(i4-it31 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ -it31+i5 >= 0 /\ 2-i1 >= 0 /\ -1+it31 >= 0)]
	
	Blocked

	{}
	{3[T]}
	{0[T], 4[T]}
	
Step with 3

	Trace

	1[(-1+i1 == 0)]
	4[(i4-it31 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ -it31+i5 >= 0 /\ 2-i1 >= 0 /\ -1+it31 >= 0)]
	3[(-2+i1 == 0 /\ -1+i5 >= 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{3[T]}
	{0[T], 4[T]}
	{}
	
Backtrack

	Trace

	1[(-1+i1 == 0)]
	4[(i4-it31 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ -it31+i5 >= 0 /\ 2-i1 >= 0 /\ -1+it31 >= 0)]
	
	Blocked

	{}
	{3[T]}
	{0[T], 3[T], 4[T]}
	
Step with 2

	Trace

	1[(-1+i1 == 0)]
	4[(i4-it31 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ -it31+i5 >= 0 /\ 2-i1 >= 0 /\ -1+it31 >= 0)]
	2[(-2+i1 == 0 /\ -it4 >= 0 /\ -i5 >= 0)]
	
	Blocked

	{}
	{3[T]}
	{0[T], 3[T], 4[T]}
	{}
	
Backtrack

	Trace

	1[(-1+i1 == 0)]
	4[(i4-it31 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ -it31+i5 >= 0 /\ 2-i1 >= 0 /\ -1+it31 >= 0)]
	
	Blocked

	{}
	{3[T]}
	{0[T], 2[T], 3[T], 4[T]}
	
Backtrack

	Trace

	1[(-1+i1 == 0)]
	
	Blocked

	{}
	{3[T], 4[T]}
	
Step with 0

	Trace

	1[(-1+i1 == 0)]
	0[(-1+i4 >= 0 /\ -2+i1 == 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{3[T], 4[T]}
	{}
	
Covered

	Trace

	1[(-1+i1 == 0)]
	
	Blocked

	{}
	{0[T], 3[T], 4[T]}
	
Step with 2

	Trace

	1[(-1+i1 == 0)]
	2[(-2+i1 == 0 /\ -it4 >= 0 /\ -i5 >= 0)]
	
	Blocked

	{}
	{0[T], 3[T], 4[T]}
	{}
	
Backtrack

	Trace

	1[(-1+i1 == 0)]
	
	Blocked

	{}
	{0[T], 2[T], 3[T], 4[T]}
	
Backtrack

	Trace

	Blocked

	{1[T]}
	
Accept

Poly(n^1)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄, X₅
  Temp_Vars:  G, H
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₁: l0(X₀, X₁, X₂, X₃, X₄, X₅) → l1(X₀, X₁, X₂, X₃, X₄, X₅)
  t₀: l1(X₀, X₁, X₂, X₃, X₄, X₅) → l1(X₀-1, X₁-1, X₀, X₁, X₀-2, X₅) :|: 1 ≤ X₀ ∧ 1 ≤ X₁
  t₂: l1(X₀, X₁, X₂, X₃, X₄, X₅) → l2(X₀, G, X₂, X₃, X₄, H) :|: G ≤ 0 ∧ X₁ ≤ 0
  t₃: l1(X₀, X₁, X₂, X₃, X₄, X₅) → l2(X₀, X₁, X₂, X₃, X₄, H) :|: 1 ≤ X₁ ∧ X₀ ≤ 0


Preprocessing
  Eliminate variables [H; X₂; X₃; X₄; X₅] that do not contribute to the problem


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁
  Temp_Vars:  G
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₄: l0(X₀, X₁) → l1(X₀, X₁)
  t₅: l1(X₀, X₁) → l1(X₀-1, X₁-1) :|: 1 ≤ X₀ ∧ 1 ≤ X₁
  t₆: l1(X₀, X₁) → l2(X₀, G) :|: G ≤ 0 ∧ X₁ ≤ 0
  t₇: l1(X₀, X₁) → l2(X₀, X₁) :|: 1 ≤ X₁ ∧ X₀ ≤ 0


MPRF for transition t₅: l1(X₀, X₁) → l1(X₀-1, X₁-1) :|: 1 ≤ X₀ ∧ 1 ≤ X₁ of depth 1:
  new bound:
    X₀ {O(n)}

  MPRF:
    • l1: [X₀]




All Bounds
Timebounds
  Overall timebound:X₀+3 {O(n)}
    t₄: 1 {O(1)}
    t₅: X₀ {O(n)}
    t₆: 1 {O(1)}
    t₇: 1 {O(1)}


Costbounds
  Overall costbound: X₀+3 {O(n)}
    t₄: 1 {O(1)}
    t₅: X₀ {O(n)}
    t₆: 1 {O(1)}
    t₇: 1 {O(1)}


Sizebounds
    t₄, X₀: X₀ {O(n)}
    t₄, X₁: X₁ {O(n)}
    t₅, X₀: X₀ {O(n)}
    t₅, X₁: X₁ {O(n)}
    t₆, X₀: 2⋅X₀ {O(n)}
    t₇, X₀: 2⋅X₀ {O(n)}
    t₇, X₁: 2⋅X₁ {O(n)}

