WORST_CASE(Omega(n^2),O(n^2))

# LoAT Proof:
WORST_CASE(Omega(n^2),?)

WORST_CASE(Omega(n^1),?)
WORST_CASE(Omega(n^2),?)
Initial ITS

Start location: eval_speedpldi3_start

Location map:
LoAT_sink -> 0
eval_speedpldi3_start -> 1
eval_speedpldi3_bb0_in -> 2
eval_speedpldi3_0 -> 3
eval_speedpldi3_1 -> 4
eval_speedpldi3_2 -> 5
eval_speedpldi3_bb3_in -> 6
eval_speedpldi3_bb1_in -> 7
eval_speedpldi3_bb2_in -> 8
eval_speedpldi3_stop -> 9

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: -2+i1 == 0 /\ i1'=3, i3'=1+i3
   2: -3+i1 == 0 /\ i1'=4, i3'=1+i3
   3: -4+i1 == 0 /\ i1'=5, i3'=1+i3
   4: (i6 <= 0 /\ -5+i1 == 0) /\ i1'=6, i3'=1+i3
   5: (-i6+i7 <= 0 /\ -5+i1 == 0) /\ i1'=6, i3'=1+i3
   6: (i6 > 0 /\ -i6+i7 > 0 /\ -5+i1 == 0) /\ i1'=7, i3'=1+i3, i4'=0, i5'=0
   7: (-7+i1 == 0 /\ -i7+i4 < 0) /\ i1'=8, i3'=1+i3
   8: (-7+i1 == 0 /\ -i7+i4 >= 0) /\ i1'=6, i3'=1+i3
   9: (-i6+i5 < 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i5'=1+i5
  10: (-i6+i5 < 0 /\ -i6+i5 >= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i4'=1+i4, i5'=1+i5
  11: (-i6+i5 < 0 /\ -i6+i5 >= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i5'=0
  12: (-i6+i5 >= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i4'=1+i4, i5'=0
  13: -6+i1 == 0 /\ i1'=9, i3'=1+i3

Dependency graph:
0 -> 1
1 -> 2
2 -> 3
3 -> 4, 3 -> 5, 3 -> 6
4 -> 13
5 -> 13
6 -> 7, 6 -> 8
7 -> 9, 7 -> 10, 7 -> 11, 7 -> 12
8 -> 13
9 -> 7, 9 -> 8
10 -> 7, 10 -> 8
11 -> 7, 11 -> 8
12 -> 7, 12 -> 8

Chained Linear Paths

	Applied Chaining

	First rule:
	-1+i1 == 0 /\ i1'=2, i3'=1+i3
	Second rule:
	-2+i1 == 0 /\ i1'=3, i3'=1+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 0, 1
	
	Applied Chaining

	First rule:
	-3+i1 == 0 /\ i1'=4, i3'=1+i3
	Second rule:
	-4+i1 == 0 /\ i1'=5, i3'=1+i3
	New rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 2, 3
	
	Applied Chaining

	First rule:
	(i6 <= 0 /\ -5+i1 == 0) /\ i1'=6, i3'=1+i3
	Second rule:
	-6+i1 == 0 /\ i1'=9, i3'=1+i3
	New rule:
	(0 == 0 /\ i6 <= 0 /\ -5+i1 == 0) /\ i1'=9, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 4
	
	Applied Chaining

	First rule:
	(-i6+i7 <= 0 /\ -5+i1 == 0) /\ i1'=6, i3'=1+i3
	Second rule:
	-6+i1 == 0 /\ i1'=9, i3'=1+i3
	New rule:
	(0 == 0 /\ -i6+i7 <= 0 /\ -5+i1 == 0) /\ i1'=9, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 5
	
	Applied Chaining

	First rule:
	(-7+i1 == 0 /\ -i7+i4 >= 0) /\ i1'=6, i3'=1+i3
	Second rule:
	-6+i1 == 0 /\ i1'=9, i3'=1+i3
	New rule:
	(0 == 0 /\ -7+i1 == 0 /\ -i7+i4 >= 0) /\ i1'=9, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 8, 13
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	Second rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	
	Applied Deletion

	Removed the following rules: 14, 15

Start location: eval_speedpldi3_start

Location map:
LoAT_sink -> 0
eval_speedpldi3_start -> 1
eval_speedpldi3_bb0_in -> 2
eval_speedpldi3_0 -> 3
eval_speedpldi3_1 -> 4
eval_speedpldi3_2 -> 5
eval_speedpldi3_bb3_in -> 6
eval_speedpldi3_bb1_in -> 7
eval_speedpldi3_bb2_in -> 8
eval_speedpldi3_stop -> 9

Rules:
   6: (i6 > 0 /\ -i6+i7 > 0 /\ -5+i1 == 0) /\ i1'=7, i3'=1+i3, i4'=0, i5'=0
   7: (-7+i1 == 0 /\ -i7+i4 < 0) /\ i1'=8, i3'=1+i3
   9: (-i6+i5 < 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i5'=1+i5
  10: (-i6+i5 < 0 /\ -i6+i5 >= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i4'=1+i4, i5'=1+i5
  11: (-i6+i5 < 0 /\ -i6+i5 >= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i5'=0
  12: (-i6+i5 >= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i4'=1+i4, i5'=0
  16: (0 == 0 /\ i6 <= 0 /\ -5+i1 == 0) /\ i1'=9, i3'=2+i3
  17: (0 == 0 /\ -i6+i7 <= 0 /\ -5+i1 == 0) /\ i1'=9, i3'=2+i3
  18: (0 == 0 /\ -7+i1 == 0 /\ -i7+i4 >= 0) /\ i1'=9, i3'=2+i3
  19: (0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3

Dependency graph:
6 -> 7, 6 -> 18
7 -> 9, 7 -> 10, 7 -> 11, 7 -> 12
9 -> 7, 9 -> 18
10 -> 7, 10 -> 18
11 -> 7, 11 -> 18
12 -> 7, 12 -> 18
19 -> 6, 19 -> 16, 19 -> 17

Preprocessed Transitions

	Simplified Guard

	Original rule:
	(0 == 0 /\ i6 <= 0 /\ -5+i1 == 0) /\ i1'=9, i3'=2+i3
	New rule:
	(i6 <= 0 /\ -5+i1 == 0) /\ i1'=9, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -i6+i7 <= 0 /\ -5+i1 == 0) /\ i1'=9, i3'=2+i3
	New rule:
	(-i6+i7 <= 0 /\ -5+i1 == 0) /\ i1'=9, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -7+i1 == 0 /\ -i7+i4 >= 0) /\ i1'=9, i3'=2+i3
	New rule:
	(-7+i1 == 0 /\ -i7+i4 >= 0) /\ i1'=9, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	New rule:
	-1+i1 == 0 /\ i1'=5, i3'=4+i3

Start location: eval_speedpldi3_start

Location map:
LoAT_sink -> 0
eval_speedpldi3_start -> 1
eval_speedpldi3_bb0_in -> 2
eval_speedpldi3_0 -> 3
eval_speedpldi3_1 -> 4
eval_speedpldi3_2 -> 5
eval_speedpldi3_bb3_in -> 6
eval_speedpldi3_bb1_in -> 7
eval_speedpldi3_bb2_in -> 8
eval_speedpldi3_stop -> 9

Rules:
   6: (i6 > 0 /\ -i6+i7 > 0 /\ -5+i1 == 0) /\ i1'=7, i3'=1+i3, i4'=0, i5'=0
   7: (-7+i1 == 0 /\ -i7+i4 < 0) /\ i1'=8, i3'=1+i3
   9: (-i6+i5 < 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i5'=1+i5
  10: (-i6+i5 < 0 /\ -i6+i5 >= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i4'=1+i4, i5'=1+i5
  11: (-i6+i5 < 0 /\ -i6+i5 >= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i5'=0
  12: (-i6+i5 >= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i4'=1+i4, i5'=0
  20: (i6 <= 0 /\ -5+i1 == 0) /\ i1'=9, i3'=2+i3
  21: (-i6+i7 <= 0 /\ -5+i1 == 0) /\ i1'=9, i3'=2+i3
  22: (-7+i1 == 0 /\ -i7+i4 >= 0) /\ i1'=9, i3'=2+i3
  23: -1+i1 == 0 /\ i1'=5, i3'=4+i3

Dependency graph:
6 -> 7, 6 -> 22
7 -> 9, 7 -> 10, 7 -> 11, 7 -> 12
9 -> 7, 9 -> 22
10 -> 7, 10 -> 22
11 -> 7, 11 -> 22
12 -> 7, 12 -> 22
23 -> 6, 23 -> 20, 23 -> 21

Refined Dependency Graph

	Removed the following edges: 6 -> 22, 7 -> 10, 7 -> 11, 10 -> 7, 10 -> 22, 11 -> 7, 11 -> 22

Start location: eval_speedpldi3_start

Location map:
LoAT_sink -> 0
eval_speedpldi3_start -> 1
eval_speedpldi3_bb0_in -> 2
eval_speedpldi3_0 -> 3
eval_speedpldi3_1 -> 4
eval_speedpldi3_2 -> 5
eval_speedpldi3_bb3_in -> 6
eval_speedpldi3_bb1_in -> 7
eval_speedpldi3_bb2_in -> 8
eval_speedpldi3_stop -> 9

Rules:
   6: (i6 > 0 /\ -i6+i7 > 0 /\ -5+i1 == 0) /\ i1'=7, i3'=1+i3, i4'=0, i5'=0
   7: (-7+i1 == 0 /\ -i7+i4 < 0) /\ i1'=8, i3'=1+i3
   9: (-i6+i5 < 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i5'=1+i5
  10: (-i6+i5 < 0 /\ -i6+i5 >= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i4'=1+i4, i5'=1+i5
  11: (-i6+i5 < 0 /\ -i6+i5 >= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i5'=0
  12: (-i6+i5 >= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i4'=1+i4, i5'=0
  20: (i6 <= 0 /\ -5+i1 == 0) /\ i1'=9, i3'=2+i3
  21: (-i6+i7 <= 0 /\ -5+i1 == 0) /\ i1'=9, i3'=2+i3
  22: (-7+i1 == 0 /\ -i7+i4 >= 0) /\ i1'=9, i3'=2+i3
  23: -1+i1 == 0 /\ i1'=5, i3'=4+i3

Dependency graph:
6 -> 7
7 -> 9, 7 -> 12
9 -> 7, 9 -> 22
12 -> 7, 12 -> 22
23 -> 6, 23 -> 20, 23 -> 21

Step with 23

	Trace

	23[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 21

	Trace

	23[(-1+i1 == 0)]
	21[(-i6+i7 <= 0 /\ -5+i1 == 0)]
	
	Blocked

	{}
	{}
	{}
	
Backtrack

	Trace

	23[(-1+i1 == 0)]
	
	Blocked

	{}
	{21[T]}
	
Step with 6

	Trace

	23[(-1+i1 == 0)]
	6[(i6 > 0 /\ -i6+i7 > 0 /\ -5+i1 == 0)]
	
	Blocked

	{}
	{21[T]}
	{}
	
Step with 7

	Trace

	23[(-1+i1 == 0)]
	6[(i6 > 0 /\ -i6+i7 > 0 /\ -5+i1 == 0)]
	7[(-7+i1 == 0 /\ -i7+i4 < 0)]
	
	Blocked

	{}
	{21[T]}
	{}
	{}
	
Step with 9

	Trace

	23[(-1+i1 == 0)]
	6[(i6 > 0 /\ -i6+i7 > 0 /\ -5+i1 == 0)]
	7[(-7+i1 == 0 /\ -i7+i4 < 0)]
	9[(-i6+i5 < 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{21[T]}
	{}
	{}
	{}
	
Poly(n^1)

Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -7+i1 == 0 /\ -i7+i4 < 0 /\ -i6+i5 < 0) /\ i1'=7, i3'=2+i3, i5'=1+i5
		New rule:
		(-7+i1 == 0 /\ -i7+i4 < 0 /\ -i6+i5 < 0) /\ i1'=7, i3'=2+i3, i5'=1+i5

	Loop Acceleration

	Original rule:
	(-7+i1 == 0 /\ -i7+i4 < 0 /\ -i6+i5 < 0) /\ i1'=7, i3'=2+i3, i5'=1+i5
	New rule:
	(-1+it31 >= 0 /\ i7-i4 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ 1+i6-i5-it31 > 0) /\ i1'=i1, i3'=i3+2*it31, i5'=i5+it31

		i7-i4 > 0 [0]: unchanged
		
		-7+i1 >= 0 [0]: unchanged
		
		7-i1 >= 0 [0]: unchanged
		
		i6-i5 > 0 [0]: montonic decrease yields 1+i6-i5-it31 > 0
		
		Replacement map: {i7-i4 > 0 -> i7-i4 > 0, -7+i1 >= 0 -> -7+i1 >= 0, 7-i1 >= 0 -> 7-i1 >= 0, i6-i5 > 0 -> 1+i6-i5-it31 > 0}

	Removed Trivial Updates

	Original rule:
	(-1+it31 >= 0 /\ i7-i4 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ 1+i6-i5-it31 > 0) /\ i1'=i1, i3'=i3+2*it31, i5'=i5+it31
	New rule:
	(-1+it31 >= 0 /\ i7-i4 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ 1+i6-i5-it31 > 0) /\ i3'=i3+2*it31, i5'=i5+it31
	
	Instantiation

	Original rule:
	(-1+it31 >= 0 /\ i7-i4 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ 1+i6-i5-it31 > 0) /\ i3'=i3+2*it31, i5'=i5+it31
	New rule:
	(1 > 0 /\ i7-i4 > 0 /\ -1+i6-i5 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0) /\ i3'=2*i6+i3-2*i5, i5'=i6

Start location: eval_speedpldi3_start

Location map:
LoAT_sink -> 0
eval_speedpldi3_start -> 1
eval_speedpldi3_bb0_in -> 2
eval_speedpldi3_0 -> 3
eval_speedpldi3_1 -> 4
eval_speedpldi3_2 -> 5
eval_speedpldi3_bb3_in -> 6
eval_speedpldi3_bb1_in -> 7
eval_speedpldi3_bb2_in -> 8
eval_speedpldi3_stop -> 9

Rules:
   6: (i6 > 0 /\ -i6+i7 > 0 /\ -5+i1 == 0) /\ i1'=7, i3'=1+i3, i4'=0, i5'=0
   7: (-7+i1 == 0 /\ -i7+i4 < 0) /\ i1'=8, i3'=1+i3
   9: (-i6+i5 < 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i5'=1+i5
  10: (-i6+i5 < 0 /\ -i6+i5 >= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i4'=1+i4, i5'=1+i5
  11: (-i6+i5 < 0 /\ -i6+i5 >= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i5'=0
  12: (-i6+i5 >= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i4'=1+i4, i5'=0
  20: (i6 <= 0 /\ -5+i1 == 0) /\ i1'=9, i3'=2+i3
  21: (-i6+i7 <= 0 /\ -5+i1 == 0) /\ i1'=9, i3'=2+i3
  22: (-7+i1 == 0 /\ -i7+i4 >= 0) /\ i1'=9, i3'=2+i3
  23: -1+i1 == 0 /\ i1'=5, i3'=4+i3
  24: (1 > 0 /\ i7-i4 > 0 /\ -1+i6-i5 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0) /\ i3'=2*i6+i3-2*i5, i5'=i6

Dependency graph:
6 -> 7, 6 -> 24
7 -> 9, 7 -> 12
9 -> 7, 9 -> 22, 9 -> 24
12 -> 7, 12 -> 22, 12 -> 24
23 -> 6, 23 -> 20, 23 -> 21
24 -> 7, 24 -> 22

	Trace

	23[(-1+i1 == 0)]
	6[(i6 > 0 /\ -i6+i7 > 0 /\ -5+i1 == 0)]
	24[(1 > 0 /\ i7-i4 > 0 /\ -1+i6-i5 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0)]
	
	Blocked

	{}
	{21[T]}
	{}
	{24[T]}
	
Step with 7

	Trace

	23[(-1+i1 == 0)]
	6[(i6 > 0 /\ -i6+i7 > 0 /\ -5+i1 == 0)]
	24[(1 > 0 /\ i7-i4 > 0 /\ -1+i6-i5 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0)]
	7[(-7+i1 == 0 /\ -i7+i4 < 0)]
	
	Blocked

	{}
	{21[T]}
	{}
	{22[T], 24[T]}
	{}
	
Step with 12

	Trace

	23[(-1+i1 == 0)]
	6[(i6 > 0 /\ -i6+i7 > 0 /\ -5+i1 == 0)]
	24[(1 > 0 /\ i7-i4 > 0 /\ -1+i6-i5 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0)]
	7[(-7+i1 == 0 /\ -i7+i4 < 0)]
	12[(-i6+i5 >= 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{21[T]}
	{}
	{22[T], 24[T]}
	{9[T]}
	{}
	
Accelerate and Drop

		Simplified Guard

		Original rule:
		(0 == 0 /\ -7+i1 == 0 /\ -i7+i4 < 0 /\ -i6+i5 >= 0) /\ i1'=7, i3'=2+i3, i4'=1+i4, i5'=0
		New rule:
		(-7+i1 == 0 /\ -i7+i4 < 0 /\ -i6+i5 >= 0) /\ i1'=7, i3'=2+i3, i4'=1+i4, i5'=0

	Loop Acceleration

	Original rule:
	(-7+i1 == 0 /\ -i7+i4 < 0 /\ -i6+i5 >= 0) /\ i1'=7, i3'=2+i3, i4'=1+i4, i5'=0
	New rule:
	(-i6 >= 0 /\ i7-i4 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ 1+i7-i4-it58 > 0 /\ -1+it58 >= 0 /\ -i6+i5 >= 0) /\ i1'=i1, i3'=i3+2*it58, i4'=i4+it58, i5'=0

		i7-i4 > 0 [0]: montonic decrease yields (i7-i4 > 0 /\ 1+i7-i4-it58 > 0)
		
		-7+i1 >= 0 [0]: unchanged
		
		7-i1 >= 0 [0]: unchanged
		
		-i6+i5 >= 0 [0]: eventual decrease yields (-i6 >= 0 /\ -i6+i5 >= 0)
		
		-i6+i5 >= 0 [1]: eventual increase yields (-i6+i5 >= 0 /\ i5 <= 0)
		
		Replacement map: {i7-i4 > 0 -> (i7-i4 > 0 /\ 1+i7-i4-it58 > 0), -7+i1 >= 0 -> -7+i1 >= 0, 7-i1 >= 0 -> 7-i1 >= 0, -i6+i5 >= 0 -> (-i6 >= 0 /\ -i6+i5 >= 0)}

	Removed Trivial Updates

	Original rule:
	(-i6 >= 0 /\ i7-i4 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ 1+i7-i4-it58 > 0 /\ -1+it58 >= 0 /\ -i6+i5 >= 0) /\ i1'=i1, i3'=i3+2*it58, i4'=i4+it58, i5'=0
	New rule:
	(-i6 >= 0 /\ i7-i4 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ 1+i7-i4-it58 > 0 /\ -1+it58 >= 0 /\ -i6+i5 >= 0) /\ i3'=i3+2*it58, i4'=i4+it58, i5'=0
	
	Instantiation

	Original rule:
	(-i6 >= 0 /\ i7-i4 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ 1+i7-i4-it58 > 0 /\ -1+it58 >= 0 /\ -i6+i5 >= 0) /\ i3'=i3+2*it58, i4'=i4+it58, i5'=0
	New rule:
	(-i6 >= 0 /\ 1 > 0 /\ i7-i4 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ -i6+i5 >= 0 /\ -1+i7-i4 >= 0) /\ i3'=i3+2*i7-2*i4, i4'=i7, i5'=0

Start location: eval_speedpldi3_start

Location map:
LoAT_sink -> 0
eval_speedpldi3_start -> 1
eval_speedpldi3_bb0_in -> 2
eval_speedpldi3_0 -> 3
eval_speedpldi3_1 -> 4
eval_speedpldi3_2 -> 5
eval_speedpldi3_bb3_in -> 6
eval_speedpldi3_bb1_in -> 7
eval_speedpldi3_bb2_in -> 8
eval_speedpldi3_stop -> 9

Rules:
   6: (i6 > 0 /\ -i6+i7 > 0 /\ -5+i1 == 0) /\ i1'=7, i3'=1+i3, i4'=0, i5'=0
   7: (-7+i1 == 0 /\ -i7+i4 < 0) /\ i1'=8, i3'=1+i3
   9: (-i6+i5 < 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i5'=1+i5
  10: (-i6+i5 < 0 /\ -i6+i5 >= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i4'=1+i4, i5'=1+i5
  11: (-i6+i5 < 0 /\ -i6+i5 >= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i5'=0
  12: (-i6+i5 >= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i4'=1+i4, i5'=0
  20: (i6 <= 0 /\ -5+i1 == 0) /\ i1'=9, i3'=2+i3
  21: (-i6+i7 <= 0 /\ -5+i1 == 0) /\ i1'=9, i3'=2+i3
  22: (-7+i1 == 0 /\ -i7+i4 >= 0) /\ i1'=9, i3'=2+i3
  23: -1+i1 == 0 /\ i1'=5, i3'=4+i3
  24: (1 > 0 /\ i7-i4 > 0 /\ -1+i6-i5 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0) /\ i3'=2*i6+i3-2*i5, i5'=i6
  25: (-i6 >= 0 /\ 1 > 0 /\ i7-i4 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ -i6+i5 >= 0 /\ -1+i7-i4 >= 0) /\ i3'=i3+2*i7-2*i4, i4'=i7, i5'=0

Dependency graph:
6 -> 7, 6 -> 24, 6 -> 25
7 -> 9, 7 -> 12
9 -> 7, 9 -> 22, 9 -> 24, 9 -> 25
12 -> 7, 12 -> 22, 12 -> 24, 12 -> 25
23 -> 6, 23 -> 20, 23 -> 21
24 -> 7, 24 -> 22, 24 -> 25
25 -> 7, 25 -> 22, 25 -> 24

	Trace

	23[(-1+i1 == 0)]
	6[(i6 > 0 /\ -i6+i7 > 0 /\ -5+i1 == 0)]
	24[(1 > 0 /\ i7-i4 > 0 /\ -1+i6-i5 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0)]
	
	Blocked

	{}
	{21[T]}
	{}
	{22[T], 24[T]}
	
Step with 7

	Trace

	23[(-1+i1 == 0)]
	6[(i6 > 0 /\ -i6+i7 > 0 /\ -5+i1 == 0)]
	24[(1 > 0 /\ i7-i4 > 0 /\ -1+i6-i5 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0)]
	7[(-7+i1 == 0 /\ -i7+i4 < 0)]
	
	Blocked

	{}
	{21[T]}
	{}
	{22[T], 24[T], 25[T]}
	{}
	
Step with 12

	Trace

	23[(-1+i1 == 0)]
	6[(i6 > 0 /\ -i6+i7 > 0 /\ -5+i1 == 0)]
	24[(1 > 0 /\ i7-i4 > 0 /\ -1+i6-i5 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0)]
	7[(-7+i1 == 0 /\ -i7+i4 < 0)]
	12[(-i6+i5 >= 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{21[T]}
	{}
	{22[T], 24[T], 25[T]}
	{}
	{}
	
Poly(n^2)

Accelerate

		Extracted Implied Equalities

		Original rule:
		(0 >= 0 /\ 0 == 0 /\ 1 > 0 /\ i7-i4 > 0 /\ -1+i6-i5 >= 0 /\ -7+i1 >= 0 /\ -7+i1 == 0 /\ 7-i1 >= 0 /\ -i7+i4 < 0) /\ i1'=7, i3'=2+2*i6+i3-2*i5, i4'=1+i4, i5'=0
		New rule:
		(0 >= 0 /\ 0 == 0 /\ 1 > 0 /\ i7-i4 > 0 /\ -1+i6-i5 >= 0 /\ -7+i1 >= 0 /\ -7+i1 == 0 /\ 7-i1 >= 0 /\ 7-i1 == 0 /\ -i7+i4 < 0) /\ i1'=7, i3'=2+2*i6+i3-2*i5, i4'=1+i4, i5'=0
		
		Simplified Guard

		Original rule:
		(0 >= 0 /\ 0 == 0 /\ 1 > 0 /\ i7-i4 > 0 /\ -1+i6-i5 >= 0 /\ -7+i1 >= 0 /\ -7+i1 == 0 /\ 7-i1 >= 0 /\ 7-i1 == 0 /\ -i7+i4 < 0) /\ i1'=7, i3'=2+2*i6+i3-2*i5, i4'=1+i4, i5'=0
		New rule:
		(i7-i4 > 0 /\ -1+i6-i5 >= 0 /\ -7+i1 >= 0 /\ -7+i1 == 0 /\ 7-i1 >= 0 /\ 7-i1 == 0 /\ -i7+i4 < 0) /\ i1'=7, i3'=2+2*i6+i3-2*i5, i4'=1+i4, i5'=0

	Loop Acceleration

	Original rule:
	(i7-i4 > 0 /\ -1+i6-i5 >= 0 /\ -7+i1 >= 0 /\ -7+i1 == 0 /\ 7-i1 >= 0 /\ 7-i1 == 0 /\ -i7+i4 < 0) /\ i1'=7, i3'=2+2*i6+i3-2*i5, i4'=1+i4, i5'=0
	New rule:
	(-it71+i7-i4 > 0 /\ i7-i4 > 0 /\ -1+i6-i5 >= 0 /\ -1+it71 >= 0 /\ -7+i1 >= 0 /\ -7+i1 == 0 /\ 7-i1 >= 0 /\ 7-i1 == 0 /\ -i7+i4 < 0 /\ -1+i7-i4 > 0 /\ -1+i6 >= 0) /\ i1'=i1, i3'=2+2*i6+i3+2*i6*it71+2*it71-2*i5, i4'=1+it71+i4, i5'=0

		i7-i4 > 0 [0]: montonic decrease yields (1-it71+i7-i4 > 0 /\ i7-i4 > 0)
		
		-1+i6-i5 >= 0 [0]: eventual decrease yields (-1+i6-i5 >= 0 /\ -1+i6 >= 0)
		
		-1+i6-i5 >= 0 [1]: eventual increase yields (-1+i6-i5 >= 0 /\ -i5 <= 0)
		
		-7+i1 >= 0 [0]: unchanged
		
		7-i1 >= 0 [0]: unchanged
		
		Replacement map: {i7-i4 > 0 -> (1-it71+i7-i4 > 0 /\ i7-i4 > 0), -1+i6-i5 >= 0 -> (-1+i6-i5 >= 0 /\ -1+i6 >= 0), -7+i1 >= 0 -> -7+i1 >= 0, 7-i1 >= 0 -> 7-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-it71+i7-i4 > 0 /\ i7-i4 > 0 /\ -1+i6-i5 >= 0 /\ -1+it71 >= 0 /\ -7+i1 >= 0 /\ -7+i1 == 0 /\ 7-i1 >= 0 /\ 7-i1 == 0 /\ -i7+i4 < 0 /\ -1+i7-i4 > 0 /\ -1+i6 >= 0) /\ i1'=i1, i3'=2+2*i6+i3+2*i6*it71+2*it71-2*i5, i4'=1+it71+i4, i5'=0
	New rule:
	(-it71+i7-i4 > 0 /\ i7-i4 > 0 /\ -1+i6-i5 >= 0 /\ -1+it71 >= 0 /\ -7+i1 >= 0 /\ -7+i1 == 0 /\ 7-i1 >= 0 /\ 7-i1 == 0 /\ -i7+i4 < 0 /\ -1+i7-i4 > 0 /\ -1+i6 >= 0) /\ i3'=2+2*i6+i3+2*i6*it71+2*it71-2*i5, i4'=1+it71+i4, i5'=0
	
	Instantiation

	Original rule:
	(-it71+i7-i4 > 0 /\ i7-i4 > 0 /\ -1+i6-i5 >= 0 /\ -1+it71 >= 0 /\ -7+i1 >= 0 /\ -7+i1 == 0 /\ 7-i1 >= 0 /\ 7-i1 == 0 /\ -i7+i4 < 0 /\ -1+i7-i4 > 0 /\ -1+i6 >= 0) /\ i3'=2+2*i6+i3+2*i6*it71+2*it71-2*i5, i4'=1+it71+i4, i5'=0
	New rule:
	(1 > 0 /\ i7-i4 > 0 /\ -1+i6-i5 >= 0 /\ -2+i7-i4 >= 0 /\ -7+i1 >= 0 /\ -7+i1 == 0 /\ 7-i1 >= 0 /\ 7-i1 == 0 /\ -i7+i4 < 0 /\ -1+i7-i4 > 0 /\ -1+i6 >= 0) /\ i3'=2*i6+2*i6*(-1+i7-i4)+i3+2*i7-2*i4-2*i5, i4'=i7, i5'=0

Start location: eval_speedpldi3_start

Location map:
LoAT_sink -> 0
eval_speedpldi3_start -> 1
eval_speedpldi3_bb0_in -> 2
eval_speedpldi3_0 -> 3
eval_speedpldi3_1 -> 4
eval_speedpldi3_2 -> 5
eval_speedpldi3_bb3_in -> 6
eval_speedpldi3_bb1_in -> 7
eval_speedpldi3_bb2_in -> 8
eval_speedpldi3_stop -> 9

Rules:
   6: (i6 > 0 /\ -i6+i7 > 0 /\ -5+i1 == 0) /\ i1'=7, i3'=1+i3, i4'=0, i5'=0
   7: (-7+i1 == 0 /\ -i7+i4 < 0) /\ i1'=8, i3'=1+i3
   9: (-i6+i5 < 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i5'=1+i5
  10: (-i6+i5 < 0 /\ -i6+i5 >= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i4'=1+i4, i5'=1+i5
  11: (-i6+i5 < 0 /\ -i6+i5 >= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i5'=0
  12: (-i6+i5 >= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i4'=1+i4, i5'=0
  20: (i6 <= 0 /\ -5+i1 == 0) /\ i1'=9, i3'=2+i3
  21: (-i6+i7 <= 0 /\ -5+i1 == 0) /\ i1'=9, i3'=2+i3
  22: (-7+i1 == 0 /\ -i7+i4 >= 0) /\ i1'=9, i3'=2+i3
  23: -1+i1 == 0 /\ i1'=5, i3'=4+i3
  24: (1 > 0 /\ i7-i4 > 0 /\ -1+i6-i5 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0) /\ i3'=2*i6+i3-2*i5, i5'=i6
  25: (-i6 >= 0 /\ 1 > 0 /\ i7-i4 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ -i6+i5 >= 0 /\ -1+i7-i4 >= 0) /\ i3'=i3+2*i7-2*i4, i4'=i7, i5'=0
  26: (1 > 0 /\ i7-i4 > 0 /\ -1+i6-i5 >= 0 /\ -2+i7-i4 >= 0 /\ -7+i1 >= 0 /\ -7+i1 == 0 /\ 7-i1 >= 0 /\ 7-i1 == 0 /\ -i7+i4 < 0 /\ -1+i7-i4 > 0 /\ -1+i6 >= 0) /\ i3'=2*i6+2*i6*(-1+i7-i4)+i3+2*i7-2*i4-2*i5, i4'=i7, i5'=0

Dependency graph:
6 -> 7, 6 -> 24, 6 -> 25, 6 -> 26
7 -> 9, 7 -> 12
9 -> 7, 9 -> 22, 9 -> 24, 9 -> 25, 9 -> 26
12 -> 7, 12 -> 22, 12 -> 24, 12 -> 25, 12 -> 26
23 -> 6, 23 -> 20, 23 -> 21
24 -> 7, 24 -> 22, 24 -> 25
25 -> 7, 25 -> 22, 25 -> 24, 25 -> 26
26 -> 7, 26 -> 22, 26 -> 24, 26 -> 25

	Trace

	23[(-1+i1 == 0)]
	6[(i6 > 0 /\ -i6+i7 > 0 /\ -5+i1 == 0)]
	26[(1 > 0 /\ i7-i4 > 0 /\ -1+i6-i5 >= 0 /\ -2+i7-i4 >= 0 /\ -7+i1 >= 0 /\ -7+i1 == 0 /\ 7-i1 >= 0 /\ 7-i1 == 0 /\ -i7+i4 < 0 /\ -1+i7-i4 > 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{21[T]}
	{}
	{26[T]}
	
Step with 22

	Trace

	23[(-1+i1 == 0)]
	6[(i6 > 0 /\ -i6+i7 > 0 /\ -5+i1 == 0)]
	26[(1 > 0 /\ i7-i4 > 0 /\ -1+i6-i5 >= 0 /\ -2+i7-i4 >= 0 /\ -7+i1 >= 0 /\ -7+i1 == 0 /\ 7-i1 >= 0 /\ 7-i1 == 0 /\ -i7+i4 < 0 /\ -1+i7-i4 > 0 /\ -1+i6 >= 0)]
	22[(-7+i1 == 0 /\ -i7+i4 >= 0)]
	
	Blocked

	{}
	{21[T]}
	{}
	{25[T], 26[T]}
	{}
	
Backtrack

	Trace

	23[(-1+i1 == 0)]
	6[(i6 > 0 /\ -i6+i7 > 0 /\ -5+i1 == 0)]
	26[(1 > 0 /\ i7-i4 > 0 /\ -1+i6-i5 >= 0 /\ -2+i7-i4 >= 0 /\ -7+i1 >= 0 /\ -7+i1 == 0 /\ 7-i1 >= 0 /\ 7-i1 == 0 /\ -i7+i4 < 0 /\ -1+i7-i4 > 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{21[T]}
	{}
	{22[T], 25[T], 26[T]}
	
Backtrack

	Trace

	23[(-1+i1 == 0)]
	6[(i6 > 0 /\ -i6+i7 > 0 /\ -5+i1 == 0)]
	
	Blocked

	{}
	{21[T]}
	{26[T]}
	
Step with 7

	Trace

	23[(-1+i1 == 0)]
	6[(i6 > 0 /\ -i6+i7 > 0 /\ -5+i1 == 0)]
	7[(-7+i1 == 0 /\ -i7+i4 < 0)]
	
	Blocked

	{}
	{21[T]}
	{26[T]}
	{}
	
Step with 9

	Trace

	23[(-1+i1 == 0)]
	6[(i6 > 0 /\ -i6+i7 > 0 /\ -5+i1 == 0)]
	7[(-7+i1 == 0 /\ -i7+i4 < 0)]
	9[(-i6+i5 < 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{21[T]}
	{26[T]}
	{12[T]}
	{}
	
Covered

	Trace

	23[(-1+i1 == 0)]
	6[(i6 > 0 /\ -i6+i7 > 0 /\ -5+i1 == 0)]
	7[(-7+i1 == 0 /\ -i7+i4 < 0)]
	
	Blocked

	{}
	{21[T]}
	{26[T]}
	{9[T], 12[T]}
	
Backtrack

	Trace

	23[(-1+i1 == 0)]
	6[(i6 > 0 /\ -i6+i7 > 0 /\ -5+i1 == 0)]
	
	Blocked

	{}
	{21[T]}
	{7[T], 26[T]}
	
Step with 24

	Trace

	23[(-1+i1 == 0)]
	6[(i6 > 0 /\ -i6+i7 > 0 /\ -5+i1 == 0)]
	24[(1 > 0 /\ i7-i4 > 0 /\ -1+i6-i5 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0)]
	
	Blocked

	{}
	{21[T]}
	{7[T], 26[T]}
	{24[T]}
	
Step with 7

	Trace

	23[(-1+i1 == 0)]
	6[(i6 > 0 /\ -i6+i7 > 0 /\ -5+i1 == 0)]
	24[(1 > 0 /\ i7-i4 > 0 /\ -1+i6-i5 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0)]
	7[(-7+i1 == 0 /\ -i7+i4 < 0)]
	
	Blocked

	{}
	{21[T]}
	{7[T], 26[T]}
	{24[T], 25[T]}
	{}
	
Step with 12

	Trace

	23[(-1+i1 == 0)]
	6[(i6 > 0 /\ -i6+i7 > 0 /\ -5+i1 == 0)]
	24[(1 > 0 /\ i7-i4 > 0 /\ -1+i6-i5 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0)]
	7[(-7+i1 == 0 /\ -i7+i4 < 0)]
	12[(-i6+i5 >= 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{21[T]}
	{7[T], 26[T]}
	{24[T], 25[T]}
	{}
	{}
	
Covered

	Trace

	23[(-1+i1 == 0)]
	6[(i6 > 0 /\ -i6+i7 > 0 /\ -5+i1 == 0)]
	24[(1 > 0 /\ i7-i4 > 0 /\ -1+i6-i5 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0)]
	7[(-7+i1 == 0 /\ -i7+i4 < 0)]
	
	Blocked

	{}
	{21[T]}
	{7[T], 26[T]}
	{24[T], 25[T]}
	{12[T]}
	
Backtrack

	Trace

	23[(-1+i1 == 0)]
	6[(i6 > 0 /\ -i6+i7 > 0 /\ -5+i1 == 0)]
	24[(1 > 0 /\ i7-i4 > 0 /\ -1+i6-i5 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0)]
	
	Blocked

	{}
	{21[T]}
	{7[T], 26[T]}
	{7[T], 24[T], 25[T]}
	
Backtrack

	Trace

	23[(-1+i1 == 0)]
	6[(i6 > 0 /\ -i6+i7 > 0 /\ -5+i1 == 0)]
	
	Blocked

	{}
	{21[T]}
	{7[T], 24[T], 26[T]}
	
Backtrack

	Trace

	23[(-1+i1 == 0)]
	
	Blocked

	{}
	{6[T], 21[T]}
	
Step with 20

	Trace

	23[(-1+i1 == 0)]
	20[(i6 <= 0 /\ -5+i1 == 0)]
	
	Blocked

	{}
	{6[T], 21[T]}
	{}
	
Backtrack

	Trace

	23[(-1+i1 == 0)]
	
	Blocked

	{}
	{6[T], 20[T], 21[T]}
	
Backtrack

	Trace

	Blocked

	{23[T]}
	
Accept

Poly(n^2)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^2))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃
  Temp_Vars:  
  Locations:  l0, l1, l2, l3, l4, l5, l6, l7, l8
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, X₃)
  t₃: l1(X₀, X₁, X₂, X₃) → l4(X₀, X₁, X₂, X₃)
  t₁: l2(X₀, X₁, X₂, X₃) → l3(X₀, X₁, X₂, X₃)
  t₂: l3(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, X₃)
  t₆: l4(X₀, X₁, X₂, X₃) → l5(0, 0, X₂, X₃) :|: 1 ≤ X₂ ∧ 1+X₂ ≤ X₃
  t₄: l4(X₀, X₁, X₂, X₃) → l6(X₀, X₁, X₂, X₃) :|: X₂ ≤ 0
  t₅: l4(X₀, X₁, X₂, X₃) → l6(X₀, X₁, X₂, X₃) :|: X₃ ≤ X₂
  t₈: l5(X₀, X₁, X₂, X₃) → l6(X₀, X₁, X₂, X₃) :|: X₃ ≤ X₀
  t₇: l5(X₀, X₁, X₂, X₃) → l7(X₀, X₁, X₂, X₃) :|: 1+X₀ ≤ X₃
  t₁₃: l6(X₀, X₁, X₂, X₃) → l8(X₀, X₁, X₂, X₃)
  t₉: l7(X₀, X₁, X₂, X₃) → l5(X₀, 1+X₁, X₂, X₃) :|: 1+X₁ ≤ X₂
  t₁₀: l7(X₀, X₁, X₂, X₃) → l5(1+X₀, 1+X₁, X₂, X₃) :|: 1+X₁ ≤ X₂ ∧ X₂ ≤ X₁
  t₁₁: l7(X₀, X₁, X₂, X₃) → l5(X₀, 0, X₂, X₃) :|: 1+X₁ ≤ X₂ ∧ X₂ ≤ X₁
  t₁₂: l7(X₀, X₁, X₂, X₃) → l5(1+X₀, 0, X₂, X₃) :|: X₂ ≤ X₁


Preprocessing
  Cut unsatisfiable transition [t₁₀: l7→l5; t₁₁: l7→l5]


  Found invariant 2 ≤ X₃ ∧ 3 ≤ X₂+X₃ ∧ 1+X₂ ≤ X₃ ∧ 2 ≤ X₁+X₃ ∧ 1+X₁ ≤ X₃ ∧ 2 ≤ X₀+X₃ ∧ 1+X₀ ≤ X₃ ∧ 1 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ X₁ ≤ X₂ ∧ 1 ≤ X₀+X₂ ∧ 0 ≤ X₁ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₀ for location l7


  Found invariant 2 ≤ X₃ ∧ 3 ≤ X₂+X₃ ∧ 1+X₂ ≤ X₃ ∧ 2 ≤ X₁+X₃ ∧ 1+X₁ ≤ X₃ ∧ 2 ≤ X₀+X₃ ∧ X₀ ≤ X₃ ∧ 1 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ X₁ ≤ X₂ ∧ 1 ≤ X₀+X₂ ∧ 0 ≤ X₁ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₀ for location l5


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃
  Temp_Vars:  
  Locations:  l0, l1, l2, l3, l4, l5, l6, l7, l8
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, X₃)
  t₃: l1(X₀, X₁, X₂, X₃) → l4(X₀, X₁, X₂, X₃)
  t₁: l2(X₀, X₁, X₂, X₃) → l3(X₀, X₁, X₂, X₃)
  t₂: l3(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, X₃)
  t₆: l4(X₀, X₁, X₂, X₃) → l5(0, 0, X₂, X₃) :|: 1 ≤ X₂ ∧ 1+X₂ ≤ X₃
  t₄: l4(X₀, X₁, X₂, X₃) → l6(X₀, X₁, X₂, X₃) :|: X₂ ≤ 0
  t₅: l4(X₀, X₁, X₂, X₃) → l6(X₀, X₁, X₂, X₃) :|: X₃ ≤ X₂
  t₈: l5(X₀, X₁, X₂, X₃) → l6(X₀, X₁, X₂, X₃) :|: X₃ ≤ X₀ ∧ 1 ≤ X₀+X₂ ∧ 1 ≤ X₁+X₂ ∧ 1+X₁ ≤ X₃ ∧ 1 ≤ X₂ ∧ 1+X₂ ≤ X₃ ∧ 2 ≤ X₀+X₃ ∧ 2 ≤ X₁+X₃ ∧ 2 ≤ X₃ ∧ 3 ≤ X₂+X₃ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ X₀ ≤ X₃ ∧ 0 ≤ X₁ ∧ X₁ ≤ X₂
  t₇: l5(X₀, X₁, X₂, X₃) → l7(X₀, X₁, X₂, X₃) :|: 1+X₀ ≤ X₃ ∧ 1 ≤ X₀+X₂ ∧ 1 ≤ X₁+X₂ ∧ 1+X₁ ≤ X₃ ∧ 1 ≤ X₂ ∧ 1+X₂ ≤ X₃ ∧ 2 ≤ X₀+X₃ ∧ 2 ≤ X₁+X₃ ∧ 2 ≤ X₃ ∧ 3 ≤ X₂+X₃ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ X₀ ≤ X₃ ∧ 0 ≤ X₁ ∧ X₁ ≤ X₂
  t₁₃: l6(X₀, X₁, X₂, X₃) → l8(X₀, X₁, X₂, X₃)
  t₉: l7(X₀, X₁, X₂, X₃) → l5(X₀, 1+X₁, X₂, X₃) :|: 1+X₁ ≤ X₂ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₃ ∧ 1 ≤ X₁+X₂ ∧ 1+X₁ ≤ X₃ ∧ 1 ≤ X₂ ∧ 1+X₂ ≤ X₃ ∧ 2 ≤ X₀+X₃ ∧ 2 ≤ X₁+X₃ ∧ 2 ≤ X₃ ∧ 3 ≤ X₂+X₃ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₁ ∧ X₁ ≤ X₂
  t₁₂: l7(X₀, X₁, X₂, X₃) → l5(1+X₀, 0, X₂, X₃) :|: X₂ ≤ X₁ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₃ ∧ 1 ≤ X₁+X₂ ∧ 1+X₁ ≤ X₃ ∧ 1 ≤ X₂ ∧ 1+X₂ ≤ X₃ ∧ 2 ≤ X₀+X₃ ∧ 2 ≤ X₁+X₃ ∧ 2 ≤ X₃ ∧ 3 ≤ X₂+X₃ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₁ ∧ X₁ ≤ X₂


MPRF for transition t₁₂: l7(X₀, X₁, X₂, X₃) → l5(1+X₀, 0, X₂, X₃) :|: X₂ ≤ X₁ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₃ ∧ 1 ≤ X₁+X₂ ∧ 1+X₁ ≤ X₃ ∧ 1 ≤ X₂ ∧ 1+X₂ ≤ X₃ ∧ 2 ≤ X₀+X₃ ∧ 2 ≤ X₁+X₃ ∧ 2 ≤ X₃ ∧ 3 ≤ X₂+X₃ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₁ ∧ X₁ ≤ X₂ of depth 1:
  new bound:
    X₃ {O(n)}

  MPRF:
    • l5: [X₃-X₀]
    • l7: [X₃-X₀]




MPRF for transition t₇: l5(X₀, X₁, X₂, X₃) → l7(X₀, X₁, X₂, X₃) :|: 1+X₀ ≤ X₃ ∧ 1 ≤ X₀+X₂ ∧ 1 ≤ X₁+X₂ ∧ 1+X₁ ≤ X₃ ∧ 1 ≤ X₂ ∧ 1+X₂ ≤ X₃ ∧ 2 ≤ X₀+X₃ ∧ 2 ≤ X₁+X₃ ∧ 2 ≤ X₃ ∧ 3 ≤ X₂+X₃ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ X₀ ≤ X₃ ∧ 0 ≤ X₁ ∧ X₁ ≤ X₂ of depth 1:
  new bound:
    X₂⋅X₃+X₂+X₃+1 {O(n^2)}

  MPRF:
    • l5: [1+X₂-X₁]
    • l7: [X₂-X₁]




MPRF for transition t₉: l7(X₀, X₁, X₂, X₃) → l5(X₀, 1+X₁, X₂, X₃) :|: 1+X₁ ≤ X₂ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₃ ∧ 1 ≤ X₁+X₂ ∧ 1+X₁ ≤ X₃ ∧ 1 ≤ X₂ ∧ 1+X₂ ≤ X₃ ∧ 2 ≤ X₀+X₃ ∧ 2 ≤ X₁+X₃ ∧ 2 ≤ X₃ ∧ 3 ≤ X₂+X₃ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₁ ∧ X₁ ≤ X₂ of depth 1:
  new bound:
    X₃^2+X₃ {O(n^2)}

  MPRF:
    • l5: [X₃-X₁]
    • l7: [X₃-X₁]




  Cut unsatisfiable transition [t₈: l5→l6; t₁₀₆: l5→l6]


  Found invariant 3 ≤ X₃ ∧ 4 ≤ X₂+X₃ ∧ 1+X₂ ≤ X₃ ∧ 3 ≤ X₁+X₃ ∧ 3+X₁ ≤ X₃ ∧ 5 ≤ X₀+X₃ ∧ 1+X₀ ≤ X₃ ∧ 1 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 1+X₁ ≤ X₂ ∧ 3 ≤ X₀+X₂ ∧ X₁ ≤ 0 ∧ 2+X₁ ≤ X₀ ∧ 0 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 2 ≤ X₀ for location l7_v5


  Found invariant 3 ≤ X₃ ∧ 4 ≤ X₂+X₃ ∧ 1+X₂ ≤ X₃ ∧ 4 ≤ X₁+X₃ ∧ 1+X₁ ≤ X₃ ∧ 5 ≤ X₀+X₃ ∧ 1+X₀ ≤ X₃ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ X₁ ≤ X₂ ∧ 3 ≤ X₀+X₂ ∧ 1 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 2 ≤ X₀ for location l5_v5


  Found invariant 3 ≤ X₃ ∧ 4 ≤ X₂+X₃ ∧ 1+X₂ ≤ X₃ ∧ 4 ≤ X₁+X₃ ∧ 1+X₁ ≤ X₃ ∧ 5 ≤ X₀+X₃ ∧ 1+X₀ ≤ X₃ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ X₁ ≤ X₂ ∧ 3 ≤ X₀+X₂ ∧ 1 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 2 ≤ X₀ for location l7_v6


  Found invariant 2 ≤ X₃ ∧ 3 ≤ X₂+X₃ ∧ 1+X₂ ≤ X₃ ∧ 2 ≤ X₁+X₃ ∧ 2+X₁ ≤ X₃ ∧ 3 ≤ X₀+X₃ ∧ 1+X₀ ≤ X₃ ∧ 1 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 1+X₁ ≤ X₂ ∧ 2 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ X₁ ≤ 0 ∧ 1+X₁ ≤ X₀ ∧ X₀+X₁ ≤ 1 ∧ 0 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ X₀ ≤ 1+X₁ ∧ X₀ ≤ 1 ∧ 1 ≤ X₀ for location l5_v1


  Found invariant 2 ≤ X₃ ∧ 3 ≤ X₂+X₃ ∧ 1+X₂ ≤ X₃ ∧ 3 ≤ X₁+X₃ ∧ 1+X₁ ≤ X₃ ∧ 2 ≤ X₀+X₃ ∧ 2+X₀ ≤ X₃ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ X₁ ≤ X₂ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ X₀ ≤ 0 ∧ 0 ≤ X₀ for location l5_v2


  Found invariant 2 ≤ X₃ ∧ 3 ≤ X₂+X₃ ∧ 1+X₂ ≤ X₃ ∧ 2 ≤ X₁+X₃ ∧ 2+X₁ ≤ X₃ ∧ 4 ≤ X₀+X₃ ∧ X₀ ≤ X₃ ∧ 1 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 1+X₁ ≤ X₂ ∧ 3 ≤ X₀+X₂ ∧ X₁ ≤ 0 ∧ 2+X₁ ≤ X₀ ∧ 0 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 2 ≤ X₀ for location l5_v4


  Found invariant 2 ≤ X₃ ∧ 3 ≤ X₂+X₃ ∧ 1+X₂ ≤ X₃ ∧ 3 ≤ X₁+X₃ ∧ 1+X₁ ≤ X₃ ∧ 3 ≤ X₀+X₃ ∧ 1+X₀ ≤ X₃ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ X₁ ≤ X₂ ∧ 2 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ X₀ ≤ X₁ ∧ X₀ ≤ 1 ∧ 1 ≤ X₀ for location l5_v3


  Found invariant 2 ≤ X₃ ∧ 3 ≤ X₂+X₃ ∧ 1+X₂ ≤ X₃ ∧ 3 ≤ X₁+X₃ ∧ 1+X₁ ≤ X₃ ∧ 3 ≤ X₀+X₃ ∧ 1+X₀ ≤ X₃ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ X₁ ≤ X₂ ∧ 2 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ X₀ ≤ X₁ ∧ X₀ ≤ 1 ∧ 1 ≤ X₀ for location l7_v4


  Found invariant 2 ≤ X₃ ∧ 3 ≤ X₂+X₃ ∧ 1+X₂ ≤ X₃ ∧ 2 ≤ X₁+X₃ ∧ 2+X₁ ≤ X₃ ∧ 2 ≤ X₀+X₃ ∧ 2+X₀ ≤ X₃ ∧ 1 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 1+X₁ ≤ X₂ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ X₁ ≤ 0 ∧ X₁ ≤ X₀ ∧ X₀+X₁ ≤ 0 ∧ 0 ≤ X₁ ∧ 0 ≤ X₀+X₁ ∧ X₀ ≤ X₁ ∧ X₀ ≤ 0 ∧ 0 ≤ X₀ for location l7_v1


  Found invariant 2 ≤ X₃ ∧ 3 ≤ X₂+X₃ ∧ 1+X₂ ≤ X₃ ∧ 2 ≤ X₁+X₃ ∧ 2+X₁ ≤ X₃ ∧ 2 ≤ X₀+X₃ ∧ 2+X₀ ≤ X₃ ∧ 1 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 1+X₁ ≤ X₂ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ X₁ ≤ 0 ∧ X₁ ≤ X₀ ∧ X₀+X₁ ≤ 0 ∧ 0 ≤ X₁ ∧ 0 ≤ X₀+X₁ ∧ X₀ ≤ X₁ ∧ X₀ ≤ 0 ∧ 0 ≤ X₀ for location l5


  Found invariant 2 ≤ X₃ ∧ 3 ≤ X₂+X₃ ∧ 1+X₂ ≤ X₃ ∧ 3 ≤ X₁+X₃ ∧ 1+X₁ ≤ X₃ ∧ 2 ≤ X₀+X₃ ∧ 2+X₀ ≤ X₃ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ X₁ ≤ X₂ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ X₀ ≤ 0 ∧ 0 ≤ X₀ for location l7_v2


  Found invariant 2 ≤ X₃ ∧ 3 ≤ X₂+X₃ ∧ 1+X₂ ≤ X₃ ∧ 2 ≤ X₁+X₃ ∧ 2+X₁ ≤ X₃ ∧ 3 ≤ X₀+X₃ ∧ 1+X₀ ≤ X₃ ∧ 1 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 1+X₁ ≤ X₂ ∧ 2 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ X₁ ≤ 0 ∧ 1+X₁ ≤ X₀ ∧ X₀+X₁ ≤ 1 ∧ 0 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ X₀ ≤ 1+X₁ ∧ X₀ ≤ 1 ∧ 1 ≤ X₀ for location l7_v3


  Cut unsatisfiable transition [t₁₀₇: l7_v1→l5_v1; t₁₁₃: l5_v1→l6]


All Bounds
Timebounds
  Overall timebound:X₂⋅X₃+X₃^2+3⋅X₃+X₂+10 {O(n^2)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: X₂⋅X₃+X₂+X₃+1 {O(n^2)}
    t₈: 1 {O(1)}
    t₉: X₃^2+X₃ {O(n^2)}
    t₁₂: X₃ {O(n)}
    t₁₃: 1 {O(1)}


Costbounds
  Overall costbound: X₂⋅X₃+X₃^2+3⋅X₃+X₂+10 {O(n^2)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: X₂⋅X₃+X₂+X₃+1 {O(n^2)}
    t₈: 1 {O(1)}
    t₉: X₃^2+X₃ {O(n^2)}
    t₁₂: X₃ {O(n)}
    t₁₃: 1 {O(1)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₀, X₂: X₂ {O(n)}
    t₀, X₃: X₃ {O(n)}
    t₁, X₀: X₀ {O(n)}
    t₁, X₁: X₁ {O(n)}
    t₁, X₂: X₂ {O(n)}
    t₁, X₃: X₃ {O(n)}
    t₂, X₀: X₀ {O(n)}
    t₂, X₁: X₁ {O(n)}
    t₂, X₂: X₂ {O(n)}
    t₂, X₃: X₃ {O(n)}
    t₃, X₀: X₀ {O(n)}
    t₃, X₁: X₁ {O(n)}
    t₃, X₂: X₂ {O(n)}
    t₃, X₃: X₃ {O(n)}
    t₄, X₀: X₀ {O(n)}
    t₄, X₁: X₁ {O(n)}
    t₄, X₂: X₂ {O(n)}
    t₄, X₃: X₃ {O(n)}
    t₅, X₀: X₀ {O(n)}
    t₅, X₁: X₁ {O(n)}
    t₅, X₂: X₂ {O(n)}
    t₅, X₃: X₃ {O(n)}
    t₆, X₀: 0 {O(1)}
    t₆, X₁: 0 {O(1)}
    t₆, X₂: X₂ {O(n)}
    t₆, X₃: X₃ {O(n)}
    t₇, X₀: X₃ {O(n)}
    t₇, X₁: X₃^2+X₃ {O(n^2)}
    t₇, X₂: X₂ {O(n)}
    t₇, X₃: X₃ {O(n)}
    t₈, X₀: X₃ {O(n)}
    t₈, X₁: 0 {O(1)}
    t₈, X₂: X₂ {O(n)}
    t₈, X₃: X₃ {O(n)}
    t₉, X₀: X₃ {O(n)}
    t₉, X₁: X₃^2+X₃ {O(n^2)}
    t₉, X₂: X₂ {O(n)}
    t₉, X₃: X₃ {O(n)}
    t₁₂, X₀: X₃ {O(n)}
    t₁₂, X₁: 0 {O(1)}
    t₁₂, X₂: X₂ {O(n)}
    t₁₂, X₃: X₃ {O(n)}
    t₁₃, X₀: 2⋅X₀+X₃ {O(n)}
    t₁₃, X₁: 2⋅X₁ {O(n)}
    t₁₃, X₂: 3⋅X₂ {O(n)}
    t₁₃, X₃: 3⋅X₃ {O(n)}

