NO

# LoAT Proof:
NO

NO

Initial ITS

Start location: eval_speedFails3_start

Location map:
LoAT_sink -> 0
eval_speedFails3_start -> 1
eval_speedFails3_bb0_in -> 2
eval_speedFails3_0 -> 3
eval_speedFails3_1 -> 4
eval_speedFails3_2 -> 5
eval_speedFails3_3 -> 6
eval_speedFails3_4 -> 7
eval_speedFails3_5 -> 8
eval_speedFails3_6 -> 9
eval_speedFails3_7 -> 10
eval_speedFails3_bb1_in -> 11
eval_speedFails3_bb2_in -> 12
eval_speedFails3_bb3_in -> 13
eval_speedFails3_stop -> 14

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: -2+i1 == 0 /\ i1'=3, i3'=1+i3
   2: -3+i1 == 0 /\ i1'=4, i3'=1+i3
   3: -4+i1 == 0 /\ i1'=5, i3'=1+i3
   4: -5+i1 == 0 /\ i1'=6, i3'=1+i3
   5: -6+i1 == 0 /\ i1'=7, i3'=1+i3, i5'=it2
   6: -7+i1 == 0 /\ i1'=8, i3'=1+i3
   7: -8+i1 == 0 /\ i1'=9, i3'=1+i3
   8: -9+i1 == 0 /\ i1'=10, i3'=1+i3
   9: -10+i1 == 0 /\ i1'=11, i3'=1+i3, i4'=i8
  10: (-i6+i4 <= 0 /\ -11+i1 == 0 /\ i4 >= 0) /\ i1'=12, i3'=1+i3
  11: (-11+i1 == 0 /\ i4 < 0) /\ i1'=13, i3'=1+i3
  12: (-i6+i4 > 0 /\ -11+i1 == 0) /\ i1'=13, i3'=1+i3
  13: (i5 > 0 /\ -12+i1 == 0) /\ i1'=11, i3'=1+i3, i4'=i7+i4
  14: (i5 <= 0 /\ -12+i1 == 0) /\ i1'=11, i3'=1+i3, i4'=-i7+i4
  15: -13+i1 == 0 /\ i1'=14, i3'=1+i3

Dependency graph:
0 -> 1
1 -> 2
2 -> 3
3 -> 4
4 -> 5
5 -> 6
6 -> 7
7 -> 8
8 -> 9
9 -> 10, 9 -> 11, 9 -> 12
10 -> 13, 10 -> 14
11 -> 15
12 -> 15
13 -> 10, 13 -> 11, 13 -> 12
14 -> 10, 14 -> 11, 14 -> 12

Chained Linear Paths

	Applied Chaining

	First rule:
	-1+i1 == 0 /\ i1'=2, i3'=1+i3
	Second rule:
	-2+i1 == 0 /\ i1'=3, i3'=1+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 0, 1
	
	Applied Chaining

	First rule:
	-3+i1 == 0 /\ i1'=4, i3'=1+i3
	Second rule:
	-4+i1 == 0 /\ i1'=5, i3'=1+i3
	New rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 2, 3
	
	Applied Chaining

	First rule:
	-5+i1 == 0 /\ i1'=6, i3'=1+i3
	Second rule:
	-6+i1 == 0 /\ i1'=7, i3'=1+i3, i5'=it2
	New rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=7, i3'=2+i3, i5'=it2
	
	Applied Deletion

	Removed the following rules: 4, 5
	
	Applied Chaining

	First rule:
	-7+i1 == 0 /\ i1'=8, i3'=1+i3
	Second rule:
	-8+i1 == 0 /\ i1'=9, i3'=1+i3
	New rule:
	(0 == 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 6, 7
	
	Applied Chaining

	First rule:
	-9+i1 == 0 /\ i1'=10, i3'=1+i3
	Second rule:
	-10+i1 == 0 /\ i1'=11, i3'=1+i3, i4'=i8
	New rule:
	(0 == 0 /\ -9+i1 == 0) /\ i1'=11, i3'=2+i3, i4'=i8
	
	Applied Deletion

	Removed the following rules: 8, 9
	
	Applied Chaining

	First rule:
	(-11+i1 == 0 /\ i4 < 0) /\ i1'=13, i3'=1+i3
	Second rule:
	-13+i1 == 0 /\ i1'=14, i3'=1+i3
	New rule:
	(0 == 0 /\ -11+i1 == 0 /\ i4 < 0) /\ i1'=14, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 11
	
	Applied Chaining

	First rule:
	(-i6+i4 > 0 /\ -11+i1 == 0) /\ i1'=13, i3'=1+i3
	Second rule:
	-13+i1 == 0 /\ i1'=14, i3'=1+i3
	New rule:
	(0 == 0 /\ -i6+i4 > 0 /\ -11+i1 == 0) /\ i1'=14, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 12, 15
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	Second rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	
	Applied Deletion

	Removed the following rules: 16, 17
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=7, i3'=2+i3, i5'=it2
	Second rule:
	(0 == 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
	New rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=9, i3'=4+i3, i5'=it2
	
	Applied Deletion

	Removed the following rules: 18, 19
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	Second rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=9, i3'=4+i3, i5'=it2
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=9, i3'=8+i3, i5'=it2
	
	Applied Deletion

	Removed the following rules: 23, 24
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=9, i3'=8+i3, i5'=it2
	Second rule:
	(0 == 0 /\ -9+i1 == 0) /\ i1'=11, i3'=2+i3, i4'=i8
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=11, i3'=10+i3, i4'=i8, i5'=it2
	
	Applied Deletion

	Removed the following rules: 20, 25

Start location: eval_speedFails3_start

Location map:
LoAT_sink -> 0
eval_speedFails3_start -> 1
eval_speedFails3_bb0_in -> 2
eval_speedFails3_0 -> 3
eval_speedFails3_1 -> 4
eval_speedFails3_2 -> 5
eval_speedFails3_3 -> 6
eval_speedFails3_4 -> 7
eval_speedFails3_5 -> 8
eval_speedFails3_6 -> 9
eval_speedFails3_7 -> 10
eval_speedFails3_bb1_in -> 11
eval_speedFails3_bb2_in -> 12
eval_speedFails3_bb3_in -> 13
eval_speedFails3_stop -> 14

Rules:
  10: (-i6+i4 <= 0 /\ -11+i1 == 0 /\ i4 >= 0) /\ i1'=12, i3'=1+i3
  13: (i5 > 0 /\ -12+i1 == 0) /\ i1'=11, i3'=1+i3, i4'=i7+i4
  14: (i5 <= 0 /\ -12+i1 == 0) /\ i1'=11, i3'=1+i3, i4'=-i7+i4
  21: (0 == 0 /\ -11+i1 == 0 /\ i4 < 0) /\ i1'=14, i3'=2+i3
  22: (0 == 0 /\ -i6+i4 > 0 /\ -11+i1 == 0) /\ i1'=14, i3'=2+i3
  26: (0 == 0 /\ -1+i1 == 0) /\ i1'=11, i3'=10+i3, i4'=i8, i5'=it2

Dependency graph:
10 -> 13, 10 -> 14
13 -> 10, 13 -> 21, 13 -> 22
14 -> 10, 14 -> 21, 14 -> 22
26 -> 10, 26 -> 21, 26 -> 22

Preprocessed Transitions

	Simplified Guard

	Original rule:
	(0 == 0 /\ -11+i1 == 0 /\ i4 < 0) /\ i1'=14, i3'=2+i3
	New rule:
	(-11+i1 == 0 /\ i4 < 0) /\ i1'=14, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -i6+i4 > 0 /\ -11+i1 == 0) /\ i1'=14, i3'=2+i3
	New rule:
	(-i6+i4 > 0 /\ -11+i1 == 0) /\ i1'=14, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=11, i3'=10+i3, i4'=i8, i5'=it2
	New rule:
	-1+i1 == 0 /\ i1'=11, i3'=10+i3, i4'=i8, i5'=it2

Start location: eval_speedFails3_start

Location map:
LoAT_sink -> 0
eval_speedFails3_start -> 1
eval_speedFails3_bb0_in -> 2
eval_speedFails3_0 -> 3
eval_speedFails3_1 -> 4
eval_speedFails3_2 -> 5
eval_speedFails3_3 -> 6
eval_speedFails3_4 -> 7
eval_speedFails3_5 -> 8
eval_speedFails3_6 -> 9
eval_speedFails3_7 -> 10
eval_speedFails3_bb1_in -> 11
eval_speedFails3_bb2_in -> 12
eval_speedFails3_bb3_in -> 13
eval_speedFails3_stop -> 14

Rules:
  10: (-i6+i4 <= 0 /\ -11+i1 == 0 /\ i4 >= 0) /\ i1'=12, i3'=1+i3
  13: (i5 > 0 /\ -12+i1 == 0) /\ i1'=11, i3'=1+i3, i4'=i7+i4
  14: (i5 <= 0 /\ -12+i1 == 0) /\ i1'=11, i3'=1+i3, i4'=-i7+i4
  27: (-11+i1 == 0 /\ i4 < 0) /\ i1'=14, i3'=2+i3
  28: (-i6+i4 > 0 /\ -11+i1 == 0) /\ i1'=14, i3'=2+i3
  29: -1+i1 == 0 /\ i1'=11, i3'=10+i3, i4'=i8, i5'=it2

Dependency graph:
10 -> 13, 10 -> 14
13 -> 10, 13 -> 27, 13 -> 28
14 -> 10, 14 -> 27, 14 -> 28
29 -> 10, 29 -> 27, 29 -> 28

Step with 29

	Trace

	29[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 28

	Trace

	29[(-1+i1 == 0)]
	28[(-i6+i4 > 0 /\ -11+i1 == 0)]
	
	Blocked

	{}
	{}
	{}
	
Backtrack

	Trace

	29[(-1+i1 == 0)]
	
	Blocked

	{}
	{28[T]}
	
Step with 10

	Trace

	29[(-1+i1 == 0)]
	10[(-i6+i4 <= 0 /\ -11+i1 == 0 /\ i4 >= 0)]
	
	Blocked

	{}
	{28[T]}
	{}
	
Step with 13

	Trace

	29[(-1+i1 == 0)]
	10[(-i6+i4 <= 0 /\ -11+i1 == 0 /\ i4 >= 0)]
	13[(i5 > 0 /\ -12+i1 == 0)]
	
	Blocked

	{}
	{28[T]}
	{}
	{}
	
Nonterm

	Certificate of Non-Termination

	Original rule:
	(-i6+i4 <= 0 /\ -11+i1 == 0 /\ i4 >= 0 /\ i5 > 0) /\ i1'=11, i3'=2+i3, i4'=i7+i4
	New rule:
	(-11+i1 >= 0 /\ i7 <= 0 /\ i6-i4 >= 0 /\ i4 >= 0 /\ 11-i1 >= 0 /\ -i7 <= 0 /\ i5 > 0) /\ i1'=0

		-11+i1 >= 0 [0]: unchanged
		
		i6-i4 >= 0 [0]: eventual decrease yields (i6-i4 >= 0 /\ i6-i7*(-1+it32)-i4 >= 0)
		
		i6-i4 >= 0 [1]: eventual increase yields (i7 <= 0 /\ i6-i4 >= 0)
		
		i4 >= 0 [0]: eventual decrease yields (i7*(-1+it32)+i4 >= 0 /\ i4 >= 0)
		
		i4 >= 0 [1]: eventual increase yields (i4 >= 0 /\ -i7 <= 0)
		
		11-i1 >= 0 [0]: unchanged
		
		i5 > 0 [0]: unchanged
		
		Replacement map: {-11+i1 >= 0 -> -11+i1 >= 0, i6-i4 >= 0 -> (i7 <= 0 /\ i6-i4 >= 0), i4 >= 0 -> (i4 >= 0 /\ -i7 <= 0), 11-i1 >= 0 -> 11-i1 >= 0, i5 > 0 -> i5 > 0}

		Simplified Guard

		Original rule:
		(0 == 0 /\ -i6+i4 <= 0 /\ -11+i1 == 0 /\ i4 >= 0 /\ i5 > 0) /\ i1'=11, i3'=2+i3, i4'=i7+i4
		New rule:
		(-i6+i4 <= 0 /\ -11+i1 == 0 /\ i4 >= 0 /\ i5 > 0) /\ i1'=11, i3'=2+i3, i4'=i7+i4

	Loop Acceleration

	Original rule:
	(-i6+i4 <= 0 /\ -11+i1 == 0 /\ i4 >= 0 /\ i5 > 0) /\ i1'=11, i3'=2+i3, i4'=i7+i4
	New rule:
	(-11+i1 >= 0 /\ i6-i4 >= 0 /\ i7*(-1+it32)+i4 >= 0 /\ i4 >= 0 /\ 11-i1 >= 0 /\ i5 > 0 /\ i6-i7*(-1+it32)-i4 >= 0 /\ -1+it32 >= 0) /\ i1'=i1, i3'=i3+2*it32, i4'=i4+i7*it32

		-11+i1 >= 0 [0]: unchanged
		
		i6-i4 >= 0 [0]: eventual decrease yields (i6-i4 >= 0 /\ i6-i7*(-1+it32)-i4 >= 0)
		
		i6-i4 >= 0 [1]: eventual increase yields (i7 <= 0 /\ i6-i4 >= 0)
		
		i4 >= 0 [0]: eventual decrease yields (i7*(-1+it32)+i4 >= 0 /\ i4 >= 0)
		
		i4 >= 0 [1]: eventual increase yields (i4 >= 0 /\ -i7 <= 0)
		
		11-i1 >= 0 [0]: unchanged
		
		i5 > 0 [0]: unchanged
		
		Replacement map: {-11+i1 >= 0 -> -11+i1 >= 0, i6-i4 >= 0 -> (i6-i4 >= 0 /\ i6-i7*(-1+it32)-i4 >= 0), i4 >= 0 -> (i7*(-1+it32)+i4 >= 0 /\ i4 >= 0), 11-i1 >= 0 -> 11-i1 >= 0, i5 > 0 -> i5 > 0}

	Removed Trivial Updates

	Original rule:
	(-11+i1 >= 0 /\ i6-i4 >= 0 /\ i7*(-1+it32)+i4 >= 0 /\ i4 >= 0 /\ 11-i1 >= 0 /\ i5 > 0 /\ i6-i7*(-1+it32)-i4 >= 0 /\ -1+it32 >= 0) /\ i1'=i1, i3'=i3+2*it32, i4'=i4+i7*it32
	New rule:
	(-11+i1 >= 0 /\ i6-i4 >= 0 /\ i7*(-1+it32)+i4 >= 0 /\ i4 >= 0 /\ 11-i1 >= 0 /\ i5 > 0 /\ i6-i7*(-1+it32)-i4 >= 0 /\ -1+it32 >= 0) /\ i3'=i3+2*it32, i4'=i4+i7*it32

Start location: eval_speedFails3_start

Location map:
LoAT_sink -> 0
eval_speedFails3_start -> 1
eval_speedFails3_bb0_in -> 2
eval_speedFails3_0 -> 3
eval_speedFails3_1 -> 4
eval_speedFails3_2 -> 5
eval_speedFails3_3 -> 6
eval_speedFails3_4 -> 7
eval_speedFails3_5 -> 8
eval_speedFails3_6 -> 9
eval_speedFails3_7 -> 10
eval_speedFails3_bb1_in -> 11
eval_speedFails3_bb2_in -> 12
eval_speedFails3_bb3_in -> 13
eval_speedFails3_stop -> 14

Rules:
  10: (-i6+i4 <= 0 /\ -11+i1 == 0 /\ i4 >= 0) /\ i1'=12, i3'=1+i3
  13: (i5 > 0 /\ -12+i1 == 0) /\ i1'=11, i3'=1+i3, i4'=i7+i4
  14: (i5 <= 0 /\ -12+i1 == 0) /\ i1'=11, i3'=1+i3, i4'=-i7+i4
  27: (-11+i1 == 0 /\ i4 < 0) /\ i1'=14, i3'=2+i3
  28: (-i6+i4 > 0 /\ -11+i1 == 0) /\ i1'=14, i3'=2+i3
  29: -1+i1 == 0 /\ i1'=11, i3'=10+i3, i4'=i8, i5'=it2
  30: (-11+i1 >= 0 /\ i7 <= 0 /\ i6-i4 >= 0 /\ i4 >= 0 /\ 11-i1 >= 0 /\ -i7 <= 0 /\ i5 > 0) /\ i1'=0
  31: (-11+i1 >= 0 /\ i6-i4 >= 0 /\ i7*(-1+it32)+i4 >= 0 /\ i4 >= 0 /\ 11-i1 >= 0 /\ i5 > 0 /\ i6-i7*(-1+it32)-i4 >= 0 /\ -1+it32 >= 0) /\ i3'=i3+2*it32, i4'=i4+i7*it32

Dependency graph:
10 -> 13, 10 -> 14
13 -> 10, 13 -> 27, 13 -> 28, 13 -> 30, 13 -> 31
14 -> 10, 14 -> 27, 14 -> 28, 14 -> 30, 14 -> 31
29 -> 10, 29 -> 27, 29 -> 28, 29 -> 30, 29 -> 31
31 -> 10, 31 -> 27, 31 -> 28, 31 -> 30

Step with 30

	Trace

	29[(-1+i1 == 0)]
	30[(-11+i1 >= 0 /\ i7 <= 0 /\ i6-i4 >= 0 /\ i4 >= 0 /\ 11-i1 >= 0 /\ -i7 <= 0 /\ i5 > 0)]
	
	Blocked

	{}
	{28[T]}
	{30[T]}
	
Refute

	Counterexample

	(i1=1, i3=-10, i6=0, i7=0, i8=0)
	-29-> (i1=11, i3=0, i4=0, i5=1, i6=0, i7=0, i8=0 )
	-30-> ( )
	
NO

Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
MAYBE


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄
  Temp_Vars:  nondef_0
  Locations:  l0, l1, l10, l11, l12, l13, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃, X₄) → l2(X₀, X₁, X₂, X₃, X₄)
  t₃: l1(X₀, X₁, X₂, X₃, X₄) → l4(X₀, X₁, X₂, X₃, X₄)
  t₁₀: l10(X₀, X₁, X₂, X₃, X₄) → l11(X₀, X₁, X₂, X₃, X₄) :|: 0 ≤ X₀ ∧ X₀ ≤ X₂
  t₁₁: l10(X₀, X₁, X₂, X₃, X₄) → l12(X₀, X₁, X₂, X₃, X₄) :|: 1+X₀ ≤ 0
  t₁₂: l10(X₀, X₁, X₂, X₃, X₄) → l12(X₀, X₁, X₂, X₃, X₄) :|: 1+X₂ ≤ X₀
  t₁₃: l11(X₀, X₁, X₂, X₃, X₄) → l10(X₀+X₃, X₁, X₂, X₃, X₄) :|: 1 ≤ X₁
  t₁₄: l11(X₀, X₁, X₂, X₃, X₄) → l10(X₀-X₃, X₁, X₂, X₃, X₄) :|: X₁ ≤ 0
  t₁₅: l12(X₀, X₁, X₂, X₃, X₄) → l13(X₀, X₁, X₂, X₃, X₄)
  t₁: l2(X₀, X₁, X₂, X₃, X₄) → l3(X₀, X₁, X₂, X₃, X₄)
  t₂: l3(X₀, X₁, X₂, X₃, X₄) → l1(X₀, X₁, X₂, X₃, X₄)
  t₄: l4(X₀, X₁, X₂, X₃, X₄) → l5(X₀, X₁, X₂, X₃, X₄)
  t₅: l5(X₀, X₁, X₂, X₃, X₄) → l6(X₀, nondef_0, X₂, X₃, X₄)
  t₆: l6(X₀, X₁, X₂, X₃, X₄) → l7(X₀, X₁, X₂, X₃, X₄)
  t₇: l7(X₀, X₁, X₂, X₃, X₄) → l8(X₀, X₁, X₂, X₃, X₄)
  t₈: l8(X₀, X₁, X₂, X₃, X₄) → l9(X₀, X₁, X₂, X₃, X₄)
  t₉: l9(X₀, X₁, X₂, X₃, X₄) → l10(X₄, X₁, X₂, X₃, X₄)


Preprocessing
  Found invariant 0 ≤ X₂ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₀ for location l11


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄
  Temp_Vars:  nondef_0
  Locations:  l0, l1, l10, l11, l12, l13, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃, X₄) → l2(X₀, X₁, X₂, X₃, X₄)
  t₃: l1(X₀, X₁, X₂, X₃, X₄) → l4(X₀, X₁, X₂, X₃, X₄)
  t₁₀: l10(X₀, X₁, X₂, X₃, X₄) → l11(X₀, X₁, X₂, X₃, X₄) :|: 0 ≤ X₀ ∧ X₀ ≤ X₂
  t₁₁: l10(X₀, X₁, X₂, X₃, X₄) → l12(X₀, X₁, X₂, X₃, X₄) :|: 1+X₀ ≤ 0
  t₁₂: l10(X₀, X₁, X₂, X₃, X₄) → l12(X₀, X₁, X₂, X₃, X₄) :|: 1+X₂ ≤ X₀
  t₁₃: l11(X₀, X₁, X₂, X₃, X₄) → l10(X₀+X₃, X₁, X₂, X₃, X₄) :|: 1 ≤ X₁ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₂
  t₁₄: l11(X₀, X₁, X₂, X₃, X₄) → l10(X₀-X₃, X₁, X₂, X₃, X₄) :|: X₁ ≤ 0 ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₂
  t₁₅: l12(X₀, X₁, X₂, X₃, X₄) → l13(X₀, X₁, X₂, X₃, X₄)
  t₁: l2(X₀, X₁, X₂, X₃, X₄) → l3(X₀, X₁, X₂, X₃, X₄)
  t₂: l3(X₀, X₁, X₂, X₃, X₄) → l1(X₀, X₁, X₂, X₃, X₄)
  t₄: l4(X₀, X₁, X₂, X₃, X₄) → l5(X₀, X₁, X₂, X₃, X₄)
  t₅: l5(X₀, X₁, X₂, X₃, X₄) → l6(X₀, nondef_0, X₂, X₃, X₄)
  t₆: l6(X₀, X₁, X₂, X₃, X₄) → l7(X₀, X₁, X₂, X₃, X₄)
  t₇: l7(X₀, X₁, X₂, X₃, X₄) → l8(X₀, X₁, X₂, X₃, X₄)
  t₈: l8(X₀, X₁, X₂, X₃, X₄) → l9(X₀, X₁, X₂, X₃, X₄)
  t₉: l9(X₀, X₁, X₂, X₃, X₄) → l10(X₄, X₁, X₂, X₃, X₄)


  Found invariant X₄ ≤ X₂ ∧ X₄ ≤ X₀ ∧ 0 ≤ X₄ ∧ 0 ≤ X₂+X₄ ∧ 0 ≤ X₀+X₄ ∧ X₀ ≤ X₄ ∧ 0 ≤ X₂ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₀ for location l11_v1


  Found invariant X₄ ≤ X₀ ∧ X₀ ≤ X₄ for location l10


  Found invariant X₄ ≤ X₂ ∧ 0 ≤ X₄ ∧ 0 ≤ X₂+X₄ ∧ X₁ ≤ X₄ ∧ 0 ≤ X₀+X₄ ∧ X₃ ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ 0 ≤ X₀+X₃ ∧ 0 ≤ X₂ ∧ X₁ ≤ X₂ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ X₁ ≤ 0 ∧ X₁ ≤ X₀ ∧ 0 ≤ X₀ for location l11_v3


  Found invariant X₄ ≤ X₂ ∧ 0 ≤ X₄ ∧ 0 ≤ X₂+X₄ ∧ 1 ≤ X₁+X₄ ∧ X₃ ≤ X₀ ∧ 0 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 1 ≤ X₁ for location l10_v2


  Found invariant X₄ ≤ X₂ ∧ 0 ≤ X₄ ∧ 0 ≤ X₂+X₄ ∧ 1 ≤ X₁+X₄ ∧ 0 ≤ X₀+X₄ ∧ X₃ ≤ X₂ ∧ X₃ ≤ X₀ ∧ 0 ≤ X₂+X₃ ∧ 0 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 0 ≤ X₀ for location l11_v2


  Found invariant X₄ ≤ X₂ ∧ 0 ≤ X₄ ∧ 0 ≤ X₂+X₄ ∧ X₁ ≤ X₄ ∧ 0 ≤ X₀+X₃ ∧ 0 ≤ X₂ ∧ X₁ ≤ X₂ ∧ X₁ ≤ 0 for location l10_v1


All Bounds
Timebounds
  Overall timebound:inf {Infinity}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: 1 {O(1)}
    t₈: 1 {O(1)}
    t₉: 1 {O(1)}
    t₁₀: inf {Infinity}
    t₁₁: 1 {O(1)}
    t₁₂: 1 {O(1)}
    t₁₃: inf {Infinity}
    t₁₄: inf {Infinity}
    t₁₅: 1 {O(1)}


Costbounds
  Overall costbound: inf {Infinity}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: 1 {O(1)}
    t₈: 1 {O(1)}
    t₉: 1 {O(1)}
    t₁₀: inf {Infinity}
    t₁₁: 1 {O(1)}
    t₁₂: 1 {O(1)}
    t₁₃: inf {Infinity}
    t₁₄: inf {Infinity}
    t₁₅: 1 {O(1)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₀, X₂: X₂ {O(n)}
    t₀, X₃: X₃ {O(n)}
    t₀, X₄: X₄ {O(n)}
    t₁, X₀: X₀ {O(n)}
    t₁, X₁: X₁ {O(n)}
    t₁, X₂: X₂ {O(n)}
    t₁, X₃: X₃ {O(n)}
    t₁, X₄: X₄ {O(n)}
    t₂, X₀: X₀ {O(n)}
    t₂, X₁: X₁ {O(n)}
    t₂, X₂: X₂ {O(n)}
    t₂, X₃: X₃ {O(n)}
    t₂, X₄: X₄ {O(n)}
    t₃, X₀: X₀ {O(n)}
    t₃, X₁: X₁ {O(n)}
    t₃, X₂: X₂ {O(n)}
    t₃, X₃: X₃ {O(n)}
    t₃, X₄: X₄ {O(n)}
    t₄, X₀: X₀ {O(n)}
    t₄, X₁: X₁ {O(n)}
    t₄, X₂: X₂ {O(n)}
    t₄, X₃: X₃ {O(n)}
    t₄, X₄: X₄ {O(n)}
    t₅, X₀: X₀ {O(n)}
    t₅, X₂: X₂ {O(n)}
    t₅, X₃: X₃ {O(n)}
    t₅, X₄: X₄ {O(n)}
    t₆, X₀: X₀ {O(n)}
    t₆, X₂: X₂ {O(n)}
    t₆, X₃: X₃ {O(n)}
    t₆, X₄: X₄ {O(n)}
    t₇, X₀: X₀ {O(n)}
    t₇, X₂: X₂ {O(n)}
    t₇, X₃: X₃ {O(n)}
    t₇, X₄: X₄ {O(n)}
    t₈, X₀: X₀ {O(n)}
    t₈, X₂: X₂ {O(n)}
    t₈, X₃: X₃ {O(n)}
    t₈, X₄: X₄ {O(n)}
    t₉, X₀: X₄ {O(n)}
    t₉, X₂: X₂ {O(n)}
    t₉, X₃: X₃ {O(n)}
    t₉, X₄: X₄ {O(n)}
    t₁₀, X₂: X₂ {O(n)}
    t₁₀, X₃: X₃ {O(n)}
    t₁₀, X₄: X₄ {O(n)}
    t₁₁, X₂: 3⋅X₂ {O(n)}
    t₁₁, X₃: 3⋅X₃ {O(n)}
    t₁₁, X₄: 3⋅X₄ {O(n)}
    t₁₂, X₂: 3⋅X₂ {O(n)}
    t₁₂, X₃: 3⋅X₃ {O(n)}
    t₁₂, X₄: 3⋅X₄ {O(n)}
    t₁₃, X₂: X₂ {O(n)}
    t₁₃, X₃: X₃ {O(n)}
    t₁₃, X₄: X₄ {O(n)}
    t₁₄, X₂: X₂ {O(n)}
    t₁₄, X₃: X₃ {O(n)}
    t₁₄, X₄: X₄ {O(n)}
    t₁₅, X₂: 6⋅X₂ {O(n)}
    t₁₅, X₃: 6⋅X₃ {O(n)}
    t₁₅, X₄: 6⋅X₄ {O(n)}

