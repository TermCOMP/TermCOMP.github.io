NO

# LoAT Proof:
NO

NO

Initial ITS

Start location: f3

Location map:
LoAT_sink -> 0
f3 -> 1
f2 -> 2

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-2+i1 == 0 /\ -2+i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4
   2: (1-i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4

Dependency graph:
0 -> 1, 0 -> 2
1 -> 1, 1 -> 2
2 -> 1, 2 -> 2

Refined Dependency Graph

	Removed the following edges: 2 -> 1

Start location: f3

Location map:
LoAT_sink -> 0
f3 -> 1
f2 -> 2

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-2+i1 == 0 /\ -2+i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4
   2: (1-i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4

Dependency graph:
0 -> 1, 0 -> 2
1 -> 1, 1 -> 2
2 -> 2

Step with 0

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 2

	Trace

	0[(-1+i1 == 0)]
	2[(1-i4 >= 0 /\ -2+i1 == 0)]
	
	Blocked

	{}
	{}
	{}
	
Nonterm

	Certificate of Non-Termination

	Original rule:
	(1-i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4
	New rule:
	(1-i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+it7 >= 0) /\ i1'=0

		1-i4 >= 0 [0]: monotonic increase yields 1-i4 >= 0
		
		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {1-i4 >= 0 -> 1-i4 >= 0, -2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Loop Acceleration

	Original rule:
	(1-i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4
	New rule:
	(1-i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+it7 >= 0) /\ i1'=i1, i3'=i3+it7, i4'=i4-it7

		1-i4 >= 0 [0]: monotonic increase yields 1-i4 >= 0
		
		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {1-i4 >= 0 -> 1-i4 >= 0, -2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(1-i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+it7 >= 0) /\ i1'=i1, i3'=i3+it7, i4'=i4-it7
	New rule:
	(1-i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+it7 >= 0) /\ i3'=i3+it7, i4'=i4-it7

Start location: f3

Location map:
LoAT_sink -> 0
f3 -> 1
f2 -> 2

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-2+i1 == 0 /\ -2+i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4
   2: (1-i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4
   3: (1-i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+it7 >= 0) /\ i1'=0
   4: (1-i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+it7 >= 0) /\ i3'=i3+it7, i4'=i4-it7

Dependency graph:
0 -> 1, 0 -> 2, 0 -> 3, 0 -> 4
1 -> 1, 1 -> 2, 1 -> 3, 1 -> 4
2 -> 2, 2 -> 3, 2 -> 4
4 -> 2, 4 -> 3

Step with 3

	Trace

	0[(-1+i1 == 0)]
	3[(1-i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+it7 >= 0)]
	
	Blocked

	{}
	{}
	{3[T]}
	
Refute

	Counterexample

	(i1=1, i3=0, i4=0)
	-0-> (i1=2, i3=1, i4=0 )
	-3-> ( )
	
NO

Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
MAYBE


Initial Problem
  Start:  l0
  Program_Vars:  X₀
  Temp_Vars:  
  Locations:  l0, l1
  Return Locations:  
  Transitions:
  t₀: l0(X₀) → l1(X₀)
  t₁: l1(X₀) → l1(X₀-1) :|: 2 ≤ X₀
  t₂: l1(X₀) → l1(X₀-1) :|: X₀ ≤ 1


Preprocessing
Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀
  Temp_Vars:  
  Locations:  l0, l1
  Return Locations:  
  Transitions:
  t₀: l0(X₀) → l1(X₀)
  t₁: l1(X₀) → l1(X₀-1) :|: 2 ≤ X₀
  t₂: l1(X₀) → l1(X₀-1) :|: X₀ ≤ 1


MPRF for transition t₁: l1(X₀) → l1(X₀-1) :|: 2 ≤ X₀ of depth 1:
  new bound:
    X₀ {O(n)}

  MPRF:
    • l1: [X₀]




  Found invariant 1 ≤ X₀ for location l1_v2


  Found invariant X₀ ≤ 0 for location l1_v1


All Bounds
Timebounds
  Overall timebound:inf {Infinity}
    t₀: 1 {O(1)}
    t₁: X₀ {O(n)}
    t₂: inf {Infinity}


Costbounds
  Overall costbound: inf {Infinity}
    t₀: 1 {O(1)}
    t₁: X₀ {O(n)}
    t₂: inf {Infinity}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₁, X₀: X₀ {O(n)}

