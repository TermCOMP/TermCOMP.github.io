WORST_CASE(?,O(1))

# LoAT Proof:
Initial ITS

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f12 -> 2
f25 -> 3
f36 -> 4

Rules:
   0: (-2+i1 == 0 /\ 9-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
   1: (-3+i1 == 0 /\ 9-i5 >= 0) /\ i1'=3, i3'=1+i3, i5'=1+i5
   2: (-3+i1 == 0 /\ -10+i5 >= 0) /\ i1'=4, i3'=1+i3
   3: (-2+i1 == 0 /\ -10+i4 >= 0) /\ i1'=3, i3'=1+i3, i5'=0, i6'=it2
   4: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=0, i7'=it5, i8'=it4

Dependency graph:
0 -> 0, 0 -> 3
1 -> 1, 1 -> 2
3 -> 1, 3 -> 2
4 -> 0, 4 -> 3

Refined Dependency Graph

	Removed the following edges: 3 -> 2, 4 -> 3

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f12 -> 2
f25 -> 3
f36 -> 4

Rules:
   0: (-2+i1 == 0 /\ 9-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
   1: (-3+i1 == 0 /\ 9-i5 >= 0) /\ i1'=3, i3'=1+i3, i5'=1+i5
   2: (-3+i1 == 0 /\ -10+i5 >= 0) /\ i1'=4, i3'=1+i3
   3: (-2+i1 == 0 /\ -10+i4 >= 0) /\ i1'=3, i3'=1+i3, i5'=0, i6'=it2
   4: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=0, i7'=it5, i8'=it4

Dependency graph:
0 -> 0, 0 -> 3
1 -> 1, 1 -> 2
3 -> 1
4 -> 0

Step with 4

	Trace

	4[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 0

	Trace

	4[(-1+i1 == 0)]
	0[(-2+i1 == 0 /\ 9-i4 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Accelerate

	Loop Acceleration

	Original rule:
	(-2+i1 == 0 /\ 9-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
	New rule:
	(-1+it22 >= 0 /\ -2+i1 >= 0 /\ 10-i4-it22 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it22, i4'=i4+it22

		-2+i1 >= 0 [0]: unchanged
		
		9-i4 >= 0 [0]: montonic decrease yields 10-i4-it22 >= 0
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, 9-i4 >= 0 -> 10-i4-it22 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-1+it22 >= 0 /\ -2+i1 >= 0 /\ 10-i4-it22 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it22, i4'=i4+it22
	New rule:
	(-1+it22 >= 0 /\ -2+i1 >= 0 /\ 10-i4-it22 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+it22, i4'=i4+it22
	
	Instantiation

	Original rule:
	(-1+it22 >= 0 /\ -2+i1 >= 0 /\ 10-i4-it22 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+it22, i4'=i4+it22
	New rule:
	(0 >= 0 /\ -2+i1 >= 0 /\ 9-i4 >= 0 /\ 2-i1 >= 0) /\ i3'=10+i3-i4, i4'=10

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f12 -> 2
f25 -> 3
f36 -> 4

Rules:
   0: (-2+i1 == 0 /\ 9-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
   1: (-3+i1 == 0 /\ 9-i5 >= 0) /\ i1'=3, i3'=1+i3, i5'=1+i5
   2: (-3+i1 == 0 /\ -10+i5 >= 0) /\ i1'=4, i3'=1+i3
   3: (-2+i1 == 0 /\ -10+i4 >= 0) /\ i1'=3, i3'=1+i3, i5'=0, i6'=it2
   4: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=0, i7'=it5, i8'=it4
   5: (0 >= 0 /\ -2+i1 >= 0 /\ 9-i4 >= 0 /\ 2-i1 >= 0) /\ i3'=10+i3-i4, i4'=10

Dependency graph:
0 -> 0, 0 -> 3, 0 -> 5
1 -> 1, 1 -> 2
3 -> 1
4 -> 0, 4 -> 5
5 -> 0, 5 -> 3

	Trace

	4[(-1+i1 == 0)]
	5[(0 >= 0 /\ -2+i1 >= 0 /\ 9-i4 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{}
	{0[T], 5[T]}
	
Step with 3

	Trace

	4[(-1+i1 == 0)]
	5[(0 >= 0 /\ -2+i1 >= 0 /\ 9-i4 >= 0 /\ 2-i1 >= 0)]
	3[(-2+i1 == 0 /\ -10+i4 >= 0)]
	
	Blocked

	{}
	{}
	{0[T], 5[T]}
	{}
	
Step with 1

	Trace

	4[(-1+i1 == 0)]
	5[(0 >= 0 /\ -2+i1 >= 0 /\ 9-i4 >= 0 /\ 2-i1 >= 0)]
	3[(-2+i1 == 0 /\ -10+i4 >= 0)]
	1[(-3+i1 == 0 /\ 9-i5 >= 0)]
	
	Blocked

	{}
	{}
	{0[T], 5[T]}
	{}
	{}
	
Accelerate

	Loop Acceleration

	Original rule:
	(-3+i1 == 0 /\ 9-i5 >= 0) /\ i1'=3, i3'=1+i3, i5'=1+i5
	New rule:
	(-3+i1 >= 0 /\ -1+it45 >= 0 /\ 3-i1 >= 0 /\ 10-it45-i5 >= 0) /\ i1'=i1, i3'=i3+it45, i5'=it45+i5

		-3+i1 >= 0 [0]: unchanged
		
		3-i1 >= 0 [0]: unchanged
		
		9-i5 >= 0 [0]: montonic decrease yields 10-it45-i5 >= 0
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, 3-i1 >= 0 -> 3-i1 >= 0, 9-i5 >= 0 -> 10-it45-i5 >= 0}

	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ -1+it45 >= 0 /\ 3-i1 >= 0 /\ 10-it45-i5 >= 0) /\ i1'=i1, i3'=i3+it45, i5'=it45+i5
	New rule:
	(-3+i1 >= 0 /\ -1+it45 >= 0 /\ 3-i1 >= 0 /\ 10-it45-i5 >= 0) /\ i3'=i3+it45, i5'=it45+i5
	
	Instantiation

	Original rule:
	(-3+i1 >= 0 /\ -1+it45 >= 0 /\ 3-i1 >= 0 /\ 10-it45-i5 >= 0) /\ i3'=i3+it45, i5'=it45+i5
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ 9-i5 >= 0) /\ i3'=10+i3-i5, i5'=10

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f12 -> 2
f25 -> 3
f36 -> 4

Rules:
   0: (-2+i1 == 0 /\ 9-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
   1: (-3+i1 == 0 /\ 9-i5 >= 0) /\ i1'=3, i3'=1+i3, i5'=1+i5
   2: (-3+i1 == 0 /\ -10+i5 >= 0) /\ i1'=4, i3'=1+i3
   3: (-2+i1 == 0 /\ -10+i4 >= 0) /\ i1'=3, i3'=1+i3, i5'=0, i6'=it2
   4: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=0, i7'=it5, i8'=it4
   5: (0 >= 0 /\ -2+i1 >= 0 /\ 9-i4 >= 0 /\ 2-i1 >= 0) /\ i3'=10+i3-i4, i4'=10
   6: (0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ 9-i5 >= 0) /\ i3'=10+i3-i5, i5'=10

Dependency graph:
0 -> 0, 0 -> 3, 0 -> 5
1 -> 1, 1 -> 2, 1 -> 6
3 -> 1, 3 -> 6
4 -> 0, 4 -> 5
5 -> 0, 5 -> 3
6 -> 1, 6 -> 2

	Trace

	4[(-1+i1 == 0)]
	5[(0 >= 0 /\ -2+i1 >= 0 /\ 9-i4 >= 0 /\ 2-i1 >= 0)]
	3[(-2+i1 == 0 /\ -10+i4 >= 0)]
	6[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ 9-i5 >= 0)]
	
	Blocked

	{}
	{}
	{0[T], 5[T]}
	{}
	{1[T], 6[T]}
	
Step with 2

	Trace

	4[(-1+i1 == 0)]
	5[(0 >= 0 /\ -2+i1 >= 0 /\ 9-i4 >= 0 /\ 2-i1 >= 0)]
	3[(-2+i1 == 0 /\ -10+i4 >= 0)]
	6[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ 9-i5 >= 0)]
	2[(-3+i1 == 0 /\ -10+i5 >= 0)]
	
	Blocked

	{}
	{}
	{0[T], 5[T]}
	{}
	{1[T], 6[T]}
	{}
	
Backtrack

	Trace

	4[(-1+i1 == 0)]
	5[(0 >= 0 /\ -2+i1 >= 0 /\ 9-i4 >= 0 /\ 2-i1 >= 0)]
	3[(-2+i1 == 0 /\ -10+i4 >= 0)]
	6[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ 9-i5 >= 0)]
	
	Blocked

	{}
	{}
	{0[T], 5[T]}
	{}
	{1[T], 2[T], 6[T]}
	
Backtrack

	Trace

	4[(-1+i1 == 0)]
	5[(0 >= 0 /\ -2+i1 >= 0 /\ 9-i4 >= 0 /\ 2-i1 >= 0)]
	3[(-2+i1 == 0 /\ -10+i4 >= 0)]
	
	Blocked

	{}
	{}
	{0[T], 5[T]}
	{6[T]}
	
Step with 1

	Trace

	4[(-1+i1 == 0)]
	5[(0 >= 0 /\ -2+i1 >= 0 /\ 9-i4 >= 0 /\ 2-i1 >= 0)]
	3[(-2+i1 == 0 /\ -10+i4 >= 0)]
	1[(-3+i1 == 0 /\ 9-i5 >= 0)]
	
	Blocked

	{}
	{}
	{0[T], 5[T]}
	{6[T]}
	{}
	
Covered

	Trace

	4[(-1+i1 == 0)]
	5[(0 >= 0 /\ -2+i1 >= 0 /\ 9-i4 >= 0 /\ 2-i1 >= 0)]
	3[(-2+i1 == 0 /\ -10+i4 >= 0)]
	
	Blocked

	{}
	{}
	{0[T], 5[T]}
	{1[T], 6[T]}
	
Backtrack

	Trace

	4[(-1+i1 == 0)]
	5[(0 >= 0 /\ -2+i1 >= 0 /\ 9-i4 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{}
	{0[T], 3[T], 5[T]}
	
Backtrack

	Trace

	4[(-1+i1 == 0)]
	
	Blocked

	{}
	{5[T]}
	
Step with 0

	Trace

	4[(-1+i1 == 0)]
	0[(-2+i1 == 0 /\ 9-i4 >= 0)]
	
	Blocked

	{}
	{5[T]}
	{}
	
Covered

	Trace

	4[(-1+i1 == 0)]
	
	Blocked

	{}
	{0[T], 5[T]}
	
Backtrack

	Trace

	Blocked

	{4[T]}
	
Accept

Constant


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄
  Temp_Vars:  F, G
  Locations:  l0, l1, l2, l3
  Return Locations:  
  Transitions:
  t₄: l0(X₀, X₁, X₂, X₃, X₄) → l1(0, X₁, X₂, F, G)
  t₀: l1(X₀, X₁, X₂, X₃, X₄) → l1(1+X₀, X₁, X₂, X₃, X₄) :|: X₀ ≤ 9
  t₃: l1(X₀, X₁, X₂, X₃, X₄) → l2(X₀, 0, F, X₃, X₄) :|: 10 ≤ X₀
  t₁: l2(X₀, X₁, X₂, X₃, X₄) → l2(X₀, 1+X₁, X₂, X₃, X₄) :|: X₁ ≤ 9
  t₂: l2(X₀, X₁, X₂, X₃, X₄) → l3(X₀, X₁, X₂, X₃, X₄) :|: 10 ≤ X₁


Preprocessing
  Eliminate variables [F; G; X₂; X₃; X₄] that do not contribute to the problem


  Found invariant X₀ ≤ 10 ∧ 0 ≤ X₀ for location l1


  Found invariant X₁ ≤ 10 ∧ X₁ ≤ X₀ ∧ X₀+X₁ ≤ 20 ∧ 0 ≤ X₁ ∧ 10 ≤ X₀+X₁ ∧ X₀ ≤ 10+X₁ ∧ X₀ ≤ 10 ∧ 10 ≤ X₀ for location l2


  Found invariant X₁ ≤ 10 ∧ X₁ ≤ X₀ ∧ X₀+X₁ ≤ 20 ∧ 10 ≤ X₁ ∧ 20 ≤ X₀+X₁ ∧ X₀ ≤ X₁ ∧ X₀ ≤ 10 ∧ 10 ≤ X₀ for location l3


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁
  Temp_Vars:  
  Locations:  l0, l1, l2, l3
  Return Locations:  
  Transitions:
  t₅: l0(X₀, X₁) → l1(0, X₁)
  t₆: l1(X₀, X₁) → l1(1+X₀, X₁) :|: X₀ ≤ 9 ∧ X₀ ≤ 10 ∧ 0 ≤ X₀
  t₇: l1(X₀, X₁) → l2(X₀, 0) :|: 10 ≤ X₀ ∧ X₀ ≤ 10 ∧ 0 ≤ X₀
  t₈: l2(X₀, X₁) → l2(X₀, 1+X₁) :|: X₁ ≤ 9 ∧ X₀+X₁ ≤ 20 ∧ X₀ ≤ 10 ∧ X₀ ≤ 10+X₁ ∧ X₁ ≤ 10 ∧ 10 ≤ X₀ ∧ 10 ≤ X₀+X₁ ∧ X₁ ≤ X₀ ∧ 0 ≤ X₁
  t₉: l2(X₀, X₁) → l3(X₀, X₁) :|: 10 ≤ X₁ ∧ X₀+X₁ ≤ 20 ∧ X₀ ≤ 10 ∧ X₀ ≤ 10+X₁ ∧ X₁ ≤ 10 ∧ 10 ≤ X₀ ∧ 10 ≤ X₀+X₁ ∧ X₁ ≤ X₀ ∧ 0 ≤ X₁


MPRF for transition t₆: l1(X₀, X₁) → l1(1+X₀, X₁) :|: X₀ ≤ 9 ∧ X₀ ≤ 10 ∧ 0 ≤ X₀ of depth 1:
  new bound:
    11 {O(1)}

  MPRF:
    • l1: [11-X₀]




MPRF for transition t₈: l2(X₀, X₁) → l2(X₀, 1+X₁) :|: X₁ ≤ 9 ∧ X₀+X₁ ≤ 20 ∧ X₀ ≤ 10 ∧ X₀ ≤ 10+X₁ ∧ X₁ ≤ 10 ∧ 10 ≤ X₀ ∧ 10 ≤ X₀+X₁ ∧ X₁ ≤ X₀ ∧ 0 ≤ X₁ of depth 1:
  new bound:
    11 {O(1)}

  MPRF:
    • l2: [1+X₀-X₁]




All Bounds
Timebounds
  Overall timebound:25 {O(1)}
    t₅: 1 {O(1)}
    t₆: 11 {O(1)}
    t₇: 1 {O(1)}
    t₈: 11 {O(1)}
    t₉: 1 {O(1)}


Costbounds
  Overall costbound: 25 {O(1)}
    t₅: 1 {O(1)}
    t₆: 11 {O(1)}
    t₇: 1 {O(1)}
    t₈: 11 {O(1)}
    t₉: 1 {O(1)}


Sizebounds
    t₅, X₀: 0 {O(1)}
    t₅, X₁: X₁ {O(n)}
    t₆, X₀: 10 {O(1)}
    t₆, X₁: X₁ {O(n)}
    t₇, X₀: 10 {O(1)}
    t₇, X₁: 0 {O(1)}
    t₈, X₀: 10 {O(1)}
    t₈, X₁: 10 {O(1)}
    t₉, X₀: 10 {O(1)}
    t₉, X₁: 10 {O(1)}

