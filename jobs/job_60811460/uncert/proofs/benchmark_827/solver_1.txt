WORST_CASE(Omega(n^3),O(n^3))

# LoAT Proof:
WORST_CASE(Omega(n^3),?)

WORST_CASE(Omega(n^1),?)
WORST_CASE(Omega(n^3),?)
Initial ITS

Start location: l0

Location map:
LoAT_sink -> 0
l0 -> 1
l1 -> 2
l2 -> 3

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-2+i1 == 0 /\ i4 > 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i6'=i6+i5^2
   2: (-2+i1 == 0 /\ i4 > 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i6'=1+i6+i5^2
   3: -2+i1 == 0 /\ i1'=3, i3'=1+i3
   4: (i6 > 0 /\ -3+i1 == 0) /\ i1'=3, i3'=1+i3, i6'=-1+i6

Dependency graph:
0 -> 1, 0 -> 2, 0 -> 3
1 -> 1, 1 -> 2, 1 -> 3
2 -> 1, 2 -> 2, 2 -> 3
3 -> 4
4 -> 4

Step with 0

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 3

	Trace

	0[(-1+i1 == 0)]
	3[(-2+i1 == 0)]
	
	Blocked

	{}
	{}
	{}
	
Step with 4

	Trace

	0[(-1+i1 == 0)]
	3[(-2+i1 == 0)]
	4[(i6 > 0 /\ -3+i1 == 0)]
	
	Blocked

	{}
	{}
	{}
	{}
	
Poly(n^1)

Accelerate

	Loop Acceleration

	Original rule:
	(i6 > 0 /\ -3+i1 == 0) /\ i1'=3, i3'=1+i3, i6'=-1+i6
	New rule:
	(-3+i1 >= 0 /\ 3-i1 >= 0 /\ 1+i6-it16 > 0 /\ -1+it16 >= 0) /\ i1'=i1, i3'=it16+i3, i6'=i6-it16

		i6 > 0 [0]: montonic decrease yields 1+i6-it16 > 0
		
		-3+i1 >= 0 [0]: unchanged
		
		3-i1 >= 0 [0]: unchanged
		
		Replacement map: {i6 > 0 -> 1+i6-it16 > 0, -3+i1 >= 0 -> -3+i1 >= 0, 3-i1 >= 0 -> 3-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ 3-i1 >= 0 /\ 1+i6-it16 > 0 /\ -1+it16 >= 0) /\ i1'=i1, i3'=it16+i3, i6'=i6-it16
	New rule:
	(-3+i1 >= 0 /\ 3-i1 >= 0 /\ 1+i6-it16 > 0 /\ -1+it16 >= 0) /\ i3'=it16+i3, i6'=i6-it16
	
	Instantiation

	Original rule:
	(-3+i1 >= 0 /\ 3-i1 >= 0 /\ 1+i6-it16 > 0 /\ -1+it16 >= 0) /\ i3'=it16+i3, i6'=i6-it16
	New rule:
	(-3+i1 >= 0 /\ 1 > 0 /\ 3-i1 >= 0 /\ -1+i6 >= 0) /\ i3'=i6+i3, i6'=0

Start location: l0

Location map:
LoAT_sink -> 0
l0 -> 1
l1 -> 2
l2 -> 3

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-2+i1 == 0 /\ i4 > 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i6'=i6+i5^2
   2: (-2+i1 == 0 /\ i4 > 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i6'=1+i6+i5^2
   3: -2+i1 == 0 /\ i1'=3, i3'=1+i3
   4: (i6 > 0 /\ -3+i1 == 0) /\ i1'=3, i3'=1+i3, i6'=-1+i6
   5: (-3+i1 >= 0 /\ 1 > 0 /\ 3-i1 >= 0 /\ -1+i6 >= 0) /\ i3'=i6+i3, i6'=0

Dependency graph:
0 -> 1, 0 -> 2, 0 -> 3
1 -> 1, 1 -> 2, 1 -> 3
2 -> 1, 2 -> 2, 2 -> 3
3 -> 4, 3 -> 5
4 -> 4, 4 -> 5
5 -> 4

	Trace

	0[(-1+i1 == 0)]
	3[(-2+i1 == 0)]
	5[(-3+i1 >= 0 /\ 1 > 0 /\ 3-i1 >= 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{}
	{}
	{4[T], 5[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	3[(-2+i1 == 0)]
	
	Blocked

	{}
	{}
	{5[T]}
	
Step with 4

	Trace

	0[(-1+i1 == 0)]
	3[(-2+i1 == 0)]
	4[(i6 > 0 /\ -3+i1 == 0)]
	
	Blocked

	{}
	{}
	{5[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	3[(-2+i1 == 0)]
	
	Blocked

	{}
	{}
	{4[T], 5[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{3[T]}
	
Step with 2

	Trace

	0[(-1+i1 == 0)]
	2[(-2+i1 == 0 /\ i4 > 0)]
	
	Blocked

	{}
	{3[T]}
	{}
	
Accelerate

	Loop Acceleration

	Original rule:
	(-2+i1 == 0 /\ i4 > 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i6'=1+i6+i5^2
	New rule:
	(-2+i1 >= 0 /\ -1+it38 >= 0 /\ 1+i4-it38 > 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it38, i4'=i4-it38, i6'=i6+i5^2*it38+it38

		-2+i1 >= 0 [0]: unchanged
		
		i4 > 0 [0]: montonic decrease yields 1+i4-it38 > 0
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, i4 > 0 -> 1+i4-it38 > 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-2+i1 >= 0 /\ -1+it38 >= 0 /\ 1+i4-it38 > 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it38, i4'=i4-it38, i6'=i6+i5^2*it38+it38
	New rule:
	(-2+i1 >= 0 /\ -1+it38 >= 0 /\ 1+i4-it38 > 0 /\ 2-i1 >= 0) /\ i3'=i3+it38, i4'=i4-it38, i6'=i6+i5^2*it38+it38
	
	Instantiation

	Original rule:
	(-2+i1 >= 0 /\ -1+it38 >= 0 /\ 1+i4-it38 > 0 /\ 2-i1 >= 0) /\ i3'=i3+it38, i4'=i4-it38, i6'=i6+i5^2*it38+it38
	New rule:
	(1 > 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+i4, i4'=0, i6'=i4*i5^2+i6+i4

Start location: l0

Location map:
LoAT_sink -> 0
l0 -> 1
l1 -> 2
l2 -> 3

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-2+i1 == 0 /\ i4 > 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i6'=i6+i5^2
   2: (-2+i1 == 0 /\ i4 > 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i6'=1+i6+i5^2
   3: -2+i1 == 0 /\ i1'=3, i3'=1+i3
   4: (i6 > 0 /\ -3+i1 == 0) /\ i1'=3, i3'=1+i3, i6'=-1+i6
   5: (-3+i1 >= 0 /\ 1 > 0 /\ 3-i1 >= 0 /\ -1+i6 >= 0) /\ i3'=i6+i3, i6'=0
   6: (1 > 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+i4, i4'=0, i6'=i4*i5^2+i6+i4

Dependency graph:
0 -> 1, 0 -> 2, 0 -> 3, 0 -> 6
1 -> 1, 1 -> 2, 1 -> 3, 1 -> 6
2 -> 1, 2 -> 2, 2 -> 3, 2 -> 6
3 -> 4, 3 -> 5
4 -> 4, 4 -> 5
5 -> 4
6 -> 1, 6 -> 2, 6 -> 3

	Trace

	0[(-1+i1 == 0)]
	6[(1 > 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{3[T]}
	{2[T], 6[T]}
	
Step with 3

	Trace

	0[(-1+i1 == 0)]
	6[(1 > 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	3[(-2+i1 == 0)]
	
	Blocked

	{}
	{3[T]}
	{2[T], 6[T]}
	{}
	
Step with 5

	Trace

	0[(-1+i1 == 0)]
	6[(1 > 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	3[(-2+i1 == 0)]
	5[(-3+i1 >= 0 /\ 1 > 0 /\ 3-i1 >= 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{3[T]}
	{2[T], 6[T]}
	{}
	{5[T]}
	
Poly(n^3)

Backtrack

	Trace

	0[(-1+i1 == 0)]
	6[(1 > 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	3[(-2+i1 == 0)]
	
	Blocked

	{}
	{3[T]}
	{2[T], 6[T]}
	{5[T]}
	
Step with 4

	Trace

	0[(-1+i1 == 0)]
	6[(1 > 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	3[(-2+i1 == 0)]
	4[(i6 > 0 /\ -3+i1 == 0)]
	
	Blocked

	{}
	{3[T]}
	{2[T], 6[T]}
	{5[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	6[(1 > 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	3[(-2+i1 == 0)]
	
	Blocked

	{}
	{3[T]}
	{2[T], 6[T]}
	{4[T], 5[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	6[(1 > 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{3[T]}
	{2[T], 3[T], 6[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{3[T], 6[T]}
	
Step with 2

	Trace

	0[(-1+i1 == 0)]
	2[(-2+i1 == 0 /\ i4 > 0)]
	
	Blocked

	{}
	{3[T], 6[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{2[T], 3[T], 6[T]}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	1[(-2+i1 == 0 /\ i4 > 0)]
	
	Blocked

	{}
	{2[T], 3[T], 6[T]}
	{}
	
Accelerate

	Loop Acceleration

	Original rule:
	(-2+i1 == 0 /\ i4 > 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i6'=i6+i5^2
	New rule:
	(1-it79+i4 > 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+it79 >= 0) /\ i1'=i1, i3'=it79+i3, i4'=-it79+i4, i6'=i6+it79*i5^2

		-2+i1 >= 0 [0]: unchanged
		
		i4 > 0 [0]: montonic decrease yields 1-it79+i4 > 0
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, i4 > 0 -> 1-it79+i4 > 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(1-it79+i4 > 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+it79 >= 0) /\ i1'=i1, i3'=it79+i3, i4'=-it79+i4, i6'=i6+it79*i5^2
	New rule:
	(1-it79+i4 > 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+it79 >= 0) /\ i3'=it79+i3, i4'=-it79+i4, i6'=i6+it79*i5^2
	
	Instantiation

	Original rule:
	(1-it79+i4 > 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+it79 >= 0) /\ i3'=it79+i3, i4'=-it79+i4, i6'=i6+it79*i5^2
	New rule:
	(1 > 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+i4, i4'=0, i6'=i4*i5^2+i6

Start location: l0

Location map:
LoAT_sink -> 0
l0 -> 1
l1 -> 2
l2 -> 3

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-2+i1 == 0 /\ i4 > 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i6'=i6+i5^2
   2: (-2+i1 == 0 /\ i4 > 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i6'=1+i6+i5^2
   3: -2+i1 == 0 /\ i1'=3, i3'=1+i3
   4: (i6 > 0 /\ -3+i1 == 0) /\ i1'=3, i3'=1+i3, i6'=-1+i6
   5: (-3+i1 >= 0 /\ 1 > 0 /\ 3-i1 >= 0 /\ -1+i6 >= 0) /\ i3'=i6+i3, i6'=0
   6: (1 > 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+i4, i4'=0, i6'=i4*i5^2+i6+i4
   7: (1 > 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+i4, i4'=0, i6'=i4*i5^2+i6

Dependency graph:
0 -> 1, 0 -> 2, 0 -> 3, 0 -> 6, 0 -> 7
1 -> 1, 1 -> 2, 1 -> 3, 1 -> 6, 1 -> 7
2 -> 1, 2 -> 2, 2 -> 3, 2 -> 6, 2 -> 7
3 -> 4, 3 -> 5
4 -> 4, 4 -> 5
5 -> 4
6 -> 1, 6 -> 2, 6 -> 3, 6 -> 7
7 -> 1, 7 -> 2, 7 -> 3, 7 -> 6

	Trace

	0[(-1+i1 == 0)]
	7[(1 > 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{2[T], 3[T], 6[T]}
	{1[T], 7[T]}
	
Step with 3

	Trace

	0[(-1+i1 == 0)]
	7[(1 > 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	3[(-2+i1 == 0)]
	
	Blocked

	{}
	{2[T], 3[T], 6[T]}
	{1[T], 2[T], 6[T], 7[T]}
	{}
	
Step with 4

	Trace

	0[(-1+i1 == 0)]
	7[(1 > 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	3[(-2+i1 == 0)]
	4[(i6 > 0 /\ -3+i1 == 0)]
	
	Blocked

	{}
	{2[T], 3[T], 6[T]}
	{1[T], 2[T], 6[T], 7[T]}
	{}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	7[(1 > 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	3[(-2+i1 == 0)]
	
	Blocked

	{}
	{2[T], 3[T], 6[T]}
	{1[T], 2[T], 6[T], 7[T]}
	{4[T]}
	
Step with 5

	Trace

	0[(-1+i1 == 0)]
	7[(1 > 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	3[(-2+i1 == 0)]
	5[(-3+i1 >= 0 /\ 1 > 0 /\ 3-i1 >= 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{2[T], 3[T], 6[T]}
	{1[T], 2[T], 6[T], 7[T]}
	{4[T]}
	{5[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	7[(1 > 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	3[(-2+i1 == 0)]
	
	Blocked

	{}
	{2[T], 3[T], 6[T]}
	{1[T], 2[T], 6[T], 7[T]}
	{4[T], 5[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	7[(1 > 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{2[T], 3[T], 6[T]}
	{1[T], 2[T], 3[T], 6[T], 7[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{2[T], 3[T], 6[T], 7[T]}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	1[(-2+i1 == 0 /\ i4 > 0)]
	
	Blocked

	{}
	{2[T], 3[T], 6[T], 7[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{1[T], 2[T], 3[T], 6[T], 7[T]}
	
Backtrack

	Trace

	Blocked

	{0[T]}
	
Accept

Poly(n^3)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^3))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂) → l1(X₀, X₁, X₂)
  t₁: l1(X₀, X₁, X₂) → l1(X₀-1, X₁, (X₁)²+X₂) :|: 1 ≤ X₀
  t₂: l1(X₀, X₁, X₂) → l1(X₀-1, X₁, 1+(X₁)²+X₂) :|: 1 ≤ X₀
  t₃: l1(X₀, X₁, X₂) → l2(X₀, X₁, X₂)
  t₄: l2(X₀, X₁, X₂) → l2(X₀, X₁, X₂-1) :|: 1 ≤ X₂


Preprocessing
Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂) → l1(X₀, X₁, X₂)
  t₁: l1(X₀, X₁, X₂) → l1(X₀-1, X₁, (X₁)²+X₂) :|: 1 ≤ X₀
  t₂: l1(X₀, X₁, X₂) → l1(X₀-1, X₁, 1+(X₁)²+X₂) :|: 1 ≤ X₀
  t₃: l1(X₀, X₁, X₂) → l2(X₀, X₁, X₂)
  t₄: l2(X₀, X₁, X₂) → l2(X₀, X₁, X₂-1) :|: 1 ≤ X₂


MPRF for transition t₁: l1(X₀, X₁, X₂) → l1(X₀-1, X₁, Temp_Int₄₁+X₂) :|: 1 ≤ X₀ ∧ 0 ≤ Temp_Int₄₁ of depth 1:
  new bound:
    X₀ {O(n)}

  MPRF:
    • l1: [X₀]




MPRF for transition t₂: l1(X₀, X₁, X₂) → l1(X₀-1, X₁, Temp_Int₄₂+Temp_Int₄₃+X₂) :|: 1 ≤ X₀ ∧ 0 ≤ Temp_Int₄₃ of depth 1:
  new bound:
    X₀ {O(n)}

  MPRF:
    • l1: [X₀]




MPRF for transition t₄: l2(X₀, X₁, X₂) → l2(X₀, X₁, X₂-1) :|: 1 ≤ X₂ of depth 1:
  new bound:
    8⋅X₀⋅X₁^2+16⋅X₁^2+4⋅X₂+6⋅X₀+10 {O(n^3)}

  MPRF:
    • l2: [X₂]




  Found invariant 0 ≤ X₂ for location l2_v1


All Bounds
Timebounds
  Overall timebound:8⋅X₀⋅X₁^2+16⋅X₁^2+4⋅X₂+8⋅X₀+12 {O(n^3)}
    t₀: 1 {O(1)}
    t₁: X₀ {O(n)}
    t₂: X₀ {O(n)}
    t₃: 1 {O(1)}
    t₄: 8⋅X₀⋅X₁^2+16⋅X₁^2+4⋅X₂+6⋅X₀+10 {O(n^3)}


Costbounds
  Overall costbound: 8⋅X₀⋅X₁^2+16⋅X₁^2+4⋅X₂+8⋅X₀+12 {O(n^3)}
    t₀: 1 {O(1)}
    t₁: X₀ {O(n)}
    t₂: X₀ {O(n)}
    t₃: 1 {O(1)}
    t₄: 8⋅X₀⋅X₁^2+16⋅X₁^2+4⋅X₂+6⋅X₀+10 {O(n^3)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₀, X₂: X₂ {O(n)}
    t₁, X₀: X₀ {O(n)}
    t₁, X₁: X₁ {O(n)}
    t₁, X₂: 3⋅X₀⋅X₁^2+6⋅X₁^2+2⋅X₀+X₂+3 {O(n^3)}
    t₂, X₀: X₀ {O(n)}
    t₂, X₁: X₁ {O(n)}
    t₂, X₂: 5⋅X₀⋅X₁^2+10⋅X₁^2+2⋅X₂+4⋅X₀+7 {O(n^3)}
    t₃, X₀: 3⋅X₀ {O(n)}
    t₃, X₁: 3⋅X₁ {O(n)}
    t₃, X₂: 8⋅X₀⋅X₁^2+16⋅X₁^2+4⋅X₂+6⋅X₀+10 {O(n^3)}
    t₄, X₀: 3⋅X₀ {O(n)}
    t₄, X₁: 3⋅X₁ {O(n)}
    t₄, X₂: 8⋅X₀⋅X₁^2+16⋅X₁^2+4⋅X₂+6⋅X₀+10 {O(n^3)}

