WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [f300/9]
1. non_recursive  : [exit_location/1]
2. non_recursive  : [f1/5]
3. non_recursive  : [f300_loop_cont/6]
4. non_recursive  : [f2/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into f300/9
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into f300_loop_cont/6
4. SCC is partially evaluated into f2/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations f300/9 
* CE 6 is refined into CE [9] 
* CE 5 is refined into CE [10] 
* CE 2 is refined into CE [11] 
* CE 3 is refined into CE [12] 
* CE 4 is refined into CE [13] 


### Cost equations --> "Loop" of f300/9 
* CEs [11] --> Loop 9 
* CEs [12] --> Loop 10 
* CEs [13] --> Loop 11 
* CEs [9] --> Loop 12 
* CEs [10] --> Loop 13 

### Ranking functions of CR f300(A,B,C,D,F,G,H,I,J) 
* RF of phase [9,10,11]: [-A+B]

#### Partial ranking functions of CR f300(A,B,C,D,F,G,H,I,J) 
* Partial RF of phase [9,10,11]:
  - RF of loop [9:1,10:1,11:1]:
    -A+B


### Specialization of cost equations f300_loop_cont/6 
* CE 8 is refined into CE [14] 
* CE 7 is refined into CE [15] 


### Cost equations --> "Loop" of f300_loop_cont/6 
* CEs [14] --> Loop 14 
* CEs [15] --> Loop 15 

### Ranking functions of CR f300_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR f300_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations f2/5 
* CE 1 is refined into CE [16,17,18,19] 


### Cost equations --> "Loop" of f2/5 
* CEs [16] --> Loop 16 
* CEs [17,19] --> Loop 17 
* CEs [18] --> Loop 18 

### Ranking functions of CR f2(A,B,C,D,F) 

#### Partial ranking functions of CR f2(A,B,C,D,F) 


Computing Bounds
=====================================

#### Cost of chains of f300(A,B,C,D,F,G,H,I,J):
* Chain [[9,10,11],13]: 3*it(9)+0
  Such that:aux(3) =< -A+B
it(9) =< aux(3)

  with precondition: [F=2,G=H,B>=A+1,G>=A,B>=G] 

* Chain [[9,10,11],12]: 3*it(9)+0
  Such that:aux(4) =< -A+B
it(9) =< aux(4)

  with precondition: [F=3,B>=A+1] 

* Chain [13]: 0
  with precondition: [F=2,I=C,A=G,B=H,A>=B] 

* Chain [12]: 0
  with precondition: [F=3] 


#### Cost of chains of f300_loop_cont(A,B,C,D,E,F):
* Chain [15]: 0
  with precondition: [A=2] 

* Chain [14]: 0
  with precondition: [A=3] 


#### Cost of chains of f2(A,B,C,D,F):
* Chain [18]: 0
  with precondition: [] 

* Chain [17]: 6*s(2)+0
  Such that:aux(5) =< -A+B
s(2) =< aux(5)

  with precondition: [B>=A+1] 

* Chain [16]: 0
  with precondition: [A>=B] 


Closed-form bounds of f2(A,B,C,D,F): 
-------------------------------------
* Chain [18] with precondition: [] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [17] with precondition: [B>=A+1] 
    - Upper bound: -6*A+6*B 
    - Complexity: n 
* Chain [16] with precondition: [A>=B] 
    - Upper bound: 0 
    - Complexity: constant 

### Maximum cost of f2(A,B,C,D,F): nat(-A+B)*6 
Asymptotic class: n 
* Total analysis performed in 56 ms.

