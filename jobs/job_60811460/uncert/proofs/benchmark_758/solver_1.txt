WORST_CASE(Omega(n^1),O(n^1))

# LoAT Proof:
WORST_CASE(Omega(n^1),?)

WORST_CASE(Omega(n^1),?)
Initial ITS

Start location: eval_wise_start

Location map:
LoAT_sink -> 0
eval_wise_start -> 1
eval_wise_bb0_in -> 2
eval_wise_0 -> 3
eval_wise_1 -> 4
eval_wise_2 -> 5
eval_wise_bb2_in -> 6
eval_wise_bb1_in -> 7
eval_wise__critedge_in -> 8
eval_wise_stop -> 9

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: -2+i1 == 0 /\ i1'=3, i3'=1+i3
   2: -3+i1 == 0 /\ i1'=4, i3'=1+i3
   3: -4+i1 == 0 /\ i1'=5, i3'=1+i3
   4: (i6 < 0 /\ -5+i1 == 0) /\ i1'=6, i3'=1+i3
   5: (i7 < 0 /\ -5+i1 == 0) /\ i1'=6, i3'=1+i3
   6: (i6 >= 0 /\ i7 >= 0 /\ -5+i1 == 0) /\ i1'=7, i3'=1+i3, i4'=i6, i5'=i7
   7: (-2+i4-i5 > 0 /\ -7+i1 == 0) /\ i1'=8, i3'=1+i3
   8: (-2-i4+i5 > 0 /\ -7+i1 == 0) /\ i1'=8, i3'=1+i3
   9: (-2-i4+i5 <= 0 /\ -2+i4-i5 <= 0 /\ -7+i1 == 0) /\ i1'=6, i3'=1+i3
  10: (i4-i5 < 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i4'=1+i4
  11: (i4-i5 < 0 /\ i4-i5 >= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3
  12: (i4-i5 < 0 /\ i4-i5 >= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i4'=1+i4, i5'=1+i5
  13: (i4-i5 >= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i5'=1+i5
  14: -6+i1 == 0 /\ i1'=9, i3'=1+i3

Dependency graph:
0 -> 1
1 -> 2
2 -> 3
3 -> 4, 3 -> 5, 3 -> 6
4 -> 14
5 -> 14
6 -> 7, 6 -> 8, 6 -> 9
7 -> 10, 7 -> 11, 7 -> 12, 7 -> 13
8 -> 10, 8 -> 11, 8 -> 12, 8 -> 13
9 -> 14
10 -> 7, 10 -> 8, 10 -> 9
11 -> 7, 11 -> 8, 11 -> 9
12 -> 7, 12 -> 8, 12 -> 9
13 -> 7, 13 -> 8, 13 -> 9

Chained Linear Paths

	Applied Chaining

	First rule:
	-1+i1 == 0 /\ i1'=2, i3'=1+i3
	Second rule:
	-2+i1 == 0 /\ i1'=3, i3'=1+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 0, 1
	
	Applied Chaining

	First rule:
	-3+i1 == 0 /\ i1'=4, i3'=1+i3
	Second rule:
	-4+i1 == 0 /\ i1'=5, i3'=1+i3
	New rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 2, 3
	
	Applied Chaining

	First rule:
	(i6 < 0 /\ -5+i1 == 0) /\ i1'=6, i3'=1+i3
	Second rule:
	-6+i1 == 0 /\ i1'=9, i3'=1+i3
	New rule:
	(0 == 0 /\ i6 < 0 /\ -5+i1 == 0) /\ i1'=9, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 4
	
	Applied Chaining

	First rule:
	(i7 < 0 /\ -5+i1 == 0) /\ i1'=6, i3'=1+i3
	Second rule:
	-6+i1 == 0 /\ i1'=9, i3'=1+i3
	New rule:
	(0 == 0 /\ i7 < 0 /\ -5+i1 == 0) /\ i1'=9, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 5
	
	Applied Chaining

	First rule:
	(-2-i4+i5 <= 0 /\ -2+i4-i5 <= 0 /\ -7+i1 == 0) /\ i1'=6, i3'=1+i3
	Second rule:
	-6+i1 == 0 /\ i1'=9, i3'=1+i3
	New rule:
	(0 == 0 /\ -2-i4+i5 <= 0 /\ -2+i4-i5 <= 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 9, 14
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	Second rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	
	Applied Deletion

	Removed the following rules: 15, 16

Start location: eval_wise_start

Location map:
LoAT_sink -> 0
eval_wise_start -> 1
eval_wise_bb0_in -> 2
eval_wise_0 -> 3
eval_wise_1 -> 4
eval_wise_2 -> 5
eval_wise_bb2_in -> 6
eval_wise_bb1_in -> 7
eval_wise__critedge_in -> 8
eval_wise_stop -> 9

Rules:
   6: (i6 >= 0 /\ i7 >= 0 /\ -5+i1 == 0) /\ i1'=7, i3'=1+i3, i4'=i6, i5'=i7
   7: (-2+i4-i5 > 0 /\ -7+i1 == 0) /\ i1'=8, i3'=1+i3
   8: (-2-i4+i5 > 0 /\ -7+i1 == 0) /\ i1'=8, i3'=1+i3
  10: (i4-i5 < 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i4'=1+i4
  11: (i4-i5 < 0 /\ i4-i5 >= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3
  12: (i4-i5 < 0 /\ i4-i5 >= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i4'=1+i4, i5'=1+i5
  13: (i4-i5 >= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i5'=1+i5
  17: (0 == 0 /\ i6 < 0 /\ -5+i1 == 0) /\ i1'=9, i3'=2+i3
  18: (0 == 0 /\ i7 < 0 /\ -5+i1 == 0) /\ i1'=9, i3'=2+i3
  19: (0 == 0 /\ -2-i4+i5 <= 0 /\ -2+i4-i5 <= 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
  20: (0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3

Dependency graph:
6 -> 7, 6 -> 8, 6 -> 19
7 -> 10, 7 -> 11, 7 -> 12, 7 -> 13
8 -> 10, 8 -> 11, 8 -> 12, 8 -> 13
10 -> 7, 10 -> 8, 10 -> 19
11 -> 7, 11 -> 8, 11 -> 19
12 -> 7, 12 -> 8, 12 -> 19
13 -> 7, 13 -> 8, 13 -> 19
20 -> 6, 20 -> 17, 20 -> 18

Preprocessed Transitions

	Simplified Guard

	Original rule:
	(0 == 0 /\ i6 < 0 /\ -5+i1 == 0) /\ i1'=9, i3'=2+i3
	New rule:
	(i6 < 0 /\ -5+i1 == 0) /\ i1'=9, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ i7 < 0 /\ -5+i1 == 0) /\ i1'=9, i3'=2+i3
	New rule:
	(i7 < 0 /\ -5+i1 == 0) /\ i1'=9, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -2-i4+i5 <= 0 /\ -2+i4-i5 <= 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
	New rule:
	(-2-i4+i5 <= 0 /\ -2+i4-i5 <= 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	New rule:
	-1+i1 == 0 /\ i1'=5, i3'=4+i3

Start location: eval_wise_start

Location map:
LoAT_sink -> 0
eval_wise_start -> 1
eval_wise_bb0_in -> 2
eval_wise_0 -> 3
eval_wise_1 -> 4
eval_wise_2 -> 5
eval_wise_bb2_in -> 6
eval_wise_bb1_in -> 7
eval_wise__critedge_in -> 8
eval_wise_stop -> 9

Rules:
   6: (i6 >= 0 /\ i7 >= 0 /\ -5+i1 == 0) /\ i1'=7, i3'=1+i3, i4'=i6, i5'=i7
   7: (-2+i4-i5 > 0 /\ -7+i1 == 0) /\ i1'=8, i3'=1+i3
   8: (-2-i4+i5 > 0 /\ -7+i1 == 0) /\ i1'=8, i3'=1+i3
  10: (i4-i5 < 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i4'=1+i4
  11: (i4-i5 < 0 /\ i4-i5 >= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3
  12: (i4-i5 < 0 /\ i4-i5 >= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i4'=1+i4, i5'=1+i5
  13: (i4-i5 >= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i5'=1+i5
  21: (i6 < 0 /\ -5+i1 == 0) /\ i1'=9, i3'=2+i3
  22: (i7 < 0 /\ -5+i1 == 0) /\ i1'=9, i3'=2+i3
  23: (-2-i4+i5 <= 0 /\ -2+i4-i5 <= 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
  24: -1+i1 == 0 /\ i1'=5, i3'=4+i3

Dependency graph:
6 -> 7, 6 -> 8, 6 -> 23
7 -> 10, 7 -> 11, 7 -> 12, 7 -> 13
8 -> 10, 8 -> 11, 8 -> 12, 8 -> 13
10 -> 7, 10 -> 8, 10 -> 23
11 -> 7, 11 -> 8, 11 -> 23
12 -> 7, 12 -> 8, 12 -> 23
13 -> 7, 13 -> 8, 13 -> 23
24 -> 6, 24 -> 21, 24 -> 22

Refined Dependency Graph

	Removed the following edges: 7 -> 10, 7 -> 11, 7 -> 12, 8 -> 11, 8 -> 12, 8 -> 13, 10 -> 7, 11 -> 7, 11 -> 8, 11 -> 23, 12 -> 7, 12 -> 8, 12 -> 23, 13 -> 8

Start location: eval_wise_start

Location map:
LoAT_sink -> 0
eval_wise_start -> 1
eval_wise_bb0_in -> 2
eval_wise_0 -> 3
eval_wise_1 -> 4
eval_wise_2 -> 5
eval_wise_bb2_in -> 6
eval_wise_bb1_in -> 7
eval_wise__critedge_in -> 8
eval_wise_stop -> 9

Rules:
   6: (i6 >= 0 /\ i7 >= 0 /\ -5+i1 == 0) /\ i1'=7, i3'=1+i3, i4'=i6, i5'=i7
   7: (-2+i4-i5 > 0 /\ -7+i1 == 0) /\ i1'=8, i3'=1+i3
   8: (-2-i4+i5 > 0 /\ -7+i1 == 0) /\ i1'=8, i3'=1+i3
  10: (i4-i5 < 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i4'=1+i4
  11: (i4-i5 < 0 /\ i4-i5 >= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3
  12: (i4-i5 < 0 /\ i4-i5 >= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i4'=1+i4, i5'=1+i5
  13: (i4-i5 >= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i5'=1+i5
  21: (i6 < 0 /\ -5+i1 == 0) /\ i1'=9, i3'=2+i3
  22: (i7 < 0 /\ -5+i1 == 0) /\ i1'=9, i3'=2+i3
  23: (-2-i4+i5 <= 0 /\ -2+i4-i5 <= 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
  24: -1+i1 == 0 /\ i1'=5, i3'=4+i3

Dependency graph:
6 -> 7, 6 -> 8, 6 -> 23
7 -> 13
8 -> 10
10 -> 8, 10 -> 23
13 -> 7, 13 -> 23
24 -> 6, 24 -> 21, 24 -> 22

Step with 24

	Trace

	24[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 22

	Trace

	24[(-1+i1 == 0)]
	22[(i7 < 0 /\ -5+i1 == 0)]
	
	Blocked

	{}
	{}
	{}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	
	Blocked

	{}
	{22[T]}
	
Step with 6

	Trace

	24[(-1+i1 == 0)]
	6[(i6 >= 0 /\ i7 >= 0 /\ -5+i1 == 0)]
	
	Blocked

	{}
	{22[T]}
	{}
	
Step with 7

	Trace

	24[(-1+i1 == 0)]
	6[(i6 >= 0 /\ i7 >= 0 /\ -5+i1 == 0)]
	7[(-2+i4-i5 > 0 /\ -7+i1 == 0)]
	
	Blocked

	{}
	{22[T]}
	{}
	{}
	
Step with 13

	Trace

	24[(-1+i1 == 0)]
	6[(i6 >= 0 /\ i7 >= 0 /\ -5+i1 == 0)]
	7[(-2+i4-i5 > 0 /\ -7+i1 == 0)]
	13[(i4-i5 >= 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{22[T]}
	{}
	{}
	{}
	
Poly(n^1)

Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -2+i4-i5 > 0 /\ -7+i1 == 0 /\ i4-i5 >= 0) /\ i1'=7, i3'=2+i3, i5'=1+i5
		New rule:
		(-2+i4-i5 > 0 /\ -7+i1 == 0 /\ i4-i5 >= 0) /\ i1'=7, i3'=2+i3, i5'=1+i5

	Loop Acceleration

	Original rule:
	(-2+i4-i5 > 0 /\ -7+i1 == 0 /\ i4-i5 >= 0) /\ i1'=7, i3'=2+i3, i5'=1+i5
	New rule:
	(-1+it31 >= 0 /\ -1+i4-i5-it31 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ i4-i5 >= 0) /\ i1'=i1, i3'=i3+2*it31, i5'=i5+it31

		-2+i4-i5 > 0 [0]: montonic decrease yields -1+i4-i5-it31 > 0
		
		-7+i1 >= 0 [0]: unchanged
		
		7-i1 >= 0 [0]: unchanged
		
		i4-i5 >= 0 [0]: monotonic increase yields i4-i5 >= 0, dependencies: -2+i4-i5 > 0
		
		Replacement map: {-2+i4-i5 > 0 -> -1+i4-i5-it31 > 0, -7+i1 >= 0 -> -7+i1 >= 0, 7-i1 >= 0 -> 7-i1 >= 0, i4-i5 >= 0 -> i4-i5 >= 0}

	Removed Trivial Updates

	Original rule:
	(-1+it31 >= 0 /\ -1+i4-i5-it31 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ i4-i5 >= 0) /\ i1'=i1, i3'=i3+2*it31, i5'=i5+it31
	New rule:
	(-1+it31 >= 0 /\ -1+i4-i5-it31 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ i4-i5 >= 0) /\ i3'=i3+2*it31, i5'=i5+it31
	
	Instantiation

	Original rule:
	(-1+it31 >= 0 /\ -1+i4-i5-it31 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ i4-i5 >= 0) /\ i3'=i3+2*it31, i5'=i5+it31
	New rule:
	(1 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ i4-i5 >= 0 /\ -3+i4-i5 >= 0) /\ i3'=-4+i3+2*i4-2*i5, i5'=-2+i4

Start location: eval_wise_start

Location map:
LoAT_sink -> 0
eval_wise_start -> 1
eval_wise_bb0_in -> 2
eval_wise_0 -> 3
eval_wise_1 -> 4
eval_wise_2 -> 5
eval_wise_bb2_in -> 6
eval_wise_bb1_in -> 7
eval_wise__critedge_in -> 8
eval_wise_stop -> 9

Rules:
   6: (i6 >= 0 /\ i7 >= 0 /\ -5+i1 == 0) /\ i1'=7, i3'=1+i3, i4'=i6, i5'=i7
   7: (-2+i4-i5 > 0 /\ -7+i1 == 0) /\ i1'=8, i3'=1+i3
   8: (-2-i4+i5 > 0 /\ -7+i1 == 0) /\ i1'=8, i3'=1+i3
  10: (i4-i5 < 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i4'=1+i4
  11: (i4-i5 < 0 /\ i4-i5 >= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3
  12: (i4-i5 < 0 /\ i4-i5 >= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i4'=1+i4, i5'=1+i5
  13: (i4-i5 >= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i5'=1+i5
  21: (i6 < 0 /\ -5+i1 == 0) /\ i1'=9, i3'=2+i3
  22: (i7 < 0 /\ -5+i1 == 0) /\ i1'=9, i3'=2+i3
  23: (-2-i4+i5 <= 0 /\ -2+i4-i5 <= 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
  24: -1+i1 == 0 /\ i1'=5, i3'=4+i3
  25: (1 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ i4-i5 >= 0 /\ -3+i4-i5 >= 0) /\ i3'=-4+i3+2*i4-2*i5, i5'=-2+i4

Dependency graph:
6 -> 7, 6 -> 8, 6 -> 23, 6 -> 25
7 -> 13
8 -> 10
10 -> 8, 10 -> 23
13 -> 7, 13 -> 23, 13 -> 25
24 -> 6, 24 -> 21, 24 -> 22
25 -> 7, 25 -> 23

	Trace

	24[(-1+i1 == 0)]
	6[(i6 >= 0 /\ i7 >= 0 /\ -5+i1 == 0)]
	25[(1 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ i4-i5 >= 0 /\ -3+i4-i5 >= 0)]
	
	Blocked

	{}
	{22[T]}
	{}
	{25[T]}
	
Step with 23

	Trace

	24[(-1+i1 == 0)]
	6[(i6 >= 0 /\ i7 >= 0 /\ -5+i1 == 0)]
	25[(1 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ i4-i5 >= 0 /\ -3+i4-i5 >= 0)]
	23[(-2-i4+i5 <= 0 /\ -2+i4-i5 <= 0 /\ -7+i1 == 0)]
	
	Blocked

	{}
	{22[T]}
	{}
	{25[T]}
	{}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	6[(i6 >= 0 /\ i7 >= 0 /\ -5+i1 == 0)]
	25[(1 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ i4-i5 >= 0 /\ -3+i4-i5 >= 0)]
	
	Blocked

	{}
	{22[T]}
	{}
	{23[T], 25[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	6[(i6 >= 0 /\ i7 >= 0 /\ -5+i1 == 0)]
	
	Blocked

	{}
	{22[T]}
	{25[T]}
	
Step with 7

	Trace

	24[(-1+i1 == 0)]
	6[(i6 >= 0 /\ i7 >= 0 /\ -5+i1 == 0)]
	7[(-2+i4-i5 > 0 /\ -7+i1 == 0)]
	
	Blocked

	{}
	{22[T]}
	{25[T]}
	{}
	
Step with 13

	Trace

	24[(-1+i1 == 0)]
	6[(i6 >= 0 /\ i7 >= 0 /\ -5+i1 == 0)]
	7[(-2+i4-i5 > 0 /\ -7+i1 == 0)]
	13[(i4-i5 >= 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{22[T]}
	{25[T]}
	{}
	{}
	
Covered

	Trace

	24[(-1+i1 == 0)]
	6[(i6 >= 0 /\ i7 >= 0 /\ -5+i1 == 0)]
	7[(-2+i4-i5 > 0 /\ -7+i1 == 0)]
	
	Blocked

	{}
	{22[T]}
	{25[T]}
	{13[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	6[(i6 >= 0 /\ i7 >= 0 /\ -5+i1 == 0)]
	
	Blocked

	{}
	{22[T]}
	{7[T], 25[T]}
	
Step with 8

	Trace

	24[(-1+i1 == 0)]
	6[(i6 >= 0 /\ i7 >= 0 /\ -5+i1 == 0)]
	8[(-2-i4+i5 > 0 /\ -7+i1 == 0)]
	
	Blocked

	{}
	{22[T]}
	{7[T], 25[T]}
	{}
	
Step with 10

	Trace

	24[(-1+i1 == 0)]
	6[(i6 >= 0 /\ i7 >= 0 /\ -5+i1 == 0)]
	8[(-2-i4+i5 > 0 /\ -7+i1 == 0)]
	10[(i4-i5 < 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{22[T]}
	{7[T], 25[T]}
	{}
	{}
	
Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -2-i4+i5 > 0 /\ -7+i1 == 0 /\ i4-i5 < 0) /\ i1'=7, i3'=2+i3, i4'=1+i4
		New rule:
		(-2-i4+i5 > 0 /\ -7+i1 == 0 /\ i4-i5 < 0) /\ i1'=7, i3'=2+i3, i4'=1+i4

	Loop Acceleration

	Original rule:
	(-2-i4+i5 > 0 /\ -7+i1 == 0 /\ i4-i5 < 0) /\ i1'=7, i3'=2+i3, i4'=1+i4
	New rule:
	(-i4+i5 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ -1-it76-i4+i5 > 0 /\ -1+it76 >= 0) /\ i1'=i1, i3'=i3+2*it76, i4'=it76+i4

		-2-i4+i5 > 0 [0]: montonic decrease yields -1-it76-i4+i5 > 0
		
		-i4+i5 > 0 [0]: monotonic increase yields -i4+i5 > 0, dependencies: -2-i4+i5 > 0
		
		-7+i1 >= 0 [0]: unchanged
		
		7-i1 >= 0 [0]: unchanged
		
		Replacement map: {-2-i4+i5 > 0 -> -1-it76-i4+i5 > 0, -i4+i5 > 0 -> -i4+i5 > 0, -7+i1 >= 0 -> -7+i1 >= 0, 7-i1 >= 0 -> 7-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-i4+i5 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ -1-it76-i4+i5 > 0 /\ -1+it76 >= 0) /\ i1'=i1, i3'=i3+2*it76, i4'=it76+i4
	New rule:
	(-i4+i5 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ -1-it76-i4+i5 > 0 /\ -1+it76 >= 0) /\ i3'=i3+2*it76, i4'=it76+i4
	
	Instantiation

	Original rule:
	(-i4+i5 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ -1-it76-i4+i5 > 0 /\ -1+it76 >= 0) /\ i3'=i3+2*it76, i4'=it76+i4
	New rule:
	(1 > 0 /\ -i4+i5 > 0 /\ -3-i4+i5 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0) /\ i3'=-4+i3-2*i4+2*i5, i4'=-2+i5

Start location: eval_wise_start

Location map:
LoAT_sink -> 0
eval_wise_start -> 1
eval_wise_bb0_in -> 2
eval_wise_0 -> 3
eval_wise_1 -> 4
eval_wise_2 -> 5
eval_wise_bb2_in -> 6
eval_wise_bb1_in -> 7
eval_wise__critedge_in -> 8
eval_wise_stop -> 9

Rules:
   6: (i6 >= 0 /\ i7 >= 0 /\ -5+i1 == 0) /\ i1'=7, i3'=1+i3, i4'=i6, i5'=i7
   7: (-2+i4-i5 > 0 /\ -7+i1 == 0) /\ i1'=8, i3'=1+i3
   8: (-2-i4+i5 > 0 /\ -7+i1 == 0) /\ i1'=8, i3'=1+i3
  10: (i4-i5 < 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i4'=1+i4
  11: (i4-i5 < 0 /\ i4-i5 >= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3
  12: (i4-i5 < 0 /\ i4-i5 >= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i4'=1+i4, i5'=1+i5
  13: (i4-i5 >= 0 /\ -8+i1 == 0) /\ i1'=7, i3'=1+i3, i5'=1+i5
  21: (i6 < 0 /\ -5+i1 == 0) /\ i1'=9, i3'=2+i3
  22: (i7 < 0 /\ -5+i1 == 0) /\ i1'=9, i3'=2+i3
  23: (-2-i4+i5 <= 0 /\ -2+i4-i5 <= 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
  24: -1+i1 == 0 /\ i1'=5, i3'=4+i3
  25: (1 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ i4-i5 >= 0 /\ -3+i4-i5 >= 0) /\ i3'=-4+i3+2*i4-2*i5, i5'=-2+i4
  26: (1 > 0 /\ -i4+i5 > 0 /\ -3-i4+i5 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0) /\ i3'=-4+i3-2*i4+2*i5, i4'=-2+i5

Dependency graph:
6 -> 7, 6 -> 8, 6 -> 23, 6 -> 25, 6 -> 26
7 -> 13
8 -> 10
10 -> 8, 10 -> 23, 10 -> 26
13 -> 7, 13 -> 23, 13 -> 25
24 -> 6, 24 -> 21, 24 -> 22
25 -> 7, 25 -> 23
26 -> 8, 26 -> 23

	Trace

	24[(-1+i1 == 0)]
	6[(i6 >= 0 /\ i7 >= 0 /\ -5+i1 == 0)]
	26[(1 > 0 /\ -i4+i5 > 0 /\ -3-i4+i5 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0)]
	
	Blocked

	{}
	{22[T]}
	{7[T], 25[T]}
	{26[T]}
	
Step with 23

	Trace

	24[(-1+i1 == 0)]
	6[(i6 >= 0 /\ i7 >= 0 /\ -5+i1 == 0)]
	26[(1 > 0 /\ -i4+i5 > 0 /\ -3-i4+i5 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0)]
	23[(-2-i4+i5 <= 0 /\ -2+i4-i5 <= 0 /\ -7+i1 == 0)]
	
	Blocked

	{}
	{22[T]}
	{7[T], 25[T]}
	{8[T], 26[T]}
	{}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	6[(i6 >= 0 /\ i7 >= 0 /\ -5+i1 == 0)]
	26[(1 > 0 /\ -i4+i5 > 0 /\ -3-i4+i5 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0)]
	
	Blocked

	{}
	{22[T]}
	{7[T], 25[T]}
	{8[T], 23[T], 26[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	6[(i6 >= 0 /\ i7 >= 0 /\ -5+i1 == 0)]
	
	Blocked

	{}
	{22[T]}
	{7[T], 25[T], 26[T]}
	
Step with 23

	Trace

	24[(-1+i1 == 0)]
	6[(i6 >= 0 /\ i7 >= 0 /\ -5+i1 == 0)]
	23[(-2-i4+i5 <= 0 /\ -2+i4-i5 <= 0 /\ -7+i1 == 0)]
	
	Blocked

	{}
	{22[T]}
	{7[T], 25[T], 26[T]}
	{}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	6[(i6 >= 0 /\ i7 >= 0 /\ -5+i1 == 0)]
	
	Blocked

	{}
	{22[T]}
	{7[T], 23[T], 25[T], 26[T]}
	
Step with 8

	Trace

	24[(-1+i1 == 0)]
	6[(i6 >= 0 /\ i7 >= 0 /\ -5+i1 == 0)]
	8[(-2-i4+i5 > 0 /\ -7+i1 == 0)]
	
	Blocked

	{}
	{22[T]}
	{7[T], 23[T], 25[T], 26[T]}
	{}
	
Step with 10

	Trace

	24[(-1+i1 == 0)]
	6[(i6 >= 0 /\ i7 >= 0 /\ -5+i1 == 0)]
	8[(-2-i4+i5 > 0 /\ -7+i1 == 0)]
	10[(i4-i5 < 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{22[T]}
	{7[T], 23[T], 25[T], 26[T]}
	{}
	{}
	
Covered

	Trace

	24[(-1+i1 == 0)]
	6[(i6 >= 0 /\ i7 >= 0 /\ -5+i1 == 0)]
	8[(-2-i4+i5 > 0 /\ -7+i1 == 0)]
	
	Blocked

	{}
	{22[T]}
	{7[T], 23[T], 25[T], 26[T]}
	{10[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	6[(i6 >= 0 /\ i7 >= 0 /\ -5+i1 == 0)]
	
	Blocked

	{}
	{22[T]}
	{7[T], 8[T], 23[T], 25[T], 26[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	
	Blocked

	{}
	{6[T], 22[T]}
	
Step with 21

	Trace

	24[(-1+i1 == 0)]
	21[(i6 < 0 /\ -5+i1 == 0)]
	
	Blocked

	{}
	{6[T], 22[T]}
	{}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	
	Blocked

	{}
	{6[T], 21[T], 22[T]}
	
Backtrack

	Trace

	Blocked

	{24[T]}
	
Accept

Poly(n^1)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃
  Temp_Vars:  
  Locations:  l0, l1, l2, l3, l4, l5, l6, l7, l8
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, X₃)
  t₃: l1(X₀, X₁, X₂, X₃) → l4(X₀, X₁, X₂, X₃)
  t₁: l2(X₀, X₁, X₂, X₃) → l3(X₀, X₁, X₂, X₃)
  t₂: l3(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, X₃)
  t₆: l4(X₀, X₁, X₂, X₃) → l5(X₂, X₃, X₂, X₃) :|: 0 ≤ X₂ ∧ 0 ≤ X₃
  t₄: l4(X₀, X₁, X₂, X₃) → l6(X₀, X₁, X₂, X₃) :|: 1+X₂ ≤ 0
  t₅: l4(X₀, X₁, X₂, X₃) → l6(X₀, X₁, X₂, X₃) :|: 1+X₃ ≤ 0
  t₉: l5(X₀, X₁, X₂, X₃) → l6(X₀, X₁, X₂, X₃) :|: X₁ ≤ 2+X₀ ∧ X₀ ≤ 2+X₁
  t₇: l5(X₀, X₁, X₂, X₃) → l7(X₀, X₁, X₂, X₃) :|: 3+X₁ ≤ X₀
  t₈: l5(X₀, X₁, X₂, X₃) → l7(X₀, X₁, X₂, X₃) :|: 3+X₀ ≤ X₁
  t₁₄: l6(X₀, X₁, X₂, X₃) → l8(X₀, X₁, X₂, X₃)
  t₁₀: l7(X₀, X₁, X₂, X₃) → l5(1+X₀, X₁, X₂, X₃) :|: 1+X₀ ≤ X₁
  t₁₁: l7(X₀, X₁, X₂, X₃) → l5(X₀, X₁, X₂, X₃) :|: 1+X₀ ≤ X₁ ∧ X₁ ≤ X₀
  t₁₂: l7(X₀, X₁, X₂, X₃) → l5(1+X₀, 1+X₁, X₂, X₃) :|: 1+X₀ ≤ X₁ ∧ X₁ ≤ X₀
  t₁₃: l7(X₀, X₁, X₂, X₃) → l5(X₀, 1+X₁, X₂, X₃) :|: X₁ ≤ X₀


Preprocessing
  Cut unsatisfiable transition [t₁₁: l7→l5; t₁₂: l7→l5]


  Found invariant X₃ ≤ X₁ ∧ 0 ≤ X₃ ∧ 0 ≤ X₂+X₃ ∧ 0 ≤ X₁+X₃ ∧ 0 ≤ X₀+X₃ ∧ X₂ ≤ X₀ ∧ 0 ≤ X₂ ∧ 0 ≤ X₁+X₂ ∧ 0 ≤ X₀+X₂ ∧ 0 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 0 ≤ X₀ for location l7


  Found invariant X₃ ≤ X₁ ∧ 0 ≤ X₃ ∧ 0 ≤ X₂+X₃ ∧ 0 ≤ X₁+X₃ ∧ 0 ≤ X₀+X₃ ∧ X₂ ≤ X₀ ∧ 0 ≤ X₂ ∧ 0 ≤ X₁+X₂ ∧ 0 ≤ X₀+X₂ ∧ 0 ≤ X₁ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₀ for location l5


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃
  Temp_Vars:  
  Locations:  l0, l1, l2, l3, l4, l5, l6, l7, l8
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, X₃)
  t₃: l1(X₀, X₁, X₂, X₃) → l4(X₀, X₁, X₂, X₃)
  t₁: l2(X₀, X₁, X₂, X₃) → l3(X₀, X₁, X₂, X₃)
  t₂: l3(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, X₃)
  t₆: l4(X₀, X₁, X₂, X₃) → l5(X₂, X₃, X₂, X₃) :|: 0 ≤ X₂ ∧ 0 ≤ X₃
  t₄: l4(X₀, X₁, X₂, X₃) → l6(X₀, X₁, X₂, X₃) :|: 1+X₂ ≤ 0
  t₅: l4(X₀, X₁, X₂, X₃) → l6(X₀, X₁, X₂, X₃) :|: 1+X₃ ≤ 0
  t₉: l5(X₀, X₁, X₂, X₃) → l6(X₀, X₁, X₂, X₃) :|: X₁ ≤ 2+X₀ ∧ X₀ ≤ 2+X₁ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₀+X₂ ∧ X₂ ≤ X₀ ∧ 0 ≤ X₀+X₃ ∧ 0 ≤ X₁ ∧ 0 ≤ X₁+X₂ ∧ 0 ≤ X₁+X₃ ∧ X₃ ≤ X₁ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ 0 ≤ X₃
  t₇: l5(X₀, X₁, X₂, X₃) → l7(X₀, X₁, X₂, X₃) :|: 3+X₁ ≤ X₀ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₀+X₂ ∧ X₂ ≤ X₀ ∧ 0 ≤ X₀+X₃ ∧ 0 ≤ X₁ ∧ 0 ≤ X₁+X₂ ∧ 0 ≤ X₁+X₃ ∧ X₃ ≤ X₁ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ 0 ≤ X₃
  t₈: l5(X₀, X₁, X₂, X₃) → l7(X₀, X₁, X₂, X₃) :|: 3+X₀ ≤ X₁ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₀+X₂ ∧ X₂ ≤ X₀ ∧ 0 ≤ X₀+X₃ ∧ 0 ≤ X₁ ∧ 0 ≤ X₁+X₂ ∧ 0 ≤ X₁+X₃ ∧ X₃ ≤ X₁ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ 0 ≤ X₃
  t₁₄: l6(X₀, X₁, X₂, X₃) → l8(X₀, X₁, X₂, X₃)
  t₁₀: l7(X₀, X₁, X₂, X₃) → l5(1+X₀, X₁, X₂, X₃) :|: 1+X₀ ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₂ ∧ X₂ ≤ X₀ ∧ 0 ≤ X₀+X₃ ∧ 0 ≤ X₁ ∧ 0 ≤ X₁+X₂ ∧ 0 ≤ X₁+X₃ ∧ X₃ ≤ X₁ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ 0 ≤ X₃
  t₁₃: l7(X₀, X₁, X₂, X₃) → l5(X₀, 1+X₁, X₂, X₃) :|: X₁ ≤ X₀ ∧ 3 ≤ X₀+X₁ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₂ ∧ X₂ ≤ X₀ ∧ 0 ≤ X₀+X₃ ∧ 0 ≤ X₁ ∧ 0 ≤ X₁+X₂ ∧ 0 ≤ X₁+X₃ ∧ X₃ ≤ X₁ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ 0 ≤ X₃


MPRF for transition t₇: l5(X₀, X₁, X₂, X₃) → l7(X₀, X₁, X₂, X₃) :|: 3+X₁ ≤ X₀ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₀+X₂ ∧ X₂ ≤ X₀ ∧ 0 ≤ X₀+X₃ ∧ 0 ≤ X₁ ∧ 0 ≤ X₁+X₂ ∧ 0 ≤ X₁+X₃ ∧ X₃ ≤ X₁ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ 0 ≤ X₃ of depth 1:
  new bound:
    X₂+X₃+2 {O(n)}

  MPRF:
    • l5: [X₀-2-X₁]
    • l7: [X₀-3-X₁]




MPRF for transition t₈: l5(X₀, X₁, X₂, X₃) → l7(X₀, X₁, X₂, X₃) :|: 3+X₀ ≤ X₁ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₀+X₂ ∧ X₂ ≤ X₀ ∧ 0 ≤ X₀+X₃ ∧ 0 ≤ X₁ ∧ 0 ≤ X₁+X₂ ∧ 0 ≤ X₁+X₃ ∧ X₃ ≤ X₁ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ 0 ≤ X₃ of depth 1:
  new bound:
    X₂+X₃+1 {O(n)}

  MPRF:
    • l5: [1+X₁-X₀]
    • l7: [X₁-X₀]




MPRF for transition t₁₀: l7(X₀, X₁, X₂, X₃) → l5(1+X₀, X₁, X₂, X₃) :|: 1+X₀ ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₂ ∧ X₂ ≤ X₀ ∧ 0 ≤ X₀+X₃ ∧ 0 ≤ X₁ ∧ 0 ≤ X₁+X₂ ∧ 0 ≤ X₁+X₃ ∧ X₃ ≤ X₁ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ 0 ≤ X₃ of depth 1:
  new bound:
    X₂+X₃ {O(n)}

  MPRF:
    • l5: [X₁-X₀]
    • l7: [X₁-X₀]




MPRF for transition t₁₃: l7(X₀, X₁, X₂, X₃) → l5(X₀, 1+X₁, X₂, X₃) :|: X₁ ≤ X₀ ∧ 3 ≤ X₀+X₁ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₂ ∧ X₂ ≤ X₀ ∧ 0 ≤ X₀+X₃ ∧ 0 ≤ X₁ ∧ 0 ≤ X₁+X₂ ∧ 0 ≤ X₁+X₃ ∧ X₃ ≤ X₁ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ 0 ≤ X₃ of depth 1:
  new bound:
    X₂+X₃+1 {O(n)}

  MPRF:
    • l5: [1+X₀-X₁]
    • l7: [1+X₀-X₁]




All Bounds
Timebounds
  Overall timebound:4⋅X₂+4⋅X₃+13 {O(n)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: X₂+X₃+2 {O(n)}
    t₈: X₂+X₃+1 {O(n)}
    t₉: 1 {O(1)}
    t₁₀: X₂+X₃ {O(n)}
    t₁₃: X₂+X₃+1 {O(n)}
    t₁₄: 1 {O(1)}


Costbounds
  Overall costbound: 4⋅X₂+4⋅X₃+13 {O(n)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: X₂+X₃+2 {O(n)}
    t₈: X₂+X₃+1 {O(n)}
    t₉: 1 {O(1)}
    t₁₀: X₂+X₃ {O(n)}
    t₁₃: X₂+X₃+1 {O(n)}
    t₁₄: 1 {O(1)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₀, X₂: X₂ {O(n)}
    t₀, X₃: X₃ {O(n)}
    t₁, X₀: X₀ {O(n)}
    t₁, X₁: X₁ {O(n)}
    t₁, X₂: X₂ {O(n)}
    t₁, X₃: X₃ {O(n)}
    t₂, X₀: X₀ {O(n)}
    t₂, X₁: X₁ {O(n)}
    t₂, X₂: X₂ {O(n)}
    t₂, X₃: X₃ {O(n)}
    t₃, X₀: X₀ {O(n)}
    t₃, X₁: X₁ {O(n)}
    t₃, X₂: X₂ {O(n)}
    t₃, X₃: X₃ {O(n)}
    t₄, X₀: X₀ {O(n)}
    t₄, X₁: X₁ {O(n)}
    t₄, X₂: X₂ {O(n)}
    t₄, X₃: X₃ {O(n)}
    t₅, X₀: X₀ {O(n)}
    t₅, X₁: X₁ {O(n)}
    t₅, X₂: X₂ {O(n)}
    t₅, X₃: X₃ {O(n)}
    t₆, X₀: X₂ {O(n)}
    t₆, X₁: X₃ {O(n)}
    t₆, X₂: X₂ {O(n)}
    t₆, X₃: X₃ {O(n)}
    t₇, X₀: X₂ {O(n)}
    t₇, X₁: 2⋅X₃+X₂+1 {O(n)}
    t₇, X₂: X₂ {O(n)}
    t₇, X₃: X₃ {O(n)}
    t₈, X₀: 2⋅X₂+X₃ {O(n)}
    t₈, X₁: X₃ {O(n)}
    t₈, X₂: X₂ {O(n)}
    t₈, X₃: X₃ {O(n)}
    t₉, X₀: 4⋅X₂+X₃ {O(n)}
    t₉, X₁: 4⋅X₃+X₂+1 {O(n)}
    t₉, X₂: 3⋅X₂ {O(n)}
    t₉, X₃: 3⋅X₃ {O(n)}
    t₁₀, X₀: 2⋅X₂+X₃ {O(n)}
    t₁₀, X₁: X₃ {O(n)}
    t₁₀, X₂: X₂ {O(n)}
    t₁₀, X₃: X₃ {O(n)}
    t₁₃, X₀: X₂ {O(n)}
    t₁₃, X₁: 2⋅X₃+X₂+1 {O(n)}
    t₁₃, X₂: X₂ {O(n)}
    t₁₃, X₃: X₃ {O(n)}
    t₁₄, X₀: 2⋅X₀+4⋅X₂+X₃ {O(n)}
    t₁₄, X₁: 2⋅X₁+4⋅X₃+X₂+1 {O(n)}
    t₁₄, X₂: 5⋅X₂ {O(n)}
    t₁₄, X₃: 5⋅X₃ {O(n)}

