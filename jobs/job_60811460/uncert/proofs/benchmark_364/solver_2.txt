MAYBE

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [f2/8]
1. non_recursive  : [exit_location/1]
2. recursive  : [f26/13]
3. recursive  : [f23/16,f26_loop_cont/17]
4. recursive  : [f41/8]
5. recursive  : [f19/19,f23_loop_cont/20,f41_loop_cont/20]
6. recursive  : [f69/16]
7. recursive  : [f66/23,f69_loop_cont/24]
8. recursive  : [f63/25,f66_loop_cont/26]
9. recursive  : [f53/38,f63_loop_cont/39]
10. recursive  : [f10/51,f19_loop_cont/52,f53_loop_cont/52]
11. non_recursive  : [f1/28]
12. non_recursive  : [f10_loop_cont/29]
13. non_recursive  : [f2_loop_cont/29]
14. non_recursive  : [start/28]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into f2/8
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into f26/13
3. SCC is partially evaluated into f23/16
4. SCC is partially evaluated into f41/8
5. SCC is partially evaluated into f19/19
6. SCC is partially evaluated into f69/16
7. SCC is partially evaluated into f66/23
8. SCC is partially evaluated into f63/25
9. SCC is partially evaluated into f53/38
10. SCC is partially evaluated into f10/51
11. SCC is completely evaluated into other SCCs
12. SCC is partially evaluated into f10_loop_cont/29
13. SCC is partially evaluated into f2_loop_cont/29
14. SCC is partially evaluated into start/28

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations f2/8 
* CE 3 is refined into CE [47] 
* CE 4 is refined into CE [48] 
* CE 2 is refined into CE [49] 


### Cost equations --> "Loop" of f2/8 
* CEs [49] --> Loop 45 
* CEs [47] --> Loop 46 
* CEs [48] --> Loop 47 

### Ranking functions of CR f2(A,B,C,A1,G1,H1,I1,J1) 
* RF of phase [45]: [A-B+1]

#### Partial ranking functions of CR f2(A,B,C,A1,G1,H1,I1,J1) 
* Partial RF of phase [45]:
  - RF of loop [45:1]:
    A-B+1


### Specialization of cost equations f26/13 
* CE 38 is refined into CE [50] 
* CE 39 is refined into CE [51] 
* CE 37 is refined into CE [52] 


### Cost equations --> "Loop" of f26/13 
* CEs [52] --> Loop 48 
* CEs [50] --> Loop 49 
* CEs [51] --> Loop 50 

### Ranking functions of CR f26(G,H,I,J,K,L,M,N,G1,H1,I1,J1,K1) 

#### Partial ranking functions of CR f26(G,H,I,J,K,L,M,N,G1,H1,I1,J1,K1) 


### Specialization of cost equations f23/16 
* CE 27 is refined into CE [53] 
* CE 25 is refined into CE [54,55,56] 
* CE 28 is refined into CE [57] 
* CE 26 is refined into CE [58,59,60] 


### Cost equations --> "Loop" of f23/16 
* CEs [60] --> Loop 51 
* CEs [58] --> Loop 52 
* CEs [59] --> Loop 53 
* CEs [53] --> Loop 54 
* CEs [54] --> Loop 55 
* CEs [55] --> Loop 56 
* CEs [57] --> Loop 57 
* CEs [56] --> Loop 58 

### Ranking functions of CR f23(F,G,H,I,J,K,L,M,N,O,G1,H1,I1,J1,K1,L1) 
* RF of phase [52]: [F/2+G/2-K/2-1/2,F/2+I/2-K/2-1,F/2+J/2-K/2-1/2]

#### Partial ranking functions of CR f23(F,G,H,I,J,K,L,M,N,O,G1,H1,I1,J1,K1,L1) 
* Partial RF of phase [52]:
  - RF of loop [52:1]:
    F/2+G/2-K/2-1/2
    F/2+I/2-K/2-1
    F/2+J/2-K/2-1/2


### Specialization of cost equations f41/8 
* CE 31 is refined into CE [61] 
* CE 30 is refined into CE [62] 
* CE 32 is refined into CE [63] 
* CE 29 is refined into CE [64] 


### Cost equations --> "Loop" of f41/8 
* CEs [64] --> Loop 59 
* CEs [61] --> Loop 60 
* CEs [62] --> Loop 61 
* CEs [63] --> Loop 62 

### Ranking functions of CR f41(F,I,J,O,G1,H1,I1,J1) 

#### Partial ranking functions of CR f41(F,I,J,O,G1,H1,I1,J1) 


### Specialization of cost equations f19/19 
* CE 19 is refined into CE [65] 
* CE 14 is refined into CE [66,67,68,69,70,71,72,73,74,75] 
* CE 16 is refined into CE [76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99] 
* CE 17 is refined into CE [100,101,102] 
* CE 20 is refined into CE [103] 
* CE 15 is refined into CE [104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143] 
* CE 18 is refined into CE [144,145,146,147,148] 


### Cost equations --> "Loop" of f19/19 
* CEs [143] --> Loop 63 
* CEs [138] --> Loop 64 
* CEs [133] --> Loop 65 
* CEs [128] --> Loop 66 
* CEs [123] --> Loop 67 
* CEs [142] --> Loop 68 
* CEs [141] --> Loop 69 
* CEs [139] --> Loop 70 
* CEs [140] --> Loop 71 
* CEs [118] --> Loop 72 
* CEs [113] --> Loop 73 
* CEs [148] --> Loop 74 
* CEs [108] --> Loop 75 
* CEs [137] --> Loop 76 
* CEs [132] --> Loop 77 
* CEs [136] --> Loop 78 
* CEs [131] --> Loop 79 
* CEs [122] --> Loop 80 
* CEs [121] --> Loop 81 
* CEs [126] --> Loop 82 
* CEs [127] --> Loop 83 
* CEs [125] --> Loop 84 
* CEs [120] --> Loop 85 
* CEs [130] --> Loop 86 
* CEs [134] --> Loop 87 
* CEs [129] --> Loop 88 
* CEs [124] --> Loop 89 
* CEs [119] --> Loop 90 
* CEs [135] --> Loop 91 
* CEs [117] --> Loop 92 
* CEs [116] --> Loop 93 
* CEs [115] --> Loop 94 
* CEs [114] --> Loop 95 
* CEs [112] --> Loop 96 
* CEs [147] --> Loop 97 
* CEs [146] --> Loop 98 
* CEs [111] --> Loop 99 
* CEs [109] --> Loop 100 
* CEs [144] --> Loop 101 
* CEs [145] --> Loop 102 
* CEs [110] --> Loop 103 
* CEs [107] --> Loop 104 
* CEs [106] --> Loop 105 
* CEs [105] --> Loop 106 
* CEs [104] --> Loop 107 
* CEs [65] --> Loop 108 
* CEs [73] --> Loop 109 
* CEs [79] --> Loop 110 
* CEs [72,91,94] --> Loop 111 
* CEs [71] --> Loop 112 
* CEs [100] --> Loop 113 
* CEs [70] --> Loop 114 
* CEs [69,82] --> Loop 115 
* CEs [80] --> Loop 116 
* CEs [92,95] --> Loop 117 
* CEs [101] --> Loop 118 
* CEs [83] --> Loop 119 
* CEs [68] --> Loop 120 
* CEs [67,85] --> Loop 121 
* CEs [66,88] --> Loop 122 
* CEs [76] --> Loop 123 
* CEs [86] --> Loop 124 
* CEs [89] --> Loop 125 
* CEs [77] --> Loop 126 
* CEs [103] --> Loop 127 
* CEs [74,75,97] --> Loop 128 
* CEs [81] --> Loop 129 
* CEs [93,96,98,99] --> Loop 130 
* CEs [102] --> Loop 131 
* CEs [84] --> Loop 132 
* CEs [87] --> Loop 133 
* CEs [90] --> Loop 134 
* CEs [78] --> Loop 135 

### Ranking functions of CR f19(F,G,H,I,J,K,L,M,N,O,P,G1,H1,I1,J1,K1,L1,M1,N1) 

#### Partial ranking functions of CR f19(F,G,H,I,J,K,L,M,N,O,P,G1,H1,I1,J1,K1,L1,M1,N1) 
* Partial RF of phase [63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107]:
  - RF of loop [64:1,65:1,66:1,76:1,77:1,78:1,79:1,82:1,83:1,84:1,86:1,87:1,88:1,89:1,91:1]:
    F+G-K-1 depends on loops [63:1,68:1,69:1,70:1,71:1] 
  - RF of loop [65:1,66:1,67:1,75:1,77:1,79:1,80:1,81:1,82:1,83:1,84:1,85:1,86:1,88:1,89:1,90:1,104:1,105:1,106:1,107:1]:
    H-L+1 depends on loops [63:1,64:1,68:1,69:1,70:1,71:1,76:1,78:1,87:1,91:1] 
  - RF of loop [67:1,80:1,81:1,85:1,90:1]:
    F/4+G/4-K/4-3/4 depends on loops [63:1,68:1,69:1,70:1,71:1] 
  - RF of loop [71:1,84:1,85:1,86:1,91:1,94:1,103:1,106:1]:
    I-J depends on loops [63:1,64:1,65:1,66:1,67:1,68:1,69:1,70:1,72:1,73:1,74:1,75:1,76:1,77:1,78:1,79:1,80:1,81:1,82:1,83:1,87:1,88:1,89:1,90:1,92:1,93:1,95:1,96:1,97:1,98:1,99:1,100:1,101:1,104:1,105:1,107:1] 
  - RF of loop [72:1,75:1,92:1,93:1,94:1,95:1,104:1,105:1,106:1,107:1]:
    F/2+G/2-K/2-1/2 depends on loops [63:1,68:1,69:1,70:1,71:1] 


### Specialization of cost equations f69/16 
* CE 46 is refined into CE [149] 
* CE 45 is refined into CE [150] 
* CE 44 is refined into CE [151] 


### Cost equations --> "Loop" of f69/16 
* CEs [151] --> Loop 136 
* CEs [149] --> Loop 137 
* CEs [150] --> Loop 138 

### Ranking functions of CR f69(H,J,K,N,P,Q,X,Y,Z,G1,H1,I1,J1,K1,L1,M1) 

#### Partial ranking functions of CR f69(H,J,K,N,P,Q,X,Y,Z,G1,H1,I1,J1,K1,L1,M1) 


### Specialization of cost equations f66/23 
* CE 42 is refined into CE [152] 
* CE 40 is refined into CE [153,154,155] 
* CE 43 is refined into CE [156] 
* CE 41 is refined into CE [157,158,159] 


### Cost equations --> "Loop" of f66/23 
* CEs [159] --> Loop 139 
* CEs [158] --> Loop 140 
* CEs [157] --> Loop 141 
* CEs [152] --> Loop 142 
* CEs [153] --> Loop 143 
* CEs [156] --> Loop 144 
* CEs [154] --> Loop 145 
* CEs [155] --> Loop 146 

### Ranking functions of CR f66(F,H,J,K,L,N,P,Q,S,W,X,Y,Z,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1) 
* RF of phase [141]: [F/2-K/2+L/2-1/2,F/2-K/2+P/2-1/2]

#### Partial ranking functions of CR f66(F,H,J,K,L,N,P,Q,S,W,X,Y,Z,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1) 
* Partial RF of phase [141]:
  - RF of loop [141:1]:
    F/2-K/2+L/2-1/2
    F/2-K/2+P/2-1/2


### Specialization of cost equations f63/25 
* CE 35 is refined into CE [160] 
* CE 33 is refined into CE [161,162,163,164,165,166,167,168,169,170] 
* CE 36 is refined into CE [171] 
* CE 34 is refined into CE [172,173,174,175,176,177,178,179] 


### Cost equations --> "Loop" of f63/25 
* CEs [179] --> Loop 147 
* CEs [175] --> Loop 148 
* CEs [176] --> Loop 149 
* CEs [178] --> Loop 150 
* CEs [177] --> Loop 151 
* CEs [173] --> Loop 152 
* CEs [172] --> Loop 153 
* CEs [174] --> Loop 154 
* CEs [160] --> Loop 155 
* CEs [168] --> Loop 156 
* CEs [167] --> Loop 157 
* CEs [166] --> Loop 158 
* CEs [165] --> Loop 159 
* CEs [164] --> Loop 160 
* CEs [163] --> Loop 161 
* CEs [162] --> Loop 162 
* CEs [161] --> Loop 163 
* CEs [171] --> Loop 164 
* CEs [169,170] --> Loop 165 

### Ranking functions of CR f63(F,H,J,K,L,N,P,Q,S,V,W,X,Y,Z,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1) 

#### Partial ranking functions of CR f63(F,H,J,K,L,N,P,Q,S,V,W,X,Y,Z,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1) 
* Partial RF of phase [147,148,149,150,151,152,153,154]:
  - RF of loop [148:1,149:1,151:1,154:1]:
    H-J+1 depends on loops [147:1,150:1] 
  - RF of loop [148:1,150:1,151:1]:
    F-K+P-1 depends on loops [147:1] 
  - RF of loop [149:1]:
    F/4-K/4+P/4-3/4 depends on loops [147:1] 
  - RF of loop [152:1,154:1]:
    F/2-K/2+P/2-1/2 depends on loops [147:1] 


### Specialization of cost equations f53/38 
* CE 23 is refined into CE [180] 
* CE 21 is refined into CE [181,182,183,184,185,186,187,188,189,190,191,192,193,194,195] 
* CE 24 is refined into CE [196] 
* CE 22 is refined into CE [197,198,199] 


### Cost equations --> "Loop" of f53/38 
* CEs [199] --> Loop 166 
* CEs [198] --> Loop 167 
* CEs [197] --> Loop 168 
* CEs [180] --> Loop 169 
* CEs [181] --> Loop 170 
* CEs [192] --> Loop 171 
* CEs [191] --> Loop 172 
* CEs [190] --> Loop 173 
* CEs [185,189] --> Loop 174 
* CEs [184] --> Loop 175 
* CEs [183] --> Loop 176 
* CEs [182,188] --> Loop 177 
* CEs [187] --> Loop 178 
* CEs [186] --> Loop 179 
* CEs [196] --> Loop 180 
* CEs [195] --> Loop 181 
* CEs [194] --> Loop 182 
* CEs [193] --> Loop 183 

### Ranking functions of CR f53(B,F,G,H,J,K,L,N,P,Q,R,S,T,U,V,W,X,Y,Z,A1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1,R1,S1,T1,U1,V1,W1,X1) 

#### Partial ranking functions of CR f53(B,F,G,H,J,K,L,N,P,Q,R,S,T,U,V,W,X,Y,Z,A1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1,R1,S1,T1,U1,V1,W1,X1) 
* Partial RF of phase [166,167,168]:
  - RF of loop [167:1]:
    G-L depends on loops [166:1] 


### Specialization of cost equations f10/51 
* CE 10 is refined into CE [200] 
* CE 7 is refined into CE [201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238] 
* CE 9 is refined into CE [239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289] 
* CE 11 is refined into CE [290] 
* CE 8 is refined into CE [291,292,293,294,295,296,297,298,299] 


### Cost equations --> "Loop" of f10/51 
* CEs [296,299] --> Loop 184 
* CEs [298] --> Loop 185 
* CEs [297] --> Loop 186 
* CEs [293] --> Loop 187 
* CEs [295] --> Loop 188 
* CEs [294] --> Loop 189 
* CEs [292] --> Loop 190 
* CEs [291] --> Loop 191 
* CEs [200] --> Loop 192 
* CEs [244] --> Loop 193 
* CEs [241,243] --> Loop 194 
* CEs [240,242,248] --> Loop 195 
* CEs [246,247] --> Loop 196 
* CEs [245,249] --> Loop 197 
* CEs [212,217] --> Loop 198 
* CEs [201,209,210,218,223,224,239,250,256,257,258,259,260,261,262,263,264,265,266,267] --> Loop 199 
* CEs [204] --> Loop 200 
* CEs [202,203,211,213] --> Loop 201 
* CEs [205,206,207,208,214,215,216,219,220,221,222] --> Loop 202 
* CEs [290] --> Loop 203 
* CEs [251] --> Loop 204 
* CEs [253,254] --> Loop 205 
* CEs [252] --> Loop 206 
* CEs [231] --> Loop 207 
* CEs [228,229,234,236,237,238,255,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289] --> Loop 208 
* CEs [227] --> Loop 209 
* CEs [225,226,230,232] --> Loop 210 
* CEs [233,235] --> Loop 211 

### Ranking functions of CR f10(B,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1,R1,S1,T1,U1,V1,W1,X1,Y1,Z1,A2,B2,C2,D2,E2,F2) 

#### Partial ranking functions of CR f10(B,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1,R1,S1,T1,U1,V1,W1,X1,Y1,Z1,A2,B2,C2,D2,E2,F2) 
* Partial RF of phase [184,185,186,187,188,189,190,191]:
  - RF of loop [185:1,186:1,188:1,189:1,190:1,191:1]:
    B depends on loops [184:1,187:1] 


### Specialization of cost equations f10_loop_cont/29 
* CE 12 is refined into CE [300] 
* CE 13 is refined into CE [301] 


### Cost equations --> "Loop" of f10_loop_cont/29 
* CEs [300] --> Loop 212 
* CEs [301] --> Loop 213 

### Ranking functions of CR f10_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,B1,C1) 

#### Partial ranking functions of CR f10_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,B1,C1) 


### Specialization of cost equations f2_loop_cont/29 
* CE 6 is refined into CE [302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324] 
* CE 5 is refined into CE [325] 


### Cost equations --> "Loop" of f2_loop_cont/29 
* CEs [312] --> Loop 214 
* CEs [311] --> Loop 215 
* CEs [310] --> Loop 216 
* CEs [309] --> Loop 217 
* CEs [308] --> Loop 218 
* CEs [307] --> Loop 219 
* CEs [306,314] --> Loop 220 
* CEs [305] --> Loop 221 
* CEs [304] --> Loop 222 
* CEs [303] --> Loop 223 
* CEs [313] --> Loop 224 
* CEs [302] --> Loop 225 
* CEs [325] --> Loop 226 
* CEs [322] --> Loop 227 
* CEs [321] --> Loop 228 
* CEs [320] --> Loop 229 
* CEs [319] --> Loop 230 
* CEs [318,323,324] --> Loop 231 
* CEs [317] --> Loop 232 
* CEs [316] --> Loop 233 
* CEs [315] --> Loop 234 

### Ranking functions of CR f2_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,B1,C1) 

#### Partial ranking functions of CR f2_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,B1,C1) 


### Specialization of cost equations start/28 
* CE 1 is refined into CE [326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367] 


### Cost equations --> "Loop" of start/28 
* CEs [347] --> Loop 235 
* CEs [346] --> Loop 236 
* CEs [345] --> Loop 237 
* CEs [343] --> Loop 238 
* CEs [344] --> Loop 239 
* CEs [367] --> Loop 240 
* CEs [366] --> Loop 241 
* CEs [365] --> Loop 242 
* CEs [363] --> Loop 243 
* CEs [364] --> Loop 244 
* CEs [342] --> Loop 245 
* CEs [341] --> Loop 246 
* CEs [340] --> Loop 247 
* CEs [362] --> Loop 248 
* CEs [361] --> Loop 249 
* CEs [360] --> Loop 250 
* CEs [327,348] --> Loop 251 
* CEs [328] --> Loop 252 
* CEs [339] --> Loop 253 
* CEs [338] --> Loop 254 
* CEs [337] --> Loop 255 
* CEs [336] --> Loop 256 
* CEs [335] --> Loop 257 
* CEs [333] --> Loop 258 
* CEs [334] --> Loop 259 
* CEs [359] --> Loop 260 
* CEs [358] --> Loop 261 
* CEs [357] --> Loop 262 
* CEs [356] --> Loop 263 
* CEs [355] --> Loop 264 
* CEs [353] --> Loop 265 
* CEs [354] --> Loop 266 
* CEs [332] --> Loop 267 
* CEs [331] --> Loop 268 
* CEs [330] --> Loop 269 
* CEs [352] --> Loop 270 
* CEs [351] --> Loop 271 
* CEs [350] --> Loop 272 
* CEs [329] --> Loop 273 
* CEs [349] --> Loop 274 
* CEs [326] --> Loop 275 

### Ranking functions of CR start(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,G1) 

#### Partial ranking functions of CR start(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,G1) 


Computing Bounds
=====================================

#### Cost of chains of f2(A,B,C,A1,G1,H1,I1,J1):
* Chain [[45],47]: 1*it(45)+0
  Such that:it(45) =< A-B+1

  with precondition: [G1=3,A>=B] 

* Chain [[45],46]: 1*it(45)+0
  Such that:it(45) =< A-B+1

  with precondition: [G1=9,J1=1,A+1=H1,A>=B] 

* Chain [47]: 0
  with precondition: [G1=3] 

* Chain [46]: 0
  with precondition: [G1=9,J1=1,I1=C,B=H1,B>=A+1] 


#### Cost of chains of f26(G,H,I,J,K,L,M,N,G1,H1,I1,J1,K1):
* Chain [[48]]...: 1*it(48)+0
  with precondition: [G>=J,H>=L,I>=J+1,G1>=3,6>=G1] 

* Chain [[48],50]: 1*it(48)+0
  with precondition: [G1=3,G>=J,I>=J+1,H>=L] 

* Chain [[48],49]: 1*it(48)+0
  with precondition: [G1=6,K+2=H1,G+J+J1=I+I1,I1>=H+1,G>=J,I>=J+1,I1>=G+L,G+H>=I1] 

* Chain [50]: 0
  with precondition: [G1=3,G>=J,I>=J+1] 

* Chain [49]: 0
  with precondition: [G1=6,H1=K+2,J1=M,K1=N,L=I1,L>=H+1,G>=J,I>=J+1] 


#### Cost of chains of f23(F,G,H,I,J,K,L,M,N,O,G1,H1,I1,J1,K1,L1):
* Chain [[52],57]: 1*it(52)+0
  Such that:it(52) =< F/2+J/2-K/2

  with precondition: [G1=3,L>=H+1,G>=J,I>=J+1,F+J>=K+2] 

* Chain [[52],55]: 1*it(52)+0
  Such that:it(52) =< F/2+J/2-K/2

  with precondition: [G1=3,L>=H+1,G>=J,I>=J+1,F+J>=K+4] 

* Chain [[52],54]: 1*it(52)+0
  Such that:it(52) =< -K/2+H1/2

  with precondition: [G1=8,L=I1,M=J1,N=K1,L>=H+1,G>=J,I>=J+1,H1>=K+2,H1+1>=F+J,F+J>=H1] 

* Chain [[51]]...: 2*it(51)+0
  with precondition: [F+J>=K+2,I>=J+1,G>=J,H>=L,G1>=3,8>=G1] 

* Chain [[51],[52],57]: 2*it(51)+1*s(4)+0
  with precondition: [G1=3,G>=J,I>=J+1,H>=L,F+J>=K+2] 

* Chain [[51],[52],55]: 2*it(51)+1*s(5)+0
  with precondition: [G1=3,G>=J,I>=J+1,H>=L,F+J>=K+2] 

* Chain [[51],[52],54]: 2*it(51)+1*s(6)+0
  with precondition: [G1=8,I1>=H+1,G>=J,I>=J+1,H>=L,H1+1>=F+J,F+J>=K+2,F+J>=H1] 

* Chain [[51],58]...: 3*it(51)+0
  with precondition: [G1=3,G>=J,I>=J+1,H>=L,F+J>=K+2] 

* Chain [[51],57]: 2*it(51)+0
  with precondition: [G1=3,G>=J,I>=J+1,H>=L,F+J>=K+2] 

* Chain [[51],56]: 3*it(51)+0
  with precondition: [G1=3,G>=J,I>=J+1,H>=L,F+J>=K+2] 

* Chain [[51],55]: 2*it(51)+0
  with precondition: [G1=3,G>=J,I>=J+1,H>=L,F+J>=K+2] 

* Chain [[51],54]: 2*it(51)+0
  with precondition: [G1=8,G>=J,I>=J+1,H>=L,H1+1>=F+J,F+J>=K+2] 

* Chain [[51],53,[52],57]: 3*it(51)+1*it([53,[52],57])+1*s(10)+0
  Such that:it([53,[52],57]) =< 1

  with precondition: [G1=3,G>=1,G>=J,I>=J+1,H>=L,F+J>=K+2] 

* Chain [[51],53,[52],55]: 3*it(51)+1*it([53,[52],55])+1*s(12)+0
  Such that:it([53,[52],55]) =< 1

  with precondition: [G1=3,G>=1,G>=J,I>=J+1,H>=L,F+J>=K+2] 

* Chain [[51],53,[52],54]: 3*it(51)+1*it([53,[52],54])+1*s(14)+0
  Such that:it([53,[52],54]) =< 1

  with precondition: [G1=8,G+J+J1=I+I1,I1>=H+1,G>=J,I>=J+1,H>=L,H1+1>=F+J,F+J>=K+2,F+J>=H1,G+H>=I1] 

* Chain [[51],53,57]: 3*it(51)+1
  with precondition: [G1=3,G>=1,G>=J,I>=J+1,H>=L,F+J>=K+2] 

* Chain [[51],53,55]: 3*it(51)+1
  with precondition: [G1=3,G>=1,G>=J,I>=J+1,H>=L,F+J>=K+2] 

* Chain [[51],53,54]: 3*it(51)+1
  with precondition: [G1=8,G+J+J1=I+I1,I1>=H+1,G>=J,I>=J+1,H>=L,H1+1>=F+J,F+J>=K+2,F+J>=H1,G+H>=I1] 

* Chain [58]...: 1*s(7)+0
  with precondition: [G1=3,G>=J,I>=J+1,H>=L,F+J>=K+2] 

* Chain [57]: 0
  with precondition: [G1=3,G>=J,I>=J+1] 

* Chain [56]: 1*s(8)+0
  with precondition: [G1=3,G>=J,I>=J+1,H>=L,F+J>=K+2] 

* Chain [55]: 0
  with precondition: [G1=3,G>=J,I>=J+1,F+J>=K+2] 

* Chain [54]: 0
  with precondition: [G1=8,I1=L,J1=M,K1=N,K=H1,G>=J,I>=J+1,K+1>=F+J] 

* Chain [53,[52],57]: 1*it(52)+1*s(9)+1
  Such that:it(52) =< F/2+J/2-K/2

  with precondition: [G1=3,G>=1,G>=J,I>=J+1,H>=L,F+J>=K+4] 

* Chain [53,[52],55]: 1*it(52)+1*s(9)+1
  Such that:it(52) =< F/2+J/2-K/2

  with precondition: [G1=3,G>=1,G>=J,I>=J+1,H>=L,F+J>=K+6] 

* Chain [53,[52],54]: 1*it(52)+1*s(9)+1
  Such that:it(52) =< -K/2+H1/2

  with precondition: [G1=8,G+J+J1=I+I1,I1>=H+1,G>=J,I>=J+1,H1>=K+4,H1+1>=F+J,I1>=G+L,F+J>=H1,G+H>=I1] 

* Chain [53,57]: 1*s(9)+1
  with precondition: [G1=3,G>=1,G>=J,I>=J+1,H>=L,F+J>=K+2] 

* Chain [53,55]: 1*s(9)+1
  with precondition: [G1=3,G>=1,G>=J,I>=J+1,H>=L,F+J>=K+4] 

* Chain [53,54]: 1*s(9)+1
  with precondition: [G1=8,H1=K+2,G+J+J1=I+I1,I1>=H+1,G>=J,I>=J+1,H1+1>=F+J,I1>=G+L,F+J>=H1,G+H>=I1] 


#### Cost of chains of f41(F,I,J,O,G1,H1,I1,J1):
* Chain [[59]]...: 1*it(59)+0
  with precondition: [O>=F,I>=O+1,G1>=3,7>=G1] 

* Chain [[59],62]: 1*it(59)+0
  with precondition: [G1=3,O>=F,I>=O+1] 

* Chain [[59],61]: 1*it(59)+0
  with precondition: [G1=7,F+J=I1,O>=F,J1>=F,I>=O+1,2*J1>=H1,H1>=J1+1] 

* Chain [[59],60]: 1*it(59)+0
  with precondition: [G1=7,F+J=I1,O>=F,I>=O+1,F>=J1+1,H1>=J1+1] 

* Chain [62]: 0
  with precondition: [G1=3] 

* Chain [61]: 0
  with precondition: [G1=7,O=J1,I+O=H1,F+J=I1,O>=F,O>=I] 

* Chain [60]: 0
  with precondition: [G1=7,O=J1,I+O=H1,F+J=I1,F>=O+1] 


#### Cost of chains of f19(F,G,H,I,J,K,L,M,N,O,P,G1,H1,I1,J1,K1,L1,M1,N1):
* Chain [[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107]]...: 142*it(63)+0
  with precondition: [G>=J,G1>=3,5>=G1] 

* Chain [[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107],135]...: 144*it(63)+1
  with precondition: [G1=3,G>=1,G>=J,H>=L,F+G>=K+2] 

* Chain [[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107],134]...: 144*it(63)+0
  with precondition: [G1=3,G>=1,G>=J,H>=L,F+G>=K+2] 

* Chain [[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107],133]...: 134*it(63)+1*it([133])+1*s(167)+9*s(173)+1*s(219)+0
  Such that:it([133]) =< 1

  with precondition: [G1=3,G>=1,G>=J,H>=L,F+G>=K+2] 

* Chain [[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107],132]...: 133*it(63)+1*s(167)+9*s(173)+1*s(223)+0
  with precondition: [G1=3,G>=J,F+G>=K+2] 

* Chain [[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107],131]...: 143*it(63)+0
  with precondition: [G1=3,G>=F+1,G>=J] 

* Chain [[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107],130]...: 143*aux(128)+0
  with precondition: [G1=3,G>=J,H>=L,F+G>=K+2] 

* Chain [[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107],129]...: 143*it(63)+0
  with precondition: [G1=3,G>=J] 

* Chain [[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107],128]...: 143*aux(129)+0
  with precondition: [G1=3,G>=J,H>=L,F+G>=K+2] 

* Chain [[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107],127]: 142*it(63)+0
  with precondition: [G1=3,G>=J] 

* Chain [[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107],126]: 144*it(63)+1
  with precondition: [G1=3,G>=1,G>=J,H>=L,F+G>=K+2] 

* Chain [[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107],125]: 144*it(63)+0
  with precondition: [G1=3,G>=1,G>=J,H>=L,F+G>=K+2] 

* Chain [[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107],124]: 134*it(63)+1*it([124])+1*s(167)+9*s(173)+1*s(246)+0
  Such that:it([124]) =< 1

  with precondition: [G1=3,G>=1,G>=J,H>=L,F+G>=K+2] 

* Chain [[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107],123]: 143*it(63)+1
  with precondition: [G1=3,G>=1,G>=J,H>=L,F+G>=K+2] 

* Chain [[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107],122]: 143*aux(163)+0
  with precondition: [G1=3,G>=1,G>=J,H>=L,F+G>=K+2] 

* Chain [[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107],121]: 135*it(63)+1*it([121])+1*s(167)+9*s(173)+2*s(255)+0
  Such that:it([121]) =< 1

  with precondition: [G1=3,G>=1,G>=J,H>=L,F+G>=K+2] 

* Chain [[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107],120]: 133*it(63)+1*it([120])+1*s(167)+9*s(173)+1*s(260)+0
  Such that:it([120]) =< 1

  with precondition: [G1=3,G>=1,G>=J,H>=L,F+G>=K+2] 

* Chain [[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107],119]: 133*it(63)+1*s(167)+9*s(173)+1*s(264)+0
  with precondition: [G1=3,G>=J,F+G>=K+2] 

* Chain [[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107],118]: 143*it(63)+0
  with precondition: [G1=3,G>=F+1,G>=J] 

* Chain [[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107],117]: 143*aux(264)+0
  with precondition: [G1=3,G>=J,H>=L,F+G>=K+2] 

* Chain [[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107],116]: 143*it(63)+0
  with precondition: [G1=3,G>=J] 

* Chain [[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107],115]: 132*it(63)+1*s(167)+9*s(173)+2*s(275)+0
  with precondition: [G1=3,G>=J,F+G>=K+2] 

* Chain [[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107],114]: 132*it(63)+1*s(167)+9*s(173)+1*s(278)+0
  with precondition: [G1=3,G>=J,F+G>=K+2] 

* Chain [[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107],113]: 142*it(63)+0
  with precondition: [G1=3,G>=J] 

* Chain [[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107],112]: 142*it(63)+0
  with precondition: [G1=3,G>=J] 

* Chain [[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107],111]: 143*aux(332)+0
  with precondition: [G1=3,G>=J,H>=L,F+G>=K+2] 

* Chain [[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107],110]: 142*it(63)+0
  with precondition: [G1=3,G>=J] 

* Chain [[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107],109]: 142*it(63)+0
  with precondition: [G1=3,G>=J,F+G>=K+2] 

* Chain [[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107],108]: 142*it(63)+0
  with precondition: [G1=5,I1>=G+1,G>=J] 

* Chain [135]...: 2*s(212)+1
  with precondition: [G1=3,G>=1,I>=F+1,G>=J,I>=J+1,H>=L,K+3>=F+J,F+J>=K+2] 

* Chain [134]...: 2*s(214)+0
  with precondition: [G1=3,G>=1,I>=F+1,G>=J,I>=J+1,H>=L,F+J>=K+2] 

* Chain [133]...: 1*s(216)+2*s(217)+1
  Such that:s(216) =< F/2+J/2-K/2

  with precondition: [G1=3,G>=1,I>=F+1,G>=J,I>=J+1,H>=L,F+J>=K+4] 

* Chain [132]...: 1*s(221)+1*s(222)+0
  Such that:s(221) =< F/2+J/2-K/2

  with precondition: [G1=3,I>=F+1,L>=H+1,G>=J,I>=J+1,F+J>=K+2] 

* Chain [131]...: 1*s(225)+0
  with precondition: [G1=3,I>=F+1,J>=I,G>=J] 

* Chain [130]...: 1*aux(128)+0
  with precondition: [G1=3,I>=F+1,G>=J,I>=J+1,H>=L,F+J>=K+2] 

* Chain [129]...: 1*s(235)+0
  with precondition: [G1=3,I>=F+1,G>=J,I>=J+1,K+1>=F+J] 

* Chain [128]...: 1*aux(129)+0
  with precondition: [G1=3,G>=J,I>=J+1,H>=L,F+J>=K+2] 

* Chain [127]: 0
  with precondition: [G1=3] 

* Chain [126]: 2*s(239)+1
  with precondition: [G1=3,G>=1,I>=F+1,G>=J,I>=J+1,H>=L,K+3>=F+J,F+J>=K+2] 

* Chain [125]: 2*s(241)+0
  with precondition: [G1=3,G>=1,I>=F+1,G>=J,I>=J+1,H>=L,F+J>=K+2] 

* Chain [124]: 1*s(243)+2*s(244)+1
  Such that:s(243) =< F/2+J/2-K/2

  with precondition: [G1=3,G>=1,I>=F+1,G>=J,I>=J+1,H>=L,F+J>=K+4] 

* Chain [123]: 1*s(248)+1
  with precondition: [G1=3,G>=1,G>=J,I>=J+1,H>=L,K+3>=F+J,F+J>=K+2] 

* Chain [122]: 1*aux(163)+0
  with precondition: [G1=3,G>=1,G>=J,I>=J+1,H>=L,F+J>=K+2] 

* Chain [121]: 2*s(251)+3*s(252)+1
  Such that:aux(164) =< F/2+J/2-K/2
s(251) =< aux(164)

  with precondition: [G1=3,G>=1,G>=J,I>=J+1,H>=L,F+J>=K+4] 

* Chain [120]: 1*s(258)+1*s(259)+1
  Such that:s(258) =< F/2+J/2-K/2

  with precondition: [G1=3,G>=1,G>=J,I>=J+1,H>=L,F+J>=K+6] 

* Chain [119]: 1*s(262)+1*s(263)+0
  Such that:s(262) =< F/2+J/2-K/2

  with precondition: [G1=3,I>=F+1,L>=H+1,G>=J,I>=J+1,F+J>=K+2] 

* Chain [118]: 1*s(266)+0
  with precondition: [G1=3,I>=F+1,J>=I,G>=J] 

* Chain [117]: 1*aux(264)+0
  with precondition: [G1=3,I>=F+1,G>=J,I>=J+1,H>=L,F+J>=K+2] 

* Chain [116]: 1*s(272)+0
  with precondition: [G1=3,I>=F+1,G>=J,I>=J+1,K+1>=F+J] 

* Chain [115]: 2*s(273)+0
  Such that:aux(265) =< F/2+J/2-K/2
s(273) =< aux(265)

  with precondition: [G1=3,L>=H+1,G>=J,I>=J+1,F+J>=K+2] 

* Chain [114]: 1*s(277)+0
  Such that:s(277) =< F/2+J/2-K/2

  with precondition: [G1=3,L>=H+1,G>=J,I>=J+1,F+J>=K+4] 

* Chain [113]: 0
  with precondition: [G1=3,J>=I,G>=J] 

* Chain [112]: 0
  with precondition: [G1=3,G>=J,I>=J+1] 

* Chain [111]: 1*aux(332)+0
  with precondition: [G1=3,G>=J,I>=J+1,H>=L,F+J>=K+2] 

* Chain [110]: 0
  with precondition: [G1=3,G>=J,I>=J+1,K+1>=F+J] 

* Chain [109]: 0
  with precondition: [G1=3,G>=J,I>=J+1,F+J>=K+2] 

* Chain [108]: 0
  with precondition: [G1=5,H1=I,J1=K,K1=L,L1=M,M1=N,N1=O,J=I1,J>=G+1] 


#### Cost of chains of f69(H,J,K,N,P,Q,X,Y,Z,G1,H1,I1,J1,K1,L1,M1):
* Chain [[136]]...: 1*it(136)+0
  with precondition: [H>=J,G1>=2,3>=G1] 

* Chain [[136],138]: 1*it(136)+0
  with precondition: [G1=2,K+2=I1,Q+K1=H1,Q+L1=P+H1,H1>=H+1,H1>=J+Q,H+Q>=H1] 

* Chain [[136],137]: 1*it(136)+0
  with precondition: [G1=3,H>=J] 

* Chain [138]: 0
  with precondition: [G1=2,I1=K+2,J1=N,K1=X,L1=Y,M1=Z,J=H1,J>=H+1] 

* Chain [137]: 0
  with precondition: [G1=3] 


#### Cost of chains of f66(F,H,J,K,L,N,P,Q,S,W,X,Y,Z,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1):
* Chain [[141],144]: 1*it(141)+0
  Such that:it(141) =< F/2-K/2+L/2

  with precondition: [G1=3,J>=H+1,P>=L,F+L>=K+2] 

* Chain [[141],143]: 1*it(141)+0
  Such that:it(141) =< F/2-K/2+L/2

  with precondition: [G1=3,J>=H+1,P>=L,F+L>=K+4] 

* Chain [[141],142]: 1*it(141)+0
  Such that:it(141) =< -K/2+I1/2

  with precondition: [G1=4,J=H1,N=K1,X=N1,Y=O1,Z=P1,F+L=J1,J>=H+1,I1>=K+2,P>=L,I1+1>=F+L,F+L>=I1] 

* Chain [[139]]...: 2*it(139)+0
  with precondition: [F+L>=K+2,P>=L,H>=J,G1>=3,4>=G1] 

* Chain [[139],[141],144]: 2*it(139)+1*s(334)+0
  with precondition: [G1=3,H>=J,P>=L,F+L>=K+2] 

* Chain [[139],[141],143]: 2*it(139)+1*s(335)+0
  with precondition: [G1=3,H>=J,P>=L,F+L>=K+2] 

* Chain [[139],[141],142]: 2*it(139)+1*s(336)+0
  with precondition: [G1=4,F+L=J1,H1>=H+1,H>=J,P>=L,I1+1>=F+L,F+L>=K+2,F+L>=I1] 

* Chain [[139],146]...: 3*it(139)+0
  with precondition: [G1=3,H>=J,P>=L,F+L>=K+2] 

* Chain [[139],145]: 3*it(139)+0
  with precondition: [G1=3,H>=J,P>=L,F+L>=K+2] 

* Chain [[139],144]: 2*it(139)+0
  with precondition: [G1=3,H>=J,P>=L,F+L>=K+2] 

* Chain [[139],143]: 2*it(139)+0
  with precondition: [G1=3,H>=J,P>=L,F+L>=K+2] 

* Chain [[139],142]: 2*it(139)+0
  with precondition: [G1=4,F+L=J1,H>=J,P>=L,I1+1>=F+L,F+L>=K+2] 

* Chain [[139],140,[141],144]: 3*it(139)+1*it([140,[141],144])+1*s(340)+0
  Such that:it([140,[141],144]) =< 1

  with precondition: [G1=3,Q>=1,H>=J,P>=L,F+L>=K+2] 

* Chain [[139],140,[141],143]: 3*it(139)+1*it([140,[141],143])+1*s(342)+0
  Such that:it([140,[141],143]) =< 1

  with precondition: [G1=3,Q>=1,H>=J,P>=L,F+L>=K+2] 

* Chain [[139],140,[141],142]: 3*it(139)+1*it([140,[141],142])+1*s(344)+0
  Such that:it([140,[141],142]) =< 1

  with precondition: [G1=4,Q+N1=H1,F+L=J1,P+N1=O1,H>=J,P>=L,H>=N1,I1+1>=F+L,Q+N1>=H+1,F+L>=K+2,F+L>=I1] 

* Chain [[139],140,144]: 3*it(139)+1
  with precondition: [G1=3,Q>=1,H>=J,P>=L,F+L>=K+2] 

* Chain [[139],140,143]: 3*it(139)+1
  with precondition: [G1=3,Q>=1,H>=J,P>=L,F+L>=K+2] 

* Chain [[139],140,142]: 3*it(139)+1
  with precondition: [G1=4,Q+N1=H1,F+L=J1,P+N1=O1,H>=J,P>=L,H>=N1,I1+1>=F+L,Q+N1>=H+1,F+L>=K+2,F+L>=I1] 

* Chain [146]...: 1*s(337)+0
  with precondition: [G1=3,H>=J,P>=L,F+L>=K+2] 

* Chain [145]: 1*s(338)+0
  with precondition: [G1=3,H>=J,P>=L,F+L>=K+2] 

* Chain [144]: 0
  with precondition: [G1=3,P>=L] 

* Chain [143]: 0
  with precondition: [G1=3,P>=L,F+L>=K+2] 

* Chain [142]: 0
  with precondition: [G1=4,H1=J,K1=N,N1=X,O1=Y,P1=Z,K=I1,F+L=J1,P>=L,K+1>=F+L] 

* Chain [140,[141],144]: 1*it(141)+1*s(339)+1
  Such that:it(141) =< F/2-K/2+L/2

  with precondition: [G1=3,Q>=1,H>=J,P>=L,F+L>=K+4] 

* Chain [140,[141],143]: 1*it(141)+1*s(339)+1
  Such that:it(141) =< F/2-K/2+L/2

  with precondition: [G1=3,Q>=1,H>=J,P>=L,F+L>=K+6] 

* Chain [140,[141],142]: 1*it(141)+1*s(339)+1
  Such that:it(141) =< -K/2+I1/2

  with precondition: [G1=4,Q+N1=H1,F+L=J1,P+N1=O1,N1>=J,I1>=K+4,J1>=I1,I1+1>=J1,H>=N1,Q+N1>=H+1,F+O1>=J1+N1] 

* Chain [140,144]: 1*s(339)+1
  with precondition: [G1=3,Q>=1,H>=J,P>=L,F+L>=K+2] 

* Chain [140,143]: 1*s(339)+1
  with precondition: [G1=3,Q>=1,H>=J,P>=L,F+L>=K+4] 

* Chain [140,142]: 1*s(339)+1
  with precondition: [G1=4,K+2=I1,Q+N1=H1,F+L=J1,Q+O1=P+H1,H1>=H+1,P>=L,K+3>=F+L,H1>=J+Q,F+L>=K+2,H+Q>=H1] 


#### Cost of chains of f63(F,H,J,K,L,N,P,Q,S,V,W,X,Y,Z,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1):
* Chain [[147,148,149,150,151,152,153,154]]...: 22*it(147)+0
  with precondition: [P>=L,G1>=3,5>=G1] 

* Chain [[147,148,149,150,151,152,153,154],165]...: 23*aux(389)+0
  with precondition: [G1=3,H>=J,P>=L,F+P>=K+2] 

* Chain [[147,148,149,150,151,152,153,154],164]: 22*it(147)+0
  with precondition: [G1=3,P>=L] 

* Chain [[147,148,149,150,151,152,153,154],163]: 23*it(147)+0
  with precondition: [G1=3,Q>=1,H>=J,P>=L,F+P>=K+2] 

* Chain [[147,148,149,150,151,152,153,154],162]: 22*it(147)+1*it([162])+1*s(391)+1*s(395)+1*s(402)+0
  Such that:it([162]) =< 1

  with precondition: [G1=3,Q>=1,H>=J,P>=L,F+P>=K+2] 

* Chain [[147,148,149,150,151,152,153,154],161]: 21*it(147)+1*it([161])+1*s(391)+1*s(395)+1*s(406)+0
  Such that:it([161]) =< 1

  with precondition: [G1=3,Q>=1,H>=J,P>=L,F+P>=K+2] 

* Chain [[147,148,149,150,151,152,153,154],160]: 20*it(147)+1*s(391)+1*s(395)+1*s(409)+0
  with precondition: [G1=3,P>=L,F+P>=K+2] 

* Chain [[147,148,149,150,151,152,153,154],159]: 20*it(147)+1*s(391)+1*s(395)+1*s(411)+0
  with precondition: [G1=3,P>=L,F+P>=K+2] 

* Chain [[147,148,149,150,151,152,153,154],158]: 23*it(147)+0
  with precondition: [G1=3,H>=J,P>=L,F+P>=K+2] 

* Chain [[147,148,149,150,151,152,153,154],157]: 22*it(147)+0
  with precondition: [G1=3,P>=L] 

* Chain [[147,148,149,150,151,152,153,154],156]: 22*it(147)+0
  with precondition: [G1=3,P>=L,F+P>=K+2] 

* Chain [[147,148,149,150,151,152,153,154],155]: 22*it(147)+0
  with precondition: [G1=5,P>=L,J1>=P+1] 

* Chain [165]...: 1*aux(389)+0
  with precondition: [G1=3,H>=J,P>=L,F+L>=K+2] 

* Chain [164]: 0
  with precondition: [G1=3] 

* Chain [163]: 1*s(399)+0
  with precondition: [G1=3,Q>=1,H>=J,P>=L,F+L>=K+2] 

* Chain [162]: 1*s(400)+2*s(401)+1
  Such that:s(400) =< F/2-K/2+L/2

  with precondition: [G1=3,Q>=1,H>=J,P>=L,F+L>=K+4] 

* Chain [161]: 1*s(404)+1*s(405)+1
  Such that:s(404) =< F/2-K/2+L/2

  with precondition: [G1=3,Q>=1,H>=J,P>=L,F+L>=K+6] 

* Chain [160]: 1*s(408)+0
  Such that:s(408) =< F/2-K/2+L/2

  with precondition: [G1=3,J>=H+1,P>=L,F+L>=K+2] 

* Chain [159]: 1*s(410)+0
  Such that:s(410) =< F/2-K/2+L/2

  with precondition: [G1=3,J>=H+1,P>=L,F+L>=K+4] 

* Chain [158]: 1*s(412)+0
  with precondition: [G1=3,H>=J,P>=L,F+L>=K+2] 

* Chain [157]: 0
  with precondition: [G1=3,P>=L] 

* Chain [156]: 0
  with precondition: [G1=3,P>=L,F+L>=K+2] 

* Chain [155]: 0
  with precondition: [G1=5,H1=J,I1=K,K1=N,L1=S,M1=V,N1=W,O1=X,P1=Y,Q1=Z,L=J1,L>=P+1] 


#### Cost of chains of f53(B,F,G,H,J,K,L,N,P,Q,R,S,T,U,V,W,X,Y,Z,A1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1,R1,S1,T1,U1,V1,W1,X1):
* Chain [[166,167,168]]...: 47*it(166)+0
  with precondition: [B>=1,G>=P+1,G1>=3,9>=G1] 

* Chain [[166,167,168],183]...: 48*it(166)+0
  with precondition: [G1=3,B>=1,G>=L+1,G>=P+1] 

* Chain [[166,167,168],182]...: 70*it(166)+0
  with precondition: [G1=3,B>=1,G>=L+1,G>=P+1] 

* Chain [[166,167,168],181]...: 69*it(166)+0
  with precondition: [G1=3,B>=1,G>=L+1,G>=P+1] 

* Chain [[166,167,168],180]: 47*it(166)+0
  with precondition: [G1=3,B>=1,G>=P+1] 

* Chain [[166,167,168],179]: 47*it(166)+1*s(445)+0
  with precondition: [G1=3,B>=1,G>=L+1,G>=P+1] 

* Chain [[166,167,168],178]: 47*it(166)+1*s(447)+0
  with precondition: [G1=3,B>=1,G>=L+1,G>=P+1] 

* Chain [[166,167,168],177]: 48*aux(482)+0
  with precondition: [G1=3,B>=1,G>=L+1,G>=P+1] 

* Chain [[166,167,168],176]: 49*it(166)+1*it([176])+1*s(452)+0
  Such that:it([176]) =< 1

  with precondition: [G1=3,B>=1,G>=L+1,G>=P+1] 

* Chain [[166,167,168],175]: 48*it(166)+1*it([175])+1*s(456)+0
  Such that:it([175]) =< 1

  with precondition: [G1=3,B>=1,G>=L+1,G>=P+1] 

* Chain [[166,167,168],174]: 48*aux(487)+0
  with precondition: [G1=3,B>=1,G>=L+1,G>=P+1] 

* Chain [[166,167,168],173]: 48*it(166)+0
  with precondition: [G1=3,B>=1,G>=L+1,G>=P+1] 

* Chain [[166,167,168],172]: 47*it(166)+0
  with precondition: [G1=3,B>=1,G>=L+1,G>=P+1] 

* Chain [[166,167,168],171]: 48*it(166)+0
  with precondition: [G1=3,B>=1,G>=L+1,G>=P+1] 

* Chain [[166,167,168],170]: 47*it(166)+0
  with precondition: [G1=3,B>=1,G>=P+1] 

* Chain [[166,167,168],169]: 47*it(166)+0
  with precondition: [G1=9,B=H1+1,M1=N1,B>=1,M1>=G,G>=P+1] 

* Chain [183]...: 1*s(441)+0
  with precondition: [G1=3,B>=1,H>=J,P>=L,G>=P+1,F+L>=K+2] 

* Chain [182]...: 23*s(442)+0
  with precondition: [G1=3,B>=1,H>=J,P>=L,G>=P+1,F+P>=K+2] 

* Chain [181]...: 22*s(443)+0
  with precondition: [G1=3,B>=1,P>=L,G>=P+1] 

* Chain [180]: 0
  with precondition: [G1=3,B>=1] 

* Chain [179]: 1*s(444)+0
  Such that:s(444) =< F/2-K/2+L/2

  with precondition: [G1=3,B>=1,J>=H+1,P>=L,G>=P+1,F+L>=K+2] 

* Chain [178]: 1*s(446)+0
  Such that:s(446) =< F/2-K/2+L/2

  with precondition: [G1=3,B>=1,J>=H+1,P>=L,G>=P+1,F+L>=K+4] 

* Chain [177]: 1*aux(482)+0
  with precondition: [G1=3,B>=1,H>=J,P>=L,G>=P+1,F+L>=K+2] 

* Chain [176]: 1*s(450)+2*s(451)+1
  Such that:s(450) =< F/2-K/2+L/2

  with precondition: [G1=3,B>=1,H>=J,P>=L,G>=P+1,F+L>=K+4] 

* Chain [175]: 1*s(454)+1*s(455)+1
  Such that:s(454) =< F/2-K/2+L/2

  with precondition: [G1=3,B>=1,H>=J,P>=L,G>=P+1,F+L>=K+6] 

* Chain [174]: 1*aux(487)+0
  with precondition: [G1=3,B>=1,H>=J,P>=L,G>=P+1,F+P>=K+2] 

* Chain [173]: 1*s(460)+0
  with precondition: [G1=3,B>=1,P>=L,G>=P+1] 

* Chain [172]: 0
  with precondition: [G1=3,B>=1,P>=L,G>=P+1,F+L>=K+2] 

* Chain [171]: 1*s(461)+0
  with precondition: [G1=3,B>=1,P>=L,G>=P+1,F+P>=K+2] 

* Chain [170]: 0
  with precondition: [G1=3,B>=1,G>=P+1] 

* Chain [169]: 0
  with precondition: [G1=9,I1=J,J1=K,K1=L,L1=N,N1=Q,O1=R,P1=S,Q1=T,R1=U,S1=V,T1=W,U1=X,V1=Y,W1=Z,B=H1+1,P=M1,B>=1,P>=G] 


#### Cost of chains of f10(B,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,G1,H1,I1,J1,K1,L1,M1,N1,O1,P1,Q1,R1,S1,T1,U1,V1,W1,X1,Y1,Z1,A2,B2,C2,D2,E2,F2):
* Chain [[184,185,186,187,188,189,190,191]]...: 764*it(185)+0
  with precondition: [B>=1] 

* Chain [[184,185,186,187,188,189,190,191],211]...: 765*aux(493)+0
  with precondition: [G1=3,B>=1] 

* Chain [[184,185,186,187,188,189,190,191],210]...: 770*it(185)+1*it([210])+1*s(516)+0
  Such that:it([210]) =< 1

  with precondition: [G1=3,B>=1] 

* Chain [[184,185,186,187,188,189,190,191],209]...: 766*it(185)+1*it([209])+1*s(519)+0
  Such that:it([209]) =< 1

  with precondition: [G1=3,B>=1] 

* Chain [[184,185,186,187,188,189,190,191],208]...: 765*aux(498)+0
  with precondition: [G1=3,B>=1] 

* Chain [[184,185,186,187,188,189,190,191],207]...: 765*it(185)+0
  with precondition: [G1=3,B>=1] 

* Chain [[184,185,186,187,188,189,190,191],206]...: 787*it(185)+0
  with precondition: [G1=3,B>=1] 

* Chain [[184,185,186,187,188,189,190,191],205]...: 765*aux(499)+0
  with precondition: [G1=3,B>=1] 

* Chain [[184,185,186,187,188,189,190,191],204]...: 765*it(185)+0
  with precondition: [G1=3,B>=1] 

* Chain [[184,185,186,187,188,189,190,191],203]: 764*it(185)+0
  with precondition: [G1=3,B>=1] 

* Chain [[184,185,186,187,188,189,190,191],202]: 765*aux(500)+0
  with precondition: [G1=3,B>=1] 

* Chain [[184,185,186,187,188,189,190,191],201]: 770*it(185)+1*it([201])+1*s(598)+0
  Such that:it([201]) =< 1

  with precondition: [G1=3,B>=1] 

* Chain [[184,185,186,187,188,189,190,191],200]: 766*it(185)+1*it([200])+1*s(601)+0
  Such that:it([200]) =< 1

  with precondition: [G1=3,B>=1] 

* Chain [[184,185,186,187,188,189,190,191],199]: 765*aux(505)+0
  with precondition: [G1=3,B>=1] 

* Chain [[184,185,186,187,188,189,190,191],198]: 765*aux(506)+0
  with precondition: [G1=3,B>=1] 

* Chain [[184,185,186,187,188,189,190,191],197]: 765*aux(507)+0
  with precondition: [G1=3,B>=1] 

* Chain [[184,185,186,187,188,189,190,191],196]: 765*aux(508)+0
  with precondition: [G1=3,B>=1] 

* Chain [[184,185,186,187,188,189,190,191],195]: 765*it(185)+1*s(640)+0
  with precondition: [G1=3,B>=1] 

* Chain [[184,185,186,187,188,189,190,191],194]: 766*it(185)+1*it([194])+2*s(645)+0
  Such that:it([194]) =< 1

  with precondition: [G1=3,B>=1] 

* Chain [[184,185,186,187,188,189,190,191],193]: 765*it(185)+1*it([193])+1*s(650)+0
  Such that:it([193]) =< 1

  with precondition: [G1=3,B>=1] 

* Chain [[184,185,186,187,188,189,190,191],192]: 764*it(185)+0
  with precondition: [G1=10,0>=H1,B>=1] 

* Chain [211]...: 1*aux(493)+0
  with precondition: [G1=3,0>=J,B>=1] 

* Chain [210]...: 6*s(510)+1*s(512)+1
  Such that:s(512) =< J/2-K/2

  with precondition: [G1=3,0>=J,B>=1,J>=K+2] 

* Chain [209]...: 1*s(517)+2*s(518)+1
  Such that:s(517) =< J/2-K/2

  with precondition: [G1=3,0>=J,B>=1,J>=K+4] 

* Chain [208]...: 1*aux(498)+0
  with precondition: [G1=3,B>=1] 

* Chain [207]...: 1*s(575)+0
  with precondition: [G1=3,B>=1,J>=1] 

* Chain [206]...: 23*s(576)+0
  with precondition: [G1=3,B>=1,2*J>=K+6,J>=L+2] 

* Chain [205]...: 1*aux(499)+0
  with precondition: [G1=3,B>=1,J>=L+2] 

* Chain [204]...: 1*s(579)+0
  with precondition: [G1=3,B>=1,J>=L+2,J+L>=K+4] 

* Chain [203]: 0
  with precondition: [G1=3] 

* Chain [202]: 1*aux(500)+0
  with precondition: [G1=3,0>=J,B>=1] 

* Chain [201]: 6*s(592)+1*s(594)+1
  Such that:s(594) =< J/2-K/2

  with precondition: [G1=3,0>=J,B>=1,J>=K+2] 

* Chain [200]: 1*s(599)+2*s(600)+1
  Such that:s(599) =< J/2-K/2

  with precondition: [G1=3,0>=J,B>=1,J>=K+4] 

* Chain [199]: 1*aux(505)+0
  with precondition: [G1=3,B>=1] 

* Chain [198]: 1*aux(506)+0
  with precondition: [G1=3,B>=1,J>=1] 

* Chain [197]: 1*aux(507)+0
  with precondition: [G1=3,B>=1,2*J>=K+6,J>=L+2] 

* Chain [196]: 1*aux(508)+0
  with precondition: [G1=3,B>=1,J>=L+2] 

* Chain [195]: 1*s(638)+1*s(639)+0
  Such that:s(638) =< J/2-K/2+L/2

  with precondition: [G1=3,B>=1,J>=L+2,J+L>=K+4] 

* Chain [194]: 2*s(642)+2*s(644)+1
  Such that:aux(511) =< J/2-K/2+L/2
s(642) =< aux(511)

  with precondition: [G1=3,B>=1,J>=L+2,J+L>=K+6] 

* Chain [193]: 1*s(648)+1*s(649)+1
  Such that:s(648) =< J/2-K/2+L/2

  with precondition: [G1=3,B>=1,J>=L+2,J+L>=K+8] 

* Chain [192]: 0
  with precondition: [G1=10,I1=D,J1=E,K1=F,L1=G,M1=H,N1=I,O1=J,P1=K,Q1=L,R1=M,S1=N,T1=O,U1=P,V1=Q,W1=R,X1=S,Y1=T,Z1=U,A2=V,B2=W,C2=X,D2=Y,E2=Z,F2=A1,B=H1,0>=B] 


#### Cost of chains of f10_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,B1,C1):
* Chain [213]: 0
  with precondition: [A=3] 

* Chain [212]: 0
  with precondition: [A=10] 


#### Cost of chains of f2_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,B1,C1):
* Chain [234]...: 1*s(686)+0
  with precondition: [A=9,0>=K,C>=1] 

* Chain [233]...: 1*s(687)+6*s(688)+1
  Such that:s(687) =< K/2-L/2

  with precondition: [A=9,0>=K,C>=1,K>=L+2] 

* Chain [232]...: 1*s(689)+2*s(690)+1
  Such that:s(689) =< K/2-L/2

  with precondition: [A=9,0>=K,C>=1,K>=L+4] 

* Chain [231]...: 1*aux(520)+0
  with precondition: [A=9,C>=1] 

* Chain [230]...: 1*s(694)+0
  with precondition: [A=9,C>=1,K>=1] 

* Chain [229]...: 23*s(695)+0
  with precondition: [A=9,C>=1,2*K>=L+6,K>=M+2] 

* Chain [228]...: 1*s(696)+0
  with precondition: [A=9,C>=1,K>=M+2] 

* Chain [227]...: 1*s(697)+0
  with precondition: [A=9,C>=1,K>=M+2,K+M>=L+4] 

* Chain [226]: 0
  with precondition: [A=3] 

* Chain [225]: 0
  with precondition: [A=9] 

* Chain [224]: 0
  with precondition: [A=9,0>=C] 

* Chain [223]: 1*s(698)+0
  with precondition: [A=9,0>=K,C>=1] 

* Chain [222]: 1*s(699)+6*s(700)+1
  Such that:s(699) =< K/2-L/2

  with precondition: [A=9,0>=K,C>=1,K>=L+2] 

* Chain [221]: 1*s(701)+2*s(702)+1
  Such that:s(701) =< K/2-L/2

  with precondition: [A=9,0>=K,C>=1,K>=L+4] 

* Chain [220]: 1*aux(521)+0
  with precondition: [A=9,C>=1] 

* Chain [219]: 1*s(705)+0
  with precondition: [A=9,C>=1,K>=1] 

* Chain [218]: 1*s(706)+0
  with precondition: [A=9,C>=1,2*K>=L+6,K>=M+2] 

* Chain [217]: 1*s(707)+0
  with precondition: [A=9,C>=1,K>=M+2] 

* Chain [216]: 1*s(708)+1*s(709)+0
  Such that:s(708) =< K/2-L/2+M/2

  with precondition: [A=9,C>=1,K>=M+2,K+M>=L+4] 

* Chain [215]: 2*s(711)+2*s(712)+1
  Such that:s(710) =< K/2-L/2+M/2
s(711) =< s(710)

  with precondition: [A=9,C>=1,K>=M+2,K+M>=L+6] 

* Chain [214]: 1*s(713)+1*s(714)+1
  Such that:s(713) =< K/2-L/2+M/2

  with precondition: [A=9,C>=1,K>=M+2,K+M>=L+8] 


#### Cost of chains of start(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,G1):
* Chain [275]: 0
  with precondition: [] 

* Chain [274]: 1*s(715)+0
  Such that:s(715) =< A-B+1

  with precondition: [0>=A+1,A>=B] 

* Chain [273]: 0
  with precondition: [0>=B,B>=A+1] 

* Chain [272]: 1*s(716)+1*s(717)+0
  Such that:s(716) =< A-B+1

  with precondition: [0>=J,A>=0,A>=B] 

* Chain [271]: 1*s(718)+1*s(719)+6*s(720)+1
  Such that:s(718) =< A-B+1
s(719) =< J/2-K/2

  with precondition: [0>=J,A>=0,A>=B,J>=K+2] 

* Chain [270]: 1*s(721)+1*s(722)+2*s(723)+1
  Such that:s(721) =< A-B+1
s(722) =< J/2-K/2

  with precondition: [0>=J,A>=0,A>=B,J>=K+4] 

* Chain [269]: 1*s(724)+0
  with precondition: [0>=J,B>=1,B>=A+1] 

* Chain [268]: 1*s(725)+6*s(726)+1
  Such that:s(725) =< J/2-K/2

  with precondition: [0>=J,B>=1,B>=A+1,J>=K+2] 

* Chain [267]: 1*s(727)+2*s(728)+1
  Such that:s(727) =< J/2-K/2

  with precondition: [0>=J,B>=1,B>=A+1,J>=K+4] 

* Chain [266]: 1*s(729)+1*s(730)+0
  Such that:s(729) =< A-B+1

  with precondition: [A>=0,J>=1,A>=B] 

* Chain [265]: 1*s(731)+1*s(732)+0
  Such that:s(731) =< A-B+1

  with precondition: [A>=0,A>=B] 

* Chain [264]: 1*s(733)+1*s(734)+0
  Such that:s(733) =< A-B+1

  with precondition: [A>=0,A>=B,2*J>=K+6,J>=L+2] 

* Chain [263]: 1*s(735)+1*s(736)+0
  Such that:s(735) =< A-B+1

  with precondition: [A>=0,A>=B,J>=L+2] 

* Chain [262]: 1*s(737)+1*s(738)+1*s(739)+0
  Such that:s(737) =< A-B+1
s(738) =< J/2-K/2+L/2

  with precondition: [A>=0,A>=B,J>=L+2,J+L>=K+4] 

* Chain [261]: 1*s(740)+2*s(742)+2*s(743)+1
  Such that:s(740) =< A-B+1
s(741) =< J/2-K/2+L/2
s(742) =< s(741)

  with precondition: [A>=0,A>=B,J>=L+2,J+L>=K+6] 

* Chain [260]: 1*s(744)+1*s(745)+1*s(746)+1
  Such that:s(744) =< A-B+1
s(745) =< J/2-K/2+L/2

  with precondition: [A>=0,A>=B,J>=L+2,J+L>=K+8] 

* Chain [259]: 1*s(747)+0
  with precondition: [B>=1,J>=1,B>=A+1] 

* Chain [258]: 1*s(748)+0
  with precondition: [B>=1,B>=A+1] 

* Chain [257]: 1*s(749)+0
  with precondition: [B>=1,B>=A+1,2*J>=K+6,J>=L+2] 

* Chain [256]: 1*s(750)+0
  with precondition: [B>=1,B>=A+1,J>=L+2] 

* Chain [255]: 1*s(751)+1*s(752)+0
  Such that:s(751) =< J/2-K/2+L/2

  with precondition: [B>=1,B>=A+1,J>=L+2,J+L>=K+4] 

* Chain [254]: 2*s(754)+2*s(755)+1
  Such that:s(753) =< J/2-K/2+L/2
s(754) =< s(753)

  with precondition: [B>=1,B>=A+1,J>=L+2,J+L>=K+6] 

* Chain [253]: 1*s(756)+1*s(757)+1
  Such that:s(756) =< J/2-K/2+L/2

  with precondition: [B>=1,B>=A+1,J>=L+2,J+L>=K+8] 

* Chain [252]: 0
  with precondition: [B>=A+1] 

* Chain [251]: 2*s(758)+0
  Such that:aux(522) =< A-B+1
s(758) =< aux(522)

  with precondition: [A>=B] 

* Chain [250]...: 1*s(760)+1*s(761)+0
  Such that:s(760) =< A-B+1

  with precondition: [0>=J,A>=0,A>=B] 

* Chain [249]...: 1*s(762)+1*s(763)+6*s(764)+1
  Such that:s(762) =< A-B+1
s(763) =< J/2-K/2

  with precondition: [0>=J,A>=0,A>=B,J>=K+2] 

* Chain [248]...: 1*s(765)+1*s(766)+2*s(767)+1
  Such that:s(765) =< A-B+1
s(766) =< J/2-K/2

  with precondition: [0>=J,A>=0,A>=B,J>=K+4] 

* Chain [247]...: 1*s(768)+0
  with precondition: [0>=J,B>=1,B>=A+1] 

* Chain [246]...: 1*s(769)+6*s(770)+1
  Such that:s(769) =< J/2-K/2

  with precondition: [0>=J,B>=1,B>=A+1,J>=K+2] 

* Chain [245]...: 1*s(771)+2*s(772)+1
  Such that:s(771) =< J/2-K/2

  with precondition: [0>=J,B>=1,B>=A+1,J>=K+4] 

* Chain [244]...: 1*s(773)+1*s(774)+0
  Such that:s(773) =< A-B+1

  with precondition: [A>=0,J>=1,A>=B] 

* Chain [243]...: 1*s(775)+1*s(776)+0
  Such that:s(775) =< A-B+1

  with precondition: [A>=0,A>=B] 

* Chain [242]...: 1*s(777)+23*s(778)+0
  Such that:s(777) =< A-B+1

  with precondition: [A>=0,A>=B,2*J>=K+6,J>=L+2] 

* Chain [241]...: 1*s(779)+1*s(780)+0
  Such that:s(779) =< A-B+1

  with precondition: [A>=0,A>=B,J>=L+2] 

* Chain [240]...: 1*s(781)+1*s(782)+0
  Such that:s(781) =< A-B+1

  with precondition: [A>=0,A>=B,J>=L+2,J+L>=K+4] 

* Chain [239]...: 1*s(783)+0
  with precondition: [B>=1,J>=1,B>=A+1] 

* Chain [238]...: 1*s(784)+0
  with precondition: [B>=1,B>=A+1] 

* Chain [237]...: 23*s(785)+0
  with precondition: [B>=1,B>=A+1,2*J>=K+6,J>=L+2] 

* Chain [236]...: 1*s(786)+0
  with precondition: [B>=1,B>=A+1,J>=L+2] 

* Chain [235]...: 1*s(787)+0
  with precondition: [B>=1,B>=A+1,J>=L+2,J+L>=K+4] 


Closed-form bounds of start(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,G1): 
-------------------------------------
* Chain [275] with precondition: [] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [274] with precondition: [0>=A+1,A>=B] 
    - Upper bound: A-B+1 
    - Complexity: n 
* Chain [273] with precondition: [0>=B,B>=A+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [272] with precondition: [0>=J,A>=0,A>=B] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [271] with precondition: [0>=J,A>=0,A>=B,J>=K+2] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [270] with precondition: [0>=J,A>=0,A>=B,J>=K+4] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [269] with precondition: [0>=J,B>=1,B>=A+1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [268] with precondition: [0>=J,B>=1,B>=A+1,J>=K+2] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [267] with precondition: [0>=J,B>=1,B>=A+1,J>=K+4] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [266] with precondition: [A>=0,J>=1,A>=B] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [265] with precondition: [A>=0,A>=B] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [264] with precondition: [A>=0,A>=B,2*J>=K+6,J>=L+2] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [263] with precondition: [A>=0,A>=B,J>=L+2] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [262] with precondition: [A>=0,A>=B,J>=L+2,J+L>=K+4] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [261] with precondition: [A>=0,A>=B,J>=L+2,J+L>=K+6] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [260] with precondition: [A>=0,A>=B,J>=L+2,J+L>=K+8] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [259] with precondition: [B>=1,J>=1,B>=A+1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [258] with precondition: [B>=1,B>=A+1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [257] with precondition: [B>=1,B>=A+1,2*J>=K+6,J>=L+2] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [256] with precondition: [B>=1,B>=A+1,J>=L+2] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [255] with precondition: [B>=1,B>=A+1,J>=L+2,J+L>=K+4] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [254] with precondition: [B>=1,B>=A+1,J>=L+2,J+L>=K+6] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [253] with precondition: [B>=1,B>=A+1,J>=L+2,J+L>=K+8] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [252] with precondition: [B>=A+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [251] with precondition: [A>=B] 
    - Upper bound: 2*A-2*B+2 
    - Complexity: n 
* Chain [250]... with precondition: [0>=J,A>=0,A>=B] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [249]... with precondition: [0>=J,A>=0,A>=B,J>=K+2] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [248]... with precondition: [0>=J,A>=0,A>=B,J>=K+4] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [247]... with precondition: [0>=J,B>=1,B>=A+1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [246]... with precondition: [0>=J,B>=1,B>=A+1,J>=K+2] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [245]... with precondition: [0>=J,B>=1,B>=A+1,J>=K+4] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [244]... with precondition: [A>=0,J>=1,A>=B] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [243]... with precondition: [A>=0,A>=B] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [242]... with precondition: [A>=0,A>=B,2*J>=K+6,J>=L+2] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [241]... with precondition: [A>=0,A>=B,J>=L+2] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [240]... with precondition: [A>=0,A>=B,J>=L+2,J+L>=K+4] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [239]... with precondition: [B>=1,J>=1,B>=A+1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [238]... with precondition: [B>=1,B>=A+1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [237]... with precondition: [B>=1,B>=A+1,2*J>=K+6,J>=L+2] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [236]... with precondition: [B>=1,B>=A+1,J>=L+2] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [235]... with precondition: [B>=1,B>=A+1,J>=L+2,J+L>=K+4] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,A1,G1): inf 
Asymptotic class: infinity 
* Total analysis performed in 15847 ms.

