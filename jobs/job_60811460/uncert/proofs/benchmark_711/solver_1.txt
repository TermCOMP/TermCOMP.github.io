WORST_CASE(Omega(n^1),O(n^1))

# LoAT Proof:
WORST_CASE(Omega(n^1),?)

WORST_CASE(Omega(n^1),?)
Initial ITS

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_4 -> 7
eval_start_5 -> 8
eval_start_6 -> 9
eval_start_bb1_in -> 10
eval_start_bb2_in -> 11
eval_start_bb3_in -> 12
eval_start_bb4_in -> 13
eval_start_bb5_in -> 14
eval_start_stop -> 15

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: -2+i1 == 0 /\ i1'=3, i3'=1+i3
   2: -3+i1 == 0 /\ i1'=4, i3'=1+i3
   3: -4+i1 == 0 /\ i1'=5, i3'=1+i3
   4: -5+i1 == 0 /\ i1'=6, i3'=1+i3
   5: -6+i1 == 0 /\ i1'=7, i3'=1+i3
   6: -7+i1 == 0 /\ i1'=8, i3'=1+i3
   7: -8+i1 == 0 /\ i1'=9, i3'=1+i3
   8: -9+i1 == 0 /\ i1'=10, i3'=1+i3, i5'=0, i6'=0
   9: (-i4+i5 < 0 /\ -10+i1 == 0) /\ i1'=11, i3'=1+i3
  10: (-i4+i5 >= 0 /\ -10+i1 == 0) /\ i1'=12, i3'=1+i3
  11: -11+i1 == 0 /\ i1'=10, i3'=1+i3, i5'=1+i5, i6'=1+i6
  12: (i6 > 0 /\ -12+i1 == 0) /\ i1'=13, i3'=1+i3
  13: (i6 <= 0 /\ -12+i1 == 0) /\ i1'=14, i3'=1+i3
  14: -13+i1 == 0 /\ i1'=10, i3'=1+i3, i6'=-1+i6
  15: -14+i1 == 0 /\ i1'=15, i3'=1+i3

Dependency graph:
0 -> 1
1 -> 2
2 -> 3
3 -> 4
4 -> 5
5 -> 6
6 -> 7
7 -> 8
8 -> 9, 8 -> 10
9 -> 11
10 -> 12, 10 -> 13
11 -> 9, 11 -> 10
12 -> 14
13 -> 15
14 -> 9, 14 -> 10

Chained Linear Paths

	Applied Chaining

	First rule:
	-1+i1 == 0 /\ i1'=2, i3'=1+i3
	Second rule:
	-2+i1 == 0 /\ i1'=3, i3'=1+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 0, 1
	
	Applied Chaining

	First rule:
	-3+i1 == 0 /\ i1'=4, i3'=1+i3
	Second rule:
	-4+i1 == 0 /\ i1'=5, i3'=1+i3
	New rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 2, 3
	
	Applied Chaining

	First rule:
	-5+i1 == 0 /\ i1'=6, i3'=1+i3
	Second rule:
	-6+i1 == 0 /\ i1'=7, i3'=1+i3
	New rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=7, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 4, 5
	
	Applied Chaining

	First rule:
	-7+i1 == 0 /\ i1'=8, i3'=1+i3
	Second rule:
	-8+i1 == 0 /\ i1'=9, i3'=1+i3
	New rule:
	(0 == 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 6, 7
	
	Applied Chaining

	First rule:
	(-i4+i5 < 0 /\ -10+i1 == 0) /\ i1'=11, i3'=1+i3
	Second rule:
	-11+i1 == 0 /\ i1'=10, i3'=1+i3, i5'=1+i5, i6'=1+i6
	New rule:
	(0 == 0 /\ -i4+i5 < 0 /\ -10+i1 == 0) /\ i1'=10, i3'=2+i3, i5'=1+i5, i6'=1+i6
	
	Applied Deletion

	Removed the following rules: 9, 11
	
	Applied Chaining

	First rule:
	(i6 > 0 /\ -12+i1 == 0) /\ i1'=13, i3'=1+i3
	Second rule:
	-13+i1 == 0 /\ i1'=10, i3'=1+i3, i6'=-1+i6
	New rule:
	(0 == 0 /\ i6 > 0 /\ -12+i1 == 0) /\ i1'=10, i3'=2+i3, i6'=-1+i6
	
	Applied Deletion

	Removed the following rules: 12, 14
	
	Applied Chaining

	First rule:
	(i6 <= 0 /\ -12+i1 == 0) /\ i1'=14, i3'=1+i3
	Second rule:
	-14+i1 == 0 /\ i1'=15, i3'=1+i3
	New rule:
	(0 == 0 /\ i6 <= 0 /\ -12+i1 == 0) /\ i1'=15, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 13, 15
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	Second rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	
	Applied Deletion

	Removed the following rules: 16, 17
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=7, i3'=2+i3
	Second rule:
	(0 == 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
	New rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=9, i3'=4+i3
	
	Applied Deletion

	Removed the following rules: 18, 19
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	Second rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=9, i3'=4+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=9, i3'=8+i3
	
	Applied Deletion

	Removed the following rules: 23, 24
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=9, i3'=8+i3
	Second rule:
	-9+i1 == 0 /\ i1'=10, i3'=1+i3, i5'=0, i6'=0
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=10, i3'=9+i3, i5'=0, i6'=0
	
	Applied Deletion

	Removed the following rules: 8, 25

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_4 -> 7
eval_start_5 -> 8
eval_start_6 -> 9
eval_start_bb1_in -> 10
eval_start_bb2_in -> 11
eval_start_bb3_in -> 12
eval_start_bb4_in -> 13
eval_start_bb5_in -> 14
eval_start_stop -> 15

Rules:
  10: (-i4+i5 >= 0 /\ -10+i1 == 0) /\ i1'=12, i3'=1+i3
  20: (0 == 0 /\ -i4+i5 < 0 /\ -10+i1 == 0) /\ i1'=10, i3'=2+i3, i5'=1+i5, i6'=1+i6
  21: (0 == 0 /\ i6 > 0 /\ -12+i1 == 0) /\ i1'=10, i3'=2+i3, i6'=-1+i6
  22: (0 == 0 /\ i6 <= 0 /\ -12+i1 == 0) /\ i1'=15, i3'=2+i3
  26: (0 == 0 /\ -1+i1 == 0) /\ i1'=10, i3'=9+i3, i5'=0, i6'=0

Dependency graph:
10 -> 21, 10 -> 22
20 -> 10, 20 -> 20
21 -> 10, 21 -> 20
26 -> 10, 26 -> 20

Preprocessed Transitions

	Simplified Guard

	Original rule:
	(0 == 0 /\ -i4+i5 < 0 /\ -10+i1 == 0) /\ i1'=10, i3'=2+i3, i5'=1+i5, i6'=1+i6
	New rule:
	(-i4+i5 < 0 /\ -10+i1 == 0) /\ i1'=10, i3'=2+i3, i5'=1+i5, i6'=1+i6
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ i6 > 0 /\ -12+i1 == 0) /\ i1'=10, i3'=2+i3, i6'=-1+i6
	New rule:
	(i6 > 0 /\ -12+i1 == 0) /\ i1'=10, i3'=2+i3, i6'=-1+i6
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ i6 <= 0 /\ -12+i1 == 0) /\ i1'=15, i3'=2+i3
	New rule:
	(i6 <= 0 /\ -12+i1 == 0) /\ i1'=15, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=10, i3'=9+i3, i5'=0, i6'=0
	New rule:
	-1+i1 == 0 /\ i1'=10, i3'=9+i3, i5'=0, i6'=0

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_4 -> 7
eval_start_5 -> 8
eval_start_6 -> 9
eval_start_bb1_in -> 10
eval_start_bb2_in -> 11
eval_start_bb3_in -> 12
eval_start_bb4_in -> 13
eval_start_bb5_in -> 14
eval_start_stop -> 15

Rules:
  10: (-i4+i5 >= 0 /\ -10+i1 == 0) /\ i1'=12, i3'=1+i3
  27: (-i4+i5 < 0 /\ -10+i1 == 0) /\ i1'=10, i3'=2+i3, i5'=1+i5, i6'=1+i6
  28: (i6 > 0 /\ -12+i1 == 0) /\ i1'=10, i3'=2+i3, i6'=-1+i6
  29: (i6 <= 0 /\ -12+i1 == 0) /\ i1'=15, i3'=2+i3
  30: -1+i1 == 0 /\ i1'=10, i3'=9+i3, i5'=0, i6'=0

Dependency graph:
10 -> 28, 10 -> 29
27 -> 10, 27 -> 27
28 -> 10, 28 -> 27
30 -> 10, 30 -> 27

Step with 30

	Trace

	30[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 27

	Trace

	30[(-1+i1 == 0)]
	27[(-i4+i5 < 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{}
	{}
	
Poly(n^1)

Accelerate

	Loop Acceleration

	Original rule:
	(-i4+i5 < 0 /\ -10+i1 == 0) /\ i1'=10, i3'=2+i3, i5'=1+i5, i6'=1+i6
	New rule:
	(10-i1 >= 0 /\ -10+i1 >= 0 /\ -1+it11 >= 0 /\ 1+i4-it11-i5 > 0) /\ i1'=i1, i3'=i3+2*it11, i5'=it11+i5, i6'=i6+it11

		10-i1 >= 0 [0]: unchanged
		
		i4-i5 > 0 [0]: montonic decrease yields 1+i4-it11-i5 > 0
		
		-10+i1 >= 0 [0]: unchanged
		
		Replacement map: {10-i1 >= 0 -> 10-i1 >= 0, i4-i5 > 0 -> 1+i4-it11-i5 > 0, -10+i1 >= 0 -> -10+i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(10-i1 >= 0 /\ -10+i1 >= 0 /\ -1+it11 >= 0 /\ 1+i4-it11-i5 > 0) /\ i1'=i1, i3'=i3+2*it11, i5'=it11+i5, i6'=i6+it11
	New rule:
	(10-i1 >= 0 /\ -10+i1 >= 0 /\ -1+it11 >= 0 /\ 1+i4-it11-i5 > 0) /\ i3'=i3+2*it11, i5'=it11+i5, i6'=i6+it11
	
	Instantiation

	Original rule:
	(10-i1 >= 0 /\ -10+i1 >= 0 /\ -1+it11 >= 0 /\ 1+i4-it11-i5 > 0) /\ i3'=i3+2*it11, i5'=it11+i5, i6'=i6+it11
	New rule:
	(1 > 0 /\ 10-i1 >= 0 /\ -1+i4-i5 >= 0 /\ -10+i1 >= 0) /\ i3'=i3+2*i4-2*i5, i5'=i4, i6'=i6+i4-i5

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_4 -> 7
eval_start_5 -> 8
eval_start_6 -> 9
eval_start_bb1_in -> 10
eval_start_bb2_in -> 11
eval_start_bb3_in -> 12
eval_start_bb4_in -> 13
eval_start_bb5_in -> 14
eval_start_stop -> 15

Rules:
  10: (-i4+i5 >= 0 /\ -10+i1 == 0) /\ i1'=12, i3'=1+i3
  27: (-i4+i5 < 0 /\ -10+i1 == 0) /\ i1'=10, i3'=2+i3, i5'=1+i5, i6'=1+i6
  28: (i6 > 0 /\ -12+i1 == 0) /\ i1'=10, i3'=2+i3, i6'=-1+i6
  29: (i6 <= 0 /\ -12+i1 == 0) /\ i1'=15, i3'=2+i3
  30: -1+i1 == 0 /\ i1'=10, i3'=9+i3, i5'=0, i6'=0
  31: (1 > 0 /\ 10-i1 >= 0 /\ -1+i4-i5 >= 0 /\ -10+i1 >= 0) /\ i3'=i3+2*i4-2*i5, i5'=i4, i6'=i6+i4-i5

Dependency graph:
10 -> 28, 10 -> 29
27 -> 10, 27 -> 27, 27 -> 31
28 -> 10, 28 -> 27, 28 -> 31
30 -> 10, 30 -> 27, 30 -> 31
31 -> 10, 31 -> 27

	Trace

	30[(-1+i1 == 0)]
	31[(1 > 0 /\ 10-i1 >= 0 /\ -1+i4-i5 >= 0 /\ -10+i1 >= 0)]
	
	Blocked

	{}
	{}
	{27[T], 31[T]}
	
Step with 10

	Trace

	30[(-1+i1 == 0)]
	31[(1 > 0 /\ 10-i1 >= 0 /\ -1+i4-i5 >= 0 /\ -10+i1 >= 0)]
	10[(-i4+i5 >= 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{}
	{27[T], 31[T]}
	{}
	
Step with 28

	Trace

	30[(-1+i1 == 0)]
	31[(1 > 0 /\ 10-i1 >= 0 /\ -1+i4-i5 >= 0 /\ -10+i1 >= 0)]
	10[(-i4+i5 >= 0 /\ -10+i1 == 0)]
	28[(i6 > 0 /\ -12+i1 == 0)]
	
	Blocked

	{}
	{}
	{27[T], 31[T]}
	{}
	{}
	
Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ i6 > 0 /\ -i4+i5 >= 0 /\ -10+i1 == 0) /\ i1'=10, i3'=3+i3, i6'=-1+i6
		New rule:
		(i6 > 0 /\ -i4+i5 >= 0 /\ -10+i1 == 0) /\ i1'=10, i3'=3+i3, i6'=-1+i6

	Loop Acceleration

	Original rule:
	(i6 > 0 /\ -i4+i5 >= 0 /\ -10+i1 == 0) /\ i1'=10, i3'=3+i3, i6'=-1+i6
	New rule:
	(1+i6-it33 > 0 /\ 10-i1 >= 0 /\ -i4+i5 >= 0 /\ -1+it33 >= 0 /\ -10+i1 >= 0) /\ i1'=i1, i3'=i3+3*it33, i6'=i6-it33

		i6 > 0 [0]: montonic decrease yields 1+i6-it33 > 0
		
		10-i1 >= 0 [0]: unchanged
		
		-i4+i5 >= 0 [0]: unchanged
		
		-10+i1 >= 0 [0]: unchanged
		
		Replacement map: {i6 > 0 -> 1+i6-it33 > 0, 10-i1 >= 0 -> 10-i1 >= 0, -i4+i5 >= 0 -> -i4+i5 >= 0, -10+i1 >= 0 -> -10+i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(1+i6-it33 > 0 /\ 10-i1 >= 0 /\ -i4+i5 >= 0 /\ -1+it33 >= 0 /\ -10+i1 >= 0) /\ i1'=i1, i3'=i3+3*it33, i6'=i6-it33
	New rule:
	(1+i6-it33 > 0 /\ 10-i1 >= 0 /\ -i4+i5 >= 0 /\ -1+it33 >= 0 /\ -10+i1 >= 0) /\ i3'=i3+3*it33, i6'=i6-it33
	
	Instantiation

	Original rule:
	(1+i6-it33 > 0 /\ 10-i1 >= 0 /\ -i4+i5 >= 0 /\ -1+it33 >= 0 /\ -10+i1 >= 0) /\ i3'=i3+3*it33, i6'=i6-it33
	New rule:
	(1 > 0 /\ 10-i1 >= 0 /\ -i4+i5 >= 0 /\ -10+i1 >= 0 /\ -1+i6 >= 0) /\ i3'=3*i6+i3, i6'=0

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_4 -> 7
eval_start_5 -> 8
eval_start_6 -> 9
eval_start_bb1_in -> 10
eval_start_bb2_in -> 11
eval_start_bb3_in -> 12
eval_start_bb4_in -> 13
eval_start_bb5_in -> 14
eval_start_stop -> 15

Rules:
  10: (-i4+i5 >= 0 /\ -10+i1 == 0) /\ i1'=12, i3'=1+i3
  27: (-i4+i5 < 0 /\ -10+i1 == 0) /\ i1'=10, i3'=2+i3, i5'=1+i5, i6'=1+i6
  28: (i6 > 0 /\ -12+i1 == 0) /\ i1'=10, i3'=2+i3, i6'=-1+i6
  29: (i6 <= 0 /\ -12+i1 == 0) /\ i1'=15, i3'=2+i3
  30: -1+i1 == 0 /\ i1'=10, i3'=9+i3, i5'=0, i6'=0
  31: (1 > 0 /\ 10-i1 >= 0 /\ -1+i4-i5 >= 0 /\ -10+i1 >= 0) /\ i3'=i3+2*i4-2*i5, i5'=i4, i6'=i6+i4-i5
  32: (1 > 0 /\ 10-i1 >= 0 /\ -i4+i5 >= 0 /\ -10+i1 >= 0 /\ -1+i6 >= 0) /\ i3'=3*i6+i3, i6'=0

Dependency graph:
10 -> 28, 10 -> 29
27 -> 10, 27 -> 27, 27 -> 31, 27 -> 32
28 -> 10, 28 -> 27, 28 -> 31, 28 -> 32
30 -> 10, 30 -> 27, 30 -> 31, 30 -> 32
31 -> 10, 31 -> 27, 31 -> 32
32 -> 10, 32 -> 27, 32 -> 31

	Trace

	30[(-1+i1 == 0)]
	31[(1 > 0 /\ 10-i1 >= 0 /\ -1+i4-i5 >= 0 /\ -10+i1 >= 0)]
	32[(1 > 0 /\ 10-i1 >= 0 /\ -i4+i5 >= 0 /\ -10+i1 >= 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{}
	{27[T], 31[T]}
	{32[T]}
	
Step with 10

	Trace

	30[(-1+i1 == 0)]
	31[(1 > 0 /\ 10-i1 >= 0 /\ -1+i4-i5 >= 0 /\ -10+i1 >= 0)]
	32[(1 > 0 /\ 10-i1 >= 0 /\ -i4+i5 >= 0 /\ -10+i1 >= 0 /\ -1+i6 >= 0)]
	10[(-i4+i5 >= 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{}
	{27[T], 31[T]}
	{27[T], 32[T]}
	{}
	
Step with 29

	Trace

	30[(-1+i1 == 0)]
	31[(1 > 0 /\ 10-i1 >= 0 /\ -1+i4-i5 >= 0 /\ -10+i1 >= 0)]
	32[(1 > 0 /\ 10-i1 >= 0 /\ -i4+i5 >= 0 /\ -10+i1 >= 0 /\ -1+i6 >= 0)]
	10[(-i4+i5 >= 0 /\ -10+i1 == 0)]
	29[(i6 <= 0 /\ -12+i1 == 0)]
	
	Blocked

	{}
	{}
	{27[T], 31[T]}
	{27[T], 32[T]}
	{28[T]}
	{}
	
Backtrack

	Trace

	30[(-1+i1 == 0)]
	31[(1 > 0 /\ 10-i1 >= 0 /\ -1+i4-i5 >= 0 /\ -10+i1 >= 0)]
	32[(1 > 0 /\ 10-i1 >= 0 /\ -i4+i5 >= 0 /\ -10+i1 >= 0 /\ -1+i6 >= 0)]
	10[(-i4+i5 >= 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{}
	{27[T], 31[T]}
	{27[T], 32[T]}
	{28[T], 29[T]}
	
Backtrack

	Trace

	30[(-1+i1 == 0)]
	31[(1 > 0 /\ 10-i1 >= 0 /\ -1+i4-i5 >= 0 /\ -10+i1 >= 0)]
	32[(1 > 0 /\ 10-i1 >= 0 /\ -i4+i5 >= 0 /\ -10+i1 >= 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{}
	{27[T], 31[T]}
	{10[T], 27[T], 32[T]}
	
Backtrack

	Trace

	30[(-1+i1 == 0)]
	31[(1 > 0 /\ 10-i1 >= 0 /\ -1+i4-i5 >= 0 /\ -10+i1 >= 0)]
	
	Blocked

	{}
	{}
	{27[T], 31[T], 32[T]}
	
Step with 10

	Trace

	30[(-1+i1 == 0)]
	31[(1 > 0 /\ 10-i1 >= 0 /\ -1+i4-i5 >= 0 /\ -10+i1 >= 0)]
	10[(-i4+i5 >= 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{}
	{27[T], 31[T], 32[T]}
	{}
	
Step with 28

	Trace

	30[(-1+i1 == 0)]
	31[(1 > 0 /\ 10-i1 >= 0 /\ -1+i4-i5 >= 0 /\ -10+i1 >= 0)]
	10[(-i4+i5 >= 0 /\ -10+i1 == 0)]
	28[(i6 > 0 /\ -12+i1 == 0)]
	
	Blocked

	{}
	{}
	{27[T], 31[T], 32[T]}
	{}
	{}
	
Covered

	Trace

	30[(-1+i1 == 0)]
	31[(1 > 0 /\ 10-i1 >= 0 /\ -1+i4-i5 >= 0 /\ -10+i1 >= 0)]
	10[(-i4+i5 >= 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{}
	{27[T], 31[T], 32[T]}
	{28[T]}
	
Backtrack

	Trace

	30[(-1+i1 == 0)]
	31[(1 > 0 /\ 10-i1 >= 0 /\ -1+i4-i5 >= 0 /\ -10+i1 >= 0)]
	
	Blocked

	{}
	{}
	{10[T], 27[T], 31[T], 32[T]}
	
Backtrack

	Trace

	30[(-1+i1 == 0)]
	
	Blocked

	{}
	{31[T]}
	
Step with 10

	Trace

	30[(-1+i1 == 0)]
	10[(-i4+i5 >= 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{31[T]}
	{}
	
Step with 29

	Trace

	30[(-1+i1 == 0)]
	10[(-i4+i5 >= 0 /\ -10+i1 == 0)]
	29[(i6 <= 0 /\ -12+i1 == 0)]
	
	Blocked

	{}
	{31[T]}
	{}
	{}
	
Backtrack

	Trace

	30[(-1+i1 == 0)]
	10[(-i4+i5 >= 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{31[T]}
	{29[T]}
	
Backtrack

	Trace

	30[(-1+i1 == 0)]
	
	Blocked

	{}
	{10[T], 31[T]}
	
Step with 27

	Trace

	30[(-1+i1 == 0)]
	27[(-i4+i5 < 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{10[T], 31[T], 32[T]}
	{}
	
Covered

	Trace

	30[(-1+i1 == 0)]
	
	Blocked

	{}
	{10[T], 27[T], 31[T], 32[T]}
	
Backtrack

	Trace

	Blocked

	{30[T]}
	
Accept

Poly(n^1)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  
  Locations:  l0, l1, l10, l11, l12, l13, l14, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂) → l2(X₀, X₁, X₂)
  t₃: l1(X₀, X₁, X₂) → l4(X₀, X₁, X₂)
  t₁₁: l10(X₀, X₁, X₂) → l9(X₀, 1+X₁, 1+X₂)
  t₁₂: l11(X₀, X₁, X₂) → l12(X₀, X₁, X₂) :|: 1 ≤ X₂
  t₁₃: l11(X₀, X₁, X₂) → l13(X₀, X₁, X₂) :|: X₂ ≤ 0
  t₁₄: l12(X₀, X₁, X₂) → l9(X₀, X₁, X₂-1)
  t₁₅: l13(X₀, X₁, X₂) → l14(X₀, X₁, X₂)
  t₁: l2(X₀, X₁, X₂) → l3(X₀, X₁, X₂)
  t₂: l3(X₀, X₁, X₂) → l1(X₀, X₁, X₂)
  t₄: l4(X₀, X₁, X₂) → l5(X₀, X₁, X₂)
  t₅: l5(X₀, X₁, X₂) → l6(X₀, X₁, X₂)
  t₆: l6(X₀, X₁, X₂) → l7(X₀, X₁, X₂)
  t₇: l7(X₀, X₁, X₂) → l8(X₀, X₁, X₂)
  t₈: l8(X₀, X₁, X₂) → l9(X₀, 0, 0)
  t₉: l9(X₀, X₁, X₂) → l10(X₀, X₁, X₂) :|: 1+X₁ ≤ X₀
  t₁₀: l9(X₀, X₁, X₂) → l11(X₀, X₁, X₂) :|: X₀ ≤ X₁


Preprocessing
  Found invariant X₂ ≤ X₁ ∧ 0 ≤ X₂ ∧ 0 ≤ X₁+X₂ ∧ 0 ≤ X₁ ∧ X₀ ≤ X₁ for location l11


  Found invariant X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 1 ≤ X₁ ∧ X₀ ≤ X₁ for location l12


  Found invariant X₂ ≤ 0 ∧ X₂ ≤ X₁ ∧ 0 ≤ X₂ ∧ 0 ≤ X₁+X₂ ∧ 0 ≤ X₁ ∧ X₀ ≤ X₁ for location l13


  Found invariant X₂ ≤ X₁ ∧ 1+X₂ ≤ X₀ ∧ 0 ≤ X₂ ∧ 0 ≤ X₁+X₂ ∧ 1 ≤ X₀+X₂ ∧ 1+X₁ ≤ X₀ ∧ 0 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l10


  Found invariant X₂ ≤ X₁ ∧ 0 ≤ X₂ ∧ 0 ≤ X₁+X₂ ∧ 0 ≤ X₁ for location l9


  Found invariant X₂ ≤ 0 ∧ X₂ ≤ X₁ ∧ 0 ≤ X₂ ∧ 0 ≤ X₁+X₂ ∧ 0 ≤ X₁ ∧ X₀ ≤ X₁ for location l14


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  
  Locations:  l0, l1, l10, l11, l12, l13, l14, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂) → l2(X₀, X₁, X₂)
  t₃: l1(X₀, X₁, X₂) → l4(X₀, X₁, X₂)
  t₁₁: l10(X₀, X₁, X₂) → l9(X₀, 1+X₁, 1+X₂) :|: 1 ≤ X₀ ∧ 1 ≤ X₀+X₁ ∧ 1+X₁ ≤ X₀ ∧ 1 ≤ X₀+X₂ ∧ 1+X₂ ≤ X₀ ∧ 0 ≤ X₁ ∧ 0 ≤ X₁+X₂ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₂
  t₁₂: l11(X₀, X₁, X₂) → l12(X₀, X₁, X₂) :|: 1 ≤ X₂ ∧ X₀ ≤ X₁ ∧ 0 ≤ X₁ ∧ 0 ≤ X₁+X₂ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₂
  t₁₃: l11(X₀, X₁, X₂) → l13(X₀, X₁, X₂) :|: X₂ ≤ 0 ∧ X₀ ≤ X₁ ∧ 0 ≤ X₁ ∧ 0 ≤ X₁+X₂ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₂
  t₁₄: l12(X₀, X₁, X₂) → l9(X₀, X₁, X₂-1) :|: 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ X₀ ≤ X₁ ∧ X₂ ≤ X₁
  t₁₅: l13(X₀, X₁, X₂) → l14(X₀, X₁, X₂) :|: X₀ ≤ X₁ ∧ 0 ≤ X₁ ∧ 0 ≤ X₁+X₂ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₂ ∧ X₂ ≤ 0
  t₁: l2(X₀, X₁, X₂) → l3(X₀, X₁, X₂)
  t₂: l3(X₀, X₁, X₂) → l1(X₀, X₁, X₂)
  t₄: l4(X₀, X₁, X₂) → l5(X₀, X₁, X₂)
  t₅: l5(X₀, X₁, X₂) → l6(X₀, X₁, X₂)
  t₆: l6(X₀, X₁, X₂) → l7(X₀, X₁, X₂)
  t₇: l7(X₀, X₁, X₂) → l8(X₀, X₁, X₂)
  t₈: l8(X₀, X₁, X₂) → l9(X₀, 0, 0)
  t₉: l9(X₀, X₁, X₂) → l10(X₀, X₁, X₂) :|: 1+X₁ ≤ X₀ ∧ 0 ≤ X₁ ∧ 0 ≤ X₁+X₂ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₂
  t₁₀: l9(X₀, X₁, X₂) → l11(X₀, X₁, X₂) :|: X₀ ≤ X₁ ∧ 0 ≤ X₁ ∧ 0 ≤ X₁+X₂ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₂


MPRF for transition t₉: l9(X₀, X₁, X₂) → l10(X₀, X₁, X₂) :|: 1+X₁ ≤ X₀ ∧ 0 ≤ X₁ ∧ 0 ≤ X₁+X₂ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₂ of depth 1:
  new bound:
    X₀ {O(n)}

  MPRF:
    • l10: [X₀-1-X₁]
    • l11: [X₀-X₁]
    • l12: [X₀-X₁]
    • l9: [X₀-X₁]




MPRF for transition t₁₁: l10(X₀, X₁, X₂) → l9(X₀, 1+X₁, 1+X₂) :|: 1 ≤ X₀ ∧ 1 ≤ X₀+X₁ ∧ 1+X₁ ≤ X₀ ∧ 1 ≤ X₀+X₂ ∧ 1+X₂ ≤ X₀ ∧ 0 ≤ X₁ ∧ 0 ≤ X₁+X₂ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₂ of depth 1:
  new bound:
    X₀ {O(n)}

  MPRF:
    • l10: [X₀-X₁]
    • l11: [X₀-X₁]
    • l12: [X₀-X₁]
    • l9: [X₀-X₁]




MPRF for transition t₁₀: l9(X₀, X₁, X₂) → l11(X₀, X₁, X₂) :|: X₀ ≤ X₁ ∧ 0 ≤ X₁ ∧ 0 ≤ X₁+X₂ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₂ of depth 1:
  new bound:
    X₀^2+X₀+1 {O(n^2)}

  MPRF:
    • l10: [1+X₂]
    • l11: [X₂]
    • l12: [X₂]
    • l9: [1+X₂]




MPRF for transition t₁₂: l11(X₀, X₁, X₂) → l12(X₀, X₁, X₂) :|: 1 ≤ X₂ ∧ X₀ ≤ X₁ ∧ 0 ≤ X₁ ∧ 0 ≤ X₁+X₂ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₂ of depth 1:
  new bound:
    X₀^2+X₀+1 {O(n^2)}

  MPRF:
    • l10: [1+X₂]
    • l11: [1+X₂]
    • l12: [X₂]
    • l9: [1+X₂]




MPRF for transition t₁₄: l12(X₀, X₁, X₂) → l9(X₀, X₁, X₂-1) :|: 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ X₀ ≤ X₁ ∧ X₂ ≤ X₁ of depth 1:
  new bound:
    X₀^2+X₀+1 {O(n^2)}

  MPRF:
    • l10: [1+X₂]
    • l11: [1+X₂]
    • l12: [1+X₂]
    • l9: [1+X₂]




  Cut unreachable locations [l11] from the program graph


  Found invariant X₂ ≤ X₁ ∧ 0 ≤ X₂ ∧ 0 ≤ X₁+X₂ ∧ X₁ ≤ X₂ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₁ ∧ X₀ ≤ X₁ for location l11_v1


  Found invariant X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ X₁ ≤ X₂ ∧ X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ X₀ ≤ X₁ for location l12_v1


  Found invariant X₂ ≤ X₁ ∧ 1+X₂ ≤ X₀ ∧ 0 ≤ X₂ ∧ 0 ≤ X₁+X₂ ∧ X₁ ≤ X₂ ∧ 1 ≤ X₀+X₂ ∧ 1+X₁ ≤ X₀ ∧ 0 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l10


  Found invariant X₂ ≤ 0 ∧ X₂ ≤ X₁ ∧ 0 ≤ X₂ ∧ 0 ≤ X₁+X₂ ∧ 0 ≤ X₁ ∧ X₀ ≤ X₁ for location l14


  Found invariant 1+X₂ ≤ X₁ ∧ 0 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 1 ≤ X₁ ∧ X₀ ≤ X₁ for location l9_v1


  Found invariant 1+X₂ ≤ X₁ ∧ 0 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 1 ≤ X₁ ∧ X₀ ≤ X₁ for location l11_v2


  Found invariant 1+X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 3 ≤ X₁+X₂ ∧ 2 ≤ X₁ ∧ X₀ ≤ X₁ for location l12_v2


  Found invariant X₂ ≤ 0 ∧ X₂ ≤ X₁ ∧ 0 ≤ X₂ ∧ 0 ≤ X₁+X₂ ∧ 0 ≤ X₁ ∧ X₀ ≤ X₁ for location l13


  Found invariant X₂ ≤ X₁ ∧ 0 ≤ X₂ ∧ 0 ≤ X₁+X₂ ∧ X₁ ≤ X₂ ∧ 0 ≤ X₁ for location l9


Analysing control-flow refined program
  knowledge_propagation leads to new time bound X₀+1 {O(n)} for transition t₁₃₈: l9(X₀, X₁, X₂) → l10(X₀, X₁, X₂) :|: 1+X₁ ≤ X₀ ∧ 0 ≤ X₁ ∧ 0 ≤ X₁+X₂ ∧ X₂ ≤ X₁ ∧ X₁ ≤ X₂ ∧ 0 ≤ X₂


MPRF for transition t₁₄₂: l9_v1(X₀, X₁, X₂) → l11_v2(X₀, X₁, X₂) :|: X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ 0 ≤ X₁ ∧ 0 ≤ X₁+X₂ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₂ of depth 1:
  new bound:
    X₀+1 {O(n)}

  MPRF:
    • l11_v2: [X₂]
    • l12_v2: [X₂]
    • l9_v1: [1+X₂]




MPRF for transition t₁₄₄: l11_v2(X₀, X₁, X₂) → l12_v2(X₀, X₁, X₂) :|: 1 ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ X₀ ≤ X₁ ∧ 0 ≤ X₁ ∧ 0 ≤ X₁+X₂ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₂ of depth 1:
  new bound:
    X₀+1 {O(n)}

  MPRF:
    • l11_v2: [1+X₂]
    • l12_v2: [X₂]
    • l9_v1: [1+X₂]




MPRF for transition t₁₄₅: l12_v2(X₀, X₁, X₂) → l9_v1(X₀, X₁, X₂-1) :|: 1 ≤ X₁ ∧ 1+X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁ ∧ 2 ≤ X₁+X₂ ∧ 3 ≤ X₁+X₂ ∧ X₀ ≤ X₁ ∧ X₂ ≤ X₁ of depth 1:
  new bound:
    X₀ {O(n)}

  MPRF:
    • l11_v2: [X₂]
    • l12_v2: [X₂]
    • l9_v1: [X₂]




CFR: Improvement to new bound with the following program: 
  method: PartialEvaluation new bound: 
    O(n)

  cfr-program: 
    Start:  l0
    Program_Vars:  X₀, X₁, X₂
    Temp_Vars:  
    Locations:  l0, l1, l10, l11_v1, l11_v2, l12_v1, l12_v2, l13, l14, l2, l3, l4, l5, l6, l7, l8, l9, l9_v1
    Return Locations:  
    Transitions:
    t₀: l0(X₀, X₁, X₂) → l2(X₀, X₁, X₂)
    t₃: l1(X₀, X₁, X₂) → l4(X₀, X₁, X₂)
    t₁₁: l10(X₀, X₁, X₂) → l9(X₀, 1+X₁, 1+X₂) :|: 1 ≤ X₀ ∧ 1 ≤ X₀+X₁ ∧ 1+X₁ ≤ X₀ ∧ 1 ≤ X₀+X₂ ∧ 1+X₂ ≤ X₀ ∧ 0 ≤ X₁ ∧ 0 ≤ X₁+X₂ ∧ X₂ ≤ X₁ ∧ X₁ ≤ X₂ ∧ 0 ≤ X₂
    t₁₄₀: l11_v1(X₀, X₁, X₂) → l12_v1(X₀, X₁, X₂) :|: 1 ≤ X₂ ∧ X₀ ≤ X₁ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₁ ∧ 0 ≤ X₁+X₂ ∧ X₂ ≤ X₁ ∧ X₁ ≤ X₂ ∧ 0 ≤ X₂
    t₁₃₉: l11_v1(X₀, X₁, X₂) → l13(X₀, X₁, X₂) :|: X₂ ≤ 0 ∧ X₀ ≤ X₁ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₁ ∧ 0 ≤ X₁+X₂ ∧ X₂ ≤ X₁ ∧ X₁ ≤ X₂ ∧ 0 ≤ X₂
    t₁₄₄: l11_v2(X₀, X₁, X₂) → l12_v2(X₀, X₁, X₂) :|: 1 ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ X₀ ≤ X₁ ∧ 0 ≤ X₁ ∧ 0 ≤ X₁+X₂ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₂
    t₁₄₃: l11_v2(X₀, X₁, X₂) → l13(X₀, X₁, X₂) :|: X₂ ≤ 0 ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ X₀ ≤ X₁ ∧ 0 ≤ X₁ ∧ 0 ≤ X₁+X₂ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₂
    t₁₄₁: l12_v1(X₀, X₁, X₂) → l9_v1(X₀, X₁, X₂-1) :|: 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ X₀ ≤ X₁ ∧ X₀ ≤ X₂ ∧ X₂ ≤ X₁ ∧ X₁ ≤ X₂
    t₁₄₅: l12_v2(X₀, X₁, X₂) → l9_v1(X₀, X₁, X₂-1) :|: 1 ≤ X₁ ∧ 1+X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁ ∧ 2 ≤ X₁+X₂ ∧ 3 ≤ X₁+X₂ ∧ X₀ ≤ X₁ ∧ X₂ ≤ X₁
    t₁₅: l13(X₀, X₁, X₂) → l14(X₀, X₁, X₂) :|: X₀ ≤ X₁ ∧ 0 ≤ X₁ ∧ 0 ≤ X₁+X₂ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₂ ∧ X₂ ≤ 0
    t₁: l2(X₀, X₁, X₂) → l3(X₀, X₁, X₂)
    t₂: l3(X₀, X₁, X₂) → l1(X₀, X₁, X₂)
    t₄: l4(X₀, X₁, X₂) → l5(X₀, X₁, X₂)
    t₅: l5(X₀, X₁, X₂) → l6(X₀, X₁, X₂)
    t₆: l6(X₀, X₁, X₂) → l7(X₀, X₁, X₂)
    t₇: l7(X₀, X₁, X₂) → l8(X₀, X₁, X₂)
    t₈: l8(X₀, X₁, X₂) → l9(X₀, 0, 0)
    t₉: l9(X₀, X₁, X₂) → l10(X₀, X₁, X₂) :|: 1+X₁ ≤ X₀ ∧ 0 ≤ X₁ ∧ 0 ≤ X₁+X₂ ∧ X₂ ≤ X₁ ∧ X₁ ≤ X₂ ∧ 0 ≤ X₂
    t₁₃₈: l9(X₀, X₁, X₂) → l10(X₀, X₁, X₂) :|: 1+X₁ ≤ X₀ ∧ 0 ≤ X₁ ∧ 0 ≤ X₁+X₂ ∧ X₂ ≤ X₁ ∧ X₁ ≤ X₂ ∧ 0 ≤ X₂
    t₁₃₇: l9(X₀, X₁, X₂) → l11_v1(X₀, X₁, X₂) :|: X₀ ≤ X₁ ∧ 0 ≤ X₁ ∧ 0 ≤ X₁+X₂ ∧ X₂ ≤ X₁ ∧ X₁ ≤ X₂ ∧ 0 ≤ X₂
    t₁₄₂: l9_v1(X₀, X₁, X₂) → l11_v2(X₀, X₁, X₂) :|: X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ 0 ≤ X₁ ∧ 0 ≤ X₁+X₂ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₂




All Bounds
Timebounds
  Overall timebound:6⋅X₀+18 {O(n)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: 1 {O(1)}
    t₈: 1 {O(1)}
    t₉: X₀ {O(n)}
    t₁₁: X₀ {O(n)}
    t₁₅: 1 {O(1)}
    t₁₃₇: 1 {O(1)}
    t₁₃₈: X₀+1 {O(n)}
    t₁₃₉: 1 {O(1)}
    t₁₄₀: 1 {O(1)}
    t₁₄₁: 1 {O(1)}
    t₁₄₂: X₀+1 {O(n)}
    t₁₄₃: 1 {O(1)}
    t₁₄₄: X₀+1 {O(n)}
    t₁₄₅: X₀ {O(n)}


Costbounds
  Overall costbound: 6⋅X₀+18 {O(n)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: 1 {O(1)}
    t₈: 1 {O(1)}
    t₉: X₀ {O(n)}
    t₁₁: X₀ {O(n)}
    t₁₅: 1 {O(1)}
    t₁₃₇: 1 {O(1)}
    t₁₃₈: X₀+1 {O(n)}
    t₁₃₉: 1 {O(1)}
    t₁₄₀: 1 {O(1)}
    t₁₄₁: 1 {O(1)}
    t₁₄₂: X₀+1 {O(n)}
    t₁₄₃: 1 {O(1)}
    t₁₄₄: X₀+1 {O(n)}
    t₁₄₅: X₀ {O(n)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₀, X₂: X₂ {O(n)}
    t₁, X₀: X₀ {O(n)}
    t₁, X₁: X₁ {O(n)}
    t₁, X₂: X₂ {O(n)}
    t₂, X₀: X₀ {O(n)}
    t₂, X₁: X₁ {O(n)}
    t₂, X₂: X₂ {O(n)}
    t₃, X₀: X₀ {O(n)}
    t₃, X₁: X₁ {O(n)}
    t₃, X₂: X₂ {O(n)}
    t₄, X₀: X₀ {O(n)}
    t₄, X₁: X₁ {O(n)}
    t₄, X₂: X₂ {O(n)}
    t₅, X₀: X₀ {O(n)}
    t₅, X₁: X₁ {O(n)}
    t₅, X₂: X₂ {O(n)}
    t₆, X₀: X₀ {O(n)}
    t₆, X₁: X₁ {O(n)}
    t₆, X₂: X₂ {O(n)}
    t₇, X₀: X₀ {O(n)}
    t₇, X₁: X₁ {O(n)}
    t₇, X₂: X₂ {O(n)}
    t₈, X₀: X₀ {O(n)}
    t₈, X₁: 0 {O(1)}
    t₈, X₂: 0 {O(1)}
    t₉, X₀: X₀ {O(n)}
    t₉, X₁: X₀ {O(n)}
    t₉, X₂: X₀ {O(n)}
    t₁₁, X₀: X₀ {O(n)}
    t₁₁, X₁: X₀ {O(n)}
    t₁₁, X₂: X₀ {O(n)}
    t₁₅, X₀: 4⋅X₀ {O(n)}
    t₁₅, X₁: X₀ {O(n)}
    t₁₅, X₂: 0 {O(1)}
    t₁₃₇, X₀: 2⋅X₀ {O(n)}
    t₁₃₇, X₁: X₀ {O(n)}
    t₁₃₇, X₂: X₀ {O(n)}
    t₁₃₈, X₀: X₀ {O(n)}
    t₁₃₈, X₁: X₀ {O(n)}
    t₁₃₈, X₂: X₀ {O(n)}
    t₁₃₉, X₀: 2⋅X₀ {O(n)}
    t₁₃₉, X₁: 0 {O(1)}
    t₁₃₉, X₂: 0 {O(1)}
    t₁₄₀, X₀: 2⋅X₀ {O(n)}
    t₁₄₀, X₁: X₀ {O(n)}
    t₁₄₀, X₂: X₀ {O(n)}
    t₁₄₁, X₀: 2⋅X₀ {O(n)}
    t₁₄₁, X₁: X₀ {O(n)}
    t₁₄₁, X₂: X₀ {O(n)}
    t₁₄₂, X₀: 2⋅X₀ {O(n)}
    t₁₄₂, X₁: X₀ {O(n)}
    t₁₄₂, X₂: X₀ {O(n)}
    t₁₄₃, X₀: 2⋅X₀ {O(n)}
    t₁₄₃, X₁: X₀ {O(n)}
    t₁₄₃, X₂: 0 {O(1)}
    t₁₄₄, X₀: 2⋅X₀ {O(n)}
    t₁₄₄, X₁: X₀ {O(n)}
    t₁₄₄, X₂: X₀ {O(n)}
    t₁₄₅, X₀: 2⋅X₀ {O(n)}
    t₁₄₅, X₁: X₀ {O(n)}
    t₁₄₅, X₂: X₀ {O(n)}

