WORST_CASE(Omega(n^1),O(n^2))

# LoAT Proof:
WORST_CASE(Omega(n^1),?)

WORST_CASE(Omega(n^1),?)
Initial ITS

Start location: eval_perfect2_start

Location map:
LoAT_sink -> 0
eval_perfect2_start -> 1
eval_perfect2_bb0_in -> 2
eval_perfect2_0 -> 3
eval_perfect2_1 -> 4
eval_perfect2_bb3_in -> 5
eval_perfect2_bb1_in -> 6
eval_perfect2_bb2_in -> 7
eval_perfect2_bb4_in -> 8
eval_perfect2_stop -> 9
eval_perfect2_bb5_in -> 10
eval_perfect2_bb6_in -> 11
eval_perfect2_9 -> 12
eval_perfect2_10 -> 13
eval_perfect2_11 -> 14
eval_perfect2_12 -> 15

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: -2+i1 == 0 /\ i1'=3, i3'=1+i3
   2: -3+i1 == 0 /\ i1'=4, i3'=1+i3
   3: (i7 <= 0 /\ -4+i1 == 0) /\ i1'=5, i3'=1+i3
   4: (i7 > 0 /\ -4+i1 == 0) /\ i1'=6, i3'=1+i3, i8'=i7, i10'=i7
   5: (-6+i1 == 0 /\ -1+i8 == 0) /\ i1'=7, i3'=1+i3
   6: (-6+i1 == 0 /\ -1+i8 < 0) /\ i1'=8, i3'=1+i3, i5'=-1+i8, i9'=i7
   7: (-6+i1 == 0 /\ -1+i8 > 0) /\ i1'=8, i3'=1+i3, i5'=-1+i8, i9'=i7
   8: (i10 < 0 /\ -7+i1 == 0) /\ i1'=5, i3'=1+i3
   9: (i10 > 0 /\ -7+i1 == 0) /\ i1'=5, i3'=1+i3
  10: (i10 == 0 /\ -7+i1 == 0) /\ i1'=5, i3'=1+i3
  11: -5+i1 == 0 /\ i1'=9, i3'=1+i3
  12: (-8+i1 == 0 /\ -i5+i9 >= 0) /\ i1'=10, i3'=1+i3
  13: (-8+i1 == 0 /\ -i5+i9 < 0) /\ i1'=11, i3'=1+i3
  14: -10+i1 == 0 /\ i1'=8, i3'=1+i3, i9'=-i5+i9
  15: -11+i1 == 0 /\ i1'=12, i3'=1+i3, i6'=i10-i5
  16: -12+i1 == 0 /\ i1'=13, i3'=1+i3
  17: (-13+i1 == 0 /\ i9 == 0) /\ i1'=14, i3'=1+i3, i4'=i6
  18: (-13+i1 == 0 /\ i9 < 0) /\ i1'=14, i3'=1+i3, i4'=i10
  19: (-13+i1 == 0 /\ i9 > 0) /\ i1'=14, i3'=1+i3, i4'=i10
  20: -14+i1 == 0 /\ i1'=15, i3'=1+i3
  21: -15+i1 == 0 /\ i1'=6, i3'=1+i3, i8'=i5, i10'=i4

Dependency graph:
0 -> 1
1 -> 2
2 -> 3, 2 -> 4
3 -> 11
4 -> 5, 4 -> 6, 4 -> 7
5 -> 8, 5 -> 9, 5 -> 10
6 -> 12, 6 -> 13
7 -> 12, 7 -> 13
8 -> 11
9 -> 11
10 -> 11
12 -> 14
13 -> 15
14 -> 12, 14 -> 13
15 -> 16
16 -> 17, 16 -> 18, 16 -> 19
17 -> 20
18 -> 20
19 -> 20
20 -> 21
21 -> 5, 21 -> 6, 21 -> 7

Chained Linear Paths

	Applied Chaining

	First rule:
	-1+i1 == 0 /\ i1'=2, i3'=1+i3
	Second rule:
	-2+i1 == 0 /\ i1'=3, i3'=1+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 0, 1
	
	Applied Chaining

	First rule:
	(i7 <= 0 /\ -4+i1 == 0) /\ i1'=5, i3'=1+i3
	Second rule:
	-5+i1 == 0 /\ i1'=9, i3'=1+i3
	New rule:
	(0 == 0 /\ i7 <= 0 /\ -4+i1 == 0) /\ i1'=9, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 3
	
	Applied Chaining

	First rule:
	(i10 < 0 /\ -7+i1 == 0) /\ i1'=5, i3'=1+i3
	Second rule:
	-5+i1 == 0 /\ i1'=9, i3'=1+i3
	New rule:
	(0 == 0 /\ i10 < 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 8
	
	Applied Chaining

	First rule:
	(i10 > 0 /\ -7+i1 == 0) /\ i1'=5, i3'=1+i3
	Second rule:
	-5+i1 == 0 /\ i1'=9, i3'=1+i3
	New rule:
	(0 == 0 /\ i10 > 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 9
	
	Applied Chaining

	First rule:
	(i10 == 0 /\ -7+i1 == 0) /\ i1'=5, i3'=1+i3
	Second rule:
	-5+i1 == 0 /\ i1'=9, i3'=1+i3
	New rule:
	(0 == 0 /\ i10 == 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 10, 11
	
	Applied Chaining

	First rule:
	(-8+i1 == 0 /\ -i5+i9 >= 0) /\ i1'=10, i3'=1+i3
	Second rule:
	-10+i1 == 0 /\ i1'=8, i3'=1+i3, i9'=-i5+i9
	New rule:
	(0 == 0 /\ -8+i1 == 0 /\ -i5+i9 >= 0) /\ i1'=8, i3'=2+i3, i9'=-i5+i9
	
	Applied Deletion

	Removed the following rules: 12, 14
	
	Applied Chaining

	First rule:
	(-8+i1 == 0 /\ -i5+i9 < 0) /\ i1'=11, i3'=1+i3
	Second rule:
	-11+i1 == 0 /\ i1'=12, i3'=1+i3, i6'=i10-i5
	New rule:
	(0 == 0 /\ -8+i1 == 0 /\ -i5+i9 < 0) /\ i1'=12, i3'=2+i3, i6'=i10-i5
	
	Applied Deletion

	Removed the following rules: 13, 15
	
	Applied Chaining

	First rule:
	(-13+i1 == 0 /\ i9 == 0) /\ i1'=14, i3'=1+i3, i4'=i6
	Second rule:
	-14+i1 == 0 /\ i1'=15, i3'=1+i3
	New rule:
	(0 == 0 /\ -13+i1 == 0 /\ i9 == 0) /\ i1'=15, i3'=2+i3, i4'=i6
	
	Applied Deletion

	Removed the following rules: 17
	
	Applied Chaining

	First rule:
	(-13+i1 == 0 /\ i9 < 0) /\ i1'=14, i3'=1+i3, i4'=i10
	Second rule:
	-14+i1 == 0 /\ i1'=15, i3'=1+i3
	New rule:
	(0 == 0 /\ -13+i1 == 0 /\ i9 < 0) /\ i1'=15, i3'=2+i3, i4'=i10
	
	Applied Deletion

	Removed the following rules: 18
	
	Applied Chaining

	First rule:
	(-13+i1 == 0 /\ i9 > 0) /\ i1'=14, i3'=1+i3, i4'=i10
	Second rule:
	-14+i1 == 0 /\ i1'=15, i3'=1+i3
	New rule:
	(0 == 0 /\ -13+i1 == 0 /\ i9 > 0) /\ i1'=15, i3'=2+i3, i4'=i10
	
	Applied Deletion

	Removed the following rules: 19, 20
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	Second rule:
	-3+i1 == 0 /\ i1'=4, i3'=1+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=4, i3'=3+i3
	
	Applied Deletion

	Removed the following rules: 2, 22
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -8+i1 == 0 /\ -i5+i9 < 0) /\ i1'=12, i3'=2+i3, i6'=i10-i5
	Second rule:
	-12+i1 == 0 /\ i1'=13, i3'=1+i3
	New rule:
	(0 == 0 /\ -8+i1 == 0 /\ -i5+i9 < 0) /\ i1'=13, i3'=3+i3, i6'=i10-i5
	
	Applied Deletion

	Removed the following rules: 16, 28
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -13+i1 == 0 /\ i9 == 0) /\ i1'=15, i3'=2+i3, i4'=i6
	Second rule:
	-15+i1 == 0 /\ i1'=6, i3'=1+i3, i8'=i5, i10'=i4
	New rule:
	(0 == 0 /\ -13+i1 == 0 /\ i9 == 0) /\ i1'=6, i3'=3+i3, i4'=i6, i8'=i5, i10'=i6
	
	Applied Deletion

	Removed the following rules: 29
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -13+i1 == 0 /\ i9 < 0) /\ i1'=15, i3'=2+i3, i4'=i10
	Second rule:
	-15+i1 == 0 /\ i1'=6, i3'=1+i3, i8'=i5, i10'=i4
	New rule:
	(0 == 0 /\ -13+i1 == 0 /\ i9 < 0) /\ i1'=6, i3'=3+i3, i4'=i10, i8'=i5, i10'=i10
	
	Applied Deletion

	Removed the following rules: 30
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -13+i1 == 0 /\ i9 > 0) /\ i1'=15, i3'=2+i3, i4'=i10
	Second rule:
	-15+i1 == 0 /\ i1'=6, i3'=1+i3, i8'=i5, i10'=i4
	New rule:
	(0 == 0 /\ -13+i1 == 0 /\ i9 > 0) /\ i1'=6, i3'=3+i3, i4'=i10, i8'=i5, i10'=i10
	
	Applied Deletion

	Removed the following rules: 21, 31

Start location: eval_perfect2_start

Location map:
LoAT_sink -> 0
eval_perfect2_start -> 1
eval_perfect2_bb0_in -> 2
eval_perfect2_0 -> 3
eval_perfect2_1 -> 4
eval_perfect2_bb3_in -> 5
eval_perfect2_bb1_in -> 6
eval_perfect2_bb2_in -> 7
eval_perfect2_bb4_in -> 8
eval_perfect2_stop -> 9
eval_perfect2_bb5_in -> 10
eval_perfect2_bb6_in -> 11
eval_perfect2_9 -> 12
eval_perfect2_10 -> 13
eval_perfect2_11 -> 14
eval_perfect2_12 -> 15

Rules:
   4: (i7 > 0 /\ -4+i1 == 0) /\ i1'=6, i3'=1+i3, i8'=i7, i10'=i7
   5: (-6+i1 == 0 /\ -1+i8 == 0) /\ i1'=7, i3'=1+i3
   6: (-6+i1 == 0 /\ -1+i8 < 0) /\ i1'=8, i3'=1+i3, i5'=-1+i8, i9'=i7
   7: (-6+i1 == 0 /\ -1+i8 > 0) /\ i1'=8, i3'=1+i3, i5'=-1+i8, i9'=i7
  23: (0 == 0 /\ i7 <= 0 /\ -4+i1 == 0) /\ i1'=9, i3'=2+i3
  24: (0 == 0 /\ i10 < 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
  25: (0 == 0 /\ i10 > 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
  26: (0 == 0 /\ i10 == 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
  27: (0 == 0 /\ -8+i1 == 0 /\ -i5+i9 >= 0) /\ i1'=8, i3'=2+i3, i9'=-i5+i9
  32: (0 == 0 /\ -1+i1 == 0) /\ i1'=4, i3'=3+i3
  33: (0 == 0 /\ -8+i1 == 0 /\ -i5+i9 < 0) /\ i1'=13, i3'=3+i3, i6'=i10-i5
  34: (0 == 0 /\ -13+i1 == 0 /\ i9 == 0) /\ i1'=6, i3'=3+i3, i4'=i6, i8'=i5, i10'=i6
  35: (0 == 0 /\ -13+i1 == 0 /\ i9 < 0) /\ i1'=6, i3'=3+i3, i4'=i10, i8'=i5, i10'=i10
  36: (0 == 0 /\ -13+i1 == 0 /\ i9 > 0) /\ i1'=6, i3'=3+i3, i4'=i10, i8'=i5, i10'=i10

Dependency graph:
4 -> 5, 4 -> 6, 4 -> 7
5 -> 24, 5 -> 25, 5 -> 26
6 -> 27, 6 -> 33
7 -> 27, 7 -> 33
27 -> 27, 27 -> 33
32 -> 4, 32 -> 23
33 -> 34, 33 -> 35, 33 -> 36
34 -> 5, 34 -> 6, 34 -> 7
35 -> 5, 35 -> 6, 35 -> 7
36 -> 5, 36 -> 6, 36 -> 7

Preprocessed Transitions

	Simplified Guard

	Original rule:
	(0 == 0 /\ i7 <= 0 /\ -4+i1 == 0) /\ i1'=9, i3'=2+i3
	New rule:
	(i7 <= 0 /\ -4+i1 == 0) /\ i1'=9, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ i10 < 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
	New rule:
	(i10 < 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ i10 > 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
	New rule:
	(i10 > 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ i10 == 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
	New rule:
	(i10 == 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -8+i1 == 0 /\ -i5+i9 >= 0) /\ i1'=8, i3'=2+i3, i9'=-i5+i9
	New rule:
	(-8+i1 == 0 /\ -i5+i9 >= 0) /\ i1'=8, i3'=2+i3, i9'=-i5+i9
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=4, i3'=3+i3
	New rule:
	-1+i1 == 0 /\ i1'=4, i3'=3+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -8+i1 == 0 /\ -i5+i9 < 0) /\ i1'=13, i3'=3+i3, i6'=i10-i5
	New rule:
	(-8+i1 == 0 /\ -i5+i9 < 0) /\ i1'=13, i3'=3+i3, i6'=i10-i5
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -13+i1 == 0 /\ i9 == 0) /\ i1'=6, i3'=3+i3, i4'=i6, i8'=i5, i10'=i6
	New rule:
	(-13+i1 == 0 /\ i9 == 0) /\ i1'=6, i3'=3+i3, i4'=i6, i8'=i5, i10'=i6
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -13+i1 == 0 /\ i9 < 0) /\ i1'=6, i3'=3+i3, i4'=i10, i8'=i5, i10'=i10
	New rule:
	(-13+i1 == 0 /\ i9 < 0) /\ i1'=6, i3'=3+i3, i4'=i10, i8'=i5, i10'=i10
	
	Removed Trivial Updates

	Original rule:
	(-13+i1 == 0 /\ i9 < 0) /\ i1'=6, i3'=3+i3, i4'=i10, i8'=i5, i10'=i10
	New rule:
	(-13+i1 == 0 /\ i9 < 0) /\ i1'=6, i3'=3+i3, i4'=i10, i8'=i5
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -13+i1 == 0 /\ i9 > 0) /\ i1'=6, i3'=3+i3, i4'=i10, i8'=i5, i10'=i10
	New rule:
	(-13+i1 == 0 /\ i9 > 0) /\ i1'=6, i3'=3+i3, i4'=i10, i8'=i5, i10'=i10
	
	Removed Trivial Updates

	Original rule:
	(-13+i1 == 0 /\ i9 > 0) /\ i1'=6, i3'=3+i3, i4'=i10, i8'=i5, i10'=i10
	New rule:
	(-13+i1 == 0 /\ i9 > 0) /\ i1'=6, i3'=3+i3, i4'=i10, i8'=i5

Start location: eval_perfect2_start

Location map:
LoAT_sink -> 0
eval_perfect2_start -> 1
eval_perfect2_bb0_in -> 2
eval_perfect2_0 -> 3
eval_perfect2_1 -> 4
eval_perfect2_bb3_in -> 5
eval_perfect2_bb1_in -> 6
eval_perfect2_bb2_in -> 7
eval_perfect2_bb4_in -> 8
eval_perfect2_stop -> 9
eval_perfect2_bb5_in -> 10
eval_perfect2_bb6_in -> 11
eval_perfect2_9 -> 12
eval_perfect2_10 -> 13
eval_perfect2_11 -> 14
eval_perfect2_12 -> 15

Rules:
   4: (i7 > 0 /\ -4+i1 == 0) /\ i1'=6, i3'=1+i3, i8'=i7, i10'=i7
   5: (-6+i1 == 0 /\ -1+i8 == 0) /\ i1'=7, i3'=1+i3
   6: (-6+i1 == 0 /\ -1+i8 < 0) /\ i1'=8, i3'=1+i3, i5'=-1+i8, i9'=i7
   7: (-6+i1 == 0 /\ -1+i8 > 0) /\ i1'=8, i3'=1+i3, i5'=-1+i8, i9'=i7
  37: (i7 <= 0 /\ -4+i1 == 0) /\ i1'=9, i3'=2+i3
  38: (i10 < 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
  39: (i10 > 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
  40: (i10 == 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
  41: (-8+i1 == 0 /\ -i5+i9 >= 0) /\ i1'=8, i3'=2+i3, i9'=-i5+i9
  42: -1+i1 == 0 /\ i1'=4, i3'=3+i3
  43: (-8+i1 == 0 /\ -i5+i9 < 0) /\ i1'=13, i3'=3+i3, i6'=i10-i5
  44: (-13+i1 == 0 /\ i9 == 0) /\ i1'=6, i3'=3+i3, i4'=i6, i8'=i5, i10'=i6
  45: (-13+i1 == 0 /\ i9 < 0) /\ i1'=6, i3'=3+i3, i4'=i10, i8'=i5
  46: (-13+i1 == 0 /\ i9 > 0) /\ i1'=6, i3'=3+i3, i4'=i10, i8'=i5

Dependency graph:
4 -> 5, 4 -> 6, 4 -> 7
5 -> 38, 5 -> 39, 5 -> 40
6 -> 41, 6 -> 43
7 -> 41, 7 -> 43
41 -> 41, 41 -> 43
42 -> 4, 42 -> 37
43 -> 44, 43 -> 45, 43 -> 46
44 -> 5, 44 -> 6, 44 -> 7
45 -> 5, 45 -> 6, 45 -> 7
46 -> 5, 46 -> 6, 46 -> 7

Refined Dependency Graph

	Removed the following edges: 4 -> 6

Start location: eval_perfect2_start

Location map:
LoAT_sink -> 0
eval_perfect2_start -> 1
eval_perfect2_bb0_in -> 2
eval_perfect2_0 -> 3
eval_perfect2_1 -> 4
eval_perfect2_bb3_in -> 5
eval_perfect2_bb1_in -> 6
eval_perfect2_bb2_in -> 7
eval_perfect2_bb4_in -> 8
eval_perfect2_stop -> 9
eval_perfect2_bb5_in -> 10
eval_perfect2_bb6_in -> 11
eval_perfect2_9 -> 12
eval_perfect2_10 -> 13
eval_perfect2_11 -> 14
eval_perfect2_12 -> 15

Rules:
   4: (i7 > 0 /\ -4+i1 == 0) /\ i1'=6, i3'=1+i3, i8'=i7, i10'=i7
   5: (-6+i1 == 0 /\ -1+i8 == 0) /\ i1'=7, i3'=1+i3
   6: (-6+i1 == 0 /\ -1+i8 < 0) /\ i1'=8, i3'=1+i3, i5'=-1+i8, i9'=i7
   7: (-6+i1 == 0 /\ -1+i8 > 0) /\ i1'=8, i3'=1+i3, i5'=-1+i8, i9'=i7
  37: (i7 <= 0 /\ -4+i1 == 0) /\ i1'=9, i3'=2+i3
  38: (i10 < 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
  39: (i10 > 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
  40: (i10 == 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
  41: (-8+i1 == 0 /\ -i5+i9 >= 0) /\ i1'=8, i3'=2+i3, i9'=-i5+i9
  42: -1+i1 == 0 /\ i1'=4, i3'=3+i3
  43: (-8+i1 == 0 /\ -i5+i9 < 0) /\ i1'=13, i3'=3+i3, i6'=i10-i5
  44: (-13+i1 == 0 /\ i9 == 0) /\ i1'=6, i3'=3+i3, i4'=i6, i8'=i5, i10'=i6
  45: (-13+i1 == 0 /\ i9 < 0) /\ i1'=6, i3'=3+i3, i4'=i10, i8'=i5
  46: (-13+i1 == 0 /\ i9 > 0) /\ i1'=6, i3'=3+i3, i4'=i10, i8'=i5

Dependency graph:
4 -> 5, 4 -> 7
5 -> 38, 5 -> 39, 5 -> 40
6 -> 41, 6 -> 43
7 -> 41, 7 -> 43
41 -> 41, 41 -> 43
42 -> 4, 42 -> 37
43 -> 44, 43 -> 45, 43 -> 46
44 -> 5, 44 -> 6, 44 -> 7
45 -> 5, 45 -> 6, 45 -> 7
46 -> 5, 46 -> 6, 46 -> 7

Step with 42

	Trace

	42[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 37

	Trace

	42[(-1+i1 == 0)]
	37[(i7 <= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{}
	{}
	
Backtrack

	Trace

	42[(-1+i1 == 0)]
	
	Blocked

	{}
	{37[T]}
	
Step with 4

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{37[T]}
	{}
	
Step with 5

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	5[(-6+i1 == 0 /\ -1+i8 == 0)]
	
	Blocked

	{}
	{37[T]}
	{}
	{}
	
Step with 39

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	5[(-6+i1 == 0 /\ -1+i8 == 0)]
	39[(i10 > 0 /\ -7+i1 == 0)]
	
	Blocked

	{}
	{37[T]}
	{}
	{}
	{}
	
Backtrack

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	5[(-6+i1 == 0 /\ -1+i8 == 0)]
	
	Blocked

	{}
	{37[T]}
	{}
	{39[T]}
	
Backtrack

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T]}
	
Step with 7

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T]}
	{}
	
Step with 41

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	41[(-8+i1 == 0 /\ -i5+i9 >= 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T]}
	{43[T]}
	{}
	
Accelerate

	Certificate of Non-Termination

	Original rule:
	(-8+i1 == 0 /\ -i5+i9 >= 0) /\ i1'=8, i3'=2+i3, i9'=-i5+i9
	New rule:
	(i5 <= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -i5+i9 >= 0) /\ i1'=0

		8-i1 >= 0 [0]: unchanged
		
		-8+i1 >= 0 [0]: unchanged
		
		-i5+i9 >= 0 [0]: eventual decrease yields (-i5*(-1+it64)-i5+i9 >= 0 /\ -i5+i9 >= 0)
		
		-i5+i9 >= 0 [1]: eventual increase yields (i5 <= 0 /\ -i5+i9 >= 0)
		
		Replacement map: {8-i1 >= 0 -> 8-i1 >= 0, -8+i1 >= 0 -> -8+i1 >= 0, -i5+i9 >= 0 -> (i5 <= 0 /\ -i5+i9 >= 0)}

	Loop Acceleration

	Original rule:
	(-8+i1 == 0 /\ -i5+i9 >= 0) /\ i1'=8, i3'=2+i3, i9'=-i5+i9
	New rule:
	(-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0) /\ i1'=i1, i3'=i3+2*it64, i9'=-it64*i5+i9

		8-i1 >= 0 [0]: unchanged
		
		-8+i1 >= 0 [0]: unchanged
		
		-i5+i9 >= 0 [0]: eventual decrease yields (-i5*(-1+it64)-i5+i9 >= 0 /\ -i5+i9 >= 0)
		
		-i5+i9 >= 0 [1]: eventual increase yields (i5 <= 0 /\ -i5+i9 >= 0)
		
		Replacement map: {8-i1 >= 0 -> 8-i1 >= 0, -8+i1 >= 0 -> -8+i1 >= 0, -i5+i9 >= 0 -> (-i5*(-1+it64)-i5+i9 >= 0 /\ -i5+i9 >= 0)}

	Removed Trivial Updates

	Original rule:
	(-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0) /\ i1'=i1, i3'=i3+2*it64, i9'=-it64*i5+i9
	New rule:
	(-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0) /\ i3'=i3+2*it64, i9'=-it64*i5+i9

Start location: eval_perfect2_start

Location map:
LoAT_sink -> 0
eval_perfect2_start -> 1
eval_perfect2_bb0_in -> 2
eval_perfect2_0 -> 3
eval_perfect2_1 -> 4
eval_perfect2_bb3_in -> 5
eval_perfect2_bb1_in -> 6
eval_perfect2_bb2_in -> 7
eval_perfect2_bb4_in -> 8
eval_perfect2_stop -> 9
eval_perfect2_bb5_in -> 10
eval_perfect2_bb6_in -> 11
eval_perfect2_9 -> 12
eval_perfect2_10 -> 13
eval_perfect2_11 -> 14
eval_perfect2_12 -> 15

Rules:
   4: (i7 > 0 /\ -4+i1 == 0) /\ i1'=6, i3'=1+i3, i8'=i7, i10'=i7
   5: (-6+i1 == 0 /\ -1+i8 == 0) /\ i1'=7, i3'=1+i3
   6: (-6+i1 == 0 /\ -1+i8 < 0) /\ i1'=8, i3'=1+i3, i5'=-1+i8, i9'=i7
   7: (-6+i1 == 0 /\ -1+i8 > 0) /\ i1'=8, i3'=1+i3, i5'=-1+i8, i9'=i7
  37: (i7 <= 0 /\ -4+i1 == 0) /\ i1'=9, i3'=2+i3
  38: (i10 < 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
  39: (i10 > 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
  40: (i10 == 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
  41: (-8+i1 == 0 /\ -i5+i9 >= 0) /\ i1'=8, i3'=2+i3, i9'=-i5+i9
  42: -1+i1 == 0 /\ i1'=4, i3'=3+i3
  43: (-8+i1 == 0 /\ -i5+i9 < 0) /\ i1'=13, i3'=3+i3, i6'=i10-i5
  44: (-13+i1 == 0 /\ i9 == 0) /\ i1'=6, i3'=3+i3, i4'=i6, i8'=i5, i10'=i6
  45: (-13+i1 == 0 /\ i9 < 0) /\ i1'=6, i3'=3+i3, i4'=i10, i8'=i5
  46: (-13+i1 == 0 /\ i9 > 0) /\ i1'=6, i3'=3+i3, i4'=i10, i8'=i5
  47: (i5 <= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -i5+i9 >= 0) /\ i1'=0
  48: (-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0) /\ i3'=i3+2*it64, i9'=-it64*i5+i9

Dependency graph:
4 -> 5, 4 -> 7
5 -> 38, 5 -> 39, 5 -> 40
6 -> 41, 6 -> 43, 6 -> 47, 6 -> 48
7 -> 41, 7 -> 43, 7 -> 47, 7 -> 48
41 -> 41, 41 -> 43, 41 -> 47, 41 -> 48
42 -> 4, 42 -> 37
43 -> 44, 43 -> 45, 43 -> 46
44 -> 5, 44 -> 6, 44 -> 7
45 -> 5, 45 -> 6, 45 -> 7
46 -> 5, 46 -> 6, 46 -> 7
48 -> 41, 48 -> 43, 48 -> 47

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	48[(-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T]}
	{43[T]}
	{41[T], 48[T]}
	
Step with 43

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	48[(-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0)]
	43[(-8+i1 == 0 /\ -i5+i9 < 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T]}
	{43[T]}
	{41[T], 47[T], 48[T]}
	{}
	
Step with 44

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	48[(-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0)]
	43[(-8+i1 == 0 /\ -i5+i9 < 0)]
	44[(-13+i1 == 0 /\ i9 == 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T]}
	{43[T]}
	{41[T], 47[T], 48[T]}
	{}
	{}
	
Accelerate

		Simplified Guard

		Original rule:
		(0 >= 0 /\ 0 == 0 /\ -6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) == 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0) /\ i1'=6, i3'=7+i3+2*it64, i4'=1+i10-i8, i5'=-1+i8, i6'=1+i10-i8, i8'=-1+i8, i9'=i7-it64*(-1+i8), i10'=1+i10-i8
		New rule:
		(-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) == 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0) /\ i1'=6, i3'=7+i3+2*it64, i4'=1+i10-i8, i5'=-1+i8, i6'=1+i10-i8, i8'=-1+i8, i9'=i7-it64*(-1+i8), i10'=1+i10-i8

	Loop Acceleration

	Original rule:
	(-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) == 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0) /\ i1'=6, i3'=7+i3+2*it64, i4'=1+i10-i8, i5'=-1+i8, i6'=1+i10-i8, i8'=-1+i8, i9'=i7-it64*(-1+i8), i10'=1+i10-i8
	New rule:
	(-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) == 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0) /\ i1'=i1, i3'=7+i3+2*it64, i4'=1+i10-i8, i5'=-1+i8, i6'=1+i10-i8, i8'=-1+i8, i9'=i7-it64*(-1+i8), i10'=1+i10-i8

		rule cannot be iterated more than once

	Removed Trivial Updates

	Original rule:
	(-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) == 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0) /\ i1'=i1, i3'=7+i3+2*it64, i4'=1+i10-i8, i5'=-1+i8, i6'=1+i10-i8, i8'=-1+i8, i9'=i7-it64*(-1+i8), i10'=1+i10-i8
	New rule:
	(-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) == 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0) /\ i3'=7+i3+2*it64, i4'=1+i10-i8, i5'=-1+i8, i6'=1+i10-i8, i8'=-1+i8, i9'=i7-it64*(-1+i8), i10'=1+i10-i8

Start location: eval_perfect2_start

Location map:
LoAT_sink -> 0
eval_perfect2_start -> 1
eval_perfect2_bb0_in -> 2
eval_perfect2_0 -> 3
eval_perfect2_1 -> 4
eval_perfect2_bb3_in -> 5
eval_perfect2_bb1_in -> 6
eval_perfect2_bb2_in -> 7
eval_perfect2_bb4_in -> 8
eval_perfect2_stop -> 9
eval_perfect2_bb5_in -> 10
eval_perfect2_bb6_in -> 11
eval_perfect2_9 -> 12
eval_perfect2_10 -> 13
eval_perfect2_11 -> 14
eval_perfect2_12 -> 15

Rules:
   4: (i7 > 0 /\ -4+i1 == 0) /\ i1'=6, i3'=1+i3, i8'=i7, i10'=i7
   5: (-6+i1 == 0 /\ -1+i8 == 0) /\ i1'=7, i3'=1+i3
   6: (-6+i1 == 0 /\ -1+i8 < 0) /\ i1'=8, i3'=1+i3, i5'=-1+i8, i9'=i7
   7: (-6+i1 == 0 /\ -1+i8 > 0) /\ i1'=8, i3'=1+i3, i5'=-1+i8, i9'=i7
  37: (i7 <= 0 /\ -4+i1 == 0) /\ i1'=9, i3'=2+i3
  38: (i10 < 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
  39: (i10 > 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
  40: (i10 == 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
  41: (-8+i1 == 0 /\ -i5+i9 >= 0) /\ i1'=8, i3'=2+i3, i9'=-i5+i9
  42: -1+i1 == 0 /\ i1'=4, i3'=3+i3
  43: (-8+i1 == 0 /\ -i5+i9 < 0) /\ i1'=13, i3'=3+i3, i6'=i10-i5
  44: (-13+i1 == 0 /\ i9 == 0) /\ i1'=6, i3'=3+i3, i4'=i6, i8'=i5, i10'=i6
  45: (-13+i1 == 0 /\ i9 < 0) /\ i1'=6, i3'=3+i3, i4'=i10, i8'=i5
  46: (-13+i1 == 0 /\ i9 > 0) /\ i1'=6, i3'=3+i3, i4'=i10, i8'=i5
  47: (i5 <= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -i5+i9 >= 0) /\ i1'=0
  48: (-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0) /\ i3'=i3+2*it64, i9'=-it64*i5+i9
  49: (-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) == 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0) /\ i3'=7+i3+2*it64, i4'=1+i10-i8, i5'=-1+i8, i6'=1+i10-i8, i8'=-1+i8, i9'=i7-it64*(-1+i8), i10'=1+i10-i8

Dependency graph:
4 -> 5, 4 -> 7, 4 -> 49
5 -> 38, 5 -> 39, 5 -> 40
6 -> 41, 6 -> 43, 6 -> 47, 6 -> 48
7 -> 41, 7 -> 43, 7 -> 47, 7 -> 48
41 -> 41, 41 -> 43, 41 -> 47, 41 -> 48
42 -> 4, 42 -> 37
43 -> 44, 43 -> 45, 43 -> 46
44 -> 5, 44 -> 6, 44 -> 7, 44 -> 49
45 -> 5, 45 -> 6, 45 -> 7, 45 -> 49
46 -> 5, 46 -> 6, 46 -> 7, 46 -> 49
48 -> 41, 48 -> 43, 48 -> 47
49 -> 5, 49 -> 6, 49 -> 7

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	49[(-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) == 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T]}
	{49[T]}
	
Step with 5

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	49[(-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) == 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0)]
	5[(-6+i1 == 0 /\ -1+i8 == 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T]}
	{49[T]}
	{}
	
Step with 39

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	49[(-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) == 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0)]
	5[(-6+i1 == 0 /\ -1+i8 == 0)]
	39[(i10 > 0 /\ -7+i1 == 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T]}
	{49[T]}
	{}
	{}
	
Backtrack

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	49[(-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) == 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0)]
	5[(-6+i1 == 0 /\ -1+i8 == 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T]}
	{49[T]}
	{39[T]}
	
Backtrack

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	49[(-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) == 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T]}
	{5[T], 49[T]}
	
Backtrack

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	
Step with 7

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{}
	
Step with 48

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	48[(-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{43[T], 47[T]}
	{48[T]}
	
Step with 41

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	48[(-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0)]
	41[(-8+i1 == 0 /\ -i5+i9 >= 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{43[T], 47[T]}
	{47[T], 48[T]}
	{}
	
Covered

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	48[(-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{43[T], 47[T]}
	{41[T], 47[T], 48[T]}
	
Step with 43

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	48[(-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0)]
	43[(-8+i1 == 0 /\ -i5+i9 < 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{43[T], 47[T]}
	{41[T], 47[T], 48[T]}
	{}
	
Step with 44

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	48[(-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0)]
	43[(-8+i1 == 0 /\ -i5+i9 < 0)]
	44[(-13+i1 == 0 /\ i9 == 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{43[T], 47[T]}
	{41[T], 47[T], 48[T]}
	{45[T]}
	{}
	
Covered

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	48[(-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0)]
	43[(-8+i1 == 0 /\ -i5+i9 < 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{43[T], 47[T]}
	{41[T], 47[T], 48[T]}
	{44[T], 45[T]}
	
Step with 46

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	48[(-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0)]
	43[(-8+i1 == 0 /\ -i5+i9 < 0)]
	46[(-13+i1 == 0 /\ i9 > 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{43[T], 47[T]}
	{41[T], 47[T], 48[T]}
	{44[T], 45[T]}
	{}
	
Poly(n^1)

Accelerate

		Simplified Guard

		Original rule:
		(0 >= 0 /\ 0 == 0 /\ -6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0) /\ i1'=6, i3'=7+i3+2*it64, i4'=i10, i5'=-1+i8, i6'=1+i10-i8, i8'=-1+i8, i9'=i7-it64*(-1+i8)
		New rule:
		(-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0) /\ i1'=6, i3'=7+i3+2*it64, i4'=i10, i5'=-1+i8, i6'=1+i10-i8, i8'=-1+i8, i9'=i7-it64*(-1+i8)

	Loop Acceleration

	Original rule:
	(-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0) /\ i1'=6, i3'=7+i3+2*it64, i4'=i10, i5'=-1+i8, i6'=1+i10-i8, i8'=-1+i8, i9'=i7-it64*(-1+i8)
	New rule:
	(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0) /\ i1'=i1, i3'=i3+7*it483+2*it483*it64, i4'=i10, i5'=-it483+i8, i6'=i10+it483-i8, i8'=-it483+i8, i9'=it64*(it483-i8)+i7

		-6+i1 >= 0 [0]: unchanged
		
		6-i1 >= 0 [0]: unchanged
		
		i7-it64*(-1+i8) > 0 [0]: monotonic increase yields i7-it64*(-1+i8) > 0, dependencies: -1+it64 >= 0
		
		i7-it64*(-1+i8) > 0 [1]: eventual decrease yields (it64*(it483-i8)+i7 > 0 /\ i7-it64*(-1+i8) > 0)
		
		i7-it64*(-1+i8) > 0 [2]: eventual increase yields (i7-it64*(-1+i8) > 0 /\ (-2+i8)*it64-it64*(-1+i8) <= 0)
		
		1+i7-i8 >= 0 [0]: monotonic increase yields 1+i7-i8 >= 0
		
		1+i7-i8-(-1+i8)*(-1+it64) >= 0 [0]: monotonic increase yields 1+i7-i8-(-1+i8)*(-1+it64) >= 0, dependencies: i7-it64*(-1+i8) > 0 -1+it64 >= 0
		
		1+i7-i8-(-1+i8)*(-1+it64) >= 0 [1]: montonic decrease yields (it483+(it483-i8)*(-1+it64)+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0), dependencies: i7-it64*(-1+i8) > 0
		
		1+i7-i8-(-1+i8)*(-1+it64) >= 0 [2]: eventual increase yields (1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+(-2+i8)*(-1+it64)-(-1+i8)*(-1+it64) <= 0)
		
		-1+i8 > 0 [0]: monotonic increase yields -1+i8 > 0, dependencies: i7-it64*(-1+i8) > 0 -1-i7+i8+it64*(-1+i8) > 0
		
		-1+i8 > 0 [1]: montonic decrease yields (-it483+i8 > 0 /\ -1+i8 > 0)
		
		-1-i7+i8+it64*(-1+i8) > 0 [0]: montonic decrease yields (-1-i7+i8+it64*(-1+i8) > 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0), dependencies: -1+it64 >= 0
		
		-1-i7+i8+it64*(-1+i8) > 0 [1]: eventual decrease yields (-1-i7+i8+it64*(-1+i8) > 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)
		
		-1+it64 >= 0 [0]: unchanged
		
		Replacement map: {-6+i1 >= 0 -> -6+i1 >= 0, 6-i1 >= 0 -> 6-i1 >= 0, i7-it64*(-1+i8) > 0 -> i7-it64*(-1+i8) > 0, 1+i7-i8 >= 0 -> 1+i7-i8 >= 0, 1+i7-i8-(-1+i8)*(-1+it64) >= 0 -> 1+i7-i8-(-1+i8)*(-1+it64) >= 0, -1+i8 > 0 -> -1+i8 > 0, -1-i7+i8+it64*(-1+i8) > 0 -> (-1-i7+i8+it64*(-1+i8) > 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0), -1+it64 >= 0 -> -1+it64 >= 0}

	Removed Trivial Updates

	Original rule:
	(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0) /\ i1'=i1, i3'=i3+7*it483+2*it483*it64, i4'=i10, i5'=-it483+i8, i6'=i10+it483-i8, i8'=-it483+i8, i9'=it64*(it483-i8)+i7
	New rule:
	(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0) /\ i3'=i3+7*it483+2*it483*it64, i4'=i10, i5'=-it483+i8, i6'=i10+it483-i8, i8'=-it483+i8, i9'=it64*(it483-i8)+i7

Start location: eval_perfect2_start

Location map:
LoAT_sink -> 0
eval_perfect2_start -> 1
eval_perfect2_bb0_in -> 2
eval_perfect2_0 -> 3
eval_perfect2_1 -> 4
eval_perfect2_bb3_in -> 5
eval_perfect2_bb1_in -> 6
eval_perfect2_bb2_in -> 7
eval_perfect2_bb4_in -> 8
eval_perfect2_stop -> 9
eval_perfect2_bb5_in -> 10
eval_perfect2_bb6_in -> 11
eval_perfect2_9 -> 12
eval_perfect2_10 -> 13
eval_perfect2_11 -> 14
eval_perfect2_12 -> 15

Rules:
   4: (i7 > 0 /\ -4+i1 == 0) /\ i1'=6, i3'=1+i3, i8'=i7, i10'=i7
   5: (-6+i1 == 0 /\ -1+i8 == 0) /\ i1'=7, i3'=1+i3
   6: (-6+i1 == 0 /\ -1+i8 < 0) /\ i1'=8, i3'=1+i3, i5'=-1+i8, i9'=i7
   7: (-6+i1 == 0 /\ -1+i8 > 0) /\ i1'=8, i3'=1+i3, i5'=-1+i8, i9'=i7
  37: (i7 <= 0 /\ -4+i1 == 0) /\ i1'=9, i3'=2+i3
  38: (i10 < 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
  39: (i10 > 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
  40: (i10 == 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
  41: (-8+i1 == 0 /\ -i5+i9 >= 0) /\ i1'=8, i3'=2+i3, i9'=-i5+i9
  42: -1+i1 == 0 /\ i1'=4, i3'=3+i3
  43: (-8+i1 == 0 /\ -i5+i9 < 0) /\ i1'=13, i3'=3+i3, i6'=i10-i5
  44: (-13+i1 == 0 /\ i9 == 0) /\ i1'=6, i3'=3+i3, i4'=i6, i8'=i5, i10'=i6
  45: (-13+i1 == 0 /\ i9 < 0) /\ i1'=6, i3'=3+i3, i4'=i10, i8'=i5
  46: (-13+i1 == 0 /\ i9 > 0) /\ i1'=6, i3'=3+i3, i4'=i10, i8'=i5
  47: (i5 <= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -i5+i9 >= 0) /\ i1'=0
  48: (-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0) /\ i3'=i3+2*it64, i9'=-it64*i5+i9
  49: (-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) == 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0) /\ i3'=7+i3+2*it64, i4'=1+i10-i8, i5'=-1+i8, i6'=1+i10-i8, i8'=-1+i8, i9'=i7-it64*(-1+i8), i10'=1+i10-i8
  50: (-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0) /\ i3'=i3+7*it483+2*it483*it64, i4'=i10, i5'=-it483+i8, i6'=i10+it483-i8, i8'=-it483+i8, i9'=it64*(it483-i8)+i7

Dependency graph:
4 -> 5, 4 -> 7, 4 -> 49, 4 -> 50
5 -> 38, 5 -> 39, 5 -> 40
6 -> 41, 6 -> 43, 6 -> 47, 6 -> 48
7 -> 41, 7 -> 43, 7 -> 47, 7 -> 48
41 -> 41, 41 -> 43, 41 -> 47, 41 -> 48
42 -> 4, 42 -> 37
43 -> 44, 43 -> 45, 43 -> 46
44 -> 5, 44 -> 6, 44 -> 7, 44 -> 49, 44 -> 50
45 -> 5, 45 -> 6, 45 -> 7, 45 -> 49, 45 -> 50
46 -> 5, 46 -> 6, 46 -> 7, 46 -> 49, 46 -> 50
48 -> 41, 48 -> 43, 48 -> 47
49 -> 5, 49 -> 6, 49 -> 7, 49 -> 50
50 -> 5, 50 -> 6, 50 -> 7, 50 -> 49

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{50[T]}
	
Step with 49

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	49[(-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) == 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{50[T]}
	{49[T]}
	
Step with 5

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	49[(-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) == 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0)]
	5[(-6+i1 == 0 /\ -1+i8 == 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{50[T]}
	{49[T]}
	{}
	
Step with 39

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	49[(-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) == 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0)]
	5[(-6+i1 == 0 /\ -1+i8 == 0)]
	39[(i10 > 0 /\ -7+i1 == 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{50[T]}
	{49[T]}
	{38[T]}
	{}
	
Backtrack

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	49[(-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) == 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0)]
	5[(-6+i1 == 0 /\ -1+i8 == 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{50[T]}
	{49[T]}
	{38[T], 39[T]}
	
Backtrack

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	49[(-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) == 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{50[T]}
	{5[T], 49[T]}
	
Step with 7

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	49[(-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) == 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{50[T]}
	{5[T], 6[T], 49[T]}
	{}
	
Step with 48

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	49[(-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) == 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	48[(-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{50[T]}
	{5[T], 6[T], 49[T]}
	{47[T]}
	{48[T]}
	
Step with 41

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	49[(-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) == 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	48[(-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0)]
	41[(-8+i1 == 0 /\ -i5+i9 >= 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{50[T]}
	{5[T], 6[T], 49[T]}
	{47[T]}
	{47[T], 48[T]}
	{}
	
Covered

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	49[(-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) == 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	48[(-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{50[T]}
	{5[T], 6[T], 49[T]}
	{47[T]}
	{41[T], 47[T], 48[T]}
	
Step with 43

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	49[(-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) == 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	48[(-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0)]
	43[(-8+i1 == 0 /\ -i5+i9 < 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{50[T]}
	{5[T], 6[T], 49[T]}
	{47[T]}
	{41[T], 47[T], 48[T]}
	{}
	
Step with 46

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	49[(-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) == 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	48[(-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0)]
	43[(-8+i1 == 0 /\ -i5+i9 < 0)]
	46[(-13+i1 == 0 /\ i9 > 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{50[T]}
	{5[T], 6[T], 49[T]}
	{47[T]}
	{41[T], 47[T], 48[T]}
	{45[T]}
	{}
	
Covered

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	49[(-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) == 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	48[(-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0)]
	43[(-8+i1 == 0 /\ -i5+i9 < 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{50[T]}
	{5[T], 6[T], 49[T]}
	{47[T]}
	{41[T], 47[T], 48[T]}
	{45[T], 46[T]}
	
Step with 44

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	49[(-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) == 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	48[(-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0)]
	43[(-8+i1 == 0 /\ -i5+i9 < 0)]
	44[(-13+i1 == 0 /\ i9 == 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{50[T]}
	{5[T], 6[T], 49[T]}
	{47[T]}
	{41[T], 47[T], 48[T]}
	{45[T], 46[T]}
	{}
	
Covered

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	49[(-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) == 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	48[(-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0)]
	43[(-8+i1 == 0 /\ -i5+i9 < 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{50[T]}
	{5[T], 6[T], 49[T]}
	{47[T]}
	{41[T], 47[T], 48[T]}
	{44[T], 45[T], 46[T]}
	
Backtrack

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	49[(-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) == 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	48[(-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{50[T]}
	{5[T], 6[T], 49[T]}
	{47[T]}
	{41[T], 43[T], 47[T], 48[T]}
	
Backtrack

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	49[(-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) == 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{50[T]}
	{5[T], 6[T], 49[T]}
	{47[T], 48[T]}
	
Step with 41

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	49[(-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) == 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	41[(-8+i1 == 0 /\ -i5+i9 >= 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{50[T]}
	{5[T], 6[T], 49[T]}
	{47[T], 48[T]}
	{}
	
Covered

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	49[(-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) == 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{50[T]}
	{5[T], 6[T], 49[T]}
	{41[T], 47[T], 48[T]}
	
Backtrack

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	49[(-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) == 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{50[T]}
	{5[T], 6[T], 7[T], 49[T]}
	
Step with 50

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	49[(-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) == 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{50[T]}
	{5[T], 6[T], 7[T], 49[T]}
	{50[T]}
	
Step with 49

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	49[(-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) == 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	49[(-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) == 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{50[T]}
	{5[T], 6[T], 7[T], 49[T]}
	{5[T], 50[T]}
	{49[T]}
	
Covered

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	49[(-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) == 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{50[T]}
	{5[T], 6[T], 7[T], 49[T]}
	{5[T], 49[T], 50[T]}
	
Step with 7

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	49[(-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) == 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{50[T]}
	{5[T], 6[T], 7[T], 49[T]}
	{5[T], 6[T], 49[T], 50[T]}
	{}
	
Step with 41

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	49[(-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) == 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	41[(-8+i1 == 0 /\ -i5+i9 >= 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{50[T]}
	{5[T], 6[T], 7[T], 49[T]}
	{5[T], 6[T], 49[T], 50[T]}
	{47[T]}
	{}
	
Covered

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	49[(-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) == 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{50[T]}
	{5[T], 6[T], 7[T], 49[T]}
	{5[T], 6[T], 49[T], 50[T]}
	{41[T], 47[T]}
	
Step with 48

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	49[(-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) == 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	48[(-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{50[T]}
	{5[T], 6[T], 7[T], 49[T]}
	{5[T], 6[T], 49[T], 50[T]}
	{41[T], 43[T], 47[T]}
	{48[T]}
	
Step with 41

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	49[(-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) == 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	48[(-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0)]
	41[(-8+i1 == 0 /\ -i5+i9 >= 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{50[T]}
	{5[T], 6[T], 7[T], 49[T]}
	{5[T], 6[T], 49[T], 50[T]}
	{41[T], 43[T], 47[T]}
	{47[T], 48[T]}
	{}
	
Covered

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	49[(-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) == 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	48[(-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{50[T]}
	{5[T], 6[T], 7[T], 49[T]}
	{5[T], 6[T], 49[T], 50[T]}
	{41[T], 43[T], 47[T]}
	{41[T], 47[T], 48[T]}
	
Step with 43

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	49[(-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) == 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	48[(-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0)]
	43[(-8+i1 == 0 /\ -i5+i9 < 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{50[T]}
	{5[T], 6[T], 7[T], 49[T]}
	{5[T], 6[T], 49[T], 50[T]}
	{41[T], 43[T], 47[T]}
	{41[T], 47[T], 48[T]}
	{}
	
Step with 46

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	49[(-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) == 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	48[(-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0)]
	43[(-8+i1 == 0 /\ -i5+i9 < 0)]
	46[(-13+i1 == 0 /\ i9 > 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{50[T]}
	{5[T], 6[T], 7[T], 49[T]}
	{5[T], 6[T], 49[T], 50[T]}
	{41[T], 43[T], 47[T]}
	{41[T], 47[T], 48[T]}
	{45[T]}
	{}
	
Covered

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	49[(-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) == 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	48[(-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0)]
	43[(-8+i1 == 0 /\ -i5+i9 < 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{50[T]}
	{5[T], 6[T], 7[T], 49[T]}
	{5[T], 6[T], 49[T], 50[T]}
	{41[T], 43[T], 47[T]}
	{41[T], 47[T], 48[T]}
	{45[T], 46[T]}
	
Step with 44

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	49[(-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) == 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	48[(-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0)]
	43[(-8+i1 == 0 /\ -i5+i9 < 0)]
	44[(-13+i1 == 0 /\ i9 == 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{50[T]}
	{5[T], 6[T], 7[T], 49[T]}
	{5[T], 6[T], 49[T], 50[T]}
	{41[T], 43[T], 47[T]}
	{41[T], 47[T], 48[T]}
	{45[T], 46[T]}
	{}
	
Covered

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	49[(-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) == 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	48[(-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0)]
	43[(-8+i1 == 0 /\ -i5+i9 < 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{50[T]}
	{5[T], 6[T], 7[T], 49[T]}
	{5[T], 6[T], 49[T], 50[T]}
	{41[T], 43[T], 47[T]}
	{41[T], 47[T], 48[T]}
	{44[T], 45[T], 46[T]}
	
Backtrack

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	49[(-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) == 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	48[(-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{50[T]}
	{5[T], 6[T], 7[T], 49[T]}
	{5[T], 6[T], 49[T], 50[T]}
	{41[T], 43[T], 47[T]}
	{41[T], 43[T], 47[T], 48[T]}
	
Backtrack

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	49[(-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) == 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{50[T]}
	{5[T], 6[T], 7[T], 49[T]}
	{5[T], 6[T], 49[T], 50[T]}
	{41[T], 43[T], 47[T], 48[T]}
	
Backtrack

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	49[(-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) == 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{50[T]}
	{5[T], 6[T], 7[T], 49[T]}
	{5[T], 6[T], 7[T], 49[T], 50[T]}
	
Backtrack

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	49[(-6+i1 == 0 /\ 1+i7-i8-it64*(-1+i8) < 0 /\ i7-it64*(-1+i8) == 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1+it64 >= 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{50[T]}
	{5[T], 6[T], 7[T], 49[T], 50[T]}
	
Backtrack

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{49[T], 50[T]}
	
Step with 7

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{49[T], 50[T]}
	{}
	
Step with 41

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	41[(-8+i1 == 0 /\ -i5+i9 >= 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{49[T], 50[T]}
	{47[T]}
	{}
	
Covered

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{49[T], 50[T]}
	{41[T], 47[T]}
	
Step with 48

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	48[(-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{49[T], 50[T]}
	{41[T], 47[T]}
	{48[T]}
	
Step with 41

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	48[(-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0)]
	41[(-8+i1 == 0 /\ -i5+i9 >= 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{49[T], 50[T]}
	{41[T], 47[T]}
	{47[T], 48[T]}
	{}
	
Covered

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	48[(-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{49[T], 50[T]}
	{41[T], 47[T]}
	{41[T], 47[T], 48[T]}
	
Step with 43

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	48[(-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0)]
	43[(-8+i1 == 0 /\ -i5+i9 < 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{49[T], 50[T]}
	{41[T], 47[T]}
	{41[T], 47[T], 48[T]}
	{}
	
Step with 46

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	48[(-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0)]
	43[(-8+i1 == 0 /\ -i5+i9 < 0)]
	46[(-13+i1 == 0 /\ i9 > 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{49[T], 50[T]}
	{41[T], 47[T]}
	{41[T], 47[T], 48[T]}
	{}
	{}
	
Covered

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	48[(-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0)]
	43[(-8+i1 == 0 /\ -i5+i9 < 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{49[T], 50[T]}
	{41[T], 47[T]}
	{41[T], 47[T], 48[T]}
	{46[T]}
	
Step with 44

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	48[(-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0)]
	43[(-8+i1 == 0 /\ -i5+i9 < 0)]
	44[(-13+i1 == 0 /\ i9 == 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{49[T], 50[T]}
	{41[T], 47[T]}
	{41[T], 47[T], 48[T]}
	{45[T], 46[T]}
	{}
	
Covered

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	48[(-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0)]
	43[(-8+i1 == 0 /\ -i5+i9 < 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{49[T], 50[T]}
	{41[T], 47[T]}
	{41[T], 47[T], 48[T]}
	{44[T], 45[T], 46[T]}
	
Backtrack

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	48[(-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{49[T], 50[T]}
	{41[T], 47[T]}
	{41[T], 43[T], 47[T], 48[T]}
	
Backtrack

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{49[T], 50[T]}
	{41[T], 47[T], 48[T]}
	
Backtrack

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	50[(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it483 >= 0 /\ i7-it64*(-1+i8) > 0 /\ 1+i7-i8 >= 0 /\ 1+i7-i8-(-1+i8)*(-1+it64) >= 0 /\ -1+i8 > 0 /\ -1-i7+i8+it64*(-1+i8) > 0 /\ -1+it64 >= 0 /\ -it64*(it483-i8)-it483-i7+i8 > 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T]}
	{7[T], 49[T], 50[T]}
	
Backtrack

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T], 50[T]}
	
Step with 7

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T], 50[T]}
	{}
	
Step with 48

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	48[(-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T], 50[T]}
	{47[T]}
	{48[T]}
	
Step with 41

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	48[(-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0)]
	41[(-8+i1 == 0 /\ -i5+i9 >= 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T], 50[T]}
	{47[T]}
	{47[T], 48[T]}
	{}
	
Covered

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	48[(-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T], 50[T]}
	{47[T]}
	{41[T], 47[T], 48[T]}
	
Step with 43

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	48[(-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0)]
	43[(-8+i1 == 0 /\ -i5+i9 < 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T], 50[T]}
	{47[T]}
	{41[T], 47[T], 48[T]}
	{}
	
Step with 44

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	48[(-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0)]
	43[(-8+i1 == 0 /\ -i5+i9 < 0)]
	44[(-13+i1 == 0 /\ i9 == 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T], 50[T]}
	{47[T]}
	{41[T], 47[T], 48[T]}
	{}
	{}
	
Covered

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	48[(-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0)]
	43[(-8+i1 == 0 /\ -i5+i9 < 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T], 50[T]}
	{47[T]}
	{41[T], 47[T], 48[T]}
	{44[T]}
	
Step with 46

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	48[(-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0)]
	43[(-8+i1 == 0 /\ -i5+i9 < 0)]
	46[(-13+i1 == 0 /\ i9 > 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T], 50[T]}
	{47[T]}
	{41[T], 47[T], 48[T]}
	{44[T]}
	{}
	
Covered

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	48[(-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0)]
	43[(-8+i1 == 0 /\ -i5+i9 < 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T], 50[T]}
	{47[T]}
	{41[T], 47[T], 48[T]}
	{44[T], 46[T]}
	
Backtrack

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	48[(-i5*(-1+it64)-i5+i9 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -1+it64 >= 0 /\ -i5+i9 >= 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T], 50[T]}
	{47[T]}
	{41[T], 43[T], 47[T], 48[T]}
	
Backtrack

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T], 50[T]}
	{47[T], 48[T]}
	
Step with 41

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	41[(-8+i1 == 0 /\ -i5+i9 >= 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T], 50[T]}
	{47[T], 48[T]}
	{}
	
Covered

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	7[(-6+i1 == 0 /\ -1+i8 > 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 49[T], 50[T]}
	{41[T], 47[T], 48[T]}
	
Backtrack

	Trace

	42[(-1+i1 == 0)]
	4[(i7 > 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{37[T]}
	{5[T], 7[T], 49[T], 50[T]}
	
Backtrack

	Trace

	42[(-1+i1 == 0)]
	
	Blocked

	{}
	{4[T], 37[T]}
	
Backtrack

	Trace

	Blocked

	{42[T]}
	
Accept

Poly(n^1)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^2))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄, X₅, X₆
  Temp_Vars:  
  Locations:  l0, l1, l10, l11, l12, l13, l14, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l2(X₀, X₁, X₂, X₃, X₄, X₅, X₆)
  t₄: l1(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l4(X₀, X₁, X₂, X₃, X₃, X₅, X₃) :|: 1 ≤ X₃
  t₃: l1(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l5(X₀, X₁, X₂, X₃, X₄, X₅, X₆) :|: X₃ ≤ 0
  t₁₅: l10(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l7(X₀, X₁, X₆-X₁, X₃, X₄, X₅, X₆)
  t₈: l11(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l5(X₀, X₁, X₂, X₃, X₄, X₅, X₆) :|: 1+X₆ ≤ 0
  t₉: l11(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l5(X₀, X₁, X₂, X₃, X₄, X₅, X₆) :|: 1 ≤ X₆
  t₁₀: l11(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l5(X₀, X₁, X₂, X₃, X₄, X₅, X₆) :|: 0 ≤ X₆ ∧ X₆ ≤ 0
  t₁₃: l12(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l10(X₀, X₁, X₂, X₃, X₄, X₅, X₆) :|: 1+X₅ ≤ X₁
  t₁₂: l12(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l14(X₀, X₁, X₂, X₃, X₄, X₅, X₆) :|: X₁ ≤ X₅
  t₁₄: l14(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l12(X₀, X₁, X₂, X₃, X₄, X₅-X₁, X₆)
  t₁: l2(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l3(X₀, X₁, X₂, X₃, X₄, X₅, X₆)
  t₂: l3(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l1(X₀, X₁, X₂, X₃, X₄, X₅, X₆)
  t₅: l4(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l11(X₀, X₁, X₂, X₃, X₄, X₅, X₆) :|: X₄ ≤ 1 ∧ 1 ≤ X₄
  t₆: l4(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l12(X₀, X₄-1, X₂, X₃, X₄, X₃, X₆) :|: X₄ ≤ 0
  t₇: l4(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l12(X₀, X₄-1, X₂, X₃, X₄, X₃, X₆) :|: 2 ≤ X₄
  t₁₁: l5(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l13(X₀, X₁, X₂, X₃, X₄, X₅, X₆)
  t₂₀: l6(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l9(X₀, X₁, X₂, X₃, X₄, X₅, X₆)
  t₁₆: l7(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l8(X₀, X₁, X₂, X₃, X₄, X₅, X₆)
  t₁₇: l8(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l6(X₂, X₁, X₂, X₃, X₄, X₅, X₆) :|: 0 ≤ X₅ ∧ X₅ ≤ 0
  t₁₈: l8(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l6(X₆, X₁, X₂, X₃, X₄, X₅, X₆) :|: 1+X₅ ≤ 0
  t₁₉: l8(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l6(X₆, X₁, X₂, X₃, X₄, X₅, X₆) :|: 1 ≤ X₅
  t₂₁: l9(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l4(X₀, X₁, X₂, X₃, X₁, X₅, X₀)


Preprocessing
  Found invariant X₆ ≤ X₃ ∧ X₄ ≤ 1 ∧ X₄ ≤ X₃ ∧ 1 ≤ X₄ ∧ 2 ≤ X₃+X₄ ∧ 1 ≤ X₃ for location l11


  Found invariant X₆ ≤ X₃ ∧ 1+X₂ ≤ X₆ ∧ X₀ ≤ X₆ ∧ 2+X₅ ≤ X₄ ∧ 2+X₅ ≤ X₃ ∧ 1+X₅ ≤ X₁ ∧ 2 ≤ X₄+X₅ ∧ 2 ≤ X₃+X₅ ∧ 1 ≤ X₁+X₅ ∧ X₄ ≤ X₃ ∧ X₄ ≤ 1+X₁ ∧ 2 ≤ X₄ ∧ 4 ≤ X₃+X₄ ∧ 3 ≤ X₁+X₄ ∧ 1+X₁ ≤ X₄ ∧ 2 ≤ X₃ ∧ 1+X₂ ≤ X₃ ∧ 3 ≤ X₁+X₃ ∧ 1+X₁ ≤ X₃ ∧ X₀ ≤ X₃ ∧ X₂ ≤ X₀ ∧ 1 ≤ X₁ for location l6


  Found invariant X₆ ≤ X₃ ∧ X₅ ≤ X₃ ∧ 2 ≤ X₄+X₅ ∧ 2 ≤ X₃+X₅ ∧ 1 ≤ X₁+X₅ ∧ X₄ ≤ X₃ ∧ X₄ ≤ 1+X₁ ∧ 2 ≤ X₄ ∧ 4 ≤ X₃+X₄ ∧ 3 ≤ X₁+X₄ ∧ 1+X₁ ≤ X₄ ∧ 2 ≤ X₃ ∧ 3 ≤ X₁+X₃ ∧ 1+X₁ ≤ X₃ ∧ 1 ≤ X₁ for location l12


  Found invariant X₆ ≤ X₃ ∧ 1+X₂ ≤ X₆ ∧ 2+X₅ ≤ X₄ ∧ 2+X₅ ≤ X₃ ∧ 1+X₅ ≤ X₁ ∧ 2 ≤ X₄+X₅ ∧ 2 ≤ X₃+X₅ ∧ 1 ≤ X₁+X₅ ∧ X₄ ≤ X₃ ∧ X₄ ≤ 1+X₁ ∧ 2 ≤ X₄ ∧ 4 ≤ X₃+X₄ ∧ 3 ≤ X₁+X₄ ∧ 1+X₁ ≤ X₄ ∧ 2 ≤ X₃ ∧ 1+X₂ ≤ X₃ ∧ 3 ≤ X₁+X₃ ∧ 1+X₁ ≤ X₃ ∧ 1 ≤ X₁ for location l7


  Found invariant X₆ ≤ X₃ ∧ 1+X₂ ≤ X₆ ∧ 2+X₅ ≤ X₄ ∧ 2+X₅ ≤ X₃ ∧ 1+X₅ ≤ X₁ ∧ 2 ≤ X₄+X₅ ∧ 2 ≤ X₃+X₅ ∧ 1 ≤ X₁+X₅ ∧ X₄ ≤ X₃ ∧ X₄ ≤ 1+X₁ ∧ 2 ≤ X₄ ∧ 4 ≤ X₃+X₄ ∧ 3 ≤ X₁+X₄ ∧ 1+X₁ ≤ X₄ ∧ 2 ≤ X₃ ∧ 1+X₂ ≤ X₃ ∧ 3 ≤ X₁+X₃ ∧ 1+X₁ ≤ X₃ ∧ 1 ≤ X₁ for location l8


  Found invariant X₆ ≤ X₃ ∧ 2+X₅ ≤ X₄ ∧ 2+X₅ ≤ X₃ ∧ 1+X₅ ≤ X₁ ∧ 2 ≤ X₄+X₅ ∧ 2 ≤ X₃+X₅ ∧ 1 ≤ X₁+X₅ ∧ X₄ ≤ X₃ ∧ X₄ ≤ 1+X₁ ∧ 2 ≤ X₄ ∧ 4 ≤ X₃+X₄ ∧ 3 ≤ X₁+X₄ ∧ 1+X₁ ≤ X₄ ∧ 2 ≤ X₃ ∧ 3 ≤ X₁+X₃ ∧ 1+X₁ ≤ X₃ ∧ 1 ≤ X₁ for location l10


  Found invariant X₆ ≤ X₃ ∧ X₄ ≤ X₃ ∧ 1 ≤ X₄ ∧ 2 ≤ X₃+X₄ ∧ 1 ≤ X₃ for location l4


  Found invariant X₆ ≤ X₃ ∧ 1+X₂ ≤ X₆ ∧ X₀ ≤ X₆ ∧ 2+X₅ ≤ X₄ ∧ 2+X₅ ≤ X₃ ∧ 1+X₅ ≤ X₁ ∧ 2 ≤ X₄+X₅ ∧ 2 ≤ X₃+X₅ ∧ 1 ≤ X₁+X₅ ∧ X₄ ≤ X₃ ∧ X₄ ≤ 1+X₁ ∧ 2 ≤ X₄ ∧ 4 ≤ X₃+X₄ ∧ 3 ≤ X₁+X₄ ∧ 1+X₁ ≤ X₄ ∧ 2 ≤ X₃ ∧ 1+X₂ ≤ X₃ ∧ 3 ≤ X₁+X₃ ∧ 1+X₁ ≤ X₃ ∧ X₀ ≤ X₃ ∧ X₂ ≤ X₀ ∧ 1 ≤ X₁ for location l9


  Found invariant X₆ ≤ X₃ ∧ X₅ ≤ X₃ ∧ 1 ≤ X₅ ∧ 3 ≤ X₄+X₅ ∧ X₄ ≤ 1+X₅ ∧ 3 ≤ X₃+X₅ ∧ 2 ≤ X₁+X₅ ∧ X₁ ≤ X₅ ∧ X₄ ≤ X₃ ∧ X₄ ≤ 1+X₁ ∧ 2 ≤ X₄ ∧ 4 ≤ X₃+X₄ ∧ 3 ≤ X₁+X₄ ∧ 1+X₁ ≤ X₄ ∧ 2 ≤ X₃ ∧ 3 ≤ X₁+X₃ ∧ 1+X₁ ≤ X₃ ∧ 1 ≤ X₁ for location l14


  Cut unsatisfiable transition [t₆: l4→l12]


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄, X₅, X₆
  Temp_Vars:  
  Locations:  l0, l1, l10, l11, l12, l13, l14, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l2(X₀, X₁, X₂, X₃, X₄, X₅, X₆)
  t₄: l1(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l4(X₀, X₁, X₂, X₃, X₃, X₅, X₃) :|: 1 ≤ X₃
  t₃: l1(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l5(X₀, X₁, X₂, X₃, X₄, X₅, X₆) :|: X₃ ≤ 0
  t₁₅: l10(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l7(X₀, X₁, X₆-X₁, X₃, X₄, X₅, X₆) :|: X₄ ≤ 1+X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₅ ∧ 1+X₅ ≤ X₁ ∧ 1+X₁ ≤ X₃ ∧ 1+X₁ ≤ X₄ ∧ 2 ≤ X₃ ∧ 2 ≤ X₃+X₅ ∧ 2+X₅ ≤ X₃ ∧ 2 ≤ X₄ ∧ 2 ≤ X₄+X₅ ∧ 2+X₅ ≤ X₄ ∧ 3 ≤ X₁+X₃ ∧ 3 ≤ X₁+X₄ ∧ 4 ≤ X₃+X₄ ∧ X₄ ≤ X₃ ∧ X₆ ≤ X₃
  t₈: l11(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l5(X₀, X₁, X₂, X₃, X₄, X₅, X₆) :|: 1+X₆ ≤ 0 ∧ X₄ ≤ 1 ∧ 1 ≤ X₃ ∧ 1 ≤ X₄ ∧ 2 ≤ X₃+X₄ ∧ X₄ ≤ X₃ ∧ X₆ ≤ X₃
  t₉: l11(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l5(X₀, X₁, X₂, X₃, X₄, X₅, X₆) :|: 1 ≤ X₆ ∧ X₄ ≤ 1 ∧ 1 ≤ X₃ ∧ 1 ≤ X₄ ∧ 2 ≤ X₃+X₄ ∧ X₄ ≤ X₃ ∧ X₆ ≤ X₃
  t₁₀: l11(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l5(X₀, X₁, X₂, X₃, X₄, X₅, X₆) :|: 0 ≤ X₆ ∧ X₆ ≤ 0 ∧ X₄ ≤ 1 ∧ 1 ≤ X₃ ∧ 1 ≤ X₄ ∧ 2 ≤ X₃+X₄ ∧ X₄ ≤ X₃ ∧ X₆ ≤ X₃
  t₁₃: l12(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l10(X₀, X₁, X₂, X₃, X₄, X₅, X₆) :|: 1+X₅ ≤ X₁ ∧ X₄ ≤ 1+X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₅ ∧ 1+X₁ ≤ X₃ ∧ 1+X₁ ≤ X₄ ∧ 2 ≤ X₃ ∧ 2 ≤ X₃+X₅ ∧ 2 ≤ X₄ ∧ 2 ≤ X₄+X₅ ∧ 3 ≤ X₁+X₃ ∧ 3 ≤ X₁+X₄ ∧ 4 ≤ X₃+X₄ ∧ X₄ ≤ X₃ ∧ X₅ ≤ X₃ ∧ X₆ ≤ X₃
  t₁₂: l12(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l14(X₀, X₁, X₂, X₃, X₄, X₅, X₆) :|: X₁ ≤ X₅ ∧ X₄ ≤ 1+X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₅ ∧ 1+X₁ ≤ X₃ ∧ 1+X₁ ≤ X₄ ∧ 2 ≤ X₃ ∧ 2 ≤ X₃+X₅ ∧ 2 ≤ X₄ ∧ 2 ≤ X₄+X₅ ∧ 3 ≤ X₁+X₃ ∧ 3 ≤ X₁+X₄ ∧ 4 ≤ X₃+X₄ ∧ X₄ ≤ X₃ ∧ X₅ ≤ X₃ ∧ X₆ ≤ X₃
  t₁₄: l14(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l12(X₀, X₁, X₂, X₃, X₄, X₅-X₁, X₆) :|: X₄ ≤ 1+X₁ ∧ X₄ ≤ 1+X₅ ∧ 1 ≤ X₁ ∧ 1+X₁ ≤ X₃ ∧ 1+X₁ ≤ X₄ ∧ 1 ≤ X₅ ∧ 2 ≤ X₁+X₅ ∧ 2 ≤ X₃ ∧ 2 ≤ X₄ ∧ 3 ≤ X₁+X₃ ∧ 3 ≤ X₁+X₄ ∧ 3 ≤ X₃+X₅ ∧ 3 ≤ X₄+X₅ ∧ 4 ≤ X₃+X₄ ∧ X₁ ≤ X₅ ∧ X₄ ≤ X₃ ∧ X₅ ≤ X₃ ∧ X₆ ≤ X₃
  t₁: l2(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l3(X₀, X₁, X₂, X₃, X₄, X₅, X₆)
  t₂: l3(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l1(X₀, X₁, X₂, X₃, X₄, X₅, X₆)
  t₅: l4(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l11(X₀, X₁, X₂, X₃, X₄, X₅, X₆) :|: X₄ ≤ 1 ∧ 1 ≤ X₄ ∧ 1 ≤ X₃ ∧ 2 ≤ X₃+X₄ ∧ X₄ ≤ X₃ ∧ X₆ ≤ X₃
  t₇: l4(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l12(X₀, X₄-1, X₂, X₃, X₄, X₃, X₆) :|: 2 ≤ X₄ ∧ 1 ≤ X₃ ∧ 1 ≤ X₄ ∧ 2 ≤ X₃+X₄ ∧ X₄ ≤ X₃ ∧ X₆ ≤ X₃
  t₁₁: l5(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l13(X₀, X₁, X₂, X₃, X₄, X₅, X₆)
  t₂₀: l6(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l9(X₀, X₁, X₂, X₃, X₄, X₅, X₆) :|: X₄ ≤ 1+X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₅ ∧ 1+X₅ ≤ X₁ ∧ 1+X₁ ≤ X₃ ∧ 1+X₁ ≤ X₄ ∧ 1+X₂ ≤ X₃ ∧ 1+X₂ ≤ X₆ ∧ 2 ≤ X₃ ∧ 2 ≤ X₃+X₅ ∧ 2+X₅ ≤ X₃ ∧ 2 ≤ X₄ ∧ 2 ≤ X₄+X₅ ∧ 2+X₅ ≤ X₄ ∧ 3 ≤ X₁+X₃ ∧ 3 ≤ X₁+X₄ ∧ 4 ≤ X₃+X₄ ∧ X₂ ≤ X₀ ∧ X₀ ≤ X₃ ∧ X₀ ≤ X₆ ∧ X₄ ≤ X₃ ∧ X₆ ≤ X₃
  t₁₆: l7(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l8(X₀, X₁, X₂, X₃, X₄, X₅, X₆) :|: X₄ ≤ 1+X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₅ ∧ 1+X₅ ≤ X₁ ∧ 1+X₁ ≤ X₃ ∧ 1+X₁ ≤ X₄ ∧ 1+X₂ ≤ X₃ ∧ 1+X₂ ≤ X₆ ∧ 2 ≤ X₃ ∧ 2 ≤ X₃+X₅ ∧ 2+X₅ ≤ X₃ ∧ 2 ≤ X₄ ∧ 2 ≤ X₄+X₅ ∧ 2+X₅ ≤ X₄ ∧ 3 ≤ X₁+X₃ ∧ 3 ≤ X₁+X₄ ∧ 4 ≤ X₃+X₄ ∧ X₄ ≤ X₃ ∧ X₆ ≤ X₃
  t₁₇: l8(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l6(X₂, X₁, X₂, X₃, X₄, X₅, X₆) :|: 0 ≤ X₅ ∧ X₅ ≤ 0 ∧ X₄ ≤ 1+X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₅ ∧ 1+X₅ ≤ X₁ ∧ 1+X₁ ≤ X₃ ∧ 1+X₁ ≤ X₄ ∧ 1+X₂ ≤ X₃ ∧ 1+X₂ ≤ X₆ ∧ 2 ≤ X₃ ∧ 2 ≤ X₃+X₅ ∧ 2+X₅ ≤ X₃ ∧ 2 ≤ X₄ ∧ 2 ≤ X₄+X₅ ∧ 2+X₅ ≤ X₄ ∧ 3 ≤ X₁+X₃ ∧ 3 ≤ X₁+X₄ ∧ 4 ≤ X₃+X₄ ∧ X₄ ≤ X₃ ∧ X₆ ≤ X₃
  t₁₈: l8(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l6(X₆, X₁, X₂, X₃, X₄, X₅, X₆) :|: 1+X₅ ≤ 0 ∧ X₄ ≤ 1+X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₅ ∧ 1+X₅ ≤ X₁ ∧ 1+X₁ ≤ X₃ ∧ 1+X₁ ≤ X₄ ∧ 1+X₂ ≤ X₃ ∧ 1+X₂ ≤ X₆ ∧ 2 ≤ X₃ ∧ 2 ≤ X₃+X₅ ∧ 2+X₅ ≤ X₃ ∧ 2 ≤ X₄ ∧ 2 ≤ X₄+X₅ ∧ 2+X₅ ≤ X₄ ∧ 3 ≤ X₁+X₃ ∧ 3 ≤ X₁+X₄ ∧ 4 ≤ X₃+X₄ ∧ X₄ ≤ X₃ ∧ X₆ ≤ X₃
  t₁₉: l8(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l6(X₆, X₁, X₂, X₃, X₄, X₅, X₆) :|: 1 ≤ X₅ ∧ X₄ ≤ 1+X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₅ ∧ 1+X₅ ≤ X₁ ∧ 1+X₁ ≤ X₃ ∧ 1+X₁ ≤ X₄ ∧ 1+X₂ ≤ X₃ ∧ 1+X₂ ≤ X₆ ∧ 2 ≤ X₃ ∧ 2 ≤ X₃+X₅ ∧ 2+X₅ ≤ X₃ ∧ 2 ≤ X₄ ∧ 2 ≤ X₄+X₅ ∧ 2+X₅ ≤ X₄ ∧ 3 ≤ X₁+X₃ ∧ 3 ≤ X₁+X₄ ∧ 4 ≤ X₃+X₄ ∧ X₄ ≤ X₃ ∧ X₆ ≤ X₃
  t₂₁: l9(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l4(X₀, X₁, X₂, X₃, X₁, X₅, X₀) :|: X₄ ≤ 1+X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₅ ∧ 1+X₅ ≤ X₁ ∧ 1+X₁ ≤ X₃ ∧ 1+X₁ ≤ X₄ ∧ 1+X₂ ≤ X₃ ∧ 1+X₂ ≤ X₆ ∧ 2 ≤ X₃ ∧ 2 ≤ X₃+X₅ ∧ 2+X₅ ≤ X₃ ∧ 2 ≤ X₄ ∧ 2 ≤ X₄+X₅ ∧ 2+X₅ ≤ X₄ ∧ 3 ≤ X₁+X₃ ∧ 3 ≤ X₁+X₄ ∧ 4 ≤ X₃+X₄ ∧ X₂ ≤ X₀ ∧ X₀ ≤ X₃ ∧ X₀ ≤ X₆ ∧ X₄ ≤ X₃ ∧ X₆ ≤ X₃


MPRF for transition t₇: l4(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l12(X₀, X₄-1, X₂, X₃, X₄, X₃, X₆) :|: 2 ≤ X₄ ∧ 1 ≤ X₃ ∧ 1 ≤ X₄ ∧ 2 ≤ X₃+X₄ ∧ X₄ ≤ X₃ ∧ X₆ ≤ X₃ of depth 1:
  new bound:
    2⋅X₃+1 {O(n)}

  MPRF:
    • l10: [X₃+X₄-2]
    • l12: [X₁+X₃-1]
    • l14: [X₁+X₃-1]
    • l4: [X₃+X₄-1]
    • l6: [X₁+X₃-1]
    • l7: [X₃+X₄-2]
    • l8: [X₁+X₃-1]
    • l9: [X₁+X₃-1]




MPRF for transition t₁₃: l12(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l10(X₀, X₁, X₂, X₃, X₄, X₅, X₆) :|: 1+X₅ ≤ X₁ ∧ X₄ ≤ 1+X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₅ ∧ 1+X₁ ≤ X₃ ∧ 1+X₁ ≤ X₄ ∧ 2 ≤ X₃ ∧ 2 ≤ X₃+X₅ ∧ 2 ≤ X₄ ∧ 2 ≤ X₄+X₅ ∧ 3 ≤ X₁+X₃ ∧ 3 ≤ X₁+X₄ ∧ 4 ≤ X₃+X₄ ∧ X₄ ≤ X₃ ∧ X₅ ≤ X₃ ∧ X₆ ≤ X₃ of depth 1:
  new bound:
    2⋅X₃+3 {O(n)}

  MPRF:
    • l10: [X₁+X₃-3]
    • l12: [X₃+X₄-3]
    • l14: [X₃+X₄-3]
    • l4: [X₃+X₄-3]
    • l6: [X₁+X₃-3]
    • l7: [X₁+X₃-3]
    • l8: [X₁+X₃-3]
    • l9: [4⋅X₁+X₃-3⋅X₄]




MPRF for transition t₁₅: l10(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l7(X₀, X₁, X₆-X₁, X₃, X₄, X₅, X₆) :|: X₄ ≤ 1+X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₅ ∧ 1+X₅ ≤ X₁ ∧ 1+X₁ ≤ X₃ ∧ 1+X₁ ≤ X₄ ∧ 2 ≤ X₃ ∧ 2 ≤ X₃+X₅ ∧ 2+X₅ ≤ X₃ ∧ 2 ≤ X₄ ∧ 2 ≤ X₄+X₅ ∧ 2+X₅ ≤ X₄ ∧ 3 ≤ X₁+X₃ ∧ 3 ≤ X₁+X₄ ∧ 4 ≤ X₃+X₄ ∧ X₄ ≤ X₃ ∧ X₆ ≤ X₃ of depth 1:
  new bound:
    2⋅X₃ {O(n)}

  MPRF:
    • l10: [X₃+X₄]
    • l12: [X₃+X₄]
    • l14: [X₃+X₄]
    • l4: [X₃+X₄]
    • l6: [X₃+X₄-1]
    • l7: [X₃+X₄-1]
    • l8: [X₃+X₄-1]
    • l9: [X₃+X₄-1]




MPRF for transition t₁₆: l7(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l8(X₀, X₁, X₂, X₃, X₄, X₅, X₆) :|: X₄ ≤ 1+X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₅ ∧ 1+X₅ ≤ X₁ ∧ 1+X₁ ≤ X₃ ∧ 1+X₁ ≤ X₄ ∧ 1+X₂ ≤ X₃ ∧ 1+X₂ ≤ X₆ ∧ 2 ≤ X₃ ∧ 2 ≤ X₃+X₅ ∧ 2+X₅ ≤ X₃ ∧ 2 ≤ X₄ ∧ 2 ≤ X₄+X₅ ∧ 2+X₅ ≤ X₄ ∧ 3 ≤ X₁+X₃ ∧ 3 ≤ X₁+X₄ ∧ 4 ≤ X₃+X₄ ∧ X₄ ≤ X₃ ∧ X₆ ≤ X₃ of depth 1:
  new bound:
    X₃+1 {O(n)}

  MPRF:
    • l10: [X₄-1]
    • l12: [X₄-1]
    • l14: [X₁]
    • l4: [X₄-1]
    • l6: [X₁-1]
    • l7: [X₄-1]
    • l8: [X₄-2]
    • l9: [X₁-1]




MPRF for transition t₁₇: l8(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l6(X₂, X₁, X₂, X₃, X₄, X₅, X₆) :|: 0 ≤ X₅ ∧ X₅ ≤ 0 ∧ X₄ ≤ 1+X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₅ ∧ 1+X₅ ≤ X₁ ∧ 1+X₁ ≤ X₃ ∧ 1+X₁ ≤ X₄ ∧ 1+X₂ ≤ X₃ ∧ 1+X₂ ≤ X₆ ∧ 2 ≤ X₃ ∧ 2 ≤ X₃+X₅ ∧ 2+X₅ ≤ X₃ ∧ 2 ≤ X₄ ∧ 2 ≤ X₄+X₅ ∧ 2+X₅ ≤ X₄ ∧ 3 ≤ X₁+X₃ ∧ 3 ≤ X₁+X₄ ∧ 4 ≤ X₃+X₄ ∧ X₄ ≤ X₃ ∧ X₆ ≤ X₃ of depth 1:
  new bound:
    X₃+1 {O(n)}

  MPRF:
    • l10: [2+X₁]
    • l12: [2+X₁]
    • l14: [1+X₄]
    • l4: [1+X₄]
    • l6: [1+X₁]
    • l7: [1+X₄]
    • l8: [2+X₁]
    • l9: [1+X₁]




MPRF for transition t₁₈: l8(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l6(X₆, X₁, X₂, X₃, X₄, X₅, X₆) :|: 1+X₅ ≤ 0 ∧ X₄ ≤ 1+X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₅ ∧ 1+X₅ ≤ X₁ ∧ 1+X₁ ≤ X₃ ∧ 1+X₁ ≤ X₄ ∧ 1+X₂ ≤ X₃ ∧ 1+X₂ ≤ X₆ ∧ 2 ≤ X₃ ∧ 2 ≤ X₃+X₅ ∧ 2+X₅ ≤ X₃ ∧ 2 ≤ X₄ ∧ 2 ≤ X₄+X₅ ∧ 2+X₅ ≤ X₄ ∧ 3 ≤ X₁+X₃ ∧ 3 ≤ X₁+X₄ ∧ 4 ≤ X₃+X₄ ∧ X₄ ≤ X₃ ∧ X₆ ≤ X₃ of depth 1:
  new bound:
    X₃ {O(n)}

  MPRF:
    • l10: [1+X₁]
    • l12: [1+X₁]
    • l14: [1+X₁]
    • l4: [X₄]
    • l6: [X₁]
    • l7: [1+X₁]
    • l8: [1+X₁]
    • l9: [X₁]




MPRF for transition t₁₉: l8(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l6(X₆, X₁, X₂, X₃, X₄, X₅, X₆) :|: 1 ≤ X₅ ∧ X₄ ≤ 1+X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₅ ∧ 1+X₅ ≤ X₁ ∧ 1+X₁ ≤ X₃ ∧ 1+X₁ ≤ X₄ ∧ 1+X₂ ≤ X₃ ∧ 1+X₂ ≤ X₆ ∧ 2 ≤ X₃ ∧ 2 ≤ X₃+X₅ ∧ 2+X₅ ≤ X₃ ∧ 2 ≤ X₄ ∧ 2 ≤ X₄+X₅ ∧ 2+X₅ ≤ X₄ ∧ 3 ≤ X₁+X₃ ∧ 3 ≤ X₁+X₄ ∧ 4 ≤ X₃+X₄ ∧ X₄ ≤ X₃ ∧ X₆ ≤ X₃ of depth 1:
  new bound:
    X₃+1 {O(n)}

  MPRF:
    • l10: [X₁]
    • l12: [X₁]
    • l14: [X₁]
    • l4: [X₄-1]
    • l6: [X₁-1]
    • l7: [X₁]
    • l8: [X₁]
    • l9: [X₁-1]




MPRF for transition t₂₀: l6(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l9(X₀, X₁, X₂, X₃, X₄, X₅, X₆) :|: X₄ ≤ 1+X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₅ ∧ 1+X₅ ≤ X₁ ∧ 1+X₁ ≤ X₃ ∧ 1+X₁ ≤ X₄ ∧ 1+X₂ ≤ X₃ ∧ 1+X₂ ≤ X₆ ∧ 2 ≤ X₃ ∧ 2 ≤ X₃+X₅ ∧ 2+X₅ ≤ X₃ ∧ 2 ≤ X₄ ∧ 2 ≤ X₄+X₅ ∧ 2+X₅ ≤ X₄ ∧ 3 ≤ X₁+X₃ ∧ 3 ≤ X₁+X₄ ∧ 4 ≤ X₃+X₄ ∧ X₂ ≤ X₀ ∧ X₀ ≤ X₃ ∧ X₀ ≤ X₆ ∧ X₄ ≤ X₃ ∧ X₆ ≤ X₃ of depth 1:
  new bound:
    X₃+1 {O(n)}

  MPRF:
    • l10: [2⋅X₄-X₁]
    • l12: [1+X₄]
    • l14: [1+X₄]
    • l4: [1+X₄]
    • l6: [2+X₁]
    • l7: [2⋅X₄-X₁]
    • l8: [1+X₄]
    • l9: [1+X₁]




MPRF for transition t₂₁: l9(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l4(X₀, X₁, X₂, X₃, X₁, X₅, X₀) :|: X₄ ≤ 1+X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₅ ∧ 1+X₅ ≤ X₁ ∧ 1+X₁ ≤ X₃ ∧ 1+X₁ ≤ X₄ ∧ 1+X₂ ≤ X₃ ∧ 1+X₂ ≤ X₆ ∧ 2 ≤ X₃ ∧ 2 ≤ X₃+X₅ ∧ 2+X₅ ≤ X₃ ∧ 2 ≤ X₄ ∧ 2 ≤ X₄+X₅ ∧ 2+X₅ ≤ X₄ ∧ 3 ≤ X₁+X₃ ∧ 3 ≤ X₁+X₄ ∧ 4 ≤ X₃+X₄ ∧ X₂ ≤ X₀ ∧ X₀ ≤ X₃ ∧ X₀ ≤ X₆ ∧ X₄ ≤ X₃ ∧ X₆ ≤ X₃ of depth 1:
  new bound:
    X₃+1 {O(n)}

  MPRF:
    • l10: [X₄-1]
    • l12: [X₄-1]
    • l14: [X₄-1]
    • l4: [X₄-1]
    • l6: [X₄-1]
    • l7: [X₁]
    • l8: [X₁]
    • l9: [X₄-1]




MPRF for transition t₁₂: l12(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l14(X₀, X₁, X₂, X₃, X₄, X₅, X₆) :|: X₁ ≤ X₅ ∧ X₄ ≤ 1+X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₅ ∧ 1+X₁ ≤ X₃ ∧ 1+X₁ ≤ X₄ ∧ 2 ≤ X₃ ∧ 2 ≤ X₃+X₅ ∧ 2 ≤ X₄ ∧ 2 ≤ X₄+X₅ ∧ 3 ≤ X₁+X₃ ∧ 3 ≤ X₁+X₄ ∧ 4 ≤ X₃+X₄ ∧ X₄ ≤ X₃ ∧ X₅ ≤ X₃ ∧ X₆ ≤ X₃ of depth 1:
  new bound:
    2⋅X₃^2+4⋅X₃ {O(n^2)}

  MPRF:
    • l10: [X₃+X₅]
    • l12: [X₃+X₅]
    • l14: [X₃+X₄+X₅-2-X₁]
    • l4: [2⋅X₃]
    • l6: [X₃+X₅]
    • l7: [X₃+X₅]
    • l8: [X₃+X₅]
    • l9: [X₃+X₅]




MPRF for transition t₁₄: l14(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l12(X₀, X₁, X₂, X₃, X₄, X₅-X₁, X₆) :|: X₄ ≤ 1+X₁ ∧ X₄ ≤ 1+X₅ ∧ 1 ≤ X₁ ∧ 1+X₁ ≤ X₃ ∧ 1+X₁ ≤ X₄ ∧ 1 ≤ X₅ ∧ 2 ≤ X₁+X₅ ∧ 2 ≤ X₃ ∧ 2 ≤ X₄ ∧ 3 ≤ X₁+X₃ ∧ 3 ≤ X₁+X₄ ∧ 3 ≤ X₃+X₅ ∧ 3 ≤ X₄+X₅ ∧ 4 ≤ X₃+X₄ ∧ X₁ ≤ X₅ ∧ X₄ ≤ X₃ ∧ X₅ ≤ X₃ ∧ X₆ ≤ X₃ of depth 1:
  new bound:
    2⋅X₃^2+4⋅X₃ {O(n^2)}

  MPRF:
    • l10: [X₁+X₅-1]
    • l12: [X₁+X₅-1]
    • l14: [X₅]
    • l4: [X₃+X₄]
    • l6: [X₁+X₅-1]
    • l7: [X₁+X₅-1]
    • l8: [X₁+X₅-1]
    • l9: [X₁+X₅-1]




  Cut unsatisfiable transition [t₁₃: l12→l10; t₁₇₆₇: l12→l10]


  Found invariant X₆ ≤ X₃ ∧ 1+X₅ ≤ X₃ ∧ 2 ≤ X₄+X₅ ∧ 2 ≤ X₃+X₅ ∧ 1 ≤ X₁+X₅ ∧ X₄ ≤ X₃ ∧ X₄ ≤ 1+X₁ ∧ 2 ≤ X₄ ∧ 4 ≤ X₃+X₄ ∧ 3 ≤ X₁+X₄ ∧ 1+X₁ ≤ X₄ ∧ 2 ≤ X₃ ∧ 3 ≤ X₁+X₃ ∧ 1+X₁ ≤ X₃ ∧ 1 ≤ X₁ for location l12_v1


  Found invariant X₆ ≤ X₃ ∧ 1+X₂ ≤ X₆ ∧ X₀ ≤ X₆ ∧ 2+X₅ ≤ X₄ ∧ 2+X₅ ≤ X₃ ∧ 1+X₅ ≤ X₁ ∧ 0 ≤ X₅ ∧ 2 ≤ X₄+X₅ ∧ 2 ≤ X₃+X₅ ∧ 1 ≤ X₁+X₅ ∧ X₄ ≤ X₃ ∧ X₄ ≤ 1+X₁ ∧ 2 ≤ X₄ ∧ 4 ≤ X₃+X₄ ∧ 3 ≤ X₁+X₄ ∧ 1+X₁ ≤ X₄ ∧ 2 ≤ X₃ ∧ 1+X₂ ≤ X₃ ∧ 3 ≤ X₁+X₃ ∧ 1+X₁ ≤ X₃ ∧ X₀ ≤ X₃ ∧ X₂ ≤ X₀ ∧ 1 ≤ X₁ for location l6


  Found invariant X₆ ≤ X₅ ∧ X₆ ≤ X₃ ∧ X₅ ≤ X₃ ∧ 2 ≤ X₅ ∧ 4 ≤ X₄+X₅ ∧ X₄ ≤ X₅ ∧ 4 ≤ X₃+X₅ ∧ X₃ ≤ X₅ ∧ 3 ≤ X₁+X₅ ∧ 1+X₁ ≤ X₅ ∧ X₄ ≤ X₃ ∧ X₄ ≤ 1+X₁ ∧ 2 ≤ X₄ ∧ 4 ≤ X₃+X₄ ∧ 3 ≤ X₁+X₄ ∧ 1+X₁ ≤ X₄ ∧ 2 ≤ X₃ ∧ 3 ≤ X₁+X₃ ∧ 1+X₁ ≤ X₃ ∧ 1 ≤ X₁ for location l12


  Found invariant X₆ ≤ X₃ ∧ 2+X₅ ≤ X₄ ∧ 2+X₅ ≤ X₃ ∧ 1+X₅ ≤ X₁ ∧ 0 ≤ X₅ ∧ 2 ≤ X₄+X₅ ∧ 2 ≤ X₃+X₅ ∧ 1 ≤ X₁+X₅ ∧ X₄ ≤ X₃ ∧ X₄ ≤ 1+X₁ ∧ 2 ≤ X₄ ∧ 4 ≤ X₃+X₄ ∧ 3 ≤ X₁+X₄ ∧ 1+X₁ ≤ X₄ ∧ 2 ≤ X₃ ∧ 3 ≤ X₁+X₃ ∧ 1+X₁ ≤ X₃ ∧ 1 ≤ X₁ for location l10


  Found invariant X₆ ≤ X₅ ∧ X₆ ≤ X₃ ∧ X₅ ≤ X₃ ∧ 2 ≤ X₅ ∧ 4 ≤ X₄+X₅ ∧ X₄ ≤ X₅ ∧ 4 ≤ X₃+X₅ ∧ X₃ ≤ X₅ ∧ 3 ≤ X₁+X₅ ∧ 1+X₁ ≤ X₅ ∧ X₄ ≤ X₃ ∧ X₄ ≤ 1+X₁ ∧ 2 ≤ X₄ ∧ 4 ≤ X₃+X₄ ∧ 3 ≤ X₁+X₄ ∧ 1+X₁ ≤ X₄ ∧ 2 ≤ X₃ ∧ 3 ≤ X₁+X₃ ∧ 1+X₁ ≤ X₃ ∧ 1 ≤ X₁ for location l14_v1


  Found invariant X₆ ≤ X₃ ∧ X₄ ≤ X₃ ∧ 1 ≤ X₄ ∧ 2 ≤ X₃+X₄ ∧ 1 ≤ X₃ for location l4


  Found invariant X₆ ≤ X₃ ∧ X₄ ≤ 1 ∧ X₄ ≤ X₃ ∧ 1 ≤ X₄ ∧ 2 ≤ X₃+X₄ ∧ 1 ≤ X₃ for location l11


  Found invariant X₆ ≤ X₃ ∧ 1+X₅ ≤ X₃ ∧ 1 ≤ X₅ ∧ 3 ≤ X₄+X₅ ∧ X₄ ≤ 1+X₅ ∧ 3 ≤ X₃+X₅ ∧ 2 ≤ X₁+X₅ ∧ X₁ ≤ X₅ ∧ X₄ ≤ X₃ ∧ X₄ ≤ 1+X₁ ∧ 2 ≤ X₄ ∧ 4 ≤ X₃+X₄ ∧ 3 ≤ X₁+X₄ ∧ 1+X₁ ≤ X₄ ∧ 2 ≤ X₃ ∧ 3 ≤ X₁+X₃ ∧ 1+X₁ ≤ X₃ ∧ 1 ≤ X₁ for location l14_v2


  Found invariant X₆ ≤ X₃ ∧ 1+X₂ ≤ X₆ ∧ 2+X₅ ≤ X₄ ∧ 2+X₅ ≤ X₃ ∧ 1+X₅ ≤ X₁ ∧ 0 ≤ X₅ ∧ 2 ≤ X₄+X₅ ∧ 2 ≤ X₃+X₅ ∧ 1 ≤ X₁+X₅ ∧ X₄ ≤ X₃ ∧ X₄ ≤ 1+X₁ ∧ 2 ≤ X₄ ∧ 4 ≤ X₃+X₄ ∧ 3 ≤ X₁+X₄ ∧ 1+X₁ ≤ X₄ ∧ 2 ≤ X₃ ∧ 1+X₂ ≤ X₃ ∧ 3 ≤ X₁+X₃ ∧ 1+X₁ ≤ X₃ ∧ 1 ≤ X₁ for location l7


  Found invariant X₆ ≤ X₃ ∧ 1+X₂ ≤ X₆ ∧ 2+X₅ ≤ X₄ ∧ 2+X₅ ≤ X₃ ∧ 1+X₅ ≤ X₁ ∧ 0 ≤ X₅ ∧ 2 ≤ X₄+X₅ ∧ 2 ≤ X₃+X₅ ∧ 1 ≤ X₁+X₅ ∧ X₄ ≤ X₃ ∧ X₄ ≤ 1+X₁ ∧ 2 ≤ X₄ ∧ 4 ≤ X₃+X₄ ∧ 3 ≤ X₁+X₄ ∧ 1+X₁ ≤ X₄ ∧ 2 ≤ X₃ ∧ 1+X₂ ≤ X₃ ∧ 3 ≤ X₁+X₃ ∧ 1+X₁ ≤ X₃ ∧ 1 ≤ X₁ for location l8


  Found invariant X₆ ≤ X₃ ∧ 1+X₂ ≤ X₆ ∧ X₀ ≤ X₆ ∧ 2+X₅ ≤ X₄ ∧ 2+X₅ ≤ X₃ ∧ 1+X₅ ≤ X₁ ∧ 0 ≤ X₅ ∧ 2 ≤ X₄+X₅ ∧ 2 ≤ X₃+X₅ ∧ 1 ≤ X₁+X₅ ∧ X₄ ≤ X₃ ∧ X₄ ≤ 1+X₁ ∧ 2 ≤ X₄ ∧ 4 ≤ X₃+X₄ ∧ 3 ≤ X₁+X₄ ∧ 1+X₁ ≤ X₄ ∧ 2 ≤ X₃ ∧ 1+X₂ ≤ X₃ ∧ 3 ≤ X₁+X₃ ∧ 1+X₁ ≤ X₃ ∧ X₀ ≤ X₃ ∧ X₂ ≤ X₀ ∧ 1 ≤ X₁ for location l9


  Cut unsatisfiable transition [t₁₈: l8→l6]


All Bounds
Timebounds
  Overall timebound:4⋅X₃^2+20⋅X₃+19 {O(n^2)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₇: 2⋅X₃+1 {O(n)}
    t₈: 1 {O(1)}
    t₉: 1 {O(1)}
    t₁₀: 1 {O(1)}
    t₁₁: 1 {O(1)}
    t₁₂: 2⋅X₃^2+4⋅X₃ {O(n^2)}
    t₁₃: 2⋅X₃+3 {O(n)}
    t₁₄: 2⋅X₃^2+4⋅X₃ {O(n^2)}
    t₁₅: 2⋅X₃ {O(n)}
    t₁₆: X₃+1 {O(n)}
    t₁₇: X₃+1 {O(n)}
    t₁₈: X₃ {O(n)}
    t₁₉: X₃+1 {O(n)}
    t₂₀: X₃+1 {O(n)}
    t₂₁: X₃+1 {O(n)}


Costbounds
  Overall costbound: 4⋅X₃^2+20⋅X₃+19 {O(n^2)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₇: 2⋅X₃+1 {O(n)}
    t₈: 1 {O(1)}
    t₉: 1 {O(1)}
    t₁₀: 1 {O(1)}
    t₁₁: 1 {O(1)}
    t₁₂: 2⋅X₃^2+4⋅X₃ {O(n^2)}
    t₁₃: 2⋅X₃+3 {O(n)}
    t₁₄: 2⋅X₃^2+4⋅X₃ {O(n^2)}
    t₁₅: 2⋅X₃ {O(n)}
    t₁₆: X₃+1 {O(n)}
    t₁₇: X₃+1 {O(n)}
    t₁₈: X₃ {O(n)}
    t₁₉: X₃+1 {O(n)}
    t₂₀: X₃+1 {O(n)}
    t₂₁: X₃+1 {O(n)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₀, X₂: X₂ {O(n)}
    t₀, X₃: X₃ {O(n)}
    t₀, X₄: X₄ {O(n)}
    t₀, X₅: X₅ {O(n)}
    t₀, X₆: X₆ {O(n)}
    t₁, X₀: X₀ {O(n)}
    t₁, X₁: X₁ {O(n)}
    t₁, X₂: X₂ {O(n)}
    t₁, X₃: X₃ {O(n)}
    t₁, X₄: X₄ {O(n)}
    t₁, X₅: X₅ {O(n)}
    t₁, X₆: X₆ {O(n)}
    t₂, X₀: X₀ {O(n)}
    t₂, X₁: X₁ {O(n)}
    t₂, X₂: X₂ {O(n)}
    t₂, X₃: X₃ {O(n)}
    t₂, X₄: X₄ {O(n)}
    t₂, X₅: X₅ {O(n)}
    t₂, X₆: X₆ {O(n)}
    t₃, X₀: X₀ {O(n)}
    t₃, X₁: X₁ {O(n)}
    t₃, X₂: X₂ {O(n)}
    t₃, X₃: X₃ {O(n)}
    t₃, X₄: X₄ {O(n)}
    t₃, X₅: X₅ {O(n)}
    t₃, X₆: X₆ {O(n)}
    t₄, X₀: X₀ {O(n)}
    t₄, X₁: X₁ {O(n)}
    t₄, X₂: X₂ {O(n)}
    t₄, X₃: X₃ {O(n)}
    t₄, X₄: X₃ {O(n)}
    t₄, X₅: X₅ {O(n)}
    t₄, X₆: X₃ {O(n)}
    t₅, X₀: 2⋅X₃^2+2⋅X₃+X₀ {O(n^2)}
    t₅, X₁: X₁+X₃ {O(n)}
    t₅, X₂: 6⋅X₃^2+6⋅X₃+X₂ {O(n^2)}
    t₅, X₃: 2⋅X₃ {O(n)}
    t₅, X₄: 1 {O(1)}
    t₅, X₅: 4⋅X₃+X₅ {O(n)}
    t₅, X₆: 2⋅X₃^2+3⋅X₃ {O(n^2)}
    t₇, X₀: 2⋅X₃^2+2⋅X₃+X₀ {O(n^2)}
    t₇, X₁: X₃ {O(n)}
    t₇, X₂: 6⋅X₃^2+6⋅X₃+X₂ {O(n^2)}
    t₇, X₃: X₃ {O(n)}
    t₇, X₄: 2⋅X₃ {O(n)}
    t₇, X₅: 2⋅X₃ {O(n)}
    t₇, X₆: 2⋅X₃^2+2⋅X₃ {O(n^2)}
    t₈, X₀: 2⋅X₃^2+2⋅X₃+X₀ {O(n^2)}
    t₈, X₁: X₁+X₃ {O(n)}
    t₈, X₂: 6⋅X₃^2+6⋅X₃+X₂ {O(n^2)}
    t₈, X₃: 2⋅X₃ {O(n)}
    t₈, X₄: 1 {O(1)}
    t₈, X₅: 4⋅X₃+X₅ {O(n)}
    t₈, X₆: 2⋅X₃^2+3⋅X₃ {O(n^2)}
    t₉, X₀: 2⋅X₃^2+2⋅X₃+X₀ {O(n^2)}
    t₉, X₁: X₁+X₃ {O(n)}
    t₉, X₂: 6⋅X₃^2+6⋅X₃+X₂ {O(n^2)}
    t₉, X₃: 2⋅X₃ {O(n)}
    t₉, X₄: 1 {O(1)}
    t₉, X₅: 4⋅X₃+X₅ {O(n)}
    t₉, X₆: 2⋅X₃^2+3⋅X₃ {O(n^2)}
    t₁₀, X₀: 2⋅X₃^2+2⋅X₃+X₀ {O(n^2)}
    t₁₀, X₁: X₁+X₃ {O(n)}
    t₁₀, X₂: 6⋅X₃^2+6⋅X₃+X₂ {O(n^2)}
    t₁₀, X₃: 2⋅X₃ {O(n)}
    t₁₀, X₄: 1 {O(1)}
    t₁₀, X₅: 4⋅X₃+X₅ {O(n)}
    t₁₀, X₆: 0 {O(1)}
    t₁₁, X₀: 6⋅X₃^2+4⋅X₀+6⋅X₃ {O(n^2)}
    t₁₁, X₁: 3⋅X₃+4⋅X₁ {O(n)}
    t₁₁, X₂: 18⋅X₃^2+18⋅X₃+4⋅X₂ {O(n^2)}
    t₁₁, X₃: 7⋅X₃ {O(n)}
    t₁₁, X₄: X₄+3 {O(n)}
    t₁₁, X₅: 12⋅X₃+4⋅X₅ {O(n)}
    t₁₁, X₆: 4⋅X₃^2+6⋅X₃+X₆ {O(n^2)}
    t₁₂, X₀: 2⋅X₃^2+2⋅X₃+X₀ {O(n^2)}
    t₁₂, X₁: X₃ {O(n)}
    t₁₂, X₂: 6⋅X₃^2+6⋅X₃+X₂ {O(n^2)}
    t₁₂, X₃: X₃ {O(n)}
    t₁₂, X₄: 2⋅X₃ {O(n)}
    t₁₂, X₅: 2⋅X₃ {O(n)}
    t₁₂, X₆: 2⋅X₃^2+2⋅X₃ {O(n^2)}
    t₁₃, X₀: 2⋅X₃^2+2⋅X₃+X₀ {O(n^2)}
    t₁₃, X₁: X₃ {O(n)}
    t₁₃, X₂: 6⋅X₃^2+6⋅X₃+X₂ {O(n^2)}
    t₁₃, X₃: X₃ {O(n)}
    t₁₃, X₄: 2⋅X₃ {O(n)}
    t₁₃, X₅: 2⋅X₃ {O(n)}
    t₁₃, X₆: 2⋅X₃^2+2⋅X₃ {O(n^2)}
    t₁₄, X₀: 2⋅X₃^2+2⋅X₃+X₀ {O(n^2)}
    t₁₄, X₁: X₃ {O(n)}
    t₁₄, X₂: 6⋅X₃^2+6⋅X₃+X₂ {O(n^2)}
    t₁₄, X₃: X₃ {O(n)}
    t₁₄, X₄: 2⋅X₃ {O(n)}
    t₁₄, X₅: 2⋅X₃ {O(n)}
    t₁₄, X₆: 2⋅X₃^2+2⋅X₃ {O(n^2)}
    t₁₅, X₀: 2⋅X₃^2+2⋅X₃+X₀ {O(n^2)}
    t₁₅, X₁: X₃ {O(n)}
    t₁₅, X₂: 2⋅X₃^2+2⋅X₃ {O(n^2)}
    t₁₅, X₃: X₃ {O(n)}
    t₁₅, X₄: 2⋅X₃ {O(n)}
    t₁₅, X₅: 2⋅X₃ {O(n)}
    t₁₅, X₆: 2⋅X₃^2+2⋅X₃ {O(n^2)}
    t₁₆, X₀: 2⋅X₃^2+2⋅X₃+X₀ {O(n^2)}
    t₁₆, X₁: X₃ {O(n)}
    t₁₆, X₂: 2⋅X₃^2+2⋅X₃ {O(n^2)}
    t₁₆, X₃: X₃ {O(n)}
    t₁₆, X₄: 2⋅X₃ {O(n)}
    t₁₆, X₅: 2⋅X₃ {O(n)}
    t₁₆, X₆: 2⋅X₃^2+2⋅X₃ {O(n^2)}
    t₁₇, X₀: 2⋅X₃^2+2⋅X₃ {O(n^2)}
    t₁₇, X₁: X₃ {O(n)}
    t₁₇, X₂: 2⋅X₃^2+2⋅X₃ {O(n^2)}
    t₁₇, X₃: X₃ {O(n)}
    t₁₇, X₄: 2⋅X₃ {O(n)}
    t₁₇, X₅: 0 {O(1)}
    t₁₇, X₆: 2⋅X₃^2+2⋅X₃ {O(n^2)}
    t₁₈, X₀: 2⋅X₃^2+2⋅X₃ {O(n^2)}
    t₁₈, X₁: X₃ {O(n)}
    t₁₈, X₂: 2⋅X₃^2+2⋅X₃ {O(n^2)}
    t₁₈, X₃: X₃ {O(n)}
    t₁₈, X₄: 2⋅X₃ {O(n)}
    t₁₈, X₅: 2⋅X₃ {O(n)}
    t₁₈, X₆: 2⋅X₃^2+2⋅X₃ {O(n^2)}
    t₁₉, X₀: 2⋅X₃^2+2⋅X₃ {O(n^2)}
    t₁₉, X₁: X₃ {O(n)}
    t₁₉, X₂: 2⋅X₃^2+2⋅X₃ {O(n^2)}
    t₁₉, X₃: X₃ {O(n)}
    t₁₉, X₄: 2⋅X₃ {O(n)}
    t₁₉, X₅: 2⋅X₃ {O(n)}
    t₁₉, X₆: 2⋅X₃^2+2⋅X₃ {O(n^2)}
    t₂₀, X₀: 2⋅X₃^2+2⋅X₃ {O(n^2)}
    t₂₀, X₁: X₃ {O(n)}
    t₂₀, X₂: 6⋅X₃^2+6⋅X₃ {O(n^2)}
    t₂₀, X₃: X₃ {O(n)}
    t₂₀, X₄: 6⋅X₃ {O(n)}
    t₂₀, X₅: 4⋅X₃ {O(n)}
    t₂₀, X₆: 6⋅X₃^2+6⋅X₃ {O(n^2)}
    t₂₁, X₀: 2⋅X₃^2+2⋅X₃ {O(n^2)}
    t₂₁, X₁: X₃ {O(n)}
    t₂₁, X₂: 6⋅X₃^2+6⋅X₃ {O(n^2)}
    t₂₁, X₃: X₃ {O(n)}
    t₂₁, X₄: X₃ {O(n)}
    t₂₁, X₅: 4⋅X₃ {O(n)}
    t₂₁, X₆: 2⋅X₃^2+2⋅X₃ {O(n^2)}

