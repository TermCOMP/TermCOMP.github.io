WORST_CASE(Omega(n^2),O(n^2))

# LoAT Proof:
WORST_CASE(Omega(n^2),?)

WORST_CASE(Omega(n^1),?)
WORST_CASE(Omega(n^2),?)
Initial ITS

Start location: evalfstart

Location map:
LoAT_sink -> 0
evalfstart -> 1
evalfentryin -> 2
evalfbb4in -> 3
evalfbb2in -> 4
evalfreturnin -> 5
evalfbb1in -> 6
evalfbb3in -> 7
evalfstop -> 8

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: -2+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=i5, i5'=i4
   2: (-3+i1 == 0 /\ -1+i5 >= 0) /\ i1'=4, i3'=1+i3, i6'=1
   3: (-3+i1 == 0 /\ -i5 >= 0) /\ i1'=5, i3'=1+i3
   4: (-i6+i4 >= 0 /\ -4+i1 == 0) /\ i1'=6, i3'=1+i3
   5: (-4+i1 == 0 /\ -1+i6-i4 >= 0) /\ i1'=7, i3'=1+i3
   6: -6+i1 == 0 /\ i1'=4, i3'=1+i3, i6'=1+i6
   7: -7+i1 == 0 /\ i1'=3, i3'=1+i3, i5'=-1+i5
   8: -5+i1 == 0 /\ i1'=8, i3'=1+i3

Dependency graph:
0 -> 1
1 -> 2, 1 -> 3
2 -> 4, 2 -> 5
3 -> 8
4 -> 6
5 -> 7
6 -> 4, 6 -> 5
7 -> 2, 7 -> 3

Chained Linear Paths

	Applied Chaining

	First rule:
	-1+i1 == 0 /\ i1'=2, i3'=1+i3
	Second rule:
	-2+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=i5, i5'=i4
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=i5, i5'=i4
	
	Applied Deletion

	Removed the following rules: 0, 1
	
	Applied Chaining

	First rule:
	(-3+i1 == 0 /\ -i5 >= 0) /\ i1'=5, i3'=1+i3
	Second rule:
	-5+i1 == 0 /\ i1'=8, i3'=1+i3
	New rule:
	(0 == 0 /\ -3+i1 == 0 /\ -i5 >= 0) /\ i1'=8, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 3, 8
	
	Applied Chaining

	First rule:
	(-i6+i4 >= 0 /\ -4+i1 == 0) /\ i1'=6, i3'=1+i3
	Second rule:
	-6+i1 == 0 /\ i1'=4, i3'=1+i3, i6'=1+i6
	New rule:
	(0 == 0 /\ -i6+i4 >= 0 /\ -4+i1 == 0) /\ i1'=4, i3'=2+i3, i6'=1+i6
	
	Applied Deletion

	Removed the following rules: 4, 6
	
	Applied Chaining

	First rule:
	(-4+i1 == 0 /\ -1+i6-i4 >= 0) /\ i1'=7, i3'=1+i3
	Second rule:
	-7+i1 == 0 /\ i1'=3, i3'=1+i3, i5'=-1+i5
	New rule:
	(0 == 0 /\ -4+i1 == 0 /\ -1+i6-i4 >= 0) /\ i1'=3, i3'=2+i3, i5'=-1+i5
	
	Applied Deletion

	Removed the following rules: 5, 7

Start location: evalfstart

Location map:
LoAT_sink -> 0
evalfstart -> 1
evalfentryin -> 2
evalfbb4in -> 3
evalfbb2in -> 4
evalfreturnin -> 5
evalfbb1in -> 6
evalfbb3in -> 7
evalfstop -> 8

Rules:
   2: (-3+i1 == 0 /\ -1+i5 >= 0) /\ i1'=4, i3'=1+i3, i6'=1
   9: (0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=i5, i5'=i4
  10: (0 == 0 /\ -3+i1 == 0 /\ -i5 >= 0) /\ i1'=8, i3'=2+i3
  11: (0 == 0 /\ -i6+i4 >= 0 /\ -4+i1 == 0) /\ i1'=4, i3'=2+i3, i6'=1+i6
  12: (0 == 0 /\ -4+i1 == 0 /\ -1+i6-i4 >= 0) /\ i1'=3, i3'=2+i3, i5'=-1+i5

Dependency graph:
2 -> 11, 2 -> 12
9 -> 2, 9 -> 10
11 -> 11, 11 -> 12
12 -> 2, 12 -> 10

Preprocessed Transitions

	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=i5, i5'=i4
	New rule:
	-1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=i5, i5'=i4
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -3+i1 == 0 /\ -i5 >= 0) /\ i1'=8, i3'=2+i3
	New rule:
	(-3+i1 == 0 /\ -i5 >= 0) /\ i1'=8, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -i6+i4 >= 0 /\ -4+i1 == 0) /\ i1'=4, i3'=2+i3, i6'=1+i6
	New rule:
	(-i6+i4 >= 0 /\ -4+i1 == 0) /\ i1'=4, i3'=2+i3, i6'=1+i6
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -4+i1 == 0 /\ -1+i6-i4 >= 0) /\ i1'=3, i3'=2+i3, i5'=-1+i5
	New rule:
	(-4+i1 == 0 /\ -1+i6-i4 >= 0) /\ i1'=3, i3'=2+i3, i5'=-1+i5

Start location: evalfstart

Location map:
LoAT_sink -> 0
evalfstart -> 1
evalfentryin -> 2
evalfbb4in -> 3
evalfbb2in -> 4
evalfreturnin -> 5
evalfbb1in -> 6
evalfbb3in -> 7
evalfstop -> 8

Rules:
   2: (-3+i1 == 0 /\ -1+i5 >= 0) /\ i1'=4, i3'=1+i3, i6'=1
  13: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=i5, i5'=i4
  14: (-3+i1 == 0 /\ -i5 >= 0) /\ i1'=8, i3'=2+i3
  15: (-i6+i4 >= 0 /\ -4+i1 == 0) /\ i1'=4, i3'=2+i3, i6'=1+i6
  16: (-4+i1 == 0 /\ -1+i6-i4 >= 0) /\ i1'=3, i3'=2+i3, i5'=-1+i5

Dependency graph:
2 -> 15, 2 -> 16
13 -> 2, 13 -> 14
15 -> 15, 15 -> 16
16 -> 2, 16 -> 14

Step with 13

	Trace

	13[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 14

	Trace

	13[(-1+i1 == 0)]
	14[(-3+i1 == 0 /\ -i5 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	
	Blocked

	{}
	{14[T]}
	
Step with 2

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{14[T]}
	{}
	
Step with 15

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	15[(-i6+i4 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{14[T]}
	{}
	{}
	
Poly(n^1)

Accelerate

	Loop Acceleration

	Original rule:
	(-i6+i4 >= 0 /\ -4+i1 == 0) /\ i1'=4, i3'=2+i3, i6'=1+i6
	New rule:
	(-4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+it21 >= 0 /\ 1-i6+i4-it21 >= 0) /\ i1'=i1, i3'=i3+2*it21, i6'=i6+it21

		-i6+i4 >= 0 [0]: montonic decrease yields 1-i6+i4-it21 >= 0
		
		-4+i1 >= 0 [0]: unchanged
		
		4-i1 >= 0 [0]: unchanged
		
		Replacement map: {-i6+i4 >= 0 -> 1-i6+i4-it21 >= 0, -4+i1 >= 0 -> -4+i1 >= 0, 4-i1 >= 0 -> 4-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+it21 >= 0 /\ 1-i6+i4-it21 >= 0) /\ i1'=i1, i3'=i3+2*it21, i6'=i6+it21
	New rule:
	(-4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+it21 >= 0 /\ 1-i6+i4-it21 >= 0) /\ i3'=i3+2*it21, i6'=i6+it21
	
	Instantiation

	Original rule:
	(-4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+it21 >= 0 /\ 1-i6+i4-it21 >= 0) /\ i3'=i3+2*it21, i6'=i6+it21
	New rule:
	(0 >= 0 /\ -i6+i4 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0) /\ i3'=2-2*i6+i3+2*i4, i6'=1+i4

Start location: evalfstart

Location map:
LoAT_sink -> 0
evalfstart -> 1
evalfentryin -> 2
evalfbb4in -> 3
evalfbb2in -> 4
evalfreturnin -> 5
evalfbb1in -> 6
evalfbb3in -> 7
evalfstop -> 8

Rules:
   2: (-3+i1 == 0 /\ -1+i5 >= 0) /\ i1'=4, i3'=1+i3, i6'=1
  13: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=i5, i5'=i4
  14: (-3+i1 == 0 /\ -i5 >= 0) /\ i1'=8, i3'=2+i3
  15: (-i6+i4 >= 0 /\ -4+i1 == 0) /\ i1'=4, i3'=2+i3, i6'=1+i6
  16: (-4+i1 == 0 /\ -1+i6-i4 >= 0) /\ i1'=3, i3'=2+i3, i5'=-1+i5
  17: (0 >= 0 /\ -i6+i4 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0) /\ i3'=2-2*i6+i3+2*i4, i6'=1+i4

Dependency graph:
2 -> 15, 2 -> 16, 2 -> 17
13 -> 2, 13 -> 14
15 -> 15, 15 -> 16, 15 -> 17
16 -> 2, 16 -> 14
17 -> 15, 17 -> 16

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	17[(0 >= 0 /\ -i6+i4 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0)]
	
	Blocked

	{}
	{14[T]}
	{}
	{15[T], 17[T]}
	
Step with 16

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	17[(0 >= 0 /\ -i6+i4 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0)]
	16[(-4+i1 == 0 /\ -1+i6-i4 >= 0)]
	
	Blocked

	{}
	{14[T]}
	{}
	{15[T], 17[T]}
	{}
	
Poly(n^2)

Accelerate

		Simplified Guard

		Original rule:
		(0 >= 0 /\ 0 == 0 /\ -3+i1 == 0 /\ -1+i4 >= 0 /\ -1+i5 >= 0) /\ i1'=3, i3'=3+i3+2*i4, i5'=-1+i5, i6'=1+i4
		New rule:
		(-3+i1 == 0 /\ -1+i4 >= 0 /\ -1+i5 >= 0) /\ i1'=3, i3'=3+i3+2*i4, i5'=-1+i5, i6'=1+i4

	Loop Acceleration

	Original rule:
	(-3+i1 == 0 /\ -1+i4 >= 0 /\ -1+i5 >= 0) /\ i1'=3, i3'=3+i3+2*i4, i5'=-1+i5, i6'=1+i4
	New rule:
	(-3+i1 >= 0 /\ -1+i4 >= 0 /\ -1+it40 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ i5-it40 >= 0) /\ i1'=i1, i3'=i3+2*i4*it40+3*it40, i5'=i5-it40, i6'=1+i4

		-3+i1 >= 0 [0]: unchanged
		
		-1+i4 >= 0 [0]: unchanged
		
		3-i1 >= 0 [0]: unchanged
		
		-1+i5 >= 0 [0]: montonic decrease yields (-1+i5 >= 0 /\ i5-it40 >= 0)
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, -1+i4 >= 0 -> -1+i4 >= 0, 3-i1 >= 0 -> 3-i1 >= 0, -1+i5 >= 0 -> (-1+i5 >= 0 /\ i5-it40 >= 0)}

	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ -1+i4 >= 0 /\ -1+it40 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ i5-it40 >= 0) /\ i1'=i1, i3'=i3+2*i4*it40+3*it40, i5'=i5-it40, i6'=1+i4
	New rule:
	(-3+i1 >= 0 /\ -1+i4 >= 0 /\ -1+it40 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ i5-it40 >= 0) /\ i3'=i3+2*i4*it40+3*it40, i5'=i5-it40, i6'=1+i4
	
	Instantiation

	Original rule:
	(-3+i1 >= 0 /\ -1+i4 >= 0 /\ -1+it40 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ i5-it40 >= 0) /\ i3'=i3+2*i4*it40+3*it40, i5'=i5-it40, i6'=1+i4
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0) /\ i3'=i3+2*i4*i5+3*i5, i5'=0, i6'=1+i4

Start location: evalfstart

Location map:
LoAT_sink -> 0
evalfstart -> 1
evalfentryin -> 2
evalfbb4in -> 3
evalfbb2in -> 4
evalfreturnin -> 5
evalfbb1in -> 6
evalfbb3in -> 7
evalfstop -> 8

Rules:
   2: (-3+i1 == 0 /\ -1+i5 >= 0) /\ i1'=4, i3'=1+i3, i6'=1
  13: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=i5, i5'=i4
  14: (-3+i1 == 0 /\ -i5 >= 0) /\ i1'=8, i3'=2+i3
  15: (-i6+i4 >= 0 /\ -4+i1 == 0) /\ i1'=4, i3'=2+i3, i6'=1+i6
  16: (-4+i1 == 0 /\ -1+i6-i4 >= 0) /\ i1'=3, i3'=2+i3, i5'=-1+i5
  17: (0 >= 0 /\ -i6+i4 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0) /\ i3'=2-2*i6+i3+2*i4, i6'=1+i4
  18: (0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0) /\ i3'=i3+2*i4*i5+3*i5, i5'=0, i6'=1+i4

Dependency graph:
2 -> 15, 2 -> 16, 2 -> 17
13 -> 2, 13 -> 14, 13 -> 18
15 -> 15, 15 -> 16, 15 -> 17
16 -> 2, 16 -> 14, 16 -> 18
17 -> 15, 17 -> 16
18 -> 2, 18 -> 14

	Trace

	13[(-1+i1 == 0)]
	18[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{14[T]}
	{18[T]}
	
Step with 14

	Trace

	13[(-1+i1 == 0)]
	18[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0)]
	14[(-3+i1 == 0 /\ -i5 >= 0)]
	
	Blocked

	{}
	{14[T]}
	{2[T], 18[T]}
	{}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	18[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{14[T]}
	{2[T], 14[T], 18[T]}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	
	Blocked

	{}
	{14[T], 18[T]}
	
Step with 2

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{14[T], 18[T]}
	{}
	
Step with 15

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	15[(-i6+i4 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{14[T], 18[T]}
	{}
	{}
	
Covered

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{14[T], 18[T]}
	{15[T]}
	
Step with 17

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	17[(0 >= 0 /\ -i6+i4 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0)]
	
	Blocked

	{}
	{14[T], 18[T]}
	{15[T]}
	{17[T]}
	
Step with 16

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	17[(0 >= 0 /\ -i6+i4 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0)]
	16[(-4+i1 == 0 /\ -1+i6-i4 >= 0)]
	
	Blocked

	{}
	{14[T], 18[T]}
	{15[T]}
	{15[T], 17[T]}
	{}
	
Covered

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	17[(0 >= 0 /\ -i6+i4 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0)]
	
	Blocked

	{}
	{14[T], 18[T]}
	{15[T]}
	{15[T], 16[T], 17[T]}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{14[T], 18[T]}
	{15[T], 17[T]}
	
Step with 16

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	16[(-4+i1 == 0 /\ -1+i6-i4 >= 0)]
	
	Blocked

	{}
	{14[T], 18[T]}
	{15[T], 17[T]}
	{}
	
Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -3+i1 == 0 /\ -1+i5 >= 0 /\ -i4 >= 0) /\ i1'=3, i3'=3+i3, i5'=-1+i5, i6'=1
		New rule:
		(-3+i1 == 0 /\ -1+i5 >= 0 /\ -i4 >= 0) /\ i1'=3, i3'=3+i3, i5'=-1+i5, i6'=1

	Loop Acceleration

	Original rule:
	(-3+i1 == 0 /\ -1+i5 >= 0 /\ -i4 >= 0) /\ i1'=3, i3'=3+i3, i5'=-1+i5, i6'=1
	New rule:
	(-3+i1 >= 0 /\ -1+it84 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -i4 >= 0 /\ -it84+i5 >= 0) /\ i1'=i1, i3'=i3+3*it84, i5'=-it84+i5, i6'=1

		-3+i1 >= 0 [0]: unchanged
		
		3-i1 >= 0 [0]: unchanged
		
		-1+i5 >= 0 [0]: montonic decrease yields (-1+i5 >= 0 /\ -it84+i5 >= 0)
		
		-i4 >= 0 [0]: unchanged
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, 3-i1 >= 0 -> 3-i1 >= 0, -1+i5 >= 0 -> (-1+i5 >= 0 /\ -it84+i5 >= 0), -i4 >= 0 -> -i4 >= 0}

	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ -1+it84 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -i4 >= 0 /\ -it84+i5 >= 0) /\ i1'=i1, i3'=i3+3*it84, i5'=-it84+i5, i6'=1
	New rule:
	(-3+i1 >= 0 /\ -1+it84 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -i4 >= 0 /\ -it84+i5 >= 0) /\ i3'=i3+3*it84, i5'=-it84+i5, i6'=1
	
	Instantiation

	Original rule:
	(-3+i1 >= 0 /\ -1+it84 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -i4 >= 0 /\ -it84+i5 >= 0) /\ i3'=i3+3*it84, i5'=-it84+i5, i6'=1
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -i4 >= 0) /\ i3'=i3+3*i5, i5'=0, i6'=1

Start location: evalfstart

Location map:
LoAT_sink -> 0
evalfstart -> 1
evalfentryin -> 2
evalfbb4in -> 3
evalfbb2in -> 4
evalfreturnin -> 5
evalfbb1in -> 6
evalfbb3in -> 7
evalfstop -> 8

Rules:
   2: (-3+i1 == 0 /\ -1+i5 >= 0) /\ i1'=4, i3'=1+i3, i6'=1
  13: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=i5, i5'=i4
  14: (-3+i1 == 0 /\ -i5 >= 0) /\ i1'=8, i3'=2+i3
  15: (-i6+i4 >= 0 /\ -4+i1 == 0) /\ i1'=4, i3'=2+i3, i6'=1+i6
  16: (-4+i1 == 0 /\ -1+i6-i4 >= 0) /\ i1'=3, i3'=2+i3, i5'=-1+i5
  17: (0 >= 0 /\ -i6+i4 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0) /\ i3'=2-2*i6+i3+2*i4, i6'=1+i4
  18: (0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0) /\ i3'=i3+2*i4*i5+3*i5, i5'=0, i6'=1+i4
  19: (0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -i4 >= 0) /\ i3'=i3+3*i5, i5'=0, i6'=1

Dependency graph:
2 -> 15, 2 -> 16, 2 -> 17
13 -> 2, 13 -> 14, 13 -> 18, 13 -> 19
15 -> 15, 15 -> 16, 15 -> 17
16 -> 2, 16 -> 14, 16 -> 18, 16 -> 19
17 -> 15, 17 -> 16
18 -> 2, 18 -> 14, 18 -> 19
19 -> 2, 19 -> 14, 19 -> 18

	Trace

	13[(-1+i1 == 0)]
	19[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{14[T], 18[T]}
	{19[T]}
	
Step with 14

	Trace

	13[(-1+i1 == 0)]
	19[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -i4 >= 0)]
	14[(-3+i1 == 0 /\ -i5 >= 0)]
	
	Blocked

	{}
	{14[T], 18[T]}
	{2[T], 18[T], 19[T]}
	{}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	19[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i5 >= 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{14[T], 18[T]}
	{2[T], 14[T], 18[T], 19[T]}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	
	Blocked

	{}
	{14[T], 18[T], 19[T]}
	
Step with 2

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{14[T], 18[T], 19[T]}
	{}
	
Step with 15

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	15[(-i6+i4 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{14[T], 18[T], 19[T]}
	{}
	{}
	
Covered

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{14[T], 18[T], 19[T]}
	{15[T]}
	
Step with 17

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	17[(0 >= 0 /\ -i6+i4 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0)]
	
	Blocked

	{}
	{14[T], 18[T], 19[T]}
	{15[T]}
	{17[T]}
	
Step with 16

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	17[(0 >= 0 /\ -i6+i4 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0)]
	16[(-4+i1 == 0 /\ -1+i6-i4 >= 0)]
	
	Blocked

	{}
	{14[T], 18[T], 19[T]}
	{15[T]}
	{17[T]}
	{}
	
Covered

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	17[(0 >= 0 /\ -i6+i4 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0)]
	
	Blocked

	{}
	{14[T], 18[T], 19[T]}
	{15[T]}
	{16[T], 17[T]}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{14[T], 18[T], 19[T]}
	{15[T], 17[T]}
	
Step with 16

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	16[(-4+i1 == 0 /\ -1+i6-i4 >= 0)]
	
	Blocked

	{}
	{14[T], 18[T], 19[T]}
	{15[T], 17[T]}
	{}
	
Covered

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{14[T], 18[T], 19[T]}
	{15[T], 16[T], 17[T]}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	
	Blocked

	{}
	{2[T], 14[T], 18[T], 19[T]}
	
Backtrack

	Trace

	Blocked

	{13[T]}
	
Accept

Poly(n^2)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^2))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  
  Locations:  l0, l1, l2, l3, l4, l5, l6, l7
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂) → l6(X₀, X₁, X₂)
  t₄: l1(X₀, X₁, X₂) → l2(X₀, X₁, X₂) :|: X₂ ≤ X₀
  t₅: l1(X₀, X₁, X₂) → l3(X₀, X₁, X₂) :|: 1+X₀ ≤ X₂
  t₆: l2(X₀, X₁, X₂) → l1(X₀, X₁, 1+X₂)
  t₇: l3(X₀, X₁, X₂) → l4(X₀, X₁-1, X₂)
  t₂: l4(X₀, X₁, X₂) → l1(X₀, X₁, 1) :|: 1 ≤ X₁
  t₃: l4(X₀, X₁, X₂) → l5(X₀, X₁, X₂) :|: X₁ ≤ 0
  t₈: l5(X₀, X₁, X₂) → l7(X₀, X₁, X₂)
  t₁: l6(X₀, X₁, X₂) → l4(X₁, X₀, X₂)


Preprocessing
  Found invariant X₂ ≤ X₀ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₀+X₂ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l2


  Found invariant X₁ ≤ 0 for location l7


  Found invariant X₁ ≤ 0 for location l5


  Found invariant 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 1 ≤ X₁ for location l1


  Found invariant 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ for location l3


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  
  Locations:  l0, l1, l2, l3, l4, l5, l6, l7
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂) → l6(X₀, X₁, X₂)
  t₄: l1(X₀, X₁, X₂) → l2(X₀, X₁, X₂) :|: X₂ ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂
  t₅: l1(X₀, X₁, X₂) → l3(X₀, X₁, X₂) :|: 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂
  t₆: l2(X₀, X₁, X₂) → l1(X₀, X₁, 1+X₂) :|: 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀+X₁ ∧ 2 ≤ X₀+X₂ ∧ 2 ≤ X₁+X₂ ∧ X₂ ≤ X₀
  t₇: l3(X₀, X₁, X₂) → l4(X₀, X₁-1, X₂) :|: 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂
  t₂: l4(X₀, X₁, X₂) → l1(X₀, X₁, 1) :|: 1 ≤ X₁
  t₃: l4(X₀, X₁, X₂) → l5(X₀, X₁, X₂) :|: X₁ ≤ 0
  t₈: l5(X₀, X₁, X₂) → l7(X₀, X₁, X₂) :|: X₁ ≤ 0
  t₁: l6(X₀, X₁, X₂) → l4(X₁, X₀, X₂)


MPRF for transition t₂: l4(X₀, X₁, X₂) → l1(X₀, X₁, 1) :|: 1 ≤ X₁ of depth 1:
  new bound:
    X₀ {O(n)}

  MPRF:
    • l1: [X₁-1]
    • l2: [X₁-1]
    • l3: [X₁-1]
    • l4: [X₁]




MPRF for transition t₅: l1(X₀, X₁, X₂) → l3(X₀, X₁, X₂) :|: 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ of depth 1:
  new bound:
    X₀ {O(n)}

  MPRF:
    • l1: [X₁]
    • l2: [X₁]
    • l3: [X₁-1]
    • l4: [X₁]




MPRF for transition t₇: l3(X₀, X₁, X₂) → l4(X₀, X₁-1, X₂) :|: 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ of depth 1:
  new bound:
    X₀ {O(n)}

  MPRF:
    • l1: [X₁]
    • l2: [X₁]
    • l3: [X₁]
    • l4: [X₁]




TWN: t₆: l2→l1


  cycle: [t₆: l2→l1; t₄: l1→l2]
  original loop: (X₂ ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀+X₁ ∧ 2 ≤ X₀+X₂ ∧ 2 ≤ X₁+X₂ ∧ X₂ ≤ X₀,(X₀,X₁,X₂) -> (X₀,X₁,1+X₂))
  transformed loop: (X₂ ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀+X₁ ∧ 2 ≤ X₀+X₂ ∧ 2 ≤ X₁+X₂ ∧ X₂ ≤ X₀,(X₀,X₁,X₂) -> (X₀,X₁,1+X₂))
  loop: (X₂ ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀+X₁ ∧ 2 ≤ X₀+X₂ ∧ 2 ≤ X₁+X₂ ∧ X₂ ≤ X₀,(X₀,X₁,X₂) -> (X₀,X₁,1+X₂))
  order: [X₂; X₁; X₀]
closed-form:  X₂: X₂ + [[n != 0]]⋅n^1
  X₁: X₁
  X₀: X₀

  Termination: true
  Formula: 
    0 ≤ 1 ∧ 1 ≤ 0 ∧ 1 ≤ X₀ ∧ 1+X₂ ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀+X₁ ∧ 2 ≤ X₀+X₂ ∧ 2 ≤ X₁+X₂
     ∨ 0 ≤ 1 ∧ 1 ≤ 0 ∧ 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀+X₁ ∧ 2 ≤ X₀+X₂ ∧ 2 ≤ X₁+X₂ ∧ X₂ ≤ X₀ ∧ X₀ ≤ X₂
     ∨ 1 ≤ 0 ∧ 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀+X₁ ∧ 2 ≤ X₀+X₂ ∧ 2 ≤ X₁+X₂



Stabilization-Threshold for: X₂ ≤ X₀
  alphas_abs: 1+X₀+X₂
  M: 0
  N: 1
  Bound: 2⋅X₀+2⋅X₂+4 {O(n)}

TWN - Lifting for [4: l1->l2; 6: l2->l1] of 2⋅X₀+2⋅X₂+6 {O(n)}
relevant size-bounds w.r.t. t₂: l4→l1:
X₀: X₁ {O(n)}
X₂: 1 {O(1)}
Runtime-bound of t₂: X₀ {O(n)}
Results in: 2⋅X₀⋅X₁+8⋅X₀ {O(n^2)}
  Found invariant X₂ ≤ 1+X₀ ∧ 2 ≤ X₂ ∧ 3 ≤ X₁+X₂ ∧ 3 ≤ X₀+X₂ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l1_v1


  Found invariant X₂ ≤ 1 ∧ X₂ ≤ X₁ ∧ X₂ ≤ X₀ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₀+X₂ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l2_v1


  Found invariant X₂ ≤ X₀ ∧ 2 ≤ X₂ ∧ 3 ≤ X₁+X₂ ∧ 4 ≤ X₀+X₂ ∧ 1 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 2 ≤ X₀ for location l2_v2


  Found invariant X₁ ≤ 0 for location l7


  Found invariant X₁ ≤ 0 for location l5


  Found invariant X₂ ≤ 1 ∧ X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 1 ≤ X₁ for location l1


  Found invariant 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ for location l3


All Bounds
Timebounds
  Overall timebound:4⋅X₀⋅X₁+19⋅X₀+4 {O(n^2)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: X₀ {O(n)}
    t₃: 1 {O(1)}
    t₄: 2⋅X₀⋅X₁+8⋅X₀ {O(n^2)}
    t₅: X₀ {O(n)}
    t₆: 2⋅X₀⋅X₁+8⋅X₀ {O(n^2)}
    t₇: X₀ {O(n)}
    t₈: 1 {O(1)}


Costbounds
  Overall costbound: 4⋅X₀⋅X₁+19⋅X₀+4 {O(n^2)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: X₀ {O(n)}
    t₃: 1 {O(1)}
    t₄: 2⋅X₀⋅X₁+8⋅X₀ {O(n^2)}
    t₅: X₀ {O(n)}
    t₆: 2⋅X₀⋅X₁+8⋅X₀ {O(n^2)}
    t₇: X₀ {O(n)}
    t₈: 1 {O(1)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₀, X₂: X₂ {O(n)}
    t₁, X₀: X₁ {O(n)}
    t₁, X₁: X₀ {O(n)}
    t₁, X₂: X₂ {O(n)}
    t₂, X₀: X₁ {O(n)}
    t₂, X₁: X₀ {O(n)}
    t₂, X₂: 1 {O(1)}
    t₃, X₀: 2⋅X₁ {O(n)}
    t₃, X₁: 2⋅X₀ {O(n)}
    t₃, X₂: 2⋅X₀⋅X₁+8⋅X₀+X₂+2 {O(n^2)}
    t₄, X₀: X₁ {O(n)}
    t₄, X₁: X₀ {O(n)}
    t₄, X₂: 2⋅X₀⋅X₁+8⋅X₀+1 {O(n^2)}
    t₅, X₀: X₁ {O(n)}
    t₅, X₁: X₀ {O(n)}
    t₅, X₂: 2⋅X₀⋅X₁+8⋅X₀+2 {O(n^2)}
    t₆, X₀: X₁ {O(n)}
    t₆, X₁: X₀ {O(n)}
    t₆, X₂: 2⋅X₀⋅X₁+8⋅X₀+1 {O(n^2)}
    t₇, X₀: X₁ {O(n)}
    t₇, X₁: X₀ {O(n)}
    t₇, X₂: 2⋅X₀⋅X₁+8⋅X₀+2 {O(n^2)}
    t₈, X₀: 2⋅X₁ {O(n)}
    t₈, X₁: 2⋅X₀ {O(n)}
    t₈, X₂: 2⋅X₀⋅X₁+8⋅X₀+X₂+2 {O(n^2)}

