WORST_CASE(INF,?)

# LoAT Proof:
WORST_CASE(INF,?)

WORST_CASE(INF,?)
Initial ITS

Start location: f3

Location map:
LoAT_sink -> 0
f3 -> 1
f0 -> 2
f2 -> 3
f1 -> 4
f4 -> 5

Rules:
   0: (-2+i1 == 0 /\ -i4 >= 0) /\ i1'=3, i3'=1+i3
   1: (-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i5'=i6, i6'=-1+i6, i7'=i4
   2: (-1+i4 >= 0 /\ -4+i1 == 0 /\ -1+i6 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i6'=-1+i6, i8'=i6, i9'=i4
   3: (-3+i1 == 0 /\ -i6 >= 0) /\ i1'=5, i3'=1+i3, i10'=it2
   4: (-3+i1 == 0 /\ -1+it3 >= 0 /\ -1+i6 >= 0) /\ i1'=2, i3'=1+i3, i4'=it3
   5: -1+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=it6, i6'=it5

Dependency graph:
0 -> 3, 0 -> 4
1 -> 0, 1 -> 1
2 -> 0, 2 -> 1
4 -> 0, 4 -> 1
5 -> 3, 5 -> 4

Refined Dependency Graph

	Removed the following edges: 4 -> 0

Start location: f3

Location map:
LoAT_sink -> 0
f3 -> 1
f0 -> 2
f2 -> 3
f1 -> 4
f4 -> 5

Rules:
   0: (-2+i1 == 0 /\ -i4 >= 0) /\ i1'=3, i3'=1+i3
   1: (-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i5'=i6, i6'=-1+i6, i7'=i4
   2: (-1+i4 >= 0 /\ -4+i1 == 0 /\ -1+i6 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i6'=-1+i6, i8'=i6, i9'=i4
   3: (-3+i1 == 0 /\ -i6 >= 0) /\ i1'=5, i3'=1+i3, i10'=it2
   4: (-3+i1 == 0 /\ -1+it3 >= 0 /\ -1+i6 >= 0) /\ i1'=2, i3'=1+i3, i4'=it3
   5: -1+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=it6, i6'=it5

Dependency graph:
0 -> 3, 0 -> 4
1 -> 0, 1 -> 1
2 -> 0, 2 -> 1
4 -> 1
5 -> 3, 5 -> 4

Step with 5

	Trace

	5[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 4

	Trace

	5[(-1+i1 == 0)]
	4[(-3+i1 == 0 /\ -1+it3 >= 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Step with 1

	Trace

	5[(-1+i1 == 0)]
	4[(-3+i1 == 0 /\ -1+it3 >= 0 /\ -1+i6 >= 0)]
	1[(-1+i4 >= 0 /\ -2+i1 == 0)]
	
	Blocked

	{}
	{}
	{}
	{}
	
Unbounded

Accelerate

	Loop Acceleration

	Original rule:
	(-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i5'=i6, i6'=-1+i6, i7'=i4
	New rule:
	(-1+i4 >= 0 /\ -2+i1 >= 0 /\ -1+it37 >= 0 /\ i4-it37 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it37, i4'=i4-it37, i5'=1+i6-it37, i6'=i6-it37, i7'=1+i4-it37

		-1+i4 >= 0 [0]: montonic decrease yields (-1+i4 >= 0 /\ i4-it37 >= 0)
		
		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-1+i4 >= 0 -> (-1+i4 >= 0 /\ i4-it37 >= 0), -2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-1+i4 >= 0 /\ -2+i1 >= 0 /\ -1+it37 >= 0 /\ i4-it37 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it37, i4'=i4-it37, i5'=1+i6-it37, i6'=i6-it37, i7'=1+i4-it37
	New rule:
	(-1+i4 >= 0 /\ -2+i1 >= 0 /\ -1+it37 >= 0 /\ i4-it37 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+it37, i4'=i4-it37, i5'=1+i6-it37, i6'=i6-it37, i7'=1+i4-it37
	
	Instantiation

	Original rule:
	(-1+i4 >= 0 /\ -2+i1 >= 0 /\ -1+it37 >= 0 /\ i4-it37 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+it37, i4'=i4-it37, i5'=1+i6-it37, i6'=i6-it37, i7'=1+i4-it37
	New rule:
	(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+i4, i4'=0, i5'=1+i6-i4, i6'=i6-i4, i7'=1

Start location: f3

Location map:
LoAT_sink -> 0
f3 -> 1
f0 -> 2
f2 -> 3
f1 -> 4
f4 -> 5

Rules:
   0: (-2+i1 == 0 /\ -i4 >= 0) /\ i1'=3, i3'=1+i3
   1: (-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i5'=i6, i6'=-1+i6, i7'=i4
   2: (-1+i4 >= 0 /\ -4+i1 == 0 /\ -1+i6 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i6'=-1+i6, i8'=i6, i9'=i4
   3: (-3+i1 == 0 /\ -i6 >= 0) /\ i1'=5, i3'=1+i3, i10'=it2
   4: (-3+i1 == 0 /\ -1+it3 >= 0 /\ -1+i6 >= 0) /\ i1'=2, i3'=1+i3, i4'=it3
   5: -1+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=it6, i6'=it5
   6: (0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+i4, i4'=0, i5'=1+i6-i4, i6'=i6-i4, i7'=1

Dependency graph:
0 -> 3, 0 -> 4
1 -> 0, 1 -> 1, 1 -> 6
2 -> 0, 2 -> 1, 2 -> 6
4 -> 1, 4 -> 6
5 -> 3, 5 -> 4
6 -> 0, 6 -> 1

	Trace

	5[(-1+i1 == 0)]
	4[(-3+i1 == 0 /\ -1+it3 >= 0 /\ -1+i6 >= 0)]
	6[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{}
	{}
	{1[T], 6[T]}
	
Step with 0

	Trace

	5[(-1+i1 == 0)]
	4[(-3+i1 == 0 /\ -1+it3 >= 0 /\ -1+i6 >= 0)]
	6[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	0[(-2+i1 == 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{}
	{}
	{1[T], 6[T]}
	{}
	
Accelerate

		Simplified Guard

		Original rule:
		(0 >= 0 /\ 0 == 0 /\ -3+i1 == 0 /\ -1+it3 >= 0 /\ -1+i6 >= 0) /\ i1'=3, i3'=2+i3+it3, i4'=0, i5'=1+i6-it3, i6'=i6-it3, i7'=1
		New rule:
		(-3+i1 == 0 /\ -1+it3 >= 0 /\ -1+i6 >= 0) /\ i1'=3, i3'=2+i3+it3, i4'=0, i5'=1+i6-it3, i6'=i6-it3, i7'=1

	Loop Acceleration

	Original rule:
	(-3+i1 == 0 /\ -1+it3 >= 0 /\ -1+i6 >= 0) /\ i1'=3, i3'=2+i3+it3, i4'=0, i5'=1+i6-it3, i6'=i6-it3, i7'=1
	New rule:
	(-3+i1 >= 0 /\ -1+it3 >= 0 /\ 3-i1 >= 0 /\ -1+i6-it3*(-1+it72) >= 0 /\ -1+it72 >= 0 /\ -1+i6 >= 0) /\ i1'=i1, i3'=2*it72+i3+it72*it3, i4'=0, i5'=1+i6-it3-it3*(-1+it72), i6'=i6-it72*it3, i7'=1

		-3+i1 >= 0 [0]: unchanged
		
		-1+it3 >= 0 [0]: unchanged
		
		3-i1 >= 0 [0]: unchanged
		
		-1+i6 >= 0 [0]: montonic decrease yields (-1+i6-it3*(-1+it72) >= 0 /\ -1+i6 >= 0), dependencies: -1+it3 >= 0
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, -1+it3 >= 0 -> -1+it3 >= 0, 3-i1 >= 0 -> 3-i1 >= 0, -1+i6 >= 0 -> (-1+i6-it3*(-1+it72) >= 0 /\ -1+i6 >= 0)}

	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ -1+it3 >= 0 /\ 3-i1 >= 0 /\ -1+i6-it3*(-1+it72) >= 0 /\ -1+it72 >= 0 /\ -1+i6 >= 0) /\ i1'=i1, i3'=2*it72+i3+it72*it3, i4'=0, i5'=1+i6-it3-it3*(-1+it72), i6'=i6-it72*it3, i7'=1
	New rule:
	(-3+i1 >= 0 /\ -1+it3 >= 0 /\ 3-i1 >= 0 /\ -1+i6-it3*(-1+it72) >= 0 /\ -1+it72 >= 0 /\ -1+i6 >= 0) /\ i3'=2*it72+i3+it72*it3, i4'=0, i5'=1+i6-it3-it3*(-1+it72), i6'=i6-it72*it3, i7'=1
	
	Instantiation

	Original rule:
	(-3+i1 >= 0 /\ -1+it3 >= 0 /\ 3-i1 >= 0 /\ -1+i6-it3*(-1+it72) >= 0 /\ -1+it72 >= 0 /\ -1+i6 >= 0) /\ i3'=2*it72+i3+it72*it3, i4'=0, i5'=1+i6-it3-it3*(-1+it72), i6'=i6-it72*it3, i7'=1
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i6 >= 0) /\ i3'=3*i6+i3, i4'=0, i5'=1, i6'=0, i7'=1

Start location: f3

Location map:
LoAT_sink -> 0
f3 -> 1
f0 -> 2
f2 -> 3
f1 -> 4
f4 -> 5

Rules:
   0: (-2+i1 == 0 /\ -i4 >= 0) /\ i1'=3, i3'=1+i3
   1: (-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i5'=i6, i6'=-1+i6, i7'=i4
   2: (-1+i4 >= 0 /\ -4+i1 == 0 /\ -1+i6 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i6'=-1+i6, i8'=i6, i9'=i4
   3: (-3+i1 == 0 /\ -i6 >= 0) /\ i1'=5, i3'=1+i3, i10'=it2
   4: (-3+i1 == 0 /\ -1+it3 >= 0 /\ -1+i6 >= 0) /\ i1'=2, i3'=1+i3, i4'=it3
   5: -1+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=it6, i6'=it5
   6: (0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+i4, i4'=0, i5'=1+i6-i4, i6'=i6-i4, i7'=1
   7: (0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i6 >= 0) /\ i3'=3*i6+i3, i4'=0, i5'=1, i6'=0, i7'=1

Dependency graph:
0 -> 3, 0 -> 4, 0 -> 7
1 -> 0, 1 -> 1, 1 -> 6
2 -> 0, 2 -> 1, 2 -> 6
4 -> 1, 4 -> 6
5 -> 3, 5 -> 4, 5 -> 7
6 -> 0, 6 -> 1
7 -> 3, 7 -> 4

	Trace

	5[(-1+i1 == 0)]
	7[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{}
	{7[T]}
	
Step with 3

	Trace

	5[(-1+i1 == 0)]
	7[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i6 >= 0)]
	3[(-3+i1 == 0 /\ -i6 >= 0)]
	
	Blocked

	{}
	{}
	{7[T]}
	{}
	
Backtrack

	Trace

	5[(-1+i1 == 0)]
	7[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{}
	{3[T], 7[T]}
	
Backtrack

	Trace

	5[(-1+i1 == 0)]
	
	Blocked

	{}
	{7[T]}
	
Step with 4

	Trace

	5[(-1+i1 == 0)]
	4[(-3+i1 == 0 /\ -1+it3 >= 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{7[T]}
	{}
	
Step with 6

	Trace

	5[(-1+i1 == 0)]
	4[(-3+i1 == 0 /\ -1+it3 >= 0 /\ -1+i6 >= 0)]
	6[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{7[T]}
	{}
	{6[T]}
	
Step with 0

	Trace

	5[(-1+i1 == 0)]
	4[(-3+i1 == 0 /\ -1+it3 >= 0 /\ -1+i6 >= 0)]
	6[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	0[(-2+i1 == 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{7[T]}
	{}
	{1[T], 6[T]}
	{}
	
Covered

	Trace

	5[(-1+i1 == 0)]
	4[(-3+i1 == 0 /\ -1+it3 >= 0 /\ -1+i6 >= 0)]
	6[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{7[T]}
	{}
	{0[T], 1[T], 6[T]}
	
Backtrack

	Trace

	5[(-1+i1 == 0)]
	4[(-3+i1 == 0 /\ -1+it3 >= 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{7[T]}
	{6[T]}
	
Step with 1

	Trace

	5[(-1+i1 == 0)]
	4[(-3+i1 == 0 /\ -1+it3 >= 0 /\ -1+i6 >= 0)]
	1[(-1+i4 >= 0 /\ -2+i1 == 0)]
	
	Blocked

	{}
	{7[T]}
	{6[T]}
	{}
	
Covered

	Trace

	5[(-1+i1 == 0)]
	4[(-3+i1 == 0 /\ -1+it3 >= 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{7[T]}
	{1[T], 6[T]}
	
Backtrack

	Trace

	5[(-1+i1 == 0)]
	
	Blocked

	{}
	{4[T], 7[T]}
	
Step with 3

	Trace

	5[(-1+i1 == 0)]
	3[(-3+i1 == 0 /\ -i6 >= 0)]
	
	Blocked

	{}
	{4[T], 7[T]}
	{}
	
Backtrack

	Trace

	5[(-1+i1 == 0)]
	
	Blocked

	{}
	{3[T], 4[T], 7[T]}
	
Backtrack

	Trace

	Blocked

	{5[T]}
	
Accept

Unbounded


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
MAYBE


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄, X₅, X₆
  Temp_Vars:  H, I
  Locations:  l0, l1, l2, l3, l4
  Return Locations:  
  Transitions:
  t₅: l0(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l2(H, X₁, I, X₃, X₄, X₅, X₆)
  t₁: l1(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l1(X₀-1, X₂, X₂-1, X₀, X₄, X₅, X₆) :|: 1 ≤ X₀
  t₀: l1(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l2(X₀, X₁, X₂, X₃, X₄, X₅, X₆) :|: X₀ ≤ 0
  t₄: l2(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l1(H, X₁, X₂, X₃, X₄, X₅, X₆) :|: 1 ≤ H ∧ 1 ≤ X₂
  t₃: l2(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l4(X₀, X₁, X₂, X₃, X₄, X₅, H) :|: X₂ ≤ 0
  t₂: l3(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l1(X₀-1, X₁, X₂-1, X₃, X₂, X₀, X₆) :|: 1 ≤ X₀ ∧ 1 ≤ X₂


Preprocessing
  Cut unreachable locations [l3] from the program graph


  Eliminate variables [X₁; X₃; X₄; X₅; X₆] that do not contribute to the problem


  Found invariant 0 ≤ X₀ for location l1


  Found invariant X₁ ≤ 0 for location l4


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁
  Temp_Vars:  H, I
  Locations:  l0, l1, l2, l4
  Return Locations:  
  Transitions:
  t₆: l0(X₀, X₁) → l2(H, I)
  t₇: l1(X₀, X₁) → l1(X₀-1, X₁-1) :|: 1 ≤ X₀ ∧ 0 ≤ X₀
  t₈: l1(X₀, X₁) → l2(X₀, X₁) :|: X₀ ≤ 0 ∧ 0 ≤ X₀
  t₉: l2(X₀, X₁) → l1(H, X₁) :|: 1 ≤ H ∧ 1 ≤ X₁
  t₁₀: l2(X₀, X₁) → l4(X₀, X₁) :|: X₁ ≤ 0


  Found invariant 0 ≤ X₀ for location l1_v2


  Found invariant 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l1_v1


  Found invariant X₀ ≤ 0 ∧ 0 ≤ X₀ for location l2_v1


  Found invariant X₁ ≤ 0 for location l4


All Bounds
Timebounds
  Overall timebound:inf {Infinity}
    t₆: 1 {O(1)}
    t₇: inf {Infinity}
    t₈: inf {Infinity}
    t₉: inf {Infinity}
    t₁₀: 1 {O(1)}


Costbounds
  Overall costbound: inf {Infinity}
    t₆: 1 {O(1)}
    t₇: inf {Infinity}
    t₈: inf {Infinity}
    t₉: inf {Infinity}
    t₁₀: 1 {O(1)}


Sizebounds
    t₈, X₀: 0 {O(1)}

