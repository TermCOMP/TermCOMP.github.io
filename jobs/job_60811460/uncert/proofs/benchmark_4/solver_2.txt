MAYBE
WARNING: Excluded non-linear constraints:[B*B*B>=0,0>=B*B*B]
WARNING: Excluded non-linear constraints:[B*B*B>=1,B*B*B>=2*E,1+2*E>=B*B*B]
WARNING: Excluded non-linear constraints:[0>=B*B*B+1,2*E>=B*B*B,1+B*B*B>=2*E]
WARNING: Excluded non-linear constraints:[B*B*B>=0,0>=B*B*B]
WARNING: Excluded non-linear constraints:[B*B*B>=1,B*B*B>=2*L,1+2*L>=B*B*B]
WARNING: Excluded non-linear constraints:[0>=B*B*B+1,2*L>=B*B*B,1+B*B*B>=2*L]
WARNING: Excluded non-linear constraints:[F*F*F>=0,0>=F*F*F]
WARNING: Excluded non-linear constraints:[F*F*F>=1,F*F*F>=2*G,1+2*G>=F*F*F]
WARNING: Excluded non-linear constraints:[0>=F*F*F+1,2*G>=F*F*F,1+F*F*F>=2*G]

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [evalfbb2in/4,evalfbb3in/4]
1. recursive  : [evalfbb3in_loop_cont/7,evalfbb4in/6,evalfbb5in/6]
2. recursive  : [evalfbb5in_loop_cont/9,evalfbb6in/8,evalfbb7in/8]
3. non_recursive  : [evalfstop/5]
4. non_recursive  : [evalfreturnin/5]
5. non_recursive  : [exit_location/1]
6. non_recursive  : [evalfbb7in_loop_cont/6]
7. non_recursive  : [evalfentryin/5]
8. non_recursive  : [evalfstart/5]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into evalfbb3in/4
1. SCC is partially evaluated into evalfbb5in/6
2. SCC is partially evaluated into evalfbb7in/8
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into evalfbb7in_loop_cont/6
7. SCC is partially evaluated into evalfentryin/5
8. SCC is partially evaluated into evalfstart/5

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations evalfbb3in/4 
* CE 15 is refined into CE [16] 
* CE 14 is refined into CE [17] 
* CE 13 is refined into CE [18] 


### Cost equations --> "Loop" of evalfbb3in/4 
* CEs [18] --> Loop 15 
* CEs [16] --> Loop 16 
* CEs [17] --> Loop 17 

### Ranking functions of CR evalfbb3in(C,D,F,G) 
* RF of phase [15]: [C-D]

#### Partial ranking functions of CR evalfbb3in(C,D,F,G) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    C-D


### Specialization of cost equations evalfbb5in/6 
* CE 11 is refined into CE [19] 
* CE 9 is refined into CE [20,21] 
* CE 12 is refined into CE [22] 
* CE 10 is refined into CE [23,24] 


### Cost equations --> "Loop" of evalfbb5in/6 
* CEs [24] --> Loop 18 
* CEs [23] --> Loop 19 
* CEs [19] --> Loop 20 
* CEs [21] --> Loop 21 
* CEs [20] --> Loop 22 
* CEs [22] --> Loop 23 

### Ranking functions of CR evalfbb5in(B,C,D,F,G,H) 
* RF of phase [18]: [B-C,B-D-1]

#### Partial ranking functions of CR evalfbb5in(B,C,D,F,G,H) 
* Partial RF of phase [18]:
  - RF of loop [18:1]:
    B-C
    B-D-1


### Specialization of cost equations evalfbb7in/8 
* CE 5 is refined into CE [25] 
* CE 3 is refined into CE [26,27,28,29,30] 
* CE 6 is refined into CE [31] 
* CE 4 is refined into CE [32,33,34] 


### Cost equations --> "Loop" of evalfbb7in/8 
* CEs [33] --> Loop 24 
* CEs [34] --> Loop 25 
* CEs [32] --> Loop 26 
* CEs [25] --> Loop 27 
* CEs [28] --> Loop 28 
* CEs [27] --> Loop 29 
* CEs [26,30] --> Loop 30 
* CEs [29,31] --> Loop 31 

### Ranking functions of CR evalfbb7in(A,B,C,D,F,G,H,I) 

#### Partial ranking functions of CR evalfbb7in(A,B,C,D,F,G,H,I) 


### Specialization of cost equations evalfbb7in_loop_cont/6 
* CE 7 is refined into CE [35] 
* CE 8 is refined into CE [36] 


### Cost equations --> "Loop" of evalfbb7in_loop_cont/6 
* CEs [35] --> Loop 32 
* CEs [36] --> Loop 33 

### Ranking functions of CR evalfbb7in_loop_cont(A,B,C,D,E,F) 

#### Partial ranking functions of CR evalfbb7in_loop_cont(A,B,C,D,E,F) 


### Specialization of cost equations evalfentryin/5 
* CE 2 is refined into CE [37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52] 


### Cost equations --> "Loop" of evalfentryin/5 
* CEs [51,52] --> Loop 34 
* CEs [49,50] --> Loop 35 
* CEs [47,48] --> Loop 36 
* CEs [43] --> Loop 37 
* CEs [42,46] --> Loop 38 
* CEs [41] --> Loop 39 
* CEs [39,44] --> Loop 40 
* CEs [37,38] --> Loop 41 
* CEs [40,45] --> Loop 42 

### Ranking functions of CR evalfentryin(A,B,C,D,F) 

#### Partial ranking functions of CR evalfentryin(A,B,C,D,F) 


### Specialization of cost equations evalfstart/5 
* CE 1 is refined into CE [53,54,55,56,57,58,59,60,61] 


### Cost equations --> "Loop" of evalfstart/5 
* CEs [61] --> Loop 43 
* CEs [60] --> Loop 44 
* CEs [59] --> Loop 45 
* CEs [58] --> Loop 46 
* CEs [57] --> Loop 47 
* CEs [56] --> Loop 48 
* CEs [55] --> Loop 49 
* CEs [54] --> Loop 50 
* CEs [53] --> Loop 51 

### Ranking functions of CR evalfstart(A,B,C,D,F) 

#### Partial ranking functions of CR evalfstart(A,B,C,D,F) 


Computing Bounds
=====================================

#### Cost of chains of evalfbb3in(C,D,F,G):
* Chain [[15],17]: 1*it(15)+0
  Such that:it(15) =< -D+G

  with precondition: [F=2,C=G,D>=0,C>=D+1] 

* Chain [[15],16]: 1*it(15)+0
  Such that:it(15) =< C-D

  with precondition: [F=3,D>=0,C>=D+1] 

* Chain [17]: 0
  with precondition: [F=2,D=C,D=G,D>=0] 

* Chain [16]: 0
  with precondition: [F=3,D>=0,C>=D] 


#### Cost of chains of evalfbb5in(B,C,D,F,G,H):
* Chain [23]: 0
  with precondition: [F=3,C>=0] 

* Chain [22]: 0
  with precondition: [F=3,C>=0,B>=C+1] 

* Chain [20]: 0
  with precondition: [F=4,H=D,C=G,C>=0,C>=B] 

* Chain [19,[18],23]: 1*it(18)+1*s(3)+1
  Such that:aux(2) =< 1
aux(3) =< B
aux(1) =< aux(3)
it(18) =< aux(3)
aux(1) =< aux(2)+it(18)
s(3) =< it(18)*aux(1)

  with precondition: [C=0,F=3,B>=2] 

* Chain [19,[18],22]: 1*it(18)+1*s(3)+1
  Such that:aux(2) =< 1
aux(4) =< B
aux(1) =< aux(4)
it(18) =< aux(4)
aux(1) =< aux(2)+it(18)
s(3) =< it(18)*aux(1)

  with precondition: [C=0,F=3,B>=3] 

* Chain [19,[18],21]: 2*it(18)+1*s(3)+1
  Such that:aux(2) =< 1
aux(6) =< B
it(18) =< aux(6)
aux(1) =< aux(6)
aux(1) =< aux(2)+it(18)
s(3) =< it(18)*aux(1)

  with precondition: [C=0,F=3,B>=3] 

* Chain [19,[18],20]: 1*it(18)+1*s(3)+1
  Such that:aux(2) =< 1
aux(7) =< G
aux(1) =< aux(7)
it(18) =< aux(7)
aux(1) =< aux(2)+it(18)
s(3) =< it(18)*aux(1)

  with precondition: [C=0,F=4,B=G,B=H+1,B>=2] 

* Chain [19,23]: 1
  with precondition: [C=0,F=3,B>=1] 

* Chain [19,22]: 1
  with precondition: [C=0,F=3,B>=2] 

* Chain [19,21]: 1*s(4)+1
  Such that:s(4) =< 1

  with precondition: [C=0,F=3,B>=2] 

* Chain [19,20]: 1
  with precondition: [B=1,C=0,F=4,G=1,H=0] 


#### Cost of chains of evalfbb7in(A,B,C,D,F,G,H,I):
* Chain [[26]]...: 2*it(26)+0
  with precondition: [A>=0,B=1] 

* Chain [[26],31]: 2*it(26)+0
  with precondition: [B=1,F=3,A>=0] 

* Chain [[26],30]: 2*it(26)+1
  with precondition: [B=1,F=3,A>=0] 

* Chain [[26],27]: 2*it(26)+0
  with precondition: [B=1,F=5,H=1,I=0,A>=0,G>=A+1] 

* Chain [[25]]...: 1*it(25)+0
  with precondition: [A>=0,0>=B] 

* Chain [[25],31]: 1*it(25)+0
  with precondition: [F=3,0>=B,A>=0] 

* Chain [[25],27]: 1*it(25)+0
  with precondition: [F=5,H=0,D=I,0>=B,A>=0,G>=A+1] 

* Chain [[24]]...: 4*it(24)+0
  with precondition: [A>=0,B>=2] 

* Chain [[24],31]: 4*it(24)+0
  with precondition: [F=3,A>=0,B>=2] 

* Chain [[24],30]: 4*it(24)+1
  with precondition: [F=3,A>=0,B>=2] 

* Chain [[24],29]: 4*it(24)+1*s(36)+1*s(38)+1*s(39)+1
  Such that:s(35) =< 1
s(34) =< B
s(36) =< s(35)
s(37) =< s(34)
s(38) =< s(34)
s(37) =< s(35)+s(38)
s(39) =< s(38)*s(37)

  with precondition: [F=3,A>=0,B>=2] 

* Chain [[24],28]: 4*it(24)+3*s(42)+2*s(44)+1
  Such that:s(40) =< 1
s(41) =< B
s(42) =< s(41)
s(43) =< s(41)
s(43) =< s(40)+s(42)
s(44) =< s(42)*s(43)

  with precondition: [F=3,A>=0,B>=3] 

* Chain [[24],27]: 4*it(24)+0
  with precondition: [F=5,B=H,B=I+1,A>=0,B>=2,G>=A+1] 

* Chain [31]: 0
  with precondition: [F=3,A>=0] 

* Chain [30]: 1
  with precondition: [F=3,A>=0,B>=1] 

* Chain [29]: 1*s(36)+1*s(38)+1*s(39)+1
  Such that:s(35) =< 1
s(34) =< B
s(36) =< s(35)
s(37) =< s(34)
s(38) =< s(34)
s(37) =< s(35)+s(38)
s(39) =< s(38)*s(37)

  with precondition: [F=3,A>=0,B>=2] 

* Chain [28]: 3*s(42)+2*s(44)+1
  Such that:s(40) =< 1
s(41) =< B
s(42) =< s(41)
s(43) =< s(41)
s(43) =< s(40)+s(42)
s(44) =< s(42)*s(43)

  with precondition: [F=3,A>=0,B>=3] 

* Chain [27]: 0
  with precondition: [F=5,H=C,I=D,A=G,A>=0] 


#### Cost of chains of evalfbb7in_loop_cont(A,B,C,D,E,F):
* Chain [33]: 0
  with precondition: [A=3] 

* Chain [32]: 0
  with precondition: [A=5] 


#### Cost of chains of evalfentryin(A,B,C,D,F):
* Chain [42]: 0
  with precondition: [] 

* Chain [41]: 1*aux(17)+0
  with precondition: [B=1] 

* Chain [40]: 1*aux(18)+0
  with precondition: [0>=B] 

* Chain [39]: 1
  with precondition: [B>=1] 

* Chain [38]: 2*s(79)+2*s(81)+2*s(82)+16*s(83)+1
  Such that:s(77) =< 1
s(78) =< B
s(79) =< s(77)
s(80) =< s(78)
s(81) =< s(78)
s(80) =< s(77)+s(81)
s(82) =< s(81)*s(80)

  with precondition: [B>=2] 

* Chain [37]: 6*s(87)+4*s(89)+4*s(90)+1
  Such that:s(85) =< 1
s(86) =< B
s(87) =< s(86)
s(88) =< s(86)
s(88) =< s(85)+s(87)
s(89) =< s(87)*s(88)

  with precondition: [B>=3] 

* Chain [36]...: 1*aux(19)+0
  with precondition: [B=1] 

* Chain [35]...: 1*aux(20)+0
  with precondition: [0>=B] 

* Chain [34]...: 1*aux(21)+0
  with precondition: [B>=2] 


#### Cost of chains of evalfstart(A,B,C,D,F):
* Chain [51]: 0
  with precondition: [] 

* Chain [50]: 1*s(97)+0
  with precondition: [B=1] 

* Chain [49]: 1*s(98)+0
  with precondition: [0>=B] 

* Chain [48]: 1
  with precondition: [B>=1] 

* Chain [47]: 2*s(101)+2*s(103)+2*s(104)+16*s(105)+1
  Such that:s(99) =< 1
s(100) =< B
s(101) =< s(99)
s(102) =< s(100)
s(103) =< s(100)
s(102) =< s(99)+s(103)
s(104) =< s(103)*s(102)

  with precondition: [B>=2] 

* Chain [46]: 6*s(108)+4*s(110)+4*s(111)+1
  Such that:s(106) =< 1
s(107) =< B
s(108) =< s(107)
s(109) =< s(107)
s(109) =< s(106)+s(108)
s(110) =< s(108)*s(109)

  with precondition: [B>=3] 

* Chain [45]...: 1*s(112)+0
  with precondition: [B=1] 

* Chain [44]...: 1*s(113)+0
  with precondition: [0>=B] 

* Chain [43]...: 1*s(114)+0
  with precondition: [B>=2] 


Closed-form bounds of evalfstart(A,B,C,D,F): 
-------------------------------------
* Chain [51] with precondition: [] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [50] with precondition: [B=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [49] with precondition: [0>=B] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [48] with precondition: [B>=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [47] with precondition: [B>=2] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [46] with precondition: [B>=3] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [45]... with precondition: [B=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [44]... with precondition: [0>=B] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [43]... with precondition: [B>=2] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of evalfstart(A,B,C,D,F): inf 
Asymptotic class: infinity 
* Total analysis performed in 191 ms.

