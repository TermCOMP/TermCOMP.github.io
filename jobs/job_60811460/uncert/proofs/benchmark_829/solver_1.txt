MAYBE

# LoAT Proof:
WORST_CASE(Omega(n^1),?)

WORST_CASE(Omega(n^1),?)
Initial ITS

Start location: l0

Location map:
LoAT_sink -> 0
l0 -> 1
l1 -> 2
l2 -> 3

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-2+i1 == 0 /\ i4 > 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i5'=2*i5
   2: -2+i1 == 0 /\ i1'=3, i3'=1+i3
   3: (i6 > 0 /\ -3+i1 == 0 /\ i6-i5 < 0) /\ i1'=3, i3'=1+i3, i5'=2*i5, i6'=3*i6

Dependency graph:
0 -> 1, 0 -> 2
1 -> 1, 1 -> 2
2 -> 3
3 -> 3

Step with 0

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 2

	Trace

	0[(-1+i1 == 0)]
	2[(-2+i1 == 0)]
	
	Blocked

	{}
	{}
	{}
	
Step with 3

	Trace

	0[(-1+i1 == 0)]
	2[(-2+i1 == 0)]
	3[(i6 > 0 /\ -3+i1 == 0 /\ i6-i5 < 0)]
	
	Blocked

	{}
	{}
	{}
	{}
	
Step with 3

	Trace

	0[(-1+i1 == 0)]
	2[(-2+i1 == 0)]
	3[(i6 > 0 /\ -3+i1 == 0 /\ i6-i5 < 0)]
	3[(i6 > 0 /\ -3+i1 == 0 /\ i6-i5 < 0)]
	
	Blocked

	{}
	{}
	{}
	{}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	2[(-2+i1 == 0)]
	3[(i6 > 0 /\ -3+i1 == 0 /\ i6-i5 < 0)]
	
	Blocked

	{}
	{}
	{}
	{3[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	2[(-2+i1 == 0)]
	
	Blocked

	{}
	{}
	{3[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{2[T]}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	1[(-2+i1 == 0 /\ i4 > 0)]
	
	Blocked

	{}
	{2[T]}
	{}
	
Poly(n^1)

Accelerate

	Loop Acceleration

	Original rule:
	(-2+i1 == 0 /\ i4 > 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i5'=2*i5
	New rule:
	(-2+i1 >= 0 /\ -1+it27 >= 0 /\ 1+i4-it27 > 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it27, i4'=i4-it27, i5'=i5*2^it27

		-2+i1 >= 0 [0]: unchanged
		
		i4 > 0 [0]: montonic decrease yields 1+i4-it27 > 0
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, i4 > 0 -> 1+i4-it27 > 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-2+i1 >= 0 /\ -1+it27 >= 0 /\ 1+i4-it27 > 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it27, i4'=i4-it27, i5'=i5*2^it27
	New rule:
	(-2+i1 >= 0 /\ -1+it27 >= 0 /\ 1+i4-it27 > 0 /\ 2-i1 >= 0) /\ i3'=i3+it27, i4'=i4-it27, i5'=i5*2^it27
	
	Instantiation

	Original rule:
	(-2+i1 >= 0 /\ -1+it27 >= 0 /\ 1+i4-it27 > 0 /\ 2-i1 >= 0) /\ i3'=i3+it27, i4'=i4-it27, i5'=i5*2^it27
	New rule:
	(1 > 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+i4, i4'=0, i5'=2^i4*i5

Start location: l0

Location map:
LoAT_sink -> 0
l0 -> 1
l1 -> 2
l2 -> 3

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-2+i1 == 0 /\ i4 > 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i5'=2*i5
   2: -2+i1 == 0 /\ i1'=3, i3'=1+i3
   3: (i6 > 0 /\ -3+i1 == 0 /\ i6-i5 < 0) /\ i1'=3, i3'=1+i3, i5'=2*i5, i6'=3*i6
   4: (1 > 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+i4, i4'=0, i5'=2^i4*i5

Dependency graph:
0 -> 1, 0 -> 2, 0 -> 4
1 -> 1, 1 -> 2, 1 -> 4
2 -> 3
3 -> 3
4 -> 1, 4 -> 2

	Trace

	0[(-1+i1 == 0)]
	4[(1 > 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T], 4[T]}
	
Step with 2

	Trace

	0[(-1+i1 == 0)]
	4[(1 > 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	2[(-2+i1 == 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T], 4[T]}
	{}
	
Step with 3

	Trace

	0[(-1+i1 == 0)]
	4[(1 > 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	2[(-2+i1 == 0)]
	3[(i6 > 0 /\ -3+i1 == 0 /\ i6-i5 < 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T], 4[T]}
	{}
	{}
	
Step with 3

	Trace

	0[(-1+i1 == 0)]
	4[(1 > 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	2[(-2+i1 == 0)]
	3[(i6 > 0 /\ -3+i1 == 0 /\ i6-i5 < 0)]
	3[(i6 > 0 /\ -3+i1 == 0 /\ i6-i5 < 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T], 4[T]}
	{}
	{}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	4[(1 > 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	2[(-2+i1 == 0)]
	3[(i6 > 0 /\ -3+i1 == 0 /\ i6-i5 < 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T], 4[T]}
	{}
	{3[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	4[(1 > 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	2[(-2+i1 == 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T], 4[T]}
	{3[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	4[(1 > 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T], 2[T], 4[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{2[T], 4[T]}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	1[(-2+i1 == 0 /\ i4 > 0)]
	
	Blocked

	{}
	{2[T], 4[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{1[T], 2[T], 4[T]}
	
Backtrack

	Trace

	Blocked

	{0[T]}
	
Accept

Poly(n^1)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(EXP))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂) → l1(X₀, X₁, X₂)
  t₁: l1(X₀, X₁, X₂) → l1(X₀-1, 2⋅X₁, X₂) :|: 1 ≤ X₀
  t₂: l1(X₀, X₁, X₂) → l2(X₀, X₁, X₂)
  t₃: l2(X₀, X₁, X₂) → l2(X₀, 2⋅X₁, 3⋅X₂) :|: 1+X₂ ≤ X₁ ∧ 1 ≤ X₂


Preprocessing
Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂) → l1(X₀, X₁, X₂)
  t₁: l1(X₀, X₁, X₂) → l1(X₀-1, 2⋅X₁, X₂) :|: 1 ≤ X₀
  t₂: l1(X₀, X₁, X₂) → l2(X₀, X₁, X₂)
  t₃: l2(X₀, X₁, X₂) → l2(X₀, 2⋅X₁, 3⋅X₂) :|: 1+X₂ ≤ X₁ ∧ 1 ≤ X₂


MPRF for transition t₁: l1(X₀, X₁, X₂) → l1(X₀-1, 2⋅X₁, X₂) :|: 1 ≤ X₀ of depth 1:
  new bound:
    X₀ {O(n)}

  MPRF:
    • l1: [X₀]




TWN: t₃: l2→l2


  cycle: [t₃: l2→l2]
  original loop: (1+X₂ ≤ X₁ ∧ 1 ≤ X₂,(X₁,X₂) -> (2⋅X₁,3⋅X₂))
  transformed loop: (1+X₂ ≤ X₁ ∧ 1 ≤ X₂,(X₁,X₂) -> (2⋅X₁,3⋅X₂))
  loop: (1+X₂ ≤ X₁ ∧ 1 ≤ X₂,(X₁,X₂) -> (2⋅X₁,3⋅X₂))
  order: [X₂; X₁]
closed-form:  X₂: X₂⋅(3)^n
  X₁: X₁⋅(2)^n

  Termination: true
  Formula: 
    0 ≤ 1 ∧ 1 ≤ 0 ∧ 1 ≤ X₂ ∧ 0 ≤ X₁ ∧ X₁ ≤ 0 ∧ 0 ≤ X₂ ∧ X₂ ≤ 0
     ∨ 1 ≤ 0 ∧ 1 ≤ X₂ ∧ 0 ≤ X₁ ∧ X₁ ≤ 0 ∧ 0 ≤ X₂ ∧ X₂ ≤ 0
     ∨ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 0 ≤ X₂ ∧ X₂ ≤ 0
     ∨ 1 ≤ X₂ ∧ 1+X₂ ≤ 0



Stabilization-Threshold for: 1+X₂ ≤ X₁
  alphas_abs: X₁
  M: 0
  N: 1
  Bound: 2⋅X₁+2 {O(n)}

TWN - Lifting for [3: l2->l2] of 2⋅X₁+4 {O(n)}
relevant size-bounds w.r.t. t₂: l1→l2:
X₁: 2^X₀⋅X₁+X₁ {O(EXP)}
Runtime-bound of t₂: 1 {O(1)}
Results in: 2⋅2^X₀⋅X₁+2⋅X₁+4 {O(EXP)}
  Found invariant 3 ≤ X₂ ∧ 7 ≤ X₁+X₂ ∧ 4 ≤ X₁ for location l2_v1


All Bounds
Timebounds
  Overall timebound:2⋅2^X₀⋅X₁+2⋅X₁+X₀+6 {O(EXP)}
    t₀: 1 {O(1)}
    t₁: X₀ {O(n)}
    t₂: 1 {O(1)}
    t₃: 2⋅2^X₀⋅X₁+2⋅X₁+4 {O(EXP)}


Costbounds
  Overall costbound: 2⋅2^X₀⋅X₁+2⋅X₁+X₀+6 {O(EXP)}
    t₀: 1 {O(1)}
    t₁: X₀ {O(n)}
    t₂: 1 {O(1)}
    t₃: 2⋅2^X₀⋅X₁+2⋅X₁+4 {O(EXP)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₀, X₂: X₂ {O(n)}
    t₁, X₀: X₀ {O(n)}
    t₁, X₁: 2^X₀⋅X₁ {O(EXP)}
    t₁, X₂: X₂ {O(n)}
    t₂, X₀: 2⋅X₀ {O(n)}
    t₂, X₁: 2^X₀⋅X₁+X₁ {O(EXP)}
    t₂, X₂: 2⋅X₂ {O(n)}
    t₃, X₀: 2⋅X₀ {O(n)}
    t₃, X₁: 2^(2⋅2^X₀⋅X₁+2⋅X₁+4)⋅X₁+2^(2⋅2^X₀⋅X₁+2⋅X₁+X₀+4)⋅X₁ {O(EXP^O(EXP))}
    t₃, X₂: 2⋅3^(2⋅2^X₀⋅X₁+2⋅X₁+4)⋅X₂ {O(EXP^O(EXP))}

