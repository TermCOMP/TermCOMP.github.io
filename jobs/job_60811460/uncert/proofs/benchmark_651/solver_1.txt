WORST_CASE(?,O(1))

# LoAT Proof:
Initial ITS

Start location: eval_easy1_start

Location map:
LoAT_sink -> 0
eval_easy1_start -> 1
eval_easy1_bb0_in -> 2
eval_easy1_1 -> 3
eval_easy1_2 -> 4
eval_easy1_3 -> 5
eval_easy1_4 -> 6
eval_easy1_5 -> 7
eval_easy1_6 -> 8
eval_easy1_bb1_in -> 9
eval_easy1_bb2_in -> 10
eval_easy1_bb3_in -> 11
eval_easy1_stop -> 12

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: -2+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=it2
   2: -3+i1 == 0 /\ i1'=4, i3'=1+i3
   3: -4+i1 == 0 /\ i1'=5, i3'=1+i3
   4: -5+i1 == 0 /\ i1'=6, i3'=1+i3
   5: -6+i1 == 0 /\ i1'=7, i3'=1+i3
   6: -7+i1 == 0 /\ i1'=8, i3'=1+i3
   7: -8+i1 == 0 /\ i1'=9, i3'=1+i3, i5'=0
   8: (-40+i5 < 0 /\ -9+i1 == 0) /\ i1'=10, i3'=1+i3
   9: (-40+i5 >= 0 /\ -9+i1 == 0) /\ i1'=11, i3'=1+i3
  10: (i4 == 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i5'=1+i5
  11: (i4 < 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i5'=2+i5
  12: (i4 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i5'=2+i5
  13: -11+i1 == 0 /\ i1'=12, i3'=1+i3

Dependency graph:
0 -> 1
1 -> 2
2 -> 3
3 -> 4
4 -> 5
5 -> 6
6 -> 7
7 -> 8, 7 -> 9
8 -> 10, 8 -> 11, 8 -> 12
9 -> 13
10 -> 8, 10 -> 9
11 -> 8, 11 -> 9
12 -> 8, 12 -> 9

Chained Linear Paths

	Applied Chaining

	First rule:
	-1+i1 == 0 /\ i1'=2, i3'=1+i3
	Second rule:
	-2+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=it2
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=it2
	
	Applied Deletion

	Removed the following rules: 0, 1
	
	Applied Chaining

	First rule:
	-3+i1 == 0 /\ i1'=4, i3'=1+i3
	Second rule:
	-4+i1 == 0 /\ i1'=5, i3'=1+i3
	New rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 2, 3
	
	Applied Chaining

	First rule:
	-5+i1 == 0 /\ i1'=6, i3'=1+i3
	Second rule:
	-6+i1 == 0 /\ i1'=7, i3'=1+i3
	New rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=7, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 4, 5
	
	Applied Chaining

	First rule:
	-7+i1 == 0 /\ i1'=8, i3'=1+i3
	Second rule:
	-8+i1 == 0 /\ i1'=9, i3'=1+i3, i5'=0
	New rule:
	(0 == 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3, i5'=0
	
	Applied Deletion

	Removed the following rules: 6, 7
	
	Applied Chaining

	First rule:
	(-40+i5 >= 0 /\ -9+i1 == 0) /\ i1'=11, i3'=1+i3
	Second rule:
	-11+i1 == 0 /\ i1'=12, i3'=1+i3
	New rule:
	(0 == 0 /\ -40+i5 >= 0 /\ -9+i1 == 0) /\ i1'=12, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 9, 13
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=it2
	Second rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3, i4'=it2
	
	Applied Deletion

	Removed the following rules: 14, 15
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=7, i3'=2+i3
	Second rule:
	(0 == 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3, i5'=0
	New rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=9, i3'=4+i3, i5'=0
	
	Applied Deletion

	Removed the following rules: 16, 17
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3, i4'=it2
	Second rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=9, i3'=4+i3, i5'=0
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=9, i3'=8+i3, i4'=it2, i5'=0
	
	Applied Deletion

	Removed the following rules: 19, 20

Start location: eval_easy1_start

Location map:
LoAT_sink -> 0
eval_easy1_start -> 1
eval_easy1_bb0_in -> 2
eval_easy1_1 -> 3
eval_easy1_2 -> 4
eval_easy1_3 -> 5
eval_easy1_4 -> 6
eval_easy1_5 -> 7
eval_easy1_6 -> 8
eval_easy1_bb1_in -> 9
eval_easy1_bb2_in -> 10
eval_easy1_bb3_in -> 11
eval_easy1_stop -> 12

Rules:
   8: (-40+i5 < 0 /\ -9+i1 == 0) /\ i1'=10, i3'=1+i3
  10: (i4 == 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i5'=1+i5
  11: (i4 < 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i5'=2+i5
  12: (i4 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i5'=2+i5
  18: (0 == 0 /\ -40+i5 >= 0 /\ -9+i1 == 0) /\ i1'=12, i3'=2+i3
  21: (0 == 0 /\ -1+i1 == 0) /\ i1'=9, i3'=8+i3, i4'=it2, i5'=0

Dependency graph:
8 -> 10, 8 -> 11, 8 -> 12
10 -> 8, 10 -> 18
11 -> 8, 11 -> 18
12 -> 8, 12 -> 18
21 -> 8, 21 -> 18

Preprocessed Transitions

	Simplified Guard

	Original rule:
	(0 == 0 /\ -40+i5 >= 0 /\ -9+i1 == 0) /\ i1'=12, i3'=2+i3
	New rule:
	(-40+i5 >= 0 /\ -9+i1 == 0) /\ i1'=12, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=9, i3'=8+i3, i4'=it2, i5'=0
	New rule:
	-1+i1 == 0 /\ i1'=9, i3'=8+i3, i4'=it2, i5'=0

Start location: eval_easy1_start

Location map:
LoAT_sink -> 0
eval_easy1_start -> 1
eval_easy1_bb0_in -> 2
eval_easy1_1 -> 3
eval_easy1_2 -> 4
eval_easy1_3 -> 5
eval_easy1_4 -> 6
eval_easy1_5 -> 7
eval_easy1_6 -> 8
eval_easy1_bb1_in -> 9
eval_easy1_bb2_in -> 10
eval_easy1_bb3_in -> 11
eval_easy1_stop -> 12

Rules:
   8: (-40+i5 < 0 /\ -9+i1 == 0) /\ i1'=10, i3'=1+i3
  10: (i4 == 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i5'=1+i5
  11: (i4 < 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i5'=2+i5
  12: (i4 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i5'=2+i5
  22: (-40+i5 >= 0 /\ -9+i1 == 0) /\ i1'=12, i3'=2+i3
  23: -1+i1 == 0 /\ i1'=9, i3'=8+i3, i4'=it2, i5'=0

Dependency graph:
8 -> 10, 8 -> 11, 8 -> 12
10 -> 8, 10 -> 22
11 -> 8, 11 -> 22
12 -> 8, 12 -> 22
23 -> 8, 23 -> 22

Refined Dependency Graph

	Removed the following edges: 23 -> 22

Start location: eval_easy1_start

Location map:
LoAT_sink -> 0
eval_easy1_start -> 1
eval_easy1_bb0_in -> 2
eval_easy1_1 -> 3
eval_easy1_2 -> 4
eval_easy1_3 -> 5
eval_easy1_4 -> 6
eval_easy1_5 -> 7
eval_easy1_6 -> 8
eval_easy1_bb1_in -> 9
eval_easy1_bb2_in -> 10
eval_easy1_bb3_in -> 11
eval_easy1_stop -> 12

Rules:
   8: (-40+i5 < 0 /\ -9+i1 == 0) /\ i1'=10, i3'=1+i3
  10: (i4 == 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i5'=1+i5
  11: (i4 < 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i5'=2+i5
  12: (i4 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i5'=2+i5
  22: (-40+i5 >= 0 /\ -9+i1 == 0) /\ i1'=12, i3'=2+i3
  23: -1+i1 == 0 /\ i1'=9, i3'=8+i3, i4'=it2, i5'=0

Dependency graph:
8 -> 10, 8 -> 11, 8 -> 12
10 -> 8, 10 -> 22
11 -> 8, 11 -> 22
12 -> 8, 12 -> 22
23 -> 8

Step with 23

	Trace

	23[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 8

	Trace

	23[(-1+i1 == 0)]
	8[(-40+i5 < 0 /\ -9+i1 == 0)]
	
	Blocked

	{}
	{}
	{}
	
Step with 12

	Trace

	23[(-1+i1 == 0)]
	8[(-40+i5 < 0 /\ -9+i1 == 0)]
	12[(i4 > 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{}
	{}
	{}
	
Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -40+i5 < 0 /\ -9+i1 == 0 /\ i4 > 0) /\ i1'=9, i3'=2+i3, i5'=2+i5
		New rule:
		(-40+i5 < 0 /\ -9+i1 == 0 /\ i4 > 0) /\ i1'=9, i3'=2+i3, i5'=2+i5

	Loop Acceleration

	Original rule:
	(-40+i5 < 0 /\ -9+i1 == 0 /\ i4 > 0) /\ i1'=9, i3'=2+i3, i5'=2+i5
	New rule:
	(-9+i1 >= 0 /\ 42-i5-2*it16 > 0 /\ i4 > 0 /\ -1+it16 >= 0 /\ 9-i1 >= 0) /\ i1'=i1, i3'=i3+2*it16, i5'=i5+2*it16

		40-i5 > 0 [0]: montonic decrease yields 42-i5-2*it16 > 0
		
		-9+i1 >= 0 [0]: unchanged
		
		i4 > 0 [0]: unchanged
		
		9-i1 >= 0 [0]: unchanged
		
		Replacement map: {40-i5 > 0 -> 42-i5-2*it16 > 0, -9+i1 >= 0 -> -9+i1 >= 0, i4 > 0 -> i4 > 0, 9-i1 >= 0 -> 9-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-9+i1 >= 0 /\ 42-i5-2*it16 > 0 /\ i4 > 0 /\ -1+it16 >= 0 /\ 9-i1 >= 0) /\ i1'=i1, i3'=i3+2*it16, i5'=i5+2*it16
	New rule:
	(-9+i1 >= 0 /\ 42-i5-2*it16 > 0 /\ i4 > 0 /\ -1+it16 >= 0 /\ 9-i1 >= 0) /\ i3'=i3+2*it16, i5'=i5+2*it16

Start location: eval_easy1_start

Location map:
LoAT_sink -> 0
eval_easy1_start -> 1
eval_easy1_bb0_in -> 2
eval_easy1_1 -> 3
eval_easy1_2 -> 4
eval_easy1_3 -> 5
eval_easy1_4 -> 6
eval_easy1_5 -> 7
eval_easy1_6 -> 8
eval_easy1_bb1_in -> 9
eval_easy1_bb2_in -> 10
eval_easy1_bb3_in -> 11
eval_easy1_stop -> 12

Rules:
   8: (-40+i5 < 0 /\ -9+i1 == 0) /\ i1'=10, i3'=1+i3
  10: (i4 == 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i5'=1+i5
  11: (i4 < 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i5'=2+i5
  12: (i4 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i5'=2+i5
  22: (-40+i5 >= 0 /\ -9+i1 == 0) /\ i1'=12, i3'=2+i3
  23: -1+i1 == 0 /\ i1'=9, i3'=8+i3, i4'=it2, i5'=0
  24: (-9+i1 >= 0 /\ 42-i5-2*it16 > 0 /\ i4 > 0 /\ -1+it16 >= 0 /\ 9-i1 >= 0) /\ i3'=i3+2*it16, i5'=i5+2*it16

Dependency graph:
8 -> 10, 8 -> 11, 8 -> 12
10 -> 8, 10 -> 22, 10 -> 24
11 -> 8, 11 -> 22, 11 -> 24
12 -> 8, 12 -> 22, 12 -> 24
23 -> 8, 23 -> 24
24 -> 8, 24 -> 22

	Trace

	23[(-1+i1 == 0)]
	24[(-9+i1 >= 0 /\ 42-i5-2*it16 > 0 /\ i4 > 0 /\ -1+it16 >= 0 /\ 9-i1 >= 0)]
	
	Blocked

	{}
	{}
	{24[T]}
	
Step with 22

	Trace

	23[(-1+i1 == 0)]
	24[(-9+i1 >= 0 /\ 42-i5-2*it16 > 0 /\ i4 > 0 /\ -1+it16 >= 0 /\ 9-i1 >= 0)]
	22[(-40+i5 >= 0 /\ -9+i1 == 0)]
	
	Blocked

	{}
	{}
	{24[T]}
	{}
	
Backtrack

	Trace

	23[(-1+i1 == 0)]
	24[(-9+i1 >= 0 /\ 42-i5-2*it16 > 0 /\ i4 > 0 /\ -1+it16 >= 0 /\ 9-i1 >= 0)]
	
	Blocked

	{}
	{}
	{22[T], 24[T]}
	
Step with 8

	Trace

	23[(-1+i1 == 0)]
	24[(-9+i1 >= 0 /\ 42-i5-2*it16 > 0 /\ i4 > 0 /\ -1+it16 >= 0 /\ 9-i1 >= 0)]
	8[(-40+i5 < 0 /\ -9+i1 == 0)]
	
	Blocked

	{}
	{}
	{22[T], 24[T]}
	{}
	
Step with 12

	Trace

	23[(-1+i1 == 0)]
	24[(-9+i1 >= 0 /\ 42-i5-2*it16 > 0 /\ i4 > 0 /\ -1+it16 >= 0 /\ 9-i1 >= 0)]
	8[(-40+i5 < 0 /\ -9+i1 == 0)]
	12[(i4 > 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{}
	{22[T], 24[T]}
	{10[T], 11[T]}
	{}
	
Covered

	Trace

	23[(-1+i1 == 0)]
	24[(-9+i1 >= 0 /\ 42-i5-2*it16 > 0 /\ i4 > 0 /\ -1+it16 >= 0 /\ 9-i1 >= 0)]
	8[(-40+i5 < 0 /\ -9+i1 == 0)]
	
	Blocked

	{}
	{}
	{22[T], 24[T]}
	{10[T], 11[T], 12[T]}
	
Backtrack

	Trace

	23[(-1+i1 == 0)]
	24[(-9+i1 >= 0 /\ 42-i5-2*it16 > 0 /\ i4 > 0 /\ -1+it16 >= 0 /\ 9-i1 >= 0)]
	
	Blocked

	{}
	{}
	{8[T], 22[T], 24[T]}
	
Backtrack

	Trace

	23[(-1+i1 == 0)]
	
	Blocked

	{}
	{24[T]}
	
Step with 8

	Trace

	23[(-1+i1 == 0)]
	8[(-40+i5 < 0 /\ -9+i1 == 0)]
	
	Blocked

	{}
	{24[T]}
	{}
	
Step with 10

	Trace

	23[(-1+i1 == 0)]
	8[(-40+i5 < 0 /\ -9+i1 == 0)]
	10[(i4 == 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{24[T]}
	{}
	{}
	
Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -40+i5 < 0 /\ -9+i1 == 0 /\ i4 == 0) /\ i1'=9, i3'=2+i3, i5'=1+i5
		New rule:
		(-40+i5 < 0 /\ -9+i1 == 0 /\ i4 == 0) /\ i1'=9, i3'=2+i3, i5'=1+i5

	Loop Acceleration

	Original rule:
	(-40+i5 < 0 /\ -9+i1 == 0 /\ i4 == 0) /\ i1'=9, i3'=2+i3, i5'=1+i5
	New rule:
	(-9+i1 >= 0 /\ 41-it142-i5 > 0 /\ i4 >= 0 /\ 9-i1 >= 0 /\ -1+it142 >= 0 /\ -i4 >= 0) /\ i1'=i1, i3'=2*it142+i3, i5'=it142+i5

		40-i5 > 0 [0]: montonic decrease yields 41-it142-i5 > 0
		
		-9+i1 >= 0 [0]: unchanged
		
		i4 >= 0 [0]: unchanged
		
		9-i1 >= 0 [0]: unchanged
		
		-i4 >= 0 [0]: unchanged
		
		Replacement map: {40-i5 > 0 -> 41-it142-i5 > 0, -9+i1 >= 0 -> -9+i1 >= 0, i4 >= 0 -> i4 >= 0, 9-i1 >= 0 -> 9-i1 >= 0, -i4 >= 0 -> -i4 >= 0}

	Removed Trivial Updates

	Original rule:
	(-9+i1 >= 0 /\ 41-it142-i5 > 0 /\ i4 >= 0 /\ 9-i1 >= 0 /\ -1+it142 >= 0 /\ -i4 >= 0) /\ i1'=i1, i3'=2*it142+i3, i5'=it142+i5
	New rule:
	(-9+i1 >= 0 /\ 41-it142-i5 > 0 /\ i4 >= 0 /\ 9-i1 >= 0 /\ -1+it142 >= 0 /\ -i4 >= 0) /\ i3'=2*it142+i3, i5'=it142+i5
	
	Instantiation

	Original rule:
	(-9+i1 >= 0 /\ 41-it142-i5 > 0 /\ i4 >= 0 /\ 9-i1 >= 0 /\ -1+it142 >= 0 /\ -i4 >= 0) /\ i3'=2*it142+i3, i5'=it142+i5
	New rule:
	(1 > 0 /\ -9+i1 >= 0 /\ i4 >= 0 /\ 39-i5 >= 0 /\ 9-i1 >= 0 /\ -i4 >= 0) /\ i3'=80+i3-2*i5, i5'=40

Start location: eval_easy1_start

Location map:
LoAT_sink -> 0
eval_easy1_start -> 1
eval_easy1_bb0_in -> 2
eval_easy1_1 -> 3
eval_easy1_2 -> 4
eval_easy1_3 -> 5
eval_easy1_4 -> 6
eval_easy1_5 -> 7
eval_easy1_6 -> 8
eval_easy1_bb1_in -> 9
eval_easy1_bb2_in -> 10
eval_easy1_bb3_in -> 11
eval_easy1_stop -> 12

Rules:
   8: (-40+i5 < 0 /\ -9+i1 == 0) /\ i1'=10, i3'=1+i3
  10: (i4 == 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i5'=1+i5
  11: (i4 < 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i5'=2+i5
  12: (i4 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i5'=2+i5
  22: (-40+i5 >= 0 /\ -9+i1 == 0) /\ i1'=12, i3'=2+i3
  23: -1+i1 == 0 /\ i1'=9, i3'=8+i3, i4'=it2, i5'=0
  24: (-9+i1 >= 0 /\ 42-i5-2*it16 > 0 /\ i4 > 0 /\ -1+it16 >= 0 /\ 9-i1 >= 0) /\ i3'=i3+2*it16, i5'=i5+2*it16
  25: (1 > 0 /\ -9+i1 >= 0 /\ i4 >= 0 /\ 39-i5 >= 0 /\ 9-i1 >= 0 /\ -i4 >= 0) /\ i3'=80+i3-2*i5, i5'=40

Dependency graph:
8 -> 10, 8 -> 11, 8 -> 12
10 -> 8, 10 -> 22, 10 -> 24, 10 -> 25
11 -> 8, 11 -> 22, 11 -> 24, 11 -> 25
12 -> 8, 12 -> 22, 12 -> 24, 12 -> 25
23 -> 8, 23 -> 24, 23 -> 25
24 -> 8, 24 -> 22, 24 -> 25
25 -> 8, 25 -> 22, 25 -> 24

	Trace

	23[(-1+i1 == 0)]
	25[(1 > 0 /\ -9+i1 >= 0 /\ i4 >= 0 /\ 39-i5 >= 0 /\ 9-i1 >= 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{24[T]}
	{25[T]}
	
Step with 22

	Trace

	23[(-1+i1 == 0)]
	25[(1 > 0 /\ -9+i1 >= 0 /\ i4 >= 0 /\ 39-i5 >= 0 /\ 9-i1 >= 0 /\ -i4 >= 0)]
	22[(-40+i5 >= 0 /\ -9+i1 == 0)]
	
	Blocked

	{}
	{24[T]}
	{8[T], 24[T], 25[T]}
	{}
	
Backtrack

	Trace

	23[(-1+i1 == 0)]
	25[(1 > 0 /\ -9+i1 >= 0 /\ i4 >= 0 /\ 39-i5 >= 0 /\ 9-i1 >= 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{24[T]}
	{8[T], 22[T], 24[T], 25[T]}
	
Backtrack

	Trace

	23[(-1+i1 == 0)]
	
	Blocked

	{}
	{24[T], 25[T]}
	
Step with 8

	Trace

	23[(-1+i1 == 0)]
	8[(-40+i5 < 0 /\ -9+i1 == 0)]
	
	Blocked

	{}
	{24[T], 25[T]}
	{}
	
Step with 12

	Trace

	23[(-1+i1 == 0)]
	8[(-40+i5 < 0 /\ -9+i1 == 0)]
	12[(i4 > 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{24[T], 25[T]}
	{}
	{}
	
Covered

	Trace

	23[(-1+i1 == 0)]
	8[(-40+i5 < 0 /\ -9+i1 == 0)]
	
	Blocked

	{}
	{24[T], 25[T]}
	{12[T]}
	
Step with 10

	Trace

	23[(-1+i1 == 0)]
	8[(-40+i5 < 0 /\ -9+i1 == 0)]
	10[(i4 == 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{24[T], 25[T]}
	{12[T]}
	{}
	
Covered

	Trace

	23[(-1+i1 == 0)]
	8[(-40+i5 < 0 /\ -9+i1 == 0)]
	
	Blocked

	{}
	{24[T], 25[T]}
	{10[T], 12[T]}
	
Step with 11

	Trace

	23[(-1+i1 == 0)]
	8[(-40+i5 < 0 /\ -9+i1 == 0)]
	11[(i4 < 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{24[T], 25[T]}
	{10[T], 12[T]}
	{}
	
Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -40+i5 < 0 /\ -9+i1 == 0 /\ i4 < 0) /\ i1'=9, i3'=2+i3, i5'=2+i5
		New rule:
		(-40+i5 < 0 /\ -9+i1 == 0 /\ i4 < 0) /\ i1'=9, i3'=2+i3, i5'=2+i5

	Loop Acceleration

	Original rule:
	(-40+i5 < 0 /\ -9+i1 == 0 /\ i4 < 0) /\ i1'=9, i3'=2+i3, i5'=2+i5
	New rule:
	(-1+it167 >= 0 /\ -9+i1 >= 0 /\ 42-i5-2*it167 > 0 /\ 9-i1 >= 0 /\ -i4 > 0) /\ i1'=i1, i3'=i3+2*it167, i5'=i5+2*it167

		40-i5 > 0 [0]: montonic decrease yields 42-i5-2*it167 > 0
		
		-9+i1 >= 0 [0]: unchanged
		
		9-i1 >= 0 [0]: unchanged
		
		-i4 > 0 [0]: unchanged
		
		Replacement map: {40-i5 > 0 -> 42-i5-2*it167 > 0, -9+i1 >= 0 -> -9+i1 >= 0, 9-i1 >= 0 -> 9-i1 >= 0, -i4 > 0 -> -i4 > 0}

	Removed Trivial Updates

	Original rule:
	(-1+it167 >= 0 /\ -9+i1 >= 0 /\ 42-i5-2*it167 > 0 /\ 9-i1 >= 0 /\ -i4 > 0) /\ i1'=i1, i3'=i3+2*it167, i5'=i5+2*it167
	New rule:
	(-1+it167 >= 0 /\ -9+i1 >= 0 /\ 42-i5-2*it167 > 0 /\ 9-i1 >= 0 /\ -i4 > 0) /\ i3'=i3+2*it167, i5'=i5+2*it167

Start location: eval_easy1_start

Location map:
LoAT_sink -> 0
eval_easy1_start -> 1
eval_easy1_bb0_in -> 2
eval_easy1_1 -> 3
eval_easy1_2 -> 4
eval_easy1_3 -> 5
eval_easy1_4 -> 6
eval_easy1_5 -> 7
eval_easy1_6 -> 8
eval_easy1_bb1_in -> 9
eval_easy1_bb2_in -> 10
eval_easy1_bb3_in -> 11
eval_easy1_stop -> 12

Rules:
   8: (-40+i5 < 0 /\ -9+i1 == 0) /\ i1'=10, i3'=1+i3
  10: (i4 == 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i5'=1+i5
  11: (i4 < 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i5'=2+i5
  12: (i4 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i5'=2+i5
  22: (-40+i5 >= 0 /\ -9+i1 == 0) /\ i1'=12, i3'=2+i3
  23: -1+i1 == 0 /\ i1'=9, i3'=8+i3, i4'=it2, i5'=0
  24: (-9+i1 >= 0 /\ 42-i5-2*it16 > 0 /\ i4 > 0 /\ -1+it16 >= 0 /\ 9-i1 >= 0) /\ i3'=i3+2*it16, i5'=i5+2*it16
  25: (1 > 0 /\ -9+i1 >= 0 /\ i4 >= 0 /\ 39-i5 >= 0 /\ 9-i1 >= 0 /\ -i4 >= 0) /\ i3'=80+i3-2*i5, i5'=40
  26: (-1+it167 >= 0 /\ -9+i1 >= 0 /\ 42-i5-2*it167 > 0 /\ 9-i1 >= 0 /\ -i4 > 0) /\ i3'=i3+2*it167, i5'=i5+2*it167

Dependency graph:
8 -> 10, 8 -> 11, 8 -> 12
10 -> 8, 10 -> 22, 10 -> 24, 10 -> 25, 10 -> 26
11 -> 8, 11 -> 22, 11 -> 24, 11 -> 25, 11 -> 26
12 -> 8, 12 -> 22, 12 -> 24, 12 -> 25, 12 -> 26
23 -> 8, 23 -> 24, 23 -> 25, 23 -> 26
24 -> 8, 24 -> 22, 24 -> 25, 24 -> 26
25 -> 8, 25 -> 22, 25 -> 24, 25 -> 26
26 -> 8, 26 -> 22, 26 -> 24, 26 -> 25

	Trace

	23[(-1+i1 == 0)]
	26[(-1+it167 >= 0 /\ -9+i1 >= 0 /\ 42-i5-2*it167 > 0 /\ 9-i1 >= 0 /\ -i4 > 0)]
	
	Blocked

	{}
	{24[T], 25[T]}
	{26[T]}
	
Step with 22

	Trace

	23[(-1+i1 == 0)]
	26[(-1+it167 >= 0 /\ -9+i1 >= 0 /\ 42-i5-2*it167 > 0 /\ 9-i1 >= 0 /\ -i4 > 0)]
	22[(-40+i5 >= 0 /\ -9+i1 == 0)]
	
	Blocked

	{}
	{24[T], 25[T]}
	{26[T]}
	{}
	
Backtrack

	Trace

	23[(-1+i1 == 0)]
	26[(-1+it167 >= 0 /\ -9+i1 >= 0 /\ 42-i5-2*it167 > 0 /\ 9-i1 >= 0 /\ -i4 > 0)]
	
	Blocked

	{}
	{24[T], 25[T]}
	{22[T], 26[T]}
	
Step with 8

	Trace

	23[(-1+i1 == 0)]
	26[(-1+it167 >= 0 /\ -9+i1 >= 0 /\ 42-i5-2*it167 > 0 /\ 9-i1 >= 0 /\ -i4 > 0)]
	8[(-40+i5 < 0 /\ -9+i1 == 0)]
	
	Blocked

	{}
	{24[T], 25[T]}
	{22[T], 25[T], 26[T]}
	{}
	
Step with 11

	Trace

	23[(-1+i1 == 0)]
	26[(-1+it167 >= 0 /\ -9+i1 >= 0 /\ 42-i5-2*it167 > 0 /\ 9-i1 >= 0 /\ -i4 > 0)]
	8[(-40+i5 < 0 /\ -9+i1 == 0)]
	11[(i4 < 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{24[T], 25[T]}
	{22[T], 25[T], 26[T]}
	{}
	{}
	
Covered

	Trace

	23[(-1+i1 == 0)]
	26[(-1+it167 >= 0 /\ -9+i1 >= 0 /\ 42-i5-2*it167 > 0 /\ 9-i1 >= 0 /\ -i4 > 0)]
	8[(-40+i5 < 0 /\ -9+i1 == 0)]
	
	Blocked

	{}
	{24[T], 25[T]}
	{22[T], 25[T], 26[T]}
	{11[T]}
	
Backtrack

	Trace

	23[(-1+i1 == 0)]
	26[(-1+it167 >= 0 /\ -9+i1 >= 0 /\ 42-i5-2*it167 > 0 /\ 9-i1 >= 0 /\ -i4 > 0)]
	
	Blocked

	{}
	{24[T], 25[T]}
	{8[T], 22[T], 25[T], 26[T]}
	
Backtrack

	Trace

	23[(-1+i1 == 0)]
	
	Blocked

	{}
	{24[T], 25[T], 26[T]}
	
Step with 8

	Trace

	23[(-1+i1 == 0)]
	8[(-40+i5 < 0 /\ -9+i1 == 0)]
	
	Blocked

	{}
	{24[T], 25[T], 26[T]}
	{}
	
Step with 10

	Trace

	23[(-1+i1 == 0)]
	8[(-40+i5 < 0 /\ -9+i1 == 0)]
	10[(i4 == 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{24[T], 25[T], 26[T]}
	{}
	{}
	
Covered

	Trace

	23[(-1+i1 == 0)]
	8[(-40+i5 < 0 /\ -9+i1 == 0)]
	
	Blocked

	{}
	{24[T], 25[T], 26[T]}
	{10[T]}
	
Step with 12

	Trace

	23[(-1+i1 == 0)]
	8[(-40+i5 < 0 /\ -9+i1 == 0)]
	12[(i4 > 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{24[T], 25[T], 26[T]}
	{10[T]}
	{}
	
Covered

	Trace

	23[(-1+i1 == 0)]
	8[(-40+i5 < 0 /\ -9+i1 == 0)]
	
	Blocked

	{}
	{24[T], 25[T], 26[T]}
	{10[T], 12[T]}
	
Step with 11

	Trace

	23[(-1+i1 == 0)]
	8[(-40+i5 < 0 /\ -9+i1 == 0)]
	11[(i4 < 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{24[T], 25[T], 26[T]}
	{10[T], 12[T]}
	{}
	
Covered

	Trace

	23[(-1+i1 == 0)]
	8[(-40+i5 < 0 /\ -9+i1 == 0)]
	
	Blocked

	{}
	{24[T], 25[T], 26[T]}
	{10[T], 11[T], 12[T]}
	
Backtrack

	Trace

	23[(-1+i1 == 0)]
	
	Blocked

	{}
	{8[T], 24[T], 25[T], 26[T]}
	
Backtrack

	Trace

	Blocked

	{23[T]}
	
Accept

Constant


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁
  Temp_Vars:  nondef_0
  Locations:  l0, l1, l10, l11, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁) → l2(X₀, X₁)
  t₃: l1(X₀, X₁) → l4(X₀, X₁)
  t₁₃: l10(X₀, X₁) → l11(X₀, X₁)
  t₁: l2(X₀, X₁) → l3(nondef_0, X₁)
  t₂: l3(X₀, X₁) → l1(X₀, X₁)
  t₄: l4(X₀, X₁) → l5(X₀, X₁)
  t₅: l5(X₀, X₁) → l6(X₀, X₁)
  t₆: l6(X₀, X₁) → l7(X₀, X₁)
  t₇: l7(X₀, X₁) → l8(X₀, 0)
  t₉: l8(X₀, X₁) → l10(X₀, X₁) :|: 40 ≤ X₁
  t₈: l8(X₀, X₁) → l9(X₀, X₁) :|: X₁ ≤ 39
  t₁₀: l9(X₀, X₁) → l8(X₀, 1+X₁) :|: 0 ≤ X₀ ∧ X₀ ≤ 0
  t₁₁: l9(X₀, X₁) → l8(X₀, 2+X₁) :|: 1+X₀ ≤ 0
  t₁₂: l9(X₀, X₁) → l8(X₀, 2+X₁) :|: 1 ≤ X₀


Preprocessing
  Found invariant 40 ≤ X₁ for location l11


  Found invariant 0 ≤ X₁ for location l8


  Found invariant 40 ≤ X₁ for location l10


  Found invariant X₁ ≤ 39 ∧ 0 ≤ X₁ for location l9


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁
  Temp_Vars:  nondef_0
  Locations:  l0, l1, l10, l11, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁) → l2(X₀, X₁)
  t₃: l1(X₀, X₁) → l4(X₀, X₁)
  t₁₃: l10(X₀, X₁) → l11(X₀, X₁) :|: 40 ≤ X₁
  t₁: l2(X₀, X₁) → l3(nondef_0, X₁)
  t₂: l3(X₀, X₁) → l1(X₀, X₁)
  t₄: l4(X₀, X₁) → l5(X₀, X₁)
  t₅: l5(X₀, X₁) → l6(X₀, X₁)
  t₆: l6(X₀, X₁) → l7(X₀, X₁)
  t₇: l7(X₀, X₁) → l8(X₀, 0)
  t₉: l8(X₀, X₁) → l10(X₀, X₁) :|: 40 ≤ X₁ ∧ 0 ≤ X₁
  t₈: l8(X₀, X₁) → l9(X₀, X₁) :|: X₁ ≤ 39 ∧ 0 ≤ X₁
  t₁₀: l9(X₀, X₁) → l8(X₀, 1+X₁) :|: 0 ≤ X₀ ∧ X₀ ≤ 0 ∧ X₁ ≤ 39 ∧ 0 ≤ X₁
  t₁₁: l9(X₀, X₁) → l8(X₀, 2+X₁) :|: 1+X₀ ≤ 0 ∧ X₁ ≤ 39 ∧ 0 ≤ X₁
  t₁₂: l9(X₀, X₁) → l8(X₀, 2+X₁) :|: 1 ≤ X₀ ∧ X₁ ≤ 39 ∧ 0 ≤ X₁


MPRF for transition t₈: l8(X₀, X₁) → l9(X₀, X₁) :|: X₁ ≤ 39 ∧ 0 ≤ X₁ of depth 1:
  new bound:
    40 {O(1)}

  MPRF:
    • l8: [40-X₁]
    • l9: [39-X₁]




MPRF for transition t₁₀: l9(X₀, X₁) → l8(X₀, 1+X₁) :|: 0 ≤ X₀ ∧ X₀ ≤ 0 ∧ X₁ ≤ 39 ∧ 0 ≤ X₁ of depth 1:
  new bound:
    40 {O(1)}

  MPRF:
    • l8: [40-X₁]
    • l9: [40-X₁]




MPRF for transition t₁₁: l9(X₀, X₁) → l8(X₀, 2+X₁) :|: 1+X₀ ≤ 0 ∧ X₁ ≤ 39 ∧ 0 ≤ X₁ of depth 1:
  new bound:
    40 {O(1)}

  MPRF:
    • l8: [40-X₁]
    • l9: [40-X₁]




MPRF for transition t₁₂: l9(X₀, X₁) → l8(X₀, 2+X₁) :|: 1 ≤ X₀ ∧ X₁ ≤ 39 ∧ 0 ≤ X₁ of depth 1:
  new bound:
    40 {O(1)}

  MPRF:
    • l8: [40-X₁]
    • l9: [40-X₁]




All Bounds
Timebounds
  Overall timebound:170 {O(1)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: 1 {O(1)}
    t₈: 40 {O(1)}
    t₉: 1 {O(1)}
    t₁₀: 40 {O(1)}
    t₁₁: 40 {O(1)}
    t₁₂: 40 {O(1)}
    t₁₃: 1 {O(1)}


Costbounds
  Overall costbound: 170 {O(1)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: 1 {O(1)}
    t₈: 40 {O(1)}
    t₉: 1 {O(1)}
    t₁₀: 40 {O(1)}
    t₁₁: 40 {O(1)}
    t₁₂: 40 {O(1)}
    t₁₃: 1 {O(1)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₁, X₁: X₁ {O(n)}
    t₂, X₁: X₁ {O(n)}
    t₃, X₁: X₁ {O(n)}
    t₄, X₁: X₁ {O(n)}
    t₅, X₁: X₁ {O(n)}
    t₆, X₁: X₁ {O(n)}
    t₇, X₁: 0 {O(1)}
    t₈, X₁: 39 {O(1)}
    t₉, X₁: 41 {O(1)}
    t₁₀, X₀: 0 {O(1)}
    t₁₀, X₁: 40 {O(1)}
    t₁₁, X₁: 41 {O(1)}
    t₁₂, X₁: 41 {O(1)}
    t₁₃, X₁: 41 {O(1)}

