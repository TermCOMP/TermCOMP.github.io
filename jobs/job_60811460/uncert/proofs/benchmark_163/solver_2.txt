WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [cut/7]
1. recursive  : [cut_loop_cont/14,lbl71/13]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [stop/7]
4. non_recursive  : [lbl71_loop_cont/8]
5. non_recursive  : [start/7]
6. non_recursive  : [start0/7]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into cut/7
1. SCC is partially evaluated into lbl71/13
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into lbl71_loop_cont/8
5. SCC is partially evaluated into start/7
6. SCC is partially evaluated into start0/7

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations cut/7 
* CE 12 is refined into CE [13] 
* CE 11 is refined into CE [14] 


### Cost equations --> "Loop" of cut/7 
* CEs [13] --> Loop 13 
* CEs [14] --> Loop 14 

### Ranking functions of CR cut(A,B,C,E,G,H,I) 

#### Partial ranking functions of CR cut(A,B,C,E,G,H,I) 


### Specialization of cost equations lbl71/13 
* CE 4 is refined into CE [15] 
* CE 8 is refined into CE [16] 
* CE 7 is refined into CE [17] 
* CE 6 is refined into CE [18] 
* CE 5 is refined into CE [19] 


### Cost equations --> "Loop" of lbl71/13 
* CEs [18] --> Loop 15 
* CEs [19] --> Loop 16 
* CEs [15] --> Loop 17 
* CEs [16] --> Loop 18 
* CEs [17] --> Loop 19 

### Ranking functions of CR lbl71(A,B,C,D,E,F,G,H,I,J,K,L,M) 

#### Partial ranking functions of CR lbl71(A,B,C,D,E,F,G,H,I,J,K,L,M) 
* Partial RF of phase [15,16]:
  - RF of loop [15:1]:
    A-C-1 depends on loops [16:1] 
    B-C-1 depends on loops [16:1] 
  - RF of loop [16:1]:
    -A+C+2 depends on loops [15:1] 
    A-E-2
    -B+C+2 depends on loops [15:1] 
    B-E-2
    C-1 depends on loops [15:1] 
    C/2-E/2-1/2 depends on loops [15:1] 


### Specialization of cost equations lbl71_loop_cont/8 
* CE 10 is refined into CE [20] 
* CE 9 is refined into CE [21] 


### Cost equations --> "Loop" of lbl71_loop_cont/8 
* CEs [20] --> Loop 20 
* CEs [21] --> Loop 21 

### Ranking functions of CR lbl71_loop_cont(A,B,C,D,E,F,G,H) 

#### Partial ranking functions of CR lbl71_loop_cont(A,B,C,D,E,F,G,H) 


### Specialization of cost equations start/7 
* CE 3 is refined into CE [22,23,24,25,26] 
* CE 2 is refined into CE [27] 


### Cost equations --> "Loop" of start/7 
* CEs [23,25,26] --> Loop 22 
* CEs [24] --> Loop 23 
* CEs [27] --> Loop 24 
* CEs [22] --> Loop 25 

### Ranking functions of CR start(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR start(A,B,C,D,E,F,G) 


### Specialization of cost equations start0/7 
* CE 1 is refined into CE [28,29,30,31] 


### Cost equations --> "Loop" of start0/7 
* CEs [31] --> Loop 26 
* CEs [30] --> Loop 27 
* CEs [29] --> Loop 28 
* CEs [28] --> Loop 29 

### Ranking functions of CR start0(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR start0(A,B,C,D,E,F,G) 


Computing Bounds
=====================================

#### Cost of chains of cut(A,B,C,E,G,H,I):
* Chain [14]: 0
  with precondition: [G=2,H=1,B=A,B=C+1,E=I,E>=1,B>=E+2] 

* Chain [13]: 0
  with precondition: [G=4,B=A,B=C+1,E>=1,B>=E+2] 


#### Cost of chains of lbl71(A,B,C,D,E,F,G,H,I,J,K,L,M):
* Chain [[15,16],19]: 1*it(15)+1*it(16)+0
  Such that:it(16) =< -E+J
aux(31) =< -E+2*J+2
aux(47) =< -C+J
aux(48) =< -C+J+1
aux(49) =< J+1
aux(31) =< aux(49)
aux(37) =< aux(49)
aux(31) =< aux(49)
aux(37) =< aux(31)
aux(38) =< it(16)*aux(37)
aux(1) =< it(16)*aux(37)
aux(32) =< it(16)*aux(31)
aux(3) =< it(16)*aux(31)
aux(22) =< it(16)*aux(49)
aux(1) =< it(16)*aux(49)
aux(3) =< it(16)*aux(49)
aux(5) =< aux(38)
aux(7) =< aux(32)
aux(5) =< aux(22)
aux(7) =< aux(22)
it(15) =< aux(3)+aux(48)
it(15) =< aux(1)+aux(48)
it(15) =< aux(7)+aux(47)
it(15) =< aux(5)+aux(47)

  with precondition: [G=3,A=B,A=H,A=I,A=J+1,D=K,A=L+1,F=M,A>=3,C>=1,E>=0,A>=C+1,A>=E+2,2*A>=C+E+4] 

* Chain [[15,16],18]: 1*it(15)+1*it(16)+0
  Such that:it(16) =< A-E
aux(31) =< 2*A-E
aux(50) =< A
aux(51) =< A-C
aux(52) =< B-C
aux(6) =< aux(51)
aux(6) =< aux(52)
aux(31) =< aux(50)
aux(37) =< aux(50)
aux(31) =< aux(50)
aux(37) =< aux(31)
aux(38) =< it(16)*aux(37)
aux(1) =< it(16)*aux(37)
aux(32) =< it(16)*aux(31)
aux(3) =< it(16)*aux(31)
aux(22) =< it(16)*aux(50)
aux(1) =< it(16)*aux(50)
aux(3) =< it(16)*aux(50)
aux(5) =< aux(38)
aux(7) =< aux(32)
aux(5) =< aux(22)
aux(7) =< aux(22)
it(15) =< aux(3)+aux(51)
it(15) =< aux(1)+aux(51)
it(15) =< aux(7)+aux(6)
it(15) =< aux(5)+aux(6)

  with precondition: [G=4,A=B,A>=3,C>=1,E>=0,A>=C+1,A>=E+2,2*A>=C+E+4] 

* Chain [[15,16],17]: 1*it(15)+1*it(16)+0
  Such that:it(16) =< A-E
aux(31) =< 2*A-E
aux(53) =< A
aux(54) =< A-C
aux(31) =< aux(53)
aux(37) =< aux(53)
aux(31) =< aux(53)
aux(37) =< aux(31)
aux(38) =< it(16)*aux(37)
aux(1) =< it(16)*aux(37)
aux(32) =< it(16)*aux(31)
aux(3) =< it(16)*aux(31)
aux(22) =< it(16)*aux(53)
aux(1) =< it(16)*aux(53)
aux(3) =< it(16)*aux(53)
aux(5) =< aux(38)
aux(7) =< aux(32)
aux(5) =< aux(22)
aux(7) =< aux(22)
it(15) =< aux(3)+aux(54)
it(15) =< aux(1)+aux(54)
it(15) =< aux(7)+aux(54)
it(15) =< aux(5)+aux(54)

  with precondition: [G=4,A=B,C>=1,E>=0,A>=C+1,A>=E+3] 

* Chain [19]: 0
  with precondition: [G=3,B=A,B=C+1,K=D,B=E+2,M=F,B=H,B=I,B=J+1,B=L+1,B>=2] 

* Chain [18]: 0
  with precondition: [G=4,B=A,C>=1,E>=0,B>=C+1,B>=E+2] 


#### Cost of chains of lbl71_loop_cont(A,B,C,D,E,F,G,H):
* Chain [21]: 0
  with precondition: [A=3] 

* Chain [20]: 0
  with precondition: [A=4] 


#### Cost of chains of start(A,B,C,D,E,F,G):
* Chain [25]: 0
  with precondition: [A=2,B=2,D=C,F=E] 

* Chain [24]: 0
  with precondition: [B=A,D=C,F=E,1>=B] 

* Chain [23]: 0
  with precondition: [B=A,D=C,F=E,B>=2] 

* Chain [22]: 3*s(1)+3*s(14)+0
  Such that:aux(58) =< B
aux(59) =< 2*B
s(2) =< aux(59)
s(1) =< aux(58)
s(2) =< aux(58)
s(6) =< aux(58)
s(2) =< aux(58)
s(6) =< s(2)
s(7) =< s(1)*s(6)
s(8) =< s(1)*s(6)
s(9) =< s(1)*s(2)
s(10) =< s(1)*s(2)
s(11) =< s(1)*aux(58)
s(8) =< s(1)*aux(58)
s(10) =< s(1)*aux(58)
s(12) =< s(7)
s(13) =< s(9)
s(12) =< s(11)
s(13) =< s(11)
s(14) =< s(10)+aux(58)
s(14) =< s(8)+aux(58)
s(14) =< s(13)+aux(58)
s(14) =< s(12)+aux(58)

  with precondition: [B=A,D=C,F=E,B>=3] 


#### Cost of chains of start0(A,B,C,D,E,F,G):
* Chain [29]: 0
  with precondition: [A=2] 

* Chain [28]: 0
  with precondition: [1>=A] 

* Chain [27]: 0
  with precondition: [A>=2] 

* Chain [26]: 3*s(46)+3*s(55)+0
  Such that:s(43) =< A
s(44) =< 2*A
s(45) =< s(44)
s(46) =< s(43)
s(45) =< s(43)
s(47) =< s(43)
s(45) =< s(43)
s(47) =< s(45)
s(48) =< s(46)*s(47)
s(49) =< s(46)*s(47)
s(50) =< s(46)*s(45)
s(51) =< s(46)*s(45)
s(52) =< s(46)*s(43)
s(49) =< s(46)*s(43)
s(51) =< s(46)*s(43)
s(53) =< s(48)
s(54) =< s(50)
s(53) =< s(52)
s(54) =< s(52)
s(55) =< s(51)+s(43)
s(55) =< s(49)+s(43)
s(55) =< s(54)+s(43)
s(55) =< s(53)+s(43)

  with precondition: [A>=3] 


Closed-form bounds of start0(A,B,C,D,E,F,G): 
-------------------------------------
* Chain [29] with precondition: [A=2] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [28] with precondition: [1>=A] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [27] with precondition: [A>=2] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [26] with precondition: [A>=3] 
    - Upper bound: 3*A*(2*A)+6*A 
    - Complexity: n^2 

### Maximum cost of start0(A,B,C,D,E,F,G): nat(A)*3*nat(2*A)+nat(A)*6 
Asymptotic class: n^2 
* Total analysis performed in 237 ms.

