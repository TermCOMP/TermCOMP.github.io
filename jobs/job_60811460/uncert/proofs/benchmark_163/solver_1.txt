WORST_CASE(Omega(n^2),O(n^2))

# LoAT Proof:
WORST_CASE(Omega(n^2),?)

WORST_CASE(Omega(n^1),?)
WORST_CASE(Omega(n^2),?)
Initial ITS

Start location: start0

Location map:
LoAT_sink -> 0
start0 -> 1
start -> 2
lbl71 -> 3
stop -> 4
cut -> 5

Rules:
   0: (-i4+i5 == 0 /\ i6-i7 == 0 /\ -2+i1 == 0 /\ -2+i4 >= 0 /\ i8-i9 == 0) /\ i1'=3, i3'=1+i3, i6'=1, i8'=0
   1: (-i4+i5 == 0 /\ i6-i7 == 0 /\ 1-i4 >= 0 /\ -2+i1 == 0 /\ i8-i9 == 0) /\ i1'=4, i3'=1+i3, i6'=0, i8'=1
   2: (-3+i1 == 0 /\ -i4+i5 == 0 /\ -2-i6+i4 >= 0 /\ -2+i4-i8 >= 0 /\ i8 >= 0 /\ -1-i6+i4 >= 0 /\ -1+i6 >= 0) /\ i1'=3, i3'=1+i3, i6'=1+i6
   3: (-3+i1 == 0 /\ -i4+i5 == 0 /\ 1+i6-i4 == 0 /\ -3+i4-i8 >= 0 /\ -2+i4-i8 >= 0 /\ i8 >= 0 /\ -2+i4 >= 0) /\ i1'=5, i3'=1+i3, i8'=1+i8
   4: (-3+i1 == 0 /\ -i4+i5 == 0 /\ 1+i6-i4 == 0 /\ 2-i4+i8 == 0 /\ -2+i4 >= 0) /\ i1'=4, i3'=1+i3, i8'=1+i8
   5: (-i4+i5 == 0 /\ 1+i6-i4 == 0 /\ -2+i4-i8 >= 0 /\ -5+i1 == 0 /\ -1+i8 >= 0 /\ -2+i4 >= 0) /\ i1'=3, i3'=1+i3, i6'=1
   6: (-i4+i5 == 0 /\ 1-i4 >= 0 /\ 1+i6-i4 == 0 /\ -3+i4-i8 >= 0 /\ -2+i4-i8 >= 0 /\ -5+i1 == 0 /\ -1+i8 >= 0) /\ i1'=5, i3'=1+i3, i6'=0, i8'=1+i8
   7: (-i4+i5 == 0 /\ 1-i4 >= 0 /\ 1+i6-i4 == 0 /\ 2-i4+i8 == 0 /\ -5+i1 == 0 /\ -3+i4 >= 0) /\ i1'=4, i3'=1+i3, i6'=0, i8'=1+i8
   8: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i5'=i4, i6'=i7, i8'=i9

Dependency graph:
0 -> 2, 0 -> 3, 0 -> 4
2 -> 2, 2 -> 3, 2 -> 4
3 -> 5, 3 -> 6, 3 -> 7
5 -> 2, 5 -> 3, 5 -> 4
6 -> 5, 6 -> 6, 6 -> 7
8 -> 0, 8 -> 1

Refined Dependency Graph

	Removed the following edges: 0 -> 3, 3 -> 6, 3 -> 7, 5 -> 3, 5 -> 4, 6 -> 5, 6 -> 6, 6 -> 7

Start location: start0

Location map:
LoAT_sink -> 0
start0 -> 1
start -> 2
lbl71 -> 3
stop -> 4
cut -> 5

Rules:
   0: (-i4+i5 == 0 /\ i6-i7 == 0 /\ -2+i1 == 0 /\ -2+i4 >= 0 /\ i8-i9 == 0) /\ i1'=3, i3'=1+i3, i6'=1, i8'=0
   1: (-i4+i5 == 0 /\ i6-i7 == 0 /\ 1-i4 >= 0 /\ -2+i1 == 0 /\ i8-i9 == 0) /\ i1'=4, i3'=1+i3, i6'=0, i8'=1
   2: (-3+i1 == 0 /\ -i4+i5 == 0 /\ -2-i6+i4 >= 0 /\ -2+i4-i8 >= 0 /\ i8 >= 0 /\ -1-i6+i4 >= 0 /\ -1+i6 >= 0) /\ i1'=3, i3'=1+i3, i6'=1+i6
   3: (-3+i1 == 0 /\ -i4+i5 == 0 /\ 1+i6-i4 == 0 /\ -3+i4-i8 >= 0 /\ -2+i4-i8 >= 0 /\ i8 >= 0 /\ -2+i4 >= 0) /\ i1'=5, i3'=1+i3, i8'=1+i8
   4: (-3+i1 == 0 /\ -i4+i5 == 0 /\ 1+i6-i4 == 0 /\ 2-i4+i8 == 0 /\ -2+i4 >= 0) /\ i1'=4, i3'=1+i3, i8'=1+i8
   5: (-i4+i5 == 0 /\ 1+i6-i4 == 0 /\ -2+i4-i8 >= 0 /\ -5+i1 == 0 /\ -1+i8 >= 0 /\ -2+i4 >= 0) /\ i1'=3, i3'=1+i3, i6'=1
   6: (-i4+i5 == 0 /\ 1-i4 >= 0 /\ 1+i6-i4 == 0 /\ -3+i4-i8 >= 0 /\ -2+i4-i8 >= 0 /\ -5+i1 == 0 /\ -1+i8 >= 0) /\ i1'=5, i3'=1+i3, i6'=0, i8'=1+i8
   7: (-i4+i5 == 0 /\ 1-i4 >= 0 /\ 1+i6-i4 == 0 /\ 2-i4+i8 == 0 /\ -5+i1 == 0 /\ -3+i4 >= 0) /\ i1'=4, i3'=1+i3, i6'=0, i8'=1+i8
   8: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i5'=i4, i6'=i7, i8'=i9

Dependency graph:
0 -> 2, 0 -> 4
2 -> 2, 2 -> 3, 2 -> 4
3 -> 5
5 -> 2
8 -> 0, 8 -> 1

Step with 8

	Trace

	8[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 1

	Trace

	8[(-1+i1 == 0)]
	1[(-i4+i5 == 0 /\ i6-i7 == 0 /\ 1-i4 >= 0 /\ -2+i1 == 0 /\ i8-i9 == 0)]
	
	Blocked

	{}
	{}
	{}
	
Backtrack

	Trace

	8[(-1+i1 == 0)]
	
	Blocked

	{}
	{1[T]}
	
Step with 0

	Trace

	8[(-1+i1 == 0)]
	0[(-i4+i5 == 0 /\ i6-i7 == 0 /\ -2+i1 == 0 /\ -2+i4 >= 0 /\ i8-i9 == 0)]
	
	Blocked

	{}
	{1[T]}
	{}
	
Step with 2

	Trace

	8[(-1+i1 == 0)]
	0[(-i4+i5 == 0 /\ i6-i7 == 0 /\ -2+i1 == 0 /\ -2+i4 >= 0 /\ i8-i9 == 0)]
	2[(-3+i1 == 0 /\ -i4+i5 == 0 /\ -2-i6+i4 >= 0 /\ -2+i4-i8 >= 0 /\ i8 >= 0 /\ -1-i6+i4 >= 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{1[T]}
	{}
	{}
	
Poly(n^1)

Accelerate

	Loop Acceleration

	Original rule:
	(-3+i1 == 0 /\ -i4+i5 == 0 /\ -2-i6+i4 >= 0 /\ -2+i4-i8 >= 0 /\ i8 >= 0 /\ -1-i6+i4 >= 0 /\ -1+i6 >= 0) /\ i1'=3, i3'=1+i3, i6'=1+i6
	New rule:
	(-3+i1 >= 0 /\ -i4+i5 >= 0 /\ i4-i5 >= 0 /\ -2+i4-i8 >= 0 /\ -i6-it33+i4 >= 0 /\ 3-i1 >= 0 /\ -1-i6-it33+i4 >= 0 /\ i8 >= 0 /\ -1+it33 >= 0 /\ -1+i6 >= 0) /\ i1'=i1, i3'=i3+it33, i6'=i6+it33

		-3+i1 >= 0 [0]: unchanged
		
		-i4+i5 >= 0 [0]: unchanged
		
		-2-i6+i4 >= 0 [0]: montonic decrease yields -1-i6-it33+i4 >= 0
		
		i4-i5 >= 0 [0]: unchanged
		
		-2+i4-i8 >= 0 [0]: unchanged
		
		3-i1 >= 0 [0]: unchanged
		
		i8 >= 0 [0]: unchanged
		
		-1-i6+i4 >= 0 [0]: montonic decrease yields -i6-it33+i4 >= 0
		
		-1+i6 >= 0 [0]: monotonic increase yields -1+i6 >= 0
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, -i4+i5 >= 0 -> -i4+i5 >= 0, -2-i6+i4 >= 0 -> -1-i6-it33+i4 >= 0, i4-i5 >= 0 -> i4-i5 >= 0, -2+i4-i8 >= 0 -> -2+i4-i8 >= 0, 3-i1 >= 0 -> 3-i1 >= 0, i8 >= 0 -> i8 >= 0, -1-i6+i4 >= 0 -> -i6-it33+i4 >= 0, -1+i6 >= 0 -> -1+i6 >= 0}

	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ -i4+i5 >= 0 /\ i4-i5 >= 0 /\ -2+i4-i8 >= 0 /\ -i6-it33+i4 >= 0 /\ 3-i1 >= 0 /\ -1-i6-it33+i4 >= 0 /\ i8 >= 0 /\ -1+it33 >= 0 /\ -1+i6 >= 0) /\ i1'=i1, i3'=i3+it33, i6'=i6+it33
	New rule:
	(-3+i1 >= 0 /\ -i4+i5 >= 0 /\ i4-i5 >= 0 /\ -2+i4-i8 >= 0 /\ -i6-it33+i4 >= 0 /\ 3-i1 >= 0 /\ -1-i6-it33+i4 >= 0 /\ i8 >= 0 /\ -1+it33 >= 0 /\ -1+i6 >= 0) /\ i3'=i3+it33, i6'=i6+it33
	
	Instantiation

	Original rule:
	(-3+i1 >= 0 /\ -i4+i5 >= 0 /\ i4-i5 >= 0 /\ -2+i4-i8 >= 0 /\ -i6-it33+i4 >= 0 /\ 3-i1 >= 0 /\ -1-i6-it33+i4 >= 0 /\ i8 >= 0 /\ -1+it33 >= 0 /\ -1+i6 >= 0) /\ i3'=i3+it33, i6'=i6+it33
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -i4+i5 >= 0 /\ -2-i6+i4 >= 0 /\ i4-i5 >= 0 /\ -2+i4-i8 >= 0 /\ 3-i1 >= 0 /\ i8 >= 0 /\ -1+i6 >= 0) /\ i3'=-1-i6+i3+i4, i6'=-1+i4

Start location: start0

Location map:
LoAT_sink -> 0
start0 -> 1
start -> 2
lbl71 -> 3
stop -> 4
cut -> 5

Rules:
   0: (-i4+i5 == 0 /\ i6-i7 == 0 /\ -2+i1 == 0 /\ -2+i4 >= 0 /\ i8-i9 == 0) /\ i1'=3, i3'=1+i3, i6'=1, i8'=0
   1: (-i4+i5 == 0 /\ i6-i7 == 0 /\ 1-i4 >= 0 /\ -2+i1 == 0 /\ i8-i9 == 0) /\ i1'=4, i3'=1+i3, i6'=0, i8'=1
   2: (-3+i1 == 0 /\ -i4+i5 == 0 /\ -2-i6+i4 >= 0 /\ -2+i4-i8 >= 0 /\ i8 >= 0 /\ -1-i6+i4 >= 0 /\ -1+i6 >= 0) /\ i1'=3, i3'=1+i3, i6'=1+i6
   3: (-3+i1 == 0 /\ -i4+i5 == 0 /\ 1+i6-i4 == 0 /\ -3+i4-i8 >= 0 /\ -2+i4-i8 >= 0 /\ i8 >= 0 /\ -2+i4 >= 0) /\ i1'=5, i3'=1+i3, i8'=1+i8
   4: (-3+i1 == 0 /\ -i4+i5 == 0 /\ 1+i6-i4 == 0 /\ 2-i4+i8 == 0 /\ -2+i4 >= 0) /\ i1'=4, i3'=1+i3, i8'=1+i8
   5: (-i4+i5 == 0 /\ 1+i6-i4 == 0 /\ -2+i4-i8 >= 0 /\ -5+i1 == 0 /\ -1+i8 >= 0 /\ -2+i4 >= 0) /\ i1'=3, i3'=1+i3, i6'=1
   6: (-i4+i5 == 0 /\ 1-i4 >= 0 /\ 1+i6-i4 == 0 /\ -3+i4-i8 >= 0 /\ -2+i4-i8 >= 0 /\ -5+i1 == 0 /\ -1+i8 >= 0) /\ i1'=5, i3'=1+i3, i6'=0, i8'=1+i8
   7: (-i4+i5 == 0 /\ 1-i4 >= 0 /\ 1+i6-i4 == 0 /\ 2-i4+i8 == 0 /\ -5+i1 == 0 /\ -3+i4 >= 0) /\ i1'=4, i3'=1+i3, i6'=0, i8'=1+i8
   8: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i5'=i4, i6'=i7, i8'=i9
   9: (0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -i4+i5 >= 0 /\ -2-i6+i4 >= 0 /\ i4-i5 >= 0 /\ -2+i4-i8 >= 0 /\ 3-i1 >= 0 /\ i8 >= 0 /\ -1+i6 >= 0) /\ i3'=-1-i6+i3+i4, i6'=-1+i4

Dependency graph:
0 -> 2, 0 -> 4, 0 -> 9
2 -> 2, 2 -> 3, 2 -> 4, 2 -> 9
3 -> 5
5 -> 2, 5 -> 9
8 -> 0, 8 -> 1
9 -> 2, 9 -> 3, 9 -> 4

	Trace

	8[(-1+i1 == 0)]
	0[(-i4+i5 == 0 /\ i6-i7 == 0 /\ -2+i1 == 0 /\ -2+i4 >= 0 /\ i8-i9 == 0)]
	9[(0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -i4+i5 >= 0 /\ -2-i6+i4 >= 0 /\ i4-i5 >= 0 /\ -2+i4-i8 >= 0 /\ 3-i1 >= 0 /\ i8 >= 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{1[T]}
	{}
	{2[T], 9[T]}
	
Step with 3

	Trace

	8[(-1+i1 == 0)]
	0[(-i4+i5 == 0 /\ i6-i7 == 0 /\ -2+i1 == 0 /\ -2+i4 >= 0 /\ i8-i9 == 0)]
	9[(0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -i4+i5 >= 0 /\ -2-i6+i4 >= 0 /\ i4-i5 >= 0 /\ -2+i4-i8 >= 0 /\ 3-i1 >= 0 /\ i8 >= 0 /\ -1+i6 >= 0)]
	3[(-3+i1 == 0 /\ -i4+i5 == 0 /\ 1+i6-i4 == 0 /\ -3+i4-i8 >= 0 /\ -2+i4-i8 >= 0 /\ i8 >= 0 /\ -2+i4 >= 0)]
	
	Blocked

	{}
	{1[T]}
	{}
	{2[T], 9[T]}
	{}
	
Step with 5

	Trace

	8[(-1+i1 == 0)]
	0[(-i4+i5 == 0 /\ i6-i7 == 0 /\ -2+i1 == 0 /\ -2+i4 >= 0 /\ i8-i9 == 0)]
	9[(0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -i4+i5 >= 0 /\ -2-i6+i4 >= 0 /\ i4-i5 >= 0 /\ -2+i4-i8 >= 0 /\ 3-i1 >= 0 /\ i8 >= 0 /\ -1+i6 >= 0)]
	3[(-3+i1 == 0 /\ -i4+i5 == 0 /\ 1+i6-i4 == 0 /\ -3+i4-i8 >= 0 /\ -2+i4-i8 >= 0 /\ i8 >= 0 /\ -2+i4 >= 0)]
	5[(-i4+i5 == 0 /\ 1+i6-i4 == 0 /\ -2+i4-i8 >= 0 /\ -5+i1 == 0 /\ -1+i8 >= 0 /\ -2+i4 >= 0)]
	
	Blocked

	{}
	{1[T]}
	{}
	{2[T], 9[T]}
	{}
	{}
	
Poly(n^2)

Accelerate

		Extracted Implied Equalities

		Original rule:
		(0 >= 0 /\ 0 == 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ 1 >= 0 /\ -i4+i5 >= 0 /\ -i4+i5 == 0 /\ -2-i6+i4 >= 0 /\ -3+i4-i8 >= 0 /\ i4-i5 >= 0 /\ -2+i4-i8 >= 0 /\ 3-i1 >= 0 /\ i8 >= 0 /\ -2+i4 >= 0 /\ -1+i6 >= 0) /\ i1'=3, i3'=1-i6+i3+i4, i6'=1, i8'=1+i8
		New rule:
		(0 >= 0 /\ 0 == 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ 1 >= 0 /\ -i4+i5 >= 0 /\ -i4+i5 == 0 /\ -2-i6+i4 >= 0 /\ -3+i4-i8 >= 0 /\ i4-i5 >= 0 /\ i4-i5 == 0 /\ -2+i4-i8 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ i8 >= 0 /\ -2+i4 >= 0 /\ -1+i6 >= 0) /\ i1'=3, i3'=1-i6+i3+i4, i6'=1, i8'=1+i8
		
		Simplified Guard

		Original rule:
		(0 >= 0 /\ 0 == 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ 1 >= 0 /\ -i4+i5 >= 0 /\ -i4+i5 == 0 /\ -2-i6+i4 >= 0 /\ -3+i4-i8 >= 0 /\ i4-i5 >= 0 /\ i4-i5 == 0 /\ -2+i4-i8 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ i8 >= 0 /\ -2+i4 >= 0 /\ -1+i6 >= 0) /\ i1'=3, i3'=1-i6+i3+i4, i6'=1, i8'=1+i8
		New rule:
		(-3+i1 >= 0 /\ -3+i1 == 0 /\ -i4+i5 >= 0 /\ -i4+i5 == 0 /\ -2-i6+i4 >= 0 /\ -3+i4-i8 >= 0 /\ i4-i5 >= 0 /\ i4-i5 == 0 /\ -2+i4-i8 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ i8 >= 0 /\ -2+i4 >= 0 /\ -1+i6 >= 0) /\ i1'=3, i3'=1-i6+i3+i4, i6'=1, i8'=1+i8

	Loop Acceleration

	Original rule:
	(-3+i1 >= 0 /\ -3+i1 == 0 /\ -i4+i5 >= 0 /\ -i4+i5 == 0 /\ -2-i6+i4 >= 0 /\ -3+i4-i8 >= 0 /\ i4-i5 >= 0 /\ i4-i5 == 0 /\ -2+i4-i8 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ i8 >= 0 /\ -2+i4 >= 0 /\ -1+i6 >= 0) /\ i1'=3, i3'=1-i6+i3+i4, i6'=1, i8'=1+i8
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ -3+i4-it64-i8 >= 0 /\ -4+i4-i8 >= 0 /\ -i4+i5 >= 0 /\ -i4+i5 == 0 /\ -2+i4-it64-i8 >= 0 /\ -2-i6+i4 >= 0 /\ -3+i4-i8 >= 0 /\ 1+i8 >= 0 /\ i4-i5 >= 0 /\ i4-i5 == 0 /\ -2+i4-i8 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+it64 >= 0 /\ i8 >= 0 /\ -2+i4 >= 0 /\ -3+i4 >= 0 /\ -1+i6 >= 0) /\ i1'=i1, i3'=1-i6+i3+i4*it64+i4, i6'=1, i8'=1+it64+i8

		-3+i1 >= 0 [0]: unchanged
		
		-i4+i5 >= 0 [0]: unchanged
		
		-2-i6+i4 >= 0 [0]: monotonic increase yields -2-i6+i4 >= 0, dependencies: -3+i4-i8 >= 0 i8 >= 0
		
		-2-i6+i4 >= 0 [1]: eventual decrease yields (-2-i6+i4 >= 0 /\ -3+i4 >= 0)
		
		-2-i6+i4 >= 0 [2]: eventual increase yields (-2-i6+i4 >= 0 /\ 1-i6 <= 0)
		
		-3+i4-i8 >= 0 [0]: montonic decrease yields (-2+i4-it64-i8 >= 0 /\ -3+i4-i8 >= 0)
		
		i4-i5 >= 0 [0]: unchanged
		
		-2+i4-i8 >= 0 [0]: montonic decrease yields (-2+i4-i8 >= 0 /\ -1+i4-it64-i8 >= 0)
		
		3-i1 >= 0 [0]: unchanged
		
		i8 >= 0 [0]: monotonic increase yields i8 >= 0
		
		-2+i4 >= 0 [0]: unchanged
		
		-1+i6 >= 0 [0]: trivial
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, -i4+i5 >= 0 -> -i4+i5 >= 0, -2-i6+i4 >= 0 -> -2-i6+i4 >= 0, -3+i4-i8 >= 0 -> (-2+i4-it64-i8 >= 0 /\ -3+i4-i8 >= 0), i4-i5 >= 0 -> i4-i5 >= 0, -2+i4-i8 >= 0 -> (-2+i4-i8 >= 0 /\ -1+i4-it64-i8 >= 0), 3-i1 >= 0 -> 3-i1 >= 0, i8 >= 0 -> i8 >= 0, -2+i4 >= 0 -> -2+i4 >= 0, -1+i6 >= 0 -> -1+i6 >= 0}

	Extracted Implied Equalities

	Original rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ -3+i4-it64-i8 >= 0 /\ -4+i4-i8 >= 0 /\ -i4+i5 >= 0 /\ -i4+i5 == 0 /\ -2+i4-it64-i8 >= 0 /\ -2-i6+i4 >= 0 /\ -3+i4-i8 >= 0 /\ 1+i8 >= 0 /\ i4-i5 >= 0 /\ i4-i5 == 0 /\ -2+i4-i8 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+it64 >= 0 /\ i8 >= 0 /\ -2+i4 >= 0 /\ -3+i4 >= 0 /\ -1+i6 >= 0) /\ i1'=i1, i3'=1-i6+i3+i4*it64+i4, i6'=1, i8'=1+it64+i8
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ -3+i4-it64-i8 >= 0 /\ -4+i4-i8 >= 0 /\ -i4+i5 >= 0 /\ -i4+i5 == 0 /\ -2+i4-it64-i8 >= 0 /\ -2-i6+i4 >= 0 /\ -3+i4-i8 >= 0 /\ 1+i8 >= 0 /\ i4-i5 >= 0 /\ i4-i5 == 0 /\ -2+i4-i8 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+it64 >= 0 /\ i8 >= 0 /\ -2+i4 >= 0 /\ -3+i4 >= 0 /\ -1+i6 >= 0) /\ i1'=i1, i3'=1-i6+i3+i4*it64+i4, i6'=1, i8'=1+it64+i8
	
	Simplified Guard

	Original rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ -3+i4-it64-i8 >= 0 /\ -4+i4-i8 >= 0 /\ -i4+i5 >= 0 /\ -i4+i5 == 0 /\ -2+i4-it64-i8 >= 0 /\ -2-i6+i4 >= 0 /\ -3+i4-i8 >= 0 /\ 1+i8 >= 0 /\ i4-i5 >= 0 /\ i4-i5 == 0 /\ -2+i4-i8 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+it64 >= 0 /\ i8 >= 0 /\ -2+i4 >= 0 /\ -3+i4 >= 0 /\ -1+i6 >= 0) /\ i1'=i1, i3'=1-i6+i3+i4*it64+i4, i6'=1, i8'=1+it64+i8
	New rule:
	(-3+i1 >= 0 /\ -3+i1 == 0 /\ -3+i4-it64-i8 >= 0 /\ -4+i4-i8 >= 0 /\ -i4+i5 >= 0 /\ -i4+i5 == 0 /\ -2+i4-it64-i8 >= 0 /\ -2-i6+i4 >= 0 /\ -3+i4-i8 >= 0 /\ 1+i8 >= 0 /\ i4-i5 >= 0 /\ i4-i5 == 0 /\ -2+i4-i8 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+it64 >= 0 /\ i8 >= 0 /\ -2+i4 >= 0 /\ -3+i4 >= 0 /\ -1+i6 >= 0) /\ i1'=i1, i3'=1-i6+i3+i4*it64+i4, i6'=1, i8'=1+it64+i8
	
	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ -3+i1 == 0 /\ -3+i4-it64-i8 >= 0 /\ -4+i4-i8 >= 0 /\ -i4+i5 >= 0 /\ -i4+i5 == 0 /\ -2+i4-it64-i8 >= 0 /\ -2-i6+i4 >= 0 /\ -3+i4-i8 >= 0 /\ 1+i8 >= 0 /\ i4-i5 >= 0 /\ i4-i5 == 0 /\ -2+i4-i8 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+it64 >= 0 /\ i8 >= 0 /\ -2+i4 >= 0 /\ -3+i4 >= 0 /\ -1+i6 >= 0) /\ i1'=i1, i3'=1-i6+i3+i4*it64+i4, i6'=1, i8'=1+it64+i8
	New rule:
	(-3+i1 >= 0 /\ -3+i1 == 0 /\ -3+i4-it64-i8 >= 0 /\ -4+i4-i8 >= 0 /\ -i4+i5 >= 0 /\ -i4+i5 == 0 /\ -2+i4-it64-i8 >= 0 /\ -2-i6+i4 >= 0 /\ -3+i4-i8 >= 0 /\ 1+i8 >= 0 /\ i4-i5 >= 0 /\ i4-i5 == 0 /\ -2+i4-i8 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+it64 >= 0 /\ i8 >= 0 /\ -2+i4 >= 0 /\ -3+i4 >= 0 /\ -1+i6 >= 0) /\ i3'=1-i6+i3+i4*it64+i4, i6'=1, i8'=1+it64+i8
	
	Instantiation

	Original rule:
	(-3+i1 >= 0 /\ -3+i1 == 0 /\ -3+i4-it64-i8 >= 0 /\ -4+i4-i8 >= 0 /\ -i4+i5 >= 0 /\ -i4+i5 == 0 /\ -2+i4-it64-i8 >= 0 /\ -2-i6+i4 >= 0 /\ -3+i4-i8 >= 0 /\ 1+i8 >= 0 /\ i4-i5 >= 0 /\ i4-i5 == 0 /\ -2+i4-i8 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+it64 >= 0 /\ i8 >= 0 /\ -2+i4 >= 0 /\ -3+i4 >= 0 /\ -1+i6 >= 0) /\ i3'=1-i6+i3+i4*it64+i4, i6'=1, i8'=1+it64+i8
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ 1 >= 0 /\ -4+i4-i8 >= 0 /\ -i4+i5 >= 0 /\ -i4+i5 == 0 /\ -2-i6+i4 >= 0 /\ -3+i4-i8 >= 0 /\ 1+i8 >= 0 /\ i4-i5 >= 0 /\ i4-i5 == 0 /\ -2+i4-i8 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ i8 >= 0 /\ -2+i4 >= 0 /\ -3+i4 >= 0 /\ -1+i6 >= 0) /\ i3'=1-i6+i3+(-3+i4-i8)*i4+i4, i6'=1, i8'=-2+i4

Start location: start0

Location map:
LoAT_sink -> 0
start0 -> 1
start -> 2
lbl71 -> 3
stop -> 4
cut -> 5

Rules:
   0: (-i4+i5 == 0 /\ i6-i7 == 0 /\ -2+i1 == 0 /\ -2+i4 >= 0 /\ i8-i9 == 0) /\ i1'=3, i3'=1+i3, i6'=1, i8'=0
   1: (-i4+i5 == 0 /\ i6-i7 == 0 /\ 1-i4 >= 0 /\ -2+i1 == 0 /\ i8-i9 == 0) /\ i1'=4, i3'=1+i3, i6'=0, i8'=1
   2: (-3+i1 == 0 /\ -i4+i5 == 0 /\ -2-i6+i4 >= 0 /\ -2+i4-i8 >= 0 /\ i8 >= 0 /\ -1-i6+i4 >= 0 /\ -1+i6 >= 0) /\ i1'=3, i3'=1+i3, i6'=1+i6
   3: (-3+i1 == 0 /\ -i4+i5 == 0 /\ 1+i6-i4 == 0 /\ -3+i4-i8 >= 0 /\ -2+i4-i8 >= 0 /\ i8 >= 0 /\ -2+i4 >= 0) /\ i1'=5, i3'=1+i3, i8'=1+i8
   4: (-3+i1 == 0 /\ -i4+i5 == 0 /\ 1+i6-i4 == 0 /\ 2-i4+i8 == 0 /\ -2+i4 >= 0) /\ i1'=4, i3'=1+i3, i8'=1+i8
   5: (-i4+i5 == 0 /\ 1+i6-i4 == 0 /\ -2+i4-i8 >= 0 /\ -5+i1 == 0 /\ -1+i8 >= 0 /\ -2+i4 >= 0) /\ i1'=3, i3'=1+i3, i6'=1
   6: (-i4+i5 == 0 /\ 1-i4 >= 0 /\ 1+i6-i4 == 0 /\ -3+i4-i8 >= 0 /\ -2+i4-i8 >= 0 /\ -5+i1 == 0 /\ -1+i8 >= 0) /\ i1'=5, i3'=1+i3, i6'=0, i8'=1+i8
   7: (-i4+i5 == 0 /\ 1-i4 >= 0 /\ 1+i6-i4 == 0 /\ 2-i4+i8 == 0 /\ -5+i1 == 0 /\ -3+i4 >= 0) /\ i1'=4, i3'=1+i3, i6'=0, i8'=1+i8
   8: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i5'=i4, i6'=i7, i8'=i9
   9: (0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -i4+i5 >= 0 /\ -2-i6+i4 >= 0 /\ i4-i5 >= 0 /\ -2+i4-i8 >= 0 /\ 3-i1 >= 0 /\ i8 >= 0 /\ -1+i6 >= 0) /\ i3'=-1-i6+i3+i4, i6'=-1+i4
  10: (0 >= 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ 1 >= 0 /\ -4+i4-i8 >= 0 /\ -i4+i5 >= 0 /\ -i4+i5 == 0 /\ -2-i6+i4 >= 0 /\ -3+i4-i8 >= 0 /\ 1+i8 >= 0 /\ i4-i5 >= 0 /\ i4-i5 == 0 /\ -2+i4-i8 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ i8 >= 0 /\ -2+i4 >= 0 /\ -3+i4 >= 0 /\ -1+i6 >= 0) /\ i3'=1-i6+i3+(-3+i4-i8)*i4+i4, i6'=1, i8'=-2+i4

Dependency graph:
0 -> 2, 0 -> 4, 0 -> 9, 0 -> 10
2 -> 2, 2 -> 3, 2 -> 4, 2 -> 9, 2 -> 10
3 -> 5
5 -> 2, 5 -> 9, 5 -> 10
8 -> 0, 8 -> 1
9 -> 2, 9 -> 3, 9 -> 4
10 -> 2, 10 -> 9

	Trace

	8[(-1+i1 == 0)]
	0[(-i4+i5 == 0 /\ i6-i7 == 0 /\ -2+i1 == 0 /\ -2+i4 >= 0 /\ i8-i9 == 0)]
	10[(0 >= 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ 1 >= 0 /\ -4+i4-i8 >= 0 /\ -i4+i5 >= 0 /\ -i4+i5 == 0 /\ -2-i6+i4 >= 0 /\ -3+i4-i8 >= 0 /\ 1+i8 >= 0 /\ i4-i5 >= 0 /\ i4-i5 == 0 /\ -2+i4-i8 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ i8 >= 0 /\ -2+i4 >= 0 /\ -3+i4 >= 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{1[T]}
	{}
	{10[T]}
	
Step with 2

	Trace

	8[(-1+i1 == 0)]
	0[(-i4+i5 == 0 /\ i6-i7 == 0 /\ -2+i1 == 0 /\ -2+i4 >= 0 /\ i8-i9 == 0)]
	10[(0 >= 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ 1 >= 0 /\ -4+i4-i8 >= 0 /\ -i4+i5 >= 0 /\ -i4+i5 == 0 /\ -2-i6+i4 >= 0 /\ -3+i4-i8 >= 0 /\ 1+i8 >= 0 /\ i4-i5 >= 0 /\ i4-i5 == 0 /\ -2+i4-i8 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ i8 >= 0 /\ -2+i4 >= 0 /\ -3+i4 >= 0 /\ -1+i6 >= 0)]
	2[(-3+i1 == 0 /\ -i4+i5 == 0 /\ -2-i6+i4 >= 0 /\ -2+i4-i8 >= 0 /\ i8 >= 0 /\ -1-i6+i4 >= 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{1[T]}
	{}
	{10[T]}
	{}
	
Covered

	Trace

	8[(-1+i1 == 0)]
	0[(-i4+i5 == 0 /\ i6-i7 == 0 /\ -2+i1 == 0 /\ -2+i4 >= 0 /\ i8-i9 == 0)]
	10[(0 >= 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ 1 >= 0 /\ -4+i4-i8 >= 0 /\ -i4+i5 >= 0 /\ -i4+i5 == 0 /\ -2-i6+i4 >= 0 /\ -3+i4-i8 >= 0 /\ 1+i8 >= 0 /\ i4-i5 >= 0 /\ i4-i5 == 0 /\ -2+i4-i8 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ i8 >= 0 /\ -2+i4 >= 0 /\ -3+i4 >= 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{1[T]}
	{}
	{2[T], 10[T]}
	
Step with 9

	Trace

	8[(-1+i1 == 0)]
	0[(-i4+i5 == 0 /\ i6-i7 == 0 /\ -2+i1 == 0 /\ -2+i4 >= 0 /\ i8-i9 == 0)]
	10[(0 >= 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ 1 >= 0 /\ -4+i4-i8 >= 0 /\ -i4+i5 >= 0 /\ -i4+i5 == 0 /\ -2-i6+i4 >= 0 /\ -3+i4-i8 >= 0 /\ 1+i8 >= 0 /\ i4-i5 >= 0 /\ i4-i5 == 0 /\ -2+i4-i8 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ i8 >= 0 /\ -2+i4 >= 0 /\ -3+i4 >= 0 /\ -1+i6 >= 0)]
	9[(0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -i4+i5 >= 0 /\ -2-i6+i4 >= 0 /\ i4-i5 >= 0 /\ -2+i4-i8 >= 0 /\ 3-i1 >= 0 /\ i8 >= 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{1[T]}
	{}
	{2[T], 10[T]}
	{9[T]}
	
Step with 4

	Trace

	8[(-1+i1 == 0)]
	0[(-i4+i5 == 0 /\ i6-i7 == 0 /\ -2+i1 == 0 /\ -2+i4 >= 0 /\ i8-i9 == 0)]
	10[(0 >= 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ 1 >= 0 /\ -4+i4-i8 >= 0 /\ -i4+i5 >= 0 /\ -i4+i5 == 0 /\ -2-i6+i4 >= 0 /\ -3+i4-i8 >= 0 /\ 1+i8 >= 0 /\ i4-i5 >= 0 /\ i4-i5 == 0 /\ -2+i4-i8 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ i8 >= 0 /\ -2+i4 >= 0 /\ -3+i4 >= 0 /\ -1+i6 >= 0)]
	9[(0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -i4+i5 >= 0 /\ -2-i6+i4 >= 0 /\ i4-i5 >= 0 /\ -2+i4-i8 >= 0 /\ 3-i1 >= 0 /\ i8 >= 0 /\ -1+i6 >= 0)]
	4[(-3+i1 == 0 /\ -i4+i5 == 0 /\ 1+i6-i4 == 0 /\ 2-i4+i8 == 0 /\ -2+i4 >= 0)]
	
	Blocked

	{}
	{1[T]}
	{}
	{2[T], 10[T]}
	{9[T]}
	{}
	
Backtrack

	Trace

	8[(-1+i1 == 0)]
	0[(-i4+i5 == 0 /\ i6-i7 == 0 /\ -2+i1 == 0 /\ -2+i4 >= 0 /\ i8-i9 == 0)]
	10[(0 >= 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ 1 >= 0 /\ -4+i4-i8 >= 0 /\ -i4+i5 >= 0 /\ -i4+i5 == 0 /\ -2-i6+i4 >= 0 /\ -3+i4-i8 >= 0 /\ 1+i8 >= 0 /\ i4-i5 >= 0 /\ i4-i5 == 0 /\ -2+i4-i8 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ i8 >= 0 /\ -2+i4 >= 0 /\ -3+i4 >= 0 /\ -1+i6 >= 0)]
	9[(0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -i4+i5 >= 0 /\ -2-i6+i4 >= 0 /\ i4-i5 >= 0 /\ -2+i4-i8 >= 0 /\ 3-i1 >= 0 /\ i8 >= 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{1[T]}
	{}
	{2[T], 10[T]}
	{4[T], 9[T]}
	
Backtrack

	Trace

	8[(-1+i1 == 0)]
	0[(-i4+i5 == 0 /\ i6-i7 == 0 /\ -2+i1 == 0 /\ -2+i4 >= 0 /\ i8-i9 == 0)]
	10[(0 >= 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ 1 >= 0 /\ -4+i4-i8 >= 0 /\ -i4+i5 >= 0 /\ -i4+i5 == 0 /\ -2-i6+i4 >= 0 /\ -3+i4-i8 >= 0 /\ 1+i8 >= 0 /\ i4-i5 >= 0 /\ i4-i5 == 0 /\ -2+i4-i8 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ i8 >= 0 /\ -2+i4 >= 0 /\ -3+i4 >= 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{1[T]}
	{}
	{2[T], 9[T], 10[T]}
	
Backtrack

	Trace

	8[(-1+i1 == 0)]
	0[(-i4+i5 == 0 /\ i6-i7 == 0 /\ -2+i1 == 0 /\ -2+i4 >= 0 /\ i8-i9 == 0)]
	
	Blocked

	{}
	{1[T]}
	{10[T]}
	
Step with 9

	Trace

	8[(-1+i1 == 0)]
	0[(-i4+i5 == 0 /\ i6-i7 == 0 /\ -2+i1 == 0 /\ -2+i4 >= 0 /\ i8-i9 == 0)]
	9[(0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -i4+i5 >= 0 /\ -2-i6+i4 >= 0 /\ i4-i5 >= 0 /\ -2+i4-i8 >= 0 /\ 3-i1 >= 0 /\ i8 >= 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{1[T]}
	{10[T]}
	{9[T]}
	
Step with 3

	Trace

	8[(-1+i1 == 0)]
	0[(-i4+i5 == 0 /\ i6-i7 == 0 /\ -2+i1 == 0 /\ -2+i4 >= 0 /\ i8-i9 == 0)]
	9[(0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -i4+i5 >= 0 /\ -2-i6+i4 >= 0 /\ i4-i5 >= 0 /\ -2+i4-i8 >= 0 /\ 3-i1 >= 0 /\ i8 >= 0 /\ -1+i6 >= 0)]
	3[(-3+i1 == 0 /\ -i4+i5 == 0 /\ 1+i6-i4 == 0 /\ -3+i4-i8 >= 0 /\ -2+i4-i8 >= 0 /\ i8 >= 0 /\ -2+i4 >= 0)]
	
	Blocked

	{}
	{1[T]}
	{10[T]}
	{4[T], 9[T]}
	{}
	
Step with 5

	Trace

	8[(-1+i1 == 0)]
	0[(-i4+i5 == 0 /\ i6-i7 == 0 /\ -2+i1 == 0 /\ -2+i4 >= 0 /\ i8-i9 == 0)]
	9[(0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -i4+i5 >= 0 /\ -2-i6+i4 >= 0 /\ i4-i5 >= 0 /\ -2+i4-i8 >= 0 /\ 3-i1 >= 0 /\ i8 >= 0 /\ -1+i6 >= 0)]
	3[(-3+i1 == 0 /\ -i4+i5 == 0 /\ 1+i6-i4 == 0 /\ -3+i4-i8 >= 0 /\ -2+i4-i8 >= 0 /\ i8 >= 0 /\ -2+i4 >= 0)]
	5[(-i4+i5 == 0 /\ 1+i6-i4 == 0 /\ -2+i4-i8 >= 0 /\ -5+i1 == 0 /\ -1+i8 >= 0 /\ -2+i4 >= 0)]
	
	Blocked

	{}
	{1[T]}
	{10[T]}
	{4[T], 9[T]}
	{}
	{}
	
Covered

	Trace

	8[(-1+i1 == 0)]
	0[(-i4+i5 == 0 /\ i6-i7 == 0 /\ -2+i1 == 0 /\ -2+i4 >= 0 /\ i8-i9 == 0)]
	9[(0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -i4+i5 >= 0 /\ -2-i6+i4 >= 0 /\ i4-i5 >= 0 /\ -2+i4-i8 >= 0 /\ 3-i1 >= 0 /\ i8 >= 0 /\ -1+i6 >= 0)]
	3[(-3+i1 == 0 /\ -i4+i5 == 0 /\ 1+i6-i4 == 0 /\ -3+i4-i8 >= 0 /\ -2+i4-i8 >= 0 /\ i8 >= 0 /\ -2+i4 >= 0)]
	
	Blocked

	{}
	{1[T]}
	{10[T]}
	{4[T], 9[T]}
	{5[T]}
	
Backtrack

	Trace

	8[(-1+i1 == 0)]
	0[(-i4+i5 == 0 /\ i6-i7 == 0 /\ -2+i1 == 0 /\ -2+i4 >= 0 /\ i8-i9 == 0)]
	9[(0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -i4+i5 >= 0 /\ -2-i6+i4 >= 0 /\ i4-i5 >= 0 /\ -2+i4-i8 >= 0 /\ 3-i1 >= 0 /\ i8 >= 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{1[T]}
	{10[T]}
	{3[T], 4[T], 9[T]}
	
Backtrack

	Trace

	8[(-1+i1 == 0)]
	0[(-i4+i5 == 0 /\ i6-i7 == 0 /\ -2+i1 == 0 /\ -2+i4 >= 0 /\ i8-i9 == 0)]
	
	Blocked

	{}
	{1[T]}
	{9[T], 10[T]}
	
Step with 2

	Trace

	8[(-1+i1 == 0)]
	0[(-i4+i5 == 0 /\ i6-i7 == 0 /\ -2+i1 == 0 /\ -2+i4 >= 0 /\ i8-i9 == 0)]
	2[(-3+i1 == 0 /\ -i4+i5 == 0 /\ -2-i6+i4 >= 0 /\ -2+i4-i8 >= 0 /\ i8 >= 0 /\ -1-i6+i4 >= 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{1[T]}
	{9[T], 10[T]}
	{}
	
Covered

	Trace

	8[(-1+i1 == 0)]
	0[(-i4+i5 == 0 /\ i6-i7 == 0 /\ -2+i1 == 0 /\ -2+i4 >= 0 /\ i8-i9 == 0)]
	
	Blocked

	{}
	{1[T]}
	{2[T], 9[T], 10[T]}
	
Step with 4

	Trace

	8[(-1+i1 == 0)]
	0[(-i4+i5 == 0 /\ i6-i7 == 0 /\ -2+i1 == 0 /\ -2+i4 >= 0 /\ i8-i9 == 0)]
	4[(-3+i1 == 0 /\ -i4+i5 == 0 /\ 1+i6-i4 == 0 /\ 2-i4+i8 == 0 /\ -2+i4 >= 0)]
	
	Blocked

	{}
	{1[T]}
	{2[T], 9[T], 10[T]}
	{}
	
Backtrack

	Trace

	8[(-1+i1 == 0)]
	0[(-i4+i5 == 0 /\ i6-i7 == 0 /\ -2+i1 == 0 /\ -2+i4 >= 0 /\ i8-i9 == 0)]
	
	Blocked

	{}
	{1[T]}
	{2[T], 4[T], 9[T], 10[T]}
	
Backtrack

	Trace

	8[(-1+i1 == 0)]
	
	Blocked

	{}
	{0[T], 1[T]}
	
Backtrack

	Trace

	Blocked

	{8[T]}
	
Accept

Poly(n^2)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^2))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄, X₅
  Temp_Vars:  
  Locations:  l0, l1, l2, l3, l4
  Return Locations:  
  Transitions:
  t₈: l0(X₀, X₁, X₂, X₃, X₄, X₅) → l4(X₀, X₀, X₃, X₃, X₅, X₅)
  t₆: l1(X₀, X₁, X₂, X₃, X₄, X₅) → l1(X₀, X₁, 0, X₃, 1+X₄, X₅) :|: X₀ ≤ 1 ∧ X₀ ≤ 1+X₂ ∧ 1+X₂ ≤ X₀ ∧ 1 ≤ X₄ ∧ 2+X₄ ≤ X₀ ∧ 3+X₄ ≤ X₀ ∧ X₁ ≤ X₀ ∧ X₀ ≤ X₁
  t₅: l1(X₀, X₁, X₂, X₃, X₄, X₅) → l2(X₀, X₁, 1, X₃, X₄, X₅) :|: X₀ ≤ 1+X₂ ∧ 1+X₂ ≤ X₀ ∧ 1 ≤ X₄ ∧ 2 ≤ X₀ ∧ 2+X₄ ≤ X₀ ∧ X₁ ≤ X₀ ∧ X₀ ≤ X₁
  t₇: l1(X₀, X₁, X₂, X₃, X₄, X₅) → l3(X₀, X₁, 0, X₃, 1+X₄, X₅) :|: X₀ ≤ 2+X₄ ∧ X₀ ≤ 1 ∧ X₀ ≤ 1+X₂ ∧ 1+X₂ ≤ X₀ ∧ 2+X₄ ≤ X₀ ∧ 3 ≤ X₀ ∧ X₁ ≤ X₀ ∧ X₀ ≤ X₁
  t₃: l2(X₀, X₁, X₂, X₃, X₄, X₅) → l1(X₀, X₁, X₂, X₃, 1+X₄, X₅) :|: X₀ ≤ 1+X₂ ∧ 1+X₂ ≤ X₀ ∧ 2 ≤ X₀ ∧ 2+X₄ ≤ X₀ ∧ 3+X₄ ≤ X₀ ∧ X₁ ≤ X₀ ∧ X₀ ≤ X₁ ∧ 0 ≤ X₄
  t₂: l2(X₀, X₁, X₂, X₃, X₄, X₅) → l2(X₀, X₁, 1+X₂, X₃, X₄, X₅) :|: 1+X₂ ≤ X₀ ∧ 1 ≤ X₂ ∧ 2+X₂ ≤ X₀ ∧ 2+X₄ ≤ X₀ ∧ X₁ ≤ X₀ ∧ X₀ ≤ X₁ ∧ 0 ≤ X₄
  t₄: l2(X₀, X₁, X₂, X₃, X₄, X₅) → l3(X₀, X₁, X₂, X₃, 1+X₄, X₅) :|: X₀ ≤ 2+X₄ ∧ X₀ ≤ 1+X₂ ∧ 1+X₂ ≤ X₀ ∧ 2 ≤ X₀ ∧ 2+X₄ ≤ X₀ ∧ X₁ ≤ X₀ ∧ X₀ ≤ X₁
  t₀: l4(X₀, X₁, X₂, X₃, X₄, X₅) → l2(X₀, X₁, 1, X₃, 0, X₅) :|: 2 ≤ X₀ ∧ X₁ ≤ X₀ ∧ X₀ ≤ X₁ ∧ X₃ ≤ X₂ ∧ X₂ ≤ X₃ ∧ X₅ ≤ X₄ ∧ X₄ ≤ X₅
  t₁: l4(X₀, X₁, X₂, X₃, X₄, X₅) → l3(X₀, X₁, 0, X₃, 1, X₅) :|: X₀ ≤ 1 ∧ X₁ ≤ X₀ ∧ X₀ ≤ X₁ ∧ X₃ ≤ X₂ ∧ X₂ ≤ X₃ ∧ X₅ ≤ X₄ ∧ X₄ ≤ X₅


Preprocessing
  Cut unsatisfiable transition [t₆: l1→l1; t₇: l1→l3]


  Found invariant 2+X₄ ≤ X₁ ∧ 2+X₄ ≤ X₀ ∧ 0 ≤ X₄ ∧ 1 ≤ X₂+X₄ ∧ 2 ≤ X₁+X₄ ∧ 2 ≤ X₀+X₄ ∧ 1+X₂ ≤ X₁ ∧ 1+X₂ ≤ X₀ ∧ 1 ≤ X₂ ∧ 3 ≤ X₁+X₂ ∧ 3 ≤ X₀+X₂ ∧ X₁ ≤ X₀ ∧ 2 ≤ X₁ ∧ 4 ≤ X₀+X₁ ∧ X₀ ≤ X₁ ∧ 2 ≤ X₀ for location l2


  Found invariant 1+X₄ ≤ X₂ ∧ 2+X₄ ≤ X₁ ∧ 2+X₄ ≤ X₀ ∧ 1 ≤ X₄ ∧ 3 ≤ X₂+X₄ ∧ 4 ≤ X₁+X₄ ∧ 4 ≤ X₀+X₄ ∧ 1+X₂ ≤ X₁ ∧ 1+X₂ ≤ X₀ ∧ 2 ≤ X₂ ∧ 5 ≤ X₁+X₂ ∧ X₁ ≤ 1+X₂ ∧ 5 ≤ X₀+X₂ ∧ X₀ ≤ 1+X₂ ∧ X₁ ≤ X₀ ∧ 3 ≤ X₁ ∧ 6 ≤ X₀+X₁ ∧ X₀ ≤ X₁ ∧ 3 ≤ X₀ for location l1


  Found invariant X₅ ≤ X₄ ∧ X₄ ≤ X₅ ∧ X₃ ≤ X₂ ∧ X₂ ≤ X₃ ∧ X₁ ≤ X₀ ∧ X₀ ≤ X₁ for location l4


  Found invariant X₄ ≤ 1+X₂ ∧ 1 ≤ X₄ ∧ 1 ≤ X₂+X₄ ∧ X₂ ≤ X₄ ∧ X₁ ≤ 1+X₄ ∧ X₀ ≤ 1+X₄ ∧ 0 ≤ X₂ ∧ X₁ ≤ 1+X₂ ∧ X₀ ≤ 1+X₂ ∧ X₁ ≤ X₀ ∧ X₀ ≤ X₁ for location l3


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄, X₅
  Temp_Vars:  
  Locations:  l0, l1, l2, l3, l4
  Return Locations:  
  Transitions:
  t₈: l0(X₀, X₁, X₂, X₃, X₄, X₅) → l4(X₀, X₀, X₃, X₃, X₅, X₅)
  t₅: l1(X₀, X₁, X₂, X₃, X₄, X₅) → l2(X₀, X₁, 1, X₃, X₄, X₅) :|: X₀ ≤ 1+X₂ ∧ 1+X₂ ≤ X₀ ∧ 1 ≤ X₄ ∧ 2 ≤ X₀ ∧ 2+X₄ ≤ X₀ ∧ X₁ ≤ X₀ ∧ X₀ ≤ X₁ ∧ X₁ ≤ 1+X₂ ∧ 1+X₂ ≤ X₁ ∧ 1+X₄ ≤ X₂ ∧ 2+X₄ ≤ X₁ ∧ 2 ≤ X₂ ∧ 3 ≤ X₀ ∧ 3 ≤ X₁ ∧ 3 ≤ X₂+X₄ ∧ 4 ≤ X₀+X₄ ∧ 4 ≤ X₁+X₄ ∧ 5 ≤ X₀+X₂ ∧ 5 ≤ X₁+X₂ ∧ 6 ≤ X₀+X₁
  t₃: l2(X₀, X₁, X₂, X₃, X₄, X₅) → l1(X₀, X₁, X₂, X₃, 1+X₄, X₅) :|: X₀ ≤ 1+X₂ ∧ 1+X₂ ≤ X₀ ∧ 2 ≤ X₀ ∧ 2+X₄ ≤ X₀ ∧ 3+X₄ ≤ X₀ ∧ X₁ ≤ X₀ ∧ X₀ ≤ X₁ ∧ 0 ≤ X₄ ∧ 1+X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 1 ≤ X₂+X₄ ∧ 2 ≤ X₀+X₄ ∧ 2 ≤ X₁ ∧ 2 ≤ X₁+X₄ ∧ 2+X₄ ≤ X₁ ∧ 3 ≤ X₀+X₂ ∧ 3 ≤ X₁+X₂ ∧ 4 ≤ X₀+X₁
  t₂: l2(X₀, X₁, X₂, X₃, X₄, X₅) → l2(X₀, X₁, 1+X₂, X₃, X₄, X₅) :|: 1+X₂ ≤ X₀ ∧ 1 ≤ X₂ ∧ 2+X₂ ≤ X₀ ∧ 2+X₄ ≤ X₀ ∧ X₁ ≤ X₀ ∧ X₀ ≤ X₁ ∧ 0 ≤ X₄ ∧ 1+X₂ ≤ X₁ ∧ 1 ≤ X₂+X₄ ∧ 2 ≤ X₀ ∧ 2 ≤ X₀+X₄ ∧ 2 ≤ X₁ ∧ 2 ≤ X₁+X₄ ∧ 2+X₄ ≤ X₁ ∧ 3 ≤ X₀+X₂ ∧ 3 ≤ X₁+X₂ ∧ 4 ≤ X₀+X₁
  t₄: l2(X₀, X₁, X₂, X₃, X₄, X₅) → l3(X₀, X₁, X₂, X₃, 1+X₄, X₅) :|: X₀ ≤ 2+X₄ ∧ X₀ ≤ 1+X₂ ∧ 1+X₂ ≤ X₀ ∧ 2 ≤ X₀ ∧ 2+X₄ ≤ X₀ ∧ X₁ ≤ X₀ ∧ X₀ ≤ X₁ ∧ 1+X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 1 ≤ X₂+X₄ ∧ 2 ≤ X₀+X₄ ∧ 2 ≤ X₁ ∧ 2 ≤ X₁+X₄ ∧ 2+X₄ ≤ X₁ ∧ 3 ≤ X₀+X₂ ∧ 3 ≤ X₁+X₂ ∧ 4 ≤ X₀+X₁ ∧ 0 ≤ X₄
  t₀: l4(X₀, X₁, X₂, X₃, X₄, X₅) → l2(X₀, X₁, 1, X₃, 0, X₅) :|: 2 ≤ X₀ ∧ X₁ ≤ X₀ ∧ X₀ ≤ X₁ ∧ X₃ ≤ X₂ ∧ X₂ ≤ X₃ ∧ X₅ ≤ X₄ ∧ X₄ ≤ X₅
  t₁: l4(X₀, X₁, X₂, X₃, X₄, X₅) → l3(X₀, X₁, 0, X₃, 1, X₅) :|: X₀ ≤ 1 ∧ X₁ ≤ X₀ ∧ X₀ ≤ X₁ ∧ X₃ ≤ X₂ ∧ X₂ ≤ X₃ ∧ X₅ ≤ X₄ ∧ X₄ ≤ X₅


MPRF for transition t₃: l2(X₀, X₁, X₂, X₃, X₄, X₅) → l1(X₀, X₁, X₂, X₃, 1+X₄, X₅) :|: X₀ ≤ 1+X₂ ∧ 1+X₂ ≤ X₀ ∧ 2 ≤ X₀ ∧ 2+X₄ ≤ X₀ ∧ 3+X₄ ≤ X₀ ∧ X₁ ≤ X₀ ∧ X₀ ≤ X₁ ∧ 0 ≤ X₄ ∧ 1+X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 1 ≤ X₂+X₄ ∧ 2 ≤ X₀+X₄ ∧ 2 ≤ X₁ ∧ 2 ≤ X₁+X₄ ∧ 2+X₄ ≤ X₁ ∧ 3 ≤ X₀+X₂ ∧ 3 ≤ X₁+X₂ ∧ 4 ≤ X₀+X₁ of depth 1:
  new bound:
    X₀+1 {O(n)}

  MPRF:
    • l1: [X₁-1-X₄]
    • l2: [X₁-1-X₄]




MPRF for transition t₅: l1(X₀, X₁, X₂, X₃, X₄, X₅) → l2(X₀, X₁, 1, X₃, X₄, X₅) :|: X₀ ≤ 1+X₂ ∧ 1+X₂ ≤ X₀ ∧ 1 ≤ X₄ ∧ 2 ≤ X₀ ∧ 2+X₄ ≤ X₀ ∧ X₁ ≤ X₀ ∧ X₀ ≤ X₁ ∧ X₁ ≤ 1+X₂ ∧ 1+X₂ ≤ X₁ ∧ 1+X₄ ≤ X₂ ∧ 2+X₄ ≤ X₁ ∧ 2 ≤ X₂ ∧ 3 ≤ X₀ ∧ 3 ≤ X₁ ∧ 3 ≤ X₂+X₄ ∧ 4 ≤ X₀+X₄ ∧ 4 ≤ X₁+X₄ ∧ 5 ≤ X₀+X₂ ∧ 5 ≤ X₁+X₂ ∧ 6 ≤ X₀+X₁ of depth 1:
  new bound:
    X₀+2 {O(n)}

  MPRF:
    • l1: [X₁-1-X₄]
    • l2: [X₁-2-X₄]




MPRF for transition t₂: l2(X₀, X₁, X₂, X₃, X₄, X₅) → l2(X₀, X₁, 1+X₂, X₃, X₄, X₅) :|: 1+X₂ ≤ X₀ ∧ 1 ≤ X₂ ∧ 2+X₂ ≤ X₀ ∧ 2+X₄ ≤ X₀ ∧ X₁ ≤ X₀ ∧ X₀ ≤ X₁ ∧ 0 ≤ X₄ ∧ 1+X₂ ≤ X₁ ∧ 1 ≤ X₂+X₄ ∧ 2 ≤ X₀ ∧ 2 ≤ X₀+X₄ ∧ 2 ≤ X₁ ∧ 2 ≤ X₁+X₄ ∧ 2+X₄ ≤ X₁ ∧ 3 ≤ X₀+X₂ ∧ 3 ≤ X₁+X₂ ∧ 4 ≤ X₀+X₁ of depth 1:
  new bound:
    X₀^2+4⋅X₀+3 {O(n^2)}

  MPRF:
    • l1: [X₀-X₂]
    • l2: [X₀-X₂]




  Cut unsatisfiable transition [t₃: l2→l1; t₈₀: l2→l1]


  Found invariant 2+X₄ ≤ X₁ ∧ 2+X₄ ≤ X₀ ∧ 0 ≤ X₄ ∧ 1 ≤ X₂+X₄ ∧ X₂ ≤ 1+X₄ ∧ 2 ≤ X₁+X₄ ∧ 2 ≤ X₀+X₄ ∧ X₂ ≤ 1 ∧ 1+X₂ ≤ X₁ ∧ 1+X₂ ≤ X₀ ∧ 1 ≤ X₂ ∧ 3 ≤ X₁+X₂ ∧ 3 ≤ X₀+X₂ ∧ X₁ ≤ X₀ ∧ 2 ≤ X₁ ∧ 4 ≤ X₀+X₁ ∧ X₀ ≤ X₁ ∧ 2 ≤ X₀ for location l2


  Found invariant 2+X₄ ≤ X₁ ∧ 2+X₄ ≤ X₀ ∧ 0 ≤ X₄ ∧ 2 ≤ X₂+X₄ ∧ 3 ≤ X₁+X₄ ∧ 3 ≤ X₀+X₄ ∧ 1+X₂ ≤ X₁ ∧ 1+X₂ ≤ X₀ ∧ 2 ≤ X₂ ∧ 5 ≤ X₁+X₂ ∧ 5 ≤ X₀+X₂ ∧ X₁ ≤ X₀ ∧ 3 ≤ X₁ ∧ 6 ≤ X₀+X₁ ∧ X₀ ≤ X₁ ∧ 3 ≤ X₀ for location l2_v1


  Found invariant 1+X₄ ≤ X₂ ∧ 2+X₄ ≤ X₁ ∧ 2+X₄ ≤ X₀ ∧ 1 ≤ X₄ ∧ 3 ≤ X₂+X₄ ∧ 4 ≤ X₁+X₄ ∧ 4 ≤ X₀+X₄ ∧ 1+X₂ ≤ X₁ ∧ 1+X₂ ≤ X₀ ∧ 2 ≤ X₂ ∧ 5 ≤ X₁+X₂ ∧ X₁ ≤ 1+X₂ ∧ 5 ≤ X₀+X₂ ∧ X₀ ≤ 1+X₂ ∧ X₁ ≤ X₀ ∧ 3 ≤ X₁ ∧ 6 ≤ X₀+X₁ ∧ X₀ ≤ X₁ ∧ 3 ≤ X₀ for location l1


  Found invariant X₅ ≤ X₄ ∧ X₄ ≤ X₅ ∧ X₃ ≤ X₂ ∧ X₂ ≤ X₃ ∧ X₁ ≤ X₀ ∧ X₀ ≤ X₁ for location l4


  Found invariant X₄ ≤ 1+X₂ ∧ 1 ≤ X₄ ∧ 1 ≤ X₂+X₄ ∧ X₂ ≤ X₄ ∧ X₁ ≤ 1+X₄ ∧ X₀ ≤ 1+X₄ ∧ 0 ≤ X₂ ∧ X₁ ≤ 1+X₂ ∧ X₀ ≤ 1+X₂ ∧ X₁ ≤ X₀ ∧ X₀ ≤ X₁ for location l3


All Bounds
Timebounds
  Overall timebound:X₀^2+6⋅X₀+10 {O(n^2)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: X₀^2+4⋅X₀+3 {O(n^2)}
    t₃: X₀+1 {O(n)}
    t₄: 1 {O(1)}
    t₅: X₀+2 {O(n)}
    t₈: 1 {O(1)}


Costbounds
  Overall costbound: X₀^2+6⋅X₀+10 {O(n^2)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: X₀^2+4⋅X₀+3 {O(n^2)}
    t₃: X₀+1 {O(n)}
    t₄: 1 {O(1)}
    t₅: X₀+2 {O(n)}
    t₈: 1 {O(1)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₀ {O(n)}
    t₀, X₂: 1 {O(1)}
    t₀, X₃: X₃ {O(n)}
    t₀, X₄: 0 {O(1)}
    t₀, X₅: X₅ {O(n)}
    t₁, X₀: X₀ {O(n)}
    t₁, X₁: X₀ {O(n)}
    t₁, X₂: 0 {O(1)}
    t₁, X₃: X₃ {O(n)}
    t₁, X₄: 1 {O(1)}
    t₁, X₅: X₅ {O(n)}
    t₂, X₀: X₀ {O(n)}
    t₂, X₁: X₀ {O(n)}
    t₂, X₂: X₀^2+4⋅X₀+5 {O(n^2)}
    t₂, X₃: X₃ {O(n)}
    t₂, X₄: X₀+1 {O(n)}
    t₂, X₅: X₅ {O(n)}
    t₃, X₀: X₀ {O(n)}
    t₃, X₁: X₀ {O(n)}
    t₃, X₂: X₀^2+4⋅X₀+5 {O(n^2)}
    t₃, X₃: X₃ {O(n)}
    t₃, X₄: X₀+1 {O(n)}
    t₃, X₅: X₅ {O(n)}
    t₄, X₀: 2⋅X₀ {O(n)}
    t₄, X₁: 2⋅X₀ {O(n)}
    t₄, X₂: X₀^2+4⋅X₀+6 {O(n^2)}
    t₄, X₃: 2⋅X₃ {O(n)}
    t₄, X₄: X₀+3 {O(n)}
    t₄, X₅: 2⋅X₅ {O(n)}
    t₅, X₀: X₀ {O(n)}
    t₅, X₁: X₀ {O(n)}
    t₅, X₂: 1 {O(1)}
    t₅, X₃: X₃ {O(n)}
    t₅, X₄: X₀+1 {O(n)}
    t₅, X₅: X₅ {O(n)}
    t₈, X₀: X₀ {O(n)}
    t₈, X₁: X₀ {O(n)}
    t₈, X₂: X₃ {O(n)}
    t₈, X₃: X₃ {O(n)}
    t₈, X₄: X₅ {O(n)}
    t₈, X₅: X₅ {O(n)}

