WORST_CASE(?,O(1))

# LoAT Proof:
Initial ITS

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f5 -> 2
f17 -> 3
f32 -> 4
f13 -> 5

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=0
   1: (-2+i1 == 0 /\ 99-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
   2: -3+i1 == 0 /\ i1'=3, i3'=1+i3
   3: (-3+i1 == 0 /\ -1-it2 >= 0) /\ i1'=3, i3'=1+i3, i5'=1+i5
   4: -3+i1 == 0 /\ i1'=3, i3'=1+i3, i5'=1+i5
   5: -4+i1 == 0 /\ i1'=4, i3'=1+i3
   6: (-1-it3 >= 0 /\ -4+i1 == 0) /\ i1'=4, i3'=1+i3, i6'=1+i6
   7: -4+i1 == 0 /\ i1'=4, i3'=1+i3, i6'=1+i6
   8: -4+i1 == 0 /\ i1'=5, i3'=1+i3, i7'=i6, i8'=i6
   9: (-3+i1 == 0 /\ -1-it5 >= 0) /\ i1'=4, i3'=1+i3, i6'=i5, i7'=i5, i9'=i5, i10'=it6
  10: -3+i1 == 0 /\ i1'=4, i3'=1+i3, i6'=i5, i7'=i5, i9'=i5, i10'=it7
  11: -3+i1 == 0 /\ i1'=5, i3'=1+i3, i7'=i5, i9'=i5, i10'=it8
  12: (-2+i1 == 0 /\ -100+i4 >= 0) /\ i1'=5, i3'=1+i3, i7'=-2+i4
  13: (-2+i1 == 0 /\ -100+i4 >= 0 /\ -1-i4 >= 0) /\ i1'=3, i3'=1+i3, i5'=-2+i4, i7'=-2+i4

Dependency graph:
0 -> 1, 0 -> 12, 0 -> 13
1 -> 1, 1 -> 12, 1 -> 13
2 -> 2, 2 -> 3, 2 -> 4, 2 -> 9, 2 -> 10, 2 -> 11
3 -> 2, 3 -> 3, 3 -> 4, 3 -> 9, 3 -> 10, 3 -> 11
4 -> 2, 4 -> 3, 4 -> 4, 4 -> 9, 4 -> 10, 4 -> 11
5 -> 5, 5 -> 6, 5 -> 7, 5 -> 8
6 -> 5, 6 -> 6, 6 -> 7, 6 -> 8
7 -> 5, 7 -> 6, 7 -> 7, 7 -> 8
9 -> 5, 9 -> 6, 9 -> 7, 9 -> 8
10 -> 5, 10 -> 6, 10 -> 7, 10 -> 8
13 -> 2, 13 -> 3, 13 -> 4, 13 -> 9, 13 -> 10, 13 -> 11

Preprocessed Transitions

	Eliminated Temporary Variables

	Original rule:
	(-3+i1 == 0 /\ -1-it2 >= 0) /\ i1'=3, i3'=1+i3, i5'=1+i5
	New rule:
	(-3+i1 == 0) /\ i1'=3, i3'=1+i3, i5'=1+i5
	
	Eliminated Temporary Variables

	Original rule:
	(-1-it3 >= 0 /\ -4+i1 == 0) /\ i1'=4, i3'=1+i3, i6'=1+i6
	New rule:
	(-4+i1 == 0) /\ i1'=4, i3'=1+i3, i6'=1+i6
	
	Eliminated Temporary Variables

	Original rule:
	(-3+i1 == 0 /\ -1-it5 >= 0) /\ i1'=4, i3'=1+i3, i6'=i5, i7'=i5, i9'=i5, i10'=it6
	New rule:
	(-3+i1 == 0) /\ i1'=4, i3'=1+i3, i6'=i5, i7'=i5, i9'=i5, i10'=it6

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f5 -> 2
f17 -> 3
f32 -> 4
f13 -> 5

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=0
   1: (-2+i1 == 0 /\ 99-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
   2: -3+i1 == 0 /\ i1'=3, i3'=1+i3
   4: -3+i1 == 0 /\ i1'=3, i3'=1+i3, i5'=1+i5
   5: -4+i1 == 0 /\ i1'=4, i3'=1+i3
   7: -4+i1 == 0 /\ i1'=4, i3'=1+i3, i6'=1+i6
   8: -4+i1 == 0 /\ i1'=5, i3'=1+i3, i7'=i6, i8'=i6
  10: -3+i1 == 0 /\ i1'=4, i3'=1+i3, i6'=i5, i7'=i5, i9'=i5, i10'=it7
  11: -3+i1 == 0 /\ i1'=5, i3'=1+i3, i7'=i5, i9'=i5, i10'=it8
  12: (-2+i1 == 0 /\ -100+i4 >= 0) /\ i1'=5, i3'=1+i3, i7'=-2+i4
  13: (-2+i1 == 0 /\ -100+i4 >= 0 /\ -1-i4 >= 0) /\ i1'=3, i3'=1+i3, i5'=-2+i4, i7'=-2+i4
  14: (-3+i1 == 0) /\ i1'=3, i3'=1+i3, i5'=1+i5
  15: (-4+i1 == 0) /\ i1'=4, i3'=1+i3, i6'=1+i6
  16: (-3+i1 == 0) /\ i1'=4, i3'=1+i3, i6'=i5, i7'=i5, i9'=i5, i10'=it6

Dependency graph:
0 -> 1, 0 -> 12, 0 -> 13
1 -> 1, 1 -> 12, 1 -> 13
2 -> 2, 2 -> 4, 2 -> 10, 2 -> 11, 2 -> 14, 2 -> 16
4 -> 2, 4 -> 4, 4 -> 10, 4 -> 11, 4 -> 14, 4 -> 16
5 -> 5, 5 -> 7, 5 -> 8, 5 -> 15
7 -> 5, 7 -> 7, 7 -> 8, 7 -> 15
10 -> 5, 10 -> 7, 10 -> 8, 10 -> 15
13 -> 2, 13 -> 4, 13 -> 10, 13 -> 11, 13 -> 14, 13 -> 16
14 -> 2, 14 -> 4, 14 -> 10, 14 -> 11, 14 -> 14, 14 -> 16
15 -> 5, 15 -> 7, 15 -> 8, 15 -> 15
16 -> 5, 16 -> 7, 16 -> 8, 16 -> 15

Refined Dependency Graph

	Removed the following edges: 0 -> 12, 0 -> 13, 1 -> 13, 13 -> 2, 13 -> 4, 13 -> 10, 13 -> 11, 13 -> 14, 13 -> 16

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f5 -> 2
f17 -> 3
f32 -> 4
f13 -> 5

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=0
   1: (-2+i1 == 0 /\ 99-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
   2: -3+i1 == 0 /\ i1'=3, i3'=1+i3
   4: -3+i1 == 0 /\ i1'=3, i3'=1+i3, i5'=1+i5
   5: -4+i1 == 0 /\ i1'=4, i3'=1+i3
   7: -4+i1 == 0 /\ i1'=4, i3'=1+i3, i6'=1+i6
   8: -4+i1 == 0 /\ i1'=5, i3'=1+i3, i7'=i6, i8'=i6
  10: -3+i1 == 0 /\ i1'=4, i3'=1+i3, i6'=i5, i7'=i5, i9'=i5, i10'=it7
  11: -3+i1 == 0 /\ i1'=5, i3'=1+i3, i7'=i5, i9'=i5, i10'=it8
  12: (-2+i1 == 0 /\ -100+i4 >= 0) /\ i1'=5, i3'=1+i3, i7'=-2+i4
  13: (-2+i1 == 0 /\ -100+i4 >= 0 /\ -1-i4 >= 0) /\ i1'=3, i3'=1+i3, i5'=-2+i4, i7'=-2+i4
  14: (-3+i1 == 0) /\ i1'=3, i3'=1+i3, i5'=1+i5
  15: (-4+i1 == 0) /\ i1'=4, i3'=1+i3, i6'=1+i6
  16: (-3+i1 == 0) /\ i1'=4, i3'=1+i3, i6'=i5, i7'=i5, i9'=i5, i10'=it6

Dependency graph:
0 -> 1
1 -> 1, 1 -> 12
2 -> 2, 2 -> 4, 2 -> 10, 2 -> 11, 2 -> 14, 2 -> 16
4 -> 2, 4 -> 4, 4 -> 10, 4 -> 11, 4 -> 14, 4 -> 16
5 -> 5, 5 -> 7, 5 -> 8, 5 -> 15
7 -> 5, 7 -> 7, 7 -> 8, 7 -> 15
10 -> 5, 10 -> 7, 10 -> 8, 10 -> 15
14 -> 2, 14 -> 4, 14 -> 10, 14 -> 11, 14 -> 14, 14 -> 16
15 -> 5, 15 -> 7, 15 -> 8, 15 -> 15
16 -> 5, 16 -> 7, 16 -> 8, 16 -> 15

Step with 0

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	1[(-2+i1 == 0 /\ 99-i4 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Accelerate

	Loop Acceleration

	Original rule:
	(-2+i1 == 0 /\ 99-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
	New rule:
	(-2+i1 >= 0 /\ -1+it27 >= 0 /\ 2-i1 >= 0 /\ 100-i4-it27 >= 0) /\ i1'=i1, i3'=i3+it27, i4'=i4+it27

		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		99-i4 >= 0 [0]: montonic decrease yields 100-i4-it27 >= 0
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0, 99-i4 >= 0 -> 100-i4-it27 >= 0}

	Removed Trivial Updates

	Original rule:
	(-2+i1 >= 0 /\ -1+it27 >= 0 /\ 2-i1 >= 0 /\ 100-i4-it27 >= 0) /\ i1'=i1, i3'=i3+it27, i4'=i4+it27
	New rule:
	(-2+i1 >= 0 /\ -1+it27 >= 0 /\ 2-i1 >= 0 /\ 100-i4-it27 >= 0) /\ i3'=i3+it27, i4'=i4+it27
	
	Instantiation

	Original rule:
	(-2+i1 >= 0 /\ -1+it27 >= 0 /\ 2-i1 >= 0 /\ 100-i4-it27 >= 0) /\ i3'=i3+it27, i4'=i4+it27
	New rule:
	(0 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ 99-i4 >= 0) /\ i3'=100+i3-i4, i4'=100

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f5 -> 2
f17 -> 3
f32 -> 4
f13 -> 5

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=0
   1: (-2+i1 == 0 /\ 99-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
   2: -3+i1 == 0 /\ i1'=3, i3'=1+i3
   4: -3+i1 == 0 /\ i1'=3, i3'=1+i3, i5'=1+i5
   5: -4+i1 == 0 /\ i1'=4, i3'=1+i3
   7: -4+i1 == 0 /\ i1'=4, i3'=1+i3, i6'=1+i6
   8: -4+i1 == 0 /\ i1'=5, i3'=1+i3, i7'=i6, i8'=i6
  10: -3+i1 == 0 /\ i1'=4, i3'=1+i3, i6'=i5, i7'=i5, i9'=i5, i10'=it7
  11: -3+i1 == 0 /\ i1'=5, i3'=1+i3, i7'=i5, i9'=i5, i10'=it8
  12: (-2+i1 == 0 /\ -100+i4 >= 0) /\ i1'=5, i3'=1+i3, i7'=-2+i4
  13: (-2+i1 == 0 /\ -100+i4 >= 0 /\ -1-i4 >= 0) /\ i1'=3, i3'=1+i3, i5'=-2+i4, i7'=-2+i4
  14: (-3+i1 == 0) /\ i1'=3, i3'=1+i3, i5'=1+i5
  15: (-4+i1 == 0) /\ i1'=4, i3'=1+i3, i6'=1+i6
  16: (-3+i1 == 0) /\ i1'=4, i3'=1+i3, i6'=i5, i7'=i5, i9'=i5, i10'=it6
  17: (0 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ 99-i4 >= 0) /\ i3'=100+i3-i4, i4'=100

Dependency graph:
0 -> 1, 0 -> 17
1 -> 1, 1 -> 12, 1 -> 17
2 -> 2, 2 -> 4, 2 -> 10, 2 -> 11, 2 -> 14, 2 -> 16
4 -> 2, 4 -> 4, 4 -> 10, 4 -> 11, 4 -> 14, 4 -> 16
5 -> 5, 5 -> 7, 5 -> 8, 5 -> 15
7 -> 5, 7 -> 7, 7 -> 8, 7 -> 15
10 -> 5, 10 -> 7, 10 -> 8, 10 -> 15
14 -> 2, 14 -> 4, 14 -> 10, 14 -> 11, 14 -> 14, 14 -> 16
15 -> 5, 15 -> 7, 15 -> 8, 15 -> 15
16 -> 5, 16 -> 7, 16 -> 8, 16 -> 15
17 -> 1, 17 -> 12

	Trace

	0[(-1+i1 == 0)]
	17[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ 99-i4 >= 0)]
	
	Blocked

	{}
	{}
	{1[T], 17[T]}
	
Step with 12

	Trace

	0[(-1+i1 == 0)]
	17[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ 99-i4 >= 0)]
	12[(-2+i1 == 0 /\ -100+i4 >= 0)]
	
	Blocked

	{}
	{}
	{1[T], 17[T]}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	17[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ 99-i4 >= 0)]
	
	Blocked

	{}
	{}
	{1[T], 12[T], 17[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{17[T]}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	1[(-2+i1 == 0 /\ 99-i4 >= 0)]
	
	Blocked

	{}
	{17[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{1[T], 17[T]}
	
Backtrack

	Trace

	Blocked

	{0[T]}
	
Accept

Constant


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄, X₅, X₆
  Temp_Vars:  H, I
  Locations:  l0, l1, l2, l3, l4
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l1(0, X₁, X₂, X₃, X₄, X₅, X₆)
  t₁: l1(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l1(1+X₀, X₁, X₂, X₃, X₄, X₅, X₆) :|: X₀ ≤ 99
  t₁₃: l1(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l2(X₀, X₀-2, X₂, X₀-2, X₄, X₅, X₆) :|: 1+X₀ ≤ 0 ∧ 100 ≤ X₀
  t₁₂: l1(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l4(X₀, X₁, X₂, X₀-2, X₄, X₅, X₆) :|: 100 ≤ X₀
  t₂: l2(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l2(X₀, X₁, X₂, X₃, X₄, X₅, X₆)
  t₃: l2(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l2(X₀, 1+X₁, X₂, X₃, X₄, X₅, X₆) :|: 1+H ≤ 0
  t₄: l2(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l2(X₀, 1+X₁, X₂, X₃, X₄, X₅, X₆)
  t₉: l2(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l3(X₀, X₁, X₁, X₁, X₄, X₁, H) :|: 1+I ≤ 0
  t₁₀: l2(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l3(X₀, X₁, X₁, X₁, X₄, X₁, H)
  t₁₁: l2(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l4(X₀, X₁, X₂, X₁, X₄, X₁, H)
  t₅: l3(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l3(X₀, X₁, X₂, X₃, X₄, X₅, X₆)
  t₆: l3(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l3(X₀, X₁, 1+X₂, X₃, X₄, X₅, X₆) :|: 1+H ≤ 0
  t₇: l3(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l3(X₀, X₁, 1+X₂, X₃, X₄, X₅, X₆)
  t₈: l3(X₀, X₁, X₂, X₃, X₄, X₅, X₆) → l4(X₀, X₁, X₂, X₂, X₂, X₅, X₆)


Preprocessing
  Cut unsatisfiable transition [t₁₃: l1→l2]


  Cut unreachable locations [l2; l3] from the program graph


  Eliminate variables [X₁; X₂; X₃; X₄; X₅; X₆] that do not contribute to the problem


  Found invariant X₀ ≤ 100 ∧ 0 ≤ X₀ for location l1


  Found invariant X₀ ≤ 100 ∧ 100 ≤ X₀ for location l4


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀
  Temp_Vars:  
  Locations:  l0, l1, l4
  Return Locations:  
  Transitions:
  t₁₄: l0(X₀) → l1(0)
  t₁₅: l1(X₀) → l1(1+X₀) :|: X₀ ≤ 99 ∧ X₀ ≤ 100 ∧ 0 ≤ X₀
  t₁₆: l1(X₀) → l4(X₀) :|: 100 ≤ X₀ ∧ X₀ ≤ 100 ∧ 0 ≤ X₀


MPRF for transition t₁₅: l1(X₀) → l1(1+X₀) :|: X₀ ≤ 99 ∧ X₀ ≤ 100 ∧ 0 ≤ X₀ of depth 1:
  new bound:
    101 {O(1)}

  MPRF:
    • l1: [101-X₀]




All Bounds
Timebounds
  Overall timebound:103 {O(1)}
    t₁₄: 1 {O(1)}
    t₁₅: 101 {O(1)}
    t₁₆: 1 {O(1)}


Costbounds
  Overall costbound: 103 {O(1)}
    t₁₄: 1 {O(1)}
    t₁₅: 101 {O(1)}
    t₁₆: 1 {O(1)}


Sizebounds
    t₁₄, X₀: 0 {O(1)}
    t₁₅, X₀: 100 {O(1)}
    t₁₆, X₀: 100 {O(1)}

