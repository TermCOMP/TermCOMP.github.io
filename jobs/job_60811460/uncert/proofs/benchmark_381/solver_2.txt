WORST_CASE(?,O(1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [f13/4]
1. non_recursive  : [exit_location/1]
2. recursive  : [f19/8,f22/8]
3. recursive  : [f35/10,f38/10]
4. recursive  : [f32/10,f35_loop_cont/11]
5. recursive  : [f48/14,f52/14]
6. non_recursive  : [f71/13]
7. non_recursive  : [f63/13]
8. non_recursive  : [f62/13]
9. non_recursive  : [f48_loop_cont/14]
10. non_recursive  : [f32_loop_cont/14]
11. non_recursive  : [f19_loop_cont/14]
12. non_recursive  : [f13_loop_cont/14]
13. non_recursive  : [f0/13]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into f13/4
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into f19/8
3. SCC is partially evaluated into f35/10
4. SCC is partially evaluated into f32/10
5. SCC is partially evaluated into f48/14
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into f63/13
8. SCC is partially evaluated into f62/13
9. SCC is partially evaluated into f48_loop_cont/14
10. SCC is partially evaluated into f32_loop_cont/14
11. SCC is partially evaluated into f19_loop_cont/14
12. SCC is partially evaluated into f13_loop_cont/14
13. SCC is partially evaluated into f0/13

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations f13/4 
* CE 3 is refined into CE [49] 
* CE 4 is refined into CE [50] 
* CE 2 is refined into CE [51] 


### Cost equations --> "Loop" of f13/4 
* CEs [51] --> Loop 49 
* CEs [49] --> Loop 50 
* CEs [50] --> Loop 51 

### Ranking functions of CR f13(B,F,O,P) 
* RF of phase [49]: [-F+12]

#### Partial ranking functions of CR f13(B,F,O,P) 
* Partial RF of phase [49]:
  - RF of loop [49:1]:
    -F+12


### Specialization of cost equations f19/8 
* CE 13 is refined into CE [52] 
* CE 12 is refined into CE [53] 
* CE 9 is refined into CE [54] 
* CE 10 is discarded (unfeasible) 
* CE 7 is refined into CE [55] 
* CE 8 is discarded (unfeasible) 
* CE 11 is refined into CE [56] 


### Cost equations --> "Loop" of f19/8 
* CEs [54] --> Loop 52 
* CEs [55] --> Loop 53 
* CEs [56] --> Loop 54 
* CEs [52] --> Loop 55 
* CEs [53] --> Loop 56 

### Ranking functions of CR f19(B,C,F,G,O,P,Q,R) 
* RF of phase [52]: [-F+12]
* RF of phase [54]: [-F+12]

#### Partial ranking functions of CR f19(B,C,F,G,O,P,Q,R) 
* Partial RF of phase [52]:
  - RF of loop [52:1]:
    -F+12
* Partial RF of phase [54]:
  - RF of loop [54:1]:
    -F+12


### Specialization of cost equations f35/10 
* CE 28 is refined into CE [57] 
* CE 27 is refined into CE [58] 
* CE 24 is refined into CE [59] 
* CE 25 is refined into CE [60] 
* CE 22 is refined into CE [61] 
* CE 23 is refined into CE [62] 
* CE 26 is refined into CE [63] 


### Cost equations --> "Loop" of f35/10 
* CEs [59] --> Loop 57 
* CEs [60] --> Loop 58 
* CEs [61] --> Loop 59 
* CEs [62] --> Loop 60 
* CEs [63] --> Loop 61 
* CEs [57] --> Loop 62 
* CEs [58] --> Loop 63 

### Ranking functions of CR f35(A,B,F,H,I,O,P,Q,R,S) 
* RF of phase [57]: [-H+12]
* RF of phase [61]: [-H+12]

#### Partial ranking functions of CR f35(A,B,F,H,I,O,P,Q,R,S) 
* Partial RF of phase [57]:
  - RF of loop [57:1]:
    -H+12
* Partial RF of phase [61]:
  - RF of loop [61:1]:
    -H+12


### Specialization of cost equations f32/10 
* CE 18 is refined into CE [64] 
* CE 16 is refined into CE [65,66,67,68,69,70,71,72,73] 
* CE 19 is refined into CE [74] 
* CE 17 is refined into CE [75,76,77,78,79,80,81,82,83,84,85,86] 


### Cost equations --> "Loop" of f32/10 
* CEs [86] --> Loop 64 
* CEs [85] --> Loop 65 
* CEs [84] --> Loop 66 
* CEs [83] --> Loop 67 
* CEs [82] --> Loop 68 
* CEs [81] --> Loop 69 
* CEs [80] --> Loop 70 
* CEs [78] --> Loop 71 
* CEs [79] --> Loop 72 
* CEs [77] --> Loop 73 
* CEs [76] --> Loop 74 
* CEs [75] --> Loop 75 
* CEs [64] --> Loop 76 
* CEs [73] --> Loop 77 
* CEs [72] --> Loop 78 
* CEs [71] --> Loop 79 
* CEs [70] --> Loop 80 
* CEs [69] --> Loop 81 
* CEs [68] --> Loop 82 
* CEs [67] --> Loop 83 
* CEs [66] --> Loop 84 
* CEs [74] --> Loop 85 
* CEs [65] --> Loop 86 

### Ranking functions of CR f32(A,B,F,H,I,O,P,Q,R,S) 
* RF of phase [64]: [-F+11]
* RF of phase [75]: [-F+11]

#### Partial ranking functions of CR f32(A,B,F,H,I,O,P,Q,R,S) 
* Partial RF of phase [64]:
  - RF of loop [64:1]:
    -F+11
* Partial RF of phase [75]:
  - RF of loop [75:1]:
    -F+11


### Specialization of cost equations f48/14 
* CE 37 is refined into CE [87] 
* CE 36 is refined into CE [88] 
* CE 39 is refined into CE [89] 
* CE 38 is refined into CE [90] 
* CE 31 is refined into CE [91] 
* CE 33 is refined into CE [92] 
* CE 32 is discarded (unfeasible) 
* CE 34 is discarded (unfeasible) 
* CE 29 is refined into CE [93] 
* CE 30 is discarded (unfeasible) 
* CE 35 is refined into CE [94] 


### Cost equations --> "Loop" of f48/14 
* CEs [91] --> Loop 87 
* CEs [92] --> Loop 88 
* CEs [93] --> Loop 89 
* CEs [94] --> Loop 90 
* CEs [87] --> Loop 91 
* CEs [88] --> Loop 92 
* CEs [89] --> Loop 93 
* CEs [90] --> Loop 94 

### Ranking functions of CR f48(B,C,D,F,J,K,L,O,P,Q,R,S,T,U) 
* RF of phase [87,88]: [-F+11]
* RF of phase [90]: [-F+11]

#### Partial ranking functions of CR f48(B,C,D,F,J,K,L,O,P,Q,R,S,T,U) 
* Partial RF of phase [87,88]:
  - RF of loop [87:1,88:1]:
    -F+11
* Partial RF of phase [90]:
  - RF of loop [90:1]:
    -F+11


### Specialization of cost equations f63/13 
* CE 47 is refined into CE [95] 
* CE 46 is refined into CE [96] 
* CE 48 is refined into CE [97] 


### Cost equations --> "Loop" of f63/13 
* CEs [95] --> Loop 95 
* CEs [96] --> Loop 96 
* CEs [97] --> Loop 97 

### Ranking functions of CR f63(A,B,C,D,E,F,G,H,I,J,K,L,O) 

#### Partial ranking functions of CR f63(A,B,C,D,E,F,G,H,I,J,K,L,O) 


### Specialization of cost equations f62/13 
* CE 44 is refined into CE [98,99,100] 
* CE 43 is refined into CE [101,102,103] 
* CE 45 is refined into CE [104] 


### Cost equations --> "Loop" of f62/13 
* CEs [100] --> Loop 98 
* CEs [99] --> Loop 99 
* CEs [103] --> Loop 100 
* CEs [102] --> Loop 101 
* CEs [98] --> Loop 102 
* CEs [101] --> Loop 103 
* CEs [104] --> Loop 104 

### Ranking functions of CR f62(A,B,C,D,E,F,G,H,I,J,K,L,O) 

#### Partial ranking functions of CR f62(A,B,C,D,E,F,G,H,I,J,K,L,O) 


### Specialization of cost equations f48_loop_cont/14 
* CE 41 is refined into CE [105] 
* CE 40 is refined into CE [106,107,108,109,110,111,112] 
* CE 42 is refined into CE [113] 


### Cost equations --> "Loop" of f48_loop_cont/14 
* CEs [105] --> Loop 105 
* CEs [112] --> Loop 106 
* CEs [111] --> Loop 107 
* CEs [110] --> Loop 108 
* CEs [109] --> Loop 109 
* CEs [108] --> Loop 110 
* CEs [107] --> Loop 111 
* CEs [106] --> Loop 112 
* CEs [113] --> Loop 113 

### Ranking functions of CR f48_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N) 

#### Partial ranking functions of CR f48_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N) 


### Specialization of cost equations f32_loop_cont/14 
* CE 21 is refined into CE [114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152] 
* CE 20 is refined into CE [153] 


### Cost equations --> "Loop" of f32_loop_cont/14 
* CEs [152] --> Loop 114 
* CEs [139] --> Loop 115 
* CEs [127] --> Loop 116 
* CEs [136] --> Loop 117 
* CEs [126] --> Loop 118 
* CEs [145] --> Loop 119 
* CEs [125] --> Loop 120 
* CEs [149] --> Loop 121 
* CEs [133] --> Loop 122 
* CEs [130] --> Loop 123 
* CEs [142] --> Loop 124 
* CEs [151] --> Loop 125 
* CEs [138] --> Loop 126 
* CEs [135] --> Loop 127 
* CEs [144] --> Loop 128 
* CEs [148] --> Loop 129 
* CEs [132] --> Loop 130 
* CEs [129] --> Loop 131 
* CEs [141] --> Loop 132 
* CEs [124] --> Loop 133 
* CEs [121] --> Loop 134 
* CEs [123] --> Loop 135 
* CEs [120] --> Loop 136 
* CEs [146] --> Loop 137 
* CEs [118] --> Loop 138 
* CEs [116] --> Loop 139 
* CEs [115] --> Loop 140 
* CEs [117] --> Loop 141 
* CEs [114] --> Loop 142 
* CEs [150] --> Loop 143 
* CEs [137] --> Loop 144 
* CEs [134] --> Loop 145 
* CEs [143] --> Loop 146 
* CEs [147] --> Loop 147 
* CEs [131] --> Loop 148 
* CEs [128] --> Loop 149 
* CEs [140] --> Loop 150 
* CEs [122] --> Loop 151 
* CEs [119] --> Loop 152 
* CEs [153] --> Loop 153 

### Ranking functions of CR f32_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N) 

#### Partial ranking functions of CR f32_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N) 


### Specialization of cost equations f19_loop_cont/14 
* CE 14 is refined into CE [154] 
* CE 15 is refined into CE [155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239] 


### Cost equations --> "Loop" of f19_loop_cont/14 
* CEs [154] --> Loop 154 
* CEs [230,234,236,238] --> Loop 155 
* CEs [235,237,239] --> Loop 156 
* CEs [202,203,204] --> Loop 157 
* CEs [172,208,209,210,211] --> Loop 158 
* CEs [189,190,191] --> Loop 159 
* CEs [171,195,196,197,198] --> Loop 160 
* CEs [176,177,178] --> Loop 161 
* CEs [170,182,183,184,185] --> Loop 162 
* CEs [220,222,224] --> Loop 163 
* CEs [169,215,219,221,223,225] --> Loop 164 
* CEs [231,232,233] --> Loop 165 
* CEs [199,200,201] --> Loop 166 
* CEs [186,187,188] --> Loop 167 
* CEs [173,174,175] --> Loop 168 
* CEs [216,217,218] --> Loop 169 
* CEs [159,160,161] --> Loop 170 
* CEs [156,157,158] --> Loop 171 
* CEs [155,165,166,167,168] --> Loop 172 
* CEs [226] --> Loop 173 
* CEs [227,228,229] --> Loop 174 
* CEs [205,206,207] --> Loop 175 
* CEs [192,193,194] --> Loop 176 
* CEs [179,180,181] --> Loop 177 
* CEs [212,213,214] --> Loop 178 
* CEs [162,163,164] --> Loop 179 

### Ranking functions of CR f19_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N) 

#### Partial ranking functions of CR f19_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N) 


### Specialization of cost equations f13_loop_cont/14 
* CE 6 is refined into CE [240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288] 
* CE 5 is refined into CE [289] 


### Cost equations --> "Loop" of f13_loop_cont/14 
* CEs [279,280,281,282,283,284,285,286,287] --> Loop 180 
* CEs [258,259,260,261,262,263,264,265,266,278] --> Loop 181 
* CEs [249,250,251,252,253,254,255,256,257,277] --> Loop 182 
* CEs [267,268,269,270,271,272,273,274,275,276] --> Loop 183 
* CEs [240,241,242,243,244,245,246,247,248] --> Loop 184 
* CEs [288] --> Loop 185 
* CEs [289] --> Loop 186 

### Ranking functions of CR f13_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N) 

#### Partial ranking functions of CR f13_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N) 


### Specialization of cost equations f0/13 
* CE 1 is refined into CE [290,291,292,293,294,295] 


### Cost equations --> "Loop" of f0/13 
* CEs [290,291,292,293,294,295] --> Loop 187 

### Ranking functions of CR f0(A,B,C,D,E,F,G,H,I,J,K,L,O) 

#### Partial ranking functions of CR f0(A,B,C,D,E,F,G,H,I,J,K,L,O) 


Computing Bounds
=====================================

#### Cost of chains of f13(B,F,O,P):
* Chain [[49],51]: 1*it(49)+0
  Such that:it(49) =< -F+12

  with precondition: [B=12,O=3,11>=F,F>=0] 

* Chain [[49],50]: 1*it(49)+0
  Such that:it(49) =< -F+12

  with precondition: [B=12,O=7,P=0,11>=F,F>=0] 

* Chain [51]: 0
  with precondition: [B=12,O=3,F>=0] 


#### Cost of chains of f19(B,C,F,G,O,P,Q,R):
* Chain [[52],56]: 1*it(52)+0
  Such that:it(52) =< -F+12

  with precondition: [B=12,C=1,O=2,P=1,Q=0,R=1,11>=F] 

* Chain [[52],55]: 1*it(52)+0
  Such that:it(52) =< -F+12

  with precondition: [B=12,C=1,O=3,11>=F] 

* Chain [[52],53,[54],56]: 2*it(52)+1
  Such that:aux(1) =< -F+10
aux(2) =< -F+11
it(52) =< aux(1)
it(52) =< aux(2)

  with precondition: [B=12,C=1,O=2,P=0,Q=0,R=0,9>=F] 

* Chain [[52],53,[54],55]: 2*it(52)+1
  Such that:aux(3) =< -F+10
aux(4) =< -F+11
it(52) =< aux(3)
it(52) =< aux(4)

  with precondition: [B=12,C=1,O=3,9>=F] 

* Chain [[52],53,56]: 1*it(52)+1
  Such that:it(52) =< -F+11

  with precondition: [B=12,C=1,O=2,P=0,Q=0,R=0,10>=F] 

* Chain [[52],53,55]: 1*it(52)+1
  Such that:it(52) =< -F+11

  with precondition: [B=12,C=1,O=3,10>=F] 

* Chain [56]: 0
  with precondition: [B=12,O=2,Q=0,R=G,C=P,1>=C,C>=0,F>=12] 

* Chain [55]: 0
  with precondition: [B=12,O=3,1>=C,C>=0] 

* Chain [53,[54],56]: 1*it(54)+1
  Such that:it(54) =< -F+11

  with precondition: [B=12,C=1,O=2,P=0,Q=0,R=0,10>=F] 

* Chain [53,[54],55]: 1*it(54)+1
  Such that:it(54) =< -F+11

  with precondition: [B=12,C=1,O=3,10>=F] 

* Chain [53,56]: 1
  with precondition: [B=12,C=1,F=11,O=2,P=0,Q=0,R=0] 

* Chain [53,55]: 1
  with precondition: [B=12,C=1,O=3,11>=F] 


#### Cost of chains of f35(A,B,F,H,I,O,P,Q,R,S):
* Chain [[61],63]: 1*it(61)+0
  Such that:it(61) =< -H+12

  with precondition: [A=0,B=12,O=2,P=0,R=12,S=0,F+1=Q,11>=H,H>=F+1] 

* Chain [[61],62]: 1*it(61)+0
  Such that:it(61) =< -H+12

  with precondition: [A=0,B=12,O=3,11>=H,H>=F+1] 

* Chain [[57],63]: 1*it(57)+0
  Such that:it(57) =< -H+12

  with precondition: [B=12,O=2,P=1,R=12,S=1,F+1=Q,11>=H,A>=1,H>=F+1] 

* Chain [[57],62]: 1*it(57)+0
  Such that:it(57) =< -H+12

  with precondition: [B=12,O=3,11>=H,A>=1,H>=F+1] 

* Chain [[57],59,[61],63]: 2*it(57)+1
  Such that:aux(7) =< -H+10
aux(8) =< -H+11
it(57) =< aux(7)
it(57) =< aux(8)

  with precondition: [B=12,O=2,P=0,R=12,S=0,F+1=Q,9>=H,A>=1,H>=F+1] 

* Chain [[57],59,[61],62]: 2*it(57)+1
  Such that:aux(9) =< -H+10
aux(10) =< -H+11
it(57) =< aux(9)
it(57) =< aux(10)

  with precondition: [B=12,O=3,9>=H,A>=1,H>=F+1] 

* Chain [[57],59,63]: 1*it(57)+1
  Such that:it(57) =< -H+11

  with precondition: [B=12,O=2,P=0,R=12,S=0,F+1=Q,10>=H,A>=1,H>=F+1] 

* Chain [[57],59,62]: 1*it(57)+1
  Such that:it(57) =< -H+11

  with precondition: [B=12,O=3,10>=H,A>=1,H>=F+1] 

* Chain [62]: 0
  with precondition: [B=12,O=3,10>=F,H>=F+1] 

* Chain [60,[61],63]: 1*it(61)+1
  Such that:it(61) =< -Q+11

  with precondition: [B=12,O=2,P=0,R=12,S=0,F+1=H,F+1=Q,0>=A+1,9>=F] 

* Chain [60,[61],62]: 1*it(61)+1
  Such that:it(61) =< -F+10

  with precondition: [B=12,O=3,F+1=H,0>=A+1,9>=F] 

* Chain [60,63]: 1
  with precondition: [B=12,F=10,H=11,O=2,P=0,Q=11,R=12,S=0,0>=A+1] 

* Chain [60,62]: 1
  with precondition: [B=12,O=3,F+1=H,0>=A+1,10>=F] 

* Chain [59,[61],63]: 1*it(61)+1
  Such that:it(61) =< -H+11

  with precondition: [B=12,O=2,P=0,R=12,S=0,F+1=Q,10>=H,A>=1,H>=F+1] 

* Chain [59,[61],62]: 1*it(61)+1
  Such that:it(61) =< -H+11

  with precondition: [B=12,O=3,10>=H,A>=1,H>=F+1] 

* Chain [59,63]: 1
  with precondition: [B=12,H=11,O=2,P=0,R=12,S=0,F+1=Q,10>=F,A>=1] 

* Chain [59,62]: 1
  with precondition: [B=12,O=3,11>=H,A>=1,H>=F+1] 

* Chain [58,[57],63]: 1*it(57)+1
  Such that:it(57) =< -Q+11

  with precondition: [B=12,O=2,P=1,R=12,S=1,F+1=H,F+1=Q,0>=A+1,9>=F] 

* Chain [58,[57],62]: 1*it(57)+1
  Such that:it(57) =< -F+10

  with precondition: [B=12,O=3,F+1=H,0>=A+1,9>=F] 

* Chain [58,[57],59,[61],63]: 2*it(57)+2
  Such that:aux(7) =< -Q+9
aux(8) =< -Q+10
it(57) =< aux(7)
it(57) =< aux(8)

  with precondition: [B=12,O=2,P=0,R=12,S=0,F+1=H,F+1=Q,0>=A+1,7>=F] 

* Chain [58,[57],59,[61],62]: 2*it(57)+2
  Such that:aux(9) =< -H+9
aux(10) =< -H+10
it(57) =< aux(9)
it(57) =< aux(10)

  with precondition: [B=12,O=3,F+1=H,0>=A+1,7>=F] 

* Chain [58,[57],59,63]: 1*it(57)+2
  Such that:it(57) =< -Q+10

  with precondition: [B=12,O=2,P=0,R=12,S=0,F+1=H,F+1=Q,0>=A+1,8>=F] 

* Chain [58,[57],59,62]: 1*it(57)+2
  Such that:it(57) =< -F+9

  with precondition: [B=12,O=3,F+1=H,0>=A+1,8>=F] 

* Chain [58,63]: 1
  with precondition: [B=12,F=10,H=11,O=2,P=1,Q=11,R=12,S=1,0>=A+1] 

* Chain [58,62]: 1
  with precondition: [B=12,O=3,F+1=H,0>=A+1,10>=F] 

* Chain [58,59,[61],63]: 1*it(61)+2
  Such that:it(61) =< -Q+10

  with precondition: [B=12,O=2,P=0,R=12,S=0,F+1=H,F+1=Q,0>=A+1,8>=F] 

* Chain [58,59,[61],62]: 1*it(61)+2
  Such that:it(61) =< -F+9

  with precondition: [B=12,O=3,F+1=H,0>=A+1,8>=F] 

* Chain [58,59,63]: 2
  with precondition: [B=12,F=9,H=10,O=2,P=0,Q=10,R=12,S=0,0>=A+1] 

* Chain [58,59,62]: 2
  with precondition: [B=12,O=3,F+1=H,0>=A+1,9>=F] 


#### Cost of chains of f32(A,B,F,H,I,O,P,Q,R,S):
* Chain [[64],85]: 1*it(64)+1*s(19)+0
  Such that:aux(18) =< -F+11
it(64) =< aux(18)
s(19) =< it(64)*aux(18)

  with precondition: [A=1,B=12,O=3,10>=F] 

* Chain [[64],80]: 1*it(64)+1*s(19)+0
  Such that:it(64) =< -F+10
aux(17) =< -F+11
it(64) =< aux(17)
s(19) =< it(64)*aux(17)

  with precondition: [A=1,B=12,O=3,9>=F] 

* Chain [[64],79]: 2*it(64)+1*s(19)+1
  Such that:aux(19) =< -F+10
aux(20) =< -F+11
it(64) =< aux(19)
it(64) =< aux(20)
s(19) =< it(64)*aux(20)

  with precondition: [A=1,B=12,O=3,9>=F] 

* Chain [[64],78]: 1*it(64)+1*s(19)+2*s(22)+1
  Such that:aux(17) =< -F+11
aux(21) =< -F+9
aux(22) =< -F+10
it(64) =< aux(21)
s(21) =< aux(21)
it(64) =< aux(22)
s(21) =< aux(22)
s(22) =< s(21)
it(64) =< aux(17)
s(19) =< it(64)*aux(17)

  with precondition: [A=1,B=12,O=3,8>=F] 

* Chain [[64],77]: 1*it(64)+1*s(19)+2*s(25)+1
  Such that:s(23) =< -F+8
aux(17) =< -F+11
aux(23) =< -F+9
aux(24) =< -F+10
it(64) =< aux(23)
s(23) =< aux(23)
s(24) =< aux(23)
it(64) =< aux(24)
s(24) =< aux(24)
s(25) =< s(23)
s(25) =< s(24)
it(64) =< aux(17)
s(19) =< it(64)*aux(17)

  with precondition: [A=1,B=12,O=3,7>=F] 

* Chain [[64],76]: 1*it(64)+1*s(19)+0
  Such that:aux(25) =< -F+11
it(64) =< aux(25)
s(19) =< it(64)*aux(25)

  with precondition: [A=1,B=12,O=6,P=1,Q=0,R=12,S=1,10>=F] 

* Chain [[64],72,85]: 1*it(64)+1*s(19)+2
  Such that:it(64) =< -F+10
aux(17) =< -F+11
it(64) =< aux(17)
s(19) =< it(64)*aux(17)

  with precondition: [A=1,B=12,O=3,9>=F] 

* Chain [[64],72,76]: 1*it(64)+1*s(19)+2
  Such that:it(64) =< -F+10
aux(17) =< -F+11
it(64) =< aux(17)
s(19) =< it(64)*aux(17)

  with precondition: [A=1,B=12,O=6,P=0,Q=0,R=12,S=0,9>=F] 

* Chain [[64],67,[75],86]: 1*it(64)+2*it(75)+1*s(19)+1*s(29)+2*s(31)+2
  Such that:aux(28) =< -F+8
aux(17) =< -F+11
aux(31) =< -F+9
aux(32) =< -F+10
aux(28) =< aux(31)
aux(30) =< aux(31)
it(64) =< aux(31)
aux(30) =< aux(32)
it(64) =< aux(32)
it(75) =< aux(28)
it(75) =< aux(30)
s(29) =< it(75)*aux(30)
s(31) =< aux(30)
it(64) =< aux(17)
s(19) =< it(64)*aux(17)

  with precondition: [A=1,B=12,O=3,7>=F] 

* Chain [[64],67,[75],85]: 1*it(64)+3*it(75)+1*s(19)+1*s(29)+2
  Such that:aux(17) =< -F+11
aux(35) =< -F+9
aux(36) =< -F+10
aux(34) =< aux(35)
it(64) =< aux(35)
aux(34) =< aux(36)
it(64) =< aux(36)
it(75) =< aux(34)
s(29) =< it(75)*aux(34)
it(64) =< aux(17)
s(19) =< it(64)*aux(17)

  with precondition: [A=1,B=12,O=3,8>=F] 

* Chain [[64],67,[75],80]: 1*it(64)+1*it(75)+1*s(19)+1*s(29)+2*s(31)+2
  Such that:it(75) =< -F+8
aux(17) =< -F+11
aux(38) =< -F+9
aux(39) =< -F+10
aux(37) =< aux(38)
it(64) =< aux(38)
it(75) =< aux(38)
aux(37) =< aux(39)
it(64) =< aux(39)
it(75) =< aux(37)
s(29) =< it(75)*aux(37)
s(31) =< aux(37)
it(64) =< aux(17)
s(19) =< it(64)*aux(17)

  with precondition: [A=1,B=12,O=3,7>=F] 

* Chain [[64],67,[75],76]: 1*it(64)+3*it(75)+1*s(19)+1*s(29)+2
  Such that:aux(17) =< -F+11
aux(42) =< -F+9
aux(43) =< -F+10
aux(41) =< aux(42)
it(64) =< aux(42)
aux(41) =< aux(43)
it(64) =< aux(43)
it(75) =< aux(41)
s(29) =< it(75)*aux(41)
it(64) =< aux(17)
s(19) =< it(64)*aux(17)

  with precondition: [A=1,B=12,O=6,P=0,Q=0,R=12,S=0,8>=F] 

* Chain [[64],67,86]: 1*it(64)+1*s(19)+3*s(26)+2
  Such that:aux(17) =< -F+11
aux(45) =< -F+9
aux(46) =< -F+10
aux(44) =< aux(45)
it(64) =< aux(45)
aux(44) =< aux(46)
it(64) =< aux(46)
s(26) =< aux(44)
it(64) =< aux(17)
s(19) =< it(64)*aux(17)

  with precondition: [A=1,B=12,O=3,8>=F] 

* Chain [[64],67,85]: 1*it(64)+1*s(19)+2*s(31)+2
  Such that:aux(17) =< -F+11
aux(47) =< -F+9
aux(48) =< -F+10
it(64) =< aux(47)
s(30) =< aux(47)
it(64) =< aux(48)
s(30) =< aux(48)
s(31) =< s(30)
it(64) =< aux(17)
s(19) =< it(64)*aux(17)

  with precondition: [A=1,B=12,O=3,8>=F] 

* Chain [[64],67,80]: 1*it(64)+1*s(19)+2*s(31)+2
  Such that:aux(17) =< -F+11
aux(49) =< -F+9
aux(50) =< -F+10
it(64) =< aux(49)
s(30) =< aux(49)
it(64) =< aux(50)
s(30) =< aux(50)
s(31) =< s(30)
it(64) =< aux(17)
s(19) =< it(64)*aux(17)

  with precondition: [A=1,B=12,O=3,8>=F] 

* Chain [[64],66,[75],86]: 1*it(64)+4*it(75)+1*s(19)+1*s(29)+2
  Such that:aux(51) =< -F+8
aux(17) =< -F+11
aux(53) =< -F+9
aux(54) =< -F+10
aux(51) =< aux(53)
aux(52) =< aux(53)
it(64) =< aux(53)
aux(52) =< aux(54)
it(64) =< aux(54)
it(75) =< aux(51)
it(75) =< aux(52)
s(29) =< it(75)*aux(52)
it(64) =< aux(17)
s(19) =< it(64)*aux(17)

  with precondition: [A=1,B=12,O=3,7>=F] 

* Chain [[64],66,[75],85]: 1*it(64)+1*it(75)+1*s(19)+1*s(29)+2*s(34)+2
  Such that:s(32) =< -F+8
aux(17) =< -F+11
aux(56) =< -F+9
aux(57) =< -F+10
aux(55) =< aux(56)
it(64) =< aux(56)
s(32) =< aux(56)
aux(55) =< aux(57)
it(64) =< aux(57)
it(75) =< aux(55)
s(29) =< it(75)*aux(55)
s(34) =< s(32)
s(34) =< aux(55)
it(64) =< aux(17)
s(19) =< it(64)*aux(17)

  with precondition: [A=1,B=12,O=3,7>=F] 

* Chain [[64],66,[75],80]: 1*it(64)+3*it(75)+1*s(19)+1*s(29)+2
  Such that:aux(58) =< -F+8
aux(17) =< -F+11
aux(60) =< -F+9
aux(61) =< -F+10
aux(58) =< aux(60)
aux(59) =< aux(60)
it(64) =< aux(60)
aux(59) =< aux(61)
it(64) =< aux(61)
it(75) =< aux(58)
it(75) =< aux(59)
s(29) =< it(75)*aux(59)
it(64) =< aux(17)
s(19) =< it(64)*aux(17)

  with precondition: [A=1,B=12,O=3,7>=F] 

* Chain [[64],66,[75],76]: 1*it(64)+1*it(75)+1*s(19)+1*s(29)+2*s(34)+2
  Such that:s(32) =< -F+8
aux(17) =< -F+11
aux(63) =< -F+9
aux(64) =< -F+10
aux(62) =< aux(63)
it(64) =< aux(63)
s(32) =< aux(63)
aux(62) =< aux(64)
it(64) =< aux(64)
it(75) =< aux(62)
s(29) =< it(75)*aux(62)
s(34) =< s(32)
s(34) =< aux(62)
it(64) =< aux(17)
s(19) =< it(64)*aux(17)

  with precondition: [A=1,B=12,O=6,P=0,Q=0,R=12,S=0,7>=F] 

* Chain [[64],66,86]: 1*it(64)+1*s(19)+1*s(26)+2*s(34)+2
  Such that:s(32) =< -F+8
aux(17) =< -F+11
aux(66) =< -F+9
aux(67) =< -F+10
aux(65) =< aux(66)
it(64) =< aux(66)
s(32) =< aux(66)
aux(65) =< aux(67)
it(64) =< aux(67)
s(26) =< aux(65)
s(34) =< s(32)
s(34) =< aux(65)
it(64) =< aux(17)
s(19) =< it(64)*aux(17)

  with precondition: [A=1,B=12,O=3,7>=F] 

* Chain [[64],66,85]: 1*it(64)+1*s(19)+2*s(34)+2
  Such that:s(32) =< -F+8
aux(17) =< -F+11
aux(68) =< -F+9
aux(69) =< -F+10
it(64) =< aux(68)
s(32) =< aux(68)
s(33) =< aux(68)
it(64) =< aux(69)
s(33) =< aux(69)
s(34) =< s(32)
s(34) =< s(33)
it(64) =< aux(17)
s(19) =< it(64)*aux(17)

  with precondition: [A=1,B=12,O=3,7>=F] 

* Chain [[64],66,80]: 1*it(64)+1*s(19)+2*s(34)+2
  Such that:s(32) =< -F+8
aux(17) =< -F+11
aux(70) =< -F+9
aux(71) =< -F+10
it(64) =< aux(70)
s(32) =< aux(70)
s(33) =< aux(70)
it(64) =< aux(71)
s(33) =< aux(71)
s(34) =< s(32)
s(34) =< s(33)
it(64) =< aux(17)
s(19) =< it(64)*aux(17)

  with precondition: [A=1,B=12,O=3,7>=F] 

* Chain [85]: 0
  with precondition: [B=12,O=3,1>=A,A>=0] 

* Chain [80]: 0
  with precondition: [B=12,O=3,1>=A,10>=F,A>=0] 

* Chain [79]: 1*s(20)+1
  Such that:s(20) =< -F+11

  with precondition: [A=1,B=12,O=3,10>=F] 

* Chain [78]: 2*s(22)+1
  Such that:s(21) =< -F+10
s(22) =< s(21)

  with precondition: [A=1,B=12,O=3,9>=F] 

* Chain [77]: 2*s(25)+1
  Such that:s(23) =< -F+9
s(24) =< -F+10
s(25) =< s(23)
s(25) =< s(24)

  with precondition: [A=1,B=12,O=3,8>=F] 

* Chain [76]: 0
  with precondition: [B=12,O=6,Q=0,R=H,S=I,A=P,1>=A,A>=0,F>=11] 

* Chain [72,85]: 2
  with precondition: [A=1,B=12,F=10,O=3] 

* Chain [72,76]: 2
  with precondition: [A=1,B=12,F=10,O=6,P=0,Q=0,R=12,S=0] 

* Chain [67,[75],86]: 2*it(75)+1*s(29)+2*s(31)+2
  Such that:aux(28) =< -F+9
aux(30) =< -F+10
it(75) =< aux(28)
it(75) =< aux(30)
s(29) =< it(75)*aux(30)
s(31) =< aux(30)

  with precondition: [A=1,B=12,O=3,8>=F] 

* Chain [67,[75],85]: 3*it(75)+1*s(29)+2
  Such that:aux(34) =< -F+10
it(75) =< aux(34)
s(29) =< it(75)*aux(34)

  with precondition: [A=1,B=12,O=3,9>=F] 

* Chain [67,[75],80]: 1*it(75)+1*s(29)+2*s(31)+2
  Such that:it(75) =< -F+9
aux(37) =< -F+10
it(75) =< aux(37)
s(29) =< it(75)*aux(37)
s(31) =< aux(37)

  with precondition: [A=1,B=12,O=3,8>=F] 

* Chain [67,[75],76]: 3*it(75)+1*s(29)+2
  Such that:aux(41) =< -F+10
it(75) =< aux(41)
s(29) =< it(75)*aux(41)

  with precondition: [A=1,B=12,O=6,P=0,Q=0,R=12,S=0,9>=F] 

* Chain [67,86]: 3*s(26)+2
  Such that:aux(44) =< -F+10
s(26) =< aux(44)

  with precondition: [A=1,B=12,O=3,9>=F] 

* Chain [67,85]: 2*s(31)+2
  Such that:s(30) =< -F+10
s(31) =< s(30)

  with precondition: [A=1,B=12,O=3,9>=F] 

* Chain [67,80]: 2*s(31)+2
  Such that:s(30) =< -F+10
s(31) =< s(30)

  with precondition: [A=1,B=12,O=3,9>=F] 

* Chain [66,[75],86]: 4*it(75)+1*s(29)+2
  Such that:aux(51) =< -F+9
aux(52) =< -F+10
it(75) =< aux(51)
it(75) =< aux(52)
s(29) =< it(75)*aux(52)

  with precondition: [A=1,B=12,O=3,8>=F] 

* Chain [66,[75],85]: 1*it(75)+1*s(29)+2*s(34)+2
  Such that:s(32) =< -F+9
aux(55) =< -F+10
it(75) =< aux(55)
s(29) =< it(75)*aux(55)
s(34) =< s(32)
s(34) =< aux(55)

  with precondition: [A=1,B=12,O=3,8>=F] 

* Chain [66,[75],80]: 3*it(75)+1*s(29)+2
  Such that:aux(58) =< -F+9
aux(59) =< -F+10
it(75) =< aux(58)
it(75) =< aux(59)
s(29) =< it(75)*aux(59)

  with precondition: [A=1,B=12,O=3,8>=F] 

* Chain [66,[75],76]: 1*it(75)+1*s(29)+2*s(34)+2
  Such that:s(32) =< -F+9
aux(62) =< -F+10
it(75) =< aux(62)
s(29) =< it(75)*aux(62)
s(34) =< s(32)
s(34) =< aux(62)

  with precondition: [A=1,B=12,O=6,P=0,Q=0,R=12,S=0,8>=F] 

* Chain [66,86]: 1*s(26)+2*s(34)+2
  Such that:s(32) =< -F+9
aux(65) =< -F+10
s(26) =< aux(65)
s(34) =< s(32)
s(34) =< aux(65)

  with precondition: [A=1,B=12,O=3,8>=F] 

* Chain [66,85]: 2*s(34)+2
  Such that:s(32) =< -F+9
s(33) =< -F+10
s(34) =< s(32)
s(34) =< s(33)

  with precondition: [A=1,B=12,O=3,8>=F] 

* Chain [66,80]: 2*s(34)+2
  Such that:s(32) =< -F+9
s(33) =< -F+10
s(34) =< s(32)
s(34) =< s(33)

  with precondition: [A=1,B=12,O=3,8>=F] 


#### Cost of chains of f48(B,C,D,F,J,K,L,O,P,Q,R,S,T,U):
* Chain [[87,88],94]: 2*it(87)+0
  Such that:aux(87) =< -F+11
it(87) =< aux(87)

  with precondition: [B=12,C=0,D=1,O=5,P=0,Q=1,R=11,T=1,U=1,10>=F] 

* Chain [[87,88],93]: 2*it(87)+0
  Such that:aux(88) =< -F+11
it(87) =< aux(88)

  with precondition: [B=12,D=1,O=3,10>=F] 

* Chain [[87,88],92]: 2*it(87)+0
  Such that:aux(89) =< -F+11
it(87) =< aux(89)

  with precondition: [B=12,D=1,O=4,Q=1,R=11,T=1,C=P,L=U,0>=C+1,10>=F] 

* Chain [[87,88],91]: 2*it(87)+0
  Such that:aux(90) =< -F+11
it(87) =< aux(90)

  with precondition: [B=12,D=1,O=4,Q=1,R=11,T=1,C=P,L=U,10>=F,C>=1] 

* Chain [[87,88],89,[90],94]: 2*it(87)+1*it(90)+1
  Such that:aux(85) =< -F+11
aux(91) =< -F+9
aux(92) =< -F+10
aux(86) =< aux(91)
it(90) =< aux(91)
aux(86) =< aux(92)
it(90) =< aux(92)
it(87) =< aux(85)
it(87) =< aux(86)

  with precondition: [B=12,C=0,D=1,O=5,P=0,Q=0,R=11,T=0,U=1,8>=F] 

* Chain [[87,88],89,[90],93]: 2*it(87)+1*it(90)+1
  Such that:aux(85) =< -F+11
aux(93) =< -F+9
aux(94) =< -F+10
aux(86) =< aux(93)
it(90) =< aux(93)
aux(86) =< aux(94)
it(90) =< aux(94)
it(87) =< aux(85)
it(87) =< aux(86)

  with precondition: [B=12,D=1,O=3,8>=F] 

* Chain [[87,88],89,[90],92]: 2*it(87)+1*it(90)+1
  Such that:aux(85) =< -F+11
aux(95) =< -F+9
aux(96) =< -F+10
aux(86) =< aux(95)
it(90) =< aux(95)
aux(86) =< aux(96)
it(90) =< aux(96)
it(87) =< aux(85)
it(87) =< aux(86)

  with precondition: [B=12,D=1,O=4,Q=0,R=11,T=0,C=P,L=U,0>=C+1,8>=F] 

* Chain [[87,88],89,[90],91]: 2*it(87)+1*it(90)+1
  Such that:aux(85) =< -F+11
aux(97) =< -F+9
aux(98) =< -F+10
aux(86) =< aux(97)
it(90) =< aux(97)
aux(86) =< aux(98)
it(90) =< aux(98)
it(87) =< aux(85)
it(87) =< aux(86)

  with precondition: [B=12,D=1,O=4,Q=0,R=11,T=0,C=P,L=U,8>=F,C>=1] 

* Chain [[87,88],89,94]: 2*it(87)+1
  Such that:aux(86) =< -F+10
aux(85) =< -F+11
it(87) =< aux(85)
it(87) =< aux(86)

  with precondition: [B=12,C=0,D=1,O=5,P=0,Q=0,R=11,T=0,U=1,9>=F] 

* Chain [[87,88],89,93]: 2*it(87)+1
  Such that:aux(86) =< -F+10
aux(85) =< -F+11
it(87) =< aux(85)
it(87) =< aux(86)

  with precondition: [B=12,D=1,O=3,9>=F] 

* Chain [[87,88],89,92]: 2*it(87)+1
  Such that:aux(86) =< -F+10
aux(85) =< -F+11
it(87) =< aux(85)
it(87) =< aux(86)

  with precondition: [B=12,D=1,O=4,Q=0,R=11,T=0,C=P,L=U,0>=C+1,9>=F] 

* Chain [[87,88],89,91]: 2*it(87)+1
  Such that:aux(86) =< -F+10
aux(85) =< -F+11
it(87) =< aux(85)
it(87) =< aux(86)

  with precondition: [B=12,D=1,O=4,Q=0,R=11,T=0,C=P,L=U,9>=F,C>=1] 

* Chain [94]: 0
  with precondition: [B=12,C=0,O=5,P=0,U=1,S=J,T=K,D=Q,F=R,1>=D,D>=0,F>=11] 

* Chain [93]: 0
  with precondition: [B=12,O=3,1>=D,D>=0] 

* Chain [92]: 0
  with precondition: [B=12,O=4,S=J,T=K,U=L,C=P,D=Q,F=R,0>=C+1,1>=D,D>=0,F>=11] 

* Chain [91]: 0
  with precondition: [B=12,O=4,S=J,T=K,U=L,C=P,D=Q,F=R,1>=D,C>=1,D>=0,F>=11] 

* Chain [89,[90],94]: 1*it(90)+1
  Such that:it(90) =< -F+10

  with precondition: [B=12,C=0,D=1,O=5,P=0,Q=0,R=11,T=0,U=1,9>=F] 

* Chain [89,[90],93]: 1*it(90)+1
  Such that:it(90) =< -F+10

  with precondition: [B=12,D=1,O=3,9>=F] 

* Chain [89,[90],92]: 1*it(90)+1
  Such that:it(90) =< -F+10

  with precondition: [B=12,D=1,O=4,Q=0,R=11,T=0,C=P,L=U,0>=C+1,9>=F] 

* Chain [89,[90],91]: 1*it(90)+1
  Such that:it(90) =< -F+10

  with precondition: [B=12,D=1,O=4,Q=0,R=11,T=0,C=P,L=U,9>=F,C>=1] 

* Chain [89,94]: 1
  with precondition: [B=12,C=0,D=1,F=10,O=5,P=0,Q=0,R=11,T=0,U=1] 

* Chain [89,93]: 1
  with precondition: [B=12,D=1,O=3,10>=F] 

* Chain [89,92]: 1
  with precondition: [B=12,D=1,F=10,O=4,Q=0,R=11,T=0,C=P,L=U,0>=C+1] 

* Chain [89,91]: 1
  with precondition: [B=12,D=1,F=10,O=4,Q=0,R=11,T=0,C=P,L=U,C>=1] 


#### Cost of chains of f63(A,B,C,D,E,F,G,H,I,J,K,L,O):
* Chain [97]: 0
  with precondition: [B=12,D=0] 

* Chain [96]: 0
  with precondition: [B=12,0>=D+1] 

* Chain [95]: 0
  with precondition: [B=12,D>=1] 


#### Cost of chains of f62(A,B,C,D,E,F,G,H,I,J,K,L,O):
* Chain [104]: 0
  with precondition: [A=0,B=12] 

* Chain [103]: 0
  with precondition: [B=12,D=0,0>=A+1] 

* Chain [102]: 0
  with precondition: [B=12,D=0,A>=1] 

* Chain [101]: 0
  with precondition: [B=12,0>=A+1,0>=D+1] 

* Chain [100]: 0
  with precondition: [B=12,0>=A+1,D>=1] 

* Chain [99]: 0
  with precondition: [B=12,0>=D+1,A>=1] 

* Chain [98]: 0
  with precondition: [B=12,A>=1,D>=1] 


#### Cost of chains of f48_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N):
* Chain [113]: 0
  with precondition: [A=3,C=12] 

* Chain [112]: 0
  with precondition: [A=4,B=0,C=12] 

* Chain [111]: 0
  with precondition: [A=4,C=12,E=0,0>=B+1] 

* Chain [110]: 0
  with precondition: [A=4,C=12,E=0,B>=1] 

* Chain [109]: 0
  with precondition: [A=4,C=12,0>=B+1,0>=E+1] 

* Chain [108]: 0
  with precondition: [A=4,C=12,0>=B+1,E>=1] 

* Chain [107]: 0
  with precondition: [A=4,C=12,0>=E+1,B>=1] 

* Chain [106]: 0
  with precondition: [A=4,C=12,B>=1,E>=1] 

* Chain [105]: 0
  with precondition: [A=5,C=12] 


#### Cost of chains of f32_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N):
* Chain [153]: 0
  with precondition: [A=3,C=12,E=1] 

* Chain [152]: 1
  with precondition: [A=6,B=0,C=12,E=1,G=10,0>=D+1] 

* Chain [151]: 1
  with precondition: [A=6,B=0,C=12,E=1,G=10,D>=1] 

* Chain [150]: 2*s(249)+0
  Such that:s(248) =< -G+11
s(249) =< s(248)

  with precondition: [A=6,B=0,C=12,E=1,0>=D+1,10>=G] 

* Chain [149]: 1*s(252)+2*s(253)+1
  Such that:s(251) =< -G+10
s(250) =< -G+11
s(252) =< s(251)
s(253) =< s(250)
s(253) =< s(251)

  with precondition: [A=6,B=0,C=12,E=1,0>=D+1,9>=G] 

* Chain [148]: 1*s(258)+2*s(259)+1
  Such that:s(255) =< -G+9
s(256) =< -G+10
s(254) =< -G+11
s(257) =< s(255)
s(258) =< s(255)
s(257) =< s(256)
s(258) =< s(256)
s(259) =< s(254)
s(259) =< s(257)

  with precondition: [A=6,B=0,C=12,E=1,0>=D+1,8>=G] 

* Chain [147]: 0
  with precondition: [A=6,B=0,C=12,E=1,0>=D+1,G>=11] 

* Chain [146]: 2*s(261)+0
  Such that:s(260) =< -G+11
s(261) =< s(260)

  with precondition: [A=6,B=0,C=12,E=1,10>=G,D>=1] 

* Chain [145]: 1*s(264)+2*s(265)+1
  Such that:s(263) =< -G+10
s(262) =< -G+11
s(264) =< s(263)
s(265) =< s(262)
s(265) =< s(263)

  with precondition: [A=6,B=0,C=12,E=1,9>=G,D>=1] 

* Chain [144]: 1*s(270)+2*s(271)+1
  Such that:s(267) =< -G+9
s(268) =< -G+10
s(266) =< -G+11
s(269) =< s(267)
s(270) =< s(267)
s(269) =< s(268)
s(270) =< s(268)
s(271) =< s(266)
s(271) =< s(269)

  with precondition: [A=6,B=0,C=12,E=1,8>=G,D>=1] 

* Chain [143]: 0
  with precondition: [A=6,B=0,C=12,E=1,D>=1,G>=11] 

* Chain [142]: 1
  with precondition: [A=6,C=12,D=0,E=1,G=10] 

* Chain [141]: 2*s(273)+0
  Such that:s(272) =< -G+11
s(273) =< s(272)

  with precondition: [A=6,C=12,D=0,E=1,10>=G] 

* Chain [140]: 1*s(276)+2*s(277)+1
  Such that:s(275) =< -G+10
s(274) =< -G+11
s(276) =< s(275)
s(277) =< s(274)
s(277) =< s(275)

  with precondition: [A=6,C=12,D=0,E=1,9>=G] 

* Chain [139]: 1*s(282)+2*s(283)+1
  Such that:s(279) =< -G+9
s(280) =< -G+10
s(278) =< -G+11
s(281) =< s(279)
s(282) =< s(279)
s(281) =< s(280)
s(282) =< s(280)
s(283) =< s(278)
s(283) =< s(281)

  with precondition: [A=6,C=12,D=0,E=1,8>=G] 

* Chain [138]: 0
  with precondition: [A=6,C=12,D=0,E=1,G>=11] 

* Chain [137]: 0
  with precondition: [A=6,C=12,E=1] 

* Chain [136]: 1
  with precondition: [A=6,C=12,E=1,G=10,0>=B+1,0>=D+1] 

* Chain [135]: 1
  with precondition: [A=6,C=12,E=1,G=10,0>=B+1,D>=1] 

* Chain [134]: 1
  with precondition: [A=6,C=12,E=1,G=10,0>=D+1,B>=1] 

* Chain [133]: 1
  with precondition: [A=6,C=12,E=1,G=10,B>=1,D>=1] 

* Chain [132]: 2*s(285)+0
  Such that:s(284) =< -G+11
s(285) =< s(284)

  with precondition: [A=6,C=12,E=1,0>=B+1,0>=D+1,10>=G] 

* Chain [131]: 1*s(288)+2*s(289)+1
  Such that:s(287) =< -G+10
s(286) =< -G+11
s(288) =< s(287)
s(289) =< s(286)
s(289) =< s(287)

  with precondition: [A=6,C=12,E=1,0>=B+1,0>=D+1,9>=G] 

* Chain [130]: 1*s(294)+2*s(295)+1
  Such that:s(291) =< -G+9
s(292) =< -G+10
s(290) =< -G+11
s(293) =< s(291)
s(294) =< s(291)
s(293) =< s(292)
s(294) =< s(292)
s(295) =< s(290)
s(295) =< s(293)

  with precondition: [A=6,C=12,E=1,0>=B+1,0>=D+1,8>=G] 

* Chain [129]: 0
  with precondition: [A=6,C=12,E=1,0>=B+1,0>=D+1,G>=11] 

* Chain [128]: 2*s(297)+0
  Such that:s(296) =< -G+11
s(297) =< s(296)

  with precondition: [A=6,C=12,E=1,0>=B+1,10>=G,D>=1] 

* Chain [127]: 1*s(300)+2*s(301)+1
  Such that:s(299) =< -G+10
s(298) =< -G+11
s(300) =< s(299)
s(301) =< s(298)
s(301) =< s(299)

  with precondition: [A=6,C=12,E=1,0>=B+1,9>=G,D>=1] 

* Chain [126]: 1*s(306)+2*s(307)+1
  Such that:s(303) =< -G+9
s(304) =< -G+10
s(302) =< -G+11
s(305) =< s(303)
s(306) =< s(303)
s(305) =< s(304)
s(306) =< s(304)
s(307) =< s(302)
s(307) =< s(305)

  with precondition: [A=6,C=12,E=1,0>=B+1,8>=G,D>=1] 

* Chain [125]: 0
  with precondition: [A=6,C=12,E=1,0>=B+1,D>=1,G>=11] 

* Chain [124]: 2*s(309)+0
  Such that:s(308) =< -G+11
s(309) =< s(308)

  with precondition: [A=6,C=12,E=1,0>=D+1,10>=G,B>=1] 

* Chain [123]: 1*s(312)+2*s(313)+1
  Such that:s(311) =< -G+10
s(310) =< -G+11
s(312) =< s(311)
s(313) =< s(310)
s(313) =< s(311)

  with precondition: [A=6,C=12,E=1,0>=D+1,9>=G,B>=1] 

* Chain [122]: 1*s(318)+2*s(319)+1
  Such that:s(315) =< -G+9
s(316) =< -G+10
s(314) =< -G+11
s(317) =< s(315)
s(318) =< s(315)
s(317) =< s(316)
s(318) =< s(316)
s(319) =< s(314)
s(319) =< s(317)

  with precondition: [A=6,C=12,E=1,0>=D+1,8>=G,B>=1] 

* Chain [121]: 0
  with precondition: [A=6,C=12,E=1,0>=D+1,B>=1,G>=11] 

* Chain [120]: 2*s(321)+1
  Such that:s(320) =< -G+11
s(321) =< s(320)

  with precondition: [A=6,C=12,E=1,10>=G] 

* Chain [119]: 2*s(323)+0
  Such that:s(322) =< -G+11
s(323) =< s(322)

  with precondition: [A=6,C=12,E=1,10>=G,B>=1,D>=1] 

* Chain [118]: 1*s(326)+2*s(327)+1
  Such that:s(325) =< -G+10
s(324) =< -G+11
s(326) =< s(325)
s(327) =< s(324)
s(327) =< s(325)

  with precondition: [A=6,C=12,E=1,9>=G] 

* Chain [117]: 1*s(330)+2*s(331)+1
  Such that:s(329) =< -G+10
s(328) =< -G+11
s(330) =< s(329)
s(331) =< s(328)
s(331) =< s(329)

  with precondition: [A=6,C=12,E=1,9>=G,B>=1,D>=1] 

* Chain [116]: 1*s(336)+2*s(337)+1
  Such that:s(333) =< -G+9
s(334) =< -G+10
s(332) =< -G+11
s(335) =< s(333)
s(336) =< s(333)
s(335) =< s(334)
s(336) =< s(334)
s(337) =< s(332)
s(337) =< s(335)

  with precondition: [A=6,C=12,E=1,8>=G] 

* Chain [115]: 1*s(342)+2*s(343)+1
  Such that:s(339) =< -G+9
s(340) =< -G+10
s(338) =< -G+11
s(341) =< s(339)
s(342) =< s(339)
s(341) =< s(340)
s(342) =< s(340)
s(343) =< s(338)
s(343) =< s(341)

  with precondition: [A=6,C=12,E=1,8>=G,B>=1,D>=1] 

* Chain [114]: 0
  with precondition: [A=6,C=12,E=1,B>=1,D>=1,G>=11] 


#### Cost of chains of f19_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N):
* Chain [179]: 88
  with precondition: [A=2,B=1,C=12,D=0,E=1,G=10] 

* Chain [178]: 3*s(357)+3*s(358)+2*s(360)+1*s(366)+2*s(367)+1*s(375)+2*s(376)+1
  Such that:s(371) =< 9
aux(105) =< 10
aux(106) =< 11
aux(107) =< -G+11
s(374) =< s(371)
s(375) =< s(371)
s(374) =< aux(105)
s(375) =< aux(105)
s(376) =< aux(106)
s(376) =< s(374)
s(357) =< aux(107)
s(358) =< s(357)*aux(107)
s(366) =< aux(105)
s(367) =< aux(106)
s(367) =< aux(105)
s(360) =< aux(106)

  with precondition: [A=2,B=1,C=12,D=0,E=1,10>=G] 

* Chain [177]: 3*s(379)+9*s(380)+3*s(381)+3*s(382)+2*s(384)+1*s(393)+2*s(394)+1*s(405)+2*s(406)+3
  Such that:s(401) =< 9
aux(108) =< 10
aux(109) =< 11
aux(110) =< -G+10
aux(111) =< -G+11
s(404) =< s(401)
s(405) =< s(401)
s(404) =< aux(108)
s(405) =< aux(108)
s(406) =< aux(109)
s(406) =< s(404)
s(379) =< aux(110)
s(380) =< aux(110)
s(381) =< s(380)*aux(110)
s(379) =< aux(111)
s(382) =< s(379)*aux(111)
s(393) =< aux(108)
s(394) =< aux(109)
s(394) =< aux(108)
s(384) =< aux(109)

  with precondition: [A=2,B=1,C=12,D=0,E=1,9>=G] 

* Chain [176]: 3*s(410)+3*s(411)+6*s(412)+3*s(414)+9*s(415)+3*s(416)+3*s(417)+2*s(419)+1*s(433)+2*s(434)+1*s(450)+2*s(451)+3
  Such that:s(446) =< 9
aux(112) =< 10
aux(113) =< 11
aux(114) =< -G+9
aux(115) =< -G+10
aux(116) =< -G+11
s(449) =< s(446)
s(450) =< s(446)
s(449) =< aux(112)
s(450) =< aux(112)
s(451) =< aux(113)
s(451) =< s(449)
s(410) =< aux(115)
s(411) =< s(410)*aux(115)
s(412) =< aux(114)
s(412) =< aux(115)
s(413) =< aux(114)
s(414) =< aux(114)
s(413) =< aux(115)
s(414) =< aux(115)
s(415) =< s(413)
s(416) =< s(415)*s(413)
s(414) =< aux(116)
s(417) =< s(414)*aux(116)
s(433) =< aux(112)
s(434) =< aux(113)
s(434) =< aux(112)
s(419) =< aux(113)

  with precondition: [A=2,B=1,C=12,D=0,E=1,8>=G] 

* Chain [175]: 3*s(457)+3*s(458)+3*s(459)+6*s(460)+3*s(461)+2*s(463)+1*s(476)+2*s(477)+1*s(492)+2*s(493)+3
  Such that:s(488) =< 9
aux(117) =< 10
aux(118) =< 11
aux(119) =< -G+8
aux(120) =< -G+9
aux(121) =< -G+10
aux(122) =< -G+11
s(452) =< aux(119)
s(491) =< s(488)
s(492) =< s(488)
s(491) =< aux(117)
s(492) =< aux(117)
s(493) =< aux(118)
s(493) =< s(491)
s(456) =< aux(120)
s(457) =< aux(120)
s(452) =< aux(120)
s(456) =< aux(121)
s(457) =< aux(121)
s(458) =< s(456)
s(459) =< s(458)*s(456)
s(460) =< s(452)
s(460) =< s(456)
s(457) =< aux(122)
s(461) =< s(457)*aux(122)
s(476) =< aux(117)
s(477) =< aux(118)
s(477) =< aux(117)
s(463) =< aux(118)

  with precondition: [A=2,B=1,C=12,D=0,E=1,7>=G] 

* Chain [174]: 86
  with precondition: [A=2,B=1,C=12,D=0,E=1,G>=11] 

* Chain [173]: 0
  with precondition: [A=2,B=1,C=12,E=1] 

* Chain [172]: 88
  with precondition: [A=2,B=1,C=12,E=1,G=10] 

* Chain [171]: 88
  with precondition: [A=2,B=1,C=12,E=1,G=10,0>=D+1] 

* Chain [170]: 88
  with precondition: [A=2,B=1,C=12,E=1,G=10,D>=1] 

* Chain [169]: 3*s(543)+3*s(544)+2*s(546)+1*s(552)+2*s(553)+1*s(561)+2*s(562)+1
  Such that:s(557) =< 9
aux(131) =< 10
aux(132) =< 11
aux(133) =< -G+11
s(560) =< s(557)
s(561) =< s(557)
s(560) =< aux(131)
s(561) =< aux(131)
s(562) =< aux(132)
s(562) =< s(560)
s(543) =< aux(133)
s(544) =< s(543)*aux(133)
s(552) =< aux(131)
s(553) =< aux(132)
s(553) =< aux(131)
s(546) =< aux(132)

  with precondition: [A=2,B=1,C=12,E=1,0>=D+1,10>=G] 

* Chain [168]: 3*s(565)+9*s(566)+3*s(567)+3*s(568)+2*s(570)+1*s(579)+2*s(580)+1*s(591)+2*s(592)+3
  Such that:s(587) =< 9
aux(134) =< 10
aux(135) =< 11
aux(136) =< -G+10
aux(137) =< -G+11
s(590) =< s(587)
s(591) =< s(587)
s(590) =< aux(134)
s(591) =< aux(134)
s(592) =< aux(135)
s(592) =< s(590)
s(565) =< aux(136)
s(566) =< aux(136)
s(567) =< s(566)*aux(136)
s(565) =< aux(137)
s(568) =< s(565)*aux(137)
s(579) =< aux(134)
s(580) =< aux(135)
s(580) =< aux(134)
s(570) =< aux(135)

  with precondition: [A=2,B=1,C=12,E=1,0>=D+1,9>=G] 

* Chain [167]: 3*s(596)+3*s(597)+6*s(598)+3*s(600)+9*s(601)+3*s(602)+3*s(603)+2*s(605)+1*s(619)+2*s(620)+1*s(636)+2*s(637)+3
  Such that:s(632) =< 9
aux(138) =< 10
aux(139) =< 11
aux(140) =< -G+9
aux(141) =< -G+10
aux(142) =< -G+11
s(635) =< s(632)
s(636) =< s(632)
s(635) =< aux(138)
s(636) =< aux(138)
s(637) =< aux(139)
s(637) =< s(635)
s(596) =< aux(141)
s(597) =< s(596)*aux(141)
s(598) =< aux(140)
s(598) =< aux(141)
s(599) =< aux(140)
s(600) =< aux(140)
s(599) =< aux(141)
s(600) =< aux(141)
s(601) =< s(599)
s(602) =< s(601)*s(599)
s(600) =< aux(142)
s(603) =< s(600)*aux(142)
s(619) =< aux(138)
s(620) =< aux(139)
s(620) =< aux(138)
s(605) =< aux(139)

  with precondition: [A=2,B=1,C=12,E=1,0>=D+1,8>=G] 

* Chain [166]: 3*s(643)+3*s(644)+3*s(645)+6*s(646)+3*s(647)+2*s(649)+1*s(662)+2*s(663)+1*s(678)+2*s(679)+3
  Such that:s(674) =< 9
aux(143) =< 10
aux(144) =< 11
aux(145) =< -G+8
aux(146) =< -G+9
aux(147) =< -G+10
aux(148) =< -G+11
s(638) =< aux(145)
s(677) =< s(674)
s(678) =< s(674)
s(677) =< aux(143)
s(678) =< aux(143)
s(679) =< aux(144)
s(679) =< s(677)
s(642) =< aux(146)
s(643) =< aux(146)
s(638) =< aux(146)
s(642) =< aux(147)
s(643) =< aux(147)
s(644) =< s(642)
s(645) =< s(644)*s(642)
s(646) =< s(638)
s(646) =< s(642)
s(643) =< aux(148)
s(647) =< s(643)*aux(148)
s(662) =< aux(143)
s(663) =< aux(144)
s(663) =< aux(143)
s(649) =< aux(144)

  with precondition: [A=2,B=1,C=12,E=1,0>=D+1,7>=G] 

* Chain [165]: 86
  with precondition: [A=2,B=1,C=12,E=1,0>=D+1,G>=11] 

* Chain [164]: 6*s(693)+5*s(694)+2*s(702)+1*s(708)+2*s(709)+1*s(717)+2*s(718)+1
  Such that:s(713) =< 9
aux(151) =< 10
aux(152) =< 11
aux(153) =< -G+11
s(716) =< s(713)
s(717) =< s(713)
s(716) =< aux(151)
s(717) =< aux(151)
s(718) =< aux(152)
s(718) =< s(716)
s(693) =< aux(153)
s(694) =< s(693)*aux(153)
s(708) =< aux(151)
s(709) =< aux(152)
s(709) =< aux(151)
s(702) =< aux(152)

  with precondition: [A=2,B=1,C=12,E=1,10>=G] 

* Chain [163]: 3*s(720)+3*s(721)+2*s(723)+1*s(729)+2*s(730)+1*s(738)+2*s(739)+1
  Such that:s(734) =< 9
aux(154) =< 10
aux(155) =< 11
aux(156) =< -G+11
s(737) =< s(734)
s(738) =< s(734)
s(737) =< aux(154)
s(738) =< aux(154)
s(739) =< aux(155)
s(739) =< s(737)
s(720) =< aux(156)
s(721) =< s(720)*aux(156)
s(729) =< aux(154)
s(730) =< aux(155)
s(730) =< aux(154)
s(723) =< aux(155)

  with precondition: [A=2,B=1,C=12,E=1,10>=G,D>=1] 

* Chain [162]: 8*s(742)+24*s(743)+5*s(744)+7*s(745)+2*s(759)+1*s(768)+2*s(769)+1*s(780)+2*s(781)+3
  Such that:s(776) =< 9
aux(157) =< 10
aux(158) =< 11
aux(159) =< -G+10
aux(160) =< -G+11
s(779) =< s(776)
s(780) =< s(776)
s(779) =< aux(157)
s(780) =< aux(157)
s(781) =< aux(158)
s(781) =< s(779)
s(742) =< aux(159)
s(743) =< aux(159)
s(744) =< s(743)*aux(159)
s(742) =< aux(160)
s(745) =< s(742)*aux(160)
s(768) =< aux(157)
s(769) =< aux(158)
s(769) =< aux(157)
s(759) =< aux(158)

  with precondition: [A=2,B=1,C=12,E=1,9>=G] 

* Chain [161]: 3*s(784)+9*s(785)+3*s(786)+3*s(787)+2*s(789)+1*s(798)+2*s(799)+1*s(810)+2*s(811)+3
  Such that:s(806) =< 9
aux(161) =< 10
aux(162) =< 11
aux(163) =< -G+10
aux(164) =< -G+11
s(809) =< s(806)
s(810) =< s(806)
s(809) =< aux(161)
s(810) =< aux(161)
s(811) =< aux(162)
s(811) =< s(809)
s(784) =< aux(163)
s(785) =< aux(163)
s(786) =< s(785)*aux(163)
s(784) =< aux(164)
s(787) =< s(784)*aux(164)
s(798) =< aux(161)
s(799) =< aux(162)
s(799) =< aux(161)
s(789) =< aux(162)

  with precondition: [A=2,B=1,C=12,E=1,9>=G,D>=1] 

* Chain [160]: 28*s(815)+10*s(816)+4*s(817)+5*s(818)+9*s(819)+24*s(821)+9*s(822)+5*s(823)+2*s(847)+1*s(861)+2*s(862)+1*s(878)+2*s(879)+3
  Such that:s(874) =< 9
aux(165) =< 10
aux(166) =< 11
aux(167) =< -G+9
aux(168) =< -G+10
aux(169) =< -G+11
s(877) =< s(874)
s(878) =< s(874)
s(877) =< aux(165)
s(878) =< aux(165)
s(879) =< aux(166)
s(879) =< s(877)
s(816) =< aux(168)
s(818) =< s(816)*aux(168)
s(815) =< aux(167)
s(815) =< aux(168)
s(820) =< aux(167)
s(819) =< aux(167)
s(820) =< aux(168)
s(819) =< aux(168)
s(821) =< s(820)
s(823) =< s(821)*s(820)
s(819) =< aux(169)
s(822) =< s(819)*aux(169)
s(861) =< aux(165)
s(862) =< aux(166)
s(862) =< aux(165)
s(847) =< aux(166)
s(817) =< s(815)*aux(168)

  with precondition: [A=2,B=1,C=12,E=1,8>=G] 

* Chain [159]: 3*s(883)+3*s(884)+6*s(885)+3*s(887)+9*s(888)+3*s(889)+3*s(890)+2*s(892)+1*s(906)+2*s(907)+1*s(923)+2*s(924)+3
  Such that:s(919) =< 9
aux(170) =< 10
aux(171) =< 11
aux(172) =< -G+9
aux(173) =< -G+10
aux(174) =< -G+11
s(922) =< s(919)
s(923) =< s(919)
s(922) =< aux(170)
s(923) =< aux(170)
s(924) =< aux(171)
s(924) =< s(922)
s(883) =< aux(173)
s(884) =< s(883)*aux(173)
s(885) =< aux(172)
s(885) =< aux(173)
s(886) =< aux(172)
s(887) =< aux(172)
s(886) =< aux(173)
s(887) =< aux(173)
s(888) =< s(886)
s(889) =< s(888)*s(886)
s(887) =< aux(174)
s(890) =< s(887)*aux(174)
s(906) =< aux(170)
s(907) =< aux(171)
s(907) =< aux(170)
s(892) =< aux(171)

  with precondition: [A=2,B=1,C=12,E=1,8>=G,D>=1] 

* Chain [158]: 1*s(930)+13*s(931)+27*s(933)+13*s(934)+10*s(935)+3*s(936)+5*s(937)+1*s(938)+2*s(960)+1*s(973)+2*s(974)+1*s(989)+2*s(990)+3
  Such that:s(985) =< 9
aux(175) =< 10
aux(176) =< 11
aux(177) =< -G+8
aux(178) =< -G+9
aux(179) =< -G+10
aux(180) =< -G+11
s(929) =< aux(177)
s(988) =< s(985)
s(989) =< s(985)
s(988) =< aux(175)
s(989) =< aux(175)
s(990) =< aux(176)
s(990) =< s(988)
s(932) =< aux(178)
s(931) =< aux(178)
s(929) =< aux(178)
s(932) =< aux(179)
s(931) =< aux(179)
s(935) =< s(932)
s(937) =< s(935)*s(932)
s(933) =< s(929)
s(933) =< s(932)
s(931) =< aux(180)
s(934) =< s(931)*aux(180)
s(973) =< aux(175)
s(974) =< aux(176)
s(974) =< aux(175)
s(960) =< aux(176)
s(930) =< aux(177)
s(936) =< s(933)*s(932)
s(930) =< aux(178)
s(930) =< s(932)
s(938) =< s(930)*s(932)

  with precondition: [A=2,B=1,C=12,E=1,7>=G] 

* Chain [157]: 3*s(996)+3*s(997)+3*s(998)+6*s(999)+3*s(1000)+2*s(1002)+1*s(1015)+2*s(1016)+1*s(1031)+2*s(1032)+3
  Such that:s(1027) =< 9
aux(181) =< 10
aux(182) =< 11
aux(183) =< -G+8
aux(184) =< -G+9
aux(185) =< -G+10
aux(186) =< -G+11
s(991) =< aux(183)
s(1030) =< s(1027)
s(1031) =< s(1027)
s(1030) =< aux(181)
s(1031) =< aux(181)
s(1032) =< aux(182)
s(1032) =< s(1030)
s(995) =< aux(184)
s(996) =< aux(184)
s(991) =< aux(184)
s(995) =< aux(185)
s(996) =< aux(185)
s(997) =< s(995)
s(998) =< s(997)*s(995)
s(999) =< s(991)
s(999) =< s(995)
s(996) =< aux(186)
s(1000) =< s(996)*aux(186)
s(1015) =< aux(181)
s(1016) =< aux(182)
s(1016) =< aux(181)
s(1002) =< aux(182)

  with precondition: [A=2,B=1,C=12,E=1,7>=G,D>=1] 

* Chain [156]: 86
  with precondition: [A=2,B=1,C=12,E=1,D>=1,G>=11] 

* Chain [155]: 86
  with precondition: [A=2,B=1,C=12,E=1,G>=11] 

* Chain [154]: 0
  with precondition: [A=3,B=1,C=12,E=1] 


#### Cost of chains of f13_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N):
* Chain [186]: 0
  with precondition: [A=3,B=1,C=12,D=1,E=1] 

* Chain [185]: 0
  with precondition: [A=7,B=1,C=12,D=1,E=1] 

* Chain [184]: 11102
  with precondition: [A=7,B=1,C=12,D=1,E=1,G=11] 

* Chain [183]: 10*s(1195)+42*s(1202)+16*s(1203)+25*s(1204)+8*s(1205)+54*s(1206)+27*s(1207)+16*s(1233)+10*s(1234)+28*s(1268)+46*s(1269)+16*s(1270)+28*s(1271)+4*s(1275)+33*s(1313)+1*s(1318)+3*s(1319)+1*s(1320)+3
  Such that:aux(231) =< 8
aux(232) =< 9
aux(233) =< 10
aux(234) =< 11
aux(235) =< -G+12
s(1195) =< aux(235)
s(1305) =< aux(231)
s(1201) =< aux(232)
s(1202) =< aux(232)
s(1201) =< aux(233)
s(1202) =< aux(233)
s(1203) =< aux(234)
s(1203) =< s(1201)
s(1268) =< aux(232)
s(1305) =< aux(232)
s(1268) =< aux(233)
s(1269) =< s(1201)
s(1270) =< s(1269)*s(1201)
s(1313) =< s(1305)
s(1313) =< s(1201)
s(1268) =< aux(234)
s(1271) =< s(1268)*aux(234)
s(1206) =< aux(233)
s(1207) =< aux(234)
s(1207) =< aux(233)
s(1204) =< aux(234)
s(1318) =< aux(231)
s(1319) =< s(1313)*s(1201)
s(1318) =< aux(232)
s(1318) =< s(1201)
s(1320) =< s(1318)*s(1201)
s(1205) =< s(1204)*aux(234)
s(1233) =< s(1206)*aux(233)
s(1234) =< s(1207)*aux(234)
s(1275) =< s(1202)*aux(233)

  with precondition: [A=7,B=1,C=12,D=1,E=1,11>=G] 

* Chain [182]: 20*s(1344)+42*s(1350)+16*s(1351)+25*s(1352)+8*s(1353)+54*s(1354)+27*s(1355)+16*s(1369)+10*s(1370)+28*s(1389)+46*s(1390)+16*s(1391)+28*s(1392)+33*s(1413)+4*s(1473)+1*s(1496)+3*s(1497)+1*s(1498)+4
  Such that:aux(254) =< 8
aux(255) =< 9
aux(256) =< 10
aux(257) =< 11
aux(258) =< -G+11
s(1405) =< aux(254)
s(1349) =< aux(255)
s(1350) =< aux(255)
s(1349) =< aux(256)
s(1350) =< aux(256)
s(1351) =< aux(257)
s(1351) =< s(1349)
s(1389) =< aux(255)
s(1405) =< aux(255)
s(1389) =< aux(256)
s(1390) =< s(1349)
s(1391) =< s(1390)*s(1349)
s(1413) =< s(1405)
s(1413) =< s(1349)
s(1389) =< aux(257)
s(1392) =< s(1389)*aux(257)
s(1354) =< aux(256)
s(1355) =< aux(257)
s(1355) =< aux(256)
s(1352) =< aux(257)
s(1344) =< aux(258)
s(1496) =< aux(254)
s(1497) =< s(1413)*s(1349)
s(1496) =< aux(255)
s(1496) =< s(1349)
s(1498) =< s(1496)*s(1349)
s(1353) =< s(1352)*aux(257)
s(1369) =< s(1354)*aux(256)
s(1370) =< s(1355)*aux(257)
s(1473) =< s(1350)*aux(256)

  with precondition: [A=7,B=1,C=12,D=1,E=1,10>=G] 

* Chain [181]: 20*s(1503)+42*s(1509)+16*s(1510)+25*s(1511)+8*s(1512)+54*s(1513)+27*s(1514)+16*s(1529)+10*s(1530)+28*s(1550)+46*s(1551)+16*s(1552)+28*s(1553)+33*s(1575)+4*s(1639)+1*s(1663)+3*s(1664)+1*s(1665)+4
  Such that:aux(277) =< 8
aux(278) =< 9
aux(279) =< 10
aux(280) =< 11
aux(281) =< -G+10
aux(282) =< -G+11
s(1567) =< aux(277)
s(1508) =< aux(278)
s(1509) =< aux(278)
s(1508) =< aux(279)
s(1509) =< aux(279)
s(1510) =< aux(280)
s(1510) =< s(1508)
s(1550) =< aux(278)
s(1567) =< aux(278)
s(1550) =< aux(279)
s(1551) =< s(1508)
s(1552) =< s(1551)*s(1508)
s(1575) =< s(1567)
s(1575) =< s(1508)
s(1550) =< aux(280)
s(1553) =< s(1550)*aux(280)
s(1513) =< aux(279)
s(1514) =< aux(280)
s(1514) =< aux(279)
s(1511) =< aux(280)
s(1503) =< aux(281)
s(1503) =< aux(282)
s(1663) =< aux(277)
s(1664) =< s(1575)*s(1508)
s(1663) =< aux(278)
s(1663) =< s(1508)
s(1665) =< s(1663)*s(1508)
s(1512) =< s(1511)*aux(280)
s(1529) =< s(1513)*aux(279)
s(1530) =< s(1514)*aux(280)
s(1639) =< s(1509)*aux(279)

  with precondition: [A=7,B=1,C=12,D=1,E=1,9>=G] 

* Chain [180]: 11101
  with precondition: [A=7,B=1,C=12,D=1,E=1,G>=12] 


#### Cost of chains of f0(A,B,C,D,E,F,G,H,I,J,K,L,O):
* Chain [187]: 33918
  with precondition: [] 


Closed-form bounds of f0(A,B,C,D,E,F,G,H,I,J,K,L,O): 
-------------------------------------
* Chain [187] with precondition: [] 
    - Upper bound: 33918 
    - Complexity: constant 

### Maximum cost of f0(A,B,C,D,E,F,G,H,I,J,K,L,O): 33918 
Asymptotic class: constant 
* Total analysis performed in 2190 ms.

