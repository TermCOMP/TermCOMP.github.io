NO

# LoAT Proof:
NO

NO

Initial ITS

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f1 -> 2

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: -2+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=1+it2, i5'=1+it2

Dependency graph:
0 -> 1
1 -> 1

Step with 0

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	1[(-2+i1 == 0)]
	
	Blocked

	{}
	{}
	{}
	
Nonterm

	Certificate of Non-Termination

	Original rule:
	(-2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=1+it2, i5'=1+it2
	New rule:
	(-2+i1 >= 0 /\ -1+it13 >= 0 /\ 2-i1 >= 0) /\ i1'=0

		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Loop Acceleration

	Original rule:
	(-2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=1+it2, i5'=1+it2
	New rule:
	(-2+i1 >= 0 /\ -1+it13 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it13, i4'=1+it2, i5'=1+it2

		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-2+i1 >= 0 /\ -1+it13 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it13, i4'=1+it2, i5'=1+it2
	New rule:
	(-2+i1 >= 0 /\ -1+it13 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+it13, i4'=1+it2, i5'=1+it2

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f1 -> 2

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: -2+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=1+it2, i5'=1+it2
   2: (-2+i1 >= 0 /\ -1+it13 >= 0 /\ 2-i1 >= 0) /\ i1'=0
   3: (-2+i1 >= 0 /\ -1+it13 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+it13, i4'=1+it2, i5'=1+it2

Dependency graph:
0 -> 1, 0 -> 2, 0 -> 3
1 -> 1, 1 -> 2, 1 -> 3
3 -> 1, 3 -> 2

Step with 2

	Trace

	0[(-1+i1 == 0)]
	2[(-2+i1 >= 0 /\ -1+it13 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{}
	{2[T]}
	
Refute

	Counterexample

	(i1=1, i3=-2, i4=0, i5=0)
	-0-> (i1=2, i3=-1, i4=0, i5=0 )
	-2-> ( )
	
NO

Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
MAYBE


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁
  Temp_Vars:  C
  Locations:  l0, l1
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁) → l1(X₀, X₁)
  t₁: l1(X₀, X₁) → l1(1+C, 1+C)


Preprocessing
  Eliminate variables [C; X₀; X₁] that do not contribute to the problem


Problem after Preprocessing
  Start:  l0
  Program_Vars:  
  Temp_Vars:  
  Locations:  l0, l1
  Return Locations:  
  Transitions:
  t₂: l0 → l1
  t₃: l1 → l1


All Bounds
Timebounds
  Overall timebound:inf {Infinity}
    t₂: 1 {O(1)}
    t₃: inf {Infinity}


Costbounds
  Overall costbound: inf {Infinity}
    t₂: 1 {O(1)}
    t₃: inf {Infinity}


Sizebounds

