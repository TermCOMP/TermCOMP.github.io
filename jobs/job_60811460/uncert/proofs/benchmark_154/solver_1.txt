WORST_CASE(Omega(n^2),O(n^2))

# LoAT Proof:
WORST_CASE(Omega(n^2),?)

WORST_CASE(Omega(n^1),?)
WORST_CASE(Omega(n^2),?)
Initial ITS

Start location: l0

Location map:
LoAT_sink -> 0
l0 -> 1
l1 -> 2
l2 -> 3

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=0
   1: (-2+i1 == 0 /\ -1+i5 >= 0) /\ i1'=3, i3'=1+i3, i6'=0, i7'=0
   2: (-3+i1 == 0 /\ -1-i6+i5 >= 0) /\ i1'=3, i3'=1+i3, i6'=1+i6, i7'=i6+i7
   3: (-3+i1 == 0 /\ i6-i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=i7+i4, i5'=-1+i5

Dependency graph:
0 -> 1
1 -> 2, 1 -> 3
2 -> 2, 2 -> 3
3 -> 1

Chained Linear Paths

	Applied Chaining

	First rule:
	-1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=0
	Second rule:
	(-2+i1 == 0 /\ -1+i5 >= 0) /\ i1'=3, i3'=1+i3, i6'=0, i7'=0
	New rule:
	(0 == 0 /\ -1+i5 >= 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=0, i6'=0, i7'=0
	
	Applied Deletion

	Removed the following rules: 0
	
	Applied Chaining

	First rule:
	(-3+i1 == 0 /\ i6-i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=i7+i4, i5'=-1+i5
	Second rule:
	(-2+i1 == 0 /\ -1+i5 >= 0) /\ i1'=3, i3'=1+i3, i6'=0, i7'=0
	New rule:
	(0 == 0 /\ -3+i1 == 0 /\ -2+i5 >= 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=i7+i4, i5'=-1+i5, i6'=0, i7'=0
	
	Applied Deletion

	Removed the following rules: 1, 3

Start location: l0

Location map:
LoAT_sink -> 0
l0 -> 1
l1 -> 2
l2 -> 3

Rules:
   2: (-3+i1 == 0 /\ -1-i6+i5 >= 0) /\ i1'=3, i3'=1+i3, i6'=1+i6, i7'=i6+i7
   4: (0 == 0 /\ -1+i5 >= 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=0, i6'=0, i7'=0
   5: (0 == 0 /\ -3+i1 == 0 /\ -2+i5 >= 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=i7+i4, i5'=-1+i5, i6'=0, i7'=0

Dependency graph:
2 -> 2, 2 -> 5
4 -> 2, 4 -> 5
5 -> 2, 5 -> 5

Preprocessed Transitions

	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+i5 >= 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=0, i6'=0, i7'=0
	New rule:
	(-1+i5 >= 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=0, i6'=0, i7'=0
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -3+i1 == 0 /\ -2+i5 >= 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=i7+i4, i5'=-1+i5, i6'=0, i7'=0
	New rule:
	(-3+i1 == 0 /\ -2+i5 >= 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=i7+i4, i5'=-1+i5, i6'=0, i7'=0

Start location: l0

Location map:
LoAT_sink -> 0
l0 -> 1
l1 -> 2
l2 -> 3

Rules:
   2: (-3+i1 == 0 /\ -1-i6+i5 >= 0) /\ i1'=3, i3'=1+i3, i6'=1+i6, i7'=i6+i7
   6: (-1+i5 >= 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=0, i6'=0, i7'=0
   7: (-3+i1 == 0 /\ -2+i5 >= 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=i7+i4, i5'=-1+i5, i6'=0, i7'=0

Dependency graph:
2 -> 2, 2 -> 7
6 -> 2, 6 -> 7
7 -> 2, 7 -> 7

Refined Dependency Graph

	Removed the following edges: 6 -> 7, 7 -> 7

Start location: l0

Location map:
LoAT_sink -> 0
l0 -> 1
l1 -> 2
l2 -> 3

Rules:
   2: (-3+i1 == 0 /\ -1-i6+i5 >= 0) /\ i1'=3, i3'=1+i3, i6'=1+i6, i7'=i6+i7
   6: (-1+i5 >= 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=0, i6'=0, i7'=0
   7: (-3+i1 == 0 /\ -2+i5 >= 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=i7+i4, i5'=-1+i5, i6'=0, i7'=0

Dependency graph:
2 -> 2, 2 -> 7
6 -> 2
7 -> 2

Step with 6

	Trace

	6[(-1+i5 >= 0 /\ -1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 2

	Trace

	6[(-1+i5 >= 0 /\ -1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i6+i5 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Poly(n^1)

Accelerate

	Loop Acceleration

	Original rule:
	(-3+i1 == 0 /\ -1-i6+i5 >= 0) /\ i1'=3, i3'=1+i3, i6'=1+i6, i7'=i6+i7
	New rule:
	(-3+i1 >= 0 /\ -1+it13 >= 0 /\ 3-i1 >= 0 /\ -i6-it13+i5 >= 0) /\ i1'=i1, i3'=i3+it13, i6'=i6+it13, i7'=i7+1/2*it13^2+i6*it13-1/2*it13

		-3+i1 >= 0 [0]: unchanged
		
		-1-i6+i5 >= 0 [0]: montonic decrease yields -i6-it13+i5 >= 0
		
		3-i1 >= 0 [0]: unchanged
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, -1-i6+i5 >= 0 -> -i6-it13+i5 >= 0, 3-i1 >= 0 -> 3-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ -1+it13 >= 0 /\ 3-i1 >= 0 /\ -i6-it13+i5 >= 0) /\ i1'=i1, i3'=i3+it13, i6'=i6+it13, i7'=i7+1/2*it13^2+i6*it13-1/2*it13
	New rule:
	(-3+i1 >= 0 /\ -1+it13 >= 0 /\ 3-i1 >= 0 /\ -i6-it13+i5 >= 0) /\ i3'=i3+it13, i6'=i6+it13, i7'=i7+1/2*it13^2+i6*it13-1/2*it13
	
	Instantiation

	Original rule:
	(-3+i1 >= 0 /\ -1+it13 >= 0 /\ 3-i1 >= 0 /\ -i6-it13+i5 >= 0) /\ i3'=i3+it13, i6'=i6+it13, i7'=i7+1/2*it13^2+i6*it13-1/2*it13
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ -1-i6+i5 >= 0 /\ 3-i1 >= 0) /\ i3'=-i6+i3+i5, i6'=i5, i7'=1/2*i6+i7+1/2*(i6-i5)^2-i6*(i6-i5)-1/2*i5

Start location: l0

Location map:
LoAT_sink -> 0
l0 -> 1
l1 -> 2
l2 -> 3

Rules:
   2: (-3+i1 == 0 /\ -1-i6+i5 >= 0) /\ i1'=3, i3'=1+i3, i6'=1+i6, i7'=i6+i7
   6: (-1+i5 >= 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=0, i6'=0, i7'=0
   7: (-3+i1 == 0 /\ -2+i5 >= 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=i7+i4, i5'=-1+i5, i6'=0, i7'=0
   8: (0 >= 0 /\ -3+i1 >= 0 /\ -1-i6+i5 >= 0 /\ 3-i1 >= 0) /\ i3'=-i6+i3+i5, i6'=i5, i7'=1/2*i6+i7+1/2*(i6-i5)^2-i6*(i6-i5)-1/2*i5

Dependency graph:
2 -> 2, 2 -> 7, 2 -> 8
6 -> 2, 6 -> 8
7 -> 2, 7 -> 8
8 -> 2, 8 -> 7

	Trace

	6[(-1+i5 >= 0 /\ -1+i1 == 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ -1-i6+i5 >= 0 /\ 3-i1 >= 0)]
	
	Blocked

	{}
	{}
	{2[T], 8[T]}
	
Step with 7

	Trace

	6[(-1+i5 >= 0 /\ -1+i1 == 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ -1-i6+i5 >= 0 /\ 3-i1 >= 0)]
	7[(-3+i1 == 0 /\ -2+i5 >= 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{}
	{2[T], 8[T]}
	{}
	
Poly(n^2)

Accelerate

		Extracted Implied Equalities

		Original rule:
		(0 >= 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ -2+i5 >= 0 /\ -1-i6+i5 >= 0 /\ 3-i1 >= 0) /\ i1'=3, i3'=2-i6+i3+i5, i4'=1/2*i6+i7+i4+1/2*(i6-i5)^2-i6*(i6-i5)-1/2*i5, i5'=-1+i5, i6'=0, i7'=0
		New rule:
		(0 >= 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ -2+i5 >= 0 /\ -1-i6+i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0) /\ i1'=3, i3'=2-i6+i3+i5, i4'=1/2*i6+i7+i4+1/2*(i6-i5)^2-i6*(i6-i5)-1/2*i5, i5'=-1+i5, i6'=0, i7'=0
		
		Simplified Guard

		Original rule:
		(0 >= 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ -2+i5 >= 0 /\ -1-i6+i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0) /\ i1'=3, i3'=2-i6+i3+i5, i4'=1/2*i6+i7+i4+1/2*(i6-i5)^2-i6*(i6-i5)-1/2*i5, i5'=-1+i5, i6'=0, i7'=0
		New rule:
		(-3+i1 >= 0 /\ -3+i1 == 0 /\ -2+i5 >= 0 /\ -1-i6+i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0) /\ i1'=3, i3'=2-i6+i3+i5, i4'=1/2*i6+i7+i4+1/2*(i6-i5)^2-i6*(i6-i5)-1/2*i5, i5'=-1+i5, i6'=0, i7'=0

	Loop Acceleration

	Original rule:
	(-3+i1 >= 0 /\ -3+i1 == 0 /\ -2+i5 >= 0 /\ -1-i6+i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0) /\ i1'=3, i3'=2-i6+i3+i5, i4'=1/2*i6+i7+i4+1/2*(i6-i5)^2-i6*(i6-i5)-1/2*i5, i5'=-1+i5, i6'=0, i7'=0
	New rule:
	(-2-it32+i5 >= 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ -3+i5 >= 0 /\ -2+i5 >= 0 /\ -1-i6+i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+it32 >= 0 /\ -1-it32+i5 >= 0) /\ i1'=i1, i3'=2-i6+i3+(-1+i5)*it32+5/2*it32+i5-1/2*it32^2, i4'=1/2*i6+i7+1/2*(-1+i5)^2*it32+i4+1/2*(i6-i5)^2-i6*(i6-i5)-1/6*it32-1/2*i5-1/2*(-1+i5)*it32^2+1/6*it32^3, i5'=-1-it32+i5, i6'=0, i7'=0

		-3+i1 >= 0 [0]: unchanged
		
		-2+i5 >= 0 [0]: montonic decrease yields (-2+i5 >= 0 /\ -1-it32+i5 >= 0)
		
		-1-i6+i5 >= 0 [0]: eventual decrease yields (-it32+i5 >= 0 /\ -1-i6+i5 >= 0)
		
		3-i1 >= 0 [0]: unchanged
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, -2+i5 >= 0 -> (-2+i5 >= 0 /\ -1-it32+i5 >= 0), -1-i6+i5 >= 0 -> (-it32+i5 >= 0 /\ -1-i6+i5 >= 0), 3-i1 >= 0 -> 3-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-2-it32+i5 >= 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ -3+i5 >= 0 /\ -2+i5 >= 0 /\ -1-i6+i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+it32 >= 0 /\ -1-it32+i5 >= 0) /\ i1'=i1, i3'=2-i6+i3+(-1+i5)*it32+5/2*it32+i5-1/2*it32^2, i4'=1/2*i6+i7+1/2*(-1+i5)^2*it32+i4+1/2*(i6-i5)^2-i6*(i6-i5)-1/6*it32-1/2*i5-1/2*(-1+i5)*it32^2+1/6*it32^3, i5'=-1-it32+i5, i6'=0, i7'=0
	New rule:
	(-2-it32+i5 >= 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ -3+i5 >= 0 /\ -2+i5 >= 0 /\ -1-i6+i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+it32 >= 0 /\ -1-it32+i5 >= 0) /\ i3'=2-i6+i3+(-1+i5)*it32+5/2*it32+i5-1/2*it32^2, i4'=1/2*i6+i7+1/2*(-1+i5)^2*it32+i4+1/2*(i6-i5)^2-i6*(i6-i5)-1/6*it32-1/2*i5-1/2*(-1+i5)*it32^2+1/6*it32^3, i5'=-1-it32+i5, i6'=0, i7'=0
	
	Instantiation

	Original rule:
	(-2-it32+i5 >= 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ -3+i5 >= 0 /\ -2+i5 >= 0 /\ -1-i6+i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+it32 >= 0 /\ -1-it32+i5 >= 0) /\ i3'=2-i6+i3+(-1+i5)*it32+5/2*it32+i5-1/2*it32^2, i4'=1/2*i6+i7+1/2*(-1+i5)^2*it32+i4+1/2*(i6-i5)^2-i6*(i6-i5)-1/6*it32-1/2*i5-1/2*(-1+i5)*it32^2+1/6*it32^3, i5'=-1-it32+i5, i6'=0, i7'=0
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ 1 >= 0 /\ -3+i5 >= 0 /\ -2+i5 >= 0 /\ -1-i6+i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0) /\ i3'=-3-i6+i3+(-2+i5)*(-1+i5)-1/2*(-2+i5)^2+7/2*i5, i4'=1/3+1/2*i6+1/2*(-2+i5)*(-1+i5)^2+i7+i4+1/2*(i6-i5)^2+1/6*(-2+i5)^3-i6*(i6-i5)-2/3*i5-1/2*(-2+i5)^2*(-1+i5), i5'=1, i6'=0, i7'=0

Start location: l0

Location map:
LoAT_sink -> 0
l0 -> 1
l1 -> 2
l2 -> 3

Rules:
   2: (-3+i1 == 0 /\ -1-i6+i5 >= 0) /\ i1'=3, i3'=1+i3, i6'=1+i6, i7'=i6+i7
   6: (-1+i5 >= 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=0, i6'=0, i7'=0
   7: (-3+i1 == 0 /\ -2+i5 >= 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=i7+i4, i5'=-1+i5, i6'=0, i7'=0
   8: (0 >= 0 /\ -3+i1 >= 0 /\ -1-i6+i5 >= 0 /\ 3-i1 >= 0) /\ i3'=-i6+i3+i5, i6'=i5, i7'=1/2*i6+i7+1/2*(i6-i5)^2-i6*(i6-i5)-1/2*i5
   9: (0 >= 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ 1 >= 0 /\ -3+i5 >= 0 /\ -2+i5 >= 0 /\ -1-i6+i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0) /\ i3'=-3-i6+i3+(-2+i5)*(-1+i5)-1/2*(-2+i5)^2+7/2*i5, i4'=1/3+1/2*i6+1/2*(-2+i5)*(-1+i5)^2+i7+i4+1/2*(i6-i5)^2+1/6*(-2+i5)^3-i6*(i6-i5)-2/3*i5-1/2*(-2+i5)^2*(-1+i5), i5'=1, i6'=0, i7'=0

Dependency graph:
2 -> 2, 2 -> 7, 2 -> 8, 2 -> 9
6 -> 2, 6 -> 8, 6 -> 9
7 -> 2, 7 -> 8, 7 -> 9
8 -> 2, 8 -> 7
9 -> 2, 9 -> 8

	Trace

	6[(-1+i5 >= 0 /\ -1+i1 == 0)]
	9[(0 >= 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ 1 >= 0 /\ -3+i5 >= 0 /\ -2+i5 >= 0 /\ -1-i6+i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0)]
	
	Blocked

	{}
	{}
	{9[T]}
	
Step with 8

	Trace

	6[(-1+i5 >= 0 /\ -1+i1 == 0)]
	9[(0 >= 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ 1 >= 0 /\ -3+i5 >= 0 /\ -2+i5 >= 0 /\ -1-i6+i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ -1-i6+i5 >= 0 /\ 3-i1 >= 0)]
	
	Blocked

	{}
	{}
	{9[T]}
	{8[T]}
	
Backtrack

	Trace

	6[(-1+i5 >= 0 /\ -1+i1 == 0)]
	9[(0 >= 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ 1 >= 0 /\ -3+i5 >= 0 /\ -2+i5 >= 0 /\ -1-i6+i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0)]
	
	Blocked

	{}
	{}
	{8[T], 9[T]}
	
Step with 2

	Trace

	6[(-1+i5 >= 0 /\ -1+i1 == 0)]
	9[(0 >= 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ 1 >= 0 /\ -3+i5 >= 0 /\ -2+i5 >= 0 /\ -1-i6+i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i6+i5 >= 0)]
	
	Blocked

	{}
	{}
	{8[T], 9[T]}
	{}
	
Covered

	Trace

	6[(-1+i5 >= 0 /\ -1+i1 == 0)]
	9[(0 >= 0 /\ -3+i1 >= 0 /\ -3+i1 == 0 /\ 1 >= 0 /\ -3+i5 >= 0 /\ -2+i5 >= 0 /\ -1-i6+i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0)]
	
	Blocked

	{}
	{}
	{2[T], 8[T], 9[T]}
	
Backtrack

	Trace

	6[(-1+i5 >= 0 /\ -1+i1 == 0)]
	
	Blocked

	{}
	{9[T]}
	
Step with 8

	Trace

	6[(-1+i5 >= 0 /\ -1+i1 == 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ -1-i6+i5 >= 0 /\ 3-i1 >= 0)]
	
	Blocked

	{}
	{9[T]}
	{8[T]}
	
Step with 7

	Trace

	6[(-1+i5 >= 0 /\ -1+i1 == 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ -1-i6+i5 >= 0 /\ 3-i1 >= 0)]
	7[(-3+i1 == 0 /\ -2+i5 >= 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{9[T]}
	{8[T]}
	{}
	
Covered

	Trace

	6[(-1+i5 >= 0 /\ -1+i1 == 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ -1-i6+i5 >= 0 /\ 3-i1 >= 0)]
	
	Blocked

	{}
	{9[T]}
	{7[T], 8[T]}
	
Backtrack

	Trace

	6[(-1+i5 >= 0 /\ -1+i1 == 0)]
	
	Blocked

	{}
	{8[T], 9[T]}
	
Step with 2

	Trace

	6[(-1+i5 >= 0 /\ -1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i6+i5 >= 0)]
	
	Blocked

	{}
	{8[T], 9[T]}
	{}
	
Covered

	Trace

	6[(-1+i5 >= 0 /\ -1+i1 == 0)]
	
	Blocked

	{}
	{2[T], 8[T], 9[T]}
	
Backtrack

	Trace

	Blocked

	{6[T]}
	
Accept

Poly(n^2)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^2))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃
  Temp_Vars:  
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃) → l1(0, X₁, X₂, X₃)
  t₁: l1(X₀, X₁, X₂, X₃) → l2(X₀, X₁, 0, 0) :|: 1 ≤ X₁
  t₃: l2(X₀, X₁, X₂, X₃) → l1(X₀+X₃, X₁-1, X₂, X₃) :|: X₁ ≤ X₂
  t₂: l2(X₀, X₁, X₂, X₃) → l2(X₀, X₁, 1+X₂, X₂+X₃) :|: 1+X₂ ≤ X₁


Preprocessing
  Eliminate variables [X₀; X₃] that do not contribute to the problem


  Found invariant X₁ ≤ X₀ ∧ 0 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l2


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁
  Temp_Vars:  
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₄: l0(X₀, X₁) → l1(X₀, X₁)
  t₅: l1(X₀, X₁) → l2(X₀, 0) :|: 1 ≤ X₀
  t₆: l2(X₀, X₁) → l1(X₀-1, X₁) :|: X₀ ≤ X₁ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₁ ∧ X₁ ≤ X₀ ∧ 0 ≤ X₁
  t₇: l2(X₀, X₁) → l2(X₀, 1+X₁) :|: 1+X₁ ≤ X₀ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₁ ∧ X₁ ≤ X₀ ∧ 0 ≤ X₁


MPRF for transition t₅: l1(X₀, X₁) → l2(X₀, 0) :|: 1 ≤ X₀ of depth 1:
  new bound:
    X₀ {O(n)}

  MPRF:
    • l1: [X₀]
    • l2: [X₀-1]




MPRF for transition t₆: l2(X₀, X₁) → l1(X₀-1, X₁) :|: X₀ ≤ X₁ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₁ ∧ X₁ ≤ X₀ ∧ 0 ≤ X₁ of depth 1:
  new bound:
    X₀+1 {O(n)}

  MPRF:
    • l1: [1+X₀]
    • l2: [1+X₀]




TWN: t₇: l2→l2


  cycle: [t₇: l2→l2]
  original loop: (1+X₁ ≤ X₀ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₁ ∧ X₁ ≤ X₀ ∧ 0 ≤ X₁,(X₀,X₁) -> (X₀,1+X₁))
  transformed loop: (1+X₁ ≤ X₀ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₁ ∧ X₁ ≤ X₀ ∧ 0 ≤ X₁,(X₀,X₁) -> (X₀,1+X₁))
  loop: (1+X₁ ≤ X₀ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₁ ∧ X₁ ≤ X₀ ∧ 0 ≤ X₁,(X₀,X₁) -> (X₀,1+X₁))
  order: [X₁; X₀]
closed-form:  X₁: X₁ + [[n != 0]]⋅n^1
  X₀: X₀

  Termination: true
  Formula: 
    0 ≤ 1 ∧ X₀ ≤ 1+X₁ ∧ 1 ≤ 0 ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₁ ∧ 1+X₁ ≤ X₀ ∧ X₁ ≤ X₀ ∧ X₀ ≤ X₁ ∧ 0 ≤ X₁
     ∨ 0 ≤ 1 ∧ X₀ ≤ 1+X₁ ∧ 1 ≤ 0 ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₁ ∧ 1+X₁ ≤ X₀ ∧ 0 ≤ X₁
     ∨ 0 ≤ 1 ∧ 1 ≤ 0 ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₁ ∧ 1+X₁ ≤ X₀ ∧ 2+X₁ ≤ X₀ ∧ 0 ≤ X₁
     ∨ 0 ≤ 1 ∧ 1 ≤ 0 ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₁ ∧ 1+X₁ ≤ X₀ ∧ 0 ≤ X₁
     ∨ 0 ≤ 1 ∧ 1 ≤ 0 ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₁ ∧ 2+X₁ ≤ X₀ ∧ X₁ ≤ X₀ ∧ X₀ ≤ X₁ ∧ 0 ≤ X₁
     ∨ 0 ≤ 1 ∧ 1 ≤ 0 ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₁ ∧ 2+X₁ ≤ X₀ ∧ 0 ≤ X₁
     ∨ 0 ≤ 1 ∧ 1 ≤ 0 ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₁ ∧ X₁ ≤ X₀ ∧ X₀ ≤ X₁ ∧ 0 ≤ X₁
     ∨ 1 ≤ 0 ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₁ ∧ 0 ≤ X₁



Stabilization-Threshold for: X₁ ≤ X₀
  alphas_abs: 1+X₀+X₁
  M: 0
  N: 1
  Bound: 2⋅X₀+2⋅X₁+4 {O(n)}

Stabilization-Threshold for: 1+X₁ ≤ X₀
  alphas_abs: X₀+X₁
  M: 0
  N: 1
  Bound: 2⋅X₀+2⋅X₁+2 {O(n)}

TWN - Lifting for [7: l2->l2] of 4⋅X₀+4⋅X₁+8 {O(n)}
relevant size-bounds w.r.t. t₅: l1→l2:
X₀: X₀ {O(n)}
X₁: 0 {O(1)}
Runtime-bound of t₅: X₀ {O(n)}
Results in: 4⋅X₀^2+8⋅X₀ {O(n^2)}
  Cut unsatisfiable transition [t₆: l2→l1; t₄₂: l2→l1]


  Found invariant X₁ ≤ X₀ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l2_v1


  Found invariant X₁ ≤ 0 ∧ 1+X₁ ≤ X₀ ∧ 0 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l2


All Bounds
Timebounds
  Overall timebound:4⋅X₀^2+10⋅X₀+2 {O(n^2)}
    t₄: 1 {O(1)}
    t₅: X₀ {O(n)}
    t₆: X₀+1 {O(n)}
    t₇: 4⋅X₀^2+8⋅X₀ {O(n^2)}


Costbounds
  Overall costbound: 4⋅X₀^2+10⋅X₀+2 {O(n^2)}
    t₄: 1 {O(1)}
    t₅: X₀ {O(n)}
    t₆: X₀+1 {O(n)}
    t₇: 4⋅X₀^2+8⋅X₀ {O(n^2)}


Sizebounds
    t₄, X₀: X₀ {O(n)}
    t₄, X₁: X₁ {O(n)}
    t₅, X₀: X₀ {O(n)}
    t₅, X₁: 0 {O(1)}
    t₆, X₀: X₀ {O(n)}
    t₆, X₁: 4⋅X₀^2+8⋅X₀ {O(n^2)}
    t₇, X₀: X₀ {O(n)}
    t₇, X₁: 4⋅X₀^2+8⋅X₀ {O(n^2)}

