WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [evalrandom1dbb1in/4,evalrandom1dbb5in/4]
1. non_recursive  : [evalrandom1dstop/3]
2. non_recursive  : [evalrandom1dreturnin/3]
3. non_recursive  : [exit_location/1]
4. non_recursive  : [evalrandom1dbb5in_loop_cont/4]
5. non_recursive  : [evalrandom1dentryin/3]
6. non_recursive  : [evalrandom1dstart/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into evalrandom1dbb5in/4
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into evalrandom1dbb5in_loop_cont/4
5. SCC is partially evaluated into evalrandom1dentryin/3
6. SCC is partially evaluated into evalrandom1dstart/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations evalrandom1dbb5in/4 
* CE 6 is refined into CE [9] 
* CE 5 is refined into CE [10] 
* CE 4 is refined into CE [11] 


### Cost equations --> "Loop" of evalrandom1dbb5in/4 
* CEs [11] --> Loop 9 
* CEs [9] --> Loop 10 
* CEs [10] --> Loop 11 

### Ranking functions of CR evalrandom1dbb5in(A,B,D,E) 
* RF of phase [9]: [A-B+1]

#### Partial ranking functions of CR evalrandom1dbb5in(A,B,D,E) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    A-B+1


### Specialization of cost equations evalrandom1dbb5in_loop_cont/4 
* CE 8 is refined into CE [12] 
* CE 7 is refined into CE [13] 


### Cost equations --> "Loop" of evalrandom1dbb5in_loop_cont/4 
* CEs [12] --> Loop 12 
* CEs [13] --> Loop 13 

### Ranking functions of CR evalrandom1dbb5in_loop_cont(A,B,C,D) 

#### Partial ranking functions of CR evalrandom1dbb5in_loop_cont(A,B,C,D) 


### Specialization of cost equations evalrandom1dentryin/3 
* CE 3 is refined into CE [14,15,16] 
* CE 2 is refined into CE [17] 


### Cost equations --> "Loop" of evalrandom1dentryin/3 
* CEs [14,15,16] --> Loop 14 
* CEs [17] --> Loop 15 

### Ranking functions of CR evalrandom1dentryin(A,B,D) 

#### Partial ranking functions of CR evalrandom1dentryin(A,B,D) 


### Specialization of cost equations evalrandom1dstart/3 
* CE 1 is refined into CE [18,19] 


### Cost equations --> "Loop" of evalrandom1dstart/3 
* CEs [19] --> Loop 16 
* CEs [18] --> Loop 17 

### Ranking functions of CR evalrandom1dstart(A,B,D) 

#### Partial ranking functions of CR evalrandom1dstart(A,B,D) 


Computing Bounds
=====================================

#### Cost of chains of evalrandom1dbb5in(A,B,D,E):
* Chain [[9],11]: 1*it(9)+0
  Such that:it(9) =< -B+E

  with precondition: [D=2,A+1=E,B>=1,A>=B] 

* Chain [[9],10]: 1*it(9)+0
  Such that:it(9) =< A-B+1

  with precondition: [D=3,B>=1,A>=B] 

* Chain [10]: 0
  with precondition: [D=3,A>=1,B>=1] 


#### Cost of chains of evalrandom1dbb5in_loop_cont(A,B,C,D):
* Chain [13]: 0
  with precondition: [A=2,B>=1] 

* Chain [12]: 0
  with precondition: [A=3,B>=1] 


#### Cost of chains of evalrandom1dentryin(A,B,D):
* Chain [15]: 0
  with precondition: [0>=A] 

* Chain [14]: 2*s(1)+0
  Such that:aux(1) =< A
s(1) =< aux(1)

  with precondition: [A>=1] 


#### Cost of chains of evalrandom1dstart(A,B,D):
* Chain [17]: 0
  with precondition: [0>=A] 

* Chain [16]: 2*s(4)+0
  Such that:s(3) =< A
s(4) =< s(3)

  with precondition: [A>=1] 


Closed-form bounds of evalrandom1dstart(A,B,D): 
-------------------------------------
* Chain [17] with precondition: [0>=A] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [16] with precondition: [A>=1] 
    - Upper bound: 2*A 
    - Complexity: n 

### Maximum cost of evalrandom1dstart(A,B,D): nat(A)*2 
Asymptotic class: n 
* Total analysis performed in 31 ms.

