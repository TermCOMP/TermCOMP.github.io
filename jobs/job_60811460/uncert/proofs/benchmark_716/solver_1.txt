WORST_CASE(Omega(n^1),O(n^1))

# LoAT Proof:
WORST_CASE(Omega(n^1),?)

WORST_CASE(Omega(n^1),?)
Initial ITS

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_bb1_in -> 6
eval_start_bb2_in -> 7
eval_start_bb4_in -> 8
eval_start_bb3_in -> 9
eval_start_5 -> 10
eval_start_6 -> 11
eval_start_stop -> 12

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: -2+i1 == 0 /\ i1'=3, i3'=1+i3
   2: -3+i1 == 0 /\ i1'=4, i3'=1+i3
   3: -4+i1 == 0 /\ i1'=5, i3'=1+i3
   4: -5+i1 == 0 /\ i1'=6, i3'=1+i3, i4'=i8
   5: (-6+i1 == 0 /\ i4 > 0) /\ i1'=7, i3'=1+i3, i5'=i4
   6: (-6+i1 == 0 /\ i4 <= 0) /\ i1'=8, i3'=1+i3
   7: (-7+i1 == 0 /\ -1+i5 > 0) /\ i1'=9, i3'=1+i3, i6'=-1+i5
   8: (-7+i1 == 0 /\ -1+i5 <= 0) /\ i1'=6, i3'=1+i3, i4'=-1+i5
   9: -9+i1 == 0 /\ i1'=10, i3'=1+i3
  10: -10+i1 == 0 /\ i1'=11, i3'=1+i3, i7'=it2
  11: (-11+i1 == 0 /\ i7 > 0) /\ i1'=6, i3'=1+i3, i4'=i6
  12: (-11+i1 == 0 /\ i7 <= 0) /\ i1'=7, i3'=1+i3, i5'=i6
  13: -8+i1 == 0 /\ i1'=12, i3'=1+i3

Dependency graph:
0 -> 1
1 -> 2
2 -> 3
3 -> 4
4 -> 5, 4 -> 6
5 -> 7, 5 -> 8
6 -> 13
7 -> 9
8 -> 5, 8 -> 6
9 -> 10
10 -> 11, 10 -> 12
11 -> 5, 11 -> 6
12 -> 7, 12 -> 8

Chained Linear Paths

	Applied Chaining

	First rule:
	-1+i1 == 0 /\ i1'=2, i3'=1+i3
	Second rule:
	-2+i1 == 0 /\ i1'=3, i3'=1+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 0, 1
	
	Applied Chaining

	First rule:
	-3+i1 == 0 /\ i1'=4, i3'=1+i3
	Second rule:
	-4+i1 == 0 /\ i1'=5, i3'=1+i3
	New rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 2, 3
	
	Applied Chaining

	First rule:
	(-6+i1 == 0 /\ i4 <= 0) /\ i1'=8, i3'=1+i3
	Second rule:
	-8+i1 == 0 /\ i1'=12, i3'=1+i3
	New rule:
	(0 == 0 /\ -6+i1 == 0 /\ i4 <= 0) /\ i1'=12, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 6, 13
	
	Applied Chaining

	First rule:
	(-7+i1 == 0 /\ -1+i5 > 0) /\ i1'=9, i3'=1+i3, i6'=-1+i5
	Second rule:
	-9+i1 == 0 /\ i1'=10, i3'=1+i3
	New rule:
	(0 == 0 /\ -7+i1 == 0 /\ -1+i5 > 0) /\ i1'=10, i3'=2+i3, i6'=-1+i5
	
	Applied Deletion

	Removed the following rules: 7, 9
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	Second rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	
	Applied Deletion

	Removed the following rules: 14, 15
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -7+i1 == 0 /\ -1+i5 > 0) /\ i1'=10, i3'=2+i3, i6'=-1+i5
	Second rule:
	-10+i1 == 0 /\ i1'=11, i3'=1+i3, i7'=it2
	New rule:
	(0 == 0 /\ -7+i1 == 0 /\ -1+i5 > 0) /\ i1'=11, i3'=3+i3, i6'=-1+i5, i7'=it2
	
	Applied Deletion

	Removed the following rules: 10, 17
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	Second rule:
	-5+i1 == 0 /\ i1'=6, i3'=1+i3, i4'=i8
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=6, i3'=5+i3, i4'=i8
	
	Applied Deletion

	Removed the following rules: 4, 18

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_bb1_in -> 6
eval_start_bb2_in -> 7
eval_start_bb4_in -> 8
eval_start_bb3_in -> 9
eval_start_5 -> 10
eval_start_6 -> 11
eval_start_stop -> 12

Rules:
   5: (-6+i1 == 0 /\ i4 > 0) /\ i1'=7, i3'=1+i3, i5'=i4
   8: (-7+i1 == 0 /\ -1+i5 <= 0) /\ i1'=6, i3'=1+i3, i4'=-1+i5
  11: (-11+i1 == 0 /\ i7 > 0) /\ i1'=6, i3'=1+i3, i4'=i6
  12: (-11+i1 == 0 /\ i7 <= 0) /\ i1'=7, i3'=1+i3, i5'=i6
  16: (0 == 0 /\ -6+i1 == 0 /\ i4 <= 0) /\ i1'=12, i3'=2+i3
  19: (0 == 0 /\ -7+i1 == 0 /\ -1+i5 > 0) /\ i1'=11, i3'=3+i3, i6'=-1+i5, i7'=it2
  20: (0 == 0 /\ -1+i1 == 0) /\ i1'=6, i3'=5+i3, i4'=i8

Dependency graph:
5 -> 8, 5 -> 19
8 -> 5, 8 -> 16
11 -> 5, 11 -> 16
12 -> 8, 12 -> 19
19 -> 11, 19 -> 12
20 -> 5, 20 -> 16

Preprocessed Transitions

	Simplified Guard

	Original rule:
	(0 == 0 /\ -6+i1 == 0 /\ i4 <= 0) /\ i1'=12, i3'=2+i3
	New rule:
	(-6+i1 == 0 /\ i4 <= 0) /\ i1'=12, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -7+i1 == 0 /\ -1+i5 > 0) /\ i1'=11, i3'=3+i3, i6'=-1+i5, i7'=it2
	New rule:
	(-7+i1 == 0 /\ -1+i5 > 0) /\ i1'=11, i3'=3+i3, i6'=-1+i5, i7'=it2
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=6, i3'=5+i3, i4'=i8
	New rule:
	-1+i1 == 0 /\ i1'=6, i3'=5+i3, i4'=i8

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_bb1_in -> 6
eval_start_bb2_in -> 7
eval_start_bb4_in -> 8
eval_start_bb3_in -> 9
eval_start_5 -> 10
eval_start_6 -> 11
eval_start_stop -> 12

Rules:
   5: (-6+i1 == 0 /\ i4 > 0) /\ i1'=7, i3'=1+i3, i5'=i4
   8: (-7+i1 == 0 /\ -1+i5 <= 0) /\ i1'=6, i3'=1+i3, i4'=-1+i5
  11: (-11+i1 == 0 /\ i7 > 0) /\ i1'=6, i3'=1+i3, i4'=i6
  12: (-11+i1 == 0 /\ i7 <= 0) /\ i1'=7, i3'=1+i3, i5'=i6
  21: (-6+i1 == 0 /\ i4 <= 0) /\ i1'=12, i3'=2+i3
  22: (-7+i1 == 0 /\ -1+i5 > 0) /\ i1'=11, i3'=3+i3, i6'=-1+i5, i7'=it2
  23: -1+i1 == 0 /\ i1'=6, i3'=5+i3, i4'=i8

Dependency graph:
5 -> 8, 5 -> 22
8 -> 5, 8 -> 21
11 -> 5, 11 -> 21
12 -> 8, 12 -> 22
22 -> 11, 22 -> 12
23 -> 5, 23 -> 21

Refined Dependency Graph

	Removed the following edges: 8 -> 5

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_bb1_in -> 6
eval_start_bb2_in -> 7
eval_start_bb4_in -> 8
eval_start_bb3_in -> 9
eval_start_5 -> 10
eval_start_6 -> 11
eval_start_stop -> 12

Rules:
   5: (-6+i1 == 0 /\ i4 > 0) /\ i1'=7, i3'=1+i3, i5'=i4
   8: (-7+i1 == 0 /\ -1+i5 <= 0) /\ i1'=6, i3'=1+i3, i4'=-1+i5
  11: (-11+i1 == 0 /\ i7 > 0) /\ i1'=6, i3'=1+i3, i4'=i6
  12: (-11+i1 == 0 /\ i7 <= 0) /\ i1'=7, i3'=1+i3, i5'=i6
  21: (-6+i1 == 0 /\ i4 <= 0) /\ i1'=12, i3'=2+i3
  22: (-7+i1 == 0 /\ -1+i5 > 0) /\ i1'=11, i3'=3+i3, i6'=-1+i5, i7'=it2
  23: -1+i1 == 0 /\ i1'=6, i3'=5+i3, i4'=i8

Dependency graph:
5 -> 8, 5 -> 22
8 -> 21
11 -> 5, 11 -> 21
12 -> 8, 12 -> 22
22 -> 11, 22 -> 12
23 -> 5, 23 -> 21

Step with 23

	Trace

	23[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 21

	Trace

	23[(-1+i1 == 0)]
	21[(-6+i1 == 0 /\ i4 <= 0)]
	
	Blocked

	{}
	{}
	{}
	
Backtrack

	Trace

	23[(-1+i1 == 0)]
	
	Blocked

	{}
	{21[T]}
	
Step with 5

	Trace

	23[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ i4 > 0)]
	
	Blocked

	{}
	{21[T]}
	{}
	
Step with 8

	Trace

	23[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ i4 > 0)]
	8[(-7+i1 == 0 /\ -1+i5 <= 0)]
	
	Blocked

	{}
	{21[T]}
	{}
	{}
	
Step with 21

	Trace

	23[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ i4 > 0)]
	8[(-7+i1 == 0 /\ -1+i5 <= 0)]
	21[(-6+i1 == 0 /\ i4 <= 0)]
	
	Blocked

	{}
	{21[T]}
	{}
	{}
	{}
	
Backtrack

	Trace

	23[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ i4 > 0)]
	8[(-7+i1 == 0 /\ -1+i5 <= 0)]
	
	Blocked

	{}
	{21[T]}
	{}
	{21[T]}
	
Backtrack

	Trace

	23[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ i4 > 0)]
	
	Blocked

	{}
	{21[T]}
	{8[T]}
	
Step with 22

	Trace

	23[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ i4 > 0)]
	22[(-7+i1 == 0 /\ -1+i5 > 0)]
	
	Blocked

	{}
	{21[T]}
	{8[T]}
	{}
	
Step with 11

	Trace

	23[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ i4 > 0)]
	22[(-7+i1 == 0 /\ -1+i5 > 0)]
	11[(-11+i1 == 0 /\ i7 > 0)]
	
	Blocked

	{}
	{21[T]}
	{8[T]}
	{}
	{}
	
Poly(n^1)

Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -1+i4 > 0 /\ it2 > 0 /\ -6+i1 == 0 /\ i4 > 0) /\ i1'=6, i3'=5+i3, i4'=-1+i4, i5'=i4, i6'=-1+i4, i7'=it2
		New rule:
		(-1+i4 > 0 /\ it2 > 0 /\ -6+i1 == 0 /\ i4 > 0) /\ i1'=6, i3'=5+i3, i4'=-1+i4, i5'=i4, i6'=-1+i4, i7'=it2

	Loop Acceleration

	Original rule:
	(-1+i4 > 0 /\ it2 > 0 /\ -6+i1 == 0 /\ i4 > 0) /\ i1'=6, i3'=5+i3, i4'=-1+i4, i5'=i4, i6'=-1+i4, i7'=it2
	New rule:
	(-1+i4 > 0 /\ it2 > 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ i4 > 0 /\ -it53+i4 > 0 /\ 1-it53+i4 > 0 /\ -1+it53 >= 0) /\ i1'=i1, i3'=i3+5*it53, i4'=-it53+i4, i5'=1-it53+i4, i6'=-it53+i4, i7'=it2

		-1+i4 > 0 [0]: montonic decrease yields (-1+i4 > 0 /\ -it53+i4 > 0)
		
		it2 > 0 [0]: unchanged
		
		-6+i1 >= 0 [0]: unchanged
		
		6-i1 >= 0 [0]: unchanged
		
		i4 > 0 [0]: montonic decrease yields (i4 > 0 /\ 1-it53+i4 > 0)
		
		Replacement map: {-1+i4 > 0 -> (-1+i4 > 0 /\ -it53+i4 > 0), it2 > 0 -> it2 > 0, -6+i1 >= 0 -> -6+i1 >= 0, 6-i1 >= 0 -> 6-i1 >= 0, i4 > 0 -> (i4 > 0 /\ 1-it53+i4 > 0)}

	Removed Trivial Updates

	Original rule:
	(-1+i4 > 0 /\ it2 > 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ i4 > 0 /\ -it53+i4 > 0 /\ 1-it53+i4 > 0 /\ -1+it53 >= 0) /\ i1'=i1, i3'=i3+5*it53, i4'=-it53+i4, i5'=1-it53+i4, i6'=-it53+i4, i7'=it2
	New rule:
	(-1+i4 > 0 /\ it2 > 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ i4 > 0 /\ -it53+i4 > 0 /\ 1-it53+i4 > 0 /\ -1+it53 >= 0) /\ i3'=i3+5*it53, i4'=-it53+i4, i5'=1-it53+i4, i6'=-it53+i4, i7'=it2
	
	Instantiation

	Original rule:
	(-1+i4 > 0 /\ it2 > 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ i4 > 0 /\ -it53+i4 > 0 /\ 1-it53+i4 > 0 /\ -1+it53 >= 0) /\ i3'=i3+5*it53, i4'=-it53+i4, i5'=1-it53+i4, i6'=-it53+i4, i7'=it2
	New rule:
	(1 > 0 /\ -1+i4 > 0 /\ it2 > 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ 2 > 0 /\ i4 > 0 /\ -2+i4 >= 0) /\ i3'=-5+i3+5*i4, i4'=1, i5'=2, i6'=1, i7'=it2

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_bb1_in -> 6
eval_start_bb2_in -> 7
eval_start_bb4_in -> 8
eval_start_bb3_in -> 9
eval_start_5 -> 10
eval_start_6 -> 11
eval_start_stop -> 12

Rules:
   5: (-6+i1 == 0 /\ i4 > 0) /\ i1'=7, i3'=1+i3, i5'=i4
   8: (-7+i1 == 0 /\ -1+i5 <= 0) /\ i1'=6, i3'=1+i3, i4'=-1+i5
  11: (-11+i1 == 0 /\ i7 > 0) /\ i1'=6, i3'=1+i3, i4'=i6
  12: (-11+i1 == 0 /\ i7 <= 0) /\ i1'=7, i3'=1+i3, i5'=i6
  21: (-6+i1 == 0 /\ i4 <= 0) /\ i1'=12, i3'=2+i3
  22: (-7+i1 == 0 /\ -1+i5 > 0) /\ i1'=11, i3'=3+i3, i6'=-1+i5, i7'=it2
  23: -1+i1 == 0 /\ i1'=6, i3'=5+i3, i4'=i8
  24: (1 > 0 /\ -1+i4 > 0 /\ it2 > 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ 2 > 0 /\ i4 > 0 /\ -2+i4 >= 0) /\ i3'=-5+i3+5*i4, i4'=1, i5'=2, i6'=1, i7'=it2

Dependency graph:
5 -> 8, 5 -> 22
8 -> 21
11 -> 5, 11 -> 21, 11 -> 24
12 -> 8, 12 -> 22
22 -> 11, 22 -> 12
23 -> 5, 23 -> 21, 23 -> 24
24 -> 5, 24 -> 21

	Trace

	23[(-1+i1 == 0)]
	24[(1 > 0 /\ -1+i4 > 0 /\ it2 > 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ 2 > 0 /\ i4 > 0 /\ -2+i4 >= 0)]
	
	Blocked

	{}
	{21[T]}
	{24[T]}
	
Step with 5

	Trace

	23[(-1+i1 == 0)]
	24[(1 > 0 /\ -1+i4 > 0 /\ it2 > 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ 2 > 0 /\ i4 > 0 /\ -2+i4 >= 0)]
	5[(-6+i1 == 0 /\ i4 > 0)]
	
	Blocked

	{}
	{21[T]}
	{21[T], 24[T]}
	{}
	
Step with 8

	Trace

	23[(-1+i1 == 0)]
	24[(1 > 0 /\ -1+i4 > 0 /\ it2 > 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ 2 > 0 /\ i4 > 0 /\ -2+i4 >= 0)]
	5[(-6+i1 == 0 /\ i4 > 0)]
	8[(-7+i1 == 0 /\ -1+i5 <= 0)]
	
	Blocked

	{}
	{21[T]}
	{21[T], 24[T]}
	{22[T]}
	{}
	
Step with 21

	Trace

	23[(-1+i1 == 0)]
	24[(1 > 0 /\ -1+i4 > 0 /\ it2 > 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ 2 > 0 /\ i4 > 0 /\ -2+i4 >= 0)]
	5[(-6+i1 == 0 /\ i4 > 0)]
	8[(-7+i1 == 0 /\ -1+i5 <= 0)]
	21[(-6+i1 == 0 /\ i4 <= 0)]
	
	Blocked

	{}
	{21[T]}
	{21[T], 24[T]}
	{22[T]}
	{}
	{}
	
Backtrack

	Trace

	23[(-1+i1 == 0)]
	24[(1 > 0 /\ -1+i4 > 0 /\ it2 > 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ 2 > 0 /\ i4 > 0 /\ -2+i4 >= 0)]
	5[(-6+i1 == 0 /\ i4 > 0)]
	8[(-7+i1 == 0 /\ -1+i5 <= 0)]
	
	Blocked

	{}
	{21[T]}
	{21[T], 24[T]}
	{22[T]}
	{21[T]}
	
Backtrack

	Trace

	23[(-1+i1 == 0)]
	24[(1 > 0 /\ -1+i4 > 0 /\ it2 > 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ 2 > 0 /\ i4 > 0 /\ -2+i4 >= 0)]
	5[(-6+i1 == 0 /\ i4 > 0)]
	
	Blocked

	{}
	{21[T]}
	{21[T], 24[T]}
	{8[T], 22[T]}
	
Backtrack

	Trace

	23[(-1+i1 == 0)]
	24[(1 > 0 /\ -1+i4 > 0 /\ it2 > 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ 2 > 0 /\ i4 > 0 /\ -2+i4 >= 0)]
	
	Blocked

	{}
	{21[T]}
	{5[T], 21[T], 24[T]}
	
Backtrack

	Trace

	23[(-1+i1 == 0)]
	
	Blocked

	{}
	{21[T], 24[T]}
	
Step with 5

	Trace

	23[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ i4 > 0)]
	
	Blocked

	{}
	{21[T], 24[T]}
	{}
	
Step with 22

	Trace

	23[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ i4 > 0)]
	22[(-7+i1 == 0 /\ -1+i5 > 0)]
	
	Blocked

	{}
	{21[T], 24[T]}
	{}
	{}
	
Step with 11

	Trace

	23[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ i4 > 0)]
	22[(-7+i1 == 0 /\ -1+i5 > 0)]
	11[(-11+i1 == 0 /\ i7 > 0)]
	
	Blocked

	{}
	{21[T], 24[T]}
	{}
	{}
	{}
	
Covered

	Trace

	23[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ i4 > 0)]
	22[(-7+i1 == 0 /\ -1+i5 > 0)]
	
	Blocked

	{}
	{21[T], 24[T]}
	{}
	{11[T]}
	
Step with 12

	Trace

	23[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ i4 > 0)]
	22[(-7+i1 == 0 /\ -1+i5 > 0)]
	12[(-11+i1 == 0 /\ i7 <= 0)]
	
	Blocked

	{}
	{21[T], 24[T]}
	{}
	{11[T]}
	{}
	
Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ it2 <= 0 /\ -7+i1 == 0 /\ -1+i5 > 0) /\ i1'=7, i3'=4+i3, i5'=-1+i5, i6'=-1+i5, i7'=it2
		New rule:
		(it2 <= 0 /\ -7+i1 == 0 /\ -1+i5 > 0) /\ i1'=7, i3'=4+i3, i5'=-1+i5, i6'=-1+i5, i7'=it2

	Loop Acceleration

	Original rule:
	(it2 <= 0 /\ -7+i1 == 0 /\ -1+i5 > 0) /\ i1'=7, i3'=4+i3, i5'=-1+i5, i6'=-1+i5, i7'=it2
	New rule:
	(-1+it120 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ -1+i5 > 0 /\ -it2 >= 0 /\ -it120+i5 > 0) /\ i1'=i1, i3'=i3+4*it120, i5'=-it120+i5, i6'=-it120+i5, i7'=it2

		-7+i1 >= 0 [0]: unchanged
		
		7-i1 >= 0 [0]: unchanged
		
		-1+i5 > 0 [0]: montonic decrease yields (-1+i5 > 0 /\ -it120+i5 > 0)
		
		-it2 >= 0 [0]: unchanged
		
		Replacement map: {-7+i1 >= 0 -> -7+i1 >= 0, 7-i1 >= 0 -> 7-i1 >= 0, -1+i5 > 0 -> (-1+i5 > 0 /\ -it120+i5 > 0), -it2 >= 0 -> -it2 >= 0}

	Removed Trivial Updates

	Original rule:
	(-1+it120 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ -1+i5 > 0 /\ -it2 >= 0 /\ -it120+i5 > 0) /\ i1'=i1, i3'=i3+4*it120, i5'=-it120+i5, i6'=-it120+i5, i7'=it2
	New rule:
	(-1+it120 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ -1+i5 > 0 /\ -it2 >= 0 /\ -it120+i5 > 0) /\ i3'=i3+4*it120, i5'=-it120+i5, i6'=-it120+i5, i7'=it2
	
	Instantiation

	Original rule:
	(-1+it120 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ -1+i5 > 0 /\ -it2 >= 0 /\ -it120+i5 > 0) /\ i3'=i3+4*it120, i5'=-it120+i5, i6'=-it120+i5, i7'=it2
	New rule:
	(1 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ -2+i5 >= 0 /\ -1+i5 > 0 /\ -it2 >= 0) /\ i3'=-4+i3+4*i5, i5'=1, i6'=1, i7'=it2

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_bb1_in -> 6
eval_start_bb2_in -> 7
eval_start_bb4_in -> 8
eval_start_bb3_in -> 9
eval_start_5 -> 10
eval_start_6 -> 11
eval_start_stop -> 12

Rules:
   5: (-6+i1 == 0 /\ i4 > 0) /\ i1'=7, i3'=1+i3, i5'=i4
   8: (-7+i1 == 0 /\ -1+i5 <= 0) /\ i1'=6, i3'=1+i3, i4'=-1+i5
  11: (-11+i1 == 0 /\ i7 > 0) /\ i1'=6, i3'=1+i3, i4'=i6
  12: (-11+i1 == 0 /\ i7 <= 0) /\ i1'=7, i3'=1+i3, i5'=i6
  21: (-6+i1 == 0 /\ i4 <= 0) /\ i1'=12, i3'=2+i3
  22: (-7+i1 == 0 /\ -1+i5 > 0) /\ i1'=11, i3'=3+i3, i6'=-1+i5, i7'=it2
  23: -1+i1 == 0 /\ i1'=6, i3'=5+i3, i4'=i8
  24: (1 > 0 /\ -1+i4 > 0 /\ it2 > 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ 2 > 0 /\ i4 > 0 /\ -2+i4 >= 0) /\ i3'=-5+i3+5*i4, i4'=1, i5'=2, i6'=1, i7'=it2
  25: (1 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ -2+i5 >= 0 /\ -1+i5 > 0 /\ -it2 >= 0) /\ i3'=-4+i3+4*i5, i5'=1, i6'=1, i7'=it2

Dependency graph:
5 -> 8, 5 -> 22, 5 -> 25
8 -> 21
11 -> 5, 11 -> 21, 11 -> 24
12 -> 8, 12 -> 22, 12 -> 25
22 -> 11, 22 -> 12
23 -> 5, 23 -> 21, 23 -> 24
24 -> 5, 24 -> 21
25 -> 8, 25 -> 22

	Trace

	23[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ i4 > 0)]
	25[(1 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ -2+i5 >= 0 /\ -1+i5 > 0 /\ -it2 >= 0)]
	
	Blocked

	{}
	{21[T], 24[T]}
	{}
	{25[T]}
	
Step with 8

	Trace

	23[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ i4 > 0)]
	25[(1 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ -2+i5 >= 0 /\ -1+i5 > 0 /\ -it2 >= 0)]
	8[(-7+i1 == 0 /\ -1+i5 <= 0)]
	
	Blocked

	{}
	{21[T], 24[T]}
	{}
	{22[T], 25[T]}
	{}
	
Step with 21

	Trace

	23[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ i4 > 0)]
	25[(1 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ -2+i5 >= 0 /\ -1+i5 > 0 /\ -it2 >= 0)]
	8[(-7+i1 == 0 /\ -1+i5 <= 0)]
	21[(-6+i1 == 0 /\ i4 <= 0)]
	
	Blocked

	{}
	{21[T], 24[T]}
	{}
	{22[T], 25[T]}
	{}
	{}
	
Backtrack

	Trace

	23[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ i4 > 0)]
	25[(1 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ -2+i5 >= 0 /\ -1+i5 > 0 /\ -it2 >= 0)]
	8[(-7+i1 == 0 /\ -1+i5 <= 0)]
	
	Blocked

	{}
	{21[T], 24[T]}
	{}
	{22[T], 25[T]}
	{21[T]}
	
Backtrack

	Trace

	23[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ i4 > 0)]
	25[(1 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ -2+i5 >= 0 /\ -1+i5 > 0 /\ -it2 >= 0)]
	
	Blocked

	{}
	{21[T], 24[T]}
	{}
	{8[T], 22[T], 25[T]}
	
Backtrack

	Trace

	23[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ i4 > 0)]
	
	Blocked

	{}
	{21[T], 24[T]}
	{25[T]}
	
Step with 22

	Trace

	23[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ i4 > 0)]
	22[(-7+i1 == 0 /\ -1+i5 > 0)]
	
	Blocked

	{}
	{21[T], 24[T]}
	{25[T]}
	{}
	
Step with 11

	Trace

	23[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ i4 > 0)]
	22[(-7+i1 == 0 /\ -1+i5 > 0)]
	11[(-11+i1 == 0 /\ i7 > 0)]
	
	Blocked

	{}
	{21[T], 24[T]}
	{25[T]}
	{}
	{}
	
Covered

	Trace

	23[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ i4 > 0)]
	22[(-7+i1 == 0 /\ -1+i5 > 0)]
	
	Blocked

	{}
	{21[T], 24[T]}
	{25[T]}
	{11[T]}
	
Step with 12

	Trace

	23[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ i4 > 0)]
	22[(-7+i1 == 0 /\ -1+i5 > 0)]
	12[(-11+i1 == 0 /\ i7 <= 0)]
	
	Blocked

	{}
	{21[T], 24[T]}
	{25[T]}
	{11[T]}
	{}
	
Covered

	Trace

	23[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ i4 > 0)]
	22[(-7+i1 == 0 /\ -1+i5 > 0)]
	
	Blocked

	{}
	{21[T], 24[T]}
	{25[T]}
	{11[T], 12[T]}
	
Backtrack

	Trace

	23[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ i4 > 0)]
	
	Blocked

	{}
	{21[T], 24[T]}
	{22[T], 25[T]}
	
Step with 8

	Trace

	23[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ i4 > 0)]
	8[(-7+i1 == 0 /\ -1+i5 <= 0)]
	
	Blocked

	{}
	{21[T], 24[T]}
	{22[T], 25[T]}
	{}
	
Step with 21

	Trace

	23[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ i4 > 0)]
	8[(-7+i1 == 0 /\ -1+i5 <= 0)]
	21[(-6+i1 == 0 /\ i4 <= 0)]
	
	Blocked

	{}
	{21[T], 24[T]}
	{22[T], 25[T]}
	{}
	{}
	
Backtrack

	Trace

	23[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ i4 > 0)]
	8[(-7+i1 == 0 /\ -1+i5 <= 0)]
	
	Blocked

	{}
	{21[T], 24[T]}
	{22[T], 25[T]}
	{21[T]}
	
Backtrack

	Trace

	23[(-1+i1 == 0)]
	5[(-6+i1 == 0 /\ i4 > 0)]
	
	Blocked

	{}
	{21[T], 24[T]}
	{8[T], 22[T], 25[T]}
	
Backtrack

	Trace

	23[(-1+i1 == 0)]
	
	Blocked

	{}
	{5[T], 21[T], 24[T]}
	
Backtrack

	Trace

	Blocked

	{23[T]}
	
Accept

Poly(n^1)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄
  Temp_Vars:  nondef_0
  Locations:  l0, l1, l10, l11, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃, X₄) → l2(X₀, X₁, X₂, X₃, X₄)
  t₃: l1(X₀, X₁, X₂, X₃, X₄) → l4(X₀, X₁, X₂, X₃, X₄)
  t₁₃: l10(X₀, X₁, X₂, X₃, X₄) → l11(X₀, X₁, X₂, X₃, X₄)
  t₁: l2(X₀, X₁, X₂, X₃, X₄) → l3(X₀, X₁, X₂, X₃, X₄)
  t₂: l3(X₀, X₁, X₂, X₃, X₄) → l1(X₀, X₁, X₂, X₃, X₄)
  t₄: l4(X₀, X₁, X₂, X₃, X₄) → l5(X₄, X₁, X₂, X₃, X₄)
  t₆: l5(X₀, X₁, X₂, X₃, X₄) → l10(X₀, X₁, X₂, X₃, X₄) :|: X₀ ≤ 0
  t₅: l5(X₀, X₁, X₂, X₃, X₄) → l9(X₀, X₀, X₂, X₃, X₄) :|: 1 ≤ X₀
  t₁₁: l6(X₀, X₁, X₂, X₃, X₄) → l5(X₂, X₁, X₂, X₃, X₄) :|: 1 ≤ X₃
  t₁₂: l6(X₀, X₁, X₂, X₃, X₄) → l9(X₀, X₂, X₂, X₃, X₄) :|: X₃ ≤ 0
  t₉: l7(X₀, X₁, X₂, X₃, X₄) → l8(X₀, X₁, X₂, X₃, X₄)
  t₁₀: l8(X₀, X₁, X₂, X₃, X₄) → l6(X₀, X₁, X₂, nondef_0, X₄)
  t₈: l9(X₀, X₁, X₂, X₃, X₄) → l5(X₁-1, X₁, X₂, X₃, X₄) :|: X₁ ≤ 1
  t₇: l9(X₀, X₁, X₂, X₃, X₄) → l7(X₀, X₁, X₁-1, X₃, X₄) :|: 2 ≤ X₁


Preprocessing
  Found invariant X₀ ≤ X₄ ∧ X₀ ≤ 0 for location l11


  Found invariant 2 ≤ X₄ ∧ 3 ≤ X₂+X₄ ∧ 1+X₂ ≤ X₄ ∧ 4 ≤ X₁+X₄ ∧ X₁ ≤ X₄ ∧ 4 ≤ X₀+X₄ ∧ X₀ ≤ X₄ ∧ 1+X₂ ≤ X₁ ∧ 1+X₂ ≤ X₀ ∧ 1 ≤ X₂ ∧ 3 ≤ X₁+X₂ ∧ X₁ ≤ 1+X₂ ∧ 3 ≤ X₀+X₂ ∧ X₁ ≤ X₀ ∧ 2 ≤ X₁ ∧ 4 ≤ X₀+X₁ ∧ 2 ≤ X₀ for location l6


  Found invariant 2 ≤ X₄ ∧ 3 ≤ X₂+X₄ ∧ 1+X₂ ≤ X₄ ∧ 4 ≤ X₁+X₄ ∧ X₁ ≤ X₄ ∧ 4 ≤ X₀+X₄ ∧ X₀ ≤ X₄ ∧ 1+X₂ ≤ X₁ ∧ 1+X₂ ≤ X₀ ∧ 1 ≤ X₂ ∧ 3 ≤ X₁+X₂ ∧ X₁ ≤ 1+X₂ ∧ 3 ≤ X₀+X₂ ∧ X₁ ≤ X₀ ∧ 2 ≤ X₁ ∧ 4 ≤ X₀+X₁ ∧ 2 ≤ X₀ for location l7


  Found invariant X₀ ≤ X₄ for location l5


  Found invariant 2 ≤ X₄ ∧ 3 ≤ X₂+X₄ ∧ 1+X₂ ≤ X₄ ∧ 4 ≤ X₁+X₄ ∧ X₁ ≤ X₄ ∧ 4 ≤ X₀+X₄ ∧ X₀ ≤ X₄ ∧ 1+X₂ ≤ X₁ ∧ 1+X₂ ≤ X₀ ∧ 1 ≤ X₂ ∧ 3 ≤ X₁+X₂ ∧ X₁ ≤ 1+X₂ ∧ 3 ≤ X₀+X₂ ∧ X₁ ≤ X₀ ∧ 2 ≤ X₁ ∧ 4 ≤ X₀+X₁ ∧ 2 ≤ X₀ for location l8


  Found invariant X₀ ≤ X₄ ∧ X₀ ≤ 0 for location l10


  Found invariant 1 ≤ X₄ ∧ 2 ≤ X₁+X₄ ∧ X₁ ≤ X₄ ∧ 2 ≤ X₀+X₄ ∧ X₀ ≤ X₄ ∧ X₁ ≤ X₀ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l9


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄
  Temp_Vars:  nondef_0
  Locations:  l0, l1, l10, l11, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃, X₄) → l2(X₀, X₁, X₂, X₃, X₄)
  t₃: l1(X₀, X₁, X₂, X₃, X₄) → l4(X₀, X₁, X₂, X₃, X₄)
  t₁₃: l10(X₀, X₁, X₂, X₃, X₄) → l11(X₀, X₁, X₂, X₃, X₄) :|: X₀ ≤ 0 ∧ X₀ ≤ X₄
  t₁: l2(X₀, X₁, X₂, X₃, X₄) → l3(X₀, X₁, X₂, X₃, X₄)
  t₂: l3(X₀, X₁, X₂, X₃, X₄) → l1(X₀, X₁, X₂, X₃, X₄)
  t₄: l4(X₀, X₁, X₂, X₃, X₄) → l5(X₄, X₁, X₂, X₃, X₄)
  t₆: l5(X₀, X₁, X₂, X₃, X₄) → l10(X₀, X₁, X₂, X₃, X₄) :|: X₀ ≤ 0 ∧ X₀ ≤ X₄
  t₅: l5(X₀, X₁, X₂, X₃, X₄) → l9(X₀, X₀, X₂, X₃, X₄) :|: 1 ≤ X₀ ∧ X₀ ≤ X₄
  t₁₁: l6(X₀, X₁, X₂, X₃, X₄) → l5(X₂, X₁, X₂, X₃, X₄) :|: 1 ≤ X₃ ∧ X₁ ≤ 1+X₂ ∧ 1+X₂ ≤ X₀ ∧ 1+X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 1+X₂ ≤ X₄ ∧ 2 ≤ X₀ ∧ 2 ≤ X₁ ∧ 2 ≤ X₄ ∧ 3 ≤ X₀+X₂ ∧ 3 ≤ X₁+X₂ ∧ 3 ≤ X₂+X₄ ∧ 4 ≤ X₀+X₁ ∧ 4 ≤ X₀+X₄ ∧ 4 ≤ X₁+X₄ ∧ X₁ ≤ X₀ ∧ X₀ ≤ X₄ ∧ X₁ ≤ X₄
  t₁₂: l6(X₀, X₁, X₂, X₃, X₄) → l9(X₀, X₂, X₂, X₃, X₄) :|: X₃ ≤ 0 ∧ X₁ ≤ 1+X₂ ∧ 1+X₂ ≤ X₀ ∧ 1+X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 1+X₂ ≤ X₄ ∧ 2 ≤ X₀ ∧ 2 ≤ X₁ ∧ 2 ≤ X₄ ∧ 3 ≤ X₀+X₂ ∧ 3 ≤ X₁+X₂ ∧ 3 ≤ X₂+X₄ ∧ 4 ≤ X₀+X₁ ∧ 4 ≤ X₀+X₄ ∧ 4 ≤ X₁+X₄ ∧ X₁ ≤ X₀ ∧ X₀ ≤ X₄ ∧ X₁ ≤ X₄
  t₉: l7(X₀, X₁, X₂, X₃, X₄) → l8(X₀, X₁, X₂, X₃, X₄) :|: X₁ ≤ 1+X₂ ∧ 1+X₂ ≤ X₀ ∧ 1+X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 1+X₂ ≤ X₄ ∧ 2 ≤ X₀ ∧ 2 ≤ X₁ ∧ 2 ≤ X₄ ∧ 3 ≤ X₀+X₂ ∧ 3 ≤ X₁+X₂ ∧ 3 ≤ X₂+X₄ ∧ 4 ≤ X₀+X₁ ∧ 4 ≤ X₀+X₄ ∧ 4 ≤ X₁+X₄ ∧ X₁ ≤ X₀ ∧ X₀ ≤ X₄ ∧ X₁ ≤ X₄
  t₁₀: l8(X₀, X₁, X₂, X₃, X₄) → l6(X₀, X₁, X₂, nondef_0, X₄) :|: X₁ ≤ 1+X₂ ∧ 1+X₂ ≤ X₀ ∧ 1+X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 1+X₂ ≤ X₄ ∧ 2 ≤ X₀ ∧ 2 ≤ X₁ ∧ 2 ≤ X₄ ∧ 3 ≤ X₀+X₂ ∧ 3 ≤ X₁+X₂ ∧ 3 ≤ X₂+X₄ ∧ 4 ≤ X₀+X₁ ∧ 4 ≤ X₀+X₄ ∧ 4 ≤ X₁+X₄ ∧ X₁ ≤ X₀ ∧ X₀ ≤ X₄ ∧ X₁ ≤ X₄
  t₈: l9(X₀, X₁, X₂, X₃, X₄) → l5(X₁-1, X₁, X₂, X₃, X₄) :|: X₁ ≤ 1 ∧ 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₄ ∧ 2 ≤ X₀+X₁ ∧ 2 ≤ X₀+X₄ ∧ 2 ≤ X₁+X₄ ∧ X₁ ≤ X₀ ∧ X₀ ≤ X₄ ∧ X₁ ≤ X₄
  t₇: l9(X₀, X₁, X₂, X₃, X₄) → l7(X₀, X₁, X₁-1, X₃, X₄) :|: 2 ≤ X₁ ∧ 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₄ ∧ 2 ≤ X₀+X₁ ∧ 2 ≤ X₀+X₄ ∧ 2 ≤ X₁+X₄ ∧ X₁ ≤ X₀ ∧ X₀ ≤ X₄ ∧ X₁ ≤ X₄


MPRF for transition t₅: l5(X₀, X₁, X₂, X₃, X₄) → l9(X₀, X₀, X₂, X₃, X₄) :|: 1 ≤ X₀ ∧ X₀ ≤ X₄ of depth 1:
  new bound:
    X₄ {O(n)}

  MPRF:
    • l5: [X₀]
    • l6: [X₂]
    • l7: [X₁-1]
    • l8: [X₂]
    • l9: [X₁-1]




MPRF for transition t₇: l9(X₀, X₁, X₂, X₃, X₄) → l7(X₀, X₁, X₁-1, X₃, X₄) :|: 2 ≤ X₁ ∧ 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₄ ∧ 2 ≤ X₀+X₁ ∧ 2 ≤ X₀+X₄ ∧ 2 ≤ X₁+X₄ ∧ X₁ ≤ X₀ ∧ X₀ ≤ X₄ ∧ X₁ ≤ X₄ of depth 1:
  new bound:
    2⋅X₄+1 {O(n)}

  MPRF:
    • l5: [2⋅X₀-1]
    • l6: [X₀+X₂-1]
    • l7: [X₀+X₁-2]
    • l8: [X₀+X₁-2]
    • l9: [X₀+X₁-1]




MPRF for transition t₈: l9(X₀, X₁, X₂, X₃, X₄) → l5(X₁-1, X₁, X₂, X₃, X₄) :|: X₁ ≤ 1 ∧ 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₄ ∧ 2 ≤ X₀+X₁ ∧ 2 ≤ X₀+X₄ ∧ 2 ≤ X₁+X₄ ∧ X₁ ≤ X₀ ∧ X₀ ≤ X₄ ∧ X₁ ≤ X₄ of depth 1:
  new bound:
    X₄ {O(n)}

  MPRF:
    • l5: [X₀]
    • l6: [X₂]
    • l7: [X₁]
    • l8: [X₂]
    • l9: [X₁]




MPRF for transition t₉: l7(X₀, X₁, X₂, X₃, X₄) → l8(X₀, X₁, X₂, X₃, X₄) :|: X₁ ≤ 1+X₂ ∧ 1+X₂ ≤ X₀ ∧ 1+X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 1+X₂ ≤ X₄ ∧ 2 ≤ X₀ ∧ 2 ≤ X₁ ∧ 2 ≤ X₄ ∧ 3 ≤ X₀+X₂ ∧ 3 ≤ X₁+X₂ ∧ 3 ≤ X₂+X₄ ∧ 4 ≤ X₀+X₁ ∧ 4 ≤ X₀+X₄ ∧ 4 ≤ X₁+X₄ ∧ X₁ ≤ X₀ ∧ X₀ ≤ X₄ ∧ X₁ ≤ X₄ of depth 1:
  new bound:
    2⋅X₄+1 {O(n)}

  MPRF:
    • l5: [1+2⋅X₀]
    • l6: [X₀+X₁]
    • l7: [1+X₀+X₁]
    • l8: [X₀+X₁]
    • l9: [1+X₀+X₁]




MPRF for transition t₁₀: l8(X₀, X₁, X₂, X₃, X₄) → l6(X₀, X₁, X₂, nondef_0, X₄) :|: X₁ ≤ 1+X₂ ∧ 1+X₂ ≤ X₀ ∧ 1+X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 1+X₂ ≤ X₄ ∧ 2 ≤ X₀ ∧ 2 ≤ X₁ ∧ 2 ≤ X₄ ∧ 3 ≤ X₀+X₂ ∧ 3 ≤ X₁+X₂ ∧ 3 ≤ X₂+X₄ ∧ 4 ≤ X₀+X₁ ∧ 4 ≤ X₀+X₄ ∧ 4 ≤ X₁+X₄ ∧ X₁ ≤ X₀ ∧ X₀ ≤ X₄ ∧ X₁ ≤ X₄ of depth 1:
  new bound:
    X₄+1 {O(n)}

  MPRF:
    • l5: [1+X₀]
    • l6: [1+X₂]
    • l7: [1+X₁]
    • l8: [2+X₂]
    • l9: [1+X₁]




MPRF for transition t₁₁: l6(X₀, X₁, X₂, X₃, X₄) → l5(X₂, X₁, X₂, X₃, X₄) :|: 1 ≤ X₃ ∧ X₁ ≤ 1+X₂ ∧ 1+X₂ ≤ X₀ ∧ 1+X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 1+X₂ ≤ X₄ ∧ 2 ≤ X₀ ∧ 2 ≤ X₁ ∧ 2 ≤ X₄ ∧ 3 ≤ X₀+X₂ ∧ 3 ≤ X₁+X₂ ∧ 3 ≤ X₂+X₄ ∧ 4 ≤ X₀+X₁ ∧ 4 ≤ X₀+X₄ ∧ 4 ≤ X₁+X₄ ∧ X₁ ≤ X₀ ∧ X₀ ≤ X₄ ∧ X₁ ≤ X₄ of depth 1:
  new bound:
    X₄+1 {O(n)}

  MPRF:
    • l5: [X₀-1]
    • l6: [X₀-1]
    • l7: [X₀-1]
    • l8: [X₀-1]
    • l9: [X₀-1]




MPRF for transition t₁₂: l6(X₀, X₁, X₂, X₃, X₄) → l9(X₀, X₂, X₂, X₃, X₄) :|: X₃ ≤ 0 ∧ X₁ ≤ 1+X₂ ∧ 1+X₂ ≤ X₀ ∧ 1+X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 1+X₂ ≤ X₄ ∧ 2 ≤ X₀ ∧ 2 ≤ X₁ ∧ 2 ≤ X₄ ∧ 3 ≤ X₀+X₂ ∧ 3 ≤ X₁+X₂ ∧ 3 ≤ X₂+X₄ ∧ 4 ≤ X₀+X₁ ∧ 4 ≤ X₀+X₄ ∧ 4 ≤ X₁+X₄ ∧ X₁ ≤ X₀ ∧ X₀ ≤ X₄ ∧ X₁ ≤ X₄ of depth 1:
  new bound:
    X₄+1 {O(n)}

  MPRF:
    • l5: [X₀-1]
    • l6: [X₁-1]
    • l7: [X₂]
    • l8: [X₁-1]
    • l9: [X₁-1]




All Bounds
Timebounds
  Overall timebound:9⋅X₄+12 {O(n)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: X₄ {O(n)}
    t₆: 1 {O(1)}
    t₇: 2⋅X₄+1 {O(n)}
    t₈: X₄ {O(n)}
    t₉: 2⋅X₄+1 {O(n)}
    t₁₀: X₄+1 {O(n)}
    t₁₁: X₄+1 {O(n)}
    t₁₂: X₄+1 {O(n)}
    t₁₃: 1 {O(1)}


Costbounds
  Overall costbound: 9⋅X₄+12 {O(n)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: X₄ {O(n)}
    t₆: 1 {O(1)}
    t₇: 2⋅X₄+1 {O(n)}
    t₈: X₄ {O(n)}
    t₉: 2⋅X₄+1 {O(n)}
    t₁₀: X₄+1 {O(n)}
    t₁₁: X₄+1 {O(n)}
    t₁₂: X₄+1 {O(n)}
    t₁₃: 1 {O(1)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₀, X₂: X₂ {O(n)}
    t₀, X₃: X₃ {O(n)}
    t₀, X₄: X₄ {O(n)}
    t₁, X₀: X₀ {O(n)}
    t₁, X₁: X₁ {O(n)}
    t₁, X₂: X₂ {O(n)}
    t₁, X₃: X₃ {O(n)}
    t₁, X₄: X₄ {O(n)}
    t₂, X₀: X₀ {O(n)}
    t₂, X₁: X₁ {O(n)}
    t₂, X₂: X₂ {O(n)}
    t₂, X₃: X₃ {O(n)}
    t₂, X₄: X₄ {O(n)}
    t₃, X₀: X₀ {O(n)}
    t₃, X₁: X₁ {O(n)}
    t₃, X₂: X₂ {O(n)}
    t₃, X₃: X₃ {O(n)}
    t₃, X₄: X₄ {O(n)}
    t₄, X₀: X₄ {O(n)}
    t₄, X₁: X₁ {O(n)}
    t₄, X₂: X₂ {O(n)}
    t₄, X₃: X₃ {O(n)}
    t₄, X₄: X₄ {O(n)}
    t₅, X₀: X₄ {O(n)}
    t₅, X₁: 2⋅X₄ {O(n)}
    t₅, X₂: 4⋅X₄+X₂ {O(n)}
    t₅, X₄: X₄ {O(n)}
    t₆, X₀: X₄ {O(n)}
    t₆, X₁: X₁+1 {O(n)}
    t₆, X₂: 2⋅X₂+8⋅X₄ {O(n)}
    t₆, X₄: 3⋅X₄ {O(n)}
    t₇, X₀: X₄ {O(n)}
    t₇, X₁: 2⋅X₄ {O(n)}
    t₇, X₂: 4⋅X₄ {O(n)}
    t₇, X₄: X₄ {O(n)}
    t₈, X₀: 0 {O(1)}
    t₈, X₁: 1 {O(1)}
    t₈, X₂: 8⋅X₄+X₂ {O(n)}
    t₈, X₄: 2⋅X₄ {O(n)}
    t₉, X₀: X₄ {O(n)}
    t₉, X₁: 2⋅X₄ {O(n)}
    t₉, X₂: 4⋅X₄ {O(n)}
    t₉, X₄: X₄ {O(n)}
    t₁₀, X₀: X₄ {O(n)}
    t₁₀, X₁: 2⋅X₄ {O(n)}
    t₁₀, X₂: 4⋅X₄ {O(n)}
    t₁₀, X₄: X₄ {O(n)}
    t₁₁, X₀: X₄ {O(n)}
    t₁₁, X₁: 2⋅X₄ {O(n)}
    t₁₁, X₂: 4⋅X₄ {O(n)}
    t₁₁, X₄: X₄ {O(n)}
    t₁₂, X₀: X₄ {O(n)}
    t₁₂, X₁: 2⋅X₄ {O(n)}
    t₁₂, X₂: 4⋅X₄ {O(n)}
    t₁₂, X₄: X₄ {O(n)}
    t₁₃, X₀: X₄ {O(n)}
    t₁₃, X₁: X₁+1 {O(n)}
    t₁₃, X₂: 2⋅X₂+8⋅X₄ {O(n)}
    t₁₃, X₄: 3⋅X₄ {O(n)}

