WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_start_5/9,eval_start_6/9,eval_start_bb2_in/9,eval_start_bb3_in/9]
1. recursive  : [eval_start_bb1_in/9,eval_start_bb2_in_loop_cont/10]
2. non_recursive  : [eval_start_stop/6]
3. non_recursive  : [eval_start_bb4_in/6]
4. non_recursive  : [exit_location/1]
5. non_recursive  : [eval_start_bb1_in_loop_cont/7]
6. non_recursive  : [eval_start_2/6]
7. non_recursive  : [eval_start_1/6]
8. non_recursive  : [eval_start_0/6]
9. non_recursive  : [eval_start_bb0_in/6]
10. non_recursive  : [eval_start_start/6]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_start_bb2_in/9
1. SCC is partially evaluated into eval_start_bb1_in/9
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_start_bb1_in_loop_cont/7
6. SCC is partially evaluated into eval_start_2/6
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is partially evaluated into eval_start_start/6

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_start_bb2_in/9 
* CE 12 is refined into CE [13] 
* CE 11 is refined into CE [14] 
* CE 10 is refined into CE [15] 
* CE 9 is refined into CE [16] 


### Cost equations --> "Loop" of eval_start_bb2_in/9 
* CEs [16] --> Loop 13 
* CEs [13] --> Loop 14 
* CEs [15] --> Loop 15 
* CEs [14] --> Loop 16 

### Ranking functions of CR eval_start_bb2_in(V__0,V__0_sink,V_1,V_3,B,C,D,E,F) 
* RF of phase [13]: [V__0_sink-1]

#### Partial ranking functions of CR eval_start_bb2_in(V__0,V__0_sink,V_1,V_3,B,C,D,E,F) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    V__0_sink-1


### Specialization of cost equations eval_start_bb1_in/9 
* CE 5 is refined into CE [17] 
* CE 3 is refined into CE [18,19] 
* CE 6 is refined into CE [20] 
* CE 4 is refined into CE [21,22,23,24] 


### Cost equations --> "Loop" of eval_start_bb1_in/9 
* CEs [24] --> Loop 17 
* CEs [23] --> Loop 18 
* CEs [22] --> Loop 19 
* CEs [21] --> Loop 20 
* CEs [17] --> Loop 21 
* CEs [19] --> Loop 22 
* CEs [18] --> Loop 23 
* CEs [20] --> Loop 24 

### Ranking functions of CR eval_start_bb1_in(V__0,V__0_sink,V_1,V_3,B,C,D,E,F) 
* RF of phase [17,18]: [V__0-1]

#### Partial ranking functions of CR eval_start_bb1_in(V__0,V__0_sink,V_1,V_3,B,C,D,E,F) 
* Partial RF of phase [17,18]:
  - RF of loop [17:1]:
    V__0/2-1
  - RF of loop [18:1]:
    V__0-1


### Specialization of cost equations eval_start_bb1_in_loop_cont/7 
* CE 7 is refined into CE [25] 
* CE 8 is refined into CE [26] 


### Cost equations --> "Loop" of eval_start_bb1_in_loop_cont/7 
* CEs [25] --> Loop 25 
* CEs [26] --> Loop 26 

### Ranking functions of CR eval_start_bb1_in_loop_cont(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR eval_start_bb1_in_loop_cont(A,B,C,D,E,F,G) 


### Specialization of cost equations eval_start_2/6 
* CE 2 is refined into CE [27,28,29,30,31,32,33,34,35,36] 


### Cost equations --> "Loop" of eval_start_2/6 
* CEs [32,34] --> Loop 27 
* CEs [31,33,35] --> Loop 28 
* CEs [30] --> Loop 29 
* CEs [36] --> Loop 30 
* CEs [27,28] --> Loop 31 
* CEs [29] --> Loop 32 

### Ranking functions of CR eval_start_2(V__0,V__0_sink,V_1,V_3,V_n,B) 

#### Partial ranking functions of CR eval_start_2(V__0,V__0_sink,V_1,V_3,V_n,B) 


### Specialization of cost equations eval_start_start/6 
* CE 1 is refined into CE [37,38,39,40,41,42] 


### Cost equations --> "Loop" of eval_start_start/6 
* CEs [42] --> Loop 33 
* CEs [41] --> Loop 34 
* CEs [40] --> Loop 35 
* CEs [39] --> Loop 36 
* CEs [38] --> Loop 37 
* CEs [37] --> Loop 38 

### Ranking functions of CR eval_start_start(V__0,V__0_sink,V_1,V_3,V_n,B) 

#### Partial ranking functions of CR eval_start_start(V__0,V__0_sink,V_1,V_3,V_n,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_start_bb2_in(V__0,V__0_sink,V_1,V_3,B,C,D,E,F):
* Chain [[13],16]: 1*it(13)+0
  Such that:it(13) =< V__0_sink

  with precondition: [B=2,C=0,D=1,E=1,0>=F,V__0_sink>=2,V__0>=V__0_sink] 

* Chain [[13],15]: 1*it(13)+0
  Such that:it(13) =< V__0_sink-D

  with precondition: [B=2,C+1=D,C=E,C>=1,F>=1,V__0>=V__0_sink,V__0_sink>=C+2] 

* Chain [[13],14]: 1*it(13)+0
  Such that:it(13) =< V__0_sink

  with precondition: [B=3,V__0_sink>=2,V__0>=V__0_sink] 

* Chain [16]: 0
  with precondition: [V__0_sink=1,B=2,C=0,D=1,E=V_1,F=V_3,V__0>=1] 

* Chain [15]: 0
  with precondition: [B=2,V__0_sink=C+1,V__0_sink=D,V__0_sink=E+1,V__0_sink>=2,F>=1,V__0>=V__0_sink] 

* Chain [14]: 0
  with precondition: [B=3,V__0_sink>=1,V__0>=V__0_sink] 


#### Cost of chains of eval_start_bb1_in(V__0,V__0_sink,V_1,V_3,B,C,D,E,F):
* Chain [[17,18],24]: 1*it(17)+2*it(18)+0
  Such that:it(17) =< V__0/2
aux(3) =< V__0
it(17) =< aux(3)
it(18) =< aux(3)

  with precondition: [B=3,V__0>=2] 

* Chain [[17,18],23]: 1*it(17)+2*it(18)+0
  Such that:it(17) =< V__0/2
aux(4) =< V__0
it(17) =< aux(4)
it(18) =< aux(4)

  with precondition: [B=3,V__0>=2] 

* Chain [[17,18],22]: 1*it(17)+3*it(18)+0
  Such that:it(17) =< V__0/2
aux(5) =< V__0
it(17) =< aux(5)
it(18) =< aux(5)

  with precondition: [B=3,V__0>=3] 

* Chain [[17,18],20,24]: 1*it(17)+2*it(18)+1
  Such that:it(17) =< V__0/2
aux(6) =< V__0
it(17) =< aux(6)
it(18) =< aux(6)

  with precondition: [B=3,V__0>=2] 

* Chain [[17,18],20,21]: 1*it(17)+2*it(18)+1
  Such that:it(17) =< V__0/2
aux(7) =< V__0
it(17) =< aux(7)
it(18) =< aux(7)

  with precondition: [B=4,C=0,D=1,E=1,V__0>=2,F>=1] 

* Chain [[17,18],19,24]: 1*it(17)+3*it(18)+1
  Such that:it(17) =< V__0/2
aux(8) =< V__0
it(17) =< aux(8)
it(18) =< aux(8)

  with precondition: [B=3,V__0>=3] 

* Chain [[17,18],19,21]: 1*it(17)+3*it(18)+1
  Such that:it(17) =< V__0/2
aux(9) =< V__0
it(17) =< aux(9)
it(18) =< aux(9)

  with precondition: [B=4,C=0,D=1,E=1,0>=F,V__0>=3] 

* Chain [24]: 0
  with precondition: [B=3] 

* Chain [23]: 0
  with precondition: [B=3,V__0>=1] 

* Chain [22]: 1*s(4)+0
  Such that:s(4) =< V__0

  with precondition: [B=3,V__0>=2] 

* Chain [21]: 0
  with precondition: [B=4,D=V__0_sink,E=V_1,F=V_3,V__0=C,0>=V__0] 

* Chain [20,24]: 1
  with precondition: [V__0=1,B=3] 

* Chain [20,21]: 1
  with precondition: [V__0=1,B=4,C=0,D=1,V_1=E,V_3=F] 

* Chain [19,24]: 1*s(5)+1
  Such that:s(5) =< V__0

  with precondition: [B=3,V__0>=2] 

* Chain [19,21]: 1*s(5)+1
  Such that:s(5) =< V__0

  with precondition: [B=4,C=0,D=1,E=1,0>=F,V__0>=2] 


#### Cost of chains of eval_start_bb1_in_loop_cont(A,B,C,D,E,F,G):
* Chain [26]: 0
  with precondition: [A=3] 

* Chain [25]: 0
  with precondition: [A=4] 


#### Cost of chains of eval_start_2(V__0,V__0_sink,V_1,V_3,V_n,B):
* Chain [32]: 0
  with precondition: [] 

* Chain [31]: 1
  with precondition: [V_n=1] 

* Chain [30]: 0
  with precondition: [0>=V_n] 

* Chain [29]: 0
  with precondition: [V_n>=1] 

* Chain [28]: 11*s(25)+4*s(26)+1
  Such that:aux(14) =< V_n
aux(15) =< V_n/2
s(25) =< aux(14)
s(26) =< aux(15)
s(26) =< aux(14)

  with precondition: [V_n>=2] 

* Chain [27]: 3*s(33)+9*s(34)+1
  Such that:aux(16) =< V_n
aux(17) =< V_n/2
s(33) =< aux(17)
s(33) =< aux(16)
s(34) =< aux(16)

  with precondition: [V_n>=3] 


#### Cost of chains of eval_start_start(V__0,V__0_sink,V_1,V_3,V_n,B):
* Chain [38]: 0
  with precondition: [] 

* Chain [37]: 1
  with precondition: [V_n=1] 

* Chain [36]: 0
  with precondition: [0>=V_n] 

* Chain [35]: 0
  with precondition: [V_n>=1] 

* Chain [34]: 11*s(40)+4*s(41)+1
  Such that:s(38) =< V_n
s(39) =< V_n/2
s(40) =< s(38)
s(41) =< s(39)
s(41) =< s(38)

  with precondition: [V_n>=2] 

* Chain [33]: 3*s(44)+9*s(45)+1
  Such that:s(42) =< V_n
s(43) =< V_n/2
s(44) =< s(43)
s(44) =< s(42)
s(45) =< s(42)

  with precondition: [V_n>=3] 


Closed-form bounds of eval_start_start(V__0,V__0_sink,V_1,V_3,V_n,B): 
-------------------------------------
* Chain [38] with precondition: [] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [37] with precondition: [V_n=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [36] with precondition: [0>=V_n] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [35] with precondition: [V_n>=1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [34] with precondition: [V_n>=2] 
    - Upper bound: 13*V_n+1 
    - Complexity: n 
* Chain [33] with precondition: [V_n>=3] 
    - Upper bound: 21/2*V_n+1 
    - Complexity: n 

### Maximum cost of eval_start_start(V__0,V__0_sink,V_1,V_3,V_n,B): nat(V_n/2)*3+nat(V_n)*9+(nat(V_n)*2+nat(V_n/2))+1 
Asymptotic class: n 
* Total analysis performed in 174 ms.

