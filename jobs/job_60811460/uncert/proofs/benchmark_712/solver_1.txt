WORST_CASE(Omega(n^1),O(n^1))

# LoAT Proof:
WORST_CASE(Omega(n^1),?)

WORST_CASE(Omega(n^1),?)
Initial ITS

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_4 -> 7
eval_start_bb1_in -> 8
eval_start_bb5_in -> 9
eval_start_bb2_in -> 10
eval_start_bb4_in -> 11
eval_start_bb3_in -> 12
eval_start_stop -> 13
eval_start_8 -> 14
eval_start_9 -> 15

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: -2+i1 == 0 /\ i1'=3, i3'=1+i3
   2: -3+i1 == 0 /\ i1'=4, i3'=1+i3
   3: -4+i1 == 0 /\ i1'=5, i3'=1+i3
   4: -5+i1 == 0 /\ i1'=6, i3'=1+i3
   5: -6+i1 == 0 /\ i1'=7, i3'=1+i3
   6: (-7+i1 == 0 /\ i4 > 0) /\ i1'=8, i3'=1+i3, i6'=i5, i7'=0
   7: (-7+i1 == 0 /\ i4 <= 0) /\ i1'=9, i3'=1+i3
   8: (i6 > 0 /\ -8+i1 == 0) /\ i1'=10, i3'=1+i3
   9: (i6 <= 0 /\ -8+i1 == 0) /\ i1'=11, i3'=1+i3
  10: (i7-i4 < 0 /\ -10+i1 == 0) /\ i1'=12, i3'=1+i3
  11: (i7-i4 >= 0 /\ -10+i1 == 0) /\ i1'=8, i3'=1+i3, i7'=0
  12: -12+i1 == 0 /\ i1'=8, i3'=1+i3, i6'=-1+i6, i7'=1+i7
  13: -11+i1 == 0 /\ i1'=13, i3'=1+i3
  14: -9+i1 == 0 /\ i1'=14, i3'=1+i3
  15: -14+i1 == 0 /\ i1'=15, i3'=1+i3
  16: -15+i1 == 0 /\ i1'=13, i3'=1+i3

Dependency graph:
0 -> 1
1 -> 2
2 -> 3
3 -> 4
4 -> 5
5 -> 6, 5 -> 7
6 -> 8, 6 -> 9
7 -> 14
8 -> 10, 8 -> 11
9 -> 13
10 -> 12
11 -> 8, 11 -> 9
12 -> 8, 12 -> 9
14 -> 15
15 -> 16

Chained Linear Paths

	Applied Chaining

	First rule:
	-1+i1 == 0 /\ i1'=2, i3'=1+i3
	Second rule:
	-2+i1 == 0 /\ i1'=3, i3'=1+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 0, 1
	
	Applied Chaining

	First rule:
	-3+i1 == 0 /\ i1'=4, i3'=1+i3
	Second rule:
	-4+i1 == 0 /\ i1'=5, i3'=1+i3
	New rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 2, 3
	
	Applied Chaining

	First rule:
	-5+i1 == 0 /\ i1'=6, i3'=1+i3
	Second rule:
	-6+i1 == 0 /\ i1'=7, i3'=1+i3
	New rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=7, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 4, 5
	
	Applied Chaining

	First rule:
	(-7+i1 == 0 /\ i4 <= 0) /\ i1'=9, i3'=1+i3
	Second rule:
	-9+i1 == 0 /\ i1'=14, i3'=1+i3
	New rule:
	(0 == 0 /\ -7+i1 == 0 /\ i4 <= 0) /\ i1'=14, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 7, 14
	
	Applied Chaining

	First rule:
	(i6 <= 0 /\ -8+i1 == 0) /\ i1'=11, i3'=1+i3
	Second rule:
	-11+i1 == 0 /\ i1'=13, i3'=1+i3
	New rule:
	(0 == 0 /\ i6 <= 0 /\ -8+i1 == 0) /\ i1'=13, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 9, 13
	
	Applied Chaining

	First rule:
	(i7-i4 < 0 /\ -10+i1 == 0) /\ i1'=12, i3'=1+i3
	Second rule:
	-12+i1 == 0 /\ i1'=8, i3'=1+i3, i6'=-1+i6, i7'=1+i7
	New rule:
	(0 == 0 /\ i7-i4 < 0 /\ -10+i1 == 0) /\ i1'=8, i3'=2+i3, i6'=-1+i6, i7'=1+i7
	
	Applied Deletion

	Removed the following rules: 10, 12
	
	Applied Chaining

	First rule:
	-14+i1 == 0 /\ i1'=15, i3'=1+i3
	Second rule:
	-15+i1 == 0 /\ i1'=13, i3'=1+i3
	New rule:
	(0 == 0 /\ -14+i1 == 0) /\ i1'=13, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 15, 16
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	Second rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	
	Applied Deletion

	Removed the following rules: 17, 18
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -7+i1 == 0 /\ i4 <= 0) /\ i1'=14, i3'=2+i3
	Second rule:
	(0 == 0 /\ -14+i1 == 0) /\ i1'=13, i3'=2+i3
	New rule:
	(0 == 0 /\ -7+i1 == 0 /\ i4 <= 0) /\ i1'=13, i3'=4+i3
	
	Applied Deletion

	Removed the following rules: 20, 23
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	Second rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=7, i3'=2+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=7, i3'=6+i3
	
	Applied Deletion

	Removed the following rules: 19, 24

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_4 -> 7
eval_start_bb1_in -> 8
eval_start_bb5_in -> 9
eval_start_bb2_in -> 10
eval_start_bb4_in -> 11
eval_start_bb3_in -> 12
eval_start_stop -> 13
eval_start_8 -> 14
eval_start_9 -> 15

Rules:
   6: (-7+i1 == 0 /\ i4 > 0) /\ i1'=8, i3'=1+i3, i6'=i5, i7'=0
   8: (i6 > 0 /\ -8+i1 == 0) /\ i1'=10, i3'=1+i3
  11: (i7-i4 >= 0 /\ -10+i1 == 0) /\ i1'=8, i3'=1+i3, i7'=0
  21: (0 == 0 /\ i6 <= 0 /\ -8+i1 == 0) /\ i1'=13, i3'=2+i3
  22: (0 == 0 /\ i7-i4 < 0 /\ -10+i1 == 0) /\ i1'=8, i3'=2+i3, i6'=-1+i6, i7'=1+i7
  25: (0 == 0 /\ -7+i1 == 0 /\ i4 <= 0) /\ i1'=13, i3'=4+i3
  26: (0 == 0 /\ -1+i1 == 0) /\ i1'=7, i3'=6+i3

Dependency graph:
6 -> 8, 6 -> 21
8 -> 11, 8 -> 22
11 -> 8, 11 -> 21
22 -> 8, 22 -> 21
26 -> 6, 26 -> 25

Preprocessed Transitions

	Simplified Guard

	Original rule:
	(0 == 0 /\ i6 <= 0 /\ -8+i1 == 0) /\ i1'=13, i3'=2+i3
	New rule:
	(i6 <= 0 /\ -8+i1 == 0) /\ i1'=13, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ i7-i4 < 0 /\ -10+i1 == 0) /\ i1'=8, i3'=2+i3, i6'=-1+i6, i7'=1+i7
	New rule:
	(i7-i4 < 0 /\ -10+i1 == 0) /\ i1'=8, i3'=2+i3, i6'=-1+i6, i7'=1+i7
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -7+i1 == 0 /\ i4 <= 0) /\ i1'=13, i3'=4+i3
	New rule:
	(-7+i1 == 0 /\ i4 <= 0) /\ i1'=13, i3'=4+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=7, i3'=6+i3
	New rule:
	-1+i1 == 0 /\ i1'=7, i3'=6+i3

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_4 -> 7
eval_start_bb1_in -> 8
eval_start_bb5_in -> 9
eval_start_bb2_in -> 10
eval_start_bb4_in -> 11
eval_start_bb3_in -> 12
eval_start_stop -> 13
eval_start_8 -> 14
eval_start_9 -> 15

Rules:
   6: (-7+i1 == 0 /\ i4 > 0) /\ i1'=8, i3'=1+i3, i6'=i5, i7'=0
   8: (i6 > 0 /\ -8+i1 == 0) /\ i1'=10, i3'=1+i3
  11: (i7-i4 >= 0 /\ -10+i1 == 0) /\ i1'=8, i3'=1+i3, i7'=0
  27: (i6 <= 0 /\ -8+i1 == 0) /\ i1'=13, i3'=2+i3
  28: (i7-i4 < 0 /\ -10+i1 == 0) /\ i1'=8, i3'=2+i3, i6'=-1+i6, i7'=1+i7
  29: (-7+i1 == 0 /\ i4 <= 0) /\ i1'=13, i3'=4+i3
  30: -1+i1 == 0 /\ i1'=7, i3'=6+i3

Dependency graph:
6 -> 8, 6 -> 27
8 -> 11, 8 -> 28
11 -> 8, 11 -> 27
28 -> 8, 28 -> 27
30 -> 6, 30 -> 29

Step with 30

	Trace

	30[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 29

	Trace

	30[(-1+i1 == 0)]
	29[(-7+i1 == 0 /\ i4 <= 0)]
	
	Blocked

	{}
	{}
	{}
	
Backtrack

	Trace

	30[(-1+i1 == 0)]
	
	Blocked

	{}
	{29[T]}
	
Step with 6

	Trace

	30[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ i4 > 0)]
	
	Blocked

	{}
	{29[T]}
	{}
	
Step with 8

	Trace

	30[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ i4 > 0)]
	8[(i6 > 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{29[T]}
	{}
	{}
	
Step with 28

	Trace

	30[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ i4 > 0)]
	8[(i6 > 0 /\ -8+i1 == 0)]
	28[(i7-i4 < 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{29[T]}
	{}
	{}
	{}
	
Poly(n^1)

Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ i6 > 0 /\ i7-i4 < 0 /\ -8+i1 == 0) /\ i1'=8, i3'=3+i3, i6'=-1+i6, i7'=1+i7
		New rule:
		(i6 > 0 /\ i7-i4 < 0 /\ -8+i1 == 0) /\ i1'=8, i3'=3+i3, i6'=-1+i6, i7'=1+i7

	Loop Acceleration

	Original rule:
	(i6 > 0 /\ i7-i4 < 0 /\ -8+i1 == 0) /\ i1'=8, i3'=3+i3, i6'=-1+i6, i7'=1+i7
	New rule:
	(-1+it31 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0) /\ i1'=i1, i3'=i3+3*it31, i6'=i6-it31, i7'=i7+it31

		i6 > 0 [0]: montonic decrease yields 1+i6-it31 > 0
		
		-i7+i4 > 0 [0]: montonic decrease yields 1-i7+i4-it31 > 0
		
		8-i1 >= 0 [0]: unchanged
		
		-8+i1 >= 0 [0]: unchanged
		
		Replacement map: {i6 > 0 -> 1+i6-it31 > 0, -i7+i4 > 0 -> 1-i7+i4-it31 > 0, 8-i1 >= 0 -> 8-i1 >= 0, -8+i1 >= 0 -> -8+i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-1+it31 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0) /\ i1'=i1, i3'=i3+3*it31, i6'=i6-it31, i7'=i7+it31
	New rule:
	(-1+it31 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0) /\ i3'=i3+3*it31, i6'=i6-it31, i7'=i7+it31

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_4 -> 7
eval_start_bb1_in -> 8
eval_start_bb5_in -> 9
eval_start_bb2_in -> 10
eval_start_bb4_in -> 11
eval_start_bb3_in -> 12
eval_start_stop -> 13
eval_start_8 -> 14
eval_start_9 -> 15

Rules:
   6: (-7+i1 == 0 /\ i4 > 0) /\ i1'=8, i3'=1+i3, i6'=i5, i7'=0
   8: (i6 > 0 /\ -8+i1 == 0) /\ i1'=10, i3'=1+i3
  11: (i7-i4 >= 0 /\ -10+i1 == 0) /\ i1'=8, i3'=1+i3, i7'=0
  27: (i6 <= 0 /\ -8+i1 == 0) /\ i1'=13, i3'=2+i3
  28: (i7-i4 < 0 /\ -10+i1 == 0) /\ i1'=8, i3'=2+i3, i6'=-1+i6, i7'=1+i7
  29: (-7+i1 == 0 /\ i4 <= 0) /\ i1'=13, i3'=4+i3
  30: -1+i1 == 0 /\ i1'=7, i3'=6+i3
  31: (-1+it31 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0) /\ i3'=i3+3*it31, i6'=i6-it31, i7'=i7+it31

Dependency graph:
6 -> 8, 6 -> 27, 6 -> 31
8 -> 11, 8 -> 28
11 -> 8, 11 -> 27, 11 -> 31
28 -> 8, 28 -> 27, 28 -> 31
30 -> 6, 30 -> 29
31 -> 8, 31 -> 27

	Trace

	30[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ i4 > 0)]
	31[(-1+it31 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0)]
	
	Blocked

	{}
	{29[T]}
	{}
	{31[T]}
	
Step with 8

	Trace

	30[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ i4 > 0)]
	31[(-1+it31 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0)]
	8[(i6 > 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{29[T]}
	{}
	{31[T]}
	{}
	
Step with 28

	Trace

	30[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ i4 > 0)]
	31[(-1+it31 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0)]
	8[(i6 > 0 /\ -8+i1 == 0)]
	28[(i7-i4 < 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{29[T]}
	{}
	{31[T]}
	{}
	{}
	
Covered

	Trace

	30[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ i4 > 0)]
	31[(-1+it31 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0)]
	8[(i6 > 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{29[T]}
	{}
	{31[T]}
	{28[T]}
	
Step with 11

	Trace

	30[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ i4 > 0)]
	31[(-1+it31 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0)]
	8[(i6 > 0 /\ -8+i1 == 0)]
	11[(i7-i4 >= 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{29[T]}
	{}
	{31[T]}
	{28[T]}
	{}
	
Accelerate and Drop

	Certificate of Non-Termination

	Original rule:
	(i6 > 0 /\ i7-i4 >= 0 /\ -8+i1 == 0) /\ i1'=8, i3'=2+i3, i7'=0
	New rule:
	(i6 > 0 /\ i7-i4 >= 0 /\ i7 <= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0) /\ i1'=0

		i6 > 0 [0]: unchanged
		
		i7-i4 >= 0 [0]: eventual decrease yields (i7-i4 >= 0 /\ -i4 >= 0)
		
		i7-i4 >= 0 [1]: eventual increase yields (i7-i4 >= 0 /\ i7 <= 0)
		
		8-i1 >= 0 [0]: unchanged
		
		-8+i1 >= 0 [0]: unchanged
		
		Replacement map: {i6 > 0 -> i6 > 0, i7-i4 >= 0 -> (i7-i4 >= 0 /\ i7 <= 0), 8-i1 >= 0 -> 8-i1 >= 0, -8+i1 >= 0 -> -8+i1 >= 0}

		Simplified Guard

		Original rule:
		(0 == 0 /\ i6 > 0 /\ i7-i4 >= 0 /\ -8+i1 == 0) /\ i1'=8, i3'=2+i3, i7'=0
		New rule:
		(i6 > 0 /\ i7-i4 >= 0 /\ -8+i1 == 0) /\ i1'=8, i3'=2+i3, i7'=0

	Loop Acceleration

	Original rule:
	(i6 > 0 /\ i7-i4 >= 0 /\ -8+i1 == 0) /\ i1'=8, i3'=2+i3, i7'=0
	New rule:
	(-1+it99 >= 0 /\ i6 > 0 /\ i7-i4 >= 0 /\ -i4 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0) /\ i1'=i1, i3'=i3+2*it99, i7'=0

		i6 > 0 [0]: unchanged
		
		i7-i4 >= 0 [0]: eventual decrease yields (i7-i4 >= 0 /\ -i4 >= 0)
		
		i7-i4 >= 0 [1]: eventual increase yields (i7-i4 >= 0 /\ i7 <= 0)
		
		8-i1 >= 0 [0]: unchanged
		
		-8+i1 >= 0 [0]: unchanged
		
		Replacement map: {i6 > 0 -> i6 > 0, i7-i4 >= 0 -> (i7-i4 >= 0 /\ -i4 >= 0), 8-i1 >= 0 -> 8-i1 >= 0, -8+i1 >= 0 -> -8+i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-1+it99 >= 0 /\ i6 > 0 /\ i7-i4 >= 0 /\ -i4 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0) /\ i1'=i1, i3'=i3+2*it99, i7'=0
	New rule:
	(-1+it99 >= 0 /\ i6 > 0 /\ i7-i4 >= 0 /\ -i4 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0) /\ i3'=i3+2*it99, i7'=0

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_4 -> 7
eval_start_bb1_in -> 8
eval_start_bb5_in -> 9
eval_start_bb2_in -> 10
eval_start_bb4_in -> 11
eval_start_bb3_in -> 12
eval_start_stop -> 13
eval_start_8 -> 14
eval_start_9 -> 15

Rules:
   6: (-7+i1 == 0 /\ i4 > 0) /\ i1'=8, i3'=1+i3, i6'=i5, i7'=0
   8: (i6 > 0 /\ -8+i1 == 0) /\ i1'=10, i3'=1+i3
  11: (i7-i4 >= 0 /\ -10+i1 == 0) /\ i1'=8, i3'=1+i3, i7'=0
  27: (i6 <= 0 /\ -8+i1 == 0) /\ i1'=13, i3'=2+i3
  28: (i7-i4 < 0 /\ -10+i1 == 0) /\ i1'=8, i3'=2+i3, i6'=-1+i6, i7'=1+i7
  29: (-7+i1 == 0 /\ i4 <= 0) /\ i1'=13, i3'=4+i3
  30: -1+i1 == 0 /\ i1'=7, i3'=6+i3
  31: (-1+it31 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0) /\ i3'=i3+3*it31, i6'=i6-it31, i7'=i7+it31
  32: (i6 > 0 /\ i7-i4 >= 0 /\ i7 <= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0) /\ i1'=0
  33: (-1+it99 >= 0 /\ i6 > 0 /\ i7-i4 >= 0 /\ -i4 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0) /\ i3'=i3+2*it99, i7'=0

Dependency graph:
6 -> 8, 6 -> 27, 6 -> 31, 6 -> 32, 6 -> 33
8 -> 11, 8 -> 28
11 -> 8, 11 -> 27, 11 -> 31, 11 -> 32, 11 -> 33
28 -> 8, 28 -> 27, 28 -> 31, 28 -> 32, 28 -> 33
30 -> 6, 30 -> 29
31 -> 8, 31 -> 27, 31 -> 32, 31 -> 33
33 -> 8, 33 -> 27, 33 -> 31, 33 -> 32

	Trace

	30[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ i4 > 0)]
	31[(-1+it31 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0)]
	
	Blocked

	{}
	{29[T]}
	{}
	{31[T]}
	
Step with 27

	Trace

	30[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ i4 > 0)]
	31[(-1+it31 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0)]
	27[(i6 <= 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{29[T]}
	{}
	{31[T], 33[T]}
	{}
	
Backtrack

	Trace

	30[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ i4 > 0)]
	31[(-1+it31 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0)]
	
	Blocked

	{}
	{29[T]}
	{}
	{27[T], 31[T], 33[T]}
	
Step with 8

	Trace

	30[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ i4 > 0)]
	31[(-1+it31 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0)]
	8[(i6 > 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{29[T]}
	{}
	{27[T], 31[T], 32[T], 33[T]}
	{}
	
Step with 11

	Trace

	30[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ i4 > 0)]
	31[(-1+it31 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0)]
	8[(i6 > 0 /\ -8+i1 == 0)]
	11[(i7-i4 >= 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{29[T]}
	{}
	{27[T], 31[T], 32[T], 33[T]}
	{}
	{}
	
Accelerate

		Extracted Implied Equalities

		Original rule:
		(0 == 0 /\ -1+it31 >= 0 /\ i6-it31 > 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0 /\ i7-i4+it31 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -8+i1 == 0) /\ i1'=8, i3'=2+i3+3*it31, i6'=i6-it31, i7'=0
		New rule:
		(0 == 0 /\ -1+it31 >= 0 /\ i6-it31 > 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0 /\ i7-i4+it31 >= 0 /\ i7-i4+it31 == 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -8+i1 == 0) /\ i1'=8, i3'=2+i3+3*it31, i6'=i6-it31, i7'=0
		
		Propagated Equalities

		Original rule:
		(0 == 0 /\ -1+it31 >= 0 /\ i6-it31 > 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0 /\ i7-i4+it31 >= 0 /\ i7-i4+it31 == 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -8+i1 == 0) /\ i1'=8, i3'=2+i3+3*it31, i6'=i6-it31, i7'=0
		New rule:
		(0 >= 0 /\ 0 == 0 /\ 1 > 0 /\ -1-i7+i4 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -8+i1 == 0 /\ 1+i6+i7-i4 > 0 /\ i6+i7-i4 > 0) /\ i1'=8, i3'=2+i3-3*i7+3*i4, i6'=i6+i7-i4, i7'=0
		
			propagated equality it31 = -i7+i4
			
		Simplified Guard

		Original rule:
		(0 >= 0 /\ 0 == 0 /\ 1 > 0 /\ -1-i7+i4 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -8+i1 == 0 /\ 1+i6+i7-i4 > 0 /\ i6+i7-i4 > 0) /\ i1'=8, i3'=2+i3-3*i7+3*i4, i6'=i6+i7-i4, i7'=0
		New rule:
		(-1-i7+i4 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -8+i1 == 0 /\ 1+i6+i7-i4 > 0 /\ i6+i7-i4 > 0) /\ i1'=8, i3'=2+i3-3*i7+3*i4, i6'=i6+i7-i4, i7'=0

	Loop Acceleration

	Original rule:
	(-1-i7+i4 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -8+i1 == 0 /\ 1+i6+i7-i4 > 0 /\ i6+i7-i4 > 0) /\ i1'=8, i3'=2+i3-3*i7+3*i4, i6'=i6+i7-i4, i7'=0
	New rule:
	(i6+i7-2*i4 > 0 /\ -1+it134 >= 0 /\ 1+i6+i7-2*i4 > 0 /\ i6-(-1+it134)*i4+i7-2*i4 > 0 /\ 1+i6-(-1+it134)*i4+i7-2*i4 > 0 /\ -1+i4 >= 0 /\ -1-i7+i4 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -8+i1 == 0 /\ 1+i6+i7-i4 > 0 /\ i6+i7-i4 > 0) /\ i1'=i1, i3'=2+i3-3*i7+3*i4+2*it134+3*i4*it134, i6'=i6+i7-i4-i4*it134, i7'=0

		-1-i7+i4 >= 0 [0]: eventual decrease yields (-1+i4 >= 0 /\ -1-i7+i4 >= 0)
		
		-1-i7+i4 >= 0 [1]: eventual increase yields (-1-i7+i4 >= 0 /\ -i7 <= 0)
		
		8-i1 >= 0 [0]: unchanged
		
		-8+i1 >= 0 [0]: unchanged
		
		1+i6+i7-i4 > 0 [0]: montonic decrease yields (1+i6-(-1+it134)*i4-i4 > 0 /\ 1+i6+i7-i4 > 0), dependencies: i6+i7-i4 > 0
		
		1+i6+i7-i4 > 0 [1]: eventual decrease yields (1+i6-(-1+it134)*i4-i4 > 0 /\ 1+i6+i7-i4 > 0)
		
		1+i6+i7-i4 > 0 [2]: eventual increase yields (i4 <= 0 /\ 1+i6+i7-i4 > 0)
		
		i6+i7-i4 > 0 [0]: eventual decrease yields (i6-(-1+it134)*i4-i4 > 0 /\ i6+i7-i4 > 0)
		
		i6+i7-i4 > 0 [1]: eventual increase yields (i4 <= 0 /\ i6+i7-i4 > 0)
		
		Replacement map: {-1-i7+i4 >= 0 -> (-1+i4 >= 0 /\ -1-i7+i4 >= 0), 8-i1 >= 0 -> 8-i1 >= 0, -8+i1 >= 0 -> -8+i1 >= 0, 1+i6+i7-i4 > 0 -> (1+i6-(-1+it134)*i4-i4 > 0 /\ 1+i6+i7-i4 > 0), i6+i7-i4 > 0 -> (i6-(-1+it134)*i4-i4 > 0 /\ i6+i7-i4 > 0)}

	Removed Trivial Updates

	Original rule:
	(i6+i7-2*i4 > 0 /\ -1+it134 >= 0 /\ 1+i6+i7-2*i4 > 0 /\ i6-(-1+it134)*i4+i7-2*i4 > 0 /\ 1+i6-(-1+it134)*i4+i7-2*i4 > 0 /\ -1+i4 >= 0 /\ -1-i7+i4 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -8+i1 == 0 /\ 1+i6+i7-i4 > 0 /\ i6+i7-i4 > 0) /\ i1'=i1, i3'=2+i3-3*i7+3*i4+2*it134+3*i4*it134, i6'=i6+i7-i4-i4*it134, i7'=0
	New rule:
	(i6+i7-2*i4 > 0 /\ -1+it134 >= 0 /\ 1+i6+i7-2*i4 > 0 /\ i6-(-1+it134)*i4+i7-2*i4 > 0 /\ 1+i6-(-1+it134)*i4+i7-2*i4 > 0 /\ -1+i4 >= 0 /\ -1-i7+i4 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -8+i1 == 0 /\ 1+i6+i7-i4 > 0 /\ i6+i7-i4 > 0) /\ i3'=2+i3-3*i7+3*i4+2*it134+3*i4*it134, i6'=i6+i7-i4-i4*it134, i7'=0

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_4 -> 7
eval_start_bb1_in -> 8
eval_start_bb5_in -> 9
eval_start_bb2_in -> 10
eval_start_bb4_in -> 11
eval_start_bb3_in -> 12
eval_start_stop -> 13
eval_start_8 -> 14
eval_start_9 -> 15

Rules:
   6: (-7+i1 == 0 /\ i4 > 0) /\ i1'=8, i3'=1+i3, i6'=i5, i7'=0
   8: (i6 > 0 /\ -8+i1 == 0) /\ i1'=10, i3'=1+i3
  11: (i7-i4 >= 0 /\ -10+i1 == 0) /\ i1'=8, i3'=1+i3, i7'=0
  27: (i6 <= 0 /\ -8+i1 == 0) /\ i1'=13, i3'=2+i3
  28: (i7-i4 < 0 /\ -10+i1 == 0) /\ i1'=8, i3'=2+i3, i6'=-1+i6, i7'=1+i7
  29: (-7+i1 == 0 /\ i4 <= 0) /\ i1'=13, i3'=4+i3
  30: -1+i1 == 0 /\ i1'=7, i3'=6+i3
  31: (-1+it31 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0) /\ i3'=i3+3*it31, i6'=i6-it31, i7'=i7+it31
  32: (i6 > 0 /\ i7-i4 >= 0 /\ i7 <= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0) /\ i1'=0
  33: (-1+it99 >= 0 /\ i6 > 0 /\ i7-i4 >= 0 /\ -i4 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0) /\ i3'=i3+2*it99, i7'=0
  34: (i6+i7-2*i4 > 0 /\ -1+it134 >= 0 /\ 1+i6+i7-2*i4 > 0 /\ i6-(-1+it134)*i4+i7-2*i4 > 0 /\ 1+i6-(-1+it134)*i4+i7-2*i4 > 0 /\ -1+i4 >= 0 /\ -1-i7+i4 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -8+i1 == 0 /\ 1+i6+i7-i4 > 0 /\ i6+i7-i4 > 0) /\ i3'=2+i3-3*i7+3*i4+2*it134+3*i4*it134, i6'=i6+i7-i4-i4*it134, i7'=0

Dependency graph:
6 -> 8, 6 -> 27, 6 -> 31, 6 -> 32, 6 -> 33, 6 -> 34
8 -> 11, 8 -> 28
11 -> 8, 11 -> 27, 11 -> 31, 11 -> 32, 11 -> 33, 11 -> 34
28 -> 8, 28 -> 27, 28 -> 31, 28 -> 32, 28 -> 33, 28 -> 34
30 -> 6, 30 -> 29
31 -> 8, 31 -> 27, 31 -> 32, 31 -> 33
33 -> 8, 33 -> 27, 33 -> 31, 33 -> 32, 33 -> 34
34 -> 8, 34 -> 27, 34 -> 31, 34 -> 32, 34 -> 33

	Trace

	30[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ i4 > 0)]
	34[(i6+i7-2*i4 > 0 /\ -1+it134 >= 0 /\ 1+i6+i7-2*i4 > 0 /\ i6-(-1+it134)*i4+i7-2*i4 > 0 /\ 1+i6-(-1+it134)*i4+i7-2*i4 > 0 /\ -1+i4 >= 0 /\ -1-i7+i4 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -8+i1 == 0 /\ 1+i6+i7-i4 > 0 /\ i6+i7-i4 > 0)]
	
	Blocked

	{}
	{29[T]}
	{}
	{34[T]}
	
Step with 31

	Trace

	30[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ i4 > 0)]
	34[(i6+i7-2*i4 > 0 /\ -1+it134 >= 0 /\ 1+i6+i7-2*i4 > 0 /\ i6-(-1+it134)*i4+i7-2*i4 > 0 /\ 1+i6-(-1+it134)*i4+i7-2*i4 > 0 /\ -1+i4 >= 0 /\ -1-i7+i4 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -8+i1 == 0 /\ 1+i6+i7-i4 > 0 /\ i6+i7-i4 > 0)]
	31[(-1+it31 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0)]
	
	Blocked

	{}
	{29[T]}
	{}
	{32[T], 33[T], 34[T]}
	{31[T]}
	
Step with 27

	Trace

	30[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ i4 > 0)]
	34[(i6+i7-2*i4 > 0 /\ -1+it134 >= 0 /\ 1+i6+i7-2*i4 > 0 /\ i6-(-1+it134)*i4+i7-2*i4 > 0 /\ 1+i6-(-1+it134)*i4+i7-2*i4 > 0 /\ -1+i4 >= 0 /\ -1-i7+i4 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -8+i1 == 0 /\ 1+i6+i7-i4 > 0 /\ i6+i7-i4 > 0)]
	31[(-1+it31 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0)]
	27[(i6 <= 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{29[T]}
	{}
	{32[T], 33[T], 34[T]}
	{31[T], 32[T]}
	{}
	
Backtrack

	Trace

	30[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ i4 > 0)]
	34[(i6+i7-2*i4 > 0 /\ -1+it134 >= 0 /\ 1+i6+i7-2*i4 > 0 /\ i6-(-1+it134)*i4+i7-2*i4 > 0 /\ 1+i6-(-1+it134)*i4+i7-2*i4 > 0 /\ -1+i4 >= 0 /\ -1-i7+i4 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -8+i1 == 0 /\ 1+i6+i7-i4 > 0 /\ i6+i7-i4 > 0)]
	31[(-1+it31 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0)]
	
	Blocked

	{}
	{29[T]}
	{}
	{32[T], 33[T], 34[T]}
	{27[T], 31[T], 32[T]}
	
Step with 8

	Trace

	30[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ i4 > 0)]
	34[(i6+i7-2*i4 > 0 /\ -1+it134 >= 0 /\ 1+i6+i7-2*i4 > 0 /\ i6-(-1+it134)*i4+i7-2*i4 > 0 /\ 1+i6-(-1+it134)*i4+i7-2*i4 > 0 /\ -1+i4 >= 0 /\ -1-i7+i4 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -8+i1 == 0 /\ 1+i6+i7-i4 > 0 /\ i6+i7-i4 > 0)]
	31[(-1+it31 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0)]
	8[(i6 > 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{29[T]}
	{}
	{32[T], 33[T], 34[T]}
	{27[T], 31[T], 32[T], 33[T]}
	{}
	
Step with 28

	Trace

	30[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ i4 > 0)]
	34[(i6+i7-2*i4 > 0 /\ -1+it134 >= 0 /\ 1+i6+i7-2*i4 > 0 /\ i6-(-1+it134)*i4+i7-2*i4 > 0 /\ 1+i6-(-1+it134)*i4+i7-2*i4 > 0 /\ -1+i4 >= 0 /\ -1-i7+i4 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -8+i1 == 0 /\ 1+i6+i7-i4 > 0 /\ i6+i7-i4 > 0)]
	31[(-1+it31 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0)]
	8[(i6 > 0 /\ -8+i1 == 0)]
	28[(i7-i4 < 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{29[T]}
	{}
	{32[T], 33[T], 34[T]}
	{27[T], 31[T], 32[T], 33[T]}
	{}
	{}
	
Covered

	Trace

	30[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ i4 > 0)]
	34[(i6+i7-2*i4 > 0 /\ -1+it134 >= 0 /\ 1+i6+i7-2*i4 > 0 /\ i6-(-1+it134)*i4+i7-2*i4 > 0 /\ 1+i6-(-1+it134)*i4+i7-2*i4 > 0 /\ -1+i4 >= 0 /\ -1-i7+i4 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -8+i1 == 0 /\ 1+i6+i7-i4 > 0 /\ i6+i7-i4 > 0)]
	31[(-1+it31 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0)]
	8[(i6 > 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{29[T]}
	{}
	{32[T], 33[T], 34[T]}
	{27[T], 31[T], 32[T], 33[T]}
	{28[T]}
	
Step with 11

	Trace

	30[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ i4 > 0)]
	34[(i6+i7-2*i4 > 0 /\ -1+it134 >= 0 /\ 1+i6+i7-2*i4 > 0 /\ i6-(-1+it134)*i4+i7-2*i4 > 0 /\ 1+i6-(-1+it134)*i4+i7-2*i4 > 0 /\ -1+i4 >= 0 /\ -1-i7+i4 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -8+i1 == 0 /\ 1+i6+i7-i4 > 0 /\ i6+i7-i4 > 0)]
	31[(-1+it31 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0)]
	8[(i6 > 0 /\ -8+i1 == 0)]
	11[(i7-i4 >= 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{29[T]}
	{}
	{32[T], 33[T], 34[T]}
	{27[T], 31[T], 32[T], 33[T]}
	{28[T]}
	{}
	
Covered

	Trace

	30[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ i4 > 0)]
	34[(i6+i7-2*i4 > 0 /\ -1+it134 >= 0 /\ 1+i6+i7-2*i4 > 0 /\ i6-(-1+it134)*i4+i7-2*i4 > 0 /\ 1+i6-(-1+it134)*i4+i7-2*i4 > 0 /\ -1+i4 >= 0 /\ -1-i7+i4 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -8+i1 == 0 /\ 1+i6+i7-i4 > 0 /\ i6+i7-i4 > 0)]
	31[(-1+it31 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0)]
	8[(i6 > 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{29[T]}
	{}
	{32[T], 33[T], 34[T]}
	{27[T], 31[T], 32[T], 33[T]}
	{11[T], 28[T]}
	
Backtrack

	Trace

	30[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ i4 > 0)]
	34[(i6+i7-2*i4 > 0 /\ -1+it134 >= 0 /\ 1+i6+i7-2*i4 > 0 /\ i6-(-1+it134)*i4+i7-2*i4 > 0 /\ 1+i6-(-1+it134)*i4+i7-2*i4 > 0 /\ -1+i4 >= 0 /\ -1-i7+i4 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -8+i1 == 0 /\ 1+i6+i7-i4 > 0 /\ i6+i7-i4 > 0)]
	31[(-1+it31 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0)]
	
	Blocked

	{}
	{29[T]}
	{}
	{32[T], 33[T], 34[T]}
	{8[T], 27[T], 31[T], 32[T], 33[T]}
	
Backtrack

	Trace

	30[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ i4 > 0)]
	34[(i6+i7-2*i4 > 0 /\ -1+it134 >= 0 /\ 1+i6+i7-2*i4 > 0 /\ i6-(-1+it134)*i4+i7-2*i4 > 0 /\ 1+i6-(-1+it134)*i4+i7-2*i4 > 0 /\ -1+i4 >= 0 /\ -1-i7+i4 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -8+i1 == 0 /\ 1+i6+i7-i4 > 0 /\ i6+i7-i4 > 0)]
	
	Blocked

	{}
	{29[T]}
	{}
	{31[T], 32[T], 33[T], 34[T]}
	
Step with 8

	Trace

	30[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ i4 > 0)]
	34[(i6+i7-2*i4 > 0 /\ -1+it134 >= 0 /\ 1+i6+i7-2*i4 > 0 /\ i6-(-1+it134)*i4+i7-2*i4 > 0 /\ 1+i6-(-1+it134)*i4+i7-2*i4 > 0 /\ -1+i4 >= 0 /\ -1-i7+i4 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -8+i1 == 0 /\ 1+i6+i7-i4 > 0 /\ i6+i7-i4 > 0)]
	8[(i6 > 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{29[T]}
	{}
	{31[T], 32[T], 33[T], 34[T]}
	{}
	
Step with 28

	Trace

	30[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ i4 > 0)]
	34[(i6+i7-2*i4 > 0 /\ -1+it134 >= 0 /\ 1+i6+i7-2*i4 > 0 /\ i6-(-1+it134)*i4+i7-2*i4 > 0 /\ 1+i6-(-1+it134)*i4+i7-2*i4 > 0 /\ -1+i4 >= 0 /\ -1-i7+i4 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -8+i1 == 0 /\ 1+i6+i7-i4 > 0 /\ i6+i7-i4 > 0)]
	8[(i6 > 0 /\ -8+i1 == 0)]
	28[(i7-i4 < 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{29[T]}
	{}
	{31[T], 32[T], 33[T], 34[T]}
	{11[T]}
	{}
	
Covered

	Trace

	30[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ i4 > 0)]
	34[(i6+i7-2*i4 > 0 /\ -1+it134 >= 0 /\ 1+i6+i7-2*i4 > 0 /\ i6-(-1+it134)*i4+i7-2*i4 > 0 /\ 1+i6-(-1+it134)*i4+i7-2*i4 > 0 /\ -1+i4 >= 0 /\ -1-i7+i4 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -8+i1 == 0 /\ 1+i6+i7-i4 > 0 /\ i6+i7-i4 > 0)]
	8[(i6 > 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{29[T]}
	{}
	{31[T], 32[T], 33[T], 34[T]}
	{11[T], 28[T]}
	
Backtrack

	Trace

	30[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ i4 > 0)]
	34[(i6+i7-2*i4 > 0 /\ -1+it134 >= 0 /\ 1+i6+i7-2*i4 > 0 /\ i6-(-1+it134)*i4+i7-2*i4 > 0 /\ 1+i6-(-1+it134)*i4+i7-2*i4 > 0 /\ -1+i4 >= 0 /\ -1-i7+i4 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -8+i1 == 0 /\ 1+i6+i7-i4 > 0 /\ i6+i7-i4 > 0)]
	
	Blocked

	{}
	{29[T]}
	{}
	{8[T], 31[T], 32[T], 33[T], 34[T]}
	
Backtrack

	Trace

	30[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ i4 > 0)]
	
	Blocked

	{}
	{29[T]}
	{34[T]}
	
Step with 8

	Trace

	30[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ i4 > 0)]
	8[(i6 > 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{29[T]}
	{34[T]}
	{}
	
Step with 28

	Trace

	30[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ i4 > 0)]
	8[(i6 > 0 /\ -8+i1 == 0)]
	28[(i7-i4 < 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{29[T]}
	{34[T]}
	{}
	{}
	
Covered

	Trace

	30[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ i4 > 0)]
	8[(i6 > 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{29[T]}
	{34[T]}
	{28[T]}
	
Backtrack

	Trace

	30[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ i4 > 0)]
	
	Blocked

	{}
	{29[T]}
	{8[T], 34[T]}
	
Step with 27

	Trace

	30[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ i4 > 0)]
	27[(i6 <= 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{29[T]}
	{8[T], 34[T]}
	{}
	
Backtrack

	Trace

	30[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ i4 > 0)]
	
	Blocked

	{}
	{29[T]}
	{8[T], 27[T], 34[T]}
	
Step with 31

	Trace

	30[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ i4 > 0)]
	31[(-1+it31 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0)]
	
	Blocked

	{}
	{29[T]}
	{8[T], 27[T], 33[T], 34[T]}
	{31[T]}
	
Step with 27

	Trace

	30[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ i4 > 0)]
	31[(-1+it31 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0)]
	27[(i6 <= 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{29[T]}
	{8[T], 27[T], 33[T], 34[T]}
	{31[T], 32[T]}
	{}
	
Backtrack

	Trace

	30[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ i4 > 0)]
	31[(-1+it31 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0)]
	
	Blocked

	{}
	{29[T]}
	{8[T], 27[T], 33[T], 34[T]}
	{27[T], 31[T], 32[T]}
	
Step with 8

	Trace

	30[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ i4 > 0)]
	31[(-1+it31 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0)]
	8[(i6 > 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{29[T]}
	{8[T], 27[T], 33[T], 34[T]}
	{27[T], 31[T], 32[T]}
	{}
	
Step with 11

	Trace

	30[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ i4 > 0)]
	31[(-1+it31 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0)]
	8[(i6 > 0 /\ -8+i1 == 0)]
	11[(i7-i4 >= 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{29[T]}
	{8[T], 27[T], 33[T], 34[T]}
	{27[T], 31[T], 32[T]}
	{}
	{}
	
Covered

	Trace

	30[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ i4 > 0)]
	31[(-1+it31 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0)]
	8[(i6 > 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{29[T]}
	{8[T], 27[T], 33[T], 34[T]}
	{27[T], 31[T], 32[T]}
	{11[T]}
	
Step with 28

	Trace

	30[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ i4 > 0)]
	31[(-1+it31 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0)]
	8[(i6 > 0 /\ -8+i1 == 0)]
	28[(i7-i4 < 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{29[T]}
	{8[T], 27[T], 33[T], 34[T]}
	{27[T], 31[T], 32[T]}
	{11[T]}
	{}
	
Covered

	Trace

	30[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ i4 > 0)]
	31[(-1+it31 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0)]
	8[(i6 > 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{29[T]}
	{8[T], 27[T], 33[T], 34[T]}
	{27[T], 31[T], 32[T]}
	{11[T], 28[T]}
	
Backtrack

	Trace

	30[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ i4 > 0)]
	31[(-1+it31 >= 0 /\ 1+i6-it31 > 0 /\ 1-i7+i4-it31 > 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0)]
	
	Blocked

	{}
	{29[T]}
	{8[T], 27[T], 33[T], 34[T]}
	{8[T], 27[T], 31[T], 32[T]}
	
Backtrack

	Trace

	30[(-1+i1 == 0)]
	6[(-7+i1 == 0 /\ i4 > 0)]
	
	Blocked

	{}
	{29[T]}
	{8[T], 27[T], 31[T], 33[T], 34[T]}
	
Backtrack

	Trace

	30[(-1+i1 == 0)]
	
	Blocked

	{}
	{6[T], 29[T]}
	
Backtrack

	Trace

	Blocked

	{30[T]}
	
Accept

Poly(n^1)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃
  Temp_Vars:  
  Locations:  l0, l1, l10, l11, l12, l13, l14, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, X₃)
  t₃: l1(X₀, X₁, X₂, X₃) → l4(X₀, X₁, X₂, X₃)
  t₁₅: l10(X₀, X₁, X₂, X₃) → l9(X₀, X₁, X₂, X₃)
  t₁₀: l12(X₀, X₁, X₂, X₃) → l14(X₀, X₁, X₂, X₃) :|: 1+X₃ ≤ X₀
  t₁₁: l12(X₀, X₁, X₂, X₃) → l7(X₀, X₁, X₂, 0) :|: X₀ ≤ X₃
  t₁₃: l13(X₀, X₁, X₂, X₃) → l11(X₀, X₁, X₂, X₃)
  t₁₂: l14(X₀, X₁, X₂, X₃) → l7(X₀, X₁, X₂-1, 1+X₃)
  t₁: l2(X₀, X₁, X₂, X₃) → l3(X₀, X₁, X₂, X₃)
  t₂: l3(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, X₃)
  t₄: l4(X₀, X₁, X₂, X₃) → l5(X₀, X₁, X₂, X₃)
  t₅: l5(X₀, X₁, X₂, X₃) → l6(X₀, X₁, X₂, X₃)
  t₆: l6(X₀, X₁, X₂, X₃) → l7(X₀, X₁, X₁, 0) :|: 1 ≤ X₀
  t₇: l6(X₀, X₁, X₂, X₃) → l8(X₀, X₁, X₂, X₃) :|: X₀ ≤ 0
  t₈: l7(X₀, X₁, X₂, X₃) → l12(X₀, X₁, X₂, X₃) :|: 1 ≤ X₂
  t₉: l7(X₀, X₁, X₂, X₃) → l13(X₀, X₁, X₂, X₃) :|: X₂ ≤ 0
  t₁₄: l8(X₀, X₁, X₂, X₃) → l10(X₀, X₁, X₂, X₃)
  t₁₆: l9(X₀, X₁, X₂, X₃) → l11(X₀, X₁, X₂, X₃)


Preprocessing
  Found invariant X₃ ≤ X₀ ∧ 0 ≤ X₃ ∧ 1 ≤ X₂+X₃ ∧ 1 ≤ X₁+X₃ ∧ 1 ≤ X₀+X₃ ∧ X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₀+X₂ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l12


  Found invariant X₃ ≤ X₀ ∧ 0 ≤ X₃ ∧ 1 ≤ X₀+X₃ ∧ X₂ ≤ X₁ ∧ 1 ≤ X₀ for location l7


  Found invariant X₃ ≤ X₀ ∧ 0 ≤ X₃ ∧ X₂ ≤ X₃ ∧ 1 ≤ X₀+X₃ ∧ X₂ ≤ 0 ∧ X₂ ≤ X₁ ∧ 1+X₂ ≤ X₀ ∧ 1 ≤ X₀ for location l13


  Found invariant X₀ ≤ 0 for location l8


  Found invariant X₀ ≤ 0 for location l10


  Found invariant X₀ ≤ 0 for location l9


  Found invariant 1+X₃ ≤ X₀ ∧ 0 ≤ X₃ ∧ 1 ≤ X₂+X₃ ∧ 1 ≤ X₁+X₃ ∧ 1 ≤ X₀+X₃ ∧ X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₀+X₂ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l14


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃
  Temp_Vars:  
  Locations:  l0, l1, l10, l11, l12, l13, l14, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, X₃)
  t₃: l1(X₀, X₁, X₂, X₃) → l4(X₀, X₁, X₂, X₃)
  t₁₅: l10(X₀, X₁, X₂, X₃) → l9(X₀, X₁, X₂, X₃) :|: X₀ ≤ 0
  t₁₀: l12(X₀, X₁, X₂, X₃) → l14(X₀, X₁, X₂, X₃) :|: 1+X₃ ≤ X₀ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₃ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 1 ≤ X₂ ∧ 1 ≤ X₂+X₃ ∧ 2 ≤ X₀+X₁ ∧ 2 ≤ X₀+X₂ ∧ 2 ≤ X₁+X₂ ∧ X₃ ≤ X₀ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₃
  t₁₁: l12(X₀, X₁, X₂, X₃) → l7(X₀, X₁, X₂, 0) :|: X₀ ≤ X₃ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₃ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 1 ≤ X₂ ∧ 1 ≤ X₂+X₃ ∧ 2 ≤ X₀+X₁ ∧ 2 ≤ X₀+X₂ ∧ 2 ≤ X₁+X₂ ∧ X₃ ≤ X₀ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₃
  t₁₃: l13(X₀, X₁, X₂, X₃) → l11(X₀, X₁, X₂, X₃) :|: 1 ≤ X₀ ∧ 1+X₂ ≤ X₀ ∧ 1 ≤ X₀+X₃ ∧ X₃ ≤ X₀ ∧ X₂ ≤ X₁ ∧ X₂ ≤ 0 ∧ X₂ ≤ X₃ ∧ 0 ≤ X₃
  t₁₂: l14(X₀, X₁, X₂, X₃) → l7(X₀, X₁, X₂-1, 1+X₃) :|: 1 ≤ X₀ ∧ 1 ≤ X₀+X₃ ∧ 1+X₃ ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 1 ≤ X₂ ∧ 1 ≤ X₂+X₃ ∧ 2 ≤ X₀+X₁ ∧ 2 ≤ X₀+X₂ ∧ 2 ≤ X₁+X₂ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₃
  t₁: l2(X₀, X₁, X₂, X₃) → l3(X₀, X₁, X₂, X₃)
  t₂: l3(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, X₃)
  t₄: l4(X₀, X₁, X₂, X₃) → l5(X₀, X₁, X₂, X₃)
  t₅: l5(X₀, X₁, X₂, X₃) → l6(X₀, X₁, X₂, X₃)
  t₆: l6(X₀, X₁, X₂, X₃) → l7(X₀, X₁, X₁, 0) :|: 1 ≤ X₀
  t₇: l6(X₀, X₁, X₂, X₃) → l8(X₀, X₁, X₂, X₃) :|: X₀ ≤ 0
  t₈: l7(X₀, X₁, X₂, X₃) → l12(X₀, X₁, X₂, X₃) :|: 1 ≤ X₂ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₃ ∧ X₃ ≤ X₀ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₃
  t₉: l7(X₀, X₁, X₂, X₃) → l13(X₀, X₁, X₂, X₃) :|: X₂ ≤ 0 ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₃ ∧ X₃ ≤ X₀ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₃
  t₁₄: l8(X₀, X₁, X₂, X₃) → l10(X₀, X₁, X₂, X₃) :|: X₀ ≤ 0
  t₁₆: l9(X₀, X₁, X₂, X₃) → l11(X₀, X₁, X₂, X₃) :|: X₀ ≤ 0


MPRF for transition t₈: l7(X₀, X₁, X₂, X₃) → l12(X₀, X₁, X₂, X₃) :|: 1 ≤ X₂ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₃ ∧ X₃ ≤ X₀ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₃ of depth 1:
  new bound:
    2⋅X₁+1 {O(n)}

  MPRF:
    • l12: [2⋅X₂+X₃-2]
    • l14: [2⋅X₂+X₃-2]
    • l7: [2⋅X₂+X₃-1]




MPRF for transition t₁₀: l12(X₀, X₁, X₂, X₃) → l14(X₀, X₁, X₂, X₃) :|: 1+X₃ ≤ X₀ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₃ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 1 ≤ X₂ ∧ 1 ≤ X₂+X₃ ∧ 2 ≤ X₀+X₁ ∧ 2 ≤ X₀+X₂ ∧ 2 ≤ X₁+X₂ ∧ X₃ ≤ X₀ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₃ of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l12: [X₂]
    • l14: [X₂-1]
    • l7: [X₂]




MPRF for transition t₁₁: l12(X₀, X₁, X₂, X₃) → l7(X₀, X₁, X₂, 0) :|: X₀ ≤ X₃ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₃ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 1 ≤ X₂ ∧ 1 ≤ X₂+X₃ ∧ 2 ≤ X₀+X₁ ∧ 2 ≤ X₀+X₂ ∧ 2 ≤ X₁+X₂ ∧ X₃ ≤ X₀ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₃ of depth 1:
  new bound:
    X₀+X₁ {O(n)}

  MPRF:
    • l12: [X₀+X₂+X₃]
    • l14: [X₀+X₂+X₃]
    • l7: [X₀+X₂+X₃]




MPRF for transition t₁₂: l14(X₀, X₁, X₂, X₃) → l7(X₀, X₁, X₂-1, 1+X₃) :|: 1 ≤ X₀ ∧ 1 ≤ X₀+X₃ ∧ 1+X₃ ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 1 ≤ X₂ ∧ 1 ≤ X₂+X₃ ∧ 2 ≤ X₀+X₁ ∧ 2 ≤ X₀+X₂ ∧ 2 ≤ X₁+X₂ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₃ of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l12: [X₂]
    • l14: [X₂]
    • l7: [X₂]




All Bounds
Timebounds
  Overall timebound:5⋅X₁+X₀+14 {O(n)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: 1 {O(1)}
    t₈: 2⋅X₁+1 {O(n)}
    t₉: 1 {O(1)}
    t₁₀: X₁ {O(n)}
    t₁₁: X₀+X₁ {O(n)}
    t₁₂: X₁ {O(n)}
    t₁₃: 1 {O(1)}
    t₁₄: 1 {O(1)}
    t₁₅: 1 {O(1)}
    t₁₆: 1 {O(1)}


Costbounds
  Overall costbound: 5⋅X₁+X₀+14 {O(n)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: 1 {O(1)}
    t₈: 2⋅X₁+1 {O(n)}
    t₉: 1 {O(1)}
    t₁₀: X₁ {O(n)}
    t₁₁: X₀+X₁ {O(n)}
    t₁₂: X₁ {O(n)}
    t₁₃: 1 {O(1)}
    t₁₄: 1 {O(1)}
    t₁₅: 1 {O(1)}
    t₁₆: 1 {O(1)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₀, X₂: X₂ {O(n)}
    t₀, X₃: X₃ {O(n)}
    t₁, X₀: X₀ {O(n)}
    t₁, X₁: X₁ {O(n)}
    t₁, X₂: X₂ {O(n)}
    t₁, X₃: X₃ {O(n)}
    t₂, X₀: X₀ {O(n)}
    t₂, X₁: X₁ {O(n)}
    t₂, X₂: X₂ {O(n)}
    t₂, X₃: X₃ {O(n)}
    t₃, X₀: X₀ {O(n)}
    t₃, X₁: X₁ {O(n)}
    t₃, X₂: X₂ {O(n)}
    t₃, X₃: X₃ {O(n)}
    t₄, X₀: X₀ {O(n)}
    t₄, X₁: X₁ {O(n)}
    t₄, X₂: X₂ {O(n)}
    t₄, X₃: X₃ {O(n)}
    t₅, X₀: X₀ {O(n)}
    t₅, X₁: X₁ {O(n)}
    t₅, X₂: X₂ {O(n)}
    t₅, X₃: X₃ {O(n)}
    t₆, X₀: X₀ {O(n)}
    t₆, X₁: X₁ {O(n)}
    t₆, X₂: X₁ {O(n)}
    t₆, X₃: 0 {O(1)}
    t₇, X₀: X₀ {O(n)}
    t₇, X₁: X₁ {O(n)}
    t₇, X₂: X₂ {O(n)}
    t₇, X₃: X₃ {O(n)}
    t₈, X₀: X₀ {O(n)}
    t₈, X₁: X₁ {O(n)}
    t₈, X₂: X₁ {O(n)}
    t₈, X₃: X₁ {O(n)}
    t₉, X₀: 2⋅X₀ {O(n)}
    t₉, X₁: 2⋅X₁ {O(n)}
    t₉, X₂: 2⋅X₁ {O(n)}
    t₉, X₃: X₁ {O(n)}
    t₁₀, X₀: X₀ {O(n)}
    t₁₀, X₁: X₁ {O(n)}
    t₁₀, X₂: X₁ {O(n)}
    t₁₀, X₃: X₁ {O(n)}
    t₁₁, X₀: X₀ {O(n)}
    t₁₁, X₁: X₁ {O(n)}
    t₁₁, X₂: X₁ {O(n)}
    t₁₁, X₃: 0 {O(1)}
    t₁₂, X₀: X₀ {O(n)}
    t₁₂, X₁: X₁ {O(n)}
    t₁₂, X₂: X₁ {O(n)}
    t₁₂, X₃: X₁ {O(n)}
    t₁₃, X₀: 2⋅X₀ {O(n)}
    t₁₃, X₁: 2⋅X₁ {O(n)}
    t₁₃, X₂: 2⋅X₁ {O(n)}
    t₁₃, X₃: X₁ {O(n)}
    t₁₄, X₀: X₀ {O(n)}
    t₁₄, X₁: X₁ {O(n)}
    t₁₄, X₂: X₂ {O(n)}
    t₁₄, X₃: X₃ {O(n)}
    t₁₅, X₀: X₀ {O(n)}
    t₁₅, X₁: X₁ {O(n)}
    t₁₅, X₂: X₂ {O(n)}
    t₁₅, X₃: X₃ {O(n)}
    t₁₆, X₀: X₀ {O(n)}
    t₁₆, X₁: X₁ {O(n)}
    t₁₆, X₂: X₂ {O(n)}
    t₁₆, X₃: X₃ {O(n)}

