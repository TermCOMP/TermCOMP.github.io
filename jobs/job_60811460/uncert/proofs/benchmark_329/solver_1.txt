NO

# LoAT Proof:
NO

NO

Initial ITS

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f6 -> 2
f14 -> 3

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=i5, i6'=i7
   1: (-2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i6'=-1+i6
   2: (-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i6'=-1+i6
   3: (-2+i1 == 0 /\ -1+i7-i5 >= 0 /\ i4 == 0) /\ i1'=3, i3'=1+i3, i4'=0
   4: (-1-i7+i5 >= 0 /\ -2+i1 == 0 /\ i4 == 0) /\ i1'=3, i3'=1+i3, i4'=0
   5: (-2+i1 == 0 /\ i4 == 0 /\ -i7+i5 == 0) /\ i1'=3, i3'=1+i3, i4'=0, i7'=i5

Dependency graph:
0 -> 1, 0 -> 2, 0 -> 3, 0 -> 4, 0 -> 5
1 -> 1, 1 -> 2, 1 -> 3, 1 -> 4, 1 -> 5
2 -> 1, 2 -> 2, 2 -> 3, 2 -> 4, 2 -> 5

Refined Dependency Graph

	Removed the following edges: 1 -> 2, 1 -> 3, 1 -> 4, 1 -> 5, 2 -> 1

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f6 -> 2
f14 -> 3

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=i5, i6'=i7
   1: (-2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i6'=-1+i6
   2: (-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i6'=-1+i6
   3: (-2+i1 == 0 /\ -1+i7-i5 >= 0 /\ i4 == 0) /\ i1'=3, i3'=1+i3, i4'=0
   4: (-1-i7+i5 >= 0 /\ -2+i1 == 0 /\ i4 == 0) /\ i1'=3, i3'=1+i3, i4'=0
   5: (-2+i1 == 0 /\ i4 == 0 /\ -i7+i5 == 0) /\ i1'=3, i3'=1+i3, i4'=0, i7'=i5

Dependency graph:
0 -> 1, 0 -> 2, 0 -> 3, 0 -> 4, 0 -> 5
1 -> 1
2 -> 2, 2 -> 3, 2 -> 4, 2 -> 5

Step with 0

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 4

	Trace

	0[(-1+i1 == 0)]
	4[(-1-i7+i5 >= 0 /\ -2+i1 == 0 /\ i4 == 0)]
	
	Blocked

	{}
	{}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{4[T]}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	1[(-2+i1 == 0 /\ -1-i4 >= 0)]
	
	Blocked

	{}
	{4[T]}
	{}
	
Nonterm

	Certificate of Non-Termination

	Original rule:
	(-2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i6'=-1+i6
	New rule:
	(-2+i1 >= 0 /\ -1+it19 >= 0 /\ 2-i1 >= 0 /\ -1-i4 >= 0) /\ i1'=0

		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		-1-i4 >= 0 [0]: monotonic increase yields -1-i4 >= 0
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0, -1-i4 >= 0 -> -1-i4 >= 0}

	Loop Acceleration

	Original rule:
	(-2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i6'=-1+i6
	New rule:
	(-2+i1 >= 0 /\ -1+it19 >= 0 /\ 2-i1 >= 0 /\ -1-i4 >= 0) /\ i1'=i1, i3'=i3+it19, i4'=-it19+i4, i6'=i6-it19

		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		-1-i4 >= 0 [0]: monotonic increase yields -1-i4 >= 0
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0, -1-i4 >= 0 -> -1-i4 >= 0}

	Removed Trivial Updates

	Original rule:
	(-2+i1 >= 0 /\ -1+it19 >= 0 /\ 2-i1 >= 0 /\ -1-i4 >= 0) /\ i1'=i1, i3'=i3+it19, i4'=-it19+i4, i6'=i6-it19
	New rule:
	(-2+i1 >= 0 /\ -1+it19 >= 0 /\ 2-i1 >= 0 /\ -1-i4 >= 0) /\ i3'=i3+it19, i4'=-it19+i4, i6'=i6-it19

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f6 -> 2
f14 -> 3

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=i5, i6'=i7
   1: (-2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i6'=-1+i6
   2: (-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i6'=-1+i6
   3: (-2+i1 == 0 /\ -1+i7-i5 >= 0 /\ i4 == 0) /\ i1'=3, i3'=1+i3, i4'=0
   4: (-1-i7+i5 >= 0 /\ -2+i1 == 0 /\ i4 == 0) /\ i1'=3, i3'=1+i3, i4'=0
   5: (-2+i1 == 0 /\ i4 == 0 /\ -i7+i5 == 0) /\ i1'=3, i3'=1+i3, i4'=0, i7'=i5
   6: (-2+i1 >= 0 /\ -1+it19 >= 0 /\ 2-i1 >= 0 /\ -1-i4 >= 0) /\ i1'=0
   7: (-2+i1 >= 0 /\ -1+it19 >= 0 /\ 2-i1 >= 0 /\ -1-i4 >= 0) /\ i3'=i3+it19, i4'=-it19+i4, i6'=i6-it19

Dependency graph:
0 -> 1, 0 -> 2, 0 -> 3, 0 -> 4, 0 -> 5, 0 -> 6, 0 -> 7
1 -> 1, 1 -> 6, 1 -> 7
2 -> 2, 2 -> 3, 2 -> 4, 2 -> 5
7 -> 1, 7 -> 6

Step with 6

	Trace

	0[(-1+i1 == 0)]
	6[(-2+i1 >= 0 /\ -1+it19 >= 0 /\ 2-i1 >= 0 /\ -1-i4 >= 0)]
	
	Blocked

	{}
	{4[T]}
	{6[T]}
	
Refute

	Counterexample

	(i1=1, i3=-1, i5=-1, i7=-1)
	-0-> (i1=2, i3=0, i4=-1, i5=-1, i6=-1, i7=-1 )
	-6-> ( )
	
NO

Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
MAYBE


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃
  Temp_Vars:  
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃) → l1(X₁, X₁, X₃, X₃)
  t₁: l1(X₀, X₁, X₂, X₃) → l1(X₀-1, X₁, X₂-1, X₃) :|: 1+X₀ ≤ 0
  t₂: l1(X₀, X₁, X₂, X₃) → l1(X₀-1, X₁, X₂-1, X₃) :|: 1 ≤ X₀
  t₃: l1(X₀, X₁, X₂, X₃) → l2(0, X₁, X₂, X₃) :|: 1+X₁ ≤ X₃ ∧ 0 ≤ X₀ ∧ X₀ ≤ 0
  t₄: l1(X₀, X₁, X₂, X₃) → l2(0, X₁, X₂, X₃) :|: 1+X₃ ≤ X₁ ∧ 0 ≤ X₀ ∧ X₀ ≤ 0
  t₅: l1(X₀, X₁, X₂, X₃) → l2(0, X₁, X₂, X₁) :|: 0 ≤ X₀ ∧ X₀ ≤ 0 ∧ X₃ ≤ X₁ ∧ X₁ ≤ X₃


Preprocessing
  Eliminate variables [X₂] that do not contribute to the problem


  Found invariant X₀ ≤ X₁ for location l1


  Found invariant 0 ≤ X₁ ∧ 0 ≤ X₀+X₁ ∧ X₀ ≤ X₁ ∧ X₀ ≤ 0 ∧ 0 ≤ X₀ for location l2


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₆: l0(X₀, X₁, X₂) → l1(X₁, X₁, X₂)
  t₇: l1(X₀, X₁, X₂) → l1(X₀-1, X₁, X₂) :|: 1+X₀ ≤ 0 ∧ X₀ ≤ X₁
  t₈: l1(X₀, X₁, X₂) → l1(X₀-1, X₁, X₂) :|: 1 ≤ X₀ ∧ X₀ ≤ X₁
  t₉: l1(X₀, X₁, X₂) → l2(0, X₁, X₂) :|: 1+X₁ ≤ X₂ ∧ 0 ≤ X₀ ∧ X₀ ≤ 0 ∧ X₀ ≤ X₁
  t₁₀: l1(X₀, X₁, X₂) → l2(0, X₁, X₂) :|: 1+X₂ ≤ X₁ ∧ 0 ≤ X₀ ∧ X₀ ≤ 0 ∧ X₀ ≤ X₁
  t₁₁: l1(X₀, X₁, X₂) → l2(0, X₁, X₁) :|: 0 ≤ X₀ ∧ X₀ ≤ 0 ∧ X₂ ≤ X₁ ∧ X₁ ≤ X₂ ∧ X₀ ≤ X₁


MPRF for transition t₈: l1(X₀, X₁, X₂) → l1(X₀-1, X₁, X₂) :|: 1 ≤ X₀ ∧ X₀ ≤ X₁ of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l1: [X₀]




  Found invariant 1+X₁ ≤ 0 ∧ 3+X₀+X₁ ≤ 0 ∧ 1+X₀ ≤ X₁ ∧ 2+X₀ ≤ 0 for location l1_v2


  Found invariant 0 ≤ X₁ ∧ 0 ≤ X₀+X₁ ∧ X₀ ≤ X₁ ∧ X₀ ≤ 0 ∧ 0 ≤ X₀ for location l2


  Found invariant 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l1_v1


  Found invariant X₁ ≤ X₀ ∧ X₀ ≤ X₁ for location l1


All Bounds
Timebounds
  Overall timebound:inf {Infinity}
    t₆: 1 {O(1)}
    t₇: inf {Infinity}
    t₈: X₁ {O(n)}
    t₉: 1 {O(1)}
    t₁₀: 1 {O(1)}
    t₁₁: 1 {O(1)}


Costbounds
  Overall costbound: inf {Infinity}
    t₆: 1 {O(1)}
    t₇: inf {Infinity}
    t₈: X₁ {O(n)}
    t₉: 1 {O(1)}
    t₁₀: 1 {O(1)}
    t₁₁: 1 {O(1)}


Sizebounds
    t₆, X₀: X₁ {O(n)}
    t₆, X₁: X₁ {O(n)}
    t₆, X₂: X₂ {O(n)}
    t₇, X₁: X₁ {O(n)}
    t₇, X₂: X₂ {O(n)}
    t₈, X₀: X₁ {O(n)}
    t₈, X₁: X₁ {O(n)}
    t₈, X₂: X₂ {O(n)}
    t₉, X₀: 0 {O(1)}
    t₉, X₁: 2⋅X₁ {O(n)}
    t₉, X₂: 2⋅X₂ {O(n)}
    t₁₀, X₀: 0 {O(1)}
    t₁₀, X₁: 2⋅X₁ {O(n)}
    t₁₀, X₂: 2⋅X₂ {O(n)}
    t₁₁, X₀: 0 {O(1)}
    t₁₁, X₁: 2⋅X₁ {O(n)}
    t₁₁, X₂: 2⋅X₁ {O(n)}

