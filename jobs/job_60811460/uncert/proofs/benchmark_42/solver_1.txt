WORST_CASE(Omega(n^2),O(n^2))

# LoAT Proof:
WORST_CASE(Omega(n^2),?)

WORST_CASE(Omega(n^1),?)
WORST_CASE(Omega(n^2),?)
Initial ITS

Start location: evalNestedMultipleDepstart

Location map:
LoAT_sink -> 0
evalNestedMultipleDepstart -> 1
evalNestedMultipleDepentryin -> 2
evalNestedMultipleDepbb3in -> 3
evalNestedMultipleDepbbin -> 4
evalNestedMultipleDepreturnin -> 5
evalNestedMultipleDepbb2in -> 6
evalNestedMultipleDepbb1in -> 7
evalNestedMultipleDepstop -> 8

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: -2+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=0
   2: (-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=4, i3'=1+i3
   3: (-3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=5, i3'=1+i3
   4: -4+i1 == 0 /\ i1'=6, i3'=1+i3, i6'=1+i4, i7'=0
   5: (-1-i7+i8 >= 0 /\ -6+i1 == 0) /\ i1'=7, i3'=1+i3
   6: (-6+i1 == 0 /\ i7-i8 >= 0) /\ i1'=3, i3'=1+i3, i4'=i6
   7: -7+i1 == 0 /\ i1'=6, i3'=1+i3, i7'=1+i7
   8: -5+i1 == 0 /\ i1'=8, i3'=1+i3

Dependency graph:
0 -> 1
1 -> 2, 1 -> 3
2 -> 4
3 -> 8
4 -> 5, 4 -> 6
5 -> 7
6 -> 2, 6 -> 3
7 -> 5, 7 -> 6

Chained Linear Paths

	Applied Chaining

	First rule:
	-1+i1 == 0 /\ i1'=2, i3'=1+i3
	Second rule:
	-2+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=0
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=0
	
	Applied Deletion

	Removed the following rules: 0, 1
	
	Applied Chaining

	First rule:
	(-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=4, i3'=1+i3
	Second rule:
	-4+i1 == 0 /\ i1'=6, i3'=1+i3, i6'=1+i4, i7'=0
	New rule:
	(0 == 0 /\ -3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=6, i3'=2+i3, i6'=1+i4, i7'=0
	
	Applied Deletion

	Removed the following rules: 2, 4
	
	Applied Chaining

	First rule:
	(-3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=5, i3'=1+i3
	Second rule:
	-5+i1 == 0 /\ i1'=8, i3'=1+i3
	New rule:
	(0 == 0 /\ -3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=8, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 3, 8
	
	Applied Chaining

	First rule:
	(-1-i7+i8 >= 0 /\ -6+i1 == 0) /\ i1'=7, i3'=1+i3
	Second rule:
	-7+i1 == 0 /\ i1'=6, i3'=1+i3, i7'=1+i7
	New rule:
	(0 == 0 /\ -1-i7+i8 >= 0 /\ -6+i1 == 0) /\ i1'=6, i3'=2+i3, i7'=1+i7
	
	Applied Deletion

	Removed the following rules: 5, 7

Start location: evalNestedMultipleDepstart

Location map:
LoAT_sink -> 0
evalNestedMultipleDepstart -> 1
evalNestedMultipleDepentryin -> 2
evalNestedMultipleDepbb3in -> 3
evalNestedMultipleDepbbin -> 4
evalNestedMultipleDepreturnin -> 5
evalNestedMultipleDepbb2in -> 6
evalNestedMultipleDepbb1in -> 7
evalNestedMultipleDepstop -> 8

Rules:
   6: (-6+i1 == 0 /\ i7-i8 >= 0) /\ i1'=3, i3'=1+i3, i4'=i6
   9: (0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=0
  10: (0 == 0 /\ -3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=6, i3'=2+i3, i6'=1+i4, i7'=0
  11: (0 == 0 /\ -3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=8, i3'=2+i3
  12: (0 == 0 /\ -1-i7+i8 >= 0 /\ -6+i1 == 0) /\ i1'=6, i3'=2+i3, i7'=1+i7

Dependency graph:
6 -> 10, 6 -> 11
9 -> 10, 9 -> 11
10 -> 6, 10 -> 12
12 -> 6, 12 -> 12

Preprocessed Transitions

	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=0
	New rule:
	-1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=0
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=6, i3'=2+i3, i6'=1+i4, i7'=0
	New rule:
	(-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=6, i3'=2+i3, i6'=1+i4, i7'=0
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=8, i3'=2+i3
	New rule:
	(-3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=8, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -1-i7+i8 >= 0 /\ -6+i1 == 0) /\ i1'=6, i3'=2+i3, i7'=1+i7
	New rule:
	(-1-i7+i8 >= 0 /\ -6+i1 == 0) /\ i1'=6, i3'=2+i3, i7'=1+i7

Start location: evalNestedMultipleDepstart

Location map:
LoAT_sink -> 0
evalNestedMultipleDepstart -> 1
evalNestedMultipleDepentryin -> 2
evalNestedMultipleDepbb3in -> 3
evalNestedMultipleDepbbin -> 4
evalNestedMultipleDepreturnin -> 5
evalNestedMultipleDepbb2in -> 6
evalNestedMultipleDepbb1in -> 7
evalNestedMultipleDepstop -> 8

Rules:
   6: (-6+i1 == 0 /\ i7-i8 >= 0) /\ i1'=3, i3'=1+i3, i4'=i6
  13: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=0
  14: (-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=6, i3'=2+i3, i6'=1+i4, i7'=0
  15: (-3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=8, i3'=2+i3
  16: (-1-i7+i8 >= 0 /\ -6+i1 == 0) /\ i1'=6, i3'=2+i3, i7'=1+i7

Dependency graph:
6 -> 14, 6 -> 15
13 -> 14, 13 -> 15
14 -> 6, 14 -> 16
16 -> 6, 16 -> 16

Step with 13

	Trace

	13[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 15

	Trace

	13[(-1+i1 == 0)]
	15[(-3+i1 == 0 /\ i4-i5 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	
	Blocked

	{}
	{15[T]}
	
Step with 14

	Trace

	13[(-1+i1 == 0)]
	14[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{15[T]}
	{}
	
Step with 6

	Trace

	13[(-1+i1 == 0)]
	14[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	6[(-6+i1 == 0 /\ i7-i8 >= 0)]
	
	Blocked

	{}
	{15[T]}
	{}
	{}
	
Poly(n^1)

Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -3+i1 == 0 /\ -i8 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=3+i3, i4'=1+i4, i6'=1+i4, i7'=0
		New rule:
		(-3+i1 == 0 /\ -i8 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=3+i3, i4'=1+i4, i6'=1+i4, i7'=0

	Loop Acceleration

	Original rule:
	(-3+i1 == 0 /\ -i8 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=3+i3, i4'=1+i4, i6'=1+i4, i7'=0
	New rule:
	(-3+i1 >= 0 /\ -i8 >= 0 /\ 3-i1 >= 0 /\ -1+it29 >= 0 /\ -1-i4+i5 >= 0 /\ -i4-it29+i5 >= 0) /\ i1'=i1, i3'=i3+3*it29, i4'=i4+it29, i6'=i4+it29, i7'=0

		-3+i1 >= 0 [0]: unchanged
		
		-i8 >= 0 [0]: unchanged
		
		3-i1 >= 0 [0]: unchanged
		
		-1-i4+i5 >= 0 [0]: montonic decrease yields (-1-i4+i5 >= 0 /\ -i4-it29+i5 >= 0)
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, -i8 >= 0 -> -i8 >= 0, 3-i1 >= 0 -> 3-i1 >= 0, -1-i4+i5 >= 0 -> (-1-i4+i5 >= 0 /\ -i4-it29+i5 >= 0)}

	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ -i8 >= 0 /\ 3-i1 >= 0 /\ -1+it29 >= 0 /\ -1-i4+i5 >= 0 /\ -i4-it29+i5 >= 0) /\ i1'=i1, i3'=i3+3*it29, i4'=i4+it29, i6'=i4+it29, i7'=0
	New rule:
	(-3+i1 >= 0 /\ -i8 >= 0 /\ 3-i1 >= 0 /\ -1+it29 >= 0 /\ -1-i4+i5 >= 0 /\ -i4-it29+i5 >= 0) /\ i3'=i3+3*it29, i4'=i4+it29, i6'=i4+it29, i7'=0
	
	Instantiation

	Original rule:
	(-3+i1 >= 0 /\ -i8 >= 0 /\ 3-i1 >= 0 /\ -1+it29 >= 0 /\ -1-i4+i5 >= 0 /\ -i4-it29+i5 >= 0) /\ i3'=i3+3*it29, i4'=i4+it29, i6'=i4+it29, i7'=0
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ -i8 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3-3*i4+3*i5, i4'=i5, i6'=i5, i7'=0

Start location: evalNestedMultipleDepstart

Location map:
LoAT_sink -> 0
evalNestedMultipleDepstart -> 1
evalNestedMultipleDepentryin -> 2
evalNestedMultipleDepbb3in -> 3
evalNestedMultipleDepbbin -> 4
evalNestedMultipleDepreturnin -> 5
evalNestedMultipleDepbb2in -> 6
evalNestedMultipleDepbb1in -> 7
evalNestedMultipleDepstop -> 8

Rules:
   6: (-6+i1 == 0 /\ i7-i8 >= 0) /\ i1'=3, i3'=1+i3, i4'=i6
  13: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=0
  14: (-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=6, i3'=2+i3, i6'=1+i4, i7'=0
  15: (-3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=8, i3'=2+i3
  16: (-1-i7+i8 >= 0 /\ -6+i1 == 0) /\ i1'=6, i3'=2+i3, i7'=1+i7
  17: (0 >= 0 /\ -3+i1 >= 0 /\ -i8 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3-3*i4+3*i5, i4'=i5, i6'=i5, i7'=0

Dependency graph:
6 -> 14, 6 -> 15, 6 -> 17
13 -> 14, 13 -> 15, 13 -> 17
14 -> 6, 14 -> 16
16 -> 6, 16 -> 16
17 -> 14, 17 -> 15

	Trace

	13[(-1+i1 == 0)]
	17[(0 >= 0 /\ -3+i1 >= 0 /\ -i8 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{15[T]}
	{17[T]}
	
Step with 15

	Trace

	13[(-1+i1 == 0)]
	17[(0 >= 0 /\ -3+i1 >= 0 /\ -i8 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0)]
	15[(-3+i1 == 0 /\ i4-i5 >= 0)]
	
	Blocked

	{}
	{15[T]}
	{17[T]}
	{}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	17[(0 >= 0 /\ -3+i1 >= 0 /\ -i8 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{15[T]}
	{15[T], 17[T]}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	
	Blocked

	{}
	{15[T], 17[T]}
	
Step with 14

	Trace

	13[(-1+i1 == 0)]
	14[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{15[T], 17[T]}
	{}
	
Step with 16

	Trace

	13[(-1+i1 == 0)]
	14[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	16[(-1-i7+i8 >= 0 /\ -6+i1 == 0)]
	
	Blocked

	{}
	{15[T], 17[T]}
	{}
	{}
	
Accelerate

	Loop Acceleration

	Original rule:
	(-1-i7+i8 >= 0 /\ -6+i1 == 0) /\ i1'=6, i3'=2+i3, i7'=1+i7
	New rule:
	(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -i7-it66+i8 >= 0 /\ -1+it66 >= 0) /\ i1'=i1, i3'=i3+2*it66, i7'=i7+it66

		-1-i7+i8 >= 0 [0]: montonic decrease yields -i7-it66+i8 >= 0
		
		-6+i1 >= 0 [0]: unchanged
		
		6-i1 >= 0 [0]: unchanged
		
		Replacement map: {-1-i7+i8 >= 0 -> -i7-it66+i8 >= 0, -6+i1 >= 0 -> -6+i1 >= 0, 6-i1 >= 0 -> 6-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -i7-it66+i8 >= 0 /\ -1+it66 >= 0) /\ i1'=i1, i3'=i3+2*it66, i7'=i7+it66
	New rule:
	(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -i7-it66+i8 >= 0 /\ -1+it66 >= 0) /\ i3'=i3+2*it66, i7'=i7+it66
	
	Instantiation

	Original rule:
	(-6+i1 >= 0 /\ 6-i1 >= 0 /\ -i7-it66+i8 >= 0 /\ -1+it66 >= 0) /\ i3'=i3+2*it66, i7'=i7+it66
	New rule:
	(0 >= 0 /\ -1-i7+i8 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0) /\ i3'=i3-2*i7+2*i8, i7'=i8

Start location: evalNestedMultipleDepstart

Location map:
LoAT_sink -> 0
evalNestedMultipleDepstart -> 1
evalNestedMultipleDepentryin -> 2
evalNestedMultipleDepbb3in -> 3
evalNestedMultipleDepbbin -> 4
evalNestedMultipleDepreturnin -> 5
evalNestedMultipleDepbb2in -> 6
evalNestedMultipleDepbb1in -> 7
evalNestedMultipleDepstop -> 8

Rules:
   6: (-6+i1 == 0 /\ i7-i8 >= 0) /\ i1'=3, i3'=1+i3, i4'=i6
  13: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=0
  14: (-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=6, i3'=2+i3, i6'=1+i4, i7'=0
  15: (-3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=8, i3'=2+i3
  16: (-1-i7+i8 >= 0 /\ -6+i1 == 0) /\ i1'=6, i3'=2+i3, i7'=1+i7
  17: (0 >= 0 /\ -3+i1 >= 0 /\ -i8 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3-3*i4+3*i5, i4'=i5, i6'=i5, i7'=0
  18: (0 >= 0 /\ -1-i7+i8 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0) /\ i3'=i3-2*i7+2*i8, i7'=i8

Dependency graph:
6 -> 14, 6 -> 15, 6 -> 17
13 -> 14, 13 -> 15, 13 -> 17
14 -> 6, 14 -> 16, 14 -> 18
16 -> 6, 16 -> 16, 16 -> 18
17 -> 14, 17 -> 15
18 -> 6, 18 -> 16

	Trace

	13[(-1+i1 == 0)]
	14[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	18[(0 >= 0 /\ -1-i7+i8 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0)]
	
	Blocked

	{}
	{15[T], 17[T]}
	{}
	{16[T], 18[T]}
	
Step with 6

	Trace

	13[(-1+i1 == 0)]
	14[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	18[(0 >= 0 /\ -1-i7+i8 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0)]
	6[(-6+i1 == 0 /\ i7-i8 >= 0)]
	
	Blocked

	{}
	{15[T], 17[T]}
	{}
	{16[T], 18[T]}
	{}
	
Poly(n^2)

Accelerate

		Simplified Guard

		Original rule:
		(0 >= 0 /\ 0 == 0 /\ -3+i1 == 0 /\ -1+i8 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=3+i3+2*i8, i4'=1+i4, i6'=1+i4, i7'=i8
		New rule:
		(-3+i1 == 0 /\ -1+i8 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=3+i3+2*i8, i4'=1+i4, i6'=1+i4, i7'=i8

	Loop Acceleration

	Original rule:
	(-3+i1 == 0 /\ -1+i8 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=3+i3+2*i8, i4'=1+i4, i6'=1+i4, i7'=i8
	New rule:
	(-3+i1 >= 0 /\ -i4+i5-it81 >= 0 /\ -1+it81 >= 0 /\ 3-i1 >= 0 /\ -1+i8 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=i1, i3'=i3+2*i8*it81+3*it81, i4'=i4+it81, i6'=i4+it81, i7'=i8

		-3+i1 >= 0 [0]: unchanged
		
		3-i1 >= 0 [0]: unchanged
		
		-1+i8 >= 0 [0]: unchanged
		
		-1-i4+i5 >= 0 [0]: montonic decrease yields (-i4+i5-it81 >= 0 /\ -1-i4+i5 >= 0)
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, 3-i1 >= 0 -> 3-i1 >= 0, -1+i8 >= 0 -> -1+i8 >= 0, -1-i4+i5 >= 0 -> (-i4+i5-it81 >= 0 /\ -1-i4+i5 >= 0)}

	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ -i4+i5-it81 >= 0 /\ -1+it81 >= 0 /\ 3-i1 >= 0 /\ -1+i8 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=i1, i3'=i3+2*i8*it81+3*it81, i4'=i4+it81, i6'=i4+it81, i7'=i8
	New rule:
	(-3+i1 >= 0 /\ -i4+i5-it81 >= 0 /\ -1+it81 >= 0 /\ 3-i1 >= 0 /\ -1+i8 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3+2*i8*it81+3*it81, i4'=i4+it81, i6'=i4+it81, i7'=i8
	
	Instantiation

	Original rule:
	(-3+i1 >= 0 /\ -i4+i5-it81 >= 0 /\ -1+it81 >= 0 /\ 3-i1 >= 0 /\ -1+i8 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3+2*i8*it81+3*it81, i4'=i4+it81, i6'=i4+it81, i7'=i8
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i8 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3-2*(i4-i5)*i8-3*i4+3*i5, i4'=i5, i6'=i5, i7'=i8

Start location: evalNestedMultipleDepstart

Location map:
LoAT_sink -> 0
evalNestedMultipleDepstart -> 1
evalNestedMultipleDepentryin -> 2
evalNestedMultipleDepbb3in -> 3
evalNestedMultipleDepbbin -> 4
evalNestedMultipleDepreturnin -> 5
evalNestedMultipleDepbb2in -> 6
evalNestedMultipleDepbb1in -> 7
evalNestedMultipleDepstop -> 8

Rules:
   6: (-6+i1 == 0 /\ i7-i8 >= 0) /\ i1'=3, i3'=1+i3, i4'=i6
  13: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=0
  14: (-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=6, i3'=2+i3, i6'=1+i4, i7'=0
  15: (-3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=8, i3'=2+i3
  16: (-1-i7+i8 >= 0 /\ -6+i1 == 0) /\ i1'=6, i3'=2+i3, i7'=1+i7
  17: (0 >= 0 /\ -3+i1 >= 0 /\ -i8 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3-3*i4+3*i5, i4'=i5, i6'=i5, i7'=0
  18: (0 >= 0 /\ -1-i7+i8 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0) /\ i3'=i3-2*i7+2*i8, i7'=i8
  19: (0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i8 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3-2*(i4-i5)*i8-3*i4+3*i5, i4'=i5, i6'=i5, i7'=i8

Dependency graph:
6 -> 14, 6 -> 15, 6 -> 17, 6 -> 19
13 -> 14, 13 -> 15, 13 -> 17, 13 -> 19
14 -> 6, 14 -> 16, 14 -> 18
16 -> 6, 16 -> 16, 16 -> 18
17 -> 14, 17 -> 15, 17 -> 19
18 -> 6, 18 -> 16
19 -> 14, 19 -> 15, 19 -> 17

	Trace

	13[(-1+i1 == 0)]
	19[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i8 >= 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{15[T], 17[T]}
	{19[T]}
	
Step with 15

	Trace

	13[(-1+i1 == 0)]
	19[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i8 >= 0 /\ -1-i4+i5 >= 0)]
	15[(-3+i1 == 0 /\ i4-i5 >= 0)]
	
	Blocked

	{}
	{15[T], 17[T]}
	{14[T], 17[T], 19[T]}
	{}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	19[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i8 >= 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{15[T], 17[T]}
	{14[T], 15[T], 17[T], 19[T]}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	
	Blocked

	{}
	{15[T], 17[T], 19[T]}
	
Step with 14

	Trace

	13[(-1+i1 == 0)]
	14[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{15[T], 17[T], 19[T]}
	{}
	
Step with 6

	Trace

	13[(-1+i1 == 0)]
	14[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	6[(-6+i1 == 0 /\ i7-i8 >= 0)]
	
	Blocked

	{}
	{15[T], 17[T], 19[T]}
	{}
	{}
	
Covered

	Trace

	13[(-1+i1 == 0)]
	14[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{15[T], 17[T], 19[T]}
	{6[T]}
	
Step with 18

	Trace

	13[(-1+i1 == 0)]
	14[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	18[(0 >= 0 /\ -1-i7+i8 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0)]
	
	Blocked

	{}
	{15[T], 17[T], 19[T]}
	{6[T]}
	{18[T]}
	
Step with 6

	Trace

	13[(-1+i1 == 0)]
	14[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	18[(0 >= 0 /\ -1-i7+i8 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0)]
	6[(-6+i1 == 0 /\ i7-i8 >= 0)]
	
	Blocked

	{}
	{15[T], 17[T], 19[T]}
	{6[T]}
	{16[T], 18[T]}
	{}
	
Covered

	Trace

	13[(-1+i1 == 0)]
	14[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	18[(0 >= 0 /\ -1-i7+i8 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0)]
	
	Blocked

	{}
	{15[T], 17[T], 19[T]}
	{6[T]}
	{6[T], 16[T], 18[T]}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	14[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{15[T], 17[T], 19[T]}
	{6[T], 18[T]}
	
Step with 16

	Trace

	13[(-1+i1 == 0)]
	14[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	16[(-1-i7+i8 >= 0 /\ -6+i1 == 0)]
	
	Blocked

	{}
	{15[T], 17[T], 19[T]}
	{6[T], 18[T]}
	{}
	
Covered

	Trace

	13[(-1+i1 == 0)]
	14[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{15[T], 17[T], 19[T]}
	{6[T], 16[T], 18[T]}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	
	Blocked

	{}
	{14[T], 15[T], 17[T], 19[T]}
	
Backtrack

	Trace

	Blocked

	{13[T]}
	
Accept

Poly(n^2)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^2))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄
  Temp_Vars:  
  Locations:  l0, l1, l2, l3, l4, l5, l6, l7
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃, X₄) → l6(X₀, X₁, X₂, X₃, X₄)
  t₅: l1(X₀, X₁, X₂, X₃, X₄) → l2(X₀, X₁, X₂, X₃, X₄) :|: 1+X₃ ≤ X₄
  t₆: l1(X₀, X₁, X₂, X₃, X₄) → l3(X₂, X₁, X₂, X₃, X₄) :|: X₄ ≤ X₃
  t₇: l2(X₀, X₁, X₂, X₃, X₄) → l1(X₀, X₁, X₂, 1+X₃, X₄)
  t₂: l3(X₀, X₁, X₂, X₃, X₄) → l4(X₀, X₁, X₂, X₃, X₄) :|: 1+X₀ ≤ X₁
  t₃: l3(X₀, X₁, X₂, X₃, X₄) → l5(X₀, X₁, X₂, X₃, X₄) :|: X₁ ≤ X₀
  t₄: l4(X₀, X₁, X₂, X₃, X₄) → l1(X₀, X₁, 1+X₀, 0, X₄)
  t₈: l5(X₀, X₁, X₂, X₃, X₄) → l7(X₀, X₁, X₂, X₃, X₄)
  t₁: l6(X₀, X₁, X₂, X₃, X₄) → l3(0, X₁, X₂, X₃, X₄)


Preprocessing
  Found invariant 1 ≤ X₄ ∧ 1 ≤ X₃+X₄ ∧ 1+X₃ ≤ X₄ ∧ 2 ≤ X₂+X₄ ∧ 2 ≤ X₁+X₄ ∧ 1 ≤ X₀+X₄ ∧ 0 ≤ X₃ ∧ 1 ≤ X₂+X₃ ∧ 1 ≤ X₁+X₃ ∧ 0 ≤ X₀+X₃ ∧ X₂ ≤ X₁ ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l2


  Found invariant X₁ ≤ X₀ ∧ 0 ≤ X₀ for location l7


  Found invariant X₁ ≤ X₀ ∧ 0 ≤ X₀ for location l5


  Found invariant 0 ≤ X₃ ∧ 1 ≤ X₂+X₃ ∧ 1 ≤ X₁+X₃ ∧ 0 ≤ X₀+X₃ ∧ X₂ ≤ X₁ ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l1


  Found invariant 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l4


  Found invariant 0 ≤ X₀ for location l3


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄
  Temp_Vars:  
  Locations:  l0, l1, l2, l3, l4, l5, l6, l7
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃, X₄) → l6(X₀, X₁, X₂, X₃, X₄)
  t₅: l1(X₀, X₁, X₂, X₃, X₄) → l2(X₀, X₁, X₂, X₃, X₄) :|: 1+X₃ ≤ X₄ ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₁ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 1 ≤ X₂ ∧ 1 ≤ X₂+X₃ ∧ 2 ≤ X₁+X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₃ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₃
  t₆: l1(X₀, X₁, X₂, X₃, X₄) → l3(X₂, X₁, X₂, X₃, X₄) :|: X₄ ≤ X₃ ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₁ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 1 ≤ X₂ ∧ 1 ≤ X₂+X₃ ∧ 2 ≤ X₁+X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₃ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₃
  t₇: l2(X₀, X₁, X₂, X₃, X₄) → l1(X₀, X₁, X₂, 1+X₃, X₄) :|: X₂ ≤ 1+X₀ ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₀+X₂ ∧ 1 ≤ X₀+X₄ ∧ 1+X₀ ≤ X₁ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 1 ≤ X₂ ∧ 1 ≤ X₂+X₃ ∧ 1 ≤ X₃+X₄ ∧ 1+X₃ ≤ X₄ ∧ 1 ≤ X₄ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₁+X₄ ∧ 2 ≤ X₂+X₄ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₃ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₃
  t₂: l3(X₀, X₁, X₂, X₃, X₄) → l4(X₀, X₁, X₂, X₃, X₄) :|: 1+X₀ ≤ X₁ ∧ 0 ≤ X₀
  t₃: l3(X₀, X₁, X₂, X₃, X₄) → l5(X₀, X₁, X₂, X₃, X₄) :|: X₁ ≤ X₀ ∧ 0 ≤ X₀
  t₄: l4(X₀, X₁, X₂, X₃, X₄) → l1(X₀, X₁, 1+X₀, 0, X₄) :|: 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 0 ≤ X₀
  t₈: l5(X₀, X₁, X₂, X₃, X₄) → l7(X₀, X₁, X₂, X₃, X₄) :|: 0 ≤ X₀ ∧ X₁ ≤ X₀
  t₁: l6(X₀, X₁, X₂, X₃, X₄) → l3(0, X₁, X₂, X₃, X₄)


MPRF for transition t₂: l3(X₀, X₁, X₂, X₃, X₄) → l4(X₀, X₁, X₂, X₃, X₄) :|: 1+X₀ ≤ X₁ ∧ 0 ≤ X₀ of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l1: [X₁-X₂]
    • l2: [X₁-X₂]
    • l3: [X₁-X₀]
    • l4: [X₁-1-X₀]




MPRF for transition t₄: l4(X₀, X₁, X₂, X₃, X₄) → l1(X₀, X₁, 1+X₀, 0, X₄) :|: 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 0 ≤ X₀ of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l1: [X₁-1-X₀]
    • l2: [X₁-1-X₀]
    • l3: [X₁-X₀]
    • l4: [X₁-X₀]




MPRF for transition t₆: l1(X₀, X₁, X₂, X₃, X₄) → l3(X₂, X₁, X₂, X₃, X₄) :|: X₄ ≤ X₃ ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₁ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 1 ≤ X₂ ∧ 1 ≤ X₂+X₃ ∧ 2 ≤ X₁+X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₃ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₃ of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l1: [X₁-X₀]
    • l2: [X₁-X₀]
    • l3: [X₁-X₀]
    • l4: [X₁-X₀]




MPRF for transition t₅: l1(X₀, X₁, X₂, X₃, X₄) → l2(X₀, X₁, X₂, X₃, X₄) :|: 1+X₃ ≤ X₄ ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₁ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 1 ≤ X₂ ∧ 1 ≤ X₂+X₃ ∧ 2 ≤ X₁+X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₃ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₃ of depth 1:
  new bound:
    X₁⋅X₄+X₄ {O(n^2)}

  MPRF:
    • l1: [X₄-X₃]
    • l2: [X₄-1-X₃]
    • l3: [X₄]
    • l4: [X₄]




MPRF for transition t₇: l2(X₀, X₁, X₂, X₃, X₄) → l1(X₀, X₁, X₂, 1+X₃, X₄) :|: X₂ ≤ 1+X₀ ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₀+X₂ ∧ 1 ≤ X₀+X₄ ∧ 1+X₀ ≤ X₁ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 1 ≤ X₂ ∧ 1 ≤ X₂+X₃ ∧ 1 ≤ X₃+X₄ ∧ 1+X₃ ≤ X₄ ∧ 1 ≤ X₄ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₁+X₄ ∧ 2 ≤ X₂+X₄ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₃ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₃ of depth 1:
  new bound:
    X₁⋅X₄+X₄ {O(n^2)}

  MPRF:
    • l1: [X₄-X₃]
    • l2: [X₄-X₃]
    • l3: [X₄]
    • l4: [X₄]




  Found invariant 1 ≤ X₄ ∧ 2 ≤ X₃+X₄ ∧ X₃ ≤ X₄ ∧ 2 ≤ X₂+X₄ ∧ 2 ≤ X₁+X₄ ∧ 1 ≤ X₀+X₄ ∧ 1 ≤ X₃ ∧ 2 ≤ X₂+X₃ ∧ 2 ≤ X₁+X₃ ∧ 1 ≤ X₀+X₃ ∧ X₂ ≤ X₁ ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l1_v1


  Found invariant 1 ≤ X₄ ∧ 1 ≤ X₃+X₄ ∧ 1+X₃ ≤ X₄ ∧ 2 ≤ X₂+X₄ ∧ 2 ≤ X₁+X₄ ∧ 1 ≤ X₀+X₄ ∧ X₃ ≤ 0 ∧ 1+X₃ ≤ X₂ ∧ 1+X₃ ≤ X₁ ∧ X₃ ≤ X₀ ∧ 0 ≤ X₃ ∧ 1 ≤ X₂+X₃ ∧ 1 ≤ X₁+X₃ ∧ 0 ≤ X₀+X₃ ∧ X₂ ≤ X₁ ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l2_v1


  Found invariant 2 ≤ X₄ ∧ 3 ≤ X₃+X₄ ∧ 1+X₃ ≤ X₄ ∧ 3 ≤ X₂+X₄ ∧ 3 ≤ X₁+X₄ ∧ 2 ≤ X₀+X₄ ∧ 1 ≤ X₃ ∧ 2 ≤ X₂+X₃ ∧ 2 ≤ X₁+X₃ ∧ 1 ≤ X₀+X₃ ∧ X₂ ≤ X₁ ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l2_v2


  Found invariant X₁ ≤ X₀ ∧ 0 ≤ X₀ for location l7


  Found invariant X₁ ≤ X₀ ∧ 0 ≤ X₀ for location l5


  Found invariant X₃ ≤ 0 ∧ 1+X₃ ≤ X₂ ∧ 1+X₃ ≤ X₁ ∧ X₃ ≤ X₀ ∧ 0 ≤ X₃ ∧ 1 ≤ X₂+X₃ ∧ 1 ≤ X₁+X₃ ∧ 0 ≤ X₀+X₃ ∧ X₂ ≤ X₁ ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l1


  Found invariant 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l4


  Found invariant 0 ≤ X₀ for location l3


All Bounds
Timebounds
  Overall timebound:2⋅X₁⋅X₄+2⋅X₄+3⋅X₁+4 {O(n^2)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: X₁ {O(n)}
    t₃: 1 {O(1)}
    t₄: X₁ {O(n)}
    t₅: X₁⋅X₄+X₄ {O(n^2)}
    t₆: X₁ {O(n)}
    t₇: X₁⋅X₄+X₄ {O(n^2)}
    t₈: 1 {O(1)}


Costbounds
  Overall costbound: 2⋅X₁⋅X₄+2⋅X₄+3⋅X₁+4 {O(n^2)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: X₁ {O(n)}
    t₃: 1 {O(1)}
    t₄: X₁ {O(n)}
    t₅: X₁⋅X₄+X₄ {O(n^2)}
    t₆: X₁ {O(n)}
    t₇: X₁⋅X₄+X₄ {O(n^2)}
    t₈: 1 {O(1)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₀, X₂: X₂ {O(n)}
    t₀, X₃: X₃ {O(n)}
    t₀, X₄: X₄ {O(n)}
    t₁, X₀: 0 {O(1)}
    t₁, X₁: X₁ {O(n)}
    t₁, X₂: X₂ {O(n)}
    t₁, X₃: X₃ {O(n)}
    t₁, X₄: X₄ {O(n)}
    t₂, X₀: X₁ {O(n)}
    t₂, X₁: X₁ {O(n)}
    t₂, X₂: 2⋅X₁+X₂+2 {O(n)}
    t₂, X₃: X₁⋅X₄+X₃+X₄ {O(n^2)}
    t₂, X₄: X₄ {O(n)}
    t₃, X₀: X₁ {O(n)}
    t₃, X₁: 2⋅X₁ {O(n)}
    t₃, X₂: 2⋅X₁+X₂+2 {O(n)}
    t₃, X₃: X₁⋅X₄+X₃+X₄ {O(n^2)}
    t₃, X₄: 2⋅X₄ {O(n)}
    t₄, X₀: X₁ {O(n)}
    t₄, X₁: X₁ {O(n)}
    t₄, X₂: X₁+1 {O(n)}
    t₄, X₃: 0 {O(1)}
    t₄, X₄: X₄ {O(n)}
    t₅, X₀: X₁ {O(n)}
    t₅, X₁: X₁ {O(n)}
    t₅, X₂: X₁+1 {O(n)}
    t₅, X₃: X₁⋅X₄+X₄ {O(n^2)}
    t₅, X₄: X₄ {O(n)}
    t₆, X₀: X₁ {O(n)}
    t₆, X₁: X₁ {O(n)}
    t₆, X₂: 2⋅X₁+2 {O(n)}
    t₆, X₃: X₁⋅X₄+X₄ {O(n^2)}
    t₆, X₄: X₄ {O(n)}
    t₇, X₀: X₁ {O(n)}
    t₇, X₁: X₁ {O(n)}
    t₇, X₂: X₁+1 {O(n)}
    t₇, X₃: X₁⋅X₄+X₄ {O(n^2)}
    t₇, X₄: X₄ {O(n)}
    t₈, X₀: X₁ {O(n)}
    t₈, X₁: 2⋅X₁ {O(n)}
    t₈, X₂: 2⋅X₁+X₂+2 {O(n)}
    t₈, X₃: X₁⋅X₄+X₃+X₄ {O(n^2)}
    t₈, X₄: 2⋅X₄ {O(n)}

