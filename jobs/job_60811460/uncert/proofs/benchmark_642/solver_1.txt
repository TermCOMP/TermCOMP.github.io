WORST_CASE(Omega(n^1),?)

# LoAT Proof:
WORST_CASE(Omega(n^1),?)

WORST_CASE(Omega(n^1),?)
Initial ITS

Start location: eval_aaron3_start

Location map:
LoAT_sink -> 0
eval_aaron3_start -> 1
eval_aaron3_bb0_in -> 2
eval_aaron3_0 -> 3
eval_aaron3_1 -> 4
eval_aaron3_2 -> 5
eval_aaron3_3 -> 6
eval_aaron3_4 -> 7
eval_aaron3_5 -> 8
eval_aaron3_6 -> 9
eval_aaron3_7 -> 10
eval_aaron3_8 -> 11
eval_aaron3_bb1_in -> 12
eval_aaron3_bb2_in -> 13
eval_aaron3_bb5_in -> 14
eval_aaron3_9 -> 15
eval_aaron3_10 -> 16
eval_aaron3_bb3_in -> 17
eval_aaron3_bb4_in -> 18
eval_aaron3_12 -> 19
eval_aaron3_13 -> 20
eval_aaron3_stop -> 21

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: -2+i1 == 0 /\ i1'=3, i3'=1+i3
   2: -3+i1 == 0 /\ i1'=4, i3'=1+i3
   3: -4+i1 == 0 /\ i1'=5, i3'=1+i3
   4: -5+i1 == 0 /\ i1'=6, i3'=1+i3
   5: -6+i1 == 0 /\ i1'=7, i3'=1+i3
   6: -7+i1 == 0 /\ i1'=8, i3'=1+i3
   7: -8+i1 == 0 /\ i1'=9, i3'=1+i3
   8: -9+i1 == 0 /\ i1'=10, i3'=1+i3
   9: -10+i1 == 0 /\ i1'=11, i3'=1+i3
  10: -11+i1 == 0 /\ i1'=12, i3'=1+i3, i4'=i11, i5'=i12, i6'=i13
  11: (i4-i5 >= 0 /\ -12+i1 == 0) /\ i1'=13, i3'=1+i3
  12: (i4-i5 < 0 /\ -12+i1 == 0) /\ i1'=14, i3'=1+i3
  13: -13+i1 == 0 /\ i1'=15, i3'=1+i3
  14: -15+i1 == 0 /\ i1'=16, i3'=1+i3, i7'=it2
  15: (-16+i1 == 0 /\ i7 > 0) /\ i1'=17, i3'=1+i3
  16: (-16+i1 == 0 /\ i7 <= 0) /\ i1'=18, i3'=1+i3
  17: -17+i1 == 0 /\ i1'=19, i3'=1+i3, i8'=-1+i6
  18: -19+i1 == 0 /\ i1'=20, i3'=1+i3, i9'=it4
  19: (-20+i1 == 0 /\ -i4-i8+i9 > 0) /\ i1'=14, i3'=1+i3
  20: (-20+i1 == 0 /\ -i4-i8+i9 <= 0) /\ i1'=12, i3'=1+i3, i4'=i9, i6'=i8
  21: -18+i1 == 0 /\ i1'=12, i3'=1+i3, i5'=1+i5
  22: -14+i1 == 0 /\ i1'=21, i3'=1+i3

Dependency graph:
0 -> 1
1 -> 2
2 -> 3
3 -> 4
4 -> 5
5 -> 6
6 -> 7
7 -> 8
8 -> 9
9 -> 10
10 -> 11, 10 -> 12
11 -> 13
12 -> 22
13 -> 14
14 -> 15, 14 -> 16
15 -> 17
16 -> 21
17 -> 18
18 -> 19, 18 -> 20
19 -> 22
20 -> 11, 20 -> 12
21 -> 11, 21 -> 12

Chained Linear Paths

	Applied Chaining

	First rule:
	-1+i1 == 0 /\ i1'=2, i3'=1+i3
	Second rule:
	-2+i1 == 0 /\ i1'=3, i3'=1+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 0, 1
	
	Applied Chaining

	First rule:
	-3+i1 == 0 /\ i1'=4, i3'=1+i3
	Second rule:
	-4+i1 == 0 /\ i1'=5, i3'=1+i3
	New rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 2, 3
	
	Applied Chaining

	First rule:
	-5+i1 == 0 /\ i1'=6, i3'=1+i3
	Second rule:
	-6+i1 == 0 /\ i1'=7, i3'=1+i3
	New rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=7, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 4, 5
	
	Applied Chaining

	First rule:
	-7+i1 == 0 /\ i1'=8, i3'=1+i3
	Second rule:
	-8+i1 == 0 /\ i1'=9, i3'=1+i3
	New rule:
	(0 == 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 6, 7
	
	Applied Chaining

	First rule:
	-9+i1 == 0 /\ i1'=10, i3'=1+i3
	Second rule:
	-10+i1 == 0 /\ i1'=11, i3'=1+i3
	New rule:
	(0 == 0 /\ -9+i1 == 0) /\ i1'=11, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 8, 9
	
	Applied Chaining

	First rule:
	(i4-i5 >= 0 /\ -12+i1 == 0) /\ i1'=13, i3'=1+i3
	Second rule:
	-13+i1 == 0 /\ i1'=15, i3'=1+i3
	New rule:
	(0 == 0 /\ i4-i5 >= 0 /\ -12+i1 == 0) /\ i1'=15, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 11, 13
	
	Applied Chaining

	First rule:
	(i4-i5 < 0 /\ -12+i1 == 0) /\ i1'=14, i3'=1+i3
	Second rule:
	-14+i1 == 0 /\ i1'=21, i3'=1+i3
	New rule:
	(0 == 0 /\ i4-i5 < 0 /\ -12+i1 == 0) /\ i1'=21, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 12
	
	Applied Chaining

	First rule:
	(-16+i1 == 0 /\ i7 > 0) /\ i1'=17, i3'=1+i3
	Second rule:
	-17+i1 == 0 /\ i1'=19, i3'=1+i3, i8'=-1+i6
	New rule:
	(0 == 0 /\ -16+i1 == 0 /\ i7 > 0) /\ i1'=19, i3'=2+i3, i8'=-1+i6
	
	Applied Deletion

	Removed the following rules: 15, 17
	
	Applied Chaining

	First rule:
	(-16+i1 == 0 /\ i7 <= 0) /\ i1'=18, i3'=1+i3
	Second rule:
	-18+i1 == 0 /\ i1'=12, i3'=1+i3, i5'=1+i5
	New rule:
	(0 == 0 /\ -16+i1 == 0 /\ i7 <= 0) /\ i1'=12, i3'=2+i3, i5'=1+i5
	
	Applied Deletion

	Removed the following rules: 16, 21
	
	Applied Chaining

	First rule:
	(-20+i1 == 0 /\ -i4-i8+i9 > 0) /\ i1'=14, i3'=1+i3
	Second rule:
	-14+i1 == 0 /\ i1'=21, i3'=1+i3
	New rule:
	(0 == 0 /\ -20+i1 == 0 /\ -i4-i8+i9 > 0) /\ i1'=21, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 19, 22
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	Second rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	
	Applied Deletion

	Removed the following rules: 23, 24
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=7, i3'=2+i3
	Second rule:
	(0 == 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
	New rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=9, i3'=4+i3
	
	Applied Deletion

	Removed the following rules: 25, 26
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -9+i1 == 0) /\ i1'=11, i3'=2+i3
	Second rule:
	-11+i1 == 0 /\ i1'=12, i3'=1+i3, i4'=i11, i5'=i12, i6'=i13
	New rule:
	(0 == 0 /\ -9+i1 == 0) /\ i1'=12, i3'=3+i3, i4'=i11, i5'=i12, i6'=i13
	
	Applied Deletion

	Removed the following rules: 10, 27
	
	Applied Chaining

	First rule:
	(0 == 0 /\ i4-i5 >= 0 /\ -12+i1 == 0) /\ i1'=15, i3'=2+i3
	Second rule:
	-15+i1 == 0 /\ i1'=16, i3'=1+i3, i7'=it2
	New rule:
	(0 == 0 /\ i4-i5 >= 0 /\ -12+i1 == 0) /\ i1'=16, i3'=3+i3, i7'=it2
	
	Applied Deletion

	Removed the following rules: 14, 28
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -16+i1 == 0 /\ i7 > 0) /\ i1'=19, i3'=2+i3, i8'=-1+i6
	Second rule:
	-19+i1 == 0 /\ i1'=20, i3'=1+i3, i9'=it4
	New rule:
	(0 == 0 /\ -16+i1 == 0 /\ i7 > 0) /\ i1'=20, i3'=3+i3, i8'=-1+i6, i9'=it4
	
	Applied Deletion

	Removed the following rules: 18, 30
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	Second rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=9, i3'=4+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=9, i3'=8+i3
	
	Applied Deletion

	Removed the following rules: 33, 34
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=9, i3'=8+i3
	Second rule:
	(0 == 0 /\ -9+i1 == 0) /\ i1'=12, i3'=3+i3, i4'=i11, i5'=i12, i6'=i13
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=12, i3'=11+i3, i4'=i11, i5'=i12, i6'=i13
	
	Applied Deletion

	Removed the following rules: 35, 38

Start location: eval_aaron3_start

Location map:
LoAT_sink -> 0
eval_aaron3_start -> 1
eval_aaron3_bb0_in -> 2
eval_aaron3_0 -> 3
eval_aaron3_1 -> 4
eval_aaron3_2 -> 5
eval_aaron3_3 -> 6
eval_aaron3_4 -> 7
eval_aaron3_5 -> 8
eval_aaron3_6 -> 9
eval_aaron3_7 -> 10
eval_aaron3_8 -> 11
eval_aaron3_bb1_in -> 12
eval_aaron3_bb2_in -> 13
eval_aaron3_bb5_in -> 14
eval_aaron3_9 -> 15
eval_aaron3_10 -> 16
eval_aaron3_bb3_in -> 17
eval_aaron3_bb4_in -> 18
eval_aaron3_12 -> 19
eval_aaron3_13 -> 20
eval_aaron3_stop -> 21

Rules:
  20: (-20+i1 == 0 /\ -i4-i8+i9 <= 0) /\ i1'=12, i3'=1+i3, i4'=i9, i6'=i8
  29: (0 == 0 /\ i4-i5 < 0 /\ -12+i1 == 0) /\ i1'=21, i3'=2+i3
  31: (0 == 0 /\ -16+i1 == 0 /\ i7 <= 0) /\ i1'=12, i3'=2+i3, i5'=1+i5
  32: (0 == 0 /\ -20+i1 == 0 /\ -i4-i8+i9 > 0) /\ i1'=21, i3'=2+i3
  36: (0 == 0 /\ i4-i5 >= 0 /\ -12+i1 == 0) /\ i1'=16, i3'=3+i3, i7'=it2
  37: (0 == 0 /\ -16+i1 == 0 /\ i7 > 0) /\ i1'=20, i3'=3+i3, i8'=-1+i6, i9'=it4
  39: (0 == 0 /\ -1+i1 == 0) /\ i1'=12, i3'=11+i3, i4'=i11, i5'=i12, i6'=i13

Dependency graph:
20 -> 29, 20 -> 36
31 -> 29, 31 -> 36
36 -> 31, 36 -> 37
37 -> 20, 37 -> 32
39 -> 29, 39 -> 36

Preprocessed Transitions

	Simplified Guard

	Original rule:
	(0 == 0 /\ i4-i5 < 0 /\ -12+i1 == 0) /\ i1'=21, i3'=2+i3
	New rule:
	(i4-i5 < 0 /\ -12+i1 == 0) /\ i1'=21, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -16+i1 == 0 /\ i7 <= 0) /\ i1'=12, i3'=2+i3, i5'=1+i5
	New rule:
	(-16+i1 == 0 /\ i7 <= 0) /\ i1'=12, i3'=2+i3, i5'=1+i5
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -20+i1 == 0 /\ -i4-i8+i9 > 0) /\ i1'=21, i3'=2+i3
	New rule:
	(-20+i1 == 0 /\ -i4-i8+i9 > 0) /\ i1'=21, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ i4-i5 >= 0 /\ -12+i1 == 0) /\ i1'=16, i3'=3+i3, i7'=it2
	New rule:
	(i4-i5 >= 0 /\ -12+i1 == 0) /\ i1'=16, i3'=3+i3, i7'=it2
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -16+i1 == 0 /\ i7 > 0) /\ i1'=20, i3'=3+i3, i8'=-1+i6, i9'=it4
	New rule:
	(-16+i1 == 0 /\ i7 > 0) /\ i1'=20, i3'=3+i3, i8'=-1+i6, i9'=it4
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=12, i3'=11+i3, i4'=i11, i5'=i12, i6'=i13
	New rule:
	-1+i1 == 0 /\ i1'=12, i3'=11+i3, i4'=i11, i5'=i12, i6'=i13

Start location: eval_aaron3_start

Location map:
LoAT_sink -> 0
eval_aaron3_start -> 1
eval_aaron3_bb0_in -> 2
eval_aaron3_0 -> 3
eval_aaron3_1 -> 4
eval_aaron3_2 -> 5
eval_aaron3_3 -> 6
eval_aaron3_4 -> 7
eval_aaron3_5 -> 8
eval_aaron3_6 -> 9
eval_aaron3_7 -> 10
eval_aaron3_8 -> 11
eval_aaron3_bb1_in -> 12
eval_aaron3_bb2_in -> 13
eval_aaron3_bb5_in -> 14
eval_aaron3_9 -> 15
eval_aaron3_10 -> 16
eval_aaron3_bb3_in -> 17
eval_aaron3_bb4_in -> 18
eval_aaron3_12 -> 19
eval_aaron3_13 -> 20
eval_aaron3_stop -> 21

Rules:
  20: (-20+i1 == 0 /\ -i4-i8+i9 <= 0) /\ i1'=12, i3'=1+i3, i4'=i9, i6'=i8
  40: (i4-i5 < 0 /\ -12+i1 == 0) /\ i1'=21, i3'=2+i3
  41: (-16+i1 == 0 /\ i7 <= 0) /\ i1'=12, i3'=2+i3, i5'=1+i5
  42: (-20+i1 == 0 /\ -i4-i8+i9 > 0) /\ i1'=21, i3'=2+i3
  43: (i4-i5 >= 0 /\ -12+i1 == 0) /\ i1'=16, i3'=3+i3, i7'=it2
  44: (-16+i1 == 0 /\ i7 > 0) /\ i1'=20, i3'=3+i3, i8'=-1+i6, i9'=it4
  45: -1+i1 == 0 /\ i1'=12, i3'=11+i3, i4'=i11, i5'=i12, i6'=i13

Dependency graph:
20 -> 40, 20 -> 43
41 -> 40, 41 -> 43
43 -> 41, 43 -> 44
44 -> 20, 44 -> 42
45 -> 40, 45 -> 43

Step with 45

	Trace

	45[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 43

	Trace

	45[(-1+i1 == 0)]
	43[(i4-i5 >= 0 /\ -12+i1 == 0)]
	
	Blocked

	{}
	{}
	{}
	
Step with 44

	Trace

	45[(-1+i1 == 0)]
	43[(i4-i5 >= 0 /\ -12+i1 == 0)]
	44[(-16+i1 == 0 /\ i7 > 0)]
	
	Blocked

	{}
	{}
	{}
	{}
	
Step with 20

	Trace

	45[(-1+i1 == 0)]
	43[(i4-i5 >= 0 /\ -12+i1 == 0)]
	44[(-16+i1 == 0 /\ i7 > 0)]
	20[(-20+i1 == 0 /\ -i4-i8+i9 <= 0)]
	
	Blocked

	{}
	{}
	{}
	{}
	{}
	
Poly(n^1)

Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ i4-i5 >= 0 /\ 1-i6-i4+it4 <= 0 /\ -12+i1 == 0 /\ it2 > 0) /\ i1'=12, i3'=7+i3, i4'=it4, i6'=-1+i6, i7'=it2, i8'=-1+i6, i9'=it4
		New rule:
		(i4-i5 >= 0 /\ 1-i6-i4+it4 <= 0 /\ -12+i1 == 0 /\ it2 > 0) /\ i1'=12, i3'=7+i3, i4'=it4, i6'=-1+i6, i7'=it2, i8'=-1+i6, i9'=it4

	Loop Acceleration

	Original rule:
	(i4-i5 >= 0 /\ 1-i6-i4+it4 <= 0 /\ -12+i1 == 0 /\ it2 > 0) /\ i1'=12, i3'=7+i3, i4'=it4, i6'=-1+i6, i7'=it2, i8'=-1+i6, i9'=it4
	New rule:
	(-1+i6+i4-it4 >= 0 /\ -1+it51 >= 0 /\ 12-i1 >= 0 /\ i6-it51 >= 0 /\ i4-i5 >= 0 /\ it4-i5 >= 0 /\ -12+i1 >= 0 /\ it2 > 0) /\ i1'=i1, i3'=i3+7*it51, i4'=it4, i6'=i6-it51, i7'=it2, i8'=i6-it51, i9'=it4

		-1+i6+i4-it4 >= 0 [0]: eventual decrease yields (-1+i6+i4-it4 >= 0 /\ i6-it51 >= 0)
		
		12-i1 >= 0 [0]: unchanged
		
		i4-i5 >= 0 [0]: eventual decrease yields (i4-i5 >= 0 /\ it4-i5 >= 0)
		
		i4-i5 >= 0 [1]: eventual increase yields (i4-it4 <= 0 /\ i4-i5 >= 0)
		
		-12+i1 >= 0 [0]: unchanged
		
		it2 > 0 [0]: unchanged
		
		Replacement map: {-1+i6+i4-it4 >= 0 -> (-1+i6+i4-it4 >= 0 /\ i6-it51 >= 0), 12-i1 >= 0 -> 12-i1 >= 0, i4-i5 >= 0 -> (i4-i5 >= 0 /\ it4-i5 >= 0), -12+i1 >= 0 -> -12+i1 >= 0, it2 > 0 -> it2 > 0}

	Removed Trivial Updates

	Original rule:
	(-1+i6+i4-it4 >= 0 /\ -1+it51 >= 0 /\ 12-i1 >= 0 /\ i6-it51 >= 0 /\ i4-i5 >= 0 /\ it4-i5 >= 0 /\ -12+i1 >= 0 /\ it2 > 0) /\ i1'=i1, i3'=i3+7*it51, i4'=it4, i6'=i6-it51, i7'=it2, i8'=i6-it51, i9'=it4
	New rule:
	(-1+i6+i4-it4 >= 0 /\ -1+it51 >= 0 /\ 12-i1 >= 0 /\ i6-it51 >= 0 /\ i4-i5 >= 0 /\ it4-i5 >= 0 /\ -12+i1 >= 0 /\ it2 > 0) /\ i3'=i3+7*it51, i4'=it4, i6'=i6-it51, i7'=it2, i8'=i6-it51, i9'=it4
	
	Instantiation

	Original rule:
	(-1+i6+i4-it4 >= 0 /\ -1+it51 >= 0 /\ 12-i1 >= 0 /\ i6-it51 >= 0 /\ i4-i5 >= 0 /\ it4-i5 >= 0 /\ -12+i1 >= 0 /\ it2 > 0) /\ i3'=i3+7*it51, i4'=it4, i6'=i6-it51, i7'=it2, i8'=i6-it51, i9'=it4
	New rule:
	(0 >= 0 /\ -1+i6+i4-it4 >= 0 /\ 12-i1 >= 0 /\ i4-i5 >= 0 /\ it4-i5 >= 0 /\ -12+i1 >= 0 /\ it2 > 0 /\ -1+i6 >= 0) /\ i3'=7*i6+i3, i4'=it4, i6'=0, i7'=it2, i8'=0, i9'=it4

Start location: eval_aaron3_start

Location map:
LoAT_sink -> 0
eval_aaron3_start -> 1
eval_aaron3_bb0_in -> 2
eval_aaron3_0 -> 3
eval_aaron3_1 -> 4
eval_aaron3_2 -> 5
eval_aaron3_3 -> 6
eval_aaron3_4 -> 7
eval_aaron3_5 -> 8
eval_aaron3_6 -> 9
eval_aaron3_7 -> 10
eval_aaron3_8 -> 11
eval_aaron3_bb1_in -> 12
eval_aaron3_bb2_in -> 13
eval_aaron3_bb5_in -> 14
eval_aaron3_9 -> 15
eval_aaron3_10 -> 16
eval_aaron3_bb3_in -> 17
eval_aaron3_bb4_in -> 18
eval_aaron3_12 -> 19
eval_aaron3_13 -> 20
eval_aaron3_stop -> 21

Rules:
  20: (-20+i1 == 0 /\ -i4-i8+i9 <= 0) /\ i1'=12, i3'=1+i3, i4'=i9, i6'=i8
  40: (i4-i5 < 0 /\ -12+i1 == 0) /\ i1'=21, i3'=2+i3
  41: (-16+i1 == 0 /\ i7 <= 0) /\ i1'=12, i3'=2+i3, i5'=1+i5
  42: (-20+i1 == 0 /\ -i4-i8+i9 > 0) /\ i1'=21, i3'=2+i3
  43: (i4-i5 >= 0 /\ -12+i1 == 0) /\ i1'=16, i3'=3+i3, i7'=it2
  44: (-16+i1 == 0 /\ i7 > 0) /\ i1'=20, i3'=3+i3, i8'=-1+i6, i9'=it4
  45: -1+i1 == 0 /\ i1'=12, i3'=11+i3, i4'=i11, i5'=i12, i6'=i13
  46: (0 >= 0 /\ -1+i6+i4-it4 >= 0 /\ 12-i1 >= 0 /\ i4-i5 >= 0 /\ it4-i5 >= 0 /\ -12+i1 >= 0 /\ it2 > 0 /\ -1+i6 >= 0) /\ i3'=7*i6+i3, i4'=it4, i6'=0, i7'=it2, i8'=0, i9'=it4

Dependency graph:
20 -> 40, 20 -> 43, 20 -> 46
41 -> 40, 41 -> 43, 41 -> 46
43 -> 41, 43 -> 44
44 -> 20, 44 -> 42
45 -> 40, 45 -> 43, 45 -> 46
46 -> 40, 46 -> 43

	Trace

	45[(-1+i1 == 0)]
	46[(0 >= 0 /\ -1+i6+i4-it4 >= 0 /\ 12-i1 >= 0 /\ i4-i5 >= 0 /\ it4-i5 >= 0 /\ -12+i1 >= 0 /\ it2 > 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{}
	{46[T]}
	
Step with 43

	Trace

	45[(-1+i1 == 0)]
	46[(0 >= 0 /\ -1+i6+i4-it4 >= 0 /\ 12-i1 >= 0 /\ i4-i5 >= 0 /\ it4-i5 >= 0 /\ -12+i1 >= 0 /\ it2 > 0 /\ -1+i6 >= 0)]
	43[(i4-i5 >= 0 /\ -12+i1 == 0)]
	
	Blocked

	{}
	{}
	{46[T]}
	{}
	
Step with 41

	Trace

	45[(-1+i1 == 0)]
	46[(0 >= 0 /\ -1+i6+i4-it4 >= 0 /\ 12-i1 >= 0 /\ i4-i5 >= 0 /\ it4-i5 >= 0 /\ -12+i1 >= 0 /\ it2 > 0 /\ -1+i6 >= 0)]
	43[(i4-i5 >= 0 /\ -12+i1 == 0)]
	41[(-16+i1 == 0 /\ i7 <= 0)]
	
	Blocked

	{}
	{}
	{46[T]}
	{}
	{}
	
Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ i4-i5 >= 0 /\ -12+i1 == 0 /\ it2 <= 0) /\ i1'=12, i3'=5+i3, i5'=1+i5, i7'=it2
		New rule:
		(i4-i5 >= 0 /\ -12+i1 == 0 /\ it2 <= 0) /\ i1'=12, i3'=5+i3, i5'=1+i5, i7'=it2

	Loop Acceleration

	Original rule:
	(i4-i5 >= 0 /\ -12+i1 == 0 /\ it2 <= 0) /\ i1'=12, i3'=5+i3, i5'=1+i5, i7'=it2
	New rule:
	(-1+it103 >= 0 /\ 12-i1 >= 0 /\ 1+i4-it103-i5 >= 0 /\ i4-i5 >= 0 /\ -12+i1 >= 0 /\ -it2 >= 0) /\ i1'=i1, i3'=i3+5*it103, i5'=it103+i5, i7'=it2

		12-i1 >= 0 [0]: unchanged
		
		i4-i5 >= 0 [0]: montonic decrease yields (1+i4-it103-i5 >= 0 /\ i4-i5 >= 0)
		
		-12+i1 >= 0 [0]: unchanged
		
		-it2 >= 0 [0]: unchanged
		
		Replacement map: {12-i1 >= 0 -> 12-i1 >= 0, i4-i5 >= 0 -> (1+i4-it103-i5 >= 0 /\ i4-i5 >= 0), -12+i1 >= 0 -> -12+i1 >= 0, -it2 >= 0 -> -it2 >= 0}

	Removed Trivial Updates

	Original rule:
	(-1+it103 >= 0 /\ 12-i1 >= 0 /\ 1+i4-it103-i5 >= 0 /\ i4-i5 >= 0 /\ -12+i1 >= 0 /\ -it2 >= 0) /\ i1'=i1, i3'=i3+5*it103, i5'=it103+i5, i7'=it2
	New rule:
	(-1+it103 >= 0 /\ 12-i1 >= 0 /\ 1+i4-it103-i5 >= 0 /\ i4-i5 >= 0 /\ -12+i1 >= 0 /\ -it2 >= 0) /\ i3'=i3+5*it103, i5'=it103+i5, i7'=it2
	
	Instantiation

	Original rule:
	(-1+it103 >= 0 /\ 12-i1 >= 0 /\ 1+i4-it103-i5 >= 0 /\ i4-i5 >= 0 /\ -12+i1 >= 0 /\ -it2 >= 0) /\ i3'=i3+5*it103, i5'=it103+i5, i7'=it2
	New rule:
	(0 >= 0 /\ 12-i1 >= 0 /\ i4-i5 >= 0 /\ -12+i1 >= 0 /\ -it2 >= 0) /\ i3'=5+i3+5*i4-5*i5, i5'=1+i4, i7'=it2

Start location: eval_aaron3_start

Location map:
LoAT_sink -> 0
eval_aaron3_start -> 1
eval_aaron3_bb0_in -> 2
eval_aaron3_0 -> 3
eval_aaron3_1 -> 4
eval_aaron3_2 -> 5
eval_aaron3_3 -> 6
eval_aaron3_4 -> 7
eval_aaron3_5 -> 8
eval_aaron3_6 -> 9
eval_aaron3_7 -> 10
eval_aaron3_8 -> 11
eval_aaron3_bb1_in -> 12
eval_aaron3_bb2_in -> 13
eval_aaron3_bb5_in -> 14
eval_aaron3_9 -> 15
eval_aaron3_10 -> 16
eval_aaron3_bb3_in -> 17
eval_aaron3_bb4_in -> 18
eval_aaron3_12 -> 19
eval_aaron3_13 -> 20
eval_aaron3_stop -> 21

Rules:
  20: (-20+i1 == 0 /\ -i4-i8+i9 <= 0) /\ i1'=12, i3'=1+i3, i4'=i9, i6'=i8
  40: (i4-i5 < 0 /\ -12+i1 == 0) /\ i1'=21, i3'=2+i3
  41: (-16+i1 == 0 /\ i7 <= 0) /\ i1'=12, i3'=2+i3, i5'=1+i5
  42: (-20+i1 == 0 /\ -i4-i8+i9 > 0) /\ i1'=21, i3'=2+i3
  43: (i4-i5 >= 0 /\ -12+i1 == 0) /\ i1'=16, i3'=3+i3, i7'=it2
  44: (-16+i1 == 0 /\ i7 > 0) /\ i1'=20, i3'=3+i3, i8'=-1+i6, i9'=it4
  45: -1+i1 == 0 /\ i1'=12, i3'=11+i3, i4'=i11, i5'=i12, i6'=i13
  46: (0 >= 0 /\ -1+i6+i4-it4 >= 0 /\ 12-i1 >= 0 /\ i4-i5 >= 0 /\ it4-i5 >= 0 /\ -12+i1 >= 0 /\ it2 > 0 /\ -1+i6 >= 0) /\ i3'=7*i6+i3, i4'=it4, i6'=0, i7'=it2, i8'=0, i9'=it4
  47: (0 >= 0 /\ 12-i1 >= 0 /\ i4-i5 >= 0 /\ -12+i1 >= 0 /\ -it2 >= 0) /\ i3'=5+i3+5*i4-5*i5, i5'=1+i4, i7'=it2

Dependency graph:
20 -> 40, 20 -> 43, 20 -> 46, 20 -> 47
41 -> 40, 41 -> 43, 41 -> 46, 41 -> 47
43 -> 41, 43 -> 44
44 -> 20, 44 -> 42
45 -> 40, 45 -> 43, 45 -> 46, 45 -> 47
46 -> 40, 46 -> 43, 46 -> 47
47 -> 40, 47 -> 43, 47 -> 46

	Trace

	45[(-1+i1 == 0)]
	46[(0 >= 0 /\ -1+i6+i4-it4 >= 0 /\ 12-i1 >= 0 /\ i4-i5 >= 0 /\ it4-i5 >= 0 /\ -12+i1 >= 0 /\ it2 > 0 /\ -1+i6 >= 0)]
	47[(0 >= 0 /\ 12-i1 >= 0 /\ i4-i5 >= 0 /\ -12+i1 >= 0 /\ -it2 >= 0)]
	
	Blocked

	{}
	{}
	{46[T]}
	{47[T]}
	
Step with 40

	Trace

	45[(-1+i1 == 0)]
	46[(0 >= 0 /\ -1+i6+i4-it4 >= 0 /\ 12-i1 >= 0 /\ i4-i5 >= 0 /\ it4-i5 >= 0 /\ -12+i1 >= 0 /\ it2 > 0 /\ -1+i6 >= 0)]
	47[(0 >= 0 /\ 12-i1 >= 0 /\ i4-i5 >= 0 /\ -12+i1 >= 0 /\ -it2 >= 0)]
	40[(i4-i5 < 0 /\ -12+i1 == 0)]
	
	Blocked

	{}
	{}
	{46[T]}
	{43[T], 46[T], 47[T]}
	{}
	
Backtrack

	Trace

	45[(-1+i1 == 0)]
	46[(0 >= 0 /\ -1+i6+i4-it4 >= 0 /\ 12-i1 >= 0 /\ i4-i5 >= 0 /\ it4-i5 >= 0 /\ -12+i1 >= 0 /\ it2 > 0 /\ -1+i6 >= 0)]
	47[(0 >= 0 /\ 12-i1 >= 0 /\ i4-i5 >= 0 /\ -12+i1 >= 0 /\ -it2 >= 0)]
	
	Blocked

	{}
	{}
	{46[T]}
	{40[T], 43[T], 46[T], 47[T]}
	
Backtrack

	Trace

	45[(-1+i1 == 0)]
	46[(0 >= 0 /\ -1+i6+i4-it4 >= 0 /\ 12-i1 >= 0 /\ i4-i5 >= 0 /\ it4-i5 >= 0 /\ -12+i1 >= 0 /\ it2 > 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{}
	{46[T], 47[T]}
	
Step with 43

	Trace

	45[(-1+i1 == 0)]
	46[(0 >= 0 /\ -1+i6+i4-it4 >= 0 /\ 12-i1 >= 0 /\ i4-i5 >= 0 /\ it4-i5 >= 0 /\ -12+i1 >= 0 /\ it2 > 0 /\ -1+i6 >= 0)]
	43[(i4-i5 >= 0 /\ -12+i1 == 0)]
	
	Blocked

	{}
	{}
	{40[T], 46[T], 47[T]}
	{}
	
Step with 41

	Trace

	45[(-1+i1 == 0)]
	46[(0 >= 0 /\ -1+i6+i4-it4 >= 0 /\ 12-i1 >= 0 /\ i4-i5 >= 0 /\ it4-i5 >= 0 /\ -12+i1 >= 0 /\ it2 > 0 /\ -1+i6 >= 0)]
	43[(i4-i5 >= 0 /\ -12+i1 == 0)]
	41[(-16+i1 == 0 /\ i7 <= 0)]
	
	Blocked

	{}
	{}
	{40[T], 46[T], 47[T]}
	{}
	{}
	
Covered

	Trace

	45[(-1+i1 == 0)]
	46[(0 >= 0 /\ -1+i6+i4-it4 >= 0 /\ 12-i1 >= 0 /\ i4-i5 >= 0 /\ it4-i5 >= 0 /\ -12+i1 >= 0 /\ it2 > 0 /\ -1+i6 >= 0)]
	43[(i4-i5 >= 0 /\ -12+i1 == 0)]
	
	Blocked

	{}
	{}
	{40[T], 46[T], 47[T]}
	{41[T]}
	
Step with 44

	Trace

	45[(-1+i1 == 0)]
	46[(0 >= 0 /\ -1+i6+i4-it4 >= 0 /\ 12-i1 >= 0 /\ i4-i5 >= 0 /\ it4-i5 >= 0 /\ -12+i1 >= 0 /\ it2 > 0 /\ -1+i6 >= 0)]
	43[(i4-i5 >= 0 /\ -12+i1 == 0)]
	44[(-16+i1 == 0 /\ i7 > 0)]
	
	Blocked

	{}
	{}
	{40[T], 46[T], 47[T]}
	{41[T]}
	{}
	
Step with 42

	Trace

	45[(-1+i1 == 0)]
	46[(0 >= 0 /\ -1+i6+i4-it4 >= 0 /\ 12-i1 >= 0 /\ i4-i5 >= 0 /\ it4-i5 >= 0 /\ -12+i1 >= 0 /\ it2 > 0 /\ -1+i6 >= 0)]
	43[(i4-i5 >= 0 /\ -12+i1 == 0)]
	44[(-16+i1 == 0 /\ i7 > 0)]
	42[(-20+i1 == 0 /\ -i4-i8+i9 > 0)]
	
	Blocked

	{}
	{}
	{40[T], 46[T], 47[T]}
	{41[T]}
	{}
	{}
	
Backtrack

	Trace

	45[(-1+i1 == 0)]
	46[(0 >= 0 /\ -1+i6+i4-it4 >= 0 /\ 12-i1 >= 0 /\ i4-i5 >= 0 /\ it4-i5 >= 0 /\ -12+i1 >= 0 /\ it2 > 0 /\ -1+i6 >= 0)]
	43[(i4-i5 >= 0 /\ -12+i1 == 0)]
	44[(-16+i1 == 0 /\ i7 > 0)]
	
	Blocked

	{}
	{}
	{40[T], 46[T], 47[T]}
	{41[T]}
	{42[T]}
	
Step with 20

	Trace

	45[(-1+i1 == 0)]
	46[(0 >= 0 /\ -1+i6+i4-it4 >= 0 /\ 12-i1 >= 0 /\ i4-i5 >= 0 /\ it4-i5 >= 0 /\ -12+i1 >= 0 /\ it2 > 0 /\ -1+i6 >= 0)]
	43[(i4-i5 >= 0 /\ -12+i1 == 0)]
	44[(-16+i1 == 0 /\ i7 > 0)]
	20[(-20+i1 == 0 /\ -i4-i8+i9 <= 0)]
	
	Blocked

	{}
	{}
	{40[T], 46[T], 47[T]}
	{41[T]}
	{42[T]}
	{}
	
Covered

	Trace

	45[(-1+i1 == 0)]
	46[(0 >= 0 /\ -1+i6+i4-it4 >= 0 /\ 12-i1 >= 0 /\ i4-i5 >= 0 /\ it4-i5 >= 0 /\ -12+i1 >= 0 /\ it2 > 0 /\ -1+i6 >= 0)]
	43[(i4-i5 >= 0 /\ -12+i1 == 0)]
	44[(-16+i1 == 0 /\ i7 > 0)]
	
	Blocked

	{}
	{}
	{40[T], 46[T], 47[T]}
	{41[T]}
	{20[T], 42[T]}
	
Backtrack

	Trace

	45[(-1+i1 == 0)]
	46[(0 >= 0 /\ -1+i6+i4-it4 >= 0 /\ 12-i1 >= 0 /\ i4-i5 >= 0 /\ it4-i5 >= 0 /\ -12+i1 >= 0 /\ it2 > 0 /\ -1+i6 >= 0)]
	43[(i4-i5 >= 0 /\ -12+i1 == 0)]
	
	Blocked

	{}
	{}
	{40[T], 46[T], 47[T]}
	{41[T], 44[T]}
	
Backtrack

	Trace

	45[(-1+i1 == 0)]
	46[(0 >= 0 /\ -1+i6+i4-it4 >= 0 /\ 12-i1 >= 0 /\ i4-i5 >= 0 /\ it4-i5 >= 0 /\ -12+i1 >= 0 /\ it2 > 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{}
	{40[T], 43[T], 46[T], 47[T]}
	
Backtrack

	Trace

	45[(-1+i1 == 0)]
	
	Blocked

	{}
	{46[T]}
	
Step with 47

	Trace

	45[(-1+i1 == 0)]
	47[(0 >= 0 /\ 12-i1 >= 0 /\ i4-i5 >= 0 /\ -12+i1 >= 0 /\ -it2 >= 0)]
	
	Blocked

	{}
	{46[T]}
	{47[T]}
	
Step with 40

	Trace

	45[(-1+i1 == 0)]
	47[(0 >= 0 /\ 12-i1 >= 0 /\ i4-i5 >= 0 /\ -12+i1 >= 0 /\ -it2 >= 0)]
	40[(i4-i5 < 0 /\ -12+i1 == 0)]
	
	Blocked

	{}
	{46[T]}
	{46[T], 47[T]}
	{}
	
Backtrack

	Trace

	45[(-1+i1 == 0)]
	47[(0 >= 0 /\ 12-i1 >= 0 /\ i4-i5 >= 0 /\ -12+i1 >= 0 /\ -it2 >= 0)]
	
	Blocked

	{}
	{46[T]}
	{40[T], 46[T], 47[T]}
	
Backtrack

	Trace

	45[(-1+i1 == 0)]
	
	Blocked

	{}
	{46[T], 47[T]}
	
Step with 43

	Trace

	45[(-1+i1 == 0)]
	43[(i4-i5 >= 0 /\ -12+i1 == 0)]
	
	Blocked

	{}
	{46[T], 47[T]}
	{}
	
Step with 41

	Trace

	45[(-1+i1 == 0)]
	43[(i4-i5 >= 0 /\ -12+i1 == 0)]
	41[(-16+i1 == 0 /\ i7 <= 0)]
	
	Blocked

	{}
	{46[T], 47[T]}
	{}
	{}
	
Covered

	Trace

	45[(-1+i1 == 0)]
	43[(i4-i5 >= 0 /\ -12+i1 == 0)]
	
	Blocked

	{}
	{46[T], 47[T]}
	{41[T]}
	
Step with 44

	Trace

	45[(-1+i1 == 0)]
	43[(i4-i5 >= 0 /\ -12+i1 == 0)]
	44[(-16+i1 == 0 /\ i7 > 0)]
	
	Blocked

	{}
	{46[T], 47[T]}
	{41[T]}
	{}
	
Step with 20

	Trace

	45[(-1+i1 == 0)]
	43[(i4-i5 >= 0 /\ -12+i1 == 0)]
	44[(-16+i1 == 0 /\ i7 > 0)]
	20[(-20+i1 == 0 /\ -i4-i8+i9 <= 0)]
	
	Blocked

	{}
	{46[T], 47[T]}
	{41[T]}
	{}
	{}
	
Covered

	Trace

	45[(-1+i1 == 0)]
	43[(i4-i5 >= 0 /\ -12+i1 == 0)]
	44[(-16+i1 == 0 /\ i7 > 0)]
	
	Blocked

	{}
	{46[T], 47[T]}
	{41[T]}
	{20[T]}
	
Step with 42

	Trace

	45[(-1+i1 == 0)]
	43[(i4-i5 >= 0 /\ -12+i1 == 0)]
	44[(-16+i1 == 0 /\ i7 > 0)]
	42[(-20+i1 == 0 /\ -i4-i8+i9 > 0)]
	
	Blocked

	{}
	{46[T], 47[T]}
	{41[T]}
	{20[T]}
	{}
	
Backtrack

	Trace

	45[(-1+i1 == 0)]
	43[(i4-i5 >= 0 /\ -12+i1 == 0)]
	44[(-16+i1 == 0 /\ i7 > 0)]
	
	Blocked

	{}
	{46[T], 47[T]}
	{41[T]}
	{20[T], 42[T]}
	
Backtrack

	Trace

	45[(-1+i1 == 0)]
	43[(i4-i5 >= 0 /\ -12+i1 == 0)]
	
	Blocked

	{}
	{46[T], 47[T]}
	{41[T], 44[T]}
	
Backtrack

	Trace

	45[(-1+i1 == 0)]
	
	Blocked

	{}
	{43[T], 46[T], 47[T]}
	
Step with 40

	Trace

	45[(-1+i1 == 0)]
	40[(i4-i5 < 0 /\ -12+i1 == 0)]
	
	Blocked

	{}
	{43[T], 46[T], 47[T]}
	{}
	
Backtrack

	Trace

	45[(-1+i1 == 0)]
	
	Blocked

	{}
	{40[T], 43[T], 46[T], 47[T]}
	
Backtrack

	Trace

	Blocked

	{45[T]}
	
Accept

Poly(n^1)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

