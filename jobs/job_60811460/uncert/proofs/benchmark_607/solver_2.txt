MAYBE

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [f33/6]
1. recursive  : [f26/31,f33_loop_cont/32,f39/31,f47/31,f50/31,f59/31,f62/31]
2. non_recursive  : [exit_location/1]
3. recursive  : [f71/1]
4. non_recursive  : [f71_loop_cont/2]
5. recursive  : [f74/1]
6. non_recursive  : [f74_loop_cont/2]
7. non_recursive  : [f69/23]
8. non_recursive  : [f26_loop_cont/24]
9. non_recursive  : [f20/23]
10. non_recursive  : [f0/23]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into f33/6
1. SCC is partially evaluated into f26/31
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into f71/1
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into f74/1
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into f69/23
8. SCC is partially evaluated into f26_loop_cont/24
9. SCC is partially evaluated into f20/23
10. SCC is partially evaluated into f0/23

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations f33/6 
* CE 122 is refined into CE [130] 
* CE 118 is refined into CE [131] 
* CE 119 is refined into CE [132] 
* CE 121 is refined into CE [133] 
* CE 120 is refined into CE [134] 


### Cost equations --> "Loop" of f33/6 
* CEs [133] --> Loop 130 
* CEs [134] --> Loop 131 
* CEs [130] --> Loop 132 
* CEs [131] --> Loop 133 
* CEs [132] --> Loop 134 

### Ranking functions of CR f33(H,I,J,A1,B1,C1) 
* RF of phase [130]: [-H+I]
* RF of phase [131]: [-H+I]

#### Partial ranking functions of CR f33(H,I,J,A1,B1,C1) 
* Partial RF of phase [130]:
  - RF of loop [130:1]:
    -H+I
* Partial RF of phase [131]:
  - RF of loop [131:1]:
    -H+I


### Specialization of cost equations f26/31 
* CE 43 is refined into CE [135,136,137] 
* CE 44 is refined into CE [138,139,140] 
* CE 112 is refined into CE [141] 
* CE 42 is refined into CE [142,143,144] 
* CE 111 is refined into CE [145,146,147] 
* CE 115 is refined into CE [148] 
* CE 88 is refined into CE [149] 
* CE 87 is refined into CE [150] 
* CE 61 is refined into CE [151] 
* CE 60 is refined into CE [152] 
* CE 97 is refined into CE [153] 
* CE 96 is refined into CE [154] 
* CE 70 is refined into CE [155] 
* CE 69 is refined into CE [156] 
* CE 31 is refined into CE [157] 
* CE 30 is refined into CE [158] 
* CE 40 is refined into CE [159] 
* CE 39 is refined into CE [160] 
* CE 79 is refined into CE [161] 
* CE 78 is refined into CE [162] 
* CE 52 is refined into CE [163] 
* CE 51 is refined into CE [164] 
* CE 22 is refined into CE [165] 
* CE 21 is refined into CE [166] 
* CE 10 is refined into CE [167] 
* CE 13 is refined into CE [168] 
* CE 11 is refined into CE [169] 
* CE 14 is refined into CE [170] 
* CE 109 is refined into CE [171] 
* CE 103 is refined into CE [172] 
* CE 106 is refined into CE [173] 
* CE 100 is refined into CE [174] 
* CE 110 is refined into CE [175] 
* CE 104 is refined into CE [176] 
* CE 107 is refined into CE [177] 
* CE 101 is refined into CE [178] 
* CE 82 is refined into CE [179] 
* CE 55 is refined into CE [180] 
* CE 91 is refined into CE [181] 
* CE 64 is refined into CE [182] 
* CE 83 is refined into CE [183] 
* CE 56 is refined into CE [184] 
* CE 92 is refined into CE [185] 
* CE 65 is refined into CE [186] 
* CE 89 is refined into CE [187] 
* CE 62 is refined into CE [188] 
* CE 98 is refined into CE [189] 
* CE 71 is refined into CE [190] 
* CE 25 is refined into CE [191] 
* CE 34 is refined into CE [192] 
* CE 26 is refined into CE [193] 
* CE 35 is refined into CE [194] 
* CE 32 is refined into CE [195] 
* CE 41 is refined into CE [196] 
* CE 85 is refined into CE [197] 
* CE 58 is refined into CE [198] 
* CE 94 is refined into CE [199] 
* CE 67 is refined into CE [200] 
* CE 86 is refined into CE [201] 
* CE 59 is refined into CE [202] 
* CE 95 is refined into CE [203] 
* CE 68 is refined into CE [204] 
* CE 28 is refined into CE [205] 
* CE 37 is refined into CE [206] 
* CE 29 is refined into CE [207] 
* CE 38 is refined into CE [208] 
* CE 114 is refined into CE [209] 
* CE 113 is refined into CE [210] 
* CE 9 is refined into CE [211] 
* CE 12 is refined into CE [212] 
* CE 108 is refined into CE [213] 
* CE 102 is refined into CE [214] 
* CE 105 is refined into CE [215] 
* CE 99 is refined into CE [216] 
* CE 73 is refined into CE [217] 
* CE 46 is refined into CE [218] 
* CE 74 is refined into CE [219] 
* CE 47 is refined into CE [220] 
* CE 80 is refined into CE [221] 
* CE 53 is refined into CE [222] 
* CE 16 is refined into CE [223] 
* CE 17 is refined into CE [224] 
* CE 23 is refined into CE [225] 
* CE 76 is refined into CE [226] 
* CE 49 is refined into CE [227] 
* CE 77 is refined into CE [228] 
* CE 50 is refined into CE [229] 
* CE 19 is refined into CE [230] 
* CE 20 is refined into CE [231] 
* CE 81 is refined into CE [232] 
* CE 54 is refined into CE [233] 
* CE 90 is refined into CE [234] 
* CE 63 is refined into CE [235] 
* CE 24 is refined into CE [236] 
* CE 33 is refined into CE [237] 
* CE 84 is refined into CE [238] 
* CE 57 is refined into CE [239] 
* CE 93 is refined into CE [240] 
* CE 66 is refined into CE [241] 
* CE 27 is refined into CE [242] 
* CE 36 is refined into CE [243] 
* CE 72 is refined into CE [244] 
* CE 45 is refined into CE [245] 
* CE 15 is refined into CE [246] 
* CE 75 is refined into CE [247] 
* CE 48 is refined into CE [248] 
* CE 18 is refined into CE [249] 


### Cost equations --> "Loop" of f26/31 
* CEs [209] --> Loop 135 
* CEs [210] --> Loop 136 
* CEs [197] --> Loop 137 
* CEs [198] --> Loop 138 
* CEs [199] --> Loop 139 
* CEs [200] --> Loop 140 
* CEs [201] --> Loop 141 
* CEs [202] --> Loop 142 
* CEs [203] --> Loop 143 
* CEs [204] --> Loop 144 
* CEs [205] --> Loop 145 
* CEs [206] --> Loop 146 
* CEs [207] --> Loop 147 
* CEs [208] --> Loop 148 
* CEs [167] --> Loop 149 
* CEs [168] --> Loop 150 
* CEs [169] --> Loop 151 
* CEs [170] --> Loop 152 
* CEs [171] --> Loop 153 
* CEs [172] --> Loop 154 
* CEs [173] --> Loop 155 
* CEs [174] --> Loop 156 
* CEs [175] --> Loop 157 
* CEs [176] --> Loop 158 
* CEs [177] --> Loop 159 
* CEs [178] --> Loop 160 
* CEs [179] --> Loop 161 
* CEs [180] --> Loop 162 
* CEs [181] --> Loop 163 
* CEs [182] --> Loop 164 
* CEs [183] --> Loop 165 
* CEs [184] --> Loop 166 
* CEs [185] --> Loop 167 
* CEs [186] --> Loop 168 
* CEs [187] --> Loop 169 
* CEs [188] --> Loop 170 
* CEs [189] --> Loop 171 
* CEs [190] --> Loop 172 
* CEs [191] --> Loop 173 
* CEs [192] --> Loop 174 
* CEs [193] --> Loop 175 
* CEs [194] --> Loop 176 
* CEs [195] --> Loop 177 
* CEs [196] --> Loop 178 
* CEs [226] --> Loop 179 
* CEs [227] --> Loop 180 
* CEs [228] --> Loop 181 
* CEs [229] --> Loop 182 
* CEs [230] --> Loop 183 
* CEs [231] --> Loop 184 
* CEs [211] --> Loop 185 
* CEs [212] --> Loop 186 
* CEs [213] --> Loop 187 
* CEs [214] --> Loop 188 
* CEs [215] --> Loop 189 
* CEs [216] --> Loop 190 
* CEs [217] --> Loop 191 
* CEs [218] --> Loop 192 
* CEs [219] --> Loop 193 
* CEs [220] --> Loop 194 
* CEs [221] --> Loop 195 
* CEs [222] --> Loop 196 
* CEs [223] --> Loop 197 
* CEs [224] --> Loop 198 
* CEs [225] --> Loop 199 
* CEs [238] --> Loop 200 
* CEs [239] --> Loop 201 
* CEs [240] --> Loop 202 
* CEs [241] --> Loop 203 
* CEs [242] --> Loop 204 
* CEs [243] --> Loop 205 
* CEs [232] --> Loop 206 
* CEs [233] --> Loop 207 
* CEs [234] --> Loop 208 
* CEs [235] --> Loop 209 
* CEs [236] --> Loop 210 
* CEs [237] --> Loop 211 
* CEs [247] --> Loop 212 
* CEs [248] --> Loop 213 
* CEs [249] --> Loop 214 
* CEs [244] --> Loop 215 
* CEs [245] --> Loop 216 
* CEs [246] --> Loop 217 
* CEs [137] --> Loop 218 
* CEs [140] --> Loop 219 
* CEs [136] --> Loop 220 
* CEs [139] --> Loop 221 
* CEs [135] --> Loop 222 
* CEs [138] --> Loop 223 
* CEs [141] --> Loop 224 
* CEs [144] --> Loop 225 
* CEs [143] --> Loop 226 
* CEs [142] --> Loop 227 
* CEs [148] --> Loop 228 
* CEs [145] --> Loop 229 
* CEs [147] --> Loop 230 
* CEs [146] --> Loop 231 
* CEs [149] --> Loop 232 
* CEs [150] --> Loop 233 
* CEs [151] --> Loop 234 
* CEs [152] --> Loop 235 
* CEs [153] --> Loop 236 
* CEs [154] --> Loop 237 
* CEs [155] --> Loop 238 
* CEs [156] --> Loop 239 
* CEs [157] --> Loop 240 
* CEs [158] --> Loop 241 
* CEs [159] --> Loop 242 
* CEs [160] --> Loop 243 
* CEs [161] --> Loop 244 
* CEs [162] --> Loop 245 
* CEs [163] --> Loop 246 
* CEs [164] --> Loop 247 
* CEs [165] --> Loop 248 
* CEs [166] --> Loop 249 

### Ranking functions of CR f26(C,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1) 
* RF of phase [135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217]: [-C+E]

#### Partial ranking functions of CR f26(C,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1) 
* Partial RF of phase [135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217]:
  - RF of loop [135:1,136:1,137:1,138:1,139:1,140:1,141:1,142:1,143:1,144:1,145:1,146:1,147:1,148:1,149:1,150:1,151:1,152:1,153:1,154:1,155:1,156:1,157:1,158:1,159:1,160:1,161:1,162:1,163:1,164:1,165:1,166:1,167:1,168:1,169:1,170:1,171:1,172:1,173:1,174:1,175:1,176:1,177:1,178:1,179:1,180:1,181:1,182:1,183:1,184:1,185:1,186:1,187:1,188:1,189:1,190:1,191:1,192:1,193:1,194:1,195:1,196:1,197:1,198:1,199:1,200:1,201:1,202:1,203:1,204:1,205:1,206:1,207:1,208:1,209:1,210:1,211:1,212:1,213:1,214:1,215:1,216:1,217:1]:
    -C+E
  - RF of loop [137:1,138:1,139:1,140:1,141:1,142:1,143:1,144:1,145:1,146:1,147:1,148:1,179:1,180:1,181:1,182:1,183:1,184:1,200:1,201:1,202:1,203:1,204:1,205:1,212:1,213:1,214:1]:
    E-S
    -J


### Specialization of cost equations f71/1 
* CE 127 is refined into CE [250] 
* CE 126 is refined into CE [251] 


### Cost equations --> "Loop" of f71/1 
* CEs [251] --> Loop 250 
* CEs [250] --> Loop 251 

### Ranking functions of CR f71(A1) 

#### Partial ranking functions of CR f71(A1) 


### Specialization of cost equations f74/1 
* CE 129 is refined into CE [252] 
* CE 128 is refined into CE [253] 


### Cost equations --> "Loop" of f74/1 
* CEs [253] --> Loop 252 
* CEs [252] --> Loop 253 

### Ranking functions of CR f74(A1) 

#### Partial ranking functions of CR f74(A1) 


### Specialization of cost equations f69/23 
* CE 125 is refined into CE [254,255] 
* CE 124 is refined into CE [256,257] 
* CE 123 is refined into CE [258,259] 


### Cost equations --> "Loop" of f69/23 
* CEs [255] --> Loop 254 
* CEs [257] --> Loop 255 
* CEs [259] --> Loop 256 
* CEs [254] --> Loop 257 
* CEs [256] --> Loop 258 
* CEs [258] --> Loop 259 

### Ranking functions of CR f69(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,A1) 

#### Partial ranking functions of CR f69(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,A1) 


### Specialization of cost equations f26_loop_cont/24 
* CE 116 is refined into CE [260,261,262,263,264,265] 
* CE 117 is refined into CE [266] 


### Cost equations --> "Loop" of f26_loop_cont/24 
* CEs [262] --> Loop 260 
* CEs [261] --> Loop 261 
* CEs [260] --> Loop 262 
* CEs [266] --> Loop 263 
* CEs [265] --> Loop 264 
* CEs [264] --> Loop 265 
* CEs [263] --> Loop 266 

### Ranking functions of CR f26_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X) 

#### Partial ranking functions of CR f26_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X) 


### Specialization of cost equations f20/23 
* CE 5 is refined into CE [267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393] 
* CE 4 is refined into CE [394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520] 
* CE 8 is refined into CE [521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647] 
* CE 7 is discarded (unfeasible) 
* CE 6 is refined into CE [648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774] 


### Cost equations --> "Loop" of f20/23 
* CEs [361] --> Loop 267 
* CEs [368,369] --> Loop 268 
* CEs [358,388,392] --> Loop 269 
* CEs [353,379,381] --> Loop 270 
* CEs [359,389,393] --> Loop 271 
* CEs [355,383,385] --> Loop 272 
* CEs [351,375,377] --> Loop 273 
* CEs [349,371,373] --> Loop 274 
* CEs [347,363,365] --> Loop 275 
* CEs [488] --> Loop 276 
* CEs [495,496] --> Loop 277 
* CEs [485,515,519] --> Loop 278 
* CEs [480,506,508] --> Loop 279 
* CEs [486,516,520] --> Loop 280 
* CEs [482,510,512] --> Loop 281 
* CEs [478,502,504] --> Loop 282 
* CEs [476,498,500] --> Loop 283 
* CEs [474,490,492] --> Loop 284 
* CEs [272,274,284,286,288,290,300,302,304,306,324,326,328,330,332,334,336,338] --> Loop 285 
* CEs [268,270,276,278,280,282,292,294,296,298,308,310,312,314,316,318,320,322] --> Loop 286 
* CEs [399,401,411,413,415,417,427,429,431,433,451,453,455,457,459,461,463,465] --> Loop 287 
* CEs [395,397,403,405,407,409,419,421,423,425,435,437,439,441,443,445,447,449] --> Loop 288 
* CEs [615] --> Loop 289 
* CEs [622,623] --> Loop 290 
* CEs [612,642,646] --> Loop 291 
* CEs [607,633,635] --> Loop 292 
* CEs [613,643,647] --> Loop 293 
* CEs [609,637,639] --> Loop 294 
* CEs [605,629,631] --> Loop 295 
* CEs [603,625,627] --> Loop 296 
* CEs [601,617,619] --> Loop 297 
* CEs [526,528,538,540,542,544,554,556,558,560,578,580,582,584,586,588,590,592] --> Loop 298 
* CEs [522,524,530,532,534,536,546,548,550,552,562,564,566,568,570,572,574,576] --> Loop 299 
* CEs [739,769,773] --> Loop 300 
* CEs [740,770,774] --> Loop 301 
* CEs [749,750] --> Loop 302 
* CEs [734,760,762] --> Loop 303 
* CEs [736,764,766] --> Loop 304 
* CEs [732,756,758] --> Loop 305 
* CEs [730,752,754] --> Loop 306 
* CEs [728,744,746] --> Loop 307 
* CEs [742] --> Loop 308 
* CEs [653,655,665,667,669,671,681,683,685,687,705,707,709,711,713,715,717,719] --> Loop 309 
* CEs [649,651,657,659,661,663,673,675,677,679,689,691,693,695,697,699,701,703] --> Loop 310 
* CEs [360] --> Loop 311 
* CEs [344] --> Loop 312 
* CEs [343,366,367] --> Loop 313 
* CEs [345] --> Loop 314 
* CEs [356,386,390] --> Loop 315 
* CEs [342,352,378,380] --> Loop 316 
* CEs [341,357,387,391] --> Loop 317 
* CEs [340,354,382,384] --> Loop 318 
* CEs [339,350,374,376] --> Loop 319 
* CEs [348,370,372] --> Loop 320 
* CEs [346,362,364] --> Loop 321 
* CEs [487] --> Loop 322 
* CEs [471] --> Loop 323 
* CEs [470,493,494] --> Loop 324 
* CEs [472] --> Loop 325 
* CEs [483,513,517] --> Loop 326 
* CEs [469,479,505,507] --> Loop 327 
* CEs [468,484,514,518] --> Loop 328 
* CEs [467,481,509,511] --> Loop 329 
* CEs [466,477,501,503] --> Loop 330 
* CEs [475,497,499] --> Loop 331 
* CEs [473,489,491] --> Loop 332 
* CEs [271,273,283,285,287,289,299,301,303,305,323,325,327,329,331,333,335,337] --> Loop 333 
* CEs [267,269,275,277,279,281,291,293,295,297,307,309,311,313,315,317,319,321] --> Loop 334 
* CEs [398,400,410,412,414,416,426,428,430,432,450,452,454,456,458,460,462,464] --> Loop 335 
* CEs [394,396,402,404,406,408,418,420,422,424,434,436,438,440,442,444,446,448] --> Loop 336 
* CEs [614] --> Loop 337 
* CEs [598] --> Loop 338 
* CEs [597,620,621] --> Loop 339 
* CEs [599] --> Loop 340 
* CEs [610,640,644] --> Loop 341 
* CEs [596,606,632,634] --> Loop 342 
* CEs [595,611,641,645] --> Loop 343 
* CEs [594,608,636,638] --> Loop 344 
* CEs [593,604,628,630] --> Loop 345 
* CEs [602,624,626] --> Loop 346 
* CEs [600,616,618] --> Loop 347 
* CEs [525,527,537,539,541,543,553,555,557,559,577,579,581,583,585,587,589,591] --> Loop 348 
* CEs [521,523,529,531,533,535,545,547,549,551,561,563,565,567,569,571,573,575] --> Loop 349 
* CEs [726] --> Loop 350 
* CEs [725] --> Loop 351 
* CEs [737,767,771] --> Loop 352 
* CEs [722,738,768,772] --> Loop 353 
* CEs [724,747,748] --> Loop 354 
* CEs [723,733,759,761] --> Loop 355 
* CEs [721,735,763,765] --> Loop 356 
* CEs [720,731,755,757] --> Loop 357 
* CEs [729,751,753] --> Loop 358 
* CEs [727,743,745] --> Loop 359 
* CEs [741] --> Loop 360 
* CEs [652,654,664,666,668,670,680,682,684,686,704,706,708,710,712,714,716,718] --> Loop 361 
* CEs [648,650,656,658,660,662,672,674,676,678,688,690,692,694,696,698,700,702] --> Loop 362 

### Ranking functions of CR f20(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,A1) 

#### Partial ranking functions of CR f20(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,A1) 


### Specialization of cost equations f0/23 
* CE 3 is refined into CE [775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870] 
* CE 2 is refined into CE [871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966] 
* CE 1 is refined into CE [967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062] 


### Cost equations --> "Loop" of f0/23 
* CEs [829,835,847,848,860,861,869,870] --> Loop 363 
* CEs [834,837,845,846,858,859,867,868] --> Loop 364 
* CEs [836,844,857,866] --> Loop 365 
* CEs [930,933,941,942,954,955,963,964] --> Loop 366 
* CEs [932,940,953,962] --> Loop 367 
* CEs [925,931,943,944,956,957,965,966] --> Loop 368 
* CEs [832,833,842,843,855,856,864,865] --> Loop 369 
* CEs [928,929,938,939,951,952,960,961] --> Loop 370 
* CEs [830,831,840,841,853,854,862,863] --> Loop 371 
* CEs [926,927,936,937,949,950,958,959] --> Loop 372 
* CEs [1026,1029,1037,1038,1050,1051,1059,1060] --> Loop 373 
* CEs [1028,1036,1049,1058] --> Loop 374 
* CEs [1024,1025,1034,1035,1047,1048,1056,1057] --> Loop 375 
* CEs [1022,1023,1032,1033,1045,1046,1054,1055] --> Loop 376 
* CEs [1021,1027,1039,1040,1052,1053,1061,1062] --> Loop 377 
* CEs [827,828,838,839,849,850,851,852] --> Loop 378 
* CEs [923,924,934,935,945,946,947,948] --> Loop 379 
* CEs [1019,1020,1030,1031,1041,1042,1043,1044] --> Loop 380 
* CEs [777,783,786,787,797,798,799,800,812,813,814,815,823,824,825,826] --> Loop 381 
* CEs [782,785,795,796,810,811,821,822] --> Loop 382 
* CEs [784,794,809,820] --> Loop 383 
* CEs [878,881,891,892,906,907,917,918] --> Loop 384 
* CEs [880,890,905,916] --> Loop 385 
* CEs [873,879,882,883,893,894,895,896,908,909,910,911,919,920,921,922] --> Loop 386 
* CEs [780,781,792,793,807,808,818,819] --> Loop 387 
* CEs [876,877,888,889,903,904,914,915] --> Loop 388 
* CEs [778,779,790,791,805,806,816,817] --> Loop 389 
* CEs [874,875,886,887,901,902,912,913] --> Loop 390 
* CEs [974,977,987,988,1002,1003,1013,1014] --> Loop 391 
* CEs [976,986,1001,1012] --> Loop 392 
* CEs [972,973,984,985,999,1000,1010,1011] --> Loop 393 
* CEs [970,971,982,983,997,998,1008,1009] --> Loop 394 
* CEs [969,975,978,979,989,990,991,992,1004,1005,1006,1007,1015,1016,1017,1018] --> Loop 395 
* CEs [775,776,788,789,801,802,803,804] --> Loop 396 
* CEs [871,872,884,885,897,898,899,900] --> Loop 397 
* CEs [967,968,980,981,993,994,995,996] --> Loop 398 

### Ranking functions of CR f0(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,A1) 

#### Partial ranking functions of CR f0(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,A1) 


Computing Bounds
=====================================

#### Cost of chains of f33(H,I,J,A1,B1,C1):
* Chain [[131],133]: 1*it(131)+0
  Such that:it(131) =< -H+B1

  with precondition: [A1=2,I=B1,J=C1,0>=J+2,I>=H+1] 

* Chain [[131],132]: 1*it(131)+0
  Such that:it(131) =< -H+I

  with precondition: [A1=3,0>=J+2,I>=H+1] 

* Chain [[130],133]: 1*it(130)+0
  Such that:it(130) =< -H+B1

  with precondition: [A1=2,I=B1,J=C1,J>=0,I>=H+1] 

* Chain [[130],132]: 1*it(130)+0
  Such that:it(130) =< -H+I

  with precondition: [A1=3,J>=0,I>=H+1] 

* Chain [134]: 0
  with precondition: [J+1=0,A1=2,C1+1=0,H=B1,I>=H+1] 

* Chain [133]: 0
  with precondition: [A1=2,C1=J,H=B1,H>=I] 

* Chain [132]: 0
  with precondition: [A1=3] 


#### Cost of chains of f26(C,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,A1,B1,C1,D1,E1,F1,G1,H1,I1,J1,K1,L1,M1,N1,O1):
* Chain [[135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217],249]: 56*it(135)+27*it(137)+0
  Such that:aux(1) =< -C+E
aux(2) =< -C+B1
aux(3) =< E-S
aux(5) =< -S+O1+1
aux(7) =< -S+O1
it(135) =< aux(1)
it(137) =< aux(1)
it(135) =< aux(2)
it(137) =< aux(2)
it(137) =< aux(3)
it(137) =< aux(7)
it(137) =< aux(5)

  with precondition: [H=0,J+1=0,O=3,A1=4,C1=0,D1=0,E1=0,F1+1=0,G1=0,H1=0,K1=3,L1=1,S=O1,0>=M1,I>=1,S>=0,J1>=0,B1>=C+1,C>=S,E>=B1+1] 

* Chain [[135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217],248]: 56*it(135)+27*it(137)+0
  Such that:aux(1) =< -C+E
aux(2) =< -C+B1
aux(3) =< E-S
aux(5) =< -S+O1+1
aux(8) =< -S+O1
it(135) =< aux(1)
it(137) =< aux(1)
it(135) =< aux(2)
it(137) =< aux(2)
it(137) =< aux(3)
it(137) =< aux(8)
it(137) =< aux(5)

  with precondition: [H=0,J+1=0,O=3,A1=4,C1=0,D1=0,E1=0,F1+1=0,G1=0,H1=0,K1=3,L1=1,S=O1,I>=1,S>=0,J1>=0,M1>=2,B1>=C+1,C>=S,E>=B1+1] 

* Chain [[135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217],247]: 56*it(135)+27*it(137)+0
  Such that:aux(1) =< -C+E
aux(2) =< -C+B1
aux(3) =< E-S
aux(5) =< -S+O1+1
aux(9) =< -S+O1
it(135) =< aux(1)
it(137) =< aux(1)
it(135) =< aux(2)
it(137) =< aux(2)
it(137) =< aux(3)
it(137) =< aux(9)
it(137) =< aux(5)

  with precondition: [H=0,J+1=0,O=3,A1=4,C1=0,D1=0,E1=0,F1+1=0,G1=0,I1=0,K1=3,L1=1,S=O1,0>=H1+1,0>=M1,I>=1,S>=0,J1>=0,B1>=C+1,C>=S,E>=B1+1] 

* Chain [[135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217],246]: 56*it(135)+27*it(137)+0
  Such that:aux(1) =< -C+E
aux(2) =< -C+B1
aux(3) =< E-S
aux(5) =< -S+O1+1
aux(10) =< -S+O1
it(135) =< aux(1)
it(137) =< aux(1)
it(135) =< aux(2)
it(137) =< aux(2)
it(137) =< aux(3)
it(137) =< aux(10)
it(137) =< aux(5)

  with precondition: [H=0,J+1=0,O=3,A1=4,C1=0,D1=0,E1=0,F1+1=0,G1=0,I1=0,K1=3,L1=1,S=O1,0>=H1+1,I>=1,S>=0,J1>=0,M1>=2,B1>=C+1,C>=S,E>=B1+1] 

* Chain [[135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217],245]: 56*it(135)+27*it(137)+0
  Such that:aux(1) =< -C+E
aux(2) =< -C+B1
aux(3) =< E-S
aux(5) =< -S+O1+1
aux(11) =< -S+O1
it(135) =< aux(1)
it(137) =< aux(1)
it(135) =< aux(2)
it(137) =< aux(2)
it(137) =< aux(3)
it(137) =< aux(11)
it(137) =< aux(5)

  with precondition: [H=0,J+1=0,O=3,A1=4,C1=0,D1=0,E1=0,F1+1=0,G1=0,I1=0,K1=3,L1=1,S=O1,0>=M1,I>=1,S>=0,H1>=1,J1>=0,B1>=C+1,C>=S,E>=B1+1] 

* Chain [[135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217],244]: 56*it(135)+27*it(137)+0
  Such that:aux(1) =< -C+E
aux(2) =< -C+B1
aux(3) =< E-S
aux(5) =< -S+O1+1
aux(12) =< -S+O1
it(135) =< aux(1)
it(137) =< aux(1)
it(135) =< aux(2)
it(137) =< aux(2)
it(137) =< aux(3)
it(137) =< aux(12)
it(137) =< aux(5)

  with precondition: [H=0,J+1=0,O=3,A1=4,C1=0,D1=0,E1=0,F1+1=0,G1=0,I1=0,K1=3,L1=1,S=O1,I>=1,S>=0,H1>=1,J1>=0,M1>=2,B1>=C+1,C>=S,E>=B1+1] 

* Chain [[135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217],243]: 56*it(135)+27*it(137)+0
  Such that:aux(1) =< -C+E
aux(2) =< -C+B1
aux(3) =< E-S
aux(5) =< -S+O1+1
aux(13) =< -S+O1
it(135) =< aux(1)
it(137) =< aux(1)
it(135) =< aux(2)
it(137) =< aux(2)
it(137) =< aux(3)
it(137) =< aux(13)
it(137) =< aux(5)

  with precondition: [H=0,J+1=0,O=3,A1=4,E1=0,F1+1=0,G1=0,H1=0,K1=3,L1=1,S=O1,0>=C1+1,0>=M1,I>=1,S>=0,J1>=0,B1>=C+1,C>=S,E>=B1+1] 

* Chain [[135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217],242]: 56*it(135)+27*it(137)+0
  Such that:aux(1) =< -C+E
aux(2) =< -C+B1
aux(3) =< E-S
aux(5) =< -S+O1+1
aux(14) =< -S+O1
it(135) =< aux(1)
it(137) =< aux(1)
it(135) =< aux(2)
it(137) =< aux(2)
it(137) =< aux(3)
it(137) =< aux(14)
it(137) =< aux(5)

  with precondition: [H=0,J+1=0,O=3,A1=4,E1=0,F1+1=0,G1=0,H1=0,K1=3,L1=1,S=O1,0>=C1+1,I>=1,S>=0,J1>=0,M1>=2,B1>=C+1,C>=S,E>=B1+1] 

* Chain [[135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217],241]: 56*it(135)+27*it(137)+0
  Such that:aux(1) =< -C+E
aux(2) =< -C+B1
aux(3) =< E-S
aux(5) =< -S+O1+1
aux(15) =< -S+O1
it(135) =< aux(1)
it(137) =< aux(1)
it(135) =< aux(2)
it(137) =< aux(2)
it(137) =< aux(3)
it(137) =< aux(15)
it(137) =< aux(5)

  with precondition: [H=0,J+1=0,O=3,A1=4,E1=0,F1+1=0,G1=0,H1=0,K1=3,L1=1,S=O1,0>=M1,I>=1,S>=0,C1>=1,J1>=0,B1>=C+1,C>=S,E>=B1+1] 

* Chain [[135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217],240]: 56*it(135)+27*it(137)+0
  Such that:aux(1) =< -C+E
aux(2) =< -C+B1
aux(3) =< E-S
aux(5) =< -S+O1+1
aux(16) =< -S+O1
it(135) =< aux(1)
it(137) =< aux(1)
it(135) =< aux(2)
it(137) =< aux(2)
it(137) =< aux(3)
it(137) =< aux(16)
it(137) =< aux(5)

  with precondition: [H=0,J+1=0,O=3,A1=4,E1=0,F1+1=0,G1=0,H1=0,K1=3,L1=1,S=O1,I>=1,S>=0,C1>=1,J1>=0,M1>=2,B1>=C+1,C>=S,E>=B1+1] 

* Chain [[135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217],239]: 56*it(135)+27*it(137)+0
  Such that:aux(1) =< -C+E
aux(2) =< -C+B1
aux(3) =< E-S
aux(5) =< -S+O1+1
aux(17) =< -S+O1
it(135) =< aux(1)
it(137) =< aux(1)
it(135) =< aux(2)
it(137) =< aux(2)
it(137) =< aux(3)
it(137) =< aux(17)
it(137) =< aux(5)

  with precondition: [H=0,J+1=0,O=3,A1=4,E1=0,F1+1=0,G1=0,I1=0,K1=3,L1=1,S=O1,0>=C1+1,0>=H1+1,0>=M1,I>=1,S>=0,J1>=0,B1>=C+1,C>=S,E>=B1+1] 

* Chain [[135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217],238]: 56*it(135)+27*it(137)+0
  Such that:aux(1) =< -C+E
aux(2) =< -C+B1
aux(3) =< E-S
aux(5) =< -S+O1+1
aux(18) =< -S+O1
it(135) =< aux(1)
it(137) =< aux(1)
it(135) =< aux(2)
it(137) =< aux(2)
it(137) =< aux(3)
it(137) =< aux(18)
it(137) =< aux(5)

  with precondition: [H=0,J+1=0,O=3,A1=4,E1=0,F1+1=0,G1=0,I1=0,K1=3,L1=1,S=O1,0>=C1+1,0>=H1+1,I>=1,S>=0,J1>=0,M1>=2,B1>=C+1,C>=S,E>=B1+1] 

* Chain [[135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217],237]: 56*it(135)+27*it(137)+0
  Such that:aux(1) =< -C+E
aux(2) =< -C+B1
aux(3) =< E-S
aux(5) =< -S+O1+1
aux(19) =< -S+O1
it(135) =< aux(1)
it(137) =< aux(1)
it(135) =< aux(2)
it(137) =< aux(2)
it(137) =< aux(3)
it(137) =< aux(19)
it(137) =< aux(5)

  with precondition: [H=0,J+1=0,O=3,A1=4,E1=0,F1+1=0,G1=0,I1=0,K1=3,L1=1,S=O1,0>=C1+1,0>=M1,I>=1,S>=0,H1>=1,J1>=0,B1>=C+1,C>=S,E>=B1+1] 

* Chain [[135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217],236]: 56*it(135)+27*it(137)+0
  Such that:aux(1) =< -C+E
aux(2) =< -C+B1
aux(3) =< E-S
aux(5) =< -S+O1+1
aux(20) =< -S+O1
it(135) =< aux(1)
it(137) =< aux(1)
it(135) =< aux(2)
it(137) =< aux(2)
it(137) =< aux(3)
it(137) =< aux(20)
it(137) =< aux(5)

  with precondition: [H=0,J+1=0,O=3,A1=4,E1=0,F1+1=0,G1=0,I1=0,K1=3,L1=1,S=O1,0>=C1+1,I>=1,S>=0,H1>=1,J1>=0,M1>=2,B1>=C+1,C>=S,E>=B1+1] 

* Chain [[135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217],235]: 56*it(135)+27*it(137)+0
  Such that:aux(1) =< -C+E
aux(2) =< -C+B1
aux(3) =< E-S
aux(5) =< -S+O1+1
aux(21) =< -S+O1
it(135) =< aux(1)
it(137) =< aux(1)
it(135) =< aux(2)
it(137) =< aux(2)
it(137) =< aux(3)
it(137) =< aux(21)
it(137) =< aux(5)

  with precondition: [H=0,J+1=0,O=3,A1=4,E1=0,F1+1=0,G1=0,I1=0,K1=3,L1=1,S=O1,0>=H1+1,0>=M1,I>=1,S>=0,C1>=1,J1>=0,B1>=C+1,C>=S,E>=B1+1] 

* Chain [[135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217],234]: 56*it(135)+27*it(137)+0
  Such that:aux(1) =< -C+E
aux(2) =< -C+B1
aux(3) =< E-S
aux(5) =< -S+O1+1
aux(22) =< -S+O1
it(135) =< aux(1)
it(137) =< aux(1)
it(135) =< aux(2)
it(137) =< aux(2)
it(137) =< aux(3)
it(137) =< aux(22)
it(137) =< aux(5)

  with precondition: [H=0,J+1=0,O=3,A1=4,E1=0,F1+1=0,G1=0,I1=0,K1=3,L1=1,S=O1,0>=H1+1,I>=1,S>=0,C1>=1,J1>=0,M1>=2,B1>=C+1,C>=S,E>=B1+1] 

* Chain [[135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217],233]: 56*it(135)+27*it(137)+0
  Such that:aux(1) =< -C+E
aux(2) =< -C+B1
aux(3) =< E-S
aux(5) =< -S+O1+1
aux(23) =< -S+O1
it(135) =< aux(1)
it(137) =< aux(1)
it(135) =< aux(2)
it(137) =< aux(2)
it(137) =< aux(3)
it(137) =< aux(23)
it(137) =< aux(5)

  with precondition: [H=0,J+1=0,O=3,A1=4,E1=0,F1+1=0,G1=0,I1=0,K1=3,L1=1,S=O1,0>=M1,I>=1,S>=0,C1>=1,H1>=1,J1>=0,B1>=C+1,C>=S,E>=B1+1] 

* Chain [[135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217],232]: 56*it(135)+27*it(137)+0
  Such that:aux(1) =< -C+E
aux(2) =< -C+B1
aux(3) =< E-S
aux(5) =< -S+O1+1
aux(24) =< -S+O1
it(135) =< aux(1)
it(137) =< aux(1)
it(135) =< aux(2)
it(137) =< aux(2)
it(137) =< aux(3)
it(137) =< aux(24)
it(137) =< aux(5)

  with precondition: [H=0,J+1=0,O=3,A1=4,E1=0,F1+1=0,G1=0,I1=0,K1=3,L1=1,S=O1,I>=1,S>=0,C1>=1,H1>=1,J1>=0,M1>=2,B1>=C+1,C>=S,E>=B1+1] 

* Chain [[135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217],231]: 56*it(135)+27*it(137)+1*s(1)+0
  Such that:aux(3) =< E-S
s(1) =< I
aux(25) =< -C+E
aux(26) =< -J
aux(4) =< aux(25)
aux(4) =< aux(26)
it(135) =< aux(25)
it(137) =< aux(25)
it(137) =< aux(3)
it(137) =< aux(4)
it(137) =< aux(26)

  with precondition: [H=0,A1=3,0>=J+2,I>=1,S>=0,E>=C+2,C>=S] 

* Chain [[135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217],230]: 56*it(135)+27*it(137)+1*s(2)+0
  Such that:aux(3) =< E-S
s(2) =< I
aux(5) =< -J
aux(27) =< -C+E
it(135) =< aux(27)
it(137) =< aux(27)
it(137) =< aux(3)
it(137) =< aux(5)

  with precondition: [H=0,A1=3,I>=1,J+1>=0,S>=0,E>=C+2,C>=S] 

* Chain [[135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217],229]: 56*it(135)+27*it(137)+0
  Such that:aux(3) =< E-S
aux(5) =< -J
aux(28) =< -C+E
it(135) =< aux(28)
it(137) =< aux(28)
it(137) =< aux(3)
it(137) =< aux(5)

  with precondition: [H=0,A1=3,S>=0,E>=C+2,C>=S] 

* Chain [[135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217],228]: 56*it(135)+27*it(137)+0
  Such that:aux(3) =< E-S
aux(5) =< -J
aux(29) =< -C+E
it(135) =< aux(29)
it(137) =< aux(29)
it(137) =< aux(3)
it(137) =< aux(5)

  with precondition: [H=0,A1=3,S>=0,E>=C+1,C>=S] 

* Chain [[135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217],227]: 56*it(135)+27*it(137)+0
  Such that:aux(1) =< -C+E
aux(2) =< -C+B1
aux(3) =< E-S
aux(5) =< -J
aux(30) =< -J+F1
it(135) =< aux(1)
it(137) =< aux(1)
it(135) =< aux(2)
it(137) =< aux(2)
it(137) =< aux(3)
it(137) =< aux(30)
it(137) =< aux(5)

  with precondition: [H=0,A1=4,C1=0,D1=0,E1=0,J=F1,K=G1,L=H1,M=I1,N=J1,O=K1,P=L1,Q=M1,R=N1,S=O1,0>=I,S>=0,B1>=C+1,C>=S,E>=B1+1] 

* Chain [[135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217],226]: 56*it(135)+27*it(137)+1*s(3)+0
  Such that:aux(1) =< -C+E
aux(2) =< -C+B1
aux(3) =< E-J+F1-O1
aux(5) =< -J
s(3) =< E1
aux(31) =< -J+F1
it(135) =< aux(1)
it(137) =< aux(1)
it(135) =< aux(2)
it(137) =< aux(2)
it(137) =< aux(3)
it(137) =< aux(31)
it(137) =< aux(5)

  with precondition: [H=0,A1=4,C1=0,D1=0,I=E1,J=F1,K=G1,L=H1,M=I1,N=J1,O=K1,P=L1,Q=M1,R=N1,S=O1,0>=J+2,I>=1,S>=0,B1>=C+1,C>=S,E>=B1+1] 

* Chain [[135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217],225]: 56*it(135)+27*it(137)+1*s(4)+0
  Such that:aux(1) =< -C+E
aux(2) =< -C+B1
aux(3) =< E-J+F1-O1
aux(5) =< -J
s(4) =< E1
aux(32) =< -J+F1
it(135) =< aux(1)
it(137) =< aux(1)
it(135) =< aux(2)
it(137) =< aux(2)
it(137) =< aux(3)
it(137) =< aux(32)
it(137) =< aux(5)

  with precondition: [H=0,A1=4,C1=0,D1=0,I=E1,O=K1,S+F1=J+O1,I>=1,J+1>=0,S>=0,F1>=0,B1>=C+1,F1>=J,C>=S,E>=B1+1,J+B1>=C+F1] 

* Chain [[135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217],224]: 56*it(135)+27*it(137)+0
  Such that:aux(5) =< -J
aux(3) =< -S+B1
aux(33) =< -C+B1
aux(34) =< -J+F1
it(135) =< aux(33)
it(137) =< aux(33)
it(137) =< aux(3)
it(137) =< aux(34)
it(137) =< aux(5)

  with precondition: [H=0,A1=4,E1=0,E=B1,O=K1,S+F1=J+O1,S>=0,E>=C+1,F1>=J,C>=S,E+J>=C+F1] 

* Chain [[135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217],223]: 56*it(135)+27*it(137)+0
  Such that:aux(1) =< -C+E
aux(2) =< -C+B1
aux(3) =< E-S
aux(5) =< -J
aux(35) =< -J+F1
it(135) =< aux(1)
it(137) =< aux(1)
it(135) =< aux(2)
it(137) =< aux(2)
it(137) =< aux(3)
it(137) =< aux(35)
it(137) =< aux(5)

  with precondition: [H=0,A1=4,E1=0,J=F1,K=G1,L=H1,M=I1,N=J1,O=K1,P=L1,Q=M1,R=N1,S=O1,0>=I,0>=C1+1,S>=0,B1>=C+1,C>=S,E>=B1+1] 

* Chain [[135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217],222]: 56*it(135)+27*it(137)+0
  Such that:aux(1) =< -C+E
aux(2) =< -C+B1
aux(3) =< E-S
aux(5) =< -J
aux(36) =< -J+F1
it(135) =< aux(1)
it(137) =< aux(1)
it(135) =< aux(2)
it(137) =< aux(2)
it(137) =< aux(3)
it(137) =< aux(36)
it(137) =< aux(5)

  with precondition: [H=0,A1=4,E1=0,J=F1,K=G1,L=H1,M=I1,N=J1,O=K1,P=L1,Q=M1,R=N1,S=O1,0>=I,S>=0,C1>=1,B1>=C+1,C>=S,E>=B1+1] 

* Chain [[135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217],221]: 56*it(135)+27*it(137)+1*s(5)+0
  Such that:aux(1) =< -C+E
aux(2) =< -C+B1
aux(3) =< E-J+F1-O1
aux(5) =< -J
s(5) =< E1
aux(37) =< -J+F1
it(135) =< aux(1)
it(137) =< aux(1)
it(135) =< aux(2)
it(137) =< aux(2)
it(137) =< aux(3)
it(137) =< aux(37)
it(137) =< aux(5)

  with precondition: [H=0,A1=4,I=E1,J=F1,K=G1,L=H1,M=I1,N=J1,O=K1,P=L1,Q=M1,R=N1,S=O1,0>=J+2,0>=C1+1,I>=1,S>=0,B1>=C+1,C>=S,E>=B1+1] 

* Chain [[135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217],220]: 56*it(135)+27*it(137)+1*s(6)+0
  Such that:aux(1) =< -C+E
aux(2) =< -C+B1
aux(3) =< E-J+F1-O1
aux(5) =< -J
s(6) =< E1
aux(38) =< -J+F1
it(135) =< aux(1)
it(137) =< aux(1)
it(135) =< aux(2)
it(137) =< aux(2)
it(137) =< aux(3)
it(137) =< aux(38)
it(137) =< aux(5)

  with precondition: [H=0,A1=4,I=E1,J=F1,K=G1,L=H1,M=I1,N=J1,O=K1,P=L1,Q=M1,R=N1,S=O1,0>=J+2,I>=1,S>=0,C1>=1,B1>=C+1,C>=S,E>=B1+1] 

* Chain [[135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217],219]: 56*it(135)+27*it(137)+1*s(7)+0
  Such that:aux(1) =< -C+E
aux(2) =< -C+B1
aux(3) =< E-J+F1-O1
s(7) =< I
aux(5) =< -J
aux(39) =< -J+F1
it(135) =< aux(1)
it(137) =< aux(1)
it(135) =< aux(2)
it(137) =< aux(2)
it(137) =< aux(3)
it(137) =< aux(39)
it(137) =< aux(5)

  with precondition: [H=0,A1=4,I=E1,O=K1,S+F1=J+O1,0>=C1+1,I>=1,J+1>=0,S>=0,F1>=0,B1>=C+1,F1>=J,C>=S,E>=B1+1,J+B1>=C+F1] 

* Chain [[135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217],218]: 56*it(135)+27*it(137)+1*s(8)+0
  Such that:aux(1) =< -C+E
aux(2) =< -C+B1
aux(3) =< E-J+F1-O1
s(8) =< I
aux(5) =< -J
aux(40) =< -J+F1
it(135) =< aux(1)
it(137) =< aux(1)
it(135) =< aux(2)
it(137) =< aux(2)
it(137) =< aux(3)
it(137) =< aux(40)
it(137) =< aux(5)

  with precondition: [H=0,A1=4,I=E1,O=K1,S+F1=J+O1,I>=1,J+1>=0,S>=0,C1>=1,F1>=0,B1>=C+1,F1>=J,C>=S,E>=B1+1,J+B1>=C+F1] 

* Chain [249]: 0
  with precondition: [H=0,J+1=0,O=3,A1=4,C1=0,D1=0,E1=0,F1+1=0,G1=0,H1=0,K1=3,L1=1,I1=M,N1=R,C=B1,S=O1,0>=M1,I>=1,S>=0,J1>=0,E>=C+1,C>=S] 

* Chain [248]: 0
  with precondition: [H=0,J+1=0,O=3,A1=4,C1=0,D1=0,E1=0,F1+1=0,G1=0,H1=0,K1=3,L1=1,I1=M,N1=R,C=B1,S=O1,I>=1,S>=0,J1>=0,M1>=2,E>=C+1,C>=S] 

* Chain [247]: 0
  with precondition: [H=0,J+1=0,O=3,A1=4,C1=0,D1=0,E1=0,F1+1=0,G1=0,I1=0,K1=3,L1=1,N1=R,C=B1,S=O1,0>=H1+1,0>=M1,I>=1,S>=0,J1>=0,E>=C+1,C>=S] 

* Chain [246]: 0
  with precondition: [H=0,J+1=0,O=3,A1=4,C1=0,D1=0,E1=0,F1+1=0,G1=0,I1=0,K1=3,L1=1,N1=R,C=B1,S=O1,0>=H1+1,I>=1,S>=0,J1>=0,M1>=2,E>=C+1,C>=S] 

* Chain [245]: 0
  with precondition: [H=0,J+1=0,O=3,A1=4,C1=0,D1=0,E1=0,F1+1=0,G1=0,I1=0,K1=3,L1=1,N1=R,C=B1,S=O1,0>=M1,I>=1,S>=0,H1>=1,J1>=0,E>=C+1,C>=S] 

* Chain [244]: 0
  with precondition: [H=0,J+1=0,O=3,A1=4,C1=0,D1=0,E1=0,F1+1=0,G1=0,I1=0,K1=3,L1=1,N1=R,C=B1,S=O1,I>=1,S>=0,H1>=1,J1>=0,M1>=2,E>=C+1,C>=S] 

* Chain [243]: 0
  with precondition: [H=0,J+1=0,O=3,A1=4,E1=0,F1+1=0,G1=0,H1=0,K1=3,L1=1,D1=G,I1=M,N1=R,C=B1,S=O1,0>=C1+1,0>=M1,I>=1,S>=0,J1>=0,E>=C+1,C>=S] 

* Chain [242]: 0
  with precondition: [H=0,J+1=0,O=3,A1=4,E1=0,F1+1=0,G1=0,H1=0,K1=3,L1=1,D1=G,I1=M,N1=R,C=B1,S=O1,0>=C1+1,I>=1,S>=0,J1>=0,M1>=2,E>=C+1,C>=S] 

* Chain [241]: 0
  with precondition: [H=0,J+1=0,O=3,A1=4,E1=0,F1+1=0,G1=0,H1=0,K1=3,L1=1,D1=G,I1=M,N1=R,C=B1,S=O1,0>=M1,I>=1,S>=0,C1>=1,J1>=0,E>=C+1,C>=S] 

* Chain [240]: 0
  with precondition: [H=0,J+1=0,O=3,A1=4,E1=0,F1+1=0,G1=0,H1=0,K1=3,L1=1,D1=G,I1=M,N1=R,C=B1,S=O1,I>=1,S>=0,C1>=1,J1>=0,M1>=2,E>=C+1,C>=S] 

* Chain [239]: 0
  with precondition: [H=0,J+1=0,O=3,A1=4,E1=0,F1+1=0,G1=0,I1=0,K1=3,L1=1,D1=G,N1=R,C=B1,S=O1,0>=C1+1,0>=H1+1,0>=M1,I>=1,S>=0,J1>=0,E>=C+1,C>=S] 

* Chain [238]: 0
  with precondition: [H=0,J+1=0,O=3,A1=4,E1=0,F1+1=0,G1=0,I1=0,K1=3,L1=1,D1=G,N1=R,C=B1,S=O1,0>=C1+1,0>=H1+1,I>=1,S>=0,J1>=0,M1>=2,E>=C+1,C>=S] 

* Chain [237]: 0
  with precondition: [H=0,J+1=0,O=3,A1=4,E1=0,F1+1=0,G1=0,I1=0,K1=3,L1=1,D1=G,N1=R,C=B1,S=O1,0>=C1+1,0>=M1,I>=1,S>=0,H1>=1,J1>=0,E>=C+1,C>=S] 

* Chain [236]: 0
  with precondition: [H=0,J+1=0,O=3,A1=4,E1=0,F1+1=0,G1=0,I1=0,K1=3,L1=1,D1=G,N1=R,C=B1,S=O1,0>=C1+1,I>=1,S>=0,H1>=1,J1>=0,M1>=2,E>=C+1,C>=S] 

* Chain [235]: 0
  with precondition: [H=0,J+1=0,O=3,A1=4,E1=0,F1+1=0,G1=0,I1=0,K1=3,L1=1,D1=G,N1=R,C=B1,S=O1,0>=H1+1,0>=M1,I>=1,S>=0,C1>=1,J1>=0,E>=C+1,C>=S] 

* Chain [234]: 0
  with precondition: [H=0,J+1=0,O=3,A1=4,E1=0,F1+1=0,G1=0,I1=0,K1=3,L1=1,D1=G,N1=R,C=B1,S=O1,0>=H1+1,I>=1,S>=0,C1>=1,J1>=0,M1>=2,E>=C+1,C>=S] 

* Chain [233]: 0
  with precondition: [H=0,J+1=0,O=3,A1=4,E1=0,F1+1=0,G1=0,I1=0,K1=3,L1=1,D1=G,N1=R,C=B1,S=O1,0>=M1,I>=1,S>=0,C1>=1,H1>=1,J1>=0,E>=C+1,C>=S] 

* Chain [232]: 0
  with precondition: [H=0,J+1=0,O=3,A1=4,E1=0,F1+1=0,G1=0,I1=0,K1=3,L1=1,D1=G,N1=R,C=B1,S=O1,I>=1,S>=0,C1>=1,H1>=1,J1>=0,M1>=2,E>=C+1,C>=S] 

* Chain [231]: 1*s(1)+0
  Such that:s(1) =< I

  with precondition: [H=0,A1=3,0>=J+2,I>=1,S>=0,E>=C+1,C>=S] 

* Chain [230]: 1*s(2)+0
  Such that:s(2) =< I

  with precondition: [H=0,A1=3,I>=1,J>=0,S>=0,E>=C+1,C>=S] 

* Chain [229]: 0
  with precondition: [H=0,A1=3,S>=0,E>=C+1,C>=S] 

* Chain [228]: 0
  with precondition: [H=0,A1=3,S>=0,C>=S] 

* Chain [227]: 0
  with precondition: [H=0,A1=4,C1=0,D1=0,E1=0,F1=J,G1=K,H1=L,I1=M,J1=N,K1=O,L1=P,M1=Q,N1=R,C=B1,S=O1,0>=I,S>=0,E>=C+1,C>=S] 

* Chain [226]: 1*s(3)+0
  Such that:s(3) =< I

  with precondition: [H=0,A1=4,C1=0,D1=0,G1=K,H1=L,I1=M,J1=N,K1=O,L1=P,M1=Q,N1=R,C=B1,I=E1,J=F1,S=O1,0>=J+2,I>=1,S>=0,E>=C+1,C>=S] 

* Chain [225]: 1*s(4)+0
  Such that:s(4) =< I

  with precondition: [H=0,A1=4,C1=0,D1=0,G1=K,H1=L,I1=M,J1=N,K1=O,L1=P,M1=Q,N1=R,C=B1,I=E1,J=F1,S=O1,I>=1,J>=0,S>=0,E>=C+1,C>=S] 

* Chain [224]: 0
  with precondition: [H=0,A1=4,E1=0,C1=F,D1=G,F1=J,G1=K,H1=L,I1=M,J1=N,K1=O,L1=P,M1=Q,N1=R,C=B1,S=O1,S>=0,C>=E,C>=S] 

* Chain [223]: 0
  with precondition: [H=0,A1=4,E1=0,D1=G,F1=J,G1=K,H1=L,I1=M,J1=N,K1=O,L1=P,M1=Q,N1=R,C=B1,S=O1,0>=I,0>=C1+1,S>=0,E>=C+1,C>=S] 

* Chain [222]: 0
  with precondition: [H=0,A1=4,E1=0,D1=G,F1=J,G1=K,H1=L,I1=M,J1=N,K1=O,L1=P,M1=Q,N1=R,C=B1,S=O1,0>=I,S>=0,C1>=1,E>=C+1,C>=S] 

* Chain [221]: 1*s(5)+0
  Such that:s(5) =< I

  with precondition: [H=0,A1=4,D1=G,G1=K,H1=L,I1=M,J1=N,K1=O,L1=P,M1=Q,N1=R,C=B1,I=E1,J=F1,S=O1,0>=J+2,0>=C1+1,I>=1,S>=0,E>=C+1,C>=S] 

* Chain [220]: 1*s(6)+0
  Such that:s(6) =< I

  with precondition: [H=0,A1=4,D1=G,G1=K,H1=L,I1=M,J1=N,K1=O,L1=P,M1=Q,N1=R,C=B1,I=E1,J=F1,S=O1,0>=J+2,I>=1,S>=0,C1>=1,E>=C+1,C>=S] 

* Chain [219]: 1*s(7)+0
  Such that:s(7) =< I

  with precondition: [H=0,A1=4,D1=G,G1=K,H1=L,I1=M,J1=N,K1=O,L1=P,M1=Q,N1=R,C=B1,I=E1,J=F1,S=O1,0>=C1+1,I>=1,J>=0,S>=0,E>=C+1,C>=S] 

* Chain [218]: 1*s(8)+0
  Such that:s(8) =< I

  with precondition: [H=0,A1=4,D1=G,G1=K,H1=L,I1=M,J1=N,K1=O,L1=P,M1=Q,N1=R,C=B1,I=E1,J=F1,S=O1,I>=1,J>=0,S>=0,C1>=1,E>=C+1,C>=S] 


#### Cost of chains of f71(A1):
* Chain [[250]]...: 1*it(250)+0
  with precondition: [A1=3] 

* Chain [[250],251]: 1*it(250)+0
  with precondition: [A1=3] 

* Chain [251]: 0
  with precondition: [A1=3] 


#### Cost of chains of f74(A1):
* Chain [[252]]...: 1*it(252)+0
  with precondition: [A1=3] 

* Chain [[252],253]: 1*it(252)+0
  with precondition: [A1=3] 

* Chain [253]: 0
  with precondition: [A1=3] 


#### Cost of chains of f69(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,A1):
* Chain [259]: 1*s(16)+0
  with precondition: [S=0,U=1,1>=B,B>=0,V>=1,B+D>=1] 

* Chain [258]: 1*s(17)+0
  with precondition: [U=1,1>=B,0>=S+1,B>=0,V>=1,B+D>=1] 

* Chain [257]: 1*s(18)+0
  with precondition: [U=1,1>=B,B>=0,S>=1,V>=1,B+D>=1] 

* Chain [256]...: 1*s(19)+0
  with precondition: [S=0,U=1,1>=B,B>=0,V>=1,B+D>=1] 

* Chain [255]...: 1*s(20)+0
  with precondition: [U=1,1>=B,0>=S+1,B>=0,V>=1,B+D>=1] 

* Chain [254]...: 1*s(21)+0
  with precondition: [U=1,1>=B,B>=0,S>=1,V>=1,B+D>=1] 


#### Cost of chains of f26_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X):
* Chain [266]...: 1*s(22)+0
  with precondition: [A=4,T=0,V=1,1>=C,C>=0,W>=1,C+E>=1] 

* Chain [265]...: 1*s(23)+0
  with precondition: [A=4,V=1,1>=C,0>=T+1,C>=0,W>=1,C+E>=1] 

* Chain [264]...: 1*s(24)+0
  with precondition: [A=4,V=1,1>=C,C>=0,T>=1,W>=1,C+E>=1] 

* Chain [263]: 0
  with precondition: [A=3,V=1,1>=C,C>=0,W>=1,C+E>=1] 

* Chain [262]: 1*s(25)+0
  with precondition: [A=4,T=0,V=1,1>=C,C>=0,W>=1,C+E>=1] 

* Chain [261]: 1*s(26)+0
  with precondition: [A=4,V=1,1>=C,0>=T+1,C>=0,W>=1,C+E>=1] 

* Chain [260]: 1*s(27)+0
  with precondition: [A=4,V=1,1>=C,C>=0,T>=1,W>=1,C+E>=1] 


#### Cost of chains of f20(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,A1):
* Chain [362]: 1*aux(43)+0
  with precondition: [A=0,D=0,H=0,J+1=0,O=3,S=0,U=1,E>=1,I>=1,V>=1] 

* Chain [361]: 1008*s(51)+18*s(53)+0
  Such that:aux(62) =< E
s(51) =< aux(62)

  with precondition: [A=0,D=0,H=0,J+1=0,O=3,S=0,U=1,E>=2,I>=1,V>=1] 

* Chain [360]: 1*s(190)+0
  with precondition: [A=0,D=0,H=0,S=0,U=1,0>=E,V>=1] 

* Chain [359]: 1*aux(63)+0
  with precondition: [A=0,D=0,H=0,S=0,U=1,0>=I,E>=1,V>=1] 

* Chain [358]: 168*s(199)+3*s(201)+0
  Such that:aux(67) =< E
s(199) =< aux(67)

  with precondition: [A=0,D=0,H=0,S=0,U=1,0>=I,E>=2,V>=1] 

* Chain [357]: 4*s(218)+3*s(220)+0
  Such that:aux(68) =< I
s(218) =< aux(68)

  with precondition: [A=0,D=0,H=0,S=0,U=1,0>=J+2,E>=1,I>=1,V>=1] 

* Chain [356]: 4*s(226)+224*s(230)+27*s(231)+3*s(240)+0
  Such that:s(228) =< -J
aux(73) =< E
aux(74) =< I
s(226) =< aux(74)
s(229) =< aux(73)
s(229) =< s(228)
s(230) =< aux(73)
s(231) =< aux(73)
s(231) =< s(229)
s(231) =< s(228)

  with precondition: [A=0,D=0,H=0,S=0,U=1,0>=J+2,E>=2,I>=1,V>=1] 

* Chain [355]: 4*s(259)+3*s(261)+0
  Such that:aux(75) =< I
s(259) =< aux(75)

  with precondition: [A=0,D=0,H=0,S=0,U=1,E>=1,I>=1,J>=0,V>=1] 

* Chain [354]: 168*s(269)+54*s(270)+2*s(277)+0
  Such that:aux(79) =< E
aux(80) =< -J
s(269) =< aux(79)
s(270) =< aux(79)
s(270) =< aux(80)

  with precondition: [A=0,D=0,H=0,S=0,U=1,E>=1,V>=1] 

* Chain [353]: 4*s(286)+224*s(289)+108*s(290)+3*s(299)+0
  Such that:aux(85) =< 1
aux(86) =< E
aux(87) =< I
aux(88) =< -J
s(287) =< aux(85)
s(286) =< aux(87)
s(287) =< aux(88)
s(289) =< aux(86)
s(290) =< aux(86)
s(290) =< s(287)

  with precondition: [A=0,D=0,H=0,S=0,U=1,E>=2,I>=1,J+1>=0,V>=1] 

* Chain [352]: 3*s(322)+168*s(324)+3*s(326)+0
  Such that:aux(95) =< E
aux(96) =< I
s(322) =< aux(96)
s(324) =< aux(95)

  with precondition: [A=0,D=0,H=0,S=0,U=1,E>=2,I>=1,J>=0,V>=1] 

* Chain [351]: 56*s(348)+27*s(349)+0
  Such that:s(346) =< -J
aux(97) =< E
s(348) =< aux(97)
s(349) =< aux(97)
s(349) =< s(346)

  with precondition: [A=0,D=0,H=0,S=0,U=1,E>=2,V>=1] 

* Chain [350]: 0
  with precondition: [A=0,D=0,H=0,S=0,U=1,V>=1] 

* Chain [349]: 1*aux(98)+0
  with precondition: [A=0,H=0,J+1=0,O=3,S=0,U=1,D>=1,I>=1,V>=1,E>=D+1] 

* Chain [348]: 1008*s(373)+18*s(375)+0
  Such that:aux(117) =< -D+E
s(373) =< aux(117)

  with precondition: [A=0,H=0,J+1=0,O=3,S=0,U=1,D>=1,I>=1,V>=1,E>=D+2] 

* Chain [347]: 1*aux(118)+0
  with precondition: [A=0,H=0,S=0,U=1,0>=I,D>=1,V>=1,E>=D+1] 

* Chain [346]: 168*s(520)+3*s(522)+0
  Such that:aux(122) =< -D+E
s(520) =< aux(122)

  with precondition: [A=0,H=0,S=0,U=1,0>=I,D>=1,V>=1,E>=D+2] 

* Chain [345]: 4*s(539)+3*s(541)+0
  Such that:aux(123) =< I
s(539) =< aux(123)

  with precondition: [A=0,H=0,S=0,U=1,0>=J+2,D>=1,I>=1,V>=1,E>=D+1] 

* Chain [344]: 4*s(547)+224*s(551)+27*s(552)+3*s(561)+0
  Such that:s(546) =< E
s(549) =< -J
aux(127) =< -D+E
aux(128) =< I
s(547) =< aux(128)
s(550) =< aux(127)
s(550) =< s(549)
s(551) =< aux(127)
s(552) =< aux(127)
s(552) =< s(546)
s(552) =< s(550)
s(552) =< s(549)

  with precondition: [A=0,H=0,S=0,U=1,0>=J+2,D>=1,I>=1,V>=1,E>=D+2] 

* Chain [343]: 4*s(581)+224*s(584)+108*s(585)+3*s(594)+0
  Such that:aux(132) =< 1
aux(133) =< -D+E
aux(134) =< E
aux(135) =< I
aux(136) =< -J
s(582) =< aux(132)
s(581) =< aux(135)
s(582) =< aux(136)
s(584) =< aux(133)
s(585) =< aux(133)
s(585) =< aux(134)
s(585) =< s(582)

  with precondition: [A=0,H=0,S=0,U=1,D>=1,I>=1,J+1>=0,V>=1,E>=D+2] 

* Chain [342]: 4*s(613)+3*s(615)+0
  Such that:aux(137) =< I
s(613) =< aux(137)

  with precondition: [A=0,H=0,S=0,U=1,D>=1,I>=1,J>=0,V>=1,E>=D+1] 

* Chain [341]: 3*s(624)+168*s(626)+3*s(628)+0
  Such that:aux(144) =< -D+E
aux(145) =< I
s(624) =< aux(145)
s(626) =< aux(144)

  with precondition: [A=0,H=0,S=0,U=1,D>=1,I>=1,J>=0,V>=1,E>=D+2] 

* Chain [340]: 0
  with precondition: [A=0,H=0,S=0,U=1,D>=1,V>=1] 

* Chain [339]: 168*s(650)+54*s(651)+2*s(658)+0
  Such that:aux(147) =< -D+E
aux(148) =< E
aux(149) =< -J
s(650) =< aux(147)
s(651) =< aux(147)
s(651) =< aux(148)
s(651) =< aux(149)

  with precondition: [A=0,H=0,S=0,U=1,D>=1,V>=1,E>=D+1] 

* Chain [338]: 56*s(669)+27*s(670)+0
  Such that:s(668) =< -D+E
s(666) =< E
s(667) =< -J
s(669) =< s(668)
s(670) =< s(668)
s(670) =< s(666)
s(670) =< s(667)

  with precondition: [A=0,H=0,S=0,U=1,D>=1,V>=1,E>=D+2] 

* Chain [337]: 1*s(671)+0
  with precondition: [A=0,H=0,S=0,U=1,D>=1,V>=1,D>=E] 

* Chain [336]: 1*aux(150)+0
  with precondition: [H=0,J+1=0,O=3,S=0,U=1,0>=A+1,D>=0,I>=1,V>=1,E>=D+1] 

* Chain [335]: 1008*s(695)+18*s(697)+0
  Such that:aux(169) =< -D+E
s(695) =< aux(169)

  with precondition: [H=0,J+1=0,O=3,S=0,U=1,0>=A+1,D>=0,I>=1,V>=1,E>=D+2] 

* Chain [334]: 1*aux(170)+0
  with precondition: [H=0,J+1=0,O=3,S=0,U=1,A>=1,D>=0,I>=1,V>=1,E>=D+1] 

* Chain [333]: 1008*s(857)+18*s(859)+0
  Such that:aux(189) =< -D+E
s(857) =< aux(189)

  with precondition: [H=0,J+1=0,O=3,S=0,U=1,A>=1,D>=0,I>=1,V>=1,E>=D+2] 

* Chain [332]: 1*aux(190)+0
  with precondition: [H=0,S=0,U=1,0>=A+1,0>=I,D>=0,V>=1,E>=D+1] 

* Chain [331]: 168*s(1004)+3*s(1006)+0
  Such that:aux(194) =< -D+E
s(1004) =< aux(194)

  with precondition: [H=0,S=0,U=1,0>=A+1,0>=I,D>=0,V>=1,E>=D+2] 

* Chain [330]: 4*s(1023)+3*s(1025)+0
  Such that:aux(195) =< I
s(1023) =< aux(195)

  with precondition: [H=0,S=0,U=1,0>=A+1,0>=J+2,D>=0,I>=1,V>=1,E>=D+1] 

* Chain [329]: 4*s(1031)+224*s(1035)+27*s(1036)+3*s(1045)+0
  Such that:s(1030) =< E
s(1033) =< -J
aux(199) =< -D+E
aux(200) =< I
s(1031) =< aux(200)
s(1034) =< aux(199)
s(1034) =< s(1033)
s(1035) =< aux(199)
s(1036) =< aux(199)
s(1036) =< s(1030)
s(1036) =< s(1034)
s(1036) =< s(1033)

  with precondition: [H=0,S=0,U=1,0>=A+1,0>=J+2,D>=0,I>=1,V>=1,E>=D+2] 

* Chain [328]: 4*s(1065)+224*s(1068)+108*s(1069)+3*s(1078)+0
  Such that:aux(204) =< 1
aux(205) =< -D+E
aux(206) =< E
aux(207) =< I
aux(208) =< -J
s(1066) =< aux(204)
s(1065) =< aux(207)
s(1066) =< aux(208)
s(1068) =< aux(205)
s(1069) =< aux(205)
s(1069) =< aux(206)
s(1069) =< s(1066)

  with precondition: [H=0,S=0,U=1,0>=A+1,D>=0,I>=1,J+1>=0,V>=1,E>=D+2] 

* Chain [327]: 4*s(1097)+3*s(1099)+0
  Such that:aux(209) =< I
s(1097) =< aux(209)

  with precondition: [H=0,S=0,U=1,0>=A+1,D>=0,I>=1,J>=0,V>=1,E>=D+1] 

* Chain [326]: 3*s(1108)+168*s(1110)+3*s(1112)+0
  Such that:aux(216) =< -D+E
aux(217) =< I
s(1108) =< aux(217)
s(1110) =< aux(216)

  with precondition: [H=0,S=0,U=1,0>=A+1,D>=0,I>=1,J>=0,V>=1,E>=D+2] 

* Chain [325]: 0
  with precondition: [H=0,S=0,U=1,0>=A+1,D>=0,V>=1] 

* Chain [324]: 168*s(1134)+54*s(1135)+2*s(1142)+0
  Such that:aux(219) =< -D+E
aux(220) =< E
aux(221) =< -J
s(1134) =< aux(219)
s(1135) =< aux(219)
s(1135) =< aux(220)
s(1135) =< aux(221)

  with precondition: [H=0,S=0,U=1,0>=A+1,D>=0,V>=1,E>=D+1] 

* Chain [323]: 56*s(1153)+27*s(1154)+0
  Such that:s(1152) =< -D+E
s(1150) =< E
s(1151) =< -J
s(1153) =< s(1152)
s(1154) =< s(1152)
s(1154) =< s(1150)
s(1154) =< s(1151)

  with precondition: [H=0,S=0,U=1,0>=A+1,D>=0,V>=1,E>=D+2] 

* Chain [322]: 1*s(1155)+0
  with precondition: [H=0,S=0,U=1,0>=A+1,D>=0,V>=1,D>=E] 

* Chain [321]: 1*aux(222)+0
  with precondition: [H=0,S=0,U=1,0>=I,A>=1,D>=0,V>=1,E>=D+1] 

* Chain [320]: 168*s(1164)+3*s(1166)+0
  Such that:aux(226) =< -D+E
s(1164) =< aux(226)

  with precondition: [H=0,S=0,U=1,0>=I,A>=1,D>=0,V>=1,E>=D+2] 

* Chain [319]: 4*s(1183)+3*s(1185)+0
  Such that:aux(227) =< I
s(1183) =< aux(227)

  with precondition: [H=0,S=0,U=1,0>=J+2,A>=1,D>=0,I>=1,V>=1,E>=D+1] 

* Chain [318]: 4*s(1191)+224*s(1195)+27*s(1196)+3*s(1205)+0
  Such that:s(1190) =< E
s(1193) =< -J
aux(231) =< -D+E
aux(232) =< I
s(1191) =< aux(232)
s(1194) =< aux(231)
s(1194) =< s(1193)
s(1195) =< aux(231)
s(1196) =< aux(231)
s(1196) =< s(1190)
s(1196) =< s(1194)
s(1196) =< s(1193)

  with precondition: [H=0,S=0,U=1,0>=J+2,A>=1,D>=0,I>=1,V>=1,E>=D+2] 

* Chain [317]: 4*s(1225)+224*s(1228)+108*s(1229)+3*s(1238)+0
  Such that:aux(236) =< 1
aux(237) =< -D+E
aux(238) =< E
aux(239) =< I
aux(240) =< -J
s(1226) =< aux(236)
s(1225) =< aux(239)
s(1226) =< aux(240)
s(1228) =< aux(237)
s(1229) =< aux(237)
s(1229) =< aux(238)
s(1229) =< s(1226)

  with precondition: [H=0,S=0,U=1,A>=1,D>=0,I>=1,J+1>=0,V>=1,E>=D+2] 

* Chain [316]: 4*s(1257)+3*s(1259)+0
  Such that:aux(241) =< I
s(1257) =< aux(241)

  with precondition: [H=0,S=0,U=1,A>=1,D>=0,I>=1,J>=0,V>=1,E>=D+1] 

* Chain [315]: 3*s(1268)+168*s(1270)+3*s(1272)+0
  Such that:aux(248) =< -D+E
aux(249) =< I
s(1268) =< aux(249)
s(1270) =< aux(248)

  with precondition: [H=0,S=0,U=1,A>=1,D>=0,I>=1,J>=0,V>=1,E>=D+2] 

* Chain [314]: 0
  with precondition: [H=0,S=0,U=1,A>=1,D>=0,V>=1] 

* Chain [313]: 168*s(1294)+54*s(1295)+2*s(1302)+0
  Such that:aux(251) =< -D+E
aux(252) =< E
aux(253) =< -J
s(1294) =< aux(251)
s(1295) =< aux(251)
s(1295) =< aux(252)
s(1295) =< aux(253)

  with precondition: [H=0,S=0,U=1,A>=1,D>=0,V>=1,E>=D+1] 

* Chain [312]: 56*s(1313)+27*s(1314)+0
  Such that:s(1312) =< -D+E
s(1310) =< E
s(1311) =< -J
s(1313) =< s(1312)
s(1314) =< s(1312)
s(1314) =< s(1310)
s(1314) =< s(1311)

  with precondition: [H=0,S=0,U=1,A>=1,D>=0,V>=1,E>=D+2] 

* Chain [311]: 1*s(1315)+0
  with precondition: [H=0,S=0,U=1,A>=1,D>=0,V>=1,D>=E] 

* Chain [310]...: 1*aux(254)+0
  with precondition: [A=0,D=0,H=0,J+1=0,O=3,S=0,U=1,E>=1,I>=1,V>=1] 

* Chain [309]...: 1008*s(1339)+18*s(1341)+0
  Such that:aux(273) =< E
s(1339) =< aux(273)

  with precondition: [A=0,D=0,H=0,J+1=0,O=3,S=0,U=1,E>=2,I>=1,V>=1] 

* Chain [308]...: 1*s(1478)+0
  with precondition: [A=0,D=0,H=0,S=0,U=1,0>=E,V>=1] 

* Chain [307]...: 1*aux(274)+0
  with precondition: [A=0,D=0,H=0,S=0,U=1,0>=I,E>=1,V>=1] 

* Chain [306]...: 168*s(1487)+3*s(1489)+0
  Such that:aux(278) =< E
s(1487) =< aux(278)

  with precondition: [A=0,D=0,H=0,S=0,U=1,0>=I,E>=2,V>=1] 

* Chain [305]...: 3*s(1506)+3*s(1507)+0
  Such that:aux(279) =< I
s(1506) =< aux(279)

  with precondition: [A=0,D=0,H=0,S=0,U=1,0>=J+2,E>=1,I>=1,V>=1] 

* Chain [304]...: 3*s(1516)+168*s(1518)+3*s(1520)+0
  Such that:aux(283) =< E
aux(284) =< I
s(1516) =< aux(284)
s(1518) =< aux(283)

  with precondition: [A=0,D=0,H=0,S=0,U=1,0>=J+2,E>=2,I>=1,V>=1] 

* Chain [303]...: 3*s(1539)+3*s(1540)+0
  Such that:aux(285) =< I
s(1539) =< aux(285)

  with precondition: [A=0,D=0,H=0,S=0,U=1,E>=1,I>=1,J>=0,V>=1] 

* Chain [302]...: 112*s(1549)+2*s(1551)+27*s(1557)+0
  Such that:s(1552) =< -J
aux(288) =< E
s(1549) =< aux(288)
s(1557) =< aux(288)
s(1557) =< s(1552)

  with precondition: [A=0,D=0,H=0,S=0,U=1,E>=1,V>=1] 

* Chain [301]...: 3*s(1563)+168*s(1565)+81*s(1566)+3*s(1567)+0
  Such that:aux(292) =< 1
aux(293) =< E
aux(294) =< I
aux(295) =< -J
s(1562) =< aux(292)
s(1563) =< aux(294)
s(1562) =< aux(295)
s(1565) =< aux(293)
s(1566) =< aux(293)
s(1566) =< s(1562)

  with precondition: [A=0,D=0,H=0,S=0,U=1,E>=2,I>=1,J+1>=0,V>=1] 

* Chain [300]...: 3*s(1590)+168*s(1592)+3*s(1594)+0
  Such that:aux(302) =< E
aux(303) =< I
s(1590) =< aux(303)
s(1592) =< aux(302)

  with precondition: [A=0,D=0,H=0,S=0,U=1,E>=2,I>=1,J>=0,V>=1] 

* Chain [299]...: 1*aux(304)+0
  with precondition: [A=0,H=0,J+1=0,O=3,S=0,U=1,D>=1,I>=1,V>=1,E>=D+1] 

* Chain [298]...: 1008*s(1636)+18*s(1638)+0
  Such that:aux(323) =< -D+E
s(1636) =< aux(323)

  with precondition: [A=0,H=0,J+1=0,O=3,S=0,U=1,D>=1,I>=1,V>=1,E>=D+2] 

* Chain [297]...: 1*aux(324)+0
  with precondition: [A=0,H=0,S=0,U=1,0>=I,D>=1,V>=1,E>=D+1] 

* Chain [296]...: 168*s(1783)+3*s(1785)+0
  Such that:aux(328) =< -D+E
s(1783) =< aux(328)

  with precondition: [A=0,H=0,S=0,U=1,0>=I,D>=1,V>=1,E>=D+2] 

* Chain [295]...: 3*s(1802)+3*s(1803)+0
  Such that:aux(329) =< I
s(1802) =< aux(329)

  with precondition: [A=0,H=0,S=0,U=1,0>=J+2,D>=1,I>=1,V>=1,E>=D+1] 

* Chain [294]...: 3*s(1812)+168*s(1814)+3*s(1816)+0
  Such that:aux(333) =< -D+E
aux(334) =< I
s(1812) =< aux(334)
s(1814) =< aux(333)

  with precondition: [A=0,H=0,S=0,U=1,0>=J+2,D>=1,I>=1,V>=1,E>=D+2] 

* Chain [293]...: 3*s(1839)+168*s(1841)+81*s(1842)+3*s(1843)+0
  Such that:aux(338) =< 1
aux(339) =< -D+E
aux(340) =< E
aux(341) =< I
aux(342) =< -J
s(1838) =< aux(338)
s(1839) =< aux(341)
s(1838) =< aux(342)
s(1841) =< aux(339)
s(1842) =< aux(339)
s(1842) =< aux(340)
s(1842) =< s(1838)

  with precondition: [A=0,H=0,S=0,U=1,D>=1,I>=1,J+1>=0,V>=1,E>=D+2] 

* Chain [292]...: 3*s(1862)+3*s(1863)+0
  Such that:aux(343) =< I
s(1862) =< aux(343)

  with precondition: [A=0,H=0,S=0,U=1,D>=1,I>=1,J>=0,V>=1,E>=D+1] 

* Chain [291]...: 3*s(1872)+168*s(1874)+3*s(1876)+0
  Such that:aux(350) =< -D+E
aux(351) =< I
s(1872) =< aux(351)
s(1874) =< aux(350)

  with precondition: [A=0,H=0,S=0,U=1,D>=1,I>=1,J>=0,V>=1,E>=D+2] 

* Chain [290]...: 112*s(1899)+2*s(1901)+27*s(1907)+0
  Such that:s(1903) =< E
s(1902) =< -J
aux(353) =< -D+E
s(1899) =< aux(353)
s(1907) =< aux(353)
s(1907) =< s(1903)
s(1907) =< s(1902)

  with precondition: [A=0,H=0,S=0,U=1,D>=1,V>=1,E>=D+1] 

* Chain [289]...: 1*s(1909)+0
  with precondition: [A=0,H=0,S=0,U=1,D>=1,V>=1,D>=E] 

* Chain [288]...: 1*aux(354)+0
  with precondition: [H=0,J+1=0,O=3,S=0,U=1,0>=A+1,D>=0,I>=1,V>=1,E>=D+1] 

* Chain [287]...: 1008*s(1933)+18*s(1935)+0
  Such that:aux(373) =< -D+E
s(1933) =< aux(373)

  with precondition: [H=0,J+1=0,O=3,S=0,U=1,0>=A+1,D>=0,I>=1,V>=1,E>=D+2] 

* Chain [286]...: 1*aux(374)+0
  with precondition: [H=0,J+1=0,O=3,S=0,U=1,A>=1,D>=0,I>=1,V>=1,E>=D+1] 

* Chain [285]...: 1008*s(2095)+18*s(2097)+0
  Such that:aux(393) =< -D+E
s(2095) =< aux(393)

  with precondition: [H=0,J+1=0,O=3,S=0,U=1,A>=1,D>=0,I>=1,V>=1,E>=D+2] 

* Chain [284]...: 1*aux(394)+0
  with precondition: [H=0,S=0,U=1,0>=A+1,0>=I,D>=0,V>=1,E>=D+1] 

* Chain [283]...: 168*s(2242)+3*s(2244)+0
  Such that:aux(398) =< -D+E
s(2242) =< aux(398)

  with precondition: [H=0,S=0,U=1,0>=A+1,0>=I,D>=0,V>=1,E>=D+2] 

* Chain [282]...: 3*s(2261)+3*s(2262)+0
  Such that:aux(399) =< I
s(2261) =< aux(399)

  with precondition: [H=0,S=0,U=1,0>=A+1,0>=J+2,D>=0,I>=1,V>=1,E>=D+1] 

* Chain [281]...: 3*s(2271)+168*s(2273)+3*s(2275)+0
  Such that:aux(403) =< -D+E
aux(404) =< I
s(2271) =< aux(404)
s(2273) =< aux(403)

  with precondition: [H=0,S=0,U=1,0>=A+1,0>=J+2,D>=0,I>=1,V>=1,E>=D+2] 

* Chain [280]...: 3*s(2298)+168*s(2300)+81*s(2301)+3*s(2302)+0
  Such that:aux(408) =< 1
aux(409) =< -D+E
aux(410) =< E
aux(411) =< I
aux(412) =< -J
s(2297) =< aux(408)
s(2298) =< aux(411)
s(2297) =< aux(412)
s(2300) =< aux(409)
s(2301) =< aux(409)
s(2301) =< aux(410)
s(2301) =< s(2297)

  with precondition: [H=0,S=0,U=1,0>=A+1,D>=0,I>=1,J+1>=0,V>=1,E>=D+2] 

* Chain [279]...: 3*s(2321)+3*s(2322)+0
  Such that:aux(413) =< I
s(2321) =< aux(413)

  with precondition: [H=0,S=0,U=1,0>=A+1,D>=0,I>=1,J>=0,V>=1,E>=D+1] 

* Chain [278]...: 3*s(2331)+168*s(2333)+3*s(2335)+0
  Such that:aux(420) =< -D+E
aux(421) =< I
s(2331) =< aux(421)
s(2333) =< aux(420)

  with precondition: [H=0,S=0,U=1,0>=A+1,D>=0,I>=1,J>=0,V>=1,E>=D+2] 

* Chain [277]...: 112*s(2358)+2*s(2360)+27*s(2366)+0
  Such that:s(2362) =< E
s(2361) =< -J
aux(423) =< -D+E
s(2358) =< aux(423)
s(2366) =< aux(423)
s(2366) =< s(2362)
s(2366) =< s(2361)

  with precondition: [H=0,S=0,U=1,0>=A+1,D>=0,V>=1,E>=D+1] 

* Chain [276]...: 1*s(2368)+0
  with precondition: [H=0,S=0,U=1,0>=A+1,D>=0,V>=1,D>=E] 

* Chain [275]...: 1*aux(424)+0
  with precondition: [H=0,S=0,U=1,0>=I,A>=1,D>=0,V>=1,E>=D+1] 

* Chain [274]...: 168*s(2377)+3*s(2379)+0
  Such that:aux(428) =< -D+E
s(2377) =< aux(428)

  with precondition: [H=0,S=0,U=1,0>=I,A>=1,D>=0,V>=1,E>=D+2] 

* Chain [273]...: 3*s(2396)+3*s(2397)+0
  Such that:aux(429) =< I
s(2396) =< aux(429)

  with precondition: [H=0,S=0,U=1,0>=J+2,A>=1,D>=0,I>=1,V>=1,E>=D+1] 

* Chain [272]...: 3*s(2406)+168*s(2408)+3*s(2410)+0
  Such that:aux(433) =< -D+E
aux(434) =< I
s(2406) =< aux(434)
s(2408) =< aux(433)

  with precondition: [H=0,S=0,U=1,0>=J+2,A>=1,D>=0,I>=1,V>=1,E>=D+2] 

* Chain [271]...: 3*s(2433)+168*s(2435)+81*s(2436)+3*s(2437)+0
  Such that:aux(438) =< 1
aux(439) =< -D+E
aux(440) =< E
aux(441) =< I
aux(442) =< -J
s(2432) =< aux(438)
s(2433) =< aux(441)
s(2432) =< aux(442)
s(2435) =< aux(439)
s(2436) =< aux(439)
s(2436) =< aux(440)
s(2436) =< s(2432)

  with precondition: [H=0,S=0,U=1,A>=1,D>=0,I>=1,J+1>=0,V>=1,E>=D+2] 

* Chain [270]...: 3*s(2456)+3*s(2457)+0
  Such that:aux(443) =< I
s(2456) =< aux(443)

  with precondition: [H=0,S=0,U=1,A>=1,D>=0,I>=1,J>=0,V>=1,E>=D+1] 

* Chain [269]...: 3*s(2466)+168*s(2468)+3*s(2470)+0
  Such that:aux(450) =< -D+E
aux(451) =< I
s(2466) =< aux(451)
s(2468) =< aux(450)

  with precondition: [H=0,S=0,U=1,A>=1,D>=0,I>=1,J>=0,V>=1,E>=D+2] 

* Chain [268]...: 112*s(2493)+2*s(2495)+27*s(2501)+0
  Such that:s(2497) =< E
s(2496) =< -J
aux(453) =< -D+E
s(2493) =< aux(453)
s(2501) =< aux(453)
s(2501) =< s(2497)
s(2501) =< s(2496)

  with precondition: [H=0,S=0,U=1,A>=1,D>=0,V>=1,E>=D+1] 

* Chain [267]...: 1*s(2503)+0
  with precondition: [H=0,S=0,U=1,A>=1,D>=0,V>=1,D>=E] 


#### Cost of chains of f0(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,A1):
* Chain [398]: 1*aux(454)+0
  with precondition: [J+1=0,O=3,T=3,I>=1] 

* Chain [397]: 1*aux(455)+0
  with precondition: [J+1=0,O=3,2>=T,I>=1] 

* Chain [396]: 1*aux(456)+0
  with precondition: [J+1=0,O=3,I>=1,T>=4] 

* Chain [395]: 908*s(2552)+324*s(2556)+0
  Such that:aux(457) =< -J
s(2556) =< aux(457)

  with precondition: [T=3] 

* Chain [394]: 1*aux(458)+0
  with precondition: [T=3,0>=I] 

* Chain [393]: 32*s(2615)+920*s(2616)+108*s(2623)+0
  Such that:aux(459) =< I
aux(460) =< -J
s(2615) =< aux(459)
s(2623) =< aux(460)

  with precondition: [T=3,0>=J+2,I>=1] 

* Chain [392]: 16*s(2666)+908*s(2667)+432*s(2668)+0
  Such that:aux(465) =< 1
aux(466) =< I
aux(467) =< -J
s(2664) =< aux(467)
s(2664) =< aux(465)
s(2665) =< aux(465)
s(2666) =< aux(466)
s(2665) =< s(2664)
s(2668) =< s(2665)

  with precondition: [T=3,I>=1,J+1>=0] 

* Chain [391]: 28*s(2701)+696*s(2702)+0
  Such that:aux(468) =< I
s(2701) =< aux(468)

  with precondition: [T=3,I>=1,J>=0] 

* Chain [390]: 1*aux(469)+0
  with precondition: [0>=I,2>=T] 

* Chain [389]: 1*aux(470)+0
  with precondition: [0>=I,T>=4] 

* Chain [388]: 32*s(2765)+920*s(2766)+108*s(2773)+0
  Such that:aux(471) =< I
aux(472) =< -J
s(2765) =< aux(471)
s(2773) =< aux(472)

  with precondition: [0>=J+2,2>=T,I>=1] 

* Chain [387]: 32*s(2812)+920*s(2813)+108*s(2820)+0
  Such that:aux(473) =< I
aux(474) =< -J
s(2812) =< aux(473)
s(2820) =< aux(474)

  with precondition: [0>=J+2,I>=1,T>=4] 

* Chain [386]: 908*s(2858)+324*s(2862)+0
  Such that:aux(475) =< -J
s(2862) =< aux(475)

  with precondition: [2>=T] 

* Chain [385]: 16*s(2909)+908*s(2910)+432*s(2911)+0
  Such that:aux(480) =< 1
aux(481) =< I
aux(482) =< -J
s(2907) =< aux(482)
s(2907) =< aux(480)
s(2908) =< aux(480)
s(2909) =< aux(481)
s(2908) =< s(2907)
s(2911) =< s(2908)

  with precondition: [2>=T,I>=1,J+1>=0] 

* Chain [384]: 28*s(2944)+696*s(2945)+0
  Such that:aux(483) =< I
s(2944) =< aux(483)

  with precondition: [2>=T,I>=1,J>=0] 

* Chain [383]: 16*s(2980)+908*s(2981)+432*s(2982)+0
  Such that:aux(488) =< 1
aux(489) =< I
aux(490) =< -J
s(2978) =< aux(490)
s(2978) =< aux(488)
s(2979) =< aux(488)
s(2980) =< aux(489)
s(2979) =< s(2978)
s(2982) =< s(2979)

  with precondition: [I>=1,J+1>=0,T>=4] 

* Chain [382]: 28*s(3015)+696*s(3016)+0
  Such that:aux(491) =< I
s(3015) =< aux(491)

  with precondition: [I>=1,J>=0,T>=4] 

* Chain [381]: 908*s(3046)+324*s(3050)+0
  Such that:aux(492) =< -J
s(3050) =< aux(492)

  with precondition: [T>=4] 

* Chain [380]...: 1*aux(493)+0
  with precondition: [J+1=0,O=3,T=3,I>=1] 

* Chain [379]...: 1*aux(494)+0
  with precondition: [J+1=0,O=3,2>=T,I>=1] 

* Chain [378]...: 1*aux(495)+0
  with precondition: [J+1=0,O=3,I>=1,T>=4] 

* Chain [377]...: 460*s(3140)+108*s(3144)+0
  Such that:aux(496) =< -J
s(3144) =< aux(496)

  with precondition: [T=3] 

* Chain [376]...: 1*aux(497)+0
  with precondition: [T=3,0>=I] 

* Chain [375]...: 24*s(3184)+696*s(3185)+0
  Such that:aux(498) =< I
s(3184) =< aux(498)

  with precondition: [T=3,0>=J+2,I>=1] 

* Chain [374]...: 12*s(3220)+684*s(3221)+324*s(3222)+0
  Such that:aux(503) =< 1
aux(504) =< I
aux(505) =< -J
s(3218) =< aux(505)
s(3218) =< aux(503)
s(3219) =< aux(503)
s(3220) =< aux(504)
s(3219) =< s(3218)
s(3222) =< s(3219)

  with precondition: [T=3,I>=1,J+1>=0] 

* Chain [373]...: 24*s(3255)+696*s(3256)+0
  Such that:aux(506) =< I
s(3255) =< aux(506)

  with precondition: [T=3,I>=1,J>=0] 

* Chain [372]...: 1*aux(507)+0
  with precondition: [0>=I,2>=T] 

* Chain [371]...: 1*aux(508)+0
  with precondition: [0>=I,T>=4] 

* Chain [370]...: 24*s(3319)+696*s(3320)+0
  Such that:aux(509) =< I
s(3319) =< aux(509)

  with precondition: [0>=J+2,2>=T,I>=1] 

* Chain [369]...: 24*s(3351)+696*s(3352)+0
  Such that:aux(510) =< I
s(3351) =< aux(510)

  with precondition: [0>=J+2,I>=1,T>=4] 

* Chain [368]...: 460*s(3382)+108*s(3386)+0
  Such that:aux(511) =< -J
s(3386) =< aux(511)

  with precondition: [2>=T] 

* Chain [367]...: 12*s(3414)+684*s(3415)+324*s(3416)+0
  Such that:aux(516) =< 1
aux(517) =< I
aux(518) =< -J
s(3412) =< aux(518)
s(3412) =< aux(516)
s(3413) =< aux(516)
s(3414) =< aux(517)
s(3413) =< s(3412)
s(3416) =< s(3413)

  with precondition: [2>=T,I>=1,J+1>=0] 

* Chain [366]...: 24*s(3449)+696*s(3450)+0
  Such that:aux(519) =< I
s(3449) =< aux(519)

  with precondition: [2>=T,I>=1,J>=0] 

* Chain [365]...: 12*s(3485)+684*s(3486)+324*s(3487)+0
  Such that:aux(524) =< 1
aux(525) =< I
aux(526) =< -J
s(3483) =< aux(526)
s(3483) =< aux(524)
s(3484) =< aux(524)
s(3485) =< aux(525)
s(3484) =< s(3483)
s(3487) =< s(3484)

  with precondition: [I>=1,J+1>=0,T>=4] 

* Chain [364]...: 24*s(3520)+696*s(3521)+0
  Such that:aux(527) =< I
s(3520) =< aux(527)

  with precondition: [I>=1,J>=0,T>=4] 

* Chain [363]...: 460*s(3551)+108*s(3555)+0
  Such that:aux(528) =< -J
s(3555) =< aux(528)

  with precondition: [T>=4] 


Closed-form bounds of f0(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,A1): 
-------------------------------------
* Chain [398] with precondition: [J+1=0,O=3,T=3,I>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [397] with precondition: [J+1=0,O=3,2>=T,I>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [396] with precondition: [J+1=0,O=3,I>=1,T>=4] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [395] with precondition: [T=3] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [394] with precondition: [T=3,0>=I] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [393] with precondition: [T=3,0>=J+2,I>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [392] with precondition: [T=3,I>=1,J+1>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [391] with precondition: [T=3,I>=1,J>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [390] with precondition: [0>=I,2>=T] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [389] with precondition: [0>=I,T>=4] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [388] with precondition: [0>=J+2,2>=T,I>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [387] with precondition: [0>=J+2,I>=1,T>=4] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [386] with precondition: [2>=T] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [385] with precondition: [2>=T,I>=1,J+1>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [384] with precondition: [2>=T,I>=1,J>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [383] with precondition: [I>=1,J+1>=0,T>=4] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [382] with precondition: [I>=1,J>=0,T>=4] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [381] with precondition: [T>=4] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [380]... with precondition: [J+1=0,O=3,T=3,I>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [379]... with precondition: [J+1=0,O=3,2>=T,I>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [378]... with precondition: [J+1=0,O=3,I>=1,T>=4] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [377]... with precondition: [T=3] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [376]... with precondition: [T=3,0>=I] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [375]... with precondition: [T=3,0>=J+2,I>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [374]... with precondition: [T=3,I>=1,J+1>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [373]... with precondition: [T=3,I>=1,J>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [372]... with precondition: [0>=I,2>=T] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [371]... with precondition: [0>=I,T>=4] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [370]... with precondition: [0>=J+2,2>=T,I>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [369]... with precondition: [0>=J+2,I>=1,T>=4] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [368]... with precondition: [2>=T] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [367]... with precondition: [2>=T,I>=1,J+1>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [366]... with precondition: [2>=T,I>=1,J>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [365]... with precondition: [I>=1,J+1>=0,T>=4] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [364]... with precondition: [I>=1,J>=0,T>=4] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [363]... with precondition: [T>=4] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of f0(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,A1): inf 
Asymptotic class: infinity 
* Total analysis performed in 54502 ms.

