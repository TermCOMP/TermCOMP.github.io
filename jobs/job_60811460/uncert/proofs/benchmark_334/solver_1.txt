WORST_CASE(?,O(1))

# LoAT Proof:
Initial ITS

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f5 -> 2
f7 -> 3

Rules:
   0: (-128+i4 >= 0 /\ -1+i1 == 0) /\ i1'=2, i3'=1+i3, i5'=0
   1: (127-i4 >= 0 /\ -1+i1 == 0) /\ i1'=3, i3'=1+i3, i5'=0, i6'=it2
   2: (-3+i1 == 0 /\ 35-i5 >= 0) /\ i1'=3, i3'=1+i3, i5'=1+i5, i6'=1+i6
   3: (-3+i1 == 0 /\ -36+i5 >= 0) /\ i1'=2, i3'=1+i3

Dependency graph:
1 -> 2, 1 -> 3
2 -> 2, 2 -> 3

Refined Dependency Graph

	Removed the following edges: 1 -> 3

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f5 -> 2
f7 -> 3

Rules:
   0: (-128+i4 >= 0 /\ -1+i1 == 0) /\ i1'=2, i3'=1+i3, i5'=0
   1: (127-i4 >= 0 /\ -1+i1 == 0) /\ i1'=3, i3'=1+i3, i5'=0, i6'=it2
   2: (-3+i1 == 0 /\ 35-i5 >= 0) /\ i1'=3, i3'=1+i3, i5'=1+i5, i6'=1+i6
   3: (-3+i1 == 0 /\ -36+i5 >= 0) /\ i1'=2, i3'=1+i3

Dependency graph:
1 -> 2
2 -> 2, 2 -> 3

Step with 1

	Trace

	1[(127-i4 >= 0 /\ -1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 2

	Trace

	1[(127-i4 >= 0 /\ -1+i1 == 0)]
	2[(-3+i1 == 0 /\ 35-i5 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Accelerate

	Loop Acceleration

	Original rule:
	(-3+i1 == 0 /\ 35-i5 >= 0) /\ i1'=3, i3'=1+i3, i5'=1+i5, i6'=1+i6
	New rule:
	(-3+i1 >= 0 /\ -1+it14 >= 0 /\ 3-i1 >= 0 /\ 36-it14-i5 >= 0) /\ i1'=i1, i3'=i3+it14, i5'=it14+i5, i6'=i6+it14

		-3+i1 >= 0 [0]: unchanged
		
		3-i1 >= 0 [0]: unchanged
		
		35-i5 >= 0 [0]: montonic decrease yields 36-it14-i5 >= 0
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, 3-i1 >= 0 -> 3-i1 >= 0, 35-i5 >= 0 -> 36-it14-i5 >= 0}

	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ -1+it14 >= 0 /\ 3-i1 >= 0 /\ 36-it14-i5 >= 0) /\ i1'=i1, i3'=i3+it14, i5'=it14+i5, i6'=i6+it14
	New rule:
	(-3+i1 >= 0 /\ -1+it14 >= 0 /\ 3-i1 >= 0 /\ 36-it14-i5 >= 0) /\ i3'=i3+it14, i5'=it14+i5, i6'=i6+it14
	
	Instantiation

	Original rule:
	(-3+i1 >= 0 /\ -1+it14 >= 0 /\ 3-i1 >= 0 /\ 36-it14-i5 >= 0) /\ i3'=i3+it14, i5'=it14+i5, i6'=i6+it14
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ 35-i5 >= 0) /\ i3'=36+i3-i5, i5'=36, i6'=36+i6-i5

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f5 -> 2
f7 -> 3

Rules:
   0: (-128+i4 >= 0 /\ -1+i1 == 0) /\ i1'=2, i3'=1+i3, i5'=0
   1: (127-i4 >= 0 /\ -1+i1 == 0) /\ i1'=3, i3'=1+i3, i5'=0, i6'=it2
   2: (-3+i1 == 0 /\ 35-i5 >= 0) /\ i1'=3, i3'=1+i3, i5'=1+i5, i6'=1+i6
   3: (-3+i1 == 0 /\ -36+i5 >= 0) /\ i1'=2, i3'=1+i3
   4: (0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ 35-i5 >= 0) /\ i3'=36+i3-i5, i5'=36, i6'=36+i6-i5

Dependency graph:
1 -> 2, 1 -> 4
2 -> 2, 2 -> 3, 2 -> 4
4 -> 2, 4 -> 3

	Trace

	1[(127-i4 >= 0 /\ -1+i1 == 0)]
	4[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ 35-i5 >= 0)]
	
	Blocked

	{}
	{}
	{2[T], 4[T]}
	
Step with 3

	Trace

	1[(127-i4 >= 0 /\ -1+i1 == 0)]
	4[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ 35-i5 >= 0)]
	3[(-3+i1 == 0 /\ -36+i5 >= 0)]
	
	Blocked

	{}
	{}
	{2[T], 4[T]}
	{}
	
Backtrack

	Trace

	1[(127-i4 >= 0 /\ -1+i1 == 0)]
	4[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ 35-i5 >= 0)]
	
	Blocked

	{}
	{}
	{2[T], 3[T], 4[T]}
	
Backtrack

	Trace

	1[(127-i4 >= 0 /\ -1+i1 == 0)]
	
	Blocked

	{}
	{4[T]}
	
Step with 2

	Trace

	1[(127-i4 >= 0 /\ -1+i1 == 0)]
	2[(-3+i1 == 0 /\ 35-i5 >= 0)]
	
	Blocked

	{}
	{4[T]}
	{}
	
Covered

	Trace

	1[(127-i4 >= 0 /\ -1+i1 == 0)]
	
	Blocked

	{}
	{2[T], 4[T]}
	
Backtrack

	Trace

	Blocked

	{1[T]}
	
Step with 0

	Trace

	0[(-128+i4 >= 0 /\ -1+i1 == 0)]
	
	Blocked

	{1[T]}
	{}
	
Backtrack

	Trace

	Blocked

	{0[T], 1[T]}
	
Accept

Constant


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  D
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂) → l1(X₀, 0, X₂) :|: 128 ≤ X₀
  t₁: l0(X₀, X₁, X₂) → l2(X₀, 0, D) :|: X₀ ≤ 127
  t₃: l2(X₀, X₁, X₂) → l1(X₀, X₁, X₂) :|: 36 ≤ X₁
  t₂: l2(X₀, X₁, X₂) → l2(X₀, 1+X₁, 1+X₂) :|: X₁ ≤ 35


Preprocessing
  Eliminate variables [D; X₂] that do not contribute to the problem


  Found invariant X₁ ≤ 36 ∧ 0 ≤ X₁ for location l1


  Found invariant X₁ ≤ 36 ∧ X₀+X₁ ≤ 163 ∧ 0 ≤ X₁ ∧ X₀ ≤ 127+X₁ ∧ X₀ ≤ 127 for location l2


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁
  Temp_Vars:  
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₄: l0(X₀, X₁) → l1(X₀, 0) :|: 128 ≤ X₀
  t₅: l0(X₀, X₁) → l2(X₀, 0) :|: X₀ ≤ 127
  t₆: l2(X₀, X₁) → l1(X₀, X₁) :|: 36 ≤ X₁ ∧ X₀+X₁ ≤ 163 ∧ X₀ ≤ 127 ∧ X₀ ≤ 127+X₁ ∧ X₁ ≤ 36 ∧ 0 ≤ X₁
  t₇: l2(X₀, X₁) → l2(X₀, 1+X₁) :|: X₁ ≤ 35 ∧ X₀+X₁ ≤ 163 ∧ X₀ ≤ 127 ∧ X₀ ≤ 127+X₁ ∧ X₁ ≤ 36 ∧ 0 ≤ X₁


MPRF for transition t₇: l2(X₀, X₁) → l2(X₀, 1+X₁) :|: X₁ ≤ 35 ∧ X₀+X₁ ≤ 163 ∧ X₀ ≤ 127 ∧ X₀ ≤ 127+X₁ ∧ X₁ ≤ 36 ∧ 0 ≤ X₁ of depth 1:
  new bound:
    37 {O(1)}

  MPRF:
    • l2: [37-X₁]




All Bounds
Timebounds
  Overall timebound:40 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: 37 {O(1)}


Costbounds
  Overall costbound: 40 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: 37 {O(1)}


Sizebounds
    t₄, X₀: X₀ {O(n)}
    t₄, X₁: 0 {O(1)}
    t₅, X₀: X₀ {O(n)}
    t₅, X₁: 0 {O(1)}
    t₆, X₀: X₀ {O(n)}
    t₆, X₁: 36 {O(1)}
    t₇, X₀: X₀ {O(n)}
    t₇, X₁: 36 {O(1)}

