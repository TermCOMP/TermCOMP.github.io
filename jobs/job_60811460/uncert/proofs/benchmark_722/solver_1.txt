WORST_CASE(Omega(n^1),O(n^1))

# LoAT Proof:
WORST_CASE(Omega(n^1),?)

WORST_CASE(Omega(n^1),?)
Initial ITS

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_4 -> 7
eval_start_5 -> 8
eval_start_bb1_in -> 9
eval_start_bb2_in -> 10
eval_start_bb3_in -> 11
eval_start_stop -> 12

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: -2+i1 == 0 /\ i1'=3, i3'=1+i3
   2: -3+i1 == 0 /\ i1'=4, i3'=1+i3
   3: -4+i1 == 0 /\ i1'=5, i3'=1+i3
   4: -5+i1 == 0 /\ i1'=6, i3'=1+i3
   5: -6+i1 == 0 /\ i1'=7, i3'=1+i3
   6: -7+i1 == 0 /\ i1'=8, i3'=1+i3
   7: -8+i1 == 0 /\ i1'=9, i3'=1+i3, i4'=i7, i5'=i8
   8: (-i6+i4 < 0 /\ -9+i1 == 0) /\ i1'=10, i3'=1+i3
   9: (-i6+i4 >= 0 /\ -9+i1 == 0) /\ i1'=11, i3'=1+i3
  10: (-i4+i5 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i4'=1+i4
  11: (-i4+i5 <= 0 /\ -i4+i5 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3
  12: (-i4+i5 <= 0 /\ -i4+i5 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i4'=1+i4, i5'=1+i5
  13: (-i4+i5 <= 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i5'=1+i5
  14: -11+i1 == 0 /\ i1'=12, i3'=1+i3

Dependency graph:
0 -> 1
1 -> 2
2 -> 3
3 -> 4
4 -> 5
5 -> 6
6 -> 7
7 -> 8, 7 -> 9
8 -> 10, 8 -> 11, 8 -> 12, 8 -> 13
9 -> 14
10 -> 8, 10 -> 9
11 -> 8, 11 -> 9
12 -> 8, 12 -> 9
13 -> 8, 13 -> 9

Chained Linear Paths

	Applied Chaining

	First rule:
	-1+i1 == 0 /\ i1'=2, i3'=1+i3
	Second rule:
	-2+i1 == 0 /\ i1'=3, i3'=1+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 0, 1
	
	Applied Chaining

	First rule:
	-3+i1 == 0 /\ i1'=4, i3'=1+i3
	Second rule:
	-4+i1 == 0 /\ i1'=5, i3'=1+i3
	New rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 2, 3
	
	Applied Chaining

	First rule:
	-5+i1 == 0 /\ i1'=6, i3'=1+i3
	Second rule:
	-6+i1 == 0 /\ i1'=7, i3'=1+i3
	New rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=7, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 4, 5
	
	Applied Chaining

	First rule:
	-7+i1 == 0 /\ i1'=8, i3'=1+i3
	Second rule:
	-8+i1 == 0 /\ i1'=9, i3'=1+i3, i4'=i7, i5'=i8
	New rule:
	(0 == 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3, i4'=i7, i5'=i8
	
	Applied Deletion

	Removed the following rules: 6, 7
	
	Applied Chaining

	First rule:
	(-i6+i4 >= 0 /\ -9+i1 == 0) /\ i1'=11, i3'=1+i3
	Second rule:
	-11+i1 == 0 /\ i1'=12, i3'=1+i3
	New rule:
	(0 == 0 /\ -i6+i4 >= 0 /\ -9+i1 == 0) /\ i1'=12, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 9, 14
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	Second rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	
	Applied Deletion

	Removed the following rules: 15, 16
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=7, i3'=2+i3
	Second rule:
	(0 == 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3, i4'=i7, i5'=i8
	New rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=9, i3'=4+i3, i4'=i7, i5'=i8
	
	Applied Deletion

	Removed the following rules: 17, 18
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	Second rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=9, i3'=4+i3, i4'=i7, i5'=i8
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=9, i3'=8+i3, i4'=i7, i5'=i8
	
	Applied Deletion

	Removed the following rules: 20, 21

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_4 -> 7
eval_start_5 -> 8
eval_start_bb1_in -> 9
eval_start_bb2_in -> 10
eval_start_bb3_in -> 11
eval_start_stop -> 12

Rules:
   8: (-i6+i4 < 0 /\ -9+i1 == 0) /\ i1'=10, i3'=1+i3
  10: (-i4+i5 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i4'=1+i4
  11: (-i4+i5 <= 0 /\ -i4+i5 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3
  12: (-i4+i5 <= 0 /\ -i4+i5 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i4'=1+i4, i5'=1+i5
  13: (-i4+i5 <= 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i5'=1+i5
  19: (0 == 0 /\ -i6+i4 >= 0 /\ -9+i1 == 0) /\ i1'=12, i3'=2+i3
  22: (0 == 0 /\ -1+i1 == 0) /\ i1'=9, i3'=8+i3, i4'=i7, i5'=i8

Dependency graph:
8 -> 10, 8 -> 11, 8 -> 12, 8 -> 13
10 -> 8, 10 -> 19
11 -> 8, 11 -> 19
12 -> 8, 12 -> 19
13 -> 8, 13 -> 19
22 -> 8, 22 -> 19

Preprocessed Transitions

	Simplified Guard

	Original rule:
	(0 == 0 /\ -i6+i4 >= 0 /\ -9+i1 == 0) /\ i1'=12, i3'=2+i3
	New rule:
	(-i6+i4 >= 0 /\ -9+i1 == 0) /\ i1'=12, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=9, i3'=8+i3, i4'=i7, i5'=i8
	New rule:
	-1+i1 == 0 /\ i1'=9, i3'=8+i3, i4'=i7, i5'=i8

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_4 -> 7
eval_start_5 -> 8
eval_start_bb1_in -> 9
eval_start_bb2_in -> 10
eval_start_bb3_in -> 11
eval_start_stop -> 12

Rules:
   8: (-i6+i4 < 0 /\ -9+i1 == 0) /\ i1'=10, i3'=1+i3
  10: (-i4+i5 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i4'=1+i4
  11: (-i4+i5 <= 0 /\ -i4+i5 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3
  12: (-i4+i5 <= 0 /\ -i4+i5 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i4'=1+i4, i5'=1+i5
  13: (-i4+i5 <= 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i5'=1+i5
  23: (-i6+i4 >= 0 /\ -9+i1 == 0) /\ i1'=12, i3'=2+i3
  24: -1+i1 == 0 /\ i1'=9, i3'=8+i3, i4'=i7, i5'=i8

Dependency graph:
8 -> 10, 8 -> 11, 8 -> 12, 8 -> 13
10 -> 8, 10 -> 23
11 -> 8, 11 -> 23
12 -> 8, 12 -> 23
13 -> 8, 13 -> 23
24 -> 8, 24 -> 23

Refined Dependency Graph

	Removed the following edges: 8 -> 11, 8 -> 12, 11 -> 8, 11 -> 23, 12 -> 8, 12 -> 23

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_4 -> 7
eval_start_5 -> 8
eval_start_bb1_in -> 9
eval_start_bb2_in -> 10
eval_start_bb3_in -> 11
eval_start_stop -> 12

Rules:
   8: (-i6+i4 < 0 /\ -9+i1 == 0) /\ i1'=10, i3'=1+i3
  10: (-i4+i5 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i4'=1+i4
  11: (-i4+i5 <= 0 /\ -i4+i5 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3
  12: (-i4+i5 <= 0 /\ -i4+i5 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i4'=1+i4, i5'=1+i5
  13: (-i4+i5 <= 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i5'=1+i5
  23: (-i6+i4 >= 0 /\ -9+i1 == 0) /\ i1'=12, i3'=2+i3
  24: -1+i1 == 0 /\ i1'=9, i3'=8+i3, i4'=i7, i5'=i8

Dependency graph:
8 -> 10, 8 -> 13
10 -> 8, 10 -> 23
13 -> 8, 13 -> 23
24 -> 8, 24 -> 23

Step with 24

	Trace

	24[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 23

	Trace

	24[(-1+i1 == 0)]
	23[(-i6+i4 >= 0 /\ -9+i1 == 0)]
	
	Blocked

	{}
	{}
	{}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	
	Blocked

	{}
	{23[T]}
	
Step with 8

	Trace

	24[(-1+i1 == 0)]
	8[(-i6+i4 < 0 /\ -9+i1 == 0)]
	
	Blocked

	{}
	{23[T]}
	{}
	
Step with 10

	Trace

	24[(-1+i1 == 0)]
	8[(-i6+i4 < 0 /\ -9+i1 == 0)]
	10[(-i4+i5 > 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{23[T]}
	{}
	{}
	
Poly(n^1)

Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -i6+i4 < 0 /\ -9+i1 == 0 /\ -i4+i5 > 0) /\ i1'=9, i3'=2+i3, i4'=1+i4
		New rule:
		(-i6+i4 < 0 /\ -9+i1 == 0 /\ -i4+i5 > 0) /\ i1'=9, i3'=2+i3, i4'=1+i4

	Loop Acceleration

	Original rule:
	(-i6+i4 < 0 /\ -9+i1 == 0 /\ -i4+i5 > 0) /\ i1'=9, i3'=2+i3, i4'=1+i4
	New rule:
	(-9+i1 >= 0 /\ 1+i6-i4-it29 > 0 /\ 9-i1 >= 0 /\ -1+it29 >= 0 /\ 1-i4-it29+i5 > 0) /\ i1'=i1, i3'=i3+2*it29, i4'=i4+it29

		-9+i1 >= 0 [0]: unchanged
		
		-i4+i5 > 0 [0]: montonic decrease yields 1-i4-it29+i5 > 0
		
		i6-i4 > 0 [0]: montonic decrease yields 1+i6-i4-it29 > 0
		
		9-i1 >= 0 [0]: unchanged
		
		Replacement map: {-9+i1 >= 0 -> -9+i1 >= 0, -i4+i5 > 0 -> 1-i4-it29+i5 > 0, i6-i4 > 0 -> 1+i6-i4-it29 > 0, 9-i1 >= 0 -> 9-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-9+i1 >= 0 /\ 1+i6-i4-it29 > 0 /\ 9-i1 >= 0 /\ -1+it29 >= 0 /\ 1-i4-it29+i5 > 0) /\ i1'=i1, i3'=i3+2*it29, i4'=i4+it29
	New rule:
	(-9+i1 >= 0 /\ 1+i6-i4-it29 > 0 /\ 9-i1 >= 0 /\ -1+it29 >= 0 /\ 1-i4-it29+i5 > 0) /\ i3'=i3+2*it29, i4'=i4+it29

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_4 -> 7
eval_start_5 -> 8
eval_start_bb1_in -> 9
eval_start_bb2_in -> 10
eval_start_bb3_in -> 11
eval_start_stop -> 12

Rules:
   8: (-i6+i4 < 0 /\ -9+i1 == 0) /\ i1'=10, i3'=1+i3
  10: (-i4+i5 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i4'=1+i4
  11: (-i4+i5 <= 0 /\ -i4+i5 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3
  12: (-i4+i5 <= 0 /\ -i4+i5 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i4'=1+i4, i5'=1+i5
  13: (-i4+i5 <= 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i5'=1+i5
  23: (-i6+i4 >= 0 /\ -9+i1 == 0) /\ i1'=12, i3'=2+i3
  24: -1+i1 == 0 /\ i1'=9, i3'=8+i3, i4'=i7, i5'=i8
  25: (-9+i1 >= 0 /\ 1+i6-i4-it29 > 0 /\ 9-i1 >= 0 /\ -1+it29 >= 0 /\ 1-i4-it29+i5 > 0) /\ i3'=i3+2*it29, i4'=i4+it29

Dependency graph:
8 -> 10, 8 -> 13
10 -> 8, 10 -> 23, 10 -> 25
13 -> 8, 13 -> 23, 13 -> 25
24 -> 8, 24 -> 23, 24 -> 25
25 -> 8, 25 -> 23

	Trace

	24[(-1+i1 == 0)]
	25[(-9+i1 >= 0 /\ 1+i6-i4-it29 > 0 /\ 9-i1 >= 0 /\ -1+it29 >= 0 /\ 1-i4-it29+i5 > 0)]
	
	Blocked

	{}
	{23[T]}
	{25[T]}
	
Step with 23

	Trace

	24[(-1+i1 == 0)]
	25[(-9+i1 >= 0 /\ 1+i6-i4-it29 > 0 /\ 9-i1 >= 0 /\ -1+it29 >= 0 /\ 1-i4-it29+i5 > 0)]
	23[(-i6+i4 >= 0 /\ -9+i1 == 0)]
	
	Blocked

	{}
	{23[T]}
	{25[T]}
	{}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	25[(-9+i1 >= 0 /\ 1+i6-i4-it29 > 0 /\ 9-i1 >= 0 /\ -1+it29 >= 0 /\ 1-i4-it29+i5 > 0)]
	
	Blocked

	{}
	{23[T]}
	{23[T], 25[T]}
	
Step with 8

	Trace

	24[(-1+i1 == 0)]
	25[(-9+i1 >= 0 /\ 1+i6-i4-it29 > 0 /\ 9-i1 >= 0 /\ -1+it29 >= 0 /\ 1-i4-it29+i5 > 0)]
	8[(-i6+i4 < 0 /\ -9+i1 == 0)]
	
	Blocked

	{}
	{23[T]}
	{23[T], 25[T]}
	{}
	
Step with 13

	Trace

	24[(-1+i1 == 0)]
	25[(-9+i1 >= 0 /\ 1+i6-i4-it29 > 0 /\ 9-i1 >= 0 /\ -1+it29 >= 0 /\ 1-i4-it29+i5 > 0)]
	8[(-i6+i4 < 0 /\ -9+i1 == 0)]
	13[(-i4+i5 <= 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{23[T]}
	{23[T], 25[T]}
	{}
	{}
	
Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -i6+i4 < 0 /\ -9+i1 == 0 /\ -i4+i5 <= 0) /\ i1'=9, i3'=2+i3, i5'=1+i5
		New rule:
		(-i6+i4 < 0 /\ -9+i1 == 0 /\ -i4+i5 <= 0) /\ i1'=9, i3'=2+i3, i5'=1+i5

	Loop Acceleration

	Original rule:
	(-i6+i4 < 0 /\ -9+i1 == 0 /\ -i4+i5 <= 0) /\ i1'=9, i3'=2+i3, i5'=1+i5
	New rule:
	(-9+i1 >= 0 /\ i6-i4 > 0 /\ -1+it91 >= 0 /\ 9-i1 >= 0 /\ 1-it91+i4-i5 >= 0) /\ i1'=i1, i3'=i3+2*it91, i5'=it91+i5

		-9+i1 >= 0 [0]: unchanged
		
		i6-i4 > 0 [0]: unchanged
		
		i4-i5 >= 0 [0]: montonic decrease yields 1-it91+i4-i5 >= 0
		
		9-i1 >= 0 [0]: unchanged
		
		Replacement map: {-9+i1 >= 0 -> -9+i1 >= 0, i6-i4 > 0 -> i6-i4 > 0, i4-i5 >= 0 -> 1-it91+i4-i5 >= 0, 9-i1 >= 0 -> 9-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-9+i1 >= 0 /\ i6-i4 > 0 /\ -1+it91 >= 0 /\ 9-i1 >= 0 /\ 1-it91+i4-i5 >= 0) /\ i1'=i1, i3'=i3+2*it91, i5'=it91+i5
	New rule:
	(-9+i1 >= 0 /\ i6-i4 > 0 /\ -1+it91 >= 0 /\ 9-i1 >= 0 /\ 1-it91+i4-i5 >= 0) /\ i3'=i3+2*it91, i5'=it91+i5
	
	Instantiation

	Original rule:
	(-9+i1 >= 0 /\ i6-i4 > 0 /\ -1+it91 >= 0 /\ 9-i1 >= 0 /\ 1-it91+i4-i5 >= 0) /\ i3'=i3+2*it91, i5'=it91+i5
	New rule:
	(0 >= 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ 9-i1 >= 0) /\ i3'=2+i3+2*i4-2*i5, i5'=1+i4

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_4 -> 7
eval_start_5 -> 8
eval_start_bb1_in -> 9
eval_start_bb2_in -> 10
eval_start_bb3_in -> 11
eval_start_stop -> 12

Rules:
   8: (-i6+i4 < 0 /\ -9+i1 == 0) /\ i1'=10, i3'=1+i3
  10: (-i4+i5 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i4'=1+i4
  11: (-i4+i5 <= 0 /\ -i4+i5 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3
  12: (-i4+i5 <= 0 /\ -i4+i5 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i4'=1+i4, i5'=1+i5
  13: (-i4+i5 <= 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i5'=1+i5
  23: (-i6+i4 >= 0 /\ -9+i1 == 0) /\ i1'=12, i3'=2+i3
  24: -1+i1 == 0 /\ i1'=9, i3'=8+i3, i4'=i7, i5'=i8
  25: (-9+i1 >= 0 /\ 1+i6-i4-it29 > 0 /\ 9-i1 >= 0 /\ -1+it29 >= 0 /\ 1-i4-it29+i5 > 0) /\ i3'=i3+2*it29, i4'=i4+it29
  26: (0 >= 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ 9-i1 >= 0) /\ i3'=2+i3+2*i4-2*i5, i5'=1+i4

Dependency graph:
8 -> 10, 8 -> 13
10 -> 8, 10 -> 23, 10 -> 25, 10 -> 26
13 -> 8, 13 -> 23, 13 -> 25, 13 -> 26
24 -> 8, 24 -> 23, 24 -> 25, 24 -> 26
25 -> 8, 25 -> 23, 25 -> 26
26 -> 8, 26 -> 23, 26 -> 25

	Trace

	24[(-1+i1 == 0)]
	25[(-9+i1 >= 0 /\ 1+i6-i4-it29 > 0 /\ 9-i1 >= 0 /\ -1+it29 >= 0 /\ 1-i4-it29+i5 > 0)]
	26[(0 >= 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ 9-i1 >= 0)]
	
	Blocked

	{}
	{23[T]}
	{23[T], 25[T]}
	{26[T]}
	
Accelerate

		Extracted Implied Equalities

		Original rule:
		(0 >= 0 /\ -9+i1 >= 0 /\ i6-i4-it29 > 0 /\ 1+i6-i4-it29 > 0 /\ 9-i1 >= 0 /\ -1+it29 >= 0 /\ i4+it29-i5 >= 0 /\ 1-i4-it29+i5 > 0) /\ i3'=2+i3+2*i4+4*it29-2*i5, i4'=i4+it29, i5'=1+i4+it29
		New rule:
		(0 >= 0 /\ -9+i1 >= 0 /\ i6-i4-it29 > 0 /\ 1+i6-i4-it29 > 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -1+it29 >= 0 /\ i4+it29-i5 >= 0 /\ 1-i4-it29+i5 > 0 /\ -i4-it29+i5 == 0) /\ i3'=2+i3+2*i4+4*it29-2*i5, i4'=i4+it29, i5'=1+i4+it29
		
		Propagated Equalities

		Original rule:
		(0 >= 0 /\ -9+i1 >= 0 /\ i6-i4-it29 > 0 /\ 1+i6-i4-it29 > 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -1+it29 >= 0 /\ i4+it29-i5 >= 0 /\ 1-i4-it29+i5 > 0 /\ -i4-it29+i5 == 0) /\ i3'=2+i3+2*i4+4*it29-2*i5, i4'=i4+it29, i5'=1+i4+it29
		New rule:
		(0 >= 0 /\ 0 == 0 /\ 1 > 0 /\ -9+i1 >= 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -1-i4+i5 >= 0 /\ 1+i6-i5 > 0 /\ i6-i5 > 0) /\ i3'=2+i3-2*i4+2*i5, i4'=i5, i5'=1+i5
		
			propagated equality it29 = -i4+i5
			
		Simplified Guard

		Original rule:
		(0 >= 0 /\ 0 == 0 /\ 1 > 0 /\ -9+i1 >= 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -1-i4+i5 >= 0 /\ 1+i6-i5 > 0 /\ i6-i5 > 0) /\ i3'=2+i3-2*i4+2*i5, i4'=i5, i5'=1+i5
		New rule:
		(-9+i1 >= 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -1-i4+i5 >= 0 /\ 1+i6-i5 > 0 /\ i6-i5 > 0) /\ i3'=2+i3-2*i4+2*i5, i4'=i5, i5'=1+i5

	Loop Acceleration

	Original rule:
	(-9+i1 >= 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -1-i4+i5 >= 0 /\ 1+i6-i5 > 0 /\ i6-i5 > 0) /\ i3'=2+i3-2*i4+2*i5, i4'=i5, i5'=1+i5
	New rule:
	(0 >= 0 /\ -9+i1 >= 0 /\ -1+i6-i5 > 0 /\ i6-it99-i5 > 0 /\ 1+i6-it99-i5 > 0 /\ -1+it99 >= 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -1-i4+i5 >= 0 /\ 1+i6-i5 > 0 /\ i6-i5 > 0) /\ i1'=i1, i3'=2+i3-2*i4+4*it99+2*i5, i4'=it99+i5, i5'=1+it99+i5

		-9+i1 >= 0 [0]: unchanged
		
		9-i1 >= 0 [0]: unchanged
		
		-1-i4+i5 >= 0 [0]: trivial
		
		1+i6-i5 > 0 [0]: montonic decrease yields (2+i6-it99-i5 > 0 /\ 1+i6-i5 > 0)
		
		i6-i5 > 0 [0]: montonic decrease yields (1+i6-it99-i5 > 0 /\ i6-i5 > 0)
		
		Replacement map: {-9+i1 >= 0 -> -9+i1 >= 0, 9-i1 >= 0 -> 9-i1 >= 0, -1-i4+i5 >= 0 -> -1-i4+i5 >= 0, 1+i6-i5 > 0 -> (2+i6-it99-i5 > 0 /\ 1+i6-i5 > 0), i6-i5 > 0 -> (1+i6-it99-i5 > 0 /\ i6-i5 > 0)}

	Extracted Implied Equalities

	Original rule:
	(0 >= 0 /\ -9+i1 >= 0 /\ -1+i6-i5 > 0 /\ i6-it99-i5 > 0 /\ 1+i6-it99-i5 > 0 /\ -1+it99 >= 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -1-i4+i5 >= 0 /\ 1+i6-i5 > 0 /\ i6-i5 > 0) /\ i1'=i1, i3'=2+i3-2*i4+4*it99+2*i5, i4'=it99+i5, i5'=1+it99+i5
	New rule:
	(0 >= 0 /\ -9+i1 >= 0 /\ -1+i6-i5 > 0 /\ i6-it99-i5 > 0 /\ 1+i6-it99-i5 > 0 /\ -1+it99 >= 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -1-i4+i5 >= 0 /\ 1+i6-i5 > 0 /\ i6-i5 > 0) /\ i1'=i1, i3'=2+i3-2*i4+4*it99+2*i5, i4'=it99+i5, i5'=1+it99+i5
	
	Simplified Guard

	Original rule:
	(0 >= 0 /\ -9+i1 >= 0 /\ -1+i6-i5 > 0 /\ i6-it99-i5 > 0 /\ 1+i6-it99-i5 > 0 /\ -1+it99 >= 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -1-i4+i5 >= 0 /\ 1+i6-i5 > 0 /\ i6-i5 > 0) /\ i1'=i1, i3'=2+i3-2*i4+4*it99+2*i5, i4'=it99+i5, i5'=1+it99+i5
	New rule:
	(-9+i1 >= 0 /\ -1+i6-i5 > 0 /\ i6-it99-i5 > 0 /\ 1+i6-it99-i5 > 0 /\ -1+it99 >= 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -1-i4+i5 >= 0 /\ 1+i6-i5 > 0 /\ i6-i5 > 0) /\ i1'=i1, i3'=2+i3-2*i4+4*it99+2*i5, i4'=it99+i5, i5'=1+it99+i5
	
	Removed Trivial Updates

	Original rule:
	(-9+i1 >= 0 /\ -1+i6-i5 > 0 /\ i6-it99-i5 > 0 /\ 1+i6-it99-i5 > 0 /\ -1+it99 >= 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -1-i4+i5 >= 0 /\ 1+i6-i5 > 0 /\ i6-i5 > 0) /\ i1'=i1, i3'=2+i3-2*i4+4*it99+2*i5, i4'=it99+i5, i5'=1+it99+i5
	New rule:
	(-9+i1 >= 0 /\ -1+i6-i5 > 0 /\ i6-it99-i5 > 0 /\ 1+i6-it99-i5 > 0 /\ -1+it99 >= 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -1-i4+i5 >= 0 /\ 1+i6-i5 > 0 /\ i6-i5 > 0) /\ i3'=2+i3-2*i4+4*it99+2*i5, i4'=it99+i5, i5'=1+it99+i5
	
	Instantiation

	Original rule:
	(-9+i1 >= 0 /\ -1+i6-i5 > 0 /\ i6-it99-i5 > 0 /\ 1+i6-it99-i5 > 0 /\ -1+it99 >= 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -1-i4+i5 >= 0 /\ 1+i6-i5 > 0 /\ i6-i5 > 0) /\ i3'=2+i3-2*i4+4*it99+2*i5, i4'=it99+i5, i5'=1+it99+i5
	New rule:
	(1 > 0 /\ -9+i1 >= 0 /\ -1+i6-i5 > 0 /\ 2 > 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -2+i6-i5 >= 0 /\ -1-i4+i5 >= 0 /\ 1+i6-i5 > 0 /\ i6-i5 > 0) /\ i3'=-2+4*i6+i3-2*i4-2*i5, i4'=-1+i6, i5'=i6

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_4 -> 7
eval_start_5 -> 8
eval_start_bb1_in -> 9
eval_start_bb2_in -> 10
eval_start_bb3_in -> 11
eval_start_stop -> 12

Rules:
   8: (-i6+i4 < 0 /\ -9+i1 == 0) /\ i1'=10, i3'=1+i3
  10: (-i4+i5 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i4'=1+i4
  11: (-i4+i5 <= 0 /\ -i4+i5 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3
  12: (-i4+i5 <= 0 /\ -i4+i5 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i4'=1+i4, i5'=1+i5
  13: (-i4+i5 <= 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i5'=1+i5
  23: (-i6+i4 >= 0 /\ -9+i1 == 0) /\ i1'=12, i3'=2+i3
  24: -1+i1 == 0 /\ i1'=9, i3'=8+i3, i4'=i7, i5'=i8
  25: (-9+i1 >= 0 /\ 1+i6-i4-it29 > 0 /\ 9-i1 >= 0 /\ -1+it29 >= 0 /\ 1-i4-it29+i5 > 0) /\ i3'=i3+2*it29, i4'=i4+it29
  26: (0 >= 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ 9-i1 >= 0) /\ i3'=2+i3+2*i4-2*i5, i5'=1+i4
  27: (1 > 0 /\ -9+i1 >= 0 /\ -1+i6-i5 > 0 /\ 2 > 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -2+i6-i5 >= 0 /\ -1-i4+i5 >= 0 /\ 1+i6-i5 > 0 /\ i6-i5 > 0) /\ i3'=-2+4*i6+i3-2*i4-2*i5, i4'=-1+i6, i5'=i6

Dependency graph:
8 -> 10, 8 -> 13
10 -> 8, 10 -> 23, 10 -> 25, 10 -> 26, 10 -> 27
13 -> 8, 13 -> 23, 13 -> 25, 13 -> 26, 13 -> 27
24 -> 8, 24 -> 23, 24 -> 25, 24 -> 26, 24 -> 27
25 -> 8, 25 -> 23, 25 -> 26
26 -> 8, 26 -> 23, 26 -> 25, 26 -> 27
27 -> 8, 27 -> 23, 27 -> 25

	Trace

	24[(-1+i1 == 0)]
	27[(1 > 0 /\ -9+i1 >= 0 /\ -1+i6-i5 > 0 /\ 2 > 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -2+i6-i5 >= 0 /\ -1-i4+i5 >= 0 /\ 1+i6-i5 > 0 /\ i6-i5 > 0)]
	
	Blocked

	{}
	{23[T]}
	{27[T]}
	
Step with 25

	Trace

	24[(-1+i1 == 0)]
	27[(1 > 0 /\ -9+i1 >= 0 /\ -1+i6-i5 > 0 /\ 2 > 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -2+i6-i5 >= 0 /\ -1-i4+i5 >= 0 /\ 1+i6-i5 > 0 /\ i6-i5 > 0)]
	25[(-9+i1 >= 0 /\ 1+i6-i4-it29 > 0 /\ 9-i1 >= 0 /\ -1+it29 >= 0 /\ 1-i4-it29+i5 > 0)]
	
	Blocked

	{}
	{23[T]}
	{27[T]}
	{25[T]}
	
Step with 23

	Trace

	24[(-1+i1 == 0)]
	27[(1 > 0 /\ -9+i1 >= 0 /\ -1+i6-i5 > 0 /\ 2 > 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -2+i6-i5 >= 0 /\ -1-i4+i5 >= 0 /\ 1+i6-i5 > 0 /\ i6-i5 > 0)]
	25[(-9+i1 >= 0 /\ 1+i6-i4-it29 > 0 /\ 9-i1 >= 0 /\ -1+it29 >= 0 /\ 1-i4-it29+i5 > 0)]
	23[(-i6+i4 >= 0 /\ -9+i1 == 0)]
	
	Blocked

	{}
	{23[T]}
	{27[T]}
	{8[T], 25[T], 26[T]}
	{}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	27[(1 > 0 /\ -9+i1 >= 0 /\ -1+i6-i5 > 0 /\ 2 > 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -2+i6-i5 >= 0 /\ -1-i4+i5 >= 0 /\ 1+i6-i5 > 0 /\ i6-i5 > 0)]
	25[(-9+i1 >= 0 /\ 1+i6-i4-it29 > 0 /\ 9-i1 >= 0 /\ -1+it29 >= 0 /\ 1-i4-it29+i5 > 0)]
	
	Blocked

	{}
	{23[T]}
	{27[T]}
	{8[T], 23[T], 25[T], 26[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	27[(1 > 0 /\ -9+i1 >= 0 /\ -1+i6-i5 > 0 /\ 2 > 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -2+i6-i5 >= 0 /\ -1-i4+i5 >= 0 /\ 1+i6-i5 > 0 /\ i6-i5 > 0)]
	
	Blocked

	{}
	{23[T]}
	{25[T], 27[T]}
	
Step with 8

	Trace

	24[(-1+i1 == 0)]
	27[(1 > 0 /\ -9+i1 >= 0 /\ -1+i6-i5 > 0 /\ 2 > 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -2+i6-i5 >= 0 /\ -1-i4+i5 >= 0 /\ 1+i6-i5 > 0 /\ i6-i5 > 0)]
	8[(-i6+i4 < 0 /\ -9+i1 == 0)]
	
	Blocked

	{}
	{23[T]}
	{25[T], 27[T]}
	{}
	
Step with 10

	Trace

	24[(-1+i1 == 0)]
	27[(1 > 0 /\ -9+i1 >= 0 /\ -1+i6-i5 > 0 /\ 2 > 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -2+i6-i5 >= 0 /\ -1-i4+i5 >= 0 /\ 1+i6-i5 > 0 /\ i6-i5 > 0)]
	8[(-i6+i4 < 0 /\ -9+i1 == 0)]
	10[(-i4+i5 > 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{23[T]}
	{25[T], 27[T]}
	{13[T]}
	{}
	
Covered

	Trace

	24[(-1+i1 == 0)]
	27[(1 > 0 /\ -9+i1 >= 0 /\ -1+i6-i5 > 0 /\ 2 > 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -2+i6-i5 >= 0 /\ -1-i4+i5 >= 0 /\ 1+i6-i5 > 0 /\ i6-i5 > 0)]
	8[(-i6+i4 < 0 /\ -9+i1 == 0)]
	
	Blocked

	{}
	{23[T]}
	{25[T], 27[T]}
	{10[T], 13[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	27[(1 > 0 /\ -9+i1 >= 0 /\ -1+i6-i5 > 0 /\ 2 > 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -2+i6-i5 >= 0 /\ -1-i4+i5 >= 0 /\ 1+i6-i5 > 0 /\ i6-i5 > 0)]
	
	Blocked

	{}
	{23[T]}
	{8[T], 25[T], 27[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	
	Blocked

	{}
	{23[T], 27[T]}
	
Step with 26

	Trace

	24[(-1+i1 == 0)]
	26[(0 >= 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ 9-i1 >= 0)]
	
	Blocked

	{}
	{23[T], 27[T]}
	{26[T]}
	
Step with 27

	Trace

	24[(-1+i1 == 0)]
	26[(0 >= 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ 9-i1 >= 0)]
	27[(1 > 0 /\ -9+i1 >= 0 /\ -1+i6-i5 > 0 /\ 2 > 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -2+i6-i5 >= 0 /\ -1-i4+i5 >= 0 /\ 1+i6-i5 > 0 /\ i6-i5 > 0)]
	
	Blocked

	{}
	{23[T], 27[T]}
	{26[T]}
	{27[T]}
	
Step with 25

	Trace

	24[(-1+i1 == 0)]
	26[(0 >= 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ 9-i1 >= 0)]
	27[(1 > 0 /\ -9+i1 >= 0 /\ -1+i6-i5 > 0 /\ 2 > 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -2+i6-i5 >= 0 /\ -1-i4+i5 >= 0 /\ 1+i6-i5 > 0 /\ i6-i5 > 0)]
	25[(-9+i1 >= 0 /\ 1+i6-i4-it29 > 0 /\ 9-i1 >= 0 /\ -1+it29 >= 0 /\ 1-i4-it29+i5 > 0)]
	
	Blocked

	{}
	{23[T], 27[T]}
	{26[T]}
	{27[T]}
	{25[T]}
	
Step with 23

	Trace

	24[(-1+i1 == 0)]
	26[(0 >= 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ 9-i1 >= 0)]
	27[(1 > 0 /\ -9+i1 >= 0 /\ -1+i6-i5 > 0 /\ 2 > 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -2+i6-i5 >= 0 /\ -1-i4+i5 >= 0 /\ 1+i6-i5 > 0 /\ i6-i5 > 0)]
	25[(-9+i1 >= 0 /\ 1+i6-i4-it29 > 0 /\ 9-i1 >= 0 /\ -1+it29 >= 0 /\ 1-i4-it29+i5 > 0)]
	23[(-i6+i4 >= 0 /\ -9+i1 == 0)]
	
	Blocked

	{}
	{23[T], 27[T]}
	{26[T]}
	{27[T]}
	{25[T]}
	{}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	26[(0 >= 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ 9-i1 >= 0)]
	27[(1 > 0 /\ -9+i1 >= 0 /\ -1+i6-i5 > 0 /\ 2 > 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -2+i6-i5 >= 0 /\ -1-i4+i5 >= 0 /\ 1+i6-i5 > 0 /\ i6-i5 > 0)]
	25[(-9+i1 >= 0 /\ 1+i6-i4-it29 > 0 /\ 9-i1 >= 0 /\ -1+it29 >= 0 /\ 1-i4-it29+i5 > 0)]
	
	Blocked

	{}
	{23[T], 27[T]}
	{26[T]}
	{27[T]}
	{23[T], 25[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	26[(0 >= 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ 9-i1 >= 0)]
	27[(1 > 0 /\ -9+i1 >= 0 /\ -1+i6-i5 > 0 /\ 2 > 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -2+i6-i5 >= 0 /\ -1-i4+i5 >= 0 /\ 1+i6-i5 > 0 /\ i6-i5 > 0)]
	
	Blocked

	{}
	{23[T], 27[T]}
	{26[T]}
	{25[T], 27[T]}
	
Step with 8

	Trace

	24[(-1+i1 == 0)]
	26[(0 >= 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ 9-i1 >= 0)]
	27[(1 > 0 /\ -9+i1 >= 0 /\ -1+i6-i5 > 0 /\ 2 > 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -2+i6-i5 >= 0 /\ -1-i4+i5 >= 0 /\ 1+i6-i5 > 0 /\ i6-i5 > 0)]
	8[(-i6+i4 < 0 /\ -9+i1 == 0)]
	
	Blocked

	{}
	{23[T], 27[T]}
	{26[T]}
	{23[T], 25[T], 27[T]}
	{}
	
Step with 10

	Trace

	24[(-1+i1 == 0)]
	26[(0 >= 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ 9-i1 >= 0)]
	27[(1 > 0 /\ -9+i1 >= 0 /\ -1+i6-i5 > 0 /\ 2 > 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -2+i6-i5 >= 0 /\ -1-i4+i5 >= 0 /\ 1+i6-i5 > 0 /\ i6-i5 > 0)]
	8[(-i6+i4 < 0 /\ -9+i1 == 0)]
	10[(-i4+i5 > 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{23[T], 27[T]}
	{26[T]}
	{23[T], 25[T], 27[T]}
	{}
	{}
	
Covered

	Trace

	24[(-1+i1 == 0)]
	26[(0 >= 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ 9-i1 >= 0)]
	27[(1 > 0 /\ -9+i1 >= 0 /\ -1+i6-i5 > 0 /\ 2 > 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -2+i6-i5 >= 0 /\ -1-i4+i5 >= 0 /\ 1+i6-i5 > 0 /\ i6-i5 > 0)]
	8[(-i6+i4 < 0 /\ -9+i1 == 0)]
	
	Blocked

	{}
	{23[T], 27[T]}
	{26[T]}
	{23[T], 25[T], 27[T]}
	{10[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	26[(0 >= 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ 9-i1 >= 0)]
	27[(1 > 0 /\ -9+i1 >= 0 /\ -1+i6-i5 > 0 /\ 2 > 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -2+i6-i5 >= 0 /\ -1-i4+i5 >= 0 /\ 1+i6-i5 > 0 /\ i6-i5 > 0)]
	
	Blocked

	{}
	{23[T], 27[T]}
	{26[T]}
	{8[T], 23[T], 25[T], 27[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	26[(0 >= 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ 9-i1 >= 0)]
	
	Blocked

	{}
	{23[T], 27[T]}
	{26[T], 27[T]}
	
Step with 8

	Trace

	24[(-1+i1 == 0)]
	26[(0 >= 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ 9-i1 >= 0)]
	8[(-i6+i4 < 0 /\ -9+i1 == 0)]
	
	Blocked

	{}
	{23[T], 27[T]}
	{26[T], 27[T]}
	{}
	
Step with 10

	Trace

	24[(-1+i1 == 0)]
	26[(0 >= 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ 9-i1 >= 0)]
	8[(-i6+i4 < 0 /\ -9+i1 == 0)]
	10[(-i4+i5 > 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{23[T], 27[T]}
	{26[T], 27[T]}
	{13[T]}
	{}
	
Covered

	Trace

	24[(-1+i1 == 0)]
	26[(0 >= 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ 9-i1 >= 0)]
	8[(-i6+i4 < 0 /\ -9+i1 == 0)]
	
	Blocked

	{}
	{23[T], 27[T]}
	{26[T], 27[T]}
	{10[T], 13[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	26[(0 >= 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ 9-i1 >= 0)]
	
	Blocked

	{}
	{23[T], 27[T]}
	{8[T], 26[T], 27[T]}
	
Step with 25

	Trace

	24[(-1+i1 == 0)]
	26[(0 >= 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ 9-i1 >= 0)]
	25[(-9+i1 >= 0 /\ 1+i6-i4-it29 > 0 /\ 9-i1 >= 0 /\ -1+it29 >= 0 /\ 1-i4-it29+i5 > 0)]
	
	Blocked

	{}
	{23[T], 27[T]}
	{8[T], 26[T], 27[T]}
	{25[T]}
	
Accelerate

		Extracted Implied Equalities

		Original rule:
		(0 >= 0 /\ -9+i1 >= 0 /\ 1+i6-i4-it29 > 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ 9-i1 >= 0 /\ -1+it29 >= 0 /\ 2-it29 > 0) /\ i3'=2+i3+2*i4+2*it29-2*i5, i4'=i4+it29, i5'=1+i4
		New rule:
		(0 >= 0 /\ -9+i1 >= 0 /\ 1+i6-i4-it29 > 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ 1-it29 == 0 /\ -1+it29 >= 0 /\ 2-it29 > 0) /\ i3'=2+i3+2*i4+2*it29-2*i5, i4'=i4+it29, i5'=1+i4
		
		Propagated Equalities

		Original rule:
		(0 >= 0 /\ -9+i1 >= 0 /\ 1+i6-i4-it29 > 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ 1-it29 == 0 /\ -1+it29 >= 0 /\ 2-it29 > 0) /\ i3'=2+i3+2*i4+2*it29-2*i5, i4'=i4+it29, i5'=1+i4
		New rule:
		(0 >= 0 /\ 0 == 0 /\ 1 > 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ 9-i1 >= 0 /\ 9-i1 == 0) /\ i3'=4+i3+2*i4-2*i5, i4'=1+i4, i5'=1+i4
		
			propagated equality it29 = 1
			
		Simplified Guard

		Original rule:
		(0 >= 0 /\ 0 == 0 /\ 1 > 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ 9-i1 >= 0 /\ 9-i1 == 0) /\ i3'=4+i3+2*i4-2*i5, i4'=1+i4, i5'=1+i4
		New rule:
		(-9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ 9-i1 >= 0 /\ 9-i1 == 0) /\ i3'=4+i3+2*i4-2*i5, i4'=1+i4, i5'=1+i4

	Loop Acceleration

	Original rule:
	(-9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ 9-i1 >= 0 /\ 9-i1 == 0) /\ i3'=4+i3+2*i4-2*i5, i4'=1+i4, i5'=1+i4
	New rule:
	(0 >= 0 /\ -1+it201 >= 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ -1+i6-i4 > 0 /\ i6-i4-it201 > 0 /\ 9-i1 >= 0 /\ 9-i1 == 0) /\ i1'=i1, i3'=4+i3+2*i4-2*i5+4*it201, i4'=1+i4+it201, i5'=1+i4+it201

		-9+i1 >= 0 [0]: unchanged
		
		i6-i4 > 0 [0]: montonic decrease yields (i6-i4 > 0 /\ 1+i6-i4-it201 > 0)
		
		i4-i5 >= 0 [0]: trivial
		
		9-i1 >= 0 [0]: unchanged
		
		Replacement map: {-9+i1 >= 0 -> -9+i1 >= 0, i6-i4 > 0 -> (i6-i4 > 0 /\ 1+i6-i4-it201 > 0), i4-i5 >= 0 -> i4-i5 >= 0, 9-i1 >= 0 -> 9-i1 >= 0}

	Extracted Implied Equalities

	Original rule:
	(0 >= 0 /\ -1+it201 >= 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ -1+i6-i4 > 0 /\ i6-i4-it201 > 0 /\ 9-i1 >= 0 /\ 9-i1 == 0) /\ i1'=i1, i3'=4+i3+2*i4-2*i5+4*it201, i4'=1+i4+it201, i5'=1+i4+it201
	New rule:
	(0 >= 0 /\ -1+it201 >= 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ -1+i6-i4 > 0 /\ i6-i4-it201 > 0 /\ 9-i1 >= 0 /\ 9-i1 == 0) /\ i1'=i1, i3'=4+i3+2*i4-2*i5+4*it201, i4'=1+i4+it201, i5'=1+i4+it201
	
	Simplified Guard

	Original rule:
	(0 >= 0 /\ -1+it201 >= 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ -1+i6-i4 > 0 /\ i6-i4-it201 > 0 /\ 9-i1 >= 0 /\ 9-i1 == 0) /\ i1'=i1, i3'=4+i3+2*i4-2*i5+4*it201, i4'=1+i4+it201, i5'=1+i4+it201
	New rule:
	(-1+it201 >= 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ -1+i6-i4 > 0 /\ i6-i4-it201 > 0 /\ 9-i1 >= 0 /\ 9-i1 == 0) /\ i1'=i1, i3'=4+i3+2*i4-2*i5+4*it201, i4'=1+i4+it201, i5'=1+i4+it201
	
	Removed Trivial Updates

	Original rule:
	(-1+it201 >= 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ -1+i6-i4 > 0 /\ i6-i4-it201 > 0 /\ 9-i1 >= 0 /\ 9-i1 == 0) /\ i1'=i1, i3'=4+i3+2*i4-2*i5+4*it201, i4'=1+i4+it201, i5'=1+i4+it201
	New rule:
	(-1+it201 >= 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ -1+i6-i4 > 0 /\ i6-i4-it201 > 0 /\ 9-i1 >= 0 /\ 9-i1 == 0) /\ i3'=4+i3+2*i4-2*i5+4*it201, i4'=1+i4+it201, i5'=1+i4+it201
	
	Instantiation

	Original rule:
	(-1+it201 >= 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ -1+i6-i4 > 0 /\ i6-i4-it201 > 0 /\ 9-i1 >= 0 /\ 9-i1 == 0) /\ i3'=4+i3+2*i4-2*i5+4*it201, i4'=1+i4+it201, i5'=1+i4+it201
	New rule:
	(1 > 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ -2+i6-i4 >= 0 /\ -1+i6-i4 > 0 /\ 9-i1 >= 0 /\ 9-i1 == 0) /\ i3'=4*i6+i3-2*i4-2*i5, i4'=i6, i5'=i6

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_4 -> 7
eval_start_5 -> 8
eval_start_bb1_in -> 9
eval_start_bb2_in -> 10
eval_start_bb3_in -> 11
eval_start_stop -> 12

Rules:
   8: (-i6+i4 < 0 /\ -9+i1 == 0) /\ i1'=10, i3'=1+i3
  10: (-i4+i5 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i4'=1+i4
  11: (-i4+i5 <= 0 /\ -i4+i5 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3
  12: (-i4+i5 <= 0 /\ -i4+i5 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i4'=1+i4, i5'=1+i5
  13: (-i4+i5 <= 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i5'=1+i5
  23: (-i6+i4 >= 0 /\ -9+i1 == 0) /\ i1'=12, i3'=2+i3
  24: -1+i1 == 0 /\ i1'=9, i3'=8+i3, i4'=i7, i5'=i8
  25: (-9+i1 >= 0 /\ 1+i6-i4-it29 > 0 /\ 9-i1 >= 0 /\ -1+it29 >= 0 /\ 1-i4-it29+i5 > 0) /\ i3'=i3+2*it29, i4'=i4+it29
  26: (0 >= 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ 9-i1 >= 0) /\ i3'=2+i3+2*i4-2*i5, i5'=1+i4
  27: (1 > 0 /\ -9+i1 >= 0 /\ -1+i6-i5 > 0 /\ 2 > 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -2+i6-i5 >= 0 /\ -1-i4+i5 >= 0 /\ 1+i6-i5 > 0 /\ i6-i5 > 0) /\ i3'=-2+4*i6+i3-2*i4-2*i5, i4'=-1+i6, i5'=i6
  28: (1 > 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ -2+i6-i4 >= 0 /\ -1+i6-i4 > 0 /\ 9-i1 >= 0 /\ 9-i1 == 0) /\ i3'=4*i6+i3-2*i4-2*i5, i4'=i6, i5'=i6

Dependency graph:
8 -> 10, 8 -> 13
10 -> 8, 10 -> 23, 10 -> 25, 10 -> 26, 10 -> 27, 10 -> 28
13 -> 8, 13 -> 23, 13 -> 25, 13 -> 26, 13 -> 27, 13 -> 28
24 -> 8, 24 -> 23, 24 -> 25, 24 -> 26, 24 -> 27, 24 -> 28
25 -> 8, 25 -> 23, 25 -> 26, 25 -> 28
26 -> 8, 26 -> 23, 26 -> 25, 26 -> 27
27 -> 8, 27 -> 23, 27 -> 25
28 -> 8, 28 -> 23, 28 -> 26

	Trace

	24[(-1+i1 == 0)]
	28[(1 > 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ -2+i6-i4 >= 0 /\ -1+i6-i4 > 0 /\ 9-i1 >= 0 /\ 9-i1 == 0)]
	
	Blocked

	{}
	{23[T], 27[T]}
	{28[T]}
	
Step with 23

	Trace

	24[(-1+i1 == 0)]
	28[(1 > 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ -2+i6-i4 >= 0 /\ -1+i6-i4 > 0 /\ 9-i1 >= 0 /\ 9-i1 == 0)]
	23[(-i6+i4 >= 0 /\ -9+i1 == 0)]
	
	Blocked

	{}
	{23[T], 27[T]}
	{8[T], 28[T]}
	{}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	28[(1 > 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ -2+i6-i4 >= 0 /\ -1+i6-i4 > 0 /\ 9-i1 >= 0 /\ 9-i1 == 0)]
	
	Blocked

	{}
	{23[T], 27[T]}
	{8[T], 23[T], 28[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	
	Blocked

	{}
	{23[T], 27[T], 28[T]}
	
Step with 26

	Trace

	24[(-1+i1 == 0)]
	26[(0 >= 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ 9-i1 >= 0)]
	
	Blocked

	{}
	{23[T], 27[T], 28[T]}
	{26[T]}
	
Step with 25

	Trace

	24[(-1+i1 == 0)]
	26[(0 >= 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ 9-i1 >= 0)]
	25[(-9+i1 >= 0 /\ 1+i6-i4-it29 > 0 /\ 9-i1 >= 0 /\ -1+it29 >= 0 /\ 1-i4-it29+i5 > 0)]
	
	Blocked

	{}
	{23[T], 27[T], 28[T]}
	{23[T], 26[T]}
	{25[T]}
	
Covered

	Trace

	24[(-1+i1 == 0)]
	26[(0 >= 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ 9-i1 >= 0)]
	
	Blocked

	{}
	{23[T], 27[T], 28[T]}
	{23[T], 25[T], 26[T]}
	
Step with 8

	Trace

	24[(-1+i1 == 0)]
	26[(0 >= 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ 9-i1 >= 0)]
	8[(-i6+i4 < 0 /\ -9+i1 == 0)]
	
	Blocked

	{}
	{23[T], 27[T], 28[T]}
	{23[T], 25[T], 26[T]}
	{}
	
Step with 10

	Trace

	24[(-1+i1 == 0)]
	26[(0 >= 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ 9-i1 >= 0)]
	8[(-i6+i4 < 0 /\ -9+i1 == 0)]
	10[(-i4+i5 > 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{23[T], 27[T], 28[T]}
	{23[T], 25[T], 26[T]}
	{13[T]}
	{}
	
Covered

	Trace

	24[(-1+i1 == 0)]
	26[(0 >= 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ 9-i1 >= 0)]
	8[(-i6+i4 < 0 /\ -9+i1 == 0)]
	
	Blocked

	{}
	{23[T], 27[T], 28[T]}
	{23[T], 25[T], 26[T]}
	{10[T], 13[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	26[(0 >= 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ 9-i1 >= 0)]
	
	Blocked

	{}
	{23[T], 27[T], 28[T]}
	{8[T], 23[T], 25[T], 26[T]}
	
Step with 27

	Trace

	24[(-1+i1 == 0)]
	26[(0 >= 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ 9-i1 >= 0)]
	27[(1 > 0 /\ -9+i1 >= 0 /\ -1+i6-i5 > 0 /\ 2 > 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -2+i6-i5 >= 0 /\ -1-i4+i5 >= 0 /\ 1+i6-i5 > 0 /\ i6-i5 > 0)]
	
	Blocked

	{}
	{23[T], 27[T], 28[T]}
	{8[T], 23[T], 25[T], 26[T]}
	{27[T]}
	
Step with 8

	Trace

	24[(-1+i1 == 0)]
	26[(0 >= 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ 9-i1 >= 0)]
	27[(1 > 0 /\ -9+i1 >= 0 /\ -1+i6-i5 > 0 /\ 2 > 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -2+i6-i5 >= 0 /\ -1-i4+i5 >= 0 /\ 1+i6-i5 > 0 /\ i6-i5 > 0)]
	8[(-i6+i4 < 0 /\ -9+i1 == 0)]
	
	Blocked

	{}
	{23[T], 27[T], 28[T]}
	{8[T], 23[T], 25[T], 26[T]}
	{27[T]}
	{}
	
Step with 10

	Trace

	24[(-1+i1 == 0)]
	26[(0 >= 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ 9-i1 >= 0)]
	27[(1 > 0 /\ -9+i1 >= 0 /\ -1+i6-i5 > 0 /\ 2 > 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -2+i6-i5 >= 0 /\ -1-i4+i5 >= 0 /\ 1+i6-i5 > 0 /\ i6-i5 > 0)]
	8[(-i6+i4 < 0 /\ -9+i1 == 0)]
	10[(-i4+i5 > 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{23[T], 27[T], 28[T]}
	{8[T], 23[T], 25[T], 26[T]}
	{27[T]}
	{}
	{}
	
Covered

	Trace

	24[(-1+i1 == 0)]
	26[(0 >= 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ 9-i1 >= 0)]
	27[(1 > 0 /\ -9+i1 >= 0 /\ -1+i6-i5 > 0 /\ 2 > 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -2+i6-i5 >= 0 /\ -1-i4+i5 >= 0 /\ 1+i6-i5 > 0 /\ i6-i5 > 0)]
	8[(-i6+i4 < 0 /\ -9+i1 == 0)]
	
	Blocked

	{}
	{23[T], 27[T], 28[T]}
	{8[T], 23[T], 25[T], 26[T]}
	{27[T]}
	{10[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	26[(0 >= 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ 9-i1 >= 0)]
	27[(1 > 0 /\ -9+i1 >= 0 /\ -1+i6-i5 > 0 /\ 2 > 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -2+i6-i5 >= 0 /\ -1-i4+i5 >= 0 /\ 1+i6-i5 > 0 /\ i6-i5 > 0)]
	
	Blocked

	{}
	{23[T], 27[T], 28[T]}
	{8[T], 23[T], 25[T], 26[T]}
	{8[T], 27[T]}
	
Step with 25

	Trace

	24[(-1+i1 == 0)]
	26[(0 >= 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ 9-i1 >= 0)]
	27[(1 > 0 /\ -9+i1 >= 0 /\ -1+i6-i5 > 0 /\ 2 > 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -2+i6-i5 >= 0 /\ -1-i4+i5 >= 0 /\ 1+i6-i5 > 0 /\ i6-i5 > 0)]
	25[(-9+i1 >= 0 /\ 1+i6-i4-it29 > 0 /\ 9-i1 >= 0 /\ -1+it29 >= 0 /\ 1-i4-it29+i5 > 0)]
	
	Blocked

	{}
	{23[T], 27[T], 28[T]}
	{8[T], 23[T], 25[T], 26[T]}
	{8[T], 27[T]}
	{25[T]}
	
Covered

	Trace

	24[(-1+i1 == 0)]
	26[(0 >= 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ 9-i1 >= 0)]
	27[(1 > 0 /\ -9+i1 >= 0 /\ -1+i6-i5 > 0 /\ 2 > 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -2+i6-i5 >= 0 /\ -1-i4+i5 >= 0 /\ 1+i6-i5 > 0 /\ i6-i5 > 0)]
	
	Blocked

	{}
	{23[T], 27[T], 28[T]}
	{8[T], 23[T], 25[T], 26[T]}
	{8[T], 25[T], 27[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	26[(0 >= 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ 9-i1 >= 0)]
	
	Blocked

	{}
	{23[T], 27[T], 28[T]}
	{8[T], 23[T], 25[T], 26[T], 27[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	
	Blocked

	{}
	{23[T], 26[T], 27[T], 28[T]}
	
Step with 8

	Trace

	24[(-1+i1 == 0)]
	8[(-i6+i4 < 0 /\ -9+i1 == 0)]
	
	Blocked

	{}
	{23[T], 26[T], 27[T], 28[T]}
	{}
	
Step with 13

	Trace

	24[(-1+i1 == 0)]
	8[(-i6+i4 < 0 /\ -9+i1 == 0)]
	13[(-i4+i5 <= 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{23[T], 26[T], 27[T], 28[T]}
	{}
	{}
	
Covered

	Trace

	24[(-1+i1 == 0)]
	8[(-i6+i4 < 0 /\ -9+i1 == 0)]
	
	Blocked

	{}
	{23[T], 26[T], 27[T], 28[T]}
	{13[T]}
	
Step with 10

	Trace

	24[(-1+i1 == 0)]
	8[(-i6+i4 < 0 /\ -9+i1 == 0)]
	10[(-i4+i5 > 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{23[T], 26[T], 27[T], 28[T]}
	{13[T]}
	{}
	
Covered

	Trace

	24[(-1+i1 == 0)]
	8[(-i6+i4 < 0 /\ -9+i1 == 0)]
	
	Blocked

	{}
	{23[T], 26[T], 27[T], 28[T]}
	{10[T], 13[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	
	Blocked

	{}
	{8[T], 23[T], 26[T], 27[T], 28[T]}
	
Step with 25

	Trace

	24[(-1+i1 == 0)]
	25[(-9+i1 >= 0 /\ 1+i6-i4-it29 > 0 /\ 9-i1 >= 0 /\ -1+it29 >= 0 /\ 1-i4-it29+i5 > 0)]
	
	Blocked

	{}
	{8[T], 23[T], 26[T], 27[T], 28[T]}
	{25[T]}
	
Step with 23

	Trace

	24[(-1+i1 == 0)]
	25[(-9+i1 >= 0 /\ 1+i6-i4-it29 > 0 /\ 9-i1 >= 0 /\ -1+it29 >= 0 /\ 1-i4-it29+i5 > 0)]
	23[(-i6+i4 >= 0 /\ -9+i1 == 0)]
	
	Blocked

	{}
	{8[T], 23[T], 26[T], 27[T], 28[T]}
	{25[T]}
	{}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	25[(-9+i1 >= 0 /\ 1+i6-i4-it29 > 0 /\ 9-i1 >= 0 /\ -1+it29 >= 0 /\ 1-i4-it29+i5 > 0)]
	
	Blocked

	{}
	{8[T], 23[T], 26[T], 27[T], 28[T]}
	{23[T], 25[T]}
	
Step with 8

	Trace

	24[(-1+i1 == 0)]
	25[(-9+i1 >= 0 /\ 1+i6-i4-it29 > 0 /\ 9-i1 >= 0 /\ -1+it29 >= 0 /\ 1-i4-it29+i5 > 0)]
	8[(-i6+i4 < 0 /\ -9+i1 == 0)]
	
	Blocked

	{}
	{8[T], 23[T], 26[T], 27[T], 28[T]}
	{23[T], 25[T]}
	{}
	
Step with 13

	Trace

	24[(-1+i1 == 0)]
	25[(-9+i1 >= 0 /\ 1+i6-i4-it29 > 0 /\ 9-i1 >= 0 /\ -1+it29 >= 0 /\ 1-i4-it29+i5 > 0)]
	8[(-i6+i4 < 0 /\ -9+i1 == 0)]
	13[(-i4+i5 <= 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{8[T], 23[T], 26[T], 27[T], 28[T]}
	{23[T], 25[T]}
	{}
	{}
	
Covered

	Trace

	24[(-1+i1 == 0)]
	25[(-9+i1 >= 0 /\ 1+i6-i4-it29 > 0 /\ 9-i1 >= 0 /\ -1+it29 >= 0 /\ 1-i4-it29+i5 > 0)]
	8[(-i6+i4 < 0 /\ -9+i1 == 0)]
	
	Blocked

	{}
	{8[T], 23[T], 26[T], 27[T], 28[T]}
	{23[T], 25[T]}
	{13[T]}
	
Step with 10

	Trace

	24[(-1+i1 == 0)]
	25[(-9+i1 >= 0 /\ 1+i6-i4-it29 > 0 /\ 9-i1 >= 0 /\ -1+it29 >= 0 /\ 1-i4-it29+i5 > 0)]
	8[(-i6+i4 < 0 /\ -9+i1 == 0)]
	10[(-i4+i5 > 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{8[T], 23[T], 26[T], 27[T], 28[T]}
	{23[T], 25[T]}
	{13[T]}
	{}
	
Covered

	Trace

	24[(-1+i1 == 0)]
	25[(-9+i1 >= 0 /\ 1+i6-i4-it29 > 0 /\ 9-i1 >= 0 /\ -1+it29 >= 0 /\ 1-i4-it29+i5 > 0)]
	8[(-i6+i4 < 0 /\ -9+i1 == 0)]
	
	Blocked

	{}
	{8[T], 23[T], 26[T], 27[T], 28[T]}
	{23[T], 25[T]}
	{10[T], 13[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	25[(-9+i1 >= 0 /\ 1+i6-i4-it29 > 0 /\ 9-i1 >= 0 /\ -1+it29 >= 0 /\ 1-i4-it29+i5 > 0)]
	
	Blocked

	{}
	{8[T], 23[T], 26[T], 27[T], 28[T]}
	{8[T], 23[T], 25[T]}
	
Step with 26

	Trace

	24[(-1+i1 == 0)]
	25[(-9+i1 >= 0 /\ 1+i6-i4-it29 > 0 /\ 9-i1 >= 0 /\ -1+it29 >= 0 /\ 1-i4-it29+i5 > 0)]
	26[(0 >= 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ 9-i1 >= 0)]
	
	Blocked

	{}
	{8[T], 23[T], 26[T], 27[T], 28[T]}
	{8[T], 23[T], 25[T]}
	{26[T]}
	
Covered

	Trace

	24[(-1+i1 == 0)]
	25[(-9+i1 >= 0 /\ 1+i6-i4-it29 > 0 /\ 9-i1 >= 0 /\ -1+it29 >= 0 /\ 1-i4-it29+i5 > 0)]
	
	Blocked

	{}
	{8[T], 23[T], 26[T], 27[T], 28[T]}
	{8[T], 23[T], 25[T], 26[T]}
	
Step with 28

	Trace

	24[(-1+i1 == 0)]
	25[(-9+i1 >= 0 /\ 1+i6-i4-it29 > 0 /\ 9-i1 >= 0 /\ -1+it29 >= 0 /\ 1-i4-it29+i5 > 0)]
	28[(1 > 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ -2+i6-i4 >= 0 /\ -1+i6-i4 > 0 /\ 9-i1 >= 0 /\ 9-i1 == 0)]
	
	Blocked

	{}
	{8[T], 23[T], 26[T], 27[T], 28[T]}
	{8[T], 23[T], 25[T], 26[T]}
	{28[T]}
	
Step with 23

	Trace

	24[(-1+i1 == 0)]
	25[(-9+i1 >= 0 /\ 1+i6-i4-it29 > 0 /\ 9-i1 >= 0 /\ -1+it29 >= 0 /\ 1-i4-it29+i5 > 0)]
	28[(1 > 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ -2+i6-i4 >= 0 /\ -1+i6-i4 > 0 /\ 9-i1 >= 0 /\ 9-i1 == 0)]
	23[(-i6+i4 >= 0 /\ -9+i1 == 0)]
	
	Blocked

	{}
	{8[T], 23[T], 26[T], 27[T], 28[T]}
	{8[T], 23[T], 25[T], 26[T]}
	{26[T], 28[T]}
	{}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	25[(-9+i1 >= 0 /\ 1+i6-i4-it29 > 0 /\ 9-i1 >= 0 /\ -1+it29 >= 0 /\ 1-i4-it29+i5 > 0)]
	28[(1 > 0 /\ -9+i1 >= 0 /\ i6-i4 > 0 /\ i4-i5 >= 0 /\ -2+i6-i4 >= 0 /\ -1+i6-i4 > 0 /\ 9-i1 >= 0 /\ 9-i1 == 0)]
	
	Blocked

	{}
	{8[T], 23[T], 26[T], 27[T], 28[T]}
	{8[T], 23[T], 25[T], 26[T]}
	{23[T], 26[T], 28[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	25[(-9+i1 >= 0 /\ 1+i6-i4-it29 > 0 /\ 9-i1 >= 0 /\ -1+it29 >= 0 /\ 1-i4-it29+i5 > 0)]
	
	Blocked

	{}
	{8[T], 23[T], 26[T], 27[T], 28[T]}
	{8[T], 23[T], 25[T], 26[T], 28[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	
	Blocked

	{}
	{8[T], 23[T], 25[T], 26[T], 27[T], 28[T]}
	
Backtrack

	Trace

	Blocked

	{24[T]}
	
Accept

Poly(n^1)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄
  Temp_Vars:  
  Locations:  l0, l1, l10, l11, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃, X₄) → l2(X₀, X₁, X₂, X₃, X₄)
  t₃: l1(X₀, X₁, X₂, X₃, X₄) → l4(X₀, X₁, X₂, X₃, X₄)
  t₁₄: l10(X₀, X₁, X₂, X₃, X₄) → l11(X₀, X₁, X₂, X₃, X₄)
  t₁: l2(X₀, X₁, X₂, X₃, X₄) → l3(X₀, X₁, X₂, X₃, X₄)
  t₂: l3(X₀, X₁, X₂, X₃, X₄) → l1(X₀, X₁, X₂, X₃, X₄)
  t₄: l4(X₀, X₁, X₂, X₃, X₄) → l5(X₀, X₁, X₂, X₃, X₄)
  t₅: l5(X₀, X₁, X₂, X₃, X₄) → l6(X₀, X₁, X₂, X₃, X₄)
  t₆: l6(X₀, X₁, X₂, X₃, X₄) → l7(X₀, X₁, X₂, X₃, X₄)
  t₇: l7(X₀, X₁, X₂, X₃, X₄) → l8(X₃, X₄, X₂, X₃, X₄)
  t₉: l8(X₀, X₁, X₂, X₃, X₄) → l10(X₀, X₁, X₂, X₃, X₄) :|: X₂ ≤ X₀
  t₈: l8(X₀, X₁, X₂, X₃, X₄) → l9(X₀, X₁, X₂, X₃, X₄) :|: 1+X₀ ≤ X₂
  t₁₀: l9(X₀, X₁, X₂, X₃, X₄) → l8(1+X₀, X₁, X₂, X₃, X₄) :|: 1+X₀ ≤ X₁
  t₁₁: l9(X₀, X₁, X₂, X₃, X₄) → l8(X₀, X₁, X₂, X₃, X₄) :|: 1+X₀ ≤ X₁ ∧ X₁ ≤ X₀
  t₁₂: l9(X₀, X₁, X₂, X₃, X₄) → l8(1+X₀, 1+X₁, X₂, X₃, X₄) :|: 1+X₀ ≤ X₁ ∧ X₁ ≤ X₀
  t₁₃: l9(X₀, X₁, X₂, X₃, X₄) → l8(X₀, 1+X₁, X₂, X₃, X₄) :|: X₁ ≤ X₀


Preprocessing
  Cut unsatisfiable transition [t₁₁: l9→l8; t₁₂: l9→l8]


  Found invariant X₄ ≤ X₁ ∧ X₃ ≤ X₀ ∧ X₂ ≤ X₀ for location l11


  Found invariant X₄ ≤ X₁ ∧ X₃ ≤ X₀ for location l8


  Found invariant X₄ ≤ X₁ ∧ X₃ ≤ X₀ ∧ X₂ ≤ X₀ for location l10


  Found invariant X₄ ≤ X₁ ∧ 1+X₃ ≤ X₂ ∧ X₃ ≤ X₀ ∧ 1+X₀ ≤ X₂ for location l9


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄
  Temp_Vars:  
  Locations:  l0, l1, l10, l11, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃, X₄) → l2(X₀, X₁, X₂, X₃, X₄)
  t₃: l1(X₀, X₁, X₂, X₃, X₄) → l4(X₀, X₁, X₂, X₃, X₄)
  t₁₄: l10(X₀, X₁, X₂, X₃, X₄) → l11(X₀, X₁, X₂, X₃, X₄) :|: X₂ ≤ X₀ ∧ X₃ ≤ X₀ ∧ X₄ ≤ X₁
  t₁: l2(X₀, X₁, X₂, X₃, X₄) → l3(X₀, X₁, X₂, X₃, X₄)
  t₂: l3(X₀, X₁, X₂, X₃, X₄) → l1(X₀, X₁, X₂, X₃, X₄)
  t₄: l4(X₀, X₁, X₂, X₃, X₄) → l5(X₀, X₁, X₂, X₃, X₄)
  t₅: l5(X₀, X₁, X₂, X₃, X₄) → l6(X₀, X₁, X₂, X₃, X₄)
  t₆: l6(X₀, X₁, X₂, X₃, X₄) → l7(X₀, X₁, X₂, X₃, X₄)
  t₇: l7(X₀, X₁, X₂, X₃, X₄) → l8(X₃, X₄, X₂, X₃, X₄)
  t₉: l8(X₀, X₁, X₂, X₃, X₄) → l10(X₀, X₁, X₂, X₃, X₄) :|: X₂ ≤ X₀ ∧ X₃ ≤ X₀ ∧ X₄ ≤ X₁
  t₈: l8(X₀, X₁, X₂, X₃, X₄) → l9(X₀, X₁, X₂, X₃, X₄) :|: 1+X₀ ≤ X₂ ∧ X₃ ≤ X₀ ∧ X₄ ≤ X₁
  t₁₀: l9(X₀, X₁, X₂, X₃, X₄) → l8(1+X₀, X₁, X₂, X₃, X₄) :|: 1+X₀ ≤ X₁ ∧ 1+X₀ ≤ X₂ ∧ 1+X₃ ≤ X₂ ∧ X₃ ≤ X₀ ∧ X₄ ≤ X₁
  t₁₃: l9(X₀, X₁, X₂, X₃, X₄) → l8(X₀, 1+X₁, X₂, X₃, X₄) :|: X₁ ≤ X₀ ∧ 1+X₀ ≤ X₂ ∧ 1+X₃ ≤ X₂ ∧ X₃ ≤ X₀ ∧ X₄ ≤ X₁


MPRF for transition t₁₀: l9(X₀, X₁, X₂, X₃, X₄) → l8(1+X₀, X₁, X₂, X₃, X₄) :|: 1+X₀ ≤ X₁ ∧ 1+X₀ ≤ X₂ ∧ 1+X₃ ≤ X₂ ∧ X₃ ≤ X₀ ∧ X₄ ≤ X₁ of depth 1:
  new bound:
    X₂+X₃ {O(n)}

  MPRF:
    • l8: [X₂-X₀]
    • l9: [X₂-X₀]




MPRF for transition t₁₃: l9(X₀, X₁, X₂, X₃, X₄) → l8(X₀, 1+X₁, X₂, X₃, X₄) :|: X₁ ≤ X₀ ∧ 1+X₀ ≤ X₂ ∧ 1+X₃ ≤ X₂ ∧ X₃ ≤ X₀ ∧ X₄ ≤ X₁ of depth 1:
  new bound:
    X₂+X₄ {O(n)}

  MPRF:
    • l8: [X₂-X₁]
    • l9: [X₂-X₁]




  knowledge_propagation leads to new time bound 2⋅X₂+X₃+X₄+1 {O(n)} for transition t₈: l8(X₀, X₁, X₂, X₃, X₄) → l9(X₀, X₁, X₂, X₃, X₄) :|: 1+X₀ ≤ X₂ ∧ X₃ ≤ X₀ ∧ X₄ ≤ X₁


All Bounds
Timebounds
  Overall timebound:2⋅X₃+2⋅X₄+4⋅X₂+11 {O(n)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: 1 {O(1)}
    t₈: 2⋅X₂+X₃+X₄+1 {O(n)}
    t₉: 1 {O(1)}
    t₁₀: X₂+X₃ {O(n)}
    t₁₃: X₂+X₄ {O(n)}
    t₁₄: 1 {O(1)}


Costbounds
  Overall costbound: 2⋅X₃+2⋅X₄+4⋅X₂+11 {O(n)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: 1 {O(1)}
    t₈: 2⋅X₂+X₃+X₄+1 {O(n)}
    t₉: 1 {O(1)}
    t₁₀: X₂+X₃ {O(n)}
    t₁₃: X₂+X₄ {O(n)}
    t₁₄: 1 {O(1)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₀, X₂: X₂ {O(n)}
    t₀, X₃: X₃ {O(n)}
    t₀, X₄: X₄ {O(n)}
    t₁, X₀: X₀ {O(n)}
    t₁, X₁: X₁ {O(n)}
    t₁, X₂: X₂ {O(n)}
    t₁, X₃: X₃ {O(n)}
    t₁, X₄: X₄ {O(n)}
    t₂, X₀: X₀ {O(n)}
    t₂, X₁: X₁ {O(n)}
    t₂, X₂: X₂ {O(n)}
    t₂, X₃: X₃ {O(n)}
    t₂, X₄: X₄ {O(n)}
    t₃, X₀: X₀ {O(n)}
    t₃, X₁: X₁ {O(n)}
    t₃, X₂: X₂ {O(n)}
    t₃, X₃: X₃ {O(n)}
    t₃, X₄: X₄ {O(n)}
    t₄, X₀: X₀ {O(n)}
    t₄, X₁: X₁ {O(n)}
    t₄, X₂: X₂ {O(n)}
    t₄, X₃: X₃ {O(n)}
    t₄, X₄: X₄ {O(n)}
    t₅, X₀: X₀ {O(n)}
    t₅, X₁: X₁ {O(n)}
    t₅, X₂: X₂ {O(n)}
    t₅, X₃: X₃ {O(n)}
    t₅, X₄: X₄ {O(n)}
    t₆, X₀: X₀ {O(n)}
    t₆, X₁: X₁ {O(n)}
    t₆, X₂: X₂ {O(n)}
    t₆, X₃: X₃ {O(n)}
    t₆, X₄: X₄ {O(n)}
    t₇, X₀: X₃ {O(n)}
    t₇, X₁: X₄ {O(n)}
    t₇, X₂: X₂ {O(n)}
    t₇, X₃: X₃ {O(n)}
    t₇, X₄: X₄ {O(n)}
    t₈, X₀: 2⋅X₃+X₂ {O(n)}
    t₈, X₁: 2⋅X₄+X₂ {O(n)}
    t₈, X₂: X₂ {O(n)}
    t₈, X₃: X₃ {O(n)}
    t₈, X₄: X₄ {O(n)}
    t₉, X₀: 3⋅X₃+X₂ {O(n)}
    t₉, X₁: 3⋅X₄+X₂ {O(n)}
    t₉, X₂: 2⋅X₂ {O(n)}
    t₉, X₃: 2⋅X₃ {O(n)}
    t₉, X₄: 2⋅X₄ {O(n)}
    t₁₀, X₀: 2⋅X₃+X₂ {O(n)}
    t₁₀, X₁: 2⋅X₄+X₂ {O(n)}
    t₁₀, X₂: X₂ {O(n)}
    t₁₀, X₃: X₃ {O(n)}
    t₁₀, X₄: X₄ {O(n)}
    t₁₃, X₀: 2⋅X₃+X₂ {O(n)}
    t₁₃, X₁: 2⋅X₄+X₂ {O(n)}
    t₁₃, X₂: X₂ {O(n)}
    t₁₃, X₃: X₃ {O(n)}
    t₁₃, X₄: X₄ {O(n)}
    t₁₄, X₀: 3⋅X₃+X₂ {O(n)}
    t₁₄, X₁: 3⋅X₄+X₂ {O(n)}
    t₁₄, X₂: 2⋅X₂ {O(n)}
    t₁₄, X₃: 2⋅X₃ {O(n)}
    t₁₄, X₄: 2⋅X₄ {O(n)}

