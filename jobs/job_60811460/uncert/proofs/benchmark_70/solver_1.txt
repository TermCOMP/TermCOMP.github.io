WORST_CASE(Omega(n^2),O(n^2))

# LoAT Proof:
WORST_CASE(Omega(n^2),?)

WORST_CASE(Omega(n^1),?)
WORST_CASE(Omega(n^2),?)
Initial ITS

Start location: evalrealselectstart

Location map:
LoAT_sink -> 0
evalrealselectstart -> 1
evalrealselectentryin -> 2
evalrealselectbb6in -> 3
evalrealselectbbin -> 4
evalrealselectreturnin -> 5
evalrealselectbb4in -> 6
evalrealselectbb1in -> 7
evalrealselectbb5in -> 8
evalrealselectstop -> 9

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: -2+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=0
   2: (-3+i1 == 0 /\ -2-i4+i5 >= 0) /\ i1'=4, i3'=1+i3
   3: (-3+i1 == 0 /\ 1+i4-i5 >= 0) /\ i1'=5, i3'=1+i3
   4: -4+i1 == 0 /\ i1'=6, i3'=1+i3, i6'=1+i4
   5: (-6+i1 == 0 /\ -1-i6+i5 >= 0) /\ i1'=7, i3'=1+i3
   6: (-6+i1 == 0 /\ i6-i5 >= 0) /\ i1'=8, i3'=1+i3
   7: (-7+i1 == 0 /\ -1+it4-it3 >= 0) /\ i1'=6, i3'=1+i3, i6'=1+i6
   8: (it5-it6 >= 0 /\ -7+i1 == 0) /\ i1'=6, i3'=1+i3, i6'=1+i6
   9: -8+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=1+i4
  10: -5+i1 == 0 /\ i1'=9, i3'=1+i3

Dependency graph:
0 -> 1
1 -> 2, 1 -> 3
2 -> 4
3 -> 10
4 -> 5, 4 -> 6
5 -> 7, 5 -> 8
6 -> 9
7 -> 5, 7 -> 6
8 -> 5, 8 -> 6
9 -> 2, 9 -> 3

Chained Linear Paths

	Applied Chaining

	First rule:
	-1+i1 == 0 /\ i1'=2, i3'=1+i3
	Second rule:
	-2+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=0
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=0
	
	Applied Deletion

	Removed the following rules: 0, 1
	
	Applied Chaining

	First rule:
	(-3+i1 == 0 /\ -2-i4+i5 >= 0) /\ i1'=4, i3'=1+i3
	Second rule:
	-4+i1 == 0 /\ i1'=6, i3'=1+i3, i6'=1+i4
	New rule:
	(0 == 0 /\ -3+i1 == 0 /\ -2-i4+i5 >= 0) /\ i1'=6, i3'=2+i3, i6'=1+i4
	
	Applied Deletion

	Removed the following rules: 2, 4
	
	Applied Chaining

	First rule:
	(-3+i1 == 0 /\ 1+i4-i5 >= 0) /\ i1'=5, i3'=1+i3
	Second rule:
	-5+i1 == 0 /\ i1'=9, i3'=1+i3
	New rule:
	(0 == 0 /\ -3+i1 == 0 /\ 1+i4-i5 >= 0) /\ i1'=9, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 3, 10
	
	Applied Chaining

	First rule:
	(-6+i1 == 0 /\ i6-i5 >= 0) /\ i1'=8, i3'=1+i3
	Second rule:
	-8+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=1+i4
	New rule:
	(0 == 0 /\ -6+i1 == 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i4
	
	Applied Deletion

	Removed the following rules: 6, 9

Start location: evalrealselectstart

Location map:
LoAT_sink -> 0
evalrealselectstart -> 1
evalrealselectentryin -> 2
evalrealselectbb6in -> 3
evalrealselectbbin -> 4
evalrealselectreturnin -> 5
evalrealselectbb4in -> 6
evalrealselectbb1in -> 7
evalrealselectbb5in -> 8
evalrealselectstop -> 9

Rules:
   5: (-6+i1 == 0 /\ -1-i6+i5 >= 0) /\ i1'=7, i3'=1+i3
   7: (-7+i1 == 0 /\ -1+it4-it3 >= 0) /\ i1'=6, i3'=1+i3, i6'=1+i6
   8: (it5-it6 >= 0 /\ -7+i1 == 0) /\ i1'=6, i3'=1+i3, i6'=1+i6
  11: (0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=0
  12: (0 == 0 /\ -3+i1 == 0 /\ -2-i4+i5 >= 0) /\ i1'=6, i3'=2+i3, i6'=1+i4
  13: (0 == 0 /\ -3+i1 == 0 /\ 1+i4-i5 >= 0) /\ i1'=9, i3'=2+i3
  14: (0 == 0 /\ -6+i1 == 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i4

Dependency graph:
5 -> 7, 5 -> 8
7 -> 5, 7 -> 14
8 -> 5, 8 -> 14
11 -> 12, 11 -> 13
12 -> 5, 12 -> 14
14 -> 12, 14 -> 13

Preprocessed Transitions

	Eliminated Temporary Variables

	Original rule:
	(-7+i1 == 0 /\ -1+it4-it3 >= 0) /\ i1'=6, i3'=1+i3, i6'=1+i6
	New rule:
	(-7+i1 == 0) /\ i1'=6, i3'=1+i3, i6'=1+i6
	
	Eliminated Temporary Variables

	Original rule:
	(it5-it6 >= 0 /\ -7+i1 == 0) /\ i1'=6, i3'=1+i3, i6'=1+i6
	New rule:
	(-7+i1 == 0) /\ i1'=6, i3'=1+i3, i6'=1+i6
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=0
	New rule:
	-1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=0
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -3+i1 == 0 /\ -2-i4+i5 >= 0) /\ i1'=6, i3'=2+i3, i6'=1+i4
	New rule:
	(-3+i1 == 0 /\ -2-i4+i5 >= 0) /\ i1'=6, i3'=2+i3, i6'=1+i4
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -3+i1 == 0 /\ 1+i4-i5 >= 0) /\ i1'=9, i3'=2+i3
	New rule:
	(-3+i1 == 0 /\ 1+i4-i5 >= 0) /\ i1'=9, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -6+i1 == 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i4
	New rule:
	(-6+i1 == 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i4

Start location: evalrealselectstart

Location map:
LoAT_sink -> 0
evalrealselectstart -> 1
evalrealselectentryin -> 2
evalrealselectbb6in -> 3
evalrealselectbbin -> 4
evalrealselectreturnin -> 5
evalrealselectbb4in -> 6
evalrealselectbb1in -> 7
evalrealselectbb5in -> 8
evalrealselectstop -> 9

Rules:
   5: (-6+i1 == 0 /\ -1-i6+i5 >= 0) /\ i1'=7, i3'=1+i3
  15: (-7+i1 == 0) /\ i1'=6, i3'=1+i3, i6'=1+i6
  16: (-7+i1 == 0) /\ i1'=6, i3'=1+i3, i6'=1+i6
  17: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=0
  18: (-3+i1 == 0 /\ -2-i4+i5 >= 0) /\ i1'=6, i3'=2+i3, i6'=1+i4
  19: (-3+i1 == 0 /\ 1+i4-i5 >= 0) /\ i1'=9, i3'=2+i3
  20: (-6+i1 == 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i4

Dependency graph:
5 -> 15, 5 -> 16
15 -> 5, 15 -> 20
16 -> 5, 16 -> 20
17 -> 18, 17 -> 19
18 -> 5, 18 -> 20
20 -> 18, 20 -> 19

Refined Dependency Graph

	Removed the following edges: 18 -> 20

Start location: evalrealselectstart

Location map:
LoAT_sink -> 0
evalrealselectstart -> 1
evalrealselectentryin -> 2
evalrealselectbb6in -> 3
evalrealselectbbin -> 4
evalrealselectreturnin -> 5
evalrealselectbb4in -> 6
evalrealselectbb1in -> 7
evalrealselectbb5in -> 8
evalrealselectstop -> 9

Rules:
   5: (-6+i1 == 0 /\ -1-i6+i5 >= 0) /\ i1'=7, i3'=1+i3
  15: (-7+i1 == 0) /\ i1'=6, i3'=1+i3, i6'=1+i6
  16: (-7+i1 == 0) /\ i1'=6, i3'=1+i3, i6'=1+i6
  17: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=0
  18: (-3+i1 == 0 /\ -2-i4+i5 >= 0) /\ i1'=6, i3'=2+i3, i6'=1+i4
  19: (-3+i1 == 0 /\ 1+i4-i5 >= 0) /\ i1'=9, i3'=2+i3
  20: (-6+i1 == 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i4

Dependency graph:
5 -> 15, 5 -> 16
15 -> 5, 15 -> 20
16 -> 5, 16 -> 20
17 -> 18, 17 -> 19
18 -> 5
20 -> 18, 20 -> 19

Step with 17

	Trace

	17[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 19

	Trace

	17[(-1+i1 == 0)]
	19[(-3+i1 == 0 /\ 1+i4-i5 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Backtrack

	Trace

	17[(-1+i1 == 0)]
	
	Blocked

	{}
	{19[T]}
	
Step with 18

	Trace

	17[(-1+i1 == 0)]
	18[(-3+i1 == 0 /\ -2-i4+i5 >= 0)]
	
	Blocked

	{}
	{19[T]}
	{}
	
Step with 5

	Trace

	17[(-1+i1 == 0)]
	18[(-3+i1 == 0 /\ -2-i4+i5 >= 0)]
	5[(-6+i1 == 0 /\ -1-i6+i5 >= 0)]
	
	Blocked

	{}
	{19[T]}
	{}
	{}
	
Step with 15

	Trace

	17[(-1+i1 == 0)]
	18[(-3+i1 == 0 /\ -2-i4+i5 >= 0)]
	5[(-6+i1 == 0 /\ -1-i6+i5 >= 0)]
	15[(-7+i1 == 0)]
	
	Blocked

	{}
	{19[T]}
	{}
	{}
	{}
	
Poly(n^1)

Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -6+i1 == 0 /\ -1-i6+i5 >= 0) /\ i1'=6, i3'=2+i3, i6'=1+i6
		New rule:
		(-6+i1 == 0 /\ -1-i6+i5 >= 0) /\ i1'=6, i3'=2+i3, i6'=1+i6

	Loop Acceleration

	Original rule:
	(-6+i1 == 0 /\ -1-i6+i5 >= 0) /\ i1'=6, i3'=2+i3, i6'=1+i6
	New rule:
	(-1+it32 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -i6+i5-it32 >= 0) /\ i1'=i1, i3'=i3+2*it32, i6'=i6+it32

		-6+i1 >= 0 [0]: unchanged
		
		6-i1 >= 0 [0]: unchanged
		
		-1-i6+i5 >= 0 [0]: montonic decrease yields -i6+i5-it32 >= 0
		
		Replacement map: {-6+i1 >= 0 -> -6+i1 >= 0, 6-i1 >= 0 -> 6-i1 >= 0, -1-i6+i5 >= 0 -> -i6+i5-it32 >= 0}

	Removed Trivial Updates

	Original rule:
	(-1+it32 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -i6+i5-it32 >= 0) /\ i1'=i1, i3'=i3+2*it32, i6'=i6+it32
	New rule:
	(-1+it32 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -i6+i5-it32 >= 0) /\ i3'=i3+2*it32, i6'=i6+it32
	
	Instantiation

	Original rule:
	(-1+it32 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -i6+i5-it32 >= 0) /\ i3'=i3+2*it32, i6'=i6+it32
	New rule:
	(0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0) /\ i3'=-2*i6+i3+2*i5, i6'=i5

Start location: evalrealselectstart

Location map:
LoAT_sink -> 0
evalrealselectstart -> 1
evalrealselectentryin -> 2
evalrealselectbb6in -> 3
evalrealselectbbin -> 4
evalrealselectreturnin -> 5
evalrealselectbb4in -> 6
evalrealselectbb1in -> 7
evalrealselectbb5in -> 8
evalrealselectstop -> 9

Rules:
   5: (-6+i1 == 0 /\ -1-i6+i5 >= 0) /\ i1'=7, i3'=1+i3
  15: (-7+i1 == 0) /\ i1'=6, i3'=1+i3, i6'=1+i6
  16: (-7+i1 == 0) /\ i1'=6, i3'=1+i3, i6'=1+i6
  17: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=0
  18: (-3+i1 == 0 /\ -2-i4+i5 >= 0) /\ i1'=6, i3'=2+i3, i6'=1+i4
  19: (-3+i1 == 0 /\ 1+i4-i5 >= 0) /\ i1'=9, i3'=2+i3
  20: (-6+i1 == 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i4
  21: (0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0) /\ i3'=-2*i6+i3+2*i5, i6'=i5

Dependency graph:
5 -> 15, 5 -> 16
15 -> 5, 15 -> 20, 15 -> 21
16 -> 5, 16 -> 20, 16 -> 21
17 -> 18, 17 -> 19
18 -> 5, 18 -> 21
20 -> 18, 20 -> 19
21 -> 5, 21 -> 20

	Trace

	17[(-1+i1 == 0)]
	18[(-3+i1 == 0 /\ -2-i4+i5 >= 0)]
	21[(0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0)]
	
	Blocked

	{}
	{19[T]}
	{}
	{21[T]}
	
Step with 20

	Trace

	17[(-1+i1 == 0)]
	18[(-3+i1 == 0 /\ -2-i4+i5 >= 0)]
	21[(0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0)]
	20[(-6+i1 == 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{19[T]}
	{}
	{21[T]}
	{}
	
Poly(n^2)

Accelerate

		Simplified Guard

		Original rule:
		(0 >= 0 /\ 0 == 0 /\ -3+i1 == 0 /\ -2-i4+i5 >= 0) /\ i1'=3, i3'=2+i3-2*i4+2*i5, i4'=1+i4, i6'=i5
		New rule:
		(-3+i1 == 0 /\ -2-i4+i5 >= 0) /\ i1'=3, i3'=2+i3-2*i4+2*i5, i4'=1+i4, i6'=i5

	Loop Acceleration

	Original rule:
	(-3+i1 == 0 /\ -2-i4+i5 >= 0) /\ i1'=3, i3'=2+i3-2*i4+2*i5, i4'=1+i4, i6'=i5
	New rule:
	(-3+i1 >= 0 /\ -2-i4+i5 >= 0 /\ 3-i1 >= 0 /\ -1+it49 >= 0 /\ -1-i4-it49+i5 >= 0) /\ i1'=i1, i3'=i3-2*i4*it49+3*it49+2*it49*i5-it49^2, i4'=i4+it49, i6'=i5

		-3+i1 >= 0 [0]: unchanged
		
		-2-i4+i5 >= 0 [0]: montonic decrease yields (-2-i4+i5 >= 0 /\ -1-i4-it49+i5 >= 0)
		
		3-i1 >= 0 [0]: unchanged
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, -2-i4+i5 >= 0 -> (-2-i4+i5 >= 0 /\ -1-i4-it49+i5 >= 0), 3-i1 >= 0 -> 3-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ -2-i4+i5 >= 0 /\ 3-i1 >= 0 /\ -1+it49 >= 0 /\ -1-i4-it49+i5 >= 0) /\ i1'=i1, i3'=i3-2*i4*it49+3*it49+2*it49*i5-it49^2, i4'=i4+it49, i6'=i5
	New rule:
	(-3+i1 >= 0 /\ -2-i4+i5 >= 0 /\ 3-i1 >= 0 /\ -1+it49 >= 0 /\ -1-i4-it49+i5 >= 0) /\ i3'=i3-2*i4*it49+3*it49+2*it49*i5-it49^2, i4'=i4+it49, i6'=i5
	
	Instantiation

	Original rule:
	(-3+i1 >= 0 /\ -2-i4+i5 >= 0 /\ 3-i1 >= 0 /\ -1+it49 >= 0 /\ -1-i4-it49+i5 >= 0) /\ i3'=i3-2*i4*it49+3*it49+2*it49*i5-it49^2, i4'=i4+it49, i6'=i5
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ -2-i4+i5 >= 0 /\ 3-i1 >= 0) /\ i3'=-3+i3-2*(1+i4-i5)*i5-(1+i4-i5)^2-3*i4+3*i5+2*(1+i4-i5)*i4, i4'=-1+i5, i6'=i5

Start location: evalrealselectstart

Location map:
LoAT_sink -> 0
evalrealselectstart -> 1
evalrealselectentryin -> 2
evalrealselectbb6in -> 3
evalrealselectbbin -> 4
evalrealselectreturnin -> 5
evalrealselectbb4in -> 6
evalrealselectbb1in -> 7
evalrealselectbb5in -> 8
evalrealselectstop -> 9

Rules:
   5: (-6+i1 == 0 /\ -1-i6+i5 >= 0) /\ i1'=7, i3'=1+i3
  15: (-7+i1 == 0) /\ i1'=6, i3'=1+i3, i6'=1+i6
  16: (-7+i1 == 0) /\ i1'=6, i3'=1+i3, i6'=1+i6
  17: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=0
  18: (-3+i1 == 0 /\ -2-i4+i5 >= 0) /\ i1'=6, i3'=2+i3, i6'=1+i4
  19: (-3+i1 == 0 /\ 1+i4-i5 >= 0) /\ i1'=9, i3'=2+i3
  20: (-6+i1 == 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i4
  21: (0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0) /\ i3'=-2*i6+i3+2*i5, i6'=i5
  22: (0 >= 0 /\ -3+i1 >= 0 /\ -2-i4+i5 >= 0 /\ 3-i1 >= 0) /\ i3'=-3+i3-2*(1+i4-i5)*i5-(1+i4-i5)^2-3*i4+3*i5+2*(1+i4-i5)*i4, i4'=-1+i5, i6'=i5

Dependency graph:
5 -> 15, 5 -> 16
15 -> 5, 15 -> 20, 15 -> 21
16 -> 5, 16 -> 20, 16 -> 21
17 -> 18, 17 -> 19, 17 -> 22
18 -> 5, 18 -> 21
20 -> 18, 20 -> 19, 20 -> 22
21 -> 5, 21 -> 20
22 -> 18, 22 -> 19

	Trace

	17[(-1+i1 == 0)]
	22[(0 >= 0 /\ -3+i1 >= 0 /\ -2-i4+i5 >= 0 /\ 3-i1 >= 0)]
	
	Blocked

	{}
	{19[T]}
	{22[T]}
	
Step with 19

	Trace

	17[(-1+i1 == 0)]
	22[(0 >= 0 /\ -3+i1 >= 0 /\ -2-i4+i5 >= 0 /\ 3-i1 >= 0)]
	19[(-3+i1 == 0 /\ 1+i4-i5 >= 0)]
	
	Blocked

	{}
	{19[T]}
	{18[T], 22[T]}
	{}
	
Backtrack

	Trace

	17[(-1+i1 == 0)]
	22[(0 >= 0 /\ -3+i1 >= 0 /\ -2-i4+i5 >= 0 /\ 3-i1 >= 0)]
	
	Blocked

	{}
	{19[T]}
	{18[T], 19[T], 22[T]}
	
Backtrack

	Trace

	17[(-1+i1 == 0)]
	
	Blocked

	{}
	{19[T], 22[T]}
	
Step with 18

	Trace

	17[(-1+i1 == 0)]
	18[(-3+i1 == 0 /\ -2-i4+i5 >= 0)]
	
	Blocked

	{}
	{19[T], 22[T]}
	{}
	
Step with 5

	Trace

	17[(-1+i1 == 0)]
	18[(-3+i1 == 0 /\ -2-i4+i5 >= 0)]
	5[(-6+i1 == 0 /\ -1-i6+i5 >= 0)]
	
	Blocked

	{}
	{19[T], 22[T]}
	{}
	{}
	
Step with 15

	Trace

	17[(-1+i1 == 0)]
	18[(-3+i1 == 0 /\ -2-i4+i5 >= 0)]
	5[(-6+i1 == 0 /\ -1-i6+i5 >= 0)]
	15[(-7+i1 == 0)]
	
	Blocked

	{}
	{19[T], 22[T]}
	{}
	{}
	{}
	
Covered

	Trace

	17[(-1+i1 == 0)]
	18[(-3+i1 == 0 /\ -2-i4+i5 >= 0)]
	5[(-6+i1 == 0 /\ -1-i6+i5 >= 0)]
	
	Blocked

	{}
	{19[T], 22[T]}
	{}
	{15[T]}
	
Step with 16

	Trace

	17[(-1+i1 == 0)]
	18[(-3+i1 == 0 /\ -2-i4+i5 >= 0)]
	5[(-6+i1 == 0 /\ -1-i6+i5 >= 0)]
	16[(-7+i1 == 0)]
	
	Blocked

	{}
	{19[T], 22[T]}
	{}
	{15[T]}
	{}
	
Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -6+i1 == 0 /\ -1-i6+i5 >= 0) /\ i1'=6, i3'=2+i3, i6'=1+i6
		New rule:
		(-6+i1 == 0 /\ -1-i6+i5 >= 0) /\ i1'=6, i3'=2+i3, i6'=1+i6

	Loop Acceleration

	Original rule:
	(-6+i1 == 0 /\ -1-i6+i5 >= 0) /\ i1'=6, i3'=2+i3, i6'=1+i6
	New rule:
	(-i6-it86+i5 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it86 >= 0) /\ i1'=i1, i3'=2*it86+i3, i6'=i6+it86

		-6+i1 >= 0 [0]: unchanged
		
		6-i1 >= 0 [0]: unchanged
		
		-1-i6+i5 >= 0 [0]: montonic decrease yields -i6-it86+i5 >= 0
		
		Replacement map: {-6+i1 >= 0 -> -6+i1 >= 0, 6-i1 >= 0 -> 6-i1 >= 0, -1-i6+i5 >= 0 -> -i6-it86+i5 >= 0}

	Removed Trivial Updates

	Original rule:
	(-i6-it86+i5 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it86 >= 0) /\ i1'=i1, i3'=2*it86+i3, i6'=i6+it86
	New rule:
	(-i6-it86+i5 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it86 >= 0) /\ i3'=2*it86+i3, i6'=i6+it86
	
	Instantiation

	Original rule:
	(-i6-it86+i5 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1+it86 >= 0) /\ i3'=2*it86+i3, i6'=i6+it86
	New rule:
	(0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0) /\ i3'=-2*i6+i3+2*i5, i6'=i5

Start location: evalrealselectstart

Location map:
LoAT_sink -> 0
evalrealselectstart -> 1
evalrealselectentryin -> 2
evalrealselectbb6in -> 3
evalrealselectbbin -> 4
evalrealselectreturnin -> 5
evalrealselectbb4in -> 6
evalrealselectbb1in -> 7
evalrealselectbb5in -> 8
evalrealselectstop -> 9

Rules:
   5: (-6+i1 == 0 /\ -1-i6+i5 >= 0) /\ i1'=7, i3'=1+i3
  15: (-7+i1 == 0) /\ i1'=6, i3'=1+i3, i6'=1+i6
  16: (-7+i1 == 0) /\ i1'=6, i3'=1+i3, i6'=1+i6
  17: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=0
  18: (-3+i1 == 0 /\ -2-i4+i5 >= 0) /\ i1'=6, i3'=2+i3, i6'=1+i4
  19: (-3+i1 == 0 /\ 1+i4-i5 >= 0) /\ i1'=9, i3'=2+i3
  20: (-6+i1 == 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i4
  21: (0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0) /\ i3'=-2*i6+i3+2*i5, i6'=i5
  22: (0 >= 0 /\ -3+i1 >= 0 /\ -2-i4+i5 >= 0 /\ 3-i1 >= 0) /\ i3'=-3+i3-2*(1+i4-i5)*i5-(1+i4-i5)^2-3*i4+3*i5+2*(1+i4-i5)*i4, i4'=-1+i5, i6'=i5
  23: (0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0) /\ i3'=-2*i6+i3+2*i5, i6'=i5

Dependency graph:
5 -> 15, 5 -> 16
15 -> 5, 15 -> 20, 15 -> 21, 15 -> 23
16 -> 5, 16 -> 20, 16 -> 21, 16 -> 23
17 -> 18, 17 -> 19, 17 -> 22
18 -> 5, 18 -> 21, 18 -> 23
20 -> 18, 20 -> 19, 20 -> 22
21 -> 5, 21 -> 20, 21 -> 23
22 -> 18, 22 -> 19
23 -> 5, 23 -> 20, 23 -> 21

	Trace

	17[(-1+i1 == 0)]
	18[(-3+i1 == 0 /\ -2-i4+i5 >= 0)]
	23[(0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0)]
	
	Blocked

	{}
	{19[T], 22[T]}
	{}
	{23[T]}
	
Step with 20

	Trace

	17[(-1+i1 == 0)]
	18[(-3+i1 == 0 /\ -2-i4+i5 >= 0)]
	23[(0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0)]
	20[(-6+i1 == 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{19[T], 22[T]}
	{}
	{23[T]}
	{}
	
Accelerate

		Simplified Guard

		Original rule:
		(0 >= 0 /\ 0 == 0 /\ -3+i1 == 0 /\ -2-i4+i5 >= 0) /\ i1'=3, i3'=2+i3-2*i4+2*i5, i4'=1+i4, i6'=i5
		New rule:
		(-3+i1 == 0 /\ -2-i4+i5 >= 0) /\ i1'=3, i3'=2+i3-2*i4+2*i5, i4'=1+i4, i6'=i5

	Loop Acceleration

	Original rule:
	(-3+i1 == 0 /\ -2-i4+i5 >= 0) /\ i1'=3, i3'=2+i3-2*i4+2*i5, i4'=1+i4, i6'=i5
	New rule:
	(-3+i1 >= 0 /\ -2-i4+i5 >= 0 /\ -1-it97-i4+i5 >= 0 /\ 3-i1 >= 0 /\ -1+it97 >= 0) /\ i1'=i1, i3'=i3+3*it97+2*it97*i5-it97^2-2*it97*i4, i4'=it97+i4, i6'=i5

		-3+i1 >= 0 [0]: unchanged
		
		-2-i4+i5 >= 0 [0]: montonic decrease yields (-2-i4+i5 >= 0 /\ -1-it97-i4+i5 >= 0)
		
		3-i1 >= 0 [0]: unchanged
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, -2-i4+i5 >= 0 -> (-2-i4+i5 >= 0 /\ -1-it97-i4+i5 >= 0), 3-i1 >= 0 -> 3-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ -2-i4+i5 >= 0 /\ -1-it97-i4+i5 >= 0 /\ 3-i1 >= 0 /\ -1+it97 >= 0) /\ i1'=i1, i3'=i3+3*it97+2*it97*i5-it97^2-2*it97*i4, i4'=it97+i4, i6'=i5
	New rule:
	(-3+i1 >= 0 /\ -2-i4+i5 >= 0 /\ -1-it97-i4+i5 >= 0 /\ 3-i1 >= 0 /\ -1+it97 >= 0) /\ i3'=i3+3*it97+2*it97*i5-it97^2-2*it97*i4, i4'=it97+i4, i6'=i5
	
	Instantiation

	Original rule:
	(-3+i1 >= 0 /\ -2-i4+i5 >= 0 /\ -1-it97-i4+i5 >= 0 /\ 3-i1 >= 0 /\ -1+it97 >= 0) /\ i3'=i3+3*it97+2*it97*i5-it97^2-2*it97*i4, i4'=it97+i4, i6'=i5
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ -2-i4+i5 >= 0 /\ 3-i1 >= 0) /\ i3'=-3+i3-2*(1+i4-i5)*i5-(1+i4-i5)^2-3*i4+3*i5+2*(1+i4-i5)*i4, i4'=-1+i5, i6'=i5

Start location: evalrealselectstart

Location map:
LoAT_sink -> 0
evalrealselectstart -> 1
evalrealselectentryin -> 2
evalrealselectbb6in -> 3
evalrealselectbbin -> 4
evalrealselectreturnin -> 5
evalrealselectbb4in -> 6
evalrealselectbb1in -> 7
evalrealselectbb5in -> 8
evalrealselectstop -> 9

Rules:
   5: (-6+i1 == 0 /\ -1-i6+i5 >= 0) /\ i1'=7, i3'=1+i3
  15: (-7+i1 == 0) /\ i1'=6, i3'=1+i3, i6'=1+i6
  16: (-7+i1 == 0) /\ i1'=6, i3'=1+i3, i6'=1+i6
  17: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=0
  18: (-3+i1 == 0 /\ -2-i4+i5 >= 0) /\ i1'=6, i3'=2+i3, i6'=1+i4
  19: (-3+i1 == 0 /\ 1+i4-i5 >= 0) /\ i1'=9, i3'=2+i3
  20: (-6+i1 == 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i4
  21: (0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0) /\ i3'=-2*i6+i3+2*i5, i6'=i5
  22: (0 >= 0 /\ -3+i1 >= 0 /\ -2-i4+i5 >= 0 /\ 3-i1 >= 0) /\ i3'=-3+i3-2*(1+i4-i5)*i5-(1+i4-i5)^2-3*i4+3*i5+2*(1+i4-i5)*i4, i4'=-1+i5, i6'=i5
  23: (0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0) /\ i3'=-2*i6+i3+2*i5, i6'=i5
  24: (0 >= 0 /\ -3+i1 >= 0 /\ -2-i4+i5 >= 0 /\ 3-i1 >= 0) /\ i3'=-3+i3-2*(1+i4-i5)*i5-(1+i4-i5)^2-3*i4+3*i5+2*(1+i4-i5)*i4, i4'=-1+i5, i6'=i5

Dependency graph:
5 -> 15, 5 -> 16
15 -> 5, 15 -> 20, 15 -> 21, 15 -> 23
16 -> 5, 16 -> 20, 16 -> 21, 16 -> 23
17 -> 18, 17 -> 19, 17 -> 22, 17 -> 24
18 -> 5, 18 -> 21, 18 -> 23
20 -> 18, 20 -> 19, 20 -> 22, 20 -> 24
21 -> 5, 21 -> 20, 21 -> 23
22 -> 18, 22 -> 19, 22 -> 24
23 -> 5, 23 -> 20, 23 -> 21
24 -> 18, 24 -> 19, 24 -> 22

	Trace

	17[(-1+i1 == 0)]
	24[(0 >= 0 /\ -3+i1 >= 0 /\ -2-i4+i5 >= 0 /\ 3-i1 >= 0)]
	
	Blocked

	{}
	{19[T], 22[T]}
	{24[T]}
	
Step with 19

	Trace

	17[(-1+i1 == 0)]
	24[(0 >= 0 /\ -3+i1 >= 0 /\ -2-i4+i5 >= 0 /\ 3-i1 >= 0)]
	19[(-3+i1 == 0 /\ 1+i4-i5 >= 0)]
	
	Blocked

	{}
	{19[T], 22[T]}
	{22[T], 24[T]}
	{}
	
Backtrack

	Trace

	17[(-1+i1 == 0)]
	24[(0 >= 0 /\ -3+i1 >= 0 /\ -2-i4+i5 >= 0 /\ 3-i1 >= 0)]
	
	Blocked

	{}
	{19[T], 22[T]}
	{19[T], 22[T], 24[T]}
	
Backtrack

	Trace

	17[(-1+i1 == 0)]
	
	Blocked

	{}
	{19[T], 22[T], 24[T]}
	
Step with 18

	Trace

	17[(-1+i1 == 0)]
	18[(-3+i1 == 0 /\ -2-i4+i5 >= 0)]
	
	Blocked

	{}
	{19[T], 22[T], 24[T]}
	{}
	
Step with 23

	Trace

	17[(-1+i1 == 0)]
	18[(-3+i1 == 0 /\ -2-i4+i5 >= 0)]
	23[(0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0)]
	
	Blocked

	{}
	{19[T], 22[T], 24[T]}
	{}
	{23[T]}
	
Step with 20

	Trace

	17[(-1+i1 == 0)]
	18[(-3+i1 == 0 /\ -2-i4+i5 >= 0)]
	23[(0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0)]
	20[(-6+i1 == 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{19[T], 22[T], 24[T]}
	{}
	{5[T], 21[T], 23[T]}
	{}
	
Covered

	Trace

	17[(-1+i1 == 0)]
	18[(-3+i1 == 0 /\ -2-i4+i5 >= 0)]
	23[(0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0)]
	
	Blocked

	{}
	{19[T], 22[T], 24[T]}
	{}
	{5[T], 20[T], 21[T], 23[T]}
	
Backtrack

	Trace

	17[(-1+i1 == 0)]
	18[(-3+i1 == 0 /\ -2-i4+i5 >= 0)]
	
	Blocked

	{}
	{19[T], 22[T], 24[T]}
	{23[T]}
	
Step with 21

	Trace

	17[(-1+i1 == 0)]
	18[(-3+i1 == 0 /\ -2-i4+i5 >= 0)]
	21[(0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0)]
	
	Blocked

	{}
	{19[T], 22[T], 24[T]}
	{23[T]}
	{21[T]}
	
Step with 20

	Trace

	17[(-1+i1 == 0)]
	18[(-3+i1 == 0 /\ -2-i4+i5 >= 0)]
	21[(0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0)]
	20[(-6+i1 == 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{19[T], 22[T], 24[T]}
	{23[T]}
	{5[T], 21[T], 23[T]}
	{}
	
Covered

	Trace

	17[(-1+i1 == 0)]
	18[(-3+i1 == 0 /\ -2-i4+i5 >= 0)]
	21[(0 >= 0 /\ -6+i1 >= 0 /\ 6-i1 >= 0 /\ -1-i6+i5 >= 0)]
	
	Blocked

	{}
	{19[T], 22[T], 24[T]}
	{23[T]}
	{5[T], 20[T], 21[T], 23[T]}
	
Backtrack

	Trace

	17[(-1+i1 == 0)]
	18[(-3+i1 == 0 /\ -2-i4+i5 >= 0)]
	
	Blocked

	{}
	{19[T], 22[T], 24[T]}
	{21[T], 23[T]}
	
Step with 5

	Trace

	17[(-1+i1 == 0)]
	18[(-3+i1 == 0 /\ -2-i4+i5 >= 0)]
	5[(-6+i1 == 0 /\ -1-i6+i5 >= 0)]
	
	Blocked

	{}
	{19[T], 22[T], 24[T]}
	{21[T], 23[T]}
	{}
	
Step with 15

	Trace

	17[(-1+i1 == 0)]
	18[(-3+i1 == 0 /\ -2-i4+i5 >= 0)]
	5[(-6+i1 == 0 /\ -1-i6+i5 >= 0)]
	15[(-7+i1 == 0)]
	
	Blocked

	{}
	{19[T], 22[T], 24[T]}
	{21[T], 23[T]}
	{}
	{}
	
Covered

	Trace

	17[(-1+i1 == 0)]
	18[(-3+i1 == 0 /\ -2-i4+i5 >= 0)]
	5[(-6+i1 == 0 /\ -1-i6+i5 >= 0)]
	
	Blocked

	{}
	{19[T], 22[T], 24[T]}
	{21[T], 23[T]}
	{15[T]}
	
Step with 16

	Trace

	17[(-1+i1 == 0)]
	18[(-3+i1 == 0 /\ -2-i4+i5 >= 0)]
	5[(-6+i1 == 0 /\ -1-i6+i5 >= 0)]
	16[(-7+i1 == 0)]
	
	Blocked

	{}
	{19[T], 22[T], 24[T]}
	{21[T], 23[T]}
	{15[T]}
	{}
	
Covered

	Trace

	17[(-1+i1 == 0)]
	18[(-3+i1 == 0 /\ -2-i4+i5 >= 0)]
	5[(-6+i1 == 0 /\ -1-i6+i5 >= 0)]
	
	Blocked

	{}
	{19[T], 22[T], 24[T]}
	{21[T], 23[T]}
	{15[T], 16[T]}
	
Backtrack

	Trace

	17[(-1+i1 == 0)]
	18[(-3+i1 == 0 /\ -2-i4+i5 >= 0)]
	
	Blocked

	{}
	{19[T], 22[T], 24[T]}
	{5[T], 21[T], 23[T]}
	
Backtrack

	Trace

	17[(-1+i1 == 0)]
	
	Blocked

	{}
	{18[T], 19[T], 22[T], 24[T]}
	
Backtrack

	Trace

	Blocked

	{17[T]}
	
Accept

Poly(n^2)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^2))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  D, E
  Locations:  l0, l1, l2, l3, l4, l5, l6, l7, l8
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂) → l7(X₀, X₁, X₂)
  t₅: l1(X₀, X₁, X₂) → l2(X₀, X₁, X₂) :|: 1+X₂ ≤ X₁
  t₆: l1(X₀, X₁, X₂) → l3(X₀, X₁, X₂) :|: X₁ ≤ X₂
  t₇: l2(X₀, X₁, X₂) → l1(X₀, X₁, 1+X₂) :|: 1+E ≤ D
  t₈: l2(X₀, X₁, X₂) → l1(X₀, X₁, 1+X₂) :|: D ≤ E
  t₉: l3(X₀, X₁, X₂) → l5(1+X₀, X₁, X₂)
  t₄: l4(X₀, X₁, X₂) → l1(X₀, X₁, 1+X₀)
  t₂: l5(X₀, X₁, X₂) → l4(X₀, X₁, X₂) :|: 2+X₀ ≤ X₁
  t₃: l5(X₀, X₁, X₂) → l6(X₀, X₁, X₂) :|: X₁ ≤ 1+X₀
  t₁₀: l6(X₀, X₁, X₂) → l8(X₀, X₁, X₂)
  t₁: l7(X₀, X₁, X₂) → l5(0, X₁, X₂)


Preprocessing
  Found invariant 1+X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 3 ≤ X₁+X₂ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 2 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 2+X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l2


  Found invariant X₁ ≤ 1+X₀ ∧ 0 ≤ X₀ for location l6


  Found invariant 0 ≤ X₀ for location l5


  Found invariant X₁ ≤ 1+X₀ ∧ 0 ≤ X₀ for location l8


  Found invariant X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 3 ≤ X₁+X₂ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 2 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 2+X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l1


  Found invariant 2 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 2+X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l4


  Found invariant X₂ ≤ X₁ ∧ 2 ≤ X₂ ∧ 4 ≤ X₁+X₂ ∧ X₁ ≤ X₂ ∧ 2 ≤ X₀+X₂ ∧ 2+X₀ ≤ X₂ ∧ 2 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 2+X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l3


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  D, E
  Locations:  l0, l1, l2, l3, l4, l5, l6, l7, l8
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂) → l7(X₀, X₁, X₂)
  t₅: l1(X₀, X₁, X₂) → l2(X₀, X₁, X₂) :|: 1+X₂ ≤ X₁ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀+X₁ ∧ 2+X₀ ≤ X₁ ∧ 2 ≤ X₁ ∧ 3 ≤ X₁+X₂ ∧ 0 ≤ X₀ ∧ X₂ ≤ X₁
  t₆: l1(X₀, X₁, X₂) → l3(X₀, X₁, X₂) :|: X₁ ≤ X₂ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀+X₁ ∧ 2+X₀ ≤ X₁ ∧ 2 ≤ X₁ ∧ 3 ≤ X₁+X₂ ∧ 0 ≤ X₀ ∧ X₂ ≤ X₁
  t₇: l2(X₀, X₁, X₂) → l1(X₀, X₁, 1+X₂) :|: 1+E ≤ D ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 1+X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀+X₁ ∧ 2+X₀ ≤ X₁ ∧ 2 ≤ X₁ ∧ 3 ≤ X₁+X₂ ∧ 0 ≤ X₀
  t₈: l2(X₀, X₁, X₂) → l1(X₀, X₁, 1+X₂) :|: D ≤ E ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 1+X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀+X₁ ∧ 2+X₀ ≤ X₁ ∧ 2 ≤ X₁ ∧ 3 ≤ X₁+X₂ ∧ 0 ≤ X₀
  t₉: l3(X₀, X₁, X₂) → l5(1+X₀, X₁, X₂) :|: 2 ≤ X₀+X₁ ∧ 2 ≤ X₀+X₂ ∧ 2+X₀ ≤ X₁ ∧ 2+X₀ ≤ X₂ ∧ 2 ≤ X₁ ∧ 2 ≤ X₂ ∧ 4 ≤ X₁+X₂ ∧ 0 ≤ X₀ ∧ X₂ ≤ X₁ ∧ X₁ ≤ X₂
  t₄: l4(X₀, X₁, X₂) → l1(X₀, X₁, 1+X₀) :|: 2 ≤ X₀+X₁ ∧ 2+X₀ ≤ X₁ ∧ 2 ≤ X₁ ∧ 0 ≤ X₀
  t₂: l5(X₀, X₁, X₂) → l4(X₀, X₁, X₂) :|: 2+X₀ ≤ X₁ ∧ 0 ≤ X₀
  t₃: l5(X₀, X₁, X₂) → l6(X₀, X₁, X₂) :|: X₁ ≤ 1+X₀ ∧ 0 ≤ X₀
  t₁₀: l6(X₀, X₁, X₂) → l8(X₀, X₁, X₂) :|: X₁ ≤ 1+X₀ ∧ 0 ≤ X₀
  t₁: l7(X₀, X₁, X₂) → l5(0, X₁, X₂)


MPRF for transition t₂: l5(X₀, X₁, X₂) → l4(X₀, X₁, X₂) :|: 2+X₀ ≤ X₁ ∧ 0 ≤ X₀ of depth 1:
  new bound:
    X₁+1 {O(n)}

  MPRF:
    • l1: [X₁-2-X₀]
    • l2: [X₁-2-X₀]
    • l3: [X₂-2-X₀]
    • l4: [X₁-2-X₀]
    • l5: [X₁-1-X₀]




MPRF for transition t₄: l4(X₀, X₁, X₂) → l1(X₀, X₁, 1+X₀) :|: 2 ≤ X₀+X₁ ∧ 2+X₀ ≤ X₁ ∧ 2 ≤ X₁ ∧ 0 ≤ X₀ of depth 1:
  new bound:
    X₁+1 {O(n)}

  MPRF:
    • l1: [X₁-2-X₀]
    • l2: [X₁-2-X₀]
    • l3: [X₁-2-X₀]
    • l4: [X₁-1-X₀]
    • l5: [X₁-1-X₀]




MPRF for transition t₆: l1(X₀, X₁, X₂) → l3(X₀, X₁, X₂) :|: X₁ ≤ X₂ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀+X₁ ∧ 2+X₀ ≤ X₁ ∧ 2 ≤ X₁ ∧ 3 ≤ X₁+X₂ ∧ 0 ≤ X₀ ∧ X₂ ≤ X₁ of depth 1:
  new bound:
    X₁+1 {O(n)}

  MPRF:
    • l1: [1+X₁-X₀]
    • l2: [1+X₁-X₀]
    • l3: [X₂-X₀]
    • l4: [1+X₁-X₀]
    • l5: [1+X₁-X₀]




MPRF for transition t₉: l3(X₀, X₁, X₂) → l5(1+X₀, X₁, X₂) :|: 2 ≤ X₀+X₁ ∧ 2 ≤ X₀+X₂ ∧ 2+X₀ ≤ X₁ ∧ 2+X₀ ≤ X₂ ∧ 2 ≤ X₁ ∧ 2 ≤ X₂ ∧ 4 ≤ X₁+X₂ ∧ 0 ≤ X₀ ∧ X₂ ≤ X₁ ∧ X₁ ≤ X₂ of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l1: [X₁-X₀]
    • l2: [X₁-X₀]
    • l3: [X₁-X₀]
    • l4: [X₁-X₀]
    • l5: [X₁-X₀]




MPRF for transition t₅: l1(X₀, X₁, X₂) → l2(X₀, X₁, X₂) :|: 1+X₂ ≤ X₁ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀+X₁ ∧ 2+X₀ ≤ X₁ ∧ 2 ≤ X₁ ∧ 3 ≤ X₁+X₂ ∧ 0 ≤ X₀ ∧ X₂ ≤ X₁ of depth 1:
  new bound:
    X₁^2+X₁ {O(n^2)}

  MPRF:
    • l1: [1+X₁-X₂]
    • l2: [X₁-X₂]
    • l3: [X₁-X₂]
    • l4: [X₁]
    • l5: [X₁]




MPRF for transition t₇: l2(X₀, X₁, X₂) → l1(X₀, X₁, 1+X₂) :|: 1+E ≤ D ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 1+X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀+X₁ ∧ 2+X₀ ≤ X₁ ∧ 2 ≤ X₁ ∧ 3 ≤ X₁+X₂ ∧ 0 ≤ X₀ of depth 1:
  new bound:
    X₁^2+X₁ {O(n^2)}

  MPRF:
    • l1: [X₁-X₂]
    • l2: [X₁-X₂]
    • l3: [X₁-X₂]
    • l4: [X₁]
    • l5: [X₁]




MPRF for transition t₈: l2(X₀, X₁, X₂) → l1(X₀, X₁, 1+X₂) :|: D ≤ E ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 1+X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀+X₁ ∧ 2+X₀ ≤ X₁ ∧ 2 ≤ X₁ ∧ 3 ≤ X₁+X₂ ∧ 0 ≤ X₀ of depth 1:
  new bound:
    X₁^2+X₁ {O(n^2)}

  MPRF:
    • l1: [X₁-X₂]
    • l2: [X₁-X₂]
    • l3: [X₁-X₂]
    • l4: [X₁]
    • l5: [X₁]




  Cut unsatisfiable transition [t₆: l1→l3; t₂₀₂: l1→l3]


  Found invariant X₂ ≤ X₁ ∧ 2 ≤ X₂ ∧ 4 ≤ X₁+X₂ ∧ 2 ≤ X₀+X₂ ∧ 2+X₀ ≤ X₂ ∧ 2 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 2+X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l1_v1


  Found invariant X₁ ≤ 1+X₀ ∧ 0 ≤ X₀ for location l6


  Found invariant 1+X₂ ≤ X₁ ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₂ ∧ 3 ≤ X₁+X₂ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 2 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 2+X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l2_v1


  Found invariant 1+X₂ ≤ X₁ ∧ 2 ≤ X₂ ∧ 5 ≤ X₁+X₂ ∧ 2 ≤ X₀+X₂ ∧ 2+X₀ ≤ X₂ ∧ 3 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 3+X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l2_v2


  Found invariant 0 ≤ X₀ for location l5


  Found invariant X₁ ≤ 1+X₀ ∧ 0 ≤ X₀ for location l8


  Found invariant 1+X₂ ≤ X₁ ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₂ ∧ 3 ≤ X₁+X₂ ∧ 1 ≤ X₀+X₂ ∧ 1+X₀ ≤ X₂ ∧ 2 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 2+X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l1


  Found invariant 2 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 2+X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l4


  Found invariant X₂ ≤ X₁ ∧ 2 ≤ X₂ ∧ 4 ≤ X₁+X₂ ∧ X₁ ≤ X₂ ∧ 2 ≤ X₀+X₂ ∧ 2+X₀ ≤ X₂ ∧ 2 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 2+X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l3


All Bounds
Timebounds
  Overall timebound:3⋅X₁^2+7⋅X₁+7 {O(n^2)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: X₁+1 {O(n)}
    t₃: 1 {O(1)}
    t₄: X₁+1 {O(n)}
    t₅: X₁^2+X₁ {O(n^2)}
    t₆: X₁+1 {O(n)}
    t₇: X₁^2+X₁ {O(n^2)}
    t₈: X₁^2+X₁ {O(n^2)}
    t₉: X₁ {O(n)}
    t₁₀: 1 {O(1)}


Costbounds
  Overall costbound: 3⋅X₁^2+7⋅X₁+7 {O(n^2)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: X₁+1 {O(n)}
    t₃: 1 {O(1)}
    t₄: X₁+1 {O(n)}
    t₅: X₁^2+X₁ {O(n^2)}
    t₆: X₁+1 {O(n)}
    t₇: X₁^2+X₁ {O(n^2)}
    t₈: X₁^2+X₁ {O(n^2)}
    t₉: X₁ {O(n)}
    t₁₀: 1 {O(1)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₀, X₂: X₂ {O(n)}
    t₁, X₀: 0 {O(1)}
    t₁, X₁: X₁ {O(n)}
    t₁, X₂: X₂ {O(n)}
    t₂, X₀: X₁ {O(n)}
    t₂, X₁: X₁ {O(n)}
    t₂, X₂: 4⋅X₁^2+6⋅X₁+X₂+2 {O(n^2)}
    t₃, X₀: X₁ {O(n)}
    t₃, X₁: 2⋅X₁ {O(n)}
    t₃, X₂: 4⋅X₁^2+6⋅X₁+X₂+2 {O(n^2)}
    t₄, X₀: X₁ {O(n)}
    t₄, X₁: X₁ {O(n)}
    t₄, X₂: X₁+1 {O(n)}
    t₅, X₀: X₁ {O(n)}
    t₅, X₁: X₁ {O(n)}
    t₅, X₂: 2⋅X₁^2+3⋅X₁+1 {O(n^2)}
    t₆, X₀: X₁ {O(n)}
    t₆, X₁: X₁ {O(n)}
    t₆, X₂: 4⋅X₁^2+6⋅X₁+2 {O(n^2)}
    t₇, X₀: X₁ {O(n)}
    t₇, X₁: X₁ {O(n)}
    t₇, X₂: 2⋅X₁^2+3⋅X₁+1 {O(n^2)}
    t₈, X₀: X₁ {O(n)}
    t₈, X₁: X₁ {O(n)}
    t₈, X₂: 2⋅X₁^2+3⋅X₁+1 {O(n^2)}
    t₉, X₀: X₁ {O(n)}
    t₉, X₁: X₁ {O(n)}
    t₉, X₂: 4⋅X₁^2+6⋅X₁+2 {O(n^2)}
    t₁₀, X₀: X₁ {O(n)}
    t₁₀, X₁: 2⋅X₁ {O(n)}
    t₁₀, X₂: 4⋅X₁^2+6⋅X₁+X₂+2 {O(n^2)}

