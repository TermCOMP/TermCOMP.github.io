NO

# LoAT Proof:
NO

NO

Initial ITS

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f10001 -> 2
f2 -> 3
f1200 -> 4
f2200 -> 5
f10000 -> 6
f12 -> 7
f100 -> 8
f110 -> 9
f120 -> 10
f1000 -> 11

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: -3+i1 == 0 /\ i1'=3, i3'=1+i3
   2: -3+i1 == 0 /\ i1'=2, i3'=1+i3
   3: -3+i1 == 0 /\ i1'=4, i3'=1+i3, i4'=i5
   4: (i6 == 0 /\ -5+i1 == 0) /\ i1'=6, i3'=1+i3, i6'=0
   5: -7+i1 == 0 /\ i1'=7, i3'=1+i3
   6: -8+i1 == 0 /\ i1'=9, i3'=1+i3, i5'=1
   7: -9+i1 == 0 /\ i1'=10, i3'=1+i3, i5'=2
   8: -10+i1 == 0 /\ i1'=10, i3'=1+i3
   9: -4+i1 == 0 /\ i1'=4, i3'=1+i3
  10: -1+i1 == 0 /\ i1'=3, i3'=1+i3, i5'=2
  11: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i5'=1
  12: -1+i1 == 0 /\ i1'=9, i3'=1+i3, i4'=1, i5'=1
  13: -1+i1 == 0 /\ i1'=7, i3'=1+i3, i4'=i5, i5'=2
  14: -7+i1 == 0 /\ i1'=2, i3'=1+i3, i7'=1
  15: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=i5, i7'=1
  16: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=i5, i5'=1, i7'=1
  17: -8+i1 == 0 /\ i1'=2, i3'=1+i3, i7'=1
  18: -9+i1 == 0 /\ i1'=2, i3'=1+i3, i7'=1
  19: -10+i1 == 0 /\ i1'=2, i3'=1+i3, i7'=1
  20: -11+i1 == 0 /\ i1'=4, i3'=1+i3, i5'=2
  21: -11+i1 == 0 /\ i1'=2, i3'=1+i3, i7'=1
  22: -4+i1 == 0 /\ i1'=2, i3'=1+i3, i7'=1
  23: -11+i1 == 0 /\ i1'=2, i3'=1+i3, i5'=1, i7'=1

Dependency graph:
1 -> 1, 1 -> 2, 1 -> 3
3 -> 9, 3 -> 22
5 -> 5, 5 -> 14
6 -> 7, 6 -> 18
7 -> 8, 7 -> 19
8 -> 8, 8 -> 19
9 -> 9, 9 -> 22
10 -> 1, 10 -> 2, 10 -> 3
12 -> 7, 12 -> 18
13 -> 5, 13 -> 14
20 -> 9, 20 -> 22

Step with 12

	Trace

	12[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 18

	Trace

	12[(-1+i1 == 0)]
	18[(-9+i1 == 0)]
	
	Blocked

	{}
	{}
	{}
	
Backtrack

	Trace

	12[(-1+i1 == 0)]
	
	Blocked

	{}
	{18[T]}
	
Step with 7

	Trace

	12[(-1+i1 == 0)]
	7[(-9+i1 == 0)]
	
	Blocked

	{}
	{18[T]}
	{}
	
Step with 19

	Trace

	12[(-1+i1 == 0)]
	7[(-9+i1 == 0)]
	19[(-10+i1 == 0)]
	
	Blocked

	{}
	{18[T]}
	{}
	{}
	
Backtrack

	Trace

	12[(-1+i1 == 0)]
	7[(-9+i1 == 0)]
	
	Blocked

	{}
	{18[T]}
	{19[T]}
	
Step with 8

	Trace

	12[(-1+i1 == 0)]
	7[(-9+i1 == 0)]
	8[(-10+i1 == 0)]
	
	Blocked

	{}
	{18[T]}
	{19[T]}
	{}
	
Nonterm

	Certificate of Non-Termination

	Original rule:
	(-10+i1 == 0) /\ i1'=10, i3'=1+i3
	New rule:
	(-1+it31 >= 0 /\ 10-i1 >= 0 /\ -10+i1 >= 0) /\ i1'=0

		10-i1 >= 0 [0]: unchanged
		
		-10+i1 >= 0 [0]: unchanged
		
		Replacement map: {10-i1 >= 0 -> 10-i1 >= 0, -10+i1 >= 0 -> -10+i1 >= 0}

	Loop Acceleration

	Original rule:
	(-10+i1 == 0) /\ i1'=10, i3'=1+i3
	New rule:
	(-1+it31 >= 0 /\ 10-i1 >= 0 /\ -10+i1 >= 0) /\ i1'=i1, i3'=i3+it31

		10-i1 >= 0 [0]: unchanged
		
		-10+i1 >= 0 [0]: unchanged
		
		Replacement map: {10-i1 >= 0 -> 10-i1 >= 0, -10+i1 >= 0 -> -10+i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-1+it31 >= 0 /\ 10-i1 >= 0 /\ -10+i1 >= 0) /\ i1'=i1, i3'=i3+it31
	New rule:
	(-1+it31 >= 0 /\ 10-i1 >= 0 /\ -10+i1 >= 0) /\ i3'=i3+it31

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f10001 -> 2
f2 -> 3
f1200 -> 4
f2200 -> 5
f10000 -> 6
f12 -> 7
f100 -> 8
f110 -> 9
f120 -> 10
f1000 -> 11

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: -3+i1 == 0 /\ i1'=3, i3'=1+i3
   2: -3+i1 == 0 /\ i1'=2, i3'=1+i3
   3: -3+i1 == 0 /\ i1'=4, i3'=1+i3, i4'=i5
   4: (i6 == 0 /\ -5+i1 == 0) /\ i1'=6, i3'=1+i3, i6'=0
   5: -7+i1 == 0 /\ i1'=7, i3'=1+i3
   6: -8+i1 == 0 /\ i1'=9, i3'=1+i3, i5'=1
   7: -9+i1 == 0 /\ i1'=10, i3'=1+i3, i5'=2
   8: -10+i1 == 0 /\ i1'=10, i3'=1+i3
   9: -4+i1 == 0 /\ i1'=4, i3'=1+i3
  10: -1+i1 == 0 /\ i1'=3, i3'=1+i3, i5'=2
  11: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i5'=1
  12: -1+i1 == 0 /\ i1'=9, i3'=1+i3, i4'=1, i5'=1
  13: -1+i1 == 0 /\ i1'=7, i3'=1+i3, i4'=i5, i5'=2
  14: -7+i1 == 0 /\ i1'=2, i3'=1+i3, i7'=1
  15: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=i5, i7'=1
  16: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=i5, i5'=1, i7'=1
  17: -8+i1 == 0 /\ i1'=2, i3'=1+i3, i7'=1
  18: -9+i1 == 0 /\ i1'=2, i3'=1+i3, i7'=1
  19: -10+i1 == 0 /\ i1'=2, i3'=1+i3, i7'=1
  20: -11+i1 == 0 /\ i1'=4, i3'=1+i3, i5'=2
  21: -11+i1 == 0 /\ i1'=2, i3'=1+i3, i7'=1
  22: -4+i1 == 0 /\ i1'=2, i3'=1+i3, i7'=1
  23: -11+i1 == 0 /\ i1'=2, i3'=1+i3, i5'=1, i7'=1
  24: (-1+it31 >= 0 /\ 10-i1 >= 0 /\ -10+i1 >= 0) /\ i1'=0
  25: (-1+it31 >= 0 /\ 10-i1 >= 0 /\ -10+i1 >= 0) /\ i3'=i3+it31

Dependency graph:
1 -> 1, 1 -> 2, 1 -> 3
3 -> 9, 3 -> 22
5 -> 5, 5 -> 14
6 -> 7, 6 -> 18
7 -> 8, 7 -> 19, 7 -> 24, 7 -> 25
8 -> 8, 8 -> 19, 8 -> 24, 8 -> 25
9 -> 9, 9 -> 22
10 -> 1, 10 -> 2, 10 -> 3
12 -> 7, 12 -> 18
13 -> 5, 13 -> 14
20 -> 9, 20 -> 22
25 -> 8, 25 -> 19, 25 -> 24

Step with 24

	Trace

	12[(-1+i1 == 0)]
	7[(-9+i1 == 0)]
	24[(-1+it31 >= 0 /\ 10-i1 >= 0 /\ -10+i1 >= 0)]
	
	Blocked

	{}
	{18[T]}
	{19[T]}
	{24[T]}
	
Refute

	Counterexample

	(i1=1, i3=-1, i6=0, i7=0)
	-12-> (i1=9, i3=0, i4=1, i5=1, i6=0, i7=0 )
	-7-> (i1=10, i3=1, i4=1, i5=2, i6=0, i7=0 )
	-24-> ( )
	
NO

Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
MAYBE


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃
  Temp_Vars:  
  Locations:  l0, l1, l10, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, X₃)
  t₁₁: l0(X₀, X₁, X₂, X₃) → l1(X₀, 1, X₂, X₃)
  t₁₅: l0(X₀, X₁, X₂, X₃) → l1(X₁, X₁, X₂, 1)
  t₁₆: l0(X₀, X₁, X₂, X₃) → l1(X₁, 1, X₂, 1)
  t₁₂: l0(X₀, X₁, X₂, X₃) → l2(1, 1, X₂, X₃)
  t₁₃: l0(X₀, X₁, X₂, X₃) → l3(X₁, 2, X₂, X₃)
  t₁₀: l0(X₀, X₁, X₂, X₃) → l4(X₀, 2, X₂, X₃)
  t₁₉: l10(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, 1)
  t₈: l10(X₀, X₁, X₂, X₃) → l10(X₀, X₁, X₂, X₃)
  t₁₈: l2(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, 1)
  t₇: l2(X₀, X₁, X₂, X₃) → l10(X₀, 2, X₂, X₃)
  t₁₄: l3(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, 1)
  t₅: l3(X₀, X₁, X₂, X₃) → l3(X₀, X₁, X₂, X₃)
  t₂: l4(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, X₃)
  t₁: l4(X₀, X₁, X₂, X₃) → l4(X₀, X₁, X₂, X₃)
  t₃: l4(X₀, X₁, X₂, X₃) → l6(X₁, X₁, X₂, X₃)
  t₁₇: l5(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, 1)
  t₆: l5(X₀, X₁, X₂, X₃) → l2(X₀, 1, X₂, X₃)
  t₂₂: l6(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, 1)
  t₉: l6(X₀, X₁, X₂, X₃) → l6(X₀, X₁, X₂, X₃)
  t₂₁: l7(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, 1)
  t₂₃: l7(X₀, X₁, X₂, X₃) → l1(X₀, 1, X₂, 1)
  t₂₀: l7(X₀, X₁, X₂, X₃) → l6(X₀, 2, X₂, X₃)
  t₄: l8(X₀, X₁, X₂, X₃) → l9(X₀, X₁, 0, X₃) :|: 0 ≤ X₂ ∧ X₂ ≤ 0


Preprocessing
  Cut unreachable locations [l5; l7; l8; l9] from the program graph


  Eliminate variables [X₀; X₁; X₂; X₃] that do not contribute to the problem


Problem after Preprocessing
  Start:  l0
  Program_Vars:  
  Temp_Vars:  
  Locations:  l0, l1, l10, l2, l3, l4, l6
  Return Locations:  
  Transitions:
  t₂₄: l0 → l1
  t₂₅: l0 → l1
  t₂₆: l0 → l1
  t₂₇: l0 → l1
  t₂₈: l0 → l2
  t₂₉: l0 → l3
  t₃₀: l0 → l4
  t₃₁: l10 → l1
  t₃₂: l10 → l10
  t₃₃: l2 → l1
  t₃₄: l2 → l10
  t₃₅: l3 → l1
  t₃₆: l3 → l3
  t₃₇: l4 → l1
  t₃₈: l4 → l4
  t₃₉: l4 → l6
  t₄₀: l6 → l1
  t₄₁: l6 → l6


All Bounds
Timebounds
  Overall timebound:inf {Infinity}
    t₂₄: 1 {O(1)}
    t₂₅: 1 {O(1)}
    t₂₆: 1 {O(1)}
    t₂₇: 1 {O(1)}
    t₂₈: 1 {O(1)}
    t₂₉: 1 {O(1)}
    t₃₀: 1 {O(1)}
    t₃₁: 1 {O(1)}
    t₃₂: inf {Infinity}
    t₃₃: 1 {O(1)}
    t₃₄: 1 {O(1)}
    t₃₅: 1 {O(1)}
    t₃₆: inf {Infinity}
    t₃₇: 1 {O(1)}
    t₃₈: inf {Infinity}
    t₃₉: 1 {O(1)}
    t₄₀: 1 {O(1)}
    t₄₁: inf {Infinity}


Costbounds
  Overall costbound: inf {Infinity}
    t₂₄: 1 {O(1)}
    t₂₅: 1 {O(1)}
    t₂₆: 1 {O(1)}
    t₂₇: 1 {O(1)}
    t₂₈: 1 {O(1)}
    t₂₉: 1 {O(1)}
    t₃₀: 1 {O(1)}
    t₃₁: 1 {O(1)}
    t₃₂: inf {Infinity}
    t₃₃: 1 {O(1)}
    t₃₄: 1 {O(1)}
    t₃₅: 1 {O(1)}
    t₃₆: inf {Infinity}
    t₃₇: 1 {O(1)}
    t₃₈: inf {Infinity}
    t₃₉: 1 {O(1)}
    t₄₀: 1 {O(1)}
    t₄₁: inf {Infinity}


Sizebounds

