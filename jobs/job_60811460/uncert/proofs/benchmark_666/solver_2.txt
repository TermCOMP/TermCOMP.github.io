WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_srch_bb3_in/6,eval_srch_bb4_in/6,eval_srch_bb5_in/6,eval_srch_bb6_in/6,eval_srch_bb7_in/6]
1. recursive  : [eval_srch_29/19,eval_srch_30/19,eval_srch_31/19,eval_srch_32/19,eval_srch__critedge_in/19,eval_srch_bb1_in/19,eval_srch_bb2_in/19,eval_srch_bb3_in_loop_cont/20]
2. non_recursive  : [eval_srch_stop/10]
3. non_recursive  : [eval_srch_bb10_in/10]
4. non_recursive  : [eval_srch_25/10]
5. non_recursive  : [eval_srch_24/10]
6. non_recursive  : [eval_srch_bb8_in/10]
7. non_recursive  : [eval_srch_27/10]
8. non_recursive  : [eval_srch_26/10]
9. non_recursive  : [eval_srch_bb9_in/10]
10. non_recursive  : [exit_location/1]
11. non_recursive  : [eval_srch_bb1_in_loop_cont/11]
12. non_recursive  : [eval_srch_10/10]
13. non_recursive  : [eval_srch_9/10]
14. non_recursive  : [eval_srch_8/10]
15. non_recursive  : [eval_srch_7/10]
16. non_recursive  : [eval_srch_6/10]
17. non_recursive  : [eval_srch_5/10]
18. non_recursive  : [eval_srch_4/10]
19. non_recursive  : [eval_srch_3/10]
20. non_recursive  : [eval_srch_2/10]
21. non_recursive  : [eval_srch_1/10]
22. non_recursive  : [eval_srch_0/10]
23. non_recursive  : [eval_srch_bb0_in/10]
24. non_recursive  : [eval_srch_start/10]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_srch_bb3_in/6
1. SCC is partially evaluated into eval_srch_bb1_in/19
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is completely evaluated into other SCCs
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is partially evaluated into eval_srch_bb1_in_loop_cont/11
12. SCC is partially evaluated into eval_srch_10/10
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is completely evaluated into other SCCs
18. SCC is completely evaluated into other SCCs
19. SCC is completely evaluated into other SCCs
20. SCC is completely evaluated into other SCCs
21. SCC is completely evaluated into other SCCs
22. SCC is completely evaluated into other SCCs
23. SCC is completely evaluated into other SCCs
24. SCC is partially evaluated into eval_srch_start/10

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_srch_bb3_in/6 
* CE 17 is refined into CE [21] 
* CE 15 is refined into CE [22] 
* CE 20 is refined into CE [23] 
* CE 18 is refined into CE [24] 
* CE 19 is refined into CE [25] 
* CE 16 is refined into CE [26] 


### Cost equations --> "Loop" of eval_srch_bb3_in/6 
* CEs [26] --> Loop 21 
* CEs [21] --> Loop 22 
* CEs [22] --> Loop 23 
* CEs [23] --> Loop 24 
* CEs [24] --> Loop 25 
* CEs [25] --> Loop 26 

### Ranking functions of CR eval_srch_bb3_in(V_11,V_3,V_j_1,B,C,D) 
* RF of phase [21]: [V_j_1+1]

#### Partial ranking functions of CR eval_srch_bb3_in(V_11,V_3,V_j_1,B,C,D) 
* Partial RF of phase [21]:
  - RF of loop [21:1]:
    V_j_1+1


### Specialization of cost equations eval_srch_bb1_in/19 
* CE 9 is refined into CE [27] 
* CE 6 is refined into CE [28,29,30,31] 
* CE 3 is refined into CE [32,33] 
* CE 4 is refined into CE [34,35] 
* CE 5 is refined into CE [36,37] 
* CE 10 is refined into CE [38] 
* CE 7 is refined into CE [39,40,41,42] 
* CE 8 is refined into CE [43,44,45,46] 


### Cost equations --> "Loop" of eval_srch_bb1_in/19 
* CEs [42] --> Loop 27 
* CEs [46] --> Loop 28 
* CEs [45] --> Loop 29 
* CEs [41] --> Loop 30 
* CEs [44] --> Loop 31 
* CEs [40] --> Loop 32 
* CEs [39] --> Loop 33 
* CEs [43] --> Loop 34 
* CEs [27] --> Loop 35 
* CEs [31] --> Loop 36 
* CEs [30] --> Loop 37 
* CEs [29] --> Loop 38 
* CEs [33] --> Loop 39 
* CEs [32] --> Loop 40 
* CEs [35] --> Loop 41 
* CEs [34] --> Loop 42 
* CEs [36] --> Loop 43 
* CEs [37] --> Loop 44 
* CEs [38] --> Loop 45 
* CEs [28] --> Loop 46 

### Ranking functions of CR eval_srch_bb1_in(V_11,V_22,V_23,V_3,V_i_0,V_j_0,V_j_1,V_m,V_n,B,C,D,E,F,G,H,I,J,K) 
* RF of phase [27,30,33]: [-V_i_0+V_n]
* RF of phase [28,29,34]: [-V_i_0+V_n]

#### Partial ranking functions of CR eval_srch_bb1_in(V_11,V_22,V_23,V_3,V_i_0,V_j_0,V_j_1,V_m,V_n,B,C,D,E,F,G,H,I,J,K) 
* Partial RF of phase [27,30,33]:
  - RF of loop [27:1,30:1,33:1]:
    -V_i_0+V_n
  - RF of loop [30:1]:
    -V_j_0+V_m-1 depends on loops [27:1,33:1] 
    -V_j_0+V_n depends on loops [27:1,33:1] 
* Partial RF of phase [28,29,34]:
  - RF of loop [28:1,29:1,34:1]:
    -V_i_0+V_n
  - RF of loop [29:1]:
    -V_j_0+V_n depends on loops [28:1,34:1] 


### Specialization of cost equations eval_srch_bb1_in_loop_cont/11 
* CE 11 is refined into CE [47] 
* CE 14 is refined into CE [48] 
* CE 13 is refined into CE [49] 
* CE 12 is refined into CE [50] 


### Cost equations --> "Loop" of eval_srch_bb1_in_loop_cont/11 
* CEs [47] --> Loop 47 
* CEs [48] --> Loop 48 
* CEs [49] --> Loop 49 
* CEs [50] --> Loop 50 

### Ranking functions of CR eval_srch_bb1_in_loop_cont(A,B,C,D,E,F,G,H,I,J,K) 

#### Partial ranking functions of CR eval_srch_bb1_in_loop_cont(A,B,C,D,E,F,G,H,I,J,K) 


### Specialization of cost equations eval_srch_10/10 
* CE 2 is refined into CE [51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73] 


### Cost equations --> "Loop" of eval_srch_10/10 
* CEs [55,59,64] --> Loop 51 
* CEs [63,68] --> Loop 52 
* CEs [73] --> Loop 53 
* CEs [54,61,66] --> Loop 54 
* CEs [53,72] --> Loop 55 
* CEs [69] --> Loop 56 
* CEs [57,60,62,65,67] --> Loop 57 
* CEs [56,71] --> Loop 58 
* CEs [70] --> Loop 59 
* CEs [52] --> Loop 60 
* CEs [51] --> Loop 61 
* CEs [58] --> Loop 62 

### Ranking functions of CR eval_srch_10(V_11,V_22,V_23,V_3,V_i_0,V_j_0,V_j_1,V_m,V_n,B) 

#### Partial ranking functions of CR eval_srch_10(V_11,V_22,V_23,V_3,V_i_0,V_j_0,V_j_1,V_m,V_n,B) 


### Specialization of cost equations eval_srch_start/10 
* CE 1 is refined into CE [74,75,76,77,78,79,80,81,82,83,84,85] 


### Cost equations --> "Loop" of eval_srch_start/10 
* CEs [85] --> Loop 63 
* CEs [84] --> Loop 64 
* CEs [83] --> Loop 65 
* CEs [82] --> Loop 66 
* CEs [81] --> Loop 67 
* CEs [80] --> Loop 68 
* CEs [79] --> Loop 69 
* CEs [78] --> Loop 70 
* CEs [77] --> Loop 71 
* CEs [76] --> Loop 72 
* CEs [75] --> Loop 73 
* CEs [74] --> Loop 74 

### Ranking functions of CR eval_srch_start(V_11,V_22,V_23,V_3,V_i_0,V_j_0,V_j_1,V_m,V_n,B) 

#### Partial ranking functions of CR eval_srch_start(V_11,V_22,V_23,V_3,V_i_0,V_j_0,V_j_1,V_m,V_n,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_srch_bb3_in(V_11,V_3,V_j_1,B,C,D):
* Chain [[21],26]: 1*it(21)+0
  Such that:it(21) =< V_j_1+1

  with precondition: [B=2,D+1=0,C>=1,V_j_1+1>=C] 

* Chain [[21],25]: 1*it(21)+0
  Such that:it(21) =< V_j_1-D

  with precondition: [B=2,C>=1,D>=0,V_j_1>=C+D] 

* Chain [[21],24]: 1*it(21)+0
  Such that:it(21) =< V_j_1+1

  with precondition: [B=3,V_j_1>=0] 

* Chain [[21],23]: 1*it(21)+0
  Such that:it(21) =< V_j_1-D

  with precondition: [B=4,C>=1,D>=0,V_j_1>=C+D] 

* Chain [[21],22]: 1*it(21)+0
  Such that:it(21) =< V_j_1-D

  with precondition: [B=5,D>=0,V_j_1>=D+1,C>=D+2] 

* Chain [26]: 0
  with precondition: [B=2,C=V_11,V_j_1=D,0>=V_j_1+1] 

* Chain [25]: 0
  with precondition: [B=2,C=V_11,V_j_1=D,V_j_1>=0] 

* Chain [24]: 0
  with precondition: [B=3] 

* Chain [23]: 0
  with precondition: [B=4,C=V_11,V_j_1=D,V_j_1>=0] 

* Chain [22]: 0
  with precondition: [B=5,V_j_1=D,V_j_1>=0,C>=V_j_1+2] 


#### Cost of chains of eval_srch_bb1_in(V_11,V_22,V_23,V_3,V_i_0,V_j_0,V_j_1,V_m,V_n,B,C,D,E,F,G,H,I,J,K):
* Chain [[28,29,34],[27,30,33],45]: 1*it(27)+1*it(28)+1*it(29)+1*it(30)+1*it(33)+1*it(34)+2*s(5)+1*s(11)+1*s(12)+0
  Such that:aux(42) =< -V_m+V_n
aux(57) =< -V_i_0+V_j_0-V_m+V_n
aux(58) =< -V_i_0+V_j_0+V_n
aux(59) =< -V_i_0+V_n
aux(60) =< -V_i_0+2*V_n
aux(61) =< -V_j_0+V_n
aux(62) =< V_n
aux(34) =< aux(57)
aux(51) =< aux(57)
aux(33) =< aux(58)
aux(51) =< aux(58)
aux(34) =< aux(59)
aux(41) =< aux(59)
aux(55) =< aux(59)
aux(33) =< aux(60)
aux(55) =< aux(60)
aux(41) =< aux(61)
s(5) =< aux(33)
it(33) =< aux(33)
it(27) =< aux(34)
it(30) =< aux(34)
it(33) =< aux(34)
aux(21) =< aux(62)+1
aux(17) =< aux(62)
aux(14) =< it(27)*aux(62)
aux(1) =< it(27)*aux(62)
aux(2) =< it(33)*aux(21)
aux(18) =< it(27)*aux(17)
aux(1) =< it(27)*aux(17)
aux(4) =< aux(14)
aux(4) =< aux(18)
it(30) =< aux(2)+aux(1)
it(30) =< aux(2)+aux(4)
it(30) =< aux(2)+aux(4)+aux(60)
it(34) =< aux(57)
s(11) =< aux(57)
it(34) =< aux(51)
s(11) =< aux(51)
s(11) =< aux(58)
s(12) =< aux(58)
s(12) =< aux(51)
it(28) =< aux(59)
it(29) =< aux(59)
it(34) =< aux(59)
it(28) =< aux(55)
it(29) =< aux(55)
it(34) =< aux(55)
aux(42) =< aux(62)
aux(46) =< aux(62)
aux(48) =< aux(42)+1
aux(46) =< aux(42)+1
aux(44) =< aux(42)
aux(43) =< it(28)*aux(42)
aux(36) =< it(28)*aux(42)
aux(48) =< aux(46)
aux(47) =< it(34)*aux(46)
aux(37) =< it(34)*aux(46)
aux(45) =< it(28)*aux(44)
aux(36) =< it(28)*aux(44)
aux(39) =< aux(43)
aux(49) =< it(34)*aux(48)
aux(37) =< it(34)*aux(48)
aux(40) =< aux(47)
aux(39) =< aux(45)
aux(40) =< aux(49)
it(29) =< aux(37)+aux(36)+aux(61)
it(29) =< aux(40)+aux(39)+aux(41)

  with precondition: [B=3,V_m>=1,V_n>=V_i_0+2,V_i_0>=V_j_0,V_j_0>=V_m] 

* Chain [[28,29,34],[27,30,33],44]: 1*it(27)+1*it(28)+1*it(29)+1*it(30)+1*it(33)+1*it(34)+3*s(5)+1*s(11)+1*s(12)+0
  Such that:aux(42) =< -V_m+V_n
aux(66) =< -V_i_0+V_j_0-V_m+V_n
aux(67) =< -V_i_0+V_j_0+V_n
aux(68) =< -V_i_0+V_n
aux(69) =< -V_i_0+2*V_n
aux(70) =< -V_j_0+V_n
aux(71) =< V_n
aux(51) =< aux(66)
aux(64) =< aux(66)
aux(51) =< aux(67)
aux(63) =< aux(67)
aux(41) =< aux(68)
aux(55) =< aux(68)
aux(64) =< aux(68)
aux(55) =< aux(69)
aux(63) =< aux(69)
aux(41) =< aux(70)
s(5) =< aux(63)
it(33) =< aux(63)
it(27) =< aux(64)
it(30) =< aux(64)
it(33) =< aux(64)
aux(21) =< aux(71)+1
aux(17) =< aux(71)
aux(14) =< it(27)*aux(71)
aux(1) =< it(27)*aux(71)
aux(2) =< it(33)*aux(21)
aux(18) =< it(27)*aux(17)
aux(1) =< it(27)*aux(17)
aux(4) =< aux(14)
aux(4) =< aux(18)
it(30) =< aux(2)+aux(1)
it(30) =< aux(2)+aux(4)
it(30) =< aux(2)+aux(4)+aux(69)
it(34) =< aux(66)
s(11) =< aux(66)
it(34) =< aux(51)
s(11) =< aux(51)
s(11) =< aux(67)
s(12) =< aux(67)
s(12) =< aux(51)
it(28) =< aux(68)
it(29) =< aux(68)
it(34) =< aux(68)
it(28) =< aux(55)
it(29) =< aux(55)
it(34) =< aux(55)
aux(42) =< aux(71)
aux(46) =< aux(71)
aux(48) =< aux(42)+1
aux(46) =< aux(42)+1
aux(44) =< aux(42)
aux(43) =< it(28)*aux(42)
aux(36) =< it(28)*aux(42)
aux(48) =< aux(46)
aux(47) =< it(34)*aux(46)
aux(37) =< it(34)*aux(46)
aux(45) =< it(28)*aux(44)
aux(36) =< it(28)*aux(44)
aux(39) =< aux(43)
aux(49) =< it(34)*aux(48)
aux(37) =< it(34)*aux(48)
aux(40) =< aux(47)
aux(39) =< aux(45)
aux(40) =< aux(49)
it(29) =< aux(37)+aux(36)+aux(70)
it(29) =< aux(40)+aux(39)+aux(41)

  with precondition: [B=3,V_m>=1,V_n>=V_i_0+3,V_i_0>=V_j_0,V_j_0>=V_m] 

* Chain [[28,29,34],[27,30,33],43]: 1*it(27)+1*it(28)+1*it(29)+1*it(30)+1*it(33)+1*it(34)+2*s(5)+1*s(11)+1*s(12)+0
  Such that:aux(42) =< -V_m+V_n
aux(75) =< -V_i_0+V_j_0-V_m+V_n
aux(76) =< -V_i_0+V_j_0+V_n
aux(77) =< -V_i_0+V_n
aux(78) =< -V_i_0+2*V_n
aux(79) =< -V_j_0+V_n
aux(80) =< V_n
aux(51) =< aux(75)
aux(73) =< aux(75)
aux(51) =< aux(76)
aux(72) =< aux(76)
aux(41) =< aux(77)
aux(55) =< aux(77)
aux(73) =< aux(77)
aux(55) =< aux(78)
aux(72) =< aux(78)
aux(41) =< aux(79)
s(5) =< aux(72)
it(33) =< aux(72)
it(27) =< aux(73)
it(30) =< aux(73)
it(33) =< aux(73)
aux(21) =< aux(80)+1
aux(17) =< aux(80)
aux(14) =< it(27)*aux(80)
aux(1) =< it(27)*aux(80)
aux(2) =< it(33)*aux(21)
aux(18) =< it(27)*aux(17)
aux(1) =< it(27)*aux(17)
aux(4) =< aux(14)
aux(4) =< aux(18)
it(30) =< aux(2)+aux(1)
it(30) =< aux(2)+aux(4)
it(30) =< aux(2)+aux(4)+aux(78)
it(34) =< aux(75)
s(11) =< aux(75)
it(34) =< aux(51)
s(11) =< aux(51)
s(11) =< aux(76)
s(12) =< aux(76)
s(12) =< aux(51)
it(28) =< aux(77)
it(29) =< aux(77)
it(34) =< aux(77)
it(28) =< aux(55)
it(29) =< aux(55)
it(34) =< aux(55)
aux(42) =< aux(80)
aux(46) =< aux(80)
aux(48) =< aux(42)+1
aux(46) =< aux(42)+1
aux(44) =< aux(42)
aux(43) =< it(28)*aux(42)
aux(36) =< it(28)*aux(42)
aux(48) =< aux(46)
aux(47) =< it(34)*aux(46)
aux(37) =< it(34)*aux(46)
aux(45) =< it(28)*aux(44)
aux(36) =< it(28)*aux(44)
aux(39) =< aux(43)
aux(49) =< it(34)*aux(48)
aux(37) =< it(34)*aux(48)
aux(40) =< aux(47)
aux(39) =< aux(45)
aux(40) =< aux(49)
it(29) =< aux(37)+aux(36)+aux(79)
it(29) =< aux(40)+aux(39)+aux(41)

  with precondition: [B=3,V_m>=1,V_n>=V_i_0+3,V_i_0>=V_j_0,V_j_0>=V_m] 

* Chain [[28,29,34],[27,30,33],42]: 1*it(27)+1*it(28)+1*it(29)+1*it(30)+1*it(33)+1*it(34)+2*s(5)+1*s(11)+1*s(12)+0
  Such that:aux(32) =< -V_i_0+V_j_0-V_m+D
aux(32) =< -V_i_0+D
aux(41) =< -V_i_0+G
aux(38) =< -V_j_0+V_n
aux(41) =< -V_j_0+D
aux(42) =< -V_m+V_n
aux(81) =< -V_m+E
aux(81) =< H-J
aux(82) =< I
aux(83) =< -V_i_0+V_j_0-V_m+V_n
aux(84) =< -V_i_0+V_j_0+V_n
aux(85) =< -V_i_0+V_j_0+D-I
aux(86) =< -V_i_0+V_n
aux(87) =< -V_i_0+V_n+D-I
aux(88) =< -V_i_0+2*V_n
aux(89) =< V_n
aux(31) =< aux(83)
aux(29) =< aux(84)
aux(51) =< aux(84)
aux(30) =< aux(85)
aux(51) =< aux(85)
aux(31) =< aux(86)
aux(6) =< aux(87)
aux(30) =< aux(87)
aux(6) =< aux(88)
aux(29) =< aux(88)
aux(9) =< aux(81)
aux(9) =< aux(82)
s(5) =< aux(29)
it(33) =< aux(30)
s(5) =< aux(30)
it(27) =< aux(31)
it(30) =< aux(31)
it(33) =< aux(31)
it(27) =< aux(32)
it(30) =< aux(32)
it(33) =< aux(32)
aux(21) =< aux(89)+1
aux(17) =< aux(89)
aux(14) =< it(27)*aux(89)
aux(1) =< it(27)*aux(89)
aux(2) =< it(33)*aux(21)
aux(18) =< it(27)*aux(17)
aux(1) =< it(27)*aux(17)
aux(4) =< aux(14)
aux(4) =< aux(18)
it(30) =< aux(2)+aux(1)
it(30) =< aux(2)+aux(4)+aux(9)
it(30) =< aux(2)+aux(4)+aux(6)
it(34) =< aux(83)
s(11) =< aux(83)
it(34) =< aux(51)
s(11) =< aux(51)
s(11) =< aux(84)
s(12) =< aux(84)
s(12) =< aux(51)
it(28) =< aux(86)
it(29) =< aux(86)
it(34) =< aux(86)
it(28) =< aux(6)
it(29) =< aux(6)
it(34) =< aux(6)
aux(42) =< aux(89)
aux(46) =< aux(89)
aux(48) =< aux(42)+1
aux(46) =< aux(42)+1
aux(44) =< aux(42)
aux(43) =< it(28)*aux(42)
aux(36) =< it(28)*aux(42)
aux(48) =< aux(46)
aux(47) =< it(34)*aux(46)
aux(37) =< it(34)*aux(46)
aux(45) =< it(28)*aux(44)
aux(36) =< it(28)*aux(44)
aux(39) =< aux(43)
aux(49) =< it(34)*aux(48)
aux(37) =< it(34)*aux(48)
aux(40) =< aux(47)
aux(39) =< aux(45)
aux(40) =< aux(49)
it(29) =< aux(37)+aux(36)+aux(38)
it(29) =< aux(40)+aux(39)+aux(41)

  with precondition: [B=4,D=G,E=H,E=I,V_m=J,V_n=K,E>=0,D>=V_i_0+2,V_i_0>=V_j_0,V_j_0>=V_m,V_n>=D+1,V_m>=E+1] 

* Chain [[28,29,34],[27,30,33],41]: 1*it(27)+1*it(28)+1*it(29)+1*it(30)+1*it(33)+1*it(34)+2*s(5)+1*s(11)+1*s(12)+1*s(14)+0
  Such that:aux(32) =< -V_i_0+V_j_0-V_m+G
aux(41) =< -V_i_0+D
aux(32) =< -V_i_0+G
aux(38) =< -V_j_0+V_n
aux(41) =< -V_j_0+D
aux(42) =< -V_m+V_n
aux(90) =< -V_m+H
aux(91) =< E
aux(90) =< E-J
aux(92) =< -V_i_0+V_j_0-V_m+V_n
aux(93) =< -V_i_0+V_j_0+V_n
aux(94) =< -V_i_0+V_j_0-E+G
aux(95) =< -V_i_0+V_n
aux(96) =< -V_i_0+V_n-E+G
aux(97) =< -V_i_0+2*V_n
aux(98) =< V_n
aux(31) =< aux(92)
aux(29) =< aux(93)
aux(51) =< aux(93)
aux(30) =< aux(94)
aux(51) =< aux(94)
aux(31) =< aux(95)
aux(6) =< aux(96)
aux(30) =< aux(96)
aux(6) =< aux(97)
aux(29) =< aux(97)
aux(9) =< aux(90)
aux(9) =< aux(91)
s(14) =< aux(91)
s(5) =< aux(29)
it(33) =< aux(30)
s(5) =< aux(30)
it(27) =< aux(31)
it(30) =< aux(31)
it(33) =< aux(31)
it(27) =< aux(32)
it(30) =< aux(32)
it(33) =< aux(32)
aux(21) =< aux(98)+1
aux(17) =< aux(98)
aux(14) =< it(27)*aux(98)
aux(1) =< it(27)*aux(98)
aux(2) =< it(33)*aux(21)
aux(18) =< it(27)*aux(17)
aux(1) =< it(27)*aux(17)
aux(4) =< aux(14)
aux(4) =< aux(18)
it(30) =< aux(2)+aux(1)
it(30) =< aux(2)+aux(4)+aux(9)
it(30) =< aux(2)+aux(4)+aux(6)
it(34) =< aux(92)
s(11) =< aux(92)
it(34) =< aux(51)
s(11) =< aux(51)
s(11) =< aux(93)
s(12) =< aux(93)
s(12) =< aux(51)
it(28) =< aux(95)
it(29) =< aux(95)
it(34) =< aux(95)
it(28) =< aux(6)
it(29) =< aux(6)
it(34) =< aux(6)
aux(42) =< aux(98)
aux(46) =< aux(98)
aux(48) =< aux(42)+1
aux(46) =< aux(42)+1
aux(44) =< aux(42)
aux(43) =< it(28)*aux(42)
aux(36) =< it(28)*aux(42)
aux(48) =< aux(46)
aux(47) =< it(34)*aux(46)
aux(37) =< it(34)*aux(46)
aux(45) =< it(28)*aux(44)
aux(36) =< it(28)*aux(44)
aux(39) =< aux(43)
aux(49) =< it(34)*aux(48)
aux(37) =< it(34)*aux(48)
aux(40) =< aux(47)
aux(39) =< aux(45)
aux(40) =< aux(49)
it(29) =< aux(37)+aux(36)+aux(38)
it(29) =< aux(40)+aux(39)+aux(41)

  with precondition: [B=4,G=D,E=H,V_m=J,V_n=K,C>=1,I>=0,G>=V_i_0+2,V_i_0>=V_j_0,V_j_0>=V_m,V_m>=E+1,V_n>=G+1,E>=C+I] 

* Chain [[28,29,34],[27,30,33],40]: 1*it(27)+1*it(28)+1*it(29)+1*it(30)+1*it(33)+1*it(34)+2*s(5)+1*s(11)+1*s(12)+0
  Such that:aux(32) =< -V_i_0+V_j_0-V_m+G
aux(41) =< -V_j_0+D
aux(38) =< -V_j_0+K
aux(99) =< -V_m+E
aux(42) =< -V_m+K
aux(100) =< E
aux(99) =< I-J
aux(101) =< -V_i_0+V_j_0-V_m+K
aux(102) =< -V_i_0+V_j_0-E+G
aux(103) =< -V_i_0+V_j_0+K
aux(104) =< -V_i_0-E+G+K
aux(105) =< -V_i_0+G
aux(106) =< -V_i_0+K
aux(107) =< -V_i_0+2*K
aux(108) =< K
aux(31) =< aux(101)
aux(30) =< aux(102)
aux(51) =< aux(102)
aux(29) =< aux(103)
aux(51) =< aux(103)
aux(6) =< aux(104)
aux(30) =< aux(104)
aux(32) =< aux(105)
aux(41) =< aux(105)
aux(31) =< aux(106)
aux(6) =< aux(107)
aux(29) =< aux(107)
aux(9) =< aux(99)
aux(9) =< aux(100)
s(5) =< aux(29)
it(33) =< aux(30)
s(5) =< aux(30)
it(27) =< aux(31)
it(30) =< aux(31)
it(33) =< aux(31)
it(27) =< aux(32)
it(30) =< aux(32)
it(33) =< aux(32)
aux(21) =< aux(108)+1
aux(17) =< aux(108)
aux(14) =< it(27)*aux(108)
aux(1) =< it(27)*aux(108)
aux(2) =< it(33)*aux(21)
aux(18) =< it(27)*aux(17)
aux(1) =< it(27)*aux(17)
aux(4) =< aux(14)
aux(4) =< aux(18)
it(30) =< aux(2)+aux(1)
it(30) =< aux(2)+aux(4)+aux(9)
it(30) =< aux(2)+aux(4)+aux(6)
it(34) =< aux(101)
s(11) =< aux(101)
it(34) =< aux(51)
s(11) =< aux(51)
s(11) =< aux(103)
s(12) =< aux(103)
s(12) =< aux(51)
it(28) =< aux(106)
it(29) =< aux(106)
it(34) =< aux(106)
it(28) =< aux(6)
it(29) =< aux(6)
it(34) =< aux(6)
aux(42) =< aux(108)
aux(46) =< aux(108)
aux(48) =< aux(42)+1
aux(46) =< aux(42)+1
aux(44) =< aux(42)
aux(43) =< it(28)*aux(42)
aux(36) =< it(28)*aux(42)
aux(48) =< aux(46)
aux(47) =< it(34)*aux(46)
aux(37) =< it(34)*aux(46)
aux(45) =< it(28)*aux(44)
aux(36) =< it(28)*aux(44)
aux(39) =< aux(43)
aux(49) =< it(34)*aux(48)
aux(37) =< it(34)*aux(48)
aux(40) =< aux(47)
aux(39) =< aux(45)
aux(40) =< aux(49)
it(29) =< aux(37)+aux(36)+aux(38)
it(29) =< aux(40)+aux(39)+aux(41)

  with precondition: [B=5,D=G,E=H,E=I,V_m=J,V_n=K,E>=0,D>=V_i_0+2,V_i_0>=V_j_0,V_j_0>=V_m,V_n>=D+1,V_m>=E+1,C>=E+2] 

* Chain [[28,29,34],[27,30,33],39]: 1*it(27)+1*it(28)+1*it(29)+1*it(30)+1*it(33)+1*it(34)+2*s(5)+1*s(11)+1*s(12)+1*s(15)+0
  Such that:aux(32) =< -V_i_0+V_j_0-V_m+D
aux(32) =< -V_i_0+D
aux(41) =< -V_i_0+G
aux(41) =< -V_j_0+D
aux(38) =< -V_j_0+K
aux(109) =< -V_m+H
aux(42) =< -V_m+K
aux(109) =< E-J
aux(111) =< -V_i_0+V_j_0-V_m+K
aux(112) =< -V_i_0+V_j_0+D-E
aux(113) =< -V_i_0+V_j_0+K
aux(114) =< -V_i_0+D-E+K
aux(115) =< -V_i_0+K
aux(116) =< -V_i_0+2*K
aux(117) =< E
aux(118) =< K
aux(31) =< aux(111)
aux(30) =< aux(112)
aux(51) =< aux(112)
aux(29) =< aux(113)
aux(51) =< aux(113)
aux(6) =< aux(114)
aux(30) =< aux(114)
aux(31) =< aux(115)
aux(6) =< aux(116)
aux(29) =< aux(116)
s(15) =< aux(117)
aux(9) =< aux(109)
aux(9) =< aux(117)
s(5) =< aux(29)
it(33) =< aux(30)
s(5) =< aux(30)
it(27) =< aux(31)
it(30) =< aux(31)
it(33) =< aux(31)
it(27) =< aux(32)
it(30) =< aux(32)
it(33) =< aux(32)
aux(21) =< aux(118)+1
aux(17) =< aux(118)
aux(14) =< it(27)*aux(118)
aux(1) =< it(27)*aux(118)
aux(2) =< it(33)*aux(21)
aux(18) =< it(27)*aux(17)
aux(1) =< it(27)*aux(17)
aux(4) =< aux(14)
aux(4) =< aux(18)
it(30) =< aux(2)+aux(1)
it(30) =< aux(2)+aux(4)+aux(9)
it(30) =< aux(2)+aux(4)+aux(6)
it(34) =< aux(111)
s(11) =< aux(111)
it(34) =< aux(51)
s(11) =< aux(51)
s(11) =< aux(113)
s(12) =< aux(113)
s(12) =< aux(51)
it(28) =< aux(115)
it(29) =< aux(115)
it(34) =< aux(115)
it(28) =< aux(6)
it(29) =< aux(6)
it(34) =< aux(6)
aux(42) =< aux(118)
aux(46) =< aux(118)
aux(48) =< aux(42)+1
aux(46) =< aux(42)+1
aux(44) =< aux(42)
aux(43) =< it(28)*aux(42)
aux(36) =< it(28)*aux(42)
aux(48) =< aux(46)
aux(47) =< it(34)*aux(46)
aux(37) =< it(34)*aux(46)
aux(45) =< it(28)*aux(44)
aux(36) =< it(28)*aux(44)
aux(39) =< aux(43)
aux(49) =< it(34)*aux(48)
aux(37) =< it(34)*aux(48)
aux(40) =< aux(47)
aux(39) =< aux(45)
aux(40) =< aux(49)
it(29) =< aux(37)+aux(36)+aux(38)
it(29) =< aux(40)+aux(39)+aux(41)

  with precondition: [B=5,D=G,E=H,V_m=J,V_n=K,I>=0,D>=V_i_0+2,V_i_0>=V_j_0,V_j_0>=V_m,V_n>=D+1,V_m>=E+1,C>=I+2,E>=I+1] 

* Chain [[28,29,34],[27,30,33],37]: 1*it(27)+1*it(28)+1*it(29)+1*it(30)+1*it(33)+1*it(34)+2*s(5)+1*s(11)+1*s(12)+0
  Such that:aux(32) =< -V_i_0+D
aux(41) =< -V_i_0+G
aux(38) =< -V_j_0+V_n
aux(41) =< -V_j_0+D
aux(42) =< -V_m+V_n
aux(122) =< -V_i_0+V_j_0-V_m+V_n
aux(123) =< -V_i_0+V_j_0-V_m+D
aux(124) =< -V_i_0+V_j_0+V_n
aux(125) =< -V_i_0-V_m+V_n+D
aux(126) =< -V_i_0+V_n
aux(127) =< -V_i_0+2*V_n
aux(128) =< V_n
aux(31) =< aux(122)
aux(30) =< aux(123)
aux(32) =< aux(123)
aux(51) =< aux(123)
aux(29) =< aux(124)
aux(51) =< aux(124)
aux(6) =< aux(125)
aux(30) =< aux(125)
aux(31) =< aux(126)
aux(6) =< aux(127)
aux(29) =< aux(127)
s(5) =< aux(29)
it(33) =< aux(30)
s(5) =< aux(30)
it(27) =< aux(31)
it(30) =< aux(31)
it(33) =< aux(31)
it(27) =< aux(32)
it(30) =< aux(32)
it(33) =< aux(32)
aux(21) =< aux(128)+1
aux(17) =< aux(128)
aux(14) =< it(27)*aux(128)
aux(1) =< it(27)*aux(128)
aux(2) =< it(33)*aux(21)
aux(18) =< it(27)*aux(17)
aux(1) =< it(27)*aux(17)
aux(4) =< aux(14)
aux(4) =< aux(18)
it(30) =< aux(2)+aux(1)
it(30) =< aux(2)+aux(4)
it(30) =< aux(2)+aux(4)+aux(6)
it(34) =< aux(122)
s(11) =< aux(122)
it(34) =< aux(51)
s(11) =< aux(51)
s(11) =< aux(124)
s(12) =< aux(124)
s(12) =< aux(51)
it(28) =< aux(126)
it(29) =< aux(126)
it(34) =< aux(126)
it(28) =< aux(6)
it(29) =< aux(6)
it(34) =< aux(6)
aux(42) =< aux(128)
aux(46) =< aux(128)
aux(48) =< aux(42)+1
aux(46) =< aux(42)+1
aux(44) =< aux(42)
aux(43) =< it(28)*aux(42)
aux(36) =< it(28)*aux(42)
aux(48) =< aux(46)
aux(47) =< it(34)*aux(46)
aux(37) =< it(34)*aux(46)
aux(45) =< it(28)*aux(44)
aux(36) =< it(28)*aux(44)
aux(39) =< aux(43)
aux(49) =< it(34)*aux(48)
aux(37) =< it(34)*aux(48)
aux(40) =< aux(47)
aux(39) =< aux(45)
aux(40) =< aux(49)
it(29) =< aux(37)+aux(36)+aux(38)
it(29) =< aux(40)+aux(39)+aux(41)

  with precondition: [B=6,E=V_m,D=G+1,E=H+1,E=I+1,E=J,V_n=K,E>=1,D>=V_i_0+3,V_i_0>=V_j_0,V_n>=D,V_j_0>=E] 

* Chain [[28,29,34],[27,30,33],35]: 1*it(27)+1*it(28)+1*it(29)+1*it(30)+1*it(33)+1*it(34)+2*s(5)+1*s(11)+1*s(12)+0
  Such that:aux(54) =< -V_i_0+V_n
aux(41) =< -V_i_0+G
aux(38) =< -V_j_0+V_n
aux(41) =< -V_j_0+D
aux(42) =< -V_m+V_n
aux(131) =< -V_m+E
aux(131) =< H-J
aux(132) =< -V_i_0+V_j_0-V_m+V_n
aux(133) =< -V_i_0+V_j_0+V_n
aux(134) =< -V_i_0+V_j_0+V_n-I
aux(135) =< -V_i_0+2*V_n
aux(136) =< -V_i_0+2*V_n-I
aux(137) =< V_n
aux(29) =< aux(133)
aux(51) =< aux(133)
aux(30) =< aux(134)
aux(51) =< aux(134)
aux(6) =< aux(135)
aux(29) =< aux(135)
aux(6) =< aux(136)
aux(30) =< aux(136)
aux(9) =< aux(132)
aux(9) =< aux(131)
s(5) =< aux(29)
it(33) =< aux(30)
s(5) =< aux(30)
it(27) =< aux(132)
it(30) =< aux(132)
it(33) =< aux(132)
aux(21) =< aux(137)+1
aux(17) =< aux(137)
aux(14) =< it(27)*aux(137)
aux(1) =< it(27)*aux(137)
aux(2) =< it(33)*aux(21)
aux(18) =< it(27)*aux(17)
aux(1) =< it(27)*aux(17)
aux(4) =< aux(14)
aux(4) =< aux(18)
it(30) =< aux(2)+aux(1)
it(30) =< aux(2)+aux(4)+aux(9)
it(30) =< aux(2)+aux(4)+aux(6)
it(34) =< aux(132)
s(11) =< aux(132)
it(34) =< aux(51)
s(11) =< aux(51)
s(11) =< aux(133)
s(12) =< aux(133)
s(12) =< aux(51)
it(28) =< aux(54)
it(29) =< aux(54)
it(34) =< aux(54)
it(28) =< aux(6)
it(29) =< aux(6)
it(34) =< aux(6)
aux(42) =< aux(137)
aux(46) =< aux(137)
aux(48) =< aux(42)+1
aux(46) =< aux(42)+1
aux(44) =< aux(42)
aux(43) =< it(28)*aux(42)
aux(36) =< it(28)*aux(42)
aux(48) =< aux(46)
aux(47) =< it(34)*aux(46)
aux(37) =< it(34)*aux(46)
aux(45) =< it(28)*aux(44)
aux(36) =< it(28)*aux(44)
aux(39) =< aux(43)
aux(49) =< it(34)*aux(48)
aux(37) =< it(34)*aux(48)
aux(40) =< aux(47)
aux(39) =< aux(45)
aux(40) =< aux(49)
it(29) =< aux(37)+aux(36)+aux(38)
it(29) =< aux(40)+aux(39)+aux(41)

  with precondition: [B=6,K=V_n,K=D,K=G,E=H,E=I+1,V_m=J,E>=0,K>=V_i_0+2,V_i_0>=V_j_0,V_j_0>=V_m,V_m>=E+1] 

* Chain [[28,29,34],46]: 1*it(28)+1*it(29)+1*it(34)+2*s(11)+1*s(16)+0
  Such that:aux(55) =< -V_i_0+D
aux(54) =< -V_i_0+K
aux(41) =< -V_j_0+H
aux(38) =< -V_j_0+K
aux(41) =< H
s(16) =< H+1
aux(138) =< -V_i_0+V_j_0+D-H
aux(139) =< -V_i_0+V_j_0+K
aux(140) =< K
it(34) =< aux(139)
s(11) =< aux(139)
it(34) =< aux(138)
s(11) =< aux(138)
it(28) =< aux(54)
it(29) =< aux(54)
it(34) =< aux(54)
it(28) =< aux(55)
it(29) =< aux(55)
it(34) =< aux(55)
aux(46) =< aux(140)
aux(48) =< aux(140)+1
aux(46) =< aux(140)+1
aux(44) =< aux(140)
aux(43) =< it(28)*aux(140)
aux(36) =< it(28)*aux(140)
aux(48) =< aux(46)
aux(47) =< it(34)*aux(46)
aux(37) =< it(34)*aux(46)
aux(45) =< it(28)*aux(44)
aux(36) =< it(28)*aux(44)
aux(39) =< aux(43)
aux(49) =< it(34)*aux(48)
aux(37) =< it(34)*aux(48)
aux(40) =< aux(47)
aux(39) =< aux(45)
aux(40) =< aux(49)
it(29) =< aux(37)+aux(36)+aux(38)
it(29) =< aux(40)+aux(39)+aux(41)

  with precondition: [V_m=0,B=6,E=0,I+1=0,J=0,D=G+1,V_n=K,V_j_0>=0,C>=1,H>=1,D>=V_i_0+2,V_i_0>=V_j_0,H+1>=C,V_n>=D,V_j_0+D>=V_i_0+H+1] 

* Chain [[28,29,34],45]: 1*it(28)+1*it(29)+1*it(34)+1*s(11)+1*s(12)+0
  Such that:aux(42) =< -V_m+V_n
aux(56) =< V_n
aux(141) =< -V_i_0+V_j_0-V_m+V_n
aux(142) =< -V_i_0+V_j_0+V_n
aux(143) =< -V_i_0+V_n
aux(144) =< -V_j_0+V_n
aux(51) =< aux(141)
aux(51) =< aux(142)
aux(41) =< aux(143)
aux(41) =< aux(144)
it(34) =< aux(141)
s(11) =< aux(141)
it(34) =< aux(51)
s(11) =< aux(51)
s(11) =< aux(142)
s(12) =< aux(142)
s(12) =< aux(51)
it(28) =< aux(143)
it(29) =< aux(143)
it(34) =< aux(143)
aux(42) =< aux(56)
aux(46) =< aux(56)
aux(48) =< aux(42)+1
aux(46) =< aux(42)+1
aux(44) =< aux(42)
aux(43) =< it(28)*aux(42)
aux(36) =< it(28)*aux(42)
aux(48) =< aux(46)
aux(47) =< it(34)*aux(46)
aux(37) =< it(34)*aux(46)
aux(45) =< it(28)*aux(44)
aux(36) =< it(28)*aux(44)
aux(39) =< aux(43)
aux(49) =< it(34)*aux(48)
aux(37) =< it(34)*aux(48)
aux(40) =< aux(47)
aux(39) =< aux(45)
aux(40) =< aux(49)
it(29) =< aux(37)+aux(36)+aux(144)
it(29) =< aux(40)+aux(39)+aux(41)

  with precondition: [B=3,V_j_0>=0,V_n>=V_i_0+1,V_i_0>=V_j_0,V_j_0>=V_m] 

* Chain [[28,29,34],44]: 1*it(28)+1*it(29)+1*it(34)+1*s(11)+1*s(12)+1*s(13)+0
  Such that:aux(42) =< -V_m+V_n
aux(56) =< V_n
aux(145) =< -V_i_0+V_j_0-V_m+V_n
aux(146) =< -V_i_0+V_j_0+V_n
aux(147) =< -V_i_0+V_n
aux(148) =< -V_j_0+V_n
aux(51) =< aux(145)
aux(51) =< aux(146)
s(13) =< aux(146)
aux(41) =< aux(147)
aux(41) =< aux(148)
it(34) =< aux(145)
s(11) =< aux(145)
it(34) =< aux(51)
s(11) =< aux(51)
s(11) =< aux(146)
s(12) =< aux(146)
s(12) =< aux(51)
it(28) =< aux(147)
it(29) =< aux(147)
it(34) =< aux(147)
aux(42) =< aux(56)
aux(46) =< aux(56)
aux(48) =< aux(42)+1
aux(46) =< aux(42)+1
aux(44) =< aux(42)
aux(43) =< it(28)*aux(42)
aux(36) =< it(28)*aux(42)
aux(48) =< aux(46)
aux(47) =< it(34)*aux(46)
aux(37) =< it(34)*aux(46)
aux(45) =< it(28)*aux(44)
aux(36) =< it(28)*aux(44)
aux(39) =< aux(43)
aux(49) =< it(34)*aux(48)
aux(37) =< it(34)*aux(48)
aux(40) =< aux(47)
aux(39) =< aux(45)
aux(40) =< aux(49)
it(29) =< aux(37)+aux(36)+aux(148)
it(29) =< aux(40)+aux(39)+aux(41)

  with precondition: [B=3,V_j_0>=0,V_n>=V_i_0+2,V_i_0>=V_j_0,V_j_0>=V_m] 

* Chain [[28,29,34],43]: 1*it(28)+1*it(29)+1*it(34)+1*s(11)+1*s(12)+0
  Such that:aux(42) =< -V_m+V_n
aux(56) =< V_n
aux(149) =< -V_i_0+V_j_0-V_m+V_n
aux(150) =< -V_i_0+V_j_0+V_n
aux(151) =< -V_i_0+V_n
aux(152) =< -V_j_0+V_n
aux(51) =< aux(149)
aux(51) =< aux(150)
aux(41) =< aux(151)
aux(41) =< aux(152)
it(34) =< aux(149)
s(11) =< aux(149)
it(34) =< aux(51)
s(11) =< aux(51)
s(11) =< aux(150)
s(12) =< aux(150)
s(12) =< aux(51)
it(28) =< aux(151)
it(29) =< aux(151)
it(34) =< aux(151)
aux(42) =< aux(56)
aux(46) =< aux(56)
aux(48) =< aux(42)+1
aux(46) =< aux(42)+1
aux(44) =< aux(42)
aux(43) =< it(28)*aux(42)
aux(36) =< it(28)*aux(42)
aux(48) =< aux(46)
aux(47) =< it(34)*aux(46)
aux(37) =< it(34)*aux(46)
aux(45) =< it(28)*aux(44)
aux(36) =< it(28)*aux(44)
aux(39) =< aux(43)
aux(49) =< it(34)*aux(48)
aux(37) =< it(34)*aux(48)
aux(40) =< aux(47)
aux(39) =< aux(45)
aux(40) =< aux(49)
it(29) =< aux(37)+aux(36)+aux(152)
it(29) =< aux(40)+aux(39)+aux(41)

  with precondition: [B=3,V_j_0>=0,V_n>=V_i_0+2,V_i_0>=V_j_0,V_j_0>=V_m] 

* Chain [[28,29,34],42]: 1*it(28)+1*it(29)+1*it(34)+1*s(11)+1*s(12)+0
  Such that:aux(50) =< -V_i_0+V_j_0-J+K
aux(52) =< -V_i_0+V_j_0+K
aux(55) =< -V_i_0+G
aux(54) =< -V_i_0+K
aux(41) =< -V_j_0+I
aux(38) =< -V_j_0+K
aux(41) =< I
aux(42) =< -J+K
aux(56) =< K
aux(153) =< -V_i_0+V_j_0-E+G
it(34) =< aux(50)
s(11) =< aux(50)
it(34) =< aux(153)
s(11) =< aux(153)
s(11) =< aux(52)
s(12) =< aux(52)
s(12) =< aux(153)
it(28) =< aux(54)
it(29) =< aux(54)
it(34) =< aux(54)
it(28) =< aux(55)
it(29) =< aux(55)
it(34) =< aux(55)
aux(42) =< aux(56)
aux(46) =< aux(56)
aux(48) =< aux(42)+1
aux(46) =< aux(42)+1
aux(44) =< aux(42)
aux(43) =< it(28)*aux(42)
aux(36) =< it(28)*aux(42)
aux(48) =< aux(46)
aux(47) =< it(34)*aux(46)
aux(37) =< it(34)*aux(46)
aux(45) =< it(28)*aux(44)
aux(36) =< it(28)*aux(44)
aux(39) =< aux(43)
aux(49) =< it(34)*aux(48)
aux(37) =< it(34)*aux(48)
aux(40) =< aux(47)
aux(39) =< aux(45)
aux(40) =< aux(49)
it(29) =< aux(37)+aux(36)+aux(38)
it(29) =< aux(40)+aux(39)+aux(41)

  with precondition: [B=4,D=G,E=H,E=I,V_m=J,V_n=K,V_j_0>=0,E>=0,D>=V_i_0+1,V_i_0>=V_j_0,V_j_0>=V_m,E>=V_m+1,V_n>=D+1,V_j_0+D>=V_i_0+E] 

* Chain [[28,29,34],41]: 1*it(28)+1*it(29)+1*it(34)+1*s(11)+1*s(12)+1*s(14)+0
  Such that:aux(50) =< -V_i_0+V_j_0-V_m+V_n
aux(52) =< -V_i_0+V_j_0+V_n
aux(54) =< -V_i_0+V_n
aux(55) =< -V_i_0+D
aux(38) =< -V_j_0+V_n
aux(41) =< -V_j_0+E
aux(42) =< -V_m+V_n
aux(56) =< V_n
aux(154) =< -V_i_0+V_j_0+D-E
aux(155) =< E
aux(41) =< aux(155)
s(14) =< aux(155)
it(34) =< aux(50)
s(11) =< aux(50)
it(34) =< aux(154)
s(11) =< aux(154)
s(11) =< aux(52)
s(12) =< aux(52)
s(12) =< aux(154)
it(28) =< aux(54)
it(29) =< aux(54)
it(34) =< aux(54)
it(28) =< aux(55)
it(29) =< aux(55)
it(34) =< aux(55)
aux(42) =< aux(56)
aux(46) =< aux(56)
aux(48) =< aux(42)+1
aux(46) =< aux(42)+1
aux(44) =< aux(42)
aux(43) =< it(28)*aux(42)
aux(36) =< it(28)*aux(42)
aux(48) =< aux(46)
aux(47) =< it(34)*aux(46)
aux(37) =< it(34)*aux(46)
aux(45) =< it(28)*aux(44)
aux(36) =< it(28)*aux(44)
aux(39) =< aux(43)
aux(49) =< it(34)*aux(48)
aux(37) =< it(34)*aux(48)
aux(40) =< aux(47)
aux(39) =< aux(45)
aux(40) =< aux(49)
it(29) =< aux(37)+aux(36)+aux(38)
it(29) =< aux(40)+aux(39)+aux(41)

  with precondition: [B=4,D=G,E=H,V_m=J,V_n=K,V_j_0>=0,C>=1,I>=0,D>=V_i_0+1,V_i_0>=V_j_0,V_j_0>=V_m,E>=V_m+1,V_n>=D+1,E>=C+I,V_j_0+D>=V_i_0+E] 

* Chain [[28,29,34],40]: 1*it(28)+1*it(29)+1*it(34)+1*s(11)+1*s(12)+0
  Such that:aux(50) =< -V_i_0+V_j_0-V_m+V_n
aux(52) =< -V_i_0+V_j_0+V_n
aux(54) =< -V_i_0+V_n
aux(55) =< -V_i_0+D
aux(38) =< -V_j_0+V_n
aux(41) =< -V_j_0+H
aux(42) =< -V_m+V_n
aux(56) =< V_n
aux(41) =< I
aux(156) =< -V_i_0+V_j_0+D-E
it(34) =< aux(50)
s(11) =< aux(50)
it(34) =< aux(156)
s(11) =< aux(156)
s(11) =< aux(52)
s(12) =< aux(52)
s(12) =< aux(156)
it(28) =< aux(54)
it(29) =< aux(54)
it(34) =< aux(54)
it(28) =< aux(55)
it(29) =< aux(55)
it(34) =< aux(55)
aux(42) =< aux(56)
aux(46) =< aux(56)
aux(48) =< aux(42)+1
aux(46) =< aux(42)+1
aux(44) =< aux(42)
aux(43) =< it(28)*aux(42)
aux(36) =< it(28)*aux(42)
aux(48) =< aux(46)
aux(47) =< it(34)*aux(46)
aux(37) =< it(34)*aux(46)
aux(45) =< it(28)*aux(44)
aux(36) =< it(28)*aux(44)
aux(39) =< aux(43)
aux(49) =< it(34)*aux(48)
aux(37) =< it(34)*aux(48)
aux(40) =< aux(47)
aux(39) =< aux(45)
aux(40) =< aux(49)
it(29) =< aux(37)+aux(36)+aux(38)
it(29) =< aux(40)+aux(39)+aux(41)

  with precondition: [B=5,D=G,E=H,E=I,V_m=J,V_n=K,V_j_0>=0,E>=0,D>=V_i_0+1,V_i_0>=V_j_0,V_j_0>=V_m,E>=V_m+1,V_n>=D+1,C>=E+2,V_j_0+D>=V_i_0+E] 

* Chain [[28,29,34],39]: 1*it(28)+1*it(29)+1*it(34)+1*s(11)+1*s(12)+1*s(15)+0
  Such that:aux(50) =< -V_i_0+V_j_0-V_m+K
aux(52) =< -V_i_0+V_j_0+K
aux(55) =< -V_i_0+D
aux(54) =< -V_i_0+K
aux(41) =< -V_j_0+E
aux(38) =< -V_j_0+K
aux(42) =< -V_m+K
aux(56) =< K
aux(157) =< -V_i_0+V_j_0+D-E
aux(158) =< E
aux(41) =< aux(158)
s(15) =< aux(158)
it(34) =< aux(50)
s(11) =< aux(50)
it(34) =< aux(157)
s(11) =< aux(157)
s(11) =< aux(52)
s(12) =< aux(52)
s(12) =< aux(157)
it(28) =< aux(54)
it(29) =< aux(54)
it(34) =< aux(54)
it(28) =< aux(55)
it(29) =< aux(55)
it(34) =< aux(55)
aux(42) =< aux(56)
aux(46) =< aux(56)
aux(48) =< aux(42)+1
aux(46) =< aux(42)+1
aux(44) =< aux(42)
aux(43) =< it(28)*aux(42)
aux(36) =< it(28)*aux(42)
aux(48) =< aux(46)
aux(47) =< it(34)*aux(46)
aux(37) =< it(34)*aux(46)
aux(45) =< it(28)*aux(44)
aux(36) =< it(28)*aux(44)
aux(39) =< aux(43)
aux(49) =< it(34)*aux(48)
aux(37) =< it(34)*aux(48)
aux(40) =< aux(47)
aux(39) =< aux(45)
aux(40) =< aux(49)
it(29) =< aux(37)+aux(36)+aux(38)
it(29) =< aux(40)+aux(39)+aux(41)

  with precondition: [B=5,D=G,E=H,V_m=J,V_n=K,V_j_0>=0,I>=0,D>=V_i_0+1,V_i_0>=V_j_0,V_j_0>=V_m,E>=V_m+1,V_n>=D+1,C>=I+2,E>=I+1,V_j_0+D>=V_i_0+E] 

* Chain [[28,29,34],36]: 1*it(28)+1*it(29)+1*it(34)+1*s(11)+1*s(12)+1*s(17)+0
  Such that:aux(50) =< -V_i_0+V_j_0-E+K
aux(52) =< -V_i_0+V_j_0+K
aux(55) =< -V_i_0+D
aux(54) =< -V_i_0+K
aux(41) =< -V_j_0+H
aux(38) =< -V_j_0+K
s(17) =< -E+H+1
aux(42) =< -E+K
aux(41) =< H-J
aux(56) =< K
aux(159) =< -V_i_0+V_j_0+D-H
it(34) =< aux(50)
s(11) =< aux(50)
it(34) =< aux(159)
s(11) =< aux(159)
s(11) =< aux(52)
s(12) =< aux(52)
s(12) =< aux(159)
it(28) =< aux(54)
it(29) =< aux(54)
it(34) =< aux(54)
it(28) =< aux(55)
it(29) =< aux(55)
it(34) =< aux(55)
aux(42) =< aux(56)
aux(46) =< aux(56)
aux(48) =< aux(42)+1
aux(46) =< aux(42)+1
aux(44) =< aux(42)
aux(43) =< it(28)*aux(42)
aux(36) =< it(28)*aux(42)
aux(48) =< aux(46)
aux(47) =< it(34)*aux(46)
aux(37) =< it(34)*aux(46)
aux(45) =< it(28)*aux(44)
aux(36) =< it(28)*aux(44)
aux(39) =< aux(43)
aux(49) =< it(34)*aux(48)
aux(37) =< it(34)*aux(48)
aux(40) =< aux(47)
aux(39) =< aux(45)
aux(40) =< aux(49)
it(29) =< aux(37)+aux(36)+aux(38)
it(29) =< aux(40)+aux(39)+aux(41)

  with precondition: [B=6,V_m=E,D=G+1,V_m=I+1,V_m=J,V_n=K,V_m>=1,C>=1,D>=V_i_0+2,V_i_0>=V_j_0,V_j_0>=V_m,H>=V_m+1,V_n>=D,H+1>=V_m+C,V_j_0+D>=V_i_0+H+1] 

* Chain [[28,29,34],35]: 1*it(28)+1*it(29)+1*it(34)+1*s(11)+1*s(12)+0
  Such that:aux(50) =< -V_i_0+V_j_0-J+K
aux(52) =< -V_i_0+V_j_0+K
aux(41) =< -V_i_0+V_n
aux(41) =< -V_j_0+I+1
aux(38) =< -V_j_0+K
aux(42) =< -J+K
aux(56) =< K
aux(160) =< -V_i_0+V_j_0-E+K
aux(161) =< -V_i_0+K
it(34) =< aux(50)
s(11) =< aux(50)
it(34) =< aux(160)
s(11) =< aux(160)
s(11) =< aux(52)
s(12) =< aux(52)
s(12) =< aux(160)
it(28) =< aux(161)
it(29) =< aux(161)
it(34) =< aux(161)
aux(42) =< aux(56)
aux(46) =< aux(56)
aux(48) =< aux(42)+1
aux(46) =< aux(42)+1
aux(44) =< aux(42)
aux(43) =< it(28)*aux(42)
aux(36) =< it(28)*aux(42)
aux(48) =< aux(46)
aux(47) =< it(34)*aux(46)
aux(37) =< it(34)*aux(46)
aux(45) =< it(28)*aux(44)
aux(36) =< it(28)*aux(44)
aux(39) =< aux(43)
aux(49) =< it(34)*aux(48)
aux(37) =< it(34)*aux(48)
aux(40) =< aux(47)
aux(39) =< aux(45)
aux(40) =< aux(49)
it(29) =< aux(37)+aux(36)+aux(38)
it(29) =< aux(40)+aux(39)+aux(41)

  with precondition: [B=6,V_n=D,V_n=G,E=H,E=I+1,V_m=J,V_n=K,V_j_0>=0,E>=0,V_n>=V_i_0+1,V_i_0>=V_j_0,V_j_0>=V_m,E>=V_m+1,V_j_0+V_n>=V_i_0+E] 

* Chain [[27,30,33],45]: 1*it(27)+1*it(30)+1*it(33)+2*s(5)+0
  Such that:aux(6) =< -V_j_0+V_n
aux(13) =< V_n
aux(33) =< -V_i_0+V_j_0+V_n
aux(34) =< -V_i_0+V_n
aux(35) =< -V_j_0+V_m
aux(9) =< aux(34)
aux(9) =< aux(35)
s(5) =< aux(33)
it(33) =< aux(33)
it(27) =< aux(34)
it(30) =< aux(34)
it(33) =< aux(34)
aux(21) =< aux(13)+1
aux(17) =< aux(13)
aux(14) =< it(27)*aux(13)
aux(1) =< it(27)*aux(13)
aux(2) =< it(33)*aux(21)
aux(18) =< it(27)*aux(17)
aux(1) =< it(27)*aux(17)
aux(4) =< aux(14)
aux(4) =< aux(18)
it(30) =< aux(2)+aux(1)+aux(35)
it(30) =< aux(2)+aux(4)+aux(9)
it(30) =< aux(2)+aux(4)+aux(6)

  with precondition: [B=3,V_j_0>=0,V_m>=1,V_n>=V_i_0+1,V_i_0>=V_j_0] 

* Chain [[27,30,33],44]: 1*it(27)+1*it(30)+1*it(33)+3*s(5)+0
  Such that:aux(6) =< -V_j_0+V_n
aux(13) =< V_n
aux(63) =< -V_i_0+V_j_0+V_n
aux(64) =< -V_i_0+V_n
aux(65) =< -V_j_0+V_m
s(5) =< aux(63)
aux(9) =< aux(64)
aux(9) =< aux(65)
it(33) =< aux(63)
it(27) =< aux(64)
it(30) =< aux(64)
it(33) =< aux(64)
aux(21) =< aux(13)+1
aux(17) =< aux(13)
aux(14) =< it(27)*aux(13)
aux(1) =< it(27)*aux(13)
aux(2) =< it(33)*aux(21)
aux(18) =< it(27)*aux(17)
aux(1) =< it(27)*aux(17)
aux(4) =< aux(14)
aux(4) =< aux(18)
it(30) =< aux(2)+aux(1)+aux(65)
it(30) =< aux(2)+aux(4)+aux(9)
it(30) =< aux(2)+aux(4)+aux(6)

  with precondition: [B=3,V_j_0>=0,V_m>=1,V_n>=V_i_0+2,V_i_0>=V_j_0] 

* Chain [[27,30,33],43]: 1*it(27)+1*it(30)+1*it(33)+2*s(5)+0
  Such that:aux(6) =< -V_j_0+V_n
aux(13) =< V_n
aux(72) =< -V_i_0+V_j_0+V_n
aux(73) =< -V_i_0+V_n
aux(74) =< -V_j_0+V_m
aux(9) =< aux(73)
aux(9) =< aux(74)
s(5) =< aux(72)
it(33) =< aux(72)
it(27) =< aux(73)
it(30) =< aux(73)
it(33) =< aux(73)
aux(21) =< aux(13)+1
aux(17) =< aux(13)
aux(14) =< it(27)*aux(13)
aux(1) =< it(27)*aux(13)
aux(2) =< it(33)*aux(21)
aux(18) =< it(27)*aux(17)
aux(1) =< it(27)*aux(17)
aux(4) =< aux(14)
aux(4) =< aux(18)
it(30) =< aux(2)+aux(1)+aux(74)
it(30) =< aux(2)+aux(4)+aux(9)
it(30) =< aux(2)+aux(4)+aux(6)

  with precondition: [B=3,V_j_0>=0,V_m>=1,V_n>=V_i_0+2,V_i_0>=V_j_0] 

* Chain [[27,30,33],42]: 1*it(27)+1*it(30)+1*it(33)+2*s(5)+0
  Such that:aux(29) =< -V_i_0+V_j_0+V_n
aux(30) =< -V_i_0+V_j_0+G-I
aux(31) =< -V_i_0+V_n
aux(32) =< -V_i_0+G
aux(3) =< -V_j_0+V_m
aux(6) =< -V_j_0+V_n
aux(13) =< V_n
aux(81) =< -V_j_0+E
aux(82) =< H
aux(9) =< aux(81)
aux(9) =< aux(82)
s(5) =< aux(29)
it(33) =< aux(30)
s(5) =< aux(30)
it(27) =< aux(31)
it(30) =< aux(31)
it(33) =< aux(31)
it(27) =< aux(32)
it(30) =< aux(32)
it(33) =< aux(32)
aux(21) =< aux(13)+1
aux(17) =< aux(13)
aux(14) =< it(27)*aux(13)
aux(1) =< it(27)*aux(13)
aux(2) =< it(33)*aux(21)
aux(18) =< it(27)*aux(17)
aux(1) =< it(27)*aux(17)
aux(4) =< aux(14)
aux(4) =< aux(18)
it(30) =< aux(2)+aux(1)+aux(3)
it(30) =< aux(2)+aux(4)+aux(9)
it(30) =< aux(2)+aux(4)+aux(6)

  with precondition: [B=4,D=G,E=H,E=I,V_m=J,V_n=K,V_j_0>=0,E>=0,D>=V_i_0+1,V_i_0>=V_j_0,V_n>=D+1,V_m>=E+1,V_j_0+D>=V_i_0+E] 

* Chain [[27,30,33],41]: 1*it(27)+1*it(30)+1*it(33)+2*s(5)+1*s(14)+0
  Such that:aux(30) =< -V_i_0+V_j_0+D-E
aux(29) =< -V_i_0+V_j_0+K
aux(32) =< -V_i_0+D
aux(31) =< -V_i_0+K
aux(3) =< -V_j_0+V_m
aux(6) =< -V_j_0+K
aux(13) =< K
aux(90) =< -V_j_0+H
aux(91) =< E
aux(9) =< aux(90)
aux(9) =< aux(91)
s(14) =< aux(91)
s(5) =< aux(29)
it(33) =< aux(30)
s(5) =< aux(30)
it(27) =< aux(31)
it(30) =< aux(31)
it(33) =< aux(31)
it(27) =< aux(32)
it(30) =< aux(32)
it(33) =< aux(32)
aux(21) =< aux(13)+1
aux(17) =< aux(13)
aux(14) =< it(27)*aux(13)
aux(1) =< it(27)*aux(13)
aux(2) =< it(33)*aux(21)
aux(18) =< it(27)*aux(17)
aux(1) =< it(27)*aux(17)
aux(4) =< aux(14)
aux(4) =< aux(18)
it(30) =< aux(2)+aux(1)+aux(3)
it(30) =< aux(2)+aux(4)+aux(9)
it(30) =< aux(2)+aux(4)+aux(6)

  with precondition: [B=4,D=G,E=H,V_m=J,V_n=K,V_j_0>=0,C>=1,I>=0,D>=V_i_0+1,V_i_0>=V_j_0,V_n>=D+1,V_m>=E+1,E>=C+I,V_j_0+D>=V_i_0+E] 

* Chain [[27,30,33],40]: 1*it(27)+1*it(30)+1*it(33)+2*s(5)+0
  Such that:aux(30) =< -V_i_0+V_j_0+G-I
aux(29) =< -V_i_0+V_j_0+K
aux(32) =< -V_i_0+G
aux(31) =< -V_i_0+K
aux(3) =< -V_j_0+V_m
aux(6) =< -V_j_0+K
aux(13) =< K
aux(99) =< -V_j_0+E
aux(100) =< I
aux(9) =< aux(99)
aux(9) =< aux(100)
s(5) =< aux(29)
it(33) =< aux(30)
s(5) =< aux(30)
it(27) =< aux(31)
it(30) =< aux(31)
it(33) =< aux(31)
it(27) =< aux(32)
it(30) =< aux(32)
it(33) =< aux(32)
aux(21) =< aux(13)+1
aux(17) =< aux(13)
aux(14) =< it(27)*aux(13)
aux(1) =< it(27)*aux(13)
aux(2) =< it(33)*aux(21)
aux(18) =< it(27)*aux(17)
aux(1) =< it(27)*aux(17)
aux(4) =< aux(14)
aux(4) =< aux(18)
it(30) =< aux(2)+aux(1)+aux(3)
it(30) =< aux(2)+aux(4)+aux(9)
it(30) =< aux(2)+aux(4)+aux(6)

  with precondition: [B=5,D=G,E=H,E=I,V_m=J,V_n=K,V_j_0>=0,E>=0,D>=V_i_0+1,V_i_0>=V_j_0,V_n>=D+1,V_m>=E+1,C>=E+2,V_j_0+D>=V_i_0+E] 

* Chain [[27,30,33],39]: 1*it(27)+1*it(30)+1*it(33)+2*s(5)+1*s(15)+0
  Such that:aux(30) =< -V_i_0+V_j_0+D-H
aux(29) =< -V_i_0+V_j_0+K
aux(32) =< -V_i_0+D
aux(31) =< -V_i_0+K
aux(3) =< -V_j_0+V_m
aux(6) =< -V_j_0+K
s(15) =< H
aux(13) =< K
aux(109) =< -V_j_0+H
aux(110) =< E
aux(9) =< aux(109)
aux(9) =< aux(110)
s(5) =< aux(29)
it(33) =< aux(30)
s(5) =< aux(30)
it(27) =< aux(31)
it(30) =< aux(31)
it(33) =< aux(31)
it(27) =< aux(32)
it(30) =< aux(32)
it(33) =< aux(32)
aux(21) =< aux(13)+1
aux(17) =< aux(13)
aux(14) =< it(27)*aux(13)
aux(1) =< it(27)*aux(13)
aux(2) =< it(33)*aux(21)
aux(18) =< it(27)*aux(17)
aux(1) =< it(27)*aux(17)
aux(4) =< aux(14)
aux(4) =< aux(18)
it(30) =< aux(2)+aux(1)+aux(3)
it(30) =< aux(2)+aux(4)+aux(9)
it(30) =< aux(2)+aux(4)+aux(6)

  with precondition: [B=5,D=G,E=H,V_m=J,V_n=K,V_j_0>=0,I>=0,D>=V_i_0+1,V_i_0>=V_j_0,V_n>=D+1,V_m>=E+1,C>=I+2,E>=I+1,V_j_0+D>=V_i_0+E] 

* Chain [[27,30,33],37]: 1*it(27)+1*it(30)+1*it(33)+2*s(5)+0
  Such that:aux(29) =< -V_i_0+V_j_0+V_n
aux(30) =< -V_i_0+V_j_0+G-J+1
aux(31) =< -V_i_0+V_n
aux(32) =< -V_i_0+G
aux(3) =< -V_j_0+V_m
aux(6) =< -V_j_0+V_n
aux(13) =< V_n
aux(119) =< -V_j_0+I
aux(120) =< V_m
aux(9) =< aux(119)
aux(9) =< aux(120)
s(5) =< aux(29)
it(33) =< aux(30)
s(5) =< aux(30)
it(27) =< aux(31)
it(30) =< aux(31)
it(33) =< aux(31)
it(27) =< aux(32)
it(30) =< aux(32)
it(33) =< aux(32)
aux(21) =< aux(13)+1
aux(17) =< aux(13)
aux(14) =< it(27)*aux(13)
aux(1) =< it(27)*aux(13)
aux(2) =< it(33)*aux(21)
aux(18) =< it(27)*aux(17)
aux(1) =< it(27)*aux(17)
aux(4) =< aux(14)
aux(4) =< aux(18)
it(30) =< aux(2)+aux(1)+aux(3)
it(30) =< aux(2)+aux(4)+aux(9)
it(30) =< aux(2)+aux(4)+aux(6)

  with precondition: [B=6,V_m=E,D=G+1,V_m=H+1,V_m=I+1,V_m=J,V_n=K,V_j_0>=0,V_m>=1,D>=V_i_0+2,V_i_0>=V_j_0,V_n>=D,V_j_0+D>=V_i_0+V_m] 

* Chain [[27,30,33],35]: 1*it(27)+1*it(30)+1*it(33)+2*s(5)+0
  Such that:aux(29) =< -V_i_0+V_j_0+V_n
aux(30) =< -V_i_0+V_j_0+V_n-I
aux(3) =< -V_j_0+V_m
aux(6) =< -V_j_0+V_n
aux(13) =< V_n
aux(129) =< -V_i_0+V_n
aux(130) =< -V_i_0+D
aux(131) =< -V_j_0+I+1
aux(9) =< aux(130)
aux(9) =< aux(131)
s(5) =< aux(29)
it(33) =< aux(30)
s(5) =< aux(30)
it(27) =< aux(129)
it(30) =< aux(129)
it(33) =< aux(129)
aux(21) =< aux(13)+1
aux(17) =< aux(13)
aux(14) =< it(27)*aux(13)
aux(1) =< it(27)*aux(13)
aux(2) =< it(33)*aux(21)
aux(18) =< it(27)*aux(17)
aux(1) =< it(27)*aux(17)
aux(4) =< aux(14)
aux(4) =< aux(18)
it(30) =< aux(2)+aux(1)+aux(3)
it(30) =< aux(2)+aux(4)+aux(9)
it(30) =< aux(2)+aux(4)+aux(6)

  with precondition: [B=6,V_n=D,V_n=G,E=H,E=I+1,V_m=J,V_n=K,V_j_0>=0,E>=0,V_n>=V_i_0+1,V_i_0>=V_j_0,V_m>=E+1,V_j_0+V_n>=V_i_0+E] 

* Chain [46]: 1*s(16)+0
  Such that:s(16) =< V_j_0+1

  with precondition: [V_m=0,B=6,E=0,I+1=0,J=0,V_i_0+1=D,V_i_0=G,V_j_0=H,V_n=K,C>=1,V_n>=V_i_0+1,V_i_0>=V_j_0,V_j_0+1>=C] 

* Chain [45]: 0
  with precondition: [B=3,V_j_0>=0,V_i_0>=V_j_0] 

* Chain [44]: 1*s(13)+0
  Such that:s(13) =< V_j_0+1

  with precondition: [B=3,V_j_0>=0,V_n>=V_i_0+1,V_i_0>=V_j_0] 

* Chain [43]: 0
  with precondition: [B=3,V_j_0>=0,V_n>=V_i_0+1,V_i_0>=V_j_0] 

* Chain [42]: 0
  with precondition: [B=4,C=V_11,D=V_22,E=V_23,J=V_m,V_i_0=G,V_j_0=H,V_j_0=I,V_n=K,V_j_0>=0,V_n>=V_i_0+1,V_i_0>=V_j_0] 

* Chain [40]: 0
  with precondition: [B=5,D=V_22,E=V_23,J=V_m,V_i_0=G,V_j_0=H,V_j_0=I,V_n=K,V_j_0>=0,V_n>=V_i_0+1,V_i_0>=V_j_0,C>=V_j_0+2] 

* Chain [37]: 0
  with precondition: [B=6,C=V_11,V_j_0+1=V_m,V_i_0+1=D,V_j_0+1=E,V_i_0=G,V_j_0=H,V_j_0=I,V_j_0+1=J,V_n=K,V_j_0>=0,V_n>=V_i_0+1,V_i_0>=V_j_0] 

* Chain [35]: 0
  with precondition: [B=6,C=V_11,D=V_22,E=V_23,F=V_3,I=V_j_1,J=V_m,V_i_0=G,V_j_0=H,V_n=K,V_j_0>=0,V_i_0>=V_j_0,V_i_0>=V_n] 


#### Cost of chains of eval_srch_bb1_in_loop_cont(A,B,C,D,E,F,G,H,I,J,K):
* Chain [50]: 0
  with precondition: [A=3] 

* Chain [49]: 0
  with precondition: [A=4] 

* Chain [48]: 0
  with precondition: [A=5] 

* Chain [47]: 0
  with precondition: [A=6] 


#### Cost of chains of eval_srch_10(V_11,V_22,V_23,V_3,V_i_0,V_j_0,V_j_1,V_m,V_n,B):
* Chain [62]: 0
  with precondition: [] 

* Chain [61]: 1*s(180)+0
  Such that:s(180) =< 1

  with precondition: [V_m=0,V_n>=1] 

* Chain [60]: 1*s(185)+3*s(189)+1*s(191)+1*s(192)+0
  Such that:aux(180) =< V_n
aux(181) =< V_n+1
s(185) =< aux(180)
s(186) =< aux(180)
s(185) =< aux(181)
s(186) =< aux(181)
s(189) =< aux(180)
s(189) =< s(186)
s(191) =< aux(180)
s(192) =< aux(180)
s(193) =< aux(180)
s(194) =< aux(180)+1
s(193) =< aux(180)+1
s(195) =< aux(180)
s(196) =< s(191)*aux(180)
s(197) =< s(191)*aux(180)
s(194) =< s(193)
s(198) =< s(189)*s(193)
s(199) =< s(189)*s(193)
s(200) =< s(191)*s(195)
s(197) =< s(191)*s(195)
s(201) =< s(196)
s(202) =< s(189)*s(194)
s(199) =< s(189)*s(194)
s(203) =< s(198)
s(201) =< s(200)
s(203) =< s(202)
s(192) =< s(199)+s(197)+aux(180)
s(192) =< s(203)+s(201)+aux(180)

  with precondition: [V_m=0,V_n>=2] 

* Chain [59]: 0
  with precondition: [V_m=1,V_n>=1] 

* Chain [58]: 4*s(212)+2*s(214)+2*s(215)+2*s(216)+0
  Such that:aux(186) =< -V_m+V_n
aux(187) =< V_n
s(204) =< aux(186)
s(204) =< aux(187)
s(212) =< aux(186)
s(212) =< s(204)
s(212) =< aux(187)
s(214) =< aux(187)
s(214) =< s(204)
s(215) =< aux(187)
s(216) =< aux(187)
s(217) =< aux(187)
s(218) =< s(204)+1
s(217) =< s(204)+1
s(219) =< s(204)
s(220) =< s(215)*s(204)
s(221) =< s(215)*s(204)
s(218) =< s(217)
s(222) =< s(212)*s(217)
s(223) =< s(212)*s(217)
s(224) =< s(215)*s(219)
s(221) =< s(215)*s(219)
s(225) =< s(220)
s(226) =< s(212)*s(218)
s(223) =< s(212)*s(218)
s(227) =< s(222)
s(225) =< s(224)
s(227) =< s(226)
s(216) =< s(223)+s(221)+aux(187)
s(216) =< s(227)+s(225)+aux(187)

  with precondition: [0>=V_m,V_n>=1] 

* Chain [57]: 4*s(261)+2*s(263)+13*s(264)+2*s(265)+8*s(287)+4*s(291)+0
  Such that:aux(198) =< -V_m+V_n
aux(199) =< V_n
s(258) =< aux(198)
s(258) =< aux(199)
s(261) =< aux(198)
s(261) =< s(258)
s(261) =< aux(199)
s(263) =< aux(199)
s(263) =< s(258)
s(264) =< aux(199)
s(265) =< aux(199)
s(266) =< aux(199)
s(267) =< s(258)+1
s(266) =< s(258)+1
s(268) =< s(258)
s(269) =< s(264)*s(258)
s(270) =< s(264)*s(258)
s(267) =< s(266)
s(271) =< s(261)*s(266)
s(272) =< s(261)*s(266)
s(273) =< s(264)*s(268)
s(270) =< s(264)*s(268)
s(274) =< s(269)
s(275) =< s(261)*s(267)
s(272) =< s(261)*s(267)
s(276) =< s(271)
s(274) =< s(273)
s(276) =< s(275)
s(265) =< s(272)+s(270)+aux(199)
s(265) =< s(276)+s(274)+aux(199)
s(287) =< aux(198)
s(287) =< aux(199)
s(291) =< aux(199)
s(297) =< s(287)*s(266)
s(298) =< s(287)*s(266)
s(301) =< s(287)*s(267)
s(298) =< s(287)*s(267)
s(302) =< s(297)
s(302) =< s(301)
s(291) =< s(298)+s(270)+aux(199)
s(291) =< s(302)+s(274)+aux(199)

  with precondition: [0>=V_m,V_n>=2] 

* Chain [56]: 0
  with precondition: [0>=V_n] 

* Chain [55]: 5*s(388)+1*s(391)+3*s(408)+1*s(411)+0
  Such that:aux(203) =< V_n+1
aux(204) =< V_m
aux(205) =< V_n
s(406) =< aux(204)
s(406) =< aux(203)
s(407) =< aux(205)
s(407) =< s(406)
s(408) =< aux(205)
s(408) =< aux(203)
s(388) =< aux(205)
s(411) =< aux(205)
s(392) =< aux(205)+1
s(393) =< aux(205)
s(394) =< s(388)*aux(205)
s(395) =< s(388)*aux(205)
s(416) =< s(408)*s(392)
s(397) =< s(388)*s(393)
s(395) =< s(388)*s(393)
s(398) =< s(394)
s(398) =< s(397)
s(411) =< s(416)+s(395)+aux(204)
s(411) =< s(416)+s(398)+s(407)
s(411) =< s(416)+s(398)+aux(205)
s(387) =< aux(205)
s(387) =< aux(204)
s(391) =< aux(205)
s(396) =< s(388)*s(392)
s(391) =< s(396)+s(395)+aux(204)
s(391) =< s(396)+s(398)+s(387)
s(391) =< s(396)+s(398)+aux(205)

  with precondition: [V_m>=1,V_n>=1] 

* Chain [54]: 17*s(425)+4*s(428)+0
  Such that:aux(211) =< V_m
aux(212) =< V_n
s(424) =< aux(211)
s(424) =< aux(212)
s(425) =< aux(212)
s(428) =< aux(212)
s(429) =< aux(212)+1
s(430) =< aux(212)
s(431) =< s(425)*aux(212)
s(432) =< s(425)*aux(212)
s(433) =< s(425)*s(429)
s(434) =< s(425)*s(430)
s(432) =< s(425)*s(430)
s(435) =< s(431)
s(435) =< s(434)
s(428) =< s(433)+s(432)+aux(211)
s(428) =< s(433)+s(435)+s(424)
s(428) =< s(433)+s(435)+aux(212)

  with precondition: [V_m>=1,V_n>=2] 

* Chain [53]: 3*s(488)+1*s(490)+1*s(491)+0
  Such that:s(479) =< -V_m+V_n
aux(213) =< V_m
aux(214) =< V_n
s(488) =< aux(214)
s(488) =< s(479)
s(490) =< aux(214)
s(491) =< aux(214)
s(492) =< aux(214)+1
s(493) =< aux(214)
s(494) =< s(490)*aux(214)
s(495) =< s(490)*aux(214)
s(496) =< s(488)*s(492)
s(497) =< s(490)*s(493)
s(495) =< s(490)*s(493)
s(498) =< s(494)
s(498) =< s(497)
s(491) =< s(496)+s(495)+aux(213)
s(491) =< s(496)+s(498)+aux(213)
s(491) =< s(496)+s(498)+aux(214)

  with precondition: [V_m>=1,V_n>=2,V_n>=V_m] 

* Chain [52]: 1*s(509)+8*s(510)+2*s(513)+1*s(527)+0
  Such that:aux(219) =< V_m
aux(220) =< V_n
s(506) =< aux(219)
s(506) =< aux(220)
s(509) =< s(506)
s(510) =< aux(220)
s(513) =< aux(220)
s(514) =< aux(220)+1
s(515) =< aux(220)
s(516) =< s(510)*aux(220)
s(517) =< s(510)*aux(220)
s(518) =< s(510)*s(514)
s(519) =< s(510)*s(515)
s(517) =< s(510)*s(515)
s(520) =< s(516)
s(520) =< s(519)
s(513) =< s(518)+s(517)+aux(219)
s(513) =< s(518)+s(520)+s(506)
s(513) =< s(518)+s(520)+aux(220)
s(527) =< aux(219)
s(527) =< aux(220)

  with precondition: [V_m>=2,V_n>=2] 

* Chain [51]: 1
  with precondition: [V_n>=1] 


#### Cost of chains of eval_srch_start(V_11,V_22,V_23,V_3,V_i_0,V_j_0,V_j_1,V_m,V_n,B):
* Chain [74]: 0
  with precondition: [] 

* Chain [73]: 1*s(544)+0
  Such that:s(544) =< 1

  with precondition: [V_m=0,V_n>=1] 

* Chain [72]: 1*s(547)+3*s(549)+1*s(550)+1*s(551)+0
  Such that:s(545) =< V_n
s(546) =< V_n+1
s(547) =< s(545)
s(548) =< s(545)
s(547) =< s(546)
s(548) =< s(546)
s(549) =< s(545)
s(549) =< s(548)
s(550) =< s(545)
s(551) =< s(545)
s(552) =< s(545)
s(553) =< s(545)+1
s(552) =< s(545)+1
s(554) =< s(545)
s(555) =< s(550)*s(545)
s(556) =< s(550)*s(545)
s(553) =< s(552)
s(557) =< s(549)*s(552)
s(558) =< s(549)*s(552)
s(559) =< s(550)*s(554)
s(556) =< s(550)*s(554)
s(560) =< s(555)
s(561) =< s(549)*s(553)
s(558) =< s(549)*s(553)
s(562) =< s(557)
s(560) =< s(559)
s(562) =< s(561)
s(551) =< s(558)+s(556)+s(545)
s(551) =< s(562)+s(560)+s(545)

  with precondition: [V_m=0,V_n>=2] 

* Chain [71]: 0
  with precondition: [V_m=1,V_n>=1] 

* Chain [70]: 4*s(566)+2*s(567)+2*s(568)+2*s(569)+0
  Such that:s(563) =< -V_m+V_n
s(564) =< V_n
s(565) =< s(563)
s(565) =< s(564)
s(566) =< s(563)
s(566) =< s(565)
s(566) =< s(564)
s(567) =< s(564)
s(567) =< s(565)
s(568) =< s(564)
s(569) =< s(564)
s(570) =< s(564)
s(571) =< s(565)+1
s(570) =< s(565)+1
s(572) =< s(565)
s(573) =< s(568)*s(565)
s(574) =< s(568)*s(565)
s(571) =< s(570)
s(575) =< s(566)*s(570)
s(576) =< s(566)*s(570)
s(577) =< s(568)*s(572)
s(574) =< s(568)*s(572)
s(578) =< s(573)
s(579) =< s(566)*s(571)
s(576) =< s(566)*s(571)
s(580) =< s(575)
s(578) =< s(577)
s(580) =< s(579)
s(569) =< s(576)+s(574)+s(564)
s(569) =< s(580)+s(578)+s(564)

  with precondition: [0>=V_m,V_n>=1] 

* Chain [69]: 4*s(584)+2*s(585)+13*s(586)+2*s(587)+8*s(599)+4*s(600)+0
  Such that:s(581) =< -V_m+V_n
s(582) =< V_n
s(583) =< s(581)
s(583) =< s(582)
s(584) =< s(581)
s(584) =< s(583)
s(584) =< s(582)
s(585) =< s(582)
s(585) =< s(583)
s(586) =< s(582)
s(587) =< s(582)
s(588) =< s(582)
s(589) =< s(583)+1
s(588) =< s(583)+1
s(590) =< s(583)
s(591) =< s(586)*s(583)
s(592) =< s(586)*s(583)
s(589) =< s(588)
s(593) =< s(584)*s(588)
s(594) =< s(584)*s(588)
s(595) =< s(586)*s(590)
s(592) =< s(586)*s(590)
s(596) =< s(591)
s(597) =< s(584)*s(589)
s(594) =< s(584)*s(589)
s(598) =< s(593)
s(596) =< s(595)
s(598) =< s(597)
s(587) =< s(594)+s(592)+s(582)
s(587) =< s(598)+s(596)+s(582)
s(599) =< s(581)
s(599) =< s(582)
s(600) =< s(582)
s(601) =< s(599)*s(588)
s(602) =< s(599)*s(588)
s(603) =< s(599)*s(589)
s(602) =< s(599)*s(589)
s(604) =< s(601)
s(604) =< s(603)
s(600) =< s(602)+s(592)+s(582)
s(600) =< s(604)+s(596)+s(582)

  with precondition: [0>=V_m,V_n>=2] 

* Chain [68]: 0
  with precondition: [0>=V_n] 

* Chain [67]: 3*s(610)+5*s(611)+1*s(612)+1*s(621)+0
  Such that:s(606) =< V_m
s(607) =< V_n
s(605) =< V_n+1
s(608) =< s(606)
s(608) =< s(605)
s(609) =< s(607)
s(609) =< s(608)
s(610) =< s(607)
s(610) =< s(605)
s(611) =< s(607)
s(612) =< s(607)
s(613) =< s(607)+1
s(614) =< s(607)
s(615) =< s(611)*s(607)
s(616) =< s(611)*s(607)
s(617) =< s(610)*s(613)
s(618) =< s(611)*s(614)
s(616) =< s(611)*s(614)
s(619) =< s(615)
s(619) =< s(618)
s(612) =< s(617)+s(616)+s(606)
s(612) =< s(617)+s(619)+s(609)
s(612) =< s(617)+s(619)+s(607)
s(620) =< s(607)
s(620) =< s(606)
s(621) =< s(607)
s(622) =< s(611)*s(613)
s(621) =< s(622)+s(616)+s(606)
s(621) =< s(622)+s(619)+s(620)
s(621) =< s(622)+s(619)+s(607)

  with precondition: [V_m>=1,V_n>=1] 

* Chain [66]: 17*s(626)+4*s(627)+0
  Such that:s(623) =< V_m
s(624) =< V_n
s(625) =< s(623)
s(625) =< s(624)
s(626) =< s(624)
s(627) =< s(624)
s(628) =< s(624)+1
s(629) =< s(624)
s(630) =< s(626)*s(624)
s(631) =< s(626)*s(624)
s(632) =< s(626)*s(628)
s(633) =< s(626)*s(629)
s(631) =< s(626)*s(629)
s(634) =< s(630)
s(634) =< s(633)
s(627) =< s(632)+s(631)+s(623)
s(627) =< s(632)+s(634)+s(625)
s(627) =< s(632)+s(634)+s(624)

  with precondition: [V_m>=1,V_n>=2] 

* Chain [65]: 3*s(638)+1*s(639)+1*s(640)+0
  Such that:s(635) =< -V_m+V_n
s(636) =< V_m
s(637) =< V_n
s(638) =< s(637)
s(638) =< s(635)
s(639) =< s(637)
s(640) =< s(637)
s(641) =< s(637)+1
s(642) =< s(637)
s(643) =< s(639)*s(637)
s(644) =< s(639)*s(637)
s(645) =< s(638)*s(641)
s(646) =< s(639)*s(642)
s(644) =< s(639)*s(642)
s(647) =< s(643)
s(647) =< s(646)
s(640) =< s(645)+s(644)+s(636)
s(640) =< s(645)+s(647)+s(636)
s(640) =< s(645)+s(647)+s(637)

  with precondition: [V_m>=1,V_n>=2,V_n>=V_m] 

* Chain [64]: 1*s(651)+8*s(652)+2*s(653)+1*s(661)+0
  Such that:s(648) =< V_m
s(649) =< V_n
s(650) =< s(648)
s(650) =< s(649)
s(651) =< s(650)
s(652) =< s(649)
s(653) =< s(649)
s(654) =< s(649)+1
s(655) =< s(649)
s(656) =< s(652)*s(649)
s(657) =< s(652)*s(649)
s(658) =< s(652)*s(654)
s(659) =< s(652)*s(655)
s(657) =< s(652)*s(655)
s(660) =< s(656)
s(660) =< s(659)
s(653) =< s(658)+s(657)+s(648)
s(653) =< s(658)+s(660)+s(650)
s(653) =< s(658)+s(660)+s(649)
s(661) =< s(648)
s(661) =< s(649)

  with precondition: [V_m>=2,V_n>=2] 

* Chain [63]: 1
  with precondition: [V_n>=1] 


Closed-form bounds of eval_srch_start(V_11,V_22,V_23,V_3,V_i_0,V_j_0,V_j_1,V_m,V_n,B): 
-------------------------------------
* Chain [74] with precondition: [] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [73] with precondition: [V_m=0,V_n>=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [72] with precondition: [V_m=0,V_n>=2] 
    - Upper bound: 6*V_n 
    - Complexity: n 
* Chain [71] with precondition: [V_m=1,V_n>=1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [70] with precondition: [0>=V_m,V_n>=1] 
    - Upper bound: -4*V_m+10*V_n 
    - Complexity: n 
* Chain [69] with precondition: [0>=V_m,V_n>=2] 
    - Upper bound: -12*V_m+33*V_n 
    - Complexity: n 
* Chain [68] with precondition: [0>=V_n] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [67] with precondition: [V_m>=1,V_n>=1] 
    - Upper bound: 10*V_n 
    - Complexity: n 
* Chain [66] with precondition: [V_m>=1,V_n>=2] 
    - Upper bound: 21*V_n 
    - Complexity: n 
* Chain [65] with precondition: [V_m>=1,V_n>=2,V_n>=V_m] 
    - Upper bound: 5*V_n 
    - Complexity: n 
* Chain [64] with precondition: [V_m>=2,V_n>=2] 
    - Upper bound: 2*V_m+10*V_n 
    - Complexity: n 
* Chain [63] with precondition: [V_n>=1] 
    - Upper bound: 1 
    - Complexity: constant 

### Maximum cost of eval_srch_start(V_11,V_22,V_23,V_3,V_i_0,V_j_0,V_j_1,V_m,V_n,B): max([1,nat(V_n)+max([nat(-V_m+V_n)*4,nat(V_n)*4+max([nat(V_m)*2,nat(-V_m+V_n)*12+nat(V_n)*11])])+nat(V_n)*5]) 
Asymptotic class: n 
* Total analysis performed in 1582 ms.

