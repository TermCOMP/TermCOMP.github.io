WORST_CASE(Omega(n^1),O(n^1))

# LoAT Proof:
WORST_CASE(Omega(n^1),?)

WORST_CASE(Omega(n^1),?)

# KoAT Proof:
WORST_CASE(?, O(n^1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃
  Temp_Vars:  
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, X₃)
  t₁: l1(X₀, X₁, X₂, X₃) → l1(X₀-1, 3⋅X₁+2⋅X₂, -5⋅X₁-3⋅X₂, (X₀)²+X₃) :|: 1 ≤ X₀
  t₂: l1(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, X₃)
  t₃: l2(X₀, X₁, X₂, X₃) → l2(X₀, X₁-1, X₂-1, X₃) :|: 1 ≤ X₁+X₂


Preprocessing
  Eliminate variables [X₃] that do not contribute to the problem


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₄: l0(X₀, X₁, X₂) → l1(X₀, X₁, X₂)
  t₅: l1(X₀, X₁, X₂) → l1(X₀-1, 3⋅X₁+2⋅X₂, -5⋅X₁-3⋅X₂) :|: 1 ≤ X₀
  t₆: l1(X₀, X₁, X₂) → l2(X₀, X₁, X₂)
  t₇: l2(X₀, X₁, X₂) → l2(X₀, X₁-1, X₂-1) :|: 1 ≤ X₁+X₂


MPRF for transition t₅: l1(X₀, X₁, X₂) → l1(X₀-1, 3⋅X₁+2⋅X₂, -5⋅X₁-3⋅X₂) :|: 1 ≤ X₀ of depth 1:
  new bound:
    X₀ {O(n)}

  MPRF:
    • l1: [X₀]




MPRF for transition t₇: l2(X₀, X₁, X₂) → l2(X₀, X₁-1, X₂-1) :|: 1 ≤ X₁+X₂ of depth 1:
  new bound:
    39⋅X₂+61⋅X₁ {O(n)}

  MPRF:
    • l2: [X₁+X₂]




All Bounds
Timebounds
  Overall timebound:39⋅X₂+61⋅X₁+X₀+2 {O(n)}
    t₄: 1 {O(1)}
    t₅: X₀ {O(n)}
    t₆: 1 {O(1)}
    t₇: 39⋅X₂+61⋅X₁ {O(n)}


Costbounds
  Overall costbound: 39⋅X₂+61⋅X₁+X₀+2 {O(n)}
    t₄: 1 {O(1)}
    t₅: X₀ {O(n)}
    t₆: 1 {O(1)}
    t₇: 39⋅X₂+61⋅X₁ {O(n)}


Sizebounds
    t₄, X₀: X₀ {O(n)}
    t₄, X₁: X₁ {O(n)}
    t₄, X₂: X₂ {O(n)}
    t₅, X₀: X₀ {O(n)}
    t₅, X₁: 14⋅X₂+22⋅X₁ {O(n)}
    t₅, X₂: 24⋅X₂+38⋅X₁ {O(n)}
    t₆, X₀: 2⋅X₀ {O(n)}
    t₆, X₁: 14⋅X₂+23⋅X₁ {O(n)}
    t₆, X₂: 25⋅X₂+38⋅X₁ {O(n)}
    t₇, X₀: 2⋅X₀ {O(n)}
    t₇, X₁: 53⋅X₂+84⋅X₁ {O(n)}
    t₇, X₂: 64⋅X₂+99⋅X₁ {O(n)}

