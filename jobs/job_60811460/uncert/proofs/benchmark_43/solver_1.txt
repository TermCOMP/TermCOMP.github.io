WORST_CASE(Omega(n^1),O(n^1))

# LoAT Proof:
WORST_CASE(Omega(n^1),?)

WORST_CASE(Omega(n^1),?)
Initial ITS

Start location: evalNestedSinglestart

Location map:
LoAT_sink -> 0
evalNestedSinglestart -> 1
evalNestedSingleentryin -> 2
evalNestedSinglebb5in -> 3
evalNestedSinglebb2in -> 4
evalNestedSinglereturnin -> 5
evalNestedSinglebb4in -> 6
evalNestedSinglebb3in -> 7
evalNestedSinglebb1in -> 8
evalNestedSinglestop -> 9

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: -2+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=0
   2: (-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=4, i3'=1+i3, i6'=i4
   3: (-3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=5, i3'=1+i3
   4: (-4+i1 == 0 /\ i6-i5 >= 0) /\ i1'=6, i3'=1+i3
   5: (-1-i6+i5 >= 0 /\ -4+i1 == 0) /\ i1'=7, i3'=1+i3
   6: (-7+i1 == 0 /\ -1-it2 >= 0) /\ i1'=8, i3'=1+i3
   7: (-1+it3 >= 0 /\ -7+i1 == 0) /\ i1'=8, i3'=1+i3
   8: -7+i1 == 0 /\ i1'=6, i3'=1+i3
   9: -8+i1 == 0 /\ i1'=4, i3'=1+i3, i6'=1+i6
  10: -6+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=1+i6
  11: -5+i1 == 0 /\ i1'=9, i3'=1+i3

Dependency graph:
0 -> 1
1 -> 2, 1 -> 3
2 -> 4, 2 -> 5
3 -> 11
4 -> 10
5 -> 6, 5 -> 7, 5 -> 8
6 -> 9
7 -> 9
8 -> 10
9 -> 4, 9 -> 5
10 -> 2, 10 -> 3

Chained Linear Paths

	Applied Chaining

	First rule:
	-1+i1 == 0 /\ i1'=2, i3'=1+i3
	Second rule:
	-2+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=0
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=0
	
	Applied Deletion

	Removed the following rules: 0, 1
	
	Applied Chaining

	First rule:
	(-3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=5, i3'=1+i3
	Second rule:
	-5+i1 == 0 /\ i1'=9, i3'=1+i3
	New rule:
	(0 == 0 /\ -3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=9, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 3, 11
	
	Applied Chaining

	First rule:
	(-4+i1 == 0 /\ i6-i5 >= 0) /\ i1'=6, i3'=1+i3
	Second rule:
	-6+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=1+i6
	New rule:
	(0 == 0 /\ -4+i1 == 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i6
	
	Applied Deletion

	Removed the following rules: 4
	
	Applied Chaining

	First rule:
	(-7+i1 == 0 /\ -1-it2 >= 0) /\ i1'=8, i3'=1+i3
	Second rule:
	-8+i1 == 0 /\ i1'=4, i3'=1+i3, i6'=1+i6
	New rule:
	(0 == 0 /\ -7+i1 == 0 /\ -1-it2 >= 0) /\ i1'=4, i3'=2+i3, i6'=1+i6
	
	Applied Deletion

	Removed the following rules: 6
	
	Applied Chaining

	First rule:
	(-1+it3 >= 0 /\ -7+i1 == 0) /\ i1'=8, i3'=1+i3
	Second rule:
	-8+i1 == 0 /\ i1'=4, i3'=1+i3, i6'=1+i6
	New rule:
	(0 == 0 /\ -1+it3 >= 0 /\ -7+i1 == 0) /\ i1'=4, i3'=2+i3, i6'=1+i6
	
	Applied Deletion

	Removed the following rules: 7, 9
	
	Applied Chaining

	First rule:
	-7+i1 == 0 /\ i1'=6, i3'=1+i3
	Second rule:
	-6+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=1+i6
	New rule:
	(0 == 0 /\ -7+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=1+i6
	
	Applied Deletion

	Removed the following rules: 8, 10

Start location: evalNestedSinglestart

Location map:
LoAT_sink -> 0
evalNestedSinglestart -> 1
evalNestedSingleentryin -> 2
evalNestedSinglebb5in -> 3
evalNestedSinglebb2in -> 4
evalNestedSinglereturnin -> 5
evalNestedSinglebb4in -> 6
evalNestedSinglebb3in -> 7
evalNestedSinglebb1in -> 8
evalNestedSinglestop -> 9

Rules:
   2: (-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=4, i3'=1+i3, i6'=i4
   5: (-1-i6+i5 >= 0 /\ -4+i1 == 0) /\ i1'=7, i3'=1+i3
  12: (0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=0
  13: (0 == 0 /\ -3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=9, i3'=2+i3
  14: (0 == 0 /\ -4+i1 == 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i6
  15: (0 == 0 /\ -7+i1 == 0 /\ -1-it2 >= 0) /\ i1'=4, i3'=2+i3, i6'=1+i6
  16: (0 == 0 /\ -1+it3 >= 0 /\ -7+i1 == 0) /\ i1'=4, i3'=2+i3, i6'=1+i6
  17: (0 == 0 /\ -7+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=1+i6

Dependency graph:
2 -> 5, 2 -> 14
5 -> 15, 5 -> 16, 5 -> 17
12 -> 2, 12 -> 13
14 -> 2, 14 -> 13
15 -> 5, 15 -> 14
16 -> 5, 16 -> 14
17 -> 2, 17 -> 13

Preprocessed Transitions

	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=0
	New rule:
	-1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=0
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=9, i3'=2+i3
	New rule:
	(-3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=9, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -4+i1 == 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i6
	New rule:
	(-4+i1 == 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i6
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -7+i1 == 0 /\ -1-it2 >= 0) /\ i1'=4, i3'=2+i3, i6'=1+i6
	New rule:
	(-7+i1 == 0 /\ -1-it2 >= 0) /\ i1'=4, i3'=2+i3, i6'=1+i6
	
	Eliminated Temporary Variables

	Original rule:
	(-7+i1 == 0 /\ -1-it2 >= 0) /\ i1'=4, i3'=2+i3, i6'=1+i6
	New rule:
	(-7+i1 == 0) /\ i1'=4, i3'=2+i3, i6'=1+i6
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+it3 >= 0 /\ -7+i1 == 0) /\ i1'=4, i3'=2+i3, i6'=1+i6
	New rule:
	(-1+it3 >= 0 /\ -7+i1 == 0) /\ i1'=4, i3'=2+i3, i6'=1+i6
	
	Eliminated Temporary Variables

	Original rule:
	(-1+it3 >= 0 /\ -7+i1 == 0) /\ i1'=4, i3'=2+i3, i6'=1+i6
	New rule:
	(-7+i1 == 0) /\ i1'=4, i3'=2+i3, i6'=1+i6
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -7+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=1+i6
	New rule:
	-7+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=1+i6

Start location: evalNestedSinglestart

Location map:
LoAT_sink -> 0
evalNestedSinglestart -> 1
evalNestedSingleentryin -> 2
evalNestedSinglebb5in -> 3
evalNestedSinglebb2in -> 4
evalNestedSinglereturnin -> 5
evalNestedSinglebb4in -> 6
evalNestedSinglebb3in -> 7
evalNestedSinglebb1in -> 8
evalNestedSinglestop -> 9

Rules:
   2: (-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=4, i3'=1+i3, i6'=i4
   5: (-1-i6+i5 >= 0 /\ -4+i1 == 0) /\ i1'=7, i3'=1+i3
  18: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=0
  19: (-3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=9, i3'=2+i3
  20: (-4+i1 == 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i6
  21: (-7+i1 == 0) /\ i1'=4, i3'=2+i3, i6'=1+i6
  22: (-7+i1 == 0) /\ i1'=4, i3'=2+i3, i6'=1+i6
  23: -7+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=1+i6

Dependency graph:
2 -> 5, 2 -> 20
5 -> 21, 5 -> 22, 5 -> 23
18 -> 2, 18 -> 19
20 -> 2, 20 -> 19
21 -> 5, 21 -> 20
22 -> 5, 22 -> 20
23 -> 2, 23 -> 19

Refined Dependency Graph

	Removed the following edges: 2 -> 20, 20 -> 2

Start location: evalNestedSinglestart

Location map:
LoAT_sink -> 0
evalNestedSinglestart -> 1
evalNestedSingleentryin -> 2
evalNestedSinglebb5in -> 3
evalNestedSinglebb2in -> 4
evalNestedSinglereturnin -> 5
evalNestedSinglebb4in -> 6
evalNestedSinglebb3in -> 7
evalNestedSinglebb1in -> 8
evalNestedSinglestop -> 9

Rules:
   2: (-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=4, i3'=1+i3, i6'=i4
   5: (-1-i6+i5 >= 0 /\ -4+i1 == 0) /\ i1'=7, i3'=1+i3
  18: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=0
  19: (-3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=9, i3'=2+i3
  20: (-4+i1 == 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i6
  21: (-7+i1 == 0) /\ i1'=4, i3'=2+i3, i6'=1+i6
  22: (-7+i1 == 0) /\ i1'=4, i3'=2+i3, i6'=1+i6
  23: -7+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=1+i6

Dependency graph:
2 -> 5
5 -> 21, 5 -> 22, 5 -> 23
18 -> 2, 18 -> 19
20 -> 19
21 -> 5, 21 -> 20
22 -> 5, 22 -> 20
23 -> 2, 23 -> 19

Step with 18

	Trace

	18[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 19

	Trace

	18[(-1+i1 == 0)]
	19[(-3+i1 == 0 /\ i4-i5 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Backtrack

	Trace

	18[(-1+i1 == 0)]
	
	Blocked

	{}
	{19[T]}
	
Step with 2

	Trace

	18[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{19[T]}
	{}
	
Step with 5

	Trace

	18[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	5[(-1-i6+i5 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{19[T]}
	{}
	{}
	
Step with 21

	Trace

	18[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	5[(-1-i6+i5 >= 0 /\ -4+i1 == 0)]
	21[(-7+i1 == 0)]
	
	Blocked

	{}
	{19[T]}
	{}
	{}
	{}
	
Poly(n^1)

Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -1-i6+i5 >= 0 /\ -4+i1 == 0) /\ i1'=4, i3'=3+i3, i6'=1+i6
		New rule:
		(-1-i6+i5 >= 0 /\ -4+i1 == 0) /\ i1'=4, i3'=3+i3, i6'=1+i6

	Loop Acceleration

	Original rule:
	(-1-i6+i5 >= 0 /\ -4+i1 == 0) /\ i1'=4, i3'=3+i3, i6'=1+i6
	New rule:
	(-it29-i6+i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+it29 >= 0) /\ i1'=i1, i3'=3*it29+i3, i6'=it29+i6

		-1-i6+i5 >= 0 [0]: montonic decrease yields -it29-i6+i5 >= 0
		
		-4+i1 >= 0 [0]: unchanged
		
		4-i1 >= 0 [0]: unchanged
		
		Replacement map: {-1-i6+i5 >= 0 -> -it29-i6+i5 >= 0, -4+i1 >= 0 -> -4+i1 >= 0, 4-i1 >= 0 -> 4-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-it29-i6+i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+it29 >= 0) /\ i1'=i1, i3'=3*it29+i3, i6'=it29+i6
	New rule:
	(-it29-i6+i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+it29 >= 0) /\ i3'=3*it29+i3, i6'=it29+i6
	
	Instantiation

	Original rule:
	(-it29-i6+i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+it29 >= 0) /\ i3'=3*it29+i3, i6'=it29+i6
	New rule:
	(0 >= 0 /\ -1-i6+i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0) /\ i3'=-3*i6+i3+3*i5, i6'=i5

Start location: evalNestedSinglestart

Location map:
LoAT_sink -> 0
evalNestedSinglestart -> 1
evalNestedSingleentryin -> 2
evalNestedSinglebb5in -> 3
evalNestedSinglebb2in -> 4
evalNestedSinglereturnin -> 5
evalNestedSinglebb4in -> 6
evalNestedSinglebb3in -> 7
evalNestedSinglebb1in -> 8
evalNestedSinglestop -> 9

Rules:
   2: (-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=4, i3'=1+i3, i6'=i4
   5: (-1-i6+i5 >= 0 /\ -4+i1 == 0) /\ i1'=7, i3'=1+i3
  18: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=0
  19: (-3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=9, i3'=2+i3
  20: (-4+i1 == 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i6
  21: (-7+i1 == 0) /\ i1'=4, i3'=2+i3, i6'=1+i6
  22: (-7+i1 == 0) /\ i1'=4, i3'=2+i3, i6'=1+i6
  23: -7+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=1+i6
  24: (0 >= 0 /\ -1-i6+i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0) /\ i3'=-3*i6+i3+3*i5, i6'=i5

Dependency graph:
2 -> 5, 2 -> 24
5 -> 21, 5 -> 22, 5 -> 23
18 -> 2, 18 -> 19
20 -> 19
21 -> 5, 21 -> 20, 21 -> 24
22 -> 5, 22 -> 20, 22 -> 24
23 -> 2, 23 -> 19
24 -> 5, 24 -> 20

	Trace

	18[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	24[(0 >= 0 /\ -1-i6+i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0)]
	
	Blocked

	{}
	{19[T]}
	{}
	{24[T]}
	
Step with 20

	Trace

	18[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	24[(0 >= 0 /\ -1-i6+i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0)]
	20[(-4+i1 == 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{19[T]}
	{}
	{24[T]}
	{}
	
Step with 19

	Trace

	18[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	24[(0 >= 0 /\ -1-i6+i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0)]
	20[(-4+i1 == 0 /\ i6-i5 >= 0)]
	19[(-3+i1 == 0 /\ i4-i5 >= 0)]
	
	Blocked

	{}
	{19[T]}
	{}
	{24[T]}
	{}
	{}
	
Backtrack

	Trace

	18[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	24[(0 >= 0 /\ -1-i6+i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0)]
	20[(-4+i1 == 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{19[T]}
	{}
	{24[T]}
	{19[T]}
	
Backtrack

	Trace

	18[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	24[(0 >= 0 /\ -1-i6+i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0)]
	
	Blocked

	{}
	{19[T]}
	{}
	{20[T], 24[T]}
	
Backtrack

	Trace

	18[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{19[T]}
	{24[T]}
	
Step with 5

	Trace

	18[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	5[(-1-i6+i5 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{19[T]}
	{24[T]}
	{}
	
Step with 23

	Trace

	18[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	5[(-1-i6+i5 >= 0 /\ -4+i1 == 0)]
	23[(-7+i1 == 0)]
	
	Blocked

	{}
	{19[T]}
	{24[T]}
	{}
	{}
	
Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=4+i3, i4'=1+i4, i6'=i4
		New rule:
		(-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=4+i3, i4'=1+i4, i6'=i4

	Loop Acceleration

	Original rule:
	(-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=4+i3, i4'=1+i4, i6'=i4
	New rule:
	(-3+i1 >= 0 /\ -1+it61 >= 0 /\ -it61-i4+i5 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=i1, i3'=i3+4*it61, i4'=it61+i4, i6'=-1+it61+i4

		-3+i1 >= 0 [0]: unchanged
		
		3-i1 >= 0 [0]: unchanged
		
		-1-i4+i5 >= 0 [0]: montonic decrease yields (-it61-i4+i5 >= 0 /\ -1-i4+i5 >= 0)
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, 3-i1 >= 0 -> 3-i1 >= 0, -1-i4+i5 >= 0 -> (-it61-i4+i5 >= 0 /\ -1-i4+i5 >= 0)}

	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ -1+it61 >= 0 /\ -it61-i4+i5 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=i1, i3'=i3+4*it61, i4'=it61+i4, i6'=-1+it61+i4
	New rule:
	(-3+i1 >= 0 /\ -1+it61 >= 0 /\ -it61-i4+i5 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3+4*it61, i4'=it61+i4, i6'=-1+it61+i4
	
	Instantiation

	Original rule:
	(-3+i1 >= 0 /\ -1+it61 >= 0 /\ -it61-i4+i5 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3+4*it61, i4'=it61+i4, i6'=-1+it61+i4
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3-4*i4+4*i5, i4'=i5, i6'=-1+i5

Start location: evalNestedSinglestart

Location map:
LoAT_sink -> 0
evalNestedSinglestart -> 1
evalNestedSingleentryin -> 2
evalNestedSinglebb5in -> 3
evalNestedSinglebb2in -> 4
evalNestedSinglereturnin -> 5
evalNestedSinglebb4in -> 6
evalNestedSinglebb3in -> 7
evalNestedSinglebb1in -> 8
evalNestedSinglestop -> 9

Rules:
   2: (-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=4, i3'=1+i3, i6'=i4
   5: (-1-i6+i5 >= 0 /\ -4+i1 == 0) /\ i1'=7, i3'=1+i3
  18: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=0
  19: (-3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=9, i3'=2+i3
  20: (-4+i1 == 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i6
  21: (-7+i1 == 0) /\ i1'=4, i3'=2+i3, i6'=1+i6
  22: (-7+i1 == 0) /\ i1'=4, i3'=2+i3, i6'=1+i6
  23: -7+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=1+i6
  24: (0 >= 0 /\ -1-i6+i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0) /\ i3'=-3*i6+i3+3*i5, i6'=i5
  25: (0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3-4*i4+4*i5, i4'=i5, i6'=-1+i5

Dependency graph:
2 -> 5, 2 -> 24
5 -> 21, 5 -> 22, 5 -> 23
18 -> 2, 18 -> 19, 18 -> 25
20 -> 19
21 -> 5, 21 -> 20, 21 -> 24
22 -> 5, 22 -> 20, 22 -> 24
23 -> 2, 23 -> 19, 23 -> 25
24 -> 5, 24 -> 20
25 -> 2, 25 -> 19

	Trace

	18[(-1+i1 == 0)]
	25[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{19[T]}
	{25[T]}
	
Step with 19

	Trace

	18[(-1+i1 == 0)]
	25[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0)]
	19[(-3+i1 == 0 /\ i4-i5 >= 0)]
	
	Blocked

	{}
	{19[T]}
	{2[T], 25[T]}
	{}
	
Backtrack

	Trace

	18[(-1+i1 == 0)]
	25[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{19[T]}
	{2[T], 19[T], 25[T]}
	
Backtrack

	Trace

	18[(-1+i1 == 0)]
	
	Blocked

	{}
	{19[T], 25[T]}
	
Step with 2

	Trace

	18[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{19[T], 25[T]}
	{}
	
Step with 24

	Trace

	18[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	24[(0 >= 0 /\ -1-i6+i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0)]
	
	Blocked

	{}
	{19[T], 25[T]}
	{}
	{24[T]}
	
Step with 20

	Trace

	18[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	24[(0 >= 0 /\ -1-i6+i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0)]
	20[(-4+i1 == 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{19[T], 25[T]}
	{}
	{5[T], 24[T]}
	{}
	
Step with 19

	Trace

	18[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	24[(0 >= 0 /\ -1-i6+i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0)]
	20[(-4+i1 == 0 /\ i6-i5 >= 0)]
	19[(-3+i1 == 0 /\ i4-i5 >= 0)]
	
	Blocked

	{}
	{19[T], 25[T]}
	{}
	{5[T], 24[T]}
	{}
	{}
	
Backtrack

	Trace

	18[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	24[(0 >= 0 /\ -1-i6+i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0)]
	20[(-4+i1 == 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{19[T], 25[T]}
	{}
	{5[T], 24[T]}
	{19[T]}
	
Backtrack

	Trace

	18[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	24[(0 >= 0 /\ -1-i6+i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0)]
	
	Blocked

	{}
	{19[T], 25[T]}
	{}
	{5[T], 20[T], 24[T]}
	
Backtrack

	Trace

	18[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{19[T], 25[T]}
	{24[T]}
	
Step with 5

	Trace

	18[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	5[(-1-i6+i5 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{19[T], 25[T]}
	{24[T]}
	{}
	
Step with 23

	Trace

	18[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	5[(-1-i6+i5 >= 0 /\ -4+i1 == 0)]
	23[(-7+i1 == 0)]
	
	Blocked

	{}
	{19[T], 25[T]}
	{24[T]}
	{}
	{}
	
Covered

	Trace

	18[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	5[(-1-i6+i5 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{19[T], 25[T]}
	{24[T]}
	{23[T]}
	
Step with 22

	Trace

	18[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	5[(-1-i6+i5 >= 0 /\ -4+i1 == 0)]
	22[(-7+i1 == 0)]
	
	Blocked

	{}
	{19[T], 25[T]}
	{24[T]}
	{23[T]}
	{}
	
Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -1-i6+i5 >= 0 /\ -4+i1 == 0) /\ i1'=4, i3'=3+i3, i6'=1+i6
		New rule:
		(-1-i6+i5 >= 0 /\ -4+i1 == 0) /\ i1'=4, i3'=3+i3, i6'=1+i6

	Loop Acceleration

	Original rule:
	(-1-i6+i5 >= 0 /\ -4+i1 == 0) /\ i1'=4, i3'=3+i3, i6'=1+i6
	New rule:
	(-4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+it107 >= 0 /\ -i6-it107+i5 >= 0) /\ i1'=i1, i3'=i3+3*it107, i6'=i6+it107

		-1-i6+i5 >= 0 [0]: montonic decrease yields -i6-it107+i5 >= 0
		
		-4+i1 >= 0 [0]: unchanged
		
		4-i1 >= 0 [0]: unchanged
		
		Replacement map: {-1-i6+i5 >= 0 -> -i6-it107+i5 >= 0, -4+i1 >= 0 -> -4+i1 >= 0, 4-i1 >= 0 -> 4-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+it107 >= 0 /\ -i6-it107+i5 >= 0) /\ i1'=i1, i3'=i3+3*it107, i6'=i6+it107
	New rule:
	(-4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+it107 >= 0 /\ -i6-it107+i5 >= 0) /\ i3'=i3+3*it107, i6'=i6+it107
	
	Instantiation

	Original rule:
	(-4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+it107 >= 0 /\ -i6-it107+i5 >= 0) /\ i3'=i3+3*it107, i6'=i6+it107
	New rule:
	(0 >= 0 /\ -1-i6+i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0) /\ i3'=-3*i6+i3+3*i5, i6'=i5

Start location: evalNestedSinglestart

Location map:
LoAT_sink -> 0
evalNestedSinglestart -> 1
evalNestedSingleentryin -> 2
evalNestedSinglebb5in -> 3
evalNestedSinglebb2in -> 4
evalNestedSinglereturnin -> 5
evalNestedSinglebb4in -> 6
evalNestedSinglebb3in -> 7
evalNestedSinglebb1in -> 8
evalNestedSinglestop -> 9

Rules:
   2: (-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=4, i3'=1+i3, i6'=i4
   5: (-1-i6+i5 >= 0 /\ -4+i1 == 0) /\ i1'=7, i3'=1+i3
  18: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=0
  19: (-3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=9, i3'=2+i3
  20: (-4+i1 == 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=2+i3, i4'=1+i6
  21: (-7+i1 == 0) /\ i1'=4, i3'=2+i3, i6'=1+i6
  22: (-7+i1 == 0) /\ i1'=4, i3'=2+i3, i6'=1+i6
  23: -7+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=1+i6
  24: (0 >= 0 /\ -1-i6+i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0) /\ i3'=-3*i6+i3+3*i5, i6'=i5
  25: (0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3-4*i4+4*i5, i4'=i5, i6'=-1+i5
  26: (0 >= 0 /\ -1-i6+i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0) /\ i3'=-3*i6+i3+3*i5, i6'=i5

Dependency graph:
2 -> 5, 2 -> 24, 2 -> 26
5 -> 21, 5 -> 22, 5 -> 23
18 -> 2, 18 -> 19, 18 -> 25
20 -> 19
21 -> 5, 21 -> 20, 21 -> 24, 21 -> 26
22 -> 5, 22 -> 20, 22 -> 24, 22 -> 26
23 -> 2, 23 -> 19, 23 -> 25
24 -> 5, 24 -> 20, 24 -> 26
25 -> 2, 25 -> 19
26 -> 5, 26 -> 20, 26 -> 24

	Trace

	18[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	26[(0 >= 0 /\ -1-i6+i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0)]
	
	Blocked

	{}
	{19[T], 25[T]}
	{24[T]}
	{26[T]}
	
Step with 20

	Trace

	18[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	26[(0 >= 0 /\ -1-i6+i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0)]
	20[(-4+i1 == 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{19[T], 25[T]}
	{24[T]}
	{5[T], 24[T], 26[T]}
	{}
	
Step with 19

	Trace

	18[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	26[(0 >= 0 /\ -1-i6+i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0)]
	20[(-4+i1 == 0 /\ i6-i5 >= 0)]
	19[(-3+i1 == 0 /\ i4-i5 >= 0)]
	
	Blocked

	{}
	{19[T], 25[T]}
	{24[T]}
	{5[T], 24[T], 26[T]}
	{}
	{}
	
Backtrack

	Trace

	18[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	26[(0 >= 0 /\ -1-i6+i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0)]
	20[(-4+i1 == 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{19[T], 25[T]}
	{24[T]}
	{5[T], 24[T], 26[T]}
	{19[T]}
	
Backtrack

	Trace

	18[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	26[(0 >= 0 /\ -1-i6+i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0)]
	
	Blocked

	{}
	{19[T], 25[T]}
	{24[T]}
	{5[T], 20[T], 24[T], 26[T]}
	
Backtrack

	Trace

	18[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{19[T], 25[T]}
	{24[T], 26[T]}
	
Step with 5

	Trace

	18[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	5[(-1-i6+i5 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{19[T], 25[T]}
	{24[T], 26[T]}
	{}
	
Step with 23

	Trace

	18[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	5[(-1-i6+i5 >= 0 /\ -4+i1 == 0)]
	23[(-7+i1 == 0)]
	
	Blocked

	{}
	{19[T], 25[T]}
	{24[T], 26[T]}
	{}
	{}
	
Covered

	Trace

	18[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	5[(-1-i6+i5 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{19[T], 25[T]}
	{24[T], 26[T]}
	{23[T]}
	
Step with 22

	Trace

	18[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	5[(-1-i6+i5 >= 0 /\ -4+i1 == 0)]
	22[(-7+i1 == 0)]
	
	Blocked

	{}
	{19[T], 25[T]}
	{24[T], 26[T]}
	{23[T]}
	{}
	
Covered

	Trace

	18[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	5[(-1-i6+i5 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{19[T], 25[T]}
	{24[T], 26[T]}
	{22[T], 23[T]}
	
Step with 21

	Trace

	18[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	5[(-1-i6+i5 >= 0 /\ -4+i1 == 0)]
	21[(-7+i1 == 0)]
	
	Blocked

	{}
	{19[T], 25[T]}
	{24[T], 26[T]}
	{22[T], 23[T]}
	{}
	
Covered

	Trace

	18[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	5[(-1-i6+i5 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{19[T], 25[T]}
	{24[T], 26[T]}
	{21[T], 22[T], 23[T]}
	
Backtrack

	Trace

	18[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{19[T], 25[T]}
	{5[T], 24[T], 26[T]}
	
Backtrack

	Trace

	18[(-1+i1 == 0)]
	
	Blocked

	{}
	{2[T], 19[T], 25[T]}
	
Backtrack

	Trace

	Blocked

	{18[T]}
	
Accept

Poly(n^1)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  D
  Locations:  l0, l1, l2, l3, l4, l5, l6, l7, l8
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂) → l7(X₀, X₁, X₂)
  t₅: l1(X₀, X₁, X₂) → l2(X₀, X₁, X₂) :|: 1+X₂ ≤ X₁
  t₄: l1(X₀, X₁, X₂) → l4(X₀, X₁, X₂) :|: X₁ ≤ X₂
  t₆: l2(X₀, X₁, X₂) → l3(X₀, X₁, X₂) :|: 1+D ≤ 0
  t₇: l2(X₀, X₁, X₂) → l3(X₀, X₁, X₂) :|: 1 ≤ D
  t₈: l2(X₀, X₁, X₂) → l4(X₀, X₁, X₂)
  t₉: l3(X₀, X₁, X₂) → l1(X₀, X₁, 1+X₂)
  t₁₀: l4(X₀, X₁, X₂) → l5(1+X₂, X₁, X₂)
  t₂: l5(X₀, X₁, X₂) → l1(X₀, X₁, X₀) :|: 1+X₀ ≤ X₁
  t₃: l5(X₀, X₁, X₂) → l6(X₀, X₁, X₂) :|: X₁ ≤ X₀
  t₁₁: l6(X₀, X₁, X₂) → l8(X₀, X₁, X₂)
  t₁: l7(X₀, X₁, X₂) → l5(0, X₁, X₂)


Preprocessing
  Found invariant 1+X₂ ≤ X₁ ∧ 0 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l2


  Found invariant X₁ ≤ X₀ ∧ 0 ≤ X₀ for location l6


  Found invariant 0 ≤ X₀ for location l5


  Found invariant X₁ ≤ X₀ ∧ 0 ≤ X₀ for location l8


  Found invariant X₂ ≤ X₁ ∧ 0 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l1


  Found invariant X₂ ≤ X₁ ∧ 0 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l4


  Found invariant 1+X₂ ≤ X₁ ∧ 0 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 0 ≤ X₀ for location l3


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  D
  Locations:  l0, l1, l2, l3, l4, l5, l6, l7, l8
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂) → l7(X₀, X₁, X₂)
  t₅: l1(X₀, X₁, X₂) → l2(X₀, X₁, X₂) :|: 1+X₂ ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₂
  t₄: l1(X₀, X₁, X₂) → l4(X₀, X₁, X₂) :|: X₁ ≤ X₂ ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₂
  t₆: l2(X₀, X₁, X₂) → l3(X₀, X₁, X₂) :|: 1+D ≤ 0 ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₂
  t₇: l2(X₀, X₁, X₂) → l3(X₀, X₁, X₂) :|: 1 ≤ D ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₂
  t₈: l2(X₀, X₁, X₂) → l4(X₀, X₁, X₂) :|: 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₂
  t₉: l3(X₀, X₁, X₂) → l1(X₀, X₁, 1+X₂) :|: 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₂
  t₁₀: l4(X₀, X₁, X₂) → l5(1+X₂, X₁, X₂) :|: 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₂
  t₂: l5(X₀, X₁, X₂) → l1(X₀, X₁, X₀) :|: 1+X₀ ≤ X₁ ∧ 0 ≤ X₀
  t₃: l5(X₀, X₁, X₂) → l6(X₀, X₁, X₂) :|: X₁ ≤ X₀ ∧ 0 ≤ X₀
  t₁₁: l6(X₀, X₁, X₂) → l8(X₀, X₁, X₂) :|: 0 ≤ X₀ ∧ X₁ ≤ X₀
  t₁: l7(X₀, X₁, X₂) → l5(0, X₁, X₂)


MPRF for transition t₂: l5(X₀, X₁, X₂) → l1(X₀, X₁, X₀) :|: 1+X₀ ≤ X₁ ∧ 0 ≤ X₀ of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l1: [X₁-1-X₂]
    • l2: [X₁-1-X₂]
    • l3: [X₁-1-X₂]
    • l4: [X₁-1-X₂]
    • l5: [X₁-X₀]




MPRF for transition t₄: l1(X₀, X₁, X₂) → l4(X₀, X₁, X₂) :|: X₁ ≤ X₂ ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₂ of depth 1:
  new bound:
    X₁+1 {O(n)}

  MPRF:
    • l1: [1+X₁-X₂]
    • l2: [1+X₁-X₂]
    • l3: [1+X₁-X₂]
    • l4: [X₁-X₂]
    • l5: [1+X₁-X₀]




MPRF for transition t₅: l1(X₀, X₁, X₂) → l2(X₀, X₁, X₂) :|: 1+X₂ ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₂ of depth 1:
  new bound:
    X₁+1 {O(n)}

  MPRF:
    • l1: [1+X₁-X₂]
    • l2: [X₁-X₂]
    • l3: [X₁-X₂]
    • l4: [X₁-X₂]
    • l5: [1+X₁-X₀]




MPRF for transition t₆: l2(X₀, X₁, X₂) → l3(X₀, X₁, X₂) :|: 1+D ≤ 0 ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₂ of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l1: [X₁-X₂]
    • l2: [X₁-X₂]
    • l3: [X₁-1-X₂]
    • l4: [X₁-X₂]
    • l5: [X₁-X₀]




MPRF for transition t₇: l2(X₀, X₁, X₂) → l3(X₀, X₁, X₂) :|: 1 ≤ D ∧ 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₂ of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l1: [X₁-X₂]
    • l2: [X₁-X₂]
    • l3: [X₁-1-X₂]
    • l4: [X₁-X₂]
    • l5: [X₁-X₀]




MPRF for transition t₈: l2(X₀, X₁, X₂) → l4(X₀, X₁, X₂) :|: 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₂ of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l1: [X₁-X₂]
    • l2: [X₁-X₂]
    • l3: [X₁-X₂]
    • l4: [X₁-1-X₂]
    • l5: [X₁-X₀]




MPRF for transition t₉: l3(X₀, X₁, X₂) → l1(X₀, X₁, 1+X₂) :|: 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₂ of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l1: [X₁-X₂]
    • l2: [X₁-X₂]
    • l3: [X₁-X₂]
    • l4: [X₁-X₂]
    • l5: [X₁-X₀]




MPRF for transition t₁₀: l4(X₀, X₁, X₂) → l5(1+X₂, X₁, X₂) :|: 1 ≤ X₀+X₁ ∧ 1+X₀ ≤ X₁ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ X₂ ≤ X₁ ∧ 0 ≤ X₂ of depth 1:
  new bound:
    X₁+1 {O(n)}

  MPRF:
    • l1: [1+X₁-X₀]
    • l2: [1+X₁-X₀]
    • l3: [1+X₁-X₀]
    • l4: [1+X₁-X₂]
    • l5: [1+X₁-X₀]




All Bounds
Timebounds
  Overall timebound:8⋅X₁+7 {O(n)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: X₁ {O(n)}
    t₃: 1 {O(1)}
    t₄: X₁+1 {O(n)}
    t₅: X₁+1 {O(n)}
    t₆: X₁ {O(n)}
    t₇: X₁ {O(n)}
    t₈: X₁ {O(n)}
    t₉: X₁ {O(n)}
    t₁₀: X₁+1 {O(n)}
    t₁₁: 1 {O(1)}


Costbounds
  Overall costbound: 8⋅X₁+7 {O(n)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: X₁ {O(n)}
    t₃: 1 {O(1)}
    t₄: X₁+1 {O(n)}
    t₅: X₁+1 {O(n)}
    t₆: X₁ {O(n)}
    t₇: X₁ {O(n)}
    t₈: X₁ {O(n)}
    t₉: X₁ {O(n)}
    t₁₀: X₁+1 {O(n)}
    t₁₁: 1 {O(1)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₀, X₂: X₂ {O(n)}
    t₁, X₀: 0 {O(1)}
    t₁, X₁: X₁ {O(n)}
    t₁, X₂: X₂ {O(n)}
    t₂, X₀: 2⋅X₁+1 {O(n)}
    t₂, X₁: X₁ {O(n)}
    t₂, X₂: 2⋅X₁+1 {O(n)}
    t₃, X₀: 2⋅X₁+1 {O(n)}
    t₃, X₁: 2⋅X₁ {O(n)}
    t₃, X₂: 4⋅X₁+X₂+2 {O(n)}
    t₄, X₀: 2⋅X₁+1 {O(n)}
    t₄, X₁: X₁ {O(n)}
    t₄, X₂: 2⋅X₁+1 {O(n)}
    t₅, X₀: 2⋅X₁+1 {O(n)}
    t₅, X₁: X₁ {O(n)}
    t₅, X₂: 2⋅X₁+1 {O(n)}
    t₆, X₀: 2⋅X₁+1 {O(n)}
    t₆, X₁: X₁ {O(n)}
    t₆, X₂: 2⋅X₁+1 {O(n)}
    t₇, X₀: 2⋅X₁+1 {O(n)}
    t₇, X₁: X₁ {O(n)}
    t₇, X₂: 2⋅X₁+1 {O(n)}
    t₈, X₀: 2⋅X₁+1 {O(n)}
    t₈, X₁: X₁ {O(n)}
    t₈, X₂: 2⋅X₁+1 {O(n)}
    t₉, X₀: 2⋅X₁+1 {O(n)}
    t₉, X₁: X₁ {O(n)}
    t₉, X₂: 2⋅X₁+1 {O(n)}
    t₁₀, X₀: 2⋅X₁+1 {O(n)}
    t₁₀, X₁: X₁ {O(n)}
    t₁₀, X₂: 4⋅X₁+2 {O(n)}
    t₁₁, X₀: 2⋅X₁+1 {O(n)}
    t₁₁, X₁: 2⋅X₁ {O(n)}
    t₁₁, X₂: 4⋅X₁+X₂+2 {O(n)}

