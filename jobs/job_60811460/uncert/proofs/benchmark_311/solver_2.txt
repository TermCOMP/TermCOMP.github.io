MAYBE
WARNING: Excluded non-linear constraints:[O>=C*P,C*P+P>=O+1,O>=C*Q,C*Q+Q>=O+1]
WARNING: Excluded non-linear constraints:[O>=C*P,C*P+P>=O+1,O>=C*Q,C*Q+Q>=O+1]

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [f8/13]
1. recursive  : [f19/6]
2. recursive  : [f27/6]
3. recursive  : [f43/4]
4. recursive  : [f49/6]
5. recursive  : [f36/11,f43_loop_cont/12,f49_loop_cont/12]
6. recursive  : [f19_loop_cont/17,f2/16,f27_loop_cont/17,f34/16,f36_loop_cont/17,f8_loop_cont/17]
7. non_recursive  : [exit_location/1]
8. non_recursive  : [f1/9]
9. non_recursive  : [f2_loop_cont/10]
10. non_recursive  : [start/9]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into f8/13
1. SCC is partially evaluated into f19/6
2. SCC is partially evaluated into f27/6
3. SCC is partially evaluated into f43/4
4. SCC is partially evaluated into f49/6
5. SCC is partially evaluated into f36/11
6. SCC is partially evaluated into f2/16
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is partially evaluated into f2_loop_cont/10
10. SCC is partially evaluated into start/9

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations f8/13 
* CE 22 is refined into CE [43] 
* CE 23 is refined into CE [44] 
* CE 21 is refined into CE [45] 
* CE 24 is refined into CE [46] 
* CE 20 is refined into CE [47] 
* CE 19 is refined into CE [48] 


### Cost equations --> "Loop" of f8/13 
* CEs [47] --> Loop 34 
* CEs [48] --> Loop 35 
* CEs [44] --> Loop 36 
* CEs [43] --> Loop 37 
* CEs [45] --> Loop 38 
* CEs [46] --> Loop 39 

### Ranking functions of CR f8(A,B,C,D,E,F,G,M,N,O,P,Q,R) 
* RF of phase [34,35]: [A-E+1]

#### Partial ranking functions of CR f8(A,B,C,D,E,F,G,M,N,O,P,Q,R) 
* Partial RF of phase [34,35]:
  - RF of loop [34:1,35:1]:
    A-E+1


### Specialization of cost equations f19/6 
* CE 26 is refined into CE [49] 
* CE 27 is refined into CE [50] 
* CE 25 is refined into CE [51] 


### Cost equations --> "Loop" of f19/6 
* CEs [51] --> Loop 40 
* CEs [49] --> Loop 41 
* CEs [50] --> Loop 42 

### Ranking functions of CR f19(A,E,H,M,N,O) 
* RF of phase [40]: [A-E+1]

#### Partial ranking functions of CR f19(A,E,H,M,N,O) 
* Partial RF of phase [40]:
  - RF of loop [40:1]:
    A-E+1


### Specialization of cost equations f27/6 
* CE 29 is refined into CE [52] 
* CE 30 is refined into CE [53] 
* CE 28 is refined into CE [54] 


### Cost equations --> "Loop" of f27/6 
* CEs [54] --> Loop 43 
* CEs [52] --> Loop 44 
* CEs [53] --> Loop 45 

### Ranking functions of CR f27(A,E,H,M,N,O) 
* RF of phase [43]: [A-E+1]

#### Partial ranking functions of CR f27(A,E,H,M,N,O) 
* Partial RF of phase [43]:
  - RF of loop [43:1]:
    A-E+1


### Specialization of cost equations f43/4 
* CE 38 is refined into CE [55] 
* CE 39 is refined into CE [56] 
* CE 37 is refined into CE [57] 


### Cost equations --> "Loop" of f43/4 
* CEs [57] --> Loop 46 
* CEs [55] --> Loop 47 
* CEs [56] --> Loop 48 

### Ranking functions of CR f43(A,E,M,N) 
* RF of phase [46]: [A-E+1]

#### Partial ranking functions of CR f43(A,E,M,N) 
* Partial RF of phase [46]:
  - RF of loop [46:1]:
    A-E+1


### Specialization of cost equations f49/6 
* CE 42 is refined into CE [58] 
* CE 41 is refined into CE [59] 
* CE 40 is refined into CE [60] 


### Cost equations --> "Loop" of f49/6 
* CEs [60] --> Loop 49 
* CEs [58] --> Loop 50 
* CEs [59] --> Loop 51 

### Ranking functions of CR f49(A,D,E,M,N,O) 
* RF of phase [49]: [A-E+1]

#### Partial ranking functions of CR f49(A,D,E,M,N,O) 
* Partial RF of phase [49]:
  - RF of loop [49:1]:
    A-E+1


### Specialization of cost equations f36/11 
* CE 35 is refined into CE [61] 
* CE 31 is refined into CE [62,63] 
* CE 33 is refined into CE [64,65] 
* CE 36 is refined into CE [66] 
* CE 32 is refined into CE [67,68] 
* CE 34 is refined into CE [69] 


### Cost equations --> "Loop" of f36/11 
* CEs [68] --> Loop 52 
* CEs [67] --> Loop 53 
* CEs [69] --> Loop 54 
* CEs [61] --> Loop 55 
* CEs [63,64] --> Loop 56 
* CEs [62] --> Loop 57 
* CEs [66] --> Loop 58 
* CEs [65] --> Loop 59 

### Ranking functions of CR f36(A,B,C,D,E,H,M,N,O,P,Q) 
* RF of phase [52,53,54]: [A-D+1]

#### Partial ranking functions of CR f36(A,B,C,D,E,H,M,N,O,P,Q) 
* Partial RF of phase [52,53,54]:
  - RF of loop [52:1]:
    -D+E depends on loops [53:1] 
  - RF of loop [52:1,53:1,54:1]:
    A-D+1
  - RF of loop [53:1]:
    A-E+1


### Specialization of cost equations f2/16 
* CE 2 is refined into CE [70] 
* CE 10 is refined into CE [71,72,73,74,75,76,77,78] 
* CE 11 is refined into CE [79,80,81,82] 
* CE 12 is refined into CE [83,84,85,86,87,88,89,90] 
* CE 13 is refined into CE [91,92,93,94] 
* CE 14 is refined into CE [95,96] 
* CE 15 is refined into CE [97,98] 
* CE 16 is refined into CE [99,100] 
* CE 3 is refined into CE [101] 
* CE 8 is refined into CE [102,103] 
* CE 9 is refined into CE [104] 
* CE 6 is refined into CE [105,106] 
* CE 7 is refined into CE [107] 
* CE 4 is refined into CE [108,109] 
* CE 5 is refined into CE [110,111] 


### Cost equations --> "Loop" of f2/16 
* CEs [102,104] --> Loop 60 
* CEs [103] --> Loop 61 
* CEs [105,107] --> Loop 62 
* CEs [106] --> Loop 63 
* CEs [109] --> Loop 64 
* CEs [108] --> Loop 65 
* CEs [110] --> Loop 66 
* CEs [111] --> Loop 67 
* CEs [70] --> Loop 68 
* CEs [78,90] --> Loop 69 
* CEs [71,72,73,74,75,76,77,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,100] --> Loop 70 
* CEs [99] --> Loop 71 
* CEs [101] --> Loop 72 

### Ranking functions of CR f2(A,B,C,D,E,F,G,H,M,N,O,P,Q,R,S,T) 
* RF of phase [66]: [A-B,-B+E-1]

#### Partial ranking functions of CR f2(A,B,C,D,E,F,G,H,M,N,O,P,Q,R,S,T) 
* Partial RF of phase [66]:
  - RF of loop [66:1]:
    A-B
    -B+E-1


### Specialization of cost equations f2_loop_cont/10 
* CE 17 is refined into CE [112] 
* CE 18 is refined into CE [113] 


### Cost equations --> "Loop" of f2_loop_cont/10 
* CEs [112] --> Loop 73 
* CEs [113] --> Loop 74 

### Ranking functions of CR f2_loop_cont(A,B,C,D,E,F,G,H,I,J) 

#### Partial ranking functions of CR f2_loop_cont(A,B,C,D,E,F,G,H,I,J) 


### Specialization of cost equations start/9 
* CE 1 is refined into CE [114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133] 


### Cost equations --> "Loop" of start/9 
* CEs [120] --> Loop 75 
* CEs [119,124,125,127,128] --> Loop 76 
* CEs [118] --> Loop 77 
* CEs [117] --> Loop 78 
* CEs [116] --> Loop 79 
* CEs [115,126] --> Loop 80 
* CEs [133] --> Loop 81 
* CEs [121,122,123,129,130,131,132] --> Loop 82 
* CEs [114] --> Loop 83 

### Ranking functions of CR start(A,B,C,D,E,F,G,H,M) 

#### Partial ranking functions of CR start(A,B,C,D,E,F,G,H,M) 


Computing Bounds
=====================================

#### Cost of chains of f8(A,B,C,D,E,F,G,M,N,O,P,Q,R):
* Chain [[34,35],39]: 2*it(34)+0
  Such that:aux(3) =< A-E+1
it(34) =< aux(3)

  with precondition: [M=3,A>=B+1,A>=D,A>=E] 

* Chain [[34,35],38]: 2*it(34)+0
  Such that:aux(4) =< A-E+1
it(34) =< aux(4)

  with precondition: [M=5,B=O,A+1=P,A>=B+1,A>=D,A>=E,R>=Q] 

* Chain [[34,35],37]: 2*it(34)+0
  Such that:aux(5) =< A-E+1
it(34) =< aux(5)

  with precondition: [M=8,A+1=P,A>=B+1,A>=D,A>=E,B>=O+1,R>=Q] 

* Chain [[34,35],36]: 2*it(34)+0
  Such that:aux(6) =< A-E+1
it(34) =< aux(6)

  with precondition: [M=8,A+1=P,O>=B+1,A>=D,A>=E,A>=O] 

* Chain [39]: 0
  with precondition: [M=3,A>=B+1,A>=D] 

* Chain [38]: 0
  with precondition: [M=5,N=C,B=D,Q=F,R=G,B=O,E=P,E>=A+1,A>=B+1] 


#### Cost of chains of f19(A,E,H,M,N,O):
* Chain [[40],42]: 1*it(40)+0
  Such that:it(40) =< A-E+1

  with precondition: [M=3,A>=E] 

* Chain [[40],41]: 1*it(40)+0
  Such that:it(40) =< A-E+1

  with precondition: [M=6,A+1=N,A>=E] 

* Chain [42]: 0
  with precondition: [M=3] 

* Chain [41]: 0
  with precondition: [M=6,O=H,E=N,E>=A+1] 


#### Cost of chains of f27(A,E,H,M,N,O):
* Chain [[43],45]: 1*it(43)+0
  Such that:it(43) =< A-E+1

  with precondition: [M=3,A>=E] 

* Chain [[43],44]: 1*it(43)+0
  Such that:it(43) =< A-E+1

  with precondition: [M=5,A+1=N,A>=E] 

* Chain [45]: 0
  with precondition: [M=3] 

* Chain [44]: 0
  with precondition: [M=5,O=H,E=N,E>=A+1] 


#### Cost of chains of f43(A,E,M,N):
* Chain [[46],48]: 1*it(46)+0
  Such that:it(46) =< A-E+1

  with precondition: [M=3,A>=E] 

* Chain [[46],47]: 1*it(46)+0
  Such that:it(46) =< A-E+1

  with precondition: [M=4,A+1=N,A>=E] 

* Chain [48]: 0
  with precondition: [M=3] 

* Chain [47]: 0
  with precondition: [M=4,E=N,E>=A+1] 


#### Cost of chains of f49(A,D,E,M,N,O):
* Chain [[49],51]: 1*it(49)+0
  Such that:it(49) =< A-E+1

  with precondition: [M=2,D+1=N,A+1=O,A>=D,A>=E] 

* Chain [[49],50]: 1*it(49)+0
  Such that:it(49) =< A-E+1

  with precondition: [M=3,A>=D,A>=E] 

* Chain [51]: 0
  with precondition: [M=2,D+1=N,E=O,E>=A+1,A>=D] 

* Chain [50]: 0
  with precondition: [M=3,A>=D] 


#### Cost of chains of f36(A,B,C,D,E,H,M,N,O,P,Q):
* Chain [[52,53,54],59]: 1*it(52)+1*it(53)+1*it(54)+1*s(3)+0
  Such that:aux(10) =< A-D+1
aux(12) =< A-E+1
aux(8) =< -D+E
aux(14) =< A-D
it(52) =< aux(10)
it(53) =< aux(10)
it(54) =< aux(10)
it(52) =< aux(14)
it(53) =< aux(14)
it(54) =< aux(14)
it(53) =< aux(12)
s(3) =< aux(12)
aux(7) =< it(53)*aux(14)
it(52) =< aux(7)+aux(8)

  with precondition: [M=3,A>=B+1,A>=D+1] 

* Chain [[52,53,54],58]: 1*it(52)+1*it(53)+1*it(54)+1*s(3)+0
  Such that:aux(9) =< A-D
aux(12) =< A-E+1
aux(8) =< -D+E
aux(15) =< A-D+1
it(52) =< aux(15)
it(53) =< aux(15)
it(54) =< aux(15)
it(53) =< aux(12)
s(3) =< aux(12)
aux(7) =< it(53)*aux(9)
it(52) =< aux(7)+aux(8)

  with precondition: [M=3,A>=B+1,A>=D] 

* Chain [[52,53,54],57]: 1*it(52)+1*it(53)+1*it(54)+1*s(3)+0
  Such that:aux(10) =< A-D+1
aux(12) =< A-E+1
aux(8) =< -D+E
aux(16) =< A-D
it(52) =< aux(10)
it(53) =< aux(10)
it(54) =< aux(10)
it(52) =< aux(16)
it(53) =< aux(16)
it(54) =< aux(16)
it(53) =< aux(12)
s(3) =< aux(12)
aux(7) =< it(53)*aux(16)
it(52) =< aux(7)+aux(8)

  with precondition: [M=3,A>=B+1,A>=D+1] 

* Chain [[52,53,54],56]: 1*it(52)+1*it(53)+1*it(54)+1*s(3)+2*s(4)+0
  Such that:aux(10) =< A-D+1
aux(13) =< A-E
aux(8) =< -D+E
aux(18) =< A-D
aux(19) =< A-E+1
aux(13) =< aux(19)
s(4) =< aux(19)
it(52) =< aux(10)
it(53) =< aux(10)
it(54) =< aux(10)
it(52) =< aux(18)
it(53) =< aux(18)
it(54) =< aux(18)
it(53) =< aux(19)
s(3) =< aux(19)
it(53) =< aux(13)
s(3) =< aux(13)
aux(7) =< it(53)*aux(18)
it(52) =< aux(7)+aux(8)

  with precondition: [M=3,A>=B+1,A>=D+1,A>=E] 

* Chain [[52,53,54],55]: 1*it(52)+1*it(53)+1*it(54)+1*s(3)+0
  Such that:aux(9) =< A-D
aux(12) =< A-E+1
aux(8) =< -D+E
aux(13) =< -E+P
aux(20) =< A-D+1
it(52) =< aux(20)
it(53) =< aux(20)
it(54) =< aux(20)
it(53) =< aux(12)
s(3) =< aux(12)
it(53) =< aux(13)
s(3) =< aux(13)
aux(7) =< it(53)*aux(9)
it(52) =< aux(7)+aux(8)

  with precondition: [M=7,B+1=N,A+1=O,A>=B+1,A>=D,P>=E] 

* Chain [59]: 0
  with precondition: [M=3,E>=A+1,A>=B+1,A>=D] 

* Chain [58]: 0
  with precondition: [M=3,A>=B+1] 

* Chain [57]: 0
  with precondition: [M=3,A>=B+1,A>=D] 

* Chain [56]: 2*s(4)+0
  Such that:aux(17) =< A-E+1
s(4) =< aux(17)

  with precondition: [M=3,A>=B+1,A>=D,A>=E] 

* Chain [55]: 0
  with precondition: [M=7,P=E,Q=H,B+1=N,D=O,D>=A+1,A>=B+1] 


#### Cost of chains of f2(A,B,C,D,E,F,G,H,M,N,O,P,Q,R,S,T):
* Chain [[66],72]: 1*it(66)+0
  Such that:it(66) =< A-B

  with precondition: [M=3,E>=A+1,A>=B+1] 

* Chain [[66],71]: 1*it(66)+0
  Such that:it(66) =< A-B

  with precondition: [M=3,E>=A+1,A>=B+2] 

* Chain [[66],68]: 1*it(66)+0
  Such that:it(66) =< A-B

  with precondition: [M=9,O=0,A=N,A=P+1,E=Q,F=R,G=S,H=T,E>=A+1,A>=B+1] 

* Chain [72]: 0
  with precondition: [M=3] 

* Chain [71]: 0
  with precondition: [M=3,A>=B+1] 

* Chain [70]: 54*s(34)+12*s(43)+4*s(69)+4*s(84)+8*s(95)+0
  Such that:aux(31) =< A-B
aux(32) =< A-B+1
aux(33) =< A-E+1
s(95) =< aux(32)
s(95) =< aux(31)
s(34) =< aux(33)
s(69) =< aux(31)
s(84) =< aux(32)

  with precondition: [M=3,A>=B+1,A>=E] 

* Chain [69]: 4*s(178)+8*s(183)+0
  Such that:aux(36) =< A-B
aux(37) =< A-E+1
s(183) =< aux(36)
s(178) =< aux(37)

  with precondition: [M=3,A>=B+2,A>=E] 

* Chain [68]: 0
  with precondition: [M=9,O=C,P=D,Q=E,R=F,S=G,T=H,B=N,B>=A] 

* Chain [67,[66],72]: 1*it(66)+2*s(200)+1
  Such that:it(66) =< A-B
s(199) =< A-E+1
s(200) =< s(199)

  with precondition: [M=3,A>=B+2,A>=E] 

* Chain [67,[66],71]: 1*it(66)+2*s(200)+1
  Such that:it(66) =< A-B
s(199) =< A-E+1
s(200) =< s(199)

  with precondition: [M=3,A>=B+3,A>=E] 

* Chain [67,[66],68]: 1*it(66)+2*s(200)+1
  Such that:it(66) =< A-B
s(199) =< A-E+1
s(200) =< s(199)

  with precondition: [M=9,O=0,A=N,A=P+1,A+1=Q,H=T,A>=B+2,A>=E,S>=R] 

* Chain [67,72]: 2*s(200)+1
  Such that:s(199) =< A-E+1
s(200) =< s(199)

  with precondition: [M=3,A>=B+1,A>=E] 

* Chain [67,71]: 2*s(200)+1
  Such that:s(199) =< A-E+1
s(200) =< s(199)

  with precondition: [M=3,A>=B+2,A>=E] 

* Chain [67,68]: 2*s(200)+1
  Such that:s(199) =< A-E+1
s(200) =< s(199)

  with precondition: [M=9,O=0,B+1=A,B+1=N,B=P,B+2=Q,H=T,B+1>=E,S>=R] 

* Chain [65,[66],72]: 1*it(66)+2*s(202)+1
  Such that:it(66) =< A-B
s(201) =< A-E+1
s(202) =< s(201)

  with precondition: [M=3,A>=B+2,A>=E] 

* Chain [65,[66],71]: 1*it(66)+2*s(202)+1
  Such that:it(66) =< A-B
s(201) =< A-E+1
s(202) =< s(201)

  with precondition: [M=3,A>=B+3,A>=E] 

* Chain [65,[66],68]: 1*it(66)+2*s(202)+1
  Such that:it(66) =< A-B
s(201) =< A-E+1
s(202) =< s(201)

  with precondition: [M=9,O=0,A=N,A=P+1,A+1=Q,H=T,A>=B+2,A>=E,S>=R] 

* Chain [65,72]: 2*s(202)+1
  Such that:s(201) =< A-E+1
s(202) =< s(201)

  with precondition: [M=3,A>=B+1,A>=E] 

* Chain [65,71]: 2*s(202)+1
  Such that:s(201) =< A-E+1
s(202) =< s(201)

  with precondition: [M=3,A>=B+2,A>=E] 

* Chain [65,68]: 2*s(202)+1
  Such that:s(201) =< A-E+1
s(202) =< s(201)

  with precondition: [M=9,O=0,B+1=A,B+1=N,B+2=Q,H=T,B+1>=E,B>=P+1,S>=R] 

* Chain [64,[66],72]: 1*it(66)+2*s(204)+1
  Such that:it(66) =< A-B
s(203) =< A-E+1
s(204) =< s(203)

  with precondition: [M=3,A>=B+2,A>=E] 

* Chain [64,[66],71]: 1*it(66)+2*s(204)+1
  Such that:it(66) =< A-B
s(203) =< A-E+1
s(204) =< s(203)

  with precondition: [M=3,A>=B+3,A>=E] 

* Chain [64,[66],68]: 1*it(66)+2*s(204)+1
  Such that:it(66) =< A-B
s(203) =< A-E+1
s(204) =< s(203)

  with precondition: [M=9,O=0,A=N,A=P+1,A+1=Q,H=T,A>=B+2,A>=E] 

* Chain [64,72]: 2*s(204)+1
  Such that:s(203) =< A-E+1
s(204) =< s(203)

  with precondition: [M=3,A>=B+1,A>=E] 

* Chain [64,71]: 2*s(204)+1
  Such that:s(203) =< A-E+1
s(204) =< s(203)

  with precondition: [M=3,A>=B+2,A>=E] 

* Chain [64,68]: 2*s(204)+1
  Such that:s(203) =< A-E+1
s(204) =< s(203)

  with precondition: [M=9,O=0,A=B+1,A=N,A=P,A+1=Q,H=T,A>=E] 

* Chain [63,[66],72]: 3*it(66)+2*s(206)+1
  Such that:s(205) =< A-E+1
aux(39) =< A-B
it(66) =< aux(39)
s(206) =< s(205)

  with precondition: [M=3,A>=B+2,A>=E] 

* Chain [63,[66],71]: 3*it(66)+2*s(206)+1
  Such that:s(205) =< A-E+1
aux(40) =< A-B
it(66) =< aux(40)
s(206) =< s(205)

  with precondition: [M=3,A>=B+3,A>=E] 

* Chain [63,[66],68]: 3*it(66)+2*s(206)+1
  Such that:s(205) =< A-E+1
aux(41) =< A-B
it(66) =< aux(41)
s(206) =< s(205)

  with precondition: [M=9,O=0,A=N,A=P+1,Q>=A+1,A>=B+2,A>=E] 

* Chain [63,72]: 2*s(206)+2*s(212)+1
  Such that:aux(38) =< A-B
s(205) =< A-E+1
s(212) =< aux(38)
s(206) =< s(205)

  with precondition: [M=3,A>=B+1,A>=E] 

* Chain [63,71]: 2*s(206)+2*s(212)+1
  Such that:aux(38) =< A-B
s(205) =< A-E+1
s(212) =< aux(38)
s(206) =< s(205)

  with precondition: [M=3,A>=B+2,A>=E] 

* Chain [63,68]: 2*s(206)+2*s(212)+1
  Such that:aux(38) =< 1
s(205) =< A-E+1
s(212) =< aux(38)
s(206) =< s(205)

  with precondition: [M=9,A=B+1,A=N,A+1=P,0>=O+1,Q>=A+1,A>=E] 

* Chain [62,[66],72]: 1*it(66)+4*s(218)+2*s(224)+2*s(236)+1
  Such that:it(66) =< A-B
aux(42) =< A-B+1
aux(43) =< A-E+1
s(218) =< aux(43)
s(236) =< aux(42)

  with precondition: [M=3,A>=B+2,A>=E] 

* Chain [62,[66],71]: 1*it(66)+4*s(218)+2*s(224)+2*s(236)+1
  Such that:it(66) =< A-B
aux(42) =< A-B+1
aux(43) =< A-E+1
s(218) =< aux(43)
s(236) =< aux(42)

  with precondition: [M=3,A>=B+3,A>=E] 

* Chain [62,[66],68]: 1*it(66)+4*s(218)+2*s(224)+2*s(236)+1
  Such that:it(66) =< A-B
aux(42) =< A-B+1
aux(43) =< A-E+1
s(218) =< aux(43)
s(236) =< aux(42)

  with precondition: [M=9,O=0,A=N,A=P+1,Q>=A+1,A>=B+2,A>=E,S>=R] 

* Chain [62,72]: 4*s(218)+2*s(224)+2*s(236)+1
  Such that:aux(42) =< A-B+1
aux(43) =< A-E+1
s(218) =< aux(43)
s(236) =< aux(42)

  with precondition: [M=3,A>=B+1,A>=E] 

* Chain [62,71]: 4*s(218)+2*s(224)+2*s(236)+1
  Such that:aux(42) =< A-B+1
aux(43) =< A-E+1
s(218) =< aux(43)
s(236) =< aux(42)

  with precondition: [M=3,A>=B+2,A>=E] 

* Chain [62,68]: 4*s(218)+2*s(224)+2*s(236)+1
  Such that:aux(42) =< 2
aux(43) =< A-E+1
s(218) =< aux(43)
s(236) =< aux(42)

  with precondition: [M=9,A=B+1,A=N,A+1=P,0>=O+1,Q>=A+1,A>=E,S>=R] 

* Chain [61,[66],72]: 3*it(66)+2*s(242)+1
  Such that:s(241) =< A-E+1
aux(45) =< A-B
it(66) =< aux(45)
s(242) =< s(241)

  with precondition: [M=3,A>=B+2,A>=E] 

* Chain [61,[66],71]: 3*it(66)+2*s(242)+1
  Such that:s(241) =< A-E+1
aux(46) =< A-B
it(66) =< aux(46)
s(242) =< s(241)

  with precondition: [M=3,A>=B+3,A>=E] 

* Chain [61,[66],68]: 3*it(66)+2*s(242)+1
  Such that:s(241) =< A-E+1
aux(47) =< A-B
it(66) =< aux(47)
s(242) =< s(241)

  with precondition: [M=9,O=0,A=N,A=P+1,Q>=A+1,A>=B+2,A>=E] 

* Chain [61,72]: 2*s(242)+2*s(248)+1
  Such that:aux(44) =< A-B
s(241) =< A-E+1
s(248) =< aux(44)
s(242) =< s(241)

  with precondition: [M=3,A>=B+1,A>=E] 

* Chain [61,71]: 2*s(242)+2*s(248)+1
  Such that:aux(44) =< A-B
s(241) =< A-E+1
s(248) =< aux(44)
s(242) =< s(241)

  with precondition: [M=3,A>=B+2,A>=E] 

* Chain [61,68]: 2*s(242)+2*s(248)+1
  Such that:aux(44) =< 1
s(241) =< A-E+1
s(248) =< aux(44)
s(242) =< s(241)

  with precondition: [M=9,A=B+1,A=N,A+1=P,O>=1,Q>=A+1,A>=E] 

* Chain [60,[66],72]: 1*it(66)+4*s(254)+2*s(260)+2*s(272)+1
  Such that:it(66) =< A-B
aux(48) =< A-B+1
aux(49) =< A-E+1
s(254) =< aux(49)
s(272) =< aux(48)

  with precondition: [M=3,A>=B+2,A>=E] 

* Chain [60,[66],71]: 1*it(66)+4*s(254)+2*s(260)+2*s(272)+1
  Such that:it(66) =< A-B
aux(48) =< A-B+1
aux(49) =< A-E+1
s(254) =< aux(49)
s(272) =< aux(48)

  with precondition: [M=3,A>=B+3,A>=E] 

* Chain [60,[66],68]: 1*it(66)+4*s(254)+2*s(260)+2*s(272)+1
  Such that:it(66) =< A-B
aux(48) =< A-B+1
aux(49) =< A-E+1
s(254) =< aux(49)
s(272) =< aux(48)

  with precondition: [M=9,O=0,A=N,A=P+1,Q>=A+1,A>=B+2,A>=E,S>=R] 

* Chain [60,72]: 4*s(254)+2*s(260)+2*s(272)+1
  Such that:aux(48) =< A-B+1
aux(49) =< A-E+1
s(254) =< aux(49)
s(272) =< aux(48)

  with precondition: [M=3,A>=B+1,A>=E] 

* Chain [60,71]: 4*s(254)+2*s(260)+2*s(272)+1
  Such that:aux(48) =< A-B+1
aux(49) =< A-E+1
s(254) =< aux(49)
s(272) =< aux(48)

  with precondition: [M=3,A>=B+2,A>=E] 

* Chain [60,68]: 4*s(254)+2*s(260)+2*s(272)+1
  Such that:aux(48) =< 2
aux(49) =< A-E+1
s(254) =< aux(49)
s(272) =< aux(48)

  with precondition: [M=9,A=B+1,A=N,A+1=P,O>=1,Q>=A+1,A>=E,S>=R] 


#### Cost of chains of f2_loop_cont(A,B,C,D,E,F,G,H,I,J):
* Chain [74]: 0
  with precondition: [A=3] 

* Chain [73]: 0
  with precondition: [A=9] 


#### Cost of chains of start(A,B,C,D,E,F,G,H,M):
* Chain [83]: 0
  with precondition: [] 

* Chain [82]: 18*s(422)+4*s(429)+4*s(434)+4*s(435)+1
  Such that:aux(66) =< 1
aux(67) =< 2
aux(68) =< A-E+1
s(429) =< aux(66)
s(422) =< aux(68)
s(434) =< aux(67)

  with precondition: [A=B+1,A>=E] 

* Chain [81]: 0
  with precondition: [B>=A] 

* Chain [80]: 2*s(445)+0
  Such that:aux(69) =< A-B
s(445) =< aux(69)

  with precondition: [E>=A+1,A>=B+1] 

* Chain [79]: 1*s(447)+0
  Such that:s(447) =< A-B

  with precondition: [E>=A+1,A>=B+2] 

* Chain [78]: 0
  with precondition: [A>=B+1] 

* Chain [77]: 8*s(451)+72*s(452)+8*s(453)+8*s(454)+16*s(455)+1
  Such that:s(448) =< A-B
s(449) =< A-B+1
s(450) =< A-E+1
s(451) =< s(448)
s(452) =< s(450)
s(453) =< s(449)
s(453) =< s(448)
s(454) =< s(449)

  with precondition: [A>=B+1,A>=E] 

* Chain [76]: 34*s(459)+58*s(460)+12*s(461)+12*s(462)+1
  Such that:aux(70) =< A-B
aux(71) =< A-B+1
aux(72) =< A-E+1
s(459) =< aux(70)
s(460) =< aux(72)
s(461) =< aux(71)

  with precondition: [A>=B+2,A>=E] 

* Chain [75]: 11*s(484)+18*s(485)+4*s(486)+4*s(487)+1
  Such that:s(481) =< A-B
s(482) =< A-B+1
s(483) =< A-E+1
s(484) =< s(481)
s(485) =< s(483)
s(486) =< s(482)

  with precondition: [A>=B+3,A>=E] 


Closed-form bounds of start(A,B,C,D,E,F,G,H,M): 
-------------------------------------
* Chain [83] with precondition: [] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [82] with precondition: [A=B+1,A>=E] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [81] with precondition: [B>=A] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [80] with precondition: [E>=A+1,A>=B+1] 
    - Upper bound: 2*A-2*B 
    - Complexity: n 
* Chain [79] with precondition: [E>=A+1,A>=B+2] 
    - Upper bound: A-B 
    - Complexity: n 
* Chain [78] with precondition: [A>=B+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [77] with precondition: [A>=B+1,A>=E] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [76] with precondition: [A>=B+2,A>=E] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [75] with precondition: [A>=B+3,A>=E] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start(A,B,C,D,E,F,G,H,M): inf 
Asymptotic class: infinity 
* Total analysis performed in 1088 ms.

