WORST_CASE(Omega(n^1),O(n^1))

# LoAT Proof:
WORST_CASE(Omega(n^1),?)

WORST_CASE(Omega(n^1),?)
Initial ITS

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_4 -> 7
eval_start_5 -> 8
eval_start_bb1_in -> 9
eval_start_bb2_in -> 10
eval_start_bb3_in -> 11
eval_start_stop -> 12

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: -2+i1 == 0 /\ i1'=3, i3'=1+i3
   2: -3+i1 == 0 /\ i1'=4, i3'=1+i3
   3: -4+i1 == 0 /\ i1'=5, i3'=1+i3
   4: -5+i1 == 0 /\ i1'=6, i3'=1+i3
   5: -6+i1 == 0 /\ i1'=7, i3'=1+i3
   6: -7+i1 == 0 /\ i1'=8, i3'=1+i3
   7: -8+i1 == 0 /\ i1'=9, i3'=1+i3, i4'=i6, i5'=1
   8: (-9+i1 == 0 /\ i5 > 0) /\ i1'=10, i3'=1+i3
   9: (-9+i1 == 0 /\ i5 <= 0) /\ i1'=11, i3'=1+i3
  10: (i4 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i4'=-1+i4, i5'=1
  11: (i4 <= 0 /\ i4 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i5'=1
  12: (i4 <= 0 /\ i4 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i4'=-1+i4, i5'=0
  13: (i4 <= 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i5'=0
  14: -11+i1 == 0 /\ i1'=12, i3'=1+i3

Dependency graph:
0 -> 1
1 -> 2
2 -> 3
3 -> 4
4 -> 5
5 -> 6
6 -> 7
7 -> 8, 7 -> 9
8 -> 10, 8 -> 11, 8 -> 12, 8 -> 13
9 -> 14
10 -> 8, 10 -> 9
11 -> 8, 11 -> 9
12 -> 8, 12 -> 9
13 -> 8, 13 -> 9

Chained Linear Paths

	Applied Chaining

	First rule:
	-1+i1 == 0 /\ i1'=2, i3'=1+i3
	Second rule:
	-2+i1 == 0 /\ i1'=3, i3'=1+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 0, 1
	
	Applied Chaining

	First rule:
	-3+i1 == 0 /\ i1'=4, i3'=1+i3
	Second rule:
	-4+i1 == 0 /\ i1'=5, i3'=1+i3
	New rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 2, 3
	
	Applied Chaining

	First rule:
	-5+i1 == 0 /\ i1'=6, i3'=1+i3
	Second rule:
	-6+i1 == 0 /\ i1'=7, i3'=1+i3
	New rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=7, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 4, 5
	
	Applied Chaining

	First rule:
	-7+i1 == 0 /\ i1'=8, i3'=1+i3
	Second rule:
	-8+i1 == 0 /\ i1'=9, i3'=1+i3, i4'=i6, i5'=1
	New rule:
	(0 == 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3, i4'=i6, i5'=1
	
	Applied Deletion

	Removed the following rules: 6, 7
	
	Applied Chaining

	First rule:
	(-9+i1 == 0 /\ i5 <= 0) /\ i1'=11, i3'=1+i3
	Second rule:
	-11+i1 == 0 /\ i1'=12, i3'=1+i3
	New rule:
	(0 == 0 /\ -9+i1 == 0 /\ i5 <= 0) /\ i1'=12, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 9, 14
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	Second rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	
	Applied Deletion

	Removed the following rules: 15, 16
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=7, i3'=2+i3
	Second rule:
	(0 == 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3, i4'=i6, i5'=1
	New rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=9, i3'=4+i3, i4'=i6, i5'=1
	
	Applied Deletion

	Removed the following rules: 17, 18
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	Second rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=9, i3'=4+i3, i4'=i6, i5'=1
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=9, i3'=8+i3, i4'=i6, i5'=1
	
	Applied Deletion

	Removed the following rules: 20, 21

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_4 -> 7
eval_start_5 -> 8
eval_start_bb1_in -> 9
eval_start_bb2_in -> 10
eval_start_bb3_in -> 11
eval_start_stop -> 12

Rules:
   8: (-9+i1 == 0 /\ i5 > 0) /\ i1'=10, i3'=1+i3
  10: (i4 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i4'=-1+i4, i5'=1
  11: (i4 <= 0 /\ i4 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i5'=1
  12: (i4 <= 0 /\ i4 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i4'=-1+i4, i5'=0
  13: (i4 <= 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i5'=0
  19: (0 == 0 /\ -9+i1 == 0 /\ i5 <= 0) /\ i1'=12, i3'=2+i3
  22: (0 == 0 /\ -1+i1 == 0) /\ i1'=9, i3'=8+i3, i4'=i6, i5'=1

Dependency graph:
8 -> 10, 8 -> 11, 8 -> 12, 8 -> 13
10 -> 8, 10 -> 19
11 -> 8, 11 -> 19
12 -> 8, 12 -> 19
13 -> 8, 13 -> 19
22 -> 8, 22 -> 19

Preprocessed Transitions

	Simplified Guard

	Original rule:
	(0 == 0 /\ -9+i1 == 0 /\ i5 <= 0) /\ i1'=12, i3'=2+i3
	New rule:
	(-9+i1 == 0 /\ i5 <= 0) /\ i1'=12, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=9, i3'=8+i3, i4'=i6, i5'=1
	New rule:
	-1+i1 == 0 /\ i1'=9, i3'=8+i3, i4'=i6, i5'=1

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_4 -> 7
eval_start_5 -> 8
eval_start_bb1_in -> 9
eval_start_bb2_in -> 10
eval_start_bb3_in -> 11
eval_start_stop -> 12

Rules:
   8: (-9+i1 == 0 /\ i5 > 0) /\ i1'=10, i3'=1+i3
  10: (i4 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i4'=-1+i4, i5'=1
  11: (i4 <= 0 /\ i4 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i5'=1
  12: (i4 <= 0 /\ i4 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i4'=-1+i4, i5'=0
  13: (i4 <= 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i5'=0
  23: (-9+i1 == 0 /\ i5 <= 0) /\ i1'=12, i3'=2+i3
  24: -1+i1 == 0 /\ i1'=9, i3'=8+i3, i4'=i6, i5'=1

Dependency graph:
8 -> 10, 8 -> 11, 8 -> 12, 8 -> 13
10 -> 8, 10 -> 23
11 -> 8, 11 -> 23
12 -> 8, 12 -> 23
13 -> 8, 13 -> 23
24 -> 8, 24 -> 23

Refined Dependency Graph

	Removed the following edges: 8 -> 11, 8 -> 12, 10 -> 23, 11 -> 8, 11 -> 23, 12 -> 8, 12 -> 23, 13 -> 8, 24 -> 23

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_4 -> 7
eval_start_5 -> 8
eval_start_bb1_in -> 9
eval_start_bb2_in -> 10
eval_start_bb3_in -> 11
eval_start_stop -> 12

Rules:
   8: (-9+i1 == 0 /\ i5 > 0) /\ i1'=10, i3'=1+i3
  10: (i4 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i4'=-1+i4, i5'=1
  11: (i4 <= 0 /\ i4 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i5'=1
  12: (i4 <= 0 /\ i4 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i4'=-1+i4, i5'=0
  13: (i4 <= 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i5'=0
  23: (-9+i1 == 0 /\ i5 <= 0) /\ i1'=12, i3'=2+i3
  24: -1+i1 == 0 /\ i1'=9, i3'=8+i3, i4'=i6, i5'=1

Dependency graph:
8 -> 10, 8 -> 13
10 -> 8
13 -> 23
24 -> 8

Step with 24

	Trace

	24[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 8

	Trace

	24[(-1+i1 == 0)]
	8[(-9+i1 == 0 /\ i5 > 0)]
	
	Blocked

	{}
	{}
	{}
	
Step with 13

	Trace

	24[(-1+i1 == 0)]
	8[(-9+i1 == 0 /\ i5 > 0)]
	13[(i4 <= 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{}
	{}
	{}
	
Step with 23

	Trace

	24[(-1+i1 == 0)]
	8[(-9+i1 == 0 /\ i5 > 0)]
	13[(i4 <= 0 /\ -10+i1 == 0)]
	23[(-9+i1 == 0 /\ i5 <= 0)]
	
	Blocked

	{}
	{}
	{}
	{}
	{}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	8[(-9+i1 == 0 /\ i5 > 0)]
	13[(i4 <= 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{}
	{}
	{23[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	8[(-9+i1 == 0 /\ i5 > 0)]
	
	Blocked

	{}
	{}
	{13[T]}
	
Step with 10

	Trace

	24[(-1+i1 == 0)]
	8[(-9+i1 == 0 /\ i5 > 0)]
	10[(i4 > 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{}
	{13[T]}
	{}
	
Poly(n^1)

Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -9+i1 == 0 /\ i4 > 0 /\ i5 > 0) /\ i1'=9, i3'=2+i3, i4'=-1+i4, i5'=1
		New rule:
		(-9+i1 == 0 /\ i4 > 0 /\ i5 > 0) /\ i1'=9, i3'=2+i3, i4'=-1+i4, i5'=1

	Loop Acceleration

	Original rule:
	(-9+i1 == 0 /\ i4 > 0 /\ i5 > 0) /\ i1'=9, i3'=2+i3, i4'=-1+i4, i5'=1
	New rule:
	(-9+i1 >= 0 /\ 1-it26+i4 > 0 /\ i4 > 0 /\ 9-i1 >= 0 /\ i5 > 0 /\ -1+it26 >= 0) /\ i1'=i1, i3'=2*it26+i3, i4'=-it26+i4, i5'=1

		-9+i1 >= 0 [0]: unchanged
		
		i4 > 0 [0]: montonic decrease yields (1-it26+i4 > 0 /\ i4 > 0)
		
		9-i1 >= 0 [0]: unchanged
		
		i5 > 0 [0]: trivial
		
		Replacement map: {-9+i1 >= 0 -> -9+i1 >= 0, i4 > 0 -> (1-it26+i4 > 0 /\ i4 > 0), 9-i1 >= 0 -> 9-i1 >= 0, i5 > 0 -> i5 > 0}

	Removed Trivial Updates

	Original rule:
	(-9+i1 >= 0 /\ 1-it26+i4 > 0 /\ i4 > 0 /\ 9-i1 >= 0 /\ i5 > 0 /\ -1+it26 >= 0) /\ i1'=i1, i3'=2*it26+i3, i4'=-it26+i4, i5'=1
	New rule:
	(-9+i1 >= 0 /\ 1-it26+i4 > 0 /\ i4 > 0 /\ 9-i1 >= 0 /\ i5 > 0 /\ -1+it26 >= 0) /\ i3'=2*it26+i3, i4'=-it26+i4, i5'=1
	
	Instantiation

	Original rule:
	(-9+i1 >= 0 /\ 1-it26+i4 > 0 /\ i4 > 0 /\ 9-i1 >= 0 /\ i5 > 0 /\ -1+it26 >= 0) /\ i3'=2*it26+i3, i4'=-it26+i4, i5'=1
	New rule:
	(1 > 0 /\ -9+i1 >= 0 /\ -1+i4 >= 0 /\ i4 > 0 /\ 9-i1 >= 0 /\ i5 > 0) /\ i3'=i3+2*i4, i4'=0, i5'=1

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_4 -> 7
eval_start_5 -> 8
eval_start_bb1_in -> 9
eval_start_bb2_in -> 10
eval_start_bb3_in -> 11
eval_start_stop -> 12

Rules:
   8: (-9+i1 == 0 /\ i5 > 0) /\ i1'=10, i3'=1+i3
  10: (i4 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i4'=-1+i4, i5'=1
  11: (i4 <= 0 /\ i4 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i5'=1
  12: (i4 <= 0 /\ i4 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i4'=-1+i4, i5'=0
  13: (i4 <= 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i5'=0
  23: (-9+i1 == 0 /\ i5 <= 0) /\ i1'=12, i3'=2+i3
  24: -1+i1 == 0 /\ i1'=9, i3'=8+i3, i4'=i6, i5'=1
  25: (1 > 0 /\ -9+i1 >= 0 /\ -1+i4 >= 0 /\ i4 > 0 /\ 9-i1 >= 0 /\ i5 > 0) /\ i3'=i3+2*i4, i4'=0, i5'=1

Dependency graph:
8 -> 10, 8 -> 13
10 -> 8, 10 -> 25
13 -> 23
24 -> 8, 24 -> 25
25 -> 8

	Trace

	24[(-1+i1 == 0)]
	25[(1 > 0 /\ -9+i1 >= 0 /\ -1+i4 >= 0 /\ i4 > 0 /\ 9-i1 >= 0 /\ i5 > 0)]
	
	Blocked

	{}
	{}
	{25[T]}
	
Step with 8

	Trace

	24[(-1+i1 == 0)]
	25[(1 > 0 /\ -9+i1 >= 0 /\ -1+i4 >= 0 /\ i4 > 0 /\ 9-i1 >= 0 /\ i5 > 0)]
	8[(-9+i1 == 0 /\ i5 > 0)]
	
	Blocked

	{}
	{}
	{25[T]}
	{}
	
Step with 13

	Trace

	24[(-1+i1 == 0)]
	25[(1 > 0 /\ -9+i1 >= 0 /\ -1+i4 >= 0 /\ i4 > 0 /\ 9-i1 >= 0 /\ i5 > 0)]
	8[(-9+i1 == 0 /\ i5 > 0)]
	13[(i4 <= 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{}
	{25[T]}
	{10[T]}
	{}
	
Step with 23

	Trace

	24[(-1+i1 == 0)]
	25[(1 > 0 /\ -9+i1 >= 0 /\ -1+i4 >= 0 /\ i4 > 0 /\ 9-i1 >= 0 /\ i5 > 0)]
	8[(-9+i1 == 0 /\ i5 > 0)]
	13[(i4 <= 0 /\ -10+i1 == 0)]
	23[(-9+i1 == 0 /\ i5 <= 0)]
	
	Blocked

	{}
	{}
	{25[T]}
	{10[T]}
	{}
	{}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	25[(1 > 0 /\ -9+i1 >= 0 /\ -1+i4 >= 0 /\ i4 > 0 /\ 9-i1 >= 0 /\ i5 > 0)]
	8[(-9+i1 == 0 /\ i5 > 0)]
	13[(i4 <= 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{}
	{25[T]}
	{10[T]}
	{23[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	25[(1 > 0 /\ -9+i1 >= 0 /\ -1+i4 >= 0 /\ i4 > 0 /\ 9-i1 >= 0 /\ i5 > 0)]
	8[(-9+i1 == 0 /\ i5 > 0)]
	
	Blocked

	{}
	{}
	{25[T]}
	{10[T], 13[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	25[(1 > 0 /\ -9+i1 >= 0 /\ -1+i4 >= 0 /\ i4 > 0 /\ 9-i1 >= 0 /\ i5 > 0)]
	
	Blocked

	{}
	{}
	{8[T], 25[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	
	Blocked

	{}
	{25[T]}
	
Step with 8

	Trace

	24[(-1+i1 == 0)]
	8[(-9+i1 == 0 /\ i5 > 0)]
	
	Blocked

	{}
	{25[T]}
	{}
	
Step with 13

	Trace

	24[(-1+i1 == 0)]
	8[(-9+i1 == 0 /\ i5 > 0)]
	13[(i4 <= 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{25[T]}
	{}
	{}
	
Step with 23

	Trace

	24[(-1+i1 == 0)]
	8[(-9+i1 == 0 /\ i5 > 0)]
	13[(i4 <= 0 /\ -10+i1 == 0)]
	23[(-9+i1 == 0 /\ i5 <= 0)]
	
	Blocked

	{}
	{25[T]}
	{}
	{}
	{}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	8[(-9+i1 == 0 /\ i5 > 0)]
	13[(i4 <= 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{25[T]}
	{}
	{23[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	8[(-9+i1 == 0 /\ i5 > 0)]
	
	Blocked

	{}
	{25[T]}
	{13[T]}
	
Step with 10

	Trace

	24[(-1+i1 == 0)]
	8[(-9+i1 == 0 /\ i5 > 0)]
	10[(i4 > 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{25[T]}
	{13[T]}
	{}
	
Covered

	Trace

	24[(-1+i1 == 0)]
	8[(-9+i1 == 0 /\ i5 > 0)]
	
	Blocked

	{}
	{25[T]}
	{10[T], 13[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	
	Blocked

	{}
	{8[T], 25[T]}
	
Backtrack

	Trace

	Blocked

	{24[T]}
	
Accept

Poly(n^1)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  
  Locations:  l0, l1, l10, l11, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂) → l2(X₀, X₁, X₂)
  t₃: l1(X₀, X₁, X₂) → l4(X₀, X₁, X₂)
  t₁₄: l10(X₀, X₁, X₂) → l11(X₀, X₁, X₂)
  t₁: l2(X₀, X₁, X₂) → l3(X₀, X₁, X₂)
  t₂: l3(X₀, X₁, X₂) → l1(X₀, X₁, X₂)
  t₄: l4(X₀, X₁, X₂) → l5(X₀, X₁, X₂)
  t₅: l5(X₀, X₁, X₂) → l6(X₀, X₁, X₂)
  t₆: l6(X₀, X₁, X₂) → l7(X₀, X₁, X₂)
  t₇: l7(X₀, X₁, X₂) → l8(X₂, 1, X₂)
  t₉: l8(X₀, X₁, X₂) → l10(X₀, X₁, X₂) :|: X₁ ≤ 0
  t₈: l8(X₀, X₁, X₂) → l9(X₀, X₁, X₂) :|: 1 ≤ X₁
  t₁₀: l9(X₀, X₁, X₂) → l8(X₀-1, 1, X₂) :|: 1 ≤ X₀
  t₁₁: l9(X₀, X₁, X₂) → l8(X₀, 1, X₂) :|: 1 ≤ X₀ ∧ X₀ ≤ 0
  t₁₂: l9(X₀, X₁, X₂) → l8(X₀-1, 0, X₂) :|: 1 ≤ X₀ ∧ X₀ ≤ 0
  t₁₃: l9(X₀, X₁, X₂) → l8(X₀, 0, X₂) :|: X₀ ≤ 0


Preprocessing
  Cut unsatisfiable transition [t₁₁: l9→l8; t₁₂: l9→l8]


  Found invariant X₀ ≤ X₂ ∧ X₁ ≤ 0 ∧ 0 ≤ X₁ for location l11


  Found invariant X₀ ≤ X₂ ∧ X₁ ≤ 1 ∧ 0 ≤ X₁ for location l8


  Found invariant X₀ ≤ X₂ ∧ X₁ ≤ 0 ∧ 0 ≤ X₁ for location l10


  Found invariant X₀ ≤ X₂ ∧ X₁ ≤ 1 ∧ 1 ≤ X₁ for location l9


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  
  Locations:  l0, l1, l10, l11, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂) → l2(X₀, X₁, X₂)
  t₃: l1(X₀, X₁, X₂) → l4(X₀, X₁, X₂)
  t₁₄: l10(X₀, X₁, X₂) → l11(X₀, X₁, X₂) :|: X₀ ≤ X₂ ∧ 0 ≤ X₁ ∧ X₁ ≤ 0
  t₁: l2(X₀, X₁, X₂) → l3(X₀, X₁, X₂)
  t₂: l3(X₀, X₁, X₂) → l1(X₀, X₁, X₂)
  t₄: l4(X₀, X₁, X₂) → l5(X₀, X₁, X₂)
  t₅: l5(X₀, X₁, X₂) → l6(X₀, X₁, X₂)
  t₆: l6(X₀, X₁, X₂) → l7(X₀, X₁, X₂)
  t₇: l7(X₀, X₁, X₂) → l8(X₂, 1, X₂)
  t₉: l8(X₀, X₁, X₂) → l10(X₀, X₁, X₂) :|: X₁ ≤ 0 ∧ X₁ ≤ 1 ∧ X₀ ≤ X₂ ∧ 0 ≤ X₁
  t₈: l8(X₀, X₁, X₂) → l9(X₀, X₁, X₂) :|: 1 ≤ X₁ ∧ X₁ ≤ 1 ∧ X₀ ≤ X₂ ∧ 0 ≤ X₁
  t₁₀: l9(X₀, X₁, X₂) → l8(X₀-1, 1, X₂) :|: 1 ≤ X₀ ∧ X₁ ≤ 1 ∧ 1 ≤ X₁ ∧ X₀ ≤ X₂
  t₁₃: l9(X₀, X₁, X₂) → l8(X₀, 0, X₂) :|: X₀ ≤ 0 ∧ X₁ ≤ 1 ∧ 1 ≤ X₁ ∧ X₀ ≤ X₂


MPRF for transition t₁₀: l9(X₀, X₁, X₂) → l8(X₀-1, 1, X₂) :|: 1 ≤ X₀ ∧ X₁ ≤ 1 ∧ 1 ≤ X₁ ∧ X₀ ≤ X₂ of depth 1:
  new bound:
    X₂ {O(n)}

  MPRF:
    • l8: [X₀]
    • l9: [X₀]




MPRF for transition t₁₃: l9(X₀, X₁, X₂) → l8(X₀, 0, X₂) :|: X₀ ≤ 0 ∧ X₁ ≤ 1 ∧ 1 ≤ X₁ ∧ X₀ ≤ X₂ of depth 1:
  new bound:
    1 {O(1)}

  MPRF:
    • l8: [X₁]
    • l9: [1]




TWN: t₁₀: l9→l8


  cycle: [t₁₀: l9→l8; t₈: l8→l9]
  original loop: (1 ≤ X₁ ∧ X₁ ≤ 1 ∧ X₀ ≤ X₂ ∧ 0 ≤ X₁ ∧ 1 ≤ X₀ ∧ X₁ ≤ 1 ∧ 1 ≤ X₁ ∧ X₀ ≤ X₂,(X₀,X₁,X₂) -> (X₀-1,1,X₂))
  transformed loop: (1 ≤ X₁ ∧ X₁ ≤ 1 ∧ X₀ ≤ X₂ ∧ 0 ≤ X₁ ∧ 1 ≤ X₀ ∧ X₁ ≤ 1 ∧ 1 ≤ X₁ ∧ X₀ ≤ X₂,(X₀,X₁,X₂) -> (X₀-1,1,X₂))
  loop: (1 ≤ X₁ ∧ X₁ ≤ 1 ∧ X₀ ≤ X₂ ∧ 0 ≤ X₁ ∧ 1 ≤ X₀ ∧ X₁ ≤ 1 ∧ 1 ≤ X₁ ∧ X₀ ≤ X₂,(X₀,X₁,X₂) -> (X₀-1,1,X₂))
  order: [X₂; X₁; X₀]
closed-form:  X₂: X₂
  X₁: [[n == 0]]⋅X₁ + [[n != 0]]
  X₀: X₀ + [[n != 0]]⋅-1⋅n^1

  Termination: true
  Formula: 
    0 ≤ 1 ∧ X₀ ≤ 1 ∧ X₁ ≤ 1 ∧ 1 ≤ 0 ∧ 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₁
     ∨ 0 ≤ 1 ∧ X₁ ≤ 1 ∧ 1 ≤ 0 ∧ 1 ≤ X₁ ∧ 2 ≤ X₀ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₁
     ∨ X₁ ≤ 1 ∧ 1 ≤ 0 ∧ 1 ≤ X₁ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₁



Stabilization-Threshold for: 1 ≤ X₀
  alphas_abs: X₀
  M: 0
  N: 1
  Bound: 2⋅X₀+2 {O(n)}

TWN - Lifting for [8: l8->l9; 10: l9->l8] of 2⋅X₀+4 {O(n)}
relevant size-bounds w.r.t. t₇: l7→l8:
X₀: X₂ {O(n)}
Runtime-bound of t₇: 1 {O(1)}
Results in: 2⋅X₂+4 {O(n)}
All Bounds
Timebounds
  Overall timebound:3⋅X₂+15 {O(n)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: 1 {O(1)}
    t₈: 2⋅X₂+4 {O(n)}
    t₉: 1 {O(1)}
    t₁₀: X₂ {O(n)}
    t₁₃: 1 {O(1)}
    t₁₄: 1 {O(1)}


Costbounds
  Overall costbound: 3⋅X₂+15 {O(n)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: 1 {O(1)}
    t₈: 2⋅X₂+4 {O(n)}
    t₉: 1 {O(1)}
    t₁₀: X₂ {O(n)}
    t₁₃: 1 {O(1)}
    t₁₄: 1 {O(1)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₀, X₂: X₂ {O(n)}
    t₁, X₀: X₀ {O(n)}
    t₁, X₁: X₁ {O(n)}
    t₁, X₂: X₂ {O(n)}
    t₂, X₀: X₀ {O(n)}
    t₂, X₁: X₁ {O(n)}
    t₂, X₂: X₂ {O(n)}
    t₃, X₀: X₀ {O(n)}
    t₃, X₁: X₁ {O(n)}
    t₃, X₂: X₂ {O(n)}
    t₄, X₀: X₀ {O(n)}
    t₄, X₁: X₁ {O(n)}
    t₄, X₂: X₂ {O(n)}
    t₅, X₀: X₀ {O(n)}
    t₅, X₁: X₁ {O(n)}
    t₅, X₂: X₂ {O(n)}
    t₆, X₀: X₀ {O(n)}
    t₆, X₁: X₁ {O(n)}
    t₆, X₂: X₂ {O(n)}
    t₇, X₀: X₂ {O(n)}
    t₇, X₁: 1 {O(1)}
    t₇, X₂: X₂ {O(n)}
    t₈, X₀: X₂ {O(n)}
    t₈, X₁: 1 {O(1)}
    t₈, X₂: X₂ {O(n)}
    t₉, X₀: X₂ {O(n)}
    t₉, X₁: 0 {O(1)}
    t₉, X₂: X₂ {O(n)}
    t₁₀, X₀: X₂ {O(n)}
    t₁₀, X₁: 1 {O(1)}
    t₁₀, X₂: X₂ {O(n)}
    t₁₃, X₀: X₂ {O(n)}
    t₁₃, X₁: 0 {O(1)}
    t₁₃, X₂: X₂ {O(n)}
    t₁₄, X₀: X₂ {O(n)}
    t₁₄, X₁: 0 {O(1)}
    t₁₄, X₂: X₂ {O(n)}

