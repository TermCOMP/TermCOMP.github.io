WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [lbl121/17]
1. recursive  : [lbl121_loop_cont/18,lbl82/17]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [stop/9]
4. non_recursive  : [lbl82_loop_cont/10]
5. non_recursive  : [start/9]
6. non_recursive  : [start0/9]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into lbl121/17
1. SCC is partially evaluated into lbl82/17
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into lbl82_loop_cont/10
5. SCC is partially evaluated into start/9
6. SCC is partially evaluated into start0/9

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations lbl121/17 
* CE 10 is refined into CE [19] 
* CE 8 is refined into CE [20] 
* CE 7 is refined into CE [21] 
* CE 9 is refined into CE [22] 


### Cost equations --> "Loop" of lbl121/17 
* CEs [22] --> Loop 16 
* CEs [19] --> Loop 17 
* CEs [20] --> Loop 18 
* CEs [21] --> Loop 19 

### Ranking functions of CR lbl121(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 
* RF of phase [16]: [-A+E+1,-A+G+1,-D+E+1,-D+G+1,E,G]

#### Partial ranking functions of CR lbl121(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 
* Partial RF of phase [16]:
  - RF of loop [16:1]:
    -A+E+1
    -A+G+1
    -D+E+1
    -D+G+1
    E
    G


### Specialization of cost equations lbl82/17 
* CE 13 is refined into CE [23,24] 
* CE 18 is refined into CE [25] 
* CE 15 is refined into CE [26] 
* CE 16 is refined into CE [27] 
* CE 14 is refined into CE [28,29] 
* CE 17 is refined into CE [30] 


### Cost equations --> "Loop" of lbl82/17 
* CEs [29] --> Loop 20 
* CEs [30] --> Loop 21 
* CEs [28] --> Loop 22 
* CEs [23,24] --> Loop 23 
* CEs [25] --> Loop 24 
* CEs [26] --> Loop 25 
* CEs [27] --> Loop 26 

### Ranking functions of CR lbl82(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 

#### Partial ranking functions of CR lbl82(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q) 
* Partial RF of phase [20,21,22]:
  - RF of loop [20:1]:
    -A/2+E/2-1/2
    -D/2+E/2-1/2
    E/2-3/2
  - RF of loop [21:1]:
    -A+G+1 depends on loops [20:1,22:1] 
    -D+G+1 depends on loops [20:1,22:1] 
    -E/2+G+1/2 depends on loops [20:1,22:1] 
    G depends on loops [20:1,22:1] 
  - RF of loop [22:1]:
    -A+E
    -D+E
    E-1


### Specialization of cost equations lbl82_loop_cont/10 
* CE 12 is refined into CE [31] 
* CE 11 is refined into CE [32] 


### Cost equations --> "Loop" of lbl82_loop_cont/10 
* CEs [31] --> Loop 27 
* CEs [32] --> Loop 28 

### Ranking functions of CR lbl82_loop_cont(A,B,C,D,E,F,G,H,I,J) 

#### Partial ranking functions of CR lbl82_loop_cont(A,B,C,D,E,F,G,H,I,J) 


### Specialization of cost equations start/9 
* CE 2 is refined into CE [33,34] 
* CE 3 is refined into CE [35,36,37,38,39,40,41,42,43,44,45,46,47,48] 
* CE 4 is refined into CE [49,50] 
* CE 6 is refined into CE [51,52,53,54,55,56,57] 
* CE 5 is refined into CE [58] 


### Cost equations --> "Loop" of start/9 
* CEs [44,47] --> Loop 29 
* CEs [37,40,43,45,48] --> Loop 30 
* CEs [36,38,41,42,46,53,56] --> Loop 31 
* CEs [34,39,50,52,54,57] --> Loop 32 
* CEs [33,55] --> Loop 33 
* CEs [58] --> Loop 34 
* CEs [35] --> Loop 35 
* CEs [49,51] --> Loop 36 

### Ranking functions of CR start(A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR start(A,B,C,D,E,F,G,H,I) 


### Specialization of cost equations start0/9 
* CE 1 is refined into CE [59,60,61,62,63,64,65,66] 


### Cost equations --> "Loop" of start0/9 
* CEs [66] --> Loop 37 
* CEs [65] --> Loop 38 
* CEs [64] --> Loop 39 
* CEs [63] --> Loop 40 
* CEs [62] --> Loop 41 
* CEs [61] --> Loop 42 
* CEs [60] --> Loop 43 
* CEs [59] --> Loop 44 

### Ranking functions of CR start0(A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR start0(A,B,C,D,E,F,G,H,I) 


Computing Bounds
=====================================

#### Cost of chains of lbl121(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q):
* Chain [[16],19]: 1*it(16)+0
  Such that:it(16) =< E-N

  with precondition: [I=2,A=D,E=G,A=J,A=K,C=L,A=M,A=N+1,F=O,A=P+1,H=Q,B>=A,E>=A,E+1>=B,2*A>=E+1] 

* Chain [[16],18]: 1*it(16)+0
  Such that:it(16) =< E-N

  with precondition: [I=3,A=D,E=G,A=J,C=L,A=M,K=N+1,F=O,K=P+2,H=Q,B>=A,K>=A+1,E+1>=B,2*A>=E+1,E>=K] 

* Chain [[16],17]: 1*it(16)+0
  Such that:it(16) =< -A+E+1

  with precondition: [I=4,A=D,E=G,B>=A,E>=A,E+1>=B,2*A>=E+1] 

* Chain [19]: 0
  with precondition: [I=2,E+1=A,E+1=B,L=C,E+1=D,O=F,E=G,Q=H,E+1=J,E+1=K,E+1=M,E=N,E=P,E+1>=0] 

* Chain [18]: 0
  with precondition: [I=3,D=A,L=C,G=E,O=F,Q=H,D=J,B=K,D=M,G=N,G=P+1,G+1>=B,B>=D,G>=D,2*D>=G+1] 

* Chain [17]: 0
  with precondition: [I=4,D=A,G=E,G+1>=B,B>=D,2*D>=G+1] 


#### Cost of chains of lbl82(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q):
* Chain [[20,21,22],26]: 1*it(20)+1*it(21)+1*it(22)+1*s(3)+0
  Such that:aux(24) =< -D-E/2+G+N/2+1
aux(69) =< E
aux(12) =< -E/2+G+1/2
aux(24) =< -E/2+G+N/2-P
aux(73) =< E/2
it(20) =< E/2-N/2
aux(74) =< E-J
aux(75) =< E-N
aux(76) =< J
it(22) =< aux(75)
it(22) =< aux(74)
aux(35) =< aux(76)
it(22) =< aux(69)
s(3) =< aux(69)
s(3) =< aux(75)
aux(35) =< aux(73)
it(20) =< aux(73)
aux(53) =< aux(76)
aux(35) =< aux(76)
aux(44) =< it(22)*aux(76)
aux(11) =< it(22)*aux(76)
aux(30) =< it(20)*aux(76)
aux(10) =< it(20)*aux(76)
aux(54) =< it(22)*aux(53)
aux(11) =< it(22)*aux(53)
aux(23) =< aux(44)
aux(36) =< it(20)*aux(35)
aux(10) =< it(20)*aux(35)
aux(22) =< aux(30)
aux(23) =< aux(54)
aux(22) =< aux(36)
it(21) =< aux(11)+aux(10)+aux(12)
it(21) =< aux(23)+aux(22)+aux(24)

  with precondition: [I=2,A=D,A=J,C=L,A=M,F=O,A=P+1,H=Q,G>=A,N>=A,2*A>=E,E>=G+1,E>=N] 

* Chain [[20,21,22],25]: 1*it(20)+1*it(21)+2*it(22)+1*s(4)+0
  Such that:aux(69) =< E
aux(12) =< -E/2+G+1/2
aux(73) =< E/2
it(20) =< E/2-M/2
aux(24) =< G-P
aux(77) =< E-M
aux(78) =< M
aux(24) =< aux(77)
it(20) =< aux(77)
it(22) =< aux(77)
s(4) =< aux(77)
aux(35) =< aux(78)
it(22) =< aux(69)
aux(35) =< aux(73)
it(20) =< aux(73)
aux(53) =< aux(78)
aux(35) =< aux(78)
aux(44) =< it(22)*aux(78)
aux(11) =< it(22)*aux(78)
aux(30) =< it(20)*aux(78)
aux(10) =< it(20)*aux(78)
aux(54) =< it(22)*aux(53)
aux(11) =< it(22)*aux(53)
aux(23) =< aux(44)
aux(36) =< it(20)*aux(35)
aux(10) =< it(20)*aux(35)
aux(22) =< aux(30)
aux(23) =< aux(54)
aux(22) =< aux(36)
it(21) =< aux(11)+aux(10)+aux(12)
it(21) =< aux(23)+aux(22)+aux(24)

  with precondition: [I=2,A=D,A=J,A=K,C=L,A=M,A=N+1,F=O,A=P+1,H=Q,E>=A+2,G>=A,2*A>=E,E>=G+1] 

* Chain [[20,21,22],24]: 1*it(20)+1*it(21)+2*it(22)+0
  Such that:aux(24) =< -A+G+1
aux(24) =< -D+G+1
it(20) =< -D/2+E/2
aux(69) =< E
aux(12) =< -E/2+G+1/2
aux(73) =< E/2
aux(79) =< -D+E
aux(80) =< D
it(22) =< aux(79)
aux(35) =< aux(80)
it(22) =< aux(69)
aux(35) =< aux(73)
it(20) =< aux(73)
aux(53) =< aux(80)
aux(35) =< aux(80)
aux(44) =< it(22)*aux(80)
aux(11) =< it(22)*aux(80)
aux(30) =< it(20)*aux(80)
aux(10) =< it(20)*aux(80)
aux(54) =< it(22)*aux(53)
aux(11) =< it(22)*aux(53)
aux(23) =< aux(44)
aux(36) =< it(20)*aux(35)
aux(10) =< it(20)*aux(35)
aux(22) =< aux(30)
aux(23) =< aux(54)
aux(22) =< aux(36)
it(21) =< aux(11)+aux(10)+aux(12)
it(21) =< aux(23)+aux(22)+aux(24)

  with precondition: [I=4,A=D,G>=A,2*A>=E,E>=G+1] 

* Chain [[20,21,22],23]: 1*it(20)+1*it(21)+2*it(22)+1*s(5)+0
  Such that:aux(24) =< -A+G
aux(24) =< -D+G
it(20) =< -D/2+E/2
aux(69) =< E
aux(12) =< -E/2+G+1/2
aux(73) =< E/2
aux(81) =< -D+E
aux(82) =< D
it(20) =< aux(81)
it(22) =< aux(81)
s(5) =< aux(81)
aux(35) =< aux(82)
it(22) =< aux(69)
aux(35) =< aux(73)
it(20) =< aux(73)
aux(53) =< aux(82)
aux(35) =< aux(82)
aux(44) =< it(22)*aux(82)
aux(11) =< it(22)*aux(82)
aux(30) =< it(20)*aux(82)
aux(10) =< it(20)*aux(82)
aux(54) =< it(22)*aux(53)
aux(11) =< it(22)*aux(53)
aux(23) =< aux(44)
aux(36) =< it(20)*aux(35)
aux(10) =< it(20)*aux(35)
aux(22) =< aux(30)
aux(23) =< aux(54)
aux(22) =< aux(36)
it(21) =< aux(11)+aux(10)+aux(12)
it(21) =< aux(23)+aux(22)+aux(24)

  with precondition: [I=4,A=D,E>=A+2,G>=A,2*A>=E,E>=G+1] 

* Chain [26]: 0
  with precondition: [I=2,K=B,L=C,A=D,O=F,A=G+1,Q=H,A=J,A=M,E=N,A=P+1,E>=A,2*A>=E] 

* Chain [25]: 1*s(4)+0
  Such that:s(4) =< -D+E

  with precondition: [I=2,L=C,A=D,O=F,Q=H,A=J,A=K,A=M,A=N+1,A=P+1,G>=A,2*A>=E,E>=G+1] 

* Chain [24]: 0
  with precondition: [I=4] 

* Chain [23]: 1*s(5)+0
  Such that:s(5) =< -D+E

  with precondition: [I=4,A=D,G>=A,2*A>=E,E>=G+1] 


#### Cost of chains of lbl82_loop_cont(A,B,C,D,E,F,G,H,I,J):
* Chain [28]: 0
  with precondition: [A=2] 

* Chain [27]: 0
  with precondition: [A=4] 


#### Cost of chains of start(A,B,C,D,E,F,G,H,I):
* Chain [36]: 0
  with precondition: [A=0,D=0,C=B,F=E,H=G] 

* Chain [35]: 1
  with precondition: [A=1,D=1,C=B,F=E,H=G] 

* Chain [34]: 0
  with precondition: [D=A,C=B,F=E,H=G,0>=D+1] 

* Chain [33]: 0
  with precondition: [D=A,C=B,F=E,H=G,D>=0] 

* Chain [32]: 4*s(26)+1*s(33)+1*s(37)+1*s(39)+1*s(49)+1*s(52)+2*s(58)+1*s(69)+1
  Such that:s(53) =< 2*A
s(52) =< A/2
aux(84) =< D
aux(85) =< 2*D
s(33) =< D/2
aux(87) =< A
s(26) =< aux(87)
s(58) =< aux(87)
s(59) =< aux(87)
s(58) =< s(53)
s(52) =< aux(87)
s(60) =< aux(87)
s(59) =< aux(87)
s(61) =< s(58)*aux(87)
s(62) =< s(58)*aux(87)
s(63) =< s(52)*aux(87)
s(64) =< s(52)*aux(87)
s(65) =< s(58)*s(60)
s(62) =< s(58)*s(60)
s(66) =< s(61)
s(67) =< s(52)*s(59)
s(64) =< s(52)*s(59)
s(68) =< s(63)
s(66) =< s(65)
s(68) =< s(67)
s(69) =< s(62)+s(64)+aux(87)
s(69) =< s(66)+s(68)+aux(87)
s(29) =< aux(84)
s(33) =< aux(84)
s(29) =< aux(85)
s(37) =< s(29)
s(37) =< aux(84)
s(38) =< aux(84)
s(37) =< aux(85)
s(39) =< aux(85)
s(39) =< s(29)
s(40) =< aux(84)
s(38) =< aux(84)
s(41) =< s(37)*aux(84)
s(42) =< s(37)*aux(84)
s(43) =< s(33)*aux(84)
s(44) =< s(33)*aux(84)
s(45) =< s(37)*s(40)
s(42) =< s(37)*s(40)
s(46) =< s(41)
s(47) =< s(33)*s(38)
s(44) =< s(33)*s(38)
s(48) =< s(43)
s(46) =< s(45)
s(48) =< s(47)
s(49) =< s(42)+s(44)+aux(84)
s(49) =< s(46)+s(48)+s(29)

  with precondition: [D=A,C=B,F=E,H=G,D>=1] 

* Chain [31]: 3*s(70)+4*s(75)+1*s(79)+1*s(81)+1*s(91)+3*s(99)+6*s(100)+3*s(111)+1
  Such that:aux(93) =< A
aux(94) =< D
aux(95) =< 2*D
aux(96) =< D/2
s(70) =< aux(93)
s(75) =< aux(96)
s(99) =< aux(94)
s(100) =< aux(94)
s(80) =< aux(94)
s(100) =< aux(95)
s(75) =< aux(94)
s(82) =< aux(94)
s(80) =< aux(94)
s(103) =< s(100)*aux(94)
s(104) =< s(100)*aux(94)
s(85) =< s(75)*aux(94)
s(86) =< s(75)*aux(94)
s(107) =< s(100)*s(82)
s(104) =< s(100)*s(82)
s(108) =< s(103)
s(89) =< s(75)*s(80)
s(86) =< s(75)*s(80)
s(90) =< s(85)
s(108) =< s(107)
s(90) =< s(89)
s(111) =< s(104)+s(86)+aux(94)
s(111) =< s(108)+s(90)+aux(94)
s(71) =< aux(94)
s(71) =< aux(95)
s(79) =< s(71)
s(79) =< aux(94)
s(79) =< aux(95)
s(81) =< aux(95)
s(81) =< s(71)
s(83) =< s(79)*aux(94)
s(84) =< s(79)*aux(94)
s(87) =< s(79)*s(82)
s(84) =< s(79)*s(82)
s(88) =< s(83)
s(88) =< s(87)
s(91) =< s(84)+s(86)+aux(94)
s(91) =< s(88)+s(90)+s(71)

  with precondition: [D=A,C=B,F=E,H=G,D>=2] 

* Chain [30]: 2*s(157)+8*s(161)+6*s(162)+2*s(173)+1*s(201)+1*s(207)+1*s(217)+1*s(221)+1*s(238)+1
  Such that:aux(104) =< D
aux(105) =< 2*D
aux(106) =< D/2
s(157) =< aux(106)
s(221) =< aux(106)
s(162) =< aux(104)
s(161) =< aux(104)
s(197) =< aux(104)
s(201) =< aux(104)
s(161) =< aux(105)
s(197) =< aux(105)
s(206) =< aux(104)
s(207) =< aux(105)
s(206) =< s(197)
s(201) =< s(197)
s(164) =< aux(104)
s(206) =< aux(104)
s(165) =< s(161)*aux(104)
s(166) =< s(161)*aux(104)
s(211) =< s(201)*aux(104)
s(212) =< s(201)*aux(104)
s(169) =< s(161)*s(164)
s(166) =< s(161)*s(164)
s(170) =< s(165)
s(215) =< s(201)*s(206)
s(212) =< s(201)*s(206)
s(216) =< s(211)
s(170) =< s(169)
s(216) =< s(215)
s(217) =< s(166)+s(212)+s(197)
s(217) =< s(170)+s(216)+s(197)
s(157) =< aux(104)
s(163) =< aux(104)
s(163) =< aux(104)
s(167) =< s(157)*aux(104)
s(168) =< s(157)*aux(104)
s(171) =< s(157)*s(163)
s(168) =< s(157)*s(163)
s(172) =< s(167)
s(172) =< s(171)
s(173) =< s(166)+s(168)+aux(104)
s(173) =< s(170)+s(172)+aux(104)
s(221) =< aux(104)
s(221) =< s(197)
s(232) =< s(221)*aux(104)
s(233) =< s(221)*aux(104)
s(236) =< s(221)*s(206)
s(233) =< s(221)*s(206)
s(237) =< s(232)
s(237) =< s(236)
s(238) =< s(166)+s(233)+s(197)
s(238) =< s(170)+s(237)+aux(104)

  with precondition: [D=A,C=B,F=E,H=G,D>=3] 

* Chain [29]: 5*s(239)+2*s(243)+3*s(248)+2*s(259)+1
  Such that:aux(111) =< D
aux(112) =< 2*D
aux(113) =< D/2
s(243) =< aux(113)
s(239) =< aux(111)
s(241) =< aux(111)
s(243) =< aux(111)
s(239) =< aux(112)
s(241) =< aux(112)
s(248) =< aux(111)
s(249) =< aux(111)
s(249) =< s(241)
s(243) =< s(241)
s(250) =< aux(111)
s(249) =< aux(111)
s(251) =< s(239)*aux(111)
s(252) =< s(239)*aux(111)
s(253) =< s(243)*aux(111)
s(254) =< s(243)*aux(111)
s(255) =< s(239)*s(250)
s(252) =< s(239)*s(250)
s(256) =< s(251)
s(257) =< s(243)*s(249)
s(254) =< s(243)*s(249)
s(258) =< s(253)
s(256) =< s(255)
s(258) =< s(257)
s(259) =< s(252)+s(254)+s(241)
s(259) =< s(256)+s(258)+aux(111)

  with precondition: [D=A,C=B,F=E,H=G,D>=4] 


#### Cost of chains of start0(A,B,C,D,E,F,G,H,I):
* Chain [44]: 0
  with precondition: [A=0] 

* Chain [43]: 1
  with precondition: [A=1] 

* Chain [42]: 0
  with precondition: [0>=A+1] 

* Chain [41]: 0
  with precondition: [A>=0] 

* Chain [40]: 2*s(282)+4*s(287)+2*s(288)+1*s(299)+1*s(301)+1*s(303)+1*s(313)+1
  Such that:aux(114) =< A
aux(115) =< 2*A
aux(116) =< A/2
s(282) =< aux(116)
s(287) =< aux(114)
s(288) =< aux(114)
s(289) =< aux(114)
s(288) =< aux(115)
s(282) =< aux(114)
s(290) =< aux(114)
s(289) =< aux(114)
s(291) =< s(288)*aux(114)
s(292) =< s(288)*aux(114)
s(293) =< s(282)*aux(114)
s(294) =< s(282)*aux(114)
s(295) =< s(288)*s(290)
s(292) =< s(288)*s(290)
s(296) =< s(291)
s(297) =< s(282)*s(289)
s(294) =< s(282)*s(289)
s(298) =< s(293)
s(296) =< s(295)
s(298) =< s(297)
s(299) =< s(292)+s(294)+aux(114)
s(299) =< s(296)+s(298)+aux(114)
s(300) =< aux(114)
s(300) =< aux(115)
s(301) =< s(300)
s(301) =< aux(114)
s(301) =< aux(115)
s(303) =< aux(115)
s(303) =< s(300)
s(305) =< s(301)*aux(114)
s(306) =< s(301)*aux(114)
s(309) =< s(301)*s(290)
s(306) =< s(301)*s(290)
s(310) =< s(305)
s(310) =< s(309)
s(313) =< s(306)+s(294)+aux(114)
s(313) =< s(310)+s(298)+s(300)

  with precondition: [A>=1] 

* Chain [39]: 6*s(318)+4*s(319)+6*s(321)+3*s(332)+1*s(334)+1*s(335)+1*s(340)+1
  Such that:s(316) =< 2*A
s(317) =< A/2
aux(117) =< A
s(318) =< aux(117)
s(319) =< s(317)
s(321) =< aux(117)
s(322) =< aux(117)
s(321) =< s(316)
s(319) =< aux(117)
s(323) =< aux(117)
s(322) =< aux(117)
s(324) =< s(321)*aux(117)
s(325) =< s(321)*aux(117)
s(326) =< s(319)*aux(117)
s(327) =< s(319)*aux(117)
s(328) =< s(321)*s(323)
s(325) =< s(321)*s(323)
s(329) =< s(324)
s(330) =< s(319)*s(322)
s(327) =< s(319)*s(322)
s(331) =< s(326)
s(329) =< s(328)
s(331) =< s(330)
s(332) =< s(325)+s(327)+aux(117)
s(332) =< s(329)+s(331)+aux(117)
s(333) =< aux(117)
s(333) =< s(316)
s(334) =< s(333)
s(334) =< aux(117)
s(334) =< s(316)
s(335) =< s(316)
s(335) =< s(333)
s(336) =< s(334)*aux(117)
s(337) =< s(334)*aux(117)
s(338) =< s(334)*s(323)
s(337) =< s(334)*s(323)
s(339) =< s(336)
s(339) =< s(338)
s(340) =< s(337)+s(327)+aux(117)
s(340) =< s(339)+s(331)+s(333)

  with precondition: [A>=2] 

* Chain [38]: 2*s(344)+1*s(345)+6*s(346)+8*s(347)+1*s(349)+1*s(351)+1*s(361)+2*s(367)+1*s(372)+1
  Such that:s(341) =< A
s(342) =< 2*A
s(343) =< A/2
s(344) =< s(343)
s(345) =< s(343)
s(346) =< s(341)
s(347) =< s(341)
s(348) =< s(341)
s(349) =< s(341)
s(347) =< s(342)
s(348) =< s(342)
s(350) =< s(341)
s(351) =< s(342)
s(350) =< s(348)
s(349) =< s(348)
s(352) =< s(341)
s(350) =< s(341)
s(353) =< s(347)*s(341)
s(354) =< s(347)*s(341)
s(355) =< s(349)*s(341)
s(356) =< s(349)*s(341)
s(357) =< s(347)*s(352)
s(354) =< s(347)*s(352)
s(358) =< s(353)
s(359) =< s(349)*s(350)
s(356) =< s(349)*s(350)
s(360) =< s(355)
s(358) =< s(357)
s(360) =< s(359)
s(361) =< s(354)+s(356)+s(348)
s(361) =< s(358)+s(360)+s(348)
s(344) =< s(341)
s(362) =< s(341)
s(362) =< s(341)
s(363) =< s(344)*s(341)
s(364) =< s(344)*s(341)
s(365) =< s(344)*s(362)
s(364) =< s(344)*s(362)
s(366) =< s(363)
s(366) =< s(365)
s(367) =< s(354)+s(364)+s(341)
s(367) =< s(358)+s(366)+s(341)
s(345) =< s(341)
s(345) =< s(348)
s(368) =< s(345)*s(341)
s(369) =< s(345)*s(341)
s(370) =< s(345)*s(350)
s(369) =< s(345)*s(350)
s(371) =< s(368)
s(371) =< s(370)
s(372) =< s(354)+s(369)+s(348)
s(372) =< s(358)+s(371)+s(341)

  with precondition: [A>=3] 

* Chain [37]: 2*s(376)+5*s(377)+3*s(379)+2*s(390)+1
  Such that:s(373) =< A
s(374) =< 2*A
s(375) =< A/2
s(376) =< s(375)
s(377) =< s(373)
s(378) =< s(373)
s(376) =< s(373)
s(377) =< s(374)
s(378) =< s(374)
s(379) =< s(373)
s(380) =< s(373)
s(380) =< s(378)
s(376) =< s(378)
s(381) =< s(373)
s(380) =< s(373)
s(382) =< s(377)*s(373)
s(383) =< s(377)*s(373)
s(384) =< s(376)*s(373)
s(385) =< s(376)*s(373)
s(386) =< s(377)*s(381)
s(383) =< s(377)*s(381)
s(387) =< s(382)
s(388) =< s(376)*s(380)
s(385) =< s(376)*s(380)
s(389) =< s(384)
s(387) =< s(386)
s(389) =< s(388)
s(390) =< s(383)+s(385)+s(378)
s(390) =< s(387)+s(389)+s(373)

  with precondition: [A>=4] 


Closed-form bounds of start0(A,B,C,D,E,F,G,H,I): 
-------------------------------------
* Chain [44] with precondition: [A=0] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [43] with precondition: [A=1] 
    - Upper bound: 1 
    - Complexity: constant 
* Chain [42] with precondition: [0>=A+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [41] with precondition: [A>=0] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [40] with precondition: [A>=1] 
    - Upper bound: 9*A+1+2*A*A+A/2*(2*A)+2*A+A 
    - Complexity: n^2 
* Chain [39] with precondition: [A>=2] 
    - Upper bound: 17*A+1+4*A*A+A/2*(4*A)+2*A+2*A 
    - Complexity: n^2 
* Chain [38] with precondition: [A>=3] 
    - Upper bound: 19*A+1+5*A*A+A/2*(3*A)+2*A+3/2*A 
    - Complexity: n^2 
* Chain [37] with precondition: [A>=4] 
    - Upper bound: 10*A+1+2*A*A+A/2*(2*A)+A 
    - Complexity: n^2 

### Maximum cost of start0(A,B,C,D,E,F,G,H,I): nat(A)*2*nat(A)+nat(A)*9+nat(A)*2*nat(A/2)+nat(A/2)*2+max([nat(2*A),nat(A)*2*nat(A)+nat(A)*7+nat(A/2)*nat(A)+nat(2*A)+nat(A/2)+max([nat(A)*nat(A)+nat(A)*2,nat(A/2)*nat(A)+nat(A/2)])+nat(A)])+1 
Asymptotic class: n^2 
* Total analysis performed in 936 ms.

