WORST_CASE(?,O(n^1))

# LoAT Proof:
Initial ITS

Start location: l0

Location map:
LoAT_sink -> 0
l0 -> 1
l1 -> 2

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-2+i1 == 0 /\ i6+i7 > 0) /\ i1'=2, i3'=1+i3, i4'=2, i5'=1+i5, i6'=-2*i6-i4, i7'=i5

Dependency graph:
0 -> 1
1 -> 1

Unrolled Loops

	Unrolling

	Original rule:
	(-2+i1 == 0 /\ i6+i7 > 0) /\ i1'=2, i3'=1+i3, i4'=2, i5'=1+i5, i6'=-2*i6-i4, i7'=i5
	New rule:
	(0 == 0 /\ -2*i6-i4+i5 > 0 /\ -2+i1 == 0 /\ i6+i7 > 0) /\ i1'=2, i3'=2+i3, i4'=2, i5'=2+i5, i6'=-2+4*i6+2*i4, i7'=1+i5
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -2*i6-i4+i5 > 0 /\ -2+i1 == 0 /\ i6+i7 > 0) /\ i1'=2, i3'=2+i3, i4'=2, i5'=2+i5, i6'=-2+4*i6+2*i4, i7'=1+i5
	New rule:
	(-2*i6-i4+i5 > 0 /\ -2+i1 == 0 /\ i6+i7 > 0) /\ i1'=2, i3'=2+i3, i4'=2, i5'=2+i5, i6'=-2+4*i6+2*i4, i7'=1+i5

Start location: l0

Location map:
LoAT_sink -> 0
l0 -> 1
l1 -> 2

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-2+i1 == 0 /\ i6+i7 > 0) /\ i1'=2, i3'=1+i3, i4'=2, i5'=1+i5, i6'=-2*i6-i4, i7'=i5
   2: (-2*i6-i4+i5 > 0 /\ -2+i1 == 0 /\ i6+i7 > 0) /\ i1'=2, i3'=2+i3, i4'=2, i5'=2+i5, i6'=-2+4*i6+2*i4, i7'=1+i5

Dependency graph:
0 -> 1, 0 -> 2
1 -> 1, 1 -> 2
2 -> 1, 2 -> 2

Step with 0

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 2

	Trace

	0[(-1+i1 == 0)]
	2[(-2*i6-i4+i5 > 0 /\ -2+i1 == 0 /\ i6+i7 > 0)]
	
	Blocked

	{}
	{}
	{}
	
Step with 2

	Trace

	0[(-1+i1 == 0)]
	2[(-2*i6-i4+i5 > 0 /\ -2+i1 == 0 /\ i6+i7 > 0)]
	2[(-2*i6-i4+i5 > 0 /\ -2+i1 == 0 /\ i6+i7 > 0)]
	
	Blocked

	{}
	{}
	{}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	2[(-2*i6-i4+i5 > 0 /\ -2+i1 == 0 /\ i6+i7 > 0)]
	
	Blocked

	{}
	{}
	{2[T]}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	2[(-2*i6-i4+i5 > 0 /\ -2+i1 == 0 /\ i6+i7 > 0)]
	1[(-2+i1 == 0 /\ i6+i7 > 0)]
	
	Blocked

	{}
	{}
	{2[T]}
	{}
	
Step with 2

	Trace

	0[(-1+i1 == 0)]
	2[(-2*i6-i4+i5 > 0 /\ -2+i1 == 0 /\ i6+i7 > 0)]
	1[(-2+i1 == 0 /\ i6+i7 > 0)]
	2[(-2*i6-i4+i5 > 0 /\ -2+i1 == 0 /\ i6+i7 > 0)]
	
	Blocked

	{}
	{}
	{2[T]}
	{}
	{}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	2[(-2*i6-i4+i5 > 0 /\ -2+i1 == 0 /\ i6+i7 > 0)]
	1[(-2+i1 == 0 /\ i6+i7 > 0)]
	2[(-2*i6-i4+i5 > 0 /\ -2+i1 == 0 /\ i6+i7 > 0)]
	1[(-2+i1 == 0 /\ i6+i7 > 0)]
	
	Blocked

	{}
	{}
	{2[T]}
	{}
	{}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	2[(-2*i6-i4+i5 > 0 /\ -2+i1 == 0 /\ i6+i7 > 0)]
	1[(-2+i1 == 0 /\ i6+i7 > 0)]
	2[(-2*i6-i4+i5 > 0 /\ -2+i1 == 0 /\ i6+i7 > 0)]
	
	Blocked

	{}
	{}
	{2[T]}
	{}
	{1[T]}
	
Step with 2

	Trace

	0[(-1+i1 == 0)]
	2[(-2*i6-i4+i5 > 0 /\ -2+i1 == 0 /\ i6+i7 > 0)]
	1[(-2+i1 == 0 /\ i6+i7 > 0)]
	2[(-2*i6-i4+i5 > 0 /\ -2+i1 == 0 /\ i6+i7 > 0)]
	2[(-2*i6-i4+i5 > 0 /\ -2+i1 == 0 /\ i6+i7 > 0)]
	
	Blocked

	{}
	{}
	{2[T]}
	{}
	{1[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	2[(-2*i6-i4+i5 > 0 /\ -2+i1 == 0 /\ i6+i7 > 0)]
	1[(-2+i1 == 0 /\ i6+i7 > 0)]
	2[(-2*i6-i4+i5 > 0 /\ -2+i1 == 0 /\ i6+i7 > 0)]
	
	Blocked

	{}
	{}
	{2[T]}
	{}
	{1[T], 2[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	2[(-2*i6-i4+i5 > 0 /\ -2+i1 == 0 /\ i6+i7 > 0)]
	1[(-2+i1 == 0 /\ i6+i7 > 0)]
	
	Blocked

	{}
	{}
	{2[T]}
	{2[T]}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	2[(-2*i6-i4+i5 > 0 /\ -2+i1 == 0 /\ i6+i7 > 0)]
	1[(-2+i1 == 0 /\ i6+i7 > 0)]
	1[(-2+i1 == 0 /\ i6+i7 > 0)]
	
	Blocked

	{}
	{}
	{2[T]}
	{2[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	2[(-2*i6-i4+i5 > 0 /\ -2+i1 == 0 /\ i6+i7 > 0)]
	1[(-2+i1 == 0 /\ i6+i7 > 0)]
	
	Blocked

	{}
	{}
	{2[T]}
	{1[T], 2[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	2[(-2*i6-i4+i5 > 0 /\ -2+i1 == 0 /\ i6+i7 > 0)]
	
	Blocked

	{}
	{}
	{1[T], 2[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{2[T]}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	1[(-2+i1 == 0 /\ i6+i7 > 0)]
	
	Blocked

	{}
	{2[T]}
	{}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	1[(-2+i1 == 0 /\ i6+i7 > 0)]
	1[(-2+i1 == 0 /\ i6+i7 > 0)]
	
	Blocked

	{}
	{2[T]}
	{}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	1[(-2+i1 == 0 /\ i6+i7 > 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T]}
	
Step with 2

	Trace

	0[(-1+i1 == 0)]
	1[(-2+i1 == 0 /\ i6+i7 > 0)]
	2[(-2*i6-i4+i5 > 0 /\ -2+i1 == 0 /\ i6+i7 > 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T]}
	{}
	
Step with 2

	Trace

	0[(-1+i1 == 0)]
	1[(-2+i1 == 0 /\ i6+i7 > 0)]
	2[(-2*i6-i4+i5 > 0 /\ -2+i1 == 0 /\ i6+i7 > 0)]
	2[(-2*i6-i4+i5 > 0 /\ -2+i1 == 0 /\ i6+i7 > 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T]}
	{}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	1[(-2+i1 == 0 /\ i6+i7 > 0)]
	2[(-2*i6-i4+i5 > 0 /\ -2+i1 == 0 /\ i6+i7 > 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T]}
	{2[T]}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	1[(-2+i1 == 0 /\ i6+i7 > 0)]
	2[(-2*i6-i4+i5 > 0 /\ -2+i1 == 0 /\ i6+i7 > 0)]
	1[(-2+i1 == 0 /\ i6+i7 > 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T]}
	{2[T]}
	{}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	1[(-2+i1 == 0 /\ i6+i7 > 0)]
	2[(-2*i6-i4+i5 > 0 /\ -2+i1 == 0 /\ i6+i7 > 0)]
	1[(-2+i1 == 0 /\ i6+i7 > 0)]
	1[(-2+i1 == 0 /\ i6+i7 > 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T]}
	{2[T]}
	{}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	1[(-2+i1 == 0 /\ i6+i7 > 0)]
	2[(-2*i6-i4+i5 > 0 /\ -2+i1 == 0 /\ i6+i7 > 0)]
	1[(-2+i1 == 0 /\ i6+i7 > 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T]}
	{2[T]}
	{1[T]}
	
Step with 2

	Trace

	0[(-1+i1 == 0)]
	1[(-2+i1 == 0 /\ i6+i7 > 0)]
	2[(-2*i6-i4+i5 > 0 /\ -2+i1 == 0 /\ i6+i7 > 0)]
	1[(-2+i1 == 0 /\ i6+i7 > 0)]
	2[(-2*i6-i4+i5 > 0 /\ -2+i1 == 0 /\ i6+i7 > 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T]}
	{2[T]}
	{1[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	1[(-2+i1 == 0 /\ i6+i7 > 0)]
	2[(-2*i6-i4+i5 > 0 /\ -2+i1 == 0 /\ i6+i7 > 0)]
	1[(-2+i1 == 0 /\ i6+i7 > 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T]}
	{2[T]}
	{1[T], 2[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	1[(-2+i1 == 0 /\ i6+i7 > 0)]
	2[(-2*i6-i4+i5 > 0 /\ -2+i1 == 0 /\ i6+i7 > 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T]}
	{1[T], 2[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	1[(-2+i1 == 0 /\ i6+i7 > 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T], 2[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{1[T], 2[T]}
	
Backtrack

	Trace

	Blocked

	{0[T]}
	
Accept

Constant


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃
  Temp_Vars:  
  Locations:  l0, l1
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, X₃)
  t₁: l1(X₀, X₁, X₂, X₃) → l1(2, 1+X₁, -X₀-2⋅X₂, X₁) :|: 1 ≤ X₂+X₃


Preprocessing
Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃
  Temp_Vars:  
  Locations:  l0, l1
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, X₃)
  t₁: l1(X₀, X₁, X₂, X₃) → l1(2, 1+X₁, -X₀-2⋅X₂, X₁) :|: 1 ≤ X₂+X₃


TWN: t₁: l1→l1


  cycle: [t₁: l1→l1]
  original loop: (1 ≤ X₂+X₃,(X₀,X₁,X₂,X₃) -> (2,1+X₁,-X₀-2⋅X₂,X₁))
  transformed loop: (1 ≤ X₂+X₃,(X₀,X₁,X₂,X₃) -> (2,1+X₁,-X₀-2⋅X₂,X₁))
  loop: (1 ≤ X₂+X₃,(X₀,X₁,X₂,X₃) -> (2,1+X₁,-X₀-2⋅X₂,X₁))
  order: [X₁; X₀; X₃; X₂]
closed-form:  X₁: X₁ + [[n != 0]]⋅2⋅n^1
  X₀: [[n == 0]]⋅X₀ + [[n != 0]]⋅2
  X₃: [[n == 0]]⋅X₃ + [[n != 0]]⋅(1+X₁) + [[n != 0, n != 1]]⋅2⋅n^1 + [[n != 0, n != 1]]⋅-2
  X₂: X₂⋅(4)^n + [[n != 0]]⋅(1/2⋅X₀-2/3)⋅(4)^n + [[n != 0]]⋅2/3 + [[n != 0, n != 1]]⋅1/3⋅(4)^n + [[n != 0, n != 1]]⋅-4/3

  Termination: true
  Formula: 
    3⋅X₁ ≤ 8 ∧ 3⋅X₁ ≤ 5 ∧ 3⋅X₀+6⋅X₂ ≤ 2 ∧ 0 ≤ 1 ∧ 1 ≤ 0 ∧ 2 ≤ 3⋅X₀+6⋅X₂ ∧ 5 ≤ 3⋅X₁ ∧ 8 ≤ 3⋅X₁
     ∨ 3⋅X₁ ≤ 8 ∧ 3⋅X₀+6⋅X₂ ≤ 2 ∧ 0 ≤ 1 ∧ 3⋅X₀+6⋅X₂ ≤ 1 ∧ 1 ≤ 0 ∧ 2 ≤ 3⋅X₀+6⋅X₂ ∧ 8 ≤ 3⋅X₁
     ∨ 3⋅X₁ ≤ 8 ∧ 3⋅X₀+6⋅X₂ ≤ 2 ∧ 0 ≤ 1 ∧ 1 ≤ 0 ∧ 2 ≤ 3⋅X₀+6⋅X₂ ∧ 2 ≤ X₁ ∧ 8 ≤ 3⋅X₁
     ∨ 3⋅X₁ ≤ 8 ∧ 3⋅X₀+6⋅X₂ ≤ 2 ∧ 0 ≤ 1 ∧ 1 ≤ 0 ∧ 2 ≤ 3⋅X₀+6⋅X₂ ∧ 8 ≤ 3⋅X₁
     ∨ 3⋅X₁ ≤ 5 ∧ 3⋅X₀+6⋅X₂ ≤ 2 ∧ 0 ≤ 1 ∧ 1 ≤ 0 ∧ 1 ≤ X₀+2⋅X₂ ∧ 2 ≤ 3⋅X₀+6⋅X₂ ∧ 5 ≤ 3⋅X₁
     ∨ 3⋅X₁ ≤ 5 ∧ 3⋅X₀+6⋅X₂ ≤ 2 ∧ 0 ≤ 1 ∧ 1 ≤ 0 ∧ 2 ≤ 3⋅X₀+6⋅X₂ ∧ 5 ≤ 3⋅X₁
     ∨ 3⋅X₁ ≤ 5 ∧ 3⋅X₀+6⋅X₂ ≤ 2 ∧ 0 ≤ 1 ∧ 1 ≤ 0 ∧ 2 ≤ 3⋅X₀+6⋅X₂ ∧ 5 ≤ 3⋅X₁ ∧ 17 ≤ 6⋅X₁
     ∨ 3⋅X₀+6⋅X₂ ≤ 2 ∧ 0 ≤ 1 ∧ 3⋅X₀+6⋅X₂ ≤ 1 ∧ 1 ≤ 0 ∧ 2 ≤ 3⋅X₀+6⋅X₂ ∧ 17 ≤ 6⋅X₁
     ∨ 3⋅X₀+6⋅X₂ ≤ 2 ∧ 0 ≤ 1 ∧ 3⋅X₀+6⋅X₂ ≤ 1 ∧ 2 ≤ 3⋅X₀+6⋅X₂
     ∨ 3⋅X₀+6⋅X₂ ≤ 2 ∧ 0 ≤ 1 ∧ 1 ≤ 0 ∧ 1 ≤ X₀+2⋅X₂ ∧ 2 ≤ 3⋅X₀+6⋅X₂ ∧ 2 ≤ X₁
     ∨ 3⋅X₀+6⋅X₂ ≤ 2 ∧ 0 ≤ 1 ∧ 1 ≤ 0 ∧ 2 ≤ 3⋅X₀+6⋅X₂ ∧ 2 ≤ X₁
     ∨ 3⋅X₀+6⋅X₂ ≤ 2 ∧ 0 ≤ 1 ∧ 1 ≤ 0 ∧ 2 ≤ 3⋅X₀+6⋅X₂ ∧ 2 ≤ X₁ ∧ 17 ≤ 6⋅X₁
     ∨ 3⋅X₀+6⋅X₂ ≤ 2 ∧ 0 ≤ 1 ∧ 1 ≤ 0 ∧ 2 ≤ 3⋅X₀+6⋅X₂ ∧ 17 ≤ 6⋅X₁
     ∨ 3⋅X₀+6⋅X₂ ≤ 2 ∧ 0 ≤ 1 ∧ 1 ≤ X₀+2⋅X₂ ∧ 2 ≤ 3⋅X₀+6⋅X₂
     ∨ 3⋅X₀+6⋅X₂ ≤ 2 ∧ 0 ≤ 1 ∧ 2 ≤ 3⋅X₀+6⋅X₂
     ∨ 3⋅X₀+6⋅X₂ ≤ 1 ∧ 1 ≤ X₀+2⋅X₂



Stabilization-Threshold for: 1+X₀+2⋅X₂ ≤ X₁
  alphas_abs: 6+3⋅X₁
  M: 0
  N: 2
  Bound: 6⋅X₁+15 {O(n)}

Stabilization-Threshold for: 1 ≤ X₂+X₃
  alphas_abs: 12+6⋅X₁
  M: 0
  N: 2
  Bound: 12⋅X₁+27 {O(n)}

TWN - Lifting for [1: l1->l1] of 36⋅X₁+89 {O(n)}
relevant size-bounds w.r.t. t₀: l0→l1:
X₁: X₁ {O(n)}
Runtime-bound of t₀: 1 {O(1)}
Results in: 36⋅X₁+89 {O(n)}
All Bounds
Timebounds
  Overall timebound:36⋅X₁+90 {O(n)}
    t₀: 1 {O(1)}
    t₁: 36⋅X₁+89 {O(n)}


Costbounds
  Overall costbound: 36⋅X₁+90 {O(n)}
    t₀: 1 {O(1)}
    t₁: 36⋅X₁+89 {O(n)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₀, X₂: X₂ {O(n)}
    t₀, X₃: X₃ {O(n)}
    t₁, X₀: 2 {O(1)}
    t₁, X₁: 37⋅X₁+89 {O(n)}
    t₁, X₂: 180⋅2^(36⋅X₁+89)+2^(36⋅X₁+89)⋅36⋅X₀⋅X₁+2^(36⋅X₁+89)⋅72⋅X₁+2^(36⋅X₁+89)⋅90⋅X₀+2^(36⋅X₁+89)⋅X₂ {O(EXP)}
    t₁, X₃: 38⋅X₁+89 {O(n)}

