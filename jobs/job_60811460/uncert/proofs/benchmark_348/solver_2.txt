WORST_CASE(?,O(1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [f10/9,f9/9]
1. non_recursive  : [exit_location/1]
2. recursive  : [f16/9]
3. non_recursive  : [f28/8]
4. non_recursive  : [f16_loop_cont/9]
5. non_recursive  : [f9_loop_cont/9]
6. non_recursive  : [f0/8]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into f9/9
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into f16/9
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into f16_loop_cont/9
5. SCC is partially evaluated into f9_loop_cont/9
6. SCC is partially evaluated into f0/8

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations f9/9 
* CE 2 is refined into CE [17] 
* CE 3 is refined into CE [18] 
* CE 7 is refined into CE [19] 
* CE 6 is refined into CE [20] 
* CE 4 is refined into CE [21] 
* CE 5 is refined into CE [22] 


### Cost equations --> "Loop" of f9/9 
* CEs [21] --> Loop 17 
* CEs [22] --> Loop 18 
* CEs [17] --> Loop 19 
* CEs [18] --> Loop 20 
* CEs [19] --> Loop 21 
* CEs [20] --> Loop 22 

### Ranking functions of CR f9(A,B,C,D,I,J,K,L,M) 
* RF of phase [17,18]: [-A+10,-B+10]

#### Partial ranking functions of CR f9(A,B,C,D,I,J,K,L,M) 
* Partial RF of phase [17,18]:
  - RF of loop [17:1,18:1]:
    -A+10
    -B+10


### Specialization of cost equations f16/9 
* CE 14 is refined into CE [23] 
* CE 10 is refined into CE [24] 
* CE 13 is refined into CE [25] 
* CE 12 is refined into CE [26] 
* CE 11 is refined into CE [27] 


### Cost equations --> "Loop" of f16/9 
* CEs [26] --> Loop 23 
* CEs [27] --> Loop 24 
* CEs [23] --> Loop 25 
* CEs [24] --> Loop 26 
* CEs [25] --> Loop 27 

### Ranking functions of CR f16(A,E,F,G,I,J,K,L,M) 
* RF of phase [23,24]: [-A+10]

#### Partial ranking functions of CR f16(A,E,F,G,I,J,K,L,M) 
* Partial RF of phase [23,24]:
  - RF of loop [23:1,24:1]:
    -A+10


### Specialization of cost equations f16_loop_cont/9 
* CE 16 is refined into CE [28] 
* CE 15 is refined into CE [29] 


### Cost equations --> "Loop" of f16_loop_cont/9 
* CEs [28] --> Loop 28 
* CEs [29] --> Loop 29 

### Ranking functions of CR f16_loop_cont(A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR f16_loop_cont(A,B,C,D,E,F,G,H,I) 


### Specialization of cost equations f9_loop_cont/9 
* CE 9 is refined into CE [30,31,32,33,34,35] 
* CE 8 is refined into CE [36] 


### Cost equations --> "Loop" of f9_loop_cont/9 
* CEs [33] --> Loop 30 
* CEs [32] --> Loop 31 
* CEs [30,31,35] --> Loop 32 
* CEs [34] --> Loop 33 
* CEs [36] --> Loop 34 

### Ranking functions of CR f9_loop_cont(A,B,C,D,E,F,G,H,I) 

#### Partial ranking functions of CR f9_loop_cont(A,B,C,D,E,F,G,H,I) 


### Specialization of cost equations f0/8 
* CE 1 is refined into CE [37,38,39,40,41,42,43,44,45,46,47,48,49,50] 


### Cost equations --> "Loop" of f0/8 
* CEs [37,38,39,40,41,42,43,44,45,46,47,48,49,50] --> Loop 35 

### Ranking functions of CR f0(A,B,C,D,E,F,G,I) 

#### Partial ranking functions of CR f0(A,B,C,D,E,F,G,I) 


Computing Bounds
=====================================

#### Cost of chains of f9(A,B,C,D,I,J,K,L,M):
* Chain [[17,18],22]: 2*it(17)+0
  Such that:aux(5) =< -B+10
aux(6) =< -B+K
it(17) =< aux(5)
it(17) =< aux(6)

  with precondition: [I=4,J=0,L=0,M=0,A=B,10>=K,A>=0,K>=A+1] 

* Chain [[17,18],21]: 2*it(17)+0
  Such that:aux(7) =< -A+10
it(17) =< aux(7)

  with precondition: [I=3,A=B,9>=A,A>=0] 

* Chain [[17,18],20]: 2*it(17)+0
  Such that:aux(8) =< -B+10
it(17) =< aux(8)

  with precondition: [I=4,J=0,K=10,A=B,L=M,9>=A,0>=L+1,A>=0] 

* Chain [[17,18],19]: 2*it(17)+0
  Such that:aux(9) =< -B+10
it(17) =< aux(9)

  with precondition: [I=4,J=0,K=10,A=B,L=M,9>=A,A>=0,L>=1] 

* Chain [22]: 0
  with precondition: [C=0,I=4,J=0,L=0,M=0,B=A,B=K,B>=0] 

* Chain [21]: 0
  with precondition: [I=3,B=A,B>=0] 


#### Cost of chains of f16(A,E,F,G,I,J,K,L,M):
* Chain [[23,24],27]: 2*it(23)+0
  Such that:aux(10) =< -A+10
aux(11) =< -A+J
it(23) =< aux(10)
it(23) =< aux(11)

  with precondition: [I=2,L=0,M=0,J=K,9>=J,J>=A+1] 

* Chain [[23,24],26]: 2*it(23)+0
  Such that:aux(12) =< -A+10
it(23) =< aux(12)

  with precondition: [I=2,J=10,K=9,L=M,9>=A] 

* Chain [[23,24],25]: 2*it(23)+0
  Such that:aux(13) =< -A+10
it(23) =< aux(13)

  with precondition: [I=3,9>=A] 

* Chain [27]: 0
  with precondition: [I=2,L=0,M=0,A=J,A=K,9>=A] 

* Chain [26]: 0
  with precondition: [I=2,K=E,L=F,M=G,A=J,A>=10] 

* Chain [25]: 0
  with precondition: [I=3] 


#### Cost of chains of f16_loop_cont(A,B,C,D,E,F,G,H,I):
* Chain [29]: 0
  with precondition: [A=2] 

* Chain [28]: 0
  with precondition: [A=3] 


#### Cost of chains of f9_loop_cont(A,B,C,D,E,F,G,H,I):
* Chain [34]: 0
  with precondition: [A=3] 

* Chain [33]: 0
  with precondition: [A=4] 

* Chain [32]: 4*s(2)+0
  Such that:aux(14) =< -B+10
s(2) =< aux(14)

  with precondition: [A=4,9>=B] 

* Chain [31]: 2*s(7)+0
  Such that:s(6) =< -B+9
s(5) =< -B+10
s(7) =< s(5)
s(7) =< s(6)

  with precondition: [A=4,8>=B] 

* Chain [30]: 0
  with precondition: [A=4,B>=10] 


#### Cost of chains of f0(A,B,C,D,E,F,G,I):
* Chain [35]: 440
  with precondition: [] 


Closed-form bounds of f0(A,B,C,D,E,F,G,I): 
-------------------------------------
* Chain [35] with precondition: [] 
    - Upper bound: 440 
    - Complexity: constant 

### Maximum cost of f0(A,B,C,D,E,F,G,I): 440 
Asymptotic class: constant 
* Total analysis performed in 154 ms.

