WORST_CASE(Omega(n^1),O(n^1))

# LoAT Proof:
WORST_CASE(Omega(n^1),?)

WORST_CASE(Omega(n^1),?)
Initial ITS

Start location: evalspeedpldi4start

Location map:
LoAT_sink -> 0
evalspeedpldi4start -> 1
evalspeedpldi4entryin -> 2
evalspeedpldi4returnin -> 3
evalspeedpldi4bb5in -> 4
evalspeedpldi4bb2in -> 5
evalspeedpldi4bb3in -> 6
evalspeedpldi4bb4in -> 7
evalspeedpldi4stop -> 8

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-2+i1 == 0 /\ -i4 >= 0) /\ i1'=3, i3'=1+i3
   2: (-2+i1 == 0 /\ i4-i5 >= 0) /\ i1'=3, i3'=1+i3
   3: (-1+i4 >= 0 /\ -2+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=4, i3'=1+i3
   4: (-4+i1 == 0 /\ -1+i5 >= 0) /\ i1'=5, i3'=1+i3
   5: (-4+i1 == 0 /\ -i5 >= 0) /\ i1'=3, i3'=1+i3
   6: (-5+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=6, i3'=1+i3
   7: (-i4+i5 >= 0 /\ -5+i1 == 0) /\ i1'=7, i3'=1+i3
   8: -6+i1 == 0 /\ i1'=4, i3'=1+i3, i5'=-1+i5
   9: -7+i1 == 0 /\ i1'=4, i3'=1+i3, i5'=-i4+i5
  10: -3+i1 == 0 /\ i1'=8, i3'=1+i3

Dependency graph:
0 -> 1, 0 -> 2, 0 -> 3
1 -> 10
2 -> 10
3 -> 4, 3 -> 5
4 -> 6, 4 -> 7
5 -> 10
6 -> 8
7 -> 9
8 -> 4, 8 -> 5
9 -> 4, 9 -> 5

Chained Linear Paths

	Applied Chaining

	First rule:
	(-2+i1 == 0 /\ -i4 >= 0) /\ i1'=3, i3'=1+i3
	Second rule:
	-3+i1 == 0 /\ i1'=8, i3'=1+i3
	New rule:
	(0 == 0 /\ -2+i1 == 0 /\ -i4 >= 0) /\ i1'=8, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 1
	
	Applied Chaining

	First rule:
	(-2+i1 == 0 /\ i4-i5 >= 0) /\ i1'=3, i3'=1+i3
	Second rule:
	-3+i1 == 0 /\ i1'=8, i3'=1+i3
	New rule:
	(0 == 0 /\ -2+i1 == 0 /\ i4-i5 >= 0) /\ i1'=8, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 2
	
	Applied Chaining

	First rule:
	(-4+i1 == 0 /\ -i5 >= 0) /\ i1'=3, i3'=1+i3
	Second rule:
	-3+i1 == 0 /\ i1'=8, i3'=1+i3
	New rule:
	(0 == 0 /\ -4+i1 == 0 /\ -i5 >= 0) /\ i1'=8, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 5, 10
	
	Applied Chaining

	First rule:
	(-5+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=6, i3'=1+i3
	Second rule:
	-6+i1 == 0 /\ i1'=4, i3'=1+i3, i5'=-1+i5
	New rule:
	(0 == 0 /\ -5+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=4, i3'=2+i3, i5'=-1+i5
	
	Applied Deletion

	Removed the following rules: 6, 8
	
	Applied Chaining

	First rule:
	(-i4+i5 >= 0 /\ -5+i1 == 0) /\ i1'=7, i3'=1+i3
	Second rule:
	-7+i1 == 0 /\ i1'=4, i3'=1+i3, i5'=-i4+i5
	New rule:
	(0 == 0 /\ -i4+i5 >= 0 /\ -5+i1 == 0) /\ i1'=4, i3'=2+i3, i5'=-i4+i5
	
	Applied Deletion

	Removed the following rules: 7, 9

Start location: evalspeedpldi4start

Location map:
LoAT_sink -> 0
evalspeedpldi4start -> 1
evalspeedpldi4entryin -> 2
evalspeedpldi4returnin -> 3
evalspeedpldi4bb5in -> 4
evalspeedpldi4bb2in -> 5
evalspeedpldi4bb3in -> 6
evalspeedpldi4bb4in -> 7
evalspeedpldi4stop -> 8

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   3: (-1+i4 >= 0 /\ -2+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=4, i3'=1+i3
   4: (-4+i1 == 0 /\ -1+i5 >= 0) /\ i1'=5, i3'=1+i3
  11: (0 == 0 /\ -2+i1 == 0 /\ -i4 >= 0) /\ i1'=8, i3'=2+i3
  12: (0 == 0 /\ -2+i1 == 0 /\ i4-i5 >= 0) /\ i1'=8, i3'=2+i3
  13: (0 == 0 /\ -4+i1 == 0 /\ -i5 >= 0) /\ i1'=8, i3'=2+i3
  14: (0 == 0 /\ -5+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=4, i3'=2+i3, i5'=-1+i5
  15: (0 == 0 /\ -i4+i5 >= 0 /\ -5+i1 == 0) /\ i1'=4, i3'=2+i3, i5'=-i4+i5

Dependency graph:
0 -> 3, 0 -> 11, 0 -> 12
3 -> 4, 3 -> 13
4 -> 14, 4 -> 15
14 -> 4, 14 -> 13
15 -> 4, 15 -> 13

Preprocessed Transitions

	Simplified Guard

	Original rule:
	(0 == 0 /\ -2+i1 == 0 /\ -i4 >= 0) /\ i1'=8, i3'=2+i3
	New rule:
	(-2+i1 == 0 /\ -i4 >= 0) /\ i1'=8, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -2+i1 == 0 /\ i4-i5 >= 0) /\ i1'=8, i3'=2+i3
	New rule:
	(-2+i1 == 0 /\ i4-i5 >= 0) /\ i1'=8, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -4+i1 == 0 /\ -i5 >= 0) /\ i1'=8, i3'=2+i3
	New rule:
	(-4+i1 == 0 /\ -i5 >= 0) /\ i1'=8, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -5+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=4, i3'=2+i3, i5'=-1+i5
	New rule:
	(-5+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=4, i3'=2+i3, i5'=-1+i5
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -i4+i5 >= 0 /\ -5+i1 == 0) /\ i1'=4, i3'=2+i3, i5'=-i4+i5
	New rule:
	(-i4+i5 >= 0 /\ -5+i1 == 0) /\ i1'=4, i3'=2+i3, i5'=-i4+i5

Start location: evalspeedpldi4start

Location map:
LoAT_sink -> 0
evalspeedpldi4start -> 1
evalspeedpldi4entryin -> 2
evalspeedpldi4returnin -> 3
evalspeedpldi4bb5in -> 4
evalspeedpldi4bb2in -> 5
evalspeedpldi4bb3in -> 6
evalspeedpldi4bb4in -> 7
evalspeedpldi4stop -> 8

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   3: (-1+i4 >= 0 /\ -2+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=4, i3'=1+i3
   4: (-4+i1 == 0 /\ -1+i5 >= 0) /\ i1'=5, i3'=1+i3
  16: (-2+i1 == 0 /\ -i4 >= 0) /\ i1'=8, i3'=2+i3
  17: (-2+i1 == 0 /\ i4-i5 >= 0) /\ i1'=8, i3'=2+i3
  18: (-4+i1 == 0 /\ -i5 >= 0) /\ i1'=8, i3'=2+i3
  19: (-5+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=4, i3'=2+i3, i5'=-1+i5
  20: (-i4+i5 >= 0 /\ -5+i1 == 0) /\ i1'=4, i3'=2+i3, i5'=-i4+i5

Dependency graph:
0 -> 3, 0 -> 16, 0 -> 17
3 -> 4, 3 -> 18
4 -> 19, 4 -> 20
19 -> 4, 19 -> 18
20 -> 4, 20 -> 18

Refined Dependency Graph

	Removed the following edges: 3 -> 18

Start location: evalspeedpldi4start

Location map:
LoAT_sink -> 0
evalspeedpldi4start -> 1
evalspeedpldi4entryin -> 2
evalspeedpldi4returnin -> 3
evalspeedpldi4bb5in -> 4
evalspeedpldi4bb2in -> 5
evalspeedpldi4bb3in -> 6
evalspeedpldi4bb4in -> 7
evalspeedpldi4stop -> 8

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   3: (-1+i4 >= 0 /\ -2+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=4, i3'=1+i3
   4: (-4+i1 == 0 /\ -1+i5 >= 0) /\ i1'=5, i3'=1+i3
  16: (-2+i1 == 0 /\ -i4 >= 0) /\ i1'=8, i3'=2+i3
  17: (-2+i1 == 0 /\ i4-i5 >= 0) /\ i1'=8, i3'=2+i3
  18: (-4+i1 == 0 /\ -i5 >= 0) /\ i1'=8, i3'=2+i3
  19: (-5+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=4, i3'=2+i3, i5'=-1+i5
  20: (-i4+i5 >= 0 /\ -5+i1 == 0) /\ i1'=4, i3'=2+i3, i5'=-i4+i5

Dependency graph:
0 -> 3, 0 -> 16, 0 -> 17
3 -> 4
4 -> 19, 4 -> 20
19 -> 4, 19 -> 18
20 -> 4, 20 -> 18

Step with 0

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 17

	Trace

	0[(-1+i1 == 0)]
	17[(-2+i1 == 0 /\ i4-i5 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{17[T]}
	
Step with 3

	Trace

	0[(-1+i1 == 0)]
	3[(-1+i4 >= 0 /\ -2+i1 == 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{17[T]}
	{}
	
Step with 4

	Trace

	0[(-1+i1 == 0)]
	3[(-1+i4 >= 0 /\ -2+i1 == 0 /\ -1-i4+i5 >= 0)]
	4[(-4+i1 == 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{17[T]}
	{}
	{}
	
Step with 20

	Trace

	0[(-1+i1 == 0)]
	3[(-1+i4 >= 0 /\ -2+i1 == 0 /\ -1-i4+i5 >= 0)]
	4[(-4+i1 == 0 /\ -1+i5 >= 0)]
	20[(-i4+i5 >= 0 /\ -5+i1 == 0)]
	
	Blocked

	{}
	{17[T]}
	{}
	{19[T]}
	{}
	
Poly(n^1)

Accelerate

	Certificate of Non-Termination

	Original rule:
	(-i4+i5 >= 0 /\ -4+i1 == 0 /\ -1+i5 >= 0) /\ i1'=4, i3'=3+i3, i5'=-i4+i5
	New rule:
	(-i4+i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ i4 <= 0 /\ -1+i5 >= 0) /\ i1'=0

		-i4+i5 >= 0 [0]: montonic decrease yields -(-1+it21)*i4-i4+i5 >= 0, dependencies: -1+i5 >= 0
		
		-i4+i5 >= 0 [1]: eventual decrease yields (-(-1+it21)*i4-i4+i5 >= 0 /\ -i4+i5 >= 0)
		
		-i4+i5 >= 0 [2]: eventual increase yields (-i4+i5 >= 0 /\ i4 <= 0)
		
		-4+i1 >= 0 [0]: unchanged
		
		4-i1 >= 0 [0]: unchanged
		
		-1+i5 >= 0 [0]: eventual decrease yields (-1-(-1+it21)*i4+i5 >= 0 /\ -1+i5 >= 0)
		
		-1+i5 >= 0 [1]: eventual increase yields (i4 <= 0 /\ -1+i5 >= 0)
		
		Replacement map: {-i4+i5 >= 0 -> (-i4+i5 >= 0 /\ i4 <= 0), -4+i1 >= 0 -> -4+i1 >= 0, 4-i1 >= 0 -> 4-i1 >= 0, -1+i5 >= 0 -> (i4 <= 0 /\ -1+i5 >= 0)}

		Simplified Guard

		Original rule:
		(0 == 0 /\ -i4+i5 >= 0 /\ -4+i1 == 0 /\ -1+i5 >= 0) /\ i1'=4, i3'=3+i3, i5'=-i4+i5
		New rule:
		(-i4+i5 >= 0 /\ -4+i1 == 0 /\ -1+i5 >= 0) /\ i1'=4, i3'=3+i3, i5'=-i4+i5

	Loop Acceleration

	Original rule:
	(-i4+i5 >= 0 /\ -4+i1 == 0 /\ -1+i5 >= 0) /\ i1'=4, i3'=3+i3, i5'=-i4+i5
	New rule:
	(-(-1+it21)*i4-i4+i5 >= 0 /\ -1+it21 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-(-1+it21)*i4+i5 >= 0 /\ -1+i5 >= 0) /\ i1'=i1, i3'=i3+3*it21, i5'=-it21*i4+i5

		-i4+i5 >= 0 [0]: montonic decrease yields -(-1+it21)*i4-i4+i5 >= 0, dependencies: -1+i5 >= 0
		
		-i4+i5 >= 0 [1]: eventual decrease yields (-(-1+it21)*i4-i4+i5 >= 0 /\ -i4+i5 >= 0)
		
		-i4+i5 >= 0 [2]: eventual increase yields (-i4+i5 >= 0 /\ i4 <= 0)
		
		-4+i1 >= 0 [0]: unchanged
		
		4-i1 >= 0 [0]: unchanged
		
		-1+i5 >= 0 [0]: eventual decrease yields (-1-(-1+it21)*i4+i5 >= 0 /\ -1+i5 >= 0)
		
		-1+i5 >= 0 [1]: eventual increase yields (i4 <= 0 /\ -1+i5 >= 0)
		
		Replacement map: {-i4+i5 >= 0 -> -(-1+it21)*i4-i4+i5 >= 0, -4+i1 >= 0 -> -4+i1 >= 0, 4-i1 >= 0 -> 4-i1 >= 0, -1+i5 >= 0 -> (-1-(-1+it21)*i4+i5 >= 0 /\ -1+i5 >= 0)}

	Removed Trivial Updates

	Original rule:
	(-(-1+it21)*i4-i4+i5 >= 0 /\ -1+it21 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-(-1+it21)*i4+i5 >= 0 /\ -1+i5 >= 0) /\ i1'=i1, i3'=i3+3*it21, i5'=-it21*i4+i5
	New rule:
	(-(-1+it21)*i4-i4+i5 >= 0 /\ -1+it21 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-(-1+it21)*i4+i5 >= 0 /\ -1+i5 >= 0) /\ i3'=i3+3*it21, i5'=-it21*i4+i5

Start location: evalspeedpldi4start

Location map:
LoAT_sink -> 0
evalspeedpldi4start -> 1
evalspeedpldi4entryin -> 2
evalspeedpldi4returnin -> 3
evalspeedpldi4bb5in -> 4
evalspeedpldi4bb2in -> 5
evalspeedpldi4bb3in -> 6
evalspeedpldi4bb4in -> 7
evalspeedpldi4stop -> 8

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   3: (-1+i4 >= 0 /\ -2+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=4, i3'=1+i3
   4: (-4+i1 == 0 /\ -1+i5 >= 0) /\ i1'=5, i3'=1+i3
  16: (-2+i1 == 0 /\ -i4 >= 0) /\ i1'=8, i3'=2+i3
  17: (-2+i1 == 0 /\ i4-i5 >= 0) /\ i1'=8, i3'=2+i3
  18: (-4+i1 == 0 /\ -i5 >= 0) /\ i1'=8, i3'=2+i3
  19: (-5+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=4, i3'=2+i3, i5'=-1+i5
  20: (-i4+i5 >= 0 /\ -5+i1 == 0) /\ i1'=4, i3'=2+i3, i5'=-i4+i5
  21: (-i4+i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ i4 <= 0 /\ -1+i5 >= 0) /\ i1'=0
  22: (-(-1+it21)*i4-i4+i5 >= 0 /\ -1+it21 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-(-1+it21)*i4+i5 >= 0 /\ -1+i5 >= 0) /\ i3'=i3+3*it21, i5'=-it21*i4+i5

Dependency graph:
0 -> 3, 0 -> 16, 0 -> 17
3 -> 4, 3 -> 21, 3 -> 22
4 -> 19, 4 -> 20
19 -> 4, 19 -> 18, 19 -> 21, 19 -> 22
20 -> 4, 20 -> 18, 20 -> 21, 20 -> 22
22 -> 4, 22 -> 18, 22 -> 21

	Trace

	0[(-1+i1 == 0)]
	3[(-1+i4 >= 0 /\ -2+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-(-1+it21)*i4-i4+i5 >= 0 /\ -1+it21 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-(-1+it21)*i4+i5 >= 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{17[T]}
	{}
	{22[T]}
	
Step with 18

	Trace

	0[(-1+i1 == 0)]
	3[(-1+i4 >= 0 /\ -2+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-(-1+it21)*i4-i4+i5 >= 0 /\ -1+it21 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-(-1+it21)*i4+i5 >= 0 /\ -1+i5 >= 0)]
	18[(-4+i1 == 0 /\ -i5 >= 0)]
	
	Blocked

	{}
	{17[T]}
	{}
	{21[T], 22[T]}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	3[(-1+i4 >= 0 /\ -2+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-(-1+it21)*i4-i4+i5 >= 0 /\ -1+it21 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-(-1+it21)*i4+i5 >= 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{17[T]}
	{}
	{18[T], 21[T], 22[T]}
	
Step with 4

	Trace

	0[(-1+i1 == 0)]
	3[(-1+i4 >= 0 /\ -2+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-(-1+it21)*i4-i4+i5 >= 0 /\ -1+it21 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-(-1+it21)*i4+i5 >= 0 /\ -1+i5 >= 0)]
	4[(-4+i1 == 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{17[T]}
	{}
	{18[T], 21[T], 22[T]}
	{}
	
Step with 20

	Trace

	0[(-1+i1 == 0)]
	3[(-1+i4 >= 0 /\ -2+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-(-1+it21)*i4-i4+i5 >= 0 /\ -1+it21 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-(-1+it21)*i4+i5 >= 0 /\ -1+i5 >= 0)]
	4[(-4+i1 == 0 /\ -1+i5 >= 0)]
	20[(-i4+i5 >= 0 /\ -5+i1 == 0)]
	
	Blocked

	{}
	{17[T]}
	{}
	{18[T], 21[T], 22[T]}
	{}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	3[(-1+i4 >= 0 /\ -2+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-(-1+it21)*i4-i4+i5 >= 0 /\ -1+it21 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-(-1+it21)*i4+i5 >= 0 /\ -1+i5 >= 0)]
	4[(-4+i1 == 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{17[T]}
	{}
	{18[T], 21[T], 22[T]}
	{20[T]}
	
Step with 19

	Trace

	0[(-1+i1 == 0)]
	3[(-1+i4 >= 0 /\ -2+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-(-1+it21)*i4-i4+i5 >= 0 /\ -1+it21 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-(-1+it21)*i4+i5 >= 0 /\ -1+i5 >= 0)]
	4[(-4+i1 == 0 /\ -1+i5 >= 0)]
	19[(-5+i1 == 0 /\ -1+i4-i5 >= 0)]
	
	Blocked

	{}
	{17[T]}
	{}
	{18[T], 21[T], 22[T]}
	{20[T]}
	{}
	
Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -4+i1 == 0 /\ -1+i5 >= 0 /\ -1+i4-i5 >= 0) /\ i1'=4, i3'=3+i3, i5'=-1+i5
		New rule:
		(-4+i1 == 0 /\ -1+i5 >= 0 /\ -1+i4-i5 >= 0) /\ i1'=4, i3'=3+i3, i5'=-1+i5

	Loop Acceleration

	Original rule:
	(-4+i1 == 0 /\ -1+i5 >= 0 /\ -1+i4-i5 >= 0) /\ i1'=4, i3'=3+i3, i5'=-1+i5
	New rule:
	(-it117+i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+i4-i5 >= 0 /\ -1+it117 >= 0) /\ i1'=i1, i3'=i3+3*it117, i5'=-it117+i5

		-4+i1 >= 0 [0]: unchanged
		
		4-i1 >= 0 [0]: unchanged
		
		-1+i5 >= 0 [0]: montonic decrease yields -it117+i5 >= 0
		
		-1+i4-i5 >= 0 [0]: monotonic increase yields -1+i4-i5 >= 0
		
		Replacement map: {-4+i1 >= 0 -> -4+i1 >= 0, 4-i1 >= 0 -> 4-i1 >= 0, -1+i5 >= 0 -> -it117+i5 >= 0, -1+i4-i5 >= 0 -> -1+i4-i5 >= 0}

	Removed Trivial Updates

	Original rule:
	(-it117+i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+i4-i5 >= 0 /\ -1+it117 >= 0) /\ i1'=i1, i3'=i3+3*it117, i5'=-it117+i5
	New rule:
	(-it117+i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+i4-i5 >= 0 /\ -1+it117 >= 0) /\ i3'=i3+3*it117, i5'=-it117+i5
	
	Instantiation

	Original rule:
	(-it117+i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+i4-i5 >= 0 /\ -1+it117 >= 0) /\ i3'=i3+3*it117, i5'=-it117+i5
	New rule:
	(0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+i5 >= 0 /\ -1+i4-i5 >= 0) /\ i3'=i3+3*i5, i5'=0

Start location: evalspeedpldi4start

Location map:
LoAT_sink -> 0
evalspeedpldi4start -> 1
evalspeedpldi4entryin -> 2
evalspeedpldi4returnin -> 3
evalspeedpldi4bb5in -> 4
evalspeedpldi4bb2in -> 5
evalspeedpldi4bb3in -> 6
evalspeedpldi4bb4in -> 7
evalspeedpldi4stop -> 8

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   3: (-1+i4 >= 0 /\ -2+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=4, i3'=1+i3
   4: (-4+i1 == 0 /\ -1+i5 >= 0) /\ i1'=5, i3'=1+i3
  16: (-2+i1 == 0 /\ -i4 >= 0) /\ i1'=8, i3'=2+i3
  17: (-2+i1 == 0 /\ i4-i5 >= 0) /\ i1'=8, i3'=2+i3
  18: (-4+i1 == 0 /\ -i5 >= 0) /\ i1'=8, i3'=2+i3
  19: (-5+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=4, i3'=2+i3, i5'=-1+i5
  20: (-i4+i5 >= 0 /\ -5+i1 == 0) /\ i1'=4, i3'=2+i3, i5'=-i4+i5
  21: (-i4+i5 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ i4 <= 0 /\ -1+i5 >= 0) /\ i1'=0
  22: (-(-1+it21)*i4-i4+i5 >= 0 /\ -1+it21 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-(-1+it21)*i4+i5 >= 0 /\ -1+i5 >= 0) /\ i3'=i3+3*it21, i5'=-it21*i4+i5
  23: (0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+i5 >= 0 /\ -1+i4-i5 >= 0) /\ i3'=i3+3*i5, i5'=0

Dependency graph:
0 -> 3, 0 -> 16, 0 -> 17
3 -> 4, 3 -> 21, 3 -> 22, 3 -> 23
4 -> 19, 4 -> 20
19 -> 4, 19 -> 18, 19 -> 21, 19 -> 22, 19 -> 23
20 -> 4, 20 -> 18, 20 -> 21, 20 -> 22, 20 -> 23
22 -> 4, 22 -> 18, 22 -> 21, 22 -> 23
23 -> 4, 23 -> 18, 23 -> 21, 23 -> 22

	Trace

	0[(-1+i1 == 0)]
	3[(-1+i4 >= 0 /\ -2+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-(-1+it21)*i4-i4+i5 >= 0 /\ -1+it21 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-(-1+it21)*i4+i5 >= 0 /\ -1+i5 >= 0)]
	23[(0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+i5 >= 0 /\ -1+i4-i5 >= 0)]
	
	Blocked

	{}
	{17[T]}
	{}
	{18[T], 21[T], 22[T]}
	{23[T]}
	
Step with 18

	Trace

	0[(-1+i1 == 0)]
	3[(-1+i4 >= 0 /\ -2+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-(-1+it21)*i4-i4+i5 >= 0 /\ -1+it21 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-(-1+it21)*i4+i5 >= 0 /\ -1+i5 >= 0)]
	23[(0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+i5 >= 0 /\ -1+i4-i5 >= 0)]
	18[(-4+i1 == 0 /\ -i5 >= 0)]
	
	Blocked

	{}
	{17[T]}
	{}
	{18[T], 21[T], 22[T]}
	{21[T], 22[T], 23[T]}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	3[(-1+i4 >= 0 /\ -2+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-(-1+it21)*i4-i4+i5 >= 0 /\ -1+it21 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-(-1+it21)*i4+i5 >= 0 /\ -1+i5 >= 0)]
	23[(0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+i5 >= 0 /\ -1+i4-i5 >= 0)]
	
	Blocked

	{}
	{17[T]}
	{}
	{18[T], 21[T], 22[T]}
	{18[T], 21[T], 22[T], 23[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	3[(-1+i4 >= 0 /\ -2+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-(-1+it21)*i4-i4+i5 >= 0 /\ -1+it21 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-(-1+it21)*i4+i5 >= 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{17[T]}
	{}
	{18[T], 21[T], 22[T], 23[T]}
	
Step with 4

	Trace

	0[(-1+i1 == 0)]
	3[(-1+i4 >= 0 /\ -2+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-(-1+it21)*i4-i4+i5 >= 0 /\ -1+it21 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-(-1+it21)*i4+i5 >= 0 /\ -1+i5 >= 0)]
	4[(-4+i1 == 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{17[T]}
	{}
	{18[T], 21[T], 22[T], 23[T]}
	{}
	
Step with 20

	Trace

	0[(-1+i1 == 0)]
	3[(-1+i4 >= 0 /\ -2+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-(-1+it21)*i4-i4+i5 >= 0 /\ -1+it21 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-(-1+it21)*i4+i5 >= 0 /\ -1+i5 >= 0)]
	4[(-4+i1 == 0 /\ -1+i5 >= 0)]
	20[(-i4+i5 >= 0 /\ -5+i1 == 0)]
	
	Blocked

	{}
	{17[T]}
	{}
	{18[T], 21[T], 22[T], 23[T]}
	{}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	3[(-1+i4 >= 0 /\ -2+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-(-1+it21)*i4-i4+i5 >= 0 /\ -1+it21 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-(-1+it21)*i4+i5 >= 0 /\ -1+i5 >= 0)]
	4[(-4+i1 == 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{17[T]}
	{}
	{18[T], 21[T], 22[T], 23[T]}
	{20[T]}
	
Step with 19

	Trace

	0[(-1+i1 == 0)]
	3[(-1+i4 >= 0 /\ -2+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-(-1+it21)*i4-i4+i5 >= 0 /\ -1+it21 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-(-1+it21)*i4+i5 >= 0 /\ -1+i5 >= 0)]
	4[(-4+i1 == 0 /\ -1+i5 >= 0)]
	19[(-5+i1 == 0 /\ -1+i4-i5 >= 0)]
	
	Blocked

	{}
	{17[T]}
	{}
	{18[T], 21[T], 22[T], 23[T]}
	{20[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	3[(-1+i4 >= 0 /\ -2+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-(-1+it21)*i4-i4+i5 >= 0 /\ -1+it21 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-(-1+it21)*i4+i5 >= 0 /\ -1+i5 >= 0)]
	4[(-4+i1 == 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{17[T]}
	{}
	{18[T], 21[T], 22[T], 23[T]}
	{19[T], 20[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	3[(-1+i4 >= 0 /\ -2+i1 == 0 /\ -1-i4+i5 >= 0)]
	22[(-(-1+it21)*i4-i4+i5 >= 0 /\ -1+it21 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-(-1+it21)*i4+i5 >= 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{17[T]}
	{}
	{4[T], 18[T], 21[T], 22[T], 23[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	3[(-1+i4 >= 0 /\ -2+i1 == 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{17[T]}
	{22[T]}
	
Step with 4

	Trace

	0[(-1+i1 == 0)]
	3[(-1+i4 >= 0 /\ -2+i1 == 0 /\ -1-i4+i5 >= 0)]
	4[(-4+i1 == 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{17[T]}
	{22[T], 23[T]}
	{}
	
Step with 20

	Trace

	0[(-1+i1 == 0)]
	3[(-1+i4 >= 0 /\ -2+i1 == 0 /\ -1-i4+i5 >= 0)]
	4[(-4+i1 == 0 /\ -1+i5 >= 0)]
	20[(-i4+i5 >= 0 /\ -5+i1 == 0)]
	
	Blocked

	{}
	{17[T]}
	{22[T], 23[T]}
	{}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	3[(-1+i4 >= 0 /\ -2+i1 == 0 /\ -1-i4+i5 >= 0)]
	4[(-4+i1 == 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{17[T]}
	{22[T], 23[T]}
	{20[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	3[(-1+i4 >= 0 /\ -2+i1 == 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{17[T]}
	{4[T], 22[T], 23[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{3[T], 17[T]}
	
Step with 16

	Trace

	0[(-1+i1 == 0)]
	16[(-2+i1 == 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{3[T], 17[T]}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{3[T], 16[T], 17[T]}
	
Backtrack

	Trace

	Blocked

	{0[T]}
	
Accept

Poly(n^1)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁
  Temp_Vars:  
  Locations:  l0, l1, l2, l3, l4, l5, l6, l7
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁) → l6(X₀, X₁)
  t₈: l1(X₀, X₁) → l3(X₀, X₁-1)
  t₉: l2(X₀, X₁) → l3(X₀, X₁-X₀)
  t₄: l3(X₀, X₁) → l4(X₀, X₁) :|: 1 ≤ X₁
  t₅: l3(X₀, X₁) → l5(X₀, X₁) :|: X₁ ≤ 0
  t₆: l4(X₀, X₁) → l1(X₀, X₁) :|: 1+X₁ ≤ X₀
  t₇: l4(X₀, X₁) → l2(X₀, X₁) :|: X₀ ≤ X₁
  t₁₀: l5(X₀, X₁) → l7(X₀, X₁)
  t₃: l6(X₀, X₁) → l3(X₀, X₁) :|: 1 ≤ X₀ ∧ 1+X₀ ≤ X₁
  t₁: l6(X₀, X₁) → l5(X₀, X₁) :|: X₀ ≤ 0
  t₂: l6(X₀, X₁) → l5(X₀, X₁) :|: X₁ ≤ X₀


Preprocessing
  Found invariant 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ X₀ ≤ X₁ ∧ 1 ≤ X₀ for location l2


  Found invariant 1+X₁ ≤ X₀ ∧ 1 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 2 ≤ X₀ for location l1


  Found invariant 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l4


  Found invariant 1 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l3


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁
  Temp_Vars:  
  Locations:  l0, l1, l2, l3, l4, l5, l6, l7
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁) → l6(X₀, X₁)
  t₈: l1(X₀, X₁) → l3(X₀, X₁-1) :|: 1+X₁ ≤ X₀ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀ ∧ 3 ≤ X₀+X₁
  t₉: l2(X₀, X₁) → l3(X₀, X₁-X₀) :|: 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ X₀ ≤ X₁
  t₄: l3(X₀, X₁) → l4(X₀, X₁) :|: 1 ≤ X₁ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₁
  t₅: l3(X₀, X₁) → l5(X₀, X₁) :|: X₁ ≤ 0 ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₁
  t₆: l4(X₀, X₁) → l1(X₀, X₁) :|: 1+X₁ ≤ X₀ ∧ 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀+X₁
  t₇: l4(X₀, X₁) → l2(X₀, X₁) :|: X₀ ≤ X₁ ∧ 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀+X₁
  t₁₀: l5(X₀, X₁) → l7(X₀, X₁)
  t₃: l6(X₀, X₁) → l3(X₀, X₁) :|: 1 ≤ X₀ ∧ 1+X₀ ≤ X₁
  t₁: l6(X₀, X₁) → l5(X₀, X₁) :|: X₀ ≤ 0
  t₂: l6(X₀, X₁) → l5(X₀, X₁) :|: X₁ ≤ X₀


MPRF for transition t₄: l3(X₀, X₁) → l4(X₀, X₁) :|: 1 ≤ X₁ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₁ of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l1: [X₁-1]
    • l2: [X₁-1]
    • l3: [X₁]
    • l4: [X₁-1]




MPRF for transition t₆: l4(X₀, X₁) → l1(X₀, X₁) :|: 1+X₁ ≤ X₀ ∧ 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l1: [X₁-1]
    • l2: [X₁-X₀]
    • l3: [X₁]
    • l4: [X₁]




MPRF for transition t₇: l4(X₀, X₁) → l2(X₀, X₁) :|: X₀ ≤ X₁ ∧ 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ of depth 1:
  new bound:
    X₀+X₁+1 {O(n)}

  MPRF:
    • l1: [1+X₁-X₀]
    • l2: [X₁-X₀]
    • l3: [1+X₁-X₀]
    • l4: [1+X₁-X₀]




MPRF for transition t₈: l1(X₀, X₁) → l3(X₀, X₁-1) :|: 1+X₁ ≤ X₀ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀ ∧ 3 ≤ X₀+X₁ of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l1: [X₁]
    • l2: [X₁-X₀]
    • l3: [X₁]
    • l4: [X₁]




MPRF for transition t₉: l2(X₀, X₁) → l3(X₀, X₁-X₀) :|: 1 ≤ X₀ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ X₀ ≤ X₁ of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l1: [X₁]
    • l2: [1+X₁-X₀]
    • l3: [X₁]
    • l4: [X₁]




All Bounds
Timebounds
  Overall timebound:5⋅X₁+X₀+7 {O(n)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: X₁ {O(n)}
    t₅: 1 {O(1)}
    t₆: X₁ {O(n)}
    t₇: X₀+X₁+1 {O(n)}
    t₈: X₁ {O(n)}
    t₉: X₁ {O(n)}
    t₁₀: 1 {O(1)}


Costbounds
  Overall costbound: 5⋅X₁+X₀+7 {O(n)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: X₁ {O(n)}
    t₅: 1 {O(1)}
    t₆: X₁ {O(n)}
    t₇: X₀+X₁+1 {O(n)}
    t₈: X₁ {O(n)}
    t₉: X₁ {O(n)}
    t₁₀: 1 {O(1)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₁, X₀: X₀ {O(n)}
    t₁, X₁: X₁ {O(n)}
    t₂, X₀: X₀ {O(n)}
    t₂, X₁: X₁ {O(n)}
    t₃, X₀: X₀ {O(n)}
    t₃, X₁: X₁ {O(n)}
    t₄, X₀: X₀ {O(n)}
    t₄, X₁: X₁ {O(n)}
    t₅, X₀: 2⋅X₀ {O(n)}
    t₅, X₁: 2⋅X₁ {O(n)}
    t₆, X₀: X₀ {O(n)}
    t₆, X₁: X₁ {O(n)}
    t₇, X₀: X₀ {O(n)}
    t₇, X₁: X₁ {O(n)}
    t₈, X₀: X₀ {O(n)}
    t₈, X₁: X₁ {O(n)}
    t₉, X₀: X₀ {O(n)}
    t₉, X₁: X₁ {O(n)}
    t₁₀, X₀: 4⋅X₀ {O(n)}
    t₁₀, X₁: 4⋅X₁ {O(n)}

