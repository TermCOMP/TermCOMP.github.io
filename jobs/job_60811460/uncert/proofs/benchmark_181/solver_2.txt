MAYBE

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [lbl13/25,lbl53/25]
1. recursive  : [lbl53_loop_cont/26,lbl71/25]
2. non_recursive  : [exit_location/1]
3. non_recursive  : [stop/13]
4. non_recursive  : [lbl71_loop_cont/14]
5. non_recursive  : [start/13]
6. non_recursive  : [start0/13]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into lbl53/25
1. SCC is partially evaluated into lbl71/25
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into lbl71_loop_cont/14
5. SCC is partially evaluated into start/13
6. SCC is partially evaluated into start0/13

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations lbl53/25 
* CE 13 is refined into CE [20] 
* CE 11 is refined into CE [21] 
* CE 8 is refined into CE [22] 
* CE 10 is refined into CE [23] 
* CE 9 is refined into CE [24] 
* CE 12 is refined into CE [25] 
* CE 7 is refined into CE [26] 


### Cost equations --> "Loop" of lbl53/25 
* CEs [25] --> Loop 17 
* CEs [26] --> Loop 18 
* CEs [20] --> Loop 19 
* CEs [21] --> Loop 20 
* CEs [22] --> Loop 21 
* CEs [23] --> Loop 22 
* CEs [24] --> Loop 23 

### Ranking functions of CR lbl53(A,B,C,D,E,F,G,H,I,J,K,L,N,O,P,Q,R,S,T,U,V,W,X,Y,Z) 

#### Partial ranking functions of CR lbl53(A,B,C,D,E,F,G,H,I,J,K,L,N,O,P,Q,R,S,T,U,V,W,X,Y,Z) 
* Partial RF of phase [17,18]:
  - RF of loop [17:1]:
    A-B-2 depends on loops [18:1] 
    A-I-1 depends on loops [18:1] 
    -B+H-2 depends on loops [18:1] 
    -B+K-1 depends on loops [18:1] 
    H-I-1 depends on loops [18:1] 
    -I+K depends on loops [18:1] 
  - RF of loop [18:1]:
    B depends on loops [17:1] 
    D
    I-1 depends on loops [17:1] 
    K-1


### Specialization of cost equations lbl71/25 
* CE 16 is refined into CE [27,28] 
* CE 19 is refined into CE [29] 
* CE 18 is refined into CE [30,31] 
* CE 17 is refined into CE [32,33,34,35] 


### Cost equations --> "Loop" of lbl71/25 
* CEs [35] --> Loop 24 
* CEs [34] --> Loop 25 
* CEs [33] --> Loop 26 
* CEs [32] --> Loop 27 
* CEs [27] --> Loop 28 
* CEs [28] --> Loop 29 
* CEs [29] --> Loop 30 
* CEs [31] --> Loop 31 
* CEs [30] --> Loop 32 

### Ranking functions of CR lbl71(A,B,C,D,E,F,G,H,I,J,K,L,N,O,P,Q,R,S,T,U,V,W,X,Y,Z) 

#### Partial ranking functions of CR lbl71(A,B,C,D,E,F,G,H,I,J,K,L,N,O,P,Q,R,S,T,U,V,W,X,Y,Z) 
* Partial RF of phase [24,25,26,27]:
  - RF of loop [25:1]:
    A-I-2 depends on loops [24:1,26:1,27:1] 
    H-I-2 depends on loops [24:1,26:1,27:1] 
    -I+K-1 depends on loops [24:1,26:1,27:1] 
  - RF of loop [26:1,27:1]:
    K-1
  - RF of loop [27:1]:
    I depends on loops [24:1,25:1] 


### Specialization of cost equations lbl71_loop_cont/14 
* CE 14 is refined into CE [36] 
* CE 15 is refined into CE [37] 


### Cost equations --> "Loop" of lbl71_loop_cont/14 
* CEs [36] --> Loop 33 
* CEs [37] --> Loop 34 

### Ranking functions of CR lbl71_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N) 

#### Partial ranking functions of CR lbl71_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N) 


### Specialization of cost equations start/13 
* CE 2 is refined into CE [38,39] 
* CE 3 is refined into CE [40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57] 
* CE 4 is refined into CE [58,59] 
* CE 6 is refined into CE [60,61,62,63,64,65,66,67,68,69] 
* CE 5 is refined into CE [70] 


### Cost equations --> "Loop" of start/13 
* CEs [42,45] --> Loop 35 
* CEs [49,50,51,52,53,54,55] --> Loop 36 
* CEs [39,40,41,43,44,46,59,61,62,63,65,66] --> Loop 37 
* CEs [38,64,67] --> Loop 38 
* CEs [70] --> Loop 39 
* CEs [58,60] --> Loop 40 
* CEs [56,57] --> Loop 41 
* CEs [47,48,68,69] --> Loop 42 

### Ranking functions of CR start(A,B,C,D,E,F,G,H,I,J,K,L,N) 

#### Partial ranking functions of CR start(A,B,C,D,E,F,G,H,I,J,K,L,N) 


### Specialization of cost equations start0/13 
* CE 1 is refined into CE [71,72,73,74,75,76,77,78] 


### Cost equations --> "Loop" of start0/13 
* CEs [78] --> Loop 43 
* CEs [77] --> Loop 44 
* CEs [76] --> Loop 45 
* CEs [75] --> Loop 46 
* CEs [74] --> Loop 47 
* CEs [73] --> Loop 48 
* CEs [72] --> Loop 49 
* CEs [71] --> Loop 50 

### Ranking functions of CR start0(A,B,C,D,E,F,G,H,I,J,K,L,N) 

#### Partial ranking functions of CR start0(A,B,C,D,E,F,G,H,I,J,K,L,N) 


Computing Bounds
=====================================

#### Cost of chains of lbl53(A,B,C,D,E,F,G,H,I,J,K,L,N,O,P,Q,R,S,T,U,V,W,X,Y,Z):
* Chain [[17,18],22]: 1*it(17)+1*it(18)+0
  Such that:aux(4) =< -B+D+P+1
it(18) =< D
aux(79) =< D+P+1
aux(76) =< 2*D+P+1
aux(80) =< -B+D+P
aux(81) =< -B+O
aux(82) =< -B+P
aux(83) =< -I+P+1
aux(84) =< O
aux(14) =< aux(82)
aux(14) =< aux(83)
aux(57) =< aux(84)
aux(37) =< aux(76)
aux(37) =< aux(79)
aux(57) =< aux(79)
it(18) =< aux(79)
aux(69) =< aux(57)
aux(69) =< aux(37)+1
aux(49) =< aux(37)+1
aux(9) =< it(18)*aux(69)
aux(58) =< it(18)*aux(57)
aux(1) =< it(18)*aux(57)
aux(50) =< it(18)*aux(49)
aux(1) =< it(18)*aux(49)
aux(3) =< it(18)*aux(37)
aux(5) =< it(18)*aux(37)
aux(30) =< it(18)*aux(84)
aux(3) =< it(18)*aux(84)
aux(5) =< aux(30)
aux(11) =< aux(9)
aux(11) =< aux(58)
aux(7) =< aux(58)
aux(7) =< aux(50)
it(17) =< aux(30)+aux(80)
it(17) =< aux(9)+aux(81)
it(17) =< aux(5)+aux(80)
it(17) =< aux(3)+aux(4)
it(17) =< aux(1)+aux(81)
it(17) =< aux(11)+aux(14)
it(17) =< aux(7)+aux(14)
it(17) =< aux(11)+aux(81)
it(17) =< aux(7)+aux(81)

  with precondition: [N=2,R=0,I=B+1,A=H,A=O,C=Q,E=S,F=T,G=U,A=V,J=X,L=Z,K=D+P+1,K=D+W,K=D+Y,1>=D,D>=0,I>=1,K>=2,A>=K+1,D+K>=I+1] 

* Chain [[17,18],21]: 1*it(17)+0
  Such that:aux(4) =< -B+P+1
aux(86) =< A-B
aux(87) =< -B+P
it(17) =< aux(87)
it(17) =< aux(86)
it(17) =< aux(87)
it(17) =< aux(4)
it(17) =< aux(86)
it(17) =< aux(87)
it(17) =< aux(87)
it(17) =< aux(86)
it(17) =< aux(86)

  with precondition: [D=1,N=3,R=0,W=0,I=B+1,A=H,A=O,K=P+1,C=Q,E=S,G=U,A=V,J=X,K=Y+1,L=Z,I>=1,K>=I+1,A>=K+1] 

* Chain [[17,18],20]: 1*it(17)+1*it(18)+0
  Such that:aux(76) =< D+K
aux(6) =< -I+K
aux(4) =< -I+K+1
aux(79) =< K
it(18) =< K-Y
aux(88) =< A
aux(89) =< A-I
aux(90) =< A-I+1
aux(91) =< -B+K+P-Y
aux(92) =< -B+W
aux(93) =< D-I-R+W
aux(94) =< -I+P+1
aux(16) =< aux(91)
aux(14) =< aux(92)
aux(16) =< aux(93)
aux(14) =< aux(94)
aux(57) =< aux(88)
aux(37) =< aux(76)
aux(37) =< aux(79)
aux(57) =< aux(79)
it(18) =< aux(79)
aux(69) =< aux(57)
aux(69) =< aux(37)+1
aux(49) =< aux(37)+1
aux(9) =< it(18)*aux(69)
aux(58) =< it(18)*aux(57)
aux(1) =< it(18)*aux(57)
aux(50) =< it(18)*aux(49)
aux(1) =< it(18)*aux(49)
aux(3) =< it(18)*aux(37)
aux(5) =< it(18)*aux(37)
aux(30) =< it(18)*aux(88)
aux(3) =< it(18)*aux(88)
aux(5) =< aux(30)
aux(11) =< aux(9)
aux(11) =< aux(58)
aux(7) =< aux(58)
aux(7) =< aux(50)
it(17) =< aux(30)+aux(16)
it(17) =< aux(9)+aux(89)
it(17) =< aux(5)+aux(6)
it(17) =< aux(3)+aux(4)
it(17) =< aux(1)+aux(90)
it(17) =< aux(11)+aux(14)
it(17) =< aux(7)+aux(14)
it(17) =< aux(11)+aux(89)
it(17) =< aux(7)+aux(90)

  with precondition: [N=3,I=B+1,A=H,A=O,C=Q,E=S,G=U,A=V,P+1=W,J=X,L=Z,K+R=D+Y,1>=D,I>=1,R>=0,A>=K+1,D>=R,D+P>=R+1,K+2*D>=2*R+I+2,K+R>=D+P+2] 

* Chain [[17,18],19]: 1*it(17)+1*it(18)+0
  Such that:it(18) =< D
aux(76) =< D+K
aux(79) =< K
aux(95) =< A
aux(96) =< A-B
aux(97) =< -B+K
aux(98) =< -2*I+2*K
aux(99) =< -I+K
aux(16) =< aux(97)
aux(14) =< aux(98)
aux(14) =< aux(99)
aux(16) =< aux(99)
aux(57) =< aux(95)
aux(37) =< aux(76)
aux(37) =< aux(79)
aux(57) =< aux(79)
it(18) =< aux(79)
aux(69) =< aux(57)
aux(69) =< aux(37)+1
aux(49) =< aux(37)+1
aux(9) =< it(18)*aux(69)
aux(58) =< it(18)*aux(57)
aux(1) =< it(18)*aux(57)
aux(50) =< it(18)*aux(49)
aux(1) =< it(18)*aux(49)
aux(3) =< it(18)*aux(37)
aux(5) =< it(18)*aux(37)
aux(30) =< it(18)*aux(95)
aux(3) =< it(18)*aux(95)
aux(5) =< aux(30)
aux(11) =< aux(9)
aux(11) =< aux(58)
aux(7) =< aux(58)
aux(7) =< aux(50)
it(17) =< aux(30)+aux(16)
it(17) =< aux(9)+aux(96)
it(17) =< aux(5)+aux(97)
it(17) =< aux(3)+aux(97)
it(17) =< aux(1)+aux(96)
it(17) =< aux(11)+aux(14)
it(17) =< aux(7)+aux(14)
it(17) =< aux(11)+aux(96)
it(17) =< aux(7)+aux(96)

  with precondition: [N=4,I=B+1,A=H,1>=D,D>=0,I>=1,K>=2,A>=K+1,D+K>=I+1] 

* Chain [23]: 0
  with precondition: [B=0,D=1,I=1,K=1,N=2,P=0,R=1,W=1,Y=0,H=A,Q=C,S=E,T=F,U=G,X=J,Z=L,H=O,H=V,H>=2] 

* Chain [22]: 0
  with precondition: [D=0,N=2,R=0,H=A,I=B+1,Q=C,S=E,T=F,U=G,X=J,I=K,Z=L,H=O,I=P+1,H=V,I=W,I=Y,I>=1,H>=I+1] 

* Chain [21]: 0
  with precondition: [D=1,N=3,R=0,W=0,H=A,I=B+1,Q=C,S=E,U=G,X=J,I=K,Z=L,H=O,I=P+1,H=V,I=Y+1,I>=2,H>=I+1] 

* Chain [20]: 0
  with precondition: [N=3,H=A,I=B+1,Q=C,S=E,U=G,X=J,Z=L,H=O,I=P+1,D=R,H=V,I=W,K=Y,1>=D,D>=0,I>=1,K>=I+1,H>=K+1] 

* Chain [19]: 0
  with precondition: [N=4,H=A,I=B+1,1>=D,D>=0,I>=1,K>=I,H>=K+1] 


#### Cost of chains of lbl71(A,B,C,D,E,F,G,H,I,J,K,L,N,O,P,Q,R,S,T,U,V,W,X,Y,Z):
* Chain [[24,25,26,27]]...: 3*it(24)+3*it(26)+1*s(83)+0
  Such that:aux(106) =< -D+2*K
aux(212) =< H
aux(213) =< H-I+2*K
aux(109) =< -I+2*K
aux(224) =< K
aux(108) =< aux(212)
aux(149) =< aux(212)
s(30) =< aux(212)
aux(108) =< aux(213)
aux(149) =< aux(213)
aux(106) =< aux(224)
aux(109) =< aux(224)
it(26) =< aux(224)
s(30) =< aux(224)
aux(151) =< aux(109)
aux(150) =< aux(109)-1
aux(149) =< aux(108)
aux(106) =< s(30)-2
aux(151) =< aux(106)+2
aux(150) =< aux(106)+1
s(84) =< it(26)*aux(149)
s(86) =< it(26)*aux(151)
s(85) =< it(26)*aux(150)
s(83) =< s(85)
s(83) =< s(84)
s(83) =< s(86)

  with precondition: [A=H,K>=2,D>=0,I>=D,K>=I+1,A>=K+1] 

* Chain [[24,25,26,27],32]: 3*it(24)+3*it(26)+1*s(83)+0
  Such that:aux(106) =< -D+2*K
aux(109) =< -I+2*K
aux(213) =< -I+2*K+O
aux(212) =< O
aux(225) =< K
aux(108) =< aux(212)
aux(149) =< aux(212)
s(30) =< aux(212)
aux(108) =< aux(213)
aux(149) =< aux(213)
aux(106) =< aux(225)
aux(109) =< aux(225)
it(26) =< aux(225)
s(30) =< aux(225)
aux(151) =< aux(109)
aux(150) =< aux(109)-1
aux(149) =< aux(108)
aux(106) =< s(30)-2
aux(151) =< aux(106)+2
aux(150) =< aux(106)+1
s(84) =< it(26)*aux(149)
s(86) =< it(26)*aux(151)
s(85) =< it(26)*aux(150)
s(83) =< s(85)
s(83) =< s(84)
s(83) =< s(86)

  with precondition: [N=2,P=0,R=1,W=1,Y=0,A=H,A=O,C=Q,E=S,G=U,A=V,J=X,L=Z,D>=0,K>=2,I>=D,K>=I+1,A>=K+1] 

* Chain [[24,25,26,27],31]: 3*it(24)+3*it(26)+1*s(83)+1*s(88)+1*s(110)+0
  Such that:s(88) =< 1
aux(106) =< -D+2*K
aux(109) =< -I+2*K
aux(213) =< -I+2*K+O
s(92) =< K+O-P
aux(221) =< K-P
s(90) =< P+3
aux(228) =< K
aux(229) =< O
aux(230) =< P+2
aux(226) =< aux(228)
s(92) =< aux(229)
aux(226) =< aux(230)
s(97) =< aux(229)
s(98) =< s(90)
s(98) =< aux(230)
s(97) =< aux(230)
s(88) =< aux(230)
s(99) =< s(97)
s(99) =< s(98)+1
s(100) =< s(98)+1
s(101) =< s(88)*s(99)
s(102) =< s(88)*s(97)
s(103) =< s(88)*s(97)
s(104) =< s(88)*s(100)
s(103) =< s(88)*s(100)
s(105) =< s(88)*s(98)
s(106) =< s(88)*s(98)
s(107) =< s(88)*aux(229)
s(105) =< s(88)*aux(229)
s(106) =< s(107)
s(108) =< s(101)
s(108) =< s(102)
s(109) =< s(102)
s(109) =< s(104)
s(110) =< s(107)+aux(226)
s(110) =< s(101)+s(92)
s(110) =< s(106)+aux(226)
s(110) =< s(105)+aux(226)
s(110) =< s(103)+s(92)
s(110) =< s(108)+aux(226)
s(110) =< s(109)+aux(226)
s(110) =< s(108)+s(92)
s(110) =< s(109)+s(92)
aux(108) =< aux(229)
aux(149) =< aux(229)
s(30) =< aux(229)
aux(108) =< aux(213)
aux(149) =< aux(213)
aux(106) =< aux(228)
aux(109) =< aux(228)
it(26) =< aux(228)
s(30) =< aux(228)
it(26) =< aux(221)
aux(151) =< aux(109)
aux(150) =< aux(109)-1
aux(149) =< aux(108)
aux(106) =< s(30)-2
aux(151) =< aux(106)+2
aux(150) =< aux(106)+1
s(84) =< it(26)*aux(149)
s(86) =< it(26)*aux(151)
s(85) =< it(26)*aux(150)
s(83) =< s(85)
s(83) =< s(84)
s(83) =< s(86)

  with precondition: [N=2,R=0,A=H,A=O,C=Q,E=S,G=U,A=V,P+1=W,J=X,P+1=Y,L=Z,D>=0,P>=0,I>=D,K>=I+1,A>=K+1,K>=P+2,2*K>=I+P+4] 

* Chain [[24,25,26,27],30]: 3*it(24)+3*it(26)+1*s(83)+0
  Such that:aux(106) =< -D+2*K
aux(212) =< H
aux(213) =< H-I+2*K
aux(109) =< -I+2*K
aux(231) =< K
aux(108) =< aux(212)
aux(149) =< aux(212)
s(30) =< aux(212)
aux(108) =< aux(213)
aux(149) =< aux(213)
aux(106) =< aux(231)
aux(109) =< aux(231)
it(26) =< aux(231)
s(30) =< aux(231)
aux(151) =< aux(109)
aux(150) =< aux(109)-1
aux(149) =< aux(108)
aux(106) =< s(30)-2
aux(151) =< aux(106)+2
aux(150) =< aux(106)+1
s(84) =< it(26)*aux(149)
s(86) =< it(26)*aux(151)
s(85) =< it(26)*aux(150)
s(83) =< s(85)
s(83) =< s(84)
s(83) =< s(86)

  with precondition: [N=4,A=H,D>=0,K>=2,I>=D,K>=I+1,A>=K+1] 

* Chain [[24,25,26,27],29]: 3*it(24)+3*it(26)+1*s(83)+1*s(111)+1*s(134)+0
  Such that:s(111) =< 1
aux(106) =< -D+2*K
aux(213) =< H-I+2*K
aux(109) =< -I+2*K
s(117) =< 2*K
aux(233) =< H
aux(234) =< H+K
aux(235) =< K
aux(236) =< K+1
s(112) =< aux(234)
s(113) =< aux(234)
aux(221) =< aux(235)
s(113) =< aux(235)
aux(221) =< aux(236)
s(112) =< aux(236)
s(120) =< s(117)
s(120) =< aux(235)
s(121) =< aux(233)
s(122) =< s(112)
s(122) =< s(113)
s(121) =< s(113)
s(111) =< s(113)
s(123) =< s(121)
s(123) =< s(122)+1
s(124) =< s(122)+1
s(125) =< s(111)*s(123)
s(126) =< s(111)*s(121)
s(127) =< s(111)*s(121)
s(128) =< s(111)*s(124)
s(127) =< s(111)*s(124)
s(129) =< s(111)*s(122)
s(130) =< s(111)*s(122)
s(131) =< s(111)*aux(233)
s(129) =< s(111)*aux(233)
s(130) =< s(131)
s(132) =< s(125)
s(132) =< s(126)
s(133) =< s(126)
s(133) =< s(128)
s(134) =< s(131)+aux(235)
s(134) =< s(125)+aux(234)
s(134) =< s(130)+aux(235)
s(134) =< s(129)+aux(235)
s(134) =< s(127)+aux(234)
s(134) =< s(132)+s(120)
s(134) =< s(133)+s(120)
s(134) =< s(132)+aux(234)
s(134) =< s(133)+aux(234)
aux(108) =< aux(233)
aux(149) =< aux(233)
s(30) =< aux(233)
aux(108) =< aux(213)
aux(149) =< aux(213)
aux(106) =< aux(235)
aux(109) =< aux(235)
it(26) =< aux(235)
s(30) =< aux(235)
it(26) =< aux(221)
aux(151) =< aux(109)
aux(150) =< aux(109)-1
aux(149) =< aux(108)
aux(106) =< s(30)-2
aux(151) =< aux(106)+2
aux(150) =< aux(106)+1
s(84) =< it(26)*aux(149)
s(86) =< it(26)*aux(151)
s(85) =< it(26)*aux(150)
s(83) =< s(85)
s(83) =< s(84)
s(83) =< s(86)

  with precondition: [N=4,A=H,D>=0,I>=D,K>=I+1,2*K>=I+4,A>=K+1] 

* Chain [[24,25,26,27],28]: 3*it(24)+3*it(26)+1*s(83)+0
  Such that:aux(106) =< -D+2*K
aux(212) =< H
aux(213) =< H-I+2*K
aux(109) =< -I+2*K
aux(237) =< K
aux(108) =< aux(212)
aux(149) =< aux(212)
s(30) =< aux(212)
aux(108) =< aux(213)
aux(149) =< aux(213)
aux(106) =< aux(237)
aux(109) =< aux(237)
it(26) =< aux(237)
s(30) =< aux(237)
aux(151) =< aux(109)
aux(150) =< aux(109)-1
aux(149) =< aux(108)
aux(106) =< s(30)-2
aux(151) =< aux(106)+2
aux(150) =< aux(106)+1
s(84) =< it(26)*aux(149)
s(86) =< it(26)*aux(151)
s(85) =< it(26)*aux(150)
s(83) =< s(85)
s(83) =< s(84)
s(83) =< s(86)

  with precondition: [N=4,A=H,D>=0,K>=2,I>=D,K>=I+1,A>=K+1] 

* Chain [32]: 0
  with precondition: [D=0,I=0,K=1,N=2,P=0,R=1,W=1,Y=0,Q=C,S=E,T=F,U=G,A=H,X=J,Z=L,A=O,A=V,A>=2] 

* Chain [31]: 1*s(88)+1*s(110)+0
  Such that:s(88) =< 1
s(95) =< A
s(92) =< A-I
s(89) =< K
s(90) =< K+1
aux(226) =< -D+K
aux(227) =< -I+K
s(93) =< aux(226)
s(93) =< aux(227)
s(97) =< s(95)
s(98) =< s(90)
s(98) =< s(89)
s(97) =< s(89)
s(88) =< s(89)
s(99) =< s(97)
s(99) =< s(98)+1
s(100) =< s(98)+1
s(101) =< s(88)*s(99)
s(102) =< s(88)*s(97)
s(103) =< s(88)*s(97)
s(104) =< s(88)*s(100)
s(103) =< s(88)*s(100)
s(105) =< s(88)*s(98)
s(106) =< s(88)*s(98)
s(107) =< s(88)*s(95)
s(105) =< s(88)*s(95)
s(106) =< s(107)
s(108) =< s(101)
s(108) =< s(102)
s(109) =< s(102)
s(109) =< s(104)
s(110) =< s(107)+aux(227)
s(110) =< s(101)+s(92)
s(110) =< s(106)+aux(227)
s(110) =< s(105)+aux(227)
s(110) =< s(103)+s(92)
s(110) =< s(108)+s(93)
s(110) =< s(109)+s(93)
s(110) =< s(108)+s(92)
s(110) =< s(109)+s(92)

  with precondition: [N=2,R=0,Q=C,S=E,T=F,U=G,A=H,X=J,Y+1=K,Z=L,A=O,Y=P+1,A=V,Y=W,D>=0,Y>=1,I>=D,Y>=I,A>=Y+2] 

* Chain [30]: 0
  with precondition: [N=4] 

* Chain [29]: 1*s(111)+1*s(134)+0
  Such that:s(111) =< 1
s(114) =< H
s(115) =< H-I
s(117) =< -2*I+2*K
s(113) =< K
s(112) =< K+1
aux(232) =< -I+K
s(120) =< s(117)
s(120) =< aux(232)
s(121) =< s(114)
s(122) =< s(112)
s(122) =< s(113)
s(121) =< s(113)
s(111) =< s(113)
s(123) =< s(121)
s(123) =< s(122)+1
s(124) =< s(122)+1
s(125) =< s(111)*s(123)
s(126) =< s(111)*s(121)
s(127) =< s(111)*s(121)
s(128) =< s(111)*s(124)
s(127) =< s(111)*s(124)
s(129) =< s(111)*s(122)
s(130) =< s(111)*s(122)
s(131) =< s(111)*s(114)
s(129) =< s(111)*s(114)
s(130) =< s(131)
s(132) =< s(125)
s(132) =< s(126)
s(133) =< s(126)
s(133) =< s(128)
s(134) =< s(131)+aux(232)
s(134) =< s(125)+s(115)
s(134) =< s(130)+aux(232)
s(134) =< s(129)+aux(232)
s(134) =< s(127)+s(115)
s(134) =< s(132)+s(120)
s(134) =< s(133)+s(120)
s(134) =< s(132)+s(115)
s(134) =< s(133)+s(115)

  with precondition: [N=4,A=H,D>=0,K>=2,I>=D,K>=I+1,A>=K+1] 

* Chain [28]: 0
  with precondition: [N=4,A=H,D>=0,I>=D,K>=I+1,A>=K+1] 


#### Cost of chains of lbl71_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N):
* Chain [34]: 0
  with precondition: [A=2] 

* Chain [33]: 0
  with precondition: [A=4] 


#### Cost of chains of start(A,B,C,D,E,F,G,H,I,J,K,L,N):
* Chain [42]...: 12*s(197)+4*s(203)+12*s(204)+1
  Such that:aux(251) =< A
aux(252) =< 2*A
aux(253) =< 3*A
s(189) =< aux(252)
s(192) =< aux(252)
s(194) =< aux(251)
s(195) =< aux(251)
s(194) =< aux(253)
s(195) =< aux(253)
s(189) =< aux(251)
s(192) =< aux(251)
s(197) =< aux(251)
s(198) =< s(192)
s(199) =< s(192)-1
s(195) =< s(194)
s(189) =< aux(251)-2
s(198) =< s(189)+2
s(199) =< s(189)+1
s(200) =< s(197)*s(195)
s(201) =< s(197)*s(198)
s(202) =< s(197)*s(199)
s(203) =< s(202)
s(203) =< s(200)
s(203) =< s(201)

  with precondition: [H=A,C=B,E=D,G=F,J=I,L=K,H>=3] 

* Chain [41]...: 2*s(280)+6*s(289)+2*s(295)+6*s(296)+1
  Such that:aux(260) =< H
aux(261) =< 2*H
aux(262) =< 3*H
s(261) =< aux(261)
s(281) =< aux(261)
s(284) =< aux(261)
s(261) =< aux(262)
s(286) =< aux(260)
s(287) =< aux(260)
s(286) =< aux(262)
s(287) =< aux(262)
s(281) =< aux(260)
s(284) =< aux(260)
s(289) =< aux(260)
s(290) =< s(284)
s(291) =< s(284)-1
s(287) =< s(286)
s(281) =< aux(260)-2
s(290) =< s(281)+2
s(291) =< s(281)+1
s(292) =< s(289)*s(287)
s(293) =< s(289)*s(290)
s(294) =< s(289)*s(291)
s(295) =< s(294)
s(295) =< s(292)
s(295) =< s(293)
s(280) =< s(261)
s(280) =< aux(260)

  with precondition: [H=A,C=B,E=D,G=F,J=I,L=K,H>=4] 

* Chain [40]: 0
  with precondition: [A=2,H=2,C=B,E=D,G=F,J=I,L=K] 

* Chain [39]: 0
  with precondition: [H=A,C=B,E=D,G=F,J=I,L=K,1>=H] 

* Chain [38]: 0
  with precondition: [H=A,C=B,E=D,G=F,J=I,L=K,H>=2] 

* Chain [37]: 1*s(364)+6*s(373)+2*s(379)+24*s(380)+4*s(381)+2*s(402)+2*s(429)+16*s(432)+5*s(438)+1*s(502)+1*s(526)+3*s(530)+1*s(536)+1*s(575)+1*s(601)+1
  Such that:aux(274) =< H+1
aux(275) =< H+2
aux(277) =< 2*H+1
aux(278) =< 2*H+2
aux(283) =< 1
aux(284) =< A
aux(285) =< 2*A
aux(286) =< 3*A
aux(287) =< H
aux(288) =< 2*H
aux(289) =< 3*H
s(381) =< aux(283)
s(502) =< aux(283)
s(575) =< aux(283)
s(381) =< aux(287)
s(391) =< aux(287)
s(391) =< aux(287)+1
s(392) =< aux(287)+1
s(393) =< s(381)*s(391)
s(394) =< s(381)*aux(287)
s(395) =< s(381)*aux(287)
s(396) =< s(381)*s(392)
s(395) =< s(381)*s(392)
s(398) =< s(381)*aux(287)
s(398) =< s(394)
s(400) =< s(393)
s(400) =< s(394)
s(401) =< s(394)
s(401) =< s(396)
s(402) =< s(394)+aux(287)
s(402) =< s(393)+aux(287)
s(402) =< s(398)+aux(287)
s(402) =< s(395)+aux(287)
s(402) =< s(400)+aux(287)
s(402) =< s(401)+aux(287)
s(413) =< aux(288)
s(350) =< aux(288)
s(350) =< aux(287)
s(429) =< s(394)+aux(287)
s(429) =< s(393)+aux(287)
s(429) =< s(398)+aux(287)
s(429) =< s(395)+aux(287)
s(429) =< s(400)+s(350)
s(429) =< s(401)+s(350)
s(429) =< s(400)+aux(287)
s(429) =< s(401)+aux(287)
s(430) =< aux(287)
s(431) =< aux(287)
s(430) =< aux(289)
s(431) =< aux(289)
s(413) =< aux(287)
s(432) =< aux(287)
s(433) =< s(350)
s(434) =< s(350)-1
s(431) =< s(430)
s(413) =< aux(287)-2
s(433) =< s(413)+2
s(434) =< s(413)+1
s(435) =< s(432)*s(431)
s(436) =< s(432)*s(433)
s(437) =< s(432)*s(434)
s(438) =< s(437)
s(438) =< s(435)
s(438) =< s(436)
s(507) =< aux(274)
s(511) =< aux(274)
s(507) =< aux(275)
s(508) =< aux(275)
s(506) =< aux(277)
s(511) =< aux(277)
s(506) =< aux(278)
s(508) =< aux(278)
s(512) =< aux(287)
s(506) =< aux(287)
s(512) =< s(511)
s(514) =< s(508)
s(514) =< s(511)
s(502) =< s(511)
s(515) =< s(512)
s(515) =< s(514)+1
s(516) =< s(514)+1
s(517) =< s(502)*s(515)
s(518) =< s(502)*s(512)
s(519) =< s(502)*s(512)
s(520) =< s(502)*s(516)
s(519) =< s(502)*s(516)
s(521) =< s(502)*s(514)
s(522) =< s(502)*s(514)
s(523) =< s(502)*aux(287)
s(521) =< s(502)*aux(287)
s(522) =< s(523)
s(524) =< s(517)
s(524) =< s(518)
s(525) =< s(518)
s(525) =< s(520)
s(526) =< s(523)+s(512)
s(526) =< s(517)+s(506)
s(526) =< s(522)+s(512)
s(526) =< s(521)+s(512)
s(526) =< s(519)+s(506)
s(526) =< s(524)+s(512)
s(526) =< s(525)+s(512)
s(526) =< s(524)+s(506)
s(526) =< s(525)+s(506)
s(530) =< aux(287)
s(530) =< s(507)
s(533) =< s(530)*s(431)
s(534) =< s(530)*s(433)
s(535) =< s(530)*s(434)
s(536) =< s(535)
s(536) =< s(533)
s(536) =< s(534)
s(588) =< aux(287)
s(588) =< s(350)
s(575) =< s(350)
s(590) =< s(588)
s(590) =< s(350)+1
s(591) =< s(350)+1
s(592) =< s(575)*s(590)
s(593) =< s(575)*s(588)
s(594) =< s(575)*s(588)
s(595) =< s(575)*s(591)
s(594) =< s(575)*s(591)
s(596) =< s(575)*s(350)
s(597) =< s(575)*s(350)
s(598) =< s(575)*aux(287)
s(596) =< s(575)*aux(287)
s(597) =< s(598)
s(599) =< s(592)
s(599) =< s(593)
s(600) =< s(593)
s(600) =< s(595)
s(601) =< s(598)+aux(287)
s(601) =< s(592)+aux(288)
s(601) =< s(597)+aux(287)
s(601) =< s(596)+aux(287)
s(601) =< s(594)+aux(288)
s(601) =< s(599)+s(350)
s(601) =< s(600)+s(350)
s(601) =< s(599)+aux(288)
s(601) =< s(600)+aux(288)
s(365) =< aux(285)
s(366) =< aux(285)
s(370) =< aux(284)
s(371) =< aux(284)
s(370) =< aux(286)
s(371) =< aux(286)
s(365) =< aux(284)
s(366) =< aux(284)
s(373) =< aux(284)
s(374) =< s(366)
s(375) =< s(366)-1
s(371) =< s(370)
s(365) =< aux(284)-2
s(374) =< s(365)+2
s(375) =< s(365)+1
s(376) =< s(373)*s(371)
s(377) =< s(373)*s(374)
s(378) =< s(373)*s(375)
s(379) =< s(378)
s(379) =< s(376)
s(379) =< s(377)
s(364) =< aux(287)
s(364) =< s(350)

  with precondition: [H=A,C=B,E=D,G=F,J=I,L=K,H>=3] 

* Chain [36]: 4*s(640)+15*s(649)+4*s(655)+15*s(656)+2*s(685)+1*s(706)+1*s(735)+1*s(759)+3*s(763)+1*s(769)+1*s(853)+1*s(892)+1*s(918)+1
  Such that:aux(295) =< H+1
aux(296) =< H+2
aux(298) =< 2*H+1
aux(299) =< 2*H+2
aux(309) =< 1
aux(310) =< H
aux(311) =< 2*H
aux(312) =< 3*H
s(685) =< aux(309)
s(735) =< aux(309)
s(892) =< aux(309)
s(685) =< aux(310)
s(673) =< aux(310)
s(673) =< aux(310)+1
s(674) =< aux(310)+1
s(697) =< s(685)*s(673)
s(698) =< s(685)*aux(310)
s(699) =< s(685)*aux(310)
s(700) =< s(685)*s(674)
s(699) =< s(685)*s(674)
s(702) =< s(685)*aux(310)
s(702) =< s(698)
s(704) =< s(697)
s(704) =< s(698)
s(705) =< s(698)
s(705) =< s(700)
s(706) =< s(698)+aux(310)
s(706) =< s(697)+aux(310)
s(706) =< s(702)+aux(310)
s(706) =< s(699)+aux(310)
s(706) =< s(704)+aux(310)
s(706) =< s(705)+aux(310)
s(649) =< aux(310)
s(740) =< aux(295)
s(744) =< aux(295)
s(740) =< aux(296)
s(741) =< aux(296)
s(621) =< aux(311)
s(641) =< aux(311)
s(642) =< aux(311)
s(739) =< aux(298)
s(744) =< aux(298)
s(739) =< aux(299)
s(741) =< aux(299)
s(621) =< aux(312)
s(745) =< aux(310)
s(739) =< aux(310)
s(745) =< s(744)
s(747) =< s(741)
s(747) =< s(744)
s(735) =< s(744)
s(748) =< s(745)
s(748) =< s(747)+1
s(749) =< s(747)+1
s(750) =< s(735)*s(748)
s(751) =< s(735)*s(745)
s(752) =< s(735)*s(745)
s(753) =< s(735)*s(749)
s(752) =< s(735)*s(749)
s(754) =< s(735)*s(747)
s(755) =< s(735)*s(747)
s(756) =< s(735)*aux(310)
s(754) =< s(735)*aux(310)
s(755) =< s(756)
s(757) =< s(750)
s(757) =< s(751)
s(758) =< s(751)
s(758) =< s(753)
s(759) =< s(756)+s(745)
s(759) =< s(750)+s(739)
s(759) =< s(755)+s(745)
s(759) =< s(754)+s(745)
s(759) =< s(752)+s(739)
s(759) =< s(757)+s(745)
s(759) =< s(758)+s(745)
s(759) =< s(757)+s(739)
s(759) =< s(758)+s(739)
s(646) =< aux(310)
s(647) =< aux(310)
s(646) =< aux(312)
s(647) =< aux(312)
s(641) =< aux(310)
s(642) =< aux(310)
s(763) =< aux(310)
s(763) =< s(740)
s(650) =< s(642)
s(651) =< s(642)-1
s(647) =< s(646)
s(641) =< aux(310)-2
s(650) =< s(641)+2
s(651) =< s(641)+1
s(766) =< s(763)*s(647)
s(767) =< s(763)*s(650)
s(768) =< s(763)*s(651)
s(769) =< s(768)
s(769) =< s(766)
s(769) =< s(767)
s(640) =< s(621)
s(640) =< aux(310)
s(853) =< s(698)+aux(310)
s(853) =< s(697)+aux(310)
s(853) =< s(702)+aux(310)
s(853) =< s(699)+aux(310)
s(853) =< s(704)+s(642)
s(853) =< s(705)+s(642)
s(853) =< s(704)+aux(310)
s(853) =< s(705)+aux(310)
s(652) =< s(649)*s(647)
s(653) =< s(649)*s(650)
s(654) =< s(649)*s(651)
s(655) =< s(654)
s(655) =< s(652)
s(655) =< s(653)
s(905) =< aux(310)
s(905) =< s(642)
s(892) =< s(642)
s(907) =< s(905)
s(907) =< s(642)+1
s(908) =< s(642)+1
s(909) =< s(892)*s(907)
s(910) =< s(892)*s(905)
s(911) =< s(892)*s(905)
s(912) =< s(892)*s(908)
s(911) =< s(892)*s(908)
s(913) =< s(892)*s(642)
s(914) =< s(892)*s(642)
s(915) =< s(892)*aux(310)
s(913) =< s(892)*aux(310)
s(914) =< s(915)
s(916) =< s(909)
s(916) =< s(910)
s(917) =< s(910)
s(917) =< s(912)
s(918) =< s(915)+aux(310)
s(918) =< s(909)+aux(311)
s(918) =< s(914)+aux(310)
s(918) =< s(913)+aux(310)
s(918) =< s(911)+aux(311)
s(918) =< s(916)+s(642)
s(918) =< s(917)+s(642)
s(918) =< s(916)+aux(311)
s(918) =< s(917)+aux(311)

  with precondition: [H=A,C=B,E=D,G=F,J=I,L=K,H>=4] 

* Chain [35]: 1*s(958)+1*s(982)+3*s(986)+1*s(992)+6*s(993)+1*s(994)+1*s(1020)+3*s(1024)+1*s(1030)+1
  Such that:aux(314) =< H+1
aux(315) =< H+2
aux(317) =< 2*H+1
aux(318) =< 2*H+2
aux(321) =< 1
aux(322) =< H
aux(323) =< 2*H
aux(324) =< 3*H
s(958) =< aux(321)
s(994) =< aux(321)
s(963) =< aux(314)
s(967) =< aux(314)
s(963) =< aux(315)
s(964) =< aux(315)
s(959) =< aux(323)
s(960) =< aux(323)
s(962) =< aux(317)
s(967) =< aux(317)
s(962) =< aux(318)
s(964) =< aux(318)
s(968) =< aux(322)
s(962) =< aux(322)
s(968) =< s(967)
s(970) =< s(964)
s(970) =< s(967)
s(958) =< s(967)
s(971) =< s(968)
s(971) =< s(970)+1
s(972) =< s(970)+1
s(973) =< s(958)*s(971)
s(974) =< s(958)*s(968)
s(975) =< s(958)*s(968)
s(976) =< s(958)*s(972)
s(975) =< s(958)*s(972)
s(977) =< s(958)*s(970)
s(978) =< s(958)*s(970)
s(979) =< s(958)*aux(322)
s(977) =< s(958)*aux(322)
s(978) =< s(979)
s(980) =< s(973)
s(980) =< s(974)
s(981) =< s(974)
s(981) =< s(976)
s(982) =< s(979)+s(968)
s(982) =< s(973)+s(962)
s(982) =< s(978)+s(968)
s(982) =< s(977)+s(968)
s(982) =< s(975)+s(962)
s(982) =< s(980)+s(968)
s(982) =< s(981)+s(968)
s(982) =< s(980)+s(962)
s(982) =< s(981)+s(962)
s(983) =< aux(322)
s(984) =< aux(322)
s(983) =< aux(324)
s(984) =< aux(324)
s(959) =< aux(322)
s(960) =< aux(322)
s(986) =< aux(322)
s(986) =< s(963)
s(987) =< s(960)
s(988) =< s(960)-1
s(984) =< s(983)
s(959) =< aux(322)-2
s(987) =< s(959)+2
s(988) =< s(959)+1
s(989) =< s(986)*s(984)
s(990) =< s(986)*s(987)
s(991) =< s(986)*s(988)
s(992) =< s(991)
s(992) =< s(989)
s(992) =< s(990)
s(1007) =< aux(322)
s(1007) =< s(960)
s(994) =< s(960)
s(1009) =< s(1007)
s(1009) =< s(960)+1
s(1010) =< s(960)+1
s(1011) =< s(994)*s(1009)
s(1012) =< s(994)*s(1007)
s(1013) =< s(994)*s(1007)
s(1014) =< s(994)*s(1010)
s(1013) =< s(994)*s(1010)
s(1015) =< s(994)*s(960)
s(1016) =< s(994)*s(960)
s(1017) =< s(994)*aux(322)
s(1015) =< s(994)*aux(322)
s(1016) =< s(1017)
s(1018) =< s(1011)
s(1018) =< s(1012)
s(1019) =< s(1012)
s(1019) =< s(1014)
s(1020) =< s(1017)+aux(322)
s(1020) =< s(1011)+aux(323)
s(1020) =< s(1016)+aux(322)
s(1020) =< s(1015)+aux(322)
s(1020) =< s(1013)+aux(323)
s(1020) =< s(1018)+s(960)
s(1020) =< s(1019)+s(960)
s(1020) =< s(1018)+aux(323)
s(1020) =< s(1019)+aux(323)
s(1024) =< aux(322)
s(1027) =< s(1024)*s(984)
s(1028) =< s(1024)*s(987)
s(1029) =< s(1024)*s(988)
s(1030) =< s(1029)
s(1030) =< s(1027)
s(1030) =< s(1028)

  with precondition: [H=A,C=B,E=D,G=F,J=I,L=K,2*H>=7] 


#### Cost of chains of start0(A,B,C,D,E,F,G,H,I,J,K,L,N):
* Chain [50]: 0
  with precondition: [A=2] 

* Chain [49]: 0
  with precondition: [1>=A] 

* Chain [48]: 0
  with precondition: [A>=2] 

* Chain [47]: 4*s(1043)+1*s(1044)+1*s(1045)+2*s(1055)+2*s(1058)+22*s(1061)+7*s(1067)+1*s(1085)+3*s(1086)+1*s(1090)+1*s(1103)+1*s(1115)+24*s(1116)+1
  Such that:s(1036) =< 1
s(1032) =< A+1
s(1033) =< A+2
s(1034) =< 2*A+1
s(1035) =< 2*A+2
aux(325) =< A
aux(326) =< 2*A
aux(327) =< 3*A
s(1043) =< s(1036)
s(1044) =< s(1036)
s(1045) =< s(1036)
s(1043) =< aux(325)
s(1046) =< aux(325)
s(1046) =< aux(325)+1
s(1047) =< aux(325)+1
s(1048) =< s(1043)*s(1046)
s(1049) =< s(1043)*aux(325)
s(1050) =< s(1043)*aux(325)
s(1051) =< s(1043)*s(1047)
s(1050) =< s(1043)*s(1047)
s(1052) =< s(1043)*aux(325)
s(1052) =< s(1049)
s(1053) =< s(1048)
s(1053) =< s(1049)
s(1054) =< s(1049)
s(1054) =< s(1051)
s(1055) =< s(1049)+aux(325)
s(1055) =< s(1048)+aux(325)
s(1055) =< s(1052)+aux(325)
s(1055) =< s(1050)+aux(325)
s(1055) =< s(1053)+aux(325)
s(1055) =< s(1054)+aux(325)
s(1056) =< aux(326)
s(1057) =< aux(326)
s(1057) =< aux(325)
s(1058) =< s(1049)+aux(325)
s(1058) =< s(1048)+aux(325)
s(1058) =< s(1052)+aux(325)
s(1058) =< s(1050)+aux(325)
s(1058) =< s(1053)+s(1057)
s(1058) =< s(1054)+s(1057)
s(1058) =< s(1053)+aux(325)
s(1058) =< s(1054)+aux(325)
s(1059) =< aux(325)
s(1060) =< aux(325)
s(1059) =< aux(327)
s(1060) =< aux(327)
s(1056) =< aux(325)
s(1061) =< aux(325)
s(1062) =< s(1057)
s(1063) =< s(1057)-1
s(1060) =< s(1059)
s(1056) =< aux(325)-2
s(1062) =< s(1056)+2
s(1063) =< s(1056)+1
s(1064) =< s(1061)*s(1060)
s(1065) =< s(1061)*s(1062)
s(1066) =< s(1061)*s(1063)
s(1067) =< s(1066)
s(1067) =< s(1064)
s(1067) =< s(1065)
s(1068) =< s(1032)
s(1069) =< s(1032)
s(1068) =< s(1033)
s(1070) =< s(1033)
s(1071) =< s(1034)
s(1069) =< s(1034)
s(1071) =< s(1035)
s(1070) =< s(1035)
s(1072) =< aux(325)
s(1071) =< aux(325)
s(1072) =< s(1069)
s(1073) =< s(1070)
s(1073) =< s(1069)
s(1044) =< s(1069)
s(1074) =< s(1072)
s(1074) =< s(1073)+1
s(1075) =< s(1073)+1
s(1076) =< s(1044)*s(1074)
s(1077) =< s(1044)*s(1072)
s(1078) =< s(1044)*s(1072)
s(1079) =< s(1044)*s(1075)
s(1078) =< s(1044)*s(1075)
s(1080) =< s(1044)*s(1073)
s(1081) =< s(1044)*s(1073)
s(1082) =< s(1044)*aux(325)
s(1080) =< s(1044)*aux(325)
s(1081) =< s(1082)
s(1083) =< s(1076)
s(1083) =< s(1077)
s(1084) =< s(1077)
s(1084) =< s(1079)
s(1085) =< s(1082)+s(1072)
s(1085) =< s(1076)+s(1071)
s(1085) =< s(1081)+s(1072)
s(1085) =< s(1080)+s(1072)
s(1085) =< s(1078)+s(1071)
s(1085) =< s(1083)+s(1072)
s(1085) =< s(1084)+s(1072)
s(1085) =< s(1083)+s(1071)
s(1085) =< s(1084)+s(1071)
s(1086) =< aux(325)
s(1086) =< s(1068)
s(1087) =< s(1086)*s(1060)
s(1088) =< s(1086)*s(1062)
s(1089) =< s(1086)*s(1063)
s(1090) =< s(1089)
s(1090) =< s(1087)
s(1090) =< s(1088)
s(1091) =< aux(325)
s(1091) =< s(1057)
s(1045) =< s(1057)
s(1092) =< s(1091)
s(1092) =< s(1057)+1
s(1093) =< s(1057)+1
s(1094) =< s(1045)*s(1092)
s(1095) =< s(1045)*s(1091)
s(1096) =< s(1045)*s(1091)
s(1097) =< s(1045)*s(1093)
s(1096) =< s(1045)*s(1093)
s(1098) =< s(1045)*s(1057)
s(1099) =< s(1045)*s(1057)
s(1100) =< s(1045)*aux(325)
s(1098) =< s(1045)*aux(325)
s(1099) =< s(1100)
s(1101) =< s(1094)
s(1101) =< s(1095)
s(1102) =< s(1095)
s(1102) =< s(1097)
s(1103) =< s(1100)+aux(325)
s(1103) =< s(1094)+aux(326)
s(1103) =< s(1099)+aux(325)
s(1103) =< s(1098)+aux(325)
s(1103) =< s(1096)+aux(326)
s(1103) =< s(1101)+s(1057)
s(1103) =< s(1102)+s(1057)
s(1103) =< s(1101)+aux(326)
s(1103) =< s(1102)+aux(326)
s(1115) =< aux(325)
s(1115) =< s(1057)

  with precondition: [A>=3] 

* Chain [46]: 2*s(1125)+1*s(1126)+1*s(1127)+1*s(1137)+15*s(1138)+1*s(1159)+3*s(1162)+1*s(1168)+4*s(1169)+1*s(1170)+4*s(1174)+1*s(1187)+15*s(1188)+1
  Such that:s(1121) =< 1
s(1122) =< A
s(1117) =< A+1
s(1118) =< A+2
s(1123) =< 2*A
s(1119) =< 2*A+1
s(1120) =< 2*A+2
s(1124) =< 3*A
s(1125) =< s(1121)
s(1126) =< s(1121)
s(1127) =< s(1121)
s(1125) =< s(1122)
s(1128) =< s(1122)
s(1128) =< s(1122)+1
s(1129) =< s(1122)+1
s(1130) =< s(1125)*s(1128)
s(1131) =< s(1125)*s(1122)
s(1132) =< s(1125)*s(1122)
s(1133) =< s(1125)*s(1129)
s(1132) =< s(1125)*s(1129)
s(1134) =< s(1125)*s(1122)
s(1134) =< s(1131)
s(1135) =< s(1130)
s(1135) =< s(1131)
s(1136) =< s(1131)
s(1136) =< s(1133)
s(1137) =< s(1131)+s(1122)
s(1137) =< s(1130)+s(1122)
s(1137) =< s(1134)+s(1122)
s(1137) =< s(1132)+s(1122)
s(1137) =< s(1135)+s(1122)
s(1137) =< s(1136)+s(1122)
s(1138) =< s(1122)
s(1139) =< s(1117)
s(1140) =< s(1117)
s(1139) =< s(1118)
s(1141) =< s(1118)
s(1142) =< s(1123)
s(1143) =< s(1123)
s(1144) =< s(1123)
s(1145) =< s(1119)
s(1140) =< s(1119)
s(1145) =< s(1120)
s(1141) =< s(1120)
s(1142) =< s(1124)
s(1146) =< s(1122)
s(1145) =< s(1122)
s(1146) =< s(1140)
s(1147) =< s(1141)
s(1147) =< s(1140)
s(1126) =< s(1140)
s(1148) =< s(1146)
s(1148) =< s(1147)+1
s(1149) =< s(1147)+1
s(1150) =< s(1126)*s(1148)
s(1151) =< s(1126)*s(1146)
s(1152) =< s(1126)*s(1146)
s(1153) =< s(1126)*s(1149)
s(1152) =< s(1126)*s(1149)
s(1154) =< s(1126)*s(1147)
s(1155) =< s(1126)*s(1147)
s(1156) =< s(1126)*s(1122)
s(1154) =< s(1126)*s(1122)
s(1155) =< s(1156)
s(1157) =< s(1150)
s(1157) =< s(1151)
s(1158) =< s(1151)
s(1158) =< s(1153)
s(1159) =< s(1156)+s(1146)
s(1159) =< s(1150)+s(1145)
s(1159) =< s(1155)+s(1146)
s(1159) =< s(1154)+s(1146)
s(1159) =< s(1152)+s(1145)
s(1159) =< s(1157)+s(1146)
s(1159) =< s(1158)+s(1146)
s(1159) =< s(1157)+s(1145)
s(1159) =< s(1158)+s(1145)
s(1160) =< s(1122)
s(1161) =< s(1122)
s(1160) =< s(1124)
s(1161) =< s(1124)
s(1143) =< s(1122)
s(1144) =< s(1122)
s(1162) =< s(1122)
s(1162) =< s(1139)
s(1163) =< s(1144)
s(1164) =< s(1144)-1
s(1161) =< s(1160)
s(1143) =< s(1122)-2
s(1163) =< s(1143)+2
s(1164) =< s(1143)+1
s(1165) =< s(1162)*s(1161)
s(1166) =< s(1162)*s(1163)
s(1167) =< s(1162)*s(1164)
s(1168) =< s(1167)
s(1168) =< s(1165)
s(1168) =< s(1166)
s(1169) =< s(1142)
s(1169) =< s(1122)
s(1170) =< s(1131)+s(1122)
s(1170) =< s(1130)+s(1122)
s(1170) =< s(1134)+s(1122)
s(1170) =< s(1132)+s(1122)
s(1170) =< s(1135)+s(1144)
s(1170) =< s(1136)+s(1144)
s(1170) =< s(1135)+s(1122)
s(1170) =< s(1136)+s(1122)
s(1171) =< s(1138)*s(1161)
s(1172) =< s(1138)*s(1163)
s(1173) =< s(1138)*s(1164)
s(1174) =< s(1173)
s(1174) =< s(1171)
s(1174) =< s(1172)
s(1175) =< s(1122)
s(1175) =< s(1144)
s(1127) =< s(1144)
s(1176) =< s(1175)
s(1176) =< s(1144)+1
s(1177) =< s(1144)+1
s(1178) =< s(1127)*s(1176)
s(1179) =< s(1127)*s(1175)
s(1180) =< s(1127)*s(1175)
s(1181) =< s(1127)*s(1177)
s(1180) =< s(1127)*s(1177)
s(1182) =< s(1127)*s(1144)
s(1183) =< s(1127)*s(1144)
s(1184) =< s(1127)*s(1122)
s(1182) =< s(1127)*s(1122)
s(1183) =< s(1184)
s(1185) =< s(1178)
s(1185) =< s(1179)
s(1186) =< s(1179)
s(1186) =< s(1181)
s(1187) =< s(1184)+s(1122)
s(1187) =< s(1178)+s(1123)
s(1187) =< s(1183)+s(1122)
s(1187) =< s(1182)+s(1122)
s(1187) =< s(1180)+s(1123)
s(1187) =< s(1185)+s(1144)
s(1187) =< s(1186)+s(1144)
s(1187) =< s(1185)+s(1123)
s(1187) =< s(1186)+s(1123)

  with precondition: [A>=4] 

* Chain [45]: 1*s(1197)+1*s(1198)+1*s(1218)+3*s(1221)+1*s(1227)+1*s(1240)+3*s(1241)+1*s(1245)+6*s(1246)+1
  Such that:s(1193) =< 1
s(1194) =< A
s(1189) =< A+1
s(1190) =< A+2
s(1195) =< 2*A
s(1191) =< 2*A+1
s(1192) =< 2*A+2
s(1196) =< 3*A
s(1197) =< s(1193)
s(1198) =< s(1193)
s(1199) =< s(1189)
s(1200) =< s(1189)
s(1199) =< s(1190)
s(1201) =< s(1190)
s(1202) =< s(1195)
s(1203) =< s(1195)
s(1204) =< s(1191)
s(1200) =< s(1191)
s(1204) =< s(1192)
s(1201) =< s(1192)
s(1205) =< s(1194)
s(1204) =< s(1194)
s(1205) =< s(1200)
s(1206) =< s(1201)
s(1206) =< s(1200)
s(1197) =< s(1200)
s(1207) =< s(1205)
s(1207) =< s(1206)+1
s(1208) =< s(1206)+1
s(1209) =< s(1197)*s(1207)
s(1210) =< s(1197)*s(1205)
s(1211) =< s(1197)*s(1205)
s(1212) =< s(1197)*s(1208)
s(1211) =< s(1197)*s(1208)
s(1213) =< s(1197)*s(1206)
s(1214) =< s(1197)*s(1206)
s(1215) =< s(1197)*s(1194)
s(1213) =< s(1197)*s(1194)
s(1214) =< s(1215)
s(1216) =< s(1209)
s(1216) =< s(1210)
s(1217) =< s(1210)
s(1217) =< s(1212)
s(1218) =< s(1215)+s(1205)
s(1218) =< s(1209)+s(1204)
s(1218) =< s(1214)+s(1205)
s(1218) =< s(1213)+s(1205)
s(1218) =< s(1211)+s(1204)
s(1218) =< s(1216)+s(1205)
s(1218) =< s(1217)+s(1205)
s(1218) =< s(1216)+s(1204)
s(1218) =< s(1217)+s(1204)
s(1219) =< s(1194)
s(1220) =< s(1194)
s(1219) =< s(1196)
s(1220) =< s(1196)
s(1202) =< s(1194)
s(1203) =< s(1194)
s(1221) =< s(1194)
s(1221) =< s(1199)
s(1222) =< s(1203)
s(1223) =< s(1203)-1
s(1220) =< s(1219)
s(1202) =< s(1194)-2
s(1222) =< s(1202)+2
s(1223) =< s(1202)+1
s(1224) =< s(1221)*s(1220)
s(1225) =< s(1221)*s(1222)
s(1226) =< s(1221)*s(1223)
s(1227) =< s(1226)
s(1227) =< s(1224)
s(1227) =< s(1225)
s(1228) =< s(1194)
s(1228) =< s(1203)
s(1198) =< s(1203)
s(1229) =< s(1228)
s(1229) =< s(1203)+1
s(1230) =< s(1203)+1
s(1231) =< s(1198)*s(1229)
s(1232) =< s(1198)*s(1228)
s(1233) =< s(1198)*s(1228)
s(1234) =< s(1198)*s(1230)
s(1233) =< s(1198)*s(1230)
s(1235) =< s(1198)*s(1203)
s(1236) =< s(1198)*s(1203)
s(1237) =< s(1198)*s(1194)
s(1235) =< s(1198)*s(1194)
s(1236) =< s(1237)
s(1238) =< s(1231)
s(1238) =< s(1232)
s(1239) =< s(1232)
s(1239) =< s(1234)
s(1240) =< s(1237)+s(1194)
s(1240) =< s(1231)+s(1195)
s(1240) =< s(1236)+s(1194)
s(1240) =< s(1235)+s(1194)
s(1240) =< s(1233)+s(1195)
s(1240) =< s(1238)+s(1203)
s(1240) =< s(1239)+s(1203)
s(1240) =< s(1238)+s(1195)
s(1240) =< s(1239)+s(1195)
s(1241) =< s(1194)
s(1242) =< s(1241)*s(1220)
s(1243) =< s(1241)*s(1222)
s(1244) =< s(1241)*s(1223)
s(1245) =< s(1244)
s(1245) =< s(1242)
s(1245) =< s(1243)

  with precondition: [2*A>=7] 

* Chain [44]...: 12*s(1254)+4*s(1260)+12*s(1261)+1
  Such that:s(1247) =< A
s(1248) =< 2*A
s(1249) =< 3*A
s(1250) =< s(1248)
s(1251) =< s(1248)
s(1252) =< s(1247)
s(1253) =< s(1247)
s(1252) =< s(1249)
s(1253) =< s(1249)
s(1250) =< s(1247)
s(1251) =< s(1247)
s(1254) =< s(1247)
s(1255) =< s(1251)
s(1256) =< s(1251)-1
s(1253) =< s(1252)
s(1250) =< s(1247)-2
s(1255) =< s(1250)+2
s(1256) =< s(1250)+1
s(1257) =< s(1254)*s(1253)
s(1258) =< s(1254)*s(1255)
s(1259) =< s(1254)*s(1256)
s(1260) =< s(1259)
s(1260) =< s(1257)
s(1260) =< s(1258)

  with precondition: [A>=3] 

* Chain [43]...: 6*s(1270)+2*s(1276)+2*s(1277)+6*s(1278)+1
  Such that:s(1262) =< A
s(1263) =< 2*A
s(1264) =< 3*A
s(1265) =< s(1263)
s(1266) =< s(1263)
s(1267) =< s(1263)
s(1265) =< s(1264)
s(1268) =< s(1262)
s(1269) =< s(1262)
s(1268) =< s(1264)
s(1269) =< s(1264)
s(1266) =< s(1262)
s(1267) =< s(1262)
s(1270) =< s(1262)
s(1271) =< s(1267)
s(1272) =< s(1267)-1
s(1269) =< s(1268)
s(1266) =< s(1262)-2
s(1271) =< s(1266)+2
s(1272) =< s(1266)+1
s(1273) =< s(1270)*s(1269)
s(1274) =< s(1270)*s(1271)
s(1275) =< s(1270)*s(1272)
s(1276) =< s(1275)
s(1276) =< s(1273)
s(1276) =< s(1274)
s(1277) =< s(1265)
s(1277) =< s(1262)

  with precondition: [A>=4] 


Closed-form bounds of start0(A,B,C,D,E,F,G,H,I,J,K,L,N): 
-------------------------------------
* Chain [50] with precondition: [A=2] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [49] with precondition: [1>=A] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [48] with precondition: [A>=2] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [47] with precondition: [A>=3] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [46] with precondition: [A>=4] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [45] with precondition: [2*A>=7] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [44]... with precondition: [A>=3] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [43]... with precondition: [A>=4] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of start0(A,B,C,D,E,F,G,H,I,J,K,L,N): inf 
Asymptotic class: infinity 
* Total analysis performed in 2809 ms.

