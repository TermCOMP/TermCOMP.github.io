MAYBE

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [evalfbb1in/3,evalfbb2in/3,evalfbb3in/3]
1. recursive  : [evalfbb5in/7,evalfbb6in/7,evalfbb7in/7]
2. recursive  : [evalfbb2in_loop_cont/13,evalfbb4in/12,evalfbb6in_loop_cont/13,evalfbb8in/12]
3. non_recursive  : [evalfstop/7]
4. non_recursive  : [evalfreturnin/7]
5. non_recursive  : [exit_location/1]
6. non_recursive  : [evalfbb8in_loop_cont/8]
7. non_recursive  : [evalfentryin/7]
8. non_recursive  : [evalfstart/7]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into evalfbb2in/3
1. SCC is partially evaluated into evalfbb6in/7
2. SCC is partially evaluated into evalfbb8in/12
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into evalfbb8in_loop_cont/8
7. SCC is partially evaluated into evalfentryin/7
8. SCC is partially evaluated into evalfstart/7

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations evalfbb2in/3 
* CE 13 is refined into CE [18] 
* CE 10 is refined into CE [19] 
* CE 12 is refined into CE [20] 
* CE 11 is refined into CE [21] 


### Cost equations --> "Loop" of evalfbb2in/3 
* CEs [21] --> Loop 17 
* CEs [18] --> Loop 18 
* CEs [19] --> Loop 19 
* CEs [20] --> Loop 20 

### Ranking functions of CR evalfbb2in(C,H,I) 
* RF of phase [17]: [C+1]

#### Partial ranking functions of CR evalfbb2in(C,H,I) 
* Partial RF of phase [17]:
  - RF of loop [17:1]:
    C+1


### Specialization of cost equations evalfbb6in/7 
* CE 16 is refined into CE [22] 
* CE 14 is refined into CE [23] 
* CE 17 is refined into CE [24] 
* CE 15 is refined into CE [25] 


### Cost equations --> "Loop" of evalfbb6in/7 
* CEs [25] --> Loop 21 
* CEs [22] --> Loop 22 
* CEs [23] --> Loop 23 
* CEs [24] --> Loop 24 

### Ranking functions of CR evalfbb6in(A,B,E,F,H,I,J) 
* RF of phase [21]: [-E+F+1]

#### Partial ranking functions of CR evalfbb6in(A,B,E,F,H,I,J) 
* Partial RF of phase [21]:
  - RF of loop [21:1]:
    -E+F+1


### Specialization of cost equations evalfbb8in/12 
* CE 6 is refined into CE [26] 
* CE 3 is refined into CE [27,28] 
* CE 5 is refined into CE [29,30,31,32,33,34,35,36] 
* CE 7 is refined into CE [37] 
* CE 4 is refined into CE [38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53] 


### Cost equations --> "Loop" of evalfbb8in/12 
* CEs [53] --> Loop 25 
* CEs [50] --> Loop 26 
* CEs [51] --> Loop 27 
* CEs [49] --> Loop 28 
* CEs [45] --> Loop 29 
* CEs [47] --> Loop 30 
* CEs [46] --> Loop 31 
* CEs [43] --> Loop 32 
* CEs [42] --> Loop 33 
* CEs [52] --> Loop 34 
* CEs [48] --> Loop 35 
* CEs [44] --> Loop 36 
* CEs [41] --> Loop 37 
* CEs [40] --> Loop 38 
* CEs [38] --> Loop 39 
* CEs [39] --> Loop 40 
* CEs [26] --> Loop 41 
* CEs [27] --> Loop 42 
* CEs [36] --> Loop 43 
* CEs [35] --> Loop 44 
* CEs [34] --> Loop 45 
* CEs [30] --> Loop 46 
* CEs [28,29,33] --> Loop 47 
* CEs [32] --> Loop 48 
* CEs [31] --> Loop 49 
* CEs [37] --> Loop 50 

### Ranking functions of CR evalfbb8in(A,B,C,D,E,F,H,I,J,K,L,M) 
* RF of phase [25,26,27,28,29,30,31,33,34,35,36,37,38,39]: [B+1]
* RF of phase [32]: [B+1]

#### Partial ranking functions of CR evalfbb8in(A,B,C,D,E,F,H,I,J,K,L,M) 
* Partial RF of phase [25,26,27,28,29,30,31,33,34,35,36,37,38,39]:
  - RF of loop [25:1,26:1,27:1,28:1,29:1,30:1,31:1,33:1,34:1,35:1,36:1,37:1,38:1,39:1]:
    B+1
  - RF of loop [26:1,27:1]:
    A depends on loops [25:1,28:1,29:1,34:1,35:1,36:1,37:1,38:1] 
  - RF of loop [27:1]:
    A-F-1 depends on loops [25:1,28:1,29:1,34:1,35:1,36:1,37:1,38:1] 
  - RF of loop [28:1,29:1]:
    -A+F depends on loops [25:1,26:1,27:1,34:1,37:1,38:1,39:1] 
  - RF of loop [29:1,36:1]:
    -A depends on loops [25:1,26:1,27:1,34:1,37:1,38:1,39:1] 
  - RF of loop [35:1,36:1]:
    -A+F+1 depends on loops [25:1,26:1,27:1,34:1,37:1,38:1,39:1] 
  - RF of loop [39:1]:
    A+1 depends on loops [25:1,28:1,29:1,34:1,35:1,36:1,37:1,38:1] 
* Partial RF of phase [32]:
  - RF of loop [32:1]:
    B+1


### Specialization of cost equations evalfbb8in_loop_cont/8 
* CE 8 is refined into CE [54] 
* CE 9 is refined into CE [55] 


### Cost equations --> "Loop" of evalfbb8in_loop_cont/8 
* CEs [54] --> Loop 51 
* CEs [55] --> Loop 52 

### Ranking functions of CR evalfbb8in_loop_cont(A,B,C,D,E,F,G,H) 

#### Partial ranking functions of CR evalfbb8in_loop_cont(A,B,C,D,E,F,G,H) 


### Specialization of cost equations evalfentryin/7 
* CE 2 is refined into CE [56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82] 


### Cost equations --> "Loop" of evalfentryin/7 
* CEs [76] --> Loop 53 
* CEs [75] --> Loop 54 
* CEs [74] --> Loop 55 
* CEs [72] --> Loop 56 
* CEs [71] --> Loop 57 
* CEs [70] --> Loop 58 
* CEs [69] --> Loop 59 
* CEs [68] --> Loop 60 
* CEs [73,81] --> Loop 61 
* CEs [65] --> Loop 62 
* CEs [67] --> Loop 63 
* CEs [64,78] --> Loop 64 
* CEs [66,79] --> Loop 65 
* CEs [63,77] --> Loop 66 
* CEs [62] --> Loop 67 
* CEs [61] --> Loop 68 
* CEs [60,80] --> Loop 69 
* CEs [59] --> Loop 70 
* CEs [58] --> Loop 71 
* CEs [82] --> Loop 72 
* CEs [56] --> Loop 73 
* CEs [57] --> Loop 74 

### Ranking functions of CR evalfentryin(A,B,C,D,E,F,H) 

#### Partial ranking functions of CR evalfentryin(A,B,C,D,E,F,H) 


### Specialization of cost equations evalfstart/7 
* CE 1 is refined into CE [83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104] 


### Cost equations --> "Loop" of evalfstart/7 
* CEs [104] --> Loop 75 
* CEs [103] --> Loop 76 
* CEs [102] --> Loop 77 
* CEs [101] --> Loop 78 
* CEs [100] --> Loop 79 
* CEs [99] --> Loop 80 
* CEs [98] --> Loop 81 
* CEs [97] --> Loop 82 
* CEs [96] --> Loop 83 
* CEs [95] --> Loop 84 
* CEs [94] --> Loop 85 
* CEs [93] --> Loop 86 
* CEs [92] --> Loop 87 
* CEs [91] --> Loop 88 
* CEs [90] --> Loop 89 
* CEs [89] --> Loop 90 
* CEs [88] --> Loop 91 
* CEs [87] --> Loop 92 
* CEs [86] --> Loop 93 
* CEs [85] --> Loop 94 
* CEs [84] --> Loop 95 
* CEs [83] --> Loop 96 

### Ranking functions of CR evalfstart(A,B,C,D,E,F,H) 

#### Partial ranking functions of CR evalfstart(A,B,C,D,E,F,H) 


Computing Bounds
=====================================

#### Cost of chains of evalfbb2in(C,H,I):
* Chain [[17],20]: 1*it(17)+0
  Such that:it(17) =< C+1

  with precondition: [H=2,I+1=0,C>=0] 

* Chain [[17],19]: 1*it(17)+0
  Such that:it(17) =< C-I

  with precondition: [H=2,I>=0,C>=I+1] 

* Chain [[17],18]: 1*it(17)+0
  Such that:it(17) =< C+1

  with precondition: [H=3,C>=0] 

* Chain [20]: 0
  with precondition: [H=2,C=I,0>=C+1] 

* Chain [19]: 0
  with precondition: [H=2,C=I,C>=0] 

* Chain [18]: 0
  with precondition: [H=3] 


#### Cost of chains of evalfbb6in(A,B,E,F,H,I,J):
* Chain [[21],24]: 1*it(21)+0
  Such that:it(21) =< -E+F+1

  with precondition: [H=3,B>=0,F>=E] 

* Chain [[21],23]: 1*it(21)+0
  Such that:it(21) =< -E+I

  with precondition: [H=4,I=J,B>=0,I>=E+1,F>=I] 

* Chain [[21],22]: 1*it(21)+0
  Such that:it(21) =< -E+I

  with precondition: [H=4,F+1=I,F+1=J,B>=0,F>=E] 

* Chain [24]: 0
  with precondition: [H=3,B>=0] 

* Chain [23]: 0
  with precondition: [H=4,E=I,E=J,B>=0,F>=E] 

* Chain [22]: 0
  with precondition: [H=4,E=I,E=J,B>=0,E>=F+1] 


#### Cost of chains of evalfbb8in(A,B,C,D,E,F,H,I,J,K,L,M):
* Chain [[32],50]: 1*it(32)+0
  Such that:it(32) =< B+1

  with precondition: [H=3,0>=A+1,B>=0,A>=F+1] 

* Chain [[32],49]: 1*it(32)+0
  Such that:it(32) =< B

  with precondition: [H=3,0>=A+1,B>=1,A>=F+1] 

* Chain [[32],42]: 1*it(32)+0
  Such that:it(32) =< B

  with precondition: [H=3,0>=A+1,B>=1,A>=F+1] 

* Chain [[32],41]: 1*it(32)+0
  Such that:it(32) =< B+1

  with precondition: [H=5,J+1=0,L+1=0,A=I,A=K,A=M,0>=A+1,B>=0,A>=F+1] 

* Chain [[25,26,27,28,29,30,31,33,34,35,36,37,38,39],[32],50]: 14*it(25)+1*it(32)+11*s(31)+1*s(32)+2*s(38)+1*s(44)+0
  Such that:aux(11) =< F
aux(279) =< B
aux(280) =< B+1
aux(276) =< aux(279)
it(32) =< aux(279)
aux(276) =< aux(280)
it(32) =< aux(280)
it(25) =< aux(280)
it(25) =< aux(276)
aux(203) =< aux(11)+2
aux(103) =< aux(11)+1
s(32) =< it(25)*aux(11)
s(44) =< it(25)*aux(203)
s(38) =< it(25)*aux(103)

  with precondition: [H=3,0>=F+2,B>=1,F>=A] 

* Chain [[25,26,27,28,29,30,31,33,34,35,36,37,38,39],[32],49]: 14*it(25)+1*it(32)+11*s(31)+1*s(32)+2*s(38)+1*s(44)+0
  Such that:aux(275) =< B+1
aux(11) =< F
aux(281) =< B
it(32) =< aux(281)
it(25) =< aux(275)
it(25) =< aux(281)
aux(203) =< aux(11)+2
aux(103) =< aux(11)+1
s(32) =< it(25)*aux(11)
s(44) =< it(25)*aux(203)
s(38) =< it(25)*aux(103)

  with precondition: [H=3,0>=F+2,B>=2,F>=A] 

* Chain [[25,26,27,28,29,30,31,33,34,35,36,37,38,39],[32],42]: 14*it(25)+1*it(32)+11*s(31)+1*s(32)+2*s(38)+1*s(44)+0
  Such that:aux(275) =< B+1
aux(11) =< F
aux(282) =< B
it(32) =< aux(282)
it(25) =< aux(275)
it(25) =< aux(282)
aux(203) =< aux(11)+2
aux(103) =< aux(11)+1
s(32) =< it(25)*aux(11)
s(44) =< it(25)*aux(203)
s(38) =< it(25)*aux(103)

  with precondition: [H=3,0>=F+2,B>=2,F>=A] 

* Chain [[25,26,27,28,29,30,31,33,34,35,36,37,38,39],[32],41]: 14*it(25)+1*it(32)+11*s(31)+1*s(32)+2*s(38)+1*s(44)+0
  Such that:aux(11) =< F
aux(283) =< B
aux(284) =< B+1
aux(276) =< aux(283)
it(32) =< aux(283)
aux(276) =< aux(284)
it(32) =< aux(284)
it(25) =< aux(284)
it(25) =< aux(276)
aux(203) =< aux(11)+2
aux(103) =< aux(11)+1
s(32) =< it(25)*aux(11)
s(44) =< it(25)*aux(203)
s(38) =< it(25)*aux(103)

  with precondition: [H=5,J+1=0,L+1=0,I=F+1,I=K,I=M,0>=I+1,B>=1,I>=A+1] 

* Chain [[25,26,27,28,29,30,31,33,34,35,36,37,38,39],50]: 14*it(25)+11*s(31)+1*s(32)+2*s(38)+1*s(44)+0
  Such that:aux(11) =< F
aux(285) =< B+1
it(25) =< aux(285)
aux(203) =< aux(11)+2
aux(103) =< aux(11)+1
s(32) =< it(25)*aux(11)
s(44) =< it(25)*aux(203)
s(38) =< it(25)*aux(103)

  with precondition: [H=3,B>=0] 

* Chain [[25,26,27,28,29,30,31,33,34,35,36,37,38,39],49]: 14*it(25)+11*s(31)+1*s(32)+2*s(38)+1*s(44)+0
  Such that:aux(276) =< B
aux(275) =< B+1
aux(11) =< F
it(25) =< aux(275)
it(25) =< aux(276)
aux(203) =< aux(11)+2
aux(103) =< aux(11)+1
s(32) =< it(25)*aux(11)
s(44) =< it(25)*aux(203)
s(38) =< it(25)*aux(103)

  with precondition: [H=3,B>=1] 

* Chain [[25,26,27,28,29,30,31,33,34,35,36,37,38,39],48]: 12*it(25)+2*it(29)+12*s(31)+1*s(32)+2*s(38)+1*s(44)+0
  Such that:aux(296) =< F
aux(777) =< -A
aux(783) =< B+1
it(25) =< aux(783)
it(29) =< aux(783)
aux(477) =< aux(296)+2
aux(384) =< aux(296)+1
s(32) =< it(25)*aux(296)
s(44) =< it(25)*aux(477)
s(38) =< it(25)*aux(384)
it(29) =< aux(783)+aux(783)+aux(777)

  with precondition: [H=3,B>=1] 

* Chain [[25,26,27,28,29,30,31,33,34,35,36,37,38,39],47]: 14*it(25)+11*s(31)+1*s(32)+2*s(38)+1*s(44)+2*s(50)+0
  Such that:aux(798) =< F
aux(1094) =< B+1
it(25) =< aux(1094)
aux(978) =< aux(798)+2
aux(885) =< aux(798)+1
s(32) =< it(25)*aux(798)
s(44) =< it(25)*aux(978)
s(38) =< it(25)*aux(885)

  with precondition: [H=3,B>=1] 

* Chain [[25,26,27,28,29,30,31,33,34,35,36,37,38,39],46]: 14*it(25)+12*s(31)+1*s(32)+2*s(38)+1*s(44)+1*s(55)+0
  Such that:aux(1106) =< F
s(55) =< F+2
aux(1402) =< B+1
it(25) =< aux(1402)
aux(1286) =< aux(1106)+2
aux(1193) =< aux(1106)+1
s(32) =< it(25)*aux(1106)
s(44) =< it(25)*aux(1286)
s(38) =< it(25)*aux(1193)

  with precondition: [H=3,B>=1,F+1>=0] 

* Chain [[25,26,27,28,29,30,31,33,34,35,36,37,38,39],45]: 14*it(25)+11*s(31)+1*s(32)+2*s(38)+1*s(44)+1*s(56)+0
  Such that:aux(276) =< B
aux(275) =< B+1
aux(11) =< F
s(56) =< F+1
it(25) =< aux(275)
it(25) =< aux(276)
aux(203) =< aux(11)+2
aux(103) =< aux(11)+1
s(32) =< it(25)*aux(11)
s(44) =< it(25)*aux(203)
s(38) =< it(25)*aux(103)

  with precondition: [H=3,B>=1,F>=0] 

* Chain [[25,26,27,28,29,30,31,33,34,35,36,37,38,39],44]: 14*it(25)+12*s(31)+1*s(32)+2*s(38)+1*s(44)+0
  Such that:aux(1414) =< F
aux(1710) =< B+1
it(25) =< aux(1710)
aux(1594) =< aux(1414)+2
aux(1501) =< aux(1414)+1
s(32) =< it(25)*aux(1414)
s(44) =< it(25)*aux(1594)
s(38) =< it(25)*aux(1501)

  with precondition: [H=3,B>=1] 

* Chain [[25,26,27,28,29,30,31,33,34,35,36,37,38,39],43]: 14*it(25)+12*s(31)+1*s(32)+2*s(38)+1*s(44)+1*s(62)+0
  Such that:aux(1722) =< F
s(62) =< F+1
aux(2018) =< B+1
it(25) =< aux(2018)
aux(1902) =< aux(1722)+2
aux(1809) =< aux(1722)+1
s(32) =< it(25)*aux(1722)
s(44) =< it(25)*aux(1902)
s(38) =< it(25)*aux(1809)

  with precondition: [H=3,B>=1,F>=0] 

* Chain [[25,26,27,28,29,30,31,33,34,35,36,37,38,39],42]: 14*it(25)+11*s(31)+1*s(32)+2*s(38)+1*s(44)+0
  Such that:aux(276) =< B
aux(275) =< B+1
aux(11) =< F
it(25) =< aux(275)
it(25) =< aux(276)
aux(203) =< aux(11)+2
aux(103) =< aux(11)+1
s(32) =< it(25)*aux(11)
s(44) =< it(25)*aux(203)
s(38) =< it(25)*aux(103)

  with precondition: [H=3,B>=1] 

* Chain [[25,26,27,28,29,30,31,33,34,35,36,37,38,39],41]: 14*it(25)+11*s(31)+1*s(32)+2*s(38)+1*s(44)+0
  Such that:aux(11) =< F
aux(2020) =< B+1
it(25) =< aux(2020)
aux(203) =< aux(11)+2
aux(103) =< aux(11)+1
s(32) =< it(25)*aux(11)
s(44) =< it(25)*aux(203)
s(38) =< it(25)*aux(103)

  with precondition: [H=5,J+1=0,L+1=0,I=M,B>=0,I>=K] 

* Chain [[25,26,27,28,29,30,31,33,34,35,36,37,38,39],40,[32],50]: 14*it(25)+1*it([40,[32],50])+12*s(31)+1*s(32)+2*s(38)+1*s(44)+1*s(64)+0
  Such that:it([40,[32],50]) =< 1
s(64) =< B
aux(2031) =< F
aux(2342) =< B+1
aux(2343) =< -F
it(25) =< aux(2342)
it([40,[32],50]) =< aux(2342)
it([40,[32],50]) =< aux(2343)
aux(2225) =< aux(2031)+2
aux(2123) =< aux(2031)+1
s(32) =< it(25)*aux(2031)
s(44) =< it(25)*aux(2225)
s(38) =< it(25)*aux(2123)

  with precondition: [H=3,0>=F+2,A>=0,B>=2] 

* Chain [[25,26,27,28,29,30,31,33,34,35,36,37,38,39],40,[32],49]: 14*it(25)+1*it([40,[32],49])+12*s(31)+1*s(32)+2*s(38)+1*s(44)+1*s(66)+0
  Such that:it([40,[32],49]) =< 1
s(66) =< B
aux(2354) =< F
aux(2665) =< B+1
aux(2666) =< -F
it(25) =< aux(2665)
it([40,[32],49]) =< aux(2665)
it([40,[32],49]) =< aux(2666)
aux(2548) =< aux(2354)+2
aux(2446) =< aux(2354)+1
s(32) =< it(25)*aux(2354)
s(44) =< it(25)*aux(2548)
s(38) =< it(25)*aux(2446)

  with precondition: [H=3,0>=F+2,A>=0,B>=3] 

* Chain [[25,26,27,28,29,30,31,33,34,35,36,37,38,39],40,[32],42]: 14*it(25)+1*it([40,[32],42])+12*s(31)+1*s(32)+2*s(38)+1*s(44)+1*s(68)+0
  Such that:it([40,[32],42]) =< 1
s(68) =< B
aux(2677) =< F
aux(2988) =< B+1
aux(2989) =< -F
it(25) =< aux(2988)
it([40,[32],42]) =< aux(2988)
it([40,[32],42]) =< aux(2989)
aux(2871) =< aux(2677)+2
aux(2769) =< aux(2677)+1
s(32) =< it(25)*aux(2677)
s(44) =< it(25)*aux(2871)
s(38) =< it(25)*aux(2769)

  with precondition: [H=3,0>=F+2,A>=0,B>=3] 

* Chain [[25,26,27,28,29,30,31,33,34,35,36,37,38,39],40,[32],41]: 14*it(25)+1*it([40,[32],41])+12*s(31)+1*s(32)+2*s(38)+1*s(44)+1*s(70)+0
  Such that:it([40,[32],41]) =< 1
s(70) =< B
aux(3000) =< F
aux(3311) =< B+1
aux(3312) =< -F
it(25) =< aux(3311)
it([40,[32],41]) =< aux(3311)
it([40,[32],41]) =< aux(3312)
aux(3194) =< aux(3000)+2
aux(3092) =< aux(3000)+1
s(32) =< it(25)*aux(3000)
s(44) =< it(25)*aux(3194)
s(38) =< it(25)*aux(3092)

  with precondition: [H=5,I+1=0,J+1=0,K+1=0,L+1=0,M+1=0,0>=F+2,A>=0,B>=2] 

* Chain [[25,26,27,28,29,30,31,33,34,35,36,37,38,39],40,50]: 14*it(25)+1*it([40,50])+12*s(31)+1*s(32)+2*s(38)+1*s(44)+0
  Such that:it([40,50]) =< 1
aux(3323) =< F
aux(3634) =< B+1
aux(3635) =< -F
it(25) =< aux(3634)
it([40,50]) =< aux(3634)
it([40,50]) =< aux(3635)
aux(3517) =< aux(3323)+2
aux(3415) =< aux(3323)+1
s(32) =< it(25)*aux(3323)
s(44) =< it(25)*aux(3517)
s(38) =< it(25)*aux(3415)

  with precondition: [H=3,0>=F+2,A>=0,B>=1] 

* Chain [[25,26,27,28,29,30,31,33,34,35,36,37,38,39],40,49]: 14*it(25)+1*it([40,49])+12*s(31)+1*s(32)+2*s(38)+1*s(44)+0
  Such that:it([40,49]) =< 1
aux(3646) =< F
aux(3957) =< B+1
aux(3958) =< -F
it(25) =< aux(3957)
it([40,49]) =< aux(3957)
it([40,49]) =< aux(3958)
aux(3840) =< aux(3646)+2
aux(3738) =< aux(3646)+1
s(32) =< it(25)*aux(3646)
s(44) =< it(25)*aux(3840)
s(38) =< it(25)*aux(3738)

  with precondition: [H=3,0>=F+2,A>=0,B>=2] 

* Chain [[25,26,27,28,29,30,31,33,34,35,36,37,38,39],40,42]: 14*it(25)+1*it([40,42])+12*s(31)+1*s(32)+2*s(38)+1*s(44)+0
  Such that:it([40,42]) =< 1
aux(3969) =< F
aux(4280) =< B+1
aux(4281) =< -F
it(25) =< aux(4280)
it([40,42]) =< aux(4280)
it([40,42]) =< aux(4281)
aux(4163) =< aux(3969)+2
aux(4061) =< aux(3969)+1
s(32) =< it(25)*aux(3969)
s(44) =< it(25)*aux(4163)
s(38) =< it(25)*aux(4061)

  with precondition: [H=3,0>=F+2,A>=0,B>=2] 

* Chain [[25,26,27,28,29,30,31,33,34,35,36,37,38,39],40,41]: 14*it(25)+1*it([40,41])+12*s(31)+1*s(32)+2*s(38)+1*s(44)+0
  Such that:it([40,41]) =< 1
aux(4292) =< F
aux(4603) =< B+1
aux(4604) =< -F
it(25) =< aux(4603)
it([40,41]) =< aux(4603)
it([40,41]) =< aux(4604)
aux(4486) =< aux(4292)+2
aux(4384) =< aux(4292)+1
s(32) =< it(25)*aux(4292)
s(44) =< it(25)*aux(4486)
s(38) =< it(25)*aux(4384)

  with precondition: [H=5,I+1=0,J+1=0,K+1=0,L+1=0,M+1=0,0>=F+2,A>=0,B>=1] 

* Chain [50]: 0
  with precondition: [H=3] 

* Chain [49]: 0
  with precondition: [H=3,0>=A+1,B>=0] 

* Chain [48]: 1*s(46)+0
  Such that:s(46) =< -A+F+1

  with precondition: [H=3,0>=A+1,B>=0,F>=A] 

* Chain [47]: 2*s(48)+0
  Such that:aux(787) =< A+1
s(48) =< aux(787)

  with precondition: [H=3,A>=0,B>=0] 

* Chain [46]: 1*s(52)+1*s(53)+0
  Such that:s(52) =< A+1
s(53) =< F+2

  with precondition: [H=3,A>=0,B>=0,F+1>=0] 

* Chain [45]: 1*s(56)+0
  Such that:s(56) =< -A+F+1

  with precondition: [H=3,A>=0,B>=0,F>=A] 

* Chain [44]: 1*s(57)+0
  Such that:s(57) =< A

  with precondition: [H=3,A>=1,B>=0] 

* Chain [43]: 1*s(59)+1*s(60)+0
  Such that:s(59) =< A
s(60) =< F+1

  with precondition: [H=3,A>=1,B>=0,F>=0] 

* Chain [42]: 0
  with precondition: [H=3,B>=0] 

* Chain [41]: 0
  with precondition: [H=5,I=A,K=C,L=D,M=E,B=J,0>=B+1] 

* Chain [40,[32],50]: 1*it(32)+1*s(63)+1
  Such that:s(63) =< A+1
it(32) =< B

  with precondition: [H=3,0>=F+2,A>=0,B>=1] 

* Chain [40,[32],49]: 1*it(32)+1*s(63)+1
  Such that:s(63) =< A+1
it(32) =< B

  with precondition: [H=3,0>=F+2,A>=0,B>=2] 

* Chain [40,[32],42]: 1*it(32)+1*s(63)+1
  Such that:s(63) =< A+1
it(32) =< B

  with precondition: [H=3,0>=F+2,A>=0,B>=2] 

* Chain [40,[32],41]: 1*it(32)+1*s(63)+1
  Such that:s(63) =< A+1
it(32) =< B

  with precondition: [H=5,I+1=0,J+1=0,K+1=0,L+1=0,M+1=0,0>=F+2,A>=0,B>=1] 

* Chain [40,50]: 1*s(63)+1
  Such that:s(63) =< A+1

  with precondition: [H=3,0>=F+2,A>=0,B>=0] 

* Chain [40,49]: 1*s(63)+1
  Such that:s(63) =< A+1

  with precondition: [H=3,0>=F+2,A>=0,B>=1] 

* Chain [40,42]: 1*s(63)+1
  Such that:s(63) =< A+1

  with precondition: [H=3,0>=F+2,A>=0,B>=1] 

* Chain [40,41]: 1*s(63)+1
  Such that:s(63) =< A+1

  with precondition: [B=0,H=5,I+1=0,J+1=0,K+1=0,L+1=0,M+1=0,0>=F+2,A>=0] 


#### Cost of chains of evalfbb8in_loop_cont(A,B,C,D,E,F,G,H):
* Chain [52]: 0
  with precondition: [A=3] 

* Chain [51]: 0
  with precondition: [A=5] 


#### Cost of chains of evalfentryin(A,B,C,D,E,F,H):
* Chain [74]: 0
  with precondition: [] 

* Chain [73]: 1*s(270)+1
  Such that:s(270) =< B+1

  with precondition: [A=0,0>=F+2,B>=0] 

* Chain [72]: 0
  with precondition: [0>=A+1] 

* Chain [71]: 0
  with precondition: [0>=B+1,A>=0] 

* Chain [70]: 1*s(271)+0
  Such that:s(271) =< -B+F+1

  with precondition: [0>=B+1,A>=0,F>=B] 

* Chain [69]: 2*s(272)+0
  Such that:aux(4627) =< A+1
s(272) =< aux(4627)

  with precondition: [0>=B+1,A>=0,B>=F+1] 

* Chain [68]: 2*s(275)+0
  Such that:s(274) =< A
s(275) =< s(274)

  with precondition: [0>=B+1,A>=1,B>=F+1] 

* Chain [67]: 1*s(276)+1
  Such that:s(276) =< B+1

  with precondition: [0>=F+2,A>=0,B>=0] 

* Chain [66]: 2*s(277)+2*s(278)+4*s(283)+28*s(284)+2*s(288)+4*s(289)+24*s(290)+1
  Such that:aux(4628) =< 1
aux(4629) =< A
aux(4630) =< A+1
aux(4631) =< B+1
aux(4632) =< -F
s(277) =< aux(4628)
s(278) =< aux(4629)
s(283) =< aux(4631)
s(284) =< aux(4630)
s(277) =< aux(4630)
s(277) =< aux(4632)
s(285) =< 2
s(286) =< 1
s(288) =< s(284)*s(285)
s(289) =< s(284)*s(286)

  with precondition: [0>=F+2,A>=1,B>=0] 

* Chain [65]: 2*s(308)+28*s(309)+2*s(313)+4*s(314)+22*s(315)+0
  Such that:aux(4633) =< A
aux(4634) =< A+1
s(307) =< aux(4633)
s(308) =< aux(4633)
s(307) =< aux(4634)
s(308) =< aux(4634)
s(309) =< aux(4634)
s(309) =< s(307)
s(310) =< 2
s(311) =< 1
s(313) =< s(309)*s(310)
s(314) =< s(309)*s(311)

  with precondition: [0>=F+2,A>=1,F>=B] 

* Chain [64]: 4*s(334)+2*s(335)+4*s(336)+56*s(337)+4*s(341)+8*s(342)+48*s(343)+1
  Such that:s(329) =< B+1
aux(4635) =< 1
aux(4636) =< A
aux(4637) =< A+1
aux(4638) =< -F
s(334) =< aux(4635)
s(336) =< aux(4636)
s(335) =< s(329)
s(337) =< aux(4637)
s(334) =< aux(4637)
s(334) =< aux(4638)
s(338) =< 2
s(339) =< 1
s(341) =< s(337)*s(338)
s(342) =< s(337)*s(339)

  with precondition: [0>=F+2,A>=2,B>=0] 

* Chain [63]: 2*s(359)+28*s(360)+2*s(364)+4*s(365)+22*s(366)+0
  Such that:s(356) =< A
s(357) =< A+1
s(359) =< s(356)
s(360) =< s(357)
s(360) =< s(356)
s(361) =< 2
s(362) =< 1
s(364) =< s(360)*s(361)
s(365) =< s(360)*s(362)

  with precondition: [0>=F+2,A>=2,F>=B] 

* Chain [62]: 2*s(372)+2*s(373)+28*s(374)+2*s(378)+4*s(379)+24*s(380)+0
  Such that:s(367) =< 1
s(368) =< A
s(369) =< A+1
s(370) =< -F
s(372) =< s(367)
s(373) =< s(368)
s(374) =< s(369)
s(372) =< s(369)
s(372) =< s(370)
s(375) =< 2
s(376) =< 1
s(378) =< s(374)*s(375)
s(379) =< s(374)*s(376)

  with precondition: [0>=F+2,A>=3,B>=0] 

* Chain [61]: 28*s(383)+2*s(386)+2*s(387)+4*s(388)+22*s(389)+0
  Such that:aux(4639) =< A+1
aux(4640) =< F
s(383) =< aux(4639)
s(384) =< aux(4640)+2
s(385) =< aux(4640)+1
s(386) =< s(383)*aux(4640)
s(387) =< s(383)*s(384)
s(388) =< s(383)*s(385)

  with precondition: [A>=0] 

* Chain [60]: 2*s(400)+0
  Such that:s(399) =< B+1
s(400) =< s(399)

  with precondition: [A>=0,B>=0] 

* Chain [59]: 1*s(401)+1*s(402)+0
  Such that:s(401) =< B+1
s(402) =< F+2

  with precondition: [A>=0,B>=0,F+1>=0] 

* Chain [58]: 1*s(403)+0
  Such that:s(403) =< -B+F+1

  with precondition: [A>=0,B>=0,F>=B] 

* Chain [57]: 1*s(404)+0
  Such that:s(404) =< B

  with precondition: [A>=0,B>=1] 

* Chain [56]: 1*s(405)+1*s(406)+0
  Such that:s(405) =< B
s(406) =< F+1

  with precondition: [A>=0,B>=1,F>=0] 

* Chain [55]: 28*s(411)+2*s(414)+2*s(415)+4*s(416)+40*s(417)+3*s(418)+3*s(419)+6*s(420)+2*s(421)+59*s(422)+0
  Such that:s(408) =< A
s(409) =< A+1
s(407) =< -B
s(410) =< F
s(411) =< s(409)
s(411) =< s(408)
s(412) =< s(410)+2
s(413) =< s(410)+1
s(414) =< s(411)*s(410)
s(415) =< s(411)*s(412)
s(416) =< s(411)*s(413)
s(417) =< s(409)
s(418) =< s(417)*s(410)
s(419) =< s(417)*s(412)
s(420) =< s(417)*s(413)
s(421) =< s(409)
s(421) =< s(409)+s(409)+s(407)

  with precondition: [A>=1] 

* Chain [54]: 1*s(424)+14*s(426)+1*s(429)+1*s(430)+2*s(431)+12*s(432)+0
  Such that:s(425) =< A+1
s(423) =< F
s(424) =< F+2
s(426) =< s(425)
s(427) =< s(423)+2
s(428) =< s(423)+1
s(429) =< s(426)*s(423)
s(430) =< s(426)*s(427)
s(431) =< s(426)*s(428)

  with precondition: [A>=1,F+1>=0] 

* Chain [53]: 2*s(437)+14*s(438)+1*s(441)+1*s(442)+2*s(443)+14*s(444)+1*s(445)+1*s(446)+2*s(447)+23*s(448)+0
  Such that:s(433) =< A
s(434) =< A+1
s(435) =< F
s(436) =< F+1
s(437) =< s(436)
s(438) =< s(434)
s(438) =< s(433)
s(439) =< s(435)+2
s(440) =< s(435)+1
s(441) =< s(438)*s(435)
s(442) =< s(438)*s(439)
s(443) =< s(438)*s(440)
s(444) =< s(434)
s(445) =< s(444)*s(435)
s(446) =< s(444)*s(439)
s(447) =< s(444)*s(440)

  with precondition: [A>=1,F>=0] 


#### Cost of chains of evalfstart(A,B,C,D,E,F,H):
* Chain [96]: 0
  with precondition: [] 

* Chain [95]: 1*s(449)+1
  Such that:s(449) =< B+1

  with precondition: [A=0,0>=F+2,B>=0] 

* Chain [94]: 0
  with precondition: [0>=A+1] 

* Chain [93]: 0
  with precondition: [0>=B+1,A>=0] 

* Chain [92]: 1*s(450)+0
  Such that:s(450) =< -B+F+1

  with precondition: [0>=B+1,A>=0,F>=B] 

* Chain [91]: 2*s(452)+0
  Such that:s(451) =< A+1
s(452) =< s(451)

  with precondition: [0>=B+1,A>=0,B>=F+1] 

* Chain [90]: 2*s(454)+0
  Such that:s(453) =< A
s(454) =< s(453)

  with precondition: [0>=B+1,A>=1,B>=F+1] 

* Chain [89]: 1*s(455)+1
  Such that:s(455) =< B+1

  with precondition: [0>=F+2,A>=0,B>=0] 

* Chain [88]: 2*s(461)+2*s(462)+4*s(463)+28*s(464)+2*s(467)+4*s(468)+24*s(469)+1
  Such that:s(456) =< 1
s(457) =< A
s(458) =< A+1
s(459) =< B+1
s(460) =< -F
s(461) =< s(456)
s(462) =< s(457)
s(463) =< s(459)
s(464) =< s(458)
s(461) =< s(458)
s(461) =< s(460)
s(465) =< 2
s(466) =< 1
s(467) =< s(464)*s(465)
s(468) =< s(464)*s(466)

  with precondition: [0>=F+2,A>=1,B>=0] 

* Chain [87]: 2*s(473)+28*s(474)+2*s(477)+4*s(478)+22*s(479)+0
  Such that:s(470) =< A
s(471) =< A+1
s(472) =< s(470)
s(473) =< s(470)
s(472) =< s(471)
s(473) =< s(471)
s(474) =< s(471)
s(474) =< s(472)
s(475) =< 2
s(476) =< 1
s(477) =< s(474)*s(475)
s(478) =< s(474)*s(476)

  with precondition: [0>=F+2,A>=1,F>=B] 

* Chain [86]: 4*s(485)+4*s(486)+2*s(487)+56*s(488)+4*s(491)+8*s(492)+48*s(493)+1
  Such that:s(481) =< 1
s(482) =< A
s(483) =< A+1
s(480) =< B+1
s(484) =< -F
s(485) =< s(481)
s(486) =< s(482)
s(487) =< s(480)
s(488) =< s(483)
s(485) =< s(483)
s(485) =< s(484)
s(489) =< 2
s(490) =< 1
s(491) =< s(488)*s(489)
s(492) =< s(488)*s(490)

  with precondition: [0>=F+2,A>=2,B>=0] 

* Chain [85]: 2*s(496)+28*s(497)+2*s(500)+4*s(501)+22*s(502)+0
  Such that:s(494) =< A
s(495) =< A+1
s(496) =< s(494)
s(497) =< s(495)
s(497) =< s(494)
s(498) =< 2
s(499) =< 1
s(500) =< s(497)*s(498)
s(501) =< s(497)*s(499)

  with precondition: [0>=F+2,A>=2,F>=B] 

* Chain [84]: 2*s(507)+2*s(508)+28*s(509)+2*s(512)+4*s(513)+24*s(514)+0
  Such that:s(503) =< 1
s(504) =< A
s(505) =< A+1
s(506) =< -F
s(507) =< s(503)
s(508) =< s(504)
s(509) =< s(505)
s(507) =< s(505)
s(507) =< s(506)
s(510) =< 2
s(511) =< 1
s(512) =< s(509)*s(510)
s(513) =< s(509)*s(511)

  with precondition: [0>=F+2,A>=3,B>=0] 

* Chain [83]: 28*s(517)+2*s(520)+2*s(521)+4*s(522)+22*s(523)+0
  Such that:s(515) =< A+1
s(516) =< F
s(517) =< s(515)
s(518) =< s(516)+2
s(519) =< s(516)+1
s(520) =< s(517)*s(516)
s(521) =< s(517)*s(518)
s(522) =< s(517)*s(519)

  with precondition: [A>=0] 

* Chain [82]: 2*s(525)+0
  Such that:s(524) =< B+1
s(525) =< s(524)

  with precondition: [A>=0,B>=0] 

* Chain [81]: 1*s(526)+1*s(527)+0
  Such that:s(526) =< B+1
s(527) =< F+2

  with precondition: [A>=0,B>=0,F+1>=0] 

* Chain [80]: 1*s(528)+0
  Such that:s(528) =< -B+F+1

  with precondition: [A>=0,B>=0,F>=B] 

* Chain [79]: 1*s(529)+0
  Such that:s(529) =< B

  with precondition: [A>=0,B>=1] 

* Chain [78]: 1*s(530)+1*s(531)+0
  Such that:s(530) =< B
s(531) =< F+1

  with precondition: [A>=0,B>=1,F>=0] 

* Chain [77]: 28*s(536)+2*s(539)+2*s(540)+4*s(541)+40*s(542)+3*s(543)+3*s(544)+6*s(545)+2*s(546)+59*s(547)+0
  Such that:s(532) =< A
s(533) =< A+1
s(534) =< -B
s(535) =< F
s(536) =< s(533)
s(536) =< s(532)
s(537) =< s(535)+2
s(538) =< s(535)+1
s(539) =< s(536)*s(535)
s(540) =< s(536)*s(537)
s(541) =< s(536)*s(538)
s(542) =< s(533)
s(543) =< s(542)*s(535)
s(544) =< s(542)*s(537)
s(545) =< s(542)*s(538)
s(546) =< s(533)
s(546) =< s(533)+s(533)+s(534)

  with precondition: [A>=1] 

* Chain [76]: 1*s(550)+14*s(551)+1*s(554)+1*s(555)+2*s(556)+12*s(557)+0
  Such that:s(548) =< A+1
s(549) =< F
s(550) =< F+2
s(551) =< s(548)
s(552) =< s(549)+2
s(553) =< s(549)+1
s(554) =< s(551)*s(549)
s(555) =< s(551)*s(552)
s(556) =< s(551)*s(553)

  with precondition: [A>=1,F+1>=0] 

* Chain [75]: 2*s(562)+14*s(563)+1*s(566)+1*s(567)+2*s(568)+14*s(569)+1*s(570)+1*s(571)+2*s(572)+23*s(573)+0
  Such that:s(558) =< A
s(559) =< A+1
s(560) =< F
s(561) =< F+1
s(562) =< s(561)
s(563) =< s(559)
s(563) =< s(558)
s(564) =< s(560)+2
s(565) =< s(560)+1
s(566) =< s(563)*s(560)
s(567) =< s(563)*s(564)
s(568) =< s(563)*s(565)
s(569) =< s(559)
s(570) =< s(569)*s(560)
s(571) =< s(569)*s(564)
s(572) =< s(569)*s(565)

  with precondition: [A>=1,F>=0] 


Closed-form bounds of evalfstart(A,B,C,D,E,F,H): 
-------------------------------------
* Chain [96] with precondition: [] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [95] with precondition: [A=0,0>=F+2,B>=0] 
    - Upper bound: B+2 
    - Complexity: n 
* Chain [94] with precondition: [0>=A+1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [93] with precondition: [0>=B+1,A>=0] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [92] with precondition: [0>=B+1,A>=0,F>=B] 
    - Upper bound: -B+F+1 
    - Complexity: n 
* Chain [91] with precondition: [0>=B+1,A>=0,B>=F+1] 
    - Upper bound: 2*A+2 
    - Complexity: n 
* Chain [90] with precondition: [0>=B+1,A>=1,B>=F+1] 
    - Upper bound: 2*A 
    - Complexity: n 
* Chain [89] with precondition: [0>=F+2,A>=0,B>=0] 
    - Upper bound: B+2 
    - Complexity: n 
* Chain [88] with precondition: [0>=F+2,A>=1,B>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [87] with precondition: [0>=F+2,A>=1,F>=B] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [86] with precondition: [0>=F+2,A>=2,B>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [85] with precondition: [0>=F+2,A>=2,F>=B] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [84] with precondition: [0>=F+2,A>=3,B>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [83] with precondition: [A>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [82] with precondition: [A>=0,B>=0] 
    - Upper bound: 2*B+2 
    - Complexity: n 
* Chain [81] with precondition: [A>=0,B>=0,F+1>=0] 
    - Upper bound: B+F+3 
    - Complexity: n 
* Chain [80] with precondition: [A>=0,B>=0,F>=B] 
    - Upper bound: -B+F+1 
    - Complexity: n 
* Chain [79] with precondition: [A>=0,B>=1] 
    - Upper bound: B 
    - Complexity: n 
* Chain [78] with precondition: [A>=0,B>=1,F>=0] 
    - Upper bound: B+F+1 
    - Complexity: n 
* Chain [77] with precondition: [A>=1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [76] with precondition: [A>=1,F+1>=0] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [75] with precondition: [A>=1,F>=0] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of evalfstart(A,B,C,D,E,F,H): inf 
Asymptotic class: infinity 
* Total analysis performed in 14312 ms.

