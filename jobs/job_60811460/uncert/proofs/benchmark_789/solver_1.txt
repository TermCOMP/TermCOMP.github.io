WORST_CASE(Omega(n^1),O(n^2))

# LoAT Proof:
WORST_CASE(Omega(n^1),?)

WORST_CASE(Omega(n^1),?)
Initial ITS

Start location: l0

Location map:
LoAT_sink -> 0
l0 -> 1
l1 -> 2
l2 -> 3
l3 -> 4

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=it2
   1: (1-i4 <= 0 /\ -2+i1 == 0 /\ -3+i4 <= 0 /\ it4 == 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
   2: -3+i1 == 0 /\ i1'=2, i3'=1+i3, i5'=-1+i5
   3: (-2+i1 == 0 /\ -1+it5 == 0 /\ i5 > 0) /\ i1'=3, i3'=1+i3
   4: -3+i1 == 0 /\ i1'=4, i3'=1+i3
   5: (i6 > 0 /\ -4+i1 == 0 /\ i6-i7^2 < 0) /\ i1'=4, i3'=1+i3, i6'=5*i6+i8^2, i7'=2*i7

Dependency graph:
0 -> 1, 0 -> 3
1 -> 1, 1 -> 3
2 -> 1, 2 -> 3
3 -> 2, 3 -> 4
4 -> 5
5 -> 5

Preprocessed Transitions

	Propagated Equalities

	Original rule:
	(1-i4 <= 0 /\ -2+i1 == 0 /\ -3+i4 <= 0 /\ it4 == 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
	New rule:
	(0 == 0 /\ 1-i4 <= 0 /\ -2+i1 == 0 /\ -3+i4 <= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
	
		propagated equality it4 = 0
		
	Simplified Guard

	Original rule:
	(0 == 0 /\ 1-i4 <= 0 /\ -2+i1 == 0 /\ -3+i4 <= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
	New rule:
	(1-i4 <= 0 /\ -2+i1 == 0 /\ -3+i4 <= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
	
	Propagated Equalities

	Original rule:
	(-2+i1 == 0 /\ -1+it5 == 0 /\ i5 > 0) /\ i1'=3, i3'=1+i3
	New rule:
	(0 == 0 /\ -2+i1 == 0 /\ i5 > 0) /\ i1'=3, i3'=1+i3
	
		propagated equality it5 = 1
		
	Simplified Guard

	Original rule:
	(0 == 0 /\ -2+i1 == 0 /\ i5 > 0) /\ i1'=3, i3'=1+i3
	New rule:
	(-2+i1 == 0 /\ i5 > 0) /\ i1'=3, i3'=1+i3

Start location: l0

Location map:
LoAT_sink -> 0
l0 -> 1
l1 -> 2
l2 -> 3
l3 -> 4

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=it2
   2: -3+i1 == 0 /\ i1'=2, i3'=1+i3, i5'=-1+i5
   4: -3+i1 == 0 /\ i1'=4, i3'=1+i3
   5: (i6 > 0 /\ -4+i1 == 0 /\ i6-i7^2 < 0) /\ i1'=4, i3'=1+i3, i6'=5*i6+i8^2, i7'=2*i7
   6: (1-i4 <= 0 /\ -2+i1 == 0 /\ -3+i4 <= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
   7: (-2+i1 == 0 /\ i5 > 0) /\ i1'=3, i3'=1+i3

Dependency graph:
0 -> 6, 0 -> 7
2 -> 6, 2 -> 7
4 -> 5
5 -> 5
6 -> 6, 6 -> 7
7 -> 2, 7 -> 4

Step with 0

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 7

	Trace

	0[(-1+i1 == 0)]
	7[(-2+i1 == 0 /\ i5 > 0)]
	
	Blocked

	{}
	{}
	{}
	
Step with 4

	Trace

	0[(-1+i1 == 0)]
	7[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	
	Blocked

	{}
	{}
	{}
	{}
	
Step with 5

	Trace

	0[(-1+i1 == 0)]
	7[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	5[(i6 > 0 /\ -4+i1 == 0 /\ i6-i7^2 < 0)]
	
	Blocked

	{}
	{}
	{}
	{}
	{}
	
Step with 5

	Trace

	0[(-1+i1 == 0)]
	7[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	5[(i6 > 0 /\ -4+i1 == 0 /\ i6-i7^2 < 0)]
	5[(i6 > 0 /\ -4+i1 == 0 /\ i6-i7^2 < 0)]
	
	Blocked

	{}
	{}
	{}
	{}
	{}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	7[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	5[(i6 > 0 /\ -4+i1 == 0 /\ i6-i7^2 < 0)]
	
	Blocked

	{}
	{}
	{}
	{}
	{5[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	7[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	
	Blocked

	{}
	{}
	{}
	{5[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	7[(-2+i1 == 0 /\ i5 > 0)]
	
	Blocked

	{}
	{}
	{4[T]}
	
Step with 2

	Trace

	0[(-1+i1 == 0)]
	7[(-2+i1 == 0 /\ i5 > 0)]
	2[(-3+i1 == 0)]
	
	Blocked

	{}
	{}
	{4[T]}
	{}
	
Poly(n^1)

Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -2+i1 == 0 /\ i5 > 0) /\ i1'=2, i3'=2+i3, i5'=-1+i5
		New rule:
		(-2+i1 == 0 /\ i5 > 0) /\ i1'=2, i3'=2+i3, i5'=-1+i5

	Loop Acceleration

	Original rule:
	(-2+i1 == 0 /\ i5 > 0) /\ i1'=2, i3'=2+i3, i5'=-1+i5
	New rule:
	(-2+i1 >= 0 /\ 1-it50+i5 > 0 /\ -1+it50 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+2*it50, i5'=-it50+i5

		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		i5 > 0 [0]: montonic decrease yields 1-it50+i5 > 0
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0, i5 > 0 -> 1-it50+i5 > 0}

	Removed Trivial Updates

	Original rule:
	(-2+i1 >= 0 /\ 1-it50+i5 > 0 /\ -1+it50 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+2*it50, i5'=-it50+i5
	New rule:
	(-2+i1 >= 0 /\ 1-it50+i5 > 0 /\ -1+it50 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+2*it50, i5'=-it50+i5
	
	Instantiation

	Original rule:
	(-2+i1 >= 0 /\ 1-it50+i5 > 0 /\ -1+it50 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+2*it50, i5'=-it50+i5
	New rule:
	(1 > 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+2*i5, i5'=0

Start location: l0

Location map:
LoAT_sink -> 0
l0 -> 1
l1 -> 2
l2 -> 3
l3 -> 4

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=it2
   2: -3+i1 == 0 /\ i1'=2, i3'=1+i3, i5'=-1+i5
   4: -3+i1 == 0 /\ i1'=4, i3'=1+i3
   5: (i6 > 0 /\ -4+i1 == 0 /\ i6-i7^2 < 0) /\ i1'=4, i3'=1+i3, i6'=5*i6+i8^2, i7'=2*i7
   6: (1-i4 <= 0 /\ -2+i1 == 0 /\ -3+i4 <= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
   7: (-2+i1 == 0 /\ i5 > 0) /\ i1'=3, i3'=1+i3
   8: (1 > 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+2*i5, i5'=0

Dependency graph:
0 -> 6, 0 -> 7, 0 -> 8
2 -> 6, 2 -> 7, 2 -> 8
4 -> 5
5 -> 5
6 -> 6, 6 -> 7, 6 -> 8
7 -> 2, 7 -> 4
8 -> 6, 8 -> 7

	Trace

	0[(-1+i1 == 0)]
	8[(1 > 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{}
	{8[T]}
	
Step with 6

	Trace

	0[(-1+i1 == 0)]
	8[(1 > 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0)]
	6[(1-i4 <= 0 /\ -2+i1 == 0 /\ -3+i4 <= 0)]
	
	Blocked

	{}
	{}
	{7[T], 8[T]}
	{}
	
Accelerate

	Loop Acceleration

	Original rule:
	(1-i4 <= 0 /\ -2+i1 == 0 /\ -3+i4 <= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
	New rule:
	(-1+i4 >= 0 /\ -2+i1 >= 0 /\ -1+it71 >= 0 /\ 2-i1 >= 0 /\ 4-it71-i4 >= 0) /\ i1'=i1, i3'=i3+it71, i4'=it71+i4

		-1+i4 >= 0 [0]: monotonic increase yields -1+i4 >= 0
		
		-2+i1 >= 0 [0]: unchanged
		
		3-i4 >= 0 [0]: montonic decrease yields 4-it71-i4 >= 0
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-1+i4 >= 0 -> -1+i4 >= 0, -2+i1 >= 0 -> -2+i1 >= 0, 3-i4 >= 0 -> 4-it71-i4 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-1+i4 >= 0 /\ -2+i1 >= 0 /\ -1+it71 >= 0 /\ 2-i1 >= 0 /\ 4-it71-i4 >= 0) /\ i1'=i1, i3'=i3+it71, i4'=it71+i4
	New rule:
	(-1+i4 >= 0 /\ -2+i1 >= 0 /\ -1+it71 >= 0 /\ 2-i1 >= 0 /\ 4-it71-i4 >= 0) /\ i3'=i3+it71, i4'=it71+i4
	
	Instantiation

	Original rule:
	(-1+i4 >= 0 /\ -2+i1 >= 0 /\ -1+it71 >= 0 /\ 2-i1 >= 0 /\ 4-it71-i4 >= 0) /\ i3'=i3+it71, i4'=it71+i4
	New rule:
	(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0) /\ i3'=4+i3-i4, i4'=4

Start location: l0

Location map:
LoAT_sink -> 0
l0 -> 1
l1 -> 2
l2 -> 3
l3 -> 4

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=it2
   2: -3+i1 == 0 /\ i1'=2, i3'=1+i3, i5'=-1+i5
   4: -3+i1 == 0 /\ i1'=4, i3'=1+i3
   5: (i6 > 0 /\ -4+i1 == 0 /\ i6-i7^2 < 0) /\ i1'=4, i3'=1+i3, i6'=5*i6+i8^2, i7'=2*i7
   6: (1-i4 <= 0 /\ -2+i1 == 0 /\ -3+i4 <= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
   7: (-2+i1 == 0 /\ i5 > 0) /\ i1'=3, i3'=1+i3
   8: (1 > 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+2*i5, i5'=0
   9: (0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0) /\ i3'=4+i3-i4, i4'=4

Dependency graph:
0 -> 6, 0 -> 7, 0 -> 8, 0 -> 9
2 -> 6, 2 -> 7, 2 -> 8, 2 -> 9
4 -> 5
5 -> 5
6 -> 6, 6 -> 7, 6 -> 8, 6 -> 9
7 -> 2, 7 -> 4
8 -> 6, 8 -> 7, 8 -> 9
9 -> 6, 9 -> 7, 9 -> 8

	Trace

	0[(-1+i1 == 0)]
	8[(1 > 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0)]
	9[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{}
	{7[T], 8[T]}
	{6[T], 9[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	8[(1 > 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{}
	{7[T], 8[T], 9[T]}
	
Step with 6

	Trace

	0[(-1+i1 == 0)]
	8[(1 > 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0)]
	6[(1-i4 <= 0 /\ -2+i1 == 0 /\ -3+i4 <= 0)]
	
	Blocked

	{}
	{}
	{7[T], 8[T], 9[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	8[(1 > 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{}
	{6[T], 7[T], 8[T], 9[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{8[T]}
	
Step with 9

	Trace

	0[(-1+i1 == 0)]
	9[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{8[T]}
	{9[T]}
	
Step with 7

	Trace

	0[(-1+i1 == 0)]
	9[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0)]
	7[(-2+i1 == 0 /\ i5 > 0)]
	
	Blocked

	{}
	{8[T]}
	{6[T], 9[T]}
	{}
	
Step with 4

	Trace

	0[(-1+i1 == 0)]
	9[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0)]
	7[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	
	Blocked

	{}
	{8[T]}
	{6[T], 9[T]}
	{}
	{}
	
Step with 5

	Trace

	0[(-1+i1 == 0)]
	9[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0)]
	7[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	5[(i6 > 0 /\ -4+i1 == 0 /\ i6-i7^2 < 0)]
	
	Blocked

	{}
	{8[T]}
	{6[T], 9[T]}
	{}
	{}
	{}
	
Step with 5

	Trace

	0[(-1+i1 == 0)]
	9[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0)]
	7[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	5[(i6 > 0 /\ -4+i1 == 0 /\ i6-i7^2 < 0)]
	5[(i6 > 0 /\ -4+i1 == 0 /\ i6-i7^2 < 0)]
	
	Blocked

	{}
	{8[T]}
	{6[T], 9[T]}
	{}
	{}
	{}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	9[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0)]
	7[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	5[(i6 > 0 /\ -4+i1 == 0 /\ i6-i7^2 < 0)]
	
	Blocked

	{}
	{8[T]}
	{6[T], 9[T]}
	{}
	{}
	{5[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	9[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0)]
	7[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	
	Blocked

	{}
	{8[T]}
	{6[T], 9[T]}
	{}
	{5[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	9[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0)]
	7[(-2+i1 == 0 /\ i5 > 0)]
	
	Blocked

	{}
	{8[T]}
	{6[T], 9[T]}
	{4[T]}
	
Step with 2

	Trace

	0[(-1+i1 == 0)]
	9[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0)]
	7[(-2+i1 == 0 /\ i5 > 0)]
	2[(-3+i1 == 0)]
	
	Blocked

	{}
	{8[T]}
	{6[T], 9[T]}
	{4[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	9[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0)]
	7[(-2+i1 == 0 /\ i5 > 0)]
	
	Blocked

	{}
	{8[T]}
	{6[T], 9[T]}
	{2[T], 4[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	9[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{8[T]}
	{6[T], 7[T], 9[T]}
	
Step with 8

	Trace

	0[(-1+i1 == 0)]
	9[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0)]
	8[(1 > 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{8[T]}
	{6[T], 7[T], 9[T]}
	{8[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	9[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 3-i4 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{8[T]}
	{6[T], 7[T], 8[T], 9[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{8[T], 9[T]}
	
Step with 7

	Trace

	0[(-1+i1 == 0)]
	7[(-2+i1 == 0 /\ i5 > 0)]
	
	Blocked

	{}
	{8[T], 9[T]}
	{}
	
Step with 4

	Trace

	0[(-1+i1 == 0)]
	7[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	
	Blocked

	{}
	{8[T], 9[T]}
	{}
	{}
	
Step with 5

	Trace

	0[(-1+i1 == 0)]
	7[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	5[(i6 > 0 /\ -4+i1 == 0 /\ i6-i7^2 < 0)]
	
	Blocked

	{}
	{8[T], 9[T]}
	{}
	{}
	{}
	
Step with 5

	Trace

	0[(-1+i1 == 0)]
	7[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	5[(i6 > 0 /\ -4+i1 == 0 /\ i6-i7^2 < 0)]
	5[(i6 > 0 /\ -4+i1 == 0 /\ i6-i7^2 < 0)]
	
	Blocked

	{}
	{8[T], 9[T]}
	{}
	{}
	{}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	7[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	5[(i6 > 0 /\ -4+i1 == 0 /\ i6-i7^2 < 0)]
	
	Blocked

	{}
	{8[T], 9[T]}
	{}
	{}
	{5[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	7[(-2+i1 == 0 /\ i5 > 0)]
	4[(-3+i1 == 0)]
	
	Blocked

	{}
	{8[T], 9[T]}
	{}
	{5[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	7[(-2+i1 == 0 /\ i5 > 0)]
	
	Blocked

	{}
	{8[T], 9[T]}
	{4[T]}
	
Step with 2

	Trace

	0[(-1+i1 == 0)]
	7[(-2+i1 == 0 /\ i5 > 0)]
	2[(-3+i1 == 0)]
	
	Blocked

	{}
	{8[T], 9[T]}
	{4[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	7[(-2+i1 == 0 /\ i5 > 0)]
	
	Blocked

	{}
	{8[T], 9[T]}
	{2[T], 4[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{7[T], 8[T], 9[T]}
	
Step with 6

	Trace

	0[(-1+i1 == 0)]
	6[(1-i4 <= 0 /\ -2+i1 == 0 /\ -3+i4 <= 0)]
	
	Blocked

	{}
	{7[T], 8[T], 9[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{6[T], 7[T], 8[T], 9[T]}
	
Backtrack

	Trace

	Blocked

	{0[T]}
	
Accept

Poly(n^1)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^2))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄
  Temp_Vars:  U, V
  Locations:  l0, l1, l2, l3
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃, X₄) → l1(U, X₁, X₂, X₃, X₄)
  t₁: l1(X₀, X₁, X₂, X₃, X₄) → l1(1+X₀, X₁, X₂, X₃, X₄) :|: X₀ ≤ 3 ∧ 1 ≤ X₀ ∧ 0 ≤ V ∧ V ≤ 0
  t₃: l1(X₀, X₁, X₂, X₃, X₄) → l2(X₀, X₁, X₂, X₃, X₄) :|: V ≤ 1 ∧ 1 ≤ V ∧ 1 ≤ X₁
  t₂: l2(X₀, X₁, X₂, X₃, X₄) → l1(X₀, X₁-1, X₂, X₃, X₄)
  t₄: l2(X₀, X₁, X₂, X₃, X₄) → l3(X₀, X₁, X₂, X₃, X₄)
  t₅: l3(X₀, X₁, X₂, X₃, X₄) → l3(X₀, X₁, 5⋅X₂+(X₄)², 2⋅X₃, X₄) :|: 1 ≤ X₂ ∧ 1+X₂ ≤ (X₃)²


Preprocessing
  Found invariant 1 ≤ X₁ for location l2


  Found invariant 1 ≤ X₁ for location l3


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄
  Temp_Vars:  U, V
  Locations:  l0, l1, l2, l3
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃, X₄) → l1(U, X₁, X₂, X₃, X₄)
  t₁: l1(X₀, X₁, X₂, X₃, X₄) → l1(1+X₀, X₁, X₂, X₃, X₄) :|: X₀ ≤ 3 ∧ 1 ≤ X₀ ∧ 0 ≤ V ∧ V ≤ 0
  t₃: l1(X₀, X₁, X₂, X₃, X₄) → l2(X₀, X₁, X₂, X₃, X₄) :|: V ≤ 1 ∧ 1 ≤ V ∧ 1 ≤ X₁
  t₂: l2(X₀, X₁, X₂, X₃, X₄) → l1(X₀, X₁-1, X₂, X₃, X₄) :|: 1 ≤ X₁
  t₄: l2(X₀, X₁, X₂, X₃, X₄) → l3(X₀, X₁, X₂, X₃, X₄) :|: 1 ≤ X₁
  t₅: l3(X₀, X₁, X₂, X₃, X₄) → l3(X₀, X₁, 5⋅X₂+(X₄)², 2⋅X₃, X₄) :|: 1 ≤ X₂ ∧ 1+X₂ ≤ (X₃)² ∧ 1 ≤ X₁


MPRF for transition t₂: l2(X₀, X₁, X₂, X₃, X₄) → l1(X₀, X₁-1, X₂, X₃, X₄) :|: 1 ≤ X₁ of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l1: [X₁]
    • l2: [X₁]




MPRF for transition t₃: l1(X₀, X₁, X₂, X₃, X₄) → l2(X₀, X₁, X₂, X₃, X₄) :|: V ≤ 1 ∧ 1 ≤ V ∧ 1 ≤ X₁ of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l1: [X₁]
    • l2: [X₁-1]




  Found invariant 1 ≤ X₁ for location l2


  Found invariant X₀ ≤ 4 ∧ 2 ≤ X₀ for location l1_v1


  Found invariant 1 ≤ X₁ for location l3


Analysing control-flow refined program
  knowledge_propagation leads to new time bound X₁+1 {O(n)} for transition t₅₇: l1(X₀, X₁, X₂, X₃, X₄) → l2(X₀, X₁, X₂, X₃, X₄) :|: V ≤ 1 ∧ 1 ≤ V ∧ 1 ≤ X₁


  knowledge_propagation leads to new time bound X₁+1 {O(n)} for transition t₅₈: l1(X₀, X₁, X₂, X₃, X₄) → l1_v1(1+X₀, X₁, X₂, X₃, X₄) :|: X₀ ≤ 3 ∧ 1 ≤ X₀ ∧ 0 ≤ V ∧ V ≤ 0


MPRF for transition t₅₉: l1_v1(X₀, X₁, X₂, X₃, X₄) → l2(X₀, X₁, X₂, X₃, X₄) :|: V ≤ 1 ∧ 1 ≤ V ∧ 1 ≤ X₁ ∧ X₀ ≤ 4 ∧ 1 ≤ X₀ ∧ 2 ≤ X₀ of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l1: [X₁]
    • l1_v1: [X₁]
    • l2: [X₁-1]




MPRF for transition t₆₀: l1_v1(X₀, X₁, X₂, X₃, X₄) → l1_v1(1+X₀, X₁, X₂, X₃, X₄) :|: X₀ ≤ 3 ∧ 1 ≤ X₀ ∧ 0 ≤ V ∧ V ≤ 0 ∧ X₀ ≤ 4 ∧ 2 ≤ X₀ of depth 1:
  new bound:
    9⋅X₁+10 {O(n)}

  MPRF:
    • l1: [1]
    • l1_v1: [5-X₀]
    • l2: [1]




CFR: Improvement to new bound with the following program: 
  method: PartialEvaluation new bound: 
    O(n)

  cfr-program: 
    Start:  l0
    Program_Vars:  X₀, X₁, X₂, X₃, X₄
    Temp_Vars:  U, V
    Locations:  l0, l1, l1_v1, l2, l3
    Return Locations:  
    Transitions:
    t₀: l0(X₀, X₁, X₂, X₃, X₄) → l1(U, X₁, X₂, X₃, X₄)
    t₅₈: l1(X₀, X₁, X₂, X₃, X₄) → l1_v1(1+X₀, X₁, X₂, X₃, X₄) :|: X₀ ≤ 3 ∧ 1 ≤ X₀ ∧ 0 ≤ V ∧ V ≤ 0
    t₃: l1(X₀, X₁, X₂, X₃, X₄) → l2(X₀, X₁, X₂, X₃, X₄) :|: V ≤ 1 ∧ 1 ≤ V ∧ 1 ≤ X₁
    t₅₇: l1(X₀, X₁, X₂, X₃, X₄) → l2(X₀, X₁, X₂, X₃, X₄) :|: V ≤ 1 ∧ 1 ≤ V ∧ 1 ≤ X₁
    t₆₀: l1_v1(X₀, X₁, X₂, X₃, X₄) → l1_v1(1+X₀, X₁, X₂, X₃, X₄) :|: X₀ ≤ 3 ∧ 1 ≤ X₀ ∧ 0 ≤ V ∧ V ≤ 0 ∧ X₀ ≤ 4 ∧ 2 ≤ X₀
    t₅₉: l1_v1(X₀, X₁, X₂, X₃, X₄) → l2(X₀, X₁, X₂, X₃, X₄) :|: V ≤ 1 ∧ 1 ≤ V ∧ 1 ≤ X₁ ∧ X₀ ≤ 4 ∧ 1 ≤ X₀ ∧ 2 ≤ X₀
    t₂: l2(X₀, X₁, X₂, X₃, X₄) → l1(X₀, X₁-1, X₂, X₃, X₄) :|: 1 ≤ X₁
    t₄: l2(X₀, X₁, X₂, X₃, X₄) → l3(X₀, X₁, X₂, X₃, X₄) :|: 1 ≤ X₁
    t₅: l3(X₀, X₁, X₂, X₃, X₄) → l3(X₀, X₁, 5⋅X₂+(X₄)², 2⋅X₃, X₄) :|: 1 ≤ X₂ ∧ 1+X₂ ≤ (X₃)² ∧ 1 ≤ X₁




TWN: t₅: l3→l3


  cycle: [t₅: l3→l3]
  original loop: (1 ≤ X₂ ∧ 1+X₂ ≤ (X₃)² ∧ 1 ≤ X₁,(X₁,X₂,X₃,X₄) -> (X₁,5⋅X₂+(X₄)²,2⋅X₃,X₄))
  transformed loop: (1 ≤ X₂ ∧ 1+X₂ ≤ (X₃)² ∧ 1 ≤ X₁,(X₁,X₂,X₃,X₄) -> (X₁,5⋅X₂+(X₄)²,2⋅X₃,X₄))
  loop: (1 ≤ X₂ ∧ 1+X₂ ≤ (X₃)² ∧ 1 ≤ X₁,(X₁,X₂,X₃,X₄) -> (X₁,5⋅X₂+(X₄)²,2⋅X₃,X₄))
  order: [X₄; X₃; X₂; X₁]
closed-form:  X₄: X₄
  X₃: X₃⋅(2)^n
  X₂: X₂⋅(5)^n + [[n != 0]]⋅1/4⋅(X₄)²⋅(5)^n + [[n != 0]]⋅-1/4⋅(X₄)²
  X₁: X₁

  Termination: true
  Formula: 
    (X₄)² ≤ 4 ∧ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 4 ≤ (X₄)² ∧ 0 ≤ 4⋅X₂+(X₄)² ∧ 4⋅X₂+(X₄)² ≤ 0 ∧ 0 ≤ (X₃)² ∧ (X₃)² ≤ 0
     ∨ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 1+4⋅X₂+(X₄)² ≤ 0
     ∨ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 1 ≤ 4⋅(X₃)² ∧ 0 ≤ 4⋅X₂+(X₄)² ∧ 4⋅X₂+(X₄)² ≤ 0
     ∨ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 5 ≤ (X₄)² ∧ 0 ≤ 4⋅X₂+(X₄)² ∧ 4⋅X₂+(X₄)² ≤ 0 ∧ 0 ≤ (X₃)² ∧ (X₃)² ≤ 0



Stabilization-Threshold for: 1+X₂ ≤ (X₃)²
  alphas_abs: 4⋅(X₃)²+(X₄)²
  M: 0
  N: 1
  Bound: 2⋅X₄^2+8⋅X₃^2+2 {O(n^2)}

TWN - Lifting for [5: l3->l3] of 2⋅X₄^2+8⋅X₃^2+4 {O(n^2)}
relevant size-bounds w.r.t. t₄: l2→l3:
Runtime-bound of t₄: 1 {O(1)}
Results in: 2⋅X₄^2+8⋅X₃^2+4 {O(n^2)}
  Found invariant 1 ≤ X₁ for location l2


  Found invariant X₀ ≤ 4 ∧ 2 ≤ X₀ for location l1_v1


  Found invariant 1 ≤ X₁ for location l3


  Found invariant 5 ≤ X₂ ∧ 6 ≤ X₁+X₂ ∧ 1 ≤ X₁ for location l3_v1


All Bounds
Timebounds
  Overall timebound:2⋅X₄^2+8⋅X₃^2+14⋅X₁+18 {O(n^2)}
    t₀: 1 {O(1)}
    t₂: X₁ {O(n)}
    t₃: X₁ {O(n)}
    t₄: 1 {O(1)}
    t₅: 2⋅X₄^2+8⋅X₃^2+4 {O(n^2)}
    t₅₇: X₁+1 {O(n)}
    t₅₈: X₁+1 {O(n)}
    t₅₉: X₁ {O(n)}
    t₆₀: 9⋅X₁+10 {O(n)}


Costbounds
  Overall costbound: 2⋅X₄^2+8⋅X₃^2+14⋅X₁+18 {O(n^2)}
    t₀: 1 {O(1)}
    t₂: X₁ {O(n)}
    t₃: X₁ {O(n)}
    t₄: 1 {O(1)}
    t₅: 2⋅X₄^2+8⋅X₃^2+4 {O(n^2)}
    t₅₇: X₁+1 {O(n)}
    t₅₈: X₁+1 {O(n)}
    t₅₉: X₁ {O(n)}
    t₆₀: 9⋅X₁+10 {O(n)}


Sizebounds
    t₀, X₁: X₁ {O(n)}
    t₀, X₂: X₂ {O(n)}
    t₀, X₃: X₃ {O(n)}
    t₀, X₄: X₄ {O(n)}
    t₂, X₁: X₁ {O(n)}
    t₂, X₂: X₂ {O(n)}
    t₂, X₃: X₃ {O(n)}
    t₂, X₄: X₄ {O(n)}
    t₃, X₁: X₁ {O(n)}
    t₃, X₂: X₂ {O(n)}
    t₃, X₃: X₃ {O(n)}
    t₃, X₄: X₄ {O(n)}
    t₄, X₁: X₁ {O(n)}
    t₄, X₂: X₂ {O(n)}
    t₄, X₃: X₃ {O(n)}
    t₄, X₄: X₄ {O(n)}
    t₅, X₁: X₁ {O(n)}
    t₅, X₂: 2⋅5^(2⋅X₄^2+32⋅X₃^2+4)⋅X₄^2+5⋅5^(2⋅X₄^2+32⋅X₃^2+4)⋅X₂+X₄^2 {O(EXP)}
    t₅, X₃: 2^(2⋅X₄^2+8⋅X₃^2+4)⋅X₃ {O(EXP)}
    t₅, X₄: X₄ {O(n)}
    t₅₇, X₁: X₁ {O(n)}
    t₅₇, X₂: X₂ {O(n)}
    t₅₇, X₃: X₃ {O(n)}
    t₅₇, X₄: X₄ {O(n)}
    t₅₈, X₀: 4 {O(1)}
    t₅₈, X₁: X₁ {O(n)}
    t₅₈, X₂: X₂ {O(n)}
    t₅₈, X₃: X₃ {O(n)}
    t₅₈, X₄: X₄ {O(n)}
    t₅₉, X₀: 4 {O(1)}
    t₅₉, X₁: X₁ {O(n)}
    t₅₉, X₂: X₂ {O(n)}
    t₅₉, X₃: X₃ {O(n)}
    t₅₉, X₄: X₄ {O(n)}
    t₆₀, X₀: 4 {O(1)}
    t₆₀, X₁: X₁ {O(n)}
    t₆₀, X₂: X₂ {O(n)}
    t₆₀, X₃: X₃ {O(n)}
    t₆₀, X₄: X₄ {O(n)}

