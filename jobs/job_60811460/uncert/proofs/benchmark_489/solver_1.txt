NO

# LoAT Proof:
NO

NO

Initial ITS

Start location: f2

Location map:
LoAT_sink -> 0
f2 -> 1
f300 -> 2
f1 -> 3

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=it8, i5'=it7, i6'=it6, i7'=it5
   1: (-2+i1 == 0 /\ -1-i8+i9 >= 0) /\ i1'=2, i3'=1+i3, i10'=it11, i11'=it10, i12'=it9
   2: (-2+i1 == 0 /\ i8-i9 >= 0) /\ i1'=3, i3'=1+i3, i10'=it14, i11'=it13, i13'=it12

Dependency graph:
0 -> 1, 0 -> 2
1 -> 1, 1 -> 2

Refined Dependency Graph

	Removed the following edges: 1 -> 2

Start location: f2

Location map:
LoAT_sink -> 0
f2 -> 1
f300 -> 2
f1 -> 3

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=it8, i5'=it7, i6'=it6, i7'=it5
   1: (-2+i1 == 0 /\ -1-i8+i9 >= 0) /\ i1'=2, i3'=1+i3, i10'=it11, i11'=it10, i12'=it9
   2: (-2+i1 == 0 /\ i8-i9 >= 0) /\ i1'=3, i3'=1+i3, i10'=it14, i11'=it13, i13'=it12

Dependency graph:
0 -> 1, 0 -> 2
1 -> 1

Step with 0

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 2

	Trace

	0[(-1+i1 == 0)]
	2[(-2+i1 == 0 /\ i8-i9 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{2[T]}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	1[(-2+i1 == 0 /\ -1-i8+i9 >= 0)]
	
	Blocked

	{}
	{2[T]}
	{}
	
Nonterm

	Certificate of Non-Termination

	Original rule:
	(-2+i1 == 0 /\ -1-i8+i9 >= 0) /\ i1'=2, i3'=1+i3, i10'=it11, i11'=it10, i12'=it9
	New rule:
	(-1+it64 >= 0 /\ -2+i1 >= 0 /\ -1-i8+i9 >= 0 /\ 2-i1 >= 0) /\ i1'=0

		-2+i1 >= 0 [0]: unchanged
		
		-1-i8+i9 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, -1-i8+i9 >= 0 -> -1-i8+i9 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Loop Acceleration

	Original rule:
	(-2+i1 == 0 /\ -1-i8+i9 >= 0) /\ i1'=2, i3'=1+i3, i10'=it11, i11'=it10, i12'=it9
	New rule:
	(-1+it64 >= 0 /\ -2+i1 >= 0 /\ -1-i8+i9 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it64, i10'=it11, i11'=it10, i12'=it9

		-2+i1 >= 0 [0]: unchanged
		
		-1-i8+i9 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, -1-i8+i9 >= 0 -> -1-i8+i9 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-1+it64 >= 0 /\ -2+i1 >= 0 /\ -1-i8+i9 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it64, i10'=it11, i11'=it10, i12'=it9
	New rule:
	(-1+it64 >= 0 /\ -2+i1 >= 0 /\ -1-i8+i9 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+it64, i10'=it11, i11'=it10, i12'=it9

Start location: f2

Location map:
LoAT_sink -> 0
f2 -> 1
f300 -> 2
f1 -> 3

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=it8, i5'=it7, i6'=it6, i7'=it5
   1: (-2+i1 == 0 /\ -1-i8+i9 >= 0) /\ i1'=2, i3'=1+i3, i10'=it11, i11'=it10, i12'=it9
   2: (-2+i1 == 0 /\ i8-i9 >= 0) /\ i1'=3, i3'=1+i3, i10'=it14, i11'=it13, i13'=it12
   3: (-1+it64 >= 0 /\ -2+i1 >= 0 /\ -1-i8+i9 >= 0 /\ 2-i1 >= 0) /\ i1'=0
   4: (-1+it64 >= 0 /\ -2+i1 >= 0 /\ -1-i8+i9 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+it64, i10'=it11, i11'=it10, i12'=it9

Dependency graph:
0 -> 1, 0 -> 2, 0 -> 3, 0 -> 4
1 -> 1, 1 -> 3, 1 -> 4
4 -> 1, 4 -> 3

Step with 3

	Trace

	0[(-1+i1 == 0)]
	3[(-1+it64 >= 0 /\ -2+i1 >= 0 /\ -1-i8+i9 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{2[T]}
	{3[T]}
	
Refute

	Counterexample

	(i1=1, i3=0, i8=0, i9=1, i10=0, i11=0, i12=0, i13=0)
	-0-> (i1=2, i3=1, i4=0, i5=0, i6=0, i7=0, i8=0, i9=1, i10=0, i11=0, i12=0, i13=0 )
	-3-> ( )
	
NO

Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
MAYBE


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄, X₅, X₆, X₇, X₈, X₉
  Temp_Vars:  K, L, M, N
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃, X₄, X₅, X₆, X₇, X₈, X₉) → l1(K, L, M, N, X₄, X₅, X₆, X₇, X₈, X₉)
  t₁: l1(X₀, X₁, X₂, X₃, X₄, X₅, X₆, X₇, X₈, X₉) → l1(X₀, X₁, X₂, X₃, X₄, X₅, K, L, M, X₉) :|: 1+X₄ ≤ X₅
  t₂: l1(X₀, X₁, X₂, X₃, X₄, X₅, X₆, X₇, X₈, X₉) → l2(X₀, X₁, X₂, X₃, X₄, X₅, K, L, X₈, M) :|: X₅ ≤ X₄


Preprocessing
  Eliminate variables [K; L; M; N; X₀; X₁; X₂; X₃; X₆; X₇; X₈; X₉] that do not contribute to the problem


  Found invariant X₁ ≤ X₀ for location l2


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁
  Temp_Vars:  
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₃: l0(X₀, X₁) → l1(X₀, X₁)
  t₄: l1(X₀, X₁) → l1(X₀, X₁) :|: 1+X₀ ≤ X₁
  t₅: l1(X₀, X₁) → l2(X₀, X₁) :|: X₁ ≤ X₀


  Found invariant X₁ ≤ X₀ for location l2


  Found invariant 1+X₀ ≤ X₁ for location l1_v1


All Bounds
Timebounds
  Overall timebound:inf {Infinity}
    t₃: 1 {O(1)}
    t₄: inf {Infinity}
    t₅: 1 {O(1)}


Costbounds
  Overall costbound: inf {Infinity}
    t₃: 1 {O(1)}
    t₄: inf {Infinity}
    t₅: 1 {O(1)}


Sizebounds
    t₃, X₀: X₀ {O(n)}
    t₃, X₁: X₁ {O(n)}
    t₄, X₀: X₀ {O(n)}
    t₄, X₁: X₁ {O(n)}
    t₅, X₀: X₀ {O(n)}
    t₅, X₁: X₁ {O(n)}

