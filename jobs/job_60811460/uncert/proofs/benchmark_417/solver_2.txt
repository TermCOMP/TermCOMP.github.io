MAYBE

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [f1/11]
1. non_recursive  : [exit_location/1]
2. non_recursive  : [f2/6]
3. non_recursive  : [f1_loop_cont/7]
4. non_recursive  : [f0/6]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into f1/11
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into f1_loop_cont/7
4. SCC is partially evaluated into f0/6

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations f1/11 
* CE 7 is refined into CE [10] 
* CE 6 is refined into CE [11] 
* CE 2 is refined into CE [12] 
* CE 3 is refined into CE [13] 
* CE 4 is refined into CE [14] 
* CE 5 is refined into CE [15] 


### Cost equations --> "Loop" of f1/11 
* CEs [12] --> Loop 10 
* CEs [13] --> Loop 11 
* CEs [14] --> Loop 12 
* CEs [15] --> Loop 13 
* CEs [10] --> Loop 14 
* CEs [11] --> Loop 15 

### Ranking functions of CR f1(A,B,C,D,E,G,H,I,J,K,L) 

#### Partial ranking functions of CR f1(A,B,C,D,E,G,H,I,J,K,L) 
* Partial RF of phase [10,11,12,13]:
  - RF of loop [10:1,12:1]:
    A/10-10 depends on loops [11:1,13:1] 
    B depends on loops [11:1,13:1] 
  - RF of loop [11:1,13:1]:
    -A/11+101/11 depends on loops [10:1,12:1] 
  - RF of loop [12:1,13:1]:
    -C+1


### Specialization of cost equations f1_loop_cont/7 
* CE 9 is refined into CE [16] 
* CE 8 is refined into CE [17] 


### Cost equations --> "Loop" of f1_loop_cont/7 
* CEs [16] --> Loop 16 
* CEs [17] --> Loop 17 

### Ranking functions of CR f1_loop_cont(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR f1_loop_cont(A,B,C,D,E,F,G) 


### Specialization of cost equations f0/6 
* CE 1 is refined into CE [18,19,20,21] 


### Cost equations --> "Loop" of f0/6 
* CEs [20,21] --> Loop 18 
* CEs [18,19] --> Loop 19 

### Ranking functions of CR f0(A,B,C,D,E,G) 

#### Partial ranking functions of CR f0(A,B,C,D,E,G) 


Computing Bounds
=====================================

#### Cost of chains of f1(A,B,C,D,E,G,H,I,J,K,L):
* Chain [[10,11,12,13]]...: 2*it(10)+2*it(12)+0
  Such that:aux(21) =< -C+1
it(12) =< aux(21)

  with precondition: [B>=1,1>=C,C>=0] 

* Chain [[10,11,12,13],15]: 2*it(10)+2*it(12)+0
  Such that:aux(22) =< -C+1
it(12) =< aux(22)

  with precondition: [C=1,G=2,J=1,D=K,E=L,B>=1,I>=E,D>=H,2*H+21*B>=21*I+2*A+1,H+11*B>=11*I+A,H+10*B>=10*I+A] 

* Chain [[10,11,12,13],14]: 2*it(10)+2*it(12)+0
  Such that:aux(23) =< -C+1
it(12) =< aux(23)

  with precondition: [G=3,1>=C,B>=1,C>=0] 

* Chain [14]: 0
  with precondition: [G=3,1>=C,B>=0,C>=0] 


#### Cost of chains of f1_loop_cont(A,B,C,D,E,F,G):
* Chain [17]: 0
  with precondition: [A=2] 

* Chain [16]: 0
  with precondition: [A=3] 


#### Cost of chains of f0(A,B,C,D,E,G):
* Chain [19]: 1*aux(24)+0
  with precondition: [] 

* Chain [18]...: 1*aux(26)+0
  with precondition: [] 


Closed-form bounds of f0(A,B,C,D,E,G): 
-------------------------------------
* Chain [19] with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [18]... with precondition: [] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of f0(A,B,C,D,E,G): inf 
Asymptotic class: infinity 
* Total analysis performed in 108 ms.

