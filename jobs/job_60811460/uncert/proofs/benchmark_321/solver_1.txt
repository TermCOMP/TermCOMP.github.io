NO

# LoAT Proof:
NO

NO

Initial ITS

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f4 -> 2
f5 -> 3
f12 -> 4

Rules:
   0: (-2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=3, i3'=1+i3
   1: (-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=3, i3'=1+i3
   2: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=it2, i5'=0
   3: (-3+i1 == 0 /\ 3-i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=it3, i5'=1+i5
   4: (-3+i1 == 0 /\ -5+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=it4, i5'=1+i5
   5: (-3+i1 == 0 /\ -4+i5 == 0) /\ i1'=2, i3'=1+i3, i4'=it5, i5'=1
   6: (-2+i1 == 0 /\ i4 == 0) /\ i1'=4, i3'=1+i3, i4'=0

Dependency graph:
0 -> 3, 0 -> 4, 0 -> 5
1 -> 3, 1 -> 4, 1 -> 5
2 -> 0, 2 -> 1, 2 -> 6
3 -> 0, 3 -> 1, 3 -> 6
4 -> 0, 4 -> 1, 4 -> 6
5 -> 0, 5 -> 1, 5 -> 6

Step with 2

	Trace

	2[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 6

	Trace

	2[(-1+i1 == 0)]
	6[(-2+i1 == 0 /\ i4 == 0)]
	
	Blocked

	{}
	{}
	{}
	
Backtrack

	Trace

	2[(-1+i1 == 0)]
	
	Blocked

	{}
	{6[T]}
	
Step with 0

	Trace

	2[(-1+i1 == 0)]
	0[(-2+i1 == 0 /\ -1-i4 >= 0)]
	
	Blocked

	{}
	{6[T]}
	{}
	
Step with 3

	Trace

	2[(-1+i1 == 0)]
	0[(-2+i1 == 0 /\ -1-i4 >= 0)]
	3[(-3+i1 == 0 /\ 3-i5 >= 0)]
	
	Blocked

	{}
	{6[T]}
	{}
	{}
	
Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -2+i1 == 0 /\ 3-i5 >= 0 /\ -1-i4 >= 0) /\ i1'=2, i3'=2+i3, i4'=it3, i5'=1+i5
		New rule:
		(-2+i1 == 0 /\ 3-i5 >= 0 /\ -1-i4 >= 0) /\ i1'=2, i3'=2+i3, i4'=it3, i5'=1+i5

	Loop Acceleration

	Original rule:
	(-2+i1 == 0 /\ 3-i5 >= 0 /\ -1-i4 >= 0) /\ i1'=2, i3'=2+i3, i4'=it3, i5'=1+i5
	New rule:
	(-2+i1 >= 0 /\ -1+it24 >= 0 /\ -1-it3 >= 0 /\ 2-i1 >= 0 /\ 3-i5 >= 0 /\ 4-it24-i5 >= 0 /\ -1-i4 >= 0) /\ i1'=i1, i3'=i3+2*it24, i4'=it3, i5'=it24+i5

		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		3-i5 >= 0 [0]: montonic decrease yields (3-i5 >= 0 /\ 4-it24-i5 >= 0)
		
		-1-i4 >= 0 [0]: eventual decrease yields (-1-it3 >= 0 /\ -1-i4 >= 0)
		
		-1-i4 >= 0 [1]: eventual increase yields (-i4+it3 <= 0 /\ -1-i4 >= 0)
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0, 3-i5 >= 0 -> (3-i5 >= 0 /\ 4-it24-i5 >= 0), -1-i4 >= 0 -> (-1-it3 >= 0 /\ -1-i4 >= 0)}

	Removed Trivial Updates

	Original rule:
	(-2+i1 >= 0 /\ -1+it24 >= 0 /\ -1-it3 >= 0 /\ 2-i1 >= 0 /\ 3-i5 >= 0 /\ 4-it24-i5 >= 0 /\ -1-i4 >= 0) /\ i1'=i1, i3'=i3+2*it24, i4'=it3, i5'=it24+i5
	New rule:
	(-2+i1 >= 0 /\ -1+it24 >= 0 /\ -1-it3 >= 0 /\ 2-i1 >= 0 /\ 3-i5 >= 0 /\ 4-it24-i5 >= 0 /\ -1-i4 >= 0) /\ i3'=i3+2*it24, i4'=it3, i5'=it24+i5
	
	Instantiation

	Original rule:
	(-2+i1 >= 0 /\ -1+it24 >= 0 /\ -1-it3 >= 0 /\ 2-i1 >= 0 /\ 3-i5 >= 0 /\ 4-it24-i5 >= 0 /\ -1-i4 >= 0) /\ i3'=i3+2*it24, i4'=it3, i5'=it24+i5
	New rule:
	(0 >= 0 /\ -2+i1 >= 0 /\ -1-it3 >= 0 /\ 2-i1 >= 0 /\ 3-i5 >= 0 /\ -1-i4 >= 0) /\ i3'=8+i3-2*i5, i4'=it3, i5'=4

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f4 -> 2
f5 -> 3
f12 -> 4

Rules:
   0: (-2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=3, i3'=1+i3
   1: (-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=3, i3'=1+i3
   2: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=it2, i5'=0
   3: (-3+i1 == 0 /\ 3-i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=it3, i5'=1+i5
   4: (-3+i1 == 0 /\ -5+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=it4, i5'=1+i5
   5: (-3+i1 == 0 /\ -4+i5 == 0) /\ i1'=2, i3'=1+i3, i4'=it5, i5'=1
   6: (-2+i1 == 0 /\ i4 == 0) /\ i1'=4, i3'=1+i3, i4'=0
   7: (0 >= 0 /\ -2+i1 >= 0 /\ -1-it3 >= 0 /\ 2-i1 >= 0 /\ 3-i5 >= 0 /\ -1-i4 >= 0) /\ i3'=8+i3-2*i5, i4'=it3, i5'=4

Dependency graph:
0 -> 3, 0 -> 4, 0 -> 5
1 -> 3, 1 -> 4, 1 -> 5
2 -> 0, 2 -> 1, 2 -> 6, 2 -> 7
3 -> 0, 3 -> 1, 3 -> 6, 3 -> 7
4 -> 0, 4 -> 1, 4 -> 6, 4 -> 7
5 -> 0, 5 -> 1, 5 -> 6, 5 -> 7
7 -> 0, 7 -> 1, 7 -> 6

	Trace

	2[(-1+i1 == 0)]
	7[(0 >= 0 /\ -2+i1 >= 0 /\ -1-it3 >= 0 /\ 2-i1 >= 0 /\ 3-i5 >= 0 /\ -1-i4 >= 0)]
	
	Blocked

	{}
	{6[T]}
	{7[T]}
	
Step with 0

	Trace

	2[(-1+i1 == 0)]
	7[(0 >= 0 /\ -2+i1 >= 0 /\ -1-it3 >= 0 /\ 2-i1 >= 0 /\ 3-i5 >= 0 /\ -1-i4 >= 0)]
	0[(-2+i1 == 0 /\ -1-i4 >= 0)]
	
	Blocked

	{}
	{6[T]}
	{1[T], 7[T]}
	{}
	
Step with 5

	Trace

	2[(-1+i1 == 0)]
	7[(0 >= 0 /\ -2+i1 >= 0 /\ -1-it3 >= 0 /\ 2-i1 >= 0 /\ 3-i5 >= 0 /\ -1-i4 >= 0)]
	0[(-2+i1 == 0 /\ -1-i4 >= 0)]
	5[(-3+i1 == 0 /\ -4+i5 == 0)]
	
	Blocked

	{}
	{6[T]}
	{1[T], 7[T]}
	{}
	{}
	
Nonterm

	Certificate of Non-Termination

	Original rule:
	(-2+i1 >= 0 /\ -2+i1 == 0 /\ 2-i1 >= 0 /\ 2-i1 == 0 /\ 3-i5 >= 0 /\ -1-i4 >= 0) /\ i1'=2, i3'=10+i3-2*i5, i4'=it5, i5'=1
	New rule:
	(-2+i1 >= 0 /\ it5-i4 <= 0 /\ 2-i1 >= 0 /\ 3-i5 >= 0 /\ -1-i4 >= 0) /\ i1'=0

		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		3-i5 >= 0 [0]: trivial
		
		-1-i4 >= 0 [0]: eventual decrease yields (-1-it5 >= 0 /\ -1-i4 >= 0)
		
		-1-i4 >= 0 [1]: eventual increase yields (it5-i4 <= 0 /\ -1-i4 >= 0)
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0, 3-i5 >= 0 -> 3-i5 >= 0, -1-i4 >= 0 -> (it5-i4 <= 0 /\ -1-i4 >= 0)}

		Extracted Implied Equalities

		Original rule:
		(0 >= 0 /\ 0 == 0 /\ -2+i1 >= 0 /\ -2+i1 == 0 /\ -1-it3 >= 0 /\ 2-i1 >= 0 /\ 3-i5 >= 0 /\ -1-i4 >= 0) /\ i1'=2, i3'=10+i3-2*i5, i4'=it5, i5'=1
		New rule:
		(0 >= 0 /\ 0 == 0 /\ -2+i1 >= 0 /\ -2+i1 == 0 /\ -1-it3 >= 0 /\ 2-i1 >= 0 /\ 2-i1 == 0 /\ 3-i5 >= 0 /\ -1-i4 >= 0) /\ i1'=2, i3'=10+i3-2*i5, i4'=it5, i5'=1
		
		Simplified Guard

		Original rule:
		(0 >= 0 /\ 0 == 0 /\ -2+i1 >= 0 /\ -2+i1 == 0 /\ -1-it3 >= 0 /\ 2-i1 >= 0 /\ 2-i1 == 0 /\ 3-i5 >= 0 /\ -1-i4 >= 0) /\ i1'=2, i3'=10+i3-2*i5, i4'=it5, i5'=1
		New rule:
		(-2+i1 >= 0 /\ -2+i1 == 0 /\ -1-it3 >= 0 /\ 2-i1 >= 0 /\ 2-i1 == 0 /\ 3-i5 >= 0 /\ -1-i4 >= 0) /\ i1'=2, i3'=10+i3-2*i5, i4'=it5, i5'=1
		
		Eliminated Temporary Variables

		Original rule:
		(-2+i1 >= 0 /\ -2+i1 == 0 /\ -1-it3 >= 0 /\ 2-i1 >= 0 /\ 2-i1 == 0 /\ 3-i5 >= 0 /\ -1-i4 >= 0) /\ i1'=2, i3'=10+i3-2*i5, i4'=it5, i5'=1
		New rule:
		(-2+i1 >= 0 /\ -2+i1 == 0 /\ 2-i1 >= 0 /\ 2-i1 == 0 /\ 3-i5 >= 0 /\ -1-i4 >= 0) /\ i1'=2, i3'=10+i3-2*i5, i4'=it5, i5'=1

	Loop Acceleration

	Original rule:
	(-2+i1 >= 0 /\ -2+i1 == 0 /\ 2-i1 >= 0 /\ 2-i1 == 0 /\ 3-i5 >= 0 /\ -1-i4 >= 0) /\ i1'=2, i3'=10+i3-2*i5, i4'=it5, i5'=1
	New rule:
	(-2+i1 >= 0 /\ -2+i1 == 0 /\ 2 >= 0 /\ -1-it5 >= 0 /\ -1+it40 >= 0 /\ 2-i1 >= 0 /\ 2-i1 == 0 /\ 3-i5 >= 0 /\ -1-i4 >= 0) /\ i1'=i1, i3'=10+i3+8*it40-2*i5, i4'=it5, i5'=1

		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		3-i5 >= 0 [0]: trivial
		
		-1-i4 >= 0 [0]: eventual decrease yields (-1-it5 >= 0 /\ -1-i4 >= 0)
		
		-1-i4 >= 0 [1]: eventual increase yields (it5-i4 <= 0 /\ -1-i4 >= 0)
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0, 3-i5 >= 0 -> 3-i5 >= 0, -1-i4 >= 0 -> (-1-it5 >= 0 /\ -1-i4 >= 0)}

	Extracted Implied Equalities

	Original rule:
	(-2+i1 >= 0 /\ -2+i1 == 0 /\ 2 >= 0 /\ -1-it5 >= 0 /\ -1+it40 >= 0 /\ 2-i1 >= 0 /\ 2-i1 == 0 /\ 3-i5 >= 0 /\ -1-i4 >= 0) /\ i1'=i1, i3'=10+i3+8*it40-2*i5, i4'=it5, i5'=1
	New rule:
	(-2+i1 >= 0 /\ -2+i1 == 0 /\ 2 >= 0 /\ -1-it5 >= 0 /\ -1+it40 >= 0 /\ 2-i1 >= 0 /\ 2-i1 == 0 /\ 3-i5 >= 0 /\ -1-i4 >= 0) /\ i1'=i1, i3'=10+i3+8*it40-2*i5, i4'=it5, i5'=1
	
	Simplified Guard

	Original rule:
	(-2+i1 >= 0 /\ -2+i1 == 0 /\ 2 >= 0 /\ -1-it5 >= 0 /\ -1+it40 >= 0 /\ 2-i1 >= 0 /\ 2-i1 == 0 /\ 3-i5 >= 0 /\ -1-i4 >= 0) /\ i1'=i1, i3'=10+i3+8*it40-2*i5, i4'=it5, i5'=1
	New rule:
	(-2+i1 >= 0 /\ -2+i1 == 0 /\ -1-it5 >= 0 /\ -1+it40 >= 0 /\ 2-i1 >= 0 /\ 2-i1 == 0 /\ 3-i5 >= 0 /\ -1-i4 >= 0) /\ i1'=i1, i3'=10+i3+8*it40-2*i5, i4'=it5, i5'=1
	
	Removed Trivial Updates

	Original rule:
	(-2+i1 >= 0 /\ -2+i1 == 0 /\ -1-it5 >= 0 /\ -1+it40 >= 0 /\ 2-i1 >= 0 /\ 2-i1 == 0 /\ 3-i5 >= 0 /\ -1-i4 >= 0) /\ i1'=i1, i3'=10+i3+8*it40-2*i5, i4'=it5, i5'=1
	New rule:
	(-2+i1 >= 0 /\ -2+i1 == 0 /\ -1-it5 >= 0 /\ -1+it40 >= 0 /\ 2-i1 >= 0 /\ 2-i1 == 0 /\ 3-i5 >= 0 /\ -1-i4 >= 0) /\ i3'=10+i3+8*it40-2*i5, i4'=it5, i5'=1

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f4 -> 2
f5 -> 3
f12 -> 4

Rules:
   0: (-2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=3, i3'=1+i3
   1: (-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=3, i3'=1+i3
   2: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=it2, i5'=0
   3: (-3+i1 == 0 /\ 3-i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=it3, i5'=1+i5
   4: (-3+i1 == 0 /\ -5+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=it4, i5'=1+i5
   5: (-3+i1 == 0 /\ -4+i5 == 0) /\ i1'=2, i3'=1+i3, i4'=it5, i5'=1
   6: (-2+i1 == 0 /\ i4 == 0) /\ i1'=4, i3'=1+i3, i4'=0
   7: (0 >= 0 /\ -2+i1 >= 0 /\ -1-it3 >= 0 /\ 2-i1 >= 0 /\ 3-i5 >= 0 /\ -1-i4 >= 0) /\ i3'=8+i3-2*i5, i4'=it3, i5'=4
   8: (-2+i1 >= 0 /\ it5-i4 <= 0 /\ 2-i1 >= 0 /\ 3-i5 >= 0 /\ -1-i4 >= 0) /\ i1'=0
   9: (-2+i1 >= 0 /\ -2+i1 == 0 /\ -1-it5 >= 0 /\ -1+it40 >= 0 /\ 2-i1 >= 0 /\ 2-i1 == 0 /\ 3-i5 >= 0 /\ -1-i4 >= 0) /\ i3'=10+i3+8*it40-2*i5, i4'=it5, i5'=1

Dependency graph:
0 -> 3, 0 -> 4, 0 -> 5
1 -> 3, 1 -> 4, 1 -> 5
2 -> 0, 2 -> 1, 2 -> 6, 2 -> 7, 2 -> 8, 2 -> 9
3 -> 0, 3 -> 1, 3 -> 6, 3 -> 7, 3 -> 8, 3 -> 9
4 -> 0, 4 -> 1, 4 -> 6, 4 -> 7, 4 -> 8, 4 -> 9
5 -> 0, 5 -> 1, 5 -> 6, 5 -> 7, 5 -> 8, 5 -> 9
7 -> 0, 7 -> 1, 7 -> 6
9 -> 0, 9 -> 1, 9 -> 6, 9 -> 7, 9 -> 8

Step with 8

	Trace

	2[(-1+i1 == 0)]
	8[(-2+i1 >= 0 /\ it5-i4 <= 0 /\ 2-i1 >= 0 /\ 3-i5 >= 0 /\ -1-i4 >= 0)]
	
	Blocked

	{}
	{6[T]}
	{8[T]}
	
Refute

	Counterexample

	(i1=1, i3=-1)
	-2-> (i1=2, i3=0, i4=-1, i5=0 )
	-8-> ( )
	
NO

Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
MAYBE


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁
  Temp_Vars:  C
  Locations:  l0, l1, l2, l3
  Return Locations:  
  Transitions:
  t₂: l0(X₀, X₁) → l1(C, 0)
  t₆: l1(X₀, X₁) → l2(0, X₁) :|: 0 ≤ X₀ ∧ X₀ ≤ 0
  t₀: l1(X₀, X₁) → l3(X₀, X₁) :|: 1+X₀ ≤ 0
  t₁: l1(X₀, X₁) → l3(X₀, X₁) :|: 1 ≤ X₀
  t₃: l3(X₀, X₁) → l1(C, 1+X₁) :|: X₁ ≤ 3
  t₄: l3(X₀, X₁) → l1(C, 1+X₁) :|: 5 ≤ X₁
  t₅: l3(X₀, X₁) → l1(C, 1) :|: X₁ ≤ 4 ∧ 4 ≤ X₁


Preprocessing
  Found invariant X₁ ≤ 4 ∧ 0 ≤ X₁ for location l1


  Found invariant X₁ ≤ 4 ∧ X₁ ≤ 4+X₀ ∧ X₀+X₁ ≤ 4 ∧ 0 ≤ X₁ ∧ 0 ≤ X₀+X₁ ∧ X₀ ≤ X₁ ∧ X₀ ≤ 0 ∧ 0 ≤ X₀ for location l2


  Found invariant X₁ ≤ 4 ∧ 0 ≤ X₁ for location l3


  Cut unsatisfiable transition [t₄: l3→l1]


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁
  Temp_Vars:  C
  Locations:  l0, l1, l2, l3
  Return Locations:  
  Transitions:
  t₂: l0(X₀, X₁) → l1(C, 0)
  t₆: l1(X₀, X₁) → l2(0, X₁) :|: 0 ≤ X₀ ∧ X₀ ≤ 0 ∧ X₁ ≤ 4 ∧ 0 ≤ X₁
  t₀: l1(X₀, X₁) → l3(X₀, X₁) :|: 1+X₀ ≤ 0 ∧ X₁ ≤ 4 ∧ 0 ≤ X₁
  t₁: l1(X₀, X₁) → l3(X₀, X₁) :|: 1 ≤ X₀ ∧ X₁ ≤ 4 ∧ 0 ≤ X₁
  t₃: l3(X₀, X₁) → l1(C, 1+X₁) :|: X₁ ≤ 3 ∧ X₁ ≤ 4 ∧ 0 ≤ X₁
  t₅: l3(X₀, X₁) → l1(C, 1) :|: X₁ ≤ 4 ∧ 4 ≤ X₁ ∧ 0 ≤ X₁


  Found invariant X₁ ≤ 4 ∧ 2 ≤ X₁ for location l1_v3


  Found invariant X₁ ≤ 1 ∧ X₁ ≤ X₀ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l3_v7


  Found invariant X₁ ≤ 1 ∧ 1 ≤ X₁ for location l1_v1


  Found invariant X₁ ≤ 4 ∧ X₁ ≤ 3+X₀ ∧ 2 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l3_v5


  Found invariant X₁ ≤ 1 ∧ X₁ ≤ X₀ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l3_v3


  Found invariant X₁ ≤ 1 ∧ X₀+X₁ ≤ 0 ∧ 1 ≤ X₁ ∧ 2+X₀ ≤ X₁ ∧ 1+X₀ ≤ 0 for location l3_v8


  Found invariant X₁ ≤ 2 ∧ X₁ ≤ 1+X₀ ∧ 2 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l3_v9


  Found invariant X₁ ≤ 0 ∧ 0 ≤ X₁ for location l1


  Found invariant X₁ ≤ 2 ∧ 2 ≤ X₁ for location l1_v4


  Found invariant X₁ ≤ 0 ∧ 1+X₁ ≤ X₀ ∧ 0 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l3_v1


  Found invariant X₁ ≤ 1 ∧ 1 ≤ X₁ for location l1_v2


  Found invariant X₁ ≤ 4 ∧ X₀+X₁ ≤ 3 ∧ 2 ≤ X₁ ∧ 3+X₀ ≤ X₁ ∧ 1+X₀ ≤ 0 for location l3_v6


  Found invariant X₁ ≤ 4 ∧ X₁ ≤ 4+X₀ ∧ X₀+X₁ ≤ 4 ∧ 0 ≤ X₁ ∧ 0 ≤ X₀+X₁ ∧ X₀ ≤ X₁ ∧ X₀ ≤ 0 ∧ 0 ≤ X₀ for location l2


  Found invariant X₁ ≤ 0 ∧ 1+X₀+X₁ ≤ 0 ∧ 0 ≤ X₁ ∧ 1+X₀ ≤ X₁ ∧ 1+X₀ ≤ 0 for location l3_v2


  Found invariant X₁ ≤ 2 ∧ X₀+X₁ ≤ 1 ∧ 2 ≤ X₁ ∧ 3+X₀ ≤ X₁ ∧ 1+X₀ ≤ 0 for location l3_v10


  Found invariant X₁ ≤ 1 ∧ X₀+X₁ ≤ 0 ∧ 1 ≤ X₁ ∧ 2+X₀ ≤ X₁ ∧ 1+X₀ ≤ 0 for location l3_v4


  Cut unsatisfiable transition [t₁₆₇: l3_v2→l1_v1; t₁₇₂: l3_v4→l1_v1; t₁₈₁: l3_v3→l1_v1; t₁₉₃: l3_v1→l1_v1]


All Bounds
Timebounds
  Overall timebound:inf {Infinity}
    t₀: inf {Infinity}
    t₁: inf {Infinity}
    t₂: 1 {O(1)}
    t₃: inf {Infinity}
    t₅: inf {Infinity}
    t₆: 1 {O(1)}


Costbounds
  Overall costbound: inf {Infinity}
    t₀: inf {Infinity}
    t₁: inf {Infinity}
    t₂: 1 {O(1)}
    t₃: inf {Infinity}
    t₅: inf {Infinity}
    t₆: 1 {O(1)}


Sizebounds
    t₀, X₁: 4 {O(1)}
    t₁, X₁: 4 {O(1)}
    t₂, X₁: 0 {O(1)}
    t₃, X₁: 4 {O(1)}
    t₅, X₁: 1 {O(1)}
    t₆, X₀: 0 {O(1)}
    t₆, X₁: 4 {O(1)}

