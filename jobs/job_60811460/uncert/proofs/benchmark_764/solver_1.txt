NO

# LoAT Proof:
NO

NO

Initial ITS

Start location: l0

Location map:
LoAT_sink -> 0
l0 -> 1
l1 -> 2

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=i4+i5, i5'=i6+i5

Dependency graph:
0 -> 1
1 -> 1

Step with 0

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	1[(-1+i4 >= 0 /\ -2+i1 == 0)]
	
	Blocked

	{}
	{}
	{}
	
Nonterm

	Certificate of Non-Termination

	Original rule:
	(-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=i4+i5, i5'=i6+i5
	New rule:
	(0 == 0 /\ -i6 == 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ -i5 == 0 /\ 2-i1 >= 0 /\ -1+it11 >= 0) /\ i1'=0

		-1+i4 >= 0 [0]: fixpoint yields (0 == 0 /\ -i6 == 0 /\ -1+i4 >= 0 /\ -i5 == 0)
		
		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-1+i4 >= 0 -> (0 == 0 /\ -i6 == 0 /\ -1+i4 >= 0 /\ -i5 == 0), -2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Loop Acceleration

	Original rule:
	(-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=i4+i5, i5'=i6+i5
	New rule:
	(0 == 0 /\ -i6 == 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ -i5 == 0 /\ 2-i1 >= 0 /\ -1+it11 >= 0) /\ i1'=i1, i3'=i3+it11, i4'=i4+it11*i5-1/2*i6*it11+1/2*i6*it11^2, i5'=i6*it11+i5

		-1+i4 >= 0 [0]: fixpoint yields (0 == 0 /\ -i6 == 0 /\ -1+i4 >= 0 /\ -i5 == 0)
		
		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-1+i4 >= 0 -> (0 == 0 /\ -i6 == 0 /\ -1+i4 >= 0 /\ -i5 == 0), -2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Extracted Implied Equalities

	Original rule:
	(0 == 0 /\ -i6 == 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ -i5 == 0 /\ 2-i1 >= 0 /\ -1+it11 >= 0) /\ i1'=i1, i3'=i3+it11, i4'=i4+it11*i5-1/2*i6*it11+1/2*i6*it11^2, i5'=i6*it11+i5
	New rule:
	(0 == 0 /\ -i6 == 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ -i5 == 0 /\ 2-i1 >= 0 /\ 2-i1 == 0 /\ -1+it11 >= 0) /\ i1'=i1, i3'=i3+it11, i4'=i4+it11*i5-1/2*i6*it11+1/2*i6*it11^2, i5'=i6*it11+i5
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -i6 == 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ -i5 == 0 /\ 2-i1 >= 0 /\ 2-i1 == 0 /\ -1+it11 >= 0) /\ i1'=i1, i3'=i3+it11, i4'=i4+it11*i5-1/2*i6*it11+1/2*i6*it11^2, i5'=i6*it11+i5
	New rule:
	(-i6 == 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ -i5 == 0 /\ 2-i1 >= 0 /\ 2-i1 == 0 /\ -1+it11 >= 0) /\ i1'=i1, i3'=i3+it11, i4'=i4+it11*i5-1/2*i6*it11+1/2*i6*it11^2, i5'=i6*it11+i5
	
	Removed Trivial Updates

	Original rule:
	(-i6 == 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ -i5 == 0 /\ 2-i1 >= 0 /\ 2-i1 == 0 /\ -1+it11 >= 0) /\ i1'=i1, i3'=i3+it11, i4'=i4+it11*i5-1/2*i6*it11+1/2*i6*it11^2, i5'=i6*it11+i5
	New rule:
	(-i6 == 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ -i5 == 0 /\ 2-i1 >= 0 /\ 2-i1 == 0 /\ -1+it11 >= 0) /\ i3'=i3+it11, i4'=i4+it11*i5-1/2*i6*it11+1/2*i6*it11^2, i5'=i6*it11+i5

Start location: l0

Location map:
LoAT_sink -> 0
l0 -> 1
l1 -> 2

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=i4+i5, i5'=i6+i5
   2: (0 == 0 /\ -i6 == 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ -i5 == 0 /\ 2-i1 >= 0 /\ -1+it11 >= 0) /\ i1'=0
   3: (-i6 == 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ -i5 == 0 /\ 2-i1 >= 0 /\ 2-i1 == 0 /\ -1+it11 >= 0) /\ i3'=i3+it11, i4'=i4+it11*i5-1/2*i6*it11+1/2*i6*it11^2, i5'=i6*it11+i5

Dependency graph:
0 -> 1, 0 -> 2, 0 -> 3
1 -> 1, 1 -> 2, 1 -> 3
3 -> 1, 3 -> 2

Step with 2

	Trace

	0[(-1+i1 == 0)]
	2[(0 == 0 /\ -i6 == 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ -i5 == 0 /\ 2-i1 >= 0 /\ -1+it11 >= 0)]
	
	Blocked

	{}
	{}
	{2[T]}
	
Refute

	Counterexample

	(i1=1, i3=-1, i4=1, i5=0, i6=0)
	-0-> (i1=2, i3=0, i4=1, i5=0, i6=0 )
	-2-> ( )
	
NO

Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
MAYBE


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  
  Locations:  l0, l1
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂) → l1(X₀, X₁, X₂)
  t₁: l1(X₀, X₁, X₂) → l1(X₀+X₁, X₁+X₂, X₂) :|: 1 ≤ X₀


Preprocessing
Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  
  Locations:  l0, l1
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂) → l1(X₀, X₁, X₂)
  t₁: l1(X₀, X₁, X₂) → l1(X₀+X₁, X₁+X₂, X₂) :|: 1 ≤ X₀


All Bounds
Timebounds
  Overall timebound:inf {Infinity}
    t₀: 1 {O(1)}
    t₁: inf {Infinity}


Costbounds
  Overall costbound: inf {Infinity}
    t₀: 1 {O(1)}
    t₁: inf {Infinity}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₀, X₂: X₂ {O(n)}
    t₁, X₂: X₂ {O(n)}

