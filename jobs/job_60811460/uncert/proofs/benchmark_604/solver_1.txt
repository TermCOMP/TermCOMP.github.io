NO

# LoAT Proof:
NO

NO

Initial ITS

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f26 -> 2
f2 -> 3
f9 -> 4
f12 -> 5
f28 -> 6
f30 -> 7
f20 -> 8

Rules:
   0: -2+i1 == 0 /\ i1'=3, i3'=1+i3
   1: -3+i1 == 0 /\ i1'=3, i3'=1+i3
   2: (-4+i1 == 0 /\ 5-i4 >= 0 /\ -1-it2 >= 0) /\ i1'=5, i3'=1+i3, i5'=it2
   3: (-4+i1 == 0 /\ 5-i4 >= 0 /\ -1+it3 >= 0) /\ i1'=5, i3'=1+i3, i5'=it3
   4: (-5+i1 == 0 /\ -6+i4 >= 0) /\ i1'=4, i3'=1+i3, i4'=1+i4
   5: -6+i1 == 0 /\ i1'=7, i3'=1+i3
   6: (-8+i1 == 0 /\ -3+i4 >= 0) /\ i1'=8, i3'=1+i3, i4'=-1+i4
   7: (2-i4 >= 0 /\ -8+i1 == 0) /\ i1'=4, i3'=1+i3
   8: (-5+i1 == 0 /\ 5-i4 >= 0) /\ i1'=4, i3'=1+i3, i4'=1+i4
   9: (-4+i1 == 0 /\ 5-i4 >= 0) /\ i1'=8, i3'=1+i3, i5'=0
  10: (-4+i1 == 0 /\ -6+i4 >= 0) /\ i1'=8, i3'=1+i3
  11: -1+i1 == 0 /\ i1'=4, i3'=1+i3, i4'=it4

Dependency graph:
0 -> 1
1 -> 1
2 -> 4, 2 -> 8
3 -> 4, 3 -> 8
4 -> 2, 4 -> 3, 4 -> 9, 4 -> 10
6 -> 6, 6 -> 7
7 -> 2, 7 -> 3, 7 -> 9, 7 -> 10
8 -> 2, 8 -> 3, 8 -> 9, 8 -> 10
9 -> 6, 9 -> 7
10 -> 6, 10 -> 7
11 -> 2, 11 -> 3, 11 -> 9, 11 -> 10

Refined Dependency Graph

	Removed the following edges: 2 -> 4, 3 -> 4, 4 -> 2, 4 -> 3, 4 -> 9, 7 -> 10, 10 -> 7

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f26 -> 2
f2 -> 3
f9 -> 4
f12 -> 5
f28 -> 6
f30 -> 7
f20 -> 8

Rules:
   0: -2+i1 == 0 /\ i1'=3, i3'=1+i3
   1: -3+i1 == 0 /\ i1'=3, i3'=1+i3
   2: (-4+i1 == 0 /\ 5-i4 >= 0 /\ -1-it2 >= 0) /\ i1'=5, i3'=1+i3, i5'=it2
   3: (-4+i1 == 0 /\ 5-i4 >= 0 /\ -1+it3 >= 0) /\ i1'=5, i3'=1+i3, i5'=it3
   4: (-5+i1 == 0 /\ -6+i4 >= 0) /\ i1'=4, i3'=1+i3, i4'=1+i4
   5: -6+i1 == 0 /\ i1'=7, i3'=1+i3
   6: (-8+i1 == 0 /\ -3+i4 >= 0) /\ i1'=8, i3'=1+i3, i4'=-1+i4
   7: (2-i4 >= 0 /\ -8+i1 == 0) /\ i1'=4, i3'=1+i3
   8: (-5+i1 == 0 /\ 5-i4 >= 0) /\ i1'=4, i3'=1+i3, i4'=1+i4
   9: (-4+i1 == 0 /\ 5-i4 >= 0) /\ i1'=8, i3'=1+i3, i5'=0
  10: (-4+i1 == 0 /\ -6+i4 >= 0) /\ i1'=8, i3'=1+i3
  11: -1+i1 == 0 /\ i1'=4, i3'=1+i3, i4'=it4

Dependency graph:
0 -> 1
1 -> 1
2 -> 8
3 -> 8
4 -> 10
6 -> 6, 6 -> 7
7 -> 2, 7 -> 3, 7 -> 9
8 -> 2, 8 -> 3, 8 -> 9, 8 -> 10
9 -> 6, 9 -> 7
10 -> 6
11 -> 2, 11 -> 3, 11 -> 9, 11 -> 10

Step with 11

	Trace

	11[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 9

	Trace

	11[(-1+i1 == 0)]
	9[(-4+i1 == 0 /\ 5-i4 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Step with 6

	Trace

	11[(-1+i1 == 0)]
	9[(-4+i1 == 0 /\ 5-i4 >= 0)]
	6[(-8+i1 == 0 /\ -3+i4 >= 0)]
	
	Blocked

	{}
	{}
	{}
	{}
	
Accelerate

	Loop Acceleration

	Original rule:
	(-8+i1 == 0 /\ -3+i4 >= 0) /\ i1'=8, i3'=1+i3, i4'=-1+i4
	New rule:
	(-1+it18 >= 0 /\ -2-it18+i4 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0) /\ i1'=i1, i3'=i3+it18, i4'=-it18+i4

		8-i1 >= 0 [0]: unchanged
		
		-8+i1 >= 0 [0]: unchanged
		
		-3+i4 >= 0 [0]: montonic decrease yields -2-it18+i4 >= 0
		
		Replacement map: {8-i1 >= 0 -> 8-i1 >= 0, -8+i1 >= 0 -> -8+i1 >= 0, -3+i4 >= 0 -> -2-it18+i4 >= 0}

	Removed Trivial Updates

	Original rule:
	(-1+it18 >= 0 /\ -2-it18+i4 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0) /\ i1'=i1, i3'=i3+it18, i4'=-it18+i4
	New rule:
	(-1+it18 >= 0 /\ -2-it18+i4 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0) /\ i3'=i3+it18, i4'=-it18+i4
	
	Instantiation

	Original rule:
	(-1+it18 >= 0 /\ -2-it18+i4 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0) /\ i3'=i3+it18, i4'=-it18+i4
	New rule:
	(0 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -3+i4 >= 0) /\ i3'=-2+i3+i4, i4'=2

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f26 -> 2
f2 -> 3
f9 -> 4
f12 -> 5
f28 -> 6
f30 -> 7
f20 -> 8

Rules:
   0: -2+i1 == 0 /\ i1'=3, i3'=1+i3
   1: -3+i1 == 0 /\ i1'=3, i3'=1+i3
   2: (-4+i1 == 0 /\ 5-i4 >= 0 /\ -1-it2 >= 0) /\ i1'=5, i3'=1+i3, i5'=it2
   3: (-4+i1 == 0 /\ 5-i4 >= 0 /\ -1+it3 >= 0) /\ i1'=5, i3'=1+i3, i5'=it3
   4: (-5+i1 == 0 /\ -6+i4 >= 0) /\ i1'=4, i3'=1+i3, i4'=1+i4
   5: -6+i1 == 0 /\ i1'=7, i3'=1+i3
   6: (-8+i1 == 0 /\ -3+i4 >= 0) /\ i1'=8, i3'=1+i3, i4'=-1+i4
   7: (2-i4 >= 0 /\ -8+i1 == 0) /\ i1'=4, i3'=1+i3
   8: (-5+i1 == 0 /\ 5-i4 >= 0) /\ i1'=4, i3'=1+i3, i4'=1+i4
   9: (-4+i1 == 0 /\ 5-i4 >= 0) /\ i1'=8, i3'=1+i3, i5'=0
  10: (-4+i1 == 0 /\ -6+i4 >= 0) /\ i1'=8, i3'=1+i3
  11: -1+i1 == 0 /\ i1'=4, i3'=1+i3, i4'=it4
  12: (0 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -3+i4 >= 0) /\ i3'=-2+i3+i4, i4'=2

Dependency graph:
0 -> 1
1 -> 1
2 -> 8
3 -> 8
4 -> 10
6 -> 6, 6 -> 7, 6 -> 12
7 -> 2, 7 -> 3, 7 -> 9
8 -> 2, 8 -> 3, 8 -> 9, 8 -> 10
9 -> 6, 9 -> 7, 9 -> 12
10 -> 6, 10 -> 12
11 -> 2, 11 -> 3, 11 -> 9, 11 -> 10
12 -> 6, 12 -> 7

	Trace

	11[(-1+i1 == 0)]
	9[(-4+i1 == 0 /\ 5-i4 >= 0)]
	12[(0 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -3+i4 >= 0)]
	
	Blocked

	{}
	{}
	{}
	{6[T], 12[T]}
	
Step with 7

	Trace

	11[(-1+i1 == 0)]
	9[(-4+i1 == 0 /\ 5-i4 >= 0)]
	12[(0 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -3+i4 >= 0)]
	7[(2-i4 >= 0 /\ -8+i1 == 0)]
	
	Blocked

	{}
	{}
	{}
	{6[T], 12[T]}
	{}
	
Step with 9

	Trace

	11[(-1+i1 == 0)]
	9[(-4+i1 == 0 /\ 5-i4 >= 0)]
	12[(0 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -3+i4 >= 0)]
	7[(2-i4 >= 0 /\ -8+i1 == 0)]
	9[(-4+i1 == 0 /\ 5-i4 >= 0)]
	
	Blocked

	{}
	{}
	{}
	{6[T], 12[T]}
	{}
	{}
	
Nonterm

	Certificate of Non-Termination

	Original rule:
	(2-i4 >= 0 /\ 5-i4 >= 0 /\ -8+i1 == 0) /\ i1'=8, i3'=2+i3, i5'=0
	New rule:
	(2-i4 >= 0 /\ 5-i4 >= 0 /\ -1+it71 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0) /\ i1'=0

		2-i4 >= 0 [0]: unchanged
		
		5-i4 >= 0 [0]: unchanged
		
		8-i1 >= 0 [0]: unchanged
		
		-8+i1 >= 0 [0]: unchanged
		
		Replacement map: {2-i4 >= 0 -> 2-i4 >= 0, 5-i4 >= 0 -> 5-i4 >= 0, 8-i1 >= 0 -> 8-i1 >= 0, -8+i1 >= 0 -> -8+i1 >= 0}

		Simplified Guard

		Original rule:
		(0 == 0 /\ 2-i4 >= 0 /\ 5-i4 >= 0 /\ -8+i1 == 0) /\ i1'=8, i3'=2+i3, i5'=0
		New rule:
		(2-i4 >= 0 /\ 5-i4 >= 0 /\ -8+i1 == 0) /\ i1'=8, i3'=2+i3, i5'=0

	Loop Acceleration

	Original rule:
	(2-i4 >= 0 /\ 5-i4 >= 0 /\ -8+i1 == 0) /\ i1'=8, i3'=2+i3, i5'=0
	New rule:
	(2-i4 >= 0 /\ 5-i4 >= 0 /\ -1+it71 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0) /\ i1'=i1, i3'=i3+2*it71, i5'=0

		2-i4 >= 0 [0]: unchanged
		
		5-i4 >= 0 [0]: unchanged
		
		8-i1 >= 0 [0]: unchanged
		
		-8+i1 >= 0 [0]: unchanged
		
		Replacement map: {2-i4 >= 0 -> 2-i4 >= 0, 5-i4 >= 0 -> 5-i4 >= 0, 8-i1 >= 0 -> 8-i1 >= 0, -8+i1 >= 0 -> -8+i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(2-i4 >= 0 /\ 5-i4 >= 0 /\ -1+it71 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0) /\ i1'=i1, i3'=i3+2*it71, i5'=0
	New rule:
	(2-i4 >= 0 /\ 5-i4 >= 0 /\ -1+it71 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0) /\ i3'=i3+2*it71, i5'=0

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f26 -> 2
f2 -> 3
f9 -> 4
f12 -> 5
f28 -> 6
f30 -> 7
f20 -> 8

Rules:
   0: -2+i1 == 0 /\ i1'=3, i3'=1+i3
   1: -3+i1 == 0 /\ i1'=3, i3'=1+i3
   2: (-4+i1 == 0 /\ 5-i4 >= 0 /\ -1-it2 >= 0) /\ i1'=5, i3'=1+i3, i5'=it2
   3: (-4+i1 == 0 /\ 5-i4 >= 0 /\ -1+it3 >= 0) /\ i1'=5, i3'=1+i3, i5'=it3
   4: (-5+i1 == 0 /\ -6+i4 >= 0) /\ i1'=4, i3'=1+i3, i4'=1+i4
   5: -6+i1 == 0 /\ i1'=7, i3'=1+i3
   6: (-8+i1 == 0 /\ -3+i4 >= 0) /\ i1'=8, i3'=1+i3, i4'=-1+i4
   7: (2-i4 >= 0 /\ -8+i1 == 0) /\ i1'=4, i3'=1+i3
   8: (-5+i1 == 0 /\ 5-i4 >= 0) /\ i1'=4, i3'=1+i3, i4'=1+i4
   9: (-4+i1 == 0 /\ 5-i4 >= 0) /\ i1'=8, i3'=1+i3, i5'=0
  10: (-4+i1 == 0 /\ -6+i4 >= 0) /\ i1'=8, i3'=1+i3
  11: -1+i1 == 0 /\ i1'=4, i3'=1+i3, i4'=it4
  12: (0 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -3+i4 >= 0) /\ i3'=-2+i3+i4, i4'=2
  13: (2-i4 >= 0 /\ 5-i4 >= 0 /\ -1+it71 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0) /\ i1'=0
  14: (2-i4 >= 0 /\ 5-i4 >= 0 /\ -1+it71 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0) /\ i3'=i3+2*it71, i5'=0

Dependency graph:
0 -> 1
1 -> 1
2 -> 8
3 -> 8
4 -> 10
6 -> 6, 6 -> 7, 6 -> 12, 6 -> 13, 6 -> 14
7 -> 2, 7 -> 3, 7 -> 9
8 -> 2, 8 -> 3, 8 -> 9, 8 -> 10
9 -> 6, 9 -> 7, 9 -> 12, 9 -> 13, 9 -> 14
10 -> 6, 10 -> 12
11 -> 2, 11 -> 3, 11 -> 9, 11 -> 10
12 -> 6, 12 -> 7, 12 -> 13, 12 -> 14
14 -> 6, 14 -> 7, 14 -> 12, 14 -> 13

Step with 13

	Trace

	11[(-1+i1 == 0)]
	9[(-4+i1 == 0 /\ 5-i4 >= 0)]
	12[(0 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0 /\ -3+i4 >= 0)]
	13[(2-i4 >= 0 /\ 5-i4 >= 0 /\ -1+it71 >= 0 /\ 8-i1 >= 0 /\ -8+i1 >= 0)]
	
	Blocked

	{}
	{}
	{}
	{6[T], 12[T]}
	{13[T]}
	
Refute

	Counterexample

	(i1=1, i3=-1, i5=0)
	-11-> (i1=4, i3=0, i4=3, i5=0 )
	-9-> (i1=8, i3=1, i4=3, i5=0 )
	-12-> (i1=8, i3=2, i4=2, i5=0 )
	-13-> ( )
	
NO

Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
MAYBE


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁
  Temp_Vars:  C
  Locations:  l0, l1, l2, l3, l4, l5, l6, l7
  Return Locations:  
  Transitions:
  t₁₁: l0(X₀, X₁) → l1(C, X₁)
  t₂: l1(X₀, X₁) → l2(X₀, C) :|: X₀ ≤ 5 ∧ 1+C ≤ 0
  t₃: l1(X₀, X₁) → l2(X₀, C) :|: X₀ ≤ 5 ∧ 1 ≤ C
  t₉: l1(X₀, X₁) → l5(X₀, 0) :|: X₀ ≤ 5
  t₁₀: l1(X₀, X₁) → l5(X₀, X₁) :|: 6 ≤ X₀
  t₄: l2(X₀, X₁) → l1(1+X₀, X₁) :|: 6 ≤ X₀
  t₈: l2(X₀, X₁) → l1(1+X₀, X₁) :|: X₀ ≤ 5
  t₁: l3(X₀, X₁) → l3(X₀, X₁)
  t₀: l4(X₀, X₁) → l3(X₀, X₁)
  t₇: l5(X₀, X₁) → l1(X₀, X₁) :|: X₀ ≤ 2
  t₆: l5(X₀, X₁) → l5(X₀-1, X₁) :|: 3 ≤ X₀
  t₅: l7(X₀, X₁) → l6(X₀, X₁)


Preprocessing
  Cut unreachable locations [l3; l4; l6; l7] from the program graph


  Cut unsatisfiable transition [t₄: l2→l1]


  Eliminate variables [X₁] that do not contribute to the problem


  Found invariant X₀ ≤ 5 for location l2


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀
  Temp_Vars:  C
  Locations:  l0, l1, l2, l5
  Return Locations:  
  Transitions:
  t₁₂: l0(X₀) → l1(C)
  t₁₃: l1(X₀) → l2(X₀) :|: X₀ ≤ 5 ∧ 1+C ≤ 0
  t₁₄: l1(X₀) → l2(X₀) :|: X₀ ≤ 5 ∧ 1 ≤ C
  t₁₅: l1(X₀) → l5(X₀) :|: X₀ ≤ 5
  t₁₆: l1(X₀) → l5(X₀) :|: 6 ≤ X₀
  t₁₇: l2(X₀) → l1(1+X₀) :|: X₀ ≤ 5
  t₁₈: l5(X₀) → l1(X₀) :|: X₀ ≤ 2
  t₁₉: l5(X₀) → l5(X₀-1) :|: 3 ≤ X₀


  Found invariant X₀ ≤ 2 for location l1_v2


  Found invariant X₀ ≤ 4 ∧ 2 ≤ X₀ for location l5_v3


  Found invariant 5 ≤ X₀ for location l5_v5


  Found invariant X₀ ≤ 3 for location l1_v3


  Found invariant X₀ ≤ 6 for location l1_v1


  Found invariant X₀ ≤ 5 for location l2_v1


  Found invariant 6 ≤ X₀ for location l5_v1


  Found invariant X₀ ≤ 2 for location l2_v2


  Found invariant 2 ≤ X₀ for location l5_v6


  Found invariant X₀ ≤ 5 for location l5_v2


  Found invariant X₀ ≤ 2 for location l5_v4


All Bounds
Timebounds
  Overall timebound:inf {Infinity}
    t₁₂: 1 {O(1)}
    t₁₃: inf {Infinity}
    t₁₄: inf {Infinity}
    t₁₅: inf {Infinity}
    t₁₆: inf {Infinity}
    t₁₇: inf {Infinity}
    t₁₈: inf {Infinity}
    t₁₉: inf {Infinity}


Costbounds
  Overall costbound: inf {Infinity}
    t₁₂: 1 {O(1)}
    t₁₃: inf {Infinity}
    t₁₄: inf {Infinity}
    t₁₅: inf {Infinity}
    t₁₆: inf {Infinity}
    t₁₇: inf {Infinity}
    t₁₈: inf {Infinity}
    t₁₉: inf {Infinity}


Sizebounds

