WORST_CASE(Omega(n^2),?)

# LoAT Proof:
WORST_CASE(Omega(n^2),?)

WORST_CASE(Omega(n^1),?)
WORST_CASE(Omega(n^2),?)
Initial ITS

Start location: f999

Location map:
LoAT_sink -> 0
f999 -> 1
f1 -> 2
f2 -> 3

Rules:
   0: (-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=-1+i4
   1: (-3+i1 == 0 /\ -1+i4 >= 0) /\ i1'=3, i3'=1+i3, i4'=-1+i4, i5'=1+i5
   2: (i4 == 0 /\ -1+i5 >= 0 /\ -1+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=1, i5'=-1+i5
   3: (-2+i1 == 0 /\ -1+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i5'=-1+i5
   4: (-3+i1 == 0 /\ -1+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i5'=-1+i5

Dependency graph:
0 -> 1, 0 -> 4
1 -> 1, 1 -> 4
2 -> 0, 2 -> 3
3 -> 0, 3 -> 3
4 -> 0, 4 -> 3

Step with 2

	Trace

	2[(i4 == 0 /\ -1+i5 >= 0 /\ -1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 3

	Trace

	2[(i4 == 0 /\ -1+i5 >= 0 /\ -1+i1 == 0)]
	3[(-2+i1 == 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Poly(n^1)

Accelerate

	Loop Acceleration

	Original rule:
	(-2+i1 == 0 /\ -1+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i5'=-1+i5
	New rule:
	(-it9+i5 >= 0 /\ -2+i1 >= 0 /\ -1+it9 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it9, i4'=i4+it9, i5'=-it9+i5

		-2+i1 >= 0 [0]: unchanged
		
		-1+i5 >= 0 [0]: montonic decrease yields -it9+i5 >= 0
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, -1+i5 >= 0 -> -it9+i5 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-it9+i5 >= 0 /\ -2+i1 >= 0 /\ -1+it9 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it9, i4'=i4+it9, i5'=-it9+i5
	New rule:
	(-it9+i5 >= 0 /\ -2+i1 >= 0 /\ -1+it9 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+it9, i4'=i4+it9, i5'=-it9+i5
	
	Instantiation

	Original rule:
	(-it9+i5 >= 0 /\ -2+i1 >= 0 /\ -1+it9 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+it9, i4'=i4+it9, i5'=-it9+i5
	New rule:
	(0 >= 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+i5, i4'=i4+i5, i5'=0

Start location: f999

Location map:
LoAT_sink -> 0
f999 -> 1
f1 -> 2
f2 -> 3

Rules:
   0: (-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=-1+i4
   1: (-3+i1 == 0 /\ -1+i4 >= 0) /\ i1'=3, i3'=1+i3, i4'=-1+i4, i5'=1+i5
   2: (i4 == 0 /\ -1+i5 >= 0 /\ -1+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=1, i5'=-1+i5
   3: (-2+i1 == 0 /\ -1+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i5'=-1+i5
   4: (-3+i1 == 0 /\ -1+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i5'=-1+i5
   5: (0 >= 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+i5, i4'=i4+i5, i5'=0

Dependency graph:
0 -> 1, 0 -> 4
1 -> 1, 1 -> 4
2 -> 0, 2 -> 3, 2 -> 5
3 -> 0, 3 -> 3, 3 -> 5
4 -> 0, 4 -> 3, 4 -> 5
5 -> 0, 5 -> 3

	Trace

	2[(i4 == 0 /\ -1+i5 >= 0 /\ -1+i1 == 0)]
	5[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{}
	{3[T], 5[T]}
	
Step with 0

	Trace

	2[(i4 == 0 /\ -1+i5 >= 0 /\ -1+i1 == 0)]
	5[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0)]
	0[(-1+i4 >= 0 /\ -2+i1 == 0)]
	
	Blocked

	{}
	{}
	{3[T], 5[T]}
	{}
	
Step with 1

	Trace

	2[(i4 == 0 /\ -1+i5 >= 0 /\ -1+i1 == 0)]
	5[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0)]
	0[(-1+i4 >= 0 /\ -2+i1 == 0)]
	1[(-3+i1 == 0 /\ -1+i4 >= 0)]
	
	Blocked

	{}
	{}
	{3[T], 5[T]}
	{}
	{}
	
Accelerate

	Loop Acceleration

	Original rule:
	(-3+i1 == 0 /\ -1+i4 >= 0) /\ i1'=3, i3'=1+i3, i4'=-1+i4, i5'=1+i5
	New rule:
	(-3+i1 >= 0 /\ i4-it30 >= 0 /\ 3-i1 >= 0 /\ -1+it30 >= 0) /\ i1'=i1, i3'=i3+it30, i4'=i4-it30, i5'=it30+i5

		-3+i1 >= 0 [0]: unchanged
		
		-1+i4 >= 0 [0]: montonic decrease yields i4-it30 >= 0
		
		3-i1 >= 0 [0]: unchanged
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, -1+i4 >= 0 -> i4-it30 >= 0, 3-i1 >= 0 -> 3-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ i4-it30 >= 0 /\ 3-i1 >= 0 /\ -1+it30 >= 0) /\ i1'=i1, i3'=i3+it30, i4'=i4-it30, i5'=it30+i5
	New rule:
	(-3+i1 >= 0 /\ i4-it30 >= 0 /\ 3-i1 >= 0 /\ -1+it30 >= 0) /\ i3'=i3+it30, i4'=i4-it30, i5'=it30+i5
	
	Instantiation

	Original rule:
	(-3+i1 >= 0 /\ i4-it30 >= 0 /\ 3-i1 >= 0 /\ -1+it30 >= 0) /\ i3'=i3+it30, i4'=i4-it30, i5'=it30+i5
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0) /\ i3'=i3+i4, i4'=0, i5'=i4+i5

Start location: f999

Location map:
LoAT_sink -> 0
f999 -> 1
f1 -> 2
f2 -> 3

Rules:
   0: (-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=-1+i4
   1: (-3+i1 == 0 /\ -1+i4 >= 0) /\ i1'=3, i3'=1+i3, i4'=-1+i4, i5'=1+i5
   2: (i4 == 0 /\ -1+i5 >= 0 /\ -1+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=1, i5'=-1+i5
   3: (-2+i1 == 0 /\ -1+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i5'=-1+i5
   4: (-3+i1 == 0 /\ -1+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i5'=-1+i5
   5: (0 >= 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+i5, i4'=i4+i5, i5'=0
   6: (0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0) /\ i3'=i3+i4, i4'=0, i5'=i4+i5

Dependency graph:
0 -> 1, 0 -> 4, 0 -> 6
1 -> 1, 1 -> 4, 1 -> 6
2 -> 0, 2 -> 3, 2 -> 5
3 -> 0, 3 -> 3, 3 -> 5
4 -> 0, 4 -> 3, 4 -> 5
5 -> 0, 5 -> 3
6 -> 1, 6 -> 4

	Trace

	2[(i4 == 0 /\ -1+i5 >= 0 /\ -1+i1 == 0)]
	5[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0)]
	0[(-1+i4 >= 0 /\ -2+i1 == 0)]
	6[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0)]
	
	Blocked

	{}
	{}
	{3[T], 5[T]}
	{}
	{1[T], 6[T]}
	
Step with 4

	Trace

	2[(i4 == 0 /\ -1+i5 >= 0 /\ -1+i1 == 0)]
	5[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0)]
	0[(-1+i4 >= 0 /\ -2+i1 == 0)]
	6[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0)]
	4[(-3+i1 == 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{}
	{3[T], 5[T]}
	{}
	{1[T], 6[T]}
	{}
	
Poly(n^2)

Accelerate

		Extracted Implied Equalities

		Original rule:
		(0 >= 0 /\ 0 == 0 /\ -2+i1 >= 0 /\ -2+i1 == 0 /\ -1+i4+i5 >= 0 /\ -2+i4+i5 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0) /\ i1'=2, i3'=1+i3+i4+2*i5, i4'=1, i5'=-2+i4+i5
		New rule:
		(0 >= 0 /\ 0 == 0 /\ -2+i1 >= 0 /\ -2+i1 == 0 /\ -1+i4+i5 >= 0 /\ -2+i4+i5 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0 /\ 2-i1 == 0) /\ i1'=2, i3'=1+i3+i4+2*i5, i4'=1, i5'=-2+i4+i5
		
		Simplified Guard

		Original rule:
		(0 >= 0 /\ 0 == 0 /\ -2+i1 >= 0 /\ -2+i1 == 0 /\ -1+i4+i5 >= 0 /\ -2+i4+i5 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0 /\ 2-i1 == 0) /\ i1'=2, i3'=1+i3+i4+2*i5, i4'=1, i5'=-2+i4+i5
		New rule:
		(-2+i1 >= 0 /\ -2+i1 == 0 /\ -1+i4+i5 >= 0 /\ -2+i4+i5 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0 /\ 2-i1 == 0) /\ i1'=2, i3'=1+i3+i4+2*i5, i4'=1, i5'=-2+i4+i5

	Loop Acceleration

	Original rule:
	(-2+i1 >= 0 /\ -2+i1 == 0 /\ -1+i4+i5 >= 0 /\ -2+i4+i5 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0 /\ 2-i1 == 0) /\ i1'=2, i3'=1+i3+i4+2*i5, i4'=1, i5'=-2+i4+i5
	New rule:
	(-3-it39+i4+i5 >= 0 /\ -2-it39+i4+i5 >= 0 /\ -2+i1 >= 0 /\ -2+i1 == 0 /\ -1+i4+i5 >= 0 /\ -2+i4+i5 >= 0 /\ -1+i5 >= 0 /\ -3+i4+i5 >= 0 /\ 2-i1 >= 0 /\ 2-i1 == 0 /\ -4+i4+i5 >= 0 /\ -1+it39 >= 0) /\ i1'=i1, i3'=-1+3*it39+i3+3*i4-it39^2+4*i5+2*it39*(-3+i4+i5), i4'=1, i5'=-3-it39+i4+i5

		-2+i1 >= 0 [0]: unchanged
		
		-1+i4+i5 >= 0 [0]: montonic decrease yields (-1+i4+i5 >= 0 /\ 1-it39+i5 >= 0)
		
		-2+i4+i5 >= 0 [0]: montonic decrease yields (-2+i4+i5 >= 0 /\ -it39+i5 >= 0)
		
		-1+i5 >= 0 [0]: eventual decrease yields (-1+i5 >= 0 /\ -it39+i5 >= 0)
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, -1+i4+i5 >= 0 -> (-1+i4+i5 >= 0 /\ 1-it39+i5 >= 0), -2+i4+i5 >= 0 -> (-2+i4+i5 >= 0 /\ -it39+i5 >= 0), -1+i5 >= 0 -> (-1+i5 >= 0 /\ -it39+i5 >= 0), 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-3-it39+i4+i5 >= 0 /\ -2-it39+i4+i5 >= 0 /\ -2+i1 >= 0 /\ -2+i1 == 0 /\ -1+i4+i5 >= 0 /\ -2+i4+i5 >= 0 /\ -1+i5 >= 0 /\ -3+i4+i5 >= 0 /\ 2-i1 >= 0 /\ 2-i1 == 0 /\ -4+i4+i5 >= 0 /\ -1+it39 >= 0) /\ i1'=i1, i3'=-1+3*it39+i3+3*i4-it39^2+4*i5+2*it39*(-3+i4+i5), i4'=1, i5'=-3-it39+i4+i5
	New rule:
	(-3-it39+i4+i5 >= 0 /\ -2-it39+i4+i5 >= 0 /\ -2+i1 >= 0 /\ -2+i1 == 0 /\ -1+i4+i5 >= 0 /\ -2+i4+i5 >= 0 /\ -1+i5 >= 0 /\ -3+i4+i5 >= 0 /\ 2-i1 >= 0 /\ 2-i1 == 0 /\ -4+i4+i5 >= 0 /\ -1+it39 >= 0) /\ i3'=-1+3*it39+i3+3*i4-it39^2+4*i5+2*it39*(-3+i4+i5), i4'=1, i5'=-3-it39+i4+i5
	
	Instantiation

	Original rule:
	(-3-it39+i4+i5 >= 0 /\ -2-it39+i4+i5 >= 0 /\ -2+i1 >= 0 /\ -2+i1 == 0 /\ -1+i4+i5 >= 0 /\ -2+i4+i5 >= 0 /\ -1+i5 >= 0 /\ -3+i4+i5 >= 0 /\ 2-i1 >= 0 /\ 2-i1 == 0 /\ -4+i4+i5 >= 0 /\ -1+it39 >= 0) /\ i3'=-1+3*it39+i3+3*i4-it39^2+4*i5+2*it39*(-3+i4+i5), i4'=1, i5'=-3-it39+i4+i5
	New rule:
	(0 >= 0 /\ 1 >= 0 /\ -2+i1 >= 0 /\ -2+i1 == 0 /\ -1+i4+i5 >= 0 /\ -2+i4+i5 >= 0 /\ -1+i5 >= 0 /\ -3+i4+i5 >= 0 /\ 2-i1 >= 0 /\ 2-i1 == 0 /\ -4+i4+i5 >= 0) /\ i3'=-10+i3+6*i4+7*i5+(-3+i4+i5)^2, i4'=1, i5'=0

Start location: f999

Location map:
LoAT_sink -> 0
f999 -> 1
f1 -> 2
f2 -> 3

Rules:
   0: (-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=-1+i4
   1: (-3+i1 == 0 /\ -1+i4 >= 0) /\ i1'=3, i3'=1+i3, i4'=-1+i4, i5'=1+i5
   2: (i4 == 0 /\ -1+i5 >= 0 /\ -1+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=1, i5'=-1+i5
   3: (-2+i1 == 0 /\ -1+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i5'=-1+i5
   4: (-3+i1 == 0 /\ -1+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i5'=-1+i5
   5: (0 >= 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+i5, i4'=i4+i5, i5'=0
   6: (0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0) /\ i3'=i3+i4, i4'=0, i5'=i4+i5
   7: (0 >= 0 /\ 1 >= 0 /\ -2+i1 >= 0 /\ -2+i1 == 0 /\ -1+i4+i5 >= 0 /\ -2+i4+i5 >= 0 /\ -1+i5 >= 0 /\ -3+i4+i5 >= 0 /\ 2-i1 >= 0 /\ 2-i1 == 0 /\ -4+i4+i5 >= 0) /\ i3'=-10+i3+6*i4+7*i5+(-3+i4+i5)^2, i4'=1, i5'=0

Dependency graph:
0 -> 1, 0 -> 4, 0 -> 6
1 -> 1, 1 -> 4, 1 -> 6
2 -> 0, 2 -> 3, 2 -> 5, 2 -> 7
3 -> 0, 3 -> 3, 3 -> 5, 3 -> 7
4 -> 0, 4 -> 3, 4 -> 5, 4 -> 7
5 -> 0, 5 -> 3
6 -> 1, 6 -> 4
7 -> 0, 7 -> 3, 7 -> 5

	Trace

	2[(i4 == 0 /\ -1+i5 >= 0 /\ -1+i1 == 0)]
	7[(0 >= 0 /\ 1 >= 0 /\ -2+i1 >= 0 /\ -2+i1 == 0 /\ -1+i4+i5 >= 0 /\ -2+i4+i5 >= 0 /\ -1+i5 >= 0 /\ -3+i4+i5 >= 0 /\ 2-i1 >= 0 /\ 2-i1 == 0 /\ -4+i4+i5 >= 0)]
	
	Blocked

	{}
	{}
	{7[T]}
	
Step with 0

	Trace

	2[(i4 == 0 /\ -1+i5 >= 0 /\ -1+i1 == 0)]
	7[(0 >= 0 /\ 1 >= 0 /\ -2+i1 >= 0 /\ -2+i1 == 0 /\ -1+i4+i5 >= 0 /\ -2+i4+i5 >= 0 /\ -1+i5 >= 0 /\ -3+i4+i5 >= 0 /\ 2-i1 >= 0 /\ 2-i1 == 0 /\ -4+i4+i5 >= 0)]
	0[(-1+i4 >= 0 /\ -2+i1 == 0)]
	
	Blocked

	{}
	{}
	{3[T], 5[T], 7[T]}
	{}
	
Backtrack

	Trace

	2[(i4 == 0 /\ -1+i5 >= 0 /\ -1+i1 == 0)]
	7[(0 >= 0 /\ 1 >= 0 /\ -2+i1 >= 0 /\ -2+i1 == 0 /\ -1+i4+i5 >= 0 /\ -2+i4+i5 >= 0 /\ -1+i5 >= 0 /\ -3+i4+i5 >= 0 /\ 2-i1 >= 0 /\ 2-i1 == 0 /\ -4+i4+i5 >= 0)]
	
	Blocked

	{}
	{}
	{0[T], 3[T], 5[T], 7[T]}
	
Backtrack

	Trace

	2[(i4 == 0 /\ -1+i5 >= 0 /\ -1+i1 == 0)]
	
	Blocked

	{}
	{7[T]}
	
Step with 3

	Trace

	2[(i4 == 0 /\ -1+i5 >= 0 /\ -1+i1 == 0)]
	3[(-2+i1 == 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{7[T]}
	{}
	
Covered

	Trace

	2[(i4 == 0 /\ -1+i5 >= 0 /\ -1+i1 == 0)]
	
	Blocked

	{}
	{3[T], 7[T]}
	
Step with 5

	Trace

	2[(i4 == 0 /\ -1+i5 >= 0 /\ -1+i1 == 0)]
	5[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{3[T], 7[T]}
	{5[T]}
	
Step with 0

	Trace

	2[(i4 == 0 /\ -1+i5 >= 0 /\ -1+i1 == 0)]
	5[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0)]
	0[(-1+i4 >= 0 /\ -2+i1 == 0)]
	
	Blocked

	{}
	{3[T], 7[T]}
	{5[T]}
	{}
	
Step with 1

	Trace

	2[(i4 == 0 /\ -1+i5 >= 0 /\ -1+i1 == 0)]
	5[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0)]
	0[(-1+i4 >= 0 /\ -2+i1 == 0)]
	1[(-3+i1 == 0 /\ -1+i4 >= 0)]
	
	Blocked

	{}
	{3[T], 7[T]}
	{5[T]}
	{}
	{}
	
Covered

	Trace

	2[(i4 == 0 /\ -1+i5 >= 0 /\ -1+i1 == 0)]
	5[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0)]
	0[(-1+i4 >= 0 /\ -2+i1 == 0)]
	
	Blocked

	{}
	{3[T], 7[T]}
	{5[T]}
	{1[T]}
	
Step with 6

	Trace

	2[(i4 == 0 /\ -1+i5 >= 0 /\ -1+i1 == 0)]
	5[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0)]
	0[(-1+i4 >= 0 /\ -2+i1 == 0)]
	6[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0)]
	
	Blocked

	{}
	{3[T], 7[T]}
	{5[T]}
	{1[T]}
	{6[T]}
	
Step with 4

	Trace

	2[(i4 == 0 /\ -1+i5 >= 0 /\ -1+i1 == 0)]
	5[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0)]
	0[(-1+i4 >= 0 /\ -2+i1 == 0)]
	6[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0)]
	4[(-3+i1 == 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{3[T], 7[T]}
	{5[T]}
	{1[T]}
	{6[T]}
	{}
	
Covered

	Trace

	2[(i4 == 0 /\ -1+i5 >= 0 /\ -1+i1 == 0)]
	5[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0)]
	0[(-1+i4 >= 0 /\ -2+i1 == 0)]
	6[(0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0)]
	
	Blocked

	{}
	{3[T], 7[T]}
	{5[T]}
	{1[T]}
	{4[T], 6[T]}
	
Backtrack

	Trace

	2[(i4 == 0 /\ -1+i5 >= 0 /\ -1+i1 == 0)]
	5[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0)]
	0[(-1+i4 >= 0 /\ -2+i1 == 0)]
	
	Blocked

	{}
	{3[T], 7[T]}
	{5[T]}
	{1[T], 6[T]}
	
Backtrack

	Trace

	2[(i4 == 0 /\ -1+i5 >= 0 /\ -1+i1 == 0)]
	5[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{3[T], 7[T]}
	{0[T], 5[T]}
	
Backtrack

	Trace

	2[(i4 == 0 /\ -1+i5 >= 0 /\ -1+i1 == 0)]
	
	Blocked

	{}
	{3[T], 5[T], 7[T]}
	
Step with 0

	Trace

	2[(i4 == 0 /\ -1+i5 >= 0 /\ -1+i1 == 0)]
	0[(-1+i4 >= 0 /\ -2+i1 == 0)]
	
	Blocked

	{}
	{3[T], 5[T], 7[T]}
	{}
	
Step with 4

	Trace

	2[(i4 == 0 /\ -1+i5 >= 0 /\ -1+i1 == 0)]
	0[(-1+i4 >= 0 /\ -2+i1 == 0)]
	4[(-3+i1 == 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{3[T], 5[T], 7[T]}
	{}
	{}
	
Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -1+i4 >= 0 /\ -2+i1 == 0 /\ -1+i5 >= 0) /\ i1'=2, i3'=2+i3, i4'=i4, i5'=-1+i5
		New rule:
		(-1+i4 >= 0 /\ -2+i1 == 0 /\ -1+i5 >= 0) /\ i1'=2, i3'=2+i3, i4'=i4, i5'=-1+i5
		
		Removed Trivial Updates

		Original rule:
		(-1+i4 >= 0 /\ -2+i1 == 0 /\ -1+i5 >= 0) /\ i1'=2, i3'=2+i3, i4'=i4, i5'=-1+i5
		New rule:
		(-1+i4 >= 0 /\ -2+i1 == 0 /\ -1+i5 >= 0) /\ i1'=2, i3'=2+i3, i5'=-1+i5

	Loop Acceleration

	Original rule:
	(-1+i4 >= 0 /\ -2+i1 == 0 /\ -1+i5 >= 0) /\ i1'=2, i3'=2+i3, i5'=-1+i5
	New rule:
	(-1+i4 >= 0 /\ -2+i1 >= 0 /\ -it88+i5 >= 0 /\ 2-i1 >= 0 /\ -1+it88 >= 0) /\ i1'=i1, i3'=i3+2*it88, i5'=-it88+i5

		-1+i4 >= 0 [0]: unchanged
		
		-2+i1 >= 0 [0]: unchanged
		
		-1+i5 >= 0 [0]: montonic decrease yields -it88+i5 >= 0
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-1+i4 >= 0 -> -1+i4 >= 0, -2+i1 >= 0 -> -2+i1 >= 0, -1+i5 >= 0 -> -it88+i5 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-1+i4 >= 0 /\ -2+i1 >= 0 /\ -it88+i5 >= 0 /\ 2-i1 >= 0 /\ -1+it88 >= 0) /\ i1'=i1, i3'=i3+2*it88, i5'=-it88+i5
	New rule:
	(-1+i4 >= 0 /\ -2+i1 >= 0 /\ -it88+i5 >= 0 /\ 2-i1 >= 0 /\ -1+it88 >= 0) /\ i3'=i3+2*it88, i5'=-it88+i5
	
	Instantiation

	Original rule:
	(-1+i4 >= 0 /\ -2+i1 >= 0 /\ -it88+i5 >= 0 /\ 2-i1 >= 0 /\ -1+it88 >= 0) /\ i3'=i3+2*it88, i5'=-it88+i5
	New rule:
	(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+2*i5, i5'=0

Start location: f999

Location map:
LoAT_sink -> 0
f999 -> 1
f1 -> 2
f2 -> 3

Rules:
   0: (-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=-1+i4
   1: (-3+i1 == 0 /\ -1+i4 >= 0) /\ i1'=3, i3'=1+i3, i4'=-1+i4, i5'=1+i5
   2: (i4 == 0 /\ -1+i5 >= 0 /\ -1+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=1, i5'=-1+i5
   3: (-2+i1 == 0 /\ -1+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i5'=-1+i5
   4: (-3+i1 == 0 /\ -1+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i5'=-1+i5
   5: (0 >= 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+i5, i4'=i4+i5, i5'=0
   6: (0 >= 0 /\ -3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0) /\ i3'=i3+i4, i4'=0, i5'=i4+i5
   7: (0 >= 0 /\ 1 >= 0 /\ -2+i1 >= 0 /\ -2+i1 == 0 /\ -1+i4+i5 >= 0 /\ -2+i4+i5 >= 0 /\ -1+i5 >= 0 /\ -3+i4+i5 >= 0 /\ 2-i1 >= 0 /\ 2-i1 == 0 /\ -4+i4+i5 >= 0) /\ i3'=-10+i3+6*i4+7*i5+(-3+i4+i5)^2, i4'=1, i5'=0
   8: (0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+2*i5, i5'=0

Dependency graph:
0 -> 1, 0 -> 4, 0 -> 6
1 -> 1, 1 -> 4, 1 -> 6
2 -> 0, 2 -> 3, 2 -> 5, 2 -> 7, 2 -> 8
3 -> 0, 3 -> 3, 3 -> 5, 3 -> 7, 3 -> 8
4 -> 0, 4 -> 3, 4 -> 5, 4 -> 7, 4 -> 8
5 -> 0, 5 -> 3, 5 -> 8
6 -> 1, 6 -> 4
7 -> 0, 7 -> 3, 7 -> 5, 7 -> 8
8 -> 0, 8 -> 3, 8 -> 5, 8 -> 7

	Trace

	2[(i4 == 0 /\ -1+i5 >= 0 /\ -1+i1 == 0)]
	8[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{3[T], 5[T], 7[T]}
	{8[T]}
	
Step with 0

	Trace

	2[(i4 == 0 /\ -1+i5 >= 0 /\ -1+i1 == 0)]
	8[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0)]
	0[(-1+i4 >= 0 /\ -2+i1 == 0)]
	
	Blocked

	{}
	{3[T], 5[T], 7[T]}
	{8[T]}
	{}
	
Backtrack

	Trace

	2[(i4 == 0 /\ -1+i5 >= 0 /\ -1+i1 == 0)]
	8[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ -1+i5 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{3[T], 5[T], 7[T]}
	{0[T], 8[T]}
	
Backtrack

	Trace

	2[(i4 == 0 /\ -1+i5 >= 0 /\ -1+i1 == 0)]
	
	Blocked

	{}
	{3[T], 5[T], 7[T], 8[T]}
	
Step with 0

	Trace

	2[(i4 == 0 /\ -1+i5 >= 0 /\ -1+i1 == 0)]
	0[(-1+i4 >= 0 /\ -2+i1 == 0)]
	
	Blocked

	{}
	{3[T], 5[T], 7[T], 8[T]}
	{}
	
Step with 4

	Trace

	2[(i4 == 0 /\ -1+i5 >= 0 /\ -1+i1 == 0)]
	0[(-1+i4 >= 0 /\ -2+i1 == 0)]
	4[(-3+i1 == 0 /\ -1+i5 >= 0)]
	
	Blocked

	{}
	{3[T], 5[T], 7[T], 8[T]}
	{}
	{}
	
Covered

	Trace

	2[(i4 == 0 /\ -1+i5 >= 0 /\ -1+i1 == 0)]
	0[(-1+i4 >= 0 /\ -2+i1 == 0)]
	
	Blocked

	{}
	{3[T], 5[T], 7[T], 8[T]}
	{4[T]}
	
Backtrack

	Trace

	2[(i4 == 0 /\ -1+i5 >= 0 /\ -1+i1 == 0)]
	
	Blocked

	{}
	{0[T], 3[T], 5[T], 7[T], 8[T]}
	
Backtrack

	Trace

	Blocked

	{2[T]}
	
Accept

Poly(n^2)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
MAYBE


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁
  Temp_Vars:  
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₂: l0(X₀, X₁) → l1(1, X₁-1) :|: 1 ≤ X₁ ∧ 0 ≤ X₀ ∧ X₀ ≤ 0
  t₃: l1(X₀, X₁) → l1(1+X₀, X₁-1) :|: 1 ≤ X₁
  t₀: l1(X₀, X₁) → l2(X₀-1, X₁) :|: 1 ≤ X₀
  t₄: l2(X₀, X₁) → l1(1+X₀, X₁-1) :|: 1 ≤ X₁
  t₁: l2(X₀, X₁) → l2(X₀-1, 1+X₁) :|: 1 ≤ X₀


Preprocessing
  Found invariant 0 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l1


  Found invariant 0 ≤ X₁ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₀ for location l2


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁
  Temp_Vars:  
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₂: l0(X₀, X₁) → l1(1, X₁-1) :|: 1 ≤ X₁ ∧ 0 ≤ X₀ ∧ X₀ ≤ 0
  t₃: l1(X₀, X₁) → l1(1+X₀, X₁-1) :|: 1 ≤ X₁ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₁ ∧ 0 ≤ X₁
  t₀: l1(X₀, X₁) → l2(X₀-1, X₁) :|: 1 ≤ X₀ ∧ 1 ≤ X₀+X₁ ∧ 0 ≤ X₁
  t₄: l2(X₀, X₁) → l1(1+X₀, X₁-1) :|: 1 ≤ X₁ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₁
  t₁: l2(X₀, X₁) → l2(X₀-1, 1+X₁) :|: 1 ≤ X₀ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₁


MPRF for transition t₀: l1(X₀, X₁) → l2(X₀-1, X₁) :|: 1 ≤ X₀ ∧ 1 ≤ X₀+X₁ ∧ 0 ≤ X₁ of depth 1:
  new bound:
    X₁+1 {O(n)}

  MPRF:
    • l1: [X₀+X₁]
    • l2: [X₀+X₁]




MPRF for transition t₄: l2(X₀, X₁) → l1(1+X₀, X₁-1) :|: 1 ≤ X₁ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₁ of depth 1:
  new bound:
    X₁+1 {O(n)}

  MPRF:
    • l1: [X₀+X₁]
    • l2: [1+X₀+X₁]




  Found invariant 0 ≤ X₁ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₀ for location l2


  Found invariant 0 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 2 ≤ X₀ for location l1_v1


  Found invariant 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 0 ≤ X₀ for location l2_v1


  Found invariant 0 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l1


All Bounds
Timebounds
  Overall timebound:inf {Infinity}
    t₀: X₁+1 {O(n)}
    t₁: inf {Infinity}
    t₂: 1 {O(1)}
    t₃: inf {Infinity}
    t₄: X₁+1 {O(n)}


Costbounds
  Overall costbound: inf {Infinity}
    t₀: X₁+1 {O(n)}
    t₁: inf {Infinity}
    t₂: 1 {O(1)}
    t₃: inf {Infinity}
    t₄: X₁+1 {O(n)}


Sizebounds
    t₂, X₀: 1 {O(1)}
    t₂, X₁: X₁ {O(n)}

