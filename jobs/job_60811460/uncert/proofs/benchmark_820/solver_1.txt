WORST_CASE(?,O(n^1))

# LoAT Proof:
Initial ITS

Start location: l0

Location map:
LoAT_sink -> 0
l0 -> 1
l1 -> 2

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (i6 > 0 /\ -2+i1 == 0 /\ i6-i4 < 0) /\ i1'=2, i3'=1+i3, i4'=2*i4, i5'=3*i5, i6'=4*i6
   2: (i6 > 0 /\ -2+i1 == 0 /\ i6-i5 < 0) /\ i1'=2, i3'=1+i3, i4'=2*i4, i5'=3*i5, i6'=4*i6

Dependency graph:
0 -> 1, 0 -> 2
1 -> 1, 1 -> 2
2 -> 1, 2 -> 2

Step with 0

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 2

	Trace

	0[(-1+i1 == 0)]
	2[(i6 > 0 /\ -2+i1 == 0 /\ i6-i5 < 0)]
	
	Blocked

	{}
	{}
	{}
	
Step with 2

	Trace

	0[(-1+i1 == 0)]
	2[(i6 > 0 /\ -2+i1 == 0 /\ i6-i5 < 0)]
	2[(i6 > 0 /\ -2+i1 == 0 /\ i6-i5 < 0)]
	
	Blocked

	{}
	{}
	{}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	2[(i6 > 0 /\ -2+i1 == 0 /\ i6-i5 < 0)]
	
	Blocked

	{}
	{}
	{2[T]}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	2[(i6 > 0 /\ -2+i1 == 0 /\ i6-i5 < 0)]
	1[(i6 > 0 /\ -2+i1 == 0 /\ i6-i4 < 0)]
	
	Blocked

	{}
	{}
	{2[T]}
	{}
	
Step with 2

	Trace

	0[(-1+i1 == 0)]
	2[(i6 > 0 /\ -2+i1 == 0 /\ i6-i5 < 0)]
	1[(i6 > 0 /\ -2+i1 == 0 /\ i6-i4 < 0)]
	2[(i6 > 0 /\ -2+i1 == 0 /\ i6-i5 < 0)]
	
	Blocked

	{}
	{}
	{2[T]}
	{}
	{}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	2[(i6 > 0 /\ -2+i1 == 0 /\ i6-i5 < 0)]
	1[(i6 > 0 /\ -2+i1 == 0 /\ i6-i4 < 0)]
	2[(i6 > 0 /\ -2+i1 == 0 /\ i6-i5 < 0)]
	1[(i6 > 0 /\ -2+i1 == 0 /\ i6-i4 < 0)]
	
	Blocked

	{}
	{}
	{2[T]}
	{}
	{}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	2[(i6 > 0 /\ -2+i1 == 0 /\ i6-i5 < 0)]
	1[(i6 > 0 /\ -2+i1 == 0 /\ i6-i4 < 0)]
	2[(i6 > 0 /\ -2+i1 == 0 /\ i6-i5 < 0)]
	
	Blocked

	{}
	{}
	{2[T]}
	{}
	{1[T]}
	
Step with 2

	Trace

	0[(-1+i1 == 0)]
	2[(i6 > 0 /\ -2+i1 == 0 /\ i6-i5 < 0)]
	1[(i6 > 0 /\ -2+i1 == 0 /\ i6-i4 < 0)]
	2[(i6 > 0 /\ -2+i1 == 0 /\ i6-i5 < 0)]
	2[(i6 > 0 /\ -2+i1 == 0 /\ i6-i5 < 0)]
	
	Blocked

	{}
	{}
	{2[T]}
	{}
	{1[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	2[(i6 > 0 /\ -2+i1 == 0 /\ i6-i5 < 0)]
	1[(i6 > 0 /\ -2+i1 == 0 /\ i6-i4 < 0)]
	2[(i6 > 0 /\ -2+i1 == 0 /\ i6-i5 < 0)]
	
	Blocked

	{}
	{}
	{2[T]}
	{}
	{1[T], 2[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	2[(i6 > 0 /\ -2+i1 == 0 /\ i6-i5 < 0)]
	1[(i6 > 0 /\ -2+i1 == 0 /\ i6-i4 < 0)]
	
	Blocked

	{}
	{}
	{2[T]}
	{2[T]}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	2[(i6 > 0 /\ -2+i1 == 0 /\ i6-i5 < 0)]
	1[(i6 > 0 /\ -2+i1 == 0 /\ i6-i4 < 0)]
	1[(i6 > 0 /\ -2+i1 == 0 /\ i6-i4 < 0)]
	
	Blocked

	{}
	{}
	{2[T]}
	{2[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	2[(i6 > 0 /\ -2+i1 == 0 /\ i6-i5 < 0)]
	1[(i6 > 0 /\ -2+i1 == 0 /\ i6-i4 < 0)]
	
	Blocked

	{}
	{}
	{2[T]}
	{1[T], 2[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	2[(i6 > 0 /\ -2+i1 == 0 /\ i6-i5 < 0)]
	
	Blocked

	{}
	{}
	{1[T], 2[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{2[T]}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	1[(i6 > 0 /\ -2+i1 == 0 /\ i6-i4 < 0)]
	
	Blocked

	{}
	{2[T]}
	{}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	1[(i6 > 0 /\ -2+i1 == 0 /\ i6-i4 < 0)]
	1[(i6 > 0 /\ -2+i1 == 0 /\ i6-i4 < 0)]
	
	Blocked

	{}
	{2[T]}
	{}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	1[(i6 > 0 /\ -2+i1 == 0 /\ i6-i4 < 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T]}
	
Step with 2

	Trace

	0[(-1+i1 == 0)]
	1[(i6 > 0 /\ -2+i1 == 0 /\ i6-i4 < 0)]
	2[(i6 > 0 /\ -2+i1 == 0 /\ i6-i5 < 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T]}
	{}
	
Step with 2

	Trace

	0[(-1+i1 == 0)]
	1[(i6 > 0 /\ -2+i1 == 0 /\ i6-i4 < 0)]
	2[(i6 > 0 /\ -2+i1 == 0 /\ i6-i5 < 0)]
	2[(i6 > 0 /\ -2+i1 == 0 /\ i6-i5 < 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T]}
	{}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	1[(i6 > 0 /\ -2+i1 == 0 /\ i6-i4 < 0)]
	2[(i6 > 0 /\ -2+i1 == 0 /\ i6-i5 < 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T]}
	{2[T]}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	1[(i6 > 0 /\ -2+i1 == 0 /\ i6-i4 < 0)]
	2[(i6 > 0 /\ -2+i1 == 0 /\ i6-i5 < 0)]
	1[(i6 > 0 /\ -2+i1 == 0 /\ i6-i4 < 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T]}
	{2[T]}
	{}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	1[(i6 > 0 /\ -2+i1 == 0 /\ i6-i4 < 0)]
	2[(i6 > 0 /\ -2+i1 == 0 /\ i6-i5 < 0)]
	1[(i6 > 0 /\ -2+i1 == 0 /\ i6-i4 < 0)]
	1[(i6 > 0 /\ -2+i1 == 0 /\ i6-i4 < 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T]}
	{2[T]}
	{}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	1[(i6 > 0 /\ -2+i1 == 0 /\ i6-i4 < 0)]
	2[(i6 > 0 /\ -2+i1 == 0 /\ i6-i5 < 0)]
	1[(i6 > 0 /\ -2+i1 == 0 /\ i6-i4 < 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T]}
	{2[T]}
	{1[T]}
	
Step with 2

	Trace

	0[(-1+i1 == 0)]
	1[(i6 > 0 /\ -2+i1 == 0 /\ i6-i4 < 0)]
	2[(i6 > 0 /\ -2+i1 == 0 /\ i6-i5 < 0)]
	1[(i6 > 0 /\ -2+i1 == 0 /\ i6-i4 < 0)]
	2[(i6 > 0 /\ -2+i1 == 0 /\ i6-i5 < 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T]}
	{2[T]}
	{1[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	1[(i6 > 0 /\ -2+i1 == 0 /\ i6-i4 < 0)]
	2[(i6 > 0 /\ -2+i1 == 0 /\ i6-i5 < 0)]
	1[(i6 > 0 /\ -2+i1 == 0 /\ i6-i4 < 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T]}
	{2[T]}
	{1[T], 2[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	1[(i6 > 0 /\ -2+i1 == 0 /\ i6-i4 < 0)]
	2[(i6 > 0 /\ -2+i1 == 0 /\ i6-i5 < 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T]}
	{1[T], 2[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	1[(i6 > 0 /\ -2+i1 == 0 /\ i6-i4 < 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T], 2[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{1[T], 2[T]}
	
Backtrack

	Trace

	Blocked

	{0[T]}
	
Accept

Constant


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  
  Locations:  l0, l1
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂) → l1(X₀, X₁, X₂)
  t₁: l1(X₀, X₁, X₂) → l1(2⋅X₀, 3⋅X₁, 4⋅X₂) :|: 1+X₂ ≤ X₀ ∧ 1 ≤ X₂
  t₂: l1(X₀, X₁, X₂) → l1(2⋅X₀, 3⋅X₁, 4⋅X₂) :|: 1+X₂ ≤ X₁ ∧ 1 ≤ X₂


Preprocessing
Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  
  Locations:  l0, l1
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂) → l1(X₀, X₁, X₂)
  t₁: l1(X₀, X₁, X₂) → l1(2⋅X₀, 3⋅X₁, 4⋅X₂) :|: 1+X₂ ≤ X₀ ∧ 1 ≤ X₂
  t₂: l1(X₀, X₁, X₂) → l1(2⋅X₀, 3⋅X₁, 4⋅X₂) :|: 1+X₂ ≤ X₁ ∧ 1 ≤ X₂


TWN: t₁: l1→l1


  cycle: [t₁: l1→l1; t₂: l1→l1]
  original loop: (1+X₂ ≤ X₀ ∧ 1 ≤ X₂ ∨ 1+X₂ ≤ X₁ ∧ 1 ≤ X₂,(X₀,X₁,X₂) -> (2⋅X₀,3⋅X₁,4⋅X₂))
  transformed loop: (1+X₂ ≤ X₀ ∧ 1 ≤ X₂ ∨ 1+X₂ ≤ X₁ ∧ 1 ≤ X₂,(X₀,X₁,X₂) -> (2⋅X₀,3⋅X₁,4⋅X₂))
  loop: (1+X₂ ≤ X₀ ∧ 1 ≤ X₂ ∨ 1+X₂ ≤ X₁ ∧ 1 ≤ X₂,(X₀,X₁,X₂) -> (2⋅X₀,3⋅X₁,4⋅X₂))
  order: [X₂; X₁; X₀]
closed-form:  X₂: X₂⋅(4)^n
  X₁: X₁⋅(3)^n
  X₀: X₀⋅(2)^n

  Termination: true
  Formula: 
    0 ≤ 1 ∧ 1 ≤ 0 ∧ 1 ≤ X₂ ∧ 0 ≤ X₀ ∧ X₀ ≤ 0 ∧ 0 ≤ X₂ ∧ X₂ ≤ 0
     ∨ 0 ≤ 1 ∧ 1 ≤ 0 ∧ 1 ≤ X₂ ∧ 0 ≤ X₁ ∧ X₁ ≤ 0 ∧ 0 ≤ X₂ ∧ X₂ ≤ 0
     ∨ 1 ≤ 0 ∧ 1 ≤ X₂ ∧ 0 ≤ X₀ ∧ X₀ ≤ 0 ∧ 0 ≤ X₂ ∧ X₂ ≤ 0
     ∨ 1 ≤ 0 ∧ 1 ≤ X₂ ∧ 0 ≤ X₁ ∧ X₁ ≤ 0 ∧ 0 ≤ X₂ ∧ X₂ ≤ 0
     ∨ 1 ≤ X₀ ∧ 1 ≤ X₂ ∧ 0 ≤ X₂ ∧ X₂ ≤ 0
     ∨ 1 ≤ X₁ ∧ 1 ≤ X₂ ∧ 0 ≤ X₂ ∧ X₂ ≤ 0
     ∨ 1 ≤ X₂ ∧ 1+X₂ ≤ 0



Stabilization-Threshold for: 1+X₂ ≤ X₁
  alphas_abs: X₁
  M: 0
  N: 1
  Bound: 2⋅X₁+2 {O(n)}

Stabilization-Threshold for: 1+X₂ ≤ X₀
  alphas_abs: X₀
  M: 0
  N: 1
  Bound: 2⋅X₀+2 {O(n)}

TWN - Lifting for [1: l1->l1; 2: l1->l1] of 2⋅X₀+2⋅X₁+6 {O(n)}
relevant size-bounds w.r.t. t₀: l0→l1:
X₀: X₀ {O(n)}
X₁: X₁ {O(n)}
Runtime-bound of t₀: 1 {O(1)}
Results in: 2⋅X₀+2⋅X₁+6 {O(n)}
All Bounds
Timebounds
  Overall timebound:4⋅X₀+4⋅X₁+13 {O(n)}
    t₀: 1 {O(1)}
    t₁: 2⋅X₀+2⋅X₁+6 {O(n)}
    t₂: 2⋅X₀+2⋅X₁+6 {O(n)}


Costbounds
  Overall costbound: 4⋅X₀+4⋅X₁+13 {O(n)}
    t₀: 1 {O(1)}
    t₁: 2⋅X₀+2⋅X₁+6 {O(n)}
    t₂: 2⋅X₀+2⋅X₁+6 {O(n)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₀, X₂: X₂ {O(n)}
    t₁, X₀: 2^(4⋅X₀+4⋅X₁+12)⋅X₀ {O(EXP)}
    t₁, X₁: 3^(4⋅X₀+4⋅X₁+12)⋅X₁ {O(EXP)}
    t₁, X₂: 4^(4⋅X₀+4⋅X₁+12)⋅X₂ {O(EXP)}
    t₂, X₀: 2^(4⋅X₀+4⋅X₁+12)⋅X₀ {O(EXP)}
    t₂, X₁: 3^(4⋅X₀+4⋅X₁+12)⋅X₁ {O(EXP)}
    t₂, X₂: 4^(4⋅X₀+4⋅X₁+12)⋅X₂ {O(EXP)}

