WORST_CASE(?,O(1))

# LoAT Proof:
Initial ITS

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f1 -> 2

Rules:
   0: (3-i4 >= 0 /\ i4 >= 0 /\ i5 >= 0 /\ 3-i5 >= 0 /\ -1+i1 == 0) /\ i1'=2, i3'=1+i3, i6'=2
   1: (-2+i1 == 0 /\ -1+i6+i4-2*i5 >= 0) /\ i1'=2, i3'=1+i3, i5'=1+i5
   2: (-2+i1 == 0 /\ -2-i6-i4+2*i5 >= 0) /\ i1'=2, i3'=1+i3, i5'=-1+i5

Dependency graph:
0 -> 1, 0 -> 2
1 -> 1, 1 -> 2
2 -> 1, 2 -> 2

Refined Dependency Graph

	Removed the following edges: 1 -> 2, 2 -> 1

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f1 -> 2

Rules:
   0: (3-i4 >= 0 /\ i4 >= 0 /\ i5 >= 0 /\ 3-i5 >= 0 /\ -1+i1 == 0) /\ i1'=2, i3'=1+i3, i6'=2
   1: (-2+i1 == 0 /\ -1+i6+i4-2*i5 >= 0) /\ i1'=2, i3'=1+i3, i5'=1+i5
   2: (-2+i1 == 0 /\ -2-i6-i4+2*i5 >= 0) /\ i1'=2, i3'=1+i3, i5'=-1+i5

Dependency graph:
0 -> 1, 0 -> 2
1 -> 1
2 -> 2

Step with 0

	Trace

	0[(3-i4 >= 0 /\ i4 >= 0 /\ i5 >= 0 /\ 3-i5 >= 0 /\ -1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 2

	Trace

	0[(3-i4 >= 0 /\ i4 >= 0 /\ i5 >= 0 /\ 3-i5 >= 0 /\ -1+i1 == 0)]
	2[(-2+i1 == 0 /\ -2-i6-i4+2*i5 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Accelerate

	Loop Acceleration

	Original rule:
	(-2+i1 == 0 /\ -2-i6-i4+2*i5 >= 0) /\ i1'=2, i3'=1+i3, i5'=-1+i5
	New rule:
	(-2+i1 >= 0 /\ -i6-i4-2*it11+2*i5 >= 0 /\ 2-i1 >= 0 /\ -1+it11 >= 0) /\ i1'=i1, i3'=i3+it11, i5'=-it11+i5

		-2+i1 >= 0 [0]: unchanged
		
		-2-i6-i4+2*i5 >= 0 [0]: montonic decrease yields -i6-i4-2*it11+2*i5 >= 0
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, -2-i6-i4+2*i5 >= 0 -> -i6-i4-2*it11+2*i5 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-2+i1 >= 0 /\ -i6-i4-2*it11+2*i5 >= 0 /\ 2-i1 >= 0 /\ -1+it11 >= 0) /\ i1'=i1, i3'=i3+it11, i5'=-it11+i5
	New rule:
	(-2+i1 >= 0 /\ -i6-i4-2*it11+2*i5 >= 0 /\ 2-i1 >= 0 /\ -1+it11 >= 0) /\ i3'=i3+it11, i5'=-it11+i5

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f1 -> 2

Rules:
   0: (3-i4 >= 0 /\ i4 >= 0 /\ i5 >= 0 /\ 3-i5 >= 0 /\ -1+i1 == 0) /\ i1'=2, i3'=1+i3, i6'=2
   1: (-2+i1 == 0 /\ -1+i6+i4-2*i5 >= 0) /\ i1'=2, i3'=1+i3, i5'=1+i5
   2: (-2+i1 == 0 /\ -2-i6-i4+2*i5 >= 0) /\ i1'=2, i3'=1+i3, i5'=-1+i5
   3: (-2+i1 >= 0 /\ -i6-i4-2*it11+2*i5 >= 0 /\ 2-i1 >= 0 /\ -1+it11 >= 0) /\ i3'=i3+it11, i5'=-it11+i5

Dependency graph:
0 -> 1, 0 -> 2, 0 -> 3
1 -> 1
2 -> 2, 2 -> 3
3 -> 2

	Trace

	0[(3-i4 >= 0 /\ i4 >= 0 /\ i5 >= 0 /\ 3-i5 >= 0 /\ -1+i1 == 0)]
	3[(-2+i1 >= 0 /\ -i6-i4-2*it11+2*i5 >= 0 /\ 2-i1 >= 0 /\ -1+it11 >= 0)]
	
	Blocked

	{}
	{}
	{2[T], 3[T]}
	
Backtrack

	Trace

	0[(3-i4 >= 0 /\ i4 >= 0 /\ i5 >= 0 /\ 3-i5 >= 0 /\ -1+i1 == 0)]
	
	Blocked

	{}
	{3[T]}
	
Step with 1

	Trace

	0[(3-i4 >= 0 /\ i4 >= 0 /\ i5 >= 0 /\ 3-i5 >= 0 /\ -1+i1 == 0)]
	1[(-2+i1 == 0 /\ -1+i6+i4-2*i5 >= 0)]
	
	Blocked

	{}
	{3[T]}
	{}
	
Accelerate

	Loop Acceleration

	Original rule:
	(-2+i1 == 0 /\ -1+i6+i4-2*i5 >= 0) /\ i1'=2, i3'=1+i3, i5'=1+i5
	New rule:
	(-2+i1 >= 0 /\ -1+it77 >= 0 /\ 2-i1 >= 0 /\ 1+i6-2*it77+i4-2*i5 >= 0) /\ i1'=i1, i3'=i3+it77, i5'=it77+i5

		-2+i1 >= 0 [0]: unchanged
		
		-1+i6+i4-2*i5 >= 0 [0]: montonic decrease yields 1+i6-2*it77+i4-2*i5 >= 0
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, -1+i6+i4-2*i5 >= 0 -> 1+i6-2*it77+i4-2*i5 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-2+i1 >= 0 /\ -1+it77 >= 0 /\ 2-i1 >= 0 /\ 1+i6-2*it77+i4-2*i5 >= 0) /\ i1'=i1, i3'=i3+it77, i5'=it77+i5
	New rule:
	(-2+i1 >= 0 /\ -1+it77 >= 0 /\ 2-i1 >= 0 /\ 1+i6-2*it77+i4-2*i5 >= 0) /\ i3'=i3+it77, i5'=it77+i5

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f1 -> 2

Rules:
   0: (3-i4 >= 0 /\ i4 >= 0 /\ i5 >= 0 /\ 3-i5 >= 0 /\ -1+i1 == 0) /\ i1'=2, i3'=1+i3, i6'=2
   1: (-2+i1 == 0 /\ -1+i6+i4-2*i5 >= 0) /\ i1'=2, i3'=1+i3, i5'=1+i5
   2: (-2+i1 == 0 /\ -2-i6-i4+2*i5 >= 0) /\ i1'=2, i3'=1+i3, i5'=-1+i5
   3: (-2+i1 >= 0 /\ -i6-i4-2*it11+2*i5 >= 0 /\ 2-i1 >= 0 /\ -1+it11 >= 0) /\ i3'=i3+it11, i5'=-it11+i5
   4: (-2+i1 >= 0 /\ -1+it77 >= 0 /\ 2-i1 >= 0 /\ 1+i6-2*it77+i4-2*i5 >= 0) /\ i3'=i3+it77, i5'=it77+i5

Dependency graph:
0 -> 1, 0 -> 2, 0 -> 3, 0 -> 4
1 -> 1, 1 -> 4
2 -> 2, 2 -> 3
3 -> 2
4 -> 1

	Trace

	0[(3-i4 >= 0 /\ i4 >= 0 /\ i5 >= 0 /\ 3-i5 >= 0 /\ -1+i1 == 0)]
	4[(-2+i1 >= 0 /\ -1+it77 >= 0 /\ 2-i1 >= 0 /\ 1+i6-2*it77+i4-2*i5 >= 0)]
	
	Blocked

	{}
	{3[T]}
	{1[T], 4[T]}
	
Backtrack

	Trace

	0[(3-i4 >= 0 /\ i4 >= 0 /\ i5 >= 0 /\ 3-i5 >= 0 /\ -1+i1 == 0)]
	
	Blocked

	{}
	{3[T], 4[T]}
	
Step with 1

	Trace

	0[(3-i4 >= 0 /\ i4 >= 0 /\ i5 >= 0 /\ 3-i5 >= 0 /\ -1+i1 == 0)]
	1[(-2+i1 == 0 /\ -1+i6+i4-2*i5 >= 0)]
	
	Blocked

	{}
	{3[T], 4[T]}
	{}
	
Covered

	Trace

	0[(3-i4 >= 0 /\ i4 >= 0 /\ i5 >= 0 /\ 3-i5 >= 0 /\ -1+i1 == 0)]
	
	Blocked

	{}
	{1[T], 3[T], 4[T]}
	
Step with 2

	Trace

	0[(3-i4 >= 0 /\ i4 >= 0 /\ i5 >= 0 /\ 3-i5 >= 0 /\ -1+i1 == 0)]
	2[(-2+i1 == 0 /\ -2-i6-i4+2*i5 >= 0)]
	
	Blocked

	{}
	{1[T], 3[T], 4[T]}
	{}
	
Covered

	Trace

	0[(3-i4 >= 0 /\ i4 >= 0 /\ i5 >= 0 /\ 3-i5 >= 0 /\ -1+i1 == 0)]
	
	Blocked

	{}
	{1[T], 2[T], 3[T], 4[T]}
	
Backtrack

	Trace

	Blocked

	{0[T]}
	
Accept

Constant


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  
  Locations:  l0, l1
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂) → l1(X₀, X₁, 2) :|: X₀ ≤ 3 ∧ X₁ ≤ 3 ∧ 0 ≤ X₀ ∧ 0 ≤ X₁
  t₁: l1(X₀, X₁, X₂) → l1(X₀, 1+X₁, X₂) :|: 1+2⋅X₁ ≤ X₀+X₂
  t₂: l1(X₀, X₁, X₂) → l1(X₀, X₁-1, X₂) :|: 2+X₀+X₂ ≤ 2⋅X₁


Preprocessing
  Found invariant X₂ ≤ 2 ∧ X₂ ≤ 2+X₁ ∧ X₁+X₂ ≤ 5 ∧ X₂ ≤ 2+X₀ ∧ X₀+X₂ ≤ 5 ∧ 2 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ X₁ ≤ 1+X₂ ∧ 2 ≤ X₀+X₂ ∧ X₀ ≤ 1+X₂ ∧ X₁ ≤ 3 ∧ X₁ ≤ 3+X₀ ∧ X₀+X₁ ≤ 6 ∧ 0 ≤ X₁ ∧ 0 ≤ X₀+X₁ ∧ X₀ ≤ 3+X₁ ∧ X₀ ≤ 3 ∧ 0 ≤ X₀ for location l1


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  
  Locations:  l0, l1
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂) → l1(X₀, X₁, 2) :|: X₀ ≤ 3 ∧ X₁ ≤ 3 ∧ 0 ≤ X₀ ∧ 0 ≤ X₁
  t₁: l1(X₀, X₁, X₂) → l1(X₀, 1+X₁, X₂) :|: 1+2⋅X₁ ≤ X₀+X₂ ∧ X₀+X₁ ≤ 6 ∧ X₀+X₂ ≤ 5 ∧ X₁+X₂ ≤ 5 ∧ X₁ ≤ 3+X₀ ∧ X₀ ≤ 3 ∧ X₀ ≤ 3+X₁ ∧ X₁ ≤ 3 ∧ X₂ ≤ 2+X₀ ∧ X₂ ≤ 2+X₁ ∧ X₂ ≤ 2 ∧ X₀ ≤ 1+X₂ ∧ X₁ ≤ 1+X₂ ∧ 2 ≤ X₀+X₂ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₁
  t₂: l1(X₀, X₁, X₂) → l1(X₀, X₁-1, X₂) :|: 2+X₀+X₂ ≤ 2⋅X₁ ∧ X₀+X₁ ≤ 6 ∧ X₀+X₂ ≤ 5 ∧ X₁+X₂ ≤ 5 ∧ X₁ ≤ 3+X₀ ∧ X₀ ≤ 3 ∧ X₀ ≤ 3+X₁ ∧ X₁ ≤ 3 ∧ X₂ ≤ 2+X₀ ∧ X₂ ≤ 2+X₁ ∧ X₂ ≤ 2 ∧ X₀ ≤ 1+X₂ ∧ X₁ ≤ 1+X₂ ∧ 2 ≤ X₀+X₂ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₁


MPRF for transition t₁: l1(X₀, X₁, X₂) → l1(X₀, 1+X₁, X₂) :|: 1+2⋅X₁ ≤ X₀+X₂ ∧ X₀+X₁ ≤ 6 ∧ X₀+X₂ ≤ 5 ∧ X₁+X₂ ≤ 5 ∧ X₁ ≤ 3+X₀ ∧ X₀ ≤ 3 ∧ X₀ ≤ 3+X₁ ∧ X₁ ≤ 3 ∧ X₂ ≤ 2+X₀ ∧ X₂ ≤ 2+X₁ ∧ X₂ ≤ 2 ∧ X₀ ≤ 1+X₂ ∧ X₁ ≤ 1+X₂ ∧ 2 ≤ X₀+X₂ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₁ of depth 1:
  new bound:
    7 {O(1)}

  MPRF:
    • l1: [4-X₁]




MPRF for transition t₂: l1(X₀, X₁, X₂) → l1(X₀, X₁-1, X₂) :|: 2+X₀+X₂ ≤ 2⋅X₁ ∧ X₀+X₁ ≤ 6 ∧ X₀+X₂ ≤ 5 ∧ X₁+X₂ ≤ 5 ∧ X₁ ≤ 3+X₀ ∧ X₀ ≤ 3 ∧ X₀ ≤ 3+X₁ ∧ X₁ ≤ 3 ∧ X₂ ≤ 2+X₀ ∧ X₂ ≤ 2+X₁ ∧ X₂ ≤ 2 ∧ X₀ ≤ 1+X₂ ∧ X₁ ≤ 1+X₂ ∧ 2 ≤ X₀+X₂ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₂ ∧ 0 ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₁ of depth 1:
  new bound:
    4 {O(1)}

  MPRF:
    • l1: [1+X₁]




All Bounds
Timebounds
  Overall timebound:12 {O(1)}
    t₀: 1 {O(1)}
    t₁: 7 {O(1)}
    t₂: 4 {O(1)}


Costbounds
  Overall costbound: 12 {O(1)}
    t₀: 1 {O(1)}
    t₁: 7 {O(1)}
    t₂: 4 {O(1)}


Sizebounds
    t₀, X₀: 3 {O(1)}
    t₀, X₁: 3 {O(1)}
    t₀, X₂: 2 {O(1)}
    t₁, X₀: 3 {O(1)}
    t₁, X₁: 3 {O(1)}
    t₁, X₂: 2 {O(1)}
    t₂, X₀: 2 {O(1)}
    t₂, X₁: 2 {O(1)}
    t₂, X₂: 2 {O(1)}

