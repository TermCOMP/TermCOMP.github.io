WORST_CASE(?,O(1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [f300/10]
1. non_recursive  : [exit_location/1]
2. non_recursive  : [f2/6]
3. non_recursive  : [f300_loop_cont/7]
4. non_recursive  : [f1/6]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into f300/10
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into f300_loop_cont/7
4. SCC is partially evaluated into f1/6

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations f300/10 
* CE 5 is refined into CE [8] 
* CE 4 is refined into CE [9] 
* CE 3 is refined into CE [10] 
* CE 2 is refined into CE [11] 


### Cost equations --> "Loop" of f300/10 
* CEs [11] --> Loop 8 
* CEs [8] --> Loop 9 
* CEs [10] --> Loop 10 
* CEs [9] --> Loop 11 

### Ranking functions of CR f300(A,B,C,D,E,F,G,H,I,J) 
* RF of phase [8]: [A-100]

#### Partial ranking functions of CR f300(A,B,C,D,E,F,G,H,I,J) 
* Partial RF of phase [8]:
  - RF of loop [8:1]:
    A-100


### Specialization of cost equations f300_loop_cont/7 
* CE 7 is refined into CE [12] 
* CE 6 is refined into CE [13] 


### Cost equations --> "Loop" of f300_loop_cont/7 
* CEs [12] --> Loop 12 
* CEs [13] --> Loop 13 

### Ranking functions of CR f300_loop_cont(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR f300_loop_cont(A,B,C,D,E,F,G) 


### Specialization of cost equations f1/6 
* CE 1 is refined into CE [14,15,16,17] 


### Cost equations --> "Loop" of f1/6 
* CEs [14] --> Loop 14 
* CEs [15,17] --> Loop 15 
* CEs [16] --> Loop 16 

### Ranking functions of CR f1(A,B,C,D,E,F) 

#### Partial ranking functions of CR f1(A,B,C,D,E,F) 


Computing Bounds
=====================================

#### Cost of chains of f300(A,B,C,D,E,F,G,H,I,J):
* Chain [[8],10]: 1*it(8)+0
  Such that:it(8) =< A

  with precondition: [F=2,G=100,H=0,I=0,J=0,1000>=A,9>=B,A>=101] 

* Chain [[8],9]: 1*it(8)+0
  Such that:it(8) =< A

  with precondition: [F=3,1000>=A,9>=B,A>=101] 

* Chain [11]: 0
  with precondition: [A=1000,F=2,G=1000,H=0,I=0,J=0,B>=10] 

* Chain [9]: 0
  with precondition: [F=3,1000>=A] 


#### Cost of chains of f300_loop_cont(A,B,C,D,E,F,G):
* Chain [13]: 0
  with precondition: [A=2] 

* Chain [12]: 0
  with precondition: [A=3] 


#### Cost of chains of f1(A,B,C,D,E,F):
* Chain [16]: 0
  with precondition: [] 

* Chain [15]: 2000
  with precondition: [9>=B] 

* Chain [14]: 0
  with precondition: [B>=10] 


Closed-form bounds of f1(A,B,C,D,E,F): 
-------------------------------------
* Chain [16] with precondition: [] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [15] with precondition: [9>=B] 
    - Upper bound: 2000 
    - Complexity: constant 
* Chain [14] with precondition: [B>=10] 
    - Upper bound: 0 
    - Complexity: constant 

### Maximum cost of f1(A,B,C,D,E,F): 2000 
Asymptotic class: constant 
* Total analysis performed in 40 ms.

