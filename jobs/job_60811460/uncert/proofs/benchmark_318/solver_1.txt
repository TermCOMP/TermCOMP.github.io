NO

# LoAT Proof:
NO

NO

Initial ITS

Start location: f30

Location map:
LoAT_sink -> 0
f30 -> 1
f4 -> 2
f5 -> 3
f3 -> 4

Rules:
   0: (-2+i1 == 0 /\ -2+i4 >= 0) /\ i1'=3, i3'=1+i3, i5'=1
   1: (1-i4 >= 0 /\ -2+i1 == 0) /\ i1'=3, i3'=1+i3, i5'=0
   2: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=2, i6'=2, i7'=it2
   3: (-3+i1 == 0 /\ -it3 >= 0 /\ -1+it3 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i7'=it3
   4: (-3+i1 == 0 /\ -1+it4 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i7'=it4
   5: (-3+i1 == 0 /\ -i5 >= 0) /\ i1'=4, i3'=1+i3, i8'=0

Dependency graph:
0 -> 3, 0 -> 4, 0 -> 5
1 -> 3, 1 -> 4, 1 -> 5
2 -> 0, 2 -> 1
3 -> 0, 3 -> 1
4 -> 0, 4 -> 1

Refined Dependency Graph

	Removed the following edges: 0 -> 3, 0 -> 5, 1 -> 3, 2 -> 1, 3 -> 0, 3 -> 1

Start location: f30

Location map:
LoAT_sink -> 0
f30 -> 1
f4 -> 2
f5 -> 3
f3 -> 4

Rules:
   0: (-2+i1 == 0 /\ -2+i4 >= 0) /\ i1'=3, i3'=1+i3, i5'=1
   1: (1-i4 >= 0 /\ -2+i1 == 0) /\ i1'=3, i3'=1+i3, i5'=0
   2: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=2, i6'=2, i7'=it2
   3: (-3+i1 == 0 /\ -it3 >= 0 /\ -1+it3 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i7'=it3
   4: (-3+i1 == 0 /\ -1+it4 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i7'=it4
   5: (-3+i1 == 0 /\ -i5 >= 0) /\ i1'=4, i3'=1+i3, i8'=0

Dependency graph:
0 -> 4
1 -> 4, 1 -> 5
2 -> 0
4 -> 0, 4 -> 1

Step with 2

	Trace

	2[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 0

	Trace

	2[(-1+i1 == 0)]
	0[(-2+i1 == 0 /\ -2+i4 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Step with 4

	Trace

	2[(-1+i1 == 0)]
	0[(-2+i1 == 0 /\ -2+i4 >= 0)]
	4[(-3+i1 == 0 /\ -1+it4 >= 0)]
	
	Blocked

	{}
	{}
	{}
	{}
	
Nonterm

	Certificate of Non-Termination

	Original rule:
	(-1+it4 >= 0 /\ -2+i1 == 0 /\ -2+i4 >= 0) /\ i1'=2, i3'=2+i3, i4'=1+i4, i5'=1, i7'=it4
	New rule:
	(-1+it4 >= 0 /\ -2+i1 >= 0 /\ -1+it28 >= 0 /\ 2-i1 >= 0 /\ -2+i4 >= 0) /\ i1'=0

		-1+it4 >= 0 [0]: unchanged
		
		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		-2+i4 >= 0 [0]: monotonic increase yields -2+i4 >= 0
		
		Replacement map: {-1+it4 >= 0 -> -1+it4 >= 0, -2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0, -2+i4 >= 0 -> -2+i4 >= 0}

		Simplified Guard

		Original rule:
		(0 == 0 /\ -1+it4 >= 0 /\ -2+i1 == 0 /\ -2+i4 >= 0) /\ i1'=2, i3'=2+i3, i4'=1+i4, i5'=1, i7'=it4
		New rule:
		(-1+it4 >= 0 /\ -2+i1 == 0 /\ -2+i4 >= 0) /\ i1'=2, i3'=2+i3, i4'=1+i4, i5'=1, i7'=it4

	Loop Acceleration

	Original rule:
	(-1+it4 >= 0 /\ -2+i1 == 0 /\ -2+i4 >= 0) /\ i1'=2, i3'=2+i3, i4'=1+i4, i5'=1, i7'=it4
	New rule:
	(-1+it4 >= 0 /\ -2+i1 >= 0 /\ -1+it28 >= 0 /\ 2-i1 >= 0 /\ -2+i4 >= 0) /\ i1'=i1, i3'=i3+2*it28, i4'=it28+i4, i5'=1, i7'=it4

		-1+it4 >= 0 [0]: unchanged
		
		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		-2+i4 >= 0 [0]: monotonic increase yields -2+i4 >= 0
		
		Replacement map: {-1+it4 >= 0 -> -1+it4 >= 0, -2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0, -2+i4 >= 0 -> -2+i4 >= 0}

	Removed Trivial Updates

	Original rule:
	(-1+it4 >= 0 /\ -2+i1 >= 0 /\ -1+it28 >= 0 /\ 2-i1 >= 0 /\ -2+i4 >= 0) /\ i1'=i1, i3'=i3+2*it28, i4'=it28+i4, i5'=1, i7'=it4
	New rule:
	(-1+it4 >= 0 /\ -2+i1 >= 0 /\ -1+it28 >= 0 /\ 2-i1 >= 0 /\ -2+i4 >= 0) /\ i3'=i3+2*it28, i4'=it28+i4, i5'=1, i7'=it4

Start location: f30

Location map:
LoAT_sink -> 0
f30 -> 1
f4 -> 2
f5 -> 3
f3 -> 4

Rules:
   0: (-2+i1 == 0 /\ -2+i4 >= 0) /\ i1'=3, i3'=1+i3, i5'=1
   1: (1-i4 >= 0 /\ -2+i1 == 0) /\ i1'=3, i3'=1+i3, i5'=0
   2: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=2, i6'=2, i7'=it2
   3: (-3+i1 == 0 /\ -it3 >= 0 /\ -1+it3 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4, i7'=it3
   4: (-3+i1 == 0 /\ -1+it4 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i7'=it4
   5: (-3+i1 == 0 /\ -i5 >= 0) /\ i1'=4, i3'=1+i3, i8'=0
   6: (-1+it4 >= 0 /\ -2+i1 >= 0 /\ -1+it28 >= 0 /\ 2-i1 >= 0 /\ -2+i4 >= 0) /\ i1'=0
   7: (-1+it4 >= 0 /\ -2+i1 >= 0 /\ -1+it28 >= 0 /\ 2-i1 >= 0 /\ -2+i4 >= 0) /\ i3'=i3+2*it28, i4'=it28+i4, i5'=1, i7'=it4

Dependency graph:
0 -> 4
1 -> 4, 1 -> 5
2 -> 0, 2 -> 6, 2 -> 7
4 -> 0, 4 -> 1, 4 -> 6, 4 -> 7
7 -> 0, 7 -> 1, 7 -> 6

Step with 6

	Trace

	2[(-1+i1 == 0)]
	6[(-1+it4 >= 0 /\ -2+i1 >= 0 /\ -1+it28 >= 0 /\ 2-i1 >= 0 /\ -2+i4 >= 0)]
	
	Blocked

	{}
	{}
	{6[T]}
	
Refute

	Counterexample

	(i1=1, i3=-1, i5=0, i8=0)
	-2-> (i1=2, i3=0, i4=2, i5=0, i6=2, i7=0, i8=0 )
	-6-> ( )
	
NO

Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
MAYBE


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄
  Temp_Vars:  F
  Locations:  l0, l1, l2, l3
  Return Locations:  
  Transitions:
  t₂: l0(X₀, X₁, X₂, X₃, X₄) → l3(2, X₁, 2, F, X₄)
  t₅: l1(X₀, X₁, X₂, X₃, X₄) → l2(X₀, X₁, X₂, X₃, 0) :|: X₁ ≤ 0
  t₃: l1(X₀, X₁, X₂, X₃, X₄) → l3(X₀-1, X₁, X₂, F, X₄) :|: 1 ≤ F ∧ F ≤ 0
  t₄: l1(X₀, X₁, X₂, X₃, X₄) → l3(1+X₀, X₁, X₂, F, X₄) :|: 1 ≤ F
  t₀: l3(X₀, X₁, X₂, X₃, X₄) → l1(X₀, 1, X₂, X₃, X₄) :|: 2 ≤ X₀
  t₁: l3(X₀, X₁, X₂, X₃, X₄) → l1(X₀, 0, X₂, X₃, X₄) :|: X₀ ≤ 1


Preprocessing
  Cut unsatisfiable transition [t₃: l1→l3]


  Eliminate variables [X₂; X₃; X₄] that do not contribute to the problem


  Found invariant X₁ ≤ 1 ∧ 1+X₁ ≤ X₀ ∧ 1 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 2 ≤ X₀ for location l1


  Found invariant 1 ≤ 0 for location l2


  Found invariant 2 ≤ X₀ for location l3


  Cut unsatisfiable transition [t₇: l1→l2; t₁₀: l3→l1]


  Cut unreachable locations [l2] from the program graph


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁
  Temp_Vars:  F
  Locations:  l0, l1, l3
  Return Locations:  
  Transitions:
  t₆: l0(X₀, X₁) → l3(2, X₁)
  t₈: l1(X₀, X₁) → l3(1+X₀, X₁) :|: 1 ≤ F ∧ X₁ ≤ 1 ∧ 1+X₁ ≤ X₀ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀ ∧ 3 ≤ X₀+X₁
  t₉: l3(X₀, X₁) → l1(X₀, 1) :|: 2 ≤ X₀


  Found invariant X₁ ≤ 1 ∧ 2+X₁ ≤ X₀ ∧ 1 ≤ X₁ ∧ 4 ≤ X₀+X₁ ∧ 3 ≤ X₀ for location l1_v2


  Found invariant X₁ ≤ 1 ∧ 1+X₁ ≤ X₀ ∧ X₀+X₁ ≤ 3 ∧ 1 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ X₀ ≤ 1+X₁ ∧ X₀ ≤ 2 ∧ 2 ≤ X₀ for location l1_v1


  Found invariant X₀ ≤ 2 ∧ 2 ≤ X₀ for location l3


  Found invariant X₁ ≤ 1 ∧ 2+X₁ ≤ X₀ ∧ 1 ≤ X₁ ∧ 4 ≤ X₀+X₁ ∧ 3 ≤ X₀ for location l3_v1


All Bounds
Timebounds
  Overall timebound:inf {Infinity}
    t₆: 1 {O(1)}
    t₈: inf {Infinity}
    t₉: inf {Infinity}


Costbounds
  Overall costbound: inf {Infinity}
    t₆: 1 {O(1)}
    t₈: inf {Infinity}
    t₉: inf {Infinity}


Sizebounds
    t₆, X₀: 2 {O(1)}
    t₆, X₁: X₁ {O(n)}
    t₈, X₁: 1 {O(1)}
    t₉, X₁: 1 {O(1)}

