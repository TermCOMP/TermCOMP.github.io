NO

# LoAT Proof:
NO

WORST_CASE(Omega(n^1),?)
NO

Initial ITS

Start location: f5

Location map:
LoAT_sink -> 0
f5 -> 1
f300 -> 2
f4 -> 3
f2 -> 4
f1 -> 5

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=2, i3'=1+i3, i6'=1+i6
   2: (-3+i1 == 0 /\ -1+it2 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=1+i3, i4'=1+i4, i7'=it2
   3: (-3+i1 == 0 /\ -1-it3 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=1+i3, i4'=1+i4, i7'=it3
   4: (-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=4, i3'=1+i3, i7'=0
   5: (-1+it4 >= 0 /\ -4+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=1+i3, i4'=1+i4, i7'=it4
   6: (-1-it5 >= 0 /\ -4+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=1+i3, i4'=1+i4, i7'=it5
   7: (-4+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=4, i3'=1+i3, i7'=0
   8: (-2+i1 == 0 /\ i6-i4 >= 0) /\ i1'=5, i3'=1+i3, i8'=it6
   9: (-2+i1 == 0 /\ i4-i5 >= 0 /\ -1-i6+i4 >= 0) /\ i1'=2, i3'=1+i3, i6'=1+i6
  10: (-1+it7 >= 0 /\ -2+i1 == 0 /\ -1-i6+i4 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=1+i3, i4'=1+i4, i7'=it7
  11: (-2+i1 == 0 /\ -1-it8 >= 0 /\ -1-i6+i4 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=1+i3, i4'=1+i4, i7'=it8
  12: (-2+i1 == 0 /\ -1-i6+i4 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=4, i3'=1+i3, i7'=0

Dependency graph:
0 -> 8, 0 -> 9, 0 -> 10, 0 -> 11, 0 -> 12
1 -> 8, 1 -> 9, 1 -> 10, 1 -> 11, 1 -> 12
2 -> 1, 2 -> 2, 2 -> 3, 2 -> 4
3 -> 1, 3 -> 2, 3 -> 3, 3 -> 4
4 -> 5, 4 -> 6, 4 -> 7
5 -> 1, 5 -> 2, 5 -> 3, 5 -> 4
6 -> 1, 6 -> 2, 6 -> 3, 6 -> 4
7 -> 5, 7 -> 6, 7 -> 7
9 -> 8, 9 -> 9, 9 -> 10, 9 -> 11, 9 -> 12
10 -> 1, 10 -> 2, 10 -> 3, 10 -> 4
11 -> 1, 11 -> 2, 11 -> 3, 11 -> 4
12 -> 5, 12 -> 6, 12 -> 7

Refined Dependency Graph

	Removed the following edges: 1 -> 10, 1 -> 11, 1 -> 12, 9 -> 10, 9 -> 11, 9 -> 12

Start location: f5

Location map:
LoAT_sink -> 0
f5 -> 1
f300 -> 2
f4 -> 3
f2 -> 4
f1 -> 5

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=2, i3'=1+i3, i6'=1+i6
   2: (-3+i1 == 0 /\ -1+it2 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=1+i3, i4'=1+i4, i7'=it2
   3: (-3+i1 == 0 /\ -1-it3 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=1+i3, i4'=1+i4, i7'=it3
   4: (-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=4, i3'=1+i3, i7'=0
   5: (-1+it4 >= 0 /\ -4+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=1+i3, i4'=1+i4, i7'=it4
   6: (-1-it5 >= 0 /\ -4+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=1+i3, i4'=1+i4, i7'=it5
   7: (-4+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=4, i3'=1+i3, i7'=0
   8: (-2+i1 == 0 /\ i6-i4 >= 0) /\ i1'=5, i3'=1+i3, i8'=it6
   9: (-2+i1 == 0 /\ i4-i5 >= 0 /\ -1-i6+i4 >= 0) /\ i1'=2, i3'=1+i3, i6'=1+i6
  10: (-1+it7 >= 0 /\ -2+i1 == 0 /\ -1-i6+i4 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=1+i3, i4'=1+i4, i7'=it7
  11: (-2+i1 == 0 /\ -1-it8 >= 0 /\ -1-i6+i4 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=1+i3, i4'=1+i4, i7'=it8
  12: (-2+i1 == 0 /\ -1-i6+i4 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=4, i3'=1+i3, i7'=0

Dependency graph:
0 -> 8, 0 -> 9, 0 -> 10, 0 -> 11, 0 -> 12
1 -> 8, 1 -> 9
2 -> 1, 2 -> 2, 2 -> 3, 2 -> 4
3 -> 1, 3 -> 2, 3 -> 3, 3 -> 4
4 -> 5, 4 -> 6, 4 -> 7
5 -> 1, 5 -> 2, 5 -> 3, 5 -> 4
6 -> 1, 6 -> 2, 6 -> 3, 6 -> 4
7 -> 5, 7 -> 6, 7 -> 7
9 -> 8, 9 -> 9
10 -> 1, 10 -> 2, 10 -> 3, 10 -> 4
11 -> 1, 11 -> 2, 11 -> 3, 11 -> 4
12 -> 5, 12 -> 6, 12 -> 7

Step with 0

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 11

	Trace

	0[(-1+i1 == 0)]
	11[(-2+i1 == 0 /\ -1-it8 >= 0 /\ -1-i6+i4 >= 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	11[(-2+i1 == 0 /\ -1-it8 >= 0 /\ -1-i6+i4 >= 0 /\ -1-i4+i5 >= 0)]
	1[(-3+i1 == 0 /\ i4-i5 >= 0)]
	
	Blocked

	{}
	{}
	{}
	{}
	
Step with 9

	Trace

	0[(-1+i1 == 0)]
	11[(-2+i1 == 0 /\ -1-it8 >= 0 /\ -1-i6+i4 >= 0 /\ -1-i4+i5 >= 0)]
	1[(-3+i1 == 0 /\ i4-i5 >= 0)]
	9[(-2+i1 == 0 /\ i4-i5 >= 0 /\ -1-i6+i4 >= 0)]
	
	Blocked

	{}
	{}
	{}
	{8[T]}
	{}
	
Poly(n^1)

Accelerate

	Loop Acceleration

	Original rule:
	(-2+i1 == 0 /\ i4-i5 >= 0 /\ -1-i6+i4 >= 0) /\ i1'=2, i3'=1+i3, i6'=1+i6
	New rule:
	(-2+i1 >= 0 /\ -i6-it40+i4 >= 0 /\ i4-i5 >= 0 /\ -1+it40 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it40, i6'=i6+it40

		-2+i1 >= 0 [0]: unchanged
		
		i4-i5 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		-1-i6+i4 >= 0 [0]: montonic decrease yields -i6-it40+i4 >= 0
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, i4-i5 >= 0 -> i4-i5 >= 0, 2-i1 >= 0 -> 2-i1 >= 0, -1-i6+i4 >= 0 -> -i6-it40+i4 >= 0}

	Removed Trivial Updates

	Original rule:
	(-2+i1 >= 0 /\ -i6-it40+i4 >= 0 /\ i4-i5 >= 0 /\ -1+it40 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it40, i6'=i6+it40
	New rule:
	(-2+i1 >= 0 /\ -i6-it40+i4 >= 0 /\ i4-i5 >= 0 /\ -1+it40 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+it40, i6'=i6+it40
	
	Instantiation

	Original rule:
	(-2+i1 >= 0 /\ -i6-it40+i4 >= 0 /\ i4-i5 >= 0 /\ -1+it40 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+it40, i6'=i6+it40
	New rule:
	(0 >= 0 /\ -2+i1 >= 0 /\ i4-i5 >= 0 /\ 2-i1 >= 0 /\ -1-i6+i4 >= 0) /\ i3'=-i6+i3+i4, i6'=i4

Start location: f5

Location map:
LoAT_sink -> 0
f5 -> 1
f300 -> 2
f4 -> 3
f2 -> 4
f1 -> 5

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=2, i3'=1+i3, i6'=1+i6
   2: (-3+i1 == 0 /\ -1+it2 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=1+i3, i4'=1+i4, i7'=it2
   3: (-3+i1 == 0 /\ -1-it3 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=1+i3, i4'=1+i4, i7'=it3
   4: (-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=4, i3'=1+i3, i7'=0
   5: (-1+it4 >= 0 /\ -4+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=1+i3, i4'=1+i4, i7'=it4
   6: (-1-it5 >= 0 /\ -4+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=1+i3, i4'=1+i4, i7'=it5
   7: (-4+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=4, i3'=1+i3, i7'=0
   8: (-2+i1 == 0 /\ i6-i4 >= 0) /\ i1'=5, i3'=1+i3, i8'=it6
   9: (-2+i1 == 0 /\ i4-i5 >= 0 /\ -1-i6+i4 >= 0) /\ i1'=2, i3'=1+i3, i6'=1+i6
  10: (-1+it7 >= 0 /\ -2+i1 == 0 /\ -1-i6+i4 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=1+i3, i4'=1+i4, i7'=it7
  11: (-2+i1 == 0 /\ -1-it8 >= 0 /\ -1-i6+i4 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=1+i3, i4'=1+i4, i7'=it8
  12: (-2+i1 == 0 /\ -1-i6+i4 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=4, i3'=1+i3, i7'=0
  13: (0 >= 0 /\ -2+i1 >= 0 /\ i4-i5 >= 0 /\ 2-i1 >= 0 /\ -1-i6+i4 >= 0) /\ i3'=-i6+i3+i4, i6'=i4

Dependency graph:
0 -> 8, 0 -> 9, 0 -> 10, 0 -> 11, 0 -> 12, 0 -> 13
1 -> 8, 1 -> 9, 1 -> 13
2 -> 1, 2 -> 2, 2 -> 3, 2 -> 4
3 -> 1, 3 -> 2, 3 -> 3, 3 -> 4
4 -> 5, 4 -> 6, 4 -> 7
5 -> 1, 5 -> 2, 5 -> 3, 5 -> 4
6 -> 1, 6 -> 2, 6 -> 3, 6 -> 4
7 -> 5, 7 -> 6, 7 -> 7
9 -> 8, 9 -> 9, 9 -> 13
10 -> 1, 10 -> 2, 10 -> 3, 10 -> 4
11 -> 1, 11 -> 2, 11 -> 3, 11 -> 4
12 -> 5, 12 -> 6, 12 -> 7
13 -> 8, 13 -> 9

	Trace

	0[(-1+i1 == 0)]
	11[(-2+i1 == 0 /\ -1-it8 >= 0 /\ -1-i6+i4 >= 0 /\ -1-i4+i5 >= 0)]
	1[(-3+i1 == 0 /\ i4-i5 >= 0)]
	13[(0 >= 0 /\ -2+i1 >= 0 /\ i4-i5 >= 0 /\ 2-i1 >= 0 /\ -1-i6+i4 >= 0)]
	
	Blocked

	{}
	{}
	{}
	{8[T]}
	{9[T], 13[T]}
	
Step with 8

	Trace

	0[(-1+i1 == 0)]
	11[(-2+i1 == 0 /\ -1-it8 >= 0 /\ -1-i6+i4 >= 0 /\ -1-i4+i5 >= 0)]
	1[(-3+i1 == 0 /\ i4-i5 >= 0)]
	13[(0 >= 0 /\ -2+i1 >= 0 /\ i4-i5 >= 0 /\ 2-i1 >= 0 /\ -1-i6+i4 >= 0)]
	8[(-2+i1 == 0 /\ i6-i4 >= 0)]
	
	Blocked

	{}
	{}
	{}
	{8[T]}
	{9[T], 13[T]}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	11[(-2+i1 == 0 /\ -1-it8 >= 0 /\ -1-i6+i4 >= 0 /\ -1-i4+i5 >= 0)]
	1[(-3+i1 == 0 /\ i4-i5 >= 0)]
	13[(0 >= 0 /\ -2+i1 >= 0 /\ i4-i5 >= 0 /\ 2-i1 >= 0 /\ -1-i6+i4 >= 0)]
	
	Blocked

	{}
	{}
	{}
	{8[T]}
	{8[T], 9[T], 13[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	11[(-2+i1 == 0 /\ -1-it8 >= 0 /\ -1-i6+i4 >= 0 /\ -1-i4+i5 >= 0)]
	1[(-3+i1 == 0 /\ i4-i5 >= 0)]
	
	Blocked

	{}
	{}
	{}
	{8[T], 13[T]}
	
Step with 9

	Trace

	0[(-1+i1 == 0)]
	11[(-2+i1 == 0 /\ -1-it8 >= 0 /\ -1-i6+i4 >= 0 /\ -1-i4+i5 >= 0)]
	1[(-3+i1 == 0 /\ i4-i5 >= 0)]
	9[(-2+i1 == 0 /\ i4-i5 >= 0 /\ -1-i6+i4 >= 0)]
	
	Blocked

	{}
	{}
	{}
	{8[T], 13[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	11[(-2+i1 == 0 /\ -1-it8 >= 0 /\ -1-i6+i4 >= 0 /\ -1-i4+i5 >= 0)]
	1[(-3+i1 == 0 /\ i4-i5 >= 0)]
	
	Blocked

	{}
	{}
	{}
	{8[T], 9[T], 13[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	11[(-2+i1 == 0 /\ -1-it8 >= 0 /\ -1-i6+i4 >= 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{}
	{1[T]}
	
Step with 4

	Trace

	0[(-1+i1 == 0)]
	11[(-2+i1 == 0 /\ -1-it8 >= 0 /\ -1-i6+i4 >= 0 /\ -1-i4+i5 >= 0)]
	4[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{}
	{1[T]}
	{}
	
Step with 7

	Trace

	0[(-1+i1 == 0)]
	11[(-2+i1 == 0 /\ -1-it8 >= 0 /\ -1-i6+i4 >= 0 /\ -1-i4+i5 >= 0)]
	4[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	7[(-4+i1 == 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{}
	{1[T]}
	{}
	{}
	
Nonterm

	Certificate of Non-Termination

	Original rule:
	(-4+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=4, i3'=1+i3, i7'=0
	New rule:
	(-4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-i4+i5 >= 0 /\ -1+it89 >= 0) /\ i1'=0

		-4+i1 >= 0 [0]: unchanged
		
		4-i1 >= 0 [0]: unchanged
		
		-1-i4+i5 >= 0 [0]: unchanged
		
		Replacement map: {-4+i1 >= 0 -> -4+i1 >= 0, 4-i1 >= 0 -> 4-i1 >= 0, -1-i4+i5 >= 0 -> -1-i4+i5 >= 0}

	Loop Acceleration

	Original rule:
	(-4+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=4, i3'=1+i3, i7'=0
	New rule:
	(-4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-i4+i5 >= 0 /\ -1+it89 >= 0) /\ i1'=i1, i3'=it89+i3, i7'=0

		-4+i1 >= 0 [0]: unchanged
		
		4-i1 >= 0 [0]: unchanged
		
		-1-i4+i5 >= 0 [0]: unchanged
		
		Replacement map: {-4+i1 >= 0 -> -4+i1 >= 0, 4-i1 >= 0 -> 4-i1 >= 0, -1-i4+i5 >= 0 -> -1-i4+i5 >= 0}

	Removed Trivial Updates

	Original rule:
	(-4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-i4+i5 >= 0 /\ -1+it89 >= 0) /\ i1'=i1, i3'=it89+i3, i7'=0
	New rule:
	(-4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-i4+i5 >= 0 /\ -1+it89 >= 0) /\ i3'=it89+i3, i7'=0

Start location: f5

Location map:
LoAT_sink -> 0
f5 -> 1
f300 -> 2
f4 -> 3
f2 -> 4
f1 -> 5

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-3+i1 == 0 /\ i4-i5 >= 0) /\ i1'=2, i3'=1+i3, i6'=1+i6
   2: (-3+i1 == 0 /\ -1+it2 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=1+i3, i4'=1+i4, i7'=it2
   3: (-3+i1 == 0 /\ -1-it3 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=1+i3, i4'=1+i4, i7'=it3
   4: (-3+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=4, i3'=1+i3, i7'=0
   5: (-1+it4 >= 0 /\ -4+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=1+i3, i4'=1+i4, i7'=it4
   6: (-1-it5 >= 0 /\ -4+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=1+i3, i4'=1+i4, i7'=it5
   7: (-4+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=4, i3'=1+i3, i7'=0
   8: (-2+i1 == 0 /\ i6-i4 >= 0) /\ i1'=5, i3'=1+i3, i8'=it6
   9: (-2+i1 == 0 /\ i4-i5 >= 0 /\ -1-i6+i4 >= 0) /\ i1'=2, i3'=1+i3, i6'=1+i6
  10: (-1+it7 >= 0 /\ -2+i1 == 0 /\ -1-i6+i4 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=1+i3, i4'=1+i4, i7'=it7
  11: (-2+i1 == 0 /\ -1-it8 >= 0 /\ -1-i6+i4 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=1+i3, i4'=1+i4, i7'=it8
  12: (-2+i1 == 0 /\ -1-i6+i4 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=4, i3'=1+i3, i7'=0
  13: (0 >= 0 /\ -2+i1 >= 0 /\ i4-i5 >= 0 /\ 2-i1 >= 0 /\ -1-i6+i4 >= 0) /\ i3'=-i6+i3+i4, i6'=i4
  14: (-4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-i4+i5 >= 0 /\ -1+it89 >= 0) /\ i1'=0
  15: (-4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-i4+i5 >= 0 /\ -1+it89 >= 0) /\ i3'=it89+i3, i7'=0

Dependency graph:
0 -> 8, 0 -> 9, 0 -> 10, 0 -> 11, 0 -> 12, 0 -> 13
1 -> 8, 1 -> 9, 1 -> 13
2 -> 1, 2 -> 2, 2 -> 3, 2 -> 4
3 -> 1, 3 -> 2, 3 -> 3, 3 -> 4
4 -> 5, 4 -> 6, 4 -> 7, 4 -> 14, 4 -> 15
5 -> 1, 5 -> 2, 5 -> 3, 5 -> 4
6 -> 1, 6 -> 2, 6 -> 3, 6 -> 4
7 -> 5, 7 -> 6, 7 -> 7, 7 -> 14, 7 -> 15
9 -> 8, 9 -> 9, 9 -> 13
10 -> 1, 10 -> 2, 10 -> 3, 10 -> 4
11 -> 1, 11 -> 2, 11 -> 3, 11 -> 4
12 -> 5, 12 -> 6, 12 -> 7, 12 -> 14, 12 -> 15
13 -> 8, 13 -> 9
15 -> 5, 15 -> 6, 15 -> 7, 15 -> 14

Step with 14

	Trace

	0[(-1+i1 == 0)]
	11[(-2+i1 == 0 /\ -1-it8 >= 0 /\ -1-i6+i4 >= 0 /\ -1-i4+i5 >= 0)]
	4[(-3+i1 == 0 /\ -1-i4+i5 >= 0)]
	14[(-4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-i4+i5 >= 0 /\ -1+it89 >= 0)]
	
	Blocked

	{}
	{}
	{1[T]}
	{}
	{14[T]}
	
Refute

	Counterexample

	(i1=1, i3=-1, i4=-2, i5=0, i6=-3, i7=0, i8=0)
	-0-> (i1=2, i3=0, i4=-2, i5=0, i6=-3, i7=0, i8=0 )
	-11-> (i1=3, i3=1, i4=-1, i5=0, i6=-3, i7=-1, i8=0 )
	-4-> (i1=4, i3=2, i4=-1, i5=0, i6=-3, i7=0, i8=0 )
	-14-> ( )
	
NO

Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
MAYBE


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄
  Temp_Vars:  F
  Locations:  l0, l1, l2, l3, l4
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃, X₄) → l1(X₀, X₁, X₂, X₃, X₄)
  t₉: l1(X₀, X₁, X₂, X₃, X₄) → l1(X₀, X₁, 1+X₂, X₃, X₄) :|: 1+X₂ ≤ X₀ ∧ X₁ ≤ X₀
  t₈: l1(X₀, X₁, X₂, X₃, X₄) → l2(X₀, X₁, X₂, X₃, F) :|: X₀ ≤ X₂
  t₁₂: l1(X₀, X₁, X₂, X₃, X₄) → l3(X₀, X₁, X₂, 0, X₄) :|: 1+X₂ ≤ X₀ ∧ 1+X₀ ≤ X₁
  t₁₀: l1(X₀, X₁, X₂, X₃, X₄) → l4(1+X₀, X₁, X₂, F, X₄) :|: 1 ≤ F ∧ 1+X₂ ≤ X₀ ∧ 1+X₀ ≤ X₁
  t₁₁: l1(X₀, X₁, X₂, X₃, X₄) → l4(1+X₀, X₁, X₂, F, X₄) :|: 1+F ≤ 0 ∧ 1+X₂ ≤ X₀ ∧ 1+X₀ ≤ X₁
  t₇: l3(X₀, X₁, X₂, X₃, X₄) → l3(X₀, X₁, X₂, 0, X₄) :|: 1+X₀ ≤ X₁
  t₅: l3(X₀, X₁, X₂, X₃, X₄) → l4(1+X₀, X₁, X₂, F, X₄) :|: 1 ≤ F ∧ 1+X₀ ≤ X₁
  t₆: l3(X₀, X₁, X₂, X₃, X₄) → l4(1+X₀, X₁, X₂, F, X₄) :|: 1+F ≤ 0 ∧ 1+X₀ ≤ X₁
  t₁: l4(X₀, X₁, X₂, X₃, X₄) → l1(X₀, X₁, 1+X₂, X₃, X₄) :|: X₁ ≤ X₀
  t₄: l4(X₀, X₁, X₂, X₃, X₄) → l3(X₀, X₁, X₂, 0, X₄) :|: 1+X₀ ≤ X₁
  t₂: l4(X₀, X₁, X₂, X₃, X₄) → l4(1+X₀, X₁, X₂, F, X₄) :|: 1 ≤ F ∧ 1+X₀ ≤ X₁
  t₃: l4(X₀, X₁, X₂, X₃, X₄) → l4(1+X₀, X₁, X₂, F, X₄) :|: 1+F ≤ 0 ∧ 1+X₀ ≤ X₁


Preprocessing
  Eliminate variables [X₃; X₄] that do not contribute to the problem


  Found invariant X₀ ≤ X₂ for location l2


  Found invariant 2+X₂ ≤ X₁ ∧ 2+X₂ ≤ X₀ ∧ X₀ ≤ X₁ for location l4


  Found invariant 2+X₂ ≤ X₁ ∧ 1+X₂ ≤ X₀ ∧ 1+X₀ ≤ X₁ for location l3


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  F
  Locations:  l0, l1, l2, l3, l4
  Return Locations:  
  Transitions:
  t₁₃: l0(X₀, X₁, X₂) → l1(X₀, X₁, X₂)
  t₁₄: l1(X₀, X₁, X₂) → l1(X₀, X₁, 1+X₂) :|: 1+X₂ ≤ X₀ ∧ X₁ ≤ X₀
  t₁₅: l1(X₀, X₁, X₂) → l2(X₀, X₁, X₂) :|: X₀ ≤ X₂
  t₁₆: l1(X₀, X₁, X₂) → l3(X₀, X₁, X₂) :|: 1+X₂ ≤ X₀ ∧ 1+X₀ ≤ X₁
  t₁₇: l1(X₀, X₁, X₂) → l4(1+X₀, X₁, X₂) :|: 1 ≤ F ∧ 1+X₂ ≤ X₀ ∧ 1+X₀ ≤ X₁
  t₁₈: l1(X₀, X₁, X₂) → l4(1+X₀, X₁, X₂) :|: 1+F ≤ 0 ∧ 1+X₂ ≤ X₀ ∧ 1+X₀ ≤ X₁
  t₁₉: l3(X₀, X₁, X₂) → l3(X₀, X₁, X₂) :|: 1+X₀ ≤ X₁ ∧ 1+X₂ ≤ X₀ ∧ 2+X₂ ≤ X₁
  t₂₀: l3(X₀, X₁, X₂) → l4(1+X₀, X₁, X₂) :|: 1 ≤ F ∧ 1+X₀ ≤ X₁ ∧ 1+X₂ ≤ X₀ ∧ 2+X₂ ≤ X₁
  t₂₁: l3(X₀, X₁, X₂) → l4(1+X₀, X₁, X₂) :|: 1+F ≤ 0 ∧ 1+X₀ ≤ X₁ ∧ 1+X₂ ≤ X₀ ∧ 2+X₂ ≤ X₁
  t₂₂: l4(X₀, X₁, X₂) → l1(X₀, X₁, 1+X₂) :|: X₁ ≤ X₀ ∧ 2+X₂ ≤ X₀ ∧ 2+X₂ ≤ X₁ ∧ X₀ ≤ X₁
  t₂₃: l4(X₀, X₁, X₂) → l3(X₀, X₁, X₂) :|: 1+X₀ ≤ X₁ ∧ 2+X₂ ≤ X₀ ∧ 2+X₂ ≤ X₁ ∧ X₀ ≤ X₁
  t₂₄: l4(X₀, X₁, X₂) → l4(1+X₀, X₁, X₂) :|: 1 ≤ F ∧ 1+X₀ ≤ X₁ ∧ 2+X₂ ≤ X₀ ∧ 2+X₂ ≤ X₁ ∧ X₀ ≤ X₁
  t₂₅: l4(X₀, X₁, X₂) → l4(1+X₀, X₁, X₂) :|: 1+F ≤ 0 ∧ 1+X₀ ≤ X₁ ∧ 2+X₂ ≤ X₀ ∧ 2+X₂ ≤ X₁ ∧ X₀ ≤ X₁


  knowledge_propagation leads to new time bound 1 {O(1)} for transition t₁₆: l1(X₀, X₁, X₂) → l3(X₀, X₁, X₂) :|: 1+X₂ ≤ X₀ ∧ 1+X₀ ≤ X₁


  knowledge_propagation leads to new time bound 1 {O(1)} for transition t₁₇: l1(X₀, X₁, X₂) → l4(1+X₀, X₁, X₂) :|: 1 ≤ F ∧ 1+X₂ ≤ X₀ ∧ 1+X₀ ≤ X₁


  knowledge_propagation leads to new time bound 1 {O(1)} for transition t₁₈: l1(X₀, X₁, X₂) → l4(1+X₀, X₁, X₂) :|: 1+F ≤ 0 ∧ 1+X₂ ≤ X₀ ∧ 1+X₀ ≤ X₁


MPRF for transition t₁₄: l1(X₀, X₁, X₂) → l1(X₀, X₁, 1+X₂) :|: 1+X₂ ≤ X₀ ∧ X₁ ≤ X₀ of depth 1:
  new bound:
    3⋅X₁+4⋅X₂+X₀ {O(n)}

  MPRF:
    • l1: [X₀-X₂]
    • l3: [X₁-X₂]
    • l4: [X₁-X₂]




MPRF for transition t₂₀: l3(X₀, X₁, X₂) → l4(1+X₀, X₁, X₂) :|: 1 ≤ F ∧ 1+X₀ ≤ X₁ ∧ 1+X₂ ≤ X₀ ∧ 2+X₂ ≤ X₁ of depth 1:
  new bound:
    X₀+X₁ {O(n)}

  MPRF:
    • l1: [X₁-X₀]
    • l3: [X₁-X₀]
    • l4: [X₁-X₀]




MPRF for transition t₂₁: l3(X₀, X₁, X₂) → l4(1+X₀, X₁, X₂) :|: 1+F ≤ 0 ∧ 1+X₀ ≤ X₁ ∧ 1+X₂ ≤ X₀ ∧ 2+X₂ ≤ X₁ of depth 1:
  new bound:
    X₀+X₁ {O(n)}

  MPRF:
    • l1: [X₁-X₀]
    • l3: [X₁-X₀]
    • l4: [X₁-X₀]




MPRF for transition t₂₂: l4(X₀, X₁, X₂) → l1(X₀, X₁, 1+X₂) :|: X₁ ≤ X₀ ∧ 2+X₂ ≤ X₀ ∧ 2+X₂ ≤ X₁ ∧ X₀ ≤ X₁ of depth 1:
  new bound:
    X₀+X₁ {O(n)}

  MPRF:
    • l1: [X₁-X₀]
    • l3: [1]
    • l4: [1]




MPRF for transition t₂₃: l4(X₀, X₁, X₂) → l3(X₀, X₁, X₂) :|: 1+X₀ ≤ X₁ ∧ 2+X₂ ≤ X₀ ∧ 2+X₂ ≤ X₁ ∧ X₀ ≤ X₁ of depth 1:
  new bound:
    X₀+X₁ {O(n)}

  MPRF:
    • l1: [X₁-X₀]
    • l3: [X₁-X₀]
    • l4: [1+X₁-X₀]




MPRF for transition t₂₄: l4(X₀, X₁, X₂) → l4(1+X₀, X₁, X₂) :|: 1 ≤ F ∧ 1+X₀ ≤ X₁ ∧ 2+X₂ ≤ X₀ ∧ 2+X₂ ≤ X₁ ∧ X₀ ≤ X₁ of depth 1:
  new bound:
    X₀+X₁ {O(n)}

  MPRF:
    • l1: [X₁-X₀]
    • l3: [X₁-X₀]
    • l4: [1+X₁-X₀]




MPRF for transition t₂₅: l4(X₀, X₁, X₂) → l4(1+X₀, X₁, X₂) :|: 1+F ≤ 0 ∧ 1+X₀ ≤ X₁ ∧ 2+X₂ ≤ X₀ ∧ 2+X₂ ≤ X₁ ∧ X₀ ≤ X₁ of depth 1:
  new bound:
    X₀+X₁ {O(n)}

  MPRF:
    • l1: [X₁-X₀]
    • l3: [X₁-X₀]
    • l4: [1+X₁-X₀]




  Found invariant X₀ ≤ X₂ for location l2


  Found invariant 2+X₂ ≤ X₁ ∧ 2+X₂ ≤ X₀ ∧ X₀ ≤ X₁ for location l4


  Found invariant 2+X₂ ≤ X₁ ∧ 1+X₂ ≤ X₀ ∧ 1+X₀ ≤ X₁ for location l3


  Found invariant 2+X₂ ≤ X₁ ∧ 1+X₂ ≤ X₀ ∧ 1+X₀ ≤ X₁ for location l3_v1


All Bounds
Timebounds
  Overall timebound:inf {Infinity}
    t₁₃: 1 {O(1)}
    t₁₄: 3⋅X₁+4⋅X₂+X₀ {O(n)}
    t₁₅: 1 {O(1)}
    t₁₆: 1 {O(1)}
    t₁₇: 1 {O(1)}
    t₁₈: 1 {O(1)}
    t₁₉: inf {Infinity}
    t₂₀: X₀+X₁ {O(n)}
    t₂₁: X₀+X₁ {O(n)}
    t₂₂: X₀+X₁ {O(n)}
    t₂₃: X₀+X₁ {O(n)}
    t₂₄: X₀+X₁ {O(n)}
    t₂₅: X₀+X₁ {O(n)}


Costbounds
  Overall costbound: inf {Infinity}
    t₁₃: 1 {O(1)}
    t₁₄: 3⋅X₁+4⋅X₂+X₀ {O(n)}
    t₁₅: 1 {O(1)}
    t₁₆: 1 {O(1)}
    t₁₇: 1 {O(1)}
    t₁₈: 1 {O(1)}
    t₁₉: inf {Infinity}
    t₂₀: X₀+X₁ {O(n)}
    t₂₁: X₀+X₁ {O(n)}
    t₂₂: X₀+X₁ {O(n)}
    t₂₃: X₀+X₁ {O(n)}
    t₂₄: X₀+X₁ {O(n)}
    t₂₅: X₀+X₁ {O(n)}


Sizebounds
    t₁₃, X₀: X₀ {O(n)}
    t₁₃, X₁: X₁ {O(n)}
    t₁₃, X₂: X₂ {O(n)}
    t₁₄, X₀: 16⋅X₁+31⋅X₀+10 {O(n)}
    t₁₄, X₁: 15⋅X₁ {O(n)}
    t₁₄, X₂: 19⋅X₂+3⋅X₁+X₀+6 {O(n)}
    t₁₅, X₀: 16⋅X₁+32⋅X₀+10 {O(n)}
    t₁₅, X₁: 16⋅X₁ {O(n)}
    t₁₅, X₂: 20⋅X₂+3⋅X₁+X₀+6 {O(n)}
    t₁₆, X₀: X₀ {O(n)}
    t₁₆, X₁: X₁ {O(n)}
    t₁₆, X₂: X₂ {O(n)}
    t₁₇, X₀: X₀+1 {O(n)}
    t₁₇, X₁: X₁ {O(n)}
    t₁₇, X₂: X₂ {O(n)}
    t₁₈, X₀: X₀+1 {O(n)}
    t₁₈, X₁: X₁ {O(n)}
    t₁₈, X₂: X₂ {O(n)}
    t₁₉, X₀: 4⋅X₁+7⋅X₀+2 {O(n)}
    t₁₉, X₁: 3⋅X₁ {O(n)}
    t₁₉, X₂: 3⋅X₂ {O(n)}
    t₂₀, X₀: 4⋅X₁+7⋅X₀+2 {O(n)}
    t₂₀, X₁: 3⋅X₁ {O(n)}
    t₂₀, X₂: 3⋅X₂ {O(n)}
    t₂₁, X₀: 4⋅X₁+7⋅X₀+2 {O(n)}
    t₂₁, X₁: 3⋅X₁ {O(n)}
    t₂₁, X₂: 3⋅X₂ {O(n)}
    t₂₂, X₀: 16⋅X₁+30⋅X₀+10 {O(n)}
    t₂₂, X₁: 14⋅X₁ {O(n)}
    t₂₂, X₂: 14⋅X₂+6 {O(n)}
    t₂₃, X₀: 4⋅X₁+7⋅X₀+2 {O(n)}
    t₂₃, X₁: 3⋅X₁ {O(n)}
    t₂₃, X₂: 3⋅X₂ {O(n)}
    t₂₄, X₀: 4⋅X₁+7⋅X₀+2 {O(n)}
    t₂₄, X₁: 3⋅X₁ {O(n)}
    t₂₄, X₂: 3⋅X₂ {O(n)}
    t₂₅, X₀: 4⋅X₁+7⋅X₀+2 {O(n)}
    t₂₅, X₁: 3⋅X₁ {O(n)}
    t₂₅, X₂: 3⋅X₂ {O(n)}

