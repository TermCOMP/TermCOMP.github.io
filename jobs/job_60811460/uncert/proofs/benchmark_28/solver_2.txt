MAYBE

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [evalfbb1in/4,evalfbb2in/4,evalfbb3in/4,evalfbb4in/4,evalfbbin/4]
1. non_recursive  : [evalfstop/3]
2. non_recursive  : [evalfreturnin/3]
3. non_recursive  : [exit_location/1]
4. non_recursive  : [evalfbb3in_loop_cont/4]
5. non_recursive  : [evalfentryin/3]
6. non_recursive  : [evalfstart/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into evalfbb3in/4
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into evalfbb3in_loop_cont/4
5. SCC is partially evaluated into evalfentryin/3
6. SCC is partially evaluated into evalfstart/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations evalfbb3in/4 
* CE 7 is refined into CE [10] 
* CE 3 is refined into CE [11] 
* CE 6 is refined into CE [12] 
* CE 4 is refined into CE [13] 
* CE 5 is refined into CE [14] 


### Cost equations --> "Loop" of evalfbb3in/4 
* CEs [13] --> Loop 10 
* CEs [14] --> Loop 11 
* CEs [10] --> Loop 12 
* CEs [11] --> Loop 13 
* CEs [12] --> Loop 14 

### Ranking functions of CR evalfbb3in(A,B,D,E) 

#### Partial ranking functions of CR evalfbb3in(A,B,D,E) 
* Partial RF of phase [10,11]:
  - RF of loop [10:1]:
    A depends on loops [11:1] 
    A-B+1 depends on loops [11:1] 
  - RF of loop [11:1]:
    -A+B depends on loops [10:1] 


### Specialization of cost equations evalfbb3in_loop_cont/4 
* CE 9 is refined into CE [15] 
* CE 8 is refined into CE [16] 


### Cost equations --> "Loop" of evalfbb3in_loop_cont/4 
* CEs [15] --> Loop 15 
* CEs [16] --> Loop 16 

### Ranking functions of CR evalfbb3in_loop_cont(A,B,C,D) 

#### Partial ranking functions of CR evalfbb3in_loop_cont(A,B,C,D) 


### Specialization of cost equations evalfentryin/3 
* CE 2 is refined into CE [17,18,19,20,21,22,23] 


### Cost equations --> "Loop" of evalfentryin/3 
* CEs [22,23] --> Loop 17 
* CEs [17,18,19,20,21] --> Loop 18 

### Ranking functions of CR evalfentryin(A,B,D) 

#### Partial ranking functions of CR evalfentryin(A,B,D) 


### Specialization of cost equations evalfstart/3 
* CE 1 is refined into CE [24,25] 


### Cost equations --> "Loop" of evalfstart/3 
* CEs [25] --> Loop 19 
* CEs [24] --> Loop 20 

### Ranking functions of CR evalfstart(A,B,D) 

#### Partial ranking functions of CR evalfstart(A,B,D) 


Computing Bounds
=====================================

#### Cost of chains of evalfbb3in(A,B,D,E):
* Chain [[10,11]]...: 2*it(10)+0
  with precondition: [B>=1,A>=1] 

* Chain [[10,11],14]: 2*it(10)+0
  with precondition: [D=2,E=0,A>=1,B>=1] 

* Chain [[10,11],13]: 2*it(10)+0
  with precondition: [D=2,A>=1,B>=1,E>=1,A+B>=3] 

* Chain [[10,11],12]: 2*it(10)+0
  with precondition: [D=3,A>=1,B>=1] 

* Chain [13]: 0
  with precondition: [D=2,A=E,A>=1,B>=1] 

* Chain [12]: 0
  with precondition: [D=3,B>=1] 


#### Cost of chains of evalfbb3in_loop_cont(A,B,C,D):
* Chain [16]: 0
  with precondition: [A=2,C>=1] 

* Chain [15]: 0
  with precondition: [A=3,C>=1] 


#### Cost of chains of evalfentryin(A,B,D):
* Chain [18]: 1*aux(15)+0
  with precondition: [A>=1,B>=A+1] 

* Chain [17]...: 1*aux(16)+0
  with precondition: [A>=1,B>=A+1] 


#### Cost of chains of evalfstart(A,B,D):
* Chain [20]: 1*s(6)+0
  with precondition: [A>=1,B>=A+1] 

* Chain [19]...: 1*s(7)+0
  with precondition: [A>=1,B>=A+1] 


Closed-form bounds of evalfstart(A,B,D): 
-------------------------------------
* Chain [20] with precondition: [A>=1,B>=A+1] 
    - Upper bound: inf 
    - Complexity: infinity 
* Chain [19]... with precondition: [A>=1,B>=A+1] 
    - Upper bound: inf 
    - Complexity: infinity 

### Maximum cost of evalfstart(A,B,D): inf 
Asymptotic class: infinity 
* Total analysis performed in 53 ms.

