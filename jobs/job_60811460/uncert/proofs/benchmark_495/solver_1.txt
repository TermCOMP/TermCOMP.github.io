NO

# LoAT Proof:
NO

NO

Initial ITS

Start location: f3

Location map:
LoAT_sink -> 0
f3 -> 1
f2 -> 2
f300 -> 3

Rules:
   0: (-2+i1 == 0 /\ -it3 >= 0 /\ -1-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+it4
   1: (-2+i1 == 0 /\ -2+it5 >= 0 /\ -1-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+it6
   2: (-2-it7 >= 0 /\ -1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=-1+it8
   3: (-1+i4 >= 0 /\ -2+i1 == 0 /\ it9 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+it10
   4: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   5: (-2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=3, i3'=1+i3, i4'=0, i5'=it11
   6: (-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=0, i5'=it12
   7: (-2+i1 == 0 /\ i4 == 0) /\ i1'=3, i3'=1+i3, i5'=it13

Dependency graph:
0 -> 0, 0 -> 1, 0 -> 2, 0 -> 3, 0 -> 5, 0 -> 6, 0 -> 7
1 -> 0, 1 -> 1, 1 -> 2, 1 -> 3, 1 -> 5, 1 -> 6, 1 -> 7
2 -> 0, 2 -> 1, 2 -> 2, 2 -> 3, 2 -> 5, 2 -> 6, 2 -> 7
3 -> 0, 3 -> 1, 3 -> 2, 3 -> 3, 3 -> 5, 3 -> 6, 3 -> 7
4 -> 0, 4 -> 1, 4 -> 2, 4 -> 3, 4 -> 5, 4 -> 6, 4 -> 7

Preprocessed Transitions

	Eliminated Temporary Variables

	Original rule:
	(-2+i1 == 0 /\ -it3 >= 0 /\ -1-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+it4
	New rule:
	(-2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+it4
	
	Eliminated Temporary Variables

	Original rule:
	(-2+i1 == 0 /\ -2+it5 >= 0 /\ -1-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+it6
	New rule:
	(-2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+it6
	
	Eliminated Temporary Variables

	Original rule:
	(-2-it7 >= 0 /\ -1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=-1+it8
	New rule:
	(-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=-1+it8
	
	Eliminated Temporary Variables

	Original rule:
	(-1+i4 >= 0 /\ -2+i1 == 0 /\ it9 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+it10
	New rule:
	(-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=1+it10

Start location: f3

Location map:
LoAT_sink -> 0
f3 -> 1
f2 -> 2
f300 -> 3

Rules:
   4: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   5: (-2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=3, i3'=1+i3, i4'=0, i5'=it11
   6: (-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=0, i5'=it12
   7: (-2+i1 == 0 /\ i4 == 0) /\ i1'=3, i3'=1+i3, i5'=it13
   8: (-2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+it4
   9: (-2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+it6
  10: (-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=-1+it8
  11: (-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=1+it10

Dependency graph:
4 -> 5, 4 -> 6, 4 -> 7, 4 -> 8, 4 -> 9, 4 -> 10, 4 -> 11
8 -> 5, 8 -> 6, 8 -> 7, 8 -> 8, 8 -> 9, 8 -> 10, 8 -> 11
9 -> 5, 9 -> 6, 9 -> 7, 9 -> 8, 9 -> 9, 9 -> 10, 9 -> 11
10 -> 5, 10 -> 6, 10 -> 7, 10 -> 8, 10 -> 9, 10 -> 10, 10 -> 11
11 -> 5, 11 -> 6, 11 -> 7, 11 -> 8, 11 -> 9, 11 -> 10, 11 -> 11

Step with 4

	Trace

	4[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 8

	Trace

	4[(-1+i1 == 0)]
	8[(-2+i1 == 0 /\ -1-i4 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Nonterm

	Certificate of Non-Termination

	Original rule:
	(-2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+it4
	New rule:
	(-2+i1 >= 0 /\ -1-i4+it4 <= 0 /\ 2-i1 >= 0 /\ -1-i4 >= 0) /\ i1'=0

		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		-1-i4 >= 0 [0]: eventual decrease yields (-1-i4 >= 0 /\ -it4 >= 0)
		
		-1-i4 >= 0 [1]: eventual increase yields (-1-i4+it4 <= 0 /\ -1-i4 >= 0)
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0, -1-i4 >= 0 -> (-1-i4+it4 <= 0 /\ -1-i4 >= 0)}

	Loop Acceleration

	Original rule:
	(-2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+it4
	New rule:
	(-2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+it27 >= 0 /\ -1-i4 >= 0 /\ -it4 >= 0) /\ i1'=i1, i3'=it27+i3, i4'=-1+it4

		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		-1-i4 >= 0 [0]: eventual decrease yields (-1-i4 >= 0 /\ -it4 >= 0)
		
		-1-i4 >= 0 [1]: eventual increase yields (-1-i4+it4 <= 0 /\ -1-i4 >= 0)
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0, -1-i4 >= 0 -> (-1-i4 >= 0 /\ -it4 >= 0)}

	Removed Trivial Updates

	Original rule:
	(-2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+it27 >= 0 /\ -1-i4 >= 0 /\ -it4 >= 0) /\ i1'=i1, i3'=it27+i3, i4'=-1+it4
	New rule:
	(-2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+it27 >= 0 /\ -1-i4 >= 0 /\ -it4 >= 0) /\ i3'=it27+i3, i4'=-1+it4

Start location: f3

Location map:
LoAT_sink -> 0
f3 -> 1
f2 -> 2
f300 -> 3

Rules:
   4: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   5: (-2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=3, i3'=1+i3, i4'=0, i5'=it11
   6: (-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=0, i5'=it12
   7: (-2+i1 == 0 /\ i4 == 0) /\ i1'=3, i3'=1+i3, i5'=it13
   8: (-2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+it4
   9: (-2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+it6
  10: (-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=-1+it8
  11: (-1+i4 >= 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=1+it10
  12: (-2+i1 >= 0 /\ -1-i4+it4 <= 0 /\ 2-i1 >= 0 /\ -1-i4 >= 0) /\ i1'=0
  13: (-2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+it27 >= 0 /\ -1-i4 >= 0 /\ -it4 >= 0) /\ i3'=it27+i3, i4'=-1+it4

Dependency graph:
4 -> 5, 4 -> 6, 4 -> 7, 4 -> 8, 4 -> 9, 4 -> 10, 4 -> 11, 4 -> 12, 4 -> 13
8 -> 5, 8 -> 6, 8 -> 7, 8 -> 8, 8 -> 9, 8 -> 10, 8 -> 11, 8 -> 12, 8 -> 13
9 -> 5, 9 -> 6, 9 -> 7, 9 -> 8, 9 -> 9, 9 -> 10, 9 -> 11, 9 -> 12, 9 -> 13
10 -> 5, 10 -> 6, 10 -> 7, 10 -> 8, 10 -> 9, 10 -> 10, 10 -> 11, 10 -> 12, 10 -> 13
11 -> 5, 11 -> 6, 11 -> 7, 11 -> 8, 11 -> 9, 11 -> 10, 11 -> 11, 11 -> 12, 11 -> 13
13 -> 5, 13 -> 6, 13 -> 7, 13 -> 8, 13 -> 9, 13 -> 10, 13 -> 11, 13 -> 12

Step with 12

	Trace

	4[(-1+i1 == 0)]
	12[(-2+i1 >= 0 /\ -1-i4+it4 <= 0 /\ 2-i1 >= 0 /\ -1-i4 >= 0)]
	
	Blocked

	{}
	{}
	{12[T]}
	
Refute

	Counterexample

	(i1=1, i3=-2, i4=-1, i5=0)
	-4-> (i1=2, i3=-1, i4=-1, i5=0 )
	-12-> ( )
	
NO

Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
MAYBE


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁
  Temp_Vars:  C, D
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₄: l0(X₀, X₁) → l1(X₀, X₁)
  t₀: l1(X₀, X₁) → l1(D-1, X₁) :|: 1+X₀ ≤ 0 ∧ C ≤ 0
  t₁: l1(X₀, X₁) → l1(1+D, X₁) :|: 1+X₀ ≤ 0 ∧ 2 ≤ C
  t₂: l1(X₀, X₁) → l1(D-1, X₁) :|: 1 ≤ X₀ ∧ 2+C ≤ 0
  t₃: l1(X₀, X₁) → l1(1+D, X₁) :|: 1 ≤ X₀ ∧ 0 ≤ C
  t₅: l1(X₀, X₁) → l2(0, D) :|: 1+X₀ ≤ 0
  t₆: l1(X₀, X₁) → l2(0, D) :|: 1 ≤ X₀
  t₇: l1(X₀, X₁) → l2(X₀, D) :|: 0 ≤ X₀ ∧ X₀ ≤ 0


Preprocessing
  Eliminate variables [X₁] that do not contribute to the problem


  Found invariant X₀ ≤ 0 ∧ 0 ≤ X₀ for location l2


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀
  Temp_Vars:  C, D
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₈: l0(X₀) → l1(X₀)
  t₉: l1(X₀) → l1(D-1) :|: 1+X₀ ≤ 0 ∧ C ≤ 0
  t₁₀: l1(X₀) → l1(1+D) :|: 1+X₀ ≤ 0 ∧ 2 ≤ C
  t₁₁: l1(X₀) → l1(D-1) :|: 1 ≤ X₀ ∧ 2+C ≤ 0
  t₁₂: l1(X₀) → l1(1+D) :|: 1 ≤ X₀ ∧ 0 ≤ C
  t₁₃: l1(X₀) → l2(0) :|: 1+X₀ ≤ 0
  t₁₄: l1(X₀) → l2(0) :|: 1 ≤ X₀
  t₁₅: l1(X₀) → l2(X₀) :|: 0 ≤ X₀ ∧ X₀ ≤ 0


  Found invariant X₀ ≤ 0 ∧ 0 ≤ X₀ for location l2


All Bounds
Timebounds
  Overall timebound:inf {Infinity}
    t₈: 1 {O(1)}
    t₉: inf {Infinity}
    t₁₀: inf {Infinity}
    t₁₁: inf {Infinity}
    t₁₂: inf {Infinity}
    t₁₃: 1 {O(1)}
    t₁₄: 1 {O(1)}
    t₁₅: 1 {O(1)}


Costbounds
  Overall costbound: inf {Infinity}
    t₈: 1 {O(1)}
    t₉: inf {Infinity}
    t₁₀: inf {Infinity}
    t₁₁: inf {Infinity}
    t₁₂: inf {Infinity}
    t₁₃: 1 {O(1)}
    t₁₄: 1 {O(1)}
    t₁₅: 1 {O(1)}


Sizebounds
    t₈, X₀: X₀ {O(n)}
    t₁₃, X₀: 0 {O(1)}
    t₁₄, X₀: 0 {O(1)}
    t₁₅, X₀: 0 {O(1)}

