WORST_CASE(Omega(n^1),O(n^1))

# LoAT Proof:
WORST_CASE(Omega(n^1),?)

WORST_CASE(Omega(n^1),?)
Initial ITS

Start location: evalDis2start

Location map:
LoAT_sink -> 0
evalDis2start -> 1
evalDis2entryin -> 2
evalDis2bb3in -> 3
evalDis2bbin -> 4
evalDis2returnin -> 5
evalDis2bb1in -> 6
evalDis2bb2in -> 7
evalDis2stop -> 8

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: -2+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=i5, i5'=i6, i6'=i4
   2: (-3+i1 == 0 /\ -1-i6+i4 >= 0) /\ i1'=4, i3'=1+i3
   3: (-3+i1 == 0 /\ i6-i4 >= 0) /\ i1'=5, i3'=1+i3
   4: (-1-i6+i5 >= 0 /\ -4+i1 == 0) /\ i1'=6, i3'=1+i3
   5: (-4+i1 == 0 /\ i6-i5 >= 0) /\ i1'=7, i3'=1+i3
   6: -6+i1 == 0 /\ i1'=3, i3'=1+i3, i6'=1+i6
   7: -7+i1 == 0 /\ i1'=3, i3'=1+i3, i5'=1+i5
   8: -5+i1 == 0 /\ i1'=8, i3'=1+i3

Dependency graph:
0 -> 1
1 -> 2, 1 -> 3
2 -> 4, 2 -> 5
3 -> 8
4 -> 6
5 -> 7
6 -> 2, 6 -> 3
7 -> 2, 7 -> 3

Chained Linear Paths

	Applied Chaining

	First rule:
	-1+i1 == 0 /\ i1'=2, i3'=1+i3
	Second rule:
	-2+i1 == 0 /\ i1'=3, i3'=1+i3, i4'=i5, i5'=i6, i6'=i4
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=i5, i5'=i6, i6'=i4
	
	Applied Deletion

	Removed the following rules: 0, 1
	
	Applied Chaining

	First rule:
	(-3+i1 == 0 /\ i6-i4 >= 0) /\ i1'=5, i3'=1+i3
	Second rule:
	-5+i1 == 0 /\ i1'=8, i3'=1+i3
	New rule:
	(0 == 0 /\ -3+i1 == 0 /\ i6-i4 >= 0) /\ i1'=8, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 3, 8
	
	Applied Chaining

	First rule:
	(-1-i6+i5 >= 0 /\ -4+i1 == 0) /\ i1'=6, i3'=1+i3
	Second rule:
	-6+i1 == 0 /\ i1'=3, i3'=1+i3, i6'=1+i6
	New rule:
	(0 == 0 /\ -1-i6+i5 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=2+i3, i6'=1+i6
	
	Applied Deletion

	Removed the following rules: 4, 6
	
	Applied Chaining

	First rule:
	(-4+i1 == 0 /\ i6-i5 >= 0) /\ i1'=7, i3'=1+i3
	Second rule:
	-7+i1 == 0 /\ i1'=3, i3'=1+i3, i5'=1+i5
	New rule:
	(0 == 0 /\ -4+i1 == 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=2+i3, i5'=1+i5
	
	Applied Deletion

	Removed the following rules: 5, 7

Start location: evalDis2start

Location map:
LoAT_sink -> 0
evalDis2start -> 1
evalDis2entryin -> 2
evalDis2bb3in -> 3
evalDis2bbin -> 4
evalDis2returnin -> 5
evalDis2bb1in -> 6
evalDis2bb2in -> 7
evalDis2stop -> 8

Rules:
   2: (-3+i1 == 0 /\ -1-i6+i4 >= 0) /\ i1'=4, i3'=1+i3
   9: (0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=i5, i5'=i6, i6'=i4
  10: (0 == 0 /\ -3+i1 == 0 /\ i6-i4 >= 0) /\ i1'=8, i3'=2+i3
  11: (0 == 0 /\ -1-i6+i5 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=2+i3, i6'=1+i6
  12: (0 == 0 /\ -4+i1 == 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=2+i3, i5'=1+i5

Dependency graph:
2 -> 11, 2 -> 12
9 -> 2, 9 -> 10
11 -> 2, 11 -> 10
12 -> 2, 12 -> 10

Preprocessed Transitions

	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i4'=i5, i5'=i6, i6'=i4
	New rule:
	-1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=i5, i5'=i6, i6'=i4
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -3+i1 == 0 /\ i6-i4 >= 0) /\ i1'=8, i3'=2+i3
	New rule:
	(-3+i1 == 0 /\ i6-i4 >= 0) /\ i1'=8, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -1-i6+i5 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=2+i3, i6'=1+i6
	New rule:
	(-1-i6+i5 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=2+i3, i6'=1+i6
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -4+i1 == 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=2+i3, i5'=1+i5
	New rule:
	(-4+i1 == 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=2+i3, i5'=1+i5

Start location: evalDis2start

Location map:
LoAT_sink -> 0
evalDis2start -> 1
evalDis2entryin -> 2
evalDis2bb3in -> 3
evalDis2bbin -> 4
evalDis2returnin -> 5
evalDis2bb1in -> 6
evalDis2bb2in -> 7
evalDis2stop -> 8

Rules:
   2: (-3+i1 == 0 /\ -1-i6+i4 >= 0) /\ i1'=4, i3'=1+i3
  13: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=i5, i5'=i6, i6'=i4
  14: (-3+i1 == 0 /\ i6-i4 >= 0) /\ i1'=8, i3'=2+i3
  15: (-1-i6+i5 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=2+i3, i6'=1+i6
  16: (-4+i1 == 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=2+i3, i5'=1+i5

Dependency graph:
2 -> 15, 2 -> 16
13 -> 2, 13 -> 14
15 -> 2, 15 -> 14
16 -> 2, 16 -> 14

Step with 13

	Trace

	13[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 14

	Trace

	13[(-1+i1 == 0)]
	14[(-3+i1 == 0 /\ i6-i4 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	
	Blocked

	{}
	{14[T]}
	
Step with 2

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i6+i4 >= 0)]
	
	Blocked

	{}
	{14[T]}
	{}
	
Step with 15

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i6+i4 >= 0)]
	15[(-1-i6+i5 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{14[T]}
	{}
	{}
	
Poly(n^1)

Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -3+i1 == 0 /\ -1-i6+i5 >= 0 /\ -1-i6+i4 >= 0) /\ i1'=3, i3'=3+i3, i6'=1+i6
		New rule:
		(-3+i1 == 0 /\ -1-i6+i5 >= 0 /\ -1-i6+i4 >= 0) /\ i1'=3, i3'=3+i3, i6'=1+i6

	Loop Acceleration

	Original rule:
	(-3+i1 == 0 /\ -1-i6+i5 >= 0 /\ -1-i6+i4 >= 0) /\ i1'=3, i3'=3+i3, i6'=1+i6
	New rule:
	(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -i6+i4-it21 >= 0 /\ -1+it21 >= 0 /\ -i6-it21+i5 >= 0) /\ i1'=i1, i3'=i3+3*it21, i6'=i6+it21

		-3+i1 >= 0 [0]: unchanged
		
		-1-i6+i5 >= 0 [0]: montonic decrease yields -i6-it21+i5 >= 0
		
		3-i1 >= 0 [0]: unchanged
		
		-1-i6+i4 >= 0 [0]: montonic decrease yields -i6+i4-it21 >= 0
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, -1-i6+i5 >= 0 -> -i6-it21+i5 >= 0, 3-i1 >= 0 -> 3-i1 >= 0, -1-i6+i4 >= 0 -> -i6+i4-it21 >= 0}

	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -i6+i4-it21 >= 0 /\ -1+it21 >= 0 /\ -i6-it21+i5 >= 0) /\ i1'=i1, i3'=i3+3*it21, i6'=i6+it21
	New rule:
	(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -i6+i4-it21 >= 0 /\ -1+it21 >= 0 /\ -i6-it21+i5 >= 0) /\ i3'=i3+3*it21, i6'=i6+it21

Start location: evalDis2start

Location map:
LoAT_sink -> 0
evalDis2start -> 1
evalDis2entryin -> 2
evalDis2bb3in -> 3
evalDis2bbin -> 4
evalDis2returnin -> 5
evalDis2bb1in -> 6
evalDis2bb2in -> 7
evalDis2stop -> 8

Rules:
   2: (-3+i1 == 0 /\ -1-i6+i4 >= 0) /\ i1'=4, i3'=1+i3
  13: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=i5, i5'=i6, i6'=i4
  14: (-3+i1 == 0 /\ i6-i4 >= 0) /\ i1'=8, i3'=2+i3
  15: (-1-i6+i5 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=2+i3, i6'=1+i6
  16: (-4+i1 == 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=2+i3, i5'=1+i5
  17: (-3+i1 >= 0 /\ 3-i1 >= 0 /\ -i6+i4-it21 >= 0 /\ -1+it21 >= 0 /\ -i6-it21+i5 >= 0) /\ i3'=i3+3*it21, i6'=i6+it21

Dependency graph:
2 -> 15, 2 -> 16
13 -> 2, 13 -> 14, 13 -> 17
15 -> 2, 15 -> 14, 15 -> 17
16 -> 2, 16 -> 14, 16 -> 17
17 -> 2, 17 -> 14

	Trace

	13[(-1+i1 == 0)]
	17[(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -i6+i4-it21 >= 0 /\ -1+it21 >= 0 /\ -i6-it21+i5 >= 0)]
	
	Blocked

	{}
	{14[T]}
	{17[T]}
	
Step with 14

	Trace

	13[(-1+i1 == 0)]
	17[(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -i6+i4-it21 >= 0 /\ -1+it21 >= 0 /\ -i6-it21+i5 >= 0)]
	14[(-3+i1 == 0 /\ i6-i4 >= 0)]
	
	Blocked

	{}
	{14[T]}
	{17[T]}
	{}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	17[(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -i6+i4-it21 >= 0 /\ -1+it21 >= 0 /\ -i6-it21+i5 >= 0)]
	
	Blocked

	{}
	{14[T]}
	{14[T], 17[T]}
	
Step with 2

	Trace

	13[(-1+i1 == 0)]
	17[(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -i6+i4-it21 >= 0 /\ -1+it21 >= 0 /\ -i6-it21+i5 >= 0)]
	2[(-3+i1 == 0 /\ -1-i6+i4 >= 0)]
	
	Blocked

	{}
	{14[T]}
	{14[T], 17[T]}
	{}
	
Step with 16

	Trace

	13[(-1+i1 == 0)]
	17[(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -i6+i4-it21 >= 0 /\ -1+it21 >= 0 /\ -i6-it21+i5 >= 0)]
	2[(-3+i1 == 0 /\ -1-i6+i4 >= 0)]
	16[(-4+i1 == 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{14[T]}
	{14[T], 17[T]}
	{}
	{}
	
Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -3+i1 == 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=3+i3, i5'=1+i5
		New rule:
		(-3+i1 == 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=3+i3, i5'=1+i5

	Loop Acceleration

	Original rule:
	(-3+i1 == 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=3+i3, i5'=1+i5
	New rule:
	(-3+i1 >= 0 /\ 3-i1 >= 0 /\ 1+i6-it75-i5 >= 0 /\ -1-i6+i4 >= 0 /\ -1+it75 >= 0) /\ i1'=i1, i3'=i3+3*it75, i5'=it75+i5

		-3+i1 >= 0 [0]: unchanged
		
		3-i1 >= 0 [0]: unchanged
		
		-1-i6+i4 >= 0 [0]: unchanged
		
		i6-i5 >= 0 [0]: montonic decrease yields 1+i6-it75-i5 >= 0
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, 3-i1 >= 0 -> 3-i1 >= 0, -1-i6+i4 >= 0 -> -1-i6+i4 >= 0, i6-i5 >= 0 -> 1+i6-it75-i5 >= 0}

	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ 3-i1 >= 0 /\ 1+i6-it75-i5 >= 0 /\ -1-i6+i4 >= 0 /\ -1+it75 >= 0) /\ i1'=i1, i3'=i3+3*it75, i5'=it75+i5
	New rule:
	(-3+i1 >= 0 /\ 3-i1 >= 0 /\ 1+i6-it75-i5 >= 0 /\ -1-i6+i4 >= 0 /\ -1+it75 >= 0) /\ i3'=i3+3*it75, i5'=it75+i5
	
	Instantiation

	Original rule:
	(-3+i1 >= 0 /\ 3-i1 >= 0 /\ 1+i6-it75-i5 >= 0 /\ -1-i6+i4 >= 0 /\ -1+it75 >= 0) /\ i3'=i3+3*it75, i5'=it75+i5
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0) /\ i3'=3+3*i6+i3-3*i5, i5'=1+i6

Start location: evalDis2start

Location map:
LoAT_sink -> 0
evalDis2start -> 1
evalDis2entryin -> 2
evalDis2bb3in -> 3
evalDis2bbin -> 4
evalDis2returnin -> 5
evalDis2bb1in -> 6
evalDis2bb2in -> 7
evalDis2stop -> 8

Rules:
   2: (-3+i1 == 0 /\ -1-i6+i4 >= 0) /\ i1'=4, i3'=1+i3
  13: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=i5, i5'=i6, i6'=i4
  14: (-3+i1 == 0 /\ i6-i4 >= 0) /\ i1'=8, i3'=2+i3
  15: (-1-i6+i5 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=2+i3, i6'=1+i6
  16: (-4+i1 == 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=2+i3, i5'=1+i5
  17: (-3+i1 >= 0 /\ 3-i1 >= 0 /\ -i6+i4-it21 >= 0 /\ -1+it21 >= 0 /\ -i6-it21+i5 >= 0) /\ i3'=i3+3*it21, i6'=i6+it21
  18: (0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0) /\ i3'=3+3*i6+i3-3*i5, i5'=1+i6

Dependency graph:
2 -> 15, 2 -> 16
13 -> 2, 13 -> 14, 13 -> 17, 13 -> 18
15 -> 2, 15 -> 14, 15 -> 17, 15 -> 18
16 -> 2, 16 -> 14, 16 -> 17, 16 -> 18
17 -> 2, 17 -> 14, 17 -> 18
18 -> 2, 18 -> 14, 18 -> 17

	Trace

	13[(-1+i1 == 0)]
	17[(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -i6+i4-it21 >= 0 /\ -1+it21 >= 0 /\ -i6-it21+i5 >= 0)]
	18[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{14[T]}
	{14[T], 17[T]}
	{18[T]}
	
Accelerate

		Extracted Implied Equalities

		Original rule:
		(0 >= 0 /\ -3+i1 >= 0 /\ -1-i6+i4-it21 >= 0 /\ 3-i1 >= 0 /\ -i6+i4-it21 >= 0 /\ -1+it21 >= 0 /\ i6+it21-i5 >= 0 /\ -i6-it21+i5 >= 0) /\ i3'=3+3*i6+i3+6*it21-3*i5, i5'=1+i6+it21, i6'=i6+it21
		New rule:
		(0 >= 0 /\ -3+i1 >= 0 /\ -1-i6+i4-it21 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -i6+i4-it21 >= 0 /\ -1+it21 >= 0 /\ i6+it21-i5 >= 0 /\ -i6-it21+i5 >= 0 /\ -i6-it21+i5 == 0) /\ i3'=3+3*i6+i3+6*it21-3*i5, i5'=1+i6+it21, i6'=i6+it21
		
		Propagated Equalities

		Original rule:
		(0 >= 0 /\ -3+i1 >= 0 /\ -1-i6+i4-it21 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -i6+i4-it21 >= 0 /\ -1+it21 >= 0 /\ i6+it21-i5 >= 0 /\ -i6-it21+i5 >= 0 /\ -i6-it21+i5 == 0) /\ i3'=3+3*i6+i3+6*it21-3*i5, i5'=1+i6+it21, i6'=i6+it21
		New rule:
		(0 >= 0 /\ 0 == 0 /\ -3+i1 >= 0 /\ -1-i6+i5 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i4-i5 >= 0) /\ i3'=3-3*i6+i3+3*i5, i5'=1+i5, i6'=i5
		
			propagated equality it21 = -i6+i5
			
		Simplified Guard

		Original rule:
		(0 >= 0 /\ 0 == 0 /\ -3+i1 >= 0 /\ -1-i6+i5 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i4-i5 >= 0) /\ i3'=3-3*i6+i3+3*i5, i5'=1+i5, i6'=i5
		New rule:
		(-3+i1 >= 0 /\ -1-i6+i5 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i4-i5 >= 0) /\ i3'=3-3*i6+i3+3*i5, i5'=1+i5, i6'=i5

	Loop Acceleration

	Original rule:
	(-3+i1 >= 0 /\ -1-i6+i5 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i4-i5 >= 0) /\ i3'=3-3*i6+i3+3*i5, i5'=1+i5, i6'=i5
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ -it81+i4-i5 >= 0 /\ -2+i4-i5 >= 0 /\ -1-i6+i5 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+it81 >= 0 /\ -1+i4-i5 >= 0 /\ -1-it81+i4-i5 >= 0) /\ i1'=i1, i3'=3-3*i6+i3+6*it81+3*i5, i5'=1+it81+i5, i6'=it81+i5

		-3+i1 >= 0 [0]: unchanged
		
		-1-i6+i5 >= 0 [0]: trivial
		
		i4-i5 >= 0 [0]: montonic decrease yields (1-it81+i4-i5 >= 0 /\ i4-i5 >= 0)
		
		3-i1 >= 0 [0]: unchanged
		
		-1+i4-i5 >= 0 [0]: montonic decrease yields (-it81+i4-i5 >= 0 /\ -1+i4-i5 >= 0)
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, -1-i6+i5 >= 0 -> -1-i6+i5 >= 0, i4-i5 >= 0 -> (1-it81+i4-i5 >= 0 /\ i4-i5 >= 0), 3-i1 >= 0 -> 3-i1 >= 0, -1+i4-i5 >= 0 -> (-it81+i4-i5 >= 0 /\ -1+i4-i5 >= 0)}

	Extracted Implied Equalities

	Original rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ -it81+i4-i5 >= 0 /\ -2+i4-i5 >= 0 /\ -1-i6+i5 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+it81 >= 0 /\ -1+i4-i5 >= 0 /\ -1-it81+i4-i5 >= 0) /\ i1'=i1, i3'=3-3*i6+i3+6*it81+3*i5, i5'=1+it81+i5, i6'=it81+i5
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ -it81+i4-i5 >= 0 /\ -2+i4-i5 >= 0 /\ -1-i6+i5 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+it81 >= 0 /\ -1+i4-i5 >= 0 /\ -1-it81+i4-i5 >= 0) /\ i1'=i1, i3'=3-3*i6+i3+6*it81+3*i5, i5'=1+it81+i5, i6'=it81+i5
	
	Simplified Guard

	Original rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ -it81+i4-i5 >= 0 /\ -2+i4-i5 >= 0 /\ -1-i6+i5 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+it81 >= 0 /\ -1+i4-i5 >= 0 /\ -1-it81+i4-i5 >= 0) /\ i1'=i1, i3'=3-3*i6+i3+6*it81+3*i5, i5'=1+it81+i5, i6'=it81+i5
	New rule:
	(-3+i1 >= 0 /\ -it81+i4-i5 >= 0 /\ -2+i4-i5 >= 0 /\ -1-i6+i5 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+it81 >= 0 /\ -1+i4-i5 >= 0 /\ -1-it81+i4-i5 >= 0) /\ i1'=i1, i3'=3-3*i6+i3+6*it81+3*i5, i5'=1+it81+i5, i6'=it81+i5
	
	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ -it81+i4-i5 >= 0 /\ -2+i4-i5 >= 0 /\ -1-i6+i5 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+it81 >= 0 /\ -1+i4-i5 >= 0 /\ -1-it81+i4-i5 >= 0) /\ i1'=i1, i3'=3-3*i6+i3+6*it81+3*i5, i5'=1+it81+i5, i6'=it81+i5
	New rule:
	(-3+i1 >= 0 /\ -it81+i4-i5 >= 0 /\ -2+i4-i5 >= 0 /\ -1-i6+i5 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+it81 >= 0 /\ -1+i4-i5 >= 0 /\ -1-it81+i4-i5 >= 0) /\ i3'=3-3*i6+i3+6*it81+3*i5, i5'=1+it81+i5, i6'=it81+i5
	
	Instantiation

	Original rule:
	(-3+i1 >= 0 /\ -it81+i4-i5 >= 0 /\ -2+i4-i5 >= 0 /\ -1-i6+i5 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+it81 >= 0 /\ -1+i4-i5 >= 0 /\ -1-it81+i4-i5 >= 0) /\ i3'=3-3*i6+i3+6*it81+3*i5, i5'=1+it81+i5, i6'=it81+i5
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -2+i4-i5 >= 0 /\ -1-i6+i5 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i4-i5 >= 0) /\ i3'=-3-3*i6+i3+6*i4-3*i5, i5'=i4, i6'=-1+i4

Start location: evalDis2start

Location map:
LoAT_sink -> 0
evalDis2start -> 1
evalDis2entryin -> 2
evalDis2bb3in -> 3
evalDis2bbin -> 4
evalDis2returnin -> 5
evalDis2bb1in -> 6
evalDis2bb2in -> 7
evalDis2stop -> 8

Rules:
   2: (-3+i1 == 0 /\ -1-i6+i4 >= 0) /\ i1'=4, i3'=1+i3
  13: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=i5, i5'=i6, i6'=i4
  14: (-3+i1 == 0 /\ i6-i4 >= 0) /\ i1'=8, i3'=2+i3
  15: (-1-i6+i5 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=2+i3, i6'=1+i6
  16: (-4+i1 == 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=2+i3, i5'=1+i5
  17: (-3+i1 >= 0 /\ 3-i1 >= 0 /\ -i6+i4-it21 >= 0 /\ -1+it21 >= 0 /\ -i6-it21+i5 >= 0) /\ i3'=i3+3*it21, i6'=i6+it21
  18: (0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0) /\ i3'=3+3*i6+i3-3*i5, i5'=1+i6
  19: (0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -2+i4-i5 >= 0 /\ -1-i6+i5 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i4-i5 >= 0) /\ i3'=-3-3*i6+i3+6*i4-3*i5, i5'=i4, i6'=-1+i4

Dependency graph:
2 -> 15, 2 -> 16
13 -> 2, 13 -> 14, 13 -> 17, 13 -> 18, 13 -> 19
15 -> 2, 15 -> 14, 15 -> 17, 15 -> 18, 15 -> 19
16 -> 2, 16 -> 14, 16 -> 17, 16 -> 18, 16 -> 19
17 -> 2, 17 -> 14, 17 -> 18
18 -> 2, 18 -> 14, 18 -> 17, 18 -> 19
19 -> 2, 19 -> 14, 19 -> 17

	Trace

	13[(-1+i1 == 0)]
	19[(0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -2+i4-i5 >= 0 /\ -1-i6+i5 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i4-i5 >= 0)]
	
	Blocked

	{}
	{14[T]}
	{19[T]}
	
Step with 17

	Trace

	13[(-1+i1 == 0)]
	19[(0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -2+i4-i5 >= 0 /\ -1-i6+i5 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i4-i5 >= 0)]
	17[(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -i6+i4-it21 >= 0 /\ -1+it21 >= 0 /\ -i6-it21+i5 >= 0)]
	
	Blocked

	{}
	{14[T]}
	{19[T]}
	{17[T]}
	
Step with 14

	Trace

	13[(-1+i1 == 0)]
	19[(0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -2+i4-i5 >= 0 /\ -1-i6+i5 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i4-i5 >= 0)]
	17[(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -i6+i4-it21 >= 0 /\ -1+it21 >= 0 /\ -i6-it21+i5 >= 0)]
	14[(-3+i1 == 0 /\ i6-i4 >= 0)]
	
	Blocked

	{}
	{14[T]}
	{19[T]}
	{2[T], 17[T], 18[T]}
	{}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	19[(0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -2+i4-i5 >= 0 /\ -1-i6+i5 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i4-i5 >= 0)]
	17[(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -i6+i4-it21 >= 0 /\ -1+it21 >= 0 /\ -i6-it21+i5 >= 0)]
	
	Blocked

	{}
	{14[T]}
	{19[T]}
	{2[T], 14[T], 17[T], 18[T]}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	19[(0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -2+i4-i5 >= 0 /\ -1-i6+i5 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i4-i5 >= 0)]
	
	Blocked

	{}
	{14[T]}
	{17[T], 19[T]}
	
Step with 2

	Trace

	13[(-1+i1 == 0)]
	19[(0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -2+i4-i5 >= 0 /\ -1-i6+i5 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i4-i5 >= 0)]
	2[(-3+i1 == 0 /\ -1-i6+i4 >= 0)]
	
	Blocked

	{}
	{14[T]}
	{17[T], 19[T]}
	{}
	
Step with 15

	Trace

	13[(-1+i1 == 0)]
	19[(0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -2+i4-i5 >= 0 /\ -1-i6+i5 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i4-i5 >= 0)]
	2[(-3+i1 == 0 /\ -1-i6+i4 >= 0)]
	15[(-1-i6+i5 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{14[T]}
	{17[T], 19[T]}
	{16[T]}
	{}
	
Covered

	Trace

	13[(-1+i1 == 0)]
	19[(0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -2+i4-i5 >= 0 /\ -1-i6+i5 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i4-i5 >= 0)]
	2[(-3+i1 == 0 /\ -1-i6+i4 >= 0)]
	
	Blocked

	{}
	{14[T]}
	{17[T], 19[T]}
	{15[T], 16[T]}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	19[(0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -2+i4-i5 >= 0 /\ -1-i6+i5 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i4-i5 >= 0)]
	
	Blocked

	{}
	{14[T]}
	{2[T], 17[T], 19[T]}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	
	Blocked

	{}
	{14[T], 19[T]}
	
Step with 18

	Trace

	13[(-1+i1 == 0)]
	18[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{14[T], 19[T]}
	{18[T]}
	
Step with 19

	Trace

	13[(-1+i1 == 0)]
	18[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0)]
	19[(0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -2+i4-i5 >= 0 /\ -1-i6+i5 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i4-i5 >= 0)]
	
	Blocked

	{}
	{14[T], 19[T]}
	{18[T]}
	{19[T]}
	
Step with 17

	Trace

	13[(-1+i1 == 0)]
	18[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0)]
	19[(0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -2+i4-i5 >= 0 /\ -1-i6+i5 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i4-i5 >= 0)]
	17[(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -i6+i4-it21 >= 0 /\ -1+it21 >= 0 /\ -i6-it21+i5 >= 0)]
	
	Blocked

	{}
	{14[T], 19[T]}
	{18[T]}
	{19[T]}
	{17[T]}
	
Step with 14

	Trace

	13[(-1+i1 == 0)]
	18[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0)]
	19[(0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -2+i4-i5 >= 0 /\ -1-i6+i5 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i4-i5 >= 0)]
	17[(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -i6+i4-it21 >= 0 /\ -1+it21 >= 0 /\ -i6-it21+i5 >= 0)]
	14[(-3+i1 == 0 /\ i6-i4 >= 0)]
	
	Blocked

	{}
	{14[T], 19[T]}
	{18[T]}
	{19[T]}
	{17[T]}
	{}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	18[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0)]
	19[(0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -2+i4-i5 >= 0 /\ -1-i6+i5 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i4-i5 >= 0)]
	17[(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -i6+i4-it21 >= 0 /\ -1+it21 >= 0 /\ -i6-it21+i5 >= 0)]
	
	Blocked

	{}
	{14[T], 19[T]}
	{18[T]}
	{19[T]}
	{14[T], 17[T]}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	18[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0)]
	19[(0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -2+i4-i5 >= 0 /\ -1-i6+i5 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i4-i5 >= 0)]
	
	Blocked

	{}
	{14[T], 19[T]}
	{18[T]}
	{17[T], 19[T]}
	
Step with 2

	Trace

	13[(-1+i1 == 0)]
	18[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0)]
	19[(0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -2+i4-i5 >= 0 /\ -1-i6+i5 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i4-i5 >= 0)]
	2[(-3+i1 == 0 /\ -1-i6+i4 >= 0)]
	
	Blocked

	{}
	{14[T], 19[T]}
	{18[T]}
	{14[T], 17[T], 19[T]}
	{}
	
Step with 15

	Trace

	13[(-1+i1 == 0)]
	18[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0)]
	19[(0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -2+i4-i5 >= 0 /\ -1-i6+i5 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i4-i5 >= 0)]
	2[(-3+i1 == 0 /\ -1-i6+i4 >= 0)]
	15[(-1-i6+i5 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{14[T], 19[T]}
	{18[T]}
	{14[T], 17[T], 19[T]}
	{}
	{}
	
Covered

	Trace

	13[(-1+i1 == 0)]
	18[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0)]
	19[(0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -2+i4-i5 >= 0 /\ -1-i6+i5 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i4-i5 >= 0)]
	2[(-3+i1 == 0 /\ -1-i6+i4 >= 0)]
	
	Blocked

	{}
	{14[T], 19[T]}
	{18[T]}
	{14[T], 17[T], 19[T]}
	{15[T]}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	18[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0)]
	19[(0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -2+i4-i5 >= 0 /\ -1-i6+i5 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i4-i5 >= 0)]
	
	Blocked

	{}
	{14[T], 19[T]}
	{18[T]}
	{2[T], 14[T], 17[T], 19[T]}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	18[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{14[T], 19[T]}
	{18[T], 19[T]}
	
Step with 2

	Trace

	13[(-1+i1 == 0)]
	18[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0)]
	2[(-3+i1 == 0 /\ -1-i6+i4 >= 0)]
	
	Blocked

	{}
	{14[T], 19[T]}
	{18[T], 19[T]}
	{}
	
Step with 15

	Trace

	13[(-1+i1 == 0)]
	18[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0)]
	2[(-3+i1 == 0 /\ -1-i6+i4 >= 0)]
	15[(-1-i6+i5 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{14[T], 19[T]}
	{18[T], 19[T]}
	{16[T]}
	{}
	
Covered

	Trace

	13[(-1+i1 == 0)]
	18[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0)]
	2[(-3+i1 == 0 /\ -1-i6+i4 >= 0)]
	
	Blocked

	{}
	{14[T], 19[T]}
	{18[T], 19[T]}
	{15[T], 16[T]}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	18[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{14[T], 19[T]}
	{2[T], 18[T], 19[T]}
	
Step with 17

	Trace

	13[(-1+i1 == 0)]
	18[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0)]
	17[(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -i6+i4-it21 >= 0 /\ -1+it21 >= 0 /\ -i6-it21+i5 >= 0)]
	
	Blocked

	{}
	{14[T], 19[T]}
	{2[T], 18[T], 19[T]}
	{17[T]}
	
Accelerate

		Extracted Implied Equalities

		Original rule:
		(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -i6+i4-it21 >= 0 /\ 1-it21 >= 0 /\ -1+it21 >= 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0) /\ i3'=3+3*i6+i3+3*it21-3*i5, i5'=1+i6, i6'=i6+it21
		New rule:
		(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -i6+i4-it21 >= 0 /\ 1-it21 >= 0 /\ -1+it21 >= 0 /\ -1+it21 == 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0) /\ i3'=3+3*i6+i3+3*it21-3*i5, i5'=1+i6, i6'=i6+it21
		
		Propagated Equalities

		Original rule:
		(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -i6+i4-it21 >= 0 /\ 1-it21 >= 0 /\ -1+it21 >= 0 /\ -1+it21 == 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0) /\ i3'=3+3*i6+i3+3*it21-3*i5, i5'=1+i6, i6'=i6+it21
		New rule:
		(0 >= 0 /\ 0 == 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0) /\ i3'=6+3*i6+i3-3*i5, i5'=1+i6, i6'=1+i6
		
			propagated equality it21 = 1
			
		Simplified Guard

		Original rule:
		(0 >= 0 /\ 0 == 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0) /\ i3'=6+3*i6+i3-3*i5, i5'=1+i6, i6'=1+i6
		New rule:
		(-3+i1 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0) /\ i3'=6+3*i6+i3-3*i5, i5'=1+i6, i6'=1+i6

	Loop Acceleration

	Original rule:
	(-3+i1 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0) /\ i3'=6+3*i6+i3-3*i5, i5'=1+i6, i6'=1+i6
	New rule:
	(0 >= 0 /\ -1-i6+i4-it155 >= 0 /\ -3+i1 >= 0 /\ -2-i6+i4 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1-i6+i4 >= 0 /\ -1+it155 >= 0 /\ i6-i5 >= 0) /\ i1'=i1, i3'=6+3*i6+i3+6*it155-3*i5, i5'=1+i6+it155, i6'=1+i6+it155

		-3+i1 >= 0 [0]: unchanged
		
		3-i1 >= 0 [0]: unchanged
		
		-1-i6+i4 >= 0 [0]: montonic decrease yields (-1-i6+i4 >= 0 /\ -i6+i4-it155 >= 0)
		
		i6-i5 >= 0 [0]: trivial
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, 3-i1 >= 0 -> 3-i1 >= 0, -1-i6+i4 >= 0 -> (-1-i6+i4 >= 0 /\ -i6+i4-it155 >= 0), i6-i5 >= 0 -> i6-i5 >= 0}

	Extracted Implied Equalities

	Original rule:
	(0 >= 0 /\ -1-i6+i4-it155 >= 0 /\ -3+i1 >= 0 /\ -2-i6+i4 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1-i6+i4 >= 0 /\ -1+it155 >= 0 /\ i6-i5 >= 0) /\ i1'=i1, i3'=6+3*i6+i3+6*it155-3*i5, i5'=1+i6+it155, i6'=1+i6+it155
	New rule:
	(0 >= 0 /\ -1-i6+i4-it155 >= 0 /\ -3+i1 >= 0 /\ -2-i6+i4 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1-i6+i4 >= 0 /\ -1+it155 >= 0 /\ i6-i5 >= 0) /\ i1'=i1, i3'=6+3*i6+i3+6*it155-3*i5, i5'=1+i6+it155, i6'=1+i6+it155
	
	Simplified Guard

	Original rule:
	(0 >= 0 /\ -1-i6+i4-it155 >= 0 /\ -3+i1 >= 0 /\ -2-i6+i4 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1-i6+i4 >= 0 /\ -1+it155 >= 0 /\ i6-i5 >= 0) /\ i1'=i1, i3'=6+3*i6+i3+6*it155-3*i5, i5'=1+i6+it155, i6'=1+i6+it155
	New rule:
	(-1-i6+i4-it155 >= 0 /\ -3+i1 >= 0 /\ -2-i6+i4 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1-i6+i4 >= 0 /\ -1+it155 >= 0 /\ i6-i5 >= 0) /\ i1'=i1, i3'=6+3*i6+i3+6*it155-3*i5, i5'=1+i6+it155, i6'=1+i6+it155
	
	Removed Trivial Updates

	Original rule:
	(-1-i6+i4-it155 >= 0 /\ -3+i1 >= 0 /\ -2-i6+i4 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1-i6+i4 >= 0 /\ -1+it155 >= 0 /\ i6-i5 >= 0) /\ i1'=i1, i3'=6+3*i6+i3+6*it155-3*i5, i5'=1+i6+it155, i6'=1+i6+it155
	New rule:
	(-1-i6+i4-it155 >= 0 /\ -3+i1 >= 0 /\ -2-i6+i4 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1-i6+i4 >= 0 /\ -1+it155 >= 0 /\ i6-i5 >= 0) /\ i3'=6+3*i6+i3+6*it155-3*i5, i5'=1+i6+it155, i6'=1+i6+it155
	
	Instantiation

	Original rule:
	(-1-i6+i4-it155 >= 0 /\ -3+i1 >= 0 /\ -2-i6+i4 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1-i6+i4 >= 0 /\ -1+it155 >= 0 /\ i6-i5 >= 0) /\ i3'=6+3*i6+i3+6*it155-3*i5, i5'=1+i6+it155, i6'=1+i6+it155
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ -2-i6+i4 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0) /\ i3'=-3*i6+i3+6*i4-3*i5, i5'=i4, i6'=i4

Start location: evalDis2start

Location map:
LoAT_sink -> 0
evalDis2start -> 1
evalDis2entryin -> 2
evalDis2bb3in -> 3
evalDis2bbin -> 4
evalDis2returnin -> 5
evalDis2bb1in -> 6
evalDis2bb2in -> 7
evalDis2stop -> 8

Rules:
   2: (-3+i1 == 0 /\ -1-i6+i4 >= 0) /\ i1'=4, i3'=1+i3
  13: -1+i1 == 0 /\ i1'=3, i3'=2+i3, i4'=i5, i5'=i6, i6'=i4
  14: (-3+i1 == 0 /\ i6-i4 >= 0) /\ i1'=8, i3'=2+i3
  15: (-1-i6+i5 >= 0 /\ -4+i1 == 0) /\ i1'=3, i3'=2+i3, i6'=1+i6
  16: (-4+i1 == 0 /\ i6-i5 >= 0) /\ i1'=3, i3'=2+i3, i5'=1+i5
  17: (-3+i1 >= 0 /\ 3-i1 >= 0 /\ -i6+i4-it21 >= 0 /\ -1+it21 >= 0 /\ -i6-it21+i5 >= 0) /\ i3'=i3+3*it21, i6'=i6+it21
  18: (0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0) /\ i3'=3+3*i6+i3-3*i5, i5'=1+i6
  19: (0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -2+i4-i5 >= 0 /\ -1-i6+i5 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i4-i5 >= 0) /\ i3'=-3-3*i6+i3+6*i4-3*i5, i5'=i4, i6'=-1+i4
  20: (0 >= 0 /\ -3+i1 >= 0 /\ -2-i6+i4 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0) /\ i3'=-3*i6+i3+6*i4-3*i5, i5'=i4, i6'=i4

Dependency graph:
2 -> 15, 2 -> 16
13 -> 2, 13 -> 14, 13 -> 17, 13 -> 18, 13 -> 19, 13 -> 20
15 -> 2, 15 -> 14, 15 -> 17, 15 -> 18, 15 -> 19, 15 -> 20
16 -> 2, 16 -> 14, 16 -> 17, 16 -> 18, 16 -> 19, 16 -> 20
17 -> 2, 17 -> 14, 17 -> 18, 17 -> 20
18 -> 2, 18 -> 14, 18 -> 17, 18 -> 19
19 -> 2, 19 -> 14, 19 -> 17
20 -> 2, 20 -> 14, 20 -> 18

	Trace

	13[(-1+i1 == 0)]
	20[(0 >= 0 /\ -3+i1 >= 0 /\ -2-i6+i4 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{14[T], 19[T]}
	{20[T]}
	
Step with 14

	Trace

	13[(-1+i1 == 0)]
	20[(0 >= 0 /\ -3+i1 >= 0 /\ -2-i6+i4 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0)]
	14[(-3+i1 == 0 /\ i6-i4 >= 0)]
	
	Blocked

	{}
	{14[T], 19[T]}
	{2[T], 20[T]}
	{}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	20[(0 >= 0 /\ -3+i1 >= 0 /\ -2-i6+i4 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{14[T], 19[T]}
	{2[T], 14[T], 20[T]}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	
	Blocked

	{}
	{14[T], 19[T], 20[T]}
	
Step with 18

	Trace

	13[(-1+i1 == 0)]
	18[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{14[T], 19[T], 20[T]}
	{18[T]}
	
Step with 17

	Trace

	13[(-1+i1 == 0)]
	18[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0)]
	17[(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -i6+i4-it21 >= 0 /\ -1+it21 >= 0 /\ -i6-it21+i5 >= 0)]
	
	Blocked

	{}
	{14[T], 19[T], 20[T]}
	{14[T], 18[T]}
	{17[T]}
	
Covered

	Trace

	13[(-1+i1 == 0)]
	18[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{14[T], 19[T], 20[T]}
	{14[T], 17[T], 18[T]}
	
Step with 2

	Trace

	13[(-1+i1 == 0)]
	18[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0)]
	2[(-3+i1 == 0 /\ -1-i6+i4 >= 0)]
	
	Blocked

	{}
	{14[T], 19[T], 20[T]}
	{14[T], 17[T], 18[T]}
	{}
	
Step with 15

	Trace

	13[(-1+i1 == 0)]
	18[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0)]
	2[(-3+i1 == 0 /\ -1-i6+i4 >= 0)]
	15[(-1-i6+i5 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{14[T], 19[T], 20[T]}
	{14[T], 17[T], 18[T]}
	{16[T]}
	{}
	
Covered

	Trace

	13[(-1+i1 == 0)]
	18[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0)]
	2[(-3+i1 == 0 /\ -1-i6+i4 >= 0)]
	
	Blocked

	{}
	{14[T], 19[T], 20[T]}
	{14[T], 17[T], 18[T]}
	{15[T], 16[T]}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	18[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{14[T], 19[T], 20[T]}
	{2[T], 14[T], 17[T], 18[T]}
	
Step with 19

	Trace

	13[(-1+i1 == 0)]
	18[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0)]
	19[(0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -2+i4-i5 >= 0 /\ -1-i6+i5 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i4-i5 >= 0)]
	
	Blocked

	{}
	{14[T], 19[T], 20[T]}
	{2[T], 14[T], 17[T], 18[T]}
	{19[T]}
	
Step with 2

	Trace

	13[(-1+i1 == 0)]
	18[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0)]
	19[(0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -2+i4-i5 >= 0 /\ -1-i6+i5 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i4-i5 >= 0)]
	2[(-3+i1 == 0 /\ -1-i6+i4 >= 0)]
	
	Blocked

	{}
	{14[T], 19[T], 20[T]}
	{2[T], 14[T], 17[T], 18[T]}
	{19[T]}
	{}
	
Step with 15

	Trace

	13[(-1+i1 == 0)]
	18[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0)]
	19[(0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -2+i4-i5 >= 0 /\ -1-i6+i5 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i4-i5 >= 0)]
	2[(-3+i1 == 0 /\ -1-i6+i4 >= 0)]
	15[(-1-i6+i5 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{14[T], 19[T], 20[T]}
	{2[T], 14[T], 17[T], 18[T]}
	{19[T]}
	{}
	{}
	
Covered

	Trace

	13[(-1+i1 == 0)]
	18[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0)]
	19[(0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -2+i4-i5 >= 0 /\ -1-i6+i5 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i4-i5 >= 0)]
	2[(-3+i1 == 0 /\ -1-i6+i4 >= 0)]
	
	Blocked

	{}
	{14[T], 19[T], 20[T]}
	{2[T], 14[T], 17[T], 18[T]}
	{19[T]}
	{15[T]}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	18[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0)]
	19[(0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -2+i4-i5 >= 0 /\ -1-i6+i5 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i4-i5 >= 0)]
	
	Blocked

	{}
	{14[T], 19[T], 20[T]}
	{2[T], 14[T], 17[T], 18[T]}
	{2[T], 19[T]}
	
Step with 17

	Trace

	13[(-1+i1 == 0)]
	18[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0)]
	19[(0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -2+i4-i5 >= 0 /\ -1-i6+i5 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i4-i5 >= 0)]
	17[(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -i6+i4-it21 >= 0 /\ -1+it21 >= 0 /\ -i6-it21+i5 >= 0)]
	
	Blocked

	{}
	{14[T], 19[T], 20[T]}
	{2[T], 14[T], 17[T], 18[T]}
	{2[T], 19[T]}
	{17[T]}
	
Covered

	Trace

	13[(-1+i1 == 0)]
	18[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0)]
	19[(0 >= 0 /\ -3+i1 >= 0 /\ 1 >= 0 /\ -2+i4-i5 >= 0 /\ -1-i6+i5 >= 0 /\ i4-i5 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1+i4-i5 >= 0)]
	
	Blocked

	{}
	{14[T], 19[T], 20[T]}
	{2[T], 14[T], 17[T], 18[T]}
	{2[T], 17[T], 19[T]}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	18[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{14[T], 19[T], 20[T]}
	{2[T], 14[T], 17[T], 18[T], 19[T]}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	
	Blocked

	{}
	{14[T], 18[T], 19[T], 20[T]}
	
Step with 2

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i6+i4 >= 0)]
	
	Blocked

	{}
	{14[T], 18[T], 19[T], 20[T]}
	{}
	
Step with 16

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i6+i4 >= 0)]
	16[(-4+i1 == 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{14[T], 18[T], 19[T], 20[T]}
	{}
	{}
	
Covered

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i6+i4 >= 0)]
	
	Blocked

	{}
	{14[T], 18[T], 19[T], 20[T]}
	{16[T]}
	
Step with 15

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i6+i4 >= 0)]
	15[(-1-i6+i5 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{14[T], 18[T], 19[T], 20[T]}
	{16[T]}
	{}
	
Covered

	Trace

	13[(-1+i1 == 0)]
	2[(-3+i1 == 0 /\ -1-i6+i4 >= 0)]
	
	Blocked

	{}
	{14[T], 18[T], 19[T], 20[T]}
	{15[T], 16[T]}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	
	Blocked

	{}
	{2[T], 14[T], 18[T], 19[T], 20[T]}
	
Step with 17

	Trace

	13[(-1+i1 == 0)]
	17[(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -i6+i4-it21 >= 0 /\ -1+it21 >= 0 /\ -i6-it21+i5 >= 0)]
	
	Blocked

	{}
	{2[T], 14[T], 18[T], 19[T], 20[T]}
	{17[T]}
	
Step with 14

	Trace

	13[(-1+i1 == 0)]
	17[(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -i6+i4-it21 >= 0 /\ -1+it21 >= 0 /\ -i6-it21+i5 >= 0)]
	14[(-3+i1 == 0 /\ i6-i4 >= 0)]
	
	Blocked

	{}
	{2[T], 14[T], 18[T], 19[T], 20[T]}
	{17[T]}
	{}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	17[(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -i6+i4-it21 >= 0 /\ -1+it21 >= 0 /\ -i6-it21+i5 >= 0)]
	
	Blocked

	{}
	{2[T], 14[T], 18[T], 19[T], 20[T]}
	{14[T], 17[T]}
	
Step with 2

	Trace

	13[(-1+i1 == 0)]
	17[(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -i6+i4-it21 >= 0 /\ -1+it21 >= 0 /\ -i6-it21+i5 >= 0)]
	2[(-3+i1 == 0 /\ -1-i6+i4 >= 0)]
	
	Blocked

	{}
	{2[T], 14[T], 18[T], 19[T], 20[T]}
	{14[T], 17[T]}
	{}
	
Step with 16

	Trace

	13[(-1+i1 == 0)]
	17[(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -i6+i4-it21 >= 0 /\ -1+it21 >= 0 /\ -i6-it21+i5 >= 0)]
	2[(-3+i1 == 0 /\ -1-i6+i4 >= 0)]
	16[(-4+i1 == 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{2[T], 14[T], 18[T], 19[T], 20[T]}
	{14[T], 17[T]}
	{}
	{}
	
Covered

	Trace

	13[(-1+i1 == 0)]
	17[(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -i6+i4-it21 >= 0 /\ -1+it21 >= 0 /\ -i6-it21+i5 >= 0)]
	2[(-3+i1 == 0 /\ -1-i6+i4 >= 0)]
	
	Blocked

	{}
	{2[T], 14[T], 18[T], 19[T], 20[T]}
	{14[T], 17[T]}
	{16[T]}
	
Step with 15

	Trace

	13[(-1+i1 == 0)]
	17[(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -i6+i4-it21 >= 0 /\ -1+it21 >= 0 /\ -i6-it21+i5 >= 0)]
	2[(-3+i1 == 0 /\ -1-i6+i4 >= 0)]
	15[(-1-i6+i5 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{2[T], 14[T], 18[T], 19[T], 20[T]}
	{14[T], 17[T]}
	{16[T]}
	{}
	
Covered

	Trace

	13[(-1+i1 == 0)]
	17[(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -i6+i4-it21 >= 0 /\ -1+it21 >= 0 /\ -i6-it21+i5 >= 0)]
	2[(-3+i1 == 0 /\ -1-i6+i4 >= 0)]
	
	Blocked

	{}
	{2[T], 14[T], 18[T], 19[T], 20[T]}
	{14[T], 17[T]}
	{15[T], 16[T]}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	17[(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -i6+i4-it21 >= 0 /\ -1+it21 >= 0 /\ -i6-it21+i5 >= 0)]
	
	Blocked

	{}
	{2[T], 14[T], 18[T], 19[T], 20[T]}
	{2[T], 14[T], 17[T]}
	
Step with 18

	Trace

	13[(-1+i1 == 0)]
	17[(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -i6+i4-it21 >= 0 /\ -1+it21 >= 0 /\ -i6-it21+i5 >= 0)]
	18[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{2[T], 14[T], 18[T], 19[T], 20[T]}
	{2[T], 14[T], 17[T]}
	{18[T]}
	
Covered

	Trace

	13[(-1+i1 == 0)]
	17[(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -i6+i4-it21 >= 0 /\ -1+it21 >= 0 /\ -i6-it21+i5 >= 0)]
	
	Blocked

	{}
	{2[T], 14[T], 18[T], 19[T], 20[T]}
	{2[T], 14[T], 17[T], 18[T]}
	
Step with 20

	Trace

	13[(-1+i1 == 0)]
	17[(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -i6+i4-it21 >= 0 /\ -1+it21 >= 0 /\ -i6-it21+i5 >= 0)]
	20[(0 >= 0 /\ -3+i1 >= 0 /\ -2-i6+i4 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{2[T], 14[T], 18[T], 19[T], 20[T]}
	{2[T], 14[T], 17[T], 18[T]}
	{20[T]}
	
Step with 14

	Trace

	13[(-1+i1 == 0)]
	17[(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -i6+i4-it21 >= 0 /\ -1+it21 >= 0 /\ -i6-it21+i5 >= 0)]
	20[(0 >= 0 /\ -3+i1 >= 0 /\ -2-i6+i4 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0)]
	14[(-3+i1 == 0 /\ i6-i4 >= 0)]
	
	Blocked

	{}
	{2[T], 14[T], 18[T], 19[T], 20[T]}
	{2[T], 14[T], 17[T], 18[T]}
	{18[T], 20[T]}
	{}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	17[(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -i6+i4-it21 >= 0 /\ -1+it21 >= 0 /\ -i6-it21+i5 >= 0)]
	20[(0 >= 0 /\ -3+i1 >= 0 /\ -2-i6+i4 >= 0 /\ 3-i1 >= 0 /\ 3-i1 == 0 /\ -1-i6+i4 >= 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{2[T], 14[T], 18[T], 19[T], 20[T]}
	{2[T], 14[T], 17[T], 18[T]}
	{14[T], 18[T], 20[T]}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	17[(-3+i1 >= 0 /\ 3-i1 >= 0 /\ -i6+i4-it21 >= 0 /\ -1+it21 >= 0 /\ -i6-it21+i5 >= 0)]
	
	Blocked

	{}
	{2[T], 14[T], 18[T], 19[T], 20[T]}
	{2[T], 14[T], 17[T], 18[T], 20[T]}
	
Backtrack

	Trace

	13[(-1+i1 == 0)]
	
	Blocked

	{}
	{2[T], 14[T], 17[T], 18[T], 19[T], 20[T]}
	
Backtrack

	Trace

	Blocked

	{13[T]}
	
Accept

Poly(n^1)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  
  Locations:  l0, l1, l2, l3, l4, l5, l6, l7
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂) → l6(X₀, X₁, X₂)
  t₂: l1(X₀, X₁, X₂) → l2(X₀, X₁, X₂) :|: 1+X₂ ≤ X₀
  t₃: l1(X₀, X₁, X₂) → l5(X₀, X₁, X₂) :|: X₀ ≤ X₂
  t₄: l2(X₀, X₁, X₂) → l3(X₀, X₁, X₂) :|: 1+X₂ ≤ X₁
  t₅: l2(X₀, X₁, X₂) → l4(X₀, X₁, X₂) :|: X₁ ≤ X₂
  t₆: l3(X₀, X₁, X₂) → l1(X₀, X₁, 1+X₂)
  t₇: l4(X₀, X₁, X₂) → l1(X₀, 1+X₁, X₂)
  t₈: l5(X₀, X₁, X₂) → l7(X₀, X₁, X₂)
  t₁: l6(X₀, X₁, X₂) → l1(X₁, X₂, X₀)


Preprocessing
  Found invariant 1+X₂ ≤ X₀ for location l2


  Found invariant X₀ ≤ X₂ for location l7


  Found invariant X₀ ≤ X₂ for location l5


  Found invariant 1+X₂ ≤ X₀ ∧ X₁ ≤ X₂ ∧ 1+X₁ ≤ X₀ for location l4


  Found invariant 1+X₂ ≤ X₁ ∧ 1+X₂ ≤ X₀ for location l3


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  
  Locations:  l0, l1, l2, l3, l4, l5, l6, l7
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂) → l6(X₀, X₁, X₂)
  t₂: l1(X₀, X₁, X₂) → l2(X₀, X₁, X₂) :|: 1+X₂ ≤ X₀
  t₃: l1(X₀, X₁, X₂) → l5(X₀, X₁, X₂) :|: X₀ ≤ X₂
  t₄: l2(X₀, X₁, X₂) → l3(X₀, X₁, X₂) :|: 1+X₂ ≤ X₁ ∧ 1+X₂ ≤ X₀
  t₅: l2(X₀, X₁, X₂) → l4(X₀, X₁, X₂) :|: X₁ ≤ X₂ ∧ 1+X₂ ≤ X₀
  t₆: l3(X₀, X₁, X₂) → l1(X₀, X₁, 1+X₂) :|: 1+X₂ ≤ X₀ ∧ 1+X₂ ≤ X₁
  t₇: l4(X₀, X₁, X₂) → l1(X₀, 1+X₁, X₂) :|: 1+X₁ ≤ X₀ ∧ 1+X₂ ≤ X₀ ∧ X₁ ≤ X₂
  t₈: l5(X₀, X₁, X₂) → l7(X₀, X₁, X₂) :|: X₀ ≤ X₂
  t₁: l6(X₀, X₁, X₂) → l1(X₁, X₂, X₀)


MPRF for transition t₄: l2(X₀, X₁, X₂) → l3(X₀, X₁, X₂) :|: 1+X₂ ≤ X₁ ∧ 1+X₂ ≤ X₀ of depth 1:
  new bound:
    X₀+X₁ {O(n)}

  MPRF:
    • l1: [X₀-X₂]
    • l2: [X₀-X₂]
    • l3: [X₀-1-X₂]
    • l4: [X₀-X₂]




MPRF for transition t₅: l2(X₀, X₁, X₂) → l4(X₀, X₁, X₂) :|: X₁ ≤ X₂ ∧ 1+X₂ ≤ X₀ of depth 1:
  new bound:
    X₁+X₂ {O(n)}

  MPRF:
    • l1: [X₀-X₁]
    • l2: [X₀-X₁]
    • l3: [X₀-X₁]
    • l4: [X₀-1-X₁]




MPRF for transition t₆: l3(X₀, X₁, X₂) → l1(X₀, X₁, 1+X₂) :|: 1+X₂ ≤ X₀ ∧ 1+X₂ ≤ X₁ of depth 1:
  new bound:
    X₀+X₁ {O(n)}

  MPRF:
    • l1: [X₀-X₂]
    • l2: [X₀-X₂]
    • l3: [X₀-X₂]
    • l4: [X₀-X₂]




MPRF for transition t₇: l4(X₀, X₁, X₂) → l1(X₀, 1+X₁, X₂) :|: 1+X₁ ≤ X₀ ∧ 1+X₂ ≤ X₀ ∧ X₁ ≤ X₂ of depth 1:
  new bound:
    X₁+X₂ {O(n)}

  MPRF:
    • l1: [X₀-X₁]
    • l2: [X₀-X₁]
    • l3: [X₀-X₁]
    • l4: [X₀-X₁]




  knowledge_propagation leads to new time bound 2⋅X₁+X₀+X₂+1 {O(n)} for transition t₂: l1(X₀, X₁, X₂) → l2(X₀, X₁, X₂) :|: 1+X₂ ≤ X₀


All Bounds
Timebounds
  Overall timebound:3⋅X₀+3⋅X₂+6⋅X₁+5 {O(n)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 2⋅X₁+X₀+X₂+1 {O(n)}
    t₃: 1 {O(1)}
    t₄: X₀+X₁ {O(n)}
    t₅: X₁+X₂ {O(n)}
    t₆: X₀+X₁ {O(n)}
    t₇: X₁+X₂ {O(n)}
    t₈: 1 {O(1)}


Costbounds
  Overall costbound: 3⋅X₀+3⋅X₂+6⋅X₁+5 {O(n)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 2⋅X₁+X₀+X₂+1 {O(n)}
    t₃: 1 {O(1)}
    t₄: X₀+X₁ {O(n)}
    t₅: X₁+X₂ {O(n)}
    t₆: X₀+X₁ {O(n)}
    t₇: X₁+X₂ {O(n)}
    t₈: 1 {O(1)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₀, X₂: X₂ {O(n)}
    t₁, X₀: X₁ {O(n)}
    t₁, X₁: X₂ {O(n)}
    t₁, X₂: X₀ {O(n)}
    t₂, X₀: X₁ {O(n)}
    t₂, X₁: 2⋅X₂+X₁ {O(n)}
    t₂, X₂: 2⋅X₀+X₁ {O(n)}
    t₃, X₀: 2⋅X₁ {O(n)}
    t₃, X₁: 3⋅X₂+X₁ {O(n)}
    t₃, X₂: 3⋅X₀+X₁ {O(n)}
    t₄, X₀: X₁ {O(n)}
    t₄, X₁: 2⋅X₂+X₁ {O(n)}
    t₄, X₂: 2⋅X₀+X₁ {O(n)}
    t₅, X₀: X₁ {O(n)}
    t₅, X₁: 2⋅X₂+X₁ {O(n)}
    t₅, X₂: 2⋅X₀+X₁ {O(n)}
    t₆, X₀: X₁ {O(n)}
    t₆, X₁: 2⋅X₂+X₁ {O(n)}
    t₆, X₂: 2⋅X₀+X₁ {O(n)}
    t₇, X₀: X₁ {O(n)}
    t₇, X₁: 2⋅X₂+X₁ {O(n)}
    t₇, X₂: 2⋅X₀+X₁ {O(n)}
    t₈, X₀: 2⋅X₁ {O(n)}
    t₈, X₁: 3⋅X₂+X₁ {O(n)}
    t₈, X₂: 3⋅X₀+X₁ {O(n)}

