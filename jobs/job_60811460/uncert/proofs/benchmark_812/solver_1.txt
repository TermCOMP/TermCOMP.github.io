MAYBE

# LoAT Proof:
WORST_CASE(Omega(n^2),?)

WORST_CASE(Omega(n^1),?)
WORST_CASE(Omega(n^2),?)
Initial ITS

Start location: l0

Location map:
LoAT_sink -> 0
l0 -> 1
l1 -> 2
l2 -> 3
l3 -> 4
l4 -> 5

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-2+i1 == 0 /\ i8 > 0) /\ i1'=3, i3'=1+i3, i8'=-1+i8
   2: -3+i1 == 0 /\ i1'=4, i3'=1+i3, i6'=i4+i5, i7'=i5
   3: -3+i1 == 0 /\ i1'=4, i3'=1+i3, i6'=i5, i7'=i4+i5
   4: -4+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=i6+i7
   5: (-2+i1 == 0 /\ i8 <= 0) /\ i1'=5, i3'=1+i3
   6: (i4 >= 0 /\ -5+i1 == 0) /\ i1'=5, i3'=1+i3, i4'=-1+i4

Dependency graph:
0 -> 1, 0 -> 5
1 -> 2, 1 -> 3
2 -> 4
3 -> 4
4 -> 1, 4 -> 5
5 -> 6
6 -> 6

Chained Linear Paths

	Applied Chaining

	First rule:
	-3+i1 == 0 /\ i1'=4, i3'=1+i3, i6'=i4+i5, i7'=i5
	Second rule:
	-4+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=i6+i7
	New rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=2, i3'=2+i3, i4'=i4+2*i5, i6'=i4+i5, i7'=i5
	
	Applied Deletion

	Removed the following rules: 2
	
	Applied Chaining

	First rule:
	-3+i1 == 0 /\ i1'=4, i3'=1+i3, i6'=i5, i7'=i4+i5
	Second rule:
	-4+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=i6+i7
	New rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=2, i3'=2+i3, i4'=i4+2*i5, i6'=i5, i7'=i4+i5
	
	Applied Deletion

	Removed the following rules: 3, 4

Start location: l0

Location map:
LoAT_sink -> 0
l0 -> 1
l1 -> 2
l2 -> 3
l3 -> 4
l4 -> 5

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-2+i1 == 0 /\ i8 > 0) /\ i1'=3, i3'=1+i3, i8'=-1+i8
   5: (-2+i1 == 0 /\ i8 <= 0) /\ i1'=5, i3'=1+i3
   6: (i4 >= 0 /\ -5+i1 == 0) /\ i1'=5, i3'=1+i3, i4'=-1+i4
   7: (0 == 0 /\ -3+i1 == 0) /\ i1'=2, i3'=2+i3, i4'=i4+2*i5, i6'=i4+i5, i7'=i5
   8: (0 == 0 /\ -3+i1 == 0) /\ i1'=2, i3'=2+i3, i4'=i4+2*i5, i6'=i5, i7'=i4+i5

Dependency graph:
0 -> 1, 0 -> 5
1 -> 7, 1 -> 8
5 -> 6
6 -> 6
7 -> 1, 7 -> 5
8 -> 1, 8 -> 5

Preprocessed Transitions

	Simplified Guard

	Original rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=2, i3'=2+i3, i4'=i4+2*i5, i6'=i4+i5, i7'=i5
	New rule:
	-3+i1 == 0 /\ i1'=2, i3'=2+i3, i4'=i4+2*i5, i6'=i4+i5, i7'=i5
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=2, i3'=2+i3, i4'=i4+2*i5, i6'=i5, i7'=i4+i5
	New rule:
	-3+i1 == 0 /\ i1'=2, i3'=2+i3, i4'=i4+2*i5, i6'=i5, i7'=i4+i5

Start location: l0

Location map:
LoAT_sink -> 0
l0 -> 1
l1 -> 2
l2 -> 3
l3 -> 4
l4 -> 5

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-2+i1 == 0 /\ i8 > 0) /\ i1'=3, i3'=1+i3, i8'=-1+i8
   5: (-2+i1 == 0 /\ i8 <= 0) /\ i1'=5, i3'=1+i3
   6: (i4 >= 0 /\ -5+i1 == 0) /\ i1'=5, i3'=1+i3, i4'=-1+i4
   9: -3+i1 == 0 /\ i1'=2, i3'=2+i3, i4'=i4+2*i5, i6'=i4+i5, i7'=i5
  10: -3+i1 == 0 /\ i1'=2, i3'=2+i3, i4'=i4+2*i5, i6'=i5, i7'=i4+i5

Dependency graph:
0 -> 1, 0 -> 5
1 -> 9, 1 -> 10
5 -> 6
6 -> 6
9 -> 1, 9 -> 5
10 -> 1, 10 -> 5

Step with 0

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 5

	Trace

	0[(-1+i1 == 0)]
	5[(-2+i1 == 0 /\ i8 <= 0)]
	
	Blocked

	{}
	{}
	{}
	
Step with 6

	Trace

	0[(-1+i1 == 0)]
	5[(-2+i1 == 0 /\ i8 <= 0)]
	6[(i4 >= 0 /\ -5+i1 == 0)]
	
	Blocked

	{}
	{}
	{}
	{}
	
Poly(n^1)

Accelerate

	Loop Acceleration

	Original rule:
	(i4 >= 0 /\ -5+i1 == 0) /\ i1'=5, i3'=1+i3, i4'=-1+i4
	New rule:
	(-1+it22 >= 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0 /\ 1+i4-it22 >= 0) /\ i1'=i1, i3'=i3+it22, i4'=i4-it22

		i4 >= 0 [0]: montonic decrease yields 1+i4-it22 >= 0
		
		-5+i1 >= 0 [0]: unchanged
		
		5-i1 >= 0 [0]: unchanged
		
		Replacement map: {i4 >= 0 -> 1+i4-it22 >= 0, -5+i1 >= 0 -> -5+i1 >= 0, 5-i1 >= 0 -> 5-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-1+it22 >= 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0 /\ 1+i4-it22 >= 0) /\ i1'=i1, i3'=i3+it22, i4'=i4-it22
	New rule:
	(-1+it22 >= 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0 /\ 1+i4-it22 >= 0) /\ i3'=i3+it22, i4'=i4-it22
	
	Instantiation

	Original rule:
	(-1+it22 >= 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0 /\ 1+i4-it22 >= 0) /\ i3'=i3+it22, i4'=i4-it22
	New rule:
	(0 >= 0 /\ i4 >= 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0) /\ i3'=1+i3+i4, i4'=-1

Start location: l0

Location map:
LoAT_sink -> 0
l0 -> 1
l1 -> 2
l2 -> 3
l3 -> 4
l4 -> 5

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-2+i1 == 0 /\ i8 > 0) /\ i1'=3, i3'=1+i3, i8'=-1+i8
   5: (-2+i1 == 0 /\ i8 <= 0) /\ i1'=5, i3'=1+i3
   6: (i4 >= 0 /\ -5+i1 == 0) /\ i1'=5, i3'=1+i3, i4'=-1+i4
   9: -3+i1 == 0 /\ i1'=2, i3'=2+i3, i4'=i4+2*i5, i6'=i4+i5, i7'=i5
  10: -3+i1 == 0 /\ i1'=2, i3'=2+i3, i4'=i4+2*i5, i6'=i5, i7'=i4+i5
  11: (0 >= 0 /\ i4 >= 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0) /\ i3'=1+i3+i4, i4'=-1

Dependency graph:
0 -> 1, 0 -> 5
1 -> 9, 1 -> 10
5 -> 6, 5 -> 11
6 -> 6, 6 -> 11
9 -> 1, 9 -> 5
10 -> 1, 10 -> 5
11 -> 6

	Trace

	0[(-1+i1 == 0)]
	5[(-2+i1 == 0 /\ i8 <= 0)]
	11[(0 >= 0 /\ i4 >= 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0)]
	
	Blocked

	{}
	{}
	{}
	{6[T], 11[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	5[(-2+i1 == 0 /\ i8 <= 0)]
	
	Blocked

	{}
	{}
	{11[T]}
	
Step with 6

	Trace

	0[(-1+i1 == 0)]
	5[(-2+i1 == 0 /\ i8 <= 0)]
	6[(i4 >= 0 /\ -5+i1 == 0)]
	
	Blocked

	{}
	{}
	{11[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	5[(-2+i1 == 0 /\ i8 <= 0)]
	
	Blocked

	{}
	{}
	{6[T], 11[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{5[T]}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	1[(-2+i1 == 0 /\ i8 > 0)]
	
	Blocked

	{}
	{5[T]}
	{}
	
Step with 9

	Trace

	0[(-1+i1 == 0)]
	1[(-2+i1 == 0 /\ i8 > 0)]
	9[(-3+i1 == 0)]
	
	Blocked

	{}
	{5[T]}
	{}
	{}
	
Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -2+i1 == 0 /\ i8 > 0) /\ i1'=2, i3'=3+i3, i4'=i4+2*i5, i6'=i4+i5, i7'=i5, i8'=-1+i8
		New rule:
		(-2+i1 == 0 /\ i8 > 0) /\ i1'=2, i3'=3+i3, i4'=i4+2*i5, i6'=i4+i5, i7'=i5, i8'=-1+i8

	Loop Acceleration

	Original rule:
	(-2+i1 == 0 /\ i8 > 0) /\ i1'=2, i3'=3+i3, i4'=i4+2*i5, i6'=i4+i5, i7'=i5, i8'=-1+i8
	New rule:
	(-1+it59 >= 0 /\ 1-it59+i8 > 0 /\ -2+i1 >= 0 /\ i8 > 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+3*it59, i4'=2*it59*i5+i4, i6'=2*(-1+it59)*i5+i4+i5, i7'=i5, i8'=-it59+i8

		-2+i1 >= 0 [0]: unchanged
		
		i8 > 0 [0]: montonic decrease yields (1-it59+i8 > 0 /\ i8 > 0)
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, i8 > 0 -> (1-it59+i8 > 0 /\ i8 > 0), 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-1+it59 >= 0 /\ 1-it59+i8 > 0 /\ -2+i1 >= 0 /\ i8 > 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+3*it59, i4'=2*it59*i5+i4, i6'=2*(-1+it59)*i5+i4+i5, i7'=i5, i8'=-it59+i8
	New rule:
	(-1+it59 >= 0 /\ 1-it59+i8 > 0 /\ -2+i1 >= 0 /\ i8 > 0 /\ 2-i1 >= 0) /\ i3'=i3+3*it59, i4'=2*it59*i5+i4, i6'=2*(-1+it59)*i5+i4+i5, i7'=i5, i8'=-it59+i8
	
	Instantiation

	Original rule:
	(-1+it59 >= 0 /\ 1-it59+i8 > 0 /\ -2+i1 >= 0 /\ i8 > 0 /\ 2-i1 >= 0) /\ i3'=i3+3*it59, i4'=2*it59*i5+i4, i6'=2*(-1+it59)*i5+i4+i5, i7'=i5, i8'=-it59+i8
	New rule:
	(1 > 0 /\ -2+i1 >= 0 /\ i8 > 0 /\ -1+i8 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+3*i8, i4'=2*i8*i5+i4, i6'=2*(-1+i8)*i5+i4+i5, i7'=i5, i8'=0

Start location: l0

Location map:
LoAT_sink -> 0
l0 -> 1
l1 -> 2
l2 -> 3
l3 -> 4
l4 -> 5

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-2+i1 == 0 /\ i8 > 0) /\ i1'=3, i3'=1+i3, i8'=-1+i8
   5: (-2+i1 == 0 /\ i8 <= 0) /\ i1'=5, i3'=1+i3
   6: (i4 >= 0 /\ -5+i1 == 0) /\ i1'=5, i3'=1+i3, i4'=-1+i4
   9: -3+i1 == 0 /\ i1'=2, i3'=2+i3, i4'=i4+2*i5, i6'=i4+i5, i7'=i5
  10: -3+i1 == 0 /\ i1'=2, i3'=2+i3, i4'=i4+2*i5, i6'=i5, i7'=i4+i5
  11: (0 >= 0 /\ i4 >= 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0) /\ i3'=1+i3+i4, i4'=-1
  12: (1 > 0 /\ -2+i1 >= 0 /\ i8 > 0 /\ -1+i8 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+3*i8, i4'=2*i8*i5+i4, i6'=2*(-1+i8)*i5+i4+i5, i7'=i5, i8'=0

Dependency graph:
0 -> 1, 0 -> 5, 0 -> 12
1 -> 9, 1 -> 10
5 -> 6, 5 -> 11
6 -> 6, 6 -> 11
9 -> 1, 9 -> 5, 9 -> 12
10 -> 1, 10 -> 5, 10 -> 12
11 -> 6
12 -> 1, 12 -> 5

	Trace

	0[(-1+i1 == 0)]
	12[(1 > 0 /\ -2+i1 >= 0 /\ i8 > 0 /\ -1+i8 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{5[T]}
	{12[T]}
	
Step with 5

	Trace

	0[(-1+i1 == 0)]
	12[(1 > 0 /\ -2+i1 >= 0 /\ i8 > 0 /\ -1+i8 >= 0 /\ 2-i1 >= 0)]
	5[(-2+i1 == 0 /\ i8 <= 0)]
	
	Blocked

	{}
	{5[T]}
	{12[T]}
	{}
	
Step with 11

	Trace

	0[(-1+i1 == 0)]
	12[(1 > 0 /\ -2+i1 >= 0 /\ i8 > 0 /\ -1+i8 >= 0 /\ 2-i1 >= 0)]
	5[(-2+i1 == 0 /\ i8 <= 0)]
	11[(0 >= 0 /\ i4 >= 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0)]
	
	Blocked

	{}
	{5[T]}
	{12[T]}
	{}
	{11[T]}
	
Poly(n^2)

Backtrack

	Trace

	0[(-1+i1 == 0)]
	12[(1 > 0 /\ -2+i1 >= 0 /\ i8 > 0 /\ -1+i8 >= 0 /\ 2-i1 >= 0)]
	5[(-2+i1 == 0 /\ i8 <= 0)]
	
	Blocked

	{}
	{5[T]}
	{12[T]}
	{11[T]}
	
Step with 6

	Trace

	0[(-1+i1 == 0)]
	12[(1 > 0 /\ -2+i1 >= 0 /\ i8 > 0 /\ -1+i8 >= 0 /\ 2-i1 >= 0)]
	5[(-2+i1 == 0 /\ i8 <= 0)]
	6[(i4 >= 0 /\ -5+i1 == 0)]
	
	Blocked

	{}
	{5[T]}
	{12[T]}
	{11[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	12[(1 > 0 /\ -2+i1 >= 0 /\ i8 > 0 /\ -1+i8 >= 0 /\ 2-i1 >= 0)]
	5[(-2+i1 == 0 /\ i8 <= 0)]
	
	Blocked

	{}
	{5[T]}
	{12[T]}
	{6[T], 11[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	12[(1 > 0 /\ -2+i1 >= 0 /\ i8 > 0 /\ -1+i8 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{5[T]}
	{5[T], 12[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{5[T], 12[T]}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	1[(-2+i1 == 0 /\ i8 > 0)]
	
	Blocked

	{}
	{5[T], 12[T]}
	{}
	
Step with 9

	Trace

	0[(-1+i1 == 0)]
	1[(-2+i1 == 0 /\ i8 > 0)]
	9[(-3+i1 == 0)]
	
	Blocked

	{}
	{5[T], 12[T]}
	{}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	1[(-2+i1 == 0 /\ i8 > 0)]
	
	Blocked

	{}
	{5[T], 12[T]}
	{9[T]}
	
Step with 10

	Trace

	0[(-1+i1 == 0)]
	1[(-2+i1 == 0 /\ i8 > 0)]
	10[(-3+i1 == 0)]
	
	Blocked

	{}
	{5[T], 12[T]}
	{9[T]}
	{}
	
Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -2+i1 == 0 /\ i8 > 0) /\ i1'=2, i3'=3+i3, i4'=i4+2*i5, i6'=i5, i7'=i4+i5, i8'=-1+i8
		New rule:
		(-2+i1 == 0 /\ i8 > 0) /\ i1'=2, i3'=3+i3, i4'=i4+2*i5, i6'=i5, i7'=i4+i5, i8'=-1+i8

	Loop Acceleration

	Original rule:
	(-2+i1 == 0 /\ i8 > 0) /\ i1'=2, i3'=3+i3, i4'=i4+2*i5, i6'=i5, i7'=i4+i5, i8'=-1+i8
	New rule:
	(-2+i1 >= 0 /\ i8 > 0 /\ 1-it119+i8 > 0 /\ 2-i1 >= 0 /\ -1+it119 >= 0) /\ i1'=i1, i3'=3*it119+i3, i4'=i4+2*it119*i5, i6'=i5, i7'=i4+2*i5*(-1+it119)+i5, i8'=-it119+i8

		-2+i1 >= 0 [0]: unchanged
		
		i8 > 0 [0]: montonic decrease yields (i8 > 0 /\ 1-it119+i8 > 0)
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, i8 > 0 -> (i8 > 0 /\ 1-it119+i8 > 0), 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-2+i1 >= 0 /\ i8 > 0 /\ 1-it119+i8 > 0 /\ 2-i1 >= 0 /\ -1+it119 >= 0) /\ i1'=i1, i3'=3*it119+i3, i4'=i4+2*it119*i5, i6'=i5, i7'=i4+2*i5*(-1+it119)+i5, i8'=-it119+i8
	New rule:
	(-2+i1 >= 0 /\ i8 > 0 /\ 1-it119+i8 > 0 /\ 2-i1 >= 0 /\ -1+it119 >= 0) /\ i3'=3*it119+i3, i4'=i4+2*it119*i5, i6'=i5, i7'=i4+2*i5*(-1+it119)+i5, i8'=-it119+i8
	
	Instantiation

	Original rule:
	(-2+i1 >= 0 /\ i8 > 0 /\ 1-it119+i8 > 0 /\ 2-i1 >= 0 /\ -1+it119 >= 0) /\ i3'=3*it119+i3, i4'=i4+2*it119*i5, i6'=i5, i7'=i4+2*i5*(-1+it119)+i5, i8'=-it119+i8
	New rule:
	(1 > 0 /\ -2+i1 >= 0 /\ i8 > 0 /\ -1+i8 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+3*i8, i4'=2*i8*i5+i4, i6'=i5, i7'=2*(-1+i8)*i5+i4+i5, i8'=0

Start location: l0

Location map:
LoAT_sink -> 0
l0 -> 1
l1 -> 2
l2 -> 3
l3 -> 4
l4 -> 5

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-2+i1 == 0 /\ i8 > 0) /\ i1'=3, i3'=1+i3, i8'=-1+i8
   5: (-2+i1 == 0 /\ i8 <= 0) /\ i1'=5, i3'=1+i3
   6: (i4 >= 0 /\ -5+i1 == 0) /\ i1'=5, i3'=1+i3, i4'=-1+i4
   9: -3+i1 == 0 /\ i1'=2, i3'=2+i3, i4'=i4+2*i5, i6'=i4+i5, i7'=i5
  10: -3+i1 == 0 /\ i1'=2, i3'=2+i3, i4'=i4+2*i5, i6'=i5, i7'=i4+i5
  11: (0 >= 0 /\ i4 >= 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0) /\ i3'=1+i3+i4, i4'=-1
  12: (1 > 0 /\ -2+i1 >= 0 /\ i8 > 0 /\ -1+i8 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+3*i8, i4'=2*i8*i5+i4, i6'=2*(-1+i8)*i5+i4+i5, i7'=i5, i8'=0
  13: (1 > 0 /\ -2+i1 >= 0 /\ i8 > 0 /\ -1+i8 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+3*i8, i4'=2*i8*i5+i4, i6'=i5, i7'=2*(-1+i8)*i5+i4+i5, i8'=0

Dependency graph:
0 -> 1, 0 -> 5, 0 -> 12, 0 -> 13
1 -> 9, 1 -> 10
5 -> 6, 5 -> 11
6 -> 6, 6 -> 11
9 -> 1, 9 -> 5, 9 -> 12, 9 -> 13
10 -> 1, 10 -> 5, 10 -> 12, 10 -> 13
11 -> 6
12 -> 1, 12 -> 5, 12 -> 13
13 -> 1, 13 -> 5, 13 -> 12

	Trace

	0[(-1+i1 == 0)]
	13[(1 > 0 /\ -2+i1 >= 0 /\ i8 > 0 /\ -1+i8 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{5[T], 12[T]}
	{13[T]}
	
Step with 5

	Trace

	0[(-1+i1 == 0)]
	13[(1 > 0 /\ -2+i1 >= 0 /\ i8 > 0 /\ -1+i8 >= 0 /\ 2-i1 >= 0)]
	5[(-2+i1 == 0 /\ i8 <= 0)]
	
	Blocked

	{}
	{5[T], 12[T]}
	{1[T], 12[T], 13[T]}
	{}
	
Step with 11

	Trace

	0[(-1+i1 == 0)]
	13[(1 > 0 /\ -2+i1 >= 0 /\ i8 > 0 /\ -1+i8 >= 0 /\ 2-i1 >= 0)]
	5[(-2+i1 == 0 /\ i8 <= 0)]
	11[(0 >= 0 /\ i4 >= 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0)]
	
	Blocked

	{}
	{5[T], 12[T]}
	{1[T], 12[T], 13[T]}
	{}
	{11[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	13[(1 > 0 /\ -2+i1 >= 0 /\ i8 > 0 /\ -1+i8 >= 0 /\ 2-i1 >= 0)]
	5[(-2+i1 == 0 /\ i8 <= 0)]
	
	Blocked

	{}
	{5[T], 12[T]}
	{1[T], 12[T], 13[T]}
	{11[T]}
	
Step with 6

	Trace

	0[(-1+i1 == 0)]
	13[(1 > 0 /\ -2+i1 >= 0 /\ i8 > 0 /\ -1+i8 >= 0 /\ 2-i1 >= 0)]
	5[(-2+i1 == 0 /\ i8 <= 0)]
	6[(i4 >= 0 /\ -5+i1 == 0)]
	
	Blocked

	{}
	{5[T], 12[T]}
	{1[T], 12[T], 13[T]}
	{11[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	13[(1 > 0 /\ -2+i1 >= 0 /\ i8 > 0 /\ -1+i8 >= 0 /\ 2-i1 >= 0)]
	5[(-2+i1 == 0 /\ i8 <= 0)]
	
	Blocked

	{}
	{5[T], 12[T]}
	{1[T], 12[T], 13[T]}
	{6[T], 11[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	13[(1 > 0 /\ -2+i1 >= 0 /\ i8 > 0 /\ -1+i8 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{5[T], 12[T]}
	{1[T], 5[T], 12[T], 13[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{5[T], 12[T], 13[T]}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	1[(-2+i1 == 0 /\ i8 > 0)]
	
	Blocked

	{}
	{5[T], 12[T], 13[T]}
	{}
	
Step with 10

	Trace

	0[(-1+i1 == 0)]
	1[(-2+i1 == 0 /\ i8 > 0)]
	10[(-3+i1 == 0)]
	
	Blocked

	{}
	{5[T], 12[T], 13[T]}
	{}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	1[(-2+i1 == 0 /\ i8 > 0)]
	
	Blocked

	{}
	{5[T], 12[T], 13[T]}
	{10[T]}
	
Step with 9

	Trace

	0[(-1+i1 == 0)]
	1[(-2+i1 == 0 /\ i8 > 0)]
	9[(-3+i1 == 0)]
	
	Blocked

	{}
	{5[T], 12[T], 13[T]}
	{10[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	1[(-2+i1 == 0 /\ i8 > 0)]
	
	Blocked

	{}
	{5[T], 12[T], 13[T]}
	{9[T], 10[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{1[T], 5[T], 12[T], 13[T]}
	
Backtrack

	Trace

	Blocked

	{0[T]}
	
Accept

Poly(n^2)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(EXP))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄
  Temp_Vars:  
  Locations:  l0, l1, l2, l3, l4
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃, X₄) → l1(X₀, X₁, X₂, X₃, X₄)
  t₁: l1(X₀, X₁, X₂, X₃, X₄) → l2(X₀, X₁, X₂, X₃, X₄-1) :|: 1 ≤ X₄
  t₅: l1(X₀, X₁, X₂, X₃, X₄) → l3(X₀, X₁, X₂, X₃, X₄) :|: X₄ ≤ 0
  t₂: l2(X₀, X₁, X₂, X₃, X₄) → l4(X₀, X₁, X₀+X₁, X₁, X₄)
  t₃: l2(X₀, X₁, X₂, X₃, X₄) → l4(X₀, X₁, X₁, X₀+X₁, X₄)
  t₆: l3(X₀, X₁, X₂, X₃, X₄) → l3(X₀-1, X₁, X₂, X₃, X₄) :|: 0 ≤ X₀
  t₄: l4(X₀, X₁, X₂, X₃, X₄) → l1(X₂+X₃, X₁, X₂, X₃, X₄)


Preprocessing
  Found invariant 0 ≤ X₄ for location l2


  Found invariant 0 ≤ X₄ for location l4


  Found invariant X₄ ≤ 0 for location l3


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄
  Temp_Vars:  
  Locations:  l0, l1, l2, l3, l4
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃, X₄) → l1(X₀, X₁, X₂, X₃, X₄)
  t₁: l1(X₀, X₁, X₂, X₃, X₄) → l2(X₀, X₁, X₂, X₃, X₄-1) :|: 1 ≤ X₄
  t₅: l1(X₀, X₁, X₂, X₃, X₄) → l3(X₀, X₁, X₂, X₃, X₄) :|: X₄ ≤ 0
  t₂: l2(X₀, X₁, X₂, X₃, X₄) → l4(X₀, X₁, X₀+X₁, X₁, X₄) :|: 0 ≤ X₄
  t₃: l2(X₀, X₁, X₂, X₃, X₄) → l4(X₀, X₁, X₁, X₀+X₁, X₄) :|: 0 ≤ X₄
  t₆: l3(X₀, X₁, X₂, X₃, X₄) → l3(X₀-1, X₁, X₂, X₃, X₄) :|: 0 ≤ X₀ ∧ X₄ ≤ 0
  t₄: l4(X₀, X₁, X₂, X₃, X₄) → l1(X₂+X₃, X₁, X₂, X₃, X₄) :|: 0 ≤ X₄


MPRF for transition t₁: l1(X₀, X₁, X₂, X₃, X₄) → l2(X₀, X₁, X₂, X₃, X₄-1) :|: 1 ≤ X₄ of depth 1:
  new bound:
    X₄ {O(n)}

  MPRF:
    • l1: [X₄]
    • l2: [X₄]
    • l4: [X₄]




MPRF for transition t₂: l2(X₀, X₁, X₂, X₃, X₄) → l4(X₀, X₁, X₀+X₁, X₁, X₄) :|: 0 ≤ X₄ of depth 1:
  new bound:
    X₄ {O(n)}

  MPRF:
    • l1: [X₄]
    • l2: [1+X₄]
    • l4: [X₄]




MPRF for transition t₃: l2(X₀, X₁, X₂, X₃, X₄) → l4(X₀, X₁, X₁, X₀+X₁, X₄) :|: 0 ≤ X₄ of depth 1:
  new bound:
    X₄ {O(n)}

  MPRF:
    • l1: [X₄]
    • l2: [1+X₄]
    • l4: [X₄]




MPRF for transition t₄: l4(X₀, X₁, X₂, X₃, X₄) → l1(X₂+X₃, X₁, X₂, X₃, X₄) :|: 0 ≤ X₄ of depth 1:
  new bound:
    X₄ {O(n)}

  MPRF:
    • l1: [X₄]
    • l2: [1+X₄]
    • l4: [1+X₄]




MPRF for transition t₆: l3(X₀, X₁, X₂, X₃, X₄) → l3(X₀-1, X₁, X₂, X₃, X₄) :|: 0 ≤ X₀ ∧ X₄ ≤ 0 of depth 1:
  new bound:
    2⋅2^X₄⋅X₁⋅X₄+2^X₄⋅3⋅X₁+2^X₄⋅X₀+X₀+1 {O(EXP)}

  MPRF:
    • l3: [1+X₀]




  Found invariant 0 ≤ X₄ for location l2


  Found invariant 0 ≤ X₄ for location l4


  Found invariant X₄ ≤ 0 for location l3


  Found invariant X₄ ≤ 0 ∧ X₄ ≤ 1+X₀ ∧ 0 ≤ 1+X₀ for location l3_v1


All Bounds
Timebounds
  Overall timebound:2⋅2^X₄⋅X₁⋅X₄+2^X₄⋅3⋅X₁+2^X₄⋅X₀+4⋅X₄+X₀+3 {O(EXP)}
    t₀: 1 {O(1)}
    t₁: X₄ {O(n)}
    t₂: X₄ {O(n)}
    t₃: X₄ {O(n)}
    t₄: X₄ {O(n)}
    t₅: 1 {O(1)}
    t₆: 2⋅2^X₄⋅X₁⋅X₄+2^X₄⋅3⋅X₁+2^X₄⋅X₀+X₀+1 {O(EXP)}


Costbounds
  Overall costbound: 2⋅2^X₄⋅X₁⋅X₄+2^X₄⋅3⋅X₁+2^X₄⋅X₀+4⋅X₄+X₀+3 {O(EXP)}
    t₀: 1 {O(1)}
    t₁: X₄ {O(n)}
    t₂: X₄ {O(n)}
    t₃: X₄ {O(n)}
    t₄: X₄ {O(n)}
    t₅: 1 {O(1)}
    t₆: 2⋅2^X₄⋅X₁⋅X₄+2^X₄⋅3⋅X₁+2^X₄⋅X₀+X₀+1 {O(EXP)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₀, X₂: X₂ {O(n)}
    t₀, X₃: X₃ {O(n)}
    t₀, X₄: X₄ {O(n)}
    t₁, X₀: 2⋅2^X₄⋅X₁⋅X₄+2^X₄⋅3⋅X₁+2^X₄⋅X₀ {O(EXP)}
    t₁, X₁: X₁ {O(n)}
    t₁, X₂: 2⋅2^X₄⋅X₁⋅X₄+2^X₄⋅3⋅X₁+2^X₄⋅X₀+X₁+X₂ {O(EXP)}
    t₁, X₃: 2⋅2^X₄⋅X₁⋅X₄+2^X₄⋅3⋅X₁+2^X₄⋅X₀+X₁+X₃ {O(EXP)}
    t₁, X₄: X₄ {O(n)}
    t₂, X₀: 2⋅2^X₄⋅X₁⋅X₄+2^X₄⋅3⋅X₁+2^X₄⋅X₀ {O(EXP)}
    t₂, X₁: X₁ {O(n)}
    t₂, X₂: 2⋅2^X₄⋅X₁⋅X₄+2^X₄⋅3⋅X₁+2^X₄⋅X₀ {O(EXP)}
    t₂, X₃: X₁ {O(n)}
    t₂, X₄: X₄ {O(n)}
    t₃, X₀: 2⋅2^X₄⋅X₁⋅X₄+2^X₄⋅3⋅X₁+2^X₄⋅X₀ {O(EXP)}
    t₃, X₁: X₁ {O(n)}
    t₃, X₂: X₁ {O(n)}
    t₃, X₃: 2⋅2^X₄⋅X₁⋅X₄+2^X₄⋅3⋅X₁+2^X₄⋅X₀ {O(EXP)}
    t₃, X₄: X₄ {O(n)}
    t₄, X₀: 2⋅2^X₄⋅X₁⋅X₄+2^X₄⋅3⋅X₁+2^X₄⋅X₀ {O(EXP)}
    t₄, X₁: X₁ {O(n)}
    t₄, X₂: 2⋅2^X₄⋅X₁⋅X₄+2^X₄⋅3⋅X₁+2^X₄⋅X₀+X₁ {O(EXP)}
    t₄, X₃: 2⋅2^X₄⋅X₁⋅X₄+2^X₄⋅3⋅X₁+2^X₄⋅X₀+X₁ {O(EXP)}
    t₄, X₄: X₄ {O(n)}
    t₅, X₀: 2⋅2^X₄⋅X₁⋅X₄+2^X₄⋅3⋅X₁+2^X₄⋅X₀+X₀ {O(EXP)}
    t₅, X₁: 2⋅X₁ {O(n)}
    t₅, X₂: 2⋅2^X₄⋅X₁⋅X₄+2^X₄⋅3⋅X₁+2^X₄⋅X₀+X₁+X₂ {O(EXP)}
    t₅, X₃: 2⋅2^X₄⋅X₁⋅X₄+2^X₄⋅3⋅X₁+2^X₄⋅X₀+X₁+X₃ {O(EXP)}
    t₅, X₄: 2⋅X₄ {O(n)}
    t₆, X₀: 2⋅2^X₄⋅X₁⋅X₄+2^X₄⋅3⋅X₁+2^X₄⋅X₀+X₀+2 {O(EXP)}
    t₆, X₁: 2⋅X₁ {O(n)}
    t₆, X₂: 2⋅2^X₄⋅X₁⋅X₄+2^X₄⋅3⋅X₁+2^X₄⋅X₀+X₁+X₂ {O(EXP)}
    t₆, X₃: 2⋅2^X₄⋅X₁⋅X₄+2^X₄⋅3⋅X₁+2^X₄⋅X₀+X₁+X₃ {O(EXP)}
    t₆, X₄: 2⋅X₄ {O(n)}

