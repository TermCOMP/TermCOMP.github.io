WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval/3]
1. non_recursive  : [exit_location/1]
2. non_recursive  : [eval_loop_cont/2]
3. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval/3
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval/3 
* CE 4 is refined into CE [5] 
* CE 2 is refined into CE [6] 
* CE 3 is refined into CE [7] 


### Cost equations --> "Loop" of eval/3 
* CEs [6] --> Loop 5 
* CEs [7] --> Loop 6 
* CEs [5] --> Loop 7 

### Ranking functions of CR eval(A,B,C) 
* RF of phase [5]: [A,A+B]
* RF of phase [6]: [A+B,B]

#### Partial ranking functions of CR eval(A,B,C) 
* Partial RF of phase [5]:
  - RF of loop [5:1]:
    A
    A+B
* Partial RF of phase [6]:
  - RF of loop [6:1]:
    A+B
    B


### Specialization of cost equations start/3 
* CE 1 is refined into CE [8,9,10,11] 


### Cost equations --> "Loop" of start/3 
* CEs [11] --> Loop 8 
* CEs [10] --> Loop 9 
* CEs [9] --> Loop 10 
* CEs [8] --> Loop 11 

### Ranking functions of CR start(A,B,C) 

#### Partial ranking functions of CR start(A,B,C) 


Computing Bounds
=====================================

#### Cost of chains of eval(A,B,C):
* Chain [[6],7]: 1*it(6)+0
  Such that:it(6) =< A+B

  with precondition: [C=2,0>=A,A+B>=1] 

* Chain [[5],[6],7]: 1*it(5)+1*it(6)+0
  Such that:it(5) =< A
it(6) =< B

  with precondition: [C=2,A>=1,B>=1] 

* Chain [[5],7]: 1*it(5)+0
  Such that:it(5) =< A
it(5) =< A+B

  with precondition: [C=2,A>=1,A+B>=1] 

* Chain [7]: 0
  with precondition: [C=2] 


#### Cost of chains of start(A,B,C):
* Chain [11]: 0
  with precondition: [] 

* Chain [10]: 1*s(1)+0
  Such that:s(1) =< A+B

  with precondition: [0>=A,A+B>=1] 

* Chain [9]: 1*s(2)+1*s(3)+0
  Such that:s(2) =< A
s(3) =< B

  with precondition: [A>=1,B>=1] 

* Chain [8]: 1*s(4)+0
  Such that:s(4) =< A
s(4) =< A+B

  with precondition: [A>=1,A+B>=1] 


Closed-form bounds of start(A,B,C): 
-------------------------------------
* Chain [11] with precondition: [] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [10] with precondition: [0>=A,A+B>=1] 
    - Upper bound: A+B 
    - Complexity: n 
* Chain [9] with precondition: [A>=1,B>=1] 
    - Upper bound: A+B 
    - Complexity: n 
* Chain [8] with precondition: [A>=1,A+B>=1] 
    - Upper bound: A 
    - Complexity: n 

### Maximum cost of start(A,B,C): max([nat(A+B),nat(B)+nat(A)]) 
Asymptotic class: n 
* Total analysis performed in 30 ms.

