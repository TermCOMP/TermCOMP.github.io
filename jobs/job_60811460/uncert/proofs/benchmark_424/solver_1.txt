NO

# LoAT Proof:
NO

WORST_CASE(Omega(n^1),?)
NO

Initial ITS

Start location: f300

Location map:
LoAT_sink -> 0
f300 -> 1
f2 -> 2
f1 -> 3

Rules:
   0: (-2+i1 == 0 /\ -14+i4 == 0 /\ -1-it4 >= 0) /\ i1'=3, i3'=1+i3, i4'=it4, i5'=it3
   1: (-2+i1 == 0 /\ it5 >= 0 /\ -14+i4 == 0) /\ i1'=2, i3'=1+i3, i4'=it5
   2: (-2+i1 == 0 /\ -i4 >= 0 /\ -15+i4 >= 0) /\ i1'=3, i3'=1+i3, i4'=-1+i4, i5'=it6
   3: (-2+i1 == 0 /\ 13-i4 >= 0 /\ -i4 >= 0) /\ i1'=3, i3'=1+i3, i4'=-1+i4, i5'=it7
   4: (-1+i4 >= 0 /\ -2+i1 == 0 /\ -15+i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4
   5: (-1+i4 >= 0 /\ -2+i1 == 0 /\ 13-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4
   6: -1+i1 == 0 /\ i1'=2, i3'=1+i3

Dependency graph:
1 -> 0, 1 -> 1, 1 -> 2, 1 -> 3, 1 -> 4, 1 -> 5
4 -> 0, 4 -> 1, 4 -> 2, 4 -> 3, 4 -> 4, 4 -> 5
5 -> 0, 5 -> 1, 5 -> 2, 5 -> 3, 5 -> 4, 5 -> 5
6 -> 0, 6 -> 1, 6 -> 2, 6 -> 3, 6 -> 4, 6 -> 5

Refined Dependency Graph

	Removed the following edges: 1 -> 2, 4 -> 2, 4 -> 3, 4 -> 5, 5 -> 0, 5 -> 1, 5 -> 2, 5 -> 4, 6 -> 2

Start location: f300

Location map:
LoAT_sink -> 0
f300 -> 1
f2 -> 2
f1 -> 3

Rules:
   0: (-2+i1 == 0 /\ -14+i4 == 0 /\ -1-it4 >= 0) /\ i1'=3, i3'=1+i3, i4'=it4, i5'=it3
   1: (-2+i1 == 0 /\ it5 >= 0 /\ -14+i4 == 0) /\ i1'=2, i3'=1+i3, i4'=it5
   2: (-2+i1 == 0 /\ -i4 >= 0 /\ -15+i4 >= 0) /\ i1'=3, i3'=1+i3, i4'=-1+i4, i5'=it6
   3: (-2+i1 == 0 /\ 13-i4 >= 0 /\ -i4 >= 0) /\ i1'=3, i3'=1+i3, i4'=-1+i4, i5'=it7
   4: (-1+i4 >= 0 /\ -2+i1 == 0 /\ -15+i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4
   5: (-1+i4 >= 0 /\ -2+i1 == 0 /\ 13-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4
   6: -1+i1 == 0 /\ i1'=2, i3'=1+i3

Dependency graph:
1 -> 0, 1 -> 1, 1 -> 3, 1 -> 4, 1 -> 5
4 -> 0, 4 -> 1, 4 -> 4
5 -> 3, 5 -> 5
6 -> 0, 6 -> 1, 6 -> 3, 6 -> 4, 6 -> 5

Step with 6

	Trace

	6[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 4

	Trace

	6[(-1+i1 == 0)]
	4[(-1+i4 >= 0 /\ -2+i1 == 0 /\ -15+i4 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Poly(n^1)

Accelerate

	Loop Acceleration

	Original rule:
	(-1+i4 >= 0 /\ -2+i1 == 0 /\ -15+i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4
	New rule:
	(-1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+it17 >= 0 /\ -14-it17+i4 >= 0) /\ i1'=i1, i3'=it17+i3, i4'=-it17+i4

		-1+i4 >= 0 [0]: monotonic increase yields -1+i4 >= 0, dependencies: -15+i4 >= 0
		
		-1+i4 >= 0 [1]: montonic decrease yields -it17+i4 >= 0
		
		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		-15+i4 >= 0 [0]: montonic decrease yields -14-it17+i4 >= 0
		
		Replacement map: {-1+i4 >= 0 -> -1+i4 >= 0, -2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0, -15+i4 >= 0 -> -14-it17+i4 >= 0}

	Removed Trivial Updates

	Original rule:
	(-1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+it17 >= 0 /\ -14-it17+i4 >= 0) /\ i1'=i1, i3'=it17+i3, i4'=-it17+i4
	New rule:
	(-1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+it17 >= 0 /\ -14-it17+i4 >= 0) /\ i3'=it17+i3, i4'=-it17+i4
	
	Instantiation

	Original rule:
	(-1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+it17 >= 0 /\ -14-it17+i4 >= 0) /\ i3'=it17+i3, i4'=-it17+i4
	New rule:
	(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -15+i4 >= 0) /\ i3'=-14+i3+i4, i4'=14

Start location: f300

Location map:
LoAT_sink -> 0
f300 -> 1
f2 -> 2
f1 -> 3

Rules:
   0: (-2+i1 == 0 /\ -14+i4 == 0 /\ -1-it4 >= 0) /\ i1'=3, i3'=1+i3, i4'=it4, i5'=it3
   1: (-2+i1 == 0 /\ it5 >= 0 /\ -14+i4 == 0) /\ i1'=2, i3'=1+i3, i4'=it5
   2: (-2+i1 == 0 /\ -i4 >= 0 /\ -15+i4 >= 0) /\ i1'=3, i3'=1+i3, i4'=-1+i4, i5'=it6
   3: (-2+i1 == 0 /\ 13-i4 >= 0 /\ -i4 >= 0) /\ i1'=3, i3'=1+i3, i4'=-1+i4, i5'=it7
   4: (-1+i4 >= 0 /\ -2+i1 == 0 /\ -15+i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4
   5: (-1+i4 >= 0 /\ -2+i1 == 0 /\ 13-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4
   6: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   7: (0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -15+i4 >= 0) /\ i3'=-14+i3+i4, i4'=14

Dependency graph:
1 -> 0, 1 -> 1, 1 -> 3, 1 -> 4, 1 -> 5, 1 -> 7
4 -> 0, 4 -> 1, 4 -> 4, 4 -> 7
5 -> 3, 5 -> 5
6 -> 0, 6 -> 1, 6 -> 3, 6 -> 4, 6 -> 5, 6 -> 7
7 -> 0, 7 -> 1, 7 -> 4

	Trace

	6[(-1+i1 == 0)]
	7[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -15+i4 >= 0)]
	
	Blocked

	{}
	{}
	{4[T], 7[T]}
	
Step with 0

	Trace

	6[(-1+i1 == 0)]
	7[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -15+i4 >= 0)]
	0[(-2+i1 == 0 /\ -14+i4 == 0 /\ -1-it4 >= 0)]
	
	Blocked

	{}
	{}
	{4[T], 7[T]}
	{}
	
Backtrack

	Trace

	6[(-1+i1 == 0)]
	7[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -15+i4 >= 0)]
	
	Blocked

	{}
	{}
	{0[T], 4[T], 7[T]}
	
Step with 1

	Trace

	6[(-1+i1 == 0)]
	7[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -15+i4 >= 0)]
	1[(-2+i1 == 0 /\ it5 >= 0 /\ -14+i4 == 0)]
	
	Blocked

	{}
	{}
	{0[T], 4[T], 7[T]}
	{}
	
Nonterm

	Certificate of Non-Termination

	Original rule:
	(-2+i1 == 0 /\ it5 >= 0 /\ -14+i4 == 0) /\ i1'=2, i3'=1+i3, i4'=it5
	New rule:
	(-it5+i4 <= 0 /\ -2+i1 >= 0 /\ it5 >= 0 /\ it5-i4 <= 0 /\ -14+i4 >= 0 /\ 2-i1 >= 0 /\ 14-i4 >= 0) /\ i1'=0

		-2+i1 >= 0 [0]: unchanged
		
		it5 >= 0 [0]: unchanged
		
		-14+i4 >= 0 [0]: eventual decrease yields (-14+it5 >= 0 /\ -14+i4 >= 0)
		
		-14+i4 >= 0 [1]: eventual increase yields (-it5+i4 <= 0 /\ -14+i4 >= 0)
		
		2-i1 >= 0 [0]: unchanged
		
		14-i4 >= 0 [0]: eventual decrease yields (14-it5 >= 0 /\ 14-i4 >= 0)
		
		14-i4 >= 0 [1]: eventual increase yields (it5-i4 <= 0 /\ 14-i4 >= 0)
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, it5 >= 0 -> it5 >= 0, -14+i4 >= 0 -> (-it5+i4 <= 0 /\ -14+i4 >= 0), 2-i1 >= 0 -> 2-i1 >= 0, 14-i4 >= 0 -> (it5-i4 <= 0 /\ 14-i4 >= 0)}

	Loop Acceleration

	Original rule:
	(-2+i1 == 0 /\ it5 >= 0 /\ -14+i4 == 0) /\ i1'=2, i3'=1+i3, i4'=it5
	New rule:
	(-14+it5 >= 0 /\ -2+i1 >= 0 /\ it5 >= 0 /\ -1+it39 >= 0 /\ -14+i4 >= 0 /\ 14-it5 >= 0 /\ 2-i1 >= 0 /\ 14-i4 >= 0) /\ i1'=i1, i3'=i3+it39, i4'=it5

		-2+i1 >= 0 [0]: unchanged
		
		it5 >= 0 [0]: unchanged
		
		-14+i4 >= 0 [0]: eventual decrease yields (-14+it5 >= 0 /\ -14+i4 >= 0)
		
		-14+i4 >= 0 [1]: eventual increase yields (-it5+i4 <= 0 /\ -14+i4 >= 0)
		
		2-i1 >= 0 [0]: unchanged
		
		14-i4 >= 0 [0]: eventual decrease yields (14-it5 >= 0 /\ 14-i4 >= 0)
		
		14-i4 >= 0 [1]: eventual increase yields (it5-i4 <= 0 /\ 14-i4 >= 0)
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, it5 >= 0 -> it5 >= 0, -14+i4 >= 0 -> (-14+it5 >= 0 /\ -14+i4 >= 0), 2-i1 >= 0 -> 2-i1 >= 0, 14-i4 >= 0 -> (14-it5 >= 0 /\ 14-i4 >= 0)}

	Extracted Implied Equalities

	Original rule:
	(-14+it5 >= 0 /\ -2+i1 >= 0 /\ it5 >= 0 /\ -1+it39 >= 0 /\ -14+i4 >= 0 /\ 14-it5 >= 0 /\ 2-i1 >= 0 /\ 14-i4 >= 0) /\ i1'=i1, i3'=i3+it39, i4'=it5
	New rule:
	(-14+it5 >= 0 /\ -2+i1 >= 0 /\ it5 >= 0 /\ -1+it39 >= 0 /\ -14+i4 >= 0 /\ 14-it5 >= 0 /\ 14-it5 == 0 /\ 2-i1 >= 0 /\ 2-i1 == 0 /\ 14-i4 >= 0 /\ 14-i4 == 0) /\ i1'=i1, i3'=i3+it39, i4'=it5
	
	Propagated Equalities

	Original rule:
	(-14+it5 >= 0 /\ -2+i1 >= 0 /\ it5 >= 0 /\ -1+it39 >= 0 /\ -14+i4 >= 0 /\ 14-it5 >= 0 /\ 14-it5 == 0 /\ 2-i1 >= 0 /\ 2-i1 == 0 /\ 14-i4 >= 0 /\ 14-i4 == 0) /\ i1'=i1, i3'=i3+it39, i4'=it5
	New rule:
	(0 >= 0 /\ 0 == 0 /\ -2+i1 >= 0 /\ -1+it39 >= 0 /\ -14+i4 >= 0 /\ 2-i1 >= 0 /\ 2-i1 == 0 /\ 14 >= 0 /\ 14-i4 >= 0 /\ 14-i4 == 0) /\ i1'=i1, i3'=i3+it39, i4'=14
	
		propagated equality it5 = 14
		
	Simplified Guard

	Original rule:
	(0 >= 0 /\ 0 == 0 /\ -2+i1 >= 0 /\ -1+it39 >= 0 /\ -14+i4 >= 0 /\ 2-i1 >= 0 /\ 2-i1 == 0 /\ 14 >= 0 /\ 14-i4 >= 0 /\ 14-i4 == 0) /\ i1'=i1, i3'=i3+it39, i4'=14
	New rule:
	(-2+i1 >= 0 /\ -1+it39 >= 0 /\ -14+i4 >= 0 /\ 2-i1 >= 0 /\ 2-i1 == 0 /\ 14-i4 >= 0 /\ 14-i4 == 0) /\ i1'=i1, i3'=i3+it39, i4'=14
	
	Removed Trivial Updates

	Original rule:
	(-2+i1 >= 0 /\ -1+it39 >= 0 /\ -14+i4 >= 0 /\ 2-i1 >= 0 /\ 2-i1 == 0 /\ 14-i4 >= 0 /\ 14-i4 == 0) /\ i1'=i1, i3'=i3+it39, i4'=14
	New rule:
	(-2+i1 >= 0 /\ -1+it39 >= 0 /\ -14+i4 >= 0 /\ 2-i1 >= 0 /\ 2-i1 == 0 /\ 14-i4 >= 0 /\ 14-i4 == 0) /\ i3'=i3+it39, i4'=14

Start location: f300

Location map:
LoAT_sink -> 0
f300 -> 1
f2 -> 2
f1 -> 3

Rules:
   0: (-2+i1 == 0 /\ -14+i4 == 0 /\ -1-it4 >= 0) /\ i1'=3, i3'=1+i3, i4'=it4, i5'=it3
   1: (-2+i1 == 0 /\ it5 >= 0 /\ -14+i4 == 0) /\ i1'=2, i3'=1+i3, i4'=it5
   2: (-2+i1 == 0 /\ -i4 >= 0 /\ -15+i4 >= 0) /\ i1'=3, i3'=1+i3, i4'=-1+i4, i5'=it6
   3: (-2+i1 == 0 /\ 13-i4 >= 0 /\ -i4 >= 0) /\ i1'=3, i3'=1+i3, i4'=-1+i4, i5'=it7
   4: (-1+i4 >= 0 /\ -2+i1 == 0 /\ -15+i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4
   5: (-1+i4 >= 0 /\ -2+i1 == 0 /\ 13-i4 >= 0) /\ i1'=2, i3'=1+i3, i4'=-1+i4
   6: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   7: (0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -15+i4 >= 0) /\ i3'=-14+i3+i4, i4'=14
   8: (-it5+i4 <= 0 /\ -2+i1 >= 0 /\ it5 >= 0 /\ it5-i4 <= 0 /\ -14+i4 >= 0 /\ 2-i1 >= 0 /\ 14-i4 >= 0) /\ i1'=0
   9: (-2+i1 >= 0 /\ -1+it39 >= 0 /\ -14+i4 >= 0 /\ 2-i1 >= 0 /\ 2-i1 == 0 /\ 14-i4 >= 0 /\ 14-i4 == 0) /\ i3'=i3+it39, i4'=14

Dependency graph:
1 -> 0, 1 -> 1, 1 -> 3, 1 -> 4, 1 -> 5, 1 -> 7, 1 -> 8, 1 -> 9
4 -> 0, 4 -> 1, 4 -> 4, 4 -> 7, 4 -> 8, 4 -> 9
5 -> 3, 5 -> 5
6 -> 0, 6 -> 1, 6 -> 3, 6 -> 4, 6 -> 5, 6 -> 7, 6 -> 8, 6 -> 9
7 -> 0, 7 -> 1, 7 -> 4, 7 -> 8, 7 -> 9
9 -> 0, 9 -> 1, 9 -> 3, 9 -> 4, 9 -> 5, 9 -> 7, 9 -> 8

Step with 8

	Trace

	6[(-1+i1 == 0)]
	7[(0 >= 0 /\ -1+i4 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -15+i4 >= 0)]
	8[(-it5+i4 <= 0 /\ -2+i1 >= 0 /\ it5 >= 0 /\ it5-i4 <= 0 /\ -14+i4 >= 0 /\ 2-i1 >= 0 /\ 14-i4 >= 0)]
	
	Blocked

	{}
	{}
	{0[T], 4[T], 7[T]}
	{8[T]}
	
Refute

	Counterexample

	(i1=1, i3=-2, i4=15, i5=0)
	-6-> (i1=2, i3=-1, i4=15, i5=0 )
	-7-> (i1=2, i3=0, i4=14, i5=0 )
	-8-> ( )
	
NO

Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
MAYBE


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁
  Temp_Vars:  C, D
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₆: l0(X₀, X₁) → l1(X₀, X₁)
  t₁: l1(X₀, X₁) → l1(C, X₁) :|: X₀ ≤ 14 ∧ 14 ≤ X₀ ∧ 0 ≤ C
  t₄: l1(X₀, X₁) → l1(X₀-1, X₁) :|: 1 ≤ X₀ ∧ 15 ≤ X₀
  t₅: l1(X₀, X₁) → l1(X₀-1, X₁) :|: X₀ ≤ 13 ∧ 1 ≤ X₀
  t₀: l1(X₀, X₁) → l2(C, D) :|: X₀ ≤ 14 ∧ 1+C ≤ 0 ∧ 14 ≤ X₀
  t₂: l1(X₀, X₁) → l2(X₀-1, C) :|: 15 ≤ X₀ ∧ X₀ ≤ 0
  t₃: l1(X₀, X₁) → l2(X₀-1, C) :|: X₀ ≤ 13 ∧ X₀ ≤ 0


Preprocessing
  Cut unsatisfiable transition [t₂: l1→l2]


  Eliminate variables [D; X₁] that do not contribute to the problem


  Found invariant 1+X₀ ≤ 0 for location l2


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀
  Temp_Vars:  C
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₇: l0(X₀) → l1(X₀)
  t₈: l1(X₀) → l1(C) :|: X₀ ≤ 14 ∧ 14 ≤ X₀ ∧ 0 ≤ C
  t₉: l1(X₀) → l1(X₀-1) :|: 1 ≤ X₀ ∧ 15 ≤ X₀
  t₁₀: l1(X₀) → l1(X₀-1) :|: X₀ ≤ 13 ∧ 1 ≤ X₀
  t₁₁: l1(X₀) → l2(C) :|: X₀ ≤ 14 ∧ 1+C ≤ 0 ∧ 14 ≤ X₀
  t₁₂: l1(X₀) → l2(X₀-1) :|: X₀ ≤ 13 ∧ X₀ ≤ 0


  Found invariant 14 ≤ X₀ for location l1_v2


  Found invariant 1+X₀ ≤ 0 for location l2


  Found invariant 0 ≤ X₀ for location l1_v3


  Found invariant X₀ ≤ 12 ∧ 0 ≤ X₀ for location l1_v1


All Bounds
Timebounds
  Overall timebound:inf {Infinity}
    t₇: 1 {O(1)}
    t₈: inf {Infinity}
    t₉: inf {Infinity}
    t₁₀: inf {Infinity}
    t₁₁: 1 {O(1)}
    t₁₂: 1 {O(1)}


Costbounds
  Overall costbound: inf {Infinity}
    t₇: 1 {O(1)}
    t₈: inf {Infinity}
    t₉: inf {Infinity}
    t₁₀: inf {Infinity}
    t₁₁: 1 {O(1)}
    t₁₂: 1 {O(1)}


Sizebounds
    t₇, X₀: X₀ {O(n)}
    t₁₀, X₀: 12 {O(1)}

