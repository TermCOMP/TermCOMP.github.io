NO

# LoAT Proof:
NO

NO

Initial ITS

Start location: f300

Location map:
LoAT_sink -> 0
f300 -> 1
f2 -> 2
f1 -> 3

Rules:
   0: (-2+i1 == 0 /\ i4 >= 0) /\ i1'=2, i3'=1+i3
   1: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   2: (-2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=3, i3'=1+i3, i5'=it2

Dependency graph:
0 -> 0, 0 -> 2
1 -> 0, 1 -> 2

Refined Dependency Graph

	Removed the following edges: 0 -> 2

Start location: f300

Location map:
LoAT_sink -> 0
f300 -> 1
f2 -> 2
f1 -> 3

Rules:
   0: (-2+i1 == 0 /\ i4 >= 0) /\ i1'=2, i3'=1+i3
   1: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   2: (-2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=3, i3'=1+i3, i5'=it2

Dependency graph:
0 -> 0
1 -> 0, 1 -> 2

Step with 1

	Trace

	1[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 2

	Trace

	1[(-1+i1 == 0)]
	2[(-2+i1 == 0 /\ -1-i4 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Backtrack

	Trace

	1[(-1+i1 == 0)]
	
	Blocked

	{}
	{2[T]}
	
Step with 0

	Trace

	1[(-1+i1 == 0)]
	0[(-2+i1 == 0 /\ i4 >= 0)]
	
	Blocked

	{}
	{2[T]}
	{}
	
Nonterm

	Certificate of Non-Termination

	Original rule:
	(-2+i1 == 0 /\ i4 >= 0) /\ i1'=2, i3'=1+i3
	New rule:
	(-2+i1 >= 0 /\ i4 >= 0 /\ -1+it16 >= 0 /\ 2-i1 >= 0) /\ i1'=0

		-2+i1 >= 0 [0]: unchanged
		
		i4 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, i4 >= 0 -> i4 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Loop Acceleration

	Original rule:
	(-2+i1 == 0 /\ i4 >= 0) /\ i1'=2, i3'=1+i3
	New rule:
	(-2+i1 >= 0 /\ i4 >= 0 /\ -1+it16 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it16

		-2+i1 >= 0 [0]: unchanged
		
		i4 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, i4 >= 0 -> i4 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-2+i1 >= 0 /\ i4 >= 0 /\ -1+it16 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it16
	New rule:
	(-2+i1 >= 0 /\ i4 >= 0 /\ -1+it16 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+it16

Start location: f300

Location map:
LoAT_sink -> 0
f300 -> 1
f2 -> 2
f1 -> 3

Rules:
   0: (-2+i1 == 0 /\ i4 >= 0) /\ i1'=2, i3'=1+i3
   1: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   2: (-2+i1 == 0 /\ -1-i4 >= 0) /\ i1'=3, i3'=1+i3, i5'=it2
   3: (-2+i1 >= 0 /\ i4 >= 0 /\ -1+it16 >= 0 /\ 2-i1 >= 0) /\ i1'=0
   4: (-2+i1 >= 0 /\ i4 >= 0 /\ -1+it16 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+it16

Dependency graph:
0 -> 0, 0 -> 3, 0 -> 4
1 -> 0, 1 -> 2, 1 -> 3, 1 -> 4
4 -> 0, 4 -> 3

Step with 3

	Trace

	1[(-1+i1 == 0)]
	3[(-2+i1 >= 0 /\ i4 >= 0 /\ -1+it16 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{2[T]}
	{3[T]}
	
Refute

	Counterexample

	(i1=1, i3=-2, i4=0, i5=0)
	-1-> (i1=2, i3=-1, i4=0, i5=0 )
	-3-> ( )
	
NO

Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
MAYBE


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁
  Temp_Vars:  C
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₁: l0(X₀, X₁) → l1(X₀, X₁)
  t₀: l1(X₀, X₁) → l1(X₀, X₁) :|: 0 ≤ X₀
  t₂: l1(X₀, X₁) → l2(X₀, C) :|: 1+X₀ ≤ 0


Preprocessing
  Eliminate variables [C; X₁] that do not contribute to the problem


  Found invariant 1+X₀ ≤ 0 for location l2


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀
  Temp_Vars:  
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₃: l0(X₀) → l1(X₀)
  t₄: l1(X₀) → l1(X₀) :|: 0 ≤ X₀
  t₅: l1(X₀) → l2(X₀) :|: 1+X₀ ≤ 0


  Found invariant 1+X₀ ≤ 0 for location l2


  Found invariant 0 ≤ X₀ for location l1_v1


All Bounds
Timebounds
  Overall timebound:inf {Infinity}
    t₃: 1 {O(1)}
    t₄: inf {Infinity}
    t₅: 1 {O(1)}


Costbounds
  Overall costbound: inf {Infinity}
    t₃: 1 {O(1)}
    t₄: inf {Infinity}
    t₅: 1 {O(1)}


Sizebounds
    t₃, X₀: X₀ {O(n)}
    t₄, X₀: X₀ {O(n)}
    t₅, X₀: X₀ {O(n)}

