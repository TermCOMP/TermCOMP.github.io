WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval_speedNestedMultipleDep_bb3_in/5,eval_speedNestedMultipleDep_bb4_in/5]
1. recursive  : [eval_speedNestedMultipleDep_bb1_in/9,eval_speedNestedMultipleDep_bb2_in/9,eval_speedNestedMultipleDep_bb3_in_loop_cont/10]
2. non_recursive  : [eval_speedNestedMultipleDep_stop/6]
3. non_recursive  : [eval_speedNestedMultipleDep_bb5_in/6]
4. non_recursive  : [exit_location/1]
5. non_recursive  : [eval_speedNestedMultipleDep_bb1_in_loop_cont/7]
6. non_recursive  : [eval_speedNestedMultipleDep_6/6]
7. non_recursive  : [eval_speedNestedMultipleDep_5/6]
8. non_recursive  : [eval_speedNestedMultipleDep_4/6]
9. non_recursive  : [eval_speedNestedMultipleDep_3/6]
10. non_recursive  : [eval_speedNestedMultipleDep_2/6]
11. non_recursive  : [eval_speedNestedMultipleDep_1/6]
12. non_recursive  : [eval_speedNestedMultipleDep_0/6]
13. non_recursive  : [eval_speedNestedMultipleDep_bb0_in/6]
14. non_recursive  : [eval_speedNestedMultipleDep_start/6]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval_speedNestedMultipleDep_bb3_in/5
1. SCC is partially evaluated into eval_speedNestedMultipleDep_bb1_in/9
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into eval_speedNestedMultipleDep_bb1_in_loop_cont/7
6. SCC is partially evaluated into eval_speedNestedMultipleDep_6/6
7. SCC is completely evaluated into other SCCs
8. SCC is completely evaluated into other SCCs
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is partially evaluated into eval_speedNestedMultipleDep_start/6

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_speedNestedMultipleDep_bb3_in/5 
* CE 11 is refined into CE [12] 
* CE 10 is refined into CE [13] 
* CE 9 is refined into CE [14] 


### Cost equations --> "Loop" of eval_speedNestedMultipleDep_bb3_in/5 
* CEs [14] --> Loop 12 
* CEs [12] --> Loop 13 
* CEs [13] --> Loop 14 

### Ranking functions of CR eval_speedNestedMultipleDep_bb3_in(V_m,V_x_0,V_y_0,B,C) 
* RF of phase [12]: [V_m-V_y_0]

#### Partial ranking functions of CR eval_speedNestedMultipleDep_bb3_in(V_m,V_x_0,V_y_0,B,C) 
* Partial RF of phase [12]:
  - RF of loop [12:1]:
    V_m-V_y_0


### Specialization of cost equations eval_speedNestedMultipleDep_bb1_in/9 
* CE 5 is refined into CE [15] 
* CE 3 is refined into CE [16,17] 
* CE 6 is refined into CE [18] 
* CE 4 is refined into CE [19,20] 


### Cost equations --> "Loop" of eval_speedNestedMultipleDep_bb1_in/9 
* CEs [19] --> Loop 15 
* CEs [20] --> Loop 16 
* CEs [15] --> Loop 17 
* CEs [16] --> Loop 18 
* CEs [18] --> Loop 19 
* CEs [17] --> Loop 20 

### Ranking functions of CR eval_speedNestedMultipleDep_bb1_in(V_1,V_m,V_n,V_x_0,V_y_0,B,C,D,E) 
* RF of phase [15]: [V_n-V_x_0]
* RF of phase [16]: [V_n-V_x_0]

#### Partial ranking functions of CR eval_speedNestedMultipleDep_bb1_in(V_1,V_m,V_n,V_x_0,V_y_0,B,C,D,E) 
* Partial RF of phase [15]:
  - RF of loop [15:1]:
    V_n-V_x_0
* Partial RF of phase [16]:
  - RF of loop [16:1]:
    V_n-V_x_0


### Specialization of cost equations eval_speedNestedMultipleDep_bb1_in_loop_cont/7 
* CE 7 is refined into CE [21] 
* CE 8 is refined into CE [22] 


### Cost equations --> "Loop" of eval_speedNestedMultipleDep_bb1_in_loop_cont/7 
* CEs [21] --> Loop 21 
* CEs [22] --> Loop 22 

### Ranking functions of CR eval_speedNestedMultipleDep_bb1_in_loop_cont(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR eval_speedNestedMultipleDep_bb1_in_loop_cont(A,B,C,D,E,F,G) 


### Specialization of cost equations eval_speedNestedMultipleDep_6/6 
* CE 2 is refined into CE [23,24,25,26,27,28,29,30,31] 


### Cost equations --> "Loop" of eval_speedNestedMultipleDep_6/6 
* CEs [28] --> Loop 23 
* CEs [26] --> Loop 24 
* CEs [25,31] --> Loop 25 
* CEs [30] --> Loop 26 
* CEs [24] --> Loop 27 
* CEs [23,29] --> Loop 28 
* CEs [27] --> Loop 29 

### Ranking functions of CR eval_speedNestedMultipleDep_6(V_1,V_m,V_n,V_x_0,V_y_0,B) 

#### Partial ranking functions of CR eval_speedNestedMultipleDep_6(V_1,V_m,V_n,V_x_0,V_y_0,B) 


### Specialization of cost equations eval_speedNestedMultipleDep_start/6 
* CE 1 is refined into CE [32,33,34,35,36,37,38] 


### Cost equations --> "Loop" of eval_speedNestedMultipleDep_start/6 
* CEs [38] --> Loop 30 
* CEs [37] --> Loop 31 
* CEs [36] --> Loop 32 
* CEs [35] --> Loop 33 
* CEs [34] --> Loop 34 
* CEs [33] --> Loop 35 
* CEs [32] --> Loop 36 

### Ranking functions of CR eval_speedNestedMultipleDep_start(V_1,V_m,V_n,V_x_0,V_y_0,B) 

#### Partial ranking functions of CR eval_speedNestedMultipleDep_start(V_1,V_m,V_n,V_x_0,V_y_0,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_speedNestedMultipleDep_bb3_in(V_m,V_x_0,V_y_0,B,C):
* Chain [[12],14]: 1*it(12)+0
  Such that:it(12) =< -V_y_0+C

  with precondition: [B=2,V_m=C,V_x_0>=0,V_y_0>=0,V_m>=V_y_0+1] 

* Chain [[12],13]: 1*it(12)+0
  Such that:it(12) =< V_m-V_y_0

  with precondition: [B=3,V_x_0>=0,V_y_0>=0,V_m>=V_y_0+1] 

* Chain [14]: 0
  with precondition: [B=2,V_y_0=C,V_x_0>=0,V_y_0>=0,V_y_0>=V_m] 

* Chain [13]: 0
  with precondition: [B=3,V_x_0>=0,V_y_0>=0] 


#### Cost of chains of eval_speedNestedMultipleDep_bb1_in(V_1,V_m,V_n,V_x_0,V_y_0,B,C,D,E):
* Chain [[16],19]: 1*it(16)+0
  Such that:it(16) =< V_n-V_x_0

  with precondition: [B=3,0>=V_m,V_x_0>=0,V_n>=V_x_0+1] 

* Chain [[16],18]: 1*it(16)+0
  Such that:it(16) =< V_n-V_x_0

  with precondition: [B=3,0>=V_m,V_x_0>=0,V_n>=V_x_0+2] 

* Chain [[16],17]: 1*it(16)+0
  Such that:it(16) =< -V_x_0+C

  with precondition: [B=4,E=0,V_n=C,V_n=D,0>=V_m,V_x_0>=0,V_n>=V_x_0+1] 

* Chain [[15],20]: 1*it(15)+1*s(1)+1*s(4)+0
  Such that:it(15) =< V_n-V_x_0
aux(2) =< V_m
s(1) =< aux(2)
s(4) =< it(15)*aux(2)

  with precondition: [B=3,V_m>=1,V_x_0>=0,V_n>=V_x_0+2] 

* Chain [[15],19]: 1*it(15)+1*s(4)+0
  Such that:aux(1) =< V_m
it(15) =< V_n-V_x_0
s(4) =< it(15)*aux(1)

  with precondition: [B=3,V_m>=1,V_x_0>=0,V_n>=V_x_0+1] 

* Chain [[15],18]: 1*it(15)+1*s(4)+0
  Such that:aux(1) =< V_m
it(15) =< V_n-V_x_0
s(4) =< it(15)*aux(1)

  with precondition: [B=3,V_m>=1,V_x_0>=0,V_n>=V_x_0+2] 

* Chain [[15],17]: 1*it(15)+1*s(4)+0
  Such that:it(15) =< -V_x_0+C
aux(1) =< E
s(4) =< it(15)*aux(1)

  with precondition: [B=4,V_n=C,V_n=D,V_m=E,V_m>=1,V_x_0>=0,V_n>=V_x_0+1] 

* Chain [20]: 1*s(1)+0
  Such that:s(1) =< V_m

  with precondition: [B=3,V_m>=1,V_x_0>=0,V_n>=V_x_0+1] 

* Chain [19]: 0
  with precondition: [B=3,V_x_0>=0] 

* Chain [18]: 0
  with precondition: [B=3,V_x_0>=0,V_n>=V_x_0+1] 

* Chain [17]: 0
  with precondition: [B=4,C=V_1,E=V_y_0,V_x_0=D,V_x_0>=0,V_x_0>=V_n] 


#### Cost of chains of eval_speedNestedMultipleDep_bb1_in_loop_cont(A,B,C,D,E,F,G):
* Chain [22]: 0
  with precondition: [A=3] 

* Chain [21]: 0
  with precondition: [A=4] 


#### Cost of chains of eval_speedNestedMultipleDep_6(V_1,V_m,V_n,V_x_0,V_y_0,B):
* Chain [29]: 0
  with precondition: [] 

* Chain [28]: 2*s(16)+0
  Such that:aux(6) =< V_n
s(16) =< aux(6)

  with precondition: [0>=V_m,V_n>=1] 

* Chain [27]: 1*s(18)+0
  Such that:s(18) =< V_n

  with precondition: [0>=V_m,V_n>=2] 

* Chain [26]: 0
  with precondition: [0>=V_n] 

* Chain [25]: 2*s(19)+1*s(21)+2*s(22)+0
  Such that:aux(7) =< V_m
aux(8) =< V_n
s(19) =< aux(8)
s(21) =< aux(7)
s(22) =< s(19)*aux(7)

  with precondition: [V_m>=1,V_n>=1] 

* Chain [24]: 2*s(28)+2*s(29)+1*s(30)+0
  Such that:s(26) =< V_m
s(27) =< V_n
s(28) =< s(27)
s(29) =< s(28)*s(26)
s(30) =< s(26)

  with precondition: [V_m>=1,V_n>=2] 

* Chain [23]: 0
  with precondition: [V_n>=1] 


#### Cost of chains of eval_speedNestedMultipleDep_start(V_1,V_m,V_n,V_x_0,V_y_0,B):
* Chain [36]: 0
  with precondition: [] 

* Chain [35]: 2*s(32)+0
  Such that:s(31) =< V_n
s(32) =< s(31)

  with precondition: [0>=V_m,V_n>=1] 

* Chain [34]: 1*s(33)+0
  Such that:s(33) =< V_n

  with precondition: [0>=V_m,V_n>=2] 

* Chain [33]: 0
  with precondition: [0>=V_n] 

* Chain [32]: 2*s(36)+1*s(37)+2*s(38)+0
  Such that:s(34) =< V_m
s(35) =< V_n
s(36) =< s(35)
s(37) =< s(34)
s(38) =< s(36)*s(34)

  with precondition: [V_m>=1,V_n>=1] 

* Chain [31]: 2*s(41)+2*s(42)+1*s(43)+0
  Such that:s(39) =< V_m
s(40) =< V_n
s(41) =< s(40)
s(42) =< s(41)*s(39)
s(43) =< s(39)

  with precondition: [V_m>=1,V_n>=2] 

* Chain [30]: 0
  with precondition: [V_n>=1] 


Closed-form bounds of eval_speedNestedMultipleDep_start(V_1,V_m,V_n,V_x_0,V_y_0,B): 
-------------------------------------
* Chain [36] with precondition: [] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [35] with precondition: [0>=V_m,V_n>=1] 
    - Upper bound: 2*V_n 
    - Complexity: n 
* Chain [34] with precondition: [0>=V_m,V_n>=2] 
    - Upper bound: V_n 
    - Complexity: n 
* Chain [33] with precondition: [0>=V_n] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [32] with precondition: [V_m>=1,V_n>=1] 
    - Upper bound: 2*V_m*V_n+V_m+2*V_n 
    - Complexity: n^2 
* Chain [31] with precondition: [V_m>=1,V_n>=2] 
    - Upper bound: 2*V_m*V_n+V_m+2*V_n 
    - Complexity: n^2 
* Chain [30] with precondition: [V_n>=1] 
    - Upper bound: 0 
    - Complexity: constant 

### Maximum cost of eval_speedNestedMultipleDep_start(V_1,V_m,V_n,V_x_0,V_y_0,B): nat(V_m)*2*nat(V_n)+nat(V_m)+nat(V_n)+nat(V_n) 
Asymptotic class: n^2 
* Total analysis performed in 140 ms.

