WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [evalNestedLoopbb2in/7,evalNestedLoopbb3in/7,evalNestedLoopbb4in/7]
1. recursive  : [evalNestedLoopbb1in/11,evalNestedLoopbb3in_loop_cont/12,evalNestedLoopbb6in/11,evalNestedLoopbb7in/11]
2. recursive  : [evalNestedLoopbb10in/14,evalNestedLoopbb6in_loop_cont/15,evalNestedLoopbb8in/14,evalNestedLoopbb9in/14]
3. non_recursive  : [evalNestedLoopstop/9]
4. non_recursive  : [evalNestedLoopreturnin/9]
5. non_recursive  : [exit_location/1]
6. non_recursive  : [evalNestedLoopbb9in_loop_cont/10]
7. non_recursive  : [evalNestedLoopentryin/9]
8. non_recursive  : [evalNestedLoopstart/9]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into evalNestedLoopbb3in/7
1. SCC is partially evaluated into evalNestedLoopbb6in/11
2. SCC is partially evaluated into evalNestedLoopbb9in/14
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into evalNestedLoopbb9in_loop_cont/10
7. SCC is partially evaluated into evalNestedLoopentryin/9
8. SCC is partially evaluated into evalNestedLoopstart/9

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations evalNestedLoopbb3in/7 
* CE 18 is refined into CE [19] 
* CE 15 is refined into CE [20] 
* CE 17 is refined into CE [21] 
* CE 16 is refined into CE [22] 


### Cost equations --> "Loop" of evalNestedLoopbb3in/7 
* CEs [22] --> Loop 19 
* CEs [19] --> Loop 20 
* CEs [20] --> Loop 21 
* CEs [21] --> Loop 22 

### Ranking functions of CR evalNestedLoopbb3in(C,E,F,H,J,K,L) 
* RF of phase [19]: [C-H]

#### Partial ranking functions of CR evalNestedLoopbb3in(C,E,F,H,J,K,L) 
* Partial RF of phase [19]:
  - RF of loop [19:1]:
    C-H


### Specialization of cost equations evalNestedLoopbb6in/11 
* CE 12 is refined into CE [23] 
* CE 13 is refined into CE [24] 
* CE 10 is refined into CE [25,26] 
* CE 14 is refined into CE [27] 
* CE 11 is refined into CE [28,29,30,31] 


### Cost equations --> "Loop" of evalNestedLoopbb6in/11 
* CEs [31] --> Loop 23 
* CEs [30] --> Loop 24 
* CEs [29] --> Loop 25 
* CEs [28] --> Loop 26 
* CEs [23] --> Loop 27 
* CEs [24] --> Loop 28 
* CEs [26] --> Loop 29 
* CEs [25] --> Loop 30 
* CEs [27] --> Loop 31 

### Ranking functions of CR evalNestedLoopbb6in(B,C,E,F,G,H,J,K,L,M,N) 
* RF of phase [23,24]: [B-E]
* RF of phase [25]: [B-E]

#### Partial ranking functions of CR evalNestedLoopbb6in(B,C,E,F,G,H,J,K,L,M,N) 
* Partial RF of phase [23,24]:
  - RF of loop [23:1]:
    C-F-1
  - RF of loop [23:1,24:1]:
    B-E
* Partial RF of phase [25]:
  - RF of loop [25:1]:
    B-E


### Specialization of cost equations evalNestedLoopbb9in/14 
* CE 3 is refined into CE [32] 
* CE 6 is refined into CE [33] 
* CE 5 is refined into CE [34,35,36,37,38,39,40,41] 
* CE 7 is refined into CE [42] 
* CE 4 is refined into CE [43,44,45,46,47,48,49,50,51,52,53,54] 


### Cost equations --> "Loop" of evalNestedLoopbb9in/14 
* CEs [54] --> Loop 32 
* CEs [50] --> Loop 33 
* CEs [53] --> Loop 34 
* CEs [49] --> Loop 35 
* CEs [52] --> Loop 36 
* CEs [51] --> Loop 37 
* CEs [48] --> Loop 38 
* CEs [47] --> Loop 39 
* CEs [45] --> Loop 40 
* CEs [46] --> Loop 41 
* CEs [44] --> Loop 42 
* CEs [43] --> Loop 43 
* CEs [32] --> Loop 44 
* CEs [33] --> Loop 45 
* CEs [35] --> Loop 46 
* CEs [34] --> Loop 47 
* CEs [41] --> Loop 48 
* CEs [40] --> Loop 49 
* CEs [39] --> Loop 50 
* CEs [38] --> Loop 51 
* CEs [37] --> Loop 52 
* CEs [36] --> Loop 53 
* CEs [42] --> Loop 54 

### Ranking functions of CR evalNestedLoopbb9in(A,B,C,D,E,F,G,H,J,K,L,M,N,O) 
* RF of phase [32,33,34,35,36,37,38,39,40,41,42]: [A+B+C-D-1,A+C-D,A-D]
* RF of phase [43]: [A-D]

#### Partial ranking functions of CR evalNestedLoopbb9in(A,B,C,D,E,F,G,H,J,K,L,M,N,O) 
* Partial RF of phase [32,33,34,35,36,37,38,39,40,41,42]:
  - RF of loop [32:1,33:1]:
    C-D
  - RF of loop [32:1,33:1,34:1,35:1,41:1]:
    A-D
  - RF of loop [36:1,37:1,38:1,39:1,40:1,42:1]:
    A/2-D/2
    C/2-D/2
* Partial RF of phase [43]:
  - RF of loop [43:1]:
    A-D


### Specialization of cost equations evalNestedLoopbb9in_loop_cont/10 
* CE 8 is refined into CE [55] 
* CE 9 is refined into CE [56] 


### Cost equations --> "Loop" of evalNestedLoopbb9in_loop_cont/10 
* CEs [55] --> Loop 55 
* CEs [56] --> Loop 56 

### Ranking functions of CR evalNestedLoopbb9in_loop_cont(A,B,C,D,E,F,G,H,I,J) 

#### Partial ranking functions of CR evalNestedLoopbb9in_loop_cont(A,B,C,D,E,F,G,H,I,J) 


### Specialization of cost equations evalNestedLoopentryin/9 
* CE 2 is refined into CE [57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80] 


### Cost equations --> "Loop" of evalNestedLoopentryin/9 
* CEs [76] --> Loop 57 
* CEs [74] --> Loop 58 
* CEs [72] --> Loop 59 
* CEs [69] --> Loop 60 
* CEs [68] --> Loop 61 
* CEs [63] --> Loop 62 
* CEs [65,79] --> Loop 63 
* CEs [75] --> Loop 64 
* CEs [73] --> Loop 65 
* CEs [71] --> Loop 66 
* CEs [67] --> Loop 67 
* CEs [64,80] --> Loop 68 
* CEs [62,78] --> Loop 69 
* CEs [61] --> Loop 70 
* CEs [70] --> Loop 71 
* CEs [66] --> Loop 72 
* CEs [58,60] --> Loop 73 
* CEs [57,59] --> Loop 74 
* CEs [77] --> Loop 75 

### Ranking functions of CR evalNestedLoopentryin(A,B,C,D,E,F,G,H,J) 

#### Partial ranking functions of CR evalNestedLoopentryin(A,B,C,D,E,F,G,H,J) 


### Specialization of cost equations evalNestedLoopstart/9 
* CE 1 is refined into CE [81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99] 


### Cost equations --> "Loop" of evalNestedLoopstart/9 
* CEs [99] --> Loop 76 
* CEs [98] --> Loop 77 
* CEs [97] --> Loop 78 
* CEs [96] --> Loop 79 
* CEs [95] --> Loop 80 
* CEs [94] --> Loop 81 
* CEs [93] --> Loop 82 
* CEs [92] --> Loop 83 
* CEs [91] --> Loop 84 
* CEs [90] --> Loop 85 
* CEs [89] --> Loop 86 
* CEs [88] --> Loop 87 
* CEs [87] --> Loop 88 
* CEs [86] --> Loop 89 
* CEs [85] --> Loop 90 
* CEs [84] --> Loop 91 
* CEs [83] --> Loop 92 
* CEs [82] --> Loop 93 
* CEs [81] --> Loop 94 

### Ranking functions of CR evalNestedLoopstart(A,B,C,D,E,F,G,H,J) 

#### Partial ranking functions of CR evalNestedLoopstart(A,B,C,D,E,F,G,H,J) 


Computing Bounds
=====================================

#### Cost of chains of evalNestedLoopbb3in(C,E,F,H,J,K,L):
* Chain [[19],22]: 1*it(19)+0
  Such that:it(19) =< -H+L

  with precondition: [J=2,C=K,C=L,C>=0,E>=0,H>=F,C>=H+1] 

* Chain [[19],21]: 1*it(19)+0
  Such that:it(19) =< -H+L

  with precondition: [J=2,K=L,C>=0,E>=0,H>=F,K>=H+1,C>=K+1] 

* Chain [[19],20]: 1*it(19)+0
  Such that:it(19) =< C-H

  with precondition: [J=3,C>=0,E>=0,H>=F,C>=H+1] 

* Chain [22]: 0
  with precondition: [J=2,H=K,H=L,C>=0,E>=0,H>=C,H>=F] 

* Chain [21]: 0
  with precondition: [J=2,H=K,H=L,C>=0,E>=0,H>=F,C>=H+1] 

* Chain [20]: 0
  with precondition: [J=3,C>=0,E>=0,H>=F] 


#### Cost of chains of evalNestedLoopbb6in(B,C,E,F,G,H,J,K,L,M,N):
* Chain [[25],31]: 1*it(25)+0
  Such that:it(25) =< B-E

  with precondition: [J=3,C>=0,E>=0,F>=C,B>=E+1] 

* Chain [[25],30]: 1*it(25)+0
  Such that:it(25) =< B-E

  with precondition: [J=3,C>=0,E>=0,F>=C,B>=E+2] 

* Chain [[25],28]: 1*it(25)+0
  Such that:it(25) =< -E+K

  with precondition: [J=4,B=K,F=L,B=M,F=N,C>=0,E>=0,F>=C,B>=E+1] 

* Chain [[25],27]: 1*it(25)+0
  Such that:it(25) =< -E+K

  with precondition: [J=4,F=L,K=M,F=N,C>=0,E>=0,F>=C,K>=E+1,B>=K+1] 

* Chain [[23,24],31]: 1*it(23)+1*it(24)+1*s(3)+0
  Such that:aux(5) =< B-E
aux(6) =< C-F
it(23) =< aux(5)
it(24) =< aux(5)
it(23) =< aux(6)
s(3) =< aux(6)

  with precondition: [J=3,C>=0,E>=0,B>=E+1,C>=F+1] 

* Chain [[23,24],30]: 1*it(23)+1*it(24)+1*s(3)+0
  Such that:aux(7) =< B-E
aux(8) =< C-F
it(23) =< aux(7)
it(24) =< aux(7)
it(23) =< aux(8)
s(3) =< aux(8)

  with precondition: [J=3,C>=0,E>=0,B>=E+2,C>=F+1] 

* Chain [[23,24],29]: 1*it(23)+1*it(24)+2*s(3)+0
  Such that:aux(9) =< B-E
aux(10) =< C-F
s(3) =< aux(10)
it(23) =< aux(9)
it(24) =< aux(9)
it(23) =< aux(10)

  with precondition: [J=3,C>=0,E>=0,B>=E+2,C>=F+1] 

* Chain [[23,24],28]: 1*it(23)+1*it(24)+1*s(3)+0
  Such that:aux(3) =< C-F
aux(4) =< -F+L
aux(11) =< -E+M
it(23) =< aux(11)
it(24) =< aux(11)
it(23) =< aux(3)
s(3) =< aux(3)
it(23) =< aux(4)
s(3) =< aux(4)

  with precondition: [J=4,B=K,B=M,L=N,C>=0,E>=0,B>=E+1,L>=F,C>=L+1] 

* Chain [[23,24],27]: 1*it(23)+1*it(24)+1*s(3)+0
  Such that:aux(1) =< B-E
aux(3) =< C-F
aux(2) =< -E+M
aux(4) =< -F+L
it(23) =< aux(1)
it(24) =< aux(1)
it(23) =< aux(2)
it(24) =< aux(2)
it(23) =< aux(3)
s(3) =< aux(3)
it(23) =< aux(4)
s(3) =< aux(4)

  with precondition: [J=4,K=M,L=N,C>=0,E>=0,K>=E+1,L>=F,B>=K+1,C>=L+1] 

* Chain [[23,24],26,[25],31]: 1*it(23)+2*it(24)+2*s(3)+1
  Such that:aux(12) =< B-E
aux(13) =< C-F
it(24) =< aux(12)
s(3) =< aux(13)
it(23) =< aux(12)
it(23) =< aux(13)

  with precondition: [J=3,C>=0,E>=0,B>=E+3,C>=F+1] 

* Chain [[23,24],26,[25],30]: 1*it(23)+2*it(24)+2*s(3)+1
  Such that:aux(14) =< B-E
aux(15) =< C-F
it(24) =< aux(14)
s(3) =< aux(15)
it(23) =< aux(14)
it(23) =< aux(15)

  with precondition: [J=3,C>=0,E>=0,B>=E+4,C>=F+1] 

* Chain [[23,24],26,[25],28]: 1*it(23)+2*it(24)+2*s(3)+1
  Such that:aux(16) =< -E+K
aux(17) =< -F+L
it(24) =< aux(16)
s(3) =< aux(17)
it(23) =< aux(16)
it(23) =< aux(17)

  with precondition: [J=4,B=K,C=L,B=M,C=N,C>=0,E>=0,B>=E+3,C>=F+1] 

* Chain [[23,24],26,[25],27]: 1*it(23)+1*it(24)+1*it(25)+2*s(3)+1
  Such that:aux(1) =< B-E
aux(18) =< -E+K
aux(19) =< -F+L
it(25) =< aux(18)
s(3) =< aux(19)
it(23) =< aux(1)
it(24) =< aux(1)
it(23) =< aux(18)
it(24) =< aux(18)
it(23) =< aux(19)

  with precondition: [J=4,C=L,K=M,C=N,C>=0,E>=0,K>=E+3,C>=F+1,B>=K+1] 

* Chain [[23,24],26,31]: 1*it(23)+1*it(24)+2*s(3)+1
  Such that:aux(20) =< B-E
aux(21) =< C-F
s(3) =< aux(21)
it(23) =< aux(20)
it(24) =< aux(20)
it(23) =< aux(21)

  with precondition: [J=3,C>=0,E>=0,B>=E+2,C>=F+1] 

* Chain [[23,24],26,30]: 1*it(23)+1*it(24)+2*s(3)+1
  Such that:aux(22) =< B-E
aux(23) =< C-F
s(3) =< aux(23)
it(23) =< aux(22)
it(24) =< aux(22)
it(23) =< aux(23)

  with precondition: [J=3,C>=0,E>=0,B>=E+3,C>=F+1] 

* Chain [[23,24],26,28]: 1*it(23)+1*it(24)+2*s(3)+1
  Such that:aux(24) =< -E+K
aux(25) =< -F+L
s(3) =< aux(25)
it(23) =< aux(24)
it(24) =< aux(24)
it(23) =< aux(25)

  with precondition: [J=4,B=K,C=L,B=M,C=N,C>=0,E>=0,B>=E+2,C>=F+1] 

* Chain [[23,24],26,27]: 1*it(23)+1*it(24)+2*s(3)+1
  Such that:aux(1) =< B-E
aux(2) =< -E+K
aux(26) =< -F+L
s(3) =< aux(26)
it(23) =< aux(1)
it(24) =< aux(1)
it(23) =< aux(2)
it(24) =< aux(2)
it(23) =< aux(26)

  with precondition: [J=4,C=L,K=M,C=N,C>=0,E>=0,K>=E+2,C>=F+1,B>=K+1] 

* Chain [31]: 0
  with precondition: [J=3,C>=0,E>=0,B>=E] 

* Chain [30]: 0
  with precondition: [J=3,C>=0,E>=0,B>=E+1] 

* Chain [29]: 1*s(4)+0
  Such that:s(4) =< C-F

  with precondition: [J=3,C>=0,E>=0,B>=E+1,C>=F+1] 

* Chain [28]: 0
  with precondition: [J=4,E=B,L=F,M=G,N=H,E=K,C>=0,E>=0] 

* Chain [27]: 0
  with precondition: [J=4,L=F,M=G,N=H,E=K,C>=0,E>=0,B>=E+1] 

* Chain [26,[25],31]: 1*it(25)+1*s(5)+1
  Such that:it(25) =< B-E
s(5) =< C-F

  with precondition: [J=3,C>=0,E>=0,B>=E+2,C>=F+1] 

* Chain [26,[25],30]: 1*it(25)+1*s(5)+1
  Such that:it(25) =< B-E
s(5) =< C-F

  with precondition: [J=3,C>=0,E>=0,B>=E+3,C>=F+1] 

* Chain [26,[25],28]: 1*it(25)+1*s(5)+1
  Such that:it(25) =< -E+K
s(5) =< -F+L

  with precondition: [J=4,B=K,C=L,B=M,C=N,C>=0,E>=0,B>=E+2,C>=F+1] 

* Chain [26,[25],27]: 1*it(25)+1*s(5)+1
  Such that:it(25) =< -E+K
s(5) =< -F+L

  with precondition: [J=4,C=L,K=M,C=N,C>=0,E>=0,K>=E+2,C>=F+1,B>=K+1] 

* Chain [26,31]: 1*s(5)+1
  Such that:s(5) =< C-F

  with precondition: [J=3,C>=0,E>=0,B>=E+1,C>=F+1] 

* Chain [26,30]: 1*s(5)+1
  Such that:s(5) =< C-F

  with precondition: [J=3,C>=0,E>=0,B>=E+2,C>=F+1] 

* Chain [26,28]: 1*s(5)+1
  Such that:s(5) =< -F+L

  with precondition: [J=4,B=E+1,B=K,C=L,B=M,C=N,B>=1,C>=0,C>=F+1] 

* Chain [26,27]: 1*s(5)+1
  Such that:s(5) =< -F+L

  with precondition: [J=4,K=E+1,C=L,K=M,C=N,C>=0,K>=1,C>=F+1,B>=K+1] 


#### Cost of chains of evalNestedLoopbb9in(A,B,C,D,E,F,G,H,J,K,L,M,N,O):
* Chain [[43],54]: 1*it(43)+0
  Such that:it(43) =< A-D

  with precondition: [B=0,J=3,C>=0,D>=0,A>=D+1] 

* Chain [[43],53]: 1*it(43)+0
  Such that:it(43) =< A-D

  with precondition: [B=0,J=3,C>=0,D>=0,A>=D+2] 

* Chain [[43],45]: 1*it(43)+0
  Such that:it(43) =< -D+K

  with precondition: [B=0,J=5,L=0,A=K,A=M+1,G=N,H=O,C>=0,D>=0,A>=D+1] 

* Chain [[43],44]: 1*it(43)+0
  Such that:it(43) =< -D+K

  with precondition: [B=0,J=5,L=0,K=M+1,G=N,H=O,C>=0,D>=0,K>=D+1,A>=K+1] 

* Chain [[32,33,34,35,36,37,38,39,40,41,42],54]: 2*it(32)+3*it(34)+2*it(36)+10*it(37)+1*s(140)+1*s(141)+1*s(142)+1*s(147)+1*s(148)+1*s(149)+1*s(153)+1*s(154)+1*s(155)+10*s(156)+1*s(157)+1*s(158)+1*s(162)+1*s(164)+1*s(165)+4*s(169)+2*s(171)+2*s(179)+0
  Such that:aux(49) =< A+B+C-D
aux(53) =< A-D
aux(55) =< A/2-D/2
aux(37) =< B
aux(57) =< C-D
aux(58) =< C-D+1
aux(60) =< C/2-D/2
aux(62) =< A+C-D
aux(63) =< A/2+C/2-D/2
it(32) =< aux(49)
it(34) =< aux(49)
it(36) =< aux(49)
it(37) =< aux(49)
it(32) =< aux(62)
it(34) =< aux(62)
it(36) =< aux(62)
it(37) =< aux(62)
it(32) =< aux(53)
it(34) =< aux(53)
it(36) =< aux(53)
it(37) =< aux(53)
it(36) =< aux(55)
it(37) =< aux(55)
it(36) =< aux(63)
it(37) =< aux(63)
it(32) =< aux(57)
it(36) =< aux(57)
it(37) =< aux(57)
s(143) =< aux(57)
it(37) =< aux(58)
s(159) =< aux(58)
s(179) =< aux(58)
s(143) =< aux(62)
s(159) =< aux(62)
s(179) =< aux(62)
it(36) =< aux(60)
it(37) =< aux(60)
aux(40) =< aux(37)
aux(38) =< aux(37)-1
aux(39) =< aux(57)
s(146) =< it(32)*aux(37)
s(144) =< it(32)*aux(57)
s(168) =< it(37)*aux(40)
s(167) =< it(37)*aux(38)
s(160) =< it(36)*aux(38)
s(161) =< it(36)*aux(40)
s(154) =< it(34)*aux(40)
s(153) =< it(34)*aux(38)
s(152) =< it(32)*aux(40)
s(151) =< it(32)*aux(39)
s(145) =< it(32)*aux(38)
s(169) =< s(168)
s(156) =< s(159)
s(171) =< s(168)
s(171) =< s(159)
s(162) =< s(167)
s(164) =< s(168)
s(165) =< s(168)
s(164) =< s(167)
s(165) =< s(167)
s(164) =< s(159)
s(155) =< s(160)
s(157) =< s(161)
s(158) =< s(161)
s(157) =< s(160)
s(158) =< s(160)
s(157) =< s(159)
s(147) =< s(152)
s(148) =< s(152)
s(147) =< s(151)
s(149) =< s(151)
s(147) =< s(143)
s(149) =< s(143)
s(140) =< s(146)
s(141) =< s(146)
s(140) =< s(145)
s(141) =< s(145)
s(140) =< s(144)
s(142) =< s(144)
s(140) =< s(143)
s(142) =< s(143)

  with precondition: [J=3,B>=1,C>=0,D>=0,A>=D+1] 

* Chain [[32,33,34,35,36,37,38,39,40,41,42],53]: 2*it(32)+3*it(34)+2*it(36)+10*it(37)+1*s(140)+1*s(141)+1*s(142)+1*s(147)+1*s(148)+1*s(149)+1*s(153)+1*s(154)+1*s(155)+10*s(156)+1*s(157)+1*s(158)+1*s(162)+1*s(164)+1*s(165)+4*s(169)+2*s(171)+2*s(179)+0
  Such that:aux(49) =< A+B+C-D
aux(51) =< A+C-D
aux(37) =< B
aux(57) =< C-D
aux(58) =< C-D+1
aux(60) =< C/2-D/2
aux(64) =< A-D
aux(65) =< A/2-D/2
it(32) =< aux(49)
it(34) =< aux(49)
it(36) =< aux(49)
it(37) =< aux(49)
it(32) =< aux(64)
it(34) =< aux(64)
it(36) =< aux(64)
it(37) =< aux(64)
it(32) =< aux(51)
it(34) =< aux(51)
it(36) =< aux(51)
it(37) =< aux(51)
it(36) =< aux(65)
it(37) =< aux(65)
it(32) =< aux(57)
it(36) =< aux(57)
it(37) =< aux(57)
s(143) =< aux(57)
it(37) =< aux(58)
s(159) =< aux(58)
s(179) =< aux(58)
s(143) =< aux(64)
s(159) =< aux(64)
s(179) =< aux(64)
it(36) =< aux(60)
it(37) =< aux(60)
aux(40) =< aux(37)
aux(38) =< aux(37)-1
aux(39) =< aux(57)
s(146) =< it(32)*aux(37)
s(144) =< it(32)*aux(57)
s(168) =< it(37)*aux(40)
s(167) =< it(37)*aux(38)
s(160) =< it(36)*aux(38)
s(161) =< it(36)*aux(40)
s(154) =< it(34)*aux(40)
s(153) =< it(34)*aux(38)
s(152) =< it(32)*aux(40)
s(151) =< it(32)*aux(39)
s(145) =< it(32)*aux(38)
s(169) =< s(168)
s(156) =< s(159)
s(171) =< s(168)
s(171) =< s(159)
s(162) =< s(167)
s(164) =< s(168)
s(165) =< s(168)
s(164) =< s(167)
s(165) =< s(167)
s(164) =< s(159)
s(155) =< s(160)
s(157) =< s(161)
s(158) =< s(161)
s(157) =< s(160)
s(158) =< s(160)
s(157) =< s(159)
s(147) =< s(152)
s(148) =< s(152)
s(147) =< s(151)
s(149) =< s(151)
s(147) =< s(143)
s(149) =< s(143)
s(140) =< s(146)
s(141) =< s(146)
s(140) =< s(145)
s(141) =< s(145)
s(140) =< s(144)
s(142) =< s(144)
s(140) =< s(143)
s(142) =< s(143)

  with precondition: [J=3,B>=1,C>=0,D>=0,A>=D+2] 

* Chain [[32,33,34,35,36,37,38,39,40,41,42],52]: 2*it(32)+3*it(34)+2*it(36)+10*it(37)+1*s(140)+1*s(141)+1*s(142)+1*s(147)+1*s(148)+1*s(149)+1*s(153)+1*s(154)+1*s(155)+10*s(156)+1*s(157)+1*s(158)+1*s(162)+1*s(164)+1*s(165)+4*s(169)+2*s(171)+2*s(179)+0
  Such that:aux(49) =< A+B+C-D
aux(51) =< A+C-D
aux(37) =< B
aux(57) =< C-D
aux(58) =< C-D+1
aux(60) =< C/2-D/2
aux(66) =< A-D
aux(67) =< A/2-D/2
it(32) =< aux(49)
it(34) =< aux(49)
it(36) =< aux(49)
it(37) =< aux(49)
it(32) =< aux(66)
it(34) =< aux(66)
it(36) =< aux(66)
it(37) =< aux(66)
it(32) =< aux(51)
it(34) =< aux(51)
it(36) =< aux(51)
it(37) =< aux(51)
it(36) =< aux(67)
it(37) =< aux(67)
it(32) =< aux(57)
it(36) =< aux(57)
it(37) =< aux(57)
s(143) =< aux(57)
it(37) =< aux(58)
s(159) =< aux(58)
s(179) =< aux(58)
s(143) =< aux(66)
s(159) =< aux(66)
s(179) =< aux(66)
it(36) =< aux(60)
it(37) =< aux(60)
aux(40) =< aux(37)
aux(38) =< aux(37)-1
aux(39) =< aux(57)
s(146) =< it(32)*aux(37)
s(144) =< it(32)*aux(57)
s(168) =< it(37)*aux(40)
s(167) =< it(37)*aux(38)
s(160) =< it(36)*aux(38)
s(161) =< it(36)*aux(40)
s(154) =< it(34)*aux(40)
s(153) =< it(34)*aux(38)
s(152) =< it(32)*aux(40)
s(151) =< it(32)*aux(39)
s(145) =< it(32)*aux(38)
s(169) =< s(168)
s(156) =< s(159)
s(171) =< s(168)
s(171) =< s(159)
s(162) =< s(167)
s(164) =< s(168)
s(165) =< s(168)
s(164) =< s(167)
s(165) =< s(167)
s(164) =< s(159)
s(155) =< s(160)
s(157) =< s(161)
s(158) =< s(161)
s(157) =< s(160)
s(158) =< s(160)
s(157) =< s(159)
s(147) =< s(152)
s(148) =< s(152)
s(147) =< s(151)
s(149) =< s(151)
s(147) =< s(143)
s(149) =< s(143)
s(140) =< s(146)
s(141) =< s(146)
s(140) =< s(145)
s(141) =< s(145)
s(140) =< s(144)
s(142) =< s(144)
s(140) =< s(143)
s(142) =< s(143)

  with precondition: [J=3,B>=1,C>=0,D>=0,A>=D+2] 

* Chain [[32,33,34,35,36,37,38,39,40,41,42],51]: 5*it(32)+2*it(36)+10*it(37)+1*s(140)+1*s(141)+1*s(142)+1*s(147)+1*s(148)+1*s(149)+1*s(153)+1*s(154)+1*s(155)+10*s(156)+1*s(157)+1*s(158)+1*s(162)+1*s(164)+1*s(165)+4*s(169)+2*s(171)+2*s(179)+3*s(183)+1*s(184)+1*s(185)+1
  Such that:aux(49) =< A+B+C-D
aux(51) =< A+C-D
aux(53) =< A-D
aux(55) =< A/2-D/2
aux(58) =< C-D+1
aux(68) =< B
aux(69) =< C-D
aux(70) =< C/2-D/2
aux(56) =< aux(69)
aux(56) =< aux(70)
s(183) =< aux(69)
s(184) =< aux(68)
s(185) =< aux(68)
s(184) =< aux(69)
it(32) =< aux(49)
it(36) =< aux(49)
it(37) =< aux(49)
it(32) =< aux(69)
it(36) =< aux(69)
it(37) =< aux(69)
it(32) =< aux(51)
it(36) =< aux(51)
it(37) =< aux(51)
it(32) =< aux(53)
it(36) =< aux(53)
it(37) =< aux(53)
it(36) =< aux(55)
it(37) =< aux(55)
it(36) =< aux(56)
it(37) =< aux(56)
it(37) =< aux(58)
s(159) =< aux(58)
s(179) =< aux(58)
s(159) =< aux(69)
s(179) =< aux(69)
it(36) =< aux(70)
it(37) =< aux(70)
aux(40) =< aux(68)
aux(38) =< aux(68)-1
aux(39) =< aux(69)
s(146) =< it(32)*aux(68)
s(144) =< it(32)*aux(69)
s(168) =< it(37)*aux(40)
s(167) =< it(37)*aux(38)
s(160) =< it(36)*aux(38)
s(161) =< it(36)*aux(40)
s(154) =< it(32)*aux(40)
s(153) =< it(32)*aux(38)
s(152) =< it(32)*aux(40)
s(151) =< it(32)*aux(39)
s(145) =< it(32)*aux(38)
s(169) =< s(168)
s(156) =< s(159)
s(171) =< s(168)
s(171) =< s(159)
s(162) =< s(167)
s(164) =< s(168)
s(165) =< s(168)
s(164) =< s(167)
s(165) =< s(167)
s(164) =< s(159)
s(155) =< s(160)
s(157) =< s(161)
s(158) =< s(161)
s(157) =< s(160)
s(158) =< s(160)
s(157) =< s(159)
s(147) =< s(152)
s(148) =< s(152)
s(147) =< s(151)
s(149) =< s(151)
s(147) =< aux(69)
s(149) =< aux(69)
s(140) =< s(146)
s(141) =< s(146)
s(140) =< s(145)
s(141) =< s(145)
s(140) =< s(144)
s(142) =< s(144)
s(140) =< aux(69)
s(142) =< aux(69)

  with precondition: [J=3,B>=1,D>=0,A>=D+2,C>=D+2] 

* Chain [[32,33,34,35,36,37,38,39,40,41,42],50]: 5*it(32)+2*it(36)+10*it(37)+1*s(140)+1*s(141)+1*s(142)+1*s(147)+1*s(148)+1*s(149)+1*s(153)+1*s(154)+1*s(155)+10*s(156)+1*s(157)+1*s(158)+1*s(162)+1*s(164)+1*s(165)+4*s(169)+2*s(171)+2*s(179)+4*s(188)+7*s(189)+3*s(190)+1
  Such that:aux(49) =< A+B+C-D
aux(51) =< A+C-D
aux(53) =< A-D
aux(55) =< A/2-D/2
aux(58) =< C-D+1
aux(71) =< B
aux(72) =< C-D
aux(73) =< C/2-D/2
aux(56) =< aux(72)
aux(56) =< aux(73)
s(188) =< aux(71)
s(189) =< aux(72)
s(190) =< aux(71)
s(190) =< aux(72)
it(32) =< aux(49)
it(36) =< aux(49)
it(37) =< aux(49)
it(32) =< aux(72)
it(36) =< aux(72)
it(37) =< aux(72)
it(32) =< aux(51)
it(36) =< aux(51)
it(37) =< aux(51)
it(32) =< aux(53)
it(36) =< aux(53)
it(37) =< aux(53)
it(36) =< aux(55)
it(37) =< aux(55)
it(36) =< aux(56)
it(37) =< aux(56)
it(37) =< aux(58)
s(159) =< aux(58)
s(179) =< aux(58)
s(159) =< aux(72)
s(179) =< aux(72)
it(36) =< aux(73)
it(37) =< aux(73)
aux(40) =< aux(71)
aux(38) =< aux(71)-1
aux(39) =< aux(72)
s(146) =< it(32)*aux(71)
s(144) =< it(32)*aux(72)
s(168) =< it(37)*aux(40)
s(167) =< it(37)*aux(38)
s(160) =< it(36)*aux(38)
s(161) =< it(36)*aux(40)
s(154) =< it(32)*aux(40)
s(153) =< it(32)*aux(38)
s(152) =< it(32)*aux(40)
s(151) =< it(32)*aux(39)
s(145) =< it(32)*aux(38)
s(169) =< s(168)
s(156) =< s(159)
s(171) =< s(168)
s(171) =< s(159)
s(162) =< s(167)
s(164) =< s(168)
s(165) =< s(168)
s(164) =< s(167)
s(165) =< s(167)
s(164) =< s(159)
s(155) =< s(160)
s(157) =< s(161)
s(158) =< s(161)
s(157) =< s(160)
s(158) =< s(160)
s(157) =< s(159)
s(147) =< s(152)
s(148) =< s(152)
s(147) =< s(151)
s(149) =< s(151)
s(147) =< aux(72)
s(149) =< aux(72)
s(140) =< s(146)
s(141) =< s(146)
s(140) =< s(145)
s(141) =< s(145)
s(140) =< s(144)
s(142) =< s(144)
s(140) =< aux(72)
s(142) =< aux(72)

  with precondition: [J=3,B>=2,D>=0,A>=D+2,C>=D+2] 

* Chain [[32,33,34,35,36,37,38,39,40,41,42],49]: 5*it(32)+2*it(36)+10*it(37)+1*s(140)+1*s(141)+1*s(142)+1*s(147)+1*s(148)+1*s(149)+1*s(153)+1*s(154)+1*s(155)+10*s(156)+1*s(157)+1*s(158)+1*s(162)+1*s(164)+1*s(165)+4*s(169)+2*s(171)+2*s(179)+4*s(193)+5*s(194)+2*s(195)+1
  Such that:aux(49) =< A+B+C-D
aux(51) =< A+C-D
aux(53) =< A-D
aux(55) =< A/2-D/2
aux(58) =< C-D+1
aux(74) =< B
aux(75) =< C-D
aux(76) =< C/2-D/2
aux(56) =< aux(75)
aux(56) =< aux(76)
s(193) =< aux(74)
s(194) =< aux(75)
s(195) =< aux(74)
s(195) =< aux(75)
it(32) =< aux(49)
it(36) =< aux(49)
it(37) =< aux(49)
it(32) =< aux(75)
it(36) =< aux(75)
it(37) =< aux(75)
it(32) =< aux(51)
it(36) =< aux(51)
it(37) =< aux(51)
it(32) =< aux(53)
it(36) =< aux(53)
it(37) =< aux(53)
it(36) =< aux(55)
it(37) =< aux(55)
it(36) =< aux(56)
it(37) =< aux(56)
it(37) =< aux(58)
s(159) =< aux(58)
s(179) =< aux(58)
s(159) =< aux(75)
s(179) =< aux(75)
it(36) =< aux(76)
it(37) =< aux(76)
aux(40) =< aux(74)
aux(38) =< aux(74)-1
aux(39) =< aux(75)
s(146) =< it(32)*aux(74)
s(144) =< it(32)*aux(75)
s(168) =< it(37)*aux(40)
s(167) =< it(37)*aux(38)
s(160) =< it(36)*aux(38)
s(161) =< it(36)*aux(40)
s(154) =< it(32)*aux(40)
s(153) =< it(32)*aux(38)
s(152) =< it(32)*aux(40)
s(151) =< it(32)*aux(39)
s(145) =< it(32)*aux(38)
s(169) =< s(168)
s(156) =< s(159)
s(171) =< s(168)
s(171) =< s(159)
s(162) =< s(167)
s(164) =< s(168)
s(165) =< s(168)
s(164) =< s(167)
s(165) =< s(167)
s(164) =< s(159)
s(155) =< s(160)
s(157) =< s(161)
s(158) =< s(161)
s(157) =< s(160)
s(158) =< s(160)
s(157) =< s(159)
s(147) =< s(152)
s(148) =< s(152)
s(147) =< s(151)
s(149) =< s(151)
s(147) =< aux(75)
s(149) =< aux(75)
s(140) =< s(146)
s(141) =< s(146)
s(140) =< s(145)
s(141) =< s(145)
s(140) =< s(144)
s(142) =< s(144)
s(140) =< aux(75)
s(142) =< aux(75)

  with precondition: [J=3,B>=3,D>=0,A>=D+2,C>=D+2] 

* Chain [[32,33,34,35,36,37,38,39,40,41,42],48]: 5*it(32)+2*it(36)+10*it(37)+1*s(140)+1*s(141)+1*s(142)+1*s(147)+1*s(148)+1*s(149)+1*s(153)+1*s(154)+1*s(155)+10*s(156)+1*s(157)+1*s(158)+1*s(162)+1*s(164)+1*s(165)+4*s(169)+2*s(171)+2*s(179)+2*s(198)+2*s(199)+1*s(200)+1
  Such that:aux(49) =< A+B+C-D
aux(51) =< A+C-D
aux(53) =< A-D
aux(55) =< A/2-D/2
aux(58) =< C-D+1
aux(77) =< B
aux(78) =< C-D
aux(79) =< C/2-D/2
aux(56) =< aux(78)
aux(56) =< aux(79)
s(198) =< aux(77)
s(199) =< aux(78)
s(200) =< aux(77)
s(200) =< aux(78)
it(32) =< aux(49)
it(36) =< aux(49)
it(37) =< aux(49)
it(32) =< aux(78)
it(36) =< aux(78)
it(37) =< aux(78)
it(32) =< aux(51)
it(36) =< aux(51)
it(37) =< aux(51)
it(32) =< aux(53)
it(36) =< aux(53)
it(37) =< aux(53)
it(36) =< aux(55)
it(37) =< aux(55)
it(36) =< aux(56)
it(37) =< aux(56)
it(37) =< aux(58)
s(159) =< aux(58)
s(179) =< aux(58)
s(159) =< aux(78)
s(179) =< aux(78)
it(36) =< aux(79)
it(37) =< aux(79)
aux(40) =< aux(77)
aux(38) =< aux(77)-1
aux(39) =< aux(78)
s(146) =< it(32)*aux(77)
s(144) =< it(32)*aux(78)
s(168) =< it(37)*aux(40)
s(167) =< it(37)*aux(38)
s(160) =< it(36)*aux(38)
s(161) =< it(36)*aux(40)
s(154) =< it(32)*aux(40)
s(153) =< it(32)*aux(38)
s(152) =< it(32)*aux(40)
s(151) =< it(32)*aux(39)
s(145) =< it(32)*aux(38)
s(169) =< s(168)
s(156) =< s(159)
s(171) =< s(168)
s(171) =< s(159)
s(162) =< s(167)
s(164) =< s(168)
s(165) =< s(168)
s(164) =< s(167)
s(165) =< s(167)
s(164) =< s(159)
s(155) =< s(160)
s(157) =< s(161)
s(158) =< s(161)
s(157) =< s(160)
s(158) =< s(160)
s(157) =< s(159)
s(147) =< s(152)
s(148) =< s(152)
s(147) =< s(151)
s(149) =< s(151)
s(147) =< aux(78)
s(149) =< aux(78)
s(140) =< s(146)
s(141) =< s(146)
s(140) =< s(145)
s(141) =< s(145)
s(140) =< s(144)
s(142) =< s(144)
s(140) =< aux(78)
s(142) =< aux(78)

  with precondition: [J=3,B>=4,D>=0,A>=D+2,C>=D+2] 

* Chain [[32,33,34,35,36,37,38,39,40,41,42],47]: 2*it(32)+3*it(34)+2*it(36)+10*it(37)+1*s(140)+1*s(141)+1*s(142)+1*s(147)+1*s(148)+1*s(149)+1*s(153)+1*s(154)+1*s(155)+10*s(156)+1*s(157)+1*s(158)+1*s(162)+1*s(164)+1*s(165)+4*s(169)+2*s(171)+2*s(179)+1*s(201)+0
  Such that:aux(49) =< A+B+C-D
aux(51) =< A+C-D
aux(57) =< C-D
aux(58) =< C-D+1
aux(60) =< C/2-D/2
aux(80) =< A-D
aux(81) =< A/2-D/2
aux(82) =< B
s(201) =< aux(82)
it(32) =< aux(49)
it(34) =< aux(49)
it(36) =< aux(49)
it(37) =< aux(49)
it(32) =< aux(80)
it(34) =< aux(80)
it(36) =< aux(80)
it(37) =< aux(80)
it(32) =< aux(51)
it(34) =< aux(51)
it(36) =< aux(51)
it(37) =< aux(51)
it(36) =< aux(81)
it(37) =< aux(81)
it(32) =< aux(57)
it(36) =< aux(57)
it(37) =< aux(57)
s(143) =< aux(57)
it(37) =< aux(58)
s(159) =< aux(58)
s(179) =< aux(58)
s(143) =< aux(80)
s(159) =< aux(80)
s(179) =< aux(80)
it(36) =< aux(60)
it(37) =< aux(60)
aux(40) =< aux(82)
aux(38) =< aux(82)-1
aux(39) =< aux(57)
s(146) =< it(32)*aux(82)
s(144) =< it(32)*aux(57)
s(168) =< it(37)*aux(40)
s(167) =< it(37)*aux(38)
s(160) =< it(36)*aux(38)
s(161) =< it(36)*aux(40)
s(154) =< it(34)*aux(40)
s(153) =< it(34)*aux(38)
s(152) =< it(32)*aux(40)
s(151) =< it(32)*aux(39)
s(145) =< it(32)*aux(38)
s(169) =< s(168)
s(156) =< s(159)
s(171) =< s(168)
s(171) =< s(159)
s(162) =< s(167)
s(164) =< s(168)
s(165) =< s(168)
s(164) =< s(167)
s(165) =< s(167)
s(164) =< s(159)
s(155) =< s(160)
s(157) =< s(161)
s(158) =< s(161)
s(157) =< s(160)
s(158) =< s(160)
s(157) =< s(159)
s(147) =< s(152)
s(148) =< s(152)
s(147) =< s(151)
s(149) =< s(151)
s(147) =< s(143)
s(149) =< s(143)
s(140) =< s(146)
s(141) =< s(146)
s(140) =< s(145)
s(141) =< s(145)
s(140) =< s(144)
s(142) =< s(144)
s(140) =< s(143)
s(142) =< s(143)

  with precondition: [J=3,B>=1,C>=0,D>=0,A>=C+1,A>=D+2] 

* Chain [[32,33,34,35,36,37,38,39,40,41,42],46]: 2*it(32)+3*it(34)+2*it(36)+10*it(37)+1*s(140)+1*s(141)+1*s(142)+1*s(147)+1*s(148)+1*s(149)+1*s(153)+1*s(154)+1*s(155)+10*s(156)+1*s(157)+1*s(158)+1*s(162)+1*s(164)+1*s(165)+4*s(169)+2*s(171)+2*s(179)+1*s(202)+0
  Such that:aux(49) =< A+B+C-D
aux(51) =< A+C-D
aux(57) =< C-D
aux(58) =< C-D+1
aux(60) =< C/2-D/2
aux(83) =< A-D
aux(84) =< A/2-D/2
aux(85) =< B
s(202) =< aux(85)
it(32) =< aux(49)
it(34) =< aux(49)
it(36) =< aux(49)
it(37) =< aux(49)
it(32) =< aux(83)
it(34) =< aux(83)
it(36) =< aux(83)
it(37) =< aux(83)
it(32) =< aux(51)
it(34) =< aux(51)
it(36) =< aux(51)
it(37) =< aux(51)
it(36) =< aux(84)
it(37) =< aux(84)
it(32) =< aux(57)
it(36) =< aux(57)
it(37) =< aux(57)
s(143) =< aux(57)
it(37) =< aux(58)
s(159) =< aux(58)
s(179) =< aux(58)
s(143) =< aux(83)
s(159) =< aux(83)
s(179) =< aux(83)
it(36) =< aux(60)
it(37) =< aux(60)
aux(40) =< aux(85)
aux(38) =< aux(85)-1
aux(39) =< aux(57)
s(146) =< it(32)*aux(85)
s(144) =< it(32)*aux(57)
s(168) =< it(37)*aux(40)
s(167) =< it(37)*aux(38)
s(160) =< it(36)*aux(38)
s(161) =< it(36)*aux(40)
s(154) =< it(34)*aux(40)
s(153) =< it(34)*aux(38)
s(152) =< it(32)*aux(40)
s(151) =< it(32)*aux(39)
s(145) =< it(32)*aux(38)
s(169) =< s(168)
s(156) =< s(159)
s(171) =< s(168)
s(171) =< s(159)
s(162) =< s(167)
s(164) =< s(168)
s(165) =< s(168)
s(164) =< s(167)
s(165) =< s(167)
s(164) =< s(159)
s(155) =< s(160)
s(157) =< s(161)
s(158) =< s(161)
s(157) =< s(160)
s(158) =< s(160)
s(157) =< s(159)
s(147) =< s(152)
s(148) =< s(152)
s(147) =< s(151)
s(149) =< s(151)
s(147) =< s(143)
s(149) =< s(143)
s(140) =< s(146)
s(141) =< s(146)
s(140) =< s(145)
s(141) =< s(145)
s(140) =< s(144)
s(142) =< s(144)
s(140) =< s(143)
s(142) =< s(143)

  with precondition: [J=3,B>=2,C>=0,D>=0,A>=C+1,A>=D+2] 

* Chain [[32,33,34,35,36,37,38,39,40,41,42],45]: 2*it(32)+3*it(34)+2*it(36)+10*it(37)+1*s(140)+1*s(141)+1*s(142)+1*s(147)+1*s(148)+1*s(149)+1*s(153)+1*s(154)+1*s(155)+10*s(156)+1*s(157)+1*s(158)+1*s(162)+1*s(164)+1*s(165)+4*s(169)+2*s(171)+2*s(179)+0
  Such that:aux(49) =< A+B+C-D
aux(51) =< A+C-D
aux(53) =< A-D
aux(55) =< A/2-D/2
aux(37) =< B
aux(57) =< C-D
aux(58) =< C-D+1
aux(60) =< C/2-D/2
aux(86) =< -D+K
aux(87) =< -D/2+K/2
it(32) =< aux(49)
it(34) =< aux(49)
it(36) =< aux(49)
it(37) =< aux(49)
it(32) =< aux(86)
it(34) =< aux(86)
it(36) =< aux(86)
it(37) =< aux(86)
it(32) =< aux(51)
it(34) =< aux(51)
it(36) =< aux(51)
it(37) =< aux(51)
it(32) =< aux(53)
it(34) =< aux(53)
it(36) =< aux(53)
it(37) =< aux(53)
it(36) =< aux(55)
it(37) =< aux(55)
it(36) =< aux(87)
it(37) =< aux(87)
it(32) =< aux(57)
it(36) =< aux(57)
it(37) =< aux(57)
s(143) =< aux(57)
it(37) =< aux(58)
s(159) =< aux(58)
s(179) =< aux(58)
s(143) =< aux(86)
s(159) =< aux(86)
s(179) =< aux(86)
it(36) =< aux(60)
it(37) =< aux(60)
aux(40) =< aux(37)
aux(38) =< aux(37)-1
aux(39) =< aux(57)
s(146) =< it(32)*aux(37)
s(144) =< it(32)*aux(57)
s(168) =< it(37)*aux(40)
s(167) =< it(37)*aux(38)
s(160) =< it(36)*aux(38)
s(161) =< it(36)*aux(40)
s(154) =< it(34)*aux(40)
s(153) =< it(34)*aux(38)
s(152) =< it(32)*aux(40)
s(151) =< it(32)*aux(39)
s(145) =< it(32)*aux(38)
s(169) =< s(168)
s(156) =< s(159)
s(171) =< s(168)
s(171) =< s(159)
s(162) =< s(167)
s(164) =< s(168)
s(165) =< s(168)
s(164) =< s(167)
s(165) =< s(167)
s(164) =< s(159)
s(155) =< s(160)
s(157) =< s(161)
s(158) =< s(161)
s(157) =< s(160)
s(158) =< s(160)
s(157) =< s(159)
s(147) =< s(152)
s(148) =< s(152)
s(147) =< s(151)
s(149) =< s(151)
s(147) =< s(143)
s(149) =< s(143)
s(140) =< s(146)
s(141) =< s(146)
s(140) =< s(145)
s(141) =< s(145)
s(140) =< s(144)
s(142) =< s(144)
s(140) =< s(143)
s(142) =< s(143)

  with precondition: [J=5,K=M+1,B>=1,D>=0,L>=0,K>=A,A>=D+1,B>=L,A+C>=K] 

* Chain [[32,33,34,35,36,37,38,39,40,41,42],44]: 2*it(32)+3*it(34)+2*it(36)+10*it(37)+1*s(140)+1*s(141)+1*s(142)+1*s(147)+1*s(148)+1*s(149)+1*s(153)+1*s(154)+1*s(155)+10*s(156)+1*s(157)+1*s(158)+1*s(162)+1*s(164)+1*s(165)+4*s(169)+2*s(171)+2*s(179)+0
  Such that:aux(49) =< A+B+C-D
aux(51) =< A+C-D
aux(53) =< A-D
aux(55) =< A/2-D/2
aux(37) =< B
aux(57) =< C-D
aux(58) =< C-D+1
aux(60) =< C/2-D/2
aux(88) =< -D+K
aux(89) =< -D/2+K/2
it(32) =< aux(49)
it(34) =< aux(49)
it(36) =< aux(49)
it(37) =< aux(49)
it(32) =< aux(88)
it(34) =< aux(88)
it(36) =< aux(88)
it(37) =< aux(88)
it(32) =< aux(51)
it(34) =< aux(51)
it(36) =< aux(51)
it(37) =< aux(51)
it(32) =< aux(53)
it(34) =< aux(53)
it(36) =< aux(53)
it(37) =< aux(53)
it(36) =< aux(55)
it(37) =< aux(55)
it(36) =< aux(89)
it(37) =< aux(89)
it(32) =< aux(57)
it(36) =< aux(57)
it(37) =< aux(57)
s(143) =< aux(57)
it(37) =< aux(58)
s(159) =< aux(58)
s(179) =< aux(58)
s(143) =< aux(88)
s(159) =< aux(88)
s(179) =< aux(88)
it(36) =< aux(60)
it(37) =< aux(60)
aux(40) =< aux(37)
aux(38) =< aux(37)-1
aux(39) =< aux(57)
s(146) =< it(32)*aux(37)
s(144) =< it(32)*aux(57)
s(168) =< it(37)*aux(40)
s(167) =< it(37)*aux(38)
s(160) =< it(36)*aux(38)
s(161) =< it(36)*aux(40)
s(154) =< it(34)*aux(40)
s(153) =< it(34)*aux(38)
s(152) =< it(32)*aux(40)
s(151) =< it(32)*aux(39)
s(145) =< it(32)*aux(38)
s(169) =< s(168)
s(156) =< s(159)
s(171) =< s(168)
s(171) =< s(159)
s(162) =< s(167)
s(164) =< s(168)
s(165) =< s(168)
s(164) =< s(167)
s(165) =< s(167)
s(164) =< s(159)
s(155) =< s(160)
s(157) =< s(161)
s(158) =< s(161)
s(157) =< s(160)
s(158) =< s(160)
s(157) =< s(159)
s(147) =< s(152)
s(148) =< s(152)
s(147) =< s(151)
s(149) =< s(151)
s(147) =< s(143)
s(149) =< s(143)
s(140) =< s(146)
s(141) =< s(146)
s(140) =< s(145)
s(141) =< s(145)
s(140) =< s(144)
s(142) =< s(144)
s(140) =< s(143)
s(142) =< s(143)

  with precondition: [J=5,K=M+1,B>=1,C>=0,D>=0,L>=0,K>=D+1,A>=K+1,B>=L] 

* Chain [54]: 0
  with precondition: [J=3,A>=0,B>=0,C>=0,D>=0,A+C>=D] 

* Chain [53]: 0
  with precondition: [J=3,B>=0,C>=0,D>=0,A>=D+1] 

* Chain [52]: 0
  with precondition: [J=3,B>=1,C>=0,D>=0,A>=D+1] 

* Chain [51]: 3*s(183)+1*s(184)+1*s(185)+1
  Such that:s(181) =< B
s(182) =< C-D
s(183) =< s(182)
s(184) =< s(181)
s(185) =< s(181)
s(184) =< s(182)

  with precondition: [J=3,B>=1,D>=0,A>=D+1,C>=D+1] 

* Chain [50]: 4*s(188)+7*s(189)+3*s(190)+1
  Such that:s(186) =< B
s(187) =< C-D
s(188) =< s(186)
s(189) =< s(187)
s(190) =< s(186)
s(190) =< s(187)

  with precondition: [J=3,B>=2,D>=0,A>=D+1,C>=D+1] 

* Chain [49]: 4*s(193)+5*s(194)+2*s(195)+1
  Such that:s(191) =< B
s(192) =< C-D
s(193) =< s(191)
s(194) =< s(192)
s(195) =< s(191)
s(195) =< s(192)

  with precondition: [J=3,B>=3,D>=0,A>=D+1,C>=D+1] 

* Chain [48]: 2*s(198)+2*s(199)+1*s(200)+1
  Such that:s(196) =< B
s(197) =< C-D
s(198) =< s(196)
s(199) =< s(197)
s(200) =< s(196)
s(200) =< s(197)

  with precondition: [J=3,B>=4,D>=0,A>=D+1,C>=D+1] 

* Chain [47]: 1*s(201)+0
  Such that:s(201) =< B

  with precondition: [J=3,B>=1,C>=0,D>=C,A>=D+1] 

* Chain [46]: 1*s(202)+0
  Such that:s(202) =< B

  with precondition: [J=3,B>=2,C>=0,D>=C,A>=D+1] 

* Chain [45]: 0
  with precondition: [J=5,L=E,M=F,N=G,O=H,D=K,A>=0,B>=0,D>=A,A+C>=D] 

* Chain [44]: 0
  with precondition: [J=5,L=E,M=F,N=G,O=H,D=K,B>=0,C>=0,D>=0,A>=D+1] 


#### Cost of chains of evalNestedLoopbb9in_loop_cont(A,B,C,D,E,F,G,H,I,J):
* Chain [56]: 0
  with precondition: [A=3,B>=0,C>=0,D>=0] 

* Chain [55]: 0
  with precondition: [A=5,B>=0,C>=0,D>=0] 


#### Cost of chains of evalNestedLoopentryin(A,B,C,D,E,F,G,H,J):
* Chain [75]: 0
  with precondition: [A=0,B>=0,C>=0] 

* Chain [74]: 2*s(336)+0
  Such that:aux(98) =< A
s(336) =< aux(98)

  with precondition: [B=0,A>=1,C>=0] 

* Chain [73]: 2*s(338)+0
  Such that:aux(99) =< A
s(338) =< aux(99)

  with precondition: [B=0,A>=2,C>=0] 

* Chain [72]: 1*s(340)+0
  Such that:s(340) =< B

  with precondition: [C=0,A>=1,B>=1] 

* Chain [71]: 1*s(341)+0
  Such that:s(341) =< B

  with precondition: [C=0,A>=1,B>=2] 

* Chain [70]: 0
  with precondition: [A>=0,B>=0,C>=0] 

* Chain [69]: 0
  with precondition: [A>=1,B>=0,C>=0] 

* Chain [68]: 4*s(351)+6*s(352)+4*s(353)+20*s(354)+4*s(357)+2*s(367)+2*s(368)+8*s(372)+20*s(373)+4*s(374)+2*s(375)+2*s(376)+2*s(377)+2*s(378)+2*s(379)+2*s(380)+2*s(381)+2*s(382)+2*s(383)+2*s(384)+2*s(385)+2*s(386)+0
  Such that:aux(101) =< A
aux(102) =< A+B+C
aux(103) =< A+C
aux(104) =< A/2
aux(105) =< A/2+C/2
aux(106) =< B
aux(107) =< C
aux(108) =< C+1
aux(109) =< C/2
s(351) =< aux(102)
s(352) =< aux(102)
s(353) =< aux(102)
s(354) =< aux(102)
s(351) =< aux(103)
s(352) =< aux(103)
s(353) =< aux(103)
s(354) =< aux(103)
s(351) =< aux(101)
s(352) =< aux(101)
s(353) =< aux(101)
s(354) =< aux(101)
s(353) =< aux(104)
s(354) =< aux(104)
s(353) =< aux(105)
s(354) =< aux(105)
s(351) =< aux(107)
s(353) =< aux(107)
s(354) =< aux(107)
s(355) =< aux(107)
s(354) =< aux(108)
s(356) =< aux(108)
s(357) =< aux(108)
s(355) =< aux(103)
s(356) =< aux(103)
s(357) =< aux(103)
s(353) =< aux(109)
s(354) =< aux(109)
s(358) =< aux(106)
s(359) =< aux(106)-1
s(360) =< aux(107)
s(361) =< s(351)*aux(106)
s(362) =< s(351)*aux(107)
s(363) =< s(354)*s(358)
s(364) =< s(354)*s(359)
s(365) =< s(353)*s(359)
s(366) =< s(353)*s(358)
s(367) =< s(352)*s(358)
s(368) =< s(352)*s(359)
s(369) =< s(351)*s(358)
s(370) =< s(351)*s(360)
s(371) =< s(351)*s(359)
s(372) =< s(363)
s(373) =< s(356)
s(374) =< s(363)
s(374) =< s(356)
s(375) =< s(364)
s(376) =< s(363)
s(377) =< s(363)
s(376) =< s(364)
s(377) =< s(364)
s(376) =< s(356)
s(378) =< s(365)
s(379) =< s(366)
s(380) =< s(366)
s(379) =< s(365)
s(380) =< s(365)
s(379) =< s(356)
s(381) =< s(369)
s(382) =< s(369)
s(381) =< s(370)
s(383) =< s(370)
s(381) =< s(355)
s(383) =< s(355)
s(384) =< s(361)
s(385) =< s(361)
s(384) =< s(371)
s(385) =< s(371)
s(384) =< s(362)
s(386) =< s(362)
s(384) =< s(355)
s(386) =< s(355)

  with precondition: [A>=1,B>=1,C>=0] 

* Chain [67]: 3*s(435)+1*s(436)+1*s(437)+1
  Such that:s(433) =< B
s(434) =< C
s(435) =< s(434)
s(436) =< s(433)
s(437) =< s(433)
s(436) =< s(434)

  with precondition: [A>=1,B>=1,C>=1] 

* Chain [66]: 4*s(440)+7*s(441)+3*s(442)+1
  Such that:s(438) =< B
s(439) =< C
s(440) =< s(438)
s(441) =< s(439)
s(442) =< s(438)
s(442) =< s(439)

  with precondition: [A>=1,B>=2,C>=1] 

* Chain [65]: 4*s(445)+5*s(446)+2*s(447)+1
  Such that:s(443) =< B
s(444) =< C
s(445) =< s(443)
s(446) =< s(444)
s(447) =< s(443)
s(447) =< s(444)

  with precondition: [A>=1,B>=3,C>=1] 

* Chain [64]: 2*s(450)+2*s(451)+1*s(452)+1
  Such that:s(448) =< B
s(449) =< C
s(450) =< s(448)
s(451) =< s(449)
s(452) =< s(448)
s(452) =< s(449)

  with precondition: [A>=1,B>=4,C>=1] 

* Chain [63]: 6*s(461)+9*s(462)+6*s(463)+30*s(464)+6*s(467)+3*s(477)+3*s(478)+12*s(482)+30*s(483)+6*s(484)+3*s(485)+3*s(486)+3*s(487)+3*s(488)+3*s(489)+3*s(490)+3*s(491)+3*s(492)+3*s(493)+3*s(494)+3*s(495)+3*s(496)+0
  Such that:aux(112) =< A
aux(113) =< A+B+C
aux(114) =< A+C
aux(115) =< A/2
aux(116) =< B
aux(117) =< C
aux(118) =< C+1
aux(119) =< C/2
s(461) =< aux(113)
s(462) =< aux(113)
s(463) =< aux(113)
s(464) =< aux(113)
s(461) =< aux(112)
s(462) =< aux(112)
s(463) =< aux(112)
s(464) =< aux(112)
s(461) =< aux(114)
s(462) =< aux(114)
s(463) =< aux(114)
s(464) =< aux(114)
s(463) =< aux(115)
s(464) =< aux(115)
s(461) =< aux(117)
s(463) =< aux(117)
s(464) =< aux(117)
s(465) =< aux(117)
s(464) =< aux(118)
s(466) =< aux(118)
s(467) =< aux(118)
s(465) =< aux(112)
s(466) =< aux(112)
s(467) =< aux(112)
s(463) =< aux(119)
s(464) =< aux(119)
s(468) =< aux(116)
s(469) =< aux(116)-1
s(470) =< aux(117)
s(471) =< s(461)*aux(116)
s(472) =< s(461)*aux(117)
s(473) =< s(464)*s(468)
s(474) =< s(464)*s(469)
s(475) =< s(463)*s(469)
s(476) =< s(463)*s(468)
s(477) =< s(462)*s(468)
s(478) =< s(462)*s(469)
s(479) =< s(461)*s(468)
s(480) =< s(461)*s(470)
s(481) =< s(461)*s(469)
s(482) =< s(473)
s(483) =< s(466)
s(484) =< s(473)
s(484) =< s(466)
s(485) =< s(474)
s(486) =< s(473)
s(487) =< s(473)
s(486) =< s(474)
s(487) =< s(474)
s(486) =< s(466)
s(488) =< s(475)
s(489) =< s(476)
s(490) =< s(476)
s(489) =< s(475)
s(490) =< s(475)
s(489) =< s(466)
s(491) =< s(479)
s(492) =< s(479)
s(491) =< s(480)
s(493) =< s(480)
s(491) =< s(465)
s(493) =< s(465)
s(494) =< s(471)
s(495) =< s(471)
s(494) =< s(481)
s(495) =< s(481)
s(494) =< s(472)
s(496) =< s(472)
s(494) =< s(465)
s(496) =< s(465)

  with precondition: [A>=2,B>=1,C>=0] 

* Chain [62]: 1*s(551)+2*s(552)+3*s(553)+2*s(554)+10*s(555)+2*s(558)+1*s(568)+1*s(569)+4*s(573)+10*s(574)+2*s(575)+1*s(576)+1*s(577)+1*s(578)+1*s(579)+1*s(580)+1*s(581)+1*s(582)+1*s(583)+1*s(584)+1*s(585)+1*s(586)+1*s(587)+0
  Such that:s(548) =< A
s(543) =< A+B+C
s(544) =< A+C
s(549) =< A/2
s(550) =< B
s(545) =< C
s(546) =< C+1
s(547) =< C/2
s(551) =< s(550)
s(552) =< s(543)
s(553) =< s(543)
s(554) =< s(543)
s(555) =< s(543)
s(552) =< s(548)
s(553) =< s(548)
s(554) =< s(548)
s(555) =< s(548)
s(552) =< s(544)
s(553) =< s(544)
s(554) =< s(544)
s(555) =< s(544)
s(554) =< s(549)
s(555) =< s(549)
s(552) =< s(545)
s(554) =< s(545)
s(555) =< s(545)
s(556) =< s(545)
s(555) =< s(546)
s(557) =< s(546)
s(558) =< s(546)
s(556) =< s(548)
s(557) =< s(548)
s(558) =< s(548)
s(554) =< s(547)
s(555) =< s(547)
s(559) =< s(550)
s(560) =< s(550)-1
s(561) =< s(545)
s(562) =< s(552)*s(550)
s(563) =< s(552)*s(545)
s(564) =< s(555)*s(559)
s(565) =< s(555)*s(560)
s(566) =< s(554)*s(560)
s(567) =< s(554)*s(559)
s(568) =< s(553)*s(559)
s(569) =< s(553)*s(560)
s(570) =< s(552)*s(559)
s(571) =< s(552)*s(561)
s(572) =< s(552)*s(560)
s(573) =< s(564)
s(574) =< s(557)
s(575) =< s(564)
s(575) =< s(557)
s(576) =< s(565)
s(577) =< s(564)
s(578) =< s(564)
s(577) =< s(565)
s(578) =< s(565)
s(577) =< s(557)
s(579) =< s(566)
s(580) =< s(567)
s(581) =< s(567)
s(580) =< s(566)
s(581) =< s(566)
s(580) =< s(557)
s(582) =< s(570)
s(583) =< s(570)
s(582) =< s(571)
s(584) =< s(571)
s(582) =< s(556)
s(584) =< s(556)
s(585) =< s(562)
s(586) =< s(562)
s(585) =< s(572)
s(586) =< s(572)
s(585) =< s(563)
s(587) =< s(563)
s(585) =< s(556)
s(587) =< s(556)

  with precondition: [A>=2,B>=1,C>=0,A>=C+1] 

* Chain [61]: 3*s(597)+1*s(598)+1*s(599)+5*s(600)+2*s(601)+10*s(602)+2*s(604)+1*s(614)+1*s(615)+4*s(619)+10*s(620)+2*s(621)+1*s(622)+1*s(623)+1*s(624)+1*s(625)+1*s(626)+1*s(627)+1*s(628)+1*s(629)+1*s(630)+1*s(631)+1*s(632)+1*s(633)+1
  Such that:s(590) =< A
s(588) =< A+B+C
s(589) =< A+C
s(591) =< A/2
s(593) =< B
s(594) =< C
s(592) =< C+1
s(595) =< C/2
s(596) =< s(594)
s(596) =< s(595)
s(597) =< s(594)
s(598) =< s(593)
s(599) =< s(593)
s(598) =< s(594)
s(600) =< s(588)
s(601) =< s(588)
s(602) =< s(588)
s(600) =< s(594)
s(601) =< s(594)
s(602) =< s(594)
s(600) =< s(589)
s(601) =< s(589)
s(602) =< s(589)
s(600) =< s(590)
s(601) =< s(590)
s(602) =< s(590)
s(601) =< s(591)
s(602) =< s(591)
s(601) =< s(596)
s(602) =< s(596)
s(602) =< s(592)
s(603) =< s(592)
s(604) =< s(592)
s(603) =< s(594)
s(604) =< s(594)
s(601) =< s(595)
s(602) =< s(595)
s(605) =< s(593)
s(606) =< s(593)-1
s(607) =< s(594)
s(608) =< s(600)*s(593)
s(609) =< s(600)*s(594)
s(610) =< s(602)*s(605)
s(611) =< s(602)*s(606)
s(612) =< s(601)*s(606)
s(613) =< s(601)*s(605)
s(614) =< s(600)*s(605)
s(615) =< s(600)*s(606)
s(616) =< s(600)*s(605)
s(617) =< s(600)*s(607)
s(618) =< s(600)*s(606)
s(619) =< s(610)
s(620) =< s(603)
s(621) =< s(610)
s(621) =< s(603)
s(622) =< s(611)
s(623) =< s(610)
s(624) =< s(610)
s(623) =< s(611)
s(624) =< s(611)
s(623) =< s(603)
s(625) =< s(612)
s(626) =< s(613)
s(627) =< s(613)
s(626) =< s(612)
s(627) =< s(612)
s(626) =< s(603)
s(628) =< s(616)
s(629) =< s(616)
s(628) =< s(617)
s(630) =< s(617)
s(628) =< s(594)
s(630) =< s(594)
s(631) =< s(608)
s(632) =< s(608)
s(631) =< s(618)
s(632) =< s(618)
s(631) =< s(609)
s(633) =< s(609)
s(631) =< s(594)
s(633) =< s(594)

  with precondition: [A>=2,B>=1,C>=2] 

* Chain [60]: 1*s(642)+2*s(643)+3*s(644)+2*s(645)+10*s(646)+2*s(649)+1*s(659)+1*s(660)+4*s(664)+10*s(665)+2*s(666)+1*s(667)+1*s(668)+1*s(669)+1*s(670)+1*s(671)+1*s(672)+1*s(673)+1*s(674)+1*s(675)+1*s(676)+1*s(677)+1*s(678)+0
  Such that:s(639) =< A
s(634) =< A+B+C
s(635) =< A+C
s(640) =< A/2
s(641) =< B
s(636) =< C
s(637) =< C+1
s(638) =< C/2
s(642) =< s(641)
s(643) =< s(634)
s(644) =< s(634)
s(645) =< s(634)
s(646) =< s(634)
s(643) =< s(639)
s(644) =< s(639)
s(645) =< s(639)
s(646) =< s(639)
s(643) =< s(635)
s(644) =< s(635)
s(645) =< s(635)
s(646) =< s(635)
s(645) =< s(640)
s(646) =< s(640)
s(643) =< s(636)
s(645) =< s(636)
s(646) =< s(636)
s(647) =< s(636)
s(646) =< s(637)
s(648) =< s(637)
s(649) =< s(637)
s(647) =< s(639)
s(648) =< s(639)
s(649) =< s(639)
s(645) =< s(638)
s(646) =< s(638)
s(650) =< s(641)
s(651) =< s(641)-1
s(652) =< s(636)
s(653) =< s(643)*s(641)
s(654) =< s(643)*s(636)
s(655) =< s(646)*s(650)
s(656) =< s(646)*s(651)
s(657) =< s(645)*s(651)
s(658) =< s(645)*s(650)
s(659) =< s(644)*s(650)
s(660) =< s(644)*s(651)
s(661) =< s(643)*s(650)
s(662) =< s(643)*s(652)
s(663) =< s(643)*s(651)
s(664) =< s(655)
s(665) =< s(648)
s(666) =< s(655)
s(666) =< s(648)
s(667) =< s(656)
s(668) =< s(655)
s(669) =< s(655)
s(668) =< s(656)
s(669) =< s(656)
s(668) =< s(648)
s(670) =< s(657)
s(671) =< s(658)
s(672) =< s(658)
s(671) =< s(657)
s(672) =< s(657)
s(671) =< s(648)
s(673) =< s(661)
s(674) =< s(661)
s(673) =< s(662)
s(675) =< s(662)
s(673) =< s(647)
s(675) =< s(647)
s(676) =< s(653)
s(677) =< s(653)
s(676) =< s(663)
s(677) =< s(663)
s(676) =< s(654)
s(678) =< s(654)
s(676) =< s(647)
s(678) =< s(647)

  with precondition: [A>=2,B>=2,C>=0,A>=C+1] 

* Chain [59]: 4*s(688)+7*s(689)+3*s(690)+5*s(691)+2*s(692)+10*s(693)+2*s(695)+1*s(705)+1*s(706)+4*s(710)+10*s(711)+2*s(712)+1*s(713)+1*s(714)+1*s(715)+1*s(716)+1*s(717)+1*s(718)+1*s(719)+1*s(720)+1*s(721)+1*s(722)+1*s(723)+1*s(724)+1
  Such that:s(681) =< A
s(679) =< A+B+C
s(680) =< A+C
s(682) =< A/2
s(684) =< B
s(685) =< C
s(683) =< C+1
s(686) =< C/2
s(687) =< s(685)
s(687) =< s(686)
s(688) =< s(684)
s(689) =< s(685)
s(690) =< s(684)
s(690) =< s(685)
s(691) =< s(679)
s(692) =< s(679)
s(693) =< s(679)
s(691) =< s(685)
s(692) =< s(685)
s(693) =< s(685)
s(691) =< s(680)
s(692) =< s(680)
s(693) =< s(680)
s(691) =< s(681)
s(692) =< s(681)
s(693) =< s(681)
s(692) =< s(682)
s(693) =< s(682)
s(692) =< s(687)
s(693) =< s(687)
s(693) =< s(683)
s(694) =< s(683)
s(695) =< s(683)
s(694) =< s(685)
s(695) =< s(685)
s(692) =< s(686)
s(693) =< s(686)
s(696) =< s(684)
s(697) =< s(684)-1
s(698) =< s(685)
s(699) =< s(691)*s(684)
s(700) =< s(691)*s(685)
s(701) =< s(693)*s(696)
s(702) =< s(693)*s(697)
s(703) =< s(692)*s(697)
s(704) =< s(692)*s(696)
s(705) =< s(691)*s(696)
s(706) =< s(691)*s(697)
s(707) =< s(691)*s(696)
s(708) =< s(691)*s(698)
s(709) =< s(691)*s(697)
s(710) =< s(701)
s(711) =< s(694)
s(712) =< s(701)
s(712) =< s(694)
s(713) =< s(702)
s(714) =< s(701)
s(715) =< s(701)
s(714) =< s(702)
s(715) =< s(702)
s(714) =< s(694)
s(716) =< s(703)
s(717) =< s(704)
s(718) =< s(704)
s(717) =< s(703)
s(718) =< s(703)
s(717) =< s(694)
s(719) =< s(707)
s(720) =< s(707)
s(719) =< s(708)
s(721) =< s(708)
s(719) =< s(685)
s(721) =< s(685)
s(722) =< s(699)
s(723) =< s(699)
s(722) =< s(709)
s(723) =< s(709)
s(722) =< s(700)
s(724) =< s(700)
s(722) =< s(685)
s(724) =< s(685)

  with precondition: [A>=2,B>=2,C>=2] 

* Chain [58]: 4*s(734)+5*s(735)+2*s(736)+5*s(737)+2*s(738)+10*s(739)+2*s(741)+1*s(751)+1*s(752)+4*s(756)+10*s(757)+2*s(758)+1*s(759)+1*s(760)+1*s(761)+1*s(762)+1*s(763)+1*s(764)+1*s(765)+1*s(766)+1*s(767)+1*s(768)+1*s(769)+1*s(770)+1
  Such that:s(727) =< A
s(725) =< A+B+C
s(726) =< A+C
s(728) =< A/2
s(730) =< B
s(731) =< C
s(729) =< C+1
s(732) =< C/2
s(733) =< s(731)
s(733) =< s(732)
s(734) =< s(730)
s(735) =< s(731)
s(736) =< s(730)
s(736) =< s(731)
s(737) =< s(725)
s(738) =< s(725)
s(739) =< s(725)
s(737) =< s(731)
s(738) =< s(731)
s(739) =< s(731)
s(737) =< s(726)
s(738) =< s(726)
s(739) =< s(726)
s(737) =< s(727)
s(738) =< s(727)
s(739) =< s(727)
s(738) =< s(728)
s(739) =< s(728)
s(738) =< s(733)
s(739) =< s(733)
s(739) =< s(729)
s(740) =< s(729)
s(741) =< s(729)
s(740) =< s(731)
s(741) =< s(731)
s(738) =< s(732)
s(739) =< s(732)
s(742) =< s(730)
s(743) =< s(730)-1
s(744) =< s(731)
s(745) =< s(737)*s(730)
s(746) =< s(737)*s(731)
s(747) =< s(739)*s(742)
s(748) =< s(739)*s(743)
s(749) =< s(738)*s(743)
s(750) =< s(738)*s(742)
s(751) =< s(737)*s(742)
s(752) =< s(737)*s(743)
s(753) =< s(737)*s(742)
s(754) =< s(737)*s(744)
s(755) =< s(737)*s(743)
s(756) =< s(747)
s(757) =< s(740)
s(758) =< s(747)
s(758) =< s(740)
s(759) =< s(748)
s(760) =< s(747)
s(761) =< s(747)
s(760) =< s(748)
s(761) =< s(748)
s(760) =< s(740)
s(762) =< s(749)
s(763) =< s(750)
s(764) =< s(750)
s(763) =< s(749)
s(764) =< s(749)
s(763) =< s(740)
s(765) =< s(753)
s(766) =< s(753)
s(765) =< s(754)
s(767) =< s(754)
s(765) =< s(731)
s(767) =< s(731)
s(768) =< s(745)
s(769) =< s(745)
s(768) =< s(755)
s(769) =< s(755)
s(768) =< s(746)
s(770) =< s(746)
s(768) =< s(731)
s(770) =< s(731)

  with precondition: [A>=2,B>=3,C>=2] 

* Chain [57]: 2*s(780)+2*s(781)+1*s(782)+5*s(783)+2*s(784)+10*s(785)+2*s(787)+1*s(797)+1*s(798)+4*s(802)+10*s(803)+2*s(804)+1*s(805)+1*s(806)+1*s(807)+1*s(808)+1*s(809)+1*s(810)+1*s(811)+1*s(812)+1*s(813)+1*s(814)+1*s(815)+1*s(816)+1
  Such that:s(773) =< A
s(771) =< A+B+C
s(772) =< A+C
s(774) =< A/2
s(776) =< B
s(777) =< C
s(775) =< C+1
s(778) =< C/2
s(779) =< s(777)
s(779) =< s(778)
s(780) =< s(776)
s(781) =< s(777)
s(782) =< s(776)
s(782) =< s(777)
s(783) =< s(771)
s(784) =< s(771)
s(785) =< s(771)
s(783) =< s(777)
s(784) =< s(777)
s(785) =< s(777)
s(783) =< s(772)
s(784) =< s(772)
s(785) =< s(772)
s(783) =< s(773)
s(784) =< s(773)
s(785) =< s(773)
s(784) =< s(774)
s(785) =< s(774)
s(784) =< s(779)
s(785) =< s(779)
s(785) =< s(775)
s(786) =< s(775)
s(787) =< s(775)
s(786) =< s(777)
s(787) =< s(777)
s(784) =< s(778)
s(785) =< s(778)
s(788) =< s(776)
s(789) =< s(776)-1
s(790) =< s(777)
s(791) =< s(783)*s(776)
s(792) =< s(783)*s(777)
s(793) =< s(785)*s(788)
s(794) =< s(785)*s(789)
s(795) =< s(784)*s(789)
s(796) =< s(784)*s(788)
s(797) =< s(783)*s(788)
s(798) =< s(783)*s(789)
s(799) =< s(783)*s(788)
s(800) =< s(783)*s(790)
s(801) =< s(783)*s(789)
s(802) =< s(793)
s(803) =< s(786)
s(804) =< s(793)
s(804) =< s(786)
s(805) =< s(794)
s(806) =< s(793)
s(807) =< s(793)
s(806) =< s(794)
s(807) =< s(794)
s(806) =< s(786)
s(808) =< s(795)
s(809) =< s(796)
s(810) =< s(796)
s(809) =< s(795)
s(810) =< s(795)
s(809) =< s(786)
s(811) =< s(799)
s(812) =< s(799)
s(811) =< s(800)
s(813) =< s(800)
s(811) =< s(777)
s(813) =< s(777)
s(814) =< s(791)
s(815) =< s(791)
s(814) =< s(801)
s(815) =< s(801)
s(814) =< s(792)
s(816) =< s(792)
s(814) =< s(777)
s(816) =< s(777)

  with precondition: [A>=2,B>=4,C>=2] 


#### Cost of chains of evalNestedLoopstart(A,B,C,D,E,F,G,H,J):
* Chain [94]: 0
  with precondition: [A=0,B>=0,C>=0] 

* Chain [93]: 2*s(818)+0
  Such that:s(817) =< A
s(818) =< s(817)

  with precondition: [B=0,A>=1,C>=0] 

* Chain [92]: 2*s(820)+0
  Such that:s(819) =< A
s(820) =< s(819)

  with precondition: [B=0,A>=2,C>=0] 

* Chain [91]: 1*s(821)+0
  Such that:s(821) =< B

  with precondition: [C=0,A>=1,B>=1] 

* Chain [90]: 1*s(822)+0
  Such that:s(822) =< B

  with precondition: [C=0,A>=1,B>=2] 

* Chain [89]: 0
  with precondition: [A>=0,B>=0,C>=0] 

* Chain [88]: 0
  with precondition: [A>=1,B>=0,C>=0] 

* Chain [87]: 4*s(832)+6*s(833)+4*s(834)+20*s(835)+4*s(838)+2*s(848)+2*s(849)+8*s(853)+20*s(854)+4*s(855)+2*s(856)+2*s(857)+2*s(858)+2*s(859)+2*s(860)+2*s(861)+2*s(862)+2*s(863)+2*s(864)+2*s(865)+2*s(866)+2*s(867)+0
  Such that:s(823) =< A
s(824) =< A+B+C
s(825) =< A+C
s(826) =< A/2
s(827) =< A/2+C/2
s(828) =< B
s(829) =< C
s(830) =< C+1
s(831) =< C/2
s(832) =< s(824)
s(833) =< s(824)
s(834) =< s(824)
s(835) =< s(824)
s(832) =< s(825)
s(833) =< s(825)
s(834) =< s(825)
s(835) =< s(825)
s(832) =< s(823)
s(833) =< s(823)
s(834) =< s(823)
s(835) =< s(823)
s(834) =< s(826)
s(835) =< s(826)
s(834) =< s(827)
s(835) =< s(827)
s(832) =< s(829)
s(834) =< s(829)
s(835) =< s(829)
s(836) =< s(829)
s(835) =< s(830)
s(837) =< s(830)
s(838) =< s(830)
s(836) =< s(825)
s(837) =< s(825)
s(838) =< s(825)
s(834) =< s(831)
s(835) =< s(831)
s(839) =< s(828)
s(840) =< s(828)-1
s(841) =< s(829)
s(842) =< s(832)*s(828)
s(843) =< s(832)*s(829)
s(844) =< s(835)*s(839)
s(845) =< s(835)*s(840)
s(846) =< s(834)*s(840)
s(847) =< s(834)*s(839)
s(848) =< s(833)*s(839)
s(849) =< s(833)*s(840)
s(850) =< s(832)*s(839)
s(851) =< s(832)*s(841)
s(852) =< s(832)*s(840)
s(853) =< s(844)
s(854) =< s(837)
s(855) =< s(844)
s(855) =< s(837)
s(856) =< s(845)
s(857) =< s(844)
s(858) =< s(844)
s(857) =< s(845)
s(858) =< s(845)
s(857) =< s(837)
s(859) =< s(846)
s(860) =< s(847)
s(861) =< s(847)
s(860) =< s(846)
s(861) =< s(846)
s(860) =< s(837)
s(862) =< s(850)
s(863) =< s(850)
s(862) =< s(851)
s(864) =< s(851)
s(862) =< s(836)
s(864) =< s(836)
s(865) =< s(842)
s(866) =< s(842)
s(865) =< s(852)
s(866) =< s(852)
s(865) =< s(843)
s(867) =< s(843)
s(865) =< s(836)
s(867) =< s(836)

  with precondition: [A>=1,B>=1,C>=0] 

* Chain [86]: 3*s(870)+1*s(871)+1*s(872)+1
  Such that:s(868) =< B
s(869) =< C
s(870) =< s(869)
s(871) =< s(868)
s(872) =< s(868)
s(871) =< s(869)

  with precondition: [A>=1,B>=1,C>=1] 

* Chain [85]: 4*s(875)+7*s(876)+3*s(877)+1
  Such that:s(873) =< B
s(874) =< C
s(875) =< s(873)
s(876) =< s(874)
s(877) =< s(873)
s(877) =< s(874)

  with precondition: [A>=1,B>=2,C>=1] 

* Chain [84]: 4*s(880)+5*s(881)+2*s(882)+1
  Such that:s(878) =< B
s(879) =< C
s(880) =< s(878)
s(881) =< s(879)
s(882) =< s(878)
s(882) =< s(879)

  with precondition: [A>=1,B>=3,C>=1] 

* Chain [83]: 2*s(885)+2*s(886)+1*s(887)+1
  Such that:s(883) =< B
s(884) =< C
s(885) =< s(883)
s(886) =< s(884)
s(887) =< s(883)
s(887) =< s(884)

  with precondition: [A>=1,B>=4,C>=1] 

* Chain [82]: 6*s(896)+9*s(897)+6*s(898)+30*s(899)+6*s(902)+3*s(912)+3*s(913)+12*s(917)+30*s(918)+6*s(919)+3*s(920)+3*s(921)+3*s(922)+3*s(923)+3*s(924)+3*s(925)+3*s(926)+3*s(927)+3*s(928)+3*s(929)+3*s(930)+3*s(931)+0
  Such that:s(888) =< A
s(889) =< A+B+C
s(890) =< A+C
s(891) =< A/2
s(892) =< B
s(893) =< C
s(894) =< C+1
s(895) =< C/2
s(896) =< s(889)
s(897) =< s(889)
s(898) =< s(889)
s(899) =< s(889)
s(896) =< s(888)
s(897) =< s(888)
s(898) =< s(888)
s(899) =< s(888)
s(896) =< s(890)
s(897) =< s(890)
s(898) =< s(890)
s(899) =< s(890)
s(898) =< s(891)
s(899) =< s(891)
s(896) =< s(893)
s(898) =< s(893)
s(899) =< s(893)
s(900) =< s(893)
s(899) =< s(894)
s(901) =< s(894)
s(902) =< s(894)
s(900) =< s(888)
s(901) =< s(888)
s(902) =< s(888)
s(898) =< s(895)
s(899) =< s(895)
s(903) =< s(892)
s(904) =< s(892)-1
s(905) =< s(893)
s(906) =< s(896)*s(892)
s(907) =< s(896)*s(893)
s(908) =< s(899)*s(903)
s(909) =< s(899)*s(904)
s(910) =< s(898)*s(904)
s(911) =< s(898)*s(903)
s(912) =< s(897)*s(903)
s(913) =< s(897)*s(904)
s(914) =< s(896)*s(903)
s(915) =< s(896)*s(905)
s(916) =< s(896)*s(904)
s(917) =< s(908)
s(918) =< s(901)
s(919) =< s(908)
s(919) =< s(901)
s(920) =< s(909)
s(921) =< s(908)
s(922) =< s(908)
s(921) =< s(909)
s(922) =< s(909)
s(921) =< s(901)
s(923) =< s(910)
s(924) =< s(911)
s(925) =< s(911)
s(924) =< s(910)
s(925) =< s(910)
s(924) =< s(901)
s(926) =< s(914)
s(927) =< s(914)
s(926) =< s(915)
s(928) =< s(915)
s(926) =< s(900)
s(928) =< s(900)
s(929) =< s(906)
s(930) =< s(906)
s(929) =< s(916)
s(930) =< s(916)
s(929) =< s(907)
s(931) =< s(907)
s(929) =< s(900)
s(931) =< s(900)

  with precondition: [A>=2,B>=1,C>=0] 

* Chain [81]: 1*s(940)+2*s(941)+3*s(942)+2*s(943)+10*s(944)+2*s(947)+1*s(957)+1*s(958)+4*s(962)+10*s(963)+2*s(964)+1*s(965)+1*s(966)+1*s(967)+1*s(968)+1*s(969)+1*s(970)+1*s(971)+1*s(972)+1*s(973)+1*s(974)+1*s(975)+1*s(976)+0
  Such that:s(932) =< A
s(933) =< A+B+C
s(934) =< A+C
s(935) =< A/2
s(936) =< B
s(937) =< C
s(938) =< C+1
s(939) =< C/2
s(940) =< s(936)
s(941) =< s(933)
s(942) =< s(933)
s(943) =< s(933)
s(944) =< s(933)
s(941) =< s(932)
s(942) =< s(932)
s(943) =< s(932)
s(944) =< s(932)
s(941) =< s(934)
s(942) =< s(934)
s(943) =< s(934)
s(944) =< s(934)
s(943) =< s(935)
s(944) =< s(935)
s(941) =< s(937)
s(943) =< s(937)
s(944) =< s(937)
s(945) =< s(937)
s(944) =< s(938)
s(946) =< s(938)
s(947) =< s(938)
s(945) =< s(932)
s(946) =< s(932)
s(947) =< s(932)
s(943) =< s(939)
s(944) =< s(939)
s(948) =< s(936)
s(949) =< s(936)-1
s(950) =< s(937)
s(951) =< s(941)*s(936)
s(952) =< s(941)*s(937)
s(953) =< s(944)*s(948)
s(954) =< s(944)*s(949)
s(955) =< s(943)*s(949)
s(956) =< s(943)*s(948)
s(957) =< s(942)*s(948)
s(958) =< s(942)*s(949)
s(959) =< s(941)*s(948)
s(960) =< s(941)*s(950)
s(961) =< s(941)*s(949)
s(962) =< s(953)
s(963) =< s(946)
s(964) =< s(953)
s(964) =< s(946)
s(965) =< s(954)
s(966) =< s(953)
s(967) =< s(953)
s(966) =< s(954)
s(967) =< s(954)
s(966) =< s(946)
s(968) =< s(955)
s(969) =< s(956)
s(970) =< s(956)
s(969) =< s(955)
s(970) =< s(955)
s(969) =< s(946)
s(971) =< s(959)
s(972) =< s(959)
s(971) =< s(960)
s(973) =< s(960)
s(971) =< s(945)
s(973) =< s(945)
s(974) =< s(951)
s(975) =< s(951)
s(974) =< s(961)
s(975) =< s(961)
s(974) =< s(952)
s(976) =< s(952)
s(974) =< s(945)
s(976) =< s(945)

  with precondition: [A>=2,B>=1,C>=0,A>=C+1] 

* Chain [80]: 3*s(986)+1*s(987)+1*s(988)+5*s(989)+2*s(990)+10*s(991)+2*s(993)+1*s(1003)+1*s(1004)+4*s(1008)+10*s(1009)+2*s(1010)+1*s(1011)+1*s(1012)+1*s(1013)+1*s(1014)+1*s(1015)+1*s(1016)+1*s(1017)+1*s(1018)+1*s(1019)+1*s(1020)+1*s(1021)+1*s(1022)+1
  Such that:s(977) =< A
s(978) =< A+B+C
s(979) =< A+C
s(980) =< A/2
s(981) =< B
s(982) =< C
s(983) =< C+1
s(984) =< C/2
s(985) =< s(982)
s(985) =< s(984)
s(986) =< s(982)
s(987) =< s(981)
s(988) =< s(981)
s(987) =< s(982)
s(989) =< s(978)
s(990) =< s(978)
s(991) =< s(978)
s(989) =< s(982)
s(990) =< s(982)
s(991) =< s(982)
s(989) =< s(979)
s(990) =< s(979)
s(991) =< s(979)
s(989) =< s(977)
s(990) =< s(977)
s(991) =< s(977)
s(990) =< s(980)
s(991) =< s(980)
s(990) =< s(985)
s(991) =< s(985)
s(991) =< s(983)
s(992) =< s(983)
s(993) =< s(983)
s(992) =< s(982)
s(993) =< s(982)
s(990) =< s(984)
s(991) =< s(984)
s(994) =< s(981)
s(995) =< s(981)-1
s(996) =< s(982)
s(997) =< s(989)*s(981)
s(998) =< s(989)*s(982)
s(999) =< s(991)*s(994)
s(1000) =< s(991)*s(995)
s(1001) =< s(990)*s(995)
s(1002) =< s(990)*s(994)
s(1003) =< s(989)*s(994)
s(1004) =< s(989)*s(995)
s(1005) =< s(989)*s(994)
s(1006) =< s(989)*s(996)
s(1007) =< s(989)*s(995)
s(1008) =< s(999)
s(1009) =< s(992)
s(1010) =< s(999)
s(1010) =< s(992)
s(1011) =< s(1000)
s(1012) =< s(999)
s(1013) =< s(999)
s(1012) =< s(1000)
s(1013) =< s(1000)
s(1012) =< s(992)
s(1014) =< s(1001)
s(1015) =< s(1002)
s(1016) =< s(1002)
s(1015) =< s(1001)
s(1016) =< s(1001)
s(1015) =< s(992)
s(1017) =< s(1005)
s(1018) =< s(1005)
s(1017) =< s(1006)
s(1019) =< s(1006)
s(1017) =< s(982)
s(1019) =< s(982)
s(1020) =< s(997)
s(1021) =< s(997)
s(1020) =< s(1007)
s(1021) =< s(1007)
s(1020) =< s(998)
s(1022) =< s(998)
s(1020) =< s(982)
s(1022) =< s(982)

  with precondition: [A>=2,B>=1,C>=2] 

* Chain [79]: 1*s(1031)+2*s(1032)+3*s(1033)+2*s(1034)+10*s(1035)+2*s(1038)+1*s(1048)+1*s(1049)+4*s(1053)+10*s(1054)+2*s(1055)+1*s(1056)+1*s(1057)+1*s(1058)+1*s(1059)+1*s(1060)+1*s(1061)+1*s(1062)+1*s(1063)+1*s(1064)+1*s(1065)+1*s(1066)+1*s(1067)+0
  Such that:s(1023) =< A
s(1024) =< A+B+C
s(1025) =< A+C
s(1026) =< A/2
s(1027) =< B
s(1028) =< C
s(1029) =< C+1
s(1030) =< C/2
s(1031) =< s(1027)
s(1032) =< s(1024)
s(1033) =< s(1024)
s(1034) =< s(1024)
s(1035) =< s(1024)
s(1032) =< s(1023)
s(1033) =< s(1023)
s(1034) =< s(1023)
s(1035) =< s(1023)
s(1032) =< s(1025)
s(1033) =< s(1025)
s(1034) =< s(1025)
s(1035) =< s(1025)
s(1034) =< s(1026)
s(1035) =< s(1026)
s(1032) =< s(1028)
s(1034) =< s(1028)
s(1035) =< s(1028)
s(1036) =< s(1028)
s(1035) =< s(1029)
s(1037) =< s(1029)
s(1038) =< s(1029)
s(1036) =< s(1023)
s(1037) =< s(1023)
s(1038) =< s(1023)
s(1034) =< s(1030)
s(1035) =< s(1030)
s(1039) =< s(1027)
s(1040) =< s(1027)-1
s(1041) =< s(1028)
s(1042) =< s(1032)*s(1027)
s(1043) =< s(1032)*s(1028)
s(1044) =< s(1035)*s(1039)
s(1045) =< s(1035)*s(1040)
s(1046) =< s(1034)*s(1040)
s(1047) =< s(1034)*s(1039)
s(1048) =< s(1033)*s(1039)
s(1049) =< s(1033)*s(1040)
s(1050) =< s(1032)*s(1039)
s(1051) =< s(1032)*s(1041)
s(1052) =< s(1032)*s(1040)
s(1053) =< s(1044)
s(1054) =< s(1037)
s(1055) =< s(1044)
s(1055) =< s(1037)
s(1056) =< s(1045)
s(1057) =< s(1044)
s(1058) =< s(1044)
s(1057) =< s(1045)
s(1058) =< s(1045)
s(1057) =< s(1037)
s(1059) =< s(1046)
s(1060) =< s(1047)
s(1061) =< s(1047)
s(1060) =< s(1046)
s(1061) =< s(1046)
s(1060) =< s(1037)
s(1062) =< s(1050)
s(1063) =< s(1050)
s(1062) =< s(1051)
s(1064) =< s(1051)
s(1062) =< s(1036)
s(1064) =< s(1036)
s(1065) =< s(1042)
s(1066) =< s(1042)
s(1065) =< s(1052)
s(1066) =< s(1052)
s(1065) =< s(1043)
s(1067) =< s(1043)
s(1065) =< s(1036)
s(1067) =< s(1036)

  with precondition: [A>=2,B>=2,C>=0,A>=C+1] 

* Chain [78]: 4*s(1077)+7*s(1078)+3*s(1079)+5*s(1080)+2*s(1081)+10*s(1082)+2*s(1084)+1*s(1094)+1*s(1095)+4*s(1099)+10*s(1100)+2*s(1101)+1*s(1102)+1*s(1103)+1*s(1104)+1*s(1105)+1*s(1106)+1*s(1107)+1*s(1108)+1*s(1109)+1*s(1110)+1*s(1111)+1*s(1112)+1*s(1113)+1
  Such that:s(1068) =< A
s(1069) =< A+B+C
s(1070) =< A+C
s(1071) =< A/2
s(1072) =< B
s(1073) =< C
s(1074) =< C+1
s(1075) =< C/2
s(1076) =< s(1073)
s(1076) =< s(1075)
s(1077) =< s(1072)
s(1078) =< s(1073)
s(1079) =< s(1072)
s(1079) =< s(1073)
s(1080) =< s(1069)
s(1081) =< s(1069)
s(1082) =< s(1069)
s(1080) =< s(1073)
s(1081) =< s(1073)
s(1082) =< s(1073)
s(1080) =< s(1070)
s(1081) =< s(1070)
s(1082) =< s(1070)
s(1080) =< s(1068)
s(1081) =< s(1068)
s(1082) =< s(1068)
s(1081) =< s(1071)
s(1082) =< s(1071)
s(1081) =< s(1076)
s(1082) =< s(1076)
s(1082) =< s(1074)
s(1083) =< s(1074)
s(1084) =< s(1074)
s(1083) =< s(1073)
s(1084) =< s(1073)
s(1081) =< s(1075)
s(1082) =< s(1075)
s(1085) =< s(1072)
s(1086) =< s(1072)-1
s(1087) =< s(1073)
s(1088) =< s(1080)*s(1072)
s(1089) =< s(1080)*s(1073)
s(1090) =< s(1082)*s(1085)
s(1091) =< s(1082)*s(1086)
s(1092) =< s(1081)*s(1086)
s(1093) =< s(1081)*s(1085)
s(1094) =< s(1080)*s(1085)
s(1095) =< s(1080)*s(1086)
s(1096) =< s(1080)*s(1085)
s(1097) =< s(1080)*s(1087)
s(1098) =< s(1080)*s(1086)
s(1099) =< s(1090)
s(1100) =< s(1083)
s(1101) =< s(1090)
s(1101) =< s(1083)
s(1102) =< s(1091)
s(1103) =< s(1090)
s(1104) =< s(1090)
s(1103) =< s(1091)
s(1104) =< s(1091)
s(1103) =< s(1083)
s(1105) =< s(1092)
s(1106) =< s(1093)
s(1107) =< s(1093)
s(1106) =< s(1092)
s(1107) =< s(1092)
s(1106) =< s(1083)
s(1108) =< s(1096)
s(1109) =< s(1096)
s(1108) =< s(1097)
s(1110) =< s(1097)
s(1108) =< s(1073)
s(1110) =< s(1073)
s(1111) =< s(1088)
s(1112) =< s(1088)
s(1111) =< s(1098)
s(1112) =< s(1098)
s(1111) =< s(1089)
s(1113) =< s(1089)
s(1111) =< s(1073)
s(1113) =< s(1073)

  with precondition: [A>=2,B>=2,C>=2] 

* Chain [77]: 4*s(1123)+5*s(1124)+2*s(1125)+5*s(1126)+2*s(1127)+10*s(1128)+2*s(1130)+1*s(1140)+1*s(1141)+4*s(1145)+10*s(1146)+2*s(1147)+1*s(1148)+1*s(1149)+1*s(1150)+1*s(1151)+1*s(1152)+1*s(1153)+1*s(1154)+1*s(1155)+1*s(1156)+1*s(1157)+1*s(1158)+1*s(1159)+1
  Such that:s(1114) =< A
s(1115) =< A+B+C
s(1116) =< A+C
s(1117) =< A/2
s(1118) =< B
s(1119) =< C
s(1120) =< C+1
s(1121) =< C/2
s(1122) =< s(1119)
s(1122) =< s(1121)
s(1123) =< s(1118)
s(1124) =< s(1119)
s(1125) =< s(1118)
s(1125) =< s(1119)
s(1126) =< s(1115)
s(1127) =< s(1115)
s(1128) =< s(1115)
s(1126) =< s(1119)
s(1127) =< s(1119)
s(1128) =< s(1119)
s(1126) =< s(1116)
s(1127) =< s(1116)
s(1128) =< s(1116)
s(1126) =< s(1114)
s(1127) =< s(1114)
s(1128) =< s(1114)
s(1127) =< s(1117)
s(1128) =< s(1117)
s(1127) =< s(1122)
s(1128) =< s(1122)
s(1128) =< s(1120)
s(1129) =< s(1120)
s(1130) =< s(1120)
s(1129) =< s(1119)
s(1130) =< s(1119)
s(1127) =< s(1121)
s(1128) =< s(1121)
s(1131) =< s(1118)
s(1132) =< s(1118)-1
s(1133) =< s(1119)
s(1134) =< s(1126)*s(1118)
s(1135) =< s(1126)*s(1119)
s(1136) =< s(1128)*s(1131)
s(1137) =< s(1128)*s(1132)
s(1138) =< s(1127)*s(1132)
s(1139) =< s(1127)*s(1131)
s(1140) =< s(1126)*s(1131)
s(1141) =< s(1126)*s(1132)
s(1142) =< s(1126)*s(1131)
s(1143) =< s(1126)*s(1133)
s(1144) =< s(1126)*s(1132)
s(1145) =< s(1136)
s(1146) =< s(1129)
s(1147) =< s(1136)
s(1147) =< s(1129)
s(1148) =< s(1137)
s(1149) =< s(1136)
s(1150) =< s(1136)
s(1149) =< s(1137)
s(1150) =< s(1137)
s(1149) =< s(1129)
s(1151) =< s(1138)
s(1152) =< s(1139)
s(1153) =< s(1139)
s(1152) =< s(1138)
s(1153) =< s(1138)
s(1152) =< s(1129)
s(1154) =< s(1142)
s(1155) =< s(1142)
s(1154) =< s(1143)
s(1156) =< s(1143)
s(1154) =< s(1119)
s(1156) =< s(1119)
s(1157) =< s(1134)
s(1158) =< s(1134)
s(1157) =< s(1144)
s(1158) =< s(1144)
s(1157) =< s(1135)
s(1159) =< s(1135)
s(1157) =< s(1119)
s(1159) =< s(1119)

  with precondition: [A>=2,B>=3,C>=2] 

* Chain [76]: 2*s(1169)+2*s(1170)+1*s(1171)+5*s(1172)+2*s(1173)+10*s(1174)+2*s(1176)+1*s(1186)+1*s(1187)+4*s(1191)+10*s(1192)+2*s(1193)+1*s(1194)+1*s(1195)+1*s(1196)+1*s(1197)+1*s(1198)+1*s(1199)+1*s(1200)+1*s(1201)+1*s(1202)+1*s(1203)+1*s(1204)+1*s(1205)+1
  Such that:s(1160) =< A
s(1161) =< A+B+C
s(1162) =< A+C
s(1163) =< A/2
s(1164) =< B
s(1165) =< C
s(1166) =< C+1
s(1167) =< C/2
s(1168) =< s(1165)
s(1168) =< s(1167)
s(1169) =< s(1164)
s(1170) =< s(1165)
s(1171) =< s(1164)
s(1171) =< s(1165)
s(1172) =< s(1161)
s(1173) =< s(1161)
s(1174) =< s(1161)
s(1172) =< s(1165)
s(1173) =< s(1165)
s(1174) =< s(1165)
s(1172) =< s(1162)
s(1173) =< s(1162)
s(1174) =< s(1162)
s(1172) =< s(1160)
s(1173) =< s(1160)
s(1174) =< s(1160)
s(1173) =< s(1163)
s(1174) =< s(1163)
s(1173) =< s(1168)
s(1174) =< s(1168)
s(1174) =< s(1166)
s(1175) =< s(1166)
s(1176) =< s(1166)
s(1175) =< s(1165)
s(1176) =< s(1165)
s(1173) =< s(1167)
s(1174) =< s(1167)
s(1177) =< s(1164)
s(1178) =< s(1164)-1
s(1179) =< s(1165)
s(1180) =< s(1172)*s(1164)
s(1181) =< s(1172)*s(1165)
s(1182) =< s(1174)*s(1177)
s(1183) =< s(1174)*s(1178)
s(1184) =< s(1173)*s(1178)
s(1185) =< s(1173)*s(1177)
s(1186) =< s(1172)*s(1177)
s(1187) =< s(1172)*s(1178)
s(1188) =< s(1172)*s(1177)
s(1189) =< s(1172)*s(1179)
s(1190) =< s(1172)*s(1178)
s(1191) =< s(1182)
s(1192) =< s(1175)
s(1193) =< s(1182)
s(1193) =< s(1175)
s(1194) =< s(1183)
s(1195) =< s(1182)
s(1196) =< s(1182)
s(1195) =< s(1183)
s(1196) =< s(1183)
s(1195) =< s(1175)
s(1197) =< s(1184)
s(1198) =< s(1185)
s(1199) =< s(1185)
s(1198) =< s(1184)
s(1199) =< s(1184)
s(1198) =< s(1175)
s(1200) =< s(1188)
s(1201) =< s(1188)
s(1200) =< s(1189)
s(1202) =< s(1189)
s(1200) =< s(1165)
s(1202) =< s(1165)
s(1203) =< s(1180)
s(1204) =< s(1180)
s(1203) =< s(1190)
s(1204) =< s(1190)
s(1203) =< s(1181)
s(1205) =< s(1181)
s(1203) =< s(1165)
s(1205) =< s(1165)

  with precondition: [A>=2,B>=4,C>=2] 


Closed-form bounds of evalNestedLoopstart(A,B,C,D,E,F,G,H,J): 
-------------------------------------
* Chain [94] with precondition: [A=0,B>=0,C>=0] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [93] with precondition: [B=0,A>=1,C>=0] 
    - Upper bound: 2*A 
    - Complexity: n 
* Chain [92] with precondition: [B=0,A>=2,C>=0] 
    - Upper bound: 2*A 
    - Complexity: n 
* Chain [91] with precondition: [C=0,A>=1,B>=1] 
    - Upper bound: B 
    - Complexity: n 
* Chain [90] with precondition: [C=0,A>=1,B>=2] 
    - Upper bound: B 
    - Complexity: n 
* Chain [89] with precondition: [A>=0,B>=0,C>=0] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [88] with precondition: [A>=1,B>=0,C>=0] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [87] with precondition: [A>=1,B>=1,C>=0] 
    - Upper bound: (A+B+C)*(18*B)+8*C+(6*B-6)*(A+B+C)+(32*C+32)+(34*A+34*B+34*C) 
    - Complexity: n^2 
* Chain [86] with precondition: [A>=1,B>=1,C>=1] 
    - Upper bound: 2*B+3*C+1 
    - Complexity: n 
* Chain [85] with precondition: [A>=1,B>=2,C>=1] 
    - Upper bound: 7*B+7*C+1 
    - Complexity: n 
* Chain [84] with precondition: [A>=1,B>=3,C>=1] 
    - Upper bound: 6*B+5*C+1 
    - Complexity: n 
* Chain [83] with precondition: [A>=1,B>=4,C>=1] 
    - Upper bound: 3*B+2*C+1 
    - Complexity: n 
* Chain [82] with precondition: [A>=2,B>=1,C>=0] 
    - Upper bound: (A+B+C)*(27*B)+12*C+(9*B-9)*(A+B+C)+(48*C+48)+(51*A+51*B+51*C) 
    - Complexity: n^2 
* Chain [81] with precondition: [A>=2,B>=1,C>=0,A>=C+1] 
    - Upper bound: (A+B+C)*(9*B)+B+4*C+(3*B-3)*(A+B+C)+(16*C+16)+(17*A+17*B+17*C) 
    - Complexity: n^2 
* Chain [80] with precondition: [A>=2,B>=1,C>=2] 
    - Upper bound: 2*B+1+(A+B+C)*(9*B)+7*C+(3*B-3)*(A+B+C)+(16*C+16)+(17*A+17*B+17*C) 
    - Complexity: n^2 
* Chain [79] with precondition: [A>=2,B>=2,C>=0,A>=C+1] 
    - Upper bound: (A+B+C)*(9*B)+B+4*C+(3*B-3)*(A+B+C)+(16*C+16)+(17*A+17*B+17*C) 
    - Complexity: n^2 
* Chain [78] with precondition: [A>=2,B>=2,C>=2] 
    - Upper bound: 7*B+1+(A+B+C)*(9*B)+11*C+(3*B-3)*(A+B+C)+(16*C+16)+(17*A+17*B+17*C) 
    - Complexity: n^2 
* Chain [77] with precondition: [A>=2,B>=3,C>=2] 
    - Upper bound: 6*B+1+(A+B+C)*(9*B)+9*C+(3*B-3)*(A+B+C)+(16*C+16)+(17*A+17*B+17*C) 
    - Complexity: n^2 
* Chain [76] with precondition: [A>=2,B>=4,C>=2] 
    - Upper bound: 3*B+1+(A+B+C)*(9*B)+6*C+(3*B-3)*(A+B+C)+(16*C+16)+(17*A+17*B+17*C) 
    - Complexity: n^2 

### Maximum cost of evalNestedLoopstart(A,B,C,D,E,F,G,H,J): max([max([2*A,B]),2*C+max([3*B+1,max([2*B+1,max([max([6*B+1,max([7*B+C+1,(A+B+C)*(nat(B-1)*3)+(A+B+C)*(9*B)+(16*C+16)+(17*A+17*B+17*C)+max([3*B+1,max([2*B+1,max([max([7*B+2*C+1,(A+B+C)*(18*B)+3*C+(A+B+C)*(nat(B-1)*6)+(32*C+32)+(34*A+34*B+34*C)])+C,(A+B+C)*(nat(B-1)*3)+(A+B+C)*(9*B)+(16*C+16)+(17*A+17*B+17*C)])+C])+C])])+C])+C,(A+B+C)*(9*B)+B+(A+B+C)*(nat(B-1)*3)+(16*C+16)+(17*A+17*B+17*C)])+C])+C])]) 
Asymptotic class: n^2 
* Total analysis performed in 1768 ms.

