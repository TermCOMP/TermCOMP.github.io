NO

# LoAT Proof:
NO

NO

Initial ITS

Start location: evalEx3start

Location map:
LoAT_sink -> 0
evalEx3start -> 1
evalEx3entryin -> 2
evalEx3bb4in -> 3
evalEx3bbin -> 4
evalEx3returnin -> 5
evalEx3bb2in -> 6
evalEx3bb3in -> 7
evalEx3bb1in -> 8
evalEx3stop -> 9

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: -2+i1 == 0 /\ i1'=3, i3'=1+i3
   2: (-3+i1 == 0 /\ -1+i4 >= 0) /\ i1'=4, i3'=1+i3
   3: (-3+i1 == 0 /\ -i4 >= 0) /\ i1'=5, i3'=1+i3
   4: -4+i1 == 0 /\ i1'=6, i3'=1+i3, i5'=it2, i6'=i4
   5: (-i6 >= 0 /\ -6+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=i6
   6: (-6+i1 == 0 /\ -1+i6 >= 0) /\ i1'=7, i3'=1+i3
   7: -7+i1 == 0 /\ i1'=8, i3'=1+i3
   8: (-7+i1 == 0 /\ -1+i5-it3 >= 0) /\ i1'=3, i3'=1+i3, i4'=i6
   9: (-1+it4-i5 >= 0 /\ -7+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=i6
  10: -8+i1 == 0 /\ i1'=6, i3'=1+i3, i6'=-1+i6
  11: -5+i1 == 0 /\ i1'=9, i3'=1+i3

Dependency graph:
0 -> 1
1 -> 2, 1 -> 3
2 -> 4
3 -> 11
4 -> 5, 4 -> 6
5 -> 2, 5 -> 3
6 -> 7, 6 -> 8, 6 -> 9
7 -> 10
8 -> 2, 8 -> 3
9 -> 2, 9 -> 3
10 -> 5, 10 -> 6

Chained Linear Paths

	Applied Chaining

	First rule:
	-1+i1 == 0 /\ i1'=2, i3'=1+i3
	Second rule:
	-2+i1 == 0 /\ i1'=3, i3'=1+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 0, 1
	
	Applied Chaining

	First rule:
	(-3+i1 == 0 /\ -1+i4 >= 0) /\ i1'=4, i3'=1+i3
	Second rule:
	-4+i1 == 0 /\ i1'=6, i3'=1+i3, i5'=it2, i6'=i4
	New rule:
	(0 == 0 /\ -3+i1 == 0 /\ -1+i4 >= 0) /\ i1'=6, i3'=2+i3, i5'=it2, i6'=i4
	
	Applied Deletion

	Removed the following rules: 2, 4
	
	Applied Chaining

	First rule:
	(-3+i1 == 0 /\ -i4 >= 0) /\ i1'=5, i3'=1+i3
	Second rule:
	-5+i1 == 0 /\ i1'=9, i3'=1+i3
	New rule:
	(0 == 0 /\ -3+i1 == 0 /\ -i4 >= 0) /\ i1'=9, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 3, 11
	
	Applied Chaining

	First rule:
	-7+i1 == 0 /\ i1'=8, i3'=1+i3
	Second rule:
	-8+i1 == 0 /\ i1'=6, i3'=1+i3, i6'=-1+i6
	New rule:
	(0 == 0 /\ -7+i1 == 0) /\ i1'=6, i3'=2+i3, i6'=-1+i6
	
	Applied Deletion

	Removed the following rules: 7, 10

Start location: evalEx3start

Location map:
LoAT_sink -> 0
evalEx3start -> 1
evalEx3entryin -> 2
evalEx3bb4in -> 3
evalEx3bbin -> 4
evalEx3returnin -> 5
evalEx3bb2in -> 6
evalEx3bb3in -> 7
evalEx3bb1in -> 8
evalEx3stop -> 9

Rules:
   5: (-i6 >= 0 /\ -6+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=i6
   6: (-6+i1 == 0 /\ -1+i6 >= 0) /\ i1'=7, i3'=1+i3
   8: (-7+i1 == 0 /\ -1+i5-it3 >= 0) /\ i1'=3, i3'=1+i3, i4'=i6
   9: (-1+it4-i5 >= 0 /\ -7+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=i6
  12: (0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
  13: (0 == 0 /\ -3+i1 == 0 /\ -1+i4 >= 0) /\ i1'=6, i3'=2+i3, i5'=it2, i6'=i4
  14: (0 == 0 /\ -3+i1 == 0 /\ -i4 >= 0) /\ i1'=9, i3'=2+i3
  15: (0 == 0 /\ -7+i1 == 0) /\ i1'=6, i3'=2+i3, i6'=-1+i6

Dependency graph:
5 -> 13, 5 -> 14
6 -> 8, 6 -> 9, 6 -> 15
8 -> 13, 8 -> 14
9 -> 13, 9 -> 14
12 -> 13, 12 -> 14
13 -> 5, 13 -> 6
15 -> 5, 15 -> 6

Preprocessed Transitions

	Eliminated Temporary Variables

	Original rule:
	(-7+i1 == 0 /\ -1+i5-it3 >= 0) /\ i1'=3, i3'=1+i3, i4'=i6
	New rule:
	(-7+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=i6
	
	Eliminated Temporary Variables

	Original rule:
	(-1+it4-i5 >= 0 /\ -7+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=i6
	New rule:
	(-7+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=i6
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	New rule:
	-1+i1 == 0 /\ i1'=3, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -3+i1 == 0 /\ -1+i4 >= 0) /\ i1'=6, i3'=2+i3, i5'=it2, i6'=i4
	New rule:
	(-3+i1 == 0 /\ -1+i4 >= 0) /\ i1'=6, i3'=2+i3, i5'=it2, i6'=i4
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -3+i1 == 0 /\ -i4 >= 0) /\ i1'=9, i3'=2+i3
	New rule:
	(-3+i1 == 0 /\ -i4 >= 0) /\ i1'=9, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -7+i1 == 0) /\ i1'=6, i3'=2+i3, i6'=-1+i6
	New rule:
	-7+i1 == 0 /\ i1'=6, i3'=2+i3, i6'=-1+i6

Start location: evalEx3start

Location map:
LoAT_sink -> 0
evalEx3start -> 1
evalEx3entryin -> 2
evalEx3bb4in -> 3
evalEx3bbin -> 4
evalEx3returnin -> 5
evalEx3bb2in -> 6
evalEx3bb3in -> 7
evalEx3bb1in -> 8
evalEx3stop -> 9

Rules:
   5: (-i6 >= 0 /\ -6+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=i6
   6: (-6+i1 == 0 /\ -1+i6 >= 0) /\ i1'=7, i3'=1+i3
  16: (-7+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=i6
  17: (-7+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=i6
  18: -1+i1 == 0 /\ i1'=3, i3'=2+i3
  19: (-3+i1 == 0 /\ -1+i4 >= 0) /\ i1'=6, i3'=2+i3, i5'=it2, i6'=i4
  20: (-3+i1 == 0 /\ -i4 >= 0) /\ i1'=9, i3'=2+i3
  21: -7+i1 == 0 /\ i1'=6, i3'=2+i3, i6'=-1+i6

Dependency graph:
5 -> 19, 5 -> 20
6 -> 16, 6 -> 17, 6 -> 21
16 -> 19, 16 -> 20
17 -> 19, 17 -> 20
18 -> 19, 18 -> 20
19 -> 5, 19 -> 6
21 -> 5, 21 -> 6

Refined Dependency Graph

	Removed the following edges: 5 -> 19, 19 -> 5

Start location: evalEx3start

Location map:
LoAT_sink -> 0
evalEx3start -> 1
evalEx3entryin -> 2
evalEx3bb4in -> 3
evalEx3bbin -> 4
evalEx3returnin -> 5
evalEx3bb2in -> 6
evalEx3bb3in -> 7
evalEx3bb1in -> 8
evalEx3stop -> 9

Rules:
   5: (-i6 >= 0 /\ -6+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=i6
   6: (-6+i1 == 0 /\ -1+i6 >= 0) /\ i1'=7, i3'=1+i3
  16: (-7+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=i6
  17: (-7+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=i6
  18: -1+i1 == 0 /\ i1'=3, i3'=2+i3
  19: (-3+i1 == 0 /\ -1+i4 >= 0) /\ i1'=6, i3'=2+i3, i5'=it2, i6'=i4
  20: (-3+i1 == 0 /\ -i4 >= 0) /\ i1'=9, i3'=2+i3
  21: -7+i1 == 0 /\ i1'=6, i3'=2+i3, i6'=-1+i6

Dependency graph:
5 -> 20
6 -> 16, 6 -> 17, 6 -> 21
16 -> 19, 16 -> 20
17 -> 19, 17 -> 20
18 -> 19, 18 -> 20
19 -> 6
21 -> 5, 21 -> 6

Step with 18

	Trace

	18[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 20

	Trace

	18[(-1+i1 == 0)]
	20[(-3+i1 == 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Backtrack

	Trace

	18[(-1+i1 == 0)]
	
	Blocked

	{}
	{20[T]}
	
Step with 19

	Trace

	18[(-1+i1 == 0)]
	19[(-3+i1 == 0 /\ -1+i4 >= 0)]
	
	Blocked

	{}
	{20[T]}
	{}
	
Step with 6

	Trace

	18[(-1+i1 == 0)]
	19[(-3+i1 == 0 /\ -1+i4 >= 0)]
	6[(-6+i1 == 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{20[T]}
	{}
	{}
	
Step with 16

	Trace

	18[(-1+i1 == 0)]
	19[(-3+i1 == 0 /\ -1+i4 >= 0)]
	6[(-6+i1 == 0 /\ -1+i6 >= 0)]
	16[(-7+i1 == 0)]
	
	Blocked

	{}
	{20[T]}
	{}
	{}
	{}
	
Nonterm

	Certificate of Non-Termination

	Original rule:
	(-3+i1 == 0 /\ -1+i4 >= 0) /\ i1'=3, i3'=4+i3, i5'=it2, i6'=i4
	New rule:
	(-3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ -1+it31 >= 0) /\ i1'=0

		-3+i1 >= 0 [0]: unchanged
		
		-1+i4 >= 0 [0]: unchanged
		
		3-i1 >= 0 [0]: unchanged
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, -1+i4 >= 0 -> -1+i4 >= 0, 3-i1 >= 0 -> 3-i1 >= 0}

		Simplified Guard

		Original rule:
		(0 == 0 /\ -3+i1 == 0 /\ -1+i4 >= 0) /\ i1'=3, i3'=4+i3, i4'=i4, i5'=it2, i6'=i4
		New rule:
		(-3+i1 == 0 /\ -1+i4 >= 0) /\ i1'=3, i3'=4+i3, i4'=i4, i5'=it2, i6'=i4
		
		Removed Trivial Updates

		Original rule:
		(-3+i1 == 0 /\ -1+i4 >= 0) /\ i1'=3, i3'=4+i3, i4'=i4, i5'=it2, i6'=i4
		New rule:
		(-3+i1 == 0 /\ -1+i4 >= 0) /\ i1'=3, i3'=4+i3, i5'=it2, i6'=i4

	Loop Acceleration

	Original rule:
	(-3+i1 == 0 /\ -1+i4 >= 0) /\ i1'=3, i3'=4+i3, i5'=it2, i6'=i4
	New rule:
	(-3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ -1+it31 >= 0) /\ i1'=i1, i3'=i3+4*it31, i5'=it2, i6'=i4

		-3+i1 >= 0 [0]: unchanged
		
		-1+i4 >= 0 [0]: unchanged
		
		3-i1 >= 0 [0]: unchanged
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, -1+i4 >= 0 -> -1+i4 >= 0, 3-i1 >= 0 -> 3-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ -1+it31 >= 0) /\ i1'=i1, i3'=i3+4*it31, i5'=it2, i6'=i4
	New rule:
	(-3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ -1+it31 >= 0) /\ i3'=i3+4*it31, i5'=it2, i6'=i4

Start location: evalEx3start

Location map:
LoAT_sink -> 0
evalEx3start -> 1
evalEx3entryin -> 2
evalEx3bb4in -> 3
evalEx3bbin -> 4
evalEx3returnin -> 5
evalEx3bb2in -> 6
evalEx3bb3in -> 7
evalEx3bb1in -> 8
evalEx3stop -> 9

Rules:
   5: (-i6 >= 0 /\ -6+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=i6
   6: (-6+i1 == 0 /\ -1+i6 >= 0) /\ i1'=7, i3'=1+i3
  16: (-7+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=i6
  17: (-7+i1 == 0) /\ i1'=3, i3'=1+i3, i4'=i6
  18: -1+i1 == 0 /\ i1'=3, i3'=2+i3
  19: (-3+i1 == 0 /\ -1+i4 >= 0) /\ i1'=6, i3'=2+i3, i5'=it2, i6'=i4
  20: (-3+i1 == 0 /\ -i4 >= 0) /\ i1'=9, i3'=2+i3
  21: -7+i1 == 0 /\ i1'=6, i3'=2+i3, i6'=-1+i6
  22: (-3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ -1+it31 >= 0) /\ i1'=0
  23: (-3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ -1+it31 >= 0) /\ i3'=i3+4*it31, i5'=it2, i6'=i4

Dependency graph:
5 -> 20
6 -> 16, 6 -> 17, 6 -> 21
16 -> 19, 16 -> 20, 16 -> 22, 16 -> 23
17 -> 19, 17 -> 20, 17 -> 22, 17 -> 23
18 -> 19, 18 -> 20, 18 -> 22, 18 -> 23
19 -> 6
21 -> 5, 21 -> 6
23 -> 19, 23 -> 20, 23 -> 22

Step with 22

	Trace

	18[(-1+i1 == 0)]
	22[(-3+i1 >= 0 /\ -1+i4 >= 0 /\ 3-i1 >= 0 /\ -1+it31 >= 0)]
	
	Blocked

	{}
	{20[T]}
	{22[T]}
	
Refute

	Counterexample

	(i1=1, i3=-2, i4=1, i5=0, i6=0)
	-18-> (i1=3, i3=0, i4=1, i5=0, i6=0 )
	-22-> ( )
	
NO

Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
MAYBE


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  D
  Locations:  l0, l1, l2, l3, l4, l5, l6, l7, l8
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂) → l7(X₀, X₁, X₂)
  t₆: l1(X₀, X₁, X₂) → l2(X₀, X₁, X₂) :|: 1 ≤ X₂
  t₅: l1(X₀, X₁, X₂) → l4(X₂, X₁, X₂) :|: X₂ ≤ 0
  t₇: l2(X₀, X₁, X₂) → l3(X₀, X₁, X₂)
  t₈: l2(X₀, X₁, X₂) → l4(X₂, X₁, X₂) :|: 1+D ≤ X₁
  t₉: l2(X₀, X₁, X₂) → l4(X₂, X₁, X₂) :|: 1+X₁ ≤ D
  t₁₀: l3(X₀, X₁, X₂) → l1(X₀, X₁, X₂-1)
  t₂: l4(X₀, X₁, X₂) → l5(X₀, X₁, X₂) :|: 1 ≤ X₀
  t₃: l4(X₀, X₁, X₂) → l6(X₀, X₁, X₂) :|: X₀ ≤ 0
  t₄: l5(X₀, X₁, X₂) → l1(X₀, D, X₀)
  t₁₁: l6(X₀, X₁, X₂) → l8(X₀, X₁, X₂)
  t₁: l7(X₀, X₁, X₂) → l4(X₀, X₁, X₂)


Preprocessing
  Found invariant X₂ ≤ X₀ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀+X₂ ∧ 1 ≤ X₀ for location l2


  Found invariant X₀ ≤ 0 for location l6


  Found invariant 1 ≤ X₀ for location l5


  Found invariant X₀ ≤ 0 for location l8


  Found invariant X₂ ≤ X₀ ∧ 0 ≤ X₂ ∧ 1 ≤ X₀+X₂ ∧ 1 ≤ X₀ for location l1


  Found invariant X₂ ≤ X₀ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀+X₂ ∧ 1 ≤ X₀ for location l3


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  D
  Locations:  l0, l1, l2, l3, l4, l5, l6, l7, l8
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂) → l7(X₀, X₁, X₂)
  t₆: l1(X₀, X₁, X₂) → l2(X₀, X₁, X₂) :|: 1 ≤ X₂ ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₂ ∧ X₂ ≤ X₀ ∧ 0 ≤ X₂
  t₅: l1(X₀, X₁, X₂) → l4(X₂, X₁, X₂) :|: X₂ ≤ 0 ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₂ ∧ X₂ ≤ X₀ ∧ 0 ≤ X₂
  t₇: l2(X₀, X₁, X₂) → l3(X₀, X₁, X₂) :|: 1 ≤ X₀ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀+X₂ ∧ X₂ ≤ X₀
  t₈: l2(X₀, X₁, X₂) → l4(X₂, X₁, X₂) :|: 1+D ≤ X₁ ∧ 1 ≤ X₀ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀+X₂ ∧ X₂ ≤ X₀
  t₉: l2(X₀, X₁, X₂) → l4(X₂, X₁, X₂) :|: 1+X₁ ≤ D ∧ 1 ≤ X₀ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀+X₂ ∧ X₂ ≤ X₀
  t₁₀: l3(X₀, X₁, X₂) → l1(X₀, X₁, X₂-1) :|: 1 ≤ X₀ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀+X₂ ∧ X₂ ≤ X₀
  t₂: l4(X₀, X₁, X₂) → l5(X₀, X₁, X₂) :|: 1 ≤ X₀
  t₃: l4(X₀, X₁, X₂) → l6(X₀, X₁, X₂) :|: X₀ ≤ 0
  t₄: l5(X₀, X₁, X₂) → l1(X₀, D, X₀) :|: 1 ≤ X₀
  t₁₁: l6(X₀, X₁, X₂) → l8(X₀, X₁, X₂) :|: X₀ ≤ 0
  t₁: l7(X₀, X₁, X₂) → l4(X₀, X₁, X₂)


MPRF for transition t₅: l1(X₀, X₁, X₂) → l4(X₂, X₁, X₂) :|: X₂ ≤ 0 ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₂ ∧ X₂ ≤ X₀ ∧ 0 ≤ X₂ of depth 1:
  new bound:
    X₀+1 {O(n)}

  MPRF:
    • l1: [1+X₀]
    • l2: [1+X₀]
    • l3: [1+X₀]
    • l4: [1+X₀]
    • l5: [1+X₀]




MPRF for transition t₇: l2(X₀, X₁, X₂) → l3(X₀, X₁, X₂) :|: 1 ≤ X₀ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀+X₂ ∧ X₂ ≤ X₀ of depth 1:
  new bound:
    X₀ {O(n)}

  MPRF:
    • l1: [X₂]
    • l2: [X₂]
    • l3: [X₂-1]
    • l4: [X₀]
    • l5: [X₀]




MPRF for transition t₁₀: l3(X₀, X₁, X₂) → l1(X₀, X₁, X₂-1) :|: 1 ≤ X₀ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀+X₂ ∧ X₂ ≤ X₀ of depth 1:
  new bound:
    X₀ {O(n)}

  MPRF:
    • l1: [X₂]
    • l2: [X₂]
    • l3: [X₂]
    • l4: [X₀]
    • l5: [X₀]




  Cut unreachable locations [l2] from the program graph


  Found invariant X₂ ≤ X₀ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 1 ≤ X₀ for location l1_v1


  Found invariant X₀ ≤ 0 for location l6


  Found invariant 1+X₂ ≤ X₀ ∧ 1 ≤ X₂ ∧ 3 ≤ X₀+X₂ ∧ 2 ≤ X₀ for location l2_v1


  Found invariant X₂ ≤ X₀ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 1 ≤ X₀ for location l5_v1


  Found invariant X₂ ≤ 0 ∧ X₂ ≤ X₀ ∧ X₀+X₂ ≤ 0 ∧ 0 ≤ X₂ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ X₀ ≤ 0 ∧ 0 ≤ X₀ for location l4_v1


  Found invariant X₂ ≤ X₀ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 1 ≤ X₀ for location l4_v2


  Found invariant X₂ ≤ X₀ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ 1 ≤ X₀ for location l2_v2


  Found invariant 1 ≤ X₀ for location l5_v2


  Found invariant X₀ ≤ 0 for location l8


  Found invariant 1+X₂ ≤ X₀ ∧ 0 ≤ X₂ ∧ 1 ≤ X₀+X₂ ∧ 1 ≤ X₀ for location l1


  Found invariant X₂ ≤ X₀ ∧ 1 ≤ X₂ ∧ 2 ≤ X₀+X₂ ∧ 1 ≤ X₀ for location l3


All Bounds
Timebounds
  Overall timebound:inf {Infinity}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: inf {Infinity}
    t₃: 1 {O(1)}
    t₄: inf {Infinity}
    t₅: X₀+1 {O(n)}
    t₆: inf {Infinity}
    t₇: X₀ {O(n)}
    t₈: inf {Infinity}
    t₉: inf {Infinity}
    t₁₀: X₀ {O(n)}
    t₁₁: 1 {O(1)}


Costbounds
  Overall costbound: inf {Infinity}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: inf {Infinity}
    t₃: 1 {O(1)}
    t₄: inf {Infinity}
    t₅: X₀+1 {O(n)}
    t₆: inf {Infinity}
    t₇: X₀ {O(n)}
    t₈: inf {Infinity}
    t₉: inf {Infinity}
    t₁₀: X₀ {O(n)}
    t₁₁: 1 {O(1)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₀, X₂: X₂ {O(n)}
    t₁, X₀: X₀ {O(n)}
    t₁, X₁: X₁ {O(n)}
    t₁, X₂: X₂ {O(n)}
    t₂, X₀: X₀ {O(n)}
    t₂, X₂: 2⋅X₀+X₂ {O(n)}
    t₃, X₀: X₀ {O(n)}
    t₃, X₂: X₂ {O(n)}
    t₄, X₀: X₀ {O(n)}
    t₄, X₂: X₀ {O(n)}
    t₅, X₀: 0 {O(1)}
    t₅, X₂: 0 {O(1)}
    t₆, X₀: X₀ {O(n)}
    t₆, X₂: X₀ {O(n)}
    t₇, X₀: X₀ {O(n)}
    t₇, X₂: X₀ {O(n)}
    t₈, X₀: X₀ {O(n)}
    t₈, X₂: X₀ {O(n)}
    t₉, X₀: X₀ {O(n)}
    t₉, X₂: X₀ {O(n)}
    t₁₀, X₀: X₀ {O(n)}
    t₁₀, X₂: X₀ {O(n)}
    t₁₁, X₀: X₀ {O(n)}
    t₁₁, X₂: X₂ {O(n)}

