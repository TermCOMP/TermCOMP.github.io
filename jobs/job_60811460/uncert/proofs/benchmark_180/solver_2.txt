WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [lbl121/11,lbl141/11,lbl171/11,lbl191/11,lbl21/11,lbl81/11]
1. non_recursive  : [exit_location/1]
2. non_recursive  : [stop/11]
3. non_recursive  : [lbl81_loop_cont/12]
4. non_recursive  : [start/11]
5. non_recursive  : [start0/11]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into lbl81/11
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into lbl81_loop_cont/12
4. SCC is partially evaluated into start/11
5. SCC is partially evaluated into start0/11

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations lbl81/11 
* CE 16 is refined into CE [19] 
* CE 14 is refined into CE [20] 
* CE 15 is refined into CE [21] 
* CE 11 is refined into CE [22] 
* CE 9 is refined into CE [23] 
* CE 7 is refined into CE [24] 
* CE 5 is refined into CE [25] 
* CE 12 is refined into CE [26] 
* CE 13 is refined into CE [27] 
* CE 10 is refined into CE [28] 
* CE 8 is refined into CE [29] 
* CE 6 is refined into CE [30] 
* CE 4 is refined into CE [31] 


### Cost equations --> "Loop" of lbl81/11 
* CEs [26] --> Loop 19 
* CEs [27] --> Loop 20 
* CEs [28] --> Loop 21 
* CEs [29] --> Loop 22 
* CEs [30] --> Loop 23 
* CEs [31] --> Loop 24 
* CEs [19] --> Loop 25 
* CEs [20] --> Loop 26 
* CEs [21] --> Loop 27 
* CEs [22] --> Loop 28 
* CEs [23] --> Loop 29 
* CEs [24] --> Loop 30 
* CEs [25] --> Loop 31 

### Ranking functions of CR lbl81(A,B,D,F,H,J,L,M,N,O,P) 
* RF of phase [19,20,21,22,23,24]: [A-H,-H+J]

#### Partial ranking functions of CR lbl81(A,B,D,F,H,J,L,M,N,O,P) 
* Partial RF of phase [19,20,21,22,23,24]:
  - RF of loop [19:1,20:1,21:1,22:1,23:1,24:1]:
    A-H
    -H+J
  - RF of loop [21:1]:
    A+B-1 depends on loops [22:1] 
    B+J-1 depends on loops [22:1] 
  - RF of loop [21:1,23:1]:
    A+B+D-1 depends on loops [22:1,24:1] 
    B+D+J-1 depends on loops [22:1,24:1] 
  - RF of loop [21:1,24:1]:
    A+B-D-1 depends on loops [22:1,23:1] 
    B-D+J-1 depends on loops [22:1,23:1] 
  - RF of loop [22:1]:
    A-B-1 depends on loops [21:1] 
    -B+J-1 depends on loops [21:1] 
  - RF of loop [22:1,23:1]:
    A-B+D-1 depends on loops [21:1,24:1] 
    -B+D+J-1 depends on loops [21:1,24:1] 
  - RF of loop [22:1,24:1]:
    A-B-D-1 depends on loops [21:1,23:1] 
    -B-D+J-1 depends on loops [21:1,23:1] 
  - RF of loop [23:1]:
    A+D-1 depends on loops [24:1] 
    D+J-1 depends on loops [24:1] 
  - RF of loop [24:1]:
    A-D-1 depends on loops [23:1] 
    -D+J-1 depends on loops [23:1] 


### Specialization of cost equations lbl81_loop_cont/12 
* CE 18 is refined into CE [32] 
* CE 17 is refined into CE [33] 


### Cost equations --> "Loop" of lbl81_loop_cont/12 
* CEs [32] --> Loop 32 
* CEs [33] --> Loop 33 

### Ranking functions of CR lbl81_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L) 

#### Partial ranking functions of CR lbl81_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L) 


### Specialization of cost equations start/11 
* CE 3 is refined into CE [34,35,36,37,38,39,40,41,42,43,44,45,46,47] 
* CE 2 is refined into CE [48] 


### Cost equations --> "Loop" of start/11 
* CEs [38,39,40,41,44,45,47] --> Loop 34 
* CEs [46] --> Loop 35 
* CEs [48] --> Loop 36 
* CEs [34,35,36,37,42,43] --> Loop 37 

### Ranking functions of CR start(A,B,C,D,E,F,G,H,I,J,L) 

#### Partial ranking functions of CR start(A,B,C,D,E,F,G,H,I,J,L) 


### Specialization of cost equations start0/11 
* CE 1 is refined into CE [49,50,51,52] 


### Cost equations --> "Loop" of start0/11 
* CEs [52] --> Loop 38 
* CEs [51] --> Loop 39 
* CEs [50] --> Loop 40 
* CEs [49] --> Loop 41 

### Ranking functions of CR start0(A,B,C,D,E,F,G,H,I,J,L) 

#### Partial ranking functions of CR start0(A,B,C,D,E,F,G,H,I,J,L) 


Computing Bounds
=====================================

#### Cost of chains of lbl81(A,B,D,F,H,J,L,M,N,O,P):
* Chain [[19,20,21,22,23,24],31]: 6*it(19)+0
  Such that:aux(69) =< -H+P
it(19) =< aux(69)

  with precondition: [L=2,O=0,A=J,A=P,A>=H+1,H>=B+D+1,D+H>=B+1,B+H>=D+1,B+D+H>=1,A+M+N>=B+D+H+1,A+D+M+1>=B+H+N,A+B+N>=D+H+M+1,A+B+D+1>=H+M+N] 

* Chain [[19,20,21,22,23,24],30]: 6*it(19)+0
  Such that:aux(70) =< -H+P
it(19) =< aux(70)

  with precondition: [L=2,O=1,A=J,A=P,A>=H+1,H>=B+D+1,D+H>=B+1,B+H>=D+1,B+D+H>=1,A+M+N+1>=B+D+H,A+D+M>=B+H+N+1,A+B+N+1>=D+H+M,A+B+D>=H+M+N+1] 

* Chain [[19,20,21,22,23,24],29]: 6*it(19)+0
  Such that:aux(71) =< -H+P
it(19) =< aux(71)

  with precondition: [L=2,O=2,A=J,A=P,A>=H+1,H>=B+D+1,D+H>=B+1,B+H>=D+1,B+D+H>=1,A+M+N>=B+D+H+1,A+D+M>=B+H+N+1,A+B+N+1>=D+H+M,A+B+D+1>=H+M+N] 

* Chain [[19,20,21,22,23,24],28]: 6*it(19)+0
  Such that:aux(72) =< -H+P
it(19) =< aux(72)

  with precondition: [L=2,O=3,A=J,A=P,A>=H+1,H>=B+D+1,D+H>=B+1,B+H>=D+1,B+D+H>=1,A+M+N+1>=B+D+H,A+D+M+1>=B+H+N,A+B+N>=D+H+M+1,A+B+D>=H+M+N+1] 

* Chain [[19,20,21,22,23,24],27]: 6*it(19)+0
  Such that:aux(73) =< -H+J
it(19) =< aux(73)

  with precondition: [L=2,A=J,A=P,0>=O+1,A>=H+1,H>=B+D+1,D+H>=B+1,B+H>=D+1,B+D+H>=1,A+M+N>=B+D+H,A+D+M>=B+H+N,A+B+N>=D+H+M,A+B+D>=H+M+N] 

* Chain [[19,20,21,22,23,24],26]: 6*it(19)+0
  Such that:aux(74) =< -H+J
it(19) =< aux(74)

  with precondition: [L=2,A=J,A=P,O>=4,A>=H+1,H>=B+D+1,D+H>=B+1,B+H>=D+1,B+D+H>=1,A+M+N>=B+D+H,A+D+M>=B+H+N,A+B+N>=D+H+M,A+B+D>=H+M+N] 

* Chain [[19,20,21,22,23,24],25]: 6*it(19)+0
  Such that:aux(75) =< -H+J
it(19) =< aux(75)

  with precondition: [L=3,A=J,A>=H+1,H>=B+D+1,D+H>=B+1,B+H>=D+1,B+D+H>=1] 

* Chain [31]: 0
  with precondition: [F=0,L=2,O=0,A=H,A=J,B=M,D+1=N,A=P,A>=B+D+1,A+D>=B+1,A+B>=D+1,A+B+D>=1] 

* Chain [30]: 0
  with precondition: [F=1,L=2,O=1,A=H,A=J,B=M,D=N+1,A=P,A>=B+D+1,A+D>=B+1,A+B>=D+1,A+B+D>=1] 

* Chain [29]: 0
  with precondition: [F=2,L=2,O=2,A=H,A=J,B+1=M,D=N,A=P,A>=B+D+1,A+D>=B+1,A+B>=D+1,A+B+D>=1] 

* Chain [28]: 0
  with precondition: [F=3,L=2,O=3,A=H,A=J,B=M+1,D=N,A=P,A>=B+D+1,A+D>=B+1,A+B>=D+1,A+B+D>=1] 

* Chain [27]: 0
  with precondition: [L=2,A=H,A=J,B=M,D=N,F=O,A=P,0>=F+1,A>=B+D+1,A+D>=B+1,A+B>=D+1,A+B+D>=1] 

* Chain [26]: 0
  with precondition: [L=2,A=H,A=J,B=M,D=N,F=O,A=P,F>=4,A>=B+D+1,A+D>=B+1,A+B>=D+1,A+B+D>=1] 

* Chain [25]: 0
  with precondition: [L=3,J=A,J>=H,H>=B+D+1,D+H>=B+1,B+H>=D+1,B+D+H>=1] 


#### Cost of chains of lbl81_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L):
* Chain [33]: 0
  with precondition: [A=2,K=B,K>=1] 

* Chain [32]: 0
  with precondition: [A=3,K=B,K>=1] 


#### Cost of chains of start(A,B,C,D,E,F,G,H,I,J,L):
* Chain [37]: 0
  with precondition: [A=1,J=1,C=B,E=D,G=F,I=H] 

* Chain [36]: 0
  with precondition: [J=A,C=B,E=D,G=F,I=H,0>=J] 

* Chain [35]: 0
  with precondition: [J=A,C=B,E=D,G=F,I=H,J>=1] 

* Chain [34]: 42*s(2)+0
  Such that:aux(76) =< A
s(2) =< aux(76)

  with precondition: [J=A,C=B,E=D,G=F,I=H,J>=2] 


#### Cost of chains of start0(A,B,C,D,E,F,G,H,I,J,L):
* Chain [41]: 0
  with precondition: [A=1] 

* Chain [40]: 0
  with precondition: [0>=A] 

* Chain [39]: 0
  with precondition: [A>=1] 

* Chain [38]: 42*s(16)+0
  Such that:s(15) =< A
s(16) =< s(15)

  with precondition: [A>=2] 


Closed-form bounds of start0(A,B,C,D,E,F,G,H,I,J,L): 
-------------------------------------
* Chain [41] with precondition: [A=1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [40] with precondition: [0>=A] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [39] with precondition: [A>=1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [38] with precondition: [A>=2] 
    - Upper bound: 42*A 
    - Complexity: n 

### Maximum cost of start0(A,B,C,D,E,F,G,H,I,J,L): nat(A)*42 
Asymptotic class: n 
* Total analysis performed in 574 ms.

