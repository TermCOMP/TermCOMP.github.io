WORST_CASE(?,O(1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [f19/8]
1. recursive  : [f15/12,f19_loop_cont/13]
2. non_recursive  : [exit_location/1]
3. recursive  : [f41/8]
4. recursive  : [f36/10,f41_loop_cont/11]
5. recursive  : [f54/8]
6. recursive  : [f50/10,f54_loop_cont/11]
7. recursive  : [f33/10,f36_loop_cont/11,f50_loop_cont/11]
8. recursive  : [f70/7]
9. recursive  : [f66/8,f70_loop_cont/9]
10. recursive  : [f84/8]
11. recursive  : [f80/12,f84_loop_cont/13]
12. non_recursive  : [f96/14]
13. non_recursive  : [f80_loop_cont/15]
14. non_recursive  : [f66_loop_cont/15]
15. non_recursive  : [f33_loop_cont/15]
16. non_recursive  : [f15_loop_cont/15]
17. non_recursive  : [f0/14]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into f19/8
1. SCC is partially evaluated into f15/12
2. SCC is completely evaluated into other SCCs
3. SCC is partially evaluated into f41/8
4. SCC is partially evaluated into f36/10
5. SCC is partially evaluated into f54/8
6. SCC is partially evaluated into f50/10
7. SCC is partially evaluated into f33/10
8. SCC is partially evaluated into f70/7
9. SCC is partially evaluated into f66/8
10. SCC is partially evaluated into f84/8
11. SCC is partially evaluated into f80/12
12. SCC is completely evaluated into other SCCs
13. SCC is partially evaluated into f80_loop_cont/15
14. SCC is partially evaluated into f66_loop_cont/15
15. SCC is partially evaluated into f33_loop_cont/15
16. SCC is partially evaluated into f15_loop_cont/15
17. SCC is partially evaluated into f0/14

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations f19/8 
* CE 11 is refined into CE [55] 
* CE 12 is refined into CE [56] 
* CE 9 is refined into CE [57] 
* CE 8 is refined into CE [58] 
* CE 10 is refined into CE [59] 


### Cost equations --> "Loop" of f19/8 
* CEs [58] --> Loop 54 
* CEs [57] --> Loop 55 
* CEs [59] --> Loop 56 
* CEs [55] --> Loop 57 
* CEs [56] --> Loop 58 

### Ranking functions of CR f19(B,C,D,E,O,P,Q,R) 
* RF of phase [54]: [-E+6]
* RF of phase [55]: [C-E,-E+5]

#### Partial ranking functions of CR f19(B,C,D,E,O,P,Q,R) 
* Partial RF of phase [54]:
  - RF of loop [54:1]:
    -E+6
* Partial RF of phase [55]:
  - RF of loop [55:1]:
    C-E
    -E+5


### Specialization of cost equations f15/12 
* CE 4 is refined into CE [60] 
* CE 2 is refined into CE [61,62,63,64,65,66] 
* CE 5 is refined into CE [67] 
* CE 3 is refined into CE [68,69,70,71] 


### Cost equations --> "Loop" of f15/12 
* CEs [71] --> Loop 59 
* CEs [70] --> Loop 60 
* CEs [68] --> Loop 61 
* CEs [69] --> Loop 62 
* CEs [60] --> Loop 63 
* CEs [65] --> Loop 64 
* CEs [64] --> Loop 65 
* CEs [63] --> Loop 66 
* CEs [66] --> Loop 67 
* CEs [67] --> Loop 68 
* CEs [61,62] --> Loop 69 

### Ranking functions of CR f15(B,C,D,E,F,G,M,O,P,Q,R,S) 
* RF of phase [60]: [-C+5]

#### Partial ranking functions of CR f15(B,C,D,E,F,G,M,O,P,Q,R,S) 
* Partial RF of phase [60]:
  - RF of loop [60:1]:
    -C+5


### Specialization of cost equations f41/8 
* CE 38 is refined into CE [72] 
* CE 39 is refined into CE [73] 
* CE 37 is refined into CE [74] 


### Cost equations --> "Loop" of f41/8 
* CEs [74] --> Loop 70 
* CEs [72] --> Loop 71 
* CEs [73] --> Loop 72 

### Ranking functions of CR f41(G,H,I,J,O,P,Q,R) 
* RF of phase [70]: [G-J,-J+4]

#### Partial ranking functions of CR f41(G,H,I,J,O,P,Q,R) 
* Partial RF of phase [70]:
  - RF of loop [70:1]:
    G-J
    -J+4


### Specialization of cost equations f36/10 
* CE 25 is refined into CE [75] 
* CE 20 is refined into CE [76,77] 
* CE 21 is refined into CE [78] 
* CE 26 is refined into CE [79] 
* CE 22 is refined into CE [80] 
* CE 23 is refined into CE [81] 
* CE 24 is refined into CE [82] 


### Cost equations --> "Loop" of f36/10 
* CEs [80] --> Loop 73 
* CEs [81] --> Loop 74 
* CEs [82] --> Loop 75 
* CEs [75] --> Loop 76 
* CEs [78] --> Loop 77 
* CEs [76,77] --> Loop 78 
* CEs [79] --> Loop 79 

### Ranking functions of CR f36(F,G,H,I,J,O,P,Q,R,S) 
* RF of phase [73]: [-H+6]
* RF of phase [74]: [-H+6]
* RF of phase [75]: [-H+6]

#### Partial ranking functions of CR f36(F,G,H,I,J,O,P,Q,R,S) 
* Partial RF of phase [73]:
  - RF of loop [73:1]:
    -H+6
* Partial RF of phase [74]:
  - RF of loop [74:1]:
    -H+6
* Partial RF of phase [75]:
  - RF of loop [75:1]:
    -H+6


### Specialization of cost equations f54/8 
* CE 41 is refined into CE [83] 
* CE 42 is refined into CE [84] 
* CE 40 is refined into CE [85] 


### Cost equations --> "Loop" of f54/8 
* CEs [85] --> Loop 80 
* CEs [83] --> Loop 81 
* CEs [84] --> Loop 82 

### Ranking functions of CR f54(G,H,I,J,O,P,Q,R) 
* RF of phase [80]: [G-J+1]

#### Partial ranking functions of CR f54(G,H,I,J,O,P,Q,R) 
* Partial RF of phase [80]:
  - RF of loop [80:1]:
    G-J+1


### Specialization of cost equations f50/10 
* CE 29 is refined into CE [86] 
* CE 27 is refined into CE [87,88] 
* CE 30 is refined into CE [89] 
* CE 28 is refined into CE [90,91] 


### Cost equations --> "Loop" of f50/10 
* CEs [91] --> Loop 83 
* CEs [90] --> Loop 84 
* CEs [86] --> Loop 85 
* CEs [88] --> Loop 86 
* CEs [87] --> Loop 87 
* CEs [89] --> Loop 88 

### Ranking functions of CR f50(F,G,H,I,J,O,P,Q,R,S) 
* RF of phase [83]: [-H+6]
* RF of phase [84]: [-H+6]

#### Partial ranking functions of CR f50(F,G,H,I,J,O,P,Q,R,S) 
* Partial RF of phase [83]:
  - RF of loop [83:1]:
    -H+6
* Partial RF of phase [84]:
  - RF of loop [84:1]:
    -H+6


### Specialization of cost equations f33/10 
* CE 16 is refined into CE [92] 
* CE 13 is refined into CE [93,94,95,96,97,98] 
* CE 15 is refined into CE [99,100,101,102,103,104,105,106,107,108,109,110] 
* CE 17 is refined into CE [111] 
* CE 14 is refined into CE [112,113,114] 


### Cost equations --> "Loop" of f33/10 
* CEs [114] --> Loop 89 
* CEs [113] --> Loop 90 
* CEs [112] --> Loop 91 
* CEs [92] --> Loop 92 
* CEs [94,95,103,104,105,106] --> Loop 93 
* CEs [97,110] --> Loop 94 
* CEs [96,107,108,109] --> Loop 95 
* CEs [98] --> Loop 96 
* CEs [111] --> Loop 97 
* CEs [93,99,100,101,102] --> Loop 98 

### Ranking functions of CR f33(F,G,H,I,J,O,P,Q,R,S) 
* RF of phase [89]: [-G+5]
* RF of phase [90]: [-G]

#### Partial ranking functions of CR f33(F,G,H,I,J,O,P,Q,R,S) 
* Partial RF of phase [89]:
  - RF of loop [89:1]:
    -G+5
* Partial RF of phase [90]:
  - RF of loop [90:1]:
    -G


### Specialization of cost equations f70/7 
* CE 44 is refined into CE [115] 
* CE 45 is refined into CE [116] 
* CE 43 is refined into CE [117] 


### Cost equations --> "Loop" of f70/7 
* CEs [117] --> Loop 99 
* CEs [115] --> Loop 100 
* CEs [116] --> Loop 101 

### Ranking functions of CR f70(G,H,I,O,P,Q,R) 
* RF of phase [99]: [G-H,-H+5]

#### Partial ranking functions of CR f70(G,H,I,O,P,Q,R) 
* Partial RF of phase [99]:
  - RF of loop [99:1]:
    G-H
    -H+5


### Specialization of cost equations f66/8 
* CE 31 is refined into CE [118,119] 
* CE 34 is refined into CE [120] 
* CE 33 is refined into CE [121] 
* CE 32 is refined into CE [122,123] 


### Cost equations --> "Loop" of f66/8 
* CEs [123] --> Loop 102 
* CEs [122] --> Loop 103 
* CEs [119] --> Loop 104 
* CEs [118] --> Loop 105 
* CEs [120] --> Loop 106 
* CEs [121] --> Loop 107 

### Ranking functions of CR f66(F,G,H,I,O,P,Q,R) 
* RF of phase [102]: [-G+6]
* RF of phase [103]: [-G+1]

#### Partial ranking functions of CR f66(F,G,H,I,O,P,Q,R) 
* Partial RF of phase [102]:
  - RF of loop [102:1]:
    -G+6
* Partial RF of phase [103]:
  - RF of loop [103:1]:
    -G+1


### Specialization of cost equations f84/8 
* CE 54 is refined into CE [124] 
* CE 53 is refined into CE [125] 
* CE 52 is refined into CE [126] 


### Cost equations --> "Loop" of f84/8 
* CEs [126] --> Loop 108 
* CEs [124] --> Loop 109 
* CEs [125] --> Loop 110 

### Ranking functions of CR f84(F,G,H,I,O,P,Q,R) 
* RF of phase [108]: [-H+6]

#### Partial ranking functions of CR f84(F,G,H,I,O,P,Q,R) 
* Partial RF of phase [108]:
  - RF of loop [108:1]:
    -H+6


### Specialization of cost equations f80/12 
* CE 48 is refined into CE [127] 
* CE 46 is refined into CE [128,129] 
* CE 49 is refined into CE [130] 
* CE 47 is refined into CE [131,132] 


### Cost equations --> "Loop" of f80/12 
* CEs [132] --> Loop 111 
* CEs [131] --> Loop 112 
* CEs [127] --> Loop 113 
* CEs [129] --> Loop 114 
* CEs [128] --> Loop 115 
* CEs [130] --> Loop 116 

### Ranking functions of CR f80(F,G,H,I,K,L,O,P,Q,R,S,T) 
* RF of phase [111]: [G-4]
* RF of phase [112]: [G+1]

#### Partial ranking functions of CR f80(F,G,H,I,K,L,O,P,Q,R,S,T) 
* Partial RF of phase [111]:
  - RF of loop [111:1]:
    G-4
* Partial RF of phase [112]:
  - RF of loop [112:1]:
    G+1


### Specialization of cost equations f80_loop_cont/15 
* CE 50 is refined into CE [133] 
* CE 51 is refined into CE [134] 


### Cost equations --> "Loop" of f80_loop_cont/15 
* CEs [133] --> Loop 117 
* CEs [134] --> Loop 118 

### Ranking functions of CR f80_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O) 

#### Partial ranking functions of CR f80_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O) 


### Specialization of cost equations f66_loop_cont/15 
* CE 35 is refined into CE [135] 
* CE 36 is refined into CE [136,137,138,139,140,141,142,143] 


### Cost equations --> "Loop" of f66_loop_cont/15 
* CEs [135] --> Loop 119 
* CEs [140,142] --> Loop 120 
* CEs [139] --> Loop 121 
* CEs [143] --> Loop 122 
* CEs [138] --> Loop 123 
* CEs [137,141] --> Loop 124 
* CEs [136] --> Loop 125 

### Ranking functions of CR f66_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O) 

#### Partial ranking functions of CR f66_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O) 


### Specialization of cost equations f33_loop_cont/15 
* CE 19 is refined into CE [144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160] 
* CE 18 is refined into CE [161] 


### Cost equations --> "Loop" of f33_loop_cont/15 
* CEs [152,153,154,155] --> Loop 126 
* CEs [148,149,150,151,160] --> Loop 127 
* CEs [159] --> Loop 128 
* CEs [144,145,146,147,158] --> Loop 129 
* CEs [157] --> Loop 130 
* CEs [156] --> Loop 131 
* CEs [161] --> Loop 132 

### Ranking functions of CR f33_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O) 

#### Partial ranking functions of CR f33_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O) 


### Specialization of cost equations f15_loop_cont/15 
* CE 7 is refined into CE [162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185] 
* CE 6 is refined into CE [186] 


### Cost equations --> "Loop" of f15_loop_cont/15 
* CEs [182,183,184,185] --> Loop 133 
* CEs [173] --> Loop 134 
* CEs [172,178,179,180,181] --> Loop 135 
* CEs [171] --> Loop 136 
* CEs [170] --> Loop 137 
* CEs [169,174,175,176,177] --> Loop 138 
* CEs [168] --> Loop 139 
* CEs [167] --> Loop 140 
* CEs [162,163,164,165,166] --> Loop 141 
* CEs [186] --> Loop 142 

### Ranking functions of CR f15_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O) 

#### Partial ranking functions of CR f15_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O) 


### Specialization of cost equations f0/14 
* CE 1 is refined into CE [187,188,189,190,191,192] 


### Cost equations --> "Loop" of f0/14 
* CEs [187,188,189,190,191,192] --> Loop 143 

### Ranking functions of CR f0(A,B,C,D,E,F,G,H,I,J,K,L,M,O) 

#### Partial ranking functions of CR f0(A,B,C,D,E,F,G,H,I,J,K,L,M,O) 


Computing Bounds
=====================================

#### Cost of chains of f19(B,C,D,E,O,P,Q,R):
* Chain [[55],58]: 1*it(55)+0
  Such that:it(55) =< C-E

  with precondition: [B=5,O=3,5>=C,E>=0,C>=E+1] 

* Chain [[55],56,[54],58]: 1*it(54)+1*it(55)+1
  Such that:it(54) =< -C+5
it(55) =< C-E

  with precondition: [B=5,O=3,4>=C,E>=0,C>=E+1] 

* Chain [[55],56,[54],57]: 1*it(54)+1*it(55)+1
  Such that:it(55) =< -E+P
it(54) =< -P+6

  with precondition: [B=5,O=8,R=6,C+1=P,4>=C,E>=0,C>=E+1] 

* Chain [[55],56,58]: 1*it(55)+1
  Such that:it(55) =< C-E

  with precondition: [B=5,O=3,5>=C,E>=0,C>=E+1] 

* Chain [[55],56,57]: 1*it(55)+1
  Such that:it(55) =< -E+5

  with precondition: [B=5,C=5,O=8,P=6,R=6,4>=E,E>=0] 

* Chain [[54],58]: 1*it(54)+0
  Such that:it(54) =< -E+6

  with precondition: [B=5,O=3,5>=E,E>=0,E>=C+1] 

* Chain [[54],57]: 1*it(54)+0
  Such that:it(54) =< -E+6

  with precondition: [B=5,O=8,R=6,C+1=P,5>=E,E>=0,E>=C+1] 

* Chain [58]: 0
  with precondition: [B=5,O=3,E>=0] 

* Chain [56,[54],58]: 1*it(54)+1
  Such that:it(54) =< -E+5

  with precondition: [B=5,O=3,C=E,4>=C,C>=0] 

* Chain [56,[54],57]: 1*it(54)+1
  Such that:it(54) =< -P+6

  with precondition: [B=5,O=8,R=6,C=E,C+1=P,4>=C,C>=0] 

* Chain [56,58]: 1
  with precondition: [B=5,O=3,C=E,5>=C,C>=0] 


#### Cost of chains of f15(B,C,D,E,F,G,M,O,P,Q,R,S):
* Chain [69]: 6
  with precondition: [B=5,C=0,O=3] 

* Chain [68]: 0
  with precondition: [B=5,O=3,C>=0] 

* Chain [67]: 0
  with precondition: [B=5,O=3,5>=C,C>=0] 

* Chain [62,[60],68]: 2*it(60)+1*s(8)+1*s(9)+1*s(10)+2
  Such that:it(60) =< 4
s(10) =< 5
s(9) =< 13
s(8) =< 20

  with precondition: [B=5,C=0,O=3] 

* Chain [62,[60],67]: 2*it(60)+1*s(8)+1*s(9)+1*s(10)+2
  Such that:it(60) =< 4
s(10) =< 5
s(9) =< 13
s(8) =< 20

  with precondition: [B=5,C=0,O=3] 

* Chain [62,[60],66]: 2*it(60)+1*s(8)+1*s(9)+3*s(10)+3
  Such that:it(60) =< 4
s(9) =< 13
s(8) =< 20
aux(2) =< 5
s(10) =< aux(2)

  with precondition: [B=5,C=0,O=3] 

* Chain [62,[60],65]: 2*it(60)+1*s(8)+1*s(9)+1*s(10)+2*s(13)+3
  Such that:it(60) =< 3
s(9) =< 12
s(8) =< 15
aux(5) =< 4
aux(6) =< 5
s(13) =< aux(5)
s(10) =< aux(6)
s(13) =< aux(6)
it(60) =< aux(5)

  with precondition: [B=5,C=0,O=3] 

* Chain [62,[60],61,68]: 2*it(60)+1*s(8)+1*s(9)+2*s(10)+4
  Such that:it(60) =< 4
s(9) =< 13
s(8) =< 20
aux(7) =< 5
s(10) =< aux(7)

  with precondition: [B=5,C=0,O=3] 

* Chain [62,[60],61,63]: 2*it(60)+1*s(8)+1*s(9)+2*s(10)+4
  Such that:it(60) =< 4
s(9) =< 13
s(8) =< 20
aux(8) =< 5
s(10) =< aux(8)

  with precondition: [B=5,C=0,O=7,P=6,R=6,S=0] 

* Chain [62,68]: 1*s(10)+2
  Such that:s(10) =< 5

  with precondition: [B=5,C=0,O=3] 

* Chain [62,67]: 1*s(10)+2
  Such that:s(10) =< 5

  with precondition: [B=5,C=0,O=3] 

* Chain [62,66]: 1*s(10)+2*s(12)+3
  Such that:s(11) =< 1
s(10) =< 5
s(12) =< s(11)

  with precondition: [B=5,C=0,O=3] 

* Chain [62,65]: 1*s(10)+1*s(13)+1*s(14)+3
  Such that:s(14) =< 1
s(13) =< 4
s(10) =< 5

  with precondition: [B=5,C=0,O=3] 


#### Cost of chains of f41(G,H,I,J,O,P,Q,R):
* Chain [[70],72]: 1*it(70)+0
  Such that:it(70) =< G-J

  with precondition: [O=3,4>=G,5>=H,J>=0,G>=J+1] 

* Chain [[70],71]: 1*it(70)+0
  Such that:it(70) =< -J+R

  with precondition: [O=6,H+1=P,G=R,4>=G,5>=H,J>=0,G>=J+1] 

* Chain [72]: 0
  with precondition: [O=3,4>=G,5>=H,J>=0] 

* Chain [71]: 0
  with precondition: [O=6,Q=I,H+1=P,J=R,4>=G,5>=H,J>=0,J>=G] 


#### Cost of chains of f36(F,G,H,I,J,O,P,Q,R,S):
* Chain [[75],79]: 1*it(75)+0
  Such that:it(75) =< -H+6

  with precondition: [F=5,G=0,O=3,5>=H,H>=1] 

* Chain [[75],76]: 1*it(75)+0
  Such that:it(75) =< -H+6

  with precondition: [F=5,G=0,O=5,P=0,Q=1,J=S,5>=H,H>=1] 

* Chain [[74],79]: 1*it(74)+0
  Such that:it(74) =< -H+6

  with precondition: [F=5,O=3,0>=G+1,5>=H,H>=G+1] 

* Chain [[74],77]: 1*it(74)+0
  Such that:it(74) =< -H+5

  with precondition: [F=5,O=3,0>=G+1,4>=H,H>=G+1] 

* Chain [[74],76]: 1*it(74)+0
  Such that:it(74) =< -H+6

  with precondition: [F=5,O=5,S=0,G=P,G+1=Q,0>=G+1,5>=H] 

* Chain [[73],79]: 1*it(73)+1*s(51)+0
  Such that:s(51) =< G-4*H+20
it(73) =< -H+6

  with precondition: [F=5,O=3,5>=H,G>=1,H>=G+1] 

* Chain [[73],78]: 1*it(73)+1*s(51)+1*s(52)+0
  Such that:s(52) =< G
s(51) =< -4*H+20
it(73) =< -H+5

  with precondition: [F=5,O=3,4>=H,G>=1,H>=G+1] 

* Chain [[73],76]: 1*it(73)+1*s(51)+0
  Such that:s(51) =< -4*H+S+20
it(73) =< -H+6

  with precondition: [F=5,O=5,G=P,G+1=Q,G=S,5>=H,G>=1,H>=G+1] 

* Chain [79]: 0
  with precondition: [F=5,O=3,H>=G+1] 

* Chain [78]: 1*s(52)+0
  Such that:s(52) =< G

  with precondition: [F=5,O=3,5>=H,G>=1,H>=G+1] 

* Chain [77]: 0
  with precondition: [F=5,O=3,0>=G+1,5>=H,H>=G+1] 


#### Cost of chains of f54(G,H,I,J,O,P,Q,R):
* Chain [[80],82]: 1*it(80)+0
  Such that:it(80) =< G-J+1

  with precondition: [O=3,5>=H,J>=0,G>=J] 

* Chain [[80],81]: 1*it(80)+0
  Such that:it(80) =< G-J+1

  with precondition: [O=5,H+1=P,G+1=R,5>=H,J>=0,G>=J] 

* Chain [82]: 0
  with precondition: [O=3,5>=H,J>=0] 

* Chain [81]: 0
  with precondition: [O=5,Q=I,H+1=P,J=R,5>=H,J>=0,J>=G+1] 


#### Cost of chains of f50(F,G,H,I,J,O,P,Q,R,S):
* Chain [[84],88]: 1*it(84)+0
  Such that:it(84) =< -H+6

  with precondition: [F=5,O=3,0>=G+1,5>=H] 

* Chain [[84],87]: 1*it(84)+0
  Such that:it(84) =< -H+5

  with precondition: [F=5,O=3,0>=G+1,4>=H] 

* Chain [[84],85]: 1*it(84)+0
  Such that:it(84) =< -H+6

  with precondition: [F=5,O=7,Q=6,S=0,G+1=P,0>=G+1,5>=H] 

* Chain [[83],88]: 1*it(83)+1*s(59)+0
  Such that:aux(14) =< G+1
it(83) =< -H+6
s(59) =< it(83)*aux(14)

  with precondition: [F=5,O=3,5>=H,G>=0] 

* Chain [[83],87]: 1*it(83)+1*s(59)+0
  Such that:aux(14) =< G+1
it(83) =< -H+5
s(59) =< it(83)*aux(14)

  with precondition: [F=5,O=3,4>=H,G>=0] 

* Chain [[83],86]: 1*it(83)+1*s(59)+1*s(60)+0
  Such that:it(83) =< -H+5
aux(15) =< G+1
s(60) =< aux(15)
s(59) =< it(83)*aux(15)

  with precondition: [F=5,O=3,4>=H,G>=0] 

* Chain [[83],85]: 1*it(83)+1*s(59)+0
  Such that:it(83) =< -H+6
aux(14) =< P
s(59) =< it(83)*aux(14)

  with precondition: [F=5,O=7,Q=6,G+1=P,G+1=S,5>=H,G>=0] 

* Chain [88]: 0
  with precondition: [F=5,O=3] 

* Chain [87]: 0
  with precondition: [F=5,O=3,5>=H] 

* Chain [86]: 1*s(60)+0
  Such that:s(60) =< G+1

  with precondition: [F=5,O=3,5>=H,G>=0] 

* Chain [85]: 0
  with precondition: [F=5,O=7,P=G+1,R=I,S=J,H=Q,H>=6] 


#### Cost of chains of f33(F,G,H,I,J,O,P,Q,R,S):
* Chain [[90],98]: 1*it(90)+2*s(90)+53
  Such that:it(90) =< -G
aux(23) =< -G+5
s(91) =< it(90)*aux(23)
s(90) =< s(91)

  with precondition: [F=5,O=3,0>=G+1] 

* Chain [[90],97]: 1*it(90)+2*s(90)+0
  Such that:it(90) =< -G
aux(23) =< -G+5
s(91) =< it(90)*aux(23)
s(90) =< s(91)

  with precondition: [F=5,O=3,0>=G+1] 

* Chain [[90],96]: 1*it(90)+2*s(90)+0
  Such that:it(90) =< -G
aux(23) =< -G+5
s(91) =< it(90)*aux(23)
s(90) =< s(91)

  with precondition: [F=5,O=3,0>=G+1] 

* Chain [[90],93]: 1*it(90)+2*s(90)+6*s(92)+2*s(93)+0
  Such that:aux(25) =< -G+3
aux(27) =< -G+4
aux(28) =< -G+5
aux(25) =< aux(27)
aux(26) =< aux(27)
it(90) =< aux(27)
aux(26) =< aux(28)
it(90) =< aux(28)
s(93) =< aux(25)
s(92) =< aux(26)
s(91) =< it(90)*aux(28)
s(90) =< s(91)

  with precondition: [F=5,O=3,0>=G+2] 

* Chain [[90],91,[89],97]: 1*it(89)+1*it(90)+2*s(90)+1*s(110)+2*s(111)+1*s(112)+2*s(114)+1*s(117)+1
  Such that:s(116) =< 1
it(89) =< 4
aux(31) =< 5
s(113) =< 13
s(110) =< 43
it(90) =< -G
aux(23) =< -G+5
s(111) =< s(113)
s(112) =< s(111)*aux(31)
s(114) =< aux(31)
s(117) =< s(114)*s(116)
s(91) =< it(90)*aux(23)
s(90) =< s(91)

  with precondition: [F=5,O=3,0>=G+1] 

* Chain [[90],91,[89],96]: 1*it(89)+1*it(90)+2*s(90)+1*s(110)+2*s(111)+1*s(112)+2*s(114)+1*s(117)+1
  Such that:s(116) =< 1
it(89) =< 3
aux(32) =< 5
s(113) =< 12
s(110) =< 39
it(90) =< -G
aux(23) =< -G+5
s(111) =< s(113)
s(112) =< s(111)*aux(32)
s(114) =< aux(32)
s(117) =< s(114)*s(116)
s(91) =< it(90)*aux(23)
s(90) =< s(91)

  with precondition: [F=5,O=3,0>=G+1] 

* Chain [[90],91,[89],95]: 1*it(89)+1*it(90)+2*s(90)+1*s(110)+2*s(111)+1*s(112)+2*s(114)+1*s(117)+1*s(118)+4*s(119)+6*s(120)+1*s(130)+1
  Such that:s(116) =< 1
aux(38) =< 4
aux(39) =< 5
aux(37) =< 6
aux(40) =< 16
aux(34) =< 19
s(110) =< 52
it(90) =< -G
aux(23) =< -G+5
it(89) =< aux(38)
s(118) =< aux(38)
aux(34) =< aux(40)
aux(35) =< aux(39)
s(118) =< aux(39)
aux(35) =< aux(37)
s(119) =< aux(34)
s(120) =< aux(35)
s(130) =< s(120)*aux(35)
s(111) =< aux(40)
s(112) =< s(111)*aux(39)
s(114) =< aux(39)
s(117) =< s(114)*s(116)
s(91) =< it(90)*aux(23)
s(90) =< s(91)

  with precondition: [F=5,O=3,0>=G+1] 

* Chain [[90],91,[89],94]: 1*it(89)+1*it(90)+2*s(90)+1*s(110)+2*s(111)+1*s(112)+2*s(114)+1*s(117)+1*s(131)+1*s(132)+4*s(133)+1*s(134)+1*s(135)+2*s(139)+1
  Such that:s(116) =< 1
s(131) =< 3
aux(42) =< 4
aux(46) =< 5
s(135) =< 6
aux(45) =< 12
it(89) =< 13
aux(44) =< 16
s(134) =< 19
s(132) =< 20
s(113) =< 52
s(110) =< 156
it(90) =< -G
aux(23) =< -G+5
aux(41) =< aux(42)
s(131) =< aux(42)
aux(41) =< aux(46)
s(135) =< aux(46)
s(132) =< aux(44)
s(134) =< aux(44)
it(89) =< aux(45)
s(113) =< aux(45)
s(133) =< aux(41)
s(139) =< s(133)*aux(41)
s(111) =< s(113)
s(112) =< s(111)*aux(46)
s(114) =< aux(46)
s(117) =< s(114)*s(116)
s(91) =< it(90)*aux(23)
s(90) =< s(91)

  with precondition: [F=5,O=3,0>=G+1] 

* Chain [[90],91,[89],92]: 1*it(89)+1*it(90)+2*s(90)+1*s(110)+2*s(111)+1*s(112)+2*s(114)+1*s(117)+1
  Such that:s(116) =< 1
it(89) =< 4
aux(47) =< 5
s(113) =< 13
s(110) =< 43
it(90) =< -G
aux(23) =< -G+5
s(111) =< s(113)
s(112) =< s(111)*aux(47)
s(114) =< aux(47)
s(117) =< s(114)*s(116)
s(91) =< it(90)*aux(23)
s(90) =< s(91)

  with precondition: [F=5,O=4,P=1,Q=6,S=5,0>=G+1] 

* Chain [[90],91,97]: 1*it(90)+2*s(90)+2*s(114)+1*s(117)+1
  Such that:s(116) =< 1
aux(30) =< 5
it(90) =< -G
aux(23) =< -G+5
s(114) =< aux(30)
s(117) =< s(114)*s(116)
s(91) =< it(90)*aux(23)
s(90) =< s(91)

  with precondition: [F=5,O=3,0>=G+1] 

* Chain [[90],91,96]: 1*it(90)+2*s(90)+2*s(114)+1*s(117)+1
  Such that:s(116) =< 1
aux(30) =< 5
it(90) =< -G
aux(23) =< -G+5
s(114) =< aux(30)
s(117) =< s(114)*s(116)
s(91) =< it(90)*aux(23)
s(90) =< s(91)

  with precondition: [F=5,O=3,0>=G+1] 

* Chain [[90],91,95]: 1*it(90)+2*s(90)+2*s(114)+1*s(117)+1*s(118)+4*s(119)+5*s(120)+1*s(129)+1*s(130)+1
  Such that:aux(48) =< 1
s(128) =< 2
aux(35) =< 4
aux(30) =< 5
aux(34) =< 13
it(90) =< -G
aux(23) =< -G+5
s(118) =< aux(48)
s(119) =< aux(34)
s(120) =< aux(35)
s(129) =< s(128)
s(130) =< s(120)*s(128)
s(114) =< aux(30)
s(117) =< s(114)*aux(48)
s(91) =< it(90)*aux(23)
s(90) =< s(91)

  with precondition: [F=5,O=3,0>=G+1] 

* Chain [[90],91,94]: 1*it(90)+2*s(90)+2*s(114)+1*s(117)+1*s(131)+1*s(132)+3*s(133)+1*s(134)+1*s(135)+2*s(139)+1*s(140)+1
  Such that:aux(49) =< 1
s(136) =< 2
aux(41) =< 3
s(135) =< 4
aux(30) =< 5
s(132) =< 12
s(134) =< 13
it(90) =< -G
aux(23) =< -G+5
s(131) =< aux(49)
s(133) =< aux(41)
s(139) =< s(133)*s(136)
s(140) =< s(136)
s(114) =< aux(30)
s(117) =< s(114)*aux(49)
s(91) =< it(90)*aux(23)
s(90) =< s(91)

  with precondition: [F=5,O=3,0>=G+1] 

* Chain [[89],97]: 1*it(89)+1*s(110)+2*s(111)+1*s(112)+0
  Such that:s(106) =< 5
s(110) =< -13*G+56
s(113) =< -4*G+17
it(89) =< -G+5
s(111) =< s(113)
s(112) =< s(111)*s(106)

  with precondition: [F=5,O=3,4>=G,G>=1] 

* Chain [[89],96]: 1*it(89)+1*s(110)+2*s(111)+1*s(112)+0
  Such that:s(106) =< 5
s(110) =< -13*G+52
s(113) =< -4*G+16
it(89) =< -G+4
s(111) =< s(113)
s(112) =< s(111)*s(106)

  with precondition: [F=5,O=3,3>=G,G>=1] 

* Chain [[89],95]: 1*it(89)+1*s(110)+2*s(111)+1*s(112)+1*s(118)+4*s(119)+6*s(120)+1*s(130)+0
  Such that:s(118) =< 4
aux(34) =< 16
aux(34) =< 19
s(110) =< -39*G+208
s(110) =< -13*G+65
s(113) =< -12*G+64
s(113) =< -4*G+20
it(89) =< -3*G+16
it(89) =< -G+5
aux(36) =< 5
aux(37) =< 6
aux(35) =< aux(36)
s(118) =< aux(36)
aux(35) =< aux(37)
s(119) =< aux(34)
s(120) =< aux(35)
s(130) =< s(120)*aux(35)
s(111) =< s(113)
s(112) =< s(111)*aux(36)

  with precondition: [F=5,O=3,3>=G,G>=1] 

* Chain [[89],94]: 1*it(89)+1*s(110)+2*s(111)+1*s(112)+1*s(131)+1*s(132)+4*s(133)+1*s(134)+1*s(135)+2*s(139)+0
  Such that:s(131) =< 3
s(135) =< 6
s(134) =< 19
s(132) =< 20
s(110) =< -52*G+208
s(110) =< -39*G+208
s(113) =< -12*G+64
it(89) =< -3*G+16
aux(42) =< 4
aux(43) =< 5
aux(44) =< 16
aux(45) =< -4*G+16
aux(41) =< aux(42)
s(131) =< aux(42)
aux(41) =< aux(43)
s(135) =< aux(43)
s(132) =< aux(44)
s(134) =< aux(44)
it(89) =< aux(45)
s(113) =< aux(45)
s(133) =< aux(41)
s(139) =< s(133)*aux(41)
s(111) =< s(113)
s(112) =< s(111)*aux(43)

  with precondition: [F=5,O=3,2>=G,G>=1] 

* Chain [[89],92]: 1*it(89)+1*s(110)+2*s(111)+1*s(112)+0
  Such that:s(106) =< 5
s(110) =< -13*G+56
s(113) =< -4*G+17
it(89) =< -G+5
s(111) =< s(113)
s(112) =< s(111)*s(106)

  with precondition: [F=5,O=4,P=1,Q=6,S=5,4>=G,G>=1] 

* Chain [98]: 53
  with precondition: [F=5,G=0,O=3] 

* Chain [97]: 0
  with precondition: [F=5,O=3] 

* Chain [96]: 0
  with precondition: [F=5,O=3,4>=G] 

* Chain [95]: 1*s(118)+4*s(119)+5*s(120)+1*s(129)+1*s(130)+0
  Such that:s(118) =< G
s(128) =< G+1
aux(34) =< -3*G+16
aux(35) =< -G+5
s(119) =< aux(34)
s(120) =< aux(35)
s(129) =< s(128)
s(130) =< s(120)*s(128)

  with precondition: [F=5,O=3,4>=G,G>=1] 

* Chain [94]: 1*s(131)+1*s(132)+3*s(133)+1*s(134)+1*s(135)+2*s(139)+1*s(140)+0
  Such that:s(132) =< -4*G+16
s(134) =< -3*G+16
s(135) =< -G+5
s(131) =< G
s(136) =< G+1
aux(41) =< -G+4
s(133) =< aux(41)
s(139) =< s(133)*s(136)
s(140) =< s(136)

  with precondition: [F=5,O=3,3>=G,G>=1] 

* Chain [93]: 6*s(92)+2*s(93)+0
  Such that:aux(25) =< -G+4
aux(26) =< -G+5
s(93) =< aux(25)
s(92) =< aux(26)

  with precondition: [F=5,O=3,0>=G+1] 

* Chain [92]: 0
  with precondition: [F=5,O=4,P=1,Q=H,R=I,S=J,G>=5] 

* Chain [91,[89],97]: 1*it(89)+1*s(110)+2*s(111)+1*s(112)+2*s(114)+1*s(117)+1
  Such that:s(116) =< 1
it(89) =< 4
s(113) =< 13
s(110) =< 43
aux(31) =< 5
s(111) =< s(113)
s(112) =< s(111)*aux(31)
s(114) =< aux(31)
s(117) =< s(114)*s(116)

  with precondition: [F=5,G=0,O=3] 

* Chain [91,[89],96]: 1*it(89)+1*s(110)+2*s(111)+1*s(112)+2*s(114)+1*s(117)+1
  Such that:s(116) =< 1
it(89) =< 3
s(113) =< 12
s(110) =< 39
aux(32) =< 5
s(111) =< s(113)
s(112) =< s(111)*aux(32)
s(114) =< aux(32)
s(117) =< s(114)*s(116)

  with precondition: [F=5,G=0,O=3] 

* Chain [91,[89],95]: 1*it(89)+1*s(110)+2*s(111)+1*s(112)+2*s(114)+1*s(117)+1*s(118)+4*s(119)+6*s(120)+1*s(130)+1
  Such that:s(116) =< 1
aux(37) =< 6
aux(34) =< 19
s(110) =< 52
aux(38) =< 4
aux(39) =< 5
aux(40) =< 16
it(89) =< aux(38)
s(118) =< aux(38)
aux(34) =< aux(40)
aux(35) =< aux(39)
s(118) =< aux(39)
aux(35) =< aux(37)
s(119) =< aux(34)
s(120) =< aux(35)
s(130) =< s(120)*aux(35)
s(111) =< aux(40)
s(112) =< s(111)*aux(39)
s(114) =< aux(39)
s(117) =< s(114)*s(116)

  with precondition: [F=5,G=0,O=3] 

* Chain [91,[89],94]: 1*it(89)+1*s(110)+2*s(111)+1*s(112)+2*s(114)+1*s(117)+1*s(131)+1*s(132)+4*s(133)+1*s(134)+1*s(135)+2*s(139)+1
  Such that:s(116) =< 1
s(131) =< 3
aux(42) =< 4
s(135) =< 6
aux(45) =< 12
it(89) =< 13
aux(44) =< 16
s(134) =< 19
s(132) =< 20
s(113) =< 52
s(110) =< 156
aux(46) =< 5
aux(41) =< aux(42)
s(131) =< aux(42)
aux(41) =< aux(46)
s(135) =< aux(46)
s(132) =< aux(44)
s(134) =< aux(44)
it(89) =< aux(45)
s(113) =< aux(45)
s(133) =< aux(41)
s(139) =< s(133)*aux(41)
s(111) =< s(113)
s(112) =< s(111)*aux(46)
s(114) =< aux(46)
s(117) =< s(114)*s(116)

  with precondition: [F=5,G=0,O=3] 

* Chain [91,[89],92]: 1*it(89)+1*s(110)+2*s(111)+1*s(112)+2*s(114)+1*s(117)+1
  Such that:s(116) =< 1
it(89) =< 4
s(113) =< 13
s(110) =< 43
aux(47) =< 5
s(111) =< s(113)
s(112) =< s(111)*aux(47)
s(114) =< aux(47)
s(117) =< s(114)*s(116)

  with precondition: [F=5,G=0,O=4,P=1,Q=6,S=5] 

* Chain [91,97]: 2*s(114)+1*s(117)+1
  Such that:s(116) =< 1
aux(30) =< 5
s(114) =< aux(30)
s(117) =< s(114)*s(116)

  with precondition: [F=5,G=0,O=3] 

* Chain [91,96]: 2*s(114)+1*s(117)+1
  Such that:s(116) =< 1
aux(30) =< 5
s(114) =< aux(30)
s(117) =< s(114)*s(116)

  with precondition: [F=5,G=0,O=3] 

* Chain [91,95]: 2*s(114)+1*s(117)+1*s(118)+4*s(119)+5*s(120)+1*s(129)+1*s(130)+1
  Such that:s(128) =< 2
aux(35) =< 4
aux(30) =< 5
aux(34) =< 13
aux(48) =< 1
s(118) =< aux(48)
s(119) =< aux(34)
s(120) =< aux(35)
s(129) =< s(128)
s(130) =< s(120)*s(128)
s(114) =< aux(30)
s(117) =< s(114)*aux(48)

  with precondition: [F=5,G=0,O=3] 

* Chain [91,94]: 2*s(114)+1*s(117)+1*s(131)+1*s(132)+3*s(133)+1*s(134)+1*s(135)+2*s(139)+1*s(140)+1
  Such that:s(136) =< 2
aux(41) =< 3
s(135) =< 4
aux(30) =< 5
s(132) =< 12
s(134) =< 13
aux(49) =< 1
s(131) =< aux(49)
s(133) =< aux(41)
s(139) =< s(133)*s(136)
s(140) =< s(136)
s(114) =< aux(30)
s(117) =< s(114)*aux(49)

  with precondition: [F=5,G=0,O=3] 


#### Cost of chains of f70(G,H,I,O,P,Q,R):
* Chain [[99],101]: 1*it(99)+0
  Such that:it(99) =< G-H

  with precondition: [O=3,5>=G,H>=0,G>=H+1] 

* Chain [[99],100]: 1*it(99)+0
  Such that:it(99) =< -H+P

  with precondition: [O=4,G+1=P,G=Q,5>=G,H>=0,G>=H+1] 

* Chain [101]: 0
  with precondition: [O=3,5>=G,H>=0] 

* Chain [100]: 0
  with precondition: [O=4,R=I,G+1=P,H=Q,5>=G,H>=0,H>=G] 


#### Cost of chains of f66(F,G,H,I,O,P,Q,R):
* Chain [[103],[102],107]: 1*it(102)+1*it(103)+1*s(407)+0
  Such that:it(102) =< 5
s(407) =< 30
it(103) =< -G+1

  with precondition: [F=5,O=2,P=4,Q=5,0>=G] 

* Chain [[103],[102],106]: 1*it(102)+1*it(103)+1*s(407)+0
  Such that:it(102) =< 5
s(407) =< 30
it(103) =< -G+1

  with precondition: [F=5,O=3,0>=G] 

* Chain [[103],[102],105]: 1*it(102)+1*it(103)+1*s(407)+0
  Such that:it(102) =< 4
s(407) =< 24
it(103) =< -G+1

  with precondition: [F=5,O=3,0>=G] 

* Chain [[103],[102],104]: 1*it(102)+1*it(103)+1*s(407)+1*s(408)+0
  Such that:it(102) =< 4
s(408) =< 5
s(407) =< 24
it(103) =< -G+1

  with precondition: [F=5,O=3,0>=G] 

* Chain [[103],106]: 1*it(103)+0
  Such that:it(103) =< -G+1

  with precondition: [F=5,O=3,0>=G] 

* Chain [[103],105]: 1*it(103)+0
  Such that:it(103) =< -G+1

  with precondition: [F=5,O=3,0>=G] 

* Chain [[103],104]: 1*it(103)+1*s(408)+0
  Such that:s(408) =< 1
it(103) =< -G+1

  with precondition: [F=5,O=3,0>=G] 

* Chain [[102],107]: 1*it(102)+1*s(407)+0
  Such that:s(407) =< -6*G+36
it(102) =< -G+6

  with precondition: [F=5,O=2,P=4,Q=5,5>=G,G>=1] 

* Chain [[102],106]: 1*it(102)+1*s(407)+0
  Such that:s(407) =< -6*G+36
it(102) =< -G+6

  with precondition: [F=5,O=3,5>=G,G>=1] 

* Chain [[102],105]: 1*it(102)+1*s(407)+0
  Such that:s(407) =< -6*G+30
it(102) =< -G+5

  with precondition: [F=5,O=3,4>=G,G>=1] 

* Chain [[102],104]: 1*it(102)+1*s(407)+1*s(408)+0
  Such that:s(408) =< 5
s(407) =< -6*G+30
it(102) =< -G+5

  with precondition: [F=5,O=3,4>=G,G>=1] 

* Chain [107]: 0
  with precondition: [F=5,O=2,P=4,Q=H,R=I,G>=6] 

* Chain [106]: 0
  with precondition: [F=5,O=3] 

* Chain [105]: 0
  with precondition: [F=5,O=3,5>=G] 

* Chain [104]: 1*s(408)+0
  Such that:s(408) =< G

  with precondition: [F=5,O=3,5>=G,G>=1] 


#### Cost of chains of f84(F,G,H,I,O,P,Q,R):
* Chain [[108],110]: 1*it(108)+0
  Such that:it(108) =< -H+6

  with precondition: [F=5,O=2,Q=6,G=P+1,5>=H,G>=0,H>=G+1] 

* Chain [[108],109]: 1*it(108)+0
  Such that:it(108) =< -H+6

  with precondition: [F=5,O=3,5>=H,G>=0,H>=G+1] 

* Chain [110]: 0
  with precondition: [F=5,O=2,R=I,G=P+1,H=Q,G>=0,H>=6,H>=G+1] 

* Chain [109]: 0
  with precondition: [F=5,O=3,G>=0,H>=G+1] 


#### Cost of chains of f80(F,G,H,I,K,L,O,P,Q,R,S,T):
* Chain [[112],116]: 1*it(112)+1*s(433)+0
  Such that:it(112) =< G+1
s(433) =< 5*G+5

  with precondition: [F=5,O=3,4>=G,G>=0] 

* Chain [[112],115]: 1*it(112)+1*s(433)+1*s(434)+0
  Such that:s(434) =< 5
it(112) =< G
s(433) =< 5*G

  with precondition: [F=5,O=3,4>=G,G>=1] 

* Chain [[112],114]: 1*it(112)+1*s(433)+0
  Such that:it(112) =< G
s(433) =< 5*G

  with precondition: [F=5,O=3,4>=G,G>=1] 

* Chain [[112],113]: 1*it(112)+1*s(433)+0
  Such that:it(112) =< G+1
s(433) =< 5*G+5

  with precondition: [F=5,O=9,P+1=0,Q=6,S=0,T=0,4>=G,G>=0] 

* Chain [[111],[112],116]: 1*it(111)+1*it(112)+1*s(433)+0
  Such that:it(112) =< 5
s(433) =< 25
it(111) =< G

  with precondition: [F=5,O=3,G>=5] 

* Chain [[111],[112],115]: 1*it(111)+1*it(112)+1*s(433)+1*s(434)+0
  Such that:it(112) =< 4
s(434) =< 5
s(433) =< 20
it(111) =< G

  with precondition: [F=5,O=3,G>=5] 

* Chain [[111],[112],114]: 1*it(111)+1*it(112)+1*s(433)+0
  Such that:it(112) =< 4
s(433) =< 20
it(111) =< G

  with precondition: [F=5,O=3,G>=5] 

* Chain [[111],[112],113]: 1*it(111)+1*it(112)+1*s(433)+0
  Such that:it(112) =< 5
s(433) =< 25
it(111) =< G

  with precondition: [F=5,O=9,P+1=0,Q=6,S=0,T=0,G>=5] 

* Chain [[111],116]: 1*it(111)+0
  Such that:it(111) =< G

  with precondition: [F=5,O=3,G>=5] 

* Chain [[111],115]: 1*it(111)+1*s(434)+0
  Such that:s(434) =< 1
it(111) =< G

  with precondition: [F=5,O=3,G>=5] 

* Chain [[111],114]: 1*it(111)+0
  Such that:it(111) =< G

  with precondition: [F=5,O=3,G>=5] 

* Chain [116]: 0
  with precondition: [F=5,O=3] 

* Chain [115]: 1*s(434)+0
  Such that:s(434) =< -G+5

  with precondition: [F=5,O=3,4>=G,G>=0] 

* Chain [114]: 0
  with precondition: [F=5,O=3,G>=0] 

* Chain [113]: 0
  with precondition: [F=5,O=9,S=0,T=0,Q=H,R=I,G=P,0>=G+1] 


#### Cost of chains of f80_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O):
* Chain [118]: 0
  with precondition: [A=3,B=50,C=5,G=5,N=50] 

* Chain [117]: 0
  with precondition: [A=9,B=50,C=5,G=5,N=50] 


#### Cost of chains of f66_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O):
* Chain [125]: 0
  with precondition: [A=2,B=50,C=5,G=5,N=50] 

* Chain [124]: 1*s(457)+2*s(458)+2*s(459)+0
  Such that:s(457) =< -H+5
aux(92) =< H+1
aux(93) =< 5*H+5
s(458) =< aux(92)
s(459) =< aux(93)

  with precondition: [A=2,B=50,C=5,G=5,N=50,4>=H,H>=0] 

* Chain [123]: 1*s(462)+2*s(465)+2*s(466)+0
  Such that:s(462) =< 5
s(463) =< H
s(464) =< 5*H
s(465) =< s(463)
s(466) =< s(464)

  with precondition: [A=2,B=50,C=5,G=5,N=50,4>=H,H>=1] 

* Chain [122]: 0
  with precondition: [A=2,B=50,C=5,G=5,N=50,0>=H+1] 

* Chain [121]: 0
  with precondition: [A=2,B=50,C=5,G=5,N=50,H>=0] 

* Chain [120]: 1*s(467)+2*s(468)+2*s(473)+3*s(474)+2*s(475)+7*s(476)+0
  Such that:s(467) =< 1
s(469) =< 4
s(471) =< 20
aux(94) =< 5
aux(95) =< 25
aux(96) =< H
s(474) =< aux(94)
s(468) =< aux(95)
s(476) =< aux(96)
s(473) =< s(469)
s(475) =< s(471)

  with precondition: [A=2,B=50,C=5,G=5,N=50,H>=5] 

* Chain [119]: 0
  with precondition: [A=3,B=50,C=5,G=5,N=50] 


#### Cost of chains of f33_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O):
* Chain [132]: 0
  with precondition: [A=3,B=50,C=5,G=5,N=50] 

* Chain [131]: 0
  with precondition: [A=4,B=50,C=5,G=5,N=50] 

* Chain [130]: 0
  with precondition: [A=4,B=50,C=5,G=5,N=50,5>=H] 

* Chain [129]: 5*s(480)+5*s(481)+1*s(484)+3*s(487)+2*s(488)+2*s(494)+2*s(495)+1*s(500)+0
  Such that:s(484) =< 1
s(492) =< 4
s(493) =< 20
s(486) =< 25
s(500) =< H
aux(97) =< 5
aux(98) =< -6*H+36
aux(99) =< -H+6
s(487) =< aux(97)
s(480) =< aux(98)
s(481) =< aux(99)
s(488) =< s(486)
s(494) =< s(492)
s(495) =< s(493)

  with precondition: [A=4,B=50,C=5,G=5,N=50,5>=H,H>=1] 

* Chain [128]: 1*s(501)+2*s(504)+2*s(505)+0
  Such that:s(501) =< 5
s(502) =< -6*H+30
s(503) =< -H+5
s(504) =< s(502)
s(505) =< s(503)

  with precondition: [A=4,B=50,C=5,G=5,N=50,4>=H,H>=1] 

* Chain [127]: 9*s(506)+5*s(507)+10*s(508)+2*s(512)+2*s(516)+4*s(523)+2*s(524)+2*s(536)+0
  Such that:s(522) =< 20
s(532) =< 24
s(514) =< 25
aux(102) =< 1
aux(103) =< 4
aux(104) =< 5
aux(105) =< 30
aux(106) =< -H+1
s(512) =< aux(102)
s(506) =< aux(104)
s(507) =< aux(105)
s(508) =< aux(106)
s(516) =< s(514)
s(523) =< aux(103)
s(536) =< s(532)
s(524) =< s(522)

  with precondition: [A=4,B=50,C=5,G=5,N=50,0>=H] 

* Chain [126]: 114
  with precondition: [A=4,B=50,C=5,G=5,N=50,H>=6] 


#### Cost of chains of f15_loop_cont(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O):
* Chain [142]: 0
  with precondition: [A=3,B=50,C=5,G=5,N=50] 

* Chain [141]: 2468
  with precondition: [A=7,B=50,C=5,G=5,H=0,N=50] 

* Chain [140]: 0
  with precondition: [A=7,B=50,C=5,G=5,N=50] 

* Chain [139]: 0
  with precondition: [A=7,B=50,C=5,G=5,N=50,4>=H] 

* Chain [138]: 5*s(604)+1*s(607)+10*s(610)+10*s(611)+5*s(612)+4*s(613)+1*s(614)+1*s(615)+2*s(634)+9*s(642)+5*s(643)+2*s(645)+4*s(646)+2*s(647)+2*s(657)+0
  Such that:aux(118) =< 1
s(636) =< 20
s(655) =< 24
s(637) =< 25
s(640) =< 30
s(606) =< -3*H+16
s(607) =< H
s(608) =< H+1
aux(121) =< 4
aux(122) =< 5
aux(123) =< -13*H+56
aux(124) =< -4*H+17
aux(125) =< -H+5
s(604) =< aux(123)
s(610) =< aux(125)
s(634) =< aux(118)
s(642) =< aux(122)
s(643) =< s(640)
s(645) =< s(637)
s(646) =< aux(121)
s(647) =< s(636)
s(611) =< aux(124)
s(612) =< s(611)*aux(122)
s(657) =< s(655)
s(613) =< s(606)
s(614) =< s(608)
s(615) =< s(610)*s(608)

  with precondition: [A=7,B=50,C=5,G=5,N=50,4>=H,H>=1] 

* Chain [137]: 1*s(659)+1*s(662)+1*s(663)+1*s(665)+3*s(672)+1*s(673)+1*s(674)+4*s(675)+1*s(676)+4*s(678)+6*s(679)+1*s(680)+2*s(681)+1*s(682)+1*s(683)+2*s(684)+1*s(685)+0
  Such that:s(659) =< 4
s(667) =< 5
s(660) =< 6
s(661) =< 16
s(661) =< 19
s(663) =< -13*H+52
s(662) =< -13*H+65
s(668) =< -4*H+16
s(664) =< -4*H+20
s(669) =< -3*H+16
s(670) =< -H+4
s(671) =< -H+5
s(665) =< H
s(666) =< H+1
s(672) =< s(668)
s(673) =< s(669)
s(674) =< s(669)
s(675) =< s(670)
s(676) =< s(671)
s(674) =< s(671)
s(677) =< s(667)
s(659) =< s(667)
s(677) =< s(660)
s(678) =< s(661)
s(679) =< s(677)
s(680) =< s(679)*s(677)
s(681) =< s(664)
s(682) =< s(681)*s(667)
s(683) =< s(672)*s(667)
s(684) =< s(675)*s(666)
s(685) =< s(666)

  with precondition: [A=7,B=50,C=5,G=5,N=50,3>=H,H>=1] 

* Chain [136]: 1*s(686)+1*s(687)+1*s(688)+1*s(689)+1*s(690)+1*s(692)+4*s(698)+2*s(699)+2*s(700)+1*s(701)+0
  Such that:s(686) =< 3
s(693) =< 4
s(694) =< 5
s(687) =< 6
s(695) =< 16
s(688) =< 19
s(689) =< 20
s(690) =< -52*H+208
s(691) =< -12*H+64
s(696) =< -4*H+16
s(692) =< -3*H+16
s(697) =< s(693)
s(686) =< s(693)
s(697) =< s(694)
s(687) =< s(694)
s(689) =< s(695)
s(688) =< s(695)
s(692) =< s(696)
s(691) =< s(696)
s(698) =< s(697)
s(699) =< s(698)*s(697)
s(700) =< s(691)
s(701) =< s(700)*s(694)

  with precondition: [A=7,B=50,C=5,G=5,N=50,2>=H,H>=1] 

* Chain [135]: 1*s(702)+1*s(703)+5*s(704)+1*s(705)+1*s(720)+4*s(721)+16*s(722)+1*s(723)+3*s(724)+15*s(725)+1*s(726)+1*s(727)+1*s(730)+15*s(731)+4*s(732)+2*s(733)+2*s(734)+33*s(735)+12*s(736)+22*s(738)+1*s(739)+4*s(741)+2*s(742)+2*s(743)+1*s(744)+1*s(745)+4*s(747)+6*s(748)+1*s(749)+2*s(750)+1*s(751)+1*s(752)+5*s(753)+2*s(754)+6*s(755)+8*s(768)+5*s(804)+2*s(806)+2*s(808)+2*s(825)+53
  Such that:s(708) =< 2
s(709) =< 3
s(712) =< 6
s(713) =< 12
s(715) =< 16
s(716) =< 19
s(823) =< 24
s(798) =< 25
s(801) =< 30
s(703) =< 39
s(717) =< 52
s(705) =< 156
s(706) =< -H+4
aux(131) =< 1
aux(132) =< 4
aux(133) =< 5
aux(134) =< 13
aux(135) =< 20
aux(136) =< 43
aux(137) =< -H
aux(138) =< -H+5
s(722) =< aux(132)
s(702) =< aux(135)
s(704) =< aux(136)
s(731) =< aux(137)
s(720) =< s(709)
s(721) =< s(709)
s(723) =< s(712)
s(724) =< s(713)
s(725) =< aux(134)
s(726) =< aux(134)
s(727) =< s(716)
s(728) =< s(716)
s(729) =< s(717)
s(730) =< s(717)
s(732) =< aux(131)
s(733) =< s(721)*s(708)
s(734) =< s(708)
s(735) =< aux(133)
s(736) =< s(735)*aux(131)
s(737) =< s(731)*aux(138)
s(738) =< s(737)
s(739) =< s(722)*s(708)
s(740) =< aux(132)
s(720) =< aux(132)
s(740) =< aux(133)
s(723) =< aux(133)
s(702) =< s(715)
s(727) =< s(715)
s(726) =< s(713)
s(729) =< s(713)
s(741) =< s(740)
s(742) =< s(741)*s(740)
s(743) =< s(729)
s(744) =< s(743)*aux(133)
s(745) =< aux(132)
s(728) =< s(715)
s(746) =< aux(133)
s(745) =< aux(133)
s(746) =< s(712)
s(747) =< s(728)
s(748) =< s(746)
s(749) =< s(748)*s(746)
s(750) =< s(715)
s(751) =< s(750)*aux(133)
s(752) =< s(724)*aux(133)
s(753) =< s(725)*aux(133)
s(754) =< s(706)
s(755) =< aux(138)
s(767) =< s(731)*aux(138)
s(768) =< s(767)
s(825) =< s(823)
s(804) =< s(801)
s(806) =< s(798)
s(808) =< aux(135)

  with precondition: [A=7,B=50,C=5,G=5,N=50,0>=H+1] 

* Chain [134]: 1*s(831)+2*s(832)+6*s(833)+2*s(835)+0
  Such that:s(827) =< -H+3
s(828) =< -H+4
s(829) =< -H+5
s(827) =< s(828)
s(830) =< s(828)
s(831) =< s(828)
s(830) =< s(829)
s(831) =< s(829)
s(832) =< s(827)
s(833) =< s(830)
s(834) =< s(831)*s(829)
s(835) =< s(834)

  with precondition: [A=7,B=50,C=5,G=5,N=50,0>=H+2] 

* Chain [133]: 351
  with precondition: [A=7,B=50,C=5,G=5,N=50,H>=5] 


#### Cost of chains of f0(A,B,C,D,E,F,G,H,I,J,K,L,M,O):
* Chain [143]: 2625
  with precondition: [] 


Closed-form bounds of f0(A,B,C,D,E,F,G,H,I,J,K,L,M,O): 
-------------------------------------
* Chain [143] with precondition: [] 
    - Upper bound: 2625 
    - Complexity: constant 

### Maximum cost of f0(A,B,C,D,E,F,G,H,I,J,K,L,M,O): 2625 
Asymptotic class: constant 
* Total analysis performed in 1347 ms.

