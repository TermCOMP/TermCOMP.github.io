WORST_CASE(Omega(n^1),O(n^1))

# LoAT Proof:
WORST_CASE(Omega(n^1),?)

WORST_CASE(Omega(n^1),?)
Initial ITS

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_4 -> 7
eval_start_5 -> 8
eval_start_6 -> 9
eval_start_bb1_in -> 10
eval_start_bb2_in -> 11
eval_start_bb3_in -> 12
eval_start_stop -> 13

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: -2+i1 == 0 /\ i1'=3, i3'=1+i3
   2: -3+i1 == 0 /\ i1'=4, i3'=1+i3
   3: -4+i1 == 0 /\ i1'=5, i3'=1+i3
   4: -5+i1 == 0 /\ i1'=6, i3'=1+i3
   5: -6+i1 == 0 /\ i1'=7, i3'=1+i3
   6: -7+i1 == 0 /\ i1'=8, i3'=1+i3
   7: -8+i1 == 0 /\ i1'=9, i3'=1+i3
   8: -9+i1 == 0 /\ i1'=10, i3'=1+i3, i4'=i8, i5'=i9
   9: (i7-i4 > 0 /\ -10+i1 == 0) /\ i1'=11, i3'=1+i3
  10: (i7-i4 <= 0 /\ -10+i1 == 0) /\ i1'=12, i3'=1+i3
  11: (-11+i1 == 0 /\ i6-i5 > 0) /\ i1'=10, i3'=1+i3, i5'=1+i5
  12: (-11+i1 == 0 /\ i6-i5 <= 0 /\ i6-i5 > 0) /\ i1'=10, i3'=1+i3, i4'=1+i4, i5'=1+i5
  13: (-11+i1 == 0 /\ i6-i5 <= 0 /\ i6-i5 > 0) /\ i1'=10, i3'=1+i3
  14: (-11+i1 == 0 /\ i6-i5 <= 0) /\ i1'=10, i3'=1+i3, i4'=1+i4
  15: -12+i1 == 0 /\ i1'=13, i3'=1+i3

Dependency graph:
0 -> 1
1 -> 2
2 -> 3
3 -> 4
4 -> 5
5 -> 6
6 -> 7
7 -> 8
8 -> 9, 8 -> 10
9 -> 11, 9 -> 12, 9 -> 13, 9 -> 14
10 -> 15
11 -> 9, 11 -> 10
12 -> 9, 12 -> 10
13 -> 9, 13 -> 10
14 -> 9, 14 -> 10

Chained Linear Paths

	Applied Chaining

	First rule:
	-1+i1 == 0 /\ i1'=2, i3'=1+i3
	Second rule:
	-2+i1 == 0 /\ i1'=3, i3'=1+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 0, 1
	
	Applied Chaining

	First rule:
	-3+i1 == 0 /\ i1'=4, i3'=1+i3
	Second rule:
	-4+i1 == 0 /\ i1'=5, i3'=1+i3
	New rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 2, 3
	
	Applied Chaining

	First rule:
	-5+i1 == 0 /\ i1'=6, i3'=1+i3
	Second rule:
	-6+i1 == 0 /\ i1'=7, i3'=1+i3
	New rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=7, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 4, 5
	
	Applied Chaining

	First rule:
	-7+i1 == 0 /\ i1'=8, i3'=1+i3
	Second rule:
	-8+i1 == 0 /\ i1'=9, i3'=1+i3
	New rule:
	(0 == 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 6, 7
	
	Applied Chaining

	First rule:
	(i7-i4 <= 0 /\ -10+i1 == 0) /\ i1'=12, i3'=1+i3
	Second rule:
	-12+i1 == 0 /\ i1'=13, i3'=1+i3
	New rule:
	(0 == 0 /\ i7-i4 <= 0 /\ -10+i1 == 0) /\ i1'=13, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 10, 15
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	Second rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	
	Applied Deletion

	Removed the following rules: 16, 17
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=7, i3'=2+i3
	Second rule:
	(0 == 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
	New rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=9, i3'=4+i3
	
	Applied Deletion

	Removed the following rules: 18, 19
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	Second rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=9, i3'=4+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=9, i3'=8+i3
	
	Applied Deletion

	Removed the following rules: 21, 22
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=9, i3'=8+i3
	Second rule:
	-9+i1 == 0 /\ i1'=10, i3'=1+i3, i4'=i8, i5'=i9
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=10, i3'=9+i3, i4'=i8, i5'=i9
	
	Applied Deletion

	Removed the following rules: 8, 23

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_4 -> 7
eval_start_5 -> 8
eval_start_6 -> 9
eval_start_bb1_in -> 10
eval_start_bb2_in -> 11
eval_start_bb3_in -> 12
eval_start_stop -> 13

Rules:
   9: (i7-i4 > 0 /\ -10+i1 == 0) /\ i1'=11, i3'=1+i3
  11: (-11+i1 == 0 /\ i6-i5 > 0) /\ i1'=10, i3'=1+i3, i5'=1+i5
  12: (-11+i1 == 0 /\ i6-i5 <= 0 /\ i6-i5 > 0) /\ i1'=10, i3'=1+i3, i4'=1+i4, i5'=1+i5
  13: (-11+i1 == 0 /\ i6-i5 <= 0 /\ i6-i5 > 0) /\ i1'=10, i3'=1+i3
  14: (-11+i1 == 0 /\ i6-i5 <= 0) /\ i1'=10, i3'=1+i3, i4'=1+i4
  20: (0 == 0 /\ i7-i4 <= 0 /\ -10+i1 == 0) /\ i1'=13, i3'=2+i3
  24: (0 == 0 /\ -1+i1 == 0) /\ i1'=10, i3'=9+i3, i4'=i8, i5'=i9

Dependency graph:
9 -> 11, 9 -> 12, 9 -> 13, 9 -> 14
11 -> 9, 11 -> 20
12 -> 9, 12 -> 20
13 -> 9, 13 -> 20
14 -> 9, 14 -> 20
24 -> 9, 24 -> 20

Preprocessed Transitions

	Simplified Guard

	Original rule:
	(0 == 0 /\ i7-i4 <= 0 /\ -10+i1 == 0) /\ i1'=13, i3'=2+i3
	New rule:
	(i7-i4 <= 0 /\ -10+i1 == 0) /\ i1'=13, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=10, i3'=9+i3, i4'=i8, i5'=i9
	New rule:
	-1+i1 == 0 /\ i1'=10, i3'=9+i3, i4'=i8, i5'=i9

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_4 -> 7
eval_start_5 -> 8
eval_start_6 -> 9
eval_start_bb1_in -> 10
eval_start_bb2_in -> 11
eval_start_bb3_in -> 12
eval_start_stop -> 13

Rules:
   9: (i7-i4 > 0 /\ -10+i1 == 0) /\ i1'=11, i3'=1+i3
  11: (-11+i1 == 0 /\ i6-i5 > 0) /\ i1'=10, i3'=1+i3, i5'=1+i5
  12: (-11+i1 == 0 /\ i6-i5 <= 0 /\ i6-i5 > 0) /\ i1'=10, i3'=1+i3, i4'=1+i4, i5'=1+i5
  13: (-11+i1 == 0 /\ i6-i5 <= 0 /\ i6-i5 > 0) /\ i1'=10, i3'=1+i3
  14: (-11+i1 == 0 /\ i6-i5 <= 0) /\ i1'=10, i3'=1+i3, i4'=1+i4
  25: (i7-i4 <= 0 /\ -10+i1 == 0) /\ i1'=13, i3'=2+i3
  26: -1+i1 == 0 /\ i1'=10, i3'=9+i3, i4'=i8, i5'=i9

Dependency graph:
9 -> 11, 9 -> 12, 9 -> 13, 9 -> 14
11 -> 9, 11 -> 25
12 -> 9, 12 -> 25
13 -> 9, 13 -> 25
14 -> 9, 14 -> 25
26 -> 9, 26 -> 25

Refined Dependency Graph

	Removed the following edges: 9 -> 12, 9 -> 13, 12 -> 9, 12 -> 25, 13 -> 9, 13 -> 25

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_4 -> 7
eval_start_5 -> 8
eval_start_6 -> 9
eval_start_bb1_in -> 10
eval_start_bb2_in -> 11
eval_start_bb3_in -> 12
eval_start_stop -> 13

Rules:
   9: (i7-i4 > 0 /\ -10+i1 == 0) /\ i1'=11, i3'=1+i3
  11: (-11+i1 == 0 /\ i6-i5 > 0) /\ i1'=10, i3'=1+i3, i5'=1+i5
  12: (-11+i1 == 0 /\ i6-i5 <= 0 /\ i6-i5 > 0) /\ i1'=10, i3'=1+i3, i4'=1+i4, i5'=1+i5
  13: (-11+i1 == 0 /\ i6-i5 <= 0 /\ i6-i5 > 0) /\ i1'=10, i3'=1+i3
  14: (-11+i1 == 0 /\ i6-i5 <= 0) /\ i1'=10, i3'=1+i3, i4'=1+i4
  25: (i7-i4 <= 0 /\ -10+i1 == 0) /\ i1'=13, i3'=2+i3
  26: -1+i1 == 0 /\ i1'=10, i3'=9+i3, i4'=i8, i5'=i9

Dependency graph:
9 -> 11, 9 -> 14
11 -> 9, 11 -> 25
14 -> 9, 14 -> 25
26 -> 9, 26 -> 25

Step with 26

	Trace

	26[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 25

	Trace

	26[(-1+i1 == 0)]
	25[(i7-i4 <= 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{}
	{}
	
Backtrack

	Trace

	26[(-1+i1 == 0)]
	
	Blocked

	{}
	{25[T]}
	
Step with 9

	Trace

	26[(-1+i1 == 0)]
	9[(i7-i4 > 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{25[T]}
	{}
	
Step with 11

	Trace

	26[(-1+i1 == 0)]
	9[(i7-i4 > 0 /\ -10+i1 == 0)]
	11[(-11+i1 == 0 /\ i6-i5 > 0)]
	
	Blocked

	{}
	{25[T]}
	{}
	{}
	
Poly(n^1)

Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ i7-i4 > 0 /\ -10+i1 == 0 /\ i6-i5 > 0) /\ i1'=10, i3'=2+i3, i5'=1+i5
		New rule:
		(i7-i4 > 0 /\ -10+i1 == 0 /\ i6-i5 > 0) /\ i1'=10, i3'=2+i3, i5'=1+i5

	Loop Acceleration

	Original rule:
	(i7-i4 > 0 /\ -10+i1 == 0 /\ i6-i5 > 0) /\ i1'=10, i3'=2+i3, i5'=1+i5
	New rule:
	(1+i6-it33-i5 > 0 /\ i7-i4 > 0 /\ 10-i1 >= 0 /\ -10+i1 >= 0 /\ -1+it33 >= 0) /\ i1'=i1, i3'=i3+2*it33, i5'=it33+i5

		i7-i4 > 0 [0]: unchanged
		
		10-i1 >= 0 [0]: unchanged
		
		-10+i1 >= 0 [0]: unchanged
		
		i6-i5 > 0 [0]: montonic decrease yields 1+i6-it33-i5 > 0
		
		Replacement map: {i7-i4 > 0 -> i7-i4 > 0, 10-i1 >= 0 -> 10-i1 >= 0, -10+i1 >= 0 -> -10+i1 >= 0, i6-i5 > 0 -> 1+i6-it33-i5 > 0}

	Removed Trivial Updates

	Original rule:
	(1+i6-it33-i5 > 0 /\ i7-i4 > 0 /\ 10-i1 >= 0 /\ -10+i1 >= 0 /\ -1+it33 >= 0) /\ i1'=i1, i3'=i3+2*it33, i5'=it33+i5
	New rule:
	(1+i6-it33-i5 > 0 /\ i7-i4 > 0 /\ 10-i1 >= 0 /\ -10+i1 >= 0 /\ -1+it33 >= 0) /\ i3'=i3+2*it33, i5'=it33+i5
	
	Instantiation

	Original rule:
	(1+i6-it33-i5 > 0 /\ i7-i4 > 0 /\ 10-i1 >= 0 /\ -10+i1 >= 0 /\ -1+it33 >= 0) /\ i3'=i3+2*it33, i5'=it33+i5
	New rule:
	(1 > 0 /\ i7-i4 > 0 /\ -1+i6-i5 >= 0 /\ 10-i1 >= 0 /\ -10+i1 >= 0) /\ i3'=2*i6+i3-2*i5, i5'=i6

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_4 -> 7
eval_start_5 -> 8
eval_start_6 -> 9
eval_start_bb1_in -> 10
eval_start_bb2_in -> 11
eval_start_bb3_in -> 12
eval_start_stop -> 13

Rules:
   9: (i7-i4 > 0 /\ -10+i1 == 0) /\ i1'=11, i3'=1+i3
  11: (-11+i1 == 0 /\ i6-i5 > 0) /\ i1'=10, i3'=1+i3, i5'=1+i5
  12: (-11+i1 == 0 /\ i6-i5 <= 0 /\ i6-i5 > 0) /\ i1'=10, i3'=1+i3, i4'=1+i4, i5'=1+i5
  13: (-11+i1 == 0 /\ i6-i5 <= 0 /\ i6-i5 > 0) /\ i1'=10, i3'=1+i3
  14: (-11+i1 == 0 /\ i6-i5 <= 0) /\ i1'=10, i3'=1+i3, i4'=1+i4
  25: (i7-i4 <= 0 /\ -10+i1 == 0) /\ i1'=13, i3'=2+i3
  26: -1+i1 == 0 /\ i1'=10, i3'=9+i3, i4'=i8, i5'=i9
  27: (1 > 0 /\ i7-i4 > 0 /\ -1+i6-i5 >= 0 /\ 10-i1 >= 0 /\ -10+i1 >= 0) /\ i3'=2*i6+i3-2*i5, i5'=i6

Dependency graph:
9 -> 11, 9 -> 14
11 -> 9, 11 -> 25, 11 -> 27
14 -> 9, 14 -> 25, 14 -> 27
26 -> 9, 26 -> 25, 26 -> 27
27 -> 9, 27 -> 25

	Trace

	26[(-1+i1 == 0)]
	27[(1 > 0 /\ i7-i4 > 0 /\ -1+i6-i5 >= 0 /\ 10-i1 >= 0 /\ -10+i1 >= 0)]
	
	Blocked

	{}
	{25[T]}
	{27[T]}
	
Step with 9

	Trace

	26[(-1+i1 == 0)]
	27[(1 > 0 /\ i7-i4 > 0 /\ -1+i6-i5 >= 0 /\ 10-i1 >= 0 /\ -10+i1 >= 0)]
	9[(i7-i4 > 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{25[T]}
	{25[T], 27[T]}
	{}
	
Step with 14

	Trace

	26[(-1+i1 == 0)]
	27[(1 > 0 /\ i7-i4 > 0 /\ -1+i6-i5 >= 0 /\ 10-i1 >= 0 /\ -10+i1 >= 0)]
	9[(i7-i4 > 0 /\ -10+i1 == 0)]
	14[(-11+i1 == 0 /\ i6-i5 <= 0)]
	
	Blocked

	{}
	{25[T]}
	{25[T], 27[T]}
	{11[T]}
	{}
	
Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ i7-i4 > 0 /\ -10+i1 == 0 /\ i6-i5 <= 0) /\ i1'=10, i3'=2+i3, i4'=1+i4
		New rule:
		(i7-i4 > 0 /\ -10+i1 == 0 /\ i6-i5 <= 0) /\ i1'=10, i3'=2+i3, i4'=1+i4

	Loop Acceleration

	Original rule:
	(i7-i4 > 0 /\ -10+i1 == 0 /\ i6-i5 <= 0) /\ i1'=10, i3'=2+i3, i4'=1+i4
	New rule:
	(10-i1 >= 0 /\ 1-it70+i7-i4 > 0 /\ -10+i1 >= 0 /\ -i6+i5 >= 0 /\ -1+it70 >= 0) /\ i1'=i1, i3'=2*it70+i3, i4'=it70+i4

		i7-i4 > 0 [0]: montonic decrease yields 1-it70+i7-i4 > 0
		
		10-i1 >= 0 [0]: unchanged
		
		-10+i1 >= 0 [0]: unchanged
		
		-i6+i5 >= 0 [0]: unchanged
		
		Replacement map: {i7-i4 > 0 -> 1-it70+i7-i4 > 0, 10-i1 >= 0 -> 10-i1 >= 0, -10+i1 >= 0 -> -10+i1 >= 0, -i6+i5 >= 0 -> -i6+i5 >= 0}

	Removed Trivial Updates

	Original rule:
	(10-i1 >= 0 /\ 1-it70+i7-i4 > 0 /\ -10+i1 >= 0 /\ -i6+i5 >= 0 /\ -1+it70 >= 0) /\ i1'=i1, i3'=2*it70+i3, i4'=it70+i4
	New rule:
	(10-i1 >= 0 /\ 1-it70+i7-i4 > 0 /\ -10+i1 >= 0 /\ -i6+i5 >= 0 /\ -1+it70 >= 0) /\ i3'=2*it70+i3, i4'=it70+i4
	
	Instantiation

	Original rule:
	(10-i1 >= 0 /\ 1-it70+i7-i4 > 0 /\ -10+i1 >= 0 /\ -i6+i5 >= 0 /\ -1+it70 >= 0) /\ i3'=2*it70+i3, i4'=it70+i4
	New rule:
	(1 > 0 /\ 10-i1 >= 0 /\ -10+i1 >= 0 /\ -i6+i5 >= 0 /\ -1+i7-i4 >= 0) /\ i3'=i3+2*i7-2*i4, i4'=i7

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_4 -> 7
eval_start_5 -> 8
eval_start_6 -> 9
eval_start_bb1_in -> 10
eval_start_bb2_in -> 11
eval_start_bb3_in -> 12
eval_start_stop -> 13

Rules:
   9: (i7-i4 > 0 /\ -10+i1 == 0) /\ i1'=11, i3'=1+i3
  11: (-11+i1 == 0 /\ i6-i5 > 0) /\ i1'=10, i3'=1+i3, i5'=1+i5
  12: (-11+i1 == 0 /\ i6-i5 <= 0 /\ i6-i5 > 0) /\ i1'=10, i3'=1+i3, i4'=1+i4, i5'=1+i5
  13: (-11+i1 == 0 /\ i6-i5 <= 0 /\ i6-i5 > 0) /\ i1'=10, i3'=1+i3
  14: (-11+i1 == 0 /\ i6-i5 <= 0) /\ i1'=10, i3'=1+i3, i4'=1+i4
  25: (i7-i4 <= 0 /\ -10+i1 == 0) /\ i1'=13, i3'=2+i3
  26: -1+i1 == 0 /\ i1'=10, i3'=9+i3, i4'=i8, i5'=i9
  27: (1 > 0 /\ i7-i4 > 0 /\ -1+i6-i5 >= 0 /\ 10-i1 >= 0 /\ -10+i1 >= 0) /\ i3'=2*i6+i3-2*i5, i5'=i6
  28: (1 > 0 /\ 10-i1 >= 0 /\ -10+i1 >= 0 /\ -i6+i5 >= 0 /\ -1+i7-i4 >= 0) /\ i3'=i3+2*i7-2*i4, i4'=i7

Dependency graph:
9 -> 11, 9 -> 14
11 -> 9, 11 -> 25, 11 -> 27, 11 -> 28
14 -> 9, 14 -> 25, 14 -> 27, 14 -> 28
26 -> 9, 26 -> 25, 26 -> 27, 26 -> 28
27 -> 9, 27 -> 25, 27 -> 28
28 -> 9, 28 -> 25, 28 -> 27

	Trace

	26[(-1+i1 == 0)]
	27[(1 > 0 /\ i7-i4 > 0 /\ -1+i6-i5 >= 0 /\ 10-i1 >= 0 /\ -10+i1 >= 0)]
	28[(1 > 0 /\ 10-i1 >= 0 /\ -10+i1 >= 0 /\ -i6+i5 >= 0 /\ -1+i7-i4 >= 0)]
	
	Blocked

	{}
	{25[T]}
	{25[T], 27[T]}
	{28[T]}
	
Step with 25

	Trace

	26[(-1+i1 == 0)]
	27[(1 > 0 /\ i7-i4 > 0 /\ -1+i6-i5 >= 0 /\ 10-i1 >= 0 /\ -10+i1 >= 0)]
	28[(1 > 0 /\ 10-i1 >= 0 /\ -10+i1 >= 0 /\ -i6+i5 >= 0 /\ -1+i7-i4 >= 0)]
	25[(i7-i4 <= 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{25[T]}
	{25[T], 27[T]}
	{28[T]}
	{}
	
Backtrack

	Trace

	26[(-1+i1 == 0)]
	27[(1 > 0 /\ i7-i4 > 0 /\ -1+i6-i5 >= 0 /\ 10-i1 >= 0 /\ -10+i1 >= 0)]
	28[(1 > 0 /\ 10-i1 >= 0 /\ -10+i1 >= 0 /\ -i6+i5 >= 0 /\ -1+i7-i4 >= 0)]
	
	Blocked

	{}
	{25[T]}
	{25[T], 27[T]}
	{25[T], 28[T]}
	
Backtrack

	Trace

	26[(-1+i1 == 0)]
	27[(1 > 0 /\ i7-i4 > 0 /\ -1+i6-i5 >= 0 /\ 10-i1 >= 0 /\ -10+i1 >= 0)]
	
	Blocked

	{}
	{25[T]}
	{25[T], 27[T], 28[T]}
	
Step with 9

	Trace

	26[(-1+i1 == 0)]
	27[(1 > 0 /\ i7-i4 > 0 /\ -1+i6-i5 >= 0 /\ 10-i1 >= 0 /\ -10+i1 >= 0)]
	9[(i7-i4 > 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{25[T]}
	{25[T], 27[T], 28[T]}
	{}
	
Step with 14

	Trace

	26[(-1+i1 == 0)]
	27[(1 > 0 /\ i7-i4 > 0 /\ -1+i6-i5 >= 0 /\ 10-i1 >= 0 /\ -10+i1 >= 0)]
	9[(i7-i4 > 0 /\ -10+i1 == 0)]
	14[(-11+i1 == 0 /\ i6-i5 <= 0)]
	
	Blocked

	{}
	{25[T]}
	{25[T], 27[T], 28[T]}
	{11[T]}
	{}
	
Covered

	Trace

	26[(-1+i1 == 0)]
	27[(1 > 0 /\ i7-i4 > 0 /\ -1+i6-i5 >= 0 /\ 10-i1 >= 0 /\ -10+i1 >= 0)]
	9[(i7-i4 > 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{25[T]}
	{25[T], 27[T], 28[T]}
	{11[T], 14[T]}
	
Backtrack

	Trace

	26[(-1+i1 == 0)]
	27[(1 > 0 /\ i7-i4 > 0 /\ -1+i6-i5 >= 0 /\ 10-i1 >= 0 /\ -10+i1 >= 0)]
	
	Blocked

	{}
	{25[T]}
	{9[T], 25[T], 27[T], 28[T]}
	
Backtrack

	Trace

	26[(-1+i1 == 0)]
	
	Blocked

	{}
	{25[T], 27[T]}
	
Step with 9

	Trace

	26[(-1+i1 == 0)]
	9[(i7-i4 > 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{25[T], 27[T]}
	{}
	
Step with 14

	Trace

	26[(-1+i1 == 0)]
	9[(i7-i4 > 0 /\ -10+i1 == 0)]
	14[(-11+i1 == 0 /\ i6-i5 <= 0)]
	
	Blocked

	{}
	{25[T], 27[T]}
	{}
	{}
	
Covered

	Trace

	26[(-1+i1 == 0)]
	9[(i7-i4 > 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{25[T], 27[T]}
	{14[T]}
	
Step with 11

	Trace

	26[(-1+i1 == 0)]
	9[(i7-i4 > 0 /\ -10+i1 == 0)]
	11[(-11+i1 == 0 /\ i6-i5 > 0)]
	
	Blocked

	{}
	{25[T], 27[T]}
	{14[T]}
	{}
	
Covered

	Trace

	26[(-1+i1 == 0)]
	9[(i7-i4 > 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{25[T], 27[T]}
	{11[T], 14[T]}
	
Backtrack

	Trace

	26[(-1+i1 == 0)]
	
	Blocked

	{}
	{9[T], 25[T], 27[T]}
	
Step with 28

	Trace

	26[(-1+i1 == 0)]
	28[(1 > 0 /\ 10-i1 >= 0 /\ -10+i1 >= 0 /\ -i6+i5 >= 0 /\ -1+i7-i4 >= 0)]
	
	Blocked

	{}
	{9[T], 25[T], 27[T]}
	{28[T]}
	
Step with 25

	Trace

	26[(-1+i1 == 0)]
	28[(1 > 0 /\ 10-i1 >= 0 /\ -10+i1 >= 0 /\ -i6+i5 >= 0 /\ -1+i7-i4 >= 0)]
	25[(i7-i4 <= 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{9[T], 25[T], 27[T]}
	{28[T]}
	{}
	
Backtrack

	Trace

	26[(-1+i1 == 0)]
	28[(1 > 0 /\ 10-i1 >= 0 /\ -10+i1 >= 0 /\ -i6+i5 >= 0 /\ -1+i7-i4 >= 0)]
	
	Blocked

	{}
	{9[T], 25[T], 27[T]}
	{25[T], 28[T]}
	
Backtrack

	Trace

	26[(-1+i1 == 0)]
	
	Blocked

	{}
	{9[T], 25[T], 27[T], 28[T]}
	
Backtrack

	Trace

	Blocked

	{26[T]}
	
Accept

Poly(n^1)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄, X₅
  Temp_Vars:  
  Locations:  l0, l1, l10, l11, l12, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃, X₄, X₅) → l2(X₀, X₁, X₂, X₃, X₄, X₅)
  t₃: l1(X₀, X₁, X₂, X₃, X₄, X₅) → l4(X₀, X₁, X₂, X₃, X₄, X₅)
  t₁₁: l10(X₀, X₁, X₂, X₃, X₄, X₅) → l9(X₀, 1+X₁, X₂, X₃, X₄, X₅) :|: 1+X₁ ≤ X₂
  t₁₂: l10(X₀, X₁, X₂, X₃, X₄, X₅) → l9(1+X₀, 1+X₁, X₂, X₃, X₄, X₅) :|: 1+X₁ ≤ X₂ ∧ X₂ ≤ X₁
  t₁₃: l10(X₀, X₁, X₂, X₃, X₄, X₅) → l9(X₀, X₁, X₂, X₃, X₄, X₅) :|: 1+X₁ ≤ X₂ ∧ X₂ ≤ X₁
  t₁₄: l10(X₀, X₁, X₂, X₃, X₄, X₅) → l9(1+X₀, X₁, X₂, X₃, X₄, X₅) :|: X₂ ≤ X₁
  t₁₅: l11(X₀, X₁, X₂, X₃, X₄, X₅) → l12(X₀, X₁, X₂, X₃, X₄, X₅)
  t₁: l2(X₀, X₁, X₂, X₃, X₄, X₅) → l3(X₀, X₁, X₂, X₃, X₄, X₅)
  t₂: l3(X₀, X₁, X₂, X₃, X₄, X₅) → l1(X₀, X₁, X₂, X₃, X₄, X₅)
  t₄: l4(X₀, X₁, X₂, X₃, X₄, X₅) → l5(X₀, X₁, X₂, X₃, X₄, X₅)
  t₅: l5(X₀, X₁, X₂, X₃, X₄, X₅) → l6(X₀, X₁, X₂, X₃, X₄, X₅)
  t₆: l6(X₀, X₁, X₂, X₃, X₄, X₅) → l7(X₀, X₁, X₂, X₃, X₄, X₅)
  t₇: l7(X₀, X₁, X₂, X₃, X₄, X₅) → l8(X₀, X₁, X₂, X₃, X₄, X₅)
  t₈: l8(X₀, X₁, X₂, X₃, X₄, X₅) → l9(X₄, X₅, X₂, X₃, X₄, X₅)
  t₉: l9(X₀, X₁, X₂, X₃, X₄, X₅) → l10(X₀, X₁, X₂, X₃, X₄, X₅) :|: 1+X₀ ≤ X₃
  t₁₀: l9(X₀, X₁, X₂, X₃, X₄, X₅) → l11(X₀, X₁, X₂, X₃, X₄, X₅) :|: X₃ ≤ X₀


Preprocessing
  Cut unsatisfiable transition [t₁₂: l10→l9; t₁₃: l10→l9]


  Found invariant X₅ ≤ X₁ ∧ X₄ ≤ X₀ ∧ X₃ ≤ X₀ for location l11


  Found invariant X₅ ≤ X₁ ∧ X₄ ≤ X₀ ∧ X₃ ≤ X₀ for location l12


  Found invariant X₅ ≤ X₁ ∧ 1+X₄ ≤ X₃ ∧ X₄ ≤ X₀ ∧ 1+X₀ ≤ X₃ for location l10


  Found invariant X₅ ≤ X₁ ∧ X₄ ≤ X₀ for location l9


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄, X₅
  Temp_Vars:  
  Locations:  l0, l1, l10, l11, l12, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃, X₄, X₅) → l2(X₀, X₁, X₂, X₃, X₄, X₅)
  t₃: l1(X₀, X₁, X₂, X₃, X₄, X₅) → l4(X₀, X₁, X₂, X₃, X₄, X₅)
  t₁₁: l10(X₀, X₁, X₂, X₃, X₄, X₅) → l9(X₀, 1+X₁, X₂, X₃, X₄, X₅) :|: 1+X₁ ≤ X₂ ∧ 1+X₀ ≤ X₃ ∧ 1+X₄ ≤ X₃ ∧ X₄ ≤ X₀ ∧ X₅ ≤ X₁
  t₁₄: l10(X₀, X₁, X₂, X₃, X₄, X₅) → l9(1+X₀, X₁, X₂, X₃, X₄, X₅) :|: X₂ ≤ X₁ ∧ 1+X₀ ≤ X₃ ∧ 1+X₄ ≤ X₃ ∧ X₄ ≤ X₀ ∧ X₅ ≤ X₁
  t₁₅: l11(X₀, X₁, X₂, X₃, X₄, X₅) → l12(X₀, X₁, X₂, X₃, X₄, X₅) :|: X₃ ≤ X₀ ∧ X₄ ≤ X₀ ∧ X₅ ≤ X₁
  t₁: l2(X₀, X₁, X₂, X₃, X₄, X₅) → l3(X₀, X₁, X₂, X₃, X₄, X₅)
  t₂: l3(X₀, X₁, X₂, X₃, X₄, X₅) → l1(X₀, X₁, X₂, X₃, X₄, X₅)
  t₄: l4(X₀, X₁, X₂, X₃, X₄, X₅) → l5(X₀, X₁, X₂, X₃, X₄, X₅)
  t₅: l5(X₀, X₁, X₂, X₃, X₄, X₅) → l6(X₀, X₁, X₂, X₃, X₄, X₅)
  t₆: l6(X₀, X₁, X₂, X₃, X₄, X₅) → l7(X₀, X₁, X₂, X₃, X₄, X₅)
  t₇: l7(X₀, X₁, X₂, X₃, X₄, X₅) → l8(X₀, X₁, X₂, X₃, X₄, X₅)
  t₈: l8(X₀, X₁, X₂, X₃, X₄, X₅) → l9(X₄, X₅, X₂, X₃, X₄, X₅)
  t₉: l9(X₀, X₁, X₂, X₃, X₄, X₅) → l10(X₀, X₁, X₂, X₃, X₄, X₅) :|: 1+X₀ ≤ X₃ ∧ X₄ ≤ X₀ ∧ X₅ ≤ X₁
  t₁₀: l9(X₀, X₁, X₂, X₃, X₄, X₅) → l11(X₀, X₁, X₂, X₃, X₄, X₅) :|: X₃ ≤ X₀ ∧ X₄ ≤ X₀ ∧ X₅ ≤ X₁


MPRF for transition t₁₁: l10(X₀, X₁, X₂, X₃, X₄, X₅) → l9(X₀, 1+X₁, X₂, X₃, X₄, X₅) :|: 1+X₁ ≤ X₂ ∧ 1+X₀ ≤ X₃ ∧ 1+X₄ ≤ X₃ ∧ X₄ ≤ X₀ ∧ X₅ ≤ X₁ of depth 1:
  new bound:
    X₂+X₅ {O(n)}

  MPRF:
    • l10: [X₂-X₁]
    • l9: [X₂-X₁]




MPRF for transition t₁₄: l10(X₀, X₁, X₂, X₃, X₄, X₅) → l9(1+X₀, X₁, X₂, X₃, X₄, X₅) :|: X₂ ≤ X₁ ∧ 1+X₀ ≤ X₃ ∧ 1+X₄ ≤ X₃ ∧ X₄ ≤ X₀ ∧ X₅ ≤ X₁ of depth 1:
  new bound:
    X₃+X₄ {O(n)}

  MPRF:
    • l10: [X₃-X₀]
    • l9: [X₃-X₀]




  knowledge_propagation leads to new time bound X₂+X₃+X₄+X₅+1 {O(n)} for transition t₉: l9(X₀, X₁, X₂, X₃, X₄, X₅) → l10(X₀, X₁, X₂, X₃, X₄, X₅) :|: 1+X₀ ≤ X₃ ∧ X₄ ≤ X₀ ∧ X₅ ≤ X₁


All Bounds
Timebounds
  Overall timebound:2⋅X₂+2⋅X₃+2⋅X₄+2⋅X₅+12 {O(n)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: 1 {O(1)}
    t₈: 1 {O(1)}
    t₉: X₂+X₃+X₄+X₅+1 {O(n)}
    t₁₀: 1 {O(1)}
    t₁₁: X₂+X₅ {O(n)}
    t₁₄: X₃+X₄ {O(n)}
    t₁₅: 1 {O(1)}


Costbounds
  Overall costbound: 2⋅X₂+2⋅X₃+2⋅X₄+2⋅X₅+12 {O(n)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: 1 {O(1)}
    t₈: 1 {O(1)}
    t₉: X₂+X₃+X₄+X₅+1 {O(n)}
    t₁₀: 1 {O(1)}
    t₁₁: X₂+X₅ {O(n)}
    t₁₄: X₃+X₄ {O(n)}
    t₁₅: 1 {O(1)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₀, X₂: X₂ {O(n)}
    t₀, X₃: X₃ {O(n)}
    t₀, X₄: X₄ {O(n)}
    t₀, X₅: X₅ {O(n)}
    t₁, X₀: X₀ {O(n)}
    t₁, X₁: X₁ {O(n)}
    t₁, X₂: X₂ {O(n)}
    t₁, X₃: X₃ {O(n)}
    t₁, X₄: X₄ {O(n)}
    t₁, X₅: X₅ {O(n)}
    t₂, X₀: X₀ {O(n)}
    t₂, X₁: X₁ {O(n)}
    t₂, X₂: X₂ {O(n)}
    t₂, X₃: X₃ {O(n)}
    t₂, X₄: X₄ {O(n)}
    t₂, X₅: X₅ {O(n)}
    t₃, X₀: X₀ {O(n)}
    t₃, X₁: X₁ {O(n)}
    t₃, X₂: X₂ {O(n)}
    t₃, X₃: X₃ {O(n)}
    t₃, X₄: X₄ {O(n)}
    t₃, X₅: X₅ {O(n)}
    t₄, X₀: X₀ {O(n)}
    t₄, X₁: X₁ {O(n)}
    t₄, X₂: X₂ {O(n)}
    t₄, X₃: X₃ {O(n)}
    t₄, X₄: X₄ {O(n)}
    t₄, X₅: X₅ {O(n)}
    t₅, X₀: X₀ {O(n)}
    t₅, X₁: X₁ {O(n)}
    t₅, X₂: X₂ {O(n)}
    t₅, X₃: X₃ {O(n)}
    t₅, X₄: X₄ {O(n)}
    t₅, X₅: X₅ {O(n)}
    t₆, X₀: X₀ {O(n)}
    t₆, X₁: X₁ {O(n)}
    t₆, X₂: X₂ {O(n)}
    t₆, X₃: X₃ {O(n)}
    t₆, X₄: X₄ {O(n)}
    t₆, X₅: X₅ {O(n)}
    t₇, X₀: X₀ {O(n)}
    t₇, X₁: X₁ {O(n)}
    t₇, X₂: X₂ {O(n)}
    t₇, X₃: X₃ {O(n)}
    t₇, X₄: X₄ {O(n)}
    t₇, X₅: X₅ {O(n)}
    t₈, X₀: X₄ {O(n)}
    t₈, X₁: X₅ {O(n)}
    t₈, X₂: X₂ {O(n)}
    t₈, X₃: X₃ {O(n)}
    t₈, X₄: X₄ {O(n)}
    t₈, X₅: X₅ {O(n)}
    t₉, X₀: 2⋅X₄+X₃ {O(n)}
    t₉, X₁: 2⋅X₅+X₂ {O(n)}
    t₉, X₂: X₂ {O(n)}
    t₉, X₃: X₃ {O(n)}
    t₉, X₄: X₄ {O(n)}
    t₉, X₅: X₅ {O(n)}
    t₁₀, X₀: 3⋅X₄+X₃ {O(n)}
    t₁₀, X₁: 3⋅X₅+X₂ {O(n)}
    t₁₀, X₂: 2⋅X₂ {O(n)}
    t₁₀, X₃: 2⋅X₃ {O(n)}
    t₁₀, X₄: 2⋅X₄ {O(n)}
    t₁₀, X₅: 2⋅X₅ {O(n)}
    t₁₁, X₀: 2⋅X₄+X₃ {O(n)}
    t₁₁, X₁: 2⋅X₅+X₂ {O(n)}
    t₁₁, X₂: X₂ {O(n)}
    t₁₁, X₃: X₃ {O(n)}
    t₁₁, X₄: X₄ {O(n)}
    t₁₁, X₅: X₅ {O(n)}
    t₁₄, X₀: 2⋅X₄+X₃ {O(n)}
    t₁₄, X₁: 2⋅X₅+X₂ {O(n)}
    t₁₄, X₂: X₂ {O(n)}
    t₁₄, X₃: X₃ {O(n)}
    t₁₄, X₄: X₄ {O(n)}
    t₁₄, X₅: X₅ {O(n)}
    t₁₅, X₀: 3⋅X₄+X₃ {O(n)}
    t₁₅, X₁: 3⋅X₅+X₂ {O(n)}
    t₁₅, X₂: 2⋅X₂ {O(n)}
    t₁₅, X₃: 2⋅X₃ {O(n)}
    t₁₅, X₄: 2⋅X₄ {O(n)}
    t₁₅, X₅: 2⋅X₅ {O(n)}

