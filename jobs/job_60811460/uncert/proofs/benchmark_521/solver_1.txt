WORST_CASE(Omega(n^1),O(n^1))

# LoAT Proof:
WORST_CASE(Omega(n^1),?)

WORST_CASE(Omega(n^1),?)
Initial ITS

Start location: f3

Location map:
LoAT_sink -> 0
f3 -> 1
f1 -> 2
f2 -> 3

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=0
   1: (-2+i1 == 0 /\ -i6+i5 >= 0) /\ i1'=3, i3'=1+i3, i7'=it2
   2: (-2+i1 == 0 /\ 1-i6+i5 == 0 /\ -i4 >= 0) /\ i1'=3, i3'=1+i3, i4'=1, i5'=1+i5, i7'=it3
   3: (-1+i6-i5 >= 0 /\ -2+i1 == 0 /\ -i4 >= 0 /\ -2+i6-i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=0, i5'=1+i5, i6'=-1+i6

Dependency graph:
0 -> 1, 0 -> 2, 0 -> 3
3 -> 1, 3 -> 2, 3 -> 3

Step with 0

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 3

	Trace

	0[(-1+i1 == 0)]
	3[(-1+i6-i5 >= 0 /\ -2+i1 == 0 /\ -i4 >= 0 /\ -2+i6-i5 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Poly(n^1)

Accelerate

	Loop Acceleration

	Original rule:
	(-1+i6-i5 >= 0 /\ -2+i1 == 0 /\ -i4 >= 0 /\ -2+i6-i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=0, i5'=1+i5, i6'=-1+i6
	New rule:
	(-1+i6-i5 >= 0 /\ -1+it16 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -i4 >= 0 /\ -2+i6-i5 >= 0 /\ i6-2*it16-i5 >= 0 /\ 1+i6-2*it16-i5 >= 0) /\ i1'=i1, i3'=i3+it16, i4'=0, i5'=it16+i5, i6'=i6-it16

		-1+i6-i5 >= 0 [0]: montonic decrease yields (-1+i6-i5 >= 0 /\ 1+i6-2*it16-i5 >= 0), dependencies: -2+i6-i5 >= 0
		
		-1+i6-i5 >= 0 [1]: eventual decrease yields (-1+i6-i5 >= 0 /\ 1+i6-2*it16-i5 >= 0)
		
		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		-i4 >= 0 [0]: trivial
		
		-2+i6-i5 >= 0 [0]: montonic decrease yields (-2+i6-i5 >= 0 /\ i6-2*it16-i5 >= 0)
		
		Replacement map: {-1+i6-i5 >= 0 -> (-1+i6-i5 >= 0 /\ 1+i6-2*it16-i5 >= 0), -2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0, -i4 >= 0 -> -i4 >= 0, -2+i6-i5 >= 0 -> (-2+i6-i5 >= 0 /\ i6-2*it16-i5 >= 0)}

	Removed Trivial Updates

	Original rule:
	(-1+i6-i5 >= 0 /\ -1+it16 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -i4 >= 0 /\ -2+i6-i5 >= 0 /\ i6-2*it16-i5 >= 0 /\ 1+i6-2*it16-i5 >= 0) /\ i1'=i1, i3'=i3+it16, i4'=0, i5'=it16+i5, i6'=i6-it16
	New rule:
	(-1+i6-i5 >= 0 /\ -1+it16 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -i4 >= 0 /\ -2+i6-i5 >= 0 /\ i6-2*it16-i5 >= 0 /\ 1+i6-2*it16-i5 >= 0) /\ i3'=i3+it16, i4'=0, i5'=it16+i5, i6'=i6-it16

Start location: f3

Location map:
LoAT_sink -> 0
f3 -> 1
f1 -> 2
f2 -> 3

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=0
   1: (-2+i1 == 0 /\ -i6+i5 >= 0) /\ i1'=3, i3'=1+i3, i7'=it2
   2: (-2+i1 == 0 /\ 1-i6+i5 == 0 /\ -i4 >= 0) /\ i1'=3, i3'=1+i3, i4'=1, i5'=1+i5, i7'=it3
   3: (-1+i6-i5 >= 0 /\ -2+i1 == 0 /\ -i4 >= 0 /\ -2+i6-i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=0, i5'=1+i5, i6'=-1+i6
   4: (-1+i6-i5 >= 0 /\ -1+it16 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -i4 >= 0 /\ -2+i6-i5 >= 0 /\ i6-2*it16-i5 >= 0 /\ 1+i6-2*it16-i5 >= 0) /\ i3'=i3+it16, i4'=0, i5'=it16+i5, i6'=i6-it16

Dependency graph:
0 -> 1, 0 -> 2, 0 -> 3, 0 -> 4
3 -> 1, 3 -> 2, 3 -> 3, 3 -> 4
4 -> 1, 4 -> 2, 4 -> 3

	Trace

	0[(-1+i1 == 0)]
	4[(-1+i6-i5 >= 0 /\ -1+it16 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -i4 >= 0 /\ -2+i6-i5 >= 0 /\ i6-2*it16-i5 >= 0 /\ 1+i6-2*it16-i5 >= 0)]
	
	Blocked

	{}
	{}
	{3[T], 4[T]}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	4[(-1+i6-i5 >= 0 /\ -1+it16 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -i4 >= 0 /\ -2+i6-i5 >= 0 /\ i6-2*it16-i5 >= 0 /\ 1+i6-2*it16-i5 >= 0)]
	1[(-2+i1 == 0 /\ -i6+i5 >= 0)]
	
	Blocked

	{}
	{}
	{3[T], 4[T]}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	4[(-1+i6-i5 >= 0 /\ -1+it16 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -i4 >= 0 /\ -2+i6-i5 >= 0 /\ i6-2*it16-i5 >= 0 /\ 1+i6-2*it16-i5 >= 0)]
	
	Blocked

	{}
	{}
	{1[T], 3[T], 4[T]}
	
Step with 2

	Trace

	0[(-1+i1 == 0)]
	4[(-1+i6-i5 >= 0 /\ -1+it16 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -i4 >= 0 /\ -2+i6-i5 >= 0 /\ i6-2*it16-i5 >= 0 /\ 1+i6-2*it16-i5 >= 0)]
	2[(-2+i1 == 0 /\ 1-i6+i5 == 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{}
	{1[T], 3[T], 4[T]}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	4[(-1+i6-i5 >= 0 /\ -1+it16 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -i4 >= 0 /\ -2+i6-i5 >= 0 /\ i6-2*it16-i5 >= 0 /\ 1+i6-2*it16-i5 >= 0)]
	
	Blocked

	{}
	{}
	{1[T], 2[T], 3[T], 4[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{4[T]}
	
Step with 3

	Trace

	0[(-1+i1 == 0)]
	3[(-1+i6-i5 >= 0 /\ -2+i1 == 0 /\ -i4 >= 0 /\ -2+i6-i5 >= 0)]
	
	Blocked

	{}
	{4[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{3[T], 4[T]}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	1[(-2+i1 == 0 /\ -i6+i5 >= 0)]
	
	Blocked

	{}
	{3[T], 4[T]}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{1[T], 3[T], 4[T]}
	
Step with 2

	Trace

	0[(-1+i1 == 0)]
	2[(-2+i1 == 0 /\ 1-i6+i5 == 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{1[T], 3[T], 4[T]}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{1[T], 2[T], 3[T], 4[T]}
	
Backtrack

	Trace

	Blocked

	{0[T]}
	
Accept

Poly(n^1)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃
  Temp_Vars:  E
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃) → l1(0, X₁, X₂, X₃)
  t₃: l1(X₀, X₁, X₂, X₃) → l1(0, 1+X₁, X₂-1, X₃) :|: 1+X₁ ≤ X₂ ∧ 2+X₁ ≤ X₂ ∧ X₀ ≤ 0
  t₁: l1(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, E) :|: X₂ ≤ X₁
  t₂: l1(X₀, X₁, X₂, X₃) → l2(1, 1+X₁, X₂, E) :|: X₂ ≤ 1+X₁ ∧ 1+X₁ ≤ X₂ ∧ X₀ ≤ 0


Preprocessing
  Eliminate variables [E; X₃] that do not contribute to the problem


  Found invariant X₀ ≤ 0 ∧ 0 ≤ X₀ for location l1


  Found invariant X₂ ≤ X₁ ∧ X₀ ≤ 1 ∧ 0 ≤ X₀ for location l2


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₄: l0(X₀, X₁, X₂) → l1(0, X₁, X₂)
  t₅: l1(X₀, X₁, X₂) → l1(0, 1+X₁, X₂-1) :|: 1+X₁ ≤ X₂ ∧ 2+X₁ ≤ X₂ ∧ X₀ ≤ 0 ∧ 0 ≤ X₀
  t₆: l1(X₀, X₁, X₂) → l2(X₀, X₁, X₂) :|: X₂ ≤ X₁ ∧ 0 ≤ X₀ ∧ X₀ ≤ 0
  t₇: l1(X₀, X₁, X₂) → l2(1, 1+X₁, X₂) :|: X₂ ≤ 1+X₁ ∧ 1+X₁ ≤ X₂ ∧ X₀ ≤ 0 ∧ 0 ≤ X₀


MPRF for transition t₅: l1(X₀, X₁, X₂) → l1(0, 1+X₁, X₂-1) :|: 1+X₁ ≤ X₂ ∧ 2+X₁ ≤ X₂ ∧ X₀ ≤ 0 ∧ 0 ≤ X₀ of depth 1:
  new bound:
    X₁+X₂ {O(n)}

  MPRF:
    • l1: [X₂-X₁]




All Bounds
Timebounds
  Overall timebound:X₁+X₂+3 {O(n)}
    t₄: 1 {O(1)}
    t₅: X₁+X₂ {O(n)}
    t₆: 1 {O(1)}
    t₇: 1 {O(1)}


Costbounds
  Overall costbound: X₁+X₂+3 {O(n)}
    t₄: 1 {O(1)}
    t₅: X₁+X₂ {O(n)}
    t₆: 1 {O(1)}
    t₇: 1 {O(1)}


Sizebounds
    t₄, X₀: 0 {O(1)}
    t₄, X₁: X₁ {O(n)}
    t₄, X₂: X₂ {O(n)}
    t₅, X₀: 0 {O(1)}
    t₅, X₁: 2⋅X₁+X₂ {O(n)}
    t₅, X₂: 2⋅X₂+X₁ {O(n)}
    t₆, X₀: 0 {O(1)}
    t₆, X₁: 3⋅X₁+X₂ {O(n)}
    t₆, X₂: 3⋅X₂+X₁ {O(n)}
    t₇, X₀: 1 {O(1)}
    t₇, X₁: 3⋅X₁+X₂+2 {O(n)}
    t₇, X₂: 3⋅X₂+X₁ {O(n)}

