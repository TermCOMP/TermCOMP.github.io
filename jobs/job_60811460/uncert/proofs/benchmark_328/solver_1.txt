WORST_CASE(?,O(1))

# LoAT Proof:
Initial ITS

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f15 -> 2
f16 -> 3
f7 -> 4
f23 -> 5

Rules:
   0: (-2+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=3, i3'=1+i3
   1: (-2+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=1+i3
   2: (-it2 >= 0 /\ -1+i1 == 0) /\ i1'=4, i3'=1+i3, i4'=it2, i6'=it2
   3: (-101+it3 >= 0 /\ -1+i1 == 0) /\ i1'=4, i3'=1+i3, i4'=it3, i6'=it3
   4: (-1+it6 >= 0 /\ 100-it6 >= 0 /\ -1+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=it6, i5'=0, i6'=it6, i7'=it5
   5: -3+i1 == 0 /\ i1'=2, i3'=1+i3, i5'=1+i5
   6: (-5+i1 == 0 /\ -1-i8+i5 >= 0) /\ i1'=5, i3'=1+i3, i8'=1+i8
   7: (i8-i5 >= 0 /\ -5+i1 == 0) /\ i1'=4, i3'=1+i3
   8: (-2+i1 == 0 /\ i4-i5 == 0) /\ i1'=5, i3'=1+i3, i5'=-1+i4, i8'=0
   9: -3+i1 == 0 /\ i1'=5, i3'=1+i3, i5'=-1+i5, i8'=0

Dependency graph:
0 -> 5, 0 -> 9
1 -> 5, 1 -> 9
4 -> 0, 4 -> 1, 4 -> 8
5 -> 0, 5 -> 1, 5 -> 8
6 -> 6, 6 -> 7
8 -> 6, 8 -> 7
9 -> 6, 9 -> 7

Refined Dependency Graph

	Removed the following edges: 4 -> 1, 4 -> 8

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f15 -> 2
f16 -> 3
f7 -> 4
f23 -> 5

Rules:
   0: (-2+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=3, i3'=1+i3
   1: (-2+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=1+i3
   2: (-it2 >= 0 /\ -1+i1 == 0) /\ i1'=4, i3'=1+i3, i4'=it2, i6'=it2
   3: (-101+it3 >= 0 /\ -1+i1 == 0) /\ i1'=4, i3'=1+i3, i4'=it3, i6'=it3
   4: (-1+it6 >= 0 /\ 100-it6 >= 0 /\ -1+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=it6, i5'=0, i6'=it6, i7'=it5
   5: -3+i1 == 0 /\ i1'=2, i3'=1+i3, i5'=1+i5
   6: (-5+i1 == 0 /\ -1-i8+i5 >= 0) /\ i1'=5, i3'=1+i3, i8'=1+i8
   7: (i8-i5 >= 0 /\ -5+i1 == 0) /\ i1'=4, i3'=1+i3
   8: (-2+i1 == 0 /\ i4-i5 == 0) /\ i1'=5, i3'=1+i3, i5'=-1+i4, i8'=0
   9: -3+i1 == 0 /\ i1'=5, i3'=1+i3, i5'=-1+i5, i8'=0

Dependency graph:
0 -> 5, 0 -> 9
1 -> 5, 1 -> 9
4 -> 0
5 -> 0, 5 -> 1, 5 -> 8
6 -> 6, 6 -> 7
8 -> 6, 8 -> 7
9 -> 6, 9 -> 7

Step with 4

	Trace

	4[(-1+it6 >= 0 /\ 100-it6 >= 0 /\ -1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 0

	Trace

	4[(-1+it6 >= 0 /\ 100-it6 >= 0 /\ -1+i1 == 0)]
	0[(-2+i1 == 0 /\ -1+i4-i5 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Step with 9

	Trace

	4[(-1+it6 >= 0 /\ 100-it6 >= 0 /\ -1+i1 == 0)]
	0[(-2+i1 == 0 /\ -1+i4-i5 >= 0)]
	9[(-3+i1 == 0)]
	
	Blocked

	{}
	{}
	{}
	{}
	
Step with 7

	Trace

	4[(-1+it6 >= 0 /\ 100-it6 >= 0 /\ -1+i1 == 0)]
	0[(-2+i1 == 0 /\ -1+i4-i5 >= 0)]
	9[(-3+i1 == 0)]
	7[(i8-i5 >= 0 /\ -5+i1 == 0)]
	
	Blocked

	{}
	{}
	{}
	{6[T]}
	{}
	
Backtrack

	Trace

	4[(-1+it6 >= 0 /\ 100-it6 >= 0 /\ -1+i1 == 0)]
	0[(-2+i1 == 0 /\ -1+i4-i5 >= 0)]
	9[(-3+i1 == 0)]
	
	Blocked

	{}
	{}
	{}
	{6[T], 7[T]}
	
Backtrack

	Trace

	4[(-1+it6 >= 0 /\ 100-it6 >= 0 /\ -1+i1 == 0)]
	0[(-2+i1 == 0 /\ -1+i4-i5 >= 0)]
	
	Blocked

	{}
	{}
	{9[T]}
	
Step with 5

	Trace

	4[(-1+it6 >= 0 /\ 100-it6 >= 0 /\ -1+i1 == 0)]
	0[(-2+i1 == 0 /\ -1+i4-i5 >= 0)]
	5[(-3+i1 == 0)]
	
	Blocked

	{}
	{}
	{9[T]}
	{}
	
Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -2+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=2, i3'=2+i3, i5'=1+i5
		New rule:
		(-2+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=2, i3'=2+i3, i5'=1+i5

	Loop Acceleration

	Original rule:
	(-2+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=2, i3'=2+i3, i5'=1+i5
	New rule:
	(-1+it44 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -it44+i4-i5 >= 0) /\ i1'=i1, i3'=i3+2*it44, i5'=it44+i5

		-2+i1 >= 0 [0]: unchanged
		
		-1+i4-i5 >= 0 [0]: montonic decrease yields -it44+i4-i5 >= 0
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, -1+i4-i5 >= 0 -> -it44+i4-i5 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-1+it44 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -it44+i4-i5 >= 0) /\ i1'=i1, i3'=i3+2*it44, i5'=it44+i5
	New rule:
	(-1+it44 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -it44+i4-i5 >= 0) /\ i3'=i3+2*it44, i5'=it44+i5
	
	Instantiation

	Original rule:
	(-1+it44 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -it44+i4-i5 >= 0) /\ i3'=i3+2*it44, i5'=it44+i5
	New rule:
	(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+2*i4-2*i5, i5'=i4

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f15 -> 2
f16 -> 3
f7 -> 4
f23 -> 5

Rules:
   0: (-2+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=3, i3'=1+i3
   1: (-2+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=1+i3
   2: (-it2 >= 0 /\ -1+i1 == 0) /\ i1'=4, i3'=1+i3, i4'=it2, i6'=it2
   3: (-101+it3 >= 0 /\ -1+i1 == 0) /\ i1'=4, i3'=1+i3, i4'=it3, i6'=it3
   4: (-1+it6 >= 0 /\ 100-it6 >= 0 /\ -1+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=it6, i5'=0, i6'=it6, i7'=it5
   5: -3+i1 == 0 /\ i1'=2, i3'=1+i3, i5'=1+i5
   6: (-5+i1 == 0 /\ -1-i8+i5 >= 0) /\ i1'=5, i3'=1+i3, i8'=1+i8
   7: (i8-i5 >= 0 /\ -5+i1 == 0) /\ i1'=4, i3'=1+i3
   8: (-2+i1 == 0 /\ i4-i5 == 0) /\ i1'=5, i3'=1+i3, i5'=-1+i4, i8'=0
   9: -3+i1 == 0 /\ i1'=5, i3'=1+i3, i5'=-1+i5, i8'=0
  10: (0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+2*i4-2*i5, i5'=i4

Dependency graph:
0 -> 5, 0 -> 9
1 -> 5, 1 -> 9
4 -> 0, 4 -> 10
5 -> 0, 5 -> 1, 5 -> 8, 5 -> 10
6 -> 6, 6 -> 7
8 -> 6, 8 -> 7
9 -> 6, 9 -> 7
10 -> 0, 10 -> 1, 10 -> 8

	Trace

	4[(-1+it6 >= 0 /\ 100-it6 >= 0 /\ -1+i1 == 0)]
	10[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{}
	{10[T]}
	
Step with 8

	Trace

	4[(-1+it6 >= 0 /\ 100-it6 >= 0 /\ -1+i1 == 0)]
	10[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	8[(-2+i1 == 0 /\ i4-i5 == 0)]
	
	Blocked

	{}
	{}
	{1[T], 10[T]}
	{}
	
Step with 7

	Trace

	4[(-1+it6 >= 0 /\ 100-it6 >= 0 /\ -1+i1 == 0)]
	10[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	8[(-2+i1 == 0 /\ i4-i5 == 0)]
	7[(i8-i5 >= 0 /\ -5+i1 == 0)]
	
	Blocked

	{}
	{}
	{1[T], 10[T]}
	{}
	{}
	
Backtrack

	Trace

	4[(-1+it6 >= 0 /\ 100-it6 >= 0 /\ -1+i1 == 0)]
	10[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	8[(-2+i1 == 0 /\ i4-i5 == 0)]
	
	Blocked

	{}
	{}
	{1[T], 10[T]}
	{7[T]}
	
Step with 6

	Trace

	4[(-1+it6 >= 0 /\ 100-it6 >= 0 /\ -1+i1 == 0)]
	10[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	8[(-2+i1 == 0 /\ i4-i5 == 0)]
	6[(-5+i1 == 0 /\ -1-i8+i5 >= 0)]
	
	Blocked

	{}
	{}
	{1[T], 10[T]}
	{7[T]}
	{}
	
Accelerate

	Loop Acceleration

	Original rule:
	(-5+i1 == 0 /\ -1-i8+i5 >= 0) /\ i1'=5, i3'=1+i3, i8'=1+i8
	New rule:
	(-i8+i5-it111 >= 0 /\ -1+it111 >= 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0) /\ i1'=i1, i3'=i3+it111, i8'=i8+it111

		-5+i1 >= 0 [0]: unchanged
		
		5-i1 >= 0 [0]: unchanged
		
		-1-i8+i5 >= 0 [0]: montonic decrease yields -i8+i5-it111 >= 0
		
		Replacement map: {-5+i1 >= 0 -> -5+i1 >= 0, 5-i1 >= 0 -> 5-i1 >= 0, -1-i8+i5 >= 0 -> -i8+i5-it111 >= 0}

	Removed Trivial Updates

	Original rule:
	(-i8+i5-it111 >= 0 /\ -1+it111 >= 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0) /\ i1'=i1, i3'=i3+it111, i8'=i8+it111
	New rule:
	(-i8+i5-it111 >= 0 /\ -1+it111 >= 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0) /\ i3'=i3+it111, i8'=i8+it111
	
	Instantiation

	Original rule:
	(-i8+i5-it111 >= 0 /\ -1+it111 >= 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0) /\ i3'=i3+it111, i8'=i8+it111
	New rule:
	(0 >= 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0 /\ -1-i8+i5 >= 0) /\ i3'=i3-i8+i5, i8'=i5

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f15 -> 2
f16 -> 3
f7 -> 4
f23 -> 5

Rules:
   0: (-2+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=3, i3'=1+i3
   1: (-2+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=1+i3
   2: (-it2 >= 0 /\ -1+i1 == 0) /\ i1'=4, i3'=1+i3, i4'=it2, i6'=it2
   3: (-101+it3 >= 0 /\ -1+i1 == 0) /\ i1'=4, i3'=1+i3, i4'=it3, i6'=it3
   4: (-1+it6 >= 0 /\ 100-it6 >= 0 /\ -1+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=it6, i5'=0, i6'=it6, i7'=it5
   5: -3+i1 == 0 /\ i1'=2, i3'=1+i3, i5'=1+i5
   6: (-5+i1 == 0 /\ -1-i8+i5 >= 0) /\ i1'=5, i3'=1+i3, i8'=1+i8
   7: (i8-i5 >= 0 /\ -5+i1 == 0) /\ i1'=4, i3'=1+i3
   8: (-2+i1 == 0 /\ i4-i5 == 0) /\ i1'=5, i3'=1+i3, i5'=-1+i4, i8'=0
   9: -3+i1 == 0 /\ i1'=5, i3'=1+i3, i5'=-1+i5, i8'=0
  10: (0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+2*i4-2*i5, i5'=i4
  11: (0 >= 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0 /\ -1-i8+i5 >= 0) /\ i3'=i3-i8+i5, i8'=i5

Dependency graph:
0 -> 5, 0 -> 9
1 -> 5, 1 -> 9
4 -> 0, 4 -> 10
5 -> 0, 5 -> 1, 5 -> 8, 5 -> 10
6 -> 6, 6 -> 7, 6 -> 11
8 -> 6, 8 -> 7, 8 -> 11
9 -> 6, 9 -> 7, 9 -> 11
10 -> 0, 10 -> 1, 10 -> 8
11 -> 6, 11 -> 7

	Trace

	4[(-1+it6 >= 0 /\ 100-it6 >= 0 /\ -1+i1 == 0)]
	10[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	8[(-2+i1 == 0 /\ i4-i5 == 0)]
	11[(0 >= 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0 /\ -1-i8+i5 >= 0)]
	
	Blocked

	{}
	{}
	{1[T], 10[T]}
	{7[T]}
	{6[T], 11[T]}
	
Step with 7

	Trace

	4[(-1+it6 >= 0 /\ 100-it6 >= 0 /\ -1+i1 == 0)]
	10[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	8[(-2+i1 == 0 /\ i4-i5 == 0)]
	11[(0 >= 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0 /\ -1-i8+i5 >= 0)]
	7[(i8-i5 >= 0 /\ -5+i1 == 0)]
	
	Blocked

	{}
	{}
	{1[T], 10[T]}
	{7[T]}
	{6[T], 11[T]}
	{}
	
Backtrack

	Trace

	4[(-1+it6 >= 0 /\ 100-it6 >= 0 /\ -1+i1 == 0)]
	10[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	8[(-2+i1 == 0 /\ i4-i5 == 0)]
	11[(0 >= 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0 /\ -1-i8+i5 >= 0)]
	
	Blocked

	{}
	{}
	{1[T], 10[T]}
	{7[T]}
	{6[T], 7[T], 11[T]}
	
Backtrack

	Trace

	4[(-1+it6 >= 0 /\ 100-it6 >= 0 /\ -1+i1 == 0)]
	10[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	8[(-2+i1 == 0 /\ i4-i5 == 0)]
	
	Blocked

	{}
	{}
	{1[T], 10[T]}
	{7[T], 11[T]}
	
Step with 6

	Trace

	4[(-1+it6 >= 0 /\ 100-it6 >= 0 /\ -1+i1 == 0)]
	10[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	8[(-2+i1 == 0 /\ i4-i5 == 0)]
	6[(-5+i1 == 0 /\ -1-i8+i5 >= 0)]
	
	Blocked

	{}
	{}
	{1[T], 10[T]}
	{7[T], 11[T]}
	{}
	
Covered

	Trace

	4[(-1+it6 >= 0 /\ 100-it6 >= 0 /\ -1+i1 == 0)]
	10[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	8[(-2+i1 == 0 /\ i4-i5 == 0)]
	
	Blocked

	{}
	{}
	{1[T], 10[T]}
	{6[T], 7[T], 11[T]}
	
Backtrack

	Trace

	4[(-1+it6 >= 0 /\ 100-it6 >= 0 /\ -1+i1 == 0)]
	10[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{}
	{1[T], 8[T], 10[T]}
	
Backtrack

	Trace

	4[(-1+it6 >= 0 /\ 100-it6 >= 0 /\ -1+i1 == 0)]
	
	Blocked

	{}
	{10[T]}
	
Step with 0

	Trace

	4[(-1+it6 >= 0 /\ 100-it6 >= 0 /\ -1+i1 == 0)]
	0[(-2+i1 == 0 /\ -1+i4-i5 >= 0)]
	
	Blocked

	{}
	{10[T]}
	{}
	
Step with 9

	Trace

	4[(-1+it6 >= 0 /\ 100-it6 >= 0 /\ -1+i1 == 0)]
	0[(-2+i1 == 0 /\ -1+i4-i5 >= 0)]
	9[(-3+i1 == 0)]
	
	Blocked

	{}
	{10[T]}
	{}
	{}
	
Step with 7

	Trace

	4[(-1+it6 >= 0 /\ 100-it6 >= 0 /\ -1+i1 == 0)]
	0[(-2+i1 == 0 /\ -1+i4-i5 >= 0)]
	9[(-3+i1 == 0)]
	7[(i8-i5 >= 0 /\ -5+i1 == 0)]
	
	Blocked

	{}
	{10[T]}
	{}
	{11[T]}
	{}
	
Backtrack

	Trace

	4[(-1+it6 >= 0 /\ 100-it6 >= 0 /\ -1+i1 == 0)]
	0[(-2+i1 == 0 /\ -1+i4-i5 >= 0)]
	9[(-3+i1 == 0)]
	
	Blocked

	{}
	{10[T]}
	{}
	{7[T], 11[T]}
	
Backtrack

	Trace

	4[(-1+it6 >= 0 /\ 100-it6 >= 0 /\ -1+i1 == 0)]
	0[(-2+i1 == 0 /\ -1+i4-i5 >= 0)]
	
	Blocked

	{}
	{10[T]}
	{9[T]}
	
Step with 5

	Trace

	4[(-1+it6 >= 0 /\ 100-it6 >= 0 /\ -1+i1 == 0)]
	0[(-2+i1 == 0 /\ -1+i4-i5 >= 0)]
	5[(-3+i1 == 0)]
	
	Blocked

	{}
	{10[T]}
	{9[T]}
	{}
	
Covered

	Trace

	4[(-1+it6 >= 0 /\ 100-it6 >= 0 /\ -1+i1 == 0)]
	0[(-2+i1 == 0 /\ -1+i4-i5 >= 0)]
	
	Blocked

	{}
	{10[T]}
	{5[T], 9[T]}
	
Backtrack

	Trace

	4[(-1+it6 >= 0 /\ 100-it6 >= 0 /\ -1+i1 == 0)]
	
	Blocked

	{}
	{0[T], 10[T]}
	
Backtrack

	Trace

	Blocked

	{4[T]}
	
Step with 3

	Trace

	3[(-101+it3 >= 0 /\ -1+i1 == 0)]
	
	Blocked

	{4[T]}
	{}
	
Backtrack

	Trace

	Blocked

	{3[T], 4[T]}
	
Step with 2

	Trace

	2[(-it2 >= 0 /\ -1+i1 == 0)]
	
	Blocked

	{3[T], 4[T]}
	{}
	
Backtrack

	Trace

	Blocked

	{2[T], 3[T], 4[T]}
	
Accept

Constant


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄
  Temp_Vars:  F, G
  Locations:  l0, l1, l2, l3, l4
  Return Locations:  
  Transitions:
  t₄: l0(X₀, X₁, X₂, X₃, X₄) → l1(F, 0, F, G, X₄) :|: F ≤ 100 ∧ 1 ≤ F
  t₂: l0(X₀, X₁, X₂, X₃, X₄) → l2(F, X₁, F, X₃, X₄) :|: F ≤ 0
  t₃: l0(X₀, X₁, X₂, X₃, X₄) → l2(F, X₁, F, X₃, X₄) :|: 101 ≤ F
  t₀: l1(X₀, X₁, X₂, X₃, X₄) → l3(X₀, X₁, X₂, X₃, X₄) :|: 1+X₁ ≤ X₀
  t₁: l1(X₀, X₁, X₂, X₃, X₄) → l3(X₀, X₁, X₂, X₃, X₄) :|: 1+X₀ ≤ X₁
  t₈: l1(X₀, X₁, X₂, X₃, X₄) → l4(X₀, X₀-1, X₂, X₃, 0) :|: X₁ ≤ X₀ ∧ X₀ ≤ X₁
  t₅: l3(X₀, X₁, X₂, X₃, X₄) → l1(X₀, 1+X₁, X₂, X₃, X₄)
  t₉: l3(X₀, X₁, X₂, X₃, X₄) → l4(X₀, X₁-1, X₂, X₃, 0)
  t₇: l4(X₀, X₁, X₂, X₃, X₄) → l2(X₀, X₁, X₂, X₃, X₄) :|: X₁ ≤ X₄
  t₆: l4(X₀, X₁, X₂, X₃, X₄) → l4(X₀, X₁, X₂, X₃, 1+X₄) :|: 1+X₄ ≤ X₁


Preprocessing
  Eliminate variables [G; X₂; X₃] that do not contribute to the problem


  Found invariant X₁ ≤ 100 ∧ X₁ ≤ X₀ ∧ X₀+X₁ ≤ 200 ∧ 0 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ X₀ ≤ 100+X₁ ∧ X₀ ≤ 100 ∧ 1 ≤ X₀ for location l1


  Found invariant X₂ ≤ 99 ∧ X₂ ≤ 1+X₁ ∧ X₁+X₂ ≤ 198 ∧ 1+X₂ ≤ X₀ ∧ X₀+X₂ ≤ 199 ∧ 0 ≤ X₂ ∧ 0 ≤ 1+X₁+X₂ ∧ X₁ ≤ 99+X₂ ∧ 1 ≤ X₀+X₂ ∧ X₀ ≤ 100+X₂ ∧ X₁ ≤ 99 ∧ 1+X₁ ≤ X₀ ∧ X₀+X₁ ≤ 199 ∧ 0 ≤ 1+X₁ ∧ 0 ≤ X₀+X₁ ∧ X₀ ≤ 101+X₁ ∧ X₀ ≤ 100 ∧ 1 ≤ X₀ for location l4


  Found invariant X₁ ≤ 99 ∧ 1+X₁ ≤ X₀ ∧ X₀+X₁ ≤ 199 ∧ 0 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ X₀ ≤ 100+X₁ ∧ X₀ ≤ 100 ∧ 1 ≤ X₀ for location l3


  Cut unsatisfiable transition [t₁₄: l1→l3]


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  F
  Locations:  l0, l1, l2, l3, l4
  Return Locations:  
  Transitions:
  t₁₀: l0(X₀, X₁, X₂) → l1(F, 0, X₂) :|: F ≤ 100 ∧ 1 ≤ F
  t₁₁: l0(X₀, X₁, X₂) → l2(F, X₁, X₂) :|: F ≤ 0
  t₁₂: l0(X₀, X₁, X₂) → l2(F, X₁, X₂) :|: 101 ≤ F
  t₁₃: l1(X₀, X₁, X₂) → l3(X₀, X₁, X₂) :|: 1+X₁ ≤ X₀ ∧ X₀+X₁ ≤ 200 ∧ X₀ ≤ 100 ∧ X₀ ≤ 100+X₁ ∧ X₁ ≤ 100 ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₁ ∧ X₁ ≤ X₀ ∧ 0 ≤ X₁
  t₁₅: l1(X₀, X₁, X₂) → l4(X₀, X₀-1, 0) :|: X₁ ≤ X₀ ∧ X₀ ≤ X₁ ∧ X₀+X₁ ≤ 200 ∧ X₀ ≤ 100 ∧ X₀ ≤ 100+X₁ ∧ X₁ ≤ 100 ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₁ ∧ 0 ≤ X₁
  t₁₆: l3(X₀, X₁, X₂) → l1(X₀, 1+X₁, X₂) :|: X₀+X₁ ≤ 199 ∧ X₀ ≤ 100 ∧ X₀ ≤ 100+X₁ ∧ X₁ ≤ 99 ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₁ ∧ 1+X₁ ≤ X₀ ∧ 0 ≤ X₁
  t₁₇: l3(X₀, X₁, X₂) → l4(X₀, X₁-1, 0) :|: X₀+X₁ ≤ 199 ∧ X₀ ≤ 100 ∧ X₀ ≤ 100+X₁ ∧ X₁ ≤ 99 ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₁ ∧ 1+X₁ ≤ X₀ ∧ 0 ≤ X₁
  t₁₈: l4(X₀, X₁, X₂) → l2(X₀, X₁, X₂) :|: X₁ ≤ X₂ ∧ X₀+X₁ ≤ 199 ∧ X₀+X₂ ≤ 199 ∧ X₁+X₂ ≤ 198 ∧ X₀ ≤ 101+X₁ ∧ X₀ ≤ 100 ∧ X₀ ≤ 100+X₂ ∧ X₁ ≤ 99 ∧ X₁ ≤ 99+X₂ ∧ X₂ ≤ 99 ∧ 0 ≤ 1+X₁ ∧ 0 ≤ 1+X₁+X₂ ∧ X₂ ≤ 1+X₁ ∧ 1 ≤ X₀ ∧ 1+X₁ ≤ X₀ ∧ 1 ≤ X₀+X₂ ∧ 1+X₂ ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₂
  t₁₉: l4(X₀, X₁, X₂) → l4(X₀, X₁, 1+X₂) :|: 1+X₂ ≤ X₁ ∧ X₀+X₁ ≤ 199 ∧ X₀+X₂ ≤ 199 ∧ X₁+X₂ ≤ 198 ∧ X₀ ≤ 101+X₁ ∧ X₀ ≤ 100 ∧ X₀ ≤ 100+X₂ ∧ X₁ ≤ 99 ∧ X₁ ≤ 99+X₂ ∧ X₂ ≤ 99 ∧ 0 ≤ 1+X₁ ∧ 0 ≤ 1+X₁+X₂ ∧ X₂ ≤ 1+X₁ ∧ 1 ≤ X₀ ∧ 1+X₁ ≤ X₀ ∧ 1 ≤ X₀+X₂ ∧ 1+X₂ ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₂


MPRF for transition t₁₃: l1(X₀, X₁, X₂) → l3(X₀, X₁, X₂) :|: 1+X₁ ≤ X₀ ∧ X₀+X₁ ≤ 200 ∧ X₀ ≤ 100 ∧ X₀ ≤ 100+X₁ ∧ X₁ ≤ 100 ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₁ ∧ X₁ ≤ X₀ ∧ 0 ≤ X₁ of depth 1:
  new bound:
    101 {O(1)}

  MPRF:
    • l1: [101-X₁]
    • l3: [100-X₁]




MPRF for transition t₁₆: l3(X₀, X₁, X₂) → l1(X₀, 1+X₁, X₂) :|: X₀+X₁ ≤ 199 ∧ X₀ ≤ 100 ∧ X₀ ≤ 100+X₁ ∧ X₁ ≤ 99 ∧ 1 ≤ X₀ ∧ 1 ≤ X₀+X₁ ∧ 1+X₁ ≤ X₀ ∧ 0 ≤ X₁ of depth 1:
  new bound:
    100 {O(1)}

  MPRF:
    • l1: [100-X₁]
    • l3: [100-X₁]




MPRF for transition t₁₉: l4(X₀, X₁, X₂) → l4(X₀, X₁, 1+X₂) :|: 1+X₂ ≤ X₁ ∧ X₀+X₁ ≤ 199 ∧ X₀+X₂ ≤ 199 ∧ X₁+X₂ ≤ 198 ∧ X₀ ≤ 101+X₁ ∧ X₀ ≤ 100 ∧ X₀ ≤ 100+X₂ ∧ X₁ ≤ 99 ∧ X₁ ≤ 99+X₂ ∧ X₂ ≤ 99 ∧ 0 ≤ 1+X₁ ∧ 0 ≤ 1+X₁+X₂ ∧ X₂ ≤ 1+X₁ ∧ 1 ≤ X₀ ∧ 1+X₁ ≤ X₀ ∧ 1 ≤ X₀+X₂ ∧ 1+X₂ ≤ X₀ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₂ of depth 1:
  new bound:
    200 {O(1)}

  MPRF:
    • l4: [100-X₂]




All Bounds
Timebounds
  Overall timebound:407 {O(1)}
    t₁₀: 1 {O(1)}
    t₁₁: 1 {O(1)}
    t₁₂: 1 {O(1)}
    t₁₃: 101 {O(1)}
    t₁₅: 1 {O(1)}
    t₁₆: 100 {O(1)}
    t₁₇: 1 {O(1)}
    t₁₈: 1 {O(1)}
    t₁₉: 200 {O(1)}


Costbounds
  Overall costbound: 407 {O(1)}
    t₁₀: 1 {O(1)}
    t₁₁: 1 {O(1)}
    t₁₂: 1 {O(1)}
    t₁₃: 101 {O(1)}
    t₁₅: 1 {O(1)}
    t₁₆: 100 {O(1)}
    t₁₇: 1 {O(1)}
    t₁₈: 1 {O(1)}
    t₁₉: 200 {O(1)}


Sizebounds
    t₁₀, X₀: 100 {O(1)}
    t₁₀, X₁: 0 {O(1)}
    t₁₀, X₂: X₂ {O(n)}
    t₁₁, X₁: X₁ {O(n)}
    t₁₁, X₂: X₂ {O(n)}
    t₁₂, X₁: X₁ {O(n)}
    t₁₂, X₂: X₂ {O(n)}
    t₁₃, X₀: 100 {O(1)}
    t₁₃, X₁: 99 {O(1)}
    t₁₃, X₂: X₂ {O(n)}
    t₁₅, X₀: 100 {O(1)}
    t₁₅, X₁: 99 {O(1)}
    t₁₅, X₂: 0 {O(1)}
    t₁₆, X₀: 100 {O(1)}
    t₁₆, X₁: 100 {O(1)}
    t₁₆, X₂: X₂ {O(n)}
    t₁₇, X₀: 100 {O(1)}
    t₁₇, X₁: 98 {O(1)}
    t₁₇, X₂: 0 {O(1)}
    t₁₈, X₀: 100 {O(1)}
    t₁₈, X₁: 99 {O(1)}
    t₁₈, X₂: 99 {O(1)}
    t₁₉, X₀: 100 {O(1)}
    t₁₉, X₁: 99 {O(1)}
    t₁₉, X₂: 99 {O(1)}

