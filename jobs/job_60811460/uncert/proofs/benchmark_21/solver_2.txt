WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [evalfbb2in/5,evalfbb3in/5,evalfbb4in/5]
1. recursive  : [evalfbb1in/9,evalfbb3in_loop_cont/10,evalfbb5in/9,evalfbb6in/9,evalfbb7in/9]
2. recursive  : [evalfbb6in_loop_cont/14,evalfbb8in/13,evalfbb9in/13,evalfbbin/13]
3. non_recursive  : [evalfstop/7]
4. non_recursive  : [evalfreturnin/7]
5. non_recursive  : [exit_location/1]
6. non_recursive  : [evalfbb9in_loop_cont/8]
7. non_recursive  : [evalfentryin/7]
8. non_recursive  : [evalfstart/7]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into evalfbb3in/5
1. SCC is partially evaluated into evalfbb6in/9
2. SCC is partially evaluated into evalfbb9in/13
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into evalfbb9in_loop_cont/8
7. SCC is partially evaluated into evalfentryin/7
8. SCC is partially evaluated into evalfstart/7

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations evalfbb3in/5 
* CE 15 is refined into CE [16] 
* CE 14 is refined into CE [17] 


### Cost equations --> "Loop" of evalfbb3in/5 
* CEs [16] --> Loop 16 
* CEs [17] --> Loop 17 

### Ranking functions of CR evalfbb3in(E,F,H,I,J) 

#### Partial ranking functions of CR evalfbb3in(E,F,H,I,J) 


### Specialization of cost equations evalfbb6in/9 
* CE 12 is refined into CE [18] 
* CE 11 is refined into CE [19] 
* CE 9 is refined into CE [20] 
* CE 13 is refined into CE [21] 
* CE 10 is refined into CE [22] 


### Cost equations --> "Loop" of evalfbb6in/9 
* CEs [22] --> Loop 18 
* CEs [18] --> Loop 19 
* CEs [19] --> Loop 20 
* CEs [20] --> Loop 21 
* CEs [21] --> Loop 22 

### Ranking functions of CR evalfbb6in(C,D,E,F,H,I,J,K,L) 
* RF of phase [18]: [-C/2+D/2,D/2-1/2]

#### Partial ranking functions of CR evalfbb6in(C,D,E,F,H,I,J,K,L) 
* Partial RF of phase [18]:
  - RF of loop [18:1]:
    -C/2+D/2
    D/2-1/2


### Specialization of cost equations evalfbb9in/13 
* CE 5 is refined into CE [23] 
* CE 3 is refined into CE [24,25,26] 
* CE 6 is refined into CE [27] 
* CE 4 is refined into CE [28,29,30,31] 


### Cost equations --> "Loop" of evalfbb9in/13 
* CEs [31] --> Loop 23 
* CEs [30] --> Loop 24 
* CEs [29] --> Loop 25 
* CEs [28] --> Loop 26 
* CEs [23] --> Loop 27 
* CEs [24] --> Loop 28 
* CEs [26] --> Loop 29 
* CEs [25] --> Loop 30 
* CEs [27] --> Loop 31 

### Ranking functions of CR evalfbb9in(A,B,C,D,E,F,H,I,J,K,L,M,N) 
* RF of phase [23,24,25,26]: [B/2-1/2]

#### Partial ranking functions of CR evalfbb9in(A,B,C,D,E,F,H,I,J,K,L,M,N) 
* Partial RF of phase [23,24,25,26]:
  - RF of loop [23:1]:
    A-2 depends on loops [25:1,26:1] 
  - RF of loop [23:1,24:1,25:1,26:1]:
    B/2-1/2
  - RF of loop [24:1]:
    A depends on loops [25:1,26:1] 
  - RF of loop [25:1]:
    -A+1 depends on loops [23:1,24:1] 


### Specialization of cost equations evalfbb9in_loop_cont/8 
* CE 7 is refined into CE [32] 
* CE 8 is refined into CE [33] 


### Cost equations --> "Loop" of evalfbb9in_loop_cont/8 
* CEs [32] --> Loop 32 
* CEs [33] --> Loop 33 

### Ranking functions of CR evalfbb9in_loop_cont(A,B,C,D,E,F,G,H) 

#### Partial ranking functions of CR evalfbb9in_loop_cont(A,B,C,D,E,F,G,H) 


### Specialization of cost equations evalfentryin/7 
* CE 2 is refined into CE [34,35,36,37,38,39,40,41,42] 


### Cost equations --> "Loop" of evalfentryin/7 
* CEs [38,39,40] --> Loop 34 
* CEs [36] --> Loop 35 
* CEs [35,37,42] --> Loop 36 
* CEs [41] --> Loop 37 
* CEs [34] --> Loop 38 

### Ranking functions of CR evalfentryin(A,B,C,D,E,F,H) 

#### Partial ranking functions of CR evalfentryin(A,B,C,D,E,F,H) 


### Specialization of cost equations evalfstart/7 
* CE 1 is refined into CE [43,44,45,46,47] 


### Cost equations --> "Loop" of evalfstart/7 
* CEs [47] --> Loop 39 
* CEs [46] --> Loop 40 
* CEs [45] --> Loop 41 
* CEs [44] --> Loop 42 
* CEs [43] --> Loop 43 

### Ranking functions of CR evalfstart(A,B,C,D,E,F,H) 

#### Partial ranking functions of CR evalfstart(A,B,C,D,E,F,H) 


Computing Bounds
=====================================

#### Cost of chains of evalfbb3in(E,F,H,I,J):
* Chain [17]: 0
  with precondition: [H=2,E=I,F=J,F>=E] 

* Chain [16]: 0
  with precondition: [H=3,F>=E] 


#### Cost of chains of evalfbb6in(C,D,E,F,H,I,J,K,L):
* Chain [[18],22]: 1*it(18)+0
  Such that:it(18) =< -C/2+D/2

  with precondition: [H=3,C>=1,D>=C+1] 

* Chain [[18],21]: 1*it(18)+0
  Such that:it(18) =< -C/2+D/2

  with precondition: [H=3,C>=1,D>=C+3] 

* Chain [[18],20]: 1*it(18)+0
  Such that:it(18) =< D/2-J/2

  with precondition: [H=4,C=I,C=K,J+1=L,C>=1,J>=C+1,D>=J+2] 

* Chain [[18],19]: 1*it(18)+0
  Such that:it(18) =< D/2-I/2

  with precondition: [H=4,C=I,C=K,J+1=L,C>=1,J+1>=C,C>=J,D>=J+2] 

* Chain [22]: 0
  with precondition: [H=3,C>=1] 

* Chain [21]: 0
  with precondition: [H=3,C>=1,D>=C+1] 

* Chain [20]: 0
  with precondition: [H=4,K=E,L=F,C=I,D=J,C>=1,D>=C+1] 

* Chain [19]: 0
  with precondition: [H=4,K=E,L=F,C=I,D=J,C>=1,C>=D] 


#### Cost of chains of evalfbb9in(A,B,C,D,E,F,H,I,J,K,L,M,N):
* Chain [[23,24,25,26],31]: 3*it(23)+1*it(24)+2*s(6)+0
  Such that:aux(19) =< A/2+B/4
aux(23) =< B/2
s(6) =< aux(19)
it(23) =< aux(23)
it(24) =< aux(23)

  with precondition: [H=3,B>=2] 

* Chain [[23,24,25,26],30]: 3*it(23)+1*it(24)+3*s(6)+0
  Such that:aux(24) =< A/2+B/4
aux(25) =< B/2
s(6) =< aux(24)
it(24) =< aux(24)
it(23) =< aux(25)
it(24) =< aux(25)

  with precondition: [H=3,B>=4,B+2*A>=4] 

* Chain [[23,24,25,26],29]: 3*it(23)+1*it(24)+3*s(6)+0
  Such that:aux(26) =< A/2+B/4
aux(27) =< B/2
s(6) =< aux(26)
it(24) =< aux(26)
it(23) =< aux(27)
it(24) =< aux(27)

  with precondition: [H=3,B>=4,B+2*A>=8] 

* Chain [[23,24,25,26],28]: 3*it(23)+1*it(24)+2*s(6)+0
  Such that:aux(19) =< A/2+B/4
aux(28) =< B/2
s(6) =< aux(19)
it(23) =< aux(28)
it(24) =< aux(28)

  with precondition: [H=3,B>=4] 

* Chain [[23,24,25,26],27]: 3*it(23)+1*it(24)+2*s(6)+0
  Such that:aux(19) =< A/2+B/4
aux(20) =< A/2+B/4-I/4-L/4
aux(21) =< B/2
aux(22) =< B/2+I/2-L/2
s(6) =< aux(19)
it(24) =< aux(20)
s(6) =< aux(20)
it(23) =< aux(21)
it(24) =< aux(21)
it(23) =< aux(22)
it(24) =< aux(22)

  with precondition: [H=5,J+1=K,I+J=L,1>=J,J>=0,B>=J+2,B+2*A>=2*I+J] 

* Chain [31]: 0
  with precondition: [H=3] 

* Chain [30]: 1*s(8)+0
  Such that:s(8) =< A/2

  with precondition: [H=3,A>=1,B>=2] 

* Chain [29]: 1*s(9)+0
  Such that:s(9) =< A/2

  with precondition: [H=3,A>=3,B>=2] 

* Chain [28]: 0
  with precondition: [H=3,B>=2] 

* Chain [27]: 0
  with precondition: [H=5,I=A,K=C,L=D,M=E,N=F,B=J,1>=B] 


#### Cost of chains of evalfbb9in_loop_cont(A,B,C,D,E,F,G,H):
* Chain [33]: 0
  with precondition: [A=3] 

* Chain [32]: 0
  with precondition: [A=5] 


#### Cost of chains of evalfentryin(A,B,C,D,E,F,H):
* Chain [38]: 0
  with precondition: [] 

* Chain [37]: 0
  with precondition: [1>=B] 

* Chain [36]: 9*s(15)+4*s(18)+0
  Such that:aux(30) =< B/2
aux(31) =< 3/4*B
s(15) =< aux(30)
s(18) =< aux(31)

  with precondition: [B>=2] 

* Chain [35]: 1*s(27)+0
  Such that:s(27) =< B/2

  with precondition: [B>=3] 

* Chain [34]: 8*s(30)+10*s(31)+2*s(36)+0
  Such that:aux(32) =< B/2
aux(33) =< 3/4*B
s(30) =< aux(33)
s(31) =< aux(32)
s(36) =< aux(33)
s(36) =< aux(32)

  with precondition: [B>=4] 


#### Cost of chains of evalfstart(A,B,C,D,E,F,H):
* Chain [43]: 0
  with precondition: [] 

* Chain [42]: 0
  with precondition: [1>=B] 

* Chain [41]: 9*s(45)+4*s(46)+0
  Such that:s(43) =< B/2
s(44) =< 3/4*B
s(45) =< s(43)
s(46) =< s(44)

  with precondition: [B>=2] 

* Chain [40]: 1*s(47)+0
  Such that:s(47) =< B/2

  with precondition: [B>=3] 

* Chain [39]: 8*s(50)+10*s(51)+2*s(52)+0
  Such that:s(48) =< B/2
s(49) =< 3/4*B
s(50) =< s(49)
s(51) =< s(48)
s(52) =< s(49)
s(52) =< s(48)

  with precondition: [B>=4] 


Closed-form bounds of evalfstart(A,B,C,D,E,F,H): 
-------------------------------------
* Chain [43] with precondition: [] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [42] with precondition: [1>=B] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [41] with precondition: [B>=2] 
    - Upper bound: 15/2*B 
    - Complexity: n 
* Chain [40] with precondition: [B>=3] 
    - Upper bound: B/2 
    - Complexity: n 
* Chain [39] with precondition: [B>=4] 
    - Upper bound: 25/2*B 
    - Complexity: n 

### Maximum cost of evalfstart(A,B,C,D,E,F,H): nat(B/2)*8+nat(3/4*B)*4+(nat(3/4*B)*6+nat(B/2))+nat(B/2) 
Asymptotic class: n 
* Total analysis performed in 243 ms.

