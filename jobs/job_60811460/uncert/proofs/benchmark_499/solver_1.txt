WORST_CASE(Omega(n^1),O(n^1))

# LoAT Proof:
WORST_CASE(Omega(n^1),?)

WORST_CASE(Omega(n^1),?)
Initial ITS

Start location: f2

Location map:
LoAT_sink -> 0
f2 -> 1
f1 -> 2
f300 -> 3

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-2+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
   2: (-it2+i5 >= 0 /\ -2+i1 == 0 /\ i4-i5 == 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i5'=i4
   3: (-2+i1 == 0 /\ i4-i5 >= 0 /\ -1+i4-i5 >= 0) /\ i1'=3, i3'=1+i3, i6'=it3
   4: (-2+i1 == 0 /\ i4-i5 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=1+i3, i6'=it4

Dependency graph:
0 -> 1, 0 -> 2, 0 -> 3, 0 -> 4
1 -> 1, 1 -> 2, 1 -> 3, 1 -> 4
2 -> 1, 2 -> 2, 2 -> 3, 2 -> 4

Preprocessed Transitions

	Eliminated Temporary Variables

	Original rule:
	(-it2+i5 >= 0 /\ -2+i1 == 0 /\ i4-i5 == 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i5'=i4
	New rule:
	(-2+i1 == 0 /\ i4-i5 == 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i5'=i4

Start location: f2

Location map:
LoAT_sink -> 0
f2 -> 1
f1 -> 2
f300 -> 3

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-2+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
   3: (-2+i1 == 0 /\ i4-i5 >= 0 /\ -1+i4-i5 >= 0) /\ i1'=3, i3'=1+i3, i6'=it3
   4: (-2+i1 == 0 /\ i4-i5 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=1+i3, i6'=it4
   5: (-2+i1 == 0 /\ i4-i5 == 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i5'=i4

Dependency graph:
0 -> 1, 0 -> 3, 0 -> 4, 0 -> 5
1 -> 1, 1 -> 3, 1 -> 4, 1 -> 5
5 -> 1, 5 -> 3, 5 -> 4, 5 -> 5

Refined Dependency Graph

	Removed the following edges: 0 -> 4, 1 -> 3, 1 -> 4, 5 -> 1, 5 -> 4, 5 -> 5

Start location: f2

Location map:
LoAT_sink -> 0
f2 -> 1
f1 -> 2
f300 -> 3

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-2+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
   3: (-2+i1 == 0 /\ i4-i5 >= 0 /\ -1+i4-i5 >= 0) /\ i1'=3, i3'=1+i3, i6'=it3
   4: (-2+i1 == 0 /\ i4-i5 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=1+i3, i6'=it4
   5: (-2+i1 == 0 /\ i4-i5 == 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i5'=i4

Dependency graph:
0 -> 1, 0 -> 3, 0 -> 5
1 -> 1, 1 -> 5
5 -> 3

Step with 0

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 5

	Trace

	0[(-1+i1 == 0)]
	5[(-2+i1 == 0 /\ i4-i5 == 0)]
	
	Blocked

	{}
	{}
	{}
	
Step with 3

	Trace

	0[(-1+i1 == 0)]
	5[(-2+i1 == 0 /\ i4-i5 == 0)]
	3[(-2+i1 == 0 /\ i4-i5 >= 0 /\ -1+i4-i5 >= 0)]
	
	Blocked

	{}
	{}
	{}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	5[(-2+i1 == 0 /\ i4-i5 == 0)]
	
	Blocked

	{}
	{}
	{3[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{5[T]}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	1[(-2+i1 == 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{5[T]}
	{}
	
Poly(n^1)

Accelerate

	Loop Acceleration

	Original rule:
	(-2+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
	New rule:
	(-it26-i4+i5 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+it26 >= 0) /\ i1'=i1, i3'=it26+i3, i4'=it26+i4

		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		-1-i4+i5 >= 0 [0]: montonic decrease yields -it26-i4+i5 >= 0
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0, -1-i4+i5 >= 0 -> -it26-i4+i5 >= 0}

	Removed Trivial Updates

	Original rule:
	(-it26-i4+i5 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+it26 >= 0) /\ i1'=i1, i3'=it26+i3, i4'=it26+i4
	New rule:
	(-it26-i4+i5 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+it26 >= 0) /\ i3'=it26+i3, i4'=it26+i4
	
	Instantiation

	Original rule:
	(-it26-i4+i5 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+it26 >= 0) /\ i3'=it26+i3, i4'=it26+i4
	New rule:
	(0 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3-i4+i5, i4'=i5

Start location: f2

Location map:
LoAT_sink -> 0
f2 -> 1
f1 -> 2
f300 -> 3

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-2+i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=2, i3'=1+i3, i4'=1+i4
   3: (-2+i1 == 0 /\ i4-i5 >= 0 /\ -1+i4-i5 >= 0) /\ i1'=3, i3'=1+i3, i6'=it3
   4: (-2+i1 == 0 /\ i4-i5 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=3, i3'=1+i3, i6'=it4
   5: (-2+i1 == 0 /\ i4-i5 == 0) /\ i1'=2, i3'=1+i3, i4'=1+i4, i5'=i4
   6: (0 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i3'=i3-i4+i5, i4'=i5

Dependency graph:
0 -> 1, 0 -> 3, 0 -> 5, 0 -> 6
1 -> 1, 1 -> 5, 1 -> 6
5 -> 3
6 -> 1, 6 -> 5

	Trace

	0[(-1+i1 == 0)]
	6[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{5[T]}
	{1[T], 6[T]}
	
Step with 5

	Trace

	0[(-1+i1 == 0)]
	6[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1-i4+i5 >= 0)]
	5[(-2+i1 == 0 /\ i4-i5 == 0)]
	
	Blocked

	{}
	{5[T]}
	{1[T], 6[T]}
	{}
	
Step with 3

	Trace

	0[(-1+i1 == 0)]
	6[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1-i4+i5 >= 0)]
	5[(-2+i1 == 0 /\ i4-i5 == 0)]
	3[(-2+i1 == 0 /\ i4-i5 >= 0 /\ -1+i4-i5 >= 0)]
	
	Blocked

	{}
	{5[T]}
	{1[T], 6[T]}
	{}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	6[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1-i4+i5 >= 0)]
	5[(-2+i1 == 0 /\ i4-i5 == 0)]
	
	Blocked

	{}
	{5[T]}
	{1[T], 6[T]}
	{3[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	6[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{5[T]}
	{1[T], 5[T], 6[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{5[T], 6[T]}
	
Step with 3

	Trace

	0[(-1+i1 == 0)]
	3[(-2+i1 == 0 /\ i4-i5 >= 0 /\ -1+i4-i5 >= 0)]
	
	Blocked

	{}
	{5[T], 6[T]}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{3[T], 5[T], 6[T]}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	1[(-2+i1 == 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{3[T], 5[T], 6[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{1[T], 3[T], 5[T], 6[T]}
	
Backtrack

	Trace

	Blocked

	{0[T]}
	
Accept

Poly(n^1)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  D
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂) → l1(X₀, X₁, X₂)
  t₁: l1(X₀, X₁, X₂) → l1(1+X₀, X₁, X₂) :|: 1+X₀ ≤ X₁
  t₂: l1(X₀, X₁, X₂) → l1(1+X₀, X₀, X₂) :|: D ≤ X₁ ∧ X₁ ≤ X₀ ∧ X₀ ≤ X₁
  t₃: l1(X₀, X₁, X₂) → l2(X₀, X₁, D) :|: 1+X₁ ≤ X₀ ∧ X₁ ≤ X₀
  t₄: l1(X₀, X₁, X₂) → l2(X₀, X₁, D) :|: 1+X₀ ≤ X₁ ∧ X₁ ≤ X₀


Preprocessing
  Cut unsatisfiable transition [t₄: l1→l2]


  Eliminate variables [X₂] that do not contribute to the problem


  Found invariant 1+X₁ ≤ X₀ for location l2


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁
  Temp_Vars:  D
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₅: l0(X₀, X₁) → l1(X₀, X₁)
  t₆: l1(X₀, X₁) → l1(1+X₀, X₁) :|: 1+X₀ ≤ X₁
  t₇: l1(X₀, X₁) → l1(1+X₀, X₀) :|: D ≤ X₁ ∧ X₁ ≤ X₀ ∧ X₀ ≤ X₁
  t₈: l1(X₀, X₁) → l2(X₀, X₁) :|: 1+X₁ ≤ X₀ ∧ X₁ ≤ X₀


MPRF for transition t₆: l1(X₀, X₁) → l1(1+X₀, X₁) :|: 1+X₀ ≤ X₁ of depth 1:
  new bound:
    X₀+X₁ {O(n)}

  MPRF:
    • l1: [X₁-X₀]




MPRF for transition t₇: l1(X₀, X₁) → l1(1+X₀, X₀) :|: D ≤ X₁ ∧ X₁ ≤ X₀ ∧ X₀ ≤ X₁ of depth 1:
  new bound:
    X₀+X₁+1 {O(n)}

  MPRF:
    • l1: [1+X₁-X₀]




All Bounds
Timebounds
  Overall timebound:2⋅X₀+2⋅X₁+3 {O(n)}
    t₅: 1 {O(1)}
    t₆: X₀+X₁ {O(n)}
    t₇: X₀+X₁+1 {O(n)}
    t₈: 1 {O(1)}


Costbounds
  Overall costbound: 2⋅X₀+2⋅X₁+3 {O(n)}
    t₅: 1 {O(1)}
    t₆: X₀+X₁ {O(n)}
    t₇: X₀+X₁+1 {O(n)}
    t₈: 1 {O(1)}


Sizebounds
    t₅, X₀: X₀ {O(n)}
    t₅, X₁: X₁ {O(n)}
    t₆, X₀: 2⋅X₀+X₁ {O(n)}
    t₆, X₁: X₁ {O(n)}
    t₇, X₀: 3⋅X₀+X₁+2 {O(n)}
    t₇, X₁: 3⋅X₀+X₁ {O(n)}
    t₈, X₀: 4⋅X₀+X₁+2 {O(n)}
    t₈, X₁: 2⋅X₁+3⋅X₀ {O(n)}

