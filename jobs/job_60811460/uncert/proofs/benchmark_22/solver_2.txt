WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [evalfbb1in/6,evalfbb2in/6,evalfbb3in/6,evalfbbin/6]
1. non_recursive  : [evalfstop/4]
2. non_recursive  : [evalfreturnin/4]
3. non_recursive  : [exit_location/1]
4. non_recursive  : [evalfbb3in_loop_cont/5]
5. non_recursive  : [evalfentryin/4]
6. non_recursive  : [evalfstart/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into evalfbb3in/6
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into evalfbb3in_loop_cont/5
5. SCC is partially evaluated into evalfentryin/4
6. SCC is partially evaluated into evalfstart/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations evalfbb3in/6 
* CE 6 is refined into CE [9] 
* CE 5 is refined into CE [10] 
* CE 4 is refined into CE [11] 
* CE 3 is refined into CE [12] 


### Cost equations --> "Loop" of evalfbb3in/6 
* CEs [11] --> Loop 9 
* CEs [12] --> Loop 10 
* CEs [9] --> Loop 11 
* CEs [10] --> Loop 12 

### Ranking functions of CR evalfbb3in(A,B,C,D,E,F) 
* RF of phase [9]: [-B+100]
* RF of phase [10]: [-A+C]

#### Partial ranking functions of CR evalfbb3in(A,B,C,D,E,F) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    -B+100
* Partial RF of phase [10]:
  - RF of loop [10:1]:
    -A+C


### Specialization of cost equations evalfbb3in_loop_cont/5 
* CE 8 is refined into CE [13] 
* CE 7 is refined into CE [14] 


### Cost equations --> "Loop" of evalfbb3in_loop_cont/5 
* CEs [13] --> Loop 13 
* CEs [14] --> Loop 14 

### Ranking functions of CR evalfbb3in_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR evalfbb3in_loop_cont(A,B,C,D,E) 


### Specialization of cost equations evalfentryin/4 
* CE 2 is refined into CE [15,16,17,18,19] 


### Cost equations --> "Loop" of evalfentryin/4 
* CEs [15,16] --> Loop 15 
* CEs [17,18] --> Loop 16 
* CEs [19] --> Loop 17 

### Ranking functions of CR evalfentryin(A,B,C,D) 

#### Partial ranking functions of CR evalfentryin(A,B,C,D) 


### Specialization of cost equations evalfstart/4 
* CE 1 is refined into CE [20,21,22] 


### Cost equations --> "Loop" of evalfstart/4 
* CEs [22] --> Loop 18 
* CEs [21] --> Loop 19 
* CEs [20] --> Loop 20 

### Ranking functions of CR evalfstart(A,B,C,D) 

#### Partial ranking functions of CR evalfstart(A,B,C,D) 


Computing Bounds
=====================================

#### Cost of chains of evalfbb3in(A,B,C,D,E,F):
* Chain [[10],[9],12]: 1*it(9)+1*it(10)+0
  Such that:it(9) =< 100
it(10) =< -A+E

  with precondition: [B=0,D=2,F=100,C=E,A>=0,C>=A+1] 

* Chain [[10],[9],11]: 1*it(9)+1*it(10)+0
  Such that:it(9) =< 100
it(10) =< -A+C

  with precondition: [B=0,D=3,A>=0,C>=A+1] 

* Chain [[10],11]: 1*it(10)+0
  Such that:it(10) =< -A+C

  with precondition: [B=0,D=3,A>=0,C>=A+1] 

* Chain [[9],12]: 1*it(9)+0
  Such that:it(9) =< -B+100

  with precondition: [D=2,F=100,A=E,99>=B,A>=0,B>=0,A>=C] 

* Chain [[9],11]: 1*it(9)+0
  Such that:it(9) =< -B+100

  with precondition: [D=3,99>=B,A>=0,B>=0,A>=C] 

* Chain [11]: 0
  with precondition: [D=3,A>=0,B>=0] 


#### Cost of chains of evalfbb3in_loop_cont(A,B,C,D,E):
* Chain [14]: 0
  with precondition: [A=2] 

* Chain [13]: 0
  with precondition: [A=3] 


#### Cost of chains of evalfentryin(A,B,C,D):
* Chain [17]: 0
  with precondition: [] 

* Chain [16]: 200
  with precondition: [0>=C] 

* Chain [15]: 2*s(6)+3*s(7)+0
  Such that:aux(3) =< 100
aux(4) =< C
s(6) =< aux(3)
s(7) =< aux(4)

  with precondition: [C>=1] 


#### Cost of chains of evalfstart(A,B,C,D):
* Chain [20]: 0
  with precondition: [] 

* Chain [19]: 200
  with precondition: [0>=C] 

* Chain [18]: 2*s(13)+3*s(14)+0
  Such that:s(11) =< 100
s(12) =< C
s(13) =< s(11)
s(14) =< s(12)

  with precondition: [C>=1] 


Closed-form bounds of evalfstart(A,B,C,D): 
-------------------------------------
* Chain [20] with precondition: [] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [19] with precondition: [0>=C] 
    - Upper bound: 200 
    - Complexity: constant 
* Chain [18] with precondition: [C>=1] 
    - Upper bound: 3*C+200 
    - Complexity: n 

### Maximum cost of evalfstart(A,B,C,D): max([200,nat(C)*3+200]) 
Asymptotic class: n 
* Total analysis performed in 65 ms.

