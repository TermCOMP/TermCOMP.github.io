MAYBE

# LoAT Proof:
Initial ITS

Start location: l0

Location map:
LoAT_sink -> 0
l0 -> 1
l1 -> 2

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-1+i5^2 > 0 /\ -2+i1 == 0 /\ i6*i4+2*i4 > 0) /\ i1'=2, i3'=1+i3, i5'=-4*i6+3*i5, i6'=-3*i6+4*i5, i7'=5*i7, i8'=-i4^2+5*i8

Dependency graph:
0 -> 1
1 -> 1

Unrolled Loops

	Unrolling

	Original rule:
	(-1+i5^2 > 0 /\ -2+i1 == 0 /\ i6*i4+2*i4 > 0) /\ i1'=2, i3'=1+i3, i5'=-4*i6+3*i5, i6'=-3*i6+4*i5, i7'=5*i7, i8'=-i4^2+5*i8
	New rule:
	(0 == 0 /\ -1+i5^2 > 0 /\ -2+i1 == 0 /\ -1+(4*i6-3*i5)^2 > 0 /\ 2*i4-i4*(3*i6-4*i5) > 0 /\ i6*i4+2*i4 > 0) /\ i1'=2, i3'=2+i3, i5'=-7*i5, i6'=-7*i6, i7'=25*i7, i8'=-6*i4^2+25*i8
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+i5^2 > 0 /\ -2+i1 == 0 /\ -1+(4*i6-3*i5)^2 > 0 /\ 2*i4-i4*(3*i6-4*i5) > 0 /\ i6*i4+2*i4 > 0) /\ i1'=2, i3'=2+i3, i5'=-7*i5, i6'=-7*i6, i7'=25*i7, i8'=-6*i4^2+25*i8
	New rule:
	(-1+i5^2 > 0 /\ -2+i1 == 0 /\ -1+(4*i6-3*i5)^2 > 0 /\ 2*i4-i4*(3*i6-4*i5) > 0 /\ i6*i4+2*i4 > 0) /\ i1'=2, i3'=2+i3, i5'=-7*i5, i6'=-7*i6, i7'=25*i7, i8'=-6*i4^2+25*i8

Start location: l0

Location map:
LoAT_sink -> 0
l0 -> 1
l1 -> 2

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-1+i5^2 > 0 /\ -2+i1 == 0 /\ i6*i4+2*i4 > 0) /\ i1'=2, i3'=1+i3, i5'=-4*i6+3*i5, i6'=-3*i6+4*i5, i7'=5*i7, i8'=-i4^2+5*i8
   2: (-1+i5^2 > 0 /\ -2+i1 == 0 /\ -1+(4*i6-3*i5)^2 > 0 /\ 2*i4-i4*(3*i6-4*i5) > 0 /\ i6*i4+2*i4 > 0) /\ i1'=2, i3'=2+i3, i5'=-7*i5, i6'=-7*i6, i7'=25*i7, i8'=-6*i4^2+25*i8

Dependency graph:
0 -> 1, 0 -> 2
1 -> 1, 1 -> 2
2 -> 1, 2 -> 2

Refined Dependency Graph

	Removed the following edges: 2 -> 2

Start location: l0

Location map:
LoAT_sink -> 0
l0 -> 1
l1 -> 2

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-1+i5^2 > 0 /\ -2+i1 == 0 /\ i6*i4+2*i4 > 0) /\ i1'=2, i3'=1+i3, i5'=-4*i6+3*i5, i6'=-3*i6+4*i5, i7'=5*i7, i8'=-i4^2+5*i8
   2: (-1+i5^2 > 0 /\ -2+i1 == 0 /\ -1+(4*i6-3*i5)^2 > 0 /\ 2*i4-i4*(3*i6-4*i5) > 0 /\ i6*i4+2*i4 > 0) /\ i1'=2, i3'=2+i3, i5'=-7*i5, i6'=-7*i6, i7'=25*i7, i8'=-6*i4^2+25*i8

Dependency graph:
0 -> 1, 0 -> 2
1 -> 1, 1 -> 2
2 -> 1

Step with 0

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 2

	Trace

	0[(-1+i1 == 0)]
	2[(-1+i5^2 > 0 /\ -2+i1 == 0 /\ -1+(4*i6-3*i5)^2 > 0 /\ 2*i4-i4*(3*i6-4*i5) > 0 /\ i6*i4+2*i4 > 0)]
	
	Blocked

	{}
	{}
	{}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	2[(-1+i5^2 > 0 /\ -2+i1 == 0 /\ -1+(4*i6-3*i5)^2 > 0 /\ 2*i4-i4*(3*i6-4*i5) > 0 /\ i6*i4+2*i4 > 0)]
	1[(-1+i5^2 > 0 /\ -2+i1 == 0 /\ i6*i4+2*i4 > 0)]
	
	Blocked

	{}
	{}
	{}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	2[(-1+i5^2 > 0 /\ -2+i1 == 0 /\ -1+(4*i6-3*i5)^2 > 0 /\ 2*i4-i4*(3*i6-4*i5) > 0 /\ i6*i4+2*i4 > 0)]
	
	Blocked

	{}
	{}
	{1[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{2[T]}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	1[(-1+i5^2 > 0 /\ -2+i1 == 0 /\ i6*i4+2*i4 > 0)]
	
	Blocked

	{}
	{2[T]}
	{}
	
Step with 2

	Trace

	0[(-1+i1 == 0)]
	1[(-1+i5^2 > 0 /\ -2+i1 == 0 /\ i6*i4+2*i4 > 0)]
	2[(-1+i5^2 > 0 /\ -2+i1 == 0 /\ -1+(4*i6-3*i5)^2 > 0 /\ 2*i4-i4*(3*i6-4*i5) > 0 /\ i6*i4+2*i4 > 0)]
	
	Blocked

	{}
	{2[T]}
	{}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	1[(-1+i5^2 > 0 /\ -2+i1 == 0 /\ i6*i4+2*i4 > 0)]
	
	Blocked

	{}
	{2[T]}
	{2[T]}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	1[(-1+i5^2 > 0 /\ -2+i1 == 0 /\ i6*i4+2*i4 > 0)]
	1[(-1+i5^2 > 0 /\ -2+i1 == 0 /\ i6*i4+2*i4 > 0)]
	
	Blocked

	{}
	{2[T]}
	{2[T]}
	{}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	1[(-1+i5^2 > 0 /\ -2+i1 == 0 /\ i6*i4+2*i4 > 0)]
	1[(-1+i5^2 > 0 /\ -2+i1 == 0 /\ i6*i4+2*i4 > 0)]
	1[(-1+i5^2 > 0 /\ -2+i1 == 0 /\ i6*i4+2*i4 > 0)]
	
	Blocked

	{}
	{2[T]}
	{2[T]}
	{2[T]}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	1[(-1+i5^2 > 0 /\ -2+i1 == 0 /\ i6*i4+2*i4 > 0)]
	1[(-1+i5^2 > 0 /\ -2+i1 == 0 /\ i6*i4+2*i4 > 0)]
	
	Blocked

	{}
	{2[T]}
	{2[T]}
	{1[T], 2[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	1[(-1+i5^2 > 0 /\ -2+i1 == 0 /\ i6*i4+2*i4 > 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T], 2[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{1[T], 2[T]}
	
Backtrack

	Trace

	Blocked

	{0[T]}
	
Accept

Constant


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
MAYBE


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄
  Temp_Vars:  
  Locations:  l0, l1
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃, X₄) → l1(X₀, X₁, X₂, X₃, X₄)
  t₁: l1(X₀, X₁, X₂, X₃, X₄) → l1(X₀, 3⋅X₁-4⋅X₂, 4⋅X₁-3⋅X₂, 5⋅X₃, 5⋅X₄-(X₀)²) :|: 1 ≤ 2⋅X₀+X₀*X₂ ∧ 2 ≤ (X₁)²


Preprocessing
  Eliminate variables [X₃; X₄] that do not contribute to the problem


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  
  Locations:  l0, l1
  Return Locations:  
  Transitions:
  t₂: l0(X₀, X₁, X₂) → l1(X₀, X₁, X₂)
  t₃: l1(X₀, X₁, X₂) → l1(X₀, 3⋅X₁-4⋅X₂, 4⋅X₁-3⋅X₂) :|: 1 ≤ 2⋅X₀+X₀*X₂ ∧ 2 ≤ (X₁)²


All Bounds
Timebounds
  Overall timebound:inf {Infinity}
    t₂: 1 {O(1)}
    t₃: inf {Infinity}


Costbounds
  Overall costbound: inf {Infinity}
    t₂: 1 {O(1)}
    t₃: inf {Infinity}


Sizebounds
    t₂, X₀: X₀ {O(n)}
    t₂, X₁: X₁ {O(n)}
    t₂, X₂: X₂ {O(n)}
    t₃, X₀: X₀ {O(n)}

