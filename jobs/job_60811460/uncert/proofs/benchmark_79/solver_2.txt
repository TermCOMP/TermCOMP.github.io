WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [evalterminatebb1in/7,evalterminatebbin/7]
1. non_recursive  : [evalterminatestop/4]
2. non_recursive  : [evalterminatereturnin/4]
3. non_recursive  : [exit_location/1]
4. non_recursive  : [evalterminatebb1in_loop_cont/5]
5. non_recursive  : [evalterminateentryin/4]
6. non_recursive  : [evalterminatestart/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into evalterminatebb1in/7
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into evalterminatebb1in_loop_cont/5
5. SCC is partially evaluated into evalterminateentryin/4
6. SCC is partially evaluated into evalterminatestart/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations evalterminatebb1in/7 
* CE 6 is refined into CE [9] 
* CE 5 is refined into CE [10] 
* CE 4 is refined into CE [11] 
* CE 3 is refined into CE [12] 


### Cost equations --> "Loop" of evalterminatebb1in/7 
* CEs [12] --> Loop 9 
* CEs [9] --> Loop 10 
* CEs [10] --> Loop 11 
* CEs [11] --> Loop 12 

### Ranking functions of CR evalterminatebb1in(A,B,C,D,E,F,G) 
* RF of phase [9]: [A/2-B/2-C/2+101/2]

#### Partial ranking functions of CR evalterminatebb1in(A,B,C,D,E,F,G) 
* Partial RF of phase [9]:
  - RF of loop [9:1]:
    A/2-B/2-C/2+101/2


### Specialization of cost equations evalterminatebb1in_loop_cont/5 
* CE 8 is refined into CE [13] 
* CE 7 is refined into CE [14] 


### Cost equations --> "Loop" of evalterminatebb1in_loop_cont/5 
* CEs [13] --> Loop 13 
* CEs [14] --> Loop 14 

### Ranking functions of CR evalterminatebb1in_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR evalterminatebb1in_loop_cont(A,B,C,D,E) 


### Specialization of cost equations evalterminateentryin/4 
* CE 2 is refined into CE [15,16,17,18,19,20] 


### Cost equations --> "Loop" of evalterminateentryin/4 
* CEs [16] --> Loop 15 
* CEs [15] --> Loop 16 
* CEs [18] --> Loop 17 
* CEs [20] --> Loop 18 
* CEs [17] --> Loop 19 
* CEs [19] --> Loop 20 

### Ranking functions of CR evalterminateentryin(A,B,C,D) 

#### Partial ranking functions of CR evalterminateentryin(A,B,C,D) 


### Specialization of cost equations evalterminatestart/4 
* CE 1 is refined into CE [21,22,23,24,25,26] 


### Cost equations --> "Loop" of evalterminatestart/4 
* CEs [26] --> Loop 21 
* CEs [25] --> Loop 22 
* CEs [24] --> Loop 23 
* CEs [23] --> Loop 24 
* CEs [22] --> Loop 25 
* CEs [21] --> Loop 26 

### Ranking functions of CR evalterminatestart(A,B,C,D) 

#### Partial ranking functions of CR evalterminatestart(A,B,C,D) 


Computing Bounds
=====================================

#### Cost of chains of evalterminatebb1in(A,B,C,D,E,F,G):
* Chain [[9],12]: 1*it(9)+0
  Such that:it(9) =< A/2-B/2-C/2+101/2
it(9) =< -B-C+F+G

  with precondition: [D=2,A+B+C=E+F+G,100>=B,F>=101,A>=C,A>=E+1,E+1>=F] 

* Chain [[9],11]: 1*it(9)+0
  Such that:it(9) =< A/2-B/2-C/2+101/2
it(9) =< -B-C+F+G

  with precondition: [D=2,A+B+C=E+F+G,100>=B,A>=C,A>=E+1,E+1>=F,C+2*A>=2*E+F+2,A+B+C>=2*E+F+1,E+F+101>=A+B+C] 

* Chain [[9],10]: 1*it(9)+0
  Such that:it(9) =< A/2-B/2-C/2+101/2

  with precondition: [D=3,100>=B,A>=C] 

* Chain [12]: 0
  with precondition: [D=2,E=A,G=C,B=F,B>=101] 

* Chain [11]: 0
  with precondition: [D=2,F=B,A=E,C=G,C>=A+1] 

* Chain [10]: 0
  with precondition: [D=3] 


#### Cost of chains of evalterminatebb1in_loop_cont(A,B,C,D,E):
* Chain [14]: 0
  with precondition: [A=2] 

* Chain [13]: 0
  with precondition: [A=3] 


#### Cost of chains of evalterminateentryin(A,B,C,D):
* Chain [20]: 0
  with precondition: [] 

* Chain [19]: 1*s(1)+0
  Such that:s(1) =< -A/2+B/2-C/2+101/2
s(1) =< B

  with precondition: [100>=A,B>=101,B>=C] 

* Chain [18]: 1*s(2)+0
  Such that:s(2) =< -A/2+B/2-C/2+101/2

  with precondition: [100>=A,B>=C] 

* Chain [17]: 1*s(3)+0
  Such that:s(3) =< -A/2+B/2-C/2+101/2

  with precondition: [100>=A,B>=C,302>=A+B+C] 

* Chain [16]: 0
  with precondition: [A>=101] 

* Chain [15]: 0
  with precondition: [C>=B+1] 


#### Cost of chains of evalterminatestart(A,B,C,D):
* Chain [26]: 0
  with precondition: [] 

* Chain [25]: 1*s(4)+0
  Such that:s(4) =< -A/2+B/2-C/2+101/2
s(4) =< B

  with precondition: [100>=A,B>=101,B>=C] 

* Chain [24]: 1*s(5)+0
  Such that:s(5) =< -A/2+B/2-C/2+101/2

  with precondition: [100>=A,B>=C] 

* Chain [23]: 1*s(6)+0
  Such that:s(6) =< -A/2+B/2-C/2+101/2

  with precondition: [100>=A,B>=C,302>=A+B+C] 

* Chain [22]: 0
  with precondition: [A>=101] 

* Chain [21]: 0
  with precondition: [C>=B+1] 


Closed-form bounds of evalterminatestart(A,B,C,D): 
-------------------------------------
* Chain [26] with precondition: [] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [25] with precondition: [100>=A,B>=101,B>=C] 
    - Upper bound: -A/2+B/2-C/2+101/2 
    - Complexity: n 
* Chain [24] with precondition: [100>=A,B>=C] 
    - Upper bound: -A/2+B/2-C/2+101/2 
    - Complexity: n 
* Chain [23] with precondition: [100>=A,B>=C,302>=A+B+C] 
    - Upper bound: -A/2+B/2-C/2+101/2 
    - Complexity: n 
* Chain [22] with precondition: [A>=101] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [21] with precondition: [C>=B+1] 
    - Upper bound: 0 
    - Complexity: constant 

### Maximum cost of evalterminatestart(A,B,C,D): nat(-A/2+B/2-C/2+101/2) 
Asymptotic class: n 
* Total analysis performed in 53 ms.

