WORST_CASE(?,O(1))

# LoAT Proof:
Initial ITS

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f7 -> 2
f19 -> 3

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=it2, i5'=it2, i6'=10, i7'=0
   1: (-2+i1 == 0 /\ -1+i6-i7 >= 0) /\ i1'=2, i3'=1+i3, i7'=1+i7, i8'=it3
   2: (-2+i1 == 0 /\ -i6+i7 >= 0) /\ i1'=3, i3'=1+i3

Dependency graph:
0 -> 1, 0 -> 2
1 -> 1, 1 -> 2

Refined Dependency Graph

	Removed the following edges: 0 -> 2

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f7 -> 2
f19 -> 3

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=it2, i5'=it2, i6'=10, i7'=0
   1: (-2+i1 == 0 /\ -1+i6-i7 >= 0) /\ i1'=2, i3'=1+i3, i7'=1+i7, i8'=it3
   2: (-2+i1 == 0 /\ -i6+i7 >= 0) /\ i1'=3, i3'=1+i3

Dependency graph:
0 -> 1
1 -> 1, 1 -> 2

Step with 0

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	1[(-2+i1 == 0 /\ -1+i6-i7 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Accelerate

	Loop Acceleration

	Original rule:
	(-2+i1 == 0 /\ -1+i6-i7 >= 0) /\ i1'=2, i3'=1+i3, i7'=1+i7, i8'=it3
	New rule:
	(-2+i1 >= 0 /\ -1+it21 >= 0 /\ i6-it21-i7 >= 0 /\ 2-i1 >= 0 /\ -1+i6-i7 >= 0) /\ i1'=i1, i3'=i3+it21, i7'=it21+i7, i8'=it3

		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		-1+i6-i7 >= 0 [0]: montonic decrease yields (i6-it21-i7 >= 0 /\ -1+i6-i7 >= 0)
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0, -1+i6-i7 >= 0 -> (i6-it21-i7 >= 0 /\ -1+i6-i7 >= 0)}

	Removed Trivial Updates

	Original rule:
	(-2+i1 >= 0 /\ -1+it21 >= 0 /\ i6-it21-i7 >= 0 /\ 2-i1 >= 0 /\ -1+i6-i7 >= 0) /\ i1'=i1, i3'=i3+it21, i7'=it21+i7, i8'=it3
	New rule:
	(-2+i1 >= 0 /\ -1+it21 >= 0 /\ i6-it21-i7 >= 0 /\ 2-i1 >= 0 /\ -1+i6-i7 >= 0) /\ i3'=i3+it21, i7'=it21+i7, i8'=it3
	
	Instantiation

	Original rule:
	(-2+i1 >= 0 /\ -1+it21 >= 0 /\ i6-it21-i7 >= 0 /\ 2-i1 >= 0 /\ -1+i6-i7 >= 0) /\ i3'=i3+it21, i7'=it21+i7, i8'=it3
	New rule:
	(0 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+i6-i7 >= 0) /\ i3'=i6+i3-i7, i7'=i6, i8'=it3

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f7 -> 2
f19 -> 3

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3, i4'=it2, i5'=it2, i6'=10, i7'=0
   1: (-2+i1 == 0 /\ -1+i6-i7 >= 0) /\ i1'=2, i3'=1+i3, i7'=1+i7, i8'=it3
   2: (-2+i1 == 0 /\ -i6+i7 >= 0) /\ i1'=3, i3'=1+i3
   3: (0 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+i6-i7 >= 0) /\ i3'=i6+i3-i7, i7'=i6, i8'=it3

Dependency graph:
0 -> 1, 0 -> 3
1 -> 1, 1 -> 2, 1 -> 3
3 -> 1, 3 -> 2

	Trace

	0[(-1+i1 == 0)]
	3[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+i6-i7 >= 0)]
	
	Blocked

	{}
	{}
	{1[T], 3[T]}
	
Step with 2

	Trace

	0[(-1+i1 == 0)]
	3[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+i6-i7 >= 0)]
	2[(-2+i1 == 0 /\ -i6+i7 >= 0)]
	
	Blocked

	{}
	{}
	{1[T], 3[T]}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	3[(0 >= 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+i6-i7 >= 0)]
	
	Blocked

	{}
	{}
	{1[T], 2[T], 3[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{3[T]}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	1[(-2+i1 == 0 /\ -1+i6-i7 >= 0)]
	
	Blocked

	{}
	{3[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{1[T], 3[T]}
	
Backtrack

	Trace

	Blocked

	{0[T]}
	
Accept

Constant


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄
  Temp_Vars:  F
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃, X₄) → l1(F, F, 10, 0, X₄)
  t₁: l1(X₀, X₁, X₂, X₃, X₄) → l1(X₀, X₁, X₂, 1+X₃, F) :|: 1+X₃ ≤ X₂
  t₂: l1(X₀, X₁, X₂, X₃, X₄) → l2(X₀, X₁, X₂, X₃, X₄) :|: X₂ ≤ X₃


Preprocessing
  Eliminate variables [F; X₀; X₁; X₄] that do not contribute to the problem


  Found invariant X₁ ≤ 10 ∧ X₁ ≤ X₀ ∧ X₀+X₁ ≤ 20 ∧ 0 ≤ X₁ ∧ 10 ≤ X₀+X₁ ∧ X₀ ≤ 10+X₁ ∧ X₀ ≤ 10 ∧ 10 ≤ X₀ for location l1


  Found invariant X₁ ≤ 10 ∧ X₁ ≤ X₀ ∧ X₀+X₁ ≤ 20 ∧ 10 ≤ X₁ ∧ 20 ≤ X₀+X₁ ∧ X₀ ≤ X₁ ∧ X₀ ≤ 10 ∧ 10 ≤ X₀ for location l2


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁
  Temp_Vars:  
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₃: l0(X₀, X₁) → l1(10, 0)
  t₄: l1(X₀, X₁) → l1(X₀, 1+X₁) :|: 1+X₁ ≤ X₀ ∧ X₀+X₁ ≤ 20 ∧ X₀ ≤ 10 ∧ X₀ ≤ 10+X₁ ∧ X₁ ≤ 10 ∧ 10 ≤ X₀ ∧ 10 ≤ X₀+X₁ ∧ X₁ ≤ X₀ ∧ 0 ≤ X₁
  t₅: l1(X₀, X₁) → l2(X₀, X₁) :|: X₀ ≤ X₁ ∧ X₀+X₁ ≤ 20 ∧ X₀ ≤ 10 ∧ X₀ ≤ 10+X₁ ∧ X₁ ≤ 10 ∧ 10 ≤ X₀ ∧ 10 ≤ X₀+X₁ ∧ X₁ ≤ X₀ ∧ 0 ≤ X₁


MPRF for transition t₄: l1(X₀, X₁) → l1(X₀, 1+X₁) :|: 1+X₁ ≤ X₀ ∧ X₀+X₁ ≤ 20 ∧ X₀ ≤ 10 ∧ X₀ ≤ 10+X₁ ∧ X₁ ≤ 10 ∧ 10 ≤ X₀ ∧ 10 ≤ X₀+X₁ ∧ X₁ ≤ X₀ ∧ 0 ≤ X₁ of depth 1:
  new bound:
    11 {O(1)}

  MPRF:
    • l1: [11-X₁]




All Bounds
Timebounds
  Overall timebound:13 {O(1)}
    t₃: 1 {O(1)}
    t₄: 11 {O(1)}
    t₅: 1 {O(1)}


Costbounds
  Overall costbound: 13 {O(1)}
    t₃: 1 {O(1)}
    t₄: 11 {O(1)}
    t₅: 1 {O(1)}


Sizebounds
    t₃, X₀: 10 {O(1)}
    t₃, X₁: 0 {O(1)}
    t₄, X₀: 10 {O(1)}
    t₄, X₁: 10 {O(1)}
    t₅, X₀: 10 {O(1)}
    t₅, X₁: 10 {O(1)}

