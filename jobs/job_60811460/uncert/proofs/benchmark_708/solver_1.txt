WORST_CASE(Omega(n^1),?)

# LoAT Proof:
WORST_CASE(Omega(n^1),?)

WORST_CASE(Omega(n^1),?)
Initial ITS

Start location: eval_speedFails4_start

Location map:
LoAT_sink -> 0
eval_speedFails4_start -> 1
eval_speedFails4_bb0_in -> 2
eval_speedFails4_1 -> 3
eval_speedFails4_2 -> 4
eval_speedFails4_3 -> 5
eval_speedFails4_4 -> 6
eval_speedFails4_5 -> 7
eval_speedFails4_6 -> 8
eval_speedFails4_7 -> 9
eval_speedFails4_bb1_in -> 10
eval_speedFails4_bb2_in -> 11
eval_speedFails4_bb3_in -> 12
eval_speedFails4_stop -> 13

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: -2+i1 == 0 /\ i1'=3, i3'=1+i3, i6'=it2
   2: -3+i1 == 0 /\ i1'=4, i3'=1+i3
   3: -4+i1 == 0 /\ i1'=5, i3'=1+i3
   4: -5+i1 == 0 /\ i1'=6, i3'=1+i3
   5: (-6+i1 == 0 /\ -1+i6 >= 0) /\ i1'=7, i3'=1+i3, i4'=1
   6: (-6+i1 == 0 /\ -1+i6 < 0) /\ i1'=7, i3'=1+i3, i4'=-1
   7: -7+i1 == 0 /\ i1'=8, i3'=1+i3
   8: -8+i1 == 0 /\ i1'=9, i3'=1+i3
   9: -9+i1 == 0 /\ i1'=10, i3'=1+i3, i5'=i8
  10: (-10+i1 == 0 /\ -i7+i5 <= 0) /\ i1'=11, i3'=1+i3
  11: (-10+i1 == 0 /\ -i7+i5 > 0) /\ i1'=12, i3'=1+i3
  12: (-11+i1 == 0 /\ -1+i6 >= 0) /\ i1'=10, i3'=1+i3, i5'=i4+i5
  13: (-11+i1 == 0 /\ -1+i6 < 0) /\ i1'=10, i3'=1+i3, i5'=-i4+i5
  14: -12+i1 == 0 /\ i1'=13, i3'=1+i3

Dependency graph:
0 -> 1
1 -> 2
2 -> 3
3 -> 4
4 -> 5, 4 -> 6
5 -> 7
6 -> 7
7 -> 8
8 -> 9
9 -> 10, 9 -> 11
10 -> 12, 10 -> 13
11 -> 14
12 -> 10, 12 -> 11
13 -> 10, 13 -> 11

Chained Linear Paths

	Applied Chaining

	First rule:
	-1+i1 == 0 /\ i1'=2, i3'=1+i3
	Second rule:
	-2+i1 == 0 /\ i1'=3, i3'=1+i3, i6'=it2
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i6'=it2
	
	Applied Deletion

	Removed the following rules: 0, 1
	
	Applied Chaining

	First rule:
	-3+i1 == 0 /\ i1'=4, i3'=1+i3
	Second rule:
	-4+i1 == 0 /\ i1'=5, i3'=1+i3
	New rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 2, 3
	
	Applied Chaining

	First rule:
	(-6+i1 == 0 /\ -1+i6 >= 0) /\ i1'=7, i3'=1+i3, i4'=1
	Second rule:
	-7+i1 == 0 /\ i1'=8, i3'=1+i3
	New rule:
	(0 == 0 /\ -6+i1 == 0 /\ -1+i6 >= 0) /\ i1'=8, i3'=2+i3, i4'=1
	
	Applied Deletion

	Removed the following rules: 5
	
	Applied Chaining

	First rule:
	(-6+i1 == 0 /\ -1+i6 < 0) /\ i1'=7, i3'=1+i3, i4'=-1
	Second rule:
	-7+i1 == 0 /\ i1'=8, i3'=1+i3
	New rule:
	(0 == 0 /\ -6+i1 == 0 /\ -1+i6 < 0) /\ i1'=8, i3'=2+i3, i4'=-1
	
	Applied Deletion

	Removed the following rules: 6, 7
	
	Applied Chaining

	First rule:
	-8+i1 == 0 /\ i1'=9, i3'=1+i3
	Second rule:
	-9+i1 == 0 /\ i1'=10, i3'=1+i3, i5'=i8
	New rule:
	(0 == 0 /\ -8+i1 == 0) /\ i1'=10, i3'=2+i3, i5'=i8
	
	Applied Deletion

	Removed the following rules: 8, 9
	
	Applied Chaining

	First rule:
	(-10+i1 == 0 /\ -i7+i5 > 0) /\ i1'=12, i3'=1+i3
	Second rule:
	-12+i1 == 0 /\ i1'=13, i3'=1+i3
	New rule:
	(0 == 0 /\ -10+i1 == 0 /\ -i7+i5 > 0) /\ i1'=13, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 11, 14
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3, i6'=it2
	Second rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3, i6'=it2
	
	Applied Deletion

	Removed the following rules: 15, 16
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -6+i1 == 0 /\ -1+i6 >= 0) /\ i1'=8, i3'=2+i3, i4'=1
	Second rule:
	(0 == 0 /\ -8+i1 == 0) /\ i1'=10, i3'=2+i3, i5'=i8
	New rule:
	(0 == 0 /\ -6+i1 == 0 /\ -1+i6 >= 0) /\ i1'=10, i3'=4+i3, i4'=1, i5'=i8
	
	Applied Deletion

	Removed the following rules: 17
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -6+i1 == 0 /\ -1+i6 < 0) /\ i1'=8, i3'=2+i3, i4'=-1
	Second rule:
	(0 == 0 /\ -8+i1 == 0) /\ i1'=10, i3'=2+i3, i5'=i8
	New rule:
	(0 == 0 /\ -6+i1 == 0 /\ -1+i6 < 0) /\ i1'=10, i3'=4+i3, i4'=-1, i5'=i8
	
	Applied Deletion

	Removed the following rules: 18, 19
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3, i6'=it2
	Second rule:
	-5+i1 == 0 /\ i1'=6, i3'=1+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=6, i3'=5+i3, i6'=it2
	
	Applied Deletion

	Removed the following rules: 4, 21

Start location: eval_speedFails4_start

Location map:
LoAT_sink -> 0
eval_speedFails4_start -> 1
eval_speedFails4_bb0_in -> 2
eval_speedFails4_1 -> 3
eval_speedFails4_2 -> 4
eval_speedFails4_3 -> 5
eval_speedFails4_4 -> 6
eval_speedFails4_5 -> 7
eval_speedFails4_6 -> 8
eval_speedFails4_7 -> 9
eval_speedFails4_bb1_in -> 10
eval_speedFails4_bb2_in -> 11
eval_speedFails4_bb3_in -> 12
eval_speedFails4_stop -> 13

Rules:
  10: (-10+i1 == 0 /\ -i7+i5 <= 0) /\ i1'=11, i3'=1+i3
  12: (-11+i1 == 0 /\ -1+i6 >= 0) /\ i1'=10, i3'=1+i3, i5'=i4+i5
  13: (-11+i1 == 0 /\ -1+i6 < 0) /\ i1'=10, i3'=1+i3, i5'=-i4+i5
  20: (0 == 0 /\ -10+i1 == 0 /\ -i7+i5 > 0) /\ i1'=13, i3'=2+i3
  22: (0 == 0 /\ -6+i1 == 0 /\ -1+i6 >= 0) /\ i1'=10, i3'=4+i3, i4'=1, i5'=i8
  23: (0 == 0 /\ -6+i1 == 0 /\ -1+i6 < 0) /\ i1'=10, i3'=4+i3, i4'=-1, i5'=i8
  24: (0 == 0 /\ -1+i1 == 0) /\ i1'=6, i3'=5+i3, i6'=it2

Dependency graph:
10 -> 12, 10 -> 13
12 -> 10, 12 -> 20
13 -> 10, 13 -> 20
22 -> 10, 22 -> 20
23 -> 10, 23 -> 20
24 -> 22, 24 -> 23

Preprocessed Transitions

	Simplified Guard

	Original rule:
	(0 == 0 /\ -10+i1 == 0 /\ -i7+i5 > 0) /\ i1'=13, i3'=2+i3
	New rule:
	(-10+i1 == 0 /\ -i7+i5 > 0) /\ i1'=13, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -6+i1 == 0 /\ -1+i6 >= 0) /\ i1'=10, i3'=4+i3, i4'=1, i5'=i8
	New rule:
	(-6+i1 == 0 /\ -1+i6 >= 0) /\ i1'=10, i3'=4+i3, i4'=1, i5'=i8
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -6+i1 == 0 /\ -1+i6 < 0) /\ i1'=10, i3'=4+i3, i4'=-1, i5'=i8
	New rule:
	(-6+i1 == 0 /\ -1+i6 < 0) /\ i1'=10, i3'=4+i3, i4'=-1, i5'=i8
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=6, i3'=5+i3, i6'=it2
	New rule:
	-1+i1 == 0 /\ i1'=6, i3'=5+i3, i6'=it2

Start location: eval_speedFails4_start

Location map:
LoAT_sink -> 0
eval_speedFails4_start -> 1
eval_speedFails4_bb0_in -> 2
eval_speedFails4_1 -> 3
eval_speedFails4_2 -> 4
eval_speedFails4_3 -> 5
eval_speedFails4_4 -> 6
eval_speedFails4_5 -> 7
eval_speedFails4_6 -> 8
eval_speedFails4_7 -> 9
eval_speedFails4_bb1_in -> 10
eval_speedFails4_bb2_in -> 11
eval_speedFails4_bb3_in -> 12
eval_speedFails4_stop -> 13

Rules:
  10: (-10+i1 == 0 /\ -i7+i5 <= 0) /\ i1'=11, i3'=1+i3
  12: (-11+i1 == 0 /\ -1+i6 >= 0) /\ i1'=10, i3'=1+i3, i5'=i4+i5
  13: (-11+i1 == 0 /\ -1+i6 < 0) /\ i1'=10, i3'=1+i3, i5'=-i4+i5
  25: (-10+i1 == 0 /\ -i7+i5 > 0) /\ i1'=13, i3'=2+i3
  26: (-6+i1 == 0 /\ -1+i6 >= 0) /\ i1'=10, i3'=4+i3, i4'=1, i5'=i8
  27: (-6+i1 == 0 /\ -1+i6 < 0) /\ i1'=10, i3'=4+i3, i4'=-1, i5'=i8
  28: -1+i1 == 0 /\ i1'=6, i3'=5+i3, i6'=it2

Dependency graph:
10 -> 12, 10 -> 13
12 -> 10, 12 -> 25
13 -> 10, 13 -> 25
26 -> 10, 26 -> 25
27 -> 10, 27 -> 25
28 -> 26, 28 -> 27

Step with 28

	Trace

	28[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 27

	Trace

	28[(-1+i1 == 0)]
	27[(-6+i1 == 0 /\ -1+i6 < 0)]
	
	Blocked

	{}
	{}
	{}
	
Step with 25

	Trace

	28[(-1+i1 == 0)]
	27[(-6+i1 == 0 /\ -1+i6 < 0)]
	25[(-10+i1 == 0 /\ -i7+i5 > 0)]
	
	Blocked

	{}
	{}
	{}
	{}
	
Backtrack

	Trace

	28[(-1+i1 == 0)]
	27[(-6+i1 == 0 /\ -1+i6 < 0)]
	
	Blocked

	{}
	{}
	{25[T]}
	
Step with 10

	Trace

	28[(-1+i1 == 0)]
	27[(-6+i1 == 0 /\ -1+i6 < 0)]
	10[(-10+i1 == 0 /\ -i7+i5 <= 0)]
	
	Blocked

	{}
	{}
	{25[T]}
	{}
	
Step with 13

	Trace

	28[(-1+i1 == 0)]
	27[(-6+i1 == 0 /\ -1+i6 < 0)]
	10[(-10+i1 == 0 /\ -i7+i5 <= 0)]
	13[(-11+i1 == 0 /\ -1+i6 < 0)]
	
	Blocked

	{}
	{}
	{25[T]}
	{}
	{}
	
Poly(n^1)

Accelerate

	Certificate of Non-Termination

	Original rule:
	(-10+i1 == 0 /\ -i7+i5 <= 0 /\ -1+i6 < 0) /\ i1'=10, i3'=2+i3, i5'=-i4+i5
	New rule:
	(10-i1 >= 0 /\ -10+i1 >= 0 /\ i7-i5 >= 0 /\ -i4 <= 0 /\ 1-i6 > 0) /\ i1'=0

		10-i1 >= 0 [0]: unchanged
		
		-10+i1 >= 0 [0]: unchanged
		
		i7-i5 >= 0 [0]: eventual decrease yields (i7-i5 >= 0 /\ (-1+it39)*i4+i7-i5 >= 0)
		
		i7-i5 >= 0 [1]: eventual increase yields (i7-i5 >= 0 /\ -i4 <= 0)
		
		1-i6 > 0 [0]: unchanged
		
		Replacement map: {10-i1 >= 0 -> 10-i1 >= 0, -10+i1 >= 0 -> -10+i1 >= 0, i7-i5 >= 0 -> (i7-i5 >= 0 /\ -i4 <= 0), 1-i6 > 0 -> 1-i6 > 0}

		Simplified Guard

		Original rule:
		(0 == 0 /\ -10+i1 == 0 /\ -i7+i5 <= 0 /\ -1+i6 < 0) /\ i1'=10, i3'=2+i3, i5'=-i4+i5
		New rule:
		(-10+i1 == 0 /\ -i7+i5 <= 0 /\ -1+i6 < 0) /\ i1'=10, i3'=2+i3, i5'=-i4+i5

	Loop Acceleration

	Original rule:
	(-10+i1 == 0 /\ -i7+i5 <= 0 /\ -1+i6 < 0) /\ i1'=10, i3'=2+i3, i5'=-i4+i5
	New rule:
	(10-i1 >= 0 /\ -1+it39 >= 0 /\ -10+i1 >= 0 /\ i7-i5 >= 0 /\ (-1+it39)*i4+i7-i5 >= 0 /\ 1-i6 > 0) /\ i1'=i1, i3'=i3+2*it39, i5'=-i4*it39+i5

		10-i1 >= 0 [0]: unchanged
		
		-10+i1 >= 0 [0]: unchanged
		
		i7-i5 >= 0 [0]: eventual decrease yields (i7-i5 >= 0 /\ (-1+it39)*i4+i7-i5 >= 0)
		
		i7-i5 >= 0 [1]: eventual increase yields (i7-i5 >= 0 /\ -i4 <= 0)
		
		1-i6 > 0 [0]: unchanged
		
		Replacement map: {10-i1 >= 0 -> 10-i1 >= 0, -10+i1 >= 0 -> -10+i1 >= 0, i7-i5 >= 0 -> (i7-i5 >= 0 /\ (-1+it39)*i4+i7-i5 >= 0), 1-i6 > 0 -> 1-i6 > 0}

	Removed Trivial Updates

	Original rule:
	(10-i1 >= 0 /\ -1+it39 >= 0 /\ -10+i1 >= 0 /\ i7-i5 >= 0 /\ (-1+it39)*i4+i7-i5 >= 0 /\ 1-i6 > 0) /\ i1'=i1, i3'=i3+2*it39, i5'=-i4*it39+i5
	New rule:
	(10-i1 >= 0 /\ -1+it39 >= 0 /\ -10+i1 >= 0 /\ i7-i5 >= 0 /\ (-1+it39)*i4+i7-i5 >= 0 /\ 1-i6 > 0) /\ i3'=i3+2*it39, i5'=-i4*it39+i5

Start location: eval_speedFails4_start

Location map:
LoAT_sink -> 0
eval_speedFails4_start -> 1
eval_speedFails4_bb0_in -> 2
eval_speedFails4_1 -> 3
eval_speedFails4_2 -> 4
eval_speedFails4_3 -> 5
eval_speedFails4_4 -> 6
eval_speedFails4_5 -> 7
eval_speedFails4_6 -> 8
eval_speedFails4_7 -> 9
eval_speedFails4_bb1_in -> 10
eval_speedFails4_bb2_in -> 11
eval_speedFails4_bb3_in -> 12
eval_speedFails4_stop -> 13

Rules:
  10: (-10+i1 == 0 /\ -i7+i5 <= 0) /\ i1'=11, i3'=1+i3
  12: (-11+i1 == 0 /\ -1+i6 >= 0) /\ i1'=10, i3'=1+i3, i5'=i4+i5
  13: (-11+i1 == 0 /\ -1+i6 < 0) /\ i1'=10, i3'=1+i3, i5'=-i4+i5
  25: (-10+i1 == 0 /\ -i7+i5 > 0) /\ i1'=13, i3'=2+i3
  26: (-6+i1 == 0 /\ -1+i6 >= 0) /\ i1'=10, i3'=4+i3, i4'=1, i5'=i8
  27: (-6+i1 == 0 /\ -1+i6 < 0) /\ i1'=10, i3'=4+i3, i4'=-1, i5'=i8
  28: -1+i1 == 0 /\ i1'=6, i3'=5+i3, i6'=it2
  29: (10-i1 >= 0 /\ -10+i1 >= 0 /\ i7-i5 >= 0 /\ -i4 <= 0 /\ 1-i6 > 0) /\ i1'=0
  30: (10-i1 >= 0 /\ -1+it39 >= 0 /\ -10+i1 >= 0 /\ i7-i5 >= 0 /\ (-1+it39)*i4+i7-i5 >= 0 /\ 1-i6 > 0) /\ i3'=i3+2*it39, i5'=-i4*it39+i5

Dependency graph:
10 -> 12, 10 -> 13
12 -> 10, 12 -> 25, 12 -> 29, 12 -> 30
13 -> 10, 13 -> 25, 13 -> 29, 13 -> 30
26 -> 10, 26 -> 25, 26 -> 29, 26 -> 30
27 -> 10, 27 -> 25, 27 -> 29, 27 -> 30
28 -> 26, 28 -> 27
30 -> 10, 30 -> 25, 30 -> 29

	Trace

	28[(-1+i1 == 0)]
	27[(-6+i1 == 0 /\ -1+i6 < 0)]
	30[(10-i1 >= 0 /\ -1+it39 >= 0 /\ -10+i1 >= 0 /\ i7-i5 >= 0 /\ (-1+it39)*i4+i7-i5 >= 0 /\ 1-i6 > 0)]
	
	Blocked

	{}
	{}
	{25[T]}
	{30[T]}
	
Step with 25

	Trace

	28[(-1+i1 == 0)]
	27[(-6+i1 == 0 /\ -1+i6 < 0)]
	30[(10-i1 >= 0 /\ -1+it39 >= 0 /\ -10+i1 >= 0 /\ i7-i5 >= 0 /\ (-1+it39)*i4+i7-i5 >= 0 /\ 1-i6 > 0)]
	25[(-10+i1 == 0 /\ -i7+i5 > 0)]
	
	Blocked

	{}
	{}
	{25[T]}
	{29[T], 30[T]}
	{}
	
Backtrack

	Trace

	28[(-1+i1 == 0)]
	27[(-6+i1 == 0 /\ -1+i6 < 0)]
	30[(10-i1 >= 0 /\ -1+it39 >= 0 /\ -10+i1 >= 0 /\ i7-i5 >= 0 /\ (-1+it39)*i4+i7-i5 >= 0 /\ 1-i6 > 0)]
	
	Blocked

	{}
	{}
	{25[T]}
	{25[T], 29[T], 30[T]}
	
Step with 10

	Trace

	28[(-1+i1 == 0)]
	27[(-6+i1 == 0 /\ -1+i6 < 0)]
	30[(10-i1 >= 0 /\ -1+it39 >= 0 /\ -10+i1 >= 0 /\ i7-i5 >= 0 /\ (-1+it39)*i4+i7-i5 >= 0 /\ 1-i6 > 0)]
	10[(-10+i1 == 0 /\ -i7+i5 <= 0)]
	
	Blocked

	{}
	{}
	{25[T]}
	{25[T], 29[T], 30[T]}
	{}
	
Step with 13

	Trace

	28[(-1+i1 == 0)]
	27[(-6+i1 == 0 /\ -1+i6 < 0)]
	30[(10-i1 >= 0 /\ -1+it39 >= 0 /\ -10+i1 >= 0 /\ i7-i5 >= 0 /\ (-1+it39)*i4+i7-i5 >= 0 /\ 1-i6 > 0)]
	10[(-10+i1 == 0 /\ -i7+i5 <= 0)]
	13[(-11+i1 == 0 /\ -1+i6 < 0)]
	
	Blocked

	{}
	{}
	{25[T]}
	{25[T], 29[T], 30[T]}
	{}
	{}
	
Covered

	Trace

	28[(-1+i1 == 0)]
	27[(-6+i1 == 0 /\ -1+i6 < 0)]
	30[(10-i1 >= 0 /\ -1+it39 >= 0 /\ -10+i1 >= 0 /\ i7-i5 >= 0 /\ (-1+it39)*i4+i7-i5 >= 0 /\ 1-i6 > 0)]
	10[(-10+i1 == 0 /\ -i7+i5 <= 0)]
	
	Blocked

	{}
	{}
	{25[T]}
	{25[T], 29[T], 30[T]}
	{13[T]}
	
Backtrack

	Trace

	28[(-1+i1 == 0)]
	27[(-6+i1 == 0 /\ -1+i6 < 0)]
	30[(10-i1 >= 0 /\ -1+it39 >= 0 /\ -10+i1 >= 0 /\ i7-i5 >= 0 /\ (-1+it39)*i4+i7-i5 >= 0 /\ 1-i6 > 0)]
	
	Blocked

	{}
	{}
	{25[T]}
	{10[T], 25[T], 29[T], 30[T]}
	
Backtrack

	Trace

	28[(-1+i1 == 0)]
	27[(-6+i1 == 0 /\ -1+i6 < 0)]
	
	Blocked

	{}
	{}
	{25[T], 30[T]}
	
Step with 10

	Trace

	28[(-1+i1 == 0)]
	27[(-6+i1 == 0 /\ -1+i6 < 0)]
	10[(-10+i1 == 0 /\ -i7+i5 <= 0)]
	
	Blocked

	{}
	{}
	{25[T], 29[T], 30[T]}
	{}
	
Step with 13

	Trace

	28[(-1+i1 == 0)]
	27[(-6+i1 == 0 /\ -1+i6 < 0)]
	10[(-10+i1 == 0 /\ -i7+i5 <= 0)]
	13[(-11+i1 == 0 /\ -1+i6 < 0)]
	
	Blocked

	{}
	{}
	{25[T], 29[T], 30[T]}
	{12[T]}
	{}
	
Covered

	Trace

	28[(-1+i1 == 0)]
	27[(-6+i1 == 0 /\ -1+i6 < 0)]
	10[(-10+i1 == 0 /\ -i7+i5 <= 0)]
	
	Blocked

	{}
	{}
	{25[T], 29[T], 30[T]}
	{12[T], 13[T]}
	
Backtrack

	Trace

	28[(-1+i1 == 0)]
	27[(-6+i1 == 0 /\ -1+i6 < 0)]
	
	Blocked

	{}
	{}
	{10[T], 25[T], 29[T], 30[T]}
	
Backtrack

	Trace

	28[(-1+i1 == 0)]
	
	Blocked

	{}
	{27[T]}
	
Step with 26

	Trace

	28[(-1+i1 == 0)]
	26[(-6+i1 == 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{27[T]}
	{}
	
Step with 25

	Trace

	28[(-1+i1 == 0)]
	26[(-6+i1 == 0 /\ -1+i6 >= 0)]
	25[(-10+i1 == 0 /\ -i7+i5 > 0)]
	
	Blocked

	{}
	{27[T]}
	{29[T], 30[T]}
	{}
	
Backtrack

	Trace

	28[(-1+i1 == 0)]
	26[(-6+i1 == 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{27[T]}
	{25[T], 29[T], 30[T]}
	
Step with 10

	Trace

	28[(-1+i1 == 0)]
	26[(-6+i1 == 0 /\ -1+i6 >= 0)]
	10[(-10+i1 == 0 /\ -i7+i5 <= 0)]
	
	Blocked

	{}
	{27[T]}
	{25[T], 29[T], 30[T]}
	{}
	
Step with 12

	Trace

	28[(-1+i1 == 0)]
	26[(-6+i1 == 0 /\ -1+i6 >= 0)]
	10[(-10+i1 == 0 /\ -i7+i5 <= 0)]
	12[(-11+i1 == 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{27[T]}
	{25[T], 29[T], 30[T]}
	{13[T]}
	{}
	
Accelerate

	Certificate of Non-Termination

	Original rule:
	(-10+i1 == 0 /\ -i7+i5 <= 0 /\ -1+i6 >= 0) /\ i1'=10, i3'=2+i3, i5'=i4+i5
	New rule:
	(10-i1 >= 0 /\ i4 <= 0 /\ -10+i1 >= 0 /\ i7-i5 >= 0 /\ -1+i6 >= 0) /\ i1'=0

		10-i1 >= 0 [0]: unchanged
		
		-10+i1 >= 0 [0]: unchanged
		
		i7-i5 >= 0 [0]: eventual decrease yields (i7-i5 >= 0 /\ -i4*(-1+it163)+i7-i5 >= 0)
		
		i7-i5 >= 0 [1]: eventual increase yields (i4 <= 0 /\ i7-i5 >= 0)
		
		-1+i6 >= 0 [0]: unchanged
		
		Replacement map: {10-i1 >= 0 -> 10-i1 >= 0, -10+i1 >= 0 -> -10+i1 >= 0, i7-i5 >= 0 -> (i4 <= 0 /\ i7-i5 >= 0), -1+i6 >= 0 -> -1+i6 >= 0}

		Simplified Guard

		Original rule:
		(0 == 0 /\ -10+i1 == 0 /\ -i7+i5 <= 0 /\ -1+i6 >= 0) /\ i1'=10, i3'=2+i3, i5'=i4+i5
		New rule:
		(-10+i1 == 0 /\ -i7+i5 <= 0 /\ -1+i6 >= 0) /\ i1'=10, i3'=2+i3, i5'=i4+i5

	Loop Acceleration

	Original rule:
	(-10+i1 == 0 /\ -i7+i5 <= 0 /\ -1+i6 >= 0) /\ i1'=10, i3'=2+i3, i5'=i4+i5
	New rule:
	(10-i1 >= 0 /\ -1+it163 >= 0 /\ -10+i1 >= 0 /\ i7-i5 >= 0 /\ -i4*(-1+it163)+i7-i5 >= 0 /\ -1+i6 >= 0) /\ i1'=i1, i3'=i3+2*it163, i5'=it163*i4+i5

		10-i1 >= 0 [0]: unchanged
		
		-10+i1 >= 0 [0]: unchanged
		
		i7-i5 >= 0 [0]: eventual decrease yields (i7-i5 >= 0 /\ -i4*(-1+it163)+i7-i5 >= 0)
		
		i7-i5 >= 0 [1]: eventual increase yields (i4 <= 0 /\ i7-i5 >= 0)
		
		-1+i6 >= 0 [0]: unchanged
		
		Replacement map: {10-i1 >= 0 -> 10-i1 >= 0, -10+i1 >= 0 -> -10+i1 >= 0, i7-i5 >= 0 -> (i7-i5 >= 0 /\ -i4*(-1+it163)+i7-i5 >= 0), -1+i6 >= 0 -> -1+i6 >= 0}

	Removed Trivial Updates

	Original rule:
	(10-i1 >= 0 /\ -1+it163 >= 0 /\ -10+i1 >= 0 /\ i7-i5 >= 0 /\ -i4*(-1+it163)+i7-i5 >= 0 /\ -1+i6 >= 0) /\ i1'=i1, i3'=i3+2*it163, i5'=it163*i4+i5
	New rule:
	(10-i1 >= 0 /\ -1+it163 >= 0 /\ -10+i1 >= 0 /\ i7-i5 >= 0 /\ -i4*(-1+it163)+i7-i5 >= 0 /\ -1+i6 >= 0) /\ i3'=i3+2*it163, i5'=it163*i4+i5

Start location: eval_speedFails4_start

Location map:
LoAT_sink -> 0
eval_speedFails4_start -> 1
eval_speedFails4_bb0_in -> 2
eval_speedFails4_1 -> 3
eval_speedFails4_2 -> 4
eval_speedFails4_3 -> 5
eval_speedFails4_4 -> 6
eval_speedFails4_5 -> 7
eval_speedFails4_6 -> 8
eval_speedFails4_7 -> 9
eval_speedFails4_bb1_in -> 10
eval_speedFails4_bb2_in -> 11
eval_speedFails4_bb3_in -> 12
eval_speedFails4_stop -> 13

Rules:
  10: (-10+i1 == 0 /\ -i7+i5 <= 0) /\ i1'=11, i3'=1+i3
  12: (-11+i1 == 0 /\ -1+i6 >= 0) /\ i1'=10, i3'=1+i3, i5'=i4+i5
  13: (-11+i1 == 0 /\ -1+i6 < 0) /\ i1'=10, i3'=1+i3, i5'=-i4+i5
  25: (-10+i1 == 0 /\ -i7+i5 > 0) /\ i1'=13, i3'=2+i3
  26: (-6+i1 == 0 /\ -1+i6 >= 0) /\ i1'=10, i3'=4+i3, i4'=1, i5'=i8
  27: (-6+i1 == 0 /\ -1+i6 < 0) /\ i1'=10, i3'=4+i3, i4'=-1, i5'=i8
  28: -1+i1 == 0 /\ i1'=6, i3'=5+i3, i6'=it2
  29: (10-i1 >= 0 /\ -10+i1 >= 0 /\ i7-i5 >= 0 /\ -i4 <= 0 /\ 1-i6 > 0) /\ i1'=0
  30: (10-i1 >= 0 /\ -1+it39 >= 0 /\ -10+i1 >= 0 /\ i7-i5 >= 0 /\ (-1+it39)*i4+i7-i5 >= 0 /\ 1-i6 > 0) /\ i3'=i3+2*it39, i5'=-i4*it39+i5
  31: (10-i1 >= 0 /\ i4 <= 0 /\ -10+i1 >= 0 /\ i7-i5 >= 0 /\ -1+i6 >= 0) /\ i1'=0
  32: (10-i1 >= 0 /\ -1+it163 >= 0 /\ -10+i1 >= 0 /\ i7-i5 >= 0 /\ -i4*(-1+it163)+i7-i5 >= 0 /\ -1+i6 >= 0) /\ i3'=i3+2*it163, i5'=it163*i4+i5

Dependency graph:
10 -> 12, 10 -> 13
12 -> 10, 12 -> 25, 12 -> 29, 12 -> 30, 12 -> 31, 12 -> 32
13 -> 10, 13 -> 25, 13 -> 29, 13 -> 30, 13 -> 31, 13 -> 32
26 -> 10, 26 -> 25, 26 -> 29, 26 -> 30, 26 -> 31, 26 -> 32
27 -> 10, 27 -> 25, 27 -> 29, 27 -> 30, 27 -> 31, 27 -> 32
28 -> 26, 28 -> 27
30 -> 10, 30 -> 25, 30 -> 29, 30 -> 31, 30 -> 32
32 -> 10, 32 -> 25, 32 -> 29, 32 -> 30, 32 -> 31

	Trace

	28[(-1+i1 == 0)]
	26[(-6+i1 == 0 /\ -1+i6 >= 0)]
	32[(10-i1 >= 0 /\ -1+it163 >= 0 /\ -10+i1 >= 0 /\ i7-i5 >= 0 /\ -i4*(-1+it163)+i7-i5 >= 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{27[T]}
	{25[T], 29[T], 30[T]}
	{32[T]}
	
Step with 10

	Trace

	28[(-1+i1 == 0)]
	26[(-6+i1 == 0 /\ -1+i6 >= 0)]
	32[(10-i1 >= 0 /\ -1+it163 >= 0 /\ -10+i1 >= 0 /\ i7-i5 >= 0 /\ -i4*(-1+it163)+i7-i5 >= 0 /\ -1+i6 >= 0)]
	10[(-10+i1 == 0 /\ -i7+i5 <= 0)]
	
	Blocked

	{}
	{27[T]}
	{25[T], 29[T], 30[T]}
	{29[T], 31[T], 32[T]}
	{}
	
Step with 12

	Trace

	28[(-1+i1 == 0)]
	26[(-6+i1 == 0 /\ -1+i6 >= 0)]
	32[(10-i1 >= 0 /\ -1+it163 >= 0 /\ -10+i1 >= 0 /\ i7-i5 >= 0 /\ -i4*(-1+it163)+i7-i5 >= 0 /\ -1+i6 >= 0)]
	10[(-10+i1 == 0 /\ -i7+i5 <= 0)]
	12[(-11+i1 == 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{27[T]}
	{25[T], 29[T], 30[T]}
	{29[T], 31[T], 32[T]}
	{}
	{}
	
Covered

	Trace

	28[(-1+i1 == 0)]
	26[(-6+i1 == 0 /\ -1+i6 >= 0)]
	32[(10-i1 >= 0 /\ -1+it163 >= 0 /\ -10+i1 >= 0 /\ i7-i5 >= 0 /\ -i4*(-1+it163)+i7-i5 >= 0 /\ -1+i6 >= 0)]
	10[(-10+i1 == 0 /\ -i7+i5 <= 0)]
	
	Blocked

	{}
	{27[T]}
	{25[T], 29[T], 30[T]}
	{29[T], 31[T], 32[T]}
	{12[T]}
	
Backtrack

	Trace

	28[(-1+i1 == 0)]
	26[(-6+i1 == 0 /\ -1+i6 >= 0)]
	32[(10-i1 >= 0 /\ -1+it163 >= 0 /\ -10+i1 >= 0 /\ i7-i5 >= 0 /\ -i4*(-1+it163)+i7-i5 >= 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{27[T]}
	{25[T], 29[T], 30[T]}
	{10[T], 29[T], 31[T], 32[T]}
	
Step with 25

	Trace

	28[(-1+i1 == 0)]
	26[(-6+i1 == 0 /\ -1+i6 >= 0)]
	32[(10-i1 >= 0 /\ -1+it163 >= 0 /\ -10+i1 >= 0 /\ i7-i5 >= 0 /\ -i4*(-1+it163)+i7-i5 >= 0 /\ -1+i6 >= 0)]
	25[(-10+i1 == 0 /\ -i7+i5 > 0)]
	
	Blocked

	{}
	{27[T]}
	{25[T], 29[T], 30[T]}
	{10[T], 29[T], 30[T], 31[T], 32[T]}
	{}
	
Backtrack

	Trace

	28[(-1+i1 == 0)]
	26[(-6+i1 == 0 /\ -1+i6 >= 0)]
	32[(10-i1 >= 0 /\ -1+it163 >= 0 /\ -10+i1 >= 0 /\ i7-i5 >= 0 /\ -i4*(-1+it163)+i7-i5 >= 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{27[T]}
	{25[T], 29[T], 30[T]}
	{10[T], 25[T], 29[T], 30[T], 31[T], 32[T]}
	
Backtrack

	Trace

	28[(-1+i1 == 0)]
	26[(-6+i1 == 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{27[T]}
	{25[T], 29[T], 30[T], 32[T]}
	
Step with 10

	Trace

	28[(-1+i1 == 0)]
	26[(-6+i1 == 0 /\ -1+i6 >= 0)]
	10[(-10+i1 == 0 /\ -i7+i5 <= 0)]
	
	Blocked

	{}
	{27[T]}
	{25[T], 29[T], 30[T], 32[T]}
	{}
	
Step with 12

	Trace

	28[(-1+i1 == 0)]
	26[(-6+i1 == 0 /\ -1+i6 >= 0)]
	10[(-10+i1 == 0 /\ -i7+i5 <= 0)]
	12[(-11+i1 == 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{27[T]}
	{25[T], 29[T], 30[T], 32[T]}
	{13[T]}
	{}
	
Covered

	Trace

	28[(-1+i1 == 0)]
	26[(-6+i1 == 0 /\ -1+i6 >= 0)]
	10[(-10+i1 == 0 /\ -i7+i5 <= 0)]
	
	Blocked

	{}
	{27[T]}
	{25[T], 29[T], 30[T], 32[T]}
	{12[T], 13[T]}
	
Backtrack

	Trace

	28[(-1+i1 == 0)]
	26[(-6+i1 == 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{27[T]}
	{10[T], 25[T], 29[T], 30[T], 32[T]}
	
Backtrack

	Trace

	28[(-1+i1 == 0)]
	
	Blocked

	{}
	{26[T], 27[T]}
	
Backtrack

	Trace

	Blocked

	{28[T]}
	
Accept

Poly(n^1)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
MAYBE


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄
  Temp_Vars:  nondef_0
  Locations:  l0, l1, l10, l11, l12, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃, X₄) → l2(X₀, X₁, X₂, X₃, X₄)
  t₃: l1(X₀, X₁, X₂, X₃, X₄) → l4(X₀, X₁, X₂, X₃, X₄)
  t₁₂: l10(X₀, X₁, X₂, X₃, X₄) → l9(X₀, X₀+X₁, X₂, X₃, X₄) :|: 1 ≤ X₂
  t₁₃: l10(X₀, X₁, X₂, X₃, X₄) → l9(X₀, X₁-X₀, X₂, X₃, X₄) :|: X₂ ≤ 0
  t₁₄: l11(X₀, X₁, X₂, X₃, X₄) → l12(X₀, X₁, X₂, X₃, X₄)
  t₁: l2(X₀, X₁, X₂, X₃, X₄) → l3(X₀, X₁, nondef_0, X₃, X₄)
  t₂: l3(X₀, X₁, X₂, X₃, X₄) → l1(X₀, X₁, X₂, X₃, X₄)
  t₄: l4(X₀, X₁, X₂, X₃, X₄) → l5(X₀, X₁, X₂, X₃, X₄)
  t₅: l5(X₀, X₁, X₂, X₃, X₄) → l6(1, X₁, X₂, X₃, X₄) :|: 1 ≤ X₂
  t₆: l5(X₀, X₁, X₂, X₃, X₄) → l6(-1, X₁, X₂, X₃, X₄) :|: X₂ ≤ 0
  t₇: l6(X₀, X₁, X₂, X₃, X₄) → l7(X₀, X₁, X₂, X₃, X₄)
  t₈: l7(X₀, X₁, X₂, X₃, X₄) → l8(X₀, X₁, X₂, X₃, X₄)
  t₉: l8(X₀, X₁, X₂, X₃, X₄) → l9(X₀, X₄, X₂, X₃, X₄)
  t₁₀: l9(X₀, X₁, X₂, X₃, X₄) → l10(X₀, X₁, X₂, X₃, X₄) :|: X₁ ≤ X₃
  t₁₁: l9(X₀, X₁, X₂, X₃, X₄) → l11(X₀, X₁, X₂, X₃, X₄) :|: 1+X₃ ≤ X₁


Preprocessing
  Found invariant 1+X₃ ≤ X₁ ∧ X₀ ≤ 1 ∧ 0 ≤ 1+X₀ for location l11


  Found invariant X₀ ≤ 1 ∧ 0 ≤ 1+X₀ for location l6


  Found invariant 1+X₃ ≤ X₁ ∧ X₀ ≤ 1 ∧ 0 ≤ 1+X₀ for location l12


  Found invariant X₀ ≤ 1 ∧ 0 ≤ 1+X₀ for location l7


  Found invariant X₀ ≤ 1 ∧ 0 ≤ 1+X₀ for location l8


  Found invariant X₁ ≤ X₃ ∧ X₀ ≤ 1 ∧ 0 ≤ 1+X₀ for location l10


  Found invariant X₀ ≤ 1 ∧ 0 ≤ 1+X₀ for location l9


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄
  Temp_Vars:  nondef_0
  Locations:  l0, l1, l10, l11, l12, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃, X₄) → l2(X₀, X₁, X₂, X₃, X₄)
  t₃: l1(X₀, X₁, X₂, X₃, X₄) → l4(X₀, X₁, X₂, X₃, X₄)
  t₁₂: l10(X₀, X₁, X₂, X₃, X₄) → l9(X₀, X₀+X₁, X₂, X₃, X₄) :|: 1 ≤ X₂ ∧ 0 ≤ 1+X₀ ∧ X₀ ≤ 1 ∧ X₁ ≤ X₃
  t₁₃: l10(X₀, X₁, X₂, X₃, X₄) → l9(X₀, X₁-X₀, X₂, X₃, X₄) :|: X₂ ≤ 0 ∧ 0 ≤ 1+X₀ ∧ X₀ ≤ 1 ∧ X₁ ≤ X₃
  t₁₄: l11(X₀, X₁, X₂, X₃, X₄) → l12(X₀, X₁, X₂, X₃, X₄) :|: 0 ≤ 1+X₀ ∧ X₀ ≤ 1 ∧ 1+X₃ ≤ X₁
  t₁: l2(X₀, X₁, X₂, X₃, X₄) → l3(X₀, X₁, nondef_0, X₃, X₄)
  t₂: l3(X₀, X₁, X₂, X₃, X₄) → l1(X₀, X₁, X₂, X₃, X₄)
  t₄: l4(X₀, X₁, X₂, X₃, X₄) → l5(X₀, X₁, X₂, X₃, X₄)
  t₅: l5(X₀, X₁, X₂, X₃, X₄) → l6(1, X₁, X₂, X₃, X₄) :|: 1 ≤ X₂
  t₆: l5(X₀, X₁, X₂, X₃, X₄) → l6(-1, X₁, X₂, X₃, X₄) :|: X₂ ≤ 0
  t₇: l6(X₀, X₁, X₂, X₃, X₄) → l7(X₀, X₁, X₂, X₃, X₄) :|: 0 ≤ 1+X₀ ∧ X₀ ≤ 1
  t₈: l7(X₀, X₁, X₂, X₃, X₄) → l8(X₀, X₁, X₂, X₃, X₄) :|: 0 ≤ 1+X₀ ∧ X₀ ≤ 1
  t₉: l8(X₀, X₁, X₂, X₃, X₄) → l9(X₀, X₄, X₂, X₃, X₄) :|: 0 ≤ 1+X₀ ∧ X₀ ≤ 1
  t₁₀: l9(X₀, X₁, X₂, X₃, X₄) → l10(X₀, X₁, X₂, X₃, X₄) :|: X₁ ≤ X₃ ∧ 0 ≤ 1+X₀ ∧ X₀ ≤ 1
  t₁₁: l9(X₀, X₁, X₂, X₃, X₄) → l11(X₀, X₁, X₂, X₃, X₄) :|: 1+X₃ ≤ X₁ ∧ 0 ≤ 1+X₀ ∧ X₀ ≤ 1


  Found invariant X₀ ≤ 1 ∧ 0 ≤ 1+X₀ for location l6


  Found invariant X₄ ≤ X₁ ∧ 1+X₃ ≤ X₁ ∧ X₀ ≤ 1 ∧ 0 ≤ 1+X₀ for location l12


  Found invariant X₄ ≤ X₃ ∧ X₁ ≤ X₃ ∧ X₂ ≤ 0 ∧ X₂ ≤ 1+X₀ ∧ X₀+X₂ ≤ 1 ∧ X₀ ≤ 1 ∧ 0 ≤ 1+X₀ for location l10_v3


  Found invariant X₄ ≤ X₁ ∧ 1+X₃ ≤ X₁ ∧ X₀ ≤ 1 ∧ 0 ≤ 1+X₀ for location l11


  Found invariant X₄ ≤ X₃ ∧ X₁ ≤ X₃ ∧ 1 ≤ X₂ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ X₀ ≤ 1 ∧ 0 ≤ 1+X₀ for location l10_v2


  Found invariant X₄ ≤ X₃ ∧ X₁ ≤ 1+X₃ ∧ X₂ ≤ 0 ∧ X₂ ≤ 1+X₀ ∧ X₀+X₂ ≤ 1 ∧ X₀ ≤ 1 ∧ 0 ≤ 1+X₀ for location l9_v1


  Found invariant X₄ ≤ X₃ ∧ X₁ ≤ 1+X₃ ∧ 1 ≤ X₂ ∧ 0 ≤ X₀+X₂ ∧ X₀ ≤ X₂ ∧ X₀ ≤ 1 ∧ 0 ≤ 1+X₀ for location l9_v2


  Found invariant X₀ ≤ 1 ∧ 0 ≤ 1+X₀ for location l7


  Found invariant X₄ ≤ X₃ ∧ X₄ ≤ X₁ ∧ X₁ ≤ X₄ ∧ X₁ ≤ X₃ ∧ X₀ ≤ 1 ∧ 0 ≤ 1+X₀ for location l10_v1


  Found invariant X₀ ≤ 1 ∧ 0 ≤ 1+X₀ for location l8


  Found invariant X₄ ≤ X₁ ∧ X₁ ≤ X₄ ∧ X₀ ≤ 1 ∧ 0 ≤ 1+X₀ for location l9


All Bounds
Timebounds
  Overall timebound:inf {Infinity}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: 1 {O(1)}
    t₈: 1 {O(1)}
    t₉: 1 {O(1)}
    t₁₀: inf {Infinity}
    t₁₁: 1 {O(1)}
    t₁₂: inf {Infinity}
    t₁₃: inf {Infinity}
    t₁₄: 1 {O(1)}


Costbounds
  Overall costbound: inf {Infinity}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: 1 {O(1)}
    t₈: 1 {O(1)}
    t₉: 1 {O(1)}
    t₁₀: inf {Infinity}
    t₁₁: 1 {O(1)}
    t₁₂: inf {Infinity}
    t₁₃: inf {Infinity}
    t₁₄: 1 {O(1)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₀, X₂: X₂ {O(n)}
    t₀, X₃: X₃ {O(n)}
    t₀, X₄: X₄ {O(n)}
    t₁, X₀: X₀ {O(n)}
    t₁, X₁: X₁ {O(n)}
    t₁, X₃: X₃ {O(n)}
    t₁, X₄: X₄ {O(n)}
    t₂, X₀: X₀ {O(n)}
    t₂, X₁: X₁ {O(n)}
    t₂, X₃: X₃ {O(n)}
    t₂, X₄: X₄ {O(n)}
    t₃, X₀: X₀ {O(n)}
    t₃, X₁: X₁ {O(n)}
    t₃, X₃: X₃ {O(n)}
    t₃, X₄: X₄ {O(n)}
    t₄, X₀: X₀ {O(n)}
    t₄, X₁: X₁ {O(n)}
    t₄, X₃: X₃ {O(n)}
    t₄, X₄: X₄ {O(n)}
    t₅, X₀: 1 {O(1)}
    t₅, X₁: X₁ {O(n)}
    t₅, X₃: X₃ {O(n)}
    t₅, X₄: X₄ {O(n)}
    t₆, X₀: 1 {O(1)}
    t₆, X₁: X₁ {O(n)}
    t₆, X₃: X₃ {O(n)}
    t₆, X₄: X₄ {O(n)}
    t₇, X₀: 1 {O(1)}
    t₇, X₁: 2⋅X₁ {O(n)}
    t₇, X₃: 2⋅X₃ {O(n)}
    t₇, X₄: 2⋅X₄ {O(n)}
    t₈, X₀: 1 {O(1)}
    t₈, X₁: 2⋅X₁ {O(n)}
    t₈, X₃: 2⋅X₃ {O(n)}
    t₈, X₄: 2⋅X₄ {O(n)}
    t₉, X₀: 1 {O(1)}
    t₉, X₁: 2⋅X₄ {O(n)}
    t₉, X₃: 2⋅X₃ {O(n)}
    t₉, X₄: 2⋅X₄ {O(n)}
    t₁₀, X₀: 1 {O(1)}
    t₁₀, X₃: 2⋅X₃ {O(n)}
    t₁₀, X₄: 2⋅X₄ {O(n)}
    t₁₁, X₀: 1 {O(1)}
    t₁₁, X₃: 6⋅X₃ {O(n)}
    t₁₁, X₄: 6⋅X₄ {O(n)}
    t₁₂, X₀: 1 {O(1)}
    t₁₂, X₃: 2⋅X₃ {O(n)}
    t₁₂, X₄: 2⋅X₄ {O(n)}
    t₁₃, X₀: 1 {O(1)}
    t₁₃, X₃: 2⋅X₃ {O(n)}
    t₁₃, X₄: 2⋅X₄ {O(n)}
    t₁₄, X₀: 1 {O(1)}
    t₁₄, X₃: 6⋅X₃ {O(n)}
    t₁₄, X₄: 6⋅X₄ {O(n)}

