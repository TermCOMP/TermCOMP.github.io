NO

# LoAT Proof:
NO

WORST_CASE(Omega(n^1),?)
NO

Initial ITS

Start location: eval_catmouse_start

Location map:
LoAT_sink -> 0
eval_catmouse_start -> 1
eval_catmouse_bb0_in -> 2
eval_catmouse_0 -> 3
eval_catmouse_1 -> 4
eval_catmouse_2 -> 5
eval_catmouse_3 -> 6
eval_catmouse_4 -> 7
eval_catmouse_5 -> 8
eval_catmouse_bb1_in -> 9
eval_catmouse_bb2_in -> 10
eval_catmouse_bb3_in -> 11
eval_catmouse_stop -> 12

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: -2+i1 == 0 /\ i1'=3, i3'=1+i3
   2: -3+i1 == 0 /\ i1'=4, i3'=1+i3
   3: -4+i1 == 0 /\ i1'=5, i3'=1+i3
   4: -5+i1 == 0 /\ i1'=6, i3'=1+i3
   5: -6+i1 == 0 /\ i1'=7, i3'=1+i3
   6: -7+i1 == 0 /\ i1'=8, i3'=1+i3
   7: -8+i1 == 0 /\ i1'=9, i3'=1+i3, i6'=0
   8: (-9+i1 == 0 /\ i6-i5 <= 0) /\ i1'=10, i3'=1+i3
   9: (-9+i1 == 0 /\ i6-i5 > 0) /\ i1'=11, i3'=1+i3
  10: (i6-i4 <= 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i6'=1+i6
  11: (i6-i4 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i6'=-1+i6
  12: -11+i1 == 0 /\ i1'=12, i3'=1+i3

Dependency graph:
0 -> 1
1 -> 2
2 -> 3
3 -> 4
4 -> 5
5 -> 6
6 -> 7
7 -> 8, 7 -> 9
8 -> 10, 8 -> 11
9 -> 12
10 -> 8, 10 -> 9
11 -> 8, 11 -> 9

Chained Linear Paths

	Applied Chaining

	First rule:
	-1+i1 == 0 /\ i1'=2, i3'=1+i3
	Second rule:
	-2+i1 == 0 /\ i1'=3, i3'=1+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 0, 1
	
	Applied Chaining

	First rule:
	-3+i1 == 0 /\ i1'=4, i3'=1+i3
	Second rule:
	-4+i1 == 0 /\ i1'=5, i3'=1+i3
	New rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 2, 3
	
	Applied Chaining

	First rule:
	-5+i1 == 0 /\ i1'=6, i3'=1+i3
	Second rule:
	-6+i1 == 0 /\ i1'=7, i3'=1+i3
	New rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=7, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 4, 5
	
	Applied Chaining

	First rule:
	-7+i1 == 0 /\ i1'=8, i3'=1+i3
	Second rule:
	-8+i1 == 0 /\ i1'=9, i3'=1+i3, i6'=0
	New rule:
	(0 == 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3, i6'=0
	
	Applied Deletion

	Removed the following rules: 6, 7
	
	Applied Chaining

	First rule:
	(-9+i1 == 0 /\ i6-i5 > 0) /\ i1'=11, i3'=1+i3
	Second rule:
	-11+i1 == 0 /\ i1'=12, i3'=1+i3
	New rule:
	(0 == 0 /\ -9+i1 == 0 /\ i6-i5 > 0) /\ i1'=12, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 9, 12
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	Second rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	
	Applied Deletion

	Removed the following rules: 13, 14
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=7, i3'=2+i3
	Second rule:
	(0 == 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3, i6'=0
	New rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=9, i3'=4+i3, i6'=0
	
	Applied Deletion

	Removed the following rules: 15, 16
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	Second rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=9, i3'=4+i3, i6'=0
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=9, i3'=8+i3, i6'=0
	
	Applied Deletion

	Removed the following rules: 18, 19

Start location: eval_catmouse_start

Location map:
LoAT_sink -> 0
eval_catmouse_start -> 1
eval_catmouse_bb0_in -> 2
eval_catmouse_0 -> 3
eval_catmouse_1 -> 4
eval_catmouse_2 -> 5
eval_catmouse_3 -> 6
eval_catmouse_4 -> 7
eval_catmouse_5 -> 8
eval_catmouse_bb1_in -> 9
eval_catmouse_bb2_in -> 10
eval_catmouse_bb3_in -> 11
eval_catmouse_stop -> 12

Rules:
   8: (-9+i1 == 0 /\ i6-i5 <= 0) /\ i1'=10, i3'=1+i3
  10: (i6-i4 <= 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i6'=1+i6
  11: (i6-i4 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i6'=-1+i6
  17: (0 == 0 /\ -9+i1 == 0 /\ i6-i5 > 0) /\ i1'=12, i3'=2+i3
  20: (0 == 0 /\ -1+i1 == 0) /\ i1'=9, i3'=8+i3, i6'=0

Dependency graph:
8 -> 10, 8 -> 11
10 -> 8, 10 -> 17
11 -> 8, 11 -> 17
20 -> 8, 20 -> 17

Preprocessed Transitions

	Simplified Guard

	Original rule:
	(0 == 0 /\ -9+i1 == 0 /\ i6-i5 > 0) /\ i1'=12, i3'=2+i3
	New rule:
	(-9+i1 == 0 /\ i6-i5 > 0) /\ i1'=12, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=9, i3'=8+i3, i6'=0
	New rule:
	-1+i1 == 0 /\ i1'=9, i3'=8+i3, i6'=0

Start location: eval_catmouse_start

Location map:
LoAT_sink -> 0
eval_catmouse_start -> 1
eval_catmouse_bb0_in -> 2
eval_catmouse_0 -> 3
eval_catmouse_1 -> 4
eval_catmouse_2 -> 5
eval_catmouse_3 -> 6
eval_catmouse_4 -> 7
eval_catmouse_5 -> 8
eval_catmouse_bb1_in -> 9
eval_catmouse_bb2_in -> 10
eval_catmouse_bb3_in -> 11
eval_catmouse_stop -> 12

Rules:
   8: (-9+i1 == 0 /\ i6-i5 <= 0) /\ i1'=10, i3'=1+i3
  10: (i6-i4 <= 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i6'=1+i6
  11: (i6-i4 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i6'=-1+i6
  21: (-9+i1 == 0 /\ i6-i5 > 0) /\ i1'=12, i3'=2+i3
  22: -1+i1 == 0 /\ i1'=9, i3'=8+i3, i6'=0

Dependency graph:
8 -> 10, 8 -> 11
10 -> 8, 10 -> 21
11 -> 8, 11 -> 21
22 -> 8, 22 -> 21

Step with 22

	Trace

	22[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 21

	Trace

	22[(-1+i1 == 0)]
	21[(-9+i1 == 0 /\ i6-i5 > 0)]
	
	Blocked

	{}
	{}
	{}
	
Backtrack

	Trace

	22[(-1+i1 == 0)]
	
	Blocked

	{}
	{21[T]}
	
Step with 8

	Trace

	22[(-1+i1 == 0)]
	8[(-9+i1 == 0 /\ i6-i5 <= 0)]
	
	Blocked

	{}
	{21[T]}
	{}
	
Step with 10

	Trace

	22[(-1+i1 == 0)]
	8[(-9+i1 == 0 /\ i6-i5 <= 0)]
	10[(i6-i4 <= 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{21[T]}
	{}
	{}
	
Poly(n^1)

Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -9+i1 == 0 /\ i6-i4 <= 0 /\ i6-i5 <= 0) /\ i1'=9, i3'=2+i3, i6'=1+i6
		New rule:
		(-9+i1 == 0 /\ i6-i4 <= 0 /\ i6-i5 <= 0) /\ i1'=9, i3'=2+i3, i6'=1+i6

	Loop Acceleration

	Original rule:
	(-9+i1 == 0 /\ i6-i4 <= 0 /\ i6-i5 <= 0) /\ i1'=9, i3'=2+i3, i6'=1+i6
	New rule:
	(-9+i1 >= 0 /\ 9-i1 >= 0 /\ -1+it21 >= 0 /\ 1-i6+i4-it21 >= 0 /\ 1-i6-it21+i5 >= 0) /\ i1'=i1, i3'=i3+2*it21, i6'=i6+it21

		-i6+i4 >= 0 [0]: montonic decrease yields 1-i6+i4-it21 >= 0
		
		-9+i1 >= 0 [0]: unchanged
		
		9-i1 >= 0 [0]: unchanged
		
		-i6+i5 >= 0 [0]: montonic decrease yields 1-i6-it21+i5 >= 0
		
		Replacement map: {-i6+i4 >= 0 -> 1-i6+i4-it21 >= 0, -9+i1 >= 0 -> -9+i1 >= 0, 9-i1 >= 0 -> 9-i1 >= 0, -i6+i5 >= 0 -> 1-i6-it21+i5 >= 0}

	Removed Trivial Updates

	Original rule:
	(-9+i1 >= 0 /\ 9-i1 >= 0 /\ -1+it21 >= 0 /\ 1-i6+i4-it21 >= 0 /\ 1-i6-it21+i5 >= 0) /\ i1'=i1, i3'=i3+2*it21, i6'=i6+it21
	New rule:
	(-9+i1 >= 0 /\ 9-i1 >= 0 /\ -1+it21 >= 0 /\ 1-i6+i4-it21 >= 0 /\ 1-i6-it21+i5 >= 0) /\ i3'=i3+2*it21, i6'=i6+it21

Start location: eval_catmouse_start

Location map:
LoAT_sink -> 0
eval_catmouse_start -> 1
eval_catmouse_bb0_in -> 2
eval_catmouse_0 -> 3
eval_catmouse_1 -> 4
eval_catmouse_2 -> 5
eval_catmouse_3 -> 6
eval_catmouse_4 -> 7
eval_catmouse_5 -> 8
eval_catmouse_bb1_in -> 9
eval_catmouse_bb2_in -> 10
eval_catmouse_bb3_in -> 11
eval_catmouse_stop -> 12

Rules:
   8: (-9+i1 == 0 /\ i6-i5 <= 0) /\ i1'=10, i3'=1+i3
  10: (i6-i4 <= 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i6'=1+i6
  11: (i6-i4 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i6'=-1+i6
  21: (-9+i1 == 0 /\ i6-i5 > 0) /\ i1'=12, i3'=2+i3
  22: -1+i1 == 0 /\ i1'=9, i3'=8+i3, i6'=0
  23: (-9+i1 >= 0 /\ 9-i1 >= 0 /\ -1+it21 >= 0 /\ 1-i6+i4-it21 >= 0 /\ 1-i6-it21+i5 >= 0) /\ i3'=i3+2*it21, i6'=i6+it21

Dependency graph:
8 -> 10, 8 -> 11
10 -> 8, 10 -> 21, 10 -> 23
11 -> 8, 11 -> 21, 11 -> 23
22 -> 8, 22 -> 21, 22 -> 23
23 -> 8, 23 -> 21

	Trace

	22[(-1+i1 == 0)]
	23[(-9+i1 >= 0 /\ 9-i1 >= 0 /\ -1+it21 >= 0 /\ 1-i6+i4-it21 >= 0 /\ 1-i6-it21+i5 >= 0)]
	
	Blocked

	{}
	{21[T]}
	{23[T]}
	
Step with 21

	Trace

	22[(-1+i1 == 0)]
	23[(-9+i1 >= 0 /\ 9-i1 >= 0 /\ -1+it21 >= 0 /\ 1-i6+i4-it21 >= 0 /\ 1-i6-it21+i5 >= 0)]
	21[(-9+i1 == 0 /\ i6-i5 > 0)]
	
	Blocked

	{}
	{21[T]}
	{23[T]}
	{}
	
Backtrack

	Trace

	22[(-1+i1 == 0)]
	23[(-9+i1 >= 0 /\ 9-i1 >= 0 /\ -1+it21 >= 0 /\ 1-i6+i4-it21 >= 0 /\ 1-i6-it21+i5 >= 0)]
	
	Blocked

	{}
	{21[T]}
	{21[T], 23[T]}
	
Step with 8

	Trace

	22[(-1+i1 == 0)]
	23[(-9+i1 >= 0 /\ 9-i1 >= 0 /\ -1+it21 >= 0 /\ 1-i6+i4-it21 >= 0 /\ 1-i6-it21+i5 >= 0)]
	8[(-9+i1 == 0 /\ i6-i5 <= 0)]
	
	Blocked

	{}
	{21[T]}
	{21[T], 23[T]}
	{}
	
Step with 11

	Trace

	22[(-1+i1 == 0)]
	23[(-9+i1 >= 0 /\ 9-i1 >= 0 /\ -1+it21 >= 0 /\ 1-i6+i4-it21 >= 0 /\ 1-i6-it21+i5 >= 0)]
	8[(-9+i1 == 0 /\ i6-i5 <= 0)]
	11[(i6-i4 > 0 /\ -10+i1 == 0)]
	
	Blocked

	{}
	{21[T]}
	{21[T], 23[T]}
	{}
	{}
	
Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -9+i1 == 0 /\ i6-i4 > 0 /\ i6-i5 <= 0) /\ i1'=9, i3'=2+i3, i6'=-1+i6
		New rule:
		(-9+i1 == 0 /\ i6-i4 > 0 /\ i6-i5 <= 0) /\ i1'=9, i3'=2+i3, i6'=-1+i6

	Loop Acceleration

	Original rule:
	(-9+i1 == 0 /\ i6-i4 > 0 /\ i6-i5 <= 0) /\ i1'=9, i3'=2+i3, i6'=-1+i6
	New rule:
	(-9+i1 >= 0 /\ -1+it69 >= 0 /\ 9-i1 >= 0 /\ -i6+i5 >= 0 /\ 1+i6-i4-it69 > 0) /\ i1'=i1, i3'=i3+2*it69, i6'=i6-it69

		-9+i1 >= 0 [0]: unchanged
		
		i6-i4 > 0 [0]: montonic decrease yields 1+i6-i4-it69 > 0
		
		9-i1 >= 0 [0]: unchanged
		
		-i6+i5 >= 0 [0]: monotonic increase yields -i6+i5 >= 0
		
		Replacement map: {-9+i1 >= 0 -> -9+i1 >= 0, i6-i4 > 0 -> 1+i6-i4-it69 > 0, 9-i1 >= 0 -> 9-i1 >= 0, -i6+i5 >= 0 -> -i6+i5 >= 0}

	Removed Trivial Updates

	Original rule:
	(-9+i1 >= 0 /\ -1+it69 >= 0 /\ 9-i1 >= 0 /\ -i6+i5 >= 0 /\ 1+i6-i4-it69 > 0) /\ i1'=i1, i3'=i3+2*it69, i6'=i6-it69
	New rule:
	(-9+i1 >= 0 /\ -1+it69 >= 0 /\ 9-i1 >= 0 /\ -i6+i5 >= 0 /\ 1+i6-i4-it69 > 0) /\ i3'=i3+2*it69, i6'=i6-it69
	
	Instantiation

	Original rule:
	(-9+i1 >= 0 /\ -1+it69 >= 0 /\ 9-i1 >= 0 /\ -i6+i5 >= 0 /\ 1+i6-i4-it69 > 0) /\ i3'=i3+2*it69, i6'=i6-it69
	New rule:
	(1 > 0 /\ -9+i1 >= 0 /\ -1+i6-i4 >= 0 /\ 9-i1 >= 0 /\ -i6+i5 >= 0) /\ i3'=2*i6+i3-2*i4, i6'=i4

Start location: eval_catmouse_start

Location map:
LoAT_sink -> 0
eval_catmouse_start -> 1
eval_catmouse_bb0_in -> 2
eval_catmouse_0 -> 3
eval_catmouse_1 -> 4
eval_catmouse_2 -> 5
eval_catmouse_3 -> 6
eval_catmouse_4 -> 7
eval_catmouse_5 -> 8
eval_catmouse_bb1_in -> 9
eval_catmouse_bb2_in -> 10
eval_catmouse_bb3_in -> 11
eval_catmouse_stop -> 12

Rules:
   8: (-9+i1 == 0 /\ i6-i5 <= 0) /\ i1'=10, i3'=1+i3
  10: (i6-i4 <= 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i6'=1+i6
  11: (i6-i4 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i6'=-1+i6
  21: (-9+i1 == 0 /\ i6-i5 > 0) /\ i1'=12, i3'=2+i3
  22: -1+i1 == 0 /\ i1'=9, i3'=8+i3, i6'=0
  23: (-9+i1 >= 0 /\ 9-i1 >= 0 /\ -1+it21 >= 0 /\ 1-i6+i4-it21 >= 0 /\ 1-i6-it21+i5 >= 0) /\ i3'=i3+2*it21, i6'=i6+it21
  24: (1 > 0 /\ -9+i1 >= 0 /\ -1+i6-i4 >= 0 /\ 9-i1 >= 0 /\ -i6+i5 >= 0) /\ i3'=2*i6+i3-2*i4, i6'=i4

Dependency graph:
8 -> 10, 8 -> 11
10 -> 8, 10 -> 21, 10 -> 23, 10 -> 24
11 -> 8, 11 -> 21, 11 -> 23, 11 -> 24
22 -> 8, 22 -> 21, 22 -> 23, 22 -> 24
23 -> 8, 23 -> 21, 23 -> 24
24 -> 8, 24 -> 21, 24 -> 23

	Trace

	22[(-1+i1 == 0)]
	23[(-9+i1 >= 0 /\ 9-i1 >= 0 /\ -1+it21 >= 0 /\ 1-i6+i4-it21 >= 0 /\ 1-i6-it21+i5 >= 0)]
	24[(1 > 0 /\ -9+i1 >= 0 /\ -1+i6-i4 >= 0 /\ 9-i1 >= 0 /\ -i6+i5 >= 0)]
	
	Blocked

	{}
	{21[T]}
	{21[T], 23[T]}
	{24[T]}
	
Nonterm

	Certificate of Non-Termination

	Original rule:
	(-i6+i4 >= 0 /\ -9+i1 >= 0 /\ -i4+i5 >= 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -1-i4+i5 >= 0) /\ i3'=4-2*i6+i3+2*i4, i6'=i4
	New rule:
	(-1+it75 >= 0 /\ -i6+i4 >= 0 /\ -9+i1 >= 0 /\ -i4+i5 >= 0 /\ 9-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=0

		-i6+i4 >= 0 [0]: trivial
		
		-9+i1 >= 0 [0]: unchanged
		
		-i4+i5 >= 0 [0]: unchanged
		
		9-i1 >= 0 [0]: unchanged
		
		-1-i4+i5 >= 0 [0]: unchanged
		
		Replacement map: {-i6+i4 >= 0 -> -i6+i4 >= 0, -9+i1 >= 0 -> -9+i1 >= 0, -i4+i5 >= 0 -> -i4+i5 >= 0, 9-i1 >= 0 -> 9-i1 >= 0, -1-i4+i5 >= 0 -> -1-i4+i5 >= 0}

		Extracted Implied Equalities

		Original rule:
		(1 > 0 /\ -9+i1 >= 0 /\ -1+i6-i4+it21 >= 0 /\ 9-i1 >= 0 /\ -1+it21 >= 0 /\ 1-i6+i4-it21 >= 0 /\ 1-i6-it21+i5 >= 0 /\ -i6-it21+i5 >= 0) /\ i3'=2*i6+i3-2*i4+4*it21, i6'=i4
		New rule:
		(1 > 0 /\ -9+i1 >= 0 /\ -1+i6-i4+it21 >= 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -1+it21 >= 0 /\ 1-i6+i4-it21 >= 0 /\ 1-i6+i4-it21 == 0 /\ 1-i6-it21+i5 >= 0 /\ -i6-it21+i5 >= 0) /\ i3'=2*i6+i3-2*i4+4*it21, i6'=i4
		
		Propagated Equalities

		Original rule:
		(1 > 0 /\ -9+i1 >= 0 /\ -1+i6-i4+it21 >= 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -1+it21 >= 0 /\ 1-i6+i4-it21 >= 0 /\ 1-i6+i4-it21 == 0 /\ 1-i6-it21+i5 >= 0 /\ -i6-it21+i5 >= 0) /\ i3'=2*i6+i3-2*i4+4*it21, i6'=i4
		New rule:
		(0 >= 0 /\ 0 == 0 /\ 1 > 0 /\ -i6+i4 >= 0 /\ -9+i1 >= 0 /\ -i4+i5 >= 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -1-i4+i5 >= 0) /\ i3'=4-2*i6+i3+2*i4, i6'=i4
		
			propagated equality it21 = 1-i6+i4
			
		Simplified Guard

		Original rule:
		(0 >= 0 /\ 0 == 0 /\ 1 > 0 /\ -i6+i4 >= 0 /\ -9+i1 >= 0 /\ -i4+i5 >= 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -1-i4+i5 >= 0) /\ i3'=4-2*i6+i3+2*i4, i6'=i4
		New rule:
		(-i6+i4 >= 0 /\ -9+i1 >= 0 /\ -i4+i5 >= 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -1-i4+i5 >= 0) /\ i3'=4-2*i6+i3+2*i4, i6'=i4

	Loop Acceleration

	Original rule:
	(-i6+i4 >= 0 /\ -9+i1 >= 0 /\ -i4+i5 >= 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -1-i4+i5 >= 0) /\ i3'=4-2*i6+i3+2*i4, i6'=i4
	New rule:
	(0 >= 0 /\ -1+it75 >= 0 /\ -i6+i4 >= 0 /\ -9+i1 >= 0 /\ -i4+i5 >= 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=i1, i3'=4-2*i6+i3+2*i4+4*it75, i6'=i4

		-i6+i4 >= 0 [0]: trivial
		
		-9+i1 >= 0 [0]: unchanged
		
		-i4+i5 >= 0 [0]: unchanged
		
		9-i1 >= 0 [0]: unchanged
		
		-1-i4+i5 >= 0 [0]: unchanged
		
		Replacement map: {-i6+i4 >= 0 -> -i6+i4 >= 0, -9+i1 >= 0 -> -9+i1 >= 0, -i4+i5 >= 0 -> -i4+i5 >= 0, 9-i1 >= 0 -> 9-i1 >= 0, -1-i4+i5 >= 0 -> -1-i4+i5 >= 0}

	Extracted Implied Equalities

	Original rule:
	(0 >= 0 /\ -1+it75 >= 0 /\ -i6+i4 >= 0 /\ -9+i1 >= 0 /\ -i4+i5 >= 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=i1, i3'=4-2*i6+i3+2*i4+4*it75, i6'=i4
	New rule:
	(0 >= 0 /\ -1+it75 >= 0 /\ -i6+i4 >= 0 /\ -9+i1 >= 0 /\ -i4+i5 >= 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=i1, i3'=4-2*i6+i3+2*i4+4*it75, i6'=i4
	
	Simplified Guard

	Original rule:
	(0 >= 0 /\ -1+it75 >= 0 /\ -i6+i4 >= 0 /\ -9+i1 >= 0 /\ -i4+i5 >= 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=i1, i3'=4-2*i6+i3+2*i4+4*it75, i6'=i4
	New rule:
	(-1+it75 >= 0 /\ -i6+i4 >= 0 /\ -9+i1 >= 0 /\ -i4+i5 >= 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=i1, i3'=4-2*i6+i3+2*i4+4*it75, i6'=i4
	
	Removed Trivial Updates

	Original rule:
	(-1+it75 >= 0 /\ -i6+i4 >= 0 /\ -9+i1 >= 0 /\ -i4+i5 >= 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -1-i4+i5 >= 0) /\ i1'=i1, i3'=4-2*i6+i3+2*i4+4*it75, i6'=i4
	New rule:
	(-1+it75 >= 0 /\ -i6+i4 >= 0 /\ -9+i1 >= 0 /\ -i4+i5 >= 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -1-i4+i5 >= 0) /\ i3'=4-2*i6+i3+2*i4+4*it75, i6'=i4

Start location: eval_catmouse_start

Location map:
LoAT_sink -> 0
eval_catmouse_start -> 1
eval_catmouse_bb0_in -> 2
eval_catmouse_0 -> 3
eval_catmouse_1 -> 4
eval_catmouse_2 -> 5
eval_catmouse_3 -> 6
eval_catmouse_4 -> 7
eval_catmouse_5 -> 8
eval_catmouse_bb1_in -> 9
eval_catmouse_bb2_in -> 10
eval_catmouse_bb3_in -> 11
eval_catmouse_stop -> 12

Rules:
   8: (-9+i1 == 0 /\ i6-i5 <= 0) /\ i1'=10, i3'=1+i3
  10: (i6-i4 <= 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i6'=1+i6
  11: (i6-i4 > 0 /\ -10+i1 == 0) /\ i1'=9, i3'=1+i3, i6'=-1+i6
  21: (-9+i1 == 0 /\ i6-i5 > 0) /\ i1'=12, i3'=2+i3
  22: -1+i1 == 0 /\ i1'=9, i3'=8+i3, i6'=0
  23: (-9+i1 >= 0 /\ 9-i1 >= 0 /\ -1+it21 >= 0 /\ 1-i6+i4-it21 >= 0 /\ 1-i6-it21+i5 >= 0) /\ i3'=i3+2*it21, i6'=i6+it21
  24: (1 > 0 /\ -9+i1 >= 0 /\ -1+i6-i4 >= 0 /\ 9-i1 >= 0 /\ -i6+i5 >= 0) /\ i3'=2*i6+i3-2*i4, i6'=i4
  25: (-1+it75 >= 0 /\ -i6+i4 >= 0 /\ -9+i1 >= 0 /\ -i4+i5 >= 0 /\ 9-i1 >= 0 /\ -1-i4+i5 >= 0) /\ i1'=0
  26: (-1+it75 >= 0 /\ -i6+i4 >= 0 /\ -9+i1 >= 0 /\ -i4+i5 >= 0 /\ 9-i1 >= 0 /\ 9-i1 == 0 /\ -1-i4+i5 >= 0) /\ i3'=4-2*i6+i3+2*i4+4*it75, i6'=i4

Dependency graph:
8 -> 10, 8 -> 11
10 -> 8, 10 -> 21, 10 -> 23, 10 -> 24, 10 -> 25, 10 -> 26
11 -> 8, 11 -> 21, 11 -> 23, 11 -> 24, 11 -> 25, 11 -> 26
22 -> 8, 22 -> 21, 22 -> 23, 22 -> 24, 22 -> 25, 22 -> 26
23 -> 8, 23 -> 21, 23 -> 24
24 -> 8, 24 -> 21, 24 -> 23, 24 -> 25, 24 -> 26
26 -> 8, 26 -> 21, 26 -> 23, 26 -> 25

Step with 25

	Trace

	22[(-1+i1 == 0)]
	25[(-1+it75 >= 0 /\ -i6+i4 >= 0 /\ -9+i1 >= 0 /\ -i4+i5 >= 0 /\ 9-i1 >= 0 /\ -1-i4+i5 >= 0)]
	
	Blocked

	{}
	{21[T]}
	{25[T]}
	
Refute

	Counterexample

	(i1=1, i3=-8, i4=0, i5=1)
	-22-> (i1=9, i3=0, i4=0, i5=1, i6=0 )
	-25-> ( )
	
NO

Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
MAYBE


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  
  Locations:  l0, l1, l10, l11, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂) → l2(X₀, X₁, X₂)
  t₃: l1(X₀, X₁, X₂) → l4(X₀, X₁, X₂)
  t₁₂: l10(X₀, X₁, X₂) → l11(X₀, X₁, X₂)
  t₁: l2(X₀, X₁, X₂) → l3(X₀, X₁, X₂)
  t₂: l3(X₀, X₁, X₂) → l1(X₀, X₁, X₂)
  t₄: l4(X₀, X₁, X₂) → l5(X₀, X₁, X₂)
  t₅: l5(X₀, X₁, X₂) → l6(X₀, X₁, X₂)
  t₆: l6(X₀, X₁, X₂) → l7(X₀, X₁, X₂)
  t₇: l7(X₀, X₁, X₂) → l8(X₀, X₁, 0)
  t₉: l8(X₀, X₁, X₂) → l10(X₀, X₁, X₂) :|: 1+X₁ ≤ X₂
  t₈: l8(X₀, X₁, X₂) → l9(X₀, X₁, X₂) :|: X₂ ≤ X₁
  t₁₀: l9(X₀, X₁, X₂) → l8(X₀, X₁, 1+X₂) :|: X₂ ≤ X₀
  t₁₁: l9(X₀, X₁, X₂) → l8(X₀, X₁, X₂-1) :|: 1+X₀ ≤ X₂


Preprocessing
  Found invariant 1+X₁ ≤ X₂ for location l11


  Found invariant 1+X₁ ≤ X₂ for location l10


  Found invariant X₂ ≤ X₁ for location l9


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  
  Locations:  l0, l1, l10, l11, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂) → l2(X₀, X₁, X₂)
  t₃: l1(X₀, X₁, X₂) → l4(X₀, X₁, X₂)
  t₁₂: l10(X₀, X₁, X₂) → l11(X₀, X₁, X₂) :|: 1+X₁ ≤ X₂
  t₁: l2(X₀, X₁, X₂) → l3(X₀, X₁, X₂)
  t₂: l3(X₀, X₁, X₂) → l1(X₀, X₁, X₂)
  t₄: l4(X₀, X₁, X₂) → l5(X₀, X₁, X₂)
  t₅: l5(X₀, X₁, X₂) → l6(X₀, X₁, X₂)
  t₆: l6(X₀, X₁, X₂) → l7(X₀, X₁, X₂)
  t₇: l7(X₀, X₁, X₂) → l8(X₀, X₁, 0)
  t₉: l8(X₀, X₁, X₂) → l10(X₀, X₁, X₂) :|: 1+X₁ ≤ X₂
  t₈: l8(X₀, X₁, X₂) → l9(X₀, X₁, X₂) :|: X₂ ≤ X₁
  t₁₀: l9(X₀, X₁, X₂) → l8(X₀, X₁, 1+X₂) :|: X₂ ≤ X₀ ∧ X₂ ≤ X₁
  t₁₁: l9(X₀, X₁, X₂) → l8(X₀, X₁, X₂-1) :|: 1+X₀ ≤ X₂ ∧ X₂ ≤ X₁


  Found invariant 1+X₂ ≤ X₁ ∧ X₂ ≤ X₀ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₁ ∧ 1+X₀ ≤ X₁ for location l8_v3


  Found invariant 1+X₂ ≤ 0 ∧ 1+X₂ ≤ X₁ ∧ 2+X₀+X₂ ≤ 0 ∧ X₀ ≤ X₂ ∧ 0 ≤ X₁ ∧ 1+X₀ ≤ X₁ ∧ 1+X₀ ≤ 0 for location l8_v1


  Found invariant 1+X₂ ≤ X₁ ∧ X₂ ≤ X₀ ∧ X₀ ≤ X₂ ∧ 0 ≤ X₁ ∧ 1+X₀ ≤ X₁ for location l9_v3


  Found invariant 1+X₂ ≤ 0 ∧ 1+X₂ ≤ X₁ ∧ 2+X₀+X₂ ≤ 0 ∧ X₀ ≤ X₂ ∧ 0 ≤ X₁ ∧ 1+X₀ ≤ X₁ ∧ 1+X₀ ≤ 0 for location l9_v5


  Found invariant X₂ ≤ X₁ ∧ X₂ ≤ 1+X₀ ∧ 1+X₀ ≤ X₂ ∧ 0 ≤ X₁ ∧ 1+X₀ ≤ X₁ for location l9_v4


  Found invariant 0 ≤ X₂ ∧ 1+X₁ ≤ X₂ for location l10


  Found invariant 0 ≤ X₂ ∧ 1+X₁ ≤ X₂ for location l11


  Found invariant X₂ ≤ X₁ ∧ X₂ ≤ 1+X₀ ∧ 1+X₀ ≤ X₂ ∧ 0 ≤ X₁ ∧ 1+X₀ ≤ X₁ for location l8_v4


  Found invariant X₂ ≤ 0 ∧ X₂ ≤ X₁ ∧ 0 ≤ X₂ ∧ 0 ≤ X₁+X₂ ∧ 0 ≤ X₁ for location l9_v1


  Found invariant X₂ ≤ X₁ ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 1 ≤ X₀+X₂ ∧ 1 ≤ X₁ ∧ 1 ≤ X₀+X₁ ∧ 0 ≤ X₀ for location l9_v2


  Found invariant X₂ ≤ 0 ∧ 0 ≤ X₂ for location l8


  Found invariant X₂ ≤ 1+X₁ ∧ X₂ ≤ 1+X₀ ∧ 1 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 1 ≤ X₀+X₂ ∧ 0 ≤ X₁ ∧ 0 ≤ X₀+X₁ ∧ 0 ≤ X₀ for location l8_v2


All Bounds
Timebounds
  Overall timebound:inf {Infinity}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: 1 {O(1)}
    t₈: inf {Infinity}
    t₉: 1 {O(1)}
    t₁₀: inf {Infinity}
    t₁₁: inf {Infinity}
    t₁₂: 1 {O(1)}


Costbounds
  Overall costbound: inf {Infinity}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: 1 {O(1)}
    t₈: inf {Infinity}
    t₉: 1 {O(1)}
    t₁₀: inf {Infinity}
    t₁₁: inf {Infinity}
    t₁₂: 1 {O(1)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₀, X₂: X₂ {O(n)}
    t₁, X₀: X₀ {O(n)}
    t₁, X₁: X₁ {O(n)}
    t₁, X₂: X₂ {O(n)}
    t₂, X₀: X₀ {O(n)}
    t₂, X₁: X₁ {O(n)}
    t₂, X₂: X₂ {O(n)}
    t₃, X₀: X₀ {O(n)}
    t₃, X₁: X₁ {O(n)}
    t₃, X₂: X₂ {O(n)}
    t₄, X₀: X₀ {O(n)}
    t₄, X₁: X₁ {O(n)}
    t₄, X₂: X₂ {O(n)}
    t₅, X₀: X₀ {O(n)}
    t₅, X₁: X₁ {O(n)}
    t₅, X₂: X₂ {O(n)}
    t₆, X₀: X₀ {O(n)}
    t₆, X₁: X₁ {O(n)}
    t₆, X₂: X₂ {O(n)}
    t₇, X₀: X₀ {O(n)}
    t₇, X₁: X₁ {O(n)}
    t₇, X₂: 0 {O(1)}
    t₈, X₀: X₀ {O(n)}
    t₈, X₁: X₁ {O(n)}
    t₉, X₀: 2⋅X₀ {O(n)}
    t₉, X₁: 2⋅X₁ {O(n)}
    t₁₀, X₀: X₀ {O(n)}
    t₁₀, X₁: X₁ {O(n)}
    t₁₁, X₀: X₀ {O(n)}
    t₁₁, X₁: X₁ {O(n)}
    t₁₂, X₀: 2⋅X₀ {O(n)}
    t₁₂, X₁: 2⋅X₁ {O(n)}

