WORST_CASE(Omega(n^1),O(n^2))

# LoAT Proof:
WORST_CASE(Omega(n^1),?)

WORST_CASE(Omega(n^1),?)
Initial ITS

Start location: l0

Location map:
LoAT_sink -> 0
l0 -> 1
l1 -> 2
l2 -> 3

Rules:
   0: (i4 > 0 /\ -1+i1 == 0) /\ i1'=2, i3'=1+i3
   1: (i6 > 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=i6+i4, i6'=-1+i6
   2: (i6 <= 0 /\ -2+i1 == 0) /\ i1'=3, i3'=1+i3
   3: (-3+i1 == 0 /\ i4-i5^2 < 0) /\ i1'=3, i3'=1+i3, i4'=5*i4+i6^2, i5'=2*i5

Dependency graph:
0 -> 1, 0 -> 2
1 -> 1, 1 -> 2
2 -> 3
3 -> 3

Step with 0

	Trace

	0[(i4 > 0 /\ -1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 2

	Trace

	0[(i4 > 0 /\ -1+i1 == 0)]
	2[(i6 <= 0 /\ -2+i1 == 0)]
	
	Blocked

	{}
	{}
	{}
	
Step with 3

	Trace

	0[(i4 > 0 /\ -1+i1 == 0)]
	2[(i6 <= 0 /\ -2+i1 == 0)]
	3[(-3+i1 == 0 /\ i4-i5^2 < 0)]
	
	Blocked

	{}
	{}
	{}
	{}
	
Step with 3

	Trace

	0[(i4 > 0 /\ -1+i1 == 0)]
	2[(i6 <= 0 /\ -2+i1 == 0)]
	3[(-3+i1 == 0 /\ i4-i5^2 < 0)]
	3[(-3+i1 == 0 /\ i4-i5^2 < 0)]
	
	Blocked

	{}
	{}
	{}
	{}
	{}
	
Covered

	Trace

	0[(i4 > 0 /\ -1+i1 == 0)]
	2[(i6 <= 0 /\ -2+i1 == 0)]
	3[(-3+i1 == 0 /\ i4-i5^2 < 0)]
	
	Blocked

	{}
	{}
	{}
	{3[T]}
	
Backtrack

	Trace

	0[(i4 > 0 /\ -1+i1 == 0)]
	2[(i6 <= 0 /\ -2+i1 == 0)]
	
	Blocked

	{}
	{}
	{3[T]}
	
Backtrack

	Trace

	0[(i4 > 0 /\ -1+i1 == 0)]
	
	Blocked

	{}
	{2[T]}
	
Step with 1

	Trace

	0[(i4 > 0 /\ -1+i1 == 0)]
	1[(i6 > 0 /\ -2+i1 == 0)]
	
	Blocked

	{}
	{2[T]}
	{}
	
Poly(n^1)

Accelerate

	Loop Acceleration

	Original rule:
	(i6 > 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=i6+i4, i6'=-1+i6
	New rule:
	(-2+i1 >= 0 /\ 1+i6-it27 > 0 /\ 2-i1 >= 0 /\ -1+it27 >= 0) /\ i1'=i1, i3'=i3+it27, i4'=i4+i6*it27+1/2*it27-1/2*it27^2, i6'=i6-it27

		i6 > 0 [0]: montonic decrease yields 1+i6-it27 > 0
		
		-2+i1 >= 0 [0]: unchanged
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {i6 > 0 -> 1+i6-it27 > 0, -2+i1 >= 0 -> -2+i1 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-2+i1 >= 0 /\ 1+i6-it27 > 0 /\ 2-i1 >= 0 /\ -1+it27 >= 0) /\ i1'=i1, i3'=i3+it27, i4'=i4+i6*it27+1/2*it27-1/2*it27^2, i6'=i6-it27
	New rule:
	(-2+i1 >= 0 /\ 1+i6-it27 > 0 /\ 2-i1 >= 0 /\ -1+it27 >= 0) /\ i3'=i3+it27, i4'=i4+i6*it27+1/2*it27-1/2*it27^2, i6'=i6-it27
	
	Instantiation

	Original rule:
	(-2+i1 >= 0 /\ 1+i6-it27 > 0 /\ 2-i1 >= 0 /\ -1+it27 >= 0) /\ i3'=i3+it27, i4'=i4+i6*it27+1/2*it27-1/2*it27^2, i6'=i6-it27
	New rule:
	(1 > 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+i6 >= 0) /\ i3'=i6+i3, i4'=1/2*i6+i4+1/2*i6^2, i6'=0

Start location: l0

Location map:
LoAT_sink -> 0
l0 -> 1
l1 -> 2
l2 -> 3

Rules:
   0: (i4 > 0 /\ -1+i1 == 0) /\ i1'=2, i3'=1+i3
   1: (i6 > 0 /\ -2+i1 == 0) /\ i1'=2, i3'=1+i3, i4'=i6+i4, i6'=-1+i6
   2: (i6 <= 0 /\ -2+i1 == 0) /\ i1'=3, i3'=1+i3
   3: (-3+i1 == 0 /\ i4-i5^2 < 0) /\ i1'=3, i3'=1+i3, i4'=5*i4+i6^2, i5'=2*i5
   4: (1 > 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+i6 >= 0) /\ i3'=i6+i3, i4'=1/2*i6+i4+1/2*i6^2, i6'=0

Dependency graph:
0 -> 1, 0 -> 2, 0 -> 4
1 -> 1, 1 -> 2, 1 -> 4
2 -> 3
3 -> 3
4 -> 1, 4 -> 2

	Trace

	0[(i4 > 0 /\ -1+i1 == 0)]
	4[(1 > 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T], 4[T]}
	
Step with 2

	Trace

	0[(i4 > 0 /\ -1+i1 == 0)]
	4[(1 > 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+i6 >= 0)]
	2[(i6 <= 0 /\ -2+i1 == 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T], 4[T]}
	{}
	
Step with 3

	Trace

	0[(i4 > 0 /\ -1+i1 == 0)]
	4[(1 > 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+i6 >= 0)]
	2[(i6 <= 0 /\ -2+i1 == 0)]
	3[(-3+i1 == 0 /\ i4-i5^2 < 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T], 4[T]}
	{}
	{}
	
Step with 3

	Trace

	0[(i4 > 0 /\ -1+i1 == 0)]
	4[(1 > 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+i6 >= 0)]
	2[(i6 <= 0 /\ -2+i1 == 0)]
	3[(-3+i1 == 0 /\ i4-i5^2 < 0)]
	3[(-3+i1 == 0 /\ i4-i5^2 < 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T], 4[T]}
	{}
	{}
	{}
	
Covered

	Trace

	0[(i4 > 0 /\ -1+i1 == 0)]
	4[(1 > 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+i6 >= 0)]
	2[(i6 <= 0 /\ -2+i1 == 0)]
	3[(-3+i1 == 0 /\ i4-i5^2 < 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T], 4[T]}
	{}
	{3[T]}
	
Backtrack

	Trace

	0[(i4 > 0 /\ -1+i1 == 0)]
	4[(1 > 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+i6 >= 0)]
	2[(i6 <= 0 /\ -2+i1 == 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T], 4[T]}
	{3[T]}
	
Backtrack

	Trace

	0[(i4 > 0 /\ -1+i1 == 0)]
	4[(1 > 0 /\ -2+i1 >= 0 /\ 2-i1 >= 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T], 2[T], 4[T]}
	
Backtrack

	Trace

	0[(i4 > 0 /\ -1+i1 == 0)]
	
	Blocked

	{}
	{2[T], 4[T]}
	
Step with 1

	Trace

	0[(i4 > 0 /\ -1+i1 == 0)]
	1[(i6 > 0 /\ -2+i1 == 0)]
	
	Blocked

	{}
	{2[T], 4[T]}
	{}
	
Covered

	Trace

	0[(i4 > 0 /\ -1+i1 == 0)]
	
	Blocked

	{}
	{1[T], 2[T], 4[T]}
	
Backtrack

	Trace

	Blocked

	{0[T]}
	
Accept

Poly(n^1)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^2))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂) → l1(X₀, X₁, X₂) :|: 1 ≤ X₀
  t₁: l1(X₀, X₁, X₂) → l1(X₀+X₂, X₁, X₂-1) :|: 1 ≤ X₂
  t₂: l1(X₀, X₁, X₂) → l2(X₀, X₁, X₂) :|: X₂ ≤ 0
  t₃: l2(X₀, X₁, X₂) → l2(5⋅X₀+(X₂)², 2⋅X₁, X₂) :|: 1+X₀ ≤ (X₁)²


Preprocessing
  Found invariant 1 ≤ X₀ for location l1


  Found invariant X₂ ≤ 0 ∧ 1+X₂ ≤ X₀ ∧ 1 ≤ X₀ for location l2


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂
  Temp_Vars:  
  Locations:  l0, l1, l2
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂) → l1(X₀, X₁, X₂) :|: 1 ≤ X₀
  t₁: l1(X₀, X₁, X₂) → l1(X₀+X₂, X₁, X₂-1) :|: 1 ≤ X₂ ∧ 1 ≤ X₀
  t₂: l1(X₀, X₁, X₂) → l2(X₀, X₁, X₂) :|: X₂ ≤ 0 ∧ 1 ≤ X₀
  t₃: l2(X₀, X₁, X₂) → l2(5⋅X₀+(X₂)², 2⋅X₁, X₂) :|: 1+X₀ ≤ (X₁)² ∧ 1 ≤ X₀ ∧ 1+X₂ ≤ X₀ ∧ X₂ ≤ 0


MPRF for transition t₁: l1(X₀, X₁, X₂) → l1(X₀+X₂, X₁, X₂-1) :|: 1 ≤ X₂ ∧ 1 ≤ X₀ of depth 1:
  new bound:
    X₂ {O(n)}

  MPRF:
    • l1: [X₂]




TWN: t₃: l2→l2


  cycle: [t₃: l2→l2]
  original loop: (1+X₀ ≤ (X₁)² ∧ 1 ≤ X₀ ∧ 1+X₂ ≤ X₀ ∧ X₂ ≤ 0,(X₀,X₁,X₂) -> (5⋅X₀+(X₂)²,2⋅X₁,X₂))
  transformed loop: (1+X₀ ≤ (X₁)² ∧ 1 ≤ X₀ ∧ 1+X₂ ≤ X₀ ∧ X₂ ≤ 0,(X₀,X₁,X₂) -> (5⋅X₀+(X₂)²,2⋅X₁,X₂))
  loop: (1+X₀ ≤ (X₁)² ∧ 1 ≤ X₀ ∧ 1+X₂ ≤ X₀ ∧ X₂ ≤ 0,(X₀,X₁,X₂) -> (5⋅X₀+(X₂)²,2⋅X₁,X₂))
  order: [X₂; X₁; X₀]
closed-form:  X₂: X₂
  X₁: X₁⋅(2)^n
  X₀: X₀⋅(5)^n + [[n != 0]]⋅1/4⋅(X₂)²⋅(5)^n + [[n != 0]]⋅-1/4⋅(X₂)²

  Termination: true
  Formula: 
    (X₂)² ≤ 4 ∧ 1 ≤ X₀ ∧ 1+X₂ ≤ X₀ ∧ 4 ≤ (X₂)² ∧ 0 ≤ 4⋅X₀+(X₂)² ∧ 4⋅X₀+(X₂)² ≤ 0 ∧ 0 ≤ (X₁)² ∧ (X₁)² ≤ 0 ∧ X₂ ≤ 0
     ∨ 1 ≤ X₀ ∧ 1+X₂ ≤ X₀ ∧ 1+4⋅X₀+(X₂)² ≤ 0 ∧ X₂ ≤ 0
     ∨ 1 ≤ X₀ ∧ 1+X₂ ≤ X₀ ∧ 1 ≤ 4⋅(X₁)² ∧ 0 ≤ 4⋅X₀+(X₂)² ∧ 4⋅X₀+(X₂)² ≤ 0 ∧ X₂ ≤ 0
     ∨ 1 ≤ X₀ ∧ 1+X₂ ≤ X₀ ∧ 5 ≤ (X₂)² ∧ 0 ≤ 4⋅X₀+(X₂)² ∧ 4⋅X₀+(X₂)² ≤ 0 ∧ 0 ≤ (X₁)² ∧ (X₁)² ≤ 0 ∧ X₂ ≤ 0



Stabilization-Threshold for: 1+X₀ ≤ (X₁)²
  alphas_abs: 4⋅(X₁)²+(X₂)²
  M: 0
  N: 1
  Bound: 2⋅X₂^2+8⋅X₁^2+2 {O(n^2)}

TWN - Lifting for [3: l2->l2] of 2⋅X₂^2+8⋅X₁^2+4 {O(n^2)}
relevant size-bounds w.r.t. t₂: l1→l2:
Runtime-bound of t₂: 1 {O(1)}
Results in: 32⋅X₁^2+8⋅X₂^2+4 {O(n^2)}
  Found invariant X₂ ≤ 0 ∧ 5+X₂ ≤ X₀ ∧ 5 ≤ X₀ for location l2_v1


  Found invariant 1 ≤ X₀ for location l1


  Found invariant X₂ ≤ 0 ∧ 1+X₂ ≤ X₀ ∧ 1 ≤ X₀ for location l2


All Bounds
Timebounds
  Overall timebound:32⋅X₁^2+8⋅X₂^2+X₂+6 {O(n^2)}
    t₀: 1 {O(1)}
    t₁: X₂ {O(n)}
    t₂: 1 {O(1)}
    t₃: 32⋅X₁^2+8⋅X₂^2+4 {O(n^2)}


Costbounds
  Overall costbound: 32⋅X₁^2+8⋅X₂^2+X₂+6 {O(n^2)}
    t₀: 1 {O(1)}
    t₁: X₂ {O(n)}
    t₂: 1 {O(1)}
    t₃: 32⋅X₁^2+8⋅X₂^2+4 {O(n^2)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₀, X₂: X₂ {O(n)}
    t₁, X₀: 2⋅X₂^2+2⋅X₂+X₀ {O(n^2)}
    t₁, X₁: X₁ {O(n)}
    t₁, X₂: X₂ {O(n)}
    t₂, X₀: 2⋅X₂^2+2⋅X₀+2⋅X₂ {O(n^2)}
    t₂, X₁: 2⋅X₁ {O(n)}
    t₂, X₂: 2⋅X₂ {O(n)}
    t₃, X₀: 10⋅5^(32⋅X₂^2+512⋅X₁^2+4)⋅X₀+10⋅5^(32⋅X₂^2+512⋅X₁^2+4)⋅X₂+10⋅5^(32⋅X₂^2+512⋅X₁^2+4)⋅X₂^2+5^(32⋅X₂^2+512⋅X₁^2+4)⋅8⋅X₂^2+4⋅X₂^2 {O(EXP)}
    t₃, X₁: 2⋅2^(32⋅X₁^2+8⋅X₂^2+4)⋅X₁ {O(EXP)}
    t₃, X₂: 2⋅X₂ {O(n)}

