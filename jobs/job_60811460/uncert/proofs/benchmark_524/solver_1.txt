WORST_CASE(Omega(n^1),O(n^1))

# LoAT Proof:
WORST_CASE(Omega(n^1),?)

WORST_CASE(Omega(n^1),?)
Initial ITS

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f1 -> 2
f2 -> 3
f3 -> 4
f4 -> 5

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-2+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=2, i3'=1+i3, i5'=1+i5
   2: (-i4+i5 >= 0 /\ -2+i1 == 0) /\ i1'=3, i3'=1+i3, i6'=i5
   3: (-3+i1 == 0 /\ -1+i6 >= 0) /\ i1'=3, i3'=1+i3, i6'=-1+i6
   4: (-3+i1 == 0 /\ -i6 >= 0) /\ i1'=4, i3'=1+i3, i7'=i6
   5: (-4+i1 == 0 /\ -1-i7+i4 >= 0) /\ i1'=4, i3'=1+i3, i7'=1+i7
   6: (i7-i4 >= 0 /\ -4+i1 == 0) /\ i1'=5, i3'=1+i3, i8'=i7
   7: (-5+i1 == 0 /\ -1+i8 >= 0) /\ i1'=5, i3'=1+i3, i8'=-1+i8

Dependency graph:
0 -> 1, 0 -> 2
1 -> 1, 1 -> 2
2 -> 3, 2 -> 4
3 -> 3, 3 -> 4
4 -> 5, 4 -> 6
5 -> 5, 5 -> 6
6 -> 7
7 -> 7

Step with 0

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 2

	Trace

	0[(-1+i1 == 0)]
	2[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	
	Blocked

	{}
	{}
	{}
	
Step with 4

	Trace

	0[(-1+i1 == 0)]
	2[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	4[(-3+i1 == 0 /\ -i6 >= 0)]
	
	Blocked

	{}
	{}
	{}
	{}
	
Step with 6

	Trace

	0[(-1+i1 == 0)]
	2[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	4[(-3+i1 == 0 /\ -i6 >= 0)]
	6[(i7-i4 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{}
	{}
	{5[T]}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	2[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	4[(-3+i1 == 0 /\ -i6 >= 0)]
	
	Blocked

	{}
	{}
	{}
	{5[T], 6[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	2[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	
	Blocked

	{}
	{}
	{4[T]}
	
Step with 3

	Trace

	0[(-1+i1 == 0)]
	2[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	3[(-3+i1 == 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{}
	{4[T]}
	{}
	
Poly(n^1)

Accelerate

	Loop Acceleration

	Original rule:
	(-3+i1 == 0 /\ -1+i6 >= 0) /\ i1'=3, i3'=1+i3, i6'=-1+i6
	New rule:
	(-3+i1 >= 0 /\ i6-it36 >= 0 /\ -1+it36 >= 0 /\ 3-i1 >= 0) /\ i1'=i1, i3'=i3+it36, i6'=i6-it36

		-3+i1 >= 0 [0]: unchanged
		
		3-i1 >= 0 [0]: unchanged
		
		-1+i6 >= 0 [0]: montonic decrease yields i6-it36 >= 0
		
		Replacement map: {-3+i1 >= 0 -> -3+i1 >= 0, 3-i1 >= 0 -> 3-i1 >= 0, -1+i6 >= 0 -> i6-it36 >= 0}

	Removed Trivial Updates

	Original rule:
	(-3+i1 >= 0 /\ i6-it36 >= 0 /\ -1+it36 >= 0 /\ 3-i1 >= 0) /\ i1'=i1, i3'=i3+it36, i6'=i6-it36
	New rule:
	(-3+i1 >= 0 /\ i6-it36 >= 0 /\ -1+it36 >= 0 /\ 3-i1 >= 0) /\ i3'=i3+it36, i6'=i6-it36
	
	Instantiation

	Original rule:
	(-3+i1 >= 0 /\ i6-it36 >= 0 /\ -1+it36 >= 0 /\ 3-i1 >= 0) /\ i3'=i3+it36, i6'=i6-it36
	New rule:
	(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i6 >= 0) /\ i3'=i6+i3, i6'=0

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f1 -> 2
f2 -> 3
f3 -> 4
f4 -> 5

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-2+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=2, i3'=1+i3, i5'=1+i5
   2: (-i4+i5 >= 0 /\ -2+i1 == 0) /\ i1'=3, i3'=1+i3, i6'=i5
   3: (-3+i1 == 0 /\ -1+i6 >= 0) /\ i1'=3, i3'=1+i3, i6'=-1+i6
   4: (-3+i1 == 0 /\ -i6 >= 0) /\ i1'=4, i3'=1+i3, i7'=i6
   5: (-4+i1 == 0 /\ -1-i7+i4 >= 0) /\ i1'=4, i3'=1+i3, i7'=1+i7
   6: (i7-i4 >= 0 /\ -4+i1 == 0) /\ i1'=5, i3'=1+i3, i8'=i7
   7: (-5+i1 == 0 /\ -1+i8 >= 0) /\ i1'=5, i3'=1+i3, i8'=-1+i8
   8: (0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i6 >= 0) /\ i3'=i6+i3, i6'=0

Dependency graph:
0 -> 1, 0 -> 2
1 -> 1, 1 -> 2
2 -> 3, 2 -> 4, 2 -> 8
3 -> 3, 3 -> 4, 3 -> 8
4 -> 5, 4 -> 6
5 -> 5, 5 -> 6
6 -> 7
7 -> 7
8 -> 3, 8 -> 4

	Trace

	0[(-1+i1 == 0)]
	2[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{}
	{4[T]}
	{3[T], 8[T]}
	
Step with 4

	Trace

	0[(-1+i1 == 0)]
	2[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i6 >= 0)]
	4[(-3+i1 == 0 /\ -i6 >= 0)]
	
	Blocked

	{}
	{}
	{4[T]}
	{3[T], 8[T]}
	{}
	
Step with 6

	Trace

	0[(-1+i1 == 0)]
	2[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i6 >= 0)]
	4[(-3+i1 == 0 /\ -i6 >= 0)]
	6[(i7-i4 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{}
	{4[T]}
	{3[T], 8[T]}
	{}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	2[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i6 >= 0)]
	4[(-3+i1 == 0 /\ -i6 >= 0)]
	
	Blocked

	{}
	{}
	{4[T]}
	{3[T], 8[T]}
	{6[T]}
	
Step with 5

	Trace

	0[(-1+i1 == 0)]
	2[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i6 >= 0)]
	4[(-3+i1 == 0 /\ -i6 >= 0)]
	5[(-4+i1 == 0 /\ -1-i7+i4 >= 0)]
	
	Blocked

	{}
	{}
	{4[T]}
	{3[T], 8[T]}
	{6[T]}
	{}
	
Accelerate

	Loop Acceleration

	Original rule:
	(-4+i1 == 0 /\ -1-i7+i4 >= 0) /\ i1'=4, i3'=1+i3, i7'=1+i7
	New rule:
	(-i7+i4-it73 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+it73 >= 0) /\ i1'=i1, i3'=i3+it73, i7'=i7+it73

		-4+i1 >= 0 [0]: unchanged
		
		4-i1 >= 0 [0]: unchanged
		
		-1-i7+i4 >= 0 [0]: montonic decrease yields -i7+i4-it73 >= 0
		
		Replacement map: {-4+i1 >= 0 -> -4+i1 >= 0, 4-i1 >= 0 -> 4-i1 >= 0, -1-i7+i4 >= 0 -> -i7+i4-it73 >= 0}

	Removed Trivial Updates

	Original rule:
	(-i7+i4-it73 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+it73 >= 0) /\ i1'=i1, i3'=i3+it73, i7'=i7+it73
	New rule:
	(-i7+i4-it73 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+it73 >= 0) /\ i3'=i3+it73, i7'=i7+it73
	
	Instantiation

	Original rule:
	(-i7+i4-it73 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1+it73 >= 0) /\ i3'=i3+it73, i7'=i7+it73
	New rule:
	(0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-i7+i4 >= 0) /\ i3'=i3-i7+i4, i7'=i4

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f1 -> 2
f2 -> 3
f3 -> 4
f4 -> 5

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-2+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=2, i3'=1+i3, i5'=1+i5
   2: (-i4+i5 >= 0 /\ -2+i1 == 0) /\ i1'=3, i3'=1+i3, i6'=i5
   3: (-3+i1 == 0 /\ -1+i6 >= 0) /\ i1'=3, i3'=1+i3, i6'=-1+i6
   4: (-3+i1 == 0 /\ -i6 >= 0) /\ i1'=4, i3'=1+i3, i7'=i6
   5: (-4+i1 == 0 /\ -1-i7+i4 >= 0) /\ i1'=4, i3'=1+i3, i7'=1+i7
   6: (i7-i4 >= 0 /\ -4+i1 == 0) /\ i1'=5, i3'=1+i3, i8'=i7
   7: (-5+i1 == 0 /\ -1+i8 >= 0) /\ i1'=5, i3'=1+i3, i8'=-1+i8
   8: (0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i6 >= 0) /\ i3'=i6+i3, i6'=0
   9: (0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-i7+i4 >= 0) /\ i3'=i3-i7+i4, i7'=i4

Dependency graph:
0 -> 1, 0 -> 2
1 -> 1, 1 -> 2
2 -> 3, 2 -> 4, 2 -> 8
3 -> 3, 3 -> 4, 3 -> 8
4 -> 5, 4 -> 6, 4 -> 9
5 -> 5, 5 -> 6, 5 -> 9
6 -> 7
7 -> 7
8 -> 3, 8 -> 4
9 -> 5, 9 -> 6

	Trace

	0[(-1+i1 == 0)]
	2[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i6 >= 0)]
	4[(-3+i1 == 0 /\ -i6 >= 0)]
	9[(0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-i7+i4 >= 0)]
	
	Blocked

	{}
	{}
	{4[T]}
	{3[T], 8[T]}
	{6[T]}
	{5[T], 9[T]}
	
Step with 6

	Trace

	0[(-1+i1 == 0)]
	2[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i6 >= 0)]
	4[(-3+i1 == 0 /\ -i6 >= 0)]
	9[(0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-i7+i4 >= 0)]
	6[(i7-i4 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{}
	{4[T]}
	{3[T], 8[T]}
	{6[T]}
	{5[T], 9[T]}
	{}
	
Step with 7

	Trace

	0[(-1+i1 == 0)]
	2[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i6 >= 0)]
	4[(-3+i1 == 0 /\ -i6 >= 0)]
	9[(0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-i7+i4 >= 0)]
	6[(i7-i4 >= 0 /\ -4+i1 == 0)]
	7[(-5+i1 == 0 /\ -1+i8 >= 0)]
	
	Blocked

	{}
	{}
	{4[T]}
	{3[T], 8[T]}
	{6[T]}
	{5[T], 9[T]}
	{}
	{}
	
Accelerate

	Loop Acceleration

	Original rule:
	(-5+i1 == 0 /\ -1+i8 >= 0) /\ i1'=5, i3'=1+i3, i8'=-1+i8
	New rule:
	(-1+it95 >= 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0 /\ i8-it95 >= 0) /\ i1'=i1, i3'=i3+it95, i8'=i8-it95

		-5+i1 >= 0 [0]: unchanged
		
		5-i1 >= 0 [0]: unchanged
		
		-1+i8 >= 0 [0]: montonic decrease yields i8-it95 >= 0
		
		Replacement map: {-5+i1 >= 0 -> -5+i1 >= 0, 5-i1 >= 0 -> 5-i1 >= 0, -1+i8 >= 0 -> i8-it95 >= 0}

	Removed Trivial Updates

	Original rule:
	(-1+it95 >= 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0 /\ i8-it95 >= 0) /\ i1'=i1, i3'=i3+it95, i8'=i8-it95
	New rule:
	(-1+it95 >= 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0 /\ i8-it95 >= 0) /\ i3'=i3+it95, i8'=i8-it95
	
	Instantiation

	Original rule:
	(-1+it95 >= 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0 /\ i8-it95 >= 0) /\ i3'=i3+it95, i8'=i8-it95
	New rule:
	(0 >= 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0 /\ -1+i8 >= 0) /\ i3'=i3+i8, i8'=0

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f1 -> 2
f2 -> 3
f3 -> 4
f4 -> 5

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-2+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=2, i3'=1+i3, i5'=1+i5
   2: (-i4+i5 >= 0 /\ -2+i1 == 0) /\ i1'=3, i3'=1+i3, i6'=i5
   3: (-3+i1 == 0 /\ -1+i6 >= 0) /\ i1'=3, i3'=1+i3, i6'=-1+i6
   4: (-3+i1 == 0 /\ -i6 >= 0) /\ i1'=4, i3'=1+i3, i7'=i6
   5: (-4+i1 == 0 /\ -1-i7+i4 >= 0) /\ i1'=4, i3'=1+i3, i7'=1+i7
   6: (i7-i4 >= 0 /\ -4+i1 == 0) /\ i1'=5, i3'=1+i3, i8'=i7
   7: (-5+i1 == 0 /\ -1+i8 >= 0) /\ i1'=5, i3'=1+i3, i8'=-1+i8
   8: (0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i6 >= 0) /\ i3'=i6+i3, i6'=0
   9: (0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-i7+i4 >= 0) /\ i3'=i3-i7+i4, i7'=i4
  10: (0 >= 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0 /\ -1+i8 >= 0) /\ i3'=i3+i8, i8'=0

Dependency graph:
0 -> 1, 0 -> 2
1 -> 1, 1 -> 2
2 -> 3, 2 -> 4, 2 -> 8
3 -> 3, 3 -> 4, 3 -> 8
4 -> 5, 4 -> 6, 4 -> 9
5 -> 5, 5 -> 6, 5 -> 9
6 -> 7, 6 -> 10
7 -> 7, 7 -> 10
8 -> 3, 8 -> 4
9 -> 5, 9 -> 6
10 -> 7

	Trace

	0[(-1+i1 == 0)]
	2[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i6 >= 0)]
	4[(-3+i1 == 0 /\ -i6 >= 0)]
	9[(0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-i7+i4 >= 0)]
	6[(i7-i4 >= 0 /\ -4+i1 == 0)]
	10[(0 >= 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0 /\ -1+i8 >= 0)]
	
	Blocked

	{}
	{}
	{4[T]}
	{3[T], 8[T]}
	{6[T]}
	{5[T], 9[T]}
	{}
	{7[T], 10[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	2[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i6 >= 0)]
	4[(-3+i1 == 0 /\ -i6 >= 0)]
	9[(0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-i7+i4 >= 0)]
	6[(i7-i4 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{}
	{4[T]}
	{3[T], 8[T]}
	{6[T]}
	{5[T], 9[T]}
	{10[T]}
	
Step with 7

	Trace

	0[(-1+i1 == 0)]
	2[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i6 >= 0)]
	4[(-3+i1 == 0 /\ -i6 >= 0)]
	9[(0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-i7+i4 >= 0)]
	6[(i7-i4 >= 0 /\ -4+i1 == 0)]
	7[(-5+i1 == 0 /\ -1+i8 >= 0)]
	
	Blocked

	{}
	{}
	{4[T]}
	{3[T], 8[T]}
	{6[T]}
	{5[T], 9[T]}
	{10[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	2[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i6 >= 0)]
	4[(-3+i1 == 0 /\ -i6 >= 0)]
	9[(0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-i7+i4 >= 0)]
	6[(i7-i4 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{}
	{4[T]}
	{3[T], 8[T]}
	{6[T]}
	{5[T], 9[T]}
	{7[T], 10[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	2[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i6 >= 0)]
	4[(-3+i1 == 0 /\ -i6 >= 0)]
	9[(0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-i7+i4 >= 0)]
	
	Blocked

	{}
	{}
	{4[T]}
	{3[T], 8[T]}
	{6[T]}
	{5[T], 6[T], 9[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	2[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i6 >= 0)]
	4[(-3+i1 == 0 /\ -i6 >= 0)]
	
	Blocked

	{}
	{}
	{4[T]}
	{3[T], 8[T]}
	{6[T], 9[T]}
	
Step with 5

	Trace

	0[(-1+i1 == 0)]
	2[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i6 >= 0)]
	4[(-3+i1 == 0 /\ -i6 >= 0)]
	5[(-4+i1 == 0 /\ -1-i7+i4 >= 0)]
	
	Blocked

	{}
	{}
	{4[T]}
	{3[T], 8[T]}
	{6[T], 9[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	2[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i6 >= 0)]
	4[(-3+i1 == 0 /\ -i6 >= 0)]
	
	Blocked

	{}
	{}
	{4[T]}
	{3[T], 8[T]}
	{5[T], 6[T], 9[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	2[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{}
	{4[T]}
	{3[T], 4[T], 8[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	2[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	
	Blocked

	{}
	{}
	{4[T], 8[T]}
	
Step with 3

	Trace

	0[(-1+i1 == 0)]
	2[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	3[(-3+i1 == 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{}
	{4[T], 8[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	2[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	
	Blocked

	{}
	{}
	{3[T], 4[T], 8[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{2[T]}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	1[(-2+i1 == 0 /\ -1+i4-i5 >= 0)]
	
	Blocked

	{}
	{2[T]}
	{}
	
Accelerate

	Loop Acceleration

	Original rule:
	(-2+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=2, i3'=1+i3, i5'=1+i5
	New rule:
	(-2+i1 >= 0 /\ -1+it131 >= 0 /\ i4-i5-it131 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it131, i5'=i5+it131

		-2+i1 >= 0 [0]: unchanged
		
		-1+i4-i5 >= 0 [0]: montonic decrease yields i4-i5-it131 >= 0
		
		2-i1 >= 0 [0]: unchanged
		
		Replacement map: {-2+i1 >= 0 -> -2+i1 >= 0, -1+i4-i5 >= 0 -> i4-i5-it131 >= 0, 2-i1 >= 0 -> 2-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-2+i1 >= 0 /\ -1+it131 >= 0 /\ i4-i5-it131 >= 0 /\ 2-i1 >= 0) /\ i1'=i1, i3'=i3+it131, i5'=i5+it131
	New rule:
	(-2+i1 >= 0 /\ -1+it131 >= 0 /\ i4-i5-it131 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+it131, i5'=i5+it131
	
	Instantiation

	Original rule:
	(-2+i1 >= 0 /\ -1+it131 >= 0 /\ i4-i5-it131 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+it131, i5'=i5+it131
	New rule:
	(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+i4-i5, i5'=i4

Start location: f0

Location map:
LoAT_sink -> 0
f0 -> 1
f1 -> 2
f2 -> 3
f3 -> 4
f4 -> 5

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: (-2+i1 == 0 /\ -1+i4-i5 >= 0) /\ i1'=2, i3'=1+i3, i5'=1+i5
   2: (-i4+i5 >= 0 /\ -2+i1 == 0) /\ i1'=3, i3'=1+i3, i6'=i5
   3: (-3+i1 == 0 /\ -1+i6 >= 0) /\ i1'=3, i3'=1+i3, i6'=-1+i6
   4: (-3+i1 == 0 /\ -i6 >= 0) /\ i1'=4, i3'=1+i3, i7'=i6
   5: (-4+i1 == 0 /\ -1-i7+i4 >= 0) /\ i1'=4, i3'=1+i3, i7'=1+i7
   6: (i7-i4 >= 0 /\ -4+i1 == 0) /\ i1'=5, i3'=1+i3, i8'=i7
   7: (-5+i1 == 0 /\ -1+i8 >= 0) /\ i1'=5, i3'=1+i3, i8'=-1+i8
   8: (0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i6 >= 0) /\ i3'=i6+i3, i6'=0
   9: (0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-i7+i4 >= 0) /\ i3'=i3-i7+i4, i7'=i4
  10: (0 >= 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0 /\ -1+i8 >= 0) /\ i3'=i3+i8, i8'=0
  11: (0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0) /\ i3'=i3+i4-i5, i5'=i4

Dependency graph:
0 -> 1, 0 -> 2, 0 -> 11
1 -> 1, 1 -> 2, 1 -> 11
2 -> 3, 2 -> 4, 2 -> 8
3 -> 3, 3 -> 4, 3 -> 8
4 -> 5, 4 -> 6, 4 -> 9
5 -> 5, 5 -> 6, 5 -> 9
6 -> 7, 6 -> 10
7 -> 7, 7 -> 10
8 -> 3, 8 -> 4
9 -> 5, 9 -> 6
10 -> 7
11 -> 1, 11 -> 2

	Trace

	0[(-1+i1 == 0)]
	11[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T], 11[T]}
	
Step with 2

	Trace

	0[(-1+i1 == 0)]
	11[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	2[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T], 11[T]}
	{}
	
Step with 8

	Trace

	0[(-1+i1 == 0)]
	11[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	2[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T], 11[T]}
	{}
	{8[T]}
	
Step with 4

	Trace

	0[(-1+i1 == 0)]
	11[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	2[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i6 >= 0)]
	4[(-3+i1 == 0 /\ -i6 >= 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T], 11[T]}
	{}
	{8[T]}
	{}
	
Step with 5

	Trace

	0[(-1+i1 == 0)]
	11[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	2[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i6 >= 0)]
	4[(-3+i1 == 0 /\ -i6 >= 0)]
	5[(-4+i1 == 0 /\ -1-i7+i4 >= 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T], 11[T]}
	{}
	{8[T]}
	{}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	11[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	2[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i6 >= 0)]
	4[(-3+i1 == 0 /\ -i6 >= 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T], 11[T]}
	{}
	{8[T]}
	{5[T]}
	
Step with 9

	Trace

	0[(-1+i1 == 0)]
	11[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	2[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i6 >= 0)]
	4[(-3+i1 == 0 /\ -i6 >= 0)]
	9[(0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-i7+i4 >= 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T], 11[T]}
	{}
	{8[T]}
	{5[T]}
	{9[T]}
	
Step with 6

	Trace

	0[(-1+i1 == 0)]
	11[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	2[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i6 >= 0)]
	4[(-3+i1 == 0 /\ -i6 >= 0)]
	9[(0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-i7+i4 >= 0)]
	6[(i7-i4 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T], 11[T]}
	{}
	{8[T]}
	{5[T]}
	{5[T], 9[T]}
	{}
	
Step with 7

	Trace

	0[(-1+i1 == 0)]
	11[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	2[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i6 >= 0)]
	4[(-3+i1 == 0 /\ -i6 >= 0)]
	9[(0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-i7+i4 >= 0)]
	6[(i7-i4 >= 0 /\ -4+i1 == 0)]
	7[(-5+i1 == 0 /\ -1+i8 >= 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T], 11[T]}
	{}
	{8[T]}
	{5[T]}
	{5[T], 9[T]}
	{}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	11[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	2[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i6 >= 0)]
	4[(-3+i1 == 0 /\ -i6 >= 0)]
	9[(0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-i7+i4 >= 0)]
	6[(i7-i4 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T], 11[T]}
	{}
	{8[T]}
	{5[T]}
	{5[T], 9[T]}
	{7[T]}
	
Step with 10

	Trace

	0[(-1+i1 == 0)]
	11[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	2[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i6 >= 0)]
	4[(-3+i1 == 0 /\ -i6 >= 0)]
	9[(0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-i7+i4 >= 0)]
	6[(i7-i4 >= 0 /\ -4+i1 == 0)]
	10[(0 >= 0 /\ -5+i1 >= 0 /\ 5-i1 >= 0 /\ -1+i8 >= 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T], 11[T]}
	{}
	{8[T]}
	{5[T]}
	{5[T], 9[T]}
	{7[T]}
	{10[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	11[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	2[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i6 >= 0)]
	4[(-3+i1 == 0 /\ -i6 >= 0)]
	9[(0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-i7+i4 >= 0)]
	6[(i7-i4 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T], 11[T]}
	{}
	{8[T]}
	{5[T]}
	{5[T], 9[T]}
	{7[T], 10[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	11[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	2[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i6 >= 0)]
	4[(-3+i1 == 0 /\ -i6 >= 0)]
	9[(0 >= 0 /\ -4+i1 >= 0 /\ 4-i1 >= 0 /\ -1-i7+i4 >= 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T], 11[T]}
	{}
	{8[T]}
	{5[T]}
	{5[T], 6[T], 9[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	11[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	2[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i6 >= 0)]
	4[(-3+i1 == 0 /\ -i6 >= 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T], 11[T]}
	{}
	{8[T]}
	{5[T], 9[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	11[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	2[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	8[(0 >= 0 /\ -3+i1 >= 0 /\ 3-i1 >= 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T], 11[T]}
	{}
	{4[T], 8[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	11[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	2[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T], 11[T]}
	{8[T]}
	
Step with 3

	Trace

	0[(-1+i1 == 0)]
	11[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	2[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	3[(-3+i1 == 0 /\ -1+i6 >= 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T], 11[T]}
	{8[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	11[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	2[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T], 11[T]}
	{3[T], 8[T]}
	
Step with 4

	Trace

	0[(-1+i1 == 0)]
	11[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	2[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	4[(-3+i1 == 0 /\ -i6 >= 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T], 11[T]}
	{3[T], 8[T]}
	{}
	
Step with 6

	Trace

	0[(-1+i1 == 0)]
	11[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	2[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	4[(-3+i1 == 0 /\ -i6 >= 0)]
	6[(i7-i4 >= 0 /\ -4+i1 == 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T], 11[T]}
	{3[T], 8[T]}
	{}
	{}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	11[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	2[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	4[(-3+i1 == 0 /\ -i6 >= 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T], 11[T]}
	{3[T], 8[T]}
	{6[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	11[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	2[(-i4+i5 >= 0 /\ -2+i1 == 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T], 11[T]}
	{3[T], 4[T], 8[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	11[(0 >= 0 /\ -2+i1 >= 0 /\ -1+i4-i5 >= 0 /\ 2-i1 >= 0)]
	
	Blocked

	{}
	{2[T]}
	{1[T], 2[T], 11[T]}
	
Backtrack

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{2[T], 11[T]}
	
Step with 1

	Trace

	0[(-1+i1 == 0)]
	1[(-2+i1 == 0 /\ -1+i4-i5 >= 0)]
	
	Blocked

	{}
	{2[T], 11[T]}
	{}
	
Covered

	Trace

	0[(-1+i1 == 0)]
	
	Blocked

	{}
	{1[T], 2[T], 11[T]}
	
Backtrack

	Trace

	Blocked

	{0[T]}
	
Accept

Poly(n^1)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄
  Temp_Vars:  
  Locations:  l0, l1, l2, l3, l4
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃, X₄) → l1(X₀, X₁, X₂, X₃, X₄)
  t₁: l1(X₀, X₁, X₂, X₃, X₄) → l1(X₀, 1+X₁, X₂, X₃, X₄) :|: 1+X₁ ≤ X₀
  t₂: l1(X₀, X₁, X₂, X₃, X₄) → l2(X₀, X₁, X₁, X₃, X₄) :|: X₀ ≤ X₁
  t₃: l2(X₀, X₁, X₂, X₃, X₄) → l2(X₀, X₁, X₂-1, X₃, X₄) :|: 1 ≤ X₂
  t₄: l2(X₀, X₁, X₂, X₃, X₄) → l3(X₀, X₁, X₂, X₂, X₄) :|: X₂ ≤ 0
  t₅: l3(X₀, X₁, X₂, X₃, X₄) → l3(X₀, X₁, X₂, 1+X₃, X₄) :|: 1+X₃ ≤ X₀
  t₆: l3(X₀, X₁, X₂, X₃, X₄) → l4(X₀, X₁, X₂, X₃, X₃) :|: X₀ ≤ X₃
  t₇: l4(X₀, X₁, X₂, X₃, X₄) → l4(X₀, X₁, X₂, X₃, X₄-1) :|: 1 ≤ X₄


Preprocessing
  Found invariant X₂ ≤ X₁ ∧ X₀ ≤ X₁ for location l2


  Found invariant X₄ ≤ X₃ ∧ X₄ ≤ X₁ ∧ X₂ ≤ X₄ ∧ X₃ ≤ X₁ ∧ X₂ ≤ X₃ ∧ X₀ ≤ X₃ ∧ X₂ ≤ 0 ∧ X₂ ≤ X₁ ∧ X₀ ≤ X₁ for location l4


  Found invariant X₃ ≤ X₁ ∧ X₂ ≤ X₃ ∧ X₂ ≤ 0 ∧ X₂ ≤ X₁ ∧ X₀ ≤ X₁ for location l3


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄
  Temp_Vars:  
  Locations:  l0, l1, l2, l3, l4
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃, X₄) → l1(X₀, X₁, X₂, X₃, X₄)
  t₁: l1(X₀, X₁, X₂, X₃, X₄) → l1(X₀, 1+X₁, X₂, X₃, X₄) :|: 1+X₁ ≤ X₀
  t₂: l1(X₀, X₁, X₂, X₃, X₄) → l2(X₀, X₁, X₁, X₃, X₄) :|: X₀ ≤ X₁
  t₃: l2(X₀, X₁, X₂, X₃, X₄) → l2(X₀, X₁, X₂-1, X₃, X₄) :|: 1 ≤ X₂ ∧ X₀ ≤ X₁ ∧ X₂ ≤ X₁
  t₄: l2(X₀, X₁, X₂, X₃, X₄) → l3(X₀, X₁, X₂, X₂, X₄) :|: X₂ ≤ 0 ∧ X₀ ≤ X₁ ∧ X₂ ≤ X₁
  t₅: l3(X₀, X₁, X₂, X₃, X₄) → l3(X₀, X₁, X₂, 1+X₃, X₄) :|: 1+X₃ ≤ X₀ ∧ X₀ ≤ X₁ ∧ X₂ ≤ X₁ ∧ X₃ ≤ X₁ ∧ X₂ ≤ 0 ∧ X₂ ≤ X₃
  t₆: l3(X₀, X₁, X₂, X₃, X₄) → l4(X₀, X₁, X₂, X₃, X₃) :|: X₀ ≤ X₃ ∧ X₀ ≤ X₁ ∧ X₂ ≤ X₁ ∧ X₃ ≤ X₁ ∧ X₂ ≤ 0 ∧ X₂ ≤ X₃
  t₇: l4(X₀, X₁, X₂, X₃, X₄) → l4(X₀, X₁, X₂, X₃, X₄-1) :|: 1 ≤ X₄ ∧ X₀ ≤ X₁ ∧ X₀ ≤ X₃ ∧ X₂ ≤ X₁ ∧ X₃ ≤ X₁ ∧ X₄ ≤ X₁ ∧ X₂ ≤ 0 ∧ X₂ ≤ X₃ ∧ X₂ ≤ X₄ ∧ X₄ ≤ X₃


MPRF for transition t₁: l1(X₀, X₁, X₂, X₃, X₄) → l1(X₀, 1+X₁, X₂, X₃, X₄) :|: 1+X₁ ≤ X₀ of depth 1:
  new bound:
    X₀+X₁ {O(n)}

  MPRF:
    • l1: [X₀-X₁]




MPRF for transition t₃: l2(X₀, X₁, X₂, X₃, X₄) → l2(X₀, X₁, X₂-1, X₃, X₄) :|: 1 ≤ X₂ ∧ X₀ ≤ X₁ ∧ X₂ ≤ X₁ of depth 1:
  new bound:
    3⋅X₁+X₀ {O(n)}

  MPRF:
    • l2: [X₂]




MPRF for transition t₅: l3(X₀, X₁, X₂, X₃, X₄) → l3(X₀, X₁, X₂, 1+X₃, X₄) :|: 1+X₃ ≤ X₀ ∧ X₀ ≤ X₁ ∧ X₂ ≤ X₁ ∧ X₃ ≤ X₁ ∧ X₂ ≤ 0 ∧ X₂ ≤ X₃ of depth 1:
  new bound:
    12⋅X₁+4⋅X₀+1 {O(n)}

  MPRF:
    • l3: [1+X₁-X₃]




MPRF for transition t₇: l4(X₀, X₁, X₂, X₃, X₄) → l4(X₀, X₁, X₂, X₃, X₄-1) :|: 1 ≤ X₄ ∧ X₀ ≤ X₁ ∧ X₀ ≤ X₃ ∧ X₂ ≤ X₁ ∧ X₃ ≤ X₁ ∧ X₄ ≤ X₁ ∧ X₂ ≤ 0 ∧ X₂ ≤ X₃ ∧ X₂ ≤ X₄ ∧ X₄ ≤ X₃ of depth 1:
  new bound:
    12⋅X₀+36⋅X₁+2 {O(n)}

  MPRF:
    • l4: [1+X₄-X₂]




All Bounds
Timebounds
  Overall timebound:18⋅X₀+52⋅X₁+7 {O(n)}
    t₀: 1 {O(1)}
    t₁: X₀+X₁ {O(n)}
    t₂: 1 {O(1)}
    t₃: 3⋅X₁+X₀ {O(n)}
    t₄: 1 {O(1)}
    t₅: 12⋅X₁+4⋅X₀+1 {O(n)}
    t₆: 1 {O(1)}
    t₇: 12⋅X₀+36⋅X₁+2 {O(n)}


Costbounds
  Overall costbound: 18⋅X₀+52⋅X₁+7 {O(n)}
    t₀: 1 {O(1)}
    t₁: X₀+X₁ {O(n)}
    t₂: 1 {O(1)}
    t₃: 3⋅X₁+X₀ {O(n)}
    t₄: 1 {O(1)}
    t₅: 12⋅X₁+4⋅X₀+1 {O(n)}
    t₆: 1 {O(1)}
    t₇: 12⋅X₀+36⋅X₁+2 {O(n)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₀, X₂: X₂ {O(n)}
    t₀, X₃: X₃ {O(n)}
    t₀, X₄: X₄ {O(n)}
    t₁, X₀: X₀ {O(n)}
    t₁, X₁: 2⋅X₁+X₀ {O(n)}
    t₁, X₂: X₂ {O(n)}
    t₁, X₃: X₃ {O(n)}
    t₁, X₄: X₄ {O(n)}
    t₂, X₀: 2⋅X₀ {O(n)}
    t₂, X₁: 3⋅X₁+X₀ {O(n)}
    t₂, X₂: 3⋅X₁+X₀ {O(n)}
    t₂, X₃: 2⋅X₃ {O(n)}
    t₂, X₄: 2⋅X₄ {O(n)}
    t₃, X₀: 2⋅X₀ {O(n)}
    t₃, X₁: 3⋅X₁+X₀ {O(n)}
    t₃, X₂: 3⋅X₁+X₀ {O(n)}
    t₃, X₃: 2⋅X₃ {O(n)}
    t₃, X₄: 2⋅X₄ {O(n)}
    t₄, X₀: 4⋅X₀ {O(n)}
    t₄, X₁: 2⋅X₀+6⋅X₁ {O(n)}
    t₄, X₂: 2⋅X₀+6⋅X₁ {O(n)}
    t₄, X₃: 2⋅X₀+6⋅X₁ {O(n)}
    t₄, X₄: 4⋅X₄ {O(n)}
    t₅, X₀: 4⋅X₀ {O(n)}
    t₅, X₁: 2⋅X₀+6⋅X₁ {O(n)}
    t₅, X₂: 2⋅X₀+6⋅X₁ {O(n)}
    t₅, X₃: 18⋅X₁+6⋅X₀+1 {O(n)}
    t₅, X₄: 4⋅X₄ {O(n)}
    t₆, X₀: 8⋅X₀ {O(n)}
    t₆, X₁: 12⋅X₁+4⋅X₀ {O(n)}
    t₆, X₂: 12⋅X₁+4⋅X₀ {O(n)}
    t₆, X₃: 24⋅X₁+8⋅X₀+1 {O(n)}
    t₆, X₄: 24⋅X₁+8⋅X₀+1 {O(n)}
    t₇, X₀: 8⋅X₀ {O(n)}
    t₇, X₁: 12⋅X₁+4⋅X₀ {O(n)}
    t₇, X₂: 12⋅X₁+4⋅X₀ {O(n)}
    t₇, X₃: 24⋅X₁+8⋅X₀+1 {O(n)}
    t₇, X₄: 24⋅X₁+8⋅X₀+1 {O(n)}

