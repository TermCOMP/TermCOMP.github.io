WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [f1/6]
1. non_recursive  : [exit_location/1]
2. recursive  : [f2/5]
3. recursive  : [f3/6]
4. recursive  : [f4/2]
5. non_recursive  : [f4_loop_cont/2]
6. non_recursive  : [f3_loop_cont/7]
7. non_recursive  : [f2_loop_cont/7]
8. non_recursive  : [f1_loop_cont/7]
9. non_recursive  : [f0/6]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into f1/6
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into f2/5
3. SCC is partially evaluated into f3/6
4. SCC is partially evaluated into f4/2
5. SCC is completely evaluated into other SCCs
6. SCC is partially evaluated into f3_loop_cont/7
7. SCC is partially evaluated into f2_loop_cont/7
8. SCC is partially evaluated into f1_loop_cont/7
9. SCC is partially evaluated into f0/6

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations f1/6 
* CE 3 is refined into CE [19] 
* CE 4 is refined into CE [20] 
* CE 2 is refined into CE [21] 


### Cost equations --> "Loop" of f1/6 
* CEs [21] --> Loop 19 
* CEs [19] --> Loop 20 
* CEs [20] --> Loop 21 

### Ranking functions of CR f1(A,B,C,F,G,H) 
* RF of phase [19]: [A-B]

#### Partial ranking functions of CR f1(A,B,C,F,G,H) 
* Partial RF of phase [19]:
  - RF of loop [19:1]:
    A-B


### Specialization of cost equations f2/5 
* CE 8 is refined into CE [22] 
* CE 9 is refined into CE [23] 
* CE 7 is refined into CE [24] 


### Cost equations --> "Loop" of f2/5 
* CEs [24] --> Loop 22 
* CEs [22] --> Loop 23 
* CEs [23] --> Loop 24 

### Ranking functions of CR f2(C,D,F,G,H) 
* RF of phase [22]: [C]

#### Partial ranking functions of CR f2(C,D,F,G,H) 
* Partial RF of phase [22]:
  - RF of loop [22:1]:
    C


### Specialization of cost equations f3/6 
* CE 13 is refined into CE [25] 
* CE 14 is refined into CE [26] 
* CE 12 is refined into CE [27] 


### Cost equations --> "Loop" of f3/6 
* CEs [27] --> Loop 25 
* CEs [25] --> Loop 26 
* CEs [26] --> Loop 27 

### Ranking functions of CR f3(A,D,E,F,G,H) 
* RF of phase [25]: [A-D]

#### Partial ranking functions of CR f3(A,D,E,F,G,H) 
* Partial RF of phase [25]:
  - RF of loop [25:1]:
    A-D


### Specialization of cost equations f4/2 
* CE 18 is refined into CE [28] 
* CE 17 is refined into CE [29] 


### Cost equations --> "Loop" of f4/2 
* CEs [29] --> Loop 28 
* CEs [28] --> Loop 29 

### Ranking functions of CR f4(E,F) 
* RF of phase [28]: [E]

#### Partial ranking functions of CR f4(E,F) 
* Partial RF of phase [28]:
  - RF of loop [28:1]:
    E


### Specialization of cost equations f3_loop_cont/7 
* CE 16 is refined into CE [30,31] 
* CE 15 is refined into CE [32] 


### Cost equations --> "Loop" of f3_loop_cont/7 
* CEs [31] --> Loop 30 
* CEs [30] --> Loop 31 
* CEs [32] --> Loop 32 

### Ranking functions of CR f3_loop_cont(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR f3_loop_cont(A,B,C,D,E,F,G) 


### Specialization of cost equations f2_loop_cont/7 
* CE 11 is refined into CE [33,34,35,36,37,38] 
* CE 10 is refined into CE [39] 


### Cost equations --> "Loop" of f2_loop_cont/7 
* CEs [34,35] --> Loop 33 
* CEs [37] --> Loop 34 
* CEs [38] --> Loop 35 
* CEs [36] --> Loop 36 
* CEs [33] --> Loop 37 
* CEs [39] --> Loop 38 

### Ranking functions of CR f2_loop_cont(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR f2_loop_cont(A,B,C,D,E,F,G) 


### Specialization of cost equations f1_loop_cont/7 
* CE 6 is refined into CE [40,41,42,43,44,45,46,47,48,49] 
* CE 5 is refined into CE [50] 


### Cost equations --> "Loop" of f1_loop_cont/7 
* CEs [41,42] --> Loop 39 
* CEs [43,45] --> Loop 40 
* CEs [49] --> Loop 41 
* CEs [48] --> Loop 42 
* CEs [47] --> Loop 43 
* CEs [46] --> Loop 44 
* CEs [44] --> Loop 45 
* CEs [40] --> Loop 46 
* CEs [50] --> Loop 47 

### Ranking functions of CR f1_loop_cont(A,B,C,D,E,F,G) 

#### Partial ranking functions of CR f1_loop_cont(A,B,C,D,E,F,G) 


### Specialization of cost equations f0/6 
* CE 1 is refined into CE [51,52,53,54,55,56,57,58,59,60,61,62,63] 


### Cost equations --> "Loop" of f0/6 
* CEs [52,53] --> Loop 48 
* CEs [58] --> Loop 49 
* CEs [63] --> Loop 50 
* CEs [56,57] --> Loop 51 
* CEs [62] --> Loop 52 
* CEs [60,61] --> Loop 53 
* CEs [54,55] --> Loop 54 
* CEs [59] --> Loop 55 
* CEs [51] --> Loop 56 

### Ranking functions of CR f0(A,B,C,D,E,F) 

#### Partial ranking functions of CR f0(A,B,C,D,E,F) 


Computing Bounds
=====================================

#### Cost of chains of f1(A,B,C,F,G,H):
* Chain [[19],21]: 1*it(19)+0
  Such that:it(19) =< A-B

  with precondition: [F=2,A>=B+1] 

* Chain [[19],20]: 1*it(19)+0
  Such that:it(19) =< A-B

  with precondition: [F=5,A=G,A=H,A>=B+1] 

* Chain [21]: 0
  with precondition: [F=2] 

* Chain [20]: 0
  with precondition: [F=5,B=G,B=H,B>=A] 


#### Cost of chains of f2(C,D,F,G,H):
* Chain [[22],24]: 1*it(22)+0
  Such that:it(22) =< C

  with precondition: [F=2,C>=1] 

* Chain [[22],23]: 1*it(22)+0
  Such that:it(22) =< C

  with precondition: [F=4,G=0,H=0,C>=1] 

* Chain [24]: 0
  with precondition: [F=2] 

* Chain [23]: 0
  with precondition: [F=4,C=G,C=H,0>=C] 


#### Cost of chains of f3(A,D,E,F,G,H):
* Chain [[25],27]: 1*it(25)+0
  Such that:it(25) =< A-D

  with precondition: [F=2,A>=D+1] 

* Chain [[25],26]: 1*it(25)+0
  Such that:it(25) =< A-D

  with precondition: [F=3,A=G,A=H,A>=D+1] 

* Chain [27]: 0
  with precondition: [F=2] 

* Chain [26]: 0
  with precondition: [F=3,D=G,D=H,D>=A] 


#### Cost of chains of f4(E,F):
* Chain [[28],29]: 1*it(28)+0
  Such that:it(28) =< E

  with precondition: [F=2,E>=1] 

* Chain [29]: 0
  with precondition: [F=2] 


#### Cost of chains of f3_loop_cont(A,B,C,D,E,F,G):
* Chain [32]: 0
  with precondition: [A=2] 

* Chain [31]: 0
  with precondition: [A=3] 

* Chain [30]: 1*s(1)+0
  Such that:s(1) =< F

  with precondition: [A=3,F>=1] 


#### Cost of chains of f2_loop_cont(A,B,C,D,E,F,G):
* Chain [38]: 0
  with precondition: [A=2] 

* Chain [37]: 0
  with precondition: [A=4] 

* Chain [36]: 1*s(2)+1*s(3)+0
  Such that:s(3) =< B
s(2) =< B-E

  with precondition: [A=4,B>=1,B>=E+1] 

* Chain [35]: 1*s(4)+0
  Such that:s(4) =< E

  with precondition: [A=4,E>=1,E>=B] 

* Chain [34]: 0
  with precondition: [A=4,E>=B] 

* Chain [33]: 2*s(5)+0
  Such that:aux(1) =< B-E
s(5) =< aux(1)

  with precondition: [A=4,B>=E+1] 


#### Cost of chains of f1_loop_cont(A,B,C,D,E,F,G):
* Chain [47]: 0
  with precondition: [A=2] 

* Chain [46]: 0
  with precondition: [A=5] 

* Chain [45]: 1*s(7)+0
  Such that:s(7) =< D

  with precondition: [A=5,0>=B,D>=1] 

* Chain [44]: 0
  with precondition: [A=5,0>=D] 

* Chain [43]: 1*s(8)+1*s(9)+0
  Such that:s(8) =< B
s(9) =< B-D

  with precondition: [A=5,0>=D,B>=1] 

* Chain [42]: 0
  with precondition: [A=5,0>=D,D>=B] 

* Chain [41]: 2*s(11)+0
  Such that:s(10) =< B-D
s(11) =< s(10)

  with precondition: [A=5,0>=D,B>=D+1] 

* Chain [40]: 2*s(12)+4*s(13)+0
  Such that:aux(3) =< B
aux(4) =< D
s(12) =< aux(4)
s(13) =< aux(3)

  with precondition: [A=5,B>=1,D>=1] 

* Chain [39]: 2*s(18)+0
  Such that:aux(5) =< D
s(18) =< aux(5)

  with precondition: [A=5,D>=1] 


#### Cost of chains of f0(A,B,C,D,E,F):
* Chain [56]: 0
  with precondition: [] 

* Chain [55]: 1*s(20)+0
  Such that:s(20) =< B

  with precondition: [0>=A,B>=1] 

* Chain [54]: 2*s(21)+0
  Such that:aux(6) =< A-B
s(21) =< aux(6)

  with precondition: [0>=A,A>=B+1] 

* Chain [53]: 0
  with precondition: [0>=B,B>=A] 

* Chain [52]: 2*s(25)+4*s(26)+0
  Such that:s(23) =< A
s(24) =< B
s(25) =< s(24)
s(26) =< s(23)

  with precondition: [A>=1,B>=A] 

* Chain [51]: 2*s(27)+8*s(30)+0
  Such that:aux(8) =< A
aux(9) =< A-B
s(27) =< aux(9)
s(30) =< aux(8)

  with precondition: [A>=1,A>=B+1] 

* Chain [50]: 2*s(36)+0
  Such that:s(35) =< B
s(36) =< s(35)

  with precondition: [B>=1,B>=A] 

* Chain [49]: 0
  with precondition: [B>=A] 

* Chain [48]: 2*s(37)+0
  Such that:aux(10) =< A-B
s(37) =< aux(10)

  with precondition: [A>=B+1] 


Closed-form bounds of f0(A,B,C,D,E,F): 
-------------------------------------
* Chain [56] with precondition: [] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [55] with precondition: [0>=A,B>=1] 
    - Upper bound: B 
    - Complexity: n 
* Chain [54] with precondition: [0>=A,A>=B+1] 
    - Upper bound: 2*A-2*B 
    - Complexity: n 
* Chain [53] with precondition: [0>=B,B>=A] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [52] with precondition: [A>=1,B>=A] 
    - Upper bound: 4*A+2*B 
    - Complexity: n 
* Chain [51] with precondition: [A>=1,A>=B+1] 
    - Upper bound: 10*A-2*B 
    - Complexity: n 
* Chain [50] with precondition: [B>=1,B>=A] 
    - Upper bound: 2*B 
    - Complexity: n 
* Chain [49] with precondition: [B>=A] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [48] with precondition: [A>=B+1] 
    - Upper bound: 2*A-2*B 
    - Complexity: n 

### Maximum cost of f0(A,B,C,D,E,F): max([nat(A-B)*2+nat(A)*8,nat(A)*4+nat(B)+nat(B)]) 
Asymptotic class: n 
* Total analysis performed in 133 ms.

