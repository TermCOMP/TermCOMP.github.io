WORST_CASE(Omega(n^2),O(n^2))

# LoAT Proof:
WORST_CASE(Omega(n^2),?)

WORST_CASE(Omega(n^1),?)
WORST_CASE(Omega(n^2),?)
Initial ITS

Start location: eval_speedSimpleMultipleDep_start

Location map:
LoAT_sink -> 0
eval_speedSimpleMultipleDep_start -> 1
eval_speedSimpleMultipleDep_bb0_in -> 2
eval_speedSimpleMultipleDep_0 -> 3
eval_speedSimpleMultipleDep_1 -> 4
eval_speedSimpleMultipleDep_2 -> 5
eval_speedSimpleMultipleDep_3 -> 6
eval_speedSimpleMultipleDep_4 -> 7
eval_speedSimpleMultipleDep_5 -> 8
eval_speedSimpleMultipleDep_6 -> 9
eval_speedSimpleMultipleDep_7 -> 10
eval_speedSimpleMultipleDep_bb1_in -> 11
eval_speedSimpleMultipleDep_bb2_in -> 12
eval_speedSimpleMultipleDep_bb3_in -> 13
eval_speedSimpleMultipleDep_stop -> 14

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: -2+i1 == 0 /\ i1'=3, i3'=1+i3
   2: -3+i1 == 0 /\ i1'=4, i3'=1+i3
   3: -4+i1 == 0 /\ i1'=5, i3'=1+i3
   4: -5+i1 == 0 /\ i1'=6, i3'=1+i3
   5: -6+i1 == 0 /\ i1'=7, i3'=1+i3
   6: -7+i1 == 0 /\ i1'=8, i3'=1+i3
   7: -8+i1 == 0 /\ i1'=9, i3'=1+i3
   8: -9+i1 == 0 /\ i1'=10, i3'=1+i3
   9: -10+i1 == 0 /\ i1'=11, i3'=1+i3, i6'=0, i7'=0
  10: (-11+i1 == 0 /\ i6-i5 < 0) /\ i1'=12, i3'=1+i3
  11: (-11+i1 == 0 /\ i6-i5 >= 0) /\ i1'=13, i3'=1+i3
  12: (i7-i4 < 0 /\ -12+i1 == 0) /\ i1'=11, i3'=1+i3, i7'=1+i7
  13: (i7-i4 < 0 /\ i7-i4 >= 0 /\ -12+i1 == 0) /\ i1'=11, i3'=1+i3, i6'=1+i6, i7'=1+i7
  14: (i7-i4 < 0 /\ i7-i4 >= 0 /\ -12+i1 == 0) /\ i1'=11, i3'=1+i3, i7'=0
  15: (i7-i4 >= 0 /\ -12+i1 == 0) /\ i1'=11, i3'=1+i3, i6'=1+i6, i7'=0
  16: -13+i1 == 0 /\ i1'=14, i3'=1+i3

Dependency graph:
0 -> 1
1 -> 2
2 -> 3
3 -> 4
4 -> 5
5 -> 6
6 -> 7
7 -> 8
8 -> 9
9 -> 10, 9 -> 11
10 -> 12, 10 -> 13, 10 -> 14, 10 -> 15
11 -> 16
12 -> 10, 12 -> 11
13 -> 10, 13 -> 11
14 -> 10, 14 -> 11
15 -> 10, 15 -> 11

Chained Linear Paths

	Applied Chaining

	First rule:
	-1+i1 == 0 /\ i1'=2, i3'=1+i3
	Second rule:
	-2+i1 == 0 /\ i1'=3, i3'=1+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 0, 1
	
	Applied Chaining

	First rule:
	-3+i1 == 0 /\ i1'=4, i3'=1+i3
	Second rule:
	-4+i1 == 0 /\ i1'=5, i3'=1+i3
	New rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 2, 3
	
	Applied Chaining

	First rule:
	-5+i1 == 0 /\ i1'=6, i3'=1+i3
	Second rule:
	-6+i1 == 0 /\ i1'=7, i3'=1+i3
	New rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=7, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 4, 5
	
	Applied Chaining

	First rule:
	-7+i1 == 0 /\ i1'=8, i3'=1+i3
	Second rule:
	-8+i1 == 0 /\ i1'=9, i3'=1+i3
	New rule:
	(0 == 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 6, 7
	
	Applied Chaining

	First rule:
	-9+i1 == 0 /\ i1'=10, i3'=1+i3
	Second rule:
	-10+i1 == 0 /\ i1'=11, i3'=1+i3, i6'=0, i7'=0
	New rule:
	(0 == 0 /\ -9+i1 == 0) /\ i1'=11, i3'=2+i3, i6'=0, i7'=0
	
	Applied Deletion

	Removed the following rules: 8, 9
	
	Applied Chaining

	First rule:
	(-11+i1 == 0 /\ i6-i5 >= 0) /\ i1'=13, i3'=1+i3
	Second rule:
	-13+i1 == 0 /\ i1'=14, i3'=1+i3
	New rule:
	(0 == 0 /\ -11+i1 == 0 /\ i6-i5 >= 0) /\ i1'=14, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 11, 16
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	Second rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	
	Applied Deletion

	Removed the following rules: 17, 18
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=7, i3'=2+i3
	Second rule:
	(0 == 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3
	New rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=9, i3'=4+i3
	
	Applied Deletion

	Removed the following rules: 19, 20
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	Second rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=9, i3'=4+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=9, i3'=8+i3
	
	Applied Deletion

	Removed the following rules: 23, 24
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=9, i3'=8+i3
	Second rule:
	(0 == 0 /\ -9+i1 == 0) /\ i1'=11, i3'=2+i3, i6'=0, i7'=0
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=11, i3'=10+i3, i6'=0, i7'=0
	
	Applied Deletion

	Removed the following rules: 21, 25

Start location: eval_speedSimpleMultipleDep_start

Location map:
LoAT_sink -> 0
eval_speedSimpleMultipleDep_start -> 1
eval_speedSimpleMultipleDep_bb0_in -> 2
eval_speedSimpleMultipleDep_0 -> 3
eval_speedSimpleMultipleDep_1 -> 4
eval_speedSimpleMultipleDep_2 -> 5
eval_speedSimpleMultipleDep_3 -> 6
eval_speedSimpleMultipleDep_4 -> 7
eval_speedSimpleMultipleDep_5 -> 8
eval_speedSimpleMultipleDep_6 -> 9
eval_speedSimpleMultipleDep_7 -> 10
eval_speedSimpleMultipleDep_bb1_in -> 11
eval_speedSimpleMultipleDep_bb2_in -> 12
eval_speedSimpleMultipleDep_bb3_in -> 13
eval_speedSimpleMultipleDep_stop -> 14

Rules:
  10: (-11+i1 == 0 /\ i6-i5 < 0) /\ i1'=12, i3'=1+i3
  12: (i7-i4 < 0 /\ -12+i1 == 0) /\ i1'=11, i3'=1+i3, i7'=1+i7
  13: (i7-i4 < 0 /\ i7-i4 >= 0 /\ -12+i1 == 0) /\ i1'=11, i3'=1+i3, i6'=1+i6, i7'=1+i7
  14: (i7-i4 < 0 /\ i7-i4 >= 0 /\ -12+i1 == 0) /\ i1'=11, i3'=1+i3, i7'=0
  15: (i7-i4 >= 0 /\ -12+i1 == 0) /\ i1'=11, i3'=1+i3, i6'=1+i6, i7'=0
  22: (0 == 0 /\ -11+i1 == 0 /\ i6-i5 >= 0) /\ i1'=14, i3'=2+i3
  26: (0 == 0 /\ -1+i1 == 0) /\ i1'=11, i3'=10+i3, i6'=0, i7'=0

Dependency graph:
10 -> 12, 10 -> 13, 10 -> 14, 10 -> 15
12 -> 10, 12 -> 22
13 -> 10, 13 -> 22
14 -> 10, 14 -> 22
15 -> 10, 15 -> 22
26 -> 10, 26 -> 22

Preprocessed Transitions

	Simplified Guard

	Original rule:
	(0 == 0 /\ -11+i1 == 0 /\ i6-i5 >= 0) /\ i1'=14, i3'=2+i3
	New rule:
	(-11+i1 == 0 /\ i6-i5 >= 0) /\ i1'=14, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=11, i3'=10+i3, i6'=0, i7'=0
	New rule:
	-1+i1 == 0 /\ i1'=11, i3'=10+i3, i6'=0, i7'=0

Start location: eval_speedSimpleMultipleDep_start

Location map:
LoAT_sink -> 0
eval_speedSimpleMultipleDep_start -> 1
eval_speedSimpleMultipleDep_bb0_in -> 2
eval_speedSimpleMultipleDep_0 -> 3
eval_speedSimpleMultipleDep_1 -> 4
eval_speedSimpleMultipleDep_2 -> 5
eval_speedSimpleMultipleDep_3 -> 6
eval_speedSimpleMultipleDep_4 -> 7
eval_speedSimpleMultipleDep_5 -> 8
eval_speedSimpleMultipleDep_6 -> 9
eval_speedSimpleMultipleDep_7 -> 10
eval_speedSimpleMultipleDep_bb1_in -> 11
eval_speedSimpleMultipleDep_bb2_in -> 12
eval_speedSimpleMultipleDep_bb3_in -> 13
eval_speedSimpleMultipleDep_stop -> 14

Rules:
  10: (-11+i1 == 0 /\ i6-i5 < 0) /\ i1'=12, i3'=1+i3
  12: (i7-i4 < 0 /\ -12+i1 == 0) /\ i1'=11, i3'=1+i3, i7'=1+i7
  13: (i7-i4 < 0 /\ i7-i4 >= 0 /\ -12+i1 == 0) /\ i1'=11, i3'=1+i3, i6'=1+i6, i7'=1+i7
  14: (i7-i4 < 0 /\ i7-i4 >= 0 /\ -12+i1 == 0) /\ i1'=11, i3'=1+i3, i7'=0
  15: (i7-i4 >= 0 /\ -12+i1 == 0) /\ i1'=11, i3'=1+i3, i6'=1+i6, i7'=0
  27: (-11+i1 == 0 /\ i6-i5 >= 0) /\ i1'=14, i3'=2+i3
  28: -1+i1 == 0 /\ i1'=11, i3'=10+i3, i6'=0, i7'=0

Dependency graph:
10 -> 12, 10 -> 13, 10 -> 14, 10 -> 15
12 -> 10, 12 -> 27
13 -> 10, 13 -> 27
14 -> 10, 14 -> 27
15 -> 10, 15 -> 27
28 -> 10, 28 -> 27

Refined Dependency Graph

	Removed the following edges: 10 -> 13, 10 -> 14, 13 -> 10, 13 -> 27, 14 -> 10, 14 -> 27

Start location: eval_speedSimpleMultipleDep_start

Location map:
LoAT_sink -> 0
eval_speedSimpleMultipleDep_start -> 1
eval_speedSimpleMultipleDep_bb0_in -> 2
eval_speedSimpleMultipleDep_0 -> 3
eval_speedSimpleMultipleDep_1 -> 4
eval_speedSimpleMultipleDep_2 -> 5
eval_speedSimpleMultipleDep_3 -> 6
eval_speedSimpleMultipleDep_4 -> 7
eval_speedSimpleMultipleDep_5 -> 8
eval_speedSimpleMultipleDep_6 -> 9
eval_speedSimpleMultipleDep_7 -> 10
eval_speedSimpleMultipleDep_bb1_in -> 11
eval_speedSimpleMultipleDep_bb2_in -> 12
eval_speedSimpleMultipleDep_bb3_in -> 13
eval_speedSimpleMultipleDep_stop -> 14

Rules:
  10: (-11+i1 == 0 /\ i6-i5 < 0) /\ i1'=12, i3'=1+i3
  12: (i7-i4 < 0 /\ -12+i1 == 0) /\ i1'=11, i3'=1+i3, i7'=1+i7
  13: (i7-i4 < 0 /\ i7-i4 >= 0 /\ -12+i1 == 0) /\ i1'=11, i3'=1+i3, i6'=1+i6, i7'=1+i7
  14: (i7-i4 < 0 /\ i7-i4 >= 0 /\ -12+i1 == 0) /\ i1'=11, i3'=1+i3, i7'=0
  15: (i7-i4 >= 0 /\ -12+i1 == 0) /\ i1'=11, i3'=1+i3, i6'=1+i6, i7'=0
  27: (-11+i1 == 0 /\ i6-i5 >= 0) /\ i1'=14, i3'=2+i3
  28: -1+i1 == 0 /\ i1'=11, i3'=10+i3, i6'=0, i7'=0

Dependency graph:
10 -> 12, 10 -> 15
12 -> 10, 12 -> 27
15 -> 10, 15 -> 27
28 -> 10, 28 -> 27

Step with 28

	Trace

	28[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 27

	Trace

	28[(-1+i1 == 0)]
	27[(-11+i1 == 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Backtrack

	Trace

	28[(-1+i1 == 0)]
	
	Blocked

	{}
	{27[T]}
	
Step with 10

	Trace

	28[(-1+i1 == 0)]
	10[(-11+i1 == 0 /\ i6-i5 < 0)]
	
	Blocked

	{}
	{27[T]}
	{}
	
Step with 12

	Trace

	28[(-1+i1 == 0)]
	10[(-11+i1 == 0 /\ i6-i5 < 0)]
	12[(i7-i4 < 0 /\ -12+i1 == 0)]
	
	Blocked

	{}
	{27[T]}
	{}
	{}
	
Poly(n^1)

Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ i7-i4 < 0 /\ -11+i1 == 0 /\ i6-i5 < 0) /\ i1'=11, i3'=2+i3, i7'=1+i7
		New rule:
		(i7-i4 < 0 /\ -11+i1 == 0 /\ i6-i5 < 0) /\ i1'=11, i3'=2+i3, i7'=1+i7

	Loop Acceleration

	Original rule:
	(i7-i4 < 0 /\ -11+i1 == 0 /\ i6-i5 < 0) /\ i1'=11, i3'=2+i3, i7'=1+i7
	New rule:
	(-11+i1 >= 0 /\ 1-it25-i7+i4 > 0 /\ 11-i1 >= 0 /\ -i6+i5 > 0 /\ -1+it25 >= 0) /\ i1'=i1, i3'=2*it25+i3, i7'=it25+i7

		-11+i1 >= 0 [0]: unchanged
		
		-i7+i4 > 0 [0]: montonic decrease yields 1-it25-i7+i4 > 0
		
		11-i1 >= 0 [0]: unchanged
		
		-i6+i5 > 0 [0]: unchanged
		
		Replacement map: {-11+i1 >= 0 -> -11+i1 >= 0, -i7+i4 > 0 -> 1-it25-i7+i4 > 0, 11-i1 >= 0 -> 11-i1 >= 0, -i6+i5 > 0 -> -i6+i5 > 0}

	Removed Trivial Updates

	Original rule:
	(-11+i1 >= 0 /\ 1-it25-i7+i4 > 0 /\ 11-i1 >= 0 /\ -i6+i5 > 0 /\ -1+it25 >= 0) /\ i1'=i1, i3'=2*it25+i3, i7'=it25+i7
	New rule:
	(-11+i1 >= 0 /\ 1-it25-i7+i4 > 0 /\ 11-i1 >= 0 /\ -i6+i5 > 0 /\ -1+it25 >= 0) /\ i3'=2*it25+i3, i7'=it25+i7
	
	Instantiation

	Original rule:
	(-11+i1 >= 0 /\ 1-it25-i7+i4 > 0 /\ 11-i1 >= 0 /\ -i6+i5 > 0 /\ -1+it25 >= 0) /\ i3'=2*it25+i3, i7'=it25+i7
	New rule:
	(1 > 0 /\ -11+i1 >= 0 /\ -1-i7+i4 >= 0 /\ 11-i1 >= 0 /\ -i6+i5 > 0) /\ i3'=i3-2*i7+2*i4, i7'=i4

Start location: eval_speedSimpleMultipleDep_start

Location map:
LoAT_sink -> 0
eval_speedSimpleMultipleDep_start -> 1
eval_speedSimpleMultipleDep_bb0_in -> 2
eval_speedSimpleMultipleDep_0 -> 3
eval_speedSimpleMultipleDep_1 -> 4
eval_speedSimpleMultipleDep_2 -> 5
eval_speedSimpleMultipleDep_3 -> 6
eval_speedSimpleMultipleDep_4 -> 7
eval_speedSimpleMultipleDep_5 -> 8
eval_speedSimpleMultipleDep_6 -> 9
eval_speedSimpleMultipleDep_7 -> 10
eval_speedSimpleMultipleDep_bb1_in -> 11
eval_speedSimpleMultipleDep_bb2_in -> 12
eval_speedSimpleMultipleDep_bb3_in -> 13
eval_speedSimpleMultipleDep_stop -> 14

Rules:
  10: (-11+i1 == 0 /\ i6-i5 < 0) /\ i1'=12, i3'=1+i3
  12: (i7-i4 < 0 /\ -12+i1 == 0) /\ i1'=11, i3'=1+i3, i7'=1+i7
  13: (i7-i4 < 0 /\ i7-i4 >= 0 /\ -12+i1 == 0) /\ i1'=11, i3'=1+i3, i6'=1+i6, i7'=1+i7
  14: (i7-i4 < 0 /\ i7-i4 >= 0 /\ -12+i1 == 0) /\ i1'=11, i3'=1+i3, i7'=0
  15: (i7-i4 >= 0 /\ -12+i1 == 0) /\ i1'=11, i3'=1+i3, i6'=1+i6, i7'=0
  27: (-11+i1 == 0 /\ i6-i5 >= 0) /\ i1'=14, i3'=2+i3
  28: -1+i1 == 0 /\ i1'=11, i3'=10+i3, i6'=0, i7'=0
  29: (1 > 0 /\ -11+i1 >= 0 /\ -1-i7+i4 >= 0 /\ 11-i1 >= 0 /\ -i6+i5 > 0) /\ i3'=i3-2*i7+2*i4, i7'=i4

Dependency graph:
10 -> 12, 10 -> 15
12 -> 10, 12 -> 27, 12 -> 29
15 -> 10, 15 -> 27, 15 -> 29
28 -> 10, 28 -> 27, 28 -> 29
29 -> 10, 29 -> 27

	Trace

	28[(-1+i1 == 0)]
	29[(1 > 0 /\ -11+i1 >= 0 /\ -1-i7+i4 >= 0 /\ 11-i1 >= 0 /\ -i6+i5 > 0)]
	
	Blocked

	{}
	{27[T]}
	{29[T]}
	
Step with 10

	Trace

	28[(-1+i1 == 0)]
	29[(1 > 0 /\ -11+i1 >= 0 /\ -1-i7+i4 >= 0 /\ 11-i1 >= 0 /\ -i6+i5 > 0)]
	10[(-11+i1 == 0 /\ i6-i5 < 0)]
	
	Blocked

	{}
	{27[T]}
	{27[T], 29[T]}
	{}
	
Step with 15

	Trace

	28[(-1+i1 == 0)]
	29[(1 > 0 /\ -11+i1 >= 0 /\ -1-i7+i4 >= 0 /\ 11-i1 >= 0 /\ -i6+i5 > 0)]
	10[(-11+i1 == 0 /\ i6-i5 < 0)]
	15[(i7-i4 >= 0 /\ -12+i1 == 0)]
	
	Blocked

	{}
	{27[T]}
	{27[T], 29[T]}
	{12[T]}
	{}
	
Accelerate and Drop

		Simplified Guard

		Original rule:
		(0 == 0 /\ i7-i4 >= 0 /\ -11+i1 == 0 /\ i6-i5 < 0) /\ i1'=11, i3'=2+i3, i6'=1+i6, i7'=0
		New rule:
		(i7-i4 >= 0 /\ -11+i1 == 0 /\ i6-i5 < 0) /\ i1'=11, i3'=2+i3, i6'=1+i6, i7'=0

	Loop Acceleration

	Original rule:
	(i7-i4 >= 0 /\ -11+i1 == 0 /\ i6-i5 < 0) /\ i1'=11, i3'=2+i3, i6'=1+i6, i7'=0
	New rule:
	(i7-i4 >= 0 /\ 1-i6+i5-it52 > 0 /\ -11+i1 >= 0 /\ -1+it52 >= 0 /\ 11-i1 >= 0 /\ -i6+i5 > 0 /\ -i4 >= 0) /\ i1'=i1, i3'=i3+2*it52, i6'=i6+it52, i7'=0

		i7-i4 >= 0 [0]: eventual decrease yields (i7-i4 >= 0 /\ -i4 >= 0)
		
		i7-i4 >= 0 [1]: eventual increase yields (i7-i4 >= 0 /\ i7 <= 0)
		
		-11+i1 >= 0 [0]: unchanged
		
		11-i1 >= 0 [0]: unchanged
		
		-i6+i5 > 0 [0]: montonic decrease yields (1-i6+i5-it52 > 0 /\ -i6+i5 > 0)
		
		Replacement map: {i7-i4 >= 0 -> (i7-i4 >= 0 /\ -i4 >= 0), -11+i1 >= 0 -> -11+i1 >= 0, 11-i1 >= 0 -> 11-i1 >= 0, -i6+i5 > 0 -> (1-i6+i5-it52 > 0 /\ -i6+i5 > 0)}

	Removed Trivial Updates

	Original rule:
	(i7-i4 >= 0 /\ 1-i6+i5-it52 > 0 /\ -11+i1 >= 0 /\ -1+it52 >= 0 /\ 11-i1 >= 0 /\ -i6+i5 > 0 /\ -i4 >= 0) /\ i1'=i1, i3'=i3+2*it52, i6'=i6+it52, i7'=0
	New rule:
	(i7-i4 >= 0 /\ 1-i6+i5-it52 > 0 /\ -11+i1 >= 0 /\ -1+it52 >= 0 /\ 11-i1 >= 0 /\ -i6+i5 > 0 /\ -i4 >= 0) /\ i3'=i3+2*it52, i6'=i6+it52, i7'=0
	
	Instantiation

	Original rule:
	(i7-i4 >= 0 /\ 1-i6+i5-it52 > 0 /\ -11+i1 >= 0 /\ -1+it52 >= 0 /\ 11-i1 >= 0 /\ -i6+i5 > 0 /\ -i4 >= 0) /\ i3'=i3+2*it52, i6'=i6+it52, i7'=0
	New rule:
	(1 > 0 /\ i7-i4 >= 0 /\ -11+i1 >= 0 /\ -1-i6+i5 >= 0 /\ 11-i1 >= 0 /\ -i6+i5 > 0 /\ -i4 >= 0) /\ i3'=-2*i6+i3+2*i5, i6'=i5, i7'=0

Start location: eval_speedSimpleMultipleDep_start

Location map:
LoAT_sink -> 0
eval_speedSimpleMultipleDep_start -> 1
eval_speedSimpleMultipleDep_bb0_in -> 2
eval_speedSimpleMultipleDep_0 -> 3
eval_speedSimpleMultipleDep_1 -> 4
eval_speedSimpleMultipleDep_2 -> 5
eval_speedSimpleMultipleDep_3 -> 6
eval_speedSimpleMultipleDep_4 -> 7
eval_speedSimpleMultipleDep_5 -> 8
eval_speedSimpleMultipleDep_6 -> 9
eval_speedSimpleMultipleDep_7 -> 10
eval_speedSimpleMultipleDep_bb1_in -> 11
eval_speedSimpleMultipleDep_bb2_in -> 12
eval_speedSimpleMultipleDep_bb3_in -> 13
eval_speedSimpleMultipleDep_stop -> 14

Rules:
  10: (-11+i1 == 0 /\ i6-i5 < 0) /\ i1'=12, i3'=1+i3
  12: (i7-i4 < 0 /\ -12+i1 == 0) /\ i1'=11, i3'=1+i3, i7'=1+i7
  13: (i7-i4 < 0 /\ i7-i4 >= 0 /\ -12+i1 == 0) /\ i1'=11, i3'=1+i3, i6'=1+i6, i7'=1+i7
  14: (i7-i4 < 0 /\ i7-i4 >= 0 /\ -12+i1 == 0) /\ i1'=11, i3'=1+i3, i7'=0
  15: (i7-i4 >= 0 /\ -12+i1 == 0) /\ i1'=11, i3'=1+i3, i6'=1+i6, i7'=0
  27: (-11+i1 == 0 /\ i6-i5 >= 0) /\ i1'=14, i3'=2+i3
  28: -1+i1 == 0 /\ i1'=11, i3'=10+i3, i6'=0, i7'=0
  29: (1 > 0 /\ -11+i1 >= 0 /\ -1-i7+i4 >= 0 /\ 11-i1 >= 0 /\ -i6+i5 > 0) /\ i3'=i3-2*i7+2*i4, i7'=i4
  30: (1 > 0 /\ i7-i4 >= 0 /\ -11+i1 >= 0 /\ -1-i6+i5 >= 0 /\ 11-i1 >= 0 /\ -i6+i5 > 0 /\ -i4 >= 0) /\ i3'=-2*i6+i3+2*i5, i6'=i5, i7'=0

Dependency graph:
10 -> 12, 10 -> 15
12 -> 10, 12 -> 27, 12 -> 29, 12 -> 30
15 -> 10, 15 -> 27, 15 -> 29, 15 -> 30
28 -> 10, 28 -> 27, 28 -> 29, 28 -> 30
29 -> 10, 29 -> 27, 29 -> 30
30 -> 10, 30 -> 27, 30 -> 29

	Trace

	28[(-1+i1 == 0)]
	29[(1 > 0 /\ -11+i1 >= 0 /\ -1-i7+i4 >= 0 /\ 11-i1 >= 0 /\ -i6+i5 > 0)]
	
	Blocked

	{}
	{27[T]}
	{27[T], 29[T]}
	
Step with 10

	Trace

	28[(-1+i1 == 0)]
	29[(1 > 0 /\ -11+i1 >= 0 /\ -1-i7+i4 >= 0 /\ 11-i1 >= 0 /\ -i6+i5 > 0)]
	10[(-11+i1 == 0 /\ i6-i5 < 0)]
	
	Blocked

	{}
	{27[T]}
	{27[T], 29[T], 30[T]}
	{}
	
Step with 15

	Trace

	28[(-1+i1 == 0)]
	29[(1 > 0 /\ -11+i1 >= 0 /\ -1-i7+i4 >= 0 /\ 11-i1 >= 0 /\ -i6+i5 > 0)]
	10[(-11+i1 == 0 /\ i6-i5 < 0)]
	15[(i7-i4 >= 0 /\ -12+i1 == 0)]
	
	Blocked

	{}
	{27[T]}
	{27[T], 29[T], 30[T]}
	{}
	{}
	
Poly(n^2)

Accelerate

		Extracted Implied Equalities

		Original rule:
		(0 >= 0 /\ 0 == 0 /\ 1 > 0 /\ -11+i1 >= 0 /\ -11+i1 == 0 /\ -1-i7+i4 >= 0 /\ 11-i1 >= 0 /\ -i6+i5 > 0 /\ i6-i5 < 0) /\ i1'=11, i3'=2+i3-2*i7+2*i4, i6'=1+i6, i7'=0
		New rule:
		(0 >= 0 /\ 0 == 0 /\ 1 > 0 /\ -11+i1 >= 0 /\ -11+i1 == 0 /\ -1-i7+i4 >= 0 /\ 11-i1 >= 0 /\ 11-i1 == 0 /\ -i6+i5 > 0 /\ i6-i5 < 0) /\ i1'=11, i3'=2+i3-2*i7+2*i4, i6'=1+i6, i7'=0
		
		Simplified Guard

		Original rule:
		(0 >= 0 /\ 0 == 0 /\ 1 > 0 /\ -11+i1 >= 0 /\ -11+i1 == 0 /\ -1-i7+i4 >= 0 /\ 11-i1 >= 0 /\ 11-i1 == 0 /\ -i6+i5 > 0 /\ i6-i5 < 0) /\ i1'=11, i3'=2+i3-2*i7+2*i4, i6'=1+i6, i7'=0
		New rule:
		(-11+i1 >= 0 /\ -11+i1 == 0 /\ -1-i7+i4 >= 0 /\ 11-i1 >= 0 /\ 11-i1 == 0 /\ -i6+i5 > 0 /\ i6-i5 < 0) /\ i1'=11, i3'=2+i3-2*i7+2*i4, i6'=1+i6, i7'=0

	Loop Acceleration

	Original rule:
	(-11+i1 >= 0 /\ -11+i1 == 0 /\ -1-i7+i4 >= 0 /\ 11-i1 >= 0 /\ 11-i1 == 0 /\ -i6+i5 > 0 /\ i6-i5 < 0) /\ i1'=11, i3'=2+i3-2*i7+2*i4, i6'=1+i6, i7'=0
	New rule:
	(-1+it65 >= 0 /\ -11+i1 >= 0 /\ -11+i1 == 0 /\ -1+i4 >= 0 /\ -1-i6+i5 > 0 /\ -1-i7+i4 >= 0 /\ -i6-it65+i5 > 0 /\ 11-i1 >= 0 /\ 11-i1 == 0 /\ -i6+i5 > 0 /\ i6-i5 < 0) /\ i1'=i1, i3'=2+i3-2*i7+2*i4+2*it65+2*i4*it65, i6'=1+i6+it65, i7'=0

		-11+i1 >= 0 [0]: unchanged
		
		-1-i7+i4 >= 0 [0]: eventual decrease yields (-1+i4 >= 0 /\ -1-i7+i4 >= 0)
		
		-1-i7+i4 >= 0 [1]: eventual increase yields (-1-i7+i4 >= 0 /\ -i7 <= 0)
		
		11-i1 >= 0 [0]: unchanged
		
		-i6+i5 > 0 [0]: montonic decrease yields (1-i6-it65+i5 > 0 /\ -i6+i5 > 0)
		
		Replacement map: {-11+i1 >= 0 -> -11+i1 >= 0, -1-i7+i4 >= 0 -> (-1+i4 >= 0 /\ -1-i7+i4 >= 0), 11-i1 >= 0 -> 11-i1 >= 0, -i6+i5 > 0 -> (1-i6-it65+i5 > 0 /\ -i6+i5 > 0)}

	Removed Trivial Updates

	Original rule:
	(-1+it65 >= 0 /\ -11+i1 >= 0 /\ -11+i1 == 0 /\ -1+i4 >= 0 /\ -1-i6+i5 > 0 /\ -1-i7+i4 >= 0 /\ -i6-it65+i5 > 0 /\ 11-i1 >= 0 /\ 11-i1 == 0 /\ -i6+i5 > 0 /\ i6-i5 < 0) /\ i1'=i1, i3'=2+i3-2*i7+2*i4+2*it65+2*i4*it65, i6'=1+i6+it65, i7'=0
	New rule:
	(-1+it65 >= 0 /\ -11+i1 >= 0 /\ -11+i1 == 0 /\ -1+i4 >= 0 /\ -1-i6+i5 > 0 /\ -1-i7+i4 >= 0 /\ -i6-it65+i5 > 0 /\ 11-i1 >= 0 /\ 11-i1 == 0 /\ -i6+i5 > 0 /\ i6-i5 < 0) /\ i3'=2+i3-2*i7+2*i4+2*it65+2*i4*it65, i6'=1+i6+it65, i7'=0
	
	Instantiation

	Original rule:
	(-1+it65 >= 0 /\ -11+i1 >= 0 /\ -11+i1 == 0 /\ -1+i4 >= 0 /\ -1-i6+i5 > 0 /\ -1-i7+i4 >= 0 /\ -i6-it65+i5 > 0 /\ 11-i1 >= 0 /\ 11-i1 == 0 /\ -i6+i5 > 0 /\ i6-i5 < 0) /\ i3'=2+i3-2*i7+2*i4+2*it65+2*i4*it65, i6'=1+i6+it65, i7'=0
	New rule:
	(1 > 0 /\ -11+i1 >= 0 /\ -11+i1 == 0 /\ -1+i4 >= 0 /\ -1-i6+i5 > 0 /\ -1-i7+i4 >= 0 /\ -2-i6+i5 >= 0 /\ 11-i1 >= 0 /\ 11-i1 == 0 /\ -i6+i5 > 0 /\ i6-i5 < 0) /\ i3'=-2*i6+i3-2*i7+2*i4+2*i5-2*i4*(1+i6-i5), i6'=i5, i7'=0

Start location: eval_speedSimpleMultipleDep_start

Location map:
LoAT_sink -> 0
eval_speedSimpleMultipleDep_start -> 1
eval_speedSimpleMultipleDep_bb0_in -> 2
eval_speedSimpleMultipleDep_0 -> 3
eval_speedSimpleMultipleDep_1 -> 4
eval_speedSimpleMultipleDep_2 -> 5
eval_speedSimpleMultipleDep_3 -> 6
eval_speedSimpleMultipleDep_4 -> 7
eval_speedSimpleMultipleDep_5 -> 8
eval_speedSimpleMultipleDep_6 -> 9
eval_speedSimpleMultipleDep_7 -> 10
eval_speedSimpleMultipleDep_bb1_in -> 11
eval_speedSimpleMultipleDep_bb2_in -> 12
eval_speedSimpleMultipleDep_bb3_in -> 13
eval_speedSimpleMultipleDep_stop -> 14

Rules:
  10: (-11+i1 == 0 /\ i6-i5 < 0) /\ i1'=12, i3'=1+i3
  12: (i7-i4 < 0 /\ -12+i1 == 0) /\ i1'=11, i3'=1+i3, i7'=1+i7
  13: (i7-i4 < 0 /\ i7-i4 >= 0 /\ -12+i1 == 0) /\ i1'=11, i3'=1+i3, i6'=1+i6, i7'=1+i7
  14: (i7-i4 < 0 /\ i7-i4 >= 0 /\ -12+i1 == 0) /\ i1'=11, i3'=1+i3, i7'=0
  15: (i7-i4 >= 0 /\ -12+i1 == 0) /\ i1'=11, i3'=1+i3, i6'=1+i6, i7'=0
  27: (-11+i1 == 0 /\ i6-i5 >= 0) /\ i1'=14, i3'=2+i3
  28: -1+i1 == 0 /\ i1'=11, i3'=10+i3, i6'=0, i7'=0
  29: (1 > 0 /\ -11+i1 >= 0 /\ -1-i7+i4 >= 0 /\ 11-i1 >= 0 /\ -i6+i5 > 0) /\ i3'=i3-2*i7+2*i4, i7'=i4
  30: (1 > 0 /\ i7-i4 >= 0 /\ -11+i1 >= 0 /\ -1-i6+i5 >= 0 /\ 11-i1 >= 0 /\ -i6+i5 > 0 /\ -i4 >= 0) /\ i3'=-2*i6+i3+2*i5, i6'=i5, i7'=0
  31: (1 > 0 /\ -11+i1 >= 0 /\ -11+i1 == 0 /\ -1+i4 >= 0 /\ -1-i6+i5 > 0 /\ -1-i7+i4 >= 0 /\ -2-i6+i5 >= 0 /\ 11-i1 >= 0 /\ 11-i1 == 0 /\ -i6+i5 > 0 /\ i6-i5 < 0) /\ i3'=-2*i6+i3-2*i7+2*i4+2*i5-2*i4*(1+i6-i5), i6'=i5, i7'=0

Dependency graph:
10 -> 12, 10 -> 15
12 -> 10, 12 -> 27, 12 -> 29, 12 -> 30, 12 -> 31
15 -> 10, 15 -> 27, 15 -> 29, 15 -> 30, 15 -> 31
28 -> 10, 28 -> 27, 28 -> 29, 28 -> 30, 28 -> 31
29 -> 10, 29 -> 27, 29 -> 30
30 -> 10, 30 -> 27, 30 -> 29, 30 -> 31
31 -> 10, 31 -> 27, 31 -> 29, 31 -> 30

	Trace

	28[(-1+i1 == 0)]
	31[(1 > 0 /\ -11+i1 >= 0 /\ -11+i1 == 0 /\ -1+i4 >= 0 /\ -1-i6+i5 > 0 /\ -1-i7+i4 >= 0 /\ -2-i6+i5 >= 0 /\ 11-i1 >= 0 /\ 11-i1 == 0 /\ -i6+i5 > 0 /\ i6-i5 < 0)]
	
	Blocked

	{}
	{27[T]}
	{31[T]}
	
Step with 27

	Trace

	28[(-1+i1 == 0)]
	31[(1 > 0 /\ -11+i1 >= 0 /\ -11+i1 == 0 /\ -1+i4 >= 0 /\ -1-i6+i5 > 0 /\ -1-i7+i4 >= 0 /\ -2-i6+i5 >= 0 /\ 11-i1 >= 0 /\ 11-i1 == 0 /\ -i6+i5 > 0 /\ i6-i5 < 0)]
	27[(-11+i1 == 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{27[T]}
	{30[T], 31[T]}
	{}
	
Backtrack

	Trace

	28[(-1+i1 == 0)]
	31[(1 > 0 /\ -11+i1 >= 0 /\ -11+i1 == 0 /\ -1+i4 >= 0 /\ -1-i6+i5 > 0 /\ -1-i7+i4 >= 0 /\ -2-i6+i5 >= 0 /\ 11-i1 >= 0 /\ 11-i1 == 0 /\ -i6+i5 > 0 /\ i6-i5 < 0)]
	
	Blocked

	{}
	{27[T]}
	{27[T], 30[T], 31[T]}
	
Backtrack

	Trace

	28[(-1+i1 == 0)]
	
	Blocked

	{}
	{27[T], 31[T]}
	
Step with 29

	Trace

	28[(-1+i1 == 0)]
	29[(1 > 0 /\ -11+i1 >= 0 /\ -1-i7+i4 >= 0 /\ 11-i1 >= 0 /\ -i6+i5 > 0)]
	
	Blocked

	{}
	{27[T], 31[T]}
	{29[T]}
	
Step with 10

	Trace

	28[(-1+i1 == 0)]
	29[(1 > 0 /\ -11+i1 >= 0 /\ -1-i7+i4 >= 0 /\ 11-i1 >= 0 /\ -i6+i5 > 0)]
	10[(-11+i1 == 0 /\ i6-i5 < 0)]
	
	Blocked

	{}
	{27[T], 31[T]}
	{29[T], 30[T]}
	{}
	
Step with 15

	Trace

	28[(-1+i1 == 0)]
	29[(1 > 0 /\ -11+i1 >= 0 /\ -1-i7+i4 >= 0 /\ 11-i1 >= 0 /\ -i6+i5 > 0)]
	10[(-11+i1 == 0 /\ i6-i5 < 0)]
	15[(i7-i4 >= 0 /\ -12+i1 == 0)]
	
	Blocked

	{}
	{27[T], 31[T]}
	{29[T], 30[T]}
	{}
	{}
	
Covered

	Trace

	28[(-1+i1 == 0)]
	29[(1 > 0 /\ -11+i1 >= 0 /\ -1-i7+i4 >= 0 /\ 11-i1 >= 0 /\ -i6+i5 > 0)]
	10[(-11+i1 == 0 /\ i6-i5 < 0)]
	
	Blocked

	{}
	{27[T], 31[T]}
	{29[T], 30[T]}
	{15[T]}
	
Backtrack

	Trace

	28[(-1+i1 == 0)]
	29[(1 > 0 /\ -11+i1 >= 0 /\ -1-i7+i4 >= 0 /\ 11-i1 >= 0 /\ -i6+i5 > 0)]
	
	Blocked

	{}
	{27[T], 31[T]}
	{10[T], 29[T], 30[T]}
	
Backtrack

	Trace

	28[(-1+i1 == 0)]
	
	Blocked

	{}
	{27[T], 29[T], 31[T]}
	
Step with 30

	Trace

	28[(-1+i1 == 0)]
	30[(1 > 0 /\ i7-i4 >= 0 /\ -11+i1 >= 0 /\ -1-i6+i5 >= 0 /\ 11-i1 >= 0 /\ -i6+i5 > 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{27[T], 29[T], 31[T]}
	{30[T]}
	
Step with 27

	Trace

	28[(-1+i1 == 0)]
	30[(1 > 0 /\ i7-i4 >= 0 /\ -11+i1 >= 0 /\ -1-i6+i5 >= 0 /\ 11-i1 >= 0 /\ -i6+i5 > 0 /\ -i4 >= 0)]
	27[(-11+i1 == 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{27[T], 29[T], 31[T]}
	{30[T]}
	{}
	
Backtrack

	Trace

	28[(-1+i1 == 0)]
	30[(1 > 0 /\ i7-i4 >= 0 /\ -11+i1 >= 0 /\ -1-i6+i5 >= 0 /\ 11-i1 >= 0 /\ -i6+i5 > 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{27[T], 29[T], 31[T]}
	{27[T], 30[T]}
	
Backtrack

	Trace

	28[(-1+i1 == 0)]
	
	Blocked

	{}
	{27[T], 29[T], 30[T], 31[T]}
	
Step with 10

	Trace

	28[(-1+i1 == 0)]
	10[(-11+i1 == 0 /\ i6-i5 < 0)]
	
	Blocked

	{}
	{27[T], 29[T], 30[T], 31[T]}
	{}
	
Step with 12

	Trace

	28[(-1+i1 == 0)]
	10[(-11+i1 == 0 /\ i6-i5 < 0)]
	12[(i7-i4 < 0 /\ -12+i1 == 0)]
	
	Blocked

	{}
	{27[T], 29[T], 30[T], 31[T]}
	{}
	{}
	
Covered

	Trace

	28[(-1+i1 == 0)]
	10[(-11+i1 == 0 /\ i6-i5 < 0)]
	
	Blocked

	{}
	{27[T], 29[T], 30[T], 31[T]}
	{12[T]}
	
Step with 15

	Trace

	28[(-1+i1 == 0)]
	10[(-11+i1 == 0 /\ i6-i5 < 0)]
	15[(i7-i4 >= 0 /\ -12+i1 == 0)]
	
	Blocked

	{}
	{27[T], 29[T], 30[T], 31[T]}
	{12[T]}
	{}
	
Step with 30

	Trace

	28[(-1+i1 == 0)]
	10[(-11+i1 == 0 /\ i6-i5 < 0)]
	15[(i7-i4 >= 0 /\ -12+i1 == 0)]
	30[(1 > 0 /\ i7-i4 >= 0 /\ -11+i1 >= 0 /\ -1-i6+i5 >= 0 /\ 11-i1 >= 0 /\ -i6+i5 > 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{27[T], 29[T], 30[T], 31[T]}
	{12[T]}
	{29[T]}
	{30[T]}
	
Covered

	Trace

	28[(-1+i1 == 0)]
	10[(-11+i1 == 0 /\ i6-i5 < 0)]
	15[(i7-i4 >= 0 /\ -12+i1 == 0)]
	
	Blocked

	{}
	{27[T], 29[T], 30[T], 31[T]}
	{12[T]}
	{29[T], 30[T]}
	
Step with 10

	Trace

	28[(-1+i1 == 0)]
	10[(-11+i1 == 0 /\ i6-i5 < 0)]
	15[(i7-i4 >= 0 /\ -12+i1 == 0)]
	10[(-11+i1 == 0 /\ i6-i5 < 0)]
	
	Blocked

	{}
	{27[T], 29[T], 30[T], 31[T]}
	{12[T]}
	{29[T], 30[T]}
	{}
	
Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ i7-i4 >= 0 /\ -12+i1 == 0 /\ 1+i6-i5 < 0) /\ i1'=12, i3'=2+i3, i6'=1+i6, i7'=0
		New rule:
		(i7-i4 >= 0 /\ -12+i1 == 0 /\ 1+i6-i5 < 0) /\ i1'=12, i3'=2+i3, i6'=1+i6, i7'=0

	Loop Acceleration

	Original rule:
	(i7-i4 >= 0 /\ -12+i1 == 0 /\ 1+i6-i5 < 0) /\ i1'=12, i3'=2+i3, i6'=1+i6, i7'=0
	New rule:
	(i7-i4 >= 0 /\ 12-i1 >= 0 /\ -1-i6+i5 > 0 /\ -1+it146 >= 0 /\ -i6-it146+i5 > 0 /\ -12+i1 >= 0 /\ -i4 >= 0) /\ i1'=i1, i3'=i3+2*it146, i6'=i6+it146, i7'=0

		i7-i4 >= 0 [0]: eventual decrease yields (i7-i4 >= 0 /\ -i4 >= 0)
		
		i7-i4 >= 0 [1]: eventual increase yields (i7-i4 >= 0 /\ i7 <= 0)
		
		12-i1 >= 0 [0]: unchanged
		
		-1-i6+i5 > 0 [0]: montonic decrease yields (-1-i6+i5 > 0 /\ -i6-it146+i5 > 0)
		
		-12+i1 >= 0 [0]: unchanged
		
		Replacement map: {i7-i4 >= 0 -> (i7-i4 >= 0 /\ -i4 >= 0), 12-i1 >= 0 -> 12-i1 >= 0, -1-i6+i5 > 0 -> (-1-i6+i5 > 0 /\ -i6-it146+i5 > 0), -12+i1 >= 0 -> -12+i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(i7-i4 >= 0 /\ 12-i1 >= 0 /\ -1-i6+i5 > 0 /\ -1+it146 >= 0 /\ -i6-it146+i5 > 0 /\ -12+i1 >= 0 /\ -i4 >= 0) /\ i1'=i1, i3'=i3+2*it146, i6'=i6+it146, i7'=0
	New rule:
	(i7-i4 >= 0 /\ 12-i1 >= 0 /\ -1-i6+i5 > 0 /\ -1+it146 >= 0 /\ -i6-it146+i5 > 0 /\ -12+i1 >= 0 /\ -i4 >= 0) /\ i3'=i3+2*it146, i6'=i6+it146, i7'=0
	
	Instantiation

	Original rule:
	(i7-i4 >= 0 /\ 12-i1 >= 0 /\ -1-i6+i5 > 0 /\ -1+it146 >= 0 /\ -i6-it146+i5 > 0 /\ -12+i1 >= 0 /\ -i4 >= 0) /\ i3'=i3+2*it146, i6'=i6+it146, i7'=0
	New rule:
	(1 > 0 /\ i7-i4 >= 0 /\ 12-i1 >= 0 /\ -1-i6+i5 > 0 /\ -2-i6+i5 >= 0 /\ -12+i1 >= 0 /\ -i4 >= 0) /\ i3'=-2-2*i6+i3+2*i5, i6'=-1+i5, i7'=0

Start location: eval_speedSimpleMultipleDep_start

Location map:
LoAT_sink -> 0
eval_speedSimpleMultipleDep_start -> 1
eval_speedSimpleMultipleDep_bb0_in -> 2
eval_speedSimpleMultipleDep_0 -> 3
eval_speedSimpleMultipleDep_1 -> 4
eval_speedSimpleMultipleDep_2 -> 5
eval_speedSimpleMultipleDep_3 -> 6
eval_speedSimpleMultipleDep_4 -> 7
eval_speedSimpleMultipleDep_5 -> 8
eval_speedSimpleMultipleDep_6 -> 9
eval_speedSimpleMultipleDep_7 -> 10
eval_speedSimpleMultipleDep_bb1_in -> 11
eval_speedSimpleMultipleDep_bb2_in -> 12
eval_speedSimpleMultipleDep_bb3_in -> 13
eval_speedSimpleMultipleDep_stop -> 14

Rules:
  10: (-11+i1 == 0 /\ i6-i5 < 0) /\ i1'=12, i3'=1+i3
  12: (i7-i4 < 0 /\ -12+i1 == 0) /\ i1'=11, i3'=1+i3, i7'=1+i7
  13: (i7-i4 < 0 /\ i7-i4 >= 0 /\ -12+i1 == 0) /\ i1'=11, i3'=1+i3, i6'=1+i6, i7'=1+i7
  14: (i7-i4 < 0 /\ i7-i4 >= 0 /\ -12+i1 == 0) /\ i1'=11, i3'=1+i3, i7'=0
  15: (i7-i4 >= 0 /\ -12+i1 == 0) /\ i1'=11, i3'=1+i3, i6'=1+i6, i7'=0
  27: (-11+i1 == 0 /\ i6-i5 >= 0) /\ i1'=14, i3'=2+i3
  28: -1+i1 == 0 /\ i1'=11, i3'=10+i3, i6'=0, i7'=0
  29: (1 > 0 /\ -11+i1 >= 0 /\ -1-i7+i4 >= 0 /\ 11-i1 >= 0 /\ -i6+i5 > 0) /\ i3'=i3-2*i7+2*i4, i7'=i4
  30: (1 > 0 /\ i7-i4 >= 0 /\ -11+i1 >= 0 /\ -1-i6+i5 >= 0 /\ 11-i1 >= 0 /\ -i6+i5 > 0 /\ -i4 >= 0) /\ i3'=-2*i6+i3+2*i5, i6'=i5, i7'=0
  31: (1 > 0 /\ -11+i1 >= 0 /\ -11+i1 == 0 /\ -1+i4 >= 0 /\ -1-i6+i5 > 0 /\ -1-i7+i4 >= 0 /\ -2-i6+i5 >= 0 /\ 11-i1 >= 0 /\ 11-i1 == 0 /\ -i6+i5 > 0 /\ i6-i5 < 0) /\ i3'=-2*i6+i3-2*i7+2*i4+2*i5-2*i4*(1+i6-i5), i6'=i5, i7'=0
  32: (1 > 0 /\ i7-i4 >= 0 /\ 12-i1 >= 0 /\ -1-i6+i5 > 0 /\ -2-i6+i5 >= 0 /\ -12+i1 >= 0 /\ -i4 >= 0) /\ i3'=-2-2*i6+i3+2*i5, i6'=-1+i5, i7'=0

Dependency graph:
10 -> 12, 10 -> 15, 10 -> 32
12 -> 10, 12 -> 27, 12 -> 29, 12 -> 30, 12 -> 31
15 -> 10, 15 -> 27, 15 -> 29, 15 -> 30, 15 -> 31
28 -> 10, 28 -> 27, 28 -> 29, 28 -> 30, 28 -> 31
29 -> 10, 29 -> 27, 29 -> 30
30 -> 10, 30 -> 27, 30 -> 29, 30 -> 31
31 -> 10, 31 -> 27, 31 -> 29, 31 -> 30
32 -> 12, 32 -> 15

	Trace

	28[(-1+i1 == 0)]
	10[(-11+i1 == 0 /\ i6-i5 < 0)]
	32[(1 > 0 /\ i7-i4 >= 0 /\ 12-i1 >= 0 /\ -1-i6+i5 > 0 /\ -2-i6+i5 >= 0 /\ -12+i1 >= 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{27[T], 29[T], 30[T], 31[T]}
	{12[T]}
	{32[T]}
	
Step with 15

	Trace

	28[(-1+i1 == 0)]
	10[(-11+i1 == 0 /\ i6-i5 < 0)]
	32[(1 > 0 /\ i7-i4 >= 0 /\ 12-i1 >= 0 /\ -1-i6+i5 > 0 /\ -2-i6+i5 >= 0 /\ -12+i1 >= 0 /\ -i4 >= 0)]
	15[(i7-i4 >= 0 /\ -12+i1 == 0)]
	
	Blocked

	{}
	{27[T], 29[T], 30[T], 31[T]}
	{12[T]}
	{12[T], 32[T]}
	{}
	
Covered

	Trace

	28[(-1+i1 == 0)]
	10[(-11+i1 == 0 /\ i6-i5 < 0)]
	32[(1 > 0 /\ i7-i4 >= 0 /\ 12-i1 >= 0 /\ -1-i6+i5 > 0 /\ -2-i6+i5 >= 0 /\ -12+i1 >= 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{27[T], 29[T], 30[T], 31[T]}
	{12[T]}
	{12[T], 15[T], 32[T]}
	
Backtrack

	Trace

	28[(-1+i1 == 0)]
	10[(-11+i1 == 0 /\ i6-i5 < 0)]
	
	Blocked

	{}
	{27[T], 29[T], 30[T], 31[T]}
	{12[T], 32[T]}
	
Step with 15

	Trace

	28[(-1+i1 == 0)]
	10[(-11+i1 == 0 /\ i6-i5 < 0)]
	15[(i7-i4 >= 0 /\ -12+i1 == 0)]
	
	Blocked

	{}
	{27[T], 29[T], 30[T], 31[T]}
	{12[T], 32[T]}
	{}
	
Step with 10

	Trace

	28[(-1+i1 == 0)]
	10[(-11+i1 == 0 /\ i6-i5 < 0)]
	15[(i7-i4 >= 0 /\ -12+i1 == 0)]
	10[(-11+i1 == 0 /\ i6-i5 < 0)]
	
	Blocked

	{}
	{27[T], 29[T], 30[T], 31[T]}
	{12[T], 32[T]}
	{}
	{}
	
Covered

	Trace

	28[(-1+i1 == 0)]
	10[(-11+i1 == 0 /\ i6-i5 < 0)]
	15[(i7-i4 >= 0 /\ -12+i1 == 0)]
	
	Blocked

	{}
	{27[T], 29[T], 30[T], 31[T]}
	{12[T], 32[T]}
	{10[T]}
	
Step with 27

	Trace

	28[(-1+i1 == 0)]
	10[(-11+i1 == 0 /\ i6-i5 < 0)]
	15[(i7-i4 >= 0 /\ -12+i1 == 0)]
	27[(-11+i1 == 0 /\ i6-i5 >= 0)]
	
	Blocked

	{}
	{27[T], 29[T], 30[T], 31[T]}
	{12[T], 32[T]}
	{10[T], 31[T]}
	{}
	
Backtrack

	Trace

	28[(-1+i1 == 0)]
	10[(-11+i1 == 0 /\ i6-i5 < 0)]
	15[(i7-i4 >= 0 /\ -12+i1 == 0)]
	
	Blocked

	{}
	{27[T], 29[T], 30[T], 31[T]}
	{12[T], 32[T]}
	{10[T], 27[T], 31[T]}
	
Step with 30

	Trace

	28[(-1+i1 == 0)]
	10[(-11+i1 == 0 /\ i6-i5 < 0)]
	15[(i7-i4 >= 0 /\ -12+i1 == 0)]
	30[(1 > 0 /\ i7-i4 >= 0 /\ -11+i1 >= 0 /\ -1-i6+i5 >= 0 /\ 11-i1 >= 0 /\ -i6+i5 > 0 /\ -i4 >= 0)]
	
	Blocked

	{}
	{27[T], 29[T], 30[T], 31[T]}
	{12[T], 32[T]}
	{10[T], 27[T], 31[T]}
	{30[T]}
	
Covered

	Trace

	28[(-1+i1 == 0)]
	10[(-11+i1 == 0 /\ i6-i5 < 0)]
	15[(i7-i4 >= 0 /\ -12+i1 == 0)]
	
	Blocked

	{}
	{27[T], 29[T], 30[T], 31[T]}
	{12[T], 32[T]}
	{10[T], 27[T], 30[T], 31[T]}
	
Backtrack

	Trace

	28[(-1+i1 == 0)]
	10[(-11+i1 == 0 /\ i6-i5 < 0)]
	
	Blocked

	{}
	{27[T], 29[T], 30[T], 31[T]}
	{12[T], 15[T], 32[T]}
	
Backtrack

	Trace

	28[(-1+i1 == 0)]
	
	Blocked

	{}
	{10[T], 27[T], 29[T], 30[T], 31[T]}
	
Backtrack

	Trace

	Blocked

	{28[T]}
	
Accept

Poly(n^2)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^2))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃
  Temp_Vars:  
  Locations:  l0, l1, l10, l11, l12, l13, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, X₃)
  t₃: l1(X₀, X₁, X₂, X₃) → l4(X₀, X₁, X₂, X₃)
  t₁₀: l10(X₀, X₁, X₂, X₃) → l11(X₀, X₁, X₂, X₃) :|: 1+X₂ ≤ X₁
  t₁₁: l10(X₀, X₁, X₂, X₃) → l12(X₀, X₁, X₂, X₃) :|: X₁ ≤ X₂
  t₁₂: l11(X₀, X₁, X₂, X₃) → l10(X₀, X₁, X₂, 1+X₃) :|: 1+X₃ ≤ X₀
  t₁₃: l11(X₀, X₁, X₂, X₃) → l10(X₀, X₁, 1+X₂, 1+X₃) :|: 1+X₃ ≤ X₀ ∧ X₀ ≤ X₃
  t₁₄: l11(X₀, X₁, X₂, X₃) → l10(X₀, X₁, X₂, 0) :|: 1+X₃ ≤ X₀ ∧ X₀ ≤ X₃
  t₁₅: l11(X₀, X₁, X₂, X₃) → l10(X₀, X₁, 1+X₂, 0) :|: X₀ ≤ X₃
  t₁₆: l12(X₀, X₁, X₂, X₃) → l13(X₀, X₁, X₂, X₃)
  t₁: l2(X₀, X₁, X₂, X₃) → l3(X₀, X₁, X₂, X₃)
  t₂: l3(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, X₃)
  t₄: l4(X₀, X₁, X₂, X₃) → l5(X₀, X₁, X₂, X₃)
  t₅: l5(X₀, X₁, X₂, X₃) → l6(X₀, X₁, X₂, X₃)
  t₆: l6(X₀, X₁, X₂, X₃) → l7(X₀, X₁, X₂, X₃)
  t₇: l7(X₀, X₁, X₂, X₃) → l8(X₀, X₁, X₂, X₃)
  t₈: l8(X₀, X₁, X₂, X₃) → l9(X₀, X₁, X₂, X₃)
  t₉: l9(X₀, X₁, X₂, X₃) → l10(X₀, X₁, 0, 0)


Preprocessing
  Cut unsatisfiable transition [t₁₃: l11→l10; t₁₄: l11→l10]


  Found invariant 0 ≤ X₃ ∧ 0 ≤ X₂+X₃ ∧ 1 ≤ X₁+X₃ ∧ 1+X₂ ≤ X₁ ∧ 0 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 1 ≤ X₁ for location l11


  Found invariant 0 ≤ X₃ ∧ 0 ≤ X₂+X₃ ∧ 0 ≤ X₂ ∧ X₁ ≤ X₂ for location l12


  Found invariant 0 ≤ X₃ ∧ 0 ≤ X₂+X₃ ∧ 0 ≤ X₂ ∧ X₁ ≤ X₂ for location l13


  Found invariant 0 ≤ X₃ ∧ 0 ≤ X₂+X₃ ∧ 0 ≤ X₂ for location l10


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃
  Temp_Vars:  
  Locations:  l0, l1, l10, l11, l12, l13, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, X₃)
  t₃: l1(X₀, X₁, X₂, X₃) → l4(X₀, X₁, X₂, X₃)
  t₁₀: l10(X₀, X₁, X₂, X₃) → l11(X₀, X₁, X₂, X₃) :|: 1+X₂ ≤ X₁ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ 0 ≤ X₃
  t₁₁: l10(X₀, X₁, X₂, X₃) → l12(X₀, X₁, X₂, X₃) :|: X₁ ≤ X₂ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ 0 ≤ X₃
  t₁₂: l11(X₀, X₁, X₂, X₃) → l10(X₀, X₁, X₂, 1+X₃) :|: 1+X₃ ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ 0 ≤ X₃
  t₁₅: l11(X₀, X₁, X₂, X₃) → l10(X₀, X₁, 1+X₂, 0) :|: X₀ ≤ X₃ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ 0 ≤ X₃
  t₁₆: l12(X₀, X₁, X₂, X₃) → l13(X₀, X₁, X₂, X₃) :|: X₁ ≤ X₂ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ 0 ≤ X₃
  t₁: l2(X₀, X₁, X₂, X₃) → l3(X₀, X₁, X₂, X₃)
  t₂: l3(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, X₃)
  t₄: l4(X₀, X₁, X₂, X₃) → l5(X₀, X₁, X₂, X₃)
  t₅: l5(X₀, X₁, X₂, X₃) → l6(X₀, X₁, X₂, X₃)
  t₆: l6(X₀, X₁, X₂, X₃) → l7(X₀, X₁, X₂, X₃)
  t₇: l7(X₀, X₁, X₂, X₃) → l8(X₀, X₁, X₂, X₃)
  t₈: l8(X₀, X₁, X₂, X₃) → l9(X₀, X₁, X₂, X₃)
  t₉: l9(X₀, X₁, X₂, X₃) → l10(X₀, X₁, 0, 0)


MPRF for transition t₁₅: l11(X₀, X₁, X₂, X₃) → l10(X₀, X₁, 1+X₂, 0) :|: X₀ ≤ X₃ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ 0 ≤ X₃ of depth 1:
  new bound:
    X₁ {O(n)}

  MPRF:
    • l10: [X₁-X₂]
    • l11: [X₁-X₂]




MPRF for transition t₁₂: l11(X₀, X₁, X₂, X₃) → l10(X₀, X₁, X₂, 1+X₃) :|: 1+X₃ ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ 0 ≤ X₃ of depth 1:
  new bound:
    X₀⋅X₁+X₀ {O(n^2)}

  MPRF:
    • l10: [X₀-X₃]
    • l11: [X₀-X₃]




TWN: t₁₂: l11→l10


  cycle: [t₁₂: l11→l10; t₁₀: l10→l11]
  original loop: (1+X₂ ≤ X₁ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ 0 ≤ X₃ ∧ 1+X₃ ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ 0 ≤ X₃,(X₀,X₁,X₂,X₃) -> (X₀,X₁,X₂,1+X₃))
  transformed loop: (1+X₂ ≤ X₁ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ 0 ≤ X₃ ∧ 1+X₃ ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ 0 ≤ X₃,(X₀,X₁,X₂,X₃) -> (X₀,X₁,X₂,1+X₃))
  loop: (1+X₂ ≤ X₁ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ 0 ≤ X₃ ∧ 1+X₃ ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ 0 ≤ X₃,(X₀,X₁,X₂,X₃) -> (X₀,X₁,X₂,1+X₃))
  order: [X₃; X₂; X₁; X₀]
closed-form:  X₃: X₃ + [[n != 0]]⋅n^1
  X₂: X₂
  X₁: X₁
  X₀: X₀

  Termination: true
  Formula: 
    0 ≤ 1 ∧ X₀ ≤ 1+X₃ ∧ 1 ≤ 0 ∧ 1+X₃ ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ 0 ≤ X₃
     ∨ 0 ≤ 1 ∧ 1 ≤ 0 ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 2+X₃ ≤ X₀ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ 0 ≤ X₃
     ∨ 1 ≤ 0 ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ 0 ≤ X₃



Stabilization-Threshold for: 1+X₃ ≤ X₀
  alphas_abs: X₀+X₃
  M: 0
  N: 1
  Bound: 2⋅X₀+2⋅X₃+2 {O(n)}

  original loop: (1+X₂ ≤ X₁ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ 0 ≤ X₃ ∧ 1+X₃ ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ 0 ≤ X₃,(X₀,X₁,X₂,X₃) -> (X₀,X₁,X₂,1+X₃))
  transformed loop: (1+X₂ ≤ X₁ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ 0 ≤ X₃ ∧ 1+X₃ ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ 0 ≤ X₃,(X₀,X₁,X₂,X₃) -> (X₀,X₁,X₂,1+X₃))
  loop: (1+X₂ ≤ X₁ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ 0 ≤ X₃ ∧ 1+X₃ ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ 0 ≤ X₃,(X₀,X₁,X₂,X₃) -> (X₀,X₁,X₂,1+X₃))
  order: [X₃; X₂; X₁; X₀]
closed-form:  X₃: X₃ + [[n != 0]]⋅n^1
  X₂: X₂
  X₁: X₁
  X₀: X₀

  Termination: true
  Formula: 
    0 ≤ 1 ∧ X₀ ≤ 1+X₃ ∧ 1 ≤ 0 ∧ 1+X₃ ≤ X₀ ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ 0 ≤ X₃
     ∨ 0 ≤ 1 ∧ 1 ≤ 0 ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 2+X₃ ≤ X₀ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ 0 ≤ X₃
     ∨ 1 ≤ 0 ∧ 1 ≤ X₁ ∧ 1 ≤ X₁+X₂ ∧ 1+X₂ ≤ X₁ ∧ 1 ≤ X₁+X₃ ∧ 0 ≤ X₂ ∧ 0 ≤ X₂+X₃ ∧ 0 ≤ X₃



Stabilization-Threshold for: 1+X₃ ≤ X₀
  alphas_abs: X₀+X₃
  M: 0
  N: 1
  Bound: 2⋅X₀+2⋅X₃+2 {O(n)}

TWN - Lifting for [10: l10->l11; 12: l11->l10] of 2⋅X₀+2⋅X₃+4 {O(n)}
relevant size-bounds w.r.t. t₉: l9→l10:
X₀: X₀ {O(n)}
X₃: 0 {O(1)}
Runtime-bound of t₉: 1 {O(1)}
Results in: 2⋅X₀+4 {O(n)}
TWN - Lifting for [10: l10->l11; 12: l11->l10] of 2⋅X₀+2⋅X₃+4 {O(n)}
relevant size-bounds w.r.t. t₁₅: l11→l10:
X₀: X₀ {O(n)}
X₃: 0 {O(1)}
Runtime-bound of t₁₅: X₁ {O(n)}
Results in: 2⋅X₀⋅X₁+4⋅X₁ {O(n^2)}
  Found invariant X₃ ≤ 0 ∧ X₃ ≤ X₂ ∧ X₂+X₃ ≤ 0 ∧ 1+X₃ ≤ X₁ ∧ 0 ≤ X₃ ∧ 0 ≤ X₂+X₃ ∧ X₂ ≤ X₃ ∧ 1 ≤ X₁+X₃ ∧ X₂ ≤ 0 ∧ 1+X₂ ≤ X₁ ∧ 0 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 1 ≤ X₁ for location l11_v1


  Found invariant X₃ ≤ 0 ∧ 1+X₃ ≤ X₂ ∧ X₂+X₃ ≤ 1 ∧ 2+X₃ ≤ X₁ ∧ X₀+X₃ ≤ 0 ∧ 0 ≤ X₃ ∧ 1 ≤ X₂+X₃ ∧ X₂ ≤ 1+X₃ ∧ 2 ≤ X₁+X₃ ∧ X₀ ≤ X₃ ∧ X₂ ≤ 1 ∧ 1+X₂ ≤ X₁ ∧ X₀+X₂ ≤ 1 ∧ 1 ≤ X₂ ∧ 3 ≤ X₁+X₂ ∧ 1+X₀ ≤ X₂ ∧ 2 ≤ X₁ ∧ 2+X₀ ≤ X₁ ∧ X₀ ≤ 0 for location l11_v5


  Found invariant X₃ ≤ 0 ∧ X₃ ≤ X₂ ∧ 0 ≤ X₃ ∧ 0 ≤ X₂+X₃ ∧ 0 ≤ X₂ ∧ X₁ ≤ X₂ for location l12


  Found invariant X₃ ≤ 0 ∧ X₃ ≤ X₂ ∧ X₂+X₃ ≤ 0 ∧ 0 ≤ X₃ ∧ 0 ≤ X₂+X₃ ∧ X₂ ≤ X₃ ∧ X₂ ≤ 0 ∧ 0 ≤ X₂ for location l10


  Found invariant X₃ ≤ 0 ∧ 1+X₃ ≤ X₂ ∧ 2+X₃ ≤ X₁ ∧ 1+X₃ ≤ X₀ ∧ 0 ≤ X₃ ∧ 1 ≤ X₂+X₃ ∧ 2 ≤ X₁+X₃ ∧ 1 ≤ X₀+X₃ ∧ 1+X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 3 ≤ X₁+X₂ ∧ 2 ≤ X₀+X₂ ∧ 2 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l11_v3


  Found invariant X₃ ≤ 0 ∧ 1+X₃ ≤ X₂ ∧ 1+X₃ ≤ X₁ ∧ 1+X₃ ≤ X₀ ∧ 0 ≤ X₃ ∧ 1 ≤ X₂+X₃ ∧ 1 ≤ X₁+X₃ ∧ 1 ≤ X₀+X₃ ∧ X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 2 ≤ X₀+X₂ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l10_v3


  Found invariant X₃ ≤ X₀ ∧ 1 ≤ X₃ ∧ 1 ≤ X₂+X₃ ∧ 1+X₂ ≤ X₃ ∧ 2 ≤ X₁+X₃ ∧ 2 ≤ X₀+X₃ ∧ X₂ ≤ 0 ∧ 1+X₂ ≤ X₁ ∧ 1+X₂ ≤ X₀ ∧ 0 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 1 ≤ X₀+X₂ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l10_v2


  Found invariant X₃ ≤ X₀ ∧ 1 ≤ X₃ ∧ 2 ≤ X₂+X₃ ∧ 3 ≤ X₁+X₃ ∧ 2 ≤ X₀+X₃ ∧ 1+X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 3 ≤ X₁+X₂ ∧ 2 ≤ X₀+X₂ ∧ 2 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l11_v4


  Found invariant X₃ ≤ X₀ ∧ 1 ≤ X₃ ∧ 2 ≤ X₂+X₃ ∧ 3 ≤ X₁+X₃ ∧ 2 ≤ X₀+X₃ ∧ 1+X₂ ≤ X₁ ∧ 1 ≤ X₂ ∧ 3 ≤ X₁+X₂ ∧ 2 ≤ X₀+X₂ ∧ 2 ≤ X₁ ∧ 3 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l10_v4


  Found invariant X₃ ≤ X₀ ∧ 1 ≤ X₃ ∧ 1 ≤ X₂+X₃ ∧ 1+X₂ ≤ X₃ ∧ 2 ≤ X₁+X₃ ∧ 2 ≤ X₀+X₃ ∧ X₂ ≤ 0 ∧ 1+X₂ ≤ X₁ ∧ 1+X₂ ≤ X₀ ∧ 0 ≤ X₂ ∧ 1 ≤ X₁+X₂ ∧ 1 ≤ X₀+X₂ ∧ 1 ≤ X₁ ∧ 2 ≤ X₀+X₁ ∧ 1 ≤ X₀ for location l11_v2


  Found invariant X₃ ≤ 0 ∧ 1+X₃ ≤ X₂ ∧ X₂+X₃ ≤ 1 ∧ 1+X₃ ≤ X₁ ∧ X₀+X₃ ≤ 0 ∧ 0 ≤ X₃ ∧ 1 ≤ X₂+X₃ ∧ X₂ ≤ 1+X₃ ∧ 1 ≤ X₁+X₃ ∧ X₀ ≤ X₃ ∧ X₂ ≤ 1 ∧ X₂ ≤ X₁ ∧ X₀+X₂ ≤ 1 ∧ 1 ≤ X₂ ∧ 2 ≤ X₁+X₂ ∧ 1+X₀ ≤ X₂ ∧ 1 ≤ X₁ ∧ 1+X₀ ≤ X₁ ∧ X₀ ≤ 0 for location l10_v1


  Found invariant X₃ ≤ 0 ∧ 2+X₃ ≤ X₂ ∧ 2+X₃ ≤ X₁ ∧ X₀+X₃ ≤ 0 ∧ 0 ≤ X₃ ∧ 2 ≤ X₂+X₃ ∧ 2 ≤ X₁+X₃ ∧ X₀ ≤ X₃ ∧ X₂ ≤ X₁ ∧ 2 ≤ X₂ ∧ 4 ≤ X₁+X₂ ∧ 2+X₀ ≤ X₂ ∧ 2 ≤ X₁ ∧ 2+X₀ ≤ X₁ ∧ X₀ ≤ 0 for location l10_v5


  Found invariant X₃ ≤ 0 ∧ X₃ ≤ X₂ ∧ 0 ≤ X₃ ∧ 0 ≤ X₂+X₃ ∧ 0 ≤ X₂ ∧ X₁ ≤ X₂ for location l13


  Found invariant X₃ ≤ 0 ∧ 2+X₃ ≤ X₂ ∧ 3+X₃ ≤ X₁ ∧ X₀+X₃ ≤ 0 ∧ 0 ≤ X₃ ∧ 2 ≤ X₂+X₃ ∧ 3 ≤ X₁+X₃ ∧ X₀ ≤ X₃ ∧ 1+X₂ ≤ X₁ ∧ 2 ≤ X₂ ∧ 5 ≤ X₁+X₂ ∧ 2+X₀ ≤ X₂ ∧ 3 ≤ X₁ ∧ 3+X₀ ≤ X₁ ∧ X₀ ≤ 0 for location l11_v6


  Cut unsatisfiable transition [t₁₂₇: l11_v5→l10_v4]


All Bounds
Timebounds
  Overall timebound:3⋅X₀⋅X₁+3⋅X₀+5⋅X₁+16 {O(n^2)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: 1 {O(1)}
    t₈: 1 {O(1)}
    t₉: 1 {O(1)}
    t₁₀: 2⋅X₀⋅X₁+2⋅X₀+4⋅X₁+4 {O(n^2)}
    t₁₁: 1 {O(1)}
    t₁₂: X₀⋅X₁+X₀ {O(n^2)}
    t₁₅: X₁ {O(n)}
    t₁₆: 1 {O(1)}


Costbounds
  Overall costbound: 3⋅X₀⋅X₁+3⋅X₀+5⋅X₁+16 {O(n^2)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: 1 {O(1)}
    t₈: 1 {O(1)}
    t₉: 1 {O(1)}
    t₁₀: 2⋅X₀⋅X₁+2⋅X₀+4⋅X₁+4 {O(n^2)}
    t₁₁: 1 {O(1)}
    t₁₂: X₀⋅X₁+X₀ {O(n^2)}
    t₁₅: X₁ {O(n)}
    t₁₆: 1 {O(1)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₀, X₂: X₂ {O(n)}
    t₀, X₃: X₃ {O(n)}
    t₁, X₀: X₀ {O(n)}
    t₁, X₁: X₁ {O(n)}
    t₁, X₂: X₂ {O(n)}
    t₁, X₃: X₃ {O(n)}
    t₂, X₀: X₀ {O(n)}
    t₂, X₁: X₁ {O(n)}
    t₂, X₂: X₂ {O(n)}
    t₂, X₃: X₃ {O(n)}
    t₃, X₀: X₀ {O(n)}
    t₃, X₁: X₁ {O(n)}
    t₃, X₂: X₂ {O(n)}
    t₃, X₃: X₃ {O(n)}
    t₄, X₀: X₀ {O(n)}
    t₄, X₁: X₁ {O(n)}
    t₄, X₂: X₂ {O(n)}
    t₄, X₃: X₃ {O(n)}
    t₅, X₀: X₀ {O(n)}
    t₅, X₁: X₁ {O(n)}
    t₅, X₂: X₂ {O(n)}
    t₅, X₃: X₃ {O(n)}
    t₆, X₀: X₀ {O(n)}
    t₆, X₁: X₁ {O(n)}
    t₆, X₂: X₂ {O(n)}
    t₆, X₃: X₃ {O(n)}
    t₇, X₀: X₀ {O(n)}
    t₇, X₁: X₁ {O(n)}
    t₇, X₂: X₂ {O(n)}
    t₇, X₃: X₃ {O(n)}
    t₈, X₀: X₀ {O(n)}
    t₈, X₁: X₁ {O(n)}
    t₈, X₂: X₂ {O(n)}
    t₈, X₃: X₃ {O(n)}
    t₉, X₀: X₀ {O(n)}
    t₉, X₁: X₁ {O(n)}
    t₉, X₂: 0 {O(1)}
    t₉, X₃: 0 {O(1)}
    t₁₀, X₀: X₀ {O(n)}
    t₁₀, X₁: X₁ {O(n)}
    t₁₀, X₂: X₁ {O(n)}
    t₁₀, X₃: X₀⋅X₁+X₀ {O(n^2)}
    t₁₁, X₀: 2⋅X₀ {O(n)}
    t₁₁, X₁: 2⋅X₁ {O(n)}
    t₁₁, X₂: X₁ {O(n)}
    t₁₁, X₃: 0 {O(1)}
    t₁₂, X₀: X₀ {O(n)}
    t₁₂, X₁: X₁ {O(n)}
    t₁₂, X₂: X₁ {O(n)}
    t₁₂, X₃: X₀⋅X₁+X₀ {O(n^2)}
    t₁₅, X₀: X₀ {O(n)}
    t₁₅, X₁: X₁ {O(n)}
    t₁₅, X₂: X₁ {O(n)}
    t₁₅, X₃: 0 {O(1)}
    t₁₆, X₀: 2⋅X₀ {O(n)}
    t₁₆, X₁: 2⋅X₁ {O(n)}
    t₁₆, X₂: X₁ {O(n)}
    t₁₆, X₃: 0 {O(1)}

