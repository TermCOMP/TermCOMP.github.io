WORST_CASE(?,O(n^2))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. non_recursive  : [eval_realheapsort_stop/9]
1. non_recursive  : [eval_realheapsort_bb16_in/9]
2. recursive  : [eval_realheapsort_bb2_in/3,eval_realheapsort_bb3_in/3,eval_realheapsort_bb4_in/3]
3. recursive  : [eval_realheapsort_28/8,eval_realheapsort_29/8,eval_realheapsort__critedge_in/8,eval_realheapsort_bb1_in/8,eval_realheapsort_bb2_in_loop_cont/9]
4. recursive  : [eval_realheapsort_bb10_in/7,eval_realheapsort_bb11_in/7,eval_realheapsort_bb12_in/7,eval_realheapsort_bb13_in/7,eval_realheapsort_bb14_in/7,eval_realheapsort_bb8_in/7,eval_realheapsort_bb9_in/7]
5. recursive  : [eval_realheapsort_85/10,eval_realheapsort_86/10,eval_realheapsort_bb15_in/10,eval_realheapsort_bb6_in/10,eval_realheapsort_bb7_in/10,eval_realheapsort_bb8_in_loop_cont/11]
6. non_recursive  : [exit_location/1]
7. non_recursive  : [eval_realheapsort_bb6_in_loop_cont/10]
8. non_recursive  : [eval_realheapsort_39/9]
9. non_recursive  : [eval_realheapsort_38/9]
10. non_recursive  : [eval_realheapsort_37/9]
11. non_recursive  : [eval_realheapsort_36/9]
12. non_recursive  : [eval_realheapsort_35/9]
13. non_recursive  : [eval_realheapsort_34/9]
14. non_recursive  : [eval_realheapsort_33/9]
15. non_recursive  : [eval_realheapsort_32/9]
16. non_recursive  : [eval_realheapsort_31/9]
17. non_recursive  : [eval_realheapsort_30/9]
18. non_recursive  : [eval_realheapsort_bb5_in/9]
19. non_recursive  : [eval_realheapsort_bb1_in_loop_cont/10]
20. non_recursive  : [eval_realheapsort_2/9]
21. non_recursive  : [eval_realheapsort_1/9]
22. non_recursive  : [eval_realheapsort_0/9]
23. non_recursive  : [eval_realheapsort_bb0_in/9]
24. non_recursive  : [eval_realheapsort_start/9]

#### Obtained direct recursion through partial evaluation 
0. SCC is completely evaluated into other SCCs
1. SCC is completely evaluated into other SCCs
2. SCC is partially evaluated into eval_realheapsort_bb2_in/3
3. SCC is partially evaluated into eval_realheapsort_bb1_in/8
4. SCC is partially evaluated into eval_realheapsort_bb8_in/7
5. SCC is partially evaluated into eval_realheapsort_bb6_in/10
6. SCC is completely evaluated into other SCCs
7. SCC is partially evaluated into eval_realheapsort_bb6_in_loop_cont/10
8. SCC is partially evaluated into eval_realheapsort_39/9
9. SCC is completely evaluated into other SCCs
10. SCC is completely evaluated into other SCCs
11. SCC is completely evaluated into other SCCs
12. SCC is completely evaluated into other SCCs
13. SCC is completely evaluated into other SCCs
14. SCC is completely evaluated into other SCCs
15. SCC is completely evaluated into other SCCs
16. SCC is completely evaluated into other SCCs
17. SCC is completely evaluated into other SCCs
18. SCC is completely evaluated into other SCCs
19. SCC is partially evaluated into eval_realheapsort_bb1_in_loop_cont/10
20. SCC is partially evaluated into eval_realheapsort_2/9
21. SCC is completely evaluated into other SCCs
22. SCC is completely evaluated into other SCCs
23. SCC is completely evaluated into other SCCs
24. SCC is partially evaluated into eval_realheapsort_start/9

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval_realheapsort_bb2_in/3 
* CE 13 is refined into CE [29] 
* CE 10 is refined into CE [30] 
* CE 12 is refined into CE [31] 
* CE 11 is refined into CE [32] 


### Cost equations --> "Loop" of eval_realheapsort_bb2_in/3 
* CEs [32] --> Loop 29 
* CEs [29] --> Loop 30 
* CEs [30] --> Loop 31 
* CEs [31] --> Loop 32 

### Ranking functions of CR eval_realheapsort_bb2_in(V_j_0,B,C) 
* RF of phase [29]: [V_j_0]

#### Partial ranking functions of CR eval_realheapsort_bb2_in(V_j_0,B,C) 
* Partial RF of phase [29]:
  - RF of loop [29:1]:
    V_j_0


### Specialization of cost equations eval_realheapsort_bb1_in/8 
* CE 6 is refined into CE [33] 
* CE 4 is refined into CE [34,35] 
* CE 7 is refined into CE [36] 
* CE 5 is refined into CE [37,38,39] 


### Cost equations --> "Loop" of eval_realheapsort_bb1_in/8 
* CEs [39] --> Loop 33 
* CEs [38] --> Loop 34 
* CEs [37] --> Loop 35 
* CEs [33] --> Loop 36 
* CEs [34,35] --> Loop 37 
* CEs [36] --> Loop 38 

### Ranking functions of CR eval_realheapsort_bb1_in(V_33,V_N,V_j_0,V_k_0,B,C,D,E) 
* RF of phase [33,34,35]: [V_N-V_k_0]

#### Partial ranking functions of CR eval_realheapsort_bb1_in(V_33,V_N,V_j_0,V_k_0,B,C,D,E) 
* Partial RF of phase [33,34,35]:
  - RF of loop [33:1,34:1,35:1]:
    V_N-V_k_0


### Specialization of cost equations eval_realheapsort_bb8_in/7 
* CE 27 is refined into CE [40] 
* CE 28 is refined into CE [41] 
* CE 26 is refined into CE [42] 
* CE 23 is refined into CE [43] 
* CE 24 is refined into CE [44] 
* CE 22 is refined into CE [45] 
* CE 25 is refined into CE [46] 
* CE 21 is refined into CE [47] 


### Cost equations --> "Loop" of eval_realheapsort_bb8_in/7 
* CEs [42] --> Loop 39 
* CEs [43] --> Loop 40 
* CEs [44] --> Loop 41 
* CEs [45] --> Loop 42 
* CEs [46] --> Loop 43 
* CEs [47] --> Loop 44 
* CEs [40] --> Loop 45 
* CEs [41] --> Loop 46 

### Ranking functions of CR eval_realheapsort_bb8_in(V_N,V_j_1,V_k_1,V_m_0,B,C,D) 
* RF of phase [42,44]: [V_N/2-V_j_1-3/2,V_N/2-V_j_1-V_k_1/2-3/2]

#### Partial ranking functions of CR eval_realheapsort_bb8_in(V_N,V_j_1,V_k_1,V_m_0,B,C,D) 
* Partial RF of phase [42,44]:
  - RF of loop [42:1,44:1]:
    V_N/2-V_j_1-3/2
    V_N/2-V_j_1-V_k_1/2-3/2


### Specialization of cost equations eval_realheapsort_bb6_in/10 
* CE 17 is refined into CE [48] 
* CE 15 is refined into CE [49,50,51,52,53] 
* CE 18 is refined into CE [54] 
* CE 16 is refined into CE [55,56,57,58,59,60,61,62,63,64] 


### Cost equations --> "Loop" of eval_realheapsort_bb6_in/10 
* CEs [64] --> Loop 47 
* CEs [60] --> Loop 48 
* CEs [63] --> Loop 49 
* CEs [62] --> Loop 50 
* CEs [61] --> Loop 51 
* CEs [58] --> Loop 52 
* CEs [59] --> Loop 53 
* CEs [56] --> Loop 54 
* CEs [55] --> Loop 55 
* CEs [57] --> Loop 56 
* CEs [48] --> Loop 57 
* CEs [52] --> Loop 58 
* CEs [51] --> Loop 59 
* CEs [53] --> Loop 60 
* CEs [50] --> Loop 61 
* CEs [54] --> Loop 62 
* CEs [49] --> Loop 63 

### Ranking functions of CR eval_realheapsort_bb6_in(V_90,V_N,V_j_1,V_k_1,V_m_0,B,C,D,E,F) 
* RF of phase [47,48,49,50,51,52,53]: [V_N-V_k_1-3]

#### Partial ranking functions of CR eval_realheapsort_bb6_in(V_90,V_N,V_j_1,V_k_1,V_m_0,B,C,D,E,F) 
* Partial RF of phase [47,48,49,50,51,52,53]:
  - RF of loop [47:1,48:1]:
    V_N-V_k_1-4
  - RF of loop [49:1,52:1,53:1]:
    V_N-V_k_1-3
  - RF of loop [50:1,51:1]:
    V_N-V_k_1-5


### Specialization of cost equations eval_realheapsort_bb6_in_loop_cont/10 
* CE 19 is refined into CE [65] 
* CE 20 is refined into CE [66] 


### Cost equations --> "Loop" of eval_realheapsort_bb6_in_loop_cont/10 
* CEs [65] --> Loop 64 
* CEs [66] --> Loop 65 

### Ranking functions of CR eval_realheapsort_bb6_in_loop_cont(A,B,C,D,E,F,G,H,I,J) 

#### Partial ranking functions of CR eval_realheapsort_bb6_in_loop_cont(A,B,C,D,E,F,G,H,I,J) 


### Specialization of cost equations eval_realheapsort_39/9 
* CE 14 is refined into CE [67,68,69,70,71,72,73,74,75,76] 


### Cost equations --> "Loop" of eval_realheapsort_39/9 
* CEs [74] --> Loop 66 
* CEs [73] --> Loop 67 
* CEs [72] --> Loop 68 
* CEs [71,76] --> Loop 69 
* CEs [69,70] --> Loop 70 
* CEs [67,68,75] --> Loop 71 

### Ranking functions of CR eval_realheapsort_39(V_33,V_90,V_N,V_j_0,V_j_1,V_k_0,V_k_1,V_m_0,B) 

#### Partial ranking functions of CR eval_realheapsort_39(V_33,V_90,V_N,V_j_0,V_j_1,V_k_0,V_k_1,V_m_0,B) 


### Specialization of cost equations eval_realheapsort_bb1_in_loop_cont/10 
* CE 8 is refined into CE [77,78,79,80,81,82] 
* CE 9 is refined into CE [83] 


### Cost equations --> "Loop" of eval_realheapsort_bb1_in_loop_cont/10 
* CEs [82] --> Loop 72 
* CEs [81] --> Loop 73 
* CEs [80] --> Loop 74 
* CEs [79] --> Loop 75 
* CEs [78] --> Loop 76 
* CEs [77] --> Loop 77 
* CEs [83] --> Loop 78 

### Ranking functions of CR eval_realheapsort_bb1_in_loop_cont(A,B,C,D,E,F,G,H,I,J) 

#### Partial ranking functions of CR eval_realheapsort_bb1_in_loop_cont(A,B,C,D,E,F,G,H,I,J) 


### Specialization of cost equations eval_realheapsort_2/9 
* CE 3 is refined into CE [84,85,86,87,88,89,90,91,92] 
* CE 2 is refined into CE [93] 


### Cost equations --> "Loop" of eval_realheapsort_2/9 
* CEs [92] --> Loop 79 
* CEs [91] --> Loop 80 
* CEs [90] --> Loop 81 
* CEs [89] --> Loop 82 
* CEs [84,85,86,88] --> Loop 83 
* CEs [93] --> Loop 84 
* CEs [87] --> Loop 85 

### Ranking functions of CR eval_realheapsort_2(V_33,V_90,V_N,V_j_0,V_j_1,V_k_0,V_k_1,V_m_0,B) 

#### Partial ranking functions of CR eval_realheapsort_2(V_33,V_90,V_N,V_j_0,V_j_1,V_k_0,V_k_1,V_m_0,B) 


### Specialization of cost equations eval_realheapsort_start/9 
* CE 1 is refined into CE [94,95,96,97,98,99,100] 


### Cost equations --> "Loop" of eval_realheapsort_start/9 
* CEs [100] --> Loop 86 
* CEs [99] --> Loop 87 
* CEs [98] --> Loop 88 
* CEs [97] --> Loop 89 
* CEs [96] --> Loop 90 
* CEs [95] --> Loop 91 
* CEs [94] --> Loop 92 

### Ranking functions of CR eval_realheapsort_start(V_33,V_90,V_N,V_j_0,V_j_1,V_k_0,V_k_1,V_m_0,B) 

#### Partial ranking functions of CR eval_realheapsort_start(V_33,V_90,V_N,V_j_0,V_j_1,V_k_0,V_k_1,V_m_0,B) 


Computing Bounds
=====================================

#### Cost of chains of eval_realheapsort_bb2_in(V_j_0,B,C):
* Chain [[29],32]: 1*it(29)+0
  Such that:it(29) =< V_j_0

  with precondition: [B=2,0>=C,V_j_0>=1,2*C+1>=0] 

* Chain [[29],31]: 1*it(29)+0
  Such that:it(29) =< V_j_0-C

  with precondition: [B=2,C>=1,V_j_0>=2*C+1] 

* Chain [[29],30]: 1*it(29)+0
  Such that:it(29) =< V_j_0

  with precondition: [B=3,V_j_0>=1] 

* Chain [31]: 0
  with precondition: [B=2,V_j_0=C,V_j_0>=1] 

* Chain [30]: 0
  with precondition: [B=3,2*V_j_0+1>=0] 


#### Cost of chains of eval_realheapsort_bb1_in(V_33,V_N,V_j_0,V_k_0,B,C,D,E):
* Chain [[33,34,35],38]: 3*it(33)+1*s(5)+1*s(6)+0
  Such that:aux(1) =< V_N
aux(5) =< V_N-V_k_0
it(33) =< aux(5)
aux(2) =< aux(1)+1
s(5) =< it(33)*aux(1)
s(6) =< it(33)*aux(2)

  with precondition: [B=3,V_N>=3,V_k_0>=1,V_N>=V_k_0+1] 

* Chain [[33,34,35],37]: 3*it(33)+1*s(5)+1*s(6)+1*s(7)+0
  Such that:aux(6) =< V_N
aux(7) =< V_N-V_k_0
s(7) =< aux(6)
it(33) =< aux(7)
aux(2) =< aux(6)+1
s(5) =< it(33)*aux(6)
s(6) =< it(33)*aux(2)

  with precondition: [B=3,V_k_0>=1,V_N>=V_k_0+2] 

* Chain [[33,34,35],36]: 3*it(33)+1*s(5)+1*s(6)+0
  Such that:aux(1) =< C
aux(8) =< -V_k_0+C
it(33) =< aux(8)
aux(2) =< aux(1)+1
s(5) =< it(33)*aux(1)
s(6) =< it(33)*aux(2)

  with precondition: [B=5,V_N=C,V_N=E,V_N>=3,V_k_0>=1,2*D+1>=0,V_N>=V_k_0+1,V_N>=D+1] 

* Chain [38]: 0
  with precondition: [B=3,V_N>=3,V_k_0>=1] 

* Chain [37]: 1*s(7)+0
  Such that:s(7) =< V_k_0

  with precondition: [B=3,V_N>=3,V_k_0>=1,V_N>=V_k_0+1] 


#### Cost of chains of eval_realheapsort_bb8_in(V_N,V_j_1,V_k_1,V_m_0,B,C,D):
* Chain [[42,44],46]: 2*it(42)+0
  Such that:aux(9) =< V_N/2-V_j_1
aux(10) =< V_N/2-V_j_1-V_k_1/2
aux(13) =< V_N-V_j_1-V_k_1
it(42) =< aux(9)
it(42) =< aux(10)
it(42) =< aux(13)

  with precondition: [B=3,V_j_1>=0,V_k_1>=0,V_N>=2*V_j_1+V_k_1+4] 

* Chain [[42,44],45]: 2*it(42)+0
  Such that:aux(9) =< V_N/2-V_j_1
aux(10) =< V_N/2-V_j_1-V_k_1/2
aux(14) =< -V_j_1+C
it(42) =< aux(9)
it(42) =< aux(10)
it(42) =< aux(14)

  with precondition: [B=4,C=D,V_j_1>=0,V_k_1>=0,C>=2*V_j_1+1,V_N>=2*V_j_1+V_k_1+4,V_k_1+2*C+2>=V_N,V_N>=V_k_1+C+2] 

* Chain [[42,44],43,46]: 2*it(42)+1
  Such that:aux(9) =< V_N/2-V_j_1
aux(15) =< V_N/2-V_j_1-V_k_1/2
it(42) =< aux(9)
it(42) =< aux(15)

  with precondition: [B=3,V_j_1>=0,V_k_1>=0,V_N>=4*V_j_1+V_k_1+5] 

* Chain [[42,44],43,45]: 2*it(42)+1
  Such that:aux(9) =< -V_j_1+V_k_1/2+C/2+1
aux(10) =< -V_j_1+C/2+1
aux(16) =< -V_j_1+C/2
it(42) =< aux(9)
it(42) =< aux(10)
it(42) =< aux(16)

  with precondition: [B=4,V_N=V_k_1+C+2,V_N=V_k_1+D+2,V_j_1>=0,V_k_1>=0,V_N>=4*V_j_1+V_k_1+5] 

* Chain [[42,44],41,46]: 2*it(42)+1
  Such that:aux(9) =< V_N/2-V_j_1
aux(17) =< V_N/2-V_j_1-V_k_1/2
it(42) =< aux(9)
it(42) =< aux(17)

  with precondition: [B=3,V_j_1>=0,V_k_1>=0,V_N>=4*V_j_1+V_k_1+6] 

* Chain [[42,44],41,45]: 2*it(42)+1
  Such that:aux(10) =< -V_j_1-V_k_1/2+C/2
aux(9) =< -V_j_1+C/2
aux(18) =< -V_j_1+D/2
it(42) =< aux(9)
it(42) =< aux(10)
it(42) =< aux(18)

  with precondition: [B=4,V_N=C,V_j_1>=0,V_k_1>=0,D>=4*V_j_1+4,V_N>=V_k_1+D+2] 

* Chain [[42,44],40,46]: 2*it(42)+1
  Such that:aux(9) =< V_N/2-V_j_1
aux(19) =< V_N/2-V_j_1-V_k_1/2
it(42) =< aux(9)
it(42) =< aux(19)

  with precondition: [B=3,V_j_1>=0,V_k_1>=0,V_N>=4*V_j_1+V_k_1+6] 

* Chain [[42,44],40,45]: 2*it(42)+1
  Such that:aux(10) =< -V_j_1-V_k_1/2+C/2
aux(9) =< -V_j_1+C/2
aux(20) =< -V_j_1+D/2
it(42) =< aux(9)
it(42) =< aux(10)
it(42) =< aux(20)

  with precondition: [B=4,V_N=C,V_j_1>=0,V_k_1>=0,D>=4*V_j_1+3,V_N>=V_k_1+D+3] 

* Chain [[42,44],39,46]: 2*it(42)+1
  Such that:aux(9) =< V_N/2-V_j_1
aux(21) =< V_N/2-V_j_1-V_k_1/2
it(42) =< aux(9)
it(42) =< aux(21)

  with precondition: [B=3,V_j_1>=0,V_k_1>=0,V_N>=4*V_j_1+V_k_1+5] 

* Chain [[42,44],39,45]: 2*it(42)+1
  Such that:aux(9) =< -V_j_1+C/2
aux(10) =< -V_j_1+D/2+1
aux(22) =< -V_j_1+D/2
it(42) =< aux(9)
it(42) =< aux(10)
it(42) =< aux(22)

  with precondition: [B=4,V_N=C,V_N=V_k_1+D+2,V_j_1>=0,V_k_1>=0,V_N>=4*V_j_1+V_k_1+5] 

* Chain [46]: 0
  with precondition: [B=3,V_N>=3,V_j_1>=0,V_k_1>=0,V_N>=V_j_1,V_N>=V_k_1+2,4*V_N>=3*V_k_1+V_j_1+9] 

* Chain [45]: 0
  with precondition: [B=4,D=V_m_0,V_j_1=C,V_N>=3,V_k_1>=0,V_N>=V_j_1,V_N>=V_k_1+2,4*V_N>=3*V_k_1+V_j_1+9,V_k_1+2*V_j_1+2>=V_N] 

* Chain [43,46]: 1
  with precondition: [B=3,V_k_1+2*V_j_1+3=V_N,V_k_1>=0,V_N>=V_k_1+3] 

* Chain [43,45]: 1
  with precondition: [B=4,C=2*V_j_1+1,C=D,V_k_1+C+2=V_N,C>=1,V_N>=C+2] 

* Chain [41,46]: 1
  with precondition: [B=3,V_j_1>=0,V_k_1>=0,V_N>=2*V_j_1+V_k_1+4] 

* Chain [41,45]: 1
  with precondition: [B=4,V_N=C,2*V_j_1+2=D,V_j_1>=0,V_k_1>=0,V_N>=2*V_j_1+V_k_1+4] 

* Chain [40,46]: 1
  with precondition: [B=3,V_j_1>=0,V_k_1>=0,V_N>=2*V_j_1+V_k_1+4] 

* Chain [40,45]: 1
  with precondition: [B=4,V_N=C,2*V_j_1+1=D,V_j_1>=0,V_k_1>=0,V_N>=2*V_j_1+V_k_1+4] 

* Chain [39,46]: 1
  with precondition: [B=3,V_k_1+2*V_j_1+3=V_N,V_k_1>=0,V_N>=V_k_1+3] 

* Chain [39,45]: 1
  with precondition: [B=4,D=2*V_j_1+1,V_N=C,V_N=V_k_1+D+2,D>=1,V_N>=D+2] 


#### Cost of chains of eval_realheapsort_bb6_in(V_90,V_N,V_j_1,V_k_1,V_m_0,B,C,D,E,F):
* Chain [[47,48,49,50,51,52,53],63]: 13*it(47)+2*s(69)+2*s(72)+2*s(75)+2*s(79)+2*s(83)+1
  Such that:aux(30) =< V_N/2
aux(29) =< V_N/2-V_k_1/2
aux(44) =< V_N-V_k_1
it(47) =< aux(44)
aux(41) =< aux(29)-3/2
aux(32) =< aux(30)
aux(31) =< aux(29)
aux(38) =< aux(29)-1
aux(35) =< aux(29)*2-2
s(71) =< it(47)*aux(30)
s(70) =< it(47)*aux(29)
s(84) =< it(47)*aux(41)
s(74) =< it(47)*aux(32)
s(73) =< it(47)*aux(31)
s(80) =< it(47)*aux(38)
s(76) =< it(47)*aux(35)
s(83) =< s(74)
s(83) =< s(73)
s(83) =< s(84)
s(79) =< s(74)
s(79) =< s(73)
s(79) =< s(80)
s(75) =< s(74)
s(75) =< s(73)
s(75) =< s(76)
s(72) =< s(74)
s(72) =< s(73)
s(69) =< s(71)
s(69) =< s(70)

  with precondition: [B=3,V_k_1>=0,V_N>=V_k_1+4] 

* Chain [[47,48,49,50,51,52,53],62]: 13*it(47)+2*s(69)+2*s(72)+2*s(75)+2*s(79)+2*s(83)+0
  Such that:aux(30) =< V_N/2
aux(29) =< V_N/2-V_k_1/2
aux(45) =< V_N-V_k_1
it(47) =< aux(45)
aux(41) =< aux(29)-3/2
aux(32) =< aux(30)
aux(31) =< aux(29)
aux(38) =< aux(29)-1
aux(35) =< aux(29)*2-2
s(71) =< it(47)*aux(30)
s(70) =< it(47)*aux(29)
s(84) =< it(47)*aux(41)
s(74) =< it(47)*aux(32)
s(73) =< it(47)*aux(31)
s(80) =< it(47)*aux(38)
s(76) =< it(47)*aux(35)
s(83) =< s(74)
s(83) =< s(73)
s(83) =< s(84)
s(79) =< s(74)
s(79) =< s(73)
s(79) =< s(80)
s(75) =< s(74)
s(75) =< s(73)
s(75) =< s(76)
s(72) =< s(74)
s(72) =< s(73)
s(69) =< s(71)
s(69) =< s(70)

  with precondition: [B=3,V_k_1>=0,V_N>=V_k_1+4] 

* Chain [[47,48,49,50,51,52,53],61]: 13*it(47)+2*s(69)+2*s(72)+2*s(75)+2*s(79)+2*s(83)+0
  Such that:aux(30) =< V_N/2
aux(29) =< V_N/2-V_k_1/2
aux(46) =< V_N-V_k_1
it(47) =< aux(46)
aux(41) =< aux(29)-3/2
aux(32) =< aux(30)
aux(31) =< aux(29)
aux(38) =< aux(29)-1
aux(35) =< aux(29)*2-2
s(71) =< it(47)*aux(30)
s(70) =< it(47)*aux(29)
s(84) =< it(47)*aux(41)
s(74) =< it(47)*aux(32)
s(73) =< it(47)*aux(31)
s(80) =< it(47)*aux(38)
s(76) =< it(47)*aux(35)
s(83) =< s(74)
s(83) =< s(73)
s(83) =< s(84)
s(79) =< s(74)
s(79) =< s(73)
s(79) =< s(80)
s(75) =< s(74)
s(75) =< s(73)
s(75) =< s(76)
s(72) =< s(74)
s(72) =< s(73)
s(69) =< s(71)
s(69) =< s(70)

  with precondition: [B=3,V_k_1>=0,V_N>=V_k_1+4] 

* Chain [[47,48,49,50,51,52,53],60]: 13*it(47)+2*s(69)+2*s(72)+2*s(75)+2*s(79)+2*s(83)+2*s(90)+1
  Such that:aux(47) =< V_N-V_k_1
aux(48) =< V_N/2
aux(49) =< V_N/2-V_k_1/2
s(89) =< aux(47)
s(89) =< aux(49)
s(90) =< aux(48)
s(90) =< s(89)
s(90) =< aux(47)
it(47) =< aux(47)
aux(41) =< aux(49)-3/2
aux(32) =< aux(48)
aux(31) =< aux(49)
aux(38) =< aux(49)-1
aux(35) =< aux(49)*2-2
s(71) =< it(47)*aux(48)
s(70) =< it(47)*aux(49)
s(84) =< it(47)*aux(41)
s(74) =< it(47)*aux(32)
s(73) =< it(47)*aux(31)
s(80) =< it(47)*aux(38)
s(76) =< it(47)*aux(35)
s(83) =< s(74)
s(83) =< s(73)
s(83) =< s(84)
s(79) =< s(74)
s(79) =< s(73)
s(79) =< s(80)
s(75) =< s(74)
s(75) =< s(73)
s(75) =< s(76)
s(72) =< s(74)
s(72) =< s(73)
s(69) =< s(71)
s(69) =< s(70)

  with precondition: [B=3,V_k_1>=0,V_N>=V_k_1+5] 

* Chain [[47,48,49,50,51,52,53],59]: 13*it(47)+2*s(69)+2*s(72)+2*s(75)+2*s(79)+2*s(83)+4*s(93)+1
  Such that:aux(50) =< V_N-V_k_1
aux(51) =< V_N/2
aux(52) =< V_N/2-V_k_1/2
s(92) =< aux(50)
s(92) =< aux(52)
s(93) =< aux(51)
s(93) =< s(92)
it(47) =< aux(50)
aux(41) =< aux(52)-3/2
aux(32) =< aux(51)
aux(31) =< aux(52)
aux(38) =< aux(52)-1
aux(35) =< aux(52)*2-2
s(71) =< it(47)*aux(51)
s(70) =< it(47)*aux(52)
s(84) =< it(47)*aux(41)
s(74) =< it(47)*aux(32)
s(73) =< it(47)*aux(31)
s(80) =< it(47)*aux(38)
s(76) =< it(47)*aux(35)
s(83) =< s(74)
s(83) =< s(73)
s(83) =< s(84)
s(79) =< s(74)
s(79) =< s(73)
s(79) =< s(80)
s(75) =< s(74)
s(75) =< s(73)
s(75) =< s(76)
s(72) =< s(74)
s(72) =< s(73)
s(69) =< s(71)
s(69) =< s(70)

  with precondition: [B=3,V_k_1>=0,V_N>=V_k_1+6] 

* Chain [[47,48,49,50,51,52,53],58]: 13*it(47)+2*s(69)+2*s(72)+2*s(75)+2*s(79)+2*s(83)+4*s(96)+1
  Such that:aux(53) =< V_N-V_k_1
aux(54) =< V_N/2
aux(55) =< V_N/2-V_k_1/2
s(95) =< aux(53)
s(95) =< aux(55)
s(96) =< aux(54)
s(96) =< s(95)
it(47) =< aux(53)
aux(41) =< aux(55)-3/2
aux(32) =< aux(54)
aux(31) =< aux(55)
aux(38) =< aux(55)-1
aux(35) =< aux(55)*2-2
s(71) =< it(47)*aux(54)
s(70) =< it(47)*aux(55)
s(84) =< it(47)*aux(41)
s(74) =< it(47)*aux(32)
s(73) =< it(47)*aux(31)
s(80) =< it(47)*aux(38)
s(76) =< it(47)*aux(35)
s(83) =< s(74)
s(83) =< s(73)
s(83) =< s(84)
s(79) =< s(74)
s(79) =< s(73)
s(79) =< s(80)
s(75) =< s(74)
s(75) =< s(73)
s(75) =< s(76)
s(72) =< s(74)
s(72) =< s(73)
s(69) =< s(71)
s(69) =< s(70)

  with precondition: [B=3,V_k_1>=0,V_N>=V_k_1+7] 

* Chain [[47,48,49,50,51,52,53],55,62]: 13*it(47)+2*s(69)+2*s(72)+2*s(75)+2*s(79)+2*s(83)+2
  Such that:aux(30) =< V_N/2
aux(29) =< V_N/2-V_k_1/2
aux(56) =< V_N-V_k_1
it(47) =< aux(56)
aux(41) =< aux(29)-3/2
aux(32) =< aux(30)
aux(31) =< aux(29)
aux(38) =< aux(29)-1
aux(35) =< aux(29)*2-2
s(71) =< it(47)*aux(30)
s(70) =< it(47)*aux(29)
s(84) =< it(47)*aux(41)
s(74) =< it(47)*aux(32)
s(73) =< it(47)*aux(31)
s(80) =< it(47)*aux(38)
s(76) =< it(47)*aux(35)
s(83) =< s(74)
s(83) =< s(73)
s(83) =< s(84)
s(79) =< s(74)
s(79) =< s(73)
s(79) =< s(80)
s(75) =< s(74)
s(75) =< s(73)
s(75) =< s(76)
s(72) =< s(74)
s(72) =< s(73)
s(69) =< s(71)
s(69) =< s(70)

  with precondition: [B=3,V_k_1>=0,V_N>=V_k_1+4] 

* Chain [[47,48,49,50,51,52,53],55,61]: 13*it(47)+2*s(69)+2*s(72)+2*s(75)+2*s(79)+2*s(83)+2
  Such that:aux(30) =< V_N/2
aux(29) =< V_N/2-V_k_1/2
aux(57) =< V_N-V_k_1
it(47) =< aux(57)
aux(41) =< aux(29)-3/2
aux(32) =< aux(30)
aux(31) =< aux(29)
aux(38) =< aux(29)-1
aux(35) =< aux(29)*2-2
s(71) =< it(47)*aux(30)
s(70) =< it(47)*aux(29)
s(84) =< it(47)*aux(41)
s(74) =< it(47)*aux(32)
s(73) =< it(47)*aux(31)
s(80) =< it(47)*aux(38)
s(76) =< it(47)*aux(35)
s(83) =< s(74)
s(83) =< s(73)
s(83) =< s(84)
s(79) =< s(74)
s(79) =< s(73)
s(79) =< s(80)
s(75) =< s(74)
s(75) =< s(73)
s(75) =< s(76)
s(72) =< s(74)
s(72) =< s(73)
s(69) =< s(71)
s(69) =< s(70)

  with precondition: [B=3,V_k_1>=0,V_N>=V_k_1+4] 

* Chain [[47,48,49,50,51,52,53],55,56,62]: 13*it(47)+2*s(69)+2*s(72)+2*s(75)+2*s(79)+2*s(83)+3
  Such that:aux(30) =< V_N/2
aux(29) =< V_N/2-V_k_1/2
aux(58) =< V_N-V_k_1
it(47) =< aux(58)
aux(41) =< aux(29)-3/2
aux(32) =< aux(30)
aux(31) =< aux(29)
aux(38) =< aux(29)-1
aux(35) =< aux(29)*2-2
s(71) =< it(47)*aux(30)
s(70) =< it(47)*aux(29)
s(84) =< it(47)*aux(41)
s(74) =< it(47)*aux(32)
s(73) =< it(47)*aux(31)
s(80) =< it(47)*aux(38)
s(76) =< it(47)*aux(35)
s(83) =< s(74)
s(83) =< s(73)
s(83) =< s(84)
s(79) =< s(74)
s(79) =< s(73)
s(79) =< s(80)
s(75) =< s(74)
s(75) =< s(73)
s(75) =< s(76)
s(72) =< s(74)
s(72) =< s(73)
s(69) =< s(71)
s(69) =< s(70)

  with precondition: [B=3,V_k_1>=0,V_N>=V_k_1+4] 

* Chain [[47,48,49,50,51,52,53],55,56,57]: 13*it(47)+2*s(69)+2*s(72)+2*s(75)+2*s(79)+2*s(83)+3
  Such that:aux(43) =< -V_k_1+C
aux(42) =< -V_k_1+C+1
aux(29) =< -V_k_1/2+C/2+1/2
aux(30) =< C/2+1/2
it(47) =< aux(42)
it(47) =< aux(43)
aux(41) =< aux(29)-3/2
aux(32) =< aux(30)
aux(31) =< aux(29)
aux(38) =< aux(29)-1
aux(35) =< aux(29)*2-2
s(71) =< it(47)*aux(30)
s(70) =< it(47)*aux(29)
s(84) =< it(47)*aux(41)
s(74) =< it(47)*aux(32)
s(73) =< it(47)*aux(31)
s(80) =< it(47)*aux(38)
s(76) =< it(47)*aux(35)
s(83) =< s(74)
s(83) =< s(73)
s(83) =< s(84)
s(79) =< s(74)
s(79) =< s(73)
s(79) =< s(80)
s(75) =< s(74)
s(75) =< s(73)
s(75) =< s(76)
s(72) =< s(74)
s(72) =< s(73)
s(69) =< s(71)
s(69) =< s(70)

  with precondition: [B=6,D=0,F=1,V_N=C+1,V_N=E+1,V_k_1>=0,V_N>=V_k_1+4] 

* Chain [[47,48,49,50,51,52,53],54,62]: 13*it(47)+2*s(69)+2*s(72)+2*s(75)+2*s(79)+2*s(83)+2
  Such that:aux(30) =< V_N/2
aux(29) =< V_N/2-V_k_1/2
aux(59) =< V_N-V_k_1
it(47) =< aux(59)
aux(41) =< aux(29)-3/2
aux(32) =< aux(30)
aux(31) =< aux(29)
aux(38) =< aux(29)-1
aux(35) =< aux(29)*2-2
s(71) =< it(47)*aux(30)
s(70) =< it(47)*aux(29)
s(84) =< it(47)*aux(41)
s(74) =< it(47)*aux(32)
s(73) =< it(47)*aux(31)
s(80) =< it(47)*aux(38)
s(76) =< it(47)*aux(35)
s(83) =< s(74)
s(83) =< s(73)
s(83) =< s(84)
s(79) =< s(74)
s(79) =< s(73)
s(79) =< s(80)
s(75) =< s(74)
s(75) =< s(73)
s(75) =< s(76)
s(72) =< s(74)
s(72) =< s(73)
s(69) =< s(71)
s(69) =< s(70)

  with precondition: [B=3,V_k_1>=0,V_N>=V_k_1+4] 

* Chain [[47,48,49,50,51,52,53],54,61]: 13*it(47)+2*s(69)+2*s(72)+2*s(75)+2*s(79)+2*s(83)+2
  Such that:aux(30) =< V_N/2
aux(29) =< V_N/2-V_k_1/2
aux(60) =< V_N-V_k_1
it(47) =< aux(60)
aux(41) =< aux(29)-3/2
aux(32) =< aux(30)
aux(31) =< aux(29)
aux(38) =< aux(29)-1
aux(35) =< aux(29)*2-2
s(71) =< it(47)*aux(30)
s(70) =< it(47)*aux(29)
s(84) =< it(47)*aux(41)
s(74) =< it(47)*aux(32)
s(73) =< it(47)*aux(31)
s(80) =< it(47)*aux(38)
s(76) =< it(47)*aux(35)
s(83) =< s(74)
s(83) =< s(73)
s(83) =< s(84)
s(79) =< s(74)
s(79) =< s(73)
s(79) =< s(80)
s(75) =< s(74)
s(75) =< s(73)
s(75) =< s(76)
s(72) =< s(74)
s(72) =< s(73)
s(69) =< s(71)
s(69) =< s(70)

  with precondition: [B=3,V_k_1>=0,V_N>=V_k_1+4] 

* Chain [[47,48,49,50,51,52,53],54,56,62]: 13*it(47)+2*s(69)+2*s(72)+2*s(75)+2*s(79)+2*s(83)+3
  Such that:aux(30) =< V_N/2
aux(29) =< V_N/2-V_k_1/2
aux(61) =< V_N-V_k_1
it(47) =< aux(61)
aux(41) =< aux(29)-3/2
aux(32) =< aux(30)
aux(31) =< aux(29)
aux(38) =< aux(29)-1
aux(35) =< aux(29)*2-2
s(71) =< it(47)*aux(30)
s(70) =< it(47)*aux(29)
s(84) =< it(47)*aux(41)
s(74) =< it(47)*aux(32)
s(73) =< it(47)*aux(31)
s(80) =< it(47)*aux(38)
s(76) =< it(47)*aux(35)
s(83) =< s(74)
s(83) =< s(73)
s(83) =< s(84)
s(79) =< s(74)
s(79) =< s(73)
s(79) =< s(80)
s(75) =< s(74)
s(75) =< s(73)
s(75) =< s(76)
s(72) =< s(74)
s(72) =< s(73)
s(69) =< s(71)
s(69) =< s(70)

  with precondition: [B=3,V_k_1>=0,V_N>=V_k_1+4] 

* Chain [[47,48,49,50,51,52,53],54,56,57]: 13*it(47)+2*s(69)+2*s(72)+2*s(75)+2*s(79)+2*s(83)+3
  Such that:aux(43) =< -V_k_1+C
aux(42) =< -V_k_1+C+1
aux(29) =< -V_k_1/2+C/2+1/2
aux(30) =< C/2+1/2
it(47) =< aux(42)
it(47) =< aux(43)
aux(41) =< aux(29)-3/2
aux(32) =< aux(30)
aux(31) =< aux(29)
aux(38) =< aux(29)-1
aux(35) =< aux(29)*2-2
s(71) =< it(47)*aux(30)
s(70) =< it(47)*aux(29)
s(84) =< it(47)*aux(41)
s(74) =< it(47)*aux(32)
s(73) =< it(47)*aux(31)
s(80) =< it(47)*aux(38)
s(76) =< it(47)*aux(35)
s(83) =< s(74)
s(83) =< s(73)
s(83) =< s(84)
s(79) =< s(74)
s(79) =< s(73)
s(79) =< s(80)
s(75) =< s(74)
s(75) =< s(73)
s(75) =< s(76)
s(72) =< s(74)
s(72) =< s(73)
s(69) =< s(71)
s(69) =< s(70)

  with precondition: [B=6,D=0,F=1,V_N=C+1,V_N=E+1,V_k_1>=0,V_N>=V_k_1+4] 

* Chain [63]: 1
  with precondition: [B=3,V_k_1+3=V_N,V_k_1>=0] 

* Chain [62]: 0
  with precondition: [B=3,V_N>=3,V_k_1>=0,V_N>=V_k_1+1] 

* Chain [61]: 0
  with precondition: [B=3,V_N>=3,V_k_1>=0,V_N>=V_k_1+2] 

* Chain [60]: 2*s(90)+1
  Such that:s(87) =< V_N-V_k_1
s(88) =< V_N/2
s(89) =< V_N/2-V_k_1/2
s(90) =< s(88)
s(90) =< s(89)
s(90) =< s(87)

  with precondition: [B=3,V_k_1>=0,V_N>=V_k_1+4] 

* Chain [59]: 4*s(93)+1
  Such that:s(91) =< V_N/2
s(92) =< V_N/2-V_k_1/2
s(93) =< s(91)
s(93) =< s(92)

  with precondition: [B=3,V_k_1>=0,V_N>=V_k_1+5] 

* Chain [58]: 4*s(96)+1
  Such that:s(94) =< V_N/2
s(95) =< V_N/2-V_k_1/2
s(96) =< s(94)
s(96) =< s(95)

  with precondition: [B=3,V_k_1>=0,V_N>=V_k_1+6] 

* Chain [55,62]: 2
  with precondition: [B=3,V_N=V_k_1+3,V_N>=3] 

* Chain [55,61]: 2
  with precondition: [B=3,V_N=V_k_1+3,V_N>=3] 

* Chain [55,56,62]: 3
  with precondition: [B=3,V_N=V_k_1+3,V_N>=3] 

* Chain [55,56,57]: 3
  with precondition: [B=6,D=0,F=1,C+1=V_N,C=V_k_1+2,C=E,C>=2] 

* Chain [54,62]: 2
  with precondition: [B=3,V_N=V_k_1+3,V_N>=3] 

* Chain [54,61]: 2
  with precondition: [B=3,V_N=V_k_1+3,V_N>=3] 

* Chain [54,56,62]: 3
  with precondition: [B=3,V_N=V_k_1+3,V_N>=3] 

* Chain [54,56,57]: 3
  with precondition: [B=6,D=0,F=1,C+1=V_N,C=V_k_1+2,C=E,C>=2] 


#### Cost of chains of eval_realheapsort_bb6_in_loop_cont(A,B,C,D,E,F,G,H,I,J):
* Chain [65]: 0
  with precondition: [A=3,D>=3] 

* Chain [64]: 0
  with precondition: [A=6,D>=3] 


#### Cost of chains of eval_realheapsort_39(V_33,V_90,V_N,V_j_0,V_j_1,V_k_0,V_k_1,V_m_0,B):
* Chain [71]: 3
  with precondition: [V_N=3] 

* Chain [70]: 0
  with precondition: [V_N>=3] 

* Chain [69]: 2*s(389)+143*s(390)+22*s(403)+22*s(404)+22*s(405)+22*s(406)+22*s(407)+3
  Such that:aux(76) =< V_N
aux(77) =< V_N/2
s(390) =< aux(76)
s(391) =< aux(77)-3/2
s(392) =< aux(77)
s(394) =< aux(77)-1
s(395) =< aux(77)*2-2
s(396) =< s(390)*aux(77)
s(398) =< s(390)*s(391)
s(399) =< s(390)*s(392)
s(401) =< s(390)*s(394)
s(402) =< s(390)*s(395)
s(403) =< s(399)
s(403) =< s(398)
s(404) =< s(399)
s(404) =< s(401)
s(405) =< s(399)
s(405) =< s(402)
s(406) =< s(399)
s(407) =< s(396)
s(389) =< aux(77)
s(389) =< aux(76)

  with precondition: [V_N>=4] 

* Chain [68]: 2*s(434)+13*s(435)+2*s(448)+2*s(449)+2*s(450)+2*s(451)+2*s(452)+4*s(453)+1
  Such that:s(430) =< V_N
aux(78) =< V_N/2
s(433) =< s(430)
s(433) =< aux(78)
s(434) =< aux(78)
s(434) =< s(433)
s(434) =< s(430)
s(435) =< s(430)
s(436) =< aux(78)-3/2
s(437) =< aux(78)
s(439) =< aux(78)-1
s(440) =< aux(78)*2-2
s(441) =< s(435)*aux(78)
s(443) =< s(435)*s(436)
s(444) =< s(435)*s(437)
s(446) =< s(435)*s(439)
s(447) =< s(435)*s(440)
s(448) =< s(444)
s(448) =< s(443)
s(449) =< s(444)
s(449) =< s(446)
s(450) =< s(444)
s(450) =< s(447)
s(451) =< s(444)
s(452) =< s(441)
s(453) =< aux(78)

  with precondition: [V_N>=5] 

* Chain [67]: 4*s(458)+13*s(459)+2*s(472)+2*s(473)+2*s(474)+2*s(475)+2*s(476)+4*s(477)+1
  Such that:s(454) =< V_N
aux(79) =< V_N/2
s(457) =< s(454)
s(457) =< aux(79)
s(458) =< aux(79)
s(458) =< s(457)
s(459) =< s(454)
s(460) =< aux(79)-3/2
s(461) =< aux(79)
s(463) =< aux(79)-1
s(464) =< aux(79)*2-2
s(465) =< s(459)*aux(79)
s(467) =< s(459)*s(460)
s(468) =< s(459)*s(461)
s(470) =< s(459)*s(463)
s(471) =< s(459)*s(464)
s(472) =< s(468)
s(472) =< s(467)
s(473) =< s(468)
s(473) =< s(470)
s(474) =< s(468)
s(474) =< s(471)
s(475) =< s(468)
s(476) =< s(465)
s(477) =< aux(79)

  with precondition: [V_N>=6] 

* Chain [66]: 4*s(482)+13*s(483)+2*s(496)+2*s(497)+2*s(498)+2*s(499)+2*s(500)+1
  Such that:s(478) =< V_N
aux(80) =< V_N/2
s(481) =< s(478)
s(481) =< aux(80)
s(482) =< aux(80)
s(482) =< s(481)
s(483) =< s(478)
s(484) =< aux(80)-3/2
s(485) =< aux(80)
s(487) =< aux(80)-1
s(488) =< aux(80)*2-2
s(489) =< s(483)*aux(80)
s(491) =< s(483)*s(484)
s(492) =< s(483)*s(485)
s(494) =< s(483)*s(487)
s(495) =< s(483)*s(488)
s(496) =< s(492)
s(496) =< s(491)
s(497) =< s(492)
s(497) =< s(494)
s(498) =< s(492)
s(498) =< s(495)
s(499) =< s(492)
s(500) =< s(489)

  with precondition: [V_N>=7] 


#### Cost of chains of eval_realheapsort_bb1_in_loop_cont(A,B,C,D,E,F,G,H,I,J):
* Chain [78]: 0
  with precondition: [A=3,D>=3] 

* Chain [77]: 3
  with precondition: [A=5,D=3] 

* Chain [76]: 0
  with precondition: [A=5,D>=3] 

* Chain [75]: 143*s(503)+22*s(513)+22*s(514)+22*s(515)+22*s(516)+22*s(517)+2*s(518)+3
  Such that:s(501) =< D
s(502) =< D/2
s(503) =< s(501)
s(504) =< s(502)-3/2
s(505) =< s(502)
s(506) =< s(502)-1
s(507) =< s(502)*2-2
s(508) =< s(503)*s(502)
s(509) =< s(503)*s(504)
s(510) =< s(503)*s(505)
s(511) =< s(503)*s(506)
s(512) =< s(503)*s(507)
s(513) =< s(510)
s(513) =< s(509)
s(514) =< s(510)
s(514) =< s(511)
s(515) =< s(510)
s(515) =< s(512)
s(516) =< s(510)
s(517) =< s(508)
s(518) =< s(502)
s(518) =< s(501)

  with precondition: [A=5,D>=4] 

* Chain [74]: 2*s(522)+13*s(523)+2*s(533)+2*s(534)+2*s(535)+2*s(536)+2*s(537)+4*s(538)+1
  Such that:s(519) =< D
s(520) =< D/2
s(521) =< s(519)
s(521) =< s(520)
s(522) =< s(520)
s(522) =< s(521)
s(522) =< s(519)
s(523) =< s(519)
s(524) =< s(520)-3/2
s(525) =< s(520)
s(526) =< s(520)-1
s(527) =< s(520)*2-2
s(528) =< s(523)*s(520)
s(529) =< s(523)*s(524)
s(530) =< s(523)*s(525)
s(531) =< s(523)*s(526)
s(532) =< s(523)*s(527)
s(533) =< s(530)
s(533) =< s(529)
s(534) =< s(530)
s(534) =< s(531)
s(535) =< s(530)
s(535) =< s(532)
s(536) =< s(530)
s(537) =< s(528)
s(538) =< s(520)

  with precondition: [A=5,D>=5] 

* Chain [73]: 4*s(542)+13*s(543)+2*s(553)+2*s(554)+2*s(555)+2*s(556)+2*s(557)+4*s(558)+1
  Such that:s(539) =< D
s(540) =< D/2
s(541) =< s(539)
s(541) =< s(540)
s(542) =< s(540)
s(542) =< s(541)
s(543) =< s(539)
s(544) =< s(540)-3/2
s(545) =< s(540)
s(546) =< s(540)-1
s(547) =< s(540)*2-2
s(548) =< s(543)*s(540)
s(549) =< s(543)*s(544)
s(550) =< s(543)*s(545)
s(551) =< s(543)*s(546)
s(552) =< s(543)*s(547)
s(553) =< s(550)
s(553) =< s(549)
s(554) =< s(550)
s(554) =< s(551)
s(555) =< s(550)
s(555) =< s(552)
s(556) =< s(550)
s(557) =< s(548)
s(558) =< s(540)

  with precondition: [A=5,D>=6] 

* Chain [72]: 4*s(562)+13*s(563)+2*s(573)+2*s(574)+2*s(575)+2*s(576)+2*s(577)+1
  Such that:s(559) =< D
s(560) =< D/2
s(561) =< s(559)
s(561) =< s(560)
s(562) =< s(560)
s(562) =< s(561)
s(563) =< s(559)
s(564) =< s(560)-3/2
s(565) =< s(560)
s(566) =< s(560)-1
s(567) =< s(560)*2-2
s(568) =< s(563)*s(560)
s(569) =< s(563)*s(564)
s(570) =< s(563)*s(565)
s(571) =< s(563)*s(566)
s(572) =< s(563)*s(567)
s(573) =< s(570)
s(573) =< s(569)
s(574) =< s(570)
s(574) =< s(571)
s(575) =< s(570)
s(575) =< s(572)
s(576) =< s(570)
s(577) =< s(568)

  with precondition: [A=5,D>=7] 


#### Cost of chains of eval_realheapsort_2(V_33,V_90,V_N,V_j_0,V_j_1,V_k_0,V_k_1,V_m_0,B):
* Chain [85]: 3*s(580)+1*s(582)+1*s(583)+3
  Such that:s(579) =< 2
s(578) =< 3
s(580) =< s(579)
s(581) =< s(578)+1
s(582) =< s(580)*s(578)
s(583) =< s(580)*s(581)

  with precondition: [V_N=3] 

* Chain [84]: 0
  with precondition: [2>=V_N] 

* Chain [83]: 1*s(586)+10*s(587)+3*s(589)+3*s(590)+0
  Such that:s(586) =< 1
aux(84) =< V_N
s(587) =< aux(84)
s(588) =< aux(84)+1
s(589) =< s(587)*aux(84)
s(590) =< s(587)*s(588)

  with precondition: [V_N>=3] 

* Chain [82]: 146*s(606)+1*s(608)+1*s(609)+22*s(622)+22*s(623)+22*s(624)+22*s(625)+22*s(626)+2*s(627)+3
  Such that:s(611) =< V_N/2
aux(85) =< V_N
s(606) =< aux(85)
s(613) =< s(611)-3/2
s(614) =< s(611)
s(615) =< s(611)-1
s(616) =< s(611)*2-2
s(617) =< s(606)*s(611)
s(618) =< s(606)*s(613)
s(619) =< s(606)*s(614)
s(620) =< s(606)*s(615)
s(621) =< s(606)*s(616)
s(622) =< s(619)
s(622) =< s(618)
s(623) =< s(619)
s(623) =< s(620)
s(624) =< s(619)
s(624) =< s(621)
s(625) =< s(619)
s(626) =< s(617)
s(627) =< s(611)
s(627) =< aux(85)
s(607) =< aux(85)+1
s(608) =< s(606)*aux(85)
s(609) =< s(606)*s(607)

  with precondition: [V_N>=4] 

* Chain [81]: 16*s(630)+1*s(632)+1*s(633)+2*s(637)+2*s(648)+2*s(649)+2*s(650)+2*s(651)+2*s(652)+4*s(653)+1
  Such that:s(635) =< V_N/2
aux(86) =< V_N
s(636) =< aux(86)
s(636) =< s(635)
s(637) =< s(635)
s(637) =< s(636)
s(637) =< aux(86)
s(630) =< aux(86)
s(639) =< s(635)-3/2
s(640) =< s(635)
s(641) =< s(635)-1
s(642) =< s(635)*2-2
s(643) =< s(630)*s(635)
s(644) =< s(630)*s(639)
s(645) =< s(630)*s(640)
s(646) =< s(630)*s(641)
s(647) =< s(630)*s(642)
s(648) =< s(645)
s(648) =< s(644)
s(649) =< s(645)
s(649) =< s(646)
s(650) =< s(645)
s(650) =< s(647)
s(651) =< s(645)
s(652) =< s(643)
s(653) =< s(635)
s(631) =< aux(86)+1
s(632) =< s(630)*aux(86)
s(633) =< s(630)*s(631)

  with precondition: [V_N>=5] 

* Chain [80]: 16*s(656)+1*s(658)+1*s(659)+4*s(663)+2*s(674)+2*s(675)+2*s(676)+2*s(677)+2*s(678)+4*s(679)+1
  Such that:s(661) =< V_N/2
aux(87) =< V_N
s(662) =< aux(87)
s(662) =< s(661)
s(663) =< s(661)
s(663) =< s(662)
s(656) =< aux(87)
s(665) =< s(661)-3/2
s(666) =< s(661)
s(667) =< s(661)-1
s(668) =< s(661)*2-2
s(669) =< s(656)*s(661)
s(670) =< s(656)*s(665)
s(671) =< s(656)*s(666)
s(672) =< s(656)*s(667)
s(673) =< s(656)*s(668)
s(674) =< s(671)
s(674) =< s(670)
s(675) =< s(671)
s(675) =< s(672)
s(676) =< s(671)
s(676) =< s(673)
s(677) =< s(671)
s(678) =< s(669)
s(679) =< s(661)
s(657) =< aux(87)+1
s(658) =< s(656)*aux(87)
s(659) =< s(656)*s(657)

  with precondition: [V_N>=6] 

* Chain [79]: 16*s(682)+1*s(684)+1*s(685)+4*s(689)+2*s(700)+2*s(701)+2*s(702)+2*s(703)+2*s(704)+1
  Such that:s(687) =< V_N/2
aux(88) =< V_N
s(688) =< aux(88)
s(688) =< s(687)
s(689) =< s(687)
s(689) =< s(688)
s(682) =< aux(88)
s(691) =< s(687)-3/2
s(692) =< s(687)
s(693) =< s(687)-1
s(694) =< s(687)*2-2
s(695) =< s(682)*s(687)
s(696) =< s(682)*s(691)
s(697) =< s(682)*s(692)
s(698) =< s(682)*s(693)
s(699) =< s(682)*s(694)
s(700) =< s(697)
s(700) =< s(696)
s(701) =< s(697)
s(701) =< s(698)
s(702) =< s(697)
s(702) =< s(699)
s(703) =< s(697)
s(704) =< s(695)
s(683) =< aux(88)+1
s(684) =< s(682)*aux(88)
s(685) =< s(682)*s(683)

  with precondition: [V_N>=7] 


#### Cost of chains of eval_realheapsort_start(V_33,V_90,V_N,V_j_0,V_j_1,V_k_0,V_k_1,V_m_0,B):
* Chain [92]: 3*s(707)+1*s(709)+1*s(710)+3
  Such that:s(705) =< 2
s(706) =< 3
s(707) =< s(705)
s(708) =< s(706)+1
s(709) =< s(707)*s(706)
s(710) =< s(707)*s(708)

  with precondition: [V_N=3] 

* Chain [91]: 0
  with precondition: [2>=V_N] 

* Chain [90]: 1*s(711)+10*s(713)+3*s(715)+3*s(716)+0
  Such that:s(711) =< 1
s(712) =< V_N
s(713) =< s(712)
s(714) =< s(712)+1
s(715) =< s(713)*s(712)
s(716) =< s(713)*s(714)

  with precondition: [V_N>=3] 

* Chain [89]: 146*s(719)+22*s(729)+22*s(730)+22*s(731)+22*s(732)+22*s(733)+2*s(734)+1*s(736)+1*s(737)+3
  Such that:s(718) =< V_N
s(717) =< V_N/2
s(719) =< s(718)
s(720) =< s(717)-3/2
s(721) =< s(717)
s(722) =< s(717)-1
s(723) =< s(717)*2-2
s(724) =< s(719)*s(717)
s(725) =< s(719)*s(720)
s(726) =< s(719)*s(721)
s(727) =< s(719)*s(722)
s(728) =< s(719)*s(723)
s(729) =< s(726)
s(729) =< s(725)
s(730) =< s(726)
s(730) =< s(727)
s(731) =< s(726)
s(731) =< s(728)
s(732) =< s(726)
s(733) =< s(724)
s(734) =< s(717)
s(734) =< s(718)
s(735) =< s(718)+1
s(736) =< s(719)*s(718)
s(737) =< s(719)*s(735)

  with precondition: [V_N>=4] 

* Chain [88]: 2*s(741)+16*s(742)+2*s(752)+2*s(753)+2*s(754)+2*s(755)+2*s(756)+4*s(757)+1*s(759)+1*s(760)+1
  Such that:s(739) =< V_N
s(738) =< V_N/2
s(740) =< s(739)
s(740) =< s(738)
s(741) =< s(738)
s(741) =< s(740)
s(741) =< s(739)
s(742) =< s(739)
s(743) =< s(738)-3/2
s(744) =< s(738)
s(745) =< s(738)-1
s(746) =< s(738)*2-2
s(747) =< s(742)*s(738)
s(748) =< s(742)*s(743)
s(749) =< s(742)*s(744)
s(750) =< s(742)*s(745)
s(751) =< s(742)*s(746)
s(752) =< s(749)
s(752) =< s(748)
s(753) =< s(749)
s(753) =< s(750)
s(754) =< s(749)
s(754) =< s(751)
s(755) =< s(749)
s(756) =< s(747)
s(757) =< s(738)
s(758) =< s(739)+1
s(759) =< s(742)*s(739)
s(760) =< s(742)*s(758)

  with precondition: [V_N>=5] 

* Chain [87]: 4*s(764)+16*s(765)+2*s(775)+2*s(776)+2*s(777)+2*s(778)+2*s(779)+4*s(780)+1*s(782)+1*s(783)+1
  Such that:s(762) =< V_N
s(761) =< V_N/2
s(763) =< s(762)
s(763) =< s(761)
s(764) =< s(761)
s(764) =< s(763)
s(765) =< s(762)
s(766) =< s(761)-3/2
s(767) =< s(761)
s(768) =< s(761)-1
s(769) =< s(761)*2-2
s(770) =< s(765)*s(761)
s(771) =< s(765)*s(766)
s(772) =< s(765)*s(767)
s(773) =< s(765)*s(768)
s(774) =< s(765)*s(769)
s(775) =< s(772)
s(775) =< s(771)
s(776) =< s(772)
s(776) =< s(773)
s(777) =< s(772)
s(777) =< s(774)
s(778) =< s(772)
s(779) =< s(770)
s(780) =< s(761)
s(781) =< s(762)+1
s(782) =< s(765)*s(762)
s(783) =< s(765)*s(781)

  with precondition: [V_N>=6] 

* Chain [86]: 4*s(787)+16*s(788)+2*s(798)+2*s(799)+2*s(800)+2*s(801)+2*s(802)+1*s(804)+1*s(805)+1
  Such that:s(785) =< V_N
s(784) =< V_N/2
s(786) =< s(785)
s(786) =< s(784)
s(787) =< s(784)
s(787) =< s(786)
s(788) =< s(785)
s(789) =< s(784)-3/2
s(790) =< s(784)
s(791) =< s(784)-1
s(792) =< s(784)*2-2
s(793) =< s(788)*s(784)
s(794) =< s(788)*s(789)
s(795) =< s(788)*s(790)
s(796) =< s(788)*s(791)
s(797) =< s(788)*s(792)
s(798) =< s(795)
s(798) =< s(794)
s(799) =< s(795)
s(799) =< s(796)
s(800) =< s(795)
s(800) =< s(797)
s(801) =< s(795)
s(802) =< s(793)
s(803) =< s(785)+1
s(804) =< s(788)*s(785)
s(805) =< s(788)*s(803)

  with precondition: [V_N>=7] 


Closed-form bounds of eval_realheapsort_start(V_33,V_90,V_N,V_j_0,V_j_1,V_k_0,V_k_1,V_m_0,B): 
-------------------------------------
* Chain [92] with precondition: [V_N=3] 
    - Upper bound: 23 
    - Complexity: constant 
* Chain [91] with precondition: [2>=V_N] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [90] with precondition: [V_N>=3] 
    - Upper bound: 13*V_N+1+6*V_N*V_N 
    - Complexity: n^2 
* Chain [89] with precondition: [V_N>=4] 
    - Upper bound: 147*V_N+3+2*V_N*V_N+V_N/2*(110*V_N)+V_N 
    - Complexity: n^2 
* Chain [88] with precondition: [V_N>=5] 
    - Upper bound: 17*V_N+1+2*V_N*V_N+V_N/2*(10*V_N)+3*V_N 
    - Complexity: n^2 
* Chain [87] with precondition: [V_N>=6] 
    - Upper bound: 17*V_N+1+2*V_N*V_N+V_N/2*(10*V_N)+4*V_N 
    - Complexity: n^2 
* Chain [86] with precondition: [V_N>=7] 
    - Upper bound: 17*V_N+1+2*V_N*V_N+V_N/2*(10*V_N)+2*V_N 
    - Complexity: n^2 

### Maximum cost of eval_realheapsort_start(V_33,V_90,V_N,V_j_0,V_j_1,V_k_0,V_k_1,V_m_0,B): max([22,nat(V_N)*2*nat(V_N)+nat(V_N)*13+max([nat(V_N)*4*nat(V_N),nat(V_N)*10*nat(V_N/2)+nat(V_N)*4+nat(V_N/2)*2+max([nat(V_N/2)*6,nat(V_N)*130+2+nat(V_N)*100*nat(V_N/2)])])])+1 
Asymptotic class: n^2 
* Total analysis performed in 908 ms.

