WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [eval2/3]
1. recursive  : [eval3/3]
2. recursive  : [eval1/3,eval2_loop_cont/4,eval3_loop_cont/4]
3. non_recursive  : [exit_location/1]
4. non_recursive  : [eval1_loop_cont/2]
5. non_recursive  : [start/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into eval2/3
1. SCC is partially evaluated into eval3/3
2. SCC is partially evaluated into eval1/3
3. SCC is completely evaluated into other SCCs
4. SCC is completely evaluated into other SCCs
5. SCC is partially evaluated into start/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations eval2/3 
* CE 9 is refined into CE [13] 
* CE 8 is refined into CE [14] 
* CE 7 is refined into CE [15] 


### Cost equations --> "Loop" of eval2/3 
* CEs [15] --> Loop 13 
* CEs [13] --> Loop 14 
* CEs [14] --> Loop 15 

### Ranking functions of CR eval2(A,C,D) 
* RF of phase [13]: [A]

#### Partial ranking functions of CR eval2(A,C,D) 
* Partial RF of phase [13]:
  - RF of loop [13:1]:
    A


### Specialization of cost equations eval3/3 
* CE 12 is refined into CE [16] 
* CE 11 is refined into CE [17] 
* CE 10 is refined into CE [18] 


### Cost equations --> "Loop" of eval3/3 
* CEs [18] --> Loop 16 
* CEs [16] --> Loop 17 
* CEs [17] --> Loop 18 

### Ranking functions of CR eval3(B,C,D) 
* RF of phase [16]: [B]

#### Partial ranking functions of CR eval3(B,C,D) 
* Partial RF of phase [16]:
  - RF of loop [16:1]:
    B


### Specialization of cost equations eval1/3 
* CE 2 is refined into CE [19,20] 
* CE 4 is refined into CE [21,22] 
* CE 6 is refined into CE [23] 
* CE 3 is refined into CE [24] 
* CE 5 is refined into CE [25] 


### Cost equations --> "Loop" of eval1/3 
* CEs [25] --> Loop 19 
* CEs [24] --> Loop 20 
* CEs [19,20] --> Loop 21 
* CEs [21,22] --> Loop 22 
* CEs [23] --> Loop 23 

### Ranking functions of CR eval1(A,B,C) 

#### Partial ranking functions of CR eval1(A,B,C) 


### Specialization of cost equations start/3 
* CE 1 is refined into CE [26,27,28] 


### Cost equations --> "Loop" of start/3 
* CEs [28] --> Loop 24 
* CEs [27] --> Loop 25 
* CEs [26] --> Loop 26 

### Ranking functions of CR start(A,B,C) 

#### Partial ranking functions of CR start(A,B,C) 


Computing Bounds
=====================================

#### Cost of chains of eval2(A,C,D):
* Chain [[13],15]: 1*it(13)+0
  Such that:it(13) =< A

  with precondition: [C=2,D=0,A>=1] 

* Chain [[13],14]: 1*it(13)+0
  Such that:it(13) =< A

  with precondition: [C=3,A>=1] 

* Chain [14]: 0
  with precondition: [C=3] 


#### Cost of chains of eval3(B,C,D):
* Chain [[16],18]: 1*it(16)+0
  Such that:it(16) =< B

  with precondition: [C=2,D=0,B>=1] 

* Chain [[16],17]: 1*it(16)+0
  Such that:it(16) =< B

  with precondition: [C=3,B>=1] 

* Chain [17]: 0
  with precondition: [C=3,B>=0] 


#### Cost of chains of eval1(A,B,C):
* Chain [23]: 0
  with precondition: [C=3] 

* Chain [22]: 1*s(1)+0
  Such that:s(1) =< B

  with precondition: [C=3,A>=1,B>=A] 

* Chain [21]: 1*s(2)+0
  Such that:s(2) =< A

  with precondition: [C=3,B>=1,A>=B+1] 

* Chain [20,23]: 1*s(3)+1
  Such that:s(3) =< A

  with precondition: [C=3,B>=1,A>=B+1] 

* Chain [19,23]: 1*s(4)+1
  Such that:s(4) =< B

  with precondition: [C=3,A>=1,B>=A] 


#### Cost of chains of start(A,B,C):
* Chain [26]: 0
  with precondition: [] 

* Chain [25]: 2*s(10)+1
  Such that:s(9) =< B
s(10) =< s(9)

  with precondition: [A>=1,B>=A] 

* Chain [24]: 2*s(12)+1
  Such that:s(11) =< A
s(12) =< s(11)

  with precondition: [B>=1,A>=B+1] 


Closed-form bounds of start(A,B,C): 
-------------------------------------
* Chain [26] with precondition: [] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [25] with precondition: [A>=1,B>=A] 
    - Upper bound: 2*B+1 
    - Complexity: n 
* Chain [24] with precondition: [B>=1,A>=B+1] 
    - Upper bound: 2*A+1 
    - Complexity: n 

### Maximum cost of start(A,B,C): max([nat(A)*2+1,nat(B)*2+1]) 
Asymptotic class: n 
* Total analysis performed in 53 ms.

