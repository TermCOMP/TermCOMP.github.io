WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [evalgcdbb4in/5,evalgcdbb5in/5,evalgcdbb6in/5,evalgcdbb7in/5]
1. non_recursive  : [evalgcdstop/3]
2. non_recursive  : [evalgcdreturnin/3]
3. non_recursive  : [exit_location/1]
4. non_recursive  : [evalgcdbb7in_loop_cont/4]
5. non_recursive  : [evalgcdentryin/3]
6. non_recursive  : [evalgcdstart/3]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into evalgcdbb7in/5
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into evalgcdbb7in_loop_cont/4
5. SCC is partially evaluated into evalgcdentryin/3
6. SCC is partially evaluated into evalgcdstart/3

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations evalgcdbb7in/5 
* CE 8 is refined into CE [11] 
* CE 7 is refined into CE [12] 
* CE 5 is refined into CE [13] 
* CE 6 is refined into CE [14] 


### Cost equations --> "Loop" of evalgcdbb7in/5 
* CEs [13] --> Loop 11 
* CEs [14] --> Loop 12 
* CEs [11] --> Loop 13 
* CEs [12] --> Loop 14 

### Ranking functions of CR evalgcdbb7in(A,B,C,D,E) 
* RF of phase [11,12]: [A+B-2]

#### Partial ranking functions of CR evalgcdbb7in(A,B,C,D,E) 
* Partial RF of phase [11,12]:
  - RF of loop [11:1]:
    A-1
    A-B depends on loops [12:1] 
  - RF of loop [12:1]:
    -A+B depends on loops [11:1] 
    B-1


### Specialization of cost equations evalgcdbb7in_loop_cont/4 
* CE 10 is refined into CE [15] 
* CE 9 is refined into CE [16] 


### Cost equations --> "Loop" of evalgcdbb7in_loop_cont/4 
* CEs [15] --> Loop 15 
* CEs [16] --> Loop 16 

### Ranking functions of CR evalgcdbb7in_loop_cont(A,B,C,D) 

#### Partial ranking functions of CR evalgcdbb7in_loop_cont(A,B,C,D) 


### Specialization of cost equations evalgcdentryin/3 
* CE 4 is refined into CE [17,18,19,20] 
* CE 3 is refined into CE [21] 
* CE 2 is refined into CE [22] 


### Cost equations --> "Loop" of evalgcdentryin/3 
* CEs [18,20] --> Loop 17 
* CEs [19] --> Loop 18 
* CEs [21] --> Loop 19 
* CEs [22] --> Loop 20 
* CEs [17] --> Loop 21 

### Ranking functions of CR evalgcdentryin(A,B,C) 

#### Partial ranking functions of CR evalgcdentryin(A,B,C) 


### Specialization of cost equations evalgcdstart/3 
* CE 1 is refined into CE [23,24,25,26,27] 


### Cost equations --> "Loop" of evalgcdstart/3 
* CEs [27] --> Loop 22 
* CEs [26] --> Loop 23 
* CEs [25] --> Loop 24 
* CEs [24] --> Loop 25 
* CEs [23] --> Loop 26 

### Ranking functions of CR evalgcdstart(A,B,C) 

#### Partial ranking functions of CR evalgcdstart(A,B,C) 


Computing Bounds
=====================================

#### Cost of chains of evalgcdbb7in(A,B,C,D,E):
* Chain [[11,12],14]: 1*it(11)+1*it(12)+0
  Such that:aux(4) =< -A+B
aux(6) =< A
aux(2) =< A-B
aux(7) =< A+B
aux(8) =< A+B-2*D
aux(9) =< A+2*B
aux(10) =< A+2*B-3*D
aux(11) =< A-D
aux(1) =< 2*A+B-3*D
aux(12) =< B
aux(13) =< B-D
aux(3) =< aux(6)
it(11) =< aux(6)
aux(1) =< aux(7)
aux(3) =< aux(7)
it(11) =< aux(7)
it(12) =< aux(7)
aux(1) =< aux(8)
aux(3) =< aux(8)
it(11) =< aux(8)
it(12) =< aux(8)
aux(1) =< aux(9)
aux(3) =< aux(9)
aux(1) =< aux(10)
aux(3) =< aux(10)
aux(3) =< aux(11)
it(11) =< aux(11)
aux(1) =< aux(12)
it(12) =< aux(12)
aux(1) =< aux(13)
it(12) =< aux(13)
it(12) =< aux(3)+aux(4)
aux(1) =< it(12)*aux(12)
it(11) =< aux(1)+aux(2)

  with precondition: [C=2,D=E,D>=1,A>=D,B>=D,A+B>=3*D] 

* Chain [[11,12],13]: 1*it(11)+1*it(12)+0
  Such that:aux(4) =< -A+B
aux(2) =< A-B
aux(1) =< 2*A+B
aux(14) =< A
aux(15) =< A+B
aux(16) =< A+2*B
aux(17) =< B
aux(3) =< aux(14)
it(11) =< aux(14)
aux(1) =< aux(15)
aux(3) =< aux(15)
it(11) =< aux(15)
it(12) =< aux(15)
aux(1) =< aux(16)
aux(3) =< aux(16)
aux(1) =< aux(17)
it(12) =< aux(17)
it(12) =< aux(3)+aux(4)
aux(1) =< it(12)*aux(17)
it(11) =< aux(1)+aux(2)

  with precondition: [C=3,A>=1,B>=1,A+B>=3] 

* Chain [14]: 0
  with precondition: [C=2,B=A,B=D,B=E,B>=1] 

* Chain [13]: 0
  with precondition: [C=3,A>=1,B>=1] 


#### Cost of chains of evalgcdbb7in_loop_cont(A,B,C,D):
* Chain [16]: 0
  with precondition: [A=2] 

* Chain [15]: 0
  with precondition: [A=3] 


#### Cost of chains of evalgcdentryin(A,B,C):
* Chain [21]: 0
  with precondition: [A=B,A>=1] 

* Chain [20]: 0
  with precondition: [0>=A] 

* Chain [19]: 0
  with precondition: [0>=B] 

* Chain [18]: 0
  with precondition: [A>=1,B>=1] 

* Chain [17]: 2*s(13)+2*s(14)+0
  Such that:aux(23) =< -A+B
aux(24) =< A
aux(25) =< A-B
aux(26) =< A+B
aux(27) =< A+2*B
aux(28) =< 2*A+B
aux(29) =< B
s(3) =< aux(23)
s(9) =< aux(27)
s(3) =< aux(29)
s(12) =< aux(29)
s(13) =< aux(29)
s(9) =< aux(26)
s(12) =< aux(26)
s(13) =< aux(26)
s(14) =< aux(26)
s(9) =< aux(28)
s(12) =< aux(28)
s(9) =< aux(24)
s(14) =< aux(24)
s(14) =< s(12)+aux(25)
s(9) =< s(14)*aux(24)
s(13) =< s(9)+s(3)

  with precondition: [A>=1,B>=1,A+B>=3] 


#### Cost of chains of evalgcdstart(A,B,C):
* Chain [26]: 0
  with precondition: [A=B,A>=1] 

* Chain [25]: 0
  with precondition: [0>=A] 

* Chain [24]: 0
  with precondition: [0>=B] 

* Chain [23]: 0
  with precondition: [A>=1,B>=1] 

* Chain [22]: 2*s(35)+2*s(36)+0
  Such that:s(25) =< -A+B
s(26) =< A
s(27) =< A-B
s(28) =< A+B
s(29) =< A+2*B
s(30) =< 2*A+B
aux(30) =< B
s(25) =< aux(30)
s(32) =< s(25)
s(33) =< s(29)
s(32) =< aux(30)
s(34) =< aux(30)
s(35) =< aux(30)
s(33) =< s(28)
s(34) =< s(28)
s(35) =< s(28)
s(36) =< s(28)
s(33) =< s(30)
s(34) =< s(30)
s(33) =< s(26)
s(36) =< s(26)
s(36) =< s(34)+s(27)
s(33) =< s(36)*s(26)
s(35) =< s(33)+s(32)

  with precondition: [A>=1,B>=1,A+B>=3] 


Closed-form bounds of evalgcdstart(A,B,C): 
-------------------------------------
* Chain [26] with precondition: [A=B,A>=1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [25] with precondition: [0>=A] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [24] with precondition: [0>=B] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [23] with precondition: [A>=1,B>=1] 
    - Upper bound: 0 
    - Complexity: constant 
* Chain [22] with precondition: [A>=1,B>=1,A+B>=3] 
    - Upper bound: 2*A+4*B 
    - Complexity: n 

### Maximum cost of evalgcdstart(A,B,C): nat(A+B)*2+nat(B)*2 
Asymptotic class: n 
* Total analysis performed in 97 ms.

