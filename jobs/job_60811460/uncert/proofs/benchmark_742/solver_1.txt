WORST_CASE(Omega(n^1),O(n^1))

# LoAT Proof:
WORST_CASE(Omega(n^1),?)

WORST_CASE(Omega(n^1),?)
Initial ITS

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_4 -> 7
eval_start_5 -> 8
eval_start_bb1_in -> 9
eval_start_bb2_in -> 10
eval_start_bb5_in -> 11
eval_start_bb3_in -> 12
eval_start_bb4_in -> 13
eval_start_stop -> 14

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: -2+i1 == 0 /\ i1'=3, i3'=1+i3
   2: -3+i1 == 0 /\ i1'=4, i3'=1+i3
   3: -4+i1 == 0 /\ i1'=5, i3'=1+i3
   4: -5+i1 == 0 /\ i1'=6, i3'=1+i3
   5: -6+i1 == 0 /\ i1'=7, i3'=1+i3
   6: -7+i1 == 0 /\ i1'=8, i3'=1+i3
   7: -8+i1 == 0 /\ i1'=9, i3'=1+i3, i4'=i8, i5'=i9
   8: (-9+i1 == 0 /\ i4 < 0) /\ i1'=10, i3'=1+i3
   9: (-9+i1 == 0 /\ i4 >= 0) /\ i1'=11, i3'=1+i3
  10: -10+i1 == 0 /\ i1'=12, i3'=1+i3, i6'=1000+i5, i7'=1+i4
  11: (-12+i1 == 0 /\ -100+i6 >= 0) /\ i1'=13, i3'=1+i3
  12: (-12+i1 == 0 /\ -100+i6 < 0) /\ i1'=9, i3'=1+i3, i4'=i7, i5'=i6
  13: -13+i1 == 0 /\ i1'=12, i3'=1+i3, i6'=-100+i6
  14: -11+i1 == 0 /\ i1'=14, i3'=1+i3

Dependency graph:
0 -> 1
1 -> 2
2 -> 3
3 -> 4
4 -> 5
5 -> 6
6 -> 7
7 -> 8, 7 -> 9
8 -> 10
9 -> 14
10 -> 11, 10 -> 12
11 -> 13
12 -> 8, 12 -> 9
13 -> 11, 13 -> 12

Chained Linear Paths

	Applied Chaining

	First rule:
	-1+i1 == 0 /\ i1'=2, i3'=1+i3
	Second rule:
	-2+i1 == 0 /\ i1'=3, i3'=1+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 0, 1
	
	Applied Chaining

	First rule:
	-3+i1 == 0 /\ i1'=4, i3'=1+i3
	Second rule:
	-4+i1 == 0 /\ i1'=5, i3'=1+i3
	New rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 2, 3
	
	Applied Chaining

	First rule:
	-5+i1 == 0 /\ i1'=6, i3'=1+i3
	Second rule:
	-6+i1 == 0 /\ i1'=7, i3'=1+i3
	New rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=7, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 4, 5
	
	Applied Chaining

	First rule:
	-7+i1 == 0 /\ i1'=8, i3'=1+i3
	Second rule:
	-8+i1 == 0 /\ i1'=9, i3'=1+i3, i4'=i8, i5'=i9
	New rule:
	(0 == 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3, i4'=i8, i5'=i9
	
	Applied Deletion

	Removed the following rules: 6, 7
	
	Applied Chaining

	First rule:
	(-9+i1 == 0 /\ i4 < 0) /\ i1'=10, i3'=1+i3
	Second rule:
	-10+i1 == 0 /\ i1'=12, i3'=1+i3, i6'=1000+i5, i7'=1+i4
	New rule:
	(0 == 0 /\ -9+i1 == 0 /\ i4 < 0) /\ i1'=12, i3'=2+i3, i6'=1000+i5, i7'=1+i4
	
	Applied Deletion

	Removed the following rules: 8, 10
	
	Applied Chaining

	First rule:
	(-9+i1 == 0 /\ i4 >= 0) /\ i1'=11, i3'=1+i3
	Second rule:
	-11+i1 == 0 /\ i1'=14, i3'=1+i3
	New rule:
	(0 == 0 /\ -9+i1 == 0 /\ i4 >= 0) /\ i1'=14, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 9, 14
	
	Applied Chaining

	First rule:
	(-12+i1 == 0 /\ -100+i6 >= 0) /\ i1'=13, i3'=1+i3
	Second rule:
	-13+i1 == 0 /\ i1'=12, i3'=1+i3, i6'=-100+i6
	New rule:
	(0 == 0 /\ -12+i1 == 0 /\ -100+i6 >= 0) /\ i1'=12, i3'=2+i3, i6'=-100+i6
	
	Applied Deletion

	Removed the following rules: 11, 13
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	Second rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	
	Applied Deletion

	Removed the following rules: 15, 16
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=7, i3'=2+i3
	Second rule:
	(0 == 0 /\ -7+i1 == 0) /\ i1'=9, i3'=2+i3, i4'=i8, i5'=i9
	New rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=9, i3'=4+i3, i4'=i8, i5'=i9
	
	Applied Deletion

	Removed the following rules: 17, 18
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	Second rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=9, i3'=4+i3, i4'=i8, i5'=i9
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=9, i3'=8+i3, i4'=i8, i5'=i9
	
	Applied Deletion

	Removed the following rules: 22, 23

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_4 -> 7
eval_start_5 -> 8
eval_start_bb1_in -> 9
eval_start_bb2_in -> 10
eval_start_bb5_in -> 11
eval_start_bb3_in -> 12
eval_start_bb4_in -> 13
eval_start_stop -> 14

Rules:
  12: (-12+i1 == 0 /\ -100+i6 < 0) /\ i1'=9, i3'=1+i3, i4'=i7, i5'=i6
  19: (0 == 0 /\ -9+i1 == 0 /\ i4 < 0) /\ i1'=12, i3'=2+i3, i6'=1000+i5, i7'=1+i4
  20: (0 == 0 /\ -9+i1 == 0 /\ i4 >= 0) /\ i1'=14, i3'=2+i3
  21: (0 == 0 /\ -12+i1 == 0 /\ -100+i6 >= 0) /\ i1'=12, i3'=2+i3, i6'=-100+i6
  24: (0 == 0 /\ -1+i1 == 0) /\ i1'=9, i3'=8+i3, i4'=i8, i5'=i9

Dependency graph:
12 -> 19, 12 -> 20
19 -> 12, 19 -> 21
21 -> 12, 21 -> 21
24 -> 19, 24 -> 20

Preprocessed Transitions

	Simplified Guard

	Original rule:
	(0 == 0 /\ -9+i1 == 0 /\ i4 < 0) /\ i1'=12, i3'=2+i3, i6'=1000+i5, i7'=1+i4
	New rule:
	(-9+i1 == 0 /\ i4 < 0) /\ i1'=12, i3'=2+i3, i6'=1000+i5, i7'=1+i4
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -9+i1 == 0 /\ i4 >= 0) /\ i1'=14, i3'=2+i3
	New rule:
	(-9+i1 == 0 /\ i4 >= 0) /\ i1'=14, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -12+i1 == 0 /\ -100+i6 >= 0) /\ i1'=12, i3'=2+i3, i6'=-100+i6
	New rule:
	(-12+i1 == 0 /\ -100+i6 >= 0) /\ i1'=12, i3'=2+i3, i6'=-100+i6
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=9, i3'=8+i3, i4'=i8, i5'=i9
	New rule:
	-1+i1 == 0 /\ i1'=9, i3'=8+i3, i4'=i8, i5'=i9

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_4 -> 7
eval_start_5 -> 8
eval_start_bb1_in -> 9
eval_start_bb2_in -> 10
eval_start_bb5_in -> 11
eval_start_bb3_in -> 12
eval_start_bb4_in -> 13
eval_start_stop -> 14

Rules:
  12: (-12+i1 == 0 /\ -100+i6 < 0) /\ i1'=9, i3'=1+i3, i4'=i7, i5'=i6
  25: (-9+i1 == 0 /\ i4 < 0) /\ i1'=12, i3'=2+i3, i6'=1000+i5, i7'=1+i4
  26: (-9+i1 == 0 /\ i4 >= 0) /\ i1'=14, i3'=2+i3
  27: (-12+i1 == 0 /\ -100+i6 >= 0) /\ i1'=12, i3'=2+i3, i6'=-100+i6
  28: -1+i1 == 0 /\ i1'=9, i3'=8+i3, i4'=i8, i5'=i9

Dependency graph:
12 -> 25, 12 -> 26
25 -> 12, 25 -> 27
27 -> 12, 27 -> 27
28 -> 25, 28 -> 26

Step with 28

	Trace

	28[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 26

	Trace

	28[(-1+i1 == 0)]
	26[(-9+i1 == 0 /\ i4 >= 0)]
	
	Blocked

	{}
	{}
	{}
	
Backtrack

	Trace

	28[(-1+i1 == 0)]
	
	Blocked

	{}
	{26[T]}
	
Step with 25

	Trace

	28[(-1+i1 == 0)]
	25[(-9+i1 == 0 /\ i4 < 0)]
	
	Blocked

	{}
	{26[T]}
	{}
	
Step with 12

	Trace

	28[(-1+i1 == 0)]
	25[(-9+i1 == 0 /\ i4 < 0)]
	12[(-12+i1 == 0 /\ -100+i6 < 0)]
	
	Blocked

	{}
	{26[T]}
	{}
	{}
	
Poly(n^1)

Accelerate

		Simplified Guard

		Original rule:
		(0 == 0 /\ -9+i1 == 0 /\ i4 < 0 /\ 900+i5 < 0) /\ i1'=9, i3'=3+i3, i4'=1+i4, i5'=1000+i5, i6'=1000+i5, i7'=1+i4
		New rule:
		(-9+i1 == 0 /\ i4 < 0 /\ 900+i5 < 0) /\ i1'=9, i3'=3+i3, i4'=1+i4, i5'=1000+i5, i6'=1000+i5, i7'=1+i4

	Loop Acceleration

	Original rule:
	(-9+i1 == 0 /\ i4 < 0 /\ 900+i5 < 0) /\ i1'=9, i3'=3+i3, i4'=1+i4, i5'=1000+i5, i6'=1000+i5, i7'=1+i4
	New rule:
	(-9+i1 >= 0 /\ 1-it33-i4 > 0 /\ -900-i5 > 0 /\ 9-i1 >= 0 /\ 100-1000*it33-i5 > 0 /\ -1+it33 >= 0 /\ -i4 > 0) /\ i1'=i1, i3'=i3+3*it33, i4'=it33+i4, i5'=1000*it33+i5, i6'=1000*it33+i5, i7'=it33+i4

		-9+i1 >= 0 [0]: unchanged
		
		-900-i5 > 0 [0]: montonic decrease yields (-900-i5 > 0 /\ 100-1000*it33-i5 > 0)
		
		9-i1 >= 0 [0]: unchanged
		
		-i4 > 0 [0]: montonic decrease yields (1-it33-i4 > 0 /\ -i4 > 0)
		
		Replacement map: {-9+i1 >= 0 -> -9+i1 >= 0, -900-i5 > 0 -> (-900-i5 > 0 /\ 100-1000*it33-i5 > 0), 9-i1 >= 0 -> 9-i1 >= 0, -i4 > 0 -> (1-it33-i4 > 0 /\ -i4 > 0)}

	Removed Trivial Updates

	Original rule:
	(-9+i1 >= 0 /\ 1-it33-i4 > 0 /\ -900-i5 > 0 /\ 9-i1 >= 0 /\ 100-1000*it33-i5 > 0 /\ -1+it33 >= 0 /\ -i4 > 0) /\ i1'=i1, i3'=i3+3*it33, i4'=it33+i4, i5'=1000*it33+i5, i6'=1000*it33+i5, i7'=it33+i4
	New rule:
	(-9+i1 >= 0 /\ 1-it33-i4 > 0 /\ -900-i5 > 0 /\ 9-i1 >= 0 /\ 100-1000*it33-i5 > 0 /\ -1+it33 >= 0 /\ -i4 > 0) /\ i3'=i3+3*it33, i4'=it33+i4, i5'=1000*it33+i5, i6'=1000*it33+i5, i7'=it33+i4
	
	Instantiation

	Original rule:
	(-9+i1 >= 0 /\ 1-it33-i4 > 0 /\ -900-i5 > 0 /\ 9-i1 >= 0 /\ 100-1000*it33-i5 > 0 /\ -1+it33 >= 0 /\ -i4 > 0) /\ i3'=i3+3*it33, i4'=it33+i4, i5'=1000*it33+i5, i6'=1000*it33+i5, i7'=it33+i4
	New rule:
	(1 > 0 /\ -9+i1 >= 0 /\ 100+1000*i4-i5 > 0 /\ -900-i5 > 0 /\ 9-i1 >= 0 /\ -i4 > 0 /\ -1-i4 >= 0) /\ i3'=i3-3*i4, i4'=0, i5'=-1000*i4+i5, i6'=-1000*i4+i5, i7'=0

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_4 -> 7
eval_start_5 -> 8
eval_start_bb1_in -> 9
eval_start_bb2_in -> 10
eval_start_bb5_in -> 11
eval_start_bb3_in -> 12
eval_start_bb4_in -> 13
eval_start_stop -> 14

Rules:
  12: (-12+i1 == 0 /\ -100+i6 < 0) /\ i1'=9, i3'=1+i3, i4'=i7, i5'=i6
  25: (-9+i1 == 0 /\ i4 < 0) /\ i1'=12, i3'=2+i3, i6'=1000+i5, i7'=1+i4
  26: (-9+i1 == 0 /\ i4 >= 0) /\ i1'=14, i3'=2+i3
  27: (-12+i1 == 0 /\ -100+i6 >= 0) /\ i1'=12, i3'=2+i3, i6'=-100+i6
  28: -1+i1 == 0 /\ i1'=9, i3'=8+i3, i4'=i8, i5'=i9
  29: (1 > 0 /\ -9+i1 >= 0 /\ 100+1000*i4-i5 > 0 /\ -900-i5 > 0 /\ 9-i1 >= 0 /\ -i4 > 0 /\ -1-i4 >= 0) /\ i3'=i3-3*i4, i4'=0, i5'=-1000*i4+i5, i6'=-1000*i4+i5, i7'=0

Dependency graph:
12 -> 25, 12 -> 26, 12 -> 29
25 -> 12, 25 -> 27
27 -> 12, 27 -> 27
28 -> 25, 28 -> 26, 28 -> 29
29 -> 25, 29 -> 26

	Trace

	28[(-1+i1 == 0)]
	29[(1 > 0 /\ -9+i1 >= 0 /\ 100+1000*i4-i5 > 0 /\ -900-i5 > 0 /\ 9-i1 >= 0 /\ -i4 > 0 /\ -1-i4 >= 0)]
	
	Blocked

	{}
	{26[T]}
	{29[T]}
	
Step with 26

	Trace

	28[(-1+i1 == 0)]
	29[(1 > 0 /\ -9+i1 >= 0 /\ 100+1000*i4-i5 > 0 /\ -900-i5 > 0 /\ 9-i1 >= 0 /\ -i4 > 0 /\ -1-i4 >= 0)]
	26[(-9+i1 == 0 /\ i4 >= 0)]
	
	Blocked

	{}
	{26[T]}
	{29[T]}
	{}
	
Backtrack

	Trace

	28[(-1+i1 == 0)]
	29[(1 > 0 /\ -9+i1 >= 0 /\ 100+1000*i4-i5 > 0 /\ -900-i5 > 0 /\ 9-i1 >= 0 /\ -i4 > 0 /\ -1-i4 >= 0)]
	
	Blocked

	{}
	{26[T]}
	{26[T], 29[T]}
	
Backtrack

	Trace

	28[(-1+i1 == 0)]
	
	Blocked

	{}
	{26[T], 29[T]}
	
Step with 25

	Trace

	28[(-1+i1 == 0)]
	25[(-9+i1 == 0 /\ i4 < 0)]
	
	Blocked

	{}
	{26[T], 29[T]}
	{}
	
Step with 27

	Trace

	28[(-1+i1 == 0)]
	25[(-9+i1 == 0 /\ i4 < 0)]
	27[(-12+i1 == 0 /\ -100+i6 >= 0)]
	
	Blocked

	{}
	{26[T], 29[T]}
	{}
	{}
	
Accelerate

	Loop Acceleration

	Original rule:
	(-12+i1 == 0 /\ -100+i6 >= 0) /\ i1'=12, i3'=2+i3, i6'=-100+i6
	New rule:
	(-1+it74 >= 0 /\ 12-i1 >= 0 /\ i6-100*it74 >= 0 /\ -12+i1 >= 0) /\ i1'=i1, i3'=i3+2*it74, i6'=i6-100*it74

		12-i1 >= 0 [0]: unchanged
		
		-12+i1 >= 0 [0]: unchanged
		
		-100+i6 >= 0 [0]: montonic decrease yields i6-100*it74 >= 0
		
		Replacement map: {12-i1 >= 0 -> 12-i1 >= 0, -12+i1 >= 0 -> -12+i1 >= 0, -100+i6 >= 0 -> i6-100*it74 >= 0}

	Removed Trivial Updates

	Original rule:
	(-1+it74 >= 0 /\ 12-i1 >= 0 /\ i6-100*it74 >= 0 /\ -12+i1 >= 0) /\ i1'=i1, i3'=i3+2*it74, i6'=i6-100*it74
	New rule:
	(-1+it74 >= 0 /\ 12-i1 >= 0 /\ i6-100*it74 >= 0 /\ -12+i1 >= 0) /\ i3'=i3+2*it74, i6'=i6-100*it74

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_4 -> 7
eval_start_5 -> 8
eval_start_bb1_in -> 9
eval_start_bb2_in -> 10
eval_start_bb5_in -> 11
eval_start_bb3_in -> 12
eval_start_bb4_in -> 13
eval_start_stop -> 14

Rules:
  12: (-12+i1 == 0 /\ -100+i6 < 0) /\ i1'=9, i3'=1+i3, i4'=i7, i5'=i6
  25: (-9+i1 == 0 /\ i4 < 0) /\ i1'=12, i3'=2+i3, i6'=1000+i5, i7'=1+i4
  26: (-9+i1 == 0 /\ i4 >= 0) /\ i1'=14, i3'=2+i3
  27: (-12+i1 == 0 /\ -100+i6 >= 0) /\ i1'=12, i3'=2+i3, i6'=-100+i6
  28: -1+i1 == 0 /\ i1'=9, i3'=8+i3, i4'=i8, i5'=i9
  29: (1 > 0 /\ -9+i1 >= 0 /\ 100+1000*i4-i5 > 0 /\ -900-i5 > 0 /\ 9-i1 >= 0 /\ -i4 > 0 /\ -1-i4 >= 0) /\ i3'=i3-3*i4, i4'=0, i5'=-1000*i4+i5, i6'=-1000*i4+i5, i7'=0
  30: (-1+it74 >= 0 /\ 12-i1 >= 0 /\ i6-100*it74 >= 0 /\ -12+i1 >= 0) /\ i3'=i3+2*it74, i6'=i6-100*it74

Dependency graph:
12 -> 25, 12 -> 26, 12 -> 29
25 -> 12, 25 -> 27, 25 -> 30
27 -> 12, 27 -> 27, 27 -> 30
28 -> 25, 28 -> 26, 28 -> 29
29 -> 25, 29 -> 26
30 -> 12, 30 -> 27

	Trace

	28[(-1+i1 == 0)]
	25[(-9+i1 == 0 /\ i4 < 0)]
	30[(-1+it74 >= 0 /\ 12-i1 >= 0 /\ i6-100*it74 >= 0 /\ -12+i1 >= 0)]
	
	Blocked

	{}
	{26[T], 29[T]}
	{}
	{27[T], 30[T]}
	
Step with 12

	Trace

	28[(-1+i1 == 0)]
	25[(-9+i1 == 0 /\ i4 < 0)]
	30[(-1+it74 >= 0 /\ 12-i1 >= 0 /\ i6-100*it74 >= 0 /\ -12+i1 >= 0)]
	12[(-12+i1 == 0 /\ -100+i6 < 0)]
	
	Blocked

	{}
	{26[T], 29[T]}
	{}
	{27[T], 30[T]}
	{}
	
Accelerate

		Simplified Guard

		Original rule:
		(0 >= 0 /\ 0 == 0 /\ -9+i1 == 0 /\ -1+it74 >= 0 /\ 900-100*it74+i5 < 0 /\ i4 < 0 /\ 1000-100*it74+i5 >= 0) /\ i1'=9, i3'=3+i3+2*it74, i4'=1+i4, i5'=1000-100*it74+i5, i6'=1000-100*it74+i5, i7'=1+i4
		New rule:
		(-9+i1 == 0 /\ -1+it74 >= 0 /\ 900-100*it74+i5 < 0 /\ i4 < 0 /\ 1000-100*it74+i5 >= 0) /\ i1'=9, i3'=3+i3+2*it74, i4'=1+i4, i5'=1000-100*it74+i5, i6'=1000-100*it74+i5, i7'=1+i4

	Loop Acceleration

	Original rule:
	(-9+i1 == 0 /\ -1+it74 >= 0 /\ 900-100*it74+i5 < 0 /\ i4 < 0 /\ 1000-100*it74+i5 >= 0) /\ i1'=9, i3'=3+i3+2*it74, i4'=1+i4, i5'=1000-100*it74+i5, i6'=1000-100*it74+i5, i7'=1+i4
	New rule:
	(-9+i1 >= 0 /\ -1+it74 >= 0 /\ 1-i4-it124 > 0 /\ 100+100*it74-1000*it124-i5+100*it74*(-1+it124) > 0 /\ 9-i1 >= 0 /\ 1000-100*it74+i5 >= 0 /\ -900+100*it74-i5 > 0 /\ -100*it74+1000*it124+i5-100*it74*(-1+it124) >= 0 /\ -i4 > 0 /\ -1+it124 >= 0) /\ i1'=i1, i3'=i3+2*it74*it124+3*it124, i4'=i4+it124, i5'=-100*it74*it124+1000*it124+i5, i6'=-100*it74+1000*it124+i5-100*it74*(-1+it124), i7'=i4+it124

		-9+i1 >= 0 [0]: unchanged
		
		-1+it74 >= 0 [0]: unchanged
		
		9-i1 >= 0 [0]: unchanged
		
		1000-100*it74+i5 >= 0 [0]: eventual decrease yields (1000-100*it74+i5 >= 0 /\ -100*it74+1000*it124+i5-100*it74*(-1+it124) >= 0)
		
		1000-100*it74+i5 >= 0 [1]: eventual increase yields (-1000+100*it74 <= 0 /\ 1000-100*it74+i5 >= 0)
		
		-900+100*it74-i5 > 0 [0]: eventual decrease yields (100+100*it74-1000*it124-i5+100*it74*(-1+it124) > 0 /\ -900+100*it74-i5 > 0)
		
		-900+100*it74-i5 > 0 [1]: eventual increase yields (1000-100*it74 <= 0 /\ -900+100*it74-i5 > 0)
		
		-i4 > 0 [0]: montonic decrease yields (1-i4-it124 > 0 /\ -i4 > 0)
		
		Replacement map: {-9+i1 >= 0 -> -9+i1 >= 0, -1+it74 >= 0 -> -1+it74 >= 0, 9-i1 >= 0 -> 9-i1 >= 0, 1000-100*it74+i5 >= 0 -> (1000-100*it74+i5 >= 0 /\ -100*it74+1000*it124+i5-100*it74*(-1+it124) >= 0), -900+100*it74-i5 > 0 -> (100+100*it74-1000*it124-i5+100*it74*(-1+it124) > 0 /\ -900+100*it74-i5 > 0), -i4 > 0 -> (1-i4-it124 > 0 /\ -i4 > 0)}

	Removed Trivial Updates

	Original rule:
	(-9+i1 >= 0 /\ -1+it74 >= 0 /\ 1-i4-it124 > 0 /\ 100+100*it74-1000*it124-i5+100*it74*(-1+it124) > 0 /\ 9-i1 >= 0 /\ 1000-100*it74+i5 >= 0 /\ -900+100*it74-i5 > 0 /\ -100*it74+1000*it124+i5-100*it74*(-1+it124) >= 0 /\ -i4 > 0 /\ -1+it124 >= 0) /\ i1'=i1, i3'=i3+2*it74*it124+3*it124, i4'=i4+it124, i5'=-100*it74*it124+1000*it124+i5, i6'=-100*it74+1000*it124+i5-100*it74*(-1+it124), i7'=i4+it124
	New rule:
	(-9+i1 >= 0 /\ -1+it74 >= 0 /\ 1-i4-it124 > 0 /\ 100+100*it74-1000*it124-i5+100*it74*(-1+it124) > 0 /\ 9-i1 >= 0 /\ 1000-100*it74+i5 >= 0 /\ -900+100*it74-i5 > 0 /\ -100*it74+1000*it124+i5-100*it74*(-1+it124) >= 0 /\ -i4 > 0 /\ -1+it124 >= 0) /\ i3'=i3+2*it74*it124+3*it124, i4'=i4+it124, i5'=-100*it74*it124+1000*it124+i5, i6'=-100*it74+1000*it124+i5-100*it74*(-1+it124), i7'=i4+it124
	
	Instantiation

	Original rule:
	(-9+i1 >= 0 /\ -1+it74 >= 0 /\ 1-i4-it124 > 0 /\ 100+100*it74-1000*it124-i5+100*it74*(-1+it124) > 0 /\ 9-i1 >= 0 /\ 1000-100*it74+i5 >= 0 /\ -900+100*it74-i5 > 0 /\ -100*it74+1000*it124+i5-100*it74*(-1+it124) >= 0 /\ -i4 > 0 /\ -1+it124 >= 0) /\ i3'=i3+2*it74*it124+3*it124, i4'=i4+it124, i5'=-100*it74*it124+1000*it124+i5, i6'=-100*it74+1000*it124+i5-100*it74*(-1+it124), i7'=i4+it124
	New rule:
	(0 >= 0 /\ 1 > 0 /\ -9+i1 >= 0 /\ 100+900*i4-i5 > 0 /\ -800-i5 > 0 /\ 900+i5 >= 0 /\ -900*i4+i5 >= 0 /\ 9-i1 >= 0 /\ -i4 > 0 /\ -1-i4 >= 0) /\ i3'=i3-5*i4, i4'=0, i5'=-900*i4+i5, i6'=-900*i4+i5, i7'=0

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_4 -> 7
eval_start_5 -> 8
eval_start_bb1_in -> 9
eval_start_bb2_in -> 10
eval_start_bb5_in -> 11
eval_start_bb3_in -> 12
eval_start_bb4_in -> 13
eval_start_stop -> 14

Rules:
  12: (-12+i1 == 0 /\ -100+i6 < 0) /\ i1'=9, i3'=1+i3, i4'=i7, i5'=i6
  25: (-9+i1 == 0 /\ i4 < 0) /\ i1'=12, i3'=2+i3, i6'=1000+i5, i7'=1+i4
  26: (-9+i1 == 0 /\ i4 >= 0) /\ i1'=14, i3'=2+i3
  27: (-12+i1 == 0 /\ -100+i6 >= 0) /\ i1'=12, i3'=2+i3, i6'=-100+i6
  28: -1+i1 == 0 /\ i1'=9, i3'=8+i3, i4'=i8, i5'=i9
  29: (1 > 0 /\ -9+i1 >= 0 /\ 100+1000*i4-i5 > 0 /\ -900-i5 > 0 /\ 9-i1 >= 0 /\ -i4 > 0 /\ -1-i4 >= 0) /\ i3'=i3-3*i4, i4'=0, i5'=-1000*i4+i5, i6'=-1000*i4+i5, i7'=0
  30: (-1+it74 >= 0 /\ 12-i1 >= 0 /\ i6-100*it74 >= 0 /\ -12+i1 >= 0) /\ i3'=i3+2*it74, i6'=i6-100*it74
  31: (0 >= 0 /\ 1 > 0 /\ -9+i1 >= 0 /\ 100+900*i4-i5 > 0 /\ -800-i5 > 0 /\ 900+i5 >= 0 /\ -900*i4+i5 >= 0 /\ 9-i1 >= 0 /\ -i4 > 0 /\ -1-i4 >= 0) /\ i3'=i3-5*i4, i4'=0, i5'=-900*i4+i5, i6'=-900*i4+i5, i7'=0

Dependency graph:
12 -> 25, 12 -> 26, 12 -> 29, 12 -> 31
25 -> 12, 25 -> 27, 25 -> 30
27 -> 12, 27 -> 27, 27 -> 30
28 -> 25, 28 -> 26, 28 -> 29, 28 -> 31
29 -> 25, 29 -> 26, 29 -> 31
30 -> 12, 30 -> 27
31 -> 25, 31 -> 26, 31 -> 29

	Trace

	28[(-1+i1 == 0)]
	31[(0 >= 0 /\ 1 > 0 /\ -9+i1 >= 0 /\ 100+900*i4-i5 > 0 /\ -800-i5 > 0 /\ 900+i5 >= 0 /\ -900*i4+i5 >= 0 /\ 9-i1 >= 0 /\ -i4 > 0 /\ -1-i4 >= 0)]
	
	Blocked

	{}
	{26[T], 29[T]}
	{31[T]}
	
Step with 26

	Trace

	28[(-1+i1 == 0)]
	31[(0 >= 0 /\ 1 > 0 /\ -9+i1 >= 0 /\ 100+900*i4-i5 > 0 /\ -800-i5 > 0 /\ 900+i5 >= 0 /\ -900*i4+i5 >= 0 /\ 9-i1 >= 0 /\ -i4 > 0 /\ -1-i4 >= 0)]
	26[(-9+i1 == 0 /\ i4 >= 0)]
	
	Blocked

	{}
	{26[T], 29[T]}
	{25[T], 29[T], 31[T]}
	{}
	
Backtrack

	Trace

	28[(-1+i1 == 0)]
	31[(0 >= 0 /\ 1 > 0 /\ -9+i1 >= 0 /\ 100+900*i4-i5 > 0 /\ -800-i5 > 0 /\ 900+i5 >= 0 /\ -900*i4+i5 >= 0 /\ 9-i1 >= 0 /\ -i4 > 0 /\ -1-i4 >= 0)]
	
	Blocked

	{}
	{26[T], 29[T]}
	{25[T], 26[T], 29[T], 31[T]}
	
Backtrack

	Trace

	28[(-1+i1 == 0)]
	
	Blocked

	{}
	{26[T], 29[T], 31[T]}
	
Step with 25

	Trace

	28[(-1+i1 == 0)]
	25[(-9+i1 == 0 /\ i4 < 0)]
	
	Blocked

	{}
	{26[T], 29[T], 31[T]}
	{}
	
Step with 12

	Trace

	28[(-1+i1 == 0)]
	25[(-9+i1 == 0 /\ i4 < 0)]
	12[(-12+i1 == 0 /\ -100+i6 < 0)]
	
	Blocked

	{}
	{26[T], 29[T], 31[T]}
	{}
	{}
	
Covered

	Trace

	28[(-1+i1 == 0)]
	25[(-9+i1 == 0 /\ i4 < 0)]
	
	Blocked

	{}
	{26[T], 29[T], 31[T]}
	{12[T]}
	
Step with 30

	Trace

	28[(-1+i1 == 0)]
	25[(-9+i1 == 0 /\ i4 < 0)]
	30[(-1+it74 >= 0 /\ 12-i1 >= 0 /\ i6-100*it74 >= 0 /\ -12+i1 >= 0)]
	
	Blocked

	{}
	{26[T], 29[T], 31[T]}
	{12[T]}
	{30[T]}
	
Step with 27

	Trace

	28[(-1+i1 == 0)]
	25[(-9+i1 == 0 /\ i4 < 0)]
	30[(-1+it74 >= 0 /\ 12-i1 >= 0 /\ i6-100*it74 >= 0 /\ -12+i1 >= 0)]
	27[(-12+i1 == 0 /\ -100+i6 >= 0)]
	
	Blocked

	{}
	{26[T], 29[T], 31[T]}
	{12[T]}
	{30[T]}
	{}
	
Covered

	Trace

	28[(-1+i1 == 0)]
	25[(-9+i1 == 0 /\ i4 < 0)]
	30[(-1+it74 >= 0 /\ 12-i1 >= 0 /\ i6-100*it74 >= 0 /\ -12+i1 >= 0)]
	
	Blocked

	{}
	{26[T], 29[T], 31[T]}
	{12[T]}
	{27[T], 30[T]}
	
Step with 12

	Trace

	28[(-1+i1 == 0)]
	25[(-9+i1 == 0 /\ i4 < 0)]
	30[(-1+it74 >= 0 /\ 12-i1 >= 0 /\ i6-100*it74 >= 0 /\ -12+i1 >= 0)]
	12[(-12+i1 == 0 /\ -100+i6 < 0)]
	
	Blocked

	{}
	{26[T], 29[T], 31[T]}
	{12[T]}
	{27[T], 30[T]}
	{}
	
Covered

	Trace

	28[(-1+i1 == 0)]
	25[(-9+i1 == 0 /\ i4 < 0)]
	30[(-1+it74 >= 0 /\ 12-i1 >= 0 /\ i6-100*it74 >= 0 /\ -12+i1 >= 0)]
	
	Blocked

	{}
	{26[T], 29[T], 31[T]}
	{12[T]}
	{12[T], 27[T], 30[T]}
	
Backtrack

	Trace

	28[(-1+i1 == 0)]
	25[(-9+i1 == 0 /\ i4 < 0)]
	
	Blocked

	{}
	{26[T], 29[T], 31[T]}
	{12[T], 30[T]}
	
Step with 27

	Trace

	28[(-1+i1 == 0)]
	25[(-9+i1 == 0 /\ i4 < 0)]
	27[(-12+i1 == 0 /\ -100+i6 >= 0)]
	
	Blocked

	{}
	{26[T], 29[T], 31[T]}
	{12[T], 30[T]}
	{}
	
Covered

	Trace

	28[(-1+i1 == 0)]
	25[(-9+i1 == 0 /\ i4 < 0)]
	
	Blocked

	{}
	{26[T], 29[T], 31[T]}
	{12[T], 27[T], 30[T]}
	
Backtrack

	Trace

	28[(-1+i1 == 0)]
	
	Blocked

	{}
	{25[T], 26[T], 29[T], 31[T]}
	
Backtrack

	Trace

	Blocked

	{28[T]}
	
Accept

Poly(n^1)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄, X₅
  Temp_Vars:  
  Locations:  l0, l1, l10, l11, l12, l13, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃, X₄, X₅) → l2(X₀, X₁, X₂, X₃, X₄, X₅)
  t₃: l1(X₀, X₁, X₂, X₃, X₄, X₅) → l4(X₀, X₁, X₂, X₃, X₄, X₅)
  t₁₄: l10(X₀, X₁, X₂, X₃, X₄, X₅) → l13(X₀, X₁, X₂, X₃, X₄, X₅)
  t₁₁: l11(X₀, X₁, X₂, X₃, X₄, X₅) → l12(X₀, X₁, X₂, X₃, X₄, X₅) :|: 100 ≤ X₂
  t₁₂: l11(X₀, X₁, X₂, X₃, X₄, X₅) → l8(X₃, X₂, X₂, X₃, X₄, X₅) :|: X₂ ≤ 99
  t₁₃: l12(X₀, X₁, X₂, X₃, X₄, X₅) → l11(X₀, X₁, X₂-100, X₃, X₄, X₅)
  t₁: l2(X₀, X₁, X₂, X₃, X₄, X₅) → l3(X₀, X₁, X₂, X₃, X₄, X₅)
  t₂: l3(X₀, X₁, X₂, X₃, X₄, X₅) → l1(X₀, X₁, X₂, X₃, X₄, X₅)
  t₄: l4(X₀, X₁, X₂, X₃, X₄, X₅) → l5(X₀, X₁, X₂, X₃, X₄, X₅)
  t₅: l5(X₀, X₁, X₂, X₃, X₄, X₅) → l6(X₀, X₁, X₂, X₃, X₄, X₅)
  t₆: l6(X₀, X₁, X₂, X₃, X₄, X₅) → l7(X₀, X₁, X₂, X₃, X₄, X₅)
  t₇: l7(X₀, X₁, X₂, X₃, X₄, X₅) → l8(X₄, X₅, X₂, X₃, X₄, X₅)
  t₉: l8(X₀, X₁, X₂, X₃, X₄, X₅) → l10(X₀, X₁, X₂, X₃, X₄, X₅) :|: 0 ≤ X₀
  t₈: l8(X₀, X₁, X₂, X₃, X₄, X₅) → l9(X₀, X₁, X₂, X₃, X₄, X₅) :|: 1+X₀ ≤ 0
  t₁₀: l9(X₀, X₁, X₂, X₃, X₄, X₅) → l11(X₀, X₁, 1000+X₁, 1+X₀, X₄, X₅)


Preprocessing
  Found invariant 1+X₄ ≤ 0 ∧ 1+X₄ ≤ X₃ ∧ 1+X₃+X₄ ≤ 0 ∧ X₄ ≤ X₀ ∧ 2+X₀+X₄ ≤ 0 ∧ X₃ ≤ 0 ∧ X₃ ≤ 1+X₀ ∧ 1+X₀+X₃ ≤ 0 ∧ 1+X₀ ≤ X₃ ∧ X₂ ≤ 1000+X₁ ∧ 1+X₀ ≤ 0 for location l11


  Found invariant 1+X₄ ≤ 0 ∧ 1+X₄ ≤ X₃ ∧ 1+X₃+X₄ ≤ 0 ∧ 101+X₄ ≤ X₂ ∧ X₄ ≤ 899+X₁ ∧ X₄ ≤ X₀ ∧ 2+X₀+X₄ ≤ 0 ∧ X₃ ≤ 0 ∧ 100+X₃ ≤ X₂ ∧ X₃ ≤ 900+X₁ ∧ X₃ ≤ 1+X₀ ∧ 1+X₀+X₃ ≤ 0 ∧ 1+X₀ ≤ X₃ ∧ X₂ ≤ 1000+X₁ ∧ 100 ≤ X₂ ∧ 0 ≤ 800+X₁+X₂ ∧ 101+X₀ ≤ X₂ ∧ 0 ≤ 900+X₁ ∧ X₀ ≤ 899+X₁ ∧ 1+X₀ ≤ 0 for location l12


  Found invariant X₄ ≤ X₀ ∧ 0 ≤ X₀ for location l13


  Found invariant X₄ ≤ X₀ for location l8


  Found invariant X₄ ≤ X₀ ∧ 0 ≤ X₀ for location l10


  Found invariant 1+X₄ ≤ 0 ∧ X₄ ≤ X₀ ∧ 2+X₀+X₄ ≤ 0 ∧ 1+X₀ ≤ 0 for location l9


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃, X₄, X₅
  Temp_Vars:  
  Locations:  l0, l1, l10, l11, l12, l13, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃, X₄, X₅) → l2(X₀, X₁, X₂, X₃, X₄, X₅)
  t₃: l1(X₀, X₁, X₂, X₃, X₄, X₅) → l4(X₀, X₁, X₂, X₃, X₄, X₅)
  t₁₄: l10(X₀, X₁, X₂, X₃, X₄, X₅) → l13(X₀, X₁, X₂, X₃, X₄, X₅) :|: 0 ≤ X₀ ∧ X₄ ≤ X₀
  t₁₁: l11(X₀, X₁, X₂, X₃, X₄, X₅) → l12(X₀, X₁, X₂, X₃, X₄, X₅) :|: 100 ≤ X₂ ∧ X₂ ≤ 1000+X₁ ∧ X₃ ≤ 1+X₀ ∧ 1+X₀ ≤ 0 ∧ 1+X₀ ≤ X₃ ∧ 1+X₀+X₃ ≤ 0 ∧ 1+X₄ ≤ X₃ ∧ 1+X₃+X₄ ≤ 0 ∧ 1+X₄ ≤ 0 ∧ 2+X₀+X₄ ≤ 0 ∧ X₄ ≤ X₀ ∧ X₃ ≤ 0
  t₁₂: l11(X₀, X₁, X₂, X₃, X₄, X₅) → l8(X₃, X₂, X₂, X₃, X₄, X₅) :|: X₂ ≤ 99 ∧ X₂ ≤ 1000+X₁ ∧ X₃ ≤ 1+X₀ ∧ 1+X₀ ≤ 0 ∧ 1+X₀ ≤ X₃ ∧ 1+X₀+X₃ ≤ 0 ∧ 1+X₄ ≤ X₃ ∧ 1+X₃+X₄ ≤ 0 ∧ 1+X₄ ≤ 0 ∧ 2+X₀+X₄ ≤ 0 ∧ X₄ ≤ X₀ ∧ X₃ ≤ 0
  t₁₃: l12(X₀, X₁, X₂, X₃, X₄, X₅) → l11(X₀, X₁, X₂-100, X₃, X₄, X₅) :|: X₂ ≤ 1000+X₁ ∧ 0 ≤ 900+X₁ ∧ X₃ ≤ 900+X₁ ∧ X₀ ≤ 899+X₁ ∧ X₄ ≤ 899+X₁ ∧ 0 ≤ 800+X₁+X₂ ∧ X₃ ≤ 1+X₀ ∧ 1+X₀ ≤ 0 ∧ 1+X₀ ≤ X₃ ∧ 1+X₀+X₃ ≤ 0 ∧ 1+X₄ ≤ X₃ ∧ 1+X₃+X₄ ≤ 0 ∧ 1+X₄ ≤ 0 ∧ 2+X₀+X₄ ≤ 0 ∧ 100 ≤ X₂ ∧ 100+X₃ ≤ X₂ ∧ 101+X₀ ≤ X₂ ∧ 101+X₄ ≤ X₂ ∧ X₄ ≤ X₀ ∧ X₃ ≤ 0
  t₁: l2(X₀, X₁, X₂, X₃, X₄, X₅) → l3(X₀, X₁, X₂, X₃, X₄, X₅)
  t₂: l3(X₀, X₁, X₂, X₃, X₄, X₅) → l1(X₀, X₁, X₂, X₃, X₄, X₅)
  t₄: l4(X₀, X₁, X₂, X₃, X₄, X₅) → l5(X₀, X₁, X₂, X₃, X₄, X₅)
  t₅: l5(X₀, X₁, X₂, X₃, X₄, X₅) → l6(X₀, X₁, X₂, X₃, X₄, X₅)
  t₆: l6(X₀, X₁, X₂, X₃, X₄, X₅) → l7(X₀, X₁, X₂, X₃, X₄, X₅)
  t₇: l7(X₀, X₁, X₂, X₃, X₄, X₅) → l8(X₄, X₅, X₂, X₃, X₄, X₅)
  t₉: l8(X₀, X₁, X₂, X₃, X₄, X₅) → l10(X₀, X₁, X₂, X₃, X₄, X₅) :|: 0 ≤ X₀ ∧ X₄ ≤ X₀
  t₈: l8(X₀, X₁, X₂, X₃, X₄, X₅) → l9(X₀, X₁, X₂, X₃, X₄, X₅) :|: 1+X₀ ≤ 0 ∧ X₄ ≤ X₀
  t₁₀: l9(X₀, X₁, X₂, X₃, X₄, X₅) → l11(X₀, X₁, 1000+X₁, 1+X₀, X₄, X₅) :|: 1+X₀ ≤ 0 ∧ 1+X₄ ≤ 0 ∧ 2+X₀+X₄ ≤ 0 ∧ X₄ ≤ X₀


MPRF for transition t₈: l8(X₀, X₁, X₂, X₃, X₄, X₅) → l9(X₀, X₁, X₂, X₃, X₄, X₅) :|: 1+X₀ ≤ 0 ∧ X₄ ≤ X₀ of depth 1:
  new bound:
    X₄ {O(n)}

  MPRF:
    • l11: [-X₃]
    • l12: [-X₃]
    • l8: [-X₀]
    • l9: [-1-X₀]




MPRF for transition t₁₀: l9(X₀, X₁, X₂, X₃, X₄, X₅) → l11(X₀, X₁, 1000+X₁, 1+X₀, X₄, X₅) :|: 1+X₀ ≤ 0 ∧ 1+X₄ ≤ 0 ∧ 2+X₀+X₄ ≤ 0 ∧ X₄ ≤ X₀ of depth 1:
  new bound:
    X₄ {O(n)}

  MPRF:
    • l11: [-1-X₀]
    • l12: [-1-X₀]
    • l8: [-X₀]
    • l9: [-X₀]




MPRF for transition t₁₁: l11(X₀, X₁, X₂, X₃, X₄, X₅) → l12(X₀, X₁, X₂, X₃, X₄, X₅) :|: 100 ≤ X₂ ∧ X₂ ≤ 1000+X₁ ∧ X₃ ≤ 1+X₀ ∧ 1+X₀ ≤ 0 ∧ 1+X₀ ≤ X₃ ∧ 1+X₀+X₃ ≤ 0 ∧ 1+X₄ ≤ X₃ ∧ 1+X₃+X₄ ≤ 0 ∧ 1+X₄ ≤ 0 ∧ 2+X₀+X₄ ≤ 0 ∧ X₄ ≤ X₀ ∧ X₃ ≤ 0 of depth 1:
  new bound:
    1000⋅X₄+X₅+99 {O(n)}

  MPRF:
    • l11: [X₂-99-1000⋅X₃]
    • l12: [X₂-100-1000⋅X₃]
    • l8: [X₁-99-1000⋅X₀]
    • l9: [X₁-99-1000⋅X₀]




MPRF for transition t₁₂: l11(X₀, X₁, X₂, X₃, X₄, X₅) → l8(X₃, X₂, X₂, X₃, X₄, X₅) :|: X₂ ≤ 99 ∧ X₂ ≤ 1000+X₁ ∧ X₃ ≤ 1+X₀ ∧ 1+X₀ ≤ 0 ∧ 1+X₀ ≤ X₃ ∧ 1+X₀+X₃ ≤ 0 ∧ 1+X₄ ≤ X₃ ∧ 1+X₃+X₄ ≤ 0 ∧ 1+X₄ ≤ 0 ∧ 2+X₀+X₄ ≤ 0 ∧ X₄ ≤ X₀ ∧ X₃ ≤ 0 of depth 1:
  new bound:
    X₄ {O(n)}

  MPRF:
    • l11: [-X₀]
    • l12: [-X₀]
    • l8: [-X₀]
    • l9: [-X₀]




MPRF for transition t₁₃: l12(X₀, X₁, X₂, X₃, X₄, X₅) → l11(X₀, X₁, X₂-100, X₃, X₄, X₅) :|: X₂ ≤ 1000+X₁ ∧ 0 ≤ 900+X₁ ∧ X₃ ≤ 900+X₁ ∧ X₀ ≤ 899+X₁ ∧ X₄ ≤ 899+X₁ ∧ 0 ≤ 800+X₁+X₂ ∧ X₃ ≤ 1+X₀ ∧ 1+X₀ ≤ 0 ∧ 1+X₀ ≤ X₃ ∧ 1+X₀+X₃ ≤ 0 ∧ 1+X₄ ≤ X₃ ∧ 1+X₃+X₄ ≤ 0 ∧ 1+X₄ ≤ 0 ∧ 2+X₀+X₄ ≤ 0 ∧ 100 ≤ X₂ ∧ 100+X₃ ≤ X₂ ∧ 101+X₀ ≤ X₂ ∧ 101+X₄ ≤ X₂ ∧ X₄ ≤ X₀ ∧ X₃ ≤ 0 of depth 1:
  new bound:
    1000⋅X₄+X₅+99 {O(n)}

  MPRF:
    • l11: [X₂-1099-1000⋅X₀]
    • l12: [X₂-1099-1000⋅X₀]
    • l8: [X₁-99-1000⋅X₀]
    • l9: [X₁-99-1000⋅X₀]




All Bounds
Timebounds
  Overall timebound:2⋅X₅+2003⋅X₄+208 {O(n)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: 1 {O(1)}
    t₈: X₄ {O(n)}
    t₉: 1 {O(1)}
    t₁₀: X₄ {O(n)}
    t₁₁: 1000⋅X₄+X₅+99 {O(n)}
    t₁₂: X₄ {O(n)}
    t₁₃: 1000⋅X₄+X₅+99 {O(n)}
    t₁₄: 1 {O(1)}


Costbounds
  Overall costbound: 2⋅X₅+2003⋅X₄+208 {O(n)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: 1 {O(1)}
    t₇: 1 {O(1)}
    t₈: X₄ {O(n)}
    t₉: 1 {O(1)}
    t₁₀: X₄ {O(n)}
    t₁₁: 1000⋅X₄+X₅+99 {O(n)}
    t₁₂: X₄ {O(n)}
    t₁₃: 1000⋅X₄+X₅+99 {O(n)}
    t₁₄: 1 {O(1)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₀, X₂: X₂ {O(n)}
    t₀, X₃: X₃ {O(n)}
    t₀, X₄: X₄ {O(n)}
    t₀, X₅: X₅ {O(n)}
    t₁, X₀: X₀ {O(n)}
    t₁, X₁: X₁ {O(n)}
    t₁, X₂: X₂ {O(n)}
    t₁, X₃: X₃ {O(n)}
    t₁, X₄: X₄ {O(n)}
    t₁, X₅: X₅ {O(n)}
    t₂, X₀: X₀ {O(n)}
    t₂, X₁: X₁ {O(n)}
    t₂, X₂: X₂ {O(n)}
    t₂, X₃: X₃ {O(n)}
    t₂, X₄: X₄ {O(n)}
    t₂, X₅: X₅ {O(n)}
    t₃, X₀: X₀ {O(n)}
    t₃, X₁: X₁ {O(n)}
    t₃, X₂: X₂ {O(n)}
    t₃, X₃: X₃ {O(n)}
    t₃, X₄: X₄ {O(n)}
    t₃, X₅: X₅ {O(n)}
    t₄, X₀: X₀ {O(n)}
    t₄, X₁: X₁ {O(n)}
    t₄, X₂: X₂ {O(n)}
    t₄, X₃: X₃ {O(n)}
    t₄, X₄: X₄ {O(n)}
    t₄, X₅: X₅ {O(n)}
    t₅, X₀: X₀ {O(n)}
    t₅, X₁: X₁ {O(n)}
    t₅, X₂: X₂ {O(n)}
    t₅, X₃: X₃ {O(n)}
    t₅, X₄: X₄ {O(n)}
    t₅, X₅: X₅ {O(n)}
    t₆, X₀: X₀ {O(n)}
    t₆, X₁: X₁ {O(n)}
    t₆, X₂: X₂ {O(n)}
    t₆, X₃: X₃ {O(n)}
    t₆, X₄: X₄ {O(n)}
    t₆, X₅: X₅ {O(n)}
    t₇, X₀: X₄ {O(n)}
    t₇, X₁: X₅ {O(n)}
    t₇, X₂: X₂ {O(n)}
    t₇, X₃: X₃ {O(n)}
    t₇, X₄: X₄ {O(n)}
    t₇, X₅: X₅ {O(n)}
    t₈, X₀: X₄ {O(n)}
    t₈, X₁: 1000⋅X₄+X₅ {O(n)}
    t₈, X₂: 2⋅X₅+2000⋅X₄+X₂ {O(n)}
    t₈, X₃: 2⋅X₄+X₃ {O(n)}
    t₈, X₄: X₄ {O(n)}
    t₈, X₅: X₅ {O(n)}
    t₉, X₀: 2⋅X₄ {O(n)}
    t₉, X₁: 1000⋅X₄+2⋅X₅ {O(n)}
    t₉, X₂: 2⋅X₅+2000⋅X₄+X₂ {O(n)}
    t₉, X₃: 2⋅X₄+X₃ {O(n)}
    t₉, X₄: 2⋅X₄ {O(n)}
    t₉, X₅: 2⋅X₅ {O(n)}
    t₁₀, X₀: X₄ {O(n)}
    t₁₀, X₁: 1000⋅X₄+X₅ {O(n)}
    t₁₀, X₂: 1000⋅X₄+X₅ {O(n)}
    t₁₀, X₃: X₄ {O(n)}
    t₁₀, X₄: X₄ {O(n)}
    t₁₀, X₅: X₅ {O(n)}
    t₁₁, X₀: X₄ {O(n)}
    t₁₁, X₁: 1000⋅X₄+X₅ {O(n)}
    t₁₁, X₂: 1000⋅X₄+X₅ {O(n)}
    t₁₁, X₃: X₄ {O(n)}
    t₁₁, X₄: X₄ {O(n)}
    t₁₁, X₅: X₅ {O(n)}
    t₁₂, X₀: X₄ {O(n)}
    t₁₂, X₁: 1000⋅X₄+X₅ {O(n)}
    t₁₂, X₂: 2⋅X₅+2000⋅X₄ {O(n)}
    t₁₂, X₃: 2⋅X₄ {O(n)}
    t₁₂, X₄: X₄ {O(n)}
    t₁₂, X₅: X₅ {O(n)}
    t₁₃, X₀: X₄ {O(n)}
    t₁₃, X₁: 1000⋅X₄+X₅ {O(n)}
    t₁₃, X₂: 1000⋅X₄+X₅ {O(n)}
    t₁₃, X₃: X₄ {O(n)}
    t₁₃, X₄: X₄ {O(n)}
    t₁₃, X₅: X₅ {O(n)}
    t₁₄, X₀: 2⋅X₄ {O(n)}
    t₁₄, X₁: 1000⋅X₄+2⋅X₅ {O(n)}
    t₁₄, X₂: 2⋅X₅+2000⋅X₄+X₂ {O(n)}
    t₁₄, X₃: 2⋅X₄+X₃ {O(n)}
    t₁₄, X₄: 2⋅X₄ {O(n)}
    t₁₄, X₅: 2⋅X₅ {O(n)}

