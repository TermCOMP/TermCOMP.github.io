WORST_CASE(Omega(n^1),O(n^1))

# LoAT Proof:
WORST_CASE(Omega(n^1),?)

WORST_CASE(Omega(n^1),?)
Initial ITS

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_bb1_in -> 7
eval_start_bb2_in -> 8
eval_start_bb3_in -> 9
eval_start_bb4_in -> 10
eval_start_bb5_in -> 11
eval_start_stop -> 12

Rules:
   0: -1+i1 == 0 /\ i1'=2, i3'=1+i3
   1: -2+i1 == 0 /\ i1'=3, i3'=1+i3
   2: -3+i1 == 0 /\ i1'=4, i3'=1+i3
   3: -4+i1 == 0 /\ i1'=5, i3'=1+i3
   4: -5+i1 == 0 /\ i1'=6, i3'=1+i3
   5: -6+i1 == 0 /\ i1'=7, i3'=1+i3, i4'=i6
   6: (i7-i4 > 0 /\ -7+i1 == 0) /\ i1'=8, i3'=1+i3
   7: (i7-i4 <= 0 /\ -7+i1 == 0) /\ i1'=9, i3'=1+i3, i5'=i4
   8: -8+i1 == 0 /\ i1'=7, i3'=1+i3, i4'=1+i4
   9: (-9+i1 == 0 /\ -2+i5 > 0) /\ i1'=10, i3'=1+i3
  10: (-9+i1 == 0 /\ -2+i5 <= 0) /\ i1'=11, i3'=1+i3
  11: -10+i1 == 0 /\ i1'=9, i3'=1+i3, i5'=-3+i5
  12: -11+i1 == 0 /\ i1'=12, i3'=1+i3

Dependency graph:
0 -> 1
1 -> 2
2 -> 3
3 -> 4
4 -> 5
5 -> 6, 5 -> 7
6 -> 8
7 -> 9, 7 -> 10
8 -> 6, 8 -> 7
9 -> 11
10 -> 12
11 -> 9, 11 -> 10

Chained Linear Paths

	Applied Chaining

	First rule:
	-1+i1 == 0 /\ i1'=2, i3'=1+i3
	Second rule:
	-2+i1 == 0 /\ i1'=3, i3'=1+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 0, 1
	
	Applied Chaining

	First rule:
	-3+i1 == 0 /\ i1'=4, i3'=1+i3
	Second rule:
	-4+i1 == 0 /\ i1'=5, i3'=1+i3
	New rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 2, 3
	
	Applied Chaining

	First rule:
	-5+i1 == 0 /\ i1'=6, i3'=1+i3
	Second rule:
	-6+i1 == 0 /\ i1'=7, i3'=1+i3, i4'=i6
	New rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=7, i3'=2+i3, i4'=i6
	
	Applied Deletion

	Removed the following rules: 4, 5
	
	Applied Chaining

	First rule:
	(i7-i4 > 0 /\ -7+i1 == 0) /\ i1'=8, i3'=1+i3
	Second rule:
	-8+i1 == 0 /\ i1'=7, i3'=1+i3, i4'=1+i4
	New rule:
	(0 == 0 /\ i7-i4 > 0 /\ -7+i1 == 0) /\ i1'=7, i3'=2+i3, i4'=1+i4
	
	Applied Deletion

	Removed the following rules: 6, 8
	
	Applied Chaining

	First rule:
	(-9+i1 == 0 /\ -2+i5 > 0) /\ i1'=10, i3'=1+i3
	Second rule:
	-10+i1 == 0 /\ i1'=9, i3'=1+i3, i5'=-3+i5
	New rule:
	(0 == 0 /\ -9+i1 == 0 /\ -2+i5 > 0) /\ i1'=9, i3'=2+i3, i5'=-3+i5
	
	Applied Deletion

	Removed the following rules: 9, 11
	
	Applied Chaining

	First rule:
	(-9+i1 == 0 /\ -2+i5 <= 0) /\ i1'=11, i3'=1+i3
	Second rule:
	-11+i1 == 0 /\ i1'=12, i3'=1+i3
	New rule:
	(0 == 0 /\ -9+i1 == 0 /\ -2+i5 <= 0) /\ i1'=12, i3'=2+i3
	
	Applied Deletion

	Removed the following rules: 10, 12
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=3, i3'=2+i3
	Second rule:
	(0 == 0 /\ -3+i1 == 0) /\ i1'=5, i3'=2+i3
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	
	Applied Deletion

	Removed the following rules: 13, 14
	
	Applied Chaining

	First rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=5, i3'=4+i3
	Second rule:
	(0 == 0 /\ -5+i1 == 0) /\ i1'=7, i3'=2+i3, i4'=i6
	New rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=7, i3'=6+i3, i4'=i6
	
	Applied Deletion

	Removed the following rules: 15, 19

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_bb1_in -> 7
eval_start_bb2_in -> 8
eval_start_bb3_in -> 9
eval_start_bb4_in -> 10
eval_start_bb5_in -> 11
eval_start_stop -> 12

Rules:
   7: (i7-i4 <= 0 /\ -7+i1 == 0) /\ i1'=9, i3'=1+i3, i5'=i4
  16: (0 == 0 /\ i7-i4 > 0 /\ -7+i1 == 0) /\ i1'=7, i3'=2+i3, i4'=1+i4
  17: (0 == 0 /\ -9+i1 == 0 /\ -2+i5 > 0) /\ i1'=9, i3'=2+i3, i5'=-3+i5
  18: (0 == 0 /\ -9+i1 == 0 /\ -2+i5 <= 0) /\ i1'=12, i3'=2+i3
  20: (0 == 0 /\ -1+i1 == 0) /\ i1'=7, i3'=6+i3, i4'=i6

Dependency graph:
7 -> 17, 7 -> 18
16 -> 7, 16 -> 16
17 -> 17, 17 -> 18
20 -> 7, 20 -> 16

Preprocessed Transitions

	Simplified Guard

	Original rule:
	(0 == 0 /\ i7-i4 > 0 /\ -7+i1 == 0) /\ i1'=7, i3'=2+i3, i4'=1+i4
	New rule:
	(i7-i4 > 0 /\ -7+i1 == 0) /\ i1'=7, i3'=2+i3, i4'=1+i4
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -9+i1 == 0 /\ -2+i5 > 0) /\ i1'=9, i3'=2+i3, i5'=-3+i5
	New rule:
	(-9+i1 == 0 /\ -2+i5 > 0) /\ i1'=9, i3'=2+i3, i5'=-3+i5
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -9+i1 == 0 /\ -2+i5 <= 0) /\ i1'=12, i3'=2+i3
	New rule:
	(-9+i1 == 0 /\ -2+i5 <= 0) /\ i1'=12, i3'=2+i3
	
	Simplified Guard

	Original rule:
	(0 == 0 /\ -1+i1 == 0) /\ i1'=7, i3'=6+i3, i4'=i6
	New rule:
	-1+i1 == 0 /\ i1'=7, i3'=6+i3, i4'=i6

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_bb1_in -> 7
eval_start_bb2_in -> 8
eval_start_bb3_in -> 9
eval_start_bb4_in -> 10
eval_start_bb5_in -> 11
eval_start_stop -> 12

Rules:
   7: (i7-i4 <= 0 /\ -7+i1 == 0) /\ i1'=9, i3'=1+i3, i5'=i4
  21: (i7-i4 > 0 /\ -7+i1 == 0) /\ i1'=7, i3'=2+i3, i4'=1+i4
  22: (-9+i1 == 0 /\ -2+i5 > 0) /\ i1'=9, i3'=2+i3, i5'=-3+i5
  23: (-9+i1 == 0 /\ -2+i5 <= 0) /\ i1'=12, i3'=2+i3
  24: -1+i1 == 0 /\ i1'=7, i3'=6+i3, i4'=i6

Dependency graph:
7 -> 22, 7 -> 23
21 -> 7, 21 -> 21
22 -> 22, 22 -> 23
24 -> 7, 24 -> 21

Step with 24

	Trace

	24[(-1+i1 == 0)]
	
	Blocked

	{}
	{}
	
Step with 21

	Trace

	24[(-1+i1 == 0)]
	21[(i7-i4 > 0 /\ -7+i1 == 0)]
	
	Blocked

	{}
	{}
	{}
	
Poly(n^1)

Accelerate

	Loop Acceleration

	Original rule:
	(i7-i4 > 0 /\ -7+i1 == 0) /\ i1'=7, i3'=2+i3, i4'=1+i4
	New rule:
	(1+i7-i4-it13 > 0 /\ -1+it13 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0) /\ i1'=i1, i3'=i3+2*it13, i4'=i4+it13

		i7-i4 > 0 [0]: montonic decrease yields 1+i7-i4-it13 > 0
		
		-7+i1 >= 0 [0]: unchanged
		
		7-i1 >= 0 [0]: unchanged
		
		Replacement map: {i7-i4 > 0 -> 1+i7-i4-it13 > 0, -7+i1 >= 0 -> -7+i1 >= 0, 7-i1 >= 0 -> 7-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(1+i7-i4-it13 > 0 /\ -1+it13 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0) /\ i1'=i1, i3'=i3+2*it13, i4'=i4+it13
	New rule:
	(1+i7-i4-it13 > 0 /\ -1+it13 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0) /\ i3'=i3+2*it13, i4'=i4+it13
	
	Instantiation

	Original rule:
	(1+i7-i4-it13 > 0 /\ -1+it13 >= 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0) /\ i3'=i3+2*it13, i4'=i4+it13
	New rule:
	(1 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ -1+i7-i4 >= 0) /\ i3'=i3+2*i7-2*i4, i4'=i7

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_bb1_in -> 7
eval_start_bb2_in -> 8
eval_start_bb3_in -> 9
eval_start_bb4_in -> 10
eval_start_bb5_in -> 11
eval_start_stop -> 12

Rules:
   7: (i7-i4 <= 0 /\ -7+i1 == 0) /\ i1'=9, i3'=1+i3, i5'=i4
  21: (i7-i4 > 0 /\ -7+i1 == 0) /\ i1'=7, i3'=2+i3, i4'=1+i4
  22: (-9+i1 == 0 /\ -2+i5 > 0) /\ i1'=9, i3'=2+i3, i5'=-3+i5
  23: (-9+i1 == 0 /\ -2+i5 <= 0) /\ i1'=12, i3'=2+i3
  24: -1+i1 == 0 /\ i1'=7, i3'=6+i3, i4'=i6
  25: (1 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ -1+i7-i4 >= 0) /\ i3'=i3+2*i7-2*i4, i4'=i7

Dependency graph:
7 -> 22, 7 -> 23
21 -> 7, 21 -> 21, 21 -> 25
22 -> 22, 22 -> 23
24 -> 7, 24 -> 21, 24 -> 25
25 -> 7, 25 -> 21

	Trace

	24[(-1+i1 == 0)]
	25[(1 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ -1+i7-i4 >= 0)]
	
	Blocked

	{}
	{}
	{21[T], 25[T]}
	
Step with 7

	Trace

	24[(-1+i1 == 0)]
	25[(1 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ -1+i7-i4 >= 0)]
	7[(i7-i4 <= 0 /\ -7+i1 == 0)]
	
	Blocked

	{}
	{}
	{21[T], 25[T]}
	{}
	
Step with 22

	Trace

	24[(-1+i1 == 0)]
	25[(1 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ -1+i7-i4 >= 0)]
	7[(i7-i4 <= 0 /\ -7+i1 == 0)]
	22[(-9+i1 == 0 /\ -2+i5 > 0)]
	
	Blocked

	{}
	{}
	{21[T], 25[T]}
	{}
	{}
	
Accelerate

	Loop Acceleration

	Original rule:
	(-9+i1 == 0 /\ -2+i5 > 0) /\ i1'=9, i3'=2+i3, i5'=-3+i5
	New rule:
	(-9+i1 >= 0 /\ 1-3*it40+i5 > 0 /\ 9-i1 >= 0 /\ -1+it40 >= 0) /\ i1'=i1, i3'=2*it40+i3, i5'=-3*it40+i5

		-9+i1 >= 0 [0]: unchanged
		
		-2+i5 > 0 [0]: montonic decrease yields 1-3*it40+i5 > 0
		
		9-i1 >= 0 [0]: unchanged
		
		Replacement map: {-9+i1 >= 0 -> -9+i1 >= 0, -2+i5 > 0 -> 1-3*it40+i5 > 0, 9-i1 >= 0 -> 9-i1 >= 0}

	Removed Trivial Updates

	Original rule:
	(-9+i1 >= 0 /\ 1-3*it40+i5 > 0 /\ 9-i1 >= 0 /\ -1+it40 >= 0) /\ i1'=i1, i3'=2*it40+i3, i5'=-3*it40+i5
	New rule:
	(-9+i1 >= 0 /\ 1-3*it40+i5 > 0 /\ 9-i1 >= 0 /\ -1+it40 >= 0) /\ i3'=2*it40+i3, i5'=-3*it40+i5

Start location: eval_start_start

Location map:
LoAT_sink -> 0
eval_start_start -> 1
eval_start_bb0_in -> 2
eval_start_0 -> 3
eval_start_1 -> 4
eval_start_2 -> 5
eval_start_3 -> 6
eval_start_bb1_in -> 7
eval_start_bb2_in -> 8
eval_start_bb3_in -> 9
eval_start_bb4_in -> 10
eval_start_bb5_in -> 11
eval_start_stop -> 12

Rules:
   7: (i7-i4 <= 0 /\ -7+i1 == 0) /\ i1'=9, i3'=1+i3, i5'=i4
  21: (i7-i4 > 0 /\ -7+i1 == 0) /\ i1'=7, i3'=2+i3, i4'=1+i4
  22: (-9+i1 == 0 /\ -2+i5 > 0) /\ i1'=9, i3'=2+i3, i5'=-3+i5
  23: (-9+i1 == 0 /\ -2+i5 <= 0) /\ i1'=12, i3'=2+i3
  24: -1+i1 == 0 /\ i1'=7, i3'=6+i3, i4'=i6
  25: (1 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ -1+i7-i4 >= 0) /\ i3'=i3+2*i7-2*i4, i4'=i7
  26: (-9+i1 >= 0 /\ 1-3*it40+i5 > 0 /\ 9-i1 >= 0 /\ -1+it40 >= 0) /\ i3'=2*it40+i3, i5'=-3*it40+i5

Dependency graph:
7 -> 22, 7 -> 23, 7 -> 26
21 -> 7, 21 -> 21, 21 -> 25
22 -> 22, 22 -> 23, 22 -> 26
24 -> 7, 24 -> 21, 24 -> 25
25 -> 7, 25 -> 21
26 -> 22, 26 -> 23

	Trace

	24[(-1+i1 == 0)]
	25[(1 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ -1+i7-i4 >= 0)]
	7[(i7-i4 <= 0 /\ -7+i1 == 0)]
	26[(-9+i1 >= 0 /\ 1-3*it40+i5 > 0 /\ 9-i1 >= 0 /\ -1+it40 >= 0)]
	
	Blocked

	{}
	{}
	{21[T], 25[T]}
	{}
	{22[T], 26[T]}
	
Step with 23

	Trace

	24[(-1+i1 == 0)]
	25[(1 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ -1+i7-i4 >= 0)]
	7[(i7-i4 <= 0 /\ -7+i1 == 0)]
	26[(-9+i1 >= 0 /\ 1-3*it40+i5 > 0 /\ 9-i1 >= 0 /\ -1+it40 >= 0)]
	23[(-9+i1 == 0 /\ -2+i5 <= 0)]
	
	Blocked

	{}
	{}
	{21[T], 25[T]}
	{}
	{22[T], 26[T]}
	{}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	25[(1 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ -1+i7-i4 >= 0)]
	7[(i7-i4 <= 0 /\ -7+i1 == 0)]
	26[(-9+i1 >= 0 /\ 1-3*it40+i5 > 0 /\ 9-i1 >= 0 /\ -1+it40 >= 0)]
	
	Blocked

	{}
	{}
	{21[T], 25[T]}
	{}
	{22[T], 23[T], 26[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	25[(1 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ -1+i7-i4 >= 0)]
	7[(i7-i4 <= 0 /\ -7+i1 == 0)]
	
	Blocked

	{}
	{}
	{21[T], 25[T]}
	{26[T]}
	
Step with 23

	Trace

	24[(-1+i1 == 0)]
	25[(1 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ -1+i7-i4 >= 0)]
	7[(i7-i4 <= 0 /\ -7+i1 == 0)]
	23[(-9+i1 == 0 /\ -2+i5 <= 0)]
	
	Blocked

	{}
	{}
	{21[T], 25[T]}
	{26[T]}
	{}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	25[(1 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ -1+i7-i4 >= 0)]
	7[(i7-i4 <= 0 /\ -7+i1 == 0)]
	
	Blocked

	{}
	{}
	{21[T], 25[T]}
	{23[T], 26[T]}
	
Step with 22

	Trace

	24[(-1+i1 == 0)]
	25[(1 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ -1+i7-i4 >= 0)]
	7[(i7-i4 <= 0 /\ -7+i1 == 0)]
	22[(-9+i1 == 0 /\ -2+i5 > 0)]
	
	Blocked

	{}
	{}
	{21[T], 25[T]}
	{23[T], 26[T]}
	{}
	
Covered

	Trace

	24[(-1+i1 == 0)]
	25[(1 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ -1+i7-i4 >= 0)]
	7[(i7-i4 <= 0 /\ -7+i1 == 0)]
	
	Blocked

	{}
	{}
	{21[T], 25[T]}
	{22[T], 23[T], 26[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	25[(1 > 0 /\ -7+i1 >= 0 /\ 7-i1 >= 0 /\ -1+i7-i4 >= 0)]
	
	Blocked

	{}
	{}
	{7[T], 21[T], 25[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	
	Blocked

	{}
	{25[T]}
	
Step with 7

	Trace

	24[(-1+i1 == 0)]
	7[(i7-i4 <= 0 /\ -7+i1 == 0)]
	
	Blocked

	{}
	{25[T]}
	{}
	
Step with 23

	Trace

	24[(-1+i1 == 0)]
	7[(i7-i4 <= 0 /\ -7+i1 == 0)]
	23[(-9+i1 == 0 /\ -2+i5 <= 0)]
	
	Blocked

	{}
	{25[T]}
	{}
	{}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	7[(i7-i4 <= 0 /\ -7+i1 == 0)]
	
	Blocked

	{}
	{25[T]}
	{23[T]}
	
Step with 26

	Trace

	24[(-1+i1 == 0)]
	7[(i7-i4 <= 0 /\ -7+i1 == 0)]
	26[(-9+i1 >= 0 /\ 1-3*it40+i5 > 0 /\ 9-i1 >= 0 /\ -1+it40 >= 0)]
	
	Blocked

	{}
	{25[T]}
	{23[T]}
	{26[T]}
	
Step with 22

	Trace

	24[(-1+i1 == 0)]
	7[(i7-i4 <= 0 /\ -7+i1 == 0)]
	26[(-9+i1 >= 0 /\ 1-3*it40+i5 > 0 /\ 9-i1 >= 0 /\ -1+it40 >= 0)]
	22[(-9+i1 == 0 /\ -2+i5 > 0)]
	
	Blocked

	{}
	{25[T]}
	{23[T]}
	{26[T]}
	{}
	
Covered

	Trace

	24[(-1+i1 == 0)]
	7[(i7-i4 <= 0 /\ -7+i1 == 0)]
	26[(-9+i1 >= 0 /\ 1-3*it40+i5 > 0 /\ 9-i1 >= 0 /\ -1+it40 >= 0)]
	
	Blocked

	{}
	{25[T]}
	{23[T]}
	{22[T], 26[T]}
	
Step with 23

	Trace

	24[(-1+i1 == 0)]
	7[(i7-i4 <= 0 /\ -7+i1 == 0)]
	26[(-9+i1 >= 0 /\ 1-3*it40+i5 > 0 /\ 9-i1 >= 0 /\ -1+it40 >= 0)]
	23[(-9+i1 == 0 /\ -2+i5 <= 0)]
	
	Blocked

	{}
	{25[T]}
	{23[T]}
	{22[T], 26[T]}
	{}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	7[(i7-i4 <= 0 /\ -7+i1 == 0)]
	26[(-9+i1 >= 0 /\ 1-3*it40+i5 > 0 /\ 9-i1 >= 0 /\ -1+it40 >= 0)]
	
	Blocked

	{}
	{25[T]}
	{23[T]}
	{22[T], 23[T], 26[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	7[(i7-i4 <= 0 /\ -7+i1 == 0)]
	
	Blocked

	{}
	{25[T]}
	{23[T], 26[T]}
	
Step with 22

	Trace

	24[(-1+i1 == 0)]
	7[(i7-i4 <= 0 /\ -7+i1 == 0)]
	22[(-9+i1 == 0 /\ -2+i5 > 0)]
	
	Blocked

	{}
	{25[T]}
	{23[T], 26[T]}
	{}
	
Covered

	Trace

	24[(-1+i1 == 0)]
	7[(i7-i4 <= 0 /\ -7+i1 == 0)]
	
	Blocked

	{}
	{25[T]}
	{22[T], 23[T], 26[T]}
	
Backtrack

	Trace

	24[(-1+i1 == 0)]
	
	Blocked

	{}
	{7[T], 25[T]}
	
Step with 21

	Trace

	24[(-1+i1 == 0)]
	21[(i7-i4 > 0 /\ -7+i1 == 0)]
	
	Blocked

	{}
	{7[T], 25[T]}
	{}
	
Covered

	Trace

	24[(-1+i1 == 0)]
	
	Blocked

	{}
	{7[T], 21[T], 25[T]}
	
Backtrack

	Trace

	Blocked

	{24[T]}
	
Accept

Poly(n^1)


Build SHA: 6b55ffa0f2e04038cf304ba1a3fdb6d4d62c77f7

# KoAT Proof:
WORST_CASE(?, O(n^1))


Initial Problem
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃
  Temp_Vars:  
  Locations:  l0, l1, l10, l11, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, X₃)
  t₃: l1(X₀, X₁, X₂, X₃) → l4(X₀, X₁, X₂, X₃)
  t₁₂: l10(X₀, X₁, X₂, X₃) → l11(X₀, X₁, X₂, X₃)
  t₁: l2(X₀, X₁, X₂, X₃) → l3(X₀, X₁, X₂, X₃)
  t₂: l3(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, X₃)
  t₄: l4(X₀, X₁, X₂, X₃) → l5(X₀, X₁, X₂, X₃)
  t₅: l5(X₀, X₁, X₂, X₃) → l6(X₂, X₁, X₂, X₃)
  t₆: l6(X₀, X₁, X₂, X₃) → l7(X₀, X₁, X₂, X₃) :|: 1+X₀ ≤ X₃
  t₇: l6(X₀, X₁, X₂, X₃) → l8(X₀, X₀, X₂, X₃) :|: X₃ ≤ X₀
  t₈: l7(X₀, X₁, X₂, X₃) → l6(1+X₀, X₁, X₂, X₃)
  t₁₀: l8(X₀, X₁, X₂, X₃) → l10(X₀, X₁, X₂, X₃) :|: X₁ ≤ 2
  t₉: l8(X₀, X₁, X₂, X₃) → l9(X₀, X₁, X₂, X₃) :|: 3 ≤ X₁
  t₁₁: l9(X₀, X₁, X₂, X₃) → l8(X₀, X₁-3, X₂, X₃)


Preprocessing
  Found invariant X₃ ≤ X₀ ∧ X₂ ≤ X₀ ∧ X₁ ≤ 2 ∧ X₁ ≤ X₀ for location l11


  Found invariant X₂ ≤ X₀ for location l6


  Found invariant 1+X₂ ≤ X₃ ∧ 1+X₀ ≤ X₃ ∧ X₂ ≤ X₀ for location l7


  Found invariant X₃ ≤ X₀ ∧ X₂ ≤ X₀ ∧ X₁ ≤ X₀ for location l8


  Found invariant X₃ ≤ X₀ ∧ X₂ ≤ X₀ ∧ X₁ ≤ 2 ∧ X₁ ≤ X₀ for location l10


  Found invariant X₃ ≤ X₀ ∧ X₂ ≤ X₀ ∧ X₁ ≤ X₀ ∧ 3 ≤ X₁ ∧ 6 ≤ X₀+X₁ ∧ 3 ≤ X₀ for location l9


Problem after Preprocessing
  Start:  l0
  Program_Vars:  X₀, X₁, X₂, X₃
  Temp_Vars:  
  Locations:  l0, l1, l10, l11, l2, l3, l4, l5, l6, l7, l8, l9
  Return Locations:  
  Transitions:
  t₀: l0(X₀, X₁, X₂, X₃) → l2(X₀, X₁, X₂, X₃)
  t₃: l1(X₀, X₁, X₂, X₃) → l4(X₀, X₁, X₂, X₃)
  t₁₂: l10(X₀, X₁, X₂, X₃) → l11(X₀, X₁, X₂, X₃) :|: X₁ ≤ 2 ∧ X₁ ≤ X₀ ∧ X₂ ≤ X₀ ∧ X₃ ≤ X₀
  t₁: l2(X₀, X₁, X₂, X₃) → l3(X₀, X₁, X₂, X₃)
  t₂: l3(X₀, X₁, X₂, X₃) → l1(X₀, X₁, X₂, X₃)
  t₄: l4(X₀, X₁, X₂, X₃) → l5(X₀, X₁, X₂, X₃)
  t₅: l5(X₀, X₁, X₂, X₃) → l6(X₂, X₁, X₂, X₃)
  t₆: l6(X₀, X₁, X₂, X₃) → l7(X₀, X₁, X₂, X₃) :|: 1+X₀ ≤ X₃ ∧ X₂ ≤ X₀
  t₇: l6(X₀, X₁, X₂, X₃) → l8(X₀, X₀, X₂, X₃) :|: X₃ ≤ X₀ ∧ X₂ ≤ X₀
  t₈: l7(X₀, X₁, X₂, X₃) → l6(1+X₀, X₁, X₂, X₃) :|: 1+X₀ ≤ X₃ ∧ 1+X₂ ≤ X₃ ∧ X₂ ≤ X₀
  t₁₀: l8(X₀, X₁, X₂, X₃) → l10(X₀, X₁, X₂, X₃) :|: X₁ ≤ 2 ∧ X₁ ≤ X₀ ∧ X₂ ≤ X₀ ∧ X₃ ≤ X₀
  t₉: l8(X₀, X₁, X₂, X₃) → l9(X₀, X₁, X₂, X₃) :|: 3 ≤ X₁ ∧ X₁ ≤ X₀ ∧ X₂ ≤ X₀ ∧ X₃ ≤ X₀
  t₁₁: l9(X₀, X₁, X₂, X₃) → l8(X₀, X₁-3, X₂, X₃) :|: 3 ≤ X₀ ∧ 3 ≤ X₁ ∧ 6 ≤ X₀+X₁ ∧ X₁ ≤ X₀ ∧ X₂ ≤ X₀ ∧ X₃ ≤ X₀


MPRF for transition t₆: l6(X₀, X₁, X₂, X₃) → l7(X₀, X₁, X₂, X₃) :|: 1+X₀ ≤ X₃ ∧ X₂ ≤ X₀ of depth 1:
  new bound:
    X₂+X₃ {O(n)}

  MPRF:
    • l6: [X₃-X₀]
    • l7: [X₃-1-X₀]




MPRF for transition t₈: l7(X₀, X₁, X₂, X₃) → l6(1+X₀, X₁, X₂, X₃) :|: 1+X₀ ≤ X₃ ∧ 1+X₂ ≤ X₃ ∧ X₂ ≤ X₀ of depth 1:
  new bound:
    X₂+X₃ {O(n)}

  MPRF:
    • l6: [X₃-X₀]
    • l7: [X₃-X₀]




MPRF for transition t₉: l8(X₀, X₁, X₂, X₃) → l9(X₀, X₁, X₂, X₃) :|: 3 ≤ X₁ ∧ X₁ ≤ X₀ ∧ X₂ ≤ X₀ ∧ X₃ ≤ X₀ of depth 1:
  new bound:
    3⋅X₂+X₃+2 {O(n)}

  MPRF:
    • l8: [X₁-2]
    • l9: [X₁-5]




MPRF for transition t₁₁: l9(X₀, X₁, X₂, X₃) → l8(X₀, X₁-3, X₂, X₃) :|: 3 ≤ X₀ ∧ 3 ≤ X₁ ∧ 6 ≤ X₀+X₁ ∧ X₁ ≤ X₀ ∧ X₂ ≤ X₀ ∧ X₃ ≤ X₀ of depth 1:
  new bound:
    3⋅X₂+X₃+2 {O(n)}

  MPRF:
    • l8: [X₁-2]
    • l9: [X₁-2]




All Bounds
Timebounds
  Overall timebound:4⋅X₃+8⋅X₂+13 {O(n)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: X₂+X₃ {O(n)}
    t₇: 1 {O(1)}
    t₈: X₂+X₃ {O(n)}
    t₉: 3⋅X₂+X₃+2 {O(n)}
    t₁₀: 1 {O(1)}
    t₁₁: 3⋅X₂+X₃+2 {O(n)}
    t₁₂: 1 {O(1)}


Costbounds
  Overall costbound: 4⋅X₃+8⋅X₂+13 {O(n)}
    t₀: 1 {O(1)}
    t₁: 1 {O(1)}
    t₂: 1 {O(1)}
    t₃: 1 {O(1)}
    t₄: 1 {O(1)}
    t₅: 1 {O(1)}
    t₆: X₂+X₃ {O(n)}
    t₇: 1 {O(1)}
    t₈: X₂+X₃ {O(n)}
    t₉: 3⋅X₂+X₃+2 {O(n)}
    t₁₀: 1 {O(1)}
    t₁₁: 3⋅X₂+X₃+2 {O(n)}
    t₁₂: 1 {O(1)}


Sizebounds
    t₀, X₀: X₀ {O(n)}
    t₀, X₁: X₁ {O(n)}
    t₀, X₂: X₂ {O(n)}
    t₀, X₃: X₃ {O(n)}
    t₁, X₀: X₀ {O(n)}
    t₁, X₁: X₁ {O(n)}
    t₁, X₂: X₂ {O(n)}
    t₁, X₃: X₃ {O(n)}
    t₂, X₀: X₀ {O(n)}
    t₂, X₁: X₁ {O(n)}
    t₂, X₂: X₂ {O(n)}
    t₂, X₃: X₃ {O(n)}
    t₃, X₀: X₀ {O(n)}
    t₃, X₁: X₁ {O(n)}
    t₃, X₂: X₂ {O(n)}
    t₃, X₃: X₃ {O(n)}
    t₄, X₀: X₀ {O(n)}
    t₄, X₁: X₁ {O(n)}
    t₄, X₂: X₂ {O(n)}
    t₄, X₃: X₃ {O(n)}
    t₅, X₀: X₂ {O(n)}
    t₅, X₁: X₁ {O(n)}
    t₅, X₂: X₂ {O(n)}
    t₅, X₃: X₃ {O(n)}
    t₆, X₀: 2⋅X₂+X₃ {O(n)}
    t₆, X₁: X₁ {O(n)}
    t₆, X₂: X₂ {O(n)}
    t₆, X₃: X₃ {O(n)}
    t₇, X₀: 3⋅X₂+X₃ {O(n)}
    t₇, X₁: 3⋅X₂+X₃ {O(n)}
    t₇, X₂: 2⋅X₂ {O(n)}
    t₇, X₃: 2⋅X₃ {O(n)}
    t₈, X₀: 2⋅X₂+X₃ {O(n)}
    t₈, X₁: X₁ {O(n)}
    t₈, X₂: X₂ {O(n)}
    t₈, X₃: X₃ {O(n)}
    t₉, X₀: 3⋅X₂+X₃ {O(n)}
    t₉, X₁: 3⋅X₂+X₃ {O(n)}
    t₉, X₂: 2⋅X₂ {O(n)}
    t₉, X₃: 2⋅X₃ {O(n)}
    t₁₀, X₀: 2⋅X₃+6⋅X₂ {O(n)}
    t₁₀, X₁: 2⋅X₃+6⋅X₂ {O(n)}
    t₁₀, X₂: 4⋅X₂ {O(n)}
    t₁₀, X₃: 4⋅X₃ {O(n)}
    t₁₁, X₀: 3⋅X₂+X₃ {O(n)}
    t₁₁, X₁: 3⋅X₂+X₃ {O(n)}
    t₁₁, X₂: 2⋅X₂ {O(n)}
    t₁₁, X₃: 2⋅X₃ {O(n)}
    t₁₂, X₀: 2⋅X₃+6⋅X₂ {O(n)}
    t₁₂, X₁: 2⋅X₃+6⋅X₂ {O(n)}
    t₁₂, X₂: 4⋅X₂ {O(n)}
    t₁₂, X₃: 4⋅X₃ {O(n)}

