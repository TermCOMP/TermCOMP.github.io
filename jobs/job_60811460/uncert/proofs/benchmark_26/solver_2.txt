WORST_CASE(?,O(n^1))  

Preprocessing Cost Relations
=====================================

#### Computed strongly connected components 
0. recursive  : [evalfbb1in/6,evalfbb3in/6,evalfbb4in/6,evalfbbin/6]
1. non_recursive  : [evalfstop/4]
2. non_recursive  : [evalfreturnin/4]
3. non_recursive  : [exit_location/1]
4. non_recursive  : [evalfbb3in_loop_cont/5]
5. non_recursive  : [evalfentryin/4]
6. non_recursive  : [evalfstart/4]

#### Obtained direct recursion through partial evaluation 
0. SCC is partially evaluated into evalfbb3in/6
1. SCC is completely evaluated into other SCCs
2. SCC is completely evaluated into other SCCs
3. SCC is completely evaluated into other SCCs
4. SCC is partially evaluated into evalfbb3in_loop_cont/5
5. SCC is partially evaluated into evalfentryin/4
6. SCC is partially evaluated into evalfstart/4

Control-Flow Refinement of Cost Relations
=====================================

### Specialization of cost equations evalfbb3in/6 
* CE 7 is refined into CE [10] 
* CE 3 is refined into CE [11] 
* CE 6 is refined into CE [12] 
* CE 4 is refined into CE [13] 
* CE 5 is refined into CE [14] 


### Cost equations --> "Loop" of evalfbb3in/6 
* CEs [13] --> Loop 10 
* CEs [14] --> Loop 11 
* CEs [10] --> Loop 12 
* CEs [11] --> Loop 13 
* CEs [12] --> Loop 14 

### Ranking functions of CR evalfbb3in(A,B,C,E,F,G) 
* RF of phase [10,11]: [2*B+C-1]

#### Partial ranking functions of CR evalfbb3in(A,B,C,E,F,G) 
* Partial RF of phase [10,11]:
  - RF of loop [10:1]:
    A-C depends on loops [11:1] 
    B
  - RF of loop [11:1]:
    -A+C+1 depends on loops [10:1] 
    C depends on loops [10:1] 


### Specialization of cost equations evalfbb3in_loop_cont/5 
* CE 9 is refined into CE [15] 
* CE 8 is refined into CE [16] 


### Cost equations --> "Loop" of evalfbb3in_loop_cont/5 
* CEs [15] --> Loop 15 
* CEs [16] --> Loop 16 

### Ranking functions of CR evalfbb3in_loop_cont(A,B,C,D,E) 

#### Partial ranking functions of CR evalfbb3in_loop_cont(A,B,C,D,E) 


### Specialization of cost equations evalfentryin/4 
* CE 2 is refined into CE [17,18,19,20,21] 


### Cost equations --> "Loop" of evalfentryin/4 
* CEs [19] --> Loop 17 
* CEs [17,18,20,21] --> Loop 18 

### Ranking functions of CR evalfentryin(A,B,C,E) 

#### Partial ranking functions of CR evalfentryin(A,B,C,E) 


### Specialization of cost equations evalfstart/4 
* CE 1 is refined into CE [22,23] 


### Cost equations --> "Loop" of evalfstart/4 
* CEs [23] --> Loop 19 
* CEs [22] --> Loop 20 

### Ranking functions of CR evalfstart(A,B,C,E) 

#### Partial ranking functions of CR evalfstart(A,B,C,E) 


Computing Bounds
=====================================

#### Cost of chains of evalfbb3in(A,B,C,E,F,G):
* Chain [[10,11],14]: 1*it(10)+1*it(11)+0
  Such that:it(10) =< B
aux(16) =< 2*B+C
aux(17) =< 2*B+C-G
it(10) =< aux(16)
it(11) =< aux(16)
it(10) =< aux(17)
it(11) =< aux(17)

  with precondition: [E=2,F=0,A>=1,B>=1,C>=0,A>=G,B+C>=G] 

* Chain [[10,11],13]: 1*it(10)+1*it(11)+0
  Such that:it(10) =< B-F
aux(16) =< 2*B+C
aux(17) =< 2*B+C-2*F-G
it(10) =< aux(16)
it(11) =< aux(16)
it(10) =< aux(17)
it(11) =< aux(17)

  with precondition: [E=2,A>=1,C>=0,F>=1,G>=0,B>=F,A>=G,B+C>=F+1,C+2*B>=2*F+G+1,A+B>=F+G+1,B+C>=F+G] 

* Chain [[10,11],12]: 1*it(10)+1*it(11)+0
  Such that:it(10) =< B
aux(20) =< 2*B+C
it(10) =< aux(20)
it(11) =< aux(20)

  with precondition: [E=3,A>=1,B>=1,C>=0] 

* Chain [13]: 0
  with precondition: [E=2,B=F,C=G,A>=1,B>=1,C>=0] 

* Chain [12]: 0
  with precondition: [E=3,A>=1,C>=0,B+C>=1] 


#### Cost of chains of evalfbb3in_loop_cont(A,B,C,D,E):
* Chain [16]: 0
  with precondition: [A=2,B>=1] 

* Chain [15]: 0
  with precondition: [A=3,B>=1] 


#### Cost of chains of evalfentryin(A,B,C,E):
* Chain [18]: 2*s(1)+2*s(4)+0
  Such that:aux(21) =< A
aux(22) =< 2*A
s(1) =< aux(21)
s(1) =< aux(22)
s(4) =< aux(22)

  with precondition: [A>=1,B>=1] 

* Chain [17]: 1*s(8)+1*s(11)+0
  Such that:s(8) =< A
aux(23) =< 2*A
s(8) =< aux(23)
s(11) =< aux(23)

  with precondition: [A>=2,B>=1] 


#### Cost of chains of evalfstart(A,B,C,E):
* Chain [20]: 2*s(14)+2*s(15)+0
  Such that:s(12) =< A
s(13) =< 2*A
s(14) =< s(12)
s(14) =< s(13)
s(15) =< s(13)

  with precondition: [A>=1,B>=1] 

* Chain [19]: 1*s(16)+1*s(18)+0
  Such that:s(16) =< A
s(17) =< 2*A
s(16) =< s(17)
s(18) =< s(17)

  with precondition: [A>=2,B>=1] 


Closed-form bounds of evalfstart(A,B,C,E): 
-------------------------------------
* Chain [20] with precondition: [A>=1,B>=1] 
    - Upper bound: 6*A 
    - Complexity: n 
* Chain [19] with precondition: [A>=2,B>=1] 
    - Upper bound: 3*A 
    - Complexity: n 

### Maximum cost of evalfstart(A,B,C,E): 6*A 
Asymptotic class: n 
* Total analysis performed in 94 ms.

