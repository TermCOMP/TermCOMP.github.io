YES
proof of /home/ff862203/input_Y3M5hrpvtd.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Outermost Termination of the given OTRS could be proven:

(0) OTRS
(1) Raffelsieper-Zantema-Transformation [SOUND, 0 ms]
(2) QTRS
(3) QTRSRRRProof [EQUIVALENT, 24 ms]
(4) QTRS
(5) QTRSRRRProof [EQUIVALENT, 8 ms]
(6) QTRS
(7) AAECC Innermost [EQUIVALENT, 0 ms]
(8) QTRS
(9) DependencyPairsProof [EQUIVALENT, 0 ms]
(10) QDP
(11) DependencyGraphProof [EQUIVALENT, 0 ms]
(12) AND
    (13) QDP
        (14) UsableRulesProof [EQUIVALENT, 0 ms]
        (15) QDP
        (16) QReductionProof [EQUIVALENT, 0 ms]
        (17) QDP
        (18) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (19) YES
    (20) QDP
        (21) UsableRulesProof [EQUIVALENT, 0 ms]
        (22) QDP
        (23) QReductionProof [EQUIVALENT, 0 ms]
        (24) QDP
        (25) TransformationProof [EQUIVALENT, 0 ms]
        (26) QDP
        (27) DependencyGraphProof [EQUIVALENT, 0 ms]
        (28) QDP
        (29) UsableRulesProof [EQUIVALENT, 0 ms]
        (30) QDP
        (31) TransformationProof [EQUIVALENT, 0 ms]
        (32) QDP
        (33) TransformationProof [EQUIVALENT, 0 ms]
        (34) QDP
        (35) UsableRulesProof [EQUIVALENT, 0 ms]
        (36) QDP
        (37) TransformationProof [EQUIVALENT, 0 ms]
        (38) QDP
        (39) DependencyGraphProof [EQUIVALENT, 0 ms]
        (40) QDP
        (41) TransformationProof [EQUIVALENT, 0 ms]
        (42) QDP
        (43) TransformationProof [EQUIVALENT, 0 ms]
        (44) QDP
        (45) TransformationProof [EQUIVALENT, 0 ms]
        (46) QDP
        (47) UsableRulesProof [EQUIVALENT, 0 ms]
        (48) QDP
        (49) TransformationProof [EQUIVALENT, 0 ms]
        (50) QDP
        (51) DependencyGraphProof [EQUIVALENT, 0 ms]
        (52) QDP
        (53) TransformationProof [EQUIVALENT, 0 ms]
        (54) QDP
        (55) TransformationProof [EQUIVALENT, 0 ms]
        (56) QDP
        (57) DependencyGraphProof [EQUIVALENT, 0 ms]
        (58) QDP
        (59) MRRProof [EQUIVALENT, 0 ms]
        (60) QDP
        (61) PisEmptyProof [EQUIVALENT, 0 ms]
        (62) YES


----------------------------------------

(0)
Obligation:
Term rewrite system R:
The TRS R consists of the following rules:

   f(x, y) -> g(f(y, x))
   g(g(g(f(x, y)))) -> x



Outermost Strategy.

----------------------------------------

(1) Raffelsieper-Zantema-Transformation (SOUND)
We applied the Raffelsieper-Zantema transformation  to transform the outermost TRS to a standard TRS.
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   down(f(x, y)) -> up(g(f(y, x)))
   down(g(g(g(f(x, y))))) -> up(x)
   top(up(x)) -> top(down(x))
   down(g(f(y4, y5))) -> g_flat(down(f(y4, y5)))
   down(g(fresh_constant)) -> g_flat(down(fresh_constant))
   down(g(g(f(y8, y9)))) -> g_flat(down(g(f(y8, y9))))
   down(g(g(fresh_constant))) -> g_flat(down(g(fresh_constant)))
   down(g(g(g(g(y14))))) -> g_flat(down(g(g(g(y14)))))
   down(g(g(g(fresh_constant)))) -> g_flat(down(g(g(fresh_constant))))
   f_flat(up(x_1), block(x_2)) -> up(f(x_1, x_2))
   f_flat(block(x_1), up(x_2)) -> up(f(x_1, x_2))
   g_flat(up(x_1)) -> up(g(x_1))

Q is empty.

----------------------------------------

(3) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(block(x_1)) = 2 + 2*x_1
   POL(down(x_1)) = 2*x_1
   POL(f(x_1, x_2)) = 2*x_1 + 2*x_2
   POL(f_flat(x_1, x_2)) = 2*x_1 + 2*x_2
   POL(fresh_constant) = 0
   POL(g(x_1)) = x_1
   POL(g_flat(x_1)) = x_1
   POL(top(x_1)) = 2*x_1
   POL(up(x_1)) = 2*x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   f_flat(up(x_1), block(x_2)) -> up(f(x_1, x_2))
   f_flat(block(x_1), up(x_2)) -> up(f(x_1, x_2))




----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   down(f(x, y)) -> up(g(f(y, x)))
   down(g(g(g(f(x, y))))) -> up(x)
   top(up(x)) -> top(down(x))
   down(g(f(y4, y5))) -> g_flat(down(f(y4, y5)))
   down(g(fresh_constant)) -> g_flat(down(fresh_constant))
   down(g(g(f(y8, y9)))) -> g_flat(down(g(f(y8, y9))))
   down(g(g(fresh_constant))) -> g_flat(down(g(fresh_constant)))
   down(g(g(g(g(y14))))) -> g_flat(down(g(g(g(y14)))))
   down(g(g(g(fresh_constant)))) -> g_flat(down(g(g(fresh_constant))))
   g_flat(up(x_1)) -> up(g(x_1))

Q is empty.

----------------------------------------

(5) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(down(x_1)) = 2*x_1
   POL(f(x_1, x_2)) = 1 + x_1 + x_2
   POL(fresh_constant) = 0
   POL(g(x_1)) = x_1
   POL(g_flat(x_1)) = x_1
   POL(top(x_1)) = 2*x_1
   POL(up(x_1)) = 2*x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   down(g(g(g(f(x, y))))) -> up(x)




----------------------------------------

(6)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   down(f(x, y)) -> up(g(f(y, x)))
   top(up(x)) -> top(down(x))
   down(g(f(y4, y5))) -> g_flat(down(f(y4, y5)))
   down(g(fresh_constant)) -> g_flat(down(fresh_constant))
   down(g(g(f(y8, y9)))) -> g_flat(down(g(f(y8, y9))))
   down(g(g(fresh_constant))) -> g_flat(down(g(fresh_constant)))
   down(g(g(g(g(y14))))) -> g_flat(down(g(g(g(y14)))))
   down(g(g(g(fresh_constant)))) -> g_flat(down(g(g(fresh_constant))))
   g_flat(up(x_1)) -> up(g(x_1))

Q is empty.

----------------------------------------

(7) AAECC Innermost (EQUIVALENT)
We have applied [NOC,AAECCNOC] to switch to innermost. The TRS R 1 is 
   down(g(f(y4, y5))) -> g_flat(down(f(y4, y5)))
   down(g(fresh_constant)) -> g_flat(down(fresh_constant))
   down(g(g(f(y8, y9)))) -> g_flat(down(g(f(y8, y9))))
   down(g(g(fresh_constant))) -> g_flat(down(g(fresh_constant)))
   down(g(g(g(g(y14))))) -> g_flat(down(g(g(g(y14)))))
   down(g(g(g(fresh_constant)))) -> g_flat(down(g(g(fresh_constant))))
   g_flat(up(x_1)) -> up(g(x_1))
   down(f(x, y)) -> up(g(f(y, x)))

The TRS R 2 is 
   top(up(x)) -> top(down(x))

The signature Sigma is {top_1}
----------------------------------------

(8)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   down(f(x, y)) -> up(g(f(y, x)))
   top(up(x)) -> top(down(x))
   down(g(f(y4, y5))) -> g_flat(down(f(y4, y5)))
   down(g(fresh_constant)) -> g_flat(down(fresh_constant))
   down(g(g(f(y8, y9)))) -> g_flat(down(g(f(y8, y9))))
   down(g(g(fresh_constant))) -> g_flat(down(g(fresh_constant)))
   down(g(g(g(g(y14))))) -> g_flat(down(g(g(g(y14)))))
   down(g(g(g(fresh_constant)))) -> g_flat(down(g(g(fresh_constant))))
   g_flat(up(x_1)) -> up(g(x_1))

The set Q consists of the following terms:

   down(f(x0, x1))
   top(up(x0))
   down(g(f(x0, x1)))
   down(g(fresh_constant))
   down(g(g(f(x0, x1))))
   down(g(g(fresh_constant)))
   down(g(g(g(g(x0)))))
   down(g(g(g(fresh_constant))))
   g_flat(up(x0))


----------------------------------------

(9) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TOP(up(x)) -> TOP(down(x))
   TOP(up(x)) -> DOWN(x)
   DOWN(g(f(y4, y5))) -> G_FLAT(down(f(y4, y5)))
   DOWN(g(f(y4, y5))) -> DOWN(f(y4, y5))
   DOWN(g(fresh_constant)) -> G_FLAT(down(fresh_constant))
   DOWN(g(fresh_constant)) -> DOWN(fresh_constant)
   DOWN(g(g(f(y8, y9)))) -> G_FLAT(down(g(f(y8, y9))))
   DOWN(g(g(f(y8, y9)))) -> DOWN(g(f(y8, y9)))
   DOWN(g(g(fresh_constant))) -> G_FLAT(down(g(fresh_constant)))
   DOWN(g(g(fresh_constant))) -> DOWN(g(fresh_constant))
   DOWN(g(g(g(g(y14))))) -> G_FLAT(down(g(g(g(y14)))))
   DOWN(g(g(g(g(y14))))) -> DOWN(g(g(g(y14))))
   DOWN(g(g(g(fresh_constant)))) -> G_FLAT(down(g(g(fresh_constant))))
   DOWN(g(g(g(fresh_constant)))) -> DOWN(g(g(fresh_constant)))

The TRS R consists of the following rules:

   down(f(x, y)) -> up(g(f(y, x)))
   top(up(x)) -> top(down(x))
   down(g(f(y4, y5))) -> g_flat(down(f(y4, y5)))
   down(g(fresh_constant)) -> g_flat(down(fresh_constant))
   down(g(g(f(y8, y9)))) -> g_flat(down(g(f(y8, y9))))
   down(g(g(fresh_constant))) -> g_flat(down(g(fresh_constant)))
   down(g(g(g(g(y14))))) -> g_flat(down(g(g(g(y14)))))
   down(g(g(g(fresh_constant)))) -> g_flat(down(g(g(fresh_constant))))
   g_flat(up(x_1)) -> up(g(x_1))

The set Q consists of the following terms:

   down(f(x0, x1))
   top(up(x0))
   down(g(f(x0, x1)))
   down(g(fresh_constant))
   down(g(g(f(x0, x1))))
   down(g(g(fresh_constant)))
   down(g(g(g(g(x0)))))
   down(g(g(g(fresh_constant))))
   g_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs with 12 less nodes.
----------------------------------------

(12)
Complex Obligation (AND)

----------------------------------------

(13)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DOWN(g(g(g(g(y14))))) -> DOWN(g(g(g(y14))))

The TRS R consists of the following rules:

   down(f(x, y)) -> up(g(f(y, x)))
   top(up(x)) -> top(down(x))
   down(g(f(y4, y5))) -> g_flat(down(f(y4, y5)))
   down(g(fresh_constant)) -> g_flat(down(fresh_constant))
   down(g(g(f(y8, y9)))) -> g_flat(down(g(f(y8, y9))))
   down(g(g(fresh_constant))) -> g_flat(down(g(fresh_constant)))
   down(g(g(g(g(y14))))) -> g_flat(down(g(g(g(y14)))))
   down(g(g(g(fresh_constant)))) -> g_flat(down(g(g(fresh_constant))))
   g_flat(up(x_1)) -> up(g(x_1))

The set Q consists of the following terms:

   down(f(x0, x1))
   top(up(x0))
   down(g(f(x0, x1)))
   down(g(fresh_constant))
   down(g(g(f(x0, x1))))
   down(g(g(fresh_constant)))
   down(g(g(g(g(x0)))))
   down(g(g(g(fresh_constant))))
   g_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(14) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(15)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DOWN(g(g(g(g(y14))))) -> DOWN(g(g(g(y14))))

R is empty.
The set Q consists of the following terms:

   down(f(x0, x1))
   top(up(x0))
   down(g(f(x0, x1)))
   down(g(fresh_constant))
   down(g(g(f(x0, x1))))
   down(g(g(fresh_constant)))
   down(g(g(g(g(x0)))))
   down(g(g(g(fresh_constant))))
   g_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(16) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   down(f(x0, x1))
   top(up(x0))
   down(g(f(x0, x1)))
   down(g(fresh_constant))
   down(g(g(f(x0, x1))))
   down(g(g(fresh_constant)))
   down(g(g(g(g(x0)))))
   down(g(g(g(fresh_constant))))
   g_flat(up(x0))


----------------------------------------

(17)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DOWN(g(g(g(g(y14))))) -> DOWN(g(g(g(y14))))

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(18) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*DOWN(g(g(g(g(y14))))) -> DOWN(g(g(g(y14))))
The graph contains the following edges 1 > 1


----------------------------------------

(19)
YES

----------------------------------------

(20)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TOP(up(x)) -> TOP(down(x))

The TRS R consists of the following rules:

   down(f(x, y)) -> up(g(f(y, x)))
   top(up(x)) -> top(down(x))
   down(g(f(y4, y5))) -> g_flat(down(f(y4, y5)))
   down(g(fresh_constant)) -> g_flat(down(fresh_constant))
   down(g(g(f(y8, y9)))) -> g_flat(down(g(f(y8, y9))))
   down(g(g(fresh_constant))) -> g_flat(down(g(fresh_constant)))
   down(g(g(g(g(y14))))) -> g_flat(down(g(g(g(y14)))))
   down(g(g(g(fresh_constant)))) -> g_flat(down(g(g(fresh_constant))))
   g_flat(up(x_1)) -> up(g(x_1))

The set Q consists of the following terms:

   down(f(x0, x1))
   top(up(x0))
   down(g(f(x0, x1)))
   down(g(fresh_constant))
   down(g(g(f(x0, x1))))
   down(g(g(fresh_constant)))
   down(g(g(g(g(x0)))))
   down(g(g(g(fresh_constant))))
   g_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(21) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(22)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TOP(up(x)) -> TOP(down(x))

The TRS R consists of the following rules:

   down(f(x, y)) -> up(g(f(y, x)))
   down(g(f(y4, y5))) -> g_flat(down(f(y4, y5)))
   down(g(fresh_constant)) -> g_flat(down(fresh_constant))
   down(g(g(f(y8, y9)))) -> g_flat(down(g(f(y8, y9))))
   down(g(g(fresh_constant))) -> g_flat(down(g(fresh_constant)))
   down(g(g(g(g(y14))))) -> g_flat(down(g(g(g(y14)))))
   down(g(g(g(fresh_constant)))) -> g_flat(down(g(g(fresh_constant))))
   g_flat(up(x_1)) -> up(g(x_1))

The set Q consists of the following terms:

   down(f(x0, x1))
   top(up(x0))
   down(g(f(x0, x1)))
   down(g(fresh_constant))
   down(g(g(f(x0, x1))))
   down(g(g(fresh_constant)))
   down(g(g(g(g(x0)))))
   down(g(g(g(fresh_constant))))
   g_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(23) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   top(up(x0))


----------------------------------------

(24)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TOP(up(x)) -> TOP(down(x))

The TRS R consists of the following rules:

   down(f(x, y)) -> up(g(f(y, x)))
   down(g(f(y4, y5))) -> g_flat(down(f(y4, y5)))
   down(g(fresh_constant)) -> g_flat(down(fresh_constant))
   down(g(g(f(y8, y9)))) -> g_flat(down(g(f(y8, y9))))
   down(g(g(fresh_constant))) -> g_flat(down(g(fresh_constant)))
   down(g(g(g(g(y14))))) -> g_flat(down(g(g(g(y14)))))
   down(g(g(g(fresh_constant)))) -> g_flat(down(g(g(fresh_constant))))
   g_flat(up(x_1)) -> up(g(x_1))

The set Q consists of the following terms:

   down(f(x0, x1))
   down(g(f(x0, x1)))
   down(g(fresh_constant))
   down(g(g(f(x0, x1))))
   down(g(g(fresh_constant)))
   down(g(g(g(g(x0)))))
   down(g(g(g(fresh_constant))))
   g_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(25) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule TOP(up(x)) -> TOP(down(x)) at position [0] we obtained the following new rules [LPAR04]:

   (TOP(up(f(x0, x1))) -> TOP(up(g(f(x1, x0)))),TOP(up(f(x0, x1))) -> TOP(up(g(f(x1, x0)))))
   (TOP(up(g(f(x0, x1)))) -> TOP(g_flat(down(f(x0, x1)))),TOP(up(g(f(x0, x1)))) -> TOP(g_flat(down(f(x0, x1)))))
   (TOP(up(g(fresh_constant))) -> TOP(g_flat(down(fresh_constant))),TOP(up(g(fresh_constant))) -> TOP(g_flat(down(fresh_constant))))
   (TOP(up(g(g(f(x0, x1))))) -> TOP(g_flat(down(g(f(x0, x1))))),TOP(up(g(g(f(x0, x1))))) -> TOP(g_flat(down(g(f(x0, x1))))))
   (TOP(up(g(g(fresh_constant)))) -> TOP(g_flat(down(g(fresh_constant)))),TOP(up(g(g(fresh_constant)))) -> TOP(g_flat(down(g(fresh_constant)))))
   (TOP(up(g(g(g(g(x0)))))) -> TOP(g_flat(down(g(g(g(x0)))))),TOP(up(g(g(g(g(x0)))))) -> TOP(g_flat(down(g(g(g(x0)))))))
   (TOP(up(g(g(g(fresh_constant))))) -> TOP(g_flat(down(g(g(fresh_constant))))),TOP(up(g(g(g(fresh_constant))))) -> TOP(g_flat(down(g(g(fresh_constant))))))


----------------------------------------

(26)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TOP(up(f(x0, x1))) -> TOP(up(g(f(x1, x0))))
   TOP(up(g(f(x0, x1)))) -> TOP(g_flat(down(f(x0, x1))))
   TOP(up(g(fresh_constant))) -> TOP(g_flat(down(fresh_constant)))
   TOP(up(g(g(f(x0, x1))))) -> TOP(g_flat(down(g(f(x0, x1)))))
   TOP(up(g(g(fresh_constant)))) -> TOP(g_flat(down(g(fresh_constant))))
   TOP(up(g(g(g(g(x0)))))) -> TOP(g_flat(down(g(g(g(x0))))))
   TOP(up(g(g(g(fresh_constant))))) -> TOP(g_flat(down(g(g(fresh_constant)))))

The TRS R consists of the following rules:

   down(f(x, y)) -> up(g(f(y, x)))
   down(g(f(y4, y5))) -> g_flat(down(f(y4, y5)))
   down(g(fresh_constant)) -> g_flat(down(fresh_constant))
   down(g(g(f(y8, y9)))) -> g_flat(down(g(f(y8, y9))))
   down(g(g(fresh_constant))) -> g_flat(down(g(fresh_constant)))
   down(g(g(g(g(y14))))) -> g_flat(down(g(g(g(y14)))))
   down(g(g(g(fresh_constant)))) -> g_flat(down(g(g(fresh_constant))))
   g_flat(up(x_1)) -> up(g(x_1))

The set Q consists of the following terms:

   down(f(x0, x1))
   down(g(f(x0, x1)))
   down(g(fresh_constant))
   down(g(g(f(x0, x1))))
   down(g(g(fresh_constant)))
   down(g(g(g(g(x0)))))
   down(g(g(g(fresh_constant))))
   g_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(27) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 2 less nodes.
----------------------------------------

(28)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TOP(up(g(f(x0, x1)))) -> TOP(g_flat(down(f(x0, x1))))
   TOP(up(g(g(f(x0, x1))))) -> TOP(g_flat(down(g(f(x0, x1)))))
   TOP(up(g(g(fresh_constant)))) -> TOP(g_flat(down(g(fresh_constant))))
   TOP(up(g(g(g(g(x0)))))) -> TOP(g_flat(down(g(g(g(x0))))))
   TOP(up(g(g(g(fresh_constant))))) -> TOP(g_flat(down(g(g(fresh_constant)))))

The TRS R consists of the following rules:

   down(f(x, y)) -> up(g(f(y, x)))
   down(g(f(y4, y5))) -> g_flat(down(f(y4, y5)))
   down(g(fresh_constant)) -> g_flat(down(fresh_constant))
   down(g(g(f(y8, y9)))) -> g_flat(down(g(f(y8, y9))))
   down(g(g(fresh_constant))) -> g_flat(down(g(fresh_constant)))
   down(g(g(g(g(y14))))) -> g_flat(down(g(g(g(y14)))))
   down(g(g(g(fresh_constant)))) -> g_flat(down(g(g(fresh_constant))))
   g_flat(up(x_1)) -> up(g(x_1))

The set Q consists of the following terms:

   down(f(x0, x1))
   down(g(f(x0, x1)))
   down(g(fresh_constant))
   down(g(g(f(x0, x1))))
   down(g(g(fresh_constant)))
   down(g(g(g(g(x0)))))
   down(g(g(g(fresh_constant))))
   g_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(29) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(30)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TOP(up(g(f(x0, x1)))) -> TOP(g_flat(down(f(x0, x1))))
   TOP(up(g(g(f(x0, x1))))) -> TOP(g_flat(down(g(f(x0, x1)))))
   TOP(up(g(g(fresh_constant)))) -> TOP(g_flat(down(g(fresh_constant))))
   TOP(up(g(g(g(g(x0)))))) -> TOP(g_flat(down(g(g(g(x0))))))
   TOP(up(g(g(g(fresh_constant))))) -> TOP(g_flat(down(g(g(fresh_constant)))))

The TRS R consists of the following rules:

   down(g(g(fresh_constant))) -> g_flat(down(g(fresh_constant)))
   g_flat(up(x_1)) -> up(g(x_1))
   down(g(fresh_constant)) -> g_flat(down(fresh_constant))
   down(g(g(g(g(y14))))) -> g_flat(down(g(g(g(y14)))))
   down(g(g(g(fresh_constant)))) -> g_flat(down(g(g(fresh_constant))))
   down(g(f(y4, y5))) -> g_flat(down(f(y4, y5)))
   down(f(x, y)) -> up(g(f(y, x)))

The set Q consists of the following terms:

   down(f(x0, x1))
   down(g(f(x0, x1)))
   down(g(fresh_constant))
   down(g(g(f(x0, x1))))
   down(g(g(fresh_constant)))
   down(g(g(g(g(x0)))))
   down(g(g(g(fresh_constant))))
   g_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(31) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule TOP(up(g(f(x0, x1)))) -> TOP(g_flat(down(f(x0, x1)))) at position [0,0] we obtained the following new rules [LPAR04]:

   (TOP(up(g(f(x0, x1)))) -> TOP(g_flat(up(g(f(x1, x0))))),TOP(up(g(f(x0, x1)))) -> TOP(g_flat(up(g(f(x1, x0))))))


----------------------------------------

(32)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TOP(up(g(g(f(x0, x1))))) -> TOP(g_flat(down(g(f(x0, x1)))))
   TOP(up(g(g(fresh_constant)))) -> TOP(g_flat(down(g(fresh_constant))))
   TOP(up(g(g(g(g(x0)))))) -> TOP(g_flat(down(g(g(g(x0))))))
   TOP(up(g(g(g(fresh_constant))))) -> TOP(g_flat(down(g(g(fresh_constant)))))
   TOP(up(g(f(x0, x1)))) -> TOP(g_flat(up(g(f(x1, x0)))))

The TRS R consists of the following rules:

   down(g(g(fresh_constant))) -> g_flat(down(g(fresh_constant)))
   g_flat(up(x_1)) -> up(g(x_1))
   down(g(fresh_constant)) -> g_flat(down(fresh_constant))
   down(g(g(g(g(y14))))) -> g_flat(down(g(g(g(y14)))))
   down(g(g(g(fresh_constant)))) -> g_flat(down(g(g(fresh_constant))))
   down(g(f(y4, y5))) -> g_flat(down(f(y4, y5)))
   down(f(x, y)) -> up(g(f(y, x)))

The set Q consists of the following terms:

   down(f(x0, x1))
   down(g(f(x0, x1)))
   down(g(fresh_constant))
   down(g(g(f(x0, x1))))
   down(g(g(fresh_constant)))
   down(g(g(g(g(x0)))))
   down(g(g(g(fresh_constant))))
   g_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(33) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule TOP(up(g(g(f(x0, x1))))) -> TOP(g_flat(down(g(f(x0, x1))))) at position [0,0] we obtained the following new rules [LPAR04]:

   (TOP(up(g(g(f(x0, x1))))) -> TOP(g_flat(g_flat(down(f(x0, x1))))),TOP(up(g(g(f(x0, x1))))) -> TOP(g_flat(g_flat(down(f(x0, x1))))))


----------------------------------------

(34)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TOP(up(g(g(fresh_constant)))) -> TOP(g_flat(down(g(fresh_constant))))
   TOP(up(g(g(g(g(x0)))))) -> TOP(g_flat(down(g(g(g(x0))))))
   TOP(up(g(g(g(fresh_constant))))) -> TOP(g_flat(down(g(g(fresh_constant)))))
   TOP(up(g(f(x0, x1)))) -> TOP(g_flat(up(g(f(x1, x0)))))
   TOP(up(g(g(f(x0, x1))))) -> TOP(g_flat(g_flat(down(f(x0, x1)))))

The TRS R consists of the following rules:

   down(g(g(fresh_constant))) -> g_flat(down(g(fresh_constant)))
   g_flat(up(x_1)) -> up(g(x_1))
   down(g(fresh_constant)) -> g_flat(down(fresh_constant))
   down(g(g(g(g(y14))))) -> g_flat(down(g(g(g(y14)))))
   down(g(g(g(fresh_constant)))) -> g_flat(down(g(g(fresh_constant))))
   down(g(f(y4, y5))) -> g_flat(down(f(y4, y5)))
   down(f(x, y)) -> up(g(f(y, x)))

The set Q consists of the following terms:

   down(f(x0, x1))
   down(g(f(x0, x1)))
   down(g(fresh_constant))
   down(g(g(f(x0, x1))))
   down(g(g(fresh_constant)))
   down(g(g(g(g(x0)))))
   down(g(g(g(fresh_constant))))
   g_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(35) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(36)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TOP(up(g(g(fresh_constant)))) -> TOP(g_flat(down(g(fresh_constant))))
   TOP(up(g(g(g(g(x0)))))) -> TOP(g_flat(down(g(g(g(x0))))))
   TOP(up(g(g(g(fresh_constant))))) -> TOP(g_flat(down(g(g(fresh_constant)))))
   TOP(up(g(f(x0, x1)))) -> TOP(g_flat(up(g(f(x1, x0)))))
   TOP(up(g(g(f(x0, x1))))) -> TOP(g_flat(g_flat(down(f(x0, x1)))))

The TRS R consists of the following rules:

   down(f(x, y)) -> up(g(f(y, x)))
   g_flat(up(x_1)) -> up(g(x_1))
   down(g(g(fresh_constant))) -> g_flat(down(g(fresh_constant)))
   down(g(fresh_constant)) -> g_flat(down(fresh_constant))
   down(g(g(g(g(y14))))) -> g_flat(down(g(g(g(y14)))))
   down(g(g(g(fresh_constant)))) -> g_flat(down(g(g(fresh_constant))))

The set Q consists of the following terms:

   down(f(x0, x1))
   down(g(f(x0, x1)))
   down(g(fresh_constant))
   down(g(g(f(x0, x1))))
   down(g(g(fresh_constant)))
   down(g(g(g(g(x0)))))
   down(g(g(g(fresh_constant))))
   g_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(37) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule TOP(up(g(g(fresh_constant)))) -> TOP(g_flat(down(g(fresh_constant)))) at position [0,0] we obtained the following new rules [LPAR04]:

   (TOP(up(g(g(fresh_constant)))) -> TOP(g_flat(g_flat(down(fresh_constant)))),TOP(up(g(g(fresh_constant)))) -> TOP(g_flat(g_flat(down(fresh_constant)))))


----------------------------------------

(38)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TOP(up(g(g(g(g(x0)))))) -> TOP(g_flat(down(g(g(g(x0))))))
   TOP(up(g(g(g(fresh_constant))))) -> TOP(g_flat(down(g(g(fresh_constant)))))
   TOP(up(g(f(x0, x1)))) -> TOP(g_flat(up(g(f(x1, x0)))))
   TOP(up(g(g(f(x0, x1))))) -> TOP(g_flat(g_flat(down(f(x0, x1)))))
   TOP(up(g(g(fresh_constant)))) -> TOP(g_flat(g_flat(down(fresh_constant))))

The TRS R consists of the following rules:

   down(f(x, y)) -> up(g(f(y, x)))
   g_flat(up(x_1)) -> up(g(x_1))
   down(g(g(fresh_constant))) -> g_flat(down(g(fresh_constant)))
   down(g(fresh_constant)) -> g_flat(down(fresh_constant))
   down(g(g(g(g(y14))))) -> g_flat(down(g(g(g(y14)))))
   down(g(g(g(fresh_constant)))) -> g_flat(down(g(g(fresh_constant))))

The set Q consists of the following terms:

   down(f(x0, x1))
   down(g(f(x0, x1)))
   down(g(fresh_constant))
   down(g(g(f(x0, x1))))
   down(g(g(fresh_constant)))
   down(g(g(g(g(x0)))))
   down(g(g(g(fresh_constant))))
   g_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(39) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(40)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TOP(up(g(g(g(g(x0)))))) -> TOP(g_flat(down(g(g(g(x0))))))
   TOP(up(g(g(g(fresh_constant))))) -> TOP(g_flat(down(g(g(fresh_constant)))))
   TOP(up(g(f(x0, x1)))) -> TOP(g_flat(up(g(f(x1, x0)))))
   TOP(up(g(g(f(x0, x1))))) -> TOP(g_flat(g_flat(down(f(x0, x1)))))

The TRS R consists of the following rules:

   down(f(x, y)) -> up(g(f(y, x)))
   g_flat(up(x_1)) -> up(g(x_1))
   down(g(g(fresh_constant))) -> g_flat(down(g(fresh_constant)))
   down(g(fresh_constant)) -> g_flat(down(fresh_constant))
   down(g(g(g(g(y14))))) -> g_flat(down(g(g(g(y14)))))
   down(g(g(g(fresh_constant)))) -> g_flat(down(g(g(fresh_constant))))

The set Q consists of the following terms:

   down(f(x0, x1))
   down(g(f(x0, x1)))
   down(g(fresh_constant))
   down(g(g(f(x0, x1))))
   down(g(g(fresh_constant)))
   down(g(g(g(g(x0)))))
   down(g(g(g(fresh_constant))))
   g_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(41) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule TOP(up(g(g(g(fresh_constant))))) -> TOP(g_flat(down(g(g(fresh_constant))))) at position [0,0] we obtained the following new rules [LPAR04]:

   (TOP(up(g(g(g(fresh_constant))))) -> TOP(g_flat(g_flat(down(g(fresh_constant))))),TOP(up(g(g(g(fresh_constant))))) -> TOP(g_flat(g_flat(down(g(fresh_constant))))))


----------------------------------------

(42)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TOP(up(g(g(g(g(x0)))))) -> TOP(g_flat(down(g(g(g(x0))))))
   TOP(up(g(f(x0, x1)))) -> TOP(g_flat(up(g(f(x1, x0)))))
   TOP(up(g(g(f(x0, x1))))) -> TOP(g_flat(g_flat(down(f(x0, x1)))))
   TOP(up(g(g(g(fresh_constant))))) -> TOP(g_flat(g_flat(down(g(fresh_constant)))))

The TRS R consists of the following rules:

   down(f(x, y)) -> up(g(f(y, x)))
   g_flat(up(x_1)) -> up(g(x_1))
   down(g(g(fresh_constant))) -> g_flat(down(g(fresh_constant)))
   down(g(fresh_constant)) -> g_flat(down(fresh_constant))
   down(g(g(g(g(y14))))) -> g_flat(down(g(g(g(y14)))))
   down(g(g(g(fresh_constant)))) -> g_flat(down(g(g(fresh_constant))))

The set Q consists of the following terms:

   down(f(x0, x1))
   down(g(f(x0, x1)))
   down(g(fresh_constant))
   down(g(g(f(x0, x1))))
   down(g(g(fresh_constant)))
   down(g(g(g(g(x0)))))
   down(g(g(g(fresh_constant))))
   g_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(43) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule TOP(up(g(f(x0, x1)))) -> TOP(g_flat(up(g(f(x1, x0))))) at position [0] we obtained the following new rules [LPAR04]:

   (TOP(up(g(f(x0, x1)))) -> TOP(up(g(g(f(x1, x0))))),TOP(up(g(f(x0, x1)))) -> TOP(up(g(g(f(x1, x0))))))


----------------------------------------

(44)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TOP(up(g(g(g(g(x0)))))) -> TOP(g_flat(down(g(g(g(x0))))))
   TOP(up(g(g(f(x0, x1))))) -> TOP(g_flat(g_flat(down(f(x0, x1)))))
   TOP(up(g(g(g(fresh_constant))))) -> TOP(g_flat(g_flat(down(g(fresh_constant)))))
   TOP(up(g(f(x0, x1)))) -> TOP(up(g(g(f(x1, x0)))))

The TRS R consists of the following rules:

   down(f(x, y)) -> up(g(f(y, x)))
   g_flat(up(x_1)) -> up(g(x_1))
   down(g(g(fresh_constant))) -> g_flat(down(g(fresh_constant)))
   down(g(fresh_constant)) -> g_flat(down(fresh_constant))
   down(g(g(g(g(y14))))) -> g_flat(down(g(g(g(y14)))))
   down(g(g(g(fresh_constant)))) -> g_flat(down(g(g(fresh_constant))))

The set Q consists of the following terms:

   down(f(x0, x1))
   down(g(f(x0, x1)))
   down(g(fresh_constant))
   down(g(g(f(x0, x1))))
   down(g(g(fresh_constant)))
   down(g(g(g(g(x0)))))
   down(g(g(g(fresh_constant))))
   g_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(45) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule TOP(up(g(g(f(x0, x1))))) -> TOP(g_flat(g_flat(down(f(x0, x1))))) at position [0,0,0] we obtained the following new rules [LPAR04]:

   (TOP(up(g(g(f(x0, x1))))) -> TOP(g_flat(g_flat(up(g(f(x1, x0)))))),TOP(up(g(g(f(x0, x1))))) -> TOP(g_flat(g_flat(up(g(f(x1, x0)))))))


----------------------------------------

(46)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TOP(up(g(g(g(g(x0)))))) -> TOP(g_flat(down(g(g(g(x0))))))
   TOP(up(g(g(g(fresh_constant))))) -> TOP(g_flat(g_flat(down(g(fresh_constant)))))
   TOP(up(g(f(x0, x1)))) -> TOP(up(g(g(f(x1, x0)))))
   TOP(up(g(g(f(x0, x1))))) -> TOP(g_flat(g_flat(up(g(f(x1, x0))))))

The TRS R consists of the following rules:

   down(f(x, y)) -> up(g(f(y, x)))
   g_flat(up(x_1)) -> up(g(x_1))
   down(g(g(fresh_constant))) -> g_flat(down(g(fresh_constant)))
   down(g(fresh_constant)) -> g_flat(down(fresh_constant))
   down(g(g(g(g(y14))))) -> g_flat(down(g(g(g(y14)))))
   down(g(g(g(fresh_constant)))) -> g_flat(down(g(g(fresh_constant))))

The set Q consists of the following terms:

   down(f(x0, x1))
   down(g(f(x0, x1)))
   down(g(fresh_constant))
   down(g(g(f(x0, x1))))
   down(g(g(fresh_constant)))
   down(g(g(g(g(x0)))))
   down(g(g(g(fresh_constant))))
   g_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(47) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(48)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TOP(up(g(g(g(g(x0)))))) -> TOP(g_flat(down(g(g(g(x0))))))
   TOP(up(g(g(g(fresh_constant))))) -> TOP(g_flat(g_flat(down(g(fresh_constant)))))
   TOP(up(g(f(x0, x1)))) -> TOP(up(g(g(f(x1, x0)))))
   TOP(up(g(g(f(x0, x1))))) -> TOP(g_flat(g_flat(up(g(f(x1, x0))))))

The TRS R consists of the following rules:

   g_flat(up(x_1)) -> up(g(x_1))
   down(g(fresh_constant)) -> g_flat(down(fresh_constant))
   down(g(g(g(g(y14))))) -> g_flat(down(g(g(g(y14)))))
   down(g(g(g(fresh_constant)))) -> g_flat(down(g(g(fresh_constant))))
   down(g(g(fresh_constant))) -> g_flat(down(g(fresh_constant)))

The set Q consists of the following terms:

   down(f(x0, x1))
   down(g(f(x0, x1)))
   down(g(fresh_constant))
   down(g(g(f(x0, x1))))
   down(g(g(fresh_constant)))
   down(g(g(g(g(x0)))))
   down(g(g(g(fresh_constant))))
   g_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(49) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule TOP(up(g(g(g(fresh_constant))))) -> TOP(g_flat(g_flat(down(g(fresh_constant))))) at position [0,0,0] we obtained the following new rules [LPAR04]:

   (TOP(up(g(g(g(fresh_constant))))) -> TOP(g_flat(g_flat(g_flat(down(fresh_constant))))),TOP(up(g(g(g(fresh_constant))))) -> TOP(g_flat(g_flat(g_flat(down(fresh_constant))))))


----------------------------------------

(50)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TOP(up(g(g(g(g(x0)))))) -> TOP(g_flat(down(g(g(g(x0))))))
   TOP(up(g(f(x0, x1)))) -> TOP(up(g(g(f(x1, x0)))))
   TOP(up(g(g(f(x0, x1))))) -> TOP(g_flat(g_flat(up(g(f(x1, x0))))))
   TOP(up(g(g(g(fresh_constant))))) -> TOP(g_flat(g_flat(g_flat(down(fresh_constant)))))

The TRS R consists of the following rules:

   g_flat(up(x_1)) -> up(g(x_1))
   down(g(fresh_constant)) -> g_flat(down(fresh_constant))
   down(g(g(g(g(y14))))) -> g_flat(down(g(g(g(y14)))))
   down(g(g(g(fresh_constant)))) -> g_flat(down(g(g(fresh_constant))))
   down(g(g(fresh_constant))) -> g_flat(down(g(fresh_constant)))

The set Q consists of the following terms:

   down(f(x0, x1))
   down(g(f(x0, x1)))
   down(g(fresh_constant))
   down(g(g(f(x0, x1))))
   down(g(g(fresh_constant)))
   down(g(g(g(g(x0)))))
   down(g(g(g(fresh_constant))))
   g_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(51) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(52)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TOP(up(g(g(g(g(x0)))))) -> TOP(g_flat(down(g(g(g(x0))))))
   TOP(up(g(f(x0, x1)))) -> TOP(up(g(g(f(x1, x0)))))
   TOP(up(g(g(f(x0, x1))))) -> TOP(g_flat(g_flat(up(g(f(x1, x0))))))

The TRS R consists of the following rules:

   g_flat(up(x_1)) -> up(g(x_1))
   down(g(fresh_constant)) -> g_flat(down(fresh_constant))
   down(g(g(g(g(y14))))) -> g_flat(down(g(g(g(y14)))))
   down(g(g(g(fresh_constant)))) -> g_flat(down(g(g(fresh_constant))))
   down(g(g(fresh_constant))) -> g_flat(down(g(fresh_constant)))

The set Q consists of the following terms:

   down(f(x0, x1))
   down(g(f(x0, x1)))
   down(g(fresh_constant))
   down(g(g(f(x0, x1))))
   down(g(g(fresh_constant)))
   down(g(g(g(g(x0)))))
   down(g(g(g(fresh_constant))))
   g_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(53) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule TOP(up(g(g(f(x0, x1))))) -> TOP(g_flat(g_flat(up(g(f(x1, x0)))))) at position [0,0] we obtained the following new rules [LPAR04]:

   (TOP(up(g(g(f(x0, x1))))) -> TOP(g_flat(up(g(g(f(x1, x0)))))),TOP(up(g(g(f(x0, x1))))) -> TOP(g_flat(up(g(g(f(x1, x0)))))))


----------------------------------------

(54)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TOP(up(g(g(g(g(x0)))))) -> TOP(g_flat(down(g(g(g(x0))))))
   TOP(up(g(f(x0, x1)))) -> TOP(up(g(g(f(x1, x0)))))
   TOP(up(g(g(f(x0, x1))))) -> TOP(g_flat(up(g(g(f(x1, x0))))))

The TRS R consists of the following rules:

   g_flat(up(x_1)) -> up(g(x_1))
   down(g(fresh_constant)) -> g_flat(down(fresh_constant))
   down(g(g(g(g(y14))))) -> g_flat(down(g(g(g(y14)))))
   down(g(g(g(fresh_constant)))) -> g_flat(down(g(g(fresh_constant))))
   down(g(g(fresh_constant))) -> g_flat(down(g(fresh_constant)))

The set Q consists of the following terms:

   down(f(x0, x1))
   down(g(f(x0, x1)))
   down(g(fresh_constant))
   down(g(g(f(x0, x1))))
   down(g(g(fresh_constant)))
   down(g(g(g(g(x0)))))
   down(g(g(g(fresh_constant))))
   g_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(55) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule TOP(up(g(g(f(x0, x1))))) -> TOP(g_flat(up(g(g(f(x1, x0)))))) at position [0] we obtained the following new rules [LPAR04]:

   (TOP(up(g(g(f(x0, x1))))) -> TOP(up(g(g(g(f(x1, x0)))))),TOP(up(g(g(f(x0, x1))))) -> TOP(up(g(g(g(f(x1, x0)))))))


----------------------------------------

(56)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TOP(up(g(g(g(g(x0)))))) -> TOP(g_flat(down(g(g(g(x0))))))
   TOP(up(g(f(x0, x1)))) -> TOP(up(g(g(f(x1, x0)))))
   TOP(up(g(g(f(x0, x1))))) -> TOP(up(g(g(g(f(x1, x0))))))

The TRS R consists of the following rules:

   g_flat(up(x_1)) -> up(g(x_1))
   down(g(fresh_constant)) -> g_flat(down(fresh_constant))
   down(g(g(g(g(y14))))) -> g_flat(down(g(g(g(y14)))))
   down(g(g(g(fresh_constant)))) -> g_flat(down(g(g(fresh_constant))))
   down(g(g(fresh_constant))) -> g_flat(down(g(fresh_constant)))

The set Q consists of the following terms:

   down(f(x0, x1))
   down(g(f(x0, x1)))
   down(g(fresh_constant))
   down(g(g(f(x0, x1))))
   down(g(g(fresh_constant)))
   down(g(g(g(g(x0)))))
   down(g(g(g(fresh_constant))))
   g_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(57) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 2 less nodes.
----------------------------------------

(58)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TOP(up(g(g(g(g(x0)))))) -> TOP(g_flat(down(g(g(g(x0))))))

The TRS R consists of the following rules:

   g_flat(up(x_1)) -> up(g(x_1))
   down(g(fresh_constant)) -> g_flat(down(fresh_constant))
   down(g(g(g(g(y14))))) -> g_flat(down(g(g(g(y14)))))
   down(g(g(g(fresh_constant)))) -> g_flat(down(g(g(fresh_constant))))
   down(g(g(fresh_constant))) -> g_flat(down(g(fresh_constant)))

The set Q consists of the following terms:

   down(f(x0, x1))
   down(g(f(x0, x1)))
   down(g(fresh_constant))
   down(g(g(f(x0, x1))))
   down(g(g(fresh_constant)))
   down(g(g(g(g(x0)))))
   down(g(g(g(fresh_constant))))
   g_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(59) MRRProof (EQUIVALENT)
By using the rule removal processor [LPAR04] with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented.

Strictly oriented dependency pairs:

   TOP(up(g(g(g(g(x0)))))) -> TOP(g_flat(down(g(g(g(x0))))))

Strictly oriented rules of the TRS R:

   g_flat(up(x_1)) -> up(g(x_1))

Used ordering: Polynomial interpretation [POLO]:

   POL(TOP(x_1)) = 2*x_1
   POL(down(x_1)) = x_1
   POL(fresh_constant) = 0
   POL(g(x_1)) = 2*x_1
   POL(g_flat(x_1)) = 2*x_1
   POL(up(x_1)) = 2 + x_1


----------------------------------------

(60)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   down(g(fresh_constant)) -> g_flat(down(fresh_constant))
   down(g(g(g(g(y14))))) -> g_flat(down(g(g(g(y14)))))
   down(g(g(g(fresh_constant)))) -> g_flat(down(g(g(fresh_constant))))
   down(g(g(fresh_constant))) -> g_flat(down(g(fresh_constant)))

The set Q consists of the following terms:

   down(f(x0, x1))
   down(g(f(x0, x1)))
   down(g(fresh_constant))
   down(g(g(f(x0, x1))))
   down(g(g(fresh_constant)))
   down(g(g(g(g(x0)))))
   down(g(g(g(fresh_constant))))
   g_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(61) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(62)
YES
