YES
proof of /home/ff862203/input_K2AwZPrglZ.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Outermost Termination of the given OTRS could be proven:

(0) OTRS
(1) Raffelsieper-Zantema-Transformation [SOUND, 0 ms]
(2) QTRS
(3) QTRSRRRProof [EQUIVALENT, 21 ms]
(4) QTRS
(5) AAECC Innermost [EQUIVALENT, 0 ms]
(6) QTRS
(7) DependencyPairsProof [EQUIVALENT, 0 ms]
(8) QDP
(9) DependencyGraphProof [EQUIVALENT, 0 ms]
(10) AND
    (11) QDP
        (12) UsableRulesProof [EQUIVALENT, 0 ms]
        (13) QDP
        (14) QReductionProof [EQUIVALENT, 0 ms]
        (15) QDP
        (16) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (17) YES
    (18) QDP
        (19) UsableRulesProof [EQUIVALENT, 0 ms]
        (20) QDP
        (21) QReductionProof [EQUIVALENT, 0 ms]
        (22) QDP
        (23) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (24) YES
    (25) QDP
        (26) UsableRulesProof [EQUIVALENT, 0 ms]
        (27) QDP
        (28) QReductionProof [EQUIVALENT, 0 ms]
        (29) QDP
        (30) QDPOrderProof [EQUIVALENT, 27 ms]
        (31) QDP
        (32) PisEmptyProof [EQUIVALENT, 0 ms]
        (33) YES


----------------------------------------

(0)
Obligation:
Term rewrite system R:
The TRS R consists of the following rules:

   f(h(x)) -> f(i(x))
   f(i(x)) -> a
   i(x) -> h(x)



Outermost Strategy.

----------------------------------------

(1) Raffelsieper-Zantema-Transformation (SOUND)
We applied the Raffelsieper-Zantema transformation  to transform the outermost TRS to a standard TRS.
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   down(f(h(x))) -> up(f(i(x)))
   down(f(i(x))) -> up(a)
   down(i(x)) -> up(h(x))
   top(up(x)) -> top(down(x))
   down(h(y1)) -> h_flat(down(y1))
   down(f(f(y4))) -> f_flat(down(f(y4)))
   down(f(a)) -> f_flat(down(a))
   down(f(fresh_constant)) -> f_flat(down(fresh_constant))
   f_flat(up(x_1)) -> up(f(x_1))
   h_flat(up(x_1)) -> up(h(x_1))
   i_flat(up(x_1)) -> up(i(x_1))

Q is empty.

----------------------------------------

(3) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(a) = 0
   POL(down(x_1)) = 2 + 2*x_1
   POL(f(x_1)) = 2 + 2*x_1
   POL(f_flat(x_1)) = 2 + 2*x_1
   POL(fresh_constant) = 1
   POL(h(x_1)) = x_1
   POL(h_flat(x_1)) = x_1
   POL(i(x_1)) = x_1
   POL(i_flat(x_1)) = 1 + 2*x_1
   POL(top(x_1)) = x_1
   POL(up(x_1)) = 2 + 2*x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   down(f(i(x))) -> up(a)
   i_flat(up(x_1)) -> up(i(x_1))




----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   down(f(h(x))) -> up(f(i(x)))
   down(i(x)) -> up(h(x))
   top(up(x)) -> top(down(x))
   down(h(y1)) -> h_flat(down(y1))
   down(f(f(y4))) -> f_flat(down(f(y4)))
   down(f(a)) -> f_flat(down(a))
   down(f(fresh_constant)) -> f_flat(down(fresh_constant))
   f_flat(up(x_1)) -> up(f(x_1))
   h_flat(up(x_1)) -> up(h(x_1))

Q is empty.

----------------------------------------

(5) AAECC Innermost (EQUIVALENT)
We have applied [NOC,AAECCNOC] to switch to innermost. The TRS R 1 is 
   down(h(y1)) -> h_flat(down(y1))
   down(f(f(y4))) -> f_flat(down(f(y4)))
   down(f(a)) -> f_flat(down(a))
   down(f(fresh_constant)) -> f_flat(down(fresh_constant))
   f_flat(up(x_1)) -> up(f(x_1))
   h_flat(up(x_1)) -> up(h(x_1))
   down(f(h(x))) -> up(f(i(x)))
   down(i(x)) -> up(h(x))

The TRS R 2 is 
   top(up(x)) -> top(down(x))

The signature Sigma is {top_1}
----------------------------------------

(6)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   down(f(h(x))) -> up(f(i(x)))
   down(i(x)) -> up(h(x))
   top(up(x)) -> top(down(x))
   down(h(y1)) -> h_flat(down(y1))
   down(f(f(y4))) -> f_flat(down(f(y4)))
   down(f(a)) -> f_flat(down(a))
   down(f(fresh_constant)) -> f_flat(down(fresh_constant))
   f_flat(up(x_1)) -> up(f(x_1))
   h_flat(up(x_1)) -> up(h(x_1))

The set Q consists of the following terms:

   down(f(h(x0)))
   down(i(x0))
   top(up(x0))
   down(h(x0))
   down(f(f(x0)))
   down(f(a))
   down(f(fresh_constant))
   f_flat(up(x0))
   h_flat(up(x0))


----------------------------------------

(7) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TOP(up(x)) -> TOP(down(x))
   TOP(up(x)) -> DOWN(x)
   DOWN(h(y1)) -> H_FLAT(down(y1))
   DOWN(h(y1)) -> DOWN(y1)
   DOWN(f(f(y4))) -> F_FLAT(down(f(y4)))
   DOWN(f(f(y4))) -> DOWN(f(y4))
   DOWN(f(a)) -> F_FLAT(down(a))
   DOWN(f(a)) -> DOWN(a)
   DOWN(f(fresh_constant)) -> F_FLAT(down(fresh_constant))
   DOWN(f(fresh_constant)) -> DOWN(fresh_constant)

The TRS R consists of the following rules:

   down(f(h(x))) -> up(f(i(x)))
   down(i(x)) -> up(h(x))
   top(up(x)) -> top(down(x))
   down(h(y1)) -> h_flat(down(y1))
   down(f(f(y4))) -> f_flat(down(f(y4)))
   down(f(a)) -> f_flat(down(a))
   down(f(fresh_constant)) -> f_flat(down(fresh_constant))
   f_flat(up(x_1)) -> up(f(x_1))
   h_flat(up(x_1)) -> up(h(x_1))

The set Q consists of the following terms:

   down(f(h(x0)))
   down(i(x0))
   top(up(x0))
   down(h(x0))
   down(f(f(x0)))
   down(f(a))
   down(f(fresh_constant))
   f_flat(up(x0))
   h_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 3 SCCs with 7 less nodes.
----------------------------------------

(10)
Complex Obligation (AND)

----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DOWN(f(f(y4))) -> DOWN(f(y4))

The TRS R consists of the following rules:

   down(f(h(x))) -> up(f(i(x)))
   down(i(x)) -> up(h(x))
   top(up(x)) -> top(down(x))
   down(h(y1)) -> h_flat(down(y1))
   down(f(f(y4))) -> f_flat(down(f(y4)))
   down(f(a)) -> f_flat(down(a))
   down(f(fresh_constant)) -> f_flat(down(fresh_constant))
   f_flat(up(x_1)) -> up(f(x_1))
   h_flat(up(x_1)) -> up(h(x_1))

The set Q consists of the following terms:

   down(f(h(x0)))
   down(i(x0))
   top(up(x0))
   down(h(x0))
   down(f(f(x0)))
   down(f(a))
   down(f(fresh_constant))
   f_flat(up(x0))
   h_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(12) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(13)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DOWN(f(f(y4))) -> DOWN(f(y4))

R is empty.
The set Q consists of the following terms:

   down(f(h(x0)))
   down(i(x0))
   top(up(x0))
   down(h(x0))
   down(f(f(x0)))
   down(f(a))
   down(f(fresh_constant))
   f_flat(up(x0))
   h_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(14) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   down(f(h(x0)))
   down(i(x0))
   top(up(x0))
   down(h(x0))
   down(f(f(x0)))
   down(f(a))
   down(f(fresh_constant))
   f_flat(up(x0))
   h_flat(up(x0))


----------------------------------------

(15)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DOWN(f(f(y4))) -> DOWN(f(y4))

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(16) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*DOWN(f(f(y4))) -> DOWN(f(y4))
The graph contains the following edges 1 > 1


----------------------------------------

(17)
YES

----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DOWN(h(y1)) -> DOWN(y1)

The TRS R consists of the following rules:

   down(f(h(x))) -> up(f(i(x)))
   down(i(x)) -> up(h(x))
   top(up(x)) -> top(down(x))
   down(h(y1)) -> h_flat(down(y1))
   down(f(f(y4))) -> f_flat(down(f(y4)))
   down(f(a)) -> f_flat(down(a))
   down(f(fresh_constant)) -> f_flat(down(fresh_constant))
   f_flat(up(x_1)) -> up(f(x_1))
   h_flat(up(x_1)) -> up(h(x_1))

The set Q consists of the following terms:

   down(f(h(x0)))
   down(i(x0))
   top(up(x0))
   down(h(x0))
   down(f(f(x0)))
   down(f(a))
   down(f(fresh_constant))
   f_flat(up(x0))
   h_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(20)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DOWN(h(y1)) -> DOWN(y1)

R is empty.
The set Q consists of the following terms:

   down(f(h(x0)))
   down(i(x0))
   top(up(x0))
   down(h(x0))
   down(f(f(x0)))
   down(f(a))
   down(f(fresh_constant))
   f_flat(up(x0))
   h_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(21) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   down(f(h(x0)))
   down(i(x0))
   top(up(x0))
   down(h(x0))
   down(f(f(x0)))
   down(f(a))
   down(f(fresh_constant))
   f_flat(up(x0))
   h_flat(up(x0))


----------------------------------------

(22)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DOWN(h(y1)) -> DOWN(y1)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(23) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*DOWN(h(y1)) -> DOWN(y1)
The graph contains the following edges 1 > 1


----------------------------------------

(24)
YES

----------------------------------------

(25)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TOP(up(x)) -> TOP(down(x))

The TRS R consists of the following rules:

   down(f(h(x))) -> up(f(i(x)))
   down(i(x)) -> up(h(x))
   top(up(x)) -> top(down(x))
   down(h(y1)) -> h_flat(down(y1))
   down(f(f(y4))) -> f_flat(down(f(y4)))
   down(f(a)) -> f_flat(down(a))
   down(f(fresh_constant)) -> f_flat(down(fresh_constant))
   f_flat(up(x_1)) -> up(f(x_1))
   h_flat(up(x_1)) -> up(h(x_1))

The set Q consists of the following terms:

   down(f(h(x0)))
   down(i(x0))
   top(up(x0))
   down(h(x0))
   down(f(f(x0)))
   down(f(a))
   down(f(fresh_constant))
   f_flat(up(x0))
   h_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(26) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(27)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TOP(up(x)) -> TOP(down(x))

The TRS R consists of the following rules:

   down(f(h(x))) -> up(f(i(x)))
   down(i(x)) -> up(h(x))
   down(h(y1)) -> h_flat(down(y1))
   down(f(f(y4))) -> f_flat(down(f(y4)))
   down(f(a)) -> f_flat(down(a))
   down(f(fresh_constant)) -> f_flat(down(fresh_constant))
   f_flat(up(x_1)) -> up(f(x_1))
   h_flat(up(x_1)) -> up(h(x_1))

The set Q consists of the following terms:

   down(f(h(x0)))
   down(i(x0))
   top(up(x0))
   down(h(x0))
   down(f(f(x0)))
   down(f(a))
   down(f(fresh_constant))
   f_flat(up(x0))
   h_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(28) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   top(up(x0))


----------------------------------------

(29)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TOP(up(x)) -> TOP(down(x))

The TRS R consists of the following rules:

   down(f(h(x))) -> up(f(i(x)))
   down(i(x)) -> up(h(x))
   down(h(y1)) -> h_flat(down(y1))
   down(f(f(y4))) -> f_flat(down(f(y4)))
   down(f(a)) -> f_flat(down(a))
   down(f(fresh_constant)) -> f_flat(down(fresh_constant))
   f_flat(up(x_1)) -> up(f(x_1))
   h_flat(up(x_1)) -> up(h(x_1))

The set Q consists of the following terms:

   down(f(h(x0)))
   down(i(x0))
   down(h(x0))
   down(f(f(x0)))
   down(f(a))
   down(f(fresh_constant))
   f_flat(up(x0))
   h_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(30) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   TOP(up(x)) -> TOP(down(x))
The remaining pairs can at least be oriented weakly.
Used ordering:  Matrix interpretation [MATRO]:

Non-tuple symbols: 
<<<
 M( h_flat_1(x_1) ) =  	[[0], [0]] 	+ 	[[0, 1], [0, 1]] 	* 	x_1
>>>

<<<
 M( a ) =  	[[1], [0]]
>>>

<<<
 M( down_1(x_1) ) =  	[[0], [0]] 	+ 	[[0, 1], [0, 1]] 	* 	x_1
>>>

<<<
 M( f_1(x_1) ) =  	[[1], [0]] 	+ 	[[1, 0], [1, 0]] 	* 	x_1
>>>

<<<
 M( i_1(x_1) ) =  	[[0], [1]] 	+ 	[[0, 0], [0, 1]] 	* 	x_1
>>>

<<<
 M( fresh_constant ) =  	[[1], [0]]
>>>

<<<
 M( h_1(x_1) ) =  	[[1], [0]] 	+ 	[[0, 0], [0, 1]] 	* 	x_1
>>>

<<<
 M( up_1(x_1) ) =  	[[0], [1]] 	+ 	[[1, 0], [0, 1]] 	* 	x_1
>>>

<<<
 M( f_flat_1(x_1) ) =  	[[1], [1]] 	+ 	[[1, 0], [1, 0]] 	* 	x_1
>>>

Tuple symbols: 
<<<
 M( TOP_1(x_1) ) =  	[[0]] 	+ 	[[0, 1]] 	* 	x_1
>>>



Matrix type: 

We used a basic matrix type which is not further parametrizeable.





As matrix orders are CE-compatible, we used usable rules w.r.t. argument filtering in the order.
The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   down(f(h(x))) -> up(f(i(x)))
   down(i(x)) -> up(h(x))
   down(h(y1)) -> h_flat(down(y1))
   down(f(f(y4))) -> f_flat(down(f(y4)))
   down(f(a)) -> f_flat(down(a))
   down(f(fresh_constant)) -> f_flat(down(fresh_constant))
   h_flat(up(x_1)) -> up(h(x_1))
   f_flat(up(x_1)) -> up(f(x_1))


----------------------------------------

(31)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   down(f(h(x))) -> up(f(i(x)))
   down(i(x)) -> up(h(x))
   down(h(y1)) -> h_flat(down(y1))
   down(f(f(y4))) -> f_flat(down(f(y4)))
   down(f(a)) -> f_flat(down(a))
   down(f(fresh_constant)) -> f_flat(down(fresh_constant))
   f_flat(up(x_1)) -> up(f(x_1))
   h_flat(up(x_1)) -> up(h(x_1))

The set Q consists of the following terms:

   down(f(h(x0)))
   down(i(x0))
   down(h(x0))
   down(f(f(x0)))
   down(f(a))
   down(f(fresh_constant))
   f_flat(up(x0))
   h_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(32) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(33)
YES
