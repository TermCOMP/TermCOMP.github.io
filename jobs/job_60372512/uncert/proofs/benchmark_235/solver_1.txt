YES
proof of /home/ff862203/input_aKuQ3EisRY.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Outermost Termination of the given OTRS could be proven:

(0) OTRS
(1) Raffelsieper-Zantema-Transformation [SOUND, 0 ms]
(2) QTRS
(3) QTRSRRRProof [EQUIVALENT, 18 ms]
(4) QTRS
(5) QTRSRRRProof [EQUIVALENT, 0 ms]
(6) QTRS
(7) QTRSRRRProof [EQUIVALENT, 0 ms]
(8) QTRS
(9) AAECC Innermost [EQUIVALENT, 0 ms]
(10) QTRS
(11) DependencyPairsProof [EQUIVALENT, 0 ms]
(12) QDP
(13) DependencyGraphProof [EQUIVALENT, 0 ms]
(14) AND
    (15) QDP
        (16) UsableRulesProof [EQUIVALENT, 0 ms]
        (17) QDP
        (18) QReductionProof [EQUIVALENT, 0 ms]
        (19) QDP
        (20) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (21) YES
    (22) QDP
        (23) UsableRulesProof [EQUIVALENT, 0 ms]
        (24) QDP
        (25) QReductionProof [EQUIVALENT, 0 ms]
        (26) QDP
        (27) RFCMatchBoundsDPProof [EQUIVALENT, 0 ms]
        (28) YES


----------------------------------------

(0)
Obligation:
Term rewrite system R:
The TRS R consists of the following rules:

   f(h(x)) -> f(i(x))
   h(x) -> f(h(x))
   i(x) -> h(x)
   f(i(x)) -> a



Outermost Strategy.

----------------------------------------

(1) Raffelsieper-Zantema-Transformation (SOUND)
We applied the Raffelsieper-Zantema transformation  to transform the outermost TRS to a standard TRS.
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   down(f(h(x))) -> up(f(i(x)))
   down(h(x)) -> up(f(h(x)))
   down(i(x)) -> up(h(x))
   down(f(i(x))) -> up(a)
   top(up(x)) -> top(down(x))
   down(f(f(y4))) -> f_flat(down(f(y4)))
   down(f(a)) -> f_flat(down(a))
   down(f(fresh_constant)) -> f_flat(down(fresh_constant))
   f_flat(up(x_1)) -> up(f(x_1))
   h_flat(up(x_1)) -> up(h(x_1))
   i_flat(up(x_1)) -> up(i(x_1))

Q is empty.

----------------------------------------

(3) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(a) = 0
   POL(down(x_1)) = 2*x_1
   POL(f(x_1)) = x_1
   POL(f_flat(x_1)) = x_1
   POL(fresh_constant) = 0
   POL(h(x_1)) = x_1
   POL(h_flat(x_1)) = 1 + 2*x_1
   POL(i(x_1)) = x_1
   POL(i_flat(x_1)) = x_1
   POL(top(x_1)) = x_1
   POL(up(x_1)) = 2*x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   h_flat(up(x_1)) -> up(h(x_1))




----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   down(f(h(x))) -> up(f(i(x)))
   down(h(x)) -> up(f(h(x)))
   down(i(x)) -> up(h(x))
   down(f(i(x))) -> up(a)
   top(up(x)) -> top(down(x))
   down(f(f(y4))) -> f_flat(down(f(y4)))
   down(f(a)) -> f_flat(down(a))
   down(f(fresh_constant)) -> f_flat(down(fresh_constant))
   f_flat(up(x_1)) -> up(f(x_1))
   i_flat(up(x_1)) -> up(i(x_1))

Q is empty.

----------------------------------------

(5) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(a) = 0
   POL(down(x_1)) = 2*x_1
   POL(f(x_1)) = x_1
   POL(f_flat(x_1)) = x_1
   POL(fresh_constant) = 0
   POL(h(x_1)) = x_1
   POL(i(x_1)) = x_1
   POL(i_flat(x_1)) = 2 + x_1
   POL(top(x_1)) = 2*x_1
   POL(up(x_1)) = 2*x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   i_flat(up(x_1)) -> up(i(x_1))




----------------------------------------

(6)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   down(f(h(x))) -> up(f(i(x)))
   down(h(x)) -> up(f(h(x)))
   down(i(x)) -> up(h(x))
   down(f(i(x))) -> up(a)
   top(up(x)) -> top(down(x))
   down(f(f(y4))) -> f_flat(down(f(y4)))
   down(f(a)) -> f_flat(down(a))
   down(f(fresh_constant)) -> f_flat(down(fresh_constant))
   f_flat(up(x_1)) -> up(f(x_1))

Q is empty.

----------------------------------------

(7) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(a) = 0
   POL(down(x_1)) = 2*x_1
   POL(f(x_1)) = x_1
   POL(f_flat(x_1)) = x_1
   POL(fresh_constant) = 0
   POL(h(x_1)) = 2 + x_1
   POL(i(x_1)) = 2 + x_1
   POL(top(x_1)) = x_1
   POL(up(x_1)) = 2*x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   down(f(i(x))) -> up(a)




----------------------------------------

(8)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   down(f(h(x))) -> up(f(i(x)))
   down(h(x)) -> up(f(h(x)))
   down(i(x)) -> up(h(x))
   top(up(x)) -> top(down(x))
   down(f(f(y4))) -> f_flat(down(f(y4)))
   down(f(a)) -> f_flat(down(a))
   down(f(fresh_constant)) -> f_flat(down(fresh_constant))
   f_flat(up(x_1)) -> up(f(x_1))

Q is empty.

----------------------------------------

(9) AAECC Innermost (EQUIVALENT)
We have applied [NOC,AAECCNOC] to switch to innermost. The TRS R 1 is 
   down(f(f(y4))) -> f_flat(down(f(y4)))
   down(f(a)) -> f_flat(down(a))
   down(f(fresh_constant)) -> f_flat(down(fresh_constant))
   f_flat(up(x_1)) -> up(f(x_1))
   down(f(h(x))) -> up(f(i(x)))
   down(h(x)) -> up(f(h(x)))
   down(i(x)) -> up(h(x))

The TRS R 2 is 
   top(up(x)) -> top(down(x))

The signature Sigma is {top_1}
----------------------------------------

(10)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   down(f(h(x))) -> up(f(i(x)))
   down(h(x)) -> up(f(h(x)))
   down(i(x)) -> up(h(x))
   top(up(x)) -> top(down(x))
   down(f(f(y4))) -> f_flat(down(f(y4)))
   down(f(a)) -> f_flat(down(a))
   down(f(fresh_constant)) -> f_flat(down(fresh_constant))
   f_flat(up(x_1)) -> up(f(x_1))

The set Q consists of the following terms:

   down(f(h(x0)))
   down(h(x0))
   down(i(x0))
   top(up(x0))
   down(f(f(x0)))
   down(f(a))
   down(f(fresh_constant))
   f_flat(up(x0))


----------------------------------------

(11) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TOP(up(x)) -> TOP(down(x))
   TOP(up(x)) -> DOWN(x)
   DOWN(f(f(y4))) -> F_FLAT(down(f(y4)))
   DOWN(f(f(y4))) -> DOWN(f(y4))
   DOWN(f(a)) -> F_FLAT(down(a))
   DOWN(f(a)) -> DOWN(a)
   DOWN(f(fresh_constant)) -> F_FLAT(down(fresh_constant))
   DOWN(f(fresh_constant)) -> DOWN(fresh_constant)

The TRS R consists of the following rules:

   down(f(h(x))) -> up(f(i(x)))
   down(h(x)) -> up(f(h(x)))
   down(i(x)) -> up(h(x))
   top(up(x)) -> top(down(x))
   down(f(f(y4))) -> f_flat(down(f(y4)))
   down(f(a)) -> f_flat(down(a))
   down(f(fresh_constant)) -> f_flat(down(fresh_constant))
   f_flat(up(x_1)) -> up(f(x_1))

The set Q consists of the following terms:

   down(f(h(x0)))
   down(h(x0))
   down(i(x0))
   top(up(x0))
   down(f(f(x0)))
   down(f(a))
   down(f(fresh_constant))
   f_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs with 6 less nodes.
----------------------------------------

(14)
Complex Obligation (AND)

----------------------------------------

(15)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DOWN(f(f(y4))) -> DOWN(f(y4))

The TRS R consists of the following rules:

   down(f(h(x))) -> up(f(i(x)))
   down(h(x)) -> up(f(h(x)))
   down(i(x)) -> up(h(x))
   top(up(x)) -> top(down(x))
   down(f(f(y4))) -> f_flat(down(f(y4)))
   down(f(a)) -> f_flat(down(a))
   down(f(fresh_constant)) -> f_flat(down(fresh_constant))
   f_flat(up(x_1)) -> up(f(x_1))

The set Q consists of the following terms:

   down(f(h(x0)))
   down(h(x0))
   down(i(x0))
   top(up(x0))
   down(f(f(x0)))
   down(f(a))
   down(f(fresh_constant))
   f_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(16) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(17)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DOWN(f(f(y4))) -> DOWN(f(y4))

R is empty.
The set Q consists of the following terms:

   down(f(h(x0)))
   down(h(x0))
   down(i(x0))
   top(up(x0))
   down(f(f(x0)))
   down(f(a))
   down(f(fresh_constant))
   f_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(18) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   down(f(h(x0)))
   down(h(x0))
   down(i(x0))
   top(up(x0))
   down(f(f(x0)))
   down(f(a))
   down(f(fresh_constant))
   f_flat(up(x0))


----------------------------------------

(19)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DOWN(f(f(y4))) -> DOWN(f(y4))

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(20) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*DOWN(f(f(y4))) -> DOWN(f(y4))
The graph contains the following edges 1 > 1


----------------------------------------

(21)
YES

----------------------------------------

(22)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TOP(up(x)) -> TOP(down(x))

The TRS R consists of the following rules:

   down(f(h(x))) -> up(f(i(x)))
   down(h(x)) -> up(f(h(x)))
   down(i(x)) -> up(h(x))
   top(up(x)) -> top(down(x))
   down(f(f(y4))) -> f_flat(down(f(y4)))
   down(f(a)) -> f_flat(down(a))
   down(f(fresh_constant)) -> f_flat(down(fresh_constant))
   f_flat(up(x_1)) -> up(f(x_1))

The set Q consists of the following terms:

   down(f(h(x0)))
   down(h(x0))
   down(i(x0))
   top(up(x0))
   down(f(f(x0)))
   down(f(a))
   down(f(fresh_constant))
   f_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(23) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(24)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TOP(up(x)) -> TOP(down(x))

The TRS R consists of the following rules:

   down(f(h(x))) -> up(f(i(x)))
   down(h(x)) -> up(f(h(x)))
   down(i(x)) -> up(h(x))
   down(f(f(y4))) -> f_flat(down(f(y4)))
   down(f(a)) -> f_flat(down(a))
   down(f(fresh_constant)) -> f_flat(down(fresh_constant))
   f_flat(up(x_1)) -> up(f(x_1))

The set Q consists of the following terms:

   down(f(h(x0)))
   down(h(x0))
   down(i(x0))
   top(up(x0))
   down(f(f(x0)))
   down(f(a))
   down(f(fresh_constant))
   f_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(25) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   top(up(x0))


----------------------------------------

(26)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TOP(up(x)) -> TOP(down(x))

The TRS R consists of the following rules:

   down(f(h(x))) -> up(f(i(x)))
   down(h(x)) -> up(f(h(x)))
   down(i(x)) -> up(h(x))
   down(f(f(y4))) -> f_flat(down(f(y4)))
   down(f(a)) -> f_flat(down(a))
   down(f(fresh_constant)) -> f_flat(down(fresh_constant))
   f_flat(up(x_1)) -> up(f(x_1))

The set Q consists of the following terms:

   down(f(h(x0)))
   down(h(x0))
   down(i(x0))
   down(f(f(x0)))
   down(f(a))
   down(f(fresh_constant))
   f_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(27) RFCMatchBoundsDPProof (EQUIVALENT)
Finiteness of the DP problem can be shown by a matchbound of 9. 
As the DP problem is minimal we only have to initialize the certificate graph by the rules of P:

   TOP(up(x)) -> TOP(down(x))

To find matches we regarded all rules of R and P:

   down(f(h(x))) -> up(f(i(x)))
   down(h(x)) -> up(f(h(x)))
   down(i(x)) -> up(h(x))
   down(f(f(y4))) -> f_flat(down(f(y4)))
   down(f(a)) -> f_flat(down(a))
   down(f(fresh_constant)) -> f_flat(down(fresh_constant))
   f_flat(up(x_1)) -> up(f(x_1))
   TOP(up(x)) -> TOP(down(x))

The certificate found is represented by the following graph.
The certificate consists of the following enumerated nodes:
333, 334, 336, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 388, 395, 396, 399, 400, 401, 405, 406, 409, 410, 416, 417, 423, 424, 425, 428, 429, 430, 431, 435, 441, 442, 443, 452, 453, 457, 458

Node 333 is start node and node 334 is final node.

Those nodes are connected through the following edges:

* 333 to 336 labelled TOP_1(0)* 333 to 350 labelled TOP_1(1)* 333 to 355 labelled TOP_1(2)* 333 to 360 labelled TOP_1(3)* 333 to 366 labelled TOP_1(4)* 334 to 334 labelled #_1(0)* 336 to 334 labelled down_1(0)* 336 to 346 labelled up_1(1)* 336 to 347 labelled up_1(1)* 336 to 348 labelled f_flat_1(1)* 336 to 351 labelled up_1(2)* 346 to 347 labelled f_1(1)* 347 to 334 labelled i_1(1), h_1(1)* 348 to 349 labelled down_1(1)* 348 to 346 labelled up_1(1)* 348 to 348 labelled f_flat_1(1)* 348 to 351 labelled up_1(2)* 349 to 334 labelled f_1(1), a(1), fresh_constant(1)* 350 to 346 labelled down_1(1)* 350 to 347 labelled down_1(1)* 350 to 352 labelled up_1(2)* 350 to 353 labelled up_1(2)* 350 to 351 labelled down_1(1)* 350 to 358 labelled f_flat_1(2)* 350 to 363 labelled up_1(3)* 351 to 346 labelled f_1(2)* 351 to 351 labelled f_1(2)* 352 to 334 labelled h_1(2)* 353 to 354 labelled f_1(2)* 354 to 334 labelled h_1(2), i_1(2)* 355 to 352 labelled down_1(2)* 355 to 353 labelled down_1(2)* 355 to 356 labelled up_1(3)* 355 to 363 labelled down_1(2)* 355 to 368 labelled f_flat_1(3)* 355 to 388 labelled up_1(4)* 356 to 357 labelled f_1(3)* 357 to 334 labelled h_1(3), i_1(3)* 358 to 359 labelled down_1(2)* 358 to 353 labelled up_1(2)* 358 to 358 labelled f_flat_1(2)* 358 to 361 labelled f_flat_1(3)* 358 to 363 labelled up_1(3)* 358 to 367 labelled up_1(4)* 359 to 347 labelled f_1(2)* 359 to 346 labelled f_1(2)* 359 to 351 labelled f_1(2)* 360 to 356 labelled down_1(3)* 360 to 364 labelled up_1(4)* 360 to 388 labelled down_1(3)* 360 to 400 labelled f_flat_1(4)* 360 to 409 labelled up_1(5)* 361 to 362 labelled down_1(3)* 361 to 358 labelled f_flat_1(2)* 361 to 361 labelled f_flat_1(3)* 361 to 363 labelled up_1(3)* 361 to 367 labelled up_1(4)* 362 to 346 labelled f_1(3)* 362 to 351 labelled f_1(3)* 363 to 353 labelled f_1(3)* 363 to 363 labelled f_1(3)* 363 to 367 labelled f_1(3)* 364 to 365 labelled f_1(4)* 365 to 334 labelled i_1(4)* 366 to 364 labelled down_1(4)* 366 to 409 labelled down_1(4)* 366 to 424 labelled f_flat_1(5)* 367 to 363 labelled f_1(4)* 367 to 367 labelled f_1(4)* 368 to 369 labelled down_1(3)* 368 to 356 labelled up_1(3)* 368 to 368 labelled f_flat_1(3)* 368 to 370 labelled f_flat_1(4)* 368 to 388 labelled up_1(4)* 368 to 399 labelled up_1(5)* 369 to 354 labelled f_1(3)* 369 to 353 labelled f_1(3)* 369 to 363 labelled f_1(3)* 369 to 367 labelled f_1(3)* 370 to 371 labelled down_1(4)* 370 to 368 labelled f_flat_1(3)* 370 to 370 labelled f_flat_1(4)* 370 to 388 labelled up_1(4)* 370 to 395 labelled f_flat_1(5)* 370 to 399 labelled up_1(5)* 370 to 410 labelled up_1(6)* 371 to 353 labelled f_1(4)* 371 to 363 labelled f_1(4)* 371 to 367 labelled f_1(4)* 388 to 356 labelled f_1(4)* 388 to 388 labelled f_1(4)* 388 to 399 labelled f_1(4)* 395 to 396 labelled down_1(5)* 395 to 370 labelled f_flat_1(4)* 395 to 395 labelled f_flat_1(5)* 395 to 399 labelled up_1(5)* 395 to 410 labelled up_1(6)* 396 to 363 labelled f_1(5)* 396 to 367 labelled f_1(5)* 399 to 388 labelled f_1(5)* 399 to 399 labelled f_1(5)* 399 to 410 labelled f_1(5)* 400 to 401 labelled down_1(4)* 400 to 364 labelled up_1(4)* 400 to 400 labelled f_flat_1(4)* 400 to 405 labelled f_flat_1(5)* 400 to 409 labelled up_1(5)* 400 to 423 labelled up_1(6)* 401 to 357 labelled f_1(4)* 401 to 356 labelled f_1(4)* 401 to 388 labelled f_1(4)* 401 to 399 labelled f_1(4)* 401 to 410 labelled f_1(4)* 405 to 406 labelled down_1(5)* 405 to 400 labelled f_flat_1(4)* 405 to 405 labelled f_flat_1(5)* 405 to 409 labelled up_1(5)* 405 to 416 labelled f_flat_1(6)* 405 to 423 labelled up_1(6)* 405 to 435 labelled up_1(7)* 406 to 356 labelled f_1(5)* 406 to 388 labelled f_1(5)* 406 to 399 labelled f_1(5)* 406 to 410 labelled f_1(5)* 409 to 364 labelled f_1(5)* 409 to 409 labelled f_1(5)* 409 to 423 labelled f_1(5)* 410 to 399 labelled f_1(6)* 410 to 410 labelled f_1(6)* 416 to 417 labelled down_1(6)* 416 to 405 labelled f_flat_1(5)* 416 to 416 labelled f_flat_1(6)* 416 to 423 labelled up_1(6)* 416 to 430 labelled f_flat_1(7)* 416 to 435 labelled up_1(7)* 416 to 443 labelled up_1(8)* 417 to 388 labelled f_1(6)* 417 to 399 labelled f_1(6)* 417 to 410 labelled f_1(6)* 423 to 409 labelled f_1(6)* 423 to 423 labelled f_1(6)* 423 to 435 labelled f_1(6)* 424 to 425 labelled down_1(5)* 424 to 424 labelled f_flat_1(5)* 424 to 428 labelled f_flat_1(6)* 425 to 365 labelled f_1(5)* 425 to 364 labelled f_1(5)* 425 to 409 labelled f_1(5)* 425 to 423 labelled f_1(5)* 425 to 435 labelled f_1(5)* 428 to 429 labelled down_1(6)* 428 to 424 labelled f_flat_1(5)* 428 to 428 labelled f_flat_1(6)* 428 to 441 labelled f_flat_1(7)* 429 to 364 labelled f_1(6)* 429 to 409 labelled f_1(6)* 429 to 423 labelled f_1(6)* 429 to 435 labelled f_1(6)* 429 to 443 labelled f_1(6)* 430 to 431 labelled down_1(7)* 430 to 416 labelled f_flat_1(6)* 430 to 430 labelled f_flat_1(7)* 430 to 435 labelled up_1(7)* 430 to 443 labelled up_1(8)* 431 to 399 labelled f_1(7)* 431 to 410 labelled f_1(7)* 435 to 423 labelled f_1(7)* 435 to 435 labelled f_1(7)* 435 to 443 labelled f_1(7)* 441 to 442 labelled down_1(7)* 441 to 428 labelled f_flat_1(6)* 441 to 441 labelled f_flat_1(7)* 441 to 452 labelled f_flat_1(8)* 442 to 409 labelled f_1(7)* 442 to 423 labelled f_1(7)* 442 to 435 labelled f_1(7)* 442 to 443 labelled f_1(7)* 443 to 435 labelled f_1(8)* 443 to 443 labelled f_1(8)* 452 to 453 labelled down_1(8)* 452 to 441 labelled f_flat_1(7)* 452 to 452 labelled f_flat_1(8)* 452 to 457 labelled f_flat_1(9)* 453 to 423 labelled f_1(8)* 453 to 435 labelled f_1(8)* 453 to 443 labelled f_1(8)* 457 to 458 labelled down_1(9)* 457 to 452 labelled f_flat_1(8)* 457 to 457 labelled f_flat_1(9)* 458 to 435 labelled f_1(9)* 458 to 443 labelled f_1(9)


----------------------------------------

(28)
YES
