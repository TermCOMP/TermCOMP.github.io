YES
proof of /home/ff862203/input_Gt2V62jUfs.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Outermost Termination of the given OTRS could be proven:

(0) OTRS
(1) Raffelsieper-Zantema-Transformation [SOUND, 0 ms]
(2) QTRS
(3) QTRSRRRProof [EQUIVALENT, 24 ms]
(4) QTRS
(5) QTRSRRRProof [EQUIVALENT, 5 ms]
(6) QTRS
(7) AAECC Innermost [EQUIVALENT, 0 ms]
(8) QTRS
(9) DependencyPairsProof [EQUIVALENT, 0 ms]
(10) QDP
(11) DependencyGraphProof [EQUIVALENT, 0 ms]
(12) AND
    (13) QDP
        (14) UsableRulesProof [EQUIVALENT, 0 ms]
        (15) QDP
        (16) QReductionProof [EQUIVALENT, 0 ms]
        (17) QDP
        (18) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (19) YES
    (20) QDP
        (21) UsableRulesProof [EQUIVALENT, 0 ms]
        (22) QDP
        (23) QReductionProof [EQUIVALENT, 0 ms]
        (24) QDP
        (25) RFCMatchBoundsDPProof [EQUIVALENT, 0 ms]
        (26) YES


----------------------------------------

(0)
Obligation:
Term rewrite system R:
The TRS R consists of the following rules:

   f(h(x)) -> f(i(x))
   h(x) -> f(h(x))
   i(x) -> h(x)
   f(i(x)) -> x



Outermost Strategy.

----------------------------------------

(1) Raffelsieper-Zantema-Transformation (SOUND)
We applied the Raffelsieper-Zantema transformation  to transform the outermost TRS to a standard TRS.
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   down(f(h(x))) -> up(f(i(x)))
   down(h(x)) -> up(f(h(x)))
   down(i(x)) -> up(h(x))
   down(f(i(x))) -> up(x)
   top(up(x)) -> top(down(x))
   down(f(f(y4))) -> f_flat(down(f(y4)))
   down(f(fresh_constant)) -> f_flat(down(fresh_constant))
   f_flat(up(x_1)) -> up(f(x_1))
   h_flat(up(x_1)) -> up(h(x_1))
   i_flat(up(x_1)) -> up(i(x_1))

Q is empty.

----------------------------------------

(3) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(down(x_1)) = 2 + 2*x_1
   POL(f(x_1)) = x_1
   POL(f_flat(x_1)) = x_1
   POL(fresh_constant) = 0
   POL(h(x_1)) = x_1
   POL(h_flat(x_1)) = 1 + 2*x_1
   POL(i(x_1)) = x_1
   POL(i_flat(x_1)) = 1 + 2*x_1
   POL(top(x_1)) = 2*x_1
   POL(up(x_1)) = 2 + 2*x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   h_flat(up(x_1)) -> up(h(x_1))
   i_flat(up(x_1)) -> up(i(x_1))




----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   down(f(h(x))) -> up(f(i(x)))
   down(h(x)) -> up(f(h(x)))
   down(i(x)) -> up(h(x))
   down(f(i(x))) -> up(x)
   top(up(x)) -> top(down(x))
   down(f(f(y4))) -> f_flat(down(f(y4)))
   down(f(fresh_constant)) -> f_flat(down(fresh_constant))
   f_flat(up(x_1)) -> up(f(x_1))

Q is empty.

----------------------------------------

(5) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(down(x_1)) = 2*x_1
   POL(f(x_1)) = x_1
   POL(f_flat(x_1)) = x_1
   POL(fresh_constant) = 0
   POL(h(x_1)) = 1 + 2*x_1
   POL(i(x_1)) = 1 + 2*x_1
   POL(top(x_1)) = x_1
   POL(up(x_1)) = 2*x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   down(f(i(x))) -> up(x)




----------------------------------------

(6)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   down(f(h(x))) -> up(f(i(x)))
   down(h(x)) -> up(f(h(x)))
   down(i(x)) -> up(h(x))
   top(up(x)) -> top(down(x))
   down(f(f(y4))) -> f_flat(down(f(y4)))
   down(f(fresh_constant)) -> f_flat(down(fresh_constant))
   f_flat(up(x_1)) -> up(f(x_1))

Q is empty.

----------------------------------------

(7) AAECC Innermost (EQUIVALENT)
We have applied [NOC,AAECCNOC] to switch to innermost. The TRS R 1 is 
   down(f(f(y4))) -> f_flat(down(f(y4)))
   down(f(fresh_constant)) -> f_flat(down(fresh_constant))
   f_flat(up(x_1)) -> up(f(x_1))
   down(f(h(x))) -> up(f(i(x)))
   down(h(x)) -> up(f(h(x)))
   down(i(x)) -> up(h(x))

The TRS R 2 is 
   top(up(x)) -> top(down(x))

The signature Sigma is {top_1}
----------------------------------------

(8)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   down(f(h(x))) -> up(f(i(x)))
   down(h(x)) -> up(f(h(x)))
   down(i(x)) -> up(h(x))
   top(up(x)) -> top(down(x))
   down(f(f(y4))) -> f_flat(down(f(y4)))
   down(f(fresh_constant)) -> f_flat(down(fresh_constant))
   f_flat(up(x_1)) -> up(f(x_1))

The set Q consists of the following terms:

   down(f(h(x0)))
   down(h(x0))
   down(i(x0))
   top(up(x0))
   down(f(f(x0)))
   down(f(fresh_constant))
   f_flat(up(x0))


----------------------------------------

(9) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TOP(up(x)) -> TOP(down(x))
   TOP(up(x)) -> DOWN(x)
   DOWN(f(f(y4))) -> F_FLAT(down(f(y4)))
   DOWN(f(f(y4))) -> DOWN(f(y4))
   DOWN(f(fresh_constant)) -> F_FLAT(down(fresh_constant))
   DOWN(f(fresh_constant)) -> DOWN(fresh_constant)

The TRS R consists of the following rules:

   down(f(h(x))) -> up(f(i(x)))
   down(h(x)) -> up(f(h(x)))
   down(i(x)) -> up(h(x))
   top(up(x)) -> top(down(x))
   down(f(f(y4))) -> f_flat(down(f(y4)))
   down(f(fresh_constant)) -> f_flat(down(fresh_constant))
   f_flat(up(x_1)) -> up(f(x_1))

The set Q consists of the following terms:

   down(f(h(x0)))
   down(h(x0))
   down(i(x0))
   top(up(x0))
   down(f(f(x0)))
   down(f(fresh_constant))
   f_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs with 4 less nodes.
----------------------------------------

(12)
Complex Obligation (AND)

----------------------------------------

(13)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DOWN(f(f(y4))) -> DOWN(f(y4))

The TRS R consists of the following rules:

   down(f(h(x))) -> up(f(i(x)))
   down(h(x)) -> up(f(h(x)))
   down(i(x)) -> up(h(x))
   top(up(x)) -> top(down(x))
   down(f(f(y4))) -> f_flat(down(f(y4)))
   down(f(fresh_constant)) -> f_flat(down(fresh_constant))
   f_flat(up(x_1)) -> up(f(x_1))

The set Q consists of the following terms:

   down(f(h(x0)))
   down(h(x0))
   down(i(x0))
   top(up(x0))
   down(f(f(x0)))
   down(f(fresh_constant))
   f_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(14) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(15)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DOWN(f(f(y4))) -> DOWN(f(y4))

R is empty.
The set Q consists of the following terms:

   down(f(h(x0)))
   down(h(x0))
   down(i(x0))
   top(up(x0))
   down(f(f(x0)))
   down(f(fresh_constant))
   f_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(16) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   down(f(h(x0)))
   down(h(x0))
   down(i(x0))
   top(up(x0))
   down(f(f(x0)))
   down(f(fresh_constant))
   f_flat(up(x0))


----------------------------------------

(17)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DOWN(f(f(y4))) -> DOWN(f(y4))

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(18) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*DOWN(f(f(y4))) -> DOWN(f(y4))
The graph contains the following edges 1 > 1


----------------------------------------

(19)
YES

----------------------------------------

(20)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TOP(up(x)) -> TOP(down(x))

The TRS R consists of the following rules:

   down(f(h(x))) -> up(f(i(x)))
   down(h(x)) -> up(f(h(x)))
   down(i(x)) -> up(h(x))
   top(up(x)) -> top(down(x))
   down(f(f(y4))) -> f_flat(down(f(y4)))
   down(f(fresh_constant)) -> f_flat(down(fresh_constant))
   f_flat(up(x_1)) -> up(f(x_1))

The set Q consists of the following terms:

   down(f(h(x0)))
   down(h(x0))
   down(i(x0))
   top(up(x0))
   down(f(f(x0)))
   down(f(fresh_constant))
   f_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(21) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(22)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TOP(up(x)) -> TOP(down(x))

The TRS R consists of the following rules:

   down(f(h(x))) -> up(f(i(x)))
   down(h(x)) -> up(f(h(x)))
   down(i(x)) -> up(h(x))
   down(f(f(y4))) -> f_flat(down(f(y4)))
   down(f(fresh_constant)) -> f_flat(down(fresh_constant))
   f_flat(up(x_1)) -> up(f(x_1))

The set Q consists of the following terms:

   down(f(h(x0)))
   down(h(x0))
   down(i(x0))
   top(up(x0))
   down(f(f(x0)))
   down(f(fresh_constant))
   f_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(23) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   top(up(x0))


----------------------------------------

(24)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TOP(up(x)) -> TOP(down(x))

The TRS R consists of the following rules:

   down(f(h(x))) -> up(f(i(x)))
   down(h(x)) -> up(f(h(x)))
   down(i(x)) -> up(h(x))
   down(f(f(y4))) -> f_flat(down(f(y4)))
   down(f(fresh_constant)) -> f_flat(down(fresh_constant))
   f_flat(up(x_1)) -> up(f(x_1))

The set Q consists of the following terms:

   down(f(h(x0)))
   down(h(x0))
   down(i(x0))
   down(f(f(x0)))
   down(f(fresh_constant))
   f_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(25) RFCMatchBoundsDPProof (EQUIVALENT)
Finiteness of the DP problem can be shown by a matchbound of 9. 
As the DP problem is minimal we only have to initialize the certificate graph by the rules of P:

   TOP(up(x)) -> TOP(down(x))

To find matches we regarded all rules of R and P:

   down(f(h(x))) -> up(f(i(x)))
   down(h(x)) -> up(f(h(x)))
   down(i(x)) -> up(h(x))
   down(f(f(y4))) -> f_flat(down(f(y4)))
   down(f(fresh_constant)) -> f_flat(down(fresh_constant))
   f_flat(up(x_1)) -> up(f(x_1))
   TOP(up(x)) -> TOP(down(x))

The certificate found is represented by the following graph.
The certificate consists of the following enumerated nodes:
290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 345, 346, 347, 348

Node 290 is start node and node 291 is final node.

Those nodes are connected through the following edges:

* 290 to 292 labelled TOP_1(0)* 290 to 297 labelled TOP_1(1)* 290 to 302 labelled TOP_1(2)* 290 to 307 labelled TOP_1(3)* 290 to 313 labelled TOP_1(4)* 291 to 291 labelled #_1(0)* 292 to 291 labelled down_1(0)* 292 to 293 labelled up_1(1)* 292 to 294 labelled up_1(1)* 292 to 295 labelled f_flat_1(1)* 292 to 298 labelled up_1(2)* 293 to 294 labelled f_1(1)* 294 to 291 labelled i_1(1), h_1(1)* 295 to 296 labelled down_1(1)* 295 to 293 labelled up_1(1)* 295 to 295 labelled f_flat_1(1)* 295 to 298 labelled up_1(2)* 296 to 291 labelled f_1(1), fresh_constant(1)* 297 to 293 labelled down_1(1)* 297 to 294 labelled down_1(1)* 297 to 299 labelled up_1(2)* 297 to 300 labelled up_1(2)* 297 to 298 labelled down_1(1)* 297 to 305 labelled f_flat_1(2)* 297 to 310 labelled up_1(3)* 298 to 293 labelled f_1(2)* 298 to 298 labelled f_1(2)* 299 to 291 labelled h_1(2)* 300 to 301 labelled f_1(2)* 301 to 291 labelled h_1(2), i_1(2)* 302 to 299 labelled down_1(2)* 302 to 300 labelled down_1(2)* 302 to 303 labelled up_1(3)* 302 to 310 labelled down_1(2)* 302 to 315 labelled f_flat_1(3)* 302 to 319 labelled up_1(4)* 303 to 304 labelled f_1(3)* 304 to 291 labelled h_1(3), i_1(3)* 305 to 306 labelled down_1(2)* 305 to 300 labelled up_1(2)* 305 to 305 labelled f_flat_1(2)* 305 to 308 labelled f_flat_1(3)* 305 to 310 labelled up_1(3)* 305 to 314 labelled up_1(4)* 306 to 294 labelled f_1(2)* 306 to 293 labelled f_1(2)* 306 to 298 labelled f_1(2)* 307 to 303 labelled down_1(3)* 307 to 311 labelled up_1(4)* 307 to 319 labelled down_1(3)* 307 to 323 labelled f_flat_1(4)* 307 to 327 labelled up_1(5)* 308 to 309 labelled down_1(3)* 308 to 305 labelled f_flat_1(2)* 308 to 308 labelled f_flat_1(3)* 308 to 310 labelled up_1(3)* 308 to 314 labelled up_1(4)* 309 to 293 labelled f_1(3)* 309 to 298 labelled f_1(3)* 310 to 300 labelled f_1(3)* 310 to 310 labelled f_1(3)* 310 to 314 labelled f_1(3)* 311 to 312 labelled f_1(4)* 312 to 291 labelled i_1(4)* 313 to 311 labelled down_1(4)* 313 to 327 labelled down_1(4)* 313 to 332 labelled f_flat_1(5)* 314 to 310 labelled f_1(4)* 314 to 314 labelled f_1(4)* 315 to 316 labelled down_1(3)* 315 to 303 labelled up_1(3)* 315 to 315 labelled f_flat_1(3)* 315 to 317 labelled f_flat_1(4)* 315 to 319 labelled up_1(4)* 315 to 322 labelled up_1(5)* 316 to 301 labelled f_1(3)* 316 to 300 labelled f_1(3)* 316 to 310 labelled f_1(3)* 316 to 314 labelled f_1(3)* 317 to 318 labelled down_1(4)* 317 to 315 labelled f_flat_1(3)* 317 to 317 labelled f_flat_1(4)* 317 to 319 labelled up_1(4)* 317 to 320 labelled f_flat_1(5)* 317 to 322 labelled up_1(5)* 317 to 328 labelled up_1(6)* 318 to 300 labelled f_1(4)* 318 to 310 labelled f_1(4)* 318 to 314 labelled f_1(4)* 319 to 303 labelled f_1(4)* 319 to 319 labelled f_1(4)* 319 to 322 labelled f_1(4)* 320 to 321 labelled down_1(5)* 320 to 317 labelled f_flat_1(4)* 320 to 320 labelled f_flat_1(5)* 320 to 322 labelled up_1(5)* 320 to 328 labelled up_1(6)* 321 to 310 labelled f_1(5)* 321 to 314 labelled f_1(5)* 322 to 319 labelled f_1(5)* 322 to 322 labelled f_1(5)* 322 to 328 labelled f_1(5)* 323 to 324 labelled down_1(4)* 323 to 311 labelled up_1(4)* 323 to 323 labelled f_flat_1(4)* 323 to 325 labelled f_flat_1(5)* 323 to 327 labelled up_1(5)* 323 to 331 labelled up_1(6)* 324 to 304 labelled f_1(4)* 324 to 303 labelled f_1(4)* 324 to 319 labelled f_1(4)* 324 to 322 labelled f_1(4)* 324 to 328 labelled f_1(4)* 325 to 326 labelled down_1(5)* 325 to 323 labelled f_flat_1(4)* 325 to 325 labelled f_flat_1(5)* 325 to 327 labelled up_1(5)* 325 to 329 labelled f_flat_1(6)* 325 to 331 labelled up_1(6)* 325 to 338 labelled up_1(7)* 326 to 303 labelled f_1(5)* 326 to 319 labelled f_1(5)* 326 to 322 labelled f_1(5)* 326 to 328 labelled f_1(5)* 327 to 311 labelled f_1(5)* 327 to 327 labelled f_1(5)* 327 to 331 labelled f_1(5)* 328 to 322 labelled f_1(6)* 328 to 328 labelled f_1(6)* 329 to 330 labelled down_1(6)* 329 to 325 labelled f_flat_1(5)* 329 to 329 labelled f_flat_1(6)* 329 to 331 labelled up_1(6)* 329 to 336 labelled f_flat_1(7)* 329 to 338 labelled up_1(7)* 329 to 341 labelled up_1(8)* 330 to 319 labelled f_1(6)* 330 to 322 labelled f_1(6)* 330 to 328 labelled f_1(6)* 331 to 327 labelled f_1(6)* 331 to 331 labelled f_1(6)* 331 to 338 labelled f_1(6)* 332 to 333 labelled down_1(5)* 332 to 332 labelled f_flat_1(5)* 332 to 334 labelled f_flat_1(6)* 333 to 312 labelled f_1(5)* 333 to 311 labelled f_1(5)* 333 to 327 labelled f_1(5)* 333 to 331 labelled f_1(5)* 333 to 338 labelled f_1(5)* 334 to 335 labelled down_1(6)* 334 to 332 labelled f_flat_1(5)* 334 to 334 labelled f_flat_1(6)* 334 to 339 labelled f_flat_1(7)* 335 to 311 labelled f_1(6)* 335 to 327 labelled f_1(6)* 335 to 331 labelled f_1(6)* 335 to 338 labelled f_1(6)* 335 to 341 labelled f_1(6)* 336 to 337 labelled down_1(7)* 336 to 329 labelled f_flat_1(6)* 336 to 336 labelled f_flat_1(7)* 336 to 338 labelled up_1(7)* 336 to 341 labelled up_1(8)* 337 to 322 labelled f_1(7)* 337 to 328 labelled f_1(7)* 338 to 331 labelled f_1(7)* 338 to 338 labelled f_1(7)* 338 to 341 labelled f_1(7)* 339 to 340 labelled down_1(7)* 339 to 334 labelled f_flat_1(6)* 339 to 339 labelled f_flat_1(7)* 339 to 345 labelled f_flat_1(8)* 340 to 327 labelled f_1(7)* 340 to 331 labelled f_1(7)* 340 to 338 labelled f_1(7)* 340 to 341 labelled f_1(7)* 341 to 338 labelled f_1(8)* 341 to 341 labelled f_1(8)* 345 to 346 labelled down_1(8)* 345 to 339 labelled f_flat_1(7)* 345 to 345 labelled f_flat_1(8)* 345 to 347 labelled f_flat_1(9)* 346 to 331 labelled f_1(8)* 346 to 338 labelled f_1(8)* 346 to 341 labelled f_1(8)* 347 to 348 labelled down_1(9)* 347 to 345 labelled f_flat_1(8)* 347 to 347 labelled f_flat_1(9)* 348 to 338 labelled f_1(9)* 348 to 341 labelled f_1(9)


----------------------------------------

(26)
YES
