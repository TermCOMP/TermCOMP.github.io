YES
proof of /home/ff862203/input_41AxGbauPu.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Outermost Termination of the given OTRS could be proven:

(0) OTRS
(1) Raffelsieper-Zantema-Transformation [SOUND, 0 ms]
(2) QTRS
(3) AAECC Innermost [EQUIVALENT, 0 ms]
(4) QTRS
(5) DependencyPairsProof [EQUIVALENT, 0 ms]
(6) QDP
(7) DependencyGraphProof [EQUIVALENT, 0 ms]
(8) AND
    (9) QDP
        (10) UsableRulesProof [EQUIVALENT, 0 ms]
        (11) QDP
        (12) QReductionProof [EQUIVALENT, 0 ms]
        (13) QDP
        (14) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (15) YES
    (16) QDP
        (17) UsableRulesProof [EQUIVALENT, 0 ms]
        (18) QDP
        (19) QReductionProof [EQUIVALENT, 0 ms]
        (20) QDP
        (21) TransformationProof [EQUIVALENT, 0 ms]
        (22) QDP
        (23) DependencyGraphProof [EQUIVALENT, 0 ms]
        (24) QDP
        (25) UsableRulesProof [EQUIVALENT, 0 ms]
        (26) QDP
        (27) TransformationProof [EQUIVALENT, 0 ms]
        (28) QDP
        (29) TransformationProof [EQUIVALENT, 0 ms]
        (30) QDP
        (31) TransformationProof [EQUIVALENT, 0 ms]
        (32) QDP
        (33) DependencyGraphProof [EQUIVALENT, 0 ms]
        (34) QDP
        (35) TransformationProof [EQUIVALENT, 0 ms]
        (36) QDP
        (37) QDPOrderProof [EQUIVALENT, 3 ms]
        (38) QDP
        (39) DependencyGraphProof [EQUIVALENT, 0 ms]
        (40) QDP
        (41) QDPOrderProof [EQUIVALENT, 0 ms]
        (42) QDP
        (43) QDPOrderProof [EQUIVALENT, 23 ms]
        (44) QDP
        (45) PisEmptyProof [EQUIVALENT, 0 ms]
        (46) YES


----------------------------------------

(0)
Obligation:
Term rewrite system R:
The TRS R consists of the following rules:

   a -> f(a)
   g(f(x)) -> f(g(g(x)))
   f(f(x)) -> b



Outermost Strategy.

----------------------------------------

(1) Raffelsieper-Zantema-Transformation (SOUND)
We applied the Raffelsieper-Zantema transformation  to transform the outermost TRS to a standard TRS.
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   down(a) -> up(f(a))
   down(g(f(x))) -> up(f(g(g(x))))
   down(f(f(x))) -> up(b)
   top(up(x)) -> top(down(x))
   down(f(a)) -> f_flat(down(a))
   down(f(g(y4))) -> f_flat(down(g(y4)))
   down(f(b)) -> f_flat(down(b))
   down(f(fresh_constant)) -> f_flat(down(fresh_constant))
   down(g(a)) -> g_flat(down(a))
   down(g(g(y7))) -> g_flat(down(g(y7)))
   down(g(b)) -> g_flat(down(b))
   down(g(fresh_constant)) -> g_flat(down(fresh_constant))
   f_flat(up(x_1)) -> up(f(x_1))
   g_flat(up(x_1)) -> up(g(x_1))

Q is empty.

----------------------------------------

(3) AAECC Innermost (EQUIVALENT)
We have applied [NOC,AAECCNOC] to switch to innermost. The TRS R 1 is 
   down(f(a)) -> f_flat(down(a))
   down(f(g(y4))) -> f_flat(down(g(y4)))
   down(f(b)) -> f_flat(down(b))
   down(f(fresh_constant)) -> f_flat(down(fresh_constant))
   down(g(a)) -> g_flat(down(a))
   down(g(g(y7))) -> g_flat(down(g(y7)))
   down(g(b)) -> g_flat(down(b))
   down(g(fresh_constant)) -> g_flat(down(fresh_constant))
   f_flat(up(x_1)) -> up(f(x_1))
   g_flat(up(x_1)) -> up(g(x_1))
   down(a) -> up(f(a))
   down(g(f(x))) -> up(f(g(g(x))))
   down(f(f(x))) -> up(b)

The TRS R 2 is 
   top(up(x)) -> top(down(x))

The signature Sigma is {top_1}
----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   down(a) -> up(f(a))
   down(g(f(x))) -> up(f(g(g(x))))
   down(f(f(x))) -> up(b)
   top(up(x)) -> top(down(x))
   down(f(a)) -> f_flat(down(a))
   down(f(g(y4))) -> f_flat(down(g(y4)))
   down(f(b)) -> f_flat(down(b))
   down(f(fresh_constant)) -> f_flat(down(fresh_constant))
   down(g(a)) -> g_flat(down(a))
   down(g(g(y7))) -> g_flat(down(g(y7)))
   down(g(b)) -> g_flat(down(b))
   down(g(fresh_constant)) -> g_flat(down(fresh_constant))
   f_flat(up(x_1)) -> up(f(x_1))
   g_flat(up(x_1)) -> up(g(x_1))

The set Q consists of the following terms:

   down(a)
   down(g(f(x0)))
   down(f(f(x0)))
   top(up(x0))
   down(f(a))
   down(f(g(x0)))
   down(f(b))
   down(f(fresh_constant))
   down(g(a))
   down(g(g(x0)))
   down(g(b))
   down(g(fresh_constant))
   f_flat(up(x0))
   g_flat(up(x0))


----------------------------------------

(5) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TOP(up(x)) -> TOP(down(x))
   TOP(up(x)) -> DOWN(x)
   DOWN(f(a)) -> F_FLAT(down(a))
   DOWN(f(a)) -> DOWN(a)
   DOWN(f(g(y4))) -> F_FLAT(down(g(y4)))
   DOWN(f(g(y4))) -> DOWN(g(y4))
   DOWN(f(b)) -> F_FLAT(down(b))
   DOWN(f(b)) -> DOWN(b)
   DOWN(f(fresh_constant)) -> F_FLAT(down(fresh_constant))
   DOWN(f(fresh_constant)) -> DOWN(fresh_constant)
   DOWN(g(a)) -> G_FLAT(down(a))
   DOWN(g(a)) -> DOWN(a)
   DOWN(g(g(y7))) -> G_FLAT(down(g(y7)))
   DOWN(g(g(y7))) -> DOWN(g(y7))
   DOWN(g(b)) -> G_FLAT(down(b))
   DOWN(g(b)) -> DOWN(b)
   DOWN(g(fresh_constant)) -> G_FLAT(down(fresh_constant))
   DOWN(g(fresh_constant)) -> DOWN(fresh_constant)

The TRS R consists of the following rules:

   down(a) -> up(f(a))
   down(g(f(x))) -> up(f(g(g(x))))
   down(f(f(x))) -> up(b)
   top(up(x)) -> top(down(x))
   down(f(a)) -> f_flat(down(a))
   down(f(g(y4))) -> f_flat(down(g(y4)))
   down(f(b)) -> f_flat(down(b))
   down(f(fresh_constant)) -> f_flat(down(fresh_constant))
   down(g(a)) -> g_flat(down(a))
   down(g(g(y7))) -> g_flat(down(g(y7)))
   down(g(b)) -> g_flat(down(b))
   down(g(fresh_constant)) -> g_flat(down(fresh_constant))
   f_flat(up(x_1)) -> up(f(x_1))
   g_flat(up(x_1)) -> up(g(x_1))

The set Q consists of the following terms:

   down(a)
   down(g(f(x0)))
   down(f(f(x0)))
   top(up(x0))
   down(f(a))
   down(f(g(x0)))
   down(f(b))
   down(f(fresh_constant))
   down(g(a))
   down(g(g(x0)))
   down(g(b))
   down(g(fresh_constant))
   f_flat(up(x0))
   g_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs with 16 less nodes.
----------------------------------------

(8)
Complex Obligation (AND)

----------------------------------------

(9)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DOWN(g(g(y7))) -> DOWN(g(y7))

The TRS R consists of the following rules:

   down(a) -> up(f(a))
   down(g(f(x))) -> up(f(g(g(x))))
   down(f(f(x))) -> up(b)
   top(up(x)) -> top(down(x))
   down(f(a)) -> f_flat(down(a))
   down(f(g(y4))) -> f_flat(down(g(y4)))
   down(f(b)) -> f_flat(down(b))
   down(f(fresh_constant)) -> f_flat(down(fresh_constant))
   down(g(a)) -> g_flat(down(a))
   down(g(g(y7))) -> g_flat(down(g(y7)))
   down(g(b)) -> g_flat(down(b))
   down(g(fresh_constant)) -> g_flat(down(fresh_constant))
   f_flat(up(x_1)) -> up(f(x_1))
   g_flat(up(x_1)) -> up(g(x_1))

The set Q consists of the following terms:

   down(a)
   down(g(f(x0)))
   down(f(f(x0)))
   top(up(x0))
   down(f(a))
   down(f(g(x0)))
   down(f(b))
   down(f(fresh_constant))
   down(g(a))
   down(g(g(x0)))
   down(g(b))
   down(g(fresh_constant))
   f_flat(up(x0))
   g_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(10) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DOWN(g(g(y7))) -> DOWN(g(y7))

R is empty.
The set Q consists of the following terms:

   down(a)
   down(g(f(x0)))
   down(f(f(x0)))
   top(up(x0))
   down(f(a))
   down(f(g(x0)))
   down(f(b))
   down(f(fresh_constant))
   down(g(a))
   down(g(g(x0)))
   down(g(b))
   down(g(fresh_constant))
   f_flat(up(x0))
   g_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(12) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   down(a)
   down(g(f(x0)))
   down(f(f(x0)))
   top(up(x0))
   down(f(a))
   down(f(g(x0)))
   down(f(b))
   down(f(fresh_constant))
   down(g(a))
   down(g(g(x0)))
   down(g(b))
   down(g(fresh_constant))
   f_flat(up(x0))
   g_flat(up(x0))


----------------------------------------

(13)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DOWN(g(g(y7))) -> DOWN(g(y7))

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(14) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*DOWN(g(g(y7))) -> DOWN(g(y7))
The graph contains the following edges 1 > 1


----------------------------------------

(15)
YES

----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TOP(up(x)) -> TOP(down(x))

The TRS R consists of the following rules:

   down(a) -> up(f(a))
   down(g(f(x))) -> up(f(g(g(x))))
   down(f(f(x))) -> up(b)
   top(up(x)) -> top(down(x))
   down(f(a)) -> f_flat(down(a))
   down(f(g(y4))) -> f_flat(down(g(y4)))
   down(f(b)) -> f_flat(down(b))
   down(f(fresh_constant)) -> f_flat(down(fresh_constant))
   down(g(a)) -> g_flat(down(a))
   down(g(g(y7))) -> g_flat(down(g(y7)))
   down(g(b)) -> g_flat(down(b))
   down(g(fresh_constant)) -> g_flat(down(fresh_constant))
   f_flat(up(x_1)) -> up(f(x_1))
   g_flat(up(x_1)) -> up(g(x_1))

The set Q consists of the following terms:

   down(a)
   down(g(f(x0)))
   down(f(f(x0)))
   top(up(x0))
   down(f(a))
   down(f(g(x0)))
   down(f(b))
   down(f(fresh_constant))
   down(g(a))
   down(g(g(x0)))
   down(g(b))
   down(g(fresh_constant))
   f_flat(up(x0))
   g_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TOP(up(x)) -> TOP(down(x))

The TRS R consists of the following rules:

   down(a) -> up(f(a))
   down(g(f(x))) -> up(f(g(g(x))))
   down(f(f(x))) -> up(b)
   down(f(a)) -> f_flat(down(a))
   down(f(g(y4))) -> f_flat(down(g(y4)))
   down(f(b)) -> f_flat(down(b))
   down(f(fresh_constant)) -> f_flat(down(fresh_constant))
   down(g(a)) -> g_flat(down(a))
   down(g(g(y7))) -> g_flat(down(g(y7)))
   down(g(b)) -> g_flat(down(b))
   down(g(fresh_constant)) -> g_flat(down(fresh_constant))
   g_flat(up(x_1)) -> up(g(x_1))
   f_flat(up(x_1)) -> up(f(x_1))

The set Q consists of the following terms:

   down(a)
   down(g(f(x0)))
   down(f(f(x0)))
   top(up(x0))
   down(f(a))
   down(f(g(x0)))
   down(f(b))
   down(f(fresh_constant))
   down(g(a))
   down(g(g(x0)))
   down(g(b))
   down(g(fresh_constant))
   f_flat(up(x0))
   g_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   top(up(x0))


----------------------------------------

(20)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TOP(up(x)) -> TOP(down(x))

The TRS R consists of the following rules:

   down(a) -> up(f(a))
   down(g(f(x))) -> up(f(g(g(x))))
   down(f(f(x))) -> up(b)
   down(f(a)) -> f_flat(down(a))
   down(f(g(y4))) -> f_flat(down(g(y4)))
   down(f(b)) -> f_flat(down(b))
   down(f(fresh_constant)) -> f_flat(down(fresh_constant))
   down(g(a)) -> g_flat(down(a))
   down(g(g(y7))) -> g_flat(down(g(y7)))
   down(g(b)) -> g_flat(down(b))
   down(g(fresh_constant)) -> g_flat(down(fresh_constant))
   g_flat(up(x_1)) -> up(g(x_1))
   f_flat(up(x_1)) -> up(f(x_1))

The set Q consists of the following terms:

   down(a)
   down(g(f(x0)))
   down(f(f(x0)))
   down(f(a))
   down(f(g(x0)))
   down(f(b))
   down(f(fresh_constant))
   down(g(a))
   down(g(g(x0)))
   down(g(b))
   down(g(fresh_constant))
   f_flat(up(x0))
   g_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(21) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule TOP(up(x)) -> TOP(down(x)) at position [0] we obtained the following new rules [LPAR04]:

   (TOP(up(a)) -> TOP(up(f(a))),TOP(up(a)) -> TOP(up(f(a))))
   (TOP(up(g(f(x0)))) -> TOP(up(f(g(g(x0))))),TOP(up(g(f(x0)))) -> TOP(up(f(g(g(x0))))))
   (TOP(up(f(f(x0)))) -> TOP(up(b)),TOP(up(f(f(x0)))) -> TOP(up(b)))
   (TOP(up(f(a))) -> TOP(f_flat(down(a))),TOP(up(f(a))) -> TOP(f_flat(down(a))))
   (TOP(up(f(g(x0)))) -> TOP(f_flat(down(g(x0)))),TOP(up(f(g(x0)))) -> TOP(f_flat(down(g(x0)))))
   (TOP(up(f(b))) -> TOP(f_flat(down(b))),TOP(up(f(b))) -> TOP(f_flat(down(b))))
   (TOP(up(f(fresh_constant))) -> TOP(f_flat(down(fresh_constant))),TOP(up(f(fresh_constant))) -> TOP(f_flat(down(fresh_constant))))
   (TOP(up(g(a))) -> TOP(g_flat(down(a))),TOP(up(g(a))) -> TOP(g_flat(down(a))))
   (TOP(up(g(g(x0)))) -> TOP(g_flat(down(g(x0)))),TOP(up(g(g(x0)))) -> TOP(g_flat(down(g(x0)))))
   (TOP(up(g(b))) -> TOP(g_flat(down(b))),TOP(up(g(b))) -> TOP(g_flat(down(b))))
   (TOP(up(g(fresh_constant))) -> TOP(g_flat(down(fresh_constant))),TOP(up(g(fresh_constant))) -> TOP(g_flat(down(fresh_constant))))


----------------------------------------

(22)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TOP(up(a)) -> TOP(up(f(a)))
   TOP(up(g(f(x0)))) -> TOP(up(f(g(g(x0)))))
   TOP(up(f(f(x0)))) -> TOP(up(b))
   TOP(up(f(a))) -> TOP(f_flat(down(a)))
   TOP(up(f(g(x0)))) -> TOP(f_flat(down(g(x0))))
   TOP(up(f(b))) -> TOP(f_flat(down(b)))
   TOP(up(f(fresh_constant))) -> TOP(f_flat(down(fresh_constant)))
   TOP(up(g(a))) -> TOP(g_flat(down(a)))
   TOP(up(g(g(x0)))) -> TOP(g_flat(down(g(x0))))
   TOP(up(g(b))) -> TOP(g_flat(down(b)))
   TOP(up(g(fresh_constant))) -> TOP(g_flat(down(fresh_constant)))

The TRS R consists of the following rules:

   down(a) -> up(f(a))
   down(g(f(x))) -> up(f(g(g(x))))
   down(f(f(x))) -> up(b)
   down(f(a)) -> f_flat(down(a))
   down(f(g(y4))) -> f_flat(down(g(y4)))
   down(f(b)) -> f_flat(down(b))
   down(f(fresh_constant)) -> f_flat(down(fresh_constant))
   down(g(a)) -> g_flat(down(a))
   down(g(g(y7))) -> g_flat(down(g(y7)))
   down(g(b)) -> g_flat(down(b))
   down(g(fresh_constant)) -> g_flat(down(fresh_constant))
   g_flat(up(x_1)) -> up(g(x_1))
   f_flat(up(x_1)) -> up(f(x_1))

The set Q consists of the following terms:

   down(a)
   down(g(f(x0)))
   down(f(f(x0)))
   down(f(a))
   down(f(g(x0)))
   down(f(b))
   down(f(fresh_constant))
   down(g(a))
   down(g(g(x0)))
   down(g(b))
   down(g(fresh_constant))
   f_flat(up(x0))
   g_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(23) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 6 less nodes.
----------------------------------------

(24)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TOP(up(f(g(x0)))) -> TOP(f_flat(down(g(x0))))
   TOP(up(g(f(x0)))) -> TOP(up(f(g(g(x0)))))
   TOP(up(f(a))) -> TOP(f_flat(down(a)))
   TOP(up(g(a))) -> TOP(g_flat(down(a)))
   TOP(up(g(g(x0)))) -> TOP(g_flat(down(g(x0))))

The TRS R consists of the following rules:

   down(a) -> up(f(a))
   down(g(f(x))) -> up(f(g(g(x))))
   down(f(f(x))) -> up(b)
   down(f(a)) -> f_flat(down(a))
   down(f(g(y4))) -> f_flat(down(g(y4)))
   down(f(b)) -> f_flat(down(b))
   down(f(fresh_constant)) -> f_flat(down(fresh_constant))
   down(g(a)) -> g_flat(down(a))
   down(g(g(y7))) -> g_flat(down(g(y7)))
   down(g(b)) -> g_flat(down(b))
   down(g(fresh_constant)) -> g_flat(down(fresh_constant))
   g_flat(up(x_1)) -> up(g(x_1))
   f_flat(up(x_1)) -> up(f(x_1))

The set Q consists of the following terms:

   down(a)
   down(g(f(x0)))
   down(f(f(x0)))
   down(f(a))
   down(f(g(x0)))
   down(f(b))
   down(f(fresh_constant))
   down(g(a))
   down(g(g(x0)))
   down(g(b))
   down(g(fresh_constant))
   f_flat(up(x0))
   g_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(25) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(26)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TOP(up(f(g(x0)))) -> TOP(f_flat(down(g(x0))))
   TOP(up(g(f(x0)))) -> TOP(up(f(g(g(x0)))))
   TOP(up(f(a))) -> TOP(f_flat(down(a)))
   TOP(up(g(a))) -> TOP(g_flat(down(a)))
   TOP(up(g(g(x0)))) -> TOP(g_flat(down(g(x0))))

The TRS R consists of the following rules:

   down(g(f(x))) -> up(f(g(g(x))))
   down(g(a)) -> g_flat(down(a))
   down(g(g(y7))) -> g_flat(down(g(y7)))
   down(g(b)) -> g_flat(down(b))
   down(g(fresh_constant)) -> g_flat(down(fresh_constant))
   g_flat(up(x_1)) -> up(g(x_1))
   down(a) -> up(f(a))
   f_flat(up(x_1)) -> up(f(x_1))

The set Q consists of the following terms:

   down(a)
   down(g(f(x0)))
   down(f(f(x0)))
   down(f(a))
   down(f(g(x0)))
   down(f(b))
   down(f(fresh_constant))
   down(g(a))
   down(g(g(x0)))
   down(g(b))
   down(g(fresh_constant))
   f_flat(up(x0))
   g_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(27) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule TOP(up(f(a))) -> TOP(f_flat(down(a))) at position [0,0] we obtained the following new rules [LPAR04]:

   (TOP(up(f(a))) -> TOP(f_flat(up(f(a)))),TOP(up(f(a))) -> TOP(f_flat(up(f(a)))))


----------------------------------------

(28)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TOP(up(f(g(x0)))) -> TOP(f_flat(down(g(x0))))
   TOP(up(g(f(x0)))) -> TOP(up(f(g(g(x0)))))
   TOP(up(g(a))) -> TOP(g_flat(down(a)))
   TOP(up(g(g(x0)))) -> TOP(g_flat(down(g(x0))))
   TOP(up(f(a))) -> TOP(f_flat(up(f(a))))

The TRS R consists of the following rules:

   down(g(f(x))) -> up(f(g(g(x))))
   down(g(a)) -> g_flat(down(a))
   down(g(g(y7))) -> g_flat(down(g(y7)))
   down(g(b)) -> g_flat(down(b))
   down(g(fresh_constant)) -> g_flat(down(fresh_constant))
   g_flat(up(x_1)) -> up(g(x_1))
   down(a) -> up(f(a))
   f_flat(up(x_1)) -> up(f(x_1))

The set Q consists of the following terms:

   down(a)
   down(g(f(x0)))
   down(f(f(x0)))
   down(f(a))
   down(f(g(x0)))
   down(f(b))
   down(f(fresh_constant))
   down(g(a))
   down(g(g(x0)))
   down(g(b))
   down(g(fresh_constant))
   f_flat(up(x0))
   g_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(29) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule TOP(up(g(a))) -> TOP(g_flat(down(a))) at position [0,0] we obtained the following new rules [LPAR04]:

   (TOP(up(g(a))) -> TOP(g_flat(up(f(a)))),TOP(up(g(a))) -> TOP(g_flat(up(f(a)))))


----------------------------------------

(30)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TOP(up(f(g(x0)))) -> TOP(f_flat(down(g(x0))))
   TOP(up(g(f(x0)))) -> TOP(up(f(g(g(x0)))))
   TOP(up(g(g(x0)))) -> TOP(g_flat(down(g(x0))))
   TOP(up(f(a))) -> TOP(f_flat(up(f(a))))
   TOP(up(g(a))) -> TOP(g_flat(up(f(a))))

The TRS R consists of the following rules:

   down(g(f(x))) -> up(f(g(g(x))))
   down(g(a)) -> g_flat(down(a))
   down(g(g(y7))) -> g_flat(down(g(y7)))
   down(g(b)) -> g_flat(down(b))
   down(g(fresh_constant)) -> g_flat(down(fresh_constant))
   g_flat(up(x_1)) -> up(g(x_1))
   down(a) -> up(f(a))
   f_flat(up(x_1)) -> up(f(x_1))

The set Q consists of the following terms:

   down(a)
   down(g(f(x0)))
   down(f(f(x0)))
   down(f(a))
   down(f(g(x0)))
   down(f(b))
   down(f(fresh_constant))
   down(g(a))
   down(g(g(x0)))
   down(g(b))
   down(g(fresh_constant))
   f_flat(up(x0))
   g_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(31) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule TOP(up(f(a))) -> TOP(f_flat(up(f(a)))) at position [0] we obtained the following new rules [LPAR04]:

   (TOP(up(f(a))) -> TOP(up(f(f(a)))),TOP(up(f(a))) -> TOP(up(f(f(a)))))


----------------------------------------

(32)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TOP(up(f(g(x0)))) -> TOP(f_flat(down(g(x0))))
   TOP(up(g(f(x0)))) -> TOP(up(f(g(g(x0)))))
   TOP(up(g(g(x0)))) -> TOP(g_flat(down(g(x0))))
   TOP(up(g(a))) -> TOP(g_flat(up(f(a))))
   TOP(up(f(a))) -> TOP(up(f(f(a))))

The TRS R consists of the following rules:

   down(g(f(x))) -> up(f(g(g(x))))
   down(g(a)) -> g_flat(down(a))
   down(g(g(y7))) -> g_flat(down(g(y7)))
   down(g(b)) -> g_flat(down(b))
   down(g(fresh_constant)) -> g_flat(down(fresh_constant))
   g_flat(up(x_1)) -> up(g(x_1))
   down(a) -> up(f(a))
   f_flat(up(x_1)) -> up(f(x_1))

The set Q consists of the following terms:

   down(a)
   down(g(f(x0)))
   down(f(f(x0)))
   down(f(a))
   down(f(g(x0)))
   down(f(b))
   down(f(fresh_constant))
   down(g(a))
   down(g(g(x0)))
   down(g(b))
   down(g(fresh_constant))
   f_flat(up(x0))
   g_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(33) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(34)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TOP(up(g(f(x0)))) -> TOP(up(f(g(g(x0)))))
   TOP(up(f(g(x0)))) -> TOP(f_flat(down(g(x0))))
   TOP(up(g(g(x0)))) -> TOP(g_flat(down(g(x0))))
   TOP(up(g(a))) -> TOP(g_flat(up(f(a))))

The TRS R consists of the following rules:

   down(g(f(x))) -> up(f(g(g(x))))
   down(g(a)) -> g_flat(down(a))
   down(g(g(y7))) -> g_flat(down(g(y7)))
   down(g(b)) -> g_flat(down(b))
   down(g(fresh_constant)) -> g_flat(down(fresh_constant))
   g_flat(up(x_1)) -> up(g(x_1))
   down(a) -> up(f(a))
   f_flat(up(x_1)) -> up(f(x_1))

The set Q consists of the following terms:

   down(a)
   down(g(f(x0)))
   down(f(f(x0)))
   down(f(a))
   down(f(g(x0)))
   down(f(b))
   down(f(fresh_constant))
   down(g(a))
   down(g(g(x0)))
   down(g(b))
   down(g(fresh_constant))
   f_flat(up(x0))
   g_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(35) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule TOP(up(g(a))) -> TOP(g_flat(up(f(a)))) at position [0] we obtained the following new rules [LPAR04]:

   (TOP(up(g(a))) -> TOP(up(g(f(a)))),TOP(up(g(a))) -> TOP(up(g(f(a)))))


----------------------------------------

(36)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TOP(up(g(f(x0)))) -> TOP(up(f(g(g(x0)))))
   TOP(up(f(g(x0)))) -> TOP(f_flat(down(g(x0))))
   TOP(up(g(g(x0)))) -> TOP(g_flat(down(g(x0))))
   TOP(up(g(a))) -> TOP(up(g(f(a))))

The TRS R consists of the following rules:

   down(g(f(x))) -> up(f(g(g(x))))
   down(g(a)) -> g_flat(down(a))
   down(g(g(y7))) -> g_flat(down(g(y7)))
   down(g(b)) -> g_flat(down(b))
   down(g(fresh_constant)) -> g_flat(down(fresh_constant))
   g_flat(up(x_1)) -> up(g(x_1))
   down(a) -> up(f(a))
   f_flat(up(x_1)) -> up(f(x_1))

The set Q consists of the following terms:

   down(a)
   down(g(f(x0)))
   down(f(f(x0)))
   down(f(a))
   down(f(g(x0)))
   down(f(b))
   down(f(fresh_constant))
   down(g(a))
   down(g(g(x0)))
   down(g(b))
   down(g(fresh_constant))
   f_flat(up(x0))
   g_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(37) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   TOP(up(g(f(x0)))) -> TOP(up(f(g(g(x0)))))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(TOP(x_1)) = x_1
   POL(a) = 0
   POL(b) = 0
   POL(down(x_1)) = 0
   POL(f(x_1)) = 0
   POL(f_flat(x_1)) = 0
   POL(fresh_constant) = 0
   POL(g(x_1)) = 1
   POL(g_flat(x_1)) = 1
   POL(up(x_1)) = x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   f_flat(up(x_1)) -> up(f(x_1))
   g_flat(up(x_1)) -> up(g(x_1))


----------------------------------------

(38)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TOP(up(f(g(x0)))) -> TOP(f_flat(down(g(x0))))
   TOP(up(g(g(x0)))) -> TOP(g_flat(down(g(x0))))
   TOP(up(g(a))) -> TOP(up(g(f(a))))

The TRS R consists of the following rules:

   down(g(f(x))) -> up(f(g(g(x))))
   down(g(a)) -> g_flat(down(a))
   down(g(g(y7))) -> g_flat(down(g(y7)))
   down(g(b)) -> g_flat(down(b))
   down(g(fresh_constant)) -> g_flat(down(fresh_constant))
   g_flat(up(x_1)) -> up(g(x_1))
   down(a) -> up(f(a))
   f_flat(up(x_1)) -> up(f(x_1))

The set Q consists of the following terms:

   down(a)
   down(g(f(x0)))
   down(f(f(x0)))
   down(f(a))
   down(f(g(x0)))
   down(f(b))
   down(f(fresh_constant))
   down(g(a))
   down(g(g(x0)))
   down(g(b))
   down(g(fresh_constant))
   f_flat(up(x0))
   g_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(39) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(40)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TOP(up(f(g(x0)))) -> TOP(f_flat(down(g(x0))))
   TOP(up(g(g(x0)))) -> TOP(g_flat(down(g(x0))))

The TRS R consists of the following rules:

   down(g(f(x))) -> up(f(g(g(x))))
   down(g(a)) -> g_flat(down(a))
   down(g(g(y7))) -> g_flat(down(g(y7)))
   down(g(b)) -> g_flat(down(b))
   down(g(fresh_constant)) -> g_flat(down(fresh_constant))
   g_flat(up(x_1)) -> up(g(x_1))
   down(a) -> up(f(a))
   f_flat(up(x_1)) -> up(f(x_1))

The set Q consists of the following terms:

   down(a)
   down(g(f(x0)))
   down(f(f(x0)))
   down(f(a))
   down(f(g(x0)))
   down(f(b))
   down(f(fresh_constant))
   down(g(a))
   down(g(g(x0)))
   down(g(b))
   down(g(fresh_constant))
   f_flat(up(x0))
   g_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(41) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   TOP(up(g(g(x0)))) -> TOP(g_flat(down(g(x0))))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(TOP(x_1)) = x_1
   POL(a) = 1
   POL(b) = 0
   POL(down(x_1)) = x_1
   POL(f(x_1)) = 0
   POL(f_flat(x_1)) = 1
   POL(fresh_constant) = 0
   POL(g(x_1)) = 1 + x_1
   POL(g_flat(x_1)) = 1 + x_1
   POL(up(x_1)) = 1 + x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   down(g(f(x))) -> up(f(g(g(x))))
   down(g(a)) -> g_flat(down(a))
   down(g(g(y7))) -> g_flat(down(g(y7)))
   down(g(b)) -> g_flat(down(b))
   down(g(fresh_constant)) -> g_flat(down(fresh_constant))
   f_flat(up(x_1)) -> up(f(x_1))
   g_flat(up(x_1)) -> up(g(x_1))
   down(a) -> up(f(a))


----------------------------------------

(42)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TOP(up(f(g(x0)))) -> TOP(f_flat(down(g(x0))))

The TRS R consists of the following rules:

   down(g(f(x))) -> up(f(g(g(x))))
   down(g(a)) -> g_flat(down(a))
   down(g(g(y7))) -> g_flat(down(g(y7)))
   down(g(b)) -> g_flat(down(b))
   down(g(fresh_constant)) -> g_flat(down(fresh_constant))
   g_flat(up(x_1)) -> up(g(x_1))
   down(a) -> up(f(a))
   f_flat(up(x_1)) -> up(f(x_1))

The set Q consists of the following terms:

   down(a)
   down(g(f(x0)))
   down(f(f(x0)))
   down(f(a))
   down(f(g(x0)))
   down(f(b))
   down(f(fresh_constant))
   down(g(a))
   down(g(g(x0)))
   down(g(b))
   down(g(fresh_constant))
   f_flat(up(x0))
   g_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(43) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   TOP(up(f(g(x0)))) -> TOP(f_flat(down(g(x0))))
The remaining pairs can at least be oriented weakly.
Used ordering:  Matrix interpretation [MATRO]:

Non-tuple symbols: 
<<<
 M( a ) =  	[[1], [0]]
>>>

<<<
 M( b ) =  	[[1], [0]]
>>>

<<<
 M( down_1(x_1) ) =  	[[1], [0]] 	+ 	[[1, 1], [1, 0]] 	* 	x_1
>>>

<<<
 M( f_1(x_1) ) =  	[[0], [1]] 	+ 	[[0, 0], [1, 0]] 	* 	x_1
>>>

<<<
 M( fresh_constant ) =  	[[0], [0]]
>>>

<<<
 M( up_1(x_1) ) =  	[[0], [1]] 	+ 	[[0, 1], [1, 0]] 	* 	x_1
>>>

<<<
 M( f_flat_1(x_1) ) =  	[[0], [1]] 	+ 	[[0, 1], [0, 0]] 	* 	x_1
>>>

<<<
 M( g_1(x_1) ) =  	[[1], [0]] 	+ 	[[1, 0], [0, 1]] 	* 	x_1
>>>

<<<
 M( g_flat_1(x_1) ) =  	[[0], [1]] 	+ 	[[1, 0], [0, 1]] 	* 	x_1
>>>

Tuple symbols: 
<<<
 M( TOP_1(x_1) ) =  	[[0]] 	+ 	[[1, 0]] 	* 	x_1
>>>



Matrix type: 

We used a basic matrix type which is not further parametrizeable.





As matrix orders are CE-compatible, we used usable rules w.r.t. argument filtering in the order.
The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   down(g(f(x))) -> up(f(g(g(x))))
   down(g(a)) -> g_flat(down(a))
   down(g(g(y7))) -> g_flat(down(g(y7)))
   down(g(b)) -> g_flat(down(b))
   down(g(fresh_constant)) -> g_flat(down(fresh_constant))
   f_flat(up(x_1)) -> up(f(x_1))
   g_flat(up(x_1)) -> up(g(x_1))
   down(a) -> up(f(a))


----------------------------------------

(44)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   down(g(f(x))) -> up(f(g(g(x))))
   down(g(a)) -> g_flat(down(a))
   down(g(g(y7))) -> g_flat(down(g(y7)))
   down(g(b)) -> g_flat(down(b))
   down(g(fresh_constant)) -> g_flat(down(fresh_constant))
   g_flat(up(x_1)) -> up(g(x_1))
   down(a) -> up(f(a))
   f_flat(up(x_1)) -> up(f(x_1))

The set Q consists of the following terms:

   down(a)
   down(g(f(x0)))
   down(f(f(x0)))
   down(f(a))
   down(f(g(x0)))
   down(f(b))
   down(f(fresh_constant))
   down(g(a))
   down(g(g(x0)))
   down(g(b))
   down(g(fresh_constant))
   f_flat(up(x0))
   g_flat(up(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(45) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(46)
YES
