YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/lcdFt.c
# AProVE Commit ID: 48c83ccb80d5f8312cb92f4aa1b51dc35e247e65 nils 20241118 unpublished


Termination of the given C Problem could be proven:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 40 ms]
(2) LLVM problem
(3) LLVMToTerminationGraphProof [EQUIVALENT, 41.2 s]
(4) LLVM Symbolic Execution Graph
(5) SymbolicExecutionGraphToSCCProof [SOUND, 0 ms]
(6) AND
    (7) LLVM Symbolic Execution SCC
        (8) SCC2IRS [SOUND, 238 ms]
        (9) IntTRS
        (10) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (11) IntTRS
        (12) PolynomialOrderProcessor [EQUIVALENT, 6 ms]
        (13) IntTRS
        (14) TerminationGraphProcessor [EQUIVALENT, 8 ms]
        (15) AND
            (16) IntTRS
                (17) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                (18) IntTRS
                (19) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
                (20) IntTRS
                (21) PolynomialOrderProcessor [EQUIVALENT, 1 ms]
                (22) YES
            (23) IntTRS
                (24) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                (25) IntTRS
                (26) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
                (27) IntTRS
                (28) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
                (29) YES
    (30) LLVM Symbolic Execution SCC
        (31) SCC2IRS [SOUND, 196 ms]
        (32) IntTRS
        (33) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (34) IntTRS
        (35) PolynomialOrderProcessor [EQUIVALENT, 5 ms]
        (36) IntTRS
        (37) TerminationGraphProcessor [EQUIVALENT, 0 ms]
        (38) IntTRS
        (39) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (40) IntTRS
        (41) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
        (42) IntTRS
        (43) RankingReductionPairProof [EQUIVALENT, 0 ms]
        (44) YES
    (45) LLVM Symbolic Execution SCC
        (46) SCC2IRS [SOUND, 216 ms]
        (47) IntTRS
        (48) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (49) IntTRS
        (50) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (51) IntTRS
        (52) TerminationGraphProcessor [EQUIVALENT, 2 ms]
        (53) IntTRS
        (54) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (55) IntTRS
        (56) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
        (57) IntTRS
        (58) PolynomialOrderProcessor [EQUIVALENT, 5 ms]
        (59) YES
    (60) LLVM Symbolic Execution SCC
        (61) SCC2IRS [SOUND, 83 ms]
        (62) IntTRS
        (63) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (64) IntTRS
        (65) RankingReductionPairProof [EQUIVALENT, 3 ms]
        (66) YES
    (67) LLVM Symbolic Execution SCC
        (68) SCC2IRS [SOUND, 65 ms]
        (69) IntTRS
        (70) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (71) IntTRS
        (72) RankingReductionPairProof [EQUIVALENT, 6 ms]
        (73) YES
    (74) LLVM Symbolic Execution SCC
        (75) SCC2IRS [SOUND, 56 ms]
        (76) IntTRS
        (77) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (78) IntTRS
        (79) RankingReductionPairProof [EQUIVALENT, 9 ms]
        (80) YES


----------------------------------------

(0)
Obligation:
c file /hpcwork/ff862203/termcomp25/benchmarks/lcdFt.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /hpcwork/ff862203/termcomp25/benchmarks/lcdFt.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-pc-linux-gnu"

Type definitions:

Global variables:

Function declarations and definitions:

*BasicFunctionTypename: "llvm.dbg.declare" returnParam: BasicVoidType parameters: (BasicMetadataType, BasicMetadataType, BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_nondet_int" returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "test_fun" linkageType: EXTERNALLY_VISIBLE returnParam: BasicVoidType parameters: (0 *i32, 1 i32) variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 10
	0:
		%3 = alloca *i32, align 8
		%4 = alloca i32, align 4
		%5 = alloca i32, align 4
		%6 = alloca i32, align 4
		%7 = alloca i32, align 4
		store %0, %3
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i32 %3)
		store %1, %4
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %4)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %5)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %6)
		store 0, %6
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %7)
		store 0, %7
		store 0, %5
		br %8
	8:
		%9 = load %5
		%10 = load %4
		%11 = icmp slt %9 %10
		br %11, %12, %50
	12:
		br %13
	13:
		%14 = load %3
		%15 = load %5
		%16 = sext i32 %15 to i64
		%17 = getelementptr %14, %16
		%18 = load %17
		%19 = icmp slt %18 0
		br %19, %20, %29
	20:
		%21 = load %3
		%22 = load %5
		%23 = sext i32 %22 to i64
		%24 = getelementptr %21, %23
		%25 = load %24
		%26 = add i32 %25, 1
		store %26, %24
		%27 = load %7
		%28 = add i32 %27, 1
		store %28, %7
		br %13
	29:
		br %30
	30:
		%31 = load %3
		%32 = load %5
		%33 = sext i32 %32 to i64
		%34 = getelementptr %31, %33
		%35 = load %34
		%36 = icmp sgt %35 0
		br %36, %37, %46
	37:
		%38 = load %3
		%39 = load %5
		%40 = sext i32 %39 to i64
		%41 = getelementptr %38, %40
		%42 = load %41
		%43 = add i32 %42, -1
		store %43, %41
		%44 = load %6
		%45 = add i32 %44, 1
		store %45, %6
		br %30
	46:
		br %47
	47:
		%48 = load %5
		%49 = add i32 %48, 1
		store %49, %5
		br %8
	50:
		ret void

*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 61
	0:
		%1 = alloca i32, align 4
		%2 = alloca i32, align 4
		%3 = alloca *i32, align 8
		store 0, %1
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %2)
		%4 = call i32 @__VERIFIER_nondet_int()
		store %4, %2
		%5 = load %2
		%6 = icmp slt %5 1
		br %6, %7, %8
	7:
		store 1, %2
		br %8
	8:
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i32 %3)
		%9 = load %2
		%10 = sext i32 %9 to i64
		%11 = mul i64 %10, 4
		%12 = alloca i8, numElementsLit: %11, align 16
		%13 = bitcast *i8 %12 to *i32
		store %13, %3
		%14 = load %3
		%15 = load %2
		Unnamed Call-Instruction = call BasicVoidType @test_fun(*i32 %14, i32 %15)
		%16 = load %1
		ret %16


Analyze Termination of all function calls matching the pattern:
main()
----------------------------------------

(3) LLVMToTerminationGraphProof (EQUIVALENT)
Constructed symbolic execution graph for LLVM program.
----------------------------------------

(4)
Obligation:
Symbolic Execution Graph
----------------------------------------

(5) SymbolicExecutionGraphToSCCProof (SOUND)
Splitted symbolic execution graph to 6 SCCs.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
SCC
----------------------------------------

(8) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 103 rulesP rules:
f_2918(v22573, v22574, v22575, v22576, v22577, v22578, v22579, v22580, 1, v22582, v22583, v22584, v22585, 0, v22587, v22588, v22589, v22590, v22591, v22592, v22593, v22594, v22600, v22595, v22601, v22596, v22602, v22603, v22604, v22605, v22606, v22607, v22608, v22597, v22598, v22599, 3, 7, 4, 2, 5, 8) -> f_2921(v22573, v22574, v22575, v22576, v22577, v22578, v22579, v22580, 1, v22582, v22583, v22584, v22585, 0, v22587, v22588, v22589, v22590, v22591, v22592, v22593, v22594, v22600, v22595, v22601, v22596, v22602, v22603, v22604, v22605, v22606, v22607, v22608, v22597, v22598, v22599, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2921(v22573, v22574, v22575, v22576, v22577, v22578, v22579, v22580, 1, v22582, v22583, v22584, v22585, 0, v22587, v22588, v22589, v22590, v22591, v22592, v22593, v22594, v22600, v22595, v22601, v22596, v22602, v22603, v22604, v22605, v22606, v22607, v22608, v22597, v22598, v22599, 3, 7, 4, 2, 5, 8) -> f_2924(v22573, v22574, v22575, v22576, v22577, v22578, v22579, v22580, 1, v22582, v22583, v22584, v22585, 0, v22587, v22588, v22589, v22590, v22591, v22592, v22593, v22594, v22600, v22595, v22601, v22596, v22602, v22603, v22604, v22605, v22606, v22607, v22608, v22597, v22598, v22599, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2924(v22573, v22574, v22575, v22576, v22577, v22578, v22579, v22580, 1, v22582, v22583, v22584, v22585, 0, v22587, v22588, v22589, v22590, v22591, v22592, v22593, v22594, v22600, v22595, v22601, v22596, v22602, v22603, v22604, v22605, v22606, v22607, v22608, v22597, v22598, v22599, 3, 7, 4, 2, 5, 8) -> f_2927(v22573, v22574, v22575, v22576, v22577, v22578, v22579, v22580, 1, v22582, v22583, v22584, v22585, 0, v22587, v22588, v22589, v22590, v22591, v22592, v22593, v22594, v22600, v22595, v22601, v22596, v22602, v22603, v22604, v22605, v22606, v22607, v22608, v22597, v22598, v22599, 3, 7, 4, 2, 5, 8) :|: v22582 = v22573 + 4 * v22580
f_2927(v22573, v22574, v22575, v22576, v22577, v22578, v22579, v22580, 1, v22582, v22583, v22584, v22585, 0, v22587, v22588, v22589, v22590, v22591, v22592, v22593, v22594, v22600, v22595, v22601, v22596, v22602, v22603, v22604, v22605, v22606, v22607, v22608, v22597, v22598, v22599, 3, 7, 4, 2, 5, 8) -> f_2930(v22573, v22574, v22575, v22576, v22577, v22578, v22579, v22580, 1, v22582, v22591, v22584, v22585, 0, v22587, v22588, v22589, v22590, v22583, v22592, v22593, v22594, v22600, v22595, v22601, v22596, v22602, v22603, v22604, v22605, v22606, v22607, v22608, v22597, v22598, v22599, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2930(v22573, v22574, v22575, v22576, v22577, v22578, v22579, v22580, 1, v22582, v22591, v22584, v22585, 0, v22587, v22588, v22589, v22590, v22583, v22592, v22593, v22594, v22600, v22595, v22601, v22596, v22602, v22603, v22604, v22605, v22606, v22607, v22608, v22597, v22598, v22599, 3, 7, 4, 2, 5, 8) -> f_2934(v22573, v22574, v22575, v22576, v22577, v22578, v22579, v22580, 1, v22582, v22591, v22584, v22585, 0, v22587, v22588, v22589, v22590, v22583, v22592, v22593, v22594, v22600, v22595, v22601, v22596, v22602, v22603, v22604, v22605, v22606, v22607, v22608, v22597, v22598, v22599, 3, 7, 4, 2, 5, 8) :|: v22591 < 0 && 2 + v22583 <= 0
f_2930(v22573, v22574, v22575, v22576, v22577, v22578, v22579, v22580, 1, v22582, v22591, v22584, v22585, 0, v22587, v22588, v22589, v22590, v22583, v22592, v22593, v22594, v22600, v22595, v22601, v22596, v22602, v22603, v22604, v22605, v22606, v22607, v22608, v22597, v22598, v22599, 3, 7, 4, 2, 5, 8) -> f_2935(v22573, v22574, v22575, v22576, v22577, v22578, v22579, v22580, 1, v22582, 0, v22584, v22585, v22587, v22588, v22589, v22590, -1, v22592, v22593, v22594, v22600, v22595, v22601, v22596, v22602, v22603, v22604, v22605, v22606, v22607, v22608, v22597, v22598, v22599, 3, 7, 4, 2, 5, 8) :|: 0 <= v22591 && 1 + v22583 = 0 && v22591 = 0 && 0 = 0
f_2934(v22573, v22574, v22575, v22576, v22577, v22578, v22579, v22580, 1, v22582, v22591, v22584, v22585, 0, v22587, v22588, v22589, v22590, v22583, v22592, v22593, v22594, v22600, v22595, v22601, v22596, v22602, v22603, v22604, v22605, v22606, v22607, v22608, v22597, v22598, v22599, 3, 7, 4, 2, 5, 8) -> f_2939(v22573, v22574, v22575, v22576, v22577, v22578, v22579, v22580, 1, v22582, v22591, v22584, v22585, 0, v22587, v22588, v22589, v22590, v22583, v22592, v22593, v22594, v22600, v22595, v22601, v22596, v22602, v22603, v22604, v22605, v22606, v22607, v22608, v22597, v22598, v22599, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2939(v22573, v22574, v22575, v22576, v22577, v22578, v22579, v22580, 1, v22582, v22591, v22584, v22585, 0, v22587, v22588, v22589, v22590, v22583, v22592, v22593, v22594, v22600, v22595, v22601, v22596, v22602, v22603, v22604, v22605, v22606, v22607, v22608, v22597, v22598, v22599, 3, 7, 4, 2, 5, 8) -> f_2944(v22573, v22574, v22575, v22576, v22577, v22578, v22579, v22580, 1, v22582, v22591, v22584, v22585, 0, v22587, v22588, v22589, v22590, v22583, v22592, v22593, v22594, v22600, v22595, v22601, v22596, v22602, v22603, v22604, v22605, v22606, v22607, v22608, v22597, v22598, v22599, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2944(v22573, v22574, v22575, v22576, v22577, v22578, v22579, v22580, 1, v22582, v22591, v22584, v22585, 0, v22587, v22588, v22589, v22590, v22583, v22592, v22593, v22594, v22600, v22595, v22601, v22596, v22602, v22603, v22604, v22605, v22606, v22607, v22608, v22597, v22598, v22599, 3, 7, 4, 2, 5, 8) -> f_3038(v22573, v22574, v22575, v22576, v22577, v22578, v22579, v22580, 1, v22582, v22591, v22584, v22585, 0, v22587, v22588, v22589, v22590, v22580, v22582, v22583, v22591, v22592, v22593, v22594, v22600, v22595, v22601, v22596, v22602, v22603, v22604, v22605, v22606, v22607, v22608, v24748, v24736, v24737, v24738, 3, 7, 4, 2, 5, 8) :|: TRUE
f_3038(v24709, v24710, v24711, v24712, v24713, v24714, v24715, v24716, 1, v24718, v24719, v24720, v24721, 0, v24723, v24724, v24725, v24726, v24727, v24728, v24729, v24730, v24731, v24732, v24733, v24739, v24734, v24740, v24735, v24741, v24742, v24743, v24744, v24745, v24746, v24747, v24748, v24736, v24737, v24738, 3, 7, 4, 2, 5, 8) -> f_3043(v24709, v24710, v24711, v24712, v24713, v24714, v24715, v24716, 1, v24718, v24719, v24720, v24721, 0, v24723, v24724, v24725, v24726, v24727, v24728, v24729, v24730, v24731, v24732, v24733, v24739, v24734, v24740, v24735, v24741, v24742, v24743, v24744, v24745, v24746, v24747, v24748, v24736, v24737, v24738, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_3043(v24709, v24710, v24711, v24712, v24713, v24714, v24715, v24716, 1, v24718, v24719, v24720, v24721, 0, v24723, v24724, v24725, v24726, v24727, v24728, v24729, v24730, v24731, v24732, v24733, v24739, v24734, v24740, v24735, v24741, v24742, v24743, v24744, v24745, v24746, v24747, v24748, v24736, v24737, v24738, 3, 7, 4, 2, 5, 8) -> f_3047(v24709, v24710, v24711, v24712, v24713, v24714, v24715, v24716, 1, v24718, v24719, v24720, v24721, 0, v24723, v24724, v24725, v24726, v24727, v24728, v24729, v24730, v24731, v24732, v24733, v24739, v24734, v24740, v24735, v24741, v24742, v24743, v24744, v24745, v24746, v24747, v24748, v24736, v24737, v24738, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_3047(v24709, v24710, v24711, v24712, v24713, v24714, v24715, v24716, 1, v24718, v24719, v24720, v24721, 0, v24723, v24724, v24725, v24726, v24727, v24728, v24729, v24730, v24731, v24732, v24733, v24739, v24734, v24740, v24735, v24741, v24742, v24743, v24744, v24745, v24746, v24747, v24748, v24736, v24737, v24738, 3, 7, 4, 2, 5, 8) -> f_3051(v24709, v24710, v24711, v24712, v24713, v24714, v24715, v24716, 1, v24718, v24719, v24720, v24721, 0, v24723, v24724, v24725, v24726, v24728, v24729, v24730, v24731, v24732, v24733, v24739, v24734, v24740, v24735, v24741, v24742, v24743, v24744, v24745, v24746, v24747, v24748, v24736, v24737, v24738, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_3051(v24709, v24710, v24711, v24712, v24713, v24714, v24715, v24716, 1, v24718, v24719, v24720, v24721, 0, v24723, v24724, v24725, v24726, v24728, v24729, v24730, v24731, v24732, v24733, v24739, v24734, v24740, v24735, v24741, v24742, v24743, v24744, v24745, v24746, v24747, v24748, v24736, v24737, v24738, 3, 7, 4, 2, 5, 8) -> f_3055(v24709, v24710, v24711, v24712, v24713, v24714, v24715, v24716, 1, v24718, v24719, v24720, v24721, 0, v24723, v24724, v24725, v24726, v24729, v24730, v24731, v24732, v24733, v24739, v24734, v24740, v24735, v24741, v24742, v24743, v24744, v24745, v24746, v24747, v24728, v24748, v24736, v24737, v24738, 3, 7, 4, 2, 5, 8) :|: v24718 = v24709 + 4 * v24716
f_3055(v24709, v24710, v24711, v24712, v24713, v24714, v24715, v24716, 1, v24718, v24719, v24720, v24721, 0, v24723, v24724, v24725, v24726, v24729, v24730, v24731, v24732, v24733, v24739, v24734, v24740, v24735, v24741, v24742, v24743, v24744, v24745, v24746, v24747, v24728, v24748, v24736, v24737, v24738, 3, 7, 4, 2, 5, 8) -> f_3059(v24709, v24710, v24711, v24712, v24713, v24714, v24715, v24716, 1, v24718, v24719, v24720, v24721, 0, v24723, v24724, v24725, v24726, v24730, v24731, v24732, v24733, v24739, v24734, v24740, v24735, v24741, v24742, v24743, v24744, v24745, v24746, v24747, v24728, v24748, v24736, v24737, v24738, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_3059(v24709, v24710, v24711, v24712, v24713, v24714, v24715, v24716, 1, v24718, v24719, v24720, v24721, 0, v24723, v24724, v24725, v24726, v24730, v24731, v24732, v24733, v24739, v24734, v24740, v24735, v24741, v24742, v24743, v24744, v24745, v24746, v24747, v24728, v24748, v24736, v24737, v24738, 3, 7, 4, 2, 5, 8) -> f_3063(v24709, v24710, v24711, v24712, v24713, v24714, v24715, v24716, 1, v24718, v24719, v24720, v24721, 0, v24723, v24724, v24725, v24726, v25278, v24731, v24732, v24733, v24739, v24734, v24740, v24735, v24741, v24742, v24743, v24744, v24745, v24746, v24747, v24728, v24730, v24748, v24736, v24737, v24738, 3, 7, 4, 2, 5, 8) :|: v25278 = 1 + v24719 && v25278 <= 0
f_3063(v24709, v24710, v24711, v24712, v24713, v24714, v24715, v24716, 1, v24718, v24719, v24720, v24721, 0, v24723, v24724, v24725, v24726, v25278, v24731, v24732, v24733, v24739, v24734, v24740, v24735, v24741, v24742, v24743, v24744, v24745, v24746, v24747, v24728, v24730, v24748, v24736, v24737, v24738, 3, 7, 4, 2, 5, 8) -> f_3067(v24709, v24710, v24711, v24712, v24713, v24714, v24715, v24716, 1, v24718, v24719, v24720, v24721, 0, v24723, v24724, v24725, v24726, v25278, v24731, v24732, v24733, v24739, v24734, v24740, v24735, v24741, v24742, v24743, v24744, v24745, v24746, v24747, v24748, v24728, v24736, v24737, v24738, 3, 7, 4, 2, 5, 8) :|: TRUE
f_3067(v24709, v24710, v24711, v24712, v24713, v24714, v24715, v24716, 1, v24718, v24719, v24720, v24721, 0, v24723, v24724, v24725, v24726, v25278, v24731, v24732, v24733, v24739, v24734, v24740, v24735, v24741, v24742, v24743, v24744, v24745, v24746, v24747, v24748, v24728, v24736, v24737, v24738, 3, 7, 4, 2, 5, 8) -> f_3072(v24709, v24710, v24711, v24712, v24713, v24714, v24715, v24716, 1, v24718, v24719, v24720, v24721, 0, v24723, v24724, v24725, v24726, v25278, v24732, v24733, v24739, v24734, v24740, v24735, v24741, v24742, v24743, v24744, v24745, v24746, v24747, v24748, v24728, v24736, v24737, v24738, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_3072(v24709, v24710, v24711, v24712, v24713, v24714, v24715, v24716, 1, v24718, v24719, v24720, v24721, 0, v24723, v24724, v24725, v24726, v25278, v24732, v24733, v24739, v24734, v24740, v24735, v24741, v24742, v24743, v24744, v24745, v24746, v24747, v24748, v24728, v24736, v24737, v24738, 3, 7, 4, 2, 5, 8) -> f_3078(v24709, v24710, v24711, v24712, v24713, v24714, v24715, v24716, 1, v24718, v24719, v24720, v24721, 0, v24723, v24724, v24725, v24726, v25278, v24732, v25282, v24733, v24739, v24734, v24740, v24735, v24741, v24742, v24743, v24744, v24745, v24746, v24747, v24748, v24728, v24736, v24737, v24738, 3, 7, 4, 2, 5, 8) :|: v25282 = 1 + v24732 && 2 <= v25282
f_3078(v24709, v24710, v24711, v24712, v24713, v24714, v24715, v24716, 1, v24718, v24719, v24720, v24721, 0, v24723, v24724, v24725, v24726, v25278, v24732, v25282, v24733, v24739, v24734, v24740, v24735, v24741, v24742, v24743, v24744, v24745, v24746, v24747, v24748, v24728, v24736, v24737, v24738, 3, 7, 4, 2, 5, 8) -> f_3084(v24709, v24710, v24711, v24712, v24713, v24714, v24715, v24716, 1, v24718, v24719, v24720, v24721, 0, v24723, v24724, v24725, v24726, v25278, v24732, v25282, v24733, v24739, v24734, v24740, v24735, v24741, v24742, v24743, v24744, v24745, v24746, v24747, v24748, v24728, v24736, v24737, v24738, 3, 7, 4, 2, 5, 8) :|: TRUE
f_3084(v24709, v24710, v24711, v24712, v24713, v24714, v24715, v24716, 1, v24718, v24719, v24720, v24721, 0, v24723, v24724, v24725, v24726, v25278, v24732, v25282, v24733, v24739, v24734, v24740, v24735, v24741, v24742, v24743, v24744, v24745, v24746, v24747, v24748, v24728, v24736, v24737, v24738, 3, 7, 4, 2, 5, 8) -> f_3090(v24709, v24710, v24711, v24712, v24713, v24714, v24715, v24716, 1, v24718, v24719, v24720, v24721, 0, v24723, v24724, v24725, v24726, v25278, v24732, v25282, v24733, v24739, v24734, v24740, v24735, v24741, v24742, v24743, v24744, v24745, v24746, v24747, v24748, v24728, v24736, v24737, v24738, 3, 7, 4, 2, 5, 8) :|: TRUE
f_3090(v24709, v24710, v24711, v24712, v24713, v24714, v24715, v24716, 1, v24718, v24719, v24720, v24721, 0, v24723, v24724, v24725, v24726, v25278, v24732, v25282, v24733, v24739, v24734, v24740, v24735, v24741, v24742, v24743, v24744, v24745, v24746, v24747, v24748, v24728, v24736, v24737, v24738, 3, 7, 4, 2, 5, 8) -> f_2915(v24709, v24710, v24711, v24712, v24713, v24714, v24715, v24716, 1, v24718, v24719, v24720, v24721, 0, v24723, v24724, v24725, v24726, v25278, v24732, v25282, v24733, v24739, v24734, v24740, v24735, v24741, v24742, v24743, v24744, v24745, v24746, v24747, v22597, v22598, v22599, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2915(v22573, v22574, v22575, v22576, v22577, v22578, v22579, v22580, 1, v22582, v22583, v22584, v22585, 0, v22587, v22588, v22589, v22590, v22591, v22592, v22593, v22594, v22600, v22595, v22601, v22596, v22602, v22603, v22604, v22605, v22606, v22607, v22608, v22597, v22598, v22599, 3, 7, 4, 2, 5, 8) -> f_2918(v22573, v22574, v22575, v22576, v22577, v22578, v22579, v22580, 1, v22582, v22583, v22584, v22585, 0, v22587, v22588, v22589, v22590, v22591, v22592, v22593, v22594, v22600, v22595, v22601, v22596, v22602, v22603, v22604, v22605, v22606, v22607, v22608, v22597, v22598, v22599, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2935(v22573, v22574, v22575, v22576, v22577, v22578, v22579, v22580, 1, v22582, 0, v22584, v22585, v22587, v22588, v22589, v22590, -1, v22592, v22593, v22594, v22600, v22595, v22601, v22596, v22602, v22603, v22604, v22605, v22606, v22607, v22608, v22597, v22598, v22599, 3, 7, 4, 2, 5, 8) -> f_2940(v22573, v22574, v22575, v22576, v22577, v22578, v22579, v22580, 1, v22582, 0, v22584, v22585, v22587, v22588, v22589, v22590, -1, v22592, v22593, v22594, v22600, v22595, v22601, v22596, v22602, v22603, v22604, v22605, v22606, v22607, v22608, v22597, v22598, v22599, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2940(v22573, v22574, v22575, v22576, v22577, v22578, v22579, v22580, 1, v22582, 0, v22584, v22585, v22587, v22588, v22589, v22590, -1, v22592, v22593, v22594, v22600, v22595, v22601, v22596, v22602, v22603, v22604, v22605, v22606, v22607, v22608, v22597, v22598, v22599, 3, 7, 4, 2, 5, 8) -> f_2945(v22573, v22574, v22575, v22576, v22577, v22578, v22579, v22580, 1, v22582, 0, v22584, v22585, v22587, v22588, v22589, v22590, -1, v22592, v22593, v22594, v22600, v22595, v22601, v22596, v22602, v22603, v22604, v22605, v22606, v22607, v22608, v22597, v22598, v22599, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2945(v22573, v22574, v22575, v22576, v22577, v22578, v22579, v22580, 1, v22582, 0, v22584, v22585, v22587, v22588, v22589, v22590, -1, v22592, v22593, v22594, v22600, v22595, v22601, v22596, v22602, v22603, v22604, v22605, v22606, v22607, v22608, v22597, v22598, v22599, 3, 7, 4, 2, 5, 8) -> f_3040(v22573, v22574, v22575, v22576, v22577, v22578, v22579, v22580, 1, v22582, 0, 0, v22584, v22585, v22587, v22588, v22589, v22590, v22580, v22582, -1, v22592, v22593, v22594, v22600, v22595, v22601, v22596, v22602, v22603, v22604, v22605, v22606, v22607, v22608, v24902, v24890, v24891, v24892, 3, 7, 4, 2, 5, 8) :|: TRUE
f_3040(v24864, v24865, v24866, v24867, v24868, v24869, v24870, v24871, 1, v24873, v24874, 0, v24876, v24877, v24878, v24879, v24880, v24881, v24882, v24883, -1, v24885, v24886, v24887, v24893, v24888, v24894, v24889, v24895, v24896, v24897, v24898, v24899, v24900, v24901, v24902, v24890, v24891, v24892, 3, 7, 4, 2, 5, 8) -> f_3153(v24864, v24865, v24866, v24867, v24868, v24869, v24870, v24871, 1, v24873, v24874, 0, v24876, v24877, v24878, v24879, v24880, v24881, v24882, v24883, -1, v24885, v24886, v24887, v24893, v24888, v24894, v24889, v24895, v24896, v24897, v24898, v24899, v24900, v24901, v27139, v27127, v27128, v27129, 3, 7, 4, 2, 5, 8) :|: TRUE
f_3153(v27101, v27102, v27103, v27104, v27105, v27106, v27107, v27108, 1, v27110, v27111, 0, v27113, v27114, v27115, v27116, v27117, v27118, v27119, v27120, -1, v27122, v27123, v27124, v27130, v27125, v27131, v27126, v27132, v27133, v27134, v27135, v27136, v27137, v27138, v27139, v27127, v27128, v27129, 3, 7, 4, 2, 5, 8) -> f_3156(v27101, v27102, v27103, v27104, v27105, v27106, v27107, v27108, 1, v27110, v27111, 0, v27113, v27114, v27115, v27116, v27117, v27118, v27119, v27120, -1, v27122, v27123, v27124, v27130, v27125, v27131, v27126, v27132, v27133, v27134, v27135, v27136, v27137, v27138, v27139, v27127, v27128, v27129, 3, 7, 4, 2, 5, 8) :|: TRUE
f_3156(v27101, v27102, v27103, v27104, v27105, v27106, v27107, v27108, 1, v27110, v27111, 0, v27113, v27114, v27115, v27116, v27117, v27118, v27119, v27120, -1, v27122, v27123, v27124, v27130, v27125, v27131, v27126, v27132, v27133, v27134, v27135, v27136, v27137, v27138, v27139, v27127, v27128, v27129, 3, 7, 4, 2, 5, 8) -> f_3280(v27101, v27102, v27103, v27104, v27105, v27106, v27107, v27108, 1, v27110, v27111, 0, v27113, v27114, v27115, v27116, v27117, v27118, v27119, v27120, -1, v27122, v27123, v27124, v27130, v27125, v27131, v27126, v27132, v27133, v27134, v27135, v27136, v27137, v27138, v29873, v29874, v29875, 3, 7, 4, 2, 5, 8) :|: TRUE
f_3280(v29847, v29848, v29849, v29850, v29851, v29852, v29853, v29854, 1, v29856, v29857, 0, v29859, v29860, v29861, v29862, v29863, v29864, v29865, v29866, -1, v29868, v29869, v29870, v29876, v29871, v29877, v29872, v29878, v29879, v29880, v29881, v29882, v29883, v29884, v29873, v29874, v29875, 3, 7, 4, 2, 5, 8) -> f_3405(v29847, v29848, v29849, v29850, v29851, v29852, v29853, v29854, 1, v29856, v29857, 0, v29859, v29860, v29861, v29862, v29863, v29864, v29865, v29866, -1, v29868, v29869, v29870, v29876, v29871, v29877, v29872, v29878, v29879, v29880, v29881, v29882, v29883, v29884, v32769, v32770, v32771, 3, 7, 4, 2, 5, 8) :|: TRUE
f_3405(v32743, v32744, v32745, v32746, v32747, v32748, v32749, v32750, 1, v32752, v32753, 0, v32755, v32756, v32757, v32758, v32759, v32760, v32761, v32762, -1, v32764, v32765, v32766, v32772, v32767, v32773, v32768, v32774, v32775, v32776, v32777, v32778, v32779, v32780, v32769, v32770, v32771, 3, 7, 4, 2, 5, 8) -> f_3407(v32743, v32744, v32745, v32746, v32747, v32748, v32749, v32750, 1, v32752, v32753, 0, v32755, v32756, v32757, v32758, v32759, v32760, v32761, v32762, -1, v32764, v32765, v32766, v32772, v32767, v32773, v32768, v32774, v32775, v32776, v32777, v32778, v32779, v32780, v32769, v32770, v32771, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_3407(v32743, v32744, v32745, v32746, v32747, v32748, v32749, v32750, 1, v32752, v32753, 0, v32755, v32756, v32757, v32758, v32759, v32760, v32761, v32762, -1, v32764, v32765, v32766, v32772, v32767, v32773, v32768, v32774, v32775, v32776, v32777, v32778, v32779, v32780, v32769, v32770, v32771, 3, 7, 4, 2, 5, 8) -> f_3409(v32743, v32744, v32745, v32746, v32747, v32748, v32749, v32750, 1, v32752, v32753, 0, v32755, v32756, v32757, v32758, v32759, v32760, v32761, v32762, -1, v32764, v32765, v32766, v32772, v32767, v32773, v32768, v32774, v32775, v32776, v32777, v32778, v32779, v32780, v32769, v32770, v32771, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_3409(v32743, v32744, v32745, v32746, v32747, v32748, v32749, v32750, 1, v32752, v32753, 0, v32755, v32756, v32757, v32758, v32759, v32760, v32761, v32762, -1, v32764, v32765, v32766, v32772, v32767, v32773, v32768, v32774, v32775, v32776, v32777, v32778, v32779, v32780, v32769, v32770, v32771, 3, 7, 4, 2, 5, 8) -> f_3411(v32743, v32744, v32745, v32746, v32747, v32748, v32749, v32750, 1, v32752, v32753, 0, v32756, v32757, v32758, v32759, v32760, v32755, v32761, v32762, -1, v32764, v32765, v32766, v32772, v32767, v32773, v32768, v32774, v32775, v32776, v32777, v32778, v32779, v32780, v32769, v32770, v32771, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_3411(v32743, v32744, v32745, v32746, v32747, v32748, v32749, v32750, 1, v32752, v32753, 0, v32756, v32757, v32758, v32759, v32760, v32755, v32761, v32762, -1, v32764, v32765, v32766, v32772, v32767, v32773, v32768, v32774, v32775, v32776, v32777, v32778, v32779, v32780, v32769, v32770, v32771, 3, 7, 4, 2, 5, 8) -> f_3413(v32743, v32744, v32745, v32746, v32747, v32748, v32749, v32750, 1, v32752, v32753, 0, v32757, v32758, v32759, v32760, v32755, v32761, v32762, -1, v32764, v32765, v32766, v32772, v32767, v32773, v32768, v32774, v32775, v32776, v32777, v32778, v32779, v32780, v32756, v32769, v32770, v32771, 3, 7, 4, 2, 5, 8) :|: v32752 = v32743 + 4 * v32750
f_3413(v32743, v32744, v32745, v32746, v32747, v32748, v32749, v32750, 1, v32752, v32753, 0, v32757, v32758, v32759, v32760, v32755, v32761, v32762, -1, v32764, v32765, v32766, v32772, v32767, v32773, v32768, v32774, v32775, v32776, v32777, v32778, v32779, v32780, v32756, v32769, v32770, v32771, 3, 7, 4, 2, 5, 8) -> f_3415(v32743, v32744, v32745, v32746, v32747, v32748, v32749, v32750, 1, v32752, v32753, 0, v32757, v32758, v32759, v32760, v32755, v32761, v32762, -1, v32764, v32765, v32766, v32772, v32767, v32773, v32768, v32774, v32775, v32776, v32777, v32778, v32779, v32780, v32756, v32769, v32770, v32771, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_3415(v32743, v32744, v32745, v32746, v32747, v32748, v32749, v32750, 1, v32752, v32753, 0, v32757, v32758, v32759, v32760, v32755, v32761, v32762, -1, v32764, v32765, v32766, v32772, v32767, v32773, v32768, v32774, v32775, v32776, v32777, v32778, v32779, v32780, v32756, v32769, v32770, v32771, 3, 7, 4, 2, 5, 8) -> f_3417(v32743, v32744, v32745, v32746, v32747, v32748, v32749, v32750, 1, v32752, v32753, 0, v32757, v32758, v32759, v32760, v32755, v32761, v32762, -1, v32764, v32765, v32766, v32772, v32767, v32773, v32768, v32774, v32775, v32776, v32777, v32778, v32779, v32780, v32756, v32769, v32770, v32771, 3, 7, 4, 2, 5, 8) :|: 0 < v32753
f_3415(v32743, v32744, v32745, v32746, v32747, v32748, v32749, v32750, 1, v32752, v32753, 0, v32757, v32758, v32759, v32760, v32755, v32761, v32762, -1, v32764, v32765, v32766, v32772, v32767, v32773, v32768, v32774, v32775, v32776, v32777, v32778, v32779, v32780, v32756, v32769, v32770, v32771, 3, 7, 4, 2, 5, 8) -> f_3418(v32743, v32744, v32745, v32746, v32747, v32748, v32749, v32750, 1, v32752, 0, v32757, v32758, v32759, v32760, v32755, v32761, v32762, -1, v32764, v32765, v32766, v32772, v32767, v32773, v32768, v32774, v32775, v32776, v32777, v32778, v32779, v32780, v32756, v32769, v32770, v32771, 3, 7, 4, 2, 5, 8) :|: v32753 <= 0
f_3417(v32743, v32744, v32745, v32746, v32747, v32748, v32749, v32750, 1, v32752, v32753, 0, v32757, v32758, v32759, v32760, v32755, v32761, v32762, -1, v32764, v32765, v32766, v32772, v32767, v32773, v32768, v32774, v32775, v32776, v32777, v32778, v32779, v32780, v32756, v32769, v32770, v32771, 3, 7, 4, 2, 5, 8) -> f_3420(v32743, v32744, v32745, v32746, v32747, v32748, v32749, v32750, 1, v32752, v32753, 0, v32757, v32758, v32759, v32760, v32755, v32761, v32762, -1, v32764, v32765, v32766, v32772, v32767, v32773, v32768, v32774, v32775, v32776, v32777, v32778, v32779, v32780, v32756, v32769, v32770, v32771, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_3420(v32743, v32744, v32745, v32746, v32747, v32748, v32749, v32750, 1, v32752, v32753, 0, v32757, v32758, v32759, v32760, v32755, v32761, v32762, -1, v32764, v32765, v32766, v32772, v32767, v32773, v32768, v32774, v32775, v32776, v32777, v32778, v32779, v32780, v32756, v32769, v32770, v32771, 3, 7, 4, 2, 5, 8) -> f_3423(v32743, v32744, v32745, v32746, v32747, v32748, v32749, v32750, 1, v32752, v32753, 0, v32757, v32758, v32759, v32760, v32755, v32761, v32762, -1, v32764, v32765, v32766, v32772, v32767, v32773, v32768, v32774, v32775, v32776, v32777, v32778, v32779, v32780, v32756, v32769, v32770, v32771, 3, 7, 4, 2, 5, 8) :|: TRUE
f_3423(v32743, v32744, v32745, v32746, v32747, v32748, v32749, v32750, 1, v32752, v32753, 0, v32757, v32758, v32759, v32760, v32755, v32761, v32762, -1, v32764, v32765, v32766, v32772, v32767, v32773, v32768, v32774, v32775, v32776, v32777, v32778, v32779, v32780, v32756, v32769, v32770, v32771, 3, 7, 4, 2, 5, 8) -> f_3349(v32743, v32744, v32745, v32746, v32747, v32748, v32749, v32750, 1, v32752, v32753, 0, v32753, v32757, v32758, 1, 0, v32759, v32760, v32755, v32761, v32762, -1, v32764, v32765, v32766, v32772, v32767, v32773, v32768, v32774, v32775, v32776, v32777, v32778, v32779, v32780, v30901, v30889, v30890, v30891, 3, 7, 4, 2, 5, 8) :|: TRUE
f_3349(v30861, v30862, v30863, v30864, v30865, v30866, v30867, v30868, 1, v30870, v30871, 0, v30873, v30874, v30875, v30876, v30877, v30878, v30879, v30880, v30881, v30882, -1, v30884, v30885, v30886, v30892, v30887, v30893, v30888, v30894, v30895, v30896, v30897, v30898, v30899, v30900, v30901, v30889, v30890, v30891, 3, 7, 4, 2, 5, 8) -> f_3353(v30861, v30862, v30863, v30864, v30865, v30866, v30867, v30868, 1, v30870, v30871, 0, v30873, v30874, v30875, v30876, v30877, v30878, v30879, v30880, v30881, v30882, -1, v30884, v30885, v30886, v30892, v30887, v30893, v30888, v30894, v30895, v30896, v30897, v30898, v30899, v30900, v30901, v30889, v30890, v30891, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_3353(v30861, v30862, v30863, v30864, v30865, v30866, v30867, v30868, 1, v30870, v30871, 0, v30873, v30874, v30875, v30876, v30877, v30878, v30879, v30880, v30881, v30882, -1, v30884, v30885, v30886, v30892, v30887, v30893, v30888, v30894, v30895, v30896, v30897, v30898, v30899, v30900, v30901, v30889, v30890, v30891, 3, 7, 4, 2, 5, 8) -> f_3357(v30861, v30862, v30863, v30864, v30865, v30866, v30867, v30868, 1, v30870, v30871, 0, v30873, v30874, v30875, v30876, v30877, v30878, v30879, v30880, v30881, v30882, -1, v30884, v30885, v30886, v30892, v30887, v30893, v30888, v30894, v30895, v30896, v30897, v30898, v30899, v30900, v30901, v30889, v30890, v30891, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_3357(v30861, v30862, v30863, v30864, v30865, v30866, v30867, v30868, 1, v30870, v30871, 0, v30873, v30874, v30875, v30876, v30877, v30878, v30879, v30880, v30881, v30882, -1, v30884, v30885, v30886, v30892, v30887, v30893, v30888, v30894, v30895, v30896, v30897, v30898, v30899, v30900, v30901, v30889, v30890, v30891, 3, 7, 4, 2, 5, 8) -> f_3360(v30861, v30862, v30863, v30864, v30865, v30866, v30867, v30868, 1, v30870, v30871, 0, v30873, v30875, v30876, v30877, v30878, v30879, v30880, v30881, v30882, -1, v30884, v30885, v30886, v30892, v30887, v30893, v30888, v30894, v30895, v30896, v30897, v30898, v30899, v30900, v30901, v30889, v30890, v30891, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_3360(v30861, v30862, v30863, v30864, v30865, v30866, v30867, v30868, 1, v30870, v30871, 0, v30873, v30875, v30876, v30877, v30878, v30879, v30880, v30881, v30882, -1, v30884, v30885, v30886, v30892, v30887, v30893, v30888, v30894, v30895, v30896, v30897, v30898, v30899, v30900, v30901, v30889, v30890, v30891, 3, 7, 4, 2, 5, 8) -> f_3363(v30861, v30862, v30863, v30864, v30865, v30866, v30867, v30868, 1, v30870, v30871, 0, v30873, v30876, v30877, v30878, v30879, v30880, v30881, v30882, -1, v30884, v30885, v30886, v30892, v30887, v30893, v30888, v30894, v30895, v30896, v30897, v30898, v30899, v30900, v30875, v30901, v30889, v30890, v30891, 3, 7, 4, 2, 5, 8) :|: v30870 = v30861 + 4 * v30868
f_3363(v30861, v30862, v30863, v30864, v30865, v30866, v30867, v30868, 1, v30870, v30871, 0, v30873, v30876, v30877, v30878, v30879, v30880, v30881, v30882, -1, v30884, v30885, v30886, v30892, v30887, v30893, v30888, v30894, v30895, v30896, v30897, v30898, v30899, v30900, v30875, v30901, v30889, v30890, v30891, 3, 7, 4, 2, 5, 8) -> f_3366(v30861, v30862, v30863, v30864, v30865, v30866, v30867, v30868, 1, v30870, v30871, 0, v30873, v30877, v30878, v30879, v30880, v30881, v30882, -1, v30884, v30885, v30886, v30892, v30887, v30893, v30888, v30894, v30895, v30896, v30897, v30898, v30899, v30900, v30875, v30901, v30889, v30890, v30891, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_3366(v30861, v30862, v30863, v30864, v30865, v30866, v30867, v30868, 1, v30870, v30871, 0, v30873, v30877, v30878, v30879, v30880, v30881, v30882, -1, v30884, v30885, v30886, v30892, v30887, v30893, v30888, v30894, v30895, v30896, v30897, v30898, v30899, v30900, v30875, v30901, v30889, v30890, v30891, 3, 7, 4, 2, 5, 8) -> f_3369(v30861, v30862, v30863, v30864, v30865, v30866, v30867, v30868, 1, v30870, v30871, 0, v30873, v31617, v30878, v30879, v30880, v30881, v30882, -1, v30884, v30885, v30886, v30892, v30887, v30893, v30888, v30894, v30895, v30896, v30897, v30898, v30899, v30900, v30875, v30877, v30901, v30889, v30890, v30891, 3, 7, 4, 2, 5, 8) :|: 1 + v31617 = v30873 && 0 <= v31617
f_3369(v30861, v30862, v30863, v30864, v30865, v30866, v30867, v30868, 1, v30870, v30871, 0, v30873, v31617, v30878, v30879, v30880, v30881, v30882, -1, v30884, v30885, v30886, v30892, v30887, v30893, v30888, v30894, v30895, v30896, v30897, v30898, v30899, v30900, v30875, v30877, v30901, v30889, v30890, v30891, 3, 7, 4, 2, 5, 8) -> f_3372(v30861, v30862, v30863, v30864, v30865, v30866, v30867, v30868, 1, v30870, v30871, 0, v30873, v31617, v30878, v30879, v30880, v30881, v30882, -1, v30884, v30885, v30886, v30892, v30887, v30893, v30888, v30894, v30895, v30896, v30897, v30898, v30899, v30900, v30901, v30875, v30889, v30890, v30891, 3, 7, 4, 2, 5, 8) :|: TRUE
f_3372(v30861, v30862, v30863, v30864, v30865, v30866, v30867, v30868, 1, v30870, v30871, 0, v30873, v31617, v30878, v30879, v30880, v30881, v30882, -1, v30884, v30885, v30886, v30892, v30887, v30893, v30888, v30894, v30895, v30896, v30897, v30898, v30899, v30900, v30901, v30875, v30889, v30890, v30891, 3, 7, 4, 2, 5, 8) -> f_3375(v30861, v30862, v30863, v30864, v30865, v30866, v30867, v30868, 1, v30870, v30871, 0, v30873, v31617, v30879, v30880, v30881, v30882, -1, v30884, v30885, v30886, v30892, v30887, v30893, v30888, v30894, v30895, v30896, v30897, v30898, v30899, v30900, v30901, v30875, v30889, v30890, v30891, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_3375(v30861, v30862, v30863, v30864, v30865, v30866, v30867, v30868, 1, v30870, v30871, 0, v30873, v31617, v30879, v30880, v30881, v30882, -1, v30884, v30885, v30886, v30892, v30887, v30893, v30888, v30894, v30895, v30896, v30897, v30898, v30899, v30900, v30901, v30875, v30889, v30890, v30891, 3, 7, 4, 2, 5, 8) -> f_3379(v30861, v30862, v30863, v30864, v30865, v30866, v30867, v30868, 1, v30870, v30871, 0, v30873, v31617, v30879, v31621, v30880, v30881, v30882, -1, v30884, v30885, v30886, v30892, v30887, v30893, v30888, v30894, v30895, v30896, v30897, v30898, v30899, v30900, v30901, v30875, v30889, v30890, v30891, 3, 7, 4, 2, 5, 8) :|: v31621 = 1 + v30879 && 2 <= v31621
f_3379(v30861, v30862, v30863, v30864, v30865, v30866, v30867, v30868, 1, v30870, v30871, 0, v30873, v31617, v30879, v31621, v30880, v30881, v30882, -1, v30884, v30885, v30886, v30892, v30887, v30893, v30888, v30894, v30895, v30896, v30897, v30898, v30899, v30900, v30901, v30875, v30889, v30890, v30891, 3, 7, 4, 2, 5, 8) -> f_3383(v30861, v30862, v30863, v30864, v30865, v30866, v30867, v30868, 1, v30870, v30871, 0, v30873, v31617, v30879, v31621, v30880, v30881, v30882, -1, v30884, v30885, v30886, v30892, v30887, v30893, v30888, v30894, v30895, v30896, v30897, v30898, v30899, v30900, v30901, v30875, v30889, v30890, v30891, 3, 7, 4, 2, 5, 8) :|: TRUE
f_3383(v30861, v30862, v30863, v30864, v30865, v30866, v30867, v30868, 1, v30870, v30871, 0, v30873, v31617, v30879, v31621, v30880, v30881, v30882, -1, v30884, v30885, v30886, v30892, v30887, v30893, v30888, v30894, v30895, v30896, v30897, v30898, v30899, v30900, v30901, v30875, v30889, v30890, v30891, 3, 7, 4, 2, 5, 8) -> f_3387(v30861, v30862, v30863, v30864, v30865, v30866, v30867, v30868, 1, v30870, v30871, 0, v30873, v31617, v30879, v31621, v30880, v30881, v30882, -1, v30884, v30885, v30886, v30892, v30887, v30893, v30888, v30894, v30895, v30896, v30897, v30898, v30899, v30900, v30901, v30875, v30889, v30890, v30891, 3, 7, 4, 2, 5, 8) :|: TRUE
f_3387(v30861, v30862, v30863, v30864, v30865, v30866, v30867, v30868, 1, v30870, v30871, 0, v30873, v31617, v30879, v31621, v30880, v30881, v30882, -1, v30884, v30885, v30886, v30892, v30887, v30893, v30888, v30894, v30895, v30896, v30897, v30898, v30899, v30900, v30901, v30875, v30889, v30890, v30891, 3, 7, 4, 2, 5, 8) -> f_3326(v30861, v30862, v30863, v30864, v30865, v30866, v30867, v30868, 1, v30870, v30871, 0, v30873, v30880, v30881, v30882, -1, v30884, v30885, v31617, v30879, v31621, v30886, v30892, v30887, v30893, v30888, v30894, v30895, v30896, v30897, v30898, v30899, v30900, v30673, v30661, v30662, v30663, 3, 7, 4, 2, 5, 8) :|: TRUE
f_3326(v30636, v30637, v30638, v30639, v30640, v30641, v30642, v30643, 1, v30645, v30646, 0, v30648, v30649, v30650, v30651, -1, v30653, v30654, v30655, v30656, v30657, v30658, v30664, v30659, v30665, v30660, v30666, v30667, v30668, v30669, v30670, v30671, v30672, v30673, v30661, v30662, v30663, 3, 7, 4, 2, 5, 8) -> f_3329(v30636, v30637, v30638, v30639, v30640, v30641, v30642, v30643, 1, v30645, v30646, 0, v30648, v30649, v30650, v30651, -1, v30653, v30654, v30655, v30656, v30657, v30658, v30664, v30659, v30665, v30660, v30666, v30667, v30668, v30669, v30670, v30671, v30672, v30673, v30661, v30662, v30663, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_3329(v30636, v30637, v30638, v30639, v30640, v30641, v30642, v30643, 1, v30645, v30646, 0, v30648, v30649, v30650, v30651, -1, v30653, v30654, v30655, v30656, v30657, v30658, v30664, v30659, v30665, v30660, v30666, v30667, v30668, v30669, v30670, v30671, v30672, v30673, v30661, v30662, v30663, 3, 7, 4, 2, 5, 8) -> f_3332(v30636, v30637, v30638, v30639, v30640, v30641, v30642, v30643, 1, v30645, v30646, 0, v30648, v30649, v30650, v30651, -1, v30653, v30654, v30655, v30656, v30657, v30658, v30664, v30659, v30665, v30660, v30666, v30667, v30668, v30669, v30670, v30671, v30672, v30673, v30661, v30662, v30663, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_3332(v30636, v30637, v30638, v30639, v30640, v30641, v30642, v30643, 1, v30645, v30646, 0, v30648, v30649, v30650, v30651, -1, v30653, v30654, v30655, v30656, v30657, v30658, v30664, v30659, v30665, v30660, v30666, v30667, v30668, v30669, v30670, v30671, v30672, v30673, v30661, v30662, v30663, 3, 7, 4, 2, 5, 8) -> f_3334(v30636, v30637, v30638, v30639, v30640, v30641, v30642, v30643, 1, v30645, v30646, 0, v30648, v30649, v30650, v30651, -1, v30653, v30654, v30655, v30656, v30657, v30658, v30664, v30659, v30665, v30660, v30666, v30667, v30668, v30669, v30670, v30671, v30672, v30673, v30661, v30662, v30663, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_3334(v30636, v30637, v30638, v30639, v30640, v30641, v30642, v30643, 1, v30645, v30646, 0, v30648, v30649, v30650, v30651, -1, v30653, v30654, v30655, v30656, v30657, v30658, v30664, v30659, v30665, v30660, v30666, v30667, v30668, v30669, v30670, v30671, v30672, v30673, v30661, v30662, v30663, 3, 7, 4, 2, 5, 8) -> f_3336(v30636, v30637, v30638, v30639, v30640, v30641, v30642, v30643, 1, v30645, v30646, 0, v30648, v30649, v30650, v30651, -1, v30653, v30654, v30655, v30656, v30657, v30658, v30664, v30659, v30665, v30660, v30666, v30667, v30668, v30669, v30670, v30671, v30672, v30673, v30661, v30662, v30663, 3, 7, 4, 2, 5, 8) :|: v30645 = v30636 + 4 * v30643
f_3336(v30636, v30637, v30638, v30639, v30640, v30641, v30642, v30643, 1, v30645, v30646, 0, v30648, v30649, v30650, v30651, -1, v30653, v30654, v30655, v30656, v30657, v30658, v30664, v30659, v30665, v30660, v30666, v30667, v30668, v30669, v30670, v30671, v30672, v30673, v30661, v30662, v30663, 3, 7, 4, 2, 5, 8) -> f_3338(v30636, v30637, v30638, v30639, v30640, v30641, v30642, v30643, 1, v30645, v30646, 0, v30655, v30649, v30650, v30651, -1, v30653, v30654, v30648, v30656, v30657, v30658, v30664, v30659, v30665, v30660, v30666, v30667, v30668, v30669, v30670, v30671, v30672, v30673, v30661, v30662, v30663, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_3338(v30636, v30637, v30638, v30639, v30640, v30641, v30642, v30643, 1, v30645, v30646, 0, v30655, v30649, v30650, v30651, -1, v30653, v30654, v30648, v30656, v30657, v30658, v30664, v30659, v30665, v30660, v30666, v30667, v30668, v30669, v30670, v30671, v30672, v30673, v30661, v30662, v30663, 3, 7, 4, 2, 5, 8) -> f_3340(v30636, v30637, v30638, v30639, v30640, v30641, v30642, v30643, 1, v30645, v30646, 0, v30655, v30649, v30650, v30651, -1, v30653, v30654, v30648, v30656, v30657, v30658, v30664, v30659, v30665, v30660, v30666, v30667, v30668, v30669, v30670, v30671, v30672, v30673, v30661, v30662, v30663, 3, 7, 4, 2, 5, 8) :|: 0 < v30655 && 2 <= v30648
f_3338(v30636, v30637, v30638, v30639, v30640, v30641, v30642, v30643, 1, v30645, v30646, 0, v30655, v30649, v30650, v30651, -1, v30653, v30654, v30648, v30656, v30657, v30658, v30664, v30659, v30665, v30660, v30666, v30667, v30668, v30669, v30670, v30671, v30672, v30673, v30661, v30662, v30663, 3, 7, 4, 2, 5, 8) -> f_3341(v30636, v30637, v30638, v30639, v30640, v30641, v30642, v30643, 1, v30645, v30646, 0, v30649, v30650, v30651, -1, v30653, v30654, v30656, v30657, v30658, v30664, v30659, v30665, v30660, v30666, v30667, v30668, v30669, v30670, v30671, v30672, v30673, v30661, v30662, v30663, 3, 7, 4, 2, 5, 8) :|: v30655 <= 0 && v30648 = 1 && v30655 = 0 && 0 = 0
f_3340(v30636, v30637, v30638, v30639, v30640, v30641, v30642, v30643, 1, v30645, v30646, 0, v30655, v30649, v30650, v30651, -1, v30653, v30654, v30648, v30656, v30657, v30658, v30664, v30659, v30665, v30660, v30666, v30667, v30668, v30669, v30670, v30671, v30672, v30673, v30661, v30662, v30663, 3, 7, 4, 2, 5, 8) -> f_3344(v30636, v30637, v30638, v30639, v30640, v30641, v30642, v30643, 1, v30645, v30646, 0, v30655, v30649, v30650, v30651, -1, v30653, v30654, v30648, v30656, v30657, v30658, v30664, v30659, v30665, v30660, v30666, v30667, v30668, v30669, v30670, v30671, v30672, v30673, v30661, v30662, v30663, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_3344(v30636, v30637, v30638, v30639, v30640, v30641, v30642, v30643, 1, v30645, v30646, 0, v30655, v30649, v30650, v30651, -1, v30653, v30654, v30648, v30656, v30657, v30658, v30664, v30659, v30665, v30660, v30666, v30667, v30668, v30669, v30670, v30671, v30672, v30673, v30661, v30662, v30663, 3, 7, 4, 2, 5, 8) -> f_3348(v30636, v30637, v30638, v30639, v30640, v30641, v30642, v30643, 1, v30645, v30646, 0, v30655, v30649, v30650, v30651, -1, v30653, v30654, v30648, v30656, v30657, v30658, v30664, v30659, v30665, v30660, v30666, v30667, v30668, v30669, v30670, v30671, v30672, v30673, v30661, v30662, v30663, 3, 7, 4, 2, 5, 8) :|: TRUE
f_3348(v30636, v30637, v30638, v30639, v30640, v30641, v30642, v30643, 1, v30645, v30646, 0, v30655, v30649, v30650, v30651, -1, v30653, v30654, v30648, v30656, v30657, v30658, v30664, v30659, v30665, v30660, v30666, v30667, v30668, v30669, v30670, v30671, v30672, v30673, v30661, v30662, v30663, 3, 7, 4, 2, 5, 8) -> f_3349(v30636, v30637, v30638, v30639, v30640, v30641, v30642, v30643, 1, v30645, v30646, 0, v30655, v30643, v30645, v30648, v30655, v30656, v30657, v30649, v30650, v30651, -1, v30653, v30654, v30658, v30664, v30659, v30665, v30660, v30666, v30667, v30668, v30669, v30670, v30671, v30672, v30901, v30889, v30890, v30891, 3, 7, 4, 2, 5, 8) :|: TRUE
f_3341(v30636, v30637, v30638, v30639, v30640, v30641, v30642, v30643, 1, v30645, v30646, 0, v30649, v30650, v30651, -1, v30653, v30654, v30656, v30657, v30658, v30664, v30659, v30665, v30660, v30666, v30667, v30668, v30669, v30670, v30671, v30672, v30673, v30661, v30662, v30663, 3, 7, 4, 2, 5, 8) -> f_3345(v30636, v30637, v30638, v30639, v30640, v30641, v30642, v30643, 1, v30645, v30646, 0, v30649, v30650, v30651, -1, v30653, v30654, v30656, v30657, v30658, v30664, v30659, v30665, v30660, v30666, v30667, v30668, v30669, v30670, v30671, v30672, v30673, v30661, v30662, v30663, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_3345(v30636, v30637, v30638, v30639, v30640, v30641, v30642, v30643, 1, v30645, v30646, 0, v30649, v30650, v30651, -1, v30653, v30654, v30656, v30657, v30658, v30664, v30659, v30665, v30660, v30666, v30667, v30668, v30669, v30670, v30671, v30672, v30673, v30661, v30662, v30663, 3, 7, 4, 2, 5, 8) -> f_3350(v30636, v30637, v30638, v30639, v30640, v30641, v30642, v30643, 1, v30645, v30646, 0, v30649, v30650, v30651, -1, v30653, v30654, v30656, v30657, v30658, v30664, v30659, v30665, v30660, v30666, v30667, v30668, v30669, v30670, v30671, v30672, v30673, v30661, v30662, v30663, 3, 7, 4, 2, 5, 8) :|: TRUE
f_3350(v30636, v30637, v30638, v30639, v30640, v30641, v30642, v30643, 1, v30645, v30646, 0, v30649, v30650, v30651, -1, v30653, v30654, v30656, v30657, v30658, v30664, v30659, v30665, v30660, v30666, v30667, v30668, v30669, v30670, v30671, v30672, v30673, v30661, v30662, v30663, 3, 7, 4, 2, 5, 8) -> f_3425(v30636, v30637, v30638, v30639, v30640, v30641, v30642, v30643, 1, v30645, v30646, 0, v30649, v30650, v30651, -1, v30653, v30654, v30643, v30645, v30656, v30657, v30658, v30664, v30659, v30665, v30660, v30666, v30667, v30668, v30669, v30670, v30671, v30672, v33078, v33066, v33067, v33068, 3, 7, 4, 2, 5, 8) :|: TRUE
f_3425(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33048, 1, v33050, v33051, 0, v33053, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 2, 5, 8) -> f_3426(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33048, 1, v33050, v33051, 0, v33053, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 2, 5, 8) :|: TRUE
f_3426(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33048, 1, v33050, v33051, 0, v33053, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 2, 5, 8) -> f_3427(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33048, 1, v33050, v33051, 0, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_3427(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33048, 1, v33050, v33051, 0, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 2, 5, 8) -> f_3428(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33048, 1, v33050, v33051, 0, v33145, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 2, 5, 8) :|: v33145 = 1 + v33048 && 2 <= v33145
f_3428(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33048, 1, v33050, v33051, 0, v33145, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 2, 5, 8) -> f_3429(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33048, 1, v33050, v33051, 0, v33145, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 2, 5, 8) :|: TRUE
f_3429(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33048, 1, v33050, v33051, 0, v33145, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 2, 5, 8) -> f_3430(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33048, 1, v33050, v33051, 0, v33145, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 2, 5, 8) :|: TRUE
f_3430(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33048, 1, v33050, v33051, 0, v33145, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 2, 5, 8) -> f_3431(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33048, v33050, v33051, 0, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_3431(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33048, v33050, v33051, 0, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 2, 5, 8) -> f_3432(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33048, v33050, v33051, 0, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_3432(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33048, v33050, v33051, 0, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 2, 5, 8) -> f_3433(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33048, v33050, v33051, 0, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2) :|: v33145 < v33042 && 3 <= v33042 && 12 <= v33072
f_3433(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33048, v33050, v33051, 0, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2) -> f_3435(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33048, v33050, v33051, 0, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2) :|: 0 = 0
f_3435(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33048, v33050, v33051, 0, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2) -> f_3437(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33048, v33050, v33051, 0, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2) :|: TRUE
f_3437(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33048, v33050, v33051, 0, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2) -> f_3439(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33048, v33050, v33051, 0, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2) :|: TRUE
f_3439(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33048, v33050, v33051, 0, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2) -> f_3441(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33048, v33050, v33051, 0, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2) :|: 0 = 0
f_3441(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33048, v33050, v33051, 0, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2) -> f_3443(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33048, v33050, v33051, 0, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2) :|: 0 = 0
f_3443(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33048, v33050, v33051, 0, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2) -> f_3444(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33050, v33051, 0, v33048, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2) :|: 0 = 0
f_3444(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33050, v33051, 0, v33048, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2) -> f_3445(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33473, v33051, 0, v33048, v33050, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2, 9) :|: v33473 = v33041 + 4 * v33145 && 9 <= v33473
f_3445(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33473, v33051, 0, v33048, v33050, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2, 9) -> f_3446(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33473, v33474, 0, v33048, v33050, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2, 9) :|: TRUE
f_3446(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33473, v33474, 0, v33048, v33050, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2, 9) -> f_3447(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33473, v33474, 0, v33048, v33050, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2, 9) :|: v33474 < 0
f_3446(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33473, v33474, 0, v33048, v33050, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2, 9) -> f_3448(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33473, v33474, 0, v33048, v33050, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2, 9) :|: 0 <= v33474
f_3447(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33473, v33474, 0, v33048, v33050, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2, 9) -> f_3449(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33473, v33474, v33048, v33050, 0, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2, 9) :|: 0 = 0
f_3449(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33473, v33474, v33048, v33050, 0, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2, 9) -> f_3451(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33473, v33474, v33048, v33050, 0, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2, 9) :|: TRUE
f_3451(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33473, v33474, v33048, v33050, 0, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2, 9) -> f_3453(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33473, v33474, v33048, v33050, 0, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2, 9) :|: 0 = 0
f_3453(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33473, v33474, v33048, v33050, 0, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2, 9) -> f_3455(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33473, v33474, v33048, v33050, 0, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2, 9) :|: 0 = 0
f_3455(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33473, v33474, v33048, v33050, 0, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2, 9) -> f_3456(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33473, v33474, v33048, v33050, 0, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2, 9) :|: 0 = 0
f_3456(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33473, v33474, v33048, v33050, 0, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2, 9) -> f_3457(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33473, v33474, v33048, v33050, 0, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33055, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2, 9) :|: v33473 = v33041 + 4 * v33145
f_3457(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33473, v33474, v33048, v33050, 0, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33055, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2, 9) -> f_3458(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33473, v33474, v33048, v33050, 0, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33055, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2, 9) :|: 0 = 0
f_3458(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33473, v33474, v33048, v33050, 0, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33055, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2, 9) -> f_3459(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33473, v33474, v33048, v33050, 0, v33861, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33055, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2, 9) :|: v33861 = 1 + v33474 && v33861 <= 0
f_3459(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33473, v33474, v33048, v33050, 0, v33861, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33055, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2, 9) -> f_3460(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33473, v33474, v33048, v33050, 0, v33861, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33055, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2, 9) :|: TRUE
f_3460(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33473, v33474, v33048, v33050, 0, v33861, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33055, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2, 9) -> f_3461(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33473, v33474, v33048, v33050, 0, v33861, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33055, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2, 9) :|: 0 = 0
f_3461(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33473, v33474, v33048, v33050, 0, v33861, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33055, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2, 9) -> f_3462(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33473, v33474, v33048, v33050, 0, v33861, v33058, v33863, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33055, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2, 9) :|: v33863 = 1 + v33058 && 2 <= v33863
f_3462(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33473, v33474, v33048, v33050, 0, v33861, v33058, v33863, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33055, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2, 9) -> f_3463(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33473, v33474, v33048, v33050, 0, v33861, v33058, v33863, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33055, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2, 9) :|: TRUE
f_3463(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33473, v33474, v33048, v33050, 0, v33861, v33058, v33863, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33055, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2, 9) -> f_3464(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33473, v33474, v33048, v33050, 0, v33861, v33058, v33863, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33055, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2, 9) :|: TRUE
f_3464(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33473, v33474, v33048, v33050, 0, v33861, v33058, v33863, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33055, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2, 9) -> f_2915(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33473, v33474, v33048, v33050, 0, v33059, v33060, v33061, v33062, v33861, v33058, v33863, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v22597, v22598, v22599, 3, 7, 4, 2, 5, 8) :|: TRUE
f_3448(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33473, v33474, 0, v33048, v33050, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2, 9) -> f_3450(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33473, v33474, 0, v33048, v33050, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2, 9) :|: 0 = 0
f_3450(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33473, v33474, 0, v33048, v33050, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2, 9) -> f_3452(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33473, v33474, 0, v33048, v33050, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2, 9) :|: TRUE
f_3452(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33473, v33474, 0, v33048, v33050, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2, 9) -> f_3454(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33473, v33474, 0, v33048, v33050, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2, 9) :|: TRUE
f_3454(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33473, v33474, 0, v33048, v33050, v33054, v33055, -1, v33057, v33058, v33059, v33060, v33061, v33062, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v33078, v33066, v33067, v33068, 3, 7, 4, 5, 8, 12, 2, 9) -> f_3405(v33041, v33042, v33043, v33044, v33045, v33046, v33047, v33145, 1, v33473, v33474, 0, v33048, v33050, v33059, v33060, v33061, v33062, v33054, v33055, -1, v33057, v33058, v33063, v33069, v33064, v33070, v33065, v33071, v33072, v33073, v33074, v33075, v33076, v33077, v32769, v32770, v32771, 3, 7, 4, 2, 5, 8) :|: TRUE
f_3418(v32743, v32744, v32745, v32746, v32747, v32748, v32749, v32750, 1, v32752, 0, v32757, v32758, v32759, v32760, v32755, v32761, v32762, -1, v32764, v32765, v32766, v32772, v32767, v32773, v32768, v32774, v32775, v32776, v32777, v32778, v32779, v32780, v32756, v32769, v32770, v32771, 3, 7, 4, 2, 5, 8) -> f_3421(v32743, v32744, v32745, v32746, v32747, v32748, v32749, v32750, 1, v32752, 0, v32757, v32758, v32759, v32760, v32755, v32761, v32762, -1, v32764, v32765, v32766, v32772, v32767, v32773, v32768, v32774, v32775, v32776, v32777, v32778, v32779, v32780, v32756, v32769, v32770, v32771, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_3421(v32743, v32744, v32745, v32746, v32747, v32748, v32749, v32750, 1, v32752, 0, v32757, v32758, v32759, v32760, v32755, v32761, v32762, -1, v32764, v32765, v32766, v32772, v32767, v32773, v32768, v32774, v32775, v32776, v32777, v32778, v32779, v32780, v32756, v32769, v32770, v32771, 3, 7, 4, 2, 5, 8) -> f_3424(v32743, v32744, v32745, v32746, v32747, v32748, v32749, v32750, 1, v32752, 0, v32757, v32758, v32759, v32760, v32755, v32761, v32762, -1, v32764, v32765, v32766, v32772, v32767, v32773, v32768, v32774, v32775, v32776, v32777, v32778, v32779, v32780, v32756, v32769, v32770, v32771, 3, 7, 4, 2, 5, 8) :|: TRUE
f_3424(v32743, v32744, v32745, v32746, v32747, v32748, v32749, v32750, 1, v32752, 0, v32757, v32758, v32759, v32760, v32755, v32761, v32762, -1, v32764, v32765, v32766, v32772, v32767, v32773, v32768, v32774, v32775, v32776, v32777, v32778, v32779, v32780, v32756, v32769, v32770, v32771, 3, 7, 4, 2, 5, 8) -> f_3425(v32743, v32744, v32745, v32746, v32747, v32748, v32749, v32750, 1, v32752, 0, 0, v32755, v32761, v32762, -1, v32764, v32765, v32757, v32758, v32759, v32760, v32766, v32772, v32767, v32773, v32768, v32774, v32775, v32776, v32777, v32778, v32779, v32780, v33078, v33066, v33067, v33068, 3, 7, 4, 2, 5, 8) :|: TRUE
Combined rules. Obtained 8 rulesP rules:
f_2918(v22573:0, v22574:0, v22575:0, v22576:0, v22577:0, v22578:0, v22579:0, v22580:0, 1, v22573:0 + 4 * v22580:0, v22583:0, v22584:0, v22585:0, 0, v22587:0, v22588:0, v22589:0, v22590:0, v22591:0, v22592:0, v22593:0, v22594:0, v22600:0, v22595:0, v22601:0, v22596:0, v22602:0, v22603:0, v22604:0, v22605:0, v22606:0, v22607:0, v22608:0, v22597:0, v22598:0, v22599:0, 3, 7, 4, 2, 5, 8) -> f_2918(v22573:0, v22574:0, v22575:0, v22576:0, v22577:0, v22578:0, v22579:0, v22580:0, 1, v22573:0 + 4 * v22580:0, v22591:0, v22584:0, v22585:0, 0, v22587:0, v22588:0, v22589:0, v22590:0, 1 + v22591:0, v22593:0, 1 + v22593:0, v22594:0, v22600:0, v22595:0, v22601:0, v22596:0, v22602:0, v22603:0, v22604:0, v22605:0, v22606:0, v22607:0, v22608:0, v22597:1, v22598:1, v22599:1, 3, 7, 4, 2, 5, 8) :|: v22583:0 < -1 && v22591:0 < 0 && v22593:0 > 0
f_2918(v22573:0, v22574:0, v22575:0, v22576:0, v22577:0, v22578:0, v22579:0, v22580:0, 1, v22573:0 + 4 * v22580:0, -1, v22584:0, v22585:0, 0, v22587:0, v22588:0, v22589:0, v22590:0, 0, v22592:0, v22593:0, v22594:0, v22600:0, v22595:0, v22601:0, v22596:0, v22602:0, v22603:0, v22604:0, v22605:0, v22606:0, v22607:0, v22608:0, v22597:0, v22598:0, v22599:0, 3, 7, 4, 2, 5, 8) -> f_3415(v22573:0, v22574:0, v22575:0, v22576:0, v22577:0, v22578:0, v22579:0, v22580:0, 1, v22573:0 + 4 * v22580:0, 0, 0, v22587:0, v22588:0, v22589:0, v22590:0, v22584:0, v22580:0, v22573:0 + 4 * v22580:0, -1, v22592:0, v22593:0, v22594:0, v22600:0, v22595:0, v22601:0, v22596:0, v22602:0, v22603:0, v22604:0, v22605:0, v22606:0, v22607:0, v22608:0, v22585:0, v32769:0, v32770:0, v32771:0, 3, 7, 4, 2, 5, 8) :|: TRUE
f_3446(v33041:0, v33042:0, v33043:0, v33044:0, v33045:0, v33046:0, v33047:0, v33145:0, 1, v33041:0 + 4 * v33145:0, v33474:0, 0, v33048:0, v33050:0, v33054:0, v33055:0, -1, v33057:0, v33058:0, v33059:0, v33060:0, v33061:0, v33062:0, v33063:0, v33069:0, v33064:0, v33070:0, v33065:0, v33071:0, v33072:0, v33073:0, v33074:0, v33075:0, v33076:0, v33077:0, v33078:0, v33066:0, v33067:0, v33068:0, 3, 7, 4, 5, 8, 12, 2, 9) -> f_2918(v33041:0, v33042:0, v33043:0, v33044:0, v33045:0, v33046:0, v33047:0, v33145:0, 1, v33041:0 + 4 * v33145:0, v33474:0, v33048:0, v33050:0, 0, v33059:0, v33060:0, v33061:0, v33062:0, 1 + v33474:0, v33058:0, 1 + v33058:0, v33063:0, v33069:0, v33064:0, v33070:0, v33065:0, v33071:0, v33072:0, v33073:0, v33074:0, v33075:0, v33076:0, v33077:0, v22597:0, v22598:0, v22599:0, 3, 7, 4, 2, 5, 8) :|: v33474:0 < 0 && v33058:0 > 0
f_3415(v32743:0, v32744:0, v32745:0, v32746:0, v32747:0, v32748:0, v32749:0, v32750:0, 1, v32743:0 + 4 * v32750:0, 1 + v31617:0, 0, v32757:0, v32758:0, v32759:0, v32760:0, v32755:0, v32761:0, v32762:0, -1, v32764:0, v32765:0, v32766:0, v32772:0, v32767:0, v32773:0, v32768:0, v32774:0, v32775:0, v32776:0, v32777:0, v32778:0, v32779:0, v32780:0, v32756:0, v32769:0, v32770:0, v32771:0, 3, 7, 4, 2, 5, 8) -> f_3338(v32743:0, v32744:0, v32745:0, v32746:0, v32747:0, v32748:0, v32749:0, v32750:0, 1, v32743:0 + 4 * v32750:0, 1 + v31617:0, 0, v31617:0, v32755:0, v32761:0, v32762:0, -1, v32764:0, v32765:0, 1 + v31617:0, v32760:0, 1 + v32760:0, v32766:0, v32772:0, v32767:0, v32773:0, v32768:0, v32774:0, v32775:0, v32776:0, v32777:0, v32778:0, v32779:0, v32780:0, v30673:0, v30661:0, v30662:0, v30663:0, 3, 7, 4, 2, 5, 8) :|: v31617:0 > -1 && v32760:0 > 0
f_3446(v33041:0, v33042:0, v33043:0, v33044:0, v33045:0, v33046:0, v33047:0, v33145:0, 1, v33041:0 + 4 * v33145:0, v33474:0, 0, v33048:0, v33050:0, v33054:0, v33055:0, -1, v33057:0, v33058:0, v33059:0, v33060:0, v33061:0, v33062:0, v33063:0, v33069:0, v33064:0, v33070:0, v33065:0, v33071:0, v33072:0, v33073:0, v33074:0, v33075:0, v33076:0, v33077:0, v33078:0, v33066:0, v33067:0, v33068:0, 3, 7, 4, 5, 8, 12, 2, 9) -> f_3415(v33041:0, v33042:0, v33043:0, v33044:0, v33045:0, v33046:0, v33047:0, v33145:0, 1, v33041:0 + 4 * v33145:0, v33474:0, 0, v33059:0, v33060:0, v33061:0, v33062:0, v33048:0, v33054:0, v33055:0, -1, v33057:0, v33058:0, v33063:0, v33069:0, v33064:0, v33070:0, v33065:0, v33071:0, v33072:0, v33073:0, v33074:0, v33075:0, v33076:0, v33077:0, v33050:0, v32769:0, v32770:0, v32771:0, 3, 7, 4, 2, 5, 8) :|: v33474:0 > -1
f_3415(v32743:0, v32744:0, v32745:0, v32746:0, v32747:0, v32748:0, v32749:0, v32750:0, 1, v32752:0, v32753:0, 0, v32757:0, v32758:0, v32759:0, v32760:0, v32755:0, v32761:0, v32762:0, -1, v32764:0, v32765:0, v32766:0, v32772:0, v32767:0, v32773:0, v32768:0, v32774:0, v32775:0, v32776:0, v32777:0, v32778:0, v32779:0, v32780:0, v32756:0, v32769:0, v32770:0, v32771:0, 3, 7, 4, 2, 5, 8) -> f_3446(v32743:0, v32744:0, v32745:0, v32746:0, v32747:0, v32748:0, v32749:0, 1 + v32750:0, 1, v32743:0 + 4 * (1 + v32750:0), v33474:0, 0, v32750:0, v32752:0, v32761:0, v32762:0, -1, v32764:0, v32765:0, v32757:0, v32758:0, v32759:0, v32760:0, v32766:0, v32772:0, v32767:0, v32773:0, v32768:0, v32774:0, v32775:0, v32776:0, v32777:0, v32778:0, v32779:0, v32780:0, v33078:0, v33066:0, v33067:0, v33068:0, 3, 7, 4, 5, 8, 12, 2, 9) :|: v32750:0 > 0 && v32744:0 > 2 && v32744:0 > 1 + v32750:0 && v32775:0 > 11 && v32753:0 < 1 && v32743:0 + 4 * (1 + v32750:0) > 8
f_3338(v30636:0, v30637:0, v30638:0, v30639:0, v30640:0, v30641:0, v30642:0, v30643:0, 1, v30636:0 + 4 * v30643:0, v30646:0, 0, 1 + v31617:0, v30649:0, v30650:0, v30651:0, -1, v30653:0, v30654:0, v30648:0, v30656:0, v30657:0, v30658:0, v30664:0, v30659:0, v30665:0, v30660:0, v30666:0, v30667:0, v30668:0, v30669:0, v30670:0, v30671:0, v30672:0, v30673:0, v30661:0, v30662:0, v30663:0, 3, 7, 4, 2, 5, 8) -> f_3338(v30636:0, v30637:0, v30638:0, v30639:0, v30640:0, v30641:0, v30642:0, v30643:0, 1, v30636:0 + 4 * v30643:0, v30646:0, 0, v31617:0, v30649:0, v30650:0, v30651:0, -1, v30653:0, v30654:0, 1 + v31617:0, v30657:0, 1 + v30657:0, v30658:0, v30664:0, v30659:0, v30665:0, v30660:0, v30666:0, v30667:0, v30668:0, v30669:0, v30670:0, v30671:0, v30672:0, v30673:1, v30661:1, v30662:1, v30663:1, 3, 7, 4, 2, 5, 8) :|: v31617:0 > -1 && v30657:0 > 0 && v30648:0 > 1
f_3338(v30636:0, v30637:0, v30638:0, v30639:0, v30640:0, v30641:0, v30642:0, v30643:0, 1, v30645:0, v30646:0, 0, 0, v30649:0, v30650:0, v30651:0, -1, v30653:0, v30654:0, 1, v30656:0, v30657:0, v30658:0, v30664:0, v30659:0, v30665:0, v30660:0, v30666:0, v30667:0, v30668:0, v30669:0, v30670:0, v30671:0, v30672:0, v30673:0, v30661:0, v30662:0, v30663:0, 3, 7, 4, 2, 5, 8) -> f_3446(v30636:0, v30637:0, v30638:0, v30639:0, v30640:0, v30641:0, v30642:0, 1 + v30643:0, 1, v30636:0 + 4 * (1 + v30643:0), v33474:0, 0, v30643:0, v30645:0, v30650:0, v30651:0, -1, v30653:0, v30654:0, v30643:0, v30645:0, v30656:0, v30657:0, v30658:0, v30664:0, v30659:0, v30665:0, v30660:0, v30666:0, v30667:0, v30668:0, v30669:0, v30670:0, v30671:0, v30672:0, v33078:0, v33066:0, v33067:0, v33068:0, 3, 7, 4, 5, 8, 12, 2, 9) :|: v30643:0 > 0 && v30637:0 > 2 && v30637:0 > 1 + v30643:0 && v30636:0 + 4 * (1 + v30643:0) > 8 && v30667:0 > 11
Filtered unneeded arguments:
   f_2918(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42) -> f_2918(x1, x2, x8, x10, x11, x18, x19, x21, x28)
   f_3446(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47) -> f_3446(x1, x2, x8, x10, x11, x19, x23, x30)
   f_3415(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44) -> f_3415(x1, x2, x8, x10, x11, x16, x22, x29)
   f_3338(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44) -> f_3338(x1, x2, x8, x10, x13, x19, x20, x22, x29)
Removed division, modulo operations, cleaned up constraints. Obtained 8 rules.P rules:
f_2918(v22573:0, v22574:0, v22580:0, sum~v22573:0~times~cons_4~v22580:0, v22583:0, v22590:0, v22591:0, v22593:0, v22603:0) -> f_2918(v22573:0, v22574:0, v22580:0, v22573:0 + 4 * v22580:0, v22591:0, v22590:0, 1 + v22591:0, 1 + v22593:0, v22603:0) :|: v22591:0 < 0 && v22593:0 > 0 && v22583:0 < -1 && sum~v22573:0~times~cons_4~v22580:0 = v22573:0 + 4 * v22580:0
f_2918(v22573:0, v22574:0, v22580:0, sum~v22573:0~times~cons_4~v22580:0, cons_-1, v22590:0, cons_0, v22593:0, v22603:0) -> f_3415(v22573:0, v22574:0, v22580:0, v22573:0 + 4 * v22580:0, 0, v22590:0, v22593:0, v22603:0) :|: TRUE && sum~v22573:0~times~cons_4~v22580:0 = v22573:0 + 4 * v22580:0 && cons_-1 = -1 && cons_0 = 0
f_3446(v33041:0, v33042:0, v33145:0, sum~v33041:0~times~cons_4~v33145:0, v33474:0, v33058:0, v33062:0, v33072:0) -> f_2918(v33041:0, v33042:0, v33145:0, v33041:0 + 4 * v33145:0, v33474:0, v33062:0, 1 + v33474:0, 1 + v33058:0, v33072:0) :|: v33474:0 < 0 && v33058:0 > 0 && sum~v33041:0~times~cons_4~v33145:0 = v33041:0 + 4 * v33145:0
f_3415(v32743:0, v32744:0, v32750:0, sum~v32743:0~times~cons_4~v32750:0, sum~cons_1~v31617:0, v32760:0, v32765:0, v32775:0) -> f_3338(v32743:0, v32744:0, v32750:0, v32743:0 + 4 * v32750:0, v31617:0, v32765:0, 1 + v31617:0, 1 + v32760:0, v32775:0) :|: v31617:0 > -1 && v32760:0 > 0 && sum~v32743:0~times~cons_4~v32750:0 = v32743:0 + 4 * v32750:0 && sum~cons_1~v31617:0 = 1 + v31617:0
f_3446(v33041:0, v33042:0, v33145:0, sum~v33041:0~times~cons_4~v33145:0, v33474:0, v33058:0, v33062:0, v33072:0) -> f_3415(v33041:0, v33042:0, v33145:0, v33041:0 + 4 * v33145:0, v33474:0, v33062:0, v33058:0, v33072:0) :|: v33474:0 > -1 && sum~v33041:0~times~cons_4~v33145:0 = v33041:0 + 4 * v33145:0
f_3415(v32743:0, v32744:0, v32750:0, v32752:0, v32753:0, v32760:0, v32765:0, v32775:0) -> f_3446(v32743:0, v32744:0, 1 + v32750:0, v32743:0 + (4 + 4 * v32750:0), v33474:0, v32765:0, v32760:0, v32775:0) :|: v32744:0 > 2 && v32750:0 > 0 && v32744:0 > 1 + v32750:0 && v32775:0 > 11 && v32743:0 + (4 + 4 * v32750:0) > 8 && v32753:0 < 1
f_3338(v30636:0, v30637:0, v30643:0, sum~v30636:0~times~cons_4~v30643:0, sum~cons_1~v31617:0, v30654:0, v30648:0, v30657:0, v30667:0) -> f_3338(v30636:0, v30637:0, v30643:0, v30636:0 + 4 * v30643:0, v31617:0, v30654:0, 1 + v31617:0, 1 + v30657:0, v30667:0) :|: v30657:0 > 0 && v30648:0 > 1 && v31617:0 > -1 && sum~v30636:0~times~cons_4~v30643:0 = v30636:0 + 4 * v30643:0 && sum~cons_1~v31617:0 = 1 + v31617:0
f_3338(v30636:0, v30637:0, v30643:0, v30645:0, cons_0, v30654:0, cons_1, v30657:0, v30667:0) -> f_3446(v30636:0, v30637:0, 1 + v30643:0, v30636:0 + (4 + 4 * v30643:0), v33474:0, v30654:0, v30657:0, v30667:0) :|: v30637:0 > 2 && v30643:0 > 0 && v30637:0 > 1 + v30643:0 && v30667:0 > 11 && v30636:0 + (4 + 4 * v30643:0) > 8 && cons_0 = 0 && cons_1 = 1

----------------------------------------

(9)
Obligation:
Rules:
f_2918(v22573:0, v22574:0, v22580:0, sum~v22573:0~times~cons_4~v22580:0, v22583:0, v22590:0, v22591:0, v22593:0, v22603:0) -> f_2918(v22573:0, v22574:0, v22580:0, v22573:0 + 4 * v22580:0, v22591:0, v22590:0, 1 + v22591:0, 1 + v22593:0, v22603:0) :|: v22591:0 < 0 && v22593:0 > 0 && v22583:0 < -1 && sum~v22573:0~times~cons_4~v22580:0 = v22573:0 + 4 * v22580:0
f_2918(x, x1, x2, x3, x4, x5, x6, x7, x8) -> f_3415(x, x1, x2, x + 4 * x2, 0, x5, x7, x8) :|: TRUE && x3 = x + 4 * x2 && x4 = -1 && x6 = 0
f_3446(v33041:0, v33042:0, v33145:0, sum~v33041:0~times~cons_4~v33145:0, v33474:0, v33058:0, v33062:0, v33072:0) -> f_2918(v33041:0, v33042:0, v33145:0, v33041:0 + 4 * v33145:0, v33474:0, v33062:0, 1 + v33474:0, 1 + v33058:0, v33072:0) :|: v33474:0 < 0 && v33058:0 > 0 && sum~v33041:0~times~cons_4~v33145:0 = v33041:0 + 4 * v33145:0
f_3415(v32743:0, v32744:0, v32750:0, sum~v32743:0~times~cons_4~v32750:0, sum~cons_1~v31617:0, v32760:0, v32765:0, v32775:0) -> f_3338(v32743:0, v32744:0, v32750:0, v32743:0 + 4 * v32750:0, v31617:0, v32765:0, 1 + v31617:0, 1 + v32760:0, v32775:0) :|: v31617:0 > -1 && v32760:0 > 0 && sum~v32743:0~times~cons_4~v32750:0 = v32743:0 + 4 * v32750:0 && sum~cons_1~v31617:0 = 1 + v31617:0
f_3446(x9, x10, x11, x12, x13, x14, x15, x16) -> f_3415(x9, x10, x11, x9 + 4 * x11, x13, x15, x14, x16) :|: x13 > -1 && x12 = x9 + 4 * x11
f_3415(x17, x18, x19, x20, x21, x22, x23, x24) -> f_3446(x17, x18, 1 + x19, x17 + (4 + 4 * x19), x25, x23, x22, x24) :|: x18 > 2 && x19 > 0 && x18 > 1 + x19 && x24 > 11 && x17 + (4 + 4 * x19) > 8 && x21 < 1
f_3338(x26, x27, x28, x29, x30, x31, x32, x33, x34) -> f_3338(x26, x27, x28, x26 + 4 * x28, x35, x31, 1 + x35, 1 + x33, x34) :|: x33 > 0 && x32 > 1 && x35 > -1 && x29 = x26 + 4 * x28 && x30 = 1 + x35
f_3338(x36, x37, x38, x39, x40, x41, x42, x43, x44) -> f_3446(x36, x37, 1 + x38, x36 + (4 + 4 * x38), x45, x41, x43, x44) :|: x37 > 2 && x38 > 0 && x37 > 1 + x38 && x44 > 11 && x36 + (4 + 4 * x38) > 8 && x40 = 0 && x42 = 1

----------------------------------------

(10) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(11)
Obligation:
Rules:
f_2918(v22573:0:0, v22574:0:0, v22580:0:0, sum~v22573:0:0~times~cons_4~v22580:0:0, v22583:0:0, v22590:0:0, v22591:0:0, v22593:0:0, v22603:0:0) -> f_2918(v22573:0:0, v22574:0:0, v22580:0:0, v22573:0:0 + 4 * v22580:0:0, v22591:0:0, v22590:0:0, 1 + v22591:0:0, 1 + v22593:0:0, v22603:0:0) :|: v22591:0:0 < 0 && v22593:0:0 > 0 && v22583:0:0 < -1 && sum~v22573:0:0~times~cons_4~v22580:0:0 = v22573:0:0 + 4 * v22580:0:0
f_2918(x:0, x1:0, x2:0, sum~x:0~times~cons_4~x2:0, cons_-1, x5:0, cons_0, x7:0, x8:0) -> f_3415(x:0, x1:0, x2:0, x:0 + 4 * x2:0, 0, x5:0, x7:0, x8:0) :|: TRUE && sum~x:0~times~cons_4~x2:0 = x:0 + 4 * x2:0 && cons_-1 = -1 && cons_0 = 0
f_3446(x9:0, x10:0, x11:0, sum~x9:0~times~cons_4~x11:0, x13:0, x14:0, x15:0, x16:0) -> f_3415(x9:0, x10:0, x11:0, x9:0 + 4 * x11:0, x13:0, x15:0, x14:0, x16:0) :|: x13:0 > -1 && sum~x9:0~times~cons_4~x11:0 = x9:0 + 4 * x11:0
f_3338(x, x1, x2, x3, x4, x5, x6, x7, x8) -> f_3446(x, x1, 1 + x2, x + (4 + 4 * x2), x9, x5, x7, x8) :|: x8 > 11 && x + (4 + 4 * x2) > 8 && x1 > 1 + x2 && x2 > 0 && x1 > 2 && x4 = 0 && x6 = 1
f_3446(v33041:0:0, v33042:0:0, v33145:0:0, sum~v33041:0:0~times~cons_4~v33145:0:0, v33474:0:0, v33058:0:0, v33062:0:0, v33072:0:0) -> f_2918(v33041:0:0, v33042:0:0, v33145:0:0, v33041:0:0 + 4 * v33145:0:0, v33474:0:0, v33062:0:0, 1 + v33474:0:0, 1 + v33058:0:0, v33072:0:0) :|: v33474:0:0 < 0 && v33058:0:0 > 0 && sum~v33041:0:0~times~cons_4~v33145:0:0 = v33041:0:0 + 4 * v33145:0:0
f_3415(x17:0, x18:0, x19:0, x20:0, x21:0, x22:0, x23:0, x24:0) -> f_3446(x17:0, x18:0, 1 + x19:0, x17:0 + (4 + 4 * x19:0), x25:0, x23:0, x22:0, x24:0) :|: x17:0 + (4 + 4 * x19:0) > 8 && x21:0 < 1 && x24:0 > 11 && x18:0 > 1 + x19:0 && x19:0 > 0 && x18:0 > 2
f_3415(v32743:0:0, v32744:0:0, v32750:0:0, sum~v32743:0:0~times~cons_4~v32750:0:0, sum~cons_1~v31617:0:0, v32760:0:0, v32765:0:0, v32775:0:0) -> f_3338(v32743:0:0, v32744:0:0, v32750:0:0, v32743:0:0 + 4 * v32750:0:0, v31617:0:0, v32765:0:0, 1 + v31617:0:0, 1 + v32760:0:0, v32775:0:0) :|: v31617:0:0 > -1 && v32760:0:0 > 0 && sum~v32743:0:0~times~cons_4~v32750:0:0 = v32743:0:0 + 4 * v32750:0:0 && sum~cons_1~v31617:0:0 = 1 + v31617:0:0
f_3338(x26:0, x27:0, x28:0, sum~x26:0~times~cons_4~x28:0, sum~cons_1~x35:0, x31:0, x32:0, x33:0, x34:0) -> f_3338(x26:0, x27:0, x28:0, x26:0 + 4 * x28:0, x35:0, x31:0, 1 + x35:0, 1 + x33:0, x34:0) :|: x33:0 > 0 && x32:0 > 1 && x35:0 > -1 && sum~x26:0~times~cons_4~x28:0 = x26:0 + 4 * x28:0 && sum~cons_1~x35:0 = 1 + x35:0

----------------------------------------

(12) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_2918(x, x1, x2, x3, x4, x5, x6, x7, x8)] = -27 + 2*x + 5*x1 + 3*x2 - x3 + x8
[f_3415(x9, x10, x11, x12, x13, x14, x15, x16)] = -27 + 5*x10 - x11 + x16 + x9
[f_3446(x17, x18, x19, x20, x21, x22, x23, x24)] = -27 + 5*x18 - 5*x19 + x20 + x24
[f_3338(x25, x26, x27, x28, x29, x30, x31, x32, x33)] = -27 + x25 + 5*x26 - x27 + x33

The following rules are decreasing:
f_3338(x, x1, x2, x3, x4, x5, x6, x7, x8) -> f_3446(x, x1, 1 + x2, x + (4 + 4 * x2), x9, x5, x7, x8) :|: x8 > 11 && x + (4 + 4 * x2) > 8 && x1 > 1 + x2 && x2 > 0 && x1 > 2 && x4 = 0 && x6 = 1
f_3415(x17:0, x18:0, x19:0, x20:0, x21:0, x22:0, x23:0, x24:0) -> f_3446(x17:0, x18:0, 1 + x19:0, x17:0 + (4 + 4 * x19:0), x25:0, x23:0, x22:0, x24:0) :|: x17:0 + (4 + 4 * x19:0) > 8 && x21:0 < 1 && x24:0 > 11 && x18:0 > 1 + x19:0 && x19:0 > 0 && x18:0 > 2
The following rules are bounded:
f_3338(x, x1, x2, x3, x4, x5, x6, x7, x8) -> f_3446(x, x1, 1 + x2, x + (4 + 4 * x2), x9, x5, x7, x8) :|: x8 > 11 && x + (4 + 4 * x2) > 8 && x1 > 1 + x2 && x2 > 0 && x1 > 2 && x4 = 0 && x6 = 1
f_3415(x17:0, x18:0, x19:0, x20:0, x21:0, x22:0, x23:0, x24:0) -> f_3446(x17:0, x18:0, 1 + x19:0, x17:0 + (4 + 4 * x19:0), x25:0, x23:0, x22:0, x24:0) :|: x17:0 + (4 + 4 * x19:0) > 8 && x21:0 < 1 && x24:0 > 11 && x18:0 > 1 + x19:0 && x19:0 > 0 && x18:0 > 2

----------------------------------------

(13)
Obligation:
Rules:
f_2918(v22573:0:0, v22574:0:0, v22580:0:0, sum~v22573:0:0~times~cons_4~v22580:0:0, v22583:0:0, v22590:0:0, v22591:0:0, v22593:0:0, v22603:0:0) -> f_2918(v22573:0:0, v22574:0:0, v22580:0:0, v22573:0:0 + 4 * v22580:0:0, v22591:0:0, v22590:0:0, 1 + v22591:0:0, 1 + v22593:0:0, v22603:0:0) :|: v22591:0:0 < 0 && v22593:0:0 > 0 && v22583:0:0 < -1 && sum~v22573:0:0~times~cons_4~v22580:0:0 = v22573:0:0 + 4 * v22580:0:0
f_2918(x:0, x1:0, x2:0, sum~x:0~times~cons_4~x2:0, cons_-1, x5:0, cons_0, x7:0, x8:0) -> f_3415(x:0, x1:0, x2:0, x:0 + 4 * x2:0, 0, x5:0, x7:0, x8:0) :|: TRUE && sum~x:0~times~cons_4~x2:0 = x:0 + 4 * x2:0 && cons_-1 = -1 && cons_0 = 0
f_3446(x9:0, x10:0, x11:0, sum~x9:0~times~cons_4~x11:0, x13:0, x14:0, x15:0, x16:0) -> f_3415(x9:0, x10:0, x11:0, x9:0 + 4 * x11:0, x13:0, x15:0, x14:0, x16:0) :|: x13:0 > -1 && sum~x9:0~times~cons_4~x11:0 = x9:0 + 4 * x11:0
f_3446(v33041:0:0, v33042:0:0, v33145:0:0, sum~v33041:0:0~times~cons_4~v33145:0:0, v33474:0:0, v33058:0:0, v33062:0:0, v33072:0:0) -> f_2918(v33041:0:0, v33042:0:0, v33145:0:0, v33041:0:0 + 4 * v33145:0:0, v33474:0:0, v33062:0:0, 1 + v33474:0:0, 1 + v33058:0:0, v33072:0:0) :|: v33474:0:0 < 0 && v33058:0:0 > 0 && sum~v33041:0:0~times~cons_4~v33145:0:0 = v33041:0:0 + 4 * v33145:0:0
f_3415(v32743:0:0, v32744:0:0, v32750:0:0, sum~v32743:0:0~times~cons_4~v32750:0:0, sum~cons_1~v31617:0:0, v32760:0:0, v32765:0:0, v32775:0:0) -> f_3338(v32743:0:0, v32744:0:0, v32750:0:0, v32743:0:0 + 4 * v32750:0:0, v31617:0:0, v32765:0:0, 1 + v31617:0:0, 1 + v32760:0:0, v32775:0:0) :|: v31617:0:0 > -1 && v32760:0:0 > 0 && sum~v32743:0:0~times~cons_4~v32750:0:0 = v32743:0:0 + 4 * v32750:0:0 && sum~cons_1~v31617:0:0 = 1 + v31617:0:0
f_3338(x26:0, x27:0, x28:0, sum~x26:0~times~cons_4~x28:0, sum~cons_1~x35:0, x31:0, x32:0, x33:0, x34:0) -> f_3338(x26:0, x27:0, x28:0, x26:0 + 4 * x28:0, x35:0, x31:0, 1 + x35:0, 1 + x33:0, x34:0) :|: x33:0 > 0 && x32:0 > 1 && x35:0 > -1 && sum~x26:0~times~cons_4~x28:0 = x26:0 + 4 * x28:0 && sum~cons_1~x35:0 = 1 + x35:0

----------------------------------------

(14) TerminationGraphProcessor (EQUIVALENT)
Constructed the termination graph and obtained 2 non-trivial SCCs.

----------------------------------------

(15)
Complex Obligation (AND)

----------------------------------------

(16)
Obligation:
Rules:
f_3338(x26:0, x27:0, x28:0, sum~x26:0~times~cons_4~x28:0, sum~cons_1~x35:0, x31:0, x32:0, x33:0, x34:0) -> f_3338(x26:0, x27:0, x28:0, x26:0 + 4 * x28:0, x35:0, x31:0, 1 + x35:0, 1 + x33:0, x34:0) :|: x33:0 > 0 && x32:0 > 1 && x35:0 > -1 && sum~x26:0~times~cons_4~x28:0 = x26:0 + 4 * x28:0 && sum~cons_1~x35:0 = 1 + x35:0

----------------------------------------

(17) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(18)
Obligation:
Rules:
f_3338(x26:0:0, x27:0:0, x28:0:0, sum~x26:0:0~times~cons_4~x28:0:0, sum~cons_1~x35:0:0, x31:0:0, x32:0:0, x33:0:0, x34:0:0) -> f_3338(x26:0:0, x27:0:0, x28:0:0, x26:0:0 + 4 * x28:0:0, x35:0:0, x31:0:0, 1 + x35:0:0, 1 + x33:0:0, x34:0:0) :|: x33:0:0 > 0 && x32:0:0 > 1 && x35:0:0 > -1 && sum~x26:0:0~times~cons_4~x28:0:0 = x26:0:0 + 4 * x28:0:0 && sum~cons_1~x35:0:0 = 1 + x35:0:0

----------------------------------------

(19) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_3338(x1, x2, x3, x4, x5, x6, x7, x8, x9) -> f_3338(x1, x3, x4, x5, x7, x8)

----------------------------------------

(20)
Obligation:
Rules:
f_3338(x26:0:0, x28:0:0, sum~x26:0:0~times~cons_4~x28:0:0, sum~cons_1~x35:0:0, x32:0:0, x33:0:0) -> f_3338(x26:0:0, x28:0:0, x26:0:0 + 4 * x28:0:0, x35:0:0, 1 + x35:0:0, 1 + x33:0:0) :|: x33:0:0 > 0 && x32:0:0 > 1 && x35:0:0 > -1 && sum~x26:0:0~times~cons_4~x28:0:0 = x26:0:0 + 4 * x28:0:0 && sum~cons_1~x35:0:0 = 1 + x35:0:0

----------------------------------------

(21) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_3338(x, x1, x2, x3, x4, x5)] = x3

The following rules are decreasing:
f_3338(x26:0:0, x28:0:0, sum~x26:0:0~times~cons_4~x28:0:0, sum~cons_1~x35:0:0, x32:0:0, x33:0:0) -> f_3338(x26:0:0, x28:0:0, x26:0:0 + 4 * x28:0:0, x35:0:0, 1 + x35:0:0, 1 + x33:0:0) :|: x33:0:0 > 0 && x32:0:0 > 1 && x35:0:0 > -1 && sum~x26:0:0~times~cons_4~x28:0:0 = x26:0:0 + 4 * x28:0:0 && sum~cons_1~x35:0:0 = 1 + x35:0:0
The following rules are bounded:
f_3338(x26:0:0, x28:0:0, sum~x26:0:0~times~cons_4~x28:0:0, sum~cons_1~x35:0:0, x32:0:0, x33:0:0) -> f_3338(x26:0:0, x28:0:0, x26:0:0 + 4 * x28:0:0, x35:0:0, 1 + x35:0:0, 1 + x33:0:0) :|: x33:0:0 > 0 && x32:0:0 > 1 && x35:0:0 > -1 && sum~x26:0:0~times~cons_4~x28:0:0 = x26:0:0 + 4 * x28:0:0 && sum~cons_1~x35:0:0 = 1 + x35:0:0

----------------------------------------

(22)
YES

----------------------------------------

(23)
Obligation:
Rules:
f_2918(v22573:0:0, v22574:0:0, v22580:0:0, sum~v22573:0:0~times~cons_4~v22580:0:0, v22583:0:0, v22590:0:0, v22591:0:0, v22593:0:0, v22603:0:0) -> f_2918(v22573:0:0, v22574:0:0, v22580:0:0, v22573:0:0 + 4 * v22580:0:0, v22591:0:0, v22590:0:0, 1 + v22591:0:0, 1 + v22593:0:0, v22603:0:0) :|: v22591:0:0 < 0 && v22593:0:0 > 0 && v22583:0:0 < -1 && sum~v22573:0:0~times~cons_4~v22580:0:0 = v22573:0:0 + 4 * v22580:0:0

----------------------------------------

(24) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(25)
Obligation:
Rules:
f_2918(v22573:0:0:0, v22574:0:0:0, v22580:0:0:0, sum~v22573:0:0:0~times~cons_4~v22580:0:0:0, v22583:0:0:0, v22590:0:0:0, v22591:0:0:0, v22593:0:0:0, v22603:0:0:0) -> f_2918(v22573:0:0:0, v22574:0:0:0, v22580:0:0:0, v22573:0:0:0 + 4 * v22580:0:0:0, v22591:0:0:0, v22590:0:0:0, 1 + v22591:0:0:0, 1 + v22593:0:0:0, v22603:0:0:0) :|: v22591:0:0:0 < 0 && v22593:0:0:0 > 0 && v22583:0:0:0 < -1 && sum~v22573:0:0:0~times~cons_4~v22580:0:0:0 = v22573:0:0:0 + 4 * v22580:0:0:0

----------------------------------------

(26) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_2918(x1, x2, x3, x4, x5, x6, x7, x8, x9) -> f_2918(x1, x3, x4, x5, x7, x8)

----------------------------------------

(27)
Obligation:
Rules:
f_2918(v22573:0:0:0, v22580:0:0:0, sum~v22573:0:0:0~times~cons_4~v22580:0:0:0, v22583:0:0:0, v22591:0:0:0, v22593:0:0:0) -> f_2918(v22573:0:0:0, v22580:0:0:0, v22573:0:0:0 + 4 * v22580:0:0:0, v22591:0:0:0, 1 + v22591:0:0:0, 1 + v22593:0:0:0) :|: v22591:0:0:0 < 0 && v22593:0:0:0 > 0 && v22583:0:0:0 < -1 && sum~v22573:0:0:0~times~cons_4~v22580:0:0:0 = v22573:0:0:0 + 4 * v22580:0:0:0

----------------------------------------

(28) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_2918(x, x1, x2, x3, x4, x5)] = -x4

The following rules are decreasing:
f_2918(v22573:0:0:0, v22580:0:0:0, sum~v22573:0:0:0~times~cons_4~v22580:0:0:0, v22583:0:0:0, v22591:0:0:0, v22593:0:0:0) -> f_2918(v22573:0:0:0, v22580:0:0:0, v22573:0:0:0 + 4 * v22580:0:0:0, v22591:0:0:0, 1 + v22591:0:0:0, 1 + v22593:0:0:0) :|: v22591:0:0:0 < 0 && v22593:0:0:0 > 0 && v22583:0:0:0 < -1 && sum~v22573:0:0:0~times~cons_4~v22580:0:0:0 = v22573:0:0:0 + 4 * v22580:0:0:0
The following rules are bounded:
f_2918(v22573:0:0:0, v22580:0:0:0, sum~v22573:0:0:0~times~cons_4~v22580:0:0:0, v22583:0:0:0, v22591:0:0:0, v22593:0:0:0) -> f_2918(v22573:0:0:0, v22580:0:0:0, v22573:0:0:0 + 4 * v22580:0:0:0, v22591:0:0:0, 1 + v22591:0:0:0, 1 + v22593:0:0:0) :|: v22591:0:0:0 < 0 && v22593:0:0:0 > 0 && v22583:0:0:0 < -1 && sum~v22573:0:0:0~times~cons_4~v22580:0:0:0 = v22573:0:0:0 + 4 * v22580:0:0:0

----------------------------------------

(29)
YES

----------------------------------------

(30)
Obligation:
SCC
----------------------------------------

(31) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 59 rulesP rules:
f_2322(v12104, v12105, v12106, v12107, v12108, v12109, v12110, v12111, 1, v12113, v12114, v12115, v12116, 0, v12118, v12119, v12120, v12121, v12127, v12122, v12128, v12123, v12129, v12130, v12131, v12132, v12133, v12134, v12135, v12124, v12125, v12126, 3, 7, 4, 2, 5, 8) -> f_2329(v12104, v12105, v12106, v12107, v12108, v12109, v12110, v12111, 1, v12113, v12114, v12115, v12116, 0, v12118, v12119, v12120, v12121, v12127, v12122, v12128, v12123, v12129, v12130, v12131, v12132, v12133, v12134, v12135, v12124, v12125, v12126, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2329(v12104, v12105, v12106, v12107, v12108, v12109, v12110, v12111, 1, v12113, v12114, v12115, v12116, 0, v12118, v12119, v12120, v12121, v12127, v12122, v12128, v12123, v12129, v12130, v12131, v12132, v12133, v12134, v12135, v12124, v12125, v12126, 3, 7, 4, 2, 5, 8) -> f_2336(v12104, v12105, v12106, v12107, v12108, v12109, v12110, v12111, 1, v12113, v12114, v12115, v12116, 0, v12118, v12119, v12120, v12121, v12127, v12122, v12128, v12123, v12129, v12130, v12131, v12132, v12133, v12134, v12135, v12124, v12125, v12126, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2336(v12104, v12105, v12106, v12107, v12108, v12109, v12110, v12111, 1, v12113, v12114, v12115, v12116, 0, v12118, v12119, v12120, v12121, v12127, v12122, v12128, v12123, v12129, v12130, v12131, v12132, v12133, v12134, v12135, v12124, v12125, v12126, 3, 7, 4, 2, 5, 8) -> f_2343(v12104, v12105, v12106, v12107, v12108, v12109, v12110, v12111, 1, v12113, v12114, v12115, v12116, 0, v12118, v12119, v12120, v12121, v12127, v12122, v12128, v12123, v12129, v12130, v12131, v12132, v12133, v12134, v12135, v12124, v12125, v12126, 3, 7, 4, 2, 5, 8) :|: v12113 = v12104 + 4 * v12111
f_2343(v12104, v12105, v12106, v12107, v12108, v12109, v12110, v12111, 1, v12113, v12114, v12115, v12116, 0, v12118, v12119, v12120, v12121, v12127, v12122, v12128, v12123, v12129, v12130, v12131, v12132, v12133, v12134, v12135, v12124, v12125, v12126, 3, 7, 4, 2, 5, 8) -> f_2350(v12104, v12105, v12106, v12107, v12108, v12109, v12110, v12111, 1, v12113, v12118, v12115, v12116, 0, v12114, v12119, v12120, v12121, v12127, v12122, v12128, v12123, v12129, v12130, v12131, v12132, v12133, v12134, v12135, v12124, v12125, v12126, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2350(v12104, v12105, v12106, v12107, v12108, v12109, v12110, v12111, 1, v12113, v12118, v12115, v12116, 0, v12114, v12119, v12120, v12121, v12127, v12122, v12128, v12123, v12129, v12130, v12131, v12132, v12133, v12134, v12135, v12124, v12125, v12126, 3, 7, 4, 2, 5, 8) -> f_2358(v12104, v12105, v12106, v12107, v12108, v12109, v12110, v12111, 1, v12113, v12118, v12115, v12116, 0, v12114, v12119, v12120, v12121, v12127, v12122, v12128, v12123, v12129, v12130, v12131, v12132, v12133, v12134, v12135, v12124, v12125, v12126, 3, 7, 4, 2, 5, 8) :|: v12118 < 0 && 2 + v12114 <= 0
f_2350(v12104, v12105, v12106, v12107, v12108, v12109, v12110, v12111, 1, v12113, v12118, v12115, v12116, 0, v12114, v12119, v12120, v12121, v12127, v12122, v12128, v12123, v12129, v12130, v12131, v12132, v12133, v12134, v12135, v12124, v12125, v12126, 3, 7, 4, 2, 5, 8) -> f_2359(v12104, v12105, v12106, v12107, v12108, v12109, v12110, v12111, 1, v12113, 0, v12115, v12116, -1, v12119, v12120, v12121, v12127, v12122, v12128, v12123, v12129, v12130, v12131, v12132, v12133, v12134, v12135, v12124, v12125, v12126, 3, 7, 4, 2, 5, 8) :|: 0 <= v12118 && 1 + v12114 = 0 && v12118 = 0 && 0 = 0
f_2358(v12104, v12105, v12106, v12107, v12108, v12109, v12110, v12111, 1, v12113, v12118, v12115, v12116, 0, v12114, v12119, v12120, v12121, v12127, v12122, v12128, v12123, v12129, v12130, v12131, v12132, v12133, v12134, v12135, v12124, v12125, v12126, 3, 7, 4, 2, 5, 8) -> f_2369(v12104, v12105, v12106, v12107, v12108, v12109, v12110, v12111, 1, v12113, v12118, v12115, v12116, 0, v12114, v12119, v12120, v12121, v12127, v12122, v12128, v12123, v12129, v12130, v12131, v12132, v12133, v12134, v12135, v12124, v12125, v12126, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2369(v12104, v12105, v12106, v12107, v12108, v12109, v12110, v12111, 1, v12113, v12118, v12115, v12116, 0, v12114, v12119, v12120, v12121, v12127, v12122, v12128, v12123, v12129, v12130, v12131, v12132, v12133, v12134, v12135, v12124, v12125, v12126, 3, 7, 4, 2, 5, 8) -> f_2381(v12104, v12105, v12106, v12107, v12108, v12109, v12110, v12111, 1, v12113, v12118, v12115, v12116, 0, v12114, v12119, v12120, v12121, v12127, v12122, v12128, v12123, v12129, v12130, v12131, v12132, v12133, v12134, v12135, v12124, v12125, v12126, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2381(v12104, v12105, v12106, v12107, v12108, v12109, v12110, v12111, 1, v12113, v12118, v12115, v12116, 0, v12114, v12119, v12120, v12121, v12127, v12122, v12128, v12123, v12129, v12130, v12131, v12132, v12133, v12134, v12135, v12124, v12125, v12126, 3, 7, 4, 2, 5, 8) -> f_2382(v12104, v12105, v12106, v12107, v12108, v12109, v12110, v12111, 1, v12113, v12118, v12111, v12113, v12114, v12118, v12119, v12120, v12115, v12116, 0, v12121, v12127, v12122, v12128, v12123, v12129, v12130, v12131, v12132, v12133, v12134, v12135, v12683, v12684, v12685, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2382(v12660, v12661, v12662, v12663, v12664, v12665, v12666, v12667, 1, v12669, v12670, v12671, v12672, v12673, v12674, v12675, v12676, v12677, v12678, 0, v12680, v12686, v12681, v12687, v12682, v12688, v12689, v12690, v12691, v12692, v12693, v12694, v12683, v12684, v12685, 3, 7, 4, 2, 5, 8) -> f_2393(v12660, v12661, v12662, v12663, v12664, v12665, v12666, v12667, 1, v12669, v12670, v12671, v12672, v12673, v12674, v12675, v12676, v12677, v12678, 0, v12680, v12686, v12681, v12687, v12682, v12688, v12689, v12690, v12691, v12692, v12693, v12694, v12683, v12684, v12685, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2393(v12660, v12661, v12662, v12663, v12664, v12665, v12666, v12667, 1, v12669, v12670, v12671, v12672, v12673, v12674, v12675, v12676, v12677, v12678, 0, v12680, v12686, v12681, v12687, v12682, v12688, v12689, v12690, v12691, v12692, v12693, v12694, v12683, v12684, v12685, 3, 7, 4, 2, 5, 8) -> f_2404(v12660, v12661, v12662, v12663, v12664, v12665, v12666, v12667, 1, v12669, v12670, v12671, v12672, v12673, v12674, v12675, v12676, v12677, v12678, 0, v12680, v12686, v12681, v12687, v12682, v12688, v12689, v12690, v12691, v12692, v12693, v12694, v12683, v12684, v12685, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2404(v12660, v12661, v12662, v12663, v12664, v12665, v12666, v12667, 1, v12669, v12670, v12671, v12672, v12673, v12674, v12675, v12676, v12677, v12678, 0, v12680, v12686, v12681, v12687, v12682, v12688, v12689, v12690, v12691, v12692, v12693, v12694, v12683, v12684, v12685, 3, 7, 4, 2, 5, 8) -> f_2414(v12660, v12661, v12662, v12663, v12664, v12665, v12666, v12667, 1, v12669, v12670, v12672, v12673, v12674, v12675, v12676, v12677, v12678, 0, v12680, v12686, v12681, v12687, v12682, v12688, v12689, v12690, v12691, v12692, v12693, v12694, v12683, v12684, v12685, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2414(v12660, v12661, v12662, v12663, v12664, v12665, v12666, v12667, 1, v12669, v12670, v12672, v12673, v12674, v12675, v12676, v12677, v12678, 0, v12680, v12686, v12681, v12687, v12682, v12688, v12689, v12690, v12691, v12692, v12693, v12694, v12683, v12684, v12685, 3, 7, 4, 2, 5, 8) -> f_2422(v12660, v12661, v12662, v12663, v12664, v12665, v12666, v12667, 1, v12669, v12670, v12673, v12674, v12675, v12676, v12677, v12678, 0, v12680, v12686, v12681, v12687, v12682, v12688, v12689, v12690, v12691, v12692, v12693, v12694, v12672, v12683, v12684, v12685, 3, 7, 4, 2, 5, 8) :|: v12669 = v12660 + 4 * v12667
f_2422(v12660, v12661, v12662, v12663, v12664, v12665, v12666, v12667, 1, v12669, v12670, v12673, v12674, v12675, v12676, v12677, v12678, 0, v12680, v12686, v12681, v12687, v12682, v12688, v12689, v12690, v12691, v12692, v12693, v12694, v12672, v12683, v12684, v12685, 3, 7, 4, 2, 5, 8) -> f_2430(v12660, v12661, v12662, v12663, v12664, v12665, v12666, v12667, 1, v12669, v12670, v12674, v12675, v12676, v12677, v12678, 0, v12680, v12686, v12681, v12687, v12682, v12688, v12689, v12690, v12691, v12692, v12693, v12694, v12672, v12683, v12684, v12685, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2430(v12660, v12661, v12662, v12663, v12664, v12665, v12666, v12667, 1, v12669, v12670, v12674, v12675, v12676, v12677, v12678, 0, v12680, v12686, v12681, v12687, v12682, v12688, v12689, v12690, v12691, v12692, v12693, v12694, v12672, v12683, v12684, v12685, 3, 7, 4, 2, 5, 8) -> f_2438(v12660, v12661, v12662, v12663, v12664, v12665, v12666, v12667, 1, v12669, v12670, v13735, v12675, v12676, v12677, v12678, 0, v12680, v12686, v12681, v12687, v12682, v12688, v12689, v12690, v12691, v12692, v12693, v12694, v12672, v12674, v12683, v12684, v12685, 3, 7, 4, 2, 5, 8) :|: v13735 = 1 + v12670 && v13735 <= 0
f_2438(v12660, v12661, v12662, v12663, v12664, v12665, v12666, v12667, 1, v12669, v12670, v13735, v12675, v12676, v12677, v12678, 0, v12680, v12686, v12681, v12687, v12682, v12688, v12689, v12690, v12691, v12692, v12693, v12694, v12672, v12674, v12683, v12684, v12685, 3, 7, 4, 2, 5, 8) -> f_2446(v12660, v12661, v12662, v12663, v12664, v12665, v12666, v12667, 1, v12669, v12670, v13735, v12675, v12676, v12677, v12678, 0, v12680, v12686, v12681, v12687, v12682, v12688, v12689, v12690, v12691, v12692, v12693, v12694, v12683, v12684, v12685, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2446(v12660, v12661, v12662, v12663, v12664, v12665, v12666, v12667, 1, v12669, v12670, v13735, v12675, v12676, v12677, v12678, 0, v12680, v12686, v12681, v12687, v12682, v12688, v12689, v12690, v12691, v12692, v12693, v12694, v12683, v12684, v12685, 3, 7, 4, 2, 5, 8) -> f_2459(v12660, v12661, v12662, v12663, v12664, v12665, v12666, v12667, 1, v12669, v12670, v13735, v12676, v12677, v12678, 0, v12680, v12686, v12681, v12687, v12682, v12688, v12689, v12690, v12691, v12692, v12693, v12694, v12683, v12684, v12685, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2459(v12660, v12661, v12662, v12663, v12664, v12665, v12666, v12667, 1, v12669, v12670, v13735, v12676, v12677, v12678, 0, v12680, v12686, v12681, v12687, v12682, v12688, v12689, v12690, v12691, v12692, v12693, v12694, v12683, v12684, v12685, 3, 7, 4, 2, 5, 8) -> f_2472(v12660, v12661, v12662, v12663, v12664, v12665, v12666, v12667, 1, v12669, v12670, v13735, v12676, v13839, v12677, v12678, 0, v12680, v12686, v12681, v12687, v12682, v12688, v12689, v12690, v12691, v12692, v12693, v12694, v12683, v12684, v12685, 3, 7, 4, 2, 5, 8) :|: v13839 = 1 + v12676 && 2 <= v13839
f_2472(v12660, v12661, v12662, v12663, v12664, v12665, v12666, v12667, 1, v12669, v12670, v13735, v12676, v13839, v12677, v12678, 0, v12680, v12686, v12681, v12687, v12682, v12688, v12689, v12690, v12691, v12692, v12693, v12694, v12683, v12684, v12685, 3, 7, 4, 2, 5, 8) -> f_2485(v12660, v12661, v12662, v12663, v12664, v12665, v12666, v12667, 1, v12669, v12670, v13735, v12676, v13839, v12677, v12678, 0, v12680, v12686, v12681, v12687, v12682, v12688, v12689, v12690, v12691, v12692, v12693, v12694, v12683, v12684, v12685, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2485(v12660, v12661, v12662, v12663, v12664, v12665, v12666, v12667, 1, v12669, v12670, v13735, v12676, v13839, v12677, v12678, 0, v12680, v12686, v12681, v12687, v12682, v12688, v12689, v12690, v12691, v12692, v12693, v12694, v12683, v12684, v12685, 3, 7, 4, 2, 5, 8) -> f_2497(v12660, v12661, v12662, v12663, v12664, v12665, v12666, v12667, 1, v12669, v12670, v13735, v12676, v13839, v12677, v12678, 0, v12680, v12686, v12681, v12687, v12682, v12688, v12689, v12690, v12691, v12692, v12693, v12694, v12683, v12684, v12685, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2497(v12660, v12661, v12662, v12663, v12664, v12665, v12666, v12667, 1, v12669, v12670, v13735, v12676, v13839, v12677, v12678, 0, v12680, v12686, v12681, v12687, v12682, v12688, v12689, v12690, v12691, v12692, v12693, v12694, v12683, v12684, v12685, 3, 7, 4, 2, 5, 8) -> f_2315(v12660, v12661, v12662, v12663, v12664, v12665, v12666, v12667, 1, v12669, v12670, v12677, v12678, 0, v13735, v12676, v13839, v12680, v12686, v12681, v12687, v12682, v12688, v12689, v12690, v12691, v12692, v12693, v12694, v12124, v12125, v12126, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2315(v12104, v12105, v12106, v12107, v12108, v12109, v12110, v12111, 1, v12113, v12114, v12115, v12116, 0, v12118, v12119, v12120, v12121, v12127, v12122, v12128, v12123, v12129, v12130, v12131, v12132, v12133, v12134, v12135, v12124, v12125, v12126, 3, 7, 4, 2, 5, 8) -> f_2322(v12104, v12105, v12106, v12107, v12108, v12109, v12110, v12111, 1, v12113, v12114, v12115, v12116, 0, v12118, v12119, v12120, v12121, v12127, v12122, v12128, v12123, v12129, v12130, v12131, v12132, v12133, v12134, v12135, v12124, v12125, v12126, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2359(v12104, v12105, v12106, v12107, v12108, v12109, v12110, v12111, 1, v12113, 0, v12115, v12116, -1, v12119, v12120, v12121, v12127, v12122, v12128, v12123, v12129, v12130, v12131, v12132, v12133, v12134, v12135, v12124, v12125, v12126, 3, 7, 4, 2, 5, 8) -> f_2370(v12104, v12105, v12106, v12107, v12108, v12109, v12110, v12111, 1, v12113, 0, v12115, v12116, -1, v12119, v12120, v12121, v12127, v12122, v12128, v12123, v12129, v12130, v12131, v12132, v12133, v12134, v12135, v12124, v12125, v12126, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2370(v12104, v12105, v12106, v12107, v12108, v12109, v12110, v12111, 1, v12113, 0, v12115, v12116, -1, v12119, v12120, v12121, v12127, v12122, v12128, v12123, v12129, v12130, v12131, v12132, v12133, v12134, v12135, v12124, v12125, v12126, 3, 7, 4, 2, 5, 8) -> f_2383(v12104, v12105, v12106, v12107, v12108, v12109, v12110, v12111, 1, v12113, 0, v12115, v12116, -1, v12119, v12120, v12121, v12127, v12122, v12128, v12123, v12129, v12130, v12131, v12132, v12133, v12134, v12135, v12124, v12125, v12126, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2383(v12104, v12105, v12106, v12107, v12108, v12109, v12110, v12111, 1, v12113, 0, v12115, v12116, -1, v12119, v12120, v12121, v12127, v12122, v12128, v12123, v12129, v12130, v12131, v12132, v12133, v12134, v12135, v12124, v12125, v12126, 3, 7, 4, 2, 5, 8) -> f_2622(v12104, v12105, v12106, v12107, v12108, v12109, v12110, v12111, 1, v12113, 0, 0, v12115, v12116, v12111, v12113, -1, v12119, v12120, v12121, v12127, v12122, v12128, v12123, v12129, v12130, v12131, v12132, v12133, v12134, v12135, v17243, v17244, v17245, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2622(v17221, v17222, v17223, v17224, v17225, v17226, v17227, v17228, 1, v17230, v17231, 0, v17233, v17234, v17235, v17236, -1, v17238, v17239, v17240, v17246, v17241, v17247, v17242, v17248, v17249, v17250, v17251, v17252, v17253, v17254, v17243, v17244, v17245, 3, 7, 4, 2, 5, 8) -> f_2629(v17221, v17222, v17223, v17224, v17225, v17226, v17227, v17228, 1, v17230, v17231, 0, v17233, v17234, v17235, v17236, -1, v17238, v17239, v17240, v17246, v17241, v17247, v17242, v17248, v17249, v17250, v17251, v17252, v17253, v17254, v17243, v17244, v17245, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2629(v17221, v17222, v17223, v17224, v17225, v17226, v17227, v17228, 1, v17230, v17231, 0, v17233, v17234, v17235, v17236, -1, v17238, v17239, v17240, v17246, v17241, v17247, v17242, v17248, v17249, v17250, v17251, v17252, v17253, v17254, v17243, v17244, v17245, 3, 7, 4, 2, 5, 8) -> f_2633(v17221, v17222, v17223, v17224, v17225, v17226, v17227, v17228, 1, v17230, v17231, 0, v17233, v17234, v17235, v17236, -1, v17238, v17239, v17240, v17246, v17241, v17247, v17242, v17248, v17249, v17250, v17251, v17252, v17253, v17254, v17243, v17244, v17245, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2633(v17221, v17222, v17223, v17224, v17225, v17226, v17227, v17228, 1, v17230, v17231, 0, v17233, v17234, v17235, v17236, -1, v17238, v17239, v17240, v17246, v17241, v17247, v17242, v17248, v17249, v17250, v17251, v17252, v17253, v17254, v17243, v17244, v17245, 3, 7, 4, 2, 5, 8) -> f_2637(v17221, v17222, v17223, v17224, v17225, v17226, v17227, v17228, 1, v17230, v17231, 0, v17233, v17234, v17235, v17236, -1, v17238, v17239, v17240, v17246, v17241, v17247, v17242, v17248, v17249, v17250, v17251, v17252, v17253, v17254, v17243, v17244, v17245, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2637(v17221, v17222, v17223, v17224, v17225, v17226, v17227, v17228, 1, v17230, v17231, 0, v17233, v17234, v17235, v17236, -1, v17238, v17239, v17240, v17246, v17241, v17247, v17242, v17248, v17249, v17250, v17251, v17252, v17253, v17254, v17243, v17244, v17245, 3, 7, 4, 2, 5, 8) -> f_2641(v17221, v17222, v17223, v17224, v17225, v17226, v17227, v17228, 1, v17230, v17231, 0, v17234, v17233, v17235, v17236, -1, v17238, v17239, v17240, v17246, v17241, v17247, v17242, v17248, v17249, v17250, v17251, v17252, v17253, v17254, v17243, v17244, v17245, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2641(v17221, v17222, v17223, v17224, v17225, v17226, v17227, v17228, 1, v17230, v17231, 0, v17234, v17233, v17235, v17236, -1, v17238, v17239, v17240, v17246, v17241, v17247, v17242, v17248, v17249, v17250, v17251, v17252, v17253, v17254, v17243, v17244, v17245, 3, 7, 4, 2, 5, 8) -> f_2645(v17221, v17222, v17223, v17224, v17225, v17226, v17227, v17228, 1, v17230, v17231, 0, v17233, v17235, v17236, -1, v17238, v17239, v17240, v17246, v17241, v17247, v17242, v17248, v17249, v17250, v17251, v17252, v17253, v17254, v17234, v17243, v17244, v17245, 3, 7, 4, 2, 5, 8) :|: v17230 = v17221 + 4 * v17228
f_2645(v17221, v17222, v17223, v17224, v17225, v17226, v17227, v17228, 1, v17230, v17231, 0, v17233, v17235, v17236, -1, v17238, v17239, v17240, v17246, v17241, v17247, v17242, v17248, v17249, v17250, v17251, v17252, v17253, v17254, v17234, v17243, v17244, v17245, 3, 7, 4, 2, 5, 8) -> f_2649(v17221, v17222, v17223, v17224, v17225, v17226, v17227, v17228, 1, v17230, v17231, 0, v17233, v17235, v17236, -1, v17238, v17239, v17240, v17246, v17241, v17247, v17242, v17248, v17249, v17250, v17251, v17252, v17253, v17254, v17234, v17243, v17244, v17245, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2649(v17221, v17222, v17223, v17224, v17225, v17226, v17227, v17228, 1, v17230, v17231, 0, v17233, v17235, v17236, -1, v17238, v17239, v17240, v17246, v17241, v17247, v17242, v17248, v17249, v17250, v17251, v17252, v17253, v17254, v17234, v17243, v17244, v17245, 3, 7, 4, 2, 5, 8) -> f_2654(v17221, v17222, v17223, v17224, v17225, v17226, v17227, v17228, 1, v17230, 0, v17233, v17235, v17236, -1, v17238, v17239, v17240, v17246, v17241, v17247, v17242, v17248, v17249, v17250, v17251, v17252, v17253, v17254, v17234, v17243, v17244, v17245, 3, 7, 4, 2, 5, 8) :|: v17231 <= 0
f_2654(v17221, v17222, v17223, v17224, v17225, v17226, v17227, v17228, 1, v17230, 0, v17233, v17235, v17236, -1, v17238, v17239, v17240, v17246, v17241, v17247, v17242, v17248, v17249, v17250, v17251, v17252, v17253, v17254, v17234, v17243, v17244, v17245, 3, 7, 4, 2, 5, 8) -> f_2659(v17221, v17222, v17223, v17224, v17225, v17226, v17227, v17228, 1, v17230, 0, v17233, v17235, v17236, -1, v17238, v17239, v17240, v17246, v17241, v17247, v17242, v17248, v17249, v17250, v17251, v17252, v17253, v17254, v17234, v17243, v17244, v17245, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2659(v17221, v17222, v17223, v17224, v17225, v17226, v17227, v17228, 1, v17230, 0, v17233, v17235, v17236, -1, v17238, v17239, v17240, v17246, v17241, v17247, v17242, v17248, v17249, v17250, v17251, v17252, v17253, v17254, v17234, v17243, v17244, v17245, 3, 7, 4, 2, 5, 8) -> f_2665(v17221, v17222, v17223, v17224, v17225, v17226, v17227, v17228, 1, v17230, 0, v17233, v17235, v17236, -1, v17238, v17239, v17240, v17246, v17241, v17247, v17242, v17248, v17249, v17250, v17251, v17252, v17253, v17254, v17234, v17243, v17244, v17245, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2665(v17221, v17222, v17223, v17224, v17225, v17226, v17227, v17228, 1, v17230, 0, v17233, v17235, v17236, -1, v17238, v17239, v17240, v17246, v17241, v17247, v17242, v17248, v17249, v17250, v17251, v17252, v17253, v17254, v17234, v17243, v17244, v17245, 3, 7, 4, 2, 5, 8) -> f_2671(v17221, v17222, v17223, v17224, v17225, v17226, v17227, v17228, 1, v17230, 0, v17233, v17235, v17236, -1, v17238, v17239, v17240, v17246, v17241, v17247, v17242, v17248, v17249, v17250, v17251, v17252, v17253, v17254, v17234, v17243, v17244, v17245, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2671(v17221, v17222, v17223, v17224, v17225, v17226, v17227, v17228, 1, v17230, 0, v17233, v17235, v17236, -1, v17238, v17239, v17240, v17246, v17241, v17247, v17242, v17248, v17249, v17250, v17251, v17252, v17253, v17254, v17234, v17243, v17244, v17245, 3, 7, 4, 2, 5, 8) -> f_2677(v17221, v17222, v17223, v17224, v17225, v17226, v17227, v17228, 1, v17230, 0, v17235, v17236, -1, v17238, v17239, v17240, v17246, v17241, v17247, v17242, v17248, v17249, v17250, v17251, v17252, v17253, v17254, v17234, v17243, v17244, v17245, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2677(v17221, v17222, v17223, v17224, v17225, v17226, v17227, v17228, 1, v17230, 0, v17235, v17236, -1, v17238, v17239, v17240, v17246, v17241, v17247, v17242, v17248, v17249, v17250, v17251, v17252, v17253, v17254, v17234, v17243, v17244, v17245, 3, 7, 4, 2, 5, 8) -> f_2683(v17221, v17222, v17223, v17224, v17225, v17226, v17227, v17228, 1, v17230, 0, v18303, v17235, v17236, -1, v17238, v17239, v17240, v17246, v17241, v17247, v17242, v17248, v17249, v17250, v17251, v17252, v17253, v17254, v17234, v17243, v17244, v17245, 3, 7, 4, 2, 5, 8) :|: v18303 = 1 + v17228 && 2 <= v18303
f_2683(v17221, v17222, v17223, v17224, v17225, v17226, v17227, v17228, 1, v17230, 0, v18303, v17235, v17236, -1, v17238, v17239, v17240, v17246, v17241, v17247, v17242, v17248, v17249, v17250, v17251, v17252, v17253, v17254, v17234, v17243, v17244, v17245, 3, 7, 4, 2, 5, 8) -> f_2689(v17221, v17222, v17223, v17224, v17225, v17226, v17227, v17228, 1, v17230, 0, v18303, v17235, v17236, -1, v17238, v17239, v17240, v17246, v17241, v17247, v17242, v17248, v17249, v17250, v17251, v17252, v17253, v17254, v17234, v17243, v17244, v17245, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2689(v17221, v17222, v17223, v17224, v17225, v17226, v17227, v17228, 1, v17230, 0, v18303, v17235, v17236, -1, v17238, v17239, v17240, v17246, v17241, v17247, v17242, v17248, v17249, v17250, v17251, v17252, v17253, v17254, v17234, v17243, v17244, v17245, 3, 7, 4, 2, 5, 8) -> f_2693(v17221, v17222, v17223, v17224, v17225, v17226, v17227, v17228, 1, v17230, 0, v18303, v17235, v17236, -1, v17238, v17239, v17240, v17246, v17241, v17247, v17242, v17248, v17249, v17250, v17251, v17252, v17253, v17254, v17234, v17243, v17244, v17245, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2693(v17221, v17222, v17223, v17224, v17225, v17226, v17227, v17228, 1, v17230, 0, v18303, v17235, v17236, -1, v17238, v17239, v17240, v17246, v17241, v17247, v17242, v17248, v17249, v17250, v17251, v17252, v17253, v17254, v17234, v17243, v17244, v17245, 3, 7, 4, 2, 5, 8) -> f_2697(v17221, v17222, v17223, v17224, v17225, v17226, v17227, v18303, 1, v17228, v17230, 0, v17235, v17236, -1, v17238, v17239, v17240, v17246, v17241, v17247, v17242, v17248, v17249, v17250, v17251, v17252, v17253, v17254, v17234, v17243, v17244, v17245, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2697(v17221, v17222, v17223, v17224, v17225, v17226, v17227, v18303, 1, v17228, v17230, 0, v17235, v17236, -1, v17238, v17239, v17240, v17246, v17241, v17247, v17242, v17248, v17249, v17250, v17251, v17252, v17253, v17254, v17234, v17243, v17244, v17245, 3, 7, 4, 2, 5, 8) -> f_2701(v17221, v17222, v17223, v17224, v17225, v17226, v17227, v18303, 1, v17228, v17230, 0, v17235, v17236, -1, v17238, v17239, v17240, v17246, v17241, v17247, v17242, v17248, v17249, v17250, v17251, v17252, v17253, v17254, v17234, v17243, v17244, v17245, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2701(v17221, v17222, v17223, v17224, v17225, v17226, v17227, v18303, 1, v17228, v17230, 0, v17235, v17236, -1, v17238, v17239, v17240, v17246, v17241, v17247, v17242, v17248, v17249, v17250, v17251, v17252, v17253, v17254, v17234, v17243, v17244, v17245, 3, 7, 4, 2, 5, 8) -> f_2705(v17221, v17222, v17223, v17224, v17225, v17226, v17227, v18303, 1, v17228, v17230, 0, v17235, v17236, -1, v17238, v17239, v17240, v17246, v17241, v17247, v17242, v17248, v17249, v17250, v17251, v17252, v17253, v17254, v17234, v17243, v17244, v17245, 3, 7, 4, 5, 8, 12, 2) :|: v18303 < v17222 && 3 <= v17222 && 12 <= v17249
f_2705(v17221, v17222, v17223, v17224, v17225, v17226, v17227, v18303, 1, v17228, v17230, 0, v17235, v17236, -1, v17238, v17239, v17240, v17246, v17241, v17247, v17242, v17248, v17249, v17250, v17251, v17252, v17253, v17254, v17234, v17243, v17244, v17245, 3, 7, 4, 5, 8, 12, 2) -> f_2711(v17221, v17222, v17223, v17224, v17225, v17226, v17227, v18303, 1, v17228, v17230, 0, v17235, v17236, -1, v17238, v17239, v17240, v17246, v17241, v17247, v17242, v17248, v17249, v17250, v17251, v17252, v17253, v17254, v17234, v17243, v17244, v17245, 3, 7, 4, 5, 8, 12, 2) :|: 0 = 0
f_2711(v17221, v17222, v17223, v17224, v17225, v17226, v17227, v18303, 1, v17228, v17230, 0, v17235, v17236, -1, v17238, v17239, v17240, v17246, v17241, v17247, v17242, v17248, v17249, v17250, v17251, v17252, v17253, v17254, v17234, v17243, v17244, v17245, 3, 7, 4, 5, 8, 12, 2) -> f_2718(v17221, v17222, v17223, v17224, v17225, v17226, v17227, v18303, 1, v17228, v17230, 0, v17235, v17236, -1, v17238, v17239, v17240, v17246, v17241, v17247, v17242, v17248, v17249, v17250, v17251, v17252, v17253, v17254, v17234, v17243, v17244, v17245, 3, 7, 4, 5, 8, 12, 2) :|: TRUE
f_2718(v17221, v17222, v17223, v17224, v17225, v17226, v17227, v18303, 1, v17228, v17230, 0, v17235, v17236, -1, v17238, v17239, v17240, v17246, v17241, v17247, v17242, v17248, v17249, v17250, v17251, v17252, v17253, v17254, v17234, v17243, v17244, v17245, 3, 7, 4, 5, 8, 12, 2) -> f_2725(v17221, v17222, v17223, v17224, v17225, v17226, v17227, v18303, 1, v17228, v17230, 0, v17235, v17236, -1, v17238, v17239, v17240, v17246, v17241, v17247, v17242, v17248, v17249, v17250, v17251, v17252, v17253, v17254, v17234, v17243, v17244, v17245, 3, 7, 4, 5, 8, 12, 2) :|: TRUE
f_2725(v17221, v17222, v17223, v17224, v17225, v17226, v17227, v18303, 1, v17228, v17230, 0, v17235, v17236, -1, v17238, v17239, v17240, v17246, v17241, v17247, v17242, v17248, v17249, v17250, v17251, v17252, v17253, v17254, v17234, v17243, v17244, v17245, 3, 7, 4, 5, 8, 12, 2) -> f_2577(v17221, v17222, v17223, v17224, v17225, v17226, v17227, v18303, 1, v17228, v17230, 0, v17235, v17236, -1, v17238, v17239, v17240, v17246, v17241, v17247, v17242, v17248, v17249, v17250, v17251, v17252, v17253, v17254, v16637, v16638, v16639, 3, 7, 4, 2, 8) :|: TRUE
f_2577(v16617, v16618, v16619, v16620, v16621, v16622, v16623, v16624, 1, v16626, v16627, 0, v16629, v16630, -1, v16632, v16633, v16634, v16640, v16635, v16641, v16636, v16642, v16643, v16644, v16645, v16646, v16647, v16648, v16637, v16638, v16639, 3, 7, 4, 2, 8) -> f_2585(v16617, v16618, v16619, v16620, v16621, v16622, v16623, v16624, 1, v16626, v16627, 0, v16629, v16630, -1, v16632, v16633, v16634, v16640, v16635, v16641, v16636, v16642, v16643, v16644, v16645, v16646, v16647, v16648, v16637, v16638, v16639, 3, 7, 4, 2, 8) :|: 0 = 0
f_2585(v16617, v16618, v16619, v16620, v16621, v16622, v16623, v16624, 1, v16626, v16627, 0, v16629, v16630, -1, v16632, v16633, v16634, v16640, v16635, v16641, v16636, v16642, v16643, v16644, v16645, v16646, v16647, v16648, v16637, v16638, v16639, 3, 7, 4, 2, 8) -> f_2591(v16617, v16618, v16619, v16620, v16621, v16622, v16623, v16624, 1, v16626, v16627, 0, v16629, v16630, -1, v16632, v16633, v16634, v16640, v16635, v16641, v16636, v16642, v16643, v16644, v16645, v16646, v16647, v16648, v16637, v16638, v16639, 3, 7, 4, 2, 8) :|: 0 = 0
f_2591(v16617, v16618, v16619, v16620, v16621, v16622, v16623, v16624, 1, v16626, v16627, 0, v16629, v16630, -1, v16632, v16633, v16634, v16640, v16635, v16641, v16636, v16642, v16643, v16644, v16645, v16646, v16647, v16648, v16637, v16638, v16639, 3, 7, 4, 2, 8) -> f_2595(v16617, v16618, v16619, v16620, v16621, v16622, v16623, v16624, 1, v16627, 0, v16629, v16630, -1, v16632, v16633, v16626, v16634, v16640, v16635, v16641, v16636, v16642, v16643, v16644, v16645, v16646, v16647, v16648, v16637, v16638, v16639, 3, 7, 4, 2, 8) :|: 0 = 0
f_2595(v16617, v16618, v16619, v16620, v16621, v16622, v16623, v16624, 1, v16627, 0, v16629, v16630, -1, v16632, v16633, v16626, v16634, v16640, v16635, v16641, v16636, v16642, v16643, v16644, v16645, v16646, v16647, v16648, v16637, v16638, v16639, 3, 7, 4, 2, 8) -> f_2599(v16617, v16618, v16619, v16620, v16621, v16622, v16623, v16624, 1, v17050, 0, v16629, v16630, -1, v16632, v16633, v16626, v16627, v16634, v16640, v16635, v16641, v16636, v16642, v16643, v16644, v16645, v16646, v16647, v16648, v16637, v16638, v16639, 3, 7, 4, 2, 8, 5) :|: v17050 = v16617 + 4 * v16624 && 5 <= v17050
f_2599(v16617, v16618, v16619, v16620, v16621, v16622, v16623, v16624, 1, v17050, 0, v16629, v16630, -1, v16632, v16633, v16626, v16627, v16634, v16640, v16635, v16641, v16636, v16642, v16643, v16644, v16645, v16646, v16647, v16648, v16637, v16638, v16639, 3, 7, 4, 2, 8, 5) -> f_2603(v16617, v16618, v16619, v16620, v16621, v16622, v16623, v16624, 1, v17050, v17051, 0, v16629, v16630, -1, v16632, v16633, v16626, v16627, v16634, v16640, v16635, v16641, v16636, v16642, v16643, v16644, v16645, v16646, v16647, v16648, v16637, v16638, v16639, 3, 7, 4, 2, 8, 5) :|: TRUE
f_2603(v16617, v16618, v16619, v16620, v16621, v16622, v16623, v16624, 1, v17050, v17051, 0, v16629, v16630, -1, v16632, v16633, v16626, v16627, v16634, v16640, v16635, v16641, v16636, v16642, v16643, v16644, v16645, v16646, v16647, v16648, v16637, v16638, v16639, 3, 7, 4, 2, 8, 5) -> f_2607(v16617, v16618, v16619, v16620, v16621, v16622, v16623, v16624, 1, v17050, v17051, 0, v16629, v16630, -1, v16632, v16633, v16626, v16627, v16634, v16640, v16635, v16641, v16636, v16642, v16643, v16644, v16645, v16646, v16647, v16648, v16637, v16638, v16639, 3, 7, 4, 2, 8, 5) :|: v17051 < 0
f_2603(v16617, v16618, v16619, v16620, v16621, v16622, v16623, v16624, 1, v17050, v17051, 0, v16629, v16630, -1, v16632, v16633, v16626, v16627, v16634, v16640, v16635, v16641, v16636, v16642, v16643, v16644, v16645, v16646, v16647, v16648, v16637, v16638, v16639, 3, 7, 4, 2, 8, 5) -> f_2608(v16617, v16618, v16619, v16620, v16621, v16622, v16623, v16624, 1, v17050, v17051, 0, v16629, v16630, -1, v16632, v16633, v16626, v16627, v16634, v16640, v16635, v16641, v16636, v16642, v16643, v16644, v16645, v16646, v16647, v16648, v16637, v16638, v16639, 3, 7, 4, 2, 8, 5) :|: 0 <= v17051
f_2607(v16617, v16618, v16619, v16620, v16621, v16622, v16623, v16624, 1, v17050, v17051, 0, v16629, v16630, -1, v16632, v16633, v16626, v16627, v16634, v16640, v16635, v16641, v16636, v16642, v16643, v16644, v16645, v16646, v16647, v16648, v16637, v16638, v16639, 3, 7, 4, 2, 8, 5) -> f_2613(v16617, v16618, v16619, v16620, v16621, v16622, v16623, v16624, 1, v17050, v17051, v16629, v16630, -1, 0, v16632, v16633, v16626, v16627, v16634, v16640, v16635, v16641, v16636, v16642, v16643, v16644, v16645, v16646, v16647, v16648, v16637, v16638, v16639, 3, 7, 4, 2, 8, 5) :|: 0 = 0
f_2613(v16617, v16618, v16619, v16620, v16621, v16622, v16623, v16624, 1, v17050, v17051, v16629, v16630, -1, 0, v16632, v16633, v16626, v16627, v16634, v16640, v16635, v16641, v16636, v16642, v16643, v16644, v16645, v16646, v16647, v16648, v16637, v16638, v16639, 3, 7, 4, 2, 8, 5) -> f_2620(v16617, v16618, v16619, v16620, v16621, v16622, v16623, v16624, 1, v17050, v17051, v16629, v16630, -1, 0, v16632, v16633, v16626, v16627, v16634, v16640, v16635, v16641, v16636, v16642, v16643, v16644, v16645, v16646, v16647, v16648, v16637, v16638, v16639, 3, 7, 4, 2, 8, 5) :|: TRUE
f_2620(v16617, v16618, v16619, v16620, v16621, v16622, v16623, v16624, 1, v17050, v17051, v16629, v16630, -1, 0, v16632, v16633, v16626, v16627, v16634, v16640, v16635, v16641, v16636, v16642, v16643, v16644, v16645, v16646, v16647, v16648, v16637, v16638, v16639, 3, 7, 4, 2, 8, 5) -> f_2382(v16617, v16618, v16619, v16620, v16621, v16622, v16623, v16624, 1, v17050, v17051, v16629, v16630, -1, 0, v16632, v16633, v16626, v16627, 0, v16634, v16640, v16635, v16641, v16636, v16642, v16643, v16644, v16645, v16646, v16647, v16648, v12683, v12684, v12685, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2608(v16617, v16618, v16619, v16620, v16621, v16622, v16623, v16624, 1, v17050, v17051, 0, v16629, v16630, -1, v16632, v16633, v16626, v16627, v16634, v16640, v16635, v16641, v16636, v16642, v16643, v16644, v16645, v16646, v16647, v16648, v16637, v16638, v16639, 3, 7, 4, 2, 8, 5) -> f_2614(v16617, v16618, v16619, v16620, v16621, v16622, v16623, v16624, 1, v17050, v17051, 0, v16629, v16630, -1, v16632, v16633, v16626, v16627, v16634, v16640, v16635, v16641, v16636, v16642, v16643, v16644, v16645, v16646, v16647, v16648, v16637, v16638, v16639, 3, 7, 4, 2, 8, 5) :|: 0 = 0
f_2614(v16617, v16618, v16619, v16620, v16621, v16622, v16623, v16624, 1, v17050, v17051, 0, v16629, v16630, -1, v16632, v16633, v16626, v16627, v16634, v16640, v16635, v16641, v16636, v16642, v16643, v16644, v16645, v16646, v16647, v16648, v16637, v16638, v16639, 3, 7, 4, 2, 8, 5) -> f_2621(v16617, v16618, v16619, v16620, v16621, v16622, v16623, v16624, 1, v17050, v17051, 0, v16629, v16630, -1, v16632, v16633, v16626, v16627, v16634, v16640, v16635, v16641, v16636, v16642, v16643, v16644, v16645, v16646, v16647, v16648, v16637, v16638, v16639, 3, 7, 4, 2, 8, 5) :|: TRUE
f_2621(v16617, v16618, v16619, v16620, v16621, v16622, v16623, v16624, 1, v17050, v17051, 0, v16629, v16630, -1, v16632, v16633, v16626, v16627, v16634, v16640, v16635, v16641, v16636, v16642, v16643, v16644, v16645, v16646, v16647, v16648, v16637, v16638, v16639, 3, 7, 4, 2, 8, 5) -> f_2622(v16617, v16618, v16619, v16620, v16621, v16622, v16623, v16624, 1, v17050, v17051, 0, v16626, v16627, v16629, v16630, -1, v16632, v16633, v16634, v16640, v16635, v16641, v16636, v16642, v16643, v16644, v16645, v16646, v16647, v16648, v17243, v17244, v17245, 3, 7, 4, 2, 5, 8) :|: TRUE
Combined rules. Obtained 4 rulesP rules:
f_2322(v12104:0, v12105:0, v12106:0, v12107:0, v12108:0, v12109:0, v12110:0, v12111:0, 1, v12104:0 + 4 * v12111:0, -1, v12115:0, v12116:0, 0, 0, v12119:0, v12120:0, v12121:0, v12127:0, v12122:0, v12128:0, v12123:0, v12129:0, v12130:0, v12131:0, v12132:0, v12133:0, v12134:0, v12135:0, v12124:0, v12125:0, v12126:0, 3, 7, 4, 2, 5, 8) -> f_2603(v12104:0, v12105:0, v12106:0, v12107:0, v12108:0, v12109:0, v12110:0, 1 + v12111:0, 1, v12104:0 + 4 * (1 + v12111:0), v17051:0, 0, v12111:0, v12104:0 + 4 * v12111:0, -1, v12119:0, v12120:0, v12111:0, v12104:0 + 4 * v12111:0, v12121:0, v12127:0, v12122:0, v12128:0, v12123:0, v12129:0, v12130:0, v12131:0, v12132:0, v12133:0, v12134:0, v12135:0, v16637:0, v16638:0, v16639:0, 3, 7, 4, 2, 8, 5) :|: v12111:0 > 0 && v12105:0 > 2 && v12105:0 > 1 + v12111:0 && v12104:0 + 4 * (1 + v12111:0) > 4 && v12130:0 > 11
f_2603(v16617:0, v16618:0, v16619:0, v16620:0, v16621:0, v16622:0, v16623:0, v16624:0, 1, v16617:0 + 4 * v16624:0, v17051:0, 0, v16629:0, v16630:0, -1, v16632:0, v16633:0, v16626:0, v16627:0, v16634:0, v16640:0, v16635:0, v16641:0, v16636:0, v16642:0, v16643:0, v16644:0, v16645:0, v16646:0, v16647:0, v16648:0, v16637:0, v16638:0, v16639:0, 3, 7, 4, 2, 8, 5) -> f_2603(v16617:0, v16618:0, v16619:0, v16620:0, v16621:0, v16622:0, v16623:0, 1 + v16624:0, 1, v16617:0 + 4 * (1 + v16624:0), v17051:1, 0, v16629:0, v16630:0, -1, v16632:0, v16633:0, v16624:0, v16617:0 + 4 * v16624:0, v16634:0, v16640:0, v16635:0, v16641:0, v16636:0, v16642:0, v16643:0, v16644:0, v16645:0, v16646:0, v16647:0, v16648:0, v16637:1, v16638:1, v16639:1, 3, 7, 4, 2, 8, 5) :|: v17051:0 < 1 && v16624:0 > 0 && v16618:0 > 2 && v16618:0 > 1 + v16624:0 && v16643:0 > 11 && v17051:0 > -1 && v16617:0 + 4 * (1 + v16624:0) > 4
f_2322(v12104:0, v12105:0, v12106:0, v12107:0, v12108:0, v12109:0, v12110:0, v12111:0, 1, v12104:0 + 4 * v12111:0, v12114:0, v12115:0, v12116:0, 0, v12118:0, v12119:0, v12120:0, v12121:0, v12127:0, v12122:0, v12128:0, v12123:0, v12129:0, v12130:0, v12131:0, v12132:0, v12133:0, v12134:0, v12135:0, v12124:0, v12125:0, v12126:0, 3, 7, 4, 2, 5, 8) -> f_2322(v12104:0, v12105:0, v12106:0, v12107:0, v12108:0, v12109:0, v12110:0, v12111:0, 1, v12104:0 + 4 * v12111:0, v12118:0, v12115:0, v12116:0, 0, 1 + v12118:0, v12120:0, 1 + v12120:0, v12121:0, v12127:0, v12122:0, v12128:0, v12123:0, v12129:0, v12130:0, v12131:0, v12132:0, v12133:0, v12134:0, v12135:0, v12124:1, v12125:1, v12126:1, 3, 7, 4, 2, 5, 8) :|: v12114:0 < -1 && v12118:0 < 0 && v12120:0 > 0
f_2603(v16617:0, v16618:0, v16619:0, v16620:0, v16621:0, v16622:0, v16623:0, v16624:0, 1, v16617:0 + 4 * v16624:0, v17051:0, 0, v16629:0, v16630:0, -1, v16632:0, v16633:0, v16626:0, v16627:0, v16634:0, v16640:0, v16635:0, v16641:0, v16636:0, v16642:0, v16643:0, v16644:0, v16645:0, v16646:0, v16647:0, v16648:0, v16637:0, v16638:0, v16639:0, 3, 7, 4, 2, 8, 5) -> f_2322(v16617:0, v16618:0, v16619:0, v16620:0, v16621:0, v16622:0, v16623:0, v16624:0, 1, v16617:0 + 4 * v16624:0, v17051:0, v16626:0, v16627:0, 0, 1 + v17051:0, v16633:0, 1 + v16633:0, v16634:0, v16640:0, v16635:0, v16641:0, v16636:0, v16642:0, v16643:0, v16644:0, v16645:0, v16646:0, v16647:0, v16648:0, v12124:0, v12125:0, v12126:0, 3, 7, 4, 2, 5, 8) :|: v17051:0 < 0 && v16633:0 > 0
Filtered unneeded arguments:
   f_2322(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38) -> f_2322(x1, x2, x8, x10, x11, x15, x17, x24)
   f_2603(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40) -> f_2603(x1, x2, x8, x10, x11, x17, x26)
Removed division, modulo operations, cleaned up constraints. Obtained 4 rules.P rules:
f_2322(v12104:0, v12105:0, v12111:0, sum~v12104:0~times~cons_4~v12111:0, cons_-1, cons_0, v12120:0, v12130:0) -> f_2603(v12104:0, v12105:0, 1 + v12111:0, v12104:0 + (4 + 4 * v12111:0), v17051:0, v12120:0, v12130:0) :|: v12105:0 > 2 && v12111:0 > 0 && v12105:0 > 1 + v12111:0 && v12130:0 > 11 && v12104:0 + (4 + 4 * v12111:0) > 4 && sum~v12104:0~times~cons_4~v12111:0 = v12104:0 + 4 * v12111:0 && cons_-1 = -1 && cons_0 = 0
f_2603(v16617:0, v16618:0, v16624:0, sum~v16617:0~times~cons_4~v16624:0, v17051:0, v16633:0, v16643:0) -> f_2603(v16617:0, v16618:0, 1 + v16624:0, v16617:0 + (4 + 4 * v16624:0), v17051:1, v16633:0, v16643:0) :|: v16624:0 > 0 && v17051:0 < 1 && v16618:0 > 2 && v16618:0 > 1 + v16624:0 && v16643:0 > 11 && v16617:0 + (4 + 4 * v16624:0) > 4 && v17051:0 > -1 && sum~v16617:0~times~cons_4~v16624:0 = v16617:0 + 4 * v16624:0
f_2322(v12104:0, v12105:0, v12111:0, sum~v12104:0~times~cons_4~v12111:0, v12114:0, v12118:0, v12120:0, v12130:0) -> f_2322(v12104:0, v12105:0, v12111:0, v12104:0 + 4 * v12111:0, v12118:0, 1 + v12118:0, 1 + v12120:0, v12130:0) :|: v12118:0 < 0 && v12120:0 > 0 && v12114:0 < -1 && sum~v12104:0~times~cons_4~v12111:0 = v12104:0 + 4 * v12111:0
f_2603(v16617:0, v16618:0, v16624:0, sum~v16617:0~times~cons_4~v16624:0, v17051:0, v16633:0, v16643:0) -> f_2322(v16617:0, v16618:0, v16624:0, v16617:0 + 4 * v16624:0, v17051:0, 1 + v17051:0, 1 + v16633:0, v16643:0) :|: v17051:0 < 0 && v16633:0 > 0 && sum~v16617:0~times~cons_4~v16624:0 = v16617:0 + 4 * v16624:0

----------------------------------------

(32)
Obligation:
Rules:
f_2322(v12104:0, v12105:0, v12111:0, sum~v12104:0~times~cons_4~v12111:0, cons_-1, cons_0, v12120:0, v12130:0) -> f_2603(v12104:0, v12105:0, 1 + v12111:0, v12104:0 + (4 + 4 * v12111:0), v17051:0, v12120:0, v12130:0) :|: v12105:0 > 2 && v12111:0 > 0 && v12105:0 > 1 + v12111:0 && v12130:0 > 11 && v12104:0 + (4 + 4 * v12111:0) > 4 && sum~v12104:0~times~cons_4~v12111:0 = v12104:0 + 4 * v12111:0 && cons_-1 = -1 && cons_0 = 0
f_2603(x, x1, x2, x3, x4, x5, x6) -> f_2603(x, x1, 1 + x2, x + (4 + 4 * x2), x7, x5, x6) :|: x2 > 0 && x4 < 1 && x1 > 2 && x1 > 1 + x2 && x6 > 11 && x + (4 + 4 * x2) > 4 && x4 > -1 && x3 = x + 4 * x2
f_2322(x8, x9, x10, x11, x12, x13, x14, x15) -> f_2322(x8, x9, x10, x8 + 4 * x10, x13, 1 + x13, 1 + x14, x15) :|: x13 < 0 && x14 > 0 && x12 < -1 && x11 = x8 + 4 * x10
f_2603(x16, x17, x18, x19, x20, x21, x22) -> f_2322(x16, x17, x18, x16 + 4 * x18, x20, 1 + x20, 1 + x21, x22) :|: x20 < 0 && x21 > 0 && x19 = x16 + 4 * x18

----------------------------------------

(33) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(34)
Obligation:
Rules:
f_2603(x16:0, x17:0, x18:0, sum~x16:0~times~cons_4~x18:0, x20:0, x21:0, x22:0) -> f_2322(x16:0, x17:0, x18:0, x16:0 + 4 * x18:0, x20:0, 1 + x20:0, 1 + x21:0, x22:0) :|: x20:0 < 0 && x21:0 > 0 && sum~x16:0~times~cons_4~x18:0 = x16:0 + 4 * x18:0
f_2322(v12104:0:0, v12105:0:0, v12111:0:0, sum~v12104:0:0~times~cons_4~v12111:0:0, cons_-1, cons_0, v12120:0:0, v12130:0:0) -> f_2603(v12104:0:0, v12105:0:0, 1 + v12111:0:0, v12104:0:0 + (4 + 4 * v12111:0:0), v17051:0:0, v12120:0:0, v12130:0:0) :|: v12130:0:0 > 11 && v12104:0:0 + (4 + 4 * v12111:0:0) > 4 && v12105:0:0 > 1 + v12111:0:0 && v12111:0:0 > 0 && v12105:0:0 > 2 && sum~v12104:0:0~times~cons_4~v12111:0:0 = v12104:0:0 + 4 * v12111:0:0 && cons_-1 = -1 && cons_0 = 0
f_2322(x8:0, x9:0, x10:0, sum~x8:0~times~cons_4~x10:0, x12:0, x13:0, x14:0, x15:0) -> f_2322(x8:0, x9:0, x10:0, x8:0 + 4 * x10:0, x13:0, 1 + x13:0, 1 + x14:0, x15:0) :|: x13:0 < 0 && x14:0 > 0 && x12:0 < -1 && sum~x8:0~times~cons_4~x10:0 = x8:0 + 4 * x10:0
f_2603(x:0, x1:0, x2:0, sum~x:0~times~cons_4~x2:0, x4:0, x5:0, x6:0) -> f_2603(x:0, x1:0, 1 + x2:0, x:0 + (4 + 4 * x2:0), x7:0, x5:0, x6:0) :|: x:0 + (4 + 4 * x2:0) > 4 && x4:0 > -1 && x6:0 > 11 && x1:0 > 1 + x2:0 && x1:0 > 2 && x4:0 < 1 && x2:0 > 0 && sum~x:0~times~cons_4~x2:0 = x:0 + 4 * x2:0

----------------------------------------

(35) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_2603(x, x1, x2, x3, x4, x5, x6)] = -1 + x + 5*x1 - x2 + x6
[f_2322(x7, x8, x9, x10, x11, x12, x13, x14)] = -1 + x14 + x7 + 5*x8 - x9

The following rules are decreasing:
f_2322(v12104:0:0, v12105:0:0, v12111:0:0, sum~v12104:0:0~times~cons_4~v12111:0:0, cons_-1, cons_0, v12120:0:0, v12130:0:0) -> f_2603(v12104:0:0, v12105:0:0, 1 + v12111:0:0, v12104:0:0 + (4 + 4 * v12111:0:0), v17051:0:0, v12120:0:0, v12130:0:0) :|: v12130:0:0 > 11 && v12104:0:0 + (4 + 4 * v12111:0:0) > 4 && v12105:0:0 > 1 + v12111:0:0 && v12111:0:0 > 0 && v12105:0:0 > 2 && sum~v12104:0:0~times~cons_4~v12111:0:0 = v12104:0:0 + 4 * v12111:0:0 && cons_-1 = -1 && cons_0 = 0
f_2603(x:0, x1:0, x2:0, sum~x:0~times~cons_4~x2:0, x4:0, x5:0, x6:0) -> f_2603(x:0, x1:0, 1 + x2:0, x:0 + (4 + 4 * x2:0), x7:0, x5:0, x6:0) :|: x:0 + (4 + 4 * x2:0) > 4 && x4:0 > -1 && x6:0 > 11 && x1:0 > 1 + x2:0 && x1:0 > 2 && x4:0 < 1 && x2:0 > 0 && sum~x:0~times~cons_4~x2:0 = x:0 + 4 * x2:0
The following rules are bounded:
f_2322(v12104:0:0, v12105:0:0, v12111:0:0, sum~v12104:0:0~times~cons_4~v12111:0:0, cons_-1, cons_0, v12120:0:0, v12130:0:0) -> f_2603(v12104:0:0, v12105:0:0, 1 + v12111:0:0, v12104:0:0 + (4 + 4 * v12111:0:0), v17051:0:0, v12120:0:0, v12130:0:0) :|: v12130:0:0 > 11 && v12104:0:0 + (4 + 4 * v12111:0:0) > 4 && v12105:0:0 > 1 + v12111:0:0 && v12111:0:0 > 0 && v12105:0:0 > 2 && sum~v12104:0:0~times~cons_4~v12111:0:0 = v12104:0:0 + 4 * v12111:0:0 && cons_-1 = -1 && cons_0 = 0
f_2603(x:0, x1:0, x2:0, sum~x:0~times~cons_4~x2:0, x4:0, x5:0, x6:0) -> f_2603(x:0, x1:0, 1 + x2:0, x:0 + (4 + 4 * x2:0), x7:0, x5:0, x6:0) :|: x:0 + (4 + 4 * x2:0) > 4 && x4:0 > -1 && x6:0 > 11 && x1:0 > 1 + x2:0 && x1:0 > 2 && x4:0 < 1 && x2:0 > 0 && sum~x:0~times~cons_4~x2:0 = x:0 + 4 * x2:0

----------------------------------------

(36)
Obligation:
Rules:
f_2603(x16:0, x17:0, x18:0, sum~x16:0~times~cons_4~x18:0, x20:0, x21:0, x22:0) -> f_2322(x16:0, x17:0, x18:0, x16:0 + 4 * x18:0, x20:0, 1 + x20:0, 1 + x21:0, x22:0) :|: x20:0 < 0 && x21:0 > 0 && sum~x16:0~times~cons_4~x18:0 = x16:0 + 4 * x18:0
f_2322(x8:0, x9:0, x10:0, sum~x8:0~times~cons_4~x10:0, x12:0, x13:0, x14:0, x15:0) -> f_2322(x8:0, x9:0, x10:0, x8:0 + 4 * x10:0, x13:0, 1 + x13:0, 1 + x14:0, x15:0) :|: x13:0 < 0 && x14:0 > 0 && x12:0 < -1 && sum~x8:0~times~cons_4~x10:0 = x8:0 + 4 * x10:0

----------------------------------------

(37) TerminationGraphProcessor (EQUIVALENT)
Constructed the termination graph and obtained one non-trivial SCC.

----------------------------------------

(38)
Obligation:
Rules:
f_2322(x8:0, x9:0, x10:0, sum~x8:0~times~cons_4~x10:0, x12:0, x13:0, x14:0, x15:0) -> f_2322(x8:0, x9:0, x10:0, x8:0 + 4 * x10:0, x13:0, 1 + x13:0, 1 + x14:0, x15:0) :|: x13:0 < 0 && x14:0 > 0 && x12:0 < -1 && sum~x8:0~times~cons_4~x10:0 = x8:0 + 4 * x10:0

----------------------------------------

(39) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(40)
Obligation:
Rules:
f_2322(x8:0:0, x9:0:0, x10:0:0, sum~x8:0:0~times~cons_4~x10:0:0, x12:0:0, x13:0:0, x14:0:0, x15:0:0) -> f_2322(x8:0:0, x9:0:0, x10:0:0, x8:0:0 + 4 * x10:0:0, x13:0:0, 1 + x13:0:0, 1 + x14:0:0, x15:0:0) :|: x13:0:0 < 0 && x14:0:0 > 0 && x12:0:0 < -1 && sum~x8:0:0~times~cons_4~x10:0:0 = x8:0:0 + 4 * x10:0:0

----------------------------------------

(41) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_2322(x1, x2, x3, x4, x5, x6, x7, x8) -> f_2322(x1, x3, x4, x5, x6, x7)

----------------------------------------

(42)
Obligation:
Rules:
f_2322(x8:0:0, x10:0:0, sum~x8:0:0~times~cons_4~x10:0:0, x12:0:0, x13:0:0, x14:0:0) -> f_2322(x8:0:0, x10:0:0, x8:0:0 + 4 * x10:0:0, x13:0:0, 1 + x13:0:0, 1 + x14:0:0) :|: x13:0:0 < 0 && x14:0:0 > 0 && x12:0:0 < -1 && sum~x8:0:0~times~cons_4~x10:0:0 = x8:0:0 + 4 * x10:0:0

----------------------------------------

(43) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_2322 ] = -1*f_2322_5

The following rules are decreasing:
f_2322(x8:0:0, x10:0:0, sum~x8:0:0~times~cons_4~x10:0:0, x12:0:0, x13:0:0, x14:0:0) -> f_2322(x8:0:0, x10:0:0, x8:0:0 + 4 * x10:0:0, x13:0:0, 1 + x13:0:0, 1 + x14:0:0) :|: x13:0:0 < 0 && x14:0:0 > 0 && x12:0:0 < -1 && sum~x8:0:0~times~cons_4~x10:0:0 = x8:0:0 + 4 * x10:0:0

The following rules are bounded:
f_2322(x8:0:0, x10:0:0, sum~x8:0:0~times~cons_4~x10:0:0, x12:0:0, x13:0:0, x14:0:0) -> f_2322(x8:0:0, x10:0:0, x8:0:0 + 4 * x10:0:0, x13:0:0, 1 + x13:0:0, 1 + x14:0:0) :|: x13:0:0 < 0 && x14:0:0 > 0 && x12:0:0 < -1 && sum~x8:0:0~times~cons_4~x10:0:0 = x8:0:0 + 4 * x10:0:0


----------------------------------------

(44)
YES

----------------------------------------

(45)
Obligation:
SCC
----------------------------------------

(46) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 59 rulesP rules:
f_2321(v11983, v11984, v11985, v11986, v11987, v11988, v11989, v11990, 1, v11992, v11993, 0, v11995, v11996, v11997, v11998, v11999, v12000, v12006, v12001, v12007, v12002, v12008, v12009, v12010, v12011, v12012, v12013, v12014, v12015, v12003, v12004, v12005, 3, 7, 4, 2, 5, 8) -> f_2328(v11983, v11984, v11985, v11986, v11987, v11988, v11989, v11990, 1, v11992, v11993, 0, v11995, v11996, v11997, v11998, v11999, v12000, v12006, v12001, v12007, v12002, v12008, v12009, v12010, v12011, v12012, v12013, v12014, v12015, v12003, v12004, v12005, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2328(v11983, v11984, v11985, v11986, v11987, v11988, v11989, v11990, 1, v11992, v11993, 0, v11995, v11996, v11997, v11998, v11999, v12000, v12006, v12001, v12007, v12002, v12008, v12009, v12010, v12011, v12012, v12013, v12014, v12015, v12003, v12004, v12005, 3, 7, 4, 2, 5, 8) -> f_2335(v11983, v11984, v11985, v11986, v11987, v11988, v11989, v11990, 1, v11992, v11993, 0, v11995, v11996, v11997, v11998, v11999, v12000, v12006, v12001, v12007, v12002, v12008, v12009, v12010, v12011, v12012, v12013, v12014, v12015, v12003, v12004, v12005, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2335(v11983, v11984, v11985, v11986, v11987, v11988, v11989, v11990, 1, v11992, v11993, 0, v11995, v11996, v11997, v11998, v11999, v12000, v12006, v12001, v12007, v12002, v12008, v12009, v12010, v12011, v12012, v12013, v12014, v12015, v12003, v12004, v12005, 3, 7, 4, 2, 5, 8) -> f_2342(v11983, v11984, v11985, v11986, v11987, v11988, v11989, v11990, 1, v11992, v11993, 0, v11995, v11996, v11997, v11998, v11999, v12000, v12006, v12001, v12007, v12002, v12008, v12009, v12010, v12011, v12012, v12013, v12014, v12015, v12003, v12004, v12005, 3, 7, 4, 2, 5, 8) :|: v11992 = v11983 + 4 * v11990
f_2342(v11983, v11984, v11985, v11986, v11987, v11988, v11989, v11990, 1, v11992, v11993, 0, v11995, v11996, v11997, v11998, v11999, v12000, v12006, v12001, v12007, v12002, v12008, v12009, v12010, v12011, v12012, v12013, v12014, v12015, v12003, v12004, v12005, 3, 7, 4, 2, 5, 8) -> f_2349(v11983, v11984, v11985, v11986, v11987, v11988, v11989, v11990, 1, v11992, v11993, 0, v11997, v11996, v11995, v11998, v11999, v12000, v12006, v12001, v12007, v12002, v12008, v12009, v12010, v12011, v12012, v12013, v12014, v12015, v12003, v12004, v12005, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2349(v11983, v11984, v11985, v11986, v11987, v11988, v11989, v11990, 1, v11992, v11993, 0, v11997, v11996, v11995, v11998, v11999, v12000, v12006, v12001, v12007, v12002, v12008, v12009, v12010, v12011, v12012, v12013, v12014, v12015, v12003, v12004, v12005, 3, 7, 4, 2, 5, 8) -> f_2356(v11983, v11984, v11985, v11986, v11987, v11988, v11989, v11990, 1, v11992, v11993, 0, v11997, v11996, v11995, v11998, v11999, v12000, v12006, v12001, v12007, v12002, v12008, v12009, v12010, v12011, v12012, v12013, v12014, v12015, v12003, v12004, v12005, 3, 7, 4, 2, 5, 8) :|: 0 < v11997 && 2 <= v11995
f_2349(v11983, v11984, v11985, v11986, v11987, v11988, v11989, v11990, 1, v11992, v11993, 0, v11997, v11996, v11995, v11998, v11999, v12000, v12006, v12001, v12007, v12002, v12008, v12009, v12010, v12011, v12012, v12013, v12014, v12015, v12003, v12004, v12005, 3, 7, 4, 2, 5, 8) -> f_2357(v11983, v11984, v11985, v11986, v11987, v11988, v11989, v11990, 1, v11992, v11993, 0, v11996, v11998, v11999, v12000, v12006, v12001, v12007, v12002, v12008, v12009, v12010, v12011, v12012, v12013, v12014, v12015, v12003, v12004, v12005, 3, 7, 4, 2, 5, 8) :|: v11997 <= 0 && v11995 = 1 && v11997 = 0 && 0 = 0
f_2356(v11983, v11984, v11985, v11986, v11987, v11988, v11989, v11990, 1, v11992, v11993, 0, v11997, v11996, v11995, v11998, v11999, v12000, v12006, v12001, v12007, v12002, v12008, v12009, v12010, v12011, v12012, v12013, v12014, v12015, v12003, v12004, v12005, 3, 7, 4, 2, 5, 8) -> f_2367(v11983, v11984, v11985, v11986, v11987, v11988, v11989, v11990, 1, v11992, v11993, 0, v11997, v11996, v11995, v11998, v11999, v12000, v12006, v12001, v12007, v12002, v12008, v12009, v12010, v12011, v12012, v12013, v12014, v12015, v12003, v12004, v12005, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2367(v11983, v11984, v11985, v11986, v11987, v11988, v11989, v11990, 1, v11992, v11993, 0, v11997, v11996, v11995, v11998, v11999, v12000, v12006, v12001, v12007, v12002, v12008, v12009, v12010, v12011, v12012, v12013, v12014, v12015, v12003, v12004, v12005, 3, 7, 4, 2, 5, 8) -> f_2378(v11983, v11984, v11985, v11986, v11987, v11988, v11989, v11990, 1, v11992, v11993, 0, v11997, v11996, v11995, v11998, v11999, v12000, v12006, v12001, v12007, v12002, v12008, v12009, v12010, v12011, v12012, v12013, v12014, v12015, v12003, v12004, v12005, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2378(v11983, v11984, v11985, v11986, v11987, v11988, v11989, v11990, 1, v11992, v11993, 0, v11997, v11996, v11995, v11998, v11999, v12000, v12006, v12001, v12007, v12002, v12008, v12009, v12010, v12011, v12012, v12013, v12014, v12015, v12003, v12004, v12005, 3, 7, 4, 2, 5, 8) -> f_2379(v11983, v11984, v11985, v11986, v11987, v11988, v11989, v11990, 1, v11992, v11993, 0, v11997, v11990, v11992, v11995, v11997, v11998, v11999, v11996, v12000, v12006, v12001, v12007, v12002, v12008, v12009, v12010, v12011, v12012, v12013, v12014, v12525, v12513, v12514, v12515, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2379(v12490, v12491, v12492, v12493, v12494, v12495, v12496, v12497, 1, v12499, v12500, 0, v12502, v12503, v12504, v12505, v12506, v12507, v12508, v12509, v12510, v12516, v12511, v12517, v12512, v12518, v12519, v12520, v12521, v12522, v12523, v12524, v12525, v12513, v12514, v12515, 3, 7, 4, 2, 5, 8) -> f_2391(v12490, v12491, v12492, v12493, v12494, v12495, v12496, v12497, 1, v12499, v12500, 0, v12502, v12503, v12504, v12505, v12506, v12507, v12508, v12509, v12510, v12516, v12511, v12517, v12512, v12518, v12519, v12520, v12521, v12522, v12523, v12524, v12525, v12513, v12514, v12515, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2391(v12490, v12491, v12492, v12493, v12494, v12495, v12496, v12497, 1, v12499, v12500, 0, v12502, v12503, v12504, v12505, v12506, v12507, v12508, v12509, v12510, v12516, v12511, v12517, v12512, v12518, v12519, v12520, v12521, v12522, v12523, v12524, v12525, v12513, v12514, v12515, 3, 7, 4, 2, 5, 8) -> f_2402(v12490, v12491, v12492, v12493, v12494, v12495, v12496, v12497, 1, v12499, v12500, 0, v12502, v12503, v12504, v12505, v12506, v12507, v12508, v12509, v12510, v12516, v12511, v12517, v12512, v12518, v12519, v12520, v12521, v12522, v12523, v12524, v12525, v12513, v12514, v12515, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2402(v12490, v12491, v12492, v12493, v12494, v12495, v12496, v12497, 1, v12499, v12500, 0, v12502, v12503, v12504, v12505, v12506, v12507, v12508, v12509, v12510, v12516, v12511, v12517, v12512, v12518, v12519, v12520, v12521, v12522, v12523, v12524, v12525, v12513, v12514, v12515, 3, 7, 4, 2, 5, 8) -> f_2412(v12490, v12491, v12492, v12493, v12494, v12495, v12496, v12497, 1, v12499, v12500, 0, v12502, v12504, v12505, v12506, v12507, v12508, v12509, v12510, v12516, v12511, v12517, v12512, v12518, v12519, v12520, v12521, v12522, v12523, v12524, v12525, v12513, v12514, v12515, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2412(v12490, v12491, v12492, v12493, v12494, v12495, v12496, v12497, 1, v12499, v12500, 0, v12502, v12504, v12505, v12506, v12507, v12508, v12509, v12510, v12516, v12511, v12517, v12512, v12518, v12519, v12520, v12521, v12522, v12523, v12524, v12525, v12513, v12514, v12515, 3, 7, 4, 2, 5, 8) -> f_2420(v12490, v12491, v12492, v12493, v12494, v12495, v12496, v12497, 1, v12499, v12500, 0, v12502, v12505, v12506, v12507, v12508, v12509, v12510, v12516, v12511, v12517, v12512, v12518, v12519, v12520, v12521, v12522, v12523, v12524, v12504, v12525, v12513, v12514, v12515, 3, 7, 4, 2, 5, 8) :|: v12499 = v12490 + 4 * v12497
f_2420(v12490, v12491, v12492, v12493, v12494, v12495, v12496, v12497, 1, v12499, v12500, 0, v12502, v12505, v12506, v12507, v12508, v12509, v12510, v12516, v12511, v12517, v12512, v12518, v12519, v12520, v12521, v12522, v12523, v12524, v12504, v12525, v12513, v12514, v12515, 3, 7, 4, 2, 5, 8) -> f_2428(v12490, v12491, v12492, v12493, v12494, v12495, v12496, v12497, 1, v12499, v12500, 0, v12502, v12506, v12507, v12508, v12509, v12510, v12516, v12511, v12517, v12512, v12518, v12519, v12520, v12521, v12522, v12523, v12524, v12504, v12525, v12513, v12514, v12515, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2428(v12490, v12491, v12492, v12493, v12494, v12495, v12496, v12497, 1, v12499, v12500, 0, v12502, v12506, v12507, v12508, v12509, v12510, v12516, v12511, v12517, v12512, v12518, v12519, v12520, v12521, v12522, v12523, v12524, v12504, v12525, v12513, v12514, v12515, 3, 7, 4, 2, 5, 8) -> f_2436(v12490, v12491, v12492, v12493, v12494, v12495, v12496, v12497, 1, v12499, v12500, 0, v12502, v13734, v12507, v12508, v12509, v12510, v12516, v12511, v12517, v12512, v12518, v12519, v12520, v12521, v12522, v12523, v12524, v12504, v12506, v12525, v12513, v12514, v12515, 3, 7, 4, 2, 5, 8) :|: 1 + v13734 = v12502 && 0 <= v13734
f_2436(v12490, v12491, v12492, v12493, v12494, v12495, v12496, v12497, 1, v12499, v12500, 0, v12502, v13734, v12507, v12508, v12509, v12510, v12516, v12511, v12517, v12512, v12518, v12519, v12520, v12521, v12522, v12523, v12524, v12504, v12506, v12525, v12513, v12514, v12515, 3, 7, 4, 2, 5, 8) -> f_2444(v12490, v12491, v12492, v12493, v12494, v12495, v12496, v12497, 1, v12499, v12500, 0, v12502, v13734, v12507, v12508, v12509, v12510, v12516, v12511, v12517, v12512, v12518, v12519, v12520, v12521, v12522, v12523, v12524, v12525, v12504, v12513, v12514, v12515, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2444(v12490, v12491, v12492, v12493, v12494, v12495, v12496, v12497, 1, v12499, v12500, 0, v12502, v13734, v12507, v12508, v12509, v12510, v12516, v12511, v12517, v12512, v12518, v12519, v12520, v12521, v12522, v12523, v12524, v12525, v12504, v12513, v12514, v12515, 3, 7, 4, 2, 5, 8) -> f_2456(v12490, v12491, v12492, v12493, v12494, v12495, v12496, v12497, 1, v12499, v12500, 0, v12502, v13734, v12508, v12509, v12510, v12516, v12511, v12517, v12512, v12518, v12519, v12520, v12521, v12522, v12523, v12524, v12525, v12504, v12513, v12514, v12515, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2456(v12490, v12491, v12492, v12493, v12494, v12495, v12496, v12497, 1, v12499, v12500, 0, v12502, v13734, v12508, v12509, v12510, v12516, v12511, v12517, v12512, v12518, v12519, v12520, v12521, v12522, v12523, v12524, v12525, v12504, v12513, v12514, v12515, 3, 7, 4, 2, 5, 8) -> f_2469(v12490, v12491, v12492, v12493, v12494, v12495, v12496, v12497, 1, v12499, v12500, 0, v12502, v13734, v12508, v13838, v12509, v12510, v12516, v12511, v12517, v12512, v12518, v12519, v12520, v12521, v12522, v12523, v12524, v12525, v12504, v12513, v12514, v12515, 3, 7, 4, 2, 5, 8) :|: v13838 = 1 + v12508 && 2 <= v13838
f_2469(v12490, v12491, v12492, v12493, v12494, v12495, v12496, v12497, 1, v12499, v12500, 0, v12502, v13734, v12508, v13838, v12509, v12510, v12516, v12511, v12517, v12512, v12518, v12519, v12520, v12521, v12522, v12523, v12524, v12525, v12504, v12513, v12514, v12515, 3, 7, 4, 2, 5, 8) -> f_2482(v12490, v12491, v12492, v12493, v12494, v12495, v12496, v12497, 1, v12499, v12500, 0, v12502, v13734, v12508, v13838, v12509, v12510, v12516, v12511, v12517, v12512, v12518, v12519, v12520, v12521, v12522, v12523, v12524, v12525, v12504, v12513, v12514, v12515, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2482(v12490, v12491, v12492, v12493, v12494, v12495, v12496, v12497, 1, v12499, v12500, 0, v12502, v13734, v12508, v13838, v12509, v12510, v12516, v12511, v12517, v12512, v12518, v12519, v12520, v12521, v12522, v12523, v12524, v12525, v12504, v12513, v12514, v12515, 3, 7, 4, 2, 5, 8) -> f_2494(v12490, v12491, v12492, v12493, v12494, v12495, v12496, v12497, 1, v12499, v12500, 0, v12502, v13734, v12508, v13838, v12509, v12510, v12516, v12511, v12517, v12512, v12518, v12519, v12520, v12521, v12522, v12523, v12524, v12525, v12504, v12513, v12514, v12515, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2494(v12490, v12491, v12492, v12493, v12494, v12495, v12496, v12497, 1, v12499, v12500, 0, v12502, v13734, v12508, v13838, v12509, v12510, v12516, v12511, v12517, v12512, v12518, v12519, v12520, v12521, v12522, v12523, v12524, v12525, v12504, v12513, v12514, v12515, 3, 7, 4, 2, 5, 8) -> f_2313(v12490, v12491, v12492, v12493, v12494, v12495, v12496, v12497, 1, v12499, v12500, 0, v12502, v12509, v13734, v12508, v13838, v12510, v12516, v12511, v12517, v12512, v12518, v12519, v12520, v12521, v12522, v12523, v12524, v12015, v12003, v12004, v12005, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2313(v11983, v11984, v11985, v11986, v11987, v11988, v11989, v11990, 1, v11992, v11993, 0, v11995, v11996, v11997, v11998, v11999, v12000, v12006, v12001, v12007, v12002, v12008, v12009, v12010, v12011, v12012, v12013, v12014, v12015, v12003, v12004, v12005, 3, 7, 4, 2, 5, 8) -> f_2321(v11983, v11984, v11985, v11986, v11987, v11988, v11989, v11990, 1, v11992, v11993, 0, v11995, v11996, v11997, v11998, v11999, v12000, v12006, v12001, v12007, v12002, v12008, v12009, v12010, v12011, v12012, v12013, v12014, v12015, v12003, v12004, v12005, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2357(v11983, v11984, v11985, v11986, v11987, v11988, v11989, v11990, 1, v11992, v11993, 0, v11996, v11998, v11999, v12000, v12006, v12001, v12007, v12002, v12008, v12009, v12010, v12011, v12012, v12013, v12014, v12015, v12003, v12004, v12005, 3, 7, 4, 2, 5, 8) -> f_2368(v11983, v11984, v11985, v11986, v11987, v11988, v11989, v11990, 1, v11992, v11993, 0, v11996, v11998, v11999, v12000, v12006, v12001, v12007, v12002, v12008, v12009, v12010, v12011, v12012, v12013, v12014, v12015, v12003, v12004, v12005, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2368(v11983, v11984, v11985, v11986, v11987, v11988, v11989, v11990, 1, v11992, v11993, 0, v11996, v11998, v11999, v12000, v12006, v12001, v12007, v12002, v12008, v12009, v12010, v12011, v12012, v12013, v12014, v12015, v12003, v12004, v12005, 3, 7, 4, 2, 5, 8) -> f_2380(v11983, v11984, v11985, v11986, v11987, v11988, v11989, v11990, 1, v11992, v11993, 0, v11996, v11998, v11999, v12000, v12006, v12001, v12007, v12002, v12008, v12009, v12010, v12011, v12012, v12013, v12014, v12015, v12003, v12004, v12005, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2380(v11983, v11984, v11985, v11986, v11987, v11988, v11989, v11990, 1, v11992, v11993, 0, v11996, v11998, v11999, v12000, v12006, v12001, v12007, v12002, v12008, v12009, v12010, v12011, v12012, v12013, v12014, v12015, v12003, v12004, v12005, 3, 7, 4, 2, 5, 8) -> f_2628(v11983, v11984, v11985, v11986, v11987, v11988, v11989, v11990, 1, v11992, v11993, 0, v11996, v11990, v11992, v11998, v11999, v12000, v12006, v12001, v12007, v12002, v12008, v12009, v12010, v12011, v12012, v12013, v12014, v17458, v17446, v17447, v17448, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2628(v17426, v17427, v17428, v17429, v17430, v17431, v17432, v17433, 1, v17435, v17436, 0, v17438, v17439, v17440, v17441, v17442, v17443, v17449, v17444, v17450, v17445, v17451, v17452, v17453, v17454, v17455, v17456, v17457, v17458, v17446, v17447, v17448, 3, 7, 4, 2, 5, 8) -> f_2632(v17426, v17427, v17428, v17429, v17430, v17431, v17432, v17433, 1, v17435, v17436, 0, v17438, v17439, v17440, v17441, v17442, v17443, v17449, v17444, v17450, v17445, v17451, v17452, v17453, v17454, v17455, v17456, v17457, v17458, v17446, v17447, v17448, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2632(v17426, v17427, v17428, v17429, v17430, v17431, v17432, v17433, 1, v17435, v17436, 0, v17438, v17439, v17440, v17441, v17442, v17443, v17449, v17444, v17450, v17445, v17451, v17452, v17453, v17454, v17455, v17456, v17457, v17458, v17446, v17447, v17448, 3, 7, 4, 2, 5, 8) -> f_2636(v17426, v17427, v17428, v17429, v17430, v17431, v17432, v17433, 1, v17435, v17436, 0, v17439, v17440, v17441, v17442, v17443, v17449, v17444, v17450, v17445, v17451, v17452, v17453, v17454, v17455, v17456, v17457, v17458, v17446, v17447, v17448, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2636(v17426, v17427, v17428, v17429, v17430, v17431, v17432, v17433, 1, v17435, v17436, 0, v17439, v17440, v17441, v17442, v17443, v17449, v17444, v17450, v17445, v17451, v17452, v17453, v17454, v17455, v17456, v17457, v17458, v17446, v17447, v17448, 3, 7, 4, 2, 5, 8) -> f_2640(v17426, v17427, v17428, v17429, v17430, v17431, v17432, v17433, 1, v17435, v17436, 0, v17777, v17439, v17440, v17441, v17442, v17443, v17449, v17444, v17450, v17445, v17451, v17452, v17453, v17454, v17455, v17456, v17457, v17458, v17446, v17447, v17448, 3, 7, 4, 2, 5, 8) :|: v17777 = 1 + v17433 && 2 <= v17777
f_2640(v17426, v17427, v17428, v17429, v17430, v17431, v17432, v17433, 1, v17435, v17436, 0, v17777, v17439, v17440, v17441, v17442, v17443, v17449, v17444, v17450, v17445, v17451, v17452, v17453, v17454, v17455, v17456, v17457, v17458, v17446, v17447, v17448, 3, 7, 4, 2, 5, 8) -> f_2644(v17426, v17427, v17428, v17429, v17430, v17431, v17432, v17433, 1, v17435, v17436, 0, v17777, v17439, v17440, v17441, v17442, v17443, v17449, v17444, v17450, v17445, v17451, v17452, v17453, v17454, v17455, v17456, v17457, v17458, v17446, v17447, v17448, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2644(v17426, v17427, v17428, v17429, v17430, v17431, v17432, v17433, 1, v17435, v17436, 0, v17777, v17439, v17440, v17441, v17442, v17443, v17449, v17444, v17450, v17445, v17451, v17452, v17453, v17454, v17455, v17456, v17457, v17458, v17446, v17447, v17448, 3, 7, 4, 2, 5, 8) -> f_2648(v17426, v17427, v17428, v17429, v17430, v17431, v17432, v17433, 1, v17435, v17436, 0, v17777, v17439, v17440, v17441, v17442, v17443, v17449, v17444, v17450, v17445, v17451, v17452, v17453, v17454, v17455, v17456, v17457, v17458, v17446, v17447, v17448, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2648(v17426, v17427, v17428, v17429, v17430, v17431, v17432, v17433, 1, v17435, v17436, 0, v17777, v17439, v17440, v17441, v17442, v17443, v17449, v17444, v17450, v17445, v17451, v17452, v17453, v17454, v17455, v17456, v17457, v17458, v17446, v17447, v17448, 3, 7, 4, 2, 5, 8) -> f_2652(v17426, v17427, v17428, v17429, v17430, v17431, v17432, v17777, 1, v17433, v17435, v17436, 0, v17439, v17440, v17441, v17442, v17443, v17449, v17444, v17450, v17445, v17451, v17452, v17453, v17454, v17455, v17456, v17457, v17458, v17446, v17447, v17448, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2652(v17426, v17427, v17428, v17429, v17430, v17431, v17432, v17777, 1, v17433, v17435, v17436, 0, v17439, v17440, v17441, v17442, v17443, v17449, v17444, v17450, v17445, v17451, v17452, v17453, v17454, v17455, v17456, v17457, v17458, v17446, v17447, v17448, 3, 7, 4, 2, 5, 8) -> f_2657(v17426, v17427, v17428, v17429, v17430, v17431, v17432, v17777, 1, v17433, v17435, v17436, 0, v17439, v17440, v17441, v17442, v17443, v17449, v17444, v17450, v17445, v17451, v17452, v17453, v17454, v17455, v17456, v17457, v17458, v17446, v17447, v17448, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2657(v17426, v17427, v17428, v17429, v17430, v17431, v17432, v17777, 1, v17433, v17435, v17436, 0, v17439, v17440, v17441, v17442, v17443, v17449, v17444, v17450, v17445, v17451, v17452, v17453, v17454, v17455, v17456, v17457, v17458, v17446, v17447, v17448, 3, 7, 4, 2, 5, 8) -> f_2662(v17426, v17427, v17428, v17429, v17430, v17431, v17432, v17777, 1, v17433, v17435, v17436, 0, v17439, v17440, v17441, v17442, v17443, v17449, v17444, v17450, v17445, v17451, v17452, v17453, v17454, v17455, v17456, v17457, v17458, v17446, v17447, v17448, 3, 7, 4, 5, 8, 12, 2) :|: v17777 < v17427 && 3 <= v17427 && 12 <= v17452
f_2662(v17426, v17427, v17428, v17429, v17430, v17431, v17432, v17777, 1, v17433, v17435, v17436, 0, v17439, v17440, v17441, v17442, v17443, v17449, v17444, v17450, v17445, v17451, v17452, v17453, v17454, v17455, v17456, v17457, v17458, v17446, v17447, v17448, 3, 7, 4, 5, 8, 12, 2) -> f_2668(v17426, v17427, v17428, v17429, v17430, v17431, v17432, v17777, 1, v17433, v17435, v17436, 0, v17439, v17440, v17441, v17442, v17443, v17449, v17444, v17450, v17445, v17451, v17452, v17453, v17454, v17455, v17456, v17457, v17458, v17446, v17447, v17448, 3, 7, 4, 5, 8, 12, 2) :|: 0 = 0
f_2668(v17426, v17427, v17428, v17429, v17430, v17431, v17432, v17777, 1, v17433, v17435, v17436, 0, v17439, v17440, v17441, v17442, v17443, v17449, v17444, v17450, v17445, v17451, v17452, v17453, v17454, v17455, v17456, v17457, v17458, v17446, v17447, v17448, 3, 7, 4, 5, 8, 12, 2) -> f_2674(v17426, v17427, v17428, v17429, v17430, v17431, v17432, v17777, 1, v17433, v17435, v17436, 0, v17439, v17440, v17441, v17442, v17443, v17449, v17444, v17450, v17445, v17451, v17452, v17453, v17454, v17455, v17456, v17457, v17458, v17446, v17447, v17448, 3, 7, 4, 5, 8, 12, 2) :|: TRUE
f_2674(v17426, v17427, v17428, v17429, v17430, v17431, v17432, v17777, 1, v17433, v17435, v17436, 0, v17439, v17440, v17441, v17442, v17443, v17449, v17444, v17450, v17445, v17451, v17452, v17453, v17454, v17455, v17456, v17457, v17458, v17446, v17447, v17448, 3, 7, 4, 5, 8, 12, 2) -> f_2680(v17426, v17427, v17428, v17429, v17430, v17431, v17432, v17777, 1, v17433, v17435, v17436, 0, v17439, v17440, v17441, v17442, v17443, v17449, v17444, v17450, v17445, v17451, v17452, v17453, v17454, v17455, v17456, v17457, v17458, v17446, v17447, v17448, 3, 7, 4, 5, 8, 12, 2) :|: TRUE
f_2680(v17426, v17427, v17428, v17429, v17430, v17431, v17432, v17777, 1, v17433, v17435, v17436, 0, v17439, v17440, v17441, v17442, v17443, v17449, v17444, v17450, v17445, v17451, v17452, v17453, v17454, v17455, v17456, v17457, v17458, v17446, v17447, v17448, 3, 7, 4, 5, 8, 12, 2) -> f_2686(v17426, v17427, v17428, v17429, v17430, v17431, v17432, v17777, 1, v17433, v17435, v17436, 0, v17439, v17440, v17441, v17442, v17443, v17449, v17444, v17450, v17445, v17451, v17452, v17453, v17454, v17455, v17456, v17457, v17458, v17446, v17447, v17448, 3, 7, 4, 5, 8, 12, 2) :|: 0 = 0
f_2686(v17426, v17427, v17428, v17429, v17430, v17431, v17432, v17777, 1, v17433, v17435, v17436, 0, v17439, v17440, v17441, v17442, v17443, v17449, v17444, v17450, v17445, v17451, v17452, v17453, v17454, v17455, v17456, v17457, v17458, v17446, v17447, v17448, 3, 7, 4, 5, 8, 12, 2) -> f_2691(v17426, v17427, v17428, v17429, v17430, v17431, v17432, v17777, 1, v17433, v17435, v17436, 0, v17439, v17440, v17441, v17442, v17443, v17449, v17444, v17450, v17445, v17451, v17452, v17453, v17454, v17455, v17456, v17457, v17458, v17446, v17447, v17448, 3, 7, 4, 5, 8, 12, 2) :|: 0 = 0
f_2691(v17426, v17427, v17428, v17429, v17430, v17431, v17432, v17777, 1, v17433, v17435, v17436, 0, v17439, v17440, v17441, v17442, v17443, v17449, v17444, v17450, v17445, v17451, v17452, v17453, v17454, v17455, v17456, v17457, v17458, v17446, v17447, v17448, 3, 7, 4, 5, 8, 12, 2) -> f_2695(v17426, v17427, v17428, v17429, v17430, v17431, v17432, v17777, 1, v17435, v17436, 0, v17433, v17439, v17440, v17441, v17442, v17443, v17449, v17444, v17450, v17445, v17451, v17452, v17453, v17454, v17455, v17456, v17457, v17458, v17446, v17447, v17448, 3, 7, 4, 5, 8, 12, 2) :|: 0 = 0
f_2695(v17426, v17427, v17428, v17429, v17430, v17431, v17432, v17777, 1, v17435, v17436, 0, v17433, v17439, v17440, v17441, v17442, v17443, v17449, v17444, v17450, v17445, v17451, v17452, v17453, v17454, v17455, v17456, v17457, v17458, v17446, v17447, v17448, 3, 7, 4, 5, 8, 12, 2) -> f_2699(v17426, v17427, v17428, v17429, v17430, v17431, v17432, v17777, 1, v18521, v17436, 0, v17433, v17435, v17439, v17440, v17441, v17442, v17443, v17449, v17444, v17450, v17445, v17451, v17452, v17453, v17454, v17455, v17456, v17457, v17458, v17446, v17447, v17448, 3, 7, 4, 5, 8, 12, 2, 9) :|: v18521 = v17426 + 4 * v17777 && 9 <= v18521
f_2699(v17426, v17427, v17428, v17429, v17430, v17431, v17432, v17777, 1, v18521, v17436, 0, v17433, v17435, v17439, v17440, v17441, v17442, v17443, v17449, v17444, v17450, v17445, v17451, v17452, v17453, v17454, v17455, v17456, v17457, v17458, v17446, v17447, v17448, 3, 7, 4, 5, 8, 12, 2, 9) -> f_2703(v17426, v17427, v17428, v17429, v17430, v17431, v17432, v17777, 1, v18521, v18523, 0, v17433, v17435, v17439, v17440, v17441, v17442, v17443, v17449, v17444, v17450, v17445, v17451, v17452, v17453, v17454, v17455, v17456, v17457, v17458, v17446, v17447, v17448, 3, 7, 4, 5, 8, 12, 2, 9) :|: TRUE
f_2703(v17426, v17427, v17428, v17429, v17430, v17431, v17432, v17777, 1, v18521, v18523, 0, v17433, v17435, v17439, v17440, v17441, v17442, v17443, v17449, v17444, v17450, v17445, v17451, v17452, v17453, v17454, v17455, v17456, v17457, v17458, v17446, v17447, v17448, 3, 7, 4, 5, 8, 12, 2, 9) -> f_2709(v17426, v17427, v17428, v17429, v17430, v17431, v17432, v17777, 1, v18521, v18523, 0, v17433, v17435, v17439, v17440, v17441, v17442, v17443, v17449, v17444, v17450, v17445, v17451, v17452, v17453, v17454, v17455, v17456, v17457, v17458, v17446, v17447, v17448, 3, 7, 4, 5, 8, 12, 2, 9) :|: 0 <= v18523
f_2709(v17426, v17427, v17428, v17429, v17430, v17431, v17432, v17777, 1, v18521, v18523, 0, v17433, v17435, v17439, v17440, v17441, v17442, v17443, v17449, v17444, v17450, v17445, v17451, v17452, v17453, v17454, v17455, v17456, v17457, v17458, v17446, v17447, v17448, 3, 7, 4, 5, 8, 12, 2, 9) -> f_2716(v17426, v17427, v17428, v17429, v17430, v17431, v17432, v17777, 1, v18521, v18523, 0, v17433, v17435, v17439, v17440, v17441, v17442, v17443, v17449, v17444, v17450, v17445, v17451, v17452, v17453, v17454, v17455, v17456, v17457, v17458, v17446, v17447, v17448, 3, 7, 4, 5, 8, 12, 2, 9) :|: 0 = 0
f_2716(v17426, v17427, v17428, v17429, v17430, v17431, v17432, v17777, 1, v18521, v18523, 0, v17433, v17435, v17439, v17440, v17441, v17442, v17443, v17449, v17444, v17450, v17445, v17451, v17452, v17453, v17454, v17455, v17456, v17457, v17458, v17446, v17447, v17448, 3, 7, 4, 5, 8, 12, 2, 9) -> f_2723(v17426, v17427, v17428, v17429, v17430, v17431, v17432, v17777, 1, v18521, v18523, 0, v17433, v17435, v17439, v17440, v17441, v17442, v17443, v17449, v17444, v17450, v17445, v17451, v17452, v17453, v17454, v17455, v17456, v17457, v17458, v17446, v17447, v17448, 3, 7, 4, 5, 8, 12, 2, 9) :|: TRUE
f_2723(v17426, v17427, v17428, v17429, v17430, v17431, v17432, v17777, 1, v18521, v18523, 0, v17433, v17435, v17439, v17440, v17441, v17442, v17443, v17449, v17444, v17450, v17445, v17451, v17452, v17453, v17454, v17455, v17456, v17457, v17458, v17446, v17447, v17448, 3, 7, 4, 5, 8, 12, 2, 9) -> f_2730(v17426, v17427, v17428, v17429, v17430, v17431, v17432, v17777, 1, v18521, v18523, 0, v17433, v17435, v17439, v17440, v17441, v17442, v17443, v17449, v17444, v17450, v17445, v17451, v17452, v17453, v17454, v17455, v17456, v17457, v17458, v17446, v17447, v17448, 3, 7, 4, 5, 8, 12, 2, 9) :|: TRUE
f_2730(v17426, v17427, v17428, v17429, v17430, v17431, v17432, v17777, 1, v18521, v18523, 0, v17433, v17435, v17439, v17440, v17441, v17442, v17443, v17449, v17444, v17450, v17445, v17451, v17452, v17453, v17454, v17455, v17456, v17457, v17458, v17446, v17447, v17448, 3, 7, 4, 5, 8, 12, 2, 9) -> f_2584(v17426, v17427, v17428, v17429, v17430, v17431, v17432, v17777, 1, v18521, v18523, 0, v17433, v17435, v17439, v17440, v17441, v17442, v17443, v17449, v17444, v17450, v17445, v17451, v17452, v17453, v17454, v17455, v17456, v17457, v16843, v16844, v16845, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2584(v16822, v16823, v16824, v16825, v16826, v16827, v16828, v16829, 1, v16831, v16832, 0, v16834, v16835, v16836, v16837, v16838, v16839, v16840, v16846, v16841, v16847, v16842, v16848, v16849, v16850, v16851, v16852, v16853, v16854, v16843, v16844, v16845, 3, 7, 4, 2, 5, 8) -> f_2590(v16822, v16823, v16824, v16825, v16826, v16827, v16828, v16829, 1, v16831, v16832, 0, v16834, v16835, v16836, v16837, v16838, v16839, v16840, v16846, v16841, v16847, v16842, v16848, v16849, v16850, v16851, v16852, v16853, v16854, v16843, v16844, v16845, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2590(v16822, v16823, v16824, v16825, v16826, v16827, v16828, v16829, 1, v16831, v16832, 0, v16834, v16835, v16836, v16837, v16838, v16839, v16840, v16846, v16841, v16847, v16842, v16848, v16849, v16850, v16851, v16852, v16853, v16854, v16843, v16844, v16845, 3, 7, 4, 2, 5, 8) -> f_2594(v16822, v16823, v16824, v16825, v16826, v16827, v16828, v16829, 1, v16831, v16832, 0, v16834, v16835, v16836, v16837, v16838, v16839, v16840, v16846, v16841, v16847, v16842, v16848, v16849, v16850, v16851, v16852, v16853, v16854, v16843, v16844, v16845, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2594(v16822, v16823, v16824, v16825, v16826, v16827, v16828, v16829, 1, v16831, v16832, 0, v16834, v16835, v16836, v16837, v16838, v16839, v16840, v16846, v16841, v16847, v16842, v16848, v16849, v16850, v16851, v16852, v16853, v16854, v16843, v16844, v16845, 3, 7, 4, 2, 5, 8) -> f_2598(v16822, v16823, v16824, v16825, v16826, v16827, v16828, v16829, 1, v16831, v16832, 0, v16835, v16836, v16837, v16838, v16839, v16834, v16840, v16846, v16841, v16847, v16842, v16848, v16849, v16850, v16851, v16852, v16853, v16854, v16843, v16844, v16845, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2598(v16822, v16823, v16824, v16825, v16826, v16827, v16828, v16829, 1, v16831, v16832, 0, v16835, v16836, v16837, v16838, v16839, v16834, v16840, v16846, v16841, v16847, v16842, v16848, v16849, v16850, v16851, v16852, v16853, v16854, v16843, v16844, v16845, 3, 7, 4, 2, 5, 8) -> f_2602(v16822, v16823, v16824, v16825, v16826, v16827, v16828, v16829, 1, v16831, v16832, 0, v16836, v16837, v16838, v16839, v16834, v16840, v16846, v16841, v16847, v16842, v16848, v16849, v16850, v16851, v16852, v16853, v16854, v16835, v16843, v16844, v16845, 3, 7, 4, 2, 5, 8) :|: v16831 = v16822 + 4 * v16829
f_2602(v16822, v16823, v16824, v16825, v16826, v16827, v16828, v16829, 1, v16831, v16832, 0, v16836, v16837, v16838, v16839, v16834, v16840, v16846, v16841, v16847, v16842, v16848, v16849, v16850, v16851, v16852, v16853, v16854, v16835, v16843, v16844, v16845, 3, 7, 4, 2, 5, 8) -> f_2606(v16822, v16823, v16824, v16825, v16826, v16827, v16828, v16829, 1, v16831, v16832, 0, v16836, v16837, v16838, v16839, v16834, v16840, v16846, v16841, v16847, v16842, v16848, v16849, v16850, v16851, v16852, v16853, v16854, v16835, v16843, v16844, v16845, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2606(v16822, v16823, v16824, v16825, v16826, v16827, v16828, v16829, 1, v16831, v16832, 0, v16836, v16837, v16838, v16839, v16834, v16840, v16846, v16841, v16847, v16842, v16848, v16849, v16850, v16851, v16852, v16853, v16854, v16835, v16843, v16844, v16845, 3, 7, 4, 2, 5, 8) -> f_2611(v16822, v16823, v16824, v16825, v16826, v16827, v16828, v16829, 1, v16831, v16832, 0, v16836, v16837, v16838, v16839, v16834, v16840, v16846, v16841, v16847, v16842, v16848, v16849, v16850, v16851, v16852, v16853, v16854, v16835, v16843, v16844, v16845, 3, 7, 4, 2, 5, 8) :|: 0 < v16832
f_2606(v16822, v16823, v16824, v16825, v16826, v16827, v16828, v16829, 1, v16831, v16832, 0, v16836, v16837, v16838, v16839, v16834, v16840, v16846, v16841, v16847, v16842, v16848, v16849, v16850, v16851, v16852, v16853, v16854, v16835, v16843, v16844, v16845, 3, 7, 4, 2, 5, 8) -> f_2612(v16822, v16823, v16824, v16825, v16826, v16827, v16828, v16829, 1, v16831, 0, v16836, v16837, v16838, v16839, v16834, v16840, v16846, v16841, v16847, v16842, v16848, v16849, v16850, v16851, v16852, v16853, v16854, v16835, v16843, v16844, v16845, 3, 7, 4, 2, 5, 8) :|: v16832 <= 0
f_2611(v16822, v16823, v16824, v16825, v16826, v16827, v16828, v16829, 1, v16831, v16832, 0, v16836, v16837, v16838, v16839, v16834, v16840, v16846, v16841, v16847, v16842, v16848, v16849, v16850, v16851, v16852, v16853, v16854, v16835, v16843, v16844, v16845, 3, 7, 4, 2, 5, 8) -> f_2618(v16822, v16823, v16824, v16825, v16826, v16827, v16828, v16829, 1, v16831, v16832, 0, v16836, v16837, v16838, v16839, v16834, v16840, v16846, v16841, v16847, v16842, v16848, v16849, v16850, v16851, v16852, v16853, v16854, v16835, v16843, v16844, v16845, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2618(v16822, v16823, v16824, v16825, v16826, v16827, v16828, v16829, 1, v16831, v16832, 0, v16836, v16837, v16838, v16839, v16834, v16840, v16846, v16841, v16847, v16842, v16848, v16849, v16850, v16851, v16852, v16853, v16854, v16835, v16843, v16844, v16845, 3, 7, 4, 2, 5, 8) -> f_2626(v16822, v16823, v16824, v16825, v16826, v16827, v16828, v16829, 1, v16831, v16832, 0, v16836, v16837, v16838, v16839, v16834, v16840, v16846, v16841, v16847, v16842, v16848, v16849, v16850, v16851, v16852, v16853, v16854, v16835, v16843, v16844, v16845, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2626(v16822, v16823, v16824, v16825, v16826, v16827, v16828, v16829, 1, v16831, v16832, 0, v16836, v16837, v16838, v16839, v16834, v16840, v16846, v16841, v16847, v16842, v16848, v16849, v16850, v16851, v16852, v16853, v16854, v16835, v16843, v16844, v16845, 3, 7, 4, 2, 5, 8) -> f_2379(v16822, v16823, v16824, v16825, v16826, v16827, v16828, v16829, 1, v16831, v16832, 0, v16832, v16836, v16837, 1, 0, v16838, v16839, v16834, v16840, v16846, v16841, v16847, v16842, v16848, v16849, v16850, v16851, v16852, v16853, v16854, v12525, v12513, v12514, v12515, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2612(v16822, v16823, v16824, v16825, v16826, v16827, v16828, v16829, 1, v16831, 0, v16836, v16837, v16838, v16839, v16834, v16840, v16846, v16841, v16847, v16842, v16848, v16849, v16850, v16851, v16852, v16853, v16854, v16835, v16843, v16844, v16845, 3, 7, 4, 2, 5, 8) -> f_2619(v16822, v16823, v16824, v16825, v16826, v16827, v16828, v16829, 1, v16831, 0, v16836, v16837, v16838, v16839, v16834, v16840, v16846, v16841, v16847, v16842, v16848, v16849, v16850, v16851, v16852, v16853, v16854, v16835, v16843, v16844, v16845, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2619(v16822, v16823, v16824, v16825, v16826, v16827, v16828, v16829, 1, v16831, 0, v16836, v16837, v16838, v16839, v16834, v16840, v16846, v16841, v16847, v16842, v16848, v16849, v16850, v16851, v16852, v16853, v16854, v16835, v16843, v16844, v16845, 3, 7, 4, 2, 5, 8) -> f_2627(v16822, v16823, v16824, v16825, v16826, v16827, v16828, v16829, 1, v16831, 0, v16836, v16837, v16838, v16839, v16834, v16840, v16846, v16841, v16847, v16842, v16848, v16849, v16850, v16851, v16852, v16853, v16854, v16835, v16843, v16844, v16845, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2627(v16822, v16823, v16824, v16825, v16826, v16827, v16828, v16829, 1, v16831, 0, v16836, v16837, v16838, v16839, v16834, v16840, v16846, v16841, v16847, v16842, v16848, v16849, v16850, v16851, v16852, v16853, v16854, v16835, v16843, v16844, v16845, 3, 7, 4, 2, 5, 8) -> f_2628(v16822, v16823, v16824, v16825, v16826, v16827, v16828, v16829, 1, v16831, 0, 0, v16834, v16836, v16837, v16838, v16839, v16840, v16846, v16841, v16847, v16842, v16848, v16849, v16850, v16851, v16852, v16853, v16854, v17458, v17446, v17447, v17448, 3, 7, 4, 2, 5, 8) :|: TRUE
Combined rules. Obtained 4 rulesP rules:
f_2321(v11983:0, v11984:0, v11985:0, v11986:0, v11987:0, v11988:0, v11989:0, v11990:0, 1, v11983:0 + 4 * v11990:0, v11993:0, 0, 1, v11996:0, 0, v11998:0, v11999:0, v12000:0, v12006:0, v12001:0, v12007:0, v12002:0, v12008:0, v12009:0, v12010:0, v12011:0, v12012:0, v12013:0, v12014:0, v12015:0, v12003:0, v12004:0, v12005:0, 3, 7, 4, 2, 5, 8) -> f_2606(v11983:0, v11984:0, v11985:0, v11986:0, v11987:0, v11988:0, v11989:0, 1 + v11990:0, 1, v11983:0 + 4 * (1 + v11990:0), v18523:0, 0, v11990:0, v11983:0 + 4 * v11990:0, v11998:0, v11999:0, v11990:0, v12000:0, v12006:0, v12001:0, v12007:0, v12002:0, v12008:0, v12009:0, v12010:0, v12011:0, v12012:0, v12013:0, v12014:0, v11983:0 + 4 * v11990:0, v16843:0, v16844:0, v16845:0, 3, 7, 4, 2, 5, 8) :|: v11990:0 > 0 && v11984:0 > 2 && v11984:0 > 1 + v11990:0 && v12009:0 > 11 && v18523:0 > -1 && v11983:0 + 4 * (1 + v11990:0) > 8
f_2606(v16822:0, v16823:0, v16824:0, v16825:0, v16826:0, v16827:0, v16828:0, v16829:0, 1, v16822:0 + 4 * v16829:0, 1 + v13734:0, 0, v16836:0, v16837:0, v16838:0, v16839:0, v16834:0, v16840:0, v16846:0, v16841:0, v16847:0, v16842:0, v16848:0, v16849:0, v16850:0, v16851:0, v16852:0, v16853:0, v16854:0, v16835:0, v16843:0, v16844:0, v16845:0, 3, 7, 4, 2, 5, 8) -> f_2321(v16822:0, v16823:0, v16824:0, v16825:0, v16826:0, v16827:0, v16828:0, v16829:0, 1, v16822:0 + 4 * v16829:0, 1 + v13734:0, 0, 1 + v13734:0, v16834:0, v13734:0, v16839:0, 1 + v16839:0, v16840:0, v16846:0, v16841:0, v16847:0, v16842:0, v16848:0, v16849:0, v16850:0, v16851:0, v16852:0, v16853:0, v16854:0, v12015:0, v12003:0, v12004:0, v12005:0, 3, 7, 4, 2, 5, 8) :|: v13734:0 > -1 && v16839:0 > 0
f_2606(v16822:0, v16823:0, v16824:0, v16825:0, v16826:0, v16827:0, v16828:0, v16829:0, 1, v16831:0, v16832:0, 0, v16836:0, v16837:0, v16838:0, v16839:0, v16834:0, v16840:0, v16846:0, v16841:0, v16847:0, v16842:0, v16848:0, v16849:0, v16850:0, v16851:0, v16852:0, v16853:0, v16854:0, v16835:0, v16843:0, v16844:0, v16845:0, 3, 7, 4, 2, 5, 8) -> f_2606(v16822:0, v16823:0, v16824:0, v16825:0, v16826:0, v16827:0, v16828:0, 1 + v16829:0, 1, v16822:0 + 4 * (1 + v16829:0), v18523:0, 0, v16836:0, v16837:0, v16838:0, v16839:0, v16829:0, v16840:0, v16846:0, v16841:0, v16847:0, v16842:0, v16848:0, v16849:0, v16850:0, v16851:0, v16852:0, v16853:0, v16854:0, v16831:0, v16843:1, v16844:1, v16845:1, 3, 7, 4, 2, 5, 8) :|: v16829:0 > 0 && v16823:0 > 2 && v16823:0 > 1 + v16829:0 && v16849:0 > 11 && v16822:0 + 4 * (1 + v16829:0) > 8 && v16832:0 < 1 && v18523:0 > -1
f_2321(v11983:0, v11984:0, v11985:0, v11986:0, v11987:0, v11988:0, v11989:0, v11990:0, 1, v11983:0 + 4 * v11990:0, v11993:0, 0, v11995:0, v11996:0, 1 + v13734:0, v11998:0, v11999:0, v12000:0, v12006:0, v12001:0, v12007:0, v12002:0, v12008:0, v12009:0, v12010:0, v12011:0, v12012:0, v12013:0, v12014:0, v12015:0, v12003:0, v12004:0, v12005:0, 3, 7, 4, 2, 5, 8) -> f_2321(v11983:0, v11984:0, v11985:0, v11986:0, v11987:0, v11988:0, v11989:0, v11990:0, 1, v11983:0 + 4 * v11990:0, v11993:0, 0, 1 + v13734:0, v11996:0, v13734:0, v11999:0, 1 + v11999:0, v12000:0, v12006:0, v12001:0, v12007:0, v12002:0, v12008:0, v12009:0, v12010:0, v12011:0, v12012:0, v12013:0, v12014:0, v12015:1, v12003:1, v12004:1, v12005:1, 3, 7, 4, 2, 5, 8) :|: v11995:0 > 1 && v13734:0 > -1 && v11999:0 > 0
Filtered unneeded arguments:
   f_2321(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39) -> f_2321(x1, x2, x8, x10, x13, x15, x17, x24)
   f_2606(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39) -> f_2606(x1, x2, x8, x10, x11, x16, x24)
Removed division, modulo operations, cleaned up constraints. Obtained 4 rules.P rules:
f_2321(v11983:0, v11984:0, v11990:0, sum~v11983:0~times~cons_4~v11990:0, cons_1, cons_0, v11999:0, v12009:0) -> f_2606(v11983:0, v11984:0, 1 + v11990:0, v11983:0 + (4 + 4 * v11990:0), v18523:0, v11999:0, v12009:0) :|: v11984:0 > 2 && v11990:0 > 0 && v11984:0 > 1 + v11990:0 && v12009:0 > 11 && v11983:0 + (4 + 4 * v11990:0) > 8 && v18523:0 > -1 && sum~v11983:0~times~cons_4~v11990:0 = v11983:0 + 4 * v11990:0 && cons_1 = 1 && cons_0 = 0
f_2606(v16822:0, v16823:0, v16829:0, sum~v16822:0~times~cons_4~v16829:0, sum~cons_1~v13734:0, v16839:0, v16849:0) -> f_2321(v16822:0, v16823:0, v16829:0, v16822:0 + 4 * v16829:0, 1 + v13734:0, v13734:0, 1 + v16839:0, v16849:0) :|: v13734:0 > -1 && v16839:0 > 0 && sum~v16822:0~times~cons_4~v16829:0 = v16822:0 + 4 * v16829:0 && sum~cons_1~v13734:0 = 1 + v13734:0
f_2606(v16822:0, v16823:0, v16829:0, v16831:0, v16832:0, v16839:0, v16849:0) -> f_2606(v16822:0, v16823:0, 1 + v16829:0, v16822:0 + (4 + 4 * v16829:0), v18523:0, v16839:0, v16849:0) :|: v16823:0 > 2 && v16829:0 > 0 && v16823:0 > 1 + v16829:0 && v16849:0 > 11 && v16822:0 + (4 + 4 * v16829:0) > 8 && v18523:0 > -1 && v16832:0 < 1
f_2321(v11983:0, v11984:0, v11990:0, sum~v11983:0~times~cons_4~v11990:0, v11995:0, sum~cons_1~v13734:0, v11999:0, v12009:0) -> f_2321(v11983:0, v11984:0, v11990:0, v11983:0 + 4 * v11990:0, 1 + v13734:0, v13734:0, 1 + v11999:0, v12009:0) :|: v13734:0 > -1 && v11999:0 > 0 && v11995:0 > 1 && sum~v11983:0~times~cons_4~v11990:0 = v11983:0 + 4 * v11990:0 && sum~cons_1~v13734:0 = 1 + v13734:0

----------------------------------------

(47)
Obligation:
Rules:
f_2321(v11983:0, v11984:0, v11990:0, sum~v11983:0~times~cons_4~v11990:0, cons_1, cons_0, v11999:0, v12009:0) -> f_2606(v11983:0, v11984:0, 1 + v11990:0, v11983:0 + (4 + 4 * v11990:0), v18523:0, v11999:0, v12009:0) :|: v11984:0 > 2 && v11990:0 > 0 && v11984:0 > 1 + v11990:0 && v12009:0 > 11 && v11983:0 + (4 + 4 * v11990:0) > 8 && v18523:0 > -1 && sum~v11983:0~times~cons_4~v11990:0 = v11983:0 + 4 * v11990:0 && cons_1 = 1 && cons_0 = 0
f_2606(v16822:0, v16823:0, v16829:0, sum~v16822:0~times~cons_4~v16829:0, sum~cons_1~v13734:0, v16839:0, v16849:0) -> f_2321(v16822:0, v16823:0, v16829:0, v16822:0 + 4 * v16829:0, 1 + v13734:0, v13734:0, 1 + v16839:0, v16849:0) :|: v13734:0 > -1 && v16839:0 > 0 && sum~v16822:0~times~cons_4~v16829:0 = v16822:0 + 4 * v16829:0 && sum~cons_1~v13734:0 = 1 + v13734:0
f_2606(x, x1, x2, x3, x4, x5, x6) -> f_2606(x, x1, 1 + x2, x + (4 + 4 * x2), x7, x5, x6) :|: x1 > 2 && x2 > 0 && x1 > 1 + x2 && x6 > 11 && x + (4 + 4 * x2) > 8 && x7 > -1 && x4 < 1
f_2321(x8, x9, x10, x11, x12, x13, x14, x15) -> f_2321(x8, x9, x10, x8 + 4 * x10, 1 + x16, x16, 1 + x14, x15) :|: x16 > -1 && x14 > 0 && x12 > 1 && x11 = x8 + 4 * x10 && x13 = 1 + x16

----------------------------------------

(48) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(49)
Obligation:
Rules:
f_2321(x8:0, x9:0, x10:0, sum~x8:0~times~cons_4~x10:0, x12:0, sum~cons_1~x16:0, x14:0, x15:0) -> f_2321(x8:0, x9:0, x10:0, x8:0 + 4 * x10:0, 1 + x16:0, x16:0, 1 + x14:0, x15:0) :|: x16:0 > -1 && x14:0 > 0 && x12:0 > 1 && sum~x8:0~times~cons_4~x10:0 = x8:0 + 4 * x10:0 && sum~cons_1~x16:0 = 1 + x16:0
f_2606(v16822:0:0, v16823:0:0, v16829:0:0, sum~v16822:0:0~times~cons_4~v16829:0:0, sum~cons_1~v13734:0:0, v16839:0:0, v16849:0:0) -> f_2321(v16822:0:0, v16823:0:0, v16829:0:0, v16822:0:0 + 4 * v16829:0:0, 1 + v13734:0:0, v13734:0:0, 1 + v16839:0:0, v16849:0:0) :|: v13734:0:0 > -1 && v16839:0:0 > 0 && sum~v16822:0:0~times~cons_4~v16829:0:0 = v16822:0:0 + 4 * v16829:0:0 && sum~cons_1~v13734:0:0 = 1 + v13734:0:0
f_2321(v11983:0:0, v11984:0:0, v11990:0:0, sum~v11983:0:0~times~cons_4~v11990:0:0, cons_1, cons_0, v11999:0:0, v12009:0:0) -> f_2606(v11983:0:0, v11984:0:0, 1 + v11990:0:0, v11983:0:0 + (4 + 4 * v11990:0:0), v18523:0:0, v11999:0:0, v12009:0:0) :|: v11983:0:0 + (4 + 4 * v11990:0:0) > 8 && v18523:0:0 > -1 && v12009:0:0 > 11 && v11984:0:0 > 1 + v11990:0:0 && v11990:0:0 > 0 && v11984:0:0 > 2 && sum~v11983:0:0~times~cons_4~v11990:0:0 = v11983:0:0 + 4 * v11990:0:0 && cons_1 = 1 && cons_0 = 0
f_2606(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0) -> f_2606(x:0, x1:0, 1 + x2:0, x:0 + (4 + 4 * x2:0), x7:0, x5:0, x6:0) :|: x7:0 > -1 && x4:0 < 1 && x:0 + (4 + 4 * x2:0) > 8 && x6:0 > 11 && x1:0 > 1 + x2:0 && x2:0 > 0 && x1:0 > 2

----------------------------------------

(50) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_2321(x, x1, x2, x3, x4, x5, x6, x7)] = -1 + x + 5*x1 - x2 + x7
[f_2606(x8, x9, x10, x11, x12, x13, x14)] = -1 - x10 + x14 + x8 + 5*x9

The following rules are decreasing:
f_2321(v11983:0:0, v11984:0:0, v11990:0:0, sum~v11983:0:0~times~cons_4~v11990:0:0, cons_1, cons_0, v11999:0:0, v12009:0:0) -> f_2606(v11983:0:0, v11984:0:0, 1 + v11990:0:0, v11983:0:0 + (4 + 4 * v11990:0:0), v18523:0:0, v11999:0:0, v12009:0:0) :|: v11983:0:0 + (4 + 4 * v11990:0:0) > 8 && v18523:0:0 > -1 && v12009:0:0 > 11 && v11984:0:0 > 1 + v11990:0:0 && v11990:0:0 > 0 && v11984:0:0 > 2 && sum~v11983:0:0~times~cons_4~v11990:0:0 = v11983:0:0 + 4 * v11990:0:0 && cons_1 = 1 && cons_0 = 0
f_2606(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0) -> f_2606(x:0, x1:0, 1 + x2:0, x:0 + (4 + 4 * x2:0), x7:0, x5:0, x6:0) :|: x7:0 > -1 && x4:0 < 1 && x:0 + (4 + 4 * x2:0) > 8 && x6:0 > 11 && x1:0 > 1 + x2:0 && x2:0 > 0 && x1:0 > 2
The following rules are bounded:
f_2321(v11983:0:0, v11984:0:0, v11990:0:0, sum~v11983:0:0~times~cons_4~v11990:0:0, cons_1, cons_0, v11999:0:0, v12009:0:0) -> f_2606(v11983:0:0, v11984:0:0, 1 + v11990:0:0, v11983:0:0 + (4 + 4 * v11990:0:0), v18523:0:0, v11999:0:0, v12009:0:0) :|: v11983:0:0 + (4 + 4 * v11990:0:0) > 8 && v18523:0:0 > -1 && v12009:0:0 > 11 && v11984:0:0 > 1 + v11990:0:0 && v11990:0:0 > 0 && v11984:0:0 > 2 && sum~v11983:0:0~times~cons_4~v11990:0:0 = v11983:0:0 + 4 * v11990:0:0 && cons_1 = 1 && cons_0 = 0
f_2606(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0) -> f_2606(x:0, x1:0, 1 + x2:0, x:0 + (4 + 4 * x2:0), x7:0, x5:0, x6:0) :|: x7:0 > -1 && x4:0 < 1 && x:0 + (4 + 4 * x2:0) > 8 && x6:0 > 11 && x1:0 > 1 + x2:0 && x2:0 > 0 && x1:0 > 2

----------------------------------------

(51)
Obligation:
Rules:
f_2321(x8:0, x9:0, x10:0, sum~x8:0~times~cons_4~x10:0, x12:0, sum~cons_1~x16:0, x14:0, x15:0) -> f_2321(x8:0, x9:0, x10:0, x8:0 + 4 * x10:0, 1 + x16:0, x16:0, 1 + x14:0, x15:0) :|: x16:0 > -1 && x14:0 > 0 && x12:0 > 1 && sum~x8:0~times~cons_4~x10:0 = x8:0 + 4 * x10:0 && sum~cons_1~x16:0 = 1 + x16:0
f_2606(v16822:0:0, v16823:0:0, v16829:0:0, sum~v16822:0:0~times~cons_4~v16829:0:0, sum~cons_1~v13734:0:0, v16839:0:0, v16849:0:0) -> f_2321(v16822:0:0, v16823:0:0, v16829:0:0, v16822:0:0 + 4 * v16829:0:0, 1 + v13734:0:0, v13734:0:0, 1 + v16839:0:0, v16849:0:0) :|: v13734:0:0 > -1 && v16839:0:0 > 0 && sum~v16822:0:0~times~cons_4~v16829:0:0 = v16822:0:0 + 4 * v16829:0:0 && sum~cons_1~v13734:0:0 = 1 + v13734:0:0

----------------------------------------

(52) TerminationGraphProcessor (EQUIVALENT)
Constructed the termination graph and obtained one non-trivial SCC.

----------------------------------------

(53)
Obligation:
Rules:
f_2321(x8:0, x9:0, x10:0, sum~x8:0~times~cons_4~x10:0, x12:0, sum~cons_1~x16:0, x14:0, x15:0) -> f_2321(x8:0, x9:0, x10:0, x8:0 + 4 * x10:0, 1 + x16:0, x16:0, 1 + x14:0, x15:0) :|: x16:0 > -1 && x14:0 > 0 && x12:0 > 1 && sum~x8:0~times~cons_4~x10:0 = x8:0 + 4 * x10:0 && sum~cons_1~x16:0 = 1 + x16:0

----------------------------------------

(54) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(55)
Obligation:
Rules:
f_2321(x8:0:0, x9:0:0, x10:0:0, sum~x8:0:0~times~cons_4~x10:0:0, x12:0:0, sum~cons_1~x16:0:0, x14:0:0, x15:0:0) -> f_2321(x8:0:0, x9:0:0, x10:0:0, x8:0:0 + 4 * x10:0:0, 1 + x16:0:0, x16:0:0, 1 + x14:0:0, x15:0:0) :|: x16:0:0 > -1 && x14:0:0 > 0 && x12:0:0 > 1 && sum~x8:0:0~times~cons_4~x10:0:0 = x8:0:0 + 4 * x10:0:0 && sum~cons_1~x16:0:0 = 1 + x16:0:0

----------------------------------------

(56) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_2321(x1, x2, x3, x4, x5, x6, x7, x8) -> f_2321(x1, x3, x4, x5, x6, x7)

----------------------------------------

(57)
Obligation:
Rules:
f_2321(x8:0:0, x10:0:0, sum~x8:0:0~times~cons_4~x10:0:0, x12:0:0, sum~cons_1~x16:0:0, x14:0:0) -> f_2321(x8:0:0, x10:0:0, x8:0:0 + 4 * x10:0:0, 1 + x16:0:0, x16:0:0, 1 + x14:0:0) :|: x16:0:0 > -1 && x14:0:0 > 0 && x12:0:0 > 1 && sum~x8:0:0~times~cons_4~x10:0:0 = x8:0:0 + 4 * x10:0:0 && sum~cons_1~x16:0:0 = 1 + x16:0:0

----------------------------------------

(58) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_2321(x, x1, x2, x3, x4, x5)] = x4

The following rules are decreasing:
f_2321(x8:0:0, x10:0:0, sum~x8:0:0~times~cons_4~x10:0:0, x12:0:0, sum~cons_1~x16:0:0, x14:0:0) -> f_2321(x8:0:0, x10:0:0, x8:0:0 + 4 * x10:0:0, 1 + x16:0:0, x16:0:0, 1 + x14:0:0) :|: x16:0:0 > -1 && x14:0:0 > 0 && x12:0:0 > 1 && sum~x8:0:0~times~cons_4~x10:0:0 = x8:0:0 + 4 * x10:0:0 && sum~cons_1~x16:0:0 = 1 + x16:0:0
The following rules are bounded:
f_2321(x8:0:0, x10:0:0, sum~x8:0:0~times~cons_4~x10:0:0, x12:0:0, sum~cons_1~x16:0:0, x14:0:0) -> f_2321(x8:0:0, x10:0:0, x8:0:0 + 4 * x10:0:0, 1 + x16:0:0, x16:0:0, 1 + x14:0:0) :|: x16:0:0 > -1 && x14:0:0 > 0 && x12:0:0 > 1 && sum~x8:0:0~times~cons_4~x10:0:0 = x8:0:0 + 4 * x10:0:0 && sum~cons_1~x16:0:0 = 1 + x16:0:0

----------------------------------------

(59)
YES

----------------------------------------

(60)
Obligation:
SCC
----------------------------------------

(61) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 29 rulesP rules:
f_2016(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v8119, 1, v8121, v8122, 0, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8127, v8128, v8129, 3, 7, 4, 2, 8) -> f_2022(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v8119, 1, v8121, v8122, 0, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8127, v8128, v8129, 3, 7, 4, 2, 8) :|: 0 = 0
f_2022(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v8119, 1, v8121, v8122, 0, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8127, v8128, v8129, 3, 7, 4, 2, 8) -> f_2028(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v8119, 1, v8121, v8122, 0, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8127, v8128, v8129, 3, 7, 4, 2, 8) :|: 0 = 0
f_2028(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v8119, 1, v8121, v8122, 0, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8127, v8128, v8129, 3, 7, 4, 2, 8) -> f_2034(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v8119, 1, v8122, 0, v8121, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8127, v8128, v8129, 3, 7, 4, 2, 8) :|: 0 = 0
f_2034(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v8119, 1, v8122, 0, v8121, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8127, v8128, v8129, 3, 7, 4, 2, 8) -> f_2040(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v8119, 1, v8380, 0, v8121, v8122, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8127, v8128, v8129, 3, 7, 4, 2, 8, 5) :|: v8380 = v8112 + 4 * v8119 && 5 <= v8380
f_2040(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v8119, 1, v8380, 0, v8121, v8122, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8127, v8128, v8129, 3, 7, 4, 2, 8, 5) -> f_2047(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v8119, 1, v8380, v8486, 0, v8121, v8122, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8127, v8128, v8129, 3, 7, 4, 2, 8, 5) :|: TRUE
f_2047(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v8119, 1, v8380, v8486, 0, v8121, v8122, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8127, v8128, v8129, 3, 7, 4, 2, 8, 5) -> f_2055(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v8119, 1, v8380, v8486, 0, v8121, v8122, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8127, v8128, v8129, 3, 7, 4, 2, 8, 5) :|: 0 <= v8486
f_2055(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v8119, 1, v8380, v8486, 0, v8121, v8122, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8127, v8128, v8129, 3, 7, 4, 2, 8, 5) -> f_2063(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v8119, 1, v8380, v8486, 0, v8121, v8122, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8127, v8128, v8129, 3, 7, 4, 2, 8, 5) :|: 0 = 0
f_2063(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v8119, 1, v8380, v8486, 0, v8121, v8122, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8127, v8128, v8129, 3, 7, 4, 2, 8, 5) -> f_2072(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v8119, 1, v8380, v8486, 0, v8121, v8122, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8127, v8128, v8129, 3, 7, 4, 2, 8, 5) :|: TRUE
f_2072(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v8119, 1, v8380, v8486, 0, v8121, v8122, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8127, v8128, v8129, 3, 7, 4, 2, 8, 5) -> f_2081(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v8119, 1, v8380, v8486, 0, v8121, v8122, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8127, v8128, v8129, 3, 7, 4, 2, 8, 5) :|: TRUE
f_2081(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v8119, 1, v8380, v8486, 0, v8121, v8122, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8127, v8128, v8129, 3, 7, 4, 2, 8, 5) -> f_2090(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v8119, 1, v8380, v8486, 0, v8121, v8122, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8127, v8128, v8129, 3, 7, 4, 2, 8, 5) :|: 0 = 0
f_2090(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v8119, 1, v8380, v8486, 0, v8121, v8122, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8127, v8128, v8129, 3, 7, 4, 2, 8, 5) -> f_2099(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v8119, 1, v8380, v8486, 0, v8121, v8122, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8127, v8128, v8129, 3, 7, 4, 2, 8, 5) :|: 0 = 0
f_2099(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v8119, 1, v8380, v8486, 0, v8121, v8122, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8127, v8128, v8129, 3, 7, 4, 2, 8, 5) -> f_2106(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v8119, 1, v8380, v8486, 0, v8122, v8121, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8127, v8128, v8129, 3, 7, 4, 2, 8, 5) :|: 0 = 0
f_2106(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v8119, 1, v8380, v8486, 0, v8122, v8121, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8127, v8128, v8129, 3, 7, 4, 2, 8, 5) -> f_2113(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v8119, 1, v8380, v8486, 0, v8121, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8122, v8127, v8128, v8129, 3, 7, 4, 2, 8, 5) :|: v8380 = v8112 + 4 * v8119
f_2113(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v8119, 1, v8380, v8486, 0, v8121, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8122, v8127, v8128, v8129, 3, 7, 4, 2, 8, 5) -> f_2119(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v8119, 1, v8380, v8486, 0, v8121, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8122, v8127, v8128, v8129, 3, 7, 4, 2, 8, 5) :|: 0 = 0
f_2119(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v8119, 1, v8380, v8486, 0, v8121, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8122, v8127, v8128, v8129, 3, 7, 4, 2, 8, 5) -> f_2126(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v8119, 1, v8380, 0, v8121, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8122, v8127, v8128, v8129, 3, 7, 4, 2, 8, 5) :|: v8486 <= 0
f_2126(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v8119, 1, v8380, 0, v8121, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8122, v8127, v8128, v8129, 3, 7, 4, 2, 8, 5) -> f_2135(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v8119, 1, v8380, 0, v8121, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8122, v8127, v8128, v8129, 3, 7, 4, 2, 8, 5) :|: 0 = 0
f_2135(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v8119, 1, v8380, 0, v8121, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8122, v8127, v8128, v8129, 3, 7, 4, 2, 8, 5) -> f_2145(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v8119, 1, v8380, 0, v8121, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8122, v8127, v8128, v8129, 3, 7, 4, 2, 8, 5) :|: TRUE
f_2145(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v8119, 1, v8380, 0, v8121, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8122, v8127, v8128, v8129, 3, 7, 4, 2, 8, 5) -> f_2155(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v8119, 1, v8380, 0, v8121, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8122, v8127, v8128, v8129, 3, 7, 4, 2, 8, 5) :|: TRUE
f_2155(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v8119, 1, v8380, 0, v8121, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8122, v8127, v8128, v8129, 3, 7, 4, 2, 8, 5) -> f_2164(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v8119, 1, v8380, 0, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8122, v8127, v8128, v8129, 3, 7, 4, 2, 8, 5) :|: 0 = 0
f_2164(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v8119, 1, v8380, 0, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8122, v8127, v8128, v8129, 3, 7, 4, 2, 8, 5) -> f_2173(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v8119, 1, v8380, 0, v10050, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8122, v8127, v8128, v8129, 3, 7, 4, 2, 8, 5) :|: v10050 = 1 + v8119 && 2 <= v10050
f_2173(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v8119, 1, v8380, 0, v10050, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8122, v8127, v8128, v8129, 3, 7, 4, 2, 8, 5) -> f_2181(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v8119, 1, v8380, 0, v10050, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8122, v8127, v8128, v8129, 3, 7, 4, 2, 8, 5) :|: TRUE
f_2181(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v8119, 1, v8380, 0, v10050, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8122, v8127, v8128, v8129, 3, 7, 4, 2, 8, 5) -> f_2189(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v8119, 1, v8380, 0, v10050, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8122, v8127, v8128, v8129, 3, 7, 4, 2, 8, 5) :|: TRUE
f_2189(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v8119, 1, v8380, 0, v10050, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8122, v8127, v8128, v8129, 3, 7, 4, 2, 8, 5) -> f_2197(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v10050, 1, v8119, v8380, 0, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8122, v8127, v8128, v8129, 3, 7, 4, 2, 8, 5) :|: 0 = 0
f_2197(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v10050, 1, v8119, v8380, 0, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8122, v8127, v8128, v8129, 3, 7, 4, 2, 8, 5) -> f_2205(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v10050, 1, v8119, v8380, 0, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8122, v8127, v8128, v8129, 3, 7, 4, 2, 8, 5) :|: 0 = 0
f_2205(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v10050, 1, v8119, v8380, 0, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8122, v8127, v8128, v8129, 3, 7, 4, 2, 8, 5) -> f_2215(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v10050, 1, v8119, v8380, 0, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8122, v8127, v8128, v8129, 3, 7, 4, 8, 12, 5, 2) :|: v10050 < v8113 && 3 <= v8113 && 12 <= v8133
f_2215(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v10050, 1, v8119, v8380, 0, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8122, v8127, v8128, v8129, 3, 7, 4, 8, 12, 5, 2) -> f_2227(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v10050, 1, v8119, v8380, 0, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8122, v8127, v8128, v8129, 3, 7, 4, 8, 12, 5, 2) :|: 0 = 0
f_2227(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v10050, 1, v8119, v8380, 0, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8122, v8127, v8128, v8129, 3, 7, 4, 8, 12, 5, 2) -> f_2240(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v10050, 1, v8119, v8380, 0, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8122, v8127, v8128, v8129, 3, 7, 4, 8, 12, 5, 2) :|: TRUE
f_2240(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v10050, 1, v8119, v8380, 0, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8122, v8127, v8128, v8129, 3, 7, 4, 8, 12, 5, 2) -> f_2010(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v10050, 1, v8119, v8380, 0, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8127, v8128, v8129, 3, 7, 4, 2, 8) :|: TRUE
f_2010(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v8119, 1, v8121, v8122, 0, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8127, v8128, v8129, 3, 7, 4, 2, 8) -> f_2016(v8112, v8113, v8114, v8115, v8116, v8117, v8118, v8119, 1, v8121, v8122, 0, v8124, v8130, v8125, v8131, v8126, v8132, v8133, v8134, v8135, v8136, v8137, v8138, v8127, v8128, v8129, 3, 7, 4, 2, 8) :|: TRUE
Combined rules. Obtained 1 rulesP rules:
f_2016(v8112:0, v8113:0, v8114:0, v8115:0, v8116:0, v8117:0, v8118:0, v8119:0, 1, v8121:0, v8122:0, 0, v8124:0, v8130:0, v8125:0, v8131:0, v8126:0, v8132:0, v8133:0, v8134:0, v8135:0, v8136:0, v8137:0, v8138:0, v8127:0, v8128:0, v8129:0, 3, 7, 4, 2, 8) -> f_2016(v8112:0, v8113:0, v8114:0, v8115:0, v8116:0, v8117:0, v8118:0, 1 + v8119:0, 1, v8119:0, v8112:0 + 4 * v8119:0, 0, v8124:0, v8130:0, v8125:0, v8131:0, v8126:0, v8132:0, v8133:0, v8134:0, v8135:0, v8136:0, v8137:0, v8138:0, v8127:0, v8128:0, v8129:0, 3, 7, 4, 2, 8) :|: v8112:0 + 4 * v8119:0 > 4 && v8486:0 > -1 && v8486:0 < 1 && v8119:0 > 0 && v8113:0 > 2 && v8133:0 > 11 && v8113:0 > 1 + v8119:0
Filtered unneeded arguments:
   f_2016(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32) -> f_2016(x1, x2, x8, x19)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_2016(v8112:0, v8113:0, v8119:0, v8133:0) -> f_2016(v8112:0, v8113:0, 1 + v8119:0, v8133:0) :|: v8119:0 > 0 && v8112:0 + 4 * v8119:0 > 4 && v8113:0 > 2 && v8113:0 > 1 + v8119:0 && v8133:0 > 11

----------------------------------------

(62)
Obligation:
Rules:
f_2016(v8112:0, v8113:0, v8119:0, v8133:0) -> f_2016(v8112:0, v8113:0, 1 + v8119:0, v8133:0) :|: v8119:0 > 0 && v8112:0 + 4 * v8119:0 > 4 && v8113:0 > 2 && v8113:0 > 1 + v8119:0 && v8133:0 > 11

----------------------------------------

(63) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(64)
Obligation:
Rules:
f_2016(v8112:0:0, v8113:0:0, v8119:0:0, v8133:0:0) -> f_2016(v8112:0:0, v8113:0:0, 1 + v8119:0:0, v8133:0:0) :|: v8113:0:0 > 1 + v8119:0:0 && v8133:0:0 > 11 && v8113:0:0 > 2 && v8112:0:0 + 4 * v8119:0:0 > 4 && v8119:0:0 > 0

----------------------------------------

(65) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_2016 ] = f_2016_2 + -1*f_2016_3

The following rules are decreasing:
f_2016(v8112:0:0, v8113:0:0, v8119:0:0, v8133:0:0) -> f_2016(v8112:0:0, v8113:0:0, 1 + v8119:0:0, v8133:0:0) :|: v8113:0:0 > 1 + v8119:0:0 && v8133:0:0 > 11 && v8113:0:0 > 2 && v8112:0:0 + 4 * v8119:0:0 > 4 && v8119:0:0 > 0

The following rules are bounded:
f_2016(v8112:0:0, v8113:0:0, v8119:0:0, v8133:0:0) -> f_2016(v8112:0:0, v8113:0:0, 1 + v8119:0:0, v8133:0:0) :|: v8113:0:0 > 1 + v8119:0:0 && v8133:0:0 > 11 && v8113:0:0 > 2 && v8112:0:0 + 4 * v8119:0:0 > 4 && v8119:0:0 > 0


----------------------------------------

(66)
YES

----------------------------------------

(67)
Obligation:
SCC
----------------------------------------

(68) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 20 rulesP rules:
f_1621(v5060, v5061, v5062, v5063, v5064, v5065, v5066, 0, 1, v5069, v5070, v5071, v5072, v5073, v5074, v5080, v5075, v5081, v5076, v5082, v5083, v5084, v5085, v5086, v5087, v5088, v5077, v5078, v5079, 3, 7, 4, 2, 8) -> f_1632(v5060, v5061, v5062, v5063, v5064, v5065, v5066, 0, 1, v5069, v5070, v5071, v5072, v5073, v5074, v5080, v5075, v5081, v5076, v5082, v5083, v5084, v5085, v5086, v5087, v5088, v5077, v5078, v5079, 3, 7, 4, 2, 8) :|: 0 = 0
f_1632(v5060, v5061, v5062, v5063, v5064, v5065, v5066, 0, 1, v5069, v5070, v5071, v5072, v5073, v5074, v5080, v5075, v5081, v5076, v5082, v5083, v5084, v5085, v5086, v5087, v5088, v5077, v5078, v5079, 3, 7, 4, 2, 8) -> f_1640(v5060, v5061, v5062, v5063, v5064, v5065, v5066, 0, 1, v5069, v5070, v5071, v5072, v5073, v5074, v5080, v5075, v5081, v5076, v5082, v5083, v5084, v5085, v5086, v5087, v5088, v5077, v5078, v5079, 3, 7, 4, 2, 8) :|: 0 = 0
f_1640(v5060, v5061, v5062, v5063, v5064, v5065, v5066, 0, 1, v5069, v5070, v5071, v5072, v5073, v5074, v5080, v5075, v5081, v5076, v5082, v5083, v5084, v5085, v5086, v5087, v5088, v5077, v5078, v5079, 3, 7, 4, 2, 8) -> f_1649(v5060, v5061, v5062, v5063, v5064, v5065, v5066, 0, 1, v5069, v5070, v5071, v5072, v5073, v5074, v5080, v5075, v5081, v5076, v5082, v5083, v5084, v5085, v5086, v5087, v5088, v5077, v5078, v5079, 3, 7, 4, 2, 8) :|: 0 = 0
f_1649(v5060, v5061, v5062, v5063, v5064, v5065, v5066, 0, 1, v5069, v5070, v5071, v5072, v5073, v5074, v5080, v5075, v5081, v5076, v5082, v5083, v5084, v5085, v5086, v5087, v5088, v5077, v5078, v5079, 3, 7, 4, 2, 8) -> f_1656(v5060, v5061, v5062, v5063, v5064, v5065, v5066, 0, 1, v5069, v5070, v5072, v5073, v5074, v5080, v5075, v5081, v5076, v5082, v5083, v5084, v5085, v5086, v5087, v5088, v5077, v5078, v5079, 3, 7, 4, 2, 8) :|: 0 = 0
f_1656(v5060, v5061, v5062, v5063, v5064, v5065, v5066, 0, 1, v5069, v5070, v5072, v5073, v5074, v5080, v5075, v5081, v5076, v5082, v5083, v5084, v5085, v5086, v5087, v5088, v5077, v5078, v5079, 3, 7, 4, 2, 8) -> f_1664(v5060, v5061, v5062, v5063, v5064, v5065, v5066, 0, 1, v5069, v5070, v5367, v5072, v5073, v5074, v5080, v5075, v5081, v5076, v5082, v5083, v5084, v5085, v5086, v5087, v5088, v5077, v5078, v5079, 3, 7, 4, 2, 8) :|: 1 + v5367 = v5070 && 0 <= v5367
f_1664(v5060, v5061, v5062, v5063, v5064, v5065, v5066, 0, 1, v5069, v5070, v5367, v5072, v5073, v5074, v5080, v5075, v5081, v5076, v5082, v5083, v5084, v5085, v5086, v5087, v5088, v5077, v5078, v5079, 3, 7, 4, 2, 8) -> f_1673(v5060, v5061, v5062, v5063, v5064, v5065, v5066, 0, 1, v5069, v5070, v5367, v5072, v5073, v5074, v5080, v5075, v5081, v5076, v5082, v5083, v5084, v5085, v5086, v5087, v5088, v5077, v5078, v5079, 3, 7, 4, 2, 8) :|: TRUE
f_1673(v5060, v5061, v5062, v5063, v5064, v5065, v5066, 0, 1, v5069, v5070, v5367, v5072, v5073, v5074, v5080, v5075, v5081, v5076, v5082, v5083, v5084, v5085, v5086, v5087, v5088, v5077, v5078, v5079, 3, 7, 4, 2, 8) -> f_1683(v5060, v5061, v5062, v5063, v5064, v5065, v5066, 0, 1, v5069, v5070, v5367, v5073, v5074, v5080, v5075, v5081, v5076, v5082, v5083, v5084, v5085, v5086, v5087, v5088, v5077, v5078, v5079, 3, 7, 4, 2, 8) :|: 0 = 0
f_1683(v5060, v5061, v5062, v5063, v5064, v5065, v5066, 0, 1, v5069, v5070, v5367, v5073, v5074, v5080, v5075, v5081, v5076, v5082, v5083, v5084, v5085, v5086, v5087, v5088, v5077, v5078, v5079, 3, 7, 4, 2, 8) -> f_1693(v5060, v5061, v5062, v5063, v5064, v5065, v5066, 0, 1, v5069, v5070, v5367, v5073, v5480, v5074, v5080, v5075, v5081, v5076, v5082, v5083, v5084, v5085, v5086, v5087, v5088, v5077, v5078, v5079, 3, 7, 4, 2, 8) :|: v5480 = 1 + v5073 && 2 <= v5480
f_1693(v5060, v5061, v5062, v5063, v5064, v5065, v5066, 0, 1, v5069, v5070, v5367, v5073, v5480, v5074, v5080, v5075, v5081, v5076, v5082, v5083, v5084, v5085, v5086, v5087, v5088, v5077, v5078, v5079, 3, 7, 4, 2, 8) -> f_1702(v5060, v5061, v5062, v5063, v5064, v5065, v5066, 0, 1, v5069, v5070, v5367, v5073, v5480, v5074, v5080, v5075, v5081, v5076, v5082, v5083, v5084, v5085, v5086, v5087, v5088, v5077, v5078, v5079, 3, 7, 4, 2, 8) :|: TRUE
f_1702(v5060, v5061, v5062, v5063, v5064, v5065, v5066, 0, 1, v5069, v5070, v5367, v5073, v5480, v5074, v5080, v5075, v5081, v5076, v5082, v5083, v5084, v5085, v5086, v5087, v5088, v5077, v5078, v5079, 3, 7, 4, 2, 8) -> f_1710(v5060, v5061, v5062, v5063, v5064, v5065, v5066, 0, 1, v5069, v5070, v5367, v5073, v5480, v5074, v5080, v5075, v5081, v5076, v5082, v5083, v5084, v5085, v5086, v5087, v5088, v5077, v5078, v5079, 3, 7, 4, 2, 8) :|: TRUE
f_1710(v5060, v5061, v5062, v5063, v5064, v5065, v5066, 0, 1, v5069, v5070, v5367, v5073, v5480, v5074, v5080, v5075, v5081, v5076, v5082, v5083, v5084, v5085, v5086, v5087, v5088, v5077, v5078, v5079, 3, 7, 4, 2, 8) -> f_1717(v5060, v5061, v5062, v5063, v5064, v5065, v5066, 0, 1, v5069, v5070, v5367, v5073, v5480, v5074, v5080, v5075, v5081, v5076, v5082, v5083, v5084, v5085, v5086, v5087, v5088, v5077, v5078, v5079, 3, 7, 4, 2, 8) :|: 0 = 0
f_1717(v5060, v5061, v5062, v5063, v5064, v5065, v5066, 0, 1, v5069, v5070, v5367, v5073, v5480, v5074, v5080, v5075, v5081, v5076, v5082, v5083, v5084, v5085, v5086, v5087, v5088, v5077, v5078, v5079, 3, 7, 4, 2, 8) -> f_1724(v5060, v5061, v5062, v5063, v5064, v5065, v5066, 0, 1, v5069, v5070, v5367, v5073, v5480, v5074, v5080, v5075, v5081, v5076, v5082, v5083, v5084, v5085, v5086, v5087, v5088, v5077, v5078, v5079, 3, 7, 4, 2, 8) :|: 0 = 0
f_1724(v5060, v5061, v5062, v5063, v5064, v5065, v5066, 0, 1, v5069, v5070, v5367, v5073, v5480, v5074, v5080, v5075, v5081, v5076, v5082, v5083, v5084, v5085, v5086, v5087, v5088, v5077, v5078, v5079, 3, 7, 4, 2, 8) -> f_1732(v5060, v5061, v5062, v5063, v5064, v5065, v5066, 0, 1, v5069, v5070, v5367, v5073, v5480, v5074, v5080, v5075, v5081, v5076, v5082, v5083, v5084, v5085, v5086, v5087, v5088, v5077, v5078, v5079, 3, 7, 4, 2, 8) :|: 0 = 0
f_1732(v5060, v5061, v5062, v5063, v5064, v5065, v5066, 0, 1, v5069, v5070, v5367, v5073, v5480, v5074, v5080, v5075, v5081, v5076, v5082, v5083, v5084, v5085, v5086, v5087, v5088, v5077, v5078, v5079, 3, 7, 4, 2, 8) -> f_1740(v5060, v5061, v5062, v5063, v5064, v5065, v5066, 0, 1, v5069, v5070, v5367, v5073, v5480, v5074, v5080, v5075, v5081, v5076, v5082, v5083, v5084, v5085, v5086, v5087, v5088, v5077, v5078, v5079, 3, 7, 4, 2, 8) :|: 0 = 0
f_1740(v5060, v5061, v5062, v5063, v5064, v5065, v5066, 0, 1, v5069, v5070, v5367, v5073, v5480, v5074, v5080, v5075, v5081, v5076, v5082, v5083, v5084, v5085, v5086, v5087, v5088, v5077, v5078, v5079, 3, 7, 4, 2, 8) -> f_1751(v5060, v5061, v5062, v5063, v5064, v5065, v5066, 0, 1, v5069, v5367, v5070, v5073, v5480, v5074, v5080, v5075, v5081, v5076, v5082, v5083, v5084, v5085, v5086, v5087, v5088, v5077, v5078, v5079, 3, 7, 4, 2, 8) :|: 0 = 0
f_1751(v5060, v5061, v5062, v5063, v5064, v5065, v5066, 0, 1, v5069, v5367, v5070, v5073, v5480, v5074, v5080, v5075, v5081, v5076, v5082, v5083, v5084, v5085, v5086, v5087, v5088, v5077, v5078, v5079, 3, 7, 4, 2, 8) -> f_1762(v5060, v5061, v5062, v5063, v5064, v5065, v5066, 0, 1, v5069, v5367, v5070, v5073, v5480, v5074, v5080, v5075, v5081, v5076, v5082, v5083, v5084, v5085, v5086, v5087, v5088, v5077, v5078, v5079, 3, 7, 4, 2, 8) :|: 0 < v5367 && 2 <= v5070 && 3 <= v5069
f_1762(v5060, v5061, v5062, v5063, v5064, v5065, v5066, 0, 1, v5069, v5367, v5070, v5073, v5480, v5074, v5080, v5075, v5081, v5076, v5082, v5083, v5084, v5085, v5086, v5087, v5088, v5077, v5078, v5079, 3, 7, 4, 2, 8) -> f_1774(v5060, v5061, v5062, v5063, v5064, v5065, v5066, 0, 1, v5069, v5367, v5070, v5073, v5480, v5074, v5080, v5075, v5081, v5076, v5082, v5083, v5084, v5085, v5086, v5087, v5088, v5077, v5078, v5079, 3, 7, 4, 2, 8) :|: 0 = 0
f_1774(v5060, v5061, v5062, v5063, v5064, v5065, v5066, 0, 1, v5069, v5367, v5070, v5073, v5480, v5074, v5080, v5075, v5081, v5076, v5082, v5083, v5084, v5085, v5086, v5087, v5088, v5077, v5078, v5079, 3, 7, 4, 2, 8) -> f_1782(v5060, v5061, v5062, v5063, v5064, v5065, v5066, 0, 1, v5069, v5367, v5070, v5073, v5480, v5074, v5080, v5075, v5081, v5076, v5082, v5083, v5084, v5085, v5086, v5087, v5088, v5077, v5078, v5079, 3, 7, 4, 2, 8) :|: TRUE
f_1782(v5060, v5061, v5062, v5063, v5064, v5065, v5066, 0, 1, v5069, v5367, v5070, v5073, v5480, v5074, v5080, v5075, v5081, v5076, v5082, v5083, v5084, v5085, v5086, v5087, v5088, v5077, v5078, v5079, 3, 7, 4, 2, 8) -> f_1611(v5060, v5061, v5062, v5063, v5064, v5065, v5066, 0, 1, v5069, v5367, v5070, v5073, v5480, v5074, v5080, v5075, v5081, v5076, v5082, v5083, v5084, v5085, v5086, v5087, v5088, v5077, v5078, v5079, 3, 7, 4, 2, 8) :|: TRUE
f_1611(v5060, v5061, v5062, v5063, v5064, v5065, v5066, 0, 1, v5069, v5070, v5071, v5072, v5073, v5074, v5080, v5075, v5081, v5076, v5082, v5083, v5084, v5085, v5086, v5087, v5088, v5077, v5078, v5079, 3, 7, 4, 2, 8) -> f_1621(v5060, v5061, v5062, v5063, v5064, v5065, v5066, 0, 1, v5069, v5070, v5071, v5072, v5073, v5074, v5080, v5075, v5081, v5076, v5082, v5083, v5084, v5085, v5086, v5087, v5088, v5077, v5078, v5079, 3, 7, 4, 2, 8) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_1621(v5060:0, v5061:0, v5062:0, v5063:0, v5064:0, v5065:0, v5066:0, 0, 1, v5069:0, 1 + v5367:0, v5071:0, v5072:0, v5073:0, v5074:0, v5080:0, v5075:0, v5081:0, v5076:0, v5082:0, v5083:0, v5084:0, v5085:0, v5086:0, v5087:0, v5088:0, v5077:0, v5078:0, v5079:0, 3, 7, 4, 2, 8) -> f_1621(v5060:0, v5061:0, v5062:0, v5063:0, v5064:0, v5065:0, v5066:0, 0, 1, v5069:0, v5367:0, 1 + v5367:0, v5073:0, 1 + v5073:0, v5074:0, v5080:0, v5075:0, v5081:0, v5076:0, v5082:0, v5083:0, v5084:0, v5085:0, v5086:0, v5087:0, v5088:0, v5077:0, v5078:0, v5079:0, 3, 7, 4, 2, 8) :|: v5367:0 > 0 && v5073:0 > 0 && v5069:0 > 2
Filtered unneeded arguments:
   f_1621(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34) -> f_1621(x10, x11, x14)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1621(v5069:0, sum~cons_1~v5367:0, v5073:0) -> f_1621(v5069:0, v5367:0, 1 + v5073:0) :|: v5073:0 > 0 && v5069:0 > 2 && v5367:0 > 0 && sum~cons_1~v5367:0 = 1 + v5367:0

----------------------------------------

(69)
Obligation:
Rules:
f_1621(v5069:0, sum~cons_1~v5367:0, v5073:0) -> f_1621(v5069:0, v5367:0, 1 + v5073:0) :|: v5073:0 > 0 && v5069:0 > 2 && v5367:0 > 0 && sum~cons_1~v5367:0 = 1 + v5367:0

----------------------------------------

(70) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(71)
Obligation:
Rules:
f_1621(v5069:0:0, sum~cons_1~v5367:0:0, v5073:0:0) -> f_1621(v5069:0:0, v5367:0:0, 1 + v5073:0:0) :|: v5073:0:0 > 0 && v5069:0:0 > 2 && v5367:0:0 > 0 && sum~cons_1~v5367:0:0 = 1 + v5367:0:0

----------------------------------------

(72) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_1621 ] = f_1621_2

The following rules are decreasing:
f_1621(v5069:0:0, sum~cons_1~v5367:0:0, v5073:0:0) -> f_1621(v5069:0:0, v5367:0:0, 1 + v5073:0:0) :|: v5073:0:0 > 0 && v5069:0:0 > 2 && v5367:0:0 > 0 && sum~cons_1~v5367:0:0 = 1 + v5367:0:0

The following rules are bounded:
f_1621(v5069:0:0, sum~cons_1~v5367:0:0, v5073:0:0) -> f_1621(v5069:0:0, v5367:0:0, 1 + v5073:0:0) :|: v5073:0:0 > 0 && v5069:0:0 > 2 && v5367:0:0 > 0 && sum~cons_1~v5367:0:0 = 1 + v5367:0:0


----------------------------------------

(73)
YES

----------------------------------------

(74)
Obligation:
SCC
----------------------------------------

(75) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 20 rulesP rules:
f_1536(v4738, v4739, v4740, v4741, v4742, v4743, v4744, 0, 1, v4747, v4748, v4749, v4750, v4751, v4757, v4752, v4758, v4753, v4759, v4760, v4761, v4762, v4763, v4764, v4765, v4754, v4755, v4756, 3, 7, 4, 2, 8) -> f_1543(v4738, v4739, v4740, v4741, v4742, v4743, v4744, 0, 1, v4747, v4748, v4749, v4750, v4751, v4757, v4752, v4758, v4753, v4759, v4760, v4761, v4762, v4763, v4764, v4765, v4754, v4755, v4756, 3, 7, 4, 2, 8) :|: 0 = 0
f_1543(v4738, v4739, v4740, v4741, v4742, v4743, v4744, 0, 1, v4747, v4748, v4749, v4750, v4751, v4757, v4752, v4758, v4753, v4759, v4760, v4761, v4762, v4763, v4764, v4765, v4754, v4755, v4756, 3, 7, 4, 2, 8) -> f_1550(v4738, v4739, v4740, v4741, v4742, v4743, v4744, 0, 1, v4747, v4748, v4749, v4750, v4751, v4757, v4752, v4758, v4753, v4759, v4760, v4761, v4762, v4763, v4764, v4765, v4754, v4755, v4756, 3, 7, 4, 2, 8) :|: 0 = 0
f_1550(v4738, v4739, v4740, v4741, v4742, v4743, v4744, 0, 1, v4747, v4748, v4749, v4750, v4751, v4757, v4752, v4758, v4753, v4759, v4760, v4761, v4762, v4763, v4764, v4765, v4754, v4755, v4756, 3, 7, 4, 2, 8) -> f_1557(v4738, v4739, v4740, v4741, v4742, v4743, v4744, 0, 1, v4747, v4748, v4749, v4750, v4751, v4757, v4752, v4758, v4753, v4759, v4760, v4761, v4762, v4763, v4764, v4765, v4754, v4755, v4756, 3, 7, 4, 2, 8) :|: 0 = 0
f_1557(v4738, v4739, v4740, v4741, v4742, v4743, v4744, 0, 1, v4747, v4748, v4749, v4750, v4751, v4757, v4752, v4758, v4753, v4759, v4760, v4761, v4762, v4763, v4764, v4765, v4754, v4755, v4756, 3, 7, 4, 2, 8) -> f_1565(v4738, v4739, v4740, v4741, v4742, v4743, v4744, 0, 1, v4747, v4749, v4750, v4751, v4757, v4752, v4758, v4753, v4759, v4760, v4761, v4762, v4763, v4764, v4765, v4754, v4755, v4756, 3, 7, 4, 8) :|: 0 = 0
f_1565(v4738, v4739, v4740, v4741, v4742, v4743, v4744, 0, 1, v4747, v4749, v4750, v4751, v4757, v4752, v4758, v4753, v4759, v4760, v4761, v4762, v4763, v4764, v4765, v4754, v4755, v4756, 3, 7, 4, 8) -> f_1575(v4738, v4739, v4740, v4741, v4742, v4743, v4744, 0, 1, v4747, v4820, v4749, v4750, v4751, v4757, v4752, v4758, v4753, v4759, v4760, v4761, v4762, v4763, v4764, v4765, v4754, v4755, v4756, 3, 7, 4, 8) :|: v4820 = 1 + v4747 && v4820 <= 0
f_1575(v4738, v4739, v4740, v4741, v4742, v4743, v4744, 0, 1, v4747, v4820, v4749, v4750, v4751, v4757, v4752, v4758, v4753, v4759, v4760, v4761, v4762, v4763, v4764, v4765, v4754, v4755, v4756, 3, 7, 4, 8) -> f_1585(v4738, v4739, v4740, v4741, v4742, v4743, v4744, 0, 1, v4747, v4820, v4749, v4750, v4751, v4757, v4752, v4758, v4753, v4759, v4760, v4761, v4762, v4763, v4764, v4765, v4754, v4755, v4756, 3, 7, 4, 8) :|: TRUE
f_1585(v4738, v4739, v4740, v4741, v4742, v4743, v4744, 0, 1, v4747, v4820, v4749, v4750, v4751, v4757, v4752, v4758, v4753, v4759, v4760, v4761, v4762, v4763, v4764, v4765, v4754, v4755, v4756, 3, 7, 4, 8) -> f_1596(v4738, v4739, v4740, v4741, v4742, v4743, v4744, 0, 1, v4747, v4820, v4750, v4751, v4757, v4752, v4758, v4753, v4759, v4760, v4761, v4762, v4763, v4764, v4765, v4754, v4755, v4756, 3, 7, 4, 8) :|: 0 = 0
f_1596(v4738, v4739, v4740, v4741, v4742, v4743, v4744, 0, 1, v4747, v4820, v4750, v4751, v4757, v4752, v4758, v4753, v4759, v4760, v4761, v4762, v4763, v4764, v4765, v4754, v4755, v4756, 3, 7, 4, 8) -> f_1607(v4738, v4739, v4740, v4741, v4742, v4743, v4744, 0, 1, v4747, v4820, v4750, v5047, v4751, v4757, v4752, v4758, v4753, v4759, v4760, v4761, v4762, v4763, v4764, v4765, v4754, v4755, v4756, 3, 7, 4, 8, 2) :|: v5047 = 1 + v4750 && 2 <= v5047
f_1607(v4738, v4739, v4740, v4741, v4742, v4743, v4744, 0, 1, v4747, v4820, v4750, v5047, v4751, v4757, v4752, v4758, v4753, v4759, v4760, v4761, v4762, v4763, v4764, v4765, v4754, v4755, v4756, 3, 7, 4, 8, 2) -> f_1618(v4738, v4739, v4740, v4741, v4742, v4743, v4744, 0, 1, v4747, v4820, v4750, v5047, v4751, v4757, v4752, v4758, v4753, v4759, v4760, v4761, v4762, v4763, v4764, v4765, v4754, v4755, v4756, 3, 7, 4, 8, 2) :|: TRUE
f_1618(v4738, v4739, v4740, v4741, v4742, v4743, v4744, 0, 1, v4747, v4820, v4750, v5047, v4751, v4757, v4752, v4758, v4753, v4759, v4760, v4761, v4762, v4763, v4764, v4765, v4754, v4755, v4756, 3, 7, 4, 8, 2) -> f_1628(v4738, v4739, v4740, v4741, v4742, v4743, v4744, 0, 1, v4747, v4820, v4750, v5047, v4751, v4757, v4752, v4758, v4753, v4759, v4760, v4761, v4762, v4763, v4764, v4765, v4754, v4755, v4756, 3, 7, 4, 8, 2) :|: TRUE
f_1628(v4738, v4739, v4740, v4741, v4742, v4743, v4744, 0, 1, v4747, v4820, v4750, v5047, v4751, v4757, v4752, v4758, v4753, v4759, v4760, v4761, v4762, v4763, v4764, v4765, v4754, v4755, v4756, 3, 7, 4, 8, 2) -> f_1638(v4738, v4739, v4740, v4741, v4742, v4743, v4744, 0, 1, v4747, v4820, v4750, v5047, v4751, v4757, v4752, v4758, v4753, v4759, v4760, v4761, v4762, v4763, v4764, v4765, v4754, v4755, v4756, 3, 7, 4, 8, 2) :|: 0 = 0
f_1638(v4738, v4739, v4740, v4741, v4742, v4743, v4744, 0, 1, v4747, v4820, v4750, v5047, v4751, v4757, v4752, v4758, v4753, v4759, v4760, v4761, v4762, v4763, v4764, v4765, v4754, v4755, v4756, 3, 7, 4, 8, 2) -> f_1647(v4738, v4739, v4740, v4741, v4742, v4743, v4744, 0, 1, v4747, v4820, v4750, v5047, v4751, v4757, v4752, v4758, v4753, v4759, v4760, v4761, v4762, v4763, v4764, v4765, v4754, v4755, v4756, 3, 7, 4, 8, 2) :|: 0 = 0
f_1647(v4738, v4739, v4740, v4741, v4742, v4743, v4744, 0, 1, v4747, v4820, v4750, v5047, v4751, v4757, v4752, v4758, v4753, v4759, v4760, v4761, v4762, v4763, v4764, v4765, v4754, v4755, v4756, 3, 7, 4, 8, 2) -> f_1653(v4738, v4739, v4740, v4741, v4742, v4743, v4744, 0, 1, v4747, v4820, v4750, v5047, v4751, v4757, v4752, v4758, v4753, v4759, v4760, v4761, v4762, v4763, v4764, v4765, v4754, v4755, v4756, 3, 7, 4, 8, 2) :|: 0 = 0
f_1653(v4738, v4739, v4740, v4741, v4742, v4743, v4744, 0, 1, v4747, v4820, v4750, v5047, v4751, v4757, v4752, v4758, v4753, v4759, v4760, v4761, v4762, v4763, v4764, v4765, v4754, v4755, v4756, 3, 7, 4, 8, 2) -> f_1661(v4738, v4739, v4740, v4741, v4742, v4743, v4744, 0, 1, v4747, v4820, v4750, v5047, v4751, v4757, v4752, v4758, v4753, v4759, v4760, v4761, v4762, v4763, v4764, v4765, v4754, v4755, v4756, 3, 7, 4, 8, 2) :|: 0 = 0
f_1661(v4738, v4739, v4740, v4741, v4742, v4743, v4744, 0, 1, v4747, v4820, v4750, v5047, v4751, v4757, v4752, v4758, v4753, v4759, v4760, v4761, v4762, v4763, v4764, v4765, v4754, v4755, v4756, 3, 7, 4, 8, 2) -> f_1670(v4738, v4739, v4740, v4741, v4742, v4743, v4744, 0, 1, v4820, v4747, v4750, v5047, v4751, v4757, v4752, v4758, v4753, v4759, v4760, v4761, v4762, v4763, v4764, v4765, v4754, v4755, v4756, 3, 7, 4, 8, 2) :|: 0 = 0
f_1670(v4738, v4739, v4740, v4741, v4742, v4743, v4744, 0, 1, v4820, v4747, v4750, v5047, v4751, v4757, v4752, v4758, v4753, v4759, v4760, v4761, v4762, v4763, v4764, v4765, v4754, v4755, v4756, 3, 7, 4, 8, 2) -> f_1679(v4738, v4739, v4740, v4741, v4742, v4743, v4744, 0, 1, v4820, v4747, v4750, v5047, v4751, v4757, v4752, v4758, v4753, v4759, v4760, v4761, v4762, v4763, v4764, v4765, v4754, v4755, v4756, 3, 7, 4, 2, 8) :|: v4820 < 0 && 2 + v4747 <= 0
f_1679(v4738, v4739, v4740, v4741, v4742, v4743, v4744, 0, 1, v4820, v4747, v4750, v5047, v4751, v4757, v4752, v4758, v4753, v4759, v4760, v4761, v4762, v4763, v4764, v4765, v4754, v4755, v4756, 3, 7, 4, 2, 8) -> f_1689(v4738, v4739, v4740, v4741, v4742, v4743, v4744, 0, 1, v4820, v4747, v4750, v5047, v4751, v4757, v4752, v4758, v4753, v4759, v4760, v4761, v4762, v4763, v4764, v4765, v4754, v4755, v4756, 3, 7, 4, 2, 8) :|: 0 = 0
f_1689(v4738, v4739, v4740, v4741, v4742, v4743, v4744, 0, 1, v4820, v4747, v4750, v5047, v4751, v4757, v4752, v4758, v4753, v4759, v4760, v4761, v4762, v4763, v4764, v4765, v4754, v4755, v4756, 3, 7, 4, 2, 8) -> f_1699(v4738, v4739, v4740, v4741, v4742, v4743, v4744, 0, 1, v4820, v4747, v4750, v5047, v4751, v4757, v4752, v4758, v4753, v4759, v4760, v4761, v4762, v4763, v4764, v4765, v4754, v4755, v4756, 3, 7, 4, 2, 8) :|: TRUE
f_1699(v4738, v4739, v4740, v4741, v4742, v4743, v4744, 0, 1, v4820, v4747, v4750, v5047, v4751, v4757, v4752, v4758, v4753, v4759, v4760, v4761, v4762, v4763, v4764, v4765, v4754, v4755, v4756, 3, 7, 4, 2, 8) -> f_1529(v4738, v4739, v4740, v4741, v4742, v4743, v4744, 0, 1, v4820, v4747, v4750, v5047, v4751, v4757, v4752, v4758, v4753, v4759, v4760, v4761, v4762, v4763, v4764, v4765, v4754, v4755, v4756, 3, 7, 4, 2, 8) :|: TRUE
f_1529(v4738, v4739, v4740, v4741, v4742, v4743, v4744, 0, 1, v4747, v4748, v4749, v4750, v4751, v4757, v4752, v4758, v4753, v4759, v4760, v4761, v4762, v4763, v4764, v4765, v4754, v4755, v4756, 3, 7, 4, 2, 8) -> f_1536(v4738, v4739, v4740, v4741, v4742, v4743, v4744, 0, 1, v4747, v4748, v4749, v4750, v4751, v4757, v4752, v4758, v4753, v4759, v4760, v4761, v4762, v4763, v4764, v4765, v4754, v4755, v4756, 3, 7, 4, 2, 8) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_1536(v4738:0, v4739:0, v4740:0, v4741:0, v4742:0, v4743:0, v4744:0, 0, 1, v4747:0, v4748:0, v4749:0, v4750:0, v4751:0, v4757:0, v4752:0, v4758:0, v4753:0, v4759:0, v4760:0, v4761:0, v4762:0, v4763:0, v4764:0, v4765:0, v4754:0, v4755:0, v4756:0, 3, 7, 4, 2, 8) -> f_1536(v4738:0, v4739:0, v4740:0, v4741:0, v4742:0, v4743:0, v4744:0, 0, 1, 1 + v4747:0, v4747:0, v4750:0, 1 + v4750:0, v4751:0, v4757:0, v4752:0, v4758:0, v4753:0, v4759:0, v4760:0, v4761:0, v4762:0, v4763:0, v4764:0, v4765:0, v4754:0, v4755:0, v4756:0, 3, 7, 4, 2, 8) :|: v4747:0 < 0 && v4750:0 > 0 && v4747:0 < -1
Filtered unneeded arguments:
   f_1536(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33) -> f_1536(x10, x13)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1536(v4747:0, v4750:0) -> f_1536(1 + v4747:0, 1 + v4750:0) :|: v4750:0 > 0 && v4747:0 < -1 && v4747:0 < 0

----------------------------------------

(76)
Obligation:
Rules:
f_1536(v4747:0, v4750:0) -> f_1536(1 + v4747:0, 1 + v4750:0) :|: v4750:0 > 0 && v4747:0 < -1 && v4747:0 < 0

----------------------------------------

(77) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(78)
Obligation:
Rules:
f_1536(v4747:0:0, v4750:0:0) -> f_1536(1 + v4747:0:0, 1 + v4750:0:0) :|: v4750:0:0 > 0 && v4747:0:0 < -1 && v4747:0:0 < 0

----------------------------------------

(79) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_1536 ] = -1*f_1536_1

The following rules are decreasing:
f_1536(v4747:0:0, v4750:0:0) -> f_1536(1 + v4747:0:0, 1 + v4750:0:0) :|: v4750:0:0 > 0 && v4747:0:0 < -1 && v4747:0:0 < 0

The following rules are bounded:
f_1536(v4747:0:0, v4750:0:0) -> f_1536(1 + v4747:0:0, 1 + v4750:0:0) :|: v4750:0:0 > 0 && v4747:0:0 < -1 && v4747:0:0 < 0


----------------------------------------

(80)
YES
Graph finished, checking  consistency
Graph finished, checked consistency, took 0.001s
