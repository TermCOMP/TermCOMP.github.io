YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/Fu99i.c
# AProVE Commit ID: 48c83ccb80d5f8312cb92f4aa1b51dc35e247e65 nils 20241118 unpublished


Termination of the given C Problem could be proven:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 59 ms]
(2) LLVM problem
(3) LLVMToTerminationGraphProof [EQUIVALENT, 22.5 s]
(4) LLVM Symbolic Execution Graph
(5) SymbolicExecutionGraphToSCCProof [SOUND, 0 ms]
(6) AND
    (7) LLVM Symbolic Execution SCC
        (8) SCC2IRS [SOUND, 74 ms]
        (9) IntTRS
        (10) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (11) IntTRS
        (12) RankingReductionPairProof [EQUIVALENT, 10 ms]
        (13) IntTRS
        (14) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (15) IntTRS
        (16) RankingReductionPairProof [EQUIVALENT, 5 ms]
        (17) IntTRS
        (18) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (19) IntTRS
        (20) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
        (21) IntTRS
        (22) PolynomialOrderProcessor [EQUIVALENT, 11 ms]
        (23) YES
    (24) LLVM Symbolic Execution SCC
        (25) SCC2IRS [SOUND, 61 ms]
        (26) IntTRS
        (27) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (28) IntTRS
        (29) RankingReductionPairProof [EQUIVALENT, 0 ms]
        (30) IntTRS
        (31) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (32) IntTRS
        (33) PolynomialOrderProcessor [EQUIVALENT, 2 ms]
        (34) IntTRS
        (35) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (36) IntTRS
        (37) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
        (38) IntTRS
        (39) PolynomialOrderProcessor [EQUIVALENT, 1 ms]
        (40) YES
    (41) LLVM Symbolic Execution SCC
        (42) SCC2IRS [SOUND, 28 ms]
        (43) IntTRS
        (44) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (45) IntTRS
        (46) PolynomialOrderProcessor [EQUIVALENT, 6 ms]
        (47) YES
    (48) LLVM Symbolic Execution SCC
        (49) SCC2IRS [SOUND, 23 ms]
        (50) IntTRS
        (51) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (52) IntTRS
        (53) PolynomialOrderProcessor [EQUIVALENT, 14 ms]
        (54) YES
    (55) LLVM Symbolic Execution SCC
        (56) SCC2IRS [SOUND, 23 ms]
        (57) IntTRS
        (58) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (59) IntTRS
        (60) PolynomialOrderProcessor [EQUIVALENT, 1 ms]
        (61) YES
    (62) LLVM Symbolic Execution SCC
        (63) SCC2IRS [SOUND, 19 ms]
        (64) IntTRS
        (65) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (66) IntTRS
        (67) PolynomialOrderProcessor [EQUIVALENT, 2 ms]
        (68) YES
    (69) LLVM Symbolic Execution SCC
        (70) SCC2IRS [SOUND, 45 ms]
        (71) IntTRS
        (72) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (73) IntTRS
        (74) RankingReductionPairProof [EQUIVALENT, 5 ms]
        (75) YES
    (76) LLVM Symbolic Execution SCC
        (77) SCC2IRS [SOUND, 7 ms]
        (78) IntTRS
        (79) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (80) IntTRS
        (81) RankingReductionPairProof [EQUIVALENT, 2 ms]
        (82) YES


----------------------------------------

(0)
Obligation:
c file /hpcwork/ff862203/termcomp25/benchmarks/Fu99i.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /hpcwork/ff862203/termcomp25/benchmarks/Fu99i.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-pc-linux-gnu"

Type definitions:

Global variables:

Function declarations and definitions:

*BasicFunctionTypename: "llvm.dbg.declare" returnParam: BasicVoidType parameters: (BasicMetadataType, BasicMetadataType, BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_nondet_int" returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 7
	0:
		%1 = alloca i32, align 4
		%2 = alloca i32, align 4
		%3 = alloca i32, align 4
		%4 = alloca i32, align 4
		%5 = alloca i32, align 4
		%6 = alloca *i32, align 8
		store 0, %1
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %2)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %3)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %4)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %5)
		%7 = call i32 @__VERIFIER_nondet_int()
		store %7, %5
		%8 = load %5
		%9 = icmp slt %8 1
		br %9, %10, %11
	10:
		store 1, %5
		br %11
	11:
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i32 %6)
		%12 = load %5
		%13 = sext i32 %12 to i64
		%14 = mul i64 %13, 4
		%15 = alloca i8, numElementsLit: %14, align 16
		%16 = bitcast *i8 %15 to *i32
		store %16, %6
		%17 = load %6
		%18 = icmp ne %17 null
		br %18, %20, %19
	19:
		store 0, %1
		br %64
	20:
		store 0, %2
		br %21
	21:
		%22 = load %2
		%23 = load %5
		%24 = icmp slt %22 %23
		br %24, %25, %39
	25:
		%26 = call i32 @__VERIFIER_nondet_int()
		store %26, %4
		%27 = load %4
		%28 = icmp slt %27 0
		br %28, %29, %30
	29:
		store 0, %4
		br %30
	30:
		%31 = load %4
		%32 = load %6
		%33 = load %2
		%34 = sext i32 %33 to i64
		%35 = getelementptr %32, %34
		store %31, %35
		br %36
	36:
		%37 = load %2
		%38 = add i32 %37, 1
		store %38, %2
		br %21
	39:
		store 0, %3
		br %40
	40:
		%41 = load %3
		%42 = load %5
		%43 = icmp slt %41 %42
		br %43, %44, %63
	44:
		br %45
	45:
		%46 = load %6
		%47 = load %3
		%48 = sext i32 %47 to i64
		%49 = getelementptr %46, %48
		%50 = load %49
		%51 = icmp sgt %50 0
		br %51, %52, %59
	52:
		%53 = load %6
		%54 = load %3
		%55 = sext i32 %54 to i64
		%56 = getelementptr %53, %55
		%57 = load %56
		%58 = add i32 %57, -1
		store %58, %56
		br %45
	59:
		br %60
	60:
		%61 = load %3
		%62 = add i32 %61, 1
		store %62, %3
		br %40
	63:
		store 0, %1
		br %64
	64:
		%65 = load %1
		ret %65


Analyze Termination of all function calls matching the pattern:
main()
----------------------------------------

(3) LLVMToTerminationGraphProof (EQUIVALENT)
Constructed symbolic execution graph for LLVM program.
----------------------------------------

(4)
Obligation:
Symbolic Execution Graph
----------------------------------------

(5) SymbolicExecutionGraphToSCCProof (SOUND)
Splitted symbolic execution graph to 8 SCCs.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
SCC
----------------------------------------

(8) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 58 rulesP rules:
f_2581(v32496, v32497, v32498, v32499, v32500, v32501, v32502, 0, v32504, v32505, 1, v32507, v32508, v32509, v32510, v32511, v32512, v32513, v32514, v32515, v32516, v32517, v32518, v32519, v32520, v32521, v32522, v32523, v32524, 3, 7, 4, 2, 5, 8) -> f_2585(v32496, v32497, v32498, v32499, v32500, v32501, v32502, 0, v32504, v32505, 1, v32507, v32508, v32509, v32510, v32511, v32512, v32513, v32514, v32516, v32517, v32518, v32519, v32520, v32521, v32522, v32523, v32524, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2585(v32496, v32497, v32498, v32499, v32500, v32501, v32502, 0, v32504, v32505, 1, v32507, v32508, v32509, v32510, v32511, v32512, v32513, v32514, v32516, v32517, v32518, v32519, v32520, v32521, v32522, v32523, v32524, 3, 7, 4, 2, 5, 8) -> f_2589(v32496, v32497, v32498, v32499, v32500, v32501, v32502, 0, v32504, v32505, 1, v32507, v32508, v32509, v32510, v32511, v32512, v32513, v32514, v32679, v32516, v32517, v32518, v32519, v32520, v32521, v32522, v32523, v32524, 3, 7, 4, 2, 5, 8) :|: v32679 = 1 + v32510 && 2 <= v32679
f_2589(v32496, v32497, v32498, v32499, v32500, v32501, v32502, 0, v32504, v32505, 1, v32507, v32508, v32509, v32510, v32511, v32512, v32513, v32514, v32679, v32516, v32517, v32518, v32519, v32520, v32521, v32522, v32523, v32524, 3, 7, 4, 2, 5, 8) -> f_2594(v32496, v32497, v32498, v32499, v32500, v32501, v32502, 0, v32504, v32505, 1, v32507, v32508, v32509, v32510, v32511, v32512, v32513, v32514, v32679, v32516, v32517, v32518, v32519, v32520, v32521, v32522, v32523, v32524, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2594(v32496, v32497, v32498, v32499, v32500, v32501, v32502, 0, v32504, v32505, 1, v32507, v32508, v32509, v32510, v32511, v32512, v32513, v32514, v32679, v32516, v32517, v32518, v32519, v32520, v32521, v32522, v32523, v32524, 3, 7, 4, 2, 5, 8) -> f_2598(v32496, v32497, v32498, v32499, v32500, v32501, v32502, 0, v32504, v32505, 1, v32507, v32508, v32509, v32510, v32511, v32512, v32513, v32514, v32679, v32516, v32517, v32518, v32519, v32520, v32521, v32522, v32523, v32524, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2598(v32496, v32497, v32498, v32499, v32500, v32501, v32502, 0, v32504, v32505, 1, v32507, v32508, v32509, v32510, v32511, v32512, v32513, v32514, v32679, v32516, v32517, v32518, v32519, v32520, v32521, v32522, v32523, v32524, 3, 7, 4, 2, 5, 8) -> f_2599(v32496, v32497, v32498, v32499, v32500, v32501, v32502, 0, v32504, v32505, 1, v32507, v32508, v32509, v32510, v32511, v32512, v32513, v32514, v32679, v32516, v32517, v32518, v32519, v32520, v32521, v32522, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2599(v32968, v32969, v32970, v32971, v32972, v32973, v32974, 0, v32976, v32977, 1, v32979, v32980, v32981, v32982, v32983, v32984, v32985, v32986, v32987, v32988, v32989, v32990, v32991, v32992, v32993, v32994, 3, 7, 4, 2, 5, 8) -> f_2603(v32968, v32969, v32970, v32971, v32972, v32973, v32974, 0, v32976, v32977, 1, v32979, v32980, v32981, v32987, v32982, v32983, v32984, v32985, v32986, v32988, v32989, v32990, v32991, v32992, v32993, v32994, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2603(v32968, v32969, v32970, v32971, v32972, v32973, v32974, 0, v32976, v32977, 1, v32979, v32980, v32981, v32987, v32982, v32983, v32984, v32985, v32986, v32988, v32989, v32990, v32991, v32992, v32993, v32994, 3, 7, 4, 2, 5, 8) -> f_2608(v32968, v32969, v32970, v32971, v32972, v32973, v32974, 0, v32976, v32977, 1, v32979, v32980, v32981, v32987, v32982, v32983, v32984, v32985, v32986, v32988, v32989, v32990, v32991, v32992, v32993, v32994, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2608(v32968, v32969, v32970, v32971, v32972, v32973, v32974, 0, v32976, v32977, 1, v32979, v32980, v32981, v32987, v32982, v32983, v32984, v32985, v32986, v32988, v32989, v32990, v32991, v32992, v32993, v32994, 3, 7, 4, 2, 5, 8) -> f_2612(v32968, v32969, v32970, v32971, v32972, v32973, v32974, 0, v32976, v32977, 1, v32979, v32980, v32981, v32987, v32982, v32983, v32984, v32985, v32986, v32988, v32989, v32990, v32991, v32992, v32993, v32994, 3, 7, 4, 2, 5, 8) :|: v32987 < v32974
f_2612(v32968, v32969, v32970, v32971, v32972, v32973, v32974, 0, v32976, v32977, 1, v32979, v32980, v32981, v32987, v32982, v32983, v32984, v32985, v32986, v32988, v32989, v32990, v32991, v32992, v32993, v32994, 3, 7, 4, 2, 5, 8) -> f_2617(v32968, v32969, v32970, v32971, v32972, v32973, v32974, 0, v32976, v32977, 1, v32979, v32980, v32981, v32987, v32982, v32983, v32984, v32985, v32986, v32988, v32989, v32990, v32991, v32992, v32993, v32994, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2617(v32968, v32969, v32970, v32971, v32972, v32973, v32974, 0, v32976, v32977, 1, v32979, v32980, v32981, v32987, v32982, v32983, v32984, v32985, v32986, v32988, v32989, v32990, v32991, v32992, v32993, v32994, 3, 7, 4, 2, 5, 8) -> f_2621(v32968, v32969, v32970, v32971, v32972, v32973, v32974, 0, v32976, v32977, 1, v32979, v32980, v32981, v32987, v32982, v32983, v32984, v32985, v32986, v32988, v32989, v32990, v32991, v32992, v32993, v32994, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2621(v32968, v32969, v32970, v32971, v32972, v32973, v32974, 0, v32976, v32977, 1, v32979, v32980, v32981, v32987, v32982, v32983, v32984, v32985, v32986, v32988, v32989, v32990, v32991, v32992, v32993, v32994, 3, 7, 4, 2, 5, 8) -> f_2625(v32968, v32969, v32970, v32971, v32972, v32973, v32974, 0, v32976, v32977, 1, v32979, v32980, v32981, v32987, v32982, v32983, v32984, v32985, v32986, v32988, v32989, v32990, v32991, v32992, v32993, v32994, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2625(v32968, v32969, v32970, v32971, v32972, v32973, v32974, 0, v32976, v32977, 1, v32979, v32980, v32981, v32987, v32982, v32983, v32984, v32985, v32986, v32988, v32989, v32990, v32991, v32992, v32993, v32994, 3, 7, 4, 2, 5, 8) -> f_2629(v32968, v32969, v32970, v32971, v32972, v32973, v32974, 0, v32976, v32977, 1, v32979, v32980, v32981, v32987, v32982, v32983, v32984, v32985, v32986, v32988, v32989, v32990, v32991, v32992, v32993, v32994, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2629(v32968, v32969, v32970, v32971, v32972, v32973, v32974, 0, v32976, v32977, 1, v32979, v32980, v32981, v32987, v32982, v32983, v32984, v32985, v32986, v32988, v32989, v32990, v32991, v32992, v32993, v32994, 3, 7, 4, 2, 5, 8) -> f_2632(v32968, v32969, v32970, v32971, v32972, v32973, v32974, 0, v32976, v32977, 1, v32979, v32980, v32981, v32987, v32982, v32983, v32984, v32985, v32986, v32988, v32989, v32990, v32991, v32992, v32993, v32994, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2632(v32968, v32969, v32970, v32971, v32972, v32973, v32974, 0, v32976, v32977, 1, v32979, v32980, v32981, v32987, v32982, v32983, v32984, v32985, v32986, v32988, v32989, v32990, v32991, v32992, v32993, v32994, 3, 7, 4, 2, 5, 8) -> f_2635(v32968, v32969, v32970, v32971, v32972, v32973, v32974, 0, v32976, v32977, 1, v32979, v32980, v32981, v32987, v32983, v32984, v32985, v32986, v32982, v32988, v32989, v32990, v32991, v32992, v32993, v32994, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2635(v32968, v32969, v32970, v32971, v32972, v32973, v32974, 0, v32976, v32977, 1, v32979, v32980, v32981, v32987, v32983, v32984, v32985, v32986, v32982, v32988, v32989, v32990, v32991, v32992, v32993, v32994, 3, 7, 4, 2, 5, 8) -> f_2637(v32968, v32969, v32970, v32971, v32972, v32973, v32974, 0, v32976, v32977, 1, v32979, v32980, v32981, v32987, v34174, v32984, v32985, v32986, v32982, v32988, v32989, v32990, v32991, v32992, v32993, v32994, v32983, 3, 7, 4, 2, 5, 8) :|: v34174 = v32977 + 4 * v32987 && 5 <= v34174
f_2637(v32968, v32969, v32970, v32971, v32972, v32973, v32974, 0, v32976, v32977, 1, v32979, v32980, v32981, v32987, v34174, v32984, v32985, v32986, v32982, v32988, v32989, v32990, v32991, v32992, v32993, v32994, v32983, 3, 7, 4, 2, 5, 8) -> f_2640(v32968, v32969, v32970, v32971, v32972, v32973, v32974, 0, v32976, v32977, 1, v32979, v32980, v32981, v32987, v34174, v34175, v32985, v32986, v32982, v32988, v32989, v32990, v32991, v32992, v32993, v32994, v32983, v32984, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2640(v32968, v32969, v32970, v32971, v32972, v32973, v32974, 0, v32976, v32977, 1, v32979, v32980, v32981, v32987, v34174, v34175, v32985, v32986, v32982, v32988, v32989, v32990, v32991, v32992, v32993, v32994, v32983, v32984, 3, 7, 4, 2, 5, 8) -> f_2643(v32968, v32969, v32970, v32971, v32972, v32973, v32974, 0, v32976, v32977, 1, v32979, v32980, v32981, v32987, v34174, v34175, v32985, v32986, v32982, v32988, v32989, v32990, v32991, v32992, v32993, v32994, v32983, v32984, 3, 7, 4, 2, 5, 8) :|: 0 < v34175
f_2640(v32968, v32969, v32970, v32971, v32972, v32973, v32974, 0, v32976, v32977, 1, v32979, v32980, v32981, v32987, v34174, v34175, v32985, v32986, v32982, v32988, v32989, v32990, v32991, v32992, v32993, v32994, v32983, v32984, 3, 7, 4, 2, 5, 8) -> f_2644(v32968, v32969, v32970, v32971, v32972, v32973, v32974, 0, v32976, v32977, 1, v32979, v32980, v32981, v32987, v34174, v34175, v32985, v32986, v32982, v32988, v32989, v32990, v32991, v32992, v32993, v32994, v32983, v32984, 3, 7, 4, 2, 5, 8) :|: v34175 <= 0
f_2643(v32968, v32969, v32970, v32971, v32972, v32973, v32974, 0, v32976, v32977, 1, v32979, v32980, v32981, v32987, v34174, v34175, v32985, v32986, v32982, v32988, v32989, v32990, v32991, v32992, v32993, v32994, v32983, v32984, 3, 7, 4, 2, 5, 8) -> f_2647(v32968, v32969, v32970, v32971, v32972, v32973, v32974, 0, v32976, v32977, 1, v32979, v32980, v32981, v32987, v34174, v34175, v32985, v32986, v32982, v32988, v32989, v32990, v32991, v32992, v32993, v32994, v32983, v32984, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2647(v32968, v32969, v32970, v32971, v32972, v32973, v32974, 0, v32976, v32977, 1, v32979, v32980, v32981, v32987, v34174, v34175, v32985, v32986, v32982, v32988, v32989, v32990, v32991, v32992, v32993, v32994, v32983, v32984, 3, 7, 4, 2, 5, 8) -> f_2649(v32968, v32969, v32970, v32971, v32972, v32973, v32974, 0, v32976, v32977, 1, v32979, v32980, v32981, v32987, v34174, v34175, v32985, v32986, v32982, v32988, v32989, v32990, v32991, v32992, v32993, v32994, v32983, v32984, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2649(v32968, v32969, v32970, v32971, v32972, v32973, v32974, 0, v32976, v32977, 1, v32979, v32980, v32981, v32987, v34174, v34175, v32985, v32986, v32982, v32988, v32989, v32990, v32991, v32992, v32993, v32994, v32983, v32984, 3, 7, 4, 2, 5, 8) -> f_2650(v32968, v32969, v32970, v32971, v32972, v32973, v32974, 0, v32976, v32977, 1, v32979, v32980, v32981, v32987, v34174, v34175, v32985, v32986, 1, 0, v32982, v32988, v32989, v32990, v32991, v32992, v32993, v32994, v34654, v34655, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2650(v34625, v34626, v34627, v34628, v34629, v34630, v34631, 0, v34633, v34634, 1, v34636, v34637, v34638, v34639, v34640, v34641, v34642, v34643, v34644, v34645, v34646, v34647, v34648, v34649, v34650, v34651, v34652, v34653, v34654, v34655, 3, 7, 4, 2, 5, 8) -> f_2671(v34625, v34626, v34627, v34628, v34629, v34630, v34631, 0, v34633, v34634, 1, v34636, v34637, v34638, v34639, v34640, v34641, v34642, v34643, v34644, v34645, v34646, v34647, v34648, v34649, v34650, v34651, v34652, v34653, v35187, v35188, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2671(v35158, v35159, v35160, v35161, v35162, v35163, v35164, 0, v35166, v35167, 1, v35169, v35170, v35171, v35172, v35173, v35174, v35175, v35176, v35177, v35178, v35179, v35180, v35181, v35182, v35183, v35184, v35185, v35186, v35187, v35188, 3, 7, 4, 2, 5, 8) -> f_2673(v35158, v35159, v35160, v35161, v35162, v35163, v35164, 0, v35166, v35167, 1, v35169, v35170, v35171, v35172, v35173, v35174, v35175, v35176, v35177, v35178, v35179, v35180, v35181, v35182, v35183, v35184, v35185, v35186, v35187, v35188, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2673(v35158, v35159, v35160, v35161, v35162, v35163, v35164, 0, v35166, v35167, 1, v35169, v35170, v35171, v35172, v35173, v35174, v35175, v35176, v35177, v35178, v35179, v35180, v35181, v35182, v35183, v35184, v35185, v35186, v35187, v35188, 3, 7, 4, 2, 5, 8) -> f_2675(v35158, v35159, v35160, v35161, v35162, v35163, v35164, 0, v35166, v35167, 1, v35169, v35170, v35171, v35172, v35173, v35174, v35175, v35176, v35177, v35178, v35179, v35180, v35181, v35182, v35183, v35184, v35185, v35186, v35187, v35188, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2675(v35158, v35159, v35160, v35161, v35162, v35163, v35164, 0, v35166, v35167, 1, v35169, v35170, v35171, v35172, v35173, v35174, v35175, v35176, v35177, v35178, v35179, v35180, v35181, v35182, v35183, v35184, v35185, v35186, v35187, v35188, 3, 7, 4, 2, 5, 8) -> f_2677(v35158, v35159, v35160, v35161, v35162, v35163, v35164, 0, v35166, v35167, 1, v35169, v35170, v35171, v35172, v35173, v35174, v35176, v35177, v35178, v35179, v35180, v35181, v35182, v35183, v35184, v35185, v35186, v35187, v35188, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2677(v35158, v35159, v35160, v35161, v35162, v35163, v35164, 0, v35166, v35167, 1, v35169, v35170, v35171, v35172, v35173, v35174, v35176, v35177, v35178, v35179, v35180, v35181, v35182, v35183, v35184, v35185, v35186, v35187, v35188, 3, 7, 4, 2, 5, 8) -> f_2679(v35158, v35159, v35160, v35161, v35162, v35163, v35164, 0, v35166, v35167, 1, v35169, v35170, v35171, v35172, v35173, v35174, v35177, v35178, v35179, v35180, v35181, v35182, v35183, v35184, v35185, v35186, v35176, v35187, v35188, 3, 7, 4, 2, 5, 8) :|: v35173 = v35167 + 4 * v35172
f_2679(v35158, v35159, v35160, v35161, v35162, v35163, v35164, 0, v35166, v35167, 1, v35169, v35170, v35171, v35172, v35173, v35174, v35177, v35178, v35179, v35180, v35181, v35182, v35183, v35184, v35185, v35186, v35176, v35187, v35188, 3, 7, 4, 2, 5, 8) -> f_2681(v35158, v35159, v35160, v35161, v35162, v35163, v35164, 0, v35166, v35167, 1, v35169, v35170, v35171, v35172, v35173, v35174, v35178, v35179, v35180, v35181, v35182, v35183, v35184, v35185, v35186, v35176, v35187, v35188, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2681(v35158, v35159, v35160, v35161, v35162, v35163, v35164, 0, v35166, v35167, 1, v35169, v35170, v35171, v35172, v35173, v35174, v35178, v35179, v35180, v35181, v35182, v35183, v35184, v35185, v35186, v35176, v35187, v35188, 3, 7, 4, 2, 5, 8) -> f_2683(v35158, v35159, v35160, v35161, v35162, v35163, v35164, 0, v35166, v35167, 1, v35169, v35170, v35171, v35172, v35173, v35174, v35628, v35179, v35180, v35181, v35182, v35183, v35184, v35185, v35186, v35176, v35178, v35187, v35188, 3, 7, 4, 2, 5, 8) :|: 1 + v35628 = v35174 && 0 <= v35628
f_2683(v35158, v35159, v35160, v35161, v35162, v35163, v35164, 0, v35166, v35167, 1, v35169, v35170, v35171, v35172, v35173, v35174, v35628, v35179, v35180, v35181, v35182, v35183, v35184, v35185, v35186, v35176, v35178, v35187, v35188, 3, 7, 4, 2, 5, 8) -> f_2685(v35158, v35159, v35160, v35161, v35162, v35163, v35164, 0, v35166, v35167, 1, v35169, v35170, v35171, v35172, v35173, v35174, v35628, v35179, v35180, v35181, v35182, v35183, v35184, v35185, v35186, v35187, v35188, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2685(v35158, v35159, v35160, v35161, v35162, v35163, v35164, 0, v35166, v35167, 1, v35169, v35170, v35171, v35172, v35173, v35174, v35628, v35179, v35180, v35181, v35182, v35183, v35184, v35185, v35186, v35187, v35188, 3, 7, 4, 2, 5, 8) -> f_2687(v35158, v35159, v35160, v35161, v35162, v35163, v35164, 0, v35166, v35167, 1, v35169, v35170, v35171, v35172, v35173, v35174, v35628, v35179, v35180, v35181, v35182, v35183, v35184, v35185, v35186, v35187, v35188, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2687(v35158, v35159, v35160, v35161, v35162, v35163, v35164, 0, v35166, v35167, 1, v35169, v35170, v35171, v35172, v35173, v35174, v35628, v35179, v35180, v35181, v35182, v35183, v35184, v35185, v35186, v35187, v35188, 3, 7, 4, 2, 5, 8) -> f_2660(v35158, v35159, v35160, v35161, v35162, v35163, v35164, 0, v35166, v35167, 1, v35169, v35170, v35171, v35172, v35173, v35174, v35179, v35628, v35180, v35181, v35182, v35183, v35184, v35185, v35186, v35012, v35013, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2660(v34986, v34987, v34988, v34989, v34990, v34991, v34992, 0, v34994, v34995, 1, v34997, v34998, v34999, v35000, v35001, v35002, v35003, v35004, v35005, v35006, v35007, v35008, v35009, v35010, v35011, v35012, v35013, 3, 7, 4, 2, 5, 8) -> f_2661(v34986, v34987, v34988, v34989, v34990, v34991, v34992, 0, v34994, v34995, 1, v34997, v34998, v34999, v35000, v35001, v35002, v35003, v35004, v35005, v35006, v35007, v35008, v35009, v35010, v35011, v35012, v35013, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2661(v34986, v34987, v34988, v34989, v34990, v34991, v34992, 0, v34994, v34995, 1, v34997, v34998, v34999, v35000, v35001, v35002, v35003, v35004, v35005, v35006, v35007, v35008, v35009, v35010, v35011, v35012, v35013, 3, 7, 4, 2, 5, 8) -> f_2662(v34986, v34987, v34988, v34989, v34990, v34991, v34992, 0, v34994, v34995, 1, v34997, v34998, v34999, v35000, v35001, v35002, v35003, v35004, v35005, v35006, v35007, v35008, v35009, v35010, v35011, v35012, v35013, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2662(v34986, v34987, v34988, v34989, v34990, v34991, v34992, 0, v34994, v34995, 1, v34997, v34998, v34999, v35000, v35001, v35002, v35003, v35004, v35005, v35006, v35007, v35008, v35009, v35010, v35011, v35012, v35013, 3, 7, 4, 2, 5, 8) -> f_2663(v34986, v34987, v34988, v34989, v34990, v34991, v34992, 0, v34994, v34995, 1, v34997, v34998, v34999, v35000, v35001, v35002, v35003, v35004, v35005, v35006, v35007, v35008, v35009, v35010, v35011, v35012, v35013, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2663(v34986, v34987, v34988, v34989, v34990, v34991, v34992, 0, v34994, v34995, 1, v34997, v34998, v34999, v35000, v35001, v35002, v35003, v35004, v35005, v35006, v35007, v35008, v35009, v35010, v35011, v35012, v35013, 3, 7, 4, 2, 5, 8) -> f_2664(v34986, v34987, v34988, v34989, v34990, v34991, v34992, 0, v34994, v34995, 1, v34997, v34998, v34999, v35000, v35001, v35002, v35003, v35004, v35005, v35006, v35007, v35008, v35009, v35010, v35011, v35012, v35013, 3, 7, 4, 2, 5, 8) :|: v35001 = v34995 + 4 * v35000
f_2664(v34986, v34987, v34988, v34989, v34990, v34991, v34992, 0, v34994, v34995, 1, v34997, v34998, v34999, v35000, v35001, v35002, v35003, v35004, v35005, v35006, v35007, v35008, v35009, v35010, v35011, v35012, v35013, 3, 7, 4, 2, 5, 8) -> f_2665(v34986, v34987, v34988, v34989, v34990, v34991, v34992, 0, v34994, v34995, 1, v34997, v34998, v34999, v35000, v35001, v35004, v35003, v35002, v35005, v35006, v35007, v35008, v35009, v35010, v35011, v35012, v35013, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2665(v34986, v34987, v34988, v34989, v34990, v34991, v34992, 0, v34994, v34995, 1, v34997, v34998, v34999, v35000, v35001, v35004, v35003, v35002, v35005, v35006, v35007, v35008, v35009, v35010, v35011, v35012, v35013, 3, 7, 4, 2, 5, 8) -> f_2666(v34986, v34987, v34988, v34989, v34990, v34991, v34992, 0, v34994, v34995, 1, v34997, v34998, v34999, v35000, v35001, v35004, v35003, v35002, v35005, v35006, v35007, v35008, v35009, v35010, v35011, v35012, v35013, 3, 7, 4, 2, 5, 8) :|: 0 < v35004 && 2 <= v35002
f_2665(v34986, v34987, v34988, v34989, v34990, v34991, v34992, 0, v34994, v34995, 1, v34997, v34998, v34999, v35000, v35001, v35004, v35003, v35002, v35005, v35006, v35007, v35008, v35009, v35010, v35011, v35012, v35013, 3, 7, 4, 2, 5, 8) -> f_2667(v34986, v34987, v34988, v34989, v34990, v34991, v34992, 0, v34994, v34995, 1, v34997, v34998, v34999, v35000, v35001, v35003, v35005, v35006, v35007, v35008, v35009, v35010, v35011, v35012, v35013, 3, 7, 4, 2, 5, 8) :|: v35004 <= 0 && v35002 = 1 && v35004 = 0 && 0 = 0
f_2666(v34986, v34987, v34988, v34989, v34990, v34991, v34992, 0, v34994, v34995, 1, v34997, v34998, v34999, v35000, v35001, v35004, v35003, v35002, v35005, v35006, v35007, v35008, v35009, v35010, v35011, v35012, v35013, 3, 7, 4, 2, 5, 8) -> f_2668(v34986, v34987, v34988, v34989, v34990, v34991, v34992, 0, v34994, v34995, 1, v34997, v34998, v34999, v35000, v35001, v35004, v35003, v35002, v35005, v35006, v35007, v35008, v35009, v35010, v35011, v35012, v35013, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2668(v34986, v34987, v34988, v34989, v34990, v34991, v34992, 0, v34994, v34995, 1, v34997, v34998, v34999, v35000, v35001, v35004, v35003, v35002, v35005, v35006, v35007, v35008, v35009, v35010, v35011, v35012, v35013, 3, 7, 4, 2, 5, 8) -> f_2670(v34986, v34987, v34988, v34989, v34990, v34991, v34992, 0, v34994, v34995, 1, v34997, v34998, v34999, v35000, v35001, v35004, v35003, v35002, v35005, v35006, v35007, v35008, v35009, v35010, v35011, v35012, v35013, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2670(v34986, v34987, v34988, v34989, v34990, v34991, v34992, 0, v34994, v34995, 1, v34997, v34998, v34999, v35000, v35001, v35004, v35003, v35002, v35005, v35006, v35007, v35008, v35009, v35010, v35011, v35012, v35013, 3, 7, 4, 2, 5, 8) -> f_2671(v34986, v34987, v34988, v34989, v34990, v34991, v34992, 0, v34994, v34995, 1, v34997, v34998, v34999, v35000, v35001, v35004, v35000, v35001, v35002, v35004, v35003, v35005, v35006, v35007, v35008, v35009, v35010, v35011, v35187, v35188, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2667(v34986, v34987, v34988, v34989, v34990, v34991, v34992, 0, v34994, v34995, 1, v34997, v34998, v34999, v35000, v35001, v35003, v35005, v35006, v35007, v35008, v35009, v35010, v35011, v35012, v35013, 3, 7, 4, 2, 5, 8) -> f_2669(v34986, v34987, v34988, v34989, v34990, v34991, v34992, 0, v34994, v34995, 1, v34997, v34998, v34999, v35000, v35001, v35003, v35005, v35006, v35007, v35008, v35009, v35010, v35011, v35012, v35013, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2669(v34986, v34987, v34988, v34989, v34990, v34991, v34992, 0, v34994, v34995, 1, v34997, v34998, v34999, v35000, v35001, v35003, v35005, v35006, v35007, v35008, v35009, v35010, v35011, v35012, v35013, 3, 7, 4, 2, 5, 8) -> f_2672(v34986, v34987, v34988, v34989, v34990, v34991, v34992, 0, v34994, v34995, 1, v34997, v34998, v34999, v35000, v35001, v35003, v35005, v35006, v35007, v35008, v35009, v35010, v35011, v35012, v35013, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2672(v34986, v34987, v34988, v34989, v34990, v34991, v34992, 0, v34994, v34995, 1, v34997, v34998, v34999, v35000, v35001, v35003, v35005, v35006, v35007, v35008, v35009, v35010, v35011, v35012, v35013, 3, 7, 4, 2, 5, 8) -> f_2674(v34986, v34987, v34988, v34989, v34990, v34991, v34992, 0, v34994, v34995, 1, v34997, v34998, v34999, v35000, v35001, v35003, v35005, v35006, v35007, v35008, v35009, v35010, v35011, v35012, v35013, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2674(v34986, v34987, v34988, v34989, v34990, v34991, v34992, 0, v34994, v34995, 1, v34997, v34998, v34999, v35000, v35001, v35003, v35005, v35006, v35007, v35008, v35009, v35010, v35011, v35012, v35013, 3, 7, 4, 2, 5, 8) -> f_2676(v34986, v34987, v34988, v34989, v34990, v34991, v34992, 0, v34994, v34995, 1, v34997, v34998, v34999, v35000, v35001, v35005, v35006, v35007, v35008, v35009, v35010, v35011, v35012, v35013, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2676(v34986, v34987, v34988, v34989, v34990, v34991, v34992, 0, v34994, v34995, 1, v34997, v34998, v34999, v35000, v35001, v35005, v35006, v35007, v35008, v35009, v35010, v35011, v35012, v35013, 3, 7, 4, 2, 5, 8) -> f_2678(v34986, v34987, v34988, v34989, v34990, v34991, v34992, 0, v34994, v34995, 1, v34997, v34998, v34999, v35000, v35001, v35487, v35005, v35006, v35007, v35008, v35009, v35010, v35011, v35012, v35013, 3, 7, 4, 2, 5, 8) :|: v35487 = 1 + v35000 && 2 <= v35487
f_2678(v34986, v34987, v34988, v34989, v34990, v34991, v34992, 0, v34994, v34995, 1, v34997, v34998, v34999, v35000, v35001, v35487, v35005, v35006, v35007, v35008, v35009, v35010, v35011, v35012, v35013, 3, 7, 4, 2, 5, 8) -> f_2680(v34986, v34987, v34988, v34989, v34990, v34991, v34992, 0, v34994, v34995, 1, v34997, v34998, v34999, v35000, v35001, v35487, v35005, v35006, v35007, v35008, v35009, v35010, v35011, v35012, v35013, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2680(v34986, v34987, v34988, v34989, v34990, v34991, v34992, 0, v34994, v34995, 1, v34997, v34998, v34999, v35000, v35001, v35487, v35005, v35006, v35007, v35008, v35009, v35010, v35011, v35012, v35013, 3, 7, 4, 2, 5, 8) -> f_2682(v34986, v34987, v34988, v34989, v34990, v34991, v34992, 0, v34994, v34995, 1, v34997, v34998, v34999, v35000, v35001, v35487, v35005, v35006, v35007, v35008, v35009, v35010, v35011, v35012, v35013, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2682(v34986, v34987, v34988, v34989, v34990, v34991, v34992, 0, v34994, v34995, 1, v34997, v34998, v34999, v35000, v35001, v35487, v35005, v35006, v35007, v35008, v35009, v35010, v35011, v35012, v35013, 3, 7, 4, 2, 5, 8) -> f_2684(v34986, v34987, v34988, v34989, v34990, v34991, v34992, 0, v34994, v34995, 1, v34997, v34998, v34999, v35487, v35000, v35001, v35005, v35006, v35007, v35008, v35009, v35010, v35011, v35012, v35013, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2684(v34986, v34987, v34988, v34989, v34990, v34991, v34992, 0, v34994, v34995, 1, v34997, v34998, v34999, v35487, v35000, v35001, v35005, v35006, v35007, v35008, v35009, v35010, v35011, v35012, v35013, 3, 7, 4, 2, 5, 8) -> f_2686(v34986, v34987, v34988, v34989, v34990, v34991, v34992, 0, v34994, v34995, 1, v34997, v34998, v34999, v35487, v35000, v35001, v35005, v35006, v35007, v35008, v35009, v35010, v35011, v35012, v35013, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2686(v34986, v34987, v34988, v34989, v34990, v34991, v34992, 0, v34994, v34995, 1, v34997, v34998, v34999, v35487, v35000, v35001, v35005, v35006, v35007, v35008, v35009, v35010, v35011, v35012, v35013, 3, 7, 4, 2, 5, 8) -> f_2688(v34986, v34987, v34988, v34989, v34990, v34991, v34992, 0, v34994, v34995, 1, v34997, v34998, v34999, v35487, v35000, v35001, v35005, v35006, v35007, v35008, v35009, v35010, v35011, v35012, v35013, 3, 7, 4, 2, 9, 5, 8, 12) :|: v35487 < v34992 && 3 <= v34992 && 2 <= v34998 && 9 <= v34999 && 12 <= v35011
f_2688(v34986, v34987, v34988, v34989, v34990, v34991, v34992, 0, v34994, v34995, 1, v34997, v34998, v34999, v35487, v35000, v35001, v35005, v35006, v35007, v35008, v35009, v35010, v35011, v35012, v35013, 3, 7, 4, 2, 9, 5, 8, 12) -> f_2690(v34986, v34987, v34988, v34989, v34990, v34991, v34992, 0, v34994, v34995, 1, v34997, v34998, v34999, v35487, v35000, v35001, v35005, v35006, v35007, v35008, v35009, v35010, v35011, v35012, v35013, 3, 7, 4, 2, 9, 5, 8, 12) :|: 0 = 0
f_2690(v34986, v34987, v34988, v34989, v34990, v34991, v34992, 0, v34994, v34995, 1, v34997, v34998, v34999, v35487, v35000, v35001, v35005, v35006, v35007, v35008, v35009, v35010, v35011, v35012, v35013, 3, 7, 4, 2, 9, 5, 8, 12) -> f_2692(v34986, v34987, v34988, v34989, v34990, v34991, v34992, 0, v34994, v34995, 1, v34997, v34998, v34999, v35487, v35000, v35001, v35005, v35006, v35007, v35008, v35009, v35010, v35011, v35012, v35013, 3, 7, 4, 2, 9, 5, 8, 12) :|: TRUE
f_2692(v34986, v34987, v34988, v34989, v34990, v34991, v34992, 0, v34994, v34995, 1, v34997, v34998, v34999, v35487, v35000, v35001, v35005, v35006, v35007, v35008, v35009, v35010, v35011, v35012, v35013, 3, 7, 4, 2, 9, 5, 8, 12) -> f_2621(v34986, v34987, v34988, v34989, v34990, v34991, v34992, 0, v34994, v34995, 1, v34997, v34998, v34999, v35487, v35000, v35001, 0, v35000, v35001, v35005, v35006, v35007, v35008, v35009, v35010, v35011, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2644(v32968, v32969, v32970, v32971, v32972, v32973, v32974, 0, v32976, v32977, 1, v32979, v32980, v32981, v32987, v34174, v34175, v32985, v32986, v32982, v32988, v32989, v32990, v32991, v32992, v32993, v32994, v32983, v32984, 3, 7, 4, 2, 5, 8) -> f_2648(v32968, v32969, v32970, v32971, v32972, v32973, v32974, 0, v32976, v32977, 1, v32979, v32980, v32981, v32987, v34174, v34175, v32985, v32986, v32982, v32988, v32989, v32990, v32991, v32992, v32993, v32994, v32983, v32984, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2648(v32968, v32969, v32970, v32971, v32972, v32973, v32974, 0, v32976, v32977, 1, v32979, v32980, v32981, v32987, v34174, v34175, v32985, v32986, v32982, v32988, v32989, v32990, v32991, v32992, v32993, v32994, v32983, v32984, 3, 7, 4, 2, 5, 8) -> f_2651(v32968, v32969, v32970, v32971, v32972, v32973, v32974, 0, v32976, v32977, 1, v32979, v32980, v32981, v32987, v34174, v34175, v32985, v32986, v32982, v32988, v32989, v32990, v32991, v32992, v32993, v32994, v32983, v32984, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2651(v32968, v32969, v32970, v32971, v32972, v32973, v32974, 0, v32976, v32977, 1, v32979, v32980, v32981, v32987, v34174, v34175, v32985, v32986, v32982, v32988, v32989, v32990, v32991, v32992, v32993, v32994, v32983, v32984, 3, 7, 4, 2, 5, 8) -> f_2577(v32968, v32969, v32970, v32971, v32972, v32973, v32974, 0, v32976, v32977, 1, v32979, v32980, v32981, v32987, v34174, v34175, v32985, v32986, v32982, v32988, v32989, v32990, v32991, v32992, v32993, v32994, v32523, v32524, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2577(v32496, v32497, v32498, v32499, v32500, v32501, v32502, 0, v32504, v32505, 1, v32507, v32508, v32509, v32510, v32511, v32512, v32513, v32514, v32515, v32516, v32517, v32518, v32519, v32520, v32521, v32522, v32523, v32524, 3, 7, 4, 2, 5, 8) -> f_2581(v32496, v32497, v32498, v32499, v32500, v32501, v32502, 0, v32504, v32505, 1, v32507, v32508, v32509, v32510, v32511, v32512, v32513, v32514, v32515, v32516, v32517, v32518, v32519, v32520, v32521, v32522, v32523, v32524, 3, 7, 4, 2, 5, 8) :|: TRUE
Combined rules. Obtained 4 rulesP rules:
f_2640(v32968:0, v32969:0, v32970:0, v32971:0, v32972:0, v32973:0, v32974:0, 0, v32976:0, v32977:0, 1, v32979:0, v32980:0, v32981:0, v32987:0, v34174:0, v34175:0, v32985:0, v32986:0, v32982:0, v32988:0, v32989:0, v32990:0, v32991:0, v32992:0, v32993:0, v32994:0, v32983:0, v32984:0, 3, 7, 4, 2, 5, 8) -> f_2640(v32968:0, v32969:0, v32970:0, v32971:0, v32972:0, v32973:0, v32974:0, 0, v32976:0, v32977:0, 1, v32979:0, v32980:0, v32981:0, 1 + v32987:0, v32977:0 + 4 * (1 + v32987:0), v34175:1, v32985:0, v32986:0, v32987:0, v32988:0, v32989:0, v32990:0, v32991:0, v32992:0, v32993:0, v32994:0, v34174:0, v34175:0, 3, 7, 4, 2, 5, 8) :|: v32987:0 > 0 && v32974:0 > 1 + v32987:0 && v32977:0 + 4 * (1 + v32987:0) > 4 && v34175:0 < 1
f_2665(v34986:0, v34987:0, v34988:0, v34989:0, v34990:0, v34991:0, v34992:0, 0, v34994:0, v34995:0, 1, v34997:0, v34998:0, v34999:0, v35000:0, v34995:0 + 4 * v35000:0, 1 + v35628:0, v35003:0, v35002:0, v35005:0, v35006:0, v35007:0, v35008:0, v35009:0, v35010:0, v35011:0, v35012:0, v35013:0, 3, 7, 4, 2, 5, 8) -> f_2665(v34986:0, v34987:0, v34988:0, v34989:0, v34990:0, v34991:0, v34992:0, 0, v34994:0, v34995:0, 1, v34997:0, v34998:0, v34999:0, v35000:0, v34995:0 + 4 * v35000:0, v35628:0, v35003:0, 1 + v35628:0, v35005:0, v35006:0, v35007:0, v35008:0, v35009:0, v35010:0, v35011:0, v35012:1, v35013:1, 3, 7, 4, 2, 5, 8) :|: v35628:0 > -1 && v35002:0 > 1
f_2640(v32968:0, v32969:0, v32970:0, v32971:0, v32972:0, v32973:0, v32974:0, 0, v32976:0, v32977:0, 1, v32979:0, v32980:0, v32981:0, v32987:0, v32977:0 + 4 * v32987:0, 1 + v35628:0, v32985:0, v32986:0, v32982:0, v32988:0, v32989:0, v32990:0, v32991:0, v32992:0, v32993:0, v32994:0, v32983:0, v32984:0, 3, 7, 4, 2, 5, 8) -> f_2665(v32968:0, v32969:0, v32970:0, v32971:0, v32972:0, v32973:0, v32974:0, 0, v32976:0, v32977:0, 1, v32979:0, v32980:0, v32981:0, v32987:0, v32977:0 + 4 * v32987:0, v35628:0, v32982:0, 1 + v35628:0, v32988:0, v32989:0, v32990:0, v32991:0, v32992:0, v32993:0, v32994:0, v35012:0, v35013:0, 3, 7, 4, 2, 5, 8) :|: v35628:0 > -1
f_2665(v34986:0, v34987:0, v34988:0, v34989:0, v34990:0, v34991:0, v34992:0, 0, v34994:0, v34995:0, 1, v34997:0, v34998:0, v34999:0, v35000:0, v35001:0, 0, v35003:0, 1, v35005:0, v35006:0, v35007:0, v35008:0, v35009:0, v35010:0, v35011:0, v35012:0, v35013:0, 3, 7, 4, 2, 5, 8) -> f_2640(v34986:0, v34987:0, v34988:0, v34989:0, v34990:0, v34991:0, v34992:0, 0, v34994:0, v34995:0, 1, v34997:0, v34998:0, v34999:0, 1 + v35000:0, v34995:0 + 4 * (1 + v35000:0), v34175:0, v35000:0, v35001:0, v35000:0, v35005:0, v35006:0, v35007:0, v35008:0, v35009:0, v35010:0, v35011:0, v35001:0, 0, 3, 7, 4, 2, 5, 8) :|: v35000:0 > 0 && v34992:0 > 2 && v34992:0 > 1 + v35000:0 && v34998:0 > 1 && v34999:0 > 8 && v34995:0 + 4 * (1 + v35000:0) > 4 && v35011:0 > 11
Filtered unneeded arguments:
   f_2640(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35) -> f_2640(x7, x10, x13, x14, x15, x16, x17, x27)
   f_2665(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34) -> f_2665(x7, x10, x13, x14, x15, x16, x17, x19, x26)
Removed division, modulo operations, cleaned up constraints. Obtained 4 rules.P rules:
f_2640(v32974:0, v32977:0, v32980:0, v32981:0, v32987:0, v34174:0, v34175:0, v32994:0) -> f_2640(v32974:0, v32977:0, v32980:0, v32981:0, 1 + v32987:0, v32977:0 + (4 + 4 * v32987:0), v34175:1, v32994:0) :|: v32974:0 > 1 + v32987:0 && v32987:0 > 0 && v34175:0 < 1 && v32977:0 + (4 + 4 * v32987:0) > 4
f_2665(v34992:0, v34995:0, v34998:0, v34999:0, v35000:0, sum~v34995:0~times~cons_4~v35000:0, sum~cons_1~v35628:0, v35002:0, v35011:0) -> f_2665(v34992:0, v34995:0, v34998:0, v34999:0, v35000:0, v34995:0 + 4 * v35000:0, v35628:0, 1 + v35628:0, v35011:0) :|: v35628:0 > -1 && v35002:0 > 1 && sum~v34995:0~times~cons_4~v35000:0 = v34995:0 + 4 * v35000:0 && sum~cons_1~v35628:0 = 1 + v35628:0
f_2640(v32974:0, v32977:0, v32980:0, v32981:0, v32987:0, sum~v32977:0~times~cons_4~v32987:0, sum~cons_1~v35628:0, v32994:0) -> f_2665(v32974:0, v32977:0, v32980:0, v32981:0, v32987:0, v32977:0 + 4 * v32987:0, v35628:0, 1 + v35628:0, v32994:0) :|: v35628:0 > -1 && sum~v32977:0~times~cons_4~v32987:0 = v32977:0 + 4 * v32987:0 && sum~cons_1~v35628:0 = 1 + v35628:0
f_2665(v34992:0, v34995:0, v34998:0, v34999:0, v35000:0, v35001:0, cons_0, cons_1, v35011:0) -> f_2640(v34992:0, v34995:0, v34998:0, v34999:0, 1 + v35000:0, v34995:0 + (4 + 4 * v35000:0), v34175:0, v35011:0) :|: v34992:0 > 2 && v35000:0 > 0 && v34992:0 > 1 + v35000:0 && v34998:0 > 1 && v34999:0 > 8 && v35011:0 > 11 && v34995:0 + (4 + 4 * v35000:0) > 4 && cons_0 = 0 && cons_1 = 1

----------------------------------------

(9)
Obligation:
Rules:
f_2640(v32974:0, v32977:0, v32980:0, v32981:0, v32987:0, v34174:0, v34175:0, v32994:0) -> f_2640(v32974:0, v32977:0, v32980:0, v32981:0, 1 + v32987:0, v32977:0 + (4 + 4 * v32987:0), v34175:1, v32994:0) :|: v32974:0 > 1 + v32987:0 && v32987:0 > 0 && v34175:0 < 1 && v32977:0 + (4 + 4 * v32987:0) > 4
f_2665(v34992:0, v34995:0, v34998:0, v34999:0, v35000:0, sum~v34995:0~times~cons_4~v35000:0, sum~cons_1~v35628:0, v35002:0, v35011:0) -> f_2665(v34992:0, v34995:0, v34998:0, v34999:0, v35000:0, v34995:0 + 4 * v35000:0, v35628:0, 1 + v35628:0, v35011:0) :|: v35628:0 > -1 && v35002:0 > 1 && sum~v34995:0~times~cons_4~v35000:0 = v34995:0 + 4 * v35000:0 && sum~cons_1~v35628:0 = 1 + v35628:0
f_2640(x, x1, x2, x3, x4, x5, x6, x7) -> f_2665(x, x1, x2, x3, x4, x1 + 4 * x4, x8, 1 + x8, x7) :|: x8 > -1 && x5 = x1 + 4 * x4 && x6 = 1 + x8
f_2665(x9, x10, x11, x12, x13, x14, x15, x16, x17) -> f_2640(x9, x10, x11, x12, 1 + x13, x10 + (4 + 4 * x13), x18, x17) :|: x9 > 2 && x13 > 0 && x9 > 1 + x13 && x11 > 1 && x12 > 8 && x17 > 11 && x10 + (4 + 4 * x13) > 4 && x15 = 0 && x16 = 1

----------------------------------------

(10) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(11)
Obligation:
Rules:
f_2665(v34992:0:0, v34995:0:0, v34998:0:0, v34999:0:0, v35000:0:0, sum~v34995:0:0~times~cons_4~v35000:0:0, sum~cons_1~v35628:0:0, v35002:0:0, v35011:0:0) -> f_2665(v34992:0:0, v34995:0:0, v34998:0:0, v34999:0:0, v35000:0:0, v34995:0:0 + 4 * v35000:0:0, v35628:0:0, 1 + v35628:0:0, v35011:0:0) :|: v35628:0:0 > -1 && v35002:0:0 > 1 && sum~v34995:0:0~times~cons_4~v35000:0:0 = v34995:0:0 + 4 * v35000:0:0 && sum~cons_1~v35628:0:0 = 1 + v35628:0:0
f_2640(v32974:0:0, v32977:0:0, v32980:0:0, v32981:0:0, v32987:0:0, v34174:0:0, v34175:0:0, v32994:0:0) -> f_2640(v32974:0:0, v32977:0:0, v32980:0:0, v32981:0:0, 1 + v32987:0:0, v32977:0:0 + (4 + 4 * v32987:0:0), v34175:1:0, v32994:0:0) :|: v34175:0:0 < 1 && v32977:0:0 + (4 + 4 * v32987:0:0) > 4 && v32987:0:0 > 0 && v32974:0:0 > 1 + v32987:0:0
f_2640(x:0, x1:0, x2:0, x3:0, x4:0, sum~x1:0~times~cons_4~x4:0, sum~cons_1~x8:0, x7:0) -> f_2665(x:0, x1:0, x2:0, x3:0, x4:0, x1:0 + 4 * x4:0, x8:0, 1 + x8:0, x7:0) :|: x8:0 > -1 && sum~x1:0~times~cons_4~x4:0 = x1:0 + 4 * x4:0 && sum~cons_1~x8:0 = 1 + x8:0
f_2665(x9:0, x10:0, x11:0, x12:0, x13:0, x14:0, cons_0, cons_1, x17:0) -> f_2640(x9:0, x10:0, x11:0, x12:0, 1 + x13:0, x10:0 + (4 + 4 * x13:0), x18:0, x17:0) :|: x17:0 > 11 && x10:0 + (4 + 4 * x13:0) > 4 && x12:0 > 8 && x11:0 > 1 && x9:0 > 1 + x13:0 && x13:0 > 0 && x9:0 > 2 && cons_0 = 0 && cons_1 = 1

----------------------------------------

(12) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_2665 ] = -2*f_2665_5 + 2*f_2665_1 + -1
[ f_2640 ] = -2*f_2640_5 + 2*f_2640_1

The following rules are decreasing:
f_2640(v32974:0:0, v32977:0:0, v32980:0:0, v32981:0:0, v32987:0:0, v34174:0:0, v34175:0:0, v32994:0:0) -> f_2640(v32974:0:0, v32977:0:0, v32980:0:0, v32981:0:0, 1 + v32987:0:0, v32977:0:0 + (4 + 4 * v32987:0:0), v34175:1:0, v32994:0:0) :|: v34175:0:0 < 1 && v32977:0:0 + (4 + 4 * v32987:0:0) > 4 && v32987:0:0 > 0 && v32974:0:0 > 1 + v32987:0:0
f_2640(x:0, x1:0, x2:0, x3:0, x4:0, sum~x1:0~times~cons_4~x4:0, sum~cons_1~x8:0, x7:0) -> f_2665(x:0, x1:0, x2:0, x3:0, x4:0, x1:0 + 4 * x4:0, x8:0, 1 + x8:0, x7:0) :|: x8:0 > -1 && sum~x1:0~times~cons_4~x4:0 = x1:0 + 4 * x4:0 && sum~cons_1~x8:0 = 1 + x8:0
f_2665(x9:0, x10:0, x11:0, x12:0, x13:0, x14:0, cons_0, cons_1, x17:0) -> f_2640(x9:0, x10:0, x11:0, x12:0, 1 + x13:0, x10:0 + (4 + 4 * x13:0), x18:0, x17:0) :|: x17:0 > 11 && x10:0 + (4 + 4 * x13:0) > 4 && x12:0 > 8 && x11:0 > 1 && x9:0 > 1 + x13:0 && x13:0 > 0 && x9:0 > 2 && cons_0 = 0 && cons_1 = 1

The following rules are bounded:
f_2640(v32974:0:0, v32977:0:0, v32980:0:0, v32981:0:0, v32987:0:0, v34174:0:0, v34175:0:0, v32994:0:0) -> f_2640(v32974:0:0, v32977:0:0, v32980:0:0, v32981:0:0, 1 + v32987:0:0, v32977:0:0 + (4 + 4 * v32987:0:0), v34175:1:0, v32994:0:0) :|: v34175:0:0 < 1 && v32977:0:0 + (4 + 4 * v32987:0:0) > 4 && v32987:0:0 > 0 && v32974:0:0 > 1 + v32987:0:0


----------------------------------------

(13)
Obligation:
Rules:
f_2665(v34992:0:0, v34995:0:0, v34998:0:0, v34999:0:0, v35000:0:0, sum~v34995:0:0~times~cons_4~v35000:0:0, sum~cons_1~v35628:0:0, v35002:0:0, v35011:0:0) -> f_2665(v34992:0:0, v34995:0:0, v34998:0:0, v34999:0:0, v35000:0:0, v34995:0:0 + 4 * v35000:0:0, v35628:0:0, 1 + v35628:0:0, v35011:0:0) :|: v35628:0:0 > -1 && v35002:0:0 > 1 && sum~v34995:0:0~times~cons_4~v35000:0:0 = v34995:0:0 + 4 * v35000:0:0 && sum~cons_1~v35628:0:0 = 1 + v35628:0:0
f_2640(x:0, x1:0, x2:0, x3:0, x4:0, sum~x1:0~times~cons_4~x4:0, sum~cons_1~x8:0, x7:0) -> f_2665(x:0, x1:0, x2:0, x3:0, x4:0, x1:0 + 4 * x4:0, x8:0, 1 + x8:0, x7:0) :|: x8:0 > -1 && sum~x1:0~times~cons_4~x4:0 = x1:0 + 4 * x4:0 && sum~cons_1~x8:0 = 1 + x8:0
f_2665(x9:0, x10:0, x11:0, x12:0, x13:0, x14:0, cons_0, cons_1, x17:0) -> f_2640(x9:0, x10:0, x11:0, x12:0, 1 + x13:0, x10:0 + (4 + 4 * x13:0), x18:0, x17:0) :|: x17:0 > 11 && x10:0 + (4 + 4 * x13:0) > 4 && x12:0 > 8 && x11:0 > 1 && x9:0 > 1 + x13:0 && x13:0 > 0 && x9:0 > 2 && cons_0 = 0 && cons_1 = 1

----------------------------------------

(14) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(15)
Obligation:
Rules:
f_2665(v34992:0:0:0, v34995:0:0:0, v34998:0:0:0, v34999:0:0:0, v35000:0:0:0, sum~v34995:0:0:0~times~cons_4~v35000:0:0:0, sum~cons_1~v35628:0:0:0, v35002:0:0:0, v35011:0:0:0) -> f_2665(v34992:0:0:0, v34995:0:0:0, v34998:0:0:0, v34999:0:0:0, v35000:0:0:0, v34995:0:0:0 + 4 * v35000:0:0:0, v35628:0:0:0, 1 + v35628:0:0:0, v35011:0:0:0) :|: v35628:0:0:0 > -1 && v35002:0:0:0 > 1 && sum~v34995:0:0:0~times~cons_4~v35000:0:0:0 = v34995:0:0:0 + 4 * v35000:0:0:0 && sum~cons_1~v35628:0:0:0 = 1 + v35628:0:0:0
f_2665(x9:0:0, x10:0:0, x11:0:0, x12:0:0, x13:0:0, x14:0:0, cons_0, cons_1, x17:0:0) -> f_2665(x9:0:0, x10:0:0, x11:0:0, x12:0:0, 1 + x13:0:0, x10:0:0 + 4 * (1 + x13:0:0), x8:0:0, 1 + x8:0:0, x17:0:0) :|: x10:0:0 + (4 + 4 * x13:0:0) = x10:0:0 + 4 * (1 + x13:0:0) && x8:0:0 > -1 && x9:0:0 > 2 && x13:0:0 > 0 && x9:0:0 > 1 + x13:0:0 && x11:0:0 > 1 && x12:0:0 > 8 && x10:0:0 + (4 + 4 * x13:0:0) > 4 && x17:0:0 > 11 && cons_0 = 0 && cons_1 = 1

----------------------------------------

(16) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_2665 ] = 9/4*f_2665_2 + -1*f_2665_5 + 10*f_2665_1 + 2*f_2665_3 + 2*f_2665_4 + 2*f_2665_9

The following rules are decreasing:
f_2665(x9:0:0, x10:0:0, x11:0:0, x12:0:0, x13:0:0, x14:0:0, cons_0, cons_1, x17:0:0) -> f_2665(x9:0:0, x10:0:0, x11:0:0, x12:0:0, 1 + x13:0:0, x10:0:0 + 4 * (1 + x13:0:0), x8:0:0, 1 + x8:0:0, x17:0:0) :|: x10:0:0 + (4 + 4 * x13:0:0) = x10:0:0 + 4 * (1 + x13:0:0) && x8:0:0 > -1 && x9:0:0 > 2 && x13:0:0 > 0 && x9:0:0 > 1 + x13:0:0 && x11:0:0 > 1 && x12:0:0 > 8 && x10:0:0 + (4 + 4 * x13:0:0) > 4 && x17:0:0 > 11 && cons_0 = 0 && cons_1 = 1

The following rules are bounded:
f_2665(x9:0:0, x10:0:0, x11:0:0, x12:0:0, x13:0:0, x14:0:0, cons_0, cons_1, x17:0:0) -> f_2665(x9:0:0, x10:0:0, x11:0:0, x12:0:0, 1 + x13:0:0, x10:0:0 + 4 * (1 + x13:0:0), x8:0:0, 1 + x8:0:0, x17:0:0) :|: x10:0:0 + (4 + 4 * x13:0:0) = x10:0:0 + 4 * (1 + x13:0:0) && x8:0:0 > -1 && x9:0:0 > 2 && x13:0:0 > 0 && x9:0:0 > 1 + x13:0:0 && x11:0:0 > 1 && x12:0:0 > 8 && x10:0:0 + (4 + 4 * x13:0:0) > 4 && x17:0:0 > 11 && cons_0 = 0 && cons_1 = 1


----------------------------------------

(17)
Obligation:
Rules:
f_2665(v34992:0:0:0, v34995:0:0:0, v34998:0:0:0, v34999:0:0:0, v35000:0:0:0, sum~v34995:0:0:0~times~cons_4~v35000:0:0:0, sum~cons_1~v35628:0:0:0, v35002:0:0:0, v35011:0:0:0) -> f_2665(v34992:0:0:0, v34995:0:0:0, v34998:0:0:0, v34999:0:0:0, v35000:0:0:0, v34995:0:0:0 + 4 * v35000:0:0:0, v35628:0:0:0, 1 + v35628:0:0:0, v35011:0:0:0) :|: v35628:0:0:0 > -1 && v35002:0:0:0 > 1 && sum~v34995:0:0:0~times~cons_4~v35000:0:0:0 = v34995:0:0:0 + 4 * v35000:0:0:0 && sum~cons_1~v35628:0:0:0 = 1 + v35628:0:0:0

----------------------------------------

(18) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(19)
Obligation:
Rules:
f_2665(v34992:0:0:0:0, v34995:0:0:0:0, v34998:0:0:0:0, v34999:0:0:0:0, v35000:0:0:0:0, sum~v34995:0:0:0:0~times~cons_4~v35000:0:0:0:0, sum~cons_1~v35628:0:0:0:0, v35002:0:0:0:0, v35011:0:0:0:0) -> f_2665(v34992:0:0:0:0, v34995:0:0:0:0, v34998:0:0:0:0, v34999:0:0:0:0, v35000:0:0:0:0, v34995:0:0:0:0 + 4 * v35000:0:0:0:0, v35628:0:0:0:0, 1 + v35628:0:0:0:0, v35011:0:0:0:0) :|: v35628:0:0:0:0 > -1 && v35002:0:0:0:0 > 1 && sum~v34995:0:0:0:0~times~cons_4~v35000:0:0:0:0 = v34995:0:0:0:0 + 4 * v35000:0:0:0:0 && sum~cons_1~v35628:0:0:0:0 = 1 + v35628:0:0:0:0

----------------------------------------

(20) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_2665(x1, x2, x3, x4, x5, x6, x7, x8, x9) -> f_2665(x2, x5, x6, x7, x8)

----------------------------------------

(21)
Obligation:
Rules:
f_2665(v34995:0:0:0:0, v35000:0:0:0:0, sum~v34995:0:0:0:0~times~cons_4~v35000:0:0:0:0, sum~cons_1~v35628:0:0:0:0, v35002:0:0:0:0) -> f_2665(v34995:0:0:0:0, v35000:0:0:0:0, v34995:0:0:0:0 + 4 * v35000:0:0:0:0, v35628:0:0:0:0, 1 + v35628:0:0:0:0) :|: v35628:0:0:0:0 > -1 && v35002:0:0:0:0 > 1 && sum~v34995:0:0:0:0~times~cons_4~v35000:0:0:0:0 = v34995:0:0:0:0 + 4 * v35000:0:0:0:0 && sum~cons_1~v35628:0:0:0:0 = 1 + v35628:0:0:0:0

----------------------------------------

(22) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_2665(x, x1, x2, x3, x4)] = x3

The following rules are decreasing:
f_2665(v34995:0:0:0:0, v35000:0:0:0:0, sum~v34995:0:0:0:0~times~cons_4~v35000:0:0:0:0, sum~cons_1~v35628:0:0:0:0, v35002:0:0:0:0) -> f_2665(v34995:0:0:0:0, v35000:0:0:0:0, v34995:0:0:0:0 + 4 * v35000:0:0:0:0, v35628:0:0:0:0, 1 + v35628:0:0:0:0) :|: v35628:0:0:0:0 > -1 && v35002:0:0:0:0 > 1 && sum~v34995:0:0:0:0~times~cons_4~v35000:0:0:0:0 = v34995:0:0:0:0 + 4 * v35000:0:0:0:0 && sum~cons_1~v35628:0:0:0:0 = 1 + v35628:0:0:0:0
The following rules are bounded:
f_2665(v34995:0:0:0:0, v35000:0:0:0:0, sum~v34995:0:0:0:0~times~cons_4~v35000:0:0:0:0, sum~cons_1~v35628:0:0:0:0, v35002:0:0:0:0) -> f_2665(v34995:0:0:0:0, v35000:0:0:0:0, v34995:0:0:0:0 + 4 * v35000:0:0:0:0, v35628:0:0:0:0, 1 + v35628:0:0:0:0) :|: v35628:0:0:0:0 > -1 && v35002:0:0:0:0 > 1 && sum~v34995:0:0:0:0~times~cons_4~v35000:0:0:0:0 = v34995:0:0:0:0 + 4 * v35000:0:0:0:0 && sum~cons_1~v35628:0:0:0:0 = 1 + v35628:0:0:0:0

----------------------------------------

(23)
YES

----------------------------------------

(24)
Obligation:
SCC
----------------------------------------

(25) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 48 rulesP rules:
f_2521(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v28418, v28420, v27154, v30278, v27158, v27159, v27160, v27161, v27162, v27163, v27164, v27155, v27156, 3, 7, 4, 2, 5, 8) -> f_2526(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v28418, v28420, v27154, v30278, v27158, v27159, v27160, v27161, v27162, v27163, v27164, v27155, v27156, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2526(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v28418, v28420, v27154, v30278, v27158, v27159, v27160, v27161, v27162, v27163, v27164, v27155, v27156, 3, 7, 4, 2, 5, 8) -> f_2532(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v28418, v28420, v27154, v30278, v27158, v27159, v27160, v27161, v27162, v27163, v27164, v27155, v27156, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2532(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v28418, v28420, v27154, v30278, v27158, v27159, v27160, v27161, v27162, v27163, v27164, v27155, v27156, 3, 7, 4, 2, 5, 8) -> f_2537(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v28418, v28420, v27154, v30278, v27158, v27159, v27160, v27161, v27162, v27163, v27164, v27155, v27156, 3, 7, 4, 2, 5, 8) :|: v28418 = v27149 + 4 * v27157
f_2537(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v28418, v28420, v27154, v30278, v27158, v27159, v27160, v27161, v27162, v27163, v27164, v27155, v27156, 3, 7, 4, 2, 5, 8) -> f_2542(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v28418, v30278, v27154, v28420, v27158, v27159, v27160, v27161, v27162, v27163, v27164, v27155, v27156, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2542(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v28418, v30278, v27154, v28420, v27158, v27159, v27160, v27161, v27162, v27163, v27164, v27155, v27156, 3, 7, 4, 2, 5, 8) -> f_2547(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v28418, v30278, v27154, v28420, v27158, v27159, v27160, v27161, v27162, v27163, v27164, v27155, v27156, 3, 7, 4, 2, 5, 8) :|: 0 < v30278 && 2 <= v28420
f_2542(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v28418, v30278, v27154, v28420, v27158, v27159, v27160, v27161, v27162, v27163, v27164, v27155, v27156, 3, 7, 4, 2, 5, 8) -> f_2548(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v28418, v27154, v27158, v27159, v27160, v27161, v27162, v27163, v27164, v27155, v27156, 3, 7, 4, 2, 5, 8) :|: v30278 <= 0 && v28420 = 1 && v30278 = 0 && 0 = 0
f_2547(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v28418, v30278, v27154, v28420, v27158, v27159, v27160, v27161, v27162, v27163, v27164, v27155, v27156, 3, 7, 4, 2, 5, 8) -> f_2554(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v28418, v30278, v27154, v28420, v27158, v27159, v27160, v27161, v27162, v27163, v27164, v27155, v27156, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2554(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v28418, v30278, v27154, v28420, v27158, v27159, v27160, v27161, v27162, v27163, v27164, v27155, v27156, 3, 7, 4, 2, 5, 8) -> f_2562(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v28418, v30278, v27154, v28420, v27158, v27159, v27160, v27161, v27162, v27163, v27164, v27155, v27156, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2562(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v28418, v30278, v27154, v28420, v27158, v27159, v27160, v27161, v27162, v27163, v27164, v27155, v27156, 3, 7, 4, 2, 5, 8) -> f_2563(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v28418, v30278, v27157, v28418, v28420, v30278, v27154, v27158, v27159, v27160, v27161, v27162, v27163, v27164, v31553, v31554, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2563(v31524, v31525, v31526, v31527, v31528, v31529, v31530, 0, v31532, v31533, 1, v31535, v31536, v31537, v31538, v31539, v31540, v31541, v31542, v31543, v31544, v31545, v31546, v31547, v31548, v31549, v31550, v31551, v31552, v31553, v31554, 3, 7, 4, 2, 5, 8) -> f_2570(v31524, v31525, v31526, v31527, v31528, v31529, v31530, 0, v31532, v31533, 1, v31535, v31536, v31537, v31538, v31539, v31540, v31541, v31542, v31543, v31544, v31545, v31546, v31547, v31548, v31549, v31550, v31551, v31552, v31553, v31554, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2570(v31524, v31525, v31526, v31527, v31528, v31529, v31530, 0, v31532, v31533, 1, v31535, v31536, v31537, v31538, v31539, v31540, v31541, v31542, v31543, v31544, v31545, v31546, v31547, v31548, v31549, v31550, v31551, v31552, v31553, v31554, 3, 7, 4, 2, 5, 8) -> f_2578(v31524, v31525, v31526, v31527, v31528, v31529, v31530, 0, v31532, v31533, 1, v31535, v31536, v31537, v31538, v31539, v31540, v31541, v31542, v31543, v31544, v31545, v31546, v31547, v31548, v31549, v31550, v31551, v31552, v31553, v31554, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2578(v31524, v31525, v31526, v31527, v31528, v31529, v31530, 0, v31532, v31533, 1, v31535, v31536, v31537, v31538, v31539, v31540, v31541, v31542, v31543, v31544, v31545, v31546, v31547, v31548, v31549, v31550, v31551, v31552, v31553, v31554, 3, 7, 4, 2, 5, 8) -> f_2582(v31524, v31525, v31526, v31527, v31528, v31529, v31530, 0, v31532, v31533, 1, v31535, v31536, v31537, v31538, v31539, v31540, v31542, v31543, v31544, v31545, v31546, v31547, v31548, v31549, v31550, v31551, v31552, v31553, v31554, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2582(v31524, v31525, v31526, v31527, v31528, v31529, v31530, 0, v31532, v31533, 1, v31535, v31536, v31537, v31538, v31539, v31540, v31542, v31543, v31544, v31545, v31546, v31547, v31548, v31549, v31550, v31551, v31552, v31553, v31554, 3, 7, 4, 2, 5, 8) -> f_2586(v31524, v31525, v31526, v31527, v31528, v31529, v31530, 0, v31532, v31533, 1, v31535, v31536, v31537, v31538, v31539, v31540, v31543, v31544, v31545, v31546, v31547, v31548, v31549, v31550, v31551, v31552, v31542, v31553, v31554, 3, 7, 4, 2, 5, 8) :|: v31539 = v31533 + 4 * v31538
f_2586(v31524, v31525, v31526, v31527, v31528, v31529, v31530, 0, v31532, v31533, 1, v31535, v31536, v31537, v31538, v31539, v31540, v31543, v31544, v31545, v31546, v31547, v31548, v31549, v31550, v31551, v31552, v31542, v31553, v31554, 3, 7, 4, 2, 5, 8) -> f_2590(v31524, v31525, v31526, v31527, v31528, v31529, v31530, 0, v31532, v31533, 1, v31535, v31536, v31537, v31538, v31539, v31540, v31544, v31545, v31546, v31547, v31548, v31549, v31550, v31551, v31552, v31542, v31553, v31554, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2590(v31524, v31525, v31526, v31527, v31528, v31529, v31530, 0, v31532, v31533, 1, v31535, v31536, v31537, v31538, v31539, v31540, v31544, v31545, v31546, v31547, v31548, v31549, v31550, v31551, v31552, v31542, v31553, v31554, 3, 7, 4, 2, 5, 8) -> f_2595(v31524, v31525, v31526, v31527, v31528, v31529, v31530, 0, v31532, v31533, 1, v31535, v31536, v31537, v31538, v31539, v31540, v32850, v31545, v31546, v31547, v31548, v31549, v31550, v31551, v31552, v31542, v31544, v31553, v31554, 3, 7, 4, 2, 5, 8) :|: 1 + v32850 = v31540 && 0 <= v32850
f_2595(v31524, v31525, v31526, v31527, v31528, v31529, v31530, 0, v31532, v31533, 1, v31535, v31536, v31537, v31538, v31539, v31540, v32850, v31545, v31546, v31547, v31548, v31549, v31550, v31551, v31552, v31542, v31544, v31553, v31554, 3, 7, 4, 2, 5, 8) -> f_2600(v31524, v31525, v31526, v31527, v31528, v31529, v31530, 0, v31532, v31533, 1, v31535, v31536, v31537, v31538, v31539, v31540, v32850, v31545, v31546, v31547, v31548, v31549, v31550, v31551, v31552, v31553, v31554, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2600(v31524, v31525, v31526, v31527, v31528, v31529, v31530, 0, v31532, v31533, 1, v31535, v31536, v31537, v31538, v31539, v31540, v32850, v31545, v31546, v31547, v31548, v31549, v31550, v31551, v31552, v31553, v31554, 3, 7, 4, 2, 5, 8) -> f_2604(v31524, v31525, v31526, v31527, v31528, v31529, v31530, 0, v31532, v31533, 1, v31535, v31536, v31537, v31538, v31539, v31540, v32850, v31545, v31546, v31547, v31548, v31549, v31550, v31551, v31552, v31553, v31554, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2604(v31524, v31525, v31526, v31527, v31528, v31529, v31530, 0, v31532, v31533, 1, v31535, v31536, v31537, v31538, v31539, v31540, v32850, v31545, v31546, v31547, v31548, v31549, v31550, v31551, v31552, v31553, v31554, 3, 7, 4, 2, 5, 8) -> f_2516(v31524, v31525, v31526, v31527, v31528, v31529, v31530, 0, v31532, v31533, 1, v31535, v31536, v31537, v31538, v31539, v31540, v31545, v32850, v31546, v31547, v31548, v31549, v31550, v31551, v31552, v27155, v27156, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2516(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v28418, v28420, v27154, v30278, v27158, v27159, v27160, v27161, v27162, v27163, v27164, v27155, v27156, 3, 7, 4, 2, 5, 8) -> f_2521(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v28418, v28420, v27154, v30278, v27158, v27159, v27160, v27161, v27162, v27163, v27164, v27155, v27156, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2548(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v28418, v27154, v27158, v27159, v27160, v27161, v27162, v27163, v27164, v27155, v27156, 3, 7, 4, 2, 5, 8) -> f_2555(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v28418, v27154, v27158, v27159, v27160, v27161, v27162, v27163, v27164, v27155, v27156, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2555(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v28418, v27154, v27158, v27159, v27160, v27161, v27162, v27163, v27164, v27155, v27156, 3, 7, 4, 2, 5, 8) -> f_2564(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v28418, v27154, v27158, v27159, v27160, v27161, v27162, v27163, v27164, v27155, v27156, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2564(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v28418, v27154, v27158, v27159, v27160, v27161, v27162, v27163, v27164, v27155, v27156, 3, 7, 4, 2, 5, 8) -> f_2565(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v28418, 0, v27157, v28418, v27154, v27158, v27159, v27160, v27161, v27162, v27163, v27164, v31717, v31718, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2565(v31690, v31691, v31692, v31693, v31694, v31695, v31696, 0, v31698, v31699, 1, v31701, v31702, v31703, v31704, v31705, v31706, v31707, v31708, v31709, v31710, v31711, v31712, v31713, v31714, v31715, v31716, v31717, v31718, 3, 7, 4, 2, 5, 8) -> f_2571(v31690, v31691, v31692, v31693, v31694, v31695, v31696, 0, v31698, v31699, 1, v31701, v31702, v31703, v31704, v31705, v31706, v31707, v31708, v31709, v31710, v31711, v31712, v31713, v31714, v31715, v31716, v31717, v31718, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2571(v31690, v31691, v31692, v31693, v31694, v31695, v31696, 0, v31698, v31699, 1, v31701, v31702, v31703, v31704, v31705, v31706, v31707, v31708, v31709, v31710, v31711, v31712, v31713, v31714, v31715, v31716, v31717, v31718, 3, 7, 4, 2, 5, 8) -> f_2579(v31690, v31691, v31692, v31693, v31694, v31695, v31696, 0, v31698, v31699, 1, v31701, v31702, v31703, v31704, v31705, v31706, v31707, v31708, v31710, v31711, v31712, v31713, v31714, v31715, v31716, v31717, v31718, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2579(v31690, v31691, v31692, v31693, v31694, v31695, v31696, 0, v31698, v31699, 1, v31701, v31702, v31703, v31704, v31705, v31706, v31707, v31708, v31710, v31711, v31712, v31713, v31714, v31715, v31716, v31717, v31718, 3, 7, 4, 2, 5, 8) -> f_2583(v31690, v31691, v31692, v31693, v31694, v31695, v31696, 0, v31698, v31699, 1, v31701, v31702, v31703, v31704, v31705, v31706, v31707, v31708, v32677, v31710, v31711, v31712, v31713, v31714, v31715, v31716, v31717, v31718, 3, 7, 4, 2, 5, 8) :|: v32677 = 1 + v31704 && 2 <= v32677
f_2583(v31690, v31691, v31692, v31693, v31694, v31695, v31696, 0, v31698, v31699, 1, v31701, v31702, v31703, v31704, v31705, v31706, v31707, v31708, v32677, v31710, v31711, v31712, v31713, v31714, v31715, v31716, v31717, v31718, 3, 7, 4, 2, 5, 8) -> f_2587(v31690, v31691, v31692, v31693, v31694, v31695, v31696, 0, v31698, v31699, 1, v31701, v31702, v31703, v31704, v31705, v31706, v31707, v31708, v32677, v31710, v31711, v31712, v31713, v31714, v31715, v31716, v31717, v31718, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2587(v31690, v31691, v31692, v31693, v31694, v31695, v31696, 0, v31698, v31699, 1, v31701, v31702, v31703, v31704, v31705, v31706, v31707, v31708, v32677, v31710, v31711, v31712, v31713, v31714, v31715, v31716, v31717, v31718, 3, 7, 4, 2, 5, 8) -> f_2591(v31690, v31691, v31692, v31693, v31694, v31695, v31696, 0, v31698, v31699, 1, v31701, v31702, v31703, v31704, v31705, v31706, v31707, v31708, v32677, v31710, v31711, v31712, v31713, v31714, v31715, v31716, v31717, v31718, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2591(v31690, v31691, v31692, v31693, v31694, v31695, v31696, 0, v31698, v31699, 1, v31701, v31702, v31703, v31704, v31705, v31706, v31707, v31708, v32677, v31710, v31711, v31712, v31713, v31714, v31715, v31716, v31717, v31718, 3, 7, 4, 2, 5, 8) -> f_2592(v31690, v31691, v31692, v31693, v31694, v31695, v31696, 0, v31698, v31699, 1, v31701, v31702, v31703, v31704, v31705, v31706, v31707, v31708, v32677, v31710, v31711, v31712, v31713, v31714, v31715, v31716, 3, 7, 4, 8) :|: TRUE
f_2592(v32810, v32811, v32812, v32813, v32814, v32815, v32816, 0, v32818, v32819, 1, v32821, v32822, v32823, v32824, v32825, v32826, v32827, v32828, v32829, v32830, v32831, v32832, v32833, v32834, v32835, v32836, 3, 7, 4, 8) -> f_2596(v32810, v32811, v32812, v32813, v32814, v32815, v32816, 0, v32818, v32819, 1, v32821, v32822, v32823, v32829, v32824, v32825, v32826, v32827, v32828, v32830, v32831, v32832, v32833, v32834, v32835, v32836, 3, 7, 4, 8) :|: 0 = 0
f_2596(v32810, v32811, v32812, v32813, v32814, v32815, v32816, 0, v32818, v32819, 1, v32821, v32822, v32823, v32829, v32824, v32825, v32826, v32827, v32828, v32830, v32831, v32832, v32833, v32834, v32835, v32836, 3, 7, 4, 8) -> f_2601(v32810, v32811, v32812, v32813, v32814, v32815, v32816, 0, v32818, v32819, 1, v32821, v32822, v32823, v32829, v32824, v32825, v32826, v32827, v32828, v32830, v32831, v32832, v32833, v32834, v32835, v32836, 3, 7, 4, 8) :|: 0 = 0
f_2601(v32810, v32811, v32812, v32813, v32814, v32815, v32816, 0, v32818, v32819, 1, v32821, v32822, v32823, v32829, v32824, v32825, v32826, v32827, v32828, v32830, v32831, v32832, v32833, v32834, v32835, v32836, 3, 7, 4, 8) -> f_2605(v32810, v32811, v32812, v32813, v32814, v32815, v32816, 0, v32818, v32819, 1, v32821, v32822, v32823, v32829, v32824, v32825, v32826, v32827, v32828, v32830, v32831, v32832, v32833, v32834, v32835, v32836, 3, 7, 4, 2, 5, 8) :|: v32829 < v32816 && 1 <= v32822 && 5 <= v32823 && 2 <= v32816 && 8 <= v32836
f_2605(v32810, v32811, v32812, v32813, v32814, v32815, v32816, 0, v32818, v32819, 1, v32821, v32822, v32823, v32829, v32824, v32825, v32826, v32827, v32828, v32830, v32831, v32832, v32833, v32834, v32835, v32836, 3, 7, 4, 2, 5, 8) -> f_2609(v32810, v32811, v32812, v32813, v32814, v32815, v32816, 0, v32818, v32819, 1, v32821, v32822, v32823, v32829, v32824, v32825, v32826, v32827, v32828, v32830, v32831, v32832, v32833, v32834, v32835, v32836, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2609(v32810, v32811, v32812, v32813, v32814, v32815, v32816, 0, v32818, v32819, 1, v32821, v32822, v32823, v32829, v32824, v32825, v32826, v32827, v32828, v32830, v32831, v32832, v32833, v32834, v32835, v32836, 3, 7, 4, 2, 5, 8) -> f_2614(v32810, v32811, v32812, v32813, v32814, v32815, v32816, 0, v32818, v32819, 1, v32821, v32822, v32823, v32829, v32824, v32825, v32826, v32827, v32828, v32830, v32831, v32832, v32833, v32834, v32835, v32836, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2614(v32810, v32811, v32812, v32813, v32814, v32815, v32816, 0, v32818, v32819, 1, v32821, v32822, v32823, v32829, v32824, v32825, v32826, v32827, v32828, v32830, v32831, v32832, v32833, v32834, v32835, v32836, 3, 7, 4, 2, 5, 8) -> f_2615(v32810, v32811, v32812, v32813, v32814, v32815, v32816, 0, v32818, v32819, 1, v32821, v32822, v32823, v32829, v32824, v32825, v32826, v32827, v32828, v32830, v32831, v32832, v32833, v32834, v32835, v32836, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2615(v33475, v33476, v33477, v33478, v33479, v33480, v33481, 0, v33483, v33484, 1, v33486, v33487, v33488, v33489, v33490, v33491, v33492, v33493, v33494, v33495, v33496, v33497, v33498, v33499, v33500, v33501, 3, 7, 4, 2, 5, 8) -> f_2619(v33475, v33476, v33477, v33478, v33479, v33480, v33481, 0, v33483, v33484, 1, v33486, v33487, v33488, v33489, v33490, v33491, v33492, v33493, v33494, v33495, v33496, v33497, v33498, v33499, v33500, v33501, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2619(v33475, v33476, v33477, v33478, v33479, v33480, v33481, 0, v33483, v33484, 1, v33486, v33487, v33488, v33489, v33490, v33491, v33492, v33493, v33494, v33495, v33496, v33497, v33498, v33499, v33500, v33501, 3, 7, 4, 2, 5, 8) -> f_2623(v33475, v33476, v33477, v33478, v33479, v33480, v33481, 0, v33483, v33484, 1, v33486, v33487, v33488, v33489, v33490, v33491, v33492, v33493, v33494, v33495, v33496, v33497, v33498, v33499, v33500, v33501, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2623(v33475, v33476, v33477, v33478, v33479, v33480, v33481, 0, v33483, v33484, 1, v33486, v33487, v33488, v33489, v33490, v33491, v33492, v33493, v33494, v33495, v33496, v33497, v33498, v33499, v33500, v33501, 3, 7, 4, 2, 5, 8) -> f_2627(v33475, v33476, v33477, v33478, v33479, v33480, v33481, 0, v33483, v33484, 1, v33486, v33487, v33488, v33489, v33490, v33491, v33492, v33493, v33494, v33495, v33496, v33497, v33498, v33499, v33500, v33501, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2627(v33475, v33476, v33477, v33478, v33479, v33480, v33481, 0, v33483, v33484, 1, v33486, v33487, v33488, v33489, v33490, v33491, v33492, v33493, v33494, v33495, v33496, v33497, v33498, v33499, v33500, v33501, 3, 7, 4, 2, 5, 8) -> f_2631(v33475, v33476, v33477, v33478, v33479, v33480, v33481, 0, v33483, v33484, 1, v33486, v33487, v33488, v33489, v33491, v33492, v33493, v33494, v33490, v33495, v33496, v33497, v33498, v33499, v33500, v33501, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2631(v33475, v33476, v33477, v33478, v33479, v33480, v33481, 0, v33483, v33484, 1, v33486, v33487, v33488, v33489, v33491, v33492, v33493, v33494, v33490, v33495, v33496, v33497, v33498, v33499, v33500, v33501, 3, 7, 4, 2, 5, 8) -> f_2634(v33475, v33476, v33477, v33478, v33479, v33480, v33481, 0, v33483, v33484, 1, v33486, v33487, v33488, v33489, v34171, v33492, v33493, v33494, v33490, v33495, v33496, v33497, v33498, v33499, v33500, v33501, v33491, 3, 7, 4, 2, 5, 8) :|: v34171 = v33484 + 4 * v33489 && 5 <= v34171
f_2634(v33475, v33476, v33477, v33478, v33479, v33480, v33481, 0, v33483, v33484, 1, v33486, v33487, v33488, v33489, v34171, v33492, v33493, v33494, v33490, v33495, v33496, v33497, v33498, v33499, v33500, v33501, v33491, 3, 7, 4, 2, 5, 8) -> f_2636(v33475, v33476, v33477, v33478, v33479, v33480, v33481, 0, v33483, v33484, 1, v33486, v33487, v33488, v33489, v34171, v34172, v33493, v33494, v33490, v33495, v33496, v33497, v33498, v33499, v33500, v33501, v33491, v33492, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2636(v33475, v33476, v33477, v33478, v33479, v33480, v33481, 0, v33483, v33484, 1, v33486, v33487, v33488, v33489, v34171, v34172, v33493, v33494, v33490, v33495, v33496, v33497, v33498, v33499, v33500, v33501, v33491, v33492, 3, 7, 4, 2, 5, 8) -> f_2638(v33475, v33476, v33477, v33478, v33479, v33480, v33481, 0, v33483, v33484, 1, v33486, v33487, v33488, v33489, v34171, v34172, v33493, v33494, v33490, v33495, v33496, v33497, v33498, v33499, v33500, v33501, v33491, v33492, 3, 7, 4, 2, 5, 8) :|: 0 < v34172
f_2636(v33475, v33476, v33477, v33478, v33479, v33480, v33481, 0, v33483, v33484, 1, v33486, v33487, v33488, v33489, v34171, v34172, v33493, v33494, v33490, v33495, v33496, v33497, v33498, v33499, v33500, v33501, v33491, v33492, 3, 7, 4, 2, 5, 8) -> f_2639(v33475, v33476, v33477, v33478, v33479, v33480, v33481, 0, v33483, v33484, 1, v33486, v33487, v33488, v33489, v34171, v34172, v33493, v33494, v33490, v33495, v33496, v33497, v33498, v33499, v33500, v33501, v33491, v33492, 3, 7, 4, 2, 5, 8) :|: v34172 <= 0
f_2638(v33475, v33476, v33477, v33478, v33479, v33480, v33481, 0, v33483, v33484, 1, v33486, v33487, v33488, v33489, v34171, v34172, v33493, v33494, v33490, v33495, v33496, v33497, v33498, v33499, v33500, v33501, v33491, v33492, 3, 7, 4, 2, 5, 8) -> f_2641(v33475, v33476, v33477, v33478, v33479, v33480, v33481, 0, v33483, v33484, 1, v33486, v33487, v33488, v33489, v34171, v34172, v33493, v33494, v33490, v33495, v33496, v33497, v33498, v33499, v33500, v33501, v33491, v33492, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2641(v33475, v33476, v33477, v33478, v33479, v33480, v33481, 0, v33483, v33484, 1, v33486, v33487, v33488, v33489, v34171, v34172, v33493, v33494, v33490, v33495, v33496, v33497, v33498, v33499, v33500, v33501, v33491, v33492, 3, 7, 4, 2, 5, 8) -> f_2645(v33475, v33476, v33477, v33478, v33479, v33480, v33481, 0, v33483, v33484, 1, v33486, v33487, v33488, v33489, v34171, v34172, v33493, v33494, v33490, v33495, v33496, v33497, v33498, v33499, v33500, v33501, v33491, v33492, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2645(v33475, v33476, v33477, v33478, v33479, v33480, v33481, 0, v33483, v33484, 1, v33486, v33487, v33488, v33489, v34171, v34172, v33493, v33494, v33490, v33495, v33496, v33497, v33498, v33499, v33500, v33501, v33491, v33492, 3, 7, 4, 2, 5, 8) -> f_2563(v33475, v33476, v33477, v33478, v33479, v33480, v33481, 0, v33483, v33484, 1, v33486, v33487, v33488, v33489, v34171, v34172, v33493, v33494, 1, 0, v33490, v33495, v33496, v33497, v33498, v33499, v33500, v33501, v31553, v31554, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2639(v33475, v33476, v33477, v33478, v33479, v33480, v33481, 0, v33483, v33484, 1, v33486, v33487, v33488, v33489, v34171, v34172, v33493, v33494, v33490, v33495, v33496, v33497, v33498, v33499, v33500, v33501, v33491, v33492, 3, 7, 4, 2, 5, 8) -> f_2642(v33475, v33476, v33477, v33478, v33479, v33480, v33481, 0, v33483, v33484, 1, v33486, v33487, v33488, v33489, v34171, v34172, v33493, v33494, v33490, v33495, v33496, v33497, v33498, v33499, v33500, v33501, v33491, v33492, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2642(v33475, v33476, v33477, v33478, v33479, v33480, v33481, 0, v33483, v33484, 1, v33486, v33487, v33488, v33489, v34171, v34172, v33493, v33494, v33490, v33495, v33496, v33497, v33498, v33499, v33500, v33501, v33491, v33492, 3, 7, 4, 2, 5, 8) -> f_2646(v33475, v33476, v33477, v33478, v33479, v33480, v33481, 0, v33483, v33484, 1, v33486, v33487, v33488, v33489, v34171, v34172, v33493, v33494, v33490, v33495, v33496, v33497, v33498, v33499, v33500, v33501, v33491, v33492, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2646(v33475, v33476, v33477, v33478, v33479, v33480, v33481, 0, v33483, v33484, 1, v33486, v33487, v33488, v33489, v34171, v34172, v33493, v33494, v33490, v33495, v33496, v33497, v33498, v33499, v33500, v33501, v33491, v33492, 3, 7, 4, 2, 5, 8) -> f_2565(v33475, v33476, v33477, v33478, v33479, v33480, v33481, 0, v33483, v33484, 1, v33486, v33487, v33488, v33489, v34171, v34172, v33493, v33494, v33490, v33495, v33496, v33497, v33498, v33499, v33500, v33501, v31717, v31718, 3, 7, 4, 2, 5, 8) :|: TRUE
Combined rules. Obtained 4 rulesP rules:
f_2636(v33475:0, v33476:0, v33477:0, v33478:0, v33479:0, v33480:0, v33481:0, 0, v33483:0, v33484:0, 1, v33486:0, v33487:0, v33488:0, v33489:0, v34171:0, v34172:0, v33493:0, v33494:0, v33490:0, v33495:0, v33496:0, v33497:0, v33498:0, v33499:0, v33500:0, v33501:0, v33491:0, v33492:0, 3, 7, 4, 2, 5, 8) -> f_2636(v33475:0, v33476:0, v33477:0, v33478:0, v33479:0, v33480:0, v33481:0, 0, v33483:0, v33484:0, 1, v33486:0, v33487:0, v33488:0, 1 + v33489:0, v33484:0 + 4 * (1 + v33489:0), v34172:1, v33493:0, v33494:0, v33489:0, v33495:0, v33496:0, v33497:0, v33498:0, v33499:0, v33500:0, v33501:0, v34171:0, v34172:0, 3, 7, 4, 2, 5, 8) :|: v33489:0 > 0 && v33487:0 > 0 && v33481:0 > 1 + v33489:0 && v33488:0 > 4 && v33481:0 > 1 && v33501:0 > 7 && v34172:0 < 1 && v33484:0 + 4 * (1 + v33489:0) > 4
f_2521(v27140:0, v27141:0, v27142:0, v27143:0, v27144:0, v27145:0, v27146:0, 0, v27148:0, v27149:0, 1, v27151:0, v27152:0, v27153:0, v27157:0, v27149:0 + 4 * v27157:0, 1, v27154:0, 0, v27158:0, v27159:0, v27160:0, v27161:0, v27162:0, v27163:0, v27164:0, v27155:0, v27156:0, 3, 7, 4, 2, 5, 8) -> f_2636(v27140:0, v27141:0, v27142:0, v27143:0, v27144:0, v27145:0, v27146:0, 0, v27148:0, v27149:0, 1, v27151:0, v27152:0, v27153:0, 1 + v27157:0, v27149:0 + 4 * (1 + v27157:0), v34172:0, v27157:0, v27149:0 + 4 * v27157:0, v27157:0, v27158:0, v27159:0, v27160:0, v27161:0, v27162:0, v27163:0, v27164:0, v27149:0 + 4 * v27157:0, 0, 3, 7, 4, 2, 5, 8) :|: v27157:0 > 0 && v27152:0 > 0 && v27146:0 > 1 + v27157:0 && v27153:0 > 4 && v27146:0 > 1 && v27149:0 + 4 * (1 + v27157:0) > 4 && v27164:0 > 7
f_2636(v33475:0, v33476:0, v33477:0, v33478:0, v33479:0, v33480:0, v33481:0, 0, v33483:0, v33484:0, 1, v33486:0, v33487:0, v33488:0, v33489:0, v33484:0 + 4 * v33489:0, 1 + v32850:0, v33493:0, v33494:0, v33490:0, v33495:0, v33496:0, v33497:0, v33498:0, v33499:0, v33500:0, v33501:0, v33491:0, v33492:0, 3, 7, 4, 2, 5, 8) -> f_2521(v33475:0, v33476:0, v33477:0, v33478:0, v33479:0, v33480:0, v33481:0, 0, v33483:0, v33484:0, 1, v33486:0, v33487:0, v33488:0, v33489:0, v33484:0 + 4 * v33489:0, 1 + v32850:0, v33490:0, v32850:0, v33495:0, v33496:0, v33497:0, v33498:0, v33499:0, v33500:0, v33501:0, v27155:0, v27156:0, 3, 7, 4, 2, 5, 8) :|: v32850:0 > -1
f_2521(v27140:0, v27141:0, v27142:0, v27143:0, v27144:0, v27145:0, v27146:0, 0, v27148:0, v27149:0, 1, v27151:0, v27152:0, v27153:0, v27157:0, v27149:0 + 4 * v27157:0, v28420:0, v27154:0, 1 + v32850:0, v27158:0, v27159:0, v27160:0, v27161:0, v27162:0, v27163:0, v27164:0, v27155:0, v27156:0, 3, 7, 4, 2, 5, 8) -> f_2521(v27140:0, v27141:0, v27142:0, v27143:0, v27144:0, v27145:0, v27146:0, 0, v27148:0, v27149:0, 1, v27151:0, v27152:0, v27153:0, v27157:0, v27149:0 + 4 * v27157:0, 1 + v32850:0, v27154:0, v32850:0, v27158:0, v27159:0, v27160:0, v27161:0, v27162:0, v27163:0, v27164:0, v27155:1, v27156:1, 3, 7, 4, 2, 5, 8) :|: v28420:0 > 1 && v32850:0 > -1
Filtered unneeded arguments:
   f_2636(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35) -> f_2636(x7, x10, x13, x14, x15, x16, x17, x27)
   f_2521(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34) -> f_2521(x7, x10, x13, x14, x15, x16, x17, x19, x26)
Removed division, modulo operations, cleaned up constraints. Obtained 4 rules.P rules:
f_2636(v33481:0, v33484:0, v33487:0, v33488:0, v33489:0, v34171:0, v34172:0, v33501:0) -> f_2636(v33481:0, v33484:0, v33487:0, v33488:0, 1 + v33489:0, v33484:0 + (4 + 4 * v33489:0), v34172:1, v33501:0) :|: v33487:0 > 0 && v33489:0 > 0 && v33481:0 > 1 + v33489:0 && v33488:0 > 4 && v33481:0 > 1 && v33501:0 > 7 && v33484:0 + (4 + 4 * v33489:0) > 4 && v34172:0 < 1
f_2521(v27146:0, v27149:0, v27152:0, v27153:0, v27157:0, sum~v27149:0~times~cons_4~v27157:0, cons_1, cons_0, v27164:0) -> f_2636(v27146:0, v27149:0, v27152:0, v27153:0, 1 + v27157:0, v27149:0 + (4 + 4 * v27157:0), v34172:0, v27164:0) :|: v27152:0 > 0 && v27157:0 > 0 && v27146:0 > 1 + v27157:0 && v27153:0 > 4 && v27146:0 > 1 && v27164:0 > 7 && v27149:0 + (4 + 4 * v27157:0) > 4 && sum~v27149:0~times~cons_4~v27157:0 = v27149:0 + 4 * v27157:0 && cons_1 = 1 && cons_0 = 0
f_2636(v33481:0, v33484:0, v33487:0, v33488:0, v33489:0, sum~v33484:0~times~cons_4~v33489:0, sum~cons_1~v32850:0, v33501:0) -> f_2521(v33481:0, v33484:0, v33487:0, v33488:0, v33489:0, v33484:0 + 4 * v33489:0, 1 + v32850:0, v32850:0, v33501:0) :|: v32850:0 > -1 && sum~v33484:0~times~cons_4~v33489:0 = v33484:0 + 4 * v33489:0 && sum~cons_1~v32850:0 = 1 + v32850:0
f_2521(v27146:0, v27149:0, v27152:0, v27153:0, v27157:0, sum~v27149:0~times~cons_4~v27157:0, v28420:0, sum~cons_1~v32850:0, v27164:0) -> f_2521(v27146:0, v27149:0, v27152:0, v27153:0, v27157:0, v27149:0 + 4 * v27157:0, 1 + v32850:0, v32850:0, v27164:0) :|: v28420:0 > 1 && v32850:0 > -1 && sum~v27149:0~times~cons_4~v27157:0 = v27149:0 + 4 * v27157:0 && sum~cons_1~v32850:0 = 1 + v32850:0

----------------------------------------

(26)
Obligation:
Rules:
f_2636(v33481:0, v33484:0, v33487:0, v33488:0, v33489:0, v34171:0, v34172:0, v33501:0) -> f_2636(v33481:0, v33484:0, v33487:0, v33488:0, 1 + v33489:0, v33484:0 + (4 + 4 * v33489:0), v34172:1, v33501:0) :|: v33487:0 > 0 && v33489:0 > 0 && v33481:0 > 1 + v33489:0 && v33488:0 > 4 && v33481:0 > 1 && v33501:0 > 7 && v33484:0 + (4 + 4 * v33489:0) > 4 && v34172:0 < 1
f_2521(x, x1, x2, x3, x4, x5, x6, x7, x8) -> f_2636(x, x1, x2, x3, 1 + x4, x1 + (4 + 4 * x4), x9, x8) :|: x2 > 0 && x4 > 0 && x > 1 + x4 && x3 > 4 && x > 1 && x8 > 7 && x1 + (4 + 4 * x4) > 4 && x5 = x1 + 4 * x4 && x6 = 1 && x7 = 0
f_2636(x10, x11, x12, x13, x14, x15, x16, x17) -> f_2521(x10, x11, x12, x13, x14, x11 + 4 * x14, 1 + x18, x18, x17) :|: x18 > -1 && x15 = x11 + 4 * x14 && x16 = 1 + x18
f_2521(v27146:0, v27149:0, v27152:0, v27153:0, v27157:0, sum~v27149:0~times~cons_4~v27157:0, v28420:0, sum~cons_1~v32850:0, v27164:0) -> f_2521(v27146:0, v27149:0, v27152:0, v27153:0, v27157:0, v27149:0 + 4 * v27157:0, 1 + v32850:0, v32850:0, v27164:0) :|: v28420:0 > 1 && v32850:0 > -1 && sum~v27149:0~times~cons_4~v27157:0 = v27149:0 + 4 * v27157:0 && sum~cons_1~v32850:0 = 1 + v32850:0

----------------------------------------

(27) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(28)
Obligation:
Rules:
f_2636(x10:0, x11:0, x12:0, x13:0, x14:0, sum~x11:0~times~cons_4~x14:0, sum~cons_1~x18:0, x17:0) -> f_2521(x10:0, x11:0, x12:0, x13:0, x14:0, x11:0 + 4 * x14:0, 1 + x18:0, x18:0, x17:0) :|: x18:0 > -1 && sum~x11:0~times~cons_4~x14:0 = x11:0 + 4 * x14:0 && sum~cons_1~x18:0 = 1 + x18:0
f_2521(v27146:0:0, v27149:0:0, v27152:0:0, v27153:0:0, v27157:0:0, sum~v27149:0:0~times~cons_4~v27157:0:0, v28420:0:0, sum~cons_1~v32850:0:0, v27164:0:0) -> f_2521(v27146:0:0, v27149:0:0, v27152:0:0, v27153:0:0, v27157:0:0, v27149:0:0 + 4 * v27157:0:0, 1 + v32850:0:0, v32850:0:0, v27164:0:0) :|: v28420:0:0 > 1 && v32850:0:0 > -1 && sum~v27149:0:0~times~cons_4~v27157:0:0 = v27149:0:0 + 4 * v27157:0:0 && sum~cons_1~v32850:0:0 = 1 + v32850:0:0
f_2636(v33481:0:0, v33484:0:0, v33487:0:0, v33488:0:0, v33489:0:0, v34171:0:0, v34172:0:0, v33501:0:0) -> f_2636(v33481:0:0, v33484:0:0, v33487:0:0, v33488:0:0, 1 + v33489:0:0, v33484:0:0 + (4 + 4 * v33489:0:0), v34172:1:0, v33501:0:0) :|: v33484:0:0 + (4 + 4 * v33489:0:0) > 4 && v34172:0:0 < 1 && v33501:0:0 > 7 && v33481:0:0 > 1 && v33488:0:0 > 4 && v33481:0:0 > 1 + v33489:0:0 && v33489:0:0 > 0 && v33487:0:0 > 0
f_2521(x:0, x1:0, x2:0, x3:0, x4:0, sum~x1:0~times~cons_4~x4:0, cons_1, cons_0, x8:0) -> f_2636(x:0, x1:0, x2:0, x3:0, 1 + x4:0, x1:0 + (4 + 4 * x4:0), x9:0, x8:0) :|: x8:0 > 7 && x1:0 + (4 + 4 * x4:0) > 4 && x:0 > 1 && x3:0 > 4 && x:0 > 1 + x4:0 && x4:0 > 0 && x2:0 > 0 && sum~x1:0~times~cons_4~x4:0 = x1:0 + 4 * x4:0 && cons_1 = 1 && cons_0 = 0

----------------------------------------

(29) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_2636 ] = -2*f_2636_5 + 2*f_2636_1 + 2*f_2636_3 + 2*f_2636_4 + 2*f_2636_8
[ f_2521 ] = 2*f_2521_1 + 2*f_2521_3 + 2*f_2521_4 + -2*f_2521_5 + 2*f_2521_9 + -1

The following rules are decreasing:
f_2636(x10:0, x11:0, x12:0, x13:0, x14:0, sum~x11:0~times~cons_4~x14:0, sum~cons_1~x18:0, x17:0) -> f_2521(x10:0, x11:0, x12:0, x13:0, x14:0, x11:0 + 4 * x14:0, 1 + x18:0, x18:0, x17:0) :|: x18:0 > -1 && sum~x11:0~times~cons_4~x14:0 = x11:0 + 4 * x14:0 && sum~cons_1~x18:0 = 1 + x18:0
f_2636(v33481:0:0, v33484:0:0, v33487:0:0, v33488:0:0, v33489:0:0, v34171:0:0, v34172:0:0, v33501:0:0) -> f_2636(v33481:0:0, v33484:0:0, v33487:0:0, v33488:0:0, 1 + v33489:0:0, v33484:0:0 + (4 + 4 * v33489:0:0), v34172:1:0, v33501:0:0) :|: v33484:0:0 + (4 + 4 * v33489:0:0) > 4 && v34172:0:0 < 1 && v33501:0:0 > 7 && v33481:0:0 > 1 && v33488:0:0 > 4 && v33481:0:0 > 1 + v33489:0:0 && v33489:0:0 > 0 && v33487:0:0 > 0
f_2521(x:0, x1:0, x2:0, x3:0, x4:0, sum~x1:0~times~cons_4~x4:0, cons_1, cons_0, x8:0) -> f_2636(x:0, x1:0, x2:0, x3:0, 1 + x4:0, x1:0 + (4 + 4 * x4:0), x9:0, x8:0) :|: x8:0 > 7 && x1:0 + (4 + 4 * x4:0) > 4 && x:0 > 1 && x3:0 > 4 && x:0 > 1 + x4:0 && x4:0 > 0 && x2:0 > 0 && sum~x1:0~times~cons_4~x4:0 = x1:0 + 4 * x4:0 && cons_1 = 1 && cons_0 = 0

The following rules are bounded:
f_2636(v33481:0:0, v33484:0:0, v33487:0:0, v33488:0:0, v33489:0:0, v34171:0:0, v34172:0:0, v33501:0:0) -> f_2636(v33481:0:0, v33484:0:0, v33487:0:0, v33488:0:0, 1 + v33489:0:0, v33484:0:0 + (4 + 4 * v33489:0:0), v34172:1:0, v33501:0:0) :|: v33484:0:0 + (4 + 4 * v33489:0:0) > 4 && v34172:0:0 < 1 && v33501:0:0 > 7 && v33481:0:0 > 1 && v33488:0:0 > 4 && v33481:0:0 > 1 + v33489:0:0 && v33489:0:0 > 0 && v33487:0:0 > 0


----------------------------------------

(30)
Obligation:
Rules:
f_2636(x10:0, x11:0, x12:0, x13:0, x14:0, sum~x11:0~times~cons_4~x14:0, sum~cons_1~x18:0, x17:0) -> f_2521(x10:0, x11:0, x12:0, x13:0, x14:0, x11:0 + 4 * x14:0, 1 + x18:0, x18:0, x17:0) :|: x18:0 > -1 && sum~x11:0~times~cons_4~x14:0 = x11:0 + 4 * x14:0 && sum~cons_1~x18:0 = 1 + x18:0
f_2521(v27146:0:0, v27149:0:0, v27152:0:0, v27153:0:0, v27157:0:0, sum~v27149:0:0~times~cons_4~v27157:0:0, v28420:0:0, sum~cons_1~v32850:0:0, v27164:0:0) -> f_2521(v27146:0:0, v27149:0:0, v27152:0:0, v27153:0:0, v27157:0:0, v27149:0:0 + 4 * v27157:0:0, 1 + v32850:0:0, v32850:0:0, v27164:0:0) :|: v28420:0:0 > 1 && v32850:0:0 > -1 && sum~v27149:0:0~times~cons_4~v27157:0:0 = v27149:0:0 + 4 * v27157:0:0 && sum~cons_1~v32850:0:0 = 1 + v32850:0:0
f_2521(x:0, x1:0, x2:0, x3:0, x4:0, sum~x1:0~times~cons_4~x4:0, cons_1, cons_0, x8:0) -> f_2636(x:0, x1:0, x2:0, x3:0, 1 + x4:0, x1:0 + (4 + 4 * x4:0), x9:0, x8:0) :|: x8:0 > 7 && x1:0 + (4 + 4 * x4:0) > 4 && x:0 > 1 && x3:0 > 4 && x:0 > 1 + x4:0 && x4:0 > 0 && x2:0 > 0 && sum~x1:0~times~cons_4~x4:0 = x1:0 + 4 * x4:0 && cons_1 = 1 && cons_0 = 0

----------------------------------------

(31) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(32)
Obligation:
Rules:
f_2521(x:0:0, x1:0:0, x2:0:0, x3:0:0, x4:0:0, sum~x1:0:0~times~cons_4~x4:0:0, cons_1, cons_0, x8:0:0) -> f_2521(x:0:0, x1:0:0, x2:0:0, x3:0:0, 1 + x4:0:0, x1:0:0 + 4 * (1 + x4:0:0), 1 + x18:0:0, x18:0:0, x8:0:0) :|: x1:0:0 + (4 + 4 * x4:0:0) = x1:0:0 + 4 * (1 + x4:0:0) && x18:0:0 > -1 && x2:0:0 > 0 && x4:0:0 > 0 && x:0:0 > 1 + x4:0:0 && x3:0:0 > 4 && x:0:0 > 1 && x1:0:0 + (4 + 4 * x4:0:0) > 4 && x8:0:0 > 7 && sum~x1:0:0~times~cons_4~x4:0:0 = x1:0:0 + 4 * x4:0:0 && cons_1 = 1 && cons_0 = 0
f_2521(v27146:0:0:0, v27149:0:0:0, v27152:0:0:0, v27153:0:0:0, v27157:0:0:0, sum~v27149:0:0:0~times~cons_4~v27157:0:0:0, v28420:0:0:0, sum~cons_1~v32850:0:0:0, v27164:0:0:0) -> f_2521(v27146:0:0:0, v27149:0:0:0, v27152:0:0:0, v27153:0:0:0, v27157:0:0:0, v27149:0:0:0 + 4 * v27157:0:0:0, 1 + v32850:0:0:0, v32850:0:0:0, v27164:0:0:0) :|: v28420:0:0:0 > 1 && v32850:0:0:0 > -1 && sum~v27149:0:0:0~times~cons_4~v27157:0:0:0 = v27149:0:0:0 + 4 * v27157:0:0:0 && sum~cons_1~v32850:0:0:0 = 1 + v32850:0:0:0

----------------------------------------

(33) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_2521(x, x1, x2, x3, x4, x5, x6, x7, x8)] = -25 + 5*x + x1 + x2 + x3 - x4 + x8

The following rules are decreasing:
f_2521(x:0:0, x1:0:0, x2:0:0, x3:0:0, x4:0:0, sum~x1:0:0~times~cons_4~x4:0:0, cons_1, cons_0, x8:0:0) -> f_2521(x:0:0, x1:0:0, x2:0:0, x3:0:0, 1 + x4:0:0, x1:0:0 + 4 * (1 + x4:0:0), 1 + x18:0:0, x18:0:0, x8:0:0) :|: x1:0:0 + (4 + 4 * x4:0:0) = x1:0:0 + 4 * (1 + x4:0:0) && x18:0:0 > -1 && x2:0:0 > 0 && x4:0:0 > 0 && x:0:0 > 1 + x4:0:0 && x3:0:0 > 4 && x:0:0 > 1 && x1:0:0 + (4 + 4 * x4:0:0) > 4 && x8:0:0 > 7 && sum~x1:0:0~times~cons_4~x4:0:0 = x1:0:0 + 4 * x4:0:0 && cons_1 = 1 && cons_0 = 0
The following rules are bounded:
f_2521(x:0:0, x1:0:0, x2:0:0, x3:0:0, x4:0:0, sum~x1:0:0~times~cons_4~x4:0:0, cons_1, cons_0, x8:0:0) -> f_2521(x:0:0, x1:0:0, x2:0:0, x3:0:0, 1 + x4:0:0, x1:0:0 + 4 * (1 + x4:0:0), 1 + x18:0:0, x18:0:0, x8:0:0) :|: x1:0:0 + (4 + 4 * x4:0:0) = x1:0:0 + 4 * (1 + x4:0:0) && x18:0:0 > -1 && x2:0:0 > 0 && x4:0:0 > 0 && x:0:0 > 1 + x4:0:0 && x3:0:0 > 4 && x:0:0 > 1 && x1:0:0 + (4 + 4 * x4:0:0) > 4 && x8:0:0 > 7 && sum~x1:0:0~times~cons_4~x4:0:0 = x1:0:0 + 4 * x4:0:0 && cons_1 = 1 && cons_0 = 0

----------------------------------------

(34)
Obligation:
Rules:
f_2521(v27146:0:0:0, v27149:0:0:0, v27152:0:0:0, v27153:0:0:0, v27157:0:0:0, sum~v27149:0:0:0~times~cons_4~v27157:0:0:0, v28420:0:0:0, sum~cons_1~v32850:0:0:0, v27164:0:0:0) -> f_2521(v27146:0:0:0, v27149:0:0:0, v27152:0:0:0, v27153:0:0:0, v27157:0:0:0, v27149:0:0:0 + 4 * v27157:0:0:0, 1 + v32850:0:0:0, v32850:0:0:0, v27164:0:0:0) :|: v28420:0:0:0 > 1 && v32850:0:0:0 > -1 && sum~v27149:0:0:0~times~cons_4~v27157:0:0:0 = v27149:0:0:0 + 4 * v27157:0:0:0 && sum~cons_1~v32850:0:0:0 = 1 + v32850:0:0:0

----------------------------------------

(35) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(36)
Obligation:
Rules:
f_2521(v27146:0:0:0:0, v27149:0:0:0:0, v27152:0:0:0:0, v27153:0:0:0:0, v27157:0:0:0:0, sum~v27149:0:0:0:0~times~cons_4~v27157:0:0:0:0, v28420:0:0:0:0, sum~cons_1~v32850:0:0:0:0, v27164:0:0:0:0) -> f_2521(v27146:0:0:0:0, v27149:0:0:0:0, v27152:0:0:0:0, v27153:0:0:0:0, v27157:0:0:0:0, v27149:0:0:0:0 + 4 * v27157:0:0:0:0, 1 + v32850:0:0:0:0, v32850:0:0:0:0, v27164:0:0:0:0) :|: v28420:0:0:0:0 > 1 && v32850:0:0:0:0 > -1 && sum~v27149:0:0:0:0~times~cons_4~v27157:0:0:0:0 = v27149:0:0:0:0 + 4 * v27157:0:0:0:0 && sum~cons_1~v32850:0:0:0:0 = 1 + v32850:0:0:0:0

----------------------------------------

(37) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_2521(x1, x2, x3, x4, x5, x6, x7, x8, x9) -> f_2521(x2, x5, x6, x7, x8)

----------------------------------------

(38)
Obligation:
Rules:
f_2521(v27149:0:0:0:0, v27157:0:0:0:0, sum~v27149:0:0:0:0~times~cons_4~v27157:0:0:0:0, v28420:0:0:0:0, sum~cons_1~v32850:0:0:0:0) -> f_2521(v27149:0:0:0:0, v27157:0:0:0:0, v27149:0:0:0:0 + 4 * v27157:0:0:0:0, 1 + v32850:0:0:0:0, v32850:0:0:0:0) :|: v28420:0:0:0:0 > 1 && v32850:0:0:0:0 > -1 && sum~v27149:0:0:0:0~times~cons_4~v27157:0:0:0:0 = v27149:0:0:0:0 + 4 * v27157:0:0:0:0 && sum~cons_1~v32850:0:0:0:0 = 1 + v32850:0:0:0:0

----------------------------------------

(39) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_2521(x, x1, x2, x3, x4)] = x4

The following rules are decreasing:
f_2521(v27149:0:0:0:0, v27157:0:0:0:0, sum~v27149:0:0:0:0~times~cons_4~v27157:0:0:0:0, v28420:0:0:0:0, sum~cons_1~v32850:0:0:0:0) -> f_2521(v27149:0:0:0:0, v27157:0:0:0:0, v27149:0:0:0:0 + 4 * v27157:0:0:0:0, 1 + v32850:0:0:0:0, v32850:0:0:0:0) :|: v28420:0:0:0:0 > 1 && v32850:0:0:0:0 > -1 && sum~v27149:0:0:0:0~times~cons_4~v27157:0:0:0:0 = v27149:0:0:0:0 + 4 * v27157:0:0:0:0 && sum~cons_1~v32850:0:0:0:0 = 1 + v32850:0:0:0:0
The following rules are bounded:
f_2521(v27149:0:0:0:0, v27157:0:0:0:0, sum~v27149:0:0:0:0~times~cons_4~v27157:0:0:0:0, v28420:0:0:0:0, sum~cons_1~v32850:0:0:0:0) -> f_2521(v27149:0:0:0:0, v27157:0:0:0:0, v27149:0:0:0:0 + 4 * v27157:0:0:0:0, 1 + v32850:0:0:0:0, v32850:0:0:0:0) :|: v28420:0:0:0:0 > 1 && v32850:0:0:0:0 > -1 && sum~v27149:0:0:0:0~times~cons_4~v27157:0:0:0:0 = v27149:0:0:0:0 + 4 * v27157:0:0:0:0 && sum~cons_1~v32850:0:0:0:0 = 1 + v32850:0:0:0:0

----------------------------------------

(40)
YES

----------------------------------------

(41)
Obligation:
SCC
----------------------------------------

(42) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 20 rulesP rules:
f_2374(v27329, v27330, v27331, v27332, v27333, v27334, v27335, 0, v27337, v27338, 1, v27340, v27341, v27342, v27346, v27343, v27344, v27345, v27347, v27348, v27349, v27350, v27351, v27352, v27353, 3, 7, 4, 8) -> f_2380(v27329, v27330, v27331, v27332, v27333, v27334, v27335, 0, v27337, v27338, 1, v27340, v27341, v27342, v27346, v27343, v27344, v27345, v27347, v27348, v27349, v27350, v27351, v27352, v27353, 3, 7, 4, 8) :|: 0 = 0
f_2380(v27329, v27330, v27331, v27332, v27333, v27334, v27335, 0, v27337, v27338, 1, v27340, v27341, v27342, v27346, v27343, v27344, v27345, v27347, v27348, v27349, v27350, v27351, v27352, v27353, 3, 7, 4, 8) -> f_2386(v27329, v27330, v27331, v27332, v27333, v27334, v27335, 0, v27337, v27338, 1, v27340, v27341, v27342, v27346, v27343, v27344, v27345, v27347, v27348, v27349, v27350, v27351, v27352, v27353, 3, 7, 4, 2, 5, 8) :|: v27346 < v27335 && 1 <= v27341 && 5 <= v27342 && 2 <= v27335 && 8 <= v27353
f_2386(v27329, v27330, v27331, v27332, v27333, v27334, v27335, 0, v27337, v27338, 1, v27340, v27341, v27342, v27346, v27343, v27344, v27345, v27347, v27348, v27349, v27350, v27351, v27352, v27353, 3, 7, 4, 2, 5, 8) -> f_2393(v27329, v27330, v27331, v27332, v27333, v27334, v27335, 0, v27337, v27338, 1, v27340, v27341, v27342, v27346, v27343, v27344, v27345, v27347, v27348, v27349, v27350, v27351, v27352, v27353, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2393(v27329, v27330, v27331, v27332, v27333, v27334, v27335, 0, v27337, v27338, 1, v27340, v27341, v27342, v27346, v27343, v27344, v27345, v27347, v27348, v27349, v27350, v27351, v27352, v27353, 3, 7, 4, 2, 5, 8) -> f_2400(v27329, v27330, v27331, v27332, v27333, v27334, v27335, 0, v27337, v27338, 1, v27340, v27341, v27342, v27346, v27343, v27344, v27345, v27347, v27348, v27349, v27350, v27351, v27352, v27353, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2400(v27329, v27330, v27331, v27332, v27333, v27334, v27335, 0, v27337, v27338, 1, v27340, v27341, v27342, v27346, v27343, v27344, v27345, v27347, v27348, v27349, v27350, v27351, v27352, v27353, 3, 7, 4, 2, 5, 8) -> f_2407(v27329, v27330, v27331, v27332, v27333, v27334, v27335, 0, v27337, v27338, 1, v27340, v27341, v27342, v27346, v27343, v27344, v27345, v27347, v27348, v27349, v27350, v27351, v27352, v27353, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2407(v27329, v27330, v27331, v27332, v27333, v27334, v27335, 0, v27337, v27338, 1, v27340, v27341, v27342, v27346, v27343, v27344, v27345, v27347, v27348, v27349, v27350, v27351, v27352, v27353, 3, 7, 4, 2, 5, 8) -> f_2414(v27329, v27330, v27331, v27332, v27333, v27334, v27335, 0, v27337, v27338, 1, v27340, v27341, v27342, v27346, v27343, v27344, v27345, v27347, v27348, v27349, v27350, v27351, v27352, v27353, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2414(v27329, v27330, v27331, v27332, v27333, v27334, v27335, 0, v27337, v27338, 1, v27340, v27341, v27342, v27346, v27343, v27344, v27345, v27347, v27348, v27349, v27350, v27351, v27352, v27353, 3, 7, 4, 2, 5, 8) -> f_2421(v27329, v27330, v27331, v27332, v27333, v27334, v27335, 0, v27337, v27338, 1, v27340, v27341, v27342, v27346, v27343, v27344, v27345, v27347, v27348, v27349, v27350, v27351, v27352, v27353, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2421(v27329, v27330, v27331, v27332, v27333, v27334, v27335, 0, v27337, v27338, 1, v27340, v27341, v27342, v27346, v27343, v27344, v27345, v27347, v27348, v27349, v27350, v27351, v27352, v27353, 3, 7, 4, 2, 5, 8) -> f_2428(v27329, v27330, v27331, v27332, v27333, v27334, v27335, 0, v27337, v27338, 1, v27340, v27341, v27342, v27346, v27344, v27345, v27343, v27347, v27348, v27349, v27350, v27351, v27352, v27353, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2428(v27329, v27330, v27331, v27332, v27333, v27334, v27335, 0, v27337, v27338, 1, v27340, v27341, v27342, v27346, v27344, v27345, v27343, v27347, v27348, v27349, v27350, v27351, v27352, v27353, 3, 7, 4, 2, 5, 8) -> f_2434(v27329, v27330, v27331, v27332, v27333, v27334, v27335, 0, v27337, v27338, 1, v27340, v27341, v27342, v27346, v28586, v27345, v27343, v27347, v27348, v27349, v27350, v27351, v27352, v27353, v27344, 3, 7, 4, 2, 5, 8) :|: v28586 = v27338 + 4 * v27346 && 5 <= v28586
f_2434(v27329, v27330, v27331, v27332, v27333, v27334, v27335, 0, v27337, v27338, 1, v27340, v27341, v27342, v27346, v28586, v27345, v27343, v27347, v27348, v27349, v27350, v27351, v27352, v27353, v27344, 3, 7, 4, 2, 5, 8) -> f_2441(v27329, v27330, v27331, v27332, v27333, v27334, v27335, 0, v27337, v27338, 1, v27340, v27341, v27342, v27346, v28586, v28679, v27343, v27347, v27348, v27349, v27350, v27351, v27352, v27353, v27344, v27345, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2441(v27329, v27330, v27331, v27332, v27333, v27334, v27335, 0, v27337, v27338, 1, v27340, v27341, v27342, v27346, v28586, v28679, v27343, v27347, v27348, v27349, v27350, v27351, v27352, v27353, v27344, v27345, 3, 7, 4, 2, 5, 8) -> f_2450(v27329, v27330, v27331, v27332, v27333, v27334, v27335, 0, v27337, v27338, 1, v27340, v27341, v27342, v27346, v28586, v28679, v27343, v27347, v27348, v27349, v27350, v27351, v27352, v27353, v27344, v27345, 3, 7, 4, 2, 5, 8) :|: v28679 <= 0
f_2450(v27329, v27330, v27331, v27332, v27333, v27334, v27335, 0, v27337, v27338, 1, v27340, v27341, v27342, v27346, v28586, v28679, v27343, v27347, v27348, v27349, v27350, v27351, v27352, v27353, v27344, v27345, 3, 7, 4, 2, 5, 8) -> f_2458(v27329, v27330, v27331, v27332, v27333, v27334, v27335, 0, v27337, v27338, 1, v27340, v27341, v27342, v27346, v28586, v28679, v27343, v27347, v27348, v27349, v27350, v27351, v27352, v27353, v27344, v27345, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2458(v27329, v27330, v27331, v27332, v27333, v27334, v27335, 0, v27337, v27338, 1, v27340, v27341, v27342, v27346, v28586, v28679, v27343, v27347, v27348, v27349, v27350, v27351, v27352, v27353, v27344, v27345, 3, 7, 4, 2, 5, 8) -> f_2466(v27329, v27330, v27331, v27332, v27333, v27334, v27335, 0, v27337, v27338, 1, v27340, v27341, v27342, v27346, v28586, v28679, v27343, v27347, v27348, v27349, v27350, v27351, v27352, v27353, v27344, v27345, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2466(v27329, v27330, v27331, v27332, v27333, v27334, v27335, 0, v27337, v27338, 1, v27340, v27341, v27342, v27346, v28586, v28679, v27343, v27347, v27348, v27349, v27350, v27351, v27352, v27353, v27344, v27345, 3, 7, 4, 2, 5, 8) -> f_2476(v27329, v27330, v27331, v27332, v27333, v27334, v27335, 0, v27337, v27338, 1, v27340, v27341, v27342, v27346, v28586, v28679, v27343, v27347, v27348, v27349, v27350, v27351, v27352, v27353, v27344, v27345, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2476(v27329, v27330, v27331, v27332, v27333, v27334, v27335, 0, v27337, v27338, 1, v27340, v27341, v27342, v27346, v28586, v28679, v27343, v27347, v27348, v27349, v27350, v27351, v27352, v27353, v27344, v27345, 3, 7, 4, 2, 5, 8) -> f_2484(v27329, v27330, v27331, v27332, v27333, v27334, v27335, 0, v27337, v27338, 1, v27340, v27341, v27342, v27346, v28586, v28679, v27347, v27348, v27349, v27350, v27351, v27352, v27353, v27344, v27345, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2484(v27329, v27330, v27331, v27332, v27333, v27334, v27335, 0, v27337, v27338, 1, v27340, v27341, v27342, v27346, v28586, v28679, v27347, v27348, v27349, v27350, v27351, v27352, v27353, v27344, v27345, 3, 7, 4, 2, 5, 8) -> f_2493(v27329, v27330, v27331, v27332, v27333, v27334, v27335, 0, v27337, v27338, 1, v27340, v27341, v27342, v27346, v28586, v28679, v29962, v27347, v27348, v27349, v27350, v27351, v27352, v27353, v27344, v27345, 3, 7, 4, 2, 5, 8) :|: v29962 = 1 + v27346 && 2 <= v29962
f_2493(v27329, v27330, v27331, v27332, v27333, v27334, v27335, 0, v27337, v27338, 1, v27340, v27341, v27342, v27346, v28586, v28679, v29962, v27347, v27348, v27349, v27350, v27351, v27352, v27353, v27344, v27345, 3, 7, 4, 2, 5, 8) -> f_2501(v27329, v27330, v27331, v27332, v27333, v27334, v27335, 0, v27337, v27338, 1, v27340, v27341, v27342, v27346, v28586, v28679, v29962, v27347, v27348, v27349, v27350, v27351, v27352, v27353, v27344, v27345, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2501(v27329, v27330, v27331, v27332, v27333, v27334, v27335, 0, v27337, v27338, 1, v27340, v27341, v27342, v27346, v28586, v28679, v29962, v27347, v27348, v27349, v27350, v27351, v27352, v27353, v27344, v27345, 3, 7, 4, 2, 5, 8) -> f_2508(v27329, v27330, v27331, v27332, v27333, v27334, v27335, 0, v27337, v27338, 1, v27340, v27341, v27342, v27346, v28586, v28679, v29962, v27347, v27348, v27349, v27350, v27351, v27352, v27353, v27344, v27345, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2508(v27329, v27330, v27331, v27332, v27333, v27334, v27335, 0, v27337, v27338, 1, v27340, v27341, v27342, v27346, v28586, v28679, v29962, v27347, v27348, v27349, v27350, v27351, v27352, v27353, v27344, v27345, 3, 7, 4, 2, 5, 8) -> f_2368(v27329, v27330, v27331, v27332, v27333, v27334, v27335, 0, v27337, v27338, 1, v27340, v27341, v27342, v27346, v28586, v28679, v29962, v27347, v27348, v27349, v27350, v27351, v27352, v27353, 3, 7, 4, 8) :|: TRUE
f_2368(v27329, v27330, v27331, v27332, v27333, v27334, v27335, 0, v27337, v27338, 1, v27340, v27341, v27342, v27343, v27344, v27345, v27346, v27347, v27348, v27349, v27350, v27351, v27352, v27353, 3, 7, 4, 8) -> f_2374(v27329, v27330, v27331, v27332, v27333, v27334, v27335, 0, v27337, v27338, 1, v27340, v27341, v27342, v27346, v27343, v27344, v27345, v27347, v27348, v27349, v27350, v27351, v27352, v27353, 3, 7, 4, 8) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_2374(v27329:0, v27330:0, v27331:0, v27332:0, v27333:0, v27334:0, v27335:0, 0, v27337:0, v27338:0, 1, v27340:0, v27341:0, v27342:0, v27346:0, v27343:0, v27344:0, v27345:0, v27347:0, v27348:0, v27349:0, v27350:0, v27351:0, v27352:0, v27353:0, 3, 7, 4, 8) -> f_2374(v27329:0, v27330:0, v27331:0, v27332:0, v27333:0, v27334:0, v27335:0, 0, v27337:0, v27338:0, 1, v27340:0, v27341:0, v27342:0, 1 + v27346:0, v27346:0, v27338:0 + 4 * v27346:0, v28679:0, v27347:0, v27348:0, v27349:0, v27350:0, v27351:0, v27352:0, v27353:0, 3, 7, 4, 8) :|: v27341:0 > 0 && v27346:0 < v27335:0 && v27342:0 > 4 && v27335:0 > 1 && v27353:0 > 7 && v27338:0 + 4 * v27346:0 > 4 && v27346:0 > 0 && v28679:0 < 1
Filtered unneeded arguments:
   f_2374(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29) -> f_2374(x7, x10, x13, x14, x15, x25)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_2374(v27335:0, v27338:0, v27341:0, v27342:0, v27346:0, v27353:0) -> f_2374(v27335:0, v27338:0, v27341:0, v27342:0, 1 + v27346:0, v27353:0) :|: v27346:0 < v27335:0 && v27341:0 > 0 && v27342:0 > 4 && v27335:0 > 1 && v27353:0 > 7 && v27346:0 > 0 && v27338:0 + 4 * v27346:0 > 4

----------------------------------------

(43)
Obligation:
Rules:
f_2374(v27335:0, v27338:0, v27341:0, v27342:0, v27346:0, v27353:0) -> f_2374(v27335:0, v27338:0, v27341:0, v27342:0, 1 + v27346:0, v27353:0) :|: v27346:0 < v27335:0 && v27341:0 > 0 && v27342:0 > 4 && v27335:0 > 1 && v27353:0 > 7 && v27346:0 > 0 && v27338:0 + 4 * v27346:0 > 4

----------------------------------------

(44) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(45)
Obligation:
Rules:
f_2374(v27335:0:0, v27338:0:0, v27341:0:0, v27342:0:0, v27346:0:0, v27353:0:0) -> f_2374(v27335:0:0, v27338:0:0, v27341:0:0, v27342:0:0, 1 + v27346:0:0, v27353:0:0) :|: v27346:0:0 > 0 && v27338:0:0 + 4 * v27346:0:0 > 4 && v27353:0:0 > 7 && v27335:0:0 > 1 && v27342:0:0 > 4 && v27341:0:0 > 0 && v27346:0:0 < v27335:0:0

----------------------------------------

(46) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_2374(x, x1, x2, x3, x4, x5)] = -1 + x - x4

The following rules are decreasing:
f_2374(v27335:0:0, v27338:0:0, v27341:0:0, v27342:0:0, v27346:0:0, v27353:0:0) -> f_2374(v27335:0:0, v27338:0:0, v27341:0:0, v27342:0:0, 1 + v27346:0:0, v27353:0:0) :|: v27346:0:0 > 0 && v27338:0:0 + 4 * v27346:0:0 > 4 && v27353:0:0 > 7 && v27335:0:0 > 1 && v27342:0:0 > 4 && v27341:0:0 > 0 && v27346:0:0 < v27335:0:0
The following rules are bounded:
f_2374(v27335:0:0, v27338:0:0, v27341:0:0, v27342:0:0, v27346:0:0, v27353:0:0) -> f_2374(v27335:0:0, v27338:0:0, v27341:0:0, v27342:0:0, 1 + v27346:0:0, v27353:0:0) :|: v27346:0:0 > 0 && v27338:0:0 + 4 * v27346:0:0 > 4 && v27353:0:0 > 7 && v27335:0:0 > 1 && v27342:0:0 > 4 && v27341:0:0 > 0 && v27346:0:0 < v27335:0:0

----------------------------------------

(47)
YES

----------------------------------------

(48)
Obligation:
SCC
----------------------------------------

(49) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 20 rulesP rules:
f_2363(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v27154, v27155, v27156, v27158, v27159, v27160, v27161, v27162, v27163, v27164, 3, 7, 4, 8) -> f_2371(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v27154, v27155, v27156, v27158, v27159, v27160, v27161, v27162, v27163, v27164, 3, 7, 4, 8) :|: 0 = 0
f_2371(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v27154, v27155, v27156, v27158, v27159, v27160, v27161, v27162, v27163, v27164, 3, 7, 4, 8) -> f_2376(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v27154, v27155, v27156, v27158, v27159, v27160, v27161, v27162, v27163, v27164, 3, 7, 4, 2, 5, 8) :|: v27157 < v27146 && 1 <= v27152 && 5 <= v27153 && 2 <= v27146 && 8 <= v27164
f_2376(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v27154, v27155, v27156, v27158, v27159, v27160, v27161, v27162, v27163, v27164, 3, 7, 4, 2, 5, 8) -> f_2382(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v27154, v27155, v27156, v27158, v27159, v27160, v27161, v27162, v27163, v27164, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2382(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v27154, v27155, v27156, v27158, v27159, v27160, v27161, v27162, v27163, v27164, 3, 7, 4, 2, 5, 8) -> f_2389(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v27154, v27155, v27156, v27158, v27159, v27160, v27161, v27162, v27163, v27164, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2389(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v27154, v27155, v27156, v27158, v27159, v27160, v27161, v27162, v27163, v27164, 3, 7, 4, 2, 5, 8) -> f_2397(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v27154, v27155, v27156, v27158, v27159, v27160, v27161, v27162, v27163, v27164, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2397(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v27154, v27155, v27156, v27158, v27159, v27160, v27161, v27162, v27163, v27164, 3, 7, 4, 2, 5, 8) -> f_2404(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v27154, v27155, v27156, v27158, v27159, v27160, v27161, v27162, v27163, v27164, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2404(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v27154, v27155, v27156, v27158, v27159, v27160, v27161, v27162, v27163, v27164, 3, 7, 4, 2, 5, 8) -> f_2411(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v27154, v27155, v27156, v27158, v27159, v27160, v27161, v27162, v27163, v27164, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2411(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v27154, v27155, v27156, v27158, v27159, v27160, v27161, v27162, v27163, v27164, 3, 7, 4, 2, 5, 8) -> f_2418(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v27155, v27156, v27154, v27158, v27159, v27160, v27161, v27162, v27163, v27164, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2418(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v27155, v27156, v27154, v27158, v27159, v27160, v27161, v27162, v27163, v27164, 3, 7, 4, 2, 5, 8) -> f_2425(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v28418, v27156, v27154, v27158, v27159, v27160, v27161, v27162, v27163, v27164, v27155, 3, 7, 4, 2, 5, 8) :|: v28418 = v27149 + 4 * v27157 && 5 <= v28418
f_2425(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v28418, v27156, v27154, v27158, v27159, v27160, v27161, v27162, v27163, v27164, v27155, 3, 7, 4, 2, 5, 8) -> f_2431(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v28418, v28420, v27154, v27158, v27159, v27160, v27161, v27162, v27163, v27164, v27155, v27156, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2431(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v28418, v28420, v27154, v27158, v27159, v27160, v27161, v27162, v27163, v27164, v27155, v27156, 3, 7, 4, 2, 5, 8) -> f_2438(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v28418, v28420, v27154, v27158, v27159, v27160, v27161, v27162, v27163, v27164, v27155, v27156, 3, 7, 4, 2, 5, 8) :|: v28420 <= 0
f_2438(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v28418, v28420, v27154, v27158, v27159, v27160, v27161, v27162, v27163, v27164, v27155, v27156, 3, 7, 4, 2, 5, 8) -> f_2446(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v28418, v28420, v27154, v27158, v27159, v27160, v27161, v27162, v27163, v27164, v27155, v27156, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2446(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v28418, v28420, v27154, v27158, v27159, v27160, v27161, v27162, v27163, v27164, v27155, v27156, 3, 7, 4, 2, 5, 8) -> f_2454(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v28418, v28420, v27154, v27158, v27159, v27160, v27161, v27162, v27163, v27164, v27155, v27156, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2454(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v28418, v28420, v27154, v27158, v27159, v27160, v27161, v27162, v27163, v27164, v27155, v27156, 3, 7, 4, 2, 5, 8) -> f_2462(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v28418, v28420, v27154, v27158, v27159, v27160, v27161, v27162, v27163, v27164, v27155, v27156, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2462(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v28418, v28420, v27154, v27158, v27159, v27160, v27161, v27162, v27163, v27164, v27155, v27156, 3, 7, 4, 2, 5, 8) -> f_2471(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v28418, v28420, v27158, v27159, v27160, v27161, v27162, v27163, v27164, v27155, v27156, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_2471(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v28418, v28420, v27158, v27159, v27160, v27161, v27162, v27163, v27164, v27155, v27156, 3, 7, 4, 2, 5, 8) -> f_2481(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v28418, v28420, v29801, v27158, v27159, v27160, v27161, v27162, v27163, v27164, v27155, v27156, 3, 7, 4, 2, 5, 8) :|: v29801 = 1 + v27157 && 2 <= v29801
f_2481(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v28418, v28420, v29801, v27158, v27159, v27160, v27161, v27162, v27163, v27164, v27155, v27156, 3, 7, 4, 2, 5, 8) -> f_2490(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v28418, v28420, v29801, v27158, v27159, v27160, v27161, v27162, v27163, v27164, v27155, v27156, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2490(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v28418, v28420, v29801, v27158, v27159, v27160, v27161, v27162, v27163, v27164, v27155, v27156, 3, 7, 4, 2, 5, 8) -> f_2497(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v28418, v28420, v29801, v27158, v27159, v27160, v27161, v27162, v27163, v27164, v27155, v27156, 3, 7, 4, 2, 5, 8) :|: TRUE
f_2497(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v28418, v28420, v29801, v27158, v27159, v27160, v27161, v27162, v27163, v27164, v27155, v27156, 3, 7, 4, 2, 5, 8) -> f_2356(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v28418, v28420, v29801, v27158, v27159, v27160, v27161, v27162, v27163, v27164, 3, 7, 4, 8) :|: TRUE
f_2356(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27154, v27155, v27156, v27157, v27158, v27159, v27160, v27161, v27162, v27163, v27164, 3, 7, 4, 8) -> f_2363(v27140, v27141, v27142, v27143, v27144, v27145, v27146, 0, v27148, v27149, 1, v27151, v27152, v27153, v27157, v27154, v27155, v27156, v27158, v27159, v27160, v27161, v27162, v27163, v27164, 3, 7, 4, 8) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_2363(v27140:0, v27141:0, v27142:0, v27143:0, v27144:0, v27145:0, v27146:0, 0, v27148:0, v27149:0, 1, v27151:0, v27152:0, v27153:0, v27157:0, v27154:0, v27155:0, v27156:0, v27158:0, v27159:0, v27160:0, v27161:0, v27162:0, v27163:0, v27164:0, 3, 7, 4, 8) -> f_2363(v27140:0, v27141:0, v27142:0, v27143:0, v27144:0, v27145:0, v27146:0, 0, v27148:0, v27149:0, 1, v27151:0, v27152:0, v27153:0, 1 + v27157:0, v27157:0, v27149:0 + 4 * v27157:0, v28420:0, v27158:0, v27159:0, v27160:0, v27161:0, v27162:0, v27163:0, v27164:0, 3, 7, 4, 8) :|: v27152:0 > 0 && v27157:0 < v27146:0 && v27153:0 > 4 && v27146:0 > 1 && v27164:0 > 7 && v27149:0 + 4 * v27157:0 > 4 && v27157:0 > 0 && v28420:0 < 1
Filtered unneeded arguments:
   f_2363(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29) -> f_2363(x7, x10, x13, x14, x15, x25)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_2363(v27146:0, v27149:0, v27152:0, v27153:0, v27157:0, v27164:0) -> f_2363(v27146:0, v27149:0, v27152:0, v27153:0, 1 + v27157:0, v27164:0) :|: v27157:0 < v27146:0 && v27152:0 > 0 && v27153:0 > 4 && v27146:0 > 1 && v27164:0 > 7 && v27157:0 > 0 && v27149:0 + 4 * v27157:0 > 4

----------------------------------------

(50)
Obligation:
Rules:
f_2363(v27146:0, v27149:0, v27152:0, v27153:0, v27157:0, v27164:0) -> f_2363(v27146:0, v27149:0, v27152:0, v27153:0, 1 + v27157:0, v27164:0) :|: v27157:0 < v27146:0 && v27152:0 > 0 && v27153:0 > 4 && v27146:0 > 1 && v27164:0 > 7 && v27157:0 > 0 && v27149:0 + 4 * v27157:0 > 4

----------------------------------------

(51) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(52)
Obligation:
Rules:
f_2363(v27146:0:0, v27149:0:0, v27152:0:0, v27153:0:0, v27157:0:0, v27164:0:0) -> f_2363(v27146:0:0, v27149:0:0, v27152:0:0, v27153:0:0, 1 + v27157:0:0, v27164:0:0) :|: v27157:0:0 > 0 && v27149:0:0 + 4 * v27157:0:0 > 4 && v27164:0:0 > 7 && v27146:0:0 > 1 && v27153:0:0 > 4 && v27152:0:0 > 0 && v27157:0:0 < v27146:0:0

----------------------------------------

(53) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_2363(x, x1, x2, x3, x4, x5)] = -1 + x - x4

The following rules are decreasing:
f_2363(v27146:0:0, v27149:0:0, v27152:0:0, v27153:0:0, v27157:0:0, v27164:0:0) -> f_2363(v27146:0:0, v27149:0:0, v27152:0:0, v27153:0:0, 1 + v27157:0:0, v27164:0:0) :|: v27157:0:0 > 0 && v27149:0:0 + 4 * v27157:0:0 > 4 && v27164:0:0 > 7 && v27146:0:0 > 1 && v27153:0:0 > 4 && v27152:0:0 > 0 && v27157:0:0 < v27146:0:0
The following rules are bounded:
f_2363(v27146:0:0, v27149:0:0, v27152:0:0, v27153:0:0, v27157:0:0, v27164:0:0) -> f_2363(v27146:0:0, v27149:0:0, v27152:0:0, v27153:0:0, 1 + v27157:0:0, v27164:0:0) :|: v27157:0:0 > 0 && v27149:0:0 + 4 * v27157:0:0 > 4 && v27164:0:0 > 7 && v27146:0:0 > 1 && v27153:0:0 > 4 && v27152:0:0 > 0 && v27157:0:0 < v27146:0:0

----------------------------------------

(54)
YES

----------------------------------------

(55)
Obligation:
SCC
----------------------------------------

(56) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 18 rulesP rules:
f_1605(v11079, v11080, v11081, v11082, v11083, v11084, v11085, 0, v11087, v11088, 1, v11090, v11091, v11092, v11093, v11094, v11095, v11096, v11097, v11098, v11099, v11100, v11101, 3, 7, 4, 8) -> f_1614(v11079, v11080, v11081, v11082, v11083, v11084, v11085, 0, v11087, v11088, 1, v11090, v11091, v11092, v11093, v11094, v11095, v11096, v11097, v11098, v11099, v11100, v11101, 3, 7, 4, 8) :|: 0 = 0
f_1614(v11079, v11080, v11081, v11082, v11083, v11084, v11085, 0, v11087, v11088, 1, v11090, v11091, v11092, v11093, v11094, v11095, v11096, v11097, v11098, v11099, v11100, v11101, 3, 7, 4, 8) -> f_1620(v11079, v11080, v11081, v11082, v11083, v11084, v11085, 0, v11087, v11088, 1, v11090, v11091, v11092, v11093, v11094, v11095, v11096, v11097, v11098, v11099, v11100, v11101, 3, 7, 4, 8) :|: 0 = 0
f_1620(v11079, v11080, v11081, v11082, v11083, v11084, v11085, 0, v11087, v11088, 1, v11090, v11091, v11092, v11093, v11094, v11095, v11096, v11097, v11098, v11099, v11100, v11101, 3, 7, 4, 8) -> f_1627(v11079, v11080, v11081, v11082, v11083, v11084, v11085, 0, v11087, v11088, 1, v11090, v11091, v11092, v11093, v11094, v11095, v11096, v11097, v11098, v11099, v11100, v11101, 3, 7, 4, 8) :|: 0 = 0
f_1627(v11079, v11080, v11081, v11082, v11083, v11084, v11085, 0, v11087, v11088, 1, v11090, v11091, v11092, v11093, v11094, v11095, v11096, v11097, v11098, v11099, v11100, v11101, 3, 7, 4, 8) -> f_1635(v11079, v11080, v11081, v11082, v11083, v11084, v11085, 0, v11087, v11088, 1, v11090, v11091, v11092, v11094, v11093, v11095, v11096, v11097, v11098, v11099, v11100, v11101, 3, 7, 4, 8) :|: 0 = 0
f_1635(v11079, v11080, v11081, v11082, v11083, v11084, v11085, 0, v11087, v11088, 1, v11090, v11091, v11092, v11094, v11093, v11095, v11096, v11097, v11098, v11099, v11100, v11101, 3, 7, 4, 8) -> f_1643(v11079, v11080, v11081, v11082, v11083, v11084, v11085, 0, v11087, v11088, 1, v11090, v11091, v11092, v11094, v11093, v11095, v11096, v11097, v11098, v11099, v11100, v11101, 3, 7, 4, 2, 8) :|: 0 < v11094 && 2 <= v11093
f_1643(v11079, v11080, v11081, v11082, v11083, v11084, v11085, 0, v11087, v11088, 1, v11090, v11091, v11092, v11094, v11093, v11095, v11096, v11097, v11098, v11099, v11100, v11101, 3, 7, 4, 2, 8) -> f_1651(v11079, v11080, v11081, v11082, v11083, v11084, v11085, 0, v11087, v11088, 1, v11090, v11091, v11092, v11094, v11093, v11095, v11096, v11097, v11098, v11099, v11100, v11101, 3, 7, 4, 2, 8) :|: 0 = 0
f_1651(v11079, v11080, v11081, v11082, v11083, v11084, v11085, 0, v11087, v11088, 1, v11090, v11091, v11092, v11094, v11093, v11095, v11096, v11097, v11098, v11099, v11100, v11101, 3, 7, 4, 2, 8) -> f_1659(v11079, v11080, v11081, v11082, v11083, v11084, v11085, 0, v11087, v11088, 1, v11090, v11091, v11092, v11094, v11093, v11095, v11096, v11097, v11098, v11099, v11100, v11101, 3, 7, 4, 2, 8) :|: TRUE
f_1659(v11079, v11080, v11081, v11082, v11083, v11084, v11085, 0, v11087, v11088, 1, v11090, v11091, v11092, v11094, v11093, v11095, v11096, v11097, v11098, v11099, v11100, v11101, 3, 7, 4, 2, 8) -> f_1660(v11079, v11080, v11081, v11082, v11083, v11084, v11085, 0, v11087, v11088, 1, v11090, v11091, v11092, v11094, v11093, v11095, v11096, v11097, v11098, v11099, v11100, v11101, 3, 7, 4, 2, 8) :|: TRUE
f_1660(v12372, v12373, v12374, v12375, v12376, v12377, v12378, 0, v12380, v12381, 1, v12383, v12384, v12385, v12386, v12387, v12388, v12389, v12390, v12391, v12392, v12393, v12394, 3, 7, 4, 2, 8) -> f_1668(v12372, v12373, v12374, v12375, v12376, v12377, v12378, 0, v12380, v12381, 1, v12383, v12384, v12385, v12386, v12387, v12388, v12389, v12390, v12391, v12392, v12393, v12394, 3, 7, 4, 2, 8) :|: 0 = 0
f_1668(v12372, v12373, v12374, v12375, v12376, v12377, v12378, 0, v12380, v12381, 1, v12383, v12384, v12385, v12386, v12387, v12388, v12389, v12390, v12391, v12392, v12393, v12394, 3, 7, 4, 2, 8) -> f_1677(v12372, v12373, v12374, v12375, v12376, v12377, v12378, 0, v12380, v12381, 1, v12383, v12384, v12385, v12386, v12387, v12388, v12389, v12390, v12391, v12392, v12393, v12394, 3, 7, 4, 2, 8) :|: 0 = 0
f_1677(v12372, v12373, v12374, v12375, v12376, v12377, v12378, 0, v12380, v12381, 1, v12383, v12384, v12385, v12386, v12387, v12388, v12389, v12390, v12391, v12392, v12393, v12394, 3, 7, 4, 2, 8) -> f_1685(v12372, v12373, v12374, v12375, v12376, v12377, v12378, 0, v12380, v12381, 1, v12383, v12384, v12385, v12386, v12387, v12388, v12389, v12390, v12391, v12392, v12393, v12394, 3, 7, 4, 2, 8) :|: 0 = 0
f_1685(v12372, v12373, v12374, v12375, v12376, v12377, v12378, 0, v12380, v12381, 1, v12383, v12384, v12385, v12386, v12387, v12388, v12389, v12390, v12391, v12392, v12393, v12394, 3, 7, 4, 2, 8) -> f_1693(v12372, v12373, v12374, v12375, v12376, v12377, v12378, 0, v12380, v12381, 1, v12383, v12384, v12385, v12386, v12387, v12388, v12389, v12390, v12391, v12392, v12393, v12394, 3, 7, 4, 2, 8) :|: 0 = 0
f_1693(v12372, v12373, v12374, v12375, v12376, v12377, v12378, 0, v12380, v12381, 1, v12383, v12384, v12385, v12386, v12387, v12388, v12389, v12390, v12391, v12392, v12393, v12394, 3, 7, 4, 2, 8) -> f_1702(v12372, v12373, v12374, v12375, v12376, v12377, v12378, 0, v12380, v12381, 1, v12383, v12384, v12385, v12386, v12388, v12389, v12390, v12391, v12392, v12393, v12394, 3, 7, 4, 8) :|: 0 = 0
f_1702(v12372, v12373, v12374, v12375, v12376, v12377, v12378, 0, v12380, v12381, 1, v12383, v12384, v12385, v12386, v12388, v12389, v12390, v12391, v12392, v12393, v12394, 3, 7, 4, 8) -> f_1712(v12372, v12373, v12374, v12375, v12376, v12377, v12378, 0, v12380, v12381, 1, v12383, v12384, v12385, v12386, v13199, v12388, v12389, v12390, v12391, v12392, v12393, v12394, 3, 7, 4, 8) :|: 1 + v13199 = v12386 && 0 <= v13199
f_1712(v12372, v12373, v12374, v12375, v12376, v12377, v12378, 0, v12380, v12381, 1, v12383, v12384, v12385, v12386, v13199, v12388, v12389, v12390, v12391, v12392, v12393, v12394, 3, 7, 4, 8) -> f_1722(v12372, v12373, v12374, v12375, v12376, v12377, v12378, 0, v12380, v12381, 1, v12383, v12384, v12385, v12386, v13199, v12388, v12389, v12390, v12391, v12392, v12393, v12394, 3, 7, 4, 8) :|: TRUE
f_1722(v12372, v12373, v12374, v12375, v12376, v12377, v12378, 0, v12380, v12381, 1, v12383, v12384, v12385, v12386, v13199, v12388, v12389, v12390, v12391, v12392, v12393, v12394, 3, 7, 4, 8) -> f_1732(v12372, v12373, v12374, v12375, v12376, v12377, v12378, 0, v12380, v12381, 1, v12383, v12384, v12385, v12386, v13199, v12388, v12389, v12390, v12391, v12392, v12393, v12394, 3, 7, 4, 8) :|: TRUE
f_1732(v12372, v12373, v12374, v12375, v12376, v12377, v12378, 0, v12380, v12381, 1, v12383, v12384, v12385, v12386, v13199, v12388, v12389, v12390, v12391, v12392, v12393, v12394, 3, 7, 4, 8) -> f_1595(v12372, v12373, v12374, v12375, v12376, v12377, v12378, 0, v12380, v12381, 1, v12383, v12384, v12385, v12386, v13199, v12388, v12389, v12390, v12391, v12392, v12393, v12394, 3, 7, 4, 8) :|: TRUE
f_1595(v11079, v11080, v11081, v11082, v11083, v11084, v11085, 0, v11087, v11088, 1, v11090, v11091, v11092, v11093, v11094, v11095, v11096, v11097, v11098, v11099, v11100, v11101, 3, 7, 4, 8) -> f_1605(v11079, v11080, v11081, v11082, v11083, v11084, v11085, 0, v11087, v11088, 1, v11090, v11091, v11092, v11093, v11094, v11095, v11096, v11097, v11098, v11099, v11100, v11101, 3, 7, 4, 8) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_1605(v11079:0, v11080:0, v11081:0, v11082:0, v11083:0, v11084:0, v11085:0, 0, v11087:0, v11088:0, 1, v11090:0, v11091:0, v11092:0, v11093:0, 1 + v13199:0, v11095:0, v11096:0, v11097:0, v11098:0, v11099:0, v11100:0, v11101:0, 3, 7, 4, 8) -> f_1605(v11079:0, v11080:0, v11081:0, v11082:0, v11083:0, v11084:0, v11085:0, 0, v11087:0, v11088:0, 1, v11090:0, v11091:0, v11092:0, 1 + v13199:0, v13199:0, v11095:0, v11096:0, v11097:0, v11098:0, v11099:0, v11100:0, v11101:0, 3, 7, 4, 8) :|: v11093:0 > 1 && v13199:0 > -1
Filtered unneeded arguments:
   f_1605(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27) -> f_1605(x15, x16)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1605(v11093:0, sum~cons_1~v13199:0) -> f_1605(1 + v13199:0, v13199:0) :|: v11093:0 > 1 && v13199:0 > -1 && sum~cons_1~v13199:0 = 1 + v13199:0

----------------------------------------

(57)
Obligation:
Rules:
f_1605(v11093:0, sum~cons_1~v13199:0) -> f_1605(1 + v13199:0, v13199:0) :|: v11093:0 > 1 && v13199:0 > -1 && sum~cons_1~v13199:0 = 1 + v13199:0

----------------------------------------

(58) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(59)
Obligation:
Rules:
f_1605(v11093:0:0, sum~cons_1~v13199:0:0) -> f_1605(1 + v13199:0:0, v13199:0:0) :|: v11093:0:0 > 1 && v13199:0:0 > -1 && sum~cons_1~v13199:0:0 = 1 + v13199:0:0

----------------------------------------

(60) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_1605(x, x1)] = x1

The following rules are decreasing:
f_1605(v11093:0:0, sum~cons_1~v13199:0:0) -> f_1605(1 + v13199:0:0, v13199:0:0) :|: v11093:0:0 > 1 && v13199:0:0 > -1 && sum~cons_1~v13199:0:0 = 1 + v13199:0:0
The following rules are bounded:
f_1605(v11093:0:0, sum~cons_1~v13199:0:0) -> f_1605(1 + v13199:0:0, v13199:0:0) :|: v11093:0:0 > 1 && v13199:0:0 > -1 && sum~cons_1~v13199:0:0 = 1 + v13199:0:0

----------------------------------------

(61)
YES

----------------------------------------

(62)
Obligation:
SCC
----------------------------------------

(63) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 17 rulesP rules:
f_1498(v7761, v7762, v7763, v7764, v7765, v7766, v7888, 0, v7769, v7770, 1, v7773, v7772, v7800, v7784, v9163, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7776, 3, 7, 4, 8, 5, 2) -> f_1504(v7761, v7762, v7763, v7764, v7765, v7766, v7888, 0, v7769, v7770, 1, v7773, v7772, v7800, v7784, v9163, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7776, 3, 7, 4, 8, 5, 2) :|: 0 = 0
f_1504(v7761, v7762, v7763, v7764, v7765, v7766, v7888, 0, v7769, v7770, 1, v7773, v7772, v7800, v7784, v9163, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7776, 3, 7, 4, 8, 5, 2) -> f_1510(v7761, v7762, v7763, v7764, v7765, v7766, v7888, 0, v7769, v7770, 1, v7773, v7772, v7800, v7784, v9163, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7776, 3, 7, 4, 8, 5, 2) :|: 0 = 0
f_1510(v7761, v7762, v7763, v7764, v7765, v7766, v7888, 0, v7769, v7770, 1, v7773, v7772, v7800, v7784, v9163, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7776, 3, 7, 4, 8, 5, 2) -> f_1516(v7761, v7762, v7763, v7764, v7765, v7766, v7888, 0, v7769, v7770, 1, v7773, v7772, v7800, v7784, v9163, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7776, 3, 7, 4, 8, 5, 2) :|: 0 = 0
f_1516(v7761, v7762, v7763, v7764, v7765, v7766, v7888, 0, v7769, v7770, 1, v7773, v7772, v7800, v7784, v9163, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7776, 3, 7, 4, 8, 5, 2) -> f_1522(v7761, v7762, v7763, v7764, v7765, v7766, v7888, 0, v7769, v7770, 1, v7773, v7772, v7800, v9163, v7784, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7776, 3, 7, 4, 8, 5, 2) :|: 0 = 0
f_1522(v7761, v7762, v7763, v7764, v7765, v7766, v7888, 0, v7769, v7770, 1, v7773, v7772, v7800, v9163, v7784, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7776, 3, 7, 4, 8, 5, 2) -> f_1528(v7761, v7762, v7763, v7764, v7765, v7766, v7888, 0, v7769, v7770, 1, v7773, v7772, v7800, v9163, v7784, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7776, 3, 7, 4, 8, 2, 5) :|: 0 < v9163 && 2 <= v7784
f_1528(v7761, v7762, v7763, v7764, v7765, v7766, v7888, 0, v7769, v7770, 1, v7773, v7772, v7800, v9163, v7784, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7776, 3, 7, 4, 8, 2, 5) -> f_1535(v7761, v7762, v7763, v7764, v7765, v7766, v7888, 0, v7769, v7770, 1, v7773, v7772, v7800, v9163, v7784, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7776, 3, 7, 4, 8, 2, 5) :|: 0 = 0
f_1535(v7761, v7762, v7763, v7764, v7765, v7766, v7888, 0, v7769, v7770, 1, v7773, v7772, v7800, v9163, v7784, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7776, 3, 7, 4, 8, 2, 5) -> f_1542(v7761, v7762, v7763, v7764, v7765, v7766, v7888, 0, v7769, v7770, 1, v7773, v7772, v7800, v9163, v7784, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7776, 3, 7, 4, 8, 2, 5) :|: TRUE
f_1542(v7761, v7762, v7763, v7764, v7765, v7766, v7888, 0, v7769, v7770, 1, v7773, v7772, v7800, v9163, v7784, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7776, 3, 7, 4, 8, 2, 5) -> f_1549(v7761, v7762, v7763, v7764, v7765, v7766, v7888, 0, v7769, v7770, 1, v7773, v7772, v7800, v9163, v7784, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7776, 3, 7, 4, 8, 2, 5) :|: 0 = 0
f_1549(v7761, v7762, v7763, v7764, v7765, v7766, v7888, 0, v7769, v7770, 1, v7773, v7772, v7800, v9163, v7784, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7776, 3, 7, 4, 8, 2, 5) -> f_1557(v7761, v7762, v7763, v7764, v7765, v7766, v7888, 0, v7769, v7770, 1, v7773, v7772, v7800, v9163, v7784, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7776, 3, 7, 4, 8, 2, 5) :|: 0 = 0
f_1557(v7761, v7762, v7763, v7764, v7765, v7766, v7888, 0, v7769, v7770, 1, v7773, v7772, v7800, v9163, v7784, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7776, 3, 7, 4, 8, 2, 5) -> f_1565(v7761, v7762, v7763, v7764, v7765, v7766, v7888, 0, v7769, v7770, 1, v7773, v7772, v7800, v9163, v7784, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7776, 3, 7, 4, 8, 2, 5) :|: 0 = 0
f_1565(v7761, v7762, v7763, v7764, v7765, v7766, v7888, 0, v7769, v7770, 1, v7773, v7772, v7800, v9163, v7784, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7776, 3, 7, 4, 8, 2, 5) -> f_1574(v7761, v7762, v7763, v7764, v7765, v7766, v7888, 0, v7769, v7770, 1, v7773, v7772, v7800, v9163, v7784, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7776, 3, 7, 4, 8, 2, 5) :|: 0 = 0
f_1574(v7761, v7762, v7763, v7764, v7765, v7766, v7888, 0, v7769, v7770, 1, v7773, v7772, v7800, v9163, v7784, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7776, 3, 7, 4, 8, 2, 5) -> f_1582(v7761, v7762, v7763, v7764, v7765, v7766, v7888, 0, v7769, v7770, 1, v7773, v7772, v7800, v9163, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7776, 3, 7, 4, 8, 5, 2) :|: 0 = 0
f_1582(v7761, v7762, v7763, v7764, v7765, v7766, v7888, 0, v7769, v7770, 1, v7773, v7772, v7800, v9163, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7776, 3, 7, 4, 8, 5, 2) -> f_1590(v7761, v7762, v7763, v7764, v7765, v7766, v7888, 0, v7769, v7770, 1, v7773, v7772, v7800, v9163, v10996, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7776, 3, 7, 4, 8, 5, 2) :|: 1 + v10996 = v9163 && 0 <= v10996
f_1590(v7761, v7762, v7763, v7764, v7765, v7766, v7888, 0, v7769, v7770, 1, v7773, v7772, v7800, v9163, v10996, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7776, 3, 7, 4, 8, 5, 2) -> f_1601(v7761, v7762, v7763, v7764, v7765, v7766, v7888, 0, v7769, v7770, 1, v7773, v7772, v7800, v9163, v10996, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7776, 3, 7, 4, 8, 5, 2) :|: TRUE
f_1601(v7761, v7762, v7763, v7764, v7765, v7766, v7888, 0, v7769, v7770, 1, v7773, v7772, v7800, v9163, v10996, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7776, 3, 7, 4, 8, 5, 2) -> f_1609(v7761, v7762, v7763, v7764, v7765, v7766, v7888, 0, v7769, v7770, 1, v7773, v7772, v7800, v9163, v10996, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7776, 3, 7, 4, 8, 5, 2) :|: TRUE
f_1609(v7761, v7762, v7763, v7764, v7765, v7766, v7888, 0, v7769, v7770, 1, v7773, v7772, v7800, v9163, v10996, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7776, 3, 7, 4, 8, 5, 2) -> f_1492(v7761, v7762, v7763, v7764, v7765, v7766, v7888, 0, v7769, v7770, 1, v7773, v7772, v7800, v9163, v10996, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7776, 3, 7, 4, 8, 5, 2) :|: TRUE
f_1492(v7761, v7762, v7763, v7764, v7765, v7766, v7888, 0, v7769, v7770, 1, v7773, v7772, v7800, v7784, v9163, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7776, 3, 7, 4, 8, 5, 2) -> f_1498(v7761, v7762, v7763, v7764, v7765, v7766, v7888, 0, v7769, v7770, 1, v7773, v7772, v7800, v7784, v9163, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7776, 3, 7, 4, 8, 5, 2) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_1498(v7761:0, v7762:0, v7763:0, v7764:0, v7765:0, v7766:0, v7888:0, 0, v7769:0, v7770:0, 1, v7773:0, v7772:0, v7800:0, v7784:0, 1 + v10996:0, v7777:0, v7778:0, v7779:0, v7780:0, v7781:0, v7782:0, v7783:0, v7776:0, 3, 7, 4, 8, 5, 2) -> f_1498(v7761:0, v7762:0, v7763:0, v7764:0, v7765:0, v7766:0, v7888:0, 0, v7769:0, v7770:0, 1, v7773:0, v7772:0, v7800:0, 1 + v10996:0, v10996:0, v7777:0, v7778:0, v7779:0, v7780:0, v7781:0, v7782:0, v7783:0, v7776:0, 3, 7, 4, 8, 5, 2) :|: v7784:0 > 1 && v10996:0 > -1
Filtered unneeded arguments:
   f_1498(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30) -> f_1498(x15, x16)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1498(v7784:0, sum~cons_1~v10996:0) -> f_1498(1 + v10996:0, v10996:0) :|: v7784:0 > 1 && v10996:0 > -1 && sum~cons_1~v10996:0 = 1 + v10996:0

----------------------------------------

(64)
Obligation:
Rules:
f_1498(v7784:0, sum~cons_1~v10996:0) -> f_1498(1 + v10996:0, v10996:0) :|: v7784:0 > 1 && v10996:0 > -1 && sum~cons_1~v10996:0 = 1 + v10996:0

----------------------------------------

(65) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(66)
Obligation:
Rules:
f_1498(v7784:0:0, sum~cons_1~v10996:0:0) -> f_1498(1 + v10996:0:0, v10996:0:0) :|: v7784:0:0 > 1 && v10996:0:0 > -1 && sum~cons_1~v10996:0:0 = 1 + v10996:0:0

----------------------------------------

(67) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_1498(x, x1)] = x1

The following rules are decreasing:
f_1498(v7784:0:0, sum~cons_1~v10996:0:0) -> f_1498(1 + v10996:0:0, v10996:0:0) :|: v7784:0:0 > 1 && v10996:0:0 > -1 && sum~cons_1~v10996:0:0 = 1 + v10996:0:0
The following rules are bounded:
f_1498(v7784:0:0, sum~cons_1~v10996:0:0) -> f_1498(1 + v10996:0:0, v10996:0:0) :|: v7784:0:0 > 1 && v10996:0:0 > -1 && sum~cons_1~v10996:0:0 = 1 + v10996:0:0

----------------------------------------

(68)
YES

----------------------------------------

(69)
Obligation:
SCC
----------------------------------------

(70) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 65 rulesP rules:
f_1246(v6290, v6291, v6292, v6293, v6294, v6295, v6296, 0, v6298, v6299, 1, v6301, v6302, v6303, v6304, v6305, v6306, v6307, v6308, v6309, v6310, v6311, v6312, 3, 7, 4, 2, 8) -> f_1249(v6290, v6291, v6292, v6293, v6294, v6295, v6296, 0, v6298, v6299, 1, v6301, v6302, v6303, v6304, v6305, v6306, v6307, v6308, v6309, v6310, v6311, v6312, 3, 7, 4, 2, 8) :|: 0 = 0
f_1249(v6290, v6291, v6292, v6293, v6294, v6295, v6296, 0, v6298, v6299, 1, v6301, v6302, v6303, v6304, v6305, v6306, v6307, v6308, v6309, v6310, v6311, v6312, 3, 7, 4, 2, 8) -> f_1252(v6290, v6291, v6292, v6293, v6294, v6295, v6296, 0, v6298, v6299, 1, v6301, v6302, v6303, v6304, v6305, v6306, v6307, v6308, v6309, v6310, v6311, v6312, 3, 7, 4, 2, 8) :|: 0 = 0
f_1252(v6290, v6291, v6292, v6293, v6294, v6295, v6296, 0, v6298, v6299, 1, v6301, v6302, v6303, v6304, v6305, v6306, v6307, v6308, v6309, v6310, v6311, v6312, 3, 7, 4, 2, 8) -> f_1255(v6290, v6291, v6292, v6293, v6294, v6295, v6296, 0, v6298, v6299, 1, v6301, v6302, v6304, v6303, v6305, v6306, v6307, v6308, v6309, v6310, v6311, v6312, 3, 7, 4, 2, 8) :|: 0 = 0
f_1255(v6290, v6291, v6292, v6293, v6294, v6295, v6296, 0, v6298, v6299, 1, v6301, v6302, v6304, v6303, v6305, v6306, v6307, v6308, v6309, v6310, v6311, v6312, 3, 7, 4, 2, 8) -> f_1258(v6290, v6291, v6292, v6293, v6294, v6295, v6296, 0, v6298, v6299, 1, v6301, v6302, v6447, v6303, v6305, v6306, v6307, v6308, v6309, v6310, v6311, v6312, v6304, 3, 7, 4, 2, 8, 5) :|: v6447 = v6299 + 4 * v6301 && 5 <= v6447
f_1258(v6290, v6291, v6292, v6293, v6294, v6295, v6296, 0, v6298, v6299, 1, v6301, v6302, v6447, v6303, v6305, v6306, v6307, v6308, v6309, v6310, v6311, v6312, v6304, 3, 7, 4, 2, 8, 5) -> f_1261(v6290, v6291, v6292, v6293, v6294, v6295, v6296, 0, v6298, v6299, 1, v6301, v6302, v6447, v6303, v6305, v6306, v6307, v6308, v6309, v6310, v6311, v6312, v6304, 3, 7, 4, 2, 8, 5) :|: TRUE
f_1261(v6290, v6291, v6292, v6293, v6294, v6295, v6296, 0, v6298, v6299, 1, v6301, v6302, v6447, v6303, v6305, v6306, v6307, v6308, v6309, v6310, v6311, v6312, v6304, 3, 7, 4, 2, 8, 5) -> f_1264(v6290, v6291, v6292, v6293, v6294, v6295, v6296, 0, v6298, v6299, 1, v6301, v6302, v6447, v6303, v6305, v6306, v6307, v6308, v6309, v6310, v6311, v6312, v6304, 3, 7, 4, 2, 8, 5) :|: TRUE
f_1264(v6290, v6291, v6292, v6293, v6294, v6295, v6296, 0, v6298, v6299, 1, v6301, v6302, v6447, v6303, v6305, v6306, v6307, v6308, v6309, v6310, v6311, v6312, v6304, 3, 7, 4, 2, 8, 5) -> f_1372(v6290, v6291, v6292, v6293, v6294, v6295, v6296, 0, v6298, v6299, 1, v6301, v6302, v6447, v6303, v6305, v6306, v6307, v6308, v6309, v6310, v6311, v6312, 3, 7, 4, 2, 5, 8) :|: TRUE
f_1372(v7828, v7829, v7830, v7831, v7832, v7833, v7834, 0, v7836, v7837, 1, v7839, v7840, v7841, v7842, v7843, v7844, v7845, v7846, v7847, v7848, v7849, v7850, 3, 7, 4, 2, 5, 8) -> f_1374(v7828, v7829, v7830, v7831, v7832, v7833, v7834, 0, v7836, v7837, 1, v7839, v7840, v7841, v7843, v7844, v7845, v7846, v7847, v7848, v7849, v7850, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_1374(v7828, v7829, v7830, v7831, v7832, v7833, v7834, 0, v7836, v7837, 1, v7839, v7840, v7841, v7843, v7844, v7845, v7846, v7847, v7848, v7849, v7850, 3, 7, 4, 2, 5, 8) -> f_1376(v7828, v7829, v7830, v7831, v7832, v7833, v7834, 0, v7836, v7837, 1, v7839, v7840, v7841, v7886, v7843, v7844, v7845, v7846, v7847, v7848, v7849, v7850, 3, 7, 4, 2, 5, 8) :|: v7886 = 1 + v7839 && 2 <= v7886
f_1376(v7828, v7829, v7830, v7831, v7832, v7833, v7834, 0, v7836, v7837, 1, v7839, v7840, v7841, v7886, v7843, v7844, v7845, v7846, v7847, v7848, v7849, v7850, 3, 7, 4, 2, 5, 8) -> f_1378(v7828, v7829, v7830, v7831, v7832, v7833, v7834, 0, v7836, v7837, 1, v7839, v7840, v7841, v7886, v7843, v7844, v7845, v7846, v7847, v7848, v7849, v7850, 3, 7, 4, 2, 5, 8) :|: TRUE
f_1378(v7828, v7829, v7830, v7831, v7832, v7833, v7834, 0, v7836, v7837, 1, v7839, v7840, v7841, v7886, v7843, v7844, v7845, v7846, v7847, v7848, v7849, v7850, 3, 7, 4, 2, 5, 8) -> f_1380(v7828, v7829, v7830, v7831, v7832, v7833, v7834, 0, v7836, v7837, 1, v7839, v7840, v7841, v7886, v7843, v7844, v7845, v7846, v7847, v7848, v7849, v7850, 3, 7, 4, 2, 5, 8) :|: TRUE
f_1380(v7828, v7829, v7830, v7831, v7832, v7833, v7834, 0, v7836, v7837, 1, v7839, v7840, v7841, v7886, v7843, v7844, v7845, v7846, v7847, v7848, v7849, v7850, 3, 7, 4, 2, 5, 8) -> f_1382(v7828, v7829, v7830, v7831, v7832, v7833, v7834, 0, v7836, v7837, 1, v7886, v7840, v7839, v7841, v7843, v7844, v7845, v7846, v7847, v7848, v7849, v7850, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_1382(v7828, v7829, v7830, v7831, v7832, v7833, v7834, 0, v7836, v7837, 1, v7886, v7840, v7839, v7841, v7843, v7844, v7845, v7846, v7847, v7848, v7849, v7850, 3, 7, 4, 2, 5, 8) -> f_1384(v7828, v7829, v7830, v7831, v7832, v7833, v7834, 0, v7836, v7837, 1, v7886, v7840, v7839, v7841, v7843, v7844, v7845, v7846, v7847, v7848, v7849, v7850, 3, 7, 4, 2, 5, 8) :|: 0 = 0
f_1384(v7828, v7829, v7830, v7831, v7832, v7833, v7834, 0, v7836, v7837, 1, v7886, v7840, v7839, v7841, v7843, v7844, v7845, v7846, v7847, v7848, v7849, v7850, 3, 7, 4, 2, 5, 8) -> f_1386(v7828, v7829, v7830, v7831, v7832, v7833, v7834, 0, v7836, v7837, 1, v7886, v7840, v7839, v7841, v7843, v7844, v7845, v7846, v7847, v7848, v7849, v7850, 3, 7, 4, 5, 8, 12, 2) :|: v7886 < v7834 && 3 <= v7834 && 12 <= v7849
f_1386(v7828, v7829, v7830, v7831, v7832, v7833, v7834, 0, v7836, v7837, 1, v7886, v7840, v7839, v7841, v7843, v7844, v7845, v7846, v7847, v7848, v7849, v7850, 3, 7, 4, 5, 8, 12, 2) -> f_1389(v7828, v7829, v7830, v7831, v7832, v7833, v7834, 0, v7836, v7837, 1, v7886, v7840, v7839, v7841, v7843, v7844, v7845, v7846, v7847, v7848, v7849, v7850, 3, 7, 4, 5, 8, 12, 2) :|: 0 = 0
f_1389(v7828, v7829, v7830, v7831, v7832, v7833, v7834, 0, v7836, v7837, 1, v7886, v7840, v7839, v7841, v7843, v7844, v7845, v7846, v7847, v7848, v7849, v7850, 3, 7, 4, 5, 8, 12, 2) -> f_1393(v7828, v7829, v7830, v7831, v7832, v7833, v7834, 0, v7836, v7837, 1, v7886, v7840, v7839, v7841, v7843, v7844, v7845, v7846, v7847, v7848, v7849, v7850, 3, 7, 4, 5, 8, 12, 2) :|: TRUE
f_1393(v7828, v7829, v7830, v7831, v7832, v7833, v7834, 0, v7836, v7837, 1, v7886, v7840, v7839, v7841, v7843, v7844, v7845, v7846, v7847, v7848, v7849, v7850, 3, 7, 4, 5, 8, 12, 2) -> f_1397(v7828, v7829, v7830, v7831, v7832, v7833, v7834, 0, v7836, v7837, 1, v7886, v8028, v7840, v7839, v7841, v7843, v7844, v7845, v7846, v7847, v7848, v7849, v7850, 3, 7, 4, 5, 8, 12, 2) :|: TRUE
f_1397(v7828, v7829, v7830, v7831, v7832, v7833, v7834, 0, v7836, v7837, 1, v7886, v8028, v7840, v7839, v7841, v7843, v7844, v7845, v7846, v7847, v7848, v7849, v7850, 3, 7, 4, 5, 8, 12, 2) -> f_1401(v7828, v7829, v7830, v7831, v7832, v7833, v7834, 0, v7836, v7837, 1, v7886, v8028, v7840, v7839, v7841, v7843, v7844, v7845, v7846, v7847, v7848, v7849, v7850, 3, 7, 4, 5, 8, 12, 2) :|: TRUE
f_1401(v7828, v7829, v7830, v7831, v7832, v7833, v7834, 0, v7836, v7837, 1, v7886, v8028, v7840, v7839, v7841, v7843, v7844, v7845, v7846, v7847, v7848, v7849, v7850, 3, 7, 4, 5, 8, 12, 2) -> f_1405(v7828, v7829, v7830, v7831, v7832, v7833, v7834, 0, v7836, v7837, 1, v7886, v8028, v7840, v7839, v7841, v7843, v7844, v7845, v7846, v7847, v7848, v7849, v7850, 3, 7, 4, 5, 8, 12, 2) :|: 0 = 0
f_1405(v7828, v7829, v7830, v7831, v7832, v7833, v7834, 0, v7836, v7837, 1, v7886, v8028, v7840, v7839, v7841, v7843, v7844, v7845, v7846, v7847, v7848, v7849, v7850, 3, 7, 4, 5, 8, 12, 2) -> f_1409(v7828, v7829, v7830, v7831, v7832, v7833, v7834, 0, v7836, v7837, 1, v7886, v8028, v7840, v7839, v7841, v7843, v7844, v7845, v7846, v7847, v7848, v7849, v7850, 3, 7, 4, 5, 8, 12, 2) :|: v8028 < 0
f_1405(v7828, v7829, v7830, v7831, v7832, v7833, v7834, 0, v7836, v7837, 1, v7886, v8028, v7840, v7839, v7841, v7843, v7844, v7845, v7846, v7847, v7848, v7849, v7850, 3, 7, 4, 5, 8, 12, 2) -> f_1410(v7828, v7829, v7830, v7831, v7832, v7833, v7834, 0, v7836, v7837, 1, v7886, v8028, v7840, v7839, v7841, v7843, v7844, v7845, v7846, v7847, v7848, v7849, v7850, 3, 7, 4, 5, 8, 12, 2) :|: 0 <= v8028
f_1409(v7828, v7829, v7830, v7831, v7832, v7833, v7834, 0, v7836, v7837, 1, v7886, v8028, v7840, v7839, v7841, v7843, v7844, v7845, v7846, v7847, v7848, v7849, v7850, 3, 7, 4, 5, 8, 12, 2) -> f_1414(v7828, v7829, v7830, v7831, v7832, v7833, v7834, 0, v7836, v7837, 1, v7886, v8028, v7840, v7839, v7841, v7843, v7844, v7845, v7846, v7847, v7848, v7849, v7850, 3, 7, 4, 5, 8, 12, 2) :|: 0 = 0
f_1414(v7828, v7829, v7830, v7831, v7832, v7833, v7834, 0, v7836, v7837, 1, v7886, v8028, v7840, v7839, v7841, v7843, v7844, v7845, v7846, v7847, v7848, v7849, v7850, 3, 7, 4, 5, 8, 12, 2) -> f_1420(v7828, v7829, v7830, v7831, v7832, v7833, v7834, 0, v7836, v7837, 1, v7886, v8028, v7840, v7839, v7841, v7843, v7844, v7845, v7846, v7847, v7848, v7849, v7850, 3, 7, 4, 5, 8, 12, 2) :|: TRUE
f_1420(v7828, v7829, v7830, v7831, v7832, v7833, v7834, 0, v7836, v7837, 1, v7886, v8028, v7840, v7839, v7841, v7843, v7844, v7845, v7846, v7847, v7848, v7849, v7850, 3, 7, 4, 5, 8, 12, 2) -> f_1426(v7828, v7829, v7830, v7831, v7832, v7833, v7834, 0, v7836, v7837, 1, v7886, v8028, v7840, v7839, v7841, v7843, v7844, v7845, v7846, v7847, v7848, v7849, v7850, 3, 7, 4, 5, 8, 12, 2) :|: TRUE
f_1426(v7828, v7829, v7830, v7831, v7832, v7833, v7834, 0, v7836, v7837, 1, v7886, v8028, v7840, v7839, v7841, v7843, v7844, v7845, v7846, v7847, v7848, v7849, v7850, 3, 7, 4, 5, 8, 12, 2) -> f_1431(v7828, v7829, v7830, v7831, v7832, v7833, v7834, 0, v7836, v7837, 1, v7886, v8028, v7840, v7839, v7841, v7843, v7844, v7845, v7846, v7847, v7848, v7849, v7850, 3, 7, 4, 5, 8, 12, 2) :|: TRUE
f_1431(v7828, v7829, v7830, v7831, v7832, v7833, v7834, 0, v7836, v7837, 1, v7886, v8028, v7840, v7839, v7841, v7843, v7844, v7845, v7846, v7847, v7848, v7849, v7850, 3, 7, 4, 5, 8, 12, 2) -> f_1355(v7828, v7829, v7830, v7831, v7832, v7833, v7834, 0, v7836, v7837, 1, v7886, v8028, v7840, v7839, v7841, v7843, v7844, v7845, v7846, v7847, v7848, v7849, v7850, 3, 7, 4, 2, 8) :|: TRUE
f_1355(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7772, v7773, v7774, v7775, v7776, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, 3, 7, 4, 2, 8) -> f_1358(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7772, v7773, v7775, v7776, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, v7774, 3, 7, 4, 2, 8) :|: 0 = 0
f_1358(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7772, v7773, v7775, v7776, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, v7774, 3, 7, 4, 2, 8) -> f_1361(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7772, v7773, v7775, v7776, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, v7774, 3, 7, 4, 2, 8) :|: 0 = 0
f_1361(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7772, v7773, v7775, v7776, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, v7774, 3, 7, 4, 2, 8) -> f_1364(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7772, v7773, v7775, v7776, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, v7774, 3, 7, 4, 2, 8) :|: 0 = 0
f_1364(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7772, v7773, v7775, v7776, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, v7774, 3, 7, 4, 2, 8) -> f_1367(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7772, v7773, v7776, v7775, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, v7774, 3, 7, 4, 2, 8) :|: 0 = 0
f_1367(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7772, v7773, v7776, v7775, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, v7774, 3, 7, 4, 2, 8) -> f_1370(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7772, v7773, v7800, v7775, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, v7776, v7774, 3, 7, 4, 2, 8, 5) :|: v7800 = v7770 + 4 * v7772 && 5 <= v7800
f_1370(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7772, v7773, v7800, v7775, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, v7776, v7774, 3, 7, 4, 2, 8, 5) -> f_1373(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7772, v7773, v7800, v7775, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, v7776, v7774, 3, 7, 4, 2, 8, 5) :|: TRUE
f_1373(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7772, v7773, v7800, v7775, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, v7776, v7774, 3, 7, 4, 2, 8, 5) -> f_1375(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7772, v7773, v7800, v7775, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, v7776, v7774, 3, 7, 4, 2, 8, 5) :|: TRUE
f_1375(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7772, v7773, v7800, v7775, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, v7776, v7774, 3, 7, 4, 2, 8, 5) -> f_1377(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7772, v7773, v7800, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, v7776, v7774, 3, 7, 4, 2, 8, 5) :|: 0 = 0
f_1377(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7772, v7773, v7800, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, v7776, v7774, 3, 7, 4, 2, 8, 5) -> f_1379(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7772, v7773, v7800, v7888, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, v7776, v7774, 3, 7, 4, 2, 8, 5) :|: v7888 = 1 + v7772 && 2 <= v7888
f_1379(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7772, v7773, v7800, v7888, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, v7776, v7774, 3, 7, 4, 2, 8, 5) -> f_1381(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7772, v7773, v7800, v7888, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, v7776, v7774, 3, 7, 4, 2, 8, 5) :|: TRUE
f_1381(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7772, v7773, v7800, v7888, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, v7776, v7774, 3, 7, 4, 2, 8, 5) -> f_1383(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7772, v7773, v7800, v7888, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, v7776, v7774, 3, 7, 4, 2, 8, 5) :|: TRUE
f_1383(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7772, v7773, v7800, v7888, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, v7776, v7774, 3, 7, 4, 2, 8, 5) -> f_1385(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7888, v7773, v7772, v7800, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, v7776, v7774, 3, 7, 4, 2, 8, 5) :|: 0 = 0
f_1385(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7888, v7773, v7772, v7800, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, v7776, v7774, 3, 7, 4, 2, 8, 5) -> f_1388(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7888, v7773, v7772, v7800, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, v7776, v7774, 3, 7, 4, 2, 8, 5) :|: 0 = 0
f_1388(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7888, v7773, v7772, v7800, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, v7776, v7774, 3, 7, 4, 2, 8, 5) -> f_1391(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7888, v7773, v7772, v7800, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, v7776, v7774, 3, 7, 4, 8, 12, 5, 2) :|: v7888 < v7767 && 3 <= v7767 && 12 <= v7783
f_1391(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7888, v7773, v7772, v7800, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, v7776, v7774, 3, 7, 4, 8, 12, 5, 2) -> f_1395(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7888, v7773, v7772, v7800, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, v7776, v7774, 3, 7, 4, 8, 12, 5, 2) :|: 0 = 0
f_1395(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7888, v7773, v7772, v7800, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, v7776, v7774, 3, 7, 4, 8, 12, 5, 2) -> f_1399(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7888, v7773, v7772, v7800, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, v7776, v7774, 3, 7, 4, 8, 12, 5, 2) :|: TRUE
f_1399(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7888, v7773, v7772, v7800, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, v7776, v7774, 3, 7, 4, 8, 12, 5, 2) -> f_1403(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7888, v8159, v7773, v7772, v7800, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, v7776, v7774, 3, 7, 4, 8, 12, 5, 2) :|: TRUE
f_1403(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7888, v8159, v7773, v7772, v7800, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, v7776, v7774, 3, 7, 4, 8, 12, 5, 2) -> f_1407(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7888, v8159, v7773, v7772, v7800, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, v7776, v7774, 3, 7, 4, 8, 12, 5, 2) :|: TRUE
f_1407(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7888, v8159, v7773, v7772, v7800, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, v7776, v7774, 3, 7, 4, 8, 12, 5, 2) -> f_1412(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7888, v8159, v7772, v7800, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, v7776, v7774, 3, 7, 4, 8, 12, 5, 2) :|: 0 = 0
f_1412(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7888, v8159, v7772, v7800, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, v7776, v7774, 3, 7, 4, 8, 12, 5, 2) -> f_1417(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7888, v8159, v7772, v7800, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, v7776, v7774, 3, 7, 4, 8, 12, 5, 2) :|: v8159 < 0
f_1412(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7888, v8159, v7772, v7800, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, v7776, v7774, 3, 7, 4, 8, 12, 5, 2) -> f_1418(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7888, v8159, v7772, v7800, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, v7776, v7774, 3, 7, 4, 8, 12, 5, 2) :|: 0 <= v8159
f_1417(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7888, v8159, v7772, v7800, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, v7776, v7774, 3, 7, 4, 8, 12, 5, 2) -> f_1423(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7888, v8159, v7772, v7800, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, v7776, v7774, 3, 7, 4, 8, 12, 5, 2) :|: 0 = 0
f_1423(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7888, v8159, v7772, v7800, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, v7776, v7774, 3, 7, 4, 8, 12, 5, 2) -> f_1428(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7888, v8159, v7772, v7800, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, v7776, v7774, 3, 7, 4, 8, 12, 5, 2) :|: TRUE
f_1428(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7888, v8159, v7772, v7800, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, v7776, v7774, 3, 7, 4, 8, 12, 5, 2) -> f_1420(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7888, v8159, 0, v7772, v7800, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, 3, 7, 4, 5, 8, 12, 2) :|: TRUE
f_1418(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7888, v8159, v7772, v7800, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, v7776, v7774, 3, 7, 4, 8, 12, 5, 2) -> f_1424(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7888, v8159, v7772, v7800, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, v7776, v7774, 3, 7, 4, 8, 12, 5, 2) :|: 0 = 0
f_1424(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7888, v8159, v7772, v7800, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, v7776, v7774, 3, 7, 4, 8, 12, 5, 2) -> f_1429(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7888, v8159, v7772, v7800, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, v7776, v7774, 3, 7, 4, 8, 12, 5, 2) :|: TRUE
f_1429(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7888, v8159, v7772, v7800, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, v7776, v7774, 3, 7, 4, 8, 12, 5, 2) -> f_1241(v7761, v7762, v7763, v7764, v7765, v7766, v7767, 0, v7769, v7770, 1, v7888, v8159, v7772, v7800, v7777, v7778, v7779, v7780, v7781, v7782, v7783, v7784, 3, 7, 4, 2, 8) :|: TRUE
f_1241(v6290, v6291, v6292, v6293, v6294, v6295, v6296, 0, v6298, v6299, 1, v6301, v6302, v6303, v6304, v6305, v6306, v6307, v6308, v6309, v6310, v6311, v6312, 3, 7, 4, 2, 8) -> f_1246(v6290, v6291, v6292, v6293, v6294, v6295, v6296, 0, v6298, v6299, 1, v6301, v6302, v6303, v6304, v6305, v6306, v6307, v6308, v6309, v6310, v6311, v6312, 3, 7, 4, 2, 8) :|: 0 = 0
f_1410(v7828, v7829, v7830, v7831, v7832, v7833, v7834, 0, v7836, v7837, 1, v7886, v8028, v7840, v7839, v7841, v7843, v7844, v7845, v7846, v7847, v7848, v7849, v7850, 3, 7, 4, 5, 8, 12, 2) -> f_1415(v7828, v7829, v7830, v7831, v7832, v7833, v7834, 0, v7836, v7837, 1, v7886, v8028, v7840, v7839, v7841, v7843, v7844, v7845, v7846, v7847, v7848, v7849, v7850, 3, 7, 4, 5, 8, 12, 2) :|: 0 = 0
f_1415(v7828, v7829, v7830, v7831, v7832, v7833, v7834, 0, v7836, v7837, 1, v7886, v8028, v7840, v7839, v7841, v7843, v7844, v7845, v7846, v7847, v7848, v7849, v7850, 3, 7, 4, 5, 8, 12, 2) -> f_1421(v7828, v7829, v7830, v7831, v7832, v7833, v7834, 0, v7836, v7837, 1, v7886, v8028, v7840, v7839, v7841, v7843, v7844, v7845, v7846, v7847, v7848, v7849, v7850, 3, 7, 4, 5, 8, 12, 2) :|: TRUE
f_1421(v7828, v7829, v7830, v7831, v7832, v7833, v7834, 0, v7836, v7837, 1, v7886, v8028, v7840, v7839, v7841, v7843, v7844, v7845, v7846, v7847, v7848, v7849, v7850, 3, 7, 4, 5, 8, 12, 2) -> f_1344(v7828, v7829, v7830, v7831, v7832, v7833, v7834, 0, v7836, v7837, 1, v7886, v8028, v7840, v7839, v7841, v7843, v7844, v7845, v7846, v7847, v7848, v7849, v7850, 3, 7, 4, 2, 8) :|: TRUE
f_1344(v7413, v7414, v7415, v7416, v7417, v7418, v7419, 0, v7421, v7422, 1, v7424, v7425, v7426, v7427, v7428, v7429, v7430, v7431, v7432, v7433, v7434, v7435, v7436, 3, 7, 4, 2, 8) -> f_1350(v7413, v7414, v7415, v7416, v7417, v7418, v7419, 0, v7421, v7422, 1, v7424, v7425, v7427, v7428, v7429, v7430, v7431, v7432, v7433, v7434, v7435, v7436, v7426, 3, 7, 4, 2, 8) :|: 0 = 0
f_1350(v7413, v7414, v7415, v7416, v7417, v7418, v7419, 0, v7421, v7422, 1, v7424, v7425, v7427, v7428, v7429, v7430, v7431, v7432, v7433, v7434, v7435, v7436, v7426, 3, 7, 4, 2, 8) -> f_1356(v7413, v7414, v7415, v7416, v7417, v7418, v7419, 0, v7421, v7422, 1, v7424, v7425, v7427, v7428, v7429, v7430, v7431, v7432, v7433, v7434, v7435, v7436, v7426, 3, 7, 4, 2, 8) :|: 0 = 0
f_1356(v7413, v7414, v7415, v7416, v7417, v7418, v7419, 0, v7421, v7422, 1, v7424, v7425, v7427, v7428, v7429, v7430, v7431, v7432, v7433, v7434, v7435, v7436, v7426, 3, 7, 4, 2, 8) -> f_1359(v7413, v7414, v7415, v7416, v7417, v7418, v7419, 0, v7421, v7422, 1, v7424, v7425, v7427, v7428, v7429, v7430, v7431, v7432, v7433, v7434, v7435, v7436, v7426, 3, 7, 4, 2, 8) :|: 0 = 0
f_1359(v7413, v7414, v7415, v7416, v7417, v7418, v7419, 0, v7421, v7422, 1, v7424, v7425, v7427, v7428, v7429, v7430, v7431, v7432, v7433, v7434, v7435, v7436, v7426, 3, 7, 4, 2, 8) -> f_1362(v7413, v7414, v7415, v7416, v7417, v7418, v7419, 0, v7421, v7422, 1, v7424, v7425, v7428, v7427, v7429, v7430, v7431, v7432, v7433, v7434, v7435, v7436, v7426, 3, 7, 4, 2, 8) :|: 0 = 0
f_1362(v7413, v7414, v7415, v7416, v7417, v7418, v7419, 0, v7421, v7422, 1, v7424, v7425, v7428, v7427, v7429, v7430, v7431, v7432, v7433, v7434, v7435, v7436, v7426, 3, 7, 4, 2, 8) -> f_1365(v7413, v7414, v7415, v7416, v7417, v7418, v7419, 0, v7421, v7422, 1, v7424, v7425, v7798, v7427, v7429, v7430, v7431, v7432, v7433, v7434, v7435, v7436, v7428, v7426, 3, 7, 4, 2, 8, 5) :|: v7798 = v7422 + 4 * v7424 && 5 <= v7798
f_1365(v7413, v7414, v7415, v7416, v7417, v7418, v7419, 0, v7421, v7422, 1, v7424, v7425, v7798, v7427, v7429, v7430, v7431, v7432, v7433, v7434, v7435, v7436, v7428, v7426, 3, 7, 4, 2, 8, 5) -> f_1368(v7413, v7414, v7415, v7416, v7417, v7418, v7419, 0, v7421, v7422, 1, v7424, v7425, v7798, v7427, v7429, v7430, v7431, v7432, v7433, v7434, v7435, v7436, v7428, v7426, 3, 7, 4, 2, 8, 5) :|: TRUE
f_1368(v7413, v7414, v7415, v7416, v7417, v7418, v7419, 0, v7421, v7422, 1, v7424, v7425, v7798, v7427, v7429, v7430, v7431, v7432, v7433, v7434, v7435, v7436, v7428, v7426, 3, 7, 4, 2, 8, 5) -> f_1371(v7413, v7414, v7415, v7416, v7417, v7418, v7419, 0, v7421, v7422, 1, v7424, v7425, v7798, v7427, v7429, v7430, v7431, v7432, v7433, v7434, v7435, v7436, v7428, v7426, 3, 7, 4, 2, 8, 5) :|: TRUE
f_1371(v7413, v7414, v7415, v7416, v7417, v7418, v7419, 0, v7421, v7422, 1, v7424, v7425, v7798, v7427, v7429, v7430, v7431, v7432, v7433, v7434, v7435, v7436, v7428, v7426, 3, 7, 4, 2, 8, 5) -> f_1372(v7413, v7414, v7415, v7416, v7417, v7418, v7419, 0, v7421, v7422, 1, v7424, v7425, v7798, v7427, v7429, v7430, v7431, v7432, v7433, v7434, v7435, v7436, 3, 7, 4, 2, 5, 8) :|: TRUE
Combined rules. Obtained 4 rulesP rules:
f_1412(v7761:0, v7762:0, v7763:0, v7764:0, v7765:0, v7766:0, v7767:0, 0, v7769:0, v7770:0, 1, v7888:0, v8159:0, v7772:0, v7800:0, v7777:0, v7778:0, v7779:0, v7780:0, v7781:0, v7782:0, v7783:0, v7784:0, v7776:0, v7774:0, 3, 7, 4, 8, 12, 5, 2) -> f_1405(v7761:0, v7762:0, v7763:0, v7764:0, v7765:0, v7766:0, v7767:0, 0, v7769:0, v7770:0, 1, 1 + v7888:0, v8028:0, v8159:0, v7888:0, v7770:0 + 4 * v7888:0, v7777:0, v7778:0, v7779:0, v7780:0, v7781:0, v7782:0, v7783:0, v7784:0, 3, 7, 4, 5, 8, 12, 2) :|: v7770:0 + 4 * v7888:0 > 4 && v7888:0 > 0 && v7767:0 > 2 && v7767:0 > 1 + v7888:0 && v8159:0 > -1 && v7783:0 > 11
f_1405(v7828:0, v7829:0, v7830:0, v7831:0, v7832:0, v7833:0, v7834:0, 0, v7836:0, v7837:0, 1, v7886:0, v8028:0, v7840:0, v7839:0, v7841:0, v7843:0, v7844:0, v7845:0, v7846:0, v7847:0, v7848:0, v7849:0, v7850:0, 3, 7, 4, 5, 8, 12, 2) -> f_1412(v7828:0, v7829:0, v7830:0, v7831:0, v7832:0, v7833:0, v7834:0, 0, v7836:0, v7837:0, 1, 1 + v7886:0, v8159:0, v7886:0, v7837:0 + 4 * v7886:0, v7843:0, v7844:0, v7845:0, v7846:0, v7847:0, v7848:0, v7849:0, v7850:0, v7841:0, v7840:0, 3, 7, 4, 8, 12, 5, 2) :|: v8028:0 < 0 && v7837:0 + 4 * v7886:0 > 4 && v7886:0 > 0 && v7834:0 > 2 && v7849:0 > 11 && v7834:0 > 1 + v7886:0
f_1412(v7761:0, v7762:0, v7763:0, v7764:0, v7765:0, v7766:0, v7767:0, 0, v7769:0, v7770:0, 1, v7888:0, v8159:0, v7772:0, v7800:0, v7777:0, v7778:0, v7779:0, v7780:0, v7781:0, v7782:0, v7783:0, v7784:0, v7776:0, v7774:0, 3, 7, 4, 8, 12, 5, 2) -> f_1412(v7761:0, v7762:0, v7763:0, v7764:0, v7765:0, v7766:0, v7767:0, 0, v7769:0, v7770:0, 1, 1 + v7888:0, v8159:1, v7888:0, v7770:0 + 4 * v7888:0, v7777:0, v7778:0, v7779:0, v7780:0, v7781:0, v7782:0, v7783:0, v7784:0, v7800:0, 0, 3, 7, 4, 8, 12, 5, 2) :|: v7770:0 + 4 * v7888:0 > 4 && v7888:0 > 0 && v7767:0 > 2 && v7767:0 > 1 + v7888:0 && v8159:0 < 0 && v7783:0 > 11
f_1405(v7828:0, v7829:0, v7830:0, v7831:0, v7832:0, v7833:0, v7834:0, 0, v7836:0, v7837:0, 1, v7886:0, v8028:0, v7840:0, v7839:0, v7841:0, v7843:0, v7844:0, v7845:0, v7846:0, v7847:0, v7848:0, v7849:0, v7850:0, 3, 7, 4, 5, 8, 12, 2) -> f_1405(v7828:0, v7829:0, v7830:0, v7831:0, v7832:0, v7833:0, v7834:0, 0, v7836:0, v7837:0, 1, 1 + v7886:0, v8028:1, v8028:0, v7886:0, v7837:0 + 4 * v7886:0, v7843:0, v7844:0, v7845:0, v7846:0, v7847:0, v7848:0, v7849:0, v7850:0, 3, 7, 4, 5, 8, 12, 2) :|: v7886:0 > 0 && v8028:0 > -1 && v7834:0 > 2 && v7834:0 > 1 + v7886:0 && v7837:0 + 4 * v7886:0 > 4 && v7849:0 > 11
Filtered unneeded arguments:
   f_1412(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32) -> f_1412(x7, x10, x12, x13, x22)
   f_1405(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31) -> f_1405(x7, x10, x12, x13, x23)
Removed division, modulo operations, cleaned up constraints. Obtained 4 rules.P rules:
f_1412(v7767:0, v7770:0, v7888:0, v8159:0, v7783:0) -> f_1405(v7767:0, v7770:0, 1 + v7888:0, v8028:0, v7783:0) :|: v7888:0 > 0 && v7770:0 + 4 * v7888:0 > 4 && v7767:0 > 2 && v7767:0 > 1 + v7888:0 && v7783:0 > 11 && v8159:0 > -1
f_1405(v7834:0, v7837:0, v7886:0, v8028:0, v7849:0) -> f_1412(v7834:0, v7837:0, 1 + v7886:0, v8159:0, v7849:0) :|: v7837:0 + 4 * v7886:0 > 4 && v8028:0 < 0 && v7886:0 > 0 && v7834:0 > 2 && v7834:0 > 1 + v7886:0 && v7849:0 > 11
f_1412(v7767:0, v7770:0, v7888:0, v8159:0, v7783:0) -> f_1412(v7767:0, v7770:0, 1 + v7888:0, v8159:1, v7783:0) :|: v7888:0 > 0 && v7770:0 + 4 * v7888:0 > 4 && v7767:0 > 2 && v7767:0 > 1 + v7888:0 && v7783:0 > 11 && v8159:0 < 0
f_1405(v7834:0, v7837:0, v7886:0, v8028:0, v7849:0) -> f_1405(v7834:0, v7837:0, 1 + v7886:0, v8028:1, v7849:0) :|: v8028:0 > -1 && v7886:0 > 0 && v7834:0 > 2 && v7834:0 > 1 + v7886:0 && v7849:0 > 11 && v7837:0 + 4 * v7886:0 > 4

----------------------------------------

(71)
Obligation:
Rules:
f_1412(v7767:0, v7770:0, v7888:0, v8159:0, v7783:0) -> f_1405(v7767:0, v7770:0, 1 + v7888:0, v8028:0, v7783:0) :|: v7888:0 > 0 && v7770:0 + 4 * v7888:0 > 4 && v7767:0 > 2 && v7767:0 > 1 + v7888:0 && v7783:0 > 11 && v8159:0 > -1
f_1405(x, x1, x2, x3, x4) -> f_1412(x, x1, 1 + x2, x5, x4) :|: x1 + 4 * x2 > 4 && x3 < 0 && x2 > 0 && x > 2 && x > 1 + x2 && x4 > 11
f_1412(x6, x7, x8, x9, x10) -> f_1412(x6, x7, 1 + x8, x11, x10) :|: x8 > 0 && x7 + 4 * x8 > 4 && x6 > 2 && x6 > 1 + x8 && x10 > 11 && x9 < 0
f_1405(x12, x13, x14, x15, x16) -> f_1405(x12, x13, 1 + x14, x17, x16) :|: x15 > -1 && x14 > 0 && x12 > 2 && x12 > 1 + x14 && x16 > 11 && x13 + 4 * x14 > 4

----------------------------------------

(72) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(73)
Obligation:
Rules:
f_1405(x:0, x1:0, x2:0, x3:0, x4:0) -> f_1412(x:0, x1:0, 1 + x2:0, x5:0, x4:0) :|: x:0 > 1 + x2:0 && x4:0 > 11 && x:0 > 2 && x2:0 > 0 && x3:0 < 0 && x1:0 + 4 * x2:0 > 4
f_1412(v7767:0:0, v7770:0:0, v7888:0:0, v8159:0:0, v7783:0:0) -> f_1405(v7767:0:0, v7770:0:0, 1 + v7888:0:0, v8028:0:0, v7783:0:0) :|: v7783:0:0 > 11 && v8159:0:0 > -1 && v7767:0:0 > 1 + v7888:0:0 && v7767:0:0 > 2 && v7770:0:0 + 4 * v7888:0:0 > 4 && v7888:0:0 > 0
f_1405(x12:0, x13:0, x14:0, x15:0, x16:0) -> f_1405(x12:0, x13:0, 1 + x14:0, x17:0, x16:0) :|: x16:0 > 11 && x13:0 + 4 * x14:0 > 4 && x12:0 > 1 + x14:0 && x12:0 > 2 && x14:0 > 0 && x15:0 > -1
f_1412(x6:0, x7:0, x8:0, x9:0, x10:0) -> f_1412(x6:0, x7:0, 1 + x8:0, x11:0, x10:0) :|: x10:0 > 11 && x9:0 < 0 && x6:0 > 1 + x8:0 && x6:0 > 2 && x7:0 + 4 * x8:0 > 4 && x8:0 > 0

----------------------------------------

(74) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_1405 ] = f_1405_1 + -1*f_1405_3
[ f_1412 ] = f_1412_1 + -1*f_1412_3

The following rules are decreasing:
f_1405(x:0, x1:0, x2:0, x3:0, x4:0) -> f_1412(x:0, x1:0, 1 + x2:0, x5:0, x4:0) :|: x:0 > 1 + x2:0 && x4:0 > 11 && x:0 > 2 && x2:0 > 0 && x3:0 < 0 && x1:0 + 4 * x2:0 > 4
f_1412(v7767:0:0, v7770:0:0, v7888:0:0, v8159:0:0, v7783:0:0) -> f_1405(v7767:0:0, v7770:0:0, 1 + v7888:0:0, v8028:0:0, v7783:0:0) :|: v7783:0:0 > 11 && v8159:0:0 > -1 && v7767:0:0 > 1 + v7888:0:0 && v7767:0:0 > 2 && v7770:0:0 + 4 * v7888:0:0 > 4 && v7888:0:0 > 0
f_1405(x12:0, x13:0, x14:0, x15:0, x16:0) -> f_1405(x12:0, x13:0, 1 + x14:0, x17:0, x16:0) :|: x16:0 > 11 && x13:0 + 4 * x14:0 > 4 && x12:0 > 1 + x14:0 && x12:0 > 2 && x14:0 > 0 && x15:0 > -1
f_1412(x6:0, x7:0, x8:0, x9:0, x10:0) -> f_1412(x6:0, x7:0, 1 + x8:0, x11:0, x10:0) :|: x10:0 > 11 && x9:0 < 0 && x6:0 > 1 + x8:0 && x6:0 > 2 && x7:0 + 4 * x8:0 > 4 && x8:0 > 0

The following rules are bounded:
f_1405(x:0, x1:0, x2:0, x3:0, x4:0) -> f_1412(x:0, x1:0, 1 + x2:0, x5:0, x4:0) :|: x:0 > 1 + x2:0 && x4:0 > 11 && x:0 > 2 && x2:0 > 0 && x3:0 < 0 && x1:0 + 4 * x2:0 > 4
f_1412(v7767:0:0, v7770:0:0, v7888:0:0, v8159:0:0, v7783:0:0) -> f_1405(v7767:0:0, v7770:0:0, 1 + v7888:0:0, v8028:0:0, v7783:0:0) :|: v7783:0:0 > 11 && v8159:0:0 > -1 && v7767:0:0 > 1 + v7888:0:0 && v7767:0:0 > 2 && v7770:0:0 + 4 * v7888:0:0 > 4 && v7888:0:0 > 0
f_1405(x12:0, x13:0, x14:0, x15:0, x16:0) -> f_1405(x12:0, x13:0, 1 + x14:0, x17:0, x16:0) :|: x16:0 > 11 && x13:0 + 4 * x14:0 > 4 && x12:0 > 1 + x14:0 && x12:0 > 2 && x14:0 > 0 && x15:0 > -1
f_1412(x6:0, x7:0, x8:0, x9:0, x10:0) -> f_1412(x6:0, x7:0, 1 + x8:0, x11:0, x10:0) :|: x10:0 > 11 && x9:0 < 0 && x6:0 > 1 + x8:0 && x6:0 > 2 && x7:0 + 4 * x8:0 > 4 && x8:0 > 0


----------------------------------------

(75)
YES

----------------------------------------

(76)
Obligation:
SCC
----------------------------------------

(77) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 17 rulesP rules:
f_933(v3084, v3085, v3086, v3087, v3088, v3089, v3090, 1, 4, v3093, 0, v3095, v3096, v3097, v3098, v3099, v3100, v3101, v3102, v3103, v3104, 3, 7, 8) -> f_938(v3084, v3085, v3086, v3087, v3088, v3089, v3090, 1, 4, v3093, 0, v3095, v3096, v3097, v3098, v3099, v3100, v3101, v3102, v3103, v3104, 3, 7, 8) :|: 0 = 0
f_938(v3084, v3085, v3086, v3087, v3088, v3089, v3090, 1, 4, v3093, 0, v3095, v3096, v3097, v3098, v3099, v3100, v3101, v3102, v3103, v3104, 3, 7, 8) -> f_942(v3084, v3085, v3086, v3087, v3088, v3089, v3090, 1, 4, v3093, 0, v3095, v3096, v3097, v3098, v3099, v3100, v3101, v3102, v3103, v3104, 3, 7, 8) :|: 0 = 0
f_942(v3084, v3085, v3086, v3087, v3088, v3089, v3090, 1, 4, v3093, 0, v3095, v3096, v3097, v3098, v3099, v3100, v3101, v3102, v3103, v3104, 3, 7, 8) -> f_946(v3084, v3085, v3086, v3087, v3088, v3089, v3090, 1, 4, v3093, 0, v3095, v3096, v3097, v3098, v3099, v3100, v3101, v3102, v3103, v3104, 3, 7, 8) :|: 0 = 0
f_946(v3084, v3085, v3086, v3087, v3088, v3089, v3090, 1, 4, v3093, 0, v3095, v3096, v3097, v3098, v3099, v3100, v3101, v3102, v3103, v3104, 3, 7, 8) -> f_950(v3084, v3085, v3086, v3087, v3088, v3089, v3090, 1, 4, v3093, 0, v3095, v3097, v3096, v3098, v3099, v3100, v3101, v3102, v3103, v3104, 3, 7, 8) :|: 0 = 0
f_950(v3084, v3085, v3086, v3087, v3088, v3089, v3090, 1, 4, v3093, 0, v3095, v3097, v3096, v3098, v3099, v3100, v3101, v3102, v3103, v3104, 3, 7, 8) -> f_955(v3084, v3085, v3086, v3087, v3088, v3089, v3090, 1, 4, v3093, 0, v3095, v3097, v3096, v3098, v3099, v3100, v3101, v3102, v3103, v3104, 3, 7, 2, 8) :|: 0 < v3097 && 2 <= v3096 && 2 <= v3095
f_955(v3084, v3085, v3086, v3087, v3088, v3089, v3090, 1, 4, v3093, 0, v3095, v3097, v3096, v3098, v3099, v3100, v3101, v3102, v3103, v3104, 3, 7, 2, 8) -> f_961(v3084, v3085, v3086, v3087, v3088, v3089, v3090, 1, 4, v3093, 0, v3095, v3097, v3096, v3098, v3099, v3100, v3101, v3102, v3103, v3104, 3, 7, 2, 8) :|: 0 = 0
f_961(v3084, v3085, v3086, v3087, v3088, v3089, v3090, 1, 4, v3093, 0, v3095, v3097, v3096, v3098, v3099, v3100, v3101, v3102, v3103, v3104, 3, 7, 2, 8) -> f_967(v3084, v3085, v3086, v3087, v3088, v3089, v3090, 1, 4, v3093, 0, v3095, v3097, v3096, v3098, v3099, v3100, v3101, v3102, v3103, v3104, 3, 7, 2, 8) :|: TRUE
f_967(v3084, v3085, v3086, v3087, v3088, v3089, v3090, 1, 4, v3093, 0, v3095, v3097, v3096, v3098, v3099, v3100, v3101, v3102, v3103, v3104, 3, 7, 2, 8) -> f_974(v3084, v3085, v3086, v3087, v3088, v3089, v3090, 1, 4, v3093, 0, v3095, v3097, v3096, v3098, v3099, v3100, v3101, v3102, v3103, v3104, 3, 7, 2, 8) :|: 0 = 0
f_974(v3084, v3085, v3086, v3087, v3088, v3089, v3090, 1, 4, v3093, 0, v3095, v3097, v3096, v3098, v3099, v3100, v3101, v3102, v3103, v3104, 3, 7, 2, 8) -> f_981(v3084, v3085, v3086, v3087, v3088, v3089, v3090, 1, 4, v3093, 0, v3095, v3097, v3096, v3098, v3099, v3100, v3101, v3102, v3103, v3104, 3, 7, 2, 8) :|: 0 = 0
f_981(v3084, v3085, v3086, v3087, v3088, v3089, v3090, 1, 4, v3093, 0, v3095, v3097, v3096, v3098, v3099, v3100, v3101, v3102, v3103, v3104, 3, 7, 2, 8) -> f_989(v3084, v3085, v3086, v3087, v3088, v3089, v3090, 1, 4, v3093, 0, v3095, v3097, v3096, v3098, v3099, v3100, v3101, v3102, v3103, v3104, 3, 7, 2, 8) :|: 0 = 0
f_989(v3084, v3085, v3086, v3087, v3088, v3089, v3090, 1, 4, v3093, 0, v3095, v3097, v3096, v3098, v3099, v3100, v3101, v3102, v3103, v3104, 3, 7, 2, 8) -> f_997(v3084, v3085, v3086, v3087, v3088, v3089, v3090, 1, 4, v3093, 0, v3095, v3097, v3096, v3098, v3099, v3100, v3101, v3102, v3103, v3104, 3, 7, 2, 8) :|: 0 = 0
f_997(v3084, v3085, v3086, v3087, v3088, v3089, v3090, 1, 4, v3093, 0, v3095, v3097, v3096, v3098, v3099, v3100, v3101, v3102, v3103, v3104, 3, 7, 2, 8) -> f_1005(v3084, v3085, v3086, v3087, v3088, v3089, v3090, 1, 4, v3093, 0, v3095, v3097, v3098, v3099, v3100, v3101, v3102, v3103, v3104, 3, 7, 2, 8) :|: 0 = 0
f_1005(v3084, v3085, v3086, v3087, v3088, v3089, v3090, 1, 4, v3093, 0, v3095, v3097, v3098, v3099, v3100, v3101, v3102, v3103, v3104, 3, 7, 2, 8) -> f_1013(v3084, v3085, v3086, v3087, v3088, v3089, v3090, 1, 4, v3093, 0, v3095, v3097, v3808, v3098, v3099, v3100, v3101, v3102, v3103, v3104, 3, 7, 2, 8) :|: 1 + v3808 = v3097 && 0 <= v3808
f_1013(v3084, v3085, v3086, v3087, v3088, v3089, v3090, 1, 4, v3093, 0, v3095, v3097, v3808, v3098, v3099, v3100, v3101, v3102, v3103, v3104, 3, 7, 2, 8) -> f_1022(v3084, v3085, v3086, v3087, v3088, v3089, v3090, 1, 4, v3093, 0, v3095, v3097, v3808, v3098, v3099, v3100, v3101, v3102, v3103, v3104, 3, 7, 2, 8) :|: TRUE
f_1022(v3084, v3085, v3086, v3087, v3088, v3089, v3090, 1, 4, v3093, 0, v3095, v3097, v3808, v3098, v3099, v3100, v3101, v3102, v3103, v3104, 3, 7, 2, 8) -> f_1031(v3084, v3085, v3086, v3087, v3088, v3089, v3090, 1, 4, v3093, 0, v3095, v3097, v3808, v3098, v3099, v3100, v3101, v3102, v3103, v3104, 3, 7, 2, 8) :|: TRUE
f_1031(v3084, v3085, v3086, v3087, v3088, v3089, v3090, 1, 4, v3093, 0, v3095, v3097, v3808, v3098, v3099, v3100, v3101, v3102, v3103, v3104, 3, 7, 2, 8) -> f_928(v3084, v3085, v3086, v3087, v3088, v3089, v3090, 1, 4, v3093, 0, v3095, v3097, v3808, v3098, v3099, v3100, v3101, v3102, v3103, v3104, 3, 7, 8) :|: TRUE
f_928(v3084, v3085, v3086, v3087, v3088, v3089, v3090, 1, 4, v3093, 0, v3095, v3096, v3097, v3098, v3099, v3100, v3101, v3102, v3103, v3104, 3, 7, 8) -> f_933(v3084, v3085, v3086, v3087, v3088, v3089, v3090, 1, 4, v3093, 0, v3095, v3096, v3097, v3098, v3099, v3100, v3101, v3102, v3103, v3104, 3, 7, 8) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_933(v3084:0, v3085:0, v3086:0, v3087:0, v3088:0, v3089:0, v3090:0, 1, 4, v3093:0, 0, v3095:0, v3096:0, 1 + v3808:0, v3098:0, v3099:0, v3100:0, v3101:0, v3102:0, v3103:0, v3104:0, 3, 7, 8) -> f_933(v3084:0, v3085:0, v3086:0, v3087:0, v3088:0, v3089:0, v3090:0, 1, 4, v3093:0, 0, v3095:0, 1 + v3808:0, v3808:0, v3098:0, v3099:0, v3100:0, v3101:0, v3102:0, v3103:0, v3104:0, 3, 7, 8) :|: v3096:0 > 1 && v3808:0 > -1 && v3095:0 > 1
Filtered unneeded arguments:
   f_933(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24) -> f_933(x12, x13, x14)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_933(v3095:0, v3096:0, sum~cons_1~v3808:0) -> f_933(v3095:0, 1 + v3808:0, v3808:0) :|: v3808:0 > -1 && v3095:0 > 1 && v3096:0 > 1 && sum~cons_1~v3808:0 = 1 + v3808:0

----------------------------------------

(78)
Obligation:
Rules:
f_933(v3095:0, v3096:0, sum~cons_1~v3808:0) -> f_933(v3095:0, 1 + v3808:0, v3808:0) :|: v3808:0 > -1 && v3095:0 > 1 && v3096:0 > 1 && sum~cons_1~v3808:0 = 1 + v3808:0

----------------------------------------

(79) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(80)
Obligation:
Rules:
f_933(v3095:0:0, v3096:0:0, sum~cons_1~v3808:0:0) -> f_933(v3095:0:0, 1 + v3808:0:0, v3808:0:0) :|: v3808:0:0 > -1 && v3095:0:0 > 1 && v3096:0:0 > 1 && sum~cons_1~v3808:0:0 = 1 + v3808:0:0

----------------------------------------

(81) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_933 ] = f_933_3

The following rules are decreasing:
f_933(v3095:0:0, v3096:0:0, sum~cons_1~v3808:0:0) -> f_933(v3095:0:0, 1 + v3808:0:0, v3808:0:0) :|: v3808:0:0 > -1 && v3095:0:0 > 1 && v3096:0:0 > 1 && sum~cons_1~v3808:0:0 = 1 + v3808:0:0

The following rules are bounded:
f_933(v3095:0:0, v3096:0:0, sum~cons_1~v3808:0:0) -> f_933(v3095:0:0, 1 + v3808:0:0, v3808:0:0) :|: v3808:0:0 > -1 && v3095:0:0 > 1 && v3096:0:0 > 1 && sum~cons_1~v3808:0:0 = 1 + v3808:0:0


----------------------------------------

(82)
YES
Graph finished, checking  consistency
Graph finished, checked consistency, took 0.001s
