YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/FsSb8.c
# AProVE Commit ID: 48c83ccb80d5f8312cb92f4aa1b51dc35e247e65 nils 20241118 unpublished


Termination of the given C Problem could be proven:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 53 ms]
(2) LLVM problem
(3) LLVMToTerminationGraphProof [EQUIVALENT, 2184 ms]
(4) LLVM Symbolic Execution Graph
(5) SymbolicExecutionGraphToSCCProof [SOUND, 0 ms]
(6) AND
    (7) LLVM Symbolic Execution SCC
        (8) SCC2IRS [SOUND, 11 ms]
        (9) IntTRS
        (10) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (11) IntTRS
        (12) RankingReductionPairProof [EQUIVALENT, 9 ms]
        (13) YES
    (14) LLVM Symbolic Execution SCC
        (15) SCC2IRS [SOUND, 4 ms]
        (16) IntTRS
        (17) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (18) IntTRS
        (19) RankingReductionPairProof [EQUIVALENT, 8 ms]
        (20) YES
    (21) LLVM Symbolic Execution SCC
        (22) SCC2IRS [SOUND, 0 ms]
        (23) IntTRS
        (24) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (25) IntTRS
        (26) RankingReductionPairProof [EQUIVALENT, 10 ms]
        (27) YES
    (28) LLVM Symbolic Execution SCC
        (29) SCC2IRS [SOUND, 0 ms]
        (30) IntTRS
        (31) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (32) IntTRS
        (33) RankingReductionPairProof [EQUIVALENT, 10 ms]
        (34) YES
    (35) LLVM Symbolic Execution SCC
        (36) SCC2IRS [SOUND, 6 ms]
        (37) IntTRS
        (38) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (39) IntTRS
        (40) RankingReductionPairProof [EQUIVALENT, 4 ms]
        (41) YES
    (42) LLVM Symbolic Execution SCC
        (43) SCC2IRS [SOUND, 0 ms]
        (44) IntTRS
        (45) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (46) IntTRS
        (47) RankingReductionPairProof [EQUIVALENT, 4 ms]
        (48) YES
    (49) LLVM Symbolic Execution SCC
        (50) SCC2IRS [SOUND, 0 ms]
        (51) IntTRS
        (52) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (53) IntTRS
        (54) RankingReductionPairProof [EQUIVALENT, 5 ms]
        (55) YES
    (56) LLVM Symbolic Execution SCC
        (57) SCC2IRS [SOUND, 6 ms]
        (58) IntTRS
        (59) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (60) IntTRS
        (61) RankingReductionPairProof [EQUIVALENT, 4 ms]
        (62) YES


----------------------------------------

(0)
Obligation:
c file /hpcwork/ff862203/termcomp25/benchmarks/FsSb8.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /hpcwork/ff862203/termcomp25/benchmarks/FsSb8.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-pc-linux-gnu"

Type definitions:

Global variables:

Function declarations and definitions:

*BasicFunctionTypename: "llvm.dbg.declare" returnParam: BasicVoidType parameters: (BasicMetadataType, BasicMetadataType, BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_nondet_int" returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 7
	0:
		%1 = alloca i32, align 4
		%2 = alloca i32, align 4
		%3 = alloca i32, align 4
		%4 = alloca i32, align 4
		store 0, %1
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %2)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %3)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %4)
		%5 = call i32 @__VERIFIER_nondet_int()
		store %5, %3
		%6 = call i32 @__VERIFIER_nondet_int()
		store %6, %4
		%7 = load %3
		%8 = icmp slt %7 0
		br %8, %9, %12
	9:
		%10 = load %3
		%11 = sub i32 0, %10
		store %11, %3
		br %12
	12:
		%13 = load %4
		%14 = icmp slt %13 0
		br %14, %15, %18
	15:
		%16 = load %4
		%17 = sub i32 0, %16
		store %17, %4
		br %18
	18:
		br %19
	19:
		%20 = load %4
		%21 = icmp sgt %20 0
		br %21, %22, %35
	22:
		%23 = load %3
		store %23, %2
		br %24
	24:
		%25 = load %2
		%26 = load %4
		%27 = icmp sge %25 %26
		br %27, %28, %32
	28:
		%29 = load %2
		%30 = load %4
		%31 = sub i32 %29, %30
		store %31, %2
		br %24
	32:
		%33 = load %4
		store %33, %3
		%34 = load %2
		store %34, %4
		br %19
	35:
		ret 0


Analyze Termination of all function calls matching the pattern:
main()
----------------------------------------

(3) LLVMToTerminationGraphProof (EQUIVALENT)
Constructed symbolic execution graph for LLVM program.
----------------------------------------

(4)
Obligation:
Symbolic Execution Graph
----------------------------------------

(5) SymbolicExecutionGraphToSCCProof (SOUND)
Splitted symbolic execution graph to 8 SCCs.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
SCC
----------------------------------------

(8) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 33 rulesP rules:
f_834(v8089, v8090, v8091, v8092, v8093, v8094, 0, 1, v8097, v8098, v8099, v8100, v8101, v8102, v8103, v8104, 3, 2, 4) -> f_839(v8089, v8090, v8091, v8092, v8093, v8094, 0, 1, v8097, v8098, v8099, v8100, v8101, v8102, v8103, v8104, 3, 2, 4) :|: 0 = 0
f_839(v8089, v8090, v8091, v8092, v8093, v8094, 0, 1, v8097, v8098, v8099, v8100, v8101, v8102, v8103, v8104, 3, 2, 4) -> f_843(v8089, v8090, v8091, v8092, v8093, v8094, 0, 1, v8097, v8098, v8099, v8100, v8101, v8102, v8103, v8104, 3, 2, 4) :|: 0 = 0
f_843(v8089, v8090, v8091, v8092, v8093, v8094, 0, 1, v8097, v8098, v8099, v8100, v8101, v8102, v8103, v8104, 3, 2, 4) -> f_847(v8089, v8090, v8091, v8092, v8093, v8094, 0, 1, v8097, v8098, v8099, v8100, v8101, v8102, v8103, v8104, 3, 2, 4) :|: TRUE
f_847(v8089, v8090, v8091, v8092, v8093, v8094, 0, 1, v8097, v8098, v8099, v8100, v8101, v8102, v8103, v8104, 3, 2, 4) -> f_848(v8089, v8090, v8091, v8092, v8093, v8094, 0, 1, v8097, v8098, v8099, v8099, v8100, v8099, v8098, v8101, v8102, v8103, v8104, 3, 2, 4) :|: v8098 <= v8099 && v8098 <= v8099 && v8098 <= v8098 && 1 <= v8089 && 1 <= v8090 && 1 <= v8091 && 1 <= v8092 && 1 <= v8093 && 2 + v8094 <= 0 && 2 <= v8097 && 1 <= v8098 && 2 <= v8099 && 1 <= v8099 && 2 <= v8100 && 1 <= v8099 && 1 <= v8098 && 4 <= v8101 && 4 <= v8102 && 4 <= v8103 && 4 <= v8104 && v8089 <= v8101 && v8090 <= v8102 && v8091 <= v8103 && v8092 <= v8104
f_848(v8731, v8732, v8733, v8734, v8735, v8736, 0, 1, v8739, v8740, v8741, v8742, v8743, v8744, v8745, v8746, v8747, v8748, v8749, 3, 2, 4) -> f_853(v8731, v8732, v8733, v8734, v8735, v8736, 0, 1, v8739, v8740, v8741, v8742, v8744, v8745, v8746, v8747, v8748, v8749, 3, 2, 4) :|: 0 = 0
f_853(v8731, v8732, v8733, v8734, v8735, v8736, 0, 1, v8739, v8740, v8741, v8742, v8744, v8745, v8746, v8747, v8748, v8749, 3, 2, 4) -> f_857(v8731, v8732, v8733, v8734, v8735, v8736, 0, 1, v8739, v8740, v8741, v8742, v8745, v8746, v8747, v8748, v8749, 3, 2, 4) :|: 0 = 0
f_857(v8731, v8732, v8733, v8734, v8735, v8736, 0, 1, v8739, v8740, v8741, v8742, v8745, v8746, v8747, v8748, v8749, 3, 2, 4) -> f_862(v8731, v8732, v8733, v8734, v8735, v8736, 0, 1, v8739, v8740, v8741, v8742, v9033, v8746, v8747, v8748, v8749, 3, 2, 4) :|: v9033 + v8740 = v8742 && 0 <= v9033
f_862(v8731, v8732, v8733, v8734, v8735, v8736, 0, 1, v8739, v8740, v8741, v8742, v9033, v8746, v8747, v8748, v8749, 3, 2, 4) -> f_867(v8731, v8732, v8733, v8734, v8735, v8736, 0, 1, v8739, v8740, v8741, v8742, v9033, v8746, v8747, v8748, v8749, 3, 2, 4) :|: TRUE
f_867(v8731, v8732, v8733, v8734, v8735, v8736, 0, 1, v8739, v8740, v8741, v8742, v9033, v8746, v8747, v8748, v8749, 3, 2, 4) -> f_871(v8731, v8732, v8733, v8734, v8735, v8736, 0, 1, v8739, v8740, v8741, v8742, v9033, v8746, v8747, v8748, v8749, 3, 2, 4) :|: TRUE
f_871(v8731, v8732, v8733, v8734, v8735, v8736, 0, 1, v8739, v8740, v8741, v8742, v9033, v8746, v8747, v8748, v8749, 3, 2, 4) -> f_872(v8731, v8732, v8733, v8734, v8735, v8736, 0, 1, v8739, v8740, v8741, v8742, v9033, v8746, v8747, v8748, v8749, 3, 2, 4) :|: 1 <= v8731 && 1 <= v8732 && 1 <= v8733 && 1 <= v8734 && 1 <= v8735 && 2 + v8736 <= 0 && 2 <= v8739 && 1 <= v8740 && 2 <= v8741 && 1 <= v8742 && 0 <= v9033 && 4 <= v8746 && 4 <= v8747 && 4 <= v8748 && 4 <= v8749 && v8731 <= v8746 && v8732 <= v8747 && v8733 <= v8748 && v8734 <= v8749
f_872(v9255, v9256, v9257, v9258, v9259, v9260, 0, 1, v9263, v9264, v9265, v9266, v9267, v9268, v9269, v9270, v9271, 3, 2, 4) -> f_878(v9255, v9256, v9257, v9258, v9259, v9260, 0, 1, v9263, v9264, v9265, v9267, v9266, v9268, v9269, v9270, v9271, 3, 2, 4) :|: 0 = 0
f_878(v9255, v9256, v9257, v9258, v9259, v9260, 0, 1, v9263, v9264, v9265, v9267, v9266, v9268, v9269, v9270, v9271, 3, 2, 4) -> f_883(v9255, v9256, v9257, v9258, v9259, v9260, 0, 1, v9263, v9264, v9265, v9267, v9266, v9268, v9269, v9270, v9271, 3, 2, 4) :|: 0 = 0
f_883(v9255, v9256, v9257, v9258, v9259, v9260, 0, 1, v9263, v9264, v9265, v9267, v9266, v9268, v9269, v9270, v9271, 3, 2, 4) -> f_888(v9255, v9256, v9257, v9258, v9259, v9260, 0, 1, v9263, v9264, v9265, v9267, v9266, v9268, v9269, v9270, v9271, 3, 2, 4) :|: v9264 <= v9267 && 1 <= v9267 && 2 <= v9266
f_883(v9255, v9256, v9257, v9258, v9259, v9260, 0, 1, v9263, v9264, v9265, v9267, v9266, v9268, v9269, v9270, v9271, 3, 2, 4) -> f_889(v9255, v9256, v9257, v9258, v9259, v9260, 0, 1, v9263, v9264, v9265, v9267, v9266, v9268, v9269, v9270, v9271, 3, 2, 4) :|: v9267 < v9264
f_888(v9255, v9256, v9257, v9258, v9259, v9260, 0, 1, v9263, v9264, v9265, v9267, v9266, v9268, v9269, v9270, v9271, 3, 2, 4) -> f_895(v9255, v9256, v9257, v9258, v9259, v9260, 0, 1, v9263, v9264, v9265, v9267, v9266, v9268, v9269, v9270, v9271, 3, 2, 4) :|: 0 = 0
f_895(v9255, v9256, v9257, v9258, v9259, v9260, 0, 1, v9263, v9264, v9265, v9267, v9266, v9268, v9269, v9270, v9271, 3, 2, 4) -> f_901(v9255, v9256, v9257, v9258, v9259, v9260, 0, 1, v9263, v9264, v9265, v9267, v9266, v9268, v9269, v9270, v9271, 3, 2, 4) :|: TRUE
f_901(v9255, v9256, v9257, v9258, v9259, v9260, 0, 1, v9263, v9264, v9265, v9267, v9266, v9268, v9269, v9270, v9271, 3, 2, 4) -> f_848(v9255, v9256, v9257, v9258, v9259, v9260, 0, 1, v9263, v9264, v9265, v9267, v9266, v9264, v9267, v9268, v9269, v9270, v9271, 3, 2, 4) :|: v9264 <= v9267 && v9264 <= v9264 && v9264 <= v9267 && 1 <= v9255 && 1 <= v9256 && 1 <= v9257 && 1 <= v9258 && 1 <= v9259 && 2 + v9260 <= 0 && 2 <= v9263 && 1 <= v9264 && 2 <= v9265 && 1 <= v9267 && 2 <= v9266 && 1 <= v9264 && 1 <= v9267 && 4 <= v9268 && 4 <= v9269 && 4 <= v9270 && 4 <= v9271 && v9255 <= v9268 && v9256 <= v9269 && v9257 <= v9270 && v9258 <= v9271
f_889(v9255, v9256, v9257, v9258, v9259, v9260, 0, 1, v9263, v9264, v9265, v9267, v9266, v9268, v9269, v9270, v9271, 3, 2, 4) -> f_896(v9255, v9256, v9257, v9258, v9259, v9260, 0, 1, v9263, v9264, v9265, v9267, v9266, v9268, v9269, v9270, v9271, 3, 2, 4) :|: 0 = 0
f_896(v9255, v9256, v9257, v9258, v9259, v9260, 0, 1, v9263, v9264, v9265, v9267, v9266, v9268, v9269, v9270, v9271, 3, 2, 4) -> f_902(v9255, v9256, v9257, v9258, v9259, v9260, 0, 1, v9263, v9264, v9265, v9267, v9266, v9268, v9269, v9270, v9271, 3, 2, 4) :|: TRUE
f_902(v9255, v9256, v9257, v9258, v9259, v9260, 0, 1, v9263, v9264, v9265, v9267, v9266, v9268, v9269, v9270, v9271, 3, 2, 4) -> f_907(v9255, v9256, v9257, v9258, v9259, v9260, 0, 1, v9263, v9264, v9265, v9267, v9266, v9268, v9269, v9270, v9271, 3, 2, 4) :|: 0 = 0
f_907(v9255, v9256, v9257, v9258, v9259, v9260, 0, 1, v9263, v9264, v9265, v9267, v9266, v9268, v9269, v9270, v9271, 3, 2, 4) -> f_912(v9255, v9256, v9257, v9258, v9259, v9260, 0, 1, v9263, v9264, v9265, v9267, v9266, v9268, v9269, v9270, v9271, 3, 2, 4) :|: TRUE
f_912(v9255, v9256, v9257, v9258, v9259, v9260, 0, 1, v9263, v9264, v9265, v9267, v9266, v9268, v9269, v9270, v9271, 3, 2, 4) -> f_917(v9255, v9256, v9257, v9258, v9259, v9260, 0, 1, v9263, v9264, v9265, v9267, v9266, v9268, v9269, v9270, v9271, 3, 2, 4) :|: 0 = 0
f_917(v9255, v9256, v9257, v9258, v9259, v9260, 0, 1, v9263, v9264, v9265, v9267, v9266, v9268, v9269, v9270, v9271, 3, 2, 4) -> f_922(v9255, v9256, v9257, v9258, v9259, v9260, 0, 1, v9263, v9264, v9265, v9267, v9266, v9268, v9269, v9270, v9271, 3, 2, 4) :|: TRUE
f_922(v9255, v9256, v9257, v9258, v9259, v9260, 0, 1, v9263, v9264, v9265, v9267, v9266, v9268, v9269, v9270, v9271, 3, 2, 4) -> f_927(v9255, v9256, v9257, v9258, v9259, v9260, 0, 1, v9263, v9264, v9265, v9267, v9266, v9268, v9269, v9270, v9271, 3, 2, 4) :|: TRUE
f_927(v9255, v9256, v9257, v9258, v9259, v9260, 0, 1, v9263, v9264, v9265, v9267, v9266, v9268, v9269, v9270, v9271, 3, 2, 4) -> f_932(v9255, v9256, v9257, v9258, v9259, v9260, 0, 1, v9263, v9267, v9265, v9264, v9266, v9268, v9269, v9270, v9271, 3, 2, 4) :|: 0 = 0
f_932(v9255, v9256, v9257, v9258, v9259, v9260, 0, 1, v9263, v9267, v9265, v9264, v9266, v9268, v9269, v9270, v9271, 3, 2, 4) -> f_936(v9255, v9256, v9257, v9258, v9259, v9260, 0, 1, v9263, v9267, v9265, v9264, v9266, v9268, v9269, v9270, v9271, 3, 2, 4) :|: 0 < v9267 && 3 <= v9266 && 2 <= v9264
f_936(v9255, v9256, v9257, v9258, v9259, v9260, 0, 1, v9263, v9267, v9265, v9264, v9266, v9268, v9269, v9270, v9271, 3, 2, 4) -> f_940(v9255, v9256, v9257, v9258, v9259, v9260, 0, 1, v9263, v9267, v9265, v9264, v9266, v9268, v9269, v9270, v9271, 3, 2, 4) :|: 0 = 0
f_940(v9255, v9256, v9257, v9258, v9259, v9260, 0, 1, v9263, v9267, v9265, v9264, v9266, v9268, v9269, v9270, v9271, 3, 2, 4) -> f_944(v9255, v9256, v9257, v9258, v9259, v9260, 0, 1, v9263, v9267, v9265, v9264, v9266, v9268, v9269, v9270, v9271, 3, 2, 4) :|: TRUE
f_944(v9255, v9256, v9257, v9258, v9259, v9260, 0, 1, v9263, v9267, v9265, v9264, v9266, v9268, v9269, v9270, v9271, 3, 2, 4) -> f_947(v9255, v9256, v9257, v9258, v9259, v9260, 0, 1, v9263, v9267, v9264, v9266, v9268, v9269, v9270, v9271, 3, 2, 4) :|: 0 = 0
f_947(v9255, v9256, v9257, v9258, v9259, v9260, 0, 1, v9263, v9267, v9264, v9266, v9268, v9269, v9270, v9271, 3, 2, 4) -> f_948(v9255, v9256, v9257, v9258, v9259, v9260, 0, 1, v9263, v9267, v9264, v9266, v9268, v9269, v9270, v9271, 3, 2, 4) :|: TRUE
f_948(v9255, v9256, v9257, v9258, v9259, v9260, 0, 1, v9263, v9267, v9264, v9266, v9268, v9269, v9270, v9271, 3, 2, 4) -> f_949(v9255, v9256, v9257, v9258, v9259, v9260, 0, 1, v9263, v9267, v9264, v9266, v9268, v9269, v9270, v9271, 3, 2, 4) :|: TRUE
f_949(v9255, v9256, v9257, v9258, v9259, v9260, 0, 1, v9263, v9267, v9264, v9266, v9268, v9269, v9270, v9271, 3, 2, 4) -> f_829(v9255, v9256, v9257, v9258, v9259, v9260, 0, 1, v9263, v9267, v9264, v9266, v9268, v9269, v9270, v9271, 3, 2, 4) :|: v9267 < v9264 && 1 <= v9255 && 1 <= v9256 && 1 <= v9257 && 1 <= v9258 && 1 <= v9259 && 2 + v9260 <= 0 && 2 <= v9263 && 1 <= v9267 && 2 <= v9264 && 3 <= v9266 && 4 <= v9268 && 4 <= v9269 && 4 <= v9270 && 4 <= v9271 && v9255 <= v9268 && v9256 <= v9269 && v9257 <= v9270 && v9258 <= v9271
f_829(v8089, v8090, v8091, v8092, v8093, v8094, 0, 1, v8097, v8098, v8099, v8100, v8101, v8102, v8103, v8104, 3, 2, 4) -> f_834(v8089, v8090, v8091, v8092, v8093, v8094, 0, 1, v8097, v8098, v8099, v8100, v8101, v8102, v8103, v8104, 3, 2, 4) :|: 0 = 0
Combined rules. Obtained 2 rulesP rules:
f_883(v9255:0, v9256:0, v9257:0, v9258:0, v9259:0, v9260:0, 0, 1, v9263:0, v9264:0, v9265:0, v9033:0 + v9264:0, v9266:0, v9268:0, v9269:0, v9270:0, v9271:0, 3, 2, 4) -> f_883(v9255:0, v9256:0, v9257:0, v9258:0, v9259:0, v9260:0, 0, 1, v9263:0, v9264:0, v9265:0, v9033:0, v9033:0 + v9264:0, v9268:0, v9269:0, v9270:0, v9271:0, 3, 2, 4) :|: v9264:0 <= v9033:0 + v9264:0 && v9255:0 > 0 && v9256:0 > 0 && v9257:0 > 0 && v9258:0 > 0 && v9259:0 > 0 && v9260:0 < -1 && v9263:0 > 1 && v9264:0 > 0 && v9265:0 > 1 && v9033:0 + v9264:0 > 0 && v9266:0 > 1 && v9268:0 > 3 && v9269:0 > 3 && v9270:0 > 3 && v9271:0 > 3 && v9033:0 > -1 && v9268:0 >= v9255:0 && v9269:0 >= v9256:0 && v9270:0 >= v9257:0 && v9271:0 >= v9258:0
f_883(v9255:0, v9256:0, v9257:0, v9258:0, v9259:0, v9260:0, 0, 1, v9263:0, v9033:0 + v9267:0, v9265:0, v9267:0, v9266:0, v9268:0, v9269:0, v9270:0, v9271:0, 3, 2, 4) -> f_883(v9255:0, v9256:0, v9257:0, v9258:0, v9259:0, v9260:0, 0, 1, v9263:0, v9267:0, v9033:0 + v9267:0, v9033:0, v9033:0 + v9267:0, v9268:0, v9269:0, v9270:0, v9271:0, 3, 2, 4) :|: v9267:0 < v9033:0 + v9267:0 && v9033:0 + v9267:0 > 1 && v9266:0 > 2 && v9255:0 > 0 && v9256:0 > 0 && v9257:0 > 0 && v9258:0 > 0 && v9259:0 > 0 && v9260:0 < -1 && v9263:0 > 1 && v9267:0 > 0 && v9268:0 > 3 && v9269:0 > 3 && v9270:0 > 3 && v9271:0 > 3 && v9268:0 >= v9255:0 && v9033:0 > -1 && v9269:0 >= v9256:0 && v9270:0 >= v9257:0 && v9271:0 >= v9258:0
Filtered unneeded arguments:
   f_883(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20) -> f_883(x1, x2, x3, x4, x5, x6, x9, x10, x11, x12, x13, x14, x15, x16, x17)
Removed division, modulo operations, cleaned up constraints. Obtained 2 rules.P rules:
f_883(v9255:0, v9256:0, v9257:0, v9258:0, v9259:0, v9260:0, v9263:0, v9264:0, v9265:0, sum~v9033:0~v9264:0, v9266:0, v9268:0, v9269:0, v9270:0, v9271:0) -> f_883(v9255:0, v9256:0, v9257:0, v9258:0, v9259:0, v9260:0, v9263:0, v9264:0, v9265:0, v9033:0, v9033:0 + v9264:0, v9268:0, v9269:0, v9270:0, v9271:0) :|: v9255:0 > 0 && v9264:0 <= v9033:0 + v9264:0 && v9256:0 > 0 && v9257:0 > 0 && v9258:0 > 0 && v9259:0 > 0 && v9260:0 < -1 && v9263:0 > 1 && v9264:0 > 0 && v9265:0 > 1 && v9033:0 + v9264:0 > 0 && v9266:0 > 1 && v9268:0 > 3 && v9269:0 > 3 && v9270:0 > 3 && v9271:0 > 3 && v9033:0 > -1 && v9268:0 >= v9255:0 && v9269:0 >= v9256:0 && v9271:0 >= v9258:0 && v9270:0 >= v9257:0 && sum~v9033:0~v9264:0 = v9033:0 + v9264:0
f_883(v9255:0, v9256:0, v9257:0, v9258:0, v9259:0, v9260:0, v9263:0, sum~v9033:0~v9267:0, v9265:0, v9267:0, v9266:0, v9268:0, v9269:0, v9270:0, v9271:0) -> f_883(v9255:0, v9256:0, v9257:0, v9258:0, v9259:0, v9260:0, v9263:0, v9267:0, v9033:0 + v9267:0, v9033:0, v9033:0 + v9267:0, v9268:0, v9269:0, v9270:0, v9271:0) :|: v9033:0 + v9267:0 > 1 && v9267:0 < v9033:0 + v9267:0 && v9266:0 > 2 && v9255:0 > 0 && v9256:0 > 0 && v9257:0 > 0 && v9258:0 > 0 && v9259:0 > 0 && v9260:0 < -1 && v9263:0 > 1 && v9267:0 > 0 && v9268:0 > 3 && v9269:0 > 3 && v9270:0 > 3 && v9271:0 > 3 && v9268:0 >= v9255:0 && v9033:0 > -1 && v9269:0 >= v9256:0 && v9271:0 >= v9258:0 && v9270:0 >= v9257:0 && sum~v9033:0~v9267:0 = v9033:0 + v9267:0

----------------------------------------

(9)
Obligation:
Rules:
f_883(v9255:0, v9256:0, v9257:0, v9258:0, v9259:0, v9260:0, v9263:0, v9264:0, v9265:0, sum~v9033:0~v9264:0, v9266:0, v9268:0, v9269:0, v9270:0, v9271:0) -> f_883(v9255:0, v9256:0, v9257:0, v9258:0, v9259:0, v9260:0, v9263:0, v9264:0, v9265:0, v9033:0, v9033:0 + v9264:0, v9268:0, v9269:0, v9270:0, v9271:0) :|: v9255:0 > 0 && v9264:0 <= v9033:0 + v9264:0 && v9256:0 > 0 && v9257:0 > 0 && v9258:0 > 0 && v9259:0 > 0 && v9260:0 < -1 && v9263:0 > 1 && v9264:0 > 0 && v9265:0 > 1 && v9033:0 + v9264:0 > 0 && v9266:0 > 1 && v9268:0 > 3 && v9269:0 > 3 && v9270:0 > 3 && v9271:0 > 3 && v9033:0 > -1 && v9268:0 >= v9255:0 && v9269:0 >= v9256:0 && v9271:0 >= v9258:0 && v9270:0 >= v9257:0 && sum~v9033:0~v9264:0 = v9033:0 + v9264:0
f_883(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14) -> f_883(x, x1, x2, x3, x4, x5, x6, x9, x15 + x9, x15, x15 + x9, x11, x12, x13, x14) :|: x15 + x9 > 1 && x9 < x15 + x9 && x10 > 2 && x > 0 && x1 > 0 && x2 > 0 && x3 > 0 && x4 > 0 && x5 < -1 && x6 > 1 && x9 > 0 && x11 > 3 && x12 > 3 && x13 > 3 && x14 > 3 && x11 >= x && x15 > -1 && x12 >= x1 && x14 >= x3 && x13 >= x2 && x7 = x15 + x9

----------------------------------------

(10) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(11)
Obligation:
Rules:
f_883(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0, sum~x15:0~x9:0, x8:0, x9:0, x10:0, x11:0, x12:0, x13:0, x14:0) -> f_883(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0, x9:0, x15:0 + x9:0, x15:0, x15:0 + x9:0, x11:0, x12:0, x13:0, x14:0) :|: x3:0 <= x14:0 && x2:0 <= x13:0 && x1:0 <= x12:0 && x15:0 > -1 && x:0 <= x11:0 && x14:0 > 3 && x13:0 > 3 && x12:0 > 3 && x11:0 > 3 && x9:0 > 0 && x6:0 > 1 && x5:0 < -1 && x4:0 > 0 && x3:0 > 0 && x2:0 > 0 && x1:0 > 0 && x:0 > 0 && x10:0 > 2 && x9:0 < x15:0 + x9:0 && x15:0 + x9:0 > 1 && sum~x15:0~x9:0 = x15:0 + x9:0
f_883(v9255:0:0, v9256:0:0, v9257:0:0, v9258:0:0, v9259:0:0, v9260:0:0, v9263:0:0, v9264:0:0, v9265:0:0, sum~v9033:0:0~v9264:0:0, v9266:0:0, v9268:0:0, v9269:0:0, v9270:0:0, v9271:0:0) -> f_883(v9255:0:0, v9256:0:0, v9257:0:0, v9258:0:0, v9259:0:0, v9260:0:0, v9263:0:0, v9264:0:0, v9265:0:0, v9033:0:0, v9033:0:0 + v9264:0:0, v9268:0:0, v9269:0:0, v9270:0:0, v9271:0:0) :|: v9271:0:0 >= v9258:0:0 && v9270:0:0 >= v9257:0:0 && v9269:0:0 >= v9256:0:0 && v9268:0:0 >= v9255:0:0 && v9033:0:0 > -1 && v9271:0:0 > 3 && v9270:0:0 > 3 && v9269:0:0 > 3 && v9268:0:0 > 3 && v9266:0:0 > 1 && v9033:0:0 + v9264:0:0 > 0 && v9265:0:0 > 1 && v9264:0:0 > 0 && v9263:0:0 > 1 && v9260:0:0 < -1 && v9259:0:0 > 0 && v9258:0:0 > 0 && v9257:0:0 > 0 && v9256:0:0 > 0 && v9264:0:0 <= v9033:0:0 + v9264:0:0 && v9255:0:0 > 0 && sum~v9033:0:0~v9264:0:0 = v9033:0:0 + v9264:0:0

----------------------------------------

(12) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_883 ] = f_883_10 + f_883_8

The following rules are decreasing:
f_883(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0, sum~x15:0~x9:0, x8:0, x9:0, x10:0, x11:0, x12:0, x13:0, x14:0) -> f_883(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0, x9:0, x15:0 + x9:0, x15:0, x15:0 + x9:0, x11:0, x12:0, x13:0, x14:0) :|: x3:0 <= x14:0 && x2:0 <= x13:0 && x1:0 <= x12:0 && x15:0 > -1 && x:0 <= x11:0 && x14:0 > 3 && x13:0 > 3 && x12:0 > 3 && x11:0 > 3 && x9:0 > 0 && x6:0 > 1 && x5:0 < -1 && x4:0 > 0 && x3:0 > 0 && x2:0 > 0 && x1:0 > 0 && x:0 > 0 && x10:0 > 2 && x9:0 < x15:0 + x9:0 && x15:0 + x9:0 > 1 && sum~x15:0~x9:0 = x15:0 + x9:0
f_883(v9255:0:0, v9256:0:0, v9257:0:0, v9258:0:0, v9259:0:0, v9260:0:0, v9263:0:0, v9264:0:0, v9265:0:0, sum~v9033:0:0~v9264:0:0, v9266:0:0, v9268:0:0, v9269:0:0, v9270:0:0, v9271:0:0) -> f_883(v9255:0:0, v9256:0:0, v9257:0:0, v9258:0:0, v9259:0:0, v9260:0:0, v9263:0:0, v9264:0:0, v9265:0:0, v9033:0:0, v9033:0:0 + v9264:0:0, v9268:0:0, v9269:0:0, v9270:0:0, v9271:0:0) :|: v9271:0:0 >= v9258:0:0 && v9270:0:0 >= v9257:0:0 && v9269:0:0 >= v9256:0:0 && v9268:0:0 >= v9255:0:0 && v9033:0:0 > -1 && v9271:0:0 > 3 && v9270:0:0 > 3 && v9269:0:0 > 3 && v9268:0:0 > 3 && v9266:0:0 > 1 && v9033:0:0 + v9264:0:0 > 0 && v9265:0:0 > 1 && v9264:0:0 > 0 && v9263:0:0 > 1 && v9260:0:0 < -1 && v9259:0:0 > 0 && v9258:0:0 > 0 && v9257:0:0 > 0 && v9256:0:0 > 0 && v9264:0:0 <= v9033:0:0 + v9264:0:0 && v9255:0:0 > 0 && sum~v9033:0:0~v9264:0:0 = v9033:0:0 + v9264:0:0

The following rules are bounded:
f_883(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0, sum~x15:0~x9:0, x8:0, x9:0, x10:0, x11:0, x12:0, x13:0, x14:0) -> f_883(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0, x9:0, x15:0 + x9:0, x15:0, x15:0 + x9:0, x11:0, x12:0, x13:0, x14:0) :|: x3:0 <= x14:0 && x2:0 <= x13:0 && x1:0 <= x12:0 && x15:0 > -1 && x:0 <= x11:0 && x14:0 > 3 && x13:0 > 3 && x12:0 > 3 && x11:0 > 3 && x9:0 > 0 && x6:0 > 1 && x5:0 < -1 && x4:0 > 0 && x3:0 > 0 && x2:0 > 0 && x1:0 > 0 && x:0 > 0 && x10:0 > 2 && x9:0 < x15:0 + x9:0 && x15:0 + x9:0 > 1 && sum~x15:0~x9:0 = x15:0 + x9:0
f_883(v9255:0:0, v9256:0:0, v9257:0:0, v9258:0:0, v9259:0:0, v9260:0:0, v9263:0:0, v9264:0:0, v9265:0:0, sum~v9033:0:0~v9264:0:0, v9266:0:0, v9268:0:0, v9269:0:0, v9270:0:0, v9271:0:0) -> f_883(v9255:0:0, v9256:0:0, v9257:0:0, v9258:0:0, v9259:0:0, v9260:0:0, v9263:0:0, v9264:0:0, v9265:0:0, v9033:0:0, v9033:0:0 + v9264:0:0, v9268:0:0, v9269:0:0, v9270:0:0, v9271:0:0) :|: v9271:0:0 >= v9258:0:0 && v9270:0:0 >= v9257:0:0 && v9269:0:0 >= v9256:0:0 && v9268:0:0 >= v9255:0:0 && v9033:0:0 > -1 && v9271:0:0 > 3 && v9270:0:0 > 3 && v9269:0:0 > 3 && v9268:0:0 > 3 && v9266:0:0 > 1 && v9033:0:0 + v9264:0:0 > 0 && v9265:0:0 > 1 && v9264:0:0 > 0 && v9263:0:0 > 1 && v9260:0:0 < -1 && v9259:0:0 > 0 && v9258:0:0 > 0 && v9257:0:0 > 0 && v9256:0:0 > 0 && v9264:0:0 <= v9033:0:0 + v9264:0:0 && v9255:0:0 > 0 && sum~v9033:0:0~v9264:0:0 = v9033:0:0 + v9264:0:0


----------------------------------------

(13)
YES

----------------------------------------

(14)
Obligation:
SCC
----------------------------------------

(15) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 33 rulesP rules:
f_819(v7867, v7868, v7869, v7870, v7871, v7872, 0, v7874, 1, v7876, v7877, v7878, v7879, v7880, v7881, 3, 2, 4) -> f_824(v7867, v7868, v7869, v7870, v7871, v7872, 0, v7874, 1, v7876, v7877, v7878, v7879, v7880, v7881, 3, 2, 4) :|: 0 = 0
f_824(v7867, v7868, v7869, v7870, v7871, v7872, 0, v7874, 1, v7876, v7877, v7878, v7879, v7880, v7881, 3, 2, 4) -> f_830(v7867, v7868, v7869, v7870, v7871, v7872, 0, v7874, 1, v7876, v7877, v7878, v7879, v7880, v7881, 3, 2, 4) :|: 0 = 0
f_830(v7867, v7868, v7869, v7870, v7871, v7872, 0, v7874, 1, v7876, v7877, v7878, v7879, v7880, v7881, 3, 2, 4) -> f_835(v7867, v7868, v7869, v7870, v7871, v7872, 0, v7874, 1, v7876, v7877, v7878, v7879, v7880, v7881, 3, 2, 4) :|: TRUE
f_835(v7867, v7868, v7869, v7870, v7871, v7872, 0, v7874, 1, v7876, v7877, v7878, v7879, v7880, v7881, 3, 2, 4) -> f_836(v7867, v7868, v7869, v7870, v7871, v7872, 0, v7874, 1, v7876, v7876, v7877, v7876, v7874, v7878, v7879, v7880, v7881, 3, 2, 4) :|: v7874 <= v7876 && v7874 <= v7876 && v7874 <= v7874 && 1 <= v7867 && 1 <= v7868 && 1 <= v7869 && 1 <= v7870 && 1 <= v7871 && 2 <= v7872 && 1 <= v7874 && 2 <= v7876 && 1 <= v7876 && 2 <= v7877 && 1 <= v7876 && 1 <= v7874 && 4 <= v7878 && 4 <= v7879 && 4 <= v7880 && 4 <= v7881 && v7867 <= v7878 && v7868 <= v7879 && v7869 <= v7880 && v7870 <= v7881
f_836(v8463, v8464, v8465, v8466, v8467, v8468, 0, v8470, 1, v8472, v8473, v8474, v8475, v8476, v8477, v8478, v8479, v8480, 3, 2, 4) -> f_840(v8463, v8464, v8465, v8466, v8467, v8468, 0, v8470, 1, v8472, v8473, v8475, v8476, v8477, v8478, v8479, v8480, 3, 2, 4) :|: 0 = 0
f_840(v8463, v8464, v8465, v8466, v8467, v8468, 0, v8470, 1, v8472, v8473, v8475, v8476, v8477, v8478, v8479, v8480, 3, 2, 4) -> f_844(v8463, v8464, v8465, v8466, v8467, v8468, 0, v8470, 1, v8472, v8473, v8476, v8477, v8478, v8479, v8480, 3, 2, 4) :|: 0 = 0
f_844(v8463, v8464, v8465, v8466, v8467, v8468, 0, v8470, 1, v8472, v8473, v8476, v8477, v8478, v8479, v8480, 3, 2, 4) -> f_849(v8463, v8464, v8465, v8466, v8467, v8468, 0, v8470, 1, v8472, v8473, v8757, v8477, v8478, v8479, v8480, 3, 2, 4) :|: v8757 + v8470 = v8473 && 0 <= v8757
f_849(v8463, v8464, v8465, v8466, v8467, v8468, 0, v8470, 1, v8472, v8473, v8757, v8477, v8478, v8479, v8480, 3, 2, 4) -> f_854(v8463, v8464, v8465, v8466, v8467, v8468, 0, v8470, 1, v8472, v8473, v8757, v8477, v8478, v8479, v8480, 3, 2, 4) :|: TRUE
f_854(v8463, v8464, v8465, v8466, v8467, v8468, 0, v8470, 1, v8472, v8473, v8757, v8477, v8478, v8479, v8480, 3, 2, 4) -> f_858(v8463, v8464, v8465, v8466, v8467, v8468, 0, v8470, 1, v8472, v8473, v8757, v8477, v8478, v8479, v8480, 3, 2, 4) :|: TRUE
f_858(v8463, v8464, v8465, v8466, v8467, v8468, 0, v8470, 1, v8472, v8473, v8757, v8477, v8478, v8479, v8480, 3, 2, 4) -> f_859(v8463, v8464, v8465, v8466, v8467, v8468, 0, v8470, 1, v8472, v8473, v8757, v8477, v8478, v8479, v8480, 3, 2, 4) :|: 1 <= v8463 && 1 <= v8464 && 1 <= v8465 && 1 <= v8466 && 1 <= v8467 && 2 <= v8468 && 1 <= v8470 && 2 <= v8472 && 1 <= v8473 && 0 <= v8757 && 4 <= v8477 && 4 <= v8478 && 4 <= v8479 && 4 <= v8480 && v8463 <= v8477 && v8464 <= v8478 && v8465 <= v8479 && v8466 <= v8480
f_859(v8970, v8971, v8972, v8973, v8974, v8975, 0, v8977, 1, v8979, v8980, v8981, v8982, v8983, v8984, v8985, 3, 2, 4) -> f_863(v8970, v8971, v8972, v8973, v8974, v8975, 0, v8977, 1, v8979, v8981, v8980, v8982, v8983, v8984, v8985, 3, 2, 4) :|: 0 = 0
f_863(v8970, v8971, v8972, v8973, v8974, v8975, 0, v8977, 1, v8979, v8981, v8980, v8982, v8983, v8984, v8985, 3, 2, 4) -> f_868(v8970, v8971, v8972, v8973, v8974, v8975, 0, v8977, 1, v8979, v8981, v8980, v8982, v8983, v8984, v8985, 3, 2, 4) :|: 0 = 0
f_868(v8970, v8971, v8972, v8973, v8974, v8975, 0, v8977, 1, v8979, v8981, v8980, v8982, v8983, v8984, v8985, 3, 2, 4) -> f_873(v8970, v8971, v8972, v8973, v8974, v8975, 0, v8977, 1, v8979, v8981, v8980, v8982, v8983, v8984, v8985, 3, 2, 4) :|: v8977 <= v8981 && 1 <= v8981 && 2 <= v8980
f_868(v8970, v8971, v8972, v8973, v8974, v8975, 0, v8977, 1, v8979, v8981, v8980, v8982, v8983, v8984, v8985, 3, 2, 4) -> f_874(v8970, v8971, v8972, v8973, v8974, v8975, 0, v8977, 1, v8979, v8981, v8980, v8982, v8983, v8984, v8985, 3, 2, 4) :|: v8981 < v8977
f_873(v8970, v8971, v8972, v8973, v8974, v8975, 0, v8977, 1, v8979, v8981, v8980, v8982, v8983, v8984, v8985, 3, 2, 4) -> f_879(v8970, v8971, v8972, v8973, v8974, v8975, 0, v8977, 1, v8979, v8981, v8980, v8982, v8983, v8984, v8985, 3, 2, 4) :|: 0 = 0
f_879(v8970, v8971, v8972, v8973, v8974, v8975, 0, v8977, 1, v8979, v8981, v8980, v8982, v8983, v8984, v8985, 3, 2, 4) -> f_884(v8970, v8971, v8972, v8973, v8974, v8975, 0, v8977, 1, v8979, v8981, v8980, v8982, v8983, v8984, v8985, 3, 2, 4) :|: TRUE
f_884(v8970, v8971, v8972, v8973, v8974, v8975, 0, v8977, 1, v8979, v8981, v8980, v8982, v8983, v8984, v8985, 3, 2, 4) -> f_836(v8970, v8971, v8972, v8973, v8974, v8975, 0, v8977, 1, v8979, v8981, v8980, v8977, v8981, v8982, v8983, v8984, v8985, 3, 2, 4) :|: v8977 <= v8981 && v8977 <= v8977 && v8977 <= v8981 && 1 <= v8970 && 1 <= v8971 && 1 <= v8972 && 1 <= v8973 && 1 <= v8974 && 2 <= v8975 && 1 <= v8977 && 2 <= v8979 && 1 <= v8981 && 2 <= v8980 && 1 <= v8977 && 1 <= v8981 && 4 <= v8982 && 4 <= v8983 && 4 <= v8984 && 4 <= v8985 && v8970 <= v8982 && v8971 <= v8983 && v8972 <= v8984 && v8973 <= v8985
f_874(v8970, v8971, v8972, v8973, v8974, v8975, 0, v8977, 1, v8979, v8981, v8980, v8982, v8983, v8984, v8985, 3, 2, 4) -> f_880(v8970, v8971, v8972, v8973, v8974, v8975, 0, v8977, 1, v8979, v8981, v8980, v8982, v8983, v8984, v8985, 3, 2, 4) :|: 0 = 0
f_880(v8970, v8971, v8972, v8973, v8974, v8975, 0, v8977, 1, v8979, v8981, v8980, v8982, v8983, v8984, v8985, 3, 2, 4) -> f_885(v8970, v8971, v8972, v8973, v8974, v8975, 0, v8977, 1, v8979, v8981, v8980, v8982, v8983, v8984, v8985, 3, 2, 4) :|: TRUE
f_885(v8970, v8971, v8972, v8973, v8974, v8975, 0, v8977, 1, v8979, v8981, v8980, v8982, v8983, v8984, v8985, 3, 2, 4) -> f_890(v8970, v8971, v8972, v8973, v8974, v8975, 0, v8977, 1, v8979, v8981, v8980, v8982, v8983, v8984, v8985, 3, 2, 4) :|: 0 = 0
f_890(v8970, v8971, v8972, v8973, v8974, v8975, 0, v8977, 1, v8979, v8981, v8980, v8982, v8983, v8984, v8985, 3, 2, 4) -> f_897(v8970, v8971, v8972, v8973, v8974, v8975, 0, v8977, 1, v8979, v8981, v8980, v8982, v8983, v8984, v8985, 3, 2, 4) :|: TRUE
f_897(v8970, v8971, v8972, v8973, v8974, v8975, 0, v8977, 1, v8979, v8981, v8980, v8982, v8983, v8984, v8985, 3, 2, 4) -> f_903(v8970, v8971, v8972, v8973, v8974, v8975, 0, v8977, 1, v8979, v8981, v8980, v8982, v8983, v8984, v8985, 3, 2, 4) :|: 0 = 0
f_903(v8970, v8971, v8972, v8973, v8974, v8975, 0, v8977, 1, v8979, v8981, v8980, v8982, v8983, v8984, v8985, 3, 2, 4) -> f_908(v8970, v8971, v8972, v8973, v8974, v8975, 0, v8977, 1, v8979, v8981, v8980, v8982, v8983, v8984, v8985, 3, 2, 4) :|: TRUE
f_908(v8970, v8971, v8972, v8973, v8974, v8975, 0, v8977, 1, v8979, v8981, v8980, v8982, v8983, v8984, v8985, 3, 2, 4) -> f_913(v8970, v8971, v8972, v8973, v8974, v8975, 0, v8977, 1, v8979, v8981, v8980, v8982, v8983, v8984, v8985, 3, 2, 4) :|: TRUE
f_913(v8970, v8971, v8972, v8973, v8974, v8975, 0, v8977, 1, v8979, v8981, v8980, v8982, v8983, v8984, v8985, 3, 2, 4) -> f_918(v8970, v8971, v8972, v8973, v8974, v8975, 0, v8981, 1, v8979, v8977, v8980, v8982, v8983, v8984, v8985, 3, 2, 4) :|: 0 = 0
f_918(v8970, v8971, v8972, v8973, v8974, v8975, 0, v8981, 1, v8979, v8977, v8980, v8982, v8983, v8984, v8985, 3, 2, 4) -> f_923(v8970, v8971, v8972, v8973, v8974, v8975, 0, v8981, 1, v8979, v8977, v8980, v8982, v8983, v8984, v8985, 3, 2, 4) :|: 0 < v8981 && 3 <= v8980 && 2 <= v8977
f_923(v8970, v8971, v8972, v8973, v8974, v8975, 0, v8981, 1, v8979, v8977, v8980, v8982, v8983, v8984, v8985, 3, 2, 4) -> f_928(v8970, v8971, v8972, v8973, v8974, v8975, 0, v8981, 1, v8979, v8977, v8980, v8982, v8983, v8984, v8985, 3, 2, 4) :|: 0 = 0
f_928(v8970, v8971, v8972, v8973, v8974, v8975, 0, v8981, 1, v8979, v8977, v8980, v8982, v8983, v8984, v8985, 3, 2, 4) -> f_933(v8970, v8971, v8972, v8973, v8974, v8975, 0, v8981, 1, v8979, v8977, v8980, v8982, v8983, v8984, v8985, 3, 2, 4) :|: TRUE
f_933(v8970, v8971, v8972, v8973, v8974, v8975, 0, v8981, 1, v8979, v8977, v8980, v8982, v8983, v8984, v8985, 3, 2, 4) -> f_938(v8970, v8971, v8972, v8973, v8974, v8975, 0, v8981, 1, v8977, v8980, v8982, v8983, v8984, v8985, 3, 2, 4) :|: 0 = 0
f_938(v8970, v8971, v8972, v8973, v8974, v8975, 0, v8981, 1, v8977, v8980, v8982, v8983, v8984, v8985, 3, 2, 4) -> f_942(v8970, v8971, v8972, v8973, v8974, v8975, 0, v8981, 1, v8977, v8980, v8982, v8983, v8984, v8985, 3, 2, 4) :|: TRUE
f_942(v8970, v8971, v8972, v8973, v8974, v8975, 0, v8981, 1, v8977, v8980, v8982, v8983, v8984, v8985, 3, 2, 4) -> f_946(v8970, v8971, v8972, v8973, v8974, v8975, 0, v8981, 1, v8977, v8980, v8982, v8983, v8984, v8985, 3, 2, 4) :|: TRUE
f_946(v8970, v8971, v8972, v8973, v8974, v8975, 0, v8981, 1, v8977, v8980, v8982, v8983, v8984, v8985, 3, 2, 4) -> f_814(v8970, v8971, v8972, v8973, v8974, v8975, 0, v8981, 1, v8977, v8980, v8982, v8983, v8984, v8985, 3, 2, 4) :|: v8981 < v8977 && 1 <= v8970 && 1 <= v8971 && 1 <= v8972 && 1 <= v8973 && 1 <= v8974 && 2 <= v8975 && 1 <= v8981 && 2 <= v8977 && 3 <= v8980 && 4 <= v8982 && 4 <= v8983 && 4 <= v8984 && 4 <= v8985 && v8970 <= v8982 && v8971 <= v8983 && v8972 <= v8984 && v8973 <= v8985
f_814(v7867, v7868, v7869, v7870, v7871, v7872, 0, v7874, 1, v7876, v7877, v7878, v7879, v7880, v7881, 3, 2, 4) -> f_819(v7867, v7868, v7869, v7870, v7871, v7872, 0, v7874, 1, v7876, v7877, v7878, v7879, v7880, v7881, 3, 2, 4) :|: 0 = 0
Combined rules. Obtained 2 rulesP rules:
f_868(v8970:0, v8971:0, v8972:0, v8973:0, v8974:0, v8975:0, 0, v8977:0, 1, v8979:0, v8757:0 + v8977:0, v8980:0, v8982:0, v8983:0, v8984:0, v8985:0, 3, 2, 4) -> f_868(v8970:0, v8971:0, v8972:0, v8973:0, v8974:0, v8975:0, 0, v8977:0, 1, v8979:0, v8757:0, v8757:0 + v8977:0, v8982:0, v8983:0, v8984:0, v8985:0, 3, 2, 4) :|: v8977:0 <= v8757:0 + v8977:0 && v8970:0 > 0 && v8971:0 > 0 && v8972:0 > 0 && v8973:0 > 0 && v8974:0 > 0 && v8975:0 > 1 && v8977:0 > 0 && v8979:0 > 1 && v8757:0 + v8977:0 > 0 && v8980:0 > 1 && v8982:0 > 3 && v8983:0 > 3 && v8984:0 > 3 && v8985:0 > 3 && v8757:0 > -1 && v8982:0 >= v8970:0 && v8983:0 >= v8971:0 && v8984:0 >= v8972:0 && v8985:0 >= v8973:0
f_868(v8970:0, v8971:0, v8972:0, v8973:0, v8974:0, v8975:0, 0, v8757:0 + v8981:0, 1, v8979:0, v8981:0, v8980:0, v8982:0, v8983:0, v8984:0, v8985:0, 3, 2, 4) -> f_868(v8970:0, v8971:0, v8972:0, v8973:0, v8974:0, v8975:0, 0, v8981:0, 1, v8757:0 + v8981:0, v8757:0, v8757:0 + v8981:0, v8982:0, v8983:0, v8984:0, v8985:0, 3, 2, 4) :|: v8981:0 < v8757:0 + v8981:0 && v8757:0 + v8981:0 > 1 && v8980:0 > 2 && v8970:0 > 0 && v8971:0 > 0 && v8972:0 > 0 && v8973:0 > 0 && v8974:0 > 0 && v8975:0 > 1 && v8981:0 > 0 && v8982:0 > 3 && v8983:0 > 3 && v8984:0 > 3 && v8985:0 > 3 && v8982:0 >= v8970:0 && v8757:0 > -1 && v8983:0 >= v8971:0 && v8984:0 >= v8972:0 && v8985:0 >= v8973:0
Filtered unneeded arguments:
   f_868(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19) -> f_868(x1, x2, x3, x4, x5, x6, x8, x10, x11, x12, x13, x14, x15, x16)
Removed division, modulo operations, cleaned up constraints. Obtained 2 rules.P rules:
f_868(v8970:0, v8971:0, v8972:0, v8973:0, v8974:0, v8975:0, v8977:0, v8979:0, sum~v8757:0~v8977:0, v8980:0, v8982:0, v8983:0, v8984:0, v8985:0) -> f_868(v8970:0, v8971:0, v8972:0, v8973:0, v8974:0, v8975:0, v8977:0, v8979:0, v8757:0, v8757:0 + v8977:0, v8982:0, v8983:0, v8984:0, v8985:0) :|: v8970:0 > 0 && v8977:0 <= v8757:0 + v8977:0 && v8971:0 > 0 && v8972:0 > 0 && v8973:0 > 0 && v8974:0 > 0 && v8975:0 > 1 && v8977:0 > 0 && v8979:0 > 1 && v8757:0 + v8977:0 > 0 && v8980:0 > 1 && v8982:0 > 3 && v8983:0 > 3 && v8984:0 > 3 && v8985:0 > 3 && v8757:0 > -1 && v8982:0 >= v8970:0 && v8983:0 >= v8971:0 && v8985:0 >= v8973:0 && v8984:0 >= v8972:0 && sum~v8757:0~v8977:0 = v8757:0 + v8977:0
f_868(v8970:0, v8971:0, v8972:0, v8973:0, v8974:0, v8975:0, sum~v8757:0~v8981:0, v8979:0, v8981:0, v8980:0, v8982:0, v8983:0, v8984:0, v8985:0) -> f_868(v8970:0, v8971:0, v8972:0, v8973:0, v8974:0, v8975:0, v8981:0, v8757:0 + v8981:0, v8757:0, v8757:0 + v8981:0, v8982:0, v8983:0, v8984:0, v8985:0) :|: v8757:0 + v8981:0 > 1 && v8981:0 < v8757:0 + v8981:0 && v8980:0 > 2 && v8970:0 > 0 && v8971:0 > 0 && v8972:0 > 0 && v8973:0 > 0 && v8974:0 > 0 && v8975:0 > 1 && v8981:0 > 0 && v8982:0 > 3 && v8983:0 > 3 && v8984:0 > 3 && v8985:0 > 3 && v8982:0 >= v8970:0 && v8757:0 > -1 && v8983:0 >= v8971:0 && v8985:0 >= v8973:0 && v8984:0 >= v8972:0 && sum~v8757:0~v8981:0 = v8757:0 + v8981:0

----------------------------------------

(16)
Obligation:
Rules:
f_868(v8970:0, v8971:0, v8972:0, v8973:0, v8974:0, v8975:0, v8977:0, v8979:0, sum~v8757:0~v8977:0, v8980:0, v8982:0, v8983:0, v8984:0, v8985:0) -> f_868(v8970:0, v8971:0, v8972:0, v8973:0, v8974:0, v8975:0, v8977:0, v8979:0, v8757:0, v8757:0 + v8977:0, v8982:0, v8983:0, v8984:0, v8985:0) :|: v8970:0 > 0 && v8977:0 <= v8757:0 + v8977:0 && v8971:0 > 0 && v8972:0 > 0 && v8973:0 > 0 && v8974:0 > 0 && v8975:0 > 1 && v8977:0 > 0 && v8979:0 > 1 && v8757:0 + v8977:0 > 0 && v8980:0 > 1 && v8982:0 > 3 && v8983:0 > 3 && v8984:0 > 3 && v8985:0 > 3 && v8757:0 > -1 && v8982:0 >= v8970:0 && v8983:0 >= v8971:0 && v8985:0 >= v8973:0 && v8984:0 >= v8972:0 && sum~v8757:0~v8977:0 = v8757:0 + v8977:0
f_868(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13) -> f_868(x, x1, x2, x3, x4, x5, x8, x14 + x8, x14, x14 + x8, x10, x11, x12, x13) :|: x14 + x8 > 1 && x8 < x14 + x8 && x9 > 2 && x > 0 && x1 > 0 && x2 > 0 && x3 > 0 && x4 > 0 && x5 > 1 && x8 > 0 && x10 > 3 && x11 > 3 && x12 > 3 && x13 > 3 && x10 >= x && x14 > -1 && x11 >= x1 && x13 >= x3 && x12 >= x2 && x6 = x14 + x8

----------------------------------------

(17) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(18)
Obligation:
Rules:
f_868(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, sum~x14:0~x8:0, x7:0, x8:0, x9:0, x10:0, x11:0, x12:0, x13:0) -> f_868(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x8:0, x14:0 + x8:0, x14:0, x14:0 + x8:0, x10:0, x11:0, x12:0, x13:0) :|: x3:0 <= x13:0 && x2:0 <= x12:0 && x1:0 <= x11:0 && x14:0 > -1 && x:0 <= x10:0 && x13:0 > 3 && x12:0 > 3 && x11:0 > 3 && x10:0 > 3 && x8:0 > 0 && x5:0 > 1 && x4:0 > 0 && x3:0 > 0 && x2:0 > 0 && x1:0 > 0 && x:0 > 0 && x9:0 > 2 && x8:0 < x14:0 + x8:0 && x14:0 + x8:0 > 1 && sum~x14:0~x8:0 = x14:0 + x8:0
f_868(v8970:0:0, v8971:0:0, v8972:0:0, v8973:0:0, v8974:0:0, v8975:0:0, v8977:0:0, v8979:0:0, sum~v8757:0:0~v8977:0:0, v8980:0:0, v8982:0:0, v8983:0:0, v8984:0:0, v8985:0:0) -> f_868(v8970:0:0, v8971:0:0, v8972:0:0, v8973:0:0, v8974:0:0, v8975:0:0, v8977:0:0, v8979:0:0, v8757:0:0, v8757:0:0 + v8977:0:0, v8982:0:0, v8983:0:0, v8984:0:0, v8985:0:0) :|: v8985:0:0 >= v8973:0:0 && v8984:0:0 >= v8972:0:0 && v8983:0:0 >= v8971:0:0 && v8982:0:0 >= v8970:0:0 && v8757:0:0 > -1 && v8985:0:0 > 3 && v8984:0:0 > 3 && v8983:0:0 > 3 && v8982:0:0 > 3 && v8980:0:0 > 1 && v8757:0:0 + v8977:0:0 > 0 && v8979:0:0 > 1 && v8977:0:0 > 0 && v8975:0:0 > 1 && v8974:0:0 > 0 && v8973:0:0 > 0 && v8972:0:0 > 0 && v8971:0:0 > 0 && v8977:0:0 <= v8757:0:0 + v8977:0:0 && v8970:0:0 > 0 && sum~v8757:0:0~v8977:0:0 = v8757:0:0 + v8977:0:0

----------------------------------------

(19) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_868 ] = f_868_9 + f_868_7

The following rules are decreasing:
f_868(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, sum~x14:0~x8:0, x7:0, x8:0, x9:0, x10:0, x11:0, x12:0, x13:0) -> f_868(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x8:0, x14:0 + x8:0, x14:0, x14:0 + x8:0, x10:0, x11:0, x12:0, x13:0) :|: x3:0 <= x13:0 && x2:0 <= x12:0 && x1:0 <= x11:0 && x14:0 > -1 && x:0 <= x10:0 && x13:0 > 3 && x12:0 > 3 && x11:0 > 3 && x10:0 > 3 && x8:0 > 0 && x5:0 > 1 && x4:0 > 0 && x3:0 > 0 && x2:0 > 0 && x1:0 > 0 && x:0 > 0 && x9:0 > 2 && x8:0 < x14:0 + x8:0 && x14:0 + x8:0 > 1 && sum~x14:0~x8:0 = x14:0 + x8:0
f_868(v8970:0:0, v8971:0:0, v8972:0:0, v8973:0:0, v8974:0:0, v8975:0:0, v8977:0:0, v8979:0:0, sum~v8757:0:0~v8977:0:0, v8980:0:0, v8982:0:0, v8983:0:0, v8984:0:0, v8985:0:0) -> f_868(v8970:0:0, v8971:0:0, v8972:0:0, v8973:0:0, v8974:0:0, v8975:0:0, v8977:0:0, v8979:0:0, v8757:0:0, v8757:0:0 + v8977:0:0, v8982:0:0, v8983:0:0, v8984:0:0, v8985:0:0) :|: v8985:0:0 >= v8973:0:0 && v8984:0:0 >= v8972:0:0 && v8983:0:0 >= v8971:0:0 && v8982:0:0 >= v8970:0:0 && v8757:0:0 > -1 && v8985:0:0 > 3 && v8984:0:0 > 3 && v8983:0:0 > 3 && v8982:0:0 > 3 && v8980:0:0 > 1 && v8757:0:0 + v8977:0:0 > 0 && v8979:0:0 > 1 && v8977:0:0 > 0 && v8975:0:0 > 1 && v8974:0:0 > 0 && v8973:0:0 > 0 && v8972:0:0 > 0 && v8971:0:0 > 0 && v8977:0:0 <= v8757:0:0 + v8977:0:0 && v8970:0:0 > 0 && sum~v8757:0:0~v8977:0:0 = v8757:0:0 + v8977:0:0

The following rules are bounded:
f_868(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, sum~x14:0~x8:0, x7:0, x8:0, x9:0, x10:0, x11:0, x12:0, x13:0) -> f_868(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x8:0, x14:0 + x8:0, x14:0, x14:0 + x8:0, x10:0, x11:0, x12:0, x13:0) :|: x3:0 <= x13:0 && x2:0 <= x12:0 && x1:0 <= x11:0 && x14:0 > -1 && x:0 <= x10:0 && x13:0 > 3 && x12:0 > 3 && x11:0 > 3 && x10:0 > 3 && x8:0 > 0 && x5:0 > 1 && x4:0 > 0 && x3:0 > 0 && x2:0 > 0 && x1:0 > 0 && x:0 > 0 && x9:0 > 2 && x8:0 < x14:0 + x8:0 && x14:0 + x8:0 > 1 && sum~x14:0~x8:0 = x14:0 + x8:0
f_868(v8970:0:0, v8971:0:0, v8972:0:0, v8973:0:0, v8974:0:0, v8975:0:0, v8977:0:0, v8979:0:0, sum~v8757:0:0~v8977:0:0, v8980:0:0, v8982:0:0, v8983:0:0, v8984:0:0, v8985:0:0) -> f_868(v8970:0:0, v8971:0:0, v8972:0:0, v8973:0:0, v8974:0:0, v8975:0:0, v8977:0:0, v8979:0:0, v8757:0:0, v8757:0:0 + v8977:0:0, v8982:0:0, v8983:0:0, v8984:0:0, v8985:0:0) :|: v8985:0:0 >= v8973:0:0 && v8984:0:0 >= v8972:0:0 && v8983:0:0 >= v8971:0:0 && v8982:0:0 >= v8970:0:0 && v8757:0:0 > -1 && v8985:0:0 > 3 && v8984:0:0 > 3 && v8983:0:0 > 3 && v8982:0:0 > 3 && v8980:0:0 > 1 && v8757:0:0 + v8977:0:0 > 0 && v8979:0:0 > 1 && v8977:0:0 > 0 && v8975:0:0 > 1 && v8974:0:0 > 0 && v8973:0:0 > 0 && v8972:0:0 > 0 && v8971:0:0 > 0 && v8977:0:0 <= v8757:0:0 + v8977:0:0 && v8970:0:0 > 0 && sum~v8757:0:0~v8977:0:0 = v8757:0:0 + v8977:0:0


----------------------------------------

(20)
YES

----------------------------------------

(21)
Obligation:
SCC
----------------------------------------

(22) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 33 rulesP rules:
f_815(v7656, v7657, v7658, v7659, v7660, v7661, 1, v7663, v7664, v7667, v7666, v7665, 0, v7669, v7670, v7671, v7672, v7673, 3, 4) -> f_820(v7656, v7657, v7658, v7659, v7660, v7661, 1, v7663, v7664, v7667, v7666, v7665, 0, v7669, v7670, v7671, v7672, v7673, 3, 2, 4) :|: 0 < v7667 && 3 <= v7669 && 2 <= v7665
f_820(v7656, v7657, v7658, v7659, v7660, v7661, 1, v7663, v7664, v7667, v7666, v7665, 0, v7669, v7670, v7671, v7672, v7673, 3, 2, 4) -> f_825(v7656, v7657, v7658, v7659, v7660, v7661, 1, v7663, v7664, v7667, v7666, v7665, 0, v7669, v7670, v7671, v7672, v7673, 3, 2, 4) :|: 0 = 0
f_825(v7656, v7657, v7658, v7659, v7660, v7661, 1, v7663, v7664, v7667, v7666, v7665, 0, v7669, v7670, v7671, v7672, v7673, 3, 2, 4) -> f_831(v7656, v7657, v7658, v7659, v7660, v7661, 1, v7663, v7664, v7667, v7666, v7665, 0, v7669, v7670, v7671, v7672, v7673, 3, 2, 4) :|: TRUE
f_831(v7656, v7657, v7658, v7659, v7660, v7661, 1, v7663, v7664, v7667, v7666, v7665, 0, v7669, v7670, v7671, v7672, v7673, 3, 2, 4) -> f_837(v7656, v7657, v7658, v7659, v7660, v7661, 1, v7663, v7664, v7667, v7665, 0, v7669, v7670, v7671, v7672, v7673, 3, 2, 4) :|: 0 = 0
f_837(v7656, v7657, v7658, v7659, v7660, v7661, 1, v7663, v7664, v7667, v7665, 0, v7669, v7670, v7671, v7672, v7673, 3, 2, 4) -> f_841(v7656, v7657, v7658, v7659, v7660, v7661, 1, v7663, v7664, v7667, v7665, 0, v7669, v7670, v7671, v7672, v7673, 3, 2, 4) :|: TRUE
f_841(v7656, v7657, v7658, v7659, v7660, v7661, 1, v7663, v7664, v7667, v7665, 0, v7669, v7670, v7671, v7672, v7673, 3, 2, 4) -> f_845(v7656, v7657, v7658, v7659, v7660, v7661, 1, v7663, v7664, v7667, v7665, 0, v7669, v7670, v7671, v7672, v7673, 3, 2, 4) :|: TRUE
f_845(v7656, v7657, v7658, v7659, v7660, v7661, 1, v7663, v7664, v7667, v7665, 0, v7669, v7670, v7671, v7672, v7673, 3, 2, 4) -> f_850(v7656, v7657, v7658, v7659, v7660, v7661, 1, v7663, v7664, v7667, v7665, 0, v7669, v7670, v7671, v7672, v7673, 3, 2, 4) :|: 0 = 0
f_850(v7656, v7657, v7658, v7659, v7660, v7661, 1, v7663, v7664, v7667, v7665, 0, v7669, v7670, v7671, v7672, v7673, 3, 2, 4) -> f_855(v7656, v7657, v7658, v7659, v7660, v7661, 1, v7663, v7664, v7667, v7665, 0, v7669, v7670, v7671, v7672, v7673, 3, 2, 4) :|: 0 = 0
f_855(v7656, v7657, v7658, v7659, v7660, v7661, 1, v7663, v7664, v7667, v7665, 0, v7669, v7670, v7671, v7672, v7673, 3, 2, 4) -> f_860(v7656, v7657, v7658, v7659, v7660, v7661, 1, v7663, v7664, v7667, v7665, v7669, v7670, v7671, v7672, v7673, 0, 3, 2, 4) :|: 0 = 0
f_860(v7656, v7657, v7658, v7659, v7660, v7661, 1, v7663, v7664, v7667, v7665, v7669, v7670, v7671, v7672, v7673, 0, 3, 2, 4) -> f_864(v7656, v7657, v7658, v7659, v7660, v7661, 1, v7663, v7664, v7667, v7665, v7669, v7670, v7671, v7672, v7673, 0, 3, 2, 4) :|: TRUE
f_864(v7656, v7657, v7658, v7659, v7660, v7661, 1, v7663, v7664, v7667, v7665, v7669, v7670, v7671, v7672, v7673, 0, 3, 2, 4) -> f_865(v7656, v7657, v7658, v7659, v7660, v7661, 1, v7663, v7664, v7667, v7665, v7665, v7669, v7665, v7667, v7670, v7671, v7672, v7673, 0, 3, 2, 4) :|: v7667 <= v7665 && v7667 <= v7667 && v7667 <= v7665 && 1 <= v7656 && 1 <= v7657 && 1 <= v7658 && 1 <= v7659 && 1 + v7660 <= 0 && 1 + v7661 <= 0 && 1 <= v7663 && 1 <= v7664 && 1 <= v7667 && 2 <= v7665 && 1 <= v7665 && 2 <= v7669 && 1 <= v7665 && 1 <= v7667 && 4 <= v7670 && 4 <= v7671 && 4 <= v7672 && 4 <= v7673 && v7656 <= v7670 && v7657 <= v7671 && v7658 <= v7672 && v7659 <= v7673
f_865(v9125, v9126, v9127, v9128, v9129, v9130, 1, v9132, v9133, v9134, v9135, v9136, v9137, v9138, v9139, v9140, v9141, v9142, v9143, 0, 3, 2, 4) -> f_869(v9125, v9126, v9127, v9128, v9129, v9130, 1, v9132, v9133, v9134, v9135, v9136, v9138, v9139, v9140, v9141, v9142, v9143, 0, 3, 2, 4) :|: 0 = 0
f_869(v9125, v9126, v9127, v9128, v9129, v9130, 1, v9132, v9133, v9134, v9135, v9136, v9138, v9139, v9140, v9141, v9142, v9143, 0, 3, 2, 4) -> f_875(v9125, v9126, v9127, v9128, v9129, v9130, 1, v9132, v9133, v9134, v9135, v9136, v9139, v9140, v9141, v9142, v9143, 0, 3, 2, 4) :|: 0 = 0
f_875(v9125, v9126, v9127, v9128, v9129, v9130, 1, v9132, v9133, v9134, v9135, v9136, v9139, v9140, v9141, v9142, v9143, 0, 3, 2, 4) -> f_881(v9125, v9126, v9127, v9128, v9129, v9130, 1, v9132, v9133, v9134, v9135, v9136, v9482, v9140, v9141, v9142, v9143, 0, 3, 2, 4) :|: v9482 + v9134 = v9136 && 0 <= v9482
f_881(v9125, v9126, v9127, v9128, v9129, v9130, 1, v9132, v9133, v9134, v9135, v9136, v9482, v9140, v9141, v9142, v9143, 0, 3, 2, 4) -> f_886(v9125, v9126, v9127, v9128, v9129, v9130, 1, v9132, v9133, v9134, v9135, v9136, v9482, v9140, v9141, v9142, v9143, 0, 3, 2, 4) :|: TRUE
f_886(v9125, v9126, v9127, v9128, v9129, v9130, 1, v9132, v9133, v9134, v9135, v9136, v9482, v9140, v9141, v9142, v9143, 0, 3, 2, 4) -> f_891(v9125, v9126, v9127, v9128, v9129, v9130, 1, v9132, v9133, v9134, v9135, v9136, v9482, v9140, v9141, v9142, v9143, 0, 3, 2, 4) :|: TRUE
f_891(v9125, v9126, v9127, v9128, v9129, v9130, 1, v9132, v9133, v9134, v9135, v9136, v9482, v9140, v9141, v9142, v9143, 0, 3, 2, 4) -> f_892(v9125, v9126, v9127, v9128, v9129, v9130, 1, v9132, v9133, v9134, v9135, v9136, v9482, v9140, v9141, v9142, v9143, 0, 3, 2, 4) :|: 1 <= v9125 && 1 <= v9126 && 1 <= v9127 && 1 <= v9128 && 1 + v9129 <= 0 && 1 + v9130 <= 0 && 1 <= v9132 && 1 <= v9133 && 1 <= v9134 && 2 <= v9135 && 1 <= v9136 && 0 <= v9482 && 4 <= v9140 && 4 <= v9141 && 4 <= v9142 && 4 <= v9143 && v9125 <= v9140 && v9126 <= v9141 && v9127 <= v9142 && v9128 <= v9143
f_892(v9724, v9725, v9726, v9727, v9728, v9729, 1, v9731, v9732, v9733, v9734, v9735, v9736, v9737, v9738, v9739, v9740, 0, 3, 2, 4) -> f_898(v9724, v9725, v9726, v9727, v9728, v9729, 1, v9731, v9732, v9733, v9734, v9736, v9735, v9737, v9738, v9739, v9740, 0, 3, 2, 4) :|: 0 = 0
f_898(v9724, v9725, v9726, v9727, v9728, v9729, 1, v9731, v9732, v9733, v9734, v9736, v9735, v9737, v9738, v9739, v9740, 0, 3, 2, 4) -> f_904(v9724, v9725, v9726, v9727, v9728, v9729, 1, v9731, v9732, v9733, v9734, v9736, v9735, v9737, v9738, v9739, v9740, 0, 3, 2, 4) :|: 0 = 0
f_904(v9724, v9725, v9726, v9727, v9728, v9729, 1, v9731, v9732, v9733, v9734, v9736, v9735, v9737, v9738, v9739, v9740, 0, 3, 2, 4) -> f_909(v9724, v9725, v9726, v9727, v9728, v9729, 1, v9731, v9732, v9733, v9734, v9736, v9735, v9737, v9738, v9739, v9740, 0, 3, 2, 4) :|: v9733 <= v9736 && 1 <= v9736 && 2 <= v9735
f_904(v9724, v9725, v9726, v9727, v9728, v9729, 1, v9731, v9732, v9733, v9734, v9736, v9735, v9737, v9738, v9739, v9740, 0, 3, 2, 4) -> f_910(v9724, v9725, v9726, v9727, v9728, v9729, 1, v9731, v9732, v9733, v9734, v9736, v9735, v9737, v9738, v9739, v9740, 0, 3, 2, 4) :|: v9736 < v9733
f_909(v9724, v9725, v9726, v9727, v9728, v9729, 1, v9731, v9732, v9733, v9734, v9736, v9735, v9737, v9738, v9739, v9740, 0, 3, 2, 4) -> f_914(v9724, v9725, v9726, v9727, v9728, v9729, 1, v9731, v9732, v9733, v9734, v9736, v9735, v9737, v9738, v9739, v9740, 0, 3, 2, 4) :|: 0 = 0
f_914(v9724, v9725, v9726, v9727, v9728, v9729, 1, v9731, v9732, v9733, v9734, v9736, v9735, v9737, v9738, v9739, v9740, 0, 3, 2, 4) -> f_919(v9724, v9725, v9726, v9727, v9728, v9729, 1, v9731, v9732, v9733, v9734, v9736, v9735, v9737, v9738, v9739, v9740, 0, 3, 2, 4) :|: TRUE
f_919(v9724, v9725, v9726, v9727, v9728, v9729, 1, v9731, v9732, v9733, v9734, v9736, v9735, v9737, v9738, v9739, v9740, 0, 3, 2, 4) -> f_865(v9724, v9725, v9726, v9727, v9728, v9729, 1, v9731, v9732, v9733, v9734, v9736, v9735, v9733, v9736, v9737, v9738, v9739, v9740, 0, 3, 2, 4) :|: v9733 <= v9736 && v9733 <= v9736 && v9733 <= v9733 && 1 <= v9724 && 1 <= v9725 && 1 <= v9726 && 1 <= v9727 && 1 + v9728 <= 0 && 1 + v9729 <= 0 && 1 <= v9731 && 1 <= v9732 && 1 <= v9733 && 2 <= v9734 && 1 <= v9736 && 2 <= v9735 && 1 <= v9733 && 1 <= v9736 && 4 <= v9737 && 4 <= v9738 && 4 <= v9739 && 4 <= v9740 && v9724 <= v9737 && v9725 <= v9738 && v9726 <= v9739 && v9727 <= v9740
f_910(v9724, v9725, v9726, v9727, v9728, v9729, 1, v9731, v9732, v9733, v9734, v9736, v9735, v9737, v9738, v9739, v9740, 0, 3, 2, 4) -> f_915(v9724, v9725, v9726, v9727, v9728, v9729, 1, v9731, v9732, v9733, v9734, v9736, 0, v9735, v9737, v9738, v9739, v9740, 3, 2, 4) :|: 0 = 0
f_915(v9724, v9725, v9726, v9727, v9728, v9729, 1, v9731, v9732, v9733, v9734, v9736, 0, v9735, v9737, v9738, v9739, v9740, 3, 2, 4) -> f_920(v9724, v9725, v9726, v9727, v9728, v9729, 1, v9731, v9732, v9733, v9734, v9736, 0, v9735, v9737, v9738, v9739, v9740, 3, 2, 4) :|: TRUE
f_920(v9724, v9725, v9726, v9727, v9728, v9729, 1, v9731, v9732, v9733, v9734, v9736, 0, v9735, v9737, v9738, v9739, v9740, 3, 2, 4) -> f_925(v9724, v9725, v9726, v9727, v9728, v9729, 1, v9731, v9732, v9733, v9734, v9736, 0, v9735, v9737, v9738, v9739, v9740, 3, 2, 4) :|: 0 = 0
f_925(v9724, v9725, v9726, v9727, v9728, v9729, 1, v9731, v9732, v9733, v9734, v9736, 0, v9735, v9737, v9738, v9739, v9740, 3, 2, 4) -> f_930(v9724, v9725, v9726, v9727, v9728, v9729, 1, v9731, v9732, v9733, v9734, v9736, 0, v9735, v9737, v9738, v9739, v9740, 3, 2, 4) :|: TRUE
f_930(v9724, v9725, v9726, v9727, v9728, v9729, 1, v9731, v9732, v9733, v9734, v9736, 0, v9735, v9737, v9738, v9739, v9740, 3, 2, 4) -> f_935(v9724, v9725, v9726, v9727, v9728, v9729, 1, v9731, v9732, v9733, v9734, v9736, 0, v9735, v9737, v9738, v9739, v9740, 3, 2, 4) :|: 0 = 0
f_935(v9724, v9725, v9726, v9727, v9728, v9729, 1, v9731, v9732, v9733, v9734, v9736, 0, v9735, v9737, v9738, v9739, v9740, 3, 2, 4) -> f_939(v9724, v9725, v9726, v9727, v9728, v9729, 1, v9731, v9732, v9733, v9734, v9736, 0, v9735, v9737, v9738, v9739, v9740, 3, 2, 4) :|: TRUE
f_939(v9724, v9725, v9726, v9727, v9728, v9729, 1, v9731, v9732, v9733, v9734, v9736, 0, v9735, v9737, v9738, v9739, v9740, 3, 2, 4) -> f_943(v9724, v9725, v9726, v9727, v9728, v9729, 1, v9731, v9732, v9733, v9734, v9736, 0, v9735, v9737, v9738, v9739, v9740, 3, 2, 4) :|: TRUE
f_943(v9724, v9725, v9726, v9727, v9728, v9729, 1, v9731, v9732, v9733, v9734, v9736, 0, v9735, v9737, v9738, v9739, v9740, 3, 2, 4) -> f_808(v9724, v9725, v9726, v9727, v9728, v9729, 1, v9731, v9732, v9733, v9734, v9736, 0, v9735, v9737, v9738, v9739, v9740, 3, 4) :|: v9736 < v9733 && 1 <= v9724 && 1 <= v9725 && 1 <= v9726 && 1 <= v9727 && 1 + v9728 <= 0 && 1 + v9729 <= 0 && 1 <= v9731 && 1 <= v9732 && 1 <= v9733 && 1 <= v9734 && 0 <= v9736 && 1 <= v9735 && 4 <= v9737 && 4 <= v9738 && 4 <= v9739 && 4 <= v9740 && v9724 <= v9737 && v9725 <= v9738 && v9726 <= v9739 && v9727 <= v9740
f_808(v7656, v7657, v7658, v7659, v7660, v7661, 1, v7663, v7664, v7665, v7666, v7667, 0, v7669, v7670, v7671, v7672, v7673, 3, 4) -> f_815(v7656, v7657, v7658, v7659, v7660, v7661, 1, v7663, v7664, v7667, v7666, v7665, 0, v7669, v7670, v7671, v7672, v7673, 3, 4) :|: 0 = 0
Combined rules. Obtained 2 rulesP rules:
f_904(v9724:0, v9725:0, v9726:0, v9727:0, v9728:0, v9729:0, 1, v9731:0, v9732:0, v9482:0 + v9736:0, v9734:0, v9736:0, v9735:0, v9737:0, v9738:0, v9739:0, v9740:0, 0, 3, 2, 4) -> f_904(v9724:0, v9725:0, v9726:0, v9727:0, v9728:0, v9729:0, 1, v9731:0, v9732:0, v9736:0, v9482:0 + v9736:0, v9482:0, v9482:0 + v9736:0, v9737:0, v9738:0, v9739:0, v9740:0, 0, 3, 2, 4) :|: v9735:0 > 2 && v9736:0 < v9482:0 + v9736:0 && v9736:0 > 0 && v9482:0 + v9736:0 > 1 && v9724:0 > 0 && v9725:0 > 0 && v9726:0 > 0 && v9727:0 > 0 && v9728:0 < 0 && v9729:0 < 0 && v9731:0 > 0 && v9732:0 > 0 && v9737:0 > 3 && v9738:0 > 3 && v9739:0 > 3 && v9740:0 > 3 && v9737:0 >= v9724:0 && v9734:0 > 0 && v9482:0 > -1 && v9738:0 >= v9725:0 && v9739:0 >= v9726:0 && v9740:0 >= v9727:0
f_904(v9724:0, v9725:0, v9726:0, v9727:0, v9728:0, v9729:0, 1, v9731:0, v9732:0, v9733:0, v9734:0, v9482:0 + v9733:0, v9735:0, v9737:0, v9738:0, v9739:0, v9740:0, 0, 3, 2, 4) -> f_904(v9724:0, v9725:0, v9726:0, v9727:0, v9728:0, v9729:0, 1, v9731:0, v9732:0, v9733:0, v9734:0, v9482:0, v9482:0 + v9733:0, v9737:0, v9738:0, v9739:0, v9740:0, 0, 3, 2, 4) :|: v9733:0 <= v9482:0 + v9733:0 && v9724:0 > 0 && v9725:0 > 0 && v9726:0 > 0 && v9727:0 > 0 && v9728:0 < 0 && v9729:0 < 0 && v9731:0 > 0 && v9732:0 > 0 && v9733:0 > 0 && v9734:0 > 1 && v9482:0 + v9733:0 > 0 && v9735:0 > 1 && v9737:0 > 3 && v9738:0 > 3 && v9739:0 > 3 && v9740:0 > 3 && v9482:0 > -1 && v9737:0 >= v9724:0 && v9738:0 >= v9725:0 && v9739:0 >= v9726:0 && v9740:0 >= v9727:0
Filtered unneeded arguments:
   f_904(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21) -> f_904(x1, x2, x3, x4, x5, x6, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17)
Removed division, modulo operations, cleaned up constraints. Obtained 2 rules.P rules:
f_904(v9724:0, v9725:0, v9726:0, v9727:0, v9728:0, v9729:0, v9731:0, v9732:0, sum~v9482:0~v9736:0, v9734:0, v9736:0, v9735:0, v9737:0, v9738:0, v9739:0, v9740:0) -> f_904(v9724:0, v9725:0, v9726:0, v9727:0, v9728:0, v9729:0, v9731:0, v9732:0, v9736:0, v9482:0 + v9736:0, v9482:0, v9482:0 + v9736:0, v9737:0, v9738:0, v9739:0, v9740:0) :|: v9736:0 < v9482:0 + v9736:0 && v9735:0 > 2 && v9736:0 > 0 && v9482:0 + v9736:0 > 1 && v9724:0 > 0 && v9725:0 > 0 && v9726:0 > 0 && v9727:0 > 0 && v9728:0 < 0 && v9729:0 < 0 && v9731:0 > 0 && v9732:0 > 0 && v9737:0 > 3 && v9738:0 > 3 && v9739:0 > 3 && v9740:0 > 3 && v9737:0 >= v9724:0 && v9734:0 > 0 && v9482:0 > -1 && v9738:0 >= v9725:0 && v9740:0 >= v9727:0 && v9739:0 >= v9726:0 && sum~v9482:0~v9736:0 = v9482:0 + v9736:0
f_904(v9724:0, v9725:0, v9726:0, v9727:0, v9728:0, v9729:0, v9731:0, v9732:0, v9733:0, v9734:0, sum~v9482:0~v9733:0, v9735:0, v9737:0, v9738:0, v9739:0, v9740:0) -> f_904(v9724:0, v9725:0, v9726:0, v9727:0, v9728:0, v9729:0, v9731:0, v9732:0, v9733:0, v9734:0, v9482:0, v9482:0 + v9733:0, v9737:0, v9738:0, v9739:0, v9740:0) :|: v9724:0 > 0 && v9733:0 <= v9482:0 + v9733:0 && v9725:0 > 0 && v9726:0 > 0 && v9727:0 > 0 && v9728:0 < 0 && v9729:0 < 0 && v9731:0 > 0 && v9732:0 > 0 && v9733:0 > 0 && v9734:0 > 1 && v9482:0 + v9733:0 > 0 && v9735:0 > 1 && v9737:0 > 3 && v9738:0 > 3 && v9739:0 > 3 && v9740:0 > 3 && v9482:0 > -1 && v9737:0 >= v9724:0 && v9738:0 >= v9725:0 && v9740:0 >= v9727:0 && v9739:0 >= v9726:0 && sum~v9482:0~v9733:0 = v9482:0 + v9733:0

----------------------------------------

(23)
Obligation:
Rules:
f_904(v9724:0, v9725:0, v9726:0, v9727:0, v9728:0, v9729:0, v9731:0, v9732:0, sum~v9482:0~v9736:0, v9734:0, v9736:0, v9735:0, v9737:0, v9738:0, v9739:0, v9740:0) -> f_904(v9724:0, v9725:0, v9726:0, v9727:0, v9728:0, v9729:0, v9731:0, v9732:0, v9736:0, v9482:0 + v9736:0, v9482:0, v9482:0 + v9736:0, v9737:0, v9738:0, v9739:0, v9740:0) :|: v9736:0 < v9482:0 + v9736:0 && v9735:0 > 2 && v9736:0 > 0 && v9482:0 + v9736:0 > 1 && v9724:0 > 0 && v9725:0 > 0 && v9726:0 > 0 && v9727:0 > 0 && v9728:0 < 0 && v9729:0 < 0 && v9731:0 > 0 && v9732:0 > 0 && v9737:0 > 3 && v9738:0 > 3 && v9739:0 > 3 && v9740:0 > 3 && v9737:0 >= v9724:0 && v9734:0 > 0 && v9482:0 > -1 && v9738:0 >= v9725:0 && v9740:0 >= v9727:0 && v9739:0 >= v9726:0 && sum~v9482:0~v9736:0 = v9482:0 + v9736:0
f_904(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15) -> f_904(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x16, x16 + x8, x12, x13, x14, x15) :|: x > 0 && x8 <= x16 + x8 && x1 > 0 && x2 > 0 && x3 > 0 && x4 < 0 && x5 < 0 && x6 > 0 && x7 > 0 && x8 > 0 && x9 > 1 && x16 + x8 > 0 && x11 > 1 && x12 > 3 && x13 > 3 && x14 > 3 && x15 > 3 && x16 > -1 && x12 >= x && x13 >= x1 && x15 >= x3 && x14 >= x2 && x10 = x16 + x8

----------------------------------------

(24) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(25)
Obligation:
Rules:
f_904(v9724:0:0, v9725:0:0, v9726:0:0, v9727:0:0, v9728:0:0, v9729:0:0, v9731:0:0, v9732:0:0, sum~v9482:0:0~v9736:0:0, v9734:0:0, v9736:0:0, v9735:0:0, v9737:0:0, v9738:0:0, v9739:0:0, v9740:0:0) -> f_904(v9724:0:0, v9725:0:0, v9726:0:0, v9727:0:0, v9728:0:0, v9729:0:0, v9731:0:0, v9732:0:0, v9736:0:0, v9482:0:0 + v9736:0:0, v9482:0:0, v9482:0:0 + v9736:0:0, v9737:0:0, v9738:0:0, v9739:0:0, v9740:0:0) :|: v9740:0:0 >= v9727:0:0 && v9739:0:0 >= v9726:0:0 && v9738:0:0 >= v9725:0:0 && v9482:0:0 > -1 && v9734:0:0 > 0 && v9737:0:0 >= v9724:0:0 && v9740:0:0 > 3 && v9739:0:0 > 3 && v9738:0:0 > 3 && v9737:0:0 > 3 && v9732:0:0 > 0 && v9731:0:0 > 0 && v9729:0:0 < 0 && v9728:0:0 < 0 && v9727:0:0 > 0 && v9726:0:0 > 0 && v9725:0:0 > 0 && v9724:0:0 > 0 && v9482:0:0 + v9736:0:0 > 1 && v9736:0:0 > 0 && v9735:0:0 > 2 && v9736:0:0 < v9482:0:0 + v9736:0:0 && sum~v9482:0:0~v9736:0:0 = v9482:0:0 + v9736:0:0
f_904(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0, x7:0, x8:0, x9:0, sum~x16:0~x8:0, x11:0, x12:0, x13:0, x14:0, x15:0) -> f_904(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0, x7:0, x8:0, x9:0, x16:0, x16:0 + x8:0, x12:0, x13:0, x14:0, x15:0) :|: x3:0 <= x15:0 && x2:0 <= x14:0 && x1:0 <= x13:0 && x:0 <= x12:0 && x16:0 > -1 && x15:0 > 3 && x14:0 > 3 && x13:0 > 3 && x12:0 > 3 && x11:0 > 1 && x16:0 + x8:0 > 0 && x9:0 > 1 && x8:0 > 0 && x7:0 > 0 && x6:0 > 0 && x5:0 < 0 && x4:0 < 0 && x3:0 > 0 && x2:0 > 0 && x1:0 > 0 && x8:0 <= x16:0 + x8:0 && x:0 > 0 && sum~x16:0~x8:0 = x16:0 + x8:0

----------------------------------------

(26) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_904 ] = f_904_11 + f_904_9

The following rules are decreasing:
f_904(v9724:0:0, v9725:0:0, v9726:0:0, v9727:0:0, v9728:0:0, v9729:0:0, v9731:0:0, v9732:0:0, sum~v9482:0:0~v9736:0:0, v9734:0:0, v9736:0:0, v9735:0:0, v9737:0:0, v9738:0:0, v9739:0:0, v9740:0:0) -> f_904(v9724:0:0, v9725:0:0, v9726:0:0, v9727:0:0, v9728:0:0, v9729:0:0, v9731:0:0, v9732:0:0, v9736:0:0, v9482:0:0 + v9736:0:0, v9482:0:0, v9482:0:0 + v9736:0:0, v9737:0:0, v9738:0:0, v9739:0:0, v9740:0:0) :|: v9740:0:0 >= v9727:0:0 && v9739:0:0 >= v9726:0:0 && v9738:0:0 >= v9725:0:0 && v9482:0:0 > -1 && v9734:0:0 > 0 && v9737:0:0 >= v9724:0:0 && v9740:0:0 > 3 && v9739:0:0 > 3 && v9738:0:0 > 3 && v9737:0:0 > 3 && v9732:0:0 > 0 && v9731:0:0 > 0 && v9729:0:0 < 0 && v9728:0:0 < 0 && v9727:0:0 > 0 && v9726:0:0 > 0 && v9725:0:0 > 0 && v9724:0:0 > 0 && v9482:0:0 + v9736:0:0 > 1 && v9736:0:0 > 0 && v9735:0:0 > 2 && v9736:0:0 < v9482:0:0 + v9736:0:0 && sum~v9482:0:0~v9736:0:0 = v9482:0:0 + v9736:0:0
f_904(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0, x7:0, x8:0, x9:0, sum~x16:0~x8:0, x11:0, x12:0, x13:0, x14:0, x15:0) -> f_904(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0, x7:0, x8:0, x9:0, x16:0, x16:0 + x8:0, x12:0, x13:0, x14:0, x15:0) :|: x3:0 <= x15:0 && x2:0 <= x14:0 && x1:0 <= x13:0 && x:0 <= x12:0 && x16:0 > -1 && x15:0 > 3 && x14:0 > 3 && x13:0 > 3 && x12:0 > 3 && x11:0 > 1 && x16:0 + x8:0 > 0 && x9:0 > 1 && x8:0 > 0 && x7:0 > 0 && x6:0 > 0 && x5:0 < 0 && x4:0 < 0 && x3:0 > 0 && x2:0 > 0 && x1:0 > 0 && x8:0 <= x16:0 + x8:0 && x:0 > 0 && sum~x16:0~x8:0 = x16:0 + x8:0

The following rules are bounded:
f_904(v9724:0:0, v9725:0:0, v9726:0:0, v9727:0:0, v9728:0:0, v9729:0:0, v9731:0:0, v9732:0:0, sum~v9482:0:0~v9736:0:0, v9734:0:0, v9736:0:0, v9735:0:0, v9737:0:0, v9738:0:0, v9739:0:0, v9740:0:0) -> f_904(v9724:0:0, v9725:0:0, v9726:0:0, v9727:0:0, v9728:0:0, v9729:0:0, v9731:0:0, v9732:0:0, v9736:0:0, v9482:0:0 + v9736:0:0, v9482:0:0, v9482:0:0 + v9736:0:0, v9737:0:0, v9738:0:0, v9739:0:0, v9740:0:0) :|: v9740:0:0 >= v9727:0:0 && v9739:0:0 >= v9726:0:0 && v9738:0:0 >= v9725:0:0 && v9482:0:0 > -1 && v9734:0:0 > 0 && v9737:0:0 >= v9724:0:0 && v9740:0:0 > 3 && v9739:0:0 > 3 && v9738:0:0 > 3 && v9737:0:0 > 3 && v9732:0:0 > 0 && v9731:0:0 > 0 && v9729:0:0 < 0 && v9728:0:0 < 0 && v9727:0:0 > 0 && v9726:0:0 > 0 && v9725:0:0 > 0 && v9724:0:0 > 0 && v9482:0:0 + v9736:0:0 > 1 && v9736:0:0 > 0 && v9735:0:0 > 2 && v9736:0:0 < v9482:0:0 + v9736:0:0 && sum~v9482:0:0~v9736:0:0 = v9482:0:0 + v9736:0:0
f_904(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0, x7:0, x8:0, x9:0, sum~x16:0~x8:0, x11:0, x12:0, x13:0, x14:0, x15:0) -> f_904(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0, x7:0, x8:0, x9:0, x16:0, x16:0 + x8:0, x12:0, x13:0, x14:0, x15:0) :|: x3:0 <= x15:0 && x2:0 <= x14:0 && x1:0 <= x13:0 && x:0 <= x12:0 && x16:0 > -1 && x15:0 > 3 && x14:0 > 3 && x13:0 > 3 && x12:0 > 3 && x11:0 > 1 && x16:0 + x8:0 > 0 && x9:0 > 1 && x8:0 > 0 && x7:0 > 0 && x6:0 > 0 && x5:0 < 0 && x4:0 < 0 && x3:0 > 0 && x2:0 > 0 && x1:0 > 0 && x8:0 <= x16:0 + x8:0 && x:0 > 0 && sum~x16:0~x8:0 = x16:0 + x8:0


----------------------------------------

(27)
YES

----------------------------------------

(28)
Obligation:
SCC
----------------------------------------

(29) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 33 rulesP rules:
f_797(v7467, v7468, v7469, v7470, v7471, v7472, 1, v7474, 0, v7478, v7477, v7476, v7479, v7480, v7481, v7482, v7483, 3, 4) -> f_802(v7467, v7468, v7469, v7470, v7471, v7472, 1, v7474, 0, v7478, v7477, v7476, v7479, v7480, v7481, v7482, v7483, 3, 2, 4) :|: 0 < v7478 && 3 <= v7479 && 2 <= v7476
f_802(v7467, v7468, v7469, v7470, v7471, v7472, 1, v7474, 0, v7478, v7477, v7476, v7479, v7480, v7481, v7482, v7483, 3, 2, 4) -> f_809(v7467, v7468, v7469, v7470, v7471, v7472, 1, v7474, 0, v7478, v7477, v7476, v7479, v7480, v7481, v7482, v7483, 3, 2, 4) :|: 0 = 0
f_809(v7467, v7468, v7469, v7470, v7471, v7472, 1, v7474, 0, v7478, v7477, v7476, v7479, v7480, v7481, v7482, v7483, 3, 2, 4) -> f_816(v7467, v7468, v7469, v7470, v7471, v7472, 1, v7474, 0, v7478, v7477, v7476, v7479, v7480, v7481, v7482, v7483, 3, 2, 4) :|: TRUE
f_816(v7467, v7468, v7469, v7470, v7471, v7472, 1, v7474, 0, v7478, v7477, v7476, v7479, v7480, v7481, v7482, v7483, 3, 2, 4) -> f_822(v7467, v7468, v7469, v7470, v7471, v7472, 1, v7474, 0, v7478, v7476, v7479, v7480, v7481, v7482, v7483, 3, 2, 4) :|: 0 = 0
f_822(v7467, v7468, v7469, v7470, v7471, v7472, 1, v7474, 0, v7478, v7476, v7479, v7480, v7481, v7482, v7483, 3, 2, 4) -> f_827(v7467, v7468, v7469, v7470, v7471, v7472, 1, v7474, 0, v7478, v7476, v7479, v7480, v7481, v7482, v7483, 3, 2, 4) :|: TRUE
f_827(v7467, v7468, v7469, v7470, v7471, v7472, 1, v7474, 0, v7478, v7476, v7479, v7480, v7481, v7482, v7483, 3, 2, 4) -> f_833(v7467, v7468, v7469, v7470, v7471, v7472, 1, v7474, 0, v7478, v7476, v7479, v7480, v7481, v7482, v7483, 3, 2, 4) :|: TRUE
f_833(v7467, v7468, v7469, v7470, v7471, v7472, 1, v7474, 0, v7478, v7476, v7479, v7480, v7481, v7482, v7483, 3, 2, 4) -> f_838(v7467, v7468, v7469, v7470, v7471, v7472, 1, v7474, 0, v7478, v7476, v7479, v7480, v7481, v7482, v7483, 3, 2, 4) :|: 0 = 0
f_838(v7467, v7468, v7469, v7470, v7471, v7472, 1, v7474, 0, v7478, v7476, v7479, v7480, v7481, v7482, v7483, 3, 2, 4) -> f_842(v7467, v7468, v7469, v7470, v7471, v7472, 1, v7474, 0, v7478, v7476, v7479, v7480, v7481, v7482, v7483, 3, 2, 4) :|: 0 = 0
f_842(v7467, v7468, v7469, v7470, v7471, v7472, 1, v7474, 0, v7478, v7476, v7479, v7480, v7481, v7482, v7483, 3, 2, 4) -> f_846(v7467, v7468, v7469, v7470, v7471, v7472, 1, v7474, 0, v7478, v7476, v7479, v7480, v7481, v7482, v7483, 3, 2, 4) :|: 0 = 0
f_846(v7467, v7468, v7469, v7470, v7471, v7472, 1, v7474, 0, v7478, v7476, v7479, v7480, v7481, v7482, v7483, 3, 2, 4) -> f_851(v7467, v7468, v7469, v7470, v7471, v7472, 1, v7474, 0, v7478, v7476, v7479, v7480, v7481, v7482, v7483, 3, 2, 4) :|: TRUE
f_851(v7467, v7468, v7469, v7470, v7471, v7472, 1, v7474, 0, v7478, v7476, v7479, v7480, v7481, v7482, v7483, 3, 2, 4) -> f_852(v7467, v7468, v7469, v7470, v7471, v7472, 1, v7474, 0, v7478, v7476, v7476, v7479, v7476, v7478, v7480, v7481, v7482, v7483, 3, 2, 4) :|: v7478 <= v7476 && v7478 <= v7478 && v7478 <= v7476 && 1 <= v7467 && 1 <= v7468 && 1 <= v7469 && 1 <= v7470 && 1 + v7471 <= 0 && 1 <= v7472 && 1 <= v7474 && 1 <= v7478 && 2 <= v7476 && 1 <= v7476 && 2 <= v7479 && 1 <= v7476 && 1 <= v7478 && 4 <= v7480 && 4 <= v7481 && 4 <= v7482 && 4 <= v7483 && v7467 <= v7480 && v7468 <= v7481 && v7469 <= v7482 && v7470 <= v7483
f_852(v8849, v8850, v8851, v8852, v8853, v8854, 1, v8856, 0, v8858, v8859, v8860, v8861, v8862, v8863, v8864, v8865, v8866, v8867, 3, 2, 4) -> f_856(v8849, v8850, v8851, v8852, v8853, v8854, 1, v8856, 0, v8858, v8859, v8860, v8862, v8863, v8864, v8865, v8866, v8867, 3, 2, 4) :|: 0 = 0
f_856(v8849, v8850, v8851, v8852, v8853, v8854, 1, v8856, 0, v8858, v8859, v8860, v8862, v8863, v8864, v8865, v8866, v8867, 3, 2, 4) -> f_861(v8849, v8850, v8851, v8852, v8853, v8854, 1, v8856, 0, v8858, v8859, v8860, v8863, v8864, v8865, v8866, v8867, 3, 2, 4) :|: 0 = 0
f_861(v8849, v8850, v8851, v8852, v8853, v8854, 1, v8856, 0, v8858, v8859, v8860, v8863, v8864, v8865, v8866, v8867, 3, 2, 4) -> f_866(v8849, v8850, v8851, v8852, v8853, v8854, 1, v8856, 0, v8858, v8859, v8860, v9165, v8864, v8865, v8866, v8867, 3, 2, 4) :|: v9165 + v8858 = v8860 && 0 <= v9165
f_866(v8849, v8850, v8851, v8852, v8853, v8854, 1, v8856, 0, v8858, v8859, v8860, v9165, v8864, v8865, v8866, v8867, 3, 2, 4) -> f_870(v8849, v8850, v8851, v8852, v8853, v8854, 1, v8856, 0, v8858, v8859, v8860, v9165, v8864, v8865, v8866, v8867, 3, 2, 4) :|: TRUE
f_870(v8849, v8850, v8851, v8852, v8853, v8854, 1, v8856, 0, v8858, v8859, v8860, v9165, v8864, v8865, v8866, v8867, 3, 2, 4) -> f_876(v8849, v8850, v8851, v8852, v8853, v8854, 1, v8856, 0, v8858, v8859, v8860, v9165, v8864, v8865, v8866, v8867, 3, 2, 4) :|: TRUE
f_876(v8849, v8850, v8851, v8852, v8853, v8854, 1, v8856, 0, v8858, v8859, v8860, v9165, v8864, v8865, v8866, v8867, 3, 2, 4) -> f_877(v8849, v8850, v8851, v8852, v8853, v8854, 1, v8856, 0, v8858, v8859, v8860, v9165, v8864, v8865, v8866, v8867, 3, 2, 4) :|: 1 <= v8849 && 1 <= v8850 && 1 <= v8851 && 1 <= v8852 && 1 + v8853 <= 0 && 1 <= v8854 && 1 <= v8856 && 1 <= v8858 && 2 <= v8859 && 1 <= v8860 && 0 <= v9165 && 4 <= v8864 && 4 <= v8865 && 4 <= v8866 && 4 <= v8867 && v8849 <= v8864 && v8850 <= v8865 && v8851 <= v8866 && v8852 <= v8867
f_877(v9414, v9415, v9416, v9417, v9418, v9419, 1, v9421, 0, v9423, v9424, v9425, v9426, v9427, v9428, v9429, v9430, 3, 2, 4) -> f_882(v9414, v9415, v9416, v9417, v9418, v9419, 1, v9421, 0, v9423, v9424, v9426, v9425, v9427, v9428, v9429, v9430, 3, 2, 4) :|: 0 = 0
f_882(v9414, v9415, v9416, v9417, v9418, v9419, 1, v9421, 0, v9423, v9424, v9426, v9425, v9427, v9428, v9429, v9430, 3, 2, 4) -> f_887(v9414, v9415, v9416, v9417, v9418, v9419, 1, v9421, 0, v9423, v9424, v9426, v9425, v9427, v9428, v9429, v9430, 3, 2, 4) :|: 0 = 0
f_887(v9414, v9415, v9416, v9417, v9418, v9419, 1, v9421, 0, v9423, v9424, v9426, v9425, v9427, v9428, v9429, v9430, 3, 2, 4) -> f_893(v9414, v9415, v9416, v9417, v9418, v9419, 1, v9421, 0, v9423, v9424, v9426, v9425, v9427, v9428, v9429, v9430, 3, 2, 4) :|: v9423 <= v9426 && 1 <= v9426 && 2 <= v9425
f_887(v9414, v9415, v9416, v9417, v9418, v9419, 1, v9421, 0, v9423, v9424, v9426, v9425, v9427, v9428, v9429, v9430, 3, 2, 4) -> f_894(v9414, v9415, v9416, v9417, v9418, v9419, 1, v9421, 0, v9423, v9424, v9426, v9425, v9427, v9428, v9429, v9430, 3, 2, 4) :|: v9426 < v9423
f_893(v9414, v9415, v9416, v9417, v9418, v9419, 1, v9421, 0, v9423, v9424, v9426, v9425, v9427, v9428, v9429, v9430, 3, 2, 4) -> f_899(v9414, v9415, v9416, v9417, v9418, v9419, 1, v9421, 0, v9423, v9424, v9426, v9425, v9427, v9428, v9429, v9430, 3, 2, 4) :|: 0 = 0
f_899(v9414, v9415, v9416, v9417, v9418, v9419, 1, v9421, 0, v9423, v9424, v9426, v9425, v9427, v9428, v9429, v9430, 3, 2, 4) -> f_905(v9414, v9415, v9416, v9417, v9418, v9419, 1, v9421, 0, v9423, v9424, v9426, v9425, v9427, v9428, v9429, v9430, 3, 2, 4) :|: TRUE
f_905(v9414, v9415, v9416, v9417, v9418, v9419, 1, v9421, 0, v9423, v9424, v9426, v9425, v9427, v9428, v9429, v9430, 3, 2, 4) -> f_852(v9414, v9415, v9416, v9417, v9418, v9419, 1, v9421, 0, v9423, v9424, v9426, v9425, v9423, v9426, v9427, v9428, v9429, v9430, 3, 2, 4) :|: v9423 <= v9426 && v9423 <= v9426 && v9423 <= v9423 && 1 <= v9414 && 1 <= v9415 && 1 <= v9416 && 1 <= v9417 && 1 + v9418 <= 0 && 1 <= v9419 && 1 <= v9421 && 1 <= v9423 && 2 <= v9424 && 1 <= v9426 && 2 <= v9425 && 1 <= v9423 && 1 <= v9426 && 4 <= v9427 && 4 <= v9428 && 4 <= v9429 && 4 <= v9430 && v9414 <= v9427 && v9415 <= v9428 && v9416 <= v9429 && v9417 <= v9430
f_894(v9414, v9415, v9416, v9417, v9418, v9419, 1, v9421, 0, v9423, v9424, v9426, v9425, v9427, v9428, v9429, v9430, 3, 2, 4) -> f_900(v9414, v9415, v9416, v9417, v9418, v9419, 1, v9421, 0, v9423, v9424, v9426, v9425, v9427, v9428, v9429, v9430, 3, 2, 4) :|: 0 = 0
f_900(v9414, v9415, v9416, v9417, v9418, v9419, 1, v9421, 0, v9423, v9424, v9426, v9425, v9427, v9428, v9429, v9430, 3, 2, 4) -> f_906(v9414, v9415, v9416, v9417, v9418, v9419, 1, v9421, 0, v9423, v9424, v9426, v9425, v9427, v9428, v9429, v9430, 3, 2, 4) :|: TRUE
f_906(v9414, v9415, v9416, v9417, v9418, v9419, 1, v9421, 0, v9423, v9424, v9426, v9425, v9427, v9428, v9429, v9430, 3, 2, 4) -> f_911(v9414, v9415, v9416, v9417, v9418, v9419, 1, v9421, 0, v9423, v9424, v9426, v9425, v9427, v9428, v9429, v9430, 3, 2, 4) :|: 0 = 0
f_911(v9414, v9415, v9416, v9417, v9418, v9419, 1, v9421, 0, v9423, v9424, v9426, v9425, v9427, v9428, v9429, v9430, 3, 2, 4) -> f_916(v9414, v9415, v9416, v9417, v9418, v9419, 1, v9421, 0, v9423, v9424, v9426, v9425, v9427, v9428, v9429, v9430, 3, 2, 4) :|: TRUE
f_916(v9414, v9415, v9416, v9417, v9418, v9419, 1, v9421, 0, v9423, v9424, v9426, v9425, v9427, v9428, v9429, v9430, 3, 2, 4) -> f_921(v9414, v9415, v9416, v9417, v9418, v9419, 1, v9421, 0, v9423, v9424, v9426, v9425, v9427, v9428, v9429, v9430, 3, 2, 4) :|: 0 = 0
f_921(v9414, v9415, v9416, v9417, v9418, v9419, 1, v9421, 0, v9423, v9424, v9426, v9425, v9427, v9428, v9429, v9430, 3, 2, 4) -> f_926(v9414, v9415, v9416, v9417, v9418, v9419, 1, v9421, 0, v9423, v9424, v9426, v9425, v9427, v9428, v9429, v9430, 3, 2, 4) :|: TRUE
f_926(v9414, v9415, v9416, v9417, v9418, v9419, 1, v9421, 0, v9423, v9424, v9426, v9425, v9427, v9428, v9429, v9430, 3, 2, 4) -> f_931(v9414, v9415, v9416, v9417, v9418, v9419, 1, v9421, 0, v9423, v9424, v9426, v9425, v9427, v9428, v9429, v9430, 3, 2, 4) :|: TRUE
f_931(v9414, v9415, v9416, v9417, v9418, v9419, 1, v9421, 0, v9423, v9424, v9426, v9425, v9427, v9428, v9429, v9430, 3, 2, 4) -> f_792(v9414, v9415, v9416, v9417, v9418, v9419, 1, v9421, 0, v9423, v9424, v9426, v9425, v9427, v9428, v9429, v9430, 3, 4) :|: v9426 < v9423 && 1 <= v9414 && 1 <= v9415 && 1 <= v9416 && 1 <= v9417 && 1 + v9418 <= 0 && 1 <= v9419 && 1 <= v9421 && 1 <= v9423 && 1 <= v9424 && 0 <= v9426 && 1 <= v9425 && 4 <= v9427 && 4 <= v9428 && 4 <= v9429 && 4 <= v9430 && v9414 <= v9427 && v9415 <= v9428 && v9416 <= v9429 && v9417 <= v9430
f_792(v7467, v7468, v7469, v7470, v7471, v7472, 1, v7474, 0, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7483, 3, 4) -> f_797(v7467, v7468, v7469, v7470, v7471, v7472, 1, v7474, 0, v7478, v7477, v7476, v7479, v7480, v7481, v7482, v7483, 3, 4) :|: 0 = 0
Combined rules. Obtained 2 rulesP rules:
f_887(v9414:0, v9415:0, v9416:0, v9417:0, v9418:0, v9419:0, 1, v9421:0, 0, v9165:0 + v9426:0, v9424:0, v9426:0, v9425:0, v9427:0, v9428:0, v9429:0, v9430:0, 3, 2, 4) -> f_887(v9414:0, v9415:0, v9416:0, v9417:0, v9418:0, v9419:0, 1, v9421:0, 0, v9426:0, v9165:0 + v9426:0, v9165:0, v9165:0 + v9426:0, v9427:0, v9428:0, v9429:0, v9430:0, 3, 2, 4) :|: v9425:0 > 2 && v9426:0 < v9165:0 + v9426:0 && v9426:0 > 0 && v9165:0 + v9426:0 > 1 && v9414:0 > 0 && v9415:0 > 0 && v9416:0 > 0 && v9417:0 > 0 && v9418:0 < 0 && v9419:0 > 0 && v9421:0 > 0 && v9427:0 > 3 && v9428:0 > 3 && v9429:0 > 3 && v9430:0 > 3 && v9427:0 >= v9414:0 && v9424:0 > 0 && v9165:0 > -1 && v9428:0 >= v9415:0 && v9429:0 >= v9416:0 && v9430:0 >= v9417:0
f_887(v9414:0, v9415:0, v9416:0, v9417:0, v9418:0, v9419:0, 1, v9421:0, 0, v9423:0, v9424:0, v9165:0 + v9423:0, v9425:0, v9427:0, v9428:0, v9429:0, v9430:0, 3, 2, 4) -> f_887(v9414:0, v9415:0, v9416:0, v9417:0, v9418:0, v9419:0, 1, v9421:0, 0, v9423:0, v9424:0, v9165:0, v9165:0 + v9423:0, v9427:0, v9428:0, v9429:0, v9430:0, 3, 2, 4) :|: v9423:0 <= v9165:0 + v9423:0 && v9414:0 > 0 && v9415:0 > 0 && v9416:0 > 0 && v9417:0 > 0 && v9418:0 < 0 && v9419:0 > 0 && v9421:0 > 0 && v9423:0 > 0 && v9424:0 > 1 && v9165:0 + v9423:0 > 0 && v9425:0 > 1 && v9427:0 > 3 && v9428:0 > 3 && v9429:0 > 3 && v9430:0 > 3 && v9165:0 > -1 && v9427:0 >= v9414:0 && v9428:0 >= v9415:0 && v9429:0 >= v9416:0 && v9430:0 >= v9417:0
Filtered unneeded arguments:
   f_887(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20) -> f_887(x1, x2, x3, x4, x5, x6, x8, x10, x11, x12, x13, x14, x15, x16, x17)
Removed division, modulo operations, cleaned up constraints. Obtained 2 rules.P rules:
f_887(v9414:0, v9415:0, v9416:0, v9417:0, v9418:0, v9419:0, v9421:0, sum~v9165:0~v9426:0, v9424:0, v9426:0, v9425:0, v9427:0, v9428:0, v9429:0, v9430:0) -> f_887(v9414:0, v9415:0, v9416:0, v9417:0, v9418:0, v9419:0, v9421:0, v9426:0, v9165:0 + v9426:0, v9165:0, v9165:0 + v9426:0, v9427:0, v9428:0, v9429:0, v9430:0) :|: v9426:0 < v9165:0 + v9426:0 && v9425:0 > 2 && v9426:0 > 0 && v9165:0 + v9426:0 > 1 && v9414:0 > 0 && v9415:0 > 0 && v9416:0 > 0 && v9417:0 > 0 && v9418:0 < 0 && v9419:0 > 0 && v9421:0 > 0 && v9427:0 > 3 && v9428:0 > 3 && v9429:0 > 3 && v9430:0 > 3 && v9427:0 >= v9414:0 && v9424:0 > 0 && v9165:0 > -1 && v9428:0 >= v9415:0 && v9430:0 >= v9417:0 && v9429:0 >= v9416:0 && sum~v9165:0~v9426:0 = v9165:0 + v9426:0
f_887(v9414:0, v9415:0, v9416:0, v9417:0, v9418:0, v9419:0, v9421:0, v9423:0, v9424:0, sum~v9165:0~v9423:0, v9425:0, v9427:0, v9428:0, v9429:0, v9430:0) -> f_887(v9414:0, v9415:0, v9416:0, v9417:0, v9418:0, v9419:0, v9421:0, v9423:0, v9424:0, v9165:0, v9165:0 + v9423:0, v9427:0, v9428:0, v9429:0, v9430:0) :|: v9414:0 > 0 && v9423:0 <= v9165:0 + v9423:0 && v9415:0 > 0 && v9416:0 > 0 && v9417:0 > 0 && v9418:0 < 0 && v9419:0 > 0 && v9421:0 > 0 && v9423:0 > 0 && v9424:0 > 1 && v9165:0 + v9423:0 > 0 && v9425:0 > 1 && v9427:0 > 3 && v9428:0 > 3 && v9429:0 > 3 && v9430:0 > 3 && v9165:0 > -1 && v9427:0 >= v9414:0 && v9428:0 >= v9415:0 && v9430:0 >= v9417:0 && v9429:0 >= v9416:0 && sum~v9165:0~v9423:0 = v9165:0 + v9423:0

----------------------------------------

(30)
Obligation:
Rules:
f_887(v9414:0, v9415:0, v9416:0, v9417:0, v9418:0, v9419:0, v9421:0, sum~v9165:0~v9426:0, v9424:0, v9426:0, v9425:0, v9427:0, v9428:0, v9429:0, v9430:0) -> f_887(v9414:0, v9415:0, v9416:0, v9417:0, v9418:0, v9419:0, v9421:0, v9426:0, v9165:0 + v9426:0, v9165:0, v9165:0 + v9426:0, v9427:0, v9428:0, v9429:0, v9430:0) :|: v9426:0 < v9165:0 + v9426:0 && v9425:0 > 2 && v9426:0 > 0 && v9165:0 + v9426:0 > 1 && v9414:0 > 0 && v9415:0 > 0 && v9416:0 > 0 && v9417:0 > 0 && v9418:0 < 0 && v9419:0 > 0 && v9421:0 > 0 && v9427:0 > 3 && v9428:0 > 3 && v9429:0 > 3 && v9430:0 > 3 && v9427:0 >= v9414:0 && v9424:0 > 0 && v9165:0 > -1 && v9428:0 >= v9415:0 && v9430:0 >= v9417:0 && v9429:0 >= v9416:0 && sum~v9165:0~v9426:0 = v9165:0 + v9426:0
f_887(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14) -> f_887(x, x1, x2, x3, x4, x5, x6, x7, x8, x15, x15 + x7, x11, x12, x13, x14) :|: x > 0 && x7 <= x15 + x7 && x1 > 0 && x2 > 0 && x3 > 0 && x4 < 0 && x5 > 0 && x6 > 0 && x7 > 0 && x8 > 1 && x15 + x7 > 0 && x10 > 1 && x11 > 3 && x12 > 3 && x13 > 3 && x14 > 3 && x15 > -1 && x11 >= x && x12 >= x1 && x14 >= x3 && x13 >= x2 && x9 = x15 + x7

----------------------------------------

(31) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(32)
Obligation:
Rules:
f_887(v9414:0:0, v9415:0:0, v9416:0:0, v9417:0:0, v9418:0:0, v9419:0:0, v9421:0:0, sum~v9165:0:0~v9426:0:0, v9424:0:0, v9426:0:0, v9425:0:0, v9427:0:0, v9428:0:0, v9429:0:0, v9430:0:0) -> f_887(v9414:0:0, v9415:0:0, v9416:0:0, v9417:0:0, v9418:0:0, v9419:0:0, v9421:0:0, v9426:0:0, v9165:0:0 + v9426:0:0, v9165:0:0, v9165:0:0 + v9426:0:0, v9427:0:0, v9428:0:0, v9429:0:0, v9430:0:0) :|: v9430:0:0 >= v9417:0:0 && v9429:0:0 >= v9416:0:0 && v9428:0:0 >= v9415:0:0 && v9165:0:0 > -1 && v9424:0:0 > 0 && v9427:0:0 >= v9414:0:0 && v9430:0:0 > 3 && v9429:0:0 > 3 && v9428:0:0 > 3 && v9427:0:0 > 3 && v9421:0:0 > 0 && v9419:0:0 > 0 && v9418:0:0 < 0 && v9417:0:0 > 0 && v9416:0:0 > 0 && v9415:0:0 > 0 && v9414:0:0 > 0 && v9165:0:0 + v9426:0:0 > 1 && v9426:0:0 > 0 && v9425:0:0 > 2 && v9426:0:0 < v9165:0:0 + v9426:0:0 && sum~v9165:0:0~v9426:0:0 = v9165:0:0 + v9426:0:0
f_887(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0, x7:0, x8:0, sum~x15:0~x7:0, x10:0, x11:0, x12:0, x13:0, x14:0) -> f_887(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0, x7:0, x8:0, x15:0, x15:0 + x7:0, x11:0, x12:0, x13:0, x14:0) :|: x3:0 <= x14:0 && x2:0 <= x13:0 && x1:0 <= x12:0 && x:0 <= x11:0 && x15:0 > -1 && x14:0 > 3 && x13:0 > 3 && x12:0 > 3 && x11:0 > 3 && x10:0 > 1 && x15:0 + x7:0 > 0 && x8:0 > 1 && x7:0 > 0 && x6:0 > 0 && x5:0 > 0 && x4:0 < 0 && x3:0 > 0 && x2:0 > 0 && x1:0 > 0 && x7:0 <= x15:0 + x7:0 && x:0 > 0 && sum~x15:0~x7:0 = x15:0 + x7:0

----------------------------------------

(33) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_887 ] = f_887_10 + f_887_8

The following rules are decreasing:
f_887(v9414:0:0, v9415:0:0, v9416:0:0, v9417:0:0, v9418:0:0, v9419:0:0, v9421:0:0, sum~v9165:0:0~v9426:0:0, v9424:0:0, v9426:0:0, v9425:0:0, v9427:0:0, v9428:0:0, v9429:0:0, v9430:0:0) -> f_887(v9414:0:0, v9415:0:0, v9416:0:0, v9417:0:0, v9418:0:0, v9419:0:0, v9421:0:0, v9426:0:0, v9165:0:0 + v9426:0:0, v9165:0:0, v9165:0:0 + v9426:0:0, v9427:0:0, v9428:0:0, v9429:0:0, v9430:0:0) :|: v9430:0:0 >= v9417:0:0 && v9429:0:0 >= v9416:0:0 && v9428:0:0 >= v9415:0:0 && v9165:0:0 > -1 && v9424:0:0 > 0 && v9427:0:0 >= v9414:0:0 && v9430:0:0 > 3 && v9429:0:0 > 3 && v9428:0:0 > 3 && v9427:0:0 > 3 && v9421:0:0 > 0 && v9419:0:0 > 0 && v9418:0:0 < 0 && v9417:0:0 > 0 && v9416:0:0 > 0 && v9415:0:0 > 0 && v9414:0:0 > 0 && v9165:0:0 + v9426:0:0 > 1 && v9426:0:0 > 0 && v9425:0:0 > 2 && v9426:0:0 < v9165:0:0 + v9426:0:0 && sum~v9165:0:0~v9426:0:0 = v9165:0:0 + v9426:0:0
f_887(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0, x7:0, x8:0, sum~x15:0~x7:0, x10:0, x11:0, x12:0, x13:0, x14:0) -> f_887(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0, x7:0, x8:0, x15:0, x15:0 + x7:0, x11:0, x12:0, x13:0, x14:0) :|: x3:0 <= x14:0 && x2:0 <= x13:0 && x1:0 <= x12:0 && x:0 <= x11:0 && x15:0 > -1 && x14:0 > 3 && x13:0 > 3 && x12:0 > 3 && x11:0 > 3 && x10:0 > 1 && x15:0 + x7:0 > 0 && x8:0 > 1 && x7:0 > 0 && x6:0 > 0 && x5:0 > 0 && x4:0 < 0 && x3:0 > 0 && x2:0 > 0 && x1:0 > 0 && x7:0 <= x15:0 + x7:0 && x:0 > 0 && sum~x15:0~x7:0 = x15:0 + x7:0

The following rules are bounded:
f_887(v9414:0:0, v9415:0:0, v9416:0:0, v9417:0:0, v9418:0:0, v9419:0:0, v9421:0:0, sum~v9165:0:0~v9426:0:0, v9424:0:0, v9426:0:0, v9425:0:0, v9427:0:0, v9428:0:0, v9429:0:0, v9430:0:0) -> f_887(v9414:0:0, v9415:0:0, v9416:0:0, v9417:0:0, v9418:0:0, v9419:0:0, v9421:0:0, v9426:0:0, v9165:0:0 + v9426:0:0, v9165:0:0, v9165:0:0 + v9426:0:0, v9427:0:0, v9428:0:0, v9429:0:0, v9430:0:0) :|: v9430:0:0 >= v9417:0:0 && v9429:0:0 >= v9416:0:0 && v9428:0:0 >= v9415:0:0 && v9165:0:0 > -1 && v9424:0:0 > 0 && v9427:0:0 >= v9414:0:0 && v9430:0:0 > 3 && v9429:0:0 > 3 && v9428:0:0 > 3 && v9427:0:0 > 3 && v9421:0:0 > 0 && v9419:0:0 > 0 && v9418:0:0 < 0 && v9417:0:0 > 0 && v9416:0:0 > 0 && v9415:0:0 > 0 && v9414:0:0 > 0 && v9165:0:0 + v9426:0:0 > 1 && v9426:0:0 > 0 && v9425:0:0 > 2 && v9426:0:0 < v9165:0:0 + v9426:0:0 && sum~v9165:0:0~v9426:0:0 = v9165:0:0 + v9426:0:0
f_887(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0, x7:0, x8:0, sum~x15:0~x7:0, x10:0, x11:0, x12:0, x13:0, x14:0) -> f_887(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0, x7:0, x8:0, x15:0, x15:0 + x7:0, x11:0, x12:0, x13:0, x14:0) :|: x3:0 <= x14:0 && x2:0 <= x13:0 && x1:0 <= x12:0 && x:0 <= x11:0 && x15:0 > -1 && x14:0 > 3 && x13:0 > 3 && x12:0 > 3 && x11:0 > 3 && x10:0 > 1 && x15:0 + x7:0 > 0 && x8:0 > 1 && x7:0 > 0 && x6:0 > 0 && x5:0 > 0 && x4:0 < 0 && x3:0 > 0 && x2:0 > 0 && x1:0 > 0 && x7:0 <= x15:0 + x7:0 && x:0 > 0 && sum~x15:0~x7:0 = x15:0 + x7:0


----------------------------------------

(34)
YES

----------------------------------------

(35)
Obligation:
SCC
----------------------------------------

(36) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 11 rulesP rules:
f_456(v1431, v1432, v1433, v1434, v1435, v1436, 1, v1438, v1439, v1441, v1440, v1442, v1443, v1444, v1445, 0, 3, 4) -> f_467(v1431, v1432, v1433, v1434, v1435, v1436, 1, v1438, v1439, v1441, v1440, v1442, v1443, v1444, v1445, 0, 3, 4) :|: 0 = 0
f_467(v1431, v1432, v1433, v1434, v1435, v1436, 1, v1438, v1439, v1441, v1440, v1442, v1443, v1444, v1445, 0, 3, 4) -> f_479(v1431, v1432, v1433, v1434, v1435, v1436, 1, v1438, v1439, v1441, v1440, v1442, v1443, v1444, v1445, 0, 3, 2, 4) :|: v1439 <= v1441 && 1 <= v1441 && 2 <= v1440
f_479(v1431, v1432, v1433, v1434, v1435, v1436, 1, v1438, v1439, v1441, v1440, v1442, v1443, v1444, v1445, 0, 3, 2, 4) -> f_492(v1431, v1432, v1433, v1434, v1435, v1436, 1, v1438, v1439, v1441, v1440, v1442, v1443, v1444, v1445, 0, 3, 2, 4) :|: 0 = 0
f_492(v1431, v1432, v1433, v1434, v1435, v1436, 1, v1438, v1439, v1441, v1440, v1442, v1443, v1444, v1445, 0, 3, 2, 4) -> f_504(v1431, v1432, v1433, v1434, v1435, v1436, 1, v1438, v1439, v1441, v1440, v1442, v1443, v1444, v1445, 0, 3, 2, 4) :|: TRUE
f_504(v1431, v1432, v1433, v1434, v1435, v1436, 1, v1438, v1439, v1441, v1440, v1442, v1443, v1444, v1445, 0, 3, 2, 4) -> f_519(v1431, v1432, v1433, v1434, v1435, v1436, 1, v1438, v1439, v1441, v1442, v1443, v1444, v1445, 0, 3, 4) :|: 0 = 0
f_519(v1431, v1432, v1433, v1434, v1435, v1436, 1, v1438, v1439, v1441, v1442, v1443, v1444, v1445, 0, 3, 4) -> f_534(v1431, v1432, v1433, v1434, v1435, v1436, 1, v1438, v1439, v1441, v1442, v1443, v1444, v1445, 0, 3, 4) :|: 0 = 0
f_534(v1431, v1432, v1433, v1434, v1435, v1436, 1, v1438, v1439, v1441, v1442, v1443, v1444, v1445, 0, 3, 4) -> f_548(v1431, v1432, v1433, v1434, v1435, v1436, 1, v1438, v1439, v1441, v2971, v1442, v1443, v1444, v1445, 0, 3, 4) :|: v2971 + v1439 = v1441 && 0 <= v2971
f_548(v1431, v1432, v1433, v1434, v1435, v1436, 1, v1438, v1439, v1441, v2971, v1442, v1443, v1444, v1445, 0, 3, 4) -> f_562(v1431, v1432, v1433, v1434, v1435, v1436, 1, v1438, v1439, v1441, v2971, v1442, v1443, v1444, v1445, 0, 3, 4) :|: TRUE
f_562(v1431, v1432, v1433, v1434, v1435, v1436, 1, v1438, v1439, v1441, v2971, v1442, v1443, v1444, v1445, 0, 3, 4) -> f_577(v1431, v1432, v1433, v1434, v1435, v1436, 1, v1438, v1439, v1441, v2971, v1442, v1443, v1444, v1445, 0, 3, 4) :|: TRUE
f_577(v1431, v1432, v1433, v1434, v1435, v1436, 1, v1438, v1439, v1441, v2971, v1442, v1443, v1444, v1445, 0, 3, 4) -> f_445(v1431, v1432, v1433, v1434, v1435, v1436, 1, v1438, v1439, v1441, v2971, v1442, v1443, v1444, v1445, 0, 3, 4) :|: 1 <= v1431 && 1 <= v1432 && 1 <= v1433 && 1 <= v1434 && 1 + v1435 <= 0 && 1 + v1436 <= 0 && 1 <= v1438 && 1 <= v1439 && 1 <= v1441 && 0 <= v2971 && 4 <= v1442 && 4 <= v1443 && 4 <= v1444 && 4 <= v1445 && v1431 <= v1442 && v1432 <= v1443 && v1433 <= v1444 && v1434 <= v1445
f_445(v1431, v1432, v1433, v1434, v1435, v1436, 1, v1438, v1439, v1440, v1441, v1442, v1443, v1444, v1445, 0, 3, 4) -> f_456(v1431, v1432, v1433, v1434, v1435, v1436, 1, v1438, v1439, v1441, v1440, v1442, v1443, v1444, v1445, 0, 3, 4) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_456(v1431:0, v1432:0, v1433:0, v1434:0, v1435:0, v1436:0, 1, v1438:0, v1439:0, v2971:0 + v1439:0, v1440:0, v1442:0, v1443:0, v1444:0, v1445:0, 0, 3, 4) -> f_456(v1431:0, v1432:0, v1433:0, v1434:0, v1435:0, v1436:0, 1, v1438:0, v1439:0, v2971:0, v2971:0 + v1439:0, v1442:0, v1443:0, v1444:0, v1445:0, 0, 3, 4) :|: v1432:0 > 0 && v1431:0 > 0 && v1433:0 > 0 && v1434:0 > 0 && v1435:0 < 0 && v1436:0 < 0 && v1438:0 > 0 && v1439:0 > 0 && v2971:0 + v1439:0 > 0 && v2971:0 + v1439:0 >= v1439:0 && v2971:0 > -1 && v1440:0 > 1 && v1442:0 > 3 && v1443:0 > 3 && v1444:0 > 3 && v1445:0 > 3 && v1442:0 >= v1431:0 && v1443:0 >= v1432:0 && v1445:0 >= v1434:0 && v1444:0 >= v1433:0
Filtered unneeded arguments:
   f_456(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18) -> f_456(x1, x2, x3, x4, x5, x6, x8, x9, x10, x11, x12, x13, x14, x15)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_456(v1431:0, v1432:0, v1433:0, v1434:0, v1435:0, v1436:0, v1438:0, v1439:0, sum~v2971:0~v1439:0, v1440:0, v1442:0, v1443:0, v1444:0, v1445:0) -> f_456(v1431:0, v1432:0, v1433:0, v1434:0, v1435:0, v1436:0, v1438:0, v1439:0, v2971:0, v2971:0 + v1439:0, v1442:0, v1443:0, v1444:0, v1445:0) :|: v1431:0 > 0 && v1432:0 > 0 && v1433:0 > 0 && v1434:0 > 0 && v1435:0 < 0 && v1436:0 < 0 && v1438:0 > 0 && v1439:0 > 0 && v2971:0 + v1439:0 > 0 && v2971:0 + v1439:0 >= v1439:0 && v2971:0 > -1 && v1440:0 > 1 && v1442:0 > 3 && v1443:0 > 3 && v1444:0 > 3 && v1445:0 > 3 && v1442:0 >= v1431:0 && v1443:0 >= v1432:0 && v1444:0 >= v1433:0 && v1445:0 >= v1434:0 && sum~v2971:0~v1439:0 = v2971:0 + v1439:0

----------------------------------------

(37)
Obligation:
Rules:
f_456(v1431:0, v1432:0, v1433:0, v1434:0, v1435:0, v1436:0, v1438:0, v1439:0, sum~v2971:0~v1439:0, v1440:0, v1442:0, v1443:0, v1444:0, v1445:0) -> f_456(v1431:0, v1432:0, v1433:0, v1434:0, v1435:0, v1436:0, v1438:0, v1439:0, v2971:0, v2971:0 + v1439:0, v1442:0, v1443:0, v1444:0, v1445:0) :|: v1431:0 > 0 && v1432:0 > 0 && v1433:0 > 0 && v1434:0 > 0 && v1435:0 < 0 && v1436:0 < 0 && v1438:0 > 0 && v1439:0 > 0 && v2971:0 + v1439:0 > 0 && v2971:0 + v1439:0 >= v1439:0 && v2971:0 > -1 && v1440:0 > 1 && v1442:0 > 3 && v1443:0 > 3 && v1444:0 > 3 && v1445:0 > 3 && v1442:0 >= v1431:0 && v1443:0 >= v1432:0 && v1444:0 >= v1433:0 && v1445:0 >= v1434:0 && sum~v2971:0~v1439:0 = v2971:0 + v1439:0

----------------------------------------

(38) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(39)
Obligation:
Rules:
f_456(v1431:0:0, v1432:0:0, v1433:0:0, v1434:0:0, v1435:0:0, v1436:0:0, v1438:0:0, v1439:0:0, sum~v2971:0:0~v1439:0:0, v1440:0:0, v1442:0:0, v1443:0:0, v1444:0:0, v1445:0:0) -> f_456(v1431:0:0, v1432:0:0, v1433:0:0, v1434:0:0, v1435:0:0, v1436:0:0, v1438:0:0, v1439:0:0, v2971:0:0, v2971:0:0 + v1439:0:0, v1442:0:0, v1443:0:0, v1444:0:0, v1445:0:0) :|: v1444:0:0 >= v1433:0:0 && v1445:0:0 >= v1434:0:0 && v1443:0:0 >= v1432:0:0 && v1442:0:0 >= v1431:0:0 && v1445:0:0 > 3 && v1444:0:0 > 3 && v1443:0:0 > 3 && v1442:0:0 > 3 && v1440:0:0 > 1 && v2971:0:0 > -1 && v2971:0:0 + v1439:0:0 >= v1439:0:0 && v2971:0:0 + v1439:0:0 > 0 && v1439:0:0 > 0 && v1438:0:0 > 0 && v1436:0:0 < 0 && v1435:0:0 < 0 && v1434:0:0 > 0 && v1433:0:0 > 0 && v1432:0:0 > 0 && v1431:0:0 > 0 && sum~v2971:0:0~v1439:0:0 = v2971:0:0 + v1439:0:0

----------------------------------------

(40) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_456 ] = f_456_9

The following rules are decreasing:
f_456(v1431:0:0, v1432:0:0, v1433:0:0, v1434:0:0, v1435:0:0, v1436:0:0, v1438:0:0, v1439:0:0, sum~v2971:0:0~v1439:0:0, v1440:0:0, v1442:0:0, v1443:0:0, v1444:0:0, v1445:0:0) -> f_456(v1431:0:0, v1432:0:0, v1433:0:0, v1434:0:0, v1435:0:0, v1436:0:0, v1438:0:0, v1439:0:0, v2971:0:0, v2971:0:0 + v1439:0:0, v1442:0:0, v1443:0:0, v1444:0:0, v1445:0:0) :|: v1444:0:0 >= v1433:0:0 && v1445:0:0 >= v1434:0:0 && v1443:0:0 >= v1432:0:0 && v1442:0:0 >= v1431:0:0 && v1445:0:0 > 3 && v1444:0:0 > 3 && v1443:0:0 > 3 && v1442:0:0 > 3 && v1440:0:0 > 1 && v2971:0:0 > -1 && v2971:0:0 + v1439:0:0 >= v1439:0:0 && v2971:0:0 + v1439:0:0 > 0 && v1439:0:0 > 0 && v1438:0:0 > 0 && v1436:0:0 < 0 && v1435:0:0 < 0 && v1434:0:0 > 0 && v1433:0:0 > 0 && v1432:0:0 > 0 && v1431:0:0 > 0 && sum~v2971:0:0~v1439:0:0 = v2971:0:0 + v1439:0:0

The following rules are bounded:
f_456(v1431:0:0, v1432:0:0, v1433:0:0, v1434:0:0, v1435:0:0, v1436:0:0, v1438:0:0, v1439:0:0, sum~v2971:0:0~v1439:0:0, v1440:0:0, v1442:0:0, v1443:0:0, v1444:0:0, v1445:0:0) -> f_456(v1431:0:0, v1432:0:0, v1433:0:0, v1434:0:0, v1435:0:0, v1436:0:0, v1438:0:0, v1439:0:0, v2971:0:0, v2971:0:0 + v1439:0:0, v1442:0:0, v1443:0:0, v1444:0:0, v1445:0:0) :|: v1444:0:0 >= v1433:0:0 && v1445:0:0 >= v1434:0:0 && v1443:0:0 >= v1432:0:0 && v1442:0:0 >= v1431:0:0 && v1445:0:0 > 3 && v1444:0:0 > 3 && v1443:0:0 > 3 && v1442:0:0 > 3 && v1440:0:0 > 1 && v2971:0:0 > -1 && v2971:0:0 + v1439:0:0 >= v1439:0:0 && v2971:0:0 + v1439:0:0 > 0 && v1439:0:0 > 0 && v1438:0:0 > 0 && v1436:0:0 < 0 && v1435:0:0 < 0 && v1434:0:0 > 0 && v1433:0:0 > 0 && v1432:0:0 > 0 && v1431:0:0 > 0 && sum~v2971:0:0~v1439:0:0 = v2971:0:0 + v1439:0:0


----------------------------------------

(41)
YES

----------------------------------------

(42)
Obligation:
SCC
----------------------------------------

(43) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 11 rulesP rules:
f_426(v1152, v1153, v1154, v1155, v1156, v1157, 1, v1159, 0, v1162, v1161, v1163, v1164, v1165, v1166, 3, 4) -> f_436(v1152, v1153, v1154, v1155, v1156, v1157, 1, v1159, 0, v1162, v1161, v1163, v1164, v1165, v1166, 3, 4) :|: 0 = 0
f_436(v1152, v1153, v1154, v1155, v1156, v1157, 1, v1159, 0, v1162, v1161, v1163, v1164, v1165, v1166, 3, 4) -> f_447(v1152, v1153, v1154, v1155, v1156, v1157, 1, v1159, 0, v1162, v1161, v1163, v1164, v1165, v1166, 3, 2, 4) :|: v1157 <= v1162 && 1 <= v1162 && 2 <= v1161
f_447(v1152, v1153, v1154, v1155, v1156, v1157, 1, v1159, 0, v1162, v1161, v1163, v1164, v1165, v1166, 3, 2, 4) -> f_458(v1152, v1153, v1154, v1155, v1156, v1157, 1, v1159, 0, v1162, v1161, v1163, v1164, v1165, v1166, 3, 2, 4) :|: 0 = 0
f_458(v1152, v1153, v1154, v1155, v1156, v1157, 1, v1159, 0, v1162, v1161, v1163, v1164, v1165, v1166, 3, 2, 4) -> f_469(v1152, v1153, v1154, v1155, v1156, v1157, 1, v1159, 0, v1162, v1161, v1163, v1164, v1165, v1166, 3, 2, 4) :|: TRUE
f_469(v1152, v1153, v1154, v1155, v1156, v1157, 1, v1159, 0, v1162, v1161, v1163, v1164, v1165, v1166, 3, 2, 4) -> f_482(v1152, v1153, v1154, v1155, v1156, v1157, 1, v1159, 0, v1162, v1163, v1164, v1165, v1166, 3, 4) :|: 0 = 0
f_482(v1152, v1153, v1154, v1155, v1156, v1157, 1, v1159, 0, v1162, v1163, v1164, v1165, v1166, 3, 4) -> f_495(v1152, v1153, v1154, v1155, v1156, v1157, 1, v1159, 0, v1162, v1163, v1164, v1165, v1166, 3, 4) :|: 0 = 0
f_495(v1152, v1153, v1154, v1155, v1156, v1157, 1, v1159, 0, v1162, v1163, v1164, v1165, v1166, 3, 4) -> f_507(v1152, v1153, v1154, v1155, v1156, v1157, 1, v1159, 0, v1162, v2296, v1163, v1164, v1165, v1166, 3, 4) :|: v2296 + v1157 = v1162 && 0 <= v2296
f_507(v1152, v1153, v1154, v1155, v1156, v1157, 1, v1159, 0, v1162, v2296, v1163, v1164, v1165, v1166, 3, 4) -> f_522(v1152, v1153, v1154, v1155, v1156, v1157, 1, v1159, 0, v1162, v2296, v1163, v1164, v1165, v1166, 3, 4) :|: TRUE
f_522(v1152, v1153, v1154, v1155, v1156, v1157, 1, v1159, 0, v1162, v2296, v1163, v1164, v1165, v1166, 3, 4) -> f_537(v1152, v1153, v1154, v1155, v1156, v1157, 1, v1159, 0, v1162, v2296, v1163, v1164, v1165, v1166, 3, 4) :|: TRUE
f_537(v1152, v1153, v1154, v1155, v1156, v1157, 1, v1159, 0, v1162, v2296, v1163, v1164, v1165, v1166, 3, 4) -> f_416(v1152, v1153, v1154, v1155, v1156, v1157, 1, v1159, 0, v1162, v2296, v1163, v1164, v1165, v1166, 3, 4) :|: 1 <= v1152 && 1 <= v1153 && 1 <= v1154 && 1 <= v1155 && 1 + v1156 <= 0 && 1 <= v1157 && 1 <= v1159 && 1 <= v1162 && 0 <= v2296 && 4 <= v1163 && 4 <= v1164 && 4 <= v1165 && 4 <= v1166 && v1152 <= v1163 && v1153 <= v1164 && v1154 <= v1165 && v1155 <= v1166
f_416(v1152, v1153, v1154, v1155, v1156, v1157, 1, v1159, 0, v1161, v1162, v1163, v1164, v1165, v1166, 3, 4) -> f_426(v1152, v1153, v1154, v1155, v1156, v1157, 1, v1159, 0, v1162, v1161, v1163, v1164, v1165, v1166, 3, 4) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_426(v1152:0, v1153:0, v1154:0, v1155:0, v1156:0, v1157:0, 1, v1159:0, 0, v2296:0 + v1157:0, v1161:0, v1163:0, v1164:0, v1165:0, v1166:0, 3, 4) -> f_426(v1152:0, v1153:0, v1154:0, v1155:0, v1156:0, v1157:0, 1, v1159:0, 0, v2296:0, v2296:0 + v1157:0, v1163:0, v1164:0, v1165:0, v1166:0, 3, 4) :|: v1153:0 > 0 && v1152:0 > 0 && v1154:0 > 0 && v1155:0 > 0 && v1156:0 < 0 && v1157:0 > 0 && v1159:0 > 0 && v2296:0 + v1157:0 > 0 && v2296:0 + v1157:0 >= v1157:0 && v2296:0 > -1 && v1161:0 > 1 && v1163:0 > 3 && v1164:0 > 3 && v1165:0 > 3 && v1166:0 > 3 && v1163:0 >= v1152:0 && v1164:0 >= v1153:0 && v1166:0 >= v1155:0 && v1165:0 >= v1154:0
Filtered unneeded arguments:
   f_426(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17) -> f_426(x1, x2, x3, x4, x5, x6, x8, x10, x11, x12, x13, x14, x15)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_426(v1152:0, v1153:0, v1154:0, v1155:0, v1156:0, v1157:0, v1159:0, sum~v2296:0~v1157:0, v1161:0, v1163:0, v1164:0, v1165:0, v1166:0) -> f_426(v1152:0, v1153:0, v1154:0, v1155:0, v1156:0, v1157:0, v1159:0, v2296:0, v2296:0 + v1157:0, v1163:0, v1164:0, v1165:0, v1166:0) :|: v1152:0 > 0 && v1153:0 > 0 && v1154:0 > 0 && v1155:0 > 0 && v1156:0 < 0 && v1157:0 > 0 && v1159:0 > 0 && v2296:0 + v1157:0 > 0 && v2296:0 + v1157:0 >= v1157:0 && v2296:0 > -1 && v1161:0 > 1 && v1163:0 > 3 && v1164:0 > 3 && v1165:0 > 3 && v1166:0 > 3 && v1163:0 >= v1152:0 && v1164:0 >= v1153:0 && v1165:0 >= v1154:0 && v1166:0 >= v1155:0 && sum~v2296:0~v1157:0 = v2296:0 + v1157:0

----------------------------------------

(44)
Obligation:
Rules:
f_426(v1152:0, v1153:0, v1154:0, v1155:0, v1156:0, v1157:0, v1159:0, sum~v2296:0~v1157:0, v1161:0, v1163:0, v1164:0, v1165:0, v1166:0) -> f_426(v1152:0, v1153:0, v1154:0, v1155:0, v1156:0, v1157:0, v1159:0, v2296:0, v2296:0 + v1157:0, v1163:0, v1164:0, v1165:0, v1166:0) :|: v1152:0 > 0 && v1153:0 > 0 && v1154:0 > 0 && v1155:0 > 0 && v1156:0 < 0 && v1157:0 > 0 && v1159:0 > 0 && v2296:0 + v1157:0 > 0 && v2296:0 + v1157:0 >= v1157:0 && v2296:0 > -1 && v1161:0 > 1 && v1163:0 > 3 && v1164:0 > 3 && v1165:0 > 3 && v1166:0 > 3 && v1163:0 >= v1152:0 && v1164:0 >= v1153:0 && v1165:0 >= v1154:0 && v1166:0 >= v1155:0 && sum~v2296:0~v1157:0 = v2296:0 + v1157:0

----------------------------------------

(45) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(46)
Obligation:
Rules:
f_426(v1152:0:0, v1153:0:0, v1154:0:0, v1155:0:0, v1156:0:0, v1157:0:0, v1159:0:0, sum~v2296:0:0~v1157:0:0, v1161:0:0, v1163:0:0, v1164:0:0, v1165:0:0, v1166:0:0) -> f_426(v1152:0:0, v1153:0:0, v1154:0:0, v1155:0:0, v1156:0:0, v1157:0:0, v1159:0:0, v2296:0:0, v2296:0:0 + v1157:0:0, v1163:0:0, v1164:0:0, v1165:0:0, v1166:0:0) :|: v1165:0:0 >= v1154:0:0 && v1166:0:0 >= v1155:0:0 && v1164:0:0 >= v1153:0:0 && v1163:0:0 >= v1152:0:0 && v1166:0:0 > 3 && v1165:0:0 > 3 && v1164:0:0 > 3 && v1163:0:0 > 3 && v1161:0:0 > 1 && v2296:0:0 > -1 && v2296:0:0 + v1157:0:0 >= v1157:0:0 && v2296:0:0 + v1157:0:0 > 0 && v1159:0:0 > 0 && v1157:0:0 > 0 && v1156:0:0 < 0 && v1155:0:0 > 0 && v1154:0:0 > 0 && v1153:0:0 > 0 && v1152:0:0 > 0 && sum~v2296:0:0~v1157:0:0 = v2296:0:0 + v1157:0:0

----------------------------------------

(47) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_426 ] = f_426_8

The following rules are decreasing:
f_426(v1152:0:0, v1153:0:0, v1154:0:0, v1155:0:0, v1156:0:0, v1157:0:0, v1159:0:0, sum~v2296:0:0~v1157:0:0, v1161:0:0, v1163:0:0, v1164:0:0, v1165:0:0, v1166:0:0) -> f_426(v1152:0:0, v1153:0:0, v1154:0:0, v1155:0:0, v1156:0:0, v1157:0:0, v1159:0:0, v2296:0:0, v2296:0:0 + v1157:0:0, v1163:0:0, v1164:0:0, v1165:0:0, v1166:0:0) :|: v1165:0:0 >= v1154:0:0 && v1166:0:0 >= v1155:0:0 && v1164:0:0 >= v1153:0:0 && v1163:0:0 >= v1152:0:0 && v1166:0:0 > 3 && v1165:0:0 > 3 && v1164:0:0 > 3 && v1163:0:0 > 3 && v1161:0:0 > 1 && v2296:0:0 > -1 && v2296:0:0 + v1157:0:0 >= v1157:0:0 && v2296:0:0 + v1157:0:0 > 0 && v1159:0:0 > 0 && v1157:0:0 > 0 && v1156:0:0 < 0 && v1155:0:0 > 0 && v1154:0:0 > 0 && v1153:0:0 > 0 && v1152:0:0 > 0 && sum~v2296:0:0~v1157:0:0 = v2296:0:0 + v1157:0:0

The following rules are bounded:
f_426(v1152:0:0, v1153:0:0, v1154:0:0, v1155:0:0, v1156:0:0, v1157:0:0, v1159:0:0, sum~v2296:0:0~v1157:0:0, v1161:0:0, v1163:0:0, v1164:0:0, v1165:0:0, v1166:0:0) -> f_426(v1152:0:0, v1153:0:0, v1154:0:0, v1155:0:0, v1156:0:0, v1157:0:0, v1159:0:0, v2296:0:0, v2296:0:0 + v1157:0:0, v1163:0:0, v1164:0:0, v1165:0:0, v1166:0:0) :|: v1165:0:0 >= v1154:0:0 && v1166:0:0 >= v1155:0:0 && v1164:0:0 >= v1153:0:0 && v1163:0:0 >= v1152:0:0 && v1166:0:0 > 3 && v1165:0:0 > 3 && v1164:0:0 > 3 && v1163:0:0 > 3 && v1161:0:0 > 1 && v2296:0:0 > -1 && v2296:0:0 + v1157:0:0 >= v1157:0:0 && v2296:0:0 + v1157:0:0 > 0 && v1159:0:0 > 0 && v1157:0:0 > 0 && v1156:0:0 < 0 && v1155:0:0 > 0 && v1154:0:0 > 0 && v1153:0:0 > 0 && v1152:0:0 > 0 && sum~v2296:0:0~v1157:0:0 = v2296:0:0 + v1157:0:0


----------------------------------------

(48)
YES

----------------------------------------

(49)
Obligation:
SCC
----------------------------------------

(50) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 11 rulesP rules:
f_418(v1064, v1065, v1066, v1067, v1068, v1069, 0, 1, v1072, v1074, v1073, v1075, v1076, v1077, v1078, 3, 4) -> f_428(v1064, v1065, v1066, v1067, v1068, v1069, 0, 1, v1072, v1074, v1073, v1075, v1076, v1077, v1078, 3, 4) :|: 0 = 0
f_428(v1064, v1065, v1066, v1067, v1068, v1069, 0, 1, v1072, v1074, v1073, v1075, v1076, v1077, v1078, 3, 4) -> f_438(v1064, v1065, v1066, v1067, v1068, v1069, 0, 1, v1072, v1074, v1073, v1075, v1076, v1077, v1078, 3, 2, 4) :|: v1072 <= v1074 && 1 <= v1074 && 2 <= v1073
f_438(v1064, v1065, v1066, v1067, v1068, v1069, 0, 1, v1072, v1074, v1073, v1075, v1076, v1077, v1078, 3, 2, 4) -> f_450(v1064, v1065, v1066, v1067, v1068, v1069, 0, 1, v1072, v1074, v1073, v1075, v1076, v1077, v1078, 3, 2, 4) :|: 0 = 0
f_450(v1064, v1065, v1066, v1067, v1068, v1069, 0, 1, v1072, v1074, v1073, v1075, v1076, v1077, v1078, 3, 2, 4) -> f_461(v1064, v1065, v1066, v1067, v1068, v1069, 0, 1, v1072, v1074, v1073, v1075, v1076, v1077, v1078, 3, 2, 4) :|: TRUE
f_461(v1064, v1065, v1066, v1067, v1068, v1069, 0, 1, v1072, v1074, v1073, v1075, v1076, v1077, v1078, 3, 2, 4) -> f_472(v1064, v1065, v1066, v1067, v1068, v1069, 0, 1, v1072, v1074, v1075, v1076, v1077, v1078, 3, 4) :|: 0 = 0
f_472(v1064, v1065, v1066, v1067, v1068, v1069, 0, 1, v1072, v1074, v1075, v1076, v1077, v1078, 3, 4) -> f_485(v1064, v1065, v1066, v1067, v1068, v1069, 0, 1, v1072, v1074, v1075, v1076, v1077, v1078, 3, 4) :|: 0 = 0
f_485(v1064, v1065, v1066, v1067, v1068, v1069, 0, 1, v1072, v1074, v1075, v1076, v1077, v1078, 3, 4) -> f_498(v1064, v1065, v1066, v1067, v1068, v1069, 0, 1, v1072, v1074, v1999, v1075, v1076, v1077, v1078, 3, 4) :|: v1999 + v1072 = v1074 && 0 <= v1999
f_498(v1064, v1065, v1066, v1067, v1068, v1069, 0, 1, v1072, v1074, v1999, v1075, v1076, v1077, v1078, 3, 4) -> f_511(v1064, v1065, v1066, v1067, v1068, v1069, 0, 1, v1072, v1074, v1999, v1075, v1076, v1077, v1078, 3, 4) :|: TRUE
f_511(v1064, v1065, v1066, v1067, v1068, v1069, 0, 1, v1072, v1074, v1999, v1075, v1076, v1077, v1078, 3, 4) -> f_526(v1064, v1065, v1066, v1067, v1068, v1069, 0, 1, v1072, v1074, v1999, v1075, v1076, v1077, v1078, 3, 4) :|: TRUE
f_526(v1064, v1065, v1066, v1067, v1068, v1069, 0, 1, v1072, v1074, v1999, v1075, v1076, v1077, v1078, 3, 4) -> f_407(v1064, v1065, v1066, v1067, v1068, v1069, 0, 1, v1072, v1074, v1999, v1075, v1076, v1077, v1078, 3, 4) :|: 1 <= v1064 && 1 <= v1065 && 1 <= v1066 && 1 <= v1067 && 1 <= v1068 && 1 + v1069 <= 0 && 1 <= v1072 && 1 <= v1074 && 0 <= v1999 && 4 <= v1075 && 4 <= v1076 && 4 <= v1077 && 4 <= v1078 && v1064 <= v1075 && v1065 <= v1076 && v1066 <= v1077 && v1067 <= v1078
f_407(v1064, v1065, v1066, v1067, v1068, v1069, 0, 1, v1072, v1073, v1074, v1075, v1076, v1077, v1078, 3, 4) -> f_418(v1064, v1065, v1066, v1067, v1068, v1069, 0, 1, v1072, v1074, v1073, v1075, v1076, v1077, v1078, 3, 4) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_418(v1064:0, v1065:0, v1066:0, v1067:0, v1068:0, v1069:0, 0, 1, v1072:0, v1999:0 + v1072:0, v1073:0, v1075:0, v1076:0, v1077:0, v1078:0, 3, 4) -> f_418(v1064:0, v1065:0, v1066:0, v1067:0, v1068:0, v1069:0, 0, 1, v1072:0, v1999:0, v1999:0 + v1072:0, v1075:0, v1076:0, v1077:0, v1078:0, 3, 4) :|: v1065:0 > 0 && v1064:0 > 0 && v1066:0 > 0 && v1067:0 > 0 && v1068:0 > 0 && v1069:0 < 0 && v1072:0 > 0 && v1999:0 + v1072:0 > 0 && v1999:0 + v1072:0 >= v1072:0 && v1999:0 > -1 && v1073:0 > 1 && v1075:0 > 3 && v1076:0 > 3 && v1077:0 > 3 && v1078:0 > 3 && v1075:0 >= v1064:0 && v1076:0 >= v1065:0 && v1078:0 >= v1067:0 && v1077:0 >= v1066:0
Filtered unneeded arguments:
   f_418(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17) -> f_418(x1, x2, x3, x4, x5, x6, x9, x10, x11, x12, x13, x14, x15)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_418(v1064:0, v1065:0, v1066:0, v1067:0, v1068:0, v1069:0, v1072:0, sum~v1999:0~v1072:0, v1073:0, v1075:0, v1076:0, v1077:0, v1078:0) -> f_418(v1064:0, v1065:0, v1066:0, v1067:0, v1068:0, v1069:0, v1072:0, v1999:0, v1999:0 + v1072:0, v1075:0, v1076:0, v1077:0, v1078:0) :|: v1064:0 > 0 && v1065:0 > 0 && v1066:0 > 0 && v1067:0 > 0 && v1068:0 > 0 && v1069:0 < 0 && v1072:0 > 0 && v1999:0 + v1072:0 > 0 && v1999:0 + v1072:0 >= v1072:0 && v1999:0 > -1 && v1073:0 > 1 && v1075:0 > 3 && v1076:0 > 3 && v1077:0 > 3 && v1078:0 > 3 && v1075:0 >= v1064:0 && v1076:0 >= v1065:0 && v1077:0 >= v1066:0 && v1078:0 >= v1067:0 && sum~v1999:0~v1072:0 = v1999:0 + v1072:0

----------------------------------------

(51)
Obligation:
Rules:
f_418(v1064:0, v1065:0, v1066:0, v1067:0, v1068:0, v1069:0, v1072:0, sum~v1999:0~v1072:0, v1073:0, v1075:0, v1076:0, v1077:0, v1078:0) -> f_418(v1064:0, v1065:0, v1066:0, v1067:0, v1068:0, v1069:0, v1072:0, v1999:0, v1999:0 + v1072:0, v1075:0, v1076:0, v1077:0, v1078:0) :|: v1064:0 > 0 && v1065:0 > 0 && v1066:0 > 0 && v1067:0 > 0 && v1068:0 > 0 && v1069:0 < 0 && v1072:0 > 0 && v1999:0 + v1072:0 > 0 && v1999:0 + v1072:0 >= v1072:0 && v1999:0 > -1 && v1073:0 > 1 && v1075:0 > 3 && v1076:0 > 3 && v1077:0 > 3 && v1078:0 > 3 && v1075:0 >= v1064:0 && v1076:0 >= v1065:0 && v1077:0 >= v1066:0 && v1078:0 >= v1067:0 && sum~v1999:0~v1072:0 = v1999:0 + v1072:0

----------------------------------------

(52) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(53)
Obligation:
Rules:
f_418(v1064:0:0, v1065:0:0, v1066:0:0, v1067:0:0, v1068:0:0, v1069:0:0, v1072:0:0, sum~v1999:0:0~v1072:0:0, v1073:0:0, v1075:0:0, v1076:0:0, v1077:0:0, v1078:0:0) -> f_418(v1064:0:0, v1065:0:0, v1066:0:0, v1067:0:0, v1068:0:0, v1069:0:0, v1072:0:0, v1999:0:0, v1999:0:0 + v1072:0:0, v1075:0:0, v1076:0:0, v1077:0:0, v1078:0:0) :|: v1077:0:0 >= v1066:0:0 && v1078:0:0 >= v1067:0:0 && v1076:0:0 >= v1065:0:0 && v1075:0:0 >= v1064:0:0 && v1078:0:0 > 3 && v1077:0:0 > 3 && v1076:0:0 > 3 && v1075:0:0 > 3 && v1073:0:0 > 1 && v1999:0:0 > -1 && v1999:0:0 + v1072:0:0 >= v1072:0:0 && v1999:0:0 + v1072:0:0 > 0 && v1072:0:0 > 0 && v1069:0:0 < 0 && v1068:0:0 > 0 && v1067:0:0 > 0 && v1066:0:0 > 0 && v1065:0:0 > 0 && v1064:0:0 > 0 && sum~v1999:0:0~v1072:0:0 = v1999:0:0 + v1072:0:0

----------------------------------------

(54) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_418 ] = f_418_8

The following rules are decreasing:
f_418(v1064:0:0, v1065:0:0, v1066:0:0, v1067:0:0, v1068:0:0, v1069:0:0, v1072:0:0, sum~v1999:0:0~v1072:0:0, v1073:0:0, v1075:0:0, v1076:0:0, v1077:0:0, v1078:0:0) -> f_418(v1064:0:0, v1065:0:0, v1066:0:0, v1067:0:0, v1068:0:0, v1069:0:0, v1072:0:0, v1999:0:0, v1999:0:0 + v1072:0:0, v1075:0:0, v1076:0:0, v1077:0:0, v1078:0:0) :|: v1077:0:0 >= v1066:0:0 && v1078:0:0 >= v1067:0:0 && v1076:0:0 >= v1065:0:0 && v1075:0:0 >= v1064:0:0 && v1078:0:0 > 3 && v1077:0:0 > 3 && v1076:0:0 > 3 && v1075:0:0 > 3 && v1073:0:0 > 1 && v1999:0:0 > -1 && v1999:0:0 + v1072:0:0 >= v1072:0:0 && v1999:0:0 + v1072:0:0 > 0 && v1072:0:0 > 0 && v1069:0:0 < 0 && v1068:0:0 > 0 && v1067:0:0 > 0 && v1066:0:0 > 0 && v1065:0:0 > 0 && v1064:0:0 > 0 && sum~v1999:0:0~v1072:0:0 = v1999:0:0 + v1072:0:0

The following rules are bounded:
f_418(v1064:0:0, v1065:0:0, v1066:0:0, v1067:0:0, v1068:0:0, v1069:0:0, v1072:0:0, sum~v1999:0:0~v1072:0:0, v1073:0:0, v1075:0:0, v1076:0:0, v1077:0:0, v1078:0:0) -> f_418(v1064:0:0, v1065:0:0, v1066:0:0, v1067:0:0, v1068:0:0, v1069:0:0, v1072:0:0, v1999:0:0, v1999:0:0 + v1072:0:0, v1075:0:0, v1076:0:0, v1077:0:0, v1078:0:0) :|: v1077:0:0 >= v1066:0:0 && v1078:0:0 >= v1067:0:0 && v1076:0:0 >= v1065:0:0 && v1075:0:0 >= v1064:0:0 && v1078:0:0 > 3 && v1077:0:0 > 3 && v1076:0:0 > 3 && v1075:0:0 > 3 && v1073:0:0 > 1 && v1999:0:0 > -1 && v1999:0:0 + v1072:0:0 >= v1072:0:0 && v1999:0:0 + v1072:0:0 > 0 && v1072:0:0 > 0 && v1069:0:0 < 0 && v1068:0:0 > 0 && v1067:0:0 > 0 && v1066:0:0 > 0 && v1065:0:0 > 0 && v1064:0:0 > 0 && sum~v1999:0:0~v1072:0:0 = v1999:0:0 + v1072:0:0


----------------------------------------

(55)
YES

----------------------------------------

(56)
Obligation:
SCC
----------------------------------------

(57) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 11 rulesP rules:
f_387(v815, v816, v817, v818, v819, v820, 0, 1, v824, v823, v825, v826, v827, v828, 3, 4) -> f_398(v815, v816, v817, v818, v819, v820, 0, 1, v824, v823, v825, v826, v827, v828, 3, 4) :|: 0 = 0
f_398(v815, v816, v817, v818, v819, v820, 0, 1, v824, v823, v825, v826, v827, v828, 3, 4) -> f_409(v815, v816, v817, v818, v819, v820, 0, 1, v824, v823, v825, v826, v827, v828, 3, 2, 4) :|: v820 <= v824 && 1 <= v824 && 2 <= v823
f_409(v815, v816, v817, v818, v819, v820, 0, 1, v824, v823, v825, v826, v827, v828, 3, 2, 4) -> f_420(v815, v816, v817, v818, v819, v820, 0, 1, v824, v823, v825, v826, v827, v828, 3, 2, 4) :|: 0 = 0
f_420(v815, v816, v817, v818, v819, v820, 0, 1, v824, v823, v825, v826, v827, v828, 3, 2, 4) -> f_430(v815, v816, v817, v818, v819, v820, 0, 1, v824, v823, v825, v826, v827, v828, 3, 2, 4) :|: TRUE
f_430(v815, v816, v817, v818, v819, v820, 0, 1, v824, v823, v825, v826, v827, v828, 3, 2, 4) -> f_441(v815, v816, v817, v818, v819, v820, 0, 1, v824, v825, v826, v827, v828, 3, 4) :|: 0 = 0
f_441(v815, v816, v817, v818, v819, v820, 0, 1, v824, v825, v826, v827, v828, 3, 4) -> f_453(v815, v816, v817, v818, v819, v820, 0, 1, v824, v825, v826, v827, v828, 3, 4) :|: 0 = 0
f_453(v815, v816, v817, v818, v819, v820, 0, 1, v824, v825, v826, v827, v828, 3, 4) -> f_464(v815, v816, v817, v818, v819, v820, 0, 1, v824, v1609, v825, v826, v827, v828, 3, 4) :|: v1609 + v820 = v824 && 0 <= v1609
f_464(v815, v816, v817, v818, v819, v820, 0, 1, v824, v1609, v825, v826, v827, v828, 3, 4) -> f_475(v815, v816, v817, v818, v819, v820, 0, 1, v824, v1609, v825, v826, v827, v828, 3, 4) :|: TRUE
f_475(v815, v816, v817, v818, v819, v820, 0, 1, v824, v1609, v825, v826, v827, v828, 3, 4) -> f_488(v815, v816, v817, v818, v819, v820, 0, 1, v824, v1609, v825, v826, v827, v828, 3, 4) :|: TRUE
f_488(v815, v816, v817, v818, v819, v820, 0, 1, v824, v1609, v825, v826, v827, v828, 3, 4) -> f_376(v815, v816, v817, v818, v819, v820, 0, 1, v824, v1609, v825, v826, v827, v828, 3, 4) :|: 1 <= v815 && 1 <= v816 && 1 <= v817 && 1 <= v818 && 1 <= v819 && 1 <= v820 && 1 <= v824 && 0 <= v1609 && 4 <= v825 && 4 <= v826 && 4 <= v827 && 4 <= v828 && v815 <= v825 && v816 <= v826 && v817 <= v827 && v818 <= v828
f_376(v815, v816, v817, v818, v819, v820, 0, 1, v823, v824, v825, v826, v827, v828, 3, 4) -> f_387(v815, v816, v817, v818, v819, v820, 0, 1, v824, v823, v825, v826, v827, v828, 3, 4) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_387(v815:0, v816:0, v817:0, v818:0, v819:0, v820:0, 0, 1, v1609:0 + v820:0, v823:0, v825:0, v826:0, v827:0, v828:0, 3, 4) -> f_387(v815:0, v816:0, v817:0, v818:0, v819:0, v820:0, 0, 1, v1609:0, v1609:0 + v820:0, v825:0, v826:0, v827:0, v828:0, 3, 4) :|: v816:0 > 0 && v815:0 > 0 && v817:0 > 0 && v818:0 > 0 && v819:0 > 0 && v820:0 > 0 && v1609:0 + v820:0 > 0 && v820:0 <= v1609:0 + v820:0 && v1609:0 > -1 && v823:0 > 1 && v825:0 > 3 && v826:0 > 3 && v827:0 > 3 && v828:0 > 3 && v825:0 >= v815:0 && v826:0 >= v816:0 && v828:0 >= v818:0 && v827:0 >= v817:0
Filtered unneeded arguments:
   f_387(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16) -> f_387(x1, x2, x3, x4, x5, x6, x9, x10, x11, x12, x13, x14)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_387(v815:0, v816:0, v817:0, v818:0, v819:0, v820:0, sum~v1609:0~v820:0, v823:0, v825:0, v826:0, v827:0, v828:0) -> f_387(v815:0, v816:0, v817:0, v818:0, v819:0, v820:0, v1609:0, v1609:0 + v820:0, v825:0, v826:0, v827:0, v828:0) :|: v815:0 > 0 && v816:0 > 0 && v817:0 > 0 && v818:0 > 0 && v819:0 > 0 && v820:0 > 0 && v1609:0 + v820:0 > 0 && v820:0 <= v1609:0 + v820:0 && v1609:0 > -1 && v823:0 > 1 && v825:0 > 3 && v826:0 > 3 && v827:0 > 3 && v828:0 > 3 && v825:0 >= v815:0 && v826:0 >= v816:0 && v827:0 >= v817:0 && v828:0 >= v818:0 && sum~v1609:0~v820:0 = v1609:0 + v820:0

----------------------------------------

(58)
Obligation:
Rules:
f_387(v815:0, v816:0, v817:0, v818:0, v819:0, v820:0, sum~v1609:0~v820:0, v823:0, v825:0, v826:0, v827:0, v828:0) -> f_387(v815:0, v816:0, v817:0, v818:0, v819:0, v820:0, v1609:0, v1609:0 + v820:0, v825:0, v826:0, v827:0, v828:0) :|: v815:0 > 0 && v816:0 > 0 && v817:0 > 0 && v818:0 > 0 && v819:0 > 0 && v820:0 > 0 && v1609:0 + v820:0 > 0 && v820:0 <= v1609:0 + v820:0 && v1609:0 > -1 && v823:0 > 1 && v825:0 > 3 && v826:0 > 3 && v827:0 > 3 && v828:0 > 3 && v825:0 >= v815:0 && v826:0 >= v816:0 && v827:0 >= v817:0 && v828:0 >= v818:0 && sum~v1609:0~v820:0 = v1609:0 + v820:0

----------------------------------------

(59) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(60)
Obligation:
Rules:
f_387(v815:0:0, v816:0:0, v817:0:0, v818:0:0, v819:0:0, v820:0:0, sum~v1609:0:0~v820:0:0, v823:0:0, v825:0:0, v826:0:0, v827:0:0, v828:0:0) -> f_387(v815:0:0, v816:0:0, v817:0:0, v818:0:0, v819:0:0, v820:0:0, v1609:0:0, v1609:0:0 + v820:0:0, v825:0:0, v826:0:0, v827:0:0, v828:0:0) :|: v827:0:0 >= v817:0:0 && v828:0:0 >= v818:0:0 && v826:0:0 >= v816:0:0 && v825:0:0 >= v815:0:0 && v828:0:0 > 3 && v827:0:0 > 3 && v826:0:0 > 3 && v825:0:0 > 3 && v823:0:0 > 1 && v1609:0:0 > -1 && v820:0:0 <= v1609:0:0 + v820:0:0 && v1609:0:0 + v820:0:0 > 0 && v820:0:0 > 0 && v819:0:0 > 0 && v818:0:0 > 0 && v817:0:0 > 0 && v816:0:0 > 0 && v815:0:0 > 0 && sum~v1609:0:0~v820:0:0 = v1609:0:0 + v820:0:0

----------------------------------------

(61) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_387 ] = f_387_7

The following rules are decreasing:
f_387(v815:0:0, v816:0:0, v817:0:0, v818:0:0, v819:0:0, v820:0:0, sum~v1609:0:0~v820:0:0, v823:0:0, v825:0:0, v826:0:0, v827:0:0, v828:0:0) -> f_387(v815:0:0, v816:0:0, v817:0:0, v818:0:0, v819:0:0, v820:0:0, v1609:0:0, v1609:0:0 + v820:0:0, v825:0:0, v826:0:0, v827:0:0, v828:0:0) :|: v827:0:0 >= v817:0:0 && v828:0:0 >= v818:0:0 && v826:0:0 >= v816:0:0 && v825:0:0 >= v815:0:0 && v828:0:0 > 3 && v827:0:0 > 3 && v826:0:0 > 3 && v825:0:0 > 3 && v823:0:0 > 1 && v1609:0:0 > -1 && v820:0:0 <= v1609:0:0 + v820:0:0 && v1609:0:0 + v820:0:0 > 0 && v820:0:0 > 0 && v819:0:0 > 0 && v818:0:0 > 0 && v817:0:0 > 0 && v816:0:0 > 0 && v815:0:0 > 0 && sum~v1609:0:0~v820:0:0 = v1609:0:0 + v820:0:0

The following rules are bounded:
f_387(v815:0:0, v816:0:0, v817:0:0, v818:0:0, v819:0:0, v820:0:0, sum~v1609:0:0~v820:0:0, v823:0:0, v825:0:0, v826:0:0, v827:0:0, v828:0:0) -> f_387(v815:0:0, v816:0:0, v817:0:0, v818:0:0, v819:0:0, v820:0:0, v1609:0:0, v1609:0:0 + v820:0:0, v825:0:0, v826:0:0, v827:0:0, v828:0:0) :|: v827:0:0 >= v817:0:0 && v828:0:0 >= v818:0:0 && v826:0:0 >= v816:0:0 && v825:0:0 >= v815:0:0 && v828:0:0 > 3 && v827:0:0 > 3 && v826:0:0 > 3 && v825:0:0 > 3 && v823:0:0 > 1 && v1609:0:0 > -1 && v820:0:0 <= v1609:0:0 + v820:0:0 && v1609:0:0 + v820:0:0 > 0 && v820:0:0 > 0 && v819:0:0 > 0 && v818:0:0 > 0 && v817:0:0 > 0 && v816:0:0 > 0 && v815:0:0 > 0 && sum~v1609:0:0~v820:0:0 = v1609:0:0 + v820:0:0


----------------------------------------

(62)
YES
Graph finished, checking  consistency
Graph finished, checked consistency, took 0.001s
