NO
proof of /hpcwork/ff862203/termcomp25/benchmarks/qfSNS.c
# AProVE Commit ID: 48c83ccb80d5f8312cb92f4aa1b51dc35e247e65 nils 20241118 unpublished


Termination of the given C Problem could be disproven:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 18 ms]
(2) LLVM problem
(3) LLVMToTerminationGraphProof [EQUIVALENT, 407 ms]
(4) LLVM Symbolic Execution Graph
(5) SEGraph to IRS [EQUIVALENT, 62 ms]
(6) IntTRS
(7) IRSNoOverapproximation [EQUIVALENT, 0 ms]
(8) IntTRS
(9) IRSToKoat [EQUIVALENT, 0 ms]
(10) Koat Problem
(11) LoAT [COMPLETE, 8397 ms]
(12) NO


----------------------------------------

(0)
Obligation:
c file /hpcwork/ff862203/termcomp25/benchmarks/qfSNS.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /hpcwork/ff862203/termcomp25/benchmarks/qfSNS.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-pc-linux-gnu"

Type definitions:

Global variables:

Function declarations and definitions:

*BasicFunctionTypename: "llvm.dbg.declare" returnParam: BasicVoidType parameters: (BasicMetadataType, BasicMetadataType, BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_nondet_int" returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 7
	0:
		%1 = alloca i32, align 4
		%2 = alloca i32, align 4
		store 0, %1
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %2)
		%3 = call i32 @__VERIFIER_nondet_int()
		store %3, %2
		br %4
	4:
		%5 = load %2
		%6 = icmp sge %5 0
		br %6, %7, %17
	7:
		%8 = call i32 @__VERIFIER_nondet_int()
		%9 = icmp ne %8 0
		br %9, %10, %13
	10:
		%11 = load %2
		%12 = sub i32 %11, 1
		store %12, %2
		br %16
	13:
		%14 = load %2
		%15 = add i32 %14, 1
		store %15, %2
		br %16
	16:
		br %4
	17:
		ret 0


Analyze Termination of all function calls matching the pattern:
main()
----------------------------------------

(3) LLVMToTerminationGraphProof (EQUIVALENT)
Constructed symbolic execution graph for LLVM program.
----------------------------------------

(4)
Obligation:
Symbolic Execution Graph
----------------------------------------

(5) SEGraph to IRS (EQUIVALENT)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 126 rulesP rules:
f_73 -> f_74(v1, v2, 3, 1, 4) :|: 1 <= v1 && v2 = 3 + v1 && 4 <= v2
f_74(v1, v2, 3, 1, 4) -> f_75(v1, v3, v2, v4, 3, 1, 4) :|: 1 <= v3 && v4 = 3 + v3 && 4 <= v4
f_75(v1, v3, v2, v4, 3, 1, 4) -> f_76(v1, v3, v2, v4, 0, 3, 1, 4) :|: TRUE
f_76(v1, v3, v2, v4, 0, 3, 1, 4) -> f_77(v1, v3, v2, v4, 0, 3, 1, 4) :|: TRUE
f_77(v1, v3, v2, v4, 0, 3, 1, 4) -> f_78(v1, v3, v5, v2, v4, 0, 3, 1, 4) :|: TRUE
f_78(v1, v3, v5, v2, v4, 0, 3, 1, 4) -> f_79(v1, v3, v5, v2, v4, 0, 3, 1, 4) :|: TRUE
f_79(v1, v3, v5, v2, v4, 0, 3, 1, 4) -> f_80(v1, v3, v5, v2, v4, 0, 3, 1, 4) :|: TRUE
f_80(v1, v3, v5, v2, v4, 0, 3, 1, 4) -> f_81(v1, v3, v5, v2, v4, 0, 3, 1, 4) :|: 0 = 0
f_81(v1, v3, v5, v2, v4, 0, 3, 1, 4) -> f_82(v1, v3, v5, v2, v4, 0, 3, 1, 4) :|: 0 <= v5
f_81(v1, v3, v5, v2, v4, 0, 3, 1, 4) -> f_83(v1, v3, v5, v2, v4, 0, 3, 1, 4) :|: v5 < 0
f_82(v1, v3, v5, v2, v4, 0, 3, 1, 4) -> f_84(v1, v3, v5, 1, v2, v4, 0, 3, 4) :|: 0 = 0
f_83(v1, v3, v5, v2, v4, 0, 3, 1, 4) -> f_85(v1, v3, v5, 0, v2, v4, 3, 1, 4) :|: 0 = 0
f_84(v1, v3, v5, 1, v2, v4, 0, 3, 4) -> f_86(v1, v3, v5, 1, v2, v4, 0, 3, 4) :|: TRUE
f_85(v1, v3, v5, 0, v2, v4, 3, 1, 4) -> f_87(v1, v3, v5, 0, v2, v4, 3, 1, 4) :|: TRUE
f_86(v1, v3, v5, 1, v2, v4, 0, 3, 4) -> f_88(v1, v3, v5, 1, v7, v2, v4, 0, 3, 4) :|: TRUE
f_88(v1, v3, v5, 1, v7, v2, v4, 0, 3, 4) -> f_89(v1, v3, v5, 1, v7, v2, v4, 0, 3, 4) :|: v7 != 0
f_88(v1, v3, v5, 1, v7, v2, v4, 0, 3, 4) -> f_90(v1, v3, v5, 1, 0, v2, v4, 3, 4) :|: v7 = 0
f_89(v1, v3, v5, 1, v7, v2, v4, 0, 3, 4) -> f_91(v1, v3, v5, 1, v7, v2, v4, 0, 3, 4) :|: 0 = 0
f_90(v1, v3, v5, 1, 0, v2, v4, 3, 4) -> f_92(v1, v3, v5, 1, 0, v2, v4, 3, 4) :|: 0 = 0
f_91(v1, v3, v5, 1, v7, v2, v4, 0, 3, 4) -> f_93(v1, v3, v5, 1, v7, v2, v4, 0, 3, 4) :|: TRUE
f_92(v1, v3, v5, 1, 0, v2, v4, 3, 4) -> f_94(v1, v3, v5, 1, 0, v2, v4, 3, 4) :|: TRUE
f_93(v1, v3, v5, 1, v7, v2, v4, 0, 3, 4) -> f_95(v1, v3, v5, 1, v7, v2, v4, 0, 3, 4) :|: 0 = 0
f_94(v1, v3, v5, 1, 0, v2, v4, 3, 4) -> f_96(v1, v3, v5, 1, 0, v2, v4, 3, 4) :|: 0 = 0
f_95(v1, v3, v5, 1, v7, v2, v4, 0, 3, 4) -> f_97(v1, v3, v5, 1, v7, v8, v2, v4, 0, 3, 4) :|: 1 + v8 = v5 && 0 <= 1 + v8
f_96(v1, v3, v5, 1, 0, v2, v4, 3, 4) -> f_98(v1, v3, v5, 1, 0, v9, v2, v4, 3, 4) :|: v9 = 1 + v5 && 1 <= v9
f_97(v1, v3, v5, 1, v7, v8, v2, v4, 0, 3, 4) -> f_99(v1, v3, v5, 1, v7, v8, v2, v4, 0, 3, 4) :|: TRUE
f_98(v1, v3, v5, 1, 0, v9, v2, v4, 3, 4) -> f_100(v1, v3, v5, 1, 0, v9, v2, v4, 3, 4) :|: TRUE
f_99(v1, v3, v5, 1, v7, v8, v2, v4, 0, 3, 4) -> f_101(v1, v3, v5, 1, v7, v8, v2, v4, 0, 3, 4) :|: TRUE
f_100(v1, v3, v5, 1, 0, v9, v2, v4, 3, 4) -> f_102(v1, v3, v5, 1, 0, v9, v2, v4, 3, 4) :|: TRUE
f_101(v1, v3, v5, 1, v7, v8, v2, v4, 0, 3, 4) -> f_103(v1, v3, v5, 1, v7, v8, v2, v4, 0, 3, 4) :|: TRUE
f_102(v1, v3, v5, 1, 0, v9, v2, v4, 3, 4) -> f_143(v1, v3, v5, v5, 1, 0, v9, v2, v4, 3, 4) :|: TRUE
f_103(v1, v3, v5, 1, v7, v8, v2, v4, 0, 3, 4) -> f_148(v1, v3, v5, v5, 1, v7, v8, v2, v4, 0, 3, 4) :|: TRUE
f_143(v39, v40, v41, v42, 1, 0, v45, v46, v47, 3, 4) -> f_185(v39, v40, v41, v42, 1, 0, v45, v46, v47, 3, 4) :|: TRUE
f_148(v75, v76, v77, v78, 1, v80, v81, v82, v83, 0, 3, 4) -> f_193(v75, v76, v77, v78, 1, v80, v81, v82, v83, 0, 3, 4) :|: TRUE
f_185(v112, v113, v114, v115, 1, 0, v118, v119, v120, 3, 4) -> f_188(v112, v113, v114, v115, 1, 0, v118, v119, v120, 3, 4) :|: TRUE
f_188(v112, v113, v114, v115, 1, 0, v118, v119, v120, 3, 4) -> f_191(v112, v113, v114, v118, 1, 0, v115, v119, v120, 3, 4) :|: 0 = 0
f_191(v112, v113, v114, v118, 1, 0, v115, v119, v120, 3, 4) -> f_194(v112, v113, v114, v118, 1, 0, v115, v119, v120, 3, 4) :|: 0 = 0
f_193(v151, v152, v153, v154, 1, v156, v157, v158, v159, 0, 3, 4) -> f_195(v151, v152, v153, v157, 1, v156, v154, v158, v159, 0, 3, 4) :|: 0 = 0
f_194(v112, v113, v114, v118, 1, 0, v115, v119, v120, 3, 4) -> f_196(v112, v113, v114, v118, 1, 0, v115, v119, v120, 3, 4) :|: TRUE
f_195(v151, v152, v153, v157, 1, v156, v154, v158, v159, 0, 3, 4) -> f_197(v151, v152, v153, v157, 1, v156, v154, v158, v159, 0, 3, 4) :|: 0 <= v157 && 1 <= v154 && 1 <= v153
f_195(v151, v152, v153, v157, 1, v156, v154, v158, v159, 0, 3, 4) -> f_198(v151, v152, v153, -1, 1, v156, 0, v158, v159, 3, 4) :|: v157 < 0 && v154 = 0 && 1 + v157 = 0 && 0 = 0
f_196(v112, v113, v114, v118, 1, 0, v115, v119, v120, 3, 4) -> f_199(v112, v113, v114, v118, 1, v167, 0, v115, v119, v120, 3, 4) :|: TRUE
f_197(v151, v152, v153, v157, 1, v156, v154, v158, v159, 0, 3, 4) -> f_200(v151, v152, v153, v157, 1, v156, v154, v158, v159, 0, 3, 4) :|: 0 = 0
f_198(v151, v152, v153, -1, 1, v156, 0, v158, v159, 3, 4) -> f_201(v151, v152, v153, -1, 0, v156, 1, v158, v159, 3, 4) :|: 0 = 0
f_199(v112, v113, v114, v118, 1, v167, 0, v115, v119, v120, 3, 4) -> f_202(v112, v113, v114, v118, 1, v167, 0, v115, v119, v120, 3, 4) :|: v167 != 0
f_199(v112, v113, v114, v118, 1, v167, 0, v115, v119, v120, 3, 4) -> f_203(v112, v113, v114, v118, 1, 0, v115, v119, v120, 3, 4) :|: v167 = 0
f_200(v151, v152, v153, v157, 1, v156, v154, v158, v159, 0, 3, 4) -> f_204(v151, v152, v153, v157, 1, v156, v154, v158, v159, 0, 3, 4) :|: TRUE
f_201(v151, v152, v153, -1, 0, v156, 1, v158, v159, 3, 4) -> f_205(v151, v152, v153, -1, 0, v156, 1, v158, v159, 3, 4) :|: TRUE
f_202(v112, v113, v114, v118, 1, v167, 0, v115, v119, v120, 3, 4) -> f_206(v112, v113, v114, v118, 1, v167, v115, v119, v120, 0, 3, 4) :|: 0 = 0
f_203(v112, v113, v114, v118, 1, 0, v115, v119, v120, 3, 4) -> f_207(v112, v113, v114, v118, 1, 0, v115, v119, v120, 3, 4) :|: 0 = 0
f_204(v151, v152, v153, v157, 1, v156, v154, v158, v159, 0, 3, 4) -> f_208(v151, v152, v153, v157, 1, v171, v154, v158, v159, 0, 3, 4) :|: TRUE
f_206(v112, v113, v114, v118, 1, v167, v115, v119, v120, 0, 3, 4) -> f_209(v112, v113, v114, v118, 1, v167, v115, v119, v120, 0, 3, 4) :|: TRUE
f_207(v112, v113, v114, v118, 1, 0, v115, v119, v120, 3, 4) -> f_210(v112, v113, v114, v118, 1, 0, v115, v119, v120, 3, 4) :|: TRUE
f_208(v151, v152, v153, v157, 1, v171, v154, v158, v159, 0, 3, 4) -> f_211(v151, v152, v153, v157, 1, v171, v154, v158, v159, 0, 3, 4) :|: v171 != 0
f_208(v151, v152, v153, v157, 1, v171, v154, v158, v159, 0, 3, 4) -> f_212(v151, v152, v153, v157, 1, 0, v154, v158, v159, 3, 4) :|: v171 = 0
f_209(v112, v113, v114, v118, 1, v167, v115, v119, v120, 0, 3, 4) -> f_213(v112, v113, v114, v118, 1, v167, v115, v119, v120, 0, 3, 4) :|: 0 = 0
f_210(v112, v113, v114, v118, 1, 0, v115, v119, v120, 3, 4) -> f_214(v112, v113, v114, v118, 1, 0, v119, v120, 3, 4) :|: 0 = 0
f_211(v151, v152, v153, v157, 1, v171, v154, v158, v159, 0, 3, 4) -> f_215(v151, v152, v153, v157, 1, v171, v154, v158, v159, 0, 3, 4) :|: 0 = 0
f_212(v151, v152, v153, v157, 1, 0, v154, v158, v159, 3, 4) -> f_216(v151, v152, v153, v157, 1, 0, v154, v158, v159, 3, 4) :|: 0 = 0
f_213(v112, v113, v114, v118, 1, v167, v115, v119, v120, 0, 3, 4) -> f_217(v112, v113, v114, v118, 1, v167, v115, v119, v120, 0, 3, 4) :|: 1 + v115 = v118
f_214(v112, v113, v114, v118, 1, 0, v119, v120, 3, 4) -> f_218(v112, v113, v114, v118, 1, 0, v172, v119, v120, 3, 4, 2) :|: v172 = 1 + v118 && 2 <= v172
f_215(v151, v152, v153, v157, 1, v171, v154, v158, v159, 0, 3, 4) -> f_219(v151, v152, v153, v157, 1, v171, v154, v158, v159, 0, 3, 4) :|: TRUE
f_216(v151, v152, v153, v157, 1, 0, v154, v158, v159, 3, 4) -> f_220(v151, v152, v153, v157, 1, 0, v154, v158, v159, 3, 4) :|: TRUE
f_217(v112, v113, v114, v118, 1, v167, v115, v119, v120, 0, 3, 4) -> f_221(v112, v113, v114, v118, 1, v167, v115, v119, v120, 0, 3, 4) :|: TRUE
f_218(v112, v113, v114, v118, 1, 0, v172, v119, v120, 3, 4, 2) -> f_222(v112, v113, v114, v118, 1, 0, v172, v119, v120, 3, 4, 2) :|: TRUE
f_219(v151, v152, v153, v157, 1, v171, v154, v158, v159, 0, 3, 4) -> f_223(v151, v152, v153, v157, 1, v171, v158, v159, 0, 3, 4) :|: 0 = 0
f_220(v151, v152, v153, v157, 1, 0, v154, v158, v159, 3, 4) -> f_224(v151, v152, v153, v157, 1, 0, v154, v158, v159, 3, 4) :|: 0 = 0
f_221(v112, v113, v114, v118, 1, v167, v115, v119, v120, 0, 3, 4) -> f_225(v112, v113, v114, v118, 1, v167, v115, v119, v120, 0, 3, 4) :|: TRUE
f_222(v112, v113, v114, v118, 1, 0, v172, v119, v120, 3, 4, 2) -> f_226(v112, v113, v114, v118, 1, 0, v172, v119, v120, 3, 4, 2) :|: TRUE
f_223(v151, v152, v153, v157, 1, v171, v158, v159, 0, 3, 4) -> f_227(v151, v152, v153, v157, 1, v171, v201, v158, v159, 0, 3, 4) :|: 1 + v201 = v157 && 0 <= 1 + v201
f_224(v151, v152, v153, v157, 1, 0, v154, v158, v159, 3, 4) -> f_228(v151, v152, v153, v157, 1, 0, v154, v158, v159, 3, 4) :|: v154 = 1 + v157
f_225(v112, v113, v114, v118, 1, v167, v115, v119, v120, 0, 3, 4) -> f_269(v112, v113, v114, v118, 1, v167, v115, v118, v115, v119, v120, 0, 3, 4) :|: TRUE
f_226(v112, v113, v114, v118, 1, 0, v172, v119, v120, 3, 4, 2) -> f_185(v112, v113, v114, v118, 1, 0, v172, v119, v120, 3, 4) :|: TRUE
f_227(v151, v152, v153, v157, 1, v171, v201, v158, v159, 0, 3, 4) -> f_230(v151, v152, v153, v157, 1, v171, v201, v158, v159, 0, 3, 4) :|: TRUE
f_228(v151, v152, v153, v157, 1, 0, v154, v158, v159, 3, 4) -> f_231(v151, v152, v153, v157, 1, 0, v154, v158, v159, 3, 4) :|: TRUE
f_230(v151, v152, v153, v157, 1, v171, v201, v158, v159, 0, 3, 4) -> f_233(v151, v152, v153, v157, 1, v171, v201, v158, v159, 0, 3, 4) :|: TRUE
f_231(v151, v152, v153, v157, 1, 0, v154, v158, v159, 3, 4) -> f_234(v151, v152, v153, v157, 1, 0, v154, v158, v159, 3, 4) :|: TRUE
f_233(v151, v152, v153, v157, 1, v171, v201, v158, v159, 0, 3, 4) -> f_236(v151, v152, v153, v157, 1, v171, v201, v158, v159, 0, 3, 4) :|: TRUE
f_234(v151, v152, v153, v157, 1, 0, v154, v158, v159, 3, 4) -> f_271(v151, v152, v153, v157, 1, 0, v154, v157, v154, v158, v159, 3, 4) :|: TRUE
f_236(v151, v152, v153, v157, 1, v171, v201, v158, v159, 0, 3, 4) -> f_193(v151, v152, v153, v157, 1, v171, v201, v158, v159, 0, 3, 4) :|: TRUE
f_269(v404, v405, v406, v407, 1, v409, v410, v411, v412, v413, v414, 0, 3, 4) -> f_272(v404, v405, v406, v407, 1, v409, v410, v411, v412, v413, v414, 0, 3, 4) :|: TRUE
f_271(v442, v443, v444, v445, 1, 0, v448, v449, v450, v451, v452, 3, 4) -> f_273(v442, v443, v444, v445, 1, 0, v448, v449, v450, v451, v452, 3, 4) :|: TRUE
f_272(v404, v405, v406, v407, 1, v409, v410, v411, v412, v413, v414, 0, 3, 4) -> f_274(v404, v405, v406, v412, 1, v409, v410, v411, v407, v413, v414, 0, 3, 4) :|: 0 = 0
f_273(v442, v443, v444, v445, 1, 0, v448, v449, v450, v451, v452, 3, 4) -> f_275(v442, v443, v444, v450, 1, 0, v448, v449, v445, v451, v452, 3, 4) :|: 0 = 0
f_274(v404, v405, v406, v412, 1, v409, v410, v411, v407, v413, v414, 0, 3, 4) -> f_276(v404, v405, v406, v412, 1, v409, v410, v411, v407, v413, v414, 0, 3, 4) :|: 0 <= v412 && 1 <= v407
f_274(v404, v405, v406, v412, 1, v409, v410, v411, v407, v413, v414, 0, 3, 4) -> f_277(v404, v405, v406, -1, 1, v409, v410, v411, 0, v413, v414, 3, 4) :|: v412 < 0 && v407 = 0 && 1 + v412 = 0 && 0 = 0
f_275(v442, v443, v444, v450, 1, 0, v448, v449, v445, v451, v452, 3, 4) -> f_278(v442, v443, v444, v450, 1, 0, v448, v449, v445, v451, v452, 3, 4) :|: 0 = 0
f_276(v404, v405, v406, v412, 1, v409, v410, v411, v407, v413, v414, 0, 3, 4) -> f_279(v404, v405, v406, v412, 1, v409, v410, v411, v407, v413, v414, 0, 3, 4) :|: 0 = 0
f_277(v404, v405, v406, -1, 1, v409, v410, v411, 0, v413, v414, 3, 4) -> f_280(v404, v405, v406, -1, 0, v409, 1, v410, v411, v413, v414, 3, 4) :|: 0 = 0
f_278(v442, v443, v444, v450, 1, 0, v448, v449, v445, v451, v452, 3, 4) -> f_281(v442, v443, v444, v450, 1, 0, v448, v449, v445, v451, v452, 3, 4) :|: TRUE
f_279(v404, v405, v406, v412, 1, v409, v410, v411, v407, v413, v414, 0, 3, 4) -> f_282(v404, v405, v406, v412, 1, v409, v410, v411, v407, v413, v414, 0, 3, 4) :|: TRUE
f_280(v404, v405, v406, -1, 0, v409, 1, v410, v411, v413, v414, 3, 4) -> f_283(v404, v405, v406, -1, 0, v409, 1, v410, v411, v413, v414, 3, 4) :|: TRUE
f_281(v442, v443, v444, v450, 1, 0, v448, v449, v445, v451, v452, 3, 4) -> f_284(v442, v443, v444, v450, 1, v512, 0, v448, v449, v445, v451, v452, 3, 4) :|: TRUE
f_282(v404, v405, v406, v412, 1, v409, v410, v411, v407, v413, v414, 0, 3, 4) -> f_285(v404, v405, v406, v412, 1, v513, v410, v411, v407, v413, v414, 0, 3, 4) :|: TRUE
f_284(v442, v443, v444, v450, 1, v512, 0, v448, v449, v445, v451, v452, 3, 4) -> f_286(v442, v443, v444, v450, 1, v512, 0, v448, v449, v445, v451, v452, 3, 4) :|: v512 != 0
f_284(v442, v443, v444, v450, 1, v512, 0, v448, v449, v445, v451, v452, 3, 4) -> f_287(v442, v443, v444, v450, 1, 0, v448, v449, v445, v451, v452, 3, 4) :|: v512 = 0
f_285(v404, v405, v406, v412, 1, v513, v410, v411, v407, v413, v414, 0, 3, 4) -> f_288(v404, v405, v406, v412, 1, v513, v410, v411, v407, v413, v414, 0, 3, 4) :|: v513 != 0
f_285(v404, v405, v406, v412, 1, v513, v410, v411, v407, v413, v414, 0, 3, 4) -> f_289(v404, v405, v406, v412, 1, 0, v410, v411, v407, v413, v414, 3, 4) :|: v513 = 0
f_286(v442, v443, v444, v450, 1, v512, 0, v448, v449, v445, v451, v452, 3, 4) -> f_290(v442, v443, v444, v450, 1, v512, v448, v449, v445, v451, v452, 0, 3, 4) :|: 0 = 0
f_287(v442, v443, v444, v450, 1, 0, v448, v449, v445, v451, v452, 3, 4) -> f_291(v442, v443, v444, v450, 1, 0, v448, v449, v445, v451, v452, 3, 4) :|: 0 = 0
f_288(v404, v405, v406, v412, 1, v513, v410, v411, v407, v413, v414, 0, 3, 4) -> f_292(v404, v405, v406, v412, 1, v513, v410, v411, v407, v413, v414, 0, 3, 4) :|: 0 = 0
f_289(v404, v405, v406, v412, 1, 0, v410, v411, v407, v413, v414, 3, 4) -> f_293(v404, v405, v406, v412, 1, 0, v410, v411, v407, v413, v414, 3, 4) :|: 0 = 0
f_290(v442, v443, v444, v450, 1, v512, v448, v449, v445, v451, v452, 0, 3, 4) -> f_294(v442, v443, v444, v450, 1, v512, v448, v449, v445, v451, v452, 0, 3, 4) :|: TRUE
f_291(v442, v443, v444, v450, 1, 0, v448, v449, v445, v451, v452, 3, 4) -> f_295(v442, v443, v444, v450, 1, 0, v448, v449, v445, v451, v452, 3, 4) :|: TRUE
f_292(v404, v405, v406, v412, 1, v513, v410, v411, v407, v413, v414, 0, 3, 4) -> f_296(v404, v405, v406, v412, 1, v513, v410, v411, v407, v413, v414, 0, 3, 4) :|: TRUE
f_293(v404, v405, v406, v412, 1, 0, v410, v411, v407, v413, v414, 3, 4) -> f_297(v404, v405, v406, v412, 1, 0, v410, v411, v407, v413, v414, 3, 4) :|: TRUE
f_294(v442, v443, v444, v450, 1, v512, v448, v449, v445, v451, v452, 0, 3, 4) -> f_298(v442, v443, v444, v450, 1, v512, v449, v445, v451, v452, 0, 3, 4) :|: 0 = 0
f_295(v442, v443, v444, v450, 1, 0, v448, v449, v445, v451, v452, 3, 4) -> f_299(v442, v443, v444, v450, 1, 0, v448, v449, v451, v452, 3, 4) :|: 0 = 0
f_296(v404, v405, v406, v412, 1, v513, v410, v411, v407, v413, v414, 0, 3, 4) -> f_300(v404, v405, v406, v412, 1, v513, v410, v411, v413, v414, 0, 3, 4) :|: 0 = 0
f_297(v404, v405, v406, v412, 1, 0, v410, v411, v407, v413, v414, 3, 4) -> f_301(v404, v405, v406, v412, 1, 0, v411, v407, v413, v414, 3, 4) :|: 0 = 0
f_298(v442, v443, v444, v450, 1, v512, v449, v445, v451, v452, 0, 3, 4) -> f_302(v442, v443, v444, v450, 1, v512, v445, v451, v452, 0, 3, 4) :|: 1 + v445 = v450
f_299(v442, v443, v444, v450, 1, 0, v448, v449, v451, v452, 3, 4) -> f_303(v442, v443, v444, v450, 1, 0, v448, v449, v548, v451, v452, 3, 4, 2) :|: v548 = 1 + v450 && 2 <= v548
f_300(v404, v405, v406, v412, 1, v513, v410, v411, v413, v414, 0, 3, 4) -> f_304(v404, v405, v406, v412, 1, v513, v410, v411, v549, v413, v414, 0, 3, 4) :|: 1 + v549 = v412 && 0 <= 1 + v549
f_301(v404, v405, v406, v412, 1, 0, v411, v407, v413, v414, 3, 4) -> f_305(v404, v405, v406, v412, 1, 0, v407, v413, v414, 3, 4) :|: v407 = 1 + v412
f_302(v442, v443, v444, v450, 1, v512, v445, v451, v452, 0, 3, 4) -> f_306(v442, v443, v444, v450, 1, v512, v445, v451, v452, 0, 3, 4) :|: TRUE
f_303(v442, v443, v444, v450, 1, 0, v448, v449, v548, v451, v452, 3, 4, 2) -> f_307(v442, v443, v444, v450, 1, 0, v448, v449, v548, v451, v452, 3, 4, 2) :|: TRUE
f_304(v404, v405, v406, v412, 1, v513, v410, v411, v549, v413, v414, 0, 3, 4) -> f_308(v404, v405, v406, v412, 1, v513, v410, v411, v549, v413, v414, 0, 3, 4) :|: TRUE
f_305(v404, v405, v406, v412, 1, 0, v407, v413, v414, 3, 4) -> f_309(v404, v405, v406, v412, 1, 0, v407, v413, v414, 3, 4) :|: TRUE
f_306(v442, v443, v444, v450, 1, v512, v445, v451, v452, 0, 3, 4) -> f_310(v442, v443, v444, v450, 1, v512, v445, v451, v452, 0, 3, 4) :|: TRUE
f_307(v442, v443, v444, v450, 1, 0, v448, v449, v548, v451, v452, 3, 4, 2) -> f_311(v442, v443, v444, v450, 1, 0, v448, v449, v548, v451, v452, 3, 4, 2) :|: TRUE
f_308(v404, v405, v406, v412, 1, v513, v410, v411, v549, v413, v414, 0, 3, 4) -> f_312(v404, v405, v406, v412, 1, v513, v410, v411, v549, v413, v414, 0, 3, 4) :|: TRUE
f_309(v404, v405, v406, v412, 1, 0, v407, v413, v414, 3, 4) -> f_313(v404, v405, v406, v412, 1, 0, v407, v413, v414, 3, 4) :|: TRUE
f_310(v442, v443, v444, v450, 1, v512, v445, v451, v452, 0, 3, 4) -> f_269(v442, v443, v444, v450, 1, v512, v445, v450, v445, v451, v452, 0, 3, 4) :|: TRUE
f_311(v442, v443, v444, v450, 1, 0, v448, v449, v548, v451, v452, 3, 4, 2) -> f_271(v442, v443, v444, v450, 1, 0, v448, v449, v548, v451, v452, 3, 4) :|: TRUE
f_312(v404, v405, v406, v412, 1, v513, v410, v411, v549, v413, v414, 0, 3, 4) -> f_269(v404, v405, v406, v412, 1, v513, v410, v411, v549, v413, v414, 0, 3, 4) :|: TRUE
f_313(v404, v405, v406, v412, 1, 0, v407, v413, v414, 3, 4) -> f_271(v404, v405, v406, v412, 1, 0, v407, v412, v407, v413, v414, 3, 4) :|: TRUE
Combined rules. Obtained 18 rulesP rules:
f_195(v151:0, v152:0, v153:0, 1 + v201:0, 1, v156:0, v154:0, v158:0, v159:0, 0, 3, 4) -> f_195(v151:0, v152:0, v153:0, v201:0, 1, v171:0, 1 + v201:0, v158:0, v159:0, 0, 3, 4) :|: v154:0 > 0 && v201:0 > -2 && v153:0 > 0 && v171:0 < 0
f_195(v151:0, v152:0, v153:0, 1 + v201:0, 1, v156:0, v154:0, v158:0, v159:0, 0, 3, 4) -> f_195(v151:0, v152:0, v153:0, v201:0, 1, v171:0, 1 + v201:0, v158:0, v159:0, 0, 3, 4) :|: v154:0 > 0 && v201:0 > -2 && v153:0 > 0 && v171:0 > 0
f_284(v442:0, v443:0, v444:0, v450:0, 1, 0, 0, v448:0, v449:0, v445:0, v451:0, v452:0, 3, 4) -> f_284(v442:0, v443:0, v444:0, 1 + v450:0, 1, v512:1, 0, v448:0, v449:0, v450:0, v451:0, v452:0, 3, 4) :|: v450:0 > 0
f_274(v404:0, v405:0, v406:0, 1 + v549:0, 1, v409:0, v410:0, v411:0, v407:0, v413:0, v414:0, 0, 3, 4) -> f_274(v404:0, v405:0, v406:0, v549:0, 1, v513:0, v410:0, v411:0, 1 + v549:0, v413:0, v414:0, 0, 3, 4) :|: v407:0 > 0 && v549:0 > -2 && v513:0 < 0
f_274(v404:0, v405:0, v406:0, 1 + v549:0, 1, v409:0, v410:0, v411:0, v407:0, v413:0, v414:0, 0, 3, 4) -> f_274(v404:0, v405:0, v406:0, v549:0, 1, v513:0, v410:0, v411:0, 1 + v549:0, v413:0, v414:0, 0, 3, 4) :|: v407:0 > 0 && v549:0 > -2 && v513:0 > 0
f_73 -> f_199(v1:0, v3:0, v5:0, 1 + v5:0, 1, v167:0, 0, v5:0, 3 + v1:0, 3 + v3:0, 3, 4) :|: v3:0 > 0 && v1:0 > 0 && v5:0 > -1
f_195(v151:0, v152:0, v153:0, v157:0, 1, v156:0, 1 + v157:0, v158:0, v159:0, 0, 3, 4) -> f_284(v151:0, v152:0, v153:0, 1 + v157:0, 1, v512:0, 0, 1 + v157:0, v157:0, v157:0, v158:0, v159:0, 3, 4) :|: v157:0 > -1 && v153:0 > 0
f_199(v112:0, v113:0, v114:0, 1 + v115:0, 1, v167:0, 0, v115:0, v119:0, v120:0, 3, 4) -> f_274(v112:0, v113:0, v114:0, v115:0, 1, v167:0, v115:0, 1 + v115:0, 1 + v115:0, v119:0, v120:0, 0, 3, 4) :|: v167:0 < 0
f_199(v112:0, v113:0, v114:0, 1 + v115:0, 1, v167:0, 0, v115:0, v119:0, v120:0, 3, 4) -> f_274(v112:0, v113:0, v114:0, v115:0, 1, v167:0, v115:0, 1 + v115:0, 1 + v115:0, v119:0, v120:0, 0, 3, 4) :|: v167:0 > 0
f_73 -> f_87(v1:0, v3:0, v5:0, 0, 3 + v1:0, 3 + v3:0, 3, 1, 4) :|: v3:0 > 0 && v1:0 > 0 && v5:0 < 0
f_284(v442:0, v443:0, v444:0, 1 + v445:0, 1, v512:0, 0, v448:0, v449:0, v445:0, v451:0, v452:0, 3, 4) -> f_274(v442:0, v443:0, v444:0, v445:0, 1, v512:0, v445:0, 1 + v445:0, 1 + v445:0, v451:0, v452:0, 0, 3, 4) :|: v512:0 < 0
f_284(v442:0, v443:0, v444:0, 1 + v445:0, 1, v512:0, 0, v448:0, v449:0, v445:0, v451:0, v452:0, 3, 4) -> f_274(v442:0, v443:0, v444:0, v445:0, 1, v512:0, v445:0, 1 + v445:0, 1 + v445:0, v451:0, v452:0, 0, 3, 4) :|: v512:0 > 0
f_274(v404:0, v405:0, v406:0, v412:0, 1, v409:0, v410:0, v411:0, 1 + v412:0, v413:0, v414:0, 0, 3, 4) -> f_284(v404:0, v405:0, v406:0, 1 + v412:0, 1, v512:0, 0, 1 + v412:0, v412:0, v412:0, v413:0, v414:0, 3, 4) :|: v412:0 > -1
f_195(v151:0, v152:0, v153:0, -1, 1, v156:0, 0, v158:0, v159:0, 0, 3, 4) -> f_205(v151:0, v152:0, v153:0, -1, 0, v156:0, 1, v158:0, v159:0, 3, 4) :|: TRUE
f_199(v112:0, v113:0, v114:0, v118:0, 1, 0, 0, v115:0, v119:0, v120:0, 3, 4) -> f_199(v112:0, v113:0, v114:0, 1 + v118:0, 1, v167:1, 0, v118:0, v119:0, v120:0, 3, 4) :|: v118:0 > 0
f_274(v404:0, v405:0, v406:0, -1, 1, v409:0, v410:0, v411:0, 0, v413:0, v414:0, 0, 3, 4) -> f_283(v404:0, v405:0, v406:0, -1, 0, v409:0, 1, v410:0, v411:0, v413:0, v414:0, 3, 4) :|: TRUE
f_73 -> f_195(v1:0, v3:0, 1 + v8:0, v8:0, 1, v7:0, 1 + v8:0, 3 + v1:0, 3 + v3:0, 0, 3, 4) :|: v3:0 > 0 && v1:0 > 0 && v8:0 > -2 && v7:0 < 0
f_73 -> f_195(v1:0, v3:0, 1 + v8:0, v8:0, 1, v7:0, 1 + v8:0, 3 + v1:0, 3 + v3:0, 0, 3, 4) :|: v3:0 > 0 && v1:0 > 0 && v8:0 > -2 && v7:0 > 0
Filtered unneeded arguments:
   f_195(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12) -> f_195(x3, x4, x7)
   f_284(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14) -> f_284(x4, x6, x10)
   f_274(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14) -> f_274(x4, x9)
   f_199(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12) -> f_199(x4, x6, x8)
Removed division, modulo operations, cleaned up constraints. Obtained 15 rules.P rules:
f_195(v153:0, sum~cons_1~v201:0, v154:0) -> f_195(v153:0, v201:0, 1 + v201:0) :|: v201:0 > -2 && v153:0 > 0 && v154:0 > 0 && sum~cons_1~v201:0 = 1 + v201:0
f_284(v450:0, cons_0, v445:0) -> f_284(1 + v450:0, v512:1, v450:0) :|: v450:0 > 0 && cons_0 = 0
f_274(sum~cons_1~v549:0, v407:0) -> f_274(v549:0, 1 + v549:0) :|: v407:0 > 0 && v549:0 > -2 && sum~cons_1~v549:0 = 1 + v549:0
f_73 -> f_199(1 + v5:0, v167:0, v5:0) :|: v5:0 > -1
f_195(v153:0, v157:0, sum~cons_1~v157:0) -> f_284(1 + v157:0, v512:0, v157:0) :|: v157:0 > -1 && v153:0 > 0 && sum~cons_1~v157:0 = 1 + v157:0
f_199(sum~cons_1~v115:0, v167:0, v115:0) -> f_274(v115:0, 1 + v115:0) :|: v167:0 < 0 && sum~cons_1~v115:0 = 1 + v115:0
f_199(sum~cons_1~v115:0, v167:0, v115:0) -> f_274(v115:0, 1 + v115:0) :|: v167:0 > 0 && sum~cons_1~v115:0 = 1 + v115:0
f_73 -> f_87(v1:0, v3:0, v5:0, 0, 3 + v1:0, 3 + v3:0, 3, 1, 4) :|: v1:0 > 0 && v5:0 < 0 && v3:0 > 0
f_284(sum~cons_1~v445:0, v512:0, v445:0) -> f_274(v445:0, 1 + v445:0) :|: v512:0 < 0 && sum~cons_1~v445:0 = 1 + v445:0
f_284(sum~cons_1~v445:0, v512:0, v445:0) -> f_274(v445:0, 1 + v445:0) :|: v512:0 > 0 && sum~cons_1~v445:0 = 1 + v445:0
f_274(v412:0, sum~cons_1~v412:0) -> f_284(1 + v412:0, v512:0, v412:0) :|: v412:0 > -1 && sum~cons_1~v412:0 = 1 + v412:0
f_195(v153:0, cons_-1, cons_0) -> f_205(v151:0, v152:0, v153:0, -1, 0, v156:0, 1, v158:0, v159:0, 3, 4) :|: TRUE && cons_-1 = -1 && cons_0 = 0
f_199(v118:0, cons_0, v115:0) -> f_199(1 + v118:0, v167:1, v118:0) :|: v118:0 > 0 && cons_0 = 0
f_274(cons_-1, cons_0) -> f_283(v404:0, v405:0, v406:0, -1, 0, v409:0, 1, v410:0, v411:0, v413:0, v414:0, 3, 4) :|: TRUE && cons_-1 = -1 && cons_0 = 0
f_73 -> f_195(1 + v8:0, v8:0, 1 + v8:0) :|: v8:0 > -2

----------------------------------------

(6)
Obligation:
Rules:
f_195(v153:0, sum~cons_1~v201:0, v154:0) -> f_195(v153:0, v201:0, 1 + v201:0) :|: v201:0 > -2 && v153:0 > 0 && v154:0 > 0 && sum~cons_1~v201:0 = 1 + v201:0
f_284(v450:0, cons_0, v445:0) -> f_284(1 + v450:0, v512:1, v450:0) :|: v450:0 > 0 && cons_0 = 0
f_274(sum~cons_1~v549:0, v407:0) -> f_274(v549:0, 1 + v549:0) :|: v407:0 > 0 && v549:0 > -2 && sum~cons_1~v549:0 = 1 + v549:0
f_73 -> f_199(1 + v5:0, v167:0, v5:0) :|: v5:0 > -1
f_195(x, x1, x2) -> f_284(1 + x1, x3, x1) :|: x1 > -1 && x > 0 && x2 = 1 + x1
f_199(x4, x5, x6) -> f_274(x6, 1 + x6) :|: x5 < 0 && x4 = 1 + x6
f_199(x7, x8, x9) -> f_274(x9, 1 + x9) :|: x8 > 0 && x7 = 1 + x9
f_73 -> f_87(x10, x11, x12, 0, 3 + x10, 3 + x11, 3, 1, 4) :|: x10 > 0 && x12 < 0 && x11 > 0
f_284(x13, x14, x15) -> f_274(x15, 1 + x15) :|: x14 < 0 && x13 = 1 + x15
f_284(x16, x17, x18) -> f_274(x18, 1 + x18) :|: x17 > 0 && x16 = 1 + x18
f_274(v412:0, sum~cons_1~v412:0) -> f_284(1 + v412:0, v512:0, v412:0) :|: v412:0 > -1 && sum~cons_1~v412:0 = 1 + v412:0
f_195(x19, x20, x21) -> f_205(x22, x23, x19, -1, 0, x24, 1, x25, x26, 3, 4) :|: TRUE && x20 = -1 && x21 = 0
f_199(x27, x28, x29) -> f_199(1 + x27, x30, x27) :|: x27 > 0 && x28 = 0
f_274(x31, x32) -> f_283(x33, x34, x35, -1, 0, x36, 1, x37, x38, x39, x40, 3, 4) :|: TRUE && x31 = -1 && x32 = 0
f_73 -> f_195(1 + v8:0, v8:0, 1 + v8:0) :|: v8:0 > -2
Start term: f_73

----------------------------------------

(7) IRSNoOverapproximation (EQUIVALENT)
Proof of non-termination can continue
----------------------------------------

(8)
Obligation:
Rules:
f_195(v153:0, sum~cons_1~v201:0, v154:0) -> f_195(v153:0, v201:0, 1 + v201:0) :|: v201:0 > -2 && v153:0 > 0 && v154:0 > 0 && sum~cons_1~v201:0 = 1 + v201:0
f_284(v450:0, cons_0, v445:0) -> f_284(1 + v450:0, v512:1, v450:0) :|: v450:0 > 0 && cons_0 = 0
f_274(sum~cons_1~v549:0, v407:0) -> f_274(v549:0, 1 + v549:0) :|: v407:0 > 0 && v549:0 > -2 && sum~cons_1~v549:0 = 1 + v549:0
f_73 -> f_199(1 + v5:0, v167:0, v5:0) :|: v5:0 > -1
f_195(x, x1, x2) -> f_284(1 + x1, x3, x1) :|: x1 > -1 && x > 0 && x2 = 1 + x1
f_199(x4, x5, x6) -> f_274(x6, 1 + x6) :|: x5 < 0 && x4 = 1 + x6
f_199(x7, x8, x9) -> f_274(x9, 1 + x9) :|: x8 > 0 && x7 = 1 + x9
f_73 -> f_87(x10, x11, x12, 0, 3 + x10, 3 + x11, 3, 1, 4) :|: x10 > 0 && x12 < 0 && x11 > 0
f_284(x13, x14, x15) -> f_274(x15, 1 + x15) :|: x14 < 0 && x13 = 1 + x15
f_284(x16, x17, x18) -> f_274(x18, 1 + x18) :|: x17 > 0 && x16 = 1 + x18
f_274(v412:0, sum~cons_1~v412:0) -> f_284(1 + v412:0, v512:0, v412:0) :|: v412:0 > -1 && sum~cons_1~v412:0 = 1 + v412:0
f_195(x19, x20, x21) -> f_205(x22, x23, x19, -1, 0, x24, 1, x25, x26, 3, 4) :|: TRUE && x20 = -1 && x21 = 0
f_199(x27, x28, x29) -> f_199(1 + x27, x30, x27) :|: x27 > 0 && x28 = 0
f_274(x31, x32) -> f_283(x33, x34, x35, -1, 0, x36, 1, x37, x38, x39, x40, 3, 4) :|: TRUE && x31 = -1 && x32 = 0
f_73 -> f_195(1 + v8:0, v8:0, 1 + v8:0) :|: v8:0 > -2
Start term: f_73

----------------------------------------

(9) IRSToKoat (EQUIVALENT)
Convert an IRS to a koat problem
----------------------------------------

(10)
Obligation:
(GOAL COMPLEXITY)
(STARTTERM (FUNCTIONSYMBOLS f_73))
(VAR x290 x160 x281 x280 x162 x283 x161 x282 x46 x164 x285 x47 x163 x284 x48 x166 x287 x49 x165 x286 x42 x168 x289 x43 x167 x288 x44 x45 x169 x40 x41 x39 x270 x151 x272 x150 x271 x35 x153 x274 x36 x152 x273 x37 x155 x276 x38 x154 x275 x31 x157 x278 x32 x156 x277 x33 x159 x34 x158 x279 x30 x70 x140 x261 x260 x68 x142 x263 x69 x141 x262 x144 x265 x143 x264 x64 x146 x267 x65 x145 x266 x66 x148 x269 x67 x147 x268 x60 x61 x149 x62 x63 k7 k8 k5 k6 k9 k0 k3 k4 k1 k2 x250 x57 x131 x252 x58 x130 x251 x59 x133 x254 x132 x253 x53 x135 x256 x54 x134 x255 x55 x137 x258 x56 x136 x257 x139 x50 x138 x259 x51 x52 x90 x91 x92 x86 x87 x88 x89 x82 x83 x84 x85 x80 x81 x193 x192 x195 x194 x79 x197 x196 x199 x198 x75 x76 x'' x77 x78 x71 x72 x73 x74 k14 k15 k16 k17 k10 k11 k12 k13 x191 x190 x182 x181 x184 x183 x186 x185 x188 x187 x189 x180 x171 x170 x173 x172 x175 x174 x177 x176 x97 x179 x98 x178 x99 x93 x94 x95 x96 x209 k36 k37 x208 k38 k39 k32 k33 k34 k35 k30 k31 x201 x200 x203 x202 k29 x205 x204 x207 x206 k25 k26 k27 k28 k21 k22 k23 k24 k20 k18 k19 k54 k55 k56 k57 k50 k51 k52 k53 k47 k48 k49 k43 k44 k45 k46 k40 k41 k42 x120 x241 x240 x122 x243 x121 x242 x124 x245 x123 x244 x126 x247 x125 x246 x x128 x249 x127 x248 x129 x230 x111 x232 x110 x231 x113 x234 x112 x233 x115 x236 x114 x235 x117 x238 x116 x237 x119 x118 x239 x109 x4 x28 x5 x29 x2 x3 x8 x24 x9 x25 x6 x26 x100 x221 x7 x27 x220 x20 x102 x223 x21 x101 x222 x22 x104 x225 x23 x103 x224 x106 x227 x1 x105 x226 x108 x229 x107 x228 x219 x' x17 x18 x19 x13 x14 x15 x210 x16 x212 x10 x211 x11 x214 x12 x213 x216 x215 x218 x217)
(RULES
  f_195(k2, k8, k47, x133, x134, x135, x136, x137, x138, x139, x140, x141, x142) -> f_195(k2, k23, 1 + k23, x143, x144, x145, x146, x147, x148, x149, x150, x151, x152) :|: k23 > -2 && k2 > 0 && k47 > 0 && k8 = 1 + k23
  f_274(k17, k18, x216, x217, x218, x219, x220, x221, x222, x223, x224, x225, x226) -> f_283(k19, k20, k12, -1, 0, k13, 1, k15, k16, k10, k5, 3, 4) :|: 0 = 0 && k17 = -1 && k18 = 0
  f_73(x173, x174, x175, x176, x177, x178, x179, x180, x181, x182, x183, x184, x185) -> f_199(1 + k29, k0, k29, x186, x187, x188, x189, x190, x191, x192, x193, x194, x195) :|: k29 > -1
  f_199(k24, k26, k35, x248, x249, x250, x251, x252, x253, x254, x255, x256, x257) -> f_274(k35, 1 + k35, x258, x259, x260, x261, x262, x263, x264, x265, x266, x267, x268) :|: k26 < 0 && k24 = 1 + k35
  f_274(k4, k6, x269, x270, x271, x272, x273, x274, x275, x276, x277, x278, x279) -> f_274(k11, 1 + k11, x280, x281, x282, x283, x284, x285, x286, x287, x288, x289, x290) :|: k6 > 0 && k11 > -2 && k4 = 1 + k11
  f_284(k14, k9, k7, x, x', x'', x1, x2, x3, x4, x5, x6, x7) -> f_284(1 + k14, k45, k14, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17) :|: k14 > 0 && k9 = 0
  f_199(k38, k31, k33, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27) -> f_274(k33, 1 + k33, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38) :|: k31 > 0 && k38 = 1 + k33
  f_284(k51, k52, k53, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48) -> f_274(k53, 1 + k53, x49, x50, x51, x52, x53, x54, x55, x56, x57, x58, x59) :|: k52 < 0 && k51 = 1 + k53
  f_195(k3, k46, k28, x196, x197, x198, x199, x200, x201, x202, x203, x204, x205) -> f_284(1 + k46, k30, k46, x206, x207, x208, x209, x210, x211, x212, x213, x214, x215) :|: k46 > -1 && k3 > 0 && k28 = 1 + k46
  f_195(k50, k40, k41, x104, x105, x106, x107, x108, x109, x110, x111, x112, x113) -> f_205(k42, k43, k50, -1, 0, k32, 1, k34, k37, 3, 4, x114, x115) :|: 0 = 0 && k40 = -1 && k41 = 0
  f_274(k22, k36, x227, x228, x229, x230, x231, x232, x233, x234, x235, x236, x237) -> f_284(1 + k22, k44, k22, x238, x239, x240, x241, x242, x243, x244, x245, x246, x247) :|: k22 > -1 && k36 = 1 + k22
  f_199(k39, k25, k27, x153, x154, x155, x156, x157, x158, x159, x160, x161, x162) -> f_199(1 + k39, k21, k39, x163, x164, x165, x166, x167, x168, x169, x170, x171, x172) :|: k39 > 0 && k25 = 0
  f_73(x60, x61, x62, x63, x64, x65, x66, x67, x68, x69, x70, x71, x72) -> f_195(1 + k1, k1, 1 + k1, x73, x74, x75, x76, x77, x78, x79, x80, x81, x82) :|: k1 > -2
  f_284(k54, k48, k49, x83, x84, x85, x86, x87, x88, x89, x90, x91, x92) -> f_274(k49, 1 + k49, x93, x94, x95, x96, x97, x98, x99, x100, x101, x102, x103) :|: k48 > 0 && k54 = 1 + k49
  f_73(x116, x117, x118, x119, x120, x121, x122, x123, x124, x125, x126, x127, x128) -> f_87(k55, k56, k57, 0, 3 + k55, 3 + k56, 3, 1, 4, x129, x130, x131, x132) :|: k55 > 0 && k57 < 0 && k56 > 0
)

----------------------------------------

(11) LoAT (COMPLETE)
LoAT was called with the following command:

/aprove/bin/loat --plain --nonterm --proof-level 3 /tmp/aprove.InputModules.Programs.loat13820550819698751342.koat 

LoAT's output was:


### Pre-processing the ITS problem ###

Initial linear ITS problem
   Start location: f_73
      0: f_195 -> f_195 : k47'=1+free_5, k8'=free_5, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, [ free_5>-2 && k2>0 && k47>0 && k8==1+free_5 ], cost: 1
      8: f_195 -> f_284 : k14'=1+k8, k7'=k8, k9'=free_97, x'=free_90, x_'=free_92, x__'=free_96, x1'=free_89, x2'=free_94, x3'=free_87, x4'=free_91, x5'=free_93, x6'=free_95, x7'=free_88, [ k8>-1 && k2>0 && k47==1+k8 ], cost: 1
      9: f_195 -> f_205 : k0'=free_99, k1'=free_101, k10'=k2, k11'=-1, k12'=0, k13'=free_102, k14'=1, k15'=free_98, k16'=free_100, k17'=3, k18'=4, k19'=free_103, k2'=free_104, [ 0==0 && k8==-1 && k47==0 ], cost: 1
      1: f_274 -> f_283 : k0'=free_18, k1'=free_14, k10'=free_17, k11'=-1, k12'=0, k13'=free_12, k14'=1, k15'=free_16, k16'=free_11, k17'=free_13, k18'=free_15, k19'=3, k2'=4, [ 0==0 && k17==-1 && k18==0 ], cost: 1
      4: f_274 -> f_274 : k17'=free_48, k18'=1+free_48, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, [ k18>0 && free_48>-2 && k17==1+free_48 ], cost: 1
     10: f_274 -> f_284 : k14'=1+k17, k7'=k17, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x2'=free_109, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ k17>-1 && k18==1+k17 ], cost: 1
      2: f_73 -> f_199 : k24'=1+free_24, k26'=free_26, k35'=free_24, x248'=free_21, x249'=free_25, x250'=free_29, x251'=free_20, x252'=free_28, x253'=free_19, x254'=free_23, x255'=free_27, x256'=free_30, x257'=free_22, [ free_24>-1 ], cost: 1
     12: f_73 -> f_195 : k2'=1+free_136, k47'=1+free_136, k8'=free_136, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, [ free_136>-2 ], cost: 1
     14: f_73 -> f_87 : k0'=free_152, k1'=free_155, k10'=free_150, k11'=0, k12'=3+free_152, k13'=3+free_155, k14'=3, k15'=1, k16'=4, k17'=free_154, k18'=free_151, k19'=free_153, k2'=free_149, [ free_152>0 && free_150<0 && free_155>0 ], cost: 1
      3: f_199 -> f_274 : k17'=k35, k18'=1+k35, x216'=free_41, x217'=free_34, x218'=free_40, x219'=free_33, x220'=free_37, x221'=free_39, x222'=free_32, x223'=free_36, x224'=free_38, x225'=free_31, x226'=free_35, [ k26<0 && k24==1+k35 ], cost: 1
      6: f_199 -> f_274 : k17'=k35, k18'=1+k35, x216'=free_68, x217'=free_72, x218'=free_71, x219'=free_75, x220'=free_67, x221'=free_70, x222'=free_74, x223'=free_66, x224'=free_69, x225'=free_73, x226'=free_65, [ k26>0 && k24==1+k35 ], cost: 1
     11: f_199 -> f_199 : k24'=1+k24, k26'=free_126, k35'=k24, x248'=free_119, x249'=free_122, x250'=free_125, x251'=free_118, x252'=free_121, x253'=free_124, x254'=free_117, x255'=free_123, x256'=free_116, x257'=free_120, [ k24>0 && k26==0 ], cost: 1
      5: f_284 -> f_284 : k14'=1+k14, k7'=k14, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x2'=free_60, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ k14>0 && k9==0 ], cost: 1
      7: f_284 -> f_274 : k17'=k7, k18'=1+k7, x216'=free_86, x217'=free_82, x218'=free_85, x219'=free_78, x220'=free_81, x221'=free_84, x222'=free_77, x223'=free_80, x224'=free_83, x225'=free_76, x226'=free_79, [ k9<0 && k14==1+k7 ], cost: 1
     13: f_284 -> f_274 : k17'=k7, k18'=1+k7, x216'=free_146, x217'=free_140, x218'=free_142, x219'=free_145, x220'=free_139, x221'=free_143, x222'=free_147, x223'=free_138, x224'=free_141, x225'=free_144, x226'=free_148, [ k9>0 && k14==1+k7 ], cost: 1

Checking for constant complexity:
   The following rule is satisfiable with cost >= 1, yielding constant complexity:
      2: f_73 -> f_199 : k24'=1+free_24, k26'=free_26, k35'=free_24, x248'=free_21, x249'=free_25, x250'=free_29, x251'=free_20, x252'=free_28, x253'=free_19, x254'=free_23, x255'=free_27, x256'=free_30, x257'=free_22, [ free_24>-1 ], cost: 1

Removed unreachable and leaf rules:
   Start location: f_73
      0: f_195 -> f_195 : k47'=1+free_5, k8'=free_5, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, [ free_5>-2 && k2>0 && k47>0 && k8==1+free_5 ], cost: 1
      8: f_195 -> f_284 : k14'=1+k8, k7'=k8, k9'=free_97, x'=free_90, x_'=free_92, x__'=free_96, x1'=free_89, x2'=free_94, x3'=free_87, x4'=free_91, x5'=free_93, x6'=free_95, x7'=free_88, [ k8>-1 && k2>0 && k47==1+k8 ], cost: 1
      4: f_274 -> f_274 : k17'=free_48, k18'=1+free_48, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, [ k18>0 && free_48>-2 && k17==1+free_48 ], cost: 1
     10: f_274 -> f_284 : k14'=1+k17, k7'=k17, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x2'=free_109, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ k17>-1 && k18==1+k17 ], cost: 1
      2: f_73 -> f_199 : k24'=1+free_24, k26'=free_26, k35'=free_24, x248'=free_21, x249'=free_25, x250'=free_29, x251'=free_20, x252'=free_28, x253'=free_19, x254'=free_23, x255'=free_27, x256'=free_30, x257'=free_22, [ free_24>-1 ], cost: 1
     12: f_73 -> f_195 : k2'=1+free_136, k47'=1+free_136, k8'=free_136, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, [ free_136>-2 ], cost: 1
      3: f_199 -> f_274 : k17'=k35, k18'=1+k35, x216'=free_41, x217'=free_34, x218'=free_40, x219'=free_33, x220'=free_37, x221'=free_39, x222'=free_32, x223'=free_36, x224'=free_38, x225'=free_31, x226'=free_35, [ k26<0 && k24==1+k35 ], cost: 1
      6: f_199 -> f_274 : k17'=k35, k18'=1+k35, x216'=free_68, x217'=free_72, x218'=free_71, x219'=free_75, x220'=free_67, x221'=free_70, x222'=free_74, x223'=free_66, x224'=free_69, x225'=free_73, x226'=free_65, [ k26>0 && k24==1+k35 ], cost: 1
     11: f_199 -> f_199 : k24'=1+k24, k26'=free_126, k35'=k24, x248'=free_119, x249'=free_122, x250'=free_125, x251'=free_118, x252'=free_121, x253'=free_124, x254'=free_117, x255'=free_123, x256'=free_116, x257'=free_120, [ k24>0 && k26==0 ], cost: 1
      5: f_284 -> f_284 : k14'=1+k14, k7'=k14, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x2'=free_60, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ k14>0 && k9==0 ], cost: 1
      7: f_284 -> f_274 : k17'=k7, k18'=1+k7, x216'=free_86, x217'=free_82, x218'=free_85, x219'=free_78, x220'=free_81, x221'=free_84, x222'=free_77, x223'=free_80, x224'=free_83, x225'=free_76, x226'=free_79, [ k9<0 && k14==1+k7 ], cost: 1
     13: f_284 -> f_274 : k17'=k7, k18'=1+k7, x216'=free_146, x217'=free_140, x218'=free_142, x219'=free_145, x220'=free_139, x221'=free_143, x222'=free_147, x223'=free_138, x224'=free_141, x225'=free_144, x226'=free_148, [ k9>0 && k14==1+k7 ], cost: 1

Simplified all rules, resulting in:
   Start location: f_73
      0: f_195 -> f_195 : k47'=k8, k8'=-1+k8, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, [ -1+k8>-2 && k2>0 && k47>0 ], cost: 1
      8: f_195 -> f_284 : k14'=1+k8, k7'=k8, k9'=free_97, x'=free_90, x_'=free_92, x__'=free_96, x1'=free_89, x2'=free_94, x3'=free_87, x4'=free_91, x5'=free_93, x6'=free_95, x7'=free_88, [ k8>-1 && k2>0 && k47==1+k8 ], cost: 1
      4: f_274 -> f_274 : k17'=-1+k17, k18'=k17, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, [ k18>0 && -1+k17>-2 ], cost: 1
     10: f_274 -> f_284 : k14'=1+k17, k7'=k17, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x2'=free_109, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ k17>-1 && k18==1+k17 ], cost: 1
      2: f_73 -> f_199 : k24'=1+free_24, k26'=free_26, k35'=free_24, x248'=free_21, x249'=free_25, x250'=free_29, x251'=free_20, x252'=free_28, x253'=free_19, x254'=free_23, x255'=free_27, x256'=free_30, x257'=free_22, [ free_24>-1 ], cost: 1
     12: f_73 -> f_195 : k2'=1+free_136, k47'=1+free_136, k8'=free_136, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, [ free_136>-2 ], cost: 1
      3: f_199 -> f_274 : k17'=k35, k18'=1+k35, x216'=free_41, x217'=free_34, x218'=free_40, x219'=free_33, x220'=free_37, x221'=free_39, x222'=free_32, x223'=free_36, x224'=free_38, x225'=free_31, x226'=free_35, [ k26<0 && k24==1+k35 ], cost: 1
      6: f_199 -> f_274 : k17'=k35, k18'=1+k35, x216'=free_68, x217'=free_72, x218'=free_71, x219'=free_75, x220'=free_67, x221'=free_70, x222'=free_74, x223'=free_66, x224'=free_69, x225'=free_73, x226'=free_65, [ k26>0 && k24==1+k35 ], cost: 1
     11: f_199 -> f_199 : k24'=1+k24, k26'=free_126, k35'=k24, x248'=free_119, x249'=free_122, x250'=free_125, x251'=free_118, x252'=free_121, x253'=free_124, x254'=free_117, x255'=free_123, x256'=free_116, x257'=free_120, [ k24>0 && k26==0 ], cost: 1
      5: f_284 -> f_284 : k14'=1+k14, k7'=k14, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x2'=free_60, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ k14>0 && k9==0 ], cost: 1
      7: f_284 -> f_274 : k17'=k7, k18'=1+k7, x216'=free_86, x217'=free_82, x218'=free_85, x219'=free_78, x220'=free_81, x221'=free_84, x222'=free_77, x223'=free_80, x224'=free_83, x225'=free_76, x226'=free_79, [ k9<0 && k14==1+k7 ], cost: 1
     13: f_284 -> f_274 : k17'=k7, k18'=1+k7, x216'=free_146, x217'=free_140, x218'=free_142, x219'=free_145, x220'=free_139, x221'=free_143, x222'=free_147, x223'=free_138, x224'=free_141, x225'=free_144, x226'=free_148, [ k9>0 && k14==1+k7 ], cost: 1

### Simplification by acceleration and chaining ###

Accelerating simple loops of location 0.
   Accelerating the following rules:
      0: f_195 -> f_195 : k47'=k8, k8'=-1+k8, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, [ -1+k8>-2 && k2>0 && k47>0 ], cost: 1

[0;36m[test] deduced invariant k8-k47<=0[0m
   Accelerated rule 0 with backward acceleration, yielding the new rule 15.
   Accelerated rule 0 with backward acceleration, yielding the new rule 16.
   Also removing duplicate rules: 15.

Accelerating simple loops of location 1.
   Accelerating the following rules:
      4: f_274 -> f_274 : k17'=-1+k17, k18'=k17, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, [ k18>0 && -1+k17>-2 ], cost: 1

[0;36m[test] deduced invariant 1+k17-k18<=0[0m
   Accelerated rule 4 with backward acceleration, yielding the new rule 17.
   Accelerated rule 4 with backward acceleration, yielding the new rule 18.
   Also removing duplicate rules: 17.

Accelerating simple loops of location 3.
   Accelerating the following rules:
     11: f_199 -> f_199 : k24'=1+k24, k26'=free_126, k35'=k24, x248'=free_119, x249'=free_122, x250'=free_125, x251'=free_118, x252'=free_121, x253'=free_124, x254'=free_117, x255'=free_123, x256'=free_116, x257'=free_120, [ k24>0 && k26==0 ], cost: 1

[0;36m[test] deduced pseudo-invariant free_126-k26<=0, also trying -free_126+k26<=-1[0m
   Accelerated rule 11 with non-termination, yielding the new rule 19.
   Accelerated rule 11 with non-termination, yielding the new rule 20.

Accelerating simple loops of location 4.
   Accelerating the following rules:
      5: f_284 -> f_284 : k14'=1+k14, k7'=k14, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x2'=free_60, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ k14>0 && k9==0 ], cost: 1

[0;36m[test] deduced pseudo-invariant -k9+free_57<=0, also trying k9-free_57<=-1[0m
   Accelerated rule 5 with non-termination, yielding the new rule 21.
   Accelerated rule 5 with non-termination, yielding the new rule 22.

Accelerated all simple loops using metering functions (where possible):
   Start location: f_73
      0: f_195 -> f_195 : k47'=k8, k8'=-1+k8, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, [ -1+k8>-2 && k2>0 && k47>0 ], cost: 1
      8: f_195 -> f_284 : k14'=1+k8, k7'=k8, k9'=free_97, x'=free_90, x_'=free_92, x__'=free_96, x1'=free_89, x2'=free_94, x3'=free_87, x4'=free_91, x5'=free_93, x6'=free_95, x7'=free_88, [ k8>-1 && k2>0 && k47==1+k8 ], cost: 1
     16: f_195 -> f_195 : k47'=0, k8'=-1, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, [ k2>0 && k8-k47<=0 && 1+k8>=1 ], cost: 1+k8
      4: f_274 -> f_274 : k17'=-1+k17, k18'=k17, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, [ k18>0 && -1+k17>-2 ], cost: 1
     10: f_274 -> f_284 : k14'=1+k17, k7'=k17, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x2'=free_109, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ k17>-1 && k18==1+k17 ], cost: 1
     18: f_274 -> f_274 : k17'=-1, k18'=0, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, [ 1+k17-k18<=0 && 1+k17>=1 ], cost: 1+k17
      2: f_73 -> f_199 : k24'=1+free_24, k26'=free_26, k35'=free_24, x248'=free_21, x249'=free_25, x250'=free_29, x251'=free_20, x252'=free_28, x253'=free_19, x254'=free_23, x255'=free_27, x256'=free_30, x257'=free_22, [ free_24>-1 ], cost: 1
     12: f_73 -> f_195 : k2'=1+free_136, k47'=1+free_136, k8'=free_136, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, [ free_136>-2 ], cost: 1
      3: f_199 -> f_274 : k17'=k35, k18'=1+k35, x216'=free_41, x217'=free_34, x218'=free_40, x219'=free_33, x220'=free_37, x221'=free_39, x222'=free_32, x223'=free_36, x224'=free_38, x225'=free_31, x226'=free_35, [ k26<0 && k24==1+k35 ], cost: 1
      6: f_199 -> f_274 : k17'=k35, k18'=1+k35, x216'=free_68, x217'=free_72, x218'=free_71, x219'=free_75, x220'=free_67, x221'=free_70, x222'=free_74, x223'=free_66, x224'=free_69, x225'=free_73, x226'=free_65, [ k26>0 && k24==1+k35 ], cost: 1
     11: f_199 -> f_199 : k24'=1+k24, k26'=free_126, k35'=k24, x248'=free_119, x249'=free_122, x250'=free_125, x251'=free_118, x252'=free_121, x253'=free_124, x254'=free_117, x255'=free_123, x256'=free_116, x257'=free_120, [ k24>0 && k26==0 ], cost: 1
     19: f_199 -> [10] : [ k24>0 && k26==0 && free_126==0 ], cost: NONTERM
     20: f_199 -> [10] : [ k24>0 && k26==0 && free_126-k26<=0 && free_126==0 ], cost: NONTERM
      5: f_284 -> f_284 : k14'=1+k14, k7'=k14, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x2'=free_60, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ k14>0 && k9==0 ], cost: 1
      7: f_284 -> f_274 : k17'=k7, k18'=1+k7, x216'=free_86, x217'=free_82, x218'=free_85, x219'=free_78, x220'=free_81, x221'=free_84, x222'=free_77, x223'=free_80, x224'=free_83, x225'=free_76, x226'=free_79, [ k9<0 && k14==1+k7 ], cost: 1
     13: f_284 -> f_274 : k17'=k7, k18'=1+k7, x216'=free_146, x217'=free_140, x218'=free_142, x219'=free_145, x220'=free_139, x221'=free_143, x222'=free_147, x223'=free_138, x224'=free_141, x225'=free_144, x226'=free_148, [ k9>0 && k14==1+k7 ], cost: 1
     21: f_284 -> [11] : [ k14>0 && k9==0 && free_57==0 ], cost: NONTERM
     22: f_284 -> [11] : [ k14>0 && k9==0 && -k9+free_57<=0 && free_57==0 ], cost: NONTERM

Chaining 10 accelerated rules with incoming rules:
   Chained incoming rule 12 with accelerated rule 0 to new rule 23.
   Removing accelerated rule 0.
   Chained incoming rule 12 with accelerated rule 16 to new rule 24.
   Removing accelerated rule 16.
   Chained incoming rule 3 with accelerated rule 4 to new rule 25.
   Chained incoming rule 6 with accelerated rule 4 to new rule 26.
   Chained incoming rule 7 with accelerated rule 4 to new rule 27.
   Chained incoming rule 13 with accelerated rule 4 to new rule 28.
   Removing accelerated rule 4.
   Chained incoming rule 3 with accelerated rule 18 to new rule 29.
   Chained incoming rule 6 with accelerated rule 18 to new rule 30.
   Chained incoming rule 7 with accelerated rule 18 to new rule 31.
   Chained incoming rule 13 with accelerated rule 18 to new rule 32.
   Removing accelerated rule 18.
   Chained incoming rule 2 with accelerated rule 11 to new rule 33.
   Removing accelerated rule 11.
   Chained incoming rule 2 with accelerated rule 19 to new rule 34.
   Removing accelerated rule 19.
   Chained incoming rule 2 with accelerated rule 20 to new rule 35.
   Removing accelerated rule 20.
   Chained incoming rule 8 with accelerated rule 5 to new rule 36.
   Chained incoming rule 10 with accelerated rule 5 to new rule 37.
   Removing accelerated rule 5.
   Chained incoming rule 8 with accelerated rule 21 to new rule 38.
   Chained incoming rule 10 with accelerated rule 21 to new rule 39.
   Removing accelerated rule 21.
   Chained incoming rule 8 with accelerated rule 22 to new rule 40.
   Chained incoming rule 10 with accelerated rule 22 to new rule 41.
   Removing accelerated rule 22.

Chained accelerated rules (with incoming rules):
   Start location: f_73
      8: f_195 -> f_284 : k14'=1+k8, k7'=k8, k9'=free_97, x'=free_90, x_'=free_92, x__'=free_96, x1'=free_89, x2'=free_94, x3'=free_87, x4'=free_91, x5'=free_93, x6'=free_95, x7'=free_88, [ k8>-1 && k2>0 && k47==1+k8 ], cost: 1
     36: f_195 -> f_284 : k14'=2+k8, k7'=1+k8, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x2'=free_60, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ k8>-1 && k2>0 && k47==1+k8 ], cost: 2
     38: f_195 -> [11] : [ k8>-1 && k2>0 && k47==1+k8 ], cost: NONTERM
     40: f_195 -> [11] : [ k8>-1 && k2>0 && k47==1+k8 ], cost: NONTERM
     10: f_274 -> f_284 : k14'=1+k17, k7'=k17, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x2'=free_109, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ k17>-1 && k18==1+k17 ], cost: 1
     37: f_274 -> f_284 : k14'=2+k17, k7'=1+k17, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x2'=free_60, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ k17>-1 && k18==1+k17 ], cost: 2
     39: f_274 -> [11] : [ k17>-1 && k18==1+k17 ], cost: NONTERM
     41: f_274 -> [11] : [ k17>-1 && k18==1+k17 ], cost: NONTERM
      2: f_73 -> f_199 : k24'=1+free_24, k26'=free_26, k35'=free_24, x248'=free_21, x249'=free_25, x250'=free_29, x251'=free_20, x252'=free_28, x253'=free_19, x254'=free_23, x255'=free_27, x256'=free_30, x257'=free_22, [ free_24>-1 ], cost: 1
     12: f_73 -> f_195 : k2'=1+free_136, k47'=1+free_136, k8'=free_136, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, [ free_136>-2 ], cost: 1
     23: f_73 -> f_195 : k2'=1+free_136, k47'=free_136, k8'=-1+free_136, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, [ -1+free_136>-2 ], cost: 2
     24: f_73 -> f_195 : k2'=1+free_136, k47'=0, k8'=-1, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, [ 1+free_136>0 ], cost: 2+free_136
     33: f_73 -> f_199 : k24'=2+free_24, k26'=free_126, k35'=1+free_24, x248'=free_119, x249'=free_122, x250'=free_125, x251'=free_118, x252'=free_121, x253'=free_124, x254'=free_117, x255'=free_123, x256'=free_116, x257'=free_120, [ free_24>-1 ], cost: 2
     34: f_73 -> [10] : [], cost: NONTERM
     35: f_73 -> [10] : [], cost: NONTERM
      3: f_199 -> f_274 : k17'=k35, k18'=1+k35, x216'=free_41, x217'=free_34, x218'=free_40, x219'=free_33, x220'=free_37, x221'=free_39, x222'=free_32, x223'=free_36, x224'=free_38, x225'=free_31, x226'=free_35, [ k26<0 && k24==1+k35 ], cost: 1
      6: f_199 -> f_274 : k17'=k35, k18'=1+k35, x216'=free_68, x217'=free_72, x218'=free_71, x219'=free_75, x220'=free_67, x221'=free_70, x222'=free_74, x223'=free_66, x224'=free_69, x225'=free_73, x226'=free_65, [ k26>0 && k24==1+k35 ], cost: 1
     25: f_199 -> f_274 : k17'=-1+k35, k18'=k35, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, [ k26<0 && k24==1+k35 && 1+k35>0 ], cost: 2
     26: f_199 -> f_274 : k17'=-1+k35, k18'=k35, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, [ k26>0 && k24==1+k35 && 1+k35>0 ], cost: 2
     29: f_199 -> f_274 : k17'=-1, k18'=0, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, [ k26<0 && k24==1+k35 && 1+k35>=1 ], cost: 2+k35
     30: f_199 -> f_274 : k17'=-1, k18'=0, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, [ k26>0 && k24==1+k35 && 1+k35>=1 ], cost: 2+k35
      7: f_284 -> f_274 : k17'=k7, k18'=1+k7, x216'=free_86, x217'=free_82, x218'=free_85, x219'=free_78, x220'=free_81, x221'=free_84, x222'=free_77, x223'=free_80, x224'=free_83, x225'=free_76, x226'=free_79, [ k9<0 && k14==1+k7 ], cost: 1
     13: f_284 -> f_274 : k17'=k7, k18'=1+k7, x216'=free_146, x217'=free_140, x218'=free_142, x219'=free_145, x220'=free_139, x221'=free_143, x222'=free_147, x223'=free_138, x224'=free_141, x225'=free_144, x226'=free_148, [ k9>0 && k14==1+k7 ], cost: 1
     27: f_284 -> f_274 : k17'=-1+k7, k18'=k7, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, [ k9<0 && k14==1+k7 && 1+k7>0 ], cost: 2
     28: f_284 -> f_274 : k17'=-1+k7, k18'=k7, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, [ k9>0 && k14==1+k7 && 1+k7>0 ], cost: 2
     31: f_284 -> f_274 : k17'=-1, k18'=0, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, [ k9<0 && k14==1+k7 && 1+k7>=1 ], cost: 2+k7
     32: f_284 -> f_274 : k17'=-1, k18'=0, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, [ k9>0 && k14==1+k7 && 1+k7>=1 ], cost: 2+k7

Eliminating location f_195 by chaining:
   Chained rules 12 and 8 to new rule 42.
   Chained rules 12 and 36 to new rule 43.
   Chained rules 12 and 38 to new rule 44.
   Chained rules 12 and 40 to new rule 45.
   Chained rules 23 and 8 to new rule 46.
   Chained rules 23 and 36 to new rule 47.
   Chained rules 23 and 38 to new rule 48.
   Chained rules 23 and 40 to new rule 49.
   Failed to chain rules 24 and 8.
   Failed to chain rules 24 and 36.
   Failed to chain rules 24 and 38.
   Failed to chain rules 24 and 40.
   Keeping rule 24 by adding a dummy rule 50.

Eliminating location f_199 by chaining:
   Chained rules 2 and 3 to new rule 51.
   Chained rules 2 and 6 to new rule 52.
   Chained rules 2 and 25 to new rule 53.
   Chained rules 2 and 26 to new rule 54.
   Chained rules 2 and 29 to new rule 55.
   Chained rules 2 and 30 to new rule 56.
   Chained rules 33 and 3 to new rule 57.
   Chained rules 33 and 6 to new rule 58.
   Chained rules 33 and 25 to new rule 59.
   Chained rules 33 and 26 to new rule 60.
   Chained rules 33 and 29 to new rule 61.
   Chained rules 33 and 30 to new rule 62.

Eliminated locations (on tree-shaped paths):
   Start location: f_73
     10: f_274 -> f_284 : k14'=1+k17, k7'=k17, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x2'=free_109, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ k17>-1 && k18==1+k17 ], cost: 1
     37: f_274 -> f_284 : k14'=2+k17, k7'=1+k17, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x2'=free_60, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ k17>-1 && k18==1+k17 ], cost: 2
     39: f_274 -> [11] : [ k17>-1 && k18==1+k17 ], cost: NONTERM
     41: f_274 -> [11] : [ k17>-1 && k18==1+k17 ], cost: NONTERM
     34: f_73 -> [10] : [], cost: NONTERM
     35: f_73 -> [10] : [], cost: NONTERM
     42: f_73 -> f_284 : k14'=1+free_136, k2'=1+free_136, k47'=1+free_136, k7'=free_136, k8'=free_136, k9'=free_97, x'=free_90, x_'=free_92, x__'=free_96, x1'=free_89, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_94, x3'=free_87, x4'=free_91, x5'=free_93, x6'=free_95, x7'=free_88, [ free_136>-1 ], cost: 2
     43: f_73 -> f_284 : k14'=2+free_136, k2'=1+free_136, k47'=1+free_136, k7'=1+free_136, k8'=free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_60, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ free_136>-1 ], cost: 3
     44: f_73 -> [11] : [ free_136>-1 ], cost: NONTERM
     45: f_73 -> [11] : [ free_136>-1 ], cost: NONTERM
     46: f_73 -> f_284 : k14'=free_136, k2'=1+free_136, k47'=free_136, k7'=-1+free_136, k8'=-1+free_136, k9'=free_97, x'=free_90, x_'=free_92, x__'=free_96, x1'=free_89, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_94, x3'=free_87, x4'=free_91, x5'=free_93, x6'=free_95, x7'=free_88, [ -1+free_136>-1 ], cost: 3
     47: f_73 -> f_284 : k14'=1+free_136, k2'=1+free_136, k47'=free_136, k7'=free_136, k8'=-1+free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_60, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ -1+free_136>-1 ], cost: 4
     48: f_73 -> [11] : [ -1+free_136>-1 ], cost: NONTERM
     49: f_73 -> [11] : [ -1+free_136>-1 ], cost: NONTERM
     50: f_73 -> [12] : [ 1+free_136>0 ], cost: 2+free_136
     51: f_73 -> f_274 : k17'=free_24, k18'=1+free_24, k24'=1+free_24, k26'=free_26, k35'=free_24, x216'=free_41, x217'=free_34, x218'=free_40, x219'=free_33, x220'=free_37, x221'=free_39, x222'=free_32, x223'=free_36, x224'=free_38, x225'=free_31, x226'=free_35, x248'=free_21, x249'=free_25, x250'=free_29, x251'=free_20, x252'=free_28, x253'=free_19, x254'=free_23, x255'=free_27, x256'=free_30, x257'=free_22, [ free_24>-1 && free_26<0 ], cost: 2
     52: f_73 -> f_274 : k17'=free_24, k18'=1+free_24, k24'=1+free_24, k26'=free_26, k35'=free_24, x216'=free_68, x217'=free_72, x218'=free_71, x219'=free_75, x220'=free_67, x221'=free_70, x222'=free_74, x223'=free_66, x224'=free_69, x225'=free_73, x226'=free_65, x248'=free_21, x249'=free_25, x250'=free_29, x251'=free_20, x252'=free_28, x253'=free_19, x254'=free_23, x255'=free_27, x256'=free_30, x257'=free_22, [ free_24>-1 && free_26>0 ], cost: 2
     53: f_73 -> f_274 : k17'=-1+free_24, k18'=free_24, k24'=1+free_24, k26'=free_26, k35'=free_24, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x248'=free_21, x249'=free_25, x250'=free_29, x251'=free_20, x252'=free_28, x253'=free_19, x254'=free_23, x255'=free_27, x256'=free_30, x257'=free_22, [ free_24>-1 && free_26<0 ], cost: 3
     54: f_73 -> f_274 : k17'=-1+free_24, k18'=free_24, k24'=1+free_24, k26'=free_26, k35'=free_24, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x248'=free_21, x249'=free_25, x250'=free_29, x251'=free_20, x252'=free_28, x253'=free_19, x254'=free_23, x255'=free_27, x256'=free_30, x257'=free_22, [ free_24>-1 && free_26>0 ], cost: 3
     55: f_73 -> f_274 : k17'=-1, k18'=0, k24'=1+free_24, k26'=free_26, k35'=free_24, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x248'=free_21, x249'=free_25, x250'=free_29, x251'=free_20, x252'=free_28, x253'=free_19, x254'=free_23, x255'=free_27, x256'=free_30, x257'=free_22, [ free_24>-1 && free_26<0 ], cost: 3+free_24
     56: f_73 -> f_274 : k17'=-1, k18'=0, k24'=1+free_24, k26'=free_26, k35'=free_24, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x248'=free_21, x249'=free_25, x250'=free_29, x251'=free_20, x252'=free_28, x253'=free_19, x254'=free_23, x255'=free_27, x256'=free_30, x257'=free_22, [ free_24>-1 && free_26>0 ], cost: 3+free_24
     57: f_73 -> f_274 : k17'=1+free_24, k18'=2+free_24, k24'=2+free_24, k26'=free_126, k35'=1+free_24, x216'=free_41, x217'=free_34, x218'=free_40, x219'=free_33, x220'=free_37, x221'=free_39, x222'=free_32, x223'=free_36, x224'=free_38, x225'=free_31, x226'=free_35, x248'=free_119, x249'=free_122, x250'=free_125, x251'=free_118, x252'=free_121, x253'=free_124, x254'=free_117, x255'=free_123, x256'=free_116, x257'=free_120, [ free_24>-1 && free_126<0 ], cost: 3
     58: f_73 -> f_274 : k17'=1+free_24, k18'=2+free_24, k24'=2+free_24, k26'=free_126, k35'=1+free_24, x216'=free_68, x217'=free_72, x218'=free_71, x219'=free_75, x220'=free_67, x221'=free_70, x222'=free_74, x223'=free_66, x224'=free_69, x225'=free_73, x226'=free_65, x248'=free_119, x249'=free_122, x250'=free_125, x251'=free_118, x252'=free_121, x253'=free_124, x254'=free_117, x255'=free_123, x256'=free_116, x257'=free_120, [ free_24>-1 && free_126>0 ], cost: 3
     59: f_73 -> f_274 : k17'=free_24, k18'=1+free_24, k24'=2+free_24, k26'=free_126, k35'=1+free_24, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x248'=free_119, x249'=free_122, x250'=free_125, x251'=free_118, x252'=free_121, x253'=free_124, x254'=free_117, x255'=free_123, x256'=free_116, x257'=free_120, [ free_24>-1 && free_126<0 ], cost: 4
     60: f_73 -> f_274 : k17'=free_24, k18'=1+free_24, k24'=2+free_24, k26'=free_126, k35'=1+free_24, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x248'=free_119, x249'=free_122, x250'=free_125, x251'=free_118, x252'=free_121, x253'=free_124, x254'=free_117, x255'=free_123, x256'=free_116, x257'=free_120, [ free_24>-1 && free_126>0 ], cost: 4
     61: f_73 -> f_274 : k17'=-1, k18'=0, k24'=2+free_24, k26'=free_126, k35'=1+free_24, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x248'=free_119, x249'=free_122, x250'=free_125, x251'=free_118, x252'=free_121, x253'=free_124, x254'=free_117, x255'=free_123, x256'=free_116, x257'=free_120, [ free_24>-1 && free_126<0 ], cost: 5+free_24
     62: f_73 -> f_274 : k17'=-1, k18'=0, k24'=2+free_24, k26'=free_126, k35'=1+free_24, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x248'=free_119, x249'=free_122, x250'=free_125, x251'=free_118, x252'=free_121, x253'=free_124, x254'=free_117, x255'=free_123, x256'=free_116, x257'=free_120, [ free_24>-1 && free_126>0 ], cost: 5+free_24
      7: f_284 -> f_274 : k17'=k7, k18'=1+k7, x216'=free_86, x217'=free_82, x218'=free_85, x219'=free_78, x220'=free_81, x221'=free_84, x222'=free_77, x223'=free_80, x224'=free_83, x225'=free_76, x226'=free_79, [ k9<0 && k14==1+k7 ], cost: 1
     13: f_284 -> f_274 : k17'=k7, k18'=1+k7, x216'=free_146, x217'=free_140, x218'=free_142, x219'=free_145, x220'=free_139, x221'=free_143, x222'=free_147, x223'=free_138, x224'=free_141, x225'=free_144, x226'=free_148, [ k9>0 && k14==1+k7 ], cost: 1
     27: f_284 -> f_274 : k17'=-1+k7, k18'=k7, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, [ k9<0 && k14==1+k7 && 1+k7>0 ], cost: 2
     28: f_284 -> f_274 : k17'=-1+k7, k18'=k7, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, [ k9>0 && k14==1+k7 && 1+k7>0 ], cost: 2
     31: f_284 -> f_274 : k17'=-1, k18'=0, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, [ k9<0 && k14==1+k7 && 1+k7>=1 ], cost: 2+k7
     32: f_284 -> f_274 : k17'=-1, k18'=0, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, [ k9>0 && k14==1+k7 && 1+k7>=1 ], cost: 2+k7

Merged rules:
   Start location: f_73
     10: f_274 -> f_284 : k14'=1+k17, k7'=k17, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x2'=free_109, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ k17>-1 && k18==1+k17 ], cost: 1
     37: f_274 -> f_284 : k14'=2+k17, k7'=1+k17, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x2'=free_60, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ k17>-1 && k18==1+k17 ], cost: 2
     63: f_274 -> [11] : [ k17>-1 && k18==1+k17 ], cost: NONTERM
     42: f_73 -> f_284 : k14'=1+free_136, k2'=1+free_136, k47'=1+free_136, k7'=free_136, k8'=free_136, k9'=free_97, x'=free_90, x_'=free_92, x__'=free_96, x1'=free_89, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_94, x3'=free_87, x4'=free_91, x5'=free_93, x6'=free_95, x7'=free_88, [ free_136>-1 ], cost: 2
     43: f_73 -> f_284 : k14'=2+free_136, k2'=1+free_136, k47'=1+free_136, k7'=1+free_136, k8'=free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_60, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ free_136>-1 ], cost: 3
     46: f_73 -> f_284 : k14'=free_136, k2'=1+free_136, k47'=free_136, k7'=-1+free_136, k8'=-1+free_136, k9'=free_97, x'=free_90, x_'=free_92, x__'=free_96, x1'=free_89, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_94, x3'=free_87, x4'=free_91, x5'=free_93, x6'=free_95, x7'=free_88, [ -1+free_136>-1 ], cost: 3
     47: f_73 -> f_284 : k14'=1+free_136, k2'=1+free_136, k47'=free_136, k7'=free_136, k8'=-1+free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_60, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ -1+free_136>-1 ], cost: 4
     50: f_73 -> [12] : [ 1+free_136>0 ], cost: 2+free_136
     51: f_73 -> f_274 : k17'=free_24, k18'=1+free_24, k24'=1+free_24, k26'=free_26, k35'=free_24, x216'=free_41, x217'=free_34, x218'=free_40, x219'=free_33, x220'=free_37, x221'=free_39, x222'=free_32, x223'=free_36, x224'=free_38, x225'=free_31, x226'=free_35, x248'=free_21, x249'=free_25, x250'=free_29, x251'=free_20, x252'=free_28, x253'=free_19, x254'=free_23, x255'=free_27, x256'=free_30, x257'=free_22, [ free_24>-1 && free_26<0 ], cost: 2
     52: f_73 -> f_274 : k17'=free_24, k18'=1+free_24, k24'=1+free_24, k26'=free_26, k35'=free_24, x216'=free_68, x217'=free_72, x218'=free_71, x219'=free_75, x220'=free_67, x221'=free_70, x222'=free_74, x223'=free_66, x224'=free_69, x225'=free_73, x226'=free_65, x248'=free_21, x249'=free_25, x250'=free_29, x251'=free_20, x252'=free_28, x253'=free_19, x254'=free_23, x255'=free_27, x256'=free_30, x257'=free_22, [ free_24>-1 && free_26>0 ], cost: 2
     53: f_73 -> f_274 : k17'=-1+free_24, k18'=free_24, k24'=1+free_24, k26'=free_26, k35'=free_24, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x248'=free_21, x249'=free_25, x250'=free_29, x251'=free_20, x252'=free_28, x253'=free_19, x254'=free_23, x255'=free_27, x256'=free_30, x257'=free_22, [ free_24>-1 && free_26<0 ], cost: 3
     54: f_73 -> f_274 : k17'=-1+free_24, k18'=free_24, k24'=1+free_24, k26'=free_26, k35'=free_24, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x248'=free_21, x249'=free_25, x250'=free_29, x251'=free_20, x252'=free_28, x253'=free_19, x254'=free_23, x255'=free_27, x256'=free_30, x257'=free_22, [ free_24>-1 && free_26>0 ], cost: 3
     55: f_73 -> f_274 : k17'=-1, k18'=0, k24'=1+free_24, k26'=free_26, k35'=free_24, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x248'=free_21, x249'=free_25, x250'=free_29, x251'=free_20, x252'=free_28, x253'=free_19, x254'=free_23, x255'=free_27, x256'=free_30, x257'=free_22, [ free_24>-1 && free_26<0 ], cost: 3+free_24
     56: f_73 -> f_274 : k17'=-1, k18'=0, k24'=1+free_24, k26'=free_26, k35'=free_24, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x248'=free_21, x249'=free_25, x250'=free_29, x251'=free_20, x252'=free_28, x253'=free_19, x254'=free_23, x255'=free_27, x256'=free_30, x257'=free_22, [ free_24>-1 && free_26>0 ], cost: 3+free_24
     57: f_73 -> f_274 : k17'=1+free_24, k18'=2+free_24, k24'=2+free_24, k26'=free_126, k35'=1+free_24, x216'=free_41, x217'=free_34, x218'=free_40, x219'=free_33, x220'=free_37, x221'=free_39, x222'=free_32, x223'=free_36, x224'=free_38, x225'=free_31, x226'=free_35, x248'=free_119, x249'=free_122, x250'=free_125, x251'=free_118, x252'=free_121, x253'=free_124, x254'=free_117, x255'=free_123, x256'=free_116, x257'=free_120, [ free_24>-1 && free_126<0 ], cost: 3
     58: f_73 -> f_274 : k17'=1+free_24, k18'=2+free_24, k24'=2+free_24, k26'=free_126, k35'=1+free_24, x216'=free_68, x217'=free_72, x218'=free_71, x219'=free_75, x220'=free_67, x221'=free_70, x222'=free_74, x223'=free_66, x224'=free_69, x225'=free_73, x226'=free_65, x248'=free_119, x249'=free_122, x250'=free_125, x251'=free_118, x252'=free_121, x253'=free_124, x254'=free_117, x255'=free_123, x256'=free_116, x257'=free_120, [ free_24>-1 && free_126>0 ], cost: 3
     59: f_73 -> f_274 : k17'=free_24, k18'=1+free_24, k24'=2+free_24, k26'=free_126, k35'=1+free_24, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x248'=free_119, x249'=free_122, x250'=free_125, x251'=free_118, x252'=free_121, x253'=free_124, x254'=free_117, x255'=free_123, x256'=free_116, x257'=free_120, [ free_24>-1 && free_126<0 ], cost: 4
     60: f_73 -> f_274 : k17'=free_24, k18'=1+free_24, k24'=2+free_24, k26'=free_126, k35'=1+free_24, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x248'=free_119, x249'=free_122, x250'=free_125, x251'=free_118, x252'=free_121, x253'=free_124, x254'=free_117, x255'=free_123, x256'=free_116, x257'=free_120, [ free_24>-1 && free_126>0 ], cost: 4
     61: f_73 -> f_274 : k17'=-1, k18'=0, k24'=2+free_24, k26'=free_126, k35'=1+free_24, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x248'=free_119, x249'=free_122, x250'=free_125, x251'=free_118, x252'=free_121, x253'=free_124, x254'=free_117, x255'=free_123, x256'=free_116, x257'=free_120, [ free_24>-1 && free_126<0 ], cost: 5+free_24
     62: f_73 -> f_274 : k17'=-1, k18'=0, k24'=2+free_24, k26'=free_126, k35'=1+free_24, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x248'=free_119, x249'=free_122, x250'=free_125, x251'=free_118, x252'=free_121, x253'=free_124, x254'=free_117, x255'=free_123, x256'=free_116, x257'=free_120, [ free_24>-1 && free_126>0 ], cost: 5+free_24
     64: f_73 -> [10] : [], cost: NONTERM
     65: f_73 -> [11] : [ free_136>-1 ], cost: NONTERM
     66: f_73 -> [11] : [ -1+free_136>-1 ], cost: NONTERM
      7: f_284 -> f_274 : k17'=k7, k18'=1+k7, x216'=free_86, x217'=free_82, x218'=free_85, x219'=free_78, x220'=free_81, x221'=free_84, x222'=free_77, x223'=free_80, x224'=free_83, x225'=free_76, x226'=free_79, [ k9<0 && k14==1+k7 ], cost: 1
     13: f_284 -> f_274 : k17'=k7, k18'=1+k7, x216'=free_146, x217'=free_140, x218'=free_142, x219'=free_145, x220'=free_139, x221'=free_143, x222'=free_147, x223'=free_138, x224'=free_141, x225'=free_144, x226'=free_148, [ k9>0 && k14==1+k7 ], cost: 1
     27: f_284 -> f_274 : k17'=-1+k7, k18'=k7, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, [ k9<0 && k14==1+k7 && 1+k7>0 ], cost: 2
     28: f_284 -> f_274 : k17'=-1+k7, k18'=k7, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, [ k9>0 && k14==1+k7 && 1+k7>0 ], cost: 2
     31: f_284 -> f_274 : k17'=-1, k18'=0, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, [ k9<0 && k14==1+k7 && 1+k7>=1 ], cost: 2+k7
     32: f_284 -> f_274 : k17'=-1, k18'=0, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, [ k9>0 && k14==1+k7 && 1+k7>=1 ], cost: 2+k7

Applied pruning (of leafs and parallel rules):
   Start location: f_73
     10: f_274 -> f_284 : k14'=1+k17, k7'=k17, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x2'=free_109, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ k17>-1 && k18==1+k17 ], cost: 1
     37: f_274 -> f_284 : k14'=2+k17, k7'=1+k17, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x2'=free_60, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ k17>-1 && k18==1+k17 ], cost: 2
     63: f_274 -> [11] : [ k17>-1 && k18==1+k17 ], cost: NONTERM
     42: f_73 -> f_284 : k14'=1+free_136, k2'=1+free_136, k47'=1+free_136, k7'=free_136, k8'=free_136, k9'=free_97, x'=free_90, x_'=free_92, x__'=free_96, x1'=free_89, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_94, x3'=free_87, x4'=free_91, x5'=free_93, x6'=free_95, x7'=free_88, [ free_136>-1 ], cost: 2
     43: f_73 -> f_284 : k14'=2+free_136, k2'=1+free_136, k47'=1+free_136, k7'=1+free_136, k8'=free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_60, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ free_136>-1 ], cost: 3
     46: f_73 -> f_284 : k14'=free_136, k2'=1+free_136, k47'=free_136, k7'=-1+free_136, k8'=-1+free_136, k9'=free_97, x'=free_90, x_'=free_92, x__'=free_96, x1'=free_89, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_94, x3'=free_87, x4'=free_91, x5'=free_93, x6'=free_95, x7'=free_88, [ -1+free_136>-1 ], cost: 3
     47: f_73 -> f_284 : k14'=1+free_136, k2'=1+free_136, k47'=free_136, k7'=free_136, k8'=-1+free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_60, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ -1+free_136>-1 ], cost: 4
     50: f_73 -> [12] : [ 1+free_136>0 ], cost: 2+free_136
     52: f_73 -> f_274 : k17'=free_24, k18'=1+free_24, k24'=1+free_24, k26'=free_26, k35'=free_24, x216'=free_68, x217'=free_72, x218'=free_71, x219'=free_75, x220'=free_67, x221'=free_70, x222'=free_74, x223'=free_66, x224'=free_69, x225'=free_73, x226'=free_65, x248'=free_21, x249'=free_25, x250'=free_29, x251'=free_20, x252'=free_28, x253'=free_19, x254'=free_23, x255'=free_27, x256'=free_30, x257'=free_22, [ free_24>-1 && free_26>0 ], cost: 2
     55: f_73 -> f_274 : k17'=-1, k18'=0, k24'=1+free_24, k26'=free_26, k35'=free_24, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x248'=free_21, x249'=free_25, x250'=free_29, x251'=free_20, x252'=free_28, x253'=free_19, x254'=free_23, x255'=free_27, x256'=free_30, x257'=free_22, [ free_24>-1 && free_26<0 ], cost: 3+free_24
     56: f_73 -> f_274 : k17'=-1, k18'=0, k24'=1+free_24, k26'=free_26, k35'=free_24, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x248'=free_21, x249'=free_25, x250'=free_29, x251'=free_20, x252'=free_28, x253'=free_19, x254'=free_23, x255'=free_27, x256'=free_30, x257'=free_22, [ free_24>-1 && free_26>0 ], cost: 3+free_24
     61: f_73 -> f_274 : k17'=-1, k18'=0, k24'=2+free_24, k26'=free_126, k35'=1+free_24, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x248'=free_119, x249'=free_122, x250'=free_125, x251'=free_118, x252'=free_121, x253'=free_124, x254'=free_117, x255'=free_123, x256'=free_116, x257'=free_120, [ free_24>-1 && free_126<0 ], cost: 5+free_24
     62: f_73 -> f_274 : k17'=-1, k18'=0, k24'=2+free_24, k26'=free_126, k35'=1+free_24, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x248'=free_119, x249'=free_122, x250'=free_125, x251'=free_118, x252'=free_121, x253'=free_124, x254'=free_117, x255'=free_123, x256'=free_116, x257'=free_120, [ free_24>-1 && free_126>0 ], cost: 5+free_24
     64: f_73 -> [10] : [], cost: NONTERM
     65: f_73 -> [11] : [ free_136>-1 ], cost: NONTERM
     66: f_73 -> [11] : [ -1+free_136>-1 ], cost: NONTERM
     13: f_284 -> f_274 : k17'=k7, k18'=1+k7, x216'=free_146, x217'=free_140, x218'=free_142, x219'=free_145, x220'=free_139, x221'=free_143, x222'=free_147, x223'=free_138, x224'=free_141, x225'=free_144, x226'=free_148, [ k9>0 && k14==1+k7 ], cost: 1
     27: f_284 -> f_274 : k17'=-1+k7, k18'=k7, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, [ k9<0 && k14==1+k7 && 1+k7>0 ], cost: 2
     28: f_284 -> f_274 : k17'=-1+k7, k18'=k7, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, [ k9>0 && k14==1+k7 && 1+k7>0 ], cost: 2
     31: f_284 -> f_274 : k17'=-1, k18'=0, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, [ k9<0 && k14==1+k7 && 1+k7>=1 ], cost: 2+k7
     32: f_284 -> f_274 : k17'=-1, k18'=0, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, [ k9>0 && k14==1+k7 && 1+k7>=1 ], cost: 2+k7

Eliminating location f_274 by chaining:
   Chained rules 13 and 10 to new rule 67.
   Chained rules 13 and 37 to new rule 68.
   Chained rules 13 and 63 to new rule 69.
   Chained rules 27 and 10 to new rule 70.
   Chained rules 27 and 37 to new rule 71.
   Chained rules 27 and 63 to new rule 72.
   Chained rules 28 and 10 to new rule 73.
   Chained rules 28 and 37 to new rule 74.
   Chained rules 28 and 63 to new rule 75.
   Failed to chain rules 31 and 10.
   Failed to chain rules 31 and 37.
   Failed to chain rules 31 and 63.
   Failed to chain rules 32 and 10.
   Failed to chain rules 32 and 37.
   Failed to chain rules 32 and 63.
   Chained rules 52 and 10 to new rule 76.
   Chained rules 52 and 37 to new rule 77.
   Chained rules 52 and 63 to new rule 78.
   Failed to chain rules 55 and 10.
   Failed to chain rules 55 and 37.
   Failed to chain rules 55 and 63.
   Failed to chain rules 56 and 10.
   Failed to chain rules 56 and 37.
   Failed to chain rules 56 and 63.
   Failed to chain rules 61 and 10.
   Failed to chain rules 61 and 37.
   Failed to chain rules 61 and 63.
   Failed to chain rules 62 and 10.
   Failed to chain rules 62 and 37.
   Failed to chain rules 62 and 63.
   Keeping rule 31 by adding a dummy rule 79.
   Keeping rule 32 by adding a dummy rule 80.
   Keeping rule 55 by adding a dummy rule 81.
   Keeping rule 56 by adding a dummy rule 82.
   Keeping rule 61 by adding a dummy rule 83.
   Keeping rule 62 by adding a dummy rule 84.

Eliminated location f_274 (as a last resort):
   Start location: f_73
     42: f_73 -> f_284 : k14'=1+free_136, k2'=1+free_136, k47'=1+free_136, k7'=free_136, k8'=free_136, k9'=free_97, x'=free_90, x_'=free_92, x__'=free_96, x1'=free_89, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_94, x3'=free_87, x4'=free_91, x5'=free_93, x6'=free_95, x7'=free_88, [ free_136>-1 ], cost: 2
     43: f_73 -> f_284 : k14'=2+free_136, k2'=1+free_136, k47'=1+free_136, k7'=1+free_136, k8'=free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_60, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ free_136>-1 ], cost: 3
     46: f_73 -> f_284 : k14'=free_136, k2'=1+free_136, k47'=free_136, k7'=-1+free_136, k8'=-1+free_136, k9'=free_97, x'=free_90, x_'=free_92, x__'=free_96, x1'=free_89, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_94, x3'=free_87, x4'=free_91, x5'=free_93, x6'=free_95, x7'=free_88, [ -1+free_136>-1 ], cost: 3
     47: f_73 -> f_284 : k14'=1+free_136, k2'=1+free_136, k47'=free_136, k7'=free_136, k8'=-1+free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_60, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ -1+free_136>-1 ], cost: 4
     50: f_73 -> [12] : [ 1+free_136>0 ], cost: 2+free_136
     64: f_73 -> [10] : [], cost: NONTERM
     65: f_73 -> [11] : [ free_136>-1 ], cost: NONTERM
     66: f_73 -> [11] : [ -1+free_136>-1 ], cost: NONTERM
     76: f_73 -> f_284 : k14'=1+free_24, k17'=free_24, k18'=1+free_24, k24'=1+free_24, k26'=free_26, k35'=free_24, k7'=free_24, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x2'=free_109, x216'=free_68, x217'=free_72, x218'=free_71, x219'=free_75, x220'=free_67, x221'=free_70, x222'=free_74, x223'=free_66, x224'=free_69, x225'=free_73, x226'=free_65, x248'=free_21, x249'=free_25, x250'=free_29, x251'=free_20, x252'=free_28, x253'=free_19, x254'=free_23, x255'=free_27, x256'=free_30, x257'=free_22, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ free_24>-1 && free_26>0 ], cost: 3
     77: f_73 -> f_284 : k14'=2+free_24, k17'=free_24, k18'=1+free_24, k24'=1+free_24, k26'=free_26, k35'=free_24, k7'=1+free_24, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x2'=free_60, x216'=free_68, x217'=free_72, x218'=free_71, x219'=free_75, x220'=free_67, x221'=free_70, x222'=free_74, x223'=free_66, x224'=free_69, x225'=free_73, x226'=free_65, x248'=free_21, x249'=free_25, x250'=free_29, x251'=free_20, x252'=free_28, x253'=free_19, x254'=free_23, x255'=free_27, x256'=free_30, x257'=free_22, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ free_24>-1 && free_26>0 ], cost: 4
     78: f_73 -> [11] : [ free_24>-1 && free_26>0 ], cost: NONTERM
     81: f_73 -> [13] : [ free_24>-1 && free_26<0 ], cost: 3+free_24
     82: f_73 -> [13] : [ free_24>-1 && free_26>0 ], cost: 3+free_24
     83: f_73 -> [13] : [ free_24>-1 && free_126<0 ], cost: 5+free_24
     84: f_73 -> [13] : [ free_24>-1 && free_126>0 ], cost: 5+free_24
     67: f_284 -> f_284 : k14'=1+k7, k17'=k7, k18'=1+k7, k7'=k7, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x2'=free_109, x216'=free_146, x217'=free_140, x218'=free_142, x219'=free_145, x220'=free_139, x221'=free_143, x222'=free_147, x223'=free_138, x224'=free_141, x225'=free_144, x226'=free_148, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ k9>0 && k14==1+k7 && k7>-1 ], cost: 2
     68: f_284 -> f_284 : k14'=2+k7, k17'=k7, k18'=1+k7, k7'=1+k7, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x2'=free_60, x216'=free_146, x217'=free_140, x218'=free_142, x219'=free_145, x220'=free_139, x221'=free_143, x222'=free_147, x223'=free_138, x224'=free_141, x225'=free_144, x226'=free_148, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ k9>0 && k14==1+k7 && k7>-1 ], cost: 3
     69: f_284 -> [11] : [ k9>0 && k14==1+k7 && k7>-1 ], cost: NONTERM
     70: f_284 -> f_284 : k14'=k7, k17'=-1+k7, k18'=k7, k7'=-1+k7, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x2'=free_109, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ k9<0 && k14==1+k7 && -1+k7>-1 ], cost: 3
     71: f_284 -> f_284 : k14'=1+k7, k17'=-1+k7, k18'=k7, k7'=k7, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x2'=free_60, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ k9<0 && k14==1+k7 && -1+k7>-1 ], cost: 4
     72: f_284 -> [11] : [ k9<0 && k14==1+k7 && -1+k7>-1 ], cost: NONTERM
     73: f_284 -> f_284 : k14'=k7, k17'=-1+k7, k18'=k7, k7'=-1+k7, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x2'=free_109, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ k9>0 && k14==1+k7 && -1+k7>-1 ], cost: 3
     74: f_284 -> f_284 : k14'=1+k7, k17'=-1+k7, k18'=k7, k7'=k7, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x2'=free_60, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ k9>0 && k14==1+k7 && -1+k7>-1 ], cost: 4
     75: f_284 -> [11] : [ k9>0 && k14==1+k7 && -1+k7>-1 ], cost: NONTERM
     79: f_284 -> [13] : [ k9<0 && k14==1+k7 && 1+k7>=1 ], cost: 2+k7
     80: f_284 -> [13] : [ k9>0 && k14==1+k7 && 1+k7>=1 ], cost: 2+k7

Applied pruning (of leafs and parallel rules):
   Start location: f_73
     42: f_73 -> f_284 : k14'=1+free_136, k2'=1+free_136, k47'=1+free_136, k7'=free_136, k8'=free_136, k9'=free_97, x'=free_90, x_'=free_92, x__'=free_96, x1'=free_89, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_94, x3'=free_87, x4'=free_91, x5'=free_93, x6'=free_95, x7'=free_88, [ free_136>-1 ], cost: 2
     43: f_73 -> f_284 : k14'=2+free_136, k2'=1+free_136, k47'=1+free_136, k7'=1+free_136, k8'=free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_60, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ free_136>-1 ], cost: 3
     46: f_73 -> f_284 : k14'=free_136, k2'=1+free_136, k47'=free_136, k7'=-1+free_136, k8'=-1+free_136, k9'=free_97, x'=free_90, x_'=free_92, x__'=free_96, x1'=free_89, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_94, x3'=free_87, x4'=free_91, x5'=free_93, x6'=free_95, x7'=free_88, [ -1+free_136>-1 ], cost: 3
     47: f_73 -> f_284 : k14'=1+free_136, k2'=1+free_136, k47'=free_136, k7'=free_136, k8'=-1+free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_60, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ -1+free_136>-1 ], cost: 4
     50: f_73 -> [12] : [ 1+free_136>0 ], cost: 2+free_136
     64: f_73 -> [10] : [], cost: NONTERM
     65: f_73 -> [11] : [ free_136>-1 ], cost: NONTERM
     66: f_73 -> [11] : [ -1+free_136>-1 ], cost: NONTERM
     77: f_73 -> f_284 : k14'=2+free_24, k17'=free_24, k18'=1+free_24, k24'=1+free_24, k26'=free_26, k35'=free_24, k7'=1+free_24, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x2'=free_60, x216'=free_68, x217'=free_72, x218'=free_71, x219'=free_75, x220'=free_67, x221'=free_70, x222'=free_74, x223'=free_66, x224'=free_69, x225'=free_73, x226'=free_65, x248'=free_21, x249'=free_25, x250'=free_29, x251'=free_20, x252'=free_28, x253'=free_19, x254'=free_23, x255'=free_27, x256'=free_30, x257'=free_22, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ free_24>-1 && free_26>0 ], cost: 4
     78: f_73 -> [11] : [ free_24>-1 && free_26>0 ], cost: NONTERM
     81: f_73 -> [13] : [ free_24>-1 && free_26<0 ], cost: 3+free_24
     82: f_73 -> [13] : [ free_24>-1 && free_26>0 ], cost: 3+free_24
     83: f_73 -> [13] : [ free_24>-1 && free_126<0 ], cost: 5+free_24
     84: f_73 -> [13] : [ free_24>-1 && free_126>0 ], cost: 5+free_24
     67: f_284 -> f_284 : k14'=1+k7, k17'=k7, k18'=1+k7, k7'=k7, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x2'=free_109, x216'=free_146, x217'=free_140, x218'=free_142, x219'=free_145, x220'=free_139, x221'=free_143, x222'=free_147, x223'=free_138, x224'=free_141, x225'=free_144, x226'=free_148, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ k9>0 && k14==1+k7 && k7>-1 ], cost: 2
     68: f_284 -> f_284 : k14'=2+k7, k17'=k7, k18'=1+k7, k7'=1+k7, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x2'=free_60, x216'=free_146, x217'=free_140, x218'=free_142, x219'=free_145, x220'=free_139, x221'=free_143, x222'=free_147, x223'=free_138, x224'=free_141, x225'=free_144, x226'=free_148, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ k9>0 && k14==1+k7 && k7>-1 ], cost: 3
     69: f_284 -> [11] : [ k9>0 && k14==1+k7 && k7>-1 ], cost: NONTERM
     70: f_284 -> f_284 : k14'=k7, k17'=-1+k7, k18'=k7, k7'=-1+k7, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x2'=free_109, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ k9<0 && k14==1+k7 && -1+k7>-1 ], cost: 3
     71: f_284 -> f_284 : k14'=1+k7, k17'=-1+k7, k18'=k7, k7'=k7, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x2'=free_60, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ k9<0 && k14==1+k7 && -1+k7>-1 ], cost: 4
     72: f_284 -> [11] : [ k9<0 && k14==1+k7 && -1+k7>-1 ], cost: NONTERM
     74: f_284 -> f_284 : k14'=1+k7, k17'=-1+k7, k18'=k7, k7'=k7, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x2'=free_60, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ k9>0 && k14==1+k7 && -1+k7>-1 ], cost: 4
     75: f_284 -> [11] : [ k9>0 && k14==1+k7 && -1+k7>-1 ], cost: NONTERM
     79: f_284 -> [13] : [ k9<0 && k14==1+k7 && 1+k7>=1 ], cost: 2+k7
     80: f_284 -> [13] : [ k9>0 && k14==1+k7 && 1+k7>=1 ], cost: 2+k7

Accelerating simple loops of location 4.
   Simplified some of the simple loops (and removed duplicate rules).
   Accelerating the following rules:
     67: f_284 -> f_284 : k14'=1+k7, k17'=k7, k18'=1+k7, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x2'=free_109, x216'=free_146, x217'=free_140, x218'=free_142, x219'=free_145, x220'=free_139, x221'=free_143, x222'=free_147, x223'=free_138, x224'=free_141, x225'=free_144, x226'=free_148, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ k9>0 && k14==1+k7 && k7>-1 ], cost: 2
     68: f_284 -> f_284 : k14'=2+k7, k17'=k7, k18'=1+k7, k7'=1+k7, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x2'=free_60, x216'=free_146, x217'=free_140, x218'=free_142, x219'=free_145, x220'=free_139, x221'=free_143, x222'=free_147, x223'=free_138, x224'=free_141, x225'=free_144, x226'=free_148, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ k9>0 && k14==1+k7 && k7>-1 ], cost: 3
     70: f_284 -> f_284 : k14'=k7, k17'=-1+k7, k18'=k7, k7'=-1+k7, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x2'=free_109, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ k9<0 && k14==1+k7 && -1+k7>-1 ], cost: 3
     71: f_284 -> f_284 : k14'=1+k7, k17'=-1+k7, k18'=k7, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x2'=free_60, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ k9<0 && k14==1+k7 && -1+k7>-1 ], cost: 4
     74: f_284 -> f_284 : k14'=1+k7, k17'=-1+k7, k18'=k7, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x2'=free_60, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ k9>0 && k14==1+k7 && -1+k7>-1 ], cost: 4

[0;36m[test] deduced pseudo-invariant k9-free_112<=0, also trying -k9+free_112<=-1[0m
   Accelerated rule 67 with non-termination, yielding the new rule 85.
   Accelerated rule 67 with non-termination, yielding the new rule 86.
   Accelerated rule 67 with backward acceleration, yielding the new rule 87.
[0;36m[test] deduced pseudo-invariant k9-free_57<=0, also trying -k9+free_57<=-1[0m
   Accelerated rule 68 with non-termination, yielding the new rule 88.
   Accelerated rule 68 with non-termination, yielding the new rule 89.
   Accelerated rule 68 with backward acceleration, yielding the new rule 90.
[0;36m[test] deduced pseudo-invariant k9-free_112<=0, also trying -k9+free_112<=-1[0m
   Accelerated rule 70 with backward acceleration, yielding the new rule 91.
[0;36m[test] deduced pseudo-invariant -k9+free_57<=0, also trying k9-free_57<=-1[0m
   Accelerated rule 71 with non-termination, yielding the new rule 92.
   Accelerated rule 71 with non-termination, yielding the new rule 93.
   Accelerated rule 71 with backward acceleration, yielding the new rule 94.
[0;36m[test] deduced pseudo-invariant k9-free_57<=0, also trying -k9+free_57<=-1[0m
   Accelerated rule 74 with non-termination, yielding the new rule 95.
   Accelerated rule 74 with non-termination, yielding the new rule 96.
   Accelerated rule 74 with backward acceleration, yielding the new rule 97.
   Also removing duplicate rules: 86 89 93 96.

Accelerated all simple loops using metering functions (where possible):
   Start location: f_73
     42: f_73 -> f_284 : k14'=1+free_136, k2'=1+free_136, k47'=1+free_136, k7'=free_136, k8'=free_136, k9'=free_97, x'=free_90, x_'=free_92, x__'=free_96, x1'=free_89, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_94, x3'=free_87, x4'=free_91, x5'=free_93, x6'=free_95, x7'=free_88, [ free_136>-1 ], cost: 2
     43: f_73 -> f_284 : k14'=2+free_136, k2'=1+free_136, k47'=1+free_136, k7'=1+free_136, k8'=free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_60, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ free_136>-1 ], cost: 3
     46: f_73 -> f_284 : k14'=free_136, k2'=1+free_136, k47'=free_136, k7'=-1+free_136, k8'=-1+free_136, k9'=free_97, x'=free_90, x_'=free_92, x__'=free_96, x1'=free_89, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_94, x3'=free_87, x4'=free_91, x5'=free_93, x6'=free_95, x7'=free_88, [ -1+free_136>-1 ], cost: 3
     47: f_73 -> f_284 : k14'=1+free_136, k2'=1+free_136, k47'=free_136, k7'=free_136, k8'=-1+free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_60, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ -1+free_136>-1 ], cost: 4
     50: f_73 -> [12] : [ 1+free_136>0 ], cost: 2+free_136
     64: f_73 -> [10] : [], cost: NONTERM
     65: f_73 -> [11] : [ free_136>-1 ], cost: NONTERM
     66: f_73 -> [11] : [ -1+free_136>-1 ], cost: NONTERM
     77: f_73 -> f_284 : k14'=2+free_24, k17'=free_24, k18'=1+free_24, k24'=1+free_24, k26'=free_26, k35'=free_24, k7'=1+free_24, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x2'=free_60, x216'=free_68, x217'=free_72, x218'=free_71, x219'=free_75, x220'=free_67, x221'=free_70, x222'=free_74, x223'=free_66, x224'=free_69, x225'=free_73, x226'=free_65, x248'=free_21, x249'=free_25, x250'=free_29, x251'=free_20, x252'=free_28, x253'=free_19, x254'=free_23, x255'=free_27, x256'=free_30, x257'=free_22, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ free_24>-1 && free_26>0 ], cost: 4
     78: f_73 -> [11] : [ free_24>-1 && free_26>0 ], cost: NONTERM
     81: f_73 -> [13] : [ free_24>-1 && free_26<0 ], cost: 3+free_24
     82: f_73 -> [13] : [ free_24>-1 && free_26>0 ], cost: 3+free_24
     83: f_73 -> [13] : [ free_24>-1 && free_126<0 ], cost: 5+free_24
     84: f_73 -> [13] : [ free_24>-1 && free_126>0 ], cost: 5+free_24
     67: f_284 -> f_284 : k14'=1+k7, k17'=k7, k18'=1+k7, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x2'=free_109, x216'=free_146, x217'=free_140, x218'=free_142, x219'=free_145, x220'=free_139, x221'=free_143, x222'=free_147, x223'=free_138, x224'=free_141, x225'=free_144, x226'=free_148, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ k9>0 && k14==1+k7 && k7>-1 ], cost: 2
     68: f_284 -> f_284 : k14'=2+k7, k17'=k7, k18'=1+k7, k7'=1+k7, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x2'=free_60, x216'=free_146, x217'=free_140, x218'=free_142, x219'=free_145, x220'=free_139, x221'=free_143, x222'=free_147, x223'=free_138, x224'=free_141, x225'=free_144, x226'=free_148, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ k9>0 && k14==1+k7 && k7>-1 ], cost: 3
     69: f_284 -> [11] : [ k9>0 && k14==1+k7 && k7>-1 ], cost: NONTERM
     70: f_284 -> f_284 : k14'=k7, k17'=-1+k7, k18'=k7, k7'=-1+k7, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x2'=free_109, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ k9<0 && k14==1+k7 && -1+k7>-1 ], cost: 3
     71: f_284 -> f_284 : k14'=1+k7, k17'=-1+k7, k18'=k7, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x2'=free_60, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ k9<0 && k14==1+k7 && -1+k7>-1 ], cost: 4
     72: f_284 -> [11] : [ k9<0 && k14==1+k7 && -1+k7>-1 ], cost: NONTERM
     74: f_284 -> f_284 : k14'=1+k7, k17'=-1+k7, k18'=k7, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x2'=free_60, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ k9>0 && k14==1+k7 && -1+k7>-1 ], cost: 4
     75: f_284 -> [11] : [ k9>0 && k14==1+k7 && -1+k7>-1 ], cost: NONTERM
     79: f_284 -> [13] : [ k9<0 && k14==1+k7 && 1+k7>=1 ], cost: 2+k7
     80: f_284 -> [13] : [ k9>0 && k14==1+k7 && 1+k7>=1 ], cost: 2+k7
     85: f_284 -> [14] : [ k9>0 && k14==1+k7 && k7>-1 && free_112>0 ], cost: NONTERM
     87: f_284 -> [14] : [ k9>0 && k14==1+k7 && k7>-1 && k9-free_112<=0 ], cost: NONTERM
     88: f_284 -> [14] : [ k9>0 && k14==1+k7 && k7>-1 && free_57>0 ], cost: NONTERM
     90: f_284 -> [14] : [ k9>0 && k14==1+k7 && k7>-1 && k9-free_57<=0 ], cost: NONTERM
     91: f_284 -> f_284 : k14'=1, k17'=0, k18'=1, k7'=0, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x2'=free_109, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ k14==1+k7 && k9-free_112<=0 && k7>=1 && free_112<0 ], cost: 3*k7
     92: f_284 -> [14] : [ k9<0 && k14==1+k7 && -1+k7>-1 && free_57<0 ], cost: NONTERM
     94: f_284 -> [14] : [ k9<0 && k14==1+k7 && -1+k7>-1 && -k9+free_57<=0 ], cost: NONTERM
     95: f_284 -> [14] : [ k9>0 && k14==1+k7 && -1+k7>-1 && free_57>0 ], cost: NONTERM
     97: f_284 -> [14] : [ k9>0 && k14==1+k7 && -1+k7>-1 && k9-free_57<=0 ], cost: NONTERM

Chaining 14 accelerated rules with incoming rules:
   Chained incoming rule 42 with accelerated rule 67 to new rule 98.
   Chained incoming rule 43 with accelerated rule 67 to new rule 99.
   Chained incoming rule 46 with accelerated rule 67 to new rule 100.
   Chained incoming rule 47 with accelerated rule 67 to new rule 101.
   Chained incoming rule 77 with accelerated rule 67 to new rule 102.
   Removing accelerated rule 67.
   Chained incoming rule 42 with accelerated rule 68 to new rule 103.
   Chained incoming rule 43 with accelerated rule 68 to new rule 104.
   Chained incoming rule 46 with accelerated rule 68 to new rule 105.
   Chained incoming rule 47 with accelerated rule 68 to new rule 106.
   Chained incoming rule 77 with accelerated rule 68 to new rule 107.
   Removing accelerated rule 68.
   Chained incoming rule 42 with accelerated rule 70 to new rule 108.
   Chained incoming rule 43 with accelerated rule 70 to new rule 109.
   Chained incoming rule 46 with accelerated rule 70 to new rule 110.
   Chained incoming rule 47 with accelerated rule 70 to new rule 111.
   Chained incoming rule 77 with accelerated rule 70 to new rule 112.
   Removing accelerated rule 70.
   Chained incoming rule 42 with accelerated rule 71 to new rule 113.
   Chained incoming rule 43 with accelerated rule 71 to new rule 114.
   Chained incoming rule 46 with accelerated rule 71 to new rule 115.
   Chained incoming rule 47 with accelerated rule 71 to new rule 116.
   Chained incoming rule 77 with accelerated rule 71 to new rule 117.
   Removing accelerated rule 71.
   Chained incoming rule 42 with accelerated rule 74 to new rule 118.
   Chained incoming rule 43 with accelerated rule 74 to new rule 119.
   Chained incoming rule 46 with accelerated rule 74 to new rule 120.
   Chained incoming rule 47 with accelerated rule 74 to new rule 121.
   Chained incoming rule 77 with accelerated rule 74 to new rule 122.
   Removing accelerated rule 74.
   Chained incoming rule 42 with accelerated rule 85 to new rule 123.
   Chained incoming rule 43 with accelerated rule 85 to new rule 124.
   Chained incoming rule 46 with accelerated rule 85 to new rule 125.
   Chained incoming rule 47 with accelerated rule 85 to new rule 126.
   Chained incoming rule 77 with accelerated rule 85 to new rule 127.
   Removing accelerated rule 85.
   Chained incoming rule 42 with accelerated rule 87 to new rule 128.
   Chained incoming rule 43 with accelerated rule 87 to new rule 129.
   Chained incoming rule 46 with accelerated rule 87 to new rule 130.
   Chained incoming rule 47 with accelerated rule 87 to new rule 131.
   Chained incoming rule 77 with accelerated rule 87 to new rule 132.
   Removing accelerated rule 87.
   Chained incoming rule 42 with accelerated rule 88 to new rule 133.
   Chained incoming rule 43 with accelerated rule 88 to new rule 134.
   Chained incoming rule 46 with accelerated rule 88 to new rule 135.
   Chained incoming rule 47 with accelerated rule 88 to new rule 136.
   Chained incoming rule 77 with accelerated rule 88 to new rule 137.
   Removing accelerated rule 88.
   Chained incoming rule 42 with accelerated rule 90 to new rule 138.
   Chained incoming rule 43 with accelerated rule 90 to new rule 139.
   Chained incoming rule 46 with accelerated rule 90 to new rule 140.
   Chained incoming rule 47 with accelerated rule 90 to new rule 141.
   Chained incoming rule 77 with accelerated rule 90 to new rule 142.
   Removing accelerated rule 90.
   Chained incoming rule 42 with accelerated rule 91 to new rule 143.
   Chained incoming rule 43 with accelerated rule 91 to new rule 144.
   Chained incoming rule 46 with accelerated rule 91 to new rule 145.
   Chained incoming rule 47 with accelerated rule 91 to new rule 146.
   Chained incoming rule 77 with accelerated rule 91 to new rule 147.
   Removing accelerated rule 91.
   Chained incoming rule 42 with accelerated rule 92 to new rule 148.
   Chained incoming rule 43 with accelerated rule 92 to new rule 149.
   Chained incoming rule 46 with accelerated rule 92 to new rule 150.
   Chained incoming rule 47 with accelerated rule 92 to new rule 151.
   Chained incoming rule 77 with accelerated rule 92 to new rule 152.
   Removing accelerated rule 92.
   Chained incoming rule 42 with accelerated rule 94 to new rule 153.
   Chained incoming rule 43 with accelerated rule 94 to new rule 154.
   Chained incoming rule 46 with accelerated rule 94 to new rule 155.
   Chained incoming rule 47 with accelerated rule 94 to new rule 156.
   Chained incoming rule 77 with accelerated rule 94 to new rule 157.
   Removing accelerated rule 94.
   Chained incoming rule 42 with accelerated rule 95 to new rule 158.
   Chained incoming rule 43 with accelerated rule 95 to new rule 159.
   Chained incoming rule 46 with accelerated rule 95 to new rule 160.
   Chained incoming rule 47 with accelerated rule 95 to new rule 161.
   Chained incoming rule 77 with accelerated rule 95 to new rule 162.
   Removing accelerated rule 95.
   Chained incoming rule 42 with accelerated rule 97 to new rule 163.
   Chained incoming rule 43 with accelerated rule 97 to new rule 164.
   Chained incoming rule 46 with accelerated rule 97 to new rule 165.
   Chained incoming rule 47 with accelerated rule 97 to new rule 166.
   Chained incoming rule 77 with accelerated rule 97 to new rule 167.
   Removing accelerated rule 97.

Chained accelerated rules (with incoming rules):
   Start location: f_73
     42: f_73 -> f_284 : k14'=1+free_136, k2'=1+free_136, k47'=1+free_136, k7'=free_136, k8'=free_136, k9'=free_97, x'=free_90, x_'=free_92, x__'=free_96, x1'=free_89, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_94, x3'=free_87, x4'=free_91, x5'=free_93, x6'=free_95, x7'=free_88, [ free_136>-1 ], cost: 2
     43: f_73 -> f_284 : k14'=2+free_136, k2'=1+free_136, k47'=1+free_136, k7'=1+free_136, k8'=free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_60, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ free_136>-1 ], cost: 3
     46: f_73 -> f_284 : k14'=free_136, k2'=1+free_136, k47'=free_136, k7'=-1+free_136, k8'=-1+free_136, k9'=free_97, x'=free_90, x_'=free_92, x__'=free_96, x1'=free_89, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_94, x3'=free_87, x4'=free_91, x5'=free_93, x6'=free_95, x7'=free_88, [ -1+free_136>-1 ], cost: 3
     47: f_73 -> f_284 : k14'=1+free_136, k2'=1+free_136, k47'=free_136, k7'=free_136, k8'=-1+free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_60, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ -1+free_136>-1 ], cost: 4
     50: f_73 -> [12] : [ 1+free_136>0 ], cost: 2+free_136
     64: f_73 -> [10] : [], cost: NONTERM
     65: f_73 -> [11] : [ free_136>-1 ], cost: NONTERM
     66: f_73 -> [11] : [ -1+free_136>-1 ], cost: NONTERM
     77: f_73 -> f_284 : k14'=2+free_24, k17'=free_24, k18'=1+free_24, k24'=1+free_24, k26'=free_26, k35'=free_24, k7'=1+free_24, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x2'=free_60, x216'=free_68, x217'=free_72, x218'=free_71, x219'=free_75, x220'=free_67, x221'=free_70, x222'=free_74, x223'=free_66, x224'=free_69, x225'=free_73, x226'=free_65, x248'=free_21, x249'=free_25, x250'=free_29, x251'=free_20, x252'=free_28, x253'=free_19, x254'=free_23, x255'=free_27, x256'=free_30, x257'=free_22, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ free_24>-1 && free_26>0 ], cost: 4
     78: f_73 -> [11] : [ free_24>-1 && free_26>0 ], cost: NONTERM
     81: f_73 -> [13] : [ free_24>-1 && free_26<0 ], cost: 3+free_24
     82: f_73 -> [13] : [ free_24>-1 && free_26>0 ], cost: 3+free_24
     83: f_73 -> [13] : [ free_24>-1 && free_126<0 ], cost: 5+free_24
     84: f_73 -> [13] : [ free_24>-1 && free_126>0 ], cost: 5+free_24
     98: f_73 -> f_284 : k14'=1+free_136, k17'=free_136, k18'=1+free_136, k2'=1+free_136, k47'=1+free_136, k7'=free_136, k8'=free_136, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_109, x216'=free_146, x217'=free_140, x218'=free_142, x219'=free_145, x220'=free_139, x221'=free_143, x222'=free_147, x223'=free_138, x224'=free_141, x225'=free_144, x226'=free_148, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ free_136>-1 ], cost: 4
     99: f_73 -> f_284 : k14'=2+free_136, k17'=1+free_136, k18'=2+free_136, k2'=1+free_136, k47'=1+free_136, k7'=1+free_136, k8'=free_136, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_109, x216'=free_146, x217'=free_140, x218'=free_142, x219'=free_145, x220'=free_139, x221'=free_143, x222'=free_147, x223'=free_138, x224'=free_141, x225'=free_144, x226'=free_148, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ free_136>-1 ], cost: 5
    100: f_73 -> f_284 : k14'=free_136, k17'=-1+free_136, k18'=free_136, k2'=1+free_136, k47'=free_136, k7'=-1+free_136, k8'=-1+free_136, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_109, x216'=free_146, x217'=free_140, x218'=free_142, x219'=free_145, x220'=free_139, x221'=free_143, x222'=free_147, x223'=free_138, x224'=free_141, x225'=free_144, x226'=free_148, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ -1+free_136>-1 ], cost: 5
    101: f_73 -> f_284 : k14'=1+free_136, k17'=free_136, k18'=1+free_136, k2'=1+free_136, k47'=free_136, k7'=free_136, k8'=-1+free_136, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_109, x216'=free_146, x217'=free_140, x218'=free_142, x219'=free_145, x220'=free_139, x221'=free_143, x222'=free_147, x223'=free_138, x224'=free_141, x225'=free_144, x226'=free_148, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ -1+free_136>-1 ], cost: 6
    102: f_73 -> f_284 : k14'=2+free_24, k17'=1+free_24, k18'=2+free_24, k24'=1+free_24, k26'=free_26, k35'=free_24, k7'=1+free_24, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x2'=free_109, x216'=free_146, x217'=free_140, x218'=free_142, x219'=free_145, x220'=free_139, x221'=free_143, x222'=free_147, x223'=free_138, x224'=free_141, x225'=free_144, x226'=free_148, x248'=free_21, x249'=free_25, x250'=free_29, x251'=free_20, x252'=free_28, x253'=free_19, x254'=free_23, x255'=free_27, x256'=free_30, x257'=free_22, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ free_24>-1 && free_26>0 ], cost: 6
    103: f_73 -> f_284 : k14'=2+free_136, k17'=free_136, k18'=1+free_136, k2'=1+free_136, k47'=1+free_136, k7'=1+free_136, k8'=free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_60, x216'=free_146, x217'=free_140, x218'=free_142, x219'=free_145, x220'=free_139, x221'=free_143, x222'=free_147, x223'=free_138, x224'=free_141, x225'=free_144, x226'=free_148, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ free_136>-1 ], cost: 5
    104: f_73 -> f_284 : k14'=3+free_136, k17'=1+free_136, k18'=2+free_136, k2'=1+free_136, k47'=1+free_136, k7'=2+free_136, k8'=free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_60, x216'=free_146, x217'=free_140, x218'=free_142, x219'=free_145, x220'=free_139, x221'=free_143, x222'=free_147, x223'=free_138, x224'=free_141, x225'=free_144, x226'=free_148, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ free_136>-1 && free_57>0 ], cost: 6
    105: f_73 -> f_284 : k14'=1+free_136, k17'=-1+free_136, k18'=free_136, k2'=1+free_136, k47'=free_136, k7'=free_136, k8'=-1+free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_60, x216'=free_146, x217'=free_140, x218'=free_142, x219'=free_145, x220'=free_139, x221'=free_143, x222'=free_147, x223'=free_138, x224'=free_141, x225'=free_144, x226'=free_148, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ -1+free_136>-1 ], cost: 6
    106: f_73 -> f_284 : k14'=2+free_136, k17'=free_136, k18'=1+free_136, k2'=1+free_136, k47'=free_136, k7'=1+free_136, k8'=-1+free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_60, x216'=free_146, x217'=free_140, x218'=free_142, x219'=free_145, x220'=free_139, x221'=free_143, x222'=free_147, x223'=free_138, x224'=free_141, x225'=free_144, x226'=free_148, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ -1+free_136>-1 && free_57>0 ], cost: 7
    107: f_73 -> f_284 : k14'=3+free_24, k17'=1+free_24, k18'=2+free_24, k24'=1+free_24, k26'=free_26, k35'=free_24, k7'=2+free_24, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x2'=free_60, x216'=free_146, x217'=free_140, x218'=free_142, x219'=free_145, x220'=free_139, x221'=free_143, x222'=free_147, x223'=free_138, x224'=free_141, x225'=free_144, x226'=free_148, x248'=free_21, x249'=free_25, x250'=free_29, x251'=free_20, x252'=free_28, x253'=free_19, x254'=free_23, x255'=free_27, x256'=free_30, x257'=free_22, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ free_24>-1 && free_26>0 && free_57>0 ], cost: 7
    108: f_73 -> f_284 : k14'=free_136, k17'=-1+free_136, k18'=free_136, k2'=1+free_136, k47'=1+free_136, k7'=-1+free_136, k8'=free_136, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_109, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ -1+free_136>-1 ], cost: 5
    109: f_73 -> f_284 : k14'=1+free_136, k17'=free_136, k18'=1+free_136, k2'=1+free_136, k47'=1+free_136, k7'=free_136, k8'=free_136, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_109, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ free_136>-1 ], cost: 6
    110: f_73 -> f_284 : k14'=-1+free_136, k17'=-2+free_136, k18'=-1+free_136, k2'=1+free_136, k47'=free_136, k7'=-2+free_136, k8'=-1+free_136, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_109, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ -2+free_136>-1 ], cost: 6
    111: f_73 -> f_284 : k14'=free_136, k17'=-1+free_136, k18'=free_136, k2'=1+free_136, k47'=free_136, k7'=-1+free_136, k8'=-1+free_136, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_109, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ -1+free_136>-1 ], cost: 7
    112: f_73 -> f_284 : k14'=1+free_24, k17'=free_24, k18'=1+free_24, k24'=1+free_24, k26'=free_26, k35'=free_24, k7'=free_24, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x2'=free_109, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x248'=free_21, x249'=free_25, x250'=free_29, x251'=free_20, x252'=free_28, x253'=free_19, x254'=free_23, x255'=free_27, x256'=free_30, x257'=free_22, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ free_24>-1 && free_26>0 ], cost: 7
    113: f_73 -> f_284 : k14'=1+free_136, k17'=-1+free_136, k18'=free_136, k2'=1+free_136, k47'=1+free_136, k7'=free_136, k8'=free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_60, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ -1+free_136>-1 ], cost: 6
    114: f_73 -> f_284 : k14'=2+free_136, k17'=free_136, k18'=1+free_136, k2'=1+free_136, k47'=1+free_136, k7'=1+free_136, k8'=free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_60, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ free_136>-1 && free_57<0 ], cost: 7
    115: f_73 -> f_284 : k14'=free_136, k17'=-2+free_136, k18'=-1+free_136, k2'=1+free_136, k47'=free_136, k7'=-1+free_136, k8'=-1+free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_60, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ -2+free_136>-1 ], cost: 7
    116: f_73 -> f_284 : k14'=1+free_136, k17'=-1+free_136, k18'=free_136, k2'=1+free_136, k47'=free_136, k7'=free_136, k8'=-1+free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_60, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ -1+free_136>-1 && free_57<0 ], cost: 8
    117: f_73 -> f_284 : k14'=2+free_24, k17'=free_24, k18'=1+free_24, k24'=1+free_24, k26'=free_26, k35'=free_24, k7'=1+free_24, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x2'=free_60, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x248'=free_21, x249'=free_25, x250'=free_29, x251'=free_20, x252'=free_28, x253'=free_19, x254'=free_23, x255'=free_27, x256'=free_30, x257'=free_22, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ free_24>-1 && free_26>0 && free_57<0 ], cost: 8
    118: f_73 -> f_284 : k14'=1+free_136, k17'=-1+free_136, k18'=free_136, k2'=1+free_136, k47'=1+free_136, k7'=free_136, k8'=free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_60, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ -1+free_136>-1 ], cost: 6
    119: f_73 -> f_284 : k14'=2+free_136, k17'=free_136, k18'=1+free_136, k2'=1+free_136, k47'=1+free_136, k7'=1+free_136, k8'=free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_60, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ free_136>-1 && free_57>0 ], cost: 7
    120: f_73 -> f_284 : k14'=free_136, k17'=-2+free_136, k18'=-1+free_136, k2'=1+free_136, k47'=free_136, k7'=-1+free_136, k8'=-1+free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_60, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ -2+free_136>-1 ], cost: 7
    121: f_73 -> f_284 : k14'=1+free_136, k17'=-1+free_136, k18'=free_136, k2'=1+free_136, k47'=free_136, k7'=free_136, k8'=-1+free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_60, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ -1+free_136>-1 && free_57>0 ], cost: 8
    122: f_73 -> f_284 : k14'=2+free_24, k17'=free_24, k18'=1+free_24, k24'=1+free_24, k26'=free_26, k35'=free_24, k7'=1+free_24, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x2'=free_60, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x248'=free_21, x249'=free_25, x250'=free_29, x251'=free_20, x252'=free_28, x253'=free_19, x254'=free_23, x255'=free_27, x256'=free_30, x257'=free_22, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ free_24>-1 && free_26>0 && free_57>0 ], cost: 8
    123: f_73 -> [14] : [ free_136>-1 ], cost: NONTERM
    124: f_73 -> [14] : [ free_136>-1 ], cost: NONTERM
    125: f_73 -> [14] : [ -1+free_136>-1 ], cost: NONTERM
    126: f_73 -> [14] : [ -1+free_136>-1 ], cost: NONTERM
    127: f_73 -> [14] : [ free_24>-1 ], cost: NONTERM
    128: f_73 -> [14] : [ free_136>-1 ], cost: NONTERM
    129: f_73 -> [14] : [ free_136>-1 ], cost: NONTERM
    130: f_73 -> [14] : [ -1+free_136>-1 ], cost: NONTERM
    131: f_73 -> [14] : [ -1+free_136>-1 ], cost: NONTERM
    132: f_73 -> [14] : [ free_24>-1 ], cost: NONTERM
    133: f_73 -> [14] : [ free_136>-1 ], cost: NONTERM
    134: f_73 -> [14] : [ free_136>-1 ], cost: NONTERM
    135: f_73 -> [14] : [ -1+free_136>-1 ], cost: NONTERM
    136: f_73 -> [14] : [ -1+free_136>-1 ], cost: NONTERM
    137: f_73 -> [14] : [ free_24>-1 ], cost: NONTERM
    138: f_73 -> [14] : [ free_136>-1 ], cost: NONTERM
    139: f_73 -> [14] : [ free_136>-1 ], cost: NONTERM
    140: f_73 -> [14] : [ -1+free_136>-1 ], cost: NONTERM
    141: f_73 -> [14] : [ -1+free_136>-1 ], cost: NONTERM
    142: f_73 -> [14] : [ free_24>-1 ], cost: NONTERM
    143: f_73 -> f_284 : k14'=1, k17'=0, k18'=1, k2'=1+free_136, k47'=1+free_136, k7'=0, k8'=free_136, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_109, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ free_136>=1 && free_112<0 ], cost: 2+3*free_136
    144: f_73 -> f_284 : k14'=1, k17'=0, k18'=1, k2'=1+free_136, k47'=1+free_136, k7'=0, k8'=free_136, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_109, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ free_136>-1 && free_112<0 ], cost: 6+3*free_136
    145: f_73 -> f_284 : k14'=1, k17'=0, k18'=1, k2'=1+free_136, k47'=free_136, k7'=0, k8'=-1+free_136, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_109, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ -1+free_136>=1 && free_112<0 ], cost: 3*free_136
    146: f_73 -> f_284 : k14'=1, k17'=0, k18'=1, k2'=1+free_136, k47'=free_136, k7'=0, k8'=-1+free_136, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_109, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ -1+free_136>-1 && free_112<0 ], cost: 4+3*free_136
    147: f_73 -> f_284 : k14'=1, k17'=0, k18'=1, k24'=1+free_24, k26'=free_26, k35'=free_24, k7'=0, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x2'=free_109, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x248'=free_21, x249'=free_25, x250'=free_29, x251'=free_20, x252'=free_28, x253'=free_19, x254'=free_23, x255'=free_27, x256'=free_30, x257'=free_22, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ free_24>-1 && free_26>0 && free_112<0 ], cost: 7+3*free_24
    148: f_73 -> [14] : [ -1+free_136>-1 ], cost: NONTERM
    149: f_73 -> [14] : [ free_136>-1 ], cost: NONTERM
    150: f_73 -> [14] : [ -2+free_136>-1 ], cost: NONTERM
    151: f_73 -> [14] : [ -1+free_136>-1 ], cost: NONTERM
    152: f_73 -> [14] : [ free_24>-1 ], cost: NONTERM
    153: f_73 -> [14] : [ -1+free_136>-1 ], cost: NONTERM
    154: f_73 -> [14] : [ free_136>-1 ], cost: NONTERM
    155: f_73 -> [14] : [ -2+free_136>-1 ], cost: NONTERM
    156: f_73 -> [14] : [ -1+free_136>-1 ], cost: NONTERM
    157: f_73 -> [14] : [ free_24>-1 ], cost: NONTERM
    158: f_73 -> [14] : [ -1+free_136>-1 ], cost: NONTERM
    159: f_73 -> [14] : [ free_136>-1 ], cost: NONTERM
    160: f_73 -> [14] : [ -2+free_136>-1 ], cost: NONTERM
    161: f_73 -> [14] : [ -1+free_136>-1 ], cost: NONTERM
    162: f_73 -> [14] : [ free_24>-1 ], cost: NONTERM
    163: f_73 -> [14] : [ -1+free_136>-1 ], cost: NONTERM
    164: f_73 -> [14] : [ free_136>-1 ], cost: NONTERM
    165: f_73 -> [14] : [ -2+free_136>-1 ], cost: NONTERM
    166: f_73 -> [14] : [ -1+free_136>-1 ], cost: NONTERM
    167: f_73 -> [14] : [ free_24>-1 ], cost: NONTERM
     69: f_284 -> [11] : [ k9>0 && k14==1+k7 && k7>-1 ], cost: NONTERM
     72: f_284 -> [11] : [ k9<0 && k14==1+k7 && -1+k7>-1 ], cost: NONTERM
     75: f_284 -> [11] : [ k9>0 && k14==1+k7 && -1+k7>-1 ], cost: NONTERM
     79: f_284 -> [13] : [ k9<0 && k14==1+k7 && 1+k7>=1 ], cost: 2+k7
     80: f_284 -> [13] : [ k9>0 && k14==1+k7 && 1+k7>=1 ], cost: 2+k7

Eliminating location f_284 by chaining:
   Chained rules 42 and 69 to new rule 168.
   Chained rules 42 and 72 to new rule 169.
   Chained rules 42 and 75 to new rule 170.
   Chained rules 42 and 79 to new rule 171.
   Chained rules 42 and 80 to new rule 172.
   Chained rules 43 and 69 to new rule 173.
   Chained rules 43 and 72 to new rule 174.
   Chained rules 43 and 75 to new rule 175.
   Chained rules 43 and 79 to new rule 176.
   Chained rules 43 and 80 to new rule 177.
   Chained rules 46 and 69 to new rule 178.
   Chained rules 46 and 72 to new rule 179.
   Chained rules 46 and 75 to new rule 180.
   Chained rules 46 and 79 to new rule 181.
   Chained rules 46 and 80 to new rule 182.
   Chained rules 47 and 69 to new rule 183.
   Chained rules 47 and 72 to new rule 184.
   Chained rules 47 and 75 to new rule 185.
   Chained rules 47 and 79 to new rule 186.
   Chained rules 47 and 80 to new rule 187.
   Chained rules 77 and 69 to new rule 188.
   Chained rules 77 and 72 to new rule 189.
   Chained rules 77 and 75 to new rule 190.
   Chained rules 77 and 79 to new rule 191.
   Chained rules 77 and 80 to new rule 192.
   Chained rules 98 and 69 to new rule 193.
   Chained rules 98 and 72 to new rule 194.
   Chained rules 98 and 75 to new rule 195.
   Chained rules 98 and 79 to new rule 196.
   Chained rules 98 and 80 to new rule 197.
   Chained rules 99 and 69 to new rule 198.
   Chained rules 99 and 72 to new rule 199.
   Chained rules 99 and 75 to new rule 200.
   Chained rules 99 and 79 to new rule 201.
   Chained rules 99 and 80 to new rule 202.
   Chained rules 100 and 69 to new rule 203.
   Chained rules 100 and 72 to new rule 204.
   Chained rules 100 and 75 to new rule 205.
   Chained rules 100 and 79 to new rule 206.
   Chained rules 100 and 80 to new rule 207.
   Chained rules 101 and 69 to new rule 208.
   Chained rules 101 and 72 to new rule 209.
   Chained rules 101 and 75 to new rule 210.
   Chained rules 101 and 79 to new rule 211.
   Chained rules 101 and 80 to new rule 212.
   Chained rules 102 and 69 to new rule 213.
   Chained rules 102 and 72 to new rule 214.
   Chained rules 102 and 75 to new rule 215.
   Chained rules 102 and 79 to new rule 216.
   Chained rules 102 and 80 to new rule 217.
   Chained rules 103 and 69 to new rule 218.
   Chained rules 103 and 72 to new rule 219.
   Chained rules 103 and 75 to new rule 220.
   Chained rules 103 and 79 to new rule 221.
   Chained rules 103 and 80 to new rule 222.
   Chained rules 104 and 69 to new rule 223.
   Failed to chain rules 104 and 72.
   Chained rules 104 and 75 to new rule 224.
   Failed to chain rules 104 and 79.
   Chained rules 104 and 80 to new rule 225.
   Chained rules 105 and 69 to new rule 226.
   Chained rules 105 and 72 to new rule 227.
   Chained rules 105 and 75 to new rule 228.
   Chained rules 105 and 79 to new rule 229.
   Chained rules 105 and 80 to new rule 230.
   Chained rules 106 and 69 to new rule 231.
   Failed to chain rules 106 and 72.
   Chained rules 106 and 75 to new rule 232.
   Failed to chain rules 106 and 79.
   Chained rules 106 and 80 to new rule 233.
   Chained rules 107 and 69 to new rule 234.
   Failed to chain rules 107 and 72.
   Chained rules 107 and 75 to new rule 235.
   Failed to chain rules 107 and 79.
   Chained rules 107 and 80 to new rule 236.
   Chained rules 108 and 69 to new rule 237.
   Chained rules 108 and 72 to new rule 238.
   Chained rules 108 and 75 to new rule 239.
   Chained rules 108 and 79 to new rule 240.
   Chained rules 108 and 80 to new rule 241.
   Chained rules 109 and 69 to new rule 242.
   Chained rules 109 and 72 to new rule 243.
   Chained rules 109 and 75 to new rule 244.
   Chained rules 109 and 79 to new rule 245.
   Chained rules 109 and 80 to new rule 246.
   Chained rules 110 and 69 to new rule 247.
   Chained rules 110 and 72 to new rule 248.
   Chained rules 110 and 75 to new rule 249.
   Chained rules 110 and 79 to new rule 250.
   Chained rules 110 and 80 to new rule 251.
   Chained rules 111 and 69 to new rule 252.
   Chained rules 111 and 72 to new rule 253.
   Chained rules 111 and 75 to new rule 254.
   Chained rules 111 and 79 to new rule 255.
   Chained rules 111 and 80 to new rule 256.
   Chained rules 112 and 69 to new rule 257.
   Chained rules 112 and 72 to new rule 258.
   Chained rules 112 and 75 to new rule 259.
   Chained rules 112 and 79 to new rule 260.
   Chained rules 112 and 80 to new rule 261.
   Chained rules 113 and 69 to new rule 262.
   Chained rules 113 and 72 to new rule 263.
   Chained rules 113 and 75 to new rule 264.
   Chained rules 113 and 79 to new rule 265.
   Chained rules 113 and 80 to new rule 266.
   Failed to chain rules 114 and 69.
   Chained rules 114 and 72 to new rule 267.
   Failed to chain rules 114 and 75.
   Chained rules 114 and 79 to new rule 268.
   Failed to chain rules 114 and 80.
   Chained rules 115 and 69 to new rule 269.
   Chained rules 115 and 72 to new rule 270.
   Chained rules 115 and 75 to new rule 271.
   Chained rules 115 and 79 to new rule 272.
   Chained rules 115 and 80 to new rule 273.
   Failed to chain rules 116 and 69.
   Chained rules 116 and 72 to new rule 274.
   Failed to chain rules 116 and 75.
   Chained rules 116 and 79 to new rule 275.
   Failed to chain rules 116 and 80.
   Failed to chain rules 117 and 69.
   Chained rules 117 and 72 to new rule 276.
   Failed to chain rules 117 and 75.
   Chained rules 117 and 79 to new rule 277.
   Failed to chain rules 117 and 80.
   Chained rules 118 and 69 to new rule 278.
   Chained rules 118 and 72 to new rule 279.
   Chained rules 118 and 75 to new rule 280.
   Chained rules 118 and 79 to new rule 281.
   Chained rules 118 and 80 to new rule 282.
   Chained rules 119 and 69 to new rule 283.
   Failed to chain rules 119 and 72.
   Chained rules 119 and 75 to new rule 284.
   Failed to chain rules 119 and 79.
   Chained rules 119 and 80 to new rule 285.
   Chained rules 120 and 69 to new rule 286.
   Chained rules 120 and 72 to new rule 287.
   Chained rules 120 and 75 to new rule 288.
   Chained rules 120 and 79 to new rule 289.
   Chained rules 120 and 80 to new rule 290.
   Chained rules 121 and 69 to new rule 291.
   Failed to chain rules 121 and 72.
   Chained rules 121 and 75 to new rule 292.
   Failed to chain rules 121 and 79.
   Chained rules 121 and 80 to new rule 293.
   Chained rules 122 and 69 to new rule 294.
   Failed to chain rules 122 and 72.
   Chained rules 122 and 75 to new rule 295.
   Failed to chain rules 122 and 79.
   Chained rules 122 and 80 to new rule 296.
   Failed to chain rules 143 and 69.
   Failed to chain rules 143 and 72.
   Failed to chain rules 143 and 75.
   Chained rules 143 and 79 to new rule 297.
   Failed to chain rules 143 and 80.
   Failed to chain rules 144 and 69.
   Failed to chain rules 144 and 72.
   Failed to chain rules 144 and 75.
   Chained rules 144 and 79 to new rule 298.
   Failed to chain rules 144 and 80.
   Failed to chain rules 145 and 69.
   Failed to chain rules 145 and 72.
   Failed to chain rules 145 and 75.
   Chained rules 145 and 79 to new rule 299.
   Failed to chain rules 145 and 80.
   Failed to chain rules 146 and 69.
   Failed to chain rules 146 and 72.
   Failed to chain rules 146 and 75.
   Chained rules 146 and 79 to new rule 300.
   Failed to chain rules 146 and 80.
   Failed to chain rules 147 and 69.
   Failed to chain rules 147 and 72.
   Failed to chain rules 147 and 75.
   Chained rules 147 and 79 to new rule 301.
   Failed to chain rules 147 and 80.
   Keeping rule 143 by adding a dummy rule 302.
   Keeping rule 144 by adding a dummy rule 303.
   Keeping rule 145 by adding a dummy rule 304.
   Keeping rule 146 by adding a dummy rule 305.
   Keeping rule 147 by adding a dummy rule 306.

Eliminated locations (on tree-shaped paths):
   Start location: f_73
     50: f_73 -> [12] : [ 1+free_136>0 ], cost: 2+free_136
     64: f_73 -> [10] : [], cost: NONTERM
     65: f_73 -> [11] : [ free_136>-1 ], cost: NONTERM
     66: f_73 -> [11] : [ -1+free_136>-1 ], cost: NONTERM
     78: f_73 -> [11] : [ free_24>-1 && free_26>0 ], cost: NONTERM
     81: f_73 -> [13] : [ free_24>-1 && free_26<0 ], cost: 3+free_24
     82: f_73 -> [13] : [ free_24>-1 && free_26>0 ], cost: 3+free_24
     83: f_73 -> [13] : [ free_24>-1 && free_126<0 ], cost: 5+free_24
     84: f_73 -> [13] : [ free_24>-1 && free_126>0 ], cost: 5+free_24
    123: f_73 -> [14] : [ free_136>-1 ], cost: NONTERM
    124: f_73 -> [14] : [ free_136>-1 ], cost: NONTERM
    125: f_73 -> [14] : [ -1+free_136>-1 ], cost: NONTERM
    126: f_73 -> [14] : [ -1+free_136>-1 ], cost: NONTERM
    127: f_73 -> [14] : [ free_24>-1 ], cost: NONTERM
    128: f_73 -> [14] : [ free_136>-1 ], cost: NONTERM
    129: f_73 -> [14] : [ free_136>-1 ], cost: NONTERM
    130: f_73 -> [14] : [ -1+free_136>-1 ], cost: NONTERM
    131: f_73 -> [14] : [ -1+free_136>-1 ], cost: NONTERM
    132: f_73 -> [14] : [ free_24>-1 ], cost: NONTERM
    133: f_73 -> [14] : [ free_136>-1 ], cost: NONTERM
    134: f_73 -> [14] : [ free_136>-1 ], cost: NONTERM
    135: f_73 -> [14] : [ -1+free_136>-1 ], cost: NONTERM
    136: f_73 -> [14] : [ -1+free_136>-1 ], cost: NONTERM
    137: f_73 -> [14] : [ free_24>-1 ], cost: NONTERM
    138: f_73 -> [14] : [ free_136>-1 ], cost: NONTERM
    139: f_73 -> [14] : [ free_136>-1 ], cost: NONTERM
    140: f_73 -> [14] : [ -1+free_136>-1 ], cost: NONTERM
    141: f_73 -> [14] : [ -1+free_136>-1 ], cost: NONTERM
    142: f_73 -> [14] : [ free_24>-1 ], cost: NONTERM
    148: f_73 -> [14] : [ -1+free_136>-1 ], cost: NONTERM
    149: f_73 -> [14] : [ free_136>-1 ], cost: NONTERM
    150: f_73 -> [14] : [ -2+free_136>-1 ], cost: NONTERM
    151: f_73 -> [14] : [ -1+free_136>-1 ], cost: NONTERM
    152: f_73 -> [14] : [ free_24>-1 ], cost: NONTERM
    153: f_73 -> [14] : [ -1+free_136>-1 ], cost: NONTERM
    154: f_73 -> [14] : [ free_136>-1 ], cost: NONTERM
    155: f_73 -> [14] : [ -2+free_136>-1 ], cost: NONTERM
    156: f_73 -> [14] : [ -1+free_136>-1 ], cost: NONTERM
    157: f_73 -> [14] : [ free_24>-1 ], cost: NONTERM
    158: f_73 -> [14] : [ -1+free_136>-1 ], cost: NONTERM
    159: f_73 -> [14] : [ free_136>-1 ], cost: NONTERM
    160: f_73 -> [14] : [ -2+free_136>-1 ], cost: NONTERM
    161: f_73 -> [14] : [ -1+free_136>-1 ], cost: NONTERM
    162: f_73 -> [14] : [ free_24>-1 ], cost: NONTERM
    163: f_73 -> [14] : [ -1+free_136>-1 ], cost: NONTERM
    164: f_73 -> [14] : [ free_136>-1 ], cost: NONTERM
    165: f_73 -> [14] : [ -2+free_136>-1 ], cost: NONTERM
    166: f_73 -> [14] : [ -1+free_136>-1 ], cost: NONTERM
    167: f_73 -> [14] : [ free_24>-1 ], cost: NONTERM
    168: f_73 -> [11] : [ free_136>-1 && free_97>0 ], cost: NONTERM
    169: f_73 -> [11] : [ free_97<0 && -1+free_136>-1 ], cost: NONTERM
    170: f_73 -> [11] : [ free_97>0 && -1+free_136>-1 ], cost: NONTERM
    171: f_73 -> [13] : k14'=1+free_136, k2'=1+free_136, k47'=1+free_136, k7'=free_136, k8'=free_136, k9'=free_97, x'=free_90, x_'=free_92, x__'=free_96, x1'=free_89, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_94, x3'=free_87, x4'=free_91, x5'=free_93, x6'=free_95, x7'=free_88, [ free_136>-1 && free_97<0 ], cost: 4+free_136
    172: f_73 -> [13] : k14'=1+free_136, k2'=1+free_136, k47'=1+free_136, k7'=free_136, k8'=free_136, k9'=free_97, x'=free_90, x_'=free_92, x__'=free_96, x1'=free_89, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_94, x3'=free_87, x4'=free_91, x5'=free_93, x6'=free_95, x7'=free_88, [ free_136>-1 && free_97>0 ], cost: 4+free_136
    173: f_73 -> [11] : [ free_136>-1 && free_57>0 ], cost: NONTERM
    174: f_73 -> [11] : [ free_136>-1 && free_57<0 ], cost: NONTERM
    175: f_73 -> [11] : [ free_136>-1 && free_57>0 ], cost: NONTERM
    176: f_73 -> [13] : k14'=2+free_136, k2'=1+free_136, k47'=1+free_136, k7'=1+free_136, k8'=free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_60, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ free_136>-1 && free_57<0 ], cost: 6+free_136
    177: f_73 -> [13] : k14'=2+free_136, k2'=1+free_136, k47'=1+free_136, k7'=1+free_136, k8'=free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_60, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ free_136>-1 && free_57>0 ], cost: 6+free_136
    178: f_73 -> [11] : [ -1+free_136>-1 && free_97>0 ], cost: NONTERM
    179: f_73 -> [11] : [ free_97<0 && -2+free_136>-1 ], cost: NONTERM
    180: f_73 -> [11] : [ free_97>0 && -2+free_136>-1 ], cost: NONTERM
    181: f_73 -> [13] : k14'=free_136, k2'=1+free_136, k47'=free_136, k7'=-1+free_136, k8'=-1+free_136, k9'=free_97, x'=free_90, x_'=free_92, x__'=free_96, x1'=free_89, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_94, x3'=free_87, x4'=free_91, x5'=free_93, x6'=free_95, x7'=free_88, [ -1+free_136>-1 && free_97<0 ], cost: 4+free_136
    182: f_73 -> [13] : k14'=free_136, k2'=1+free_136, k47'=free_136, k7'=-1+free_136, k8'=-1+free_136, k9'=free_97, x'=free_90, x_'=free_92, x__'=free_96, x1'=free_89, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_94, x3'=free_87, x4'=free_91, x5'=free_93, x6'=free_95, x7'=free_88, [ -1+free_136>-1 && free_97>0 ], cost: 4+free_136
    183: f_73 -> [11] : [ -1+free_136>-1 && free_57>0 ], cost: NONTERM
    184: f_73 -> [11] : [ -1+free_136>-1 && free_57<0 ], cost: NONTERM
    185: f_73 -> [11] : [ -1+free_136>-1 && free_57>0 ], cost: NONTERM
    186: f_73 -> [13] : k14'=1+free_136, k2'=1+free_136, k47'=free_136, k7'=free_136, k8'=-1+free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_60, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ -1+free_136>-1 && free_57<0 ], cost: 6+free_136
    187: f_73 -> [13] : k14'=1+free_136, k2'=1+free_136, k47'=free_136, k7'=free_136, k8'=-1+free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_60, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ -1+free_136>-1 && free_57>0 ], cost: 6+free_136
    188: f_73 -> [11] : [ free_24>-1 && free_26>0 && free_57>0 ], cost: NONTERM
    189: f_73 -> [11] : [ free_24>-1 && free_26>0 && free_57<0 ], cost: NONTERM
    190: f_73 -> [11] : [ free_24>-1 && free_26>0 && free_57>0 ], cost: NONTERM
    191: f_73 -> [13] : k14'=2+free_24, k17'=free_24, k18'=1+free_24, k24'=1+free_24, k26'=free_26, k35'=free_24, k7'=1+free_24, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x2'=free_60, x216'=free_68, x217'=free_72, x218'=free_71, x219'=free_75, x220'=free_67, x221'=free_70, x222'=free_74, x223'=free_66, x224'=free_69, x225'=free_73, x226'=free_65, x248'=free_21, x249'=free_25, x250'=free_29, x251'=free_20, x252'=free_28, x253'=free_19, x254'=free_23, x255'=free_27, x256'=free_30, x257'=free_22, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ free_24>-1 && free_26>0 && free_57<0 ], cost: 7+free_24
    192: f_73 -> [13] : k14'=2+free_24, k17'=free_24, k18'=1+free_24, k24'=1+free_24, k26'=free_26, k35'=free_24, k7'=1+free_24, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x2'=free_60, x216'=free_68, x217'=free_72, x218'=free_71, x219'=free_75, x220'=free_67, x221'=free_70, x222'=free_74, x223'=free_66, x224'=free_69, x225'=free_73, x226'=free_65, x248'=free_21, x249'=free_25, x250'=free_29, x251'=free_20, x252'=free_28, x253'=free_19, x254'=free_23, x255'=free_27, x256'=free_30, x257'=free_22, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ free_24>-1 && free_26>0 && free_57>0 ], cost: 7+free_24
    193: f_73 -> [11] : [ free_136>-1 && free_112>0 ], cost: NONTERM
    194: f_73 -> [11] : [ free_112<0 && -1+free_136>-1 ], cost: NONTERM
    195: f_73 -> [11] : [ free_112>0 && -1+free_136>-1 ], cost: NONTERM
    196: f_73 -> [13] : k14'=1+free_136, k17'=free_136, k18'=1+free_136, k2'=1+free_136, k47'=1+free_136, k7'=free_136, k8'=free_136, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_109, x216'=free_146, x217'=free_140, x218'=free_142, x219'=free_145, x220'=free_139, x221'=free_143, x222'=free_147, x223'=free_138, x224'=free_141, x225'=free_144, x226'=free_148, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ free_136>-1 && free_112<0 ], cost: 6+free_136
    197: f_73 -> [13] : k14'=1+free_136, k17'=free_136, k18'=1+free_136, k2'=1+free_136, k47'=1+free_136, k7'=free_136, k8'=free_136, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_109, x216'=free_146, x217'=free_140, x218'=free_142, x219'=free_145, x220'=free_139, x221'=free_143, x222'=free_147, x223'=free_138, x224'=free_141, x225'=free_144, x226'=free_148, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ free_136>-1 && free_112>0 ], cost: 6+free_136
    198: f_73 -> [11] : [ free_136>-1 && free_112>0 ], cost: NONTERM
    199: f_73 -> [11] : [ free_136>-1 && free_112<0 ], cost: NONTERM
    200: f_73 -> [11] : [ free_136>-1 && free_112>0 ], cost: NONTERM
    201: f_73 -> [13] : k14'=2+free_136, k17'=1+free_136, k18'=2+free_136, k2'=1+free_136, k47'=1+free_136, k7'=1+free_136, k8'=free_136, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_109, x216'=free_146, x217'=free_140, x218'=free_142, x219'=free_145, x220'=free_139, x221'=free_143, x222'=free_147, x223'=free_138, x224'=free_141, x225'=free_144, x226'=free_148, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ free_136>-1 && free_112<0 ], cost: 8+free_136
    202: f_73 -> [13] : k14'=2+free_136, k17'=1+free_136, k18'=2+free_136, k2'=1+free_136, k47'=1+free_136, k7'=1+free_136, k8'=free_136, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_109, x216'=free_146, x217'=free_140, x218'=free_142, x219'=free_145, x220'=free_139, x221'=free_143, x222'=free_147, x223'=free_138, x224'=free_141, x225'=free_144, x226'=free_148, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ free_136>-1 && free_112>0 ], cost: 8+free_136
    203: f_73 -> [11] : [ -1+free_136>-1 && free_112>0 ], cost: NONTERM
    204: f_73 -> [11] : [ free_112<0 && -2+free_136>-1 ], cost: NONTERM
    205: f_73 -> [11] : [ free_112>0 && -2+free_136>-1 ], cost: NONTERM
    206: f_73 -> [13] : k14'=free_136, k17'=-1+free_136, k18'=free_136, k2'=1+free_136, k47'=free_136, k7'=-1+free_136, k8'=-1+free_136, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_109, x216'=free_146, x217'=free_140, x218'=free_142, x219'=free_145, x220'=free_139, x221'=free_143, x222'=free_147, x223'=free_138, x224'=free_141, x225'=free_144, x226'=free_148, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ -1+free_136>-1 && free_112<0 ], cost: 6+free_136
    207: f_73 -> [13] : k14'=free_136, k17'=-1+free_136, k18'=free_136, k2'=1+free_136, k47'=free_136, k7'=-1+free_136, k8'=-1+free_136, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_109, x216'=free_146, x217'=free_140, x218'=free_142, x219'=free_145, x220'=free_139, x221'=free_143, x222'=free_147, x223'=free_138, x224'=free_141, x225'=free_144, x226'=free_148, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ -1+free_136>-1 && free_112>0 ], cost: 6+free_136
    208: f_73 -> [11] : [ -1+free_136>-1 && free_112>0 ], cost: NONTERM
    209: f_73 -> [11] : [ -1+free_136>-1 && free_112<0 ], cost: NONTERM
    210: f_73 -> [11] : [ -1+free_136>-1 && free_112>0 ], cost: NONTERM
    211: f_73 -> [13] : k14'=1+free_136, k17'=free_136, k18'=1+free_136, k2'=1+free_136, k47'=free_136, k7'=free_136, k8'=-1+free_136, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_109, x216'=free_146, x217'=free_140, x218'=free_142, x219'=free_145, x220'=free_139, x221'=free_143, x222'=free_147, x223'=free_138, x224'=free_141, x225'=free_144, x226'=free_148, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ -1+free_136>-1 && free_112<0 ], cost: 8+free_136
    212: f_73 -> [13] : k14'=1+free_136, k17'=free_136, k18'=1+free_136, k2'=1+free_136, k47'=free_136, k7'=free_136, k8'=-1+free_136, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_109, x216'=free_146, x217'=free_140, x218'=free_142, x219'=free_145, x220'=free_139, x221'=free_143, x222'=free_147, x223'=free_138, x224'=free_141, x225'=free_144, x226'=free_148, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ -1+free_136>-1 && free_112>0 ], cost: 8+free_136
    213: f_73 -> [11] : [ free_24>-1 && free_26>0 && free_112>0 ], cost: NONTERM
    214: f_73 -> [11] : [ free_24>-1 && free_26>0 && free_112<0 ], cost: NONTERM
    215: f_73 -> [11] : [ free_24>-1 && free_26>0 && free_112>0 ], cost: NONTERM
    216: f_73 -> [13] : k14'=2+free_24, k17'=1+free_24, k18'=2+free_24, k24'=1+free_24, k26'=free_26, k35'=free_24, k7'=1+free_24, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x2'=free_109, x216'=free_146, x217'=free_140, x218'=free_142, x219'=free_145, x220'=free_139, x221'=free_143, x222'=free_147, x223'=free_138, x224'=free_141, x225'=free_144, x226'=free_148, x248'=free_21, x249'=free_25, x250'=free_29, x251'=free_20, x252'=free_28, x253'=free_19, x254'=free_23, x255'=free_27, x256'=free_30, x257'=free_22, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ free_24>-1 && free_26>0 && free_112<0 ], cost: 9+free_24
    217: f_73 -> [13] : k14'=2+free_24, k17'=1+free_24, k18'=2+free_24, k24'=1+free_24, k26'=free_26, k35'=free_24, k7'=1+free_24, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x2'=free_109, x216'=free_146, x217'=free_140, x218'=free_142, x219'=free_145, x220'=free_139, x221'=free_143, x222'=free_147, x223'=free_138, x224'=free_141, x225'=free_144, x226'=free_148, x248'=free_21, x249'=free_25, x250'=free_29, x251'=free_20, x252'=free_28, x253'=free_19, x254'=free_23, x255'=free_27, x256'=free_30, x257'=free_22, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ free_24>-1 && free_26>0 && free_112>0 ], cost: 9+free_24
    218: f_73 -> [11] : [ free_136>-1 && free_57>0 ], cost: NONTERM
    219: f_73 -> [11] : [ free_136>-1 && free_57<0 ], cost: NONTERM
    220: f_73 -> [11] : [ free_136>-1 && free_57>0 ], cost: NONTERM
    221: f_73 -> [13] : k14'=2+free_136, k17'=free_136, k18'=1+free_136, k2'=1+free_136, k47'=1+free_136, k7'=1+free_136, k8'=free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_60, x216'=free_146, x217'=free_140, x218'=free_142, x219'=free_145, x220'=free_139, x221'=free_143, x222'=free_147, x223'=free_138, x224'=free_141, x225'=free_144, x226'=free_148, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ free_136>-1 && free_57<0 ], cost: 8+free_136
    222: f_73 -> [13] : k14'=2+free_136, k17'=free_136, k18'=1+free_136, k2'=1+free_136, k47'=1+free_136, k7'=1+free_136, k8'=free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_60, x216'=free_146, x217'=free_140, x218'=free_142, x219'=free_145, x220'=free_139, x221'=free_143, x222'=free_147, x223'=free_138, x224'=free_141, x225'=free_144, x226'=free_148, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ free_136>-1 && free_57>0 ], cost: 8+free_136
    223: f_73 -> [11] : [ free_136>-1 && free_57>0 ], cost: NONTERM
    224: f_73 -> [11] : [ free_136>-1 && free_57>0 ], cost: NONTERM
    225: f_73 -> [13] : k14'=3+free_136, k17'=1+free_136, k18'=2+free_136, k2'=1+free_136, k47'=1+free_136, k7'=2+free_136, k8'=free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_60, x216'=free_146, x217'=free_140, x218'=free_142, x219'=free_145, x220'=free_139, x221'=free_143, x222'=free_147, x223'=free_138, x224'=free_141, x225'=free_144, x226'=free_148, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ free_136>-1 && free_57>0 ], cost: 10+free_136
    226: f_73 -> [11] : [ -1+free_136>-1 && free_57>0 ], cost: NONTERM
    227: f_73 -> [11] : [ -1+free_136>-1 && free_57<0 ], cost: NONTERM
    228: f_73 -> [11] : [ -1+free_136>-1 && free_57>0 ], cost: NONTERM
    229: f_73 -> [13] : k14'=1+free_136, k17'=-1+free_136, k18'=free_136, k2'=1+free_136, k47'=free_136, k7'=free_136, k8'=-1+free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_60, x216'=free_146, x217'=free_140, x218'=free_142, x219'=free_145, x220'=free_139, x221'=free_143, x222'=free_147, x223'=free_138, x224'=free_141, x225'=free_144, x226'=free_148, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ -1+free_136>-1 && free_57<0 ], cost: 8+free_136
    230: f_73 -> [13] : k14'=1+free_136, k17'=-1+free_136, k18'=free_136, k2'=1+free_136, k47'=free_136, k7'=free_136, k8'=-1+free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_60, x216'=free_146, x217'=free_140, x218'=free_142, x219'=free_145, x220'=free_139, x221'=free_143, x222'=free_147, x223'=free_138, x224'=free_141, x225'=free_144, x226'=free_148, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ -1+free_136>-1 && free_57>0 ], cost: 8+free_136
    231: f_73 -> [11] : [ -1+free_136>-1 && free_57>0 ], cost: NONTERM
    232: f_73 -> [11] : [ -1+free_136>-1 && free_57>0 ], cost: NONTERM
    233: f_73 -> [13] : k14'=2+free_136, k17'=free_136, k18'=1+free_136, k2'=1+free_136, k47'=free_136, k7'=1+free_136, k8'=-1+free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_60, x216'=free_146, x217'=free_140, x218'=free_142, x219'=free_145, x220'=free_139, x221'=free_143, x222'=free_147, x223'=free_138, x224'=free_141, x225'=free_144, x226'=free_148, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ -1+free_136>-1 && free_57>0 ], cost: 10+free_136
    234: f_73 -> [11] : [ free_24>-1 && free_26>0 && free_57>0 ], cost: NONTERM
    235: f_73 -> [11] : [ free_24>-1 && free_26>0 && free_57>0 ], cost: NONTERM
    236: f_73 -> [13] : k14'=3+free_24, k17'=1+free_24, k18'=2+free_24, k24'=1+free_24, k26'=free_26, k35'=free_24, k7'=2+free_24, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x2'=free_60, x216'=free_146, x217'=free_140, x218'=free_142, x219'=free_145, x220'=free_139, x221'=free_143, x222'=free_147, x223'=free_138, x224'=free_141, x225'=free_144, x226'=free_148, x248'=free_21, x249'=free_25, x250'=free_29, x251'=free_20, x252'=free_28, x253'=free_19, x254'=free_23, x255'=free_27, x256'=free_30, x257'=free_22, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ free_24>-1 && free_26>0 && free_57>0 ], cost: 11+free_24
    237: f_73 -> [11] : [ -1+free_136>-1 && free_112>0 ], cost: NONTERM
    238: f_73 -> [11] : [ free_112<0 && -2+free_136>-1 ], cost: NONTERM
    239: f_73 -> [11] : [ free_112>0 && -2+free_136>-1 ], cost: NONTERM
    240: f_73 -> [13] : k14'=free_136, k17'=-1+free_136, k18'=free_136, k2'=1+free_136, k47'=1+free_136, k7'=-1+free_136, k8'=free_136, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_109, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ -1+free_136>-1 && free_112<0 ], cost: 6+free_136
    241: f_73 -> [13] : k14'=free_136, k17'=-1+free_136, k18'=free_136, k2'=1+free_136, k47'=1+free_136, k7'=-1+free_136, k8'=free_136, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_109, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ -1+free_136>-1 && free_112>0 ], cost: 6+free_136
    242: f_73 -> [11] : [ free_136>-1 && free_112>0 ], cost: NONTERM
    243: f_73 -> [11] : [ free_112<0 && -1+free_136>-1 ], cost: NONTERM
    244: f_73 -> [11] : [ free_112>0 && -1+free_136>-1 ], cost: NONTERM
    245: f_73 -> [13] : k14'=1+free_136, k17'=free_136, k18'=1+free_136, k2'=1+free_136, k47'=1+free_136, k7'=free_136, k8'=free_136, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_109, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ free_136>-1 && free_112<0 ], cost: 8+free_136
    246: f_73 -> [13] : k14'=1+free_136, k17'=free_136, k18'=1+free_136, k2'=1+free_136, k47'=1+free_136, k7'=free_136, k8'=free_136, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_109, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ free_136>-1 && free_112>0 ], cost: 8+free_136
    247: f_73 -> [11] : [ -2+free_136>-1 && free_112>0 ], cost: NONTERM
    248: f_73 -> [11] : [ free_112<0 && -3+free_136>-1 ], cost: NONTERM
    249: f_73 -> [11] : [ free_112>0 && -3+free_136>-1 ], cost: NONTERM
    250: f_73 -> [13] : k14'=-1+free_136, k17'=-2+free_136, k18'=-1+free_136, k2'=1+free_136, k47'=free_136, k7'=-2+free_136, k8'=-1+free_136, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_109, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ -2+free_136>-1 && free_112<0 ], cost: 6+free_136
    251: f_73 -> [13] : k14'=-1+free_136, k17'=-2+free_136, k18'=-1+free_136, k2'=1+free_136, k47'=free_136, k7'=-2+free_136, k8'=-1+free_136, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_109, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ -2+free_136>-1 && free_112>0 ], cost: 6+free_136
    252: f_73 -> [11] : [ -1+free_136>-1 && free_112>0 ], cost: NONTERM
    253: f_73 -> [11] : [ free_112<0 && -2+free_136>-1 ], cost: NONTERM
    254: f_73 -> [11] : [ free_112>0 && -2+free_136>-1 ], cost: NONTERM
    255: f_73 -> [13] : k14'=free_136, k17'=-1+free_136, k18'=free_136, k2'=1+free_136, k47'=free_136, k7'=-1+free_136, k8'=-1+free_136, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_109, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ -1+free_136>-1 && free_112<0 ], cost: 8+free_136
    256: f_73 -> [13] : k14'=free_136, k17'=-1+free_136, k18'=free_136, k2'=1+free_136, k47'=free_136, k7'=-1+free_136, k8'=-1+free_136, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_109, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ -1+free_136>-1 && free_112>0 ], cost: 8+free_136
    257: f_73 -> [11] : [ free_24>-1 && free_26>0 && free_112>0 ], cost: NONTERM
    258: f_73 -> [11] : [ free_26>0 && free_112<0 && -1+free_24>-1 ], cost: NONTERM
    259: f_73 -> [11] : [ free_26>0 && free_112>0 && -1+free_24>-1 ], cost: NONTERM
    260: f_73 -> [13] : k14'=1+free_24, k17'=free_24, k18'=1+free_24, k24'=1+free_24, k26'=free_26, k35'=free_24, k7'=free_24, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x2'=free_109, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x248'=free_21, x249'=free_25, x250'=free_29, x251'=free_20, x252'=free_28, x253'=free_19, x254'=free_23, x255'=free_27, x256'=free_30, x257'=free_22, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ free_24>-1 && free_26>0 && free_112<0 ], cost: 9+free_24
    261: f_73 -> [13] : k14'=1+free_24, k17'=free_24, k18'=1+free_24, k24'=1+free_24, k26'=free_26, k35'=free_24, k7'=free_24, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x2'=free_109, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x248'=free_21, x249'=free_25, x250'=free_29, x251'=free_20, x252'=free_28, x253'=free_19, x254'=free_23, x255'=free_27, x256'=free_30, x257'=free_22, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ free_24>-1 && free_26>0 && free_112>0 ], cost: 9+free_24
    262: f_73 -> [11] : [ -1+free_136>-1 && free_57>0 ], cost: NONTERM
    263: f_73 -> [11] : [ -1+free_136>-1 && free_57<0 ], cost: NONTERM
    264: f_73 -> [11] : [ -1+free_136>-1 && free_57>0 ], cost: NONTERM
    265: f_73 -> [13] : k14'=1+free_136, k17'=-1+free_136, k18'=free_136, k2'=1+free_136, k47'=1+free_136, k7'=free_136, k8'=free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_60, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ -1+free_136>-1 && free_57<0 ], cost: 8+free_136
    266: f_73 -> [13] : k14'=1+free_136, k17'=-1+free_136, k18'=free_136, k2'=1+free_136, k47'=1+free_136, k7'=free_136, k8'=free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_60, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ -1+free_136>-1 && free_57>0 ], cost: 8+free_136
    267: f_73 -> [11] : [ free_136>-1 && free_57<0 ], cost: NONTERM
    268: f_73 -> [13] : k14'=2+free_136, k17'=free_136, k18'=1+free_136, k2'=1+free_136, k47'=1+free_136, k7'=1+free_136, k8'=free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_60, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ free_136>-1 && free_57<0 ], cost: 10+free_136
    269: f_73 -> [11] : [ -2+free_136>-1 && free_57>0 ], cost: NONTERM
    270: f_73 -> [11] : [ -2+free_136>-1 && free_57<0 ], cost: NONTERM
    271: f_73 -> [11] : [ -2+free_136>-1 && free_57>0 ], cost: NONTERM
    272: f_73 -> [13] : k14'=free_136, k17'=-2+free_136, k18'=-1+free_136, k2'=1+free_136, k47'=free_136, k7'=-1+free_136, k8'=-1+free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_60, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ -2+free_136>-1 && free_57<0 ], cost: 8+free_136
    273: f_73 -> [13] : k14'=free_136, k17'=-2+free_136, k18'=-1+free_136, k2'=1+free_136, k47'=free_136, k7'=-1+free_136, k8'=-1+free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_60, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ -2+free_136>-1 && free_57>0 ], cost: 8+free_136
    274: f_73 -> [11] : [ -1+free_136>-1 && free_57<0 ], cost: NONTERM
    275: f_73 -> [13] : k14'=1+free_136, k17'=-1+free_136, k18'=free_136, k2'=1+free_136, k47'=free_136, k7'=free_136, k8'=-1+free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_60, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ -1+free_136>-1 && free_57<0 ], cost: 10+free_136
    276: f_73 -> [11] : [ free_24>-1 && free_26>0 && free_57<0 ], cost: NONTERM
    277: f_73 -> [13] : k14'=2+free_24, k17'=free_24, k18'=1+free_24, k24'=1+free_24, k26'=free_26, k35'=free_24, k7'=1+free_24, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x2'=free_60, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x248'=free_21, x249'=free_25, x250'=free_29, x251'=free_20, x252'=free_28, x253'=free_19, x254'=free_23, x255'=free_27, x256'=free_30, x257'=free_22, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ free_24>-1 && free_26>0 && free_57<0 ], cost: 11+free_24
    278: f_73 -> [11] : [ -1+free_136>-1 && free_57>0 ], cost: NONTERM
    279: f_73 -> [11] : [ -1+free_136>-1 && free_57<0 ], cost: NONTERM
    280: f_73 -> [11] : [ -1+free_136>-1 && free_57>0 ], cost: NONTERM
    281: f_73 -> [13] : k14'=1+free_136, k17'=-1+free_136, k18'=free_136, k2'=1+free_136, k47'=1+free_136, k7'=free_136, k8'=free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_60, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ -1+free_136>-1 && free_57<0 ], cost: 8+free_136
    282: f_73 -> [13] : k14'=1+free_136, k17'=-1+free_136, k18'=free_136, k2'=1+free_136, k47'=1+free_136, k7'=free_136, k8'=free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_60, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ -1+free_136>-1 && free_57>0 ], cost: 8+free_136
    283: f_73 -> [11] : [ free_136>-1 && free_57>0 ], cost: NONTERM
    284: f_73 -> [11] : [ free_136>-1 && free_57>0 ], cost: NONTERM
    285: f_73 -> [13] : k14'=2+free_136, k17'=free_136, k18'=1+free_136, k2'=1+free_136, k47'=1+free_136, k7'=1+free_136, k8'=free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_60, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ free_136>-1 && free_57>0 ], cost: 10+free_136
    286: f_73 -> [11] : [ -2+free_136>-1 && free_57>0 ], cost: NONTERM
    287: f_73 -> [11] : [ -2+free_136>-1 && free_57<0 ], cost: NONTERM
    288: f_73 -> [11] : [ -2+free_136>-1 && free_57>0 ], cost: NONTERM
    289: f_73 -> [13] : k14'=free_136, k17'=-2+free_136, k18'=-1+free_136, k2'=1+free_136, k47'=free_136, k7'=-1+free_136, k8'=-1+free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_60, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ -2+free_136>-1 && free_57<0 ], cost: 8+free_136
    290: f_73 -> [13] : k14'=free_136, k17'=-2+free_136, k18'=-1+free_136, k2'=1+free_136, k47'=free_136, k7'=-1+free_136, k8'=-1+free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_60, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ -2+free_136>-1 && free_57>0 ], cost: 8+free_136
    291: f_73 -> [11] : [ -1+free_136>-1 && free_57>0 ], cost: NONTERM
    292: f_73 -> [11] : [ -1+free_136>-1 && free_57>0 ], cost: NONTERM
    293: f_73 -> [13] : k14'=1+free_136, k17'=-1+free_136, k18'=free_136, k2'=1+free_136, k47'=free_136, k7'=free_136, k8'=-1+free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_60, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ -1+free_136>-1 && free_57>0 ], cost: 10+free_136
    294: f_73 -> [11] : [ free_24>-1 && free_26>0 && free_57>0 ], cost: NONTERM
    295: f_73 -> [11] : [ free_24>-1 && free_26>0 && free_57>0 ], cost: NONTERM
    296: f_73 -> [13] : k14'=2+free_24, k17'=free_24, k18'=1+free_24, k24'=1+free_24, k26'=free_26, k35'=free_24, k7'=1+free_24, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x2'=free_60, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x248'=free_21, x249'=free_25, x250'=free_29, x251'=free_20, x252'=free_28, x253'=free_19, x254'=free_23, x255'=free_27, x256'=free_30, x257'=free_22, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ free_24>-1 && free_26>0 && free_57>0 ], cost: 11+free_24
    297: f_73 -> [13] : k14'=1, k17'=0, k18'=1, k2'=1+free_136, k47'=1+free_136, k7'=0, k8'=free_136, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_109, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ free_136>=1 && free_112<0 ], cost: 4+3*free_136
    298: f_73 -> [13] : k14'=1, k17'=0, k18'=1, k2'=1+free_136, k47'=1+free_136, k7'=0, k8'=free_136, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_109, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ free_136>-1 && free_112<0 ], cost: 8+3*free_136
    299: f_73 -> [13] : k14'=1, k17'=0, k18'=1, k2'=1+free_136, k47'=free_136, k7'=0, k8'=-1+free_136, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_109, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ -1+free_136>=1 && free_112<0 ], cost: 2+3*free_136
    300: f_73 -> [13] : k14'=1, k17'=0, k18'=1, k2'=1+free_136, k47'=free_136, k7'=0, k8'=-1+free_136, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_109, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ -1+free_136>-1 && free_112<0 ], cost: 6+3*free_136
    301: f_73 -> [13] : k14'=1, k17'=0, k18'=1, k24'=1+free_24, k26'=free_26, k35'=free_24, k7'=0, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x2'=free_109, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x248'=free_21, x249'=free_25, x250'=free_29, x251'=free_20, x252'=free_28, x253'=free_19, x254'=free_23, x255'=free_27, x256'=free_30, x257'=free_22, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ free_24>-1 && free_26>0 && free_112<0 ], cost: 9+3*free_24
    302: f_73 -> [15] : [ free_136>=1 && free_112<0 ], cost: 2+3*free_136
    303: f_73 -> [15] : [ free_136>-1 && free_112<0 ], cost: 6+3*free_136
    304: f_73 -> [15] : [ -1+free_136>=1 && free_112<0 ], cost: 3*free_136
    305: f_73 -> [15] : [ -1+free_136>-1 && free_112<0 ], cost: 4+3*free_136
    306: f_73 -> [15] : [ free_24>-1 && free_26>0 && free_112<0 ], cost: 7+3*free_24

### Computing asymptotic complexity ###

Fully simplified ITS problem
   Start location: f_73
     50: f_73 -> [12] : [ 1+free_136>0 ], cost: 2+free_136
     64: f_73 -> [10] : [], cost: NONTERM
     78: f_73 -> [11] : [ free_24>-1 && free_26>0 ], cost: NONTERM
     81: f_73 -> [13] : [ free_24>-1 && free_26<0 ], cost: 3+free_24
     82: f_73 -> [13] : [ free_24>-1 && free_26>0 ], cost: 3+free_24
     83: f_73 -> [13] : [ free_24>-1 && free_126<0 ], cost: 5+free_24
     84: f_73 -> [13] : [ free_24>-1 && free_126>0 ], cost: 5+free_24
    164: f_73 -> [14] : [ free_136>-1 ], cost: NONTERM
    165: f_73 -> [14] : [ -2+free_136>-1 ], cost: NONTERM
    166: f_73 -> [14] : [ -1+free_136>-1 ], cost: NONTERM
    167: f_73 -> [14] : [ free_24>-1 ], cost: NONTERM
    168: f_73 -> [11] : [ free_136>-1 && free_97>0 ], cost: NONTERM
    169: f_73 -> [11] : [ free_97<0 && -1+free_136>-1 ], cost: NONTERM
    170: f_73 -> [11] : [ free_97>0 && -1+free_136>-1 ], cost: NONTERM
    171: f_73 -> [13] : k14'=1+free_136, k2'=1+free_136, k47'=1+free_136, k7'=free_136, k8'=free_136, k9'=free_97, x'=free_90, x_'=free_92, x__'=free_96, x1'=free_89, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_94, x3'=free_87, x4'=free_91, x5'=free_93, x6'=free_95, x7'=free_88, [ free_136>-1 && free_97<0 ], cost: 4+free_136
    172: f_73 -> [13] : k14'=1+free_136, k2'=1+free_136, k47'=1+free_136, k7'=free_136, k8'=free_136, k9'=free_97, x'=free_90, x_'=free_92, x__'=free_96, x1'=free_89, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_94, x3'=free_87, x4'=free_91, x5'=free_93, x6'=free_95, x7'=free_88, [ free_136>-1 && free_97>0 ], cost: 4+free_136
    178: f_73 -> [11] : [ -1+free_136>-1 && free_97>0 ], cost: NONTERM
    179: f_73 -> [11] : [ free_97<0 && -2+free_136>-1 ], cost: NONTERM
    180: f_73 -> [11] : [ free_97>0 && -2+free_136>-1 ], cost: NONTERM
    181: f_73 -> [13] : k14'=free_136, k2'=1+free_136, k47'=free_136, k7'=-1+free_136, k8'=-1+free_136, k9'=free_97, x'=free_90, x_'=free_92, x__'=free_96, x1'=free_89, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_94, x3'=free_87, x4'=free_91, x5'=free_93, x6'=free_95, x7'=free_88, [ -1+free_136>-1 && free_97<0 ], cost: 4+free_136
    182: f_73 -> [13] : k14'=free_136, k2'=1+free_136, k47'=free_136, k7'=-1+free_136, k8'=-1+free_136, k9'=free_97, x'=free_90, x_'=free_92, x__'=free_96, x1'=free_89, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_94, x3'=free_87, x4'=free_91, x5'=free_93, x6'=free_95, x7'=free_88, [ -1+free_136>-1 && free_97>0 ], cost: 4+free_136
    199: f_73 -> [11] : [ free_136>-1 && free_112<0 ], cost: NONTERM
    209: f_73 -> [11] : [ -1+free_136>-1 && free_112<0 ], cost: NONTERM
    214: f_73 -> [11] : [ free_24>-1 && free_26>0 && free_112<0 ], cost: NONTERM
    242: f_73 -> [11] : [ free_136>-1 && free_112>0 ], cost: NONTERM
    243: f_73 -> [11] : [ free_112<0 && -1+free_136>-1 ], cost: NONTERM
    244: f_73 -> [11] : [ free_112>0 && -1+free_136>-1 ], cost: NONTERM
    245: f_73 -> [13] : k14'=1+free_136, k17'=free_136, k18'=1+free_136, k2'=1+free_136, k47'=1+free_136, k7'=free_136, k8'=free_136, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_109, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ free_136>-1 && free_112<0 ], cost: 8+free_136
    246: f_73 -> [13] : k14'=1+free_136, k17'=free_136, k18'=1+free_136, k2'=1+free_136, k47'=1+free_136, k7'=free_136, k8'=free_136, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_109, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ free_136>-1 && free_112>0 ], cost: 8+free_136
    247: f_73 -> [11] : [ -2+free_136>-1 && free_112>0 ], cost: NONTERM
    248: f_73 -> [11] : [ free_112<0 && -3+free_136>-1 ], cost: NONTERM
    249: f_73 -> [11] : [ free_112>0 && -3+free_136>-1 ], cost: NONTERM
    250: f_73 -> [13] : k14'=-1+free_136, k17'=-2+free_136, k18'=-1+free_136, k2'=1+free_136, k47'=free_136, k7'=-2+free_136, k8'=-1+free_136, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_109, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ -2+free_136>-1 && free_112<0 ], cost: 6+free_136
    251: f_73 -> [13] : k14'=-1+free_136, k17'=-2+free_136, k18'=-1+free_136, k2'=1+free_136, k47'=free_136, k7'=-2+free_136, k8'=-1+free_136, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_109, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ -2+free_136>-1 && free_112>0 ], cost: 6+free_136
    252: f_73 -> [11] : [ -1+free_136>-1 && free_112>0 ], cost: NONTERM
    253: f_73 -> [11] : [ free_112<0 && -2+free_136>-1 ], cost: NONTERM
    254: f_73 -> [11] : [ free_112>0 && -2+free_136>-1 ], cost: NONTERM
    255: f_73 -> [13] : k14'=free_136, k17'=-1+free_136, k18'=free_136, k2'=1+free_136, k47'=free_136, k7'=-1+free_136, k8'=-1+free_136, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_109, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ -1+free_136>-1 && free_112<0 ], cost: 8+free_136
    256: f_73 -> [13] : k14'=free_136, k17'=-1+free_136, k18'=free_136, k2'=1+free_136, k47'=free_136, k7'=-1+free_136, k8'=-1+free_136, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_109, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ -1+free_136>-1 && free_112>0 ], cost: 8+free_136
    257: f_73 -> [11] : [ free_24>-1 && free_26>0 && free_112>0 ], cost: NONTERM
    258: f_73 -> [11] : [ free_26>0 && free_112<0 && -1+free_24>-1 ], cost: NONTERM
    259: f_73 -> [11] : [ free_26>0 && free_112>0 && -1+free_24>-1 ], cost: NONTERM
    260: f_73 -> [13] : k14'=1+free_24, k17'=free_24, k18'=1+free_24, k24'=1+free_24, k26'=free_26, k35'=free_24, k7'=free_24, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x2'=free_109, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x248'=free_21, x249'=free_25, x250'=free_29, x251'=free_20, x252'=free_28, x253'=free_19, x254'=free_23, x255'=free_27, x256'=free_30, x257'=free_22, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ free_24>-1 && free_26>0 && free_112<0 ], cost: 9+free_24
    261: f_73 -> [13] : k14'=1+free_24, k17'=free_24, k18'=1+free_24, k24'=1+free_24, k26'=free_26, k35'=free_24, k7'=free_24, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x2'=free_109, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x248'=free_21, x249'=free_25, x250'=free_29, x251'=free_20, x252'=free_28, x253'=free_19, x254'=free_23, x255'=free_27, x256'=free_30, x257'=free_22, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ free_24>-1 && free_26>0 && free_112>0 ], cost: 9+free_24
    267: f_73 -> [11] : [ free_136>-1 && free_57<0 ], cost: NONTERM
    268: f_73 -> [13] : k14'=2+free_136, k17'=free_136, k18'=1+free_136, k2'=1+free_136, k47'=1+free_136, k7'=1+free_136, k8'=free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_60, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ free_136>-1 && free_57<0 ], cost: 10+free_136
    275: f_73 -> [13] : k14'=1+free_136, k17'=-1+free_136, k18'=free_136, k2'=1+free_136, k47'=free_136, k7'=free_136, k8'=-1+free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_60, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ -1+free_136>-1 && free_57<0 ], cost: 10+free_136
    276: f_73 -> [11] : [ free_24>-1 && free_26>0 && free_57<0 ], cost: NONTERM
    277: f_73 -> [13] : k14'=2+free_24, k17'=free_24, k18'=1+free_24, k24'=1+free_24, k26'=free_26, k35'=free_24, k7'=1+free_24, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x2'=free_60, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x248'=free_21, x249'=free_25, x250'=free_29, x251'=free_20, x252'=free_28, x253'=free_19, x254'=free_23, x255'=free_27, x256'=free_30, x257'=free_22, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ free_24>-1 && free_26>0 && free_57<0 ], cost: 11+free_24
    279: f_73 -> [11] : [ -1+free_136>-1 && free_57<0 ], cost: NONTERM
    284: f_73 -> [11] : [ free_136>-1 && free_57>0 ], cost: NONTERM
    285: f_73 -> [13] : k14'=2+free_136, k17'=free_136, k18'=1+free_136, k2'=1+free_136, k47'=1+free_136, k7'=1+free_136, k8'=free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_60, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ free_136>-1 && free_57>0 ], cost: 10+free_136
    287: f_73 -> [11] : [ -2+free_136>-1 && free_57<0 ], cost: NONTERM
    288: f_73 -> [11] : [ -2+free_136>-1 && free_57>0 ], cost: NONTERM
    289: f_73 -> [13] : k14'=free_136, k17'=-2+free_136, k18'=-1+free_136, k2'=1+free_136, k47'=free_136, k7'=-1+free_136, k8'=-1+free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_60, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ -2+free_136>-1 && free_57<0 ], cost: 8+free_136
    290: f_73 -> [13] : k14'=free_136, k17'=-2+free_136, k18'=-1+free_136, k2'=1+free_136, k47'=free_136, k7'=-1+free_136, k8'=-1+free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_60, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ -2+free_136>-1 && free_57>0 ], cost: 8+free_136
    292: f_73 -> [11] : [ -1+free_136>-1 && free_57>0 ], cost: NONTERM
    293: f_73 -> [13] : k14'=1+free_136, k17'=-1+free_136, k18'=free_136, k2'=1+free_136, k47'=free_136, k7'=free_136, k8'=-1+free_136, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_60, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ -1+free_136>-1 && free_57>0 ], cost: 10+free_136
    295: f_73 -> [11] : [ free_24>-1 && free_26>0 && free_57>0 ], cost: NONTERM
    296: f_73 -> [13] : k14'=2+free_24, k17'=free_24, k18'=1+free_24, k24'=1+free_24, k26'=free_26, k35'=free_24, k7'=1+free_24, k9'=free_57, x'=free_58, x_'=free_62, x__'=free_63, x1'=free_55, x2'=free_60, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x248'=free_21, x249'=free_25, x250'=free_29, x251'=free_20, x252'=free_28, x253'=free_19, x254'=free_23, x255'=free_27, x256'=free_30, x257'=free_22, x3'=free_56, x4'=free_61, x5'=free_64, x6'=free_54, x7'=free_59, [ free_24>-1 && free_26>0 && free_57>0 ], cost: 11+free_24
    297: f_73 -> [13] : k14'=1, k17'=0, k18'=1, k2'=1+free_136, k47'=1+free_136, k7'=0, k8'=free_136, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_109, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ free_136>=1 && free_112<0 ], cost: 4+3*free_136
    298: f_73 -> [13] : k14'=1, k17'=0, k18'=1, k2'=1+free_136, k47'=1+free_136, k7'=0, k8'=free_136, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x133'=free_128, x134'=free_131, x135'=free_134, x136'=free_127, x137'=free_130, x138'=free_133, x139'=free_137, x140'=free_132, x141'=free_135, x142'=free_129, x2'=free_109, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ free_136>-1 && free_112<0 ], cost: 8+3*free_136
    299: f_73 -> [13] : k14'=1, k17'=0, k18'=1, k2'=1+free_136, k47'=free_136, k7'=0, k8'=-1+free_136, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_109, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ -1+free_136>=1 && free_112<0 ], cost: 2+3*free_136
    300: f_73 -> [13] : k14'=1, k17'=0, k18'=1, k2'=1+free_136, k47'=free_136, k7'=0, k8'=-1+free_136, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x133'=free_9, x134'=free_1, x135'=free_4, x136'=free_8, x137'=free, x138'=free_3, x139'=free_7, x140'=free_2, x141'=free_6, x142'=free_10, x2'=free_109, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ -1+free_136>-1 && free_112<0 ], cost: 6+3*free_136
    301: f_73 -> [13] : k14'=1, k17'=0, k18'=1, k24'=1+free_24, k26'=free_26, k35'=free_24, k7'=0, k9'=free_112, x'=free_113, x_'=free_106, x__'=free_111, x1'=free_105, x2'=free_109, x216'=free_49, x217'=free_52, x218'=free_44, x219'=free_47, x220'=free_51, x221'=free_43, x222'=free_46, x223'=free_50, x224'=free_42, x225'=free_45, x226'=free_53, x248'=free_21, x249'=free_25, x250'=free_29, x251'=free_20, x252'=free_28, x253'=free_19, x254'=free_23, x255'=free_27, x256'=free_30, x257'=free_22, x3'=free_115, x4'=free_108, x5'=free_110, x6'=free_114, x7'=free_107, [ free_24>-1 && free_26>0 && free_112<0 ], cost: 9+3*free_24

Computing asymptotic complexity for rule 64
   Guard is satisfiable, yielding nontermination
   Resulting cost NONTERM has complexity: Nonterm

Found new complexity Nonterm.

Obtained the following overall complexity (w.r.t. the length of the input n):
   Complexity:  Nonterm
   Cpx degree:  Nonterm
   Solved cost: NONTERM
   Rule cost:   NONTERM
   Rule guard:  []

NO


The final guard is:


Z3 found a model for the final guard:
{}

Try to generate a witness via retracing LoAT's simplifications:
  AssertionError: null
No witness generated
----------------------------------------

(12)
NO
Graph finished, checking  consistency
Graph finished, checked consistency, took 0.0s
Truth value repropagation in proof tree changed value to NO
