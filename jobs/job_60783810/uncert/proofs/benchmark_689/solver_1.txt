YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/oZukx.c
# AProVE Commit ID: 48c83ccb80d5f8312cb92f4aa1b51dc35e247e65 nils 20241118 unpublished


Termination of the given C Problem could be proven:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 20 ms]
(2) LLVM problem
(3) LLVMToTerminationGraphProof [EQUIVALENT, 1191 ms]
(4) LLVM Symbolic Execution Graph
(5) SymbolicExecutionGraphToSCCProof [SOUND, 0 ms]
(6) AND
    (7) LLVM Symbolic Execution SCC
        (8) SCC2IRS [SOUND, 1 ms]
        (9) IntTRS
        (10) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (11) IntTRS
        (12) RankingReductionPairProof [EQUIVALENT, 218 ms]
        (13) YES
    (14) LLVM Symbolic Execution SCC
        (15) SCC2IRS [SOUND, 0 ms]
        (16) IntTRS
        (17) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (18) IntTRS
        (19) RankingReductionPairProof [EQUIVALENT, 3 ms]
        (20) YES
    (21) LLVM Symbolic Execution SCC
        (22) SCC2IRS [SOUND, 0 ms]
        (23) IntTRS
        (24) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (25) IntTRS
        (26) RankingReductionPairProof [EQUIVALENT, 7 ms]
        (27) YES


----------------------------------------

(0)
Obligation:
c file /hpcwork/ff862203/termcomp25/benchmarks/oZukx.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /hpcwork/ff862203/termcomp25/benchmarks/oZukx.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-pc-linux-gnu"

Type definitions:

Global variables:

Function declarations and definitions:

*BasicFunctionTypename: "llvm.dbg.declare" returnParam: BasicVoidType parameters: (BasicMetadataType, BasicMetadataType, BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_nondet_int" returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "gcd" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: (0 i32, 1 i32) variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 7
	0:
		%3 = alloca i32, align 4
		%4 = alloca i32, align 4
		store %0, %3
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %3)
		store %1, %4
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %4)
		br %5
	5:
		%6 = load %3
		%7 = load %4
		%8 = icmp ne %6 %7
		br %8, %9, %22
	9:
		%10 = load %3
		%11 = load %4
		%12 = icmp sgt %10 %11
		br %12, %13, %17
	13:
		%14 = load %3
		%15 = load %4
		%16 = sub i32 %14, %15
		store %16, %3
		br %21
	17:
		%18 = load %4
		%19 = load %3
		%20 = sub i32 %18, %19
		store %20, %4
		br %21
	21:
		br %5
	22:
		%23 = load %3
		ret %23

*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 41
	0:
		%1 = alloca i32, align 4
		%2 = alloca i32, align 4
		%3 = alloca i32, align 4
		store 0, %1
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %2)
		%4 = call i32 @__VERIFIER_nondet_int()
		store %4, %2
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %3)
		%5 = call i32 @__VERIFIER_nondet_int()
		store %5, %3
		%6 = load %2
		%7 = icmp sgt %6 0
		br %7, %8, %15
	8:
		%9 = load %3
		%10 = icmp sgt %9 0
		br %10, %11, %15
	11:
		%12 = load %2
		%13 = load %3
		%14 = call i32 @gcd(i32 %12, i32 %13)
		br %15
	15:
		ret 0


Analyze Termination of all function calls matching the pattern:
main()
----------------------------------------

(3) LLVMToTerminationGraphProof (EQUIVALENT)
Constructed symbolic execution graph for LLVM program.
----------------------------------------

(4)
Obligation:
Symbolic Execution Graph
----------------------------------------

(5) SymbolicExecutionGraphToSCCProof (SOUND)
Splitted symbolic execution graph to 3 SCCs.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
SCC
----------------------------------------

(8) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 43 rulesP rules:
f_381(v448, v449, v450, v451, v452, v453, 1, v456, v457, v458, v459, v462, v460, v463, v461, v464, v465, v466, 0, 3, 2, 4) -> f_383(v448, v449, v450, v451, v452, v453, 1, v457, v458, v459, v462, v460, v463, v461, v464, v465, v466, 0, 3, 2, 4) :|: 0 = 0
f_383(v448, v449, v450, v451, v452, v453, 1, v457, v458, v459, v462, v460, v463, v461, v464, v465, v466, 0, 3, 2, 4) -> f_385(v448, v449, v450, v451, v452, v453, 1, v506, v457, v458, v459, v462, v460, v463, v461, v464, v465, v466, 0, 3, 2, 4) :|: v506 + v453 = v452 && 1 <= v506
f_385(v448, v449, v450, v451, v452, v453, 1, v506, v457, v458, v459, v462, v460, v463, v461, v464, v465, v466, 0, 3, 2, 4) -> f_387(v448, v449, v450, v451, v452, v453, 1, v506, v457, v458, v459, v462, v460, v463, v461, v464, v465, v466, 0, 3, 2, 4) :|: TRUE
f_387(v448, v449, v450, v451, v452, v453, 1, v506, v457, v458, v459, v462, v460, v463, v461, v464, v465, v466, 0, 3, 2, 4) -> f_389(v448, v449, v450, v451, v452, v453, 1, v506, v457, v458, v459, v462, v460, v463, v461, v464, v465, v466, 0, 3, 2, 4) :|: TRUE
f_389(v448, v449, v450, v451, v452, v453, 1, v506, v457, v458, v459, v462, v460, v463, v461, v464, v465, v466, 0, 3, 2, 4) -> f_390(v448, v449, v450, v451, v452, v453, 1, v457, v458, v506, v459, v462, v460, v463, v461, v464, v465, v466, 0, 3, 2, 4) :|: v453 < v458 && 2 <= v448 && 2 <= v449 && 1 <= v450 && 1 <= v451 && 2 <= v452 && 1 <= v453 && 3 <= v457 && 2 <= v458 && 1 <= v506 && 1 <= v459 && 1 <= v460 && 1 <= v461 && 4 <= v462 && 4 <= v463 && 4 <= v464 && 4 <= v465 && 4 <= v466 && v459 <= v462 && v460 <= v463 && v461 <= v464 && v450 <= v465 && v451 <= v466
f_390(v532, v533, v534, v535, v536, v537, 1, v539, v540, v541, v542, v545, v543, v546, v544, v547, v548, v549, 0, 3, 2, 4) -> f_392(v532, v533, v534, v535, v536, v537, 1, v539, v540, v541, v542, v545, v543, v546, v544, v547, v548, v549, 0, 3, 2, 4) :|: TRUE
f_392(v532, v533, v534, v535, v536, v537, 1, v539, v540, v541, v542, v545, v543, v546, v544, v547, v548, v549, 0, 3, 2, 4) -> f_394(v532, v533, v534, v535, v541, v537, 1, v536, v539, v540, v542, v545, v543, v546, v544, v547, v548, v549, 0, 3, 2, 4) :|: 0 = 0
f_394(v532, v533, v534, v535, v541, v537, 1, v536, v539, v540, v542, v545, v543, v546, v544, v547, v548, v549, 0, 3, 2, 4) -> f_396(v532, v533, v534, v535, v541, v537, 1, v536, v539, v540, v542, v545, v543, v546, v544, v547, v548, v549, 0, 3, 2, 4) :|: 0 = 0
f_396(v532, v533, v534, v535, v541, v537, 1, v536, v539, v540, v542, v545, v543, v546, v544, v547, v548, v549, 0, 3, 2, 4) -> f_398(v532, v533, v534, v535, v541, v537, 1, v536, v539, v540, v542, v545, v543, v546, v544, v547, v548, v549, 0, 3, 2, 4) :|: v541 != v537
f_398(v532, v533, v534, v535, v541, v537, 1, v536, v539, v540, v542, v545, v543, v546, v544, v547, v548, v549, 0, 3, 2, 4) -> f_402(v532, v533, v534, v535, v541, v537, 1, v536, v539, v540, v542, v545, v543, v546, v544, v547, v548, v549, 0, 3, 2, 4) :|: 0 = 0
f_402(v532, v533, v534, v535, v541, v537, 1, v536, v539, v540, v542, v545, v543, v546, v544, v547, v548, v549, 0, 3, 2, 4) -> f_406(v532, v533, v534, v535, v541, v537, 1, v536, v539, v540, v542, v545, v543, v546, v544, v547, v548, v549, 0, 3, 2, 4) :|: TRUE
f_406(v532, v533, v534, v535, v541, v537, 1, v536, v539, v540, v542, v545, v543, v546, v544, v547, v548, v549, 0, 3, 2, 4) -> f_410(v532, v533, v534, v535, v541, v537, 1, v539, v540, v536, v542, v545, v543, v546, v544, v547, v548, v549, 0, 3, 2, 4) :|: 0 = 0
f_410(v532, v533, v534, v535, v541, v537, 1, v539, v540, v536, v542, v545, v543, v546, v544, v547, v548, v549, 0, 3, 2, 4) -> f_414(v532, v533, v534, v535, v541, v537, 1, v539, v540, v536, v542, v545, v543, v546, v544, v547, v548, v549, 0, 3, 2, 4) :|: 0 = 0
f_414(v532, v533, v534, v535, v541, v537, 1, v539, v540, v536, v542, v545, v543, v546, v544, v547, v548, v549, 0, 3, 2, 4) -> f_418(v532, v533, v534, v535, v541, v537, 1, v539, v540, v536, v542, v545, v543, v546, v544, v547, v548, v549, 0, 3, 2, 4) :|: v537 < v541 && 2 <= v541 && 3 <= v536
f_414(v532, v533, v534, v535, v541, v537, 1, v539, v540, v536, v542, v545, v543, v546, v544, v547, v548, v549, 0, 3, 2, 4) -> f_419(v532, v533, v534, v535, v541, v537, 1, v539, v540, v536, v542, v545, v543, v546, v544, v547, v548, v549, 0, 3, 2, 5, 4) :|: v541 <= v537 && 2 <= v537 && 5 <= v539 && 3 <= v536 && 3 <= v540
f_418(v532, v533, v534, v535, v541, v537, 1, v539, v540, v536, v542, v545, v543, v546, v544, v547, v548, v549, 0, 3, 2, 4) -> f_424(v532, v533, v534, v535, v541, v537, 1, v539, v540, v536, v542, v545, v543, v546, v544, v547, v548, v549, 0, 3, 2, 4) :|: 0 = 0
f_424(v532, v533, v534, v535, v541, v537, 1, v539, v540, v536, v542, v545, v543, v546, v544, v547, v548, v549, 0, 3, 2, 4) -> f_428(v532, v533, v534, v535, v541, v537, 1, v539, v540, v536, v542, v545, v543, v546, v544, v547, v548, v549, 0, 3, 2, 4) :|: TRUE
f_428(v532, v533, v534, v535, v541, v537, 1, v539, v540, v536, v542, v545, v543, v546, v544, v547, v548, v549, 0, 3, 2, 4) -> f_378(v532, v533, v534, v535, v541, v537, 1, v536, v537, v539, v540, v542, v545, v543, v546, v544, v547, v548, v549, 0, 3, 2, 4) :|: v537 < v541 && v537 < v540 && 2 <= v532 && 2 <= v533 && 1 <= v534 && 1 <= v535 && 2 <= v541 && 1 <= v537 && 3 <= v536 && 1 <= v537 && 3 <= v539 && 2 <= v540 && 1 <= v542 && 1 <= v543 && 1 <= v544 && 4 <= v545 && 4 <= v546 && 4 <= v547 && 4 <= v548 && 4 <= v549 && v542 <= v545 && v543 <= v546 && v544 <= v547 && v534 <= v548 && v535 <= v549
f_378(v448, v449, v450, v451, v452, v453, 1, v455, v456, v457, v458, v459, v462, v460, v463, v461, v464, v465, v466, 0, 3, 2, 4) -> f_381(v448, v449, v450, v451, v452, v453, 1, v456, v457, v458, v459, v462, v460, v463, v461, v464, v465, v466, 0, 3, 2, 4) :|: 0 = 0
f_419(v532, v533, v534, v535, v541, v537, 1, v539, v540, v536, v542, v545, v543, v546, v544, v547, v548, v549, 0, 3, 2, 5, 4) -> f_425(v532, v533, v534, v535, v541, v537, 1, 0, v539, v540, v536, v542, v545, v543, v546, v544, v547, v548, v549, 3, 2, 5, 4) :|: 0 = 0
f_425(v532, v533, v534, v535, v541, v537, 1, 0, v539, v540, v536, v542, v545, v543, v546, v544, v547, v548, v549, 3, 2, 5, 4) -> f_429(v532, v533, v534, v535, v541, v537, 1, 0, v539, v540, v536, v542, v545, v543, v546, v544, v547, v548, v549, 3, 2, 5, 4) :|: TRUE
f_429(v532, v533, v534, v535, v541, v537, 1, 0, v539, v540, v536, v542, v545, v543, v546, v544, v547, v548, v549, 3, 2, 5, 4) -> f_380(v532, v533, v534, v535, v541, v537, 1, 0, v536, v537, v539, v540, v542, v545, v543, v546, v544, v547, v548, v549, 3, 2, 4) :|: v541 < v537 && v541 < v537 && 2 <= v532 && 2 <= v533 && 1 <= v534 && 1 <= v535 && 1 <= v541 && 2 <= v537 && 3 <= v536 && 2 <= v537 && 3 <= v539 && 1 <= v540 && 1 <= v542 && 1 <= v543 && 1 <= v544 && 4 <= v545 && 4 <= v546 && 4 <= v547 && 4 <= v548 && 4 <= v549 && v542 <= v545 && v543 <= v546 && v544 <= v547 && v534 <= v548 && v535 <= v549
f_380(v486, v487, v488, v489, v490, v491, 1, 0, v494, v495, v496, v497, v498, v501, v499, v502, v500, v503, v504, v505, 3, 2, 4) -> f_382(v486, v487, v488, v489, v490, v491, 1, 0, v494, v495, v497, v498, v501, v499, v502, v500, v503, v504, v505, 3, 2, 4) :|: 0 = 0
f_382(v486, v487, v488, v489, v490, v491, 1, 0, v494, v495, v497, v498, v501, v499, v502, v500, v503, v504, v505, 3, 2, 4) -> f_384(v486, v487, v488, v489, v490, v491, 1, 0, v494, v495, v498, v501, v499, v502, v500, v503, v504, v505, 3, 2, 4) :|: 0 = 0
f_384(v486, v487, v488, v489, v490, v491, 1, 0, v494, v495, v498, v501, v499, v502, v500, v503, v504, v505, 3, 2, 4) -> f_386(v486, v487, v488, v489, v490, v491, 1, 0, v494, v495, v507, v498, v501, v499, v502, v500, v503, v504, v505, 3, 2, 4) :|: v507 + v490 = v491 && 1 <= v507
f_386(v486, v487, v488, v489, v490, v491, 1, 0, v494, v495, v507, v498, v501, v499, v502, v500, v503, v504, v505, 3, 2, 4) -> f_388(v486, v487, v488, v489, v490, v491, 1, 0, v494, v495, v507, v498, v501, v499, v502, v500, v503, v504, v505, 3, 2, 4) :|: TRUE
f_388(v486, v487, v488, v489, v490, v491, 1, 0, v494, v495, v507, v498, v501, v499, v502, v500, v503, v504, v505, 3, 2, 4) -> f_391(v486, v487, v488, v489, v490, v491, 1, 0, v494, v495, v507, v498, v501, v499, v502, v500, v503, v504, v505, 3, 2, 4) :|: TRUE
f_391(v486, v487, v488, v489, v490, v491, 1, 0, v494, v495, v507, v498, v501, v499, v502, v500, v503, v504, v505, 3, 2, 4) -> f_393(v486, v487, v488, v489, v490, v491, 1, 0, v494, v495, v507, v498, v501, v499, v502, v500, v503, v504, v505, 3, 2, 4) :|: TRUE
f_393(v486, v487, v488, v489, v490, v491, 1, 0, v494, v495, v507, v498, v501, v499, v502, v500, v503, v504, v505, 3, 2, 4) -> f_395(v486, v487, v488, v489, v490, v491, 1, 0, v494, v495, v507, v498, v501, v499, v502, v500, v503, v504, v505, 3, 2, 4) :|: 0 = 0
f_395(v486, v487, v488, v489, v490, v491, 1, 0, v494, v495, v507, v498, v501, v499, v502, v500, v503, v504, v505, 3, 2, 4) -> f_397(v486, v487, v488, v489, v490, v507, 1, v491, 0, v494, v495, v498, v501, v499, v502, v500, v503, v504, v505, 3, 2, 4) :|: 0 = 0
f_397(v486, v487, v488, v489, v490, v507, 1, v491, 0, v494, v495, v498, v501, v499, v502, v500, v503, v504, v505, 3, 2, 4) -> f_400(v486, v487, v488, v489, v490, v507, 1, v491, 0, v494, v495, v498, v501, v499, v502, v500, v503, v504, v505, 3, 2, 4) :|: v490 != v507
f_400(v486, v487, v488, v489, v490, v507, 1, v491, 0, v494, v495, v498, v501, v499, v502, v500, v503, v504, v505, 3, 2, 4) -> f_404(v486, v487, v488, v489, v490, v507, 1, v491, 0, v494, v495, v498, v501, v499, v502, v500, v503, v504, v505, 3, 2, 4) :|: 0 = 0
f_404(v486, v487, v488, v489, v490, v507, 1, v491, 0, v494, v495, v498, v501, v499, v502, v500, v503, v504, v505, 3, 2, 4) -> f_408(v486, v487, v488, v489, v490, v507, 1, v491, 0, v494, v495, v498, v501, v499, v502, v500, v503, v504, v505, 3, 2, 4) :|: TRUE
f_408(v486, v487, v488, v489, v490, v507, 1, v491, 0, v494, v495, v498, v501, v499, v502, v500, v503, v504, v505, 3, 2, 4) -> f_412(v486, v487, v488, v489, v490, v507, 1, v491, 0, v494, v495, v498, v501, v499, v502, v500, v503, v504, v505, 3, 2, 4) :|: 0 = 0
f_412(v486, v487, v488, v489, v490, v507, 1, v491, 0, v494, v495, v498, v501, v499, v502, v500, v503, v504, v505, 3, 2, 4) -> f_416(v486, v487, v488, v489, v490, v507, 1, 0, v494, v495, v491, v498, v501, v499, v502, v500, v503, v504, v505, 3, 2, 4) :|: 0 = 0
f_416(v486, v487, v488, v489, v490, v507, 1, 0, v494, v495, v491, v498, v501, v499, v502, v500, v503, v504, v505, 3, 2, 4) -> f_421(v486, v487, v488, v489, v490, v507, 1, 0, v494, v495, v491, v498, v501, v499, v502, v500, v503, v504, v505, 3, 2, 5, 4) :|: v507 < v490 && 2 <= v490 && 5 <= v494 && 3 <= v491 && 3 <= v495
f_416(v486, v487, v488, v489, v490, v507, 1, 0, v494, v495, v491, v498, v501, v499, v502, v500, v503, v504, v505, 3, 2, 4) -> f_422(v486, v487, v488, v489, v490, v507, 1, 0, v494, v495, v491, v498, v501, v499, v502, v500, v503, v504, v505, 3, 2, 4) :|: v490 <= v507 && 2 <= v507 && 3 <= v491
f_421(v486, v487, v488, v489, v490, v507, 1, 0, v494, v495, v491, v498, v501, v499, v502, v500, v503, v504, v505, 3, 2, 5, 4) -> f_426(v486, v487, v488, v489, v490, v507, 1, v494, v495, v491, v498, v501, v499, v502, v500, v503, v504, v505, 0, 3, 2, 5, 4) :|: 0 = 0
f_426(v486, v487, v488, v489, v490, v507, 1, v494, v495, v491, v498, v501, v499, v502, v500, v503, v504, v505, 0, 3, 2, 5, 4) -> f_430(v486, v487, v488, v489, v490, v507, 1, v494, v495, v491, v498, v501, v499, v502, v500, v503, v504, v505, 0, 3, 2, 5, 4) :|: TRUE
f_430(v486, v487, v488, v489, v490, v507, 1, v494, v495, v491, v498, v501, v499, v502, v500, v503, v504, v505, 0, 3, 2, 5, 4) -> f_378(v486, v487, v488, v489, v490, v507, 1, v494, v495, v491, v490, v498, v501, v499, v502, v500, v503, v504, v505, 0, 3, 2, 4) :|: v507 < v490 && v507 < v490 && 2 <= v486 && 2 <= v487 && 1 <= v488 && 1 <= v489 && 2 <= v490 && 1 <= v507 && 3 <= v494 && 1 <= v495 && 3 <= v491 && 2 <= v490 && 1 <= v498 && 1 <= v499 && 1 <= v500 && 4 <= v501 && 4 <= v502 && 4 <= v503 && 4 <= v504 && 4 <= v505 && v498 <= v501 && v499 <= v502 && v500 <= v503 && v488 <= v504 && v489 <= v505
f_422(v486, v487, v488, v489, v490, v507, 1, 0, v494, v495, v491, v498, v501, v499, v502, v500, v503, v504, v505, 3, 2, 4) -> f_427(v486, v487, v488, v489, v490, v507, 1, 0, v494, v495, v491, v498, v501, v499, v502, v500, v503, v504, v505, 3, 2, 4) :|: 0 = 0
f_427(v486, v487, v488, v489, v490, v507, 1, 0, v494, v495, v491, v498, v501, v499, v502, v500, v503, v504, v505, 3, 2, 4) -> f_431(v486, v487, v488, v489, v490, v507, 1, 0, v494, v495, v491, v498, v501, v499, v502, v500, v503, v504, v505, 3, 2, 4) :|: TRUE
f_431(v486, v487, v488, v489, v490, v507, 1, 0, v494, v495, v491, v498, v501, v499, v502, v500, v503, v504, v505, 3, 2, 4) -> f_380(v486, v487, v488, v489, v490, v507, 1, 0, v494, v495, v491, v490, v498, v501, v499, v502, v500, v503, v504, v505, 3, 2, 4) :|: v490 < v507 && v490 < v495 && 2 <= v486 && 2 <= v487 && 1 <= v488 && 1 <= v489 && 1 <= v490 && 2 <= v507 && 3 <= v494 && 2 <= v495 && 3 <= v491 && 1 <= v490 && 1 <= v498 && 1 <= v499 && 1 <= v500 && 4 <= v501 && 4 <= v502 && 4 <= v503 && 4 <= v504 && 4 <= v505 && v498 <= v501 && v499 <= v502 && v500 <= v503 && v488 <= v504 && v489 <= v505
Combined rules. Obtained 6 rulesP rules:
f_381(v448:0, v449:0, v450:0, v451:0, v506:0 + (v507:0 + v506:0), v507:0 + v506:0, 1, v456:0, v457:0, v458:0, v459:0, v462:0, v460:0, v463:0, v461:0, v464:0, v465:0, v466:0, 0, 3, 2, 4) -> f_416(v448:0, v449:0, v450:0, v451:0, v506:0, v507:0, 1, 0, v506:0 + (v507:0 + v506:0), v507:0 + v506:0, v507:0 + v506:0, v459:0, v462:0, v460:0, v463:0, v461:0, v464:0, v465:0, v466:0, 3, 2, 4) :|: v458:0 > 2 && v507:0 + v506:0 > 1 && v506:0 + (v507:0 + v506:0) > 2 && v507:0 + v506:0 > v506:0 && v457:0 > 4 && v448:0 > 1 && v507:0 + v506:0 < v458:0 && v449:0 > 1 && v450:0 > 0 && v451:0 > 0 && v506:0 > 0 && v459:0 > 0 && v460:0 > 0 && v461:0 > 0 && v462:0 > 3 && v463:0 > 3 && v464:0 > 3 && v465:0 > 3 && v466:0 > 3 && v462:0 >= v459:0 && v463:0 >= v460:0 && v464:0 >= v461:0 && v465:0 >= v450:0 && v466:0 >= v451:0 && v507:0 > v506:0 && v507:0 > 0
f_381(v448:0, v449:0, v450:0, v451:0, v506:0 + (v507:0 + v506:0), v507:0 + v506:0, 1, v456:0, v457:0, v458:0, v459:0, v462:0, v460:0, v463:0, v461:0, v464:0, v465:0, v466:0, 0, 3, 2, 4) -> f_416(v448:0, v449:0, v450:0, v451:0, v506:0, v507:0, 1, 0, v506:0 + (v507:0 + v506:0), v507:0 + v506:0, v507:0 + v506:0, v459:0, v462:0, v460:0, v463:0, v461:0, v464:0, v465:0, v466:0, 3, 2, 4) :|: v458:0 > 2 && v507:0 + v506:0 > 1 && v506:0 + (v507:0 + v506:0) > 2 && v507:0 + v506:0 > v506:0 && v457:0 > 4 && v448:0 > 1 && v507:0 + v506:0 < v458:0 && v449:0 > 1 && v450:0 > 0 && v451:0 > 0 && v506:0 > 0 && v459:0 > 0 && v460:0 > 0 && v461:0 > 0 && v462:0 > 3 && v463:0 > 3 && v464:0 > 3 && v465:0 > 3 && v466:0 > 3 && v462:0 >= v459:0 && v463:0 >= v460:0 && v464:0 >= v461:0 && v465:0 >= v450:0 && v466:0 >= v451:0 && v507:0 < v506:0 && v507:0 > 0
f_416(v486:0, v487:0, v488:0, v489:0, v490:0, v507:1 + v490:0, 1, 0, v494:0, v495:0, v491:0, v498:0, v501:0, v499:0, v502:0, v500:0, v503:0, v504:0, v505:0, 3, 2, 4) -> f_416(v486:0, v487:0, v488:0, v489:0, v490:0, v507:1, 1, 0, v494:0, v495:0, v507:1 + v490:0, v498:0, v501:0, v499:0, v502:0, v500:0, v503:0, v504:0, v505:0, 3, 2, 4) :|: v507:1 + v490:0 > v490:0 && v495:0 > v490:0 && v486:0 > 1 && v487:0 > 1 && v488:0 > 0 && v489:0 > 0 && v490:0 > 0 && v507:1 + v490:0 > 1 && v494:0 > 2 && v495:0 > 1 && v491:0 > 2 && v498:0 > 0 && v499:0 > 0 && v500:0 > 0 && v501:0 > 3 && v502:0 > 3 && v503:0 > 3 && v504:0 > 3 && v505:0 > 3 && v501:0 >= v498:0 && v502:0 >= v499:0 && v503:0 >= v500:0 && v504:0 >= v488:0 && v505:0 >= v489:0 && v507:1 > 0 && v507:1 > v490:0
f_416(v486:0, v487:0, v488:0, v489:0, v490:0, v507:1 + v490:0, 1, 0, v494:0, v495:0, v491:0, v498:0, v501:0, v499:0, v502:0, v500:0, v503:0, v504:0, v505:0, 3, 2, 4) -> f_416(v486:0, v487:0, v488:0, v489:0, v490:0, v507:1, 1, 0, v494:0, v495:0, v507:1 + v490:0, v498:0, v501:0, v499:0, v502:0, v500:0, v503:0, v504:0, v505:0, 3, 2, 4) :|: v507:1 + v490:0 > v490:0 && v495:0 > v490:0 && v486:0 > 1 && v487:0 > 1 && v488:0 > 0 && v489:0 > 0 && v490:0 > 0 && v507:1 + v490:0 > 1 && v494:0 > 2 && v495:0 > 1 && v491:0 > 2 && v498:0 > 0 && v499:0 > 0 && v500:0 > 0 && v501:0 > 3 && v502:0 > 3 && v503:0 > 3 && v504:0 > 3 && v505:0 > 3 && v501:0 >= v498:0 && v502:0 >= v499:0 && v503:0 >= v500:0 && v504:0 >= v488:0 && v505:0 >= v489:0 && v507:1 > 0 && v507:1 < v490:0
f_416(v486:0, v487:0, v488:0, v489:0, v490:0, v507:0, 1, 0, v494:0, v495:0, v491:0, v498:0, v501:0, v499:0, v502:0, v500:0, v503:0, v504:0, v505:0, 3, 2, 4) -> f_381(v486:0, v487:0, v488:0, v489:0, v490:0, v507:0, 1, v495:0, v491:0, v490:0, v498:0, v501:0, v499:0, v502:0, v500:0, v503:0, v504:0, v505:0, 0, 3, 2, 4) :|: v494:0 > 4 && v495:0 > 2 && v507:0 < v490:0 && v486:0 > 1 && v487:0 > 1 && v488:0 > 0 && v489:0 > 0 && v490:0 > 1 && v507:0 > 0 && v491:0 > 2 && v498:0 > 0 && v499:0 > 0 && v500:0 > 0 && v501:0 > 3 && v502:0 > 3 && v503:0 > 3 && v504:0 > 3 && v505:0 > 3 && v501:0 >= v498:0 && v502:0 >= v499:0 && v503:0 >= v500:0 && v505:0 >= v489:0 && v504:0 >= v488:0
f_381(v448:0, v449:0, v450:0, v451:0, v506:0 + v453:0, v453:0, 1, v456:0, v457:0, v458:0, v459:0, v462:0, v460:0, v463:0, v461:0, v464:0, v465:0, v466:0, 0, 3, 2, 4) -> f_381(v448:0, v449:0, v450:0, v451:0, v506:0, v453:0, 1, v453:0, v457:0, v458:0, v459:0, v462:0, v460:0, v463:0, v461:0, v464:0, v465:0, v466:0, 0, 3, 2, 4) :|: v506:0 > 1 && v506:0 + v453:0 > 2 && v448:0 > 1 && v458:0 > v453:0 && v449:0 > 1 && v450:0 > 0 && v451:0 > 0 && v453:0 > 0 && v457:0 > 2 && v458:0 > 1 && v459:0 > 0 && v506:0 > v453:0 && v460:0 > 0 && v461:0 > 0 && v462:0 > 3 && v463:0 > 3 && v464:0 > 3 && v465:0 > 3 && v466:0 > 3 && v462:0 >= v459:0 && v463:0 >= v460:0 && v464:0 >= v461:0 && v465:0 >= v450:0 && v466:0 >= v451:0
Filtered unneeded arguments:
   f_381(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22) -> f_381(x1, x2, x3, x4, x5, x6, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18)
   f_416(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22) -> f_416(x1, x2, x3, x4, x5, x6, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19)
Removed division, modulo operations, cleaned up constraints. Obtained 6 rules.P rules:
f_381(v448:0, v449:0, v450:0, v451:0, sum~v506:0~sum~v507:0~v506:0, sum~v507:0~v506:0, v457:0, v458:0, v459:0, v462:0, v460:0, v463:0, v461:0, v464:0, v465:0, v466:0) -> f_416(v448:0, v449:0, v450:0, v451:0, v506:0, v507:0, v506:0 + (v507:0 + v506:0), v507:0 + v506:0, v507:0 + v506:0, v459:0, v462:0, v460:0, v463:0, v461:0, v464:0, v465:0, v466:0) :|: v507:0 + v506:0 > 1 && v458:0 > 2 && v506:0 + (v507:0 + v506:0) > 2 && v507:0 + v506:0 > v506:0 && v457:0 > 4 && v448:0 > 1 && v507:0 + v506:0 < v458:0 && v449:0 > 1 && v450:0 > 0 && v451:0 > 0 && v506:0 > 0 && v459:0 > 0 && v460:0 > 0 && v461:0 > 0 && v462:0 > 3 && v463:0 > 3 && v464:0 > 3 && v465:0 > 3 && v466:0 > 3 && v462:0 >= v459:0 && v463:0 >= v460:0 && v464:0 >= v461:0 && v465:0 >= v450:0 && v466:0 >= v451:0 && v507:0 > 0 && v507:0 > v506:0 && sum~v506:0~sum~v507:0~v506:0 = v506:0 + (v507:0 + v506:0) && sum~v507:0~v506:0 = v507:0 + v506:0
f_381(v448:0, v449:0, v450:0, v451:0, sum~v506:0~sum~v507:0~v506:0, sum~v507:0~v506:0, v457:0, v458:0, v459:0, v462:0, v460:0, v463:0, v461:0, v464:0, v465:0, v466:0) -> f_416(v448:0, v449:0, v450:0, v451:0, v506:0, v507:0, v506:0 + (v507:0 + v506:0), v507:0 + v506:0, v507:0 + v506:0, v459:0, v462:0, v460:0, v463:0, v461:0, v464:0, v465:0, v466:0) :|: v507:0 + v506:0 > 1 && v458:0 > 2 && v506:0 + (v507:0 + v506:0) > 2 && v507:0 + v506:0 > v506:0 && v457:0 > 4 && v448:0 > 1 && v507:0 + v506:0 < v458:0 && v449:0 > 1 && v450:0 > 0 && v451:0 > 0 && v506:0 > 0 && v459:0 > 0 && v460:0 > 0 && v461:0 > 0 && v462:0 > 3 && v463:0 > 3 && v464:0 > 3 && v465:0 > 3 && v466:0 > 3 && v462:0 >= v459:0 && v463:0 >= v460:0 && v464:0 >= v461:0 && v465:0 >= v450:0 && v466:0 >= v451:0 && v507:0 > 0 && v507:0 < v506:0 && sum~v506:0~sum~v507:0~v506:0 = v506:0 + (v507:0 + v506:0) && sum~v507:0~v506:0 = v507:0 + v506:0
f_416(v486:0, v487:0, v488:0, v489:0, v490:0, sum~v507:1~v490:0, v494:0, v495:0, v491:0, v498:0, v501:0, v499:0, v502:0, v500:0, v503:0, v504:0, v505:0) -> f_416(v486:0, v487:0, v488:0, v489:0, v490:0, v507:1, v494:0, v495:0, v507:1 + v490:0, v498:0, v501:0, v499:0, v502:0, v500:0, v503:0, v504:0, v505:0) :|: v495:0 > v490:0 && v507:1 + v490:0 > v490:0 && v486:0 > 1 && v487:0 > 1 && v488:0 > 0 && v489:0 > 0 && v490:0 > 0 && v507:1 + v490:0 > 1 && v494:0 > 2 && v495:0 > 1 && v491:0 > 2 && v498:0 > 0 && v499:0 > 0 && v500:0 > 0 && v501:0 > 3 && v502:0 > 3 && v503:0 > 3 && v504:0 > 3 && v505:0 > 3 && v501:0 >= v498:0 && v502:0 >= v499:0 && v503:0 >= v500:0 && v504:0 >= v488:0 && v505:0 >= v489:0 && v507:1 > v490:0 && v507:1 > 0 && sum~v507:1~v490:0 = v507:1 + v490:0
f_416(v486:0, v487:0, v488:0, v489:0, v490:0, sum~v507:1~v490:0, v494:0, v495:0, v491:0, v498:0, v501:0, v499:0, v502:0, v500:0, v503:0, v504:0, v505:0) -> f_416(v486:0, v487:0, v488:0, v489:0, v490:0, v507:1, v494:0, v495:0, v507:1 + v490:0, v498:0, v501:0, v499:0, v502:0, v500:0, v503:0, v504:0, v505:0) :|: v495:0 > v490:0 && v507:1 + v490:0 > v490:0 && v486:0 > 1 && v487:0 > 1 && v488:0 > 0 && v489:0 > 0 && v490:0 > 0 && v507:1 + v490:0 > 1 && v494:0 > 2 && v495:0 > 1 && v491:0 > 2 && v498:0 > 0 && v499:0 > 0 && v500:0 > 0 && v501:0 > 3 && v502:0 > 3 && v503:0 > 3 && v504:0 > 3 && v505:0 > 3 && v501:0 >= v498:0 && v502:0 >= v499:0 && v503:0 >= v500:0 && v504:0 >= v488:0 && v505:0 >= v489:0 && v507:1 < v490:0 && v507:1 > 0 && sum~v507:1~v490:0 = v507:1 + v490:0
f_416(v486:0, v487:0, v488:0, v489:0, v490:0, v507:0, v494:0, v495:0, v491:0, v498:0, v501:0, v499:0, v502:0, v500:0, v503:0, v504:0, v505:0) -> f_381(v486:0, v487:0, v488:0, v489:0, v490:0, v507:0, v491:0, v490:0, v498:0, v501:0, v499:0, v502:0, v500:0, v503:0, v504:0, v505:0) :|: v495:0 > 2 && v494:0 > 4 && v507:0 < v490:0 && v486:0 > 1 && v487:0 > 1 && v488:0 > 0 && v489:0 > 0 && v490:0 > 1 && v507:0 > 0 && v491:0 > 2 && v498:0 > 0 && v499:0 > 0 && v500:0 > 0 && v501:0 > 3 && v502:0 > 3 && v503:0 > 3 && v504:0 > 3 && v505:0 > 3 && v501:0 >= v498:0 && v502:0 >= v499:0 && v503:0 >= v500:0 && v504:0 >= v488:0 && v505:0 >= v489:0
f_381(v448:0, v449:0, v450:0, v451:0, sum~v506:0~v453:0, v453:0, v457:0, v458:0, v459:0, v462:0, v460:0, v463:0, v461:0, v464:0, v465:0, v466:0) -> f_381(v448:0, v449:0, v450:0, v451:0, v506:0, v453:0, v457:0, v458:0, v459:0, v462:0, v460:0, v463:0, v461:0, v464:0, v465:0, v466:0) :|: v506:0 + v453:0 > 2 && v506:0 > 1 && v448:0 > 1 && v458:0 > v453:0 && v449:0 > 1 && v450:0 > 0 && v451:0 > 0 && v453:0 > 0 && v457:0 > 2 && v458:0 > 1 && v459:0 > 0 && v506:0 > v453:0 && v460:0 > 0 && v461:0 > 0 && v462:0 > 3 && v463:0 > 3 && v464:0 > 3 && v465:0 > 3 && v466:0 > 3 && v462:0 >= v459:0 && v463:0 >= v460:0 && v464:0 >= v461:0 && v466:0 >= v451:0 && v465:0 >= v450:0 && sum~v506:0~v453:0 = v506:0 + v453:0

----------------------------------------

(9)
Obligation:
Rules:
f_381(v448:0, v449:0, v450:0, v451:0, sum~v506:0~sum~v507:0~v506:0, sum~v507:0~v506:0, v457:0, v458:0, v459:0, v462:0, v460:0, v463:0, v461:0, v464:0, v465:0, v466:0) -> f_416(v448:0, v449:0, v450:0, v451:0, v506:0, v507:0, v506:0 + (v507:0 + v506:0), v507:0 + v506:0, v507:0 + v506:0, v459:0, v462:0, v460:0, v463:0, v461:0, v464:0, v465:0, v466:0) :|: v507:0 + v506:0 > 1 && v458:0 > 2 && v506:0 + (v507:0 + v506:0) > 2 && v507:0 + v506:0 > v506:0 && v457:0 > 4 && v448:0 > 1 && v507:0 + v506:0 < v458:0 && v449:0 > 1 && v450:0 > 0 && v451:0 > 0 && v506:0 > 0 && v459:0 > 0 && v460:0 > 0 && v461:0 > 0 && v462:0 > 3 && v463:0 > 3 && v464:0 > 3 && v465:0 > 3 && v466:0 > 3 && v462:0 >= v459:0 && v463:0 >= v460:0 && v464:0 >= v461:0 && v465:0 >= v450:0 && v466:0 >= v451:0 && v507:0 > 0 && v507:0 > v506:0 && sum~v506:0~sum~v507:0~v506:0 = v506:0 + (v507:0 + v506:0) && sum~v507:0~v506:0 = v507:0 + v506:0
f_381(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15) -> f_416(x, x1, x2, x3, x16, x17, x16 + (x17 + x16), x17 + x16, x17 + x16, x8, x9, x10, x11, x12, x13, x14, x15) :|: x17 + x16 > 1 && x7 > 2 && x16 + (x17 + x16) > 2 && x17 + x16 > x16 && x6 > 4 && x > 1 && x17 + x16 < x7 && x1 > 1 && x2 > 0 && x3 > 0 && x16 > 0 && x8 > 0 && x10 > 0 && x12 > 0 && x9 > 3 && x11 > 3 && x13 > 3 && x14 > 3 && x15 > 3 && x9 >= x8 && x11 >= x10 && x13 >= x12 && x14 >= x2 && x15 >= x3 && x17 > 0 && x17 < x16 && x4 = x16 + (x17 + x16) && x5 = x17 + x16
f_416(v486:0, v487:0, v488:0, v489:0, v490:0, sum~v507:1~v490:0, v494:0, v495:0, v491:0, v498:0, v501:0, v499:0, v502:0, v500:0, v503:0, v504:0, v505:0) -> f_416(v486:0, v487:0, v488:0, v489:0, v490:0, v507:1, v494:0, v495:0, v507:1 + v490:0, v498:0, v501:0, v499:0, v502:0, v500:0, v503:0, v504:0, v505:0) :|: v495:0 > v490:0 && v507:1 + v490:0 > v490:0 && v486:0 > 1 && v487:0 > 1 && v488:0 > 0 && v489:0 > 0 && v490:0 > 0 && v507:1 + v490:0 > 1 && v494:0 > 2 && v495:0 > 1 && v491:0 > 2 && v498:0 > 0 && v499:0 > 0 && v500:0 > 0 && v501:0 > 3 && v502:0 > 3 && v503:0 > 3 && v504:0 > 3 && v505:0 > 3 && v501:0 >= v498:0 && v502:0 >= v499:0 && v503:0 >= v500:0 && v504:0 >= v488:0 && v505:0 >= v489:0 && v507:1 > v490:0 && v507:1 > 0 && sum~v507:1~v490:0 = v507:1 + v490:0
f_416(x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34) -> f_416(x18, x19, x20, x21, x22, x35, x24, x25, x35 + x22, x27, x28, x29, x30, x31, x32, x33, x34) :|: x25 > x22 && x35 + x22 > x22 && x18 > 1 && x19 > 1 && x20 > 0 && x21 > 0 && x22 > 0 && x35 + x22 > 1 && x24 > 2 && x25 > 1 && x26 > 2 && x27 > 0 && x29 > 0 && x31 > 0 && x28 > 3 && x30 > 3 && x32 > 3 && x33 > 3 && x34 > 3 && x28 >= x27 && x30 >= x29 && x32 >= x31 && x33 >= x20 && x34 >= x21 && x35 < x22 && x35 > 0 && x23 = x35 + x22
f_416(x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49, x50, x51, x52) -> f_381(x36, x37, x38, x39, x40, x41, x44, x40, x45, x46, x47, x48, x49, x50, x51, x52) :|: x43 > 2 && x42 > 4 && x41 < x40 && x36 > 1 && x37 > 1 && x38 > 0 && x39 > 0 && x40 > 1 && x41 > 0 && x44 > 2 && x45 > 0 && x47 > 0 && x49 > 0 && x46 > 3 && x48 > 3 && x50 > 3 && x51 > 3 && x52 > 3 && x46 >= x45 && x48 >= x47 && x50 >= x49 && x51 >= x38 && x52 >= x39
f_381(x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65, x66, x67, x68) -> f_381(x53, x54, x55, x56, x69, x58, x59, x60, x61, x62, x63, x64, x65, x66, x67, x68) :|: x69 + x58 > 2 && x69 > 1 && x53 > 1 && x60 > x58 && x54 > 1 && x55 > 0 && x56 > 0 && x58 > 0 && x59 > 2 && x60 > 1 && x61 > 0 && x69 > x58 && x63 > 0 && x65 > 0 && x62 > 3 && x64 > 3 && x66 > 3 && x67 > 3 && x68 > 3 && x62 >= x61 && x64 >= x63 && x66 >= x65 && x68 >= x56 && x67 >= x55 && x57 = x69 + x58

----------------------------------------

(10) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(11)
Obligation:
Rules:
f_381(v448:0:0, v449:0:0, v450:0:0, v451:0:0, sum~v506:0:0~sum~v507:0:0~v506:0:0, sum~v507:0:0~v506:0:0, v457:0:0, v458:0:0, v459:0:0, v462:0:0, v460:0:0, v463:0:0, v461:0:0, v464:0:0, v465:0:0, v466:0:0) -> f_416(v448:0:0, v449:0:0, v450:0:0, v451:0:0, v506:0:0, v507:0:0, v506:0:0 + (v507:0:0 + v506:0:0), v507:0:0 + v506:0:0, v507:0:0 + v506:0:0, v459:0:0, v462:0:0, v460:0:0, v463:0:0, v461:0:0, v464:0:0, v465:0:0, v466:0:0) :|: v507:0:0 > 0 && v507:0:0 > v506:0:0 && v466:0:0 >= v451:0:0 && v465:0:0 >= v450:0:0 && v464:0:0 >= v461:0:0 && v463:0:0 >= v460:0:0 && v462:0:0 >= v459:0:0 && v466:0:0 > 3 && v465:0:0 > 3 && v464:0:0 > 3 && v463:0:0 > 3 && v462:0:0 > 3 && v461:0:0 > 0 && v460:0:0 > 0 && v459:0:0 > 0 && v506:0:0 > 0 && v451:0:0 > 0 && v450:0:0 > 0 && v449:0:0 > 1 && v507:0:0 + v506:0:0 < v458:0:0 && v448:0:0 > 1 && v457:0:0 > 4 && v507:0:0 + v506:0:0 > v506:0:0 && v506:0:0 + (v507:0:0 + v506:0:0) > 2 && v458:0:0 > 2 && v507:0:0 + v506:0:0 > 1 && sum~v506:0:0~sum~v507:0:0~v506:0:0 = v506:0:0 + (v507:0:0 + v506:0:0) && sum~v507:0:0~v506:0:0 = v507:0:0 + v506:0:0
f_381(x53:0, x54:0, x55:0, x56:0, sum~x69:0~x58:0, x58:0, x59:0, x60:0, x61:0, x62:0, x63:0, x64:0, x65:0, x66:0, x67:0, x68:0) -> f_381(x53:0, x54:0, x55:0, x56:0, x69:0, x58:0, x59:0, x60:0, x61:0, x62:0, x63:0, x64:0, x65:0, x66:0, x67:0, x68:0) :|: x68:0 >= x56:0 && x67:0 >= x55:0 && x66:0 >= x65:0 && x64:0 >= x63:0 && x62:0 >= x61:0 && x68:0 > 3 && x67:0 > 3 && x66:0 > 3 && x64:0 > 3 && x62:0 > 3 && x65:0 > 0 && x63:0 > 0 && x69:0 > x58:0 && x61:0 > 0 && x60:0 > 1 && x59:0 > 2 && x58:0 > 0 && x56:0 > 0 && x55:0 > 0 && x54:0 > 1 && x60:0 > x58:0 && x53:0 > 1 && x69:0 > 1 && x69:0 + x58:0 > 2 && sum~x69:0~x58:0 = x69:0 + x58:0
f_416(v486:0:0, v487:0:0, v488:0:0, v489:0:0, v490:0:0, sum~v507:1:0~v490:0:0, v494:0:0, v495:0:0, v491:0:0, v498:0:0, v501:0:0, v499:0:0, v502:0:0, v500:0:0, v503:0:0, v504:0:0, v505:0:0) -> f_416(v486:0:0, v487:0:0, v488:0:0, v489:0:0, v490:0:0, v507:1:0, v494:0:0, v495:0:0, v507:1:0 + v490:0:0, v498:0:0, v501:0:0, v499:0:0, v502:0:0, v500:0:0, v503:0:0, v504:0:0, v505:0:0) :|: v507:1:0 > v490:0:0 && v507:1:0 > 0 && v505:0:0 >= v489:0:0 && v504:0:0 >= v488:0:0 && v503:0:0 >= v500:0:0 && v502:0:0 >= v499:0:0 && v501:0:0 >= v498:0:0 && v505:0:0 > 3 && v504:0:0 > 3 && v503:0:0 > 3 && v502:0:0 > 3 && v501:0:0 > 3 && v500:0:0 > 0 && v499:0:0 > 0 && v498:0:0 > 0 && v491:0:0 > 2 && v495:0:0 > 1 && v494:0:0 > 2 && v507:1:0 + v490:0:0 > 1 && v490:0:0 > 0 && v489:0:0 > 0 && v488:0:0 > 0 && v487:0:0 > 1 && v486:0:0 > 1 && v507:1:0 + v490:0:0 > v490:0:0 && v495:0:0 > v490:0:0 && sum~v507:1:0~v490:0:0 = v507:1:0 + v490:0:0
f_416(x36:0, x37:0, x38:0, x39:0, x40:0, x41:0, x42:0, x43:0, x44:0, x45:0, x46:0, x47:0, x48:0, x49:0, x50:0, x51:0, x52:0) -> f_381(x36:0, x37:0, x38:0, x39:0, x40:0, x41:0, x44:0, x40:0, x45:0, x46:0, x47:0, x48:0, x49:0, x50:0, x51:0, x52:0) :|: x51:0 >= x38:0 && x52:0 >= x39:0 && x50:0 >= x49:0 && x48:0 >= x47:0 && x46:0 >= x45:0 && x52:0 > 3 && x51:0 > 3 && x50:0 > 3 && x48:0 > 3 && x46:0 > 3 && x49:0 > 0 && x47:0 > 0 && x45:0 > 0 && x44:0 > 2 && x41:0 > 0 && x40:0 > 1 && x39:0 > 0 && x38:0 > 0 && x37:0 > 1 && x36:0 > 1 && x41:0 < x40:0 && x42:0 > 4 && x43:0 > 2
f_416(x18:0, x19:0, x20:0, x21:0, x22:0, sum~x35:0~x22:0, x24:0, x25:0, x26:0, x27:0, x28:0, x29:0, x30:0, x31:0, x32:0, x33:0, x34:0) -> f_416(x18:0, x19:0, x20:0, x21:0, x22:0, x35:0, x24:0, x25:0, x35:0 + x22:0, x27:0, x28:0, x29:0, x30:0, x31:0, x32:0, x33:0, x34:0) :|: x35:0 < x22:0 && x35:0 > 0 && x34:0 >= x21:0 && x33:0 >= x20:0 && x32:0 >= x31:0 && x30:0 >= x29:0 && x28:0 >= x27:0 && x34:0 > 3 && x33:0 > 3 && x32:0 > 3 && x30:0 > 3 && x28:0 > 3 && x31:0 > 0 && x29:0 > 0 && x27:0 > 0 && x26:0 > 2 && x25:0 > 1 && x24:0 > 2 && x35:0 + x22:0 > 1 && x22:0 > 0 && x21:0 > 0 && x20:0 > 0 && x19:0 > 1 && x18:0 > 1 && x35:0 + x22:0 > x22:0 && x25:0 > x22:0 && sum~x35:0~x22:0 = x35:0 + x22:0
f_381(x:0, x1:0, x2:0, x3:0, sum~x16:0~sum~x17:0~x16:0, sum~x17:0~x16:0, x6:0, x7:0, x8:0, x9:0, x10:0, x11:0, x12:0, x13:0, x14:0, x15:0) -> f_416(x:0, x1:0, x2:0, x3:0, x16:0, x17:0, x16:0 + (x17:0 + x16:0), x17:0 + x16:0, x17:0 + x16:0, x8:0, x9:0, x10:0, x11:0, x12:0, x13:0, x14:0, x15:0) :|: x17:0 > 0 && x17:0 < x16:0 && x3:0 <= x15:0 && x2:0 <= x14:0 && x13:0 >= x12:0 && x11:0 >= x10:0 && x9:0 >= x8:0 && x15:0 > 3 && x14:0 > 3 && x13:0 > 3 && x11:0 > 3 && x9:0 > 3 && x12:0 > 0 && x10:0 > 0 && x8:0 > 0 && x16:0 > 0 && x3:0 > 0 && x2:0 > 0 && x1:0 > 1 && x7:0 > x17:0 + x16:0 && x:0 > 1 && x6:0 > 4 && x17:0 + x16:0 > x16:0 && x16:0 + (x17:0 + x16:0) > 2 && x7:0 > 2 && x17:0 + x16:0 > 1 && sum~x16:0~sum~x17:0~x16:0 = x16:0 + (x17:0 + x16:0) && sum~x17:0~x16:0 = x17:0 + x16:0

----------------------------------------

(12) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_381 ] = f_381_5
[ f_416 ] = f_416_6 + f_416_5

The following rules are decreasing:
f_381(v448:0:0, v449:0:0, v450:0:0, v451:0:0, sum~v506:0:0~sum~v507:0:0~v506:0:0, sum~v507:0:0~v506:0:0, v457:0:0, v458:0:0, v459:0:0, v462:0:0, v460:0:0, v463:0:0, v461:0:0, v464:0:0, v465:0:0, v466:0:0) -> f_416(v448:0:0, v449:0:0, v450:0:0, v451:0:0, v506:0:0, v507:0:0, v506:0:0 + (v507:0:0 + v506:0:0), v507:0:0 + v506:0:0, v507:0:0 + v506:0:0, v459:0:0, v462:0:0, v460:0:0, v463:0:0, v461:0:0, v464:0:0, v465:0:0, v466:0:0) :|: v507:0:0 > 0 && v507:0:0 > v506:0:0 && v466:0:0 >= v451:0:0 && v465:0:0 >= v450:0:0 && v464:0:0 >= v461:0:0 && v463:0:0 >= v460:0:0 && v462:0:0 >= v459:0:0 && v466:0:0 > 3 && v465:0:0 > 3 && v464:0:0 > 3 && v463:0:0 > 3 && v462:0:0 > 3 && v461:0:0 > 0 && v460:0:0 > 0 && v459:0:0 > 0 && v506:0:0 > 0 && v451:0:0 > 0 && v450:0:0 > 0 && v449:0:0 > 1 && v507:0:0 + v506:0:0 < v458:0:0 && v448:0:0 > 1 && v457:0:0 > 4 && v507:0:0 + v506:0:0 > v506:0:0 && v506:0:0 + (v507:0:0 + v506:0:0) > 2 && v458:0:0 > 2 && v507:0:0 + v506:0:0 > 1 && sum~v506:0:0~sum~v507:0:0~v506:0:0 = v506:0:0 + (v507:0:0 + v506:0:0) && sum~v507:0:0~v506:0:0 = v507:0:0 + v506:0:0
f_381(x53:0, x54:0, x55:0, x56:0, sum~x69:0~x58:0, x58:0, x59:0, x60:0, x61:0, x62:0, x63:0, x64:0, x65:0, x66:0, x67:0, x68:0) -> f_381(x53:0, x54:0, x55:0, x56:0, x69:0, x58:0, x59:0, x60:0, x61:0, x62:0, x63:0, x64:0, x65:0, x66:0, x67:0, x68:0) :|: x68:0 >= x56:0 && x67:0 >= x55:0 && x66:0 >= x65:0 && x64:0 >= x63:0 && x62:0 >= x61:0 && x68:0 > 3 && x67:0 > 3 && x66:0 > 3 && x64:0 > 3 && x62:0 > 3 && x65:0 > 0 && x63:0 > 0 && x69:0 > x58:0 && x61:0 > 0 && x60:0 > 1 && x59:0 > 2 && x58:0 > 0 && x56:0 > 0 && x55:0 > 0 && x54:0 > 1 && x60:0 > x58:0 && x53:0 > 1 && x69:0 > 1 && x69:0 + x58:0 > 2 && sum~x69:0~x58:0 = x69:0 + x58:0
f_416(v486:0:0, v487:0:0, v488:0:0, v489:0:0, v490:0:0, sum~v507:1:0~v490:0:0, v494:0:0, v495:0:0, v491:0:0, v498:0:0, v501:0:0, v499:0:0, v502:0:0, v500:0:0, v503:0:0, v504:0:0, v505:0:0) -> f_416(v486:0:0, v487:0:0, v488:0:0, v489:0:0, v490:0:0, v507:1:0, v494:0:0, v495:0:0, v507:1:0 + v490:0:0, v498:0:0, v501:0:0, v499:0:0, v502:0:0, v500:0:0, v503:0:0, v504:0:0, v505:0:0) :|: v507:1:0 > v490:0:0 && v507:1:0 > 0 && v505:0:0 >= v489:0:0 && v504:0:0 >= v488:0:0 && v503:0:0 >= v500:0:0 && v502:0:0 >= v499:0:0 && v501:0:0 >= v498:0:0 && v505:0:0 > 3 && v504:0:0 > 3 && v503:0:0 > 3 && v502:0:0 > 3 && v501:0:0 > 3 && v500:0:0 > 0 && v499:0:0 > 0 && v498:0:0 > 0 && v491:0:0 > 2 && v495:0:0 > 1 && v494:0:0 > 2 && v507:1:0 + v490:0:0 > 1 && v490:0:0 > 0 && v489:0:0 > 0 && v488:0:0 > 0 && v487:0:0 > 1 && v486:0:0 > 1 && v507:1:0 + v490:0:0 > v490:0:0 && v495:0:0 > v490:0:0 && sum~v507:1:0~v490:0:0 = v507:1:0 + v490:0:0
f_416(x36:0, x37:0, x38:0, x39:0, x40:0, x41:0, x42:0, x43:0, x44:0, x45:0, x46:0, x47:0, x48:0, x49:0, x50:0, x51:0, x52:0) -> f_381(x36:0, x37:0, x38:0, x39:0, x40:0, x41:0, x44:0, x40:0, x45:0, x46:0, x47:0, x48:0, x49:0, x50:0, x51:0, x52:0) :|: x51:0 >= x38:0 && x52:0 >= x39:0 && x50:0 >= x49:0 && x48:0 >= x47:0 && x46:0 >= x45:0 && x52:0 > 3 && x51:0 > 3 && x50:0 > 3 && x48:0 > 3 && x46:0 > 3 && x49:0 > 0 && x47:0 > 0 && x45:0 > 0 && x44:0 > 2 && x41:0 > 0 && x40:0 > 1 && x39:0 > 0 && x38:0 > 0 && x37:0 > 1 && x36:0 > 1 && x41:0 < x40:0 && x42:0 > 4 && x43:0 > 2
f_416(x18:0, x19:0, x20:0, x21:0, x22:0, sum~x35:0~x22:0, x24:0, x25:0, x26:0, x27:0, x28:0, x29:0, x30:0, x31:0, x32:0, x33:0, x34:0) -> f_416(x18:0, x19:0, x20:0, x21:0, x22:0, x35:0, x24:0, x25:0, x35:0 + x22:0, x27:0, x28:0, x29:0, x30:0, x31:0, x32:0, x33:0, x34:0) :|: x35:0 < x22:0 && x35:0 > 0 && x34:0 >= x21:0 && x33:0 >= x20:0 && x32:0 >= x31:0 && x30:0 >= x29:0 && x28:0 >= x27:0 && x34:0 > 3 && x33:0 > 3 && x32:0 > 3 && x30:0 > 3 && x28:0 > 3 && x31:0 > 0 && x29:0 > 0 && x27:0 > 0 && x26:0 > 2 && x25:0 > 1 && x24:0 > 2 && x35:0 + x22:0 > 1 && x22:0 > 0 && x21:0 > 0 && x20:0 > 0 && x19:0 > 1 && x18:0 > 1 && x35:0 + x22:0 > x22:0 && x25:0 > x22:0 && sum~x35:0~x22:0 = x35:0 + x22:0
f_381(x:0, x1:0, x2:0, x3:0, sum~x16:0~sum~x17:0~x16:0, sum~x17:0~x16:0, x6:0, x7:0, x8:0, x9:0, x10:0, x11:0, x12:0, x13:0, x14:0, x15:0) -> f_416(x:0, x1:0, x2:0, x3:0, x16:0, x17:0, x16:0 + (x17:0 + x16:0), x17:0 + x16:0, x17:0 + x16:0, x8:0, x9:0, x10:0, x11:0, x12:0, x13:0, x14:0, x15:0) :|: x17:0 > 0 && x17:0 < x16:0 && x3:0 <= x15:0 && x2:0 <= x14:0 && x13:0 >= x12:0 && x11:0 >= x10:0 && x9:0 >= x8:0 && x15:0 > 3 && x14:0 > 3 && x13:0 > 3 && x11:0 > 3 && x9:0 > 3 && x12:0 > 0 && x10:0 > 0 && x8:0 > 0 && x16:0 > 0 && x3:0 > 0 && x2:0 > 0 && x1:0 > 1 && x7:0 > x17:0 + x16:0 && x:0 > 1 && x6:0 > 4 && x17:0 + x16:0 > x16:0 && x16:0 + (x17:0 + x16:0) > 2 && x7:0 > 2 && x17:0 + x16:0 > 1 && sum~x16:0~sum~x17:0~x16:0 = x16:0 + (x17:0 + x16:0) && sum~x17:0~x16:0 = x17:0 + x16:0

The following rules are bounded:
f_381(v448:0:0, v449:0:0, v450:0:0, v451:0:0, sum~v506:0:0~sum~v507:0:0~v506:0:0, sum~v507:0:0~v506:0:0, v457:0:0, v458:0:0, v459:0:0, v462:0:0, v460:0:0, v463:0:0, v461:0:0, v464:0:0, v465:0:0, v466:0:0) -> f_416(v448:0:0, v449:0:0, v450:0:0, v451:0:0, v506:0:0, v507:0:0, v506:0:0 + (v507:0:0 + v506:0:0), v507:0:0 + v506:0:0, v507:0:0 + v506:0:0, v459:0:0, v462:0:0, v460:0:0, v463:0:0, v461:0:0, v464:0:0, v465:0:0, v466:0:0) :|: v507:0:0 > 0 && v507:0:0 > v506:0:0 && v466:0:0 >= v451:0:0 && v465:0:0 >= v450:0:0 && v464:0:0 >= v461:0:0 && v463:0:0 >= v460:0:0 && v462:0:0 >= v459:0:0 && v466:0:0 > 3 && v465:0:0 > 3 && v464:0:0 > 3 && v463:0:0 > 3 && v462:0:0 > 3 && v461:0:0 > 0 && v460:0:0 > 0 && v459:0:0 > 0 && v506:0:0 > 0 && v451:0:0 > 0 && v450:0:0 > 0 && v449:0:0 > 1 && v507:0:0 + v506:0:0 < v458:0:0 && v448:0:0 > 1 && v457:0:0 > 4 && v507:0:0 + v506:0:0 > v506:0:0 && v506:0:0 + (v507:0:0 + v506:0:0) > 2 && v458:0:0 > 2 && v507:0:0 + v506:0:0 > 1 && sum~v506:0:0~sum~v507:0:0~v506:0:0 = v506:0:0 + (v507:0:0 + v506:0:0) && sum~v507:0:0~v506:0:0 = v507:0:0 + v506:0:0
f_381(x53:0, x54:0, x55:0, x56:0, sum~x69:0~x58:0, x58:0, x59:0, x60:0, x61:0, x62:0, x63:0, x64:0, x65:0, x66:0, x67:0, x68:0) -> f_381(x53:0, x54:0, x55:0, x56:0, x69:0, x58:0, x59:0, x60:0, x61:0, x62:0, x63:0, x64:0, x65:0, x66:0, x67:0, x68:0) :|: x68:0 >= x56:0 && x67:0 >= x55:0 && x66:0 >= x65:0 && x64:0 >= x63:0 && x62:0 >= x61:0 && x68:0 > 3 && x67:0 > 3 && x66:0 > 3 && x64:0 > 3 && x62:0 > 3 && x65:0 > 0 && x63:0 > 0 && x69:0 > x58:0 && x61:0 > 0 && x60:0 > 1 && x59:0 > 2 && x58:0 > 0 && x56:0 > 0 && x55:0 > 0 && x54:0 > 1 && x60:0 > x58:0 && x53:0 > 1 && x69:0 > 1 && x69:0 + x58:0 > 2 && sum~x69:0~x58:0 = x69:0 + x58:0
f_416(v486:0:0, v487:0:0, v488:0:0, v489:0:0, v490:0:0, sum~v507:1:0~v490:0:0, v494:0:0, v495:0:0, v491:0:0, v498:0:0, v501:0:0, v499:0:0, v502:0:0, v500:0:0, v503:0:0, v504:0:0, v505:0:0) -> f_416(v486:0:0, v487:0:0, v488:0:0, v489:0:0, v490:0:0, v507:1:0, v494:0:0, v495:0:0, v507:1:0 + v490:0:0, v498:0:0, v501:0:0, v499:0:0, v502:0:0, v500:0:0, v503:0:0, v504:0:0, v505:0:0) :|: v507:1:0 > v490:0:0 && v507:1:0 > 0 && v505:0:0 >= v489:0:0 && v504:0:0 >= v488:0:0 && v503:0:0 >= v500:0:0 && v502:0:0 >= v499:0:0 && v501:0:0 >= v498:0:0 && v505:0:0 > 3 && v504:0:0 > 3 && v503:0:0 > 3 && v502:0:0 > 3 && v501:0:0 > 3 && v500:0:0 > 0 && v499:0:0 > 0 && v498:0:0 > 0 && v491:0:0 > 2 && v495:0:0 > 1 && v494:0:0 > 2 && v507:1:0 + v490:0:0 > 1 && v490:0:0 > 0 && v489:0:0 > 0 && v488:0:0 > 0 && v487:0:0 > 1 && v486:0:0 > 1 && v507:1:0 + v490:0:0 > v490:0:0 && v495:0:0 > v490:0:0 && sum~v507:1:0~v490:0:0 = v507:1:0 + v490:0:0
f_416(x36:0, x37:0, x38:0, x39:0, x40:0, x41:0, x42:0, x43:0, x44:0, x45:0, x46:0, x47:0, x48:0, x49:0, x50:0, x51:0, x52:0) -> f_381(x36:0, x37:0, x38:0, x39:0, x40:0, x41:0, x44:0, x40:0, x45:0, x46:0, x47:0, x48:0, x49:0, x50:0, x51:0, x52:0) :|: x51:0 >= x38:0 && x52:0 >= x39:0 && x50:0 >= x49:0 && x48:0 >= x47:0 && x46:0 >= x45:0 && x52:0 > 3 && x51:0 > 3 && x50:0 > 3 && x48:0 > 3 && x46:0 > 3 && x49:0 > 0 && x47:0 > 0 && x45:0 > 0 && x44:0 > 2 && x41:0 > 0 && x40:0 > 1 && x39:0 > 0 && x38:0 > 0 && x37:0 > 1 && x36:0 > 1 && x41:0 < x40:0 && x42:0 > 4 && x43:0 > 2
f_416(x18:0, x19:0, x20:0, x21:0, x22:0, sum~x35:0~x22:0, x24:0, x25:0, x26:0, x27:0, x28:0, x29:0, x30:0, x31:0, x32:0, x33:0, x34:0) -> f_416(x18:0, x19:0, x20:0, x21:0, x22:0, x35:0, x24:0, x25:0, x35:0 + x22:0, x27:0, x28:0, x29:0, x30:0, x31:0, x32:0, x33:0, x34:0) :|: x35:0 < x22:0 && x35:0 > 0 && x34:0 >= x21:0 && x33:0 >= x20:0 && x32:0 >= x31:0 && x30:0 >= x29:0 && x28:0 >= x27:0 && x34:0 > 3 && x33:0 > 3 && x32:0 > 3 && x30:0 > 3 && x28:0 > 3 && x31:0 > 0 && x29:0 > 0 && x27:0 > 0 && x26:0 > 2 && x25:0 > 1 && x24:0 > 2 && x35:0 + x22:0 > 1 && x22:0 > 0 && x21:0 > 0 && x20:0 > 0 && x19:0 > 1 && x18:0 > 1 && x35:0 + x22:0 > x22:0 && x25:0 > x22:0 && sum~x35:0~x22:0 = x35:0 + x22:0
f_381(x:0, x1:0, x2:0, x3:0, sum~x16:0~sum~x17:0~x16:0, sum~x17:0~x16:0, x6:0, x7:0, x8:0, x9:0, x10:0, x11:0, x12:0, x13:0, x14:0, x15:0) -> f_416(x:0, x1:0, x2:0, x3:0, x16:0, x17:0, x16:0 + (x17:0 + x16:0), x17:0 + x16:0, x17:0 + x16:0, x8:0, x9:0, x10:0, x11:0, x12:0, x13:0, x14:0, x15:0) :|: x17:0 > 0 && x17:0 < x16:0 && x3:0 <= x15:0 && x2:0 <= x14:0 && x13:0 >= x12:0 && x11:0 >= x10:0 && x9:0 >= x8:0 && x15:0 > 3 && x14:0 > 3 && x13:0 > 3 && x11:0 > 3 && x9:0 > 3 && x12:0 > 0 && x10:0 > 0 && x8:0 > 0 && x16:0 > 0 && x3:0 > 0 && x2:0 > 0 && x1:0 > 1 && x7:0 > x17:0 + x16:0 && x:0 > 1 && x6:0 > 4 && x17:0 + x16:0 > x16:0 && x16:0 + (x17:0 + x16:0) > 2 && x7:0 > 2 && x17:0 + x16:0 > 1 && sum~x16:0~sum~x17:0~x16:0 = x16:0 + (x17:0 + x16:0) && sum~x17:0~x16:0 = x17:0 + x16:0


----------------------------------------

(13)
YES

----------------------------------------

(14)
Obligation:
SCC
----------------------------------------

(15) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 17 rulesP rules:
f_280(v122, v123, v124, v125, v128, 1, v126, v129, v132, v130, v133, v131, v134, v135, v136, 0, 3, 2, 4) -> f_282(v122, v123, v124, v125, v128, 1, v126, v129, v132, v130, v133, v131, v134, v135, v136, 0, 3, 2, 4) :|: 0 = 0
f_282(v122, v123, v124, v125, v128, 1, v126, v129, v132, v130, v133, v131, v134, v135, v136, 0, 3, 2, 4) -> f_284(v122, v123, v124, v125, v128, 1, v126, v129, v132, v130, v133, v131, v134, v135, v136, 0, 3, 2, 4) :|: v128 != v123
f_284(v122, v123, v124, v125, v128, 1, v126, v129, v132, v130, v133, v131, v134, v135, v136, 0, 3, 2, 4) -> f_288(v122, v123, v124, v125, v128, 1, v126, v129, v132, v130, v133, v131, v134, v135, v136, 0, 3, 2, 4) :|: 0 = 0
f_288(v122, v123, v124, v125, v128, 1, v126, v129, v132, v130, v133, v131, v134, v135, v136, 0, 3, 2, 4) -> f_292(v122, v123, v124, v125, v128, 1, v126, v129, v132, v130, v133, v131, v134, v135, v136, 0, 3, 2, 4) :|: TRUE
f_292(v122, v123, v124, v125, v128, 1, v126, v129, v132, v130, v133, v131, v134, v135, v136, 0, 3, 2, 4) -> f_296(v122, v123, v124, v125, v128, 1, v126, v129, v132, v130, v133, v131, v134, v135, v136, 0, 3, 2, 4) :|: 0 = 0
f_296(v122, v123, v124, v125, v128, 1, v126, v129, v132, v130, v133, v131, v134, v135, v136, 0, 3, 2, 4) -> f_300(v122, v123, v124, v125, v128, 1, v126, v129, v132, v130, v133, v131, v134, v135, v136, 0, 3, 2, 4) :|: 0 = 0
f_300(v122, v123, v124, v125, v128, 1, v126, v129, v132, v130, v133, v131, v134, v135, v136, 0, 3, 2, 4) -> f_304(v122, v123, v124, v125, v128, 1, v126, v129, v132, v130, v133, v131, v134, v135, v136, 0, 3, 2, 4) :|: v123 < v128 && 2 <= v128 && 3 <= v126
f_304(v122, v123, v124, v125, v128, 1, v126, v129, v132, v130, v133, v131, v134, v135, v136, 0, 3, 2, 4) -> f_310(v122, v123, v124, v125, v128, 1, v126, v129, v132, v130, v133, v131, v134, v135, v136, 0, 3, 2, 4) :|: 0 = 0
f_310(v122, v123, v124, v125, v128, 1, v126, v129, v132, v130, v133, v131, v134, v135, v136, 0, 3, 2, 4) -> f_314(v122, v123, v124, v125, v128, 1, v126, v129, v132, v130, v133, v131, v134, v135, v136, 0, 3, 2, 4) :|: TRUE
f_314(v122, v123, v124, v125, v128, 1, v126, v129, v132, v130, v133, v131, v134, v135, v136, 0, 3, 2, 4) -> f_318(v122, v123, v124, v125, v128, 1, v129, v132, v130, v133, v131, v134, v135, v136, 0, 3, 2, 4) :|: 0 = 0
f_318(v122, v123, v124, v125, v128, 1, v129, v132, v130, v133, v131, v134, v135, v136, 0, 3, 2, 4) -> f_322(v122, v123, v124, v125, v128, 1, v129, v132, v130, v133, v131, v134, v135, v136, 0, 3, 2, 4) :|: 0 = 0
f_322(v122, v123, v124, v125, v128, 1, v129, v132, v130, v133, v131, v134, v135, v136, 0, 3, 2, 4) -> f_326(v122, v123, v124, v125, v128, 1, v165, v129, v132, v130, v133, v131, v134, v135, v136, 0, 3, 2, 4) :|: v165 + v123 = v128 && 1 <= v165
f_326(v122, v123, v124, v125, v128, 1, v165, v129, v132, v130, v133, v131, v134, v135, v136, 0, 3, 2, 4) -> f_330(v122, v123, v124, v125, v128, 1, v165, v129, v132, v130, v133, v131, v134, v135, v136, 0, 3, 2, 4) :|: TRUE
f_330(v122, v123, v124, v125, v128, 1, v165, v129, v132, v130, v133, v131, v134, v135, v136, 0, 3, 2, 4) -> f_334(v122, v123, v124, v125, v128, 1, v165, v129, v132, v130, v133, v131, v134, v135, v136, 0, 3, 2, 4) :|: TRUE
f_334(v122, v123, v124, v125, v128, 1, v165, v129, v132, v130, v133, v131, v134, v135, v136, 0, 3, 2, 4) -> f_338(v122, v123, v124, v125, v128, 1, v165, v129, v132, v130, v133, v131, v134, v135, v136, 0, 3, 2, 4) :|: TRUE
f_338(v122, v123, v124, v125, v128, 1, v165, v129, v132, v130, v133, v131, v134, v135, v136, 0, 3, 2, 4) -> f_278(v122, v123, v124, v125, v128, 1, v165, v129, v132, v130, v133, v131, v134, v135, v136, 0, 3, 2, 4) :|: 2 <= v122 && 1 <= v123 && 1 <= v124 && 1 <= v125 && 2 <= v128 && 1 <= v165 && 1 <= v129 && 1 <= v130 && 1 <= v131 && 4 <= v132 && 4 <= v133 && 4 <= v134 && 4 <= v135 && 4 <= v136 && v129 <= v132 && v130 <= v133 && v131 <= v134 && v124 <= v135 && v125 <= v136
f_278(v122, v123, v124, v125, v126, 1, v128, v129, v132, v130, v133, v131, v134, v135, v136, 0, 3, 2, 4) -> f_280(v122, v123, v124, v125, v128, 1, v126, v129, v132, v130, v133, v131, v134, v135, v136, 0, 3, 2, 4) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_280(v122:0, v123:0, v124:0, v125:0, v165:0 + v123:0, 1, v126:0, v129:0, v132:0, v130:0, v133:0, v131:0, v134:0, v135:0, v136:0, 0, 3, 2, 4) -> f_280(v122:0, v123:0, v124:0, v125:0, v165:0, 1, v165:0 + v123:0, v129:0, v132:0, v130:0, v133:0, v131:0, v134:0, v135:0, v136:0, 0, 3, 2, 4) :|: v123:0 > 0 && v122:0 > 1 && v124:0 > 0 && v125:0 > 0 && v165:0 + v123:0 > 1 && v165:0 > 0 && v165:0 + v123:0 > v123:0 && v129:0 > 0 && v130:0 > 0 && v131:0 > 0 && v132:0 > 3 && v126:0 > 2 && v133:0 > 3 && v134:0 > 3 && v135:0 > 3 && v136:0 > 3 && v132:0 >= v129:0 && v133:0 >= v130:0 && v134:0 >= v131:0 && v136:0 >= v125:0 && v135:0 >= v124:0
Filtered unneeded arguments:
   f_280(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19) -> f_280(x1, x2, x3, x4, x5, x7, x8, x9, x10, x11, x12, x13, x14, x15)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_280(v122:0, v123:0, v124:0, v125:0, sum~v165:0~v123:0, v126:0, v129:0, v132:0, v130:0, v133:0, v131:0, v134:0, v135:0, v136:0) -> f_280(v122:0, v123:0, v124:0, v125:0, v165:0, v165:0 + v123:0, v129:0, v132:0, v130:0, v133:0, v131:0, v134:0, v135:0, v136:0) :|: v122:0 > 1 && v123:0 > 0 && v124:0 > 0 && v125:0 > 0 && v165:0 + v123:0 > 1 && v165:0 > 0 && v165:0 + v123:0 > v123:0 && v129:0 > 0 && v130:0 > 0 && v131:0 > 0 && v132:0 > 3 && v126:0 > 2 && v133:0 > 3 && v134:0 > 3 && v135:0 > 3 && v136:0 > 3 && v132:0 >= v129:0 && v133:0 >= v130:0 && v134:0 >= v131:0 && v135:0 >= v124:0 && v136:0 >= v125:0 && sum~v165:0~v123:0 = v165:0 + v123:0

----------------------------------------

(16)
Obligation:
Rules:
f_280(v122:0, v123:0, v124:0, v125:0, sum~v165:0~v123:0, v126:0, v129:0, v132:0, v130:0, v133:0, v131:0, v134:0, v135:0, v136:0) -> f_280(v122:0, v123:0, v124:0, v125:0, v165:0, v165:0 + v123:0, v129:0, v132:0, v130:0, v133:0, v131:0, v134:0, v135:0, v136:0) :|: v122:0 > 1 && v123:0 > 0 && v124:0 > 0 && v125:0 > 0 && v165:0 + v123:0 > 1 && v165:0 > 0 && v165:0 + v123:0 > v123:0 && v129:0 > 0 && v130:0 > 0 && v131:0 > 0 && v132:0 > 3 && v126:0 > 2 && v133:0 > 3 && v134:0 > 3 && v135:0 > 3 && v136:0 > 3 && v132:0 >= v129:0 && v133:0 >= v130:0 && v134:0 >= v131:0 && v135:0 >= v124:0 && v136:0 >= v125:0 && sum~v165:0~v123:0 = v165:0 + v123:0

----------------------------------------

(17) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(18)
Obligation:
Rules:
f_280(v122:0:0, v123:0:0, v124:0:0, v125:0:0, sum~v165:0:0~v123:0:0, v126:0:0, v129:0:0, v132:0:0, v130:0:0, v133:0:0, v131:0:0, v134:0:0, v135:0:0, v136:0:0) -> f_280(v122:0:0, v123:0:0, v124:0:0, v125:0:0, v165:0:0, v165:0:0 + v123:0:0, v129:0:0, v132:0:0, v130:0:0, v133:0:0, v131:0:0, v134:0:0, v135:0:0, v136:0:0) :|: v135:0:0 >= v124:0:0 && v136:0:0 >= v125:0:0 && v134:0:0 >= v131:0:0 && v133:0:0 >= v130:0:0 && v132:0:0 >= v129:0:0 && v136:0:0 > 3 && v135:0:0 > 3 && v134:0:0 > 3 && v133:0:0 > 3 && v126:0:0 > 2 && v132:0:0 > 3 && v131:0:0 > 0 && v130:0:0 > 0 && v129:0:0 > 0 && v165:0:0 + v123:0:0 > v123:0:0 && v165:0:0 > 0 && v165:0:0 + v123:0:0 > 1 && v125:0:0 > 0 && v124:0:0 > 0 && v123:0:0 > 0 && v122:0:0 > 1 && sum~v165:0:0~v123:0:0 = v165:0:0 + v123:0:0

----------------------------------------

(19) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_280 ] = f_280_5

The following rules are decreasing:
f_280(v122:0:0, v123:0:0, v124:0:0, v125:0:0, sum~v165:0:0~v123:0:0, v126:0:0, v129:0:0, v132:0:0, v130:0:0, v133:0:0, v131:0:0, v134:0:0, v135:0:0, v136:0:0) -> f_280(v122:0:0, v123:0:0, v124:0:0, v125:0:0, v165:0:0, v165:0:0 + v123:0:0, v129:0:0, v132:0:0, v130:0:0, v133:0:0, v131:0:0, v134:0:0, v135:0:0, v136:0:0) :|: v135:0:0 >= v124:0:0 && v136:0:0 >= v125:0:0 && v134:0:0 >= v131:0:0 && v133:0:0 >= v130:0:0 && v132:0:0 >= v129:0:0 && v136:0:0 > 3 && v135:0:0 > 3 && v134:0:0 > 3 && v133:0:0 > 3 && v126:0:0 > 2 && v132:0:0 > 3 && v131:0:0 > 0 && v130:0:0 > 0 && v129:0:0 > 0 && v165:0:0 + v123:0:0 > v123:0:0 && v165:0:0 > 0 && v165:0:0 + v123:0:0 > 1 && v125:0:0 > 0 && v124:0:0 > 0 && v123:0:0 > 0 && v122:0:0 > 1 && sum~v165:0:0~v123:0:0 = v165:0:0 + v123:0:0

The following rules are bounded:
f_280(v122:0:0, v123:0:0, v124:0:0, v125:0:0, sum~v165:0:0~v123:0:0, v126:0:0, v129:0:0, v132:0:0, v130:0:0, v133:0:0, v131:0:0, v134:0:0, v135:0:0, v136:0:0) -> f_280(v122:0:0, v123:0:0, v124:0:0, v125:0:0, v165:0:0, v165:0:0 + v123:0:0, v129:0:0, v132:0:0, v130:0:0, v133:0:0, v131:0:0, v134:0:0, v135:0:0, v136:0:0) :|: v135:0:0 >= v124:0:0 && v136:0:0 >= v125:0:0 && v134:0:0 >= v131:0:0 && v133:0:0 >= v130:0:0 && v132:0:0 >= v129:0:0 && v136:0:0 > 3 && v135:0:0 > 3 && v134:0:0 > 3 && v133:0:0 > 3 && v126:0:0 > 2 && v132:0:0 > 3 && v131:0:0 > 0 && v130:0:0 > 0 && v129:0:0 > 0 && v165:0:0 + v123:0:0 > v123:0:0 && v165:0:0 > 0 && v165:0:0 + v123:0:0 > 1 && v125:0:0 > 0 && v124:0:0 > 0 && v123:0:0 > 0 && v122:0:0 > 1 && sum~v165:0:0~v123:0:0 = v165:0:0 + v123:0:0


----------------------------------------

(20)
YES

----------------------------------------

(21)
Obligation:
SCC
----------------------------------------

(22) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 17 rulesP rules:
f_279(v85, v86, v87, v88, v89, 1, 0, v92, v93, v96, v94, v97, v95, v98, v99, v100, 3, 2, 4) -> f_281(v85, v86, v87, v88, v89, 1, 0, v92, v93, v96, v94, v97, v95, v98, v99, v100, 3, 2, 4) :|: 0 = 0
f_281(v85, v86, v87, v88, v89, 1, 0, v92, v93, v96, v94, v97, v95, v98, v99, v100, 3, 2, 4) -> f_283(v85, v86, v87, v88, v92, 1, v89, 0, v93, v96, v94, v97, v95, v98, v99, v100, 3, 2, 4) :|: 0 = 0
f_283(v85, v86, v87, v88, v92, 1, v89, 0, v93, v96, v94, v97, v95, v98, v99, v100, 3, 2, 4) -> f_286(v85, v86, v87, v88, v92, 1, v89, 0, v93, v96, v94, v97, v95, v98, v99, v100, 3, 2, 4) :|: v85 != v92
f_286(v85, v86, v87, v88, v92, 1, v89, 0, v93, v96, v94, v97, v95, v98, v99, v100, 3, 2, 4) -> f_290(v85, v86, v87, v88, v92, 1, v89, 0, v93, v96, v94, v97, v95, v98, v99, v100, 3, 2, 4) :|: 0 = 0
f_290(v85, v86, v87, v88, v92, 1, v89, 0, v93, v96, v94, v97, v95, v98, v99, v100, 3, 2, 4) -> f_294(v85, v86, v87, v88, v92, 1, v89, 0, v93, v96, v94, v97, v95, v98, v99, v100, 3, 2, 4) :|: TRUE
f_294(v85, v86, v87, v88, v92, 1, v89, 0, v93, v96, v94, v97, v95, v98, v99, v100, 3, 2, 4) -> f_298(v85, v86, v87, v88, v92, 1, v89, 0, v93, v96, v94, v97, v95, v98, v99, v100, 3, 2, 4) :|: 0 = 0
f_298(v85, v86, v87, v88, v92, 1, v89, 0, v93, v96, v94, v97, v95, v98, v99, v100, 3, 2, 4) -> f_302(v85, v86, v87, v88, v92, 1, 0, v89, v93, v96, v94, v97, v95, v98, v99, v100, 3, 2, 4) :|: 0 = 0
f_302(v85, v86, v87, v88, v92, 1, 0, v89, v93, v96, v94, v97, v95, v98, v99, v100, 3, 2, 4) -> f_308(v85, v86, v87, v88, v92, 1, 0, v89, v93, v96, v94, v97, v95, v98, v99, v100, 3, 2, 4) :|: v85 <= v92 && 2 <= v92 && 3 <= v89
f_308(v85, v86, v87, v88, v92, 1, 0, v89, v93, v96, v94, v97, v95, v98, v99, v100, 3, 2, 4) -> f_313(v85, v86, v87, v88, v92, 1, 0, v89, v93, v96, v94, v97, v95, v98, v99, v100, 3, 2, 4) :|: 0 = 0
f_313(v85, v86, v87, v88, v92, 1, 0, v89, v93, v96, v94, v97, v95, v98, v99, v100, 3, 2, 4) -> f_317(v85, v86, v87, v88, v92, 1, 0, v89, v93, v96, v94, v97, v95, v98, v99, v100, 3, 2, 4) :|: TRUE
f_317(v85, v86, v87, v88, v92, 1, 0, v89, v93, v96, v94, v97, v95, v98, v99, v100, 3, 2, 4) -> f_321(v85, v86, v87, v88, v92, 1, 0, v93, v96, v94, v97, v95, v98, v99, v100, 3, 2, 4) :|: 0 = 0
f_321(v85, v86, v87, v88, v92, 1, 0, v93, v96, v94, v97, v95, v98, v99, v100, 3, 2, 4) -> f_325(v85, v86, v87, v88, v92, 1, 0, v93, v96, v94, v97, v95, v98, v99, v100, 3, 2, 4) :|: 0 = 0
f_325(v85, v86, v87, v88, v92, 1, 0, v93, v96, v94, v97, v95, v98, v99, v100, 3, 2, 4) -> f_329(v85, v86, v87, v88, v92, 1, 0, v168, v93, v96, v94, v97, v95, v98, v99, v100, 3, 2, 4) :|: v168 + v85 = v92 && 1 <= v168
f_329(v85, v86, v87, v88, v92, 1, 0, v168, v93, v96, v94, v97, v95, v98, v99, v100, 3, 2, 4) -> f_333(v85, v86, v87, v88, v92, 1, 0, v168, v93, v96, v94, v97, v95, v98, v99, v100, 3, 2, 4) :|: TRUE
f_333(v85, v86, v87, v88, v92, 1, 0, v168, v93, v96, v94, v97, v95, v98, v99, v100, 3, 2, 4) -> f_337(v85, v86, v87, v88, v92, 1, 0, v168, v93, v96, v94, v97, v95, v98, v99, v100, 3, 2, 4) :|: TRUE
f_337(v85, v86, v87, v88, v92, 1, 0, v168, v93, v96, v94, v97, v95, v98, v99, v100, 3, 2, 4) -> f_276(v85, v86, v87, v88, v92, 1, 0, v168, v93, v96, v94, v97, v95, v98, v99, v100, 3, 2, 4) :|: 1 <= v85 && 2 <= v86 && 1 <= v87 && 1 <= v88 && 2 <= v92 && 1 <= v168 && 1 <= v93 && 1 <= v94 && 1 <= v95 && 4 <= v96 && 4 <= v97 && 4 <= v98 && 4 <= v99 && 4 <= v100 && v93 <= v96 && v94 <= v97 && v95 <= v98 && v87 <= v99 && v88 <= v100
f_276(v85, v86, v87, v88, v89, 1, 0, v92, v93, v96, v94, v97, v95, v98, v99, v100, 3, 2, 4) -> f_279(v85, v86, v87, v88, v89, 1, 0, v92, v93, v96, v94, v97, v95, v98, v99, v100, 3, 2, 4) :|: TRUE
Combined rules. Obtained 1 rulesP rules:
f_279(v85:0, v86:0, v87:0, v88:0, v89:0, 1, 0, v168:0 + v85:0, v93:0, v96:0, v94:0, v97:0, v95:0, v98:0, v99:0, v100:0, 3, 2, 4) -> f_279(v85:0, v86:0, v87:0, v88:0, v168:0 + v85:0, 1, 0, v168:0, v93:0, v96:0, v94:0, v97:0, v95:0, v98:0, v99:0, v100:0, 3, 2, 4) :|: v85:0 < v168:0 + v85:0 && v86:0 > 1 && v85:0 > 0 && v87:0 > 0 && v88:0 > 0 && v168:0 + v85:0 > 1 && v168:0 > 0 && v93:0 > 0 && v94:0 > 0 && v95:0 > 0 && v96:0 > 3 && v97:0 > 3 && v89:0 > 2 && v98:0 > 3 && v99:0 > 3 && v100:0 > 3 && v96:0 >= v93:0 && v97:0 >= v94:0 && v98:0 >= v95:0 && v88:0 <= v100:0 && v99:0 >= v87:0
Filtered unneeded arguments:
   f_279(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19) -> f_279(x1, x2, x3, x4, x5, x8, x9, x10, x11, x12, x13, x14, x15, x16)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_279(v85:0, v86:0, v87:0, v88:0, v89:0, sum~v168:0~v85:0, v93:0, v96:0, v94:0, v97:0, v95:0, v98:0, v99:0, v100:0) -> f_279(v85:0, v86:0, v87:0, v88:0, v168:0 + v85:0, v168:0, v93:0, v96:0, v94:0, v97:0, v95:0, v98:0, v99:0, v100:0) :|: v86:0 > 1 && v85:0 < v168:0 + v85:0 && v85:0 > 0 && v87:0 > 0 && v88:0 > 0 && v168:0 + v85:0 > 1 && v168:0 > 0 && v93:0 > 0 && v94:0 > 0 && v95:0 > 0 && v96:0 > 3 && v97:0 > 3 && v89:0 > 2 && v98:0 > 3 && v99:0 > 3 && v100:0 > 3 && v96:0 >= v93:0 && v97:0 >= v94:0 && v98:0 >= v95:0 && v99:0 >= v87:0 && v88:0 <= v100:0 && sum~v168:0~v85:0 = v168:0 + v85:0

----------------------------------------

(23)
Obligation:
Rules:
f_279(v85:0, v86:0, v87:0, v88:0, v89:0, sum~v168:0~v85:0, v93:0, v96:0, v94:0, v97:0, v95:0, v98:0, v99:0, v100:0) -> f_279(v85:0, v86:0, v87:0, v88:0, v168:0 + v85:0, v168:0, v93:0, v96:0, v94:0, v97:0, v95:0, v98:0, v99:0, v100:0) :|: v86:0 > 1 && v85:0 < v168:0 + v85:0 && v85:0 > 0 && v87:0 > 0 && v88:0 > 0 && v168:0 + v85:0 > 1 && v168:0 > 0 && v93:0 > 0 && v94:0 > 0 && v95:0 > 0 && v96:0 > 3 && v97:0 > 3 && v89:0 > 2 && v98:0 > 3 && v99:0 > 3 && v100:0 > 3 && v96:0 >= v93:0 && v97:0 >= v94:0 && v98:0 >= v95:0 && v99:0 >= v87:0 && v88:0 <= v100:0 && sum~v168:0~v85:0 = v168:0 + v85:0

----------------------------------------

(24) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(25)
Obligation:
Rules:
f_279(v85:0:0, v86:0:0, v87:0:0, v88:0:0, v89:0:0, sum~v168:0:0~v85:0:0, v93:0:0, v96:0:0, v94:0:0, v97:0:0, v95:0:0, v98:0:0, v99:0:0, v100:0:0) -> f_279(v85:0:0, v86:0:0, v87:0:0, v88:0:0, v168:0:0 + v85:0:0, v168:0:0, v93:0:0, v96:0:0, v94:0:0, v97:0:0, v95:0:0, v98:0:0, v99:0:0, v100:0:0) :|: v99:0:0 >= v87:0:0 && v88:0:0 <= v100:0:0 && v98:0:0 >= v95:0:0 && v97:0:0 >= v94:0:0 && v96:0:0 >= v93:0:0 && v100:0:0 > 3 && v99:0:0 > 3 && v98:0:0 > 3 && v89:0:0 > 2 && v97:0:0 > 3 && v96:0:0 > 3 && v95:0:0 > 0 && v94:0:0 > 0 && v93:0:0 > 0 && v168:0:0 > 0 && v168:0:0 + v85:0:0 > 1 && v88:0:0 > 0 && v87:0:0 > 0 && v85:0:0 > 0 && v85:0:0 < v168:0:0 + v85:0:0 && v86:0:0 > 1 && sum~v168:0:0~v85:0:0 = v168:0:0 + v85:0:0

----------------------------------------

(26) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_279 ] = f_279_6

The following rules are decreasing:
f_279(v85:0:0, v86:0:0, v87:0:0, v88:0:0, v89:0:0, sum~v168:0:0~v85:0:0, v93:0:0, v96:0:0, v94:0:0, v97:0:0, v95:0:0, v98:0:0, v99:0:0, v100:0:0) -> f_279(v85:0:0, v86:0:0, v87:0:0, v88:0:0, v168:0:0 + v85:0:0, v168:0:0, v93:0:0, v96:0:0, v94:0:0, v97:0:0, v95:0:0, v98:0:0, v99:0:0, v100:0:0) :|: v99:0:0 >= v87:0:0 && v88:0:0 <= v100:0:0 && v98:0:0 >= v95:0:0 && v97:0:0 >= v94:0:0 && v96:0:0 >= v93:0:0 && v100:0:0 > 3 && v99:0:0 > 3 && v98:0:0 > 3 && v89:0:0 > 2 && v97:0:0 > 3 && v96:0:0 > 3 && v95:0:0 > 0 && v94:0:0 > 0 && v93:0:0 > 0 && v168:0:0 > 0 && v168:0:0 + v85:0:0 > 1 && v88:0:0 > 0 && v87:0:0 > 0 && v85:0:0 > 0 && v85:0:0 < v168:0:0 + v85:0:0 && v86:0:0 > 1 && sum~v168:0:0~v85:0:0 = v168:0:0 + v85:0:0

The following rules are bounded:
f_279(v85:0:0, v86:0:0, v87:0:0, v88:0:0, v89:0:0, sum~v168:0:0~v85:0:0, v93:0:0, v96:0:0, v94:0:0, v97:0:0, v95:0:0, v98:0:0, v99:0:0, v100:0:0) -> f_279(v85:0:0, v86:0:0, v87:0:0, v88:0:0, v168:0:0 + v85:0:0, v168:0:0, v93:0:0, v96:0:0, v94:0:0, v97:0:0, v95:0:0, v98:0:0, v99:0:0, v100:0:0) :|: v99:0:0 >= v87:0:0 && v88:0:0 <= v100:0:0 && v98:0:0 >= v95:0:0 && v97:0:0 >= v94:0:0 && v96:0:0 >= v93:0:0 && v100:0:0 > 3 && v99:0:0 > 3 && v98:0:0 > 3 && v89:0:0 > 2 && v97:0:0 > 3 && v96:0:0 > 3 && v95:0:0 > 0 && v94:0:0 > 0 && v93:0:0 > 0 && v168:0:0 > 0 && v168:0:0 + v85:0:0 > 1 && v88:0:0 > 0 && v87:0:0 > 0 && v85:0:0 > 0 && v85:0:0 < v168:0:0 + v85:0:0 && v86:0:0 > 1 && sum~v168:0:0~v85:0:0 = v168:0:0 + v85:0:0


----------------------------------------

(27)
YES
Graph finished, checking  consistency
Graph finished, checked consistency, took 0.0s
