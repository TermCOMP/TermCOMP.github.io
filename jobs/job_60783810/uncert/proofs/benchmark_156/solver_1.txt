MAYBE
proof of /hpcwork/ff862203/termcomp25/benchmarks/FVPK9.c
# AProVE Commit ID: 48c83ccb80d5f8312cb92f4aa1b51dc35e247e65 nils 20241118 unpublished


Termination of the given C Problem could not be shown:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 19 ms]
(2) LLVM problem


----------------------------------------

(0)
Obligation:
c file /hpcwork/ff862203/termcomp25/benchmarks/FVPK9.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /hpcwork/ff862203/termcomp25/benchmarks/FVPK9.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-pc-linux-gnu"

Type definitions:

Global variables:

Function declarations and definitions:

*BasicFunctionTypename: "llvm.dbg.declare" returnParam: BasicVoidType parameters: (BasicMetadataType, BasicMetadataType, BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_nondet_int" returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "fact" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: (0 i32) variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 7
	0:
		%2 = alloca i32, align 4
		%3 = alloca i32, align 4
		store %0, %3
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %3)
		%4 = load %3
		%5 = icmp sle %4 0
		br %5, %6, %7
	6:
		store 1, %2
		br %13
	7:
		%8 = load %3
		%9 = load %3
		%10 = sub i32 %9, 1
		%11 = call i32 @fact(i32 %10)
		%12 = mul i32 %8, %11
		store %12, %2
		br %13
	13:
		%14 = load %2
		ret %14

*BasicFunctionTypename: "binomialCoefficient" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: (0 i32, 1 i32) variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 26
	0:
		%3 = alloca i32, align 4
		%4 = alloca i32, align 4
		store %0, %3
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %3)
		store %1, %4
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %4)
		%5 = load %3
		%6 = call i32 @fact(i32 %5)
		%7 = load %4
		%8 = call i32 @fact(i32 %7)
		%9 = load %3
		%10 = load %4
		%11 = sub i32 %9, %10
		%12 = call i32 @fact(i32 %11)
		%13 = mul i32 %8, %12
		%14 = sdiv i32 %6, %13
		ret %14

*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 44
	0:
		%1 = alloca i32, align 4
		%2 = alloca i32, align 4
		%3 = alloca i32, align 4
		%4 = alloca i32, align 4
		%5 = alloca i32, align 4
		%6 = alloca i32, align 4
		store 0, %1
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %2)
		%7 = call i32 @__VERIFIER_nondet_int()
		store %7, %2
		%8 = load %2
		%9 = icmp slt %8 0
		br %9, %10, %11
	10:
		store 0, %1
		br %47
	11:
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %3)
		%12 = call i32 @__VERIFIER_nondet_int()
		store %12, %3
		%13 = load %3
		%14 = icmp slt %13 0
		br %14, %15, %16
	15:
		store 0, %1
		br %47
	16:
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %4)
		%17 = call i32 @__VERIFIER_nondet_int()
		store %17, %4
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %5)
		store 0, %5
		br %18
	18:
		%19 = load %5
		%20 = load %2
		%21 = icmp sle %19 %20
		br %21, %22, %47
	22:
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %6)
		store 0, %6
		br %23
	23:
		%24 = load %6
		%25 = load %2
		%26 = icmp sle %24 %25
		br %26, %27, %43
	27:
		%28 = load %6
		%29 = load %5
		%30 = icmp sle %28 %29
		br %30, %31, %35
	31:
		%32 = load %5
		%33 = load %6
		%34 = call i32 @binomialCoefficient(i32 %32, i32 %33)
		br %39
	35:
		%36 = load %6
		%37 = load %5
		%38 = call i32 @binomialCoefficient(i32 %36, i32 %37)
		br %39
	39:
		br %40
	40:
		%41 = load %6
		%42 = add i32 %41, 1
		store %42, %6
		br %23
	43:
		br %44
	44:
		%45 = load %5
		%46 = add i32 %45, 1
		store %46, %5
		br %18
	47:
		%48 = load %1
		ret %48


Analyze Termination of all function calls matching the pattern:
main()deleted entry node of fact
deleted entry node of fact
deleted entry node of fact
Division by zero possible at node 751
