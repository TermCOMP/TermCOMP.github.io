YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/wvaZ6.c
# AProVE Commit ID: 48c83ccb80d5f8312cb92f4aa1b51dc35e247e65 nils 20241118 unpublished


Termination of the given C Problem could be proven:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 21 ms]
(2) LLVM problem
(3) LLVMToTerminationGraphProof [EQUIVALENT, 5141 ms]
(4) LLVM Symbolic Execution Graph
(5) SymbolicExecutionGraphToSCCProof [SOUND, 0 ms]
(6) AND
    (7) LLVM Symbolic Execution SCC
        (8) SCC2IRS [SOUND, 262 ms]
        (9) IntTRS
        (10) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (11) IntTRS
        (12) PolynomialOrderProcessor [EQUIVALENT, 25 ms]
        (13) AND
            (14) IntTRS
                (15) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                (16) IntTRS
                (17) RankingReductionPairProof [EQUIVALENT, 13 ms]
                (18) IntTRS
                (19) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                (20) IntTRS
                (21) RankingReductionPairProof [EQUIVALENT, 5 ms]
                (22) YES
            (23) IntTRS
                (24) TerminationGraphProcessor [EQUIVALENT, 149 ms]
                (25) IntTRS
                (26) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                (27) IntTRS
                (28) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
                (29) IntTRS
                (30) PolynomialOrderProcessor [EQUIVALENT, 3 ms]
                (31) YES
    (32) LLVM Symbolic Execution SCC
        (33) SCC2IRS [SOUND, 119 ms]
        (34) IntTRS
        (35) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (36) IntTRS
        (37) RankingReductionPairProof [EQUIVALENT, 14 ms]
        (38) IntTRS
        (39) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (40) IntTRS
        (41) RankingReductionPairProof [EQUIVALENT, 4 ms]
        (42) YES
    (43) LLVM Symbolic Execution SCC
        (44) SCC2IRS [SOUND, 72 ms]
        (45) IntTRS
        (46) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (47) IntTRS
        (48) PolynomialOrderProcessor [EQUIVALENT, 2 ms]
        (49) YES


----------------------------------------

(0)
Obligation:
c file /hpcwork/ff862203/termcomp25/benchmarks/wvaZ6.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /hpcwork/ff862203/termcomp25/benchmarks/wvaZ6.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-pc-linux-gnu"

Type definitions:

Global variables:

Function declarations and definitions:

*BasicFunctionTypename: "llvm.dbg.declare" returnParam: BasicVoidType parameters: (BasicMetadataType, BasicMetadataType, BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 7
	0:
		%1 = alloca i32, align 4
		%2 = alloca i32, align 4
		%3 = alloca i32, align 4
		%4 = alloca i32, align 4
		%5 = alloca i32, align 4
		store 0, %1
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %2)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %3)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %4)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %5)
		store 1000, %2
		store 1, %3
		store 1, %4
		store 1, %5
		br %6
	6:
		%7 = load %3
		%8 = load %3
		%9 = mul i32 %7, %8
		%10 = load %3
		%11 = mul i32 %9, %10
		%12 = load %4
		%13 = load %4
		%14 = mul i32 %12, %13
		%15 = load %4
		%16 = mul i32 %14, %15
		%17 = load %5
		%18 = load %5
		%19 = mul i32 %17, %18
		%20 = load %5
		%21 = mul i32 %19, %20
		%22 = add i32 %16, %21
		%23 = icmp ne %11 %22
		br %23, %24, %28
	24:
		%25 = load %5
		%26 = load %2
		%27 = icmp sle %25 %26
		br %28
	28:
		%29 = phi [0, %6], [%27, %24]
		br %29, %30, %47
	30:
		%31 = load %3
		%32 = add i32 %31, 1
		store %32, %3
		%33 = load %3
		%34 = load %2
		%35 = icmp sgt %33 %34
		br %35, %36, %39
	36:
		store 1, %3
		%37 = load %4
		%38 = add i32 %37, 1
		store %38, %4
		br %39
	39:
		%40 = load %4
		%41 = load %2
		%42 = icmp sgt %40 %41
		br %42, %43, %46
	43:
		store 1, %4
		%44 = load %5
		%45 = add i32 %44, 1
		store %45, %5
		br %46
	46:
		br %6
	47:
		ret 0


Analyze Termination of all function calls matching the pattern:
main()
----------------------------------------

(3) LLVMToTerminationGraphProof (EQUIVALENT)
Constructed symbolic execution graph for LLVM program.
----------------------------------------

(4)
Obligation:
Symbolic Execution Graph
----------------------------------------

(5) SymbolicExecutionGraphToSCCProof (SOUND)
Splitted symbolic execution graph to 3 SCCs.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
SCC
----------------------------------------

(8) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 193 rulesP rules:
f_2150(v22883, v22884, v22885, v22886, v22887, v22888, v22889, v22890, v22891, v22892, v22893, v22894, v22895, v22896, v22897, 1, 1000, v22900, 0, v22902, v22903, v22904, v22905, v22906, v22907, v22908, v22909, 3, 1001, 2, 4) -> f_2152(v22883, v22884, v22885, v22886, v22887, v22900, v22888, v22889, v22890, v22891, v22892, v22893, v22894, v22895, v22896, v22897, 1, 1000, 0, v22902, v22903, v22904, v22905, v22906, v22907, v22908, v22909, 3, 1001, 2, 4) :|: 0 = 0
f_2152(v22883, v22884, v22885, v22886, v22887, v22900, v22888, v22889, v22890, v22891, v22892, v22893, v22894, v22895, v22896, v22897, 1, 1000, 0, v22902, v22903, v22904, v22905, v22906, v22907, v22908, v22909, 3, 1001, 2, 4) -> f_2154(v22883, v22884, v22885, v22886, v22887, v22900, v22889, v22888, v22890, v22891, v22892, v22893, v22894, v22895, v22896, v22897, 1, 1000, 0, v22902, v22903, v22904, v22905, v22906, v22907, v22908, v22909, 3, 1001, 2, 4) :|: 0 = 0
f_2154(v22883, v22884, v22885, v22886, v22887, v22900, v22889, v22888, v22890, v22891, v22892, v22893, v22894, v22895, v22896, v22897, 1, 1000, 0, v22902, v22903, v22904, v22905, v22906, v22907, v22908, v22909, 3, 1001, 2, 4) -> f_2156(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22888, v22890, v22891, v22892, v22893, v22894, v22895, v22896, v22897, 1, 1000, 0, v22902, v22903, v22904, v22905, v22906, v22907, v22908, v22909, 3, 1001, 2, 4) :|: v22997 = v22900 * v22900
f_2156(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22888, v22890, v22891, v22892, v22893, v22894, v22895, v22896, v22897, 1, 1000, 0, v22902, v22903, v22904, v22905, v22906, v22907, v22908, v22909, 3, 1001, 2, 4) -> f_2158(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22890, v22891, v22892, v22893, v22894, v22895, v22896, v22897, 1, 1000, v22888, 0, v22902, v22903, v22904, v22905, v22906, v22907, v22908, v22909, 3, 1001, 2, 4) :|: 0 = 0
f_2158(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22890, v22891, v22892, v22893, v22894, v22895, v22896, v22897, 1, 1000, v22888, 0, v22902, v22903, v22904, v22905, v22906, v22907, v22908, v22909, 3, 1001, 2, 4) -> f_2160(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, v22891, v22892, v22893, v22894, v22895, v22896, v22897, 1, 1000, v22888, 0, v22902, v22903, v22904, v22905, v22906, v22907, v22908, v22909, 3, 1001, 2, 4) :|: v22998 = v22997 * v22900
f_2160(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, v22891, v22892, v22893, v22894, v22895, v22896, v22897, 1, 1000, v22888, 0, v22902, v22903, v22904, v22905, v22906, v22907, v22908, v22909, 3, 1001, 2, 4) -> f_2162(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22891, v22892, v22893, v22894, v22895, v22896, v22897, 1000, v22888, 0, v22902, v22903, v22904, v22905, v22906, v22907, v22908, v22909, 3, 1001, 2, 4) :|: 0 = 0
f_2162(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22891, v22892, v22893, v22894, v22895, v22896, v22897, 1000, v22888, 0, v22902, v22903, v22904, v22905, v22906, v22907, v22908, v22909, 3, 1001, 2, 4) -> f_2164(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22892, v22891, v22893, v22894, v22895, v22896, v22897, 1000, v22888, 0, v22902, v22903, v22904, v22905, v22906, v22907, v22908, v22909, 3, 1001, 2, 4) :|: 0 = 0
f_2164(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22892, v22891, v22893, v22894, v22895, v22896, v22897, 1000, v22888, 0, v22902, v22903, v22904, v22905, v22906, v22907, v22908, v22909, 3, 1001, 2, 4) -> f_2166(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22891, v22893, v22894, v22895, v22896, v22897, 1000, v22888, 0, v22902, v22903, v22904, v22905, v22906, v22907, v22908, v22909, 3, 1001, 2, 4) :|: 0 = 0
f_2166(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22891, v22893, v22894, v22895, v22896, v22897, 1000, v22888, 0, v22902, v22903, v22904, v22905, v22906, v22907, v22908, v22909, 3, 1001, 2, 4) -> f_2168(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22893, v22894, v22895, v22896, v22897, 1000, v22888, 0, v22891, v22902, v22903, v22904, v22905, v22906, v22907, v22908, v22909, 3, 1001, 2, 4) :|: 0 = 0
f_2168(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22893, v22894, v22895, v22896, v22897, 1000, v22888, 0, v22891, v22902, v22903, v22904, v22905, v22906, v22907, v22908, v22909, 3, 1001, 2, 4) -> f_2170(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22894, v22895, v22896, v22897, 1000, v22888, 0, v22891, v22902, v22903, v22904, v22905, v22906, v22907, v22908, v22909, 3, 1001, 2, 4) :|: 0 = 0
f_2170(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22894, v22895, v22896, v22897, 1000, v22888, 0, v22891, v22902, v22903, v22904, v22905, v22906, v22907, v22908, v22909, 3, 1001, 2, 4) -> f_2172(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v22894, v22895, v22896, v22897, 1000, v22888, 0, v22891, v22902, v22903, v22905, v22906, v22907, v22908, v22909, 3, 1001, 2, 4) :|: 0 = 0
f_2172(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v22894, v22895, v22896, v22897, 1000, v22888, 0, v22891, v22902, v22903, v22905, v22906, v22907, v22908, v22909, 3, 1001, 2, 4) -> f_2174(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v22895, v22894, v22896, v22897, 1000, v22888, 0, v22891, v22902, v22903, v22905, v22906, v22907, v22908, v22909, 3, 1001, 2, 4) :|: 0 = 0
f_2174(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v22895, v22894, v22896, v22897, 1000, v22888, 0, v22891, v22902, v22903, v22905, v22906, v22907, v22908, v22909, 3, 1001, 2, 4) -> f_2177(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v22894, v22896, v22897, 1000, v22888, 0, v22891, v22902, v22903, v22905, v22906, v22907, v22908, v22909, 3, 1001, 2, 4) :|: v23000 = v22904 * v22904
f_2177(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v22894, v22896, v22897, 1000, v22888, 0, v22891, v22902, v22903, v22905, v22906, v22907, v22908, v22909, 3, 1001, 2, 4) -> f_2180(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v22896, v22897, v22894, 1000, v22888, 0, v22891, v22902, v22903, v22905, v22906, v22907, v22908, v22909, 3, 1001, 2, 4) :|: 0 = 0
f_2180(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v22896, v22897, v22894, 1000, v22888, 0, v22891, v22902, v22903, v22905, v22906, v22907, v22908, v22909, 3, 1001, 2, 4) -> f_2183(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v22897, v22894, 1000, v22888, 0, v22891, v22902, v22903, v22905, v22906, v22907, v22908, v22909, 3, 1001, 2, 4) :|: v23078 = v23000 * v22904
f_2183(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v22897, v22894, 1000, v22888, 0, v22891, v22902, v22903, v22905, v22906, v22907, v22908, v22909, 3, 1001, 2, 4) -> f_2186(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, v22894, 1000, v22888, 0, v22891, v22902, v22903, v22905, v22906, v22907, v22908, v22909, 3, 1001, 2, 4) :|: v23104 = 1 + v23078
f_2186(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, v22894, 1000, v22888, 0, v22891, v22902, v22903, v22905, v22906, v22907, v22908, v22909, 3, 1001, 2, 4) -> f_2188(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, v22894, 1000, v22888, 0, v22891, v22902, v22903, v22905, v22906, v22907, v22908, v22909, 3, 1001, 2, 4) :|: v22998 != v23104
f_2188(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, v22894, 1000, v22888, 0, v22891, v22902, v22903, v22905, v22906, v22907, v22908, v22909, 3, 1001, 2, 4) -> f_2192(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, v22894, 1000, v22888, 0, v22891, v22902, v22903, v22905, v22906, v22907, v22908, v22909, 3, 1001, 2, 4) :|: 0 = 0
f_2192(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, v22894, 1000, v22888, 0, v22891, v22902, v22903, v22905, v22906, v22907, v22908, v22909, 3, 1001, 2, 4) -> f_2196(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, v22894, 1000, v22888, 0, v22891, v22902, v22903, v22905, v22906, v22907, v22908, v22909, 3, 1001, 2, 4) :|: TRUE
f_2196(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, v22894, 1000, v22888, 0, v22891, v22902, v22903, v22905, v22906, v22907, v22908, v22909, 3, 1001, 2, 4) -> f_2200(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v22888, 0, v22891, v22902, v22903, v22894, v22905, v22906, v22907, v22908, v22909, 3, 1001, 2, 4) :|: 0 = 0
f_2200(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v22888, 0, v22891, v22902, v22903, v22894, v22905, v22906, v22907, v22908, v22909, 3, 1001, 2, 4) -> f_2204(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v22888, 0, v22891, v22902, v22903, v22894, v22905, v22906, v22907, v22908, v22909, 3, 1001, 2, 4) :|: 0 = 0
f_2204(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v22888, 0, v22891, v22902, v22903, v22894, v22905, v22906, v22907, v22908, v22909, 3, 1001, 2, 4) -> f_2206(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v22888, 0, v22891, v22902, v22903, v22894, v22905, v22906, v22907, v22908, v22909, 3, 1001, 999, 2, 4) :|: v22904 <= 1000 && v22894 <= 999
f_2206(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v22888, 0, v22891, v22902, v22903, v22894, v22905, v22906, v22907, v22908, v22909, 3, 1001, 999, 2, 4) -> f_2209(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v22888, 0, v22891, v22902, v22903, v22894, v22905, v22906, v22907, v22908, v22909, 3, 1001, 999, 2, 4) :|: 0 = 0
f_2209(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v22888, 0, v22891, v22902, v22903, v22894, v22905, v22906, v22907, v22908, v22909, 3, 1001, 999, 2, 4) -> f_2212(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v22888, 0, v22891, v22902, v22903, v22894, v22905, v22906, v22907, v22908, v22909, 3, 1001, 999, 2, 4) :|: 0 = 0
f_2212(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v22888, 0, v22891, v22902, v22903, v22894, v22905, v22906, v22907, v22908, v22909, 3, 1001, 999, 2, 4) -> f_2215(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v22888, 0, v22891, v22902, v22903, v22894, v22905, v22906, v22907, v22908, v22909, 3, 1001, 999, 2, 4) :|: TRUE
f_2215(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v22888, 0, v22891, v22902, v22903, v22894, v22905, v22906, v22907, v22908, v22909, 3, 1001, 999, 2, 4) -> f_2218(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, 0, v22891, v22902, v22903, v22894, v22905, v22906, v22907, v22908, v22909, 3, 1001, 999, 2, 4) :|: 0 = 0
f_2218(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, 0, v22891, v22902, v22903, v22894, v22905, v22906, v22907, v22908, v22909, 3, 1001, 999, 2, 4) -> f_2221(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v23693, 0, v22891, v22902, v22903, v22894, v22905, v22906, v22907, v22908, v22909, 3, 1001, 999, 2, 4) :|: v23693 = 1 + v22900 && 3 <= v23693
f_2221(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v23693, 0, v22891, v22902, v22903, v22894, v22905, v22906, v22907, v22908, v22909, 3, 1001, 999, 2, 4) -> f_2224(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v23693, 0, v22891, v22902, v22903, v22894, v22905, v22906, v22907, v22908, v22909, 3, 1001, 999, 2, 4) :|: TRUE
f_2224(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v23693, 0, v22891, v22902, v22903, v22894, v22905, v22906, v22907, v22908, v22909, 3, 1001, 999, 2, 4) -> f_2227(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v23693, 0, v22891, v22902, v22903, v22894, v22905, v22906, v22907, v22908, v22909, 3, 1001, 999, 2, 4) :|: 0 = 0
f_2227(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v23693, 0, v22891, v22902, v22903, v22894, v22905, v22906, v22907, v22908, v22909, 3, 1001, 999, 2, 4) -> f_2229(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v23693, 0, v22891, v22902, v22903, v22894, v22905, v22906, v22907, v22908, v22909, 3, 1001, 999, 2, 4) :|: 0 = 0
f_2229(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v23693, 0, v22891, v22902, v22903, v22894, v22905, v22906, v22907, v22908, v22909, 3, 1001, 999, 2, 4) -> f_2231(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v23693, 0, v22891, v22902, v22903, v22894, v22905, v22906, v22907, v22908, v22909, 3, 1001, 999, 2, 4) :|: 1000 < v23693 && 1000 <= v22900
f_2229(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v23693, 0, v22891, v22902, v22903, v22894, v22905, v22906, v22907, v22908, v22909, 3, 1001, 999, 2, 4) -> f_2232(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v23693, 0, v22891, v22902, v22903, v22894, v22905, v22906, v22907, v22908, v22909, 3, 1001, 999, 2, 4) :|: v23693 <= 1000 && v22900 <= 999
f_2231(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v23693, 0, v22891, v22902, v22903, v22894, v22905, v22906, v22907, v22908, v22909, 3, 1001, 999, 2, 4) -> f_2234(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v23693, v22891, v22902, v22903, v22894, v22905, v22906, v22907, v22908, v22909, 0, 3, 1001, 999, 2, 4) :|: 0 = 0
f_2234(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v23693, v22891, v22902, v22903, v22894, v22905, v22906, v22907, v22908, v22909, 0, 3, 1001, 999, 2, 4) -> f_2237(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v23693, v22891, v22902, v22903, v22894, v22905, v22906, v22907, v22908, v22909, 0, 3, 1001, 999, 2, 4) :|: TRUE
f_2237(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v23693, v22891, v22902, v22903, v22894, v22905, v22906, v22907, v22908, v22909, 0, 3, 1001, 999, 2, 4) -> f_2241(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v23693, v22891, v22902, v22903, v22894, v22905, v22906, v22907, v22908, v22909, 0, 3, 1001, 999, 2, 4) :|: TRUE
f_2241(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v23693, v22891, v22902, v22903, v22894, v22905, v22906, v22907, v22908, v22909, 0, 3, 1001, 999, 2, 4) -> f_2244(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v23693, v22891, v22903, v22894, v22905, v22906, v22907, v22908, v22909, 0, 3, 1001, 999, 2, 4) :|: 0 = 0
f_2244(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v23693, v22891, v22903, v22894, v22905, v22906, v22907, v22908, v22909, 0, 3, 1001, 999, 2, 4) -> f_2247(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v23693, v22891, 2, v22894, v22905, v22906, v22907, v22908, v22909, 0, 3, 1001, 999, 4) :|: 0 = 0
f_2247(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v23693, v22891, 2, v22894, v22905, v22906, v22907, v22908, v22909, 0, 3, 1001, 999, 4) -> f_2251(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v23693, v22891, 2, v22894, v22905, v22906, v22907, v22908, v22909, 0, 3, 1001, 999, 4) :|: TRUE
f_2251(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v23693, v22891, 2, v22894, v22905, v22906, v22907, v22908, v22909, 0, 3, 1001, 999, 4) -> f_2254(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v23693, v22891, 2, v22894, v22905, v22906, v22907, v22908, v22909, 0, 3, 1001, 999, 4) :|: TRUE
f_2254(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v23693, v22891, 2, v22894, v22905, v22906, v22907, v22908, v22909, 0, 3, 1001, 999, 4) -> f_2256(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v23693, 2, v22894, v22905, v22906, v22907, v22908, v22909, 0, 3, 999, 4, 1001) :|: 0 = 0
f_2256(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v23693, 2, v22894, v22905, v22906, v22907, v22908, v22909, 0, 3, 999, 4, 1001) -> f_2258(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v23693, 2, v22894, v22905, v22906, v22907, v22908, v22909, 0, 3, 999, 4, 1001) :|: 0 = 0
f_2258(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v23693, 2, v22894, v22905, v22906, v22907, v22908, v22909, 0, 3, 999, 4, 1001) -> f_2260(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v23693, 2, 0, v22894, v22905, v22906, v22907, v22908, v22909, 3, 999, 4, 1001) :|: 0 = 0
f_2260(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v23693, 2, 0, v22894, v22905, v22906, v22907, v22908, v22909, 3, 999, 4, 1001) -> f_2262(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v23693, 2, 0, v22894, v22905, v22906, v22907, v22908, v22909, 3, 999, 4, 1001) :|: TRUE
f_2262(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v23693, 2, 0, v22894, v22905, v22906, v22907, v22908, v22909, 3, 999, 4, 1001) -> f_2366(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, 1, 1, v22904, v23000, v23078, v23104, 1, 1000, v23693, 2, 0, v22894, v22905, v22906, v22907, v22908, v22909, 3, 999, 2, 1001, 4) :|: TRUE
f_2366(v26854, v26855, v26856, v26857, v26858, v26859, v26860, v26861, v26862, v26863, v26864, v26865, v26866, v26867, v26868, 1, 1000, v26871, v26872, 0, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) -> f_2369(v26854, v26855, v26856, v26857, v26858, v26859, v26860, v26861, v26862, v26863, v26864, v26865, v26866, v26867, v26868, 1, 1000, v26871, v26872, 0, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) :|: TRUE
f_2369(v26854, v26855, v26856, v26857, v26858, v26859, v26860, v26861, v26862, v26863, v26864, v26865, v26866, v26867, v26868, 1, 1000, v26871, v26872, 0, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) -> f_2371(v26854, v26855, v26856, v26857, v26858, 1, v26859, v26860, v26861, v26862, v26863, v26864, v26865, v26866, v26867, v26868, 1000, v26871, v26872, 0, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) :|: 0 = 0
f_2371(v26854, v26855, v26856, v26857, v26858, 1, v26859, v26860, v26861, v26862, v26863, v26864, v26865, v26866, v26867, v26868, 1000, v26871, v26872, 0, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) -> f_2373(v26854, v26855, v26856, v26857, v26858, 1, v26860, v26859, v26861, v26862, v26863, v26864, v26865, v26866, v26867, v26868, 1000, v26871, v26872, 0, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) :|: 0 = 0
f_2373(v26854, v26855, v26856, v26857, v26858, 1, v26860, v26859, v26861, v26862, v26863, v26864, v26865, v26866, v26867, v26868, 1000, v26871, v26872, 0, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) -> f_2375(v26854, v26855, v26856, v26857, v26858, 1, v26859, v26861, v26862, v26863, v26864, v26865, v26866, v26867, v26868, 1000, v26871, v26872, 0, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) :|: 0 = 0
f_2375(v26854, v26855, v26856, v26857, v26858, 1, v26859, v26861, v26862, v26863, v26864, v26865, v26866, v26867, v26868, 1000, v26871, v26872, 0, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) -> f_2378(v26854, v26855, v26856, v26857, v26858, 1, v26861, v26862, v26863, v26864, v26865, v26866, v26867, v26868, 1000, v26859, v26871, v26872, 0, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) :|: 0 = 0
f_2378(v26854, v26855, v26856, v26857, v26858, 1, v26861, v26862, v26863, v26864, v26865, v26866, v26867, v26868, 1000, v26859, v26871, v26872, 0, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) -> f_2380(v26854, v26855, v26856, v26857, v26858, 1, v26862, v26863, v26864, v26865, v26866, v26867, v26868, 1000, v26859, v26871, v26872, 0, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) :|: 0 = 0
f_2380(v26854, v26855, v26856, v26857, v26858, 1, v26862, v26863, v26864, v26865, v26866, v26867, v26868, 1000, v26859, v26871, v26872, 0, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) -> f_2382(v26854, v26855, v26856, v26857, v26858, 1, v26872, v26862, v26863, v26864, v26865, v26866, v26867, v26868, 1000, v26859, v26871, 0, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) :|: 0 = 0
f_2382(v26854, v26855, v26856, v26857, v26858, 1, v26872, v26862, v26863, v26864, v26865, v26866, v26867, v26868, 1000, v26859, v26871, 0, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) -> f_2384(v26854, v26855, v26856, v26857, v26858, 1, v26872, v26863, v26862, v26864, v26865, v26866, v26867, v26868, 1000, v26859, v26871, 0, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) :|: 0 = 0
f_2384(v26854, v26855, v26856, v26857, v26858, 1, v26872, v26863, v26862, v26864, v26865, v26866, v26867, v26868, 1000, v26859, v26871, 0, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) -> f_2386(v26854, v26855, v26856, v26857, v26858, 1, v26872, v27353, v26862, v26864, v26865, v26866, v26867, v26868, 1000, v26859, v26871, 0, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) :|: v27353 = v26872 * v26872
f_2386(v26854, v26855, v26856, v26857, v26858, 1, v26872, v27353, v26862, v26864, v26865, v26866, v26867, v26868, 1000, v26859, v26871, 0, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) -> f_2388(v26854, v26855, v26856, v26857, v26858, 1, v26872, v27353, v26864, v26865, v26866, v26867, v26868, 1000, v26859, v26871, 0, v26862, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) :|: 0 = 0
f_2388(v26854, v26855, v26856, v26857, v26858, 1, v26872, v27353, v26864, v26865, v26866, v26867, v26868, 1000, v26859, v26871, 0, v26862, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) -> f_2390(v26854, v26855, v26856, v26857, v26858, 1, v26872, v27353, v27354, v26865, v26866, v26867, v26868, 1000, v26859, v26871, 0, v26862, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) :|: v27354 = v27353 * v26872
f_2390(v26854, v26855, v26856, v26857, v26858, 1, v26872, v27353, v27354, v26865, v26866, v26867, v26868, 1000, v26859, v26871, 0, v26862, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) -> f_2392(v26854, v26855, v26856, v26857, v26858, 1, v26872, v27353, v27354, v26865, v26866, v26867, v26868, 1000, v26859, v26871, 0, v26862, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) :|: 0 = 0
f_2392(v26854, v26855, v26856, v26857, v26858, 1, v26872, v27353, v27354, v26865, v26866, v26867, v26868, 1000, v26859, v26871, 0, v26862, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) -> f_2394(v26854, v26855, v26856, v26857, v26858, 1, v26872, v27353, v27354, v26865, v26866, v26867, v26868, 1000, v26859, v26871, 0, v26862, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) :|: 0 = 0
f_2394(v26854, v26855, v26856, v26857, v26858, 1, v26872, v27353, v27354, v26865, v26866, v26867, v26868, 1000, v26859, v26871, 0, v26862, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) -> f_2396(v26854, v26855, v26856, v26857, v26858, 1, v26872, v27353, v27354, v26865, v26866, v26867, v26868, 1000, v26859, v26871, 0, v26862, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) :|: v26866 = v26865 * v26865
f_2396(v26854, v26855, v26856, v26857, v26858, 1, v26872, v27353, v27354, v26865, v26866, v26867, v26868, 1000, v26859, v26871, 0, v26862, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) -> f_2398(v26854, v26855, v26856, v26857, v26858, 1, v26872, v27353, v27354, v26865, v26866, v26867, v26868, 1000, v26859, v26871, 0, v26862, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) :|: 0 = 0
f_2398(v26854, v26855, v26856, v26857, v26858, 1, v26872, v27353, v27354, v26865, v26866, v26867, v26868, 1000, v26859, v26871, 0, v26862, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) -> f_2400(v26854, v26855, v26856, v26857, v26858, 1, v26872, v27353, v27354, v26865, v26866, v26867, v26868, 1000, v26859, v26871, 0, v26862, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) :|: v26867 = v26866 * v26865
f_2400(v26854, v26855, v26856, v26857, v26858, 1, v26872, v27353, v27354, v26865, v26866, v26867, v26868, 1000, v26859, v26871, 0, v26862, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) -> f_2402(v26854, v26855, v26856, v26857, v26858, 1, v26872, v27353, v27354, v26865, v26866, v26867, v27355, 1000, v26859, v26871, 0, v26862, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) :|: v27355 = v27354 + v26867
f_2402(v26854, v26855, v26856, v26857, v26858, 1, v26872, v27353, v27354, v26865, v26866, v26867, v27355, 1000, v26859, v26871, 0, v26862, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) -> f_2404(v26854, v26855, v26856, v26857, v26858, 1, v26872, v27353, v27354, v26865, v26866, v26867, v27355, 1000, v26859, v26871, 0, v26862, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) :|: 1 != v27355
f_2404(v26854, v26855, v26856, v26857, v26858, 1, v26872, v27353, v27354, v26865, v26866, v26867, v27355, 1000, v26859, v26871, 0, v26862, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) -> f_2407(v26854, v26855, v26856, v26857, v26858, 1, v26872, v27353, v27354, v26865, v26866, v26867, v27355, 1000, v26859, v26871, 0, v26862, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) :|: 0 = 0
f_2407(v26854, v26855, v26856, v26857, v26858, 1, v26872, v27353, v27354, v26865, v26866, v26867, v27355, 1000, v26859, v26871, 0, v26862, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) -> f_2410(v26854, v26855, v26856, v26857, v26858, 1, v26872, v27353, v27354, v26865, v26866, v26867, v27355, 1000, v26859, v26871, 0, v26862, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) :|: TRUE
f_2410(v26854, v26855, v26856, v26857, v26858, 1, v26872, v27353, v27354, v26865, v26866, v26867, v27355, 1000, v26859, v26871, 0, v26862, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) -> f_2413(v26854, v26855, v26856, v26857, v26858, 1, v26872, v27353, v27354, v26865, v26866, v26867, v27355, 1000, v26859, v26871, 0, v26862, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) :|: 0 = 0
f_2413(v26854, v26855, v26856, v26857, v26858, 1, v26872, v27353, v27354, v26865, v26866, v26867, v27355, 1000, v26859, v26871, 0, v26862, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) -> f_2416(v26854, v26855, v26856, v26857, v26858, 1, v26872, v27353, v27354, v26865, v26866, v26867, v27355, 1000, v26859, v26871, 0, v26862, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) :|: 0 = 0
f_2416(v26854, v26855, v26856, v26857, v26858, 1, v26872, v27353, v27354, v26865, v26866, v26867, v27355, 1000, v26859, v26871, 0, v26862, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) -> f_2419(v26854, v26855, v26856, v26857, v26858, 1, v26872, v27353, v27354, v26865, v26866, v26867, v27355, 1000, v26859, v26871, 0, v26862, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) :|: 0 = 0
f_2419(v26854, v26855, v26856, v26857, v26858, 1, v26872, v27353, v27354, v26865, v26866, v26867, v27355, 1000, v26859, v26871, 0, v26862, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) -> f_2422(v26854, v26855, v26856, v26857, v26858, 1, v26872, v27353, v27354, v26865, v26866, v26867, v27355, 1000, v26859, v26871, 0, v26862, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) :|: 0 = 0
f_2422(v26854, v26855, v26856, v26857, v26858, 1, v26872, v27353, v27354, v26865, v26866, v26867, v27355, 1000, v26859, v26871, 0, v26862, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) -> f_2425(v26854, v26855, v26856, v26857, v26858, 1, v26872, v27353, v27354, v26865, v26866, v26867, v27355, 1000, v26859, v26871, 0, v26862, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) :|: TRUE
f_2425(v26854, v26855, v26856, v26857, v26858, 1, v26872, v27353, v27354, v26865, v26866, v26867, v27355, 1000, v26859, v26871, 0, v26862, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) -> f_2428(v26854, v26855, v26856, v26857, v26858, 1, v26872, v27353, v27354, v26865, v26866, v26867, v27355, 1000, v26871, 0, v26862, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) :|: 0 = 0
f_2428(v26854, v26855, v26856, v26857, v26858, 1, v26872, v27353, v27354, v26865, v26866, v26867, v27355, 1000, v26871, 0, v26862, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 1001, 4) -> f_2430(v26854, v26855, v26856, v26857, v26858, 1, v26872, v27353, v27354, v26865, v26866, v26867, v27355, 1000, 2, v26871, 0, v26862, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 1001, 4) :|: 0 = 0
f_2430(v26854, v26855, v26856, v26857, v26858, 1, v26872, v27353, v27354, v26865, v26866, v26867, v27355, 1000, 2, v26871, 0, v26862, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 1001, 4) -> f_2433(v26854, v26855, v26856, v26857, v26858, 1, v26872, v27353, v27354, v26865, v26866, v26867, v27355, 1000, 2, v26871, 0, v26862, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 1001, 4) :|: TRUE
f_2433(v26854, v26855, v26856, v26857, v26858, 1, v26872, v27353, v27354, v26865, v26866, v26867, v27355, 1000, 2, v26871, 0, v26862, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 1001, 4) -> f_2436(v26854, v26855, v26856, v26857, v26858, 1, v26872, v27353, v27354, v26865, v26866, v26867, v27355, 1000, 2, 0, v26862, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 4) :|: 0 = 0
f_2436(v26854, v26855, v26856, v26857, v26858, 1, v26872, v27353, v27354, v26865, v26866, v26867, v27355, 1000, 2, 0, v26862, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 4) -> f_2439(v26854, v26855, v26856, v26857, v26858, 1, v26872, v27353, v27354, v26865, v26866, v26867, v27355, 1000, 2, 0, v26862, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 4) :|: 0 = 0
f_2439(v26854, v26855, v26856, v26857, v26858, 1, v26872, v27353, v27354, v26865, v26866, v26867, v27355, 1000, 2, 0, v26862, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 4) -> f_2442(v26854, v26855, v26856, v26857, v26858, 1, v26872, v27353, v27354, v26865, v26866, v26867, v27355, 1000, 2, 0, v26862, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 4) :|: 0 = 0
f_2442(v26854, v26855, v26856, v26857, v26858, 1, v26872, v27353, v27354, v26865, v26866, v26867, v27355, 1000, 2, 0, v26862, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 4) -> f_2444(v26854, v26855, v26856, v26857, v26858, 1, v26872, v27353, v27354, v26865, v26866, v26867, v27355, 1000, 2, 0, v26862, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 4) :|: TRUE
f_2444(v26854, v26855, v26856, v26857, v26858, 1, v26872, v27353, v27354, v26865, v26866, v26867, v27355, 1000, 2, 0, v26862, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 4) -> f_2337(v26854, v26855, v26856, v26857, v26858, 1, 1, 1, v26872, v27353, v27354, v26865, v26866, v26867, v27355, 1, 1000, 2, 0, v26862, v26872, v26874, v26875, v26876, v26877, v26878, v26879, 3, 999, 2, 4) :|: TRUE
f_2337(v26274, v26275, v26276, v26277, v26278, v26279, v26280, v26281, v26282, v26283, v26284, v26285, v26286, v26287, v26288, 1, 1000, v26291, 0, v26293, v26294, v26295, v26296, v26297, v26298, v26299, v26300, 3, 999, 2, 4) -> f_2340(v26274, v26275, v26276, v26277, v26278, v26279, v26280, v26281, v26282, v26283, v26284, v26285, v26286, v26287, v26288, 1, 1000, v26291, 0, v26293, v26294, v26295, v26296, v26297, v26298, v26299, v26300, 3, 999, 2, 4) :|: 0 = 0
f_2340(v26274, v26275, v26276, v26277, v26278, v26279, v26280, v26281, v26282, v26283, v26284, v26285, v26286, v26287, v26288, 1, 1000, v26291, 0, v26293, v26294, v26295, v26296, v26297, v26298, v26299, v26300, 3, 999, 2, 4) -> f_2343(v26274, v26275, v26276, v26277, v26278, v26279, v26280, v26281, v26282, v26283, v26284, v26285, v26286, v26287, v26288, 1, 1000, v26291, 0, v26293, v26294, v26295, v26296, v26297, v26298, v26299, v26300, 3, 999, 2, 4) :|: 0 = 0
f_2343(v26274, v26275, v26276, v26277, v26278, v26279, v26280, v26281, v26282, v26283, v26284, v26285, v26286, v26287, v26288, 1, 1000, v26291, 0, v26293, v26294, v26295, v26296, v26297, v26298, v26299, v26300, 3, 999, 2, 4) -> f_2346(v26274, v26275, v26276, v26277, v26278, v26279, v26280, v26281, v26282, v26283, v26284, v26285, v26286, v26287, v26288, 1, 1000, v26291, 0, v26293, v26294, v26295, v26296, v26297, v26298, v26299, v26300, 3, 999, 1001, 2, 4) :|: 1000 < v26282
f_2343(v26274, v26275, v26276, v26277, v26278, v26279, v26280, v26281, v26282, v26283, v26284, v26285, v26286, v26287, v26288, 1, 1000, v26291, 0, v26293, v26294, v26295, v26296, v26297, v26298, v26299, v26300, 3, 999, 2, 4) -> f_2347(v26274, v26275, v26276, v26277, v26278, v26279, v26280, v26281, v26282, v26283, v26284, v26285, v26286, v26287, v26288, 1, 1000, v26291, 0, v26293, v26294, v26295, v26296, v26297, v26298, v26299, v26300, 3, 999, 2, 4) :|: v26282 <= 1000
f_2346(v26274, v26275, v26276, v26277, v26278, v26279, v26280, v26281, v26282, v26283, v26284, v26285, v26286, v26287, v26288, 1, 1000, v26291, 0, v26293, v26294, v26295, v26296, v26297, v26298, v26299, v26300, 3, 999, 1001, 2, 4) -> f_2349(v26274, v26275, v26276, v26277, v26278, v26279, v26280, v26281, v26282, v26283, v26284, v26285, v26286, v26287, v26288, 1, 1000, v26291, 0, v26293, v26294, v26295, v26296, v26297, v26298, v26299, v26300, 3, 999, 1001, 2, 4) :|: 0 = 0
f_2349(v26274, v26275, v26276, v26277, v26278, v26279, v26280, v26281, v26282, v26283, v26284, v26285, v26286, v26287, v26288, 1, 1000, v26291, 0, v26293, v26294, v26295, v26296, v26297, v26298, v26299, v26300, 3, 999, 1001, 2, 4) -> f_2352(v26274, v26275, v26276, v26277, v26278, v26279, v26280, v26281, v26282, v26283, v26284, v26285, v26286, v26287, v26288, 1, 1000, v26291, 0, v26293, v26294, v26295, v26296, v26297, v26298, v26299, v26300, 3, 999, 1001, 2, 4) :|: TRUE
f_2352(v26274, v26275, v26276, v26277, v26278, v26279, v26280, v26281, v26282, v26283, v26284, v26285, v26286, v26287, v26288, 1, 1000, v26291, 0, v26293, v26294, v26295, v26296, v26297, v26298, v26299, v26300, 3, 999, 1001, 2, 4) -> f_2355(v26274, v26275, v26276, v26277, v26278, v26279, v26280, v26281, v26282, v26283, v26284, v26285, v26286, v26287, v26288, 1, 1000, v26291, 0, v26293, v26294, v26295, v26296, v26297, v26298, v26299, v26300, 3, 999, 1001, 2, 4) :|: TRUE
f_2355(v26274, v26275, v26276, v26277, v26278, v26279, v26280, v26281, v26282, v26283, v26284, v26285, v26286, v26287, v26288, 1, 1000, v26291, 0, v26293, v26294, v26295, v26296, v26297, v26298, v26299, v26300, 3, 999, 1001, 2, 4) -> f_2357(v26274, v26275, v26276, v26277, v26278, v26279, v26280, v26281, v26282, v26283, v26284, v26285, v26286, v26287, v26288, 1, 1000, v26291, 0, v26293, v26294, v26296, v26297, v26298, v26299, v26300, 3, 999, 1001, 2, 4) :|: 0 = 0
f_2357(v26274, v26275, v26276, v26277, v26278, v26279, v26280, v26281, v26282, v26283, v26284, v26285, v26286, v26287, v26288, 1, 1000, v26291, 0, v26293, v26294, v26296, v26297, v26298, v26299, v26300, 3, 999, 1001, 2, 4) -> f_2360(v26274, v26275, v26276, v26277, v26278, v26279, v26280, v26281, v26282, v26283, v26284, v26285, v26286, v26287, v26288, 1, 1000, v26291, 0, v26293, v26294, v26717, v26296, v26297, v26298, v26299, v26300, 3, 999, 1001, 2, 4) :|: v26717 = 1 + v26285 && 3 <= v26717 && v26717 <= 1001
f_2360(v26274, v26275, v26276, v26277, v26278, v26279, v26280, v26281, v26282, v26283, v26284, v26285, v26286, v26287, v26288, 1, 1000, v26291, 0, v26293, v26294, v26717, v26296, v26297, v26298, v26299, v26300, 3, 999, 1001, 2, 4) -> f_2363(v26274, v26275, v26276, v26277, v26278, v26279, v26280, v26281, v26282, v26283, v26284, v26285, v26286, v26287, v26288, 1, 1000, v26291, 0, v26293, v26294, v26717, v26296, v26297, v26298, v26299, v26300, 3, 999, 1001, 2, 4) :|: TRUE
f_2363(v26274, v26275, v26276, v26277, v26278, v26279, v26280, v26281, v26282, v26283, v26284, v26285, v26286, v26287, v26288, 1, 1000, v26291, 0, v26293, v26294, v26717, v26296, v26297, v26298, v26299, v26300, 3, 999, 1001, 2, 4) -> f_2367(v26274, v26275, v26276, v26277, v26278, v26279, v26280, v26281, v26282, v26283, v26284, v26285, v26286, v26287, v26288, 1, 1000, v26291, 0, v26293, v26294, v26717, v26296, v26297, v26298, v26299, v26300, 3, 999, 1001, 2, 4) :|: TRUE
f_2367(v26274, v26275, v26276, v26277, v26278, v26279, v26280, v26281, v26282, v26283, v26284, v26285, v26286, v26287, v26288, 1, 1000, v26291, 0, v26293, v26294, v26717, v26296, v26297, v26298, v26299, v26300, 3, 999, 1001, 2, 4) -> f_2148(v26274, v26275, v26276, v26277, v26278, v26279, v26280, v26281, v26282, v26283, v26284, v26285, v26286, v26287, v26288, 1, 1000, v26291, 0, v26293, v26294, v26717, v26296, v26297, v26298, v26299, v26300, 3, 1001, 2, 4) :|: TRUE
f_2148(v22883, v22884, v22885, v22886, v22887, v22888, v22889, v22890, v22891, v22892, v22893, v22894, v22895, v22896, v22897, 1, 1000, v22900, 0, v22902, v22903, v22904, v22905, v22906, v22907, v22908, v22909, 3, 1001, 2, 4) -> f_2150(v22883, v22884, v22885, v22886, v22887, v22888, v22889, v22890, v22891, v22892, v22893, v22894, v22895, v22896, v22897, 1, 1000, v22900, 0, v22902, v22903, v22904, v22905, v22906, v22907, v22908, v22909, 3, 1001, 2, 4) :|: TRUE
f_2347(v26274, v26275, v26276, v26277, v26278, v26279, v26280, v26281, v26282, v26283, v26284, v26285, v26286, v26287, v26288, 1, 1000, v26291, 0, v26293, v26294, v26295, v26296, v26297, v26298, v26299, v26300, 3, 999, 2, 4) -> f_2350(v26274, v26275, v26276, v26277, v26278, v26279, v26280, v26281, v26282, v26283, v26284, v26285, v26286, v26287, v26288, 1, 1000, v26291, 0, v26293, v26294, v26295, v26296, v26297, v26298, v26299, v26300, 3, 999, 2, 4) :|: 0 = 0
f_2350(v26274, v26275, v26276, v26277, v26278, v26279, v26280, v26281, v26282, v26283, v26284, v26285, v26286, v26287, v26288, 1, 1000, v26291, 0, v26293, v26294, v26295, v26296, v26297, v26298, v26299, v26300, 3, 999, 2, 4) -> f_2353(v26274, v26275, v26276, v26277, v26278, v26279, v26280, v26281, v26282, v26283, v26284, v26285, v26286, v26287, v26288, 1, 1000, v26291, 0, v26293, v26294, v26295, v26296, v26297, v26298, v26299, v26300, 3, 999, 2, 4) :|: TRUE
f_2353(v26274, v26275, v26276, v26277, v26278, v26279, v26280, v26281, v26282, v26283, v26284, v26285, v26286, v26287, v26288, 1, 1000, v26291, 0, v26293, v26294, v26295, v26296, v26297, v26298, v26299, v26300, 3, 999, 2, 4) -> f_2253(v26274, v26275, v26276, v26277, v26278, v26279, v26280, v26281, v26282, v26283, v26284, v26285, v26286, v26287, v26288, 1, 1000, v26291, 0, v26293, v26294, v26295, v26296, v26297, v26298, v26299, v26300, 3, 999, 2, 4) :|: TRUE
f_2253(v24105, v24106, v24107, v24108, v24109, v24110, v24111, v24112, v24113, v24114, v24115, v24116, v24117, v24118, v24119, 1, 1000, v24122, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) -> f_2255(v24105, v24106, v24107, v24108, v24109, v24110, v24111, v24112, v24113, v24114, v24115, v24116, v24117, v24118, v24119, 1, 1000, v24122, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) :|: TRUE
f_2255(v24105, v24106, v24107, v24108, v24109, v24110, v24111, v24112, v24113, v24114, v24115, v24116, v24117, v24118, v24119, 1, 1000, v24122, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) -> f_2257(v24105, v24106, v24107, v24108, v24109, v24122, v24110, v24111, v24112, v24113, v24114, v24115, v24116, v24117, v24118, v24119, 1, 1000, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) :|: 0 = 0
f_2257(v24105, v24106, v24107, v24108, v24109, v24122, v24110, v24111, v24112, v24113, v24114, v24115, v24116, v24117, v24118, v24119, 1, 1000, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) -> f_2259(v24105, v24106, v24107, v24108, v24109, v24122, v24111, v24110, v24112, v24113, v24114, v24115, v24116, v24117, v24118, v24119, 1, 1000, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) :|: 0 = 0
f_2259(v24105, v24106, v24107, v24108, v24109, v24122, v24111, v24110, v24112, v24113, v24114, v24115, v24116, v24117, v24118, v24119, 1, 1000, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) -> f_2261(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24110, v24112, v24113, v24114, v24115, v24116, v24117, v24118, v24119, 1, 1000, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) :|: v24331 = v24122 * v24122
f_2261(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24110, v24112, v24113, v24114, v24115, v24116, v24117, v24118, v24119, 1, 1000, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) -> f_2263(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24112, v24113, v24114, v24115, v24116, v24117, v24118, v24119, 1, 1000, v24110, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) :|: 0 = 0
f_2263(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24112, v24113, v24114, v24115, v24116, v24117, v24118, v24119, 1, 1000, v24110, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) -> f_2265(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24119, 1, 1000, v24110, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) :|: v24548 = v24331 * v24122
f_2265(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24119, 1, 1000, v24110, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) -> f_2267(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24119, 1, 1000, v24110, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) :|: 0 = 0
f_2267(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24119, 1, 1000, v24110, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) -> f_2269(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24119, 1, 1000, v24110, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) :|: 0 = 0
f_2269(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24119, 1, 1000, v24110, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) -> f_2271(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24119, 1, 1000, v24110, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) :|: v24114 = v24113 * v24113
f_2271(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24119, 1, 1000, v24110, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) -> f_2273(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24119, 1, 1000, v24110, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) :|: 0 = 0
f_2273(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24119, 1, 1000, v24110, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) -> f_2275(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24119, 1, 1000, v24110, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) :|: v24115 = v24114 * v24113
f_2275(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24119, 1, 1000, v24110, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) -> f_2277(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24119, 1, 1000, v24110, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) :|: 0 = 0
f_2277(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24119, 1, 1000, v24110, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) -> f_2279(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24119, 1, 1000, v24110, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) :|: 0 = 0
f_2279(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24119, 1, 1000, v24110, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) -> f_2281(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24119, 1, 1000, v24110, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) :|: v24117 = v24116 * v24116
f_2281(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24119, 1, 1000, v24110, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) -> f_2283(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24119, 1, 1000, v24110, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) :|: 0 = 0
f_2283(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24119, 1, 1000, v24110, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) -> f_2285(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24119, 1, 1000, v24110, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) :|: v24118 = v24117 * v24116
f_2285(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24119, 1, 1000, v24110, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) -> f_2287(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1000, v24110, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) :|: v24549 = v24115 + v24118
f_2287(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1000, v24110, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) -> f_2289(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1000, v24110, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) :|: v24548 != v24549
f_2289(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1000, v24110, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) -> f_2292(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1000, v24110, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) :|: 0 = 0
f_2292(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1000, v24110, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) -> f_2295(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1000, v24110, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) :|: TRUE
f_2295(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1000, v24110, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) -> f_2298(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1000, v24110, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) :|: 0 = 0
f_2298(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1000, v24110, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) -> f_2301(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1000, v24110, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) :|: 0 = 0
f_2301(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1000, v24110, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) -> f_2304(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1000, v24110, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) :|: v24116 <= 1000 && v24126 <= 999
f_2304(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1000, v24110, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) -> f_2308(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1000, v24110, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) :|: 0 = 0
f_2308(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1000, v24110, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) -> f_2312(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1000, v24110, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) :|: 0 = 0
f_2312(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1000, v24110, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) -> f_2316(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1000, v24110, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) :|: TRUE
f_2316(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1000, v24110, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) -> f_2319(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1000, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 2, 999, 4) :|: 0 = 0
f_2319(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1000, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 2, 999, 4) -> f_2321(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1000, v25835, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 2, 999, 4, 1001) :|: v25835 = 1 + v24122 && 3 <= v25835 && v25835 <= 1001
f_2321(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1000, v25835, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 2, 999, 4, 1001) -> f_2323(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1000, v25835, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 2, 999, 4, 1001) :|: TRUE
f_2323(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1000, v25835, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 2, 999, 4, 1001) -> f_2325(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1000, v25835, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 2, 999, 4, 1001) :|: 0 = 0
f_2325(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1000, v25835, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 2, 999, 4, 1001) -> f_2327(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1000, v25835, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 2, 999, 4, 1001) :|: 0 = 0
f_2327(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1000, v25835, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 2, 999, 4, 1001) -> f_2329(v24105, v24106, v24107, v24108, v24109, 1000, 1000000, 1000000000, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1001, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 2, 999, 4) :|: 1000 < v25835 && v24122 = 1000 && v25835 = 1001 && 0 = 0 && v24331 = 1000000 && v24548 = 1000000000
f_2327(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1000, v25835, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 2, 999, 4, 1001) -> f_2330(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1000, v25835, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 2, 999, 4) :|: v25835 <= 1000 && v24122 <= 999
f_2329(v24105, v24106, v24107, v24108, v24109, 1000, 1000000, 1000000000, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1001, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 2, 999, 4) -> f_2332(v24105, v24106, v24107, v24108, v24109, 1000, 1000000, 1000000000, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1001, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 2, 999, 4) :|: 0 = 0
f_2332(v24105, v24106, v24107, v24108, v24109, 1000, 1000000, 1000000000, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1001, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 2, 999, 4) -> f_2335(v24105, v24106, v24107, v24108, v24109, 1000, 1000000, 1000000000, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1001, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 2, 999, 4) :|: TRUE
f_2335(v24105, v24106, v24107, v24108, v24109, 1000, 1000000, 1000000000, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1001, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 2, 999, 4) -> f_2339(v24105, v24106, v24107, v24108, v24109, 1000, 1000000, 1000000000, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1001, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 2, 999, 4) :|: TRUE
f_2339(v24105, v24106, v24107, v24108, v24109, 1000, 1000000, 1000000000, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1001, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 2, 999, 4) -> f_2342(v24105, v24106, v24107, v24108, v24109, 1000, 1000000, 1000000000, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1001, 0, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 2, 999, 4) :|: 0 = 0
f_2342(v24105, v24106, v24107, v24108, v24109, 1000, 1000000, 1000000000, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1001, 0, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 2, 999, 4) -> f_2345(v24105, v24106, v24107, v24108, v24109, 1000, 1000000, 1000000000, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1001, 0, v26461, v24126, v24127, v24128, v24129, v24130, v24131, 3, 2, 999, 4) :|: v26461 = 1 + v24113 && 2 <= v26461 && v26461 <= 1001
f_2345(v24105, v24106, v24107, v24108, v24109, 1000, 1000000, 1000000000, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1001, 0, v26461, v24126, v24127, v24128, v24129, v24130, v24131, 3, 2, 999, 4) -> f_2348(v24105, v24106, v24107, v24108, v24109, 1000, 1000000, 1000000000, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1001, 0, v26461, v24126, v24127, v24128, v24129, v24130, v24131, 3, 2, 999, 4) :|: TRUE
f_2348(v24105, v24106, v24107, v24108, v24109, 1000, 1000000, 1000000000, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1001, 0, v26461, v24126, v24127, v24128, v24129, v24130, v24131, 3, 2, 999, 4) -> f_2351(v24105, v24106, v24107, v24108, v24109, 1000, 1000000, 1000000000, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1001, 0, v26461, v24126, v24127, v24128, v24129, v24130, v24131, 3, 2, 999, 4) :|: TRUE
f_2351(v24105, v24106, v24107, v24108, v24109, 1000, 1000000, 1000000000, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1001, 0, v26461, v24126, v24127, v24128, v24129, v24130, v24131, 3, 2, 999, 4) -> f_2354(v24105, v24106, v24107, v24108, v24109, 1000, 1000000, 1000000000, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1001, v26461, 0, v24126, v24127, v24128, v24129, v24130, v24131, 3, 2, 999, 4) :|: 0 = 0
f_2354(v24105, v24106, v24107, v24108, v24109, 1000, 1000000, 1000000000, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1001, v26461, 0, v24126, v24127, v24128, v24129, v24130, v24131, 3, 2, 999, 4) -> f_2356(v24105, v24106, v24107, v24108, v24109, 1000, 1000000, 1000000000, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1001, v26461, 0, v24126, v24127, v24128, v24129, v24130, v24131, 3, 2, 999, 4) :|: 0 = 0
f_2356(v24105, v24106, v24107, v24108, v24109, 1000, 1000000, 1000000000, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1001, v26461, 0, v24126, v24127, v24128, v24129, v24130, v24131, 3, 2, 999, 4) -> f_2358(v24105, v24106, v24107, v24108, v24109, 1000, 1000000, 1000000000, v24116, v24117, v24118, v24549, 1, 1001, 0, v24126, v24127, v24128, v24129, v24130, v24131, 3, 2, 999, 4) :|: 1000 < v26461 && v24113 = 1000 && v26461 = 1001 && 0 = 0 && v24114 = 1000000 && v24115 = 1000000000
f_2356(v24105, v24106, v24107, v24108, v24109, 1000, 1000000, 1000000000, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1001, v26461, 0, v24126, v24127, v24128, v24129, v24130, v24131, 3, 2, 999, 4) -> f_2359(v24105, v24106, v24107, v24108, v24109, 1000, 1000000, 1000000000, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1001, v26461, 0, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) :|: v26461 <= 1000 && v24113 <= 999
f_2358(v24105, v24106, v24107, v24108, v24109, 1000, 1000000, 1000000000, v24116, v24117, v24118, v24549, 1, 1001, 0, v24126, v24127, v24128, v24129, v24130, v24131, 3, 2, 999, 4) -> f_2361(v24105, v24106, v24107, v24108, v24109, 1000, 1000000, 1000000000, v24116, v24117, v24118, v24549, 1, 1001, v24126, v24127, v24128, v24129, v24130, v24131, 0, 3, 2, 999, 4) :|: 0 = 0
f_2361(v24105, v24106, v24107, v24108, v24109, 1000, 1000000, 1000000000, v24116, v24117, v24118, v24549, 1, 1001, v24126, v24127, v24128, v24129, v24130, v24131, 0, 3, 2, 999, 4) -> f_2364(v24105, v24106, v24107, v24108, v24109, 1000, 1000000, 1000000000, v24116, v24117, v24118, v24549, 1, 1001, v24126, v24127, v24128, v24129, v24130, v24131, 0, 3, 2, 999, 4) :|: TRUE
f_2364(v24105, v24106, v24107, v24108, v24109, 1000, 1000000, 1000000000, v24116, v24117, v24118, v24549, 1, 1001, v24126, v24127, v24128, v24129, v24130, v24131, 0, 3, 2, 999, 4) -> f_2368(v24105, v24106, v24107, v24108, v24109, 1000, 1000000, 1000000000, v24116, v24117, v24118, v24549, 1, 1001, v24126, v24127, v24128, v24129, v24130, v24131, 0, 3, 2, 999, 4) :|: TRUE
f_2368(v24105, v24106, v24107, v24108, v24109, 1000, 1000000, 1000000000, v24116, v24117, v24118, v24549, 1, 1001, v24126, v24127, v24128, v24129, v24130, v24131, 0, 3, 2, 999, 4) -> f_2370(v24105, v24106, v24107, v24108, v24109, 1000, 1000000, 1000000000, v24116, v24117, v24118, v24549, 1, 1001, v24127, v24128, v24129, v24130, v24131, 0, 3, 2, 4) :|: 0 = 0
f_2370(v24105, v24106, v24107, v24108, v24109, 1000, 1000000, 1000000000, v24116, v24117, v24118, v24549, 1, 1001, v24127, v24128, v24129, v24130, v24131, 0, 3, 2, 4) -> f_2372(v24105, v24106, v24107, v24108, v24109, 1000, 1000000, 1000000000, v24116, v24117, v24118, v24549, 1, 1001, v27105, v24127, v24128, v24129, v24130, v24131, 0, 3, 2, 4) :|: v27105 = 1 + v24116 && 3 <= v27105 && v27105 <= 1001
f_2372(v24105, v24106, v24107, v24108, v24109, 1000, 1000000, 1000000000, v24116, v24117, v24118, v24549, 1, 1001, v27105, v24127, v24128, v24129, v24130, v24131, 0, 3, 2, 4) -> f_2374(v24105, v24106, v24107, v24108, v24109, 1000, 1000000, 1000000000, v24116, v24117, v24118, v24549, 1, 1001, v27105, v24127, v24128, v24129, v24130, v24131, 0, 3, 2, 4) :|: TRUE
f_2374(v24105, v24106, v24107, v24108, v24109, 1000, 1000000, 1000000000, v24116, v24117, v24118, v24549, 1, 1001, v27105, v24127, v24128, v24129, v24130, v24131, 0, 3, 2, 4) -> f_2376(v24105, v24106, v24107, v24108, v24109, 1000, 1000000, 1000000000, v24116, v24117, v24118, v24549, 1, 1001, v27105, v24127, v24128, v24129, v24130, v24131, 0, 3, 2, 4) :|: TRUE
f_2376(v24105, v24106, v24107, v24108, v24109, 1000, 1000000, 1000000000, v24116, v24117, v24118, v24549, 1, 1001, v27105, v24127, v24128, v24129, v24130, v24131, 0, 3, 2, 4) -> f_2377(v24105, v24106, v24107, v24108, v24109, 1000, 1000000, 1000000000, 1000, 1000000, 1000000000, v24116, v24117, v24118, v24549, 1, 1000, 1001, 1001, v27105, v24127, v24128, v24129, v24130, v24131, 0, 3, 1001, 2, 4) :|: TRUE
f_2377(v27162, v27163, v27164, v27165, v27166, v27167, v27168, v27169, v27170, v27171, v27172, v27173, v27174, v27175, v27176, 1, 1000, v27179, v27180, v27181, v27182, v27183, v27184, v27185, v27186, 0, 3, 1001, 2, 4) -> f_2379(v27162, v27163, v27164, v27165, v27166, v27167, v27168, v27169, v27170, v27171, v27172, v27173, v27174, v27175, v27176, 1, 1000, v27179, v27180, v27181, v27182, v27183, v27184, v27185, v27186, 0, 3, 1001, 2, 4) :|: TRUE
f_2379(v27162, v27163, v27164, v27165, v27166, v27167, v27168, v27169, v27170, v27171, v27172, v27173, v27174, v27175, v27176, 1, 1000, v27179, v27180, v27181, v27182, v27183, v27184, v27185, v27186, 0, 3, 1001, 2, 4) -> f_2381(v27162, v27163, v27164, v27165, v27166, 1, v27167, v27168, v27169, v27170, v27171, v27172, v27173, v27174, v27175, v27176, 1000, v27179, v27180, v27181, v27182, v27183, v27184, v27185, v27186, 0, 3, 1001, 2, 4) :|: 0 = 0
f_2381(v27162, v27163, v27164, v27165, v27166, 1, v27167, v27168, v27169, v27170, v27171, v27172, v27173, v27174, v27175, v27176, 1000, v27179, v27180, v27181, v27182, v27183, v27184, v27185, v27186, 0, 3, 1001, 2, 4) -> f_2383(v27162, v27163, v27164, v27165, v27166, 1, v27168, v27167, v27169, v27170, v27171, v27172, v27173, v27174, v27175, v27176, 1000, v27179, v27180, v27181, v27182, v27183, v27184, v27185, v27186, 0, 3, 1001, 2, 4) :|: 0 = 0
f_2383(v27162, v27163, v27164, v27165, v27166, 1, v27168, v27167, v27169, v27170, v27171, v27172, v27173, v27174, v27175, v27176, 1000, v27179, v27180, v27181, v27182, v27183, v27184, v27185, v27186, 0, 3, 1001, 2, 4) -> f_2385(v27162, v27163, v27164, v27165, v27166, 1, v27167, v27169, v27170, v27171, v27172, v27173, v27174, v27175, v27176, 1000, v27179, v27180, v27181, v27182, v27183, v27184, v27185, v27186, 0, 3, 1001, 2, 4) :|: 0 = 0
f_2385(v27162, v27163, v27164, v27165, v27166, 1, v27167, v27169, v27170, v27171, v27172, v27173, v27174, v27175, v27176, 1000, v27179, v27180, v27181, v27182, v27183, v27184, v27185, v27186, 0, 3, 1001, 2, 4) -> f_2387(v27162, v27163, v27164, v27165, v27166, 1, v27169, v27170, v27171, v27172, v27173, v27174, v27175, v27176, 1000, v27167, v27179, v27180, v27181, v27182, v27183, v27184, v27185, v27186, 0, 3, 1001, 2, 4) :|: 0 = 0
f_2387(v27162, v27163, v27164, v27165, v27166, 1, v27169, v27170, v27171, v27172, v27173, v27174, v27175, v27176, 1000, v27167, v27179, v27180, v27181, v27182, v27183, v27184, v27185, v27186, 0, 3, 1001, 2, 4) -> f_2389(v27162, v27163, v27164, v27165, v27166, 1, v27170, v27171, v27172, v27173, v27174, v27175, v27176, 1000, v27167, v27179, v27180, v27181, v27182, v27183, v27184, v27185, v27186, 0, 3, 1001, 2, 4) :|: 0 = 0
f_2389(v27162, v27163, v27164, v27165, v27166, 1, v27170, v27171, v27172, v27173, v27174, v27175, v27176, 1000, v27167, v27179, v27180, v27181, v27182, v27183, v27184, v27185, v27186, 0, 3, 1001, 2, 4) -> f_2391(v27162, v27163, v27164, v27165, v27166, 1, v27170, v27171, v27172, v27173, v27174, v27175, v27176, 1000, v27167, v27179, v27180, v27181, v27182, v27183, v27184, v27185, v27186, 0, 3, 1001, 2, 4) :|: 0 = 0
f_2391(v27162, v27163, v27164, v27165, v27166, 1, v27170, v27171, v27172, v27173, v27174, v27175, v27176, 1000, v27167, v27179, v27180, v27181, v27182, v27183, v27184, v27185, v27186, 0, 3, 1001, 2, 4) -> f_2393(v27162, v27163, v27164, v27165, v27166, 1, v27171, v27170, v27172, v27173, v27174, v27175, v27176, 1000, v27167, v27179, v27180, v27181, v27182, v27183, v27184, v27185, v27186, 0, 3, 1001, 2, 4) :|: 0 = 0
f_2393(v27162, v27163, v27164, v27165, v27166, 1, v27171, v27170, v27172, v27173, v27174, v27175, v27176, 1000, v27167, v27179, v27180, v27181, v27182, v27183, v27184, v27185, v27186, 0, 3, 1001, 2, 4) -> f_2395(v27162, v27163, v27164, v27165, v27166, 1, v27170, v27172, v27173, v27174, v27175, v27176, 1000, v27167, v27179, v27180, v27181, v27182, v27183, v27184, v27185, v27186, 0, 3, 1001, 2, 4) :|: 0 = 0
f_2395(v27162, v27163, v27164, v27165, v27166, 1, v27170, v27172, v27173, v27174, v27175, v27176, 1000, v27167, v27179, v27180, v27181, v27182, v27183, v27184, v27185, v27186, 0, 3, 1001, 2, 4) -> f_2397(v27162, v27163, v27164, v27165, v27166, 1, v27172, v27173, v27174, v27175, v27176, 1000, v27167, v27179, v27180, v27170, v27181, v27182, v27183, v27184, v27185, v27186, 0, 3, 1001, 2, 4) :|: 0 = 0
f_2397(v27162, v27163, v27164, v27165, v27166, 1, v27172, v27173, v27174, v27175, v27176, 1000, v27167, v27179, v27180, v27170, v27181, v27182, v27183, v27184, v27185, v27186, 0, 3, 1001, 2, 4) -> f_2399(v27162, v27163, v27164, v27165, v27166, 1, v27173, v27174, v27175, v27176, 1000, v27167, v27179, v27180, v27170, v27181, v27182, v27183, v27184, v27185, v27186, 0, 3, 1001, 2, 4) :|: 0 = 0
f_2399(v27162, v27163, v27164, v27165, v27166, 1, v27173, v27174, v27175, v27176, 1000, v27167, v27179, v27180, v27170, v27181, v27182, v27183, v27184, v27185, v27186, 0, 3, 1001, 2, 4) -> f_2401(v27162, v27163, v27164, v27165, v27166, 1, v27181, v27173, v27174, v27175, v27176, 1000, v27167, v27179, v27180, v27170, v27182, v27183, v27184, v27185, v27186, 0, 3, 1001, 2, 4) :|: 0 = 0
f_2401(v27162, v27163, v27164, v27165, v27166, 1, v27181, v27173, v27174, v27175, v27176, 1000, v27167, v27179, v27180, v27170, v27182, v27183, v27184, v27185, v27186, 0, 3, 1001, 2, 4) -> f_2403(v27162, v27163, v27164, v27165, v27166, 1, v27181, v27174, v27173, v27175, v27176, 1000, v27167, v27179, v27180, v27170, v27182, v27183, v27184, v27185, v27186, 0, 3, 1001, 2, 4) :|: 0 = 0
f_2403(v27162, v27163, v27164, v27165, v27166, 1, v27181, v27174, v27173, v27175, v27176, 1000, v27167, v27179, v27180, v27170, v27182, v27183, v27184, v27185, v27186, 0, 3, 1001, 2, 4) -> f_2406(v27162, v27163, v27164, v27165, v27166, 1, v27181, v27356, v27173, v27175, v27176, 1000, v27167, v27179, v27180, v27170, v27182, v27183, v27184, v27185, v27186, 0, 3, 1001, 2, 4) :|: v27356 = v27181 * v27181
f_2406(v27162, v27163, v27164, v27165, v27166, 1, v27181, v27356, v27173, v27175, v27176, 1000, v27167, v27179, v27180, v27170, v27182, v27183, v27184, v27185, v27186, 0, 3, 1001, 2, 4) -> f_2409(v27162, v27163, v27164, v27165, v27166, 1, v27181, v27356, v27175, v27176, v27173, 1000, v27167, v27179, v27180, v27170, v27182, v27183, v27184, v27185, v27186, 0, 3, 1001, 2, 4) :|: 0 = 0
f_2409(v27162, v27163, v27164, v27165, v27166, 1, v27181, v27356, v27175, v27176, v27173, 1000, v27167, v27179, v27180, v27170, v27182, v27183, v27184, v27185, v27186, 0, 3, 1001, 2, 4) -> f_2412(v27162, v27163, v27164, v27165, v27166, 1, v27181, v27356, v27649, v27176, v27173, 1000, v27167, v27179, v27180, v27170, v27182, v27183, v27184, v27185, v27186, 0, 3, 1001, 2, 4) :|: v27649 = v27356 * v27181
f_2412(v27162, v27163, v27164, v27165, v27166, 1, v27181, v27356, v27649, v27176, v27173, 1000, v27167, v27179, v27180, v27170, v27182, v27183, v27184, v27185, v27186, 0, 3, 1001, 2, 4) -> f_2415(v27162, v27163, v27164, v27165, v27166, 1, v27181, v27356, v27649, v27688, v27173, 1000, v27167, v27179, v27180, v27170, v27182, v27183, v27184, v27185, v27186, 0, 3, 1001, 2, 4) :|: v27688 = 1 + v27649
f_2415(v27162, v27163, v27164, v27165, v27166, 1, v27181, v27356, v27649, v27688, v27173, 1000, v27167, v27179, v27180, v27170, v27182, v27183, v27184, v27185, v27186, 0, 3, 1001, 2, 4) -> f_2417(v27162, v27163, v27164, v27165, v27166, 1, v27181, v27356, v27649, v27688, v27173, 1000, v27167, v27179, v27180, v27170, v27182, v27183, v27184, v27185, v27186, 0, 3, 1001, 2, 4) :|: 1 != v27688
f_2417(v27162, v27163, v27164, v27165, v27166, 1, v27181, v27356, v27649, v27688, v27173, 1000, v27167, v27179, v27180, v27170, v27182, v27183, v27184, v27185, v27186, 0, 3, 1001, 2, 4) -> f_2420(v27162, v27163, v27164, v27165, v27166, 1, v27181, v27356, v27649, v27688, v27173, 1000, v27167, v27179, v27180, v27170, v27182, v27183, v27184, v27185, v27186, 0, 3, 1001, 2, 4) :|: 0 = 0
f_2420(v27162, v27163, v27164, v27165, v27166, 1, v27181, v27356, v27649, v27688, v27173, 1000, v27167, v27179, v27180, v27170, v27182, v27183, v27184, v27185, v27186, 0, 3, 1001, 2, 4) -> f_2423(v27162, v27163, v27164, v27165, v27166, 1, v27181, v27356, v27649, v27688, v27173, 1000, v27167, v27179, v27180, v27170, v27182, v27183, v27184, v27185, v27186, 0, 3, 1001, 2, 4) :|: TRUE
f_2423(v27162, v27163, v27164, v27165, v27166, 1, v27181, v27356, v27649, v27688, v27173, 1000, v27167, v27179, v27180, v27170, v27182, v27183, v27184, v27185, v27186, 0, 3, 1001, 2, 4) -> f_2426(v27162, v27163, v27164, v27165, v27166, 1, v27181, v27356, v27649, v27688, 1000, v27167, v27179, v27180, v27170, v27173, v27182, v27183, v27184, v27185, v27186, 0, 3, 1001, 2, 4) :|: 0 = 0
f_2426(v27162, v27163, v27164, v27165, v27166, 1, v27181, v27356, v27649, v27688, 1000, v27167, v27179, v27180, v27170, v27173, v27182, v27183, v27184, v27185, v27186, 0, 3, 1001, 2, 4) -> f_2429(v27162, v27163, v27164, v27165, v27166, 1, v27181, v27356, v27649, v27688, 1000, v27167, v27179, v27180, v27170, v27173, v27182, v27183, v27184, v27185, v27186, 0, 3, 1001, 2, 4) :|: 0 = 0
f_2429(v27162, v27163, v27164, v27165, v27166, 1, v27181, v27356, v27649, v27688, 1000, v27167, v27179, v27180, v27170, v27173, v27182, v27183, v27184, v27185, v27186, 0, 3, 1001, 2, 4) -> f_2431(v27162, v27163, v27164, v27165, v27166, 1, v27181, v27356, v27649, v27688, 1000, v27167, v27179, v27180, v27170, v27173, v27182, v27183, v27184, v27185, v27186, 0, 3, 999, 1001, 2, 4) :|: v27181 <= 1000 && v27173 <= 999
f_2431(v27162, v27163, v27164, v27165, v27166, 1, v27181, v27356, v27649, v27688, 1000, v27167, v27179, v27180, v27170, v27173, v27182, v27183, v27184, v27185, v27186, 0, 3, 999, 1001, 2, 4) -> f_2434(v27162, v27163, v27164, v27165, v27166, 1, v27181, v27356, v27649, v27688, 1000, v27167, v27179, v27180, v27170, v27173, v27182, v27183, v27184, v27185, v27186, 0, 3, 999, 1001, 2, 4) :|: 0 = 0
f_2434(v27162, v27163, v27164, v27165, v27166, 1, v27181, v27356, v27649, v27688, 1000, v27167, v27179, v27180, v27170, v27173, v27182, v27183, v27184, v27185, v27186, 0, 3, 999, 1001, 2, 4) -> f_2437(v27162, v27163, v27164, v27165, v27166, 1, v27181, v27356, v27649, v27688, 1000, v27167, v27179, v27180, v27170, v27173, v27182, v27183, v27184, v27185, v27186, 0, 3, 999, 1001, 2, 4) :|: 0 = 0
f_2437(v27162, v27163, v27164, v27165, v27166, 1, v27181, v27356, v27649, v27688, 1000, v27167, v27179, v27180, v27170, v27173, v27182, v27183, v27184, v27185, v27186, 0, 3, 999, 1001, 2, 4) -> f_2440(v27162, v27163, v27164, v27165, v27166, 1, v27181, v27356, v27649, v27688, 1000, v27167, v27179, v27180, v27170, v27173, v27182, v27183, v27184, v27185, v27186, 0, 3, 999, 1001, 2, 4) :|: TRUE
f_2440(v27162, v27163, v27164, v27165, v27166, 1, v27181, v27356, v27649, v27688, 1000, v27167, v27179, v27180, v27170, v27173, v27182, v27183, v27184, v27185, v27186, 0, 3, 999, 1001, 2, 4) -> f_2443(v27162, v27163, v27164, v27165, v27166, 1, v27181, v27356, v27649, v27688, 1000, v27179, v27180, v27170, v27173, v27182, v27183, v27184, v27185, v27186, 0, 3, 999, 1001, 2, 4) :|: 0 = 0
f_2443(v27162, v27163, v27164, v27165, v27166, 1, v27181, v27356, v27649, v27688, 1000, v27179, v27180, v27170, v27173, v27182, v27183, v27184, v27185, v27186, 0, 3, 999, 1001, 2, 4) -> f_2445(v27162, v27163, v27164, v27165, v27166, 1, v27181, v27356, v27649, v27688, 1000, 2, v27179, v27180, v27170, v27173, v27182, v27183, v27184, v27185, v27186, 0, 3, 999, 1001, 4) :|: 0 = 0
f_2445(v27162, v27163, v27164, v27165, v27166, 1, v27181, v27356, v27649, v27688, 1000, 2, v27179, v27180, v27170, v27173, v27182, v27183, v27184, v27185, v27186, 0, 3, 999, 1001, 4) -> f_2446(v27162, v27163, v27164, v27165, v27166, 1, v27181, v27356, v27649, v27688, 1000, 2, v27179, v27180, v27170, v27173, v27182, v27183, v27184, v27185, v27186, 0, 3, 999, 1001, 4) :|: TRUE
f_2446(v27162, v27163, v27164, v27165, v27166, 1, v27181, v27356, v27649, v27688, 1000, 2, v27179, v27180, v27170, v27173, v27182, v27183, v27184, v27185, v27186, 0, 3, 999, 1001, 4) -> f_2447(v27162, v27163, v27164, v27165, v27166, 1, v27181, v27356, v27649, v27688, 1000, 2, v27180, v27170, v27173, v27182, v27183, v27184, v27185, v27186, 0, 3, 999, 1001, 4) :|: 0 = 0
f_2447(v27162, v27163, v27164, v27165, v27166, 1, v27181, v27356, v27649, v27688, 1000, 2, v27180, v27170, v27173, v27182, v27183, v27184, v27185, v27186, 0, 3, 999, 1001, 4) -> f_2448(v27162, v27163, v27164, v27165, v27166, 1, v27181, v27356, v27649, v27688, 1000, 2, v27180, v27170, v27173, v27182, v27183, v27184, v27185, v27186, 0, 3, 999, 1001, 4) :|: 0 = 0
f_2448(v27162, v27163, v27164, v27165, v27166, 1, v27181, v27356, v27649, v27688, 1000, 2, v27180, v27170, v27173, v27182, v27183, v27184, v27185, v27186, 0, 3, 999, 1001, 4) -> f_2449(v27162, v27163, v27164, v27165, v27166, 1, v27181, v27356, v27649, v27688, 1000, 2, 0, v27180, v27170, v27173, v27182, v27183, v27184, v27185, v27186, 3, 999, 1001, 4) :|: 0 = 0
f_2449(v27162, v27163, v27164, v27165, v27166, 1, v27181, v27356, v27649, v27688, 1000, 2, 0, v27180, v27170, v27173, v27182, v27183, v27184, v27185, v27186, 3, 999, 1001, 4) -> f_2450(v27162, v27163, v27164, v27165, v27166, 1, v27181, v27356, v27649, v27688, 1000, 2, 0, v27180, v27170, v27173, v27182, v27183, v27184, v27185, v27186, 3, 999, 1001, 4) :|: TRUE
f_2450(v27162, v27163, v27164, v27165, v27166, 1, v27181, v27356, v27649, v27688, 1000, 2, 0, v27180, v27170, v27173, v27182, v27183, v27184, v27185, v27186, 3, 999, 1001, 4) -> f_2239(v27162, v27163, v27164, v27165, v27166, 1, 1, 1, 1, v27181, v27356, v27649, v27688, 1000, 2, 0, v27180, v27170, v27180, v27173, v27182, v27183, v27184, v27185, v27186, 3, 999, 2, 1001, 4) :|: TRUE
f_2239(v23895, v23896, v23897, v23898, v23899, v23900, v23901, v23902, 1, v23904, v23905, v23906, v23907, 1000, v23909, 0, v23911, v23912, v23913, v23914, v23915, v23916, v23917, v23918, v23919, 3, 999, 2, 1001, 4) -> f_2242(v23895, v23896, v23897, v23898, v23899, v23900, v23901, v23902, 1, v23904, v23905, v23906, v23907, 1000, v23909, 0, v23912, v23913, v23914, v23915, v23916, v23917, v23918, v23919, 3, 999, 2, 4) :|: 0 = 0
f_2242(v23895, v23896, v23897, v23898, v23899, v23900, v23901, v23902, 1, v23904, v23905, v23906, v23907, 1000, v23909, 0, v23912, v23913, v23914, v23915, v23916, v23917, v23918, v23919, 3, 999, 2, 4) -> f_2245(v23895, v23896, v23897, v23898, v23899, v23900, v23901, v23902, 1, v23904, v23905, v23906, v23907, 1000, v23909, 0, v23912, v23913, v23914, v23915, v23916, v23917, v23918, v23919, 3, 999, 2, 4) :|: 0 = 0
f_2245(v23895, v23896, v23897, v23898, v23899, v23900, v23901, v23902, 1, v23904, v23905, v23906, v23907, 1000, v23909, 0, v23912, v23913, v23914, v23915, v23916, v23917, v23918, v23919, 3, 999, 2, 4) -> f_2248(v23895, v23896, v23897, v23898, v23899, v23900, v23901, v23902, 1, v23904, v23905, v23906, v23907, 1000, v23909, 0, v23912, v23913, v23914, v23915, v23916, v23917, v23918, v23919, 3, 999, 2, 4) :|: 0 = 0
f_2248(v23895, v23896, v23897, v23898, v23899, v23900, v23901, v23902, 1, v23904, v23905, v23906, v23907, 1000, v23909, 0, v23912, v23913, v23914, v23915, v23916, v23917, v23918, v23919, 3, 999, 2, 4) -> f_2252(v23895, v23896, v23897, v23898, v23899, v23900, v23901, v23902, 1, v23904, v23905, v23906, v23907, 1000, v23909, 0, v23912, v23913, v23914, v23915, v23916, v23917, v23918, v23919, 3, 999, 2, 4) :|: TRUE
f_2252(v23895, v23896, v23897, v23898, v23899, v23900, v23901, v23902, 1, v23904, v23905, v23906, v23907, 1000, v23909, 0, v23912, v23913, v23914, v23915, v23916, v23917, v23918, v23919, 3, 999, 2, 4) -> f_2253(v23895, v23896, v23897, v23898, v23899, v23900, v23901, v23902, 1, 1, 1, v23904, v23905, v23906, v23907, 1, 1000, v23909, 0, v23912, v23913, v23914, v23915, v23916, v23917, v23918, v23919, 3, 999, 2, 4) :|: TRUE
f_2359(v24105, v24106, v24107, v24108, v24109, 1000, 1000000, 1000000000, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1001, v26461, 0, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) -> f_2362(v24105, v24106, v24107, v24108, v24109, 1000, 1000000, 1000000000, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1001, v26461, 0, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) :|: 0 = 0
f_2362(v24105, v24106, v24107, v24108, v24109, 1000, 1000000, 1000000000, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1001, v26461, 0, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) -> f_2365(v24105, v24106, v24107, v24108, v24109, 1000, 1000000, 1000000000, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1001, v26461, 0, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) :|: TRUE
f_2365(v24105, v24106, v24107, v24108, v24109, 1000, 1000000, 1000000000, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1001, v26461, 0, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) -> f_2366(v24105, v24106, v24107, v24108, v24109, 1000, 1000000, 1000000000, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1000, 1001, v26461, 0, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 1001, 4) :|: TRUE
f_2330(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1000, v25835, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 2, 999, 4) -> f_2333(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1000, v25835, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 2, 999, 4) :|: 0 = 0
f_2333(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1000, v25835, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 2, 999, 4) -> f_2336(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1000, v25835, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 2, 999, 4) :|: TRUE
f_2336(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1000, v25835, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 2, 999, 4) -> f_2337(v24105, v24106, v24107, v24108, v24109, v24122, v24331, v24548, v24113, v24114, v24115, v24116, v24117, v24118, v24549, 1, 1000, v25835, 0, v24124, v24125, v24126, v24127, v24128, v24129, v24130, v24131, 3, 999, 2, 4) :|: TRUE
f_2232(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v23693, 0, v22891, v22902, v22903, v22894, v22905, v22906, v22907, v22908, v22909, 3, 1001, 999, 2, 4) -> f_2235(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v23693, 0, v22891, v22902, v22903, v22894, v22905, v22906, v22907, v22908, v22909, 3, 1001, 999, 2, 4) :|: 0 = 0
f_2235(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v23693, 0, v22891, v22902, v22903, v22894, v22905, v22906, v22907, v22908, v22909, 3, 1001, 999, 2, 4) -> f_2238(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v23693, 0, v22891, v22902, v22903, v22894, v22905, v22906, v22907, v22908, v22909, 3, 1001, 999, 2, 4) :|: TRUE
f_2238(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v23693, 0, v22891, v22902, v22903, v22894, v22905, v22906, v22907, v22908, v22909, 3, 1001, 999, 2, 4) -> f_2239(v22883, v22884, v22885, v22886, v22887, v22900, v22997, v22998, 1, v22904, v23000, v23078, v23104, 1000, v23693, 0, v22891, v22902, v22903, v22894, v22905, v22906, v22907, v22908, v22909, 3, 999, 2, 1001, 4) :|: TRUE
Combined rules. Obtained 17 rulesP rules:
f_2343(v26274:0, v26275:0, v26276:0, v26277:0, v26278:0, v26279:0, v26280:0, v26281:0, v26282:0, v26283:0, v26284:0, v26285:0, v26286:0, v26287:0, v26288:0, 1, 1000, v26291:0, 0, v26293:0, v26294:0, v26295:0, v26296:0, v26297:0, v26298:0, v26299:0, v26300:0, 3, 999, 2, 4) -> f_2343(v26274:0, v26275:0, v26276:0, v26277:0, v26278:0, 1, 1, 1, 2, 4, 8, 1 + v26285:0, (1 + v26285:0) * (1 + v26285:0), (1 + v26285:0) * (1 + v26285:0) * (1 + v26285:0), 8 + (1 + v26285:0) * (1 + v26285:0) * (1 + v26285:0), 1, 1000, 2, 0, 1, 2, v26285:0, v26296:0, v26297:0, v26298:0, v26299:0, v26300:0, 3, 999, 2, 4) :|: v26291:0 > 999 && v26291:0 * v26291:0 * v26291:0 < 1 + (1 + v26285:0) * (1 + v26285:0) * (1 + v26285:0) && v26285:0 < 1000 && (1 + v26285:0) * (1 + v26285:0) * (1 + v26285:0) > -7 && v26282:0 > 1000 && v26285:0 < 1001 && v26285:0 > 1
f_2343(v26274:0, v26275:0, v26276:0, v26277:0, v26278:0, v26279:0, v26280:0, v26281:0, v26282:0, v26283:0, v26284:0, v26285:0, v26286:0, v26287:0, v26288:0, 1, 1000, v26291:0, 0, v26293:0, v26294:0, v26295:0, v26296:0, v26297:0, v26298:0, v26299:0, v26300:0, 3, 999, 2, 4) -> f_2343(v26274:0, v26275:0, v26276:0, v26277:0, v26278:0, 1, 1, 1, 2, 4, 8, 1 + v26285:0, (1 + v26285:0) * (1 + v26285:0), (1 + v26285:0) * (1 + v26285:0) * (1 + v26285:0), 8 + (1 + v26285:0) * (1 + v26285:0) * (1 + v26285:0), 1, 1000, 2, 0, 1, 2, v26285:0, v26296:0, v26297:0, v26298:0, v26299:0, v26300:0, 3, 999, 2, 4) :|: v26291:0 > 999 && v26291:0 * v26291:0 * v26291:0 < 1 + (1 + v26285:0) * (1 + v26285:0) * (1 + v26285:0) && v26285:0 < 1000 && (1 + v26285:0) * (1 + v26285:0) * (1 + v26285:0) < -7 && v26282:0 > 1000 && v26285:0 < 1001 && v26285:0 > 1
f_2343(v26274:0, v26275:0, v26276:0, v26277:0, v26278:0, v26279:0, v26280:0, v26281:0, v26282:0, v26283:0, v26284:0, v26285:0, v26286:0, v26287:0, v26288:0, 1, 1000, v26291:0, 0, v26293:0, v26294:0, v26295:0, v26296:0, v26297:0, v26298:0, v26299:0, v26300:0, 3, 999, 2, 4) -> f_2343(v26274:0, v26275:0, v26276:0, v26277:0, v26278:0, 1, 1, 1, 2, 4, 8, 1 + v26285:0, (1 + v26285:0) * (1 + v26285:0), (1 + v26285:0) * (1 + v26285:0) * (1 + v26285:0), 8 + (1 + v26285:0) * (1 + v26285:0) * (1 + v26285:0), 1, 1000, 2, 0, 1, 2, v26285:0, v26296:0, v26297:0, v26298:0, v26299:0, v26300:0, 3, 999, 2, 4) :|: v26291:0 > 999 && v26291:0 * v26291:0 * v26291:0 > 1 + (1 + v26285:0) * (1 + v26285:0) * (1 + v26285:0) && v26285:0 < 1000 && (1 + v26285:0) * (1 + v26285:0) * (1 + v26285:0) > -7 && v26282:0 > 1000 && v26285:0 < 1001 && v26285:0 > 1
f_2343(v26274:0, v26275:0, v26276:0, v26277:0, v26278:0, v26279:0, v26280:0, v26281:0, v26282:0, v26283:0, v26284:0, v26285:0, v26286:0, v26287:0, v26288:0, 1, 1000, v26291:0, 0, v26293:0, v26294:0, v26295:0, v26296:0, v26297:0, v26298:0, v26299:0, v26300:0, 3, 999, 2, 4) -> f_2343(v26274:0, v26275:0, v26276:0, v26277:0, v26278:0, 1, 1, 1, 2, 4, 8, 1 + v26285:0, (1 + v26285:0) * (1 + v26285:0), (1 + v26285:0) * (1 + v26285:0) * (1 + v26285:0), 8 + (1 + v26285:0) * (1 + v26285:0) * (1 + v26285:0), 1, 1000, 2, 0, 1, 2, v26285:0, v26296:0, v26297:0, v26298:0, v26299:0, v26300:0, 3, 999, 2, 4) :|: v26291:0 > 999 && v26291:0 * v26291:0 * v26291:0 > 1 + (1 + v26285:0) * (1 + v26285:0) * (1 + v26285:0) && v26285:0 < 1000 && (1 + v26285:0) * (1 + v26285:0) * (1 + v26285:0) < -7 && v26282:0 > 1000 && v26285:0 < 1001 && v26285:0 > 1
f_2343(v26274:0, v26275:0, v26276:0, v26277:0, v26278:0, v26279:0, v26280:0, v26281:0, v26282:0, v26282:0 * v26282:0, v26282:0 * v26282:0 * v26282:0, v26285:0, v26285:0 * v26285:0, v26285:0 * v26285:0 * v26285:0, v26288:0, 1, 1000, v26291:0, 0, v26293:0, v26294:0, v26295:0, v26296:0, v26297:0, v26298:0, v26299:0, v26300:0, 3, 999, 2, 4) -> f_2327(v26274:0, v26275:0, v26276:0, v26277:0, v26278:0, v26291:0, v26291:0 * v26291:0, v26291:0 * v26291:0 * v26291:0, v26282:0, v26282:0 * v26282:0, v26282:0 * v26282:0 * v26282:0, v26285:0, v26285:0 * v26285:0, v26285:0 * v26285:0 * v26285:0, v26282:0 * v26282:0 * v26282:0 + v26285:0 * v26285:0 * v26285:0, 1, 1000, 1 + v26291:0, 0, v26293:0, v26294:0, v26295:0, v26296:0, v26297:0, v26298:0, v26299:0, v26300:0, 3, 2, 999, 4, 1001) :|: v26282:0 < 1001 && v26291:0 * v26291:0 * v26291:0 < v26282:0 * v26282:0 * v26282:0 + v26285:0 * v26285:0 * v26285:0 && v26295:0 < 1000 && v26285:0 < 1001 && v26291:0 < 1001 && v26291:0 > 1
f_2343(v26274:0, v26275:0, v26276:0, v26277:0, v26278:0, v26279:0, v26280:0, v26281:0, v26282:0, v26282:0 * v26282:0, v26282:0 * v26282:0 * v26282:0, v26285:0, v26285:0 * v26285:0, v26285:0 * v26285:0 * v26285:0, v26288:0, 1, 1000, v26291:0, 0, v26293:0, v26294:0, v26295:0, v26296:0, v26297:0, v26298:0, v26299:0, v26300:0, 3, 999, 2, 4) -> f_2327(v26274:0, v26275:0, v26276:0, v26277:0, v26278:0, v26291:0, v26291:0 * v26291:0, v26291:0 * v26291:0 * v26291:0, v26282:0, v26282:0 * v26282:0, v26282:0 * v26282:0 * v26282:0, v26285:0, v26285:0 * v26285:0, v26285:0 * v26285:0 * v26285:0, v26282:0 * v26282:0 * v26282:0 + v26285:0 * v26285:0 * v26285:0, 1, 1000, 1 + v26291:0, 0, v26293:0, v26294:0, v26295:0, v26296:0, v26297:0, v26298:0, v26299:0, v26300:0, 3, 2, 999, 4, 1001) :|: v26282:0 < 1001 && v26291:0 * v26291:0 * v26291:0 > v26282:0 * v26282:0 * v26282:0 + v26285:0 * v26285:0 * v26285:0 && v26295:0 < 1000 && v26285:0 < 1001 && v26291:0 < 1001 && v26291:0 > 1
f_2343(v26274:0, v26275:0, v26276:0, v26277:0, v26278:0, v26279:0, v26280:0, v26281:0, v26282:0, v26283:0, v26284:0, v26285:0, v26286:0, v26287:0, v26288:0, 1, 1000, v26291:0, 0, v26293:0, v26294:0, v26295:0, v26296:0, v26297:0, v26298:0, v26299:0, v26300:0, 3, 999, 2, 4) -> f_2327(v26274:0, v26275:0, v26276:0, v26277:0, v26278:0, 1 + v26291:0, (1 + v26291:0) * (1 + v26291:0), (1 + v26291:0) * (1 + v26291:0) * (1 + v26291:0), 1, 1, 1, 1 + v26285:0, (1 + v26285:0) * (1 + v26285:0), (1 + v26285:0) * (1 + v26285:0) * (1 + v26285:0), 1 + (1 + v26285:0) * (1 + v26285:0) * (1 + v26285:0), 1, 1000, 1 + (1 + v26291:0), 0, v26293:0, v26294:0, v26285:0, v26296:0, v26297:0, v26298:0, v26299:0, v26300:0, 3, 2, 999, 4, 1001) :|: v26291:0 > 1 && v26291:0 * v26291:0 * v26291:0 < 1 + (1 + v26285:0) * (1 + v26285:0) * (1 + v26285:0) && (1 + v26291:0) * (1 + v26291:0) * (1 + v26291:0) < 1 + (1 + v26285:0) * (1 + v26285:0) * (1 + v26285:0) && v26285:0 < 1000 && v26282:0 > 1000 && v26285:0 > 1 && v26285:0 < 1001 && v26291:0 < 1000
f_2343(v26274:0, v26275:0, v26276:0, v26277:0, v26278:0, v26279:0, v26280:0, v26281:0, v26282:0, v26283:0, v26284:0, v26285:0, v26286:0, v26287:0, v26288:0, 1, 1000, v26291:0, 0, v26293:0, v26294:0, v26295:0, v26296:0, v26297:0, v26298:0, v26299:0, v26300:0, 3, 999, 2, 4) -> f_2327(v26274:0, v26275:0, v26276:0, v26277:0, v26278:0, 1 + v26291:0, (1 + v26291:0) * (1 + v26291:0), (1 + v26291:0) * (1 + v26291:0) * (1 + v26291:0), 1, 1, 1, 1 + v26285:0, (1 + v26285:0) * (1 + v26285:0), (1 + v26285:0) * (1 + v26285:0) * (1 + v26285:0), 1 + (1 + v26285:0) * (1 + v26285:0) * (1 + v26285:0), 1, 1000, 1 + (1 + v26291:0), 0, v26293:0, v26294:0, v26285:0, v26296:0, v26297:0, v26298:0, v26299:0, v26300:0, 3, 2, 999, 4, 1001) :|: v26291:0 > 1 && v26291:0 * v26291:0 * v26291:0 < 1 + (1 + v26285:0) * (1 + v26285:0) * (1 + v26285:0) && (1 + v26291:0) * (1 + v26291:0) * (1 + v26291:0) > 1 + (1 + v26285:0) * (1 + v26285:0) * (1 + v26285:0) && v26285:0 < 1000 && v26282:0 > 1000 && v26285:0 > 1 && v26285:0 < 1001 && v26291:0 < 1000
f_2343(v26274:0, v26275:0, v26276:0, v26277:0, v26278:0, v26279:0, v26280:0, v26281:0, v26282:0, v26283:0, v26284:0, v26285:0, v26286:0, v26287:0, v26288:0, 1, 1000, v26291:0, 0, v26293:0, v26294:0, v26295:0, v26296:0, v26297:0, v26298:0, v26299:0, v26300:0, 3, 999, 2, 4) -> f_2327(v26274:0, v26275:0, v26276:0, v26277:0, v26278:0, 1 + v26291:0, (1 + v26291:0) * (1 + v26291:0), (1 + v26291:0) * (1 + v26291:0) * (1 + v26291:0), 1, 1, 1, 1 + v26285:0, (1 + v26285:0) * (1 + v26285:0), (1 + v26285:0) * (1 + v26285:0) * (1 + v26285:0), 1 + (1 + v26285:0) * (1 + v26285:0) * (1 + v26285:0), 1, 1000, 1 + (1 + v26291:0), 0, v26293:0, v26294:0, v26285:0, v26296:0, v26297:0, v26298:0, v26299:0, v26300:0, 3, 2, 999, 4, 1001) :|: v26291:0 > 1 && v26291:0 * v26291:0 * v26291:0 > 1 + (1 + v26285:0) * (1 + v26285:0) * (1 + v26285:0) && (1 + v26291:0) * (1 + v26291:0) * (1 + v26291:0) < 1 + (1 + v26285:0) * (1 + v26285:0) * (1 + v26285:0) && v26285:0 < 1000 && v26282:0 > 1000 && v26285:0 > 1 && v26285:0 < 1001 && v26291:0 < 1000
f_2343(v26274:0, v26275:0, v26276:0, v26277:0, v26278:0, v26279:0, v26280:0, v26281:0, v26282:0, v26283:0, v26284:0, v26285:0, v26286:0, v26287:0, v26288:0, 1, 1000, v26291:0, 0, v26293:0, v26294:0, v26295:0, v26296:0, v26297:0, v26298:0, v26299:0, v26300:0, 3, 999, 2, 4) -> f_2327(v26274:0, v26275:0, v26276:0, v26277:0, v26278:0, 1 + v26291:0, (1 + v26291:0) * (1 + v26291:0), (1 + v26291:0) * (1 + v26291:0) * (1 + v26291:0), 1, 1, 1, 1 + v26285:0, (1 + v26285:0) * (1 + v26285:0), (1 + v26285:0) * (1 + v26285:0) * (1 + v26285:0), 1 + (1 + v26285:0) * (1 + v26285:0) * (1 + v26285:0), 1, 1000, 1 + (1 + v26291:0), 0, v26293:0, v26294:0, v26285:0, v26296:0, v26297:0, v26298:0, v26299:0, v26300:0, 3, 2, 999, 4, 1001) :|: v26291:0 > 1 && v26291:0 * v26291:0 * v26291:0 > 1 + (1 + v26285:0) * (1 + v26285:0) * (1 + v26285:0) && (1 + v26291:0) * (1 + v26291:0) * (1 + v26291:0) > 1 + (1 + v26285:0) * (1 + v26285:0) * (1 + v26285:0) && v26285:0 < 1000 && v26282:0 > 1000 && v26285:0 > 1 && v26285:0 < 1001 && v26291:0 < 1000
f_2327(v24105:0, v24106:0, v24107:0, v24108:0, v24109:0, 1000, 1000000, 1000000000, v24113:0, v24114:0, v24115:0, v24116:0, v24116:0 * v24116:0, v24116:0 * v24116:0 * v24116:0, v24549:0, 1, 1000, 1001, 0, v24124:0, v24125:0, v24126:0, v24127:0, v24128:0, v24129:0, v24130:0, v24131:0, 3, 2, 999, 4, 1001) -> f_2343(v24105:0, v24106:0, v24107:0, v24108:0, v24109:0, 1, 1, 1, 1 + v24113:0, (1 + v24113:0) * (1 + v24113:0), (1 + v24113:0) * (1 + v24113:0) * (1 + v24113:0), v24116:0, v24116:0 * v24116:0, v24116:0 * v24116:0 * v24116:0, (1 + v24113:0) * (1 + v24113:0) * (1 + v24113:0) + v24116:0 * v24116:0 * v24116:0, 1, 1000, 2, 0, v24113:0, 1 + v24113:0, v24126:0, v24127:0, v24128:0, v24129:0, v24130:0, v24131:0, 3, 999, 2, 4) :|: (1 + v24113:0) * (1 + v24113:0) * (1 + v24113:0) + v24116:0 * v24116:0 * v24116:0 > 1 && v24113:0 > 0 && v24113:0 < 1001 && v24113:0 < 1000
f_2327(v24105:0, v24106:0, v24107:0, v24108:0, v24109:0, 1000, 1000000, 1000000000, v24113:0, v24114:0, v24115:0, v24116:0, v24116:0 * v24116:0, v24116:0 * v24116:0 * v24116:0, v24549:0, 1, 1000, 1001, 0, v24124:0, v24125:0, v24126:0, v24127:0, v24128:0, v24129:0, v24130:0, v24131:0, 3, 2, 999, 4, 1001) -> f_2343(v24105:0, v24106:0, v24107:0, v24108:0, v24109:0, 1, 1, 1, 1 + v24113:0, (1 + v24113:0) * (1 + v24113:0), (1 + v24113:0) * (1 + v24113:0) * (1 + v24113:0), v24116:0, v24116:0 * v24116:0, v24116:0 * v24116:0 * v24116:0, (1 + v24113:0) * (1 + v24113:0) * (1 + v24113:0) + v24116:0 * v24116:0 * v24116:0, 1, 1000, 2, 0, v24113:0, 1 + v24113:0, v24126:0, v24127:0, v24128:0, v24129:0, v24130:0, v24131:0, 3, 999, 2, 4) :|: (1 + v24113:0) * (1 + v24113:0) * (1 + v24113:0) + v24116:0 * v24116:0 * v24116:0 < 1 && v24113:0 > 0 && v24113:0 < 1001 && v24113:0 < 1000
f_2327(v24105:0, v24106:0, v24107:0, v24108:0, v24109:0, v24122:0, v24331:0, v24548:0, v24113:0, v24114:0, v24115:0, v24116:0, v24117:0, v24118:0, v24549:0, 1, 1000, v25835:0, 0, v24124:0, v24125:0, v24126:0, v24127:0, v24128:0, v24129:0, v24130:0, v24131:0, 3, 2, 999, 4, 1001) -> f_2343(v24105:0, v24106:0, v24107:0, v24108:0, v24109:0, v24122:0, v24331:0, v24548:0, v24113:0, v24114:0, v24115:0, v24116:0, v24117:0, v24118:0, v24549:0, 1, 1000, v25835:0, 0, v24124:0, v24125:0, v24126:0, v24127:0, v24128:0, v24129:0, v24130:0, v24131:0, 3, 999, 2, 4) :|: v25835:0 < 1001 && v24122:0 < 1000
f_2327(v24105:0, v24106:0, v24107:0, v24108:0, v24109:0, 1000, 1000000, 1000000000, 1000, 1000000, 1000000000, v24116:0, v24117:0, v24118:0, v24549:0, 1, 1000, 1001, 0, v24124:0, v24125:0, v24126:0, v24127:0, v24128:0, v24129:0, v24130:0, v24131:0, 3, 2, 999, 4, 1001) -> f_2327(v24105:0, v24106:0, v24107:0, v24108:0, v24109:0, 2, 4, 8, 1, 1, 1, 1 + v24116:0, (1 + v24116:0) * (1 + v24116:0), (1 + v24116:0) * (1 + v24116:0) * (1 + v24116:0), 1 + (1 + v24116:0) * (1 + v24116:0) * (1 + v24116:0), 1, 1000, 3, 0, 1000, 1001, v24116:0, v24127:0, v24128:0, v24129:0, v24130:0, v24131:0, 3, 2, 999, 4, 1001) :|: 7 < (1 + v24116:0) * (1 + v24116:0) * (1 + v24116:0) && v24116:0 > 1 && v24116:0 < 1001 && v24116:0 < 1000
f_2327(v24105:0, v24106:0, v24107:0, v24108:0, v24109:0, 1000, 1000000, 1000000000, 1000, 1000000, 1000000000, v24116:0, v24117:0, v24118:0, v24549:0, 1, 1000, 1001, 0, v24124:0, v24125:0, v24126:0, v24127:0, v24128:0, v24129:0, v24130:0, v24131:0, 3, 2, 999, 4, 1001) -> f_2327(v24105:0, v24106:0, v24107:0, v24108:0, v24109:0, 2, 4, 8, 1, 1, 1, 1 + v24116:0, (1 + v24116:0) * (1 + v24116:0), (1 + v24116:0) * (1 + v24116:0) * (1 + v24116:0), 1 + (1 + v24116:0) * (1 + v24116:0) * (1 + v24116:0), 1, 1000, 3, 0, 1000, 1001, v24116:0, v24127:0, v24128:0, v24129:0, v24130:0, v24131:0, 3, 2, 999, 4, 1001) :|: v24116:0 > 1 && v24116:0 < 1001 && (1 + v24116:0) * (1 + v24116:0) * (1 + v24116:0) > 0 && v24116:0 < 1000 && 7 > (1 + v24116:0) * (1 + v24116:0) * (1 + v24116:0)
f_2327(v24105:0, v24106:0, v24107:0, v24108:0, v24109:0, 1000, 1000000, 1000000000, 1000, 1000000, 1000000000, v24116:0, v24117:0, v24118:0, v24549:0, 1, 1000, 1001, 0, v24124:0, v24125:0, v24126:0, v24127:0, v24128:0, v24129:0, v24130:0, v24131:0, 3, 2, 999, 4, 1001) -> f_2327(v24105:0, v24106:0, v24107:0, v24108:0, v24109:0, 2, 4, 8, 1, 1, 1, 1 + v24116:0, (1 + v24116:0) * (1 + v24116:0), (1 + v24116:0) * (1 + v24116:0) * (1 + v24116:0), 1 + (1 + v24116:0) * (1 + v24116:0) * (1 + v24116:0), 1, 1000, 3, 0, 1000, 1001, v24116:0, v24127:0, v24128:0, v24129:0, v24130:0, v24131:0, 3, 2, 999, 4, 1001) :|: v24116:0 > 1 && v24116:0 < 1001 && (1 + v24116:0) * (1 + v24116:0) * (1 + v24116:0) < 0 && v24116:0 < 1000 && 7 < (1 + v24116:0) * (1 + v24116:0) * (1 + v24116:0)
f_2327(v24105:0, v24106:0, v24107:0, v24108:0, v24109:0, 1000, 1000000, 1000000000, 1000, 1000000, 1000000000, v24116:0, v24117:0, v24118:0, v24549:0, 1, 1000, 1001, 0, v24124:0, v24125:0, v24126:0, v24127:0, v24128:0, v24129:0, v24130:0, v24131:0, 3, 2, 999, 4, 1001) -> f_2327(v24105:0, v24106:0, v24107:0, v24108:0, v24109:0, 2, 4, 8, 1, 1, 1, 1 + v24116:0, (1 + v24116:0) * (1 + v24116:0), (1 + v24116:0) * (1 + v24116:0) * (1 + v24116:0), 1 + (1 + v24116:0) * (1 + v24116:0) * (1 + v24116:0), 1, 1000, 3, 0, 1000, 1001, v24116:0, v24127:0, v24128:0, v24129:0, v24130:0, v24131:0, 3, 2, 999, 4, 1001) :|: v24116:0 > 1 && v24116:0 < 1001 && (1 + v24116:0) * (1 + v24116:0) * (1 + v24116:0) < 0 && v24116:0 < 1000 && 7 > (1 + v24116:0) * (1 + v24116:0) * (1 + v24116:0)
Filtered unneeded arguments:
   f_2343(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31) -> f_2343(x9, x10, x11, x12, x13, x14, x18, x22)
   f_2327(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32) -> f_2327(x6, x7, x8, x9, x10, x11, x12, x13, x14, x18, x22)
Removed division, modulo operations, cleaned up constraints. Obtained 17 rules.P rules:
f_2343(v26282:0, v26283:0, v26284:0, v26285:0, v26286:0, v26287:0, v26291:0, v26295:0) -> f_2343(2, 4, 8, 1 + v26285:0, 1 + v26285:0 + (v26285:0 + v26285:0 * v26285:0), 1 + v26285:0 + (v26285:0 + v26285:0 * v26285:0) + (v26285:0 + v26285:0 * v26285:0 + v26285:0 * v26285:0 * (1 + v26285:0)), 2, v26285:0) :|: v26291:0 * v26291:0 * v26291:0 < 1 + (1 + v26285:0 + (v26285:0 + v26285:0 * v26285:0) + (v26285:0 + v26285:0 * v26285:0 + v26285:0 * v26285:0 * (1 + v26285:0))) && v26291:0 > 999 && v26285:0 < 1000 && 1 + v26285:0 + (v26285:0 + v26285:0 * v26285:0) + (v26285:0 + v26285:0 * v26285:0 + v26285:0 * v26285:0 * (1 + v26285:0)) > -7 && v26282:0 > 1000 && v26285:0 > 1 && v26285:0 < 1001
f_2343(v26282:0, v26283:0, v26284:0, v26285:0, v26286:0, v26287:0, v26291:0, v26295:0) -> f_2343(2, 4, 8, 1 + v26285:0, 1 + v26285:0 + (v26285:0 + v26285:0 * v26285:0), 1 + v26285:0 + (v26285:0 + v26285:0 * v26285:0) + (v26285:0 + v26285:0 * v26285:0 + v26285:0 * v26285:0 * (1 + v26285:0)), 2, v26285:0) :|: v26291:0 * v26291:0 * v26291:0 < 1 + (1 + v26285:0 + (v26285:0 + v26285:0 * v26285:0) + (v26285:0 + v26285:0 * v26285:0 + v26285:0 * v26285:0 * (1 + v26285:0))) && v26291:0 > 999 && v26285:0 < 1000 && 1 + v26285:0 + (v26285:0 + v26285:0 * v26285:0) + (v26285:0 + v26285:0 * v26285:0 + v26285:0 * v26285:0 * (1 + v26285:0)) < -7 && v26282:0 > 1000 && v26285:0 > 1 && v26285:0 < 1001
f_2343(v26282:0, v26283:0, v26284:0, v26285:0, v26286:0, v26287:0, v26291:0, v26295:0) -> f_2343(2, 4, 8, 1 + v26285:0, 1 + v26285:0 + (v26285:0 + v26285:0 * v26285:0), 1 + v26285:0 + (v26285:0 + v26285:0 * v26285:0) + (v26285:0 + v26285:0 * v26285:0 + v26285:0 * v26285:0 * (1 + v26285:0)), 2, v26285:0) :|: v26291:0 * v26291:0 * v26291:0 > 1 + (1 + v26285:0 + (v26285:0 + v26285:0 * v26285:0) + (v26285:0 + v26285:0 * v26285:0 + v26285:0 * v26285:0 * (1 + v26285:0))) && v26291:0 > 999 && v26285:0 < 1000 && 1 + v26285:0 + (v26285:0 + v26285:0 * v26285:0) + (v26285:0 + v26285:0 * v26285:0 + v26285:0 * v26285:0 * (1 + v26285:0)) > -7 && v26282:0 > 1000 && v26285:0 > 1 && v26285:0 < 1001
f_2343(v26282:0, v26283:0, v26284:0, v26285:0, v26286:0, v26287:0, v26291:0, v26295:0) -> f_2343(2, 4, 8, 1 + v26285:0, 1 + v26285:0 + (v26285:0 + v26285:0 * v26285:0), 1 + v26285:0 + (v26285:0 + v26285:0 * v26285:0) + (v26285:0 + v26285:0 * v26285:0 + v26285:0 * v26285:0 * (1 + v26285:0)), 2, v26285:0) :|: v26291:0 * v26291:0 * v26291:0 > 1 + (1 + v26285:0 + (v26285:0 + v26285:0 * v26285:0) + (v26285:0 + v26285:0 * v26285:0 + v26285:0 * v26285:0 * (1 + v26285:0))) && v26291:0 > 999 && v26285:0 < 1000 && 1 + v26285:0 + (v26285:0 + v26285:0 * v26285:0) + (v26285:0 + v26285:0 * v26285:0 + v26285:0 * v26285:0 * (1 + v26285:0)) < -7 && v26282:0 > 1000 && v26285:0 > 1 && v26285:0 < 1001
f_2343(v26282:0, times~v26282:0~v26282:0, times~times~v26282:0~v26282:0~v26282:0, v26285:0, times~v26285:0~v26285:0, times~times~v26285:0~v26285:0~v26285:0, v26291:0, v26295:0) -> f_2327(v26291:0, v26291:0 * v26291:0, v26291:0 * v26291:0 * v26291:0, v26282:0, v26282:0 * v26282:0, v26282:0 * v26282:0 * v26282:0, v26285:0, v26285:0 * v26285:0, v26285:0 * v26285:0 * v26285:0, 1 + v26291:0, v26295:0) :|: v26291:0 * v26291:0 * v26291:0 < v26282:0 * v26282:0 * v26282:0 + v26285:0 * v26285:0 * v26285:0 && v26282:0 < 1001 && v26295:0 < 1000 && v26285:0 < 1001 && v26291:0 > 1 && v26291:0 < 1001 && times~v26282:0~v26282:0 = v26282:0 * v26282:0 && times~times~v26282:0~v26282:0~v26282:0 = v26282:0 * v26282:0 * v26282:0 && times~v26285:0~v26285:0 = v26285:0 * v26285:0 && times~times~v26285:0~v26285:0~v26285:0 = v26285:0 * v26285:0 * v26285:0
f_2343(v26282:0, times~v26282:0~v26282:0, times~times~v26282:0~v26282:0~v26282:0, v26285:0, times~v26285:0~v26285:0, times~times~v26285:0~v26285:0~v26285:0, v26291:0, v26295:0) -> f_2327(v26291:0, v26291:0 * v26291:0, v26291:0 * v26291:0 * v26291:0, v26282:0, v26282:0 * v26282:0, v26282:0 * v26282:0 * v26282:0, v26285:0, v26285:0 * v26285:0, v26285:0 * v26285:0 * v26285:0, 1 + v26291:0, v26295:0) :|: v26291:0 * v26291:0 * v26291:0 > v26282:0 * v26282:0 * v26282:0 + v26285:0 * v26285:0 * v26285:0 && v26282:0 < 1001 && v26295:0 < 1000 && v26285:0 < 1001 && v26291:0 > 1 && v26291:0 < 1001 && times~v26282:0~v26282:0 = v26282:0 * v26282:0 && times~times~v26282:0~v26282:0~v26282:0 = v26282:0 * v26282:0 * v26282:0 && times~v26285:0~v26285:0 = v26285:0 * v26285:0 && times~times~v26285:0~v26285:0~v26285:0 = v26285:0 * v26285:0 * v26285:0
f_2343(v26282:0, v26283:0, v26284:0, v26285:0, v26286:0, v26287:0, v26291:0, v26295:0) -> f_2327(1 + v26291:0, 1 + v26291:0 + (v26291:0 + v26291:0 * v26291:0), 1 + v26291:0 + (v26291:0 + v26291:0 * v26291:0) + (v26291:0 + v26291:0 * v26291:0 + v26291:0 * v26291:0 * (1 + v26291:0)), 1, 1, 1, 1 + v26285:0, 1 + v26285:0 + (v26285:0 + v26285:0 * v26285:0), 1 + v26285:0 + (v26285:0 + v26285:0 * v26285:0) + (v26285:0 + v26285:0 * v26285:0 + v26285:0 * v26285:0 * (1 + v26285:0)), 1 + (1 + v26291:0), v26285:0) :|: v26291:0 * v26291:0 * v26291:0 < 1 + (1 + v26285:0 + (v26285:0 + v26285:0 * v26285:0) + (v26285:0 + v26285:0 * v26285:0 + v26285:0 * v26285:0 * (1 + v26285:0))) && v26291:0 > 1 && 1 + v26291:0 + (v26291:0 + v26291:0 * v26291:0) + (v26291:0 + v26291:0 * v26291:0 + v26291:0 * v26291:0 * (1 + v26291:0)) < 1 + (1 + v26285:0 + (v26285:0 + v26285:0 * v26285:0) + (v26285:0 + v26285:0 * v26285:0 + v26285:0 * v26285:0 * (1 + v26285:0))) && v26285:0 < 1000 && v26282:0 > 1000 && v26285:0 > 1 && v26291:0 < 1000 && v26285:0 < 1001
f_2343(v26282:0, v26283:0, v26284:0, v26285:0, v26286:0, v26287:0, v26291:0, v26295:0) -> f_2327(1 + v26291:0, 1 + v26291:0 + (v26291:0 + v26291:0 * v26291:0), 1 + v26291:0 + (v26291:0 + v26291:0 * v26291:0) + (v26291:0 + v26291:0 * v26291:0 + v26291:0 * v26291:0 * (1 + v26291:0)), 1, 1, 1, 1 + v26285:0, 1 + v26285:0 + (v26285:0 + v26285:0 * v26285:0), 1 + v26285:0 + (v26285:0 + v26285:0 * v26285:0) + (v26285:0 + v26285:0 * v26285:0 + v26285:0 * v26285:0 * (1 + v26285:0)), 1 + (1 + v26291:0), v26285:0) :|: v26291:0 * v26291:0 * v26291:0 < 1 + (1 + v26285:0 + (v26285:0 + v26285:0 * v26285:0) + (v26285:0 + v26285:0 * v26285:0 + v26285:0 * v26285:0 * (1 + v26285:0))) && v26291:0 > 1 && 1 + v26291:0 + (v26291:0 + v26291:0 * v26291:0) + (v26291:0 + v26291:0 * v26291:0 + v26291:0 * v26291:0 * (1 + v26291:0)) > 1 + (1 + v26285:0 + (v26285:0 + v26285:0 * v26285:0) + (v26285:0 + v26285:0 * v26285:0 + v26285:0 * v26285:0 * (1 + v26285:0))) && v26285:0 < 1000 && v26282:0 > 1000 && v26285:0 > 1 && v26291:0 < 1000 && v26285:0 < 1001
f_2343(v26282:0, v26283:0, v26284:0, v26285:0, v26286:0, v26287:0, v26291:0, v26295:0) -> f_2327(1 + v26291:0, 1 + v26291:0 + (v26291:0 + v26291:0 * v26291:0), 1 + v26291:0 + (v26291:0 + v26291:0 * v26291:0) + (v26291:0 + v26291:0 * v26291:0 + v26291:0 * v26291:0 * (1 + v26291:0)), 1, 1, 1, 1 + v26285:0, 1 + v26285:0 + (v26285:0 + v26285:0 * v26285:0), 1 + v26285:0 + (v26285:0 + v26285:0 * v26285:0) + (v26285:0 + v26285:0 * v26285:0 + v26285:0 * v26285:0 * (1 + v26285:0)), 1 + (1 + v26291:0), v26285:0) :|: v26291:0 * v26291:0 * v26291:0 > 1 + (1 + v26285:0 + (v26285:0 + v26285:0 * v26285:0) + (v26285:0 + v26285:0 * v26285:0 + v26285:0 * v26285:0 * (1 + v26285:0))) && v26291:0 > 1 && 1 + v26291:0 + (v26291:0 + v26291:0 * v26291:0) + (v26291:0 + v26291:0 * v26291:0 + v26291:0 * v26291:0 * (1 + v26291:0)) < 1 + (1 + v26285:0 + (v26285:0 + v26285:0 * v26285:0) + (v26285:0 + v26285:0 * v26285:0 + v26285:0 * v26285:0 * (1 + v26285:0))) && v26285:0 < 1000 && v26282:0 > 1000 && v26285:0 > 1 && v26291:0 < 1000 && v26285:0 < 1001
f_2343(v26282:0, v26283:0, v26284:0, v26285:0, v26286:0, v26287:0, v26291:0, v26295:0) -> f_2327(1 + v26291:0, 1 + v26291:0 + (v26291:0 + v26291:0 * v26291:0), 1 + v26291:0 + (v26291:0 + v26291:0 * v26291:0) + (v26291:0 + v26291:0 * v26291:0 + v26291:0 * v26291:0 * (1 + v26291:0)), 1, 1, 1, 1 + v26285:0, 1 + v26285:0 + (v26285:0 + v26285:0 * v26285:0), 1 + v26285:0 + (v26285:0 + v26285:0 * v26285:0) + (v26285:0 + v26285:0 * v26285:0 + v26285:0 * v26285:0 * (1 + v26285:0)), 1 + (1 + v26291:0), v26285:0) :|: v26291:0 * v26291:0 * v26291:0 > 1 + (1 + v26285:0 + (v26285:0 + v26285:0 * v26285:0) + (v26285:0 + v26285:0 * v26285:0 + v26285:0 * v26285:0 * (1 + v26285:0))) && v26291:0 > 1 && 1 + v26291:0 + (v26291:0 + v26291:0 * v26291:0) + (v26291:0 + v26291:0 * v26291:0 + v26291:0 * v26291:0 * (1 + v26291:0)) > 1 + (1 + v26285:0 + (v26285:0 + v26285:0 * v26285:0) + (v26285:0 + v26285:0 * v26285:0 + v26285:0 * v26285:0 * (1 + v26285:0))) && v26285:0 < 1000 && v26282:0 > 1000 && v26285:0 > 1 && v26291:0 < 1000 && v26285:0 < 1001
f_2327(cons_1000, cons_1000000, cons_1000000000, v24113:0, v24114:0, v24115:0, v24116:0, times~v24116:0~v24116:0, times~times~v24116:0~v24116:0~v24116:0, cons_1001, v24126:0) -> f_2343(1 + v24113:0, 1 + v24113:0 + (v24113:0 + v24113:0 * v24113:0), 1 + v24113:0 + (v24113:0 + v24113:0 * v24113:0) + (v24113:0 + v24113:0 * v24113:0 + v24113:0 * v24113:0 * (1 + v24113:0)), v24116:0, v24116:0 * v24116:0, v24116:0 * v24116:0 * v24116:0, 2, v24126:0) :|: v24113:0 > 0 && 1 + v24113:0 + (v24113:0 + v24113:0 * v24113:0) + (v24113:0 + v24113:0 * v24113:0 + v24113:0 * v24113:0 * (1 + v24113:0)) + v24116:0 * v24116:0 * v24116:0 > 1 && v24113:0 < 1000 && v24113:0 < 1001 && cons_1000 = 1000 && cons_1000000 = 1000000 && cons_1000000000 = 1000000000 && times~v24116:0~v24116:0 = v24116:0 * v24116:0 && times~times~v24116:0~v24116:0~v24116:0 = v24116:0 * v24116:0 * v24116:0 && cons_1001 = 1001
f_2327(cons_1000, cons_1000000, cons_1000000000, v24113:0, v24114:0, v24115:0, v24116:0, times~v24116:0~v24116:0, times~times~v24116:0~v24116:0~v24116:0, cons_1001, v24126:0) -> f_2343(1 + v24113:0, 1 + v24113:0 + (v24113:0 + v24113:0 * v24113:0), 1 + v24113:0 + (v24113:0 + v24113:0 * v24113:0) + (v24113:0 + v24113:0 * v24113:0 + v24113:0 * v24113:0 * (1 + v24113:0)), v24116:0, v24116:0 * v24116:0, v24116:0 * v24116:0 * v24116:0, 2, v24126:0) :|: v24113:0 > 0 && 1 + v24113:0 + (v24113:0 + v24113:0 * v24113:0) + (v24113:0 + v24113:0 * v24113:0 + v24113:0 * v24113:0 * (1 + v24113:0)) + v24116:0 * v24116:0 * v24116:0 < 1 && v24113:0 < 1000 && v24113:0 < 1001 && cons_1000 = 1000 && cons_1000000 = 1000000 && cons_1000000000 = 1000000000 && times~v24116:0~v24116:0 = v24116:0 * v24116:0 && times~times~v24116:0~v24116:0~v24116:0 = v24116:0 * v24116:0 * v24116:0 && cons_1001 = 1001
f_2327(v24122:0, v24331:0, v24548:0, v24113:0, v24114:0, v24115:0, v24116:0, v24117:0, v24118:0, v25835:0, v24126:0) -> f_2343(v24113:0, v24114:0, v24115:0, v24116:0, v24117:0, v24118:0, v25835:0, v24126:0) :|: v25835:0 < 1001 && v24122:0 < 1000
f_2327(cons_1000, cons_1000000, cons_1000000000, cons_10001, cons_10000001, cons_10000000001, v24116:0, v24117:0, v24118:0, cons_1001, v24126:0) -> f_2327(2, 4, 8, 1, 1, 1, 1 + v24116:0, 1 + v24116:0 + (v24116:0 + v24116:0 * v24116:0), 1 + v24116:0 + (v24116:0 + v24116:0 * v24116:0) + (v24116:0 + v24116:0 * v24116:0 + v24116:0 * v24116:0 * (1 + v24116:0)), 3, v24116:0) :|: v24116:0 > 1 && 7 < 1 + v24116:0 + (v24116:0 + v24116:0 * v24116:0) + (v24116:0 + v24116:0 * v24116:0 + v24116:0 * v24116:0 * (1 + v24116:0)) && v24116:0 < 1000 && v24116:0 < 1001 && cons_1000 = 1000 && cons_1000000 = 1000000 && cons_1000000000 = 1000000000 && cons_10001 = 1000 && cons_10000001 = 1000000 && cons_10000000001 = 1000000000 && cons_1001 = 1001
f_2327(cons_1000, cons_1000000, cons_1000000000, cons_10001, cons_10000001, cons_10000000001, v24116:0, v24117:0, v24118:0, cons_1001, v24126:0) -> f_2327(2, 4, 8, 1, 1, 1, 1 + v24116:0, 1 + v24116:0 + (v24116:0 + v24116:0 * v24116:0), 1 + v24116:0 + (v24116:0 + v24116:0 * v24116:0) + (v24116:0 + v24116:0 * v24116:0 + v24116:0 * v24116:0 * (1 + v24116:0)), 3, v24116:0) :|: v24116:0 < 1001 && v24116:0 > 1 && 1 + v24116:0 + (v24116:0 + v24116:0 * v24116:0) + (v24116:0 + v24116:0 * v24116:0 + v24116:0 * v24116:0 * (1 + v24116:0)) > 0 && 7 > 1 + v24116:0 + (v24116:0 + v24116:0 * v24116:0) + (v24116:0 + v24116:0 * v24116:0 + v24116:0 * v24116:0 * (1 + v24116:0)) && v24116:0 < 1000 && cons_1000 = 1000 && cons_1000000 = 1000000 && cons_1000000000 = 1000000000 && cons_10001 = 1000 && cons_10000001 = 1000000 && cons_10000000001 = 1000000000 && cons_1001 = 1001
f_2327(cons_1000, cons_1000000, cons_1000000000, cons_10001, cons_10000001, cons_10000000001, v24116:0, v24117:0, v24118:0, cons_1001, v24126:0) -> f_2327(2, 4, 8, 1, 1, 1, 1 + v24116:0, 1 + v24116:0 + (v24116:0 + v24116:0 * v24116:0), 1 + v24116:0 + (v24116:0 + v24116:0 * v24116:0) + (v24116:0 + v24116:0 * v24116:0 + v24116:0 * v24116:0 * (1 + v24116:0)), 3, v24116:0) :|: v24116:0 < 1001 && v24116:0 > 1 && 1 + v24116:0 + (v24116:0 + v24116:0 * v24116:0) + (v24116:0 + v24116:0 * v24116:0 + v24116:0 * v24116:0 * (1 + v24116:0)) < 0 && 7 < 1 + v24116:0 + (v24116:0 + v24116:0 * v24116:0) + (v24116:0 + v24116:0 * v24116:0 + v24116:0 * v24116:0 * (1 + v24116:0)) && v24116:0 < 1000 && cons_1000 = 1000 && cons_1000000 = 1000000 && cons_1000000000 = 1000000000 && cons_10001 = 1000 && cons_10000001 = 1000000 && cons_10000000001 = 1000000000 && cons_1001 = 1001
f_2327(cons_1000, cons_1000000, cons_1000000000, cons_10001, cons_10000001, cons_10000000001, v24116:0, v24117:0, v24118:0, cons_1001, v24126:0) -> f_2327(2, 4, 8, 1, 1, 1, 1 + v24116:0, 1 + v24116:0 + (v24116:0 + v24116:0 * v24116:0), 1 + v24116:0 + (v24116:0 + v24116:0 * v24116:0) + (v24116:0 + v24116:0 * v24116:0 + v24116:0 * v24116:0 * (1 + v24116:0)), 3, v24116:0) :|: v24116:0 < 1001 && v24116:0 > 1 && 1 + v24116:0 + (v24116:0 + v24116:0 * v24116:0) + (v24116:0 + v24116:0 * v24116:0 + v24116:0 * v24116:0 * (1 + v24116:0)) < 0 && 7 > 1 + v24116:0 + (v24116:0 + v24116:0 * v24116:0) + (v24116:0 + v24116:0 * v24116:0 + v24116:0 * v24116:0 * (1 + v24116:0)) && v24116:0 < 1000 && cons_1000 = 1000 && cons_1000000 = 1000000 && cons_1000000000 = 1000000000 && cons_10001 = 1000 && cons_10000001 = 1000000 && cons_10000000001 = 1000000000 && cons_1001 = 1001

----------------------------------------

(9)
Obligation:
Rules:
f_2343(v26282:0, v26283:0, v26284:0, v26285:0, v26286:0, v26287:0, v26291:0, v26295:0) -> f_2343(2, 4, 8, 1 + v26285:0, 1 + v26285:0 + (v26285:0 + v26285:0 * v26285:0), 1 + v26285:0 + (v26285:0 + v26285:0 * v26285:0) + (v26285:0 + v26285:0 * v26285:0 + v26285:0 * v26285:0 * (1 + v26285:0)), 2, v26285:0) :|: v26291:0 * v26291:0 * v26291:0 < 1 + (1 + v26285:0 + (v26285:0 + v26285:0 * v26285:0) + (v26285:0 + v26285:0 * v26285:0 + v26285:0 * v26285:0 * (1 + v26285:0))) && v26291:0 > 999 && v26285:0 < 1000 && 1 + v26285:0 + (v26285:0 + v26285:0 * v26285:0) + (v26285:0 + v26285:0 * v26285:0 + v26285:0 * v26285:0 * (1 + v26285:0)) > -7 && v26282:0 > 1000 && v26285:0 > 1 && v26285:0 < 1001
f_2343(x, x1, x2, x3, x4, x5, x6, x7) -> f_2343(2, 4, 8, 1 + x3, 1 + x3 + (x3 + x3 * x3), 1 + x3 + (x3 + x3 * x3) + (x3 + x3 * x3 + x3 * x3 * (1 + x3)), 2, x3) :|: x6 * x6 * x6 < 1 + (1 + x3 + (x3 + x3 * x3) + (x3 + x3 * x3 + x3 * x3 * (1 + x3))) && x6 > 999 && x3 < 1000 && 1 + x3 + (x3 + x3 * x3) + (x3 + x3 * x3 + x3 * x3 * (1 + x3)) < -7 && x > 1000 && x3 > 1 && x3 < 1001
f_2343(x8, x9, x10, x11, x12, x13, x14, x15) -> f_2343(2, 4, 8, 1 + x11, 1 + x11 + (x11 + x11 * x11), 1 + x11 + (x11 + x11 * x11) + (x11 + x11 * x11 + x11 * x11 * (1 + x11)), 2, x11) :|: x14 * x14 * x14 > 1 + (1 + x11 + (x11 + x11 * x11) + (x11 + x11 * x11 + x11 * x11 * (1 + x11))) && x14 > 999 && x11 < 1000 && 1 + x11 + (x11 + x11 * x11) + (x11 + x11 * x11 + x11 * x11 * (1 + x11)) > -7 && x8 > 1000 && x11 > 1 && x11 < 1001
f_2343(x16, x17, x18, x19, x20, x21, x22, x23) -> f_2343(2, 4, 8, 1 + x19, 1 + x19 + (x19 + x19 * x19), 1 + x19 + (x19 + x19 * x19) + (x19 + x19 * x19 + x19 * x19 * (1 + x19)), 2, x19) :|: x22 * x22 * x22 > 1 + (1 + x19 + (x19 + x19 * x19) + (x19 + x19 * x19 + x19 * x19 * (1 + x19))) && x22 > 999 && x19 < 1000 && 1 + x19 + (x19 + x19 * x19) + (x19 + x19 * x19 + x19 * x19 * (1 + x19)) < -7 && x16 > 1000 && x19 > 1 && x19 < 1001
f_2343(x24, x25, x26, x27, x28, x29, x30, x31) -> f_2327(x30, x30 * x30, x30 * x30 * x30, x24, x24 * x24, x24 * x24 * x24, x27, x27 * x27, x27 * x27 * x27, 1 + x30, x31) :|: x30 * x30 * x30 < x24 * x24 * x24 + x27 * x27 * x27 && x24 < 1001 && x31 < 1000 && x27 < 1001 && x30 > 1 && x30 < 1001 && x25 = x24 * x24 && x26 = x24 * x24 * x24 && x28 = x27 * x27 && x29 = x27 * x27 * x27
f_2343(x32, x33, x34, x35, x36, x37, x38, x39) -> f_2327(x38, x38 * x38, x38 * x38 * x38, x32, x32 * x32, x32 * x32 * x32, x35, x35 * x35, x35 * x35 * x35, 1 + x38, x39) :|: x38 * x38 * x38 > x32 * x32 * x32 + x35 * x35 * x35 && x32 < 1001 && x39 < 1000 && x35 < 1001 && x38 > 1 && x38 < 1001 && x33 = x32 * x32 && x34 = x32 * x32 * x32 && x36 = x35 * x35 && x37 = x35 * x35 * x35
f_2343(x40, x41, x42, x43, x44, x45, x46, x47) -> f_2327(1 + x46, 1 + x46 + (x46 + x46 * x46), 1 + x46 + (x46 + x46 * x46) + (x46 + x46 * x46 + x46 * x46 * (1 + x46)), 1, 1, 1, 1 + x43, 1 + x43 + (x43 + x43 * x43), 1 + x43 + (x43 + x43 * x43) + (x43 + x43 * x43 + x43 * x43 * (1 + x43)), 1 + (1 + x46), x43) :|: x46 * x46 * x46 < 1 + (1 + x43 + (x43 + x43 * x43) + (x43 + x43 * x43 + x43 * x43 * (1 + x43))) && x46 > 1 && 1 + x46 + (x46 + x46 * x46) + (x46 + x46 * x46 + x46 * x46 * (1 + x46)) < 1 + (1 + x43 + (x43 + x43 * x43) + (x43 + x43 * x43 + x43 * x43 * (1 + x43))) && x43 < 1000 && x40 > 1000 && x43 > 1 && x46 < 1000 && x43 < 1001
f_2343(x48, x49, x50, x51, x52, x53, x54, x55) -> f_2327(1 + x54, 1 + x54 + (x54 + x54 * x54), 1 + x54 + (x54 + x54 * x54) + (x54 + x54 * x54 + x54 * x54 * (1 + x54)), 1, 1, 1, 1 + x51, 1 + x51 + (x51 + x51 * x51), 1 + x51 + (x51 + x51 * x51) + (x51 + x51 * x51 + x51 * x51 * (1 + x51)), 1 + (1 + x54), x51) :|: x54 * x54 * x54 < 1 + (1 + x51 + (x51 + x51 * x51) + (x51 + x51 * x51 + x51 * x51 * (1 + x51))) && x54 > 1 && 1 + x54 + (x54 + x54 * x54) + (x54 + x54 * x54 + x54 * x54 * (1 + x54)) > 1 + (1 + x51 + (x51 + x51 * x51) + (x51 + x51 * x51 + x51 * x51 * (1 + x51))) && x51 < 1000 && x48 > 1000 && x51 > 1 && x54 < 1000 && x51 < 1001
f_2343(x56, x57, x58, x59, x60, x61, x62, x63) -> f_2327(1 + x62, 1 + x62 + (x62 + x62 * x62), 1 + x62 + (x62 + x62 * x62) + (x62 + x62 * x62 + x62 * x62 * (1 + x62)), 1, 1, 1, 1 + x59, 1 + x59 + (x59 + x59 * x59), 1 + x59 + (x59 + x59 * x59) + (x59 + x59 * x59 + x59 * x59 * (1 + x59)), 1 + (1 + x62), x59) :|: x62 * x62 * x62 > 1 + (1 + x59 + (x59 + x59 * x59) + (x59 + x59 * x59 + x59 * x59 * (1 + x59))) && x62 > 1 && 1 + x62 + (x62 + x62 * x62) + (x62 + x62 * x62 + x62 * x62 * (1 + x62)) < 1 + (1 + x59 + (x59 + x59 * x59) + (x59 + x59 * x59 + x59 * x59 * (1 + x59))) && x59 < 1000 && x56 > 1000 && x59 > 1 && x62 < 1000 && x59 < 1001
f_2343(x64, x65, x66, x67, x68, x69, x70, x71) -> f_2327(1 + x70, 1 + x70 + (x70 + x70 * x70), 1 + x70 + (x70 + x70 * x70) + (x70 + x70 * x70 + x70 * x70 * (1 + x70)), 1, 1, 1, 1 + x67, 1 + x67 + (x67 + x67 * x67), 1 + x67 + (x67 + x67 * x67) + (x67 + x67 * x67 + x67 * x67 * (1 + x67)), 1 + (1 + x70), x67) :|: x70 * x70 * x70 > 1 + (1 + x67 + (x67 + x67 * x67) + (x67 + x67 * x67 + x67 * x67 * (1 + x67))) && x70 > 1 && 1 + x70 + (x70 + x70 * x70) + (x70 + x70 * x70 + x70 * x70 * (1 + x70)) > 1 + (1 + x67 + (x67 + x67 * x67) + (x67 + x67 * x67 + x67 * x67 * (1 + x67))) && x67 < 1000 && x64 > 1000 && x67 > 1 && x70 < 1000 && x67 < 1001
f_2327(cons_1000, cons_1000000, cons_1000000000, v24113:0, v24114:0, v24115:0, v24116:0, times~v24116:0~v24116:0, times~times~v24116:0~v24116:0~v24116:0, cons_1001, v24126:0) -> f_2343(1 + v24113:0, 1 + v24113:0 + (v24113:0 + v24113:0 * v24113:0), 1 + v24113:0 + (v24113:0 + v24113:0 * v24113:0) + (v24113:0 + v24113:0 * v24113:0 + v24113:0 * v24113:0 * (1 + v24113:0)), v24116:0, v24116:0 * v24116:0, v24116:0 * v24116:0 * v24116:0, 2, v24126:0) :|: v24113:0 > 0 && 1 + v24113:0 + (v24113:0 + v24113:0 * v24113:0) + (v24113:0 + v24113:0 * v24113:0 + v24113:0 * v24113:0 * (1 + v24113:0)) + v24116:0 * v24116:0 * v24116:0 > 1 && v24113:0 < 1000 && v24113:0 < 1001 && cons_1000 = 1000 && cons_1000000 = 1000000 && cons_1000000000 = 1000000000 && times~v24116:0~v24116:0 = v24116:0 * v24116:0 && times~times~v24116:0~v24116:0~v24116:0 = v24116:0 * v24116:0 * v24116:0 && cons_1001 = 1001
f_2327(x72, x73, x74, x75, x76, x77, x78, x79, x80, x81, x82) -> f_2343(1 + x75, 1 + x75 + (x75 + x75 * x75), 1 + x75 + (x75 + x75 * x75) + (x75 + x75 * x75 + x75 * x75 * (1 + x75)), x78, x78 * x78, x78 * x78 * x78, 2, x82) :|: x75 > 0 && 1 + x75 + (x75 + x75 * x75) + (x75 + x75 * x75 + x75 * x75 * (1 + x75)) + x78 * x78 * x78 < 1 && x75 < 1000 && x75 < 1001 && x72 = 1000 && x73 = 1000000 && x74 = 1000000000 && x79 = x78 * x78 && x80 = x78 * x78 * x78 && x81 = 1001
f_2327(x83, x84, x85, x86, x87, x88, x89, x90, x91, x92, x93) -> f_2343(x86, x87, x88, x89, x90, x91, x92, x93) :|: x92 < 1001 && x83 < 1000
f_2327(x94, x95, x96, x97, x98, x99, x100, x101, x102, x103, x104) -> f_2327(2, 4, 8, 1, 1, 1, 1 + x100, 1 + x100 + (x100 + x100 * x100), 1 + x100 + (x100 + x100 * x100) + (x100 + x100 * x100 + x100 * x100 * (1 + x100)), 3, x100) :|: x100 > 1 && 7 < 1 + x100 + (x100 + x100 * x100) + (x100 + x100 * x100 + x100 * x100 * (1 + x100)) && x100 < 1000 && x100 < 1001 && x94 = 1000 && x95 = 1000000 && x96 = 1000000000 && x97 = 1000 && x98 = 1000000 && x99 = 1000000000 && x103 = 1001
f_2327(x105, x106, x107, x108, x109, x110, x111, x112, x113, x114, x115) -> f_2327(2, 4, 8, 1, 1, 1, 1 + x111, 1 + x111 + (x111 + x111 * x111), 1 + x111 + (x111 + x111 * x111) + (x111 + x111 * x111 + x111 * x111 * (1 + x111)), 3, x111) :|: x111 < 1001 && x111 > 1 && 1 + x111 + (x111 + x111 * x111) + (x111 + x111 * x111 + x111 * x111 * (1 + x111)) > 0 && 7 > 1 + x111 + (x111 + x111 * x111) + (x111 + x111 * x111 + x111 * x111 * (1 + x111)) && x111 < 1000 && x105 = 1000 && x106 = 1000000 && x107 = 1000000000 && x108 = 1000 && x109 = 1000000 && x110 = 1000000000 && x114 = 1001
f_2327(x116, x117, x118, x119, x120, x121, x122, x123, x124, x125, x126) -> f_2327(2, 4, 8, 1, 1, 1, 1 + x122, 1 + x122 + (x122 + x122 * x122), 1 + x122 + (x122 + x122 * x122) + (x122 + x122 * x122 + x122 * x122 * (1 + x122)), 3, x122) :|: x122 < 1001 && x122 > 1 && 1 + x122 + (x122 + x122 * x122) + (x122 + x122 * x122 + x122 * x122 * (1 + x122)) < 0 && 7 < 1 + x122 + (x122 + x122 * x122) + (x122 + x122 * x122 + x122 * x122 * (1 + x122)) && x122 < 1000 && x116 = 1000 && x117 = 1000000 && x118 = 1000000000 && x119 = 1000 && x120 = 1000000 && x121 = 1000000000 && x125 = 1001
f_2327(x127, x128, x129, x130, x131, x132, x133, x134, x135, x136, x137) -> f_2327(2, 4, 8, 1, 1, 1, 1 + x133, 1 + x133 + (x133 + x133 * x133), 1 + x133 + (x133 + x133 * x133) + (x133 + x133 * x133 + x133 * x133 * (1 + x133)), 3, x133) :|: x133 < 1001 && x133 > 1 && 1 + x133 + (x133 + x133 * x133) + (x133 + x133 * x133 + x133 * x133 * (1 + x133)) < 0 && 7 > 1 + x133 + (x133 + x133 * x133) + (x133 + x133 * x133 + x133 * x133 * (1 + x133)) && x133 < 1000 && x127 = 1000 && x128 = 1000000 && x129 = 1000000000 && x130 = 1000 && x131 = 1000000 && x132 = 1000000000 && x136 = 1001

----------------------------------------

(10) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(11)
Obligation:
Rules:
f_2327(cons_1000, cons_1000000, cons_1000000000, v24113:0:0, v24114:0:0, v24115:0:0, v24116:0:0, times~v24116:0:0~v24116:0:0, times~times~v24116:0:0~v24116:0:0~v24116:0:0, cons_1001, v24126:0:0) -> f_2343(1 + v24113:0:0, 1 + v24113:0:0 + (v24113:0:0 + v24113:0:0 * v24113:0:0), 1 + v24113:0:0 + (v24113:0:0 + v24113:0:0 * v24113:0:0) + (v24113:0:0 + v24113:0:0 * v24113:0:0 + v24113:0:0 * v24113:0:0 * (1 + v24113:0:0)), v24116:0:0, v24116:0:0 * v24116:0:0, v24116:0:0 * v24116:0:0 * v24116:0:0, 2, v24126:0:0) :|: v24113:0:0 < 1000 && v24113:0:0 < 1001 && 1 + v24113:0:0 + (v24113:0:0 + v24113:0:0 * v24113:0:0) + (v24113:0:0 + v24113:0:0 * v24113:0:0 + v24113:0:0 * v24113:0:0 * (1 + v24113:0:0)) + v24116:0:0 * v24116:0:0 * v24116:0:0 > 1 && v24113:0:0 > 0 && cons_1000 = 1000 && cons_1000000 = 1000000 && cons_1000000000 = 1000000000 && times~v24116:0:0~v24116:0:0 = v24116:0:0 * v24116:0:0 && times~times~v24116:0:0~v24116:0:0~v24116:0:0 = v24116:0:0 * v24116:0:0 * v24116:0:0 && cons_1001 = 1001
f_2327(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f_2327(2, 4, 8, 1, 1, 1, 1 + x6, 1 + x6 + (x6 + x6 * x6), 1 + x6 + (x6 + x6 * x6) + (x6 + x6 * x6 + x6 * x6 * (1 + x6)), 3, x6) :|: 7 > 1 + x6 + (x6 + x6 * x6) + (x6 + x6 * x6 + x6 * x6 * (1 + x6)) && x6 < 1000 && 1 + x6 + (x6 + x6 * x6) + (x6 + x6 * x6 + x6 * x6 * (1 + x6)) < 0 && x6 > 1 && x6 < 1001 && x = 1000 && x1 = 1000000 && x2 = 1000000000 && x3 = 1000 && x4 = 1000000 && x5 = 1000000000 && x9 = 1001
f_2327(x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21) -> f_2327(2, 4, 8, 1, 1, 1, 1 + x17, 1 + x17 + (x17 + x17 * x17), 1 + x17 + (x17 + x17 * x17) + (x17 + x17 * x17 + x17 * x17 * (1 + x17)), 3, x17) :|: x17 < 1000 && x17 < 1001 && 7 < 1 + x17 + (x17 + x17 * x17) + (x17 + x17 * x17 + x17 * x17 * (1 + x17)) && x17 > 1 && x11 = 1000 && x12 = 1000000 && x13 = 1000000000 && x14 = 1000 && x15 = 1000000 && x16 = 1000000000 && x20 = 1001
f_2343(x16:0, x17:0, x18:0, x19:0, x20:0, x21:0, x22:0, x23:0) -> f_2343(2, 4, 8, 1 + x19:0, 1 + x19:0 + (x19:0 + x19:0 * x19:0), 1 + x19:0 + (x19:0 + x19:0 * x19:0) + (x19:0 + x19:0 * x19:0 + x19:0 * x19:0 * (1 + x19:0)), 2, x19:0) :|: x19:0 > 1 && x19:0 < 1001 && x16:0 > 1000 && 1 + x19:0 + (x19:0 + x19:0 * x19:0) + (x19:0 + x19:0 * x19:0 + x19:0 * x19:0 * (1 + x19:0)) < -7 && x19:0 < 1000 && x22:0 > 999 && x22:0 * x22:0 * x22:0 > 1 + (1 + x19:0 + (x19:0 + x19:0 * x19:0) + (x19:0 + x19:0 * x19:0 + x19:0 * x19:0 * (1 + x19:0)))
f_2327(x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32) -> f_2327(2, 4, 8, 1, 1, 1, 1 + x28, 1 + x28 + (x28 + x28 * x28), 1 + x28 + (x28 + x28 * x28) + (x28 + x28 * x28 + x28 * x28 * (1 + x28)), 3, x28) :|: 7 < 1 + x28 + (x28 + x28 * x28) + (x28 + x28 * x28 + x28 * x28 * (1 + x28)) && x28 < 1000 && 1 + x28 + (x28 + x28 * x28) + (x28 + x28 * x28 + x28 * x28 * (1 + x28)) < 0 && x28 > 1 && x28 < 1001 && x22 = 1000 && x23 = 1000000 && x24 = 1000000000 && x25 = 1000 && x26 = 1000000 && x27 = 1000000000 && x31 = 1001
f_2343(x40:0, x41:0, x42:0, x43:0, x44:0, x45:0, x46:0, x47:0) -> f_2327(1 + x46:0, 1 + x46:0 + (x46:0 + x46:0 * x46:0), 1 + x46:0 + (x46:0 + x46:0 * x46:0) + (x46:0 + x46:0 * x46:0 + x46:0 * x46:0 * (1 + x46:0)), 1, 1, 1, 1 + x43:0, 1 + x43:0 + (x43:0 + x43:0 * x43:0), 1 + x43:0 + (x43:0 + x43:0 * x43:0) + (x43:0 + x43:0 * x43:0 + x43:0 * x43:0 * (1 + x43:0)), 1 + (1 + x46:0), x43:0) :|: x46:0 < 1000 && x43:0 < 1001 && x43:0 > 1 && x40:0 > 1000 && x43:0 < 1000 && 1 + x46:0 + (x46:0 + x46:0 * x46:0) + (x46:0 + x46:0 * x46:0 + x46:0 * x46:0 * (1 + x46:0)) < 1 + (1 + x43:0 + (x43:0 + x43:0 * x43:0) + (x43:0 + x43:0 * x43:0 + x43:0 * x43:0 * (1 + x43:0))) && x46:0 > 1 && x46:0 * x46:0 * x46:0 < 1 + (1 + x43:0 + (x43:0 + x43:0 * x43:0) + (x43:0 + x43:0 * x43:0 + x43:0 * x43:0 * (1 + x43:0)))
f_2327(x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43) -> f_2343(1 + x36, 1 + x36 + (x36 + x36 * x36), 1 + x36 + (x36 + x36 * x36) + (x36 + x36 * x36 + x36 * x36 * (1 + x36)), x39, x39 * x39, x39 * x39 * x39, 2, x43) :|: x36 < 1000 && x36 < 1001 && 1 + x36 + (x36 + x36 * x36) + (x36 + x36 * x36 + x36 * x36 * (1 + x36)) + x39 * x39 * x39 < 1 && x36 > 0 && x33 = 1000 && x34 = 1000000 && x35 = 1000000000 && x40 = x39 * x39 && x41 = x39 * x39 * x39 && x42 = 1001
f_2343(x56:0, x57:0, x58:0, x59:0, x60:0, x61:0, x62:0, x63:0) -> f_2327(1 + x62:0, 1 + x62:0 + (x62:0 + x62:0 * x62:0), 1 + x62:0 + (x62:0 + x62:0 * x62:0) + (x62:0 + x62:0 * x62:0 + x62:0 * x62:0 * (1 + x62:0)), 1, 1, 1, 1 + x59:0, 1 + x59:0 + (x59:0 + x59:0 * x59:0), 1 + x59:0 + (x59:0 + x59:0 * x59:0) + (x59:0 + x59:0 * x59:0 + x59:0 * x59:0 * (1 + x59:0)), 1 + (1 + x62:0), x59:0) :|: x62:0 < 1000 && x59:0 < 1001 && x59:0 > 1 && x56:0 > 1000 && x59:0 < 1000 && 1 + x62:0 + (x62:0 + x62:0 * x62:0) + (x62:0 + x62:0 * x62:0 + x62:0 * x62:0 * (1 + x62:0)) < 1 + (1 + x59:0 + (x59:0 + x59:0 * x59:0) + (x59:0 + x59:0 * x59:0 + x59:0 * x59:0 * (1 + x59:0))) && x62:0 > 1 && x62:0 * x62:0 * x62:0 > 1 + (1 + x59:0 + (x59:0 + x59:0 * x59:0) + (x59:0 + x59:0 * x59:0 + x59:0 * x59:0 * (1 + x59:0)))
f_2343(x48:0, x49:0, x50:0, x51:0, x52:0, x53:0, x54:0, x55:0) -> f_2327(1 + x54:0, 1 + x54:0 + (x54:0 + x54:0 * x54:0), 1 + x54:0 + (x54:0 + x54:0 * x54:0) + (x54:0 + x54:0 * x54:0 + x54:0 * x54:0 * (1 + x54:0)), 1, 1, 1, 1 + x51:0, 1 + x51:0 + (x51:0 + x51:0 * x51:0), 1 + x51:0 + (x51:0 + x51:0 * x51:0) + (x51:0 + x51:0 * x51:0 + x51:0 * x51:0 * (1 + x51:0)), 1 + (1 + x54:0), x51:0) :|: x54:0 < 1000 && x51:0 < 1001 && x51:0 > 1 && x48:0 > 1000 && x51:0 < 1000 && 1 + x54:0 + (x54:0 + x54:0 * x54:0) + (x54:0 + x54:0 * x54:0 + x54:0 * x54:0 * (1 + x54:0)) > 1 + (1 + x51:0 + (x51:0 + x51:0 * x51:0) + (x51:0 + x51:0 * x51:0 + x51:0 * x51:0 * (1 + x51:0))) && x54:0 > 1 && x54:0 * x54:0 * x54:0 < 1 + (1 + x51:0 + (x51:0 + x51:0 * x51:0) + (x51:0 + x51:0 * x51:0 + x51:0 * x51:0 * (1 + x51:0)))
f_2327(x44, x45, x46, x47, x48, x49, x50, x51, x52, x53, x54) -> f_2327(2, 4, 8, 1, 1, 1, 1 + x50, 1 + x50 + (x50 + x50 * x50), 1 + x50 + (x50 + x50 * x50) + (x50 + x50 * x50 + x50 * x50 * (1 + x50)), 3, x50) :|: 7 > 1 + x50 + (x50 + x50 * x50) + (x50 + x50 * x50 + x50 * x50 * (1 + x50)) && x50 < 1000 && 1 + x50 + (x50 + x50 * x50) + (x50 + x50 * x50 + x50 * x50 * (1 + x50)) > 0 && x50 > 1 && x50 < 1001 && x44 = 1000 && x45 = 1000000 && x46 = 1000000000 && x47 = 1000 && x48 = 1000000 && x49 = 1000000000 && x53 = 1001
f_2343(x8:0, x9:0, x10:0, x11:0, x12:0, x13:0, x14:0, x15:0) -> f_2343(2, 4, 8, 1 + x11:0, 1 + x11:0 + (x11:0 + x11:0 * x11:0), 1 + x11:0 + (x11:0 + x11:0 * x11:0) + (x11:0 + x11:0 * x11:0 + x11:0 * x11:0 * (1 + x11:0)), 2, x11:0) :|: x11:0 > 1 && x11:0 < 1001 && x8:0 > 1000 && 1 + x11:0 + (x11:0 + x11:0 * x11:0) + (x11:0 + x11:0 * x11:0 + x11:0 * x11:0 * (1 + x11:0)) > -7 && x11:0 < 1000 && x14:0 > 999 && x14:0 * x14:0 * x14:0 > 1 + (1 + x11:0 + (x11:0 + x11:0 * x11:0) + (x11:0 + x11:0 * x11:0 + x11:0 * x11:0 * (1 + x11:0)))
f_2343(x64:0, x65:0, x66:0, x67:0, x68:0, x69:0, x70:0, x71:0) -> f_2327(1 + x70:0, 1 + x70:0 + (x70:0 + x70:0 * x70:0), 1 + x70:0 + (x70:0 + x70:0 * x70:0) + (x70:0 + x70:0 * x70:0 + x70:0 * x70:0 * (1 + x70:0)), 1, 1, 1, 1 + x67:0, 1 + x67:0 + (x67:0 + x67:0 * x67:0), 1 + x67:0 + (x67:0 + x67:0 * x67:0) + (x67:0 + x67:0 * x67:0 + x67:0 * x67:0 * (1 + x67:0)), 1 + (1 + x70:0), x67:0) :|: x70:0 < 1000 && x67:0 < 1001 && x67:0 > 1 && x64:0 > 1000 && x67:0 < 1000 && 1 + x70:0 + (x70:0 + x70:0 * x70:0) + (x70:0 + x70:0 * x70:0 + x70:0 * x70:0 * (1 + x70:0)) > 1 + (1 + x67:0 + (x67:0 + x67:0 * x67:0) + (x67:0 + x67:0 * x67:0 + x67:0 * x67:0 * (1 + x67:0))) && x70:0 > 1 && x70:0 * x70:0 * x70:0 > 1 + (1 + x67:0 + (x67:0 + x67:0 * x67:0) + (x67:0 + x67:0 * x67:0 + x67:0 * x67:0 * (1 + x67:0)))
f_2343(v26282:0:0, v26283:0:0, v26284:0:0, v26285:0:0, v26286:0:0, v26287:0:0, v26291:0:0, v26295:0:0) -> f_2343(2, 4, 8, 1 + v26285:0:0, 1 + v26285:0:0 + (v26285:0:0 + v26285:0:0 * v26285:0:0), 1 + v26285:0:0 + (v26285:0:0 + v26285:0:0 * v26285:0:0) + (v26285:0:0 + v26285:0:0 * v26285:0:0 + v26285:0:0 * v26285:0:0 * (1 + v26285:0:0)), 2, v26285:0:0) :|: v26285:0:0 > 1 && v26285:0:0 < 1001 && v26282:0:0 > 1000 && 1 + v26285:0:0 + (v26285:0:0 + v26285:0:0 * v26285:0:0) + (v26285:0:0 + v26285:0:0 * v26285:0:0 + v26285:0:0 * v26285:0:0 * (1 + v26285:0:0)) > -7 && v26285:0:0 < 1000 && v26291:0:0 > 999 && v26291:0:0 * v26291:0:0 * v26291:0:0 < 1 + (1 + v26285:0:0 + (v26285:0:0 + v26285:0:0 * v26285:0:0) + (v26285:0:0 + v26285:0:0 * v26285:0:0 + v26285:0:0 * v26285:0:0 * (1 + v26285:0:0)))
f_2343(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0, x7:0) -> f_2343(2, 4, 8, 1 + x3:0, 1 + x3:0 + (x3:0 + x3:0 * x3:0), 1 + x3:0 + (x3:0 + x3:0 * x3:0) + (x3:0 + x3:0 * x3:0 + x3:0 * x3:0 * (1 + x3:0)), 2, x3:0) :|: x3:0 > 1 && x3:0 < 1001 && x:0 > 1000 && 1 + x3:0 + (x3:0 + x3:0 * x3:0) + (x3:0 + x3:0 * x3:0 + x3:0 * x3:0 * (1 + x3:0)) < -7 && x3:0 < 1000 && x6:0 > 999 && x6:0 * x6:0 * x6:0 < 1 + (1 + x3:0 + (x3:0 + x3:0 * x3:0) + (x3:0 + x3:0 * x3:0 + x3:0 * x3:0 * (1 + x3:0)))
f_2343(x24:0, times~x24:0~x24:0, times~times~x24:0~x24:0~x24:0, x27:0, times~x27:0~x27:0, times~times~x27:0~x27:0~x27:0, x30:0, x31:0) -> f_2327(x30:0, x30:0 * x30:0, x30:0 * x30:0 * x30:0, x24:0, x24:0 * x24:0, x24:0 * x24:0 * x24:0, x27:0, x27:0 * x27:0, x27:0 * x27:0 * x27:0, 1 + x30:0, x31:0) :|: x30:0 > 1 && x30:0 < 1001 && x27:0 < 1001 && x31:0 < 1000 && x24:0 < 1001 && x30:0 * x30:0 * x30:0 < x24:0 * x24:0 * x24:0 + x27:0 * x27:0 * x27:0 && times~x24:0~x24:0 = x24:0 * x24:0 && times~times~x24:0~x24:0~x24:0 = x24:0 * x24:0 * x24:0 && times~x27:0~x27:0 = x27:0 * x27:0 && times~times~x27:0~x27:0~x27:0 = x27:0 * x27:0 * x27:0
f_2343(x32:0, times~x32:0~x32:0, times~times~x32:0~x32:0~x32:0, x35:0, times~x35:0~x35:0, times~times~x35:0~x35:0~x35:0, x38:0, x39:0) -> f_2327(x38:0, x38:0 * x38:0, x38:0 * x38:0 * x38:0, x32:0, x32:0 * x32:0, x32:0 * x32:0 * x32:0, x35:0, x35:0 * x35:0, x35:0 * x35:0 * x35:0, 1 + x38:0, x39:0) :|: x38:0 > 1 && x38:0 < 1001 && x35:0 < 1001 && x39:0 < 1000 && x32:0 < 1001 && x38:0 * x38:0 * x38:0 > x32:0 * x32:0 * x32:0 + x35:0 * x35:0 * x35:0 && times~x32:0~x32:0 = x32:0 * x32:0 && times~times~x32:0~x32:0~x32:0 = x32:0 * x32:0 * x32:0 && times~x35:0~x35:0 = x35:0 * x35:0 && times~times~x35:0~x35:0~x35:0 = x35:0 * x35:0 * x35:0
f_2327(x83:0, x84:0, x85:0, x86:0, x87:0, x88:0, x89:0, x90:0, x91:0, x92:0, x93:0) -> f_2343(x86:0, x87:0, x88:0, x89:0, x90:0, x91:0, x92:0, x93:0) :|: x92:0 < 1001 && x83:0 < 1000

----------------------------------------

(12) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_2327(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10)] = 1000 - x6
[f_2343(x11, x12, x13, x14, x15, x16, x17, x18)] = 1000 - x14

The following rules are decreasing:
f_2327(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f_2327(2, 4, 8, 1, 1, 1, 1 + x6, 1 + x6 + (x6 + x6 * x6), 1 + x6 + (x6 + x6 * x6) + (x6 + x6 * x6 + x6 * x6 * (1 + x6)), 3, x6) :|: 7 > 1 + x6 + (x6 + x6 * x6) + (x6 + x6 * x6 + x6 * x6 * (1 + x6)) && x6 < 1000 && 1 + x6 + (x6 + x6 * x6) + (x6 + x6 * x6 + x6 * x6 * (1 + x6)) < 0 && x6 > 1 && x6 < 1001 && x = 1000 && x1 = 1000000 && x2 = 1000000000 && x3 = 1000 && x4 = 1000000 && x5 = 1000000000 && x9 = 1001
f_2327(x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21) -> f_2327(2, 4, 8, 1, 1, 1, 1 + x17, 1 + x17 + (x17 + x17 * x17), 1 + x17 + (x17 + x17 * x17) + (x17 + x17 * x17 + x17 * x17 * (1 + x17)), 3, x17) :|: x17 < 1000 && x17 < 1001 && 7 < 1 + x17 + (x17 + x17 * x17) + (x17 + x17 * x17 + x17 * x17 * (1 + x17)) && x17 > 1 && x11 = 1000 && x12 = 1000000 && x13 = 1000000000 && x14 = 1000 && x15 = 1000000 && x16 = 1000000000 && x20 = 1001
f_2343(x16:0, x17:0, x18:0, x19:0, x20:0, x21:0, x22:0, x23:0) -> f_2343(2, 4, 8, 1 + x19:0, 1 + x19:0 + (x19:0 + x19:0 * x19:0), 1 + x19:0 + (x19:0 + x19:0 * x19:0) + (x19:0 + x19:0 * x19:0 + x19:0 * x19:0 * (1 + x19:0)), 2, x19:0) :|: x19:0 > 1 && x19:0 < 1001 && x16:0 > 1000 && 1 + x19:0 + (x19:0 + x19:0 * x19:0) + (x19:0 + x19:0 * x19:0 + x19:0 * x19:0 * (1 + x19:0)) < -7 && x19:0 < 1000 && x22:0 > 999 && x22:0 * x22:0 * x22:0 > 1 + (1 + x19:0 + (x19:0 + x19:0 * x19:0) + (x19:0 + x19:0 * x19:0 + x19:0 * x19:0 * (1 + x19:0)))
f_2327(x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32) -> f_2327(2, 4, 8, 1, 1, 1, 1 + x28, 1 + x28 + (x28 + x28 * x28), 1 + x28 + (x28 + x28 * x28) + (x28 + x28 * x28 + x28 * x28 * (1 + x28)), 3, x28) :|: 7 < 1 + x28 + (x28 + x28 * x28) + (x28 + x28 * x28 + x28 * x28 * (1 + x28)) && x28 < 1000 && 1 + x28 + (x28 + x28 * x28) + (x28 + x28 * x28 + x28 * x28 * (1 + x28)) < 0 && x28 > 1 && x28 < 1001 && x22 = 1000 && x23 = 1000000 && x24 = 1000000000 && x25 = 1000 && x26 = 1000000 && x27 = 1000000000 && x31 = 1001
f_2343(x40:0, x41:0, x42:0, x43:0, x44:0, x45:0, x46:0, x47:0) -> f_2327(1 + x46:0, 1 + x46:0 + (x46:0 + x46:0 * x46:0), 1 + x46:0 + (x46:0 + x46:0 * x46:0) + (x46:0 + x46:0 * x46:0 + x46:0 * x46:0 * (1 + x46:0)), 1, 1, 1, 1 + x43:0, 1 + x43:0 + (x43:0 + x43:0 * x43:0), 1 + x43:0 + (x43:0 + x43:0 * x43:0) + (x43:0 + x43:0 * x43:0 + x43:0 * x43:0 * (1 + x43:0)), 1 + (1 + x46:0), x43:0) :|: x46:0 < 1000 && x43:0 < 1001 && x43:0 > 1 && x40:0 > 1000 && x43:0 < 1000 && 1 + x46:0 + (x46:0 + x46:0 * x46:0) + (x46:0 + x46:0 * x46:0 + x46:0 * x46:0 * (1 + x46:0)) < 1 + (1 + x43:0 + (x43:0 + x43:0 * x43:0) + (x43:0 + x43:0 * x43:0 + x43:0 * x43:0 * (1 + x43:0))) && x46:0 > 1 && x46:0 * x46:0 * x46:0 < 1 + (1 + x43:0 + (x43:0 + x43:0 * x43:0) + (x43:0 + x43:0 * x43:0 + x43:0 * x43:0 * (1 + x43:0)))
f_2343(x56:0, x57:0, x58:0, x59:0, x60:0, x61:0, x62:0, x63:0) -> f_2327(1 + x62:0, 1 + x62:0 + (x62:0 + x62:0 * x62:0), 1 + x62:0 + (x62:0 + x62:0 * x62:0) + (x62:0 + x62:0 * x62:0 + x62:0 * x62:0 * (1 + x62:0)), 1, 1, 1, 1 + x59:0, 1 + x59:0 + (x59:0 + x59:0 * x59:0), 1 + x59:0 + (x59:0 + x59:0 * x59:0) + (x59:0 + x59:0 * x59:0 + x59:0 * x59:0 * (1 + x59:0)), 1 + (1 + x62:0), x59:0) :|: x62:0 < 1000 && x59:0 < 1001 && x59:0 > 1 && x56:0 > 1000 && x59:0 < 1000 && 1 + x62:0 + (x62:0 + x62:0 * x62:0) + (x62:0 + x62:0 * x62:0 + x62:0 * x62:0 * (1 + x62:0)) < 1 + (1 + x59:0 + (x59:0 + x59:0 * x59:0) + (x59:0 + x59:0 * x59:0 + x59:0 * x59:0 * (1 + x59:0))) && x62:0 > 1 && x62:0 * x62:0 * x62:0 > 1 + (1 + x59:0 + (x59:0 + x59:0 * x59:0) + (x59:0 + x59:0 * x59:0 + x59:0 * x59:0 * (1 + x59:0)))
f_2343(x48:0, x49:0, x50:0, x51:0, x52:0, x53:0, x54:0, x55:0) -> f_2327(1 + x54:0, 1 + x54:0 + (x54:0 + x54:0 * x54:0), 1 + x54:0 + (x54:0 + x54:0 * x54:0) + (x54:0 + x54:0 * x54:0 + x54:0 * x54:0 * (1 + x54:0)), 1, 1, 1, 1 + x51:0, 1 + x51:0 + (x51:0 + x51:0 * x51:0), 1 + x51:0 + (x51:0 + x51:0 * x51:0) + (x51:0 + x51:0 * x51:0 + x51:0 * x51:0 * (1 + x51:0)), 1 + (1 + x54:0), x51:0) :|: x54:0 < 1000 && x51:0 < 1001 && x51:0 > 1 && x48:0 > 1000 && x51:0 < 1000 && 1 + x54:0 + (x54:0 + x54:0 * x54:0) + (x54:0 + x54:0 * x54:0 + x54:0 * x54:0 * (1 + x54:0)) > 1 + (1 + x51:0 + (x51:0 + x51:0 * x51:0) + (x51:0 + x51:0 * x51:0 + x51:0 * x51:0 * (1 + x51:0))) && x54:0 > 1 && x54:0 * x54:0 * x54:0 < 1 + (1 + x51:0 + (x51:0 + x51:0 * x51:0) + (x51:0 + x51:0 * x51:0 + x51:0 * x51:0 * (1 + x51:0)))
f_2327(x44, x45, x46, x47, x48, x49, x50, x51, x52, x53, x54) -> f_2327(2, 4, 8, 1, 1, 1, 1 + x50, 1 + x50 + (x50 + x50 * x50), 1 + x50 + (x50 + x50 * x50) + (x50 + x50 * x50 + x50 * x50 * (1 + x50)), 3, x50) :|: 7 > 1 + x50 + (x50 + x50 * x50) + (x50 + x50 * x50 + x50 * x50 * (1 + x50)) && x50 < 1000 && 1 + x50 + (x50 + x50 * x50) + (x50 + x50 * x50 + x50 * x50 * (1 + x50)) > 0 && x50 > 1 && x50 < 1001 && x44 = 1000 && x45 = 1000000 && x46 = 1000000000 && x47 = 1000 && x48 = 1000000 && x49 = 1000000000 && x53 = 1001
f_2343(x8:0, x9:0, x10:0, x11:0, x12:0, x13:0, x14:0, x15:0) -> f_2343(2, 4, 8, 1 + x11:0, 1 + x11:0 + (x11:0 + x11:0 * x11:0), 1 + x11:0 + (x11:0 + x11:0 * x11:0) + (x11:0 + x11:0 * x11:0 + x11:0 * x11:0 * (1 + x11:0)), 2, x11:0) :|: x11:0 > 1 && x11:0 < 1001 && x8:0 > 1000 && 1 + x11:0 + (x11:0 + x11:0 * x11:0) + (x11:0 + x11:0 * x11:0 + x11:0 * x11:0 * (1 + x11:0)) > -7 && x11:0 < 1000 && x14:0 > 999 && x14:0 * x14:0 * x14:0 > 1 + (1 + x11:0 + (x11:0 + x11:0 * x11:0) + (x11:0 + x11:0 * x11:0 + x11:0 * x11:0 * (1 + x11:0)))
f_2343(x64:0, x65:0, x66:0, x67:0, x68:0, x69:0, x70:0, x71:0) -> f_2327(1 + x70:0, 1 + x70:0 + (x70:0 + x70:0 * x70:0), 1 + x70:0 + (x70:0 + x70:0 * x70:0) + (x70:0 + x70:0 * x70:0 + x70:0 * x70:0 * (1 + x70:0)), 1, 1, 1, 1 + x67:0, 1 + x67:0 + (x67:0 + x67:0 * x67:0), 1 + x67:0 + (x67:0 + x67:0 * x67:0) + (x67:0 + x67:0 * x67:0 + x67:0 * x67:0 * (1 + x67:0)), 1 + (1 + x70:0), x67:0) :|: x70:0 < 1000 && x67:0 < 1001 && x67:0 > 1 && x64:0 > 1000 && x67:0 < 1000 && 1 + x70:0 + (x70:0 + x70:0 * x70:0) + (x70:0 + x70:0 * x70:0 + x70:0 * x70:0 * (1 + x70:0)) > 1 + (1 + x67:0 + (x67:0 + x67:0 * x67:0) + (x67:0 + x67:0 * x67:0 + x67:0 * x67:0 * (1 + x67:0))) && x70:0 > 1 && x70:0 * x70:0 * x70:0 > 1 + (1 + x67:0 + (x67:0 + x67:0 * x67:0) + (x67:0 + x67:0 * x67:0 + x67:0 * x67:0 * (1 + x67:0)))
f_2343(v26282:0:0, v26283:0:0, v26284:0:0, v26285:0:0, v26286:0:0, v26287:0:0, v26291:0:0, v26295:0:0) -> f_2343(2, 4, 8, 1 + v26285:0:0, 1 + v26285:0:0 + (v26285:0:0 + v26285:0:0 * v26285:0:0), 1 + v26285:0:0 + (v26285:0:0 + v26285:0:0 * v26285:0:0) + (v26285:0:0 + v26285:0:0 * v26285:0:0 + v26285:0:0 * v26285:0:0 * (1 + v26285:0:0)), 2, v26285:0:0) :|: v26285:0:0 > 1 && v26285:0:0 < 1001 && v26282:0:0 > 1000 && 1 + v26285:0:0 + (v26285:0:0 + v26285:0:0 * v26285:0:0) + (v26285:0:0 + v26285:0:0 * v26285:0:0 + v26285:0:0 * v26285:0:0 * (1 + v26285:0:0)) > -7 && v26285:0:0 < 1000 && v26291:0:0 > 999 && v26291:0:0 * v26291:0:0 * v26291:0:0 < 1 + (1 + v26285:0:0 + (v26285:0:0 + v26285:0:0 * v26285:0:0) + (v26285:0:0 + v26285:0:0 * v26285:0:0 + v26285:0:0 * v26285:0:0 * (1 + v26285:0:0)))
f_2343(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0, x7:0) -> f_2343(2, 4, 8, 1 + x3:0, 1 + x3:0 + (x3:0 + x3:0 * x3:0), 1 + x3:0 + (x3:0 + x3:0 * x3:0) + (x3:0 + x3:0 * x3:0 + x3:0 * x3:0 * (1 + x3:0)), 2, x3:0) :|: x3:0 > 1 && x3:0 < 1001 && x:0 > 1000 && 1 + x3:0 + (x3:0 + x3:0 * x3:0) + (x3:0 + x3:0 * x3:0 + x3:0 * x3:0 * (1 + x3:0)) < -7 && x3:0 < 1000 && x6:0 > 999 && x6:0 * x6:0 * x6:0 < 1 + (1 + x3:0 + (x3:0 + x3:0 * x3:0) + (x3:0 + x3:0 * x3:0 + x3:0 * x3:0 * (1 + x3:0)))
The following rules are bounded:
f_2343(x24:0, times~x24:0~x24:0, times~times~x24:0~x24:0~x24:0, x27:0, times~x27:0~x27:0, times~times~x27:0~x27:0~x27:0, x30:0, x31:0) -> f_2327(x30:0, x30:0 * x30:0, x30:0 * x30:0 * x30:0, x24:0, x24:0 * x24:0, x24:0 * x24:0 * x24:0, x27:0, x27:0 * x27:0, x27:0 * x27:0 * x27:0, 1 + x30:0, x31:0) :|: x30:0 > 1 && x30:0 < 1001 && x27:0 < 1001 && x31:0 < 1000 && x24:0 < 1001 && x30:0 * x30:0 * x30:0 < x24:0 * x24:0 * x24:0 + x27:0 * x27:0 * x27:0 && times~x24:0~x24:0 = x24:0 * x24:0 && times~times~x24:0~x24:0~x24:0 = x24:0 * x24:0 * x24:0 && times~x27:0~x27:0 = x27:0 * x27:0 && times~times~x27:0~x27:0~x27:0 = x27:0 * x27:0 * x27:0
f_2343(x32:0, times~x32:0~x32:0, times~times~x32:0~x32:0~x32:0, x35:0, times~x35:0~x35:0, times~times~x35:0~x35:0~x35:0, x38:0, x39:0) -> f_2327(x38:0, x38:0 * x38:0, x38:0 * x38:0 * x38:0, x32:0, x32:0 * x32:0, x32:0 * x32:0 * x32:0, x35:0, x35:0 * x35:0, x35:0 * x35:0 * x35:0, 1 + x38:0, x39:0) :|: x38:0 > 1 && x38:0 < 1001 && x35:0 < 1001 && x39:0 < 1000 && x32:0 < 1001 && x38:0 * x38:0 * x38:0 > x32:0 * x32:0 * x32:0 + x35:0 * x35:0 * x35:0 && times~x32:0~x32:0 = x32:0 * x32:0 && times~times~x32:0~x32:0~x32:0 = x32:0 * x32:0 * x32:0 && times~x35:0~x35:0 = x35:0 * x35:0 && times~times~x35:0~x35:0~x35:0 = x35:0 * x35:0 * x35:0

----------------------------------------

(13)
Complex Obligation (AND)

----------------------------------------

(14)
Obligation:
Rules:
f_2327(cons_1000, cons_1000000, cons_1000000000, v24113:0:0, v24114:0:0, v24115:0:0, v24116:0:0, times~v24116:0:0~v24116:0:0, times~times~v24116:0:0~v24116:0:0~v24116:0:0, cons_1001, v24126:0:0) -> f_2343(1 + v24113:0:0, 1 + v24113:0:0 + (v24113:0:0 + v24113:0:0 * v24113:0:0), 1 + v24113:0:0 + (v24113:0:0 + v24113:0:0 * v24113:0:0) + (v24113:0:0 + v24113:0:0 * v24113:0:0 + v24113:0:0 * v24113:0:0 * (1 + v24113:0:0)), v24116:0:0, v24116:0:0 * v24116:0:0, v24116:0:0 * v24116:0:0 * v24116:0:0, 2, v24126:0:0) :|: v24113:0:0 < 1000 && v24113:0:0 < 1001 && 1 + v24113:0:0 + (v24113:0:0 + v24113:0:0 * v24113:0:0) + (v24113:0:0 + v24113:0:0 * v24113:0:0 + v24113:0:0 * v24113:0:0 * (1 + v24113:0:0)) + v24116:0:0 * v24116:0:0 * v24116:0:0 > 1 && v24113:0:0 > 0 && cons_1000 = 1000 && cons_1000000 = 1000000 && cons_1000000000 = 1000000000 && times~v24116:0:0~v24116:0:0 = v24116:0:0 * v24116:0:0 && times~times~v24116:0:0~v24116:0:0~v24116:0:0 = v24116:0:0 * v24116:0:0 * v24116:0:0 && cons_1001 = 1001
f_2327(x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43) -> f_2343(1 + x36, 1 + x36 + (x36 + x36 * x36), 1 + x36 + (x36 + x36 * x36) + (x36 + x36 * x36 + x36 * x36 * (1 + x36)), x39, x39 * x39, x39 * x39 * x39, 2, x43) :|: x36 < 1000 && x36 < 1001 && 1 + x36 + (x36 + x36 * x36) + (x36 + x36 * x36 + x36 * x36 * (1 + x36)) + x39 * x39 * x39 < 1 && x36 > 0 && x33 = 1000 && x34 = 1000000 && x35 = 1000000000 && x40 = x39 * x39 && x41 = x39 * x39 * x39 && x42 = 1001
f_2343(x24:0, times~x24:0~x24:0, times~times~x24:0~x24:0~x24:0, x27:0, times~x27:0~x27:0, times~times~x27:0~x27:0~x27:0, x30:0, x31:0) -> f_2327(x30:0, x30:0 * x30:0, x30:0 * x30:0 * x30:0, x24:0, x24:0 * x24:0, x24:0 * x24:0 * x24:0, x27:0, x27:0 * x27:0, x27:0 * x27:0 * x27:0, 1 + x30:0, x31:0) :|: x30:0 > 1 && x30:0 < 1001 && x27:0 < 1001 && x31:0 < 1000 && x24:0 < 1001 && x30:0 * x30:0 * x30:0 < x24:0 * x24:0 * x24:0 + x27:0 * x27:0 * x27:0 && times~x24:0~x24:0 = x24:0 * x24:0 && times~times~x24:0~x24:0~x24:0 = x24:0 * x24:0 * x24:0 && times~x27:0~x27:0 = x27:0 * x27:0 && times~times~x27:0~x27:0~x27:0 = x27:0 * x27:0 * x27:0
f_2343(x32:0, times~x32:0~x32:0, times~times~x32:0~x32:0~x32:0, x35:0, times~x35:0~x35:0, times~times~x35:0~x35:0~x35:0, x38:0, x39:0) -> f_2327(x38:0, x38:0 * x38:0, x38:0 * x38:0 * x38:0, x32:0, x32:0 * x32:0, x32:0 * x32:0 * x32:0, x35:0, x35:0 * x35:0, x35:0 * x35:0 * x35:0, 1 + x38:0, x39:0) :|: x38:0 > 1 && x38:0 < 1001 && x35:0 < 1001 && x39:0 < 1000 && x32:0 < 1001 && x38:0 * x38:0 * x38:0 > x32:0 * x32:0 * x32:0 + x35:0 * x35:0 * x35:0 && times~x32:0~x32:0 = x32:0 * x32:0 && times~times~x32:0~x32:0~x32:0 = x32:0 * x32:0 * x32:0 && times~x35:0~x35:0 = x35:0 * x35:0 && times~times~x35:0~x35:0~x35:0 = x35:0 * x35:0 * x35:0
f_2327(x83:0, x84:0, x85:0, x86:0, x87:0, x88:0, x89:0, x90:0, x91:0, x92:0, x93:0) -> f_2343(x86:0, x87:0, x88:0, x89:0, x90:0, x91:0, x92:0, x93:0) :|: x92:0 < 1001 && x83:0 < 1000

----------------------------------------

(15) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(16)
Obligation:
Rules:
f_2327(cons_1000, cons_1000000, cons_1000000000, v24113:0:0:0, v24114:0:0:0, v24115:0:0:0, v24116:0:0:0, times~v24116:0:0:0~v24116:0:0:0, times~times~v24116:0:0:0~v24116:0:0:0~v24116:0:0:0, cons_1001, v24126:0:0:0) -> f_2343(1 + v24113:0:0:0, 1 + v24113:0:0:0 + (v24113:0:0:0 + v24113:0:0:0 * v24113:0:0:0), 1 + v24113:0:0:0 + (v24113:0:0:0 + v24113:0:0:0 * v24113:0:0:0) + (v24113:0:0:0 + v24113:0:0:0 * v24113:0:0:0 + v24113:0:0:0 * v24113:0:0:0 * (1 + v24113:0:0:0)), v24116:0:0:0, v24116:0:0:0 * v24116:0:0:0, v24116:0:0:0 * v24116:0:0:0 * v24116:0:0:0, 2, v24126:0:0:0) :|: 1 + v24113:0:0:0 + (v24113:0:0:0 + v24113:0:0:0 * v24113:0:0:0) + (v24113:0:0:0 + v24113:0:0:0 * v24113:0:0:0 + v24113:0:0:0 * v24113:0:0:0 * (1 + v24113:0:0:0)) + v24116:0:0:0 * v24116:0:0:0 * v24116:0:0:0 > 1 && v24113:0:0:0 > 0 && v24113:0:0:0 < 1001 && v24113:0:0:0 < 1000 && cons_1000 = 1000 && cons_1000000 = 1000000 && cons_1000000000 = 1000000000 && times~v24116:0:0:0~v24116:0:0:0 = v24116:0:0:0 * v24116:0:0:0 && times~times~v24116:0:0:0~v24116:0:0:0~v24116:0:0:0 = v24116:0:0:0 * v24116:0:0:0 * v24116:0:0:0 && cons_1001 = 1001
f_2343(x32:0:0, times~x32:0:0~x32:0:0, times~times~x32:0:0~x32:0:0~x32:0:0, x35:0:0, times~x35:0:0~x35:0:0, times~times~x35:0:0~x35:0:0~x35:0:0, x38:0:0, x39:0:0) -> f_2327(x38:0:0, x38:0:0 * x38:0:0, x38:0:0 * x38:0:0 * x38:0:0, x32:0:0, x32:0:0 * x32:0:0, x32:0:0 * x32:0:0 * x32:0:0, x35:0:0, x35:0:0 * x35:0:0, x35:0:0 * x35:0:0 * x35:0:0, 1 + x38:0:0, x39:0:0) :|: x32:0:0 < 1001 && x38:0:0 * x38:0:0 * x38:0:0 > x32:0:0 * x32:0:0 * x32:0:0 + x35:0:0 * x35:0:0 * x35:0:0 && x39:0:0 < 1000 && x35:0:0 < 1001 && x38:0:0 < 1001 && x38:0:0 > 1 && times~x32:0:0~x32:0:0 = x32:0:0 * x32:0:0 && times~times~x32:0:0~x32:0:0~x32:0:0 = x32:0:0 * x32:0:0 * x32:0:0 && times~x35:0:0~x35:0:0 = x35:0:0 * x35:0:0 && times~times~x35:0:0~x35:0:0~x35:0:0 = x35:0:0 * x35:0:0 * x35:0:0
f_2327(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f_2343(1 + x3, 1 + x3 + (x3 + x3 * x3), 1 + x3 + (x3 + x3 * x3) + (x3 + x3 * x3 + x3 * x3 * (1 + x3)), x6, x6 * x6, x6 * x6 * x6, 2, x10) :|: 1 + x3 + (x3 + x3 * x3) + (x3 + x3 * x3 + x3 * x3 * (1 + x3)) + x6 * x6 * x6 < 1 && x3 > 0 && x3 < 1001 && x3 < 1000 && x = 1000 && x1 = 1000000 && x2 = 1000000000 && x7 = x6 * x6 && x8 = x6 * x6 * x6 && x9 = 1001
f_2343(x24:0:0, times~x24:0:0~x24:0:0, times~times~x24:0:0~x24:0:0~x24:0:0, x27:0:0, times~x27:0:0~x27:0:0, times~times~x27:0:0~x27:0:0~x27:0:0, x30:0:0, x31:0:0) -> f_2327(x30:0:0, x30:0:0 * x30:0:0, x30:0:0 * x30:0:0 * x30:0:0, x24:0:0, x24:0:0 * x24:0:0, x24:0:0 * x24:0:0 * x24:0:0, x27:0:0, x27:0:0 * x27:0:0, x27:0:0 * x27:0:0 * x27:0:0, 1 + x30:0:0, x31:0:0) :|: x24:0:0 < 1001 && x30:0:0 * x30:0:0 * x30:0:0 < x24:0:0 * x24:0:0 * x24:0:0 + x27:0:0 * x27:0:0 * x27:0:0 && x31:0:0 < 1000 && x27:0:0 < 1001 && x30:0:0 < 1001 && x30:0:0 > 1 && times~x24:0:0~x24:0:0 = x24:0:0 * x24:0:0 && times~times~x24:0:0~x24:0:0~x24:0:0 = x24:0:0 * x24:0:0 * x24:0:0 && times~x27:0:0~x27:0:0 = x27:0:0 * x27:0:0 && times~times~x27:0:0~x27:0:0~x27:0:0 = x27:0:0 * x27:0:0 * x27:0:0
f_2327(x83:0:0, x84:0:0, x85:0:0, x86:0:0, x87:0:0, x88:0:0, x89:0:0, x90:0:0, x91:0:0, x92:0:0, x93:0:0) -> f_2343(x86:0:0, x87:0:0, x88:0:0, x89:0:0, x90:0:0, x91:0:0, x92:0:0, x93:0:0) :|: x92:0:0 < 1001 && x83:0:0 < 1000

----------------------------------------

(17) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_2327 ] = -1998*f_2327_4 + -2*f_2327_10 + 1
[ f_2343 ] = -1998*f_2343_1 + -2*f_2343_7

The following rules are decreasing:
f_2327(cons_1000, cons_1000000, cons_1000000000, v24113:0:0:0, v24114:0:0:0, v24115:0:0:0, v24116:0:0:0, times~v24116:0:0:0~v24116:0:0:0, times~times~v24116:0:0:0~v24116:0:0:0~v24116:0:0:0, cons_1001, v24126:0:0:0) -> f_2343(1 + v24113:0:0:0, 1 + v24113:0:0:0 + (v24113:0:0:0 + v24113:0:0:0 * v24113:0:0:0), 1 + v24113:0:0:0 + (v24113:0:0:0 + v24113:0:0:0 * v24113:0:0:0) + (v24113:0:0:0 + v24113:0:0:0 * v24113:0:0:0 + v24113:0:0:0 * v24113:0:0:0 * (1 + v24113:0:0:0)), v24116:0:0:0, v24116:0:0:0 * v24116:0:0:0, v24116:0:0:0 * v24116:0:0:0 * v24116:0:0:0, 2, v24126:0:0:0) :|: 1 + v24113:0:0:0 + (v24113:0:0:0 + v24113:0:0:0 * v24113:0:0:0) + (v24113:0:0:0 + v24113:0:0:0 * v24113:0:0:0 + v24113:0:0:0 * v24113:0:0:0 * (1 + v24113:0:0:0)) + v24116:0:0:0 * v24116:0:0:0 * v24116:0:0:0 > 1 && v24113:0:0:0 > 0 && v24113:0:0:0 < 1001 && v24113:0:0:0 < 1000 && cons_1000 = 1000 && cons_1000000 = 1000000 && cons_1000000000 = 1000000000 && times~v24116:0:0:0~v24116:0:0:0 = v24116:0:0:0 * v24116:0:0:0 && times~times~v24116:0:0:0~v24116:0:0:0~v24116:0:0:0 = v24116:0:0:0 * v24116:0:0:0 * v24116:0:0:0 && cons_1001 = 1001
f_2343(x32:0:0, times~x32:0:0~x32:0:0, times~times~x32:0:0~x32:0:0~x32:0:0, x35:0:0, times~x35:0:0~x35:0:0, times~times~x35:0:0~x35:0:0~x35:0:0, x38:0:0, x39:0:0) -> f_2327(x38:0:0, x38:0:0 * x38:0:0, x38:0:0 * x38:0:0 * x38:0:0, x32:0:0, x32:0:0 * x32:0:0, x32:0:0 * x32:0:0 * x32:0:0, x35:0:0, x35:0:0 * x35:0:0, x35:0:0 * x35:0:0 * x35:0:0, 1 + x38:0:0, x39:0:0) :|: x32:0:0 < 1001 && x38:0:0 * x38:0:0 * x38:0:0 > x32:0:0 * x32:0:0 * x32:0:0 + x35:0:0 * x35:0:0 * x35:0:0 && x39:0:0 < 1000 && x35:0:0 < 1001 && x38:0:0 < 1001 && x38:0:0 > 1 && times~x32:0:0~x32:0:0 = x32:0:0 * x32:0:0 && times~times~x32:0:0~x32:0:0~x32:0:0 = x32:0:0 * x32:0:0 * x32:0:0 && times~x35:0:0~x35:0:0 = x35:0:0 * x35:0:0 && times~times~x35:0:0~x35:0:0~x35:0:0 = x35:0:0 * x35:0:0 * x35:0:0
f_2327(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f_2343(1 + x3, 1 + x3 + (x3 + x3 * x3), 1 + x3 + (x3 + x3 * x3) + (x3 + x3 * x3 + x3 * x3 * (1 + x3)), x6, x6 * x6, x6 * x6 * x6, 2, x10) :|: 1 + x3 + (x3 + x3 * x3) + (x3 + x3 * x3 + x3 * x3 * (1 + x3)) + x6 * x6 * x6 < 1 && x3 > 0 && x3 < 1001 && x3 < 1000 && x = 1000 && x1 = 1000000 && x2 = 1000000000 && x7 = x6 * x6 && x8 = x6 * x6 * x6 && x9 = 1001
f_2343(x24:0:0, times~x24:0:0~x24:0:0, times~times~x24:0:0~x24:0:0~x24:0:0, x27:0:0, times~x27:0:0~x27:0:0, times~times~x27:0:0~x27:0:0~x27:0:0, x30:0:0, x31:0:0) -> f_2327(x30:0:0, x30:0:0 * x30:0:0, x30:0:0 * x30:0:0 * x30:0:0, x24:0:0, x24:0:0 * x24:0:0, x24:0:0 * x24:0:0 * x24:0:0, x27:0:0, x27:0:0 * x27:0:0, x27:0:0 * x27:0:0 * x27:0:0, 1 + x30:0:0, x31:0:0) :|: x24:0:0 < 1001 && x30:0:0 * x30:0:0 * x30:0:0 < x24:0:0 * x24:0:0 * x24:0:0 + x27:0:0 * x27:0:0 * x27:0:0 && x31:0:0 < 1000 && x27:0:0 < 1001 && x30:0:0 < 1001 && x30:0:0 > 1 && times~x24:0:0~x24:0:0 = x24:0:0 * x24:0:0 && times~times~x24:0:0~x24:0:0~x24:0:0 = x24:0:0 * x24:0:0 * x24:0:0 && times~x27:0:0~x27:0:0 = x27:0:0 * x27:0:0 && times~times~x27:0:0~x27:0:0~x27:0:0 = x27:0:0 * x27:0:0 * x27:0:0
f_2327(x83:0:0, x84:0:0, x85:0:0, x86:0:0, x87:0:0, x88:0:0, x89:0:0, x90:0:0, x91:0:0, x92:0:0, x93:0:0) -> f_2343(x86:0:0, x87:0:0, x88:0:0, x89:0:0, x90:0:0, x91:0:0, x92:0:0, x93:0:0) :|: x92:0:0 < 1001 && x83:0:0 < 1000

The following rules are bounded:
f_2343(x32:0:0, times~x32:0:0~x32:0:0, times~times~x32:0:0~x32:0:0~x32:0:0, x35:0:0, times~x35:0:0~x35:0:0, times~times~x35:0:0~x35:0:0~x35:0:0, x38:0:0, x39:0:0) -> f_2327(x38:0:0, x38:0:0 * x38:0:0, x38:0:0 * x38:0:0 * x38:0:0, x32:0:0, x32:0:0 * x32:0:0, x32:0:0 * x32:0:0 * x32:0:0, x35:0:0, x35:0:0 * x35:0:0, x35:0:0 * x35:0:0 * x35:0:0, 1 + x38:0:0, x39:0:0) :|: x32:0:0 < 1001 && x38:0:0 * x38:0:0 * x38:0:0 > x32:0:0 * x32:0:0 * x32:0:0 + x35:0:0 * x35:0:0 * x35:0:0 && x39:0:0 < 1000 && x35:0:0 < 1001 && x38:0:0 < 1001 && x38:0:0 > 1 && times~x32:0:0~x32:0:0 = x32:0:0 * x32:0:0 && times~times~x32:0:0~x32:0:0~x32:0:0 = x32:0:0 * x32:0:0 * x32:0:0 && times~x35:0:0~x35:0:0 = x35:0:0 * x35:0:0 && times~times~x35:0:0~x35:0:0~x35:0:0 = x35:0:0 * x35:0:0 * x35:0:0
f_2327(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f_2343(1 + x3, 1 + x3 + (x3 + x3 * x3), 1 + x3 + (x3 + x3 * x3) + (x3 + x3 * x3 + x3 * x3 * (1 + x3)), x6, x6 * x6, x6 * x6 * x6, 2, x10) :|: 1 + x3 + (x3 + x3 * x3) + (x3 + x3 * x3 + x3 * x3 * (1 + x3)) + x6 * x6 * x6 < 1 && x3 > 0 && x3 < 1001 && x3 < 1000 && x = 1000 && x1 = 1000000 && x2 = 1000000000 && x7 = x6 * x6 && x8 = x6 * x6 * x6 && x9 = 1001


----------------------------------------

(18)
Obligation:
Rules:
f_2327(cons_1000, cons_1000000, cons_1000000000, v24113:0:0:0, v24114:0:0:0, v24115:0:0:0, v24116:0:0:0, times~v24116:0:0:0~v24116:0:0:0, times~times~v24116:0:0:0~v24116:0:0:0~v24116:0:0:0, cons_1001, v24126:0:0:0) -> f_2343(1 + v24113:0:0:0, 1 + v24113:0:0:0 + (v24113:0:0:0 + v24113:0:0:0 * v24113:0:0:0), 1 + v24113:0:0:0 + (v24113:0:0:0 + v24113:0:0:0 * v24113:0:0:0) + (v24113:0:0:0 + v24113:0:0:0 * v24113:0:0:0 + v24113:0:0:0 * v24113:0:0:0 * (1 + v24113:0:0:0)), v24116:0:0:0, v24116:0:0:0 * v24116:0:0:0, v24116:0:0:0 * v24116:0:0:0 * v24116:0:0:0, 2, v24126:0:0:0) :|: 1 + v24113:0:0:0 + (v24113:0:0:0 + v24113:0:0:0 * v24113:0:0:0) + (v24113:0:0:0 + v24113:0:0:0 * v24113:0:0:0 + v24113:0:0:0 * v24113:0:0:0 * (1 + v24113:0:0:0)) + v24116:0:0:0 * v24116:0:0:0 * v24116:0:0:0 > 1 && v24113:0:0:0 > 0 && v24113:0:0:0 < 1001 && v24113:0:0:0 < 1000 && cons_1000 = 1000 && cons_1000000 = 1000000 && cons_1000000000 = 1000000000 && times~v24116:0:0:0~v24116:0:0:0 = v24116:0:0:0 * v24116:0:0:0 && times~times~v24116:0:0:0~v24116:0:0:0~v24116:0:0:0 = v24116:0:0:0 * v24116:0:0:0 * v24116:0:0:0 && cons_1001 = 1001
f_2343(x24:0:0, times~x24:0:0~x24:0:0, times~times~x24:0:0~x24:0:0~x24:0:0, x27:0:0, times~x27:0:0~x27:0:0, times~times~x27:0:0~x27:0:0~x27:0:0, x30:0:0, x31:0:0) -> f_2327(x30:0:0, x30:0:0 * x30:0:0, x30:0:0 * x30:0:0 * x30:0:0, x24:0:0, x24:0:0 * x24:0:0, x24:0:0 * x24:0:0 * x24:0:0, x27:0:0, x27:0:0 * x27:0:0, x27:0:0 * x27:0:0 * x27:0:0, 1 + x30:0:0, x31:0:0) :|: x24:0:0 < 1001 && x30:0:0 * x30:0:0 * x30:0:0 < x24:0:0 * x24:0:0 * x24:0:0 + x27:0:0 * x27:0:0 * x27:0:0 && x31:0:0 < 1000 && x27:0:0 < 1001 && x30:0:0 < 1001 && x30:0:0 > 1 && times~x24:0:0~x24:0:0 = x24:0:0 * x24:0:0 && times~times~x24:0:0~x24:0:0~x24:0:0 = x24:0:0 * x24:0:0 * x24:0:0 && times~x27:0:0~x27:0:0 = x27:0:0 * x27:0:0 && times~times~x27:0:0~x27:0:0~x27:0:0 = x27:0:0 * x27:0:0 * x27:0:0
f_2327(x83:0:0, x84:0:0, x85:0:0, x86:0:0, x87:0:0, x88:0:0, x89:0:0, x90:0:0, x91:0:0, x92:0:0, x93:0:0) -> f_2343(x86:0:0, x87:0:0, x88:0:0, x89:0:0, x90:0:0, x91:0:0, x92:0:0, x93:0:0) :|: x92:0:0 < 1001 && x83:0:0 < 1000

----------------------------------------

(19) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(20)
Obligation:
Rules:
f_2327(x83:0:0:0, x84:0:0:0, x85:0:0:0, x86:0:0:0, times~x86:0:0:0~x86:0:0:0, times~times~x86:0:0:0~x86:0:0:0~x86:0:0:0, x89:0:0:0, times~x89:0:0:0~x89:0:0:0, times~times~x89:0:0:0~x89:0:0:0~x89:0:0:0, x92:0:0:0, x93:0:0:0) -> f_2327(x92:0:0:0, x92:0:0:0 * x92:0:0:0, x92:0:0:0 * x92:0:0:0 * x92:0:0:0, x86:0:0:0, x86:0:0:0 * x86:0:0:0, x86:0:0:0 * x86:0:0:0 * x86:0:0:0, x89:0:0:0, x89:0:0:0 * x89:0:0:0, x89:0:0:0 * x89:0:0:0 * x89:0:0:0, 1 + x92:0:0:0, x93:0:0:0) :|: x83:0:0:0 < 1000 && x92:0:0:0 > 1 && x92:0:0:0 < 1001 && x89:0:0:0 < 1001 && x93:0:0:0 < 1000 && x92:0:0:0 * x92:0:0:0 * x92:0:0:0 < x86:0:0:0 * x86:0:0:0 * x86:0:0:0 + x89:0:0:0 * x89:0:0:0 * x89:0:0:0 && x86:0:0:0 < 1001 && times~x86:0:0:0~x86:0:0:0 = x86:0:0:0 * x86:0:0:0 && times~times~x86:0:0:0~x86:0:0:0~x86:0:0:0 = x86:0:0:0 * x86:0:0:0 * x86:0:0:0 && times~x89:0:0:0~x89:0:0:0 = x89:0:0:0 * x89:0:0:0 && times~times~x89:0:0:0~x89:0:0:0~x89:0:0:0 = x89:0:0:0 * x89:0:0:0 * x89:0:0:0
f_2327(cons_1000, cons_1000000, cons_1000000000, v24113:0:0:0:0, v24114:0:0:0:0, v24115:0:0:0:0, v24116:0:0:0:0, times~v24116:0:0:0:0~v24116:0:0:0:0, times~times~v24116:0:0:0:0~v24116:0:0:0:0~v24116:0:0:0:0, cons_1001, v24126:0:0:0:0) -> f_2327(2, 4, 8, 1 + v24113:0:0:0:0, (1 + v24113:0:0:0:0) * (1 + v24113:0:0:0:0), (1 + v24113:0:0:0:0) * (1 + v24113:0:0:0:0) * (1 + v24113:0:0:0:0), v24116:0:0:0:0, v24116:0:0:0:0 * v24116:0:0:0:0, v24116:0:0:0:0 * v24116:0:0:0:0 * v24116:0:0:0:0, 3, v24126:0:0:0:0) :|: 1 + v24113:0:0:0:0 + (v24113:0:0:0:0 + v24113:0:0:0:0 * v24113:0:0:0:0) = (1 + v24113:0:0:0:0) * (1 + v24113:0:0:0:0) && 1 + v24113:0:0:0:0 + (v24113:0:0:0:0 + v24113:0:0:0:0 * v24113:0:0:0:0) + (v24113:0:0:0:0 + v24113:0:0:0:0 * v24113:0:0:0:0 + v24113:0:0:0:0 * v24113:0:0:0:0 * (1 + v24113:0:0:0:0)) = (1 + v24113:0:0:0:0) * (1 + v24113:0:0:0:0) * (1 + v24113:0:0:0:0) && v24116:0:0:0:0 < 1001 && v24113:0:0:0:0 < 1001 && v24126:0:0:0:0 < 1000 && 1 + v24113:0:0:0:0 + (v24113:0:0:0:0 + v24113:0:0:0:0 * v24113:0:0:0:0) + (v24113:0:0:0:0 + v24113:0:0:0:0 * v24113:0:0:0:0 + v24113:0:0:0:0 * v24113:0:0:0:0 * (1 + v24113:0:0:0:0)) + v24116:0:0:0:0 * v24116:0:0:0:0 * v24116:0:0:0:0 > 1 && v24113:0:0:0:0 > 0 && 8 < (1 + v24113:0:0:0:0) * (1 + v24113:0:0:0:0) * (1 + v24113:0:0:0:0) + v24116:0:0:0:0 * v24116:0:0:0:0 * v24116:0:0:0:0 && v24113:0:0:0:0 < 1000 && cons_1000 = 1000 && cons_1000000 = 1000000 && cons_1000000000 = 1000000000 && times~v24116:0:0:0:0~v24116:0:0:0:0 = v24116:0:0:0:0 * v24116:0:0:0:0 && times~times~v24116:0:0:0:0~v24116:0:0:0:0~v24116:0:0:0:0 = v24116:0:0:0:0 * v24116:0:0:0:0 * v24116:0:0:0:0 && cons_1001 = 1001

----------------------------------------

(21) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_2327 ] = -1*f_2327_10 + -999*f_2327_4

The following rules are decreasing:
f_2327(x83:0:0:0, x84:0:0:0, x85:0:0:0, x86:0:0:0, times~x86:0:0:0~x86:0:0:0, times~times~x86:0:0:0~x86:0:0:0~x86:0:0:0, x89:0:0:0, times~x89:0:0:0~x89:0:0:0, times~times~x89:0:0:0~x89:0:0:0~x89:0:0:0, x92:0:0:0, x93:0:0:0) -> f_2327(x92:0:0:0, x92:0:0:0 * x92:0:0:0, x92:0:0:0 * x92:0:0:0 * x92:0:0:0, x86:0:0:0, x86:0:0:0 * x86:0:0:0, x86:0:0:0 * x86:0:0:0 * x86:0:0:0, x89:0:0:0, x89:0:0:0 * x89:0:0:0, x89:0:0:0 * x89:0:0:0 * x89:0:0:0, 1 + x92:0:0:0, x93:0:0:0) :|: x83:0:0:0 < 1000 && x92:0:0:0 > 1 && x92:0:0:0 < 1001 && x89:0:0:0 < 1001 && x93:0:0:0 < 1000 && x92:0:0:0 * x92:0:0:0 * x92:0:0:0 < x86:0:0:0 * x86:0:0:0 * x86:0:0:0 + x89:0:0:0 * x89:0:0:0 * x89:0:0:0 && x86:0:0:0 < 1001 && times~x86:0:0:0~x86:0:0:0 = x86:0:0:0 * x86:0:0:0 && times~times~x86:0:0:0~x86:0:0:0~x86:0:0:0 = x86:0:0:0 * x86:0:0:0 * x86:0:0:0 && times~x89:0:0:0~x89:0:0:0 = x89:0:0:0 * x89:0:0:0 && times~times~x89:0:0:0~x89:0:0:0~x89:0:0:0 = x89:0:0:0 * x89:0:0:0 * x89:0:0:0
f_2327(cons_1000, cons_1000000, cons_1000000000, v24113:0:0:0:0, v24114:0:0:0:0, v24115:0:0:0:0, v24116:0:0:0:0, times~v24116:0:0:0:0~v24116:0:0:0:0, times~times~v24116:0:0:0:0~v24116:0:0:0:0~v24116:0:0:0:0, cons_1001, v24126:0:0:0:0) -> f_2327(2, 4, 8, 1 + v24113:0:0:0:0, (1 + v24113:0:0:0:0) * (1 + v24113:0:0:0:0), (1 + v24113:0:0:0:0) * (1 + v24113:0:0:0:0) * (1 + v24113:0:0:0:0), v24116:0:0:0:0, v24116:0:0:0:0 * v24116:0:0:0:0, v24116:0:0:0:0 * v24116:0:0:0:0 * v24116:0:0:0:0, 3, v24126:0:0:0:0) :|: 1 + v24113:0:0:0:0 + (v24113:0:0:0:0 + v24113:0:0:0:0 * v24113:0:0:0:0) = (1 + v24113:0:0:0:0) * (1 + v24113:0:0:0:0) && 1 + v24113:0:0:0:0 + (v24113:0:0:0:0 + v24113:0:0:0:0 * v24113:0:0:0:0) + (v24113:0:0:0:0 + v24113:0:0:0:0 * v24113:0:0:0:0 + v24113:0:0:0:0 * v24113:0:0:0:0 * (1 + v24113:0:0:0:0)) = (1 + v24113:0:0:0:0) * (1 + v24113:0:0:0:0) * (1 + v24113:0:0:0:0) && v24116:0:0:0:0 < 1001 && v24113:0:0:0:0 < 1001 && v24126:0:0:0:0 < 1000 && 1 + v24113:0:0:0:0 + (v24113:0:0:0:0 + v24113:0:0:0:0 * v24113:0:0:0:0) + (v24113:0:0:0:0 + v24113:0:0:0:0 * v24113:0:0:0:0 + v24113:0:0:0:0 * v24113:0:0:0:0 * (1 + v24113:0:0:0:0)) + v24116:0:0:0:0 * v24116:0:0:0:0 * v24116:0:0:0:0 > 1 && v24113:0:0:0:0 > 0 && 8 < (1 + v24113:0:0:0:0) * (1 + v24113:0:0:0:0) * (1 + v24113:0:0:0:0) + v24116:0:0:0:0 * v24116:0:0:0:0 * v24116:0:0:0:0 && v24113:0:0:0:0 < 1000 && cons_1000 = 1000 && cons_1000000 = 1000000 && cons_1000000000 = 1000000000 && times~v24116:0:0:0:0~v24116:0:0:0:0 = v24116:0:0:0:0 * v24116:0:0:0:0 && times~times~v24116:0:0:0:0~v24116:0:0:0:0~v24116:0:0:0:0 = v24116:0:0:0:0 * v24116:0:0:0:0 * v24116:0:0:0:0 && cons_1001 = 1001

The following rules are bounded:
f_2327(x83:0:0:0, x84:0:0:0, x85:0:0:0, x86:0:0:0, times~x86:0:0:0~x86:0:0:0, times~times~x86:0:0:0~x86:0:0:0~x86:0:0:0, x89:0:0:0, times~x89:0:0:0~x89:0:0:0, times~times~x89:0:0:0~x89:0:0:0~x89:0:0:0, x92:0:0:0, x93:0:0:0) -> f_2327(x92:0:0:0, x92:0:0:0 * x92:0:0:0, x92:0:0:0 * x92:0:0:0 * x92:0:0:0, x86:0:0:0, x86:0:0:0 * x86:0:0:0, x86:0:0:0 * x86:0:0:0 * x86:0:0:0, x89:0:0:0, x89:0:0:0 * x89:0:0:0, x89:0:0:0 * x89:0:0:0 * x89:0:0:0, 1 + x92:0:0:0, x93:0:0:0) :|: x83:0:0:0 < 1000 && x92:0:0:0 > 1 && x92:0:0:0 < 1001 && x89:0:0:0 < 1001 && x93:0:0:0 < 1000 && x92:0:0:0 * x92:0:0:0 * x92:0:0:0 < x86:0:0:0 * x86:0:0:0 * x86:0:0:0 + x89:0:0:0 * x89:0:0:0 * x89:0:0:0 && x86:0:0:0 < 1001 && times~x86:0:0:0~x86:0:0:0 = x86:0:0:0 * x86:0:0:0 && times~times~x86:0:0:0~x86:0:0:0~x86:0:0:0 = x86:0:0:0 * x86:0:0:0 * x86:0:0:0 && times~x89:0:0:0~x89:0:0:0 = x89:0:0:0 * x89:0:0:0 && times~times~x89:0:0:0~x89:0:0:0~x89:0:0:0 = x89:0:0:0 * x89:0:0:0 * x89:0:0:0
f_2327(cons_1000, cons_1000000, cons_1000000000, v24113:0:0:0:0, v24114:0:0:0:0, v24115:0:0:0:0, v24116:0:0:0:0, times~v24116:0:0:0:0~v24116:0:0:0:0, times~times~v24116:0:0:0:0~v24116:0:0:0:0~v24116:0:0:0:0, cons_1001, v24126:0:0:0:0) -> f_2327(2, 4, 8, 1 + v24113:0:0:0:0, (1 + v24113:0:0:0:0) * (1 + v24113:0:0:0:0), (1 + v24113:0:0:0:0) * (1 + v24113:0:0:0:0) * (1 + v24113:0:0:0:0), v24116:0:0:0:0, v24116:0:0:0:0 * v24116:0:0:0:0, v24116:0:0:0:0 * v24116:0:0:0:0 * v24116:0:0:0:0, 3, v24126:0:0:0:0) :|: 1 + v24113:0:0:0:0 + (v24113:0:0:0:0 + v24113:0:0:0:0 * v24113:0:0:0:0) = (1 + v24113:0:0:0:0) * (1 + v24113:0:0:0:0) && 1 + v24113:0:0:0:0 + (v24113:0:0:0:0 + v24113:0:0:0:0 * v24113:0:0:0:0) + (v24113:0:0:0:0 + v24113:0:0:0:0 * v24113:0:0:0:0 + v24113:0:0:0:0 * v24113:0:0:0:0 * (1 + v24113:0:0:0:0)) = (1 + v24113:0:0:0:0) * (1 + v24113:0:0:0:0) * (1 + v24113:0:0:0:0) && v24116:0:0:0:0 < 1001 && v24113:0:0:0:0 < 1001 && v24126:0:0:0:0 < 1000 && 1 + v24113:0:0:0:0 + (v24113:0:0:0:0 + v24113:0:0:0:0 * v24113:0:0:0:0) + (v24113:0:0:0:0 + v24113:0:0:0:0 * v24113:0:0:0:0 + v24113:0:0:0:0 * v24113:0:0:0:0 * (1 + v24113:0:0:0:0)) + v24116:0:0:0:0 * v24116:0:0:0:0 * v24116:0:0:0:0 > 1 && v24113:0:0:0:0 > 0 && 8 < (1 + v24113:0:0:0:0) * (1 + v24113:0:0:0:0) * (1 + v24113:0:0:0:0) + v24116:0:0:0:0 * v24116:0:0:0:0 * v24116:0:0:0:0 && v24113:0:0:0:0 < 1000 && cons_1000 = 1000 && cons_1000000 = 1000000 && cons_1000000000 = 1000000000 && times~v24116:0:0:0:0~v24116:0:0:0:0 = v24116:0:0:0:0 * v24116:0:0:0:0 && times~times~v24116:0:0:0:0~v24116:0:0:0:0~v24116:0:0:0:0 = v24116:0:0:0:0 * v24116:0:0:0:0 * v24116:0:0:0:0 && cons_1001 = 1001


----------------------------------------

(22)
YES

----------------------------------------

(23)
Obligation:
Rules:
f_2327(cons_1000, cons_1000000, cons_1000000000, v24113:0:0, v24114:0:0, v24115:0:0, v24116:0:0, times~v24116:0:0~v24116:0:0, times~times~v24116:0:0~v24116:0:0~v24116:0:0, cons_1001, v24126:0:0) -> f_2343(1 + v24113:0:0, 1 + v24113:0:0 + (v24113:0:0 + v24113:0:0 * v24113:0:0), 1 + v24113:0:0 + (v24113:0:0 + v24113:0:0 * v24113:0:0) + (v24113:0:0 + v24113:0:0 * v24113:0:0 + v24113:0:0 * v24113:0:0 * (1 + v24113:0:0)), v24116:0:0, v24116:0:0 * v24116:0:0, v24116:0:0 * v24116:0:0 * v24116:0:0, 2, v24126:0:0) :|: v24113:0:0 < 1000 && v24113:0:0 < 1001 && 1 + v24113:0:0 + (v24113:0:0 + v24113:0:0 * v24113:0:0) + (v24113:0:0 + v24113:0:0 * v24113:0:0 + v24113:0:0 * v24113:0:0 * (1 + v24113:0:0)) + v24116:0:0 * v24116:0:0 * v24116:0:0 > 1 && v24113:0:0 > 0 && cons_1000 = 1000 && cons_1000000 = 1000000 && cons_1000000000 = 1000000000 && times~v24116:0:0~v24116:0:0 = v24116:0:0 * v24116:0:0 && times~times~v24116:0:0~v24116:0:0~v24116:0:0 = v24116:0:0 * v24116:0:0 * v24116:0:0 && cons_1001 = 1001
f_2327(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f_2327(2, 4, 8, 1, 1, 1, 1 + x6, 1 + x6 + (x6 + x6 * x6), 1 + x6 + (x6 + x6 * x6) + (x6 + x6 * x6 + x6 * x6 * (1 + x6)), 3, x6) :|: 7 > 1 + x6 + (x6 + x6 * x6) + (x6 + x6 * x6 + x6 * x6 * (1 + x6)) && x6 < 1000 && 1 + x6 + (x6 + x6 * x6) + (x6 + x6 * x6 + x6 * x6 * (1 + x6)) < 0 && x6 > 1 && x6 < 1001 && x = 1000 && x1 = 1000000 && x2 = 1000000000 && x3 = 1000 && x4 = 1000000 && x5 = 1000000000 && x9 = 1001
f_2327(x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21) -> f_2327(2, 4, 8, 1, 1, 1, 1 + x17, 1 + x17 + (x17 + x17 * x17), 1 + x17 + (x17 + x17 * x17) + (x17 + x17 * x17 + x17 * x17 * (1 + x17)), 3, x17) :|: x17 < 1000 && x17 < 1001 && 7 < 1 + x17 + (x17 + x17 * x17) + (x17 + x17 * x17 + x17 * x17 * (1 + x17)) && x17 > 1 && x11 = 1000 && x12 = 1000000 && x13 = 1000000000 && x14 = 1000 && x15 = 1000000 && x16 = 1000000000 && x20 = 1001
f_2343(x16:0, x17:0, x18:0, x19:0, x20:0, x21:0, x22:0, x23:0) -> f_2343(2, 4, 8, 1 + x19:0, 1 + x19:0 + (x19:0 + x19:0 * x19:0), 1 + x19:0 + (x19:0 + x19:0 * x19:0) + (x19:0 + x19:0 * x19:0 + x19:0 * x19:0 * (1 + x19:0)), 2, x19:0) :|: x19:0 > 1 && x19:0 < 1001 && x16:0 > 1000 && 1 + x19:0 + (x19:0 + x19:0 * x19:0) + (x19:0 + x19:0 * x19:0 + x19:0 * x19:0 * (1 + x19:0)) < -7 && x19:0 < 1000 && x22:0 > 999 && x22:0 * x22:0 * x22:0 > 1 + (1 + x19:0 + (x19:0 + x19:0 * x19:0) + (x19:0 + x19:0 * x19:0 + x19:0 * x19:0 * (1 + x19:0)))
f_2327(x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32) -> f_2327(2, 4, 8, 1, 1, 1, 1 + x28, 1 + x28 + (x28 + x28 * x28), 1 + x28 + (x28 + x28 * x28) + (x28 + x28 * x28 + x28 * x28 * (1 + x28)), 3, x28) :|: 7 < 1 + x28 + (x28 + x28 * x28) + (x28 + x28 * x28 + x28 * x28 * (1 + x28)) && x28 < 1000 && 1 + x28 + (x28 + x28 * x28) + (x28 + x28 * x28 + x28 * x28 * (1 + x28)) < 0 && x28 > 1 && x28 < 1001 && x22 = 1000 && x23 = 1000000 && x24 = 1000000000 && x25 = 1000 && x26 = 1000000 && x27 = 1000000000 && x31 = 1001
f_2343(x40:0, x41:0, x42:0, x43:0, x44:0, x45:0, x46:0, x47:0) -> f_2327(1 + x46:0, 1 + x46:0 + (x46:0 + x46:0 * x46:0), 1 + x46:0 + (x46:0 + x46:0 * x46:0) + (x46:0 + x46:0 * x46:0 + x46:0 * x46:0 * (1 + x46:0)), 1, 1, 1, 1 + x43:0, 1 + x43:0 + (x43:0 + x43:0 * x43:0), 1 + x43:0 + (x43:0 + x43:0 * x43:0) + (x43:0 + x43:0 * x43:0 + x43:0 * x43:0 * (1 + x43:0)), 1 + (1 + x46:0), x43:0) :|: x46:0 < 1000 && x43:0 < 1001 && x43:0 > 1 && x40:0 > 1000 && x43:0 < 1000 && 1 + x46:0 + (x46:0 + x46:0 * x46:0) + (x46:0 + x46:0 * x46:0 + x46:0 * x46:0 * (1 + x46:0)) < 1 + (1 + x43:0 + (x43:0 + x43:0 * x43:0) + (x43:0 + x43:0 * x43:0 + x43:0 * x43:0 * (1 + x43:0))) && x46:0 > 1 && x46:0 * x46:0 * x46:0 < 1 + (1 + x43:0 + (x43:0 + x43:0 * x43:0) + (x43:0 + x43:0 * x43:0 + x43:0 * x43:0 * (1 + x43:0)))
f_2327(x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43) -> f_2343(1 + x36, 1 + x36 + (x36 + x36 * x36), 1 + x36 + (x36 + x36 * x36) + (x36 + x36 * x36 + x36 * x36 * (1 + x36)), x39, x39 * x39, x39 * x39 * x39, 2, x43) :|: x36 < 1000 && x36 < 1001 && 1 + x36 + (x36 + x36 * x36) + (x36 + x36 * x36 + x36 * x36 * (1 + x36)) + x39 * x39 * x39 < 1 && x36 > 0 && x33 = 1000 && x34 = 1000000 && x35 = 1000000000 && x40 = x39 * x39 && x41 = x39 * x39 * x39 && x42 = 1001
f_2343(x56:0, x57:0, x58:0, x59:0, x60:0, x61:0, x62:0, x63:0) -> f_2327(1 + x62:0, 1 + x62:0 + (x62:0 + x62:0 * x62:0), 1 + x62:0 + (x62:0 + x62:0 * x62:0) + (x62:0 + x62:0 * x62:0 + x62:0 * x62:0 * (1 + x62:0)), 1, 1, 1, 1 + x59:0, 1 + x59:0 + (x59:0 + x59:0 * x59:0), 1 + x59:0 + (x59:0 + x59:0 * x59:0) + (x59:0 + x59:0 * x59:0 + x59:0 * x59:0 * (1 + x59:0)), 1 + (1 + x62:0), x59:0) :|: x62:0 < 1000 && x59:0 < 1001 && x59:0 > 1 && x56:0 > 1000 && x59:0 < 1000 && 1 + x62:0 + (x62:0 + x62:0 * x62:0) + (x62:0 + x62:0 * x62:0 + x62:0 * x62:0 * (1 + x62:0)) < 1 + (1 + x59:0 + (x59:0 + x59:0 * x59:0) + (x59:0 + x59:0 * x59:0 + x59:0 * x59:0 * (1 + x59:0))) && x62:0 > 1 && x62:0 * x62:0 * x62:0 > 1 + (1 + x59:0 + (x59:0 + x59:0 * x59:0) + (x59:0 + x59:0 * x59:0 + x59:0 * x59:0 * (1 + x59:0)))
f_2343(x48:0, x49:0, x50:0, x51:0, x52:0, x53:0, x54:0, x55:0) -> f_2327(1 + x54:0, 1 + x54:0 + (x54:0 + x54:0 * x54:0), 1 + x54:0 + (x54:0 + x54:0 * x54:0) + (x54:0 + x54:0 * x54:0 + x54:0 * x54:0 * (1 + x54:0)), 1, 1, 1, 1 + x51:0, 1 + x51:0 + (x51:0 + x51:0 * x51:0), 1 + x51:0 + (x51:0 + x51:0 * x51:0) + (x51:0 + x51:0 * x51:0 + x51:0 * x51:0 * (1 + x51:0)), 1 + (1 + x54:0), x51:0) :|: x54:0 < 1000 && x51:0 < 1001 && x51:0 > 1 && x48:0 > 1000 && x51:0 < 1000 && 1 + x54:0 + (x54:0 + x54:0 * x54:0) + (x54:0 + x54:0 * x54:0 + x54:0 * x54:0 * (1 + x54:0)) > 1 + (1 + x51:0 + (x51:0 + x51:0 * x51:0) + (x51:0 + x51:0 * x51:0 + x51:0 * x51:0 * (1 + x51:0))) && x54:0 > 1 && x54:0 * x54:0 * x54:0 < 1 + (1 + x51:0 + (x51:0 + x51:0 * x51:0) + (x51:0 + x51:0 * x51:0 + x51:0 * x51:0 * (1 + x51:0)))
f_2327(x44, x45, x46, x47, x48, x49, x50, x51, x52, x53, x54) -> f_2327(2, 4, 8, 1, 1, 1, 1 + x50, 1 + x50 + (x50 + x50 * x50), 1 + x50 + (x50 + x50 * x50) + (x50 + x50 * x50 + x50 * x50 * (1 + x50)), 3, x50) :|: 7 > 1 + x50 + (x50 + x50 * x50) + (x50 + x50 * x50 + x50 * x50 * (1 + x50)) && x50 < 1000 && 1 + x50 + (x50 + x50 * x50) + (x50 + x50 * x50 + x50 * x50 * (1 + x50)) > 0 && x50 > 1 && x50 < 1001 && x44 = 1000 && x45 = 1000000 && x46 = 1000000000 && x47 = 1000 && x48 = 1000000 && x49 = 1000000000 && x53 = 1001
f_2343(x8:0, x9:0, x10:0, x11:0, x12:0, x13:0, x14:0, x15:0) -> f_2343(2, 4, 8, 1 + x11:0, 1 + x11:0 + (x11:0 + x11:0 * x11:0), 1 + x11:0 + (x11:0 + x11:0 * x11:0) + (x11:0 + x11:0 * x11:0 + x11:0 * x11:0 * (1 + x11:0)), 2, x11:0) :|: x11:0 > 1 && x11:0 < 1001 && x8:0 > 1000 && 1 + x11:0 + (x11:0 + x11:0 * x11:0) + (x11:0 + x11:0 * x11:0 + x11:0 * x11:0 * (1 + x11:0)) > -7 && x11:0 < 1000 && x14:0 > 999 && x14:0 * x14:0 * x14:0 > 1 + (1 + x11:0 + (x11:0 + x11:0 * x11:0) + (x11:0 + x11:0 * x11:0 + x11:0 * x11:0 * (1 + x11:0)))
f_2343(x64:0, x65:0, x66:0, x67:0, x68:0, x69:0, x70:0, x71:0) -> f_2327(1 + x70:0, 1 + x70:0 + (x70:0 + x70:0 * x70:0), 1 + x70:0 + (x70:0 + x70:0 * x70:0) + (x70:0 + x70:0 * x70:0 + x70:0 * x70:0 * (1 + x70:0)), 1, 1, 1, 1 + x67:0, 1 + x67:0 + (x67:0 + x67:0 * x67:0), 1 + x67:0 + (x67:0 + x67:0 * x67:0) + (x67:0 + x67:0 * x67:0 + x67:0 * x67:0 * (1 + x67:0)), 1 + (1 + x70:0), x67:0) :|: x70:0 < 1000 && x67:0 < 1001 && x67:0 > 1 && x64:0 > 1000 && x67:0 < 1000 && 1 + x70:0 + (x70:0 + x70:0 * x70:0) + (x70:0 + x70:0 * x70:0 + x70:0 * x70:0 * (1 + x70:0)) > 1 + (1 + x67:0 + (x67:0 + x67:0 * x67:0) + (x67:0 + x67:0 * x67:0 + x67:0 * x67:0 * (1 + x67:0))) && x70:0 > 1 && x70:0 * x70:0 * x70:0 > 1 + (1 + x67:0 + (x67:0 + x67:0 * x67:0) + (x67:0 + x67:0 * x67:0 + x67:0 * x67:0 * (1 + x67:0)))
f_2343(v26282:0:0, v26283:0:0, v26284:0:0, v26285:0:0, v26286:0:0, v26287:0:0, v26291:0:0, v26295:0:0) -> f_2343(2, 4, 8, 1 + v26285:0:0, 1 + v26285:0:0 + (v26285:0:0 + v26285:0:0 * v26285:0:0), 1 + v26285:0:0 + (v26285:0:0 + v26285:0:0 * v26285:0:0) + (v26285:0:0 + v26285:0:0 * v26285:0:0 + v26285:0:0 * v26285:0:0 * (1 + v26285:0:0)), 2, v26285:0:0) :|: v26285:0:0 > 1 && v26285:0:0 < 1001 && v26282:0:0 > 1000 && 1 + v26285:0:0 + (v26285:0:0 + v26285:0:0 * v26285:0:0) + (v26285:0:0 + v26285:0:0 * v26285:0:0 + v26285:0:0 * v26285:0:0 * (1 + v26285:0:0)) > -7 && v26285:0:0 < 1000 && v26291:0:0 > 999 && v26291:0:0 * v26291:0:0 * v26291:0:0 < 1 + (1 + v26285:0:0 + (v26285:0:0 + v26285:0:0 * v26285:0:0) + (v26285:0:0 + v26285:0:0 * v26285:0:0 + v26285:0:0 * v26285:0:0 * (1 + v26285:0:0)))
f_2343(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0, x7:0) -> f_2343(2, 4, 8, 1 + x3:0, 1 + x3:0 + (x3:0 + x3:0 * x3:0), 1 + x3:0 + (x3:0 + x3:0 * x3:0) + (x3:0 + x3:0 * x3:0 + x3:0 * x3:0 * (1 + x3:0)), 2, x3:0) :|: x3:0 > 1 && x3:0 < 1001 && x:0 > 1000 && 1 + x3:0 + (x3:0 + x3:0 * x3:0) + (x3:0 + x3:0 * x3:0 + x3:0 * x3:0 * (1 + x3:0)) < -7 && x3:0 < 1000 && x6:0 > 999 && x6:0 * x6:0 * x6:0 < 1 + (1 + x3:0 + (x3:0 + x3:0 * x3:0) + (x3:0 + x3:0 * x3:0 + x3:0 * x3:0 * (1 + x3:0)))
f_2327(x83:0, x84:0, x85:0, x86:0, x87:0, x88:0, x89:0, x90:0, x91:0, x92:0, x93:0) -> f_2343(x86:0, x87:0, x88:0, x89:0, x90:0, x91:0, x92:0, x93:0) :|: x92:0 < 1001 && x83:0 < 1000

----------------------------------------

(24) TerminationGraphProcessor (EQUIVALENT)
Constructed the termination graph and obtained one non-trivial SCC.

----------------------------------------

(25)
Obligation:
Rules:
f_2327(x83:0, x84:0, x85:0, x86:0, x87:0, x88:0, x89:0, x90:0, x91:0, x92:0, x93:0) -> f_2343(x86:0, x87:0, x88:0, x89:0, x90:0, x91:0, x92:0, x93:0) :|: x92:0 < 1001 && x83:0 < 1000
f_2343(x40:0, x41:0, x42:0, x43:0, x44:0, x45:0, x46:0, x47:0) -> f_2327(1 + x46:0, 1 + x46:0 + (x46:0 + x46:0 * x46:0), 1 + x46:0 + (x46:0 + x46:0 * x46:0) + (x46:0 + x46:0 * x46:0 + x46:0 * x46:0 * (1 + x46:0)), 1, 1, 1, 1 + x43:0, 1 + x43:0 + (x43:0 + x43:0 * x43:0), 1 + x43:0 + (x43:0 + x43:0 * x43:0) + (x43:0 + x43:0 * x43:0 + x43:0 * x43:0 * (1 + x43:0)), 1 + (1 + x46:0), x43:0) :|: x46:0 < 1000 && x43:0 < 1001 && x43:0 > 1 && x40:0 > 1000 && x43:0 < 1000 && 1 + x46:0 + (x46:0 + x46:0 * x46:0) + (x46:0 + x46:0 * x46:0 + x46:0 * x46:0 * (1 + x46:0)) < 1 + (1 + x43:0 + (x43:0 + x43:0 * x43:0) + (x43:0 + x43:0 * x43:0 + x43:0 * x43:0 * (1 + x43:0))) && x46:0 > 1 && x46:0 * x46:0 * x46:0 < 1 + (1 + x43:0 + (x43:0 + x43:0 * x43:0) + (x43:0 + x43:0 * x43:0 + x43:0 * x43:0 * (1 + x43:0)))
f_2343(x56:0, x57:0, x58:0, x59:0, x60:0, x61:0, x62:0, x63:0) -> f_2327(1 + x62:0, 1 + x62:0 + (x62:0 + x62:0 * x62:0), 1 + x62:0 + (x62:0 + x62:0 * x62:0) + (x62:0 + x62:0 * x62:0 + x62:0 * x62:0 * (1 + x62:0)), 1, 1, 1, 1 + x59:0, 1 + x59:0 + (x59:0 + x59:0 * x59:0), 1 + x59:0 + (x59:0 + x59:0 * x59:0) + (x59:0 + x59:0 * x59:0 + x59:0 * x59:0 * (1 + x59:0)), 1 + (1 + x62:0), x59:0) :|: x62:0 < 1000 && x59:0 < 1001 && x59:0 > 1 && x56:0 > 1000 && x59:0 < 1000 && 1 + x62:0 + (x62:0 + x62:0 * x62:0) + (x62:0 + x62:0 * x62:0 + x62:0 * x62:0 * (1 + x62:0)) < 1 + (1 + x59:0 + (x59:0 + x59:0 * x59:0) + (x59:0 + x59:0 * x59:0 + x59:0 * x59:0 * (1 + x59:0))) && x62:0 > 1 && x62:0 * x62:0 * x62:0 > 1 + (1 + x59:0 + (x59:0 + x59:0 * x59:0) + (x59:0 + x59:0 * x59:0 + x59:0 * x59:0 * (1 + x59:0)))
f_2343(x48:0, x49:0, x50:0, x51:0, x52:0, x53:0, x54:0, x55:0) -> f_2327(1 + x54:0, 1 + x54:0 + (x54:0 + x54:0 * x54:0), 1 + x54:0 + (x54:0 + x54:0 * x54:0) + (x54:0 + x54:0 * x54:0 + x54:0 * x54:0 * (1 + x54:0)), 1, 1, 1, 1 + x51:0, 1 + x51:0 + (x51:0 + x51:0 * x51:0), 1 + x51:0 + (x51:0 + x51:0 * x51:0) + (x51:0 + x51:0 * x51:0 + x51:0 * x51:0 * (1 + x51:0)), 1 + (1 + x54:0), x51:0) :|: x54:0 < 1000 && x51:0 < 1001 && x51:0 > 1 && x48:0 > 1000 && x51:0 < 1000 && 1 + x54:0 + (x54:0 + x54:0 * x54:0) + (x54:0 + x54:0 * x54:0 + x54:0 * x54:0 * (1 + x54:0)) > 1 + (1 + x51:0 + (x51:0 + x51:0 * x51:0) + (x51:0 + x51:0 * x51:0 + x51:0 * x51:0 * (1 + x51:0))) && x54:0 > 1 && x54:0 * x54:0 * x54:0 < 1 + (1 + x51:0 + (x51:0 + x51:0 * x51:0) + (x51:0 + x51:0 * x51:0 + x51:0 * x51:0 * (1 + x51:0)))
f_2343(x64:0, x65:0, x66:0, x67:0, x68:0, x69:0, x70:0, x71:0) -> f_2327(1 + x70:0, 1 + x70:0 + (x70:0 + x70:0 * x70:0), 1 + x70:0 + (x70:0 + x70:0 * x70:0) + (x70:0 + x70:0 * x70:0 + x70:0 * x70:0 * (1 + x70:0)), 1, 1, 1, 1 + x67:0, 1 + x67:0 + (x67:0 + x67:0 * x67:0), 1 + x67:0 + (x67:0 + x67:0 * x67:0) + (x67:0 + x67:0 * x67:0 + x67:0 * x67:0 * (1 + x67:0)), 1 + (1 + x70:0), x67:0) :|: x70:0 < 1000 && x67:0 < 1001 && x67:0 > 1 && x64:0 > 1000 && x67:0 < 1000 && 1 + x70:0 + (x70:0 + x70:0 * x70:0) + (x70:0 + x70:0 * x70:0 + x70:0 * x70:0 * (1 + x70:0)) > 1 + (1 + x67:0 + (x67:0 + x67:0 * x67:0) + (x67:0 + x67:0 * x67:0 + x67:0 * x67:0 * (1 + x67:0))) && x70:0 > 1 && x70:0 * x70:0 * x70:0 > 1 + (1 + x67:0 + (x67:0 + x67:0 * x67:0) + (x67:0 + x67:0 * x67:0 + x67:0 * x67:0 * (1 + x67:0)))

----------------------------------------

(26) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(27)
Obligation:
Rules:
f_2327(x83:0:0, x84:0:0, x85:0:0, x86:0:0, x87:0:0, x88:0:0, x89:0:0, x90:0:0, x91:0:0, x92:0:0, x93:0:0) -> f_2327(1 + x92:0:0, 1 + x92:0:0 + (x92:0:0 + x92:0:0 * x92:0:0), 1 + x92:0:0 + (x92:0:0 + x92:0:0 * x92:0:0) + (x92:0:0 + x92:0:0 * x92:0:0 + x92:0:0 * x92:0:0 * (1 + x92:0:0)), 1, 1, 1, 1 + x89:0:0, 1 + x89:0:0 + (x89:0:0 + x89:0:0 * x89:0:0), 1 + x89:0:0 + (x89:0:0 + x89:0:0 * x89:0:0) + (x89:0:0 + x89:0:0 * x89:0:0 + x89:0:0 * x89:0:0 * (1 + x89:0:0)), 1 + (1 + x92:0:0), x89:0:0) :|: x83:0:0 < 1000 && x92:0:0 < 1001 && x92:0:0 * x92:0:0 * x92:0:0 < 1 + (1 + x89:0:0 + (x89:0:0 + x89:0:0 * x89:0:0) + (x89:0:0 + x89:0:0 * x89:0:0 + x89:0:0 * x89:0:0 * (1 + x89:0:0))) && x92:0:0 > 1 && 1 + x92:0:0 + (x92:0:0 + x92:0:0 * x92:0:0) + (x92:0:0 + x92:0:0 * x92:0:0 + x92:0:0 * x92:0:0 * (1 + x92:0:0)) < 1 + (1 + x89:0:0 + (x89:0:0 + x89:0:0 * x89:0:0) + (x89:0:0 + x89:0:0 * x89:0:0 + x89:0:0 * x89:0:0 * (1 + x89:0:0))) && x89:0:0 < 1000 && x86:0:0 > 1000 && x89:0:0 > 1 && x89:0:0 < 1001 && x92:0:0 < 1000
f_2327(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f_2327(1 + x9, 1 + x9 + (x9 + x9 * x9), 1 + x9 + (x9 + x9 * x9) + (x9 + x9 * x9 + x9 * x9 * (1 + x9)), 1, 1, 1, 1 + x6, 1 + x6 + (x6 + x6 * x6), 1 + x6 + (x6 + x6 * x6) + (x6 + x6 * x6 + x6 * x6 * (1 + x6)), 1 + (1 + x9), x6) :|: x < 1000 && x9 < 1001 && x9 * x9 * x9 > 1 + (1 + x6 + (x6 + x6 * x6) + (x6 + x6 * x6 + x6 * x6 * (1 + x6))) && x9 > 1 && 1 + x9 + (x9 + x9 * x9) + (x9 + x9 * x9 + x9 * x9 * (1 + x9)) > 1 + (1 + x6 + (x6 + x6 * x6) + (x6 + x6 * x6 + x6 * x6 * (1 + x6))) && x6 < 1000 && x3 > 1000 && x6 > 1 && x6 < 1001 && x9 < 1000
f_2327(x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21) -> f_2327(1 + x20, 1 + x20 + (x20 + x20 * x20), 1 + x20 + (x20 + x20 * x20) + (x20 + x20 * x20 + x20 * x20 * (1 + x20)), 1, 1, 1, 1 + x17, 1 + x17 + (x17 + x17 * x17), 1 + x17 + (x17 + x17 * x17) + (x17 + x17 * x17 + x17 * x17 * (1 + x17)), 1 + (1 + x20), x17) :|: x11 < 1000 && x20 < 1001 && x20 * x20 * x20 < 1 + (1 + x17 + (x17 + x17 * x17) + (x17 + x17 * x17 + x17 * x17 * (1 + x17))) && x20 > 1 && 1 + x20 + (x20 + x20 * x20) + (x20 + x20 * x20 + x20 * x20 * (1 + x20)) > 1 + (1 + x17 + (x17 + x17 * x17) + (x17 + x17 * x17 + x17 * x17 * (1 + x17))) && x17 < 1000 && x14 > 1000 && x17 > 1 && x17 < 1001 && x20 < 1000
f_2327(x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32) -> f_2327(1 + x31, 1 + x31 + (x31 + x31 * x31), 1 + x31 + (x31 + x31 * x31) + (x31 + x31 * x31 + x31 * x31 * (1 + x31)), 1, 1, 1, 1 + x28, 1 + x28 + (x28 + x28 * x28), 1 + x28 + (x28 + x28 * x28) + (x28 + x28 * x28 + x28 * x28 * (1 + x28)), 1 + (1 + x31), x28) :|: x22 < 1000 && x31 < 1001 && x31 * x31 * x31 > 1 + (1 + x28 + (x28 + x28 * x28) + (x28 + x28 * x28 + x28 * x28 * (1 + x28))) && x31 > 1 && 1 + x31 + (x31 + x31 * x31) + (x31 + x31 * x31 + x31 * x31 * (1 + x31)) < 1 + (1 + x28 + (x28 + x28 * x28) + (x28 + x28 * x28 + x28 * x28 * (1 + x28))) && x28 < 1000 && x25 > 1000 && x28 > 1 && x28 < 1001 && x31 < 1000

----------------------------------------

(28) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_2327(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11) -> f_2327(x1, x4, x7, x10)

----------------------------------------

(29)
Obligation:
Rules:
f_2327(x83:0:0, x86:0:0, x89:0:0, x92:0:0) -> f_2327(1 + x92:0:0, 1, 1 + x89:0:0, 1 + (1 + x92:0:0)) :|: x83:0:0 < 1000 && x92:0:0 < 1001 && x92:0:0 * x92:0:0 * x92:0:0 < 1 + (1 + x89:0:0 + (x89:0:0 + x89:0:0 * x89:0:0) + (x89:0:0 + x89:0:0 * x89:0:0 + x89:0:0 * x89:0:0 * (1 + x89:0:0))) && x92:0:0 > 1 && 1 + x92:0:0 + (x92:0:0 + x92:0:0 * x92:0:0) + (x92:0:0 + x92:0:0 * x92:0:0 + x92:0:0 * x92:0:0 * (1 + x92:0:0)) < 1 + (1 + x89:0:0 + (x89:0:0 + x89:0:0 * x89:0:0) + (x89:0:0 + x89:0:0 * x89:0:0 + x89:0:0 * x89:0:0 * (1 + x89:0:0))) && x89:0:0 < 1000 && x86:0:0 > 1000 && x89:0:0 > 1 && x89:0:0 < 1001 && x92:0:0 < 1000
f_2327(x, x3, x6, x9) -> f_2327(1 + x9, 1, 1 + x6, 1 + (1 + x9)) :|: x < 1000 && x9 < 1001 && x9 * x9 * x9 > 1 + (1 + x6 + (x6 + x6 * x6) + (x6 + x6 * x6 + x6 * x6 * (1 + x6))) && x9 > 1 && 1 + x9 + (x9 + x9 * x9) + (x9 + x9 * x9 + x9 * x9 * (1 + x9)) > 1 + (1 + x6 + (x6 + x6 * x6) + (x6 + x6 * x6 + x6 * x6 * (1 + x6))) && x6 < 1000 && x3 > 1000 && x6 > 1 && x6 < 1001 && x9 < 1000
f_2327(x11, x14, x17, x20) -> f_2327(1 + x20, 1, 1 + x17, 1 + (1 + x20)) :|: x11 < 1000 && x20 < 1001 && x20 * x20 * x20 < 1 + (1 + x17 + (x17 + x17 * x17) + (x17 + x17 * x17 + x17 * x17 * (1 + x17))) && x20 > 1 && 1 + x20 + (x20 + x20 * x20) + (x20 + x20 * x20 + x20 * x20 * (1 + x20)) > 1 + (1 + x17 + (x17 + x17 * x17) + (x17 + x17 * x17 + x17 * x17 * (1 + x17))) && x17 < 1000 && x14 > 1000 && x17 > 1 && x17 < 1001 && x20 < 1000
f_2327(x22, x25, x28, x31) -> f_2327(1 + x31, 1, 1 + x28, 1 + (1 + x31)) :|: x22 < 1000 && x31 < 1001 && x31 * x31 * x31 > 1 + (1 + x28 + (x28 + x28 * x28) + (x28 + x28 * x28 + x28 * x28 * (1 + x28))) && x31 > 1 && 1 + x31 + (x31 + x31 * x31) + (x31 + x31 * x31 + x31 * x31 * (1 + x31)) < 1 + (1 + x28 + (x28 + x28 * x28) + (x28 + x28 * x28 + x28 * x28 * (1 + x28))) && x28 < 1000 && x25 > 1000 && x28 > 1 && x28 < 1001 && x31 < 1000

----------------------------------------

(30) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_2327(x, x1, x2, x3)] = 499 + x1

The following rules are decreasing:
f_2327(x83:0:0, x86:0:0, x89:0:0, x92:0:0) -> f_2327(1 + x92:0:0, 1, 1 + x89:0:0, 1 + (1 + x92:0:0)) :|: x83:0:0 < 1000 && x92:0:0 < 1001 && x92:0:0 * x92:0:0 * x92:0:0 < 1 + (1 + x89:0:0 + (x89:0:0 + x89:0:0 * x89:0:0) + (x89:0:0 + x89:0:0 * x89:0:0 + x89:0:0 * x89:0:0 * (1 + x89:0:0))) && x92:0:0 > 1 && 1 + x92:0:0 + (x92:0:0 + x92:0:0 * x92:0:0) + (x92:0:0 + x92:0:0 * x92:0:0 + x92:0:0 * x92:0:0 * (1 + x92:0:0)) < 1 + (1 + x89:0:0 + (x89:0:0 + x89:0:0 * x89:0:0) + (x89:0:0 + x89:0:0 * x89:0:0 + x89:0:0 * x89:0:0 * (1 + x89:0:0))) && x89:0:0 < 1000 && x86:0:0 > 1000 && x89:0:0 > 1 && x89:0:0 < 1001 && x92:0:0 < 1000
f_2327(x, x3, x6, x9) -> f_2327(1 + x9, 1, 1 + x6, 1 + (1 + x9)) :|: x < 1000 && x9 < 1001 && x9 * x9 * x9 > 1 + (1 + x6 + (x6 + x6 * x6) + (x6 + x6 * x6 + x6 * x6 * (1 + x6))) && x9 > 1 && 1 + x9 + (x9 + x9 * x9) + (x9 + x9 * x9 + x9 * x9 * (1 + x9)) > 1 + (1 + x6 + (x6 + x6 * x6) + (x6 + x6 * x6 + x6 * x6 * (1 + x6))) && x6 < 1000 && x3 > 1000 && x6 > 1 && x6 < 1001 && x9 < 1000
f_2327(x11, x14, x17, x20) -> f_2327(1 + x20, 1, 1 + x17, 1 + (1 + x20)) :|: x11 < 1000 && x20 < 1001 && x20 * x20 * x20 < 1 + (1 + x17 + (x17 + x17 * x17) + (x17 + x17 * x17 + x17 * x17 * (1 + x17))) && x20 > 1 && 1 + x20 + (x20 + x20 * x20) + (x20 + x20 * x20 + x20 * x20 * (1 + x20)) > 1 + (1 + x17 + (x17 + x17 * x17) + (x17 + x17 * x17 + x17 * x17 * (1 + x17))) && x17 < 1000 && x14 > 1000 && x17 > 1 && x17 < 1001 && x20 < 1000
f_2327(x22, x25, x28, x31) -> f_2327(1 + x31, 1, 1 + x28, 1 + (1 + x31)) :|: x22 < 1000 && x31 < 1001 && x31 * x31 * x31 > 1 + (1 + x28 + (x28 + x28 * x28) + (x28 + x28 * x28 + x28 * x28 * (1 + x28))) && x31 > 1 && 1 + x31 + (x31 + x31 * x31) + (x31 + x31 * x31 + x31 * x31 * (1 + x31)) < 1 + (1 + x28 + (x28 + x28 * x28) + (x28 + x28 * x28 + x28 * x28 * (1 + x28))) && x28 < 1000 && x25 > 1000 && x28 > 1 && x28 < 1001 && x31 < 1000
The following rules are bounded:
f_2327(x83:0:0, x86:0:0, x89:0:0, x92:0:0) -> f_2327(1 + x92:0:0, 1, 1 + x89:0:0, 1 + (1 + x92:0:0)) :|: x83:0:0 < 1000 && x92:0:0 < 1001 && x92:0:0 * x92:0:0 * x92:0:0 < 1 + (1 + x89:0:0 + (x89:0:0 + x89:0:0 * x89:0:0) + (x89:0:0 + x89:0:0 * x89:0:0 + x89:0:0 * x89:0:0 * (1 + x89:0:0))) && x92:0:0 > 1 && 1 + x92:0:0 + (x92:0:0 + x92:0:0 * x92:0:0) + (x92:0:0 + x92:0:0 * x92:0:0 + x92:0:0 * x92:0:0 * (1 + x92:0:0)) < 1 + (1 + x89:0:0 + (x89:0:0 + x89:0:0 * x89:0:0) + (x89:0:0 + x89:0:0 * x89:0:0 + x89:0:0 * x89:0:0 * (1 + x89:0:0))) && x89:0:0 < 1000 && x86:0:0 > 1000 && x89:0:0 > 1 && x89:0:0 < 1001 && x92:0:0 < 1000
f_2327(x, x3, x6, x9) -> f_2327(1 + x9, 1, 1 + x6, 1 + (1 + x9)) :|: x < 1000 && x9 < 1001 && x9 * x9 * x9 > 1 + (1 + x6 + (x6 + x6 * x6) + (x6 + x6 * x6 + x6 * x6 * (1 + x6))) && x9 > 1 && 1 + x9 + (x9 + x9 * x9) + (x9 + x9 * x9 + x9 * x9 * (1 + x9)) > 1 + (1 + x6 + (x6 + x6 * x6) + (x6 + x6 * x6 + x6 * x6 * (1 + x6))) && x6 < 1000 && x3 > 1000 && x6 > 1 && x6 < 1001 && x9 < 1000
f_2327(x11, x14, x17, x20) -> f_2327(1 + x20, 1, 1 + x17, 1 + (1 + x20)) :|: x11 < 1000 && x20 < 1001 && x20 * x20 * x20 < 1 + (1 + x17 + (x17 + x17 * x17) + (x17 + x17 * x17 + x17 * x17 * (1 + x17))) && x20 > 1 && 1 + x20 + (x20 + x20 * x20) + (x20 + x20 * x20 + x20 * x20 * (1 + x20)) > 1 + (1 + x17 + (x17 + x17 * x17) + (x17 + x17 * x17 + x17 * x17 * (1 + x17))) && x17 < 1000 && x14 > 1000 && x17 > 1 && x17 < 1001 && x20 < 1000
f_2327(x22, x25, x28, x31) -> f_2327(1 + x31, 1, 1 + x28, 1 + (1 + x31)) :|: x22 < 1000 && x31 < 1001 && x31 * x31 * x31 > 1 + (1 + x28 + (x28 + x28 * x28) + (x28 + x28 * x28 + x28 * x28 * (1 + x28))) && x31 > 1 && 1 + x31 + (x31 + x31 * x31) + (x31 + x31 * x31 + x31 * x31 * (1 + x31)) < 1 + (1 + x28 + (x28 + x28 * x28) + (x28 + x28 * x28 + x28 * x28 * (1 + x28))) && x28 < 1000 && x25 > 1000 && x28 > 1 && x28 < 1001 && x31 < 1000

----------------------------------------

(31)
YES

----------------------------------------

(32)
Obligation:
SCC
----------------------------------------

(33) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 86 rulesP rules:
f_1285(v7469, v7470, v7471, v7472, v7473, v7474, v7475, v7476, v7477, v7478, v7479, 1, v7481, 1000, v7483, v7485, 0, v7486, v7487, v7488, v7489, v7490, 3, 1001, 2, 4) -> f_1288(v7469, v7470, v7471, v7472, v7473, v7474, v7475, v7476, v7477, v7478, v7479, 1, v7481, 1000, v7483, v7485, 0, v7486, v7487, v7488, v7489, v7490, 3, 1001, 2, 4) :|: 0 = 0
f_1288(v7469, v7470, v7471, v7472, v7473, v7474, v7475, v7476, v7477, v7478, v7479, 1, v7481, 1000, v7483, v7485, 0, v7486, v7487, v7488, v7489, v7490, 3, 1001, 2, 4) -> f_1292(v7469, v7470, v7471, v7472, v7473, v7474, v7475, v7476, v7477, v7478, v7479, 1, v7481, 1000, v7483, v7485, 0, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) :|: v7485 <= 1000 && v7477 <= 999
f_1292(v7469, v7470, v7471, v7472, v7473, v7474, v7475, v7476, v7477, v7478, v7479, 1, v7481, 1000, v7483, v7485, 0, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) -> f_1296(v7469, v7470, v7471, v7472, v7473, v7474, v7475, v7476, v7477, v7478, v7479, 1, v7481, 1000, v7483, v7485, 0, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) :|: 0 = 0
f_1296(v7469, v7470, v7471, v7472, v7473, v7474, v7475, v7476, v7477, v7478, v7479, 1, v7481, 1000, v7483, v7485, 0, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) -> f_1300(v7469, v7470, v7471, v7472, v7473, v7474, v7475, v7476, v7477, v7478, v7479, 1, v7481, 1000, v7483, v7485, 0, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) :|: TRUE
f_1300(v7469, v7470, v7471, v7472, v7473, v7474, v7475, v7476, v7477, v7478, v7479, 1, v7481, 1000, v7483, v7485, 0, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) -> f_1304(v7469, v7470, v7471, v7472, v7473, v7474, v7475, v7476, v7477, v7478, v7479, 1, v7481, 1000, v7483, v7485, 0, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) :|: TRUE
f_1304(v7469, v7470, v7471, v7472, v7473, v7474, v7475, v7476, v7477, v7478, v7479, 1, v7481, 1000, v7483, v7485, 0, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) -> f_1308(v7469, v7470, v7471, v7472, v7473, 1, v7474, v7475, v7476, v7477, v7478, v7479, v7481, 1000, v7483, v7485, 0, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) :|: 0 = 0
f_1308(v7469, v7470, v7471, v7472, v7473, 1, v7474, v7475, v7476, v7477, v7478, v7479, v7481, 1000, v7483, v7485, 0, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) -> f_1312(v7469, v7470, v7471, v7472, v7473, 1, v7475, v7474, v7476, v7477, v7478, v7479, v7481, 1000, v7483, v7485, 0, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) :|: 0 = 0
f_1312(v7469, v7470, v7471, v7472, v7473, 1, v7475, v7474, v7476, v7477, v7478, v7479, v7481, 1000, v7483, v7485, 0, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) -> f_1316(v7469, v7470, v7471, v7472, v7473, 1, v7474, v7476, v7477, v7478, v7479, v7481, 1000, v7483, v7485, 0, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) :|: 0 = 0
f_1316(v7469, v7470, v7471, v7472, v7473, 1, v7474, v7476, v7477, v7478, v7479, v7481, 1000, v7483, v7485, 0, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) -> f_1320(v7469, v7470, v7471, v7472, v7473, 1, v7476, v7477, v7478, v7479, v7481, 1000, v7474, v7483, v7485, 0, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) :|: 0 = 0
f_1320(v7469, v7470, v7471, v7472, v7473, 1, v7476, v7477, v7478, v7479, v7481, 1000, v7474, v7483, v7485, 0, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) -> f_1324(v7469, v7470, v7471, v7472, v7473, 1, v7477, v7478, v7479, v7481, 1000, v7474, v7483, v7485, 0, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) :|: 0 = 0
f_1324(v7469, v7470, v7471, v7472, v7473, 1, v7477, v7478, v7479, v7481, 1000, v7474, v7483, v7485, 0, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) -> f_1328(v7469, v7470, v7471, v7472, v7473, 1, v7485, v7477, v7478, v7479, v7481, 1000, v7474, v7483, 0, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) :|: 0 = 0
f_1328(v7469, v7470, v7471, v7472, v7473, 1, v7485, v7477, v7478, v7479, v7481, 1000, v7474, v7483, 0, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) -> f_1332(v7469, v7470, v7471, v7472, v7473, 1, v7485, v7478, v7477, v7479, v7481, 1000, v7474, v7483, 0, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) :|: 0 = 0
f_1332(v7469, v7470, v7471, v7472, v7473, 1, v7485, v7478, v7477, v7479, v7481, 1000, v7474, v7483, 0, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) -> f_1336(v7469, v7470, v7471, v7472, v7473, 1, v7485, v8195, v7477, v7479, v7481, 1000, v7474, v7483, 0, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) :|: v8195 = v7485 * v7485
f_1336(v7469, v7470, v7471, v7472, v7473, 1, v7485, v8195, v7477, v7479, v7481, 1000, v7474, v7483, 0, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) -> f_1340(v7469, v7470, v7471, v7472, v7473, 1, v7485, v8195, v7479, v7481, 1000, v7474, v7483, 0, v7477, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) :|: 0 = 0
f_1340(v7469, v7470, v7471, v7472, v7473, 1, v7485, v8195, v7479, v7481, 1000, v7474, v7483, 0, v7477, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) -> f_1344(v7469, v7470, v7471, v7472, v7473, 1, v7485, v8195, v8196, v7481, 1000, v7474, v7483, 0, v7477, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) :|: v8196 = v8195 * v7485
f_1344(v7469, v7470, v7471, v7472, v7473, 1, v7485, v8195, v8196, v7481, 1000, v7474, v7483, 0, v7477, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) -> f_1348(v7469, v7470, v7471, v7472, v7473, 1, v7485, v8195, v8196, v7481, 1000, v7474, v7483, 0, v7477, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) :|: 0 = 0
f_1348(v7469, v7470, v7471, v7472, v7473, 1, v7485, v8195, v8196, v7481, 1000, v7474, v7483, 0, v7477, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) -> f_1352(v7469, v7470, v7471, v7472, v7473, 1, v7485, v8195, v8196, v7481, 1000, v7474, v7483, 0, v7477, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) :|: 0 = 0
f_1352(v7469, v7470, v7471, v7472, v7473, 1, v7485, v8195, v8196, v7481, 1000, v7474, v7483, 0, v7477, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) -> f_1356(v7469, v7470, v7471, v7472, v7473, 1, v7485, v8195, v8196, v7481, 1000, v7474, v7483, 0, v7477, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) :|: 0 = 0
f_1356(v7469, v7470, v7471, v7472, v7473, 1, v7485, v8195, v8196, v7481, 1000, v7474, v7483, 0, v7477, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) -> f_1360(v7469, v7470, v7471, v7472, v7473, 1, v7485, v8195, v8196, v7481, 1000, v7474, v7483, 0, v7477, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) :|: 0 = 0
f_1360(v7469, v7470, v7471, v7472, v7473, 1, v7485, v8195, v8196, v7481, 1000, v7474, v7483, 0, v7477, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) -> f_1364(v7469, v7470, v7471, v7472, v7473, 1, v7485, v8195, v8196, v7481, 1000, v7474, v7483, 0, v7477, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) :|: 0 = 0
f_1364(v7469, v7470, v7471, v7472, v7473, 1, v7485, v8195, v8196, v7481, 1000, v7474, v7483, 0, v7477, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) -> f_1369(v7469, v7470, v7471, v7472, v7473, 1, v7485, v8195, v8196, v8197, 1000, v7474, v7483, 0, v7477, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) :|: v8197 = 1 + v8196
f_1369(v7469, v7470, v7471, v7472, v7473, 1, v7485, v8195, v8196, v8197, 1000, v7474, v7483, 0, v7477, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) -> f_1374(v7469, v7470, v7471, v7472, v7473, 1, v7485, v8195, v8196, v8197, 1000, v7474, v7483, 0, v7477, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) :|: 1 != v8197
f_1374(v7469, v7470, v7471, v7472, v7473, 1, v7485, v8195, v8196, v8197, 1000, v7474, v7483, 0, v7477, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) -> f_1380(v7469, v7470, v7471, v7472, v7473, 1, v7485, v8195, v8196, v8197, 1000, v7474, v7483, 0, v7477, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) :|: 0 = 0
f_1380(v7469, v7470, v7471, v7472, v7473, 1, v7485, v8195, v8196, v8197, 1000, v7474, v7483, 0, v7477, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) -> f_1386(v7469, v7470, v7471, v7472, v7473, 1, v7485, v8195, v8196, v8197, 1000, v7474, v7483, 0, v7477, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) :|: TRUE
f_1386(v7469, v7470, v7471, v7472, v7473, 1, v7485, v8195, v8196, v8197, 1000, v7474, v7483, 0, v7477, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) -> f_1391(v7469, v7470, v7471, v7472, v7473, 1, v7485, v8195, v8196, v8197, 1000, v7474, v7483, 0, v7477, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) :|: 0 = 0
f_1391(v7469, v7470, v7471, v7472, v7473, 1, v7485, v8195, v8196, v8197, 1000, v7474, v7483, 0, v7477, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) -> f_1396(v7469, v7470, v7471, v7472, v7473, 1, v7485, v8195, v8196, v8197, 1000, v7474, v7483, 0, v7477, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) :|: 0 = 0
f_1396(v7469, v7470, v7471, v7472, v7473, 1, v7485, v8195, v8196, v8197, 1000, v7474, v7483, 0, v7477, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) -> f_1400(v7469, v7470, v7471, v7472, v7473, 1, v7485, v8195, v8196, v8197, 1000, v7474, v7483, 0, v7477, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) :|: 0 = 0
f_1400(v7469, v7470, v7471, v7472, v7473, 1, v7485, v8195, v8196, v8197, 1000, v7474, v7483, 0, v7477, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) -> f_1404(v7469, v7470, v7471, v7472, v7473, 1, v7485, v8195, v8196, v8197, 1000, v7474, v7483, 0, v7477, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) :|: 0 = 0
f_1404(v7469, v7470, v7471, v7472, v7473, 1, v7485, v8195, v8196, v8197, 1000, v7474, v7483, 0, v7477, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) -> f_1408(v7469, v7470, v7471, v7472, v7473, 1, v7485, v8195, v8196, v8197, 1000, v7474, v7483, 0, v7477, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) :|: TRUE
f_1408(v7469, v7470, v7471, v7472, v7473, 1, v7485, v8195, v8196, v8197, 1000, v7474, v7483, 0, v7477, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) -> f_1412(v7469, v7470, v7471, v7472, v7473, 1, v7485, v8195, v8196, v8197, 1000, v7483, 0, v7477, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) :|: 0 = 0
f_1412(v7469, v7470, v7471, v7472, v7473, 1, v7485, v8195, v8196, v8197, 1000, v7483, 0, v7477, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 2, 4) -> f_1416(v7469, v7470, v7471, v7472, v7473, 1, v7485, v8195, v8196, v8197, 1000, 2, v7483, 0, v7477, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 4) :|: 0 = 0
f_1416(v7469, v7470, v7471, v7472, v7473, 1, v7485, v8195, v8196, v8197, 1000, 2, v7483, 0, v7477, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 4) -> f_1420(v7469, v7470, v7471, v7472, v7473, 1, v7485, v8195, v8196, v8197, 1000, 2, v7483, 0, v7477, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 4) :|: TRUE
f_1420(v7469, v7470, v7471, v7472, v7473, 1, v7485, v8195, v8196, v8197, 1000, 2, v7483, 0, v7477, v7486, v7487, v7488, v7489, v7490, 3, 999, 1001, 4) -> f_1424(v7469, v7470, v7471, v7472, v7473, 1, v7485, v8195, v8196, v8197, 1000, 2, 0, v7477, v7486, v7487, v7488, v7489, v7490, 3, 999, 4) :|: 0 = 0
f_1424(v7469, v7470, v7471, v7472, v7473, 1, v7485, v8195, v8196, v8197, 1000, 2, 0, v7477, v7486, v7487, v7488, v7489, v7490, 3, 999, 4) -> f_1429(v7469, v7470, v7471, v7472, v7473, 1, v7485, v8195, v8196, v8197, 1000, 2, 0, v7477, v7486, v7487, v7488, v7489, v7490, 3, 999, 4) :|: 0 = 0
f_1429(v7469, v7470, v7471, v7472, v7473, 1, v7485, v8195, v8196, v8197, 1000, 2, 0, v7477, v7486, v7487, v7488, v7489, v7490, 3, 999, 4) -> f_1434(v7469, v7470, v7471, v7472, v7473, 1, v7485, v8195, v8196, v8197, 1000, 2, 0, v7477, v7486, v7487, v7488, v7489, v7490, 3, 999, 4) :|: 0 = 0
f_1434(v7469, v7470, v7471, v7472, v7473, 1, v7485, v8195, v8196, v8197, 1000, 2, 0, v7477, v7486, v7487, v7488, v7489, v7490, 3, 999, 4) -> f_1439(v7469, v7470, v7471, v7472, v7473, 1, v7485, v8195, v8196, v8197, 1000, 2, 0, v7477, v7486, v7487, v7488, v7489, v7490, 3, 999, 4) :|: TRUE
f_1439(v7469, v7470, v7471, v7472, v7473, 1, v7485, v8195, v8196, v8197, 1000, 2, 0, v7477, v7486, v7487, v7488, v7489, v7490, 3, 999, 4) -> f_1440(v7469, v7470, v7471, v7472, v7473, 1, 1, 1, v7485, v8195, v8196, 1, v8197, 1000, 2, 0, v7477, v7486, v7487, v7488, v7489, v7490, 3, 2, 4) :|: TRUE
f_1440(v9799, v9800, v9801, v9802, v9803, v9804, v9805, v9806, v9807, v9808, v9809, 1, v9811, 1000, v9813, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 4) -> f_1442(v9799, v9800, v9801, v9802, v9803, v9804, v9805, v9806, v9807, v9808, v9809, 1, v9811, 1000, v9813, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 4) :|: 0 = 0
f_1442(v9799, v9800, v9801, v9802, v9803, v9804, v9805, v9806, v9807, v9808, v9809, 1, v9811, 1000, v9813, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 4) -> f_1444(v9799, v9800, v9801, v9802, v9803, v9804, v9805, v9806, v9807, v9808, v9809, 1, v9811, 1000, v9813, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 4) :|: 0 = 0
f_1444(v9799, v9800, v9801, v9802, v9803, v9804, v9805, v9806, v9807, v9808, v9809, 1, v9811, 1000, v9813, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 4) -> f_1447(v9799, v9800, v9801, v9802, v9803, v9804, v9805, v9806, v9807, v9808, v9809, 1, v9811, 1000, v9813, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) :|: v9807 <= 1000 && v9815 <= 999
f_1447(v9799, v9800, v9801, v9802, v9803, v9804, v9805, v9806, v9807, v9808, v9809, 1, v9811, 1000, v9813, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) -> f_1450(v9799, v9800, v9801, v9802, v9803, v9804, v9805, v9806, v9807, v9808, v9809, 1, v9811, 1000, v9813, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) :|: 0 = 0
f_1450(v9799, v9800, v9801, v9802, v9803, v9804, v9805, v9806, v9807, v9808, v9809, 1, v9811, 1000, v9813, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) -> f_1453(v9799, v9800, v9801, v9802, v9803, v9804, v9805, v9806, v9807, v9808, v9809, 1, v9811, 1000, v9813, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) :|: TRUE
f_1453(v9799, v9800, v9801, v9802, v9803, v9804, v9805, v9806, v9807, v9808, v9809, 1, v9811, 1000, v9813, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) -> f_1456(v9799, v9800, v9801, v9802, v9803, v9804, v9805, v9806, v9807, v9808, v9809, 1, v9811, 1000, v9813, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) :|: TRUE
f_1456(v9799, v9800, v9801, v9802, v9803, v9804, v9805, v9806, v9807, v9808, v9809, 1, v9811, 1000, v9813, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) -> f_1459(v9799, v9800, v9801, v9802, v9803, v9813, v9804, v9805, v9806, v9807, v9808, v9809, 1, v9811, 1000, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) :|: 0 = 0
f_1459(v9799, v9800, v9801, v9802, v9803, v9813, v9804, v9805, v9806, v9807, v9808, v9809, 1, v9811, 1000, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) -> f_1462(v9799, v9800, v9801, v9802, v9803, v9813, v9805, v9804, v9806, v9807, v9808, v9809, 1, v9811, 1000, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) :|: 0 = 0
f_1462(v9799, v9800, v9801, v9802, v9803, v9813, v9805, v9804, v9806, v9807, v9808, v9809, 1, v9811, 1000, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) -> f_1465(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v9804, v9806, v9807, v9808, v9809, 1, v9811, 1000, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) :|: v10174 = v9813 * v9813
f_1465(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v9804, v9806, v9807, v9808, v9809, 1, v9811, 1000, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) -> f_1468(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v9806, v9807, v9808, v9809, 1, v9811, 1000, v9804, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) :|: 0 = 0
f_1468(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v9806, v9807, v9808, v9809, 1, v9811, 1000, v9804, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) -> f_1471(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v9804, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) :|: v10337 = v10174 * v9813
f_1471(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v9804, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) -> f_1474(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v9804, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) :|: 0 = 0
f_1474(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v9804, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) -> f_1477(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v9804, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) :|: 0 = 0
f_1477(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v9804, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) -> f_1480(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v9804, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) :|: v9808 = v9807 * v9807
f_1480(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v9804, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) -> f_1483(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v9804, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) :|: 0 = 0
f_1483(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v9804, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) -> f_1486(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v9804, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) :|: v9809 = v9808 * v9807
f_1486(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v9804, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) -> f_1489(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v9804, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) :|: 0 = 0
f_1489(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v9804, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) -> f_1492(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v9804, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) :|: 0 = 0
f_1492(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v9804, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) -> f_1495(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v9804, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) :|: 0 = 0
f_1495(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v9804, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) -> f_1498(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v9804, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) :|: 0 = 0
f_1498(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v9804, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) -> f_1501(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v9804, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) :|: 0 = 0
f_1501(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v9804, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) -> f_1504(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v9804, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) :|: v9811 = 1 + v9809
f_1504(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v9804, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) -> f_1507(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v9804, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) :|: v10337 != v9811
f_1507(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v9804, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) -> f_1511(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v9804, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) :|: 0 = 0
f_1511(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v9804, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) -> f_1515(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v9804, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) :|: TRUE
f_1515(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v9804, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) -> f_1519(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v9804, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) :|: 0 = 0
f_1519(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v9804, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) -> f_1523(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v9804, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) :|: 0 = 0
f_1523(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v9804, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) -> f_1527(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v9804, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) :|: 0 = 0
f_1527(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v9804, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) -> f_1531(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v9804, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) :|: 0 = 0
f_1531(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v9804, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) -> f_1535(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v9804, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) :|: TRUE
f_1535(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v9804, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) -> f_1539(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) :|: 0 = 0
f_1539(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) -> f_1542(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v11096, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) :|: v11096 = 1 + v9813 && 3 <= v11096
f_1542(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v11096, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) -> f_1545(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v11096, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) :|: TRUE
f_1545(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v11096, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) -> f_1548(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v11096, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) :|: 0 = 0
f_1548(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v11096, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) -> f_1551(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v11096, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) :|: 0 = 0
f_1551(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v11096, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) -> f_1554(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v11096, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4, 1001) :|: 1000 < v11096 && 1000 <= v9813
f_1551(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v11096, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) -> f_1555(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v11096, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) :|: v11096 <= 1000 && v9813 <= 999
f_1554(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v11096, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4, 1001) -> f_1558(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v11096, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4, 1001) :|: 0 = 0
f_1558(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v11096, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4, 1001) -> f_1562(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v11096, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4, 1001) :|: TRUE
f_1562(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v11096, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4, 1001) -> f_1566(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v11096, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4, 1001) :|: TRUE
f_1566(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v11096, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4, 1001) -> f_1569(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v11096, 0, v9816, v9817, v9818, v9819, v9820, 3, 2, 4, 1001) :|: 0 = 0
f_1569(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v11096, 0, v9816, v9817, v9818, v9819, v9820, 3, 2, 4, 1001) -> f_1573(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v11096, 0, v11472, v9816, v9817, v9818, v9819, v9820, 3, 2, 4, 1001) :|: v11472 = 1 + v9807 && 3 <= v11472 && v11472 <= 1001
f_1573(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v11096, 0, v11472, v9816, v9817, v9818, v9819, v9820, 3, 2, 4, 1001) -> f_1577(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v11096, 0, v11472, v9816, v9817, v9818, v9819, v9820, 3, 2, 4, 1001) :|: TRUE
f_1577(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v11096, 0, v11472, v9816, v9817, v9818, v9819, v9820, 3, 2, 4, 1001) -> f_1583(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v11096, 0, v11472, v9816, v9817, v9818, v9819, v9820, 3, 2, 4, 1001) :|: TRUE
f_1583(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v11096, 0, v11472, v9816, v9817, v9818, v9819, v9820, 3, 2, 4, 1001) -> f_1282(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v11096, 0, v11472, v9816, v9817, v9818, v9819, v9820, 3, 1001, 2, 4) :|: TRUE
f_1282(v7469, v7470, v7471, v7472, v7473, v7474, v7475, v7476, v7477, v7478, v7479, 1, v7481, 1000, v7483, 0, v7485, v7486, v7487, v7488, v7489, v7490, 3, 1001, 2, 4) -> f_1285(v7469, v7470, v7471, v7472, v7473, v7474, v7475, v7476, v7477, v7478, v7479, 1, v7481, 1000, v7483, v7485, 0, v7486, v7487, v7488, v7489, v7490, 3, 1001, 2, 4) :|: 0 = 0
f_1555(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v11096, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) -> f_1559(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v11096, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) :|: 0 = 0
f_1559(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v11096, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) -> f_1563(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v11096, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) :|: TRUE
f_1563(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v11096, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 999, 4) -> f_1440(v9799, v9800, v9801, v9802, v9803, v9813, v10174, v10337, v9807, v9808, v9809, 1, v9811, 1000, v11096, 0, v9815, v9816, v9817, v9818, v9819, v9820, 3, 2, 4) :|: TRUE
Combined rules. Obtained 6 rulesP rules:
f_1551(v9799:0, v9800:0, v9801:0, v9802:0, v9803:0, v9813:0, v10174:0, v10337:0, v9807:0, v9807:0 * v9807:0, v9807:0 * v9807:0 * v9807:0, 1, 1 + v9807:0 * v9807:0 * v9807:0, 1000, v11096:0, 0, v9815:0, v9816:0, v9817:0, v9818:0, v9819:0, v9820:0, 3, 2, 999, 4) -> f_1551(v9799:0, v9800:0, v9801:0, v9802:0, v9803:0, v11096:0, v11096:0 * v11096:0, v11096:0 * v11096:0 * v11096:0, v9807:0, v9807:0 * v9807:0, v9807:0 * v9807:0 * v9807:0, 1, 1 + v9807:0 * v9807:0 * v9807:0, 1000, 1 + v11096:0, 0, v9815:0, v9816:0, v9817:0, v9818:0, v9819:0, v9820:0, 3, 2, 999, 4) :|: v9815:0 < 1000 && v9807:0 < 1001 && v11096:0 * v11096:0 * v11096:0 < 1 + v9807:0 * v9807:0 * v9807:0 && v11096:0 > 1 && v11096:0 < 1001 && v9813:0 < 1000
f_1551(v9799:0, v9800:0, v9801:0, v9802:0, v9803:0, v9813:0, v10174:0, v10337:0, v9807:0, v9807:0 * v9807:0, v9807:0 * v9807:0 * v9807:0, 1, 1 + v9807:0 * v9807:0 * v9807:0, 1000, v11096:0, 0, v9815:0, v9816:0, v9817:0, v9818:0, v9819:0, v9820:0, 3, 2, 999, 4) -> f_1551(v9799:0, v9800:0, v9801:0, v9802:0, v9803:0, v11096:0, v11096:0 * v11096:0, v11096:0 * v11096:0 * v11096:0, v9807:0, v9807:0 * v9807:0, v9807:0 * v9807:0 * v9807:0, 1, 1 + v9807:0 * v9807:0 * v9807:0, 1000, 1 + v11096:0, 0, v9815:0, v9816:0, v9817:0, v9818:0, v9819:0, v9820:0, 3, 2, 999, 4) :|: v9815:0 < 1000 && v9807:0 < 1001 && v11096:0 * v11096:0 * v11096:0 > 1 + v9807:0 * v9807:0 * v9807:0 && v11096:0 > 1 && v11096:0 < 1001 && v9813:0 < 1000
f_1551(v9799:0, v9800:0, v9801:0, v9802:0, v9803:0, v9813:0, v10174:0, v10337:0, v9807:0, v9808:0, v9809:0, 1, v9811:0, 1000, v11096:0, 0, v9815:0, v9816:0, v9817:0, v9818:0, v9819:0, v9820:0, 3, 2, 999, 4) -> f_1551(v9799:0, v9800:0, v9801:0, v9802:0, v9803:0, 2, 4, 8, 1 + v9807:0, (1 + v9807:0) * (1 + v9807:0), (1 + v9807:0) * (1 + v9807:0) * (1 + v9807:0), 1, 1 + (1 + v9807:0) * (1 + v9807:0) * (1 + v9807:0), 1000, 3, 0, v9807:0, v9816:0, v9817:0, v9818:0, v9819:0, v9820:0, 3, 2, 999, 4) :|: 7 < (1 + v9807:0) * (1 + v9807:0) * (1 + v9807:0) && v9807:0 < 1000 && v9813:0 > 999 && v11096:0 > 1000 && v9807:0 < 1001 && v9807:0 > 1
f_1551(v9799:0, v9800:0, v9801:0, v9802:0, v9803:0, v9813:0, v10174:0, v10337:0, v9807:0, v9808:0, v9809:0, 1, v9811:0, 1000, v11096:0, 0, v9815:0, v9816:0, v9817:0, v9818:0, v9819:0, v9820:0, 3, 2, 999, 4) -> f_1551(v9799:0, v9800:0, v9801:0, v9802:0, v9803:0, 2, 4, 8, 1 + v9807:0, (1 + v9807:0) * (1 + v9807:0), (1 + v9807:0) * (1 + v9807:0) * (1 + v9807:0), 1, 1 + (1 + v9807:0) * (1 + v9807:0) * (1 + v9807:0), 1000, 3, 0, v9807:0, v9816:0, v9817:0, v9818:0, v9819:0, v9820:0, 3, 2, 999, 4) :|: v9807:0 < 1000 && (1 + v9807:0) * (1 + v9807:0) * (1 + v9807:0) > 0 && 7 > (1 + v9807:0) * (1 + v9807:0) * (1 + v9807:0) && v9813:0 > 999 && v11096:0 > 1000 && v9807:0 < 1001 && v9807:0 > 1
f_1551(v9799:0, v9800:0, v9801:0, v9802:0, v9803:0, v9813:0, v10174:0, v10337:0, v9807:0, v9808:0, v9809:0, 1, v9811:0, 1000, v11096:0, 0, v9815:0, v9816:0, v9817:0, v9818:0, v9819:0, v9820:0, 3, 2, 999, 4) -> f_1551(v9799:0, v9800:0, v9801:0, v9802:0, v9803:0, 2, 4, 8, 1 + v9807:0, (1 + v9807:0) * (1 + v9807:0), (1 + v9807:0) * (1 + v9807:0) * (1 + v9807:0), 1, 1 + (1 + v9807:0) * (1 + v9807:0) * (1 + v9807:0), 1000, 3, 0, v9807:0, v9816:0, v9817:0, v9818:0, v9819:0, v9820:0, 3, 2, 999, 4) :|: v9807:0 < 1000 && (1 + v9807:0) * (1 + v9807:0) * (1 + v9807:0) < 0 && 7 < (1 + v9807:0) * (1 + v9807:0) * (1 + v9807:0) && v9813:0 > 999 && v11096:0 > 1000 && v9807:0 < 1001 && v9807:0 > 1
f_1551(v9799:0, v9800:0, v9801:0, v9802:0, v9803:0, v9813:0, v10174:0, v10337:0, v9807:0, v9808:0, v9809:0, 1, v9811:0, 1000, v11096:0, 0, v9815:0, v9816:0, v9817:0, v9818:0, v9819:0, v9820:0, 3, 2, 999, 4) -> f_1551(v9799:0, v9800:0, v9801:0, v9802:0, v9803:0, 2, 4, 8, 1 + v9807:0, (1 + v9807:0) * (1 + v9807:0), (1 + v9807:0) * (1 + v9807:0) * (1 + v9807:0), 1, 1 + (1 + v9807:0) * (1 + v9807:0) * (1 + v9807:0), 1000, 3, 0, v9807:0, v9816:0, v9817:0, v9818:0, v9819:0, v9820:0, 3, 2, 999, 4) :|: v9807:0 < 1000 && (1 + v9807:0) * (1 + v9807:0) * (1 + v9807:0) < 0 && 7 > (1 + v9807:0) * (1 + v9807:0) * (1 + v9807:0) && v9813:0 > 999 && v11096:0 > 1000 && v9807:0 < 1001 && v9807:0 > 1
Filtered unneeded arguments:
   f_1551(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26) -> f_1551(x6, x9, x10, x11, x13, x15, x17)
Removed division, modulo operations, cleaned up constraints. Obtained 6 rules.P rules:
f_1551(v9813:0, v9807:0, times~v9807:0~v9807:0, times~times~v9807:0~v9807:0~v9807:0, sum~cons_1~times~times~v9807:0~v9807:0~v9807:0, v11096:0, v9815:0) -> f_1551(v11096:0, v9807:0, v9807:0 * v9807:0, v9807:0 * v9807:0 * v9807:0, 1 + v9807:0 * v9807:0 * v9807:0, 1 + v11096:0, v9815:0) :|: v9807:0 < 1001 && v9815:0 < 1000 && v11096:0 * v11096:0 * v11096:0 < 1 + v9807:0 * v9807:0 * v9807:0 && v11096:0 > 1 && v9813:0 < 1000 && v11096:0 < 1001 && times~v9807:0~v9807:0 = v9807:0 * v9807:0 && times~times~v9807:0~v9807:0~v9807:0 = v9807:0 * v9807:0 * v9807:0 && sum~cons_1~times~times~v9807:0~v9807:0~v9807:0 = 1 + v9807:0 * v9807:0 * v9807:0
f_1551(v9813:0, v9807:0, times~v9807:0~v9807:0, times~times~v9807:0~v9807:0~v9807:0, sum~cons_1~times~times~v9807:0~v9807:0~v9807:0, v11096:0, v9815:0) -> f_1551(v11096:0, v9807:0, v9807:0 * v9807:0, v9807:0 * v9807:0 * v9807:0, 1 + v9807:0 * v9807:0 * v9807:0, 1 + v11096:0, v9815:0) :|: v9807:0 < 1001 && v9815:0 < 1000 && v11096:0 * v11096:0 * v11096:0 > 1 + v9807:0 * v9807:0 * v9807:0 && v11096:0 > 1 && v9813:0 < 1000 && v11096:0 < 1001 && times~v9807:0~v9807:0 = v9807:0 * v9807:0 && times~times~v9807:0~v9807:0~v9807:0 = v9807:0 * v9807:0 * v9807:0 && sum~cons_1~times~times~v9807:0~v9807:0~v9807:0 = 1 + v9807:0 * v9807:0 * v9807:0
f_1551(v9813:0, v9807:0, v9808:0, v9809:0, v9811:0, v11096:0, v9815:0) -> f_1551(2, 1 + v9807:0, 1 + v9807:0 + (v9807:0 + v9807:0 * v9807:0), 1 + v9807:0 + (v9807:0 + v9807:0 * v9807:0) + (v9807:0 + v9807:0 * v9807:0 + v9807:0 * v9807:0 * (1 + v9807:0)), 1 + (1 + v9807:0 + (v9807:0 + v9807:0 * v9807:0) + (v9807:0 + v9807:0 * v9807:0 + v9807:0 * v9807:0 * (1 + v9807:0))), 3, v9807:0) :|: v9807:0 < 1000 && 7 < 1 + v9807:0 + (v9807:0 + v9807:0 * v9807:0) + (v9807:0 + v9807:0 * v9807:0 + v9807:0 * v9807:0 * (1 + v9807:0)) && v9813:0 > 999 && v11096:0 > 1000 && v9807:0 > 1 && v9807:0 < 1001
f_1551(v9813:0, v9807:0, v9808:0, v9809:0, v9811:0, v11096:0, v9815:0) -> f_1551(2, 1 + v9807:0, 1 + v9807:0 + (v9807:0 + v9807:0 * v9807:0), 1 + v9807:0 + (v9807:0 + v9807:0 * v9807:0) + (v9807:0 + v9807:0 * v9807:0 + v9807:0 * v9807:0 * (1 + v9807:0)), 1 + (1 + v9807:0 + (v9807:0 + v9807:0 * v9807:0) + (v9807:0 + v9807:0 * v9807:0 + v9807:0 * v9807:0 * (1 + v9807:0))), 3, v9807:0) :|: 1 + v9807:0 + (v9807:0 + v9807:0 * v9807:0) + (v9807:0 + v9807:0 * v9807:0 + v9807:0 * v9807:0 * (1 + v9807:0)) > 0 && v9807:0 < 1000 && 7 > 1 + v9807:0 + (v9807:0 + v9807:0 * v9807:0) + (v9807:0 + v9807:0 * v9807:0 + v9807:0 * v9807:0 * (1 + v9807:0)) && v9813:0 > 999 && v11096:0 > 1000 && v9807:0 > 1 && v9807:0 < 1001
f_1551(v9813:0, v9807:0, v9808:0, v9809:0, v9811:0, v11096:0, v9815:0) -> f_1551(2, 1 + v9807:0, 1 + v9807:0 + (v9807:0 + v9807:0 * v9807:0), 1 + v9807:0 + (v9807:0 + v9807:0 * v9807:0) + (v9807:0 + v9807:0 * v9807:0 + v9807:0 * v9807:0 * (1 + v9807:0)), 1 + (1 + v9807:0 + (v9807:0 + v9807:0 * v9807:0) + (v9807:0 + v9807:0 * v9807:0 + v9807:0 * v9807:0 * (1 + v9807:0))), 3, v9807:0) :|: 1 + v9807:0 + (v9807:0 + v9807:0 * v9807:0) + (v9807:0 + v9807:0 * v9807:0 + v9807:0 * v9807:0 * (1 + v9807:0)) < 0 && v9807:0 < 1000 && 7 < 1 + v9807:0 + (v9807:0 + v9807:0 * v9807:0) + (v9807:0 + v9807:0 * v9807:0 + v9807:0 * v9807:0 * (1 + v9807:0)) && v9813:0 > 999 && v11096:0 > 1000 && v9807:0 > 1 && v9807:0 < 1001
f_1551(v9813:0, v9807:0, v9808:0, v9809:0, v9811:0, v11096:0, v9815:0) -> f_1551(2, 1 + v9807:0, 1 + v9807:0 + (v9807:0 + v9807:0 * v9807:0), 1 + v9807:0 + (v9807:0 + v9807:0 * v9807:0) + (v9807:0 + v9807:0 * v9807:0 + v9807:0 * v9807:0 * (1 + v9807:0)), 1 + (1 + v9807:0 + (v9807:0 + v9807:0 * v9807:0) + (v9807:0 + v9807:0 * v9807:0 + v9807:0 * v9807:0 * (1 + v9807:0))), 3, v9807:0) :|: 1 + v9807:0 + (v9807:0 + v9807:0 * v9807:0) + (v9807:0 + v9807:0 * v9807:0 + v9807:0 * v9807:0 * (1 + v9807:0)) < 0 && v9807:0 < 1000 && 7 > 1 + v9807:0 + (v9807:0 + v9807:0 * v9807:0) + (v9807:0 + v9807:0 * v9807:0 + v9807:0 * v9807:0 * (1 + v9807:0)) && v9813:0 > 999 && v11096:0 > 1000 && v9807:0 > 1 && v9807:0 < 1001

----------------------------------------

(34)
Obligation:
Rules:
f_1551(v9813:0, v9807:0, times~v9807:0~v9807:0, times~times~v9807:0~v9807:0~v9807:0, sum~cons_1~times~times~v9807:0~v9807:0~v9807:0, v11096:0, v9815:0) -> f_1551(v11096:0, v9807:0, v9807:0 * v9807:0, v9807:0 * v9807:0 * v9807:0, 1 + v9807:0 * v9807:0 * v9807:0, 1 + v11096:0, v9815:0) :|: v9807:0 < 1001 && v9815:0 < 1000 && v11096:0 * v11096:0 * v11096:0 < 1 + v9807:0 * v9807:0 * v9807:0 && v11096:0 > 1 && v9813:0 < 1000 && v11096:0 < 1001 && times~v9807:0~v9807:0 = v9807:0 * v9807:0 && times~times~v9807:0~v9807:0~v9807:0 = v9807:0 * v9807:0 * v9807:0 && sum~cons_1~times~times~v9807:0~v9807:0~v9807:0 = 1 + v9807:0 * v9807:0 * v9807:0
f_1551(x, x1, x2, x3, x4, x5, x6) -> f_1551(x5, x1, x1 * x1, x1 * x1 * x1, 1 + x1 * x1 * x1, 1 + x5, x6) :|: x1 < 1001 && x6 < 1000 && x5 * x5 * x5 > 1 + x1 * x1 * x1 && x5 > 1 && x < 1000 && x5 < 1001 && x2 = x1 * x1 && x3 = x1 * x1 * x1 && x4 = 1 + x1 * x1 * x1
f_1551(x7, x8, x9, x10, x11, x12, x13) -> f_1551(2, 1 + x8, 1 + x8 + (x8 + x8 * x8), 1 + x8 + (x8 + x8 * x8) + (x8 + x8 * x8 + x8 * x8 * (1 + x8)), 1 + (1 + x8 + (x8 + x8 * x8) + (x8 + x8 * x8 + x8 * x8 * (1 + x8))), 3, x8) :|: x8 < 1000 && 7 < 1 + x8 + (x8 + x8 * x8) + (x8 + x8 * x8 + x8 * x8 * (1 + x8)) && x7 > 999 && x12 > 1000 && x8 > 1 && x8 < 1001
f_1551(x14, x15, x16, x17, x18, x19, x20) -> f_1551(2, 1 + x15, 1 + x15 + (x15 + x15 * x15), 1 + x15 + (x15 + x15 * x15) + (x15 + x15 * x15 + x15 * x15 * (1 + x15)), 1 + (1 + x15 + (x15 + x15 * x15) + (x15 + x15 * x15 + x15 * x15 * (1 + x15))), 3, x15) :|: 1 + x15 + (x15 + x15 * x15) + (x15 + x15 * x15 + x15 * x15 * (1 + x15)) > 0 && x15 < 1000 && 7 > 1 + x15 + (x15 + x15 * x15) + (x15 + x15 * x15 + x15 * x15 * (1 + x15)) && x14 > 999 && x19 > 1000 && x15 > 1 && x15 < 1001
f_1551(x21, x22, x23, x24, x25, x26, x27) -> f_1551(2, 1 + x22, 1 + x22 + (x22 + x22 * x22), 1 + x22 + (x22 + x22 * x22) + (x22 + x22 * x22 + x22 * x22 * (1 + x22)), 1 + (1 + x22 + (x22 + x22 * x22) + (x22 + x22 * x22 + x22 * x22 * (1 + x22))), 3, x22) :|: 1 + x22 + (x22 + x22 * x22) + (x22 + x22 * x22 + x22 * x22 * (1 + x22)) < 0 && x22 < 1000 && 7 < 1 + x22 + (x22 + x22 * x22) + (x22 + x22 * x22 + x22 * x22 * (1 + x22)) && x21 > 999 && x26 > 1000 && x22 > 1 && x22 < 1001
f_1551(x28, x29, x30, x31, x32, x33, x34) -> f_1551(2, 1 + x29, 1 + x29 + (x29 + x29 * x29), 1 + x29 + (x29 + x29 * x29) + (x29 + x29 * x29 + x29 * x29 * (1 + x29)), 1 + (1 + x29 + (x29 + x29 * x29) + (x29 + x29 * x29 + x29 * x29 * (1 + x29))), 3, x29) :|: 1 + x29 + (x29 + x29 * x29) + (x29 + x29 * x29 + x29 * x29 * (1 + x29)) < 0 && x29 < 1000 && 7 > 1 + x29 + (x29 + x29 * x29) + (x29 + x29 * x29 + x29 * x29 * (1 + x29)) && x28 > 999 && x33 > 1000 && x29 > 1 && x29 < 1001

----------------------------------------

(35) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(36)
Obligation:
Rules:
f_1551(x7:0, x8:0, x9:0, x10:0, x11:0, x12:0, x13:0) -> f_1551(2, 1 + x8:0, 1 + x8:0 + (x8:0 + x8:0 * x8:0), 1 + x8:0 + (x8:0 + x8:0 * x8:0) + (x8:0 + x8:0 * x8:0 + x8:0 * x8:0 * (1 + x8:0)), 1 + (1 + x8:0 + (x8:0 + x8:0 * x8:0) + (x8:0 + x8:0 * x8:0 + x8:0 * x8:0 * (1 + x8:0))), 3, x8:0) :|: x8:0 > 1 && x8:0 < 1001 && x12:0 > 1000 && x7:0 > 999 && 7 < 1 + x8:0 + (x8:0 + x8:0 * x8:0) + (x8:0 + x8:0 * x8:0 + x8:0 * x8:0 * (1 + x8:0)) && x8:0 < 1000
f_1551(v9813:0:0, v9807:0:0, times~v9807:0:0~v9807:0:0, times~times~v9807:0:0~v9807:0:0~v9807:0:0, sum~cons_1~times~times~v9807:0:0~v9807:0:0~v9807:0:0, v11096:0:0, v9815:0:0) -> f_1551(v11096:0:0, v9807:0:0, v9807:0:0 * v9807:0:0, v9807:0:0 * v9807:0:0 * v9807:0:0, 1 + v9807:0:0 * v9807:0:0 * v9807:0:0, 1 + v11096:0:0, v9815:0:0) :|: v9813:0:0 < 1000 && v11096:0:0 < 1001 && v11096:0:0 > 1 && v11096:0:0 * v11096:0:0 * v11096:0:0 < 1 + v9807:0:0 * v9807:0:0 * v9807:0:0 && v9815:0:0 < 1000 && v9807:0:0 < 1001 && times~v9807:0:0~v9807:0:0 = v9807:0:0 * v9807:0:0 && times~times~v9807:0:0~v9807:0:0~v9807:0:0 = v9807:0:0 * v9807:0:0 * v9807:0:0 && sum~cons_1~times~times~v9807:0:0~v9807:0:0~v9807:0:0 = 1 + v9807:0:0 * v9807:0:0 * v9807:0:0
f_1551(x:0, x1:0, times~x1:0~x1:0, times~times~x1:0~x1:0~x1:0, sum~cons_1~times~times~x1:0~x1:0~x1:0, x5:0, x6:0) -> f_1551(x5:0, x1:0, x1:0 * x1:0, x1:0 * x1:0 * x1:0, 1 + x1:0 * x1:0 * x1:0, 1 + x5:0, x6:0) :|: x:0 < 1000 && x5:0 < 1001 && x5:0 > 1 && x5:0 * x5:0 * x5:0 > 1 + x1:0 * x1:0 * x1:0 && x6:0 < 1000 && x1:0 < 1001 && times~x1:0~x1:0 = x1:0 * x1:0 && times~times~x1:0~x1:0~x1:0 = x1:0 * x1:0 * x1:0 && sum~cons_1~times~times~x1:0~x1:0~x1:0 = 1 + x1:0 * x1:0 * x1:0
f_1551(x21:0, x22:0, x23:0, x24:0, x25:0, x26:0, x27:0) -> f_1551(2, 1 + x22:0, 1 + x22:0 + (x22:0 + x22:0 * x22:0), 1 + x22:0 + (x22:0 + x22:0 * x22:0) + (x22:0 + x22:0 * x22:0 + x22:0 * x22:0 * (1 + x22:0)), 1 + (1 + x22:0 + (x22:0 + x22:0 * x22:0) + (x22:0 + x22:0 * x22:0 + x22:0 * x22:0 * (1 + x22:0))), 3, x22:0) :|: x22:0 > 1 && x22:0 < 1001 && x26:0 > 1000 && x21:0 > 999 && 7 < 1 + x22:0 + (x22:0 + x22:0 * x22:0) + (x22:0 + x22:0 * x22:0 + x22:0 * x22:0 * (1 + x22:0)) && x22:0 < 1000 && 1 + x22:0 + (x22:0 + x22:0 * x22:0) + (x22:0 + x22:0 * x22:0 + x22:0 * x22:0 * (1 + x22:0)) < 0
f_1551(x28:0, x29:0, x30:0, x31:0, x32:0, x33:0, x34:0) -> f_1551(2, 1 + x29:0, 1 + x29:0 + (x29:0 + x29:0 * x29:0), 1 + x29:0 + (x29:0 + x29:0 * x29:0) + (x29:0 + x29:0 * x29:0 + x29:0 * x29:0 * (1 + x29:0)), 1 + (1 + x29:0 + (x29:0 + x29:0 * x29:0) + (x29:0 + x29:0 * x29:0 + x29:0 * x29:0 * (1 + x29:0))), 3, x29:0) :|: x29:0 > 1 && x29:0 < 1001 && x33:0 > 1000 && x28:0 > 999 && 7 > 1 + x29:0 + (x29:0 + x29:0 * x29:0) + (x29:0 + x29:0 * x29:0 + x29:0 * x29:0 * (1 + x29:0)) && x29:0 < 1000 && 1 + x29:0 + (x29:0 + x29:0 * x29:0) + (x29:0 + x29:0 * x29:0 + x29:0 * x29:0 * (1 + x29:0)) < 0
f_1551(x14:0, x15:0, x16:0, x17:0, x18:0, x19:0, x20:0) -> f_1551(2, 1 + x15:0, 1 + x15:0 + (x15:0 + x15:0 * x15:0), 1 + x15:0 + (x15:0 + x15:0 * x15:0) + (x15:0 + x15:0 * x15:0 + x15:0 * x15:0 * (1 + x15:0)), 1 + (1 + x15:0 + (x15:0 + x15:0 * x15:0) + (x15:0 + x15:0 * x15:0 + x15:0 * x15:0 * (1 + x15:0))), 3, x15:0) :|: x15:0 > 1 && x15:0 < 1001 && x19:0 > 1000 && x14:0 > 999 && 7 > 1 + x15:0 + (x15:0 + x15:0 * x15:0) + (x15:0 + x15:0 * x15:0 + x15:0 * x15:0 * (1 + x15:0)) && x15:0 < 1000 && 1 + x15:0 + (x15:0 + x15:0 * x15:0) + (x15:0 + x15:0 * x15:0 + x15:0 * x15:0 * (1 + x15:0)) > 0

----------------------------------------

(37) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_1551 ] = -1*f_1551_2

The following rules are decreasing:
f_1551(x7:0, x8:0, x9:0, x10:0, x11:0, x12:0, x13:0) -> f_1551(2, 1 + x8:0, 1 + x8:0 + (x8:0 + x8:0 * x8:0), 1 + x8:0 + (x8:0 + x8:0 * x8:0) + (x8:0 + x8:0 * x8:0 + x8:0 * x8:0 * (1 + x8:0)), 1 + (1 + x8:0 + (x8:0 + x8:0 * x8:0) + (x8:0 + x8:0 * x8:0 + x8:0 * x8:0 * (1 + x8:0))), 3, x8:0) :|: x8:0 > 1 && x8:0 < 1001 && x12:0 > 1000 && x7:0 > 999 && 7 < 1 + x8:0 + (x8:0 + x8:0 * x8:0) + (x8:0 + x8:0 * x8:0 + x8:0 * x8:0 * (1 + x8:0)) && x8:0 < 1000
f_1551(x21:0, x22:0, x23:0, x24:0, x25:0, x26:0, x27:0) -> f_1551(2, 1 + x22:0, 1 + x22:0 + (x22:0 + x22:0 * x22:0), 1 + x22:0 + (x22:0 + x22:0 * x22:0) + (x22:0 + x22:0 * x22:0 + x22:0 * x22:0 * (1 + x22:0)), 1 + (1 + x22:0 + (x22:0 + x22:0 * x22:0) + (x22:0 + x22:0 * x22:0 + x22:0 * x22:0 * (1 + x22:0))), 3, x22:0) :|: x22:0 > 1 && x22:0 < 1001 && x26:0 > 1000 && x21:0 > 999 && 7 < 1 + x22:0 + (x22:0 + x22:0 * x22:0) + (x22:0 + x22:0 * x22:0 + x22:0 * x22:0 * (1 + x22:0)) && x22:0 < 1000 && 1 + x22:0 + (x22:0 + x22:0 * x22:0) + (x22:0 + x22:0 * x22:0 + x22:0 * x22:0 * (1 + x22:0)) < 0
f_1551(x28:0, x29:0, x30:0, x31:0, x32:0, x33:0, x34:0) -> f_1551(2, 1 + x29:0, 1 + x29:0 + (x29:0 + x29:0 * x29:0), 1 + x29:0 + (x29:0 + x29:0 * x29:0) + (x29:0 + x29:0 * x29:0 + x29:0 * x29:0 * (1 + x29:0)), 1 + (1 + x29:0 + (x29:0 + x29:0 * x29:0) + (x29:0 + x29:0 * x29:0 + x29:0 * x29:0 * (1 + x29:0))), 3, x29:0) :|: x29:0 > 1 && x29:0 < 1001 && x33:0 > 1000 && x28:0 > 999 && 7 > 1 + x29:0 + (x29:0 + x29:0 * x29:0) + (x29:0 + x29:0 * x29:0 + x29:0 * x29:0 * (1 + x29:0)) && x29:0 < 1000 && 1 + x29:0 + (x29:0 + x29:0 * x29:0) + (x29:0 + x29:0 * x29:0 + x29:0 * x29:0 * (1 + x29:0)) < 0
f_1551(x14:0, x15:0, x16:0, x17:0, x18:0, x19:0, x20:0) -> f_1551(2, 1 + x15:0, 1 + x15:0 + (x15:0 + x15:0 * x15:0), 1 + x15:0 + (x15:0 + x15:0 * x15:0) + (x15:0 + x15:0 * x15:0 + x15:0 * x15:0 * (1 + x15:0)), 1 + (1 + x15:0 + (x15:0 + x15:0 * x15:0) + (x15:0 + x15:0 * x15:0 + x15:0 * x15:0 * (1 + x15:0))), 3, x15:0) :|: x15:0 > 1 && x15:0 < 1001 && x19:0 > 1000 && x14:0 > 999 && 7 > 1 + x15:0 + (x15:0 + x15:0 * x15:0) + (x15:0 + x15:0 * x15:0 + x15:0 * x15:0 * (1 + x15:0)) && x15:0 < 1000 && 1 + x15:0 + (x15:0 + x15:0 * x15:0) + (x15:0 + x15:0 * x15:0 + x15:0 * x15:0 * (1 + x15:0)) > 0

The following rules are bounded:
f_1551(x7:0, x8:0, x9:0, x10:0, x11:0, x12:0, x13:0) -> f_1551(2, 1 + x8:0, 1 + x8:0 + (x8:0 + x8:0 * x8:0), 1 + x8:0 + (x8:0 + x8:0 * x8:0) + (x8:0 + x8:0 * x8:0 + x8:0 * x8:0 * (1 + x8:0)), 1 + (1 + x8:0 + (x8:0 + x8:0 * x8:0) + (x8:0 + x8:0 * x8:0 + x8:0 * x8:0 * (1 + x8:0))), 3, x8:0) :|: x8:0 > 1 && x8:0 < 1001 && x12:0 > 1000 && x7:0 > 999 && 7 < 1 + x8:0 + (x8:0 + x8:0 * x8:0) + (x8:0 + x8:0 * x8:0 + x8:0 * x8:0 * (1 + x8:0)) && x8:0 < 1000
f_1551(v9813:0:0, v9807:0:0, times~v9807:0:0~v9807:0:0, times~times~v9807:0:0~v9807:0:0~v9807:0:0, sum~cons_1~times~times~v9807:0:0~v9807:0:0~v9807:0:0, v11096:0:0, v9815:0:0) -> f_1551(v11096:0:0, v9807:0:0, v9807:0:0 * v9807:0:0, v9807:0:0 * v9807:0:0 * v9807:0:0, 1 + v9807:0:0 * v9807:0:0 * v9807:0:0, 1 + v11096:0:0, v9815:0:0) :|: v9813:0:0 < 1000 && v11096:0:0 < 1001 && v11096:0:0 > 1 && v11096:0:0 * v11096:0:0 * v11096:0:0 < 1 + v9807:0:0 * v9807:0:0 * v9807:0:0 && v9815:0:0 < 1000 && v9807:0:0 < 1001 && times~v9807:0:0~v9807:0:0 = v9807:0:0 * v9807:0:0 && times~times~v9807:0:0~v9807:0:0~v9807:0:0 = v9807:0:0 * v9807:0:0 * v9807:0:0 && sum~cons_1~times~times~v9807:0:0~v9807:0:0~v9807:0:0 = 1 + v9807:0:0 * v9807:0:0 * v9807:0:0
f_1551(x:0, x1:0, times~x1:0~x1:0, times~times~x1:0~x1:0~x1:0, sum~cons_1~times~times~x1:0~x1:0~x1:0, x5:0, x6:0) -> f_1551(x5:0, x1:0, x1:0 * x1:0, x1:0 * x1:0 * x1:0, 1 + x1:0 * x1:0 * x1:0, 1 + x5:0, x6:0) :|: x:0 < 1000 && x5:0 < 1001 && x5:0 > 1 && x5:0 * x5:0 * x5:0 > 1 + x1:0 * x1:0 * x1:0 && x6:0 < 1000 && x1:0 < 1001 && times~x1:0~x1:0 = x1:0 * x1:0 && times~times~x1:0~x1:0~x1:0 = x1:0 * x1:0 * x1:0 && sum~cons_1~times~times~x1:0~x1:0~x1:0 = 1 + x1:0 * x1:0 * x1:0
f_1551(x21:0, x22:0, x23:0, x24:0, x25:0, x26:0, x27:0) -> f_1551(2, 1 + x22:0, 1 + x22:0 + (x22:0 + x22:0 * x22:0), 1 + x22:0 + (x22:0 + x22:0 * x22:0) + (x22:0 + x22:0 * x22:0 + x22:0 * x22:0 * (1 + x22:0)), 1 + (1 + x22:0 + (x22:0 + x22:0 * x22:0) + (x22:0 + x22:0 * x22:0 + x22:0 * x22:0 * (1 + x22:0))), 3, x22:0) :|: x22:0 > 1 && x22:0 < 1001 && x26:0 > 1000 && x21:0 > 999 && 7 < 1 + x22:0 + (x22:0 + x22:0 * x22:0) + (x22:0 + x22:0 * x22:0 + x22:0 * x22:0 * (1 + x22:0)) && x22:0 < 1000 && 1 + x22:0 + (x22:0 + x22:0 * x22:0) + (x22:0 + x22:0 * x22:0 + x22:0 * x22:0 * (1 + x22:0)) < 0
f_1551(x28:0, x29:0, x30:0, x31:0, x32:0, x33:0, x34:0) -> f_1551(2, 1 + x29:0, 1 + x29:0 + (x29:0 + x29:0 * x29:0), 1 + x29:0 + (x29:0 + x29:0 * x29:0) + (x29:0 + x29:0 * x29:0 + x29:0 * x29:0 * (1 + x29:0)), 1 + (1 + x29:0 + (x29:0 + x29:0 * x29:0) + (x29:0 + x29:0 * x29:0 + x29:0 * x29:0 * (1 + x29:0))), 3, x29:0) :|: x29:0 > 1 && x29:0 < 1001 && x33:0 > 1000 && x28:0 > 999 && 7 > 1 + x29:0 + (x29:0 + x29:0 * x29:0) + (x29:0 + x29:0 * x29:0 + x29:0 * x29:0 * (1 + x29:0)) && x29:0 < 1000 && 1 + x29:0 + (x29:0 + x29:0 * x29:0) + (x29:0 + x29:0 * x29:0 + x29:0 * x29:0 * (1 + x29:0)) < 0
f_1551(x14:0, x15:0, x16:0, x17:0, x18:0, x19:0, x20:0) -> f_1551(2, 1 + x15:0, 1 + x15:0 + (x15:0 + x15:0 * x15:0), 1 + x15:0 + (x15:0 + x15:0 * x15:0) + (x15:0 + x15:0 * x15:0 + x15:0 * x15:0 * (1 + x15:0)), 1 + (1 + x15:0 + (x15:0 + x15:0 * x15:0) + (x15:0 + x15:0 * x15:0 + x15:0 * x15:0 * (1 + x15:0))), 3, x15:0) :|: x15:0 > 1 && x15:0 < 1001 && x19:0 > 1000 && x14:0 > 999 && 7 > 1 + x15:0 + (x15:0 + x15:0 * x15:0) + (x15:0 + x15:0 * x15:0 + x15:0 * x15:0 * (1 + x15:0)) && x15:0 < 1000 && 1 + x15:0 + (x15:0 + x15:0 * x15:0) + (x15:0 + x15:0 * x15:0 + x15:0 * x15:0 * (1 + x15:0)) > 0


----------------------------------------

(38)
Obligation:
Rules:
f_1551(v9813:0:0, v9807:0:0, times~v9807:0:0~v9807:0:0, times~times~v9807:0:0~v9807:0:0~v9807:0:0, sum~cons_1~times~times~v9807:0:0~v9807:0:0~v9807:0:0, v11096:0:0, v9815:0:0) -> f_1551(v11096:0:0, v9807:0:0, v9807:0:0 * v9807:0:0, v9807:0:0 * v9807:0:0 * v9807:0:0, 1 + v9807:0:0 * v9807:0:0 * v9807:0:0, 1 + v11096:0:0, v9815:0:0) :|: v9813:0:0 < 1000 && v11096:0:0 < 1001 && v11096:0:0 > 1 && v11096:0:0 * v11096:0:0 * v11096:0:0 < 1 + v9807:0:0 * v9807:0:0 * v9807:0:0 && v9815:0:0 < 1000 && v9807:0:0 < 1001 && times~v9807:0:0~v9807:0:0 = v9807:0:0 * v9807:0:0 && times~times~v9807:0:0~v9807:0:0~v9807:0:0 = v9807:0:0 * v9807:0:0 * v9807:0:0 && sum~cons_1~times~times~v9807:0:0~v9807:0:0~v9807:0:0 = 1 + v9807:0:0 * v9807:0:0 * v9807:0:0
f_1551(x:0, x1:0, times~x1:0~x1:0, times~times~x1:0~x1:0~x1:0, sum~cons_1~times~times~x1:0~x1:0~x1:0, x5:0, x6:0) -> f_1551(x5:0, x1:0, x1:0 * x1:0, x1:0 * x1:0 * x1:0, 1 + x1:0 * x1:0 * x1:0, 1 + x5:0, x6:0) :|: x:0 < 1000 && x5:0 < 1001 && x5:0 > 1 && x5:0 * x5:0 * x5:0 > 1 + x1:0 * x1:0 * x1:0 && x6:0 < 1000 && x1:0 < 1001 && times~x1:0~x1:0 = x1:0 * x1:0 && times~times~x1:0~x1:0~x1:0 = x1:0 * x1:0 * x1:0 && sum~cons_1~times~times~x1:0~x1:0~x1:0 = 1 + x1:0 * x1:0 * x1:0

----------------------------------------

(39) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(40)
Obligation:
Rules:
f_1551(v9813:0:0:0, v9807:0:0:0, times~v9807:0:0:0~v9807:0:0:0, times~times~v9807:0:0:0~v9807:0:0:0~v9807:0:0:0, sum~cons_1~times~times~v9807:0:0:0~v9807:0:0:0~v9807:0:0:0, v11096:0:0:0, v9815:0:0:0) -> f_1551(v11096:0:0:0, v9807:0:0:0, v9807:0:0:0 * v9807:0:0:0, v9807:0:0:0 * v9807:0:0:0 * v9807:0:0:0, 1 + v9807:0:0:0 * v9807:0:0:0 * v9807:0:0:0, 1 + v11096:0:0:0, v9815:0:0:0) :|: v9815:0:0:0 < 1000 && v9807:0:0:0 < 1001 && v11096:0:0:0 * v11096:0:0:0 * v11096:0:0:0 < 1 + v9807:0:0:0 * v9807:0:0:0 * v9807:0:0:0 && v11096:0:0:0 > 1 && v11096:0:0:0 < 1001 && v9813:0:0:0 < 1000 && times~v9807:0:0:0~v9807:0:0:0 = v9807:0:0:0 * v9807:0:0:0 && times~times~v9807:0:0:0~v9807:0:0:0~v9807:0:0:0 = v9807:0:0:0 * v9807:0:0:0 * v9807:0:0:0 && sum~cons_1~times~times~v9807:0:0:0~v9807:0:0:0~v9807:0:0:0 = 1 + v9807:0:0:0 * v9807:0:0:0 * v9807:0:0:0
f_1551(x:0:0, x1:0:0, times~x1:0:0~x1:0:0, times~times~x1:0:0~x1:0:0~x1:0:0, sum~cons_1~times~times~x1:0:0~x1:0:0~x1:0:0, x5:0:0, x6:0:0) -> f_1551(x5:0:0, x1:0:0, x1:0:0 * x1:0:0, x1:0:0 * x1:0:0 * x1:0:0, 1 + x1:0:0 * x1:0:0 * x1:0:0, 1 + x5:0:0, x6:0:0) :|: x6:0:0 < 1000 && x1:0:0 < 1001 && x5:0:0 * x5:0:0 * x5:0:0 > 1 + x1:0:0 * x1:0:0 * x1:0:0 && x5:0:0 > 1 && x5:0:0 < 1001 && x:0:0 < 1000 && times~x1:0:0~x1:0:0 = x1:0:0 * x1:0:0 && times~times~x1:0:0~x1:0:0~x1:0:0 = x1:0:0 * x1:0:0 * x1:0:0 && sum~cons_1~times~times~x1:0:0~x1:0:0~x1:0:0 = 1 + x1:0:0 * x1:0:0 * x1:0:0

----------------------------------------

(41) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_1551 ] = -1*f_1551_6

The following rules are decreasing:
f_1551(v9813:0:0:0, v9807:0:0:0, times~v9807:0:0:0~v9807:0:0:0, times~times~v9807:0:0:0~v9807:0:0:0~v9807:0:0:0, sum~cons_1~times~times~v9807:0:0:0~v9807:0:0:0~v9807:0:0:0, v11096:0:0:0, v9815:0:0:0) -> f_1551(v11096:0:0:0, v9807:0:0:0, v9807:0:0:0 * v9807:0:0:0, v9807:0:0:0 * v9807:0:0:0 * v9807:0:0:0, 1 + v9807:0:0:0 * v9807:0:0:0 * v9807:0:0:0, 1 + v11096:0:0:0, v9815:0:0:0) :|: v9815:0:0:0 < 1000 && v9807:0:0:0 < 1001 && v11096:0:0:0 * v11096:0:0:0 * v11096:0:0:0 < 1 + v9807:0:0:0 * v9807:0:0:0 * v9807:0:0:0 && v11096:0:0:0 > 1 && v11096:0:0:0 < 1001 && v9813:0:0:0 < 1000 && times~v9807:0:0:0~v9807:0:0:0 = v9807:0:0:0 * v9807:0:0:0 && times~times~v9807:0:0:0~v9807:0:0:0~v9807:0:0:0 = v9807:0:0:0 * v9807:0:0:0 * v9807:0:0:0 && sum~cons_1~times~times~v9807:0:0:0~v9807:0:0:0~v9807:0:0:0 = 1 + v9807:0:0:0 * v9807:0:0:0 * v9807:0:0:0
f_1551(x:0:0, x1:0:0, times~x1:0:0~x1:0:0, times~times~x1:0:0~x1:0:0~x1:0:0, sum~cons_1~times~times~x1:0:0~x1:0:0~x1:0:0, x5:0:0, x6:0:0) -> f_1551(x5:0:0, x1:0:0, x1:0:0 * x1:0:0, x1:0:0 * x1:0:0 * x1:0:0, 1 + x1:0:0 * x1:0:0 * x1:0:0, 1 + x5:0:0, x6:0:0) :|: x6:0:0 < 1000 && x1:0:0 < 1001 && x5:0:0 * x5:0:0 * x5:0:0 > 1 + x1:0:0 * x1:0:0 * x1:0:0 && x5:0:0 > 1 && x5:0:0 < 1001 && x:0:0 < 1000 && times~x1:0:0~x1:0:0 = x1:0:0 * x1:0:0 && times~times~x1:0:0~x1:0:0~x1:0:0 = x1:0:0 * x1:0:0 * x1:0:0 && sum~cons_1~times~times~x1:0:0~x1:0:0~x1:0:0 = 1 + x1:0:0 * x1:0:0 * x1:0:0

The following rules are bounded:
f_1551(v9813:0:0:0, v9807:0:0:0, times~v9807:0:0:0~v9807:0:0:0, times~times~v9807:0:0:0~v9807:0:0:0~v9807:0:0:0, sum~cons_1~times~times~v9807:0:0:0~v9807:0:0:0~v9807:0:0:0, v11096:0:0:0, v9815:0:0:0) -> f_1551(v11096:0:0:0, v9807:0:0:0, v9807:0:0:0 * v9807:0:0:0, v9807:0:0:0 * v9807:0:0:0 * v9807:0:0:0, 1 + v9807:0:0:0 * v9807:0:0:0 * v9807:0:0:0, 1 + v11096:0:0:0, v9815:0:0:0) :|: v9815:0:0:0 < 1000 && v9807:0:0:0 < 1001 && v11096:0:0:0 * v11096:0:0:0 * v11096:0:0:0 < 1 + v9807:0:0:0 * v9807:0:0:0 * v9807:0:0:0 && v11096:0:0:0 > 1 && v11096:0:0:0 < 1001 && v9813:0:0:0 < 1000 && times~v9807:0:0:0~v9807:0:0:0 = v9807:0:0:0 * v9807:0:0:0 && times~times~v9807:0:0:0~v9807:0:0:0~v9807:0:0:0 = v9807:0:0:0 * v9807:0:0:0 * v9807:0:0:0 && sum~cons_1~times~times~v9807:0:0:0~v9807:0:0:0~v9807:0:0:0 = 1 + v9807:0:0:0 * v9807:0:0:0 * v9807:0:0:0
f_1551(x:0:0, x1:0:0, times~x1:0:0~x1:0:0, times~times~x1:0:0~x1:0:0~x1:0:0, sum~cons_1~times~times~x1:0:0~x1:0:0~x1:0:0, x5:0:0, x6:0:0) -> f_1551(x5:0:0, x1:0:0, x1:0:0 * x1:0:0, x1:0:0 * x1:0:0 * x1:0:0, 1 + x1:0:0 * x1:0:0 * x1:0:0, 1 + x5:0:0, x6:0:0) :|: x6:0:0 < 1000 && x1:0:0 < 1001 && x5:0:0 * x5:0:0 * x5:0:0 > 1 + x1:0:0 * x1:0:0 * x1:0:0 && x5:0:0 > 1 && x5:0:0 < 1001 && x:0:0 < 1000 && times~x1:0:0~x1:0:0 = x1:0:0 * x1:0:0 && times~times~x1:0:0~x1:0:0~x1:0:0 = x1:0:0 * x1:0:0 * x1:0:0 && sum~cons_1~times~times~x1:0:0~x1:0:0~x1:0:0 = 1 + x1:0:0 * x1:0:0 * x1:0:0


----------------------------------------

(42)
YES

----------------------------------------

(43)
Obligation:
SCC
----------------------------------------

(44) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 38 rulesP rules:
f_408(v103, v104, v105, v106, v107, v114, v108, v109, v110, 1, 2, 1000, 0, v116, v117, v118, v119, v120, 3, 4) -> f_409(v103, v104, v105, v106, v107, v114, v109, v108, v110, 1, 2, 1000, 0, v116, v117, v118, v119, v120, 3, 4) :|: 0 = 0
f_409(v103, v104, v105, v106, v107, v114, v109, v108, v110, 1, 2, 1000, 0, v116, v117, v118, v119, v120, 3, 4) -> f_410(v103, v104, v105, v106, v107, v114, v121, v108, v110, 1, 2, 1000, 0, v116, v117, v118, v119, v120, 3, 4) :|: v121 = v114 * v114
f_410(v103, v104, v105, v106, v107, v114, v121, v108, v110, 1, 2, 1000, 0, v116, v117, v118, v119, v120, 3, 4) -> f_411(v103, v104, v105, v106, v107, v114, v121, v110, 1, 2, 1000, v108, 0, v116, v117, v118, v119, v120, 3, 4) :|: 0 = 0
f_411(v103, v104, v105, v106, v107, v114, v121, v110, 1, 2, 1000, v108, 0, v116, v117, v118, v119, v120, 3, 4) -> f_412(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v108, 0, v116, v117, v118, v119, v120, 3, 4) :|: v122 = v121 * v114
f_412(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v108, 0, v116, v117, v118, v119, v120, 3, 4) -> f_413(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v108, 0, v116, v117, v118, v119, v120, 3, 4) :|: 0 = 0
f_413(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v108, 0, v116, v117, v118, v119, v120, 3, 4) -> f_414(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v108, 0, v116, v117, v118, v119, v120, 3, 4) :|: 0 = 0
f_414(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v108, 0, v116, v117, v118, v119, v120, 3, 4) -> f_415(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v108, 0, v116, v117, v118, v119, v120, 3, 4) :|: 0 = 0
f_415(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v108, 0, v116, v117, v118, v119, v120, 3, 4) -> f_416(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v108, 0, v116, v117, v118, v119, v120, 3, 4) :|: 0 = 0
f_416(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v108, 0, v116, v117, v118, v119, v120, 3, 4) -> f_417(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v108, 0, v116, v117, v118, v119, v120, 3, 4) :|: 0 = 0
f_417(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v108, 0, v116, v117, v118, v119, v120, 3, 4) -> f_418(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v108, 0, v116, v117, v118, v119, v120, 3, 4) :|: 0 = 0
f_418(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v108, 0, v116, v117, v118, v119, v120, 3, 4) -> f_419(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v108, 0, v116, v117, v118, v119, v120, 3, 4) :|: 0 = 0
f_419(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v108, 0, v116, v117, v118, v119, v120, 3, 4) -> f_420(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v108, 0, v116, v117, v118, v119, v120, 3, 4) :|: 0 = 0
f_420(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v108, 0, v116, v117, v118, v119, v120, 3, 4) -> f_421(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v108, 0, v116, v117, v118, v119, v120, 3, 4) :|: 0 = 0
f_421(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v108, 0, v116, v117, v118, v119, v120, 3, 4) -> f_422(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v108, 0, v116, v117, v118, v119, v120, 3, 4) :|: 0 = 0
f_422(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v108, 0, v116, v117, v118, v119, v120, 3, 4) -> f_423(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v108, 0, v116, v117, v118, v119, v120, 3, 4) :|: 0 = 0
f_423(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v108, 0, v116, v117, v118, v119, v120, 3, 4) -> f_424(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v108, 0, v116, v117, v118, v119, v120, 3, 4) :|: v122 != 2
f_424(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v108, 0, v116, v117, v118, v119, v120, 3, 4) -> f_426(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v108, 0, v116, v117, v118, v119, v120, 3, 4) :|: 0 = 0
f_426(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v108, 0, v116, v117, v118, v119, v120, 3, 4) -> f_428(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v108, 0, v116, v117, v118, v119, v120, 3, 4) :|: TRUE
f_428(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v108, 0, v116, v117, v118, v119, v120, 3, 4) -> f_430(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v108, 0, v116, v117, v118, v119, v120, 3, 4) :|: 0 = 0
f_430(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v108, 0, v116, v117, v118, v119, v120, 3, 4) -> f_432(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v108, 0, v116, v117, v118, v119, v120, 3, 4) :|: 0 = 0
f_432(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v108, 0, v116, v117, v118, v119, v120, 3, 4) -> f_433(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v108, 0, v116, v117, v118, v119, v120, 3, 4) :|: 0 = 0
f_433(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v108, 0, v116, v117, v118, v119, v120, 3, 4) -> f_434(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v108, 0, v116, v117, v118, v119, v120, 3, 4) :|: 0 = 0
f_434(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v108, 0, v116, v117, v118, v119, v120, 3, 4) -> f_435(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v108, 0, v116, v117, v118, v119, v120, 3, 4) :|: TRUE
f_435(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v108, 0, v116, v117, v118, v119, v120, 3, 4) -> f_436(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, 0, v116, v117, v118, v119, v120, 3, 4) :|: 0 = 0
f_436(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, 0, v116, v117, v118, v119, v120, 3, 4) -> f_437(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v130, 0, v116, v117, v118, v119, v120, 3, 4) :|: v130 = 1 + v114 && 3 <= v130
f_437(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v130, 0, v116, v117, v118, v119, v120, 3, 4) -> f_438(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v130, 0, v116, v117, v118, v119, v120, 3, 4) :|: TRUE
f_438(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v130, 0, v116, v117, v118, v119, v120, 3, 4) -> f_439(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v130, 0, v116, v117, v118, v119, v120, 3, 4) :|: 0 = 0
f_439(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v130, 0, v116, v117, v118, v119, v120, 3, 4) -> f_440(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v130, 0, v116, v117, v118, v119, v120, 3, 4) :|: 0 = 0
f_440(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v130, 0, v116, v117, v118, v119, v120, 3, 4) -> f_442(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v130, 0, v116, v117, v118, v119, v120, 3, 999, 4) :|: v130 <= 1000 && v114 <= 999
f_442(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v130, 0, v116, v117, v118, v119, v120, 3, 999, 4) -> f_444(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v130, 0, v116, v117, v118, v119, v120, 3, 999, 4) :|: 0 = 0
f_444(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v130, 0, v116, v117, v118, v119, v120, 3, 999, 4) -> f_446(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v130, 0, v116, v117, v118, v119, v120, 3, 999, 4) :|: TRUE
f_446(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v130, 0, v116, v117, v118, v119, v120, 3, 999, 4) -> f_448(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v130, 0, v116, v117, v118, v119, v120, 3, 999, 4) :|: 0 = 0
f_448(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v130, 0, v116, v117, v118, v119, v120, 3, 999, 4) -> f_450(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v130, 0, v116, v117, v118, v119, v120, 3, 999, 4) :|: 0 = 0
f_450(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v130, 0, v116, v117, v118, v119, v120, 3, 999, 4) -> f_452(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v130, 0, v116, v117, v118, v119, v120, 3, 999, 4) :|: 0 = 0
f_452(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v130, 0, v116, v117, v118, v119, v120, 3, 999, 4) -> f_454(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v130, 0, v116, v117, v118, v119, v120, 3, 999, 4) :|: TRUE
f_454(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v130, 0, v116, v117, v118, v119, v120, 3, 999, 4) -> f_456(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v130, 0, v116, v117, v118, v119, v120, 3, 999, 4) :|: TRUE
f_456(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v130, 0, v116, v117, v118, v119, v120, 3, 999, 4) -> f_407(v103, v104, v105, v106, v107, v114, v121, v122, 1, 2, 1000, v130, 0, v116, v117, v118, v119, v120, 3, 4) :|: TRUE
f_407(v103, v104, v105, v106, v107, v108, v109, v110, 1, 2, 1000, v114, 0, v116, v117, v118, v119, v120, 3, 4) -> f_408(v103, v104, v105, v106, v107, v114, v108, v109, v110, 1, 2, 1000, 0, v116, v117, v118, v119, v120, 3, 4) :|: 0 = 0
Combined rules. Obtained 2 rulesP rules:
f_408(v103:0, v104:0, v105:0, v106:0, v107:0, v114:0, v108:0, v109:0, v110:0, 1, 2, 1000, 0, v116:0, v117:0, v118:0, v119:0, v120:0, 3, 4) -> f_408(v103:0, v104:0, v105:0, v106:0, v107:0, 1 + v114:0, v114:0, v114:0 * v114:0, v114:0 * v114:0 * v114:0, 1, 2, 1000, 0, v116:0, v117:0, v118:0, v119:0, v120:0, 3, 4) :|: v114:0 * v114:0 * v114:0 < 2 && v114:0 > 1 && v114:0 < 1000
f_408(v103:0, v104:0, v105:0, v106:0, v107:0, v114:0, v108:0, v109:0, v110:0, 1, 2, 1000, 0, v116:0, v117:0, v118:0, v119:0, v120:0, 3, 4) -> f_408(v103:0, v104:0, v105:0, v106:0, v107:0, 1 + v114:0, v114:0, v114:0 * v114:0, v114:0 * v114:0 * v114:0, 1, 2, 1000, 0, v116:0, v117:0, v118:0, v119:0, v120:0, 3, 4) :|: v114:0 * v114:0 * v114:0 > 2 && v114:0 > 1 && v114:0 < 1000
Filtered unneeded arguments:
   f_408(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20) -> f_408(x6)
Removed division, modulo operations, cleaned up constraints. Obtained 2 rules.P rules:
f_408(v114:0) -> f_408(1 + v114:0) :|: v114:0 > 1 && v114:0 < 1000 && v114:0 * v114:0 * v114:0 < 2
f_408(v114:0) -> f_408(1 + v114:0) :|: v114:0 > 1 && v114:0 < 1000 && v114:0 * v114:0 * v114:0 > 2

----------------------------------------

(45)
Obligation:
Rules:
f_408(v114:0) -> f_408(1 + v114:0) :|: v114:0 > 1 && v114:0 < 1000 && v114:0 * v114:0 * v114:0 < 2
f_408(x) -> f_408(1 + x) :|: x > 1 && x < 1000 && x * x * x > 2

----------------------------------------

(46) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(47)
Obligation:
Rules:
f_408(x:0) -> f_408(1 + x:0) :|: x:0 > 1 && x:0 < 1000 && x:0 * x:0 * x:0 > 2
f_408(v114:0:0) -> f_408(1 + v114:0:0) :|: v114:0:0 > 1 && v114:0:0 < 1000 && v114:0:0 * v114:0:0 * v114:0:0 < 2

----------------------------------------

(48) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_408(x)] = 999 - x

The following rules are decreasing:
f_408(x:0) -> f_408(1 + x:0) :|: x:0 > 1 && x:0 < 1000 && x:0 * x:0 * x:0 > 2
f_408(v114:0:0) -> f_408(1 + v114:0:0) :|: v114:0:0 > 1 && v114:0:0 < 1000 && v114:0:0 * v114:0:0 * v114:0:0 < 2
The following rules are bounded:
f_408(x:0) -> f_408(1 + x:0) :|: x:0 > 1 && x:0 < 1000 && x:0 * x:0 * x:0 > 2
f_408(v114:0:0) -> f_408(1 + v114:0:0) :|: v114:0:0 > 1 && v114:0:0 < 1000 && v114:0:0 * v114:0:0 * v114:0:0 < 2

----------------------------------------

(49)
YES
Graph finished, checking  consistency
Graph finished, checked consistency, took 0.001s
