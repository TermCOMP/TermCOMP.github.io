YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/NtGSg.c
# AProVE Commit ID: 48c83ccb80d5f8312cb92f4aa1b51dc35e247e65 nils 20241118 unpublished


Termination of the given C Problem could be proven:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 19 ms]
(2) LLVM problem
(3) LLVMToTerminationGraphProof [EQUIVALENT, 1768 ms]
(4) LLVM Symbolic Execution Graph
(5) SymbolicExecutionGraphToSCCProof [SOUND, 0 ms]
(6) AND
    (7) LLVM Symbolic Execution SCC
        (8) SCC2IRS [SOUND, 93 ms]
        (9) IntTRS
        (10) PolynomialOrderProcessor [EQUIVALENT, 1 ms]
        (11) YES
    (12) LLVM Symbolic Execution SCC
        (13) SCC2IRS [SOUND, 79 ms]
        (14) IntTRS
        (15) RankingReductionPairProof [EQUIVALENT, 1 ms]
        (16) YES
    (17) LLVM Symbolic Execution SCC
        (18) SCC2IRS [SOUND, 59 ms]
        (19) IntTRS
        (20) RankingReductionPairProof [EQUIVALENT, 4 ms]
        (21) YES
    (22) LLVM Symbolic Execution SCC
        (23) SCC2IRS [SOUND, 60 ms]
        (24) IntTRS
        (25) PolynomialOrderProcessor [EQUIVALENT, 1 ms]
        (26) YES
    (27) LLVM Symbolic Execution SCC
        (28) SCC2IRS [SOUND, 53 ms]
        (29) IntTRS
        (30) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (31) IntTRS
        (32) PolynomialOrderProcessor [EQUIVALENT, 3 ms]
        (33) IntTRS
        (34) TerminationGraphProcessor [EQUIVALENT, 2 ms]
        (35) IntTRS
        (36) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
        (37) IntTRS
        (38) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (39) YES
    (40) LLVM Symbolic Execution SCC
        (41) SCC2IRS [SOUND, 61 ms]
        (42) IntTRS
        (43) RankingReductionPairProof [EQUIVALENT, 1 ms]
        (44) YES
    (45) LLVM Symbolic Execution SCC
        (46) SCC2IRS [SOUND, 50 ms]
        (47) IntTRS
        (48) PolynomialOrderProcessor [EQUIVALENT, 3 ms]
        (49) YES
    (50) LLVM Symbolic Execution SCC
        (51) SCC2IRS [SOUND, 52 ms]
        (52) IntTRS
        (53) PolynomialOrderProcessor [EQUIVALENT, 1 ms]
        (54) YES
    (55) LLVM Symbolic Execution SCC
        (56) SCC2IRS [SOUND, 60 ms]
        (57) IntTRS
        (58) RankingReductionPairProof [EQUIVALENT, 1 ms]
        (59) YES


----------------------------------------

(0)
Obligation:
c file /hpcwork/ff862203/termcomp25/benchmarks/NtGSg.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /hpcwork/ff862203/termcomp25/benchmarks/NtGSg.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-pc-linux-gnu"

Type definitions:

Global variables:

Function declarations and definitions:

*BasicFunctionTypename: "llvm.dbg.declare" returnParam: BasicVoidType parameters: (BasicMetadataType, BasicMetadataType, BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_nondet_int" returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 7
	0:
		%1 = alloca i32, align 4
		%2 = alloca i32, align 4
		%3 = alloca i32, align 4
		%4 = alloca i32, align 4
		%5 = alloca i32, align 4
		store 0, %1
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %2)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %3)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %4)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %5)
		%6 = call i32 @__VERIFIER_nondet_int()
		store %6, %2
		%7 = call i32 @__VERIFIER_nondet_int()
		store %7, %3
		%8 = call i32 @__VERIFIER_nondet_int()
		store %8, %4
		%9 = call i32 @__VERIFIER_nondet_int()
		store %9, %5
		br %10
	10:
		%11 = load %4
		%12 = load %2
		%13 = icmp sge %11 %12
		br %13, %14, %18
	14:
		%15 = load %5
		%16 = load %3
		%17 = icmp sge %15 %16
		br %17, %36, %18
	18:
		%19 = load %4
		%20 = load %2
		%21 = icmp sge %19 %20
		br %21, %22, %26
	22:
		%23 = load %5
		%24 = load %3
		%25 = icmp sle %23 %24
		br %25, %36, %26
	26:
		%27 = load %4
		%28 = load %2
		%29 = icmp sle %27 %28
		br %29, %30, %34
	30:
		%31 = load %5
		%32 = load %3
		%33 = icmp sge %31 %32
		br %34
	34:
		%35 = phi [0, %26], [%33, %30]
		br %36
	36:
		%37 = phi [1, %22], [1, %14], [%35, %34]
		br %37, %38, %81
	38:
		%39 = load %4
		%40 = load %2
		%41 = icmp sge %39 %40
		br %41, %42, %56
	42:
		%43 = load %5
		%44 = load %3
		%45 = icmp sge %43 %44
		br %45, %46, %56
	46:
		%47 = call i32 @__VERIFIER_nondet_int()
		%48 = icmp ne %47 0
		br %48, %49, %52
	49:
		%50 = load %3
		%51 = add i32 %50, 1
		store %51, %3
		br %55
	52:
		%53 = load %2
		%54 = add i32 %53, 1
		store %54, %2
		br %55
	55:
		br %80
	56:
		%57 = load %4
		%58 = load %2
		%59 = icmp sge %57 %58
		br %59, %60, %67
	60:
		%61 = load %5
		%62 = load %3
		%63 = icmp sle %61 %62
		br %63, %64, %67
	64:
		%65 = load %2
		%66 = add i32 %65, 1
		store %66, %2
		br %79
	67:
		%68 = load %4
		%69 = load %2
		%70 = icmp sle %68 %69
		br %70, %71, %78
	71:
		%72 = load %5
		%73 = load %3
		%74 = icmp sge %72 %73
		br %74, %75, %78
	75:
		%76 = load %3
		%77 = add i32 %76, 1
		store %77, %3
		br %78
	78:
		br %79
	79:
		br %80
	80:
		br %10
	81:
		ret 0


Analyze Termination of all function calls matching the pattern:
main()
----------------------------------------

(3) LLVMToTerminationGraphProof (EQUIVALENT)
Constructed symbolic execution graph for LLVM program.
----------------------------------------

(4)
Obligation:
Symbolic Execution Graph
----------------------------------------

(5) SymbolicExecutionGraphToSCCProof (SOUND)
Splitted symbolic execution graph to 9 SCCs.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
SCC
----------------------------------------

(8) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 41 rulesP rules:
f_1914(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30285, 1, v30287, 0, v30289, v30290, v30291, v30292, v30293, v30294, v30295, v30296, v30297, 3, 4) -> f_1916(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30285, 1, v30287, 0, v30289, v30290, v30291, v30292, v30293, v30294, v30295, v30296, v30297, 3, 4) :|: TRUE
f_1916(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30285, 1, v30287, 0, v30289, v30290, v30291, v30292, v30293, v30294, v30295, v30296, v30297, 3, 4) -> f_1918(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30285, 1, v30287, 0, v30289, v30290, v30291, v30292, v30293, v30294, v30295, v30296, v30297, 3, 4) :|: 0 = 0
f_1918(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30285, 1, v30287, 0, v30289, v30290, v30291, v30292, v30293, v30294, v30295, v30296, v30297, 3, 4) -> f_1920(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30285, v30289, v30290, v30291, v30293, v30294, v30295, v30296, v30297, 3, 4) :|: 0 = 0
f_1920(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30285, v30289, v30290, v30291, v30293, v30294, v30295, v30296, v30297, 3, 4) -> f_1922(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30285, v30289, v30290, v30291, v30293, v30294, v30295, v30296, v30297, 3, 4) :|: v30292 <= v30283
f_1922(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30285, v30289, v30290, v30291, v30293, v30294, v30295, v30296, v30297, 3, 4) -> f_1926(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30285, v30289, v30290, v30291, v30293, v30294, v30295, v30296, v30297, 3, 4) :|: 0 = 0
f_1926(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30285, v30289, v30290, v30291, v30293, v30294, v30295, v30296, v30297, 3, 4) -> f_1929(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30285, v30289, v30290, v30291, v30293, v30294, v30295, v30296, v30297, 3, 4) :|: TRUE
f_1929(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30285, v30289, v30290, v30291, v30293, v30294, v30295, v30296, v30297, 3, 4) -> f_1932(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30285, v30289, v30290, v30291, v30293, v30294, v30295, v30296, v30297, 3, 4) :|: 0 = 0
f_1932(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30285, v30289, v30290, v30291, v30293, v30294, v30295, v30296, v30297, 3, 4) -> f_1934(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30285, v30289, v30290, v30291, v30293, v30294, v30295, v30296, v30297, 3, 4) :|: 0 = 0
f_1934(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30285, v30289, v30290, v30291, v30293, v30294, v30295, v30296, v30297, 3, 4) -> f_1936(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30285, v30289, v30290, v30291, v30293, v30294, v30295, v30296, v30297, 3, 4) :|: 0 = 0
f_1936(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30285, v30289, v30290, v30291, v30293, v30294, v30295, v30296, v30297, 3, 4) -> f_1938(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30285, v30289, v30290, v30291, v30293, v30294, v30295, v30296, v30297, 3, 4) :|: TRUE
f_1938(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30285, v30289, v30290, v30291, v30293, v30294, v30295, v30296, v30297, 3, 4) -> f_1940(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30285, v30289, v30290, v30291, v30293, v30294, v30295, v30296, v30297, 3, 4) :|: 0 = 0
f_1940(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30285, v30289, v30290, v30291, v30293, v30294, v30295, v30296, v30297, 3, 4) -> f_1942(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30285, v30289, v30290, v30291, v30293, v30294, v30295, v30296, v30297, 3, 4) :|: 0 = 0
f_1942(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30285, v30289, v30290, v30291, v30293, v30294, v30295, v30296, v30297, 3, 4) -> f_1944(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30285, v30289, v30290, v30291, v30293, v30294, v30295, v30296, v30297, 3, 4) :|: 0 = 0
f_1944(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30285, v30289, v30290, v30291, v30293, v30294, v30295, v30296, v30297, 3, 4) -> f_1946(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30285, v30289, v30290, v30291, v30293, v30294, v30295, v30296, v30297, 3, 4) :|: TRUE
f_1946(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30285, v30289, v30290, v30291, v30293, v30294, v30295, v30296, v30297, 3, 4) -> f_1948(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30285, v30289, v30290, v30291, v30293, v30294, v30295, v30296, v30297, 3, 4) :|: 0 = 0
f_1948(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30285, v30289, v30290, v30291, v30293, v30294, v30295, v30296, v30297, 3, 4) -> f_1950(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30285, v30289, v30290, v30291, v30293, v30294, v30295, v30296, v30297, 3, 4) :|: 0 = 0
f_1950(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30285, v30289, v30290, v30291, v30293, v30294, v30295, v30296, v30297, 3, 4) -> f_1952(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30285, v30289, v30290, v30291, v30293, v30294, v30295, v30296, v30297, 3, 4) :|: 0 = 0
f_1952(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30285, v30289, v30290, v30291, v30293, v30294, v30295, v30296, v30297, 3, 4) -> f_1954(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30285, v30289, v30290, v30291, v30293, v30294, v30295, v30296, v30297, 3, 4) :|: 0 = 0
f_1954(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30285, v30289, v30290, v30291, v30293, v30294, v30295, v30296, v30297, 3, 4) -> f_1956(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30285, v30289, v30290, v30291, v30293, v30294, v30295, v30296, v30297, 3, 4) :|: TRUE
f_1956(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30285, v30289, v30290, v30291, v30293, v30294, v30295, v30296, v30297, 3, 4) -> f_1958(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30285, v30289, v30290, v30291, v30293, v30294, v30295, v30296, v30297, 3, 4) :|: 0 = 0
f_1958(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30285, v30289, v30290, v30291, v30293, v30294, v30295, v30296, v30297, 3, 4) -> f_1960(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30289, v30290, v30291, v30285, v30293, v30294, v30295, v30296, v30297, 3, 4) :|: 0 = 0
f_1960(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30289, v30290, v30291, v30285, v30293, v30294, v30295, v30296, v30297, 3, 4) -> f_1961(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30289, v30290, v30291, v30285, v30293, v30294, v30295, v30296, v30297, 3, 4) :|: 0 = 0
f_1961(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30289, v30290, v30291, v30285, v30293, v30294, v30295, v30296, v30297, 3, 4) -> f_1962(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30289, v30290, v30291, v30285, v30293, v30294, v30295, v30296, v30297, 3, 4) :|: TRUE
f_1962(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30289, v30290, v30291, v30285, v30293, v30294, v30295, v30296, v30297, 3, 4) -> f_1963(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30289, v30290, v30291, v30285, v30293, v30294, v30295, v30296, v30297, 3, 4) :|: 0 = 0
f_1963(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30289, v30290, v30291, v30285, v30293, v30294, v30295, v30296, v30297, 3, 4) -> f_1964(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30289, v30290, v30291, v30285, v30293, v30294, v30295, v30296, v30297, 3, 4) :|: 0 = 0
f_1964(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30289, v30290, v30291, v30285, v30293, v30294, v30295, v30296, v30297, 3, 4) -> f_1965(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30289, v30290, v30291, v30285, v30293, v30294, v30295, v30296, v30297, 3, 4) :|: 0 = 0
f_1965(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30289, v30290, v30291, v30285, v30293, v30294, v30295, v30296, v30297, 3, 4) -> f_1966(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30289, v30290, v30291, v30285, v30293, v30294, v30295, v30296, v30297, 3, 4) :|: TRUE
f_1966(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30289, v30290, v30291, v30285, v30293, v30294, v30295, v30296, v30297, 3, 4) -> f_1967(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30289, v30290, v30291, v30285, v30293, v30294, v30295, v30296, v30297, 3, 4) :|: 0 = 0
f_1967(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30289, v30290, v30291, v30285, v30293, v30294, v30295, v30296, v30297, 3, 4) -> f_1968(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30289, v30290, v30291, v30285, v30293, v30294, v30295, v30296, v30297, 3, 4) :|: 0 = 0
f_1968(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30289, v30290, v30291, v30285, v30293, v30294, v30295, v30296, v30297, 3, 4) -> f_1969(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30289, v30290, v30291, v30285, v30293, v30294, v30295, v30296, v30297, 3, 4) :|: 0 = 0
f_1969(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30289, v30290, v30291, v30285, v30293, v30294, v30295, v30296, v30297, 3, 4) -> f_1970(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30289, v30290, v30291, v30285, v30293, v30294, v30295, v30296, v30297, 3, 4) :|: TRUE
f_1970(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30289, v30290, v30291, v30285, v30293, v30294, v30295, v30296, v30297, 3, 4) -> f_1971(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30289, v30290, v30291, v30285, v30293, v30294, v30295, v30296, v30297, 3, 4) :|: 0 = 0
f_1971(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30289, v30290, v30291, v30285, v30293, v30294, v30295, v30296, v30297, 3, 4) -> f_1972(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30289, v30290, v30291, v30285, v30293, v30294, v30295, v30296, v30297, 3, 4) :|: 0 = 0
f_1972(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30289, v30290, v30291, v30285, v30293, v30294, v30295, v30296, v30297, 3, 4) -> f_1973(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30289, v30290, v30291, v30285, v30293, v30294, v30295, v30296, v30297, 3, 4) :|: 0 = 0
f_1973(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30289, v30290, v30291, v30285, v30293, v30294, v30295, v30296, v30297, 3, 4) -> f_1974(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30289, v30290, v30291, v30285, v30293, v30294, v30295, v30296, v30297, 3, 4) :|: TRUE
f_1974(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30289, v30290, v30291, v30285, v30293, v30294, v30295, v30296, v30297, 3, 4) -> f_1975(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30289, v30290, v30291, v30293, v30294, v30295, v30296, v30297, 3, 4) :|: 0 = 0
f_1975(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30289, v30290, v30291, v30293, v30294, v30295, v30296, v30297, 3, 4) -> f_1976(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30289, v30290, v30291, v32697, v30293, v30294, v30295, v30296, v30297, 3, 4) :|: v32697 = 1 + v30292
f_1976(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30289, v30290, v30291, v32697, v30293, v30294, v30295, v30296, v30297, 3, 4) -> f_1977(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30289, v30290, v30291, v32697, v30293, v30294, v30295, v30296, v30297, 3, 4) :|: TRUE
f_1977(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30289, v30290, v30291, v32697, v30293, v30294, v30295, v30296, v30297, 3, 4) -> f_1978(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30289, v30290, v30291, v32697, v30293, v30294, v30295, v30296, v30297, 3, 4) :|: TRUE
f_1978(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30289, v30290, v30291, v32697, v30293, v30294, v30295, v30296, v30297, 3, 4) -> f_1912(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30292, 1, v30287, 0, v30289, v30290, v30291, v32697, v30293, v30294, v30295, v30296, v30297, 3, 4) :|: TRUE
f_1912(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30285, 1, v30287, 0, v30289, v30290, v30291, v30292, v30293, v30294, v30295, v30296, v30297, 3, 4) -> f_1914(v30276, v30277, v30278, v30279, v30280, v30281, v30282, v30283, v30284, v30285, 1, v30287, 0, v30289, v30290, v30291, v30292, v30293, v30294, v30295, v30296, v30297, 3, 4) :|: TRUE
Combined rules. Obtained 1 rulesP rules:
f_1914(v30276:0, v30277:0, v30278:0, v30279:0, v30280:0, v30281:0, v30282:0, v30283:0, v30284:0, v30285:0, 1, v30287:0, 0, v30289:0, v30290:0, v30291:0, v30292:0, v30293:0, v30294:0, v30295:0, v30296:0, v30297:0, 3, 4) -> f_1914(v30276:0, v30277:0, v30278:0, v30279:0, v30280:0, v30281:0, v30282:0, v30283:0, v30284:0, v30292:0, 1, v30287:0, 0, v30289:0, v30290:0, v30291:0, 1 + v30292:0, v30293:0, v30294:0, v30295:0, v30296:0, v30297:0, 3, 4) :|: v30292:0 <= v30283:0
Filtered unneeded arguments:
   f_1914(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24) -> f_1914(x8, x17)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1914(v30283:0, v30292:0) -> f_1914(v30283:0, 1 + v30292:0) :|: v30292:0 <= v30283:0

----------------------------------------

(9)
Obligation:
Rules:
f_1914(v30283:0, v30292:0) -> f_1914(v30283:0, 1 + v30292:0) :|: v30292:0 <= v30283:0

----------------------------------------

(10) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_1914(x, x1)] = x - x1

The following rules are decreasing:
f_1914(v30283:0, v30292:0) -> f_1914(v30283:0, 1 + v30292:0) :|: v30292:0 <= v30283:0
The following rules are bounded:
f_1914(v30283:0, v30292:0) -> f_1914(v30283:0, 1 + v30292:0) :|: v30292:0 <= v30283:0

----------------------------------------

(11)
YES

----------------------------------------

(12)
Obligation:
SCC
----------------------------------------

(13) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 44 rulesP rules:
f_1775(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25390, v25391, v25392, v25393, v25394, v25395, v25396, 3, 4) -> f_1780(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25390, v25391, v25392, v25393, v25394, v25395, v25396, 3, 4) :|: 0 = 0
f_1780(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25390, v25391, v25392, v25393, v25394, v25395, v25396, 3, 4) -> f_1786(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25390, v25391, v25392, v25393, v25394, v25395, v25396, 3, 4) :|: 0 = 0
f_1786(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25390, v25391, v25392, v25393, v25394, v25395, v25396, 3, 4) -> f_1792(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25390, v25391, v25392, v25393, v25394, v25395, v25396, 3, 4) :|: 0 = 0
f_1792(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25390, v25391, v25392, v25393, v25394, v25395, v25396, 3, 4) -> f_1798(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25390, v25391, v25392, v25393, v25394, v25395, v25396, 3, 4) :|: TRUE
f_1798(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25390, v25391, v25392, v25393, v25394, v25395, v25396, 3, 4) -> f_1804(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25390, v25391, v25392, v25393, v25394, v25395, v25396, 3, 4) :|: 0 = 0
f_1804(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25390, v25391, v25392, v25393, v25394, v25395, v25396, 3, 4) -> f_1810(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25390, v25391, v25392, v25393, v25394, v25395, v25396, 3, 4) :|: 0 = 0
f_1810(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25390, v25391, v25392, v25393, v25394, v25395, v25396, 3, 4) -> f_1815(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25390, v25391, v25392, v25393, v25394, v25395, v25396, 3, 4) :|: 0 = 0
f_1815(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25390, v25391, v25392, v25393, v25394, v25395, v25396, 3, 4) -> f_1820(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25390, v25391, v25392, v25393, v25394, v25395, v25396, 3, 4) :|: TRUE
f_1820(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25390, v25391, v25392, v25393, v25394, v25395, v25396, 3, 4) -> f_1825(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25390, v25391, v25392, v25393, v25394, v25395, v25396, 3, 4) :|: 0 = 0
f_1825(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25390, v25391, v25392, v25393, v25394, v25395, v25396, 3, 4) -> f_1830(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25390, v25391, v25392, v25393, v25394, v25395, v25396, 3, 4) :|: 0 = 0
f_1830(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25390, v25391, v25392, v25393, v25394, v25395, v25396, 3, 4) -> f_1835(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25390, v25391, v25392, v25393, v25394, v25395, v25396, 3, 4) :|: 0 = 0
f_1835(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25390, v25391, v25392, v25393, v25394, v25395, v25396, 3, 4) -> f_1840(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25390, v25391, v25392, v25393, v25394, v25395, v25396, 3, 4) :|: TRUE
f_1840(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25390, v25391, v25392, v25393, v25394, v25395, v25396, 3, 4) -> f_1845(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25390, v25391, v25392, v25393, v25394, v25395, v25396, 3, 4) :|: 0 = 0
f_1845(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25390, v25391, v25392, v25393, v25394, v25395, v25396, 3, 4) -> f_1850(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v25390, v25392, v25393, v25394, v25395, v25396, 3, 4) :|: 0 = 0
f_1850(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v25390, v25392, v25393, v25394, v25395, v25396, 3, 4) -> f_1855(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v25390, v25392, v25393, v25394, v25395, v25396, 3, 4) :|: v25391 <= v25384
f_1855(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v25390, v25392, v25393, v25394, v25395, v25396, 3, 4) -> f_1860(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v25390, v25392, v25393, v25394, v25395, v25396, 3, 4) :|: 0 = 0
f_1860(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v25390, v25392, v25393, v25394, v25395, v25396, 3, 4) -> f_1865(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v25390, v25392, v25393, v25394, v25395, v25396, 3, 4) :|: 0 = 0
f_1865(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v25390, v25392, v25393, v25394, v25395, v25396, 3, 4) -> f_1870(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v25390, v25392, v25393, v25394, v25395, v25396, 3, 4) :|: 0 = 0
f_1870(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v25390, v25392, v25393, v25394, v25395, v25396, 3, 4) -> f_1874(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v25390, v25392, v25393, v25394, v25395, v25396, 3, 4) :|: TRUE
f_1874(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v25390, v25392, v25393, v25394, v25395, v25396, 3, 4) -> f_1878(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v25390, v25392, v25393, v25394, v25395, v25396, 3, 4) :|: 0 = 0
f_1878(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v25390, v25392, v25393, v25394, v25395, v25396, 3, 4) -> f_1881(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v25390, v25392, v25393, v25394, v25395, v25396, 3, 4) :|: 0 = 0
f_1881(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v25390, v25392, v25393, v25394, v25395, v25396, 3, 4) -> f_1884(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v25390, v25392, v25393, v25394, v25395, v25396, 3, 4) :|: 0 = 0
f_1884(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v25390, v25392, v25393, v25394, v25395, v25396, 3, 4) -> f_1887(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v25390, v25392, v25393, v25394, v25395, v25396, 3, 4) :|: TRUE
f_1887(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v25390, v25392, v25393, v25394, v25395, v25396, 3, 4) -> f_1890(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v25390, v25392, v25393, v25394, v25395, v25396, 3, 4) :|: 0 = 0
f_1890(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v25390, v25392, v25393, v25394, v25395, v25396, 3, 4) -> f_1893(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v25390, v25392, v25393, v25394, v25395, v25396, 3, 4) :|: 0 = 0
f_1893(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v25390, v25392, v25393, v25394, v25395, v25396, 3, 4) -> f_1896(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v25390, v25392, v25393, v25394, v25395, v25396, 3, 4) :|: 0 = 0
f_1896(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v25390, v25392, v25393, v25394, v25395, v25396, 3, 4) -> f_1898(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v25390, v25392, v25393, v25394, v25395, v25396, 3, 4) :|: TRUE
f_1898(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v25390, v25392, v25393, v25394, v25395, v25396, 3, 4) -> f_1900(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v25390, v25392, v25393, v25394, v25395, v25396, 3, 4) :|: 0 = 0
f_1900(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v25390, v25392, v25393, v25394, v25395, v25396, 3, 4) -> f_1902(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v25390, v25392, v25393, v25394, v25395, v25396, 3, 4) :|: 0 = 0
f_1902(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v25390, v25392, v25393, v25394, v25395, v25396, 3, 4) -> f_1904(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v25390, v25392, v25393, v25394, v25395, v25396, 3, 4) :|: 0 = 0
f_1904(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v25390, v25392, v25393, v25394, v25395, v25396, 3, 4) -> f_1906(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v25390, v25392, v25393, v25394, v25395, v25396, 3, 4) :|: TRUE
f_1906(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v25390, v25392, v25393, v25394, v25395, v25396, 3, 4) -> f_1908(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v25390, v25392, v25393, v25394, v25395, v25396, 3, 4) :|: 0 = 0
f_1908(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v25390, v25392, v25393, v25394, v25395, v25396, 3, 4) -> f_1910(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v25390, v25392, v25393, v25394, v25395, v25396, 3, 4) :|: 0 = 0
f_1910(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v25390, v25392, v25393, v25394, v25395, v25396, 3, 4) -> f_1913(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v25390, v25392, v25393, v25394, v25395, v25396, 3, 4) :|: 0 = 0
f_1913(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v25390, v25392, v25393, v25394, v25395, v25396, 3, 4) -> f_1915(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v25390, v25392, v25393, v25394, v25395, v25396, 3, 4) :|: TRUE
f_1915(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v25390, v25392, v25393, v25394, v25395, v25396, 3, 4) -> f_1917(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v25392, v25393, v25394, v25395, v25396, 3, 4) :|: 0 = 0
f_1917(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v25392, v25393, v25394, v25395, v25396, 3, 4) -> f_1919(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v30591, v25392, v25393, v25394, v25395, v25396, 3, 4) :|: v30591 = 1 + v25391
f_1919(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v30591, v25392, v25393, v25394, v25395, v25396, 3, 4) -> f_1921(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v30591, v25392, v25393, v25394, v25395, v25396, 3, 4) :|: TRUE
f_1921(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v30591, v25392, v25393, v25394, v25395, v25396, 3, 4) -> f_1924(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v30591, v25392, v25393, v25394, v25395, v25396, 3, 4) :|: TRUE
f_1924(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v30591, v25392, v25393, v25394, v25395, v25396, 3, 4) -> f_1925(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25391, v30591, v25392, v25393, v25394, v25395, v25396, 3, 4) :|: TRUE
f_1925(v30643, v30644, v30645, v30646, v30647, v30648, v30649, v30650, v30651, v30652, 0, v30654, 1, v30656, v30657, v30658, v30659, v30660, v30661, v30662, v30663, 3, 4) -> f_1928(v30643, v30644, v30645, v30646, v30647, v30648, v30649, v30650, v30651, v30652, 0, v30654, 1, v30656, v30657, v30658, v30659, v30660, v30661, v30662, v30663, 3, 4) :|: TRUE
f_1928(v30643, v30644, v30645, v30646, v30647, v30648, v30649, v30650, v30651, v30652, 0, v30654, 1, v30656, v30657, v30658, v30659, v30660, v30661, v30662, v30663, 3, 4) -> f_1931(v30643, v30644, v30645, v30646, v30647, v30648, v30649, v30650, v30651, v30652, 0, v30654, 1, v30656, v30657, v30658, v30659, v30660, v30661, v30662, v30663, 3, 4) :|: TRUE
f_1931(v30643, v30644, v30645, v30646, v30647, v30648, v30649, v30650, v30651, v30652, 0, v30654, 1, v30656, v30657, v30658, v30659, v30660, v30661, v30662, v30663, 3, 4) -> f_1770(v30643, v30644, v30645, v30646, v30647, v30648, v30649, v30650, v30651, v30652, 0, v30654, 1, v30656, v30657, v30658, v30659, v30660, v30661, v30662, v30663, 3, 4) :|: TRUE
f_1770(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25390, v25391, v25392, v25393, v25394, v25395, v25396, 3, 4) -> f_1775(v25376, v25377, v25378, v25379, v25380, v25381, v25382, v25383, v25384, v25385, 0, v25387, 1, v25389, v25390, v25391, v25392, v25393, v25394, v25395, v25396, 3, 4) :|: TRUE
Combined rules. Obtained 1 rulesP rules:
f_1775(v25376:0, v25377:0, v25378:0, v25379:0, v25380:0, v25381:0, v25382:0, v25383:0, v25384:0, v25385:0, 0, v25387:0, 1, v25389:0, v25390:0, v25391:0, v25392:0, v25393:0, v25394:0, v25395:0, v25396:0, 3, 4) -> f_1775(v25376:0, v25377:0, v25378:0, v25379:0, v25380:0, v25381:0, v25382:0, v25383:0, v25384:0, v25385:0, 0, v25387:0, 1, v25389:0, v25391:0, 1 + v25391:0, v25392:0, v25393:0, v25394:0, v25395:0, v25396:0, 3, 4) :|: v25391:0 <= v25384:0
Filtered unneeded arguments:
   f_1775(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23) -> f_1775(x9, x16)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1775(v25384:0, v25391:0) -> f_1775(v25384:0, 1 + v25391:0) :|: v25391:0 <= v25384:0

----------------------------------------

(14)
Obligation:
Rules:
f_1775(v25384:0, v25391:0) -> f_1775(v25384:0, 1 + v25391:0) :|: v25391:0 <= v25384:0

----------------------------------------

(15) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_1775 ] = -1*f_1775_2 + f_1775_1

The following rules are decreasing:
f_1775(v25384:0, v25391:0) -> f_1775(v25384:0, 1 + v25391:0) :|: v25391:0 <= v25384:0

The following rules are bounded:
f_1775(v25384:0, v25391:0) -> f_1775(v25384:0, 1 + v25391:0) :|: v25391:0 <= v25384:0


----------------------------------------

(16)
YES

----------------------------------------

(17)
Obligation:
SCC
----------------------------------------

(18) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 43 rulesP rules:
f_1692(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22703, v22704, v22705, v22706, v22707, v22708, v22709, 3, 4) -> f_1697(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22703, v22704, v22705, v22706, v22707, v22708, v22709, 3, 4) :|: TRUE
f_1697(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22703, v22704, v22705, v22706, v22707, v22708, v22709, 3, 4) -> f_1702(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22703, v22704, v22705, v22706, v22707, v22708, v22709, 3, 4) :|: TRUE
f_1702(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22703, v22704, v22705, v22706, v22707, v22708, v22709, 3, 4) -> f_1707(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22703, v22704, v22705, v22706, v22707, v22708, v22709, 3, 4) :|: 0 = 0
f_1707(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22703, v22704, v22705, v22706, v22707, v22708, v22709, 3, 4) -> f_1712(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22703, v22704, v22705, v22706, v22707, v22708, v22709, 3, 4) :|: 0 = 0
f_1712(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22703, v22704, v22705, v22706, v22707, v22708, v22709, 3, 4) -> f_1717(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22703, v22704, v22705, v22706, v22707, v22708, v22709, 3, 4) :|: 0 = 0
f_1717(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22703, v22704, v22705, v22706, v22707, v22708, v22709, 3, 4) -> f_1722(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22703, v22704, v22705, v22706, v22707, v22708, v22709, 3, 4) :|: TRUE
f_1722(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22703, v22704, v22705, v22706, v22707, v22708, v22709, 3, 4) -> f_1727(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22703, v22704, v22705, v22706, v22707, v22708, v22709, 3, 4) :|: 0 = 0
f_1727(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22703, v22704, v22705, v22706, v22707, v22708, v22709, 3, 4) -> f_1732(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22703, v22704, v22705, v22706, v22707, v22708, v22709, 3, 4) :|: 0 = 0
f_1732(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22703, v22704, v22705, v22706, v22707, v22708, v22709, 3, 4) -> f_1737(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22703, v22704, v22705, v22706, v22707, v22708, v22709, 3, 4) :|: 0 = 0
f_1737(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22703, v22704, v22705, v22706, v22707, v22708, v22709, 3, 4) -> f_1743(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22703, v22704, v22705, v22706, v22707, v22708, v22709, 3, 4) :|: TRUE
f_1743(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22703, v22704, v22705, v22706, v22707, v22708, v22709, 3, 4) -> f_1748(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22703, v22704, v22705, v22706, v22707, v22708, v22709, 3, 4) :|: 0 = 0
f_1748(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22703, v22704, v22705, v22706, v22707, v22708, v22709, 3, 4) -> f_1753(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22703, v22704, v22705, v22706, v22707, v22708, v22709, 3, 4) :|: 0 = 0
f_1753(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22703, v22704, v22705, v22706, v22707, v22708, v22709, 3, 4) -> f_1759(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22703, v22704, v22705, v22706, v22707, v22708, v22709, 3, 4) :|: 0 = 0
f_1759(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22703, v22704, v22705, v22706, v22707, v22708, v22709, 3, 4) -> f_1764(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22703, v22704, v22705, v22706, v22707, v22708, v22709, 3, 4) :|: TRUE
f_1764(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22703, v22704, v22705, v22706, v22707, v22708, v22709, 3, 4) -> f_1771(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22703, v22704, v22705, v22706, v22707, v22708, v22709, 3, 4) :|: 0 = 0
f_1771(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22703, v22704, v22705, v22706, v22707, v22708, v22709, 3, 4) -> f_1776(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v22703, v22705, v22706, v22707, v22708, v22709, 3, 4) :|: 0 = 0
f_1776(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v22703, v22705, v22706, v22707, v22708, v22709, 3, 4) -> f_1781(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v22703, v22705, v22706, v22707, v22708, v22709, 3, 4) :|: v22704 <= v22699
f_1781(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v22703, v22705, v22706, v22707, v22708, v22709, 3, 4) -> f_1787(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v22703, v22705, v22706, v22707, v22708, v22709, 3, 4) :|: 0 = 0
f_1787(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v22703, v22705, v22706, v22707, v22708, v22709, 3, 4) -> f_1793(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v22703, v22705, v22706, v22707, v22708, v22709, 3, 4) :|: 0 = 0
f_1793(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v22703, v22705, v22706, v22707, v22708, v22709, 3, 4) -> f_1799(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v22703, v22705, v22706, v22707, v22708, v22709, 3, 4) :|: 0 = 0
f_1799(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v22703, v22705, v22706, v22707, v22708, v22709, 3, 4) -> f_1805(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v22703, v22705, v22706, v22707, v22708, v22709, 3, 4) :|: TRUE
f_1805(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v22703, v22705, v22706, v22707, v22708, v22709, 3, 4) -> f_1811(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v22703, v22705, v22706, v22707, v22708, v22709, 3, 4) :|: 0 = 0
f_1811(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v22703, v22705, v22706, v22707, v22708, v22709, 3, 4) -> f_1816(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v22703, v22705, v22706, v22707, v22708, v22709, 3, 4) :|: 0 = 0
f_1816(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v22703, v22705, v22706, v22707, v22708, v22709, 3, 4) -> f_1821(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v22703, v22705, v22706, v22707, v22708, v22709, 3, 4) :|: 0 = 0
f_1821(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v22703, v22705, v22706, v22707, v22708, v22709, 3, 4) -> f_1826(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v22703, v22705, v22706, v22707, v22708, v22709, 3, 4) :|: TRUE
f_1826(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v22703, v22705, v22706, v22707, v22708, v22709, 3, 4) -> f_1831(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v22703, v22705, v22706, v22707, v22708, v22709, 3, 4) :|: 0 = 0
f_1831(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v22703, v22705, v22706, v22707, v22708, v22709, 3, 4) -> f_1836(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v22703, v22705, v22706, v22707, v22708, v22709, 3, 4) :|: 0 = 0
f_1836(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v22703, v22705, v22706, v22707, v22708, v22709, 3, 4) -> f_1841(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v22703, v22705, v22706, v22707, v22708, v22709, 3, 4) :|: 0 = 0
f_1841(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v22703, v22705, v22706, v22707, v22708, v22709, 3, 4) -> f_1846(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v22703, v22705, v22706, v22707, v22708, v22709, 3, 4) :|: TRUE
f_1846(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v22703, v22705, v22706, v22707, v22708, v22709, 3, 4) -> f_1851(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v22703, v22705, v22706, v22707, v22708, v22709, 3, 4) :|: 0 = 0
f_1851(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v22703, v22705, v22706, v22707, v22708, v22709, 3, 4) -> f_1857(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v22703, v22705, v22706, v22707, v22708, v22709, 3, 4) :|: 0 = 0
f_1857(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v22703, v22705, v22706, v22707, v22708, v22709, 3, 4) -> f_1862(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v22703, v22705, v22706, v22707, v22708, v22709, 3, 4) :|: 0 = 0
f_1862(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v22703, v22705, v22706, v22707, v22708, v22709, 3, 4) -> f_1867(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v22703, v22705, v22706, v22707, v22708, v22709, 3, 4) :|: TRUE
f_1867(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v22703, v22705, v22706, v22707, v22708, v22709, 3, 4) -> f_1872(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v22703, v22705, v22706, v22707, v22708, v22709, 3, 4) :|: 0 = 0
f_1872(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v22703, v22705, v22706, v22707, v22708, v22709, 3, 4) -> f_1876(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v22703, v22705, v22706, v22707, v22708, v22709, 3, 4) :|: 0 = 0
f_1876(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v22703, v22705, v22706, v22707, v22708, v22709, 3, 4) -> f_1879(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v22703, v22705, v22706, v22707, v22708, v22709, 3, 4) :|: 0 = 0
f_1879(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v22703, v22705, v22706, v22707, v22708, v22709, 3, 4) -> f_1882(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v22703, v22705, v22706, v22707, v22708, v22709, 3, 4) :|: TRUE
f_1882(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v22703, v22705, v22706, v22707, v22708, v22709, 3, 4) -> f_1885(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v22705, v22706, v22707, v22708, v22709, 3, 4) :|: 0 = 0
f_1885(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v22705, v22706, v22707, v22708, v22709, 3, 4) -> f_1888(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v29934, v22705, v22706, v22707, v22708, v22709, 3, 4) :|: v29934 = 1 + v22704
f_1888(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v29934, v22705, v22706, v22707, v22708, v22709, 3, 4) -> f_1891(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v29934, v22705, v22706, v22707, v22708, v22709, 3, 4) :|: TRUE
f_1891(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v29934, v22705, v22706, v22707, v22708, v22709, 3, 4) -> f_1894(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v29934, v22705, v22706, v22707, v22708, v22709, 3, 4) :|: TRUE
f_1894(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v29934, v22705, v22706, v22707, v22708, v22709, 3, 4) -> f_1687(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22704, v29934, v22705, v22706, v22707, v22708, v22709, 3, 4) :|: TRUE
f_1687(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22703, v22704, v22705, v22706, v22707, v22708, v22709, 3, 4) -> f_1692(v22691, v22692, v22693, v22694, v22695, v22696, v22697, v22698, v22699, v22700, 0, 1, v22703, v22704, v22705, v22706, v22707, v22708, v22709, 3, 4) :|: TRUE
Combined rules. Obtained 1 rulesP rules:
f_1692(v22691:0, v22692:0, v22693:0, v22694:0, v22695:0, v22696:0, v22697:0, v22698:0, v22699:0, v22700:0, 0, 1, v22703:0, v22704:0, v22705:0, v22706:0, v22707:0, v22708:0, v22709:0, 3, 4) -> f_1692(v22691:0, v22692:0, v22693:0, v22694:0, v22695:0, v22696:0, v22697:0, v22698:0, v22699:0, v22700:0, 0, 1, v22704:0, 1 + v22704:0, v22705:0, v22706:0, v22707:0, v22708:0, v22709:0, 3, 4) :|: v22704:0 <= v22699:0
Filtered unneeded arguments:
   f_1692(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21) -> f_1692(x9, x14)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1692(v22699:0, v22704:0) -> f_1692(v22699:0, 1 + v22704:0) :|: v22704:0 <= v22699:0

----------------------------------------

(19)
Obligation:
Rules:
f_1692(v22699:0, v22704:0) -> f_1692(v22699:0, 1 + v22704:0) :|: v22704:0 <= v22699:0

----------------------------------------

(20) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_1692 ] = -1*f_1692_2 + f_1692_1

The following rules are decreasing:
f_1692(v22699:0, v22704:0) -> f_1692(v22699:0, 1 + v22704:0) :|: v22704:0 <= v22699:0

The following rules are bounded:
f_1692(v22699:0, v22704:0) -> f_1692(v22699:0, 1 + v22704:0) :|: v22704:0 <= v22699:0


----------------------------------------

(21)
YES

----------------------------------------

(22)
Obligation:
SCC
----------------------------------------

(23) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 41 rulesP rules:
f_1666(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22018, 1, v22020, 0, v22022, v22023, v22024, v22025, v22026, v22027, v22028, 3, 4) -> f_1670(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22018, 1, v22020, 0, v22022, v22023, v22024, v22025, v22026, v22027, v22028, 3, 4) :|: TRUE
f_1670(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22018, 1, v22020, 0, v22022, v22023, v22024, v22025, v22026, v22027, v22028, 3, 4) -> f_1674(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22018, 1, v22020, 0, v22022, v22023, v22024, v22025, v22026, v22027, v22028, 3, 4) :|: 0 = 0
f_1674(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22018, 1, v22020, 0, v22022, v22023, v22024, v22025, v22026, v22027, v22028, 3, 4) -> f_1678(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22018, v22022, v22024, v22025, v22026, v22027, v22028, 3, 4) :|: 0 = 0
f_1678(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22018, v22022, v22024, v22025, v22026, v22027, v22028, 3, 4) -> f_1682(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22018, v22022, v22024, v22025, v22026, v22027, v22028, 3, 4) :|: v22023 <= v22016
f_1682(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22018, v22022, v22024, v22025, v22026, v22027, v22028, 3, 4) -> f_1688(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22018, v22022, v22024, v22025, v22026, v22027, v22028, 3, 4) :|: 0 = 0
f_1688(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22018, v22022, v22024, v22025, v22026, v22027, v22028, 3, 4) -> f_1693(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22018, v22022, v22024, v22025, v22026, v22027, v22028, 3, 4) :|: TRUE
f_1693(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22018, v22022, v22024, v22025, v22026, v22027, v22028, 3, 4) -> f_1698(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22018, v22022, v22024, v22025, v22026, v22027, v22028, 3, 4) :|: 0 = 0
f_1698(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22018, v22022, v22024, v22025, v22026, v22027, v22028, 3, 4) -> f_1703(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22018, v22022, v22024, v22025, v22026, v22027, v22028, 3, 4) :|: 0 = 0
f_1703(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22018, v22022, v22024, v22025, v22026, v22027, v22028, 3, 4) -> f_1708(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22018, v22022, v22024, v22025, v22026, v22027, v22028, 3, 4) :|: 0 = 0
f_1708(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22018, v22022, v22024, v22025, v22026, v22027, v22028, 3, 4) -> f_1713(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22018, v22022, v22024, v22025, v22026, v22027, v22028, 3, 4) :|: TRUE
f_1713(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22018, v22022, v22024, v22025, v22026, v22027, v22028, 3, 4) -> f_1718(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22018, v22022, v22024, v22025, v22026, v22027, v22028, 3, 4) :|: 0 = 0
f_1718(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22018, v22022, v22024, v22025, v22026, v22027, v22028, 3, 4) -> f_1723(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22018, v22022, v22024, v22025, v22026, v22027, v22028, 3, 4) :|: 0 = 0
f_1723(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22018, v22022, v22024, v22025, v22026, v22027, v22028, 3, 4) -> f_1728(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22018, v22022, v22024, v22025, v22026, v22027, v22028, 3, 4) :|: 0 = 0
f_1728(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22018, v22022, v22024, v22025, v22026, v22027, v22028, 3, 4) -> f_1733(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22018, v22022, v22024, v22025, v22026, v22027, v22028, 3, 4) :|: TRUE
f_1733(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22018, v22022, v22024, v22025, v22026, v22027, v22028, 3, 4) -> f_1738(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22018, v22022, v22024, v22025, v22026, v22027, v22028, 3, 4) :|: 0 = 0
f_1738(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22018, v22022, v22024, v22025, v22026, v22027, v22028, 3, 4) -> f_1744(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22018, v22022, v22024, v22025, v22026, v22027, v22028, 3, 4) :|: 0 = 0
f_1744(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22018, v22022, v22024, v22025, v22026, v22027, v22028, 3, 4) -> f_1749(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22018, v22022, v22024, v22025, v22026, v22027, v22028, 3, 4) :|: 0 = 0
f_1749(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22018, v22022, v22024, v22025, v22026, v22027, v22028, 3, 4) -> f_1754(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22018, v22022, v22024, v22025, v22026, v22027, v22028, 3, 4) :|: 0 = 0
f_1754(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22018, v22022, v22024, v22025, v22026, v22027, v22028, 3, 4) -> f_1760(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22018, v22022, v22024, v22025, v22026, v22027, v22028, 3, 4) :|: TRUE
f_1760(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22018, v22022, v22024, v22025, v22026, v22027, v22028, 3, 4) -> f_1765(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22018, v22022, v22024, v22025, v22026, v22027, v22028, 3, 4) :|: 0 = 0
f_1765(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22018, v22022, v22024, v22025, v22026, v22027, v22028, 3, 4) -> f_1772(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22022, v22018, v22024, v22025, v22026, v22027, v22028, 3, 4) :|: 0 = 0
f_1772(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22022, v22018, v22024, v22025, v22026, v22027, v22028, 3, 4) -> f_1777(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22022, v22018, v22024, v22025, v22026, v22027, v22028, 3, 4) :|: 0 = 0
f_1777(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22022, v22018, v22024, v22025, v22026, v22027, v22028, 3, 4) -> f_1783(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22022, v22018, v22024, v22025, v22026, v22027, v22028, 3, 4) :|: TRUE
f_1783(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22022, v22018, v22024, v22025, v22026, v22027, v22028, 3, 4) -> f_1789(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22022, v22018, v22024, v22025, v22026, v22027, v22028, 3, 4) :|: 0 = 0
f_1789(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22022, v22018, v22024, v22025, v22026, v22027, v22028, 3, 4) -> f_1795(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22022, v22018, v22024, v22025, v22026, v22027, v22028, 3, 4) :|: 0 = 0
f_1795(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22022, v22018, v22024, v22025, v22026, v22027, v22028, 3, 4) -> f_1801(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22022, v22018, v22024, v22025, v22026, v22027, v22028, 3, 4) :|: 0 = 0
f_1801(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22022, v22018, v22024, v22025, v22026, v22027, v22028, 3, 4) -> f_1807(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22022, v22018, v22024, v22025, v22026, v22027, v22028, 3, 4) :|: TRUE
f_1807(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22022, v22018, v22024, v22025, v22026, v22027, v22028, 3, 4) -> f_1812(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22022, v22018, v22024, v22025, v22026, v22027, v22028, 3, 4) :|: 0 = 0
f_1812(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22022, v22018, v22024, v22025, v22026, v22027, v22028, 3, 4) -> f_1817(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22022, v22018, v22024, v22025, v22026, v22027, v22028, 3, 4) :|: 0 = 0
f_1817(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22022, v22018, v22024, v22025, v22026, v22027, v22028, 3, 4) -> f_1822(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22022, v22018, v22024, v22025, v22026, v22027, v22028, 3, 4) :|: 0 = 0
f_1822(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22022, v22018, v22024, v22025, v22026, v22027, v22028, 3, 4) -> f_1827(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22022, v22018, v22024, v22025, v22026, v22027, v22028, 3, 4) :|: TRUE
f_1827(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22022, v22018, v22024, v22025, v22026, v22027, v22028, 3, 4) -> f_1832(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22022, v22018, v22024, v22025, v22026, v22027, v22028, 3, 4) :|: 0 = 0
f_1832(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22022, v22018, v22024, v22025, v22026, v22027, v22028, 3, 4) -> f_1837(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22022, v22018, v22024, v22025, v22026, v22027, v22028, 3, 4) :|: 0 = 0
f_1837(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22022, v22018, v22024, v22025, v22026, v22027, v22028, 3, 4) -> f_1842(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22022, v22018, v22024, v22025, v22026, v22027, v22028, 3, 4) :|: 0 = 0
f_1842(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22022, v22018, v22024, v22025, v22026, v22027, v22028, 3, 4) -> f_1847(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22022, v22018, v22024, v22025, v22026, v22027, v22028, 3, 4) :|: TRUE
f_1847(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22022, v22018, v22024, v22025, v22026, v22027, v22028, 3, 4) -> f_1852(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22022, v22024, v22025, v22026, v22027, v22028, 3, 4) :|: 0 = 0
f_1852(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22022, v22024, v22025, v22026, v22027, v22028, 3, 4) -> f_1858(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22022, v28412, v22024, v22025, v22026, v22027, v22028, 3, 4) :|: v28412 = 1 + v22023
f_1858(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22022, v28412, v22024, v22025, v22026, v22027, v22028, 3, 4) -> f_1863(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22022, v28412, v22024, v22025, v22026, v22027, v22028, 3, 4) :|: TRUE
f_1863(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22022, v28412, v22024, v22025, v22026, v22027, v22028, 3, 4) -> f_1868(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22022, v28412, v22024, v22025, v22026, v22027, v22028, 3, 4) :|: TRUE
f_1868(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22022, v28412, v22024, v22025, v22026, v22027, v22028, 3, 4) -> f_1662(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22023, 1, v22020, 0, v22022, v28412, v22024, v22025, v22026, v22027, v22028, 3, 4) :|: TRUE
f_1662(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22018, 1, v22020, 0, v22022, v22023, v22024, v22025, v22026, v22027, v22028, 3, 4) -> f_1666(v22009, v22010, v22011, v22012, v22013, v22014, v22015, v22016, v22017, v22018, 1, v22020, 0, v22022, v22023, v22024, v22025, v22026, v22027, v22028, 3, 4) :|: TRUE
Combined rules. Obtained 1 rulesP rules:
f_1666(v22009:0, v22010:0, v22011:0, v22012:0, v22013:0, v22014:0, v22015:0, v22016:0, v22017:0, v22018:0, 1, v22020:0, 0, v22022:0, v22023:0, v22024:0, v22025:0, v22026:0, v22027:0, v22028:0, 3, 4) -> f_1666(v22009:0, v22010:0, v22011:0, v22012:0, v22013:0, v22014:0, v22015:0, v22016:0, v22017:0, v22023:0, 1, v22020:0, 0, v22022:0, 1 + v22023:0, v22024:0, v22025:0, v22026:0, v22027:0, v22028:0, 3, 4) :|: v22023:0 <= v22016:0
Filtered unneeded arguments:
   f_1666(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22) -> f_1666(x8, x15)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1666(v22016:0, v22023:0) -> f_1666(v22016:0, 1 + v22023:0) :|: v22023:0 <= v22016:0

----------------------------------------

(24)
Obligation:
Rules:
f_1666(v22016:0, v22023:0) -> f_1666(v22016:0, 1 + v22023:0) :|: v22023:0 <= v22016:0

----------------------------------------

(25) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_1666(x, x1)] = x - x1

The following rules are decreasing:
f_1666(v22016:0, v22023:0) -> f_1666(v22016:0, 1 + v22023:0) :|: v22023:0 <= v22016:0
The following rules are bounded:
f_1666(v22016:0, v22023:0) -> f_1666(v22016:0, 1 + v22023:0) :|: v22023:0 <= v22016:0

----------------------------------------

(26)
YES

----------------------------------------

(27)
Obligation:
SCC
----------------------------------------

(28) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 67 rulesP rules:
f_1170(v7425, v7426, v7427, v7428, v7429, v7430, v7431, v7432, v7433, v7434, 1, v7436, v7437, v7439, v7440, v7441, v7442, v7443, v7444, 0, 3, 4) -> f_1180(v7425, v7426, v7427, v7428, v7429, v7430, v7431, v7432, v7433, v7434, 1, v7436, v7437, v7700, v7439, v7440, v7441, v7442, v7443, v7444, 0, 3, 4) :|: v7700 = 1 + v7436
f_1180(v7425, v7426, v7427, v7428, v7429, v7430, v7431, v7432, v7433, v7434, 1, v7436, v7437, v7700, v7439, v7440, v7441, v7442, v7443, v7444, 0, 3, 4) -> f_1190(v7425, v7426, v7427, v7428, v7429, v7430, v7431, v7432, v7433, v7434, 1, v7436, v7437, v7700, v7439, v7440, v7441, v7442, v7443, v7444, 0, 3, 4) :|: TRUE
f_1190(v7425, v7426, v7427, v7428, v7429, v7430, v7431, v7432, v7433, v7434, 1, v7436, v7437, v7700, v7439, v7440, v7441, v7442, v7443, v7444, 0, 3, 4) -> f_1200(v7425, v7426, v7427, v7428, v7429, v7430, v7431, v7432, v7433, v7434, 1, v7436, v7437, v7700, v7439, v7440, v7441, v7442, v7443, v7444, 0, 3, 4) :|: TRUE
f_1200(v7425, v7426, v7427, v7428, v7429, v7430, v7431, v7432, v7433, v7434, 1, v7436, v7437, v7700, v7439, v7440, v7441, v7442, v7443, v7444, 0, 3, 4) -> f_1201(v7425, v7426, v7427, v7428, v7429, v7430, v7431, v7432, v7433, v7434, 1, v7436, v7437, v7439, v7700, v7440, v7441, v7442, v7443, v7444, 0, 3, 4) :|: TRUE
f_1201(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7974, v7975, v7976, v7977, v7978, v7979, v7980, v7981, v7982, 0, 3, 4) -> f_1210(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7974, v7975, v7976, v7977, v7978, v7979, v7980, v7981, v7982, 0, 3, 4) :|: TRUE
f_1210(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7974, v7975, v7976, v7977, v7978, v7979, v7980, v7981, v7982, 0, 3, 4) -> f_1219(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7974, v7975, v7976, v7977, v7978, v7979, v7980, v7981, v7982, 0, 3, 4) :|: TRUE
f_1219(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7974, v7975, v7976, v7977, v7978, v7979, v7980, v7981, v7982, 0, 3, 4) -> f_1227(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7974, v7975, v7976, v7977, v7978, v7979, v7980, v7981, v7982, 0, 3, 4) :|: 0 = 0
f_1227(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7974, v7975, v7976, v7977, v7978, v7979, v7980, v7981, v7982, 0, 3, 4) -> f_1237(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7974, v7975, v7976, v7977, v7978, v7979, v7980, v7981, v7982, 0, 3, 4) :|: 0 = 0
f_1237(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7974, v7975, v7976, v7977, v7978, v7979, v7980, v7981, v7982, 0, 3, 4) -> f_1247(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7974, v7975, v7976, v7977, v7978, v7979, v7980, v7981, v7982, 0, 3, 4) :|: 0 = 0
f_1247(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7974, v7975, v7976, v7977, v7978, v7979, v7980, v7981, v7982, 0, 3, 4) -> f_1257(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7974, v7975, v7976, v7977, v7978, v7979, v7980, v7981, v7982, 0, 3, 4) :|: TRUE
f_1257(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7974, v7975, v7976, v7977, v7978, v7979, v7980, v7981, v7982, 0, 3, 4) -> f_1267(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7974, v7975, v7976, v7977, v7978, v7979, v7980, v7981, v7982, 0, 3, 4) :|: 0 = 0
f_1267(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7974, v7975, v7976, v7977, v7978, v7979, v7980, v7981, v7982, 0, 3, 4) -> f_1277(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7977, v7974, v7975, v7976, v7978, v7979, v7980, v7981, v7982, 0, 3, 4) :|: 0 = 0
f_1277(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7977, v7974, v7975, v7976, v7978, v7979, v7980, v7981, v7982, 0, 3, 4) -> f_1285(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7977, v7974, v7975, v7976, v7978, v7979, v7980, v7981, v7982, 0, 3, 4) :|: v7977 <= v7971
f_1285(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7977, v7974, v7975, v7976, v7978, v7979, v7980, v7981, v7982, 0, 3, 4) -> f_1294(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7977, v7974, v7975, v7976, v7978, v7979, v7980, v7981, v7982, 0, 3, 4) :|: 0 = 0
f_1294(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7977, v7974, v7975, v7976, v7978, v7979, v7980, v7981, v7982, 0, 3, 4) -> f_1303(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7977, v7974, v7975, v7976, v7978, v7979, v7980, v7981, v7982, 0, 3, 4) :|: 0 = 0
f_1303(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7977, v7974, v7975, v7976, v7978, v7979, v7980, v7981, v7982, 0, 3, 4) -> f_1312(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7977, v7974, v7975, v7976, v7978, v7979, v7980, v7981, v7982, 0, 3, 4) :|: TRUE
f_1312(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7977, v7974, v7975, v7976, v7978, v7979, v7980, v7981, v7982, 0, 3, 4) -> f_1321(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7977, v7974, v7975, v7976, v7978, v7979, v7980, v7981, v7982, 0, 3, 4) :|: 0 = 0
f_1321(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7977, v7974, v7975, v7976, v7978, v7979, v7980, v7981, v7982, 0, 3, 4) -> f_1330(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7977, v7974, v7975, v7976, v7978, v7979, v7980, v7981, v7982, 0, 3, 4) :|: 0 = 0
f_1330(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7977, v7974, v7975, v7976, v7978, v7979, v7980, v7981, v7982, 0, 3, 4) -> f_1339(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7977, v7974, v7975, v7976, v7978, v7979, v7980, v7981, v7982, 0, 3, 4) :|: 0 = 0
f_1339(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7977, v7974, v7975, v7976, v7978, v7979, v7980, v7981, v7982, 0, 3, 4) -> f_1348(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7977, v7974, v7975, v7976, v7978, v7979, v7980, v7981, v7982, 0, 3, 4) :|: TRUE
f_1348(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7977, v7974, v7975, v7976, v7978, v7979, v7980, v7981, v7982, 0, 3, 4) -> f_1357(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7977, v7974, v7975, v7976, v7978, v7979, v7980, v7981, v7982, 0, 3, 4) :|: 0 = 0
f_1357(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7977, v7974, v7975, v7976, v7978, v7979, v7980, v7981, v7982, 0, 3, 4) -> f_1366(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7977, v7975, v7976, v7974, v7978, v7979, v7980, v7981, v7982, 0, 3, 4) :|: 0 = 0
f_1366(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7977, v7975, v7976, v7974, v7978, v7979, v7980, v7981, v7982, 0, 3, 4) -> f_1375(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7977, v7975, v7976, v7974, v7978, v7979, v7980, v7981, v7982, 0, 3, 4) :|: 0 = 0
f_1375(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7977, v7975, v7976, v7974, v7978, v7979, v7980, v7981, v7982, 0, 3, 4) -> f_1384(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7977, v7975, v7976, v7974, v7978, v7979, v7980, v7981, v7982, 0, 3, 4) :|: TRUE
f_1384(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7977, v7975, v7976, v7974, v7978, v7979, v7980, v7981, v7982, 0, 3, 4) -> f_1393(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7977, v13262, v7976, v7974, v7978, v7979, v7980, v7981, v7982, 0, 3, 4) :|: TRUE
f_1393(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7977, v13262, v7976, v7974, v7978, v7979, v7980, v7981, v7982, 0, 3, 4) -> f_1402(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7977, v13262, v7976, v7974, v7978, v7979, v7980, v7981, v7982, 0, 3, 4) :|: v13262 != 0
f_1393(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7977, v13262, v7976, v7974, v7978, v7979, v7980, v7981, v7982, 0, 3, 4) -> f_1403(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7977, 0, v7976, v7974, v7978, v7979, v7980, v7981, v7982, 3, 4) :|: v13262 = 0
f_1402(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7977, v13262, v7976, v7974, v7978, v7979, v7980, v7981, v7982, 0, 3, 4) -> f_1412(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7977, v13262, v7976, v7974, v7978, v7979, v7980, v7981, v7982, 0, 3, 4) :|: 0 = 0
f_1412(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7977, v13262, v7976, v7974, v7978, v7979, v7980, v7981, v7982, 0, 3, 4) -> f_1423(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7977, v13262, v7976, v7974, v7978, v7979, v7980, v7981, v7982, 0, 3, 4) :|: TRUE
f_1423(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7977, v13262, v7976, v7974, v7978, v7979, v7980, v7981, v7982, 0, 3, 4) -> f_1159(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7977, v13262, v7974, v7976, v7978, v7979, v7980, v7981, v7982, 0, 3, 4) :|: TRUE
f_1159(v7425, v7426, v7427, v7428, v7429, v7430, v7431, v7432, v7433, v7434, 1, v7436, v7437, v7438, v7439, v7440, v7441, v7442, v7443, v7444, 0, 3, 4) -> f_1170(v7425, v7426, v7427, v7428, v7429, v7430, v7431, v7432, v7433, v7434, 1, v7436, v7437, v7439, v7440, v7441, v7442, v7443, v7444, 0, 3, 4) :|: 0 = 0
f_1403(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7977, 0, v7976, v7974, v7978, v7979, v7980, v7981, v7982, 3, 4) -> f_1413(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7977, 0, v7976, v7974, v7978, v7979, v7980, v7981, v7982, 3, 4) :|: 0 = 0
f_1413(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7977, 0, v7976, v7974, v7978, v7979, v7980, v7981, v7982, 3, 4) -> f_1424(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7977, 0, v7976, v7974, v7978, v7979, v7980, v7981, v7982, 3, 4) :|: TRUE
f_1424(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7977, 0, v7976, v7974, v7978, v7979, v7980, v7981, v7982, 3, 4) -> f_1161(v7963, v7964, v7965, v7966, v7967, v7968, v7969, v7970, v7971, v7972, 1, v7977, 0, v7974, v7976, v7978, v7979, v7980, v7981, v7982, 3, 4) :|: TRUE
f_1161(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7483, 1, v7485, 0, v7487, v7488, v7489, v7490, v7491, v7492, v7493, 3, 4) -> f_1171(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7483, 1, v7485, 0, v7487, v7489, v7490, v7491, v7492, v7493, 3, 4) :|: 0 = 0
f_1171(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7483, 1, v7485, 0, v7487, v7489, v7490, v7491, v7492, v7493, 3, 4) -> f_1181(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7483, 1, v7485, 0, v7487, v7701, v7489, v7490, v7491, v7492, v7493, 3, 4) :|: v7701 = 1 + v7483
f_1181(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7483, 1, v7485, 0, v7487, v7701, v7489, v7490, v7491, v7492, v7493, 3, 4) -> f_1191(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7483, 1, v7485, 0, v7487, v7701, v7489, v7490, v7491, v7492, v7493, 3, 4) :|: TRUE
f_1191(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7483, 1, v7485, 0, v7487, v7701, v7489, v7490, v7491, v7492, v7493, 3, 4) -> f_1202(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7483, 1, v7485, 0, v7487, v7701, v7489, v7490, v7491, v7492, v7493, 3, 4) :|: TRUE
f_1202(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7483, 1, v7485, 0, v7487, v7701, v7489, v7490, v7491, v7492, v7493, 3, 4) -> f_1211(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7483, 1, v7485, 0, v7487, v7701, v7489, v7490, v7491, v7492, v7493, 3, 4) :|: TRUE
f_1211(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7483, 1, v7485, 0, v7487, v7701, v7489, v7490, v7491, v7492, v7493, 3, 4) -> f_1220(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7483, 1, v7485, 0, v7487, v7701, v7489, v7490, v7491, v7492, v7493, 3, 4) :|: TRUE
f_1220(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7483, 1, v7485, 0, v7487, v7701, v7489, v7490, v7491, v7492, v7493, 3, 4) -> f_1228(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7483, 1, v7485, 0, v7487, v7701, v7489, v7490, v7491, v7492, v7493, 3, 4) :|: 0 = 0
f_1228(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7483, 1, v7485, 0, v7487, v7701, v7489, v7490, v7491, v7492, v7493, 3, 4) -> f_1238(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7701, 1, v7485, v7483, 0, v7487, v7489, v7490, v7491, v7492, v7493, 3, 4) :|: 0 = 0
f_1238(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7701, 1, v7485, v7483, 0, v7487, v7489, v7490, v7491, v7492, v7493, 3, 4) -> f_1248(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7701, 1, v7485, v7483, 0, v7487, v7489, v7490, v7491, v7492, v7493, 3, 4) :|: v7701 <= v7481
f_1248(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7701, 1, v7485, v7483, 0, v7487, v7489, v7490, v7491, v7492, v7493, 3, 4) -> f_1258(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7701, 1, v7485, v7483, 0, v7487, v7489, v7490, v7491, v7492, v7493, 3, 4) :|: 0 = 0
f_1258(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7701, 1, v7485, v7483, 0, v7487, v7489, v7490, v7491, v7492, v7493, 3, 4) -> f_1268(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7701, 1, v7485, v7483, 0, v7487, v7489, v7490, v7491, v7492, v7493, 3, 4) :|: TRUE
f_1268(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7701, 1, v7485, v7483, 0, v7487, v7489, v7490, v7491, v7492, v7493, 3, 4) -> f_1278(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7701, 1, v7485, v7483, 0, v7487, v7489, v7490, v7491, v7492, v7493, 3, 4) :|: 0 = 0
f_1278(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7701, 1, v7485, v7483, 0, v7487, v7489, v7490, v7491, v7492, v7493, 3, 4) -> f_1287(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7701, 1, v7485, v7483, 0, v7487, v7489, v7490, v7491, v7492, v7493, 3, 4) :|: 0 = 0
f_1287(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7701, 1, v7485, v7483, 0, v7487, v7489, v7490, v7491, v7492, v7493, 3, 4) -> f_1296(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7701, 1, v7485, v7483, 0, v7487, v7489, v7490, v7491, v7492, v7493, 3, 4) :|: 0 = 0
f_1296(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7701, 1, v7485, v7483, 0, v7487, v7489, v7490, v7491, v7492, v7493, 3, 4) -> f_1305(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7701, 1, v7485, v7483, 0, v7487, v7489, v7490, v7491, v7492, v7493, 3, 4) :|: 0 = 0
f_1305(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7701, 1, v7485, v7483, 0, v7487, v7489, v7490, v7491, v7492, v7493, 3, 4) -> f_1314(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7701, 1, v7485, v7483, 0, v7487, v7489, v7490, v7491, v7492, v7493, 3, 4) :|: TRUE
f_1314(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7701, 1, v7485, v7483, 0, v7487, v7489, v7490, v7491, v7492, v7493, 3, 4) -> f_1323(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7701, 1, v7485, v7483, 0, v7487, v7489, v7490, v7491, v7492, v7493, 3, 4) :|: 0 = 0
f_1323(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7701, 1, v7485, v7483, 0, v7487, v7489, v7490, v7491, v7492, v7493, 3, 4) -> f_1332(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7701, 1, v7485, 0, v7487, v7483, v7489, v7490, v7491, v7492, v7493, 3, 4) :|: 0 = 0
f_1332(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7701, 1, v7485, 0, v7487, v7483, v7489, v7490, v7491, v7492, v7493, 3, 4) -> f_1341(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7701, 1, v7485, 0, v7487, v7483, v7489, v7490, v7491, v7492, v7493, 3, 4) :|: 0 = 0
f_1341(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7701, 1, v7485, 0, v7487, v7483, v7489, v7490, v7491, v7492, v7493, 3, 4) -> f_1350(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7701, 1, v7485, 0, v7487, v7483, v7489, v7490, v7491, v7492, v7493, 3, 4) :|: TRUE
f_1350(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7701, 1, v7485, 0, v7487, v7483, v7489, v7490, v7491, v7492, v7493, 3, 4) -> f_1359(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7701, 1, v7485, 0, v7487, v7483, v7489, v7490, v7491, v7492, v7493, 3, 4) :|: 0 = 0
f_1359(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7701, 1, v7485, 0, v7487, v7483, v7489, v7490, v7491, v7492, v7493, 3, 4) -> f_1368(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7701, 1, v7485, 0, v7487, v7483, v7489, v7490, v7491, v7492, v7493, 3, 4) :|: 0 = 0
f_1368(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7701, 1, v7485, 0, v7487, v7483, v7489, v7490, v7491, v7492, v7493, 3, 4) -> f_1377(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7701, 1, v7485, 0, v7487, v7483, v7489, v7490, v7491, v7492, v7493, 3, 4) :|: 0 = 0
f_1377(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7701, 1, v7485, 0, v7487, v7483, v7489, v7490, v7491, v7492, v7493, 3, 4) -> f_1386(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7701, 1, v7485, 0, v7487, v7483, v7489, v7490, v7491, v7492, v7493, 3, 4) :|: TRUE
f_1386(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7701, 1, v7485, 0, v7487, v7483, v7489, v7490, v7491, v7492, v7493, 3, 4) -> f_1395(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7701, 1, v7485, v13263, 0, v7487, v7483, v7489, v7490, v7491, v7492, v7493, 3, 4) :|: TRUE
f_1395(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7701, 1, v7485, v13263, 0, v7487, v7483, v7489, v7490, v7491, v7492, v7493, 3, 4) -> f_1405(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7701, 1, v7485, v13263, 0, v7487, v7483, v7489, v7490, v7491, v7492, v7493, 3, 4) :|: v13263 != 0
f_1395(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7701, 1, v7485, v13263, 0, v7487, v7483, v7489, v7490, v7491, v7492, v7493, 3, 4) -> f_1406(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7701, 1, v7485, 0, v7487, v7483, v7489, v7490, v7491, v7492, v7493, 3, 4) :|: v13263 = 0
f_1405(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7701, 1, v7485, v13263, 0, v7487, v7483, v7489, v7490, v7491, v7492, v7493, 3, 4) -> f_1415(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7701, 1, v7485, v13263, v7487, v7483, v7489, v7490, v7491, v7492, v7493, 0, 3, 4) :|: 0 = 0
f_1415(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7701, 1, v7485, v13263, v7487, v7483, v7489, v7490, v7491, v7492, v7493, 0, 3, 4) -> f_1426(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7701, 1, v7485, v13263, v7487, v7483, v7489, v7490, v7491, v7492, v7493, 0, 3, 4) :|: TRUE
f_1426(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7701, 1, v7485, v13263, v7487, v7483, v7489, v7490, v7491, v7492, v7493, 0, 3, 4) -> f_1159(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7701, 1, v7485, v13263, v7487, v7483, v7489, v7490, v7491, v7492, v7493, 0, 3, 4) :|: TRUE
f_1406(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7701, 1, v7485, 0, v7487, v7483, v7489, v7490, v7491, v7492, v7493, 3, 4) -> f_1416(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7701, 1, v7485, 0, v7487, v7483, v7489, v7490, v7491, v7492, v7493, 3, 4) :|: 0 = 0
f_1416(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7701, 1, v7485, 0, v7487, v7483, v7489, v7490, v7491, v7492, v7493, 3, 4) -> f_1427(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7701, 1, v7485, 0, v7487, v7483, v7489, v7490, v7491, v7492, v7493, 3, 4) :|: TRUE
f_1427(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7701, 1, v7485, 0, v7487, v7483, v7489, v7490, v7491, v7492, v7493, 3, 4) -> f_1161(v7474, v7475, v7476, v7477, v7478, v7479, v7480, v7481, v7482, v7701, 1, v7485, 0, v7487, v7483, v7489, v7490, v7491, v7492, v7493, 3, 4) :|: TRUE
Combined rules. Obtained 6 rulesP rules:
f_1395(v7474:0, v7475:0, v7476:0, v7477:0, v7478:0, v7479:0, v7480:0, v7481:0, v7482:0, v7701:0, 1, v7485:0, 0, 0, v7487:0, v7483:0, v7489:0, v7490:0, v7491:0, v7492:0, v7493:0, 3, 4) -> f_1395(v7474:0, v7475:0, v7476:0, v7477:0, v7478:0, v7479:0, v7480:0, v7481:0, v7482:0, 1 + v7701:0, 1, v7485:0, v13263:1, 0, v7487:0, v7701:0, v7489:0, v7490:0, v7491:0, v7492:0, v7493:0, 3, 4) :|: v7481:0 >= 1 + v7701:0
f_1170(v7425:0, v7426:0, v7427:0, v7428:0, v7429:0, v7430:0, v7431:0, v7432:0, v7433:0, v7434:0, 1, v7436:0, v7437:0, v7439:0, v7440:0, v7441:0, v7442:0, v7443:0, v7444:0, 0, 3, 4) -> f_1395(v7425:0, v7426:0, v7427:0, v7428:0, v7429:0, v7430:0, v7431:0, v7432:0, v7433:0, 1 + v7434:0, 1, 1 + v7436:0, v13263:0, 0, v7436:0, v7434:0, v7440:0, v7441:0, v7442:0, v7443:0, v7444:0, 3, 4) :|: v7432:0 >= 1 + v7434:0 && v7433:0 >= 1 + v7436:0
f_1170(v7425:0, v7426:0, v7427:0, v7428:0, v7429:0, v7430:0, v7431:0, v7432:0, v7433:0, v7434:0, 1, v7436:0, v7437:0, v7439:0, v7440:0, v7441:0, v7442:0, v7443:0, v7444:0, 0, 3, 4) -> f_1170(v7425:0, v7426:0, v7427:0, v7428:0, v7429:0, v7430:0, v7431:0, v7432:0, v7433:0, v7434:0, 1, 1 + v7436:0, v13262:0, v7439:0, v7440:0, v7441:0, v7442:0, v7443:0, v7444:0, 0, 3, 4) :|: v13262:0 < 0 && v7433:0 >= 1 + v7436:0
f_1170(v7425:0, v7426:0, v7427:0, v7428:0, v7429:0, v7430:0, v7431:0, v7432:0, v7433:0, v7434:0, 1, v7436:0, v7437:0, v7439:0, v7440:0, v7441:0, v7442:0, v7443:0, v7444:0, 0, 3, 4) -> f_1170(v7425:0, v7426:0, v7427:0, v7428:0, v7429:0, v7430:0, v7431:0, v7432:0, v7433:0, v7434:0, 1, 1 + v7436:0, v13262:0, v7439:0, v7440:0, v7441:0, v7442:0, v7443:0, v7444:0, 0, 3, 4) :|: v13262:0 > 0 && v7433:0 >= 1 + v7436:0
f_1395(v7474:0, v7475:0, v7476:0, v7477:0, v7478:0, v7479:0, v7480:0, v7481:0, v7482:0, v7701:0, 1, v7485:0, v13263:0, 0, v7487:0, v7483:0, v7489:0, v7490:0, v7491:0, v7492:0, v7493:0, 3, 4) -> f_1170(v7474:0, v7475:0, v7476:0, v7477:0, v7478:0, v7479:0, v7480:0, v7481:0, v7482:0, v7701:0, 1, v7485:0, v13263:0, v7483:0, v7489:0, v7490:0, v7491:0, v7492:0, v7493:0, 0, 3, 4) :|: v13263:0 < 0
f_1395(v7474:0, v7475:0, v7476:0, v7477:0, v7478:0, v7479:0, v7480:0, v7481:0, v7482:0, v7701:0, 1, v7485:0, v13263:0, 0, v7487:0, v7483:0, v7489:0, v7490:0, v7491:0, v7492:0, v7493:0, 3, 4) -> f_1170(v7474:0, v7475:0, v7476:0, v7477:0, v7478:0, v7479:0, v7480:0, v7481:0, v7482:0, v7701:0, 1, v7485:0, v13263:0, v7483:0, v7489:0, v7490:0, v7491:0, v7492:0, v7493:0, 0, 3, 4) :|: v13263:0 > 0
Filtered unneeded arguments:
   f_1395(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23) -> f_1395(x8, x9, x10, x12, x13)
   f_1170(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22) -> f_1170(x8, x9, x10, x12)
Removed division, modulo operations, cleaned up constraints. Obtained 5 rules.P rules:
f_1395(v7481:0, v7482:0, v7701:0, v7485:0, cons_0) -> f_1395(v7481:0, v7482:0, 1 + v7701:0, v7485:0, v13263:1) :|: v7481:0 >= 1 + v7701:0 && cons_0 = 0
f_1170(v7432:0, v7433:0, v7434:0, v7436:0) -> f_1395(v7432:0, v7433:0, 1 + v7434:0, 1 + v7436:0, v13263:0) :|: v7432:0 >= 1 + v7434:0 && v7433:0 >= 1 + v7436:0
f_1170(v7432:0, v7433:0, v7434:0, v7436:0) -> f_1170(v7432:0, v7433:0, v7434:0, 1 + v7436:0) :|: v7433:0 >= 1 + v7436:0
f_1395(v7481:0, v7482:0, v7701:0, v7485:0, v13263:0) -> f_1170(v7481:0, v7482:0, v7701:0, v7485:0) :|: v13263:0 < 0
f_1395(v7481:0, v7482:0, v7701:0, v7485:0, v13263:0) -> f_1170(v7481:0, v7482:0, v7701:0, v7485:0) :|: v13263:0 > 0

----------------------------------------

(29)
Obligation:
Rules:
f_1395(v7481:0, v7482:0, v7701:0, v7485:0, cons_0) -> f_1395(v7481:0, v7482:0, 1 + v7701:0, v7485:0, v13263:1) :|: v7481:0 >= 1 + v7701:0 && cons_0 = 0
f_1170(v7432:0, v7433:0, v7434:0, v7436:0) -> f_1395(v7432:0, v7433:0, 1 + v7434:0, 1 + v7436:0, v13263:0) :|: v7432:0 >= 1 + v7434:0 && v7433:0 >= 1 + v7436:0
f_1170(x, x1, x2, x3) -> f_1170(x, x1, x2, 1 + x3) :|: x1 >= 1 + x3
f_1395(x4, x5, x6, x7, x8) -> f_1170(x4, x5, x6, x7) :|: x8 < 0
f_1395(x9, x10, x11, x12, x13) -> f_1170(x9, x10, x11, x12) :|: x13 > 0

----------------------------------------

(30) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(31)
Obligation:
Rules:
f_1395(x4:0, x5:0, x6:0, x7:0, x8:0) -> f_1170(x4:0, x5:0, x6:0, x7:0) :|: x8:0 < 0
f_1395(x9:0, x10:0, x11:0, x12:0, x13:0) -> f_1170(x9:0, x10:0, x11:0, x12:0) :|: x13:0 > 0
f_1170(v7432:0:0, v7433:0:0, v7434:0:0, v7436:0:0) -> f_1395(v7432:0:0, v7433:0:0, 1 + v7434:0:0, 1 + v7436:0:0, v13263:0:0) :|: v7432:0:0 >= 1 + v7434:0:0 && v7433:0:0 >= 1 + v7436:0:0
f_1170(x:0, x1:0, x2:0, x3:0) -> f_1170(x:0, x1:0, x2:0, 1 + x3:0) :|: x1:0 >= 1 + x3:0
f_1395(v7481:0:0, v7482:0:0, v7701:0:0, v7485:0:0, cons_0) -> f_1395(v7481:0:0, v7482:0:0, 1 + v7701:0:0, v7485:0:0, v13263:1:0) :|: v7481:0:0 >= 1 + v7701:0:0 && cons_0 = 0

----------------------------------------

(32) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_1395(x, x1, x2, x3, x4)] = -1 + x - x2
[f_1170(x5, x6, x7, x8)] = -1 + x5 - x7

The following rules are decreasing:
f_1170(v7432:0:0, v7433:0:0, v7434:0:0, v7436:0:0) -> f_1395(v7432:0:0, v7433:0:0, 1 + v7434:0:0, 1 + v7436:0:0, v13263:0:0) :|: v7432:0:0 >= 1 + v7434:0:0 && v7433:0:0 >= 1 + v7436:0:0
f_1395(v7481:0:0, v7482:0:0, v7701:0:0, v7485:0:0, cons_0) -> f_1395(v7481:0:0, v7482:0:0, 1 + v7701:0:0, v7485:0:0, v13263:1:0) :|: v7481:0:0 >= 1 + v7701:0:0 && cons_0 = 0
The following rules are bounded:
f_1170(v7432:0:0, v7433:0:0, v7434:0:0, v7436:0:0) -> f_1395(v7432:0:0, v7433:0:0, 1 + v7434:0:0, 1 + v7436:0:0, v13263:0:0) :|: v7432:0:0 >= 1 + v7434:0:0 && v7433:0:0 >= 1 + v7436:0:0
f_1395(v7481:0:0, v7482:0:0, v7701:0:0, v7485:0:0, cons_0) -> f_1395(v7481:0:0, v7482:0:0, 1 + v7701:0:0, v7485:0:0, v13263:1:0) :|: v7481:0:0 >= 1 + v7701:0:0 && cons_0 = 0

----------------------------------------

(33)
Obligation:
Rules:
f_1395(x4:0, x5:0, x6:0, x7:0, x8:0) -> f_1170(x4:0, x5:0, x6:0, x7:0) :|: x8:0 < 0
f_1395(x9:0, x10:0, x11:0, x12:0, x13:0) -> f_1170(x9:0, x10:0, x11:0, x12:0) :|: x13:0 > 0
f_1170(x:0, x1:0, x2:0, x3:0) -> f_1170(x:0, x1:0, x2:0, 1 + x3:0) :|: x1:0 >= 1 + x3:0

----------------------------------------

(34) TerminationGraphProcessor (EQUIVALENT)
Constructed the termination graph and obtained one non-trivial SCC.

----------------------------------------

(35)
Obligation:
Rules:
f_1170(x:0, x1:0, x2:0, x3:0) -> f_1170(x:0, x1:0, x2:0, 1 + x3:0) :|: x1:0 >= 1 + x3:0

----------------------------------------

(36) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_1170(x1, x2, x3, x4) -> f_1170(x2, x4)

----------------------------------------

(37)
Obligation:
Rules:
f_1170(x1:0, x3:0) -> f_1170(x1:0, 1 + x3:0) :|: x1:0 >= 1 + x3:0

----------------------------------------

(38) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_1170(x, x1)] = x - x1

The following rules are decreasing:
f_1170(x1:0, x3:0) -> f_1170(x1:0, 1 + x3:0) :|: x1:0 >= 1 + x3:0
The following rules are bounded:
f_1170(x1:0, x3:0) -> f_1170(x1:0, 1 + x3:0) :|: x1:0 >= 1 + x3:0

----------------------------------------

(39)
YES

----------------------------------------

(40)
Obligation:
SCC
----------------------------------------

(41) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 43 rulesP rules:
f_1069(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5754, v5755, v5756, v5757, v5758, v5759, v5760, 3, 4) -> f_1078(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5754, v5755, v5756, v5757, v5758, v5759, v5760, 3, 4) :|: TRUE
f_1078(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5754, v5755, v5756, v5757, v5758, v5759, v5760, 3, 4) -> f_1088(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5754, v5755, v5756, v5757, v5758, v5759, v5760, 3, 4) :|: 0 = 0
f_1088(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5754, v5755, v5756, v5757, v5758, v5759, v5760, 3, 4) -> f_1098(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5754, v5755, v5756, v5757, v5758, v5759, v5760, 3, 4) :|: 0 = 0
f_1098(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5754, v5755, v5756, v5757, v5758, v5759, v5760, 3, 4) -> f_1108(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5754, v5755, v5756, v5757, v5758, v5759, v5760, 3, 4) :|: 0 = 0
f_1108(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5754, v5755, v5756, v5757, v5758, v5759, v5760, 3, 4) -> f_1118(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5754, v5755, v5756, v5757, v5758, v5759, v5760, 3, 4) :|: TRUE
f_1118(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5754, v5755, v5756, v5757, v5758, v5759, v5760, 3, 4) -> f_1128(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5754, v5755, v5756, v5757, v5758, v5759, v5760, 3, 4) :|: 0 = 0
f_1128(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5754, v5755, v5756, v5757, v5758, v5759, v5760, 3, 4) -> f_1140(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5754, v5755, v5756, v5757, v5758, v5759, v5760, 3, 4) :|: 0 = 0
f_1140(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5754, v5755, v5756, v5757, v5758, v5759, v5760, 3, 4) -> f_1152(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5754, v5755, v5756, v5757, v5758, v5759, v5760, 3, 4) :|: 0 = 0
f_1152(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5754, v5755, v5756, v5757, v5758, v5759, v5760, 3, 4) -> f_1166(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5754, v5755, v5756, v5757, v5758, v5759, v5760, 3, 4) :|: TRUE
f_1166(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5754, v5755, v5756, v5757, v5758, v5759, v5760, 3, 4) -> f_1176(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5754, v5755, v5756, v5757, v5758, v5759, v5760, 3, 4) :|: 0 = 0
f_1176(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5754, v5755, v5756, v5757, v5758, v5759, v5760, 3, 4) -> f_1186(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5754, v5755, v5756, v5757, v5758, v5759, v5760, 3, 4) :|: 0 = 0
f_1186(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5754, v5755, v5756, v5757, v5758, v5759, v5760, 3, 4) -> f_1196(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5754, v5755, v5756, v5757, v5758, v5759, v5760, 3, 4) :|: 0 = 0
f_1196(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5754, v5755, v5756, v5757, v5758, v5759, v5760, 3, 4) -> f_1206(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5754, v5755, v5756, v5757, v5758, v5759, v5760, 3, 4) :|: TRUE
f_1206(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5754, v5755, v5756, v5757, v5758, v5759, v5760, 3, 4) -> f_1215(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5754, v5755, v5756, v5757, v5758, v5759, v5760, 3, 4) :|: 0 = 0
f_1215(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5754, v5755, v5756, v5757, v5758, v5759, v5760, 3, 4) -> f_1223(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v5754, v5756, v5757, v5758, v5759, v5760, 3, 4) :|: 0 = 0
f_1223(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v5754, v5756, v5757, v5758, v5759, v5760, 3, 4) -> f_1232(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v5754, v5756, v5757, v5758, v5759, v5760, 3, 4) :|: v5755 <= v5751
f_1232(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v5754, v5756, v5757, v5758, v5759, v5760, 3, 4) -> f_1242(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v5754, v5756, v5757, v5758, v5759, v5760, 3, 4) :|: 0 = 0
f_1242(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v5754, v5756, v5757, v5758, v5759, v5760, 3, 4) -> f_1253(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v5754, v5756, v5757, v5758, v5759, v5760, 3, 4) :|: 0 = 0
f_1253(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v5754, v5756, v5757, v5758, v5759, v5760, 3, 4) -> f_1263(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v5754, v5756, v5757, v5758, v5759, v5760, 3, 4) :|: 0 = 0
f_1263(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v5754, v5756, v5757, v5758, v5759, v5760, 3, 4) -> f_1273(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v5754, v5756, v5757, v5758, v5759, v5760, 3, 4) :|: TRUE
f_1273(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v5754, v5756, v5757, v5758, v5759, v5760, 3, 4) -> f_1282(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v5754, v5756, v5757, v5758, v5759, v5760, 3, 4) :|: 0 = 0
f_1282(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v5754, v5756, v5757, v5758, v5759, v5760, 3, 4) -> f_1291(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v5754, v5756, v5757, v5758, v5759, v5760, 3, 4) :|: 0 = 0
f_1291(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v5754, v5756, v5757, v5758, v5759, v5760, 3, 4) -> f_1300(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v5754, v5756, v5757, v5758, v5759, v5760, 3, 4) :|: 0 = 0
f_1300(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v5754, v5756, v5757, v5758, v5759, v5760, 3, 4) -> f_1309(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v5754, v5756, v5757, v5758, v5759, v5760, 3, 4) :|: TRUE
f_1309(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v5754, v5756, v5757, v5758, v5759, v5760, 3, 4) -> f_1318(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v5754, v5756, v5757, v5758, v5759, v5760, 3, 4) :|: 0 = 0
f_1318(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v5754, v5756, v5757, v5758, v5759, v5760, 3, 4) -> f_1327(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v5754, v5756, v5757, v5758, v5759, v5760, 3, 4) :|: 0 = 0
f_1327(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v5754, v5756, v5757, v5758, v5759, v5760, 3, 4) -> f_1336(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v5754, v5756, v5757, v5758, v5759, v5760, 3, 4) :|: 0 = 0
f_1336(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v5754, v5756, v5757, v5758, v5759, v5760, 3, 4) -> f_1345(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v5754, v5756, v5757, v5758, v5759, v5760, 3, 4) :|: TRUE
f_1345(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v5754, v5756, v5757, v5758, v5759, v5760, 3, 4) -> f_1354(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v5754, v5756, v5757, v5758, v5759, v5760, 3, 4) :|: 0 = 0
f_1354(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v5754, v5756, v5757, v5758, v5759, v5760, 3, 4) -> f_1363(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v5754, v5756, v5757, v5758, v5759, v5760, 3, 4) :|: 0 = 0
f_1363(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v5754, v5756, v5757, v5758, v5759, v5760, 3, 4) -> f_1372(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v5754, v5756, v5757, v5758, v5759, v5760, 3, 4) :|: 0 = 0
f_1372(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v5754, v5756, v5757, v5758, v5759, v5760, 3, 4) -> f_1381(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v5754, v5756, v5757, v5758, v5759, v5760, 3, 4) :|: TRUE
f_1381(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v5754, v5756, v5757, v5758, v5759, v5760, 3, 4) -> f_1390(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v5754, v5756, v5757, v5758, v5759, v5760, 3, 4) :|: 0 = 0
f_1390(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v5754, v5756, v5757, v5758, v5759, v5760, 3, 4) -> f_1399(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v5754, v5756, v5757, v5758, v5759, v5760, 3, 4) :|: 0 = 0
f_1399(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v5754, v5756, v5757, v5758, v5759, v5760, 3, 4) -> f_1409(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v5754, v5756, v5757, v5758, v5759, v5760, 3, 4) :|: 0 = 0
f_1409(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v5754, v5756, v5757, v5758, v5759, v5760, 3, 4) -> f_1419(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v5754, v5756, v5757, v5758, v5759, v5760, 3, 4) :|: TRUE
f_1419(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v5754, v5756, v5757, v5758, v5759, v5760, 3, 4) -> f_1430(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v5756, v5757, v5758, v5759, v5760, 3, 4) :|: 0 = 0
f_1430(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v5756, v5757, v5758, v5759, v5760, 3, 4) -> f_1436(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v14203, v5756, v5757, v5758, v5759, v5760, 3, 4) :|: v14203 = 1 + v5755
f_1436(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v14203, v5756, v5757, v5758, v5759, v5760, 3, 4) -> f_1442(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v14203, v5756, v5757, v5758, v5759, v5760, 3, 4) :|: TRUE
f_1442(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v14203, v5756, v5757, v5758, v5759, v5760, 3, 4) -> f_1449(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v14203, v5756, v5757, v5758, v5759, v5760, 3, 4) :|: TRUE
f_1449(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v14203, v5756, v5757, v5758, v5759, v5760, 3, 4) -> f_1455(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v14203, v5756, v5757, v5758, v5759, v5760, 3, 4) :|: TRUE
f_1455(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v14203, v5756, v5757, v5758, v5759, v5760, 3, 4) -> f_1060(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5755, v14203, v5756, v5757, v5758, v5759, v5760, 3, 4) :|: TRUE
f_1060(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5754, v5755, v5756, v5757, v5758, v5759, v5760, 3, 4) -> f_1069(v5743, v5744, v5745, v5746, v5747, v5748, v5749, v5750, v5751, 0, 1, v5754, v5755, v5756, v5757, v5758, v5759, v5760, 3, 4) :|: TRUE
Combined rules. Obtained 1 rulesP rules:
f_1069(v5743:0, v5744:0, v5745:0, v5746:0, v5747:0, v5748:0, v5749:0, v5750:0, v5751:0, 0, 1, v5754:0, v5755:0, v5756:0, v5757:0, v5758:0, v5759:0, v5760:0, 3, 4) -> f_1069(v5743:0, v5744:0, v5745:0, v5746:0, v5747:0, v5748:0, v5749:0, v5750:0, v5751:0, 0, 1, v5755:0, 1 + v5755:0, v5756:0, v5757:0, v5758:0, v5759:0, v5760:0, 3, 4) :|: v5755:0 <= v5751:0
Filtered unneeded arguments:
   f_1069(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20) -> f_1069(x9, x13)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1069(v5751:0, v5755:0) -> f_1069(v5751:0, 1 + v5755:0) :|: v5755:0 <= v5751:0

----------------------------------------

(42)
Obligation:
Rules:
f_1069(v5751:0, v5755:0) -> f_1069(v5751:0, 1 + v5755:0) :|: v5755:0 <= v5751:0

----------------------------------------

(43) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_1069 ] = -1*f_1069_2 + f_1069_1

The following rules are decreasing:
f_1069(v5751:0, v5755:0) -> f_1069(v5751:0, 1 + v5755:0) :|: v5755:0 <= v5751:0

The following rules are bounded:
f_1069(v5751:0, v5755:0) -> f_1069(v5751:0, 1 + v5755:0) :|: v5755:0 <= v5751:0


----------------------------------------

(44)
YES

----------------------------------------

(45)
Obligation:
SCC
----------------------------------------

(46) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 41 rulesP rules:
f_1024(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4963, 1, 0, v4966, v4967, v4968, v4969, v4970, v4971, 3, 4) -> f_1032(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4963, 1, 0, v4966, v4967, v4968, v4969, v4970, v4971, 3, 4) :|: 0 = 0
f_1032(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4963, 1, 0, v4966, v4967, v4968, v4969, v4970, v4971, 3, 4) -> f_1040(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) :|: 0 = 0
f_1040(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) -> f_1048(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) :|: v4966 <= v4961
f_1048(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) -> f_1057(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) :|: 0 = 0
f_1057(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) -> f_1067(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) :|: TRUE
f_1067(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) -> f_1076(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) :|: 0 = 0
f_1076(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) -> f_1086(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) :|: 0 = 0
f_1086(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) -> f_1096(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) :|: 0 = 0
f_1096(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) -> f_1106(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) :|: TRUE
f_1106(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) -> f_1116(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) :|: 0 = 0
f_1116(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) -> f_1126(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) :|: 0 = 0
f_1126(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) -> f_1138(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) :|: 0 = 0
f_1138(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) -> f_1150(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) :|: TRUE
f_1150(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) -> f_1164(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) :|: 0 = 0
f_1164(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) -> f_1174(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) :|: 0 = 0
f_1174(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) -> f_1184(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) :|: 0 = 0
f_1184(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) -> f_1194(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) :|: 0 = 0
f_1194(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) -> f_1204(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) :|: TRUE
f_1204(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) -> f_1213(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) :|: 0 = 0
f_1213(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) -> f_1222(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) :|: 0 = 0
f_1222(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) -> f_1231(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) :|: 0 = 0
f_1231(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) -> f_1241(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) :|: TRUE
f_1241(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) -> f_1252(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) :|: 0 = 0
f_1252(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) -> f_1262(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) :|: 0 = 0
f_1262(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) -> f_1272(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) :|: 0 = 0
f_1272(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) -> f_1281(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) :|: TRUE
f_1281(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) -> f_1290(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) :|: 0 = 0
f_1290(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) -> f_1299(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) :|: 0 = 0
f_1299(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) -> f_1308(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) :|: 0 = 0
f_1308(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) -> f_1317(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) :|: TRUE
f_1317(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) -> f_1326(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) :|: 0 = 0
f_1326(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) -> f_1335(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) :|: 0 = 0
f_1335(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) -> f_1344(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) :|: 0 = 0
f_1344(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) -> f_1353(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) :|: TRUE
f_1353(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4963, v4967, v4968, v4969, v4970, v4971, 3, 4) -> f_1362(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4967, v4968, v4969, v4970, v4971, 3, 4) :|: 0 = 0
f_1362(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v4967, v4968, v4969, v4970, v4971, 3, 4) -> f_1371(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v12270, v4967, v4968, v4969, v4970, v4971, 3, 4) :|: v12270 = 1 + v4966
f_1371(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v12270, v4967, v4968, v4969, v4970, v4971, 3, 4) -> f_1380(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v12270, v4967, v4968, v4969, v4970, v4971, 3, 4) :|: TRUE
f_1380(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v12270, v4967, v4968, v4969, v4970, v4971, 3, 4) -> f_1389(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v12270, v4967, v4968, v4969, v4970, v4971, 3, 4) :|: TRUE
f_1389(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v12270, v4967, v4968, v4969, v4970, v4971, 3, 4) -> f_1398(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v12270, v4967, v4968, v4969, v4970, v4971, 3, 4) :|: TRUE
f_1398(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v12270, v4967, v4968, v4969, v4970, v4971, 3, 4) -> f_1016(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4966, 1, 0, v12270, v4967, v4968, v4969, v4970, v4971, 3, 4) :|: TRUE
f_1016(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4963, 1, 0, v4966, v4967, v4968, v4969, v4970, v4971, 3, 4) -> f_1024(v4954, v4955, v4956, v4957, v4958, v4959, v4960, v4961, v4962, v4963, 1, 0, v4966, v4967, v4968, v4969, v4970, v4971, 3, 4) :|: TRUE
Combined rules. Obtained 1 rulesP rules:
f_1024(v4954:0, v4955:0, v4956:0, v4957:0, v4958:0, v4959:0, v4960:0, v4961:0, v4962:0, v4963:0, 1, 0, v4966:0, v4967:0, v4968:0, v4969:0, v4970:0, v4971:0, 3, 4) -> f_1024(v4954:0, v4955:0, v4956:0, v4957:0, v4958:0, v4959:0, v4960:0, v4961:0, v4962:0, v4966:0, 1, 0, 1 + v4966:0, v4967:0, v4968:0, v4969:0, v4970:0, v4971:0, 3, 4) :|: v4966:0 <= v4961:0
Filtered unneeded arguments:
   f_1024(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20) -> f_1024(x8, x13)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1024(v4961:0, v4966:0) -> f_1024(v4961:0, 1 + v4966:0) :|: v4966:0 <= v4961:0

----------------------------------------

(47)
Obligation:
Rules:
f_1024(v4961:0, v4966:0) -> f_1024(v4961:0, 1 + v4966:0) :|: v4966:0 <= v4961:0

----------------------------------------

(48) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_1024(x, x1)] = x - x1

The following rules are decreasing:
f_1024(v4961:0, v4966:0) -> f_1024(v4961:0, 1 + v4966:0) :|: v4966:0 <= v4961:0
The following rules are bounded:
f_1024(v4961:0, v4966:0) -> f_1024(v4961:0, 1 + v4966:0) :|: v4966:0 <= v4961:0

----------------------------------------

(49)
YES

----------------------------------------

(50)
Obligation:
SCC
----------------------------------------

(51) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 29 rulesP rules:
f_773(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2808, v2809, v2810, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) -> f_778(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2808, v2809, v2810, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) :|: 0 = 0
f_778(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2808, v2809, v2810, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) -> f_783(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2808, v2809, v2810, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) :|: 0 = 0
f_783(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2808, v2809, v2810, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) -> f_789(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2808, v2809, v2810, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) :|: TRUE
f_789(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2808, v2809, v2810, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) -> f_795(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2808, v2809, v2810, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) :|: 0 = 0
f_795(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2808, v2809, v2810, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) -> f_801(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2810, v2808, v2809, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) :|: 0 = 0
f_801(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2810, v2808, v2809, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) -> f_807(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2810, v2808, v2809, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) :|: v2810 <= v2806
f_807(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2810, v2808, v2809, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) -> f_814(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2810, v2808, v2809, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) :|: 0 = 0
f_814(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2810, v2808, v2809, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) -> f_821(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2810, v2808, v2809, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) :|: 0 = 0
f_821(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2810, v2808, v2809, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) -> f_828(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2810, v2808, v2809, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) :|: TRUE
f_828(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2810, v2808, v2809, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) -> f_835(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2810, v2808, v2809, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) :|: 0 = 0
f_835(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2810, v2808, v2809, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) -> f_842(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2810, v2808, v2809, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) :|: 0 = 0
f_842(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2810, v2808, v2809, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) -> f_849(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2810, v2808, v2809, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) :|: 0 = 0
f_849(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2810, v2808, v2809, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) -> f_856(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2810, v2808, v2809, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) :|: TRUE
f_856(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2810, v2808, v2809, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) -> f_863(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2810, v2808, v2809, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) :|: 0 = 0
f_863(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2810, v2808, v2809, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) -> f_871(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2810, v2809, v2808, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) :|: 0 = 0
f_871(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2810, v2809, v2808, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) -> f_878(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2810, v2809, v2808, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) :|: 0 = 0
f_878(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2810, v2809, v2808, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) -> f_885(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2810, v2809, v2808, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) :|: TRUE
f_885(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2810, v2809, v2808, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) -> f_892(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2810, v4003, v2808, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) :|: TRUE
f_892(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2810, v4003, v2808, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) -> f_899(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2810, v4003, v2808, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) :|: v4003 != 0
f_899(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2810, v4003, v2808, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) -> f_907(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2810, v4003, v2808, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) :|: 0 = 0
f_907(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2810, v4003, v2808, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) -> f_915(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2810, v4003, v2808, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) :|: TRUE
f_915(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2810, v4003, v2808, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) -> f_923(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2810, v4003, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) :|: 0 = 0
f_923(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2810, v4003, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) -> f_931(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2810, v4003, v4272, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) :|: v4272 = 1 + v2810
f_931(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2810, v4003, v4272, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) -> f_939(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2810, v4003, v4272, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) :|: TRUE
f_939(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2810, v4003, v4272, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) -> f_947(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2810, v4003, v4272, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) :|: TRUE
f_947(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2810, v4003, v4272, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) -> f_955(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2810, v4003, v4272, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) :|: TRUE
f_955(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2810, v4003, v4272, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) -> f_962(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2810, v4003, v4272, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) :|: TRUE
f_962(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2810, v4003, v4272, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) -> f_768(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2810, v4003, v4272, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) :|: TRUE
f_768(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2808, v2809, v2810, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) -> f_773(v2798, v2799, v2800, v2801, v2802, v2803, v2804, v2805, v2806, 1, v2808, v2809, v2810, v2811, v2812, v2813, v2814, v2815, 0, 3, 4) :|: 0 = 0
Combined rules. Obtained 2 rulesP rules:
f_773(v2798:0, v2799:0, v2800:0, v2801:0, v2802:0, v2803:0, v2804:0, v2805:0, v2806:0, 1, v2808:0, v2809:0, v2810:0, v2811:0, v2812:0, v2813:0, v2814:0, v2815:0, 0, 3, 4) -> f_773(v2798:0, v2799:0, v2800:0, v2801:0, v2802:0, v2803:0, v2804:0, v2805:0, v2806:0, 1, v2810:0, v4003:0, 1 + v2810:0, v2811:0, v2812:0, v2813:0, v2814:0, v2815:0, 0, 3, 4) :|: v4003:0 < 0 && v2810:0 <= v2806:0
f_773(v2798:0, v2799:0, v2800:0, v2801:0, v2802:0, v2803:0, v2804:0, v2805:0, v2806:0, 1, v2808:0, v2809:0, v2810:0, v2811:0, v2812:0, v2813:0, v2814:0, v2815:0, 0, 3, 4) -> f_773(v2798:0, v2799:0, v2800:0, v2801:0, v2802:0, v2803:0, v2804:0, v2805:0, v2806:0, 1, v2810:0, v4003:0, 1 + v2810:0, v2811:0, v2812:0, v2813:0, v2814:0, v2815:0, 0, 3, 4) :|: v4003:0 > 0 && v2810:0 <= v2806:0
Filtered unneeded arguments:
   f_773(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21) -> f_773(x9, x13)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_773(v2806:0, v2810:0) -> f_773(v2806:0, 1 + v2810:0) :|: v2810:0 <= v2806:0

----------------------------------------

(52)
Obligation:
Rules:
f_773(v2806:0, v2810:0) -> f_773(v2806:0, 1 + v2810:0) :|: v2810:0 <= v2806:0

----------------------------------------

(53) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_773(x, x1)] = x - x1

The following rules are decreasing:
f_773(v2806:0, v2810:0) -> f_773(v2806:0, 1 + v2810:0) :|: v2810:0 <= v2806:0
The following rules are bounded:
f_773(v2806:0, v2810:0) -> f_773(v2806:0, 1 + v2810:0) :|: v2810:0 <= v2806:0

----------------------------------------

(54)
YES

----------------------------------------

(55)
Obligation:
SCC
----------------------------------------

(56) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 29 rulesP rules:
f_763(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2630, 1, 0, v2633, v2634, v2635, v2636, v2637, v2638, 3, 4) -> f_769(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2630, 1, 0, v2633, v2634, v2635, v2636, v2637, v2638, 3, 4) :|: TRUE
f_769(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2630, 1, 0, v2633, v2634, v2635, v2636, v2637, v2638, 3, 4) -> f_774(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2630, 1, 0, v2633, v2634, v2635, v2636, v2637, v2638, 3, 4) :|: 0 = 0
f_774(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2630, 1, 0, v2633, v2634, v2635, v2636, v2637, v2638, 3, 4) -> f_779(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2633, 1, v2630, 0, v2634, v2635, v2636, v2637, v2638, 3, 4) :|: 0 = 0
f_779(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2633, 1, v2630, 0, v2634, v2635, v2636, v2637, v2638, 3, 4) -> f_784(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2633, 1, v2630, 0, v2634, v2635, v2636, v2637, v2638, 3, 4) :|: v2633 <= v2628
f_784(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2633, 1, v2630, 0, v2634, v2635, v2636, v2637, v2638, 3, 4) -> f_790(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2633, 1, v2630, 0, v2634, v2635, v2636, v2637, v2638, 3, 4) :|: 0 = 0
f_790(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2633, 1, v2630, 0, v2634, v2635, v2636, v2637, v2638, 3, 4) -> f_796(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2633, 1, v2630, 0, v2634, v2635, v2636, v2637, v2638, 3, 4) :|: TRUE
f_796(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2633, 1, v2630, 0, v2634, v2635, v2636, v2637, v2638, 3, 4) -> f_802(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2633, 1, v2630, 0, v2634, v2635, v2636, v2637, v2638, 3, 4) :|: 0 = 0
f_802(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2633, 1, v2630, 0, v2634, v2635, v2636, v2637, v2638, 3, 4) -> f_809(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2633, 1, v2630, 0, v2634, v2635, v2636, v2637, v2638, 3, 4) :|: 0 = 0
f_809(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2633, 1, v2630, 0, v2634, v2635, v2636, v2637, v2638, 3, 4) -> f_816(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2633, 1, v2630, 0, v2634, v2635, v2636, v2637, v2638, 3, 4) :|: 0 = 0
f_816(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2633, 1, v2630, 0, v2634, v2635, v2636, v2637, v2638, 3, 4) -> f_823(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2633, 1, v2630, 0, v2634, v2635, v2636, v2637, v2638, 3, 4) :|: 0 = 0
f_823(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2633, 1, v2630, 0, v2634, v2635, v2636, v2637, v2638, 3, 4) -> f_830(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2633, 1, v2630, 0, v2634, v2635, v2636, v2637, v2638, 3, 4) :|: TRUE
f_830(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2633, 1, v2630, 0, v2634, v2635, v2636, v2637, v2638, 3, 4) -> f_837(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2633, 1, v2630, 0, v2634, v2635, v2636, v2637, v2638, 3, 4) :|: 0 = 0
f_837(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2633, 1, v2630, 0, v2634, v2635, v2636, v2637, v2638, 3, 4) -> f_844(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2633, 1, 0, v2630, v2634, v2635, v2636, v2637, v2638, 3, 4) :|: 0 = 0
f_844(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2633, 1, 0, v2630, v2634, v2635, v2636, v2637, v2638, 3, 4) -> f_851(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2633, 1, 0, v2630, v2634, v2635, v2636, v2637, v2638, 3, 4) :|: 0 = 0
f_851(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2633, 1, 0, v2630, v2634, v2635, v2636, v2637, v2638, 3, 4) -> f_858(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2633, 1, 0, v2630, v2634, v2635, v2636, v2637, v2638, 3, 4) :|: TRUE
f_858(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2633, 1, 0, v2630, v2634, v2635, v2636, v2637, v2638, 3, 4) -> f_865(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2633, 1, 0, v2630, v2634, v2635, v2636, v2637, v2638, 3, 4) :|: 0 = 0
f_865(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2633, 1, 0, v2630, v2634, v2635, v2636, v2637, v2638, 3, 4) -> f_873(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2633, 1, 0, v2630, v2634, v2635, v2636, v2637, v2638, 3, 4) :|: 0 = 0
f_873(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2633, 1, 0, v2630, v2634, v2635, v2636, v2637, v2638, 3, 4) -> f_880(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2633, 1, 0, v2630, v2634, v2635, v2636, v2637, v2638, 3, 4) :|: 0 = 0
f_880(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2633, 1, 0, v2630, v2634, v2635, v2636, v2637, v2638, 3, 4) -> f_887(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2633, 1, 0, v2630, v2634, v2635, v2636, v2637, v2638, 3, 4) :|: TRUE
f_887(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2633, 1, 0, v2630, v2634, v2635, v2636, v2637, v2638, 3, 4) -> f_894(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2633, 1, v4004, 0, v2630, v2634, v2635, v2636, v2637, v2638, 3, 4) :|: TRUE
f_894(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2633, 1, v4004, 0, v2630, v2634, v2635, v2636, v2637, v2638, 3, 4) -> f_903(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2633, 1, 0, v2630, v2634, v2635, v2636, v2637, v2638, 3, 4) :|: v4004 = 0
f_903(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2633, 1, 0, v2630, v2634, v2635, v2636, v2637, v2638, 3, 4) -> f_911(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2633, 1, 0, v2630, v2634, v2635, v2636, v2637, v2638, 3, 4) :|: 0 = 0
f_911(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2633, 1, 0, v2630, v2634, v2635, v2636, v2637, v2638, 3, 4) -> f_919(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2633, 1, 0, v2630, v2634, v2635, v2636, v2637, v2638, 3, 4) :|: TRUE
f_919(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2633, 1, 0, v2630, v2634, v2635, v2636, v2637, v2638, 3, 4) -> f_927(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2633, 1, 0, v2634, v2635, v2636, v2637, v2638, 3, 4) :|: 0 = 0
f_927(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2633, 1, 0, v2634, v2635, v2636, v2637, v2638, 3, 4) -> f_935(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2633, 1, 0, v4275, v2634, v2635, v2636, v2637, v2638, 3, 4) :|: v4275 = 1 + v2633
f_935(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2633, 1, 0, v4275, v2634, v2635, v2636, v2637, v2638, 3, 4) -> f_943(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2633, 1, 0, v4275, v2634, v2635, v2636, v2637, v2638, 3, 4) :|: TRUE
f_943(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2633, 1, 0, v4275, v2634, v2635, v2636, v2637, v2638, 3, 4) -> f_951(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2633, 1, 0, v4275, v2634, v2635, v2636, v2637, v2638, 3, 4) :|: TRUE
f_951(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2633, 1, 0, v4275, v2634, v2635, v2636, v2637, v2638, 3, 4) -> f_756(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2633, 1, 0, v4275, v2634, v2635, v2636, v2637, v2638, 3, 4) :|: TRUE
f_756(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2630, 1, 0, v2633, v2634, v2635, v2636, v2637, v2638, 3, 4) -> f_763(v2621, v2622, v2623, v2624, v2625, v2626, v2627, v2628, v2629, v2630, 1, 0, v2633, v2634, v2635, v2636, v2637, v2638, 3, 4) :|: TRUE
Combined rules. Obtained 1 rulesP rules:
f_763(v2621:0, v2622:0, v2623:0, v2624:0, v2625:0, v2626:0, v2627:0, v2628:0, v2629:0, v2630:0, 1, 0, v2633:0, v2634:0, v2635:0, v2636:0, v2637:0, v2638:0, 3, 4) -> f_763(v2621:0, v2622:0, v2623:0, v2624:0, v2625:0, v2626:0, v2627:0, v2628:0, v2629:0, v2633:0, 1, 0, 1 + v2633:0, v2634:0, v2635:0, v2636:0, v2637:0, v2638:0, 3, 4) :|: v2633:0 <= v2628:0
Filtered unneeded arguments:
   f_763(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20) -> f_763(x8, x13)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_763(v2628:0, v2633:0) -> f_763(v2628:0, 1 + v2633:0) :|: v2633:0 <= v2628:0

----------------------------------------

(57)
Obligation:
Rules:
f_763(v2628:0, v2633:0) -> f_763(v2628:0, 1 + v2633:0) :|: v2633:0 <= v2628:0

----------------------------------------

(58) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_763 ] = -1*f_763_2 + f_763_1

The following rules are decreasing:
f_763(v2628:0, v2633:0) -> f_763(v2628:0, 1 + v2633:0) :|: v2633:0 <= v2628:0

The following rules are bounded:
f_763(v2628:0, v2633:0) -> f_763(v2628:0, 1 + v2633:0) :|: v2633:0 <= v2628:0


----------------------------------------

(59)
YES
Graph finished, checking  consistency
Graph finished, checked consistency, took 0.001s
