YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/OJzsQ.c
# AProVE Commit ID: 48c83ccb80d5f8312cb92f4aa1b51dc35e247e65 nils 20241118 unpublished


Termination of the given C Problem could be proven:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 21 ms]
(2) LLVM problem
(3) LLVMToTerminationGraphProof [EQUIVALENT, 5421 ms]
(4) LLVM Symbolic Execution Graph
(5) SymbolicExecutionGraphToSCCProof [SOUND, 0 ms]
(6) AND
    (7) LLVM Symbolic Execution SCC
        (8) SCC2IRS [SOUND, 87 ms]
        (9) IntTRS
        (10) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (11) IntTRS
        (12) RankingReductionPairProof [EQUIVALENT, 5 ms]
        (13) IntTRS
        (14) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (15) IntTRS
        (16) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
        (17) IntTRS
        (18) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (19) IntTRS
        (20) TerminationGraphProcessor [EQUIVALENT, 2 ms]
        (21) YES
    (22) LLVM Symbolic Execution SCC
        (23) SCC2IRS [SOUND, 21 ms]
        (24) IntTRS
        (25) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (26) IntTRS
        (27) RankingReductionPairProof [EQUIVALENT, 10 ms]
        (28) YES
    (29) LLVM Symbolic Execution SCC
        (30) SCC2IRS [SOUND, 60 ms]
        (31) IntTRS
        (32) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (33) IntTRS
        (34) RankingReductionPairProof [EQUIVALENT, 8 ms]
        (35) IntTRS
        (36) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (37) IntTRS
        (38) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
        (39) IntTRS
        (40) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (41) YES
    (42) LLVM Symbolic Execution SCC
        (43) SCC2IRS [SOUND, 62 ms]
        (44) IntTRS
        (45) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (46) IntTRS
        (47) RankingReductionPairProof [EQUIVALENT, 13 ms]
        (48) IntTRS
        (49) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
        (50) IntTRS
        (51) RankingReductionPairProof [EQUIVALENT, 26 ms]
        (52) YES
    (53) LLVM Symbolic Execution SCC
        (54) SCC2IRS [SOUND, 30 ms]
        (55) IntTRS
        (56) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (57) IntTRS
        (58) RankingReductionPairProof [EQUIVALENT, 2 ms]
        (59) YES
    (60) LLVM Symbolic Execution SCC
        (61) SCC2IRS [SOUND, 23 ms]
        (62) IntTRS
        (63) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (64) IntTRS
        (65) RankingReductionPairProof [EQUIVALENT, 2 ms]
        (66) YES
    (67) LLVM Symbolic Execution SCC
        (68) SCC2IRS [SOUND, 25 ms]
        (69) IntTRS
        (70) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (71) IntTRS
        (72) RankingReductionPairProof [EQUIVALENT, 2 ms]
        (73) YES


----------------------------------------

(0)
Obligation:
c file /hpcwork/ff862203/termcomp25/benchmarks/OJzsQ.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /hpcwork/ff862203/termcomp25/benchmarks/OJzsQ.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-pc-linux-gnu"

Type definitions:

Global variables:

Function declarations and definitions:

*BasicFunctionTypename: "llvm.dbg.declare" returnParam: BasicVoidType parameters: (BasicMetadataType, BasicMetadataType, BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_nondet_int" returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 7
	0:
		%1 = alloca i32, align 4
		%2 = alloca i32, align 4
		%3 = alloca i32, align 4
		store 0, %1
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %2)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %3)
		%4 = call i32 @__VERIFIER_nondet_int()
		store %4, %2
		%5 = call i32 @__VERIFIER_nondet_int()
		store %5, %3
		br %6
	6:
		%7 = load %2
		%8 = icmp slt %7 30
		br %8, %9, %41
	9:
		br %10
	10:
		%11 = load %3
		%12 = load %2
		%13 = icmp slt %11 %12
		br %13, %14, %36
	14:
		%15 = load %3
		%16 = icmp sgt %15 5
		br %16, %17, %20
	17:
		%18 = load %3
		%19 = add i32 %18, 7
		store %19, %3
		br %23
	20:
		%21 = load %3
		%22 = add i32 %21, 2
		store %22, %3
		br %23
	23:
		%24 = load %3
		%25 = icmp sge %24 10
		br %25, %26, %32
	26:
		%27 = load %3
		%28 = icmp sle %27 12
		br %28, %29, %32
	29:
		%30 = load %2
		%31 = add i32 %30, 10
		store %31, %2
		br %35
	32:
		%33 = load %2
		%34 = add i32 %33, 1
		store %34, %2
		br %35
	35:
		br %10
	36:
		%37 = load %2
		%38 = add i32 %37, 2
		store %38, %2
		%39 = load %3
		%40 = sub i32 %39, 10
		store %40, %3
		br %6
	41:
		ret 0


Analyze Termination of all function calls matching the pattern:
main()
----------------------------------------

(3) LLVMToTerminationGraphProof (EQUIVALENT)
Constructed symbolic execution graph for LLVM program.
----------------------------------------

(4)
Obligation:
Symbolic Execution Graph
----------------------------------------

(5) SymbolicExecutionGraphToSCCProof (SOUND)
Splitted symbolic execution graph to 7 SCCs.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
SCC
----------------------------------------

(8) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 93 rulesP rules:
f_1639(v11588, v11589, v11590, v11591, v11592, v11593, 1, v11595, v11596, v11597, v11598, v11599, v11600, v11601, v11602, v11603, v11604, v11605, 0, v11607, v11608, v11609, 3, 2, 10, 7, 29, 6, 25, 4, 5, 13, 32, 8, 27, 38, 28) -> f_1728(v11588, v11589, v11590, v11591, v11592, v11593, 1, v11595, v11596, v11597, v11598, v11599, v11600, v11601, v11602, v11603, v11604, v11605, 0, v11607, v11608, v11609, 3, 2, 10, 7, 29, 6, 4, 5, 13, 8, 27, 38, 28) :|: TRUE
f_1728(v13343, v13344, v13345, v13346, v13347, v13348, 1, v13350, v13351, v13352, v13353, v13354, v13355, v13356, v13357, v13358, v13359, v13360, 0, v13362, v13363, v13364, 3, 2, 10, 7, 29, 6, 4, 5, 13, 8, 27, 38, 28) -> f_1732(v13343, v13344, v13345, v13346, v13347, v13348, 1, v13350, v13351, v13353, v13354, v13355, v13356, v13357, v13358, v13359, v13360, v13352, 0, v13362, v13363, v13364, 3, 2, 10, 7, 29, 6, 4, 5, 13, 8, 27, 38, 28) :|: 0 = 0
f_1732(v13343, v13344, v13345, v13346, v13347, v13348, 1, v13350, v13351, v13353, v13354, v13355, v13356, v13357, v13358, v13359, v13360, v13352, 0, v13362, v13363, v13364, 3, 2, 10, 7, 29, 6, 4, 5, 13, 8, 27, 38, 28) -> f_1736(v13343, v13344, v13345, v13346, v13347, v13348, 1, v13350, v13351, v13353, v13354, v13355, v13356, v13357, v13358, v13359, v13360, v13352, 0, v13362, v13363, v13364, 3, 2, 10, 7, 29, 6, 4, 5, 13, 8, 27, 38, 28) :|: 5 < v13350
f_1732(v13343, v13344, v13345, v13346, v13347, v13348, 1, v13350, v13351, v13353, v13354, v13355, v13356, v13357, v13358, v13359, v13360, v13352, 0, v13362, v13363, v13364, 3, 2, 10, 7, 29, 6, 4, 5, 13, 8, 27, 38, 28) -> f_1737(v13343, v13344, v13345, v13346, v13347, v13348, 1, v13350, v13351, v13353, v13354, v13355, v13356, v13357, v13358, v13359, v13360, v13352, 0, v13362, v13363, v13364, 3, 2, 10, 7, 29, 5, 6, 4, 13, 8, 27, 38, 28) :|: v13350 <= 5
f_1736(v13343, v13344, v13345, v13346, v13347, v13348, 1, v13350, v13351, v13353, v13354, v13355, v13356, v13357, v13358, v13359, v13360, v13352, 0, v13362, v13363, v13364, 3, 2, 10, 7, 29, 6, 4, 5, 13, 8, 27, 38, 28) -> f_1741(v13343, v13344, v13345, v13346, v13347, v13348, 1, v13350, v13351, v13353, v13354, v13355, v13356, v13357, v13358, v13359, v13360, v13352, 0, v13362, v13363, v13364, 3, 2, 10, 7, 29, 6, 4, 5, 13, 8, 27, 38, 28) :|: 0 = 0
f_1741(v13343, v13344, v13345, v13346, v13347, v13348, 1, v13350, v13351, v13353, v13354, v13355, v13356, v13357, v13358, v13359, v13360, v13352, 0, v13362, v13363, v13364, 3, 2, 10, 7, 29, 6, 4, 5, 13, 8, 27, 38, 28) -> f_1746(v13343, v13344, v13345, v13346, v13347, v13348, 1, v13350, v13351, v13353, v13354, v13355, v13356, v13357, v13358, v13359, v13360, v13352, 0, v13362, v13363, v13364, 3, 2, 10, 7, 29, 6, 4, 5, 13, 8, 27, 38, 28) :|: TRUE
f_1746(v13343, v13344, v13345, v13346, v13347, v13348, 1, v13350, v13351, v13353, v13354, v13355, v13356, v13357, v13358, v13359, v13360, v13352, 0, v13362, v13363, v13364, 3, 2, 10, 7, 29, 6, 4, 5, 13, 8, 27, 38, 28) -> f_1751(v13343, v13344, v13345, v13346, v13347, v13348, 1, v13350, v13351, v13353, v13354, v13355, v13356, v13357, v13358, v13359, v13360, 0, v13362, v13363, v13364, 3, 2, 10, 7, 29, 6, 4, 5, 13, 8, 27, 38, 28) :|: 0 = 0
f_1751(v13343, v13344, v13345, v13346, v13347, v13348, 1, v13350, v13351, v13353, v13354, v13355, v13356, v13357, v13358, v13359, v13360, 0, v13362, v13363, v13364, 3, 2, 10, 7, 29, 6, 4, 5, 13, 8, 27, 38, 28) -> f_1756(v13343, v13344, v13345, v13346, v13347, v13348, 1, v13350, v13351, v13353, v13354, v13355, v13356, v13357, v13358, v13359, v13360, v13632, 0, v13362, v13363, v13364, 3, 2, 10, 7, 29, 6, 4, 5, 13, 8, 27, 38, 28) :|: v13632 = 7 + v13350 && 13 <= v13632
f_1756(v13343, v13344, v13345, v13346, v13347, v13348, 1, v13350, v13351, v13353, v13354, v13355, v13356, v13357, v13358, v13359, v13360, v13632, 0, v13362, v13363, v13364, 3, 2, 10, 7, 29, 6, 4, 5, 13, 8, 27, 38, 28) -> f_1761(v13343, v13344, v13345, v13346, v13347, v13348, 1, v13350, v13351, v13353, v13354, v13355, v13356, v13357, v13358, v13359, v13360, v13632, 0, v13362, v13363, v13364, 3, 2, 10, 7, 29, 6, 4, 5, 13, 8, 27, 38, 28) :|: TRUE
f_1761(v13343, v13344, v13345, v13346, v13347, v13348, 1, v13350, v13351, v13353, v13354, v13355, v13356, v13357, v13358, v13359, v13360, v13632, 0, v13362, v13363, v13364, 3, 2, 10, 7, 29, 6, 4, 5, 13, 8, 27, 38, 28) -> f_1766(v13343, v13344, v13345, v13346, v13347, v13348, 1, v13350, v13351, v13353, v13354, v13355, v13356, v13357, v13358, v13359, v13360, v13632, 0, v13362, v13363, v13364, 3, 2, 10, 7, 29, 6, 4, 5, 13, 8, 27, 38, 28) :|: TRUE
f_1766(v13343, v13344, v13345, v13346, v13347, v13348, 1, v13350, v13351, v13353, v13354, v13355, v13356, v13357, v13358, v13359, v13360, v13632, 0, v13362, v13363, v13364, 3, 2, 10, 7, 29, 6, 4, 5, 13, 8, 27, 38, 28) -> f_1770(v13343, v13344, v13345, v13346, v13347, v13348, 1, v13350, v13351, v13353, v13354, v13632, v13356, v13357, v13358, v13359, v13360, v13355, 0, v13362, v13363, v13364, 3, 2, 10, 7, 29, 6, 4, 5, 13, 8, 27, 38, 28) :|: 0 = 0
f_1770(v13343, v13344, v13345, v13346, v13347, v13348, 1, v13350, v13351, v13353, v13354, v13632, v13356, v13357, v13358, v13359, v13360, v13355, 0, v13362, v13363, v13364, 3, 2, 10, 7, 29, 6, 4, 5, 13, 8, 27, 38, 28) -> f_1775(v13343, v13344, v13345, v13346, v13347, v13348, 1, v13350, v13351, v13353, v13354, v13632, v13356, v13357, v13358, v13359, v13360, v13355, 0, v13362, v13363, v13364, 3, 2, 10, 7, 29, 6, 4, 5, 13, 8, 27, 38, 28) :|: 0 = 0
f_1775(v13343, v13344, v13345, v13346, v13347, v13348, 1, v13350, v13351, v13353, v13354, v13632, v13356, v13357, v13358, v13359, v13360, v13355, 0, v13362, v13363, v13364, 3, 2, 10, 7, 29, 6, 4, 5, 13, 8, 27, 38, 28) -> f_1780(v13343, v13344, v13345, v13346, v13347, v13348, 1, v13350, v13351, v13353, v13354, v13632, v13356, v13357, v13358, v13359, v13360, v13355, 0, v13362, v13363, v13364, 3, 2, 10, 7, 29, 6, 4, 5, 13, 8, 27, 38, 28) :|: TRUE
f_1780(v13343, v13344, v13345, v13346, v13347, v13348, 1, v13350, v13351, v13353, v13354, v13632, v13356, v13357, v13358, v13359, v13360, v13355, 0, v13362, v13363, v13364, 3, 2, 10, 7, 29, 6, 4, 5, 13, 8, 27, 38, 28) -> f_1781(v13343, v13344, v13345, v13346, v13347, v13348, 1, v13350, v13351, v13358, v13359, v13360, v13632, v13355, 0, v13356, v13357, v13353, v13354, v13362, v13363, v13364, 3, 2, 10, 7, 29, 6, 27, 38, 28, 13, 8, 4, 5) :|: TRUE
f_1781(v14186, v14187, v14188, v14189, v14190, v14191, 1, v14193, v14194, v14195, v14196, v14197, v14198, v14199, 0, v14201, v14202, v14203, v14204, v14205, v14206, v14207, 3, 2, 10, 7, 29, 6, 27, 38, 28, 13, 8, 4, 5) -> f_1785(v14186, v14187, v14188, v14189, v14190, v14191, 1, v14193, v14194, v14195, v14196, v14197, v14198, 0, v14201, v14202, v14203, v14204, v14205, v14206, v14207, 3, 2, 10, 7, 29, 6, 27, 38, 28, 13, 8, 4, 5) :|: 0 = 0
f_1785(v14186, v14187, v14188, v14189, v14190, v14191, 1, v14193, v14194, v14195, v14196, v14197, v14198, 0, v14201, v14202, v14203, v14204, v14205, v14206, v14207, 3, 2, 10, 7, 29, 6, 27, 38, 28, 13, 8, 4, 5) -> f_1787(v14186, v14187, v14188, v14189, v14190, v14191, 1, v14193, v14194, v14195, v14196, v14197, v14198, 0, v14201, v14202, v14203, v14204, v14205, v14206, v14207, 3, 2, 10, 7, 29, 6, 27, 38, 28, 13, 8, 4, 5) :|: 0 = 0
f_1787(v14186, v14187, v14188, v14189, v14190, v14191, 1, v14193, v14194, v14195, v14196, v14197, v14198, 0, v14201, v14202, v14203, v14204, v14205, v14206, v14207, 3, 2, 10, 7, 29, 6, 27, 38, 28, 13, 8, 4, 5) -> f_1788(v14186, v14187, v14188, v14189, v14190, v14191, 1, v14193, v14194, v14195, v14196, v14197, v14198, 0, v14201, v14202, v14203, v14204, v14205, v14206, v14207, 3, 2, 10, 7, 29, 6, 27, 38, 28, 13, 8, 4, 5) :|: TRUE
f_1788(v14186, v14187, v14188, v14189, v14190, v14191, 1, v14193, v14194, v14195, v14196, v14197, v14198, 0, v14201, v14202, v14203, v14204, v14205, v14206, v14207, 3, 2, 10, 7, 29, 6, 27, 38, 28, 13, 8, 4, 5) -> f_1789(v14186, v14187, v14188, v14189, v14190, v14191, 1, v14193, v14194, v14203, v14204, v14198, v14201, v14202, v14195, v14196, v14197, 0, v14205, v14206, v14207, 3, 2, 10, 7, 29, 6, 4, 5, 13, 27, 38, 28) :|: TRUE
f_1789(v14609, v14610, v14611, v14612, v14613, v14614, 1, v14616, v14617, v14618, v14619, v14620, v14621, v14622, v14623, v14624, v14625, 0, v14627, v14628, v14629, 3, 2, 10, 7, 29, 6, 4, 5, 13, 27, 38, 28) -> f_1790(v14609, v14610, v14611, v14612, v14613, v14614, 1, v14616, v14617, v14618, v14619, v14620, v14622, v14623, v14624, v14625, 0, v14627, v14628, v14629, 3, 2, 10, 7, 29, 6, 4, 5, 13, 27, 38, 28) :|: 0 = 0
f_1790(v14609, v14610, v14611, v14612, v14613, v14614, 1, v14616, v14617, v14618, v14619, v14620, v14622, v14623, v14624, v14625, 0, v14627, v14628, v14629, 3, 2, 10, 7, 29, 6, 4, 5, 13, 27, 38, 28) -> f_1791(v14609, v14610, v14611, v14612, v14613, v14614, 1, v14616, v14617, v14618, v14619, v14620, v14630, v14623, v14624, v14625, 0, v14627, v14628, v14629, 3, 2, 10, 7, 29, 6, 4, 5, 13, 27, 38, 28, 8) :|: v14630 = 1 + v14617 && 8 <= v14630
f_1791(v14609, v14610, v14611, v14612, v14613, v14614, 1, v14616, v14617, v14618, v14619, v14620, v14630, v14623, v14624, v14625, 0, v14627, v14628, v14629, 3, 2, 10, 7, 29, 6, 4, 5, 13, 27, 38, 28, 8) -> f_1792(v14609, v14610, v14611, v14612, v14613, v14614, 1, v14616, v14617, v14618, v14619, v14620, v14630, v14623, v14624, v14625, 0, v14627, v14628, v14629, 3, 2, 10, 7, 29, 6, 4, 5, 13, 27, 38, 28, 8) :|: TRUE
f_1792(v14609, v14610, v14611, v14612, v14613, v14614, 1, v14616, v14617, v14618, v14619, v14620, v14630, v14623, v14624, v14625, 0, v14627, v14628, v14629, 3, 2, 10, 7, 29, 6, 4, 5, 13, 27, 38, 28, 8) -> f_1793(v14609, v14610, v14611, v14612, v14613, v14614, 1, v14616, v14617, v14618, v14619, v14620, v14630, v14623, v14624, v14625, 0, v14627, v14628, v14629, 3, 2, 10, 7, 29, 6, 4, 5, 13, 27, 38, 28, 8) :|: TRUE
f_1793(v14609, v14610, v14611, v14612, v14613, v14614, 1, v14616, v14617, v14618, v14619, v14620, v14630, v14623, v14624, v14625, 0, v14627, v14628, v14629, 3, 2, 10, 7, 29, 6, 4, 5, 13, 27, 38, 28, 8) -> f_1794(v14609, v14610, v14611, v14612, v14613, v14614, 1, v14616, v14617, v14618, v14619, v14620, v14630, v14623, v14624, v14625, 0, v14627, v14628, v14629, 3, 2, 10, 7, 29, 6, 4, 5, 13, 27, 38, 28, 8) :|: TRUE
f_1794(v14609, v14610, v14611, v14612, v14613, v14614, 1, v14616, v14617, v14618, v14619, v14620, v14630, v14623, v14624, v14625, 0, v14627, v14628, v14629, 3, 2, 10, 7, 29, 6, 4, 5, 13, 27, 38, 28, 8) -> f_1795(v14609, v14610, v14611, v14612, v14613, v14614, 1, v14620, v14617, v14616, v14618, v14619, v14630, v14623, v14624, v14625, 0, v14627, v14628, v14629, 3, 2, 10, 7, 29, 6, 4, 5, 13, 27, 38, 28, 8) :|: 0 = 0
f_1795(v14609, v14610, v14611, v14612, v14613, v14614, 1, v14620, v14617, v14616, v14618, v14619, v14630, v14623, v14624, v14625, 0, v14627, v14628, v14629, 3, 2, 10, 7, 29, 6, 4, 5, 13, 27, 38, 28, 8) -> f_1796(v14609, v14610, v14611, v14612, v14613, v14614, 1, v14620, v14630, v14616, v14618, v14619, v14617, v14623, v14624, v14625, 0, v14627, v14628, v14629, 3, 2, 10, 7, 29, 6, 4, 5, 13, 27, 38, 28, 8) :|: 0 = 0
f_1796(v14609, v14610, v14611, v14612, v14613, v14614, 1, v14620, v14630, v14616, v14618, v14619, v14617, v14623, v14624, v14625, 0, v14627, v14628, v14629, 3, 2, 10, 7, 29, 6, 4, 5, 13, 27, 38, 28, 8) -> f_1797(v14609, v14610, v14611, v14612, v14613, v14614, 1, v14620, v14630, v14616, v14618, v14619, v14617, v14623, v14624, v14625, 0, v14627, v14628, v14629, 3, 2, 10, 7, 29, 6, 13, 4, 5, 27, 38, 28, 14) :|: v14620 < v14630 && 14 <= v14630 && 13 <= v14617
f_1796(v14609, v14610, v14611, v14612, v14613, v14614, 1, v14620, v14630, v14616, v14618, v14619, v14617, v14623, v14624, v14625, 0, v14627, v14628, v14629, 3, 2, 10, 7, 29, 6, 4, 5, 13, 27, 38, 28, 8) -> f_1798(v14609, v14610, v14611, v14612, v14613, v14614, 1, v14620, v14630, v14616, v14618, v14619, v14617, v14623, v14624, v14625, 0, v14627, v14628, v14629, 3, 2, 10, 7, 29, 6, 4, 5, 13, 27, 38, 28, 8) :|: v14630 <= v14620
f_1797(v14609, v14610, v14611, v14612, v14613, v14614, 1, v14620, v14630, v14616, v14618, v14619, v14617, v14623, v14624, v14625, 0, v14627, v14628, v14629, 3, 2, 10, 7, 29, 6, 13, 4, 5, 27, 38, 28, 14) -> f_1799(v14609, v14610, v14611, v14612, v14613, v14614, 1, v14620, v14630, v14616, v14618, v14619, v14617, v14623, v14624, v14625, 0, v14627, v14628, v14629, 3, 2, 10, 7, 29, 6, 13, 4, 5, 27, 38, 28, 14) :|: 0 = 0
f_1799(v14609, v14610, v14611, v14612, v14613, v14614, 1, v14620, v14630, v14616, v14618, v14619, v14617, v14623, v14624, v14625, 0, v14627, v14628, v14629, 3, 2, 10, 7, 29, 6, 13, 4, 5, 27, 38, 28, 14) -> f_1801(v14609, v14610, v14611, v14612, v14613, v14614, 1, v14620, v14630, v14616, v14618, v14619, v14617, v14623, v14624, v14625, 0, v14627, v14628, v14629, 3, 2, 10, 7, 29, 6, 13, 4, 5, 27, 38, 28, 14) :|: TRUE
f_1801(v14609, v14610, v14611, v14612, v14613, v14614, 1, v14620, v14630, v14616, v14618, v14619, v14617, v14623, v14624, v14625, 0, v14627, v14628, v14629, 3, 2, 10, 7, 29, 6, 13, 4, 5, 27, 38, 28, 14) -> f_1728(v14609, v14610, v14611, v14612, v14613, v14614, 1, v14620, v14630, v14616, v14618, v14619, v14620, v14617, v14630, v14623, v14624, v14625, 0, v14627, v14628, v14629, 3, 2, 10, 7, 29, 6, 4, 5, 13, 8, 27, 38, 28) :|: TRUE
f_1798(v14609, v14610, v14611, v14612, v14613, v14614, 1, v14620, v14630, v14616, v14618, v14619, v14617, v14623, v14624, v14625, 0, v14627, v14628, v14629, 3, 2, 10, 7, 29, 6, 4, 5, 13, 27, 38, 28, 8) -> f_1800(v14609, v14610, v14611, v14612, v14613, v14614, 1, v14620, v14630, 0, v14616, v14618, v14619, v14617, v14623, v14624, v14625, v14627, v14628, v14629, 3, 2, 10, 7, 29, 6, 4, 5, 13, 27, 38, 28, 8) :|: 0 = 0
f_1800(v14609, v14610, v14611, v14612, v14613, v14614, 1, v14620, v14630, 0, v14616, v14618, v14619, v14617, v14623, v14624, v14625, v14627, v14628, v14629, 3, 2, 10, 7, 29, 6, 4, 5, 13, 27, 38, 28, 8) -> f_1802(v14609, v14610, v14611, v14612, v14613, v14614, 1, v14620, v14630, 0, v14616, v14618, v14619, v14617, v14623, v14624, v14625, v14627, v14628, v14629, 3, 2, 10, 7, 29, 6, 4, 5, 13, 27, 38, 28, 8) :|: TRUE
f_1802(v14609, v14610, v14611, v14612, v14613, v14614, 1, v14620, v14630, 0, v14616, v14618, v14619, v14617, v14623, v14624, v14625, v14627, v14628, v14629, 3, 2, 10, 7, 29, 6, 4, 5, 13, 27, 38, 28, 8) -> f_1803(v14609, v14610, v14611, v14612, v14613, v14614, 1, v14620, v14630, 0, v14616, v14618, v14619, v14617, v14624, v14625, v14627, v14628, v14629, 3, 2, 10, 7, 12, 29, 6, 4, 5, 13, 38, 28, 8) :|: 0 = 0
f_1803(v14609, v14610, v14611, v14612, v14613, v14614, 1, v14620, v14630, 0, v14616, v14618, v14619, v14617, v14624, v14625, v14627, v14628, v14629, 3, 2, 10, 7, 12, 29, 6, 4, 5, 13, 38, 28, 8) -> f_1804(v14609, v14610, v14611, v14612, v14613, v14614, 1, v14620, v14630, 0, v14616, v14618, v14619, v14617, v14849, v14624, v14625, v14627, v14628, v14629, 3, 2, 10, 7, 12, 29, 6, 4, 5, 13, 38, 28, 8) :|: v14849 = 2 + v14630 && 10 <= v14849
f_1804(v14609, v14610, v14611, v14612, v14613, v14614, 1, v14620, v14630, 0, v14616, v14618, v14619, v14617, v14849, v14624, v14625, v14627, v14628, v14629, 3, 2, 10, 7, 12, 29, 6, 4, 5, 13, 38, 28, 8) -> f_1805(v14609, v14610, v14611, v14612, v14613, v14614, 1, v14620, v14630, 0, v14616, v14618, v14619, v14617, v14849, v14624, v14625, v14627, v14628, v14629, 3, 2, 10, 7, 12, 29, 6, 4, 5, 13, 38, 28, 8) :|: TRUE
f_1805(v14609, v14610, v14611, v14612, v14613, v14614, 1, v14620, v14630, 0, v14616, v14618, v14619, v14617, v14849, v14624, v14625, v14627, v14628, v14629, 3, 2, 10, 7, 12, 29, 6, 4, 5, 13, 38, 28, 8) -> f_1806(v14609, v14610, v14611, v14612, v14613, v14614, 1, v14620, v14630, 0, v14616, v14618, v14619, v14617, v14849, v14625, v14627, v14628, v14629, 3, 2, 7, 12, 29, 6, 4, 5, 13, 28, 8, 10) :|: 0 = 0
f_1806(v14609, v14610, v14611, v14612, v14613, v14614, 1, v14620, v14630, 0, v14616, v14618, v14619, v14617, v14849, v14625, v14627, v14628, v14629, 3, 2, 7, 12, 29, 6, 4, 5, 13, 28, 8, 10) -> f_1807(v14609, v14610, v14611, v14612, v14613, v14614, 1, v14620, v14630, 0, v14616, v14618, v14619, v14617, v14849, v14851, v14627, v14628, v14629, 3, 2, 7, 10, 29, 6, 4, 5, 13, 8) :|: 10 + v14851 = v14620 && 3 <= v14851
f_1807(v14609, v14610, v14611, v14612, v14613, v14614, 1, v14620, v14630, 0, v14616, v14618, v14619, v14617, v14849, v14851, v14627, v14628, v14629, 3, 2, 7, 10, 29, 6, 4, 5, 13, 8) -> f_1808(v14609, v14610, v14611, v14612, v14613, v14614, 1, v14620, v14630, 0, v14616, v14618, v14619, v14617, v14849, v14851, v14627, v14628, v14629, 3, 2, 7, 10, 29, 6, 4, 5, 13, 8) :|: TRUE
f_1808(v14609, v14610, v14611, v14612, v14613, v14614, 1, v14620, v14630, 0, v14616, v14618, v14619, v14617, v14849, v14851, v14627, v14628, v14629, 3, 2, 7, 10, 29, 6, 4, 5, 13, 8) -> f_1809(v14609, v14610, v14611, v14612, v14613, v14614, 1, v14620, v14630, 0, v14616, v14618, v14619, v14617, v14849, v14851, v14627, v14628, v14629, 3, 2, 7, 10, 29, 6, 4, 5, 13, 8) :|: TRUE
f_1809(v14609, v14610, v14611, v14612, v14613, v14614, 1, v14620, v14630, 0, v14616, v14618, v14619, v14617, v14849, v14851, v14627, v14628, v14629, 3, 2, 7, 10, 29, 6, 4, 5, 13, 8) -> f_1810(v14609, v14610, v14611, v14612, v14613, v14849, 1, v14620, v14630, 0, v14616, v14618, v14619, v14617, v14851, v14627, v14628, v14629, 3, 2, 7, 10, 29, 6, 4, 5, 13, 8) :|: 0 = 0
f_1810(v14609, v14610, v14611, v14612, v14613, v14849, 1, v14620, v14630, 0, v14616, v14618, v14619, v14617, v14851, v14627, v14628, v14629, 3, 2, 7, 10, 29, 6, 4, 5, 13, 8) -> f_1811(v14609, v14610, v14611, v14612, v14613, v14849, 1, v14620, v14630, 0, v14616, v14618, v14619, v14617, v14851, v14627, v14628, v14629, 3, 2, 7, 10, 29, 6, 25, 26, 4, 5, 13, 32, 8, 27, 22) :|: v14849 < 30 && v14630 <= 27 && v14617 <= 26 && v14616 <= 25 && v14620 <= 32 && v14851 <= 22
f_1811(v14609, v14610, v14611, v14612, v14613, v14849, 1, v14620, v14630, 0, v14616, v14618, v14619, v14617, v14851, v14627, v14628, v14629, 3, 2, 7, 10, 29, 6, 25, 26, 4, 5, 13, 32, 8, 27, 22) -> f_1813(v14609, v14610, v14611, v14612, v14613, v14849, 1, v14620, v14630, 0, v14616, v14618, v14619, v14617, v14851, v14627, v14628, v14629, 3, 2, 7, 10, 29, 6, 25, 26, 4, 5, 13, 32, 8, 27, 22) :|: 0 = 0
f_1813(v14609, v14610, v14611, v14612, v14613, v14849, 1, v14620, v14630, 0, v14616, v14618, v14619, v14617, v14851, v14627, v14628, v14629, 3, 2, 7, 10, 29, 6, 25, 26, 4, 5, 13, 32, 8, 27, 22) -> f_1815(v14609, v14610, v14611, v14612, v14613, v14849, 1, v14620, v14630, 0, v14616, v14618, v14619, v14617, v14851, v14627, v14628, v14629, 3, 2, 7, 10, 29, 6, 25, 26, 4, 5, 13, 32, 8, 27, 22) :|: TRUE
f_1815(v14609, v14610, v14611, v14612, v14613, v14849, 1, v14620, v14630, 0, v14616, v14618, v14619, v14617, v14851, v14627, v14628, v14629, 3, 2, 7, 10, 29, 6, 25, 26, 4, 5, 13, 32, 8, 27, 22) -> f_1817(v14609, v14610, v14611, v14612, v14613, v14849, 1, v14620, v14630, 0, v14616, v14618, v14619, v14617, v14851, v14627, v14628, v14629, 3, 2, 7, 10, 29, 6, 25, 26, 4, 5, 13, 32, 8, 27, 22) :|: TRUE
f_1817(v14609, v14610, v14611, v14612, v14613, v14849, 1, v14620, v14630, 0, v14616, v14618, v14619, v14617, v14851, v14627, v14628, v14629, 3, 2, 7, 10, 29, 6, 25, 26, 4, 5, 13, 32, 8, 27, 22) -> f_1598(v14609, v14610, v14611, v14612, v14613, v14849, 1, v14620, v14630, 0, v14616, v14618, v14619, v14617, v14851, v14627, v14628, v14629, 3, 2, 7, 10, 29, 13, 32, 8, 27, 6, 25, 4, 5, 26, 22) :|: TRUE
f_1598(v10859, v10860, v10861, v10862, v10863, v10864, 1, v10866, v10867, 0, v10869, v10870, v10871, v10872, v10873, v10874, v10875, v10876, 3, 2, 7, 10, 29, 13, 32, 8, 27, 6, 25, 4, 5, 26, 22) -> f_1601(v10859, v10860, v10861, v10862, v10863, v10864, 1, v10873, v10867, 0, v10869, v10870, v10871, v10866, v10872, v10874, v10875, v10876, 3, 2, 7, 10, 29, 13, 32, 8, 27, 6, 25, 4, 5, 26, 22) :|: 0 = 0
f_1601(v10859, v10860, v10861, v10862, v10863, v10864, 1, v10873, v10867, 0, v10869, v10870, v10871, v10866, v10872, v10874, v10875, v10876, 3, 2, 7, 10, 29, 13, 32, 8, 27, 6, 25, 4, 5, 26, 22) -> f_1604(v10859, v10860, v10861, v10862, v10863, v10864, 1, v10873, 0, v10869, v10870, v10871, v10866, v10872, v10867, v10874, v10875, v10876, 3, 2, 7, 10, 29, 13, 32, 8, 27, 6, 25, 4, 5, 26, 22) :|: 0 = 0
f_1604(v10859, v10860, v10861, v10862, v10863, v10864, 1, v10873, 0, v10869, v10870, v10871, v10866, v10872, v10867, v10874, v10875, v10876, 3, 2, 7, 10, 29, 13, 32, 8, 27, 6, 25, 4, 5, 26, 22) -> f_1607(v10859, v10860, v10861, v10862, v10863, v10864, 1, v10873, v10869, v10870, v10871, v10866, v10872, v10867, 0, v10874, v10875, v10876, 3, 2, 7, 10, 29, 13, 32, 8, 27, 6, 25, 4, 5, 26, 22) :|: 0 = 0
f_1607(v10859, v10860, v10861, v10862, v10863, v10864, 1, v10873, v10869, v10870, v10871, v10866, v10872, v10867, 0, v10874, v10875, v10876, 3, 2, 7, 10, 29, 13, 32, 8, 27, 6, 25, 4, 5, 26, 22) -> f_1610(v10859, v10860, v10861, v10862, v10863, v10864, 1, v10873, v10869, v10870, v10871, v10866, v10872, v10867, 0, v10874, v10875, v10876, 3, 2, 7, 10, 29, 13, 32, 8, 27, 6, 25, 4, 5, 26, 22) :|: TRUE
f_1610(v10859, v10860, v10861, v10862, v10863, v10864, 1, v10873, v10869, v10870, v10871, v10866, v10872, v10867, 0, v10874, v10875, v10876, 3, 2, 7, 10, 29, 13, 32, 8, 27, 6, 25, 4, 5, 26, 22) -> f_1553(v10859, v10860, v10861, v10862, v10863, v10864, 1, v10873, v10864, v10869, v10870, v10871, v10866, v10872, v10867, v10867, v10866, v10873, 0, v10874, v10875, v10876, 3, 2, 10, 7, 29, 22, 6, 25, 4, 5, 13, 32, 8, 27) :|: TRUE
f_1553(v9875, v9876, v9877, v9878, v9879, v9880, 1, v9882, v9883, v9884, v9885, v9886, v9887, v9888, v9889, v9890, v9891, v9892, 0, v9894, v9895, v9896, 3, 2, 10, 7, 29, 22, 6, 25, 4, 5, 13, 32, 8, 27) -> f_1639(v9875, v9876, v9877, v9878, v9879, v9880, 1, v9882, v9883, v9884, v9885, v9886, v9887, v9888, v9889, v9890, v9891, v9892, 0, v9894, v9895, v9896, 3, 2, 10, 7, 29, 6, 25, 4, 5, 13, 32, 8, 27, 38, 28) :|: TRUE
f_1737(v13343, v13344, v13345, v13346, v13347, v13348, 1, v13350, v13351, v13353, v13354, v13355, v13356, v13357, v13358, v13359, v13360, v13352, 0, v13362, v13363, v13364, 3, 2, 10, 7, 29, 5, 6, 4, 13, 8, 27, 38, 28) -> f_1742(v13343, v13344, v13345, v13346, v13347, v13348, 1, v13350, v13351, 0, v13353, v13354, v13355, v13356, v13357, v13358, v13359, v13360, v13352, v13362, v13363, v13364, 3, 2, 10, 7, 29, 5, 6, 4, 13, 8, 27, 38, 28) :|: 0 = 0
f_1742(v13343, v13344, v13345, v13346, v13347, v13348, 1, v13350, v13351, 0, v13353, v13354, v13355, v13356, v13357, v13358, v13359, v13360, v13352, v13362, v13363, v13364, 3, 2, 10, 7, 29, 5, 6, 4, 13, 8, 27, 38, 28) -> f_1747(v13343, v13344, v13345, v13346, v13347, v13348, 1, v13350, v13351, 0, v13353, v13354, v13355, v13356, v13357, v13358, v13359, v13360, v13352, v13362, v13363, v13364, 3, 2, 10, 7, 29, 5, 6, 4, 13, 8, 27, 38, 28) :|: TRUE
f_1747(v13343, v13344, v13345, v13346, v13347, v13348, 1, v13350, v13351, 0, v13353, v13354, v13355, v13356, v13357, v13358, v13359, v13360, v13352, v13362, v13363, v13364, 3, 2, 10, 7, 29, 5, 6, 4, 13, 8, 27, 38, 28) -> f_1752(v13343, v13344, v13345, v13346, v13347, v13348, 1, v13350, v13351, 0, v13354, v13355, v13356, v13357, v13358, v13359, v13360, v13352, v13362, v13363, v13364, 3, 2, 10, 7, 29, 5, 6, 13, 8, 27, 38, 28, 4) :|: 0 = 0
f_1752(v13343, v13344, v13345, v13346, v13347, v13348, 1, v13350, v13351, 0, v13354, v13355, v13356, v13357, v13358, v13359, v13360, v13352, v13362, v13363, v13364, 3, 2, 10, 7, 29, 5, 6, 13, 8, 27, 38, 28, 4) -> f_1757(v13343, v13344, v13345, v13346, v13347, v13348, 1, v13350, v13351, 0, v13633, v13355, v13356, v13357, v13358, v13359, v13360, v13352, v13362, v13363, v13364, 3, 2, 10, 7, 29, 5, 6, 13, 8, 27, 38, 28, 4) :|: v13633 = 2 + v13350 && 5 <= v13633 && v13633 <= 7
f_1757(v13343, v13344, v13345, v13346, v13347, v13348, 1, v13350, v13351, 0, v13633, v13355, v13356, v13357, v13358, v13359, v13360, v13352, v13362, v13363, v13364, 3, 2, 10, 7, 29, 5, 6, 13, 8, 27, 38, 28, 4) -> f_1762(v13343, v13344, v13345, v13346, v13347, v13348, 1, v13350, v13351, 0, v13633, v13355, v13356, v13357, v13358, v13359, v13360, v13352, v13362, v13363, v13364, 3, 2, 10, 7, 29, 5, 6, 13, 8, 27, 38, 28, 4) :|: TRUE
f_1762(v13343, v13344, v13345, v13346, v13347, v13348, 1, v13350, v13351, 0, v13633, v13355, v13356, v13357, v13358, v13359, v13360, v13352, v13362, v13363, v13364, 3, 2, 10, 7, 29, 5, 6, 13, 8, 27, 38, 28, 4) -> f_1767(v13343, v13344, v13345, v13346, v13347, v13348, 1, v13350, v13351, 0, v13633, v13355, v13356, v13357, v13358, v13359, v13360, v13352, v13362, v13363, v13364, 3, 2, 10, 7, 29, 5, 6, 13, 8, 27, 38, 28, 4) :|: TRUE
f_1767(v13343, v13344, v13345, v13346, v13347, v13348, 1, v13350, v13351, 0, v13633, v13355, v13356, v13357, v13358, v13359, v13360, v13352, v13362, v13363, v13364, 3, 2, 10, 7, 29, 5, 6, 13, 8, 27, 38, 28, 4) -> f_1771(v13343, v13344, v13345, v13346, v13347, v13348, 1, v13350, v13351, 0, v13633, v13356, v13357, v13358, v13359, v13360, v13352, v13355, v13362, v13363, v13364, 3, 2, 10, 7, 29, 5, 6, 13, 8, 27, 38, 28, 4) :|: 0 = 0
f_1771(v13343, v13344, v13345, v13346, v13347, v13348, 1, v13350, v13351, 0, v13633, v13356, v13357, v13358, v13359, v13360, v13352, v13355, v13362, v13363, v13364, 3, 2, 10, 7, 29, 5, 6, 13, 8, 27, 38, 28, 4) -> f_1776(v13343, v13344, v13345, v13346, v13347, v13348, 1, v13350, v13351, 0, v13633, v13356, v13357, v13358, v13359, v13360, v13352, v13355, v13362, v13363, v13364, 3, 2, 10, 7, 29, 5, 6, 13, 8, 27, 38, 28, 4) :|: 0 = 0
f_1776(v13343, v13344, v13345, v13346, v13347, v13348, 1, v13350, v13351, 0, v13633, v13356, v13357, v13358, v13359, v13360, v13352, v13355, v13362, v13363, v13364, 3, 2, 10, 7, 29, 5, 6, 13, 8, 27, 38, 28, 4) -> f_1782(v13343, v13344, v13345, v13346, v13347, v13348, 1, v13350, v13351, 0, v13633, v13356, v13357, v13358, v13359, v13360, v13352, v13355, v13362, v13363, v13364, 3, 2, 10, 7, 29, 5, 6, 13, 8, 27, 38, 28, 4) :|: TRUE
f_1782(v13343, v13344, v13345, v13346, v13347, v13348, 1, v13350, v13351, 0, v13633, v13356, v13357, v13358, v13359, v13360, v13352, v13355, v13362, v13363, v13364, 3, 2, 10, 7, 29, 5, 6, 13, 8, 27, 38, 28, 4) -> f_1694(v13343, v13344, v13345, v13346, v13347, v13348, 1, v13350, v13351, v13358, v13359, v13360, 0, v13352, v13355, v13633, v13356, v13357, v13362, v13363, v13364, 3, 7, 2, 10, 29, 5, 27, 38, 28, 6, 13, 8, 4) :|: TRUE
f_1694(v12704, v12705, v12706, v12707, v12708, v12709, 1, v12711, v12712, v12713, v12714, v12715, 0, v12717, v12718, v12719, v12720, v12721, v12722, v12723, v12724, 3, 7, 2, 10, 29, 5, 27, 38, 28, 6, 13, 8, 4) -> f_1698(v12704, v12705, v12706, v12707, v12708, v12709, 1, v12711, v12712, v12713, v12714, v12715, 0, v12717, v12718, v12719, v12721, v12722, v12723, v12724, 3, 7, 2, 10, 29, 5, 27, 38, 28, 6, 13, 8, 4) :|: 0 = 0
f_1698(v12704, v12705, v12706, v12707, v12708, v12709, 1, v12711, v12712, v12713, v12714, v12715, 0, v12717, v12718, v12719, v12721, v12722, v12723, v12724, 3, 7, 2, 10, 29, 5, 27, 38, 28, 6, 13, 8, 4) -> f_1701(v12704, v12705, v12706, v12707, v12708, v12709, 1, v12711, v12712, v12713, v12714, v12715, 0, v12717, v12718, v12719, v12904, v12722, v12723, v12724, 3, 7, 2, 10, 29, 5, 27, 38, 28, 6, 13, 4, 11) :|: v12904 = 1 + v12712 && 11 <= v12904
f_1701(v12704, v12705, v12706, v12707, v12708, v12709, 1, v12711, v12712, v12713, v12714, v12715, 0, v12717, v12718, v12719, v12904, v12722, v12723, v12724, 3, 7, 2, 10, 29, 5, 27, 38, 28, 6, 13, 4, 11) -> f_1704(v12704, v12705, v12706, v12707, v12708, v12709, 1, v12711, v12712, v12713, v12714, v12715, 0, v12717, v12718, v12719, v12904, v12722, v12723, v12724, 3, 7, 2, 10, 29, 5, 27, 38, 28, 6, 13, 4, 11) :|: TRUE
f_1704(v12704, v12705, v12706, v12707, v12708, v12709, 1, v12711, v12712, v12713, v12714, v12715, 0, v12717, v12718, v12719, v12904, v12722, v12723, v12724, 3, 7, 2, 10, 29, 5, 27, 38, 28, 6, 13, 4, 11) -> f_1706(v12704, v12705, v12706, v12707, v12708, v12709, 1, v12711, v12712, v12713, v12714, v12715, 0, v12717, v12718, v12719, v12904, v12722, v12723, v12724, 3, 7, 2, 10, 29, 5, 27, 38, 28, 6, 13, 4, 11) :|: TRUE
f_1706(v12704, v12705, v12706, v12707, v12708, v12709, 1, v12711, v12712, v12713, v12714, v12715, 0, v12717, v12718, v12719, v12904, v12722, v12723, v12724, 3, 7, 2, 10, 29, 5, 27, 38, 28, 6, 13, 4, 11) -> f_1708(v12704, v12705, v12706, v12707, v12708, v12709, 1, v12711, v12712, v12713, v12714, v12715, 0, v12717, v12718, v12719, v12904, v12722, v12723, v12724, 3, 7, 2, 10, 29, 5, 27, 38, 28, 6, 13, 4, 11) :|: TRUE
f_1708(v12704, v12705, v12706, v12707, v12708, v12709, 1, v12711, v12712, v12713, v12714, v12715, 0, v12717, v12718, v12719, v12904, v12722, v12723, v12724, 3, 7, 2, 10, 29, 5, 27, 38, 28, 6, 13, 4, 11) -> f_1710(v12704, v12705, v12706, v12707, v12708, v12709, 1, v12719, v12712, v12713, v12714, v12715, v12711, 0, v12717, v12718, v12904, v12722, v12723, v12724, 3, 7, 2, 10, 29, 5, 27, 38, 28, 6, 13, 4, 11) :|: 0 = 0
f_1710(v12704, v12705, v12706, v12707, v12708, v12709, 1, v12719, v12712, v12713, v12714, v12715, v12711, 0, v12717, v12718, v12904, v12722, v12723, v12724, 3, 7, 2, 10, 29, 5, 27, 38, 28, 6, 13, 4, 11) -> f_1712(v12704, v12705, v12706, v12707, v12708, v12709, 1, v12719, v12904, v12713, v12714, v12715, v12711, 0, v12717, v12718, v12712, v12722, v12723, v12724, 3, 7, 2, 10, 29, 5, 27, 38, 28, 6, 13, 4, 11) :|: 0 = 0
f_1712(v12704, v12705, v12706, v12707, v12708, v12709, 1, v12719, v12904, v12713, v12714, v12715, v12711, 0, v12717, v12718, v12712, v12722, v12723, v12724, 3, 7, 2, 10, 29, 5, 27, 38, 28, 6, 13, 4, 11) -> f_1714(v12704, v12705, v12706, v12707, v12708, v12709, 1, v12719, v12904, v12713, v12714, v12715, v12711, 0, v12717, v12718, v12712, v12722, v12723, v12724, 3, 7, 2, 10, 29, 5, 27, 38, 28, 6, 13, 4, 11) :|: 0 = 0
f_1714(v12704, v12705, v12706, v12707, v12708, v12709, 1, v12719, v12904, v12713, v12714, v12715, v12711, 0, v12717, v12718, v12712, v12722, v12723, v12724, 3, 7, 2, 10, 29, 5, 27, 38, 28, 6, 13, 4, 11) -> f_1716(v12704, v12705, v12706, v12707, v12708, v12709, 1, v12719, v12904, v12713, v12714, v12715, v12711, 0, v12717, v12718, v12712, v12722, v12723, v12724, 3, 7, 2, 10, 29, 5, 27, 38, 28, 6, 13, 4, 11) :|: TRUE
f_1716(v12704, v12705, v12706, v12707, v12708, v12709, 1, v12719, v12904, v12713, v12714, v12715, v12711, 0, v12717, v12718, v12712, v12722, v12723, v12724, 3, 7, 2, 10, 29, 5, 27, 38, 28, 6, 13, 4, 11) -> f_1718(v12704, v12705, v12706, v12707, v12708, v12709, 1, v12719, v12904, v12713, v12714, v12715, 0, v12717, v12718, v12712, v12711, v12722, v12723, v12724, 3, 7, 2, 10, 29, 5, 27, 38, 28, 6, 13, 4, 11) :|: 0 = 0
f_1718(v12704, v12705, v12706, v12707, v12708, v12709, 1, v12719, v12904, v12713, v12714, v12715, 0, v12717, v12718, v12712, v12711, v12722, v12723, v12724, 3, 7, 2, 10, 29, 5, 27, 38, 28, 6, 13, 4, 11) -> f_1721(v12704, v12705, v12706, v12707, v12708, v12709, 1, v12719, v12904, v12713, v12714, v12715, 0, v12717, v12718, v12712, v12711, v12722, v12723, v12724, 3, 7, 2, 10, 29, 4, 5, 27, 38, 28, 6, 13, 11) :|: 5 < v12719 && 4 <= v12711
f_1718(v12704, v12705, v12706, v12707, v12708, v12709, 1, v12719, v12904, v12713, v12714, v12715, 0, v12717, v12718, v12712, v12711, v12722, v12723, v12724, 3, 7, 2, 10, 29, 5, 27, 38, 28, 6, 13, 4, 11) -> f_1722(v12704, v12705, v12706, v12707, v12708, v12709, 1, 5, v12904, v12713, v12714, v12715, 0, v12717, v12718, v12712, 3, v12722, v12723, v12724, 7, 2, 10, 29, 27, 38, 28, 6, 13, 4, 11) :|: v12719 <= 5 && v12711 = 3 && v12719 = 5 && 0 = 0
f_1721(v12704, v12705, v12706, v12707, v12708, v12709, 1, v12719, v12904, v12713, v12714, v12715, 0, v12717, v12718, v12712, v12711, v12722, v12723, v12724, 3, 7, 2, 10, 29, 4, 5, 27, 38, 28, 6, 13, 11) -> f_1725(v12704, v12705, v12706, v12707, v12708, v12709, 1, v12719, v12904, v12713, v12714, v12715, v12717, v12718, 0, v12712, v12711, v12722, v12723, v12724, 3, 7, 2, 10, 29, 4, 5, 27, 38, 28, 6, 13, 11) :|: 0 = 0
f_1725(v12704, v12705, v12706, v12707, v12708, v12709, 1, v12719, v12904, v12713, v12714, v12715, v12717, v12718, 0, v12712, v12711, v12722, v12723, v12724, 3, 7, 2, 10, 29, 4, 5, 27, 38, 28, 6, 13, 11) -> f_1730(v12704, v12705, v12706, v12707, v12708, v12709, 1, v12719, v12904, v12713, v12714, v12715, v12717, v12718, 0, v12712, v12711, v12722, v12723, v12724, 3, 7, 2, 10, 29, 4, 5, 27, 38, 28, 6, 13, 11) :|: TRUE
f_1730(v12704, v12705, v12706, v12707, v12708, v12709, 1, v12719, v12904, v12713, v12714, v12715, v12717, v12718, 0, v12712, v12711, v12722, v12723, v12724, 3, 7, 2, 10, 29, 4, 5, 27, 38, 28, 6, 13, 11) -> f_1734(v12704, v12705, v12706, v12707, v12708, v12709, 1, v12719, v12904, v12713, v12714, v12715, v12718, 0, v12712, v12711, v12722, v12723, v12724, 3, 2, 10, 5, 29, 4, 27, 38, 28, 13, 6, 7, 11) :|: 0 = 0
f_1734(v12704, v12705, v12706, v12707, v12708, v12709, 1, v12719, v12904, v12713, v12714, v12715, v12718, 0, v12712, v12711, v12722, v12723, v12724, 3, 2, 10, 5, 29, 4, 27, 38, 28, 13, 6, 7, 11) -> f_1739(v12704, v12705, v12706, v12707, v12708, v12709, 1, v12719, v12904, v12713, v12714, v12715, v13452, 0, v12718, v12712, v12711, v12722, v12723, v12724, 3, 2, 10, 7, 5, 29, 4, 27, 38, 28, 13, 6, 11, 14) :|: v13452 = 7 + v12719 && 13 <= v13452 && v13452 <= 14
f_1739(v12704, v12705, v12706, v12707, v12708, v12709, 1, v12719, v12904, v12713, v12714, v12715, v13452, 0, v12718, v12712, v12711, v12722, v12723, v12724, 3, 2, 10, 7, 5, 29, 4, 27, 38, 28, 13, 6, 11, 14) -> f_1744(v12704, v12705, v12706, v12707, v12708, v12709, 1, v12719, v12904, v12713, v12714, v12715, v13452, 0, v12718, v12712, v12711, v12722, v12723, v12724, 3, 2, 10, 7, 5, 29, 4, 27, 38, 28, 13, 6, 11, 14) :|: TRUE
f_1744(v12704, v12705, v12706, v12707, v12708, v12709, 1, v12719, v12904, v12713, v12714, v12715, v13452, 0, v12718, v12712, v12711, v12722, v12723, v12724, 3, 2, 10, 7, 5, 29, 4, 27, 38, 28, 13, 6, 11, 14) -> f_1749(v12704, v12705, v12706, v12707, v12708, v12709, 1, v12719, v12904, v12713, v12714, v12715, v13452, 0, v12718, v12712, v12711, v12722, v12723, v12724, 3, 2, 10, 7, 5, 29, 4, 27, 38, 28, 13, 6, 11, 14) :|: TRUE
f_1749(v12704, v12705, v12706, v12707, v12708, v12709, 1, v12719, v12904, v12713, v12714, v12715, v13452, 0, v12718, v12712, v12711, v12722, v12723, v12724, 3, 2, 10, 7, 5, 29, 4, 27, 38, 28, 13, 6, 11, 14) -> f_1754(v12704, v12705, v12706, v12707, v12708, v12709, 1, v12719, v12904, v12713, v12714, v12715, v13452, 0, v12718, v12712, v12711, v12722, v12723, v12724, 3, 2, 10, 7, 5, 29, 4, 27, 38, 28, 13, 6, 11, 14) :|: 0 = 0
f_1754(v12704, v12705, v12706, v12707, v12708, v12709, 1, v12719, v12904, v12713, v12714, v12715, v13452, 0, v12718, v12712, v12711, v12722, v12723, v12724, 3, 2, 10, 7, 5, 29, 4, 27, 38, 28, 13, 6, 11, 14) -> f_1759(v12704, v12705, v12706, v12707, v12708, v12709, 1, v12719, v12904, v12713, v12714, v12715, v13452, v12718, 0, v12712, v12711, v12722, v12723, v12724, 3, 2, 10, 7, 5, 29, 4, 27, 38, 28, 13, 6, 11, 14) :|: 0 = 0
f_1759(v12704, v12705, v12706, v12707, v12708, v12709, 1, v12719, v12904, v12713, v12714, v12715, v13452, v12718, 0, v12712, v12711, v12722, v12723, v12724, 3, 2, 10, 7, 5, 29, 4, 27, 38, 28, 13, 6, 11, 14) -> f_1764(v12704, v12705, v12706, v12707, v12708, v12709, 1, v12719, v12904, v12713, v12714, v12715, v13452, v12718, 0, v12712, v12711, v12722, v12723, v12724, 3, 2, 10, 7, 5, 29, 4, 27, 38, 28, 13, 6, 11, 14) :|: TRUE
f_1764(v12704, v12705, v12706, v12707, v12708, v12709, 1, v12719, v12904, v12713, v12714, v12715, v13452, v12718, 0, v12712, v12711, v12722, v12723, v12724, 3, 2, 10, 7, 5, 29, 4, 27, 38, 28, 13, 6, 11, 14) -> f_1781(v12704, v12705, v12706, v12707, v12708, v12709, 1, v12719, v12904, v12713, v12714, v12715, v13452, v12718, 0, v12712, v12904, v12711, v12719, v12722, v12723, v12724, 3, 2, 10, 7, 29, 6, 27, 38, 28, 13, 8, 4, 5) :|: TRUE
f_1722(v12704, v12705, v12706, v12707, v12708, v12709, 1, 5, v12904, v12713, v12714, v12715, 0, v12717, v12718, v12712, 3, v12722, v12723, v12724, 7, 2, 10, 29, 27, 38, 28, 6, 13, 4, 11) -> f_1726(v12704, v12705, v12706, v12707, v12708, v12709, 1, 5, v12904, v12713, v12714, v12715, 0, v12717, v12718, v12712, 3, v12722, v12723, v12724, 7, 2, 10, 29, 27, 38, 28, 6, 13, 4, 11) :|: 0 = 0
f_1726(v12704, v12705, v12706, v12707, v12708, v12709, 1, 5, v12904, v12713, v12714, v12715, 0, v12717, v12718, v12712, 3, v12722, v12723, v12724, 7, 2, 10, 29, 27, 38, 28, 6, 13, 4, 11) -> f_1731(v12704, v12705, v12706, v12707, v12708, v12709, 1, 5, v12904, v12713, v12714, v12715, 0, v12717, v12718, v12712, 3, v12722, v12723, v12724, 7, 2, 10, 29, 27, 38, 28, 6, 13, 4, 11) :|: TRUE
f_1731(v12704, v12705, v12706, v12707, v12708, v12709, 1, 5, v12904, v12713, v12714, v12715, 0, v12717, v12718, v12712, 3, v12722, v12723, v12724, 7, 2, 10, 29, 27, 38, 28, 6, 13, 4, 11) -> f_1735(v12704, v12705, v12706, v12707, v12708, v12709, 1, 5, v12904, v12713, v12714, v12715, 0, v12717, v12718, v12712, v12722, v12723, v12724, 3, 7, 2, 10, 29, 27, 38, 28, 6, 13, 4, 11) :|: 0 = 0
f_1735(v12704, v12705, v12706, v12707, v12708, v12709, 1, 5, v12904, v12713, v12714, v12715, 0, v12717, v12718, v12712, v12722, v12723, v12724, 3, 7, 2, 10, 29, 27, 38, 28, 6, 13, 4, 11) -> f_1740(v12704, v12705, v12706, v12707, v12708, v12709, 1, 5, v12904, v12713, v12714, v12715, 0, v12717, v12718, v12712, 7, v12722, v12723, v12724, 3, 2, 10, 29, 27, 38, 28, 6, 13, 4, 11) :|: 0 = 0
f_1740(v12704, v12705, v12706, v12707, v12708, v12709, 1, 5, v12904, v12713, v12714, v12715, 0, v12717, v12718, v12712, 7, v12722, v12723, v12724, 3, 2, 10, 29, 27, 38, 28, 6, 13, 4, 11) -> f_1745(v12704, v12705, v12706, v12707, v12708, v12709, 1, 5, v12904, v12713, v12714, v12715, 0, v12717, v12718, v12712, 7, v12722, v12723, v12724, 3, 2, 10, 29, 27, 38, 28, 6, 13, 4, 11) :|: TRUE
f_1745(v12704, v12705, v12706, v12707, v12708, v12709, 1, 5, v12904, v12713, v12714, v12715, 0, v12717, v12718, v12712, 7, v12722, v12723, v12724, 3, 2, 10, 29, 27, 38, 28, 6, 13, 4, 11) -> f_1750(v12704, v12705, v12706, v12707, v12708, v12709, 1, 5, v12904, v12713, v12714, v12715, 0, v12717, v12718, v12712, 7, v12722, v12723, v12724, 3, 2, 10, 29, 27, 38, 28, 6, 13, 4, 11) :|: TRUE
f_1750(v12704, v12705, v12706, v12707, v12708, v12709, 1, 5, v12904, v12713, v12714, v12715, 0, v12717, v12718, v12712, 7, v12722, v12723, v12724, 3, 2, 10, 29, 27, 38, 28, 6, 13, 4, 11) -> f_1755(v12704, v12705, v12706, v12707, v12708, v12709, 1, 5, v12904, v12713, v12714, v12715, 0, v12717, v12718, 7, v12712, v12722, v12723, v12724, 3, 2, 10, 29, 27, 38, 28, 6, 13, 4, 11) :|: 0 = 0
f_1755(v12704, v12705, v12706, v12707, v12708, v12709, 1, 5, v12904, v12713, v12714, v12715, 0, v12717, v12718, 7, v12712, v12722, v12723, v12724, 3, 2, 10, 29, 27, 38, 28, 6, 13, 4, 11) -> f_1760(v12704, v12705, v12706, v12707, v12708, v12709, 1, 5, v12904, v12713, v12714, v12715, 0, v12717, v12718, 7, v12712, v12722, v12723, v12724, 3, 2, 10, 29, 27, 38, 28, 6, 13, 4, 11) :|: 0 = 0
f_1760(v12704, v12705, v12706, v12707, v12708, v12709, 1, 5, v12904, v12713, v12714, v12715, 0, v12717, v12718, 7, v12712, v12722, v12723, v12724, 3, 2, 10, 29, 27, 38, 28, 6, 13, 4, 11) -> f_1765(v12704, v12705, v12706, v12707, v12708, v12709, 1, 5, v12904, v12713, v12714, v12715, 0, v12717, v12718, 7, v12712, v12722, v12723, v12724, 3, 2, 10, 29, 27, 38, 28, 6, 13, 4, 11) :|: TRUE
f_1765(v12704, v12705, v12706, v12707, v12708, v12709, 1, 5, v12904, v12713, v12714, v12715, 0, v12717, v12718, 7, v12712, v12722, v12723, v12724, 3, 2, 10, 29, 27, 38, 28, 6, 13, 4, 11) -> f_1694(v12704, v12705, v12706, v12707, v12708, v12709, 1, 5, v12904, v12713, v12714, v12715, 0, v12717, v12718, 7, v12712, v12904, v12722, v12723, v12724, 3, 7, 2, 10, 29, 5, 27, 38, 28, 6, 13, 8, 4) :|: TRUE
Combined rules. Obtained 6 rulesP rules:
f_1718(v12704:0, v12705:0, v12706:0, v12707:0, v12708:0, v12709:0, 1, v12719:0, v12904:0, v12713:0, v12714:0, v12715:0, 0, v12717:0, v12718:0, v12712:0, v12711:0, v12722:0, v12723:0, v12724:0, 3, 7, 2, 10, 29, 5, 27, 38, 28, 6, 13, 4, 11) -> f_1796(v12704:0, v12705:0, v12706:0, v12707:0, v12708:0, v12709:0, 1, 7 + v12719:0, 1 + v12904:0, v12719:0, v12711:0, v12719:0, v12904:0, v12713:0, v12714:0, v12715:0, 0, v12722:0, v12723:0, v12724:0, 3, 2, 10, 7, 29, 6, 4, 5, 13, 27, 38, 28, 8) :|: v12711:0 > 3 && v12719:0 > 5 && v12719:0 < 8 && v12904:0 > 6
f_1796(v14609:0, v14610:0, v14611:0, v14612:0, v14613:0, v14614:0, 1, v14620:0, v14630:0, v14616:0, v14618:0, v14619:0, v14617:0, v14623:0, v14624:0, v14625:0, 0, v14627:0, v14628:0, v14629:0, 3, 2, 10, 7, 29, 6, 4, 5, 13, 27, 38, 28, 8) -> f_1732(v14609:0, v14610:0, v14611:0, v14612:0, v14613:0, v14614:0, 1, v14620:0, v14630:0, v14618:0, v14619:0, v14620:0, v14617:0, v14630:0, v14623:0, v14624:0, v14625:0, v14616:0, 0, v14627:0, v14628:0, v14629:0, 3, 2, 10, 7, 29, 6, 4, 5, 13, 8, 27, 38, 28) :|: v14630:0 > 13 && v14617:0 > 12 && v14630:0 > v14620:0
f_1732(v13343:0, v13344:0, v13345:0, v13346:0, v13347:0, v13348:0, 1, v13350:0, v13351:0, v13353:0, v13354:0, v13355:0, v13356:0, v13357:0, v13358:0, v13359:0, v13360:0, v13352:0, 0, v13362:0, v13363:0, v13364:0, 3, 2, 10, 7, 29, 6, 4, 5, 13, 8, 27, 38, 28) -> f_1796(v13343:0, v13344:0, v13345:0, v13346:0, v13347:0, v13348:0, 1, 7 + v13350:0, 1 + v13351:0, v13350:0, v13353:0, v13354:0, v13351:0, v13358:0, v13359:0, v13360:0, 0, v13362:0, v13363:0, v13364:0, 3, 2, 10, 7, 29, 6, 4, 5, 13, 27, 38, 28, 8) :|: v13350:0 > 5 && v13351:0 > 6
f_1796(v14609:0, v14610:0, v14611:0, v14612:0, v14613:0, v14614:0, 1, 10 + v14851:0, v14630:0, v14616:0, v14618:0, v14619:0, v14617:0, v14623:0, v14624:0, v14625:0, 0, v14627:0, v14628:0, v14629:0, 3, 2, 10, 7, 29, 6, 4, 5, 13, 27, 38, 28, 8) -> f_1732(v14609:0, v14610:0, v14611:0, v14612:0, v14613:0, 2 + v14630:0, 1, v14851:0, 2 + v14630:0, v14618:0, v14619:0, 10 + v14851:0, v14617:0, v14630:0, v14630:0, 10 + v14851:0, v14851:0, v14616:0, 0, v14627:0, v14628:0, v14629:0, 3, 2, 10, 7, 29, 6, 4, 5, 13, 8, 27, 38, 28) :|: v14630:0 <= 10 + v14851:0 && v14630:0 > 7 && v14630:0 < 28 && v14851:0 > 2 && v14617:0 < 27 && v14616:0 < 26 && v14851:0 < 23
f_1732(v13343:0, v13344:0, v13345:0, v13346:0, v13347:0, v13348:0, 1, v13350:0, v13351:0, v13353:0, v13354:0, v13355:0, v13356:0, v13357:0, v13358:0, v13359:0, v13360:0, v13352:0, 0, v13362:0, v13363:0, v13364:0, 3, 2, 10, 7, 29, 6, 4, 5, 13, 8, 27, 38, 28) -> f_1718(v13343:0, v13344:0, v13345:0, v13346:0, v13347:0, v13348:0, 1, 2 + v13350:0, 1 + v13351:0, v13358:0, v13359:0, v13360:0, 0, v13352:0, v13355:0, v13351:0, v13350:0, v13362:0, v13363:0, v13364:0, 3, 7, 2, 10, 29, 5, 27, 38, 28, 6, 13, 4, 11) :|: v13350:0 < 6 && v13350:0 > 2 && v13351:0 > 9
f_1718(v12704:0, v12705:0, v12706:0, v12707:0, v12708:0, v12709:0, 1, 5, v12904:0, v12713:0, v12714:0, v12715:0, 0, v12717:0, v12718:0, v12712:0, 3, v12722:0, v12723:0, v12724:0, 3, 7, 2, 10, 29, 5, 27, 38, 28, 6, 13, 4, 11) -> f_1718(v12704:0, v12705:0, v12706:0, v12707:0, v12708:0, v12709:0, 1, 7, 1 + v12904:0, v12713:0, v12714:0, v12715:0, 0, v12717:0, v12718:0, v12904:0, 5, v12722:0, v12723:0, v12724:0, 3, 7, 2, 10, 29, 5, 27, 38, 28, 6, 13, 4, 11) :|: v12904:0 > 9
Filtered unneeded arguments:
   f_1718(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33) -> f_1718(x8, x9, x17)
   f_1796(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33) -> f_1796(x8, x9, x10, x13)
   f_1732(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35) -> f_1732(x8, x9)
Removed division, modulo operations, cleaned up constraints. Obtained 6 rules.P rules:
f_1718(v12719:0, v12904:0, v12711:0) -> f_1796(7 + v12719:0, 1 + v12904:0, v12719:0, v12904:0) :|: v12719:0 > 5 && v12711:0 > 3 && v12904:0 > 6 && v12719:0 < 8
f_1796(v14620:0, v14630:0, v14616:0, v14617:0) -> f_1732(v14620:0, v14630:0) :|: v14617:0 > 12 && v14630:0 > v14620:0 && v14630:0 > 13
f_1732(v13350:0, v13351:0) -> f_1796(7 + v13350:0, 1 + v13351:0, v13350:0, v13351:0) :|: v13350:0 > 5 && v13351:0 > 6
f_1796(sum~cons_10~v14851:0, v14630:0, v14616:0, v14617:0) -> f_1732(v14851:0, 2 + v14630:0) :|: v14630:0 > 7 && v14630:0 <= 10 + v14851:0 && v14630:0 < 28 && v14851:0 > 2 && v14617:0 < 27 && v14851:0 < 23 && v14616:0 < 26 && sum~cons_10~v14851:0 = 10 + v14851:0
f_1732(v13350:0, v13351:0) -> f_1718(2 + v13350:0, 1 + v13351:0, v13350:0) :|: v13350:0 > 2 && v13351:0 > 9 && v13350:0 < 6
f_1718(cons_5, v12904:0, cons_3) -> f_1718(7, 1 + v12904:0, 5) :|: v12904:0 > 9 && cons_5 = 5 && cons_3 = 3

----------------------------------------

(9)
Obligation:
Rules:
f_1718(v12719:0, v12904:0, v12711:0) -> f_1796(7 + v12719:0, 1 + v12904:0, v12719:0, v12904:0) :|: v12719:0 > 5 && v12711:0 > 3 && v12904:0 > 6 && v12719:0 < 8
f_1796(v14620:0, v14630:0, v14616:0, v14617:0) -> f_1732(v14620:0, v14630:0) :|: v14617:0 > 12 && v14630:0 > v14620:0 && v14630:0 > 13
f_1732(v13350:0, v13351:0) -> f_1796(7 + v13350:0, 1 + v13351:0, v13350:0, v13351:0) :|: v13350:0 > 5 && v13351:0 > 6
f_1796(x, x1, x2, x3) -> f_1732(x4, 2 + x1) :|: x1 > 7 && x1 <= 10 + x4 && x1 < 28 && x4 > 2 && x3 < 27 && x4 < 23 && x2 < 26 && x = 10 + x4
f_1732(x5, x6) -> f_1718(2 + x5, 1 + x6, x5) :|: x5 > 2 && x6 > 9 && x5 < 6
f_1718(x7, x8, x9) -> f_1718(7, 1 + x8, 5) :|: x8 > 9 && x7 = 5 && x9 = 3

----------------------------------------

(10) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(11)
Obligation:
Rules:
f_1796(v14620:0:0, v14630:0:0, v14616:0:0, v14617:0:0) -> f_1732(v14620:0:0, v14630:0:0) :|: v14617:0:0 > 12 && v14630:0:0 > v14620:0:0 && v14630:0:0 > 13
f_1718(v12719:0:0, v12904:0:0, v12711:0:0) -> f_1796(7 + v12719:0:0, 1 + v12904:0:0, v12719:0:0, v12904:0:0) :|: v12904:0:0 > 6 && v12719:0:0 < 8 && v12711:0:0 > 3 && v12719:0:0 > 5
f_1732(x5:0, x6:0) -> f_1718(2 + x5:0, 1 + x6:0, x5:0) :|: x5:0 > 2 && x6:0 > 9 && x5:0 < 6
f_1718(cons_5, x8:0, cons_3) -> f_1718(7, 1 + x8:0, 5) :|: x8:0 > 9 && cons_5 = 5 && cons_3 = 3
f_1732(v13350:0:0, v13351:0:0) -> f_1796(7 + v13350:0:0, 1 + v13351:0:0, v13350:0:0, v13351:0:0) :|: v13350:0:0 > 5 && v13351:0:0 > 6
f_1796(sum~cons_10~x4:0, x1:0, x2:0, x3:0) -> f_1732(x4:0, 2 + x1:0) :|: x4:0 < 23 && x2:0 < 26 && x3:0 < 27 && x4:0 > 2 && x1:0 < 28 && x1:0 <= 10 + x4:0 && x1:0 > 7 && sum~cons_10~x4:0 = 10 + x4:0

----------------------------------------

(12) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_1796 ] = -23*f_1796_2 + 3*f_1796_1
[ f_1732 ] = 3*f_1732_1 + -23*f_1732_2 + -1
[ f_1718 ] = -23*f_1718_2 + 11*f_1718_1 + -49

The following rules are decreasing:
f_1796(v14620:0:0, v14630:0:0, v14616:0:0, v14617:0:0) -> f_1732(v14620:0:0, v14630:0:0) :|: v14617:0:0 > 12 && v14630:0:0 > v14620:0:0 && v14630:0:0 > 13
f_1718(v12719:0:0, v12904:0:0, v12711:0:0) -> f_1796(7 + v12719:0:0, 1 + v12904:0:0, v12719:0:0, v12904:0:0) :|: v12904:0:0 > 6 && v12719:0:0 < 8 && v12711:0:0 > 3 && v12719:0:0 > 5
f_1732(x5:0, x6:0) -> f_1718(2 + x5:0, 1 + x6:0, x5:0) :|: x5:0 > 2 && x6:0 > 9 && x5:0 < 6
f_1718(cons_5, x8:0, cons_3) -> f_1718(7, 1 + x8:0, 5) :|: x8:0 > 9 && cons_5 = 5 && cons_3 = 3
f_1732(v13350:0:0, v13351:0:0) -> f_1796(7 + v13350:0:0, 1 + v13351:0:0, v13350:0:0, v13351:0:0) :|: v13350:0:0 > 5 && v13351:0:0 > 6
f_1796(sum~cons_10~x4:0, x1:0, x2:0, x3:0) -> f_1732(x4:0, 2 + x1:0) :|: x4:0 < 23 && x2:0 < 26 && x3:0 < 27 && x4:0 > 2 && x1:0 < 28 && x1:0 <= 10 + x4:0 && x1:0 > 7 && sum~cons_10~x4:0 = 10 + x4:0

The following rules are bounded:
f_1796(sum~cons_10~x4:0, x1:0, x2:0, x3:0) -> f_1732(x4:0, 2 + x1:0) :|: x4:0 < 23 && x2:0 < 26 && x3:0 < 27 && x4:0 > 2 && x1:0 < 28 && x1:0 <= 10 + x4:0 && x1:0 > 7 && sum~cons_10~x4:0 = 10 + x4:0


----------------------------------------

(13)
Obligation:
Rules:
f_1796(v14620:0:0, v14630:0:0, v14616:0:0, v14617:0:0) -> f_1732(v14620:0:0, v14630:0:0) :|: v14617:0:0 > 12 && v14630:0:0 > v14620:0:0 && v14630:0:0 > 13
f_1718(v12719:0:0, v12904:0:0, v12711:0:0) -> f_1796(7 + v12719:0:0, 1 + v12904:0:0, v12719:0:0, v12904:0:0) :|: v12904:0:0 > 6 && v12719:0:0 < 8 && v12711:0:0 > 3 && v12719:0:0 > 5
f_1732(x5:0, x6:0) -> f_1718(2 + x5:0, 1 + x6:0, x5:0) :|: x5:0 > 2 && x6:0 > 9 && x5:0 < 6
f_1718(cons_5, x8:0, cons_3) -> f_1718(7, 1 + x8:0, 5) :|: x8:0 > 9 && cons_5 = 5 && cons_3 = 3
f_1732(v13350:0:0, v13351:0:0) -> f_1796(7 + v13350:0:0, 1 + v13351:0:0, v13350:0:0, v13351:0:0) :|: v13350:0:0 > 5 && v13351:0:0 > 6

----------------------------------------

(14) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(15)
Obligation:
Rules:
f_1718(v12719:0:0:0, v12904:0:0:0, v12711:0:0:0) -> f_1796(7 + v12719:0:0:0, 1 + v12904:0:0:0, v12719:0:0:0, v12904:0:0:0) :|: v12711:0:0:0 > 3 && v12719:0:0:0 > 5 && v12719:0:0:0 < 8 && v12904:0:0:0 > 6
f_1796(v14620:0:0:0, v14630:0:0:0, v14616:0:0:0, v14617:0:0:0) -> f_1718(2 + v14620:0:0:0, 1 + v14630:0:0:0, v14620:0:0:0) :|: v14617:0:0:0 > 12 && v14620:0:0:0 < 6 && v14630:0:0:0 > v14620:0:0:0 && v14630:0:0:0 > 13 && v14620:0:0:0 > 2
f_1718(cons_5, x8:0:0, cons_3) -> f_1718(7, 1 + x8:0:0, 5) :|: x8:0:0 > 9 && cons_5 = 5 && cons_3 = 3
f_1796(x, x1, x2, x3) -> f_1796(7 + x, 1 + x1, x, x1) :|: x3 > 12 && x > 5 && x1 > 13 && x1 > x

----------------------------------------

(16) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_1796(x1, x2, x3, x4) -> f_1796(x1, x2, x4)

----------------------------------------

(17)
Obligation:
Rules:
f_1718(v12719:0:0:0, v12904:0:0:0, v12711:0:0:0) -> f_1796(7 + v12719:0:0:0, 1 + v12904:0:0:0, v12904:0:0:0) :|: v12711:0:0:0 > 3 && v12719:0:0:0 > 5 && v12719:0:0:0 < 8 && v12904:0:0:0 > 6
f_1796(v14620:0:0:0, v14630:0:0:0, v14617:0:0:0) -> f_1718(2 + v14620:0:0:0, 1 + v14630:0:0:0, v14620:0:0:0) :|: v14617:0:0:0 > 12 && v14620:0:0:0 < 6 && v14630:0:0:0 > v14620:0:0:0 && v14630:0:0:0 > 13 && v14620:0:0:0 > 2
f_1718(cons_5, x8:0:0, cons_3) -> f_1718(7, 1 + x8:0:0, 5) :|: x8:0:0 > 9 && cons_5 = 5 && cons_3 = 3
f_1796(x, x1, x3) -> f_1796(7 + x, 1 + x1, x1) :|: x3 > 12 && x > 5 && x1 > 13 && x1 > x

----------------------------------------

(18) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_1718(x, x1, x2)] = -16 - 14*x - 4*x*x2 + 2*x^2 + 2*x1 + 29*x2
[f_1796(x3, x4, x5)] = -2 - x3 + 2*x4

The following rules are decreasing:
f_1796(x, x1, x3) -> f_1796(7 + x, 1 + x1, x1) :|: x3 > 12 && x > 5 && x1 > 13 && x1 > x
The following rules are bounded:
f_1718(v12719:0:0:0, v12904:0:0:0, v12711:0:0:0) -> f_1796(7 + v12719:0:0:0, 1 + v12904:0:0:0, v12904:0:0:0) :|: v12711:0:0:0 > 3 && v12719:0:0:0 > 5 && v12719:0:0:0 < 8 && v12904:0:0:0 > 6
f_1796(v14620:0:0:0, v14630:0:0:0, v14617:0:0:0) -> f_1718(2 + v14620:0:0:0, 1 + v14630:0:0:0, v14620:0:0:0) :|: v14617:0:0:0 > 12 && v14620:0:0:0 < 6 && v14630:0:0:0 > v14620:0:0:0 && v14630:0:0:0 > 13 && v14620:0:0:0 > 2
f_1718(cons_5, x8:0:0, cons_3) -> f_1718(7, 1 + x8:0:0, 5) :|: x8:0:0 > 9 && cons_5 = 5 && cons_3 = 3
f_1796(x, x1, x3) -> f_1796(7 + x, 1 + x1, x1) :|: x3 > 12 && x > 5 && x1 > 13 && x1 > x

----------------------------------------

(19)
Obligation:
Rules:
f_1718(v12719:0:0:0, v12904:0:0:0, v12711:0:0:0) -> f_1796(7 + v12719:0:0:0, 1 + v12904:0:0:0, v12904:0:0:0) :|: v12711:0:0:0 > 3 && v12719:0:0:0 > 5 && v12719:0:0:0 < 8 && v12904:0:0:0 > 6
f_1796(v14620:0:0:0, v14630:0:0:0, v14617:0:0:0) -> f_1718(2 + v14620:0:0:0, 1 + v14630:0:0:0, v14620:0:0:0) :|: v14617:0:0:0 > 12 && v14620:0:0:0 < 6 && v14630:0:0:0 > v14620:0:0:0 && v14630:0:0:0 > 13 && v14620:0:0:0 > 2
f_1718(cons_5, x8:0:0, cons_3) -> f_1718(7, 1 + x8:0:0, 5) :|: x8:0:0 > 9 && cons_5 = 5 && cons_3 = 3

----------------------------------------

(20) TerminationGraphProcessor (EQUIVALENT)
Constructed the termination graph and obtained no non-trivial SCC(s).

----------------------------------------

(21)
YES

----------------------------------------

(22)
Obligation:
SCC
----------------------------------------

(23) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 24 rulesP rules:
f_1369(v7805, v7806, v7807, v7808, v7809, 1, v7811, v7812, v7813, v7814, v7815, 0, v7818, v7819, v7820, 3, 2, 7, 29, 5, 6, 4, 13) -> f_1376(v7805, v7806, v7807, v7808, v7809, 1, v7811, v7812, v7813, v7814, v7815, v7958, 0, v7818, v7819, v7820, 3, 2, 7, 29, 5, 6, 4, 13, 8) :|: v7958 = 1 + v7812 && 8 <= v7958
f_1376(v7805, v7806, v7807, v7808, v7809, 1, v7811, v7812, v7813, v7814, v7815, v7958, 0, v7818, v7819, v7820, 3, 2, 7, 29, 5, 6, 4, 13, 8) -> f_1382(v7805, v7806, v7807, v7808, v7809, 1, v7811, v7812, v7813, v7814, v7815, v7958, 0, v7818, v7819, v7820, 3, 2, 7, 29, 5, 6, 4, 13, 8) :|: TRUE
f_1382(v7805, v7806, v7807, v7808, v7809, 1, v7811, v7812, v7813, v7814, v7815, v7958, 0, v7818, v7819, v7820, 3, 2, 7, 29, 5, 6, 4, 13, 8) -> f_1388(v7805, v7806, v7807, v7808, v7809, 1, v7811, v7812, v7813, v7814, v7815, v7958, 0, v7818, v7819, v7820, 3, 2, 7, 29, 5, 6, 4, 13, 8) :|: TRUE
f_1388(v7805, v7806, v7807, v7808, v7809, 1, v7811, v7812, v7813, v7814, v7815, v7958, 0, v7818, v7819, v7820, 3, 2, 7, 29, 5, 6, 4, 13, 8) -> f_1394(v7805, v7806, v7807, v7808, v7809, 1, v7811, v7812, v7813, v7814, v7815, v7958, 0, v7818, v7819, v7820, 3, 2, 7, 29, 5, 6, 4, 13, 8) :|: TRUE
f_1394(v7805, v7806, v7807, v7808, v7809, 1, v7811, v7812, v7813, v7814, v7815, v7958, 0, v7818, v7819, v7820, 3, 2, 7, 29, 5, 6, 4, 13, 8) -> f_1400(v7805, v7806, v7807, v7808, v7809, 1, v7815, v7812, v7811, v7813, v7814, v7958, 0, v7818, v7819, v7820, 3, 2, 7, 29, 5, 6, 4, 13, 8) :|: 0 = 0
f_1400(v7805, v7806, v7807, v7808, v7809, 1, v7815, v7812, v7811, v7813, v7814, v7958, 0, v7818, v7819, v7820, 3, 2, 7, 29, 5, 6, 4, 13, 8) -> f_1406(v7805, v7806, v7807, v7808, v7809, 1, v7815, v7958, v7811, v7813, v7814, v7812, 0, v7818, v7819, v7820, 3, 2, 7, 29, 5, 6, 4, 13, 8) :|: 0 = 0
f_1406(v7805, v7806, v7807, v7808, v7809, 1, v7815, v7958, v7811, v7813, v7814, v7812, 0, v7818, v7819, v7820, 3, 2, 7, 29, 5, 6, 4, 13, 8) -> f_1413(v7805, v7806, v7807, v7808, v7809, 1, v7815, v7958, v7811, v7813, v7814, v7812, 0, v7818, v7819, v7820, 3, 2, 7, 29, 5, 6, 13, 4, 14) :|: v7815 < v7958 && 14 <= v7958 && 13 <= v7812
f_1413(v7805, v7806, v7807, v7808, v7809, 1, v7815, v7958, v7811, v7813, v7814, v7812, 0, v7818, v7819, v7820, 3, 2, 7, 29, 5, 6, 13, 4, 14) -> f_1420(v7805, v7806, v7807, v7808, v7809, 1, v7815, v7958, v7811, v7813, v7814, v7812, 0, v7818, v7819, v7820, 3, 2, 7, 29, 5, 6, 13, 4, 14) :|: 0 = 0
f_1420(v7805, v7806, v7807, v7808, v7809, 1, v7815, v7958, v7811, v7813, v7814, v7812, 0, v7818, v7819, v7820, 3, 2, 7, 29, 5, 6, 13, 4, 14) -> f_1427(v7805, v7806, v7807, v7808, v7809, 1, v7815, v7958, v7811, v7813, v7814, v7812, 0, v7818, v7819, v7820, 3, 2, 7, 29, 5, 6, 13, 4, 14) :|: TRUE
f_1427(v7805, v7806, v7807, v7808, v7809, 1, v7815, v7958, v7811, v7813, v7814, v7812, 0, v7818, v7819, v7820, 3, 2, 7, 29, 5, 6, 13, 4, 14) -> f_1433(v7805, v7806, v7807, v7808, v7809, 1, v7815, v7958, v7813, v7814, v7812, v7811, 0, v7818, v7819, v7820, 3, 2, 7, 29, 5, 6, 13, 4, 14) :|: 0 = 0
f_1433(v7805, v7806, v7807, v7808, v7809, 1, v7815, v7958, v7813, v7814, v7812, v7811, 0, v7818, v7819, v7820, 3, 2, 7, 29, 5, 6, 13, 4, 14) -> f_1441(v7805, v7806, v7807, v7808, v7809, 1, v7815, v7958, v7813, v7814, v7812, v7811, 0, v7818, v7819, v7820, 3, 2, 7, 29, 5, 6, 13, 4, 14) :|: 0 = 0
f_1441(v7805, v7806, v7807, v7808, v7809, 1, v7815, v7958, v7813, v7814, v7812, v7811, 0, v7818, v7819, v7820, 3, 2, 7, 29, 5, 6, 13, 4, 14) -> f_1449(v7805, v7806, v7807, v7808, v7809, 1, v7815, v7958, v7813, v7814, v7812, v7811, 0, v7818, v7819, v7820, 3, 2, 7, 29, 5, 6, 13, 4, 14) :|: TRUE
f_1449(v7805, v7806, v7807, v7808, v7809, 1, v7815, v7958, v7813, v7814, v7812, v7811, 0, v7818, v7819, v7820, 3, 2, 7, 29, 5, 6, 13, 4, 14) -> f_1456(v7805, v7806, v7807, v7808, v7809, 1, v7815, v7958, v7813, v7814, v7812, 0, v7818, v7819, v7820, 3, 2, 29, 5, 13, 4, 6, 7, 14) :|: 0 = 0
f_1456(v7805, v7806, v7807, v7808, v7809, 1, v7815, v7958, v7813, v7814, v7812, 0, v7818, v7819, v7820, 3, 2, 29, 5, 13, 4, 6, 7, 14) -> f_1463(v7805, v7806, v7807, v7808, v7809, 1, v7815, v7958, v7813, v7814, v7812, v8874, 0, v7818, v7819, v7820, 3, 2, 7, 29, 5, 13, 4, 6, 14, 20) :|: v8874 = 7 + v7815 && 20 <= v8874
f_1463(v7805, v7806, v7807, v7808, v7809, 1, v7815, v7958, v7813, v7814, v7812, v8874, 0, v7818, v7819, v7820, 3, 2, 7, 29, 5, 13, 4, 6, 14, 20) -> f_1470(v7805, v7806, v7807, v7808, v7809, 1, v7815, v7958, v7813, v7814, v7812, v8874, 0, v7818, v7819, v7820, 3, 2, 7, 29, 5, 13, 4, 6, 14, 20) :|: TRUE
f_1470(v7805, v7806, v7807, v7808, v7809, 1, v7815, v7958, v7813, v7814, v7812, v8874, 0, v7818, v7819, v7820, 3, 2, 7, 29, 5, 13, 4, 6, 14, 20) -> f_1477(v7805, v7806, v7807, v7808, v7809, 1, v7815, v7958, v7813, v7814, v7812, v8874, 0, v7818, v7819, v7820, 3, 2, 7, 29, 5, 13, 4, 6, 14, 20) :|: TRUE
f_1477(v7805, v7806, v7807, v7808, v7809, 1, v7815, v7958, v7813, v7814, v7812, v8874, 0, v7818, v7819, v7820, 3, 2, 7, 29, 5, 13, 4, 6, 14, 20) -> f_1484(v7805, v7806, v7807, v7808, v7809, 1, v7815, v7958, v7813, v7814, v8874, v7812, 0, v7818, v7819, v7820, 3, 2, 7, 29, 5, 13, 4, 6, 14, 20) :|: 0 = 0
f_1484(v7805, v7806, v7807, v7808, v7809, 1, v7815, v7958, v7813, v7814, v8874, v7812, 0, v7818, v7819, v7820, 3, 2, 7, 29, 5, 13, 4, 6, 14, 20) -> f_1492(v7805, v7806, v7807, v7808, v7809, 1, v7815, v7958, v7813, v7814, v8874, v7812, 0, v7818, v7819, v7820, 3, 2, 7, 29, 5, 13, 4, 6, 14, 20) :|: 0 = 0
f_1492(v7805, v7806, v7807, v7808, v7809, 1, v7815, v7958, v7813, v7814, v8874, v7812, 0, v7818, v7819, v7820, 3, 2, 7, 29, 5, 13, 4, 6, 14, 20) -> f_1501(v7805, v7806, v7807, v7808, v7809, 1, v7815, v7958, v7813, v7814, v8874, v7812, 0, v7818, v7819, v7820, 3, 2, 7, 29, 5, 13, 4, 6, 14, 20) :|: TRUE
f_1501(v7805, v7806, v7807, v7808, v7809, 1, v7815, v7958, v7813, v7814, v8874, v7812, 0, v7818, v7819, v7820, 3, 2, 7, 29, 5, 13, 4, 6, 14, 20) -> f_1510(v7805, v7806, v7807, v7808, v7809, 1, v7815, v7958, v7813, v7814, v8874, v7812, 0, v7818, v7819, v7820, 3, 2, 7, 29, 5, 13, 4, 6, 14, 20) :|: 0 = 0
f_1510(v7805, v7806, v7807, v7808, v7809, 1, v7815, v7958, v7813, v7814, v8874, v7812, 0, v7818, v7819, v7820, 3, 2, 7, 29, 5, 13, 4, 6, 14, 20) -> f_1519(v7805, v7806, v7807, v7808, v7809, 1, v7815, v7958, v7813, v7814, v8874, v7812, 0, v7818, v7819, v7820, 3, 2, 7, 29, 5, 13, 4, 6, 14, 20) :|: 0 = 0
f_1519(v7805, v7806, v7807, v7808, v7809, 1, v7815, v7958, v7813, v7814, v8874, v7812, 0, v7818, v7819, v7820, 3, 2, 7, 29, 5, 13, 4, 6, 14, 20) -> f_1528(v7805, v7806, v7807, v7808, v7809, 1, v7815, v7958, v7813, v7814, v8874, v7812, 0, v7818, v7819, v7820, 3, 2, 7, 29, 5, 13, 4, 6, 14, 20) :|: TRUE
f_1528(v7805, v7806, v7807, v7808, v7809, 1, v7815, v7958, v7813, v7814, v8874, v7812, 0, v7818, v7819, v7820, 3, 2, 7, 29, 5, 13, 4, 6, 14, 20) -> f_1362(v7805, v7806, v7807, v7808, v7809, 1, v7815, v7958, v7813, v7814, v8874, v7812, 0, v7818, v7819, v7820, 3, 2, 7, 29, 5, 6, 4, 13) :|: TRUE
f_1362(v7805, v7806, v7807, v7808, v7809, 1, v7811, v7812, v7813, v7814, v7815, v7816, 0, v7818, v7819, v7820, 3, 2, 7, 29, 5, 6, 4, 13) -> f_1369(v7805, v7806, v7807, v7808, v7809, 1, v7811, v7812, v7813, v7814, v7815, 0, v7818, v7819, v7820, 3, 2, 7, 29, 5, 6, 4, 13) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_1369(v7805:0, v7806:0, v7807:0, v7808:0, v7809:0, 1, v7811:0, v7812:0, v7813:0, v7814:0, v7815:0, 0, v7818:0, v7819:0, v7820:0, 3, 2, 7, 29, 5, 6, 4, 13) -> f_1369(v7805:0, v7806:0, v7807:0, v7808:0, v7809:0, 1, v7815:0, 1 + v7812:0, v7813:0, v7814:0, 7 + v7815:0, 0, v7818:0, v7819:0, v7820:0, 3, 2, 7, 29, 5, 6, 4, 13) :|: v7812:0 > 12 && v7815:0 < 1 + v7812:0 && v7815:0 > 12
Filtered unneeded arguments:
   f_1369(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23) -> f_1369(x8, x11)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1369(v7812:0, v7815:0) -> f_1369(1 + v7812:0, 7 + v7815:0) :|: v7815:0 < 1 + v7812:0 && v7815:0 > 12 && v7812:0 > 12

----------------------------------------

(24)
Obligation:
Rules:
f_1369(v7812:0, v7815:0) -> f_1369(1 + v7812:0, 7 + v7815:0) :|: v7815:0 < 1 + v7812:0 && v7815:0 > 12 && v7812:0 > 12

----------------------------------------

(25) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(26)
Obligation:
Rules:
f_1369(v7812:0:0, v7815:0:0) -> f_1369(1 + v7812:0:0, 7 + v7815:0:0) :|: v7815:0:0 < 1 + v7812:0:0 && v7815:0:0 > 12 && v7812:0:0 > 12

----------------------------------------

(27) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_1369 ] = -1/6*f_1369_2 + 1/6*f_1369_1

The following rules are decreasing:
f_1369(v7812:0:0, v7815:0:0) -> f_1369(1 + v7812:0:0, 7 + v7815:0:0) :|: v7815:0:0 < 1 + v7812:0:0 && v7815:0:0 > 12 && v7812:0:0 > 12

The following rules are bounded:
f_1369(v7812:0:0, v7815:0:0) -> f_1369(1 + v7812:0:0, 7 + v7815:0:0) :|: v7815:0:0 < 1 + v7812:0:0 && v7815:0:0 > 12 && v7812:0:0 > 12


----------------------------------------

(28)
YES

----------------------------------------

(29)
Obligation:
SCC
----------------------------------------

(30) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 49 rulesP rules:
f_888(v2765, v2766, v2767, v2768, v2769, v2770, 1, v2775, v2773, 0, v2772, v2776, v2777, v2778, v2779, v2780, 3, 7, 2, 10, 29, 13, 32, 8, 27, 22, 6, 25, 26, 4) -> f_895(v2765, v2766, v2767, v2768, v2769, v2770, 1, v2775, 0, v2773, v2772, v2776, v2777, v2778, v2779, v2780, 3, 7, 2, 10, 29, 13, 32, 8, 27, 22, 6, 25, 26, 4) :|: 0 = 0
f_895(v2765, v2766, v2767, v2768, v2769, v2770, 1, v2775, 0, v2773, v2772, v2776, v2777, v2778, v2779, v2780, 3, 7, 2, 10, 29, 13, 32, 8, 27, 22, 6, 25, 26, 4) -> f_902(v2765, v2766, v2767, v2768, v2769, v2770, 1, v2775, v2773, v2772, v2776, 0, v2777, v2778, v2779, v2780, 3, 7, 2, 10, 29, 13, 32, 8, 27, 22, 6, 25, 26, 4) :|: 0 = 0
f_902(v2765, v2766, v2767, v2768, v2769, v2770, 1, v2775, v2773, v2772, v2776, 0, v2777, v2778, v2779, v2780, 3, 7, 2, 10, 29, 13, 32, 8, 27, 22, 6, 25, 26, 4) -> f_910(v2765, v2766, v2767, v2768, v2769, v2770, 1, v2775, v2773, v2772, v2776, 0, v2777, v2778, v2779, v2780, 3, 7, 2, 10, 29, 13, 32, 8, 27, 22, 6, 25, 26, 4) :|: TRUE
f_910(v2765, v2766, v2767, v2768, v2769, v2770, 1, v2775, v2773, v2772, v2776, 0, v2777, v2778, v2779, v2780, 3, 7, 2, 10, 29, 13, 32, 8, 27, 22, 6, 25, 26, 4) -> f_1109(v2765, v2766, v2767, v2768, v2769, v2770, 1, v2775, v2770, v2773, v2772, v2775, v2776, v2772, 0, v2777, v2773, v2778, v2779, v2780, 3, 7, 2, 10, 29, 30, 31, 5, 27, 13, 33, 23, 6, 25, 32, 8, 4) :|: TRUE
f_1109(v5272, v5273, v5274, v5275, v5276, v5277, 1, v5279, v5280, v5281, v5282, v5283, v5284, v5285, 0, v5287, v5288, v5289, v5290, v5291, 3, 7, 2, 10, 29, 30, 31, 5, 27, 13, 33, 23, 6, 25, 32, 8, 4) -> f_1280(v5272, v5273, v5274, v5275, v5276, v5277, 1, v5279, v5280, v5281, v5282, v5283, v5284, v5285, 0, v5287, v5288, v5289, v5290, v5291, 3, 7, 2, 10, 29, 32, 5, 27, 13, 34, 24, 6, 25, 8, 4) :|: TRUE
f_1280(v7015, v7016, v7017, v7018, v7019, v7020, 1, v7022, v7023, v7024, v7025, v7026, v7027, v7028, 0, v7030, v7031, v7032, v7033, v7034, 3, 7, 2, 10, 29, 32, 5, 27, 13, 34, 24, 6, 25, 8, 4) -> f_1454(v7015, v7016, v7017, v7018, v7019, v7020, 1, v7022, v7023, v7024, v7025, v7026, v7027, v7028, 0, v7030, v7031, v7032, v7033, v7034, 3, 7, 2, 10, 29, 5, 27, 13, 38, 28, 6, 8, 4) :|: TRUE
f_1454(v8745, v8746, v8747, v8748, v8749, v8750, 1, v8752, v8753, v8754, v8755, v8756, v8757, v8758, 0, v8760, v8761, v8762, v8763, v8764, 3, 7, 2, 10, 29, 5, 27, 13, 38, 28, 6, 8, 4) -> f_1461(v8745, v8746, v8747, v8748, v8749, v8750, 1, v8752, v8753, v8754, v8755, v8756, v8757, v8758, 0, v8760, v8761, v8762, v8763, v8764, 3, 7, 2, 10, 29, 5, 27, 13, 38, 28, 6, 8, 4) :|: 0 = 0
f_1461(v8745, v8746, v8747, v8748, v8749, v8750, 1, v8752, v8753, v8754, v8755, v8756, v8757, v8758, 0, v8760, v8761, v8762, v8763, v8764, 3, 7, 2, 10, 29, 5, 27, 13, 38, 28, 6, 8, 4) -> f_1467(v8745, v8746, v8747, v8748, v8749, v8750, 1, v8752, v8753, v8754, v8755, v8756, v8757, v8758, 0, v8760, v8761, v8762, v8763, v8764, 3, 7, 2, 10, 29, 6, 5, 27, 13, 38, 28, 8, 4) :|: 5 < v8752
f_1467(v8745, v8746, v8747, v8748, v8749, v8750, 1, v8752, v8753, v8754, v8755, v8756, v8757, v8758, 0, v8760, v8761, v8762, v8763, v8764, 3, 7, 2, 10, 29, 6, 5, 27, 13, 38, 28, 8, 4) -> f_1474(v8745, v8746, v8747, v8748, v8749, v8750, 1, v8752, v8753, v8754, v8755, v8756, v8757, v8758, 0, v8760, v8761, v8762, v8763, v8764, 3, 7, 2, 10, 29, 6, 5, 27, 13, 38, 28, 8, 4) :|: 0 = 0
f_1474(v8745, v8746, v8747, v8748, v8749, v8750, 1, v8752, v8753, v8754, v8755, v8756, v8757, v8758, 0, v8760, v8761, v8762, v8763, v8764, 3, 7, 2, 10, 29, 6, 5, 27, 13, 38, 28, 8, 4) -> f_1481(v8745, v8746, v8747, v8748, v8749, v8750, 1, v8752, v8753, v8754, v8755, v8756, v8757, v8758, 0, v8760, v8761, v8762, v8763, v8764, 3, 7, 2, 10, 29, 6, 5, 27, 13, 38, 28, 8, 4) :|: TRUE
f_1481(v8745, v8746, v8747, v8748, v8749, v8750, 1, v8752, v8753, v8754, v8755, v8756, v8757, v8758, 0, v8760, v8761, v8762, v8763, v8764, 3, 7, 2, 10, 29, 6, 5, 27, 13, 38, 28, 8, 4) -> f_1489(v8745, v8746, v8747, v8748, v8749, v8750, 1, v8752, v8753, v8754, v8755, v8756, v8758, 0, v8760, v8761, v8762, v8763, v8764, 3, 2, 10, 7, 29, 6, 5, 27, 13, 38, 28, 8, 4) :|: 0 = 0
f_1489(v8745, v8746, v8747, v8748, v8749, v8750, 1, v8752, v8753, v8754, v8755, v8756, v8758, 0, v8760, v8761, v8762, v8763, v8764, 3, 2, 10, 7, 29, 6, 5, 27, 13, 38, 28, 8, 4) -> f_1498(v8745, v8746, v8747, v8748, v8749, v8750, 1, v8752, v8753, v8754, v8755, v8756, v9083, v8758, 0, v8760, v8761, v8762, v8763, v8764, 3, 2, 10, 7, 29, 6, 5, 27, 13, 38, 28, 8, 4) :|: v9083 = 7 + v8752 && 13 <= v9083
f_1498(v8745, v8746, v8747, v8748, v8749, v8750, 1, v8752, v8753, v8754, v8755, v8756, v9083, v8758, 0, v8760, v8761, v8762, v8763, v8764, 3, 2, 10, 7, 29, 6, 5, 27, 13, 38, 28, 8, 4) -> f_1507(v8745, v8746, v8747, v8748, v8749, v8750, 1, v8752, v8753, v8754, v8755, v8756, v9083, v8758, 0, v8760, v8761, v8762, v8763, v8764, 3, 2, 10, 7, 29, 6, 5, 27, 13, 38, 28, 8, 4) :|: TRUE
f_1507(v8745, v8746, v8747, v8748, v8749, v8750, 1, v8752, v8753, v8754, v8755, v8756, v9083, v8758, 0, v8760, v8761, v8762, v8763, v8764, 3, 2, 10, 7, 29, 6, 5, 27, 13, 38, 28, 8, 4) -> f_1516(v8745, v8746, v8747, v8748, v8749, v8750, 1, v8752, v8753, v8754, v8755, v8756, v9083, v8758, 0, v8760, v8761, v8762, v8763, v8764, 3, 2, 10, 7, 29, 6, 5, 27, 13, 38, 28, 8, 4) :|: TRUE
f_1516(v8745, v8746, v8747, v8748, v8749, v8750, 1, v8752, v8753, v8754, v8755, v8756, v9083, v8758, 0, v8760, v8761, v8762, v8763, v8764, 3, 2, 10, 7, 29, 6, 5, 27, 13, 38, 28, 8, 4) -> f_1524(v8745, v8746, v8747, v8748, v8749, v8750, 1, v8752, v8753, v8754, v8755, v8756, v9083, v8758, 0, v8760, v8761, v8762, v8763, v8764, 3, 2, 10, 7, 29, 6, 5, 27, 13, 38, 28, 8, 4) :|: 0 = 0
f_1524(v8745, v8746, v8747, v8748, v8749, v8750, 1, v8752, v8753, v8754, v8755, v8756, v9083, v8758, 0, v8760, v8761, v8762, v8763, v8764, 3, 2, 10, 7, 29, 6, 5, 27, 13, 38, 28, 8, 4) -> f_1533(v8745, v8746, v8747, v8748, v8749, v8750, 1, v8752, v8753, v8754, v8755, v8756, v9083, v8758, 0, v8760, v8761, v8762, v8763, v8764, 3, 2, 10, 7, 29, 6, 5, 27, 13, 38, 28, 8, 4) :|: 0 = 0
f_1533(v8745, v8746, v8747, v8748, v8749, v8750, 1, v8752, v8753, v8754, v8755, v8756, v9083, v8758, 0, v8760, v8761, v8762, v8763, v8764, 3, 2, 10, 7, 29, 6, 5, 27, 13, 38, 28, 8, 4) -> f_1541(v8745, v8746, v8747, v8748, v8749, v8750, 1, v8752, v8753, v8754, v8755, v8756, v9083, v8758, 0, v8760, v8761, v8762, v8763, v8764, 3, 2, 10, 7, 29, 6, 5, 27, 13, 38, 28, 8, 4) :|: TRUE
f_1541(v8745, v8746, v8747, v8748, v8749, v8750, 1, v8752, v8753, v8754, v8755, v8756, v9083, v8758, 0, v8760, v8761, v8762, v8763, v8764, 3, 2, 10, 7, 29, 6, 5, 27, 13, 38, 28, 8, 4) -> f_1549(v8745, v8746, v8747, v8748, v8749, v8750, 1, v8752, v8753, v8754, v8755, v8756, v9083, 0, v8760, v8761, v8762, v8763, v8764, 3, 2, 10, 7, 29, 6, 5, 27, 13, 38, 28, 8, 4) :|: 0 = 0
f_1549(v8745, v8746, v8747, v8748, v8749, v8750, 1, v8752, v8753, v8754, v8755, v8756, v9083, 0, v8760, v8761, v8762, v8763, v8764, 3, 2, 10, 7, 29, 6, 5, 27, 13, 38, 28, 8, 4) -> f_1556(v8745, v8746, v8747, v8748, v8749, v8750, 1, v8752, v8753, v8754, v8755, v8756, v9083, 0, v8760, v8761, v8762, v8763, v8764, 3, 2, 10, 7, 29, 6, 5, 27, 13, 38, 28, 8, 4) :|: 0 = 0
f_1556(v8745, v8746, v8747, v8748, v8749, v8750, 1, v8752, v8753, v8754, v8755, v8756, v9083, 0, v8760, v8761, v8762, v8763, v8764, 3, 2, 10, 7, 29, 6, 5, 27, 13, 38, 28, 8, 4) -> f_1561(v8745, v8746, v8747, v8748, v8749, v8750, 1, v8752, v8753, v8754, v8755, v8756, v9083, 0, v8760, v8761, v8762, v8763, v8764, 3, 2, 10, 7, 29, 6, 5, 27, 13, 38, 28, 8, 4) :|: TRUE
f_1561(v8745, v8746, v8747, v8748, v8749, v8750, 1, v8752, v8753, v8754, v8755, v8756, v9083, 0, v8760, v8761, v8762, v8763, v8764, 3, 2, 10, 7, 29, 6, 5, 27, 13, 38, 28, 8, 4) -> f_1567(v8745, v8746, v8747, v8748, v8749, v8750, 1, v8752, v8753, v8754, v8755, v8756, v9083, 0, v8761, v8762, v8763, v8764, 3, 2, 10, 7, 29, 6, 5, 27, 13, 38, 28, 8, 4) :|: 0 = 0
f_1567(v8745, v8746, v8747, v8748, v8749, v8750, 1, v8752, v8753, v8754, v8755, v8756, v9083, 0, v8761, v8762, v8763, v8764, 3, 2, 10, 7, 29, 6, 5, 27, 13, 38, 28, 8, 4) -> f_1573(v8745, v8746, v8747, v8748, v8749, v8750, 1, v8752, v8753, v8754, v8755, v8756, v9083, 0, v10036, v8762, v8763, v8764, 3, 2, 10, 7, 29, 6, 5, 27, 13, 38, 28, 4, 11) :|: v10036 = 1 + v8753 && 11 <= v10036
f_1573(v8745, v8746, v8747, v8748, v8749, v8750, 1, v8752, v8753, v8754, v8755, v8756, v9083, 0, v10036, v8762, v8763, v8764, 3, 2, 10, 7, 29, 6, 5, 27, 13, 38, 28, 4, 11) -> f_1579(v8745, v8746, v8747, v8748, v8749, v8750, 1, v8752, v8753, v8754, v8755, v8756, v9083, 0, v10036, v8762, v8763, v8764, 3, 2, 10, 7, 29, 6, 5, 27, 13, 38, 28, 4, 11) :|: TRUE
f_1579(v8745, v8746, v8747, v8748, v8749, v8750, 1, v8752, v8753, v8754, v8755, v8756, v9083, 0, v10036, v8762, v8763, v8764, 3, 2, 10, 7, 29, 6, 5, 27, 13, 38, 28, 4, 11) -> f_1584(v8745, v8746, v8747, v8748, v8749, v8750, 1, v8752, v8753, v8754, v8755, v8756, v9083, 0, v10036, v8762, v8763, v8764, 3, 2, 10, 7, 29, 6, 5, 27, 13, 38, 28, 4, 11) :|: TRUE
f_1584(v8745, v8746, v8747, v8748, v8749, v8750, 1, v8752, v8753, v8754, v8755, v8756, v9083, 0, v10036, v8762, v8763, v8764, 3, 2, 10, 7, 29, 6, 5, 27, 13, 38, 28, 4, 11) -> f_1411(v8745, v8746, v8747, v8748, v8749, v8750, 1, v8752, v8753, v8754, v8755, v8756, v9083, 0, v10036, v8762, v8763, v8764, 3, 2, 10, 7, 29, 6, 5, 27, 13, 38, 28, 8, 4) :|: TRUE
f_1411(v8358, v8359, v8360, v8361, v8362, v8363, 1, v8365, v8366, v8367, v8368, v8369, v8370, 0, v8372, v8373, v8374, v8375, 3, 2, 10, 7, 29, 6, 5, 27, 13, 38, 28, 8, 4) -> f_1418(v8358, v8359, v8360, v8361, v8362, v8363, 1, v8365, v8366, v8367, v8368, v8369, v8370, 0, v8372, v8373, v8374, v8375, 3, 2, 10, 7, 29, 6, 5, 27, 13, 38, 28, 8, 4) :|: TRUE
f_1418(v8358, v8359, v8360, v8361, v8362, v8363, 1, v8365, v8366, v8367, v8368, v8369, v8370, 0, v8372, v8373, v8374, v8375, 3, 2, 10, 7, 29, 6, 5, 27, 13, 38, 28, 8, 4) -> f_1425(v8358, v8359, v8360, v8361, v8362, v8363, 1, v8370, v8366, v8367, v8368, v8369, v8365, 0, v8372, v8373, v8374, v8375, 3, 2, 10, 7, 29, 6, 5, 27, 13, 38, 28, 8, 4) :|: 0 = 0
f_1425(v8358, v8359, v8360, v8361, v8362, v8363, 1, v8370, v8366, v8367, v8368, v8369, v8365, 0, v8372, v8373, v8374, v8375, 3, 2, 10, 7, 29, 6, 5, 27, 13, 38, 28, 8, 4) -> f_1431(v8358, v8359, v8360, v8361, v8362, v8363, 1, v8370, v8372, v8367, v8368, v8369, v8365, 0, v8366, v8373, v8374, v8375, 3, 2, 10, 7, 29, 6, 5, 27, 13, 38, 28, 8, 4) :|: 0 = 0
f_1431(v8358, v8359, v8360, v8361, v8362, v8363, 1, v8370, v8372, v8367, v8368, v8369, v8365, 0, v8366, v8373, v8374, v8375, 3, 2, 10, 7, 29, 6, 5, 27, 13, 38, 28, 8, 4) -> f_1437(v8358, v8359, v8360, v8361, v8362, v8363, 1, v8370, v8372, v8367, v8368, v8369, v8365, 0, v8366, v8373, v8374, v8375, 3, 2, 10, 7, 29, 6, 13, 5, 27, 38, 28, 14, 4) :|: v8370 < v8372 && 14 <= v8372 && 13 <= v8366
f_1431(v8358, v8359, v8360, v8361, v8362, v8363, 1, v8370, v8372, v8367, v8368, v8369, v8365, 0, v8366, v8373, v8374, v8375, 3, 2, 10, 7, 29, 6, 5, 27, 13, 38, 28, 8, 4) -> f_1438(v8358, v8359, v8360, v8361, v8362, v8363, 1, v8370, v8372, v8367, v8368, v8369, v8365, 0, v8366, v8373, v8374, v8375, 3, 2, 10, 7, 29, 6, 5, 27, 13, 38, 28, 8, 4) :|: v8372 <= v8370
f_1437(v8358, v8359, v8360, v8361, v8362, v8363, 1, v8370, v8372, v8367, v8368, v8369, v8365, 0, v8366, v8373, v8374, v8375, 3, 2, 10, 7, 29, 6, 13, 5, 27, 38, 28, 14, 4) -> f_1445(v8358, v8359, v8360, v8361, v8362, v8363, 1, v8370, v8372, v8367, v8368, v8369, v8365, 0, v8366, v8373, v8374, v8375, 3, 2, 10, 7, 29, 6, 13, 5, 27, 38, 28, 14, 4) :|: 0 = 0
f_1445(v8358, v8359, v8360, v8361, v8362, v8363, 1, v8370, v8372, v8367, v8368, v8369, v8365, 0, v8366, v8373, v8374, v8375, 3, 2, 10, 7, 29, 6, 13, 5, 27, 38, 28, 14, 4) -> f_1453(v8358, v8359, v8360, v8361, v8362, v8363, 1, v8370, v8372, v8367, v8368, v8369, v8365, 0, v8366, v8373, v8374, v8375, 3, 2, 10, 7, 29, 6, 13, 5, 27, 38, 28, 14, 4) :|: TRUE
f_1453(v8358, v8359, v8360, v8361, v8362, v8363, 1, v8370, v8372, v8367, v8368, v8369, v8365, 0, v8366, v8373, v8374, v8375, 3, 2, 10, 7, 29, 6, 13, 5, 27, 38, 28, 14, 4) -> f_1454(v8358, v8359, v8360, v8361, v8362, v8363, 1, v8370, v8372, v8367, v8368, v8369, v8365, v8370, 0, v8366, v8372, v8373, v8374, v8375, 3, 7, 2, 10, 29, 5, 27, 13, 38, 28, 6, 8, 4) :|: TRUE
f_1438(v8358, v8359, v8360, v8361, v8362, v8363, 1, v8370, v8372, v8367, v8368, v8369, v8365, 0, v8366, v8373, v8374, v8375, 3, 2, 10, 7, 29, 6, 5, 27, 13, 38, 28, 8, 4) -> f_1446(v8358, v8359, v8360, v8361, v8362, v8363, 1, v8370, v8372, 0, v8367, v8368, v8369, v8365, v8366, v8373, v8374, v8375, 3, 2, 10, 7, 29, 6, 5, 27, 13, 38, 28, 8, 4) :|: 0 = 0
f_1446(v8358, v8359, v8360, v8361, v8362, v8363, 1, v8370, v8372, 0, v8367, v8368, v8369, v8365, v8366, v8373, v8374, v8375, 3, 2, 10, 7, 29, 6, 5, 27, 13, 38, 28, 8, 4) -> f_1455(v8358, v8359, v8360, v8361, v8362, v8363, 1, v8370, v8372, 0, v8367, v8368, v8369, v8365, v8366, v8373, v8374, v8375, 3, 2, 10, 7, 29, 6, 5, 27, 13, 38, 28, 8, 4) :|: TRUE
f_1455(v8358, v8359, v8360, v8361, v8362, v8363, 1, v8370, v8372, 0, v8367, v8368, v8369, v8365, v8366, v8373, v8374, v8375, 3, 2, 10, 7, 29, 6, 5, 27, 13, 38, 28, 8, 4) -> f_1462(v8358, v8359, v8360, v8361, v8362, v8363, 1, v8370, v8372, 0, v8368, v8369, v8365, v8366, v8373, v8374, v8375, 3, 10, 7, 2, 29, 6, 13, 38, 28, 8, 4) :|: 0 = 0
f_1462(v8358, v8359, v8360, v8361, v8362, v8363, 1, v8370, v8372, 0, v8368, v8369, v8365, v8366, v8373, v8374, v8375, 3, 10, 7, 2, 29, 6, 13, 38, 28, 8, 4) -> f_1469(v8358, v8359, v8360, v8361, v8362, v8363, 1, v8370, v8372, 0, v8911, v8368, v8369, v8365, v8366, v8373, v8374, v8375, 3, 10, 7, 2, 29, 6, 13, 38, 28, 8, 4) :|: v8911 = 2 + v8372 && 10 <= v8911
f_1469(v8358, v8359, v8360, v8361, v8362, v8363, 1, v8370, v8372, 0, v8911, v8368, v8369, v8365, v8366, v8373, v8374, v8375, 3, 10, 7, 2, 29, 6, 13, 38, 28, 8, 4) -> f_1476(v8358, v8359, v8360, v8361, v8362, v8363, 1, v8370, v8372, 0, v8911, v8368, v8369, v8365, v8366, v8373, v8374, v8375, 3, 10, 7, 2, 29, 6, 13, 38, 28, 8, 4) :|: TRUE
f_1476(v8358, v8359, v8360, v8361, v8362, v8363, 1, v8370, v8372, 0, v8911, v8368, v8369, v8365, v8366, v8373, v8374, v8375, 3, 10, 7, 2, 29, 6, 13, 38, 28, 8, 4) -> f_1483(v8358, v8359, v8360, v8361, v8362, v8363, 1, v8370, v8372, 0, v8911, v8369, v8365, v8366, v8373, v8374, v8375, 3, 7, 2, 12, 29, 6, 28, 13, 8, 4, 10) :|: 0 = 0
f_1483(v8358, v8359, v8360, v8361, v8362, v8363, 1, v8370, v8372, 0, v8911, v8369, v8365, v8366, v8373, v8374, v8375, 3, 7, 2, 12, 29, 6, 28, 13, 8, 4, 10) -> f_1491(v8358, v8359, v8360, v8361, v8362, v8363, 1, v8370, v8372, 0, v8911, v9082, v8365, v8366, v8373, v8374, v8375, 3, 7, 2, 10, 29, 6, 13, 8, 4) :|: 10 + v9082 = v8370 && 3 <= v9082
f_1491(v8358, v8359, v8360, v8361, v8362, v8363, 1, v8370, v8372, 0, v8911, v9082, v8365, v8366, v8373, v8374, v8375, 3, 7, 2, 10, 29, 6, 13, 8, 4) -> f_1500(v8358, v8359, v8360, v8361, v8362, v8363, 1, v8370, v8372, 0, v8911, v9082, v8365, v8366, v8373, v8374, v8375, 3, 7, 2, 10, 29, 6, 13, 8, 4) :|: TRUE
f_1500(v8358, v8359, v8360, v8361, v8362, v8363, 1, v8370, v8372, 0, v8911, v9082, v8365, v8366, v8373, v8374, v8375, 3, 7, 2, 10, 29, 6, 13, 8, 4) -> f_1509(v8358, v8359, v8360, v8361, v8362, v8363, 1, v8370, v8372, 0, v8911, v9082, v8365, v8366, v8373, v8374, v8375, 3, 7, 2, 10, 29, 6, 13, 8, 4) :|: TRUE
f_1509(v8358, v8359, v8360, v8361, v8362, v8363, 1, v8370, v8372, 0, v8911, v9082, v8365, v8366, v8373, v8374, v8375, 3, 7, 2, 10, 29, 6, 13, 8, 4) -> f_1518(v8358, v8359, v8360, v8361, v8362, v8911, 1, v8370, v8372, 0, v9082, v8365, v8366, v8373, v8374, v8375, 3, 7, 2, 10, 29, 6, 13, 8, 4) :|: 0 = 0
f_1518(v8358, v8359, v8360, v8361, v8362, v8911, 1, v8370, v8372, 0, v9082, v8365, v8366, v8373, v8374, v8375, 3, 7, 2, 10, 29, 6, 13, 8, 4) -> f_1526(v8358, v8359, v8360, v8361, v8362, v8911, 1, v8370, v8372, 0, v9082, v8365, v8366, v8373, v8374, v8375, 3, 7, 2, 10, 29, 6, 25, 26, 13, 32, 8, 27, 4, 22) :|: v8911 < 30 && v8372 <= 27 && v8366 <= 26 && v8365 <= 25 && v8370 <= 32 && v9082 <= 22
f_1526(v8358, v8359, v8360, v8361, v8362, v8911, 1, v8370, v8372, 0, v9082, v8365, v8366, v8373, v8374, v8375, 3, 7, 2, 10, 29, 6, 25, 26, 13, 32, 8, 27, 4, 22) -> f_1535(v8358, v8359, v8360, v8361, v8362, v8911, 1, v8370, v8372, 0, v9082, v8365, v8366, v8373, v8374, v8375, 3, 7, 2, 10, 29, 6, 25, 26, 13, 32, 8, 27, 4, 22) :|: 0 = 0
f_1535(v8358, v8359, v8360, v8361, v8362, v8911, 1, v8370, v8372, 0, v9082, v8365, v8366, v8373, v8374, v8375, 3, 7, 2, 10, 29, 6, 25, 26, 13, 32, 8, 27, 4, 22) -> f_1543(v8358, v8359, v8360, v8361, v8362, v8911, 1, v8370, v8372, 0, v9082, v8365, v8366, v8373, v8374, v8375, 3, 7, 2, 10, 29, 6, 25, 26, 13, 32, 8, 27, 4, 22) :|: TRUE
f_1543(v8358, v8359, v8360, v8361, v8362, v8911, 1, v8370, v8372, 0, v9082, v8365, v8366, v8373, v8374, v8375, 3, 7, 2, 10, 29, 6, 25, 26, 13, 32, 8, 27, 4, 22) -> f_1551(v8358, v8359, v8360, v8361, v8362, v8911, 1, v8370, v8372, 0, v9082, v8365, v8366, v8373, v8374, v8375, 3, 7, 2, 10, 29, 6, 25, 26, 13, 32, 8, 27, 4, 22) :|: TRUE
f_1551(v8358, v8359, v8360, v8361, v8362, v8911, 1, v8370, v8372, 0, v9082, v8365, v8366, v8373, v8374, v8375, 3, 7, 2, 10, 29, 6, 25, 26, 13, 32, 8, 27, 4, 22) -> f_882(v8358, v8359, v8360, v8361, v8362, v8911, 1, v8370, v8372, 0, v9082, v8365, v8366, v8373, v8374, v8375, 3, 7, 2, 10, 29, 13, 32, 8, 27, 22, 6, 25, 26, 4) :|: TRUE
f_882(v2765, v2766, v2767, v2768, v2769, v2770, 1, v2772, v2773, 0, v2775, v2776, v2777, v2778, v2779, v2780, 3, 7, 2, 10, 29, 13, 32, 8, 27, 22, 6, 25, 26, 4) -> f_888(v2765, v2766, v2767, v2768, v2769, v2770, 1, v2775, v2773, 0, v2772, v2776, v2777, v2778, v2779, v2780, 3, 7, 2, 10, 29, 13, 32, 8, 27, 22, 6, 25, 26, 4) :|: 0 = 0
Combined rules. Obtained 2 rulesP rules:
f_1431(v8358:0, v8359:0, v8360:0, v8361:0, v8362:0, v8363:0, 1, v8370:0, v8372:0, v8367:0, v8368:0, v8369:0, v8365:0, 0, v8366:0, v8373:0, v8374:0, v8375:0, 3, 2, 10, 7, 29, 6, 5, 27, 13, 38, 28, 8, 4) -> f_1431(v8358:0, v8359:0, v8360:0, v8361:0, v8362:0, v8363:0, 1, 7 + v8370:0, 1 + v8372:0, v8367:0, v8368:0, v8369:0, v8370:0, 0, v8372:0, v8373:0, v8374:0, v8375:0, 3, 2, 10, 7, 29, 6, 5, 27, 13, 38, 28, 8, 4) :|: v8372:0 > 13 && v8370:0 > 5 && v8366:0 > 12 && v8372:0 > v8370:0
f_1431(v8358:0, v8359:0, v8360:0, v8361:0, v8362:0, v8363:0, 1, 10 + v9082:0, v8372:0, v8367:0, v8368:0, v8369:0, v8365:0, 0, v8366:0, v8373:0, v8374:0, v8375:0, 3, 2, 10, 7, 29, 6, 5, 27, 13, 38, 28, 8, 4) -> f_1431(v8358:0, v8359:0, v8360:0, v8361:0, v8362:0, 2 + v8372:0, 1, 7 + v9082:0, 1 + (2 + v8372:0), v8372:0, 10 + v9082:0, v9082:0, v9082:0, 0, 2 + v8372:0, v8373:0, v8374:0, v8375:0, 3, 2, 10, 7, 29, 6, 5, 27, 13, 38, 28, 8, 4) :|: v9082:0 > 5 && v8372:0 <= 10 + v9082:0 && v8372:0 > 7 && v8372:0 < 28 && v8366:0 < 27 && v8365:0 < 26 && v9082:0 < 23
Filtered unneeded arguments:
   f_1431(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31) -> f_1431(x8, x9, x13, x15)
Removed division, modulo operations, cleaned up constraints. Obtained 2 rules.P rules:
f_1431(v8370:0, v8372:0, v8365:0, v8366:0) -> f_1431(7 + v8370:0, 1 + v8372:0, v8370:0, v8372:0) :|: v8370:0 > 5 && v8372:0 > 13 && v8372:0 > v8370:0 && v8366:0 > 12
f_1431(sum~cons_10~v9082:0, v8372:0, v8365:0, v8366:0) -> f_1431(7 + v9082:0, 1 + (2 + v8372:0), v9082:0, 2 + v8372:0) :|: v8372:0 <= 10 + v9082:0 && v9082:0 > 5 && v8372:0 > 7 && v8372:0 < 28 && v8366:0 < 27 && v9082:0 < 23 && v8365:0 < 26 && sum~cons_10~v9082:0 = 10 + v9082:0

----------------------------------------

(31)
Obligation:
Rules:
f_1431(v8370:0, v8372:0, v8365:0, v8366:0) -> f_1431(7 + v8370:0, 1 + v8372:0, v8370:0, v8372:0) :|: v8370:0 > 5 && v8372:0 > 13 && v8372:0 > v8370:0 && v8366:0 > 12
f_1431(x, x1, x2, x3) -> f_1431(7 + x4, 1 + (2 + x1), x4, 2 + x1) :|: x1 <= 10 + x4 && x4 > 5 && x1 > 7 && x1 < 28 && x3 < 27 && x4 < 23 && x2 < 26 && x = 10 + x4

----------------------------------------

(32) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(33)
Obligation:
Rules:
f_1431(v8370:0:0, v8372:0:0, v8365:0:0, v8366:0:0) -> f_1431(7 + v8370:0:0, 1 + v8372:0:0, v8370:0:0, v8372:0:0) :|: v8372:0:0 > v8370:0:0 && v8366:0:0 > 12 && v8372:0:0 > 13 && v8370:0:0 > 5
f_1431(sum~cons_10~x4:0, x1:0, x2:0, x3:0) -> f_1431(7 + x4:0, 1 + (2 + x1:0), x4:0, 2 + x1:0) :|: x4:0 < 23 && x2:0 < 26 && x3:0 < 27 && x1:0 < 28 && x1:0 > 7 && x4:0 > 5 && x1:0 <= 10 + x4:0 && sum~cons_10~x4:0 = 10 + x4:0

----------------------------------------

(34) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_1431 ] = -5/12*f_1431_2 + -1/12*f_1431_1

The following rules are decreasing:
f_1431(v8370:0:0, v8372:0:0, v8365:0:0, v8366:0:0) -> f_1431(7 + v8370:0:0, 1 + v8372:0:0, v8370:0:0, v8372:0:0) :|: v8372:0:0 > v8370:0:0 && v8366:0:0 > 12 && v8372:0:0 > 13 && v8370:0:0 > 5
f_1431(sum~cons_10~x4:0, x1:0, x2:0, x3:0) -> f_1431(7 + x4:0, 1 + (2 + x1:0), x4:0, 2 + x1:0) :|: x4:0 < 23 && x2:0 < 26 && x3:0 < 27 && x1:0 < 28 && x1:0 > 7 && x4:0 > 5 && x1:0 <= 10 + x4:0 && sum~cons_10~x4:0 = 10 + x4:0

The following rules are bounded:
f_1431(sum~cons_10~x4:0, x1:0, x2:0, x3:0) -> f_1431(7 + x4:0, 1 + (2 + x1:0), x4:0, 2 + x1:0) :|: x4:0 < 23 && x2:0 < 26 && x3:0 < 27 && x1:0 < 28 && x1:0 > 7 && x4:0 > 5 && x1:0 <= 10 + x4:0 && sum~cons_10~x4:0 = 10 + x4:0


----------------------------------------

(35)
Obligation:
Rules:
f_1431(v8370:0:0, v8372:0:0, v8365:0:0, v8366:0:0) -> f_1431(7 + v8370:0:0, 1 + v8372:0:0, v8370:0:0, v8372:0:0) :|: v8372:0:0 > v8370:0:0 && v8366:0:0 > 12 && v8372:0:0 > 13 && v8370:0:0 > 5

----------------------------------------

(36) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(37)
Obligation:
Rules:
f_1431(v8370:0:0:0, v8372:0:0:0, v8365:0:0:0, v8366:0:0:0) -> f_1431(7 + v8370:0:0:0, 1 + v8372:0:0:0, v8370:0:0:0, v8372:0:0:0) :|: v8372:0:0:0 > 13 && v8370:0:0:0 > 5 && v8366:0:0:0 > 12 && v8372:0:0:0 > v8370:0:0:0

----------------------------------------

(38) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_1431(x1, x2, x3, x4) -> f_1431(x1, x2, x4)

----------------------------------------

(39)
Obligation:
Rules:
f_1431(v8370:0:0:0, v8372:0:0:0, v8366:0:0:0) -> f_1431(7 + v8370:0:0:0, 1 + v8372:0:0:0, v8372:0:0:0) :|: v8372:0:0:0 > 13 && v8370:0:0:0 > 5 && v8366:0:0:0 > 12 && v8372:0:0:0 > v8370:0:0:0

----------------------------------------

(40) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_1431(x, x1, x2)] = -1 - x + x1

The following rules are decreasing:
f_1431(v8370:0:0:0, v8372:0:0:0, v8366:0:0:0) -> f_1431(7 + v8370:0:0:0, 1 + v8372:0:0:0, v8372:0:0:0) :|: v8372:0:0:0 > 13 && v8370:0:0:0 > 5 && v8366:0:0:0 > 12 && v8372:0:0:0 > v8370:0:0:0
The following rules are bounded:
f_1431(v8370:0:0:0, v8372:0:0:0, v8366:0:0:0) -> f_1431(7 + v8370:0:0:0, 1 + v8372:0:0:0, v8372:0:0:0) :|: v8372:0:0:0 > 13 && v8370:0:0:0 > 5 && v8366:0:0:0 > 12 && v8372:0:0:0 > v8370:0:0:0

----------------------------------------

(41)
YES

----------------------------------------

(42)
Obligation:
SCC
----------------------------------------

(43) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 45 rulesP rules:
f_840(v1766, v1767, v1768, v1769, v1770, v1777, 1, v1773, 0, v1775, v1776, v1778, v1779, v1780, v1781, 3, 2, 10, 29, 7, 5, 6, 9, 4) -> f_849(v1766, v1767, v1768, v1769, v1770, v1777, 1, v1778, v1773, 0, v1775, v1776, v1779, v1780, v1781, 3, 2, 10, 29, 7, 5, 6, 9, 4) :|: 0 = 0
f_849(v1766, v1767, v1768, v1769, v1770, v1777, 1, v1778, v1773, 0, v1775, v1776, v1779, v1780, v1781, 3, 2, 10, 29, 7, 5, 6, 9, 4) -> f_859(v1766, v1767, v1768, v1769, v1770, v1777, 1, v1778, 0, v1775, v1773, v1776, v1779, v1780, v1781, 3, 2, 10, 29, 7, 5, 6, 9, 4) :|: 0 = 0
f_859(v1766, v1767, v1768, v1769, v1770, v1777, 1, v1778, 0, v1775, v1773, v1776, v1779, v1780, v1781, 3, 2, 10, 29, 7, 5, 6, 9, 4) -> f_869(v1766, v1767, v1768, v1769, v1770, v1777, 1, v1778, v1775, 0, v1773, v1776, v1779, v1780, v1781, 3, 2, 10, 29, 7, 5, 6, 9, 4) :|: 0 = 0
f_869(v1766, v1767, v1768, v1769, v1770, v1777, 1, v1778, v1775, 0, v1773, v1776, v1779, v1780, v1781, 3, 2, 10, 29, 7, 5, 6, 9, 4) -> f_879(v1766, v1767, v1768, v1769, v1770, v1777, 1, v1778, v1775, 0, v1773, v1776, v1779, v1780, v1781, 3, 2, 10, 29, 7, 5, 6, 9, 4) :|: TRUE
f_879(v1766, v1767, v1768, v1769, v1770, v1777, 1, v1778, v1775, 0, v1773, v1776, v1779, v1780, v1781, 3, 2, 10, 29, 7, 5, 6, 9, 4) -> f_1045(v1766, v1767, v1768, v1769, v1770, v1777, 1, v1778, v1777, v1775, 0, v1773, v1776, v1773, v1773, v1773, v1778, v1779, v1780, v1781, 3, 2, 10, 29, 17, 7, 18, 5, 15, 4) :|: TRUE
f_1045(v4569, v4570, v4571, v4572, v4573, v4574, 1, v4576, v4577, v4578, 0, v4580, v4581, v4582, v4583, v4584, v4585, v4586, v4587, v4588, 3, 2, 10, 29, 17, 7, 18, 5, 15, 4) -> f_1203(v4569, v4570, v4571, v4572, v4573, v4574, 1, v4576, v4577, v4578, 0, v4580, v4581, v4582, v4583, v4584, v4585, v4586, v4587, v4588, 3, 2, 10, 29, 17, 7, 19, 5, 18, 15, 4) :|: TRUE
f_1203(v6250, v6251, v6252, v6253, v6254, v6255, 1, v6257, v6258, v6259, 0, v6261, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 2, 10, 29, 17, 7, 19, 5, 18, 15, 4) -> f_1355(v6250, v6251, v6252, v6253, v6254, v6255, 1, v6257, v6258, v6259, 0, v6261, v6262, v6263, v6264, v6265, v6266, v6267, v6268, v6269, 3, 2, 10, 29, 17, 7, 5, 15, 4) :|: TRUE
f_1355(v7702, v7703, v7704, v7705, v7706, v7707, 1, v7709, v7710, v7711, 0, v7713, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v7721, 3, 2, 10, 29, 17, 7, 5, 15, 4) -> f_1363(v7702, v7703, v7704, v7705, v7706, v7707, 1, v7709, v7710, 0, v7711, v7713, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v7721, 3, 2, 10, 29, 17, 7, 5, 15, 4) :|: 0 = 0
f_1363(v7702, v7703, v7704, v7705, v7706, v7707, 1, v7709, v7710, 0, v7711, v7713, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v7721, 3, 2, 10, 29, 17, 7, 5, 15, 4) -> f_1371(v7702, v7703, v7704, v7705, v7706, v7707, 1, v7709, v7710, 0, v7711, v7713, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v7721, 3, 2, 10, 29, 17, 5, 7, 15, 4) :|: v7709 <= 5
f_1371(v7702, v7703, v7704, v7705, v7706, v7707, 1, v7709, v7710, 0, v7711, v7713, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v7721, 3, 2, 10, 29, 17, 5, 7, 15, 4) -> f_1378(v7702, v7703, v7704, v7705, v7706, v7707, 1, v7709, v7710, 0, v7711, v7713, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v7721, 3, 2, 10, 29, 17, 5, 7, 15, 4) :|: 0 = 0
f_1378(v7702, v7703, v7704, v7705, v7706, v7707, 1, v7709, v7710, 0, v7711, v7713, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v7721, 3, 2, 10, 29, 17, 5, 7, 15, 4) -> f_1384(v7702, v7703, v7704, v7705, v7706, v7707, 1, v7709, v7710, 0, v7711, v7713, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v7721, 3, 2, 10, 29, 17, 5, 7, 15, 4) :|: TRUE
f_1384(v7702, v7703, v7704, v7705, v7706, v7707, 1, v7709, v7710, 0, v7711, v7713, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v7721, 3, 2, 10, 29, 17, 5, 7, 15, 4) -> f_1390(v7702, v7703, v7704, v7705, v7706, v7707, 1, v7709, v7710, 0, v7713, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v7721, 3, 2, 10, 29, 17, 5, 7, 15, 4) :|: 0 = 0
f_1390(v7702, v7703, v7704, v7705, v7706, v7707, 1, v7709, v7710, 0, v7713, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v7721, 3, 2, 10, 29, 17, 5, 7, 15, 4) -> f_1396(v7702, v7703, v7704, v7705, v7706, v7707, 1, v7709, v7710, 0, v8143, v7713, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v7721, 3, 2, 10, 29, 17, 5, 7, 15, 4) :|: v8143 = 2 + v7709 && v8143 <= 7
f_1396(v7702, v7703, v7704, v7705, v7706, v7707, 1, v7709, v7710, 0, v8143, v7713, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v7721, 3, 2, 10, 29, 17, 5, 7, 15, 4) -> f_1402(v7702, v7703, v7704, v7705, v7706, v7707, 1, v7709, v7710, 0, v8143, v7713, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v7721, 3, 2, 10, 29, 17, 5, 7, 15, 4) :|: TRUE
f_1402(v7702, v7703, v7704, v7705, v7706, v7707, 1, v7709, v7710, 0, v8143, v7713, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v7721, 3, 2, 10, 29, 17, 5, 7, 15, 4) -> f_1408(v7702, v7703, v7704, v7705, v7706, v7707, 1, v7709, v7710, 0, v8143, v7713, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v7721, 3, 2, 10, 29, 17, 5, 7, 15, 4) :|: TRUE
f_1408(v7702, v7703, v7704, v7705, v7706, v7707, 1, v7709, v7710, 0, v8143, v7713, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v7721, 3, 2, 10, 29, 17, 5, 7, 15, 4) -> f_1416(v7702, v7703, v7704, v7705, v7706, v7707, 1, v7709, v7710, 0, v8143, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v7721, 3, 2, 10, 29, 17, 5, 15, 4, 7) :|: 0 = 0
f_1416(v7702, v7703, v7704, v7705, v7706, v7707, 1, v7709, v7710, 0, v8143, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v7721, 3, 2, 10, 29, 17, 5, 15, 4, 7) -> f_1423(v7702, v7703, v7704, v7705, v7706, v7707, 1, v7709, v7710, 0, v8143, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v7721, 3, 2, 10, 29, 17, 5, 15, 4, 7) :|: 0 = 0
f_1423(v7702, v7703, v7704, v7705, v7706, v7707, 1, v7709, v7710, 0, v8143, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v7721, 3, 2, 10, 29, 17, 5, 15, 4, 7) -> f_1430(v7702, v7703, v7704, v7705, v7706, v7707, 1, v7709, v7710, 0, v8143, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v7721, 3, 2, 10, 29, 17, 5, 15, 4, 7) :|: TRUE
f_1430(v7702, v7703, v7704, v7705, v7706, v7707, 1, v7709, v7710, 0, v8143, v7714, v7715, v7716, v7717, v7718, v7719, v7720, v7721, 3, 2, 10, 29, 17, 5, 15, 4, 7) -> f_1436(v7702, v7703, v7704, v7705, v7706, v7707, 1, v7709, v7710, 0, v8143, v7715, v7716, v7717, v7718, v7719, v7720, v7721, 3, 2, 10, 29, 17, 5, 15, 4, 7) :|: 0 = 0
f_1436(v7702, v7703, v7704, v7705, v7706, v7707, 1, v7709, v7710, 0, v8143, v7715, v7716, v7717, v7718, v7719, v7720, v7721, 3, 2, 10, 29, 17, 5, 15, 4, 7) -> f_1444(v7702, v7703, v7704, v7705, v7706, v7707, 1, v7709, v7710, 0, v8143, v8641, v7716, v7717, v7718, v7719, v7720, v7721, 3, 2, 10, 29, 17, 5, 15, 4, 7) :|: v8641 = 1 + v7710
f_1444(v7702, v7703, v7704, v7705, v7706, v7707, 1, v7709, v7710, 0, v8143, v8641, v7716, v7717, v7718, v7719, v7720, v7721, 3, 2, 10, 29, 17, 5, 15, 4, 7) -> f_1452(v7702, v7703, v7704, v7705, v7706, v7707, 1, v7709, v7710, 0, v8143, v8641, v7716, v7717, v7718, v7719, v7720, v7721, 3, 2, 10, 29, 17, 5, 15, 4, 7) :|: TRUE
f_1452(v7702, v7703, v7704, v7705, v7706, v7707, 1, v7709, v7710, 0, v8143, v8641, v7716, v7717, v7718, v7719, v7720, v7721, 3, 2, 10, 29, 17, 5, 15, 4, 7) -> f_1459(v7702, v7703, v7704, v7705, v7706, v7707, 1, v7709, v7710, 0, v8143, v8641, v7716, v7717, v7718, v7719, v7720, v7721, 3, 2, 10, 29, 17, 5, 15, 4, 7) :|: TRUE
f_1459(v7702, v7703, v7704, v7705, v7706, v7707, 1, v7709, v7710, 0, v8143, v8641, v7716, v7717, v7718, v7719, v7720, v7721, 3, 2, 10, 29, 17, 5, 15, 4, 7) -> f_1460(v7702, v7703, v7704, v7705, v7706, v7707, 1, v7709, v7710, v7716, v7717, v7718, 0, v8143, v8641, v7719, v7720, v7721, 3, 2, 10, 29, 17, 5, 15, 7, 4) :|: TRUE
f_1460(v8842, v8843, v8844, v8845, v8846, v8847, 1, v8849, v8850, v8851, v8852, v8853, 0, v8855, v8856, v8857, v8858, v8859, 3, 2, 10, 29, 17, 5, 15, 7, 4) -> f_1466(v8842, v8843, v8844, v8845, v8846, v8847, 1, v8849, v8850, v8851, v8852, v8853, 0, v8855, v8856, v8857, v8858, v8859, 3, 2, 10, 29, 17, 5, 15, 7, 4) :|: TRUE
f_1466(v8842, v8843, v8844, v8845, v8846, v8847, 1, v8849, v8850, v8851, v8852, v8853, 0, v8855, v8856, v8857, v8858, v8859, 3, 2, 10, 29, 17, 5, 15, 7, 4) -> f_1473(v8842, v8843, v8844, v8845, v8846, v8847, 1, v8855, v8850, v8851, v8852, v8853, v8849, 0, v8856, v8857, v8858, v8859, 3, 2, 10, 29, 17, 5, 15, 7, 4) :|: 0 = 0
f_1473(v8842, v8843, v8844, v8845, v8846, v8847, 1, v8855, v8850, v8851, v8852, v8853, v8849, 0, v8856, v8857, v8858, v8859, 3, 2, 10, 29, 17, 5, 15, 7, 4) -> f_1480(v8842, v8843, v8844, v8845, v8846, v8847, 1, v8855, v8856, v8851, v8852, v8853, v8849, 0, v8850, v8857, v8858, v8859, 3, 2, 10, 29, 17, 5, 15, 7, 4) :|: 0 = 0
f_1480(v8842, v8843, v8844, v8845, v8846, v8847, 1, v8855, v8856, v8851, v8852, v8853, v8849, 0, v8850, v8857, v8858, v8859, 3, 2, 10, 29, 17, 5, 15, 7, 4) -> f_1487(v8842, v8843, v8844, v8845, v8846, v8847, 1, v8855, v8856, v8851, v8852, v8853, v8849, 0, v8850, v8857, v8858, v8859, 3, 2, 10, 29, 17, 5, 15, 7, 4) :|: v8855 < v8856
f_1480(v8842, v8843, v8844, v8845, v8846, v8847, 1, v8855, v8856, v8851, v8852, v8853, v8849, 0, v8850, v8857, v8858, v8859, 3, 2, 10, 29, 17, 5, 15, 7, 4) -> f_1488(v8842, v8843, v8844, v8845, v8846, v8847, 1, v8855, v8851, v8852, v8853, v8849, 0, v8850, v8857, v8858, v8859, 3, 2, 10, 29, 7, 5, 6, 15, 4) :|: v8856 <= v8855 && v8850 <= 6 && v8851 <= 5 && v8847 <= 7 && v8856 = v8855
f_1487(v8842, v8843, v8844, v8845, v8846, v8847, 1, v8855, v8856, v8851, v8852, v8853, v8849, 0, v8850, v8857, v8858, v8859, 3, 2, 10, 29, 17, 5, 15, 7, 4) -> f_1496(v8842, v8843, v8844, v8845, v8846, v8847, 1, v8855, v8856, v8851, v8852, v8853, v8849, 0, v8850, v8857, v8858, v8859, 3, 2, 10, 29, 17, 5, 15, 7, 4) :|: 0 = 0
f_1496(v8842, v8843, v8844, v8845, v8846, v8847, 1, v8855, v8856, v8851, v8852, v8853, v8849, 0, v8850, v8857, v8858, v8859, 3, 2, 10, 29, 17, 5, 15, 7, 4) -> f_1505(v8842, v8843, v8844, v8845, v8846, v8847, 1, v8855, v8856, v8851, v8852, v8853, v8849, 0, v8850, v8857, v8858, v8859, 3, 2, 10, 29, 17, 5, 15, 7, 4) :|: TRUE
f_1505(v8842, v8843, v8844, v8845, v8846, v8847, 1, v8855, v8856, v8851, v8852, v8853, v8849, 0, v8850, v8857, v8858, v8859, 3, 2, 10, 29, 17, 5, 15, 7, 4) -> f_1355(v8842, v8843, v8844, v8845, v8846, v8847, 1, v8855, v8856, v8849, 0, v8855, v8850, v8856, v8851, v8852, v8853, v8857, v8858, v8859, 3, 2, 10, 29, 17, 7, 5, 15, 4) :|: TRUE
f_1488(v8842, v8843, v8844, v8845, v8846, v8847, 1, v8855, v8851, v8852, v8853, v8849, 0, v8850, v8857, v8858, v8859, 3, 2, 10, 29, 7, 5, 6, 15, 4) -> f_1497(v8842, v8843, v8844, v8845, v8846, v8847, 1, v8855, 0, v8851, v8852, v8853, v8849, v8850, v8857, v8858, v8859, 3, 2, 10, 29, 7, 5, 6, 15, 4) :|: 0 = 0
f_1497(v8842, v8843, v8844, v8845, v8846, v8847, 1, v8855, 0, v8851, v8852, v8853, v8849, v8850, v8857, v8858, v8859, 3, 2, 10, 29, 7, 5, 6, 15, 4) -> f_1506(v8842, v8843, v8844, v8845, v8846, v8847, 1, v8855, 0, v8851, v8852, v8853, v8849, v8850, v8857, v8858, v8859, 3, 2, 10, 29, 7, 5, 6, 15, 4) :|: TRUE
f_1506(v8842, v8843, v8844, v8845, v8846, v8847, 1, v8855, 0, v8851, v8852, v8853, v8849, v8850, v8857, v8858, v8859, 3, 2, 10, 29, 7, 5, 6, 15, 4) -> f_1515(v8842, v8843, v8844, v8845, v8846, v8847, 1, v8855, 0, v8852, v8853, v8849, v8850, v8857, v8858, v8859, 3, 10, 2, 29, 7, 5, 6, 15, 4) :|: 0 = 0
f_1515(v8842, v8843, v8844, v8845, v8846, v8847, 1, v8855, 0, v8852, v8853, v8849, v8850, v8857, v8858, v8859, 3, 10, 2, 29, 7, 5, 6, 15, 4) -> f_1523(v8842, v8843, v8844, v8845, v8846, v8847, 1, v8855, 0, v9430, v8852, v8853, v8849, v8850, v8857, v8858, v8859, 3, 10, 2, 29, 7, 5, 6, 15, 4, 9) :|: v9430 = 2 + v8855 && v9430 <= 9
f_1523(v8842, v8843, v8844, v8845, v8846, v8847, 1, v8855, 0, v9430, v8852, v8853, v8849, v8850, v8857, v8858, v8859, 3, 10, 2, 29, 7, 5, 6, 15, 4, 9) -> f_1532(v8842, v8843, v8844, v8845, v8846, v8847, 1, v8855, 0, v9430, v8852, v8853, v8849, v8850, v8857, v8858, v8859, 3, 10, 2, 29, 7, 5, 6, 15, 4, 9) :|: TRUE
f_1532(v8842, v8843, v8844, v8845, v8846, v8847, 1, v8855, 0, v9430, v8852, v8853, v8849, v8850, v8857, v8858, v8859, 3, 10, 2, 29, 7, 5, 6, 15, 4, 9) -> f_1540(v8842, v8843, v8844, v8845, v8846, v8847, 1, v8855, 0, v9430, v8853, v8849, v8850, v8857, v8858, v8859, 3, 2, 12, 29, 7, 5, 6, 4, 9) :|: 0 = 0
f_1540(v8842, v8843, v8844, v8845, v8846, v8847, 1, v8855, 0, v9430, v8853, v8849, v8850, v8857, v8858, v8859, 3, 2, 12, 29, 7, 5, 6, 4, 9) -> f_1548(v8842, v8843, v8844, v8845, v8846, v8847, 1, v8855, 0, v9430, v9719, v8849, v8850, v8857, v8858, v8859, 3, 2, 10, 29, 7, 5, 6, 4, 9) :|: 10 + v9719 = v8855 && 3 + v9719 <= 0
f_1548(v8842, v8843, v8844, v8845, v8846, v8847, 1, v8855, 0, v9430, v9719, v8849, v8850, v8857, v8858, v8859, 3, 2, 10, 29, 7, 5, 6, 4, 9) -> f_1555(v8842, v8843, v8844, v8845, v8846, v8847, 1, v8855, 0, v9430, v9719, v8849, v8850, v8857, v8858, v8859, 3, 2, 10, 29, 7, 5, 6, 4, 9) :|: TRUE
f_1555(v8842, v8843, v8844, v8845, v8846, v8847, 1, v8855, 0, v9430, v9719, v8849, v8850, v8857, v8858, v8859, 3, 2, 10, 29, 7, 5, 6, 4, 9) -> f_1560(v8842, v8843, v8844, v8845, v8846, v8847, 1, v8855, 0, v9430, v9719, v8849, v8850, v8857, v8858, v8859, 3, 2, 10, 29, 7, 5, 6, 4, 9) :|: TRUE
f_1560(v8842, v8843, v8844, v8845, v8846, v8847, 1, v8855, 0, v9430, v9719, v8849, v8850, v8857, v8858, v8859, 3, 2, 10, 29, 7, 5, 6, 4, 9) -> f_1566(v8842, v8843, v8844, v8845, v8846, v9430, 1, v8855, 0, v9719, v8849, v8850, v8857, v8858, v8859, 3, 2, 10, 29, 5, 6, 7, 4, 9) :|: 0 = 0
f_1566(v8842, v8843, v8844, v8845, v8846, v9430, 1, v8855, 0, v9719, v8849, v8850, v8857, v8858, v8859, 3, 2, 10, 29, 5, 6, 7, 4, 9) -> f_1572(v8842, v8843, v8844, v8845, v8846, v9430, 1, v8855, 0, v9719, v8849, v8850, v8857, v8858, v8859, 3, 2, 10, 29, 5, 6, 7, 4, 9) :|: 0 = 0
f_1572(v8842, v8843, v8844, v8845, v8846, v9430, 1, v8855, 0, v9719, v8849, v8850, v8857, v8858, v8859, 3, 2, 10, 29, 5, 6, 7, 4, 9) -> f_1578(v8842, v8843, v8844, v8845, v8846, v9430, 1, v8855, 0, v9719, v8849, v8850, v8857, v8858, v8859, 3, 2, 10, 29, 5, 6, 7, 4, 9) :|: TRUE
f_1578(v8842, v8843, v8844, v8845, v8846, v9430, 1, v8855, 0, v9719, v8849, v8850, v8857, v8858, v8859, 3, 2, 10, 29, 5, 6, 7, 4, 9) -> f_831(v8842, v8843, v8844, v8845, v8846, v9430, 1, v8855, 0, v8849, v8850, v9719, v8857, v8858, v8859, 3, 2, 10, 29, 7, 5, 6, 9, 4) :|: TRUE
f_831(v1766, v1767, v1768, v1769, v1770, v1777, 1, v1773, 0, v1775, v1776, v1778, v1779, v1780, v1781, 3, 2, 10, 29, 7, 5, 6, 9, 4) -> f_840(v1766, v1767, v1768, v1769, v1770, v1777, 1, v1773, 0, v1775, v1776, v1778, v1779, v1780, v1781, 3, 2, 10, 29, 7, 5, 6, 9, 4) :|: TRUE
Combined rules. Obtained 2 rulesP rules:
f_1480(v8842:0, v8843:0, v8844:0, v8845:0, v8846:0, v8847:0, 1, v8855:0, v8856:0, v8851:0, v8852:0, v8853:0, v8849:0, 0, v8850:0, v8857:0, v8858:0, v8859:0, 3, 2, 10, 29, 17, 5, 15, 7, 4) -> f_1480(v8842:0, v8843:0, v8844:0, v8845:0, v8846:0, v8847:0, 1, 2 + v8855:0, 1 + v8856:0, v8851:0, v8852:0, v8853:0, v8855:0, 0, v8856:0, v8857:0, v8858:0, v8859:0, 3, 2, 10, 29, 17, 5, 15, 7, 4) :|: v8855:0 < 6 && v8856:0 > v8855:0
f_1480(v8842:0, v8843:0, v8844:0, v8845:0, v8846:0, v8847:0, 1, 10 + v9719:0, 10 + v9719:0, v8851:0, v8852:0, v8853:0, v8849:0, 0, v8850:0, v8857:0, v8858:0, v8859:0, 3, 2, 10, 29, 17, 5, 15, 7, 4) -> f_1480(v8842:0, v8843:0, v8844:0, v8845:0, v8846:0, 2 + (10 + v9719:0), 1, 2 + v9719:0, 1 + (2 + (10 + v9719:0)), 10 + v9719:0, 10 + v9719:0, v9719:0, v9719:0, 0, 2 + (10 + v9719:0), v8857:0, v8858:0, v8859:0, 3, 2, 10, 29, 17, 5, 15, 7, 4) :|: v9719:0 < 6 && v8850:0 < 7 && v8851:0 < 6 && v8847:0 < 8 && v9719:0 < -2
Filtered unneeded arguments:
   f_1480(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27) -> f_1480(x6, x8, x9, x10, x15)
Removed division, modulo operations, cleaned up constraints. Obtained 2 rules.P rules:
f_1480(v8847:0, v8855:0, v8856:0, v8851:0, v8850:0) -> f_1480(v8847:0, 2 + v8855:0, 1 + v8856:0, v8851:0, v8856:0) :|: v8855:0 < 6 && v8856:0 > v8855:0
f_1480(v8847:0, sum~cons_10~v9719:0, sum~cons_10~v9719:01, v8851:0, v8850:0) -> f_1480(2 + (10 + v9719:0), 2 + v9719:0, 1 + (2 + (10 + v9719:0)), 10 + v9719:0, 2 + (10 + v9719:0)) :|: v8850:0 < 7 && v9719:0 < 6 && v8851:0 < 6 && v9719:0 < -2 && v8847:0 < 8 && sum~cons_10~v9719:0 = 10 + v9719:0 && sum~cons_10~v9719:01 = 10 + v9719:0

----------------------------------------

(44)
Obligation:
Rules:
f_1480(v8847:0, v8855:0, v8856:0, v8851:0, v8850:0) -> f_1480(v8847:0, 2 + v8855:0, 1 + v8856:0, v8851:0, v8856:0) :|: v8855:0 < 6 && v8856:0 > v8855:0
f_1480(x, x1, x2, x3, x4) -> f_1480(2 + (10 + x5), 2 + x5, 1 + (2 + (10 + x5)), 10 + x5, 2 + (10 + x5)) :|: x4 < 7 && x5 < 6 && x3 < 6 && x5 < -2 && x < 8 && x1 = 10 + x5 && x2 = 10 + x5

----------------------------------------

(45) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(46)
Obligation:
Rules:
f_1480(v8847:0:0, v8855:0:0, v8856:0:0, v8851:0:0, v8850:0:0) -> f_1480(v8847:0:0, 2 + v8855:0:0, 1 + v8856:0:0, v8851:0:0, v8856:0:0) :|: v8855:0:0 < 6 && v8856:0:0 > v8855:0:0
f_1480(x:0, sum~cons_10~x5:0, sum~cons_10~x5:01, x3:0, x4:0) -> f_1480(2 + (10 + x5:0), 2 + x5:0, 1 + (2 + (10 + x5:0)), 10 + x5:0, 2 + (10 + x5:0)) :|: x5:0 < -2 && x:0 < 8 && x3:0 < 6 && x5:0 < 6 && x4:0 < 7 && sum~cons_10~x5:0 = 10 + x5:0 && sum~cons_10~x5:01 = 10 + x5:0

----------------------------------------

(47) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_1480 ] = 4*f_1480_2 + -9*f_1480_3

The following rules are decreasing:
f_1480(v8847:0:0, v8855:0:0, v8856:0:0, v8851:0:0, v8850:0:0) -> f_1480(v8847:0:0, 2 + v8855:0:0, 1 + v8856:0:0, v8851:0:0, v8856:0:0) :|: v8855:0:0 < 6 && v8856:0:0 > v8855:0:0
f_1480(x:0, sum~cons_10~x5:0, sum~cons_10~x5:01, x3:0, x4:0) -> f_1480(2 + (10 + x5:0), 2 + x5:0, 1 + (2 + (10 + x5:0)), 10 + x5:0, 2 + (10 + x5:0)) :|: x5:0 < -2 && x:0 < 8 && x3:0 < 6 && x5:0 < 6 && x4:0 < 7 && sum~cons_10~x5:0 = 10 + x5:0 && sum~cons_10~x5:01 = 10 + x5:0

The following rules are bounded:
f_1480(x:0, sum~cons_10~x5:0, sum~cons_10~x5:01, x3:0, x4:0) -> f_1480(2 + (10 + x5:0), 2 + x5:0, 1 + (2 + (10 + x5:0)), 10 + x5:0, 2 + (10 + x5:0)) :|: x5:0 < -2 && x:0 < 8 && x3:0 < 6 && x5:0 < 6 && x4:0 < 7 && sum~cons_10~x5:0 = 10 + x5:0 && sum~cons_10~x5:01 = 10 + x5:0


----------------------------------------

(48)
Obligation:
Rules:
f_1480(v8847:0:0, v8855:0:0, v8856:0:0, v8851:0:0, v8850:0:0) -> f_1480(v8847:0:0, 2 + v8855:0:0, 1 + v8856:0:0, v8851:0:0, v8856:0:0) :|: v8855:0:0 < 6 && v8856:0:0 > v8855:0:0

----------------------------------------

(49) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_1480(x1, x2, x3, x4, x5) -> f_1480(x2, x3)

----------------------------------------

(50)
Obligation:
Rules:
f_1480(v8855:0:0, v8856:0:0) -> f_1480(2 + v8855:0:0, 1 + v8856:0:0) :|: v8855:0:0 < 6 && v8856:0:0 > v8855:0:0

----------------------------------------

(51) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_1480 ] = -1/2*f_1480_1

The following rules are decreasing:
f_1480(v8855:0:0, v8856:0:0) -> f_1480(2 + v8855:0:0, 1 + v8856:0:0) :|: v8855:0:0 < 6 && v8856:0:0 > v8855:0:0

The following rules are bounded:
f_1480(v8855:0:0, v8856:0:0) -> f_1480(2 + v8855:0:0, 1 + v8856:0:0) :|: v8855:0:0 < 6 && v8856:0:0 > v8855:0:0


----------------------------------------

(52)
YES

----------------------------------------

(53)
Obligation:
SCC
----------------------------------------

(54) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 24 rulesP rules:
f_722(v1266, v1267, v1268, v1269, v1270, 1, v1272, v1273, v1274, 0, v1276, v1277, v1278, v1279, 3, 7, 29, 6, 28, 13, 8, 4) -> f_729(v1266, v1267, v1268, v1269, v1270, 1, v1274, v1273, v1272, 0, v1276, v1277, v1278, v1279, 3, 7, 29, 6, 28, 13, 8, 4) :|: 0 = 0
f_729(v1266, v1267, v1268, v1269, v1270, 1, v1274, v1273, v1272, 0, v1276, v1277, v1278, v1279, 3, 7, 29, 6, 28, 13, 8, 4) -> f_736(v1266, v1267, v1268, v1269, v1270, 1, v1274, v1276, v1272, 0, v1273, v1277, v1278, v1279, 3, 7, 29, 6, 28, 13, 8, 4) :|: 0 = 0
f_736(v1266, v1267, v1268, v1269, v1270, 1, v1274, v1276, v1272, 0, v1273, v1277, v1278, v1279, 3, 7, 29, 6, 28, 13, 8, 4) -> f_744(v1266, v1267, v1268, v1269, v1270, 1, v1274, v1276, v1272, 0, v1273, v1277, v1278, v1279, 3, 7, 29, 6, 28, 13, 14, 4) :|: v1274 < v1276 && 14 <= v1276 && 13 <= v1273
f_744(v1266, v1267, v1268, v1269, v1270, 1, v1274, v1276, v1272, 0, v1273, v1277, v1278, v1279, 3, 7, 29, 6, 28, 13, 14, 4) -> f_754(v1266, v1267, v1268, v1269, v1270, 1, v1274, v1276, v1272, 0, v1273, v1277, v1278, v1279, 3, 7, 29, 6, 28, 13, 14, 4) :|: 0 = 0
f_754(v1266, v1267, v1268, v1269, v1270, 1, v1274, v1276, v1272, 0, v1273, v1277, v1278, v1279, 3, 7, 29, 6, 28, 13, 14, 4) -> f_764(v1266, v1267, v1268, v1269, v1270, 1, v1274, v1276, v1272, 0, v1273, v1277, v1278, v1279, 3, 7, 29, 6, 28, 13, 14, 4) :|: TRUE
f_764(v1266, v1267, v1268, v1269, v1270, 1, v1274, v1276, v1272, 0, v1273, v1277, v1278, v1279, 3, 7, 29, 6, 28, 13, 14, 4) -> f_774(v1266, v1267, v1268, v1269, v1270, 1, v1274, v1276, v1272, 0, v1273, v1277, v1278, v1279, 3, 7, 29, 6, 28, 13, 14, 4) :|: 0 = 0
f_774(v1266, v1267, v1268, v1269, v1270, 1, v1274, v1276, v1272, 0, v1273, v1277, v1278, v1279, 3, 7, 29, 6, 28, 13, 14, 4) -> f_784(v1266, v1267, v1268, v1269, v1270, 1, v1274, v1276, v1272, 0, v1273, v1277, v1278, v1279, 3, 7, 29, 6, 28, 13, 14, 4) :|: 0 = 0
f_784(v1266, v1267, v1268, v1269, v1270, 1, v1274, v1276, v1272, 0, v1273, v1277, v1278, v1279, 3, 7, 29, 6, 28, 13, 14, 4) -> f_794(v1266, v1267, v1268, v1269, v1270, 1, v1274, v1276, v1272, 0, v1273, v1277, v1278, v1279, 3, 7, 29, 6, 28, 13, 14, 4) :|: TRUE
f_794(v1266, v1267, v1268, v1269, v1270, 1, v1274, v1276, v1272, 0, v1273, v1277, v1278, v1279, 3, 7, 29, 6, 28, 13, 14, 4) -> f_805(v1266, v1267, v1268, v1269, v1270, 1, v1274, v1276, 0, v1273, v1277, v1278, v1279, 3, 7, 29, 6, 28, 13, 14, 4) :|: 0 = 0
f_805(v1266, v1267, v1268, v1269, v1270, 1, v1274, v1276, 0, v1273, v1277, v1278, v1279, 3, 7, 29, 6, 28, 13, 14, 4) -> f_814(v1266, v1267, v1268, v1269, v1270, 1, v1274, v1276, v1911, 0, v1273, v1277, v1278, v1279, 3, 7, 29, 6, 28, 13, 14, 4, 20) :|: v1911 = 7 + v1274 && 20 <= v1911
f_814(v1266, v1267, v1268, v1269, v1270, 1, v1274, v1276, v1911, 0, v1273, v1277, v1278, v1279, 3, 7, 29, 6, 28, 13, 14, 4, 20) -> f_823(v1266, v1267, v1268, v1269, v1270, 1, v1274, v1276, v1911, 0, v1273, v1277, v1278, v1279, 3, 7, 29, 6, 28, 13, 14, 4, 20) :|: TRUE
f_823(v1266, v1267, v1268, v1269, v1270, 1, v1274, v1276, v1911, 0, v1273, v1277, v1278, v1279, 3, 7, 29, 6, 28, 13, 14, 4, 20) -> f_832(v1266, v1267, v1268, v1269, v1270, 1, v1274, v1276, v1911, 0, v1273, v1277, v1278, v1279, 3, 7, 29, 6, 28, 13, 14, 4, 20) :|: TRUE
f_832(v1266, v1267, v1268, v1269, v1270, 1, v1274, v1276, v1911, 0, v1273, v1277, v1278, v1279, 3, 7, 29, 6, 28, 13, 14, 4, 20) -> f_841(v1266, v1267, v1268, v1269, v1270, 1, v1274, v1276, v1911, 0, v1273, v1277, v1278, v1279, 3, 7, 29, 6, 28, 13, 14, 4, 20) :|: 0 = 0
f_841(v1266, v1267, v1268, v1269, v1270, 1, v1274, v1276, v1911, 0, v1273, v1277, v1278, v1279, 3, 7, 29, 6, 28, 13, 14, 4, 20) -> f_850(v1266, v1267, v1268, v1269, v1270, 1, v1274, v1276, v1911, 0, v1273, v1277, v1278, v1279, 3, 7, 29, 6, 28, 13, 14, 4, 20) :|: 0 = 0
f_850(v1266, v1267, v1268, v1269, v1270, 1, v1274, v1276, v1911, 0, v1273, v1277, v1278, v1279, 3, 7, 29, 6, 28, 13, 14, 4, 20) -> f_860(v1266, v1267, v1268, v1269, v1270, 1, v1274, v1276, v1911, 0, v1273, v1277, v1278, v1279, 3, 7, 29, 6, 28, 13, 14, 4, 20) :|: TRUE
f_860(v1266, v1267, v1268, v1269, v1270, 1, v1274, v1276, v1911, 0, v1273, v1277, v1278, v1279, 3, 7, 29, 6, 28, 13, 14, 4, 20) -> f_870(v1266, v1267, v1268, v1269, v1270, 1, v1274, v1276, v1911, 0, v1273, v1277, v1278, v1279, 3, 7, 29, 6, 28, 13, 14, 4, 20) :|: 0 = 0
f_870(v1266, v1267, v1268, v1269, v1270, 1, v1274, v1276, v1911, 0, v1273, v1277, v1278, v1279, 3, 7, 29, 6, 28, 13, 14, 4, 20) -> f_880(v1266, v1267, v1268, v1269, v1270, 1, v1274, v1276, v1911, 0, v1273, v1277, v1278, v1279, 3, 7, 29, 6, 28, 13, 14, 4, 20) :|: 0 = 0
f_880(v1266, v1267, v1268, v1269, v1270, 1, v1274, v1276, v1911, 0, v1273, v1277, v1278, v1279, 3, 7, 29, 6, 28, 13, 14, 4, 20) -> f_887(v1266, v1267, v1268, v1269, v1270, 1, v1274, v1276, v1911, 0, v1273, v1277, v1278, v1279, 3, 7, 29, 6, 28, 13, 14, 4, 20) :|: TRUE
f_887(v1266, v1267, v1268, v1269, v1270, 1, v1274, v1276, v1911, 0, v1273, v1277, v1278, v1279, 3, 7, 29, 6, 28, 13, 14, 4, 20) -> f_894(v1266, v1267, v1268, v1269, v1270, 1, v1274, v1276, v1911, 0, v1277, v1278, v1279, 3, 7, 29, 6, 28, 13, 14, 4, 20) :|: 0 = 0
f_894(v1266, v1267, v1268, v1269, v1270, 1, v1274, v1276, v1911, 0, v1277, v1278, v1279, 3, 7, 29, 6, 28, 13, 14, 4, 20) -> f_901(v1266, v1267, v1268, v1269, v1270, 1, v1274, v1276, v1911, 0, v2918, v1277, v1278, v1279, 3, 7, 29, 6, 28, 13, 14, 4, 20, 15) :|: v2918 = 1 + v1276 && 15 <= v2918
f_901(v1266, v1267, v1268, v1269, v1270, 1, v1274, v1276, v1911, 0, v2918, v1277, v1278, v1279, 3, 7, 29, 6, 28, 13, 14, 4, 20, 15) -> f_909(v1266, v1267, v1268, v1269, v1270, 1, v1274, v1276, v1911, 0, v2918, v1277, v1278, v1279, 3, 7, 29, 6, 28, 13, 14, 4, 20, 15) :|: TRUE
f_909(v1266, v1267, v1268, v1269, v1270, 1, v1274, v1276, v1911, 0, v2918, v1277, v1278, v1279, 3, 7, 29, 6, 28, 13, 14, 4, 20, 15) -> f_918(v1266, v1267, v1268, v1269, v1270, 1, v1274, v1276, v1911, 0, v2918, v1277, v1278, v1279, 3, 7, 29, 6, 28, 13, 14, 4, 20, 15) :|: TRUE
f_918(v1266, v1267, v1268, v1269, v1270, 1, v1274, v1276, v1911, 0, v2918, v1277, v1278, v1279, 3, 7, 29, 6, 28, 13, 14, 4, 20, 15) -> f_715(v1266, v1267, v1268, v1269, v1270, 1, v1274, v1276, v1911, 0, v2918, v1277, v1278, v1279, 3, 7, 29, 6, 28, 13, 8, 4) :|: TRUE
f_715(v1266, v1267, v1268, v1269, v1270, 1, v1272, v1273, v1274, 0, v1276, v1277, v1278, v1279, 3, 7, 29, 6, 28, 13, 8, 4) -> f_722(v1266, v1267, v1268, v1269, v1270, 1, v1272, v1273, v1274, 0, v1276, v1277, v1278, v1279, 3, 7, 29, 6, 28, 13, 8, 4) :|: TRUE
Combined rules. Obtained 1 rulesP rules:
f_722(v1266:0, v1267:0, v1268:0, v1269:0, v1270:0, 1, v1272:0, v1273:0, v1274:0, 0, v1276:0, v1277:0, v1278:0, v1279:0, 3, 7, 29, 6, 28, 13, 8, 4) -> f_722(v1266:0, v1267:0, v1268:0, v1269:0, v1270:0, 1, v1274:0, v1276:0, 7 + v1274:0, 0, 1 + v1276:0, v1277:0, v1278:0, v1279:0, 3, 7, 29, 6, 28, 13, 8, 4) :|: v1276:0 > 13 && v1276:0 > v1274:0 && v1273:0 > 12 && v1274:0 > 12
Filtered unneeded arguments:
   f_722(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22) -> f_722(x8, x9, x11)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_722(v1273:0, v1274:0, v1276:0) -> f_722(v1276:0, 7 + v1274:0, 1 + v1276:0) :|: v1276:0 > v1274:0 && v1276:0 > 13 && v1274:0 > 12 && v1273:0 > 12

----------------------------------------

(55)
Obligation:
Rules:
f_722(v1273:0, v1274:0, v1276:0) -> f_722(v1276:0, 7 + v1274:0, 1 + v1276:0) :|: v1276:0 > v1274:0 && v1276:0 > 13 && v1274:0 > 12 && v1273:0 > 12

----------------------------------------

(56) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(57)
Obligation:
Rules:
f_722(v1273:0:0, v1274:0:0, v1276:0:0) -> f_722(v1276:0:0, 7 + v1274:0:0, 1 + v1276:0:0) :|: v1274:0:0 > 12 && v1273:0:0 > 12 && v1276:0:0 > 13 && v1276:0:0 > v1274:0:0

----------------------------------------

(58) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_722 ] = -1/6*f_722_2 + 1/6*f_722_3

The following rules are decreasing:
f_722(v1273:0:0, v1274:0:0, v1276:0:0) -> f_722(v1276:0:0, 7 + v1274:0:0, 1 + v1276:0:0) :|: v1274:0:0 > 12 && v1273:0:0 > 12 && v1276:0:0 > 13 && v1276:0:0 > v1274:0:0

The following rules are bounded:
f_722(v1273:0:0, v1274:0:0, v1276:0:0) -> f_722(v1276:0:0, 7 + v1274:0:0, 1 + v1276:0:0) :|: v1274:0:0 > 12 && v1273:0:0 > 12 && v1276:0:0 > 13 && v1276:0:0 > v1274:0:0


----------------------------------------

(59)
YES

----------------------------------------

(60)
Obligation:
SCC
----------------------------------------

(61) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 22 rulesP rules:
f_674(v1050, v1051, v1052, v1053, v1054, 1, v1059, v1057, v1056, 0, v1060, v1061, v1062, v1063, 3, 2, 29, 5, 7, 4) -> f_680(v1050, v1051, v1052, v1053, v1054, 1, v1059, v1060, v1056, 0, v1057, v1061, v1062, v1063, 3, 2, 29, 5, 7, 4) :|: 0 = 0
f_680(v1050, v1051, v1052, v1053, v1054, 1, v1059, v1060, v1056, 0, v1057, v1061, v1062, v1063, 3, 2, 29, 5, 7, 4) -> f_685(v1050, v1051, v1052, v1053, v1054, 1, v1059, v1060, v1056, 0, v1057, v1061, v1062, v1063, 3, 2, 29, 5, 7, 4) :|: v1059 < v1060
f_685(v1050, v1051, v1052, v1053, v1054, 1, v1059, v1060, v1056, 0, v1057, v1061, v1062, v1063, 3, 2, 29, 5, 7, 4) -> f_691(v1050, v1051, v1052, v1053, v1054, 1, v1059, v1060, v1056, 0, v1057, v1061, v1062, v1063, 3, 2, 29, 5, 7, 4) :|: 0 = 0
f_691(v1050, v1051, v1052, v1053, v1054, 1, v1059, v1060, v1056, 0, v1057, v1061, v1062, v1063, 3, 2, 29, 5, 7, 4) -> f_697(v1050, v1051, v1052, v1053, v1054, 1, v1059, v1060, v1056, 0, v1057, v1061, v1062, v1063, 3, 2, 29, 5, 7, 4) :|: TRUE
f_697(v1050, v1051, v1052, v1053, v1054, 1, v1059, v1060, v1056, 0, v1057, v1061, v1062, v1063, 3, 2, 29, 5, 7, 4) -> f_703(v1050, v1051, v1052, v1053, v1054, 1, v1059, v1060, 0, v1056, v1057, v1061, v1062, v1063, 3, 2, 29, 5, 7, 4) :|: 0 = 0
f_703(v1050, v1051, v1052, v1053, v1054, 1, v1059, v1060, 0, v1056, v1057, v1061, v1062, v1063, 3, 2, 29, 5, 7, 4) -> f_710(v1050, v1051, v1052, v1053, v1054, 1, v1059, v1060, 0, v1056, v1057, v1061, v1062, v1063, 3, 2, 29, 5, 4) :|: v1059 <= 5 && v1056 <= 3
f_710(v1050, v1051, v1052, v1053, v1054, 1, v1059, v1060, 0, v1056, v1057, v1061, v1062, v1063, 3, 2, 29, 5, 4) -> f_717(v1050, v1051, v1052, v1053, v1054, 1, v1059, v1060, 0, v1056, v1057, v1061, v1062, v1063, 3, 2, 29, 5, 4) :|: 0 = 0
f_717(v1050, v1051, v1052, v1053, v1054, 1, v1059, v1060, 0, v1056, v1057, v1061, v1062, v1063, 3, 2, 29, 5, 4) -> f_724(v1050, v1051, v1052, v1053, v1054, 1, v1059, v1060, 0, v1056, v1057, v1061, v1062, v1063, 3, 2, 29, 5, 4) :|: TRUE
f_724(v1050, v1051, v1052, v1053, v1054, 1, v1059, v1060, 0, v1056, v1057, v1061, v1062, v1063, 3, 2, 29, 5, 4) -> f_731(v1050, v1051, v1052, v1053, v1054, 1, v1059, v1060, 0, v1057, v1061, v1062, v1063, 3, 29, 5, 4) :|: 0 = 0
f_731(v1050, v1051, v1052, v1053, v1054, 1, v1059, v1060, 0, v1057, v1061, v1062, v1063, 3, 29, 5, 4) -> f_738(v1050, v1051, v1052, v1053, v1054, 1, v1059, v1060, 0, v1411, v1057, v1061, v1062, v1063, 3, 2, 29, 5, 4, 7) :|: v1411 = 2 + v1059 && v1411 <= 7
f_738(v1050, v1051, v1052, v1053, v1054, 1, v1059, v1060, 0, v1411, v1057, v1061, v1062, v1063, 3, 2, 29, 5, 4, 7) -> f_747(v1050, v1051, v1052, v1053, v1054, 1, v1059, v1060, 0, v1411, v1057, v1061, v1062, v1063, 3, 2, 29, 5, 4, 7) :|: TRUE
f_747(v1050, v1051, v1052, v1053, v1054, 1, v1059, v1060, 0, v1411, v1057, v1061, v1062, v1063, 3, 2, 29, 5, 4, 7) -> f_757(v1050, v1051, v1052, v1053, v1054, 1, v1059, v1060, 0, v1411, v1057, v1061, v1062, v1063, 3, 2, 29, 5, 4, 7) :|: TRUE
f_757(v1050, v1051, v1052, v1053, v1054, 1, v1059, v1060, 0, v1411, v1057, v1061, v1062, v1063, 3, 2, 29, 5, 4, 7) -> f_767(v1050, v1051, v1052, v1053, v1054, 1, v1059, v1060, 0, v1411, v1057, v1061, v1062, v1063, 3, 2, 29, 5, 4, 7) :|: 0 = 0
f_767(v1050, v1051, v1052, v1053, v1054, 1, v1059, v1060, 0, v1411, v1057, v1061, v1062, v1063, 3, 2, 29, 5, 4, 7) -> f_777(v1050, v1051, v1052, v1053, v1054, 1, v1059, v1060, 0, v1411, v1057, v1061, v1062, v1063, 3, 2, 29, 5, 4, 7) :|: 0 = 0
f_777(v1050, v1051, v1052, v1053, v1054, 1, v1059, v1060, 0, v1411, v1057, v1061, v1062, v1063, 3, 2, 29, 5, 4, 7) -> f_787(v1050, v1051, v1052, v1053, v1054, 1, v1059, v1060, 0, v1411, v1057, v1061, v1062, v1063, 3, 2, 29, 5, 4, 7) :|: TRUE
f_787(v1050, v1051, v1052, v1053, v1054, 1, v1059, v1060, 0, v1411, v1057, v1061, v1062, v1063, 3, 2, 29, 5, 4, 7) -> f_797(v1050, v1051, v1052, v1053, v1054, 1, v1059, v1060, 0, v1411, v1061, v1062, v1063, 3, 2, 29, 5, 4, 7) :|: 0 = 0
f_797(v1050, v1051, v1052, v1053, v1054, 1, v1059, v1060, 0, v1411, v1061, v1062, v1063, 3, 2, 29, 5, 4, 7) -> f_808(v1050, v1051, v1052, v1053, v1054, 1, v1059, v1060, 0, v1411, v1782, v1061, v1062, v1063, 3, 2, 29, 5, 4, 7) :|: v1782 = 1 + v1060
f_808(v1050, v1051, v1052, v1053, v1054, 1, v1059, v1060, 0, v1411, v1782, v1061, v1062, v1063, 3, 2, 29, 5, 4, 7) -> f_817(v1050, v1051, v1052, v1053, v1054, 1, v1059, v1060, 0, v1411, v1782, v1061, v1062, v1063, 3, 2, 29, 5, 4, 7) :|: TRUE
f_817(v1050, v1051, v1052, v1053, v1054, 1, v1059, v1060, 0, v1411, v1782, v1061, v1062, v1063, 3, 2, 29, 5, 4, 7) -> f_826(v1050, v1051, v1052, v1053, v1054, 1, v1059, v1060, 0, v1411, v1782, v1061, v1062, v1063, 3, 2, 29, 5, 4, 7) :|: TRUE
f_826(v1050, v1051, v1052, v1053, v1054, 1, v1059, v1060, 0, v1411, v1782, v1061, v1062, v1063, 3, 2, 29, 5, 4, 7) -> f_835(v1050, v1051, v1052, v1053, v1054, 1, v1059, v1060, 0, v1411, v1782, v1061, v1062, v1063, 3, 2, 29, 5, 4, 7) :|: TRUE
f_835(v1050, v1051, v1052, v1053, v1054, 1, v1059, v1060, 0, v1411, v1782, v1061, v1062, v1063, 3, 2, 29, 5, 4, 7) -> f_668(v1050, v1051, v1052, v1053, v1054, 1, v1059, v1060, 0, v1411, v1782, v1061, v1062, v1063, 3, 2, 29, 5, 7, 4) :|: TRUE
f_668(v1050, v1051, v1052, v1053, v1054, 1, v1056, v1057, 0, v1059, v1060, v1061, v1062, v1063, 3, 2, 29, 5, 7, 4) -> f_674(v1050, v1051, v1052, v1053, v1054, 1, v1059, v1057, v1056, 0, v1060, v1061, v1062, v1063, 3, 2, 29, 5, 7, 4) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_674(v1050:0, v1051:0, v1052:0, v1053:0, v1054:0, 1, v1059:0, v1057:0, v1056:0, 0, v1060:0, v1061:0, v1062:0, v1063:0, 3, 2, 29, 5, 7, 4) -> f_674(v1050:0, v1051:0, v1052:0, v1053:0, v1054:0, 1, 2 + v1059:0, v1060:0, v1059:0, 0, 1 + v1060:0, v1061:0, v1062:0, v1063:0, 3, 2, 29, 5, 7, 4) :|: v1060:0 > v1059:0 && v1056:0 < 4 && v1059:0 < 6
Filtered unneeded arguments:
   f_674(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20) -> f_674(x7, x9, x11)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_674(v1059:0, v1056:0, v1060:0) -> f_674(2 + v1059:0, v1059:0, 1 + v1060:0) :|: v1056:0 < 4 && v1059:0 < 6 && v1060:0 > v1059:0

----------------------------------------

(62)
Obligation:
Rules:
f_674(v1059:0, v1056:0, v1060:0) -> f_674(2 + v1059:0, v1059:0, 1 + v1060:0) :|: v1056:0 < 4 && v1059:0 < 6 && v1060:0 > v1059:0

----------------------------------------

(63) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(64)
Obligation:
Rules:
f_674(v1059:0:0, v1056:0:0, v1060:0:0) -> f_674(2 + v1059:0:0, v1059:0:0, 1 + v1060:0:0) :|: v1056:0:0 < 4 && v1059:0:0 < 6 && v1060:0:0 > v1059:0:0

----------------------------------------

(65) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_674 ] = -1/2*f_674_1

The following rules are decreasing:
f_674(v1059:0:0, v1056:0:0, v1060:0:0) -> f_674(2 + v1059:0:0, v1059:0:0, 1 + v1060:0:0) :|: v1056:0:0 < 4 && v1059:0:0 < 6 && v1060:0:0 > v1059:0:0

The following rules are bounded:
f_674(v1059:0:0, v1056:0:0, v1060:0:0) -> f_674(2 + v1059:0:0, v1059:0:0, 1 + v1060:0:0) :|: v1056:0:0 < 4 && v1059:0:0 < 6 && v1060:0:0 > v1059:0:0


----------------------------------------

(66)
YES

----------------------------------------

(67)
Obligation:
SCC
----------------------------------------

(68) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 18 rulesP rules:
f_535(v693, v694, v695, v696, v697, v702, 1, v700, v698, 0, v703, v704, v705, v706, 3, 2, 10, 29, 31, 4) -> f_539(v693, v694, v695, v696, v697, v702, 1, v700, v698, 0, v703, v704, v705, v706, 3, 2, 10, 29, 27, 4) :|: v702 < 30 && v698 <= 27
f_539(v693, v694, v695, v696, v697, v702, 1, v700, v698, 0, v703, v704, v705, v706, 3, 2, 10, 29, 27, 4) -> f_545(v693, v694, v695, v696, v697, v702, 1, v700, v698, 0, v703, v704, v705, v706, 3, 2, 10, 29, 27, 4) :|: 0 = 0
f_545(v693, v694, v695, v696, v697, v702, 1, v700, v698, 0, v703, v704, v705, v706, 3, 2, 10, 29, 27, 4) -> f_551(v693, v694, v695, v696, v697, v702, 1, v700, v698, 0, v703, v704, v705, v706, 3, 2, 10, 29, 27, 4) :|: TRUE
f_551(v693, v694, v695, v696, v697, v702, 1, v700, v698, 0, v703, v704, v705, v706, 3, 2, 10, 29, 27, 4) -> f_557(v693, v694, v695, v696, v697, v702, 1, v700, v698, 0, v703, v704, v705, v706, 3, 2, 10, 29, 27, 4) :|: TRUE
f_557(v693, v694, v695, v696, v697, v702, 1, v700, v698, 0, v703, v704, v705, v706, 3, 2, 10, 29, 27, 4) -> f_562(v693, v694, v695, v696, v697, v702, 1, v703, v698, 0, v700, v704, v705, v706, 3, 2, 10, 29, 27, 4) :|: 0 = 0
f_562(v693, v694, v695, v696, v697, v702, 1, v703, v698, 0, v700, v704, v705, v706, 3, 2, 10, 29, 27, 4) -> f_567(v693, v694, v695, v696, v697, v702, 1, v703, 0, v698, v700, v704, v705, v706, 3, 2, 10, 29, 27, 4) :|: 0 = 0
f_567(v693, v694, v695, v696, v697, v702, 1, v703, 0, v698, v700, v704, v705, v706, 3, 2, 10, 29, 27, 4) -> f_573(v693, v694, v695, v696, v697, v702, 1, v703, 0, v698, v700, v704, v705, v706, 3, 2, 10, 29, 27, 4) :|: v702 <= v703
f_573(v693, v694, v695, v696, v697, v702, 1, v703, 0, v698, v700, v704, v705, v706, 3, 2, 10, 29, 27, 4) -> f_579(v693, v694, v695, v696, v697, v702, 1, v703, 0, v698, v700, v704, v705, v706, 3, 2, 10, 29, 27, 4) :|: 0 = 0
f_579(v693, v694, v695, v696, v697, v702, 1, v703, 0, v698, v700, v704, v705, v706, 3, 2, 10, 29, 27, 4) -> f_586(v693, v694, v695, v696, v697, v702, 1, v703, 0, v698, v700, v704, v705, v706, 3, 2, 10, 29, 27, 4) :|: TRUE
f_586(v693, v694, v695, v696, v697, v702, 1, v703, 0, v698, v700, v704, v705, v706, 3, 2, 10, 29, 27, 4) -> f_593(v693, v694, v695, v696, v697, v702, 1, v703, 0, v700, v704, v705, v706, 3, 10, 29, 4) :|: 0 = 0
f_593(v693, v694, v695, v696, v697, v702, 1, v703, 0, v700, v704, v705, v706, 3, 10, 29, 4) -> f_601(v693, v694, v695, v696, v697, v702, 1, v703, 0, v840, v700, v704, v705, v706, 3, 10, 2, 29, 4, 31) :|: v840 = 2 + v702 && v840 <= 31
f_601(v693, v694, v695, v696, v697, v702, 1, v703, 0, v840, v700, v704, v705, v706, 3, 10, 2, 29, 4, 31) -> f_609(v693, v694, v695, v696, v697, v702, 1, v703, 0, v840, v700, v704, v705, v706, 3, 10, 2, 29, 4, 31) :|: TRUE
f_609(v693, v694, v695, v696, v697, v702, 1, v703, 0, v840, v700, v704, v705, v706, 3, 10, 2, 29, 4, 31) -> f_617(v693, v694, v695, v696, v697, v702, 1, v703, 0, v840, v704, v705, v706, 3, 2, 29, 4, 31) :|: 0 = 0
f_617(v693, v694, v695, v696, v697, v702, 1, v703, 0, v840, v704, v705, v706, 3, 2, 29, 4, 31) -> f_625(v693, v694, v695, v696, v697, v702, 1, v703, 0, v840, v893, v704, v705, v706, 3, 2, 10, 29, 4, 31) :|: 10 + v893 = v703
f_625(v693, v694, v695, v696, v697, v702, 1, v703, 0, v840, v893, v704, v705, v706, 3, 2, 10, 29, 4, 31) -> f_633(v693, v694, v695, v696, v697, v702, 1, v703, 0, v840, v893, v704, v705, v706, 3, 2, 10, 29, 4, 31) :|: TRUE
f_633(v693, v694, v695, v696, v697, v702, 1, v703, 0, v840, v893, v704, v705, v706, 3, 2, 10, 29, 4, 31) -> f_641(v693, v694, v695, v696, v697, v702, 1, v703, 0, v840, v893, v704, v705, v706, 3, 2, 10, 29, 4, 31) :|: TRUE
f_641(v693, v694, v695, v696, v697, v702, 1, v703, 0, v840, v893, v704, v705, v706, 3, 2, 10, 29, 4, 31) -> f_531(v693, v694, v695, v696, v697, v702, 1, v703, 0, v840, v893, v704, v705, v706, 3, 2, 10, 29, 31, 4) :|: TRUE
f_531(v693, v694, v695, v696, v697, v698, 1, v700, 0, v702, v703, v704, v705, v706, 3, 2, 10, 29, 31, 4) -> f_535(v693, v694, v695, v696, v697, v702, 1, v700, v698, 0, v703, v704, v705, v706, 3, 2, 10, 29, 31, 4) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_535(v693:0, v694:0, v695:0, v696:0, v697:0, v702:0, 1, v700:0, v698:0, 0, 10 + v893:0, v704:0, v705:0, v706:0, 3, 2, 10, 29, 31, 4) -> f_535(v693:0, v694:0, v695:0, v696:0, v697:0, 2 + v702:0, 1, 10 + v893:0, v702:0, 0, v893:0, v704:0, v705:0, v706:0, 3, 2, 10, 29, 31, 4) :|: v698:0 < 28 && v702:0 < 30 && v702:0 <= 10 + v893:0
Filtered unneeded arguments:
   f_535(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20) -> f_535(x6, x9, x11)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_535(v702:0, v698:0, sum~cons_10~v893:0) -> f_535(2 + v702:0, v702:0, v893:0) :|: v702:0 < 30 && v702:0 <= 10 + v893:0 && v698:0 < 28 && sum~cons_10~v893:0 = 10 + v893:0

----------------------------------------

(69)
Obligation:
Rules:
f_535(v702:0, v698:0, sum~cons_10~v893:0) -> f_535(2 + v702:0, v702:0, v893:0) :|: v702:0 < 30 && v702:0 <= 10 + v893:0 && v698:0 < 28 && sum~cons_10~v893:0 = 10 + v893:0

----------------------------------------

(70) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(71)
Obligation:
Rules:
f_535(v702:0:0, v698:0:0, sum~cons_10~v893:0:0) -> f_535(2 + v702:0:0, v702:0:0, v893:0:0) :|: v702:0:0 < 30 && v702:0:0 <= 10 + v893:0:0 && v698:0:0 < 28 && sum~cons_10~v893:0:0 = 10 + v893:0:0

----------------------------------------

(72) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_535 ] = -1/2*f_535_1

The following rules are decreasing:
f_535(v702:0:0, v698:0:0, sum~cons_10~v893:0:0) -> f_535(2 + v702:0:0, v702:0:0, v893:0:0) :|: v702:0:0 < 30 && v702:0:0 <= 10 + v893:0:0 && v698:0:0 < 28 && sum~cons_10~v893:0:0 = 10 + v893:0:0

The following rules are bounded:
f_535(v702:0:0, v698:0:0, sum~cons_10~v893:0:0) -> f_535(2 + v702:0:0, v702:0:0, v893:0:0) :|: v702:0:0 < 30 && v702:0:0 <= 10 + v893:0:0 && v698:0:0 < 28 && sum~cons_10~v893:0:0 = 10 + v893:0:0


----------------------------------------

(73)
YES
Graph finished, checking  consistency
Graph finished, checked consistency, took 0.001s
