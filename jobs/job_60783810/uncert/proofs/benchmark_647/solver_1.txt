YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/z6UZQ.c
# AProVE Commit ID: 48c83ccb80d5f8312cb92f4aa1b51dc35e247e65 nils 20241118 unpublished


Termination of the given C Problem could be proven:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 19 ms]
(2) LLVM problem
(3) LLVMToTerminationGraphProof [EQUIVALENT, 8280 ms]
(4) LLVM Symbolic Execution Graph
(5) SymbolicExecutionGraphToSCCProof [SOUND, 0 ms]
(6) AND
    (7) LLVM Symbolic Execution SCC
        (8) SCC2IRS [SOUND, 128 ms]
        (9) IntTRS
        (10) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (11) IntTRS
        (12) RankingReductionPairProof [EQUIVALENT, 2 ms]
        (13) YES
    (14) LLVM Symbolic Execution SCC
        (15) SCC2IRS [SOUND, 61 ms]
        (16) IntTRS
        (17) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (18) IntTRS
        (19) RankingReductionPairProof [EQUIVALENT, 8 ms]
        (20) YES
    (21) LLVM Symbolic Execution SCC
        (22) SCC2IRS [SOUND, 65 ms]
        (23) IntTRS
        (24) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (25) IntTRS
        (26) RankingReductionPairProof [EQUIVALENT, 3 ms]
        (27) YES
    (28) LLVM Symbolic Execution SCC
        (29) SCC2IRS [SOUND, 68 ms]
        (30) IntTRS
        (31) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (32) IntTRS
        (33) RankingReductionPairProof [EQUIVALENT, 2 ms]
        (34) YES
    (35) LLVM Symbolic Execution SCC
        (36) SCC2IRS [SOUND, 57 ms]
        (37) IntTRS
        (38) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (39) IntTRS
        (40) RankingReductionPairProof [EQUIVALENT, 2 ms]
        (41) YES
    (42) LLVM Symbolic Execution SCC
        (43) SCC2IRS [SOUND, 57 ms]
        (44) IntTRS
        (45) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (46) IntTRS
        (47) RankingReductionPairProof [EQUIVALENT, 3 ms]
        (48) YES
    (49) LLVM Symbolic Execution SCC
        (50) SCC2IRS [SOUND, 53 ms]
        (51) IntTRS
        (52) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (53) IntTRS
        (54) RankingReductionPairProof [EQUIVALENT, 2 ms]
        (55) YES
    (56) LLVM Symbolic Execution SCC
        (57) SCC2IRS [SOUND, 55 ms]
        (58) IntTRS
        (59) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (60) IntTRS
        (61) RankingReductionPairProof [EQUIVALENT, 6 ms]
        (62) YES


----------------------------------------

(0)
Obligation:
c file /hpcwork/ff862203/termcomp25/benchmarks/z6UZQ.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /hpcwork/ff862203/termcomp25/benchmarks/z6UZQ.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-pc-linux-gnu"

Type definitions:

Global variables:

Function declarations and definitions:

*BasicFunctionTypename: "llvm.dbg.declare" returnParam: BasicVoidType parameters: (BasicMetadataType, BasicMetadataType, BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "llvm.dbg.label" returnParam: BasicVoidType parameters: (BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_error" returnParam: BasicVoidType parameters: () variableLength: true visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_assert" linkageType: EXTERNALLY_VISIBLE returnParam: BasicVoidType parameters: (0 i32) variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 7
	0:
		%2 = alloca i32, align 4
		store %0, %2
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %2)
		%3 = load %2
		%4 = icmp ne %3 0
		br %4, %7, %5
	5:
		br %6
	6:
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.label()
		Unnamed Call-Instruction = call BasicVoidType (...)* @__VERIFIER_error()
		unreachable
	7:
		ret void

*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 24
	0:
		%1 = alloca i32, align 4
		%2 = alloca [100000 x i32], align 16
		%3 = alloca [100000 x i32], align 16
		%4 = alloca [100000 x i32], align 16
		%5 = alloca [100000 x i32], align 16
		%6 = alloca [100000 x i32], align 16
		%7 = alloca [100000 x i32], align 16
		%8 = alloca [100000 x i32], align 16
		%9 = alloca [100000 x i32], align 16
		%10 = alloca i32, align 4
		%11 = alloca i32, align 4
		store 0, %1
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*[100000 x i32] %2)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*[100000 x i32] %3)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*[100000 x i32] %4)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*[100000 x i32] %5)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*[100000 x i32] %6)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*[100000 x i32] %7)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*[100000 x i32] %8)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*[100000 x i32] %9)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %10)
		store 0, %10
		br %12
	12:
		%13 = load %10
		%14 = icmp slt %13 100000
		br %14, %15, %26
	15:
		%16 = load %10
		%17 = sext i32 %16 to i64
		%18 = getelementptr %2, 0, %17
		%19 = load %18
		%20 = load %10
		%21 = sext i32 %20 to i64
		%22 = getelementptr %3, 0, %21
		store %19, %22
		br %23
	23:
		%24 = load %10
		%25 = add i32 %24, 1
		store %25, %10
		br %12
	26:
		store 0, %10
		br %27
	27:
		%28 = load %10
		%29 = icmp slt %28 100000
		br %29, %30, %41
	30:
		%31 = load %10
		%32 = sext i32 %31 to i64
		%33 = getelementptr %3, 0, %32
		%34 = load %33
		%35 = load %10
		%36 = sext i32 %35 to i64
		%37 = getelementptr %4, 0, %36
		store %34, %37
		br %38
	38:
		%39 = load %10
		%40 = add i32 %39, 1
		store %40, %10
		br %27
	41:
		store 0, %10
		br %42
	42:
		%43 = load %10
		%44 = icmp slt %43 100000
		br %44, %45, %56
	45:
		%46 = load %10
		%47 = sext i32 %46 to i64
		%48 = getelementptr %4, 0, %47
		%49 = load %48
		%50 = load %10
		%51 = sext i32 %50 to i64
		%52 = getelementptr %5, 0, %51
		store %49, %52
		br %53
	53:
		%54 = load %10
		%55 = add i32 %54, 1
		store %55, %10
		br %42
	56:
		store 0, %10
		br %57
	57:
		%58 = load %10
		%59 = icmp slt %58 100000
		br %59, %60, %71
	60:
		%61 = load %10
		%62 = sext i32 %61 to i64
		%63 = getelementptr %5, 0, %62
		%64 = load %63
		%65 = load %10
		%66 = sext i32 %65 to i64
		%67 = getelementptr %6, 0, %66
		store %64, %67
		br %68
	68:
		%69 = load %10
		%70 = add i32 %69, 1
		store %70, %10
		br %57
	71:
		store 0, %10
		br %72
	72:
		%73 = load %10
		%74 = icmp slt %73 100000
		br %74, %75, %86
	75:
		%76 = load %10
		%77 = sext i32 %76 to i64
		%78 = getelementptr %6, 0, %77
		%79 = load %78
		%80 = load %10
		%81 = sext i32 %80 to i64
		%82 = getelementptr %7, 0, %81
		store %79, %82
		br %83
	83:
		%84 = load %10
		%85 = add i32 %84, 1
		store %85, %10
		br %72
	86:
		store 0, %10
		br %87
	87:
		%88 = load %10
		%89 = icmp slt %88 100000
		br %89, %90, %101
	90:
		%91 = load %10
		%92 = sext i32 %91 to i64
		%93 = getelementptr %7, 0, %92
		%94 = load %93
		%95 = load %10
		%96 = sext i32 %95 to i64
		%97 = getelementptr %8, 0, %96
		store %94, %97
		br %98
	98:
		%99 = load %10
		%100 = add i32 %99, 1
		store %100, %10
		br %87
	101:
		store 0, %10
		br %102
	102:
		%103 = load %10
		%104 = icmp slt %103 100000
		br %104, %105, %116
	105:
		%106 = load %10
		%107 = sext i32 %106 to i64
		%108 = getelementptr %8, 0, %107
		%109 = load %108
		%110 = load %10
		%111 = sext i32 %110 to i64
		%112 = getelementptr %9, 0, %111
		store %109, %112
		br %113
	113:
		%114 = load %10
		%115 = add i32 %114, 1
		store %115, %10
		br %102
	116:
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %11)
		store 0, %11
		br %117
	117:
		%118 = load %11
		%119 = icmp slt %118 100000
		br %119, %120, %134
	120:
		%121 = load %11
		%122 = sext i32 %121 to i64
		%123 = getelementptr %2, 0, %122
		%124 = load %123
		%125 = load %11
		%126 = sext i32 %125 to i64
		%127 = getelementptr %9, 0, %126
		%128 = load %127
		%129 = icmp eq %124 %128
		%130 = zext i1 %129 to i32
		Unnamed Call-Instruction = call BasicVoidType @__VERIFIER_assert(i32 %130)
		br %131
	131:
		%132 = load %11
		%133 = add i32 %132, 1
		store %133, %11
		br %117
	134:
		ret 0


Analyze Termination of all function calls matching the pattern:
main()
----------------------------------------

(3) LLVMToTerminationGraphProof (EQUIVALENT)
Constructed symbolic execution graph for LLVM program.
----------------------------------------

(4)
Obligation:
Symbolic Execution Graph
----------------------------------------

(5) SymbolicExecutionGraphToSCCProof (SOUND)
Splitted symbolic execution graph to 8 SCCs.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
SCC
----------------------------------------

(8) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 29 rulesP rules:
f_1898(v4604, v4605, v4606, v4607, v4608, v4609, v4610, v4611, v4612, v4613, v4614, 100000, 0, 99999, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4644, 1, v4639, v4641, v4642, v4643, v4645, v4646, v4647, v4648, v4649, v4650, v4651, v4652, v4653, v4654, v4655, v4656, 3, 399999, 4, 400000) -> f_1899(v4604, v4605, v4606, v4607, v4608, v4609, v4610, v4611, v4612, v4613, v4614, 100000, 0, 99999, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4644, 1, v4639, v4641, v4642, v4643, v4645, v4646, v4647, v4648, v4649, v4650, v4651, v4652, v4653, v4654, v4655, v4656, 3, 399999, 99998, 4, 400000) :|: v4644 < 100000 && v4639 <= 99998
f_1899(v4604, v4605, v4606, v4607, v4608, v4609, v4610, v4611, v4612, v4613, v4614, 100000, 0, 99999, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4644, 1, v4639, v4641, v4642, v4643, v4645, v4646, v4647, v4648, v4649, v4650, v4651, v4652, v4653, v4654, v4655, v4656, 3, 399999, 99998, 4, 400000) -> f_1901(v4604, v4605, v4606, v4607, v4608, v4609, v4610, v4611, v4612, v4613, v4614, 100000, 0, 99999, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4644, 1, v4639, v4641, v4642, v4643, v4645, v4646, v4647, v4648, v4649, v4650, v4651, v4652, v4653, v4654, v4655, v4656, 3, 399999, 99998, 4, 400000) :|: 0 = 0
f_1901(v4604, v4605, v4606, v4607, v4608, v4609, v4610, v4611, v4612, v4613, v4614, 100000, 0, 99999, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4644, 1, v4639, v4641, v4642, v4643, v4645, v4646, v4647, v4648, v4649, v4650, v4651, v4652, v4653, v4654, v4655, v4656, 3, 399999, 99998, 4, 400000) -> f_1903(v4604, v4605, v4606, v4607, v4608, v4609, v4610, v4611, v4612, v4613, v4614, 100000, 0, 99999, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4644, 1, v4639, v4641, v4642, v4643, v4645, v4646, v4647, v4648, v4649, v4650, v4651, v4652, v4653, v4654, v4655, v4656, 3, 399999, 99998, 4, 400000) :|: TRUE
f_1903(v4604, v4605, v4606, v4607, v4608, v4609, v4610, v4611, v4612, v4613, v4614, 100000, 0, 99999, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4644, 1, v4639, v4641, v4642, v4643, v4645, v4646, v4647, v4648, v4649, v4650, v4651, v4652, v4653, v4654, v4655, v4656, 3, 399999, 99998, 4, 400000) -> f_1905(v4604, v4605, v4606, v4607, v4608, v4609, v4610, v4611, v4612, v4613, v4614, 100000, 0, 99999, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4644, 1, v4639, v4641, v4642, v4643, v4645, v4646, v4647, v4648, v4649, v4650, v4651, v4652, v4653, v4654, v4655, v4656, 3, 399999, 99998, 4, 400000) :|: 0 = 0
f_1905(v4604, v4605, v4606, v4607, v4608, v4609, v4610, v4611, v4612, v4613, v4614, 100000, 0, 99999, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4644, 1, v4639, v4641, v4642, v4643, v4645, v4646, v4647, v4648, v4649, v4650, v4651, v4652, v4653, v4654, v4655, v4656, 3, 399999, 99998, 4, 400000) -> f_1906(v4604, v4605, v4606, v4607, v4608, v4609, v4610, v4611, v4612, v4613, v4614, 100000, 0, 99999, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4644, 1, v4641, v4642, v4639, v4643, v4645, v4646, v4647, v4648, v4649, v4650, v4651, v4652, v4653, v4654, v4655, v4656, 3, 399999, 99998, 4, 400000) :|: 0 = 0
f_1906(v4604, v4605, v4606, v4607, v4608, v4609, v4610, v4611, v4612, v4613, v4614, 100000, 0, 99999, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4644, 1, v4641, v4642, v4639, v4643, v4645, v4646, v4647, v4648, v4649, v4650, v4651, v4652, v4653, v4654, v4655, v4656, 3, 399999, 99998, 4, 400000) -> f_1907(v4604, v4605, v4606, v4607, v4608, v4609, v4610, v4611, v4612, v4613, v4614, 100000, 0, 99999, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4644, 1, v4692, v4642, v4639, v4643, v4645, v4646, v4647, v4648, v4649, v4650, v4651, v4652, v4653, v4654, v4655, v4656, v4641, 3, 399999, 4, 99998, 400000, 5) :|: v4692 = v4605 + 4 * v4644 && 5 <= v4692
f_1907(v4604, v4605, v4606, v4607, v4608, v4609, v4610, v4611, v4612, v4613, v4614, 100000, 0, 99999, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4644, 1, v4692, v4642, v4639, v4643, v4645, v4646, v4647, v4648, v4649, v4650, v4651, v4652, v4653, v4654, v4655, v4656, v4641, 3, 399999, 4, 99998, 400000, 5) -> f_1908(v4604, v4605, v4606, v4607, v4608, v4609, v4610, v4611, v4612, v4613, v4614, 100000, 0, 99999, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4644, 1, v4692, v4693, v4639, v4643, v4642, v4645, v4646, v4647, v4648, v4649, v4650, v4651, v4652, v4653, v4654, v4655, v4656, v4641, 3, 399999, 4, 99998, 400000, 5) :|: TRUE
f_1908(v4604, v4605, v4606, v4607, v4608, v4609, v4610, v4611, v4612, v4613, v4614, 100000, 0, 99999, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4644, 1, v4692, v4693, v4639, v4643, v4642, v4645, v4646, v4647, v4648, v4649, v4650, v4651, v4652, v4653, v4654, v4655, v4656, v4641, 3, 399999, 4, 99998, 400000, 5) -> f_1909(v4604, v4605, v4606, v4607, v4608, v4609, v4610, v4611, v4612, v4613, v4614, 100000, 0, 99999, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4644, 1, v4692, v4693, v4639, v4643, v4642, v4645, v4646, v4647, v4648, v4649, v4650, v4651, v4652, v4653, v4654, v4655, v4656, v4641, 3, 399999, 4, 99998, 400000, 5) :|: 0 = 0
f_1909(v4604, v4605, v4606, v4607, v4608, v4609, v4610, v4611, v4612, v4613, v4614, 100000, 0, 99999, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4644, 1, v4692, v4693, v4639, v4643, v4642, v4645, v4646, v4647, v4648, v4649, v4650, v4651, v4652, v4653, v4654, v4655, v4656, v4641, 3, 399999, 4, 99998, 400000, 5) -> f_1910(v4604, v4605, v4606, v4607, v4608, v4609, v4610, v4611, v4612, v4613, v4614, 100000, 0, 99999, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4644, 1, v4692, v4693, v4643, v4642, v4639, v4645, v4646, v4647, v4648, v4649, v4650, v4651, v4652, v4653, v4654, v4655, v4656, v4641, 3, 399999, 4, 99998, 400000, 5) :|: 0 = 0
f_1910(v4604, v4605, v4606, v4607, v4608, v4609, v4610, v4611, v4612, v4613, v4614, 100000, 0, 99999, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4644, 1, v4692, v4693, v4643, v4642, v4639, v4645, v4646, v4647, v4648, v4649, v4650, v4651, v4652, v4653, v4654, v4655, v4656, v4641, 3, 399999, 4, 99998, 400000, 5) -> f_1911(v4604, v4605, v4606, v4607, v4608, v4609, v4610, v4611, v4612, v4613, v4614, 100000, 0, 99999, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4644, 1, v4692, v4693, v4695, v4642, v4639, v4645, v4646, v4647, v4648, v4649, v4650, v4651, v4652, v4653, v4654, v4655, v4656, v4641, v4643, 3, 399999, 4, 99998, 400000, 5) :|: v4695 = v4612 + 4 * v4644 && 5 <= v4695
f_1911(v4604, v4605, v4606, v4607, v4608, v4609, v4610, v4611, v4612, v4613, v4614, 100000, 0, 99999, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4644, 1, v4692, v4693, v4695, v4642, v4639, v4645, v4646, v4647, v4648, v4649, v4650, v4651, v4652, v4653, v4654, v4655, v4656, v4641, v4643, 3, 399999, 4, 99998, 400000, 5) -> f_1912(v4604, v4605, v4606, v4607, v4608, v4609, v4610, v4611, v4612, v4613, v4614, 100000, 0, 99999, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4644, 1, v4692, v4693, v4695, v4696, v4639, v4645, v4646, v4647, v4648, v4649, v4650, v4651, v4652, v4653, v4654, v4655, v4656, v4641, v4642, v4643, 3, 399999, 4, 99998, 400000, 5) :|: TRUE
f_1912(v4604, v4605, v4606, v4607, v4608, v4609, v4610, v4611, v4612, v4613, v4614, 100000, 0, 99999, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4644, 1, v4692, v4693, v4695, v4696, v4639, v4645, v4646, v4647, v4648, v4649, v4650, v4651, v4652, v4653, v4654, v4655, v4656, v4641, v4642, v4643, 3, 399999, 4, 99998, 400000, 5) -> f_1913(v4604, v4605, v4606, v4607, v4608, v4609, v4610, v4611, v4612, v4613, v4614, 100000, 0, 99999, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4644, 1, v4692, v4696, v4695, v4639, v4645, v4646, v4647, v4648, v4649, v4650, v4651, v4652, v4653, v4654, v4655, v4656, v4641, v4642, v4643, 3, 399999, 4, 99998, 400000, 5) :|: v4693 = v4696
f_1913(v4604, v4605, v4606, v4607, v4608, v4609, v4610, v4611, v4612, v4613, v4614, 100000, 0, 99999, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4644, 1, v4692, v4696, v4695, v4639, v4645, v4646, v4647, v4648, v4649, v4650, v4651, v4652, v4653, v4654, v4655, v4656, v4641, v4642, v4643, 3, 399999, 4, 99998, 400000, 5) -> f_1915(v4604, v4605, v4606, v4607, v4608, v4609, v4610, v4611, v4612, v4613, v4614, 100000, 0, 99999, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4644, 1, v4692, v4696, v4695, v4639, v4645, v4646, v4647, v4648, v4649, v4650, v4651, v4652, v4653, v4654, v4655, v4656, v4641, v4642, v4643, 3, 399999, 4, 99998, 400000, 5) :|: 0 = 0
f_1915(v4604, v4605, v4606, v4607, v4608, v4609, v4610, v4611, v4612, v4613, v4614, 100000, 0, 99999, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4644, 1, v4692, v4696, v4695, v4639, v4645, v4646, v4647, v4648, v4649, v4650, v4651, v4652, v4653, v4654, v4655, v4656, v4641, v4642, v4643, 3, 399999, 4, 99998, 400000, 5) -> f_1917(v4604, v4605, v4606, v4607, v4608, v4609, v4610, v4611, v4612, v4613, v4614, 100000, 0, 99999, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4644, 1, v4692, v4696, v4695, v4639, v4645, v4646, v4647, v4648, v4649, v4650, v4651, v4652, v4653, v4654, v4655, v4656, v4641, v4642, v4643, 3, 399999, 4, 99998, 400000, 5) :|: 0 = 0
f_1917(v4604, v4605, v4606, v4607, v4608, v4609, v4610, v4611, v4612, v4613, v4614, 100000, 0, 99999, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4644, 1, v4692, v4696, v4695, v4639, v4645, v4646, v4647, v4648, v4649, v4650, v4651, v4652, v4653, v4654, v4655, v4656, v4641, v4642, v4643, 3, 399999, 4, 99998, 400000, 5) -> f_1919(1, v4604, v4645, v4605, v4646, v4606, v4647, v4607, v4648, v4608, v4649, v4609, v4650, v4610, v4651, v4611, v4652, v4612, v4653, v4613, v4654, v4614, v4655, 0, v4656, 100000, v4644, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4641, v4642, v4643, v4692, v4696, v4695, 99999, v4639, 3, 399999, 4, 99998, 400000, 5) :|: 0 = 0
f_1919(1, v4604, v4645, v4605, v4646, v4606, v4647, v4607, v4648, v4608, v4649, v4609, v4650, v4610, v4651, v4611, v4652, v4612, v4653, v4613, v4654, v4614, v4655, 0, v4656, 100000, v4644, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4641, v4642, v4643, v4692, v4696, v4695, 99999, v4639, 3, 399999, 4, 99998, 400000, 5) -> f_1921(1, v4698, v4604, v4645, v4605, v4646, v4606, v4647, v4607, v4648, v4608, v4649, v4609, v4650, v4610, v4651, v4611, v4652, v4612, v4653, v4613, v4654, v4614, v4655, v4699, 0, v4656, 100000, v4644, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4641, v4642, v4643, v4692, v4696, v4695, 99999, v4639, 3, 399999, 4, 99998, 400000, 5) :|: 1 <= v4698 && v4699 = 3 + v4698 && 4 <= v4699
f_1921(1, v4698, v4604, v4645, v4605, v4646, v4606, v4647, v4607, v4648, v4608, v4649, v4609, v4650, v4610, v4651, v4611, v4652, v4612, v4653, v4613, v4654, v4614, v4655, v4699, 0, v4656, 100000, v4644, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4641, v4642, v4643, v4692, v4696, v4695, 99999, v4639, 3, 399999, 4, 99998, 400000, 5) -> f_1923(1, v4698, v4604, v4645, v4605, v4646, v4606, v4647, v4607, v4648, v4608, v4649, v4609, v4650, v4610, v4651, v4611, v4652, v4612, v4653, v4613, v4654, v4614, v4655, v4699, 0, v4656, 100000, v4644, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4641, v4642, v4643, v4692, v4696, v4695, 99999, v4639, 3, 399999, 4, 99998, 400000, 5) :|: TRUE
f_1923(1, v4698, v4604, v4645, v4605, v4646, v4606, v4647, v4607, v4648, v4608, v4649, v4609, v4650, v4610, v4651, v4611, v4652, v4612, v4653, v4613, v4654, v4614, v4655, v4699, 0, v4656, 100000, v4644, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4641, v4642, v4643, v4692, v4696, v4695, 99999, v4639, 3, 399999, 4, 99998, 400000, 5) -> f_1925(1, v4698, v4604, v4645, v4605, v4646, v4606, v4647, v4607, v4648, v4608, v4649, v4609, v4650, v4610, v4651, v4611, v4652, v4612, v4653, v4613, v4654, v4614, v4655, v4699, 0, v4656, 100000, v4644, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4641, v4642, v4643, v4692, v4696, v4695, 99999, v4639, 3, 399999, 4, 99998, 400000, 5) :|: TRUE
f_1925(1, v4698, v4604, v4645, v4605, v4646, v4606, v4647, v4607, v4648, v4608, v4649, v4609, v4650, v4610, v4651, v4611, v4652, v4612, v4653, v4613, v4654, v4614, v4655, v4699, 0, v4656, 100000, v4644, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4641, v4642, v4643, v4692, v4696, v4695, 99999, v4639, 3, 399999, 4, 99998, 400000, 5) -> f_1927(1, v4698, v4604, v4645, v4605, v4646, v4606, v4647, v4607, v4648, v4608, v4649, v4609, v4650, v4610, v4651, v4611, v4652, v4612, v4653, v4613, v4654, v4614, v4655, v4699, 0, v4656, 100000, v4644, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4641, v4642, v4643, v4692, v4696, v4695, 99999, v4639, 3, 399999, 4, 99998, 400000, 5) :|: 0 = 0
f_1927(1, v4698, v4604, v4645, v4605, v4646, v4606, v4647, v4607, v4648, v4608, v4649, v4609, v4650, v4610, v4651, v4611, v4652, v4612, v4653, v4613, v4654, v4614, v4655, v4699, 0, v4656, 100000, v4644, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4641, v4642, v4643, v4692, v4696, v4695, 99999, v4639, 3, 399999, 4, 99998, 400000, 5) -> f_1929(1, v4698, v4604, v4645, v4605, v4646, v4606, v4647, v4607, v4648, v4608, v4649, v4609, v4650, v4610, v4651, v4611, v4652, v4612, v4653, v4613, v4654, v4614, v4655, v4699, 0, v4656, 100000, v4644, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4641, v4642, v4643, v4692, v4696, v4695, 99999, v4639, 3, 399999, 4, 99998, 400000, 5) :|: 0 = 0
f_1929(1, v4698, v4604, v4645, v4605, v4646, v4606, v4647, v4607, v4648, v4608, v4649, v4609, v4650, v4610, v4651, v4611, v4652, v4612, v4653, v4613, v4654, v4614, v4655, v4699, 0, v4656, 100000, v4644, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4641, v4642, v4643, v4692, v4696, v4695, 99999, v4639, 3, 399999, 4, 99998, 400000, 5) -> f_1931(1, v4698, v4604, v4645, v4605, v4646, v4606, v4647, v4607, v4648, v4608, v4649, v4609, v4650, v4610, v4651, v4611, v4652, v4612, v4653, v4613, v4654, v4614, v4655, v4699, 0, v4656, 100000, v4644, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4641, v4642, v4643, v4692, v4696, v4695, 99999, v4639, 3, 399999, 4, 99998, 400000, 5) :|: TRUE
f_1931(1, v4698, v4604, v4645, v4605, v4646, v4606, v4647, v4607, v4648, v4608, v4649, v4609, v4650, v4610, v4651, v4611, v4652, v4612, v4653, v4613, v4654, v4614, v4655, v4699, 0, v4656, 100000, v4644, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4641, v4642, v4643, v4692, v4696, v4695, 99999, v4639, 3, 399999, 4, 99998, 400000, 5) -> f_1933(v4604, v4605, v4606, v4607, v4608, v4609, v4610, v4611, v4612, v4613, v4614, 100000, 0, 99999, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4644, 1, v4692, v4696, v4695, v4639, v4645, v4646, v4647, v4648, v4649, v4650, v4651, v4652, v4653, v4654, v4655, v4656, v4641, v4642, v4643, 3, 399999, 4, 99998, 400000, 5) :|: TRUE
f_1933(v4604, v4605, v4606, v4607, v4608, v4609, v4610, v4611, v4612, v4613, v4614, 100000, 0, 99999, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4644, 1, v4692, v4696, v4695, v4639, v4645, v4646, v4647, v4648, v4649, v4650, v4651, v4652, v4653, v4654, v4655, v4656, v4641, v4642, v4643, 3, 399999, 4, 99998, 400000, 5) -> f_1935(v4604, v4605, v4606, v4607, v4608, v4609, v4610, v4611, v4612, v4613, v4614, 100000, 0, 99999, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4644, 1, v4692, v4696, v4695, v4639, v4645, v4646, v4647, v4648, v4649, v4650, v4651, v4652, v4653, v4654, v4655, v4656, v4641, v4642, v4643, 3, 399999, 4, 99998, 400000, 5) :|: TRUE
f_1935(v4604, v4605, v4606, v4607, v4608, v4609, v4610, v4611, v4612, v4613, v4614, 100000, 0, 99999, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4644, 1, v4692, v4696, v4695, v4639, v4645, v4646, v4647, v4648, v4649, v4650, v4651, v4652, v4653, v4654, v4655, v4656, v4641, v4642, v4643, 3, 399999, 4, 99998, 400000, 5) -> f_1937(v4604, v4605, v4606, v4607, v4608, v4609, v4610, v4611, v4612, v4613, v4614, 100000, 0, 99999, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4644, 1, v4692, v4696, v4695, v4645, v4646, v4647, v4648, v4649, v4650, v4651, v4652, v4653, v4654, v4655, v4656, v4641, v4642, v4643, 3, 399999, 4, 400000, 5) :|: 0 = 0
f_1937(v4604, v4605, v4606, v4607, v4608, v4609, v4610, v4611, v4612, v4613, v4614, 100000, 0, 99999, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4644, 1, v4692, v4696, v4695, v4645, v4646, v4647, v4648, v4649, v4650, v4651, v4652, v4653, v4654, v4655, v4656, v4641, v4642, v4643, 3, 399999, 4, 400000, 5) -> f_1939(v4604, v4605, v4606, v4607, v4608, v4609, v4610, v4611, v4612, v4613, v4614, 100000, 0, 99999, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4644, 1, v4692, v4696, v4695, v4702, v4645, v4646, v4647, v4648, v4649, v4650, v4651, v4652, v4653, v4654, v4655, v4656, v4641, v4642, v4643, 3, 399999, 4, 400000, 5, 2) :|: v4702 = 1 + v4644 && 2 <= v4702 && v4702 <= 100000
f_1939(v4604, v4605, v4606, v4607, v4608, v4609, v4610, v4611, v4612, v4613, v4614, 100000, 0, 99999, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4644, 1, v4692, v4696, v4695, v4702, v4645, v4646, v4647, v4648, v4649, v4650, v4651, v4652, v4653, v4654, v4655, v4656, v4641, v4642, v4643, 3, 399999, 4, 400000, 5, 2) -> f_1940(v4604, v4605, v4606, v4607, v4608, v4609, v4610, v4611, v4612, v4613, v4614, 100000, 0, 99999, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4644, 1, v4692, v4696, v4695, v4702, v4645, v4646, v4647, v4648, v4649, v4650, v4651, v4652, v4653, v4654, v4655, v4656, v4641, v4642, v4643, 3, 399999, 4, 400000, 5, 2) :|: TRUE
f_1940(v4604, v4605, v4606, v4607, v4608, v4609, v4610, v4611, v4612, v4613, v4614, 100000, 0, 99999, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4644, 1, v4692, v4696, v4695, v4702, v4645, v4646, v4647, v4648, v4649, v4650, v4651, v4652, v4653, v4654, v4655, v4656, v4641, v4642, v4643, 3, 399999, 4, 400000, 5, 2) -> f_1941(v4604, v4605, v4606, v4607, v4608, v4609, v4610, v4611, v4612, v4613, v4614, 100000, 0, 99999, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4644, 1, v4692, v4696, v4695, v4702, v4645, v4646, v4647, v4648, v4649, v4650, v4651, v4652, v4653, v4654, v4655, v4656, v4641, v4642, v4643, 3, 399999, 4, 400000, 5, 2) :|: TRUE
f_1941(v4604, v4605, v4606, v4607, v4608, v4609, v4610, v4611, v4612, v4613, v4614, 100000, 0, 99999, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4644, 1, v4692, v4696, v4695, v4702, v4645, v4646, v4647, v4648, v4649, v4650, v4651, v4652, v4653, v4654, v4655, v4656, v4641, v4642, v4643, 3, 399999, 4, 400000, 5, 2) -> f_1897(v4604, v4605, v4606, v4607, v4608, v4609, v4610, v4611, v4612, v4613, v4614, 100000, 0, 99999, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4644, 1, v4692, v4696, v4695, v4702, v4645, v4646, v4647, v4648, v4649, v4650, v4651, v4652, v4653, v4654, v4655, v4656, 3, 399999, 4, 400000) :|: TRUE
f_1897(v4604, v4605, v4606, v4607, v4608, v4609, v4610, v4611, v4612, v4613, v4614, 100000, 0, 99999, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4639, 1, v4641, v4642, v4643, v4644, v4645, v4646, v4647, v4648, v4649, v4650, v4651, v4652, v4653, v4654, v4655, v4656, 3, 399999, 4, 400000) -> f_1898(v4604, v4605, v4606, v4607, v4608, v4609, v4610, v4611, v4612, v4613, v4614, 100000, 0, 99999, v4618, v4619, v4620, v4621, v4622, v4623, v4624, v4625, v4626, v4627, v4628, v4629, v4630, v4631, v4632, v4633, v4634, v4635, v4636, v4637, v4638, v4644, 1, v4639, v4641, v4642, v4643, v4645, v4646, v4647, v4648, v4649, v4650, v4651, v4652, v4653, v4654, v4655, v4656, 3, 399999, 4, 400000) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_1898(v4604:0, v4605:0, v4606:0, v4607:0, v4608:0, v4609:0, v4610:0, v4611:0, v4612:0, v4613:0, v4614:0, 100000, 0, 99999, v4618:0, v4619:0, v4620:0, v4621:0, v4622:0, v4623:0, v4624:0, v4625:0, v4626:0, v4627:0, v4628:0, v4629:0, v4630:0, v4631:0, v4632:0, v4633:0, v4634:0, v4635:0, v4636:0, v4637:0, v4638:0, v4644:0, 1, v4639:0, v4641:0, v4642:0, v4643:0, v4645:0, v4646:0, v4647:0, v4648:0, v4649:0, v4650:0, v4651:0, v4652:0, v4653:0, v4654:0, v4655:0, v4656:0, 3, 399999, 4, 400000) -> f_1898(v4604:0, v4605:0, v4606:0, v4607:0, v4608:0, v4609:0, v4610:0, v4611:0, v4612:0, v4613:0, v4614:0, 100000, 0, 99999, v4618:0, v4619:0, v4620:0, v4621:0, v4622:0, v4623:0, v4624:0, v4625:0, v4626:0, v4627:0, v4628:0, v4629:0, v4630:0, v4631:0, v4632:0, v4633:0, v4634:0, v4635:0, v4636:0, v4637:0, v4638:0, 1 + v4644:0, 1, v4644:0, v4605:0 + 4 * v4644:0, v4693:0, v4612:0 + 4 * v4644:0, v4645:0, v4646:0, v4647:0, v4648:0, v4649:0, v4650:0, v4651:0, v4652:0, v4653:0, v4654:0, v4655:0, v4656:0, 3, 399999, 4, 400000) :|: v4639:0 < 99999 && v4644:0 < 100000 && v4605:0 + 4 * v4644:0 > 4 && v4612:0 + 4 * v4644:0 > 4 && v4698:0 > 0 && v4644:0 > 0
Filtered unneeded arguments:
   f_1898(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55, x56, x57) -> f_1898(x2, x9, x36, x38)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1898(v4605:0, v4612:0, v4644:0, v4639:0) -> f_1898(v4605:0, v4612:0, 1 + v4644:0, v4644:0) :|: v4644:0 < 100000 && v4639:0 < 99999 && v4605:0 + 4 * v4644:0 > 4 && v4644:0 > 0 && v4612:0 + 4 * v4644:0 > 4

----------------------------------------

(9)
Obligation:
Rules:
f_1898(v4605:0, v4612:0, v4644:0, v4639:0) -> f_1898(v4605:0, v4612:0, 1 + v4644:0, v4644:0) :|: v4644:0 < 100000 && v4639:0 < 99999 && v4605:0 + 4 * v4644:0 > 4 && v4644:0 > 0 && v4612:0 + 4 * v4644:0 > 4

----------------------------------------

(10) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(11)
Obligation:
Rules:
f_1898(v4605:0:0, v4612:0:0, v4644:0:0, v4639:0:0) -> f_1898(v4605:0:0, v4612:0:0, 1 + v4644:0:0, v4644:0:0) :|: v4644:0:0 > 0 && v4612:0:0 + 4 * v4644:0:0 > 4 && v4605:0:0 + 4 * v4644:0:0 > 4 && v4639:0:0 < 99999 && v4644:0:0 < 100000

----------------------------------------

(12) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_1898 ] = -1*f_1898_3

The following rules are decreasing:
f_1898(v4605:0:0, v4612:0:0, v4644:0:0, v4639:0:0) -> f_1898(v4605:0:0, v4612:0:0, 1 + v4644:0:0, v4644:0:0) :|: v4644:0:0 > 0 && v4612:0:0 + 4 * v4644:0:0 > 4 && v4605:0:0 + 4 * v4644:0:0 > 4 && v4639:0:0 < 99999 && v4644:0:0 < 100000

The following rules are bounded:
f_1898(v4605:0:0, v4612:0:0, v4644:0:0, v4639:0:0) -> f_1898(v4605:0:0, v4612:0:0, 1 + v4644:0:0, v4644:0:0) :|: v4644:0:0 > 0 && v4612:0:0 + 4 * v4644:0:0 > 4 && v4605:0:0 + 4 * v4644:0:0 > 4 && v4639:0:0 < 99999 && v4644:0:0 < 100000


----------------------------------------

(13)
YES

----------------------------------------

(14)
Obligation:
SCC
----------------------------------------

(15) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 18 rulesP rules:
f_1636(v3774, v3775, v3776, v3777, v3778, v3779, v3780, v3781, v3782, v3783, v3784, 100000, 0, 99999, v3788, v3789, v3790, v3791, v3792, v3793, v3794, v3795, v3796, v3797, v3798, v3799, v3800, v3801, v3802, v3803, v3804, v3805, v3811, 1, v3806, v3808, v3809, v3810, v3812, v3813, v3814, v3815, v3816, v3817, v3818, v3819, v3820, v3821, v3822, v3823, 3, 399999, 4, 400000) -> f_1637(v3774, v3775, v3776, v3777, v3778, v3779, v3780, v3781, v3782, v3783, v3784, 100000, 0, 99999, v3788, v3789, v3790, v3791, v3792, v3793, v3794, v3795, v3796, v3797, v3798, v3799, v3800, v3801, v3802, v3803, v3804, v3805, v3811, 1, v3806, v3808, v3809, v3810, v3812, v3813, v3814, v3815, v3816, v3817, v3818, v3819, v3820, v3821, v3822, v3823, 3, 399999, 99998, 4, 400000) :|: v3811 < 100000 && v3806 <= 99998
f_1637(v3774, v3775, v3776, v3777, v3778, v3779, v3780, v3781, v3782, v3783, v3784, 100000, 0, 99999, v3788, v3789, v3790, v3791, v3792, v3793, v3794, v3795, v3796, v3797, v3798, v3799, v3800, v3801, v3802, v3803, v3804, v3805, v3811, 1, v3806, v3808, v3809, v3810, v3812, v3813, v3814, v3815, v3816, v3817, v3818, v3819, v3820, v3821, v3822, v3823, 3, 399999, 99998, 4, 400000) -> f_1639(v3774, v3775, v3776, v3777, v3778, v3779, v3780, v3781, v3782, v3783, v3784, 100000, 0, 99999, v3788, v3789, v3790, v3791, v3792, v3793, v3794, v3795, v3796, v3797, v3798, v3799, v3800, v3801, v3802, v3803, v3804, v3805, v3811, 1, v3806, v3808, v3809, v3810, v3812, v3813, v3814, v3815, v3816, v3817, v3818, v3819, v3820, v3821, v3822, v3823, 3, 399999, 99998, 4, 400000) :|: 0 = 0
f_1639(v3774, v3775, v3776, v3777, v3778, v3779, v3780, v3781, v3782, v3783, v3784, 100000, 0, 99999, v3788, v3789, v3790, v3791, v3792, v3793, v3794, v3795, v3796, v3797, v3798, v3799, v3800, v3801, v3802, v3803, v3804, v3805, v3811, 1, v3806, v3808, v3809, v3810, v3812, v3813, v3814, v3815, v3816, v3817, v3818, v3819, v3820, v3821, v3822, v3823, 3, 399999, 99998, 4, 400000) -> f_1641(v3774, v3775, v3776, v3777, v3778, v3779, v3780, v3781, v3782, v3783, v3784, 100000, 0, 99999, v3788, v3789, v3790, v3791, v3792, v3793, v3794, v3795, v3796, v3797, v3798, v3799, v3800, v3801, v3802, v3803, v3804, v3805, v3811, 1, v3806, v3808, v3809, v3810, v3812, v3813, v3814, v3815, v3816, v3817, v3818, v3819, v3820, v3821, v3822, v3823, 3, 399999, 99998, 4, 400000) :|: TRUE
f_1641(v3774, v3775, v3776, v3777, v3778, v3779, v3780, v3781, v3782, v3783, v3784, 100000, 0, 99999, v3788, v3789, v3790, v3791, v3792, v3793, v3794, v3795, v3796, v3797, v3798, v3799, v3800, v3801, v3802, v3803, v3804, v3805, v3811, 1, v3806, v3808, v3809, v3810, v3812, v3813, v3814, v3815, v3816, v3817, v3818, v3819, v3820, v3821, v3822, v3823, 3, 399999, 99998, 4, 400000) -> f_1643(v3774, v3775, v3776, v3777, v3778, v3779, v3780, v3781, v3782, v3783, v3784, 100000, 0, 99999, v3788, v3789, v3790, v3791, v3792, v3793, v3794, v3795, v3796, v3797, v3798, v3799, v3800, v3801, v3802, v3803, v3804, v3805, v3811, 1, v3806, v3808, v3809, v3810, v3812, v3813, v3814, v3815, v3816, v3817, v3818, v3819, v3820, v3821, v3822, v3823, 3, 399999, 99998, 4, 400000) :|: 0 = 0
f_1643(v3774, v3775, v3776, v3777, v3778, v3779, v3780, v3781, v3782, v3783, v3784, 100000, 0, 99999, v3788, v3789, v3790, v3791, v3792, v3793, v3794, v3795, v3796, v3797, v3798, v3799, v3800, v3801, v3802, v3803, v3804, v3805, v3811, 1, v3806, v3808, v3809, v3810, v3812, v3813, v3814, v3815, v3816, v3817, v3818, v3819, v3820, v3821, v3822, v3823, 3, 399999, 99998, 4, 400000) -> f_1645(v3774, v3775, v3776, v3777, v3778, v3779, v3780, v3781, v3782, v3783, v3784, 100000, 0, 99999, v3788, v3789, v3790, v3791, v3792, v3793, v3794, v3795, v3796, v3797, v3798, v3799, v3800, v3801, v3802, v3803, v3804, v3805, v3811, 1, v3808, v3809, v3806, v3810, v3812, v3813, v3814, v3815, v3816, v3817, v3818, v3819, v3820, v3821, v3822, v3823, 3, 399999, 99998, 4, 400000) :|: 0 = 0
f_1645(v3774, v3775, v3776, v3777, v3778, v3779, v3780, v3781, v3782, v3783, v3784, 100000, 0, 99999, v3788, v3789, v3790, v3791, v3792, v3793, v3794, v3795, v3796, v3797, v3798, v3799, v3800, v3801, v3802, v3803, v3804, v3805, v3811, 1, v3808, v3809, v3806, v3810, v3812, v3813, v3814, v3815, v3816, v3817, v3818, v3819, v3820, v3821, v3822, v3823, 3, 399999, 99998, 4, 400000) -> f_1647(v3774, v3775, v3776, v3777, v3778, v3779, v3780, v3781, v3782, v3783, v3784, 100000, 0, 99999, v3788, v3789, v3790, v3791, v3792, v3793, v3794, v3795, v3796, v3797, v3798, v3799, v3800, v3801, v3802, v3803, v3804, v3805, v3811, 1, v3856, v3809, v3806, v3810, v3812, v3813, v3814, v3815, v3816, v3817, v3818, v3819, v3820, v3821, v3822, v3823, v3808, 3, 399999, 4, 99998, 400000, 5) :|: v3856 = v3781 + 4 * v3811 && 5 <= v3856
f_1647(v3774, v3775, v3776, v3777, v3778, v3779, v3780, v3781, v3782, v3783, v3784, 100000, 0, 99999, v3788, v3789, v3790, v3791, v3792, v3793, v3794, v3795, v3796, v3797, v3798, v3799, v3800, v3801, v3802, v3803, v3804, v3805, v3811, 1, v3856, v3809, v3806, v3810, v3812, v3813, v3814, v3815, v3816, v3817, v3818, v3819, v3820, v3821, v3822, v3823, v3808, 3, 399999, 4, 99998, 400000, 5) -> f_1649(v3774, v3775, v3776, v3777, v3778, v3779, v3780, v3781, v3782, v3783, v3784, 100000, 0, 99999, v3788, v3789, v3790, v3791, v3792, v3793, v3794, v3795, v3796, v3797, v3798, v3799, v3800, v3801, v3802, v3803, v3804, v3805, v3811, 1, v3856, v3857, v3806, v3810, v3812, v3813, v3814, v3815, v3816, v3817, v3818, v3819, v3820, v3821, v3822, v3823, v3808, v3809, 3, 399999, 4, 99998, 400000, 5) :|: TRUE
f_1649(v3774, v3775, v3776, v3777, v3778, v3779, v3780, v3781, v3782, v3783, v3784, 100000, 0, 99999, v3788, v3789, v3790, v3791, v3792, v3793, v3794, v3795, v3796, v3797, v3798, v3799, v3800, v3801, v3802, v3803, v3804, v3805, v3811, 1, v3856, v3857, v3806, v3810, v3812, v3813, v3814, v3815, v3816, v3817, v3818, v3819, v3820, v3821, v3822, v3823, v3808, v3809, 3, 399999, 4, 99998, 400000, 5) -> f_1651(v3774, v3775, v3776, v3777, v3778, v3779, v3780, v3781, v3782, v3783, v3784, 100000, 0, 99999, v3788, v3789, v3790, v3791, v3792, v3793, v3794, v3795, v3796, v3797, v3798, v3799, v3800, v3801, v3802, v3803, v3804, v3805, v3811, 1, v3856, v3857, v3806, v3810, v3812, v3813, v3814, v3815, v3816, v3817, v3818, v3819, v3820, v3821, v3822, v3823, v3808, v3809, 3, 399999, 4, 99998, 400000, 5) :|: 0 = 0
f_1651(v3774, v3775, v3776, v3777, v3778, v3779, v3780, v3781, v3782, v3783, v3784, 100000, 0, 99999, v3788, v3789, v3790, v3791, v3792, v3793, v3794, v3795, v3796, v3797, v3798, v3799, v3800, v3801, v3802, v3803, v3804, v3805, v3811, 1, v3856, v3857, v3806, v3810, v3812, v3813, v3814, v3815, v3816, v3817, v3818, v3819, v3820, v3821, v3822, v3823, v3808, v3809, 3, 399999, 4, 99998, 400000, 5) -> f_1653(v3774, v3775, v3776, v3777, v3778, v3779, v3780, v3781, v3782, v3783, v3784, 100000, 0, 99999, v3788, v3789, v3790, v3791, v3792, v3793, v3794, v3795, v3796, v3797, v3798, v3799, v3800, v3801, v3802, v3803, v3804, v3805, v3811, 1, v3856, v3857, v3810, v3806, v3812, v3813, v3814, v3815, v3816, v3817, v3818, v3819, v3820, v3821, v3822, v3823, v3808, v3809, 3, 399999, 4, 99998, 400000, 5) :|: 0 = 0
f_1653(v3774, v3775, v3776, v3777, v3778, v3779, v3780, v3781, v3782, v3783, v3784, 100000, 0, 99999, v3788, v3789, v3790, v3791, v3792, v3793, v3794, v3795, v3796, v3797, v3798, v3799, v3800, v3801, v3802, v3803, v3804, v3805, v3811, 1, v3856, v3857, v3810, v3806, v3812, v3813, v3814, v3815, v3816, v3817, v3818, v3819, v3820, v3821, v3822, v3823, v3808, v3809, 3, 399999, 4, 99998, 400000, 5) -> f_1655(v3774, v3775, v3776, v3777, v3778, v3779, v3780, v3781, v3782, v3783, v3784, 100000, 0, 99999, v3788, v3789, v3790, v3791, v3792, v3793, v3794, v3795, v3796, v3797, v3798, v3799, v3800, v3801, v3802, v3803, v3804, v3805, v3811, 1, v3856, v3857, v3859, v3806, v3812, v3813, v3814, v3815, v3816, v3817, v3818, v3819, v3820, v3821, v3822, v3823, v3808, v3809, v3810, 3, 399999, 4, 99998, 400000, 5) :|: v3859 = v3782 + 4 * v3811 && 5 <= v3859
f_1655(v3774, v3775, v3776, v3777, v3778, v3779, v3780, v3781, v3782, v3783, v3784, 100000, 0, 99999, v3788, v3789, v3790, v3791, v3792, v3793, v3794, v3795, v3796, v3797, v3798, v3799, v3800, v3801, v3802, v3803, v3804, v3805, v3811, 1, v3856, v3857, v3859, v3806, v3812, v3813, v3814, v3815, v3816, v3817, v3818, v3819, v3820, v3821, v3822, v3823, v3808, v3809, v3810, 3, 399999, 4, 99998, 400000, 5) -> f_1657(v3774, v3775, v3776, v3777, v3778, v3779, v3780, v3781, v3782, v3783, v3784, 100000, 0, 99999, v3788, v3789, v3790, v3791, v3792, v3793, v3794, v3795, v3796, v3797, v3798, v3799, v3800, v3801, v3802, v3803, v3804, v3805, v3811, 1, v3856, v3857, v3859, v3806, v3812, v3813, v3814, v3815, v3816, v3817, v3818, v3819, v3820, v3821, v3822, v3823, v3808, v3809, 3, 399999, 4, 99998, 400000, 5) :|: TRUE
f_1657(v3774, v3775, v3776, v3777, v3778, v3779, v3780, v3781, v3782, v3783, v3784, 100000, 0, 99999, v3788, v3789, v3790, v3791, v3792, v3793, v3794, v3795, v3796, v3797, v3798, v3799, v3800, v3801, v3802, v3803, v3804, v3805, v3811, 1, v3856, v3857, v3859, v3806, v3812, v3813, v3814, v3815, v3816, v3817, v3818, v3819, v3820, v3821, v3822, v3823, v3808, v3809, 3, 399999, 4, 99998, 400000, 5) -> f_1659(v3774, v3775, v3776, v3777, v3778, v3779, v3780, v3781, v3782, v3783, v3784, 100000, 0, 99999, v3788, v3789, v3790, v3791, v3792, v3793, v3794, v3795, v3796, v3797, v3798, v3799, v3800, v3801, v3802, v3803, v3804, v3805, v3811, 1, v3856, v3857, v3859, v3806, v3812, v3813, v3814, v3815, v3816, v3817, v3818, v3819, v3820, v3821, v3822, v3823, v3808, v3809, 3, 399999, 4, 99998, 400000, 5) :|: TRUE
f_1659(v3774, v3775, v3776, v3777, v3778, v3779, v3780, v3781, v3782, v3783, v3784, 100000, 0, 99999, v3788, v3789, v3790, v3791, v3792, v3793, v3794, v3795, v3796, v3797, v3798, v3799, v3800, v3801, v3802, v3803, v3804, v3805, v3811, 1, v3856, v3857, v3859, v3806, v3812, v3813, v3814, v3815, v3816, v3817, v3818, v3819, v3820, v3821, v3822, v3823, v3808, v3809, 3, 399999, 4, 99998, 400000, 5) -> f_1661(v3774, v3775, v3776, v3777, v3778, v3779, v3780, v3781, v3782, v3783, v3784, 100000, 0, 99999, v3788, v3789, v3790, v3791, v3792, v3793, v3794, v3795, v3796, v3797, v3798, v3799, v3800, v3801, v3802, v3803, v3804, v3805, v3811, 1, v3856, v3857, v3859, v3812, v3813, v3814, v3815, v3816, v3817, v3818, v3819, v3820, v3821, v3822, v3823, v3808, v3809, 3, 399999, 4, 400000, 5) :|: 0 = 0
f_1661(v3774, v3775, v3776, v3777, v3778, v3779, v3780, v3781, v3782, v3783, v3784, 100000, 0, 99999, v3788, v3789, v3790, v3791, v3792, v3793, v3794, v3795, v3796, v3797, v3798, v3799, v3800, v3801, v3802, v3803, v3804, v3805, v3811, 1, v3856, v3857, v3859, v3812, v3813, v3814, v3815, v3816, v3817, v3818, v3819, v3820, v3821, v3822, v3823, v3808, v3809, 3, 399999, 4, 400000, 5) -> f_1663(v3774, v3775, v3776, v3777, v3778, v3779, v3780, v3781, v3782, v3783, v3784, 100000, 0, 99999, v3788, v3789, v3790, v3791, v3792, v3793, v3794, v3795, v3796, v3797, v3798, v3799, v3800, v3801, v3802, v3803, v3804, v3805, v3811, 1, v3856, v3857, v3859, v3861, v3812, v3813, v3814, v3815, v3816, v3817, v3818, v3819, v3820, v3821, v3822, v3823, v3808, v3809, 3, 399999, 4, 400000, 5, 2) :|: v3861 = 1 + v3811 && 2 <= v3861 && v3861 <= 100000
f_1663(v3774, v3775, v3776, v3777, v3778, v3779, v3780, v3781, v3782, v3783, v3784, 100000, 0, 99999, v3788, v3789, v3790, v3791, v3792, v3793, v3794, v3795, v3796, v3797, v3798, v3799, v3800, v3801, v3802, v3803, v3804, v3805, v3811, 1, v3856, v3857, v3859, v3861, v3812, v3813, v3814, v3815, v3816, v3817, v3818, v3819, v3820, v3821, v3822, v3823, v3808, v3809, 3, 399999, 4, 400000, 5, 2) -> f_1665(v3774, v3775, v3776, v3777, v3778, v3779, v3780, v3781, v3782, v3783, v3784, 100000, 0, 99999, v3788, v3789, v3790, v3791, v3792, v3793, v3794, v3795, v3796, v3797, v3798, v3799, v3800, v3801, v3802, v3803, v3804, v3805, v3811, 1, v3856, v3857, v3859, v3861, v3812, v3813, v3814, v3815, v3816, v3817, v3818, v3819, v3820, v3821, v3822, v3823, v3808, v3809, 3, 399999, 4, 400000, 5, 2) :|: TRUE
f_1665(v3774, v3775, v3776, v3777, v3778, v3779, v3780, v3781, v3782, v3783, v3784, 100000, 0, 99999, v3788, v3789, v3790, v3791, v3792, v3793, v3794, v3795, v3796, v3797, v3798, v3799, v3800, v3801, v3802, v3803, v3804, v3805, v3811, 1, v3856, v3857, v3859, v3861, v3812, v3813, v3814, v3815, v3816, v3817, v3818, v3819, v3820, v3821, v3822, v3823, v3808, v3809, 3, 399999, 4, 400000, 5, 2) -> f_1667(v3774, v3775, v3776, v3777, v3778, v3779, v3780, v3781, v3782, v3783, v3784, 100000, 0, 99999, v3788, v3789, v3790, v3791, v3792, v3793, v3794, v3795, v3796, v3797, v3798, v3799, v3800, v3801, v3802, v3803, v3804, v3805, v3811, 1, v3856, v3857, v3859, v3861, v3812, v3813, v3814, v3815, v3816, v3817, v3818, v3819, v3820, v3821, v3822, v3823, v3808, v3809, 3, 399999, 4, 400000, 5, 2) :|: TRUE
f_1667(v3774, v3775, v3776, v3777, v3778, v3779, v3780, v3781, v3782, v3783, v3784, 100000, 0, 99999, v3788, v3789, v3790, v3791, v3792, v3793, v3794, v3795, v3796, v3797, v3798, v3799, v3800, v3801, v3802, v3803, v3804, v3805, v3811, 1, v3856, v3857, v3859, v3861, v3812, v3813, v3814, v3815, v3816, v3817, v3818, v3819, v3820, v3821, v3822, v3823, v3808, v3809, 3, 399999, 4, 400000, 5, 2) -> f_1635(v3774, v3775, v3776, v3777, v3778, v3779, v3780, v3781, v3782, v3783, v3784, 100000, 0, 99999, v3788, v3789, v3790, v3791, v3792, v3793, v3794, v3795, v3796, v3797, v3798, v3799, v3800, v3801, v3802, v3803, v3804, v3805, v3811, 1, v3856, v3857, v3859, v3861, v3812, v3813, v3814, v3815, v3816, v3817, v3818, v3819, v3820, v3821, v3822, v3823, 3, 399999, 4, 400000) :|: TRUE
f_1635(v3774, v3775, v3776, v3777, v3778, v3779, v3780, v3781, v3782, v3783, v3784, 100000, 0, 99999, v3788, v3789, v3790, v3791, v3792, v3793, v3794, v3795, v3796, v3797, v3798, v3799, v3800, v3801, v3802, v3803, v3804, v3805, v3806, 1, v3808, v3809, v3810, v3811, v3812, v3813, v3814, v3815, v3816, v3817, v3818, v3819, v3820, v3821, v3822, v3823, 3, 399999, 4, 400000) -> f_1636(v3774, v3775, v3776, v3777, v3778, v3779, v3780, v3781, v3782, v3783, v3784, 100000, 0, 99999, v3788, v3789, v3790, v3791, v3792, v3793, v3794, v3795, v3796, v3797, v3798, v3799, v3800, v3801, v3802, v3803, v3804, v3805, v3811, 1, v3806, v3808, v3809, v3810, v3812, v3813, v3814, v3815, v3816, v3817, v3818, v3819, v3820, v3821, v3822, v3823, 3, 399999, 4, 400000) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_1636(v3774:0, v3775:0, v3776:0, v3777:0, v3778:0, v3779:0, v3780:0, v3781:0, v3782:0, v3783:0, v3784:0, 100000, 0, 99999, v3788:0, v3789:0, v3790:0, v3791:0, v3792:0, v3793:0, v3794:0, v3795:0, v3796:0, v3797:0, v3798:0, v3799:0, v3800:0, v3801:0, v3802:0, v3803:0, v3804:0, v3805:0, v3811:0, 1, v3806:0, v3808:0, v3809:0, v3810:0, v3812:0, v3813:0, v3814:0, v3815:0, v3816:0, v3817:0, v3818:0, v3819:0, v3820:0, v3821:0, v3822:0, v3823:0, 3, 399999, 4, 400000) -> f_1636(v3774:0, v3775:0, v3776:0, v3777:0, v3778:0, v3779:0, v3780:0, v3781:0, v3782:0, v3783:0, v3784:0, 100000, 0, 99999, v3788:0, v3789:0, v3790:0, v3791:0, v3792:0, v3793:0, v3794:0, v3795:0, v3796:0, v3797:0, v3798:0, v3799:0, v3800:0, v3801:0, v3802:0, v3803:0, v3804:0, v3805:0, 1 + v3811:0, 1, v3811:0, v3781:0 + 4 * v3811:0, v3857:0, v3782:0 + 4 * v3811:0, v3812:0, v3813:0, v3814:0, v3815:0, v3816:0, v3817:0, v3818:0, v3819:0, v3820:0, v3821:0, v3822:0, v3823:0, 3, 399999, 4, 400000) :|: v3806:0 < 99999 && v3811:0 < 100000 && v3781:0 + 4 * v3811:0 > 4 && v3782:0 + 4 * v3811:0 > 4 && v3811:0 > 0
Filtered unneeded arguments:
   f_1636(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49, x50, x51, x52, x53, x54) -> f_1636(x8, x9, x33, x35)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1636(v3781:0, v3782:0, v3811:0, v3806:0) -> f_1636(v3781:0, v3782:0, 1 + v3811:0, v3811:0) :|: v3811:0 < 100000 && v3806:0 < 99999 && v3781:0 + 4 * v3811:0 > 4 && v3811:0 > 0 && v3782:0 + 4 * v3811:0 > 4

----------------------------------------

(16)
Obligation:
Rules:
f_1636(v3781:0, v3782:0, v3811:0, v3806:0) -> f_1636(v3781:0, v3782:0, 1 + v3811:0, v3811:0) :|: v3811:0 < 100000 && v3806:0 < 99999 && v3781:0 + 4 * v3811:0 > 4 && v3811:0 > 0 && v3782:0 + 4 * v3811:0 > 4

----------------------------------------

(17) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(18)
Obligation:
Rules:
f_1636(v3781:0:0, v3782:0:0, v3811:0:0, v3806:0:0) -> f_1636(v3781:0:0, v3782:0:0, 1 + v3811:0:0, v3811:0:0) :|: v3811:0:0 > 0 && v3782:0:0 + 4 * v3811:0:0 > 4 && v3781:0:0 + 4 * v3811:0:0 > 4 && v3806:0:0 < 99999 && v3811:0:0 < 100000

----------------------------------------

(19) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_1636 ] = -1*f_1636_3

The following rules are decreasing:
f_1636(v3781:0:0, v3782:0:0, v3811:0:0, v3806:0:0) -> f_1636(v3781:0:0, v3782:0:0, 1 + v3811:0:0, v3811:0:0) :|: v3811:0:0 > 0 && v3782:0:0 + 4 * v3811:0:0 > 4 && v3781:0:0 + 4 * v3811:0:0 > 4 && v3806:0:0 < 99999 && v3811:0:0 < 100000

The following rules are bounded:
f_1636(v3781:0:0, v3782:0:0, v3811:0:0, v3806:0:0) -> f_1636(v3781:0:0, v3782:0:0, 1 + v3811:0:0, v3811:0:0) :|: v3811:0:0 > 0 && v3782:0:0 + 4 * v3811:0:0 > 4 && v3781:0:0 + 4 * v3811:0:0 > 4 && v3806:0:0 < 99999 && v3811:0:0 < 100000


----------------------------------------

(20)
YES

----------------------------------------

(21)
Obligation:
SCC
----------------------------------------

(22) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 18 rulesP rules:
f_1481(v3027, v3028, v3029, v3030, v3031, v3032, v3033, v3034, v3035, v3036, v3037, 100000, 0, 99999, v3041, v3042, v3043, v3044, v3045, v3046, v3047, v3048, v3049, v3050, v3051, v3052, v3053, v3054, v3055, v3061, 1, v3056, v3058, v3059, v3060, v3062, v3063, v3064, v3065, v3066, v3067, v3068, v3069, v3070, v3071, v3072, v3073, 3, 399999, 4, 400000) -> f_1482(v3027, v3028, v3029, v3030, v3031, v3032, v3033, v3034, v3035, v3036, v3037, 100000, 0, 99999, v3041, v3042, v3043, v3044, v3045, v3046, v3047, v3048, v3049, v3050, v3051, v3052, v3053, v3054, v3055, v3061, 1, v3056, v3058, v3059, v3060, v3062, v3063, v3064, v3065, v3066, v3067, v3068, v3069, v3070, v3071, v3072, v3073, 3, 399999, 99998, 4, 400000) :|: v3061 < 100000 && v3056 <= 99998
f_1482(v3027, v3028, v3029, v3030, v3031, v3032, v3033, v3034, v3035, v3036, v3037, 100000, 0, 99999, v3041, v3042, v3043, v3044, v3045, v3046, v3047, v3048, v3049, v3050, v3051, v3052, v3053, v3054, v3055, v3061, 1, v3056, v3058, v3059, v3060, v3062, v3063, v3064, v3065, v3066, v3067, v3068, v3069, v3070, v3071, v3072, v3073, 3, 399999, 99998, 4, 400000) -> f_1484(v3027, v3028, v3029, v3030, v3031, v3032, v3033, v3034, v3035, v3036, v3037, 100000, 0, 99999, v3041, v3042, v3043, v3044, v3045, v3046, v3047, v3048, v3049, v3050, v3051, v3052, v3053, v3054, v3055, v3061, 1, v3056, v3058, v3059, v3060, v3062, v3063, v3064, v3065, v3066, v3067, v3068, v3069, v3070, v3071, v3072, v3073, 3, 399999, 99998, 4, 400000) :|: 0 = 0
f_1484(v3027, v3028, v3029, v3030, v3031, v3032, v3033, v3034, v3035, v3036, v3037, 100000, 0, 99999, v3041, v3042, v3043, v3044, v3045, v3046, v3047, v3048, v3049, v3050, v3051, v3052, v3053, v3054, v3055, v3061, 1, v3056, v3058, v3059, v3060, v3062, v3063, v3064, v3065, v3066, v3067, v3068, v3069, v3070, v3071, v3072, v3073, 3, 399999, 99998, 4, 400000) -> f_1486(v3027, v3028, v3029, v3030, v3031, v3032, v3033, v3034, v3035, v3036, v3037, 100000, 0, 99999, v3041, v3042, v3043, v3044, v3045, v3046, v3047, v3048, v3049, v3050, v3051, v3052, v3053, v3054, v3055, v3061, 1, v3056, v3058, v3059, v3060, v3062, v3063, v3064, v3065, v3066, v3067, v3068, v3069, v3070, v3071, v3072, v3073, 3, 399999, 99998, 4, 400000) :|: TRUE
f_1486(v3027, v3028, v3029, v3030, v3031, v3032, v3033, v3034, v3035, v3036, v3037, 100000, 0, 99999, v3041, v3042, v3043, v3044, v3045, v3046, v3047, v3048, v3049, v3050, v3051, v3052, v3053, v3054, v3055, v3061, 1, v3056, v3058, v3059, v3060, v3062, v3063, v3064, v3065, v3066, v3067, v3068, v3069, v3070, v3071, v3072, v3073, 3, 399999, 99998, 4, 400000) -> f_1488(v3027, v3028, v3029, v3030, v3031, v3032, v3033, v3034, v3035, v3036, v3037, 100000, 0, 99999, v3041, v3042, v3043, v3044, v3045, v3046, v3047, v3048, v3049, v3050, v3051, v3052, v3053, v3054, v3055, v3061, 1, v3056, v3058, v3059, v3060, v3062, v3063, v3064, v3065, v3066, v3067, v3068, v3069, v3070, v3071, v3072, v3073, 3, 399999, 99998, 4, 400000) :|: 0 = 0
f_1488(v3027, v3028, v3029, v3030, v3031, v3032, v3033, v3034, v3035, v3036, v3037, 100000, 0, 99999, v3041, v3042, v3043, v3044, v3045, v3046, v3047, v3048, v3049, v3050, v3051, v3052, v3053, v3054, v3055, v3061, 1, v3056, v3058, v3059, v3060, v3062, v3063, v3064, v3065, v3066, v3067, v3068, v3069, v3070, v3071, v3072, v3073, 3, 399999, 99998, 4, 400000) -> f_1490(v3027, v3028, v3029, v3030, v3031, v3032, v3033, v3034, v3035, v3036, v3037, 100000, 0, 99999, v3041, v3042, v3043, v3044, v3045, v3046, v3047, v3048, v3049, v3050, v3051, v3052, v3053, v3054, v3055, v3061, 1, v3058, v3059, v3056, v3060, v3062, v3063, v3064, v3065, v3066, v3067, v3068, v3069, v3070, v3071, v3072, v3073, 3, 399999, 99998, 4, 400000) :|: 0 = 0
f_1490(v3027, v3028, v3029, v3030, v3031, v3032, v3033, v3034, v3035, v3036, v3037, 100000, 0, 99999, v3041, v3042, v3043, v3044, v3045, v3046, v3047, v3048, v3049, v3050, v3051, v3052, v3053, v3054, v3055, v3061, 1, v3058, v3059, v3056, v3060, v3062, v3063, v3064, v3065, v3066, v3067, v3068, v3069, v3070, v3071, v3072, v3073, 3, 399999, 99998, 4, 400000) -> f_1492(v3027, v3028, v3029, v3030, v3031, v3032, v3033, v3034, v3035, v3036, v3037, 100000, 0, 99999, v3041, v3042, v3043, v3044, v3045, v3046, v3047, v3048, v3049, v3050, v3051, v3052, v3053, v3054, v3055, v3061, 1, v3103, v3059, v3056, v3060, v3062, v3063, v3064, v3065, v3066, v3067, v3068, v3069, v3070, v3071, v3072, v3073, v3058, 3, 399999, 4, 99998, 400000, 5) :|: v3103 = v3033 + 4 * v3061 && 5 <= v3103
f_1492(v3027, v3028, v3029, v3030, v3031, v3032, v3033, v3034, v3035, v3036, v3037, 100000, 0, 99999, v3041, v3042, v3043, v3044, v3045, v3046, v3047, v3048, v3049, v3050, v3051, v3052, v3053, v3054, v3055, v3061, 1, v3103, v3059, v3056, v3060, v3062, v3063, v3064, v3065, v3066, v3067, v3068, v3069, v3070, v3071, v3072, v3073, v3058, 3, 399999, 4, 99998, 400000, 5) -> f_1494(v3027, v3028, v3029, v3030, v3031, v3032, v3033, v3034, v3035, v3036, v3037, 100000, 0, 99999, v3041, v3042, v3043, v3044, v3045, v3046, v3047, v3048, v3049, v3050, v3051, v3052, v3053, v3054, v3055, v3061, 1, v3103, v3104, v3056, v3060, v3062, v3063, v3064, v3065, v3066, v3067, v3068, v3069, v3070, v3071, v3072, v3073, v3058, v3059, 3, 399999, 4, 99998, 400000, 5) :|: TRUE
f_1494(v3027, v3028, v3029, v3030, v3031, v3032, v3033, v3034, v3035, v3036, v3037, 100000, 0, 99999, v3041, v3042, v3043, v3044, v3045, v3046, v3047, v3048, v3049, v3050, v3051, v3052, v3053, v3054, v3055, v3061, 1, v3103, v3104, v3056, v3060, v3062, v3063, v3064, v3065, v3066, v3067, v3068, v3069, v3070, v3071, v3072, v3073, v3058, v3059, 3, 399999, 4, 99998, 400000, 5) -> f_1496(v3027, v3028, v3029, v3030, v3031, v3032, v3033, v3034, v3035, v3036, v3037, 100000, 0, 99999, v3041, v3042, v3043, v3044, v3045, v3046, v3047, v3048, v3049, v3050, v3051, v3052, v3053, v3054, v3055, v3061, 1, v3103, v3104, v3056, v3060, v3062, v3063, v3064, v3065, v3066, v3067, v3068, v3069, v3070, v3071, v3072, v3073, v3058, v3059, 3, 399999, 4, 99998, 400000, 5) :|: 0 = 0
f_1496(v3027, v3028, v3029, v3030, v3031, v3032, v3033, v3034, v3035, v3036, v3037, 100000, 0, 99999, v3041, v3042, v3043, v3044, v3045, v3046, v3047, v3048, v3049, v3050, v3051, v3052, v3053, v3054, v3055, v3061, 1, v3103, v3104, v3056, v3060, v3062, v3063, v3064, v3065, v3066, v3067, v3068, v3069, v3070, v3071, v3072, v3073, v3058, v3059, 3, 399999, 4, 99998, 400000, 5) -> f_1498(v3027, v3028, v3029, v3030, v3031, v3032, v3033, v3034, v3035, v3036, v3037, 100000, 0, 99999, v3041, v3042, v3043, v3044, v3045, v3046, v3047, v3048, v3049, v3050, v3051, v3052, v3053, v3054, v3055, v3061, 1, v3103, v3104, v3060, v3056, v3062, v3063, v3064, v3065, v3066, v3067, v3068, v3069, v3070, v3071, v3072, v3073, v3058, v3059, 3, 399999, 4, 99998, 400000, 5) :|: 0 = 0
f_1498(v3027, v3028, v3029, v3030, v3031, v3032, v3033, v3034, v3035, v3036, v3037, 100000, 0, 99999, v3041, v3042, v3043, v3044, v3045, v3046, v3047, v3048, v3049, v3050, v3051, v3052, v3053, v3054, v3055, v3061, 1, v3103, v3104, v3060, v3056, v3062, v3063, v3064, v3065, v3066, v3067, v3068, v3069, v3070, v3071, v3072, v3073, v3058, v3059, 3, 399999, 4, 99998, 400000, 5) -> f_1500(v3027, v3028, v3029, v3030, v3031, v3032, v3033, v3034, v3035, v3036, v3037, 100000, 0, 99999, v3041, v3042, v3043, v3044, v3045, v3046, v3047, v3048, v3049, v3050, v3051, v3052, v3053, v3054, v3055, v3061, 1, v3103, v3104, v3106, v3056, v3062, v3063, v3064, v3065, v3066, v3067, v3068, v3069, v3070, v3071, v3072, v3073, v3058, v3059, v3060, 3, 399999, 4, 99998, 400000, 5) :|: v3106 = v3034 + 4 * v3061 && 5 <= v3106
f_1500(v3027, v3028, v3029, v3030, v3031, v3032, v3033, v3034, v3035, v3036, v3037, 100000, 0, 99999, v3041, v3042, v3043, v3044, v3045, v3046, v3047, v3048, v3049, v3050, v3051, v3052, v3053, v3054, v3055, v3061, 1, v3103, v3104, v3106, v3056, v3062, v3063, v3064, v3065, v3066, v3067, v3068, v3069, v3070, v3071, v3072, v3073, v3058, v3059, v3060, 3, 399999, 4, 99998, 400000, 5) -> f_1502(v3027, v3028, v3029, v3030, v3031, v3032, v3033, v3034, v3035, v3036, v3037, 100000, 0, 99999, v3041, v3042, v3043, v3044, v3045, v3046, v3047, v3048, v3049, v3050, v3051, v3052, v3053, v3054, v3055, v3061, 1, v3103, v3104, v3106, v3056, v3062, v3063, v3064, v3065, v3066, v3067, v3068, v3069, v3070, v3071, v3072, v3073, v3058, v3059, 3, 399999, 4, 99998, 400000, 5) :|: TRUE
f_1502(v3027, v3028, v3029, v3030, v3031, v3032, v3033, v3034, v3035, v3036, v3037, 100000, 0, 99999, v3041, v3042, v3043, v3044, v3045, v3046, v3047, v3048, v3049, v3050, v3051, v3052, v3053, v3054, v3055, v3061, 1, v3103, v3104, v3106, v3056, v3062, v3063, v3064, v3065, v3066, v3067, v3068, v3069, v3070, v3071, v3072, v3073, v3058, v3059, 3, 399999, 4, 99998, 400000, 5) -> f_1504(v3027, v3028, v3029, v3030, v3031, v3032, v3033, v3034, v3035, v3036, v3037, 100000, 0, 99999, v3041, v3042, v3043, v3044, v3045, v3046, v3047, v3048, v3049, v3050, v3051, v3052, v3053, v3054, v3055, v3061, 1, v3103, v3104, v3106, v3056, v3062, v3063, v3064, v3065, v3066, v3067, v3068, v3069, v3070, v3071, v3072, v3073, v3058, v3059, 3, 399999, 4, 99998, 400000, 5) :|: TRUE
f_1504(v3027, v3028, v3029, v3030, v3031, v3032, v3033, v3034, v3035, v3036, v3037, 100000, 0, 99999, v3041, v3042, v3043, v3044, v3045, v3046, v3047, v3048, v3049, v3050, v3051, v3052, v3053, v3054, v3055, v3061, 1, v3103, v3104, v3106, v3056, v3062, v3063, v3064, v3065, v3066, v3067, v3068, v3069, v3070, v3071, v3072, v3073, v3058, v3059, 3, 399999, 4, 99998, 400000, 5) -> f_1506(v3027, v3028, v3029, v3030, v3031, v3032, v3033, v3034, v3035, v3036, v3037, 100000, 0, 99999, v3041, v3042, v3043, v3044, v3045, v3046, v3047, v3048, v3049, v3050, v3051, v3052, v3053, v3054, v3055, v3061, 1, v3103, v3104, v3106, v3062, v3063, v3064, v3065, v3066, v3067, v3068, v3069, v3070, v3071, v3072, v3073, v3058, v3059, 3, 399999, 4, 400000, 5) :|: 0 = 0
f_1506(v3027, v3028, v3029, v3030, v3031, v3032, v3033, v3034, v3035, v3036, v3037, 100000, 0, 99999, v3041, v3042, v3043, v3044, v3045, v3046, v3047, v3048, v3049, v3050, v3051, v3052, v3053, v3054, v3055, v3061, 1, v3103, v3104, v3106, v3062, v3063, v3064, v3065, v3066, v3067, v3068, v3069, v3070, v3071, v3072, v3073, v3058, v3059, 3, 399999, 4, 400000, 5) -> f_1508(v3027, v3028, v3029, v3030, v3031, v3032, v3033, v3034, v3035, v3036, v3037, 100000, 0, 99999, v3041, v3042, v3043, v3044, v3045, v3046, v3047, v3048, v3049, v3050, v3051, v3052, v3053, v3054, v3055, v3061, 1, v3103, v3104, v3106, v3108, v3062, v3063, v3064, v3065, v3066, v3067, v3068, v3069, v3070, v3071, v3072, v3073, v3058, v3059, 3, 399999, 4, 400000, 5, 2) :|: v3108 = 1 + v3061 && 2 <= v3108 && v3108 <= 100000
f_1508(v3027, v3028, v3029, v3030, v3031, v3032, v3033, v3034, v3035, v3036, v3037, 100000, 0, 99999, v3041, v3042, v3043, v3044, v3045, v3046, v3047, v3048, v3049, v3050, v3051, v3052, v3053, v3054, v3055, v3061, 1, v3103, v3104, v3106, v3108, v3062, v3063, v3064, v3065, v3066, v3067, v3068, v3069, v3070, v3071, v3072, v3073, v3058, v3059, 3, 399999, 4, 400000, 5, 2) -> f_1510(v3027, v3028, v3029, v3030, v3031, v3032, v3033, v3034, v3035, v3036, v3037, 100000, 0, 99999, v3041, v3042, v3043, v3044, v3045, v3046, v3047, v3048, v3049, v3050, v3051, v3052, v3053, v3054, v3055, v3061, 1, v3103, v3104, v3106, v3108, v3062, v3063, v3064, v3065, v3066, v3067, v3068, v3069, v3070, v3071, v3072, v3073, v3058, v3059, 3, 399999, 4, 400000, 5, 2) :|: TRUE
f_1510(v3027, v3028, v3029, v3030, v3031, v3032, v3033, v3034, v3035, v3036, v3037, 100000, 0, 99999, v3041, v3042, v3043, v3044, v3045, v3046, v3047, v3048, v3049, v3050, v3051, v3052, v3053, v3054, v3055, v3061, 1, v3103, v3104, v3106, v3108, v3062, v3063, v3064, v3065, v3066, v3067, v3068, v3069, v3070, v3071, v3072, v3073, v3058, v3059, 3, 399999, 4, 400000, 5, 2) -> f_1512(v3027, v3028, v3029, v3030, v3031, v3032, v3033, v3034, v3035, v3036, v3037, 100000, 0, 99999, v3041, v3042, v3043, v3044, v3045, v3046, v3047, v3048, v3049, v3050, v3051, v3052, v3053, v3054, v3055, v3061, 1, v3103, v3104, v3106, v3108, v3062, v3063, v3064, v3065, v3066, v3067, v3068, v3069, v3070, v3071, v3072, v3073, v3058, v3059, 3, 399999, 4, 400000, 5, 2) :|: TRUE
f_1512(v3027, v3028, v3029, v3030, v3031, v3032, v3033, v3034, v3035, v3036, v3037, 100000, 0, 99999, v3041, v3042, v3043, v3044, v3045, v3046, v3047, v3048, v3049, v3050, v3051, v3052, v3053, v3054, v3055, v3061, 1, v3103, v3104, v3106, v3108, v3062, v3063, v3064, v3065, v3066, v3067, v3068, v3069, v3070, v3071, v3072, v3073, v3058, v3059, 3, 399999, 4, 400000, 5, 2) -> f_1480(v3027, v3028, v3029, v3030, v3031, v3032, v3033, v3034, v3035, v3036, v3037, 100000, 0, 99999, v3041, v3042, v3043, v3044, v3045, v3046, v3047, v3048, v3049, v3050, v3051, v3052, v3053, v3054, v3055, v3061, 1, v3103, v3104, v3106, v3108, v3062, v3063, v3064, v3065, v3066, v3067, v3068, v3069, v3070, v3071, v3072, v3073, 3, 399999, 4, 400000) :|: TRUE
f_1480(v3027, v3028, v3029, v3030, v3031, v3032, v3033, v3034, v3035, v3036, v3037, 100000, 0, 99999, v3041, v3042, v3043, v3044, v3045, v3046, v3047, v3048, v3049, v3050, v3051, v3052, v3053, v3054, v3055, v3056, 1, v3058, v3059, v3060, v3061, v3062, v3063, v3064, v3065, v3066, v3067, v3068, v3069, v3070, v3071, v3072, v3073, 3, 399999, 4, 400000) -> f_1481(v3027, v3028, v3029, v3030, v3031, v3032, v3033, v3034, v3035, v3036, v3037, 100000, 0, 99999, v3041, v3042, v3043, v3044, v3045, v3046, v3047, v3048, v3049, v3050, v3051, v3052, v3053, v3054, v3055, v3061, 1, v3056, v3058, v3059, v3060, v3062, v3063, v3064, v3065, v3066, v3067, v3068, v3069, v3070, v3071, v3072, v3073, 3, 399999, 4, 400000) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_1481(v3027:0, v3028:0, v3029:0, v3030:0, v3031:0, v3032:0, v3033:0, v3034:0, v3035:0, v3036:0, v3037:0, 100000, 0, 99999, v3041:0, v3042:0, v3043:0, v3044:0, v3045:0, v3046:0, v3047:0, v3048:0, v3049:0, v3050:0, v3051:0, v3052:0, v3053:0, v3054:0, v3055:0, v3061:0, 1, v3056:0, v3058:0, v3059:0, v3060:0, v3062:0, v3063:0, v3064:0, v3065:0, v3066:0, v3067:0, v3068:0, v3069:0, v3070:0, v3071:0, v3072:0, v3073:0, 3, 399999, 4, 400000) -> f_1481(v3027:0, v3028:0, v3029:0, v3030:0, v3031:0, v3032:0, v3033:0, v3034:0, v3035:0, v3036:0, v3037:0, 100000, 0, 99999, v3041:0, v3042:0, v3043:0, v3044:0, v3045:0, v3046:0, v3047:0, v3048:0, v3049:0, v3050:0, v3051:0, v3052:0, v3053:0, v3054:0, v3055:0, 1 + v3061:0, 1, v3061:0, v3033:0 + 4 * v3061:0, v3104:0, v3034:0 + 4 * v3061:0, v3062:0, v3063:0, v3064:0, v3065:0, v3066:0, v3067:0, v3068:0, v3069:0, v3070:0, v3071:0, v3072:0, v3073:0, 3, 399999, 4, 400000) :|: v3056:0 < 99999 && v3061:0 < 100000 && v3033:0 + 4 * v3061:0 > 4 && v3034:0 + 4 * v3061:0 > 4 && v3061:0 > 0
Filtered unneeded arguments:
   f_1481(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49, x50, x51) -> f_1481(x7, x8, x30, x32)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1481(v3033:0, v3034:0, v3061:0, v3056:0) -> f_1481(v3033:0, v3034:0, 1 + v3061:0, v3061:0) :|: v3061:0 < 100000 && v3056:0 < 99999 && v3033:0 + 4 * v3061:0 > 4 && v3061:0 > 0 && v3034:0 + 4 * v3061:0 > 4

----------------------------------------

(23)
Obligation:
Rules:
f_1481(v3033:0, v3034:0, v3061:0, v3056:0) -> f_1481(v3033:0, v3034:0, 1 + v3061:0, v3061:0) :|: v3061:0 < 100000 && v3056:0 < 99999 && v3033:0 + 4 * v3061:0 > 4 && v3061:0 > 0 && v3034:0 + 4 * v3061:0 > 4

----------------------------------------

(24) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(25)
Obligation:
Rules:
f_1481(v3033:0:0, v3034:0:0, v3061:0:0, v3056:0:0) -> f_1481(v3033:0:0, v3034:0:0, 1 + v3061:0:0, v3061:0:0) :|: v3061:0:0 > 0 && v3034:0:0 + 4 * v3061:0:0 > 4 && v3033:0:0 + 4 * v3061:0:0 > 4 && v3056:0:0 < 99999 && v3061:0:0 < 100000

----------------------------------------

(26) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_1481 ] = -1*f_1481_3

The following rules are decreasing:
f_1481(v3033:0:0, v3034:0:0, v3061:0:0, v3056:0:0) -> f_1481(v3033:0:0, v3034:0:0, 1 + v3061:0:0, v3061:0:0) :|: v3061:0:0 > 0 && v3034:0:0 + 4 * v3061:0:0 > 4 && v3033:0:0 + 4 * v3061:0:0 > 4 && v3056:0:0 < 99999 && v3061:0:0 < 100000

The following rules are bounded:
f_1481(v3033:0:0, v3034:0:0, v3061:0:0, v3056:0:0) -> f_1481(v3033:0:0, v3034:0:0, 1 + v3061:0:0, v3061:0:0) :|: v3061:0:0 > 0 && v3034:0:0 + 4 * v3061:0:0 > 4 && v3033:0:0 + 4 * v3061:0:0 > 4 && v3056:0:0 < 99999 && v3061:0:0 < 100000


----------------------------------------

(27)
YES

----------------------------------------

(28)
Obligation:
SCC
----------------------------------------

(29) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 18 rulesP rules:
f_1326(v2337, v2338, v2339, v2340, v2341, v2342, v2343, v2344, v2345, v2346, v2347, 100000, 0, 99999, v2351, v2352, v2353, v2354, v2355, v2356, v2357, v2358, v2359, v2360, v2361, v2362, v2368, 1, v2363, v2365, v2366, v2367, v2369, v2370, v2371, v2372, v2373, v2374, v2375, v2376, v2377, v2378, v2379, v2380, 3, 399999, 4, 400000) -> f_1327(v2337, v2338, v2339, v2340, v2341, v2342, v2343, v2344, v2345, v2346, v2347, 100000, 0, 99999, v2351, v2352, v2353, v2354, v2355, v2356, v2357, v2358, v2359, v2360, v2361, v2362, v2368, 1, v2363, v2365, v2366, v2367, v2369, v2370, v2371, v2372, v2373, v2374, v2375, v2376, v2377, v2378, v2379, v2380, 3, 399999, 99998, 4, 400000) :|: v2368 < 100000 && v2363 <= 99998
f_1327(v2337, v2338, v2339, v2340, v2341, v2342, v2343, v2344, v2345, v2346, v2347, 100000, 0, 99999, v2351, v2352, v2353, v2354, v2355, v2356, v2357, v2358, v2359, v2360, v2361, v2362, v2368, 1, v2363, v2365, v2366, v2367, v2369, v2370, v2371, v2372, v2373, v2374, v2375, v2376, v2377, v2378, v2379, v2380, 3, 399999, 99998, 4, 400000) -> f_1329(v2337, v2338, v2339, v2340, v2341, v2342, v2343, v2344, v2345, v2346, v2347, 100000, 0, 99999, v2351, v2352, v2353, v2354, v2355, v2356, v2357, v2358, v2359, v2360, v2361, v2362, v2368, 1, v2363, v2365, v2366, v2367, v2369, v2370, v2371, v2372, v2373, v2374, v2375, v2376, v2377, v2378, v2379, v2380, 3, 399999, 99998, 4, 400000) :|: 0 = 0
f_1329(v2337, v2338, v2339, v2340, v2341, v2342, v2343, v2344, v2345, v2346, v2347, 100000, 0, 99999, v2351, v2352, v2353, v2354, v2355, v2356, v2357, v2358, v2359, v2360, v2361, v2362, v2368, 1, v2363, v2365, v2366, v2367, v2369, v2370, v2371, v2372, v2373, v2374, v2375, v2376, v2377, v2378, v2379, v2380, 3, 399999, 99998, 4, 400000) -> f_1331(v2337, v2338, v2339, v2340, v2341, v2342, v2343, v2344, v2345, v2346, v2347, 100000, 0, 99999, v2351, v2352, v2353, v2354, v2355, v2356, v2357, v2358, v2359, v2360, v2361, v2362, v2368, 1, v2363, v2365, v2366, v2367, v2369, v2370, v2371, v2372, v2373, v2374, v2375, v2376, v2377, v2378, v2379, v2380, 3, 399999, 99998, 4, 400000) :|: TRUE
f_1331(v2337, v2338, v2339, v2340, v2341, v2342, v2343, v2344, v2345, v2346, v2347, 100000, 0, 99999, v2351, v2352, v2353, v2354, v2355, v2356, v2357, v2358, v2359, v2360, v2361, v2362, v2368, 1, v2363, v2365, v2366, v2367, v2369, v2370, v2371, v2372, v2373, v2374, v2375, v2376, v2377, v2378, v2379, v2380, 3, 399999, 99998, 4, 400000) -> f_1333(v2337, v2338, v2339, v2340, v2341, v2342, v2343, v2344, v2345, v2346, v2347, 100000, 0, 99999, v2351, v2352, v2353, v2354, v2355, v2356, v2357, v2358, v2359, v2360, v2361, v2362, v2368, 1, v2363, v2365, v2366, v2367, v2369, v2370, v2371, v2372, v2373, v2374, v2375, v2376, v2377, v2378, v2379, v2380, 3, 399999, 99998, 4, 400000) :|: 0 = 0
f_1333(v2337, v2338, v2339, v2340, v2341, v2342, v2343, v2344, v2345, v2346, v2347, 100000, 0, 99999, v2351, v2352, v2353, v2354, v2355, v2356, v2357, v2358, v2359, v2360, v2361, v2362, v2368, 1, v2363, v2365, v2366, v2367, v2369, v2370, v2371, v2372, v2373, v2374, v2375, v2376, v2377, v2378, v2379, v2380, 3, 399999, 99998, 4, 400000) -> f_1335(v2337, v2338, v2339, v2340, v2341, v2342, v2343, v2344, v2345, v2346, v2347, 100000, 0, 99999, v2351, v2352, v2353, v2354, v2355, v2356, v2357, v2358, v2359, v2360, v2361, v2362, v2368, 1, v2365, v2366, v2363, v2367, v2369, v2370, v2371, v2372, v2373, v2374, v2375, v2376, v2377, v2378, v2379, v2380, 3, 399999, 99998, 4, 400000) :|: 0 = 0
f_1335(v2337, v2338, v2339, v2340, v2341, v2342, v2343, v2344, v2345, v2346, v2347, 100000, 0, 99999, v2351, v2352, v2353, v2354, v2355, v2356, v2357, v2358, v2359, v2360, v2361, v2362, v2368, 1, v2365, v2366, v2363, v2367, v2369, v2370, v2371, v2372, v2373, v2374, v2375, v2376, v2377, v2378, v2379, v2380, 3, 399999, 99998, 4, 400000) -> f_1337(v2337, v2338, v2339, v2340, v2341, v2342, v2343, v2344, v2345, v2346, v2347, 100000, 0, 99999, v2351, v2352, v2353, v2354, v2355, v2356, v2357, v2358, v2359, v2360, v2361, v2362, v2368, 1, v2407, v2366, v2363, v2367, v2369, v2370, v2371, v2372, v2373, v2374, v2375, v2376, v2377, v2378, v2379, v2380, v2365, 3, 399999, 4, 99998, 400000, 5) :|: v2407 = v2342 + 4 * v2368 && 5 <= v2407
f_1337(v2337, v2338, v2339, v2340, v2341, v2342, v2343, v2344, v2345, v2346, v2347, 100000, 0, 99999, v2351, v2352, v2353, v2354, v2355, v2356, v2357, v2358, v2359, v2360, v2361, v2362, v2368, 1, v2407, v2366, v2363, v2367, v2369, v2370, v2371, v2372, v2373, v2374, v2375, v2376, v2377, v2378, v2379, v2380, v2365, 3, 399999, 4, 99998, 400000, 5) -> f_1339(v2337, v2338, v2339, v2340, v2341, v2342, v2343, v2344, v2345, v2346, v2347, 100000, 0, 99999, v2351, v2352, v2353, v2354, v2355, v2356, v2357, v2358, v2359, v2360, v2361, v2362, v2368, 1, v2407, v2408, v2363, v2367, v2369, v2370, v2371, v2372, v2373, v2374, v2375, v2376, v2377, v2378, v2379, v2380, v2365, v2366, 3, 399999, 4, 99998, 400000, 5) :|: TRUE
f_1339(v2337, v2338, v2339, v2340, v2341, v2342, v2343, v2344, v2345, v2346, v2347, 100000, 0, 99999, v2351, v2352, v2353, v2354, v2355, v2356, v2357, v2358, v2359, v2360, v2361, v2362, v2368, 1, v2407, v2408, v2363, v2367, v2369, v2370, v2371, v2372, v2373, v2374, v2375, v2376, v2377, v2378, v2379, v2380, v2365, v2366, 3, 399999, 4, 99998, 400000, 5) -> f_1341(v2337, v2338, v2339, v2340, v2341, v2342, v2343, v2344, v2345, v2346, v2347, 100000, 0, 99999, v2351, v2352, v2353, v2354, v2355, v2356, v2357, v2358, v2359, v2360, v2361, v2362, v2368, 1, v2407, v2408, v2363, v2367, v2369, v2370, v2371, v2372, v2373, v2374, v2375, v2376, v2377, v2378, v2379, v2380, v2365, v2366, 3, 399999, 4, 99998, 400000, 5) :|: 0 = 0
f_1341(v2337, v2338, v2339, v2340, v2341, v2342, v2343, v2344, v2345, v2346, v2347, 100000, 0, 99999, v2351, v2352, v2353, v2354, v2355, v2356, v2357, v2358, v2359, v2360, v2361, v2362, v2368, 1, v2407, v2408, v2363, v2367, v2369, v2370, v2371, v2372, v2373, v2374, v2375, v2376, v2377, v2378, v2379, v2380, v2365, v2366, 3, 399999, 4, 99998, 400000, 5) -> f_1343(v2337, v2338, v2339, v2340, v2341, v2342, v2343, v2344, v2345, v2346, v2347, 100000, 0, 99999, v2351, v2352, v2353, v2354, v2355, v2356, v2357, v2358, v2359, v2360, v2361, v2362, v2368, 1, v2407, v2408, v2367, v2363, v2369, v2370, v2371, v2372, v2373, v2374, v2375, v2376, v2377, v2378, v2379, v2380, v2365, v2366, 3, 399999, 4, 99998, 400000, 5) :|: 0 = 0
f_1343(v2337, v2338, v2339, v2340, v2341, v2342, v2343, v2344, v2345, v2346, v2347, 100000, 0, 99999, v2351, v2352, v2353, v2354, v2355, v2356, v2357, v2358, v2359, v2360, v2361, v2362, v2368, 1, v2407, v2408, v2367, v2363, v2369, v2370, v2371, v2372, v2373, v2374, v2375, v2376, v2377, v2378, v2379, v2380, v2365, v2366, 3, 399999, 4, 99998, 400000, 5) -> f_1345(v2337, v2338, v2339, v2340, v2341, v2342, v2343, v2344, v2345, v2346, v2347, 100000, 0, 99999, v2351, v2352, v2353, v2354, v2355, v2356, v2357, v2358, v2359, v2360, v2361, v2362, v2368, 1, v2407, v2408, v2410, v2363, v2369, v2370, v2371, v2372, v2373, v2374, v2375, v2376, v2377, v2378, v2379, v2380, v2365, v2366, v2367, 3, 399999, 4, 99998, 400000, 5) :|: v2410 = v2343 + 4 * v2368 && 5 <= v2410
f_1345(v2337, v2338, v2339, v2340, v2341, v2342, v2343, v2344, v2345, v2346, v2347, 100000, 0, 99999, v2351, v2352, v2353, v2354, v2355, v2356, v2357, v2358, v2359, v2360, v2361, v2362, v2368, 1, v2407, v2408, v2410, v2363, v2369, v2370, v2371, v2372, v2373, v2374, v2375, v2376, v2377, v2378, v2379, v2380, v2365, v2366, v2367, 3, 399999, 4, 99998, 400000, 5) -> f_1347(v2337, v2338, v2339, v2340, v2341, v2342, v2343, v2344, v2345, v2346, v2347, 100000, 0, 99999, v2351, v2352, v2353, v2354, v2355, v2356, v2357, v2358, v2359, v2360, v2361, v2362, v2368, 1, v2407, v2408, v2410, v2363, v2369, v2370, v2371, v2372, v2373, v2374, v2375, v2376, v2377, v2378, v2379, v2380, v2365, v2366, 3, 399999, 4, 99998, 400000, 5) :|: TRUE
f_1347(v2337, v2338, v2339, v2340, v2341, v2342, v2343, v2344, v2345, v2346, v2347, 100000, 0, 99999, v2351, v2352, v2353, v2354, v2355, v2356, v2357, v2358, v2359, v2360, v2361, v2362, v2368, 1, v2407, v2408, v2410, v2363, v2369, v2370, v2371, v2372, v2373, v2374, v2375, v2376, v2377, v2378, v2379, v2380, v2365, v2366, 3, 399999, 4, 99998, 400000, 5) -> f_1349(v2337, v2338, v2339, v2340, v2341, v2342, v2343, v2344, v2345, v2346, v2347, 100000, 0, 99999, v2351, v2352, v2353, v2354, v2355, v2356, v2357, v2358, v2359, v2360, v2361, v2362, v2368, 1, v2407, v2408, v2410, v2363, v2369, v2370, v2371, v2372, v2373, v2374, v2375, v2376, v2377, v2378, v2379, v2380, v2365, v2366, 3, 399999, 4, 99998, 400000, 5) :|: TRUE
f_1349(v2337, v2338, v2339, v2340, v2341, v2342, v2343, v2344, v2345, v2346, v2347, 100000, 0, 99999, v2351, v2352, v2353, v2354, v2355, v2356, v2357, v2358, v2359, v2360, v2361, v2362, v2368, 1, v2407, v2408, v2410, v2363, v2369, v2370, v2371, v2372, v2373, v2374, v2375, v2376, v2377, v2378, v2379, v2380, v2365, v2366, 3, 399999, 4, 99998, 400000, 5) -> f_1351(v2337, v2338, v2339, v2340, v2341, v2342, v2343, v2344, v2345, v2346, v2347, 100000, 0, 99999, v2351, v2352, v2353, v2354, v2355, v2356, v2357, v2358, v2359, v2360, v2361, v2362, v2368, 1, v2407, v2408, v2410, v2369, v2370, v2371, v2372, v2373, v2374, v2375, v2376, v2377, v2378, v2379, v2380, v2365, v2366, 3, 399999, 4, 400000, 5) :|: 0 = 0
f_1351(v2337, v2338, v2339, v2340, v2341, v2342, v2343, v2344, v2345, v2346, v2347, 100000, 0, 99999, v2351, v2352, v2353, v2354, v2355, v2356, v2357, v2358, v2359, v2360, v2361, v2362, v2368, 1, v2407, v2408, v2410, v2369, v2370, v2371, v2372, v2373, v2374, v2375, v2376, v2377, v2378, v2379, v2380, v2365, v2366, 3, 399999, 4, 400000, 5) -> f_1353(v2337, v2338, v2339, v2340, v2341, v2342, v2343, v2344, v2345, v2346, v2347, 100000, 0, 99999, v2351, v2352, v2353, v2354, v2355, v2356, v2357, v2358, v2359, v2360, v2361, v2362, v2368, 1, v2407, v2408, v2410, v2412, v2369, v2370, v2371, v2372, v2373, v2374, v2375, v2376, v2377, v2378, v2379, v2380, v2365, v2366, 3, 399999, 4, 400000, 5, 2) :|: v2412 = 1 + v2368 && 2 <= v2412 && v2412 <= 100000
f_1353(v2337, v2338, v2339, v2340, v2341, v2342, v2343, v2344, v2345, v2346, v2347, 100000, 0, 99999, v2351, v2352, v2353, v2354, v2355, v2356, v2357, v2358, v2359, v2360, v2361, v2362, v2368, 1, v2407, v2408, v2410, v2412, v2369, v2370, v2371, v2372, v2373, v2374, v2375, v2376, v2377, v2378, v2379, v2380, v2365, v2366, 3, 399999, 4, 400000, 5, 2) -> f_1355(v2337, v2338, v2339, v2340, v2341, v2342, v2343, v2344, v2345, v2346, v2347, 100000, 0, 99999, v2351, v2352, v2353, v2354, v2355, v2356, v2357, v2358, v2359, v2360, v2361, v2362, v2368, 1, v2407, v2408, v2410, v2412, v2369, v2370, v2371, v2372, v2373, v2374, v2375, v2376, v2377, v2378, v2379, v2380, v2365, v2366, 3, 399999, 4, 400000, 5, 2) :|: TRUE
f_1355(v2337, v2338, v2339, v2340, v2341, v2342, v2343, v2344, v2345, v2346, v2347, 100000, 0, 99999, v2351, v2352, v2353, v2354, v2355, v2356, v2357, v2358, v2359, v2360, v2361, v2362, v2368, 1, v2407, v2408, v2410, v2412, v2369, v2370, v2371, v2372, v2373, v2374, v2375, v2376, v2377, v2378, v2379, v2380, v2365, v2366, 3, 399999, 4, 400000, 5, 2) -> f_1357(v2337, v2338, v2339, v2340, v2341, v2342, v2343, v2344, v2345, v2346, v2347, 100000, 0, 99999, v2351, v2352, v2353, v2354, v2355, v2356, v2357, v2358, v2359, v2360, v2361, v2362, v2368, 1, v2407, v2408, v2410, v2412, v2369, v2370, v2371, v2372, v2373, v2374, v2375, v2376, v2377, v2378, v2379, v2380, v2365, v2366, 3, 399999, 4, 400000, 5, 2) :|: TRUE
f_1357(v2337, v2338, v2339, v2340, v2341, v2342, v2343, v2344, v2345, v2346, v2347, 100000, 0, 99999, v2351, v2352, v2353, v2354, v2355, v2356, v2357, v2358, v2359, v2360, v2361, v2362, v2368, 1, v2407, v2408, v2410, v2412, v2369, v2370, v2371, v2372, v2373, v2374, v2375, v2376, v2377, v2378, v2379, v2380, v2365, v2366, 3, 399999, 4, 400000, 5, 2) -> f_1325(v2337, v2338, v2339, v2340, v2341, v2342, v2343, v2344, v2345, v2346, v2347, 100000, 0, 99999, v2351, v2352, v2353, v2354, v2355, v2356, v2357, v2358, v2359, v2360, v2361, v2362, v2368, 1, v2407, v2408, v2410, v2412, v2369, v2370, v2371, v2372, v2373, v2374, v2375, v2376, v2377, v2378, v2379, v2380, 3, 399999, 4, 400000) :|: TRUE
f_1325(v2337, v2338, v2339, v2340, v2341, v2342, v2343, v2344, v2345, v2346, v2347, 100000, 0, 99999, v2351, v2352, v2353, v2354, v2355, v2356, v2357, v2358, v2359, v2360, v2361, v2362, v2363, 1, v2365, v2366, v2367, v2368, v2369, v2370, v2371, v2372, v2373, v2374, v2375, v2376, v2377, v2378, v2379, v2380, 3, 399999, 4, 400000) -> f_1326(v2337, v2338, v2339, v2340, v2341, v2342, v2343, v2344, v2345, v2346, v2347, 100000, 0, 99999, v2351, v2352, v2353, v2354, v2355, v2356, v2357, v2358, v2359, v2360, v2361, v2362, v2368, 1, v2363, v2365, v2366, v2367, v2369, v2370, v2371, v2372, v2373, v2374, v2375, v2376, v2377, v2378, v2379, v2380, 3, 399999, 4, 400000) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_1326(v2337:0, v2338:0, v2339:0, v2340:0, v2341:0, v2342:0, v2343:0, v2344:0, v2345:0, v2346:0, v2347:0, 100000, 0, 99999, v2351:0, v2352:0, v2353:0, v2354:0, v2355:0, v2356:0, v2357:0, v2358:0, v2359:0, v2360:0, v2361:0, v2362:0, v2368:0, 1, v2363:0, v2365:0, v2366:0, v2367:0, v2369:0, v2370:0, v2371:0, v2372:0, v2373:0, v2374:0, v2375:0, v2376:0, v2377:0, v2378:0, v2379:0, v2380:0, 3, 399999, 4, 400000) -> f_1326(v2337:0, v2338:0, v2339:0, v2340:0, v2341:0, v2342:0, v2343:0, v2344:0, v2345:0, v2346:0, v2347:0, 100000, 0, 99999, v2351:0, v2352:0, v2353:0, v2354:0, v2355:0, v2356:0, v2357:0, v2358:0, v2359:0, v2360:0, v2361:0, v2362:0, 1 + v2368:0, 1, v2368:0, v2342:0 + 4 * v2368:0, v2408:0, v2343:0 + 4 * v2368:0, v2369:0, v2370:0, v2371:0, v2372:0, v2373:0, v2374:0, v2375:0, v2376:0, v2377:0, v2378:0, v2379:0, v2380:0, 3, 399999, 4, 400000) :|: v2363:0 < 99999 && v2368:0 < 100000 && v2342:0 + 4 * v2368:0 > 4 && v2343:0 + 4 * v2368:0 > 4 && v2368:0 > 0
Filtered unneeded arguments:
   f_1326(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48) -> f_1326(x6, x7, x27, x29)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1326(v2342:0, v2343:0, v2368:0, v2363:0) -> f_1326(v2342:0, v2343:0, 1 + v2368:0, v2368:0) :|: v2368:0 < 100000 && v2363:0 < 99999 && v2342:0 + 4 * v2368:0 > 4 && v2368:0 > 0 && v2343:0 + 4 * v2368:0 > 4

----------------------------------------

(30)
Obligation:
Rules:
f_1326(v2342:0, v2343:0, v2368:0, v2363:0) -> f_1326(v2342:0, v2343:0, 1 + v2368:0, v2368:0) :|: v2368:0 < 100000 && v2363:0 < 99999 && v2342:0 + 4 * v2368:0 > 4 && v2368:0 > 0 && v2343:0 + 4 * v2368:0 > 4

----------------------------------------

(31) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(32)
Obligation:
Rules:
f_1326(v2342:0:0, v2343:0:0, v2368:0:0, v2363:0:0) -> f_1326(v2342:0:0, v2343:0:0, 1 + v2368:0:0, v2368:0:0) :|: v2368:0:0 > 0 && v2343:0:0 + 4 * v2368:0:0 > 4 && v2342:0:0 + 4 * v2368:0:0 > 4 && v2363:0:0 < 99999 && v2368:0:0 < 100000

----------------------------------------

(33) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_1326 ] = -1*f_1326_3

The following rules are decreasing:
f_1326(v2342:0:0, v2343:0:0, v2368:0:0, v2363:0:0) -> f_1326(v2342:0:0, v2343:0:0, 1 + v2368:0:0, v2368:0:0) :|: v2368:0:0 > 0 && v2343:0:0 + 4 * v2368:0:0 > 4 && v2342:0:0 + 4 * v2368:0:0 > 4 && v2363:0:0 < 99999 && v2368:0:0 < 100000

The following rules are bounded:
f_1326(v2342:0:0, v2343:0:0, v2368:0:0, v2363:0:0) -> f_1326(v2342:0:0, v2343:0:0, 1 + v2368:0:0, v2368:0:0) :|: v2368:0:0 > 0 && v2343:0:0 + 4 * v2368:0:0 > 4 && v2342:0:0 + 4 * v2368:0:0 > 4 && v2363:0:0 < 99999 && v2368:0:0 < 100000


----------------------------------------

(34)
YES

----------------------------------------

(35)
Obligation:
SCC
----------------------------------------

(36) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 18 rulesP rules:
f_1171(v1704, v1705, v1706, v1707, v1708, v1709, v1710, v1711, v1712, v1713, v1714, 100000, 0, 99999, v1718, v1719, v1720, v1721, v1722, v1723, v1724, v1725, v1726, v1732, 1, v1727, v1729, v1730, v1731, v1733, v1734, v1735, v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, v1744, 3, 399999, 4, 400000) -> f_1172(v1704, v1705, v1706, v1707, v1708, v1709, v1710, v1711, v1712, v1713, v1714, 100000, 0, 99999, v1718, v1719, v1720, v1721, v1722, v1723, v1724, v1725, v1726, v1732, 1, v1727, v1729, v1730, v1731, v1733, v1734, v1735, v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, v1744, 3, 399999, 99998, 4, 400000) :|: v1732 < 100000 && v1727 <= 99998
f_1172(v1704, v1705, v1706, v1707, v1708, v1709, v1710, v1711, v1712, v1713, v1714, 100000, 0, 99999, v1718, v1719, v1720, v1721, v1722, v1723, v1724, v1725, v1726, v1732, 1, v1727, v1729, v1730, v1731, v1733, v1734, v1735, v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, v1744, 3, 399999, 99998, 4, 400000) -> f_1174(v1704, v1705, v1706, v1707, v1708, v1709, v1710, v1711, v1712, v1713, v1714, 100000, 0, 99999, v1718, v1719, v1720, v1721, v1722, v1723, v1724, v1725, v1726, v1732, 1, v1727, v1729, v1730, v1731, v1733, v1734, v1735, v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, v1744, 3, 399999, 99998, 4, 400000) :|: 0 = 0
f_1174(v1704, v1705, v1706, v1707, v1708, v1709, v1710, v1711, v1712, v1713, v1714, 100000, 0, 99999, v1718, v1719, v1720, v1721, v1722, v1723, v1724, v1725, v1726, v1732, 1, v1727, v1729, v1730, v1731, v1733, v1734, v1735, v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, v1744, 3, 399999, 99998, 4, 400000) -> f_1176(v1704, v1705, v1706, v1707, v1708, v1709, v1710, v1711, v1712, v1713, v1714, 100000, 0, 99999, v1718, v1719, v1720, v1721, v1722, v1723, v1724, v1725, v1726, v1732, 1, v1727, v1729, v1730, v1731, v1733, v1734, v1735, v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, v1744, 3, 399999, 99998, 4, 400000) :|: TRUE
f_1176(v1704, v1705, v1706, v1707, v1708, v1709, v1710, v1711, v1712, v1713, v1714, 100000, 0, 99999, v1718, v1719, v1720, v1721, v1722, v1723, v1724, v1725, v1726, v1732, 1, v1727, v1729, v1730, v1731, v1733, v1734, v1735, v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, v1744, 3, 399999, 99998, 4, 400000) -> f_1178(v1704, v1705, v1706, v1707, v1708, v1709, v1710, v1711, v1712, v1713, v1714, 100000, 0, 99999, v1718, v1719, v1720, v1721, v1722, v1723, v1724, v1725, v1726, v1732, 1, v1727, v1729, v1730, v1731, v1733, v1734, v1735, v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, v1744, 3, 399999, 99998, 4, 400000) :|: 0 = 0
f_1178(v1704, v1705, v1706, v1707, v1708, v1709, v1710, v1711, v1712, v1713, v1714, 100000, 0, 99999, v1718, v1719, v1720, v1721, v1722, v1723, v1724, v1725, v1726, v1732, 1, v1727, v1729, v1730, v1731, v1733, v1734, v1735, v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, v1744, 3, 399999, 99998, 4, 400000) -> f_1180(v1704, v1705, v1706, v1707, v1708, v1709, v1710, v1711, v1712, v1713, v1714, 100000, 0, 99999, v1718, v1719, v1720, v1721, v1722, v1723, v1724, v1725, v1726, v1732, 1, v1729, v1730, v1727, v1731, v1733, v1734, v1735, v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, v1744, 3, 399999, 99998, 4, 400000) :|: 0 = 0
f_1180(v1704, v1705, v1706, v1707, v1708, v1709, v1710, v1711, v1712, v1713, v1714, 100000, 0, 99999, v1718, v1719, v1720, v1721, v1722, v1723, v1724, v1725, v1726, v1732, 1, v1729, v1730, v1727, v1731, v1733, v1734, v1735, v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, v1744, 3, 399999, 99998, 4, 400000) -> f_1182(v1704, v1705, v1706, v1707, v1708, v1709, v1710, v1711, v1712, v1713, v1714, 100000, 0, 99999, v1718, v1719, v1720, v1721, v1722, v1723, v1724, v1725, v1726, v1732, 1, v1768, v1730, v1727, v1731, v1733, v1734, v1735, v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, v1744, v1729, 3, 399999, 4, 99998, 400000, 5) :|: v1768 = v1708 + 4 * v1732 && 5 <= v1768
f_1182(v1704, v1705, v1706, v1707, v1708, v1709, v1710, v1711, v1712, v1713, v1714, 100000, 0, 99999, v1718, v1719, v1720, v1721, v1722, v1723, v1724, v1725, v1726, v1732, 1, v1768, v1730, v1727, v1731, v1733, v1734, v1735, v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, v1744, v1729, 3, 399999, 4, 99998, 400000, 5) -> f_1184(v1704, v1705, v1706, v1707, v1708, v1709, v1710, v1711, v1712, v1713, v1714, 100000, 0, 99999, v1718, v1719, v1720, v1721, v1722, v1723, v1724, v1725, v1726, v1732, 1, v1768, v1769, v1727, v1731, v1733, v1734, v1735, v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, v1744, v1729, v1730, 3, 399999, 4, 99998, 400000, 5) :|: TRUE
f_1184(v1704, v1705, v1706, v1707, v1708, v1709, v1710, v1711, v1712, v1713, v1714, 100000, 0, 99999, v1718, v1719, v1720, v1721, v1722, v1723, v1724, v1725, v1726, v1732, 1, v1768, v1769, v1727, v1731, v1733, v1734, v1735, v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, v1744, v1729, v1730, 3, 399999, 4, 99998, 400000, 5) -> f_1186(v1704, v1705, v1706, v1707, v1708, v1709, v1710, v1711, v1712, v1713, v1714, 100000, 0, 99999, v1718, v1719, v1720, v1721, v1722, v1723, v1724, v1725, v1726, v1732, 1, v1768, v1769, v1727, v1731, v1733, v1734, v1735, v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, v1744, v1729, v1730, 3, 399999, 4, 99998, 400000, 5) :|: 0 = 0
f_1186(v1704, v1705, v1706, v1707, v1708, v1709, v1710, v1711, v1712, v1713, v1714, 100000, 0, 99999, v1718, v1719, v1720, v1721, v1722, v1723, v1724, v1725, v1726, v1732, 1, v1768, v1769, v1727, v1731, v1733, v1734, v1735, v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, v1744, v1729, v1730, 3, 399999, 4, 99998, 400000, 5) -> f_1188(v1704, v1705, v1706, v1707, v1708, v1709, v1710, v1711, v1712, v1713, v1714, 100000, 0, 99999, v1718, v1719, v1720, v1721, v1722, v1723, v1724, v1725, v1726, v1732, 1, v1768, v1769, v1731, v1727, v1733, v1734, v1735, v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, v1744, v1729, v1730, 3, 399999, 4, 99998, 400000, 5) :|: 0 = 0
f_1188(v1704, v1705, v1706, v1707, v1708, v1709, v1710, v1711, v1712, v1713, v1714, 100000, 0, 99999, v1718, v1719, v1720, v1721, v1722, v1723, v1724, v1725, v1726, v1732, 1, v1768, v1769, v1731, v1727, v1733, v1734, v1735, v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, v1744, v1729, v1730, 3, 399999, 4, 99998, 400000, 5) -> f_1190(v1704, v1705, v1706, v1707, v1708, v1709, v1710, v1711, v1712, v1713, v1714, 100000, 0, 99999, v1718, v1719, v1720, v1721, v1722, v1723, v1724, v1725, v1726, v1732, 1, v1768, v1769, v1771, v1727, v1733, v1734, v1735, v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, v1744, v1729, v1730, v1731, 3, 399999, 4, 99998, 400000, 5) :|: v1771 = v1709 + 4 * v1732 && 5 <= v1771
f_1190(v1704, v1705, v1706, v1707, v1708, v1709, v1710, v1711, v1712, v1713, v1714, 100000, 0, 99999, v1718, v1719, v1720, v1721, v1722, v1723, v1724, v1725, v1726, v1732, 1, v1768, v1769, v1771, v1727, v1733, v1734, v1735, v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, v1744, v1729, v1730, v1731, 3, 399999, 4, 99998, 400000, 5) -> f_1192(v1704, v1705, v1706, v1707, v1708, v1709, v1710, v1711, v1712, v1713, v1714, 100000, 0, 99999, v1718, v1719, v1720, v1721, v1722, v1723, v1724, v1725, v1726, v1732, 1, v1768, v1769, v1771, v1727, v1733, v1734, v1735, v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, v1744, v1729, v1730, 3, 399999, 4, 99998, 400000, 5) :|: TRUE
f_1192(v1704, v1705, v1706, v1707, v1708, v1709, v1710, v1711, v1712, v1713, v1714, 100000, 0, 99999, v1718, v1719, v1720, v1721, v1722, v1723, v1724, v1725, v1726, v1732, 1, v1768, v1769, v1771, v1727, v1733, v1734, v1735, v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, v1744, v1729, v1730, 3, 399999, 4, 99998, 400000, 5) -> f_1194(v1704, v1705, v1706, v1707, v1708, v1709, v1710, v1711, v1712, v1713, v1714, 100000, 0, 99999, v1718, v1719, v1720, v1721, v1722, v1723, v1724, v1725, v1726, v1732, 1, v1768, v1769, v1771, v1727, v1733, v1734, v1735, v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, v1744, v1729, v1730, 3, 399999, 4, 99998, 400000, 5) :|: TRUE
f_1194(v1704, v1705, v1706, v1707, v1708, v1709, v1710, v1711, v1712, v1713, v1714, 100000, 0, 99999, v1718, v1719, v1720, v1721, v1722, v1723, v1724, v1725, v1726, v1732, 1, v1768, v1769, v1771, v1727, v1733, v1734, v1735, v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, v1744, v1729, v1730, 3, 399999, 4, 99998, 400000, 5) -> f_1196(v1704, v1705, v1706, v1707, v1708, v1709, v1710, v1711, v1712, v1713, v1714, 100000, 0, 99999, v1718, v1719, v1720, v1721, v1722, v1723, v1724, v1725, v1726, v1732, 1, v1768, v1769, v1771, v1733, v1734, v1735, v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, v1744, v1729, v1730, 3, 399999, 4, 400000, 5) :|: 0 = 0
f_1196(v1704, v1705, v1706, v1707, v1708, v1709, v1710, v1711, v1712, v1713, v1714, 100000, 0, 99999, v1718, v1719, v1720, v1721, v1722, v1723, v1724, v1725, v1726, v1732, 1, v1768, v1769, v1771, v1733, v1734, v1735, v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, v1744, v1729, v1730, 3, 399999, 4, 400000, 5) -> f_1198(v1704, v1705, v1706, v1707, v1708, v1709, v1710, v1711, v1712, v1713, v1714, 100000, 0, 99999, v1718, v1719, v1720, v1721, v1722, v1723, v1724, v1725, v1726, v1732, 1, v1768, v1769, v1771, v1773, v1733, v1734, v1735, v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, v1744, v1729, v1730, 3, 399999, 4, 400000, 5, 2) :|: v1773 = 1 + v1732 && 2 <= v1773 && v1773 <= 100000
f_1198(v1704, v1705, v1706, v1707, v1708, v1709, v1710, v1711, v1712, v1713, v1714, 100000, 0, 99999, v1718, v1719, v1720, v1721, v1722, v1723, v1724, v1725, v1726, v1732, 1, v1768, v1769, v1771, v1773, v1733, v1734, v1735, v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, v1744, v1729, v1730, 3, 399999, 4, 400000, 5, 2) -> f_1200(v1704, v1705, v1706, v1707, v1708, v1709, v1710, v1711, v1712, v1713, v1714, 100000, 0, 99999, v1718, v1719, v1720, v1721, v1722, v1723, v1724, v1725, v1726, v1732, 1, v1768, v1769, v1771, v1773, v1733, v1734, v1735, v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, v1744, v1729, v1730, 3, 399999, 4, 400000, 5, 2) :|: TRUE
f_1200(v1704, v1705, v1706, v1707, v1708, v1709, v1710, v1711, v1712, v1713, v1714, 100000, 0, 99999, v1718, v1719, v1720, v1721, v1722, v1723, v1724, v1725, v1726, v1732, 1, v1768, v1769, v1771, v1773, v1733, v1734, v1735, v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, v1744, v1729, v1730, 3, 399999, 4, 400000, 5, 2) -> f_1202(v1704, v1705, v1706, v1707, v1708, v1709, v1710, v1711, v1712, v1713, v1714, 100000, 0, 99999, v1718, v1719, v1720, v1721, v1722, v1723, v1724, v1725, v1726, v1732, 1, v1768, v1769, v1771, v1773, v1733, v1734, v1735, v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, v1744, v1729, v1730, 3, 399999, 4, 400000, 5, 2) :|: TRUE
f_1202(v1704, v1705, v1706, v1707, v1708, v1709, v1710, v1711, v1712, v1713, v1714, 100000, 0, 99999, v1718, v1719, v1720, v1721, v1722, v1723, v1724, v1725, v1726, v1732, 1, v1768, v1769, v1771, v1773, v1733, v1734, v1735, v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, v1744, v1729, v1730, 3, 399999, 4, 400000, 5, 2) -> f_1170(v1704, v1705, v1706, v1707, v1708, v1709, v1710, v1711, v1712, v1713, v1714, 100000, 0, 99999, v1718, v1719, v1720, v1721, v1722, v1723, v1724, v1725, v1726, v1732, 1, v1768, v1769, v1771, v1773, v1733, v1734, v1735, v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, v1744, 3, 399999, 4, 400000) :|: TRUE
f_1170(v1704, v1705, v1706, v1707, v1708, v1709, v1710, v1711, v1712, v1713, v1714, 100000, 0, 99999, v1718, v1719, v1720, v1721, v1722, v1723, v1724, v1725, v1726, v1727, 1, v1729, v1730, v1731, v1732, v1733, v1734, v1735, v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, v1744, 3, 399999, 4, 400000) -> f_1171(v1704, v1705, v1706, v1707, v1708, v1709, v1710, v1711, v1712, v1713, v1714, 100000, 0, 99999, v1718, v1719, v1720, v1721, v1722, v1723, v1724, v1725, v1726, v1732, 1, v1727, v1729, v1730, v1731, v1733, v1734, v1735, v1736, v1737, v1738, v1739, v1740, v1741, v1742, v1743, v1744, 3, 399999, 4, 400000) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_1171(v1704:0, v1705:0, v1706:0, v1707:0, v1708:0, v1709:0, v1710:0, v1711:0, v1712:0, v1713:0, v1714:0, 100000, 0, 99999, v1718:0, v1719:0, v1720:0, v1721:0, v1722:0, v1723:0, v1724:0, v1725:0, v1726:0, v1732:0, 1, v1727:0, v1729:0, v1730:0, v1731:0, v1733:0, v1734:0, v1735:0, v1736:0, v1737:0, v1738:0, v1739:0, v1740:0, v1741:0, v1742:0, v1743:0, v1744:0, 3, 399999, 4, 400000) -> f_1171(v1704:0, v1705:0, v1706:0, v1707:0, v1708:0, v1709:0, v1710:0, v1711:0, v1712:0, v1713:0, v1714:0, 100000, 0, 99999, v1718:0, v1719:0, v1720:0, v1721:0, v1722:0, v1723:0, v1724:0, v1725:0, v1726:0, 1 + v1732:0, 1, v1732:0, v1708:0 + 4 * v1732:0, v1769:0, v1709:0 + 4 * v1732:0, v1733:0, v1734:0, v1735:0, v1736:0, v1737:0, v1738:0, v1739:0, v1740:0, v1741:0, v1742:0, v1743:0, v1744:0, 3, 399999, 4, 400000) :|: v1727:0 < 99999 && v1732:0 < 100000 && v1708:0 + 4 * v1732:0 > 4 && v1709:0 + 4 * v1732:0 > 4 && v1732:0 > 0
Filtered unneeded arguments:
   f_1171(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45) -> f_1171(x5, x6, x24, x26)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1171(v1708:0, v1709:0, v1732:0, v1727:0) -> f_1171(v1708:0, v1709:0, 1 + v1732:0, v1732:0) :|: v1732:0 < 100000 && v1727:0 < 99999 && v1708:0 + 4 * v1732:0 > 4 && v1732:0 > 0 && v1709:0 + 4 * v1732:0 > 4

----------------------------------------

(37)
Obligation:
Rules:
f_1171(v1708:0, v1709:0, v1732:0, v1727:0) -> f_1171(v1708:0, v1709:0, 1 + v1732:0, v1732:0) :|: v1732:0 < 100000 && v1727:0 < 99999 && v1708:0 + 4 * v1732:0 > 4 && v1732:0 > 0 && v1709:0 + 4 * v1732:0 > 4

----------------------------------------

(38) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(39)
Obligation:
Rules:
f_1171(v1708:0:0, v1709:0:0, v1732:0:0, v1727:0:0) -> f_1171(v1708:0:0, v1709:0:0, 1 + v1732:0:0, v1732:0:0) :|: v1732:0:0 > 0 && v1709:0:0 + 4 * v1732:0:0 > 4 && v1708:0:0 + 4 * v1732:0:0 > 4 && v1727:0:0 < 99999 && v1732:0:0 < 100000

----------------------------------------

(40) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_1171 ] = -1*f_1171_3

The following rules are decreasing:
f_1171(v1708:0:0, v1709:0:0, v1732:0:0, v1727:0:0) -> f_1171(v1708:0:0, v1709:0:0, 1 + v1732:0:0, v1732:0:0) :|: v1732:0:0 > 0 && v1709:0:0 + 4 * v1732:0:0 > 4 && v1708:0:0 + 4 * v1732:0:0 > 4 && v1727:0:0 < 99999 && v1732:0:0 < 100000

The following rules are bounded:
f_1171(v1708:0:0, v1709:0:0, v1732:0:0, v1727:0:0) -> f_1171(v1708:0:0, v1709:0:0, 1 + v1732:0:0, v1732:0:0) :|: v1732:0:0 > 0 && v1709:0:0 + 4 * v1732:0:0 > 4 && v1708:0:0 + 4 * v1732:0:0 > 4 && v1727:0:0 < 99999 && v1732:0:0 < 100000


----------------------------------------

(41)
YES

----------------------------------------

(42)
Obligation:
SCC
----------------------------------------

(43) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 18 rulesP rules:
f_1016(v1128, v1129, v1130, v1131, v1132, v1133, v1134, v1135, v1136, v1137, v1138, 100000, 0, 99999, v1142, v1143, v1144, v1145, v1146, v1147, v1153, 1, v1148, v1150, v1151, v1152, v1154, v1155, v1156, v1157, v1158, v1159, v1160, v1161, v1162, v1163, v1164, v1165, 3, 399999, 4, 400000) -> f_1017(v1128, v1129, v1130, v1131, v1132, v1133, v1134, v1135, v1136, v1137, v1138, 100000, 0, 99999, v1142, v1143, v1144, v1145, v1146, v1147, v1153, 1, v1148, v1150, v1151, v1152, v1154, v1155, v1156, v1157, v1158, v1159, v1160, v1161, v1162, v1163, v1164, v1165, 3, 399999, 99998, 4, 400000) :|: v1153 < 100000 && v1148 <= 99998
f_1017(v1128, v1129, v1130, v1131, v1132, v1133, v1134, v1135, v1136, v1137, v1138, 100000, 0, 99999, v1142, v1143, v1144, v1145, v1146, v1147, v1153, 1, v1148, v1150, v1151, v1152, v1154, v1155, v1156, v1157, v1158, v1159, v1160, v1161, v1162, v1163, v1164, v1165, 3, 399999, 99998, 4, 400000) -> f_1019(v1128, v1129, v1130, v1131, v1132, v1133, v1134, v1135, v1136, v1137, v1138, 100000, 0, 99999, v1142, v1143, v1144, v1145, v1146, v1147, v1153, 1, v1148, v1150, v1151, v1152, v1154, v1155, v1156, v1157, v1158, v1159, v1160, v1161, v1162, v1163, v1164, v1165, 3, 399999, 99998, 4, 400000) :|: 0 = 0
f_1019(v1128, v1129, v1130, v1131, v1132, v1133, v1134, v1135, v1136, v1137, v1138, 100000, 0, 99999, v1142, v1143, v1144, v1145, v1146, v1147, v1153, 1, v1148, v1150, v1151, v1152, v1154, v1155, v1156, v1157, v1158, v1159, v1160, v1161, v1162, v1163, v1164, v1165, 3, 399999, 99998, 4, 400000) -> f_1021(v1128, v1129, v1130, v1131, v1132, v1133, v1134, v1135, v1136, v1137, v1138, 100000, 0, 99999, v1142, v1143, v1144, v1145, v1146, v1147, v1153, 1, v1148, v1150, v1151, v1152, v1154, v1155, v1156, v1157, v1158, v1159, v1160, v1161, v1162, v1163, v1164, v1165, 3, 399999, 99998, 4, 400000) :|: TRUE
f_1021(v1128, v1129, v1130, v1131, v1132, v1133, v1134, v1135, v1136, v1137, v1138, 100000, 0, 99999, v1142, v1143, v1144, v1145, v1146, v1147, v1153, 1, v1148, v1150, v1151, v1152, v1154, v1155, v1156, v1157, v1158, v1159, v1160, v1161, v1162, v1163, v1164, v1165, 3, 399999, 99998, 4, 400000) -> f_1023(v1128, v1129, v1130, v1131, v1132, v1133, v1134, v1135, v1136, v1137, v1138, 100000, 0, 99999, v1142, v1143, v1144, v1145, v1146, v1147, v1153, 1, v1148, v1150, v1151, v1152, v1154, v1155, v1156, v1157, v1158, v1159, v1160, v1161, v1162, v1163, v1164, v1165, 3, 399999, 99998, 4, 400000) :|: 0 = 0
f_1023(v1128, v1129, v1130, v1131, v1132, v1133, v1134, v1135, v1136, v1137, v1138, 100000, 0, 99999, v1142, v1143, v1144, v1145, v1146, v1147, v1153, 1, v1148, v1150, v1151, v1152, v1154, v1155, v1156, v1157, v1158, v1159, v1160, v1161, v1162, v1163, v1164, v1165, 3, 399999, 99998, 4, 400000) -> f_1025(v1128, v1129, v1130, v1131, v1132, v1133, v1134, v1135, v1136, v1137, v1138, 100000, 0, 99999, v1142, v1143, v1144, v1145, v1146, v1147, v1153, 1, v1150, v1151, v1148, v1152, v1154, v1155, v1156, v1157, v1158, v1159, v1160, v1161, v1162, v1163, v1164, v1165, 3, 399999, 99998, 4, 400000) :|: 0 = 0
f_1025(v1128, v1129, v1130, v1131, v1132, v1133, v1134, v1135, v1136, v1137, v1138, 100000, 0, 99999, v1142, v1143, v1144, v1145, v1146, v1147, v1153, 1, v1150, v1151, v1148, v1152, v1154, v1155, v1156, v1157, v1158, v1159, v1160, v1161, v1162, v1163, v1164, v1165, 3, 399999, 99998, 4, 400000) -> f_1027(v1128, v1129, v1130, v1131, v1132, v1133, v1134, v1135, v1136, v1137, v1138, 100000, 0, 99999, v1142, v1143, v1144, v1145, v1146, v1147, v1153, 1, v1186, v1151, v1148, v1152, v1154, v1155, v1156, v1157, v1158, v1159, v1160, v1161, v1162, v1163, v1164, v1165, v1150, 3, 399999, 4, 99998, 400000, 5) :|: v1186 = v1131 + 4 * v1153 && 5 <= v1186
f_1027(v1128, v1129, v1130, v1131, v1132, v1133, v1134, v1135, v1136, v1137, v1138, 100000, 0, 99999, v1142, v1143, v1144, v1145, v1146, v1147, v1153, 1, v1186, v1151, v1148, v1152, v1154, v1155, v1156, v1157, v1158, v1159, v1160, v1161, v1162, v1163, v1164, v1165, v1150, 3, 399999, 4, 99998, 400000, 5) -> f_1029(v1128, v1129, v1130, v1131, v1132, v1133, v1134, v1135, v1136, v1137, v1138, 100000, 0, 99999, v1142, v1143, v1144, v1145, v1146, v1147, v1153, 1, v1186, v1187, v1148, v1152, v1154, v1155, v1156, v1157, v1158, v1159, v1160, v1161, v1162, v1163, v1164, v1165, v1150, v1151, 3, 399999, 4, 99998, 400000, 5) :|: TRUE
f_1029(v1128, v1129, v1130, v1131, v1132, v1133, v1134, v1135, v1136, v1137, v1138, 100000, 0, 99999, v1142, v1143, v1144, v1145, v1146, v1147, v1153, 1, v1186, v1187, v1148, v1152, v1154, v1155, v1156, v1157, v1158, v1159, v1160, v1161, v1162, v1163, v1164, v1165, v1150, v1151, 3, 399999, 4, 99998, 400000, 5) -> f_1031(v1128, v1129, v1130, v1131, v1132, v1133, v1134, v1135, v1136, v1137, v1138, 100000, 0, 99999, v1142, v1143, v1144, v1145, v1146, v1147, v1153, 1, v1186, v1187, v1148, v1152, v1154, v1155, v1156, v1157, v1158, v1159, v1160, v1161, v1162, v1163, v1164, v1165, v1150, v1151, 3, 399999, 4, 99998, 400000, 5) :|: 0 = 0
f_1031(v1128, v1129, v1130, v1131, v1132, v1133, v1134, v1135, v1136, v1137, v1138, 100000, 0, 99999, v1142, v1143, v1144, v1145, v1146, v1147, v1153, 1, v1186, v1187, v1148, v1152, v1154, v1155, v1156, v1157, v1158, v1159, v1160, v1161, v1162, v1163, v1164, v1165, v1150, v1151, 3, 399999, 4, 99998, 400000, 5) -> f_1033(v1128, v1129, v1130, v1131, v1132, v1133, v1134, v1135, v1136, v1137, v1138, 100000, 0, 99999, v1142, v1143, v1144, v1145, v1146, v1147, v1153, 1, v1186, v1187, v1152, v1148, v1154, v1155, v1156, v1157, v1158, v1159, v1160, v1161, v1162, v1163, v1164, v1165, v1150, v1151, 3, 399999, 4, 99998, 400000, 5) :|: 0 = 0
f_1033(v1128, v1129, v1130, v1131, v1132, v1133, v1134, v1135, v1136, v1137, v1138, 100000, 0, 99999, v1142, v1143, v1144, v1145, v1146, v1147, v1153, 1, v1186, v1187, v1152, v1148, v1154, v1155, v1156, v1157, v1158, v1159, v1160, v1161, v1162, v1163, v1164, v1165, v1150, v1151, 3, 399999, 4, 99998, 400000, 5) -> f_1035(v1128, v1129, v1130, v1131, v1132, v1133, v1134, v1135, v1136, v1137, v1138, 100000, 0, 99999, v1142, v1143, v1144, v1145, v1146, v1147, v1153, 1, v1186, v1187, v1189, v1148, v1154, v1155, v1156, v1157, v1158, v1159, v1160, v1161, v1162, v1163, v1164, v1165, v1150, v1151, v1152, 3, 399999, 4, 99998, 400000, 5) :|: v1189 = v1132 + 4 * v1153 && 5 <= v1189
f_1035(v1128, v1129, v1130, v1131, v1132, v1133, v1134, v1135, v1136, v1137, v1138, 100000, 0, 99999, v1142, v1143, v1144, v1145, v1146, v1147, v1153, 1, v1186, v1187, v1189, v1148, v1154, v1155, v1156, v1157, v1158, v1159, v1160, v1161, v1162, v1163, v1164, v1165, v1150, v1151, v1152, 3, 399999, 4, 99998, 400000, 5) -> f_1037(v1128, v1129, v1130, v1131, v1132, v1133, v1134, v1135, v1136, v1137, v1138, 100000, 0, 99999, v1142, v1143, v1144, v1145, v1146, v1147, v1153, 1, v1186, v1187, v1189, v1148, v1154, v1155, v1156, v1157, v1158, v1159, v1160, v1161, v1162, v1163, v1164, v1165, v1150, v1151, 3, 399999, 4, 99998, 400000, 5) :|: TRUE
f_1037(v1128, v1129, v1130, v1131, v1132, v1133, v1134, v1135, v1136, v1137, v1138, 100000, 0, 99999, v1142, v1143, v1144, v1145, v1146, v1147, v1153, 1, v1186, v1187, v1189, v1148, v1154, v1155, v1156, v1157, v1158, v1159, v1160, v1161, v1162, v1163, v1164, v1165, v1150, v1151, 3, 399999, 4, 99998, 400000, 5) -> f_1039(v1128, v1129, v1130, v1131, v1132, v1133, v1134, v1135, v1136, v1137, v1138, 100000, 0, 99999, v1142, v1143, v1144, v1145, v1146, v1147, v1153, 1, v1186, v1187, v1189, v1148, v1154, v1155, v1156, v1157, v1158, v1159, v1160, v1161, v1162, v1163, v1164, v1165, v1150, v1151, 3, 399999, 4, 99998, 400000, 5) :|: TRUE
f_1039(v1128, v1129, v1130, v1131, v1132, v1133, v1134, v1135, v1136, v1137, v1138, 100000, 0, 99999, v1142, v1143, v1144, v1145, v1146, v1147, v1153, 1, v1186, v1187, v1189, v1148, v1154, v1155, v1156, v1157, v1158, v1159, v1160, v1161, v1162, v1163, v1164, v1165, v1150, v1151, 3, 399999, 4, 99998, 400000, 5) -> f_1041(v1128, v1129, v1130, v1131, v1132, v1133, v1134, v1135, v1136, v1137, v1138, 100000, 0, 99999, v1142, v1143, v1144, v1145, v1146, v1147, v1153, 1, v1186, v1187, v1189, v1154, v1155, v1156, v1157, v1158, v1159, v1160, v1161, v1162, v1163, v1164, v1165, v1150, v1151, 3, 399999, 4, 400000, 5) :|: 0 = 0
f_1041(v1128, v1129, v1130, v1131, v1132, v1133, v1134, v1135, v1136, v1137, v1138, 100000, 0, 99999, v1142, v1143, v1144, v1145, v1146, v1147, v1153, 1, v1186, v1187, v1189, v1154, v1155, v1156, v1157, v1158, v1159, v1160, v1161, v1162, v1163, v1164, v1165, v1150, v1151, 3, 399999, 4, 400000, 5) -> f_1043(v1128, v1129, v1130, v1131, v1132, v1133, v1134, v1135, v1136, v1137, v1138, 100000, 0, 99999, v1142, v1143, v1144, v1145, v1146, v1147, v1153, 1, v1186, v1187, v1189, v1191, v1154, v1155, v1156, v1157, v1158, v1159, v1160, v1161, v1162, v1163, v1164, v1165, v1150, v1151, 3, 399999, 4, 400000, 5, 2) :|: v1191 = 1 + v1153 && 2 <= v1191 && v1191 <= 100000
f_1043(v1128, v1129, v1130, v1131, v1132, v1133, v1134, v1135, v1136, v1137, v1138, 100000, 0, 99999, v1142, v1143, v1144, v1145, v1146, v1147, v1153, 1, v1186, v1187, v1189, v1191, v1154, v1155, v1156, v1157, v1158, v1159, v1160, v1161, v1162, v1163, v1164, v1165, v1150, v1151, 3, 399999, 4, 400000, 5, 2) -> f_1045(v1128, v1129, v1130, v1131, v1132, v1133, v1134, v1135, v1136, v1137, v1138, 100000, 0, 99999, v1142, v1143, v1144, v1145, v1146, v1147, v1153, 1, v1186, v1187, v1189, v1191, v1154, v1155, v1156, v1157, v1158, v1159, v1160, v1161, v1162, v1163, v1164, v1165, v1150, v1151, 3, 399999, 4, 400000, 5, 2) :|: TRUE
f_1045(v1128, v1129, v1130, v1131, v1132, v1133, v1134, v1135, v1136, v1137, v1138, 100000, 0, 99999, v1142, v1143, v1144, v1145, v1146, v1147, v1153, 1, v1186, v1187, v1189, v1191, v1154, v1155, v1156, v1157, v1158, v1159, v1160, v1161, v1162, v1163, v1164, v1165, v1150, v1151, 3, 399999, 4, 400000, 5, 2) -> f_1047(v1128, v1129, v1130, v1131, v1132, v1133, v1134, v1135, v1136, v1137, v1138, 100000, 0, 99999, v1142, v1143, v1144, v1145, v1146, v1147, v1153, 1, v1186, v1187, v1189, v1191, v1154, v1155, v1156, v1157, v1158, v1159, v1160, v1161, v1162, v1163, v1164, v1165, v1150, v1151, 3, 399999, 4, 400000, 5, 2) :|: TRUE
f_1047(v1128, v1129, v1130, v1131, v1132, v1133, v1134, v1135, v1136, v1137, v1138, 100000, 0, 99999, v1142, v1143, v1144, v1145, v1146, v1147, v1153, 1, v1186, v1187, v1189, v1191, v1154, v1155, v1156, v1157, v1158, v1159, v1160, v1161, v1162, v1163, v1164, v1165, v1150, v1151, 3, 399999, 4, 400000, 5, 2) -> f_1015(v1128, v1129, v1130, v1131, v1132, v1133, v1134, v1135, v1136, v1137, v1138, 100000, 0, 99999, v1142, v1143, v1144, v1145, v1146, v1147, v1153, 1, v1186, v1187, v1189, v1191, v1154, v1155, v1156, v1157, v1158, v1159, v1160, v1161, v1162, v1163, v1164, v1165, 3, 399999, 4, 400000) :|: TRUE
f_1015(v1128, v1129, v1130, v1131, v1132, v1133, v1134, v1135, v1136, v1137, v1138, 100000, 0, 99999, v1142, v1143, v1144, v1145, v1146, v1147, v1148, 1, v1150, v1151, v1152, v1153, v1154, v1155, v1156, v1157, v1158, v1159, v1160, v1161, v1162, v1163, v1164, v1165, 3, 399999, 4, 400000) -> f_1016(v1128, v1129, v1130, v1131, v1132, v1133, v1134, v1135, v1136, v1137, v1138, 100000, 0, 99999, v1142, v1143, v1144, v1145, v1146, v1147, v1153, 1, v1148, v1150, v1151, v1152, v1154, v1155, v1156, v1157, v1158, v1159, v1160, v1161, v1162, v1163, v1164, v1165, 3, 399999, 4, 400000) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_1016(v1128:0, v1129:0, v1130:0, v1131:0, v1132:0, v1133:0, v1134:0, v1135:0, v1136:0, v1137:0, v1138:0, 100000, 0, 99999, v1142:0, v1143:0, v1144:0, v1145:0, v1146:0, v1147:0, v1153:0, 1, v1148:0, v1150:0, v1151:0, v1152:0, v1154:0, v1155:0, v1156:0, v1157:0, v1158:0, v1159:0, v1160:0, v1161:0, v1162:0, v1163:0, v1164:0, v1165:0, 3, 399999, 4, 400000) -> f_1016(v1128:0, v1129:0, v1130:0, v1131:0, v1132:0, v1133:0, v1134:0, v1135:0, v1136:0, v1137:0, v1138:0, 100000, 0, 99999, v1142:0, v1143:0, v1144:0, v1145:0, v1146:0, v1147:0, 1 + v1153:0, 1, v1153:0, v1131:0 + 4 * v1153:0, v1187:0, v1132:0 + 4 * v1153:0, v1154:0, v1155:0, v1156:0, v1157:0, v1158:0, v1159:0, v1160:0, v1161:0, v1162:0, v1163:0, v1164:0, v1165:0, 3, 399999, 4, 400000) :|: v1148:0 < 99999 && v1153:0 < 100000 && v1131:0 + 4 * v1153:0 > 4 && v1132:0 + 4 * v1153:0 > 4 && v1153:0 > 0
Filtered unneeded arguments:
   f_1016(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42) -> f_1016(x4, x5, x21, x23)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1016(v1131:0, v1132:0, v1153:0, v1148:0) -> f_1016(v1131:0, v1132:0, 1 + v1153:0, v1153:0) :|: v1153:0 < 100000 && v1148:0 < 99999 && v1131:0 + 4 * v1153:0 > 4 && v1153:0 > 0 && v1132:0 + 4 * v1153:0 > 4

----------------------------------------

(44)
Obligation:
Rules:
f_1016(v1131:0, v1132:0, v1153:0, v1148:0) -> f_1016(v1131:0, v1132:0, 1 + v1153:0, v1153:0) :|: v1153:0 < 100000 && v1148:0 < 99999 && v1131:0 + 4 * v1153:0 > 4 && v1153:0 > 0 && v1132:0 + 4 * v1153:0 > 4

----------------------------------------

(45) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(46)
Obligation:
Rules:
f_1016(v1131:0:0, v1132:0:0, v1153:0:0, v1148:0:0) -> f_1016(v1131:0:0, v1132:0:0, 1 + v1153:0:0, v1153:0:0) :|: v1153:0:0 > 0 && v1132:0:0 + 4 * v1153:0:0 > 4 && v1131:0:0 + 4 * v1153:0:0 > 4 && v1148:0:0 < 99999 && v1153:0:0 < 100000

----------------------------------------

(47) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_1016 ] = -1*f_1016_3

The following rules are decreasing:
f_1016(v1131:0:0, v1132:0:0, v1153:0:0, v1148:0:0) -> f_1016(v1131:0:0, v1132:0:0, 1 + v1153:0:0, v1153:0:0) :|: v1153:0:0 > 0 && v1132:0:0 + 4 * v1153:0:0 > 4 && v1131:0:0 + 4 * v1153:0:0 > 4 && v1148:0:0 < 99999 && v1153:0:0 < 100000

The following rules are bounded:
f_1016(v1131:0:0, v1132:0:0, v1153:0:0, v1148:0:0) -> f_1016(v1131:0:0, v1132:0:0, 1 + v1153:0:0, v1153:0:0) :|: v1153:0:0 > 0 && v1132:0:0 + 4 * v1153:0:0 > 4 && v1131:0:0 + 4 * v1153:0:0 > 4 && v1148:0:0 < 99999 && v1153:0:0 < 100000


----------------------------------------

(48)
YES

----------------------------------------

(49)
Obligation:
SCC
----------------------------------------

(50) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 18 rulesP rules:
f_861(v609, v610, v611, v612, v613, v614, v615, v616, v617, v618, v619, 100000, 0, 99999, v623, v624, v625, v631, 1, v626, v628, v629, v630, v632, v633, v634, v635, v636, v637, v638, v639, v640, v641, v642, v643, 3, 399999, 4, 400000) -> f_862(v609, v610, v611, v612, v613, v614, v615, v616, v617, v618, v619, 100000, 0, 99999, v623, v624, v625, v631, 1, v626, v628, v629, v630, v632, v633, v634, v635, v636, v637, v638, v639, v640, v641, v642, v643, 3, 399999, 99998, 4, 400000) :|: v631 < 100000 && v626 <= 99998
f_862(v609, v610, v611, v612, v613, v614, v615, v616, v617, v618, v619, 100000, 0, 99999, v623, v624, v625, v631, 1, v626, v628, v629, v630, v632, v633, v634, v635, v636, v637, v638, v639, v640, v641, v642, v643, 3, 399999, 99998, 4, 400000) -> f_864(v609, v610, v611, v612, v613, v614, v615, v616, v617, v618, v619, 100000, 0, 99999, v623, v624, v625, v631, 1, v626, v628, v629, v630, v632, v633, v634, v635, v636, v637, v638, v639, v640, v641, v642, v643, 3, 399999, 99998, 4, 400000) :|: 0 = 0
f_864(v609, v610, v611, v612, v613, v614, v615, v616, v617, v618, v619, 100000, 0, 99999, v623, v624, v625, v631, 1, v626, v628, v629, v630, v632, v633, v634, v635, v636, v637, v638, v639, v640, v641, v642, v643, 3, 399999, 99998, 4, 400000) -> f_866(v609, v610, v611, v612, v613, v614, v615, v616, v617, v618, v619, 100000, 0, 99999, v623, v624, v625, v631, 1, v626, v628, v629, v630, v632, v633, v634, v635, v636, v637, v638, v639, v640, v641, v642, v643, 3, 399999, 99998, 4, 400000) :|: TRUE
f_866(v609, v610, v611, v612, v613, v614, v615, v616, v617, v618, v619, 100000, 0, 99999, v623, v624, v625, v631, 1, v626, v628, v629, v630, v632, v633, v634, v635, v636, v637, v638, v639, v640, v641, v642, v643, 3, 399999, 99998, 4, 400000) -> f_868(v609, v610, v611, v612, v613, v614, v615, v616, v617, v618, v619, 100000, 0, 99999, v623, v624, v625, v631, 1, v626, v628, v629, v630, v632, v633, v634, v635, v636, v637, v638, v639, v640, v641, v642, v643, 3, 399999, 99998, 4, 400000) :|: 0 = 0
f_868(v609, v610, v611, v612, v613, v614, v615, v616, v617, v618, v619, 100000, 0, 99999, v623, v624, v625, v631, 1, v626, v628, v629, v630, v632, v633, v634, v635, v636, v637, v638, v639, v640, v641, v642, v643, 3, 399999, 99998, 4, 400000) -> f_870(v609, v610, v611, v612, v613, v614, v615, v616, v617, v618, v619, 100000, 0, 99999, v623, v624, v625, v631, 1, v628, v629, v626, v630, v632, v633, v634, v635, v636, v637, v638, v639, v640, v641, v642, v643, 3, 399999, 99998, 4, 400000) :|: 0 = 0
f_870(v609, v610, v611, v612, v613, v614, v615, v616, v617, v618, v619, 100000, 0, 99999, v623, v624, v625, v631, 1, v628, v629, v626, v630, v632, v633, v634, v635, v636, v637, v638, v639, v640, v641, v642, v643, 3, 399999, 99998, 4, 400000) -> f_872(v609, v610, v611, v612, v613, v614, v615, v616, v617, v618, v619, 100000, 0, 99999, v623, v624, v625, v631, 1, v661, v629, v626, v630, v632, v633, v634, v635, v636, v637, v638, v639, v640, v641, v642, v643, v628, 3, 399999, 4, 99998, 400000, 5) :|: v661 = v611 + 4 * v631 && 5 <= v661
f_872(v609, v610, v611, v612, v613, v614, v615, v616, v617, v618, v619, 100000, 0, 99999, v623, v624, v625, v631, 1, v661, v629, v626, v630, v632, v633, v634, v635, v636, v637, v638, v639, v640, v641, v642, v643, v628, 3, 399999, 4, 99998, 400000, 5) -> f_874(v609, v610, v611, v612, v613, v614, v615, v616, v617, v618, v619, 100000, 0, 99999, v623, v624, v625, v631, 1, v661, v662, v626, v630, v632, v633, v634, v635, v636, v637, v638, v639, v640, v641, v642, v643, v628, v629, 3, 399999, 4, 99998, 400000, 5) :|: TRUE
f_874(v609, v610, v611, v612, v613, v614, v615, v616, v617, v618, v619, 100000, 0, 99999, v623, v624, v625, v631, 1, v661, v662, v626, v630, v632, v633, v634, v635, v636, v637, v638, v639, v640, v641, v642, v643, v628, v629, 3, 399999, 4, 99998, 400000, 5) -> f_876(v609, v610, v611, v612, v613, v614, v615, v616, v617, v618, v619, 100000, 0, 99999, v623, v624, v625, v631, 1, v661, v662, v626, v630, v632, v633, v634, v635, v636, v637, v638, v639, v640, v641, v642, v643, v628, v629, 3, 399999, 4, 99998, 400000, 5) :|: 0 = 0
f_876(v609, v610, v611, v612, v613, v614, v615, v616, v617, v618, v619, 100000, 0, 99999, v623, v624, v625, v631, 1, v661, v662, v626, v630, v632, v633, v634, v635, v636, v637, v638, v639, v640, v641, v642, v643, v628, v629, 3, 399999, 4, 99998, 400000, 5) -> f_878(v609, v610, v611, v612, v613, v614, v615, v616, v617, v618, v619, 100000, 0, 99999, v623, v624, v625, v631, 1, v661, v662, v630, v626, v632, v633, v634, v635, v636, v637, v638, v639, v640, v641, v642, v643, v628, v629, 3, 399999, 4, 99998, 400000, 5) :|: 0 = 0
f_878(v609, v610, v611, v612, v613, v614, v615, v616, v617, v618, v619, 100000, 0, 99999, v623, v624, v625, v631, 1, v661, v662, v630, v626, v632, v633, v634, v635, v636, v637, v638, v639, v640, v641, v642, v643, v628, v629, 3, 399999, 4, 99998, 400000, 5) -> f_880(v609, v610, v611, v612, v613, v614, v615, v616, v617, v618, v619, 100000, 0, 99999, v623, v624, v625, v631, 1, v661, v662, v664, v626, v632, v633, v634, v635, v636, v637, v638, v639, v640, v641, v642, v643, v628, v629, v630, 3, 399999, 4, 99998, 400000, 5) :|: v664 = v612 + 4 * v631 && 5 <= v664
f_880(v609, v610, v611, v612, v613, v614, v615, v616, v617, v618, v619, 100000, 0, 99999, v623, v624, v625, v631, 1, v661, v662, v664, v626, v632, v633, v634, v635, v636, v637, v638, v639, v640, v641, v642, v643, v628, v629, v630, 3, 399999, 4, 99998, 400000, 5) -> f_882(v609, v610, v611, v612, v613, v614, v615, v616, v617, v618, v619, 100000, 0, 99999, v623, v624, v625, v631, 1, v661, v662, v664, v626, v632, v633, v634, v635, v636, v637, v638, v639, v640, v641, v642, v643, v628, v629, 3, 399999, 4, 99998, 400000, 5) :|: TRUE
f_882(v609, v610, v611, v612, v613, v614, v615, v616, v617, v618, v619, 100000, 0, 99999, v623, v624, v625, v631, 1, v661, v662, v664, v626, v632, v633, v634, v635, v636, v637, v638, v639, v640, v641, v642, v643, v628, v629, 3, 399999, 4, 99998, 400000, 5) -> f_884(v609, v610, v611, v612, v613, v614, v615, v616, v617, v618, v619, 100000, 0, 99999, v623, v624, v625, v631, 1, v661, v662, v664, v626, v632, v633, v634, v635, v636, v637, v638, v639, v640, v641, v642, v643, v628, v629, 3, 399999, 4, 99998, 400000, 5) :|: TRUE
f_884(v609, v610, v611, v612, v613, v614, v615, v616, v617, v618, v619, 100000, 0, 99999, v623, v624, v625, v631, 1, v661, v662, v664, v626, v632, v633, v634, v635, v636, v637, v638, v639, v640, v641, v642, v643, v628, v629, 3, 399999, 4, 99998, 400000, 5) -> f_886(v609, v610, v611, v612, v613, v614, v615, v616, v617, v618, v619, 100000, 0, 99999, v623, v624, v625, v631, 1, v661, v662, v664, v632, v633, v634, v635, v636, v637, v638, v639, v640, v641, v642, v643, v628, v629, 3, 399999, 4, 400000, 5) :|: 0 = 0
f_886(v609, v610, v611, v612, v613, v614, v615, v616, v617, v618, v619, 100000, 0, 99999, v623, v624, v625, v631, 1, v661, v662, v664, v632, v633, v634, v635, v636, v637, v638, v639, v640, v641, v642, v643, v628, v629, 3, 399999, 4, 400000, 5) -> f_888(v609, v610, v611, v612, v613, v614, v615, v616, v617, v618, v619, 100000, 0, 99999, v623, v624, v625, v631, 1, v661, v662, v664, v666, v632, v633, v634, v635, v636, v637, v638, v639, v640, v641, v642, v643, v628, v629, 3, 399999, 4, 400000, 5, 2) :|: v666 = 1 + v631 && 2 <= v666 && v666 <= 100000
f_888(v609, v610, v611, v612, v613, v614, v615, v616, v617, v618, v619, 100000, 0, 99999, v623, v624, v625, v631, 1, v661, v662, v664, v666, v632, v633, v634, v635, v636, v637, v638, v639, v640, v641, v642, v643, v628, v629, 3, 399999, 4, 400000, 5, 2) -> f_890(v609, v610, v611, v612, v613, v614, v615, v616, v617, v618, v619, 100000, 0, 99999, v623, v624, v625, v631, 1, v661, v662, v664, v666, v632, v633, v634, v635, v636, v637, v638, v639, v640, v641, v642, v643, v628, v629, 3, 399999, 4, 400000, 5, 2) :|: TRUE
f_890(v609, v610, v611, v612, v613, v614, v615, v616, v617, v618, v619, 100000, 0, 99999, v623, v624, v625, v631, 1, v661, v662, v664, v666, v632, v633, v634, v635, v636, v637, v638, v639, v640, v641, v642, v643, v628, v629, 3, 399999, 4, 400000, 5, 2) -> f_892(v609, v610, v611, v612, v613, v614, v615, v616, v617, v618, v619, 100000, 0, 99999, v623, v624, v625, v631, 1, v661, v662, v664, v666, v632, v633, v634, v635, v636, v637, v638, v639, v640, v641, v642, v643, v628, v629, 3, 399999, 4, 400000, 5, 2) :|: TRUE
f_892(v609, v610, v611, v612, v613, v614, v615, v616, v617, v618, v619, 100000, 0, 99999, v623, v624, v625, v631, 1, v661, v662, v664, v666, v632, v633, v634, v635, v636, v637, v638, v639, v640, v641, v642, v643, v628, v629, 3, 399999, 4, 400000, 5, 2) -> f_860(v609, v610, v611, v612, v613, v614, v615, v616, v617, v618, v619, 100000, 0, 99999, v623, v624, v625, v631, 1, v661, v662, v664, v666, v632, v633, v634, v635, v636, v637, v638, v639, v640, v641, v642, v643, 3, 399999, 4, 400000) :|: TRUE
f_860(v609, v610, v611, v612, v613, v614, v615, v616, v617, v618, v619, 100000, 0, 99999, v623, v624, v625, v626, 1, v628, v629, v630, v631, v632, v633, v634, v635, v636, v637, v638, v639, v640, v641, v642, v643, 3, 399999, 4, 400000) -> f_861(v609, v610, v611, v612, v613, v614, v615, v616, v617, v618, v619, 100000, 0, 99999, v623, v624, v625, v631, 1, v626, v628, v629, v630, v632, v633, v634, v635, v636, v637, v638, v639, v640, v641, v642, v643, 3, 399999, 4, 400000) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_861(v609:0, v610:0, v611:0, v612:0, v613:0, v614:0, v615:0, v616:0, v617:0, v618:0, v619:0, 100000, 0, 99999, v623:0, v624:0, v625:0, v631:0, 1, v626:0, v628:0, v629:0, v630:0, v632:0, v633:0, v634:0, v635:0, v636:0, v637:0, v638:0, v639:0, v640:0, v641:0, v642:0, v643:0, 3, 399999, 4, 400000) -> f_861(v609:0, v610:0, v611:0, v612:0, v613:0, v614:0, v615:0, v616:0, v617:0, v618:0, v619:0, 100000, 0, 99999, v623:0, v624:0, v625:0, 1 + v631:0, 1, v631:0, v611:0 + 4 * v631:0, v662:0, v612:0 + 4 * v631:0, v632:0, v633:0, v634:0, v635:0, v636:0, v637:0, v638:0, v639:0, v640:0, v641:0, v642:0, v643:0, 3, 399999, 4, 400000) :|: v626:0 < 99999 && v631:0 < 100000 && v611:0 + 4 * v631:0 > 4 && v612:0 + 4 * v631:0 > 4 && v631:0 > 0
Filtered unneeded arguments:
   f_861(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39) -> f_861(x3, x4, x18, x20)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_861(v611:0, v612:0, v631:0, v626:0) -> f_861(v611:0, v612:0, 1 + v631:0, v631:0) :|: v631:0 < 100000 && v626:0 < 99999 && v611:0 + 4 * v631:0 > 4 && v631:0 > 0 && v612:0 + 4 * v631:0 > 4

----------------------------------------

(51)
Obligation:
Rules:
f_861(v611:0, v612:0, v631:0, v626:0) -> f_861(v611:0, v612:0, 1 + v631:0, v631:0) :|: v631:0 < 100000 && v626:0 < 99999 && v611:0 + 4 * v631:0 > 4 && v631:0 > 0 && v612:0 + 4 * v631:0 > 4

----------------------------------------

(52) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(53)
Obligation:
Rules:
f_861(v611:0:0, v612:0:0, v631:0:0, v626:0:0) -> f_861(v611:0:0, v612:0:0, 1 + v631:0:0, v631:0:0) :|: v631:0:0 > 0 && v612:0:0 + 4 * v631:0:0 > 4 && v611:0:0 + 4 * v631:0:0 > 4 && v626:0:0 < 99999 && v631:0:0 < 100000

----------------------------------------

(54) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_861 ] = -1*f_861_3

The following rules are decreasing:
f_861(v611:0:0, v612:0:0, v631:0:0, v626:0:0) -> f_861(v611:0:0, v612:0:0, 1 + v631:0:0, v631:0:0) :|: v631:0:0 > 0 && v612:0:0 + 4 * v631:0:0 > 4 && v611:0:0 + 4 * v631:0:0 > 4 && v626:0:0 < 99999 && v631:0:0 < 100000

The following rules are bounded:
f_861(v611:0:0, v612:0:0, v631:0:0, v626:0:0) -> f_861(v611:0:0, v612:0:0, 1 + v631:0:0, v631:0:0) :|: v631:0:0 > 0 && v612:0:0 + 4 * v631:0:0 > 4 && v611:0:0 + 4 * v631:0:0 > 4 && v626:0:0 < 99999 && v631:0:0 < 100000


----------------------------------------

(55)
YES

----------------------------------------

(56)
Obligation:
SCC
----------------------------------------

(57) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 18 rulesP rules:
f_706(v179, v180, v181, v182, v183, v184, v185, v186, v187, v188, v189, v195, 1, v190, v192, v193, v194, v196, v197, v198, v199, v200, v201, v202, v203, v204, v205, v206, 0, v208, 3, 399999, 99999, 100000, 4, 400000) -> f_707(v179, v180, v181, v182, v183, v184, v185, v186, v187, v188, v189, v195, 1, v190, v192, v193, v194, v196, v197, v198, v199, v200, v201, v202, v203, v204, v205, v206, 0, v208, 3, 399999, 99998, 99999, 4, 400000) :|: v195 < 100000 && v190 <= 99998
f_707(v179, v180, v181, v182, v183, v184, v185, v186, v187, v188, v189, v195, 1, v190, v192, v193, v194, v196, v197, v198, v199, v200, v201, v202, v203, v204, v205, v206, 0, v208, 3, 399999, 99998, 99999, 4, 400000) -> f_709(v179, v180, v181, v182, v183, v184, v185, v186, v187, v188, v189, v195, 1, v190, v192, v193, v194, v196, v197, v198, v199, v200, v201, v202, v203, v204, v205, v206, 0, v208, 3, 399999, 99998, 99999, 4, 400000) :|: 0 = 0
f_709(v179, v180, v181, v182, v183, v184, v185, v186, v187, v188, v189, v195, 1, v190, v192, v193, v194, v196, v197, v198, v199, v200, v201, v202, v203, v204, v205, v206, 0, v208, 3, 399999, 99998, 99999, 4, 400000) -> f_711(v179, v180, v181, v182, v183, v184, v185, v186, v187, v188, v189, v195, 1, v190, v192, v193, v194, v196, v197, v198, v199, v200, v201, v202, v203, v204, v205, v206, 0, v208, 3, 399999, 99998, 99999, 4, 400000) :|: TRUE
f_711(v179, v180, v181, v182, v183, v184, v185, v186, v187, v188, v189, v195, 1, v190, v192, v193, v194, v196, v197, v198, v199, v200, v201, v202, v203, v204, v205, v206, 0, v208, 3, 399999, 99998, 99999, 4, 400000) -> f_713(v179, v180, v181, v182, v183, v184, v185, v186, v187, v188, v189, v195, 1, v190, v192, v193, v194, v196, v197, v198, v199, v200, v201, v202, v203, v204, v205, v206, 0, v208, 3, 399999, 99998, 99999, 4, 400000) :|: 0 = 0
f_713(v179, v180, v181, v182, v183, v184, v185, v186, v187, v188, v189, v195, 1, v190, v192, v193, v194, v196, v197, v198, v199, v200, v201, v202, v203, v204, v205, v206, 0, v208, 3, 399999, 99998, 99999, 4, 400000) -> f_715(v179, v180, v181, v182, v183, v184, v185, v186, v187, v188, v189, v195, 1, v192, v193, v190, v194, v196, v197, v198, v199, v200, v201, v202, v203, v204, v205, v206, 0, v208, 3, 399999, 99998, 99999, 4, 400000) :|: 0 = 0
f_715(v179, v180, v181, v182, v183, v184, v185, v186, v187, v188, v189, v195, 1, v192, v193, v190, v194, v196, v197, v198, v199, v200, v201, v202, v203, v204, v205, v206, 0, v208, 3, 399999, 99998, 99999, 4, 400000) -> f_717(v179, v180, v181, v182, v183, v184, v185, v186, v187, v188, v189, v195, 1, v209, v193, v190, v194, v196, v197, v198, v199, v200, v201, v202, v203, v204, v205, v206, 0, v208, v192, 3, 399999, 4, 99998, 99999, 400000, 5) :|: v209 = v180 + 4 * v195 && 5 <= v209
f_717(v179, v180, v181, v182, v183, v184, v185, v186, v187, v188, v189, v195, 1, v209, v193, v190, v194, v196, v197, v198, v199, v200, v201, v202, v203, v204, v205, v206, 0, v208, v192, 3, 399999, 4, 99998, 99999, 400000, 5) -> f_719(v179, v180, v181, v182, v183, v184, v185, v186, v187, v188, v189, v195, 1, v209, v210, v190, v194, v196, v197, v198, v199, v200, v201, v202, v203, v204, v205, v206, 0, v208, v192, v193, 3, 399999, 4, 99998, 99999, 400000, 5) :|: TRUE
f_719(v179, v180, v181, v182, v183, v184, v185, v186, v187, v188, v189, v195, 1, v209, v210, v190, v194, v196, v197, v198, v199, v200, v201, v202, v203, v204, v205, v206, 0, v208, v192, v193, 3, 399999, 4, 99998, 99999, 400000, 5) -> f_721(v179, v180, v181, v182, v183, v184, v185, v186, v187, v188, v189, v195, 1, v209, v210, v190, v194, v196, v197, v198, v199, v200, v201, v202, v203, v204, v205, v206, 0, v208, v192, v193, 3, 399999, 4, 99998, 99999, 400000, 5) :|: 0 = 0
f_721(v179, v180, v181, v182, v183, v184, v185, v186, v187, v188, v189, v195, 1, v209, v210, v190, v194, v196, v197, v198, v199, v200, v201, v202, v203, v204, v205, v206, 0, v208, v192, v193, 3, 399999, 4, 99998, 99999, 400000, 5) -> f_723(v179, v180, v181, v182, v183, v184, v185, v186, v187, v188, v189, v195, 1, v209, v210, v194, v190, v196, v197, v198, v199, v200, v201, v202, v203, v204, v205, v206, 0, v208, v192, v193, 3, 399999, 4, 99998, 99999, 400000, 5) :|: 0 = 0
f_723(v179, v180, v181, v182, v183, v184, v185, v186, v187, v188, v189, v195, 1, v209, v210, v194, v190, v196, v197, v198, v199, v200, v201, v202, v203, v204, v205, v206, 0, v208, v192, v193, 3, 399999, 4, 99998, 99999, 400000, 5) -> f_725(v179, v180, v181, v182, v183, v184, v185, v186, v187, v188, v189, v195, 1, v209, v210, v212, v190, v196, v197, v198, v199, v200, v201, v202, v203, v204, v205, v206, 0, v208, v192, v193, v194, 3, 399999, 4, 99998, 99999, 400000, 5) :|: v212 = v181 + 4 * v195 && 5 <= v212
f_725(v179, v180, v181, v182, v183, v184, v185, v186, v187, v188, v189, v195, 1, v209, v210, v212, v190, v196, v197, v198, v199, v200, v201, v202, v203, v204, v205, v206, 0, v208, v192, v193, v194, 3, 399999, 4, 99998, 99999, 400000, 5) -> f_727(v179, v180, v181, v182, v183, v184, v185, v186, v187, v188, v189, v195, 1, v209, v210, v212, v190, v196, v197, v198, v199, v200, v201, v202, v203, v204, v205, v206, 0, v208, v192, v193, 3, 399999, 4, 99998, 99999, 400000, 5) :|: TRUE
f_727(v179, v180, v181, v182, v183, v184, v185, v186, v187, v188, v189, v195, 1, v209, v210, v212, v190, v196, v197, v198, v199, v200, v201, v202, v203, v204, v205, v206, 0, v208, v192, v193, 3, 399999, 4, 99998, 99999, 400000, 5) -> f_729(v179, v180, v181, v182, v183, v184, v185, v186, v187, v188, v189, v195, 1, v209, v210, v212, v190, v196, v197, v198, v199, v200, v201, v202, v203, v204, v205, v206, 0, v208, v192, v193, 3, 399999, 4, 99998, 99999, 400000, 5) :|: TRUE
f_729(v179, v180, v181, v182, v183, v184, v185, v186, v187, v188, v189, v195, 1, v209, v210, v212, v190, v196, v197, v198, v199, v200, v201, v202, v203, v204, v205, v206, 0, v208, v192, v193, 3, 399999, 4, 99998, 99999, 400000, 5) -> f_731(v179, v180, v181, v182, v183, v184, v185, v186, v187, v188, v189, v195, 1, v209, v210, v212, v196, v197, v198, v199, v200, v201, v202, v203, v204, v205, v206, 0, v208, v192, v193, 3, 399999, 4, 99999, 400000, 5) :|: 0 = 0
f_731(v179, v180, v181, v182, v183, v184, v185, v186, v187, v188, v189, v195, 1, v209, v210, v212, v196, v197, v198, v199, v200, v201, v202, v203, v204, v205, v206, 0, v208, v192, v193, 3, 399999, 4, 99999, 400000, 5) -> f_733(v179, v180, v181, v182, v183, v184, v185, v186, v187, v188, v189, v195, 1, v209, v210, v212, v214, v196, v197, v198, v199, v200, v201, v202, v203, v204, v205, v206, 0, v208, v192, v193, 3, 399999, 4, 99999, 400000, 5, 2, 100000) :|: v214 = 1 + v195 && 2 <= v214 && v214 <= 100000
f_733(v179, v180, v181, v182, v183, v184, v185, v186, v187, v188, v189, v195, 1, v209, v210, v212, v214, v196, v197, v198, v199, v200, v201, v202, v203, v204, v205, v206, 0, v208, v192, v193, 3, 399999, 4, 99999, 400000, 5, 2, 100000) -> f_735(v179, v180, v181, v182, v183, v184, v185, v186, v187, v188, v189, v195, 1, v209, v210, v212, v214, v196, v197, v198, v199, v200, v201, v202, v203, v204, v205, v206, 0, v208, v192, v193, 3, 399999, 4, 99999, 400000, 5, 2, 100000) :|: TRUE
f_735(v179, v180, v181, v182, v183, v184, v185, v186, v187, v188, v189, v195, 1, v209, v210, v212, v214, v196, v197, v198, v199, v200, v201, v202, v203, v204, v205, v206, 0, v208, v192, v193, 3, 399999, 4, 99999, 400000, 5, 2, 100000) -> f_737(v179, v180, v181, v182, v183, v184, v185, v186, v187, v188, v189, v195, 1, v209, v210, v212, v214, v196, v197, v198, v199, v200, v201, v202, v203, v204, v205, v206, 0, v208, v192, v193, 3, 399999, 4, 99999, 400000, 5, 2, 100000) :|: TRUE
f_737(v179, v180, v181, v182, v183, v184, v185, v186, v187, v188, v189, v195, 1, v209, v210, v212, v214, v196, v197, v198, v199, v200, v201, v202, v203, v204, v205, v206, 0, v208, v192, v193, 3, 399999, 4, 99999, 400000, 5, 2, 100000) -> f_705(v179, v180, v181, v182, v183, v184, v185, v186, v187, v188, v189, v195, 1, v209, v210, v212, v214, v196, v197, v198, v199, v200, v201, v202, v203, v204, v205, v206, 0, v208, 3, 399999, 99999, 100000, 4, 400000) :|: TRUE
f_705(v179, v180, v181, v182, v183, v184, v185, v186, v187, v188, v189, v190, 1, v192, v193, v194, v195, v196, v197, v198, v199, v200, v201, v202, v203, v204, v205, v206, 0, v208, 3, 399999, 99999, 100000, 4, 400000) -> f_706(v179, v180, v181, v182, v183, v184, v185, v186, v187, v188, v189, v195, 1, v190, v192, v193, v194, v196, v197, v198, v199, v200, v201, v202, v203, v204, v205, v206, 0, v208, 3, 399999, 99999, 100000, 4, 400000) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_706(v179:0, v180:0, v181:0, v182:0, v183:0, v184:0, v185:0, v186:0, v187:0, v188:0, v189:0, v195:0, 1, v190:0, v192:0, v193:0, v194:0, v196:0, v197:0, v198:0, v199:0, v200:0, v201:0, v202:0, v203:0, v204:0, v205:0, v206:0, 0, v208:0, 3, 399999, 99999, 100000, 4, 400000) -> f_706(v179:0, v180:0, v181:0, v182:0, v183:0, v184:0, v185:0, v186:0, v187:0, v188:0, v189:0, 1 + v195:0, 1, v195:0, v180:0 + 4 * v195:0, v210:0, v181:0 + 4 * v195:0, v196:0, v197:0, v198:0, v199:0, v200:0, v201:0, v202:0, v203:0, v204:0, v205:0, v206:0, 0, v208:0, 3, 399999, 99999, 100000, 4, 400000) :|: v190:0 < 99999 && v195:0 < 100000 && v180:0 + 4 * v195:0 > 4 && v181:0 + 4 * v195:0 > 4 && v195:0 > 0
Filtered unneeded arguments:
   f_706(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36) -> f_706(x2, x3, x12, x14)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_706(v180:0, v181:0, v195:0, v190:0) -> f_706(v180:0, v181:0, 1 + v195:0, v195:0) :|: v195:0 < 100000 && v190:0 < 99999 && v180:0 + 4 * v195:0 > 4 && v195:0 > 0 && v181:0 + 4 * v195:0 > 4

----------------------------------------

(58)
Obligation:
Rules:
f_706(v180:0, v181:0, v195:0, v190:0) -> f_706(v180:0, v181:0, 1 + v195:0, v195:0) :|: v195:0 < 100000 && v190:0 < 99999 && v180:0 + 4 * v195:0 > 4 && v195:0 > 0 && v181:0 + 4 * v195:0 > 4

----------------------------------------

(59) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(60)
Obligation:
Rules:
f_706(v180:0:0, v181:0:0, v195:0:0, v190:0:0) -> f_706(v180:0:0, v181:0:0, 1 + v195:0:0, v195:0:0) :|: v195:0:0 > 0 && v181:0:0 + 4 * v195:0:0 > 4 && v180:0:0 + 4 * v195:0:0 > 4 && v190:0:0 < 99999 && v195:0:0 < 100000

----------------------------------------

(61) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_706 ] = -1*f_706_3

The following rules are decreasing:
f_706(v180:0:0, v181:0:0, v195:0:0, v190:0:0) -> f_706(v180:0:0, v181:0:0, 1 + v195:0:0, v195:0:0) :|: v195:0:0 > 0 && v181:0:0 + 4 * v195:0:0 > 4 && v180:0:0 + 4 * v195:0:0 > 4 && v190:0:0 < 99999 && v195:0:0 < 100000

The following rules are bounded:
f_706(v180:0:0, v181:0:0, v195:0:0, v190:0:0) -> f_706(v180:0:0, v181:0:0, 1 + v195:0:0, v195:0:0) :|: v195:0:0 > 0 && v181:0:0 + 4 * v195:0:0 > 4 && v180:0:0 + 4 * v195:0:0 > 4 && v190:0:0 < 99999 && v195:0:0 < 100000


----------------------------------------

(62)
YES
Graph finished, checking  consistency
Graph finished, checked consistency, took 0.0s
