MAYBE
proof of /hpcwork/ff862203/termcomp25/benchmarks/P41JT.c
# AProVE Commit ID: 48c83ccb80d5f8312cb92f4aa1b51dc35e247e65 nils 20241118 unpublished


Termination of the given C Problem could not be shown:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 20 ms]
(2) LLVM problem
(3) LLVMToTerminationGraphProof [EQUIVALENT, 797 ms]
(4) LLVM Symbolic Execution Graph
(5) SymbolicExecutionGraphToSCCProof [SOUND, 0 ms]
(6) AND
    (7) LLVM Symbolic Execution SCC
        (8) SCC2IRS [SOUND, 7 ms]
        (9) IntTRS
            (10) IntTRSCompressionProof [EQUIVALENT, 0 ms]
            (11) IntTRS
            (12) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
            (13) IntTRS
            (14) IntTRSPeriodicNontermProof [COMPLETE, 7 ms]
            (15) NO
        (16) SCC2IRS [SOUND, 0 ms]
        (17) IntTRS
    (18) LLVM Symbolic Execution SCC
        (19) SCC2IRS [SOUND, 10 ms]
        (20) IntTRS
            (21) IntTRSPeriodicNontermProof [COMPLETE, 1 ms]
            (22) NO
        (23) SCC2IRS [SOUND, 14 ms]
        (24) IntTRS
            (25) IntTRSCompressionProof [EQUIVALENT, 0 ms]
            (26) IntTRS
            (27) IntTRSPeriodicNontermProof [COMPLETE, 8 ms]
            (28) NO
    (29) LLVM Symbolic Execution SCC
        (30) SCC2IRS [SOUND, 7 ms]
        (31) IntTRS
            (32) IntTRSNonPeriodicNontermProof [COMPLETE, 5 ms]
            (33) NO
        (34) SCC2IRS [SOUND, 0 ms]
        (35) IntTRS
            (36) IntTRSCompressionProof [EQUIVALENT, 0 ms]
            (37) IntTRS
(38) SEGraph to IRS [SOUND, 133 ms]
(39) IntTRS
    (40) IRSNoOverapproximation [EQUIVALENT, 0 ms]
    (41) MAYBE
(42) SEGraph to IRS [SOUND, 126 ms]
(43) IntTRS
    (44) IRSToKoat [EQUIVALENT, 0 ms]
    (45) Koat Problem
    (46) KoAT2 [EQUIVALENT, 815 ms]
    (47) MAYBE


----------------------------------------

(0)
Obligation:
c file /hpcwork/ff862203/termcomp25/benchmarks/P41JT.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /hpcwork/ff862203/termcomp25/benchmarks/P41JT.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-pc-linux-gnu"

Type definitions:

Global variables:

Function declarations and definitions:

*BasicFunctionTypename: "llvm.dbg.declare" returnParam: BasicVoidType parameters: (BasicMetadataType, BasicMetadataType, BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "cstrcat" linkageType: EXTERNALLY_VISIBLE returnParam: *i8 parameters: (0 *i8, 1 *i8) variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 7
	0:
		%3 = alloca *i8, align 8
		%4 = alloca *i8, align 8
		%5 = alloca *i8, align 8
		store %0, %3
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i8 %3)
		store %1, %4
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i8 %4)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i8 %5)
		%6 = load %3
		store %6, %5
		br %7
	7:
		%8 = load %5
		%9 = load %8
		%10 = sext i8 %9 to i32
		%11 = icmp ne %10 0
		br %11, %12, %15
	12:
		%13 = load %5
		%14 = getelementptr %13, 1
		store %14, %5
		br %7
	15:
		br %16
	16:
		%17 = load %4
		%18 = getelementptr %17, 1
		store %18, %4
		%19 = load %17
		%20 = load %5
		%21 = getelementptr %20, 1
		store %21, %5
		store %19, %20
		%22 = sext i8 %19 to i32
		%23 = icmp ne %22 0
		br %23, %24, %25
	24:
		br %16
	25:
		%26 = load %3
		ret %26

*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 39
	0:
		%1 = alloca i32, align 4
		%2 = alloca *i8, align 8
		%3 = alloca *i8, align 8
		store 0, %1
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i8 %2)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i8 %3)
		%4 = load %2
		%5 = load %3
		%6 = call *i8 @cstrcat(*i8 %4, *i8 %5)
		ret 0


Analyze Termination of all function calls matching the pattern:
main()
----------------------------------------

(3) LLVMToTerminationGraphProof (EQUIVALENT)
Constructed symbolic execution graph for LLVM program.
----------------------------------------

(4)
Obligation:
Symbolic Execution Graph
----------------------------------------

(5) SymbolicExecutionGraphToSCCProof (SOUND)
Splitted symbolic execution graph to 3 SCCs.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
SCC
----------------------------------------

(8) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 14 rulesP rules:
f_308(v253, v254, v255, v256, v257, v258, 0, v260, v261, v262, v263, v264, v265, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_309(v253, v254, v255, v256, v257, v258, 0, v260, v290, v262, v263, v264, v265, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: TRUE
f_309(v253, v254, v255, v256, v257, v258, 0, v260, v290, v262, v263, v264, v265, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_310(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v263, v264, v265, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: v292 = 1 + v290 && 1 <= v292
f_310(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v263, v264, v265, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_311(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v263, v264, v265, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: TRUE
f_311(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v263, v264, v265, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_312(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v264, v265, v263, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: TRUE
f_312(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v264, v265, v263, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_313(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v265, v263, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: TRUE
f_313(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v265, v263, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_314(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, v263, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: v298 = 1 + v296 && 1 <= v298
f_314(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, v263, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_315(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, v263, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: TRUE
f_315(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, v263, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_316(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, v263, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: TRUE
f_316(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, v263, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_317(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: 0 = 0
f_317(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_318(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: v294 != 0
f_318(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_320(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: 0 = 0
f_320(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_322(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: TRUE
f_322(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_307(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: TRUE
f_307(v253, v254, v255, v256, v257, v258, 0, v260, v261, v262, v263, v264, v265, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_308(v253, v254, v255, v256, v257, v258, 0, v260, v261, v262, v263, v264, v265, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: TRUE
Combined rules. Obtained 2 rulesP rules:
f_308(v253:0, v254:0, v255:0, v256:0, v257:0, v258:0, 0, v260:0, v261:0, v262:0, v263:0, v264:0, v265:0, 1, v267:0, v270:0, v268:0, v271:0, v269:0, v272:0, v273:0, v274:0, v275:0, 3, 7, 4, 8) -> f_308(v253:0, v254:0, v255:0, v256:0, v257:0, v258:0, 0, v260:0, v290:0, 1 + v290:0, v294:0, v296:0, 1 + v296:0, 1, v267:0, v270:0, v268:0, v271:0, v269:0, v272:0, v273:0, v274:0, v275:0, 3, 7, 4, 8) :|: v290:0 > -1 && v294:0 < 0 && v296:0 > -1
f_308(v253:0, v254:0, v255:0, v256:0, v257:0, v258:0, 0, v260:0, v261:0, v262:0, v263:0, v264:0, v265:0, 1, v267:0, v270:0, v268:0, v271:0, v269:0, v272:0, v273:0, v274:0, v275:0, 3, 7, 4, 8) -> f_308(v253:0, v254:0, v255:0, v256:0, v257:0, v258:0, 0, v260:0, v290:0, 1 + v290:0, v294:0, v296:0, 1 + v296:0, 1, v267:0, v270:0, v268:0, v271:0, v269:0, v272:0, v273:0, v274:0, v275:0, 3, 7, 4, 8) :|: v290:0 > -1 && v294:0 > 0 && v296:0 > -1
Removed division, modulo operations, cleaned up constraints. Obtained 2 rules.P rules:
f_308(v253:0, v254:0, v255:0, v256:0, v257:0, v258:0, cons_0, v260:0, v261:0, v262:0, v263:0, v264:0, v265:0, cons_1, v267:0, v270:0, v268:0, v271:0, v269:0, v272:0, v273:0, v274:0, v275:0, cons_3, cons_7, cons_4, cons_8) -> f_308(v253:0, v254:0, v255:0, v256:0, v257:0, v258:0, 0, v260:0, v290:0, 1 + v290:0, v294:0, v296:0, 1 + v296:0, 1, v267:0, v270:0, v268:0, v271:0, v269:0, v272:0, v273:0, v274:0, v275:0, 3, 7, 4, 8) :|: v294:0 < 0 && v296:0 > -1 && v290:0 > -1 && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_7 = 7 && cons_4 = 4 && cons_8 = 8
f_308(v253:0, v254:0, v255:0, v256:0, v257:0, v258:0, cons_0, v260:0, v261:0, v262:0, v263:0, v264:0, v265:0, cons_1, v267:0, v270:0, v268:0, v271:0, v269:0, v272:0, v273:0, v274:0, v275:0, cons_3, cons_7, cons_4, cons_8) -> f_308(v253:0, v254:0, v255:0, v256:0, v257:0, v258:0, 0, v260:0, v290:0, 1 + v290:0, v294:0, v296:0, 1 + v296:0, 1, v267:0, v270:0, v268:0, v271:0, v269:0, v272:0, v273:0, v274:0, v275:0, 3, 7, 4, 8) :|: v294:0 > 0 && v296:0 > -1 && v290:0 > -1 && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_7 = 7 && cons_4 = 4 && cons_8 = 8

----------------------------------------

(9)
Obligation:
Rules:
f_308(v253:0, v254:0, v255:0, v256:0, v257:0, v258:0, cons_0, v260:0, v261:0, v262:0, v263:0, v264:0, v265:0, cons_1, v267:0, v270:0, v268:0, v271:0, v269:0, v272:0, v273:0, v274:0, v275:0, cons_3, cons_7, cons_4, cons_8) -> f_308(v253:0, v254:0, v255:0, v256:0, v257:0, v258:0, 0, v260:0, v290:0, 1 + v290:0, v294:0, v296:0, 1 + v296:0, 1, v267:0, v270:0, v268:0, v271:0, v269:0, v272:0, v273:0, v274:0, v275:0, 3, 7, 4, 8) :|: v294:0 < 0 && v296:0 > -1 && v290:0 > -1 && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_7 = 7 && cons_4 = 4 && cons_8 = 8
f_308(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26) -> f_308(x, x1, x2, x3, x4, x5, 0, x7, x27, 1 + x27, x28, x29, 1 + x29, 1, x14, x15, x16, x17, x18, x19, x20, x21, x22, 3, 7, 4, 8) :|: x28 > 0 && x29 > -1 && x27 > -1 && x6 = 0 && x13 = 1 && x23 = 3 && x24 = 7 && x25 = 4 && x26 = 8

----------------------------------------

(10) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(11)
Obligation:
Rules:
f_308(v253:0:0, v254:0:0, v255:0:0, v256:0:0, v257:0:0, v258:0:0, cons_0, v260:0:0, v261:0:0, v262:0:0, v263:0:0, v264:0:0, v265:0:0, cons_1, v267:0:0, v270:0:0, v268:0:0, v271:0:0, v269:0:0, v272:0:0, v273:0:0, v274:0:0, v275:0:0, cons_3, cons_7, cons_4, cons_8) -> f_308(v253:0:0, v254:0:0, v255:0:0, v256:0:0, v257:0:0, v258:0:0, 0, v260:0:0, v290:0:0, 1 + v290:0:0, v294:0:0, v296:0:0, 1 + v296:0:0, 1, v267:0:0, v270:0:0, v268:0:0, v271:0:0, v269:0:0, v272:0:0, v273:0:0, v274:0:0, v275:0:0, 3, 7, 4, 8) :|: v294:0:0 < 0 && v296:0:0 > -1 && v290:0:0 > -1 && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_7 = 7 && cons_4 = 4 && cons_8 = 8
f_308(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26) -> f_308(x, x1, x2, x3, x4, x5, 0, x7, x27, 1 + x27, x28, x29, 1 + x29, 1, x14, x15, x16, x17, x18, x19, x20, x21, x22, 3, 7, 4, 8) :|: x28 > 0 && x29 > -1 && x27 > -1 && x6 = 0 && x13 = 1 && x23 = 3 && x24 = 7 && x25 = 4 && x26 = 8

----------------------------------------

(12) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_308(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27) -> f_308(x7, x14, x24, x25, x26, x27)

----------------------------------------

(13)
Obligation:
Rules:
f_308(cons_0, cons_1, cons_3, cons_7, cons_4, cons_8) -> f_308(0, 1, 3, 7, 4, 8) :|: v294:0:0 < 0 && v296:0:0 > -1 && v290:0:0 > -1 && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_7 = 7 && cons_4 = 4 && cons_8 = 8
f_308(x6, x13, x23, x24, x25, x26) -> f_308(0, 1, 3, 7, 4, 8) :|: x28 > 0 && x29 > -1 && x27 > -1 && x6 = 0 && x13 = 1 && x23 = 3 && x24 = 7 && x25 = 4 && x26 = 8

----------------------------------------

(14) IntTRSPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, cons_0, cons_1, cons_3, cons_7, cons_4, cons_8) -> f(1, 0, 1, 3, 7, 4, 8) :|: pc = 1 && (v294:0:0 < 0 && v296:0:0 > -1 && v290:0:0 > -1 && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_7 = 7 && cons_4 = 4 && cons_8 = 8)
f(pc, x6, x13, x23, x24, x25, x26) -> f(1, 0, 1, 3, 7, 4, 8) :|: pc = 1 && (x28 > 0 && x29 > -1 && x27 > -1 && x6 = 0 && x13 = 1 && x23 = 3 && x24 = 7 && x25 = 4 && x26 = 8)
Witness term starting non-terminating reduction: f(1, 0, 1, 3, 7, 4, 8)
----------------------------------------

(15)
NO

----------------------------------------

(16) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 14 rulesP rules:
f_308(v253, v254, v255, v256, v257, v258, 0, v260, v261, v262, v263, v264, v265, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_309(v253, v254, v255, v256, v257, v258, 0, v260, v290, v262, v263, v264, v265, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: TRUE
f_309(v253, v254, v255, v256, v257, v258, 0, v260, v290, v262, v263, v264, v265, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_310(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v263, v264, v265, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: v292 = 1 + v290 && 1 <= v292
f_310(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v263, v264, v265, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_311(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v263, v264, v265, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: TRUE
f_311(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v263, v264, v265, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_312(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v264, v265, v263, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: TRUE
f_312(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v264, v265, v263, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_313(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v265, v263, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: TRUE
f_313(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v265, v263, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_314(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, v263, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: v298 = 1 + v296 && 1 <= v298
f_314(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, v263, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_315(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, v263, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: TRUE
f_315(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, v263, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_316(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, v263, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: TRUE
f_316(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, v263, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_317(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: 0 = 0
f_317(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_318(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: v294 != 0
f_318(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_320(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: 0 = 0
f_320(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_322(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: TRUE
f_322(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_307(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: v253 <= v260 && 0 <= v253 && 0 <= v254 && 1 <= v255 && 1 <= v256 && 1 <= v257 && 1 <= v258 && 0 <= v260 && 0 <= v290 && 1 <= v292 && 0 <= v296 && 1 <= v298 && 1 <= v267 && 1 <= v268 && 1 <= v269 && 4 <= v270 && 8 <= v271 && 8 <= v272 && 8 <= v273 && 8 <= v274 && 8 <= v275 && v267 <= v270 && v268 <= v271 && v269 <= v272 && v255 <= v273 && v256 <= v274 && v257 <= v275
f_307(v253, v254, v255, v256, v257, v258, 0, v260, v261, v262, v263, v264, v265, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_308(v253, v254, v255, v256, v257, v258, 0, v260, v261, v262, v263, v264, v265, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: TRUE
Combined rules. Obtained 2 rulesP rules:
f_308(v253:0, v254:0, v255:0, v256:0, v257:0, v258:0, 0, v260:0, v261:0, v262:0, v263:0, v264:0, v265:0, 1, v267:0, v270:0, v268:0, v271:0, v269:0, v272:0, v273:0, v274:0, v275:0, 3, 7, 4, 8) -> f_308(v253:0, v254:0, v255:0, v256:0, v257:0, v258:0, 0, v260:0, v290:0, 1 + v290:0, v294:0, v296:0, 1 + v296:0, 1, v267:0, v270:0, v268:0, v271:0, v269:0, v272:0, v273:0, v274:0, v275:0, 3, 7, 4, 8) :|: v253:0 > -1 && v260:0 >= v253:0 && v254:0 > -1 && v255:0 > 0 && v256:0 > 0 && v257:0 > 0 && v258:0 > 0 && v260:0 > -1 && v290:0 > -1 && v296:0 > -1 && v267:0 > 0 && v268:0 > 0 && v269:0 > 0 && v270:0 > 3 && v271:0 > 7 && v272:0 > 7 && v273:0 > 7 && v274:0 > 7 && v275:0 > 7 && v270:0 >= v267:0 && v271:0 >= v268:0 && v272:0 >= v269:0 && v273:0 >= v255:0 && v294:0 < 0 && v275:0 >= v257:0 && v274:0 >= v256:0
f_308(v253:0, v254:0, v255:0, v256:0, v257:0, v258:0, 0, v260:0, v261:0, v262:0, v263:0, v264:0, v265:0, 1, v267:0, v270:0, v268:0, v271:0, v269:0, v272:0, v273:0, v274:0, v275:0, 3, 7, 4, 8) -> f_308(v253:0, v254:0, v255:0, v256:0, v257:0, v258:0, 0, v260:0, v290:0, 1 + v290:0, v294:0, v296:0, 1 + v296:0, 1, v267:0, v270:0, v268:0, v271:0, v269:0, v272:0, v273:0, v274:0, v275:0, 3, 7, 4, 8) :|: v253:0 > -1 && v260:0 >= v253:0 && v254:0 > -1 && v255:0 > 0 && v256:0 > 0 && v257:0 > 0 && v258:0 > 0 && v260:0 > -1 && v290:0 > -1 && v296:0 > -1 && v267:0 > 0 && v268:0 > 0 && v269:0 > 0 && v270:0 > 3 && v271:0 > 7 && v272:0 > 7 && v273:0 > 7 && v274:0 > 7 && v275:0 > 7 && v270:0 >= v267:0 && v271:0 >= v268:0 && v272:0 >= v269:0 && v273:0 >= v255:0 && v294:0 > 0 && v275:0 >= v257:0 && v274:0 >= v256:0
Filtered unneeded arguments:
   f_308(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27) -> f_308(x1, x2, x3, x4, x5, x6, x8, x15, x16, x17, x18, x19, x20, x21, x22, x23)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_308(v253:0, v254:0, v255:0, v256:0, v257:0, v258:0, v260:0, v267:0, v270:0, v268:0, v271:0, v269:0, v272:0, v273:0, v274:0, v275:0) -> f_308(v253:0, v254:0, v255:0, v256:0, v257:0, v258:0, v260:0, v267:0, v270:0, v268:0, v271:0, v269:0, v272:0, v273:0, v274:0, v275:0) :|: v260:0 >= v253:0 && v253:0 > -1 && v254:0 > -1 && v255:0 > 0 && v256:0 > 0 && v257:0 > 0 && v258:0 > 0 && v260:0 > -1 && v267:0 > 0 && v268:0 > 0 && v269:0 > 0 && v270:0 > 3 && v271:0 > 7 && v272:0 > 7 && v273:0 > 7 && v274:0 > 7 && v275:0 > 7 && v270:0 >= v267:0 && v271:0 >= v268:0 && v272:0 >= v269:0 && v273:0 >= v255:0 && v274:0 >= v256:0 && v275:0 >= v257:0

----------------------------------------

(17)
Obligation:
Rules:
f_308(v253:0, v254:0, v255:0, v256:0, v257:0, v258:0, v260:0, v267:0, v270:0, v268:0, v271:0, v269:0, v272:0, v273:0, v274:0, v275:0) -> f_308(v253:0, v254:0, v255:0, v256:0, v257:0, v258:0, v260:0, v267:0, v270:0, v268:0, v271:0, v269:0, v272:0, v273:0, v274:0, v275:0) :|: v260:0 >= v253:0 && v253:0 > -1 && v254:0 > -1 && v255:0 > 0 && v256:0 > 0 && v257:0 > 0 && v258:0 > 0 && v260:0 > -1 && v267:0 > 0 && v268:0 > 0 && v269:0 > 0 && v270:0 > 3 && v271:0 > 7 && v272:0 > 7 && v273:0 > 7 && v274:0 > 7 && v275:0 > 7 && v270:0 >= v267:0 && v271:0 >= v268:0 && v272:0 >= v269:0 && v273:0 >= v255:0 && v274:0 >= v256:0 && v275:0 >= v257:0

----------------------------------------

(18)
Obligation:
SCC
----------------------------------------

(19) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 14 rulesP rules:
f_248(v100, v101, v102, v103, v104, 0, v121, v107, v108, v109, v110, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_251(v100, v101, v102, v103, v104, 0, v121, v123, v108, v109, v110, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: v123 = 1 + v121 && 1 <= v123
f_251(v100, v101, v102, v103, v104, 0, v121, v123, v108, v109, v110, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_254(v100, v101, v102, v103, v104, 0, v121, v123, v108, v109, v110, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: TRUE
f_254(v100, v101, v102, v103, v104, 0, v121, v123, v108, v109, v110, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_257(v100, v101, v102, v103, v104, 0, v121, v123, v131, v109, v110, v108, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: TRUE
f_257(v100, v101, v102, v103, v104, 0, v121, v123, v131, v109, v110, v108, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_260(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v110, v108, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: TRUE
f_260(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v110, v108, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_263(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, v108, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: v138 = 1 + v134 && 1 <= v138
f_263(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, v108, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_266(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, v108, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: TRUE
f_266(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, v108, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_268(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, v108, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: TRUE
f_268(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, v108, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_270(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: 0 = 0
f_270(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_272(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: v131 != 0
f_272(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_275(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: 0 = 0
f_275(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_278(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: TRUE
f_278(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_281(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: TRUE
f_281(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_245(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: TRUE
f_245(v100, v101, v102, v103, v104, 0, v106, v107, v108, v109, v110, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_248(v100, v101, v102, v103, v104, 0, v121, v107, v108, v109, v110, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: TRUE
Combined rules. Obtained 2 rulesP rules:
f_248(v100:0, v101:0, v102:0, v103:0, v104:0, 0, v121:0, v107:0, v108:0, v109:0, v110:0, 1, v112:0, v115:0, v113:0, v116:0, v114:0, v117:0, v118:0, v119:0, v120:0, 3, 7, 4, 8) -> f_248(v100:0, v101:0, v102:0, v103:0, v104:0, 0, v121:1, 1 + v121:0, v131:0, v134:0, 1 + v134:0, 1, v112:0, v115:0, v113:0, v116:0, v114:0, v117:0, v118:0, v119:0, v120:0, 3, 7, 4, 8) :|: v121:0 > -1 && v131:0 < 0 && v134:0 > -1
f_248(v100:0, v101:0, v102:0, v103:0, v104:0, 0, v121:0, v107:0, v108:0, v109:0, v110:0, 1, v112:0, v115:0, v113:0, v116:0, v114:0, v117:0, v118:0, v119:0, v120:0, 3, 7, 4, 8) -> f_248(v100:0, v101:0, v102:0, v103:0, v104:0, 0, v121:1, 1 + v121:0, v131:0, v134:0, 1 + v134:0, 1, v112:0, v115:0, v113:0, v116:0, v114:0, v117:0, v118:0, v119:0, v120:0, 3, 7, 4, 8) :|: v121:0 > -1 && v131:0 > 0 && v134:0 > -1
Filtered unneeded arguments:
   f_248(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25) -> f_248(x7)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_248(v121:0) -> f_248(v121:1) :|: v121:0 > -1

----------------------------------------

(20)
Obligation:
Rules:
f_248(v121:0) -> f_248(v121:1) :|: v121:0 > -1

----------------------------------------

(21) IntTRSPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, v121:0) -> f(1, v121:1) :|: pc = 1 && v121:0 > -1
Witness term starting non-terminating reduction: f(1, 0)
----------------------------------------

(22)
NO

----------------------------------------

(23) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 14 rulesP rules:
f_248(v100, v101, v102, v103, v104, 0, v121, v107, v108, v109, v110, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_251(v100, v101, v102, v103, v104, 0, v121, v123, v108, v109, v110, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: v123 = 1 + v121 && 1 <= v123
f_251(v100, v101, v102, v103, v104, 0, v121, v123, v108, v109, v110, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_254(v100, v101, v102, v103, v104, 0, v121, v123, v108, v109, v110, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: TRUE
f_254(v100, v101, v102, v103, v104, 0, v121, v123, v108, v109, v110, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_257(v100, v101, v102, v103, v104, 0, v121, v123, v131, v109, v110, v108, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: TRUE
f_257(v100, v101, v102, v103, v104, 0, v121, v123, v131, v109, v110, v108, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_260(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v110, v108, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: TRUE
f_260(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v110, v108, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_263(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, v108, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: v138 = 1 + v134 && 1 <= v138
f_263(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, v108, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_266(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, v108, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: TRUE
f_266(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, v108, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_268(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, v108, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: TRUE
f_268(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, v108, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_270(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: 0 = 0
f_270(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_272(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: v131 != 0
f_272(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_275(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: 0 = 0
f_275(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_278(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: TRUE
f_278(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_281(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: TRUE
f_281(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_245(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: 0 <= v100 && 0 <= v101 && 1 <= v102 && 1 <= v103 && 1 <= v104 && 0 <= v121 && 1 <= v123 && 0 <= v134 && 1 <= v138 && 1 <= v112 && 1 <= v113 && 1 <= v114 && 4 <= v115 && 8 <= v116 && 8 <= v117 && 8 <= v118 && 8 <= v119 && 8 <= v120 && v112 <= v115 && v113 <= v116 && v114 <= v117 && v102 <= v118 && v103 <= v119 && v104 <= v120
f_245(v100, v101, v102, v103, v104, 0, v106, v107, v108, v109, v110, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_248(v100, v101, v102, v103, v104, 0, v121, v107, v108, v109, v110, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: TRUE
Combined rules. Obtained 2 rulesP rules:
f_248(v100:0, v101:0, v102:0, v103:0, v104:0, 0, v121:0, v107:0, v108:0, v109:0, v110:0, 1, v112:0, v115:0, v113:0, v116:0, v114:0, v117:0, v118:0, v119:0, v120:0, 3, 7, 4, 8) -> f_248(v100:0, v101:0, v102:0, v103:0, v104:0, 0, v121:1, 1 + v121:0, v131:0, v134:0, 1 + v134:0, 1, v112:0, v115:0, v113:0, v116:0, v114:0, v117:0, v118:0, v119:0, v120:0, 3, 7, 4, 8) :|: v101:0 > -1 && v100:0 > -1 && v102:0 > 0 && v103:0 > 0 && v104:0 > 0 && v121:0 > -1 && v134:0 > -1 && v112:0 > 0 && v113:0 > 0 && v114:0 > 0 && v115:0 > 3 && v116:0 > 7 && v117:0 > 7 && v118:0 > 7 && v119:0 > 7 && v120:0 > 7 && v115:0 >= v112:0 && v116:0 >= v113:0 && v117:0 >= v114:0 && v131:0 < 0 && v118:0 >= v102:0 && v120:0 >= v104:0 && v119:0 >= v103:0
f_248(v100:0, v101:0, v102:0, v103:0, v104:0, 0, v121:0, v107:0, v108:0, v109:0, v110:0, 1, v112:0, v115:0, v113:0, v116:0, v114:0, v117:0, v118:0, v119:0, v120:0, 3, 7, 4, 8) -> f_248(v100:0, v101:0, v102:0, v103:0, v104:0, 0, v121:1, 1 + v121:0, v131:0, v134:0, 1 + v134:0, 1, v112:0, v115:0, v113:0, v116:0, v114:0, v117:0, v118:0, v119:0, v120:0, 3, 7, 4, 8) :|: v101:0 > -1 && v100:0 > -1 && v102:0 > 0 && v103:0 > 0 && v104:0 > 0 && v121:0 > -1 && v134:0 > -1 && v112:0 > 0 && v113:0 > 0 && v114:0 > 0 && v115:0 > 3 && v116:0 > 7 && v117:0 > 7 && v118:0 > 7 && v119:0 > 7 && v120:0 > 7 && v115:0 >= v112:0 && v116:0 >= v113:0 && v117:0 >= v114:0 && v131:0 > 0 && v118:0 >= v102:0 && v120:0 >= v104:0 && v119:0 >= v103:0
Filtered unneeded arguments:
   f_248(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25) -> f_248(x1, x2, x3, x4, x5, x7, x13, x14, x15, x16, x17, x18, x19, x20, x21)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_248(v100:0, v101:0, v102:0, v103:0, v104:0, v121:0, v112:0, v115:0, v113:0, v116:0, v114:0, v117:0, v118:0, v119:0, v120:0) -> f_248(v100:0, v101:0, v102:0, v103:0, v104:0, v121:1, v112:0, v115:0, v113:0, v116:0, v114:0, v117:0, v118:0, v119:0, v120:0) :|: v100:0 > -1 && v101:0 > -1 && v102:0 > 0 && v103:0 > 0 && v104:0 > 0 && v121:0 > -1 && v112:0 > 0 && v113:0 > 0 && v114:0 > 0 && v115:0 > 3 && v116:0 > 7 && v117:0 > 7 && v118:0 > 7 && v119:0 > 7 && v120:0 > 7 && v115:0 >= v112:0 && v116:0 >= v113:0 && v117:0 >= v114:0 && v118:0 >= v102:0 && v119:0 >= v103:0 && v120:0 >= v104:0

----------------------------------------

(24)
Obligation:
Rules:
f_248(v100:0, v101:0, v102:0, v103:0, v104:0, v121:0, v112:0, v115:0, v113:0, v116:0, v114:0, v117:0, v118:0, v119:0, v120:0) -> f_248(v100:0, v101:0, v102:0, v103:0, v104:0, v121:1, v112:0, v115:0, v113:0, v116:0, v114:0, v117:0, v118:0, v119:0, v120:0) :|: v100:0 > -1 && v101:0 > -1 && v102:0 > 0 && v103:0 > 0 && v104:0 > 0 && v121:0 > -1 && v112:0 > 0 && v113:0 > 0 && v114:0 > 0 && v115:0 > 3 && v116:0 > 7 && v117:0 > 7 && v118:0 > 7 && v119:0 > 7 && v120:0 > 7 && v115:0 >= v112:0 && v116:0 >= v113:0 && v117:0 >= v114:0 && v118:0 >= v102:0 && v119:0 >= v103:0 && v120:0 >= v104:0

----------------------------------------

(25) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(26)
Obligation:
Rules:
f_248(v100:0:0, v101:0:0, v102:0:0, v103:0:0, v104:0:0, v121:0:0, v112:0:0, v115:0:0, v113:0:0, v116:0:0, v114:0:0, v117:0:0, v118:0:0, v119:0:0, v120:0:0) -> f_248(v100:0:0, v101:0:0, v102:0:0, v103:0:0, v104:0:0, v121:1:0, v112:0:0, v115:0:0, v113:0:0, v116:0:0, v114:0:0, v117:0:0, v118:0:0, v119:0:0, v120:0:0) :|: v119:0:0 >= v103:0:0 && v120:0:0 >= v104:0:0 && v118:0:0 >= v102:0:0 && v117:0:0 >= v114:0:0 && v116:0:0 >= v113:0:0 && v115:0:0 >= v112:0:0 && v120:0:0 > 7 && v119:0:0 > 7 && v118:0:0 > 7 && v117:0:0 > 7 && v116:0:0 > 7 && v115:0:0 > 3 && v114:0:0 > 0 && v113:0:0 > 0 && v112:0:0 > 0 && v121:0:0 > -1 && v104:0:0 > 0 && v103:0:0 > 0 && v102:0:0 > 0 && v101:0:0 > -1 && v100:0:0 > -1

----------------------------------------

(27) IntTRSPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, v100:0:0, v101:0:0, v102:0:0, v103:0:0, v104:0:0, v121:0:0, v112:0:0, v115:0:0, v113:0:0, v116:0:0, v114:0:0, v117:0:0, v118:0:0, v119:0:0, v120:0:0) -> f(1, v100:0:0, v101:0:0, v102:0:0, v103:0:0, v104:0:0, v121:1:0, v112:0:0, v115:0:0, v113:0:0, v116:0:0, v114:0:0, v117:0:0, v118:0:0, v119:0:0, v120:0:0) :|: pc = 1 && (v119:0:0 >= v103:0:0 && v120:0:0 >= v104:0:0 && v118:0:0 >= v102:0:0 && v117:0:0 >= v114:0:0 && v116:0:0 >= v113:0:0 && v115:0:0 >= v112:0:0 && v120:0:0 > 7 && v119:0:0 > 7 && v118:0:0 > 7 && v117:0:0 > 7 && v116:0:0 > 7 && v115:0:0 > 3 && v114:0:0 > 0 && v113:0:0 > 0 && v112:0:0 > 0 && v121:0:0 > -1 && v104:0:0 > 0 && v103:0:0 > 0 && v102:0:0 > 0 && v101:0:0 > -1 && v100:0:0 > -1)
Witness term starting non-terminating reduction: f(1, 0, 0, 1, 8, 16, 0, 1, 17, 1, 21, 1, 8, 19, 14, 18)
----------------------------------------

(28)
NO

----------------------------------------

(29)
Obligation:
SCC
----------------------------------------

(30) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 11 rulesP rules:
f_237(v79, v80, v81, v82, v83, v87, v85, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) -> f_240(v79, v80, v81, v82, v83, v87, v98, v85, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) :|: TRUE
f_240(v79, v80, v81, v82, v83, v87, v98, v85, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) -> f_243(v79, v80, v81, v82, v83, v87, v98, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) :|: 0 = 0
f_243(v79, v80, v81, v82, v83, v87, v98, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) -> f_246(v79, v80, v81, v82, v83, v87, v98, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) :|: v98 != 0
f_246(v79, v80, v81, v82, v83, v87, v98, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) -> f_249(v79, v80, v81, v82, v83, v87, v98, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) :|: 0 = 0
f_249(v79, v80, v81, v82, v83, v87, v98, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) -> f_252(v79, v80, v81, v82, v83, v87, v98, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) :|: TRUE
f_252(v79, v80, v81, v82, v83, v87, v98, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) -> f_255(v79, v80, v81, v82, v83, v87, v98, 1, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) :|: 0 = 0
f_255(v79, v80, v81, v82, v83, v87, v98, 1, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) -> f_258(v79, v80, v81, v82, v83, v87, v98, 1, v133, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8, 2) :|: v133 = 1 + v87 && 2 <= v133
f_258(v79, v80, v81, v82, v83, v87, v98, 1, v133, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8, 2) -> f_261(v79, v80, v81, v82, v83, v87, v98, 1, v133, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8, 2) :|: TRUE
f_261(v79, v80, v81, v82, v83, v87, v98, 1, v133, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8, 2) -> f_264(v79, v80, v81, v82, v83, v87, v98, 1, v133, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8, 2) :|: TRUE
f_264(v79, v80, v81, v82, v83, v87, v98, 1, v133, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8, 2) -> f_234(v79, v80, v81, v82, v83, v87, v98, 1, v133, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) :|: TRUE
f_234(v79, v80, v81, v82, v83, v84, v85, 1, v87, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) -> f_237(v79, v80, v81, v82, v83, v87, v85, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) :|: 0 = 0
Combined rules. Obtained 2 rulesP rules:
f_237(v79:0, v80:0, v81:0, v82:0, v83:0, v87:0, v85:0, 1, v84:0, v88:0, v91:0, v89:0, v92:0, v90:0, v93:0, v94:0, v95:0, v96:0, 0, 3, 7, 4, 8) -> f_237(v79:0, v80:0, v81:0, v82:0, v83:0, 1 + v87:0, v98:0, 1, v87:0, v88:0, v91:0, v89:0, v92:0, v90:0, v93:0, v94:0, v95:0, v96:0, 0, 3, 7, 4, 8) :|: v87:0 > 0 && v98:0 < 0
f_237(v79:0, v80:0, v81:0, v82:0, v83:0, v87:0, v85:0, 1, v84:0, v88:0, v91:0, v89:0, v92:0, v90:0, v93:0, v94:0, v95:0, v96:0, 0, 3, 7, 4, 8) -> f_237(v79:0, v80:0, v81:0, v82:0, v83:0, 1 + v87:0, v98:0, 1, v87:0, v88:0, v91:0, v89:0, v92:0, v90:0, v93:0, v94:0, v95:0, v96:0, 0, 3, 7, 4, 8) :|: v87:0 > 0 && v98:0 > 0
Filtered unneeded arguments:
   f_237(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23) -> f_237(x6)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_237(v87:0) -> f_237(1 + v87:0) :|: v87:0 > 0

----------------------------------------

(31)
Obligation:
Rules:
f_237(v87:0) -> f_237(1 + v87:0) :|: v87:0 > 0

----------------------------------------

(32) IntTRSNonPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, v87:0) -> f(1, 1 + v87:0) :|: pc = 1 && v87:0 > 0
Proved unsatisfiability of the following formula, indicating that the system is never left after entering:
(((run2_0 = ((1 * 1)) and run2_1 = ((1 * 1) + (run1_1 * 1))) and (((run1_0 * 1)) = ((1 * 1)) and ((run1_1 * 1)) > 0)) and !(((run2_0 * 1)) = ((1 * 1)) and ((run2_1 * 1)) > 0))
Proved satisfiability of the following formula, indicating that the system is entered at least once:
((run2_0 = ((1 * 1)) and run2_1 = ((1 * 1) + (run1_1 * 1))) and (((run1_0 * 1)) = ((1 * 1)) and ((run1_1 * 1)) > 0))

----------------------------------------

(33)
NO

----------------------------------------

(34) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 11 rulesP rules:
f_237(v79, v80, v81, v82, v83, v87, v85, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) -> f_240(v79, v80, v81, v82, v83, v87, v98, v85, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) :|: TRUE
f_240(v79, v80, v81, v82, v83, v87, v98, v85, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) -> f_243(v79, v80, v81, v82, v83, v87, v98, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) :|: 0 = 0
f_243(v79, v80, v81, v82, v83, v87, v98, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) -> f_246(v79, v80, v81, v82, v83, v87, v98, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) :|: v98 != 0
f_246(v79, v80, v81, v82, v83, v87, v98, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) -> f_249(v79, v80, v81, v82, v83, v87, v98, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) :|: 0 = 0
f_249(v79, v80, v81, v82, v83, v87, v98, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) -> f_252(v79, v80, v81, v82, v83, v87, v98, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) :|: TRUE
f_252(v79, v80, v81, v82, v83, v87, v98, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) -> f_255(v79, v80, v81, v82, v83, v87, v98, 1, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) :|: 0 = 0
f_255(v79, v80, v81, v82, v83, v87, v98, 1, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) -> f_258(v79, v80, v81, v82, v83, v87, v98, 1, v133, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8, 2) :|: v133 = 1 + v87 && 2 <= v133
f_258(v79, v80, v81, v82, v83, v87, v98, 1, v133, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8, 2) -> f_261(v79, v80, v81, v82, v83, v87, v98, 1, v133, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8, 2) :|: TRUE
f_261(v79, v80, v81, v82, v83, v87, v98, 1, v133, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8, 2) -> f_264(v79, v80, v81, v82, v83, v87, v98, 1, v133, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8, 2) :|: TRUE
f_264(v79, v80, v81, v82, v83, v87, v98, 1, v133, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8, 2) -> f_234(v79, v80, v81, v82, v83, v87, v98, 1, v133, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) :|: v79 <= v87 && 0 <= v79 && 0 <= v80 && 1 <= v81 && 1 <= v82 && 1 <= v83 && 0 <= v87 && 1 <= v133 && 1 <= v88 && 1 <= v89 && 1 <= v90 && 4 <= v91 && 8 <= v92 && 8 <= v93 && 8 <= v94 && 8 <= v95 && 8 <= v96 && v88 <= v91 && v89 <= v92 && v90 <= v93 && v81 <= v94 && v82 <= v95 && v83 <= v96
f_234(v79, v80, v81, v82, v83, v84, v85, 1, v87, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) -> f_237(v79, v80, v81, v82, v83, v87, v85, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) :|: 0 = 0
Combined rules. Obtained 2 rulesP rules:
f_237(v79:0, v80:0, v81:0, v82:0, v83:0, v87:0, v85:0, 1, v84:0, v88:0, v91:0, v89:0, v92:0, v90:0, v93:0, v94:0, v95:0, v96:0, 0, 3, 7, 4, 8) -> f_237(v79:0, v80:0, v81:0, v82:0, v83:0, 1 + v87:0, v98:0, 1, v87:0, v88:0, v91:0, v89:0, v92:0, v90:0, v93:0, v94:0, v95:0, v96:0, 0, 3, 7, 4, 8) :|: v87:0 > 0 && v79:0 > -1 && v87:0 >= v79:0 && v80:0 > -1 && v81:0 > 0 && v82:0 > 0 && v83:0 > 0 && v88:0 > 0 && v89:0 > 0 && v90:0 > 0 && v91:0 > 3 && v92:0 > 7 && v93:0 > 7 && v94:0 > 7 && v95:0 > 7 && v96:0 > 7 && v98:0 < 0 && v91:0 >= v88:0 && v92:0 >= v89:0 && v93:0 >= v90:0 && v94:0 >= v81:0 && v96:0 >= v83:0 && v95:0 >= v82:0
f_237(v79:0, v80:0, v81:0, v82:0, v83:0, v87:0, v85:0, 1, v84:0, v88:0, v91:0, v89:0, v92:0, v90:0, v93:0, v94:0, v95:0, v96:0, 0, 3, 7, 4, 8) -> f_237(v79:0, v80:0, v81:0, v82:0, v83:0, 1 + v87:0, v98:0, 1, v87:0, v88:0, v91:0, v89:0, v92:0, v90:0, v93:0, v94:0, v95:0, v96:0, 0, 3, 7, 4, 8) :|: v87:0 > 0 && v79:0 > -1 && v87:0 >= v79:0 && v80:0 > -1 && v81:0 > 0 && v82:0 > 0 && v83:0 > 0 && v88:0 > 0 && v89:0 > 0 && v90:0 > 0 && v91:0 > 3 && v92:0 > 7 && v93:0 > 7 && v94:0 > 7 && v95:0 > 7 && v96:0 > 7 && v98:0 > 0 && v91:0 >= v88:0 && v92:0 >= v89:0 && v93:0 >= v90:0 && v94:0 >= v81:0 && v96:0 >= v83:0 && v95:0 >= v82:0
Filtered unneeded arguments:
   f_237(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23) -> f_237(x1, x2, x3, x4, x5, x6, x10, x11, x12, x13, x14, x15, x16, x17, x18)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_237(v79:0, v80:0, v81:0, v82:0, v83:0, v87:0, v88:0, v91:0, v89:0, v92:0, v90:0, v93:0, v94:0, v95:0, v96:0) -> f_237(v79:0, v80:0, v81:0, v82:0, v83:0, 1 + v87:0, v88:0, v91:0, v89:0, v92:0, v90:0, v93:0, v94:0, v95:0, v96:0) :|: v79:0 > -1 && v87:0 > 0 && v87:0 >= v79:0 && v80:0 > -1 && v81:0 > 0 && v82:0 > 0 && v83:0 > 0 && v88:0 > 0 && v89:0 > 0 && v90:0 > 0 && v91:0 > 3 && v92:0 > 7 && v93:0 > 7 && v94:0 > 7 && v95:0 > 7 && v96:0 > 7 && v91:0 >= v88:0 && v92:0 >= v89:0 && v93:0 >= v90:0 && v94:0 >= v81:0 && v95:0 >= v82:0 && v96:0 >= v83:0

----------------------------------------

(35)
Obligation:
Rules:
f_237(v79:0, v80:0, v81:0, v82:0, v83:0, v87:0, v88:0, v91:0, v89:0, v92:0, v90:0, v93:0, v94:0, v95:0, v96:0) -> f_237(v79:0, v80:0, v81:0, v82:0, v83:0, 1 + v87:0, v88:0, v91:0, v89:0, v92:0, v90:0, v93:0, v94:0, v95:0, v96:0) :|: v79:0 > -1 && v87:0 > 0 && v87:0 >= v79:0 && v80:0 > -1 && v81:0 > 0 && v82:0 > 0 && v83:0 > 0 && v88:0 > 0 && v89:0 > 0 && v90:0 > 0 && v91:0 > 3 && v92:0 > 7 && v93:0 > 7 && v94:0 > 7 && v95:0 > 7 && v96:0 > 7 && v91:0 >= v88:0 && v92:0 >= v89:0 && v93:0 >= v90:0 && v94:0 >= v81:0 && v95:0 >= v82:0 && v96:0 >= v83:0

----------------------------------------

(36) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(37)
Obligation:
Rules:
f_237(v79:0:0, v80:0:0, v81:0:0, v82:0:0, v83:0:0, v87:0:0, v88:0:0, v91:0:0, v89:0:0, v92:0:0, v90:0:0, v93:0:0, v94:0:0, v95:0:0, v96:0:0) -> f_237(v79:0:0, v80:0:0, v81:0:0, v82:0:0, v83:0:0, 1 + v87:0:0, v88:0:0, v91:0:0, v89:0:0, v92:0:0, v90:0:0, v93:0:0, v94:0:0, v95:0:0, v96:0:0) :|: v95:0:0 >= v82:0:0 && v96:0:0 >= v83:0:0 && v94:0:0 >= v81:0:0 && v93:0:0 >= v90:0:0 && v92:0:0 >= v89:0:0 && v91:0:0 >= v88:0:0 && v96:0:0 > 7 && v95:0:0 > 7 && v94:0:0 > 7 && v93:0:0 > 7 && v92:0:0 > 7 && v91:0:0 > 3 && v90:0:0 > 0 && v89:0:0 > 0 && v88:0:0 > 0 && v83:0:0 > 0 && v82:0:0 > 0 && v81:0:0 > 0 && v80:0:0 > -1 && v87:0:0 >= v79:0:0 && v87:0:0 > 0 && v79:0:0 > -1

----------------------------------------

(38) SEGraph to IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 126 rulesP rules:
f_139 -> f_140(v1, v2, 3, 1, 4) :|: 1 <= v1 && v2 = 3 + v1 && 4 <= v2
f_140(v1, v2, 3, 1, 4) -> f_141(v1, v3, v2, v4, 3, 7, 1, 4, 8) :|: 1 <= v3 && v4 = 7 + v3 && 8 <= v4
f_141(v1, v3, v2, v4, 3, 7, 1, 4, 8) -> f_142(v1, v3, v5, v2, v4, v6, 3, 7, 1, 4, 8) :|: 1 <= v5 && v6 = 7 + v5 && 8 <= v6
f_142(v1, v3, v5, v2, v4, v6, 3, 7, 1, 4, 8) -> f_143(v1, v3, v5, v2, v4, v6, 0, 3, 7, 1, 4, 8) :|: TRUE
f_143(v1, v3, v5, v2, v4, v6, 0, 3, 7, 1, 4, 8) -> f_144(v1, v3, v5, v2, v4, v6, 0, 3, 7, 1, 4, 8) :|: TRUE
f_144(v1, v3, v5, v2, v4, v6, 0, 3, 7, 1, 4, 8) -> f_145(v1, v3, v5, v2, v4, v6, 0, 3, 7, 1, 4, 8) :|: TRUE
f_145(v1, v3, v5, v2, v4, v6, 0, 3, 7, 1, 4, 8) -> f_146(v1, v3, v5, v7, v2, v4, v6, 0, 3, 7, 1, 4, 8) :|: TRUE
f_146(v1, v3, v5, v7, v2, v4, v6, 0, 3, 7, 1, 4, 8) -> f_147(v1, v3, v5, v7, v9, v2, v4, v6, 0, 3, 7, 1, 4, 8) :|: TRUE
f_147(v1, v3, v5, v7, v9, v2, v4, v6, 0, 3, 7, 1, 4, 8) -> f_148(v7, v9, v1, v2, v3, v4, v5, v6, 0, 3, 7, 1, 4, 8) :|: 0 = 0
f_148(v7, v9, v1, v2, v3, v4, v5, v6, 0, 3, 7, 1, 4, 8) -> f_149(v7, v9, v11, v1, v2, v3, v4, v5, v6, v12, 0, 3, 7, 1, 4, 8) :|: 1 <= v11 && v12 = 7 + v11 && 8 <= v12
f_149(v7, v9, v11, v1, v2, v3, v4, v5, v6, v12, 0, 3, 7, 1, 4, 8) -> f_150(v7, v9, v11, v13, v1, v2, v3, v4, v5, v6, v12, v14, 0, 3, 7, 1, 4, 8) :|: 1 <= v13 && v14 = 7 + v13 && 8 <= v14
f_150(v7, v9, v11, v13, v1, v2, v3, v4, v5, v6, v12, v14, 0, 3, 7, 1, 4, 8) -> f_151(v7, v9, v11, v13, v15, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) :|: 1 <= v15 && v16 = 7 + v15 && 8 <= v16
f_151(v7, v9, v11, v13, v15, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) -> f_152(v7, v9, v11, v13, v15, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) :|: TRUE
f_152(v7, v9, v11, v13, v15, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) -> f_153(v7, v9, v11, v13, v15, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) :|: TRUE
f_153(v7, v9, v11, v13, v15, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) -> f_154(v7, v9, v11, v13, v15, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) :|: TRUE
f_154(v7, v9, v11, v13, v15, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) -> f_155(v7, v9, v11, v13, v15, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) :|: TRUE
f_155(v7, v9, v11, v13, v15, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) -> f_156(v7, v9, v11, v13, v15, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) :|: TRUE
f_156(v7, v9, v11, v13, v15, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) -> f_157(v7, v9, v11, v13, v15, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) :|: 0 = 0
f_157(v7, v9, v11, v13, v15, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) -> f_158(v7, v9, v11, v13, v15, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) :|: TRUE
f_158(v7, v9, v11, v13, v15, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) -> f_159(v7, v9, v11, v13, v15, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) :|: TRUE
f_159(v7, v9, v11, v13, v15, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) -> f_160(v7, v9, v11, v13, v15, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) :|: 0 = 0
f_160(v7, v9, v11, v13, v15, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) -> f_161(v7, v9, v11, v13, v15, v20, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) :|: TRUE
f_161(v7, v9, v11, v13, v15, v20, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) -> f_162(v7, v9, v11, v13, v15, v20, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) :|: 0 = 0
f_162(v7, v9, v11, v13, v15, v20, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) -> f_163(v7, v9, v11, v13, v15, v20, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) :|: v20 != 0
f_162(v7, v9, v11, v13, v15, v20, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) -> f_164(v7, v9, v11, v13, v15, 0, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) :|: v20 = 0
f_163(v7, v9, v11, v13, v15, v20, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) -> f_165(v7, v9, v11, v13, v15, v20, 1, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 4, 8) :|: 0 = 0
f_164(v7, v9, v11, v13, v15, 0, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) -> f_166(v7, v9, v11, v13, v15, 0, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) :|: 0 = 0
f_165(v7, v9, v11, v13, v15, v20, 1, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 4, 8) -> f_167(v7, v9, v11, v13, v15, v20, 1, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 4, 8) :|: TRUE
f_166(v7, v9, v11, v13, v15, 0, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) -> f_168(v7, v9, v11, v13, v15, 0, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) :|: TRUE
f_167(v7, v9, v11, v13, v15, v20, 1, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 4, 8) -> f_169(v7, v9, v11, v13, v15, v20, 1, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 4, 8) :|: 0 = 0
f_168(v7, v9, v11, v13, v15, 0, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) -> f_170(v7, v9, v11, v13, v15, 0, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) :|: TRUE
f_169(v7, v9, v11, v13, v15, v20, 1, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 4, 8) -> f_171(v7, v9, v11, v13, v15, v20, 1, v22, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 4, 8) :|: v22 = 1 + v7 && 1 <= v22
f_170(v7, v9, v11, v13, v15, 0, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) -> f_172(v7, v9, v11, v13, v15, 0, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) :|: 0 = 0
f_171(v7, v9, v11, v13, v15, v20, 1, v22, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 4, 8) -> f_173(v7, v9, v11, v13, v15, v20, 1, v22, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 4, 8) :|: TRUE
f_172(v7, v9, v11, v13, v15, 0, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) -> f_174(v7, v9, v11, v13, v15, 0, v24, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) :|: v24 = 1 + v9 && 1 <= v24
f_173(v7, v9, v11, v13, v15, v20, 1, v22, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 4, 8) -> f_175(v7, v9, v11, v13, v15, v20, 1, v22, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 4, 8) :|: TRUE
f_174(v7, v9, v11, v13, v15, 0, v24, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) -> f_176(v7, v9, v11, v13, v15, 0, v24, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) :|: TRUE
f_175(v7, v9, v11, v13, v15, v20, 1, v22, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 4, 8) -> f_205(v7, v9, v11, v13, v15, v7, v20, 1, v22, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 4, 8) :|: TRUE
f_176(v7, v9, v11, v13, v15, 0, v24, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) -> f_178(v7, v9, v11, v13, v15, 0, v24, v26, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) :|: TRUE
f_178(v7, v9, v11, v13, v15, 0, v24, v26, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) -> f_180(v7, v9, v11, v13, v15, 0, v24, v26, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) :|: 0 = 0
f_180(v7, v9, v11, v13, v15, 0, v24, v26, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) -> f_182(v7, v9, v11, v13, v15, 0, v24, v26, v30, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) :|: v30 = 1 + v7 && 1 <= v30
f_182(v7, v9, v11, v13, v15, 0, v24, v26, v30, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) -> f_185(v7, v9, v11, v13, v15, 0, v24, v26, v30, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) :|: TRUE
f_185(v7, v9, v11, v13, v15, 0, v24, v26, v30, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) -> f_188(v7, v9, v11, v13, v15, 0, v24, v26, v30, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) :|: TRUE
f_188(v7, v9, v11, v13, v15, 0, v24, v26, v30, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) -> f_191(v7, v9, v11, v13, v15, 0, v24, v26, v30, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) :|: 0 = 0
f_191(v7, v9, v11, v13, v15, 0, v24, v26, v30, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) -> f_194(v7, v9, v11, v13, v15, 0, v24, v26, v30, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) :|: v26 != 0
f_191(v7, v9, v11, v13, v15, 0, v24, v26, v30, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) -> f_195(v7, v9, v11, v13, v15, 0, v24, v30, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) :|: v26 = 0
f_194(v7, v9, v11, v13, v15, 0, v24, v26, v30, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) -> f_198(v7, v9, v11, v13, v15, 0, v24, v26, v30, 1, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 4, 8) :|: 0 = 0
f_195(v7, v9, v11, v13, v15, 0, v24, v30, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) -> f_199(v7, v9, v11, v13, v15, 0, v24, v30, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) :|: 0 = 0
f_198(v7, v9, v11, v13, v15, 0, v24, v26, v30, 1, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 4, 8) -> f_202(v7, v9, v11, v13, v15, 0, v24, v26, v30, 1, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 4, 8) :|: TRUE
f_199(v7, v9, v11, v13, v15, 0, v24, v30, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) -> f_203(v7, v9, v11, v13, v15, 0, v24, v30, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) :|: TRUE
f_202(v7, v9, v11, v13, v15, 0, v24, v26, v30, 1, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 4, 8) -> f_206(v7, v9, v11, v13, v15, 0, v24, v26, v30, 1, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 4, 8) :|: TRUE
f_203(v7, v9, v11, v13, v15, 0, v24, v30, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) -> f_207(v7, v9, v11, v13, v15, 0, v24, v30, v55, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) :|: TRUE
f_205(v36, v37, v38, v39, v40, v41, v42, 1, v44, v45, v48, v46, v49, v47, v50, v51, v52, v53, 0, 3, 7, 4, 8) -> f_234(v36, v37, v38, v39, v40, v41, v42, 1, v44, v45, v48, v46, v49, v47, v50, v51, v52, v53, 0, 3, 7, 4, 8) :|: TRUE
f_206(v7, v9, v11, v13, v15, 0, v24, v26, v30, 1, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 4, 8) -> f_245(v7, v9, v11, v13, v15, 0, v9, v24, v26, v7, v30, 1, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 4, 8) :|: TRUE
f_207(v7, v9, v11, v13, v15, 0, v24, v30, v55, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) -> f_210(v1, v3, v5, v7, v9, v55, v2, v4, v6, 3, 7, 1, 4, 8, 0) :|: 0 = 0
f_234(v79, v80, v81, v82, v83, v84, v85, 1, v87, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) -> f_237(v79, v80, v81, v82, v83, v87, v85, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) :|: 0 = 0
f_237(v79, v80, v81, v82, v83, v87, v85, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) -> f_240(v79, v80, v81, v82, v83, v87, v98, v85, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) :|: TRUE
f_240(v79, v80, v81, v82, v83, v87, v98, v85, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) -> f_243(v79, v80, v81, v82, v83, v87, v98, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) :|: 0 = 0
f_243(v79, v80, v81, v82, v83, v87, v98, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) -> f_246(v79, v80, v81, v82, v83, v87, v98, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) :|: v98 != 0
f_243(v79, v80, v81, v82, v83, v87, v98, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) -> f_247(v79, v80, v81, v82, v83, v87, 0, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 4, 8) :|: v98 = 0
f_245(v100, v101, v102, v103, v104, 0, v106, v107, v108, v109, v110, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_248(v100, v101, v102, v103, v104, 0, v121, v107, v108, v109, v110, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: TRUE
f_246(v79, v80, v81, v82, v83, v87, v98, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) -> f_249(v79, v80, v81, v82, v83, v87, v98, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) :|: 0 = 0
f_247(v79, v80, v81, v82, v83, v87, 0, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 4, 8) -> f_250(v79, v80, v81, v82, v83, v87, 0, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8) :|: 0 = 0
f_248(v100, v101, v102, v103, v104, 0, v121, v107, v108, v109, v110, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_251(v100, v101, v102, v103, v104, 0, v121, v123, v108, v109, v110, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: v123 = 1 + v121 && 1 <= v123
f_249(v79, v80, v81, v82, v83, v87, v98, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) -> f_252(v79, v80, v81, v82, v83, v87, v98, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) :|: TRUE
f_250(v79, v80, v81, v82, v83, v87, 0, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8) -> f_253(v79, v80, v81, v82, v83, v87, 0, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8) :|: TRUE
f_251(v100, v101, v102, v103, v104, 0, v121, v123, v108, v109, v110, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_254(v100, v101, v102, v103, v104, 0, v121, v123, v108, v109, v110, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: TRUE
f_252(v79, v80, v81, v82, v83, v87, v98, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) -> f_255(v79, v80, v81, v82, v83, v87, v98, 1, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) :|: 0 = 0
f_253(v79, v80, v81, v82, v83, v87, 0, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8) -> f_256(v79, v80, v81, v82, v83, v87, 0, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8) :|: TRUE
f_254(v100, v101, v102, v103, v104, 0, v121, v123, v108, v109, v110, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_257(v100, v101, v102, v103, v104, 0, v121, v123, v131, v109, v110, v108, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: TRUE
f_255(v79, v80, v81, v82, v83, v87, v98, 1, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) -> f_258(v79, v80, v81, v82, v83, v87, v98, 1, v133, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8, 2) :|: v133 = 1 + v87 && 2 <= v133
f_256(v79, v80, v81, v82, v83, v87, 0, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8) -> f_259(v79, v80, v81, v82, v83, v87, 0, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8) :|: 0 = 0
f_257(v100, v101, v102, v103, v104, 0, v121, v123, v131, v109, v110, v108, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_260(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v110, v108, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: TRUE
f_258(v79, v80, v81, v82, v83, v87, v98, 1, v133, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8, 2) -> f_261(v79, v80, v81, v82, v83, v87, v98, 1, v133, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8, 2) :|: TRUE
f_259(v79, v80, v81, v82, v83, v87, 0, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8) -> f_262(v79, v80, v81, v82, v83, v87, 0, v84, v137, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8) :|: v137 = 1 + v80 && 1 <= v137
f_260(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v110, v108, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_263(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, v108, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: v138 = 1 + v134 && 1 <= v138
f_261(v79, v80, v81, v82, v83, v87, v98, 1, v133, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8, 2) -> f_264(v79, v80, v81, v82, v83, v87, v98, 1, v133, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8, 2) :|: TRUE
f_262(v79, v80, v81, v82, v83, v87, 0, v84, v137, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8) -> f_265(v79, v80, v81, v82, v83, v87, 0, v84, v137, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8) :|: TRUE
f_263(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, v108, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_266(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, v108, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: TRUE
f_264(v79, v80, v81, v82, v83, v87, v98, 1, v133, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8, 2) -> f_234(v79, v80, v81, v82, v83, v87, v98, 1, v133, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) :|: TRUE
f_265(v79, v80, v81, v82, v83, v87, 0, v84, v137, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8) -> f_267(v79, v80, v81, v82, v83, v87, 0, v84, v137, v160, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8) :|: TRUE
f_266(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, v108, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_268(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, v108, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: TRUE
f_267(v79, v80, v81, v82, v83, v87, 0, v84, v137, v160, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8) -> f_269(v79, v80, v81, v82, v83, v87, 0, v84, v137, v160, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8) :|: 0 = 0
f_268(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, v108, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_270(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: 0 = 0
f_269(v79, v80, v81, v82, v83, v87, 0, v84, v137, v160, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8) -> f_271(v79, v80, v81, v82, v83, v87, 0, v84, v137, v160, v163, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8, 2) :|: v163 = 1 + v87 && 2 <= v163
f_270(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_272(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: v131 != 0
f_270(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_273(v100, v101, v102, v103, v104, 0, v121, v123, v134, v138, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: v131 = 0
f_271(v79, v80, v81, v82, v83, v87, 0, v84, v137, v160, v163, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8, 2) -> f_274(v79, v80, v81, v82, v83, v87, 0, v84, v137, v160, v163, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8, 2) :|: TRUE
f_272(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_275(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: 0 = 0
f_273(v100, v101, v102, v103, v104, 0, v121, v123, v134, v138, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_276(v100, v101, v102, v103, v104, 0, v121, v123, v134, v138, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 1, 4, 8) :|: 0 = 0
f_274(v79, v80, v81, v82, v83, v87, 0, v84, v137, v160, v163, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8, 2) -> f_277(v79, v80, v81, v82, v83, v87, 0, v84, v137, v160, v163, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8, 2) :|: TRUE
f_275(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_278(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: TRUE
f_276(v100, v101, v102, v103, v104, 0, v121, v123, v134, v138, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 1, 4, 8) -> f_279(v100, v101, v102, v103, v104, 0, v121, v123, v134, v138, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 1, 4, 8) :|: TRUE
f_277(v79, v80, v81, v82, v83, v87, 0, v84, v137, v160, v163, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8, 2) -> f_280(v79, v80, v81, v82, v83, v87, 0, v84, v137, v160, v163, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8, 2) :|: 0 = 0
f_278(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_281(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: TRUE
f_279(v100, v101, v102, v103, v104, 0, v121, v123, v134, v138, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 1, 4, 8) -> f_282(v100, v101, v102, v103, v104, 0, v121, v123, v134, v138, v192, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 1, 4, 8) :|: TRUE
f_280(v79, v80, v81, v82, v83, v87, 0, v84, v137, v160, v163, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8, 2) -> f_283(v79, v80, v81, v82, v83, v87, 0, v84, v137, v160, v163, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8, 2) :|: v160 != 0
f_280(v79, v80, v81, v82, v83, v87, 0, v84, v137, v160, v163, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8, 2) -> f_284(v79, v80, v81, v82, v83, v87, 0, v84, v137, v163, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8, 2) :|: v160 = 0
f_281(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_245(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: TRUE
f_282(v100, v101, v102, v103, v104, 0, v121, v123, v134, v138, v192, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 1, 4, 8) -> f_285(v112, v113, v114, v100, v101, v192, v115, v116, v117, 3, 7, 0, 1, 4, 8) :|: 0 = 0
f_283(v79, v80, v81, v82, v83, v87, 0, v84, v137, v160, v163, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8, 2) -> f_286(v79, v80, v81, v82, v83, v87, 0, v84, v137, v160, v163, 1, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 4, 8, 2) :|: 0 = 0
f_284(v79, v80, v81, v82, v83, v87, 0, v84, v137, v163, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8, 2) -> f_287(v79, v80, v81, v82, v83, v87, 0, v84, v137, v163, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8, 2) :|: 0 = 0
f_286(v79, v80, v81, v82, v83, v87, 0, v84, v137, v160, v163, 1, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 4, 8, 2) -> f_288(v79, v80, v81, v82, v83, v87, 0, v84, v137, v160, v163, 1, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 4, 8, 2) :|: TRUE
f_287(v79, v80, v81, v82, v83, v87, 0, v84, v137, v163, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8, 2) -> f_289(v79, v80, v81, v82, v83, v87, 0, v84, v137, v163, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8, 2) :|: TRUE
f_288(v79, v80, v81, v82, v83, v87, 0, v84, v137, v160, v163, 1, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 4, 8, 2) -> f_307(v79, v80, v81, v82, v83, v87, 0, v84, v80, v137, v160, v87, v163, 1, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 4, 8) :|: TRUE
f_289(v79, v80, v81, v82, v83, v87, 0, v84, v137, v163, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8, 2) -> f_291(v79, v80, v81, v82, v83, v87, 0, v84, v137, v163, v227, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8, 2) :|: TRUE
f_291(v79, v80, v81, v82, v83, v87, 0, v84, v137, v163, v227, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8, 2) -> f_293(v88, v89, v90, v79, v80, v227, v91, v92, v93, 3, 7, 0, 1, 4, 8) :|: 0 = 0
f_307(v253, v254, v255, v256, v257, v258, 0, v260, v261, v262, v263, v264, v265, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_308(v253, v254, v255, v256, v257, v258, 0, v260, v261, v262, v263, v264, v265, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: TRUE
f_308(v253, v254, v255, v256, v257, v258, 0, v260, v261, v262, v263, v264, v265, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_309(v253, v254, v255, v256, v257, v258, 0, v260, v290, v262, v263, v264, v265, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: TRUE
f_309(v253, v254, v255, v256, v257, v258, 0, v260, v290, v262, v263, v264, v265, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_310(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v263, v264, v265, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: v292 = 1 + v290 && 1 <= v292
f_310(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v263, v264, v265, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_311(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v263, v264, v265, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: TRUE
f_311(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v263, v264, v265, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_312(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v264, v265, v263, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: TRUE
f_312(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v264, v265, v263, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_313(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v265, v263, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: TRUE
f_313(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v265, v263, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_314(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, v263, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: v298 = 1 + v296 && 1 <= v298
f_314(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, v263, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_315(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, v263, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: TRUE
f_315(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, v263, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_316(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, v263, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: TRUE
f_316(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, v263, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_317(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: 0 = 0
f_317(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_318(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: v294 != 0
f_317(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_319(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v296, v298, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: v294 = 0
f_318(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_320(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: 0 = 0
f_319(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v296, v298, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_321(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v296, v298, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 1, 4, 8) :|: 0 = 0
f_320(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_322(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: TRUE
f_321(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v296, v298, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 1, 4, 8) -> f_323(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v296, v298, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 1, 4, 8) :|: TRUE
f_322(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_307(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: TRUE
f_323(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v296, v298, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 1, 4, 8) -> f_324(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v296, v298, v352, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 1, 4, 8) :|: TRUE
f_324(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v296, v298, v352, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 1, 4, 8) -> f_325(v267, v268, v269, v253, v254, v352, v270, v271, v272, 3, 7, 0, 1, 4, 8) :|: 0 = 0
Combined rules. Obtained 16 rulesP rules:
f_243(v79:0, v80:0, v81:0, v82:0, v83:0, v87:0, 0, 1, v84:0, v88:0, v91:0, v89:0, v92:0, v90:0, v93:0, v94:0, v95:0, v96:0, 0, 3, 7, 4, 8) -> f_293(v88:0, v89:0, v90:0, v79:0, v80:0, v227:0, v91:0, v92:0, v93:0, 3, 7, 0, 1, 4, 8) :|: v87:0 > 0 && v80:0 > -1
f_139 -> f_243(v7:0, v9:0, v11:0, v13:0, v15:0, 1 + v7:0, v98:0, 1, v7:0, v1:0, 3 + v1:0, v3:0, 7 + v3:0, v5:0, 7 + v5:0, 7 + v11:0, 7 + v13:0, 7 + v15:0, 0, 3, 7, 4, 8) :|: v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v11:0 > 0 && v13:0 > 0 && v15:0 > 0 && v7:0 > -1 && v20:0 < 0
f_139 -> f_243(v7:0, v9:0, v11:0, v13:0, v15:0, 1 + v7:0, v98:0, 1, v7:0, v1:0, 3 + v1:0, v3:0, 7 + v3:0, v5:0, 7 + v5:0, 7 + v11:0, 7 + v13:0, 7 + v15:0, 0, 3, 7, 4, 8) :|: v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v11:0 > 0 && v13:0 > 0 && v15:0 > 0 && v7:0 > -1 && v20:0 > 0
f_243(v79:0, v80:0, v81:0, v82:0, v83:0, v87:0, 0, 1, v84:0, v88:0, v91:0, v89:0, v92:0, v90:0, v93:0, v94:0, v95:0, v96:0, 0, 3, 7, 4, 8) -> f_317(v79:0, v80:0, v81:0, v82:0, v83:0, v87:0, 0, v84:0, v290:0, 1 + v290:0, v294:0, v296:0, 1 + v296:0, 1, v88:0, v91:0, v89:0, v92:0, v90:0, v93:0, v94:0, v95:0, v96:0, 3, 7, 4, 8) :|: v80:0 > -1 && v87:0 > 0 && v160:0 < 0 && v296:0 > -1 && v290:0 > -1
f_243(v79:0, v80:0, v81:0, v82:0, v83:0, v87:0, 0, 1, v84:0, v88:0, v91:0, v89:0, v92:0, v90:0, v93:0, v94:0, v95:0, v96:0, 0, 3, 7, 4, 8) -> f_317(v79:0, v80:0, v81:0, v82:0, v83:0, v87:0, 0, v84:0, v290:0, 1 + v290:0, v294:0, v296:0, 1 + v296:0, 1, v88:0, v91:0, v89:0, v92:0, v90:0, v93:0, v94:0, v95:0, v96:0, 3, 7, 4, 8) :|: v80:0 > -1 && v87:0 > 0 && v160:0 > 0 && v296:0 > -1 && v290:0 > -1
f_139 -> f_270(v7:0, v9:0, v11:0, v13:0, v15:0, 0, v121:0, 1 + v121:0, v131:0, v134:0, 1 + v134:0, 1, v1:0, 3 + v1:0, v3:0, 7 + v3:0, v5:0, 7 + v5:0, 7 + v11:0, 7 + v13:0, 7 + v15:0, 3, 7, 4, 8) :|: v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v11:0 > 0 && v13:0 > 0 && v15:0 > 0 && v9:0 > -1 && v7:0 > -1 && v26:0 < 0 && v134:0 > -1 && v121:0 > -1
f_139 -> f_270(v7:0, v9:0, v11:0, v13:0, v15:0, 0, v121:0, 1 + v121:0, v131:0, v134:0, 1 + v134:0, 1, v1:0, 3 + v1:0, v3:0, 7 + v3:0, v5:0, 7 + v5:0, 7 + v11:0, 7 + v13:0, 7 + v15:0, 3, 7, 4, 8) :|: v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v11:0 > 0 && v13:0 > 0 && v15:0 > 0 && v9:0 > -1 && v7:0 > -1 && v26:0 > 0 && v134:0 > -1 && v121:0 > -1
f_317(v253:0, v254:0, v255:0, v256:0, v257:0, v258:0, 0, v260:0, v290:0, v292:0, v294:0, v296:0, v298:0, 1, v267:0, v270:0, v268:0, v271:0, v269:0, v272:0, v273:0, v274:0, v275:0, 3, 7, 4, 8) -> f_317(v253:0, v254:0, v255:0, v256:0, v257:0, v258:0, 0, v260:0, v290:1, 1 + v290:1, v294:1, v296:1, 1 + v296:1, 1, v267:0, v270:0, v268:0, v271:0, v269:0, v272:0, v273:0, v274:0, v275:0, 3, 7, 4, 8) :|: v290:1 > -1 && v294:0 < 0 && v296:1 > -1
f_317(v253:0, v254:0, v255:0, v256:0, v257:0, v258:0, 0, v260:0, v290:0, v292:0, v294:0, v296:0, v298:0, 1, v267:0, v270:0, v268:0, v271:0, v269:0, v272:0, v273:0, v274:0, v275:0, 3, 7, 4, 8) -> f_317(v253:0, v254:0, v255:0, v256:0, v257:0, v258:0, 0, v260:0, v290:1, 1 + v290:1, v294:1, v296:1, 1 + v296:1, 1, v267:0, v270:0, v268:0, v271:0, v269:0, v272:0, v273:0, v274:0, v275:0, 3, 7, 4, 8) :|: v290:1 > -1 && v294:0 > 0 && v296:1 > -1
f_317(v253:0, v254:0, v255:0, v256:0, v257:0, v258:0, 0, v260:0, v290:0, v292:0, 0, v296:0, v298:0, 1, v267:0, v270:0, v268:0, v271:0, v269:0, v272:0, v273:0, v274:0, v275:0, 3, 7, 4, 8) -> f_325(v267:0, v268:0, v269:0, v253:0, v254:0, v352:0, v270:0, v271:0, v272:0, 3, 7, 0, 1, 4, 8) :|: TRUE
f_139 -> f_210(v1:0, v3:0, v5:0, v7:0, v9:0, v55:0, 3 + v1:0, 7 + v3:0, 7 + v5:0, 3, 7, 1, 4, 8, 0) :|: v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v11:0 > 0 && v13:0 > 0 && v15:0 > 0 && v7:0 > -1 && v9:0 > -1
f_270(v100:0, v101:0, v102:0, v103:0, v104:0, 0, v121:0, v123:0, 0, v134:0, v138:0, 1, v112:0, v115:0, v113:0, v116:0, v114:0, v117:0, v118:0, v119:0, v120:0, 3, 7, 4, 8) -> f_285(v112:0, v113:0, v114:0, v100:0, v101:0, v192:0, v115:0, v116:0, v117:0, 3, 7, 0, 1, 4, 8) :|: TRUE
f_270(v100:0, v101:0, v102:0, v103:0, v104:0, 0, v121:0, v123:0, v131:0, v134:0, v138:0, 1, v112:0, v115:0, v113:0, v116:0, v114:0, v117:0, v118:0, v119:0, v120:0, 3, 7, 4, 8) -> f_270(v100:0, v101:0, v102:0, v103:0, v104:0, 0, v121:1, 1 + v121:1, v131:1, v134:1, 1 + v134:1, 1, v112:0, v115:0, v113:0, v116:0, v114:0, v117:0, v118:0, v119:0, v120:0, 3, 7, 4, 8) :|: v121:1 > -1 && v131:0 < 0 && v134:1 > -1
f_270(v100:0, v101:0, v102:0, v103:0, v104:0, 0, v121:0, v123:0, v131:0, v134:0, v138:0, 1, v112:0, v115:0, v113:0, v116:0, v114:0, v117:0, v118:0, v119:0, v120:0, 3, 7, 4, 8) -> f_270(v100:0, v101:0, v102:0, v103:0, v104:0, 0, v121:1, 1 + v121:1, v131:1, v134:1, 1 + v134:1, 1, v112:0, v115:0, v113:0, v116:0, v114:0, v117:0, v118:0, v119:0, v120:0, 3, 7, 4, 8) :|: v121:1 > -1 && v131:0 > 0 && v134:1 > -1
f_243(v79:0, v80:0, v81:0, v82:0, v83:0, v87:0, v98:0, 1, v84:0, v88:0, v91:0, v89:0, v92:0, v90:0, v93:0, v94:0, v95:0, v96:0, 0, 3, 7, 4, 8) -> f_243(v79:0, v80:0, v81:0, v82:0, v83:0, 1 + v87:0, v98:1, 1, v87:0, v88:0, v91:0, v89:0, v92:0, v90:0, v93:0, v94:0, v95:0, v96:0, 0, 3, 7, 4, 8) :|: v87:0 > 0 && v98:0 < 0
f_243(v79:0, v80:0, v81:0, v82:0, v83:0, v87:0, v98:0, 1, v84:0, v88:0, v91:0, v89:0, v92:0, v90:0, v93:0, v94:0, v95:0, v96:0, 0, 3, 7, 4, 8) -> f_243(v79:0, v80:0, v81:0, v82:0, v83:0, 1 + v87:0, v98:1, 1, v87:0, v88:0, v91:0, v89:0, v92:0, v90:0, v93:0, v94:0, v95:0, v96:0, 0, 3, 7, 4, 8) :|: v87:0 > 0 && v98:0 > 0
Filtered unneeded arguments:
   f_243(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23) -> f_243(x2, x6, x7)
   f_317(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27) -> f_317(x11)
   f_270(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25) -> f_270(x9)
Removed division, modulo operations, cleaned up constraints. Obtained 13 rules.P rules:
f_243(v80:0, v87:0, cons_0) -> f_293(v88:0, v89:0, v90:0, v79:0, v80:0, v227:0, v91:0, v92:0, v93:0, 3, 7, 0, 1, 4, 8) :|: v87:0 > 0 && v80:0 > -1 && cons_0 = 0
f_139 -> f_243(v9:0, 1 + v7:0, v98:0) :|: v7:0 > -1
f_243(v80:0, v87:0, cons_0) -> f_317(v294:0) :|: v80:0 > -1 && v87:0 > 0 && cons_0 = 0
f_139 -> f_270(v131:0) :|: TRUE
f_317(v294:0) -> f_317(v294:1) :|: v294:0 < 0
f_317(v294:0) -> f_317(v294:1) :|: v294:0 > 0
f_317(cons_0) -> f_325(v267:0, v268:0, v269:0, v253:0, v254:0, v352:0, v270:0, v271:0, v272:0, 3, 7, 0, 1, 4, 8) :|: TRUE && cons_0 = 0
f_139 -> f_210(v1:0, v3:0, v5:0, v7:0, v9:0, v55:0, 3 + v1:0, 7 + v3:0, 7 + v5:0, 3, 7, 1, 4, 8, 0) :|: v1:0 > 0 && v3:0 > 0 && v5:0 > 0 && v9:0 > -1 && v7:0 > -1
f_270(cons_0) -> f_285(v112:0, v113:0, v114:0, v100:0, v101:0, v192:0, v115:0, v116:0, v117:0, 3, 7, 0, 1, 4, 8) :|: TRUE && cons_0 = 0
f_270(v131:0) -> f_270(v131:1) :|: v131:0 < 0
f_270(v131:0) -> f_270(v131:1) :|: v131:0 > 0
f_243(v80:0, v87:0, v98:0) -> f_243(v80:0, 1 + v87:0, v98:1) :|: v87:0 > 0 && v98:0 < 0
f_243(v80:0, v87:0, v98:0) -> f_243(v80:0, 1 + v87:0, v98:1) :|: v87:0 > 0 && v98:0 > 0

----------------------------------------

(39)
Obligation:
Rules:
f_243(v80:0, v87:0, cons_0) -> f_293(v88:0, v89:0, v90:0, v79:0, v80:0, v227:0, v91:0, v92:0, v93:0, 3, 7, 0, 1, 4, 8) :|: v87:0 > 0 && v80:0 > -1 && cons_0 = 0
f_139 -> f_243(v9:0, 1 + v7:0, v98:0) :|: v7:0 > -1
f_243(x, x1, x2) -> f_317(x3) :|: x > -1 && x1 > 0 && x2 = 0
f_139 -> f_270(v131:0) :|: TRUE
f_317(v294:0) -> f_317(v294:1) :|: v294:0 < 0
f_317(x4) -> f_317(x5) :|: x4 > 0
f_317(x6) -> f_325(x7, x8, x9, x10, x11, x12, x13, x14, x15, 3, 7, 0, 1, 4, 8) :|: TRUE && x6 = 0
f_139 -> f_210(x16, x17, x18, x19, x20, x21, 3 + x16, 7 + x17, 7 + x18, 3, 7, 1, 4, 8, 0) :|: x16 > 0 && x17 > 0 && x18 > 0 && x20 > -1 && x19 > -1
f_270(x22) -> f_285(x23, x24, x25, x26, x27, x28, x29, x30, x31, 3, 7, 0, 1, 4, 8) :|: TRUE && x22 = 0
f_270(x32) -> f_270(x33) :|: x32 < 0
f_270(x34) -> f_270(x35) :|: x34 > 0
f_243(x36, x37, x38) -> f_243(x36, 1 + x37, x39) :|: x37 > 0 && x38 < 0
f_243(x40, x41, x42) -> f_243(x40, 1 + x41, x43) :|: x41 > 0 && x42 > 0
Start term: f_139

----------------------------------------

(40) IRSNoOverapproximation (EQUIVALENT)
Proof of non-termination is aborted since the IRSProblem over-approximates
----------------------------------------

(41)
MAYBE

----------------------------------------

(42) SEGraph to IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 126 rulesP rules:
f_139 -> f_140(v1, v2, 3, 1, 4) :|: 1 <= v1 && v2 = 3 + v1 && 4 <= v2
f_140(v1, v2, 3, 1, 4) -> f_141(v1, v3, v2, v4, 3, 7, 1, 4, 8) :|: 1 <= v3 && v4 = 7 + v3 && 8 <= v4
f_141(v1, v3, v2, v4, 3, 7, 1, 4, 8) -> f_142(v1, v3, v5, v2, v4, v6, 3, 7, 1, 4, 8) :|: 1 <= v5 && v6 = 7 + v5 && 8 <= v6
f_142(v1, v3, v5, v2, v4, v6, 3, 7, 1, 4, 8) -> f_143(v1, v3, v5, v2, v4, v6, 0, 3, 7, 1, 4, 8) :|: TRUE
f_143(v1, v3, v5, v2, v4, v6, 0, 3, 7, 1, 4, 8) -> f_144(v1, v3, v5, v2, v4, v6, 0, 3, 7, 1, 4, 8) :|: TRUE
f_144(v1, v3, v5, v2, v4, v6, 0, 3, 7, 1, 4, 8) -> f_145(v1, v3, v5, v2, v4, v6, 0, 3, 7, 1, 4, 8) :|: TRUE
f_145(v1, v3, v5, v2, v4, v6, 0, 3, 7, 1, 4, 8) -> f_146(v1, v3, v5, v7, v2, v4, v6, 0, 3, 7, 1, 4, 8) :|: TRUE
f_146(v1, v3, v5, v7, v2, v4, v6, 0, 3, 7, 1, 4, 8) -> f_147(v1, v3, v5, v7, v9, v2, v4, v6, 0, 3, 7, 1, 4, 8) :|: TRUE
f_147(v1, v3, v5, v7, v9, v2, v4, v6, 0, 3, 7, 1, 4, 8) -> f_148(v7, v9, v1, v2, v3, v4, v5, v6, 0, 3, 7, 1, 4, 8) :|: 0 = 0
f_148(v7, v9, v1, v2, v3, v4, v5, v6, 0, 3, 7, 1, 4, 8) -> f_149(v7, v9, v11, v1, v2, v3, v4, v5, v6, v12, 0, 3, 7, 1, 4, 8) :|: 1 <= v11 && v12 = 7 + v11 && 8 <= v12
f_149(v7, v9, v11, v1, v2, v3, v4, v5, v6, v12, 0, 3, 7, 1, 4, 8) -> f_150(v7, v9, v11, v13, v1, v2, v3, v4, v5, v6, v12, v14, 0, 3, 7, 1, 4, 8) :|: 1 <= v13 && v14 = 7 + v13 && 8 <= v14
f_150(v7, v9, v11, v13, v1, v2, v3, v4, v5, v6, v12, v14, 0, 3, 7, 1, 4, 8) -> f_151(v7, v9, v11, v13, v15, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) :|: 1 <= v15 && v16 = 7 + v15 && 8 <= v16
f_151(v7, v9, v11, v13, v15, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) -> f_152(v7, v9, v11, v13, v15, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) :|: TRUE
f_152(v7, v9, v11, v13, v15, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) -> f_153(v7, v9, v11, v13, v15, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) :|: TRUE
f_153(v7, v9, v11, v13, v15, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) -> f_154(v7, v9, v11, v13, v15, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) :|: TRUE
f_154(v7, v9, v11, v13, v15, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) -> f_155(v7, v9, v11, v13, v15, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) :|: TRUE
f_155(v7, v9, v11, v13, v15, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) -> f_156(v7, v9, v11, v13, v15, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) :|: TRUE
f_156(v7, v9, v11, v13, v15, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) -> f_157(v7, v9, v11, v13, v15, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) :|: 0 = 0
f_157(v7, v9, v11, v13, v15, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) -> f_158(v7, v9, v11, v13, v15, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) :|: TRUE
f_158(v7, v9, v11, v13, v15, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) -> f_159(v7, v9, v11, v13, v15, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) :|: TRUE
f_159(v7, v9, v11, v13, v15, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) -> f_160(v7, v9, v11, v13, v15, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) :|: 0 = 0
f_160(v7, v9, v11, v13, v15, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) -> f_161(v7, v9, v11, v13, v15, v20, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) :|: TRUE
f_161(v7, v9, v11, v13, v15, v20, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) -> f_162(v7, v9, v11, v13, v15, v20, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) :|: 0 = 0
f_162(v7, v9, v11, v13, v15, v20, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) -> f_163(v7, v9, v11, v13, v15, v20, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) :|: v20 != 0
f_162(v7, v9, v11, v13, v15, v20, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) -> f_164(v7, v9, v11, v13, v15, 0, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) :|: v20 = 0
f_163(v7, v9, v11, v13, v15, v20, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 1, 4, 8) -> f_165(v7, v9, v11, v13, v15, v20, 1, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 4, 8) :|: 0 = 0
f_164(v7, v9, v11, v13, v15, 0, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) -> f_166(v7, v9, v11, v13, v15, 0, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) :|: 0 = 0
f_165(v7, v9, v11, v13, v15, v20, 1, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 4, 8) -> f_167(v7, v9, v11, v13, v15, v20, 1, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 4, 8) :|: TRUE
f_166(v7, v9, v11, v13, v15, 0, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) -> f_168(v7, v9, v11, v13, v15, 0, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) :|: TRUE
f_167(v7, v9, v11, v13, v15, v20, 1, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 4, 8) -> f_169(v7, v9, v11, v13, v15, v20, 1, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 4, 8) :|: 0 = 0
f_168(v7, v9, v11, v13, v15, 0, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) -> f_170(v7, v9, v11, v13, v15, 0, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) :|: TRUE
f_169(v7, v9, v11, v13, v15, v20, 1, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 4, 8) -> f_171(v7, v9, v11, v13, v15, v20, 1, v22, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 4, 8) :|: v22 = 1 + v7 && 1 <= v22
f_170(v7, v9, v11, v13, v15, 0, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) -> f_172(v7, v9, v11, v13, v15, 0, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) :|: 0 = 0
f_171(v7, v9, v11, v13, v15, v20, 1, v22, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 4, 8) -> f_173(v7, v9, v11, v13, v15, v20, 1, v22, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 4, 8) :|: TRUE
f_172(v7, v9, v11, v13, v15, 0, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) -> f_174(v7, v9, v11, v13, v15, 0, v24, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) :|: v24 = 1 + v9 && 1 <= v24
f_173(v7, v9, v11, v13, v15, v20, 1, v22, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 4, 8) -> f_175(v7, v9, v11, v13, v15, v20, 1, v22, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 4, 8) :|: TRUE
f_174(v7, v9, v11, v13, v15, 0, v24, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) -> f_176(v7, v9, v11, v13, v15, 0, v24, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) :|: TRUE
f_175(v7, v9, v11, v13, v15, v20, 1, v22, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 4, 8) -> f_205(v7, v9, v11, v13, v15, v7, v20, 1, v22, v1, v2, v3, v4, v5, v6, v12, v14, v16, 0, 3, 7, 4, 8) :|: TRUE
f_176(v7, v9, v11, v13, v15, 0, v24, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) -> f_178(v7, v9, v11, v13, v15, 0, v24, v26, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) :|: TRUE
f_178(v7, v9, v11, v13, v15, 0, v24, v26, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) -> f_180(v7, v9, v11, v13, v15, 0, v24, v26, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) :|: 0 = 0
f_180(v7, v9, v11, v13, v15, 0, v24, v26, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) -> f_182(v7, v9, v11, v13, v15, 0, v24, v26, v30, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) :|: v30 = 1 + v7 && 1 <= v30
f_182(v7, v9, v11, v13, v15, 0, v24, v26, v30, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) -> f_185(v7, v9, v11, v13, v15, 0, v24, v26, v30, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) :|: TRUE
f_185(v7, v9, v11, v13, v15, 0, v24, v26, v30, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) -> f_188(v7, v9, v11, v13, v15, 0, v24, v26, v30, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) :|: TRUE
f_188(v7, v9, v11, v13, v15, 0, v24, v26, v30, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) -> f_191(v7, v9, v11, v13, v15, 0, v24, v26, v30, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) :|: 0 = 0
f_191(v7, v9, v11, v13, v15, 0, v24, v26, v30, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) -> f_194(v7, v9, v11, v13, v15, 0, v24, v26, v30, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) :|: v26 != 0
f_191(v7, v9, v11, v13, v15, 0, v24, v26, v30, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) -> f_195(v7, v9, v11, v13, v15, 0, v24, v30, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) :|: v26 = 0
f_194(v7, v9, v11, v13, v15, 0, v24, v26, v30, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) -> f_198(v7, v9, v11, v13, v15, 0, v24, v26, v30, 1, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 4, 8) :|: 0 = 0
f_195(v7, v9, v11, v13, v15, 0, v24, v30, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) -> f_199(v7, v9, v11, v13, v15, 0, v24, v30, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) :|: 0 = 0
f_198(v7, v9, v11, v13, v15, 0, v24, v26, v30, 1, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 4, 8) -> f_202(v7, v9, v11, v13, v15, 0, v24, v26, v30, 1, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 4, 8) :|: TRUE
f_199(v7, v9, v11, v13, v15, 0, v24, v30, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) -> f_203(v7, v9, v11, v13, v15, 0, v24, v30, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) :|: TRUE
f_202(v7, v9, v11, v13, v15, 0, v24, v26, v30, 1, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 4, 8) -> f_206(v7, v9, v11, v13, v15, 0, v24, v26, v30, 1, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 4, 8) :|: TRUE
f_203(v7, v9, v11, v13, v15, 0, v24, v30, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) -> f_207(v7, v9, v11, v13, v15, 0, v24, v30, v55, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) :|: TRUE
f_205(v36, v37, v38, v39, v40, v41, v42, 1, v44, v45, v48, v46, v49, v47, v50, v51, v52, v53, 0, 3, 7, 4, 8) -> f_234(v36, v37, v38, v39, v40, v41, v42, 1, v44, v45, v48, v46, v49, v47, v50, v51, v52, v53, 0, 3, 7, 4, 8) :|: TRUE
f_206(v7, v9, v11, v13, v15, 0, v24, v26, v30, 1, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 4, 8) -> f_245(v7, v9, v11, v13, v15, 0, v9, v24, v26, v7, v30, 1, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 4, 8) :|: TRUE
f_207(v7, v9, v11, v13, v15, 0, v24, v30, v55, v1, v2, v3, v4, v5, v6, v12, v14, v16, 3, 7, 1, 4, 8) -> f_210(v1, v3, v5, v7, v9, v55, v2, v4, v6, 3, 7, 1, 4, 8, 0) :|: 0 = 0
f_234(v79, v80, v81, v82, v83, v84, v85, 1, v87, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) -> f_237(v79, v80, v81, v82, v83, v87, v85, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) :|: 0 = 0
f_237(v79, v80, v81, v82, v83, v87, v85, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) -> f_240(v79, v80, v81, v82, v83, v87, v98, v85, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) :|: TRUE
f_240(v79, v80, v81, v82, v83, v87, v98, v85, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) -> f_243(v79, v80, v81, v82, v83, v87, v98, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) :|: 0 = 0
f_243(v79, v80, v81, v82, v83, v87, v98, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) -> f_246(v79, v80, v81, v82, v83, v87, v98, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) :|: v98 != 0
f_243(v79, v80, v81, v82, v83, v87, v98, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) -> f_247(v79, v80, v81, v82, v83, v87, 0, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 4, 8) :|: v98 = 0
f_245(v100, v101, v102, v103, v104, 0, v106, v107, v108, v109, v110, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_248(v100, v101, v102, v103, v104, 0, v121, v107, v108, v109, v110, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: TRUE
f_246(v79, v80, v81, v82, v83, v87, v98, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) -> f_249(v79, v80, v81, v82, v83, v87, v98, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) :|: 0 = 0
f_247(v79, v80, v81, v82, v83, v87, 0, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 4, 8) -> f_250(v79, v80, v81, v82, v83, v87, 0, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8) :|: 0 = 0
f_248(v100, v101, v102, v103, v104, 0, v121, v107, v108, v109, v110, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_251(v100, v101, v102, v103, v104, 0, v121, v123, v108, v109, v110, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: v123 = 1 + v121 && 1 <= v123
f_249(v79, v80, v81, v82, v83, v87, v98, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) -> f_252(v79, v80, v81, v82, v83, v87, v98, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) :|: TRUE
f_250(v79, v80, v81, v82, v83, v87, 0, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8) -> f_253(v79, v80, v81, v82, v83, v87, 0, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8) :|: TRUE
f_251(v100, v101, v102, v103, v104, 0, v121, v123, v108, v109, v110, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_254(v100, v101, v102, v103, v104, 0, v121, v123, v108, v109, v110, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: TRUE
f_252(v79, v80, v81, v82, v83, v87, v98, 1, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) -> f_255(v79, v80, v81, v82, v83, v87, v98, 1, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) :|: 0 = 0
f_253(v79, v80, v81, v82, v83, v87, 0, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8) -> f_256(v79, v80, v81, v82, v83, v87, 0, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8) :|: TRUE
f_254(v100, v101, v102, v103, v104, 0, v121, v123, v108, v109, v110, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_257(v100, v101, v102, v103, v104, 0, v121, v123, v131, v109, v110, v108, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: TRUE
f_255(v79, v80, v81, v82, v83, v87, v98, 1, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) -> f_258(v79, v80, v81, v82, v83, v87, v98, 1, v133, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8, 2) :|: v133 = 1 + v87 && 2 <= v133
f_256(v79, v80, v81, v82, v83, v87, 0, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8) -> f_259(v79, v80, v81, v82, v83, v87, 0, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8) :|: 0 = 0
f_257(v100, v101, v102, v103, v104, 0, v121, v123, v131, v109, v110, v108, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_260(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v110, v108, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: TRUE
f_258(v79, v80, v81, v82, v83, v87, v98, 1, v133, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8, 2) -> f_261(v79, v80, v81, v82, v83, v87, v98, 1, v133, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8, 2) :|: TRUE
f_259(v79, v80, v81, v82, v83, v87, 0, v84, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8) -> f_262(v79, v80, v81, v82, v83, v87, 0, v84, v137, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8) :|: v137 = 1 + v80 && 1 <= v137
f_260(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v110, v108, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_263(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, v108, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: v138 = 1 + v134 && 1 <= v138
f_261(v79, v80, v81, v82, v83, v87, v98, 1, v133, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8, 2) -> f_264(v79, v80, v81, v82, v83, v87, v98, 1, v133, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8, 2) :|: TRUE
f_262(v79, v80, v81, v82, v83, v87, 0, v84, v137, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8) -> f_265(v79, v80, v81, v82, v83, v87, 0, v84, v137, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8) :|: TRUE
f_263(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, v108, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_266(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, v108, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: TRUE
f_264(v79, v80, v81, v82, v83, v87, v98, 1, v133, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8, 2) -> f_234(v79, v80, v81, v82, v83, v87, v98, 1, v133, v88, v91, v89, v92, v90, v93, v94, v95, v96, 0, 3, 7, 4, 8) :|: TRUE
f_265(v79, v80, v81, v82, v83, v87, 0, v84, v137, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8) -> f_267(v79, v80, v81, v82, v83, v87, 0, v84, v137, v160, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8) :|: TRUE
f_266(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, v108, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_268(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, v108, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: TRUE
f_267(v79, v80, v81, v82, v83, v87, 0, v84, v137, v160, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8) -> f_269(v79, v80, v81, v82, v83, v87, 0, v84, v137, v160, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8) :|: 0 = 0
f_268(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, v108, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_270(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: 0 = 0
f_269(v79, v80, v81, v82, v83, v87, 0, v84, v137, v160, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8) -> f_271(v79, v80, v81, v82, v83, v87, 0, v84, v137, v160, v163, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8, 2) :|: v163 = 1 + v87 && 2 <= v163
f_270(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_272(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: v131 != 0
f_270(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_273(v100, v101, v102, v103, v104, 0, v121, v123, v134, v138, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: v131 = 0
f_271(v79, v80, v81, v82, v83, v87, 0, v84, v137, v160, v163, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8, 2) -> f_274(v79, v80, v81, v82, v83, v87, 0, v84, v137, v160, v163, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8, 2) :|: TRUE
f_272(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_275(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: 0 = 0
f_273(v100, v101, v102, v103, v104, 0, v121, v123, v134, v138, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_276(v100, v101, v102, v103, v104, 0, v121, v123, v134, v138, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 1, 4, 8) :|: 0 = 0
f_274(v79, v80, v81, v82, v83, v87, 0, v84, v137, v160, v163, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8, 2) -> f_277(v79, v80, v81, v82, v83, v87, 0, v84, v137, v160, v163, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8, 2) :|: TRUE
f_275(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_278(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: TRUE
f_276(v100, v101, v102, v103, v104, 0, v121, v123, v134, v138, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 1, 4, 8) -> f_279(v100, v101, v102, v103, v104, 0, v121, v123, v134, v138, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 1, 4, 8) :|: TRUE
f_277(v79, v80, v81, v82, v83, v87, 0, v84, v137, v160, v163, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8, 2) -> f_280(v79, v80, v81, v82, v83, v87, 0, v84, v137, v160, v163, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8, 2) :|: 0 = 0
f_278(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_281(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: TRUE
f_279(v100, v101, v102, v103, v104, 0, v121, v123, v134, v138, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 1, 4, 8) -> f_282(v100, v101, v102, v103, v104, 0, v121, v123, v134, v138, v192, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 1, 4, 8) :|: TRUE
f_280(v79, v80, v81, v82, v83, v87, 0, v84, v137, v160, v163, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8, 2) -> f_283(v79, v80, v81, v82, v83, v87, 0, v84, v137, v160, v163, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8, 2) :|: v160 != 0
f_280(v79, v80, v81, v82, v83, v87, 0, v84, v137, v160, v163, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8, 2) -> f_284(v79, v80, v81, v82, v83, v87, 0, v84, v137, v163, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8, 2) :|: v160 = 0
f_281(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) -> f_245(v100, v101, v102, v103, v104, 0, v121, v123, v131, v134, v138, 1, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 4, 8) :|: TRUE
f_282(v100, v101, v102, v103, v104, 0, v121, v123, v134, v138, v192, v112, v115, v113, v116, v114, v117, v118, v119, v120, 3, 7, 1, 4, 8) -> f_285(v112, v113, v114, v100, v101, v192, v115, v116, v117, 3, 7, 0, 1, 4, 8) :|: 0 = 0
f_283(v79, v80, v81, v82, v83, v87, 0, v84, v137, v160, v163, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8, 2) -> f_286(v79, v80, v81, v82, v83, v87, 0, v84, v137, v160, v163, 1, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 4, 8, 2) :|: 0 = 0
f_284(v79, v80, v81, v82, v83, v87, 0, v84, v137, v163, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8, 2) -> f_287(v79, v80, v81, v82, v83, v87, 0, v84, v137, v163, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8, 2) :|: 0 = 0
f_286(v79, v80, v81, v82, v83, v87, 0, v84, v137, v160, v163, 1, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 4, 8, 2) -> f_288(v79, v80, v81, v82, v83, v87, 0, v84, v137, v160, v163, 1, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 4, 8, 2) :|: TRUE
f_287(v79, v80, v81, v82, v83, v87, 0, v84, v137, v163, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8, 2) -> f_289(v79, v80, v81, v82, v83, v87, 0, v84, v137, v163, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8, 2) :|: TRUE
f_288(v79, v80, v81, v82, v83, v87, 0, v84, v137, v160, v163, 1, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 4, 8, 2) -> f_307(v79, v80, v81, v82, v83, v87, 0, v84, v80, v137, v160, v87, v163, 1, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 4, 8) :|: TRUE
f_289(v79, v80, v81, v82, v83, v87, 0, v84, v137, v163, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8, 2) -> f_291(v79, v80, v81, v82, v83, v87, 0, v84, v137, v163, v227, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8, 2) :|: TRUE
f_291(v79, v80, v81, v82, v83, v87, 0, v84, v137, v163, v227, v88, v91, v89, v92, v90, v93, v94, v95, v96, 3, 7, 1, 4, 8, 2) -> f_293(v88, v89, v90, v79, v80, v227, v91, v92, v93, 3, 7, 0, 1, 4, 8) :|: 0 = 0
f_307(v253, v254, v255, v256, v257, v258, 0, v260, v261, v262, v263, v264, v265, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_308(v253, v254, v255, v256, v257, v258, 0, v260, v261, v262, v263, v264, v265, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: TRUE
f_308(v253, v254, v255, v256, v257, v258, 0, v260, v261, v262, v263, v264, v265, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_309(v253, v254, v255, v256, v257, v258, 0, v260, v290, v262, v263, v264, v265, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: TRUE
f_309(v253, v254, v255, v256, v257, v258, 0, v260, v290, v262, v263, v264, v265, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_310(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v263, v264, v265, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: v292 = 1 + v290 && 1 <= v292
f_310(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v263, v264, v265, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_311(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v263, v264, v265, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: TRUE
f_311(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v263, v264, v265, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_312(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v264, v265, v263, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: TRUE
f_312(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v264, v265, v263, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_313(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v265, v263, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: TRUE
f_313(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v265, v263, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_314(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, v263, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: v298 = 1 + v296 && 1 <= v298
f_314(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, v263, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_315(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, v263, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: TRUE
f_315(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, v263, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_316(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, v263, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: TRUE
f_316(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, v263, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_317(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: 0 = 0
f_317(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_318(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: v294 != 0
f_317(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_319(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v296, v298, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: v294 = 0
f_318(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_320(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: 0 = 0
f_319(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v296, v298, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_321(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v296, v298, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 1, 4, 8) :|: 0 = 0
f_320(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_322(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: TRUE
f_321(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v296, v298, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 1, 4, 8) -> f_323(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v296, v298, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 1, 4, 8) :|: TRUE
f_322(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) -> f_307(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v294, v296, v298, 1, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 4, 8) :|: TRUE
f_323(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v296, v298, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 1, 4, 8) -> f_324(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v296, v298, v352, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 1, 4, 8) :|: TRUE
f_324(v253, v254, v255, v256, v257, v258, 0, v260, v290, v292, v296, v298, v352, v267, v270, v268, v271, v269, v272, v273, v274, v275, 3, 7, 1, 4, 8) -> f_325(v267, v268, v269, v253, v254, v352, v270, v271, v272, 3, 7, 0, 1, 4, 8) :|: 0 = 0
Combined rules. Obtained 16 rulesP rules:
f_243(v79:0, v80:0, v81:0, v82:0, v83:0, v87:0, 0, 1, v84:0, v88:0, v91:0, v89:0, v92:0, v90:0, v93:0, v94:0, v95:0, v96:0, 0, 3, 7, 4, 8) -> f_293(v88:0, v89:0, v90:0, v79:0, v80:0, v227:0, v91:0, v92:0, v93:0, 3, 7, 0, 1, 4, 8) :|: v87:0 > 0 && v80:0 > -1
f_139 -> f_243(v7:0, v9:0, v11:0, v13:0, v15:0, 1 + v7:0, v98:0, 1, v7:0, v1:0, 3 + v1:0, v3:0, 7 + v3:0, v5:0, 7 + v5:0, 7 + v11:0, 7 + v13:0, 7 + v15:0, 0, 3, 7, 4, 8) :|: v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v11:0 > 0 && v13:0 > 0 && v15:0 > 0 && v7:0 > -1 && v20:0 < 0
f_139 -> f_243(v7:0, v9:0, v11:0, v13:0, v15:0, 1 + v7:0, v98:0, 1, v7:0, v1:0, 3 + v1:0, v3:0, 7 + v3:0, v5:0, 7 + v5:0, 7 + v11:0, 7 + v13:0, 7 + v15:0, 0, 3, 7, 4, 8) :|: v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v11:0 > 0 && v13:0 > 0 && v15:0 > 0 && v7:0 > -1 && v20:0 > 0
f_243(v79:0, v80:0, v81:0, v82:0, v83:0, v87:0, 0, 1, v84:0, v88:0, v91:0, v89:0, v92:0, v90:0, v93:0, v94:0, v95:0, v96:0, 0, 3, 7, 4, 8) -> f_317(v79:0, v80:0, v81:0, v82:0, v83:0, v87:0, 0, v84:0, v290:0, 1 + v290:0, v294:0, v296:0, 1 + v296:0, 1, v88:0, v91:0, v89:0, v92:0, v90:0, v93:0, v94:0, v95:0, v96:0, 3, 7, 4, 8) :|: v80:0 > -1 && v87:0 > 0 && v160:0 < 0 && v296:0 > -1 && v290:0 > -1
f_243(v79:0, v80:0, v81:0, v82:0, v83:0, v87:0, 0, 1, v84:0, v88:0, v91:0, v89:0, v92:0, v90:0, v93:0, v94:0, v95:0, v96:0, 0, 3, 7, 4, 8) -> f_317(v79:0, v80:0, v81:0, v82:0, v83:0, v87:0, 0, v84:0, v290:0, 1 + v290:0, v294:0, v296:0, 1 + v296:0, 1, v88:0, v91:0, v89:0, v92:0, v90:0, v93:0, v94:0, v95:0, v96:0, 3, 7, 4, 8) :|: v80:0 > -1 && v87:0 > 0 && v160:0 > 0 && v296:0 > -1 && v290:0 > -1
f_139 -> f_270(v7:0, v9:0, v11:0, v13:0, v15:0, 0, v121:0, 1 + v121:0, v131:0, v134:0, 1 + v134:0, 1, v1:0, 3 + v1:0, v3:0, 7 + v3:0, v5:0, 7 + v5:0, 7 + v11:0, 7 + v13:0, 7 + v15:0, 3, 7, 4, 8) :|: v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v11:0 > 0 && v13:0 > 0 && v15:0 > 0 && v9:0 > -1 && v7:0 > -1 && v26:0 < 0 && v134:0 > -1 && v121:0 > -1
f_139 -> f_270(v7:0, v9:0, v11:0, v13:0, v15:0, 0, v121:0, 1 + v121:0, v131:0, v134:0, 1 + v134:0, 1, v1:0, 3 + v1:0, v3:0, 7 + v3:0, v5:0, 7 + v5:0, 7 + v11:0, 7 + v13:0, 7 + v15:0, 3, 7, 4, 8) :|: v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v11:0 > 0 && v13:0 > 0 && v15:0 > 0 && v9:0 > -1 && v7:0 > -1 && v26:0 > 0 && v134:0 > -1 && v121:0 > -1
f_317(v253:0, v254:0, v255:0, v256:0, v257:0, v258:0, 0, v260:0, v290:0, v292:0, v294:0, v296:0, v298:0, 1, v267:0, v270:0, v268:0, v271:0, v269:0, v272:0, v273:0, v274:0, v275:0, 3, 7, 4, 8) -> f_317(v253:0, v254:0, v255:0, v256:0, v257:0, v258:0, 0, v260:0, v290:1, 1 + v290:1, v294:1, v296:1, 1 + v296:1, 1, v267:0, v270:0, v268:0, v271:0, v269:0, v272:0, v273:0, v274:0, v275:0, 3, 7, 4, 8) :|: v290:1 > -1 && v294:0 < 0 && v296:1 > -1
f_317(v253:0, v254:0, v255:0, v256:0, v257:0, v258:0, 0, v260:0, v290:0, v292:0, v294:0, v296:0, v298:0, 1, v267:0, v270:0, v268:0, v271:0, v269:0, v272:0, v273:0, v274:0, v275:0, 3, 7, 4, 8) -> f_317(v253:0, v254:0, v255:0, v256:0, v257:0, v258:0, 0, v260:0, v290:1, 1 + v290:1, v294:1, v296:1, 1 + v296:1, 1, v267:0, v270:0, v268:0, v271:0, v269:0, v272:0, v273:0, v274:0, v275:0, 3, 7, 4, 8) :|: v290:1 > -1 && v294:0 > 0 && v296:1 > -1
f_317(v253:0, v254:0, v255:0, v256:0, v257:0, v258:0, 0, v260:0, v290:0, v292:0, 0, v296:0, v298:0, 1, v267:0, v270:0, v268:0, v271:0, v269:0, v272:0, v273:0, v274:0, v275:0, 3, 7, 4, 8) -> f_325(v267:0, v268:0, v269:0, v253:0, v254:0, v352:0, v270:0, v271:0, v272:0, 3, 7, 0, 1, 4, 8) :|: TRUE
f_139 -> f_210(v1:0, v3:0, v5:0, v7:0, v9:0, v55:0, 3 + v1:0, 7 + v3:0, 7 + v5:0, 3, 7, 1, 4, 8, 0) :|: v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v11:0 > 0 && v13:0 > 0 && v15:0 > 0 && v7:0 > -1 && v9:0 > -1
f_270(v100:0, v101:0, v102:0, v103:0, v104:0, 0, v121:0, v123:0, 0, v134:0, v138:0, 1, v112:0, v115:0, v113:0, v116:0, v114:0, v117:0, v118:0, v119:0, v120:0, 3, 7, 4, 8) -> f_285(v112:0, v113:0, v114:0, v100:0, v101:0, v192:0, v115:0, v116:0, v117:0, 3, 7, 0, 1, 4, 8) :|: TRUE
f_270(v100:0, v101:0, v102:0, v103:0, v104:0, 0, v121:0, v123:0, v131:0, v134:0, v138:0, 1, v112:0, v115:0, v113:0, v116:0, v114:0, v117:0, v118:0, v119:0, v120:0, 3, 7, 4, 8) -> f_270(v100:0, v101:0, v102:0, v103:0, v104:0, 0, v121:1, 1 + v121:1, v131:1, v134:1, 1 + v134:1, 1, v112:0, v115:0, v113:0, v116:0, v114:0, v117:0, v118:0, v119:0, v120:0, 3, 7, 4, 8) :|: v121:1 > -1 && v131:0 < 0 && v134:1 > -1
f_270(v100:0, v101:0, v102:0, v103:0, v104:0, 0, v121:0, v123:0, v131:0, v134:0, v138:0, 1, v112:0, v115:0, v113:0, v116:0, v114:0, v117:0, v118:0, v119:0, v120:0, 3, 7, 4, 8) -> f_270(v100:0, v101:0, v102:0, v103:0, v104:0, 0, v121:1, 1 + v121:1, v131:1, v134:1, 1 + v134:1, 1, v112:0, v115:0, v113:0, v116:0, v114:0, v117:0, v118:0, v119:0, v120:0, 3, 7, 4, 8) :|: v121:1 > -1 && v131:0 > 0 && v134:1 > -1
f_243(v79:0, v80:0, v81:0, v82:0, v83:0, v87:0, v98:0, 1, v84:0, v88:0, v91:0, v89:0, v92:0, v90:0, v93:0, v94:0, v95:0, v96:0, 0, 3, 7, 4, 8) -> f_243(v79:0, v80:0, v81:0, v82:0, v83:0, 1 + v87:0, v98:1, 1, v87:0, v88:0, v91:0, v89:0, v92:0, v90:0, v93:0, v94:0, v95:0, v96:0, 0, 3, 7, 4, 8) :|: v87:0 > 0 && v98:0 < 0
f_243(v79:0, v80:0, v81:0, v82:0, v83:0, v87:0, v98:0, 1, v84:0, v88:0, v91:0, v89:0, v92:0, v90:0, v93:0, v94:0, v95:0, v96:0, 0, 3, 7, 4, 8) -> f_243(v79:0, v80:0, v81:0, v82:0, v83:0, 1 + v87:0, v98:1, 1, v87:0, v88:0, v91:0, v89:0, v92:0, v90:0, v93:0, v94:0, v95:0, v96:0, 0, 3, 7, 4, 8) :|: v87:0 > 0 && v98:0 > 0
Filtered unneeded arguments:
   f_243(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23) -> f_243(x2, x6, x7)
   f_317(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27) -> f_317(x11)
   f_270(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25) -> f_270(x9)
Removed division, modulo operations, cleaned up constraints. Obtained 13 rules.P rules:
f_243(v80:0, v87:0, cons_0) -> f_293(v88:0, v89:0, v90:0, v79:0, v80:0, v227:0, v91:0, v92:0, v93:0, 3, 7, 0, 1, 4, 8) :|: v87:0 > 0 && v80:0 > -1 && cons_0 = 0
f_139 -> f_243(v9:0, 1 + v7:0, v98:0) :|: v7:0 > -1
f_243(v80:0, v87:0, cons_0) -> f_317(v294:0) :|: v80:0 > -1 && v87:0 > 0 && cons_0 = 0
f_139 -> f_270(v131:0) :|: TRUE
f_317(v294:0) -> f_317(v294:1) :|: v294:0 < 0
f_317(v294:0) -> f_317(v294:1) :|: v294:0 > 0
f_317(cons_0) -> f_325(v267:0, v268:0, v269:0, v253:0, v254:0, v352:0, v270:0, v271:0, v272:0, 3, 7, 0, 1, 4, 8) :|: TRUE && cons_0 = 0
f_139 -> f_210(v1:0, v3:0, v5:0, v7:0, v9:0, v55:0, 3 + v1:0, 7 + v3:0, 7 + v5:0, 3, 7, 1, 4, 8, 0) :|: v1:0 > 0 && v3:0 > 0 && v5:0 > 0 && v9:0 > -1 && v7:0 > -1
f_270(cons_0) -> f_285(v112:0, v113:0, v114:0, v100:0, v101:0, v192:0, v115:0, v116:0, v117:0, 3, 7, 0, 1, 4, 8) :|: TRUE && cons_0 = 0
f_270(v131:0) -> f_270(v131:1) :|: v131:0 < 0
f_270(v131:0) -> f_270(v131:1) :|: v131:0 > 0
f_243(v80:0, v87:0, v98:0) -> f_243(v80:0, 1 + v87:0, v98:1) :|: v87:0 > 0 && v98:0 < 0
f_243(v80:0, v87:0, v98:0) -> f_243(v80:0, 1 + v87:0, v98:1) :|: v87:0 > 0 && v98:0 > 0

----------------------------------------

(43)
Obligation:
Rules:
f_243(v80:0, v87:0, cons_0) -> f_293(v88:0, v89:0, v90:0, v79:0, v80:0, v227:0, v91:0, v92:0, v93:0, 3, 7, 0, 1, 4, 8) :|: v87:0 > 0 && v80:0 > -1 && cons_0 = 0
f_139 -> f_243(v9:0, 1 + v7:0, v98:0) :|: v7:0 > -1
f_243(x, x1, x2) -> f_317(x3) :|: x > -1 && x1 > 0 && x2 = 0
f_139 -> f_270(v131:0) :|: TRUE
f_317(v294:0) -> f_317(v294:1) :|: v294:0 < 0
f_317(x4) -> f_317(x5) :|: x4 > 0
f_317(x6) -> f_325(x7, x8, x9, x10, x11, x12, x13, x14, x15, 3, 7, 0, 1, 4, 8) :|: TRUE && x6 = 0
f_139 -> f_210(x16, x17, x18, x19, x20, x21, 3 + x16, 7 + x17, 7 + x18, 3, 7, 1, 4, 8, 0) :|: x16 > 0 && x17 > 0 && x18 > 0 && x20 > -1 && x19 > -1
f_270(x22) -> f_285(x23, x24, x25, x26, x27, x28, x29, x30, x31, 3, 7, 0, 1, 4, 8) :|: TRUE && x22 = 0
f_270(x32) -> f_270(x33) :|: x32 < 0
f_270(x34) -> f_270(x35) :|: x34 > 0
f_243(x36, x37, x38) -> f_243(x36, 1 + x37, x39) :|: x37 > 0 && x38 < 0
f_243(x40, x41, x42) -> f_243(x40, 1 + x41, x43) :|: x41 > 0 && x42 > 0
Start term: f_139

----------------------------------------

(44) IRSToKoat (EQUIVALENT)
Convert an IRS to a koat problem
----------------------------------------

(45)
Obligation:
(GOAL COMPLEXITY)
(STARTTERM (FUNCTIONSYMBOLS f_139))
(VAR x290 x160 x281 x280 x162 x283 x161 x282 x46 x164 x285 x47 x163 x284 x48 x166 x287 x49 x165 x286 x42 x168 x289 x43 x167 x288 x44 x45 x169 x40 x41 x39 x270 x151 x272 x150 x271 x35 x153 x274 x36 x152 x273 x37 x155 x276 x38 x154 x275 x31 x157 x278 x32 x156 x277 x33 x159 x34 x158 x279 x30 x70 x140 x261 x260 x68 x142 x263 x69 x141 x262 x144 x265 x143 x264 x64 x146 x267 x65 x145 x266 x66 x148 x269 x67 x147 x268 x60 x61 x149 x62 x63 k7 k8 k5 k6 k9 k0 k3 k4 k1 k2 x250 x57 x131 x252 x58 x130 x251 x59 x133 x254 x132 x253 x53 x135 x256 x54 x134 x255 x55 x137 x258 x56 x136 x257 x139 x50 x138 x259 x51 x52 x90 x91 x92 x86 x87 x88 x89 x82 x83 x84 x85 x80 x81 x193 x192 x195 x194 x79 x197 x196 x199 x198 x75 x76 x'' x77 x78 x71 x72 x73 x74 k14 k15 k16 k17 k10 k11 k12 k13 x191 x190 x182 x181 x184 x183 x186 x185 x188 x187 x189 x180 x171 x292 x170 x291 x173 x294 x172 x293 x175 x174 x177 x176 x97 x179 x98 x178 x99 x93 x94 x95 x96 k36 x209 x208 k37 k38 k39 k32 k33 k34 k35 k30 k31 x201 x200 x203 x202 k29 x205 x204 x207 x206 k25 k26 k27 k28 k21 k22 k23 k24 k20 k18 k19 k58 k59 k54 k55 k56 k57 k50 k51 k52 k53 k47 k48 k49 k43 k44 k45 k46 k40 k41 k42 x120 x241 x240 x122 x243 x121 x242 x124 x245 x123 x244 x126 x247 x125 x246 x x128 x249 x127 x248 x129 k60 x230 x111 x232 x110 x231 x113 x234 x112 x233 x115 x236 x114 x235 x117 x238 x116 x237 x119 x118 x239 x109 x4 x28 x5 x29 x2 x3 x8 x24 x9 x25 x6 x26 x100 x221 x7 x27 x220 x20 x102 x223 x21 x101 x222 x22 x104 x225 x23 x103 x224 x106 x227 x1 x105 x226 x108 x229 x107 x228 x219 x' x17 x18 x19 x13 x14 x15 x210 x16 x212 x10 x211 x11 x214 x12 x213 x216 x215 x218 x217)
(RULES
  f_270(k43, x269, x270, x271, x272, x273, x274, x275, x276, x277, x278, x279, x280, x281, x282) -> f_285(k44, k32, k35, k37, k40, k26, k28, k20, k16, 3, 7, 0, 1, 4, 8) :|: 0 = 0 && k43 = 0
  f_270(k19, x81, x82, x83, x84, x85, x86, x87, x88, x89, x90, x91, x92, x93, x94) -> f_270(k12, x95, x96, x97, x98, x99, x100, x101, x102, x103, x104, x105, x106, x107, x108) :|: k19 > 0
  f_317(k36, x109, x110, x111, x112, x113, x114, x115, x116, x117, x118, x119, x120, x121, x122) -> f_325(k39, k31, k34, k58, k59, k60, k54, k55, k56, 3, 7, 0, 1, 4, 8) :|: 0 = 0 && k36 = 0
  f_243(k5, k45, k29, x, x', x'', x1, x2, x3, x4, x5, x6, x7, x8, x9) -> f_317(k30, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23) :|: k5 > -1 && k45 > 0 && k29 = 0
  f_270(k17, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37) -> f_270(k18, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49, x50, x51) :|: k17 < 0
  f_243(k6, k7, k3, x202, x203, x204, x205, x206, x207, x208, x209, x210, x211, x212, x213) -> f_243(k6, 1 + k7, k4, x214, x215, x216, x217, x218, x219, x220, x221, x222, x223, x224, x225) :|: k7 > 0 && k3 > 0
  f_243(k0, k22, k10, x283, x284, x285, x286, x287, x288, x289, x290, x291, x292, x293, x294) -> f_293(k1, k21, k48, k50, k0, k2, k8, k47, k9, 3, 7, 0, 1, 4, 8) :|: k22 > 0 && k0 > -1 && k10 = 0
  f_139(x52, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65, x66) -> f_270(k46, x67, x68, x69, x70, x71, x72, x73, x74, x75, x76, x77, x78, x79, x80) :|: 0 = 0
  f_139(x147, x148, x149, x150, x151, x152, x153, x154, x155, x156, x157, x158, x159, x160, x161) -> f_243(k38, 1 + k33, k49, x162, x163, x164, x165, x166, x167, x168, x169, x170, x171, x172, x173) :|: k33 > -1
  f_317(k25, x241, x242, x243, x244, x245, x246, x247, x248, x249, x250, x251, x252, x253, x254) -> f_317(k27, x255, x256, x257, x258, x259, x260, x261, x262, x263, x264, x265, x266, x267, x268) :|: k25 > 0
  f_243(k13, k14, k15, x123, x124, x125, x126, x127, x128, x129, x130, x131, x132, x133, x134) -> f_243(k13, 1 + k14, k11, x135, x136, x137, x138, x139, x140, x141, x142, x143, x144, x145, x146) :|: k14 > 0 && k15 < 0
  f_139(x226, x227, x228, x229, x230, x231, x232, x233, x234, x235, x236, x237, x238, x239, x240) -> f_210(k57, k51, k52, k53, k41, k42, 3 + k57, 7 + k51, 7 + k52, 3, 7, 1, 4, 8, 0) :|: k57 > 0 && k51 > 0 && k52 > 0 && k41 > -1 && k53 > -1
  f_317(k23, x174, x175, x176, x177, x178, x179, x180, x181, x182, x183, x184, x185, x186, x187) -> f_317(k24, x188, x189, x190, x191, x192, x193, x194, x195, x196, x197, x198, x199, x200, x201) :|: k23 < 0
)

----------------------------------------

(46) KoAT2 (EQUIVALENT)
KoAT2 was called with the following command:

/aprove/bin/koat2 analyse --termination --cfr=pe -d5 --local=mprf,twn -rtermcomp -i /tmp/aprove.InputModules.Programs.koat2_17935140752536973827.koat 

KoAT2's output was:

MAYBE

----------------------------------------

(47)
MAYBE
Graph finished, checking  consistency
Graph finished, checked consistency, took 0.001s
