MAYBE
proof of /hpcwork/ff862203/termcomp25/benchmarks/jNUnU.c
# AProVE Commit ID: 48c83ccb80d5f8312cb92f4aa1b51dc35e247e65 nils 20241118 unpublished


Termination of the given C Problem could not be shown:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 70 ms]
(2) LLVM problem


----------------------------------------

(0)
Obligation:
c file /hpcwork/ff862203/termcomp25/benchmarks/jNUnU.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /hpcwork/ff862203/termcomp25/benchmarks/jNUnU.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-pc-linux-gnu"

Type definitions:

struct.node --> BasicStructureType(elementType: i32, elementType: *struct.node)

Global variables:

Function declarations and definitions:

*BasicFunctionTypename: "llvm.dbg.declare" returnParam: BasicVoidType parameters: (BasicMetadataType, BasicMetadataType, BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "llvm.dbg.label" returnParam: BasicVoidType parameters: (BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "malloc" returnParam: *i8 noalias parameters: (i64) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_nondet_int" returnParam: i32 parameters: () variableLength: true visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_error" returnParam: BasicVoidType parameters: () variableLength: true visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "free" returnParam: BasicVoidType parameters: (*i8) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "exit" linkageType: EXTERNALLY_VISIBLE returnParam: BasicVoidType parameters: (0 i32) variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 16
	0:
		%2 = alloca i32, align 4
		store %0, %2
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %2)
		br %3
	3:
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.label()
		br %3

*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 25
	0:
		%1 = alloca i32, align 4
		%2 = alloca i32, align 4
		%3 = alloca i32, align 4
		%4 = alloca *BasicTypeName typeName: struct.nodeBasicStructureType(elementType: i32, elementType: *struct.node), align 8
		%5 = alloca *BasicTypeName typeName: struct.nodeBasicStructureType(elementType: i32, elementType: *struct.node), align 8
		%6 = alloca *BasicTypeName typeName: struct.nodeBasicStructureType(elementType: i32, elementType: *struct.node), align 8
		store 0, %1
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %2)
		store 0, %2
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %3)
		store 0, %3
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**BasicTypeName typeName: struct.nodeBasicStructureType(elementType: i32, elementType: *struct.node) %4)
		%7 = call noalias *i8 @malloc(i64 16)
		%8 = bitcast *i8 %7 to *BasicTypeName typeName: struct.nodeBasicStructureType(elementType: i32, elementType: *struct.node)
		store %8, %4
		%9 = load %4
		%10 = icmp eq %9 null
		br %10, %11, %12
	11:
		Unnamed Call-Instruction = call BasicVoidType @exit(i32 1)
		unreachable
	12:
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**BasicTypeName typeName: struct.nodeBasicStructureType(elementType: i32, elementType: *struct.node) %5)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**BasicTypeName typeName: struct.nodeBasicStructureType(elementType: i32, elementType: *struct.node) %6)
		%13 = load %4
		store %13, %6
		br %14
	14:
		%15 = load %2
		%16 = icmp slt %15 10
		br %16, %17, %20
	17:
		%18 = call i32 (...)* @__VERIFIER_nondet_int()
		%19 = icmp ne %18 0
		br %20
	20:
		%21 = phi [0, %14], [%19, %17]
		br %21, %22, %39
	22:
		%23 = load %2
		%24 = add i32 %23, 1
		store %24, %2
		%25 = load %6
		%26 = getelementptr %25, 0, 0
		store 1, %26
		%27 = call noalias *i8 @malloc(i64 16)
		%28 = bitcast *i8 %27 to *BasicTypeName typeName: struct.nodeBasicStructureType(elementType: i32, elementType: *struct.node)
		store %28, %5
		%29 = load %5
		%30 = icmp eq %29 null
		br %30, %31, %32
	31:
		Unnamed Call-Instruction = call BasicVoidType @exit(i32 1)
		unreachable
	32:
		%33 = load %5
		%34 = load %6
		%35 = getelementptr %34, 0, 1
		store %33, %35
		%36 = load %6
		%37 = getelementptr %36, 0, 1
		%38 = load %37
		store %38, %6
		br %14
	39:
		br %40
	40:
		%41 = load %3
		%42 = icmp slt %41 10
		br %42, %43, %46
	43:
		%44 = call i32 (...)* @__VERIFIER_nondet_int()
		%45 = icmp ne %44 0
		br %46
	46:
		%47 = phi [0, %40], [%45, %43]
		br %47, %48, %65
	48:
		%49 = load %3
		%50 = add i32 %49, 1
		store %50, %3
		%51 = load %6
		%52 = getelementptr %51, 0, 0
		store 2, %52
		%53 = call noalias *i8 @malloc(i64 16)
		%54 = bitcast *i8 %53 to *BasicTypeName typeName: struct.nodeBasicStructureType(elementType: i32, elementType: *struct.node)
		store %54, %5
		%55 = load %5
		%56 = icmp eq %55 null
		br %56, %57, %58
	57:
		Unnamed Call-Instruction = call BasicVoidType @exit(i32 1)
		unreachable
	58:
		%59 = load %5
		%60 = load %6
		%61 = getelementptr %60, 0, 1
		store %59, %61
		%62 = load %6
		%63 = getelementptr %62, 0, 1
		%64 = load %63
		store %64, %6
		br %40
	65:
		%66 = load %6
		%67 = getelementptr %66, 0, 0
		store 3, %67
		%68 = load %6
		%69 = getelementptr %68, 0, 1
		store null, %69
		store 0, %2
		store 0, %3
		%70 = load %4
		store %70, %6
		br %71
	71:
		%72 = load %6
		%73 = getelementptr %72, 0, 0
		%74 = load %73
		%75 = icmp eq %74 1
		br %75, %76, %82
	76:
		%77 = load %2
		%78 = add i32 %77, 1
		store %78, %2
		%79 = load %6
		%80 = getelementptr %79, 0, 1
		%81 = load %80
		store %81, %6
		br %71
	82:
		br %83
	83:
		%84 = load %6
		%85 = getelementptr %84, 0, 0
		%86 = load %85
		%87 = icmp eq %86 2
		br %87, %88, %94
	88:
		%89 = load %3
		%90 = add i32 %89, 1
		store %90, %3
		%91 = load %6
		%92 = getelementptr %91, 0, 1
		%93 = load %92
		store %93, %6
		br %83
	94:
		%95 = load %6
		%96 = getelementptr %95, 0, 0
		%97 = load %96
		%98 = icmp ne %97 3
		br %98, %104, %99
	99:
		%100 = load %2
		%101 = load %3
		%102 = add i32 %100, %101
		%103 = icmp sgt %102 20
		br %103, %104, %106
	104:
		br %105
	105:
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.label()
		Unnamed Call-Instruction = call BasicVoidType (...)* @__VERIFIER_error()
		unreachable
	106:
		%107 = load %4
		store %107, %6
		br %108
	108:
		%109 = load %6
		%110 = getelementptr %109, 0, 1
		%111 = load %110
		%112 = icmp ne %111 null
		br %112, %113, %120
	113:
		%114 = load %6
		%115 = getelementptr %114, 0, 1
		%116 = load %115
		store %116, %5
		%117 = load %6
		%118 = bitcast *BasicTypeName typeName: struct.nodeBasicStructureType(elementType: i32, elementType: *struct.node) %117 to *i8
		Unnamed Call-Instruction = call BasicVoidType @free(*i8 %118)
		%119 = load %5
		store %119, %6
		br %108
	120:
		%121 = load %6
		%122 = bitcast *BasicTypeName typeName: struct.nodeBasicStructureType(elementType: i32, elementType: *struct.node) %121 to *i8
		Unnamed Call-Instruction = call BasicVoidType @free(*i8 %122)
		ret 0


Analyze Termination of all function calls matching the pattern:
main()/hpcwork/ff862203/termcomp25/benchmarks/jNUnU.c:48:75: warning: unknown attribute '__leaf__' ignored [-Wunknown-attributes]
extern size_t __ctype_get_mb_cur_max (void) __attribute__ ((__nothrow__ , __leaf__)) ;
                                                                          ^
/hpcwork/ff862203/termcomp25/benchmarks/jNUnU.c:51:36: warning: unknown attribute '__leaf__' ignored [-Wunknown-attributes]
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;
                                   ^
/hpcwork/ff862203/termcomp25/benchmarks/jNUnU.c:53:36: warning: unknown attribute '__leaf__' ignored [-Wunknown-attributes]
     __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;
                                   ^
/hpcwork/ff862203/termcomp25/benchmarks/jNUnU.c:55:36: warning: unknown attribute '__leaf__' ignored [-Wunknown-attributes]
