YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/zt9oL.c
# AProVE Commit ID: 48c83ccb80d5f8312cb92f4aa1b51dc35e247e65 nils 20241118 unpublished


Termination of the given C Problem could be proven:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 19 ms]
(2) LLVM problem
(3) LLVMToTerminationGraphProof [EQUIVALENT, 594 ms]
(4) LLVM Symbolic Execution Graph
(5) SEGraph to IRS [EQUIVALENT, 155 ms]
(6) IntTRS
(7) IRSToKoat [EQUIVALENT, 0 ms]
(8) Koat Problem
(9) KoAT2 [EQUIVALENT, 5168 ms]
(10) YES


----------------------------------------

(0)
Obligation:
c file /hpcwork/ff862203/termcomp25/benchmarks/zt9oL.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /hpcwork/ff862203/termcomp25/benchmarks/zt9oL.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-pc-linux-gnu"

Type definitions:

Global variables:

Function declarations and definitions:

*BasicFunctionTypename: "llvm.dbg.declare" returnParam: BasicVoidType parameters: (BasicMetadataType, BasicMetadataType, BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_nondet_int" returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 7
	0:
		%1 = alloca i32, align 4
		%2 = alloca i32, align 4
		%3 = alloca i32, align 4
		%4 = alloca i32, align 4
		store 0, %1
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %2)
		%5 = call i32 @__VERIFIER_nondet_int()
		store %5, %2
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %3)
		%6 = call i32 @__VERIFIER_nondet_int()
		store %6, %3
		%7 = load %2
		%8 = icmp sle 0 %7
		br %8, %9, %35
	9:
		%10 = load %2
		%11 = load %3
		%12 = icmp slt %10 %11
		br %12, %13, %35
	13:
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %4)
		%14 = load %2
		%15 = add i32 %14, 1
		store %15, %4
		br %16
	16:
		%17 = load %4
		%18 = load %2
		%19 = icmp ne %17 %18
		br %19, %20, %23
	20:
		%21 = call i32 @__VERIFIER_nondet_int()
		%22 = icmp ne %21 0
		br %23
	23:
		%24 = phi [0, %16], [%22, %20]
		br %24, %25, %34
	25:
		%26 = load %4
		%27 = load %3
		%28 = icmp sle %26 %27
		br %28, %29, %32
	29:
		%30 = load %4
		%31 = add i32 %30, 1
		store %31, %4
		br %33
	32:
		store 0, %4
		br %33
	33:
		br %16
	34:
		br %35
	35:
		ret 0


Analyze Termination of all function calls matching the pattern:
main()
----------------------------------------

(3) LLVMToTerminationGraphProof (EQUIVALENT)
Constructed symbolic execution graph for LLVM program.
----------------------------------------

(4)
Obligation:
Symbolic Execution Graph
----------------------------------------

(5) SEGraph to IRS (EQUIVALENT)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 120 rulesP rules:
f_139 -> f_140(v1, v2, 3, 1, 4) :|: 1 <= v1 && v2 = 3 + v1 && 4 <= v2
f_140(v1, v2, 3, 1, 4) -> f_141(v1, v3, v2, v4, 3, 1, 4) :|: 1 <= v3 && v4 = 3 + v3 && 4 <= v4
f_141(v1, v3, v2, v4, 3, 1, 4) -> f_142(v1, v3, v5, v2, v4, v6, 3, 1, 4) :|: 1 <= v5 && v6 = 3 + v5 && 4 <= v6
f_142(v1, v3, v5, v2, v4, v6, 3, 1, 4) -> f_143(v1, v3, v5, v7, v2, v4, v6, v8, 3, 1, 4) :|: 1 <= v7 && v8 = 3 + v7 && 4 <= v8
f_143(v1, v3, v5, v7, v2, v4, v6, v8, 3, 1, 4) -> f_144(v1, v3, v5, v7, v2, v4, v6, v8, 0, 3, 1, 4) :|: TRUE
f_144(v1, v3, v5, v7, v2, v4, v6, v8, 0, 3, 1, 4) -> f_145(v1, v3, v5, v7, v2, v4, v6, v8, 0, 3, 1, 4) :|: TRUE
f_145(v1, v3, v5, v7, v2, v4, v6, v8, 0, 3, 1, 4) -> f_146(v1, v3, v5, v7, v9, v2, v4, v6, v8, 0, 3, 1, 4) :|: TRUE
f_146(v1, v3, v5, v7, v9, v2, v4, v6, v8, 0, 3, 1, 4) -> f_147(v1, v3, v5, v7, v9, v2, v4, v6, v8, 0, 3, 1, 4) :|: TRUE
f_147(v1, v3, v5, v7, v9, v2, v4, v6, v8, 0, 3, 1, 4) -> f_148(v1, v3, v5, v7, v9, v2, v4, v6, v8, 0, 3, 1, 4) :|: TRUE
f_148(v1, v3, v5, v7, v9, v2, v4, v6, v8, 0, 3, 1, 4) -> f_149(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, 0, 3, 1, 4) :|: TRUE
f_149(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, 0, 3, 1, 4) -> f_150(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, 0, 3, 1, 4) :|: TRUE
f_150(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, 0, 3, 1, 4) -> f_151(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, 0, 3, 1, 4) :|: 0 = 0
f_151(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, 0, 3, 1, 4) -> f_152(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, 0, 3, 1, 4) :|: 0 <= v9
f_151(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, 0, 3, 1, 4) -> f_153(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, 0, 3, 1, 4) :|: v9 < 0
f_152(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, 0, 3, 1, 4) -> f_154(v1, v3, v5, v7, v9, v11, 1, v2, v4, v6, v8, 0, 3, 4) :|: 0 = 0
f_153(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, 0, 3, 1, 4) -> f_155(v1, v3, v5, v7, v9, v11, 0, v2, v4, v6, v8, 3, 1, 4) :|: 0 = 0
f_154(v1, v3, v5, v7, v9, v11, 1, v2, v4, v6, v8, 0, 3, 4) -> f_156(v1, v3, v5, v7, v9, v11, 1, v2, v4, v6, v8, 0, 3, 4) :|: TRUE
f_155(v1, v3, v5, v7, v9, v11, 0, v2, v4, v6, v8, 3, 1, 4) -> f_157(v1, v3, v5, v7, v9, v11, 0, v2, v4, v6, v8, 3, 1, 4) :|: TRUE
f_156(v1, v3, v5, v7, v9, v11, 1, v2, v4, v6, v8, 0, 3, 4) -> f_158(v1, v3, v5, v7, v9, v11, 1, v2, v4, v6, v8, 0, 3, 4) :|: 0 = 0
f_158(v1, v3, v5, v7, v9, v11, 1, v2, v4, v6, v8, 0, 3, 4) -> f_159(v1, v3, v5, v7, v9, v11, 1, v2, v4, v6, v8, 0, 3, 4) :|: 0 = 0
f_159(v1, v3, v5, v7, v9, v11, 1, v2, v4, v6, v8, 0, 3, 4) -> f_160(v1, v3, v5, v7, v9, v11, 1, v2, v4, v6, v8, 0, 3, 4) :|: v9 < v11 && 1 <= v11
f_159(v1, v3, v5, v7, v9, v11, 1, v2, v4, v6, v8, 0, 3, 4) -> f_161(v1, v3, v5, v7, v9, v11, 1, v2, v4, v6, v8, 0, 3, 4) :|: v11 <= v9
f_160(v1, v3, v5, v7, v9, v11, 1, v2, v4, v6, v8, 0, 3, 4) -> f_162(v1, v3, v5, v7, v9, v11, 1, v2, v4, v6, v8, 0, 3, 4) :|: 0 = 0
f_161(v1, v3, v5, v7, v9, v11, 1, v2, v4, v6, v8, 0, 3, 4) -> f_163(v1, v3, v5, v7, v9, v11, 1, 0, v2, v4, v6, v8, 3, 4) :|: 0 = 0
f_162(v1, v3, v5, v7, v9, v11, 1, v2, v4, v6, v8, 0, 3, 4) -> f_164(v1, v3, v5, v7, v9, v11, 1, v2, v4, v6, v8, 0, 3, 4) :|: TRUE
f_163(v1, v3, v5, v7, v9, v11, 1, 0, v2, v4, v6, v8, 3, 4) -> f_165(v1, v3, v5, v7, v9, v11, 1, 0, v2, v4, v6, v8, 3, 4) :|: TRUE
f_164(v1, v3, v5, v7, v9, v11, 1, v2, v4, v6, v8, 0, 3, 4) -> f_166(v1, v3, v5, v7, v9, v11, 1, v2, v4, v6, v8, 0, 3, 4) :|: TRUE
f_166(v1, v3, v5, v7, v9, v11, 1, v2, v4, v6, v8, 0, 3, 4) -> f_167(v1, v3, v5, v7, v9, v11, 1, v2, v4, v6, v8, 0, 3, 4) :|: 0 = 0
f_167(v1, v3, v5, v7, v9, v11, 1, v2, v4, v6, v8, 0, 3, 4) -> f_168(v1, v3, v5, v7, v9, v11, 1, v13, v2, v4, v6, v8, 0, 3, 4) :|: v13 = 1 + v9 && 1 <= v13
f_168(v1, v3, v5, v7, v9, v11, 1, v13, v2, v4, v6, v8, 0, 3, 4) -> f_169(v1, v3, v5, v7, v9, v11, 1, v13, v2, v4, v6, v8, 0, 3, 4) :|: TRUE
f_169(v1, v3, v5, v7, v9, v11, 1, v13, v2, v4, v6, v8, 0, 3, 4) -> f_170(v1, v3, v5, v7, v9, v11, 1, v13, v2, v4, v6, v8, 0, 3, 4) :|: TRUE
f_170(v1, v3, v5, v7, v9, v11, 1, v13, v2, v4, v6, v8, 0, 3, 4) -> f_171(v1, v3, v5, v7, v9, v11, 1, v13, v2, v4, v6, v8, 0, 3, 4) :|: 0 = 0
f_171(v1, v3, v5, v7, v9, v11, 1, v13, v2, v4, v6, v8, 0, 3, 4) -> f_172(v1, v3, v5, v7, v9, v11, 1, v13, v2, v4, v6, v8, 0, 3, 4) :|: 0 = 0
f_172(v1, v3, v5, v7, v9, v11, 1, v13, v2, v4, v6, v8, 0, 3, 4) -> f_173(v1, v3, v5, v7, v9, v11, 1, v13, v2, v4, v6, v8, 0, 3, 4) :|: 0 = 0
f_173(v1, v3, v5, v7, v9, v11, 1, v13, v2, v4, v6, v8, 0, 3, 4) -> f_174(v1, v3, v5, v7, v9, v11, 1, v13, v2, v4, v6, v8, 0, 3, 4) :|: TRUE
f_174(v1, v3, v5, v7, v9, v11, 1, v13, v2, v4, v6, v8, 0, 3, 4) -> f_175(v1, v3, v5, v7, v9, v11, 1, v13, v15, v2, v4, v6, v8, 0, 3, 4) :|: TRUE
f_175(v1, v3, v5, v7, v9, v11, 1, v13, v15, v2, v4, v6, v8, 0, 3, 4) -> f_176(v1, v3, v5, v7, v9, v11, 1, v13, v15, v2, v4, v6, v8, 0, 3, 4) :|: v15 != 0
f_175(v1, v3, v5, v7, v9, v11, 1, v13, v15, v2, v4, v6, v8, 0, 3, 4) -> f_177(v1, v3, v5, v7, v9, v11, 1, v13, 0, v2, v4, v6, v8, 3, 4) :|: v15 = 0
f_176(v1, v3, v5, v7, v9, v11, 1, v13, v15, v2, v4, v6, v8, 0, 3, 4) -> f_178(v1, v3, v5, v7, v9, v11, 1, v13, v15, v2, v4, v6, v8, 0, 3, 4) :|: 0 = 0
f_177(v1, v3, v5, v7, v9, v11, 1, v13, 0, v2, v4, v6, v8, 3, 4) -> f_179(v1, v3, v5, v7, v9, v11, 1, v13, 0, v2, v4, v6, v8, 3, 4) :|: 0 = 0
f_178(v1, v3, v5, v7, v9, v11, 1, v13, v15, v2, v4, v6, v8, 0, 3, 4) -> f_180(v1, v3, v5, v7, v9, v11, 1, v13, v15, v2, v4, v6, v8, 0, 3, 4) :|: 0 = 0
f_179(v1, v3, v5, v7, v9, v11, 1, v13, 0, v2, v4, v6, v8, 3, 4) -> f_181(v1, v3, v5, v7, v9, v11, 1, v13, 0, v2, v4, v6, v8, 3, 4) :|: 0 = 0
f_180(v1, v3, v5, v7, v9, v11, 1, v13, v15, v2, v4, v6, v8, 0, 3, 4) -> f_182(v1, v3, v5, v7, v9, v11, 1, v13, v15, v2, v4, v6, v8, 0, 3, 4) :|: TRUE
f_181(v1, v3, v5, v7, v9, v11, 1, v13, 0, v2, v4, v6, v8, 3, 4) -> f_183(v1, v3, v5, v7, v9, v11, 1, v13, 0, v2, v4, v6, v8, 3, 4) :|: TRUE
f_182(v1, v3, v5, v7, v9, v11, 1, v13, v15, v2, v4, v6, v8, 0, 3, 4) -> f_184(v1, v3, v5, v7, v9, v11, 1, v13, v15, v2, v4, v6, v8, 0, 3, 4) :|: 0 = 0
f_183(v1, v3, v5, v7, v9, v11, 1, v13, 0, v2, v4, v6, v8, 3, 4) -> f_185(v1, v3, v5, v7, v9, v11, 1, v13, 0, v2, v4, v6, v8, 3, 4) :|: TRUE
f_184(v1, v3, v5, v7, v9, v11, 1, v13, v15, v2, v4, v6, v8, 0, 3, 4) -> f_186(v1, v3, v5, v7, v9, v11, 1, v13, v15, v2, v4, v6, v8, 0, 3, 4) :|: 0 = 0
f_186(v1, v3, v5, v7, v9, v11, 1, v13, v15, v2, v4, v6, v8, 0, 3, 4) -> f_187(v1, v3, v5, v7, v9, v11, 1, v13, v15, v2, v4, v6, v8, 0, 3, 4) :|: 0 = 0
f_187(v1, v3, v5, v7, v9, v11, 1, v13, v15, v2, v4, v6, v8, 0, 3, 4) -> f_188(v1, v3, v5, v7, v9, v11, 1, v13, v15, v2, v4, v6, v8, 0, 3, 4) :|: TRUE
f_188(v1, v3, v5, v7, v9, v11, 1, v13, v15, v2, v4, v6, v8, 0, 3, 4) -> f_189(v1, v3, v5, v7, v9, v11, 1, v13, v15, v2, v4, v6, v8, 0, 3, 4) :|: 0 = 0
f_189(v1, v3, v5, v7, v9, v11, 1, v13, v15, v2, v4, v6, v8, 0, 3, 4) -> f_190(v1, v3, v5, v7, v9, v11, 1, v13, v15, v23, v2, v4, v6, v8, 0, 3, 4, 2) :|: v23 = 1 + v13 && 2 <= v23
f_190(v1, v3, v5, v7, v9, v11, 1, v13, v15, v23, v2, v4, v6, v8, 0, 3, 4, 2) -> f_191(v1, v3, v5, v7, v9, v11, 1, v13, v15, v23, v2, v4, v6, v8, 0, 3, 4, 2) :|: TRUE
f_191(v1, v3, v5, v7, v9, v11, 1, v13, v15, v23, v2, v4, v6, v8, 0, 3, 4, 2) -> f_192(v1, v3, v5, v7, v9, v11, 1, v13, v15, v23, v2, v4, v6, v8, 0, 3, 4, 2) :|: TRUE
f_192(v1, v3, v5, v7, v9, v11, 1, v13, v15, v23, v2, v4, v6, v8, 0, 3, 4, 2) -> f_193(v1, v3, v5, v7, v9, v11, 1, v13, v15, v23, v2, v4, v6, v8, 0, 3, 4, 2) :|: TRUE
f_193(v1, v3, v5, v7, v9, v11, 1, v13, v15, v23, v2, v4, v6, v8, 0, 3, 4, 2) -> f_225(v1, v3, v5, v7, v9, v11, 1, v13, v13, v15, v23, v2, v4, v6, v8, 0, 3, 2, 4) :|: TRUE
f_225(v89, v90, v91, v92, v93, v94, 1, v96, v97, v98, v99, v100, v101, v102, v103, 0, 3, 2, 4) -> f_257(v89, v90, v91, v92, v93, v94, 1, v96, v97, v98, v99, v100, v101, v102, v103, 0, 3, 2, 4) :|: TRUE
f_257(v181, v182, v183, v184, v185, v186, 1, v188, v189, v190, v191, v192, v193, v194, v195, 0, 3, 2, 4) -> f_318(v181, v182, v183, v184, v185, v186, 1, v188, v189, v190, v191, v192, v193, v194, v195, 0, 3, 4) :|: TRUE
f_318(v538, v539, v540, v541, v542, v543, 1, v545, v546, v547, v548, v549, v550, v551, v552, 0, 3, 4) -> f_319(v538, v539, v540, v541, v542, v543, 1, v545, v548, v547, v546, v549, v550, v551, v552, 0, 3, 4) :|: 0 = 0
f_319(v538, v539, v540, v541, v542, v543, 1, v545, v548, v547, v546, v549, v550, v551, v552, 0, 3, 4) -> f_320(v538, v539, v540, v541, v542, v543, 1, v545, v548, v547, v546, v549, v550, v551, v552, 0, 3, 4) :|: 0 = 0
f_320(v538, v539, v540, v541, v542, v543, 1, v545, v548, v547, v546, v549, v550, v551, v552, 0, 3, 4) -> f_321(v538, v539, v540, v541, v542, v543, 1, v545, v548, v547, v546, v549, v550, v551, v552, 0, 3, 4) :|: v548 != v542
f_320(v538, v539, v540, v541, v542, v543, 1, v545, v548, v547, v546, v549, v550, v551, v552, 0, 3, 4) -> f_322(v538, v539, v540, v541, v542, v543, 1, v545, v547, v546, v549, v550, v551, v552, 0, 3, 2, 4) :|: v548 = v542 && 2 <= v545 && 2 <= v543
f_321(v538, v539, v540, v541, v542, v543, 1, v545, v548, v547, v546, v549, v550, v551, v552, 0, 3, 4) -> f_323(v538, v539, v540, v541, v542, v543, 1, v545, v548, v547, v546, v549, v550, v551, v552, 0, 3, 4) :|: 0 = 0
f_322(v538, v539, v540, v541, v542, v543, 1, v545, v547, v546, v549, v550, v551, v552, 0, 3, 2, 4) -> f_324(v538, v539, v540, v541, v542, v543, 1, v545, 0, v547, v546, v549, v550, v551, v552, 3, 2, 4) :|: 0 = 0
f_323(v538, v539, v540, v541, v542, v543, 1, v545, v548, v547, v546, v549, v550, v551, v552, 0, 3, 4) -> f_325(v538, v539, v540, v541, v542, v543, 1, v545, v548, v547, v546, v549, v550, v551, v552, 0, 3, 4) :|: TRUE
f_324(v538, v539, v540, v541, v542, v543, 1, v545, 0, v547, v546, v549, v550, v551, v552, 3, 2, 4) -> f_326(v538, v539, v540, v541, v542, v543, 1, v545, 0, v547, v546, v549, v550, v551, v552, 3, 2, 4) :|: 0 = 0
f_325(v538, v539, v540, v541, v542, v543, 1, v545, v548, v547, v546, v549, v550, v551, v552, 0, 3, 4) -> f_327(v538, v539, v540, v541, v542, v543, 1, v545, v548, v573, v546, v549, v550, v551, v552, 0, 3, 4) :|: TRUE
f_326(v538, v539, v540, v541, v542, v543, 1, v545, 0, v547, v546, v549, v550, v551, v552, 3, 2, 4) -> f_328(v538, v539, v540, v541, v542, v543, 1, v545, 0, v547, v546, v549, v550, v551, v552, 3, 2, 4) :|: TRUE
f_327(v538, v539, v540, v541, v542, v543, 1, v545, v548, v573, v546, v549, v550, v551, v552, 0, 3, 4) -> f_329(v538, v539, v540, v541, v542, v543, 1, v545, v548, v573, v546, v549, v550, v551, v552, 0, 3, 4) :|: v573 != 0
f_327(v538, v539, v540, v541, v542, v543, 1, v545, v548, v573, v546, v549, v550, v551, v552, 0, 3, 4) -> f_330(v538, v539, v540, v541, v542, v543, 1, v545, v548, 0, v546, v549, v550, v551, v552, 3, 4) :|: v573 = 0
f_328(v538, v539, v540, v541, v542, v543, 1, v545, 0, v547, v546, v549, v550, v551, v552, 3, 2, 4) -> f_331(v538, v539, v540, v541, v542, v543, 1, v545, 0, v547, v546, v549, v550, v551, v552, 3, 2, 4) :|: TRUE
f_329(v538, v539, v540, v541, v542, v543, 1, v545, v548, v573, v546, v549, v550, v551, v552, 0, 3, 4) -> f_332(v538, v539, v540, v541, v542, v543, 1, v545, v548, v573, v546, v549, v550, v551, v552, 0, 3, 4) :|: 0 = 0
f_330(v538, v539, v540, v541, v542, v543, 1, v545, v548, 0, v546, v549, v550, v551, v552, 3, 4) -> f_333(v538, v539, v540, v541, v542, v543, 1, v545, v548, 0, v546, v549, v550, v551, v552, 3, 4) :|: 0 = 0
f_332(v538, v539, v540, v541, v542, v543, 1, v545, v548, v573, v546, v549, v550, v551, v552, 0, 3, 4) -> f_334(v538, v539, v540, v541, v542, v543, 1, v545, v548, v573, v546, v549, v550, v551, v552, 0, 3, 4) :|: 0 = 0
f_333(v538, v539, v540, v541, v542, v543, 1, v545, v548, 0, v546, v549, v550, v551, v552, 3, 4) -> f_335(v538, v539, v540, v541, v542, v543, 1, v545, v548, 0, v546, v549, v550, v551, v552, 3, 4) :|: 0 = 0
f_334(v538, v539, v540, v541, v542, v543, 1, v545, v548, v573, v546, v549, v550, v551, v552, 0, 3, 4) -> f_336(v538, v539, v540, v541, v542, v543, 1, v545, v548, v573, v546, v549, v550, v551, v552, 0, 3, 4) :|: TRUE
f_335(v538, v539, v540, v541, v542, v543, 1, v545, v548, 0, v546, v549, v550, v551, v552, 3, 4) -> f_337(v538, v539, v540, v541, v542, v543, 1, v545, v548, 0, v546, v549, v550, v551, v552, 3, 4) :|: TRUE
f_336(v538, v539, v540, v541, v542, v543, 1, v545, v548, v573, v546, v549, v550, v551, v552, 0, 3, 4) -> f_338(v538, v539, v540, v541, v542, v543, 1, v545, v548, v573, v546, v549, v550, v551, v552, 0, 3, 4) :|: 0 = 0
f_337(v538, v539, v540, v541, v542, v543, 1, v545, v548, 0, v546, v549, v550, v551, v552, 3, 4) -> f_339(v538, v539, v540, v541, v542, v543, 1, v545, v548, 0, v546, v549, v550, v551, v552, 3, 4) :|: TRUE
f_338(v538, v539, v540, v541, v542, v543, 1, v545, v548, v573, v546, v549, v550, v551, v552, 0, 3, 4) -> f_340(v538, v539, v540, v541, v542, v543, 1, v545, v548, v573, v546, v549, v550, v551, v552, 0, 3, 4) :|: 0 = 0
f_340(v538, v539, v540, v541, v542, v543, 1, v545, v548, v573, v546, v549, v550, v551, v552, 0, 3, 4) -> f_341(v538, v539, v540, v541, v542, v543, 1, v545, v548, v573, v546, v549, v550, v551, v552, 0, 3, 4) :|: v548 <= v543
f_340(v538, v539, v540, v541, v542, v543, 1, v545, v548, v573, v546, v549, v550, v551, v552, 0, 3, 4) -> f_342(v538, v539, v540, v541, v542, v543, 1, v545, v548, v573, v549, v550, v551, v552, 0, 3, 2, 4) :|: v543 < v548 && 2 <= v548 && v546 = v543
f_341(v538, v539, v540, v541, v542, v543, 1, v545, v548, v573, v546, v549, v550, v551, v552, 0, 3, 4) -> f_343(v538, v539, v540, v541, v542, v543, 1, v545, v548, v573, v546, v549, v550, v551, v552, 0, 3, 4) :|: 0 = 0
f_342(v538, v539, v540, v541, v542, v543, 1, v545, v548, v573, v549, v550, v551, v552, 0, 3, 2, 4) -> f_344(v538, v539, v540, v541, v542, v543, 1, v545, v548, v573, 0, v549, v550, v551, v552, 3, 2, 4) :|: 0 = 0
f_343(v538, v539, v540, v541, v542, v543, 1, v545, v548, v573, v546, v549, v550, v551, v552, 0, 3, 4) -> f_345(v538, v539, v540, v541, v542, v543, 1, v545, v548, v573, v546, v549, v550, v551, v552, 0, 3, 4) :|: TRUE
f_344(v538, v539, v540, v541, v542, v543, 1, v545, v548, v573, 0, v549, v550, v551, v552, 3, 2, 4) -> f_346(v538, v539, v540, v541, v542, v543, 1, v545, v548, v573, 0, v549, v550, v551, v552, 3, 2, 4) :|: TRUE
f_345(v538, v539, v540, v541, v542, v543, 1, v545, v548, v573, v546, v549, v550, v551, v552, 0, 3, 4) -> f_379(v538, v539, v540, v541, v542, v543, 1, v545, v548, v573, v546, v548, v549, v550, v551, v552, 0, 3, 4) :|: TRUE
f_346(v538, v539, v540, v541, v542, v543, 1, v545, v548, v573, 0, v549, v550, v551, v552, 3, 2, 4) -> f_348(v538, v539, v540, v541, v542, v543, 1, v545, v548, v573, 0, v549, v550, v551, v552, 3, 2, 4) :|: TRUE
f_348(v538, v539, v540, v541, v542, v543, 1, v545, v548, v573, 0, v549, v550, v551, v552, 3, 2, 4) -> f_350(v538, v539, v540, v541, v542, v543, 1, v545, v548, v573, 0, v549, v550, v551, v552, 3, 2, 4) :|: TRUE
f_350(v538, v539, v540, v541, v542, v543, 1, v545, v548, v573, 0, v549, v550, v551, v552, 3, 2, 4) -> f_352(v538, v539, v540, v541, v542, v543, 1, v545, v548, v573, 0, v549, v550, v551, v552, 3, 2, 4) :|: TRUE
f_352(v538, v539, v540, v541, v542, v543, 1, v545, v548, v573, 0, v549, v550, v551, v552, 3, 2, 4) -> f_354(v538, v539, v540, v541, v542, v543, 1, v545, 0, v573, v548, v549, v550, v551, v552, 3, 2, 4) :|: 0 = 0
f_354(v538, v539, v540, v541, v542, v543, 1, v545, 0, v573, v548, v549, v550, v551, v552, 3, 2, 4) -> f_356(v538, v539, v540, v541, v542, v543, 1, v545, 0, v573, v548, v549, v550, v551, v552, 3, 2, 4) :|: 0 = 0
f_356(v538, v539, v540, v541, v542, v543, 1, v545, 0, v573, v548, v549, v550, v551, v552, 3, 2, 4) -> f_357(v538, v539, v540, v541, v542, v543, 1, v545, 0, v573, v548, v549, v550, v551, v552, 3, 2, 4) :|: 0 < v542 && 2 <= v545 && 2 <= v543 && 3 <= v548
f_356(v538, v539, v540, v541, v542, v543, 1, v545, 0, v573, v548, v549, v550, v551, v552, 3, 2, 4) -> f_358(v538, v539, v540, v541, 0, v543, 1, v573, v548, v549, v550, v551, v552, 3, 2, 4) :|: 0 = v542
f_357(v538, v539, v540, v541, v542, v543, 1, v545, 0, v573, v548, v549, v550, v551, v552, 3, 2, 4) -> f_359(v538, v539, v540, v541, v542, v543, 1, v545, 0, v573, v548, v549, v550, v551, v552, 3, 2, 4) :|: 0 = 0
f_358(v538, v539, v540, v541, 0, v543, 1, v573, v548, v549, v550, v551, v552, 3, 2, 4) -> f_360(v538, v539, v540, v541, 0, v543, 1, v573, v548, v549, v550, v551, v552, 3, 2, 4) :|: 0 = 0
f_359(v538, v539, v540, v541, v542, v543, 1, v545, 0, v573, v548, v549, v550, v551, v552, 3, 2, 4) -> f_361(v538, v539, v540, v541, v542, v543, 1, v545, 0, v573, v548, v549, v550, v551, v552, 3, 2, 4) :|: TRUE
f_360(v538, v539, v540, v541, 0, v543, 1, v573, v548, v549, v550, v551, v552, 3, 2, 4) -> f_362(v538, v539, v540, v541, 0, v543, 1, v573, v548, v549, v550, v551, v552, 3, 2, 4) :|: 0 = 0
f_361(v538, v539, v540, v541, v542, v543, 1, v545, 0, v573, v548, v549, v550, v551, v552, 3, 2, 4) -> f_363(v538, v539, v540, v541, v542, v543, 1, v545, 0, v742, v548, v549, v550, v551, v552, 3, 2, 4) :|: TRUE
f_362(v538, v539, v540, v541, 0, v543, 1, v573, v548, v549, v550, v551, v552, 3, 2, 4) -> f_364(v538, v539, v540, v541, 0, v543, 1, v573, v548, v549, v550, v551, v552, 3, 2, 4) :|: TRUE
f_363(v538, v539, v540, v541, v542, v543, 1, v545, 0, v742, v548, v549, v550, v551, v552, 3, 2, 4) -> f_365(v538, v539, v540, v541, v542, v543, 1, v545, 0, v742, v548, v549, v550, v551, v552, 3, 2, 4) :|: v742 != 0
f_363(v538, v539, v540, v541, v542, v543, 1, v545, 0, v742, v548, v549, v550, v551, v552, 3, 2, 4) -> f_366(v538, v539, v540, v541, v542, v543, 1, v545, 0, v548, v549, v550, v551, v552, 3, 2, 4) :|: v742 = 0
f_364(v538, v539, v540, v541, 0, v543, 1, v573, v548, v549, v550, v551, v552, 3, 2, 4) -> f_367(v538, v539, v540, v541, 0, v543, 1, v573, v548, v549, v550, v551, v552, 3, 2, 4) :|: TRUE
f_365(v538, v539, v540, v541, v542, v543, 1, v545, 0, v742, v548, v549, v550, v551, v552, 3, 2, 4) -> f_368(v538, v539, v540, v541, v542, v543, 1, v545, 0, v742, v548, v549, v550, v551, v552, 3, 2, 4) :|: 0 = 0
f_366(v538, v539, v540, v541, v542, v543, 1, v545, 0, v548, v549, v550, v551, v552, 3, 2, 4) -> f_369(v538, v539, v540, v541, v542, v543, 1, v545, 0, v548, v549, v550, v551, v552, 3, 2, 4) :|: 0 = 0
f_368(v538, v539, v540, v541, v542, v543, 1, v545, 0, v742, v548, v549, v550, v551, v552, 3, 2, 4) -> f_370(v538, v539, v540, v541, v542, v543, 1, v545, 0, v742, v548, v549, v550, v551, v552, 3, 2, 4) :|: 0 = 0
f_369(v538, v539, v540, v541, v542, v543, 1, v545, 0, v548, v549, v550, v551, v552, 3, 2, 4) -> f_371(v538, v539, v540, v541, v542, v543, 1, v545, 0, v548, v549, v550, v551, v552, 3, 2, 4) :|: 0 = 0
f_370(v538, v539, v540, v541, v542, v543, 1, v545, 0, v742, v548, v549, v550, v551, v552, 3, 2, 4) -> f_372(v538, v539, v540, v541, v542, v543, 1, v545, 0, v742, v548, v549, v550, v551, v552, 3, 2, 4) :|: TRUE
f_371(v538, v539, v540, v541, v542, v543, 1, v545, 0, v548, v549, v550, v551, v552, 3, 2, 4) -> f_373(v538, v539, v540, v541, v542, v543, 1, v545, 0, v548, v549, v550, v551, v552, 3, 2, 4) :|: TRUE
f_372(v538, v539, v540, v541, v542, v543, 1, v545, 0, v742, v548, v549, v550, v551, v552, 3, 2, 4) -> f_374(v538, v539, v540, v541, v542, v543, 1, v545, 0, v742, v548, v549, v550, v551, v552, 3, 2, 4) :|: 0 = 0
f_373(v538, v539, v540, v541, v542, v543, 1, v545, 0, v548, v549, v550, v551, v552, 3, 2, 4) -> f_375(v538, v539, v540, v541, v542, v543, 1, v545, 0, v548, v549, v550, v551, v552, 3, 2, 4) :|: TRUE
f_374(v538, v539, v540, v541, v542, v543, 1, v545, 0, v742, v548, v549, v550, v551, v552, 3, 2, 4) -> f_376(v538, v539, v540, v541, v542, v543, 1, v545, 0, v742, v548, v549, v550, v551, v552, 3, 2, 4) :|: 0 = 0
f_376(v538, v539, v540, v541, v542, v543, 1, v545, 0, v742, v548, v549, v550, v551, v552, 3, 2, 4) -> f_377(v538, v539, v540, v541, v542, v543, 1, v545, 0, v742, v548, v549, v550, v551, v552, 3, 2, 4) :|: 0 = 0
f_377(v538, v539, v540, v541, v542, v543, 1, v545, 0, v742, v548, v549, v550, v551, v552, 3, 2, 4) -> f_378(v538, v539, v540, v541, v542, v543, 1, v545, 0, v742, v548, v549, v550, v551, v552, 3, 2, 4) :|: TRUE
f_378(v538, v539, v540, v541, v542, v543, 1, v545, 0, v742, v548, v549, v550, v551, v552, 3, 2, 4) -> f_379(v538, v539, v540, v541, v542, v543, 1, v545, 0, v742, v543, v548, v549, v550, v551, v552, 0, 3, 4) :|: TRUE
f_379(v956, v957, v958, v959, v960, v961, 1, v963, v964, v965, v966, v967, v968, v969, v970, v971, 0, 3, 4) -> f_380(v956, v957, v958, v959, v960, v961, 1, v963, v964, v965, v967, v968, v969, v970, v971, 0, 3, 4) :|: 0 = 0
f_380(v956, v957, v958, v959, v960, v961, 1, v963, v964, v965, v967, v968, v969, v970, v971, 0, 3, 4) -> f_381(v956, v957, v958, v959, v960, v961, 1, v963, v964, v965, v973, v968, v969, v970, v971, 0, 3, 4) :|: v973 = 1 + v964 && 1 <= v973
f_381(v956, v957, v958, v959, v960, v961, 1, v963, v964, v965, v973, v968, v969, v970, v971, 0, 3, 4) -> f_382(v956, v957, v958, v959, v960, v961, 1, v963, v964, v965, v973, v968, v969, v970, v971, 0, 3, 4) :|: TRUE
f_382(v956, v957, v958, v959, v960, v961, 1, v963, v964, v965, v973, v968, v969, v970, v971, 0, 3, 4) -> f_383(v956, v957, v958, v959, v960, v961, 1, v963, v964, v965, v973, v968, v969, v970, v971, 0, 3, 4) :|: TRUE
f_383(v956, v957, v958, v959, v960, v961, 1, v963, v964, v965, v973, v968, v969, v970, v971, 0, 3, 4) -> f_384(v956, v957, v958, v959, v960, v961, 1, v963, v964, v965, v973, v968, v969, v970, v971, 0, 3, 4) :|: TRUE
f_384(v956, v957, v958, v959, v960, v961, 1, v963, v964, v965, v973, v968, v969, v970, v971, 0, 3, 4) -> f_318(v956, v957, v958, v959, v960, v961, 1, v963, v964, v965, v973, v968, v969, v970, v971, 0, 3, 4) :|: TRUE
Combined rules. Obtained 28 rulesP rules:
f_320(v538:0, v539:0, v540:0, v541:0, v542:0, v543:0, 1, v545:0, v548:0, v547:0, v543:0, v549:0, v550:0, v551:0, v552:0, 0, 3, 4) -> f_320(v538:0, v539:0, v540:0, v541:0, v542:0, v543:0, 1, v545:0, 1, v742:0, 0, v549:0, v550:0, v551:0, v552:0, 0, 3, 4) :|: v548:0 > 2 && v548:0 < v542:0 && v573:0 < 0 && v548:0 > v543:0 && v545:0 > 1 && v542:0 > 0 && v742:0 < 0 && v543:0 > 1
f_320(v538:0, v539:0, v540:0, v541:0, v542:0, v543:0, 1, v545:0, v548:0, v547:0, v543:0, v549:0, v550:0, v551:0, v552:0, 0, 3, 4) -> f_320(v538:0, v539:0, v540:0, v541:0, v542:0, v543:0, 1, v545:0, 1, v742:0, 0, v549:0, v550:0, v551:0, v552:0, 0, 3, 4) :|: v548:0 > 2 && v548:0 < v542:0 && v573:0 < 0 && v548:0 > v543:0 && v545:0 > 1 && v542:0 > 0 && v742:0 > 0 && v543:0 > 1
f_320(v538:0, v539:0, v540:0, v541:0, v542:0, v543:0, 1, v545:0, v548:0, v547:0, v543:0, v549:0, v550:0, v551:0, v552:0, 0, 3, 4) -> f_320(v538:0, v539:0, v540:0, v541:0, v542:0, v543:0, 1, v545:0, 1, v742:0, 0, v549:0, v550:0, v551:0, v552:0, 0, 3, 4) :|: v548:0 > 2 && v548:0 < v542:0 && v573:0 > 0 && v548:0 > v543:0 && v545:0 > 1 && v542:0 > 0 && v742:0 < 0 && v543:0 > 1
f_320(v538:0, v539:0, v540:0, v541:0, v542:0, v543:0, 1, v545:0, v548:0, v547:0, v543:0, v549:0, v550:0, v551:0, v552:0, 0, 3, 4) -> f_320(v538:0, v539:0, v540:0, v541:0, v542:0, v543:0, 1, v545:0, 1, v742:0, 0, v549:0, v550:0, v551:0, v552:0, 0, 3, 4) :|: v548:0 > 2 && v548:0 < v542:0 && v573:0 > 0 && v548:0 > v543:0 && v545:0 > 1 && v542:0 > 0 && v742:0 > 0 && v543:0 > 1
f_320(v538:0, v539:0, v540:0, v541:0, v542:0, v543:0, 1, v545:0, v548:0, v547:0, v543:0, v549:0, v550:0, v551:0, v552:0, 0, 3, 4) -> f_320(v538:0, v539:0, v540:0, v541:0, v542:0, v543:0, 1, v545:0, 1, v742:0, 0, v549:0, v550:0, v551:0, v552:0, 0, 3, 4) :|: v548:0 > 2 && v548:0 > v542:0 && v573:0 < 0 && v548:0 > v543:0 && v545:0 > 1 && v542:0 > 0 && v742:0 < 0 && v543:0 > 1
f_320(v538:0, v539:0, v540:0, v541:0, v542:0, v543:0, 1, v545:0, v548:0, v547:0, v543:0, v549:0, v550:0, v551:0, v552:0, 0, 3, 4) -> f_320(v538:0, v539:0, v540:0, v541:0, v542:0, v543:0, 1, v545:0, 1, v742:0, 0, v549:0, v550:0, v551:0, v552:0, 0, 3, 4) :|: v548:0 > 2 && v548:0 > v542:0 && v573:0 < 0 && v548:0 > v543:0 && v545:0 > 1 && v542:0 > 0 && v742:0 > 0 && v543:0 > 1
f_320(v538:0, v539:0, v540:0, v541:0, v542:0, v543:0, 1, v545:0, v548:0, v547:0, v543:0, v549:0, v550:0, v551:0, v552:0, 0, 3, 4) -> f_320(v538:0, v539:0, v540:0, v541:0, v542:0, v543:0, 1, v545:0, 1, v742:0, 0, v549:0, v550:0, v551:0, v552:0, 0, 3, 4) :|: v548:0 > 2 && v548:0 > v542:0 && v573:0 > 0 && v548:0 > v543:0 && v545:0 > 1 && v542:0 > 0 && v742:0 < 0 && v543:0 > 1
f_320(v538:0, v539:0, v540:0, v541:0, v542:0, v543:0, 1, v545:0, v548:0, v547:0, v543:0, v549:0, v550:0, v551:0, v552:0, 0, 3, 4) -> f_320(v538:0, v539:0, v540:0, v541:0, v542:0, v543:0, 1, v545:0, 1, v742:0, 0, v549:0, v550:0, v551:0, v552:0, 0, 3, 4) :|: v548:0 > 2 && v548:0 > v542:0 && v573:0 > 0 && v548:0 > v543:0 && v545:0 > 1 && v542:0 > 0 && v742:0 > 0 && v543:0 > 1
f_139 -> f_157(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, 0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 3, 1, 4) :|: v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 < 0
f_139 -> f_320(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, 1, 1 + v9:0, 1 + (1 + v9:0), v15:0, 1 + v9:0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 0, 3, 4) :|: v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > -1 && v11:0 > 0 && v9:0 < v11:0 && v15:0 < 0
f_139 -> f_320(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, 1, 1 + v9:0, 1 + (1 + v9:0), v15:0, 1 + v9:0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 0, 3, 4) :|: v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > -1 && v11:0 > 0 && v9:0 < v11:0 && v15:0 > 0
f_320(v538:0, v539:0, v540:0, v541:0, 0, v543:0, 1, v545:0, v548:0, v547:0, v543:0, v549:0, v550:0, v551:0, v552:0, 0, 3, 4) -> f_367(v538:0, v539:0, v540:0, v541:0, 0, v543:0, 1, v573:0, v548:0, v549:0, v550:0, v551:0, v552:0, 3, 2, 4) :|: v548:0 < 0 && v573:0 < 0 && v548:0 > v543:0 && v548:0 > 1
f_320(v538:0, v539:0, v540:0, v541:0, 0, v543:0, 1, v545:0, v548:0, v547:0, v543:0, v549:0, v550:0, v551:0, v552:0, 0, 3, 4) -> f_367(v538:0, v539:0, v540:0, v541:0, 0, v543:0, 1, v573:0, v548:0, v549:0, v550:0, v551:0, v552:0, 3, 2, 4) :|: v548:0 < 0 && v573:0 > 0 && v548:0 > v543:0 && v548:0 > 1
f_320(v538:0, v539:0, v540:0, v541:0, 0, v543:0, 1, v545:0, v548:0, v547:0, v543:0, v549:0, v550:0, v551:0, v552:0, 0, 3, 4) -> f_367(v538:0, v539:0, v540:0, v541:0, 0, v543:0, 1, v573:0, v548:0, v549:0, v550:0, v551:0, v552:0, 3, 2, 4) :|: v548:0 > 1 && v548:0 > v543:0 && v573:0 < 0
f_320(v538:0, v539:0, v540:0, v541:0, 0, v543:0, 1, v545:0, v548:0, v547:0, v543:0, v549:0, v550:0, v551:0, v552:0, 0, 3, 4) -> f_367(v538:0, v539:0, v540:0, v541:0, 0, v543:0, 1, v573:0, v548:0, v549:0, v550:0, v551:0, v552:0, 3, 2, 4) :|: v548:0 > 1 && v548:0 > v543:0 && v573:0 > 0
f_320(v538:0, v539:0, v540:0, v541:0, v542:0, v543:0, 1, v545:0, v548:0, v547:0, v543:0, v549:0, v550:0, v551:0, v552:0, 0, 3, 4) -> f_375(v538:0, v539:0, v540:0, v541:0, v542:0, v543:0, 1, v545:0, 0, v548:0, v549:0, v550:0, v551:0, v552:0, 3, 2, 4) :|: v548:0 > 2 && v548:0 < v542:0 && v573:0 < 0 && v548:0 > v543:0 && v545:0 > 1 && v543:0 > 1 && v542:0 > 0
f_320(v538:0, v539:0, v540:0, v541:0, v542:0, v543:0, 1, v545:0, v548:0, v547:0, v543:0, v549:0, v550:0, v551:0, v552:0, 0, 3, 4) -> f_375(v538:0, v539:0, v540:0, v541:0, v542:0, v543:0, 1, v545:0, 0, v548:0, v549:0, v550:0, v551:0, v552:0, 3, 2, 4) :|: v548:0 > 2 && v548:0 < v542:0 && v573:0 > 0 && v548:0 > v543:0 && v545:0 > 1 && v543:0 > 1 && v542:0 > 0
f_320(v538:0, v539:0, v540:0, v541:0, v542:0, v543:0, 1, v545:0, v548:0, v547:0, v543:0, v549:0, v550:0, v551:0, v552:0, 0, 3, 4) -> f_375(v538:0, v539:0, v540:0, v541:0, v542:0, v543:0, 1, v545:0, 0, v548:0, v549:0, v550:0, v551:0, v552:0, 3, 2, 4) :|: v548:0 > 2 && v548:0 > v542:0 && v573:0 < 0 && v548:0 > v543:0 && v545:0 > 1 && v543:0 > 1 && v542:0 > 0
f_320(v538:0, v539:0, v540:0, v541:0, v542:0, v543:0, 1, v545:0, v548:0, v547:0, v543:0, v549:0, v550:0, v551:0, v552:0, 0, 3, 4) -> f_375(v538:0, v539:0, v540:0, v541:0, v542:0, v543:0, 1, v545:0, 0, v548:0, v549:0, v550:0, v551:0, v552:0, 3, 2, 4) :|: v548:0 > 2 && v548:0 > v542:0 && v573:0 > 0 && v548:0 > v543:0 && v545:0 > 1 && v543:0 > 1 && v542:0 > 0
f_320(v538:0, v539:0, v540:0, v541:0, v542:0, v543:0, 1, v545:0, v548:0, v547:0, v546:0, v549:0, v550:0, v551:0, v552:0, 0, 3, 4) -> f_320(v538:0, v539:0, v540:0, v541:0, v542:0, v543:0, 1, v545:0, 1 + v548:0, v573:0, v548:0, v549:0, v550:0, v551:0, v552:0, 0, 3, 4) :|: v548:0 < v542:0 && v573:0 < 0 && v548:0 > -1 && v548:0 <= v543:0
f_320(v538:0, v539:0, v540:0, v541:0, v542:0, v543:0, 1, v545:0, v548:0, v547:0, v546:0, v549:0, v550:0, v551:0, v552:0, 0, 3, 4) -> f_320(v538:0, v539:0, v540:0, v541:0, v542:0, v543:0, 1, v545:0, 1 + v548:0, v573:0, v548:0, v549:0, v550:0, v551:0, v552:0, 0, 3, 4) :|: v548:0 < v542:0 && v573:0 > 0 && v548:0 > -1 && v548:0 <= v543:0
f_320(v538:0, v539:0, v540:0, v541:0, v542:0, v543:0, 1, v545:0, v548:0, v547:0, v546:0, v549:0, v550:0, v551:0, v552:0, 0, 3, 4) -> f_320(v538:0, v539:0, v540:0, v541:0, v542:0, v543:0, 1, v545:0, 1 + v548:0, v573:0, v548:0, v549:0, v550:0, v551:0, v552:0, 0, 3, 4) :|: v548:0 > v542:0 && v573:0 < 0 && v548:0 > -1 && v548:0 <= v543:0
f_320(v538:0, v539:0, v540:0, v541:0, v542:0, v543:0, 1, v545:0, v548:0, v547:0, v546:0, v549:0, v550:0, v551:0, v552:0, 0, 3, 4) -> f_320(v538:0, v539:0, v540:0, v541:0, v542:0, v543:0, 1, v545:0, 1 + v548:0, v573:0, v548:0, v549:0, v550:0, v551:0, v552:0, 0, 3, 4) :|: v548:0 > v542:0 && v573:0 > 0 && v548:0 > -1 && v548:0 <= v543:0
f_320(v538:0, v539:0, v540:0, v541:0, v542:0, v543:0, 1, v545:0, v542:0, v547:0, v546:0, v549:0, v550:0, v551:0, v552:0, 0, 3, 4) -> f_331(v538:0, v539:0, v540:0, v541:0, v542:0, v543:0, 1, v545:0, 0, v547:0, v546:0, v549:0, v550:0, v551:0, v552:0, 3, 2, 4) :|: v543:0 > 1 && v545:0 > 1
f_139 -> f_185(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, 1, 1 + v9:0, 0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 3, 4) :|: v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > -1 && v11:0 > 0 && v9:0 < v11:0
f_139 -> f_165(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, 1, 0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 3, 4) :|: v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 >= v11:0 && v9:0 > -1
f_320(v538:0, v539:0, v540:0, v541:0, v542:0, v543:0, 1, v545:0, v548:0, v547:0, v546:0, v549:0, v550:0, v551:0, v552:0, 0, 3, 4) -> f_339(v538:0, v539:0, v540:0, v541:0, v542:0, v543:0, 1, v545:0, v548:0, 0, v546:0, v549:0, v550:0, v551:0, v552:0, 3, 4) :|: v548:0 < v542:0
f_320(v538:0, v539:0, v540:0, v541:0, v542:0, v543:0, 1, v545:0, v548:0, v547:0, v546:0, v549:0, v550:0, v551:0, v552:0, 0, 3, 4) -> f_339(v538:0, v539:0, v540:0, v541:0, v542:0, v543:0, 1, v545:0, v548:0, 0, v546:0, v549:0, v550:0, v551:0, v552:0, 3, 4) :|: v548:0 > v542:0
Filtered unneeded arguments:
   f_320(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18) -> f_320(x5, x6, x8, x9, x11)
Removed division, modulo operations, cleaned up constraints. Obtained 17 rules.P rules:
f_320(v542:0, v543:0, v545:0, v548:0, v543:01) -> f_320(v542:0, v543:0, v545:0, 1, 0) :|: v548:0 < v542:0 && v548:0 > 2 && v548:0 > v543:0 && v545:0 > 1 && v543:0 > 1 && v542:0 > 0 && v543:0 = v543:01
f_320(v542:0, v543:0, v545:0, v548:0, v543:01) -> f_320(v542:0, v543:0, v545:0, 1, 0) :|: v548:0 > v542:0 && v548:0 > 2 && v548:0 > v543:0 && v545:0 > 1 && v543:0 > 1 && v542:0 > 0 && v543:0 = v543:01
f_139 -> f_157(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, 0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 3, 1, 4) :|: v1:0 > 0 && v3:0 > 0 && v5:0 > 0 && v9:0 < 0 && v7:0 > 0
f_139 -> f_320(v9:0, v11:0, 1 + v9:0, 1 + (1 + v9:0), 1 + v9:0) :|: v11:0 > 0 && v9:0 < v11:0 && v9:0 > -1
f_320(cons_0, v543:0, v545:0, v548:0, v543:01) -> f_367(v538:0, v539:0, v540:0, v541:0, 0, v543:0, 1, v573:0, v548:0, v549:0, v550:0, v551:0, v552:0, 3, 2, 4) :|: v573:0 < 0 && v548:0 < 0 && v548:0 > 1 && v548:0 > v543:0 && cons_0 = 0 && v543:0 = v543:01
f_320(cons_0, v543:0, v545:0, v548:0, v543:01) -> f_367(v538:0, v539:0, v540:0, v541:0, 0, v543:0, 1, v573:0, v548:0, v549:0, v550:0, v551:0, v552:0, 3, 2, 4) :|: v573:0 > 0 && v548:0 < 0 && v548:0 > 1 && v548:0 > v543:0 && cons_0 = 0 && v543:0 = v543:01
f_320(cons_0, v543:0, v545:0, v548:0, v543:01) -> f_367(v538:0, v539:0, v540:0, v541:0, 0, v543:0, 1, v573:0, v548:0, v549:0, v550:0, v551:0, v552:0, 3, 2, 4) :|: v548:0 > v543:0 && v573:0 < 0 && v548:0 > 1 && cons_0 = 0 && v543:0 = v543:01
f_320(cons_0, v543:0, v545:0, v548:0, v543:01) -> f_367(v538:0, v539:0, v540:0, v541:0, 0, v543:0, 1, v573:0, v548:0, v549:0, v550:0, v551:0, v552:0, 3, 2, 4) :|: v548:0 > v543:0 && v573:0 > 0 && v548:0 > 1 && cons_0 = 0 && v543:0 = v543:01
f_320(v542:0, v543:0, v545:0, v548:0, v543:01) -> f_375(v538:0, v539:0, v540:0, v541:0, v542:0, v543:0, 1, v545:0, 0, v548:0, v549:0, v550:0, v551:0, v552:0, 3, 2, 4) :|: v548:0 < v542:0 && v548:0 > 2 && v548:0 > v543:0 && v545:0 > 1 && v542:0 > 0 && v543:0 > 1 && v543:0 = v543:01
f_320(v542:0, v543:0, v545:0, v548:0, v543:01) -> f_375(v538:0, v539:0, v540:0, v541:0, v542:0, v543:0, 1, v545:0, 0, v548:0, v549:0, v550:0, v551:0, v552:0, 3, 2, 4) :|: v548:0 > v542:0 && v548:0 > 2 && v548:0 > v543:0 && v545:0 > 1 && v542:0 > 0 && v543:0 > 1 && v543:0 = v543:01
f_320(v542:0, v543:0, v545:0, v548:0, v546:0) -> f_320(v542:0, v543:0, v545:0, 1 + v548:0, v548:0) :|: v548:0 > -1 && v548:0 <= v543:0 && v548:0 < v542:0
f_320(v542:0, v543:0, v545:0, v548:0, v546:0) -> f_320(v542:0, v543:0, v545:0, 1 + v548:0, v548:0) :|: v548:0 > -1 && v548:0 <= v543:0 && v548:0 > v542:0
f_320(v542:0, v543:0, v545:0, v542:01, v546:0) -> f_331(v538:0, v539:0, v540:0, v541:0, v542:0, v543:0, 1, v545:0, 0, v547:0, v546:0, v549:0, v550:0, v551:0, v552:0, 3, 2, 4) :|: v543:0 > 1 && v545:0 > 1 && v542:0 = v542:01
f_139 -> f_185(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, 1, 1 + v9:0, 0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 3, 4) :|: v1:0 > 0 && v3:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > -1 && v9:0 < v11:0 && v11:0 > 0
f_139 -> f_165(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, 1, 0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 3, 4) :|: v1:0 > 0 && v3:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > -1 && v9:0 >= v11:0
f_320(v542:0, v543:0, v545:0, v548:0, v546:0) -> f_339(v538:0, v539:0, v540:0, v541:0, v542:0, v543:0, 1, v545:0, v548:0, 0, v546:0, v549:0, v550:0, v551:0, v552:0, 3, 4) :|: v548:0 < v542:0
f_320(v542:0, v543:0, v545:0, v548:0, v546:0) -> f_339(v538:0, v539:0, v540:0, v541:0, v542:0, v543:0, 1, v545:0, v548:0, 0, v546:0, v549:0, v550:0, v551:0, v552:0, 3, 4) :|: v548:0 > v542:0

----------------------------------------

(6)
Obligation:
Rules:
f_320(v542:0, v543:0, v545:0, v548:0, v543:01) -> f_320(v542:0, v543:0, v545:0, 1, 0) :|: v548:0 < v542:0 && v548:0 > 2 && v548:0 > v543:0 && v545:0 > 1 && v543:0 > 1 && v542:0 > 0 && v543:0 = v543:01
f_320(x, x1, x2, x3, x4) -> f_320(x, x1, x2, 1, 0) :|: x3 > x && x3 > 2 && x3 > x1 && x2 > 1 && x1 > 1 && x > 0 && x1 = x4
f_139 -> f_157(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, 0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 3, 1, 4) :|: v1:0 > 0 && v3:0 > 0 && v5:0 > 0 && v9:0 < 0 && v7:0 > 0
f_139 -> f_320(x5, x6, 1 + x5, 1 + (1 + x5), 1 + x5) :|: x6 > 0 && x5 < x6 && x5 > -1
f_320(x7, x8, x9, x10, x11) -> f_367(x12, x13, x14, x15, 0, x8, 1, x16, x10, x17, x18, x19, x20, 3, 2, 4) :|: x16 < 0 && x10 < 0 && x10 > 1 && x10 > x8 && x7 = 0 && x8 = x11
f_320(x21, x22, x23, x24, x25) -> f_367(x26, x27, x28, x29, 0, x22, 1, x30, x24, x31, x32, x33, x34, 3, 2, 4) :|: x30 > 0 && x24 < 0 && x24 > 1 && x24 > x22 && x21 = 0 && x22 = x25
f_320(x35, x36, x37, x38, x39) -> f_367(x40, x41, x42, x43, 0, x36, 1, x44, x38, x45, x46, x47, x48, 3, 2, 4) :|: x38 > x36 && x44 < 0 && x38 > 1 && x35 = 0 && x36 = x39
f_320(x49, x50, x51, x52, x53) -> f_367(x54, x55, x56, x57, 0, x50, 1, x58, x52, x59, x60, x61, x62, 3, 2, 4) :|: x52 > x50 && x58 > 0 && x52 > 1 && x49 = 0 && x50 = x53
f_320(x63, x64, x65, x66, x67) -> f_375(x68, x69, x70, x71, x63, x64, 1, x65, 0, x66, x72, x73, x74, x75, 3, 2, 4) :|: x66 < x63 && x66 > 2 && x66 > x64 && x65 > 1 && x63 > 0 && x64 > 1 && x64 = x67
f_320(x76, x77, x78, x79, x80) -> f_375(x81, x82, x83, x84, x76, x77, 1, x78, 0, x79, x85, x86, x87, x88, 3, 2, 4) :|: x79 > x76 && x79 > 2 && x79 > x77 && x78 > 1 && x76 > 0 && x77 > 1 && x77 = x80
f_320(x89, x90, x91, x92, x93) -> f_320(x89, x90, x91, 1 + x92, x92) :|: x92 > -1 && x92 <= x90 && x92 < x89
f_320(x94, x95, x96, x97, x98) -> f_320(x94, x95, x96, 1 + x97, x97) :|: x97 > -1 && x97 <= x95 && x97 > x94
f_320(x99, x100, x101, x102, x103) -> f_331(x104, x105, x106, x107, x99, x100, 1, x101, 0, x108, x103, x109, x110, x111, x112, 3, 2, 4) :|: x100 > 1 && x101 > 1 && x99 = x102
f_139 -> f_185(x113, x114, x115, x116, x117, x118, 1, 1 + x117, 0, 3 + x113, 3 + x114, 3 + x115, 3 + x116, 3, 4) :|: x113 > 0 && x114 > 0 && x115 > 0 && x116 > 0 && x117 > -1 && x117 < x118 && x118 > 0
f_139 -> f_165(x119, x120, x121, x122, x123, x124, 1, 0, 3 + x119, 3 + x120, 3 + x121, 3 + x122, 3, 4) :|: x119 > 0 && x120 > 0 && x121 > 0 && x122 > 0 && x123 > -1 && x123 >= x124
f_320(x125, x126, x127, x128, x129) -> f_339(x130, x131, x132, x133, x125, x126, 1, x127, x128, 0, x129, x134, x135, x136, x137, 3, 4) :|: x128 < x125
f_320(x138, x139, x140, x141, x142) -> f_339(x143, x144, x145, x146, x138, x139, 1, x140, x141, 0, x142, x147, x148, x149, x150, 3, 4) :|: x141 > x138
Start term: f_139

----------------------------------------

(7) IRSToKoat (EQUIVALENT)
Convert an IRS to a koat problem
----------------------------------------

(8)
Obligation:
(GOAL COMPLEXITY)
(STARTTERM (FUNCTIONSYMBOLS f_139))
(VAR x290 x160 x281 x280 x162 x283 x161 x282 x164 x285 x163 x284 x166 x287 x165 x286 x168 x289 x167 x288 x169 x270 x151 x272 x150 x271 x153 x274 x152 x273 x155 x276 x154 x275 x157 x278 x156 x277 x159 x158 x279 x140 x261 x260 x142 x263 x141 x262 x144 x265 x143 x264 x146 x267 x145 x266 x148 x269 x147 x268 x149 x250 x131 x252 x130 x251 x133 x254 x132 x253 x135 x256 x134 x255 x137 x258 x136 x257 x139 x138 x259 x193 x192 x195 x194 x197 x196 x199 x198 x'' k14 k15 k16 k17 k10 k11 k12 k13 x191 x190 x182 x181 x184 x183 x186 x185 x188 x187 x189 x180 x171 x292 x170 x291 x173 x294 x172 x293 x175 x296 x174 x295 x177 x298 x176 x297 x179 x178 x299 k36 k37 k38 k39 k32 k33 k34 k35 k30 k31 k29 k25 k26 k27 k28 k21 k22 k23 k24 k20 k18 k19 k58 k59 k54 k55 k56 k57 k50 k51 k52 k53 k47 k48 k49 k43 k44 k45 k46 k40 k41 k42 k76 k77 k78 k79 k72 k73 k74 k75 k70 k71 x k69 k65 k66 k67 k68 k61 k62 k63 k64 k60 k98 k99 k94 k95 k96 k97 k90 k91 k92 k93 x28 x29 x24 x25 x26 x27 x20 x21 x22 x23 k87 k88 k89 k83 k84 k85 k86 k80 k81 k82 x17 x18 x19 x13 x14 x15 x16 x10 x11 x12 x46 x47 x48 x49 x42 x43 x44 x45 x40 x41 x39 x35 x36 x37 x38 x31 x32 x33 x34 x30 x70 x68 x69 x64 x65 x66 x67 x60 x61 x62 x63 k7 k8 k5 k6 k9 k0 k3 k4 k1 k2 x57 x58 x59 x53 x54 x55 x56 x50 x51 x52 x90 x91 x92 k118 k117 k116 k115 k119 x86 k110 x87 x88 x89 x82 k114 x83 k113 x84 k112 k111 x85 x80 x81 k107 k106 k105 k104 x79 k109 k108 x75 x76 x77 x78 k103 x71 k102 x72 x73 k101 k100 x74 x97 x98 x99 x93 x94 x95 x96 x209 x208 k150 k159 x320 k154 x201 x322 k153 x200 x321 k152 x203 x324 k151 x202 x323 k158 x205 x326 k157 x204 x325 x207 k156 k155 x206 x319 x318 k149 k148 x311 k143 x310 k142 x313 k141 k140 x312 k147 x315 k146 x314 k145 x317 k144 x316 x308 x307 x309 k139 k138 k137 x300 k132 k131 k130 x302 x301 x304 k136 k135 x303 x306 k134 k133 x305 k129 k128 k127 k126 k121 k120 k125 k124 k123 k122 x120 x241 x240 x122 x243 x121 x242 x124 x245 x123 x244 x126 x247 x125 x246 x128 x249 x127 x248 x129 x230 x111 x232 x110 x231 x113 x234 x112 x233 x115 x236 x114 x235 x117 x238 x116 x237 x119 x118 x239 x109 x4 x5 x2 x3 x8 x9 x6 x100 x221 x7 x220 x102 x223 x101 x222 x104 x225 x103 x224 x106 x227 x1 x105 x226 x108 x229 x107 x228 x219 k161 k160 x' x210 x212 x211 x214 x213 x216 x215 x218 x217)
(RULES
  f_320(k81, k69, k70, k71, k158, x67, x68, x69, x70, x71, x72, x73, x74, x75, x76, x77, x78, x79) -> f_320(k81, k69, k70, 1 + k71, k71, x80, x81, x82, x83, x84, x85, x86, x87, x88, x89, x90, x91, x92) :|: k71 > -1 && k71 <= k69 && k71 < k81
  f_320(k151, k102, k21, k66, k26, x, x', x'', x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f_320(k151, k102, k21, 1, 0, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23) :|: k66 < k151 && k66 > 2 && k66 > k102 && k21 > 1 && k102 > 1 && k151 > 0 && k102 = k26
  f_139(x279, x280, x281, x282, x283, x284, x285, x286, x287, x288, x289, x290, x291, x292, x293, x294, x295, x296) -> f_185(k97, k104, k101, k108, k106, k112, 1, 1 + k106, 0, 3 + k97, 3 + k104, 3 + k101, 3 + k108, 3, 4, x297, x298, x299) :|: k97 > 0 && k104 > 0 && k101 > 0 && k108 > 0 && k106 > -1 && k106 < k112 && k112 > 0
  f_320(k83, k140, k119, k120, k114, x93, x94, x95, x96, x97, x98, x99, x100, x101, x102, x103, x104, x105) -> f_320(k83, k140, k119, 1, 0, x106, x107, x108, x109, x110, x111, x112, x113, x114, x115, x116, x117, x118) :|: k120 > k83 && k120 > 2 && k120 > k140 && k119 > 1 && k140 > 1 && k83 > 0 && k140 = k114
  f_320(k3, k64, k67, k68, k55, x179, x180, x181, x182, x183, x184, x185, x186, x187, x188, x189, x190, x191) -> f_367(k57, k59, k61, k48, 0, k64, 1, k50, k68, k52, k42, k43, k45, 3, 2, 4, x192, x193) :|: k68 > k64 && k50 > 0 && k68 > 1 && k3 = 0 && k64 = k55
  f_320(k159, k160, k161, k152, k154, x194, x195, x196, x197, x198, x199, x200, x201, x202, x203, x204, x205, x206) -> f_320(k159, k160, k161, 1 + k152, k152, x207, x208, x209, x210, x211, x212, x213, x214, x215, x216, x217, x218, x219) :|: k152 > -1 && k152 <= k160 && k152 > k159
  f_320(k129, k121, k124, k153, k155, x119, x120, x121, x122, x123, x124, x125, x126, x127, x128, x129, x130, x131) -> f_367(k157, k147, k148, k149, 0, k121, 1, k150, k153, k144, k145, k146, k131, 3, 2, 4, x132, x133) :|: k150 < 0 && k153 < 0 && k153 > 1 && k153 > k121 && k129 = 0 && k121 = k155
  f_320(k156, k128, k134, k132, k138, x314, x315, x316, x317, x318, x319, x320, x321, x322, x323, x324, x325, x326) -> f_331(k136, k141, k139, k143, k156, k128, 1, k134, 0, k142, k138, k113, k95, k94, k99, 3, 2, 4) :|: k128 > 1 && k134 > 1 && k156 = k132
  f_320(k46, k34, k36, k38, k40, x53, x54, x55, x56, x57, x58, x59, x60, x61, x62, x63, x64, x65) -> f_375(k27, k29, k23, k105, k46, k34, 1, k36, 0, k38, k107, k109, k111, k96, 3, 2, 4, x66) :|: k38 < k46 && k38 > 2 && k38 > k34 && k36 > 1 && k46 > 0 && k34 > 1 && k34 = k40
  f_320(k65, k63, k24, k30, k28, x134, x135, x136, x137, x138, x139, x140, x141, x142, x143, x144, x145, x146) -> f_339(k33, k31, k37, k35, k65, k63, 1, k24, k30, 0, k28, k41, k39, k44, k12, 3, 4, x147) :|: k30 > k65
  f_139(x148, x149, x150, x151, x152, x153, x154, x155, x156, x157, x158, x159, x160, x161, x162, x163, x164, x165) -> f_320(k117, k126, 1 + k117, 1 + (1 + k117), 1 + k117, x166, x167, x168, x169, x170, x171, x172, x173, x174, x175, x176, x177, x178) :|: k126 > 0 && k117 < k126 && k117 > -1
  f_320(k13, k14, k15, k16, k11, x264, x265, x266, x267, x268, x269, x270, x271, x272, x273, x274, x275, x276) -> f_367(k8, k9, k4, k5, 0, k14, 1, k6, k16, k7, k0, k1, k2, 3, 2, 4, x277, x278) :|: k16 > k14 && k6 < 0 && k16 > 1 && k13 = 0 && k14 = k11
  f_320(k82, k80, k87, k85, k90, x300, x301, x302, x303, x304, x305, x306, x307, x308, x309, x310, x311, x312) -> f_339(k51, k49, k54, k53, k82, k80, 1, k87, k85, 0, k90, k58, k56, k62, k60, 3, 4, x313) :|: k85 < k82
  f_320(k133, k135, k137, k122, k125, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49, x50) -> f_367(k127, k130, k115, k118, 0, k135, 1, k22, k122, k17, k18, k19, k20, 3, 2, 4, x51, x52) :|: k22 > 0 && k122 < 0 && k122 > 1 && k122 > k135 && k133 = 0 && k135 = k125
  f_139(x220, x221, x222, x223, x224, x225, x226, x227, x228, x229, x230, x231, x232, x233, x234, x235, x236, x237) -> f_157(k47, k116, k25, k123, k32, k10, 0, 3 + k47, 3 + k116, 3 + k25, 3 + k123, 3, 1, 4, x238, x239, x240, x241) :|: k47 > 0 && k116 > 0 && k25 > 0 && k32 < 0 && k123 > 0
  f_320(k98, k100, k103, k93, k91, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36) -> f_375(k92, k84, k86, k88, k98, k100, 1, k103, 0, k93, k89, k75, k77, k79, 3, 2, 4, x37) :|: k93 > k98 && k93 > 2 && k93 > k100 && k103 > 1 && k98 > 0 && k100 > 1 && k100 = k91
  f_139(x242, x243, x244, x245, x246, x247, x248, x249, x250, x251, x252, x253, x254, x255, x256, x257, x258, x259) -> f_165(k110, k72, k74, k73, k78, k76, 1, 0, 3 + k110, 3 + k72, 3 + k74, 3 + k73, 3, 4, x260, x261, x262, x263) :|: k110 > 0 && k72 > 0 && k74 > 0 && k73 > 0 && k78 > -1 && k78 >= k76
)

----------------------------------------

(9) KoAT2 (EQUIVALENT)
KoAT2 was called with the following command:

/aprove/bin/koat2 analyse --termination --cfr=pe -d5 --local=mprf,twn -rtermcomp -i /tmp/aprove.InputModules.Programs.koat2_4595781591992969824.koat 

KoAT2's output was:

YES

----------------------------------------

(10)
YES
Graph finished, checking  consistency
Graph finished, checked consistency, took 0.001s
