YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/efhhe.c
# AProVE Commit ID: 48c83ccb80d5f8312cb92f4aa1b51dc35e247e65 nils 20241118 unpublished


Termination of the given C Problem could be proven:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 18 ms]
(2) LLVM problem
(3) LLVMToTerminationGraphProof [EQUIVALENT, 2651 ms]
(4) LLVM Symbolic Execution Graph
(5) SymbolicExecutionGraphToSCCProof [SOUND, 0 ms]
(6) AND
    (7) LLVM Symbolic Execution SCC
        (8) SCC2IRS [SOUND, 65 ms]
        (9) IntTRS
        (10) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (11) IntTRS
        (12) RankingReductionPairProof [EQUIVALENT, 3 ms]
        (13) IntTRS
        (14) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (15) IntTRS
        (16) PolynomialOrderProcessor [EQUIVALENT, 1 ms]
        (17) IntTRS
        (18) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (19) IntTRS
        (20) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
        (21) IntTRS
        (22) RankingReductionPairProof [EQUIVALENT, 9 ms]
        (23) YES
    (24) LLVM Symbolic Execution SCC
        (25) SCC2IRS [SOUND, 81 ms]
        (26) IntTRS
        (27) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (28) IntTRS
        (29) PolynomialOrderProcessor [EQUIVALENT, 2 ms]
        (30) IntTRS
        (31) TerminationGraphProcessor [EQUIVALENT, 1 ms]
        (32) IntTRS
        (33) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (34) IntTRS
        (35) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
        (36) IntTRS
        (37) PolynomialOrderProcessor [EQUIVALENT, 1 ms]
        (38) YES
    (39) LLVM Symbolic Execution SCC
        (40) SCC2IRS [SOUND, 44 ms]
        (41) IntTRS
        (42) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (43) IntTRS
        (44) RankingReductionPairProof [EQUIVALENT, 0 ms]
        (45) YES
    (46) LLVM Symbolic Execution SCC
        (47) SCC2IRS [SOUND, 30 ms]
        (48) IntTRS
        (49) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (50) IntTRS
        (51) RankingReductionPairProof [EQUIVALENT, 0 ms]
        (52) YES
    (53) LLVM Symbolic Execution SCC
        (54) SCC2IRS [SOUND, 28 ms]
        (55) IntTRS
        (56) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (57) IntTRS
        (58) RankingReductionPairProof [EQUIVALENT, 12 ms]
        (59) YES
    (60) LLVM Symbolic Execution SCC
        (61) SCC2IRS [SOUND, 32 ms]
        (62) IntTRS
        (63) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (64) IntTRS
        (65) RankingReductionPairProof [EQUIVALENT, 6 ms]
        (66) YES
    (67) LLVM Symbolic Execution SCC
        (68) SCC2IRS [SOUND, 37 ms]
        (69) IntTRS
        (70) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (71) IntTRS
        (72) PolynomialOrderProcessor [EQUIVALENT, 1 ms]
        (73) YES
    (74) LLVM Symbolic Execution SCC
        (75) SCC2IRS [SOUND, 60 ms]
        (76) IntTRS
        (77) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (78) IntTRS
        (79) PolynomialOrderProcessor [EQUIVALENT, 6 ms]
        (80) IntTRS
        (81) TerminationGraphProcessor [EQUIVALENT, 0 ms]
        (82) IntTRS
        (83) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (84) IntTRS
        (85) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
        (86) IntTRS
        (87) RankingReductionPairProof [EQUIVALENT, 1 ms]
        (88) YES
    (89) LLVM Symbolic Execution SCC
        (90) SCC2IRS [SOUND, 91 ms]
        (91) IntTRS
        (92) TerminationGraphProcessor [EQUIVALENT, 45 ms]
        (93) IntTRS
        (94) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (95) IntTRS
        (96) RankingReductionPairProof [EQUIVALENT, 3 ms]
        (97) IntTRS
        (98) TerminationGraphProcessor [EQUIVALENT, 0 ms]
        (99) AND
            (100) IntTRS
                (101) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                (102) IntTRS
                (103) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
                (104) IntTRS
                (105) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
                (106) YES
            (107) IntTRS
                (108) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                (109) IntTRS
                (110) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
                (111) IntTRS
                (112) PolynomialOrderProcessor [EQUIVALENT, 1 ms]
                (113) YES
    (114) LLVM Symbolic Execution SCC
        (115) SCC2IRS [SOUND, 24 ms]
        (116) IntTRS
        (117) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (118) IntTRS
        (119) PolynomialOrderProcessor [EQUIVALENT, 1 ms]
        (120) YES
    (121) LLVM Symbolic Execution SCC
        (122) SCC2IRS [SOUND, 39 ms]
        (123) IntTRS
        (124) TerminationGraphProcessor [EQUIVALENT, 4 ms]
        (125) IntTRS
        (126) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (127) IntTRS
        (128) RankingReductionPairProof [EQUIVALENT, 2 ms]
        (129) YES
    (130) LLVM Symbolic Execution SCC
        (131) SCC2IRS [SOUND, 32 ms]
        (132) IntTRS
        (133) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (134) IntTRS
        (135) PolynomialOrderProcessor [EQUIVALENT, 1 ms]
        (136) YES
    (137) LLVM Symbolic Execution SCC
        (138) SCC2IRS [SOUND, 44 ms]
        (139) IntTRS
        (140) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (141) IntTRS
        (142) PolynomialOrderProcessor [EQUIVALENT, 1 ms]
        (143) YES
    (144) LLVM Symbolic Execution SCC
        (145) SCC2IRS [SOUND, 24 ms]
        (146) IntTRS
        (147) TerminationGraphProcessor [EQUIVALENT, 7 ms]
        (148) IntTRS
        (149) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (150) IntTRS
        (151) PolynomialOrderProcessor [EQUIVALENT, 0 ms]
        (152) YES


----------------------------------------

(0)
Obligation:
c file /hpcwork/ff862203/termcomp25/benchmarks/efhhe.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /hpcwork/ff862203/termcomp25/benchmarks/efhhe.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-pc-linux-gnu"

Type definitions:

Global variables:

Function declarations and definitions:

*BasicFunctionTypename: "llvm.dbg.declare" returnParam: BasicVoidType parameters: (BasicMetadataType, BasicMetadataType, BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_nondet_int" returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 7
	0:
		%1 = alloca i32, align 4
		%2 = alloca *i32, align 8
		%3 = alloca *i32, align 8
		store 0, %1
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i32 %2)
		%4 = alloca i8, numElementsLit: 4, align 16
		%5 = bitcast *i8 %4 to *i32
		store %5, %2
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i32 %3)
		%6 = alloca i8, numElementsLit: 4, align 16
		%7 = bitcast *i8 %6 to *i32
		store %7, %3
		br %8
	8:
		%9 = load %2
		%10 = load %9
		%11 = icmp ne %10 0
		br %11, %12, %16
	12:
		%13 = load %3
		%14 = load %13
		%15 = icmp sgt %14 0
		br %16
	16:
		%17 = phi [0, %8], [%15, %12]
		br %17, %18, %55
	18:
		%19 = load %2
		%20 = load %19
		%21 = icmp sgt %20 0
		br %21, %22, %38
	22:
		%23 = call i32 @__VERIFIER_nondet_int()
		%24 = icmp ne %23 0
		br %24, %25, %32
	25:
		%26 = load %2
		%27 = load %26
		%28 = sub i32 %27, 1
		%29 = load %2
		store %28, %29
		%30 = call i32 @__VERIFIER_nondet_int()
		%31 = load %3
		store %30, %31
		br %37
	32:
		%33 = load %3
		%34 = load %33
		%35 = sub i32 %34, 1
		%36 = load %3
		store %35, %36
		br %37
	37:
		br %54
	38:
		%39 = call i32 @__VERIFIER_nondet_int()
		%40 = icmp ne %39 0
		br %40, %41, %46
	41:
		%42 = load %2
		%43 = load %42
		%44 = add i32 %43, 1
		%45 = load %2
		store %44, %45
		br %53
	46:
		%47 = load %3
		%48 = load %47
		%49 = sub i32 %48, 1
		%50 = load %3
		store %49, %50
		%51 = call i32 @__VERIFIER_nondet_int()
		%52 = load %2
		store %51, %52
		br %53
	53:
		br %54
	54:
		br %8
	55:
		%56 = load %1
		ret %56


Analyze Termination of all function calls matching the pattern:
main()
----------------------------------------

(3) LLVMToTerminationGraphProof (EQUIVALENT)
Constructed symbolic execution graph for LLVM program.
----------------------------------------

(4)
Obligation:
Symbolic Execution Graph
----------------------------------------

(5) SymbolicExecutionGraphToSCCProof (SOUND)
Splitted symbolic execution graph to 14 SCCs.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
SCC
----------------------------------------

(8) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 67 rulesP rules:
f_1913(v54680, v54681, v54682, v54683, v54684, v54685, 1, v54687, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v54697, v54698, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) -> f_1918(v54680, v54681, v54682, v54683, v54684, v54685, 1, v54687, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v54698, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) :|: 0 = 0
f_1918(v54680, v54681, v54682, v54683, v54684, v54685, 1, v54687, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v54698, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) -> f_1923(v54680, v54681, v54682, v54683, v54684, v54685, 1, v54687, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v55133, v54698, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) :|: 1 + v55133 = v54685 && 0 <= v55133
f_1923(v54680, v54681, v54682, v54683, v54684, v54685, 1, v54687, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v55133, v54698, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) -> f_1928(v54680, v54681, v54682, v54683, v54684, v54685, 1, v54687, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v55133, v54698, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) :|: 0 = 0
f_1928(v54680, v54681, v54682, v54683, v54684, v54685, 1, v54687, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v55133, v54698, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) -> f_1931(v54680, v54681, v54682, v54683, v54684, v54685, 1, v54687, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v55133, v54698, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) :|: TRUE
f_1931(v54680, v54681, v54682, v54683, v54684, v54685, 1, v54687, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v55133, v54698, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) -> f_1934(v54680, v54681, v54682, v54683, v54684, v54685, 1, v54687, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v55133, v56109, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) :|: TRUE
f_1934(v54680, v54681, v54682, v54683, v54684, v54685, 1, v54687, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v55133, v56109, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) -> f_1938(v54680, v54681, v54682, v54683, v54684, v54685, 1, v54687, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v55133, v56109, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) :|: 0 = 0
f_1938(v54680, v54681, v54682, v54683, v54684, v54685, 1, v54687, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v55133, v56109, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) -> f_1940(v54680, v54681, v54682, v54683, v54684, v54685, 1, v54687, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v55133, v56109, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) :|: TRUE
f_1940(v54680, v54681, v54682, v54683, v54684, v54685, 1, v54687, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v55133, v56109, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) -> f_1942(v54680, v54681, v54682, v54683, v54684, v54685, 1, v54687, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v55133, v56109, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) :|: TRUE
f_1942(v54680, v54681, v54682, v54683, v54684, v54685, 1, v54687, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v55133, v56109, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) -> f_1944(v54680, v54681, v54682, v54683, v54684, v54685, 1, v54687, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v55133, v56109, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) :|: TRUE
f_1944(v54680, v54681, v54682, v54683, v54684, v54685, 1, v54687, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v55133, v56109, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) -> f_1946(v54680, v54681, v54682, v54683, v54684, v54685, 1, v54687, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v55133, v56109, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) :|: TRUE
f_1946(v54680, v54681, v54682, v54683, v54684, v54685, 1, v54687, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v55133, v56109, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) -> f_1948(v54680, v54681, v54682, v54683, v54684, v54685, 1, v54687, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v55133, v56109, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) :|: 0 = 0
f_1948(v54680, v54681, v54682, v54683, v54684, v54685, 1, v54687, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v55133, v56109, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) -> f_1950(v54680, v54681, v54682, v54683, v54684, v55133, 1, v54687, v54685, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v56109, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) :|: 0 = 0
f_1950(v54680, v54681, v54682, v54683, v54684, v55133, 1, v54687, v54685, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v56109, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) -> f_1952(v54680, v54681, v54682, v54683, v54684, v55133, 1, v54687, v54685, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v56109, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) :|: 0 < v55133 && 2 <= v54685 && 3 <= v54693
f_1952(v54680, v54681, v54682, v54683, v54684, v55133, 1, v54687, v54685, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v56109, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) -> f_1955(v54680, v54681, v54682, v54683, v54684, v55133, 1, v54687, v54685, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v56109, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) :|: 0 = 0
f_1955(v54680, v54681, v54682, v54683, v54684, v55133, 1, v54687, v54685, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v56109, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) -> f_1959(v54680, v54681, v54682, v54683, v54684, v55133, 1, v54687, v54685, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v56109, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) :|: TRUE
f_1959(v54680, v54681, v54682, v54683, v54684, v55133, 1, v54687, v54685, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v56109, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) -> f_1963(v54680, v54681, v54682, v54683, v54684, v55133, 1, v54687, v54685, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v56109, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) :|: 0 = 0
f_1963(v54680, v54681, v54682, v54683, v54684, v55133, 1, v54687, v54685, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v56109, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) -> f_1967(v54680, v54681, v54682, v54683, v54684, v55133, 1, v56109, v54685, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) :|: 0 = 0
f_1967(v54680, v54681, v54682, v54683, v54684, v55133, 1, v56109, v54685, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) -> f_1971(v54680, v54681, v54682, v54683, v54684, v55133, 1, v56109, v54685, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) :|: 0 < v56109
f_1971(v54680, v54681, v54682, v54683, v54684, v55133, 1, v56109, v54685, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) -> f_1975(v54680, v54681, v54682, v54683, v54684, v55133, 1, v56109, v54685, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) :|: 0 = 0
f_1975(v54680, v54681, v54682, v54683, v54684, v55133, 1, v56109, v54685, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) -> f_1978(v54680, v54681, v54682, v54683, v54684, v55133, 1, v56109, v54685, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) :|: 0 = 0
f_1978(v54680, v54681, v54682, v54683, v54684, v55133, 1, v56109, v54685, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) -> f_1981(v54680, v54681, v54682, v54683, v54684, v55133, 1, v56109, v54685, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) :|: TRUE
f_1981(v54680, v54681, v54682, v54683, v54684, v55133, 1, v56109, v54685, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) -> f_1984(v54680, v54681, v54682, v54683, v54684, v55133, 1, v56109, v54685, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) :|: 0 = 0
f_1984(v54680, v54681, v54682, v54683, v54684, v55133, 1, v56109, v54685, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) -> f_1987(v54680, v54681, v54682, v54683, v54684, v55133, 1, v56109, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v54685, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) :|: 0 = 0
f_1987(v54680, v54681, v54682, v54683, v54684, v55133, 1, v56109, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v54685, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) -> f_1990(v54680, v54681, v54682, v54683, v54684, v55133, 1, v56109, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v54685, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) :|: 0 = 0
f_1990(v54680, v54681, v54682, v54683, v54684, v55133, 1, v56109, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v54685, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) -> f_1993(v54680, v54681, v54682, v54683, v54684, v55133, 1, v56109, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v54685, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) :|: TRUE
f_1993(v54680, v54681, v54682, v54683, v54684, v55133, 1, v56109, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v54685, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) -> f_1996(v54680, v54681, v54682, v54683, v54684, v55133, 1, v56109, 0, v54689, v54690, v54691, v54692, v54693, v61471, v54695, v54696, v54685, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) :|: TRUE
f_1996(v54680, v54681, v54682, v54683, v54684, v55133, 1, v56109, 0, v54689, v54690, v54691, v54692, v54693, v61471, v54695, v54696, v54685, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) -> f_1997(v54680, v54681, v54682, v54683, v54684, v55133, 1, v56109, 0, v54689, v54690, v54691, v54692, v54693, v61471, v54695, v54696, v54685, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) :|: v61471 != 0
f_1996(v54680, v54681, v54682, v54683, v54684, v55133, 1, v56109, 0, v54689, v54690, v54691, v54692, v54693, v61471, v54695, v54696, v54685, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) -> f_1998(v54680, v54681, v54682, v54683, v54684, v55133, 1, v56109, 0, v54689, v54690, v54691, v54692, v54693, v54695, v54696, v54685, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) :|: v61471 = 0
f_1997(v54680, v54681, v54682, v54683, v54684, v55133, 1, v56109, 0, v54689, v54690, v54691, v54692, v54693, v61471, v54695, v54696, v54685, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) -> f_1999(v54680, v54681, v54682, v54683, v54684, v55133, 1, v56109, 0, v54689, v54690, v54691, v54692, v54693, v61471, v54695, v54696, v54685, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) :|: 0 = 0
f_1999(v54680, v54681, v54682, v54683, v54684, v55133, 1, v56109, 0, v54689, v54690, v54691, v54692, v54693, v61471, v54695, v54696, v54685, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) -> f_2001(v54680, v54681, v54682, v54683, v54684, v55133, 1, v56109, 0, v54689, v54690, v54691, v54692, v54693, v61471, v54695, v54696, v54685, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) :|: TRUE
f_2001(v54680, v54681, v54682, v54683, v54684, v55133, 1, v56109, 0, v54689, v54690, v54691, v54692, v54693, v61471, v54695, v54696, v54685, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) -> f_1908(v54680, v54681, v54682, v54683, v54684, v55133, 1, v56109, 0, v54689, v54690, v54691, v54692, v54693, v61471, v54695, v54696, v54685, v56109, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) :|: TRUE
f_1908(v54680, v54681, v54682, v54683, v54684, v54685, 1, v54687, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v54697, v54698, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) -> f_1913(v54680, v54681, v54682, v54683, v54684, v54685, 1, v54687, 0, v54689, v54690, v54691, v54692, v54693, v54694, v54695, v54696, v54697, v54698, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) :|: 0 = 0
f_1998(v54680, v54681, v54682, v54683, v54684, v55133, 1, v56109, 0, v54689, v54690, v54691, v54692, v54693, v54695, v54696, v54685, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) -> f_2000(v54680, v54681, v54682, v54683, v54684, v55133, 1, v56109, 0, v54689, v54690, v54691, v54692, v54693, v54695, v54696, v54685, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) :|: 0 = 0
f_2000(v54680, v54681, v54682, v54683, v54684, v55133, 1, v56109, 0, v54689, v54690, v54691, v54692, v54693, v54695, v54696, v54685, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) -> f_2002(v54680, v54681, v54682, v54683, v54684, v55133, 1, v56109, 0, v54689, v54690, v54691, v54692, v54693, v54695, v54696, v54685, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) :|: TRUE
f_2002(v54680, v54681, v54682, v54683, v54684, v55133, 1, v56109, 0, v54689, v54690, v54691, v54692, v54693, v54695, v54696, v54685, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) -> f_1910(v54680, v54681, v54682, v54683, v54684, v55133, 1, v56109, 0, v54689, v54690, v54691, v54692, v54693, v54695, v54696, v54685, v56109, v54699, v54700, v54701, v54702, v54703, 3, 7, 2, 4, 8) :|: TRUE
f_1910(v54886, v54887, v54888, v54889, v54890, v54891, 1, v54893, 0, v54895, v54896, v54897, v54898, v54899, v54900, v54901, v54902, v54903, v54904, v54905, v54906, v54907, v54908, 3, 7, 2, 4, 8) -> f_1914(v54886, v54887, v54888, v54889, v54890, v54891, 1, v54893, 0, v54895, v54896, v54897, v54898, v54899, v54900, v54901, v54902, v54903, v54904, v54905, v54906, v54907, v54908, 3, 7, 2, 4, 8) :|: 0 = 0
f_1914(v54886, v54887, v54888, v54889, v54890, v54891, 1, v54893, 0, v54895, v54896, v54897, v54898, v54899, v54900, v54901, v54902, v54903, v54904, v54905, v54906, v54907, v54908, 3, 7, 2, 4, 8) -> f_1919(v54886, v54887, v54888, v54889, v54890, v54891, 1, v54893, 0, v54895, v54896, v54897, v54898, v54899, v54901, v54902, v54903, v54904, v54905, v54906, v54907, v54908, 3, 7, 2, 4, 8) :|: 0 = 0
f_1919(v54886, v54887, v54888, v54889, v54890, v54891, 1, v54893, 0, v54895, v54896, v54897, v54898, v54899, v54901, v54902, v54903, v54904, v54905, v54906, v54907, v54908, 3, 7, 2, 4, 8) -> f_1924(v54886, v54887, v54888, v54889, v54890, v54891, 1, v54893, 0, v54895, v54896, v54897, v54898, v54899, v55134, v54902, v54903, v54904, v54905, v54906, v54907, v54908, 3, 7, 2, 4, 8) :|: 1 + v55134 = v54893 && 0 <= v55134
f_1924(v54886, v54887, v54888, v54889, v54890, v54891, 1, v54893, 0, v54895, v54896, v54897, v54898, v54899, v55134, v54902, v54903, v54904, v54905, v54906, v54907, v54908, 3, 7, 2, 4, 8) -> f_1929(v54886, v54887, v54888, v54889, v54890, v54891, 1, v54893, 0, v54895, v54896, v54897, v54898, v54899, v55134, v54902, v54903, v54904, v54905, v54906, v54907, v54908, 3, 7, 2, 4, 8) :|: 0 = 0
f_1929(v54886, v54887, v54888, v54889, v54890, v54891, 1, v54893, 0, v54895, v54896, v54897, v54898, v54899, v55134, v54902, v54903, v54904, v54905, v54906, v54907, v54908, 3, 7, 2, 4, 8) -> f_1932(v54886, v54887, v54888, v54889, v54890, v54891, 1, v54893, 0, v54895, v54896, v54897, v54898, v54899, v55134, v54902, v54903, v54904, v54905, v54906, v54907, v54908, 3, 7, 2, 4, 8) :|: TRUE
f_1932(v54886, v54887, v54888, v54889, v54890, v54891, 1, v54893, 0, v54895, v54896, v54897, v54898, v54899, v55134, v54902, v54903, v54904, v54905, v54906, v54907, v54908, 3, 7, 2, 4, 8) -> f_1935(v54886, v54887, v54888, v54889, v54890, v54891, 1, v54893, 0, v54895, v54896, v54897, v54898, v54899, v55134, v54902, v54903, v54904, v54905, v54906, v54907, v54908, 3, 7, 2, 4, 8) :|: TRUE
f_1935(v54886, v54887, v54888, v54889, v54890, v54891, 1, v54893, 0, v54895, v54896, v54897, v54898, v54899, v55134, v54902, v54903, v54904, v54905, v54906, v54907, v54908, 3, 7, 2, 4, 8) -> f_1936(v54886, v54887, v54888, v54889, v54890, v54891, 1, v54893, 0, v54895, v54896, v54897, v54898, v54899, v54902, v54903, v55134, v54904, v54905, v54906, v54907, v54908, 3, 7, 2, 4, 8) :|: TRUE
f_1936(v56294, v56295, v56296, v56297, v56298, v56299, 1, v56301, 0, v56303, v56304, v56305, v56306, v56307, v56308, v56309, v56310, v56311, v56312, v56313, v56314, v56315, 3, 7, 2, 4, 8) -> f_1939(v56294, v56295, v56296, v56297, v56298, v56299, 1, v56301, 0, v56303, v56304, v56305, v56306, v56307, v56308, v56309, v56310, v56311, v56312, v56313, v56314, v56315, 3, 7, 2, 4, 8) :|: TRUE
f_1939(v56294, v56295, v56296, v56297, v56298, v56299, 1, v56301, 0, v56303, v56304, v56305, v56306, v56307, v56308, v56309, v56310, v56311, v56312, v56313, v56314, v56315, 3, 7, 2, 4, 8) -> f_1941(v56294, v56295, v56296, v56297, v56298, v56299, 1, v56301, 0, v56303, v56304, v56305, v56306, v56307, v56308, v56309, v56310, v56311, v56312, v56313, v56314, v56315, 3, 7, 2, 4, 8) :|: TRUE
f_1941(v56294, v56295, v56296, v56297, v56298, v56299, 1, v56301, 0, v56303, v56304, v56305, v56306, v56307, v56308, v56309, v56310, v56311, v56312, v56313, v56314, v56315, 3, 7, 2, 4, 8) -> f_1943(v56294, v56295, v56296, v56297, v56298, v56299, 1, v56301, 0, v56303, v56304, v56305, v56306, v56307, v56308, v56309, v56310, v56311, v56312, v56313, v56314, v56315, 3, 7, 2, 4, 8) :|: 0 = 0
f_1943(v56294, v56295, v56296, v56297, v56298, v56299, 1, v56301, 0, v56303, v56304, v56305, v56306, v56307, v56308, v56309, v56310, v56311, v56312, v56313, v56314, v56315, 3, 7, 2, 4, 8) -> f_1945(v56294, v56295, v56296, v56297, v56298, v56299, 1, v56301, 0, v56303, v56304, v56305, v56306, v56307, v56308, v56309, v56310, v56311, v56312, v56313, v56314, v56315, 3, 7, 2, 4, 8) :|: 0 = 0
f_1945(v56294, v56295, v56296, v56297, v56298, v56299, 1, v56301, 0, v56303, v56304, v56305, v56306, v56307, v56308, v56309, v56310, v56311, v56312, v56313, v56314, v56315, 3, 7, 2, 4, 8) -> f_1947(v56294, v56295, v56296, v56297, v56298, v56299, 1, v56301, 0, v56303, v56304, v56305, v56306, v56307, v56308, v56309, v56310, v56311, v56312, v56313, v56314, v56315, 3, 7, 2, 4, 8) :|: 0 = 0
f_1947(v56294, v56295, v56296, v56297, v56298, v56299, 1, v56301, 0, v56303, v56304, v56305, v56306, v56307, v56308, v56309, v56310, v56311, v56312, v56313, v56314, v56315, 3, 7, 2, 4, 8) -> f_1949(v56294, v56295, v56296, v56297, v56298, v56299, 1, v56301, 0, v56303, v56304, v56305, v56306, v56307, v56308, v56309, v56310, v56311, v56312, v56313, v56314, v56315, 3, 7, 2, 4, 8) :|: TRUE
f_1949(v56294, v56295, v56296, v56297, v56298, v56299, 1, v56301, 0, v56303, v56304, v56305, v56306, v56307, v56308, v56309, v56310, v56311, v56312, v56313, v56314, v56315, 3, 7, 2, 4, 8) -> f_1951(v56294, v56295, v56296, v56297, v56298, v56299, 1, v56301, 0, v56303, v56304, v56305, v56306, v56307, v56308, v56309, v56310, v56311, v56312, v56313, v56314, v56315, 3, 7, 2, 4, 8) :|: 0 = 0
f_1951(v56294, v56295, v56296, v56297, v56298, v56299, 1, v56301, 0, v56303, v56304, v56305, v56306, v56307, v56308, v56309, v56310, v56311, v56312, v56313, v56314, v56315, 3, 7, 2, 4, 8) -> f_1954(v56294, v56295, v56296, v56297, v56298, v56299, 1, v56310, 0, v56303, v56304, v56305, v56306, v56307, v56308, v56309, v56301, v56311, v56312, v56313, v56314, v56315, 3, 7, 2, 4, 8) :|: 0 = 0
f_1954(v56294, v56295, v56296, v56297, v56298, v56299, 1, v56310, 0, v56303, v56304, v56305, v56306, v56307, v56308, v56309, v56301, v56311, v56312, v56313, v56314, v56315, 3, 7, 2, 4, 8) -> f_1957(v56294, v56295, v56296, v56297, v56298, v56299, 1, v56310, 0, v56303, v56304, v56305, v56306, v56307, v56308, v56309, v56301, v56311, v56312, v56313, v56314, v56315, 3, 7, 2, 4, 8) :|: 0 < v56310 && 2 <= v56301 && 2 <= v56309
f_1957(v56294, v56295, v56296, v56297, v56298, v56299, 1, v56310, 0, v56303, v56304, v56305, v56306, v56307, v56308, v56309, v56301, v56311, v56312, v56313, v56314, v56315, 3, 7, 2, 4, 8) -> f_1961(v56294, v56295, v56296, v56297, v56298, v56299, 1, v56310, 0, v56303, v56304, v56305, v56306, v56307, v56308, v56309, v56301, v56311, v56312, v56313, v56314, v56315, 3, 7, 2, 4, 8) :|: 0 = 0
f_1961(v56294, v56295, v56296, v56297, v56298, v56299, 1, v56310, 0, v56303, v56304, v56305, v56306, v56307, v56308, v56309, v56301, v56311, v56312, v56313, v56314, v56315, 3, 7, 2, 4, 8) -> f_1965(v56294, v56295, v56296, v56297, v56298, v56299, 1, v56310, 0, v56303, v56304, v56305, v56306, v56307, v56308, v56309, v56301, v56311, v56312, v56313, v56314, v56315, 3, 7, 2, 4, 8) :|: 0 = 0
f_1965(v56294, v56295, v56296, v56297, v56298, v56299, 1, v56310, 0, v56303, v56304, v56305, v56306, v56307, v56308, v56309, v56301, v56311, v56312, v56313, v56314, v56315, 3, 7, 2, 4, 8) -> f_1969(v56294, v56295, v56296, v56297, v56298, v56299, 1, v56310, 0, v56303, v56304, v56305, v56306, v56307, v56308, v56309, v56301, v56311, v56312, v56313, v56314, v56315, 3, 7, 2, 4, 8) :|: TRUE
f_1969(v56294, v56295, v56296, v56297, v56298, v56299, 1, v56310, 0, v56303, v56304, v56305, v56306, v56307, v56308, v56309, v56301, v56311, v56312, v56313, v56314, v56315, 3, 7, 2, 4, 8) -> f_1973(v56294, v56295, v56296, v56297, v56298, v56299, 1, v56310, 0, v56303, v56304, v56305, v56306, v56307, v56308, v56309, v56301, v56311, v56312, v56313, v56314, v56315, 3, 7, 2, 4, 8) :|: 0 = 0
f_1973(v56294, v56295, v56296, v56297, v56298, v56299, 1, v56310, 0, v56303, v56304, v56305, v56306, v56307, v56308, v56309, v56301, v56311, v56312, v56313, v56314, v56315, 3, 7, 2, 4, 8) -> f_1977(v56294, v56295, v56296, v56297, v56298, v56299, 1, v56310, 0, v56303, v56304, v56305, v56306, v56307, v56308, v56309, v56301, v56311, v56312, v56313, v56314, v56315, 3, 7, 2, 4, 8) :|: 0 = 0
f_1977(v56294, v56295, v56296, v56297, v56298, v56299, 1, v56310, 0, v56303, v56304, v56305, v56306, v56307, v56308, v56309, v56301, v56311, v56312, v56313, v56314, v56315, 3, 7, 2, 4, 8) -> f_1980(v56294, v56295, v56296, v56297, v56298, v56299, 1, v56310, 0, v56303, v56304, v56305, v56306, v56307, v56308, v56309, v56301, v56311, v56312, v56313, v56314, v56315, 3, 7, 2, 4, 8) :|: 0 = 0
f_1980(v56294, v56295, v56296, v56297, v56298, v56299, 1, v56310, 0, v56303, v56304, v56305, v56306, v56307, v56308, v56309, v56301, v56311, v56312, v56313, v56314, v56315, 3, 7, 2, 4, 8) -> f_1983(v56294, v56295, v56296, v56297, v56298, v56299, 1, v56310, 0, v56303, v56304, v56305, v56306, v56307, v56308, v56309, v56301, v56311, v56312, v56313, v56314, v56315, 3, 7, 2, 4, 8) :|: TRUE
f_1983(v56294, v56295, v56296, v56297, v56298, v56299, 1, v56310, 0, v56303, v56304, v56305, v56306, v56307, v56308, v56309, v56301, v56311, v56312, v56313, v56314, v56315, 3, 7, 2, 4, 8) -> f_1986(v56294, v56295, v56296, v56297, v56298, v56299, 1, v56310, 0, v56303, v56304, v56305, v56306, v56307, v60888, v56308, v56309, v56301, v56311, v56312, v56313, v56314, v56315, 3, 7, 2, 4, 8) :|: TRUE
f_1986(v56294, v56295, v56296, v56297, v56298, v56299, 1, v56310, 0, v56303, v56304, v56305, v56306, v56307, v60888, v56308, v56309, v56301, v56311, v56312, v56313, v56314, v56315, 3, 7, 2, 4, 8) -> f_1988(v56294, v56295, v56296, v56297, v56298, v56299, 1, v56310, 0, v56303, v56304, v56305, v56306, v56307, v60888, v56308, v56309, v56301, v56311, v56312, v56313, v56314, v56315, 3, 7, 2, 4, 8) :|: v60888 != 0
f_1986(v56294, v56295, v56296, v56297, v56298, v56299, 1, v56310, 0, v56303, v56304, v56305, v56306, v56307, v60888, v56308, v56309, v56301, v56311, v56312, v56313, v56314, v56315, 3, 7, 2, 4, 8) -> f_1989(v56294, v56295, v56296, v56297, v56298, v56299, 1, v56310, 0, v56303, v56304, v56305, v56306, v56307, v56308, v56309, v56301, v56311, v56312, v56313, v56314, v56315, 3, 7, 2, 4, 8) :|: v60888 = 0
f_1988(v56294, v56295, v56296, v56297, v56298, v56299, 1, v56310, 0, v56303, v56304, v56305, v56306, v56307, v60888, v56308, v56309, v56301, v56311, v56312, v56313, v56314, v56315, 3, 7, 2, 4, 8) -> f_1991(v56294, v56295, v56296, v56297, v56298, v56299, 1, v56310, 0, v56303, v56304, v56305, v56306, v56307, v60888, v56308, v56309, v56301, v56311, v56312, v56313, v56314, v56315, 3, 7, 2, 4, 8) :|: 0 = 0
f_1991(v56294, v56295, v56296, v56297, v56298, v56299, 1, v56310, 0, v56303, v56304, v56305, v56306, v56307, v60888, v56308, v56309, v56301, v56311, v56312, v56313, v56314, v56315, 3, 7, 2, 4, 8) -> f_1994(v56294, v56295, v56296, v56297, v56298, v56299, 1, v56310, 0, v56303, v56304, v56305, v56306, v56307, v60888, v56308, v56309, v56301, v56311, v56312, v56313, v56314, v56315, 3, 7, 2, 4, 8) :|: TRUE
f_1994(v56294, v56295, v56296, v56297, v56298, v56299, 1, v56310, 0, v56303, v56304, v56305, v56306, v56307, v60888, v56308, v56309, v56301, v56311, v56312, v56313, v56314, v56315, 3, 7, 2, 4, 8) -> f_1908(v56294, v56295, v56296, v56297, v56298, v56299, 1, v56310, 0, v56303, v56304, v56305, v56306, v56307, v60888, v56301, v56310, v56308, v56309, v56311, v56312, v56313, v56314, v56315, 3, 7, 2, 4, 8) :|: TRUE
f_1989(v56294, v56295, v56296, v56297, v56298, v56299, 1, v56310, 0, v56303, v56304, v56305, v56306, v56307, v56308, v56309, v56301, v56311, v56312, v56313, v56314, v56315, 3, 7, 2, 4, 8) -> f_1992(v56294, v56295, v56296, v56297, v56298, v56299, 1, v56310, 0, v56303, v56304, v56305, v56306, v56307, v56308, v56309, v56301, v56311, v56312, v56313, v56314, v56315, 3, 7, 2, 4, 8) :|: 0 = 0
f_1992(v56294, v56295, v56296, v56297, v56298, v56299, 1, v56310, 0, v56303, v56304, v56305, v56306, v56307, v56308, v56309, v56301, v56311, v56312, v56313, v56314, v56315, 3, 7, 2, 4, 8) -> f_1995(v56294, v56295, v56296, v56297, v56298, v56299, 1, v56310, 0, v56303, v56304, v56305, v56306, v56307, v56308, v56309, v56301, v56311, v56312, v56313, v56314, v56315, 3, 7, 2, 4, 8) :|: TRUE
f_1995(v56294, v56295, v56296, v56297, v56298, v56299, 1, v56310, 0, v56303, v56304, v56305, v56306, v56307, v56308, v56309, v56301, v56311, v56312, v56313, v56314, v56315, 3, 7, 2, 4, 8) -> f_1910(v56294, v56295, v56296, v56297, v56298, v56299, 1, v56310, 0, v56303, v56304, v56305, v56306, v56307, v56301, v56310, v56308, v56309, v56311, v56312, v56313, v56314, v56315, 3, 7, 2, 4, 8) :|: TRUE
Combined rules. Obtained 6 rulesP rules:
f_1913(v54680:0, v54681:0, v54682:0, v54683:0, v54684:0, 1 + v55133:0, 1, v54687:0, 0, v54689:0, v54690:0, v54691:0, v54692:0, v54693:0, v54694:0, v54695:0, v54696:0, v54697:0, v54698:0, v54699:0, v54700:0, v54701:0, v54702:0, v54703:0, 3, 7, 2, 4, 8) -> f_1913(v54680:0, v54681:0, v54682:0, v54683:0, v54684:0, v55133:0, 1, v56109:0, 0, v54689:0, v54690:0, v54691:0, v54692:0, v54693:0, v61471:0, v54695:0, v54696:0, 1 + v55133:0, v56109:0, v54699:0, v54700:0, v54701:0, v54702:0, v54703:0, 3, 7, 2, 4, 8) :|: v55133:0 > 0 && v54693:0 > 2 && v61471:0 < 0 && v56109:0 > 0
f_1913(v54680:0, v54681:0, v54682:0, v54683:0, v54684:0, 1 + v55133:0, 1, v54687:0, 0, v54689:0, v54690:0, v54691:0, v54692:0, v54693:0, v54694:0, v54695:0, v54696:0, v54697:0, v54698:0, v54699:0, v54700:0, v54701:0, v54702:0, v54703:0, 3, 7, 2, 4, 8) -> f_1913(v54680:0, v54681:0, v54682:0, v54683:0, v54684:0, v55133:0, 1, v56109:0, 0, v54689:0, v54690:0, v54691:0, v54692:0, v54693:0, v61471:0, v54695:0, v54696:0, 1 + v55133:0, v56109:0, v54699:0, v54700:0, v54701:0, v54702:0, v54703:0, 3, 7, 2, 4, 8) :|: v55133:0 > 0 && v54693:0 > 2 && v61471:0 > 0 && v56109:0 > 0
f_1986(v56294:0, v56295:0, v56296:0, v56297:0, v56298:0, v56299:0, 1, v56310:0, 0, v56303:0, v56304:0, v56305:0, v56306:0, v56307:0, v60888:0, v56308:0, v56309:0, v56301:0, v56311:0, v56312:0, v56313:0, v56314:0, v56315:0, 3, 7, 2, 4, 8) -> f_1913(v56294:0, v56295:0, v56296:0, v56297:0, v56298:0, v56299:0, 1, v56310:0, 0, v56303:0, v56304:0, v56305:0, v56306:0, v56307:0, v60888:0, v56301:0, v56310:0, v56308:0, v56309:0, v56311:0, v56312:0, v56313:0, v56314:0, v56315:0, 3, 7, 2, 4, 8) :|: v60888:0 < 0
f_1986(v56294:0, v56295:0, v56296:0, v56297:0, v56298:0, v56299:0, 1, v56310:0, 0, v56303:0, v56304:0, v56305:0, v56306:0, v56307:0, v60888:0, v56308:0, v56309:0, v56301:0, v56311:0, v56312:0, v56313:0, v56314:0, v56315:0, 3, 7, 2, 4, 8) -> f_1913(v56294:0, v56295:0, v56296:0, v56297:0, v56298:0, v56299:0, 1, v56310:0, 0, v56303:0, v56304:0, v56305:0, v56306:0, v56307:0, v60888:0, v56301:0, v56310:0, v56308:0, v56309:0, v56311:0, v56312:0, v56313:0, v56314:0, v56315:0, 3, 7, 2, 4, 8) :|: v60888:0 > 0
f_1913(v54680:0, v54681:0, v54682:0, v54683:0, v54684:0, 1 + v55133:0, 1, v54687:0, 0, v54689:0, v54690:0, v54691:0, v54692:0, v54693:0, v54694:0, v54695:0, v54696:0, v54697:0, v54698:0, v54699:0, v54700:0, v54701:0, v54702:0, v54703:0, 3, 7, 2, 4, 8) -> f_1986(v54680:0, v54681:0, v54682:0, v54683:0, v54684:0, v55133:0, 1, v55134:0, 0, v54689:0, v54690:0, v54691:0, v54692:0, v54693:0, v60888:0, 1 + v55133:0, 1 + v55134:0, 1 + v55134:0, v54699:0, v54700:0, v54701:0, v54702:0, v54703:0, 3, 7, 2, 4, 8) :|: v55133:0 > 0 && v55134:0 > 0 && v54693:0 > 2
f_1986(v56294:0, v56295:0, v56296:0, v56297:0, v56298:0, v56299:0, 1, 1 + v55134:0, 0, v56303:0, v56304:0, v56305:0, v56306:0, v56307:0, 0, v56308:0, v56309:0, v56301:0, v56311:0, v56312:0, v56313:0, v56314:0, v56315:0, 3, 7, 2, 4, 8) -> f_1986(v56294:0, v56295:0, v56296:0, v56297:0, v56298:0, v56299:0, 1, v55134:0, 0, v56303:0, v56304:0, v56305:0, v56306:0, v56307:0, v60888:1, v56308:0, v56309:0, 1 + v55134:0, v56311:0, v56312:0, v56313:0, v56314:0, v56315:0, 3, 7, 2, 4, 8) :|: v55134:0 > 0 && v56309:0 > 1
Filtered unneeded arguments:
   f_1913(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29) -> f_1913(x6, x14)
   f_1986(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28) -> f_1986(x6, x8, x14, x15, x17)
Removed division, modulo operations, cleaned up constraints. Obtained 5 rules.P rules:
f_1913(sum~cons_1~v55133:0, v54693:0) -> f_1913(v55133:0, v54693:0) :|: v55133:0 > 0 && v54693:0 > 2 && sum~cons_1~v55133:0 = 1 + v55133:0
f_1986(v56299:0, v56310:0, v56307:0, v60888:0, v56309:0) -> f_1913(v56299:0, v56307:0) :|: v60888:0 < 0
f_1986(v56299:0, v56310:0, v56307:0, v60888:0, v56309:0) -> f_1913(v56299:0, v56307:0) :|: v60888:0 > 0
f_1913(sum~cons_1~v55133:0, v54693:0) -> f_1986(v55133:0, v55134:0, v54693:0, v60888:0, 1 + v55134:0) :|: v55134:0 > 0 && v54693:0 > 2 && v55133:0 > 0 && sum~cons_1~v55133:0 = 1 + v55133:0
f_1986(v56299:0, sum~cons_1~v55134:0, v56307:0, cons_0, v56309:0) -> f_1986(v56299:0, v55134:0, v56307:0, v60888:1, v56309:0) :|: v55134:0 > 0 && v56309:0 > 1 && sum~cons_1~v55134:0 = 1 + v55134:0 && cons_0 = 0

----------------------------------------

(9)
Obligation:
Rules:
f_1913(sum~cons_1~v55133:0, v54693:0) -> f_1913(v55133:0, v54693:0) :|: v55133:0 > 0 && v54693:0 > 2 && sum~cons_1~v55133:0 = 1 + v55133:0
f_1986(v56299:0, v56310:0, v56307:0, v60888:0, v56309:0) -> f_1913(v56299:0, v56307:0) :|: v60888:0 < 0
f_1986(x, x1, x2, x3, x4) -> f_1913(x, x2) :|: x3 > 0
f_1913(x5, x6) -> f_1986(x7, x8, x6, x9, 1 + x8) :|: x8 > 0 && x6 > 2 && x7 > 0 && x5 = 1 + x7
f_1986(x10, x11, x12, x13, x14) -> f_1986(x10, x15, x12, x16, x14) :|: x15 > 0 && x14 > 1 && x11 = 1 + x15 && x13 = 0

----------------------------------------

(10) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(11)
Obligation:
Rules:
f_1913(sum~cons_1~x7:0, x6:0) -> f_1986(x7:0, x8:0, x6:0, x9:0, 1 + x8:0) :|: x8:0 > 0 && x6:0 > 2 && x7:0 > 0 && sum~cons_1~x7:0 = 1 + x7:0
f_1986(v56299:0:0, v56310:0:0, v56307:0:0, v60888:0:0, v56309:0:0) -> f_1913(v56299:0:0, v56307:0:0) :|: v60888:0:0 < 0
f_1986(x10:0, sum~cons_1~x15:0, x12:0, cons_0, x14:0) -> f_1986(x10:0, x15:0, x12:0, x16:0, x14:0) :|: x15:0 > 0 && x14:0 > 1 && sum~cons_1~x15:0 = 1 + x15:0 && cons_0 = 0
f_1913(sum~cons_1~v55133:0:0, v54693:0:0) -> f_1913(v55133:0:0, v54693:0:0) :|: v55133:0:0 > 0 && v54693:0:0 > 2 && sum~cons_1~v55133:0:0 = 1 + v55133:0:0
f_1986(x:0, x1:0, x2:0, x3:0, x4:0) -> f_1913(x:0, x2:0) :|: x3:0 > 0

----------------------------------------

(12) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_1913 ] = 2*f_1913_2 + 2*f_1913_1
[ f_1986 ] = 2*f_1986_3 + 2*f_1986_1 + 1

The following rules are decreasing:
f_1913(sum~cons_1~x7:0, x6:0) -> f_1986(x7:0, x8:0, x6:0, x9:0, 1 + x8:0) :|: x8:0 > 0 && x6:0 > 2 && x7:0 > 0 && sum~cons_1~x7:0 = 1 + x7:0
f_1986(v56299:0:0, v56310:0:0, v56307:0:0, v60888:0:0, v56309:0:0) -> f_1913(v56299:0:0, v56307:0:0) :|: v60888:0:0 < 0
f_1913(sum~cons_1~v55133:0:0, v54693:0:0) -> f_1913(v55133:0:0, v54693:0:0) :|: v55133:0:0 > 0 && v54693:0:0 > 2 && sum~cons_1~v55133:0:0 = 1 + v55133:0:0
f_1986(x:0, x1:0, x2:0, x3:0, x4:0) -> f_1913(x:0, x2:0) :|: x3:0 > 0

The following rules are bounded:
f_1913(sum~cons_1~v55133:0:0, v54693:0:0) -> f_1913(v55133:0:0, v54693:0:0) :|: v55133:0:0 > 0 && v54693:0:0 > 2 && sum~cons_1~v55133:0:0 = 1 + v55133:0:0


----------------------------------------

(13)
Obligation:
Rules:
f_1913(sum~cons_1~x7:0, x6:0) -> f_1986(x7:0, x8:0, x6:0, x9:0, 1 + x8:0) :|: x8:0 > 0 && x6:0 > 2 && x7:0 > 0 && sum~cons_1~x7:0 = 1 + x7:0
f_1986(v56299:0:0, v56310:0:0, v56307:0:0, v60888:0:0, v56309:0:0) -> f_1913(v56299:0:0, v56307:0:0) :|: v60888:0:0 < 0
f_1986(x10:0, sum~cons_1~x15:0, x12:0, cons_0, x14:0) -> f_1986(x10:0, x15:0, x12:0, x16:0, x14:0) :|: x15:0 > 0 && x14:0 > 1 && sum~cons_1~x15:0 = 1 + x15:0 && cons_0 = 0
f_1986(x:0, x1:0, x2:0, x3:0, x4:0) -> f_1913(x:0, x2:0) :|: x3:0 > 0

----------------------------------------

(14) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(15)
Obligation:
Rules:
f_1986(sum~cons_1~x7:0:0, v56310:0:0:0, v56307:0:0:0, v60888:0:0:0, v56309:0:0:0) -> f_1986(x7:0:0, x8:0:0, v56307:0:0:0, x9:0:0, 1 + x8:0:0) :|: x7:0:0 > 0 && v60888:0:0:0 < 0 && v56307:0:0:0 > 2 && x8:0:0 > 0 && sum~cons_1~x7:0:0 = 1 + x7:0:0
f_1986(x10:0:0, sum~cons_1~x15:0:0, x12:0:0, cons_0, x14:0:0) -> f_1986(x10:0:0, x15:0:0, x12:0:0, x16:0:0, x14:0:0) :|: x15:0:0 > 0 && x14:0:0 > 1 && sum~cons_1~x15:0:0 = 1 + x15:0:0 && cons_0 = 0
f_1986(x, x1, x2, x3, x4) -> f_1986(x5, x6, x2, x7, 1 + x6) :|: x5 > 0 && x3 > 0 && x2 > 2 && x6 > 0 && x = 1 + x5

----------------------------------------

(16) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_1986(x, x1, x2, x3, x4)] = -1 + x + x2

The following rules are decreasing:
f_1986(sum~cons_1~x7:0:0, v56310:0:0:0, v56307:0:0:0, v60888:0:0:0, v56309:0:0:0) -> f_1986(x7:0:0, x8:0:0, v56307:0:0:0, x9:0:0, 1 + x8:0:0) :|: x7:0:0 > 0 && v60888:0:0:0 < 0 && v56307:0:0:0 > 2 && x8:0:0 > 0 && sum~cons_1~x7:0:0 = 1 + x7:0:0
f_1986(x, x1, x2, x3, x4) -> f_1986(x5, x6, x2, x7, 1 + x6) :|: x5 > 0 && x3 > 0 && x2 > 2 && x6 > 0 && x = 1 + x5
The following rules are bounded:
f_1986(sum~cons_1~x7:0:0, v56310:0:0:0, v56307:0:0:0, v60888:0:0:0, v56309:0:0:0) -> f_1986(x7:0:0, x8:0:0, v56307:0:0:0, x9:0:0, 1 + x8:0:0) :|: x7:0:0 > 0 && v60888:0:0:0 < 0 && v56307:0:0:0 > 2 && x8:0:0 > 0 && sum~cons_1~x7:0:0 = 1 + x7:0:0
f_1986(x, x1, x2, x3, x4) -> f_1986(x5, x6, x2, x7, 1 + x6) :|: x5 > 0 && x3 > 0 && x2 > 2 && x6 > 0 && x = 1 + x5

----------------------------------------

(17)
Obligation:
Rules:
f_1986(x10:0:0, sum~cons_1~x15:0:0, x12:0:0, cons_0, x14:0:0) -> f_1986(x10:0:0, x15:0:0, x12:0:0, x16:0:0, x14:0:0) :|: x15:0:0 > 0 && x14:0:0 > 1 && sum~cons_1~x15:0:0 = 1 + x15:0:0 && cons_0 = 0

----------------------------------------

(18) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(19)
Obligation:
Rules:
f_1986(x10:0:0:0, sum~cons_1~x15:0:0:0, x12:0:0:0, cons_0, x14:0:0:0) -> f_1986(x10:0:0:0, x15:0:0:0, x12:0:0:0, x16:0:0:0, x14:0:0:0) :|: x15:0:0:0 > 0 && x14:0:0:0 > 1 && sum~cons_1~x15:0:0:0 = 1 + x15:0:0:0 && cons_0 = 0

----------------------------------------

(20) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_1986(x1, x2, x3, x4, x5) -> f_1986(x2, x4, x5)

----------------------------------------

(21)
Obligation:
Rules:
f_1986(sum~cons_1~x15:0:0:0, cons_0, x14:0:0:0) -> f_1986(x15:0:0:0, x16:0:0:0, x14:0:0:0) :|: x15:0:0:0 > 0 && x14:0:0:0 > 1 && sum~cons_1~x15:0:0:0 = 1 + x15:0:0:0 && cons_0 = 0

----------------------------------------

(22) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_1986 ] = f_1986_1

The following rules are decreasing:
f_1986(sum~cons_1~x15:0:0:0, cons_0, x14:0:0:0) -> f_1986(x15:0:0:0, x16:0:0:0, x14:0:0:0) :|: x15:0:0:0 > 0 && x14:0:0:0 > 1 && sum~cons_1~x15:0:0:0 = 1 + x15:0:0:0 && cons_0 = 0

The following rules are bounded:
f_1986(sum~cons_1~x15:0:0:0, cons_0, x14:0:0:0) -> f_1986(x15:0:0:0, x16:0:0:0, x14:0:0:0) :|: x15:0:0:0 > 0 && x14:0:0:0 > 1 && sum~cons_1~x15:0:0:0 = 1 + x15:0:0:0 && cons_0 = 0


----------------------------------------

(23)
YES

----------------------------------------

(24)
Obligation:
SCC
----------------------------------------

(25) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 67 rulesP rules:
f_1711(v42292, v42293, v42294, v42295, v42296, v42297, 1, v42299, 0, v42301, v42302, v42303, v42304, v42305, v42306, v42307, v42308, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) -> f_1717(v42292, v42293, v42294, v42295, v42296, v42297, 1, v42299, 0, v42301, v42302, v42303, v42304, v42305, v42306, v42308, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) :|: 0 = 0
f_1717(v42292, v42293, v42294, v42295, v42296, v42297, 1, v42299, 0, v42301, v42302, v42303, v42304, v42305, v42306, v42308, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) -> f_1724(v42292, v42293, v42294, v42295, v42296, v42297, 1, v42299, 0, v42301, v42302, v42303, v42304, v42305, v42306, v42846, v42308, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) :|: 1 + v42846 = v42297 && 0 <= v42846
f_1724(v42292, v42293, v42294, v42295, v42296, v42297, 1, v42299, 0, v42301, v42302, v42303, v42304, v42305, v42306, v42846, v42308, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) -> f_1731(v42292, v42293, v42294, v42295, v42296, v42297, 1, v42299, 0, v42301, v42302, v42303, v42304, v42305, v42306, v42846, v42308, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) :|: 0 = 0
f_1731(v42292, v42293, v42294, v42295, v42296, v42297, 1, v42299, 0, v42301, v42302, v42303, v42304, v42305, v42306, v42846, v42308, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) -> f_1738(v42292, v42293, v42294, v42295, v42296, v42297, 1, v42299, 0, v42301, v42302, v42303, v42304, v42305, v42306, v42846, v42308, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) :|: TRUE
f_1738(v42292, v42293, v42294, v42295, v42296, v42297, 1, v42299, 0, v42301, v42302, v42303, v42304, v42305, v42306, v42846, v42308, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) -> f_1746(v42292, v42293, v42294, v42295, v42296, v42297, 1, v42299, 0, v42301, v42302, v42303, v42304, v42305, v42306, v42846, v43581, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) :|: TRUE
f_1746(v42292, v42293, v42294, v42295, v42296, v42297, 1, v42299, 0, v42301, v42302, v42303, v42304, v42305, v42306, v42846, v43581, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) -> f_1755(v42292, v42293, v42294, v42295, v42296, v42297, 1, v42299, 0, v42301, v42302, v42303, v42304, v42305, v42306, v42846, v43581, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) :|: 0 = 0
f_1755(v42292, v42293, v42294, v42295, v42296, v42297, 1, v42299, 0, v42301, v42302, v42303, v42304, v42305, v42306, v42846, v43581, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) -> f_1763(v42292, v42293, v42294, v42295, v42296, v42297, 1, v42299, 0, v42301, v42302, v42303, v42304, v42305, v42306, v42846, v43581, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) :|: TRUE
f_1763(v42292, v42293, v42294, v42295, v42296, v42297, 1, v42299, 0, v42301, v42302, v42303, v42304, v42305, v42306, v42846, v43581, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) -> f_1771(v42292, v42293, v42294, v42295, v42296, v42297, 1, v42299, 0, v42301, v42302, v42303, v42304, v42305, v42306, v42846, v43581, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) :|: TRUE
f_1771(v42292, v42293, v42294, v42295, v42296, v42297, 1, v42299, 0, v42301, v42302, v42303, v42304, v42305, v42306, v42846, v43581, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) -> f_1779(v42292, v42293, v42294, v42295, v42296, v42297, 1, v42299, 0, v42301, v42302, v42303, v42304, v42305, v42306, v42846, v43581, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) :|: TRUE
f_1779(v42292, v42293, v42294, v42295, v42296, v42297, 1, v42299, 0, v42301, v42302, v42303, v42304, v42305, v42306, v42846, v43581, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) -> f_1785(v42292, v42293, v42294, v42295, v42296, v42297, 1, v42299, 0, v42301, v42302, v42303, v42304, v42305, v42306, v42846, v43581, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) :|: TRUE
f_1785(v42292, v42293, v42294, v42295, v42296, v42297, 1, v42299, 0, v42301, v42302, v42303, v42304, v42305, v42306, v42846, v43581, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) -> f_1791(v42292, v42293, v42294, v42295, v42296, v42297, 1, v42299, 0, v42301, v42302, v42303, v42304, v42305, v42306, v42846, v43581, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) :|: 0 = 0
f_1791(v42292, v42293, v42294, v42295, v42296, v42297, 1, v42299, 0, v42301, v42302, v42303, v42304, v42305, v42306, v42846, v43581, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) -> f_1796(v42292, v42293, v42294, v42295, v42296, v42846, 1, v42299, v42297, 0, v42301, v42302, v42303, v42304, v42305, v42306, v43581, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) :|: 0 = 0
f_1796(v42292, v42293, v42294, v42295, v42296, v42846, 1, v42299, v42297, 0, v42301, v42302, v42303, v42304, v42305, v42306, v43581, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) -> f_1801(v42292, v42293, v42294, v42295, v42296, v42846, 1, v42299, v42297, 0, v42301, v42302, v42303, v42304, v42305, v42306, v43581, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) :|: 0 < v42846 && 2 <= v42297 && 3 <= v42303
f_1801(v42292, v42293, v42294, v42295, v42296, v42846, 1, v42299, v42297, 0, v42301, v42302, v42303, v42304, v42305, v42306, v43581, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) -> f_1808(v42292, v42293, v42294, v42295, v42296, v42846, 1, v42299, v42297, 0, v42301, v42302, v42303, v42304, v42305, v42306, v43581, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) :|: 0 = 0
f_1808(v42292, v42293, v42294, v42295, v42296, v42846, 1, v42299, v42297, 0, v42301, v42302, v42303, v42304, v42305, v42306, v43581, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) -> f_1817(v42292, v42293, v42294, v42295, v42296, v42846, 1, v42299, v42297, 0, v42301, v42302, v42303, v42304, v42305, v42306, v43581, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) :|: TRUE
f_1817(v42292, v42293, v42294, v42295, v42296, v42846, 1, v42299, v42297, 0, v42301, v42302, v42303, v42304, v42305, v42306, v43581, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) -> f_1827(v42292, v42293, v42294, v42295, v42296, v42846, 1, v42299, v42297, 0, v42301, v42302, v42303, v42304, v42305, v42306, v43581, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) :|: 0 = 0
f_1827(v42292, v42293, v42294, v42295, v42296, v42846, 1, v42299, v42297, 0, v42301, v42302, v42303, v42304, v42305, v42306, v43581, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) -> f_1837(v42292, v42293, v42294, v42295, v42296, v42846, 1, v43581, v42297, 0, v42301, v42302, v42303, v42304, v42305, v42306, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) :|: 0 = 0
f_1837(v42292, v42293, v42294, v42295, v42296, v42846, 1, v43581, v42297, 0, v42301, v42302, v42303, v42304, v42305, v42306, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) -> f_1847(v42292, v42293, v42294, v42295, v42296, v42846, 1, v43581, v42297, 0, v42301, v42302, v42303, v42304, v42305, v42306, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) :|: 0 < v43581
f_1847(v42292, v42293, v42294, v42295, v42296, v42846, 1, v43581, v42297, 0, v42301, v42302, v42303, v42304, v42305, v42306, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) -> f_1857(v42292, v42293, v42294, v42295, v42296, v42846, 1, v43581, v42297, 0, v42301, v42302, v42303, v42304, v42305, v42306, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) :|: 0 = 0
f_1857(v42292, v42293, v42294, v42295, v42296, v42846, 1, v43581, v42297, 0, v42301, v42302, v42303, v42304, v42305, v42306, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) -> f_1865(v42292, v42293, v42294, v42295, v42296, v42846, 1, v43581, v42297, 0, v42301, v42302, v42303, v42304, v42305, v42306, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) :|: 0 = 0
f_1865(v42292, v42293, v42294, v42295, v42296, v42846, 1, v43581, v42297, 0, v42301, v42302, v42303, v42304, v42305, v42306, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) -> f_1873(v42292, v42293, v42294, v42295, v42296, v42846, 1, v43581, v42297, 0, v42301, v42302, v42303, v42304, v42305, v42306, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) :|: TRUE
f_1873(v42292, v42293, v42294, v42295, v42296, v42846, 1, v43581, v42297, 0, v42301, v42302, v42303, v42304, v42305, v42306, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) -> f_1881(v42292, v42293, v42294, v42295, v42296, v42846, 1, v43581, v42297, 0, v42301, v42302, v42303, v42304, v42305, v42306, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) :|: 0 = 0
f_1881(v42292, v42293, v42294, v42295, v42296, v42846, 1, v43581, v42297, 0, v42301, v42302, v42303, v42304, v42305, v42306, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) -> f_1888(v42292, v42293, v42294, v42295, v42296, v42846, 1, v43581, 0, v42301, v42302, v42303, v42304, v42305, v42306, v42297, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) :|: 0 = 0
f_1888(v42292, v42293, v42294, v42295, v42296, v42846, 1, v43581, 0, v42301, v42302, v42303, v42304, v42305, v42306, v42297, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) -> f_1896(v42292, v42293, v42294, v42295, v42296, v42846, 1, v43581, 0, v42301, v42302, v42303, v42304, v42305, v42306, v42297, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) :|: 0 = 0
f_1896(v42292, v42293, v42294, v42295, v42296, v42846, 1, v43581, 0, v42301, v42302, v42303, v42304, v42305, v42306, v42297, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) -> f_1903(v42292, v42293, v42294, v42295, v42296, v42846, 1, v43581, 0, v42301, v42302, v42303, v42304, v42305, v42306, v42297, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) :|: TRUE
f_1903(v42292, v42293, v42294, v42295, v42296, v42846, 1, v43581, 0, v42301, v42302, v42303, v42304, v42305, v42306, v42297, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) -> f_1911(v42292, v42293, v42294, v42295, v42296, v42846, 1, v43581, 0, v42301, v42302, v42303, v54909, v42305, v42306, v42297, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) :|: TRUE
f_1911(v42292, v42293, v42294, v42295, v42296, v42846, 1, v43581, 0, v42301, v42302, v42303, v54909, v42305, v42306, v42297, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) -> f_1915(v42292, v42293, v42294, v42295, v42296, v42846, 1, v43581, 0, v42301, v42302, v42303, v54909, v42305, v42306, v42297, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) :|: v54909 != 0
f_1911(v42292, v42293, v42294, v42295, v42296, v42846, 1, v43581, 0, v42301, v42302, v42303, v54909, v42305, v42306, v42297, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) -> f_1916(v42292, v42293, v42294, v42295, v42296, v42846, 1, v43581, 0, v42301, v42302, v42303, v42305, v42306, v42297, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) :|: v54909 = 0
f_1915(v42292, v42293, v42294, v42295, v42296, v42846, 1, v43581, 0, v42301, v42302, v42303, v54909, v42305, v42306, v42297, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) -> f_1920(v42292, v42293, v42294, v42295, v42296, v42846, 1, v43581, 0, v42301, v42302, v42303, v54909, v42305, v42306, v42297, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) :|: 0 = 0
f_1920(v42292, v42293, v42294, v42295, v42296, v42846, 1, v43581, 0, v42301, v42302, v42303, v54909, v42305, v42306, v42297, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) -> f_1925(v42292, v42293, v42294, v42295, v42296, v42846, 1, v43581, 0, v42301, v42302, v42303, v54909, v42305, v42306, v42297, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) :|: TRUE
f_1925(v42292, v42293, v42294, v42295, v42296, v42846, 1, v43581, 0, v42301, v42302, v42303, v54909, v42305, v42306, v42297, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) -> f_1704(v42292, v42293, v42294, v42295, v42296, v42846, 1, v43581, 0, v42301, v42302, v42303, v54909, v42305, v42306, v42297, v43581, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) :|: TRUE
f_1704(v42292, v42293, v42294, v42295, v42296, v42297, 1, v42299, 0, v42301, v42302, v42303, v42304, v42305, v42306, v42307, v42308, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) -> f_1711(v42292, v42293, v42294, v42295, v42296, v42297, 1, v42299, 0, v42301, v42302, v42303, v42304, v42305, v42306, v42307, v42308, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) :|: 0 = 0
f_1916(v42292, v42293, v42294, v42295, v42296, v42846, 1, v43581, 0, v42301, v42302, v42303, v42305, v42306, v42297, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) -> f_1921(v42292, v42293, v42294, v42295, v42296, v42846, 1, v43581, 0, v42301, v42302, v42303, v42305, v42306, v42297, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) :|: 0 = 0
f_1921(v42292, v42293, v42294, v42295, v42296, v42846, 1, v43581, 0, v42301, v42302, v42303, v42305, v42306, v42297, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) -> f_1926(v42292, v42293, v42294, v42295, v42296, v42846, 1, v43581, 0, v42301, v42302, v42303, v42305, v42306, v42297, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) :|: TRUE
f_1926(v42292, v42293, v42294, v42295, v42296, v42846, 1, v43581, 0, v42301, v42302, v42303, v42305, v42306, v42297, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) -> f_1706(v42292, v42293, v42294, v42295, v42296, v42846, 1, v43581, 0, v42301, v42302, v42303, v42305, v42306, v42297, v43581, v42309, v42310, v42311, v42312, v42313, 3, 7, 2, 4, 8) :|: TRUE
f_1706(v42444, v42445, v42446, v42447, v42448, v42449, 1, v42451, 0, v42453, v42454, v42455, v42456, v42457, v42458, v42459, v42460, v42461, v42462, v42463, v42464, 3, 7, 2, 4, 8) -> f_1712(v42444, v42445, v42446, v42447, v42448, v42449, 1, v42451, 0, v42453, v42454, v42455, v42456, v42457, v42458, v42459, v42460, v42461, v42462, v42463, v42464, 3, 7, 2, 4, 8) :|: 0 = 0
f_1712(v42444, v42445, v42446, v42447, v42448, v42449, 1, v42451, 0, v42453, v42454, v42455, v42456, v42457, v42458, v42459, v42460, v42461, v42462, v42463, v42464, 3, 7, 2, 4, 8) -> f_1718(v42444, v42445, v42446, v42447, v42448, v42449, 1, v42451, 0, v42453, v42454, v42455, v42457, v42458, v42459, v42460, v42461, v42462, v42463, v42464, 3, 7, 2, 4, 8) :|: 0 = 0
f_1718(v42444, v42445, v42446, v42447, v42448, v42449, 1, v42451, 0, v42453, v42454, v42455, v42457, v42458, v42459, v42460, v42461, v42462, v42463, v42464, 3, 7, 2, 4, 8) -> f_1725(v42444, v42445, v42446, v42447, v42448, v42449, 1, v42451, 0, v42453, v42454, v42455, v42847, v42458, v42459, v42460, v42461, v42462, v42463, v42464, 3, 7, 2, 4, 8) :|: 1 + v42847 = v42451 && 0 <= v42847
f_1725(v42444, v42445, v42446, v42447, v42448, v42449, 1, v42451, 0, v42453, v42454, v42455, v42847, v42458, v42459, v42460, v42461, v42462, v42463, v42464, 3, 7, 2, 4, 8) -> f_1732(v42444, v42445, v42446, v42447, v42448, v42449, 1, v42451, 0, v42453, v42454, v42455, v42847, v42458, v42459, v42460, v42461, v42462, v42463, v42464, 3, 7, 2, 4, 8) :|: 0 = 0
f_1732(v42444, v42445, v42446, v42447, v42448, v42449, 1, v42451, 0, v42453, v42454, v42455, v42847, v42458, v42459, v42460, v42461, v42462, v42463, v42464, 3, 7, 2, 4, 8) -> f_1739(v42444, v42445, v42446, v42447, v42448, v42449, 1, v42451, 0, v42453, v42454, v42455, v42847, v42458, v42459, v42460, v42461, v42462, v42463, v42464, 3, 7, 2, 4, 8) :|: TRUE
f_1739(v42444, v42445, v42446, v42447, v42448, v42449, 1, v42451, 0, v42453, v42454, v42455, v42847, v42458, v42459, v42460, v42461, v42462, v42463, v42464, 3, 7, 2, 4, 8) -> f_1747(v42444, v42445, v42446, v42447, v42448, v42449, 1, v42451, 0, v42453, v42454, v42455, v42847, v42458, v42459, v42460, v42461, v42462, v42463, v42464, 3, 7, 2, 4, 8) :|: TRUE
f_1747(v42444, v42445, v42446, v42447, v42448, v42449, 1, v42451, 0, v42453, v42454, v42455, v42847, v42458, v42459, v42460, v42461, v42462, v42463, v42464, 3, 7, 2, 4, 8) -> f_1748(v42444, v42445, v42446, v42447, v42448, v42449, 1, v42451, 0, v42453, v42454, v42455, v42458, v42459, v42847, v42460, v42461, v42462, v42463, v42464, 3, 7, 2, 4, 8) :|: TRUE
f_1748(v43715, v43716, v43717, v43718, v43719, v43720, 1, v43722, 0, v43724, v43725, v43726, v43727, v43728, v43729, v43730, v43731, v43732, v43733, v43734, 3, 7, 2, 4, 8) -> f_1756(v43715, v43716, v43717, v43718, v43719, v43720, 1, v43722, 0, v43724, v43725, v43726, v43727, v43728, v43729, v43730, v43731, v43732, v43733, v43734, 3, 7, 2, 4, 8) :|: TRUE
f_1756(v43715, v43716, v43717, v43718, v43719, v43720, 1, v43722, 0, v43724, v43725, v43726, v43727, v43728, v43729, v43730, v43731, v43732, v43733, v43734, 3, 7, 2, 4, 8) -> f_1764(v43715, v43716, v43717, v43718, v43719, v43720, 1, v43722, 0, v43724, v43725, v43726, v43727, v43728, v43729, v43730, v43731, v43732, v43733, v43734, 3, 7, 2, 4, 8) :|: TRUE
f_1764(v43715, v43716, v43717, v43718, v43719, v43720, 1, v43722, 0, v43724, v43725, v43726, v43727, v43728, v43729, v43730, v43731, v43732, v43733, v43734, 3, 7, 2, 4, 8) -> f_1772(v43715, v43716, v43717, v43718, v43719, v43720, 1, v43722, 0, v43724, v43725, v43726, v43727, v43728, v43729, v43730, v43731, v43732, v43733, v43734, 3, 7, 2, 4, 8) :|: 0 = 0
f_1772(v43715, v43716, v43717, v43718, v43719, v43720, 1, v43722, 0, v43724, v43725, v43726, v43727, v43728, v43729, v43730, v43731, v43732, v43733, v43734, 3, 7, 2, 4, 8) -> f_1780(v43715, v43716, v43717, v43718, v43719, v43720, 1, v43722, 0, v43724, v43725, v43726, v43727, v43728, v43729, v43730, v43731, v43732, v43733, v43734, 3, 7, 2, 4, 8) :|: 0 = 0
f_1780(v43715, v43716, v43717, v43718, v43719, v43720, 1, v43722, 0, v43724, v43725, v43726, v43727, v43728, v43729, v43730, v43731, v43732, v43733, v43734, 3, 7, 2, 4, 8) -> f_1786(v43715, v43716, v43717, v43718, v43719, v43720, 1, v43722, 0, v43724, v43725, v43726, v43727, v43728, v43729, v43730, v43731, v43732, v43733, v43734, 3, 7, 2, 4, 8) :|: 0 = 0
f_1786(v43715, v43716, v43717, v43718, v43719, v43720, 1, v43722, 0, v43724, v43725, v43726, v43727, v43728, v43729, v43730, v43731, v43732, v43733, v43734, 3, 7, 2, 4, 8) -> f_1792(v43715, v43716, v43717, v43718, v43719, v43720, 1, v43722, 0, v43724, v43725, v43726, v43727, v43728, v43729, v43730, v43731, v43732, v43733, v43734, 3, 7, 2, 4, 8) :|: TRUE
f_1792(v43715, v43716, v43717, v43718, v43719, v43720, 1, v43722, 0, v43724, v43725, v43726, v43727, v43728, v43729, v43730, v43731, v43732, v43733, v43734, 3, 7, 2, 4, 8) -> f_1797(v43715, v43716, v43717, v43718, v43719, v43720, 1, v43722, 0, v43724, v43725, v43726, v43727, v43728, v43729, v43730, v43731, v43732, v43733, v43734, 3, 7, 2, 4, 8) :|: 0 = 0
f_1797(v43715, v43716, v43717, v43718, v43719, v43720, 1, v43722, 0, v43724, v43725, v43726, v43727, v43728, v43729, v43730, v43731, v43732, v43733, v43734, 3, 7, 2, 4, 8) -> f_1803(v43715, v43716, v43717, v43718, v43719, v43720, 1, v43729, 0, v43724, v43725, v43726, v43727, v43728, v43722, v43730, v43731, v43732, v43733, v43734, 3, 7, 2, 4, 8) :|: 0 = 0
f_1803(v43715, v43716, v43717, v43718, v43719, v43720, 1, v43729, 0, v43724, v43725, v43726, v43727, v43728, v43722, v43730, v43731, v43732, v43733, v43734, 3, 7, 2, 4, 8) -> f_1810(v43715, v43716, v43717, v43718, v43719, v43720, 1, v43729, 0, v43724, v43725, v43726, v43727, v43728, v43722, v43730, v43731, v43732, v43733, v43734, 3, 7, 2, 4, 8) :|: 0 < v43729 && 2 <= v43722 && 2 <= v43728
f_1810(v43715, v43716, v43717, v43718, v43719, v43720, 1, v43729, 0, v43724, v43725, v43726, v43727, v43728, v43722, v43730, v43731, v43732, v43733, v43734, 3, 7, 2, 4, 8) -> f_1819(v43715, v43716, v43717, v43718, v43719, v43720, 1, v43729, 0, v43724, v43725, v43726, v43727, v43728, v43722, v43730, v43731, v43732, v43733, v43734, 3, 7, 2, 4, 8) :|: 0 = 0
f_1819(v43715, v43716, v43717, v43718, v43719, v43720, 1, v43729, 0, v43724, v43725, v43726, v43727, v43728, v43722, v43730, v43731, v43732, v43733, v43734, 3, 7, 2, 4, 8) -> f_1829(v43715, v43716, v43717, v43718, v43719, v43720, 1, v43729, 0, v43724, v43725, v43726, v43727, v43728, v43722, v43730, v43731, v43732, v43733, v43734, 3, 7, 2, 4, 8) :|: 0 = 0
f_1829(v43715, v43716, v43717, v43718, v43719, v43720, 1, v43729, 0, v43724, v43725, v43726, v43727, v43728, v43722, v43730, v43731, v43732, v43733, v43734, 3, 7, 2, 4, 8) -> f_1839(v43715, v43716, v43717, v43718, v43719, v43720, 1, v43729, 0, v43724, v43725, v43726, v43727, v43728, v43722, v43730, v43731, v43732, v43733, v43734, 3, 7, 2, 4, 8) :|: TRUE
f_1839(v43715, v43716, v43717, v43718, v43719, v43720, 1, v43729, 0, v43724, v43725, v43726, v43727, v43728, v43722, v43730, v43731, v43732, v43733, v43734, 3, 7, 2, 4, 8) -> f_1849(v43715, v43716, v43717, v43718, v43719, v43720, 1, v43729, 0, v43724, v43725, v43726, v43727, v43728, v43722, v43730, v43731, v43732, v43733, v43734, 3, 7, 2, 4, 8) :|: 0 = 0
f_1849(v43715, v43716, v43717, v43718, v43719, v43720, 1, v43729, 0, v43724, v43725, v43726, v43727, v43728, v43722, v43730, v43731, v43732, v43733, v43734, 3, 7, 2, 4, 8) -> f_1859(v43715, v43716, v43717, v43718, v43719, v43720, 1, v43729, 0, v43724, v43725, v43726, v43727, v43728, v43722, v43730, v43731, v43732, v43733, v43734, 3, 7, 2, 4, 8) :|: 0 = 0
f_1859(v43715, v43716, v43717, v43718, v43719, v43720, 1, v43729, 0, v43724, v43725, v43726, v43727, v43728, v43722, v43730, v43731, v43732, v43733, v43734, 3, 7, 2, 4, 8) -> f_1867(v43715, v43716, v43717, v43718, v43719, v43720, 1, v43729, 0, v43724, v43725, v43726, v43727, v43728, v43722, v43730, v43731, v43732, v43733, v43734, 3, 7, 2, 4, 8) :|: 0 = 0
f_1867(v43715, v43716, v43717, v43718, v43719, v43720, 1, v43729, 0, v43724, v43725, v43726, v43727, v43728, v43722, v43730, v43731, v43732, v43733, v43734, 3, 7, 2, 4, 8) -> f_1875(v43715, v43716, v43717, v43718, v43719, v43720, 1, v43729, 0, v43724, v43725, v43726, v43727, v43728, v43722, v43730, v43731, v43732, v43733, v43734, 3, 7, 2, 4, 8) :|: TRUE
f_1875(v43715, v43716, v43717, v43718, v43719, v43720, 1, v43729, 0, v43724, v43725, v43726, v43727, v43728, v43722, v43730, v43731, v43732, v43733, v43734, 3, 7, 2, 4, 8) -> f_1883(v43715, v43716, v43717, v43718, v43719, v43720, 1, v43729, 0, v43724, v43725, v43726, v53371, v43727, v43728, v43722, v43730, v43731, v43732, v43733, v43734, 3, 7, 2, 4, 8) :|: TRUE
f_1883(v43715, v43716, v43717, v43718, v43719, v43720, 1, v43729, 0, v43724, v43725, v43726, v53371, v43727, v43728, v43722, v43730, v43731, v43732, v43733, v43734, 3, 7, 2, 4, 8) -> f_1889(v43715, v43716, v43717, v43718, v43719, v43720, 1, v43729, 0, v43724, v43725, v43726, v53371, v43727, v43728, v43722, v43730, v43731, v43732, v43733, v43734, 3, 7, 2, 4, 8) :|: v53371 != 0
f_1883(v43715, v43716, v43717, v43718, v43719, v43720, 1, v43729, 0, v43724, v43725, v43726, v53371, v43727, v43728, v43722, v43730, v43731, v43732, v43733, v43734, 3, 7, 2, 4, 8) -> f_1890(v43715, v43716, v43717, v43718, v43719, v43720, 1, v43729, 0, v43724, v43725, v43726, v43727, v43728, v43722, v43730, v43731, v43732, v43733, v43734, 3, 7, 2, 4, 8) :|: v53371 = 0
f_1889(v43715, v43716, v43717, v43718, v43719, v43720, 1, v43729, 0, v43724, v43725, v43726, v53371, v43727, v43728, v43722, v43730, v43731, v43732, v43733, v43734, 3, 7, 2, 4, 8) -> f_1897(v43715, v43716, v43717, v43718, v43719, v43720, 1, v43729, 0, v43724, v43725, v43726, v53371, v43727, v43728, v43722, v43730, v43731, v43732, v43733, v43734, 3, 7, 2, 4, 8) :|: 0 = 0
f_1897(v43715, v43716, v43717, v43718, v43719, v43720, 1, v43729, 0, v43724, v43725, v43726, v53371, v43727, v43728, v43722, v43730, v43731, v43732, v43733, v43734, 3, 7, 2, 4, 8) -> f_1904(v43715, v43716, v43717, v43718, v43719, v43720, 1, v43729, 0, v43724, v43725, v43726, v53371, v43727, v43728, v43722, v43730, v43731, v43732, v43733, v43734, 3, 7, 2, 4, 8) :|: TRUE
f_1904(v43715, v43716, v43717, v43718, v43719, v43720, 1, v43729, 0, v43724, v43725, v43726, v53371, v43727, v43728, v43722, v43730, v43731, v43732, v43733, v43734, 3, 7, 2, 4, 8) -> f_1704(v43715, v43716, v43717, v43718, v43719, v43720, 1, v43729, 0, v43724, v43725, v43726, v53371, v43722, v43729, v43727, v43728, v43730, v43731, v43732, v43733, v43734, 3, 7, 2, 4, 8) :|: TRUE
f_1890(v43715, v43716, v43717, v43718, v43719, v43720, 1, v43729, 0, v43724, v43725, v43726, v43727, v43728, v43722, v43730, v43731, v43732, v43733, v43734, 3, 7, 2, 4, 8) -> f_1898(v43715, v43716, v43717, v43718, v43719, v43720, 1, v43729, 0, v43724, v43725, v43726, v43727, v43728, v43722, v43730, v43731, v43732, v43733, v43734, 3, 7, 2, 4, 8) :|: 0 = 0
f_1898(v43715, v43716, v43717, v43718, v43719, v43720, 1, v43729, 0, v43724, v43725, v43726, v43727, v43728, v43722, v43730, v43731, v43732, v43733, v43734, 3, 7, 2, 4, 8) -> f_1905(v43715, v43716, v43717, v43718, v43719, v43720, 1, v43729, 0, v43724, v43725, v43726, v43727, v43728, v43722, v43730, v43731, v43732, v43733, v43734, 3, 7, 2, 4, 8) :|: TRUE
f_1905(v43715, v43716, v43717, v43718, v43719, v43720, 1, v43729, 0, v43724, v43725, v43726, v43727, v43728, v43722, v43730, v43731, v43732, v43733, v43734, 3, 7, 2, 4, 8) -> f_1706(v43715, v43716, v43717, v43718, v43719, v43720, 1, v43729, 0, v43724, v43725, v43726, v43722, v43729, v43727, v43728, v43730, v43731, v43732, v43733, v43734, 3, 7, 2, 4, 8) :|: TRUE
Combined rules. Obtained 6 rulesP rules:
f_1883(v43715:0, v43716:0, v43717:0, v43718:0, v43719:0, v43720:0, 1, v43729:0, 0, v43724:0, v43725:0, v43726:0, v53371:0, v43727:0, v43728:0, v43722:0, v43730:0, v43731:0, v43732:0, v43733:0, v43734:0, 3, 7, 2, 4, 8) -> f_1711(v43715:0, v43716:0, v43717:0, v43718:0, v43719:0, v43720:0, 1, v43729:0, 0, v43724:0, v43725:0, v43726:0, v53371:0, v43722:0, v43729:0, v43727:0, v43728:0, v43730:0, v43731:0, v43732:0, v43733:0, v43734:0, 3, 7, 2, 4, 8) :|: v53371:0 < 0
f_1883(v43715:0, v43716:0, v43717:0, v43718:0, v43719:0, v43720:0, 1, v43729:0, 0, v43724:0, v43725:0, v43726:0, v53371:0, v43727:0, v43728:0, v43722:0, v43730:0, v43731:0, v43732:0, v43733:0, v43734:0, 3, 7, 2, 4, 8) -> f_1711(v43715:0, v43716:0, v43717:0, v43718:0, v43719:0, v43720:0, 1, v43729:0, 0, v43724:0, v43725:0, v43726:0, v53371:0, v43722:0, v43729:0, v43727:0, v43728:0, v43730:0, v43731:0, v43732:0, v43733:0, v43734:0, 3, 7, 2, 4, 8) :|: v53371:0 > 0
f_1711(v42292:0, v42293:0, v42294:0, v42295:0, v42296:0, 1 + v42846:0, 1, v42299:0, 0, v42301:0, v42302:0, v42303:0, v42304:0, v42305:0, v42306:0, v42307:0, v42308:0, v42309:0, v42310:0, v42311:0, v42312:0, v42313:0, 3, 7, 2, 4, 8) -> f_1711(v42292:0, v42293:0, v42294:0, v42295:0, v42296:0, v42846:0, 1, v43581:0, 0, v42301:0, v42302:0, v42303:0, v54909:0, v42305:0, v42306:0, 1 + v42846:0, v43581:0, v42309:0, v42310:0, v42311:0, v42312:0, v42313:0, 3, 7, 2, 4, 8) :|: v42846:0 > 0 && v42303:0 > 2 && v54909:0 < 0 && v43581:0 > 0
f_1711(v42292:0, v42293:0, v42294:0, v42295:0, v42296:0, 1 + v42846:0, 1, v42299:0, 0, v42301:0, v42302:0, v42303:0, v42304:0, v42305:0, v42306:0, v42307:0, v42308:0, v42309:0, v42310:0, v42311:0, v42312:0, v42313:0, 3, 7, 2, 4, 8) -> f_1711(v42292:0, v42293:0, v42294:0, v42295:0, v42296:0, v42846:0, 1, v43581:0, 0, v42301:0, v42302:0, v42303:0, v54909:0, v42305:0, v42306:0, 1 + v42846:0, v43581:0, v42309:0, v42310:0, v42311:0, v42312:0, v42313:0, 3, 7, 2, 4, 8) :|: v42846:0 > 0 && v42303:0 > 2 && v54909:0 > 0 && v43581:0 > 0
f_1711(v42292:0, v42293:0, v42294:0, v42295:0, v42296:0, 1 + v42846:0, 1, v42299:0, 0, v42301:0, v42302:0, v42303:0, v42304:0, v42305:0, v42306:0, v42307:0, v42308:0, v42309:0, v42310:0, v42311:0, v42312:0, v42313:0, 3, 7, 2, 4, 8) -> f_1883(v42292:0, v42293:0, v42294:0, v42295:0, v42296:0, v42846:0, 1, v42847:0, 0, v42301:0, v42302:0, v42303:0, v53371:0, 1 + v42846:0, 1 + v42847:0, 1 + v42847:0, v42309:0, v42310:0, v42311:0, v42312:0, v42313:0, 3, 7, 2, 4, 8) :|: v42846:0 > 0 && v42847:0 > 0 && v42303:0 > 2
f_1883(v43715:0, v43716:0, v43717:0, v43718:0, v43719:0, v43720:0, 1, 1 + v42847:0, 0, v43724:0, v43725:0, v43726:0, 0, v43727:0, v43728:0, v43722:0, v43730:0, v43731:0, v43732:0, v43733:0, v43734:0, 3, 7, 2, 4, 8) -> f_1883(v43715:0, v43716:0, v43717:0, v43718:0, v43719:0, v43720:0, 1, v42847:0, 0, v43724:0, v43725:0, v43726:0, v53371:1, v43727:0, v43728:0, 1 + v42847:0, v43730:0, v43731:0, v43732:0, v43733:0, v43734:0, 3, 7, 2, 4, 8) :|: v42847:0 > 0 && v43728:0 > 1
Filtered unneeded arguments:
   f_1883(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26) -> f_1883(x6, x8, x12, x13, x15)
   f_1711(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27) -> f_1711(x6, x12)
Removed division, modulo operations, cleaned up constraints. Obtained 5 rules.P rules:
f_1883(v43720:0, v43729:0, v43726:0, v53371:0, v43728:0) -> f_1711(v43720:0, v43726:0) :|: v53371:0 < 0
f_1883(v43720:0, v43729:0, v43726:0, v53371:0, v43728:0) -> f_1711(v43720:0, v43726:0) :|: v53371:0 > 0
f_1711(sum~cons_1~v42846:0, v42303:0) -> f_1711(v42846:0, v42303:0) :|: v42846:0 > 0 && v42303:0 > 2 && sum~cons_1~v42846:0 = 1 + v42846:0
f_1711(sum~cons_1~v42846:0, v42303:0) -> f_1883(v42846:0, v42847:0, v42303:0, v53371:0, 1 + v42847:0) :|: v42847:0 > 0 && v42303:0 > 2 && v42846:0 > 0 && sum~cons_1~v42846:0 = 1 + v42846:0
f_1883(v43720:0, sum~cons_1~v42847:0, v43726:0, cons_0, v43728:0) -> f_1883(v43720:0, v42847:0, v43726:0, v53371:1, v43728:0) :|: v42847:0 > 0 && v43728:0 > 1 && sum~cons_1~v42847:0 = 1 + v42847:0 && cons_0 = 0

----------------------------------------

(26)
Obligation:
Rules:
f_1883(v43720:0, v43729:0, v43726:0, v53371:0, v43728:0) -> f_1711(v43720:0, v43726:0) :|: v53371:0 < 0
f_1883(x, x1, x2, x3, x4) -> f_1711(x, x2) :|: x3 > 0
f_1711(sum~cons_1~v42846:0, v42303:0) -> f_1711(v42846:0, v42303:0) :|: v42846:0 > 0 && v42303:0 > 2 && sum~cons_1~v42846:0 = 1 + v42846:0
f_1711(x5, x6) -> f_1883(x7, x8, x6, x9, 1 + x8) :|: x8 > 0 && x6 > 2 && x7 > 0 && x5 = 1 + x7
f_1883(x10, x11, x12, x13, x14) -> f_1883(x10, x15, x12, x16, x14) :|: x15 > 0 && x14 > 1 && x11 = 1 + x15 && x13 = 0

----------------------------------------

(27) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(28)
Obligation:
Rules:
f_1883(x:0, x1:0, x2:0, x3:0, x4:0) -> f_1711(x:0, x2:0) :|: x3:0 > 0
f_1711(sum~cons_1~v42846:0:0, v42303:0:0) -> f_1711(v42846:0:0, v42303:0:0) :|: v42846:0:0 > 0 && v42303:0:0 > 2 && sum~cons_1~v42846:0:0 = 1 + v42846:0:0
f_1711(sum~cons_1~x7:0, x6:0) -> f_1883(x7:0, x8:0, x6:0, x9:0, 1 + x8:0) :|: x8:0 > 0 && x6:0 > 2 && x7:0 > 0 && sum~cons_1~x7:0 = 1 + x7:0
f_1883(v43720:0:0, v43729:0:0, v43726:0:0, v53371:0:0, v43728:0:0) -> f_1711(v43720:0:0, v43726:0:0) :|: v53371:0:0 < 0
f_1883(x10:0, sum~cons_1~x15:0, x12:0, cons_0, x14:0) -> f_1883(x10:0, x15:0, x12:0, x16:0, x14:0) :|: x15:0 > 0 && x14:0 > 1 && sum~cons_1~x15:0 = 1 + x15:0 && cons_0 = 0

----------------------------------------

(29) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_1883(x, x1, x2, x3, x4)] = -1 + x + x2
[f_1711(x5, x6)] = -1 + x5 + x6

The following rules are decreasing:
f_1711(sum~cons_1~v42846:0:0, v42303:0:0) -> f_1711(v42846:0:0, v42303:0:0) :|: v42846:0:0 > 0 && v42303:0:0 > 2 && sum~cons_1~v42846:0:0 = 1 + v42846:0:0
f_1711(sum~cons_1~x7:0, x6:0) -> f_1883(x7:0, x8:0, x6:0, x9:0, 1 + x8:0) :|: x8:0 > 0 && x6:0 > 2 && x7:0 > 0 && sum~cons_1~x7:0 = 1 + x7:0
The following rules are bounded:
f_1711(sum~cons_1~v42846:0:0, v42303:0:0) -> f_1711(v42846:0:0, v42303:0:0) :|: v42846:0:0 > 0 && v42303:0:0 > 2 && sum~cons_1~v42846:0:0 = 1 + v42846:0:0
f_1711(sum~cons_1~x7:0, x6:0) -> f_1883(x7:0, x8:0, x6:0, x9:0, 1 + x8:0) :|: x8:0 > 0 && x6:0 > 2 && x7:0 > 0 && sum~cons_1~x7:0 = 1 + x7:0

----------------------------------------

(30)
Obligation:
Rules:
f_1883(x:0, x1:0, x2:0, x3:0, x4:0) -> f_1711(x:0, x2:0) :|: x3:0 > 0
f_1883(v43720:0:0, v43729:0:0, v43726:0:0, v53371:0:0, v43728:0:0) -> f_1711(v43720:0:0, v43726:0:0) :|: v53371:0:0 < 0
f_1883(x10:0, sum~cons_1~x15:0, x12:0, cons_0, x14:0) -> f_1883(x10:0, x15:0, x12:0, x16:0, x14:0) :|: x15:0 > 0 && x14:0 > 1 && sum~cons_1~x15:0 = 1 + x15:0 && cons_0 = 0

----------------------------------------

(31) TerminationGraphProcessor (EQUIVALENT)
Constructed the termination graph and obtained one non-trivial SCC.

----------------------------------------

(32)
Obligation:
Rules:
f_1883(x10:0, sum~cons_1~x15:0, x12:0, cons_0, x14:0) -> f_1883(x10:0, x15:0, x12:0, x16:0, x14:0) :|: x15:0 > 0 && x14:0 > 1 && sum~cons_1~x15:0 = 1 + x15:0 && cons_0 = 0

----------------------------------------

(33) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(34)
Obligation:
Rules:
f_1883(x10:0:0, sum~cons_1~x15:0:0, x12:0:0, cons_0, x14:0:0) -> f_1883(x10:0:0, x15:0:0, x12:0:0, x16:0:0, x14:0:0) :|: x15:0:0 > 0 && x14:0:0 > 1 && sum~cons_1~x15:0:0 = 1 + x15:0:0 && cons_0 = 0

----------------------------------------

(35) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_1883(x1, x2, x3, x4, x5) -> f_1883(x2, x4, x5)

----------------------------------------

(36)
Obligation:
Rules:
f_1883(sum~cons_1~x15:0:0, cons_0, x14:0:0) -> f_1883(x15:0:0, x16:0:0, x14:0:0) :|: x15:0:0 > 0 && x14:0:0 > 1 && sum~cons_1~x15:0:0 = 1 + x15:0:0 && cons_0 = 0

----------------------------------------

(37) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_1883(x, x1, x2)] = x

The following rules are decreasing:
f_1883(sum~cons_1~x15:0:0, cons_0, x14:0:0) -> f_1883(x15:0:0, x16:0:0, x14:0:0) :|: x15:0:0 > 0 && x14:0:0 > 1 && sum~cons_1~x15:0:0 = 1 + x15:0:0 && cons_0 = 0
The following rules are bounded:
f_1883(sum~cons_1~x15:0:0, cons_0, x14:0:0) -> f_1883(x15:0:0, x16:0:0, x14:0:0) :|: x15:0:0 > 0 && x14:0:0 > 1 && sum~cons_1~x15:0:0 = 1 + x15:0:0 && cons_0 = 0

----------------------------------------

(38)
YES

----------------------------------------

(39)
Obligation:
SCC
----------------------------------------

(40) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 27 rulesP rules:
f_1685(v40922, v40923, v40924, v40925, v40926, 1, v40928, v40929, v40930, v40931, v40932, 0, v40934, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) -> f_1692(v40922, v40923, v40924, v40925, v40926, 1, v40928, v40929, v40930, v40931, v40932, 0, v40934, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) :|: TRUE
f_1692(v40922, v40923, v40924, v40925, v40926, 1, v40928, v40929, v40930, v40931, v40932, 0, v40934, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) -> f_1699(v40922, v40923, v40924, v40925, v40926, 1, v40928, v40929, v40930, v40931, v40932, 0, v40934, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) :|: 0 = 0
f_1699(v40922, v40923, v40924, v40925, v40926, 1, v40928, v40929, v40930, v40931, v40932, 0, v40934, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) -> f_1707(v40922, v40923, v40924, v40925, v40926, 1, v40928, v40929, v40930, v40931, v40932, 0, v40934, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) :|: 0 = 0
f_1707(v40922, v40923, v40924, v40925, v40926, 1, v40928, v40929, v40930, v40931, v40932, 0, v40934, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) -> f_1713(v40922, v40923, v40924, v40925, v40926, 1, v40928, v40929, v40930, v40931, v40932, 0, v40934, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) :|: 0 = 0
f_1713(v40922, v40923, v40924, v40925, v40926, 1, v40928, v40929, v40930, v40931, v40932, 0, v40934, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) -> f_1719(v40922, v40923, v40924, v40925, v40926, 1, v40928, v40929, v40930, v40931, v40932, 0, v40934, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) :|: TRUE
f_1719(v40922, v40923, v40924, v40925, v40926, 1, v40928, v40929, v40930, v40931, v40932, 0, v40934, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) -> f_1726(v40922, v40923, v40924, v40925, v40926, 1, v40928, v40929, v40930, v40931, v40932, 0, v40934, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) :|: 0 = 0
f_1726(v40922, v40923, v40924, v40925, v40926, 1, v40928, v40929, v40930, v40931, v40932, 0, v40934, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) -> f_1733(v40922, v40923, v40924, v40925, v40926, 1, v40934, v40929, v40930, v40931, v40932, 0, v40928, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) :|: 0 = 0
f_1733(v40922, v40923, v40924, v40925, v40926, 1, v40934, v40929, v40930, v40931, v40932, 0, v40928, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) -> f_1740(v40922, v40923, v40924, v40925, v40926, 1, v40934, v40929, v40930, v40931, v40932, 0, v40928, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) :|: 0 < v40934 && 2 <= v40928 && 2 <= v40931 && 3 <= v40930
f_1740(v40922, v40923, v40924, v40925, v40926, 1, v40934, v40929, v40930, v40931, v40932, 0, v40928, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) -> f_1749(v40922, v40923, v40924, v40925, v40926, 1, v40934, v40929, v40930, v40931, v40932, 0, v40928, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) :|: 0 = 0
f_1749(v40922, v40923, v40924, v40925, v40926, 1, v40934, v40929, v40930, v40931, v40932, 0, v40928, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) -> f_1757(v40922, v40923, v40924, v40925, v40926, 1, v40934, v40929, v40930, v40931, v40932, 0, v40928, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) :|: 0 = 0
f_1757(v40922, v40923, v40924, v40925, v40926, 1, v40934, v40929, v40930, v40931, v40932, 0, v40928, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) -> f_1765(v40922, v40923, v40924, v40925, v40926, 1, v40934, v40929, v40930, v40931, v40932, 0, v40928, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) :|: TRUE
f_1765(v40922, v40923, v40924, v40925, v40926, 1, v40934, v40929, v40930, v40931, v40932, 0, v40928, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) -> f_1773(v40922, v40923, v40924, v40925, v40926, 1, v40934, v40929, v40930, v40931, v40932, 0, v40928, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) :|: 0 = 0
f_1773(v40922, v40923, v40924, v40925, v40926, 1, v40934, v40929, v40930, v40931, v40932, 0, v40928, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) -> f_1781(v40922, v40923, v40924, v40925, v40926, 1, v40934, v40929, v40930, v40931, v40932, 0, v40928, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) :|: 0 = 0
f_1781(v40922, v40923, v40924, v40925, v40926, 1, v40934, v40929, v40930, v40931, v40932, 0, v40928, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) -> f_1787(v40922, v40923, v40924, v40925, v40926, 1, v40934, v40929, v40930, v40931, v40932, 0, v40928, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) :|: 0 = 0
f_1787(v40922, v40923, v40924, v40925, v40926, 1, v40934, v40929, v40930, v40931, v40932, 0, v40928, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) -> f_1793(v40922, v40923, v40924, v40925, v40926, 1, v40934, v40929, v40930, v40931, v40932, 0, v40928, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) :|: TRUE
f_1793(v40922, v40923, v40924, v40925, v40926, 1, v40934, v40929, v40930, v40931, v40932, 0, v40928, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) -> f_1798(v40922, v40923, v40924, v40925, v40926, 1, v40934, v40929, v40930, v40931, v40932, 0, v47956, v40928, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) :|: TRUE
f_1798(v40922, v40923, v40924, v40925, v40926, 1, v40934, v40929, v40930, v40931, v40932, 0, v47956, v40928, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) -> f_1805(v40922, v40923, v40924, v40925, v40926, 1, v40934, v40929, v40930, v40931, v40932, 0, v40928, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) :|: v47956 = 0
f_1805(v40922, v40923, v40924, v40925, v40926, 1, v40934, v40929, v40930, v40931, v40932, 0, v40928, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) -> f_1813(v40922, v40923, v40924, v40925, v40926, 1, v40934, v40929, v40930, v40931, v40932, 0, v40928, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) :|: 0 = 0
f_1813(v40922, v40923, v40924, v40925, v40926, 1, v40934, v40929, v40930, v40931, v40932, 0, v40928, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) -> f_1822(v40922, v40923, v40924, v40925, v40926, 1, v40934, v40929, v40930, v40931, v40932, 0, v40928, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) :|: TRUE
f_1822(v40922, v40923, v40924, v40925, v40926, 1, v40934, v40929, v40930, v40931, v40932, 0, v40928, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) -> f_1832(v40922, v40923, v40924, v40925, v40926, 1, v40934, v40929, v40930, v40931, v40932, 0, v40928, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) :|: 0 = 0
f_1832(v40922, v40923, v40924, v40925, v40926, 1, v40934, v40929, v40930, v40931, v40932, 0, v40928, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) -> f_1842(v40922, v40923, v40924, v40925, v40926, 1, v40934, v40929, v40930, v40931, v40932, 0, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) :|: 0 = 0
f_1842(v40922, v40923, v40924, v40925, v40926, 1, v40934, v40929, v40930, v40931, v40932, 0, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) -> f_1852(v40922, v40923, v40924, v40925, v40926, 1, v40934, v40929, v40930, v40931, v40932, 0, v51733, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) :|: 1 + v51733 = v40934 && 0 <= v51733
f_1852(v40922, v40923, v40924, v40925, v40926, 1, v40934, v40929, v40930, v40931, v40932, 0, v51733, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) -> f_1861(v40922, v40923, v40924, v40925, v40926, 1, v40934, v40929, v40930, v40931, v40932, 0, v51733, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) :|: 0 = 0
f_1861(v40922, v40923, v40924, v40925, v40926, 1, v40934, v40929, v40930, v40931, v40932, 0, v51733, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) -> f_1869(v40922, v40923, v40924, v40925, v40926, 1, v40934, v40929, v40930, v40931, v40932, 0, v51733, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) :|: TRUE
f_1869(v40922, v40923, v40924, v40925, v40926, 1, v40934, v40929, v40930, v40931, v40932, 0, v51733, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) -> f_1877(v40922, v40923, v40924, v40925, v40926, 1, v40934, v40929, v40930, v40931, v40932, 0, v51733, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) :|: TRUE
f_1877(v40922, v40923, v40924, v40925, v40926, 1, v40934, v40929, v40930, v40931, v40932, 0, v51733, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) -> f_1679(v40922, v40923, v40924, v40925, v40926, 1, v40934, v40929, v40930, v40931, v40932, 0, v51733, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) :|: TRUE
f_1679(v40922, v40923, v40924, v40925, v40926, 1, v40928, v40929, v40930, v40931, v40932, 0, v40934, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) -> f_1685(v40922, v40923, v40924, v40925, v40926, 1, v40928, v40929, v40930, v40931, v40932, 0, v40934, v40935, v40936, v40937, v40938, v40939, 3, 7, 2, 4, 8) :|: TRUE
Combined rules. Obtained 1 rulesP rules:
f_1685(v40922:0, v40923:0, v40924:0, v40925:0, v40926:0, 1, v40928:0, v40929:0, v40930:0, v40931:0, v40932:0, 0, 1 + v51733:0, v40935:0, v40936:0, v40937:0, v40938:0, v40939:0, 3, 7, 2, 4, 8) -> f_1685(v40922:0, v40923:0, v40924:0, v40925:0, v40926:0, 1, 1 + v51733:0, v40929:0, v40930:0, v40931:0, v40932:0, 0, v51733:0, v40935:0, v40936:0, v40937:0, v40938:0, v40939:0, 3, 7, 2, 4, 8) :|: v40928:0 > 1 && v51733:0 > -1 && v40931:0 > 1 && v40930:0 > 2
Filtered unneeded arguments:
   f_1685(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23) -> f_1685(x7, x9, x10, x13)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1685(v40928:0, v40930:0, v40931:0, sum~cons_1~v51733:0) -> f_1685(1 + v51733:0, v40930:0, v40931:0, v51733:0) :|: v51733:0 > -1 && v40928:0 > 1 && v40930:0 > 2 && v40931:0 > 1 && sum~cons_1~v51733:0 = 1 + v51733:0

----------------------------------------

(41)
Obligation:
Rules:
f_1685(v40928:0, v40930:0, v40931:0, sum~cons_1~v51733:0) -> f_1685(1 + v51733:0, v40930:0, v40931:0, v51733:0) :|: v51733:0 > -1 && v40928:0 > 1 && v40930:0 > 2 && v40931:0 > 1 && sum~cons_1~v51733:0 = 1 + v51733:0

----------------------------------------

(42) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(43)
Obligation:
Rules:
f_1685(v40928:0:0, v40930:0:0, v40931:0:0, sum~cons_1~v51733:0:0) -> f_1685(1 + v51733:0:0, v40930:0:0, v40931:0:0, v51733:0:0) :|: v40930:0:0 > 2 && v40931:0:0 > 1 && v40928:0:0 > 1 && v51733:0:0 > -1 && sum~cons_1~v51733:0:0 = 1 + v51733:0:0

----------------------------------------

(44) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_1685 ] = f_1685_4

The following rules are decreasing:
f_1685(v40928:0:0, v40930:0:0, v40931:0:0, sum~cons_1~v51733:0:0) -> f_1685(1 + v51733:0:0, v40930:0:0, v40931:0:0, v51733:0:0) :|: v40930:0:0 > 2 && v40931:0:0 > 1 && v40928:0:0 > 1 && v51733:0:0 > -1 && sum~cons_1~v51733:0:0 = 1 + v51733:0:0

The following rules are bounded:
f_1685(v40928:0:0, v40930:0:0, v40931:0:0, sum~cons_1~v51733:0:0) -> f_1685(1 + v51733:0:0, v40930:0:0, v40931:0:0, v51733:0:0) :|: v40930:0:0 > 2 && v40931:0:0 > 1 && v40928:0:0 > 1 && v51733:0:0 > -1 && sum~cons_1~v51733:0:0 = 1 + v51733:0:0


----------------------------------------

(45)
YES

----------------------------------------

(46)
Obligation:
SCC
----------------------------------------

(47) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 31 rulesP rules:
f_1546(v33256, v33257, v33258, v33259, v33260, v33261, 1, v33263, 0, v33265, v33266, v33267, v33268, v33269, v33270, v33271, v33272, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) -> f_1555(v33256, v33257, v33258, v33259, v33260, v33261, 1, v33263, 0, v33265, v33266, v33267, v33268, v33269, v33270, v33271, v33272, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) :|: TRUE
f_1555(v33256, v33257, v33258, v33259, v33260, v33261, 1, v33263, 0, v33265, v33266, v33267, v33268, v33269, v33270, v33271, v33272, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) -> f_1564(v33256, v33257, v33258, v33259, v33260, v33261, 1, v33263, 0, v33265, v33266, v33267, v33268, v33269, v33270, v33271, v33272, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) :|: 0 = 0
f_1564(v33256, v33257, v33258, v33259, v33260, v33261, 1, v33263, 0, v33265, v33266, v33267, v33268, v33269, v33270, v33271, v33272, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) -> f_1572(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33263, v33261, 0, v33265, v33266, v33267, v33268, v33269, v33270, v33272, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) :|: 0 = 0
f_1572(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33263, v33261, 0, v33265, v33266, v33267, v33268, v33269, v33270, v33272, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) -> f_1578(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33263, v33261, 0, v33265, v33266, v33267, v33268, v33269, v33270, v33272, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) :|: 0 < v33271 && 2 <= v33261 && 2 <= v33269
f_1578(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33263, v33261, 0, v33265, v33266, v33267, v33268, v33269, v33270, v33272, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) -> f_1585(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33263, v33261, 0, v33265, v33266, v33267, v33268, v33269, v33270, v33272, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) :|: 0 = 0
f_1585(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33263, v33261, 0, v33265, v33266, v33267, v33268, v33269, v33270, v33272, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) -> f_1591(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33263, v33261, 0, v33265, v33266, v33267, v33268, v33269, v33270, v33272, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) :|: TRUE
f_1591(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33263, v33261, 0, v33265, v33266, v33267, v33268, v33269, v33270, v33272, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) -> f_1598(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33263, v33261, 0, v33265, v33266, v33267, v33268, v33269, v33270, v33272, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) :|: 0 = 0
f_1598(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33263, v33261, 0, v33265, v33266, v33267, v33268, v33269, v33270, v33272, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) -> f_1606(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33272, v33261, 0, v33265, v33266, v33267, v33268, v33269, v33270, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) :|: 0 = 0
f_1606(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33272, v33261, 0, v33265, v33266, v33267, v33268, v33269, v33270, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) -> f_1615(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33272, v33261, 0, v33265, v33266, v33267, v33268, v33269, v33270, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) :|: 0 < v33272
f_1615(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33272, v33261, 0, v33265, v33266, v33267, v33268, v33269, v33270, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) -> f_1625(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33272, v33261, 0, v33265, v33266, v33267, v33268, v33269, v33270, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) :|: 0 = 0
f_1625(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33272, v33261, 0, v33265, v33266, v33267, v33268, v33269, v33270, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) -> f_1635(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33272, v33261, 0, v33265, v33266, v33267, v33268, v33269, v33270, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) :|: 0 = 0
f_1635(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33272, v33261, 0, v33265, v33266, v33267, v33268, v33269, v33270, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) -> f_1645(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33272, v33261, 0, v33265, v33266, v33267, v33268, v33269, v33270, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) :|: TRUE
f_1645(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33272, v33261, 0, v33265, v33266, v33267, v33268, v33269, v33270, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) -> f_1655(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33272, v33261, 0, v33265, v33266, v33267, v33268, v33269, v33270, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) :|: 0 = 0
f_1655(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33272, v33261, 0, v33265, v33266, v33267, v33268, v33269, v33270, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) -> f_1664(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33272, 0, v33265, v33266, v33267, v33268, v33269, v33270, v33261, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) :|: 0 = 0
f_1664(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33272, 0, v33265, v33266, v33267, v33268, v33269, v33270, v33261, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) -> f_1672(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33272, 0, v33265, v33266, v33267, v33268, v33269, v33270, v33261, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) :|: 0 = 0
f_1672(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33272, 0, v33265, v33266, v33267, v33268, v33269, v33270, v33261, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) -> f_1680(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33272, 0, v33265, v33266, v33267, v33268, v33269, v33270, v33261, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) :|: TRUE
f_1680(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33272, 0, v33265, v33266, v33267, v33268, v33269, v33270, v33261, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) -> f_1686(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33272, 0, v33265, v33266, v33267, v33268, v33269, v41246, v33261, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) :|: TRUE
f_1686(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33272, 0, v33265, v33266, v33267, v33268, v33269, v41246, v33261, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) -> f_1693(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33272, 0, v33265, v33266, v33267, v33268, v33269, v41246, v33261, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) :|: v41246 != 0
f_1693(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33272, 0, v33265, v33266, v33267, v33268, v33269, v41246, v33261, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) -> f_1700(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33272, 0, v33265, v33266, v33267, v33268, v33269, v41246, v33261, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) :|: 0 = 0
f_1700(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33272, 0, v33265, v33266, v33267, v33268, v33269, v41246, v33261, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) -> f_1708(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33272, 0, v33265, v33266, v33267, v33268, v33269, v41246, v33261, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) :|: TRUE
f_1708(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33272, 0, v33265, v33266, v33267, v33268, v33269, v41246, v33261, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) -> f_1714(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33272, 0, v33265, v33266, v33267, v33268, v33269, v41246, v33261, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) :|: 0 = 0
f_1714(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33272, 0, v33265, v33266, v33267, v33268, v33269, v41246, v33261, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) -> f_1720(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33272, 0, v33265, v33266, v33267, v33268, v33269, v41246, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) :|: 0 = 0
f_1720(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33272, 0, v33265, v33266, v33267, v33268, v33269, v41246, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) -> f_1727(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33272, 0, v33265, v33266, v33267, v33268, v33269, v41246, v42848, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) :|: 1 + v42848 = v33271 && 0 <= v42848
f_1727(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33272, 0, v33265, v33266, v33267, v33268, v33269, v41246, v42848, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) -> f_1734(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33272, 0, v33265, v33266, v33267, v33268, v33269, v41246, v42848, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) :|: 0 = 0
f_1734(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33272, 0, v33265, v33266, v33267, v33268, v33269, v41246, v42848, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) -> f_1742(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33272, 0, v33265, v33266, v33267, v33268, v33269, v41246, v42848, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) :|: TRUE
f_1742(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33272, 0, v33265, v33266, v33267, v33268, v33269, v41246, v42848, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) -> f_1751(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33272, 0, v33265, v33266, v33267, v33268, v33269, v41246, v42848, v43753, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) :|: TRUE
f_1751(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33272, 0, v33265, v33266, v33267, v33268, v33269, v41246, v42848, v43753, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) -> f_1759(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33272, 0, v33265, v33266, v33267, v33268, v33269, v41246, v42848, v43753, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) :|: 0 = 0
f_1759(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33272, 0, v33265, v33266, v33267, v33268, v33269, v41246, v42848, v43753, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) -> f_1767(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33272, 0, v33265, v33266, v33267, v33268, v33269, v41246, v42848, v43753, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) :|: TRUE
f_1767(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33272, 0, v33265, v33266, v33267, v33268, v33269, v41246, v42848, v43753, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) -> f_1775(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33272, 0, v33265, v33266, v33267, v33268, v33269, v41246, v42848, v43753, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) :|: TRUE
f_1775(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33272, 0, v33265, v33266, v33267, v33268, v33269, v41246, v42848, v43753, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) -> f_1537(v33256, v33257, v33258, v33259, v33260, v33271, 1, v33272, 0, v33265, v33266, v33267, v33268, v33269, v41246, v42848, v43753, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) :|: TRUE
f_1537(v33256, v33257, v33258, v33259, v33260, v33261, 1, v33263, 0, v33265, v33266, v33267, v33268, v33269, v33270, v33271, v33272, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) -> f_1546(v33256, v33257, v33258, v33259, v33260, v33261, 1, v33263, 0, v33265, v33266, v33267, v33268, v33269, v33270, v33271, v33272, v33273, v33274, v33275, v33276, v33277, 3, 7, 2, 4, 8) :|: TRUE
Combined rules. Obtained 2 rulesP rules:
f_1546(v33256:0, v33257:0, v33258:0, v33259:0, v33260:0, v33261:0, 1, v33263:0, 0, v33265:0, v33266:0, v33267:0, v33268:0, v33269:0, v33270:0, 1 + v42848:0, v33272:0, v33273:0, v33274:0, v33275:0, v33276:0, v33277:0, 3, 7, 2, 4, 8) -> f_1546(v33256:0, v33257:0, v33258:0, v33259:0, v33260:0, 1 + v42848:0, 1, v33272:0, 0, v33265:0, v33266:0, v33267:0, v33268:0, v33269:0, v41246:0, v42848:0, v43753:0, v33273:0, v33274:0, v33275:0, v33276:0, v33277:0, 3, 7, 2, 4, 8) :|: v33261:0 > 1 && v42848:0 > -1 && v33269:0 > 1 && v33272:0 > 0 && v41246:0 < 0
f_1546(v33256:0, v33257:0, v33258:0, v33259:0, v33260:0, v33261:0, 1, v33263:0, 0, v33265:0, v33266:0, v33267:0, v33268:0, v33269:0, v33270:0, 1 + v42848:0, v33272:0, v33273:0, v33274:0, v33275:0, v33276:0, v33277:0, 3, 7, 2, 4, 8) -> f_1546(v33256:0, v33257:0, v33258:0, v33259:0, v33260:0, 1 + v42848:0, 1, v33272:0, 0, v33265:0, v33266:0, v33267:0, v33268:0, v33269:0, v41246:0, v42848:0, v43753:0, v33273:0, v33274:0, v33275:0, v33276:0, v33277:0, 3, 7, 2, 4, 8) :|: v33261:0 > 1 && v42848:0 > -1 && v33269:0 > 1 && v33272:0 > 0 && v41246:0 > 0
Filtered unneeded arguments:
   f_1546(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27) -> f_1546(x6, x14, x16, x17)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1546(v33261:0, v33269:0, sum~cons_1~v42848:0, v33272:0) -> f_1546(1 + v42848:0, v33269:0, v42848:0, v43753:0) :|: v42848:0 > -1 && v33261:0 > 1 && v33272:0 > 0 && v33269:0 > 1 && sum~cons_1~v42848:0 = 1 + v42848:0

----------------------------------------

(48)
Obligation:
Rules:
f_1546(v33261:0, v33269:0, sum~cons_1~v42848:0, v33272:0) -> f_1546(1 + v42848:0, v33269:0, v42848:0, v43753:0) :|: v42848:0 > -1 && v33261:0 > 1 && v33272:0 > 0 && v33269:0 > 1 && sum~cons_1~v42848:0 = 1 + v42848:0

----------------------------------------

(49) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(50)
Obligation:
Rules:
f_1546(v33261:0:0, v33269:0:0, sum~cons_1~v42848:0:0, v33272:0:0) -> f_1546(1 + v42848:0:0, v33269:0:0, v42848:0:0, v43753:0:0) :|: v33272:0:0 > 0 && v33269:0:0 > 1 && v33261:0:0 > 1 && v42848:0:0 > -1 && sum~cons_1~v42848:0:0 = 1 + v42848:0:0

----------------------------------------

(51) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_1546 ] = f_1546_3

The following rules are decreasing:
f_1546(v33261:0:0, v33269:0:0, sum~cons_1~v42848:0:0, v33272:0:0) -> f_1546(1 + v42848:0:0, v33269:0:0, v42848:0:0, v43753:0:0) :|: v33272:0:0 > 0 && v33269:0:0 > 1 && v33261:0:0 > 1 && v42848:0:0 > -1 && sum~cons_1~v42848:0:0 = 1 + v42848:0:0

The following rules are bounded:
f_1546(v33261:0:0, v33269:0:0, sum~cons_1~v42848:0:0, v33272:0:0) -> f_1546(1 + v42848:0:0, v33269:0:0, v42848:0:0, v43753:0:0) :|: v33272:0:0 > 0 && v33269:0:0 > 1 && v33261:0:0 > 1 && v42848:0:0 > -1 && sum~cons_1~v42848:0:0 = 1 + v42848:0:0


----------------------------------------

(52)
YES

----------------------------------------

(53)
Obligation:
SCC
----------------------------------------

(54) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 27 rulesP rules:
f_1461(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30183, 0, v30185, v30186, v30187, v30188, v30189, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) -> f_1469(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30183, 0, v30185, v30186, v30187, v30188, v30189, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) :|: TRUE
f_1469(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30183, 0, v30185, v30186, v30187, v30188, v30189, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) -> f_1475(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30183, 0, v30185, v30186, v30187, v30188, v30189, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) :|: 0 = 0
f_1475(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30183, 0, v30185, v30186, v30187, v30188, v30189, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) -> f_1482(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30183, 0, v30185, v30186, v30187, v30188, v30189, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) :|: 0 = 0
f_1482(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30183, 0, v30185, v30186, v30187, v30188, v30189, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) -> f_1489(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30183, 0, v30185, v30186, v30187, v30188, v30189, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) :|: 0 = 0
f_1489(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30183, 0, v30185, v30186, v30187, v30188, v30189, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) -> f_1496(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30183, 0, v30185, v30186, v30187, v30188, v30189, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) :|: TRUE
f_1496(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30183, 0, v30185, v30186, v30187, v30188, v30189, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) -> f_1503(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30183, 0, v30185, v30186, v30187, v30188, v30189, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) :|: 0 = 0
f_1503(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30183, 0, v30185, v30186, v30187, v30188, v30189, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) -> f_1511(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30189, 0, v30185, v30186, v30187, v30188, v30183, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) :|: 0 = 0
f_1511(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30189, 0, v30185, v30186, v30187, v30188, v30183, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) -> f_1519(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30189, 0, v30185, v30186, v30187, v30188, v30183, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) :|: 0 < v30189 && 2 <= v30183 && 2 <= v30188 && 3 <= v30187
f_1519(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30189, 0, v30185, v30186, v30187, v30188, v30183, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) -> f_1528(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30189, 0, v30185, v30186, v30187, v30188, v30183, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) :|: 0 = 0
f_1528(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30189, 0, v30185, v30186, v30187, v30188, v30183, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) -> f_1538(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30189, 0, v30185, v30186, v30187, v30188, v30183, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) :|: 0 = 0
f_1538(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30189, 0, v30185, v30186, v30187, v30188, v30183, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) -> f_1547(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30189, 0, v30185, v30186, v30187, v30188, v30183, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) :|: TRUE
f_1547(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30189, 0, v30185, v30186, v30187, v30188, v30183, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) -> f_1556(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30189, 0, v30185, v30186, v30187, v30188, v30183, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) :|: 0 = 0
f_1556(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30189, 0, v30185, v30186, v30187, v30188, v30183, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) -> f_1565(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30189, 0, v30185, v30186, v30187, v30188, v30183, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) :|: 0 = 0
f_1565(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30189, 0, v30185, v30186, v30187, v30188, v30183, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) -> f_1573(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30189, 0, v30185, v30186, v30187, v30188, v30183, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) :|: 0 = 0
f_1573(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30189, 0, v30185, v30186, v30187, v30188, v30183, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) -> f_1580(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30189, 0, v30185, v30186, v30187, v30188, v30183, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) :|: TRUE
f_1580(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30189, 0, v30185, v30186, v30187, v30188, v30183, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) -> f_1587(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30189, 0, v30185, v30186, v30187, v30188, v36868, v30183, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) :|: TRUE
f_1587(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30189, 0, v30185, v30186, v30187, v30188, v36868, v30183, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) -> f_1594(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30189, 0, v30185, v30186, v30187, v30188, v30183, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) :|: v36868 = 0
f_1594(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30189, 0, v30185, v30186, v30187, v30188, v30183, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) -> f_1601(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30189, 0, v30185, v30186, v30187, v30188, v30183, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) :|: 0 = 0
f_1601(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30189, 0, v30185, v30186, v30187, v30188, v30183, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) -> f_1609(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30189, 0, v30185, v30186, v30187, v30188, v30183, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) :|: TRUE
f_1609(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30189, 0, v30185, v30186, v30187, v30188, v30183, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) -> f_1618(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30189, 0, v30185, v30186, v30187, v30188, v30183, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) :|: 0 = 0
f_1618(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30189, 0, v30185, v30186, v30187, v30188, v30183, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) -> f_1628(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30189, 0, v30185, v30186, v30187, v30188, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) :|: 0 = 0
f_1628(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30189, 0, v30185, v30186, v30187, v30188, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) -> f_1638(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30189, 0, v30185, v30186, v30187, v30188, v39567, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) :|: 1 + v39567 = v30189 && 0 <= v39567
f_1638(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30189, 0, v30185, v30186, v30187, v30188, v39567, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) -> f_1648(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30189, 0, v30185, v30186, v30187, v30188, v39567, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) :|: 0 = 0
f_1648(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30189, 0, v30185, v30186, v30187, v30188, v39567, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) -> f_1658(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30189, 0, v30185, v30186, v30187, v30188, v39567, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) :|: TRUE
f_1658(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30189, 0, v30185, v30186, v30187, v30188, v39567, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) -> f_1666(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30189, 0, v30185, v30186, v30187, v30188, v39567, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) :|: TRUE
f_1666(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30189, 0, v30185, v30186, v30187, v30188, v39567, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) -> f_1454(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30189, 0, v30185, v30186, v30187, v30188, v39567, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) :|: TRUE
f_1454(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30183, 0, v30185, v30186, v30187, v30188, v30189, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) -> f_1461(v30176, v30177, v30178, v30179, v30180, v30181, 1, v30183, 0, v30185, v30186, v30187, v30188, v30189, v30190, v30191, v30192, v30193, v30194, 3, 7, 2, 4, 8) :|: TRUE
Combined rules. Obtained 1 rulesP rules:
f_1461(v30176:0, v30177:0, v30178:0, v30179:0, v30180:0, v30181:0, 1, v30183:0, 0, v30185:0, v30186:0, v30187:0, v30188:0, 1 + v39567:0, v30190:0, v30191:0, v30192:0, v30193:0, v30194:0, 3, 7, 2, 4, 8) -> f_1461(v30176:0, v30177:0, v30178:0, v30179:0, v30180:0, v30181:0, 1, 1 + v39567:0, 0, v30185:0, v30186:0, v30187:0, v30188:0, v39567:0, v30190:0, v30191:0, v30192:0, v30193:0, v30194:0, 3, 7, 2, 4, 8) :|: v30183:0 > 1 && v39567:0 > -1 && v30188:0 > 1 && v30187:0 > 2
Filtered unneeded arguments:
   f_1461(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24) -> f_1461(x8, x12, x13, x14)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1461(v30183:0, v30187:0, v30188:0, sum~cons_1~v39567:0) -> f_1461(1 + v39567:0, v30187:0, v30188:0, v39567:0) :|: v39567:0 > -1 && v30183:0 > 1 && v30187:0 > 2 && v30188:0 > 1 && sum~cons_1~v39567:0 = 1 + v39567:0

----------------------------------------

(55)
Obligation:
Rules:
f_1461(v30183:0, v30187:0, v30188:0, sum~cons_1~v39567:0) -> f_1461(1 + v39567:0, v30187:0, v30188:0, v39567:0) :|: v39567:0 > -1 && v30183:0 > 1 && v30187:0 > 2 && v30188:0 > 1 && sum~cons_1~v39567:0 = 1 + v39567:0

----------------------------------------

(56) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(57)
Obligation:
Rules:
f_1461(v30183:0:0, v30187:0:0, v30188:0:0, sum~cons_1~v39567:0:0) -> f_1461(1 + v39567:0:0, v30187:0:0, v30188:0:0, v39567:0:0) :|: v30187:0:0 > 2 && v30188:0:0 > 1 && v30183:0:0 > 1 && v39567:0:0 > -1 && sum~cons_1~v39567:0:0 = 1 + v39567:0:0

----------------------------------------

(58) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_1461 ] = f_1461_4

The following rules are decreasing:
f_1461(v30183:0:0, v30187:0:0, v30188:0:0, sum~cons_1~v39567:0:0) -> f_1461(1 + v39567:0:0, v30187:0:0, v30188:0:0, v39567:0:0) :|: v30187:0:0 > 2 && v30188:0:0 > 1 && v30183:0:0 > 1 && v39567:0:0 > -1 && sum~cons_1~v39567:0:0 = 1 + v39567:0:0

The following rules are bounded:
f_1461(v30183:0:0, v30187:0:0, v30188:0:0, sum~cons_1~v39567:0:0) -> f_1461(1 + v39567:0:0, v30187:0:0, v30188:0:0, v39567:0:0) :|: v30187:0:0 > 2 && v30188:0:0 > 1 && v30183:0:0 > 1 && v39567:0:0 > -1 && sum~cons_1~v39567:0:0 = 1 + v39567:0:0


----------------------------------------

(59)
YES

----------------------------------------

(60)
Obligation:
SCC
----------------------------------------

(61) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 31 rulesP rules:
f_1323(v23917, v23918, v23919, v23920, v23921, v23922, 1, v23924, 0, v23926, v23927, v23928, v23929, v23930, v23931, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) -> f_1333(v23917, v23918, v23919, v23920, v23921, v23922, 1, v23924, 0, v23926, v23927, v23928, v23929, v23930, v23931, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) :|: TRUE
f_1333(v23917, v23918, v23919, v23920, v23921, v23922, 1, v23924, 0, v23926, v23927, v23928, v23929, v23930, v23931, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) -> f_1343(v23917, v23918, v23919, v23920, v23921, v23922, 1, v23924, 0, v23926, v23927, v23928, v23929, v23930, v23931, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) :|: 0 = 0
f_1343(v23917, v23918, v23919, v23920, v23921, v23922, 1, v23924, 0, v23926, v23927, v23928, v23929, v23930, v23931, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) -> f_1350(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23924, v23922, 0, v23926, v23927, v23928, v23929, v23931, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) :|: 0 = 0
f_1350(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23924, v23922, 0, v23926, v23927, v23928, v23929, v23931, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) -> f_1357(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23924, v23922, 0, v23926, v23927, v23928, v23929, v23931, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) :|: 0 < v23930 && 2 <= v23922 && 2 <= v23928
f_1357(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23924, v23922, 0, v23926, v23927, v23928, v23929, v23931, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) -> f_1364(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23924, v23922, 0, v23926, v23927, v23928, v23929, v23931, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) :|: 0 = 0
f_1364(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23924, v23922, 0, v23926, v23927, v23928, v23929, v23931, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) -> f_1371(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23924, v23922, 0, v23926, v23927, v23928, v23929, v23931, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) :|: TRUE
f_1371(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23924, v23922, 0, v23926, v23927, v23928, v23929, v23931, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) -> f_1380(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23924, v23922, 0, v23926, v23927, v23928, v23929, v23931, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) :|: 0 = 0
f_1380(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23924, v23922, 0, v23926, v23927, v23928, v23929, v23931, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) -> f_1389(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23931, v23922, 0, v23926, v23927, v23928, v23929, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) :|: 0 = 0
f_1389(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23931, v23922, 0, v23926, v23927, v23928, v23929, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) -> f_1399(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23931, v23922, 0, v23926, v23927, v23928, v23929, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) :|: 0 < v23931
f_1399(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23931, v23922, 0, v23926, v23927, v23928, v23929, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) -> f_1409(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23931, v23922, 0, v23926, v23927, v23928, v23929, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) :|: 0 = 0
f_1409(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23931, v23922, 0, v23926, v23927, v23928, v23929, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) -> f_1418(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23931, v23922, 0, v23926, v23927, v23928, v23929, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) :|: 0 = 0
f_1418(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23931, v23922, 0, v23926, v23927, v23928, v23929, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) -> f_1427(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23931, v23922, 0, v23926, v23927, v23928, v23929, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) :|: TRUE
f_1427(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23931, v23922, 0, v23926, v23927, v23928, v23929, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) -> f_1436(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23931, v23922, 0, v23926, v23927, v23928, v23929, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) :|: 0 = 0
f_1436(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23931, v23922, 0, v23926, v23927, v23928, v23929, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) -> f_1445(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23931, 0, v23926, v23927, v23928, v23929, v23922, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) :|: 0 = 0
f_1445(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23931, 0, v23926, v23927, v23928, v23929, v23922, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) -> f_1455(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23931, 0, v23926, v23927, v23928, v23929, v23922, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) :|: 0 = 0
f_1455(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23931, 0, v23926, v23927, v23928, v23929, v23922, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) -> f_1462(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23931, 0, v23926, v23927, v23928, v23929, v23922, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) :|: TRUE
f_1462(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23931, 0, v23926, v23927, v23928, v23929, v23922, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) -> f_1470(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23931, 0, v23926, v23927, v23928, v30882, v23922, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) :|: TRUE
f_1470(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23931, 0, v23926, v23927, v23928, v30882, v23922, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) -> f_1476(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23931, 0, v23926, v23927, v23928, v30882, v23922, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) :|: v30882 != 0
f_1476(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23931, 0, v23926, v23927, v23928, v30882, v23922, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) -> f_1483(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23931, 0, v23926, v23927, v23928, v30882, v23922, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) :|: 0 = 0
f_1483(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23931, 0, v23926, v23927, v23928, v30882, v23922, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) -> f_1490(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23931, 0, v23926, v23927, v23928, v30882, v23922, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) :|: TRUE
f_1490(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23931, 0, v23926, v23927, v23928, v30882, v23922, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) -> f_1497(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23931, 0, v23926, v23927, v23928, v30882, v23922, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) :|: 0 = 0
f_1497(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23931, 0, v23926, v23927, v23928, v30882, v23922, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) -> f_1504(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23931, 0, v23926, v23927, v23928, v30882, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) :|: 0 = 0
f_1504(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23931, 0, v23926, v23927, v23928, v30882, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) -> f_1512(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23931, 0, v23926, v23927, v23928, v30882, v32181, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) :|: 1 + v32181 = v23930 && 0 <= v32181
f_1512(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23931, 0, v23926, v23927, v23928, v30882, v32181, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) -> f_1521(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23931, 0, v23926, v23927, v23928, v30882, v32181, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) :|: 0 = 0
f_1521(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23931, 0, v23926, v23927, v23928, v30882, v32181, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) -> f_1530(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23931, 0, v23926, v23927, v23928, v30882, v32181, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) :|: TRUE
f_1530(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23931, 0, v23926, v23927, v23928, v30882, v32181, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) -> f_1540(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23931, 0, v23926, v23927, v23928, v30882, v32181, v33821, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) :|: TRUE
f_1540(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23931, 0, v23926, v23927, v23928, v30882, v32181, v33821, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) -> f_1549(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23931, 0, v23926, v23927, v23928, v30882, v32181, v33821, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) :|: 0 = 0
f_1549(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23931, 0, v23926, v23927, v23928, v30882, v32181, v33821, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) -> f_1558(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23931, 0, v23926, v23927, v23928, v30882, v32181, v33821, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) :|: TRUE
f_1558(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23931, 0, v23926, v23927, v23928, v30882, v32181, v33821, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) -> f_1566(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23931, 0, v23926, v23927, v23928, v30882, v32181, v33821, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) :|: TRUE
f_1566(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23931, 0, v23926, v23927, v23928, v30882, v32181, v33821, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) -> f_1314(v23917, v23918, v23919, v23920, v23921, v23930, 1, v23931, 0, v23926, v23927, v23928, v30882, v32181, v33821, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) :|: TRUE
f_1314(v23917, v23918, v23919, v23920, v23921, v23922, 1, v23924, 0, v23926, v23927, v23928, v23929, v23930, v23931, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) -> f_1323(v23917, v23918, v23919, v23920, v23921, v23922, 1, v23924, 0, v23926, v23927, v23928, v23929, v23930, v23931, v23932, v23933, v23934, v23935, v23936, 3, 7, 2, 4, 8) :|: TRUE
Combined rules. Obtained 2 rulesP rules:
f_1323(v23917:0, v23918:0, v23919:0, v23920:0, v23921:0, v23922:0, 1, v23924:0, 0, v23926:0, v23927:0, v23928:0, v23929:0, 1 + v32181:0, v23931:0, v23932:0, v23933:0, v23934:0, v23935:0, v23936:0, 3, 7, 2, 4, 8) -> f_1323(v23917:0, v23918:0, v23919:0, v23920:0, v23921:0, 1 + v32181:0, 1, v23931:0, 0, v23926:0, v23927:0, v23928:0, v30882:0, v32181:0, v33821:0, v23932:0, v23933:0, v23934:0, v23935:0, v23936:0, 3, 7, 2, 4, 8) :|: v23922:0 > 1 && v32181:0 > -1 && v23928:0 > 1 && v23931:0 > 0 && v30882:0 < 0
f_1323(v23917:0, v23918:0, v23919:0, v23920:0, v23921:0, v23922:0, 1, v23924:0, 0, v23926:0, v23927:0, v23928:0, v23929:0, 1 + v32181:0, v23931:0, v23932:0, v23933:0, v23934:0, v23935:0, v23936:0, 3, 7, 2, 4, 8) -> f_1323(v23917:0, v23918:0, v23919:0, v23920:0, v23921:0, 1 + v32181:0, 1, v23931:0, 0, v23926:0, v23927:0, v23928:0, v30882:0, v32181:0, v33821:0, v23932:0, v23933:0, v23934:0, v23935:0, v23936:0, 3, 7, 2, 4, 8) :|: v23922:0 > 1 && v32181:0 > -1 && v23928:0 > 1 && v23931:0 > 0 && v30882:0 > 0
Filtered unneeded arguments:
   f_1323(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25) -> f_1323(x6, x12, x14, x15)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1323(v23922:0, v23928:0, sum~cons_1~v32181:0, v23931:0) -> f_1323(1 + v32181:0, v23928:0, v32181:0, v33821:0) :|: v32181:0 > -1 && v23922:0 > 1 && v23931:0 > 0 && v23928:0 > 1 && sum~cons_1~v32181:0 = 1 + v32181:0

----------------------------------------

(62)
Obligation:
Rules:
f_1323(v23922:0, v23928:0, sum~cons_1~v32181:0, v23931:0) -> f_1323(1 + v32181:0, v23928:0, v32181:0, v33821:0) :|: v32181:0 > -1 && v23922:0 > 1 && v23931:0 > 0 && v23928:0 > 1 && sum~cons_1~v32181:0 = 1 + v32181:0

----------------------------------------

(63) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(64)
Obligation:
Rules:
f_1323(v23922:0:0, v23928:0:0, sum~cons_1~v32181:0:0, v23931:0:0) -> f_1323(1 + v32181:0:0, v23928:0:0, v32181:0:0, v33821:0:0) :|: v23931:0:0 > 0 && v23928:0:0 > 1 && v23922:0:0 > 1 && v32181:0:0 > -1 && sum~cons_1~v32181:0:0 = 1 + v32181:0:0

----------------------------------------

(65) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_1323 ] = f_1323_3

The following rules are decreasing:
f_1323(v23922:0:0, v23928:0:0, sum~cons_1~v32181:0:0, v23931:0:0) -> f_1323(1 + v32181:0:0, v23928:0:0, v32181:0:0, v33821:0:0) :|: v23931:0:0 > 0 && v23928:0:0 > 1 && v23922:0:0 > 1 && v32181:0:0 > -1 && sum~cons_1~v32181:0:0 = 1 + v32181:0:0

The following rules are bounded:
f_1323(v23922:0:0, v23928:0:0, sum~cons_1~v32181:0:0, v23931:0:0) -> f_1323(1 + v32181:0:0, v23928:0:0, v32181:0:0, v33821:0:0) :|: v23931:0:0 > 0 && v23928:0:0 > 1 && v23922:0:0 > 1 && v32181:0:0 > -1 && sum~cons_1~v32181:0:0 = 1 + v32181:0:0


----------------------------------------

(66)
YES

----------------------------------------

(67)
Obligation:
SCC
----------------------------------------

(68) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 27 rulesP rules:
f_1219(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20125, 0, v20127, v20128, v20129, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) -> f_1232(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20125, 0, v20127, v20128, v20129, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) :|: TRUE
f_1232(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20125, 0, v20127, v20128, v20129, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) -> f_1244(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20125, 0, v20127, v20128, v20129, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) :|: 0 = 0
f_1244(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20125, 0, v20127, v20128, v20129, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) -> f_1254(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20125, 0, v20127, v20128, v20129, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) :|: 0 = 0
f_1254(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20125, 0, v20127, v20128, v20129, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) -> f_1264(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20125, 0, v20127, v20128, v20129, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) :|: 0 = 0
f_1264(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20125, 0, v20127, v20128, v20129, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) -> f_1274(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20125, 0, v20127, v20128, v20129, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) :|: TRUE
f_1274(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20125, 0, v20127, v20128, v20129, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) -> f_1282(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20125, 0, v20127, v20128, v20129, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) :|: 0 = 0
f_1282(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20125, 0, v20127, v20128, v20129, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) -> f_1290(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20129, 0, v20127, v20128, v20125, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) :|: 0 = 0
f_1290(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20129, 0, v20127, v20128, v20125, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) -> f_1297(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20129, 0, v20127, v20128, v20125, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) :|: 0 < v20129 && 2 <= v20125 && 2 <= v20128 && 3 <= v20127
f_1297(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20129, 0, v20127, v20128, v20125, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) -> f_1306(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20129, 0, v20127, v20128, v20125, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) :|: 0 = 0
f_1306(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20129, 0, v20127, v20128, v20125, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) -> f_1315(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20129, 0, v20127, v20128, v20125, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) :|: 0 = 0
f_1315(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20129, 0, v20127, v20128, v20125, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) -> f_1324(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20129, 0, v20127, v20128, v20125, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) :|: TRUE
f_1324(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20129, 0, v20127, v20128, v20125, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) -> f_1334(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20129, 0, v20127, v20128, v20125, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) :|: 0 = 0
f_1334(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20129, 0, v20127, v20128, v20125, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) -> f_1344(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20129, 0, v20127, v20128, v20125, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) :|: 0 = 0
f_1344(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20129, 0, v20127, v20128, v20125, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) -> f_1351(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20129, 0, v20127, v20128, v20125, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) :|: 0 = 0
f_1351(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20129, 0, v20127, v20128, v20125, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) -> f_1359(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20129, 0, v20127, v20128, v20125, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) :|: TRUE
f_1359(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20129, 0, v20127, v20128, v20125, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) -> f_1366(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20129, 0, v20127, v20128, v27197, v20125, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) :|: TRUE
f_1366(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20129, 0, v20127, v20128, v27197, v20125, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) -> f_1374(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20129, 0, v20127, v20128, v20125, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) :|: v27197 = 0
f_1374(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20129, 0, v20127, v20128, v20125, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) -> f_1383(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20129, 0, v20127, v20128, v20125, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) :|: 0 = 0
f_1383(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20129, 0, v20127, v20128, v20125, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) -> f_1392(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20129, 0, v20127, v20128, v20125, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) :|: TRUE
f_1392(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20129, 0, v20127, v20128, v20125, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) -> f_1402(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20129, 0, v20127, v20128, v20125, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) :|: 0 = 0
f_1402(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20129, 0, v20127, v20128, v20125, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) -> f_1412(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20129, 0, v20127, v20128, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) :|: 0 = 0
f_1412(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20129, 0, v20127, v20128, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) -> f_1421(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20129, 0, v20127, v20128, v29599, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) :|: 1 + v29599 = v20129 && 0 <= v29599
f_1421(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20129, 0, v20127, v20128, v29599, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) -> f_1430(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20129, 0, v20127, v20128, v29599, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) :|: 0 = 0
f_1430(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20129, 0, v20127, v20128, v29599, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) -> f_1439(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20129, 0, v20127, v20128, v29599, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) :|: TRUE
f_1439(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20129, 0, v20127, v20128, v29599, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) -> f_1447(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20129, 0, v20127, v20128, v29599, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) :|: TRUE
f_1447(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20129, 0, v20127, v20128, v29599, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) -> f_1204(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20129, 0, v20127, v20128, v29599, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) :|: TRUE
f_1204(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20125, 0, v20127, v20128, v20129, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) -> f_1219(v20118, v20119, v20120, v20121, v20122, v20123, 1, v20125, 0, v20127, v20128, v20129, v20130, v20131, v20132, v20133, v20134, 3, 7, 2, 4, 8) :|: TRUE
Combined rules. Obtained 1 rulesP rules:
f_1219(v20118:0, v20119:0, v20120:0, v20121:0, v20122:0, v20123:0, 1, v20125:0, 0, v20127:0, v20128:0, 1 + v29599:0, v20130:0, v20131:0, v20132:0, v20133:0, v20134:0, 3, 7, 2, 4, 8) -> f_1219(v20118:0, v20119:0, v20120:0, v20121:0, v20122:0, v20123:0, 1, 1 + v29599:0, 0, v20127:0, v20128:0, v29599:0, v20130:0, v20131:0, v20132:0, v20133:0, v20134:0, 3, 7, 2, 4, 8) :|: v20125:0 > 1 && v29599:0 > -1 && v20128:0 > 1 && v20127:0 > 2
Filtered unneeded arguments:
   f_1219(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22) -> f_1219(x8, x10, x11, x12)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_1219(v20125:0, v20127:0, v20128:0, sum~cons_1~v29599:0) -> f_1219(1 + v29599:0, v20127:0, v20128:0, v29599:0) :|: v29599:0 > -1 && v20125:0 > 1 && v20127:0 > 2 && v20128:0 > 1 && sum~cons_1~v29599:0 = 1 + v29599:0

----------------------------------------

(69)
Obligation:
Rules:
f_1219(v20125:0, v20127:0, v20128:0, sum~cons_1~v29599:0) -> f_1219(1 + v29599:0, v20127:0, v20128:0, v29599:0) :|: v29599:0 > -1 && v20125:0 > 1 && v20127:0 > 2 && v20128:0 > 1 && sum~cons_1~v29599:0 = 1 + v29599:0

----------------------------------------

(70) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(71)
Obligation:
Rules:
f_1219(v20125:0:0, v20127:0:0, v20128:0:0, sum~cons_1~v29599:0:0) -> f_1219(1 + v29599:0:0, v20127:0:0, v20128:0:0, v29599:0:0) :|: v20127:0:0 > 2 && v20128:0:0 > 1 && v20125:0:0 > 1 && v29599:0:0 > -1 && sum~cons_1~v29599:0:0 = 1 + v29599:0:0

----------------------------------------

(72) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_1219(x, x1, x2, x3)] = x3

The following rules are decreasing:
f_1219(v20125:0:0, v20127:0:0, v20128:0:0, sum~cons_1~v29599:0:0) -> f_1219(1 + v29599:0:0, v20127:0:0, v20128:0:0, v29599:0:0) :|: v20127:0:0 > 2 && v20128:0:0 > 1 && v20125:0:0 > 1 && v29599:0:0 > -1 && sum~cons_1~v29599:0:0 = 1 + v29599:0:0
The following rules are bounded:
f_1219(v20125:0:0, v20127:0:0, v20128:0:0, sum~cons_1~v29599:0:0) -> f_1219(1 + v29599:0:0, v20127:0:0, v20128:0:0, v29599:0:0) :|: v20127:0:0 > 2 && v20128:0:0 > 1 && v20125:0:0 > 1 && v29599:0:0 > -1 && sum~cons_1~v29599:0:0 = 1 + v29599:0:0

----------------------------------------

(73)
YES

----------------------------------------

(74)
Obligation:
SCC
----------------------------------------

(75) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 81 rulesP rules:
f_847(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8704, 0, v8706, v8707, v8708, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) -> f_861(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8704, 0, v8706, v8707, v8708, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) :|: TRUE
f_861(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8704, 0, v8706, v8707, v8708, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) -> f_875(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8704, 0, v8706, v8707, v8708, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) :|: 0 = 0
f_875(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8704, 0, v8706, v8707, v8708, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) -> f_885(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8704, 0, v8706, v8707, v8708, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) :|: 0 = 0
f_885(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8704, 0, v8706, v8707, v8708, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) -> f_895(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8704, 0, v8706, v8707, v8708, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) :|: 0 = 0
f_895(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8704, 0, v8706, v8707, v8708, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) -> f_905(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8704, 0, v8706, v8707, v8708, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) :|: TRUE
f_905(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8704, 0, v8706, v8707, v8708, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) -> f_915(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8704, 0, v8706, v8707, v8708, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) :|: 0 = 0
f_915(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8704, 0, v8706, v8707, v8708, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) -> f_927(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, 0, v8706, v8707, v8704, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) :|: 0 = 0
f_927(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, 0, v8706, v8707, v8704, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) -> f_939(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, 0, v8706, v8707, v8704, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) :|: 0 < v8708 && 2 <= v8704
f_939(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, 0, v8706, v8707, v8704, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) -> f_950(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, 0, v8706, v8707, v8704, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) :|: 0 = 0
f_950(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, 0, v8706, v8707, v8704, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) -> f_964(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, 0, v8706, v8707, v8704, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) :|: 0 = 0
f_964(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, 0, v8706, v8707, v8704, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) -> f_979(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, 0, v8706, v8707, v8704, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) :|: TRUE
f_979(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, 0, v8706, v8707, v8704, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) -> f_993(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, 0, v8706, v8707, v8704, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) :|: 0 = 0
f_993(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, 0, v8706, v8707, v8704, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) -> f_1008(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, 0, v8706, v8707, v8704, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) :|: 0 = 0
f_1008(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, 0, v8706, v8707, v8704, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) -> f_1022(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, 0, v8706, v8707, v8704, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) :|: 0 = 0
f_1022(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, 0, v8706, v8707, v8704, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) -> f_1035(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, 0, v8706, v8707, v8704, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) :|: TRUE
f_1035(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, 0, v8706, v8707, v8704, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) -> f_1047(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, v16124, 0, v8706, v8707, v8704, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) :|: TRUE
f_1047(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, v16124, 0, v8706, v8707, v8704, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) -> f_1059(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, v16124, 0, v8706, v8707, v8704, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) :|: v16124 != 0
f_1047(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, v16124, 0, v8706, v8707, v8704, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) -> f_1060(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, 0, v8706, v8707, v8704, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) :|: v16124 = 0
f_1059(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, v16124, 0, v8706, v8707, v8704, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) -> f_1072(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, v16124, v8706, v8707, v8704, v8709, v8710, v8711, v8712, v8713, 0, 3, 7, 2, 4, 8) :|: 0 = 0
f_1072(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, v16124, v8706, v8707, v8704, v8709, v8710, v8711, v8712, v8713, 0, 3, 7, 2, 4, 8) -> f_1086(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, v16124, v8706, v8707, v8704, v8709, v8710, v8711, v8712, v8713, 0, 3, 7, 2, 4, 8) :|: TRUE
f_1086(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, v16124, v8706, v8707, v8704, v8709, v8710, v8711, v8712, v8713, 0, 3, 7, 2, 4, 8) -> f_1099(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, v16124, v8706, v8707, v8704, v8709, v8710, v8711, v8712, v8713, 0, 3, 7, 2, 4, 8) :|: 0 = 0
f_1099(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, v16124, v8706, v8707, v8704, v8709, v8710, v8711, v8712, v8713, 0, 3, 7, 2, 4, 8) -> f_1116(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, v16124, v8707, v8704, v8709, v8710, v8711, v8712, v8713, 0, 3, 7, 2, 4, 8) :|: 0 = 0
f_1116(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, v16124, v8707, v8704, v8709, v8710, v8711, v8712, v8713, 0, 3, 7, 2, 4, 8) -> f_1133(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, v16124, v19077, v8707, v8704, v8709, v8710, v8711, v8712, v8713, 0, 3, 7, 2, 4, 8) :|: 1 + v19077 = v8702 && 0 <= v19077
f_1133(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, v16124, v19077, v8707, v8704, v8709, v8710, v8711, v8712, v8713, 0, 3, 7, 2, 4, 8) -> f_1150(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, v16124, v19077, v8707, v8704, v8709, v8710, v8711, v8712, v8713, 0, 3, 7, 2, 4, 8) :|: 0 = 0
f_1150(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, v16124, v19077, v8707, v8704, v8709, v8710, v8711, v8712, v8713, 0, 3, 7, 2, 4, 8) -> f_1165(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, v16124, v19077, v8707, v8704, v8709, v8710, v8711, v8712, v8713, 0, 3, 7, 2, 4, 8) :|: TRUE
f_1165(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, v16124, v19077, v8707, v8704, v8709, v8710, v8711, v8712, v8713, 0, 3, 7, 2, 4, 8) -> f_1180(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, v16124, v19077, v19734, v8704, v8709, v8710, v8711, v8712, v8713, 0, 3, 7, 2, 4, 8) :|: TRUE
f_1180(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, v16124, v19077, v19734, v8704, v8709, v8710, v8711, v8712, v8713, 0, 3, 7, 2, 4, 8) -> f_1195(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, v16124, v19077, v19734, v8704, v8709, v8710, v8711, v8712, v8713, 0, 3, 7, 2, 4, 8) :|: 0 = 0
f_1195(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, v16124, v19077, v19734, v8704, v8709, v8710, v8711, v8712, v8713, 0, 3, 7, 2, 4, 8) -> f_1211(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, v16124, v19077, v19734, v8704, v8709, v8710, v8711, v8712, v8713, 0, 3, 7, 2, 4, 8) :|: TRUE
f_1211(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, v16124, v19077, v19734, v8704, v8709, v8710, v8711, v8712, v8713, 0, 3, 7, 2, 4, 8) -> f_1226(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, v16124, v19077, v19734, v8704, v8709, v8710, v8711, v8712, v8713, 0, 3, 7, 2, 4, 8) :|: TRUE
f_1226(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, v16124, v19077, v19734, v8704, v8709, v8710, v8711, v8712, v8713, 0, 3, 7, 2, 4, 8) -> f_874(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, v16124, v8704, v8708, v19077, v19734, v8709, v8710, v8711, v8712, v8713, 0, 3, 7, 2, 4, 8) :|: TRUE
f_874(v9633, v9634, v9635, v9636, v9637, v9638, 1, v9640, v9641, v9642, v9643, v9644, v9645, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) -> f_884(v9633, v9634, v9635, v9636, v9637, v9638, 1, v9640, v9641, v9642, v9643, v9644, v9645, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) :|: TRUE
f_884(v9633, v9634, v9635, v9636, v9637, v9638, 1, v9640, v9641, v9642, v9643, v9644, v9645, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) -> f_894(v9633, v9634, v9635, v9636, v9637, v9638, 1, v9640, v9641, v9642, v9643, v9644, v9645, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) :|: TRUE
f_894(v9633, v9634, v9635, v9636, v9637, v9638, 1, v9640, v9641, v9642, v9643, v9644, v9645, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) -> f_904(v9633, v9634, v9635, v9636, v9637, v9638, 1, v9640, v9641, v9642, v9643, v9644, v9645, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) :|: 0 = 0
f_904(v9633, v9634, v9635, v9636, v9637, v9638, 1, v9640, v9641, v9642, v9643, v9644, v9645, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) -> f_914(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9640, v9638, v9641, v9642, v9643, v9645, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) :|: 0 = 0
f_914(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9640, v9638, v9641, v9642, v9643, v9645, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) -> f_925(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9640, v9638, v9641, v9642, v9643, v9645, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) :|: 0 < v9644 && 2 <= v9638
f_925(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9640, v9638, v9641, v9642, v9643, v9645, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) -> f_937(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9640, v9638, v9641, v9642, v9643, v9645, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) :|: 0 = 0
f_937(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9640, v9638, v9641, v9642, v9643, v9645, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) -> f_948(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9640, v9638, v9641, v9642, v9643, v9645, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) :|: TRUE
f_948(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9640, v9638, v9641, v9642, v9643, v9645, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) -> f_962(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9640, v9638, v9641, v9642, v9643, v9645, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) :|: 0 = 0
f_962(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9640, v9638, v9641, v9642, v9643, v9645, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) -> f_977(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, v9638, v9641, v9642, v9643, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) :|: 0 = 0
f_977(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, v9638, v9641, v9642, v9643, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) -> f_991(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, v9638, v9641, v9642, v9643, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) :|: 0 < v9645
f_991(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, v9638, v9641, v9642, v9643, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) -> f_1006(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, v9638, v9641, v9642, v9643, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) :|: 0 = 0
f_1006(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, v9638, v9641, v9642, v9643, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) -> f_1020(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, v9638, v9641, v9642, v9643, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) :|: 0 = 0
f_1020(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, v9638, v9641, v9642, v9643, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) -> f_1033(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, v9638, v9641, v9642, v9643, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) :|: TRUE
f_1033(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, v9638, v9641, v9642, v9643, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) -> f_1045(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, v9638, v9641, v9642, v9643, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) :|: 0 = 0
f_1045(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, v9638, v9641, v9642, v9643, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) -> f_1058(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, v9641, v9642, v9643, v9638, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) :|: 0 = 0
f_1058(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, v9641, v9642, v9643, v9638, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) -> f_1071(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, v9641, v9642, v9643, v9638, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) :|: 0 = 0
f_1071(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, v9641, v9642, v9643, v9638, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) -> f_1085(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, v9641, v9642, v9643, v9638, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) :|: TRUE
f_1085(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, v9641, v9642, v9643, v9638, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) -> f_1098(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, v18430, v9642, v9643, v9638, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) :|: TRUE
f_1098(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, v18430, v9642, v9643, v9638, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) -> f_1114(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, v18430, v9642, v9643, v9638, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) :|: v18430 != 0
f_1098(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, v18430, v9642, v9643, v9638, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) -> f_1115(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, 0, v9642, v9643, v9638, v9646, v9647, v9648, v9649, v9650, 3, 7, 2, 4, 8) :|: v18430 = 0
f_1114(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, v18430, v9642, v9643, v9638, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) -> f_1131(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, v18430, v9642, v9643, v9638, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) :|: 0 = 0
f_1131(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, v18430, v9642, v9643, v9638, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) -> f_1148(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, v18430, v9642, v9643, v9638, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) :|: TRUE
f_1148(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, v18430, v9642, v9643, v9638, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) -> f_1163(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, v18430, v9642, v9643, v9638, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) :|: 0 = 0
f_1163(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, v18430, v9642, v9643, v9638, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) -> f_1178(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, v18430, v9642, v9643, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) :|: 0 = 0
f_1178(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, v18430, v9642, v9643, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) -> f_1193(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, v18430, v9642, v9643, v20058, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) :|: 1 + v20058 = v9644 && 0 <= v20058
f_1193(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, v18430, v9642, v9643, v20058, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) -> f_1209(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, v18430, v9642, v9643, v20058, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) :|: 0 = 0
f_1209(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, v18430, v9642, v9643, v20058, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) -> f_1224(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, v18430, v9642, v9643, v20058, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) :|: TRUE
f_1224(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, v18430, v9642, v9643, v20058, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) -> f_1237(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, v18430, v9642, v9643, v20058, v21035, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) :|: TRUE
f_1237(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, v18430, v9642, v9643, v20058, v21035, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) -> f_1248(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, v18430, v9642, v9643, v20058, v21035, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) :|: 0 = 0
f_1248(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, v18430, v9642, v9643, v20058, v21035, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) -> f_1258(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, v18430, v9642, v9643, v20058, v21035, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) :|: TRUE
f_1258(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, v18430, v9642, v9643, v20058, v21035, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) -> f_1268(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, v18430, v9642, v9643, v20058, v21035, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) :|: TRUE
f_1268(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, v18430, v9642, v9643, v20058, v21035, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) -> f_874(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, v18430, v9642, v9643, v20058, v21035, v9646, v9647, v9648, v9649, v9650, 0, 3, 7, 2, 4, 8) :|: TRUE
f_1115(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, 0, v9642, v9643, v9638, v9646, v9647, v9648, v9649, v9650, 3, 7, 2, 4, 8) -> f_1132(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, 0, v9642, v9643, v9638, v9646, v9647, v9648, v9649, v9650, 3, 7, 2, 4, 8) :|: 0 = 0
f_1132(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, 0, v9642, v9643, v9638, v9646, v9647, v9648, v9649, v9650, 3, 7, 2, 4, 8) -> f_1149(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, 0, v9642, v9643, v9638, v9646, v9647, v9648, v9649, v9650, 3, 7, 2, 4, 8) :|: TRUE
f_1149(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, 0, v9642, v9643, v9638, v9646, v9647, v9648, v9649, v9650, 3, 7, 2, 4, 8) -> f_1164(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, 0, v9642, v9643, v9638, v9646, v9647, v9648, v9649, v9650, 3, 7, 2, 4, 8) :|: 0 = 0
f_1164(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, 0, v9642, v9643, v9638, v9646, v9647, v9648, v9649, v9650, 3, 7, 2, 4, 8) -> f_1179(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, 0, v9643, v9638, v9646, v9647, v9648, v9649, v9650, 3, 7, 2, 4, 8) :|: 0 = 0
f_1179(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, 0, v9643, v9638, v9646, v9647, v9648, v9649, v9650, 3, 7, 2, 4, 8) -> f_1194(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, 0, v20059, v9638, v9646, v9647, v9648, v9649, v9650, 3, 7, 2, 4, 8) :|: 1 + v20059 = v9645 && 0 <= v20059
f_1194(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, 0, v20059, v9638, v9646, v9647, v9648, v9649, v9650, 3, 7, 2, 4, 8) -> f_1210(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, 0, v20059, v9638, v9646, v9647, v9648, v9649, v9650, 3, 7, 2, 4, 8) :|: 0 = 0
f_1210(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, 0, v20059, v9638, v9646, v9647, v9648, v9649, v9650, 3, 7, 2, 4, 8) -> f_1225(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, 0, v20059, v9638, v9646, v9647, v9648, v9649, v9650, 3, 7, 2, 4, 8) :|: TRUE
f_1225(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, 0, v20059, v9638, v9646, v9647, v9648, v9649, v9650, 3, 7, 2, 4, 8) -> f_1238(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, 0, v20059, v9638, v9646, v9647, v9648, v9649, v9650, 3, 7, 2, 4, 8) :|: TRUE
f_1238(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, 0, v20059, v9638, v9646, v9647, v9648, v9649, v9650, 3, 7, 2, 4, 8) -> f_834(v9633, v9634, v9635, v9636, v9637, v9644, 1, v9645, 0, v9638, v9645, v20059, v9646, v9647, v9648, v9649, v9650, 3, 7, 2, 4, 8) :|: TRUE
f_834(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8704, 0, v8706, v8707, v8708, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) -> f_847(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8704, 0, v8706, v8707, v8708, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) :|: TRUE
f_1060(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, 0, v8706, v8707, v8704, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) -> f_1073(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, 0, v8706, v8707, v8704, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) :|: 0 = 0
f_1073(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, 0, v8706, v8707, v8704, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) -> f_1087(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, 0, v8706, v8707, v8704, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) :|: TRUE
f_1087(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, 0, v8706, v8707, v8704, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) -> f_1100(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, 0, v8706, v8707, v8704, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) :|: 0 = 0
f_1100(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, 0, v8706, v8707, v8704, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) -> f_1117(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, 0, v8706, v8707, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) :|: 0 = 0
f_1117(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, 0, v8706, v8707, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) -> f_1134(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, 0, v8706, v8707, v19078, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) :|: 1 + v19078 = v8708 && 0 <= v19078
f_1134(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, 0, v8706, v8707, v19078, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) -> f_1151(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, 0, v8706, v8707, v19078, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) :|: 0 = 0
f_1151(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, 0, v8706, v8707, v19078, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) -> f_1166(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, 0, v8706, v8707, v19078, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) :|: TRUE
f_1166(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, 0, v8706, v8707, v19078, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) -> f_1181(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, 0, v8706, v8707, v19078, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) :|: TRUE
f_1181(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, 0, v8706, v8707, v19078, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) -> f_834(v8697, v8698, v8699, v8700, v8701, v8702, 1, v8708, 0, v8706, v8707, v19078, v8709, v8710, v8711, v8712, v8713, 3, 7, 2, 4, 8) :|: TRUE
Combined rules. Obtained 6 rulesP rules:
f_847(v8697:0, v8698:0, v8699:0, v8700:0, v8701:0, v8702:0, 1, v8704:0, 0, v8706:0, v8707:0, 1 + v19078:0, v8709:0, v8710:0, v8711:0, v8712:0, v8713:0, 3, 7, 2, 4, 8) -> f_847(v8697:0, v8698:0, v8699:0, v8700:0, v8701:0, v8702:0, 1, 1 + v19078:0, 0, v8706:0, v8707:0, v19078:0, v8709:0, v8710:0, v8711:0, v8712:0, v8713:0, 3, 7, 2, 4, 8) :|: v8704:0 > 1 && v19078:0 > -1
f_1098(v9633:0, v9634:0, v9635:0, v9636:0, v9637:0, 1 + v20058:0, 1, v9645:0, v18430:0, v9642:0, v9643:0, v9638:0, v9646:0, v9647:0, v9648:0, v9649:0, v9650:0, 0, 3, 7, 2, 4, 8) -> f_1098(v9633:0, v9634:0, v9635:0, v9636:0, v9637:0, v20058:0, 1, v21035:0, v18430:1, v9642:0, v9643:0, 1 + v20058:0, v9646:0, v9647:0, v9648:0, v9649:0, v9650:0, 0, 3, 7, 2, 4, 8) :|: v20058:0 > 0 && v21035:0 > 0 && v18430:0 < 0
f_1098(v9633:0, v9634:0, v9635:0, v9636:0, v9637:0, 1 + v20058:0, 1, v9645:0, v18430:0, v9642:0, v9643:0, v9638:0, v9646:0, v9647:0, v9648:0, v9649:0, v9650:0, 0, 3, 7, 2, 4, 8) -> f_1098(v9633:0, v9634:0, v9635:0, v9636:0, v9637:0, v20058:0, 1, v21035:0, v18430:1, v9642:0, v9643:0, 1 + v20058:0, v9646:0, v9647:0, v9648:0, v9649:0, v9650:0, 0, 3, 7, 2, 4, 8) :|: v20058:0 > 0 && v21035:0 > 0 && v18430:0 > 0
f_1098(v9633:0, v9634:0, v9635:0, v9636:0, v9637:0, v9644:0, 1, 1 + v20059:0, 0, v9642:0, v9643:0, v9638:0, v9646:0, v9647:0, v9648:0, v9649:0, v9650:0, 0, 3, 7, 2, 4, 8) -> f_847(v9633:0, v9634:0, v9635:0, v9636:0, v9637:0, v9644:0, 1, 1 + v20059:0, 0, v9638:0, 1 + v20059:0, v20059:0, v9646:0, v9647:0, v9648:0, v9649:0, v9650:0, 3, 7, 2, 4, 8) :|: v20059:0 > -1
f_847(v8697:0, v8698:0, v8699:0, v8700:0, v8701:0, 1 + v19077:0, 1, v8704:0, 0, v8706:0, v8707:0, v8708:0, v8709:0, v8710:0, v8711:0, v8712:0, v8713:0, 3, 7, 2, 4, 8) -> f_1098(v8697:0, v8698:0, v8699:0, v8700:0, v8701:0, v19077:0, 1, v19734:0, v18430:0, v8704:0, v8708:0, 1 + v19077:0, v8709:0, v8710:0, v8711:0, v8712:0, v8713:0, 0, 3, 7, 2, 4, 8) :|: v19077:0 > 0 && v8704:0 > 1 && v8708:0 > 0 && v16124:0 < 0 && v19734:0 > 0
f_847(v8697:0, v8698:0, v8699:0, v8700:0, v8701:0, 1 + v19077:0, 1, v8704:0, 0, v8706:0, v8707:0, v8708:0, v8709:0, v8710:0, v8711:0, v8712:0, v8713:0, 3, 7, 2, 4, 8) -> f_1098(v8697:0, v8698:0, v8699:0, v8700:0, v8701:0, v19077:0, 1, v19734:0, v18430:0, v8704:0, v8708:0, 1 + v19077:0, v8709:0, v8710:0, v8711:0, v8712:0, v8713:0, 0, 3, 7, 2, 4, 8) :|: v19077:0 > 0 && v8704:0 > 1 && v8708:0 > 0 && v16124:0 > 0 && v19734:0 > 0
Filtered unneeded arguments:
   f_847(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22) -> f_847(x6, x8, x12)
   f_1098(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23) -> f_1098(x6, x8, x9)
Removed division, modulo operations, cleaned up constraints. Obtained 5 rules.P rules:
f_847(v8702:0, v8704:0, sum~cons_1~v19078:0) -> f_847(v8702:0, 1 + v19078:0, v19078:0) :|: v8704:0 > 1 && v19078:0 > -1 && sum~cons_1~v19078:0 = 1 + v19078:0
f_1098(sum~cons_1~v20058:0, v9645:0, v18430:0) -> f_1098(v20058:0, v21035:0, v18430:1) :|: v21035:0 > 0 && v18430:0 < 0 && v20058:0 > 0 && sum~cons_1~v20058:0 = 1 + v20058:0
f_1098(sum~cons_1~v20058:0, v9645:0, v18430:0) -> f_1098(v20058:0, v21035:0, v18430:1) :|: v21035:0 > 0 && v18430:0 > 0 && v20058:0 > 0 && sum~cons_1~v20058:0 = 1 + v20058:0
f_1098(v9644:0, sum~cons_1~v20059:0, cons_0) -> f_847(v9644:0, 1 + v20059:0, v20059:0) :|: v20059:0 > -1 && sum~cons_1~v20059:0 = 1 + v20059:0 && cons_0 = 0
f_847(sum~cons_1~v19077:0, v8704:0, v8708:0) -> f_1098(v19077:0, v19734:0, v18430:0) :|: v8704:0 > 1 && v19077:0 > 0 && v19734:0 > 0 && v8708:0 > 0 && sum~cons_1~v19077:0 = 1 + v19077:0

----------------------------------------

(76)
Obligation:
Rules:
f_847(v8702:0, v8704:0, sum~cons_1~v19078:0) -> f_847(v8702:0, 1 + v19078:0, v19078:0) :|: v8704:0 > 1 && v19078:0 > -1 && sum~cons_1~v19078:0 = 1 + v19078:0
f_1098(sum~cons_1~v20058:0, v9645:0, v18430:0) -> f_1098(v20058:0, v21035:0, v18430:1) :|: v21035:0 > 0 && v18430:0 < 0 && v20058:0 > 0 && sum~cons_1~v20058:0 = 1 + v20058:0
f_1098(x, x1, x2) -> f_1098(x3, x4, x5) :|: x4 > 0 && x2 > 0 && x3 > 0 && x = 1 + x3
f_1098(v9644:0, sum~cons_1~v20059:0, cons_0) -> f_847(v9644:0, 1 + v20059:0, v20059:0) :|: v20059:0 > -1 && sum~cons_1~v20059:0 = 1 + v20059:0 && cons_0 = 0
f_847(x6, x7, x8) -> f_1098(x9, x10, x11) :|: x7 > 1 && x9 > 0 && x10 > 0 && x8 > 0 && x6 = 1 + x9

----------------------------------------

(77) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(78)
Obligation:
Rules:
f_1098(sum~cons_1~v20058:0:0, v9645:0:0, v18430:0:0) -> f_1098(v20058:0:0, v21035:0:0, v18430:1:0) :|: v21035:0:0 > 0 && v18430:0:0 < 0 && v20058:0:0 > 0 && sum~cons_1~v20058:0:0 = 1 + v20058:0:0
f_1098(v9644:0:0, sum~cons_1~v20059:0:0, cons_0) -> f_847(v9644:0:0, 1 + v20059:0:0, v20059:0:0) :|: v20059:0:0 > -1 && sum~cons_1~v20059:0:0 = 1 + v20059:0:0 && cons_0 = 0
f_1098(sum~cons_1~x3:0, x1:0, x2:0) -> f_1098(x3:0, x4:0, x5:0) :|: x4:0 > 0 && x2:0 > 0 && x3:0 > 0 && sum~cons_1~x3:0 = 1 + x3:0
f_847(v8702:0:0, v8704:0:0, sum~cons_1~v19078:0:0) -> f_847(v8702:0:0, 1 + v19078:0:0, v19078:0:0) :|: v8704:0:0 > 1 && v19078:0:0 > -1 && sum~cons_1~v19078:0:0 = 1 + v19078:0:0
f_847(sum~cons_1~x9:0, x7:0, x8:0) -> f_1098(x9:0, x10:0, x11:0) :|: x10:0 > 0 && x8:0 > 0 && x9:0 > 0 && x7:0 > 1 && sum~cons_1~x9:0 = 1 + x9:0

----------------------------------------

(79) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_1098(x, x1, x2)] = 3 + x^2
[f_847(x3, x4, x5)] = x3^2

The following rules are decreasing:
f_1098(sum~cons_1~v20058:0:0, v9645:0:0, v18430:0:0) -> f_1098(v20058:0:0, v21035:0:0, v18430:1:0) :|: v21035:0:0 > 0 && v18430:0:0 < 0 && v20058:0:0 > 0 && sum~cons_1~v20058:0:0 = 1 + v20058:0:0
f_1098(v9644:0:0, sum~cons_1~v20059:0:0, cons_0) -> f_847(v9644:0:0, 1 + v20059:0:0, v20059:0:0) :|: v20059:0:0 > -1 && sum~cons_1~v20059:0:0 = 1 + v20059:0:0 && cons_0 = 0
f_1098(sum~cons_1~x3:0, x1:0, x2:0) -> f_1098(x3:0, x4:0, x5:0) :|: x4:0 > 0 && x2:0 > 0 && x3:0 > 0 && sum~cons_1~x3:0 = 1 + x3:0
The following rules are bounded:
f_1098(sum~cons_1~v20058:0:0, v9645:0:0, v18430:0:0) -> f_1098(v20058:0:0, v21035:0:0, v18430:1:0) :|: v21035:0:0 > 0 && v18430:0:0 < 0 && v20058:0:0 > 0 && sum~cons_1~v20058:0:0 = 1 + v20058:0:0
f_1098(v9644:0:0, sum~cons_1~v20059:0:0, cons_0) -> f_847(v9644:0:0, 1 + v20059:0:0, v20059:0:0) :|: v20059:0:0 > -1 && sum~cons_1~v20059:0:0 = 1 + v20059:0:0 && cons_0 = 0
f_1098(sum~cons_1~x3:0, x1:0, x2:0) -> f_1098(x3:0, x4:0, x5:0) :|: x4:0 > 0 && x2:0 > 0 && x3:0 > 0 && sum~cons_1~x3:0 = 1 + x3:0
f_847(v8702:0:0, v8704:0:0, sum~cons_1~v19078:0:0) -> f_847(v8702:0:0, 1 + v19078:0:0, v19078:0:0) :|: v8704:0:0 > 1 && v19078:0:0 > -1 && sum~cons_1~v19078:0:0 = 1 + v19078:0:0
f_847(sum~cons_1~x9:0, x7:0, x8:0) -> f_1098(x9:0, x10:0, x11:0) :|: x10:0 > 0 && x8:0 > 0 && x9:0 > 0 && x7:0 > 1 && sum~cons_1~x9:0 = 1 + x9:0

----------------------------------------

(80)
Obligation:
Rules:
f_847(v8702:0:0, v8704:0:0, sum~cons_1~v19078:0:0) -> f_847(v8702:0:0, 1 + v19078:0:0, v19078:0:0) :|: v8704:0:0 > 1 && v19078:0:0 > -1 && sum~cons_1~v19078:0:0 = 1 + v19078:0:0
f_847(sum~cons_1~x9:0, x7:0, x8:0) -> f_1098(x9:0, x10:0, x11:0) :|: x10:0 > 0 && x8:0 > 0 && x9:0 > 0 && x7:0 > 1 && sum~cons_1~x9:0 = 1 + x9:0

----------------------------------------

(81) TerminationGraphProcessor (EQUIVALENT)
Constructed the termination graph and obtained one non-trivial SCC.

----------------------------------------

(82)
Obligation:
Rules:
f_847(v8702:0:0, v8704:0:0, sum~cons_1~v19078:0:0) -> f_847(v8702:0:0, 1 + v19078:0:0, v19078:0:0) :|: v8704:0:0 > 1 && v19078:0:0 > -1 && sum~cons_1~v19078:0:0 = 1 + v19078:0:0

----------------------------------------

(83) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(84)
Obligation:
Rules:
f_847(v8702:0:0:0, v8704:0:0:0, sum~cons_1~v19078:0:0:0) -> f_847(v8702:0:0:0, 1 + v19078:0:0:0, v19078:0:0:0) :|: v8704:0:0:0 > 1 && v19078:0:0:0 > -1 && sum~cons_1~v19078:0:0:0 = 1 + v19078:0:0:0

----------------------------------------

(85) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_847(x1, x2, x3) -> f_847(x2, x3)

----------------------------------------

(86)
Obligation:
Rules:
f_847(v8704:0:0:0, sum~cons_1~v19078:0:0:0) -> f_847(1 + v19078:0:0:0, v19078:0:0:0) :|: v8704:0:0:0 > 1 && v19078:0:0:0 > -1 && sum~cons_1~v19078:0:0:0 = 1 + v19078:0:0:0

----------------------------------------

(87) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_847 ] = f_847_2

The following rules are decreasing:
f_847(v8704:0:0:0, sum~cons_1~v19078:0:0:0) -> f_847(1 + v19078:0:0:0, v19078:0:0:0) :|: v8704:0:0:0 > 1 && v19078:0:0:0 > -1 && sum~cons_1~v19078:0:0:0 = 1 + v19078:0:0:0

The following rules are bounded:
f_847(v8704:0:0:0, sum~cons_1~v19078:0:0:0) -> f_847(1 + v19078:0:0:0, v19078:0:0:0) :|: v8704:0:0:0 > 1 && v19078:0:0:0 > -1 && sum~cons_1~v19078:0:0:0 = 1 + v19078:0:0:0


----------------------------------------

(88)
YES

----------------------------------------

(89)
Obligation:
SCC
----------------------------------------

(90) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 98 rulesP rules:
f_530(v1, v3, v5, v7, v10, v28, 1, v15, 0, v13, v885, v1013, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_540(v1, v3, v5, v7, v10, v28, 1, v15, 0, v13, v885, v1013, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: TRUE
f_540(v1, v3, v5, v7, v10, v28, 1, v15, 0, v13, v885, v1013, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_550(v1, v3, v5, v7, v10, v28, 1, v15, 0, v13, v885, v1013, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: 0 = 0
f_550(v1, v3, v5, v7, v10, v28, 1, v15, 0, v13, v885, v1013, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_560(v1, v3, v5, v7, v10, v1013, 1, v15, v28, 0, v13, v885, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: 0 = 0
f_560(v1, v3, v5, v7, v10, v1013, 1, v15, v28, 0, v13, v885, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_570(v1, v3, v5, v7, v10, v1013, 1, v15, v28, 0, v13, v885, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: v1013 != 0
f_570(v1, v3, v5, v7, v10, v1013, 1, v15, v28, 0, v13, v885, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_581(v1, v3, v5, v7, v10, v1013, 1, v15, v28, 0, v13, v885, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: 0 = 0
f_581(v1, v3, v5, v7, v10, v1013, 1, v15, v28, 0, v13, v885, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_593(v1, v3, v5, v7, v10, v1013, 1, v15, v28, 0, v13, v885, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: TRUE
f_593(v1, v3, v5, v7, v10, v1013, 1, v15, v28, 0, v13, v885, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_605(v1, v3, v5, v7, v10, v1013, 1, v15, v28, 0, v13, v885, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: 0 = 0
f_605(v1, v3, v5, v7, v10, v1013, 1, v15, v28, 0, v13, v885, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_617(v1, v3, v5, v7, v10, v1013, 1, v885, v28, 0, v13, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: 0 = 0
f_617(v1, v3, v5, v7, v10, v1013, 1, v885, v28, 0, v13, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_630(v1, v3, v5, v7, v10, v1013, 1, v885, v28, 0, v13, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: 0 < v885 && 2 <= v15
f_630(v1, v3, v5, v7, v10, v1013, 1, v885, v28, 0, v13, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_643(v1, v3, v5, v7, v10, v1013, 1, v885, v28, 0, v13, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: 0 = 0
f_643(v1, v3, v5, v7, v10, v1013, 1, v885, v28, 0, v13, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_655(v1, v3, v5, v7, v10, v1013, 1, v885, v28, 0, v13, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: 0 = 0
f_655(v1, v3, v5, v7, v10, v1013, 1, v885, v28, 0, v13, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_667(v1, v3, v5, v7, v10, v1013, 1, v885, v28, 0, v13, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: TRUE
f_667(v1, v3, v5, v7, v10, v1013, 1, v885, v28, 0, v13, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_677(v1, v3, v5, v7, v10, v1013, 1, v885, v28, 0, v13, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: 0 = 0
f_677(v1, v3, v5, v7, v10, v1013, 1, v885, v28, 0, v13, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_688(v1, v3, v5, v7, v10, v1013, 1, v885, 0, v13, v28, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: 0 = 0
f_688(v1, v3, v5, v7, v10, v1013, 1, v885, 0, v13, v28, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_698(v1, v3, v5, v7, v10, v1013, 1, v885, 0, v13, v28, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: v1013 <= 0
f_698(v1, v3, v5, v7, v10, v1013, 1, v885, 0, v13, v28, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_709(v1, v3, v5, v7, v10, v1013, 1, v885, 0, v13, v28, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: 0 = 0
f_709(v1, v3, v5, v7, v10, v1013, 1, v885, 0, v13, v28, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_722(v1, v3, v5, v7, v10, v1013, 1, v885, 0, v13, v28, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: TRUE
f_722(v1, v3, v5, v7, v10, v1013, 1, v885, 0, v13, v28, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_735(v1, v3, v5, v7, v10, v1013, 1, v885, 0, v7613, v13, v28, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: TRUE
f_735(v1, v3, v5, v7, v10, v1013, 1, v885, 0, v7613, v13, v28, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_751(v1, v3, v5, v7, v10, v1013, 1, v885, 0, v7613, v13, v28, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: v7613 != 0
f_735(v1, v3, v5, v7, v10, v1013, 1, v885, 0, v7613, v13, v28, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_752(v1, v3, v5, v7, v10, v1013, 1, v885, 0, v13, v28, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: v7613 = 0
f_751(v1, v3, v5, v7, v10, v1013, 1, v885, 0, v7613, v13, v28, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_766(v1, v3, v5, v7, v10, v1013, 1, v885, 0, v7613, v13, v28, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: 0 = 0
f_766(v1, v3, v5, v7, v10, v1013, 1, v885, 0, v7613, v13, v28, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_781(v1, v3, v5, v7, v10, v1013, 1, v885, 0, v7613, v13, v28, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: TRUE
f_781(v1, v3, v5, v7, v10, v1013, 1, v885, 0, v7613, v13, v28, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_789(v1, v3, v5, v7, v10, v1013, 1, v885, 0, v7613, v13, v28, v15, v1013, v2, v4, v6, v8, v11, 3, 7, 2, 4, 8) :|: TRUE
f_789(v8360, v8361, v8362, v8363, v8364, v8365, 1, v8367, 0, v8369, v8370, v8371, v8372, v8373, v8374, v8375, v8376, v8377, v8378, 3, 7, 2, 4, 8) -> f_1144(v8360, v8361, v8362, v8363, v8364, v8365, 1, v8367, 0, v8369, v8370, v8371, v8372, v8373, v8374, v8375, v8376, v8377, v8378, 3, 7, 2, 4, 8) :|: TRUE
f_1144(v19259, v19260, v19261, v19262, v19263, v19264, 1, v19266, 0, v19268, v19269, v19270, v19271, v19272, v19273, v19274, v19275, v19276, v19277, 3, 7, 2, 4, 8) -> f_1161(v19259, v19260, v19261, v19262, v19263, v19264, 1, v19266, 0, v19268, v19269, v19270, v19271, v19272, v19273, v19274, v19275, v19276, v19277, 3, 7, 2, 4, 8) :|: 0 = 0
f_1161(v19259, v19260, v19261, v19262, v19263, v19264, 1, v19266, 0, v19268, v19269, v19270, v19271, v19272, v19273, v19274, v19275, v19276, v19277, 3, 7, 2, 4, 8) -> f_1176(v19259, v19260, v19261, v19262, v19263, v19264, 1, v19266, 0, v19268, v19270, v19271, v19272, v19273, v19274, v19275, v19276, v19277, 3, 7, 2, 4, 8) :|: 0 = 0
f_1176(v19259, v19260, v19261, v19262, v19263, v19264, 1, v19266, 0, v19268, v19270, v19271, v19272, v19273, v19274, v19275, v19276, v19277, 3, 7, 2, 4, 8) -> f_1191(v19259, v19260, v19261, v19262, v19263, v19264, 1, v19266, 0, v19268, v20056, v19271, v19272, v19273, v19274, v19275, v19276, v19277, 3, 7, 2, 4, 8) :|: v20056 = 1 + v19264 && v20056 <= 1
f_1191(v19259, v19260, v19261, v19262, v19263, v19264, 1, v19266, 0, v19268, v20056, v19271, v19272, v19273, v19274, v19275, v19276, v19277, 3, 7, 2, 4, 8) -> f_1207(v19259, v19260, v19261, v19262, v19263, v19264, 1, v19266, 0, v19268, v20056, v19271, v19272, v19273, v19274, v19275, v19276, v19277, 3, 7, 2, 4, 8) :|: 0 = 0
f_1207(v19259, v19260, v19261, v19262, v19263, v19264, 1, v19266, 0, v19268, v20056, v19271, v19272, v19273, v19274, v19275, v19276, v19277, 3, 7, 2, 4, 8) -> f_1222(v19259, v19260, v19261, v19262, v19263, v19264, 1, v19266, 0, v19268, v20056, v19271, v19272, v19273, v19274, v19275, v19276, v19277, 3, 7, 2, 4, 8) :|: TRUE
f_1222(v19259, v19260, v19261, v19262, v19263, v19264, 1, v19266, 0, v19268, v20056, v19271, v19272, v19273, v19274, v19275, v19276, v19277, 3, 7, 2, 4, 8) -> f_1235(v19259, v19260, v19261, v19262, v19263, v19264, 1, v19266, 0, v19268, v20056, v19271, v19272, v19273, v19274, v19275, v19276, v19277, 3, 7, 2, 4, 8) :|: TRUE
f_1235(v19259, v19260, v19261, v19262, v19263, v19264, 1, v19266, 0, v19268, v20056, v19271, v19272, v19273, v19274, v19275, v19276, v19277, 3, 7, 2, 4, 8) -> f_871(v19259, v19260, v19261, v19262, v19263, v19264, 1, v19266, 0, v19268, v19271, v19272, v20056, v19273, v19274, v19275, v19276, v19277, 3, 7, 2, 4, 8) :|: TRUE
f_871(v9586, v9587, v9588, v9589, v9590, v9591, 1, v9593, 0, v9595, v9596, v9597, v9598, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) -> f_882(v9586, v9587, v9588, v9589, v9590, v9591, 1, v9593, 0, v9595, v9596, v9597, v9598, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) :|: TRUE
f_882(v9586, v9587, v9588, v9589, v9590, v9591, 1, v9593, 0, v9595, v9596, v9597, v9598, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) -> f_892(v9586, v9587, v9588, v9589, v9590, v9591, 1, v9593, 0, v9595, v9596, v9597, v9598, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) :|: TRUE
f_892(v9586, v9587, v9588, v9589, v9590, v9591, 1, v9593, 0, v9595, v9596, v9597, v9598, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) -> f_902(v9586, v9587, v9588, v9589, v9590, v9591, 1, v9593, 0, v9595, v9596, v9597, v9598, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) :|: 0 = 0
f_902(v9586, v9587, v9588, v9589, v9590, v9591, 1, v9593, 0, v9595, v9596, v9597, v9598, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) -> f_912(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, v9591, 0, v9595, v9596, v9597, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) :|: 0 = 0
f_912(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, v9591, 0, v9595, v9596, v9597, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) -> f_922(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, v9591, 0, v9595, v9596, v9597, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) :|: v9598 != 0
f_922(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, v9591, 0, v9595, v9596, v9597, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) -> f_934(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, v9591, 0, v9595, v9596, v9597, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) :|: 0 = 0
f_934(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, v9591, 0, v9595, v9596, v9597, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) -> f_945(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, v9591, 0, v9595, v9596, v9597, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) :|: TRUE
f_945(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, v9591, 0, v9595, v9596, v9597, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) -> f_958(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, v9591, 0, v9595, v9596, v9597, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) :|: 0 = 0
f_958(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, v9591, 0, v9595, v9596, v9597, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) -> f_973(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, v9591, 0, v9595, v9596, v9597, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) :|: 0 = 0
f_973(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, v9591, 0, v9595, v9596, v9597, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) -> f_988(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, v9591, 0, v9595, v9596, v9597, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) :|: 0 = 0
f_988(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, v9591, 0, v9595, v9596, v9597, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) -> f_1003(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, v9591, 0, v9595, v9596, v9597, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) :|: 0 = 0
f_1003(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, v9591, 0, v9595, v9596, v9597, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) -> f_1017(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, v9591, 0, v9595, v9596, v9597, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) :|: TRUE
f_1017(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, v9591, 0, v9595, v9596, v9597, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) -> f_1030(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, v9591, 0, v9595, v9596, v9597, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) :|: 0 = 0
f_1030(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, v9591, 0, v9595, v9596, v9597, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) -> f_1042(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, 0, v9595, v9596, v9597, v9591, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) :|: 0 = 0
f_1042(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, 0, v9595, v9596, v9597, v9591, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) -> f_1055(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, 0, v9595, v9596, v9597, v9591, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) :|: v9598 <= 0 && 1 + v9591 <= 0
f_1055(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, 0, v9595, v9596, v9597, v9591, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) -> f_1068(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, 0, v9595, v9596, v9597, v9591, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) :|: 0 = 0
f_1068(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, 0, v9595, v9596, v9597, v9591, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) -> f_1082(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, 0, v9595, v9596, v9597, v9591, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) :|: TRUE
f_1082(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, 0, v9595, v9596, v9597, v9591, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) -> f_1096(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, 0, v18429, v9596, v9597, v9591, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) :|: TRUE
f_1096(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, 0, v18429, v9596, v9597, v9591, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) -> f_1110(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, 0, v18429, v9596, v9597, v9591, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) :|: v18429 != 0
f_1096(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, 0, v18429, v9596, v9597, v9591, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) -> f_1111(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, 0, v9596, v9597, v9591, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) :|: v18429 = 0
f_1110(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, 0, v18429, v9596, v9597, v9591, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) -> f_1127(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, 0, v18429, v9596, v9597, v9591, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) :|: 0 = 0
f_1127(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, 0, v18429, v9596, v9597, v9591, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) -> f_1143(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, 0, v18429, v9596, v9597, v9591, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) :|: TRUE
f_1143(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, 0, v18429, v9596, v9597, v9591, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) -> f_1144(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, 0, v18429, v9591, v9598, v9596, v9597, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) :|: TRUE
f_1111(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, 0, v9596, v9597, v9591, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) -> f_1128(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, 0, v9596, v9597, v9591, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) :|: 0 = 0
f_1128(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, 0, v9596, v9597, v9591, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) -> f_1145(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, 0, v9596, v9597, v9591, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) :|: TRUE
f_1145(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, 0, v9596, v9597, v9591, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) -> f_1162(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, 0, v9596, v9597, v9591, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) :|: 0 = 0
f_1162(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, 0, v9596, v9597, v9591, v9599, v9600, v9601, v9602, v9603, 3, 7, 2, 4, 8) -> f_1177(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, 0, v9597, v9591, v9599, v9600, v9601, v9602, v9603, 3, 7, 4, 8) :|: 0 = 0
f_1177(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, 0, v9597, v9591, v9599, v9600, v9601, v9602, v9603, 3, 7, 4, 8) -> f_1192(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, 0, v20057, v9597, v9591, v9599, v9600, v9601, v9602, v9603, 3, 7, 4, 8) :|: 1 + v20057 = v9593 && 0 <= v20057
f_1192(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, 0, v20057, v9597, v9591, v9599, v9600, v9601, v9602, v9603, 3, 7, 4, 8) -> f_1208(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, 0, v20057, v9597, v9591, v9599, v9600, v9601, v9602, v9603, 3, 7, 4, 8) :|: 0 = 0
f_1208(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, 0, v20057, v9597, v9591, v9599, v9600, v9601, v9602, v9603, 3, 7, 4, 8) -> f_1223(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, 0, v20057, v9597, v9591, v9599, v9600, v9601, v9602, v9603, 3, 7, 4, 8) :|: TRUE
f_1223(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, 0, v20057, v9597, v9591, v9599, v9600, v9601, v9602, v9603, 3, 7, 4, 8) -> f_1236(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, 0, v20057, v21034, v9591, v9599, v9600, v9601, v9602, v9603, 3, 7, 4, 8) :|: TRUE
f_1236(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, 0, v20057, v21034, v9591, v9599, v9600, v9601, v9602, v9603, 3, 7, 4, 8) -> f_1247(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, 0, v20057, v21034, v9591, v9599, v9600, v9601, v9602, v9603, 3, 7, 4, 8) :|: 0 = 0
f_1247(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, 0, v20057, v21034, v9591, v9599, v9600, v9601, v9602, v9603, 3, 7, 4, 8) -> f_1257(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, 0, v20057, v21034, v9591, v9599, v9600, v9601, v9602, v9603, 3, 7, 4, 8) :|: TRUE
f_1257(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, 0, v20057, v21034, v9591, v9599, v9600, v9601, v9602, v9603, 3, 7, 4, 8) -> f_1267(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, 0, v20057, v21034, v9591, v9599, v9600, v9601, v9602, v9603, 3, 7, 4, 8) :|: TRUE
f_1267(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, 0, v20057, v21034, v9591, v9599, v9600, v9601, v9602, v9603, 3, 7, 4, 8) -> f_520(v9586, v9587, v9588, v9589, v9590, v9598, 1, v9593, 0, v9591, v20057, v21034, v9599, v9600, v9601, v9602, v9603, 3, 7, 4, 8) :|: TRUE
f_520(v1, v3, v5, v7, v10, v28, 1, v15, 0, v13, v885, v1013, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_530(v1, v3, v5, v7, v10, v28, 1, v15, 0, v13, v885, v1013, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: TRUE
f_752(v1, v3, v5, v7, v10, v1013, 1, v885, 0, v13, v28, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_767(v1, v3, v5, v7, v10, v1013, 1, v885, 0, v13, v28, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: 0 = 0
f_767(v1, v3, v5, v7, v10, v1013, 1, v885, 0, v13, v28, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_782(v1, v3, v5, v7, v10, v1013, 1, v885, 0, v13, v28, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: TRUE
f_782(v1, v3, v5, v7, v10, v1013, 1, v885, 0, v13, v28, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_791(v1, v3, v5, v7, v10, v1013, 1, v885, 0, v13, v28, v15, v1013, v2, v4, v6, v8, v11, 3, 7, 2, 4, 8) :|: TRUE
f_791(v8400, v8401, v8402, v8403, v8404, v8405, 1, v8407, 0, v8409, v8410, v8411, v8412, v8413, v8414, v8415, v8416, v8417, 3, 7, 2, 4, 8) -> f_805(v8400, v8401, v8402, v8403, v8404, v8405, 1, v8407, 0, v8409, v8410, v8411, v8412, v8413, v8414, v8415, v8416, v8417, 3, 7, 2, 4, 8) :|: 0 = 0
f_805(v8400, v8401, v8402, v8403, v8404, v8405, 1, v8407, 0, v8409, v8410, v8411, v8412, v8413, v8414, v8415, v8416, v8417, 3, 7, 2, 4, 8) -> f_818(v8400, v8401, v8402, v8403, v8404, v8405, 1, v8407, 0, v8409, v8410, v8412, v8413, v8414, v8415, v8416, v8417, 3, 7, 4, 8) :|: 0 = 0
f_818(v8400, v8401, v8402, v8403, v8404, v8405, 1, v8407, 0, v8409, v8410, v8412, v8413, v8414, v8415, v8416, v8417, 3, 7, 4, 8) -> f_831(v8400, v8401, v8402, v8403, v8404, v8405, 1, v8407, 0, v8409, v8410, v8659, v8412, v8413, v8414, v8415, v8416, v8417, 3, 7, 4, 8) :|: 1 + v8659 = v8407 && 0 <= v8659
f_831(v8400, v8401, v8402, v8403, v8404, v8405, 1, v8407, 0, v8409, v8410, v8659, v8412, v8413, v8414, v8415, v8416, v8417, 3, 7, 4, 8) -> f_845(v8400, v8401, v8402, v8403, v8404, v8405, 1, v8407, 0, v8409, v8410, v8659, v8412, v8413, v8414, v8415, v8416, v8417, 3, 7, 4, 8) :|: 0 = 0
f_845(v8400, v8401, v8402, v8403, v8404, v8405, 1, v8407, 0, v8409, v8410, v8659, v8412, v8413, v8414, v8415, v8416, v8417, 3, 7, 4, 8) -> f_859(v8400, v8401, v8402, v8403, v8404, v8405, 1, v8407, 0, v8409, v8410, v8659, v8412, v8413, v8414, v8415, v8416, v8417, 3, 7, 4, 8) :|: TRUE
f_859(v8400, v8401, v8402, v8403, v8404, v8405, 1, v8407, 0, v8409, v8410, v8659, v8412, v8413, v8414, v8415, v8416, v8417, 3, 7, 4, 8) -> f_872(v8400, v8401, v8402, v8403, v8404, v8405, 1, v8407, 0, v8409, v8410, v8659, v9604, v8413, v8414, v8415, v8416, v8417, 3, 7, 4, 8) :|: TRUE
f_872(v8400, v8401, v8402, v8403, v8404, v8405, 1, v8407, 0, v8409, v8410, v8659, v9604, v8413, v8414, v8415, v8416, v8417, 3, 7, 4, 8) -> f_883(v8400, v8401, v8402, v8403, v8404, v8405, 1, v8407, 0, v8409, v8410, v8659, v9604, v8413, v8414, v8415, v8416, v8417, 3, 7, 4, 8) :|: 0 = 0
f_883(v8400, v8401, v8402, v8403, v8404, v8405, 1, v8407, 0, v8409, v8410, v8659, v9604, v8413, v8414, v8415, v8416, v8417, 3, 7, 4, 8) -> f_893(v8400, v8401, v8402, v8403, v8404, v8405, 1, v8407, 0, v8409, v8410, v8659, v9604, v8413, v8414, v8415, v8416, v8417, 3, 7, 4, 8) :|: TRUE
f_893(v8400, v8401, v8402, v8403, v8404, v8405, 1, v8407, 0, v8409, v8410, v8659, v9604, v8413, v8414, v8415, v8416, v8417, 3, 7, 4, 8) -> f_903(v8400, v8401, v8402, v8403, v8404, v8405, 1, v8407, 0, v8409, v8410, v8659, v9604, v8413, v8414, v8415, v8416, v8417, 3, 7, 4, 8) :|: TRUE
f_903(v8400, v8401, v8402, v8403, v8404, v8405, 1, v8407, 0, v8409, v8410, v8659, v9604, v8413, v8414, v8415, v8416, v8417, 3, 7, 4, 8) -> f_913(v8400, v8401, v8402, v8403, v8404, v8405, 1, v8407, 0, v8409, v8410, v8659, v9604, v8413, v8414, v8415, v8416, v8417, 3, 7, 4, 8) :|: TRUE
f_913(v8400, v8401, v8402, v8403, v8404, v8405, 1, v8407, 0, v8409, v8410, v8659, v9604, v8413, v8414, v8415, v8416, v8417, 3, 7, 4, 8) -> f_924(v8400, v8401, v8402, v8403, v8404, v8405, 1, v8407, 0, v8409, v8410, v8659, v9604, v8413, v8414, v8415, v8416, v8417, 3, 7, 4, 8) :|: TRUE
f_924(v8400, v8401, v8402, v8403, v8404, v8405, 1, v8407, 0, v8409, v8410, v8659, v9604, v8413, v8414, v8415, v8416, v8417, 3, 7, 4, 8) -> f_936(v8400, v8401, v8402, v8403, v8404, v8405, 1, v8407, 0, v8409, v8410, v8659, v9604, v8413, v8414, v8415, v8416, v8417, 3, 7, 4, 8) :|: 0 = 0
f_936(v8400, v8401, v8402, v8403, v8404, v8405, 1, v8407, 0, v8409, v8410, v8659, v9604, v8413, v8414, v8415, v8416, v8417, 3, 7, 4, 8) -> f_947(v8400, v8401, v8402, v8403, v8404, v9604, 1, v8407, v8405, 0, v8409, v8410, v8659, v8413, v8414, v8415, v8416, v8417, 3, 7, 4, 8) :|: 0 = 0
f_947(v8400, v8401, v8402, v8403, v8404, v9604, 1, v8407, v8405, 0, v8409, v8410, v8659, v8413, v8414, v8415, v8416, v8417, 3, 7, 4, 8) -> f_960(v8400, v8401, v8402, v8403, v8404, v9604, 1, v8407, v8405, 0, v8409, v8410, v8659, v8413, v8414, v8415, v8416, v8417, 3, 7, 4, 8) :|: v9604 != 0
f_960(v8400, v8401, v8402, v8403, v8404, v9604, 1, v8407, v8405, 0, v8409, v8410, v8659, v8413, v8414, v8415, v8416, v8417, 3, 7, 4, 8) -> f_975(v8400, v8401, v8402, v8403, v8404, v9604, 1, v8407, v8405, 0, v8409, v8410, v8659, v8413, v8414, v8415, v8416, v8417, 3, 7, 4, 8) :|: 0 = 0
f_975(v8400, v8401, v8402, v8403, v8404, v9604, 1, v8407, v8405, 0, v8409, v8410, v8659, v8413, v8414, v8415, v8416, v8417, 3, 7, 4, 8) -> f_989(v8400, v8401, v8402, v8403, v8404, v9604, 1, v8407, v8405, 0, v8409, v8410, v8659, v8413, v8414, v8415, v8416, v8417, 3, 7, 4, 8) :|: TRUE
f_989(v8400, v8401, v8402, v8403, v8404, v9604, 1, v8407, v8405, 0, v8409, v8410, v8659, v8413, v8414, v8415, v8416, v8417, 3, 7, 4, 8) -> f_1004(v8400, v8401, v8402, v8403, v8404, v9604, 1, v8407, v8405, 0, v8409, v8410, v8659, v8413, v8414, v8415, v8416, v8417, 3, 7, 4, 8) :|: 0 = 0
f_1004(v8400, v8401, v8402, v8403, v8404, v9604, 1, v8407, v8405, 0, v8409, v8410, v8659, v8413, v8414, v8415, v8416, v8417, 3, 7, 4, 8) -> f_1018(v8400, v8401, v8402, v8403, v8404, v9604, 1, v8659, v8405, 0, v8409, v8410, v8407, v8413, v8414, v8415, v8416, v8417, 3, 7, 4, 8) :|: 0 = 0
f_1018(v8400, v8401, v8402, v8403, v8404, v9604, 1, v8659, v8405, 0, v8409, v8410, v8407, v8413, v8414, v8415, v8416, v8417, 3, 7, 4, 8) -> f_1031(v8400, v8401, v8402, v8403, v8404, v9604, 1, v8659, v8405, 0, v8409, v8410, v8407, v8413, v8414, v8415, v8416, v8417, 3, 7, 2, 4, 8) :|: 0 < v8659 && 2 <= v8407
f_1031(v8400, v8401, v8402, v8403, v8404, v9604, 1, v8659, v8405, 0, v8409, v8410, v8407, v8413, v8414, v8415, v8416, v8417, 3, 7, 2, 4, 8) -> f_1043(v8400, v8401, v8402, v8403, v8404, v9604, 1, v8659, v8405, 0, v8409, v8410, v8407, v8413, v8414, v8415, v8416, v8417, 3, 7, 2, 4, 8) :|: 0 = 0
f_1043(v8400, v8401, v8402, v8403, v8404, v9604, 1, v8659, v8405, 0, v8409, v8410, v8407, v8413, v8414, v8415, v8416, v8417, 3, 7, 2, 4, 8) -> f_1056(v8400, v8401, v8402, v8403, v8404, v9604, 1, v8659, v8405, 0, v8409, v8410, v8407, v8413, v8414, v8415, v8416, v8417, 3, 7, 2, 4, 8) :|: 0 = 0
f_1056(v8400, v8401, v8402, v8403, v8404, v9604, 1, v8659, v8405, 0, v8409, v8410, v8407, v8413, v8414, v8415, v8416, v8417, 3, 7, 2, 4, 8) -> f_1069(v8400, v8401, v8402, v8403, v8404, v9604, 1, v8659, v8405, 0, v8409, v8410, v8407, v8413, v8414, v8415, v8416, v8417, 3, 7, 2, 4, 8) :|: TRUE
f_1069(v8400, v8401, v8402, v8403, v8404, v9604, 1, v8659, v8405, 0, v8409, v8410, v8407, v8413, v8414, v8415, v8416, v8417, 3, 7, 2, 4, 8) -> f_1083(v8400, v8401, v8402, v8403, v8404, v9604, 1, v8659, v8405, 0, v8409, v8410, v8407, v8413, v8414, v8415, v8416, v8417, 3, 7, 2, 4, 8) :|: 0 = 0
f_1083(v8400, v8401, v8402, v8403, v8404, v9604, 1, v8659, v8405, 0, v8409, v8410, v8407, v8413, v8414, v8415, v8416, v8417, 3, 7, 2, 4, 8) -> f_1097(v8400, v8401, v8402, v8403, v8404, v9604, 1, v8659, 0, v8409, v8410, v8407, v8413, v8414, v8415, v8416, v8417, 3, 7, 2, 4, 8) :|: 0 = 0
f_1097(v8400, v8401, v8402, v8403, v8404, v9604, 1, v8659, 0, v8409, v8410, v8407, v8413, v8414, v8415, v8416, v8417, 3, 7, 2, 4, 8) -> f_1113(v8400, v8401, v8402, v8403, v8404, v9604, 1, v8659, 0, v8409, v8410, v8407, v8413, v8414, v8415, v8416, v8417, 3, 7, 2, 4, 8) :|: v9604 <= 0
f_1113(v8400, v8401, v8402, v8403, v8404, v9604, 1, v8659, 0, v8409, v8410, v8407, v8413, v8414, v8415, v8416, v8417, 3, 7, 2, 4, 8) -> f_1130(v8400, v8401, v8402, v8403, v8404, v9604, 1, v8659, 0, v8409, v8410, v8407, v8413, v8414, v8415, v8416, v8417, 3, 7, 2, 4, 8) :|: 0 = 0
f_1130(v8400, v8401, v8402, v8403, v8404, v9604, 1, v8659, 0, v8409, v8410, v8407, v8413, v8414, v8415, v8416, v8417, 3, 7, 2, 4, 8) -> f_1147(v8400, v8401, v8402, v8403, v8404, v9604, 1, v8659, 0, v8409, v8410, v8407, v8413, v8414, v8415, v8416, v8417, 3, 7, 2, 4, 8) :|: TRUE
f_1147(v8400, v8401, v8402, v8403, v8404, v9604, 1, v8659, 0, v8409, v8410, v8407, v8413, v8414, v8415, v8416, v8417, 3, 7, 2, 4, 8) -> f_722(v8400, v8401, v8402, v8403, v8404, v9604, 1, v8659, 0, v8409, v8410, v8407, v8413, v8414, v8415, v8416, v8417, 3, 7, 4, 8, 2) :|: TRUE
Combined rules. Obtained 12 rulesP rules:
f_735(v1:0, v3:0, v5:0, v7:0, v10:0, v1013:0, 1, 1 + v8659:0, 0, 0, v13:0, v28:0, v15:0, v2:0, v4:0, v6:0, v8:0, v11:0, 3, 7, 4, 8, 2) -> f_735(v1:0, v3:0, v5:0, v7:0, v10:0, v9604:0, 1, v8659:0, 0, v7613:1, v13:0, v28:0, 1 + v8659:0, v2:0, v4:0, v6:0, v8:0, v11:0, 3, 7, 4, 8, 2) :|: v8659:0 > 0 && v9604:0 < 0 && v9604:0 < 1
f_735(v1:0, v3:0, v5:0, v7:0, v10:0, v1013:0, 1, 1 + v8659:0, 0, 0, v13:0, v28:0, v15:0, v2:0, v4:0, v6:0, v8:0, v11:0, 3, 7, 4, 8, 2) -> f_735(v1:0, v3:0, v5:0, v7:0, v10:0, v9604:0, 1, v8659:0, 0, v7613:1, v13:0, v28:0, 1 + v8659:0, v2:0, v4:0, v6:0, v8:0, v11:0, 3, 7, 4, 8, 2) :|: v8659:0 > 0 && v9604:0 > 0 && v9604:0 < 1
f_1096(v9586:0, v9587:0, v9588:0, v9589:0, v9590:0, v9598:0, 1, 1 + v20057:0, 0, 0, v9596:0, v9597:0, v9591:0, v9599:0, v9600:0, v9601:0, v9602:0, v9603:0, 3, 7, 2, 4, 8) -> f_735(v9586:0, v9587:0, v9588:0, v9589:0, v9590:0, v21034:0, 1, v20057:0, 0, v7613:0, v9591:0, v9598:0, 1 + v20057:0, v9599:0, v9600:0, v9601:0, v9602:0, v9603:0, 3, 7, 4, 8, 2) :|: v20057:0 > 0 && v21034:0 < 0 && v21034:0 < 1
f_1096(v9586:0, v9587:0, v9588:0, v9589:0, v9590:0, v9598:0, 1, 1 + v20057:0, 0, 0, v9596:0, v9597:0, v9591:0, v9599:0, v9600:0, v9601:0, v9602:0, v9603:0, 3, 7, 2, 4, 8) -> f_735(v9586:0, v9587:0, v9588:0, v9589:0, v9590:0, v21034:0, 1, v20057:0, 0, v7613:0, v9591:0, v9598:0, 1 + v20057:0, v9599:0, v9600:0, v9601:0, v9602:0, v9603:0, 3, 7, 4, 8, 2) :|: v20057:0 > 0 && v21034:0 > 0 && v21034:0 < 1
f_735(v1:0, v3:0, v5:0, v7:0, v10:0, v1013:0, 1, v885:0, 0, v7613:0, v13:0, v28:0, v15:0, v2:0, v4:0, v6:0, v8:0, v11:0, 3, 7, 4, 8, 2) -> f_1096(v1:0, v3:0, v5:0, v7:0, v10:0, 1 + v1013:0, 1, v885:0, 0, v18429:0, v15:0, v1013:0, v1013:0, v2:0, v4:0, v6:0, v8:0, v11:0, 3, 7, 2, 4, 8) :|: v7613:0 < 0 && v1013:0 < 1 && v1013:0 < -1 && v1013:0 < 0
f_735(v1:0, v3:0, v5:0, v7:0, v10:0, v1013:0, 1, v885:0, 0, v7613:0, v13:0, v28:0, v15:0, v2:0, v4:0, v6:0, v8:0, v11:0, 3, 7, 4, 8, 2) -> f_1096(v1:0, v3:0, v5:0, v7:0, v10:0, 1 + v1013:0, 1, v885:0, 0, v18429:0, v15:0, v1013:0, v1013:0, v2:0, v4:0, v6:0, v8:0, v11:0, 3, 7, 2, 4, 8) :|: v7613:0 < 0 && v1013:0 < 1 && v1013:0 > -1 && v1013:0 < 0
f_735(v1:0, v3:0, v5:0, v7:0, v10:0, v1013:0, 1, v885:0, 0, v7613:0, v13:0, v28:0, v15:0, v2:0, v4:0, v6:0, v8:0, v11:0, 3, 7, 4, 8, 2) -> f_1096(v1:0, v3:0, v5:0, v7:0, v10:0, 1 + v1013:0, 1, v885:0, 0, v18429:0, v15:0, v1013:0, v1013:0, v2:0, v4:0, v6:0, v8:0, v11:0, 3, 7, 2, 4, 8) :|: v7613:0 > 0 && v1013:0 < 1 && v1013:0 < -1 && v1013:0 < 0
f_735(v1:0, v3:0, v5:0, v7:0, v10:0, v1013:0, 1, v885:0, 0, v7613:0, v13:0, v28:0, v15:0, v2:0, v4:0, v6:0, v8:0, v11:0, 3, 7, 4, 8, 2) -> f_1096(v1:0, v3:0, v5:0, v7:0, v10:0, 1 + v1013:0, 1, v885:0, 0, v18429:0, v15:0, v1013:0, v1013:0, v2:0, v4:0, v6:0, v8:0, v11:0, 3, 7, 2, 4, 8) :|: v7613:0 > 0 && v1013:0 < 1 && v1013:0 > -1 && v1013:0 < 0
f_1096(v9586:0, v9587:0, v9588:0, v9589:0, v9590:0, v9598:0, 1, v9593:0, 0, v18429:0, v9596:0, v9597:0, v9591:0, v9599:0, v9600:0, v9601:0, v9602:0, v9603:0, 3, 7, 2, 4, 8) -> f_1096(v9586:0, v9587:0, v9588:0, v9589:0, v9590:0, 1 + v9598:0, 1, v9593:0, 0, v18429:1, v9596:0, v9597:0, v9598:0, v9599:0, v9600:0, v9601:0, v9602:0, v9603:0, 3, 7, 2, 4, 8) :|: v9598:0 < 1 && v9598:0 < -1 && v9598:0 < 0 && v18429:0 < 0
f_1096(v9586:0, v9587:0, v9588:0, v9589:0, v9590:0, v9598:0, 1, v9593:0, 0, v18429:0, v9596:0, v9597:0, v9591:0, v9599:0, v9600:0, v9601:0, v9602:0, v9603:0, 3, 7, 2, 4, 8) -> f_1096(v9586:0, v9587:0, v9588:0, v9589:0, v9590:0, 1 + v9598:0, 1, v9593:0, 0, v18429:1, v9596:0, v9597:0, v9598:0, v9599:0, v9600:0, v9601:0, v9602:0, v9603:0, 3, 7, 2, 4, 8) :|: v9598:0 < 1 && v9598:0 > -1 && v9598:0 < 0 && v18429:0 < 0
f_1096(v9586:0, v9587:0, v9588:0, v9589:0, v9590:0, v9598:0, 1, v9593:0, 0, v18429:0, v9596:0, v9597:0, v9591:0, v9599:0, v9600:0, v9601:0, v9602:0, v9603:0, 3, 7, 2, 4, 8) -> f_1096(v9586:0, v9587:0, v9588:0, v9589:0, v9590:0, 1 + v9598:0, 1, v9593:0, 0, v18429:1, v9596:0, v9597:0, v9598:0, v9599:0, v9600:0, v9601:0, v9602:0, v9603:0, 3, 7, 2, 4, 8) :|: v9598:0 < 1 && v9598:0 < -1 && v9598:0 < 0 && v18429:0 > 0
f_1096(v9586:0, v9587:0, v9588:0, v9589:0, v9590:0, v9598:0, 1, v9593:0, 0, v18429:0, v9596:0, v9597:0, v9591:0, v9599:0, v9600:0, v9601:0, v9602:0, v9603:0, 3, 7, 2, 4, 8) -> f_1096(v9586:0, v9587:0, v9588:0, v9589:0, v9590:0, 1 + v9598:0, 1, v9593:0, 0, v18429:1, v9596:0, v9597:0, v9598:0, v9599:0, v9600:0, v9601:0, v9602:0, v9603:0, 3, 7, 2, 4, 8) :|: v9598:0 < 1 && v9598:0 > -1 && v9598:0 < 0 && v18429:0 > 0
Filtered unneeded arguments:
   f_735(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23) -> f_735(x6, x8, x10)
   f_1096(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23) -> f_1096(x6, x8, x10)
Removed division, modulo operations, cleaned up constraints. Obtained 12 rules.P rules:
f_735(v1013:0, sum~cons_1~v8659:0, cons_0) -> f_735(v9604:0, v8659:0, v7613:1) :|: v9604:0 < 0 && v9604:0 < 1 && v8659:0 > 0 && sum~cons_1~v8659:0 = 1 + v8659:0 && cons_0 = 0
f_735(v1013:0, sum~cons_1~v8659:0, cons_0) -> f_735(v9604:0, v8659:0, v7613:1) :|: v9604:0 > 0 && v9604:0 < 1 && v8659:0 > 0 && sum~cons_1~v8659:0 = 1 + v8659:0 && cons_0 = 0
f_1096(v9598:0, sum~cons_1~v20057:0, cons_0) -> f_735(v21034:0, v20057:0, v7613:0) :|: v21034:0 < 0 && v21034:0 < 1 && v20057:0 > 0 && sum~cons_1~v20057:0 = 1 + v20057:0 && cons_0 = 0
f_1096(v9598:0, sum~cons_1~v20057:0, cons_0) -> f_735(v21034:0, v20057:0, v7613:0) :|: v21034:0 > 0 && v21034:0 < 1 && v20057:0 > 0 && sum~cons_1~v20057:0 = 1 + v20057:0 && cons_0 = 0
f_735(v1013:0, v885:0, v7613:0) -> f_1096(1 + v1013:0, v885:0, v18429:0) :|: v1013:0 < 1 && v7613:0 < 0 && v1013:0 < 0 && v1013:0 < -1
f_735(v1013:0, v885:0, v7613:0) -> f_1096(1 + v1013:0, v885:0, v18429:0) :|: v1013:0 < 1 && v7613:0 < 0 && v1013:0 < 0 && v1013:0 > -1
f_735(v1013:0, v885:0, v7613:0) -> f_1096(1 + v1013:0, v885:0, v18429:0) :|: v1013:0 < 1 && v7613:0 > 0 && v1013:0 < 0 && v1013:0 < -1
f_735(v1013:0, v885:0, v7613:0) -> f_1096(1 + v1013:0, v885:0, v18429:0) :|: v1013:0 < 1 && v7613:0 > 0 && v1013:0 < 0 && v1013:0 > -1
f_1096(v9598:0, v9593:0, v18429:0) -> f_1096(1 + v9598:0, v9593:0, v18429:1) :|: v9598:0 < -1 && v9598:0 < 1 && v18429:0 < 0 && v9598:0 < 0
f_1096(v9598:0, v9593:0, v18429:0) -> f_1096(1 + v9598:0, v9593:0, v18429:1) :|: v9598:0 > -1 && v9598:0 < 1 && v18429:0 < 0 && v9598:0 < 0
f_1096(v9598:0, v9593:0, v18429:0) -> f_1096(1 + v9598:0, v9593:0, v18429:1) :|: v9598:0 < -1 && v9598:0 < 1 && v18429:0 > 0 && v9598:0 < 0
f_1096(v9598:0, v9593:0, v18429:0) -> f_1096(1 + v9598:0, v9593:0, v18429:1) :|: v9598:0 > -1 && v9598:0 < 1 && v18429:0 > 0 && v9598:0 < 0

----------------------------------------

(91)
Obligation:
Rules:
f_735(v1013:0, sum~cons_1~v8659:0, cons_0) -> f_735(v9604:0, v8659:0, v7613:1) :|: v9604:0 < 0 && v9604:0 < 1 && v8659:0 > 0 && sum~cons_1~v8659:0 = 1 + v8659:0 && cons_0 = 0
f_735(x, x1, x2) -> f_735(x3, x4, x5) :|: x3 > 0 && x3 < 1 && x4 > 0 && x1 = 1 + x4 && x2 = 0
f_1096(x6, x7, x8) -> f_735(x9, x10, x11) :|: x9 < 0 && x9 < 1 && x10 > 0 && x7 = 1 + x10 && x8 = 0
f_1096(x12, x13, x14) -> f_735(x15, x16, x17) :|: x15 > 0 && x15 < 1 && x16 > 0 && x13 = 1 + x16 && x14 = 0
f_735(x18, x19, x20) -> f_1096(1 + x18, x19, x21) :|: x18 < 1 && x20 < 0 && x18 < 0 && x18 < -1
f_735(x22, x23, x24) -> f_1096(1 + x22, x23, x25) :|: x22 < 1 && x24 < 0 && x22 < 0 && x22 > -1
f_735(x26, x27, x28) -> f_1096(1 + x26, x27, x29) :|: x26 < 1 && x28 > 0 && x26 < 0 && x26 < -1
f_735(x30, x31, x32) -> f_1096(1 + x30, x31, x33) :|: x30 < 1 && x32 > 0 && x30 < 0 && x30 > -1
f_1096(v9598:0, v9593:0, v18429:0) -> f_1096(1 + v9598:0, v9593:0, v18429:1) :|: v9598:0 < -1 && v9598:0 < 1 && v18429:0 < 0 && v9598:0 < 0
f_1096(x34, x35, x36) -> f_1096(1 + x34, x35, x37) :|: x34 > -1 && x34 < 1 && x36 < 0 && x34 < 0
f_1096(x38, x39, x40) -> f_1096(1 + x38, x39, x41) :|: x38 < -1 && x38 < 1 && x40 > 0 && x38 < 0
f_1096(x42, x43, x44) -> f_1096(1 + x42, x43, x45) :|: x42 > -1 && x42 < 1 && x44 > 0 && x42 < 0

----------------------------------------

(92) TerminationGraphProcessor (EQUIVALENT)
Constructed the termination graph and obtained one non-trivial SCC.

----------------------------------------

(93)
Obligation:
Rules:
f_735(v1013:0, sum~cons_1~v8659:0, cons_0) -> f_735(v9604:0, v8659:0, v7613:1) :|: v9604:0 < 0 && v9604:0 < 1 && v8659:0 > 0 && sum~cons_1~v8659:0 = 1 + v8659:0 && cons_0 = 0
f_1096(x6, x7, x8) -> f_735(x9, x10, x11) :|: x9 < 0 && x9 < 1 && x10 > 0 && x7 = 1 + x10 && x8 = 0
f_735(x18, x19, x20) -> f_1096(1 + x18, x19, x21) :|: x18 < 1 && x20 < 0 && x18 < 0 && x18 < -1
f_735(x26, x27, x28) -> f_1096(1 + x26, x27, x29) :|: x26 < 1 && x28 > 0 && x26 < 0 && x26 < -1
f_1096(v9598:0, v9593:0, v18429:0) -> f_1096(1 + v9598:0, v9593:0, v18429:1) :|: v9598:0 < -1 && v9598:0 < 1 && v18429:0 < 0 && v9598:0 < 0
f_1096(x38, x39, x40) -> f_1096(1 + x38, x39, x41) :|: x38 < -1 && x38 < 1 && x40 > 0 && x38 < 0

----------------------------------------

(94) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(95)
Obligation:
Rules:
f_1096(x6:0, sum~cons_1~x10:0, cons_0) -> f_735(x9:0, x10:0, x11:0) :|: x9:0 < 0 && x9:0 < 1 && x10:0 > 0 && sum~cons_1~x10:0 = 1 + x10:0 && cons_0 = 0
f_735(x26:0, x27:0, x28:0) -> f_1096(1 + x26:0, x27:0, x29:0) :|: x26:0 < 0 && x26:0 < -1 && x28:0 > 0 && x26:0 < 1
f_1096(v9598:0:0, v9593:0:0, v18429:0:0) -> f_1096(1 + v9598:0:0, v9593:0:0, v18429:1:0) :|: v18429:0:0 < 0 && v9598:0:0 < 0 && v9598:0:0 < 1 && v9598:0:0 < -1
f_735(x18:0, x19:0, x20:0) -> f_1096(1 + x18:0, x19:0, x21:0) :|: x18:0 < 0 && x18:0 < -1 && x20:0 < 0 && x18:0 < 1
f_1096(x38:0, x39:0, x40:0) -> f_1096(1 + x38:0, x39:0, x41:0) :|: x40:0 > 0 && x38:0 < 0 && x38:0 < 1 && x38:0 < -1
f_735(x, x1, x2) -> f_735(x3, x4, x5) :|: x3 < 0 && x3 < 1 && x4 > 0 && x1 = 1 + x4 && x2 = 0

----------------------------------------

(96) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_1096 ] = 2*f_1096_2
[ f_735 ] = 2*f_735_2 + 1

The following rules are decreasing:
f_1096(x6:0, sum~cons_1~x10:0, cons_0) -> f_735(x9:0, x10:0, x11:0) :|: x9:0 < 0 && x9:0 < 1 && x10:0 > 0 && sum~cons_1~x10:0 = 1 + x10:0 && cons_0 = 0
f_735(x26:0, x27:0, x28:0) -> f_1096(1 + x26:0, x27:0, x29:0) :|: x26:0 < 0 && x26:0 < -1 && x28:0 > 0 && x26:0 < 1
f_735(x18:0, x19:0, x20:0) -> f_1096(1 + x18:0, x19:0, x21:0) :|: x18:0 < 0 && x18:0 < -1 && x20:0 < 0 && x18:0 < 1
f_735(x, x1, x2) -> f_735(x3, x4, x5) :|: x3 < 0 && x3 < 1 && x4 > 0 && x1 = 1 + x4 && x2 = 0

The following rules are bounded:
f_1096(x6:0, sum~cons_1~x10:0, cons_0) -> f_735(x9:0, x10:0, x11:0) :|: x9:0 < 0 && x9:0 < 1 && x10:0 > 0 && sum~cons_1~x10:0 = 1 + x10:0 && cons_0 = 0


----------------------------------------

(97)
Obligation:
Rules:
f_735(x26:0, x27:0, x28:0) -> f_1096(1 + x26:0, x27:0, x29:0) :|: x26:0 < 0 && x26:0 < -1 && x28:0 > 0 && x26:0 < 1
f_1096(v9598:0:0, v9593:0:0, v18429:0:0) -> f_1096(1 + v9598:0:0, v9593:0:0, v18429:1:0) :|: v18429:0:0 < 0 && v9598:0:0 < 0 && v9598:0:0 < 1 && v9598:0:0 < -1
f_735(x18:0, x19:0, x20:0) -> f_1096(1 + x18:0, x19:0, x21:0) :|: x18:0 < 0 && x18:0 < -1 && x20:0 < 0 && x18:0 < 1
f_1096(x38:0, x39:0, x40:0) -> f_1096(1 + x38:0, x39:0, x41:0) :|: x40:0 > 0 && x38:0 < 0 && x38:0 < 1 && x38:0 < -1
f_735(x, x1, x2) -> f_735(x3, x4, x5) :|: x3 < 0 && x3 < 1 && x4 > 0 && x1 = 1 + x4 && x2 = 0

----------------------------------------

(98) TerminationGraphProcessor (EQUIVALENT)
Constructed the termination graph and obtained 2 non-trivial SCCs.

----------------------------------------

(99)
Complex Obligation (AND)

----------------------------------------

(100)
Obligation:
Rules:
f_735(x, x1, x2) -> f_735(x3, x4, x5) :|: x3 < 0 && x3 < 1 && x4 > 0 && x1 = 1 + x4 && x2 = 0

----------------------------------------

(101) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(102)
Obligation:
Rules:
f_735(x:0, sum~cons_1~x4:0, cons_0) -> f_735(x3:0, x4:0, x5:0) :|: x3:0 < 0 && x3:0 < 1 && x4:0 > 0 && sum~cons_1~x4:0 = 1 + x4:0 && cons_0 = 0

----------------------------------------

(103) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_735(x1, x2, x3) -> f_735(x2, x3)

----------------------------------------

(104)
Obligation:
Rules:
f_735(sum~cons_1~x4:0, cons_0) -> f_735(x4:0, x5:0) :|: x3:0 < 0 && x3:0 < 1 && x4:0 > 0 && sum~cons_1~x4:0 = 1 + x4:0 && cons_0 = 0

----------------------------------------

(105) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_735(x, x1)] = x

The following rules are decreasing:
f_735(sum~cons_1~x4:0, cons_0) -> f_735(x4:0, x5:0) :|: x3:0 < 0 && x3:0 < 1 && x4:0 > 0 && sum~cons_1~x4:0 = 1 + x4:0 && cons_0 = 0
The following rules are bounded:
f_735(sum~cons_1~x4:0, cons_0) -> f_735(x4:0, x5:0) :|: x3:0 < 0 && x3:0 < 1 && x4:0 > 0 && sum~cons_1~x4:0 = 1 + x4:0 && cons_0 = 0

----------------------------------------

(106)
YES

----------------------------------------

(107)
Obligation:
Rules:
f_1096(v9598:0:0, v9593:0:0, v18429:0:0) -> f_1096(1 + v9598:0:0, v9593:0:0, v18429:1:0) :|: v18429:0:0 < 0 && v9598:0:0 < 0 && v9598:0:0 < 1 && v9598:0:0 < -1
f_1096(x38:0, x39:0, x40:0) -> f_1096(1 + x38:0, x39:0, x41:0) :|: x40:0 > 0 && x38:0 < 0 && x38:0 < 1 && x38:0 < -1

----------------------------------------

(108) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(109)
Obligation:
Rules:
f_1096(x38:0:0, x39:0:0, x40:0:0) -> f_1096(1 + x38:0:0, x39:0:0, x41:0:0) :|: x38:0:0 < 1 && x38:0:0 < -1 && x38:0:0 < 0 && x40:0:0 > 0
f_1096(v9598:0:0:0, v9593:0:0:0, v18429:0:0:0) -> f_1096(1 + v9598:0:0:0, v9593:0:0:0, v18429:1:0:0) :|: v9598:0:0:0 < 1 && v9598:0:0:0 < -1 && v9598:0:0:0 < 0 && v18429:0:0:0 < 0

----------------------------------------

(110) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_1096(x1, x2, x3) -> f_1096(x1, x3)

----------------------------------------

(111)
Obligation:
Rules:
f_1096(x38:0:0, x40:0:0) -> f_1096(1 + x38:0:0, x41:0:0) :|: x38:0:0 < 1 && x38:0:0 < -1 && x38:0:0 < 0 && x40:0:0 > 0
f_1096(v9598:0:0:0, v18429:0:0:0) -> f_1096(1 + v9598:0:0:0, v18429:1:0:0) :|: v9598:0:0:0 < 1 && v9598:0:0:0 < -1 && v9598:0:0:0 < 0 && v18429:0:0:0 < 0

----------------------------------------

(112) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_1096(x, x1)] = -x

The following rules are decreasing:
f_1096(x38:0:0, x40:0:0) -> f_1096(1 + x38:0:0, x41:0:0) :|: x38:0:0 < 1 && x38:0:0 < -1 && x38:0:0 < 0 && x40:0:0 > 0
f_1096(v9598:0:0:0, v18429:0:0:0) -> f_1096(1 + v9598:0:0:0, v18429:1:0:0) :|: v9598:0:0:0 < 1 && v9598:0:0:0 < -1 && v9598:0:0:0 < 0 && v18429:0:0:0 < 0
The following rules are bounded:
f_1096(x38:0:0, x40:0:0) -> f_1096(1 + x38:0:0, x41:0:0) :|: x38:0:0 < 1 && x38:0:0 < -1 && x38:0:0 < 0 && x40:0:0 > 0
f_1096(v9598:0:0:0, v18429:0:0:0) -> f_1096(1 + v9598:0:0:0, v18429:1:0:0) :|: v9598:0:0:0 < 1 && v9598:0:0:0 < -1 && v9598:0:0:0 < 0 && v18429:0:0:0 < 0

----------------------------------------

(113)
YES

----------------------------------------

(114)
Obligation:
SCC
----------------------------------------

(115) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 27 rulesP rules:
f_498(v1, v3, v5, v7, v10, 1, v15, v25, 0, v883, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_509(v1, v3, v5, v7, v10, 1, v15, v25, 0, v883, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: TRUE
f_509(v1, v3, v5, v7, v10, 1, v15, v25, 0, v883, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_519(v1, v3, v5, v7, v10, 1, v15, v25, 0, v883, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: 0 = 0
f_519(v1, v3, v5, v7, v10, 1, v15, v25, 0, v883, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_529(v1, v3, v5, v7, v10, 1, v15, v25, 0, v883, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: 0 = 0
f_529(v1, v3, v5, v7, v10, 1, v15, v25, 0, v883, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_539(v1, v3, v5, v7, v10, 1, v15, v25, 0, v883, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: 0 = 0
f_539(v1, v3, v5, v7, v10, 1, v15, v25, 0, v883, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_549(v1, v3, v5, v7, v10, 1, v15, v25, 0, v883, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: TRUE
f_549(v1, v3, v5, v7, v10, 1, v15, v25, 0, v883, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_559(v1, v3, v5, v7, v10, 1, v15, v25, 0, v883, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: 0 = 0
f_559(v1, v3, v5, v7, v10, 1, v15, v25, 0, v883, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_569(v1, v3, v5, v7, v10, 1, v883, v25, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: 0 = 0
f_569(v1, v3, v5, v7, v10, 1, v883, v25, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_579(v1, v3, v5, v7, v10, 1, v883, v25, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: 0 < v883 && 2 <= v15
f_579(v1, v3, v5, v7, v10, 1, v883, v25, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_591(v1, v3, v5, v7, v10, 1, v883, v25, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: 0 = 0
f_591(v1, v3, v5, v7, v10, 1, v883, v25, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_603(v1, v3, v5, v7, v10, 1, v883, v25, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: 0 = 0
f_603(v1, v3, v5, v7, v10, 1, v883, v25, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_615(v1, v3, v5, v7, v10, 1, v883, v25, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: TRUE
f_615(v1, v3, v5, v7, v10, 1, v883, v25, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_628(v1, v3, v5, v7, v10, 1, v883, v25, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: 0 = 0
f_628(v1, v3, v5, v7, v10, 1, v883, v25, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_642(v1, v3, v5, v7, v10, 1, v883, v25, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: 0 = 0
f_642(v1, v3, v5, v7, v10, 1, v883, v25, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_654(v1, v3, v5, v7, v10, 1, v883, v25, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: 0 = 0
f_654(v1, v3, v5, v7, v10, 1, v883, v25, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_666(v1, v3, v5, v7, v10, 1, v883, v25, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: TRUE
f_666(v1, v3, v5, v7, v10, 1, v883, v25, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_676(v1, v3, v5, v7, v10, 1, v883, v25, 0, v6509, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: TRUE
f_676(v1, v3, v5, v7, v10, 1, v883, v25, 0, v6509, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_687(v1, v3, v5, v7, v10, 1, v883, v25, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: v6509 = 0
f_687(v1, v3, v5, v7, v10, 1, v883, v25, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_696(v1, v3, v5, v7, v10, 1, v883, v25, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: 0 = 0
f_696(v1, v3, v5, v7, v10, 1, v883, v25, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_707(v1, v3, v5, v7, v10, 1, v883, v25, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: TRUE
f_707(v1, v3, v5, v7, v10, 1, v883, v25, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_720(v1, v3, v5, v7, v10, 1, v883, v25, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: 0 = 0
f_720(v1, v3, v5, v7, v10, 1, v883, v25, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_733(v1, v3, v5, v7, v10, 1, v883, v25, 0, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: 0 = 0
f_733(v1, v3, v5, v7, v10, 1, v883, v25, 0, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_748(v1, v3, v5, v7, v10, 1, v883, v25, 0, v7833, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: 1 + v7833 = v883 && 0 <= v7833
f_748(v1, v3, v5, v7, v10, 1, v883, v25, 0, v7833, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_763(v1, v3, v5, v7, v10, 1, v883, v25, 0, v7833, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: 0 = 0
f_763(v1, v3, v5, v7, v10, 1, v883, v25, 0, v7833, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_778(v1, v3, v5, v7, v10, 1, v883, v25, 0, v7833, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: TRUE
f_778(v1, v3, v5, v7, v10, 1, v883, v25, 0, v7833, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_795(v1, v3, v5, v7, v10, 1, v883, v25, 0, v7833, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: TRUE
f_795(v1, v3, v5, v7, v10, 1, v883, v25, 0, v7833, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_486(v1, v3, v5, v7, v10, 1, v883, v25, 0, v7833, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: TRUE
f_486(v1, v3, v5, v7, v10, 1, v15, v25, 0, v883, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_498(v1, v3, v5, v7, v10, 1, v15, v25, 0, v883, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: TRUE
Combined rules. Obtained 1 rulesP rules:
f_498(v1:0, v3:0, v5:0, v7:0, v10:0, 1, v15:0, v25:0, 0, 1 + v7833:0, v2:0, v4:0, v6:0, v8:0, v11:0, 3, 7, 4, 8) -> f_498(v1:0, v3:0, v5:0, v7:0, v10:0, 1, 1 + v7833:0, v25:0, 0, v7833:0, v2:0, v4:0, v6:0, v8:0, v11:0, 3, 7, 4, 8) :|: v15:0 > 1 && v7833:0 > -1
Filtered unneeded arguments:
   f_498(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19) -> f_498(x7, x10)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_498(v15:0, sum~cons_1~v7833:0) -> f_498(1 + v7833:0, v7833:0) :|: v15:0 > 1 && v7833:0 > -1 && sum~cons_1~v7833:0 = 1 + v7833:0

----------------------------------------

(116)
Obligation:
Rules:
f_498(v15:0, sum~cons_1~v7833:0) -> f_498(1 + v7833:0, v7833:0) :|: v15:0 > 1 && v7833:0 > -1 && sum~cons_1~v7833:0 = 1 + v7833:0

----------------------------------------

(117) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(118)
Obligation:
Rules:
f_498(v15:0:0, sum~cons_1~v7833:0:0) -> f_498(1 + v7833:0:0, v7833:0:0) :|: v15:0:0 > 1 && v7833:0:0 > -1 && sum~cons_1~v7833:0:0 = 1 + v7833:0:0

----------------------------------------

(119) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_498(x, x1)] = x1

The following rules are decreasing:
f_498(v15:0:0, sum~cons_1~v7833:0:0) -> f_498(1 + v7833:0:0, v7833:0:0) :|: v15:0:0 > 1 && v7833:0:0 > -1 && sum~cons_1~v7833:0:0 = 1 + v7833:0:0
The following rules are bounded:
f_498(v15:0:0, sum~cons_1~v7833:0:0) -> f_498(1 + v7833:0:0, v7833:0:0) :|: v15:0:0 > 1 && v7833:0:0 > -1 && sum~cons_1~v7833:0:0 = 1 + v7833:0:0

----------------------------------------

(120)
YES

----------------------------------------

(121)
Obligation:
SCC
----------------------------------------

(122) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 32 rulesP rules:
f_304(v1, v3, v5, v7, v10, v13, 1, v15, 0, v29, v35, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_309(v1, v3, v5, v7, v10, v13, 1, v15, 0, v29, v35, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: TRUE
f_309(v1, v3, v5, v7, v10, v13, 1, v15, 0, v29, v35, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_314(v1, v3, v5, v7, v10, v13, 1, v15, 0, v29, v35, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: 0 = 0
f_314(v1, v3, v5, v7, v10, v13, 1, v15, 0, v29, v35, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_319(v1, v3, v5, v7, v10, v35, 1, v15, v13, 0, v29, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: 0 = 0
f_319(v1, v3, v5, v7, v10, v35, 1, v15, v13, 0, v29, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_325(v1, v3, v5, v7, v10, v35, 1, v15, v13, 0, v29, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: v35 != 0
f_325(v1, v3, v5, v7, v10, v35, 1, v15, v13, 0, v29, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_333(v1, v3, v5, v7, v10, v35, 1, v15, v13, 0, v29, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: 0 = 0
f_333(v1, v3, v5, v7, v10, v35, 1, v15, v13, 0, v29, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_340(v1, v3, v5, v7, v10, v35, 1, v15, v13, 0, v29, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: TRUE
f_340(v1, v3, v5, v7, v10, v35, 1, v15, v13, 0, v29, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_347(v1, v3, v5, v7, v10, v35, 1, v15, v13, 0, v29, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: 0 = 0
f_347(v1, v3, v5, v7, v10, v35, 1, v15, v13, 0, v29, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_354(v1, v3, v5, v7, v10, v35, 1, v29, v13, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: 0 = 0
f_354(v1, v3, v5, v7, v10, v35, 1, v29, v13, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_361(v1, v3, v5, v7, v10, v35, 1, v29, v13, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: 0 < v29 && 2 <= v15
f_361(v1, v3, v5, v7, v10, v35, 1, v29, v13, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_367(v1, v3, v5, v7, v10, v35, 1, v29, v13, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: 0 = 0
f_367(v1, v3, v5, v7, v10, v35, 1, v29, v13, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_374(v1, v3, v5, v7, v10, v35, 1, v29, v13, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: 0 = 0
f_374(v1, v3, v5, v7, v10, v35, 1, v29, v13, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_381(v1, v3, v5, v7, v10, v35, 1, v29, v13, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: TRUE
f_381(v1, v3, v5, v7, v10, v35, 1, v29, v13, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_388(v1, v3, v5, v7, v10, v35, 1, v29, v13, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: 0 = 0
f_388(v1, v3, v5, v7, v10, v35, 1, v29, v13, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_395(v1, v3, v5, v7, v10, v35, 1, v29, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: 0 = 0
f_395(v1, v3, v5, v7, v10, v35, 1, v29, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_404(v1, v3, v5, v7, v10, v35, 1, v29, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: v35 <= 0
f_404(v1, v3, v5, v7, v10, v35, 1, v29, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_413(v1, v3, v5, v7, v10, v35, 1, v29, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: 0 = 0
f_413(v1, v3, v5, v7, v10, v35, 1, v29, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_422(v1, v3, v5, v7, v10, v35, 1, v29, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: TRUE
f_422(v1, v3, v5, v7, v10, v35, 1, v29, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_432(v1, v3, v5, v7, v10, v35, 1, v29, 0, v852, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: TRUE
f_432(v1, v3, v5, v7, v10, v35, 1, v29, 0, v852, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_444(v1, v3, v5, v7, v10, v35, 1, v29, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: v852 = 0
f_444(v1, v3, v5, v7, v10, v35, 1, v29, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_456(v1, v3, v5, v7, v10, v35, 1, v29, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: 0 = 0
f_456(v1, v3, v5, v7, v10, v35, 1, v29, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_468(v1, v3, v5, v7, v10, v35, 1, v29, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: TRUE
f_468(v1, v3, v5, v7, v10, v35, 1, v29, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_480(v1, v3, v5, v7, v10, v35, 1, v29, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: 0 = 0
f_480(v1, v3, v5, v7, v10, v35, 1, v29, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_492(v1, v3, v5, v7, v10, v35, 1, v29, 0, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: 0 = 0
f_492(v1, v3, v5, v7, v10, v35, 1, v29, 0, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_504(v1, v3, v5, v7, v10, v35, 1, v29, 0, v1126, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: 1 + v1126 = v29 && 0 <= v1126
f_504(v1, v3, v5, v7, v10, v35, 1, v29, 0, v1126, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_514(v1, v3, v5, v7, v10, v35, 1, v29, 0, v1126, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: 0 = 0
f_514(v1, v3, v5, v7, v10, v35, 1, v29, 0, v1126, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_524(v1, v3, v5, v7, v10, v35, 1, v29, 0, v1126, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: TRUE
f_524(v1, v3, v5, v7, v10, v35, 1, v29, 0, v1126, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_534(v1, v3, v5, v7, v10, v35, 1, v29, 0, v1126, v1651, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: TRUE
f_534(v1, v3, v5, v7, v10, v35, 1, v29, 0, v1126, v1651, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_544(v1, v3, v5, v7, v10, v35, 1, v29, 0, v1126, v1651, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: 0 = 0
f_544(v1, v3, v5, v7, v10, v35, 1, v29, 0, v1126, v1651, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_554(v1, v3, v5, v7, v10, v35, 1, v29, 0, v1126, v1651, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: TRUE
f_554(v1, v3, v5, v7, v10, v35, 1, v29, 0, v1126, v1651, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_564(v1, v3, v5, v7, v10, v35, 1, v29, 0, v1126, v1651, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: TRUE
f_564(v1, v3, v5, v7, v10, v35, 1, v29, 0, v1126, v1651, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_300(v1, v3, v5, v7, v10, v35, 1, v29, 0, v1126, v1651, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: TRUE
f_300(v1, v3, v5, v7, v10, v13, 1, v15, 0, v29, v35, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_304(v1, v3, v5, v7, v10, v13, 1, v15, 0, v29, v35, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: TRUE
Combined rules. Obtained 2 rulesP rules:
f_304(v1:0, v3:0, v5:0, v7:0, v10:0, v13:0, 1, v15:0, 0, 1 + v1126:0, v35:0, v2:0, v4:0, v6:0, v8:0, v11:0, 3, 7, 4, 8) -> f_304(v1:0, v3:0, v5:0, v7:0, v10:0, v35:0, 1, 1 + v1126:0, 0, v1126:0, v1651:0, v2:0, v4:0, v6:0, v8:0, v11:0, 3, 7, 4, 8) :|: v35:0 < 0 && v15:0 > 1 && v1126:0 > -1 && v35:0 < 1
f_304(v1:0, v3:0, v5:0, v7:0, v10:0, v13:0, 1, v15:0, 0, 1 + v1126:0, v35:0, v2:0, v4:0, v6:0, v8:0, v11:0, 3, 7, 4, 8) -> f_304(v1:0, v3:0, v5:0, v7:0, v10:0, v35:0, 1, 1 + v1126:0, 0, v1126:0, v1651:0, v2:0, v4:0, v6:0, v8:0, v11:0, 3, 7, 4, 8) :|: v35:0 > 0 && v15:0 > 1 && v1126:0 > -1 && v35:0 < 1
Filtered unneeded arguments:
   f_304(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20) -> f_304(x8, x10, x11)
Removed division, modulo operations, cleaned up constraints. Obtained 2 rules.P rules:
f_304(v15:0, sum~cons_1~v1126:0, v35:0) -> f_304(1 + v1126:0, v1126:0, v1651:0) :|: v15:0 > 1 && v35:0 < 0 && v35:0 < 1 && v1126:0 > -1 && sum~cons_1~v1126:0 = 1 + v1126:0
f_304(v15:0, sum~cons_1~v1126:0, v35:0) -> f_304(1 + v1126:0, v1126:0, v1651:0) :|: v15:0 > 1 && v35:0 > 0 && v35:0 < 1 && v1126:0 > -1 && sum~cons_1~v1126:0 = 1 + v1126:0

----------------------------------------

(123)
Obligation:
Rules:
f_304(v15:0, sum~cons_1~v1126:0, v35:0) -> f_304(1 + v1126:0, v1126:0, v1651:0) :|: v15:0 > 1 && v35:0 < 0 && v35:0 < 1 && v1126:0 > -1 && sum~cons_1~v1126:0 = 1 + v1126:0
f_304(x, x1, x2) -> f_304(1 + x3, x3, x4) :|: x > 1 && x2 > 0 && x2 < 1 && x3 > -1 && x1 = 1 + x3

----------------------------------------

(124) TerminationGraphProcessor (EQUIVALENT)
Constructed the termination graph and obtained one non-trivial SCC.

----------------------------------------

(125)
Obligation:
Rules:
f_304(v15:0, sum~cons_1~v1126:0, v35:0) -> f_304(1 + v1126:0, v1126:0, v1651:0) :|: v15:0 > 1 && v35:0 < 0 && v35:0 < 1 && v1126:0 > -1 && sum~cons_1~v1126:0 = 1 + v1126:0

----------------------------------------

(126) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(127)
Obligation:
Rules:
f_304(v15:0:0, sum~cons_1~v1126:0:0, v35:0:0) -> f_304(1 + v1126:0:0, v1126:0:0, v1651:0:0) :|: v35:0:0 < 1 && v1126:0:0 > -1 && v35:0:0 < 0 && v15:0:0 > 1 && sum~cons_1~v1126:0:0 = 1 + v1126:0:0

----------------------------------------

(128) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_304 ] = f_304_2

The following rules are decreasing:
f_304(v15:0:0, sum~cons_1~v1126:0:0, v35:0:0) -> f_304(1 + v1126:0:0, v1126:0:0, v1651:0:0) :|: v35:0:0 < 1 && v1126:0:0 > -1 && v35:0:0 < 0 && v15:0:0 > 1 && sum~cons_1~v1126:0:0 = 1 + v1126:0:0

The following rules are bounded:
f_304(v15:0:0, sum~cons_1~v1126:0:0, v35:0:0) -> f_304(1 + v1126:0:0, v1126:0:0, v1651:0:0) :|: v35:0:0 < 1 && v1126:0:0 > -1 && v35:0:0 < 0 && v15:0:0 > 1 && sum~cons_1~v1126:0:0 = 1 + v1126:0:0


----------------------------------------

(129)
YES

----------------------------------------

(130)
Obligation:
SCC
----------------------------------------

(131) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 31 rulesP rules:
f_301(v1, v3, v5, v7, v10, v13, 1, v15, v24, v26, v34, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8) -> f_305(v1, v3, v5, v7, v10, v13, 1, v15, v24, v26, v34, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8) :|: TRUE
f_305(v1, v3, v5, v7, v10, v13, 1, v15, v24, v26, v34, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8) -> f_310(v1, v3, v5, v7, v10, v13, 1, v15, v24, v26, v34, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8) :|: 0 = 0
f_310(v1, v3, v5, v7, v10, v13, 1, v15, v24, v26, v34, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8) -> f_315(v1, v3, v5, v7, v10, v26, 1, v15, v13, v24, v34, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8) :|: 0 = 0
f_315(v1, v3, v5, v7, v10, v26, 1, v15, v13, v24, v34, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8) -> f_320(v1, v3, v5, v7, v10, v26, 1, v15, v13, v24, v34, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8, 2) :|: 0 < v26 && 2 <= v13
f_320(v1, v3, v5, v7, v10, v26, 1, v15, v13, v24, v34, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8, 2) -> f_327(v1, v3, v5, v7, v10, v26, 1, v15, v13, v24, v34, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8, 2) :|: 0 = 0
f_327(v1, v3, v5, v7, v10, v26, 1, v15, v13, v24, v34, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8, 2) -> f_335(v1, v3, v5, v7, v10, v26, 1, v15, v13, v24, v34, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8, 2) :|: TRUE
f_335(v1, v3, v5, v7, v10, v26, 1, v15, v13, v24, v34, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8, 2) -> f_342(v1, v3, v5, v7, v10, v26, 1, v15, v13, v24, v34, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8, 2) :|: 0 = 0
f_342(v1, v3, v5, v7, v10, v26, 1, v15, v13, v24, v34, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8, 2) -> f_349(v1, v3, v5, v7, v10, v26, 1, v34, v13, v24, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8, 2) :|: 0 = 0
f_349(v1, v3, v5, v7, v10, v26, 1, v34, v13, v24, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8, 2) -> f_356(v1, v3, v5, v7, v10, v26, 1, v34, v13, v24, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8, 2) :|: 0 < v34
f_356(v1, v3, v5, v7, v10, v26, 1, v34, v13, v24, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8, 2) -> f_363(v1, v3, v5, v7, v10, v26, 1, v34, v13, v24, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8, 2) :|: 0 = 0
f_363(v1, v3, v5, v7, v10, v26, 1, v34, v13, v24, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8, 2) -> f_369(v1, v3, v5, v7, v10, v26, 1, v34, v13, v24, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8, 2) :|: 0 = 0
f_369(v1, v3, v5, v7, v10, v26, 1, v34, v13, v24, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8, 2) -> f_376(v1, v3, v5, v7, v10, v26, 1, v34, v13, v24, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8, 2) :|: TRUE
f_376(v1, v3, v5, v7, v10, v26, 1, v34, v13, v24, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8, 2) -> f_383(v1, v3, v5, v7, v10, v26, 1, v34, v13, v24, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8, 2) :|: 0 = 0
f_383(v1, v3, v5, v7, v10, v26, 1, v34, v13, v24, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8, 2) -> f_390(v1, v3, v5, v7, v10, v26, 1, v34, v24, v13, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8, 2) :|: 0 = 0
f_390(v1, v3, v5, v7, v10, v26, 1, v34, v24, v13, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8, 2) -> f_396(v1, v3, v5, v7, v10, v26, 1, v34, v24, v13, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8, 2) :|: 0 = 0
f_396(v1, v3, v5, v7, v10, v26, 1, v34, v24, v13, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8, 2) -> f_405(v1, v3, v5, v7, v10, v26, 1, v34, v24, v13, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8, 2) :|: TRUE
f_405(v1, v3, v5, v7, v10, v26, 1, v34, v24, v13, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8, 2) -> f_414(v1, v3, v5, v7, v10, v26, 1, v34, v802, v13, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8, 2) :|: TRUE
f_414(v1, v3, v5, v7, v10, v26, 1, v34, v802, v13, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8, 2) -> f_423(v1, v3, v5, v7, v10, v26, 1, v34, v802, v13, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8, 2) :|: v802 != 0
f_423(v1, v3, v5, v7, v10, v26, 1, v34, v802, v13, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8, 2) -> f_433(v1, v3, v5, v7, v10, v26, 1, v34, v802, v13, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8, 2) :|: 0 = 0
f_433(v1, v3, v5, v7, v10, v26, 1, v34, v802, v13, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8, 2) -> f_445(v1, v3, v5, v7, v10, v26, 1, v34, v802, v13, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8, 2) :|: TRUE
f_445(v1, v3, v5, v7, v10, v26, 1, v34, v802, v13, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8, 2) -> f_457(v1, v3, v5, v7, v10, v26, 1, v34, v802, v13, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8, 2) :|: 0 = 0
f_457(v1, v3, v5, v7, v10, v26, 1, v34, v802, v13, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8, 2) -> f_469(v1, v3, v5, v7, v10, v26, 1, v34, v802, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8) :|: 0 = 0
f_469(v1, v3, v5, v7, v10, v26, 1, v34, v802, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8) -> f_481(v1, v3, v5, v7, v10, v26, 1, v34, v802, v965, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8) :|: 1 + v965 = v26 && 0 <= v965
f_481(v1, v3, v5, v7, v10, v26, 1, v34, v802, v965, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8) -> f_493(v1, v3, v5, v7, v10, v26, 1, v34, v802, v965, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8) :|: 0 = 0
f_493(v1, v3, v5, v7, v10, v26, 1, v34, v802, v965, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8) -> f_505(v1, v3, v5, v7, v10, v26, 1, v34, v802, v965, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8) :|: TRUE
f_505(v1, v3, v5, v7, v10, v26, 1, v34, v802, v965, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8) -> f_515(v1, v3, v5, v7, v10, v26, 1, v34, v802, v965, v1194, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8) :|: TRUE
f_515(v1, v3, v5, v7, v10, v26, 1, v34, v802, v965, v1194, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8) -> f_525(v1, v3, v5, v7, v10, v26, 1, v34, v802, v965, v1194, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8) :|: 0 = 0
f_525(v1, v3, v5, v7, v10, v26, 1, v34, v802, v965, v1194, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8) -> f_535(v1, v3, v5, v7, v10, v26, 1, v34, v802, v965, v1194, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8) :|: TRUE
f_535(v1, v3, v5, v7, v10, v26, 1, v34, v802, v965, v1194, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8) -> f_545(v1, v3, v5, v7, v10, v26, 1, v34, v802, v965, v1194, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8) :|: TRUE
f_545(v1, v3, v5, v7, v10, v26, 1, v34, v802, v965, v1194, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8) -> f_297(v1, v3, v5, v7, v10, v26, 1, v34, v802, v965, v1194, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8) :|: TRUE
f_297(v1, v3, v5, v7, v10, v13, 1, v15, v24, v26, v34, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8) -> f_301(v1, v3, v5, v7, v10, v13, 1, v15, v24, v26, v34, v2, v4, v6, v8, v11, 0, 3, 7, 4, 8) :|: TRUE
Combined rules. Obtained 2 rulesP rules:
f_301(v1:0, v3:0, v5:0, v7:0, v10:0, v13:0, 1, v15:0, v24:0, 1 + v965:0, v34:0, v2:0, v4:0, v6:0, v8:0, v11:0, 0, 3, 7, 4, 8) -> f_301(v1:0, v3:0, v5:0, v7:0, v10:0, 1 + v965:0, 1, v34:0, v802:0, v965:0, v1194:0, v2:0, v4:0, v6:0, v8:0, v11:0, 0, 3, 7, 4, 8) :|: v13:0 > 1 && v965:0 > -1 && v34:0 > 0 && v802:0 < 0
f_301(v1:0, v3:0, v5:0, v7:0, v10:0, v13:0, 1, v15:0, v24:0, 1 + v965:0, v34:0, v2:0, v4:0, v6:0, v8:0, v11:0, 0, 3, 7, 4, 8) -> f_301(v1:0, v3:0, v5:0, v7:0, v10:0, 1 + v965:0, 1, v34:0, v802:0, v965:0, v1194:0, v2:0, v4:0, v6:0, v8:0, v11:0, 0, 3, 7, 4, 8) :|: v13:0 > 1 && v965:0 > -1 && v34:0 > 0 && v802:0 > 0
Filtered unneeded arguments:
   f_301(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21) -> f_301(x6, x10, x11)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_301(v13:0, sum~cons_1~v965:0, v34:0) -> f_301(1 + v965:0, v965:0, v1194:0) :|: v965:0 > -1 && v34:0 > 0 && v13:0 > 1 && sum~cons_1~v965:0 = 1 + v965:0

----------------------------------------

(132)
Obligation:
Rules:
f_301(v13:0, sum~cons_1~v965:0, v34:0) -> f_301(1 + v965:0, v965:0, v1194:0) :|: v965:0 > -1 && v34:0 > 0 && v13:0 > 1 && sum~cons_1~v965:0 = 1 + v965:0

----------------------------------------

(133) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(134)
Obligation:
Rules:
f_301(v13:0:0, sum~cons_1~v965:0:0, v34:0:0) -> f_301(1 + v965:0:0, v965:0:0, v1194:0:0) :|: v965:0:0 > -1 && v34:0:0 > 0 && v13:0:0 > 1 && sum~cons_1~v965:0:0 = 1 + v965:0:0

----------------------------------------

(135) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_301(x, x1, x2)] = x1

The following rules are decreasing:
f_301(v13:0:0, sum~cons_1~v965:0:0, v34:0:0) -> f_301(1 + v965:0:0, v965:0:0, v1194:0:0) :|: v965:0:0 > -1 && v34:0:0 > 0 && v13:0:0 > 1 && sum~cons_1~v965:0:0 = 1 + v965:0:0
The following rules are bounded:
f_301(v13:0:0, sum~cons_1~v965:0:0, v34:0:0) -> f_301(1 + v965:0:0, v965:0:0, v1194:0:0) :|: v965:0:0 > -1 && v34:0:0 > 0 && v13:0:0 > 1 && sum~cons_1~v965:0:0 = 1 + v965:0:0

----------------------------------------

(136)
YES

----------------------------------------

(137)
Obligation:
SCC
----------------------------------------

(138) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 27 rulesP rules:
f_298(v1, v3, v5, v7, v10, v13, 1, v15, 0, v27, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_302(v1, v3, v5, v7, v10, v13, 1, v15, 0, v27, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: 0 = 0
f_302(v1, v3, v5, v7, v10, v13, 1, v15, 0, v27, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_306(v1, v3, v5, v7, v10, v13, 1, v15, 0, v27, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: 0 = 0
f_306(v1, v3, v5, v7, v10, v13, 1, v15, 0, v27, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_311(v1, v3, v5, v7, v10, v13, 1, v15, 0, v27, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: TRUE
f_311(v1, v3, v5, v7, v10, v13, 1, v15, 0, v27, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_316(v1, v3, v5, v7, v10, v13, 1, v15, 0, v27, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: 0 = 0
f_316(v1, v3, v5, v7, v10, v13, 1, v15, 0, v27, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_322(v1, v3, v5, v7, v10, v13, 1, v27, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: 0 = 0
f_322(v1, v3, v5, v7, v10, v13, 1, v27, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_329(v1, v3, v5, v7, v10, v13, 1, v27, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: 0 < v27 && 2 <= v15
f_329(v1, v3, v5, v7, v10, v13, 1, v27, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_337(v1, v3, v5, v7, v10, v13, 1, v27, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: 0 = 0
f_337(v1, v3, v5, v7, v10, v13, 1, v27, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_344(v1, v3, v5, v7, v10, v13, 1, v27, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: 0 = 0
f_344(v1, v3, v5, v7, v10, v13, 1, v27, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_351(v1, v3, v5, v7, v10, v13, 1, v27, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: TRUE
f_351(v1, v3, v5, v7, v10, v13, 1, v27, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_358(v1, v3, v5, v7, v10, v13, 1, v27, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: 0 = 0
f_358(v1, v3, v5, v7, v10, v13, 1, v27, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_365(v1, v3, v5, v7, v10, v13, 1, v27, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: 0 = 0
f_365(v1, v3, v5, v7, v10, v13, 1, v27, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_371(v1, v3, v5, v7, v10, v13, 1, v27, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: 0 = 0
f_371(v1, v3, v5, v7, v10, v13, 1, v27, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_378(v1, v3, v5, v7, v10, v13, 1, v27, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: TRUE
f_378(v1, v3, v5, v7, v10, v13, 1, v27, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_385(v1, v3, v5, v7, v10, v13, 1, v27, v778, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: TRUE
f_385(v1, v3, v5, v7, v10, v13, 1, v27, v778, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_392(v1, v3, v5, v7, v10, v13, 1, v27, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: v778 = 0
f_392(v1, v3, v5, v7, v10, v13, 1, v27, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_398(v1, v3, v5, v7, v10, v13, 1, v27, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: 0 = 0
f_398(v1, v3, v5, v7, v10, v13, 1, v27, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_407(v1, v3, v5, v7, v10, v13, 1, v27, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: TRUE
f_407(v1, v3, v5, v7, v10, v13, 1, v27, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_416(v1, v3, v5, v7, v10, v13, 1, v27, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) :|: 0 = 0
f_416(v1, v3, v5, v7, v10, v13, 1, v27, 0, v15, v2, v4, v6, v8, v11, 3, 7, 4, 8, 2) -> f_426(v1, v3, v5, v7, v10, v13, 1, v27, 0, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: 0 = 0
f_426(v1, v3, v5, v7, v10, v13, 1, v27, 0, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_436(v1, v3, v5, v7, v10, v13, 1, v27, 0, v854, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: 1 + v854 = v27 && 0 <= v854
f_436(v1, v3, v5, v7, v10, v13, 1, v27, 0, v854, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_448(v1, v3, v5, v7, v10, v13, 1, v27, 0, v854, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: 0 = 0
f_448(v1, v3, v5, v7, v10, v13, 1, v27, 0, v854, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_460(v1, v3, v5, v7, v10, v13, 1, v27, 0, v854, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: TRUE
f_460(v1, v3, v5, v7, v10, v13, 1, v27, 0, v854, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_472(v1, v3, v5, v7, v10, v13, 1, v27, 0, v854, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: TRUE
f_472(v1, v3, v5, v7, v10, v13, 1, v27, 0, v854, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_484(v1, v3, v5, v7, v10, v13, 1, v27, 0, v854, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: TRUE
f_484(v1, v3, v5, v7, v10, v13, 1, v27, 0, v854, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_496(v1, v3, v5, v7, v10, v13, 1, v27, 0, v854, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: TRUE
f_496(v1, v3, v5, v7, v10, v13, 1, v27, 0, v854, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_294(v1, v3, v5, v7, v10, v13, 1, v27, 0, v854, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: TRUE
f_294(v1, v3, v5, v7, v10, v13, 1, v15, 0, v27, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_298(v1, v3, v5, v7, v10, v13, 1, v15, 0, v27, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_298(v1:0, v3:0, v5:0, v7:0, v10:0, v13:0, 1, v15:0, 0, 1 + v854:0, v2:0, v4:0, v6:0, v8:0, v11:0, 3, 7, 4, 8) -> f_298(v1:0, v3:0, v5:0, v7:0, v10:0, v13:0, 1, 1 + v854:0, 0, v854:0, v2:0, v4:0, v6:0, v8:0, v11:0, 3, 7, 4, 8) :|: v15:0 > 1 && v854:0 > -1
Filtered unneeded arguments:
   f_298(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19) -> f_298(x8, x10)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_298(v15:0, sum~cons_1~v854:0) -> f_298(1 + v854:0, v854:0) :|: v15:0 > 1 && v854:0 > -1 && sum~cons_1~v854:0 = 1 + v854:0

----------------------------------------

(139)
Obligation:
Rules:
f_298(v15:0, sum~cons_1~v854:0) -> f_298(1 + v854:0, v854:0) :|: v15:0 > 1 && v854:0 > -1 && sum~cons_1~v854:0 = 1 + v854:0

----------------------------------------

(140) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(141)
Obligation:
Rules:
f_298(v15:0:0, sum~cons_1~v854:0:0) -> f_298(1 + v854:0:0, v854:0:0) :|: v15:0:0 > 1 && v854:0:0 > -1 && sum~cons_1~v854:0:0 = 1 + v854:0:0

----------------------------------------

(142) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_298(x, x1)] = x1

The following rules are decreasing:
f_298(v15:0:0, sum~cons_1~v854:0:0) -> f_298(1 + v854:0:0, v854:0:0) :|: v15:0:0 > 1 && v854:0:0 > -1 && sum~cons_1~v854:0:0 = 1 + v854:0:0
The following rules are bounded:
f_298(v15:0:0, sum~cons_1~v854:0:0) -> f_298(1 + v854:0:0, v854:0:0) :|: v15:0:0 > 1 && v854:0:0 > -1 && sum~cons_1~v854:0:0 = 1 + v854:0:0

----------------------------------------

(143)
YES

----------------------------------------

(144)
Obligation:
SCC
----------------------------------------

(145) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 28 rulesP rules:
f_295(v1, v3, v5, v7, v10, v13, 1, v15, 0, v25, v28, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_299(v1, v3, v5, v7, v10, v13, 1, v15, 0, v25, v28, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: 0 = 0
f_299(v1, v3, v5, v7, v10, v13, 1, v15, 0, v25, v28, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_303(v1, v3, v5, v7, v10, v28, 1, v15, v13, 0, v25, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: 0 = 0
f_303(v1, v3, v5, v7, v10, v28, 1, v15, v13, 0, v25, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_307(v1, v3, v5, v7, v10, v28, 1, v15, v13, 0, v25, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: v28 != 0
f_307(v1, v3, v5, v7, v10, v28, 1, v15, v13, 0, v25, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_312(v1, v3, v5, v7, v10, v28, 1, v15, v13, 0, v25, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: 0 = 0
f_312(v1, v3, v5, v7, v10, v28, 1, v15, v13, 0, v25, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_317(v1, v3, v5, v7, v10, v28, 1, v15, v13, 0, v25, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: TRUE
f_317(v1, v3, v5, v7, v10, v28, 1, v15, v13, 0, v25, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_323(v1, v3, v5, v7, v10, v28, 1, v15, v13, 0, v25, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: 0 = 0
f_323(v1, v3, v5, v7, v10, v28, 1, v15, v13, 0, v25, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_331(v1, v3, v5, v7, v10, v28, 1, v15, v13, 0, v25, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: 0 = 0
f_331(v1, v3, v5, v7, v10, v28, 1, v15, v13, 0, v25, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_339(v1, v3, v5, v7, v10, v28, 1, v15, v13, 0, v25, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: 0 = 0
f_339(v1, v3, v5, v7, v10, v28, 1, v15, v13, 0, v25, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_346(v1, v3, v5, v7, v10, v28, 1, v15, v13, 0, v25, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: 0 = 0
f_346(v1, v3, v5, v7, v10, v28, 1, v15, v13, 0, v25, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_353(v1, v3, v5, v7, v10, v28, 1, v15, v13, 0, v25, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: TRUE
f_353(v1, v3, v5, v7, v10, v28, 1, v15, v13, 0, v25, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_360(v1, v3, v5, v7, v10, v28, 1, v15, v13, 0, v25, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: 0 = 0
f_360(v1, v3, v5, v7, v10, v28, 1, v15, v13, 0, v25, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_366(v1, v3, v5, v7, v10, v28, 1, v15, 0, v25, v13, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: 0 = 0
f_366(v1, v3, v5, v7, v10, v28, 1, v15, 0, v25, v13, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_373(v1, v3, v5, v7, v10, v28, 1, v15, 0, v25, v13, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: v28 <= 0 && 1 + v13 <= 0
f_373(v1, v3, v5, v7, v10, v28, 1, v15, 0, v25, v13, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_380(v1, v3, v5, v7, v10, v28, 1, v15, 0, v25, v13, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: 0 = 0
f_380(v1, v3, v5, v7, v10, v28, 1, v15, 0, v25, v13, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_387(v1, v3, v5, v7, v10, v28, 1, v15, 0, v25, v13, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: TRUE
f_387(v1, v3, v5, v7, v10, v28, 1, v15, 0, v25, v13, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_394(v1, v3, v5, v7, v10, v28, 1, v15, 0, v788, v13, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: TRUE
f_394(v1, v3, v5, v7, v10, v28, 1, v15, 0, v788, v13, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_401(v1, v3, v5, v7, v10, v28, 1, v15, 0, v788, v13, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: v788 != 0
f_401(v1, v3, v5, v7, v10, v28, 1, v15, 0, v788, v13, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_410(v1, v3, v5, v7, v10, v28, 1, v15, 0, v788, v13, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: 0 = 0
f_410(v1, v3, v5, v7, v10, v28, 1, v15, 0, v788, v13, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_419(v1, v3, v5, v7, v10, v28, 1, v15, 0, v788, v13, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: TRUE
f_419(v1, v3, v5, v7, v10, v28, 1, v15, 0, v788, v13, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_429(v1, v3, v5, v7, v10, v28, 1, v15, 0, v788, v13, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: 0 = 0
f_429(v1, v3, v5, v7, v10, v28, 1, v15, 0, v788, v13, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_439(v1, v3, v5, v7, v10, v28, 1, v15, 0, v788, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: 0 = 0
f_439(v1, v3, v5, v7, v10, v28, 1, v15, 0, v788, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_451(v1, v3, v5, v7, v10, v28, 1, v15, 0, v788, v884, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: v884 = 1 + v28 && v884 <= 1
f_451(v1, v3, v5, v7, v10, v28, 1, v15, 0, v788, v884, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_463(v1, v3, v5, v7, v10, v28, 1, v15, 0, v788, v884, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: 0 = 0
f_463(v1, v3, v5, v7, v10, v28, 1, v15, 0, v788, v884, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_475(v1, v3, v5, v7, v10, v28, 1, v15, 0, v788, v884, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: TRUE
f_475(v1, v3, v5, v7, v10, v28, 1, v15, 0, v788, v884, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_487(v1, v3, v5, v7, v10, v28, 1, v15, 0, v788, v884, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: TRUE
f_487(v1, v3, v5, v7, v10, v28, 1, v15, 0, v788, v884, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_499(v1, v3, v5, v7, v10, v28, 1, v15, 0, v788, v884, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: TRUE
f_499(v1, v3, v5, v7, v10, v28, 1, v15, 0, v788, v884, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_291(v1, v3, v5, v7, v10, v28, 1, v15, 0, v788, v884, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: TRUE
f_291(v1, v3, v5, v7, v10, v13, 1, v15, 0, v25, v28, v2, v4, v6, v8, v11, 3, 7, 4, 8) -> f_295(v1, v3, v5, v7, v10, v13, 1, v15, 0, v25, v28, v2, v4, v6, v8, v11, 3, 7, 4, 8) :|: TRUE
Combined rules. Obtained 4 rulesP rules:
f_295(v1:0, v3:0, v5:0, v7:0, v10:0, v13:0, 1, v15:0, 0, v25:0, v28:0, v2:0, v4:0, v6:0, v8:0, v11:0, 3, 7, 4, 8) -> f_295(v1:0, v3:0, v5:0, v7:0, v10:0, v28:0, 1, v15:0, 0, v788:0, 1 + v28:0, v2:0, v4:0, v6:0, v8:0, v11:0, 3, 7, 4, 8) :|: v28:0 < 0 && v13:0 < 0 && v28:0 < 1 && v788:0 < 0
f_295(v1:0, v3:0, v5:0, v7:0, v10:0, v13:0, 1, v15:0, 0, v25:0, v28:0, v2:0, v4:0, v6:0, v8:0, v11:0, 3, 7, 4, 8) -> f_295(v1:0, v3:0, v5:0, v7:0, v10:0, v28:0, 1, v15:0, 0, v788:0, 1 + v28:0, v2:0, v4:0, v6:0, v8:0, v11:0, 3, 7, 4, 8) :|: v28:0 < 0 && v13:0 < 0 && v28:0 < 1 && v788:0 > 0
f_295(v1:0, v3:0, v5:0, v7:0, v10:0, v13:0, 1, v15:0, 0, v25:0, v28:0, v2:0, v4:0, v6:0, v8:0, v11:0, 3, 7, 4, 8) -> f_295(v1:0, v3:0, v5:0, v7:0, v10:0, v28:0, 1, v15:0, 0, v788:0, 1 + v28:0, v2:0, v4:0, v6:0, v8:0, v11:0, 3, 7, 4, 8) :|: v28:0 > 0 && v13:0 < 0 && v28:0 < 1 && v788:0 < 0
f_295(v1:0, v3:0, v5:0, v7:0, v10:0, v13:0, 1, v15:0, 0, v25:0, v28:0, v2:0, v4:0, v6:0, v8:0, v11:0, 3, 7, 4, 8) -> f_295(v1:0, v3:0, v5:0, v7:0, v10:0, v28:0, 1, v15:0, 0, v788:0, 1 + v28:0, v2:0, v4:0, v6:0, v8:0, v11:0, 3, 7, 4, 8) :|: v28:0 > 0 && v13:0 < 0 && v28:0 < 1 && v788:0 > 0
Filtered unneeded arguments:
   f_295(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20) -> f_295(x6, x11)
Removed division, modulo operations, cleaned up constraints. Obtained 2 rules.P rules:
f_295(v13:0, v28:0) -> f_295(v28:0, 1 + v28:0) :|: v13:0 < 0 && v28:0 < 1 && v28:0 < 0
f_295(v13:0, v28:0) -> f_295(v28:0, 1 + v28:0) :|: v13:0 < 0 && v28:0 < 1 && v28:0 > 0

----------------------------------------

(146)
Obligation:
Rules:
f_295(v13:0, v28:0) -> f_295(v28:0, 1 + v28:0) :|: v13:0 < 0 && v28:0 < 1 && v28:0 < 0
f_295(x, x1) -> f_295(x1, 1 + x1) :|: x < 0 && x1 < 1 && x1 > 0

----------------------------------------

(147) TerminationGraphProcessor (EQUIVALENT)
Constructed the termination graph and obtained one non-trivial SCC.

----------------------------------------

(148)
Obligation:
Rules:
f_295(v13:0, v28:0) -> f_295(v28:0, 1 + v28:0) :|: v13:0 < 0 && v28:0 < 1 && v28:0 < 0

----------------------------------------

(149) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(150)
Obligation:
Rules:
f_295(v13:0:0, v28:0:0) -> f_295(v28:0:0, 1 + v28:0:0) :|: v13:0:0 < 0 && v28:0:0 < 1 && v28:0:0 < 0

----------------------------------------

(151) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_295(x, x1)] = -x1

The following rules are decreasing:
f_295(v13:0:0, v28:0:0) -> f_295(v28:0:0, 1 + v28:0:0) :|: v13:0:0 < 0 && v28:0:0 < 1 && v28:0:0 < 0
The following rules are bounded:
f_295(v13:0:0, v28:0:0) -> f_295(v28:0:0, 1 + v28:0:0) :|: v13:0:0 < 0 && v28:0:0 < 1 && v28:0:0 < 0

----------------------------------------

(152)
YES
Graph finished, checking  consistency
Graph finished, checked consistency, took 0.002s
