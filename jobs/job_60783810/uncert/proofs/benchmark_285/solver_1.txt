YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/S6net.c
# AProVE Commit ID: 48c83ccb80d5f8312cb92f4aa1b51dc35e247e65 nils 20241118 unpublished


Termination of the given C Problem could be proven:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 18 ms]
(2) LLVM problem
(3) LLVMToTerminationGraphProof [EQUIVALENT, 888 ms]
(4) LLVM Symbolic Execution Graph
(5) SymbolicExecutionGraphToSCCProof [SOUND, 0 ms]
(6) AND
    (7) LLVM Symbolic Execution SCC
        (8) SCC2IRS [SOUND, 0 ms]
        (9) IntTRS
        (10) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (11) IntTRS
        (12) RankingReductionPairProof [EQUIVALENT, 230 ms]
        (13) YES
    (14) LLVM Symbolic Execution SCC
        (15) SCC2IRS [SOUND, 0 ms]
        (16) IntTRS
        (17) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (18) IntTRS
        (19) RankingReductionPairProof [EQUIVALENT, 7 ms]
        (20) YES
    (21) LLVM Symbolic Execution SCC
        (22) SCC2IRS [SOUND, 0 ms]
        (23) IntTRS
        (24) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (25) IntTRS
        (26) RankingReductionPairProof [EQUIVALENT, 3 ms]
        (27) YES


----------------------------------------

(0)
Obligation:
c file /hpcwork/ff862203/termcomp25/benchmarks/S6net.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /hpcwork/ff862203/termcomp25/benchmarks/S6net.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-pc-linux-gnu"

Type definitions:

Global variables:

Function declarations and definitions:

*BasicFunctionTypename: "llvm.dbg.declare" returnParam: BasicVoidType parameters: (BasicMetadataType, BasicMetadataType, BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_nondet_int" returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 7
	0:
		%1 = alloca i32, align 4
		%2 = alloca i32, align 4
		%3 = alloca i32, align 4
		store 0, %1
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %2)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %3)
		%4 = call i32 @__VERIFIER_nondet_int()
		store %4, %2
		%5 = call i32 @__VERIFIER_nondet_int()
		store %5, %3
		%6 = load %2
		%7 = icmp sgt %6 0
		br %7, %8, %30
	8:
		%9 = load %3
		%10 = icmp sgt %9 0
		br %10, %11, %30
	11:
		br %12
	12:
		%13 = load %2
		%14 = load %3
		%15 = icmp ne %13 %14
		br %15, %16, %29
	16:
		%17 = load %2
		%18 = load %3
		%19 = icmp sgt %17 %18
		br %19, %20, %24
	20:
		%21 = load %2
		%22 = load %3
		%23 = sub i32 %21, %22
		store %23, %2
		br %28
	24:
		%25 = load %3
		%26 = load %2
		%27 = sub i32 %25, %26
		store %27, %3
		br %28
	28:
		br %12
	29:
		br %30
	30:
		ret 0


Analyze Termination of all function calls matching the pattern:
main()
----------------------------------------

(3) LLVMToTerminationGraphProof (EQUIVALENT)
Constructed symbolic execution graph for LLVM program.
----------------------------------------

(4)
Obligation:
Symbolic Execution Graph
----------------------------------------

(5) SymbolicExecutionGraphToSCCProof (SOUND)
Splitted symbolic execution graph to 3 SCCs.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
SCC
----------------------------------------

(8) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 43 rulesP rules:
f_324(v514, v515, v516, v517, v518, 1, v520, v521, v523, v524, v525, v526, v527, v528, 0, 3, 2, 4) -> f_326(v514, v515, v516, v517, v518, 1, v520, v521, v524, v525, v526, v527, v528, 0, 3, 2, 4) :|: 0 = 0
f_326(v514, v515, v516, v517, v518, 1, v520, v521, v524, v525, v526, v527, v528, 0, 3, 2, 4) -> f_328(v514, v515, v516, v517, v518, 1, v520, v521, v566, v524, v525, v526, v527, v528, 0, 3, 2, 4) :|: v566 + v521 = v520 && 1 <= v566
f_328(v514, v515, v516, v517, v518, 1, v520, v521, v566, v524, v525, v526, v527, v528, 0, 3, 2, 4) -> f_330(v514, v515, v516, v517, v518, 1, v520, v521, v566, v524, v525, v526, v527, v528, 0, 3, 2, 4) :|: TRUE
f_330(v514, v515, v516, v517, v518, 1, v520, v521, v566, v524, v525, v526, v527, v528, 0, 3, 2, 4) -> f_332(v514, v515, v516, v517, v518, 1, v520, v521, v566, v524, v525, v526, v527, v528, 0, 3, 2, 4) :|: TRUE
f_332(v514, v515, v516, v517, v518, 1, v520, v521, v566, v524, v525, v526, v527, v528, 0, 3, 2, 4) -> f_333(v514, v515, v516, v517, v518, 1, v520, v521, v524, v525, v566, v526, v527, v528, 0, 3, 2, 4) :|: v521 < v525 && 1 <= v514 && 1 <= v515 && 1 <= v516 && 2 <= v517 && 2 <= v518 && 2 <= v520 && 1 <= v521 && 3 <= v524 && 2 <= v525 && 1 <= v566 && 4 <= v526 && 4 <= v527 && 4 <= v528 && v514 <= v526 && v515 <= v527 && v516 <= v528
f_333(v595, v596, v597, v598, v599, 1, v601, v602, v603, v604, v605, v606, v607, v608, 0, 3, 2, 4) -> f_335(v595, v596, v597, v598, v599, 1, v601, v602, v603, v604, v605, v606, v607, v608, 0, 3, 2, 4) :|: TRUE
f_335(v595, v596, v597, v598, v599, 1, v601, v602, v603, v604, v605, v606, v607, v608, 0, 3, 2, 4) -> f_337(v595, v596, v597, v598, v599, 1, v605, v602, v601, v603, v604, v606, v607, v608, 0, 3, 2, 4) :|: 0 = 0
f_337(v595, v596, v597, v598, v599, 1, v605, v602, v601, v603, v604, v606, v607, v608, 0, 3, 2, 4) -> f_339(v595, v596, v597, v598, v599, 1, v605, v602, v601, v603, v604, v606, v607, v608, 0, 3, 2, 4) :|: 0 = 0
f_339(v595, v596, v597, v598, v599, 1, v605, v602, v601, v603, v604, v606, v607, v608, 0, 3, 2, 4) -> f_341(v595, v596, v597, v598, v599, 1, v605, v602, v601, v603, v604, v606, v607, v608, 0, 3, 2, 4) :|: v605 != v602
f_341(v595, v596, v597, v598, v599, 1, v605, v602, v601, v603, v604, v606, v607, v608, 0, 3, 2, 4) -> f_345(v595, v596, v597, v598, v599, 1, v605, v602, v601, v603, v604, v606, v607, v608, 0, 3, 2, 4) :|: 0 = 0
f_345(v595, v596, v597, v598, v599, 1, v605, v602, v601, v603, v604, v606, v607, v608, 0, 3, 2, 4) -> f_349(v595, v596, v597, v598, v599, 1, v605, v602, v601, v603, v604, v606, v607, v608, 0, 3, 2, 4) :|: TRUE
f_349(v595, v596, v597, v598, v599, 1, v605, v602, v601, v603, v604, v606, v607, v608, 0, 3, 2, 4) -> f_353(v595, v596, v597, v598, v599, 1, v605, v602, v603, v604, v601, v606, v607, v608, 0, 3, 2, 4) :|: 0 = 0
f_353(v595, v596, v597, v598, v599, 1, v605, v602, v603, v604, v601, v606, v607, v608, 0, 3, 2, 4) -> f_357(v595, v596, v597, v598, v599, 1, v605, v602, v603, v604, v601, v606, v607, v608, 0, 3, 2, 4) :|: 0 = 0
f_357(v595, v596, v597, v598, v599, 1, v605, v602, v603, v604, v601, v606, v607, v608, 0, 3, 2, 4) -> f_359(v595, v596, v597, v598, v599, 1, v605, v602, v603, v604, v601, v606, v607, v608, 0, 3, 2, 4) :|: v602 < v605 && 2 <= v605 && 3 <= v601
f_357(v595, v596, v597, v598, v599, 1, v605, v602, v603, v604, v601, v606, v607, v608, 0, 3, 2, 4) -> f_360(v595, v596, v597, v598, v599, 1, v605, v602, v603, v604, v601, v606, v607, v608, 0, 3, 2, 5, 4) :|: v605 <= v602 && 2 <= v602 && 5 <= v603 && 3 <= v601 && 3 <= v604
f_359(v595, v596, v597, v598, v599, 1, v605, v602, v603, v604, v601, v606, v607, v608, 0, 3, 2, 4) -> f_363(v595, v596, v597, v598, v599, 1, v605, v602, v603, v604, v601, v606, v607, v608, 0, 3, 2, 4) :|: 0 = 0
f_363(v595, v596, v597, v598, v599, 1, v605, v602, v603, v604, v601, v606, v607, v608, 0, 3, 2, 4) -> f_367(v595, v596, v597, v598, v599, 1, v605, v602, v603, v604, v601, v606, v607, v608, 0, 3, 2, 4) :|: TRUE
f_367(v595, v596, v597, v598, v599, 1, v605, v602, v603, v604, v601, v606, v607, v608, 0, 3, 2, 4) -> f_321(v595, v596, v597, v598, v599, 1, v605, v602, v601, v602, v603, v604, v606, v607, v608, 0, 3, 2, 4) :|: v602 < v605 && v602 < v604 && 1 <= v595 && 1 <= v596 && 1 <= v597 && 2 <= v598 && 2 <= v599 && 2 <= v605 && 1 <= v602 && 3 <= v601 && 1 <= v602 && 3 <= v603 && 2 <= v604 && 4 <= v606 && 4 <= v607 && 4 <= v608 && v595 <= v606 && v596 <= v607 && v597 <= v608
f_321(v514, v515, v516, v517, v518, 1, v520, v521, v522, v523, v524, v525, v526, v527, v528, 0, 3, 2, 4) -> f_324(v514, v515, v516, v517, v518, 1, v520, v521, v523, v524, v525, v526, v527, v528, 0, 3, 2, 4) :|: 0 = 0
f_360(v595, v596, v597, v598, v599, 1, v605, v602, v603, v604, v601, v606, v607, v608, 0, 3, 2, 5, 4) -> f_364(v595, v596, v597, v598, v599, 1, v605, v602, 0, v603, v604, v601, v606, v607, v608, 3, 2, 5, 4) :|: 0 = 0
f_364(v595, v596, v597, v598, v599, 1, v605, v602, 0, v603, v604, v601, v606, v607, v608, 3, 2, 5, 4) -> f_368(v595, v596, v597, v598, v599, 1, v605, v602, 0, v603, v604, v601, v606, v607, v608, 3, 2, 5, 4) :|: TRUE
f_368(v595, v596, v597, v598, v599, 1, v605, v602, 0, v603, v604, v601, v606, v607, v608, 3, 2, 5, 4) -> f_323(v595, v596, v597, v598, v599, 1, v605, v602, 0, v601, v602, v603, v604, v606, v607, v608, 3, 2, 4) :|: v605 < v602 && v605 < v602 && 1 <= v595 && 1 <= v596 && 1 <= v597 && 2 <= v598 && 2 <= v599 && 1 <= v605 && 2 <= v602 && 3 <= v601 && 2 <= v602 && 3 <= v603 && 1 <= v604 && 4 <= v606 && 4 <= v607 && 4 <= v608 && v595 <= v606 && v596 <= v607 && v597 <= v608
f_323(v550, v551, v552, v553, v554, 1, v556, v557, 0, v559, v560, v561, v562, v563, v564, v565, 3, 2, 4) -> f_325(v550, v551, v552, v553, v554, 1, v556, v557, 0, v559, v560, v562, v563, v564, v565, 3, 2, 4) :|: 0 = 0
f_325(v550, v551, v552, v553, v554, 1, v556, v557, 0, v559, v560, v562, v563, v564, v565, 3, 2, 4) -> f_327(v550, v551, v552, v553, v554, 1, v556, v557, 0, v559, v560, v563, v564, v565, 3, 2, 4) :|: 0 = 0
f_327(v550, v551, v552, v553, v554, 1, v556, v557, 0, v559, v560, v563, v564, v565, 3, 2, 4) -> f_329(v550, v551, v552, v553, v554, 1, v556, v557, 0, v559, v560, v567, v563, v564, v565, 3, 2, 4) :|: v567 + v556 = v557 && 1 <= v567
f_329(v550, v551, v552, v553, v554, 1, v556, v557, 0, v559, v560, v567, v563, v564, v565, 3, 2, 4) -> f_331(v550, v551, v552, v553, v554, 1, v556, v557, 0, v559, v560, v567, v563, v564, v565, 3, 2, 4) :|: TRUE
f_331(v550, v551, v552, v553, v554, 1, v556, v557, 0, v559, v560, v567, v563, v564, v565, 3, 2, 4) -> f_334(v550, v551, v552, v553, v554, 1, v556, v557, 0, v559, v560, v567, v563, v564, v565, 3, 2, 4) :|: TRUE
f_334(v550, v551, v552, v553, v554, 1, v556, v557, 0, v559, v560, v567, v563, v564, v565, 3, 2, 4) -> f_336(v550, v551, v552, v553, v554, 1, v556, v557, 0, v559, v560, v567, v563, v564, v565, 3, 2, 4) :|: TRUE
f_336(v550, v551, v552, v553, v554, 1, v556, v557, 0, v559, v560, v567, v563, v564, v565, 3, 2, 4) -> f_338(v550, v551, v552, v553, v554, 1, v556, v557, 0, v559, v560, v567, v563, v564, v565, 3, 2, 4) :|: 0 = 0
f_338(v550, v551, v552, v553, v554, 1, v556, v557, 0, v559, v560, v567, v563, v564, v565, 3, 2, 4) -> f_340(v550, v551, v552, v553, v554, 1, v556, v567, v557, 0, v559, v560, v563, v564, v565, 3, 2, 4) :|: 0 = 0
f_340(v550, v551, v552, v553, v554, 1, v556, v567, v557, 0, v559, v560, v563, v564, v565, 3, 2, 4) -> f_343(v550, v551, v552, v553, v554, 1, v556, v567, v557, 0, v559, v560, v563, v564, v565, 3, 2, 4) :|: v556 != v567
f_343(v550, v551, v552, v553, v554, 1, v556, v567, v557, 0, v559, v560, v563, v564, v565, 3, 2, 4) -> f_347(v550, v551, v552, v553, v554, 1, v556, v567, v557, 0, v559, v560, v563, v564, v565, 3, 2, 4) :|: 0 = 0
f_347(v550, v551, v552, v553, v554, 1, v556, v567, v557, 0, v559, v560, v563, v564, v565, 3, 2, 4) -> f_351(v550, v551, v552, v553, v554, 1, v556, v567, v557, 0, v559, v560, v563, v564, v565, 3, 2, 4) :|: TRUE
f_351(v550, v551, v552, v553, v554, 1, v556, v567, v557, 0, v559, v560, v563, v564, v565, 3, 2, 4) -> f_355(v550, v551, v552, v553, v554, 1, v556, v567, v557, 0, v559, v560, v563, v564, v565, 3, 2, 4) :|: 0 = 0
f_355(v550, v551, v552, v553, v554, 1, v556, v567, v557, 0, v559, v560, v563, v564, v565, 3, 2, 4) -> f_358(v550, v551, v552, v553, v554, 1, v556, v567, 0, v559, v560, v557, v563, v564, v565, 3, 2, 4) :|: 0 = 0
f_358(v550, v551, v552, v553, v554, 1, v556, v567, 0, v559, v560, v557, v563, v564, v565, 3, 2, 4) -> f_361(v550, v551, v552, v553, v554, 1, v556, v567, 0, v559, v560, v557, v563, v564, v565, 3, 2, 5, 4) :|: v567 < v556 && 2 <= v556 && 5 <= v559 && 3 <= v557 && 3 <= v560
f_358(v550, v551, v552, v553, v554, 1, v556, v567, 0, v559, v560, v557, v563, v564, v565, 3, 2, 4) -> f_362(v550, v551, v552, v553, v554, 1, v556, v567, 0, v559, v560, v557, v563, v564, v565, 3, 2, 4) :|: v556 <= v567 && 2 <= v567 && 3 <= v557
f_361(v550, v551, v552, v553, v554, 1, v556, v567, 0, v559, v560, v557, v563, v564, v565, 3, 2, 5, 4) -> f_365(v550, v551, v552, v553, v554, 1, v556, v567, v559, v560, v557, v563, v564, v565, 0, 3, 2, 5, 4) :|: 0 = 0
f_365(v550, v551, v552, v553, v554, 1, v556, v567, v559, v560, v557, v563, v564, v565, 0, 3, 2, 5, 4) -> f_369(v550, v551, v552, v553, v554, 1, v556, v567, v559, v560, v557, v563, v564, v565, 0, 3, 2, 5, 4) :|: TRUE
f_369(v550, v551, v552, v553, v554, 1, v556, v567, v559, v560, v557, v563, v564, v565, 0, 3, 2, 5, 4) -> f_321(v550, v551, v552, v553, v554, 1, v556, v567, v559, v560, v557, v556, v563, v564, v565, 0, 3, 2, 4) :|: v567 < v556 && v567 < v556 && 1 <= v550 && 1 <= v551 && 1 <= v552 && 2 <= v553 && 2 <= v554 && 2 <= v556 && 1 <= v567 && 3 <= v559 && 1 <= v560 && 3 <= v557 && 2 <= v556 && 4 <= v563 && 4 <= v564 && 4 <= v565 && v550 <= v563 && v551 <= v564 && v552 <= v565
f_362(v550, v551, v552, v553, v554, 1, v556, v567, 0, v559, v560, v557, v563, v564, v565, 3, 2, 4) -> f_366(v550, v551, v552, v553, v554, 1, v556, v567, 0, v559, v560, v557, v563, v564, v565, 3, 2, 4) :|: 0 = 0
f_366(v550, v551, v552, v553, v554, 1, v556, v567, 0, v559, v560, v557, v563, v564, v565, 3, 2, 4) -> f_370(v550, v551, v552, v553, v554, 1, v556, v567, 0, v559, v560, v557, v563, v564, v565, 3, 2, 4) :|: TRUE
f_370(v550, v551, v552, v553, v554, 1, v556, v567, 0, v559, v560, v557, v563, v564, v565, 3, 2, 4) -> f_323(v550, v551, v552, v553, v554, 1, v556, v567, 0, v559, v560, v557, v556, v563, v564, v565, 3, 2, 4) :|: v556 < v567 && v556 < v560 && 1 <= v550 && 1 <= v551 && 1 <= v552 && 2 <= v553 && 2 <= v554 && 1 <= v556 && 2 <= v567 && 3 <= v559 && 2 <= v560 && 3 <= v557 && 1 <= v556 && 4 <= v563 && 4 <= v564 && 4 <= v565 && v550 <= v563 && v551 <= v564 && v552 <= v565
Combined rules. Obtained 6 rulesP rules:
f_358(v550:0, v551:0, v552:0, v553:0, v554:0, 1, v556:0, v567:0, 0, v559:0, v560:0, v557:0, v563:0, v564:0, v565:0, 3, 2, 4) -> f_324(v550:0, v551:0, v552:0, v553:0, v554:0, 1, v556:0, v567:0, v560:0, v557:0, v556:0, v563:0, v564:0, v565:0, 0, 3, 2, 4) :|: v559:0 > 4 && v560:0 > 2 && v567:0 < v556:0 && v550:0 > 0 && v551:0 > 0 && v552:0 > 0 && v553:0 > 1 && v554:0 > 1 && v556:0 > 1 && v567:0 > 0 && v557:0 > 2 && v563:0 > 3 && v564:0 > 3 && v565:0 > 3 && v563:0 >= v550:0 && v565:0 >= v552:0 && v564:0 >= v551:0
f_358(v550:0, v551:0, v552:0, v553:0, v554:0, 1, v556:0, v567:1 + v556:0, 0, v559:0, v560:0, v557:0, v563:0, v564:0, v565:0, 3, 2, 4) -> f_358(v550:0, v551:0, v552:0, v553:0, v554:0, 1, v556:0, v567:1, 0, v559:0, v560:0, v567:1 + v556:0, v563:0, v564:0, v565:0, 3, 2, 4) :|: v567:1 + v556:0 > v556:0 && v560:0 > v556:0 && v550:0 > 0 && v551:0 > 0 && v552:0 > 0 && v553:0 > 1 && v554:0 > 1 && v556:0 > 0 && v567:1 + v556:0 > 1 && v559:0 > 2 && v560:0 > 1 && v557:0 > 2 && v563:0 > 3 && v564:0 > 3 && v565:0 > 3 && v563:0 >= v550:0 && v564:0 >= v551:0 && v565:0 >= v552:0 && v567:1 > 0 && v567:1 > v556:0
f_358(v550:0, v551:0, v552:0, v553:0, v554:0, 1, v556:0, v567:1 + v556:0, 0, v559:0, v560:0, v557:0, v563:0, v564:0, v565:0, 3, 2, 4) -> f_358(v550:0, v551:0, v552:0, v553:0, v554:0, 1, v556:0, v567:1, 0, v559:0, v560:0, v567:1 + v556:0, v563:0, v564:0, v565:0, 3, 2, 4) :|: v567:1 + v556:0 > v556:0 && v560:0 > v556:0 && v550:0 > 0 && v551:0 > 0 && v552:0 > 0 && v553:0 > 1 && v554:0 > 1 && v556:0 > 0 && v567:1 + v556:0 > 1 && v559:0 > 2 && v560:0 > 1 && v557:0 > 2 && v563:0 > 3 && v564:0 > 3 && v565:0 > 3 && v563:0 >= v550:0 && v564:0 >= v551:0 && v565:0 >= v552:0 && v567:1 > 0 && v567:1 < v556:0
f_324(v514:0, v515:0, v516:0, v517:0, v518:0, 1, v566:0 + (v567:0 + v566:0), v567:0 + v566:0, v523:0, v524:0, v525:0, v526:0, v527:0, v528:0, 0, 3, 2, 4) -> f_358(v514:0, v515:0, v516:0, v517:0, v518:0, 1, v566:0, v567:0, 0, v566:0 + (v567:0 + v566:0), v567:0 + v566:0, v567:0 + v566:0, v526:0, v527:0, v528:0, 3, 2, 4) :|: v525:0 > 2 && v567:0 + v566:0 > 1 && v566:0 + (v567:0 + v566:0) > 2 && v567:0 + v566:0 > v566:0 && v524:0 > 4 && v514:0 > 0 && v567:0 + v566:0 < v525:0 && v515:0 > 0 && v516:0 > 0 && v517:0 > 1 && v518:0 > 1 && v566:0 > 0 && v526:0 > 3 && v527:0 > 3 && v528:0 > 3 && v526:0 >= v514:0 && v527:0 >= v515:0 && v528:0 >= v516:0 && v567:0 > v566:0 && v567:0 > 0
f_324(v514:0, v515:0, v516:0, v517:0, v518:0, 1, v566:0 + (v567:0 + v566:0), v567:0 + v566:0, v523:0, v524:0, v525:0, v526:0, v527:0, v528:0, 0, 3, 2, 4) -> f_358(v514:0, v515:0, v516:0, v517:0, v518:0, 1, v566:0, v567:0, 0, v566:0 + (v567:0 + v566:0), v567:0 + v566:0, v567:0 + v566:0, v526:0, v527:0, v528:0, 3, 2, 4) :|: v525:0 > 2 && v567:0 + v566:0 > 1 && v566:0 + (v567:0 + v566:0) > 2 && v567:0 + v566:0 > v566:0 && v524:0 > 4 && v514:0 > 0 && v567:0 + v566:0 < v525:0 && v515:0 > 0 && v516:0 > 0 && v517:0 > 1 && v518:0 > 1 && v566:0 > 0 && v526:0 > 3 && v527:0 > 3 && v528:0 > 3 && v526:0 >= v514:0 && v527:0 >= v515:0 && v528:0 >= v516:0 && v567:0 < v566:0 && v567:0 > 0
f_324(v514:0, v515:0, v516:0, v517:0, v518:0, 1, v566:0 + v521:0, v521:0, v523:0, v524:0, v525:0, v526:0, v527:0, v528:0, 0, 3, 2, 4) -> f_324(v514:0, v515:0, v516:0, v517:0, v518:0, 1, v566:0, v521:0, v521:0, v524:0, v525:0, v526:0, v527:0, v528:0, 0, 3, 2, 4) :|: v566:0 > 1 && v566:0 + v521:0 > 2 && v514:0 > 0 && v525:0 > v521:0 && v515:0 > 0 && v516:0 > 0 && v517:0 > 1 && v518:0 > 1 && v521:0 > 0 && v524:0 > 2 && v525:0 > 1 && v566:0 > v521:0 && v526:0 > 3 && v527:0 > 3 && v528:0 > 3 && v526:0 >= v514:0 && v527:0 >= v515:0 && v528:0 >= v516:0
Filtered unneeded arguments:
   f_358(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18) -> f_358(x1, x2, x3, x4, x5, x7, x8, x10, x11, x12, x13, x14, x15)
   f_324(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18) -> f_324(x1, x2, x3, x4, x5, x7, x8, x10, x11, x12, x13, x14)
Removed division, modulo operations, cleaned up constraints. Obtained 6 rules.P rules:
f_358(v550:0, v551:0, v552:0, v553:0, v554:0, v556:0, v567:0, v559:0, v560:0, v557:0, v563:0, v564:0, v565:0) -> f_324(v550:0, v551:0, v552:0, v553:0, v554:0, v556:0, v567:0, v557:0, v556:0, v563:0, v564:0, v565:0) :|: v560:0 > 2 && v559:0 > 4 && v567:0 < v556:0 && v550:0 > 0 && v551:0 > 0 && v552:0 > 0 && v553:0 > 1 && v554:0 > 1 && v556:0 > 1 && v567:0 > 0 && v557:0 > 2 && v563:0 > 3 && v564:0 > 3 && v565:0 > 3 && v563:0 >= v550:0 && v564:0 >= v551:0 && v565:0 >= v552:0
f_358(v550:0, v551:0, v552:0, v553:0, v554:0, v556:0, sum~v567:1~v556:0, v559:0, v560:0, v557:0, v563:0, v564:0, v565:0) -> f_358(v550:0, v551:0, v552:0, v553:0, v554:0, v556:0, v567:1, v559:0, v560:0, v567:1 + v556:0, v563:0, v564:0, v565:0) :|: v560:0 > v556:0 && v567:1 + v556:0 > v556:0 && v550:0 > 0 && v551:0 > 0 && v552:0 > 0 && v553:0 > 1 && v554:0 > 1 && v556:0 > 0 && v567:1 + v556:0 > 1 && v559:0 > 2 && v560:0 > 1 && v557:0 > 2 && v563:0 > 3 && v564:0 > 3 && v565:0 > 3 && v563:0 >= v550:0 && v564:0 >= v551:0 && v565:0 >= v552:0 && v567:1 > v556:0 && v567:1 > 0 && sum~v567:1~v556:0 = v567:1 + v556:0
f_358(v550:0, v551:0, v552:0, v553:0, v554:0, v556:0, sum~v567:1~v556:0, v559:0, v560:0, v557:0, v563:0, v564:0, v565:0) -> f_358(v550:0, v551:0, v552:0, v553:0, v554:0, v556:0, v567:1, v559:0, v560:0, v567:1 + v556:0, v563:0, v564:0, v565:0) :|: v560:0 > v556:0 && v567:1 + v556:0 > v556:0 && v550:0 > 0 && v551:0 > 0 && v552:0 > 0 && v553:0 > 1 && v554:0 > 1 && v556:0 > 0 && v567:1 + v556:0 > 1 && v559:0 > 2 && v560:0 > 1 && v557:0 > 2 && v563:0 > 3 && v564:0 > 3 && v565:0 > 3 && v563:0 >= v550:0 && v564:0 >= v551:0 && v565:0 >= v552:0 && v567:1 < v556:0 && v567:1 > 0 && sum~v567:1~v556:0 = v567:1 + v556:0
f_324(v514:0, v515:0, v516:0, v517:0, v518:0, sum~v566:0~sum~v567:0~v566:0, sum~v567:0~v566:0, v524:0, v525:0, v526:0, v527:0, v528:0) -> f_358(v514:0, v515:0, v516:0, v517:0, v518:0, v566:0, v567:0, v566:0 + (v567:0 + v566:0), v567:0 + v566:0, v567:0 + v566:0, v526:0, v527:0, v528:0) :|: v567:0 + v566:0 > 1 && v525:0 > 2 && v566:0 + (v567:0 + v566:0) > 2 && v567:0 + v566:0 > v566:0 && v524:0 > 4 && v514:0 > 0 && v567:0 + v566:0 < v525:0 && v515:0 > 0 && v516:0 > 0 && v517:0 > 1 && v518:0 > 1 && v566:0 > 0 && v526:0 > 3 && v527:0 > 3 && v528:0 > 3 && v526:0 >= v514:0 && v527:0 >= v515:0 && v528:0 >= v516:0 && v567:0 > 0 && v567:0 > v566:0 && sum~v566:0~sum~v567:0~v566:0 = v566:0 + (v567:0 + v566:0) && sum~v567:0~v566:0 = v567:0 + v566:0
f_324(v514:0, v515:0, v516:0, v517:0, v518:0, sum~v566:0~sum~v567:0~v566:0, sum~v567:0~v566:0, v524:0, v525:0, v526:0, v527:0, v528:0) -> f_358(v514:0, v515:0, v516:0, v517:0, v518:0, v566:0, v567:0, v566:0 + (v567:0 + v566:0), v567:0 + v566:0, v567:0 + v566:0, v526:0, v527:0, v528:0) :|: v567:0 + v566:0 > 1 && v525:0 > 2 && v566:0 + (v567:0 + v566:0) > 2 && v567:0 + v566:0 > v566:0 && v524:0 > 4 && v514:0 > 0 && v567:0 + v566:0 < v525:0 && v515:0 > 0 && v516:0 > 0 && v517:0 > 1 && v518:0 > 1 && v566:0 > 0 && v526:0 > 3 && v527:0 > 3 && v528:0 > 3 && v526:0 >= v514:0 && v527:0 >= v515:0 && v528:0 >= v516:0 && v567:0 > 0 && v567:0 < v566:0 && sum~v566:0~sum~v567:0~v566:0 = v566:0 + (v567:0 + v566:0) && sum~v567:0~v566:0 = v567:0 + v566:0
f_324(v514:0, v515:0, v516:0, v517:0, v518:0, sum~v566:0~v521:0, v521:0, v524:0, v525:0, v526:0, v527:0, v528:0) -> f_324(v514:0, v515:0, v516:0, v517:0, v518:0, v566:0, v521:0, v524:0, v525:0, v526:0, v527:0, v528:0) :|: v566:0 + v521:0 > 2 && v566:0 > 1 && v514:0 > 0 && v525:0 > v521:0 && v515:0 > 0 && v516:0 > 0 && v517:0 > 1 && v518:0 > 1 && v521:0 > 0 && v524:0 > 2 && v525:0 > 1 && v566:0 > v521:0 && v526:0 > 3 && v527:0 > 3 && v528:0 > 3 && v526:0 >= v514:0 && v528:0 >= v516:0 && v527:0 >= v515:0 && sum~v566:0~v521:0 = v566:0 + v521:0

----------------------------------------

(9)
Obligation:
Rules:
f_358(v550:0, v551:0, v552:0, v553:0, v554:0, v556:0, v567:0, v559:0, v560:0, v557:0, v563:0, v564:0, v565:0) -> f_324(v550:0, v551:0, v552:0, v553:0, v554:0, v556:0, v567:0, v557:0, v556:0, v563:0, v564:0, v565:0) :|: v560:0 > 2 && v559:0 > 4 && v567:0 < v556:0 && v550:0 > 0 && v551:0 > 0 && v552:0 > 0 && v553:0 > 1 && v554:0 > 1 && v556:0 > 1 && v567:0 > 0 && v557:0 > 2 && v563:0 > 3 && v564:0 > 3 && v565:0 > 3 && v563:0 >= v550:0 && v564:0 >= v551:0 && v565:0 >= v552:0
f_358(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12) -> f_358(x, x1, x2, x3, x4, x5, x13, x7, x8, x13 + x5, x10, x11, x12) :|: x8 > x5 && x13 + x5 > x5 && x > 0 && x1 > 0 && x2 > 0 && x3 > 1 && x4 > 1 && x5 > 0 && x13 + x5 > 1 && x7 > 2 && x8 > 1 && x9 > 2 && x10 > 3 && x11 > 3 && x12 > 3 && x10 >= x && x11 >= x1 && x12 >= x2 && x13 > x5 && x13 > 0 && x6 = x13 + x5
f_358(x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26) -> f_358(x14, x15, x16, x17, x18, x19, x27, x21, x22, x27 + x19, x24, x25, x26) :|: x22 > x19 && x27 + x19 > x19 && x14 > 0 && x15 > 0 && x16 > 0 && x17 > 1 && x18 > 1 && x19 > 0 && x27 + x19 > 1 && x21 > 2 && x22 > 1 && x23 > 2 && x24 > 3 && x25 > 3 && x26 > 3 && x24 >= x14 && x25 >= x15 && x26 >= x16 && x27 < x19 && x27 > 0 && x20 = x27 + x19
f_324(x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39) -> f_358(x28, x29, x30, x31, x32, x40, x41, x40 + (x41 + x40), x41 + x40, x41 + x40, x37, x38, x39) :|: x41 + x40 > 1 && x36 > 2 && x40 + (x41 + x40) > 2 && x41 + x40 > x40 && x35 > 4 && x28 > 0 && x41 + x40 < x36 && x29 > 0 && x30 > 0 && x31 > 1 && x32 > 1 && x40 > 0 && x37 > 3 && x38 > 3 && x39 > 3 && x37 >= x28 && x38 >= x29 && x39 >= x30 && x41 > 0 && x41 > x40 && x33 = x40 + (x41 + x40) && x34 = x41 + x40
f_324(x42, x43, x44, x45, x46, x47, x48, x49, x50, x51, x52, x53) -> f_358(x42, x43, x44, x45, x46, x54, x55, x54 + (x55 + x54), x55 + x54, x55 + x54, x51, x52, x53) :|: x55 + x54 > 1 && x50 > 2 && x54 + (x55 + x54) > 2 && x55 + x54 > x54 && x49 > 4 && x42 > 0 && x55 + x54 < x50 && x43 > 0 && x44 > 0 && x45 > 1 && x46 > 1 && x54 > 0 && x51 > 3 && x52 > 3 && x53 > 3 && x51 >= x42 && x52 >= x43 && x53 >= x44 && x55 > 0 && x55 < x54 && x47 = x54 + (x55 + x54) && x48 = x55 + x54
f_324(v514:0, v515:0, v516:0, v517:0, v518:0, sum~v566:0~v521:0, v521:0, v524:0, v525:0, v526:0, v527:0, v528:0) -> f_324(v514:0, v515:0, v516:0, v517:0, v518:0, v566:0, v521:0, v524:0, v525:0, v526:0, v527:0, v528:0) :|: v566:0 + v521:0 > 2 && v566:0 > 1 && v514:0 > 0 && v525:0 > v521:0 && v515:0 > 0 && v516:0 > 0 && v517:0 > 1 && v518:0 > 1 && v521:0 > 0 && v524:0 > 2 && v525:0 > 1 && v566:0 > v521:0 && v526:0 > 3 && v527:0 > 3 && v528:0 > 3 && v526:0 >= v514:0 && v528:0 >= v516:0 && v527:0 >= v515:0 && sum~v566:0~v521:0 = v566:0 + v521:0

----------------------------------------

(10) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(11)
Obligation:
Rules:
f_358(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, sum~x13:0~x5:0, x7:0, x8:0, x9:0, x10:0, x11:0, x12:0) -> f_358(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x13:0, x7:0, x8:0, x13:0 + x5:0, x10:0, x11:0, x12:0) :|: x5:0 < x13:0 && x13:0 > 0 && x2:0 <= x12:0 && x1:0 <= x11:0 && x:0 <= x10:0 && x12:0 > 3 && x11:0 > 3 && x10:0 > 3 && x9:0 > 2 && x8:0 > 1 && x7:0 > 2 && x13:0 + x5:0 > 1 && x5:0 > 0 && x4:0 > 1 && x3:0 > 1 && x2:0 > 0 && x1:0 > 0 && x:0 > 0 && x5:0 < x13:0 + x5:0 && x8:0 > x5:0 && sum~x13:0~x5:0 = x13:0 + x5:0
f_324(x28:0, x29:0, x30:0, x31:0, x32:0, sum~x40:0~sum~x41:0~x40:0, sum~x41:0~x40:0, x35:0, x36:0, x37:0, x38:0, x39:0) -> f_358(x28:0, x29:0, x30:0, x31:0, x32:0, x40:0, x41:0, x40:0 + (x41:0 + x40:0), x41:0 + x40:0, x41:0 + x40:0, x37:0, x38:0, x39:0) :|: x41:0 > 0 && x41:0 > x40:0 && x39:0 >= x30:0 && x38:0 >= x29:0 && x37:0 >= x28:0 && x39:0 > 3 && x38:0 > 3 && x37:0 > 3 && x40:0 > 0 && x32:0 > 1 && x31:0 > 1 && x30:0 > 0 && x29:0 > 0 && x41:0 + x40:0 < x36:0 && x28:0 > 0 && x35:0 > 4 && x41:0 + x40:0 > x40:0 && x40:0 + (x41:0 + x40:0) > 2 && x36:0 > 2 && x41:0 + x40:0 > 1 && sum~x40:0~sum~x41:0~x40:0 = x40:0 + (x41:0 + x40:0) && sum~x41:0~x40:0 = x41:0 + x40:0
f_324(v514:0:0, v515:0:0, v516:0:0, v517:0:0, v518:0:0, sum~v566:0:0~v521:0:0, v521:0:0, v524:0:0, v525:0:0, v526:0:0, v527:0:0, v528:0:0) -> f_324(v514:0:0, v515:0:0, v516:0:0, v517:0:0, v518:0:0, v566:0:0, v521:0:0, v524:0:0, v525:0:0, v526:0:0, v527:0:0, v528:0:0) :|: v528:0:0 >= v516:0:0 && v527:0:0 >= v515:0:0 && v526:0:0 >= v514:0:0 && v528:0:0 > 3 && v527:0:0 > 3 && v526:0:0 > 3 && v566:0:0 > v521:0:0 && v525:0:0 > 1 && v524:0:0 > 2 && v521:0:0 > 0 && v518:0:0 > 1 && v517:0:0 > 1 && v516:0:0 > 0 && v515:0:0 > 0 && v525:0:0 > v521:0:0 && v514:0:0 > 0 && v566:0:0 > 1 && v566:0:0 + v521:0:0 > 2 && sum~v566:0:0~v521:0:0 = v566:0:0 + v521:0:0
f_358(v550:0:0, v551:0:0, v552:0:0, v553:0:0, v554:0:0, v556:0:0, v567:0:0, v559:0:0, v560:0:0, v557:0:0, v563:0:0, v564:0:0, v565:0:0) -> f_324(v550:0:0, v551:0:0, v552:0:0, v553:0:0, v554:0:0, v556:0:0, v567:0:0, v557:0:0, v556:0:0, v563:0:0, v564:0:0, v565:0:0) :|: v564:0:0 >= v551:0:0 && v565:0:0 >= v552:0:0 && v563:0:0 >= v550:0:0 && v565:0:0 > 3 && v564:0:0 > 3 && v563:0:0 > 3 && v557:0:0 > 2 && v567:0:0 > 0 && v556:0:0 > 1 && v554:0:0 > 1 && v553:0:0 > 1 && v552:0:0 > 0 && v551:0:0 > 0 && v550:0:0 > 0 && v567:0:0 < v556:0:0 && v559:0:0 > 4 && v560:0:0 > 2
f_324(x42:0, x43:0, x44:0, x45:0, x46:0, sum~x54:0~sum~x55:0~x54:0, sum~x55:0~x54:0, x49:0, x50:0, x51:0, x52:0, x53:0) -> f_358(x42:0, x43:0, x44:0, x45:0, x46:0, x54:0, x55:0, x54:0 + (x55:0 + x54:0), x55:0 + x54:0, x55:0 + x54:0, x51:0, x52:0, x53:0) :|: x55:0 > 0 && x55:0 < x54:0 && x53:0 >= x44:0 && x52:0 >= x43:0 && x51:0 >= x42:0 && x53:0 > 3 && x52:0 > 3 && x51:0 > 3 && x54:0 > 0 && x46:0 > 1 && x45:0 > 1 && x44:0 > 0 && x43:0 > 0 && x55:0 + x54:0 < x50:0 && x42:0 > 0 && x49:0 > 4 && x55:0 + x54:0 > x54:0 && x54:0 + (x55:0 + x54:0) > 2 && x50:0 > 2 && x55:0 + x54:0 > 1 && sum~x54:0~sum~x55:0~x54:0 = x54:0 + (x55:0 + x54:0) && sum~x55:0~x54:0 = x55:0 + x54:0
f_358(x14:0, x15:0, x16:0, x17:0, x18:0, x19:0, sum~x27:0~x19:0, x21:0, x22:0, x23:0, x24:0, x25:0, x26:0) -> f_358(x14:0, x15:0, x16:0, x17:0, x18:0, x19:0, x27:0, x21:0, x22:0, x27:0 + x19:0, x24:0, x25:0, x26:0) :|: x27:0 < x19:0 && x27:0 > 0 && x26:0 >= x16:0 && x25:0 >= x15:0 && x24:0 >= x14:0 && x26:0 > 3 && x25:0 > 3 && x24:0 > 3 && x23:0 > 2 && x22:0 > 1 && x21:0 > 2 && x27:0 + x19:0 > 1 && x19:0 > 0 && x18:0 > 1 && x17:0 > 1 && x16:0 > 0 && x15:0 > 0 && x14:0 > 0 && x27:0 + x19:0 > x19:0 && x22:0 > x19:0 && sum~x27:0~x19:0 = x27:0 + x19:0

----------------------------------------

(12) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_358 ] = f_358_6 + f_358_7
[ f_324 ] = f_324_6

The following rules are decreasing:
f_358(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, sum~x13:0~x5:0, x7:0, x8:0, x9:0, x10:0, x11:0, x12:0) -> f_358(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x13:0, x7:0, x8:0, x13:0 + x5:0, x10:0, x11:0, x12:0) :|: x5:0 < x13:0 && x13:0 > 0 && x2:0 <= x12:0 && x1:0 <= x11:0 && x:0 <= x10:0 && x12:0 > 3 && x11:0 > 3 && x10:0 > 3 && x9:0 > 2 && x8:0 > 1 && x7:0 > 2 && x13:0 + x5:0 > 1 && x5:0 > 0 && x4:0 > 1 && x3:0 > 1 && x2:0 > 0 && x1:0 > 0 && x:0 > 0 && x5:0 < x13:0 + x5:0 && x8:0 > x5:0 && sum~x13:0~x5:0 = x13:0 + x5:0
f_324(x28:0, x29:0, x30:0, x31:0, x32:0, sum~x40:0~sum~x41:0~x40:0, sum~x41:0~x40:0, x35:0, x36:0, x37:0, x38:0, x39:0) -> f_358(x28:0, x29:0, x30:0, x31:0, x32:0, x40:0, x41:0, x40:0 + (x41:0 + x40:0), x41:0 + x40:0, x41:0 + x40:0, x37:0, x38:0, x39:0) :|: x41:0 > 0 && x41:0 > x40:0 && x39:0 >= x30:0 && x38:0 >= x29:0 && x37:0 >= x28:0 && x39:0 > 3 && x38:0 > 3 && x37:0 > 3 && x40:0 > 0 && x32:0 > 1 && x31:0 > 1 && x30:0 > 0 && x29:0 > 0 && x41:0 + x40:0 < x36:0 && x28:0 > 0 && x35:0 > 4 && x41:0 + x40:0 > x40:0 && x40:0 + (x41:0 + x40:0) > 2 && x36:0 > 2 && x41:0 + x40:0 > 1 && sum~x40:0~sum~x41:0~x40:0 = x40:0 + (x41:0 + x40:0) && sum~x41:0~x40:0 = x41:0 + x40:0
f_324(v514:0:0, v515:0:0, v516:0:0, v517:0:0, v518:0:0, sum~v566:0:0~v521:0:0, v521:0:0, v524:0:0, v525:0:0, v526:0:0, v527:0:0, v528:0:0) -> f_324(v514:0:0, v515:0:0, v516:0:0, v517:0:0, v518:0:0, v566:0:0, v521:0:0, v524:0:0, v525:0:0, v526:0:0, v527:0:0, v528:0:0) :|: v528:0:0 >= v516:0:0 && v527:0:0 >= v515:0:0 && v526:0:0 >= v514:0:0 && v528:0:0 > 3 && v527:0:0 > 3 && v526:0:0 > 3 && v566:0:0 > v521:0:0 && v525:0:0 > 1 && v524:0:0 > 2 && v521:0:0 > 0 && v518:0:0 > 1 && v517:0:0 > 1 && v516:0:0 > 0 && v515:0:0 > 0 && v525:0:0 > v521:0:0 && v514:0:0 > 0 && v566:0:0 > 1 && v566:0:0 + v521:0:0 > 2 && sum~v566:0:0~v521:0:0 = v566:0:0 + v521:0:0
f_358(v550:0:0, v551:0:0, v552:0:0, v553:0:0, v554:0:0, v556:0:0, v567:0:0, v559:0:0, v560:0:0, v557:0:0, v563:0:0, v564:0:0, v565:0:0) -> f_324(v550:0:0, v551:0:0, v552:0:0, v553:0:0, v554:0:0, v556:0:0, v567:0:0, v557:0:0, v556:0:0, v563:0:0, v564:0:0, v565:0:0) :|: v564:0:0 >= v551:0:0 && v565:0:0 >= v552:0:0 && v563:0:0 >= v550:0:0 && v565:0:0 > 3 && v564:0:0 > 3 && v563:0:0 > 3 && v557:0:0 > 2 && v567:0:0 > 0 && v556:0:0 > 1 && v554:0:0 > 1 && v553:0:0 > 1 && v552:0:0 > 0 && v551:0:0 > 0 && v550:0:0 > 0 && v567:0:0 < v556:0:0 && v559:0:0 > 4 && v560:0:0 > 2
f_324(x42:0, x43:0, x44:0, x45:0, x46:0, sum~x54:0~sum~x55:0~x54:0, sum~x55:0~x54:0, x49:0, x50:0, x51:0, x52:0, x53:0) -> f_358(x42:0, x43:0, x44:0, x45:0, x46:0, x54:0, x55:0, x54:0 + (x55:0 + x54:0), x55:0 + x54:0, x55:0 + x54:0, x51:0, x52:0, x53:0) :|: x55:0 > 0 && x55:0 < x54:0 && x53:0 >= x44:0 && x52:0 >= x43:0 && x51:0 >= x42:0 && x53:0 > 3 && x52:0 > 3 && x51:0 > 3 && x54:0 > 0 && x46:0 > 1 && x45:0 > 1 && x44:0 > 0 && x43:0 > 0 && x55:0 + x54:0 < x50:0 && x42:0 > 0 && x49:0 > 4 && x55:0 + x54:0 > x54:0 && x54:0 + (x55:0 + x54:0) > 2 && x50:0 > 2 && x55:0 + x54:0 > 1 && sum~x54:0~sum~x55:0~x54:0 = x54:0 + (x55:0 + x54:0) && sum~x55:0~x54:0 = x55:0 + x54:0
f_358(x14:0, x15:0, x16:0, x17:0, x18:0, x19:0, sum~x27:0~x19:0, x21:0, x22:0, x23:0, x24:0, x25:0, x26:0) -> f_358(x14:0, x15:0, x16:0, x17:0, x18:0, x19:0, x27:0, x21:0, x22:0, x27:0 + x19:0, x24:0, x25:0, x26:0) :|: x27:0 < x19:0 && x27:0 > 0 && x26:0 >= x16:0 && x25:0 >= x15:0 && x24:0 >= x14:0 && x26:0 > 3 && x25:0 > 3 && x24:0 > 3 && x23:0 > 2 && x22:0 > 1 && x21:0 > 2 && x27:0 + x19:0 > 1 && x19:0 > 0 && x18:0 > 1 && x17:0 > 1 && x16:0 > 0 && x15:0 > 0 && x14:0 > 0 && x27:0 + x19:0 > x19:0 && x22:0 > x19:0 && sum~x27:0~x19:0 = x27:0 + x19:0

The following rules are bounded:
f_358(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, sum~x13:0~x5:0, x7:0, x8:0, x9:0, x10:0, x11:0, x12:0) -> f_358(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x13:0, x7:0, x8:0, x13:0 + x5:0, x10:0, x11:0, x12:0) :|: x5:0 < x13:0 && x13:0 > 0 && x2:0 <= x12:0 && x1:0 <= x11:0 && x:0 <= x10:0 && x12:0 > 3 && x11:0 > 3 && x10:0 > 3 && x9:0 > 2 && x8:0 > 1 && x7:0 > 2 && x13:0 + x5:0 > 1 && x5:0 > 0 && x4:0 > 1 && x3:0 > 1 && x2:0 > 0 && x1:0 > 0 && x:0 > 0 && x5:0 < x13:0 + x5:0 && x8:0 > x5:0 && sum~x13:0~x5:0 = x13:0 + x5:0
f_324(x28:0, x29:0, x30:0, x31:0, x32:0, sum~x40:0~sum~x41:0~x40:0, sum~x41:0~x40:0, x35:0, x36:0, x37:0, x38:0, x39:0) -> f_358(x28:0, x29:0, x30:0, x31:0, x32:0, x40:0, x41:0, x40:0 + (x41:0 + x40:0), x41:0 + x40:0, x41:0 + x40:0, x37:0, x38:0, x39:0) :|: x41:0 > 0 && x41:0 > x40:0 && x39:0 >= x30:0 && x38:0 >= x29:0 && x37:0 >= x28:0 && x39:0 > 3 && x38:0 > 3 && x37:0 > 3 && x40:0 > 0 && x32:0 > 1 && x31:0 > 1 && x30:0 > 0 && x29:0 > 0 && x41:0 + x40:0 < x36:0 && x28:0 > 0 && x35:0 > 4 && x41:0 + x40:0 > x40:0 && x40:0 + (x41:0 + x40:0) > 2 && x36:0 > 2 && x41:0 + x40:0 > 1 && sum~x40:0~sum~x41:0~x40:0 = x40:0 + (x41:0 + x40:0) && sum~x41:0~x40:0 = x41:0 + x40:0
f_324(v514:0:0, v515:0:0, v516:0:0, v517:0:0, v518:0:0, sum~v566:0:0~v521:0:0, v521:0:0, v524:0:0, v525:0:0, v526:0:0, v527:0:0, v528:0:0) -> f_324(v514:0:0, v515:0:0, v516:0:0, v517:0:0, v518:0:0, v566:0:0, v521:0:0, v524:0:0, v525:0:0, v526:0:0, v527:0:0, v528:0:0) :|: v528:0:0 >= v516:0:0 && v527:0:0 >= v515:0:0 && v526:0:0 >= v514:0:0 && v528:0:0 > 3 && v527:0:0 > 3 && v526:0:0 > 3 && v566:0:0 > v521:0:0 && v525:0:0 > 1 && v524:0:0 > 2 && v521:0:0 > 0 && v518:0:0 > 1 && v517:0:0 > 1 && v516:0:0 > 0 && v515:0:0 > 0 && v525:0:0 > v521:0:0 && v514:0:0 > 0 && v566:0:0 > 1 && v566:0:0 + v521:0:0 > 2 && sum~v566:0:0~v521:0:0 = v566:0:0 + v521:0:0
f_358(v550:0:0, v551:0:0, v552:0:0, v553:0:0, v554:0:0, v556:0:0, v567:0:0, v559:0:0, v560:0:0, v557:0:0, v563:0:0, v564:0:0, v565:0:0) -> f_324(v550:0:0, v551:0:0, v552:0:0, v553:0:0, v554:0:0, v556:0:0, v567:0:0, v557:0:0, v556:0:0, v563:0:0, v564:0:0, v565:0:0) :|: v564:0:0 >= v551:0:0 && v565:0:0 >= v552:0:0 && v563:0:0 >= v550:0:0 && v565:0:0 > 3 && v564:0:0 > 3 && v563:0:0 > 3 && v557:0:0 > 2 && v567:0:0 > 0 && v556:0:0 > 1 && v554:0:0 > 1 && v553:0:0 > 1 && v552:0:0 > 0 && v551:0:0 > 0 && v550:0:0 > 0 && v567:0:0 < v556:0:0 && v559:0:0 > 4 && v560:0:0 > 2
f_324(x42:0, x43:0, x44:0, x45:0, x46:0, sum~x54:0~sum~x55:0~x54:0, sum~x55:0~x54:0, x49:0, x50:0, x51:0, x52:0, x53:0) -> f_358(x42:0, x43:0, x44:0, x45:0, x46:0, x54:0, x55:0, x54:0 + (x55:0 + x54:0), x55:0 + x54:0, x55:0 + x54:0, x51:0, x52:0, x53:0) :|: x55:0 > 0 && x55:0 < x54:0 && x53:0 >= x44:0 && x52:0 >= x43:0 && x51:0 >= x42:0 && x53:0 > 3 && x52:0 > 3 && x51:0 > 3 && x54:0 > 0 && x46:0 > 1 && x45:0 > 1 && x44:0 > 0 && x43:0 > 0 && x55:0 + x54:0 < x50:0 && x42:0 > 0 && x49:0 > 4 && x55:0 + x54:0 > x54:0 && x54:0 + (x55:0 + x54:0) > 2 && x50:0 > 2 && x55:0 + x54:0 > 1 && sum~x54:0~sum~x55:0~x54:0 = x54:0 + (x55:0 + x54:0) && sum~x55:0~x54:0 = x55:0 + x54:0
f_358(x14:0, x15:0, x16:0, x17:0, x18:0, x19:0, sum~x27:0~x19:0, x21:0, x22:0, x23:0, x24:0, x25:0, x26:0) -> f_358(x14:0, x15:0, x16:0, x17:0, x18:0, x19:0, x27:0, x21:0, x22:0, x27:0 + x19:0, x24:0, x25:0, x26:0) :|: x27:0 < x19:0 && x27:0 > 0 && x26:0 >= x16:0 && x25:0 >= x15:0 && x24:0 >= x14:0 && x26:0 > 3 && x25:0 > 3 && x24:0 > 3 && x23:0 > 2 && x22:0 > 1 && x21:0 > 2 && x27:0 + x19:0 > 1 && x19:0 > 0 && x18:0 > 1 && x17:0 > 1 && x16:0 > 0 && x15:0 > 0 && x14:0 > 0 && x27:0 + x19:0 > x19:0 && x22:0 > x19:0 && sum~x27:0~x19:0 = x27:0 + x19:0


----------------------------------------

(13)
YES

----------------------------------------

(14)
Obligation:
SCC
----------------------------------------

(15) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 17 rulesP rules:
f_231(v140, v141, v142, v143, v144, 1, v147, v146, v148, v149, v150, 0, 3, 2, 4) -> f_233(v140, v141, v142, v143, v144, 1, v147, v146, v148, v149, v150, 0, 3, 2, 4) :|: 0 = 0
f_233(v140, v141, v142, v143, v144, 1, v147, v146, v148, v149, v150, 0, 3, 2, 4) -> f_235(v140, v141, v142, v143, v144, 1, v147, v146, v148, v149, v150, 0, 3, 2, 4) :|: v147 != v144
f_235(v140, v141, v142, v143, v144, 1, v147, v146, v148, v149, v150, 0, 3, 2, 4) -> f_239(v140, v141, v142, v143, v144, 1, v147, v146, v148, v149, v150, 0, 3, 2, 4) :|: 0 = 0
f_239(v140, v141, v142, v143, v144, 1, v147, v146, v148, v149, v150, 0, 3, 2, 4) -> f_243(v140, v141, v142, v143, v144, 1, v147, v146, v148, v149, v150, 0, 3, 2, 4) :|: TRUE
f_243(v140, v141, v142, v143, v144, 1, v147, v146, v148, v149, v150, 0, 3, 2, 4) -> f_247(v140, v141, v142, v143, v144, 1, v147, v146, v148, v149, v150, 0, 3, 2, 4) :|: 0 = 0
f_247(v140, v141, v142, v143, v144, 1, v147, v146, v148, v149, v150, 0, 3, 2, 4) -> f_251(v140, v141, v142, v143, v144, 1, v147, v146, v148, v149, v150, 0, 3, 2, 4) :|: 0 = 0
f_251(v140, v141, v142, v143, v144, 1, v147, v146, v148, v149, v150, 0, 3, 2, 4) -> f_253(v140, v141, v142, v143, v144, 1, v147, v146, v148, v149, v150, 0, 3, 2, 4) :|: v144 < v147 && 2 <= v147 && 3 <= v146
f_253(v140, v141, v142, v143, v144, 1, v147, v146, v148, v149, v150, 0, 3, 2, 4) -> f_257(v140, v141, v142, v143, v144, 1, v147, v146, v148, v149, v150, 0, 3, 2, 4) :|: 0 = 0
f_257(v140, v141, v142, v143, v144, 1, v147, v146, v148, v149, v150, 0, 3, 2, 4) -> f_261(v140, v141, v142, v143, v144, 1, v147, v146, v148, v149, v150, 0, 3, 2, 4) :|: TRUE
f_261(v140, v141, v142, v143, v144, 1, v147, v146, v148, v149, v150, 0, 3, 2, 4) -> f_265(v140, v141, v142, v143, v144, 1, v147, v148, v149, v150, 0, 3, 2, 4) :|: 0 = 0
f_265(v140, v141, v142, v143, v144, 1, v147, v148, v149, v150, 0, 3, 2, 4) -> f_269(v140, v141, v142, v143, v144, 1, v147, v148, v149, v150, 0, 3, 2, 4) :|: 0 = 0
f_269(v140, v141, v142, v143, v144, 1, v147, v148, v149, v150, 0, 3, 2, 4) -> f_273(v140, v141, v142, v143, v144, 1, v147, v193, v148, v149, v150, 0, 3, 2, 4) :|: v193 + v144 = v147 && 1 <= v193
f_273(v140, v141, v142, v143, v144, 1, v147, v193, v148, v149, v150, 0, 3, 2, 4) -> f_277(v140, v141, v142, v143, v144, 1, v147, v193, v148, v149, v150, 0, 3, 2, 4) :|: TRUE
f_277(v140, v141, v142, v143, v144, 1, v147, v193, v148, v149, v150, 0, 3, 2, 4) -> f_281(v140, v141, v142, v143, v144, 1, v147, v193, v148, v149, v150, 0, 3, 2, 4) :|: TRUE
f_281(v140, v141, v142, v143, v144, 1, v147, v193, v148, v149, v150, 0, 3, 2, 4) -> f_285(v140, v141, v142, v143, v144, 1, v147, v193, v148, v149, v150, 0, 3, 2, 4) :|: TRUE
f_285(v140, v141, v142, v143, v144, 1, v147, v193, v148, v149, v150, 0, 3, 2, 4) -> f_229(v140, v141, v142, v143, v144, 1, v147, v193, v148, v149, v150, 0, 3, 2, 4) :|: 1 <= v140 && 1 <= v141 && 1 <= v142 && 2 <= v143 && 1 <= v144 && 2 <= v147 && 1 <= v193 && 4 <= v148 && 4 <= v149 && 4 <= v150 && v140 <= v148 && v141 <= v149 && v142 <= v150
f_229(v140, v141, v142, v143, v144, 1, v146, v147, v148, v149, v150, 0, 3, 2, 4) -> f_231(v140, v141, v142, v143, v144, 1, v147, v146, v148, v149, v150, 0, 3, 2, 4) :|: 0 = 0
Combined rules. Obtained 1 rulesP rules:
f_231(v140:0, v141:0, v142:0, v143:0, v144:0, 1, v193:0 + v144:0, v146:0, v148:0, v149:0, v150:0, 0, 3, 2, 4) -> f_231(v140:0, v141:0, v142:0, v143:0, v144:0, 1, v193:0, v193:0 + v144:0, v148:0, v149:0, v150:0, 0, 3, 2, 4) :|: v193:0 + v144:0 > v144:0 && v141:0 > 0 && v140:0 > 0 && v142:0 > 0 && v193:0 + v144:0 > 1 && v143:0 > 1 && v146:0 > 2 && v144:0 > 0 && v193:0 > 0 && v148:0 > 3 && v149:0 > 3 && v150:0 > 3 && v148:0 >= v140:0 && v150:0 >= v142:0 && v149:0 >= v141:0
Filtered unneeded arguments:
   f_231(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15) -> f_231(x1, x2, x3, x4, x5, x7, x8, x9, x10, x11)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_231(v140:0, v141:0, v142:0, v143:0, v144:0, sum~v193:0~v144:0, v146:0, v148:0, v149:0, v150:0) -> f_231(v140:0, v141:0, v142:0, v143:0, v144:0, v193:0, v193:0 + v144:0, v148:0, v149:0, v150:0) :|: v141:0 > 0 && v193:0 + v144:0 > v144:0 && v140:0 > 0 && v142:0 > 0 && v193:0 + v144:0 > 1 && v143:0 > 1 && v146:0 > 2 && v144:0 > 0 && v193:0 > 0 && v148:0 > 3 && v149:0 > 3 && v150:0 > 3 && v148:0 >= v140:0 && v149:0 >= v141:0 && v150:0 >= v142:0 && sum~v193:0~v144:0 = v193:0 + v144:0

----------------------------------------

(16)
Obligation:
Rules:
f_231(v140:0, v141:0, v142:0, v143:0, v144:0, sum~v193:0~v144:0, v146:0, v148:0, v149:0, v150:0) -> f_231(v140:0, v141:0, v142:0, v143:0, v144:0, v193:0, v193:0 + v144:0, v148:0, v149:0, v150:0) :|: v141:0 > 0 && v193:0 + v144:0 > v144:0 && v140:0 > 0 && v142:0 > 0 && v193:0 + v144:0 > 1 && v143:0 > 1 && v146:0 > 2 && v144:0 > 0 && v193:0 > 0 && v148:0 > 3 && v149:0 > 3 && v150:0 > 3 && v148:0 >= v140:0 && v149:0 >= v141:0 && v150:0 >= v142:0 && sum~v193:0~v144:0 = v193:0 + v144:0

----------------------------------------

(17) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(18)
Obligation:
Rules:
f_231(v140:0:0, v141:0:0, v142:0:0, v143:0:0, v144:0:0, sum~v193:0:0~v144:0:0, v146:0:0, v148:0:0, v149:0:0, v150:0:0) -> f_231(v140:0:0, v141:0:0, v142:0:0, v143:0:0, v144:0:0, v193:0:0, v193:0:0 + v144:0:0, v148:0:0, v149:0:0, v150:0:0) :|: v149:0:0 >= v141:0:0 && v150:0:0 >= v142:0:0 && v148:0:0 >= v140:0:0 && v150:0:0 > 3 && v149:0:0 > 3 && v148:0:0 > 3 && v193:0:0 > 0 && v144:0:0 > 0 && v146:0:0 > 2 && v143:0:0 > 1 && v193:0:0 + v144:0:0 > 1 && v142:0:0 > 0 && v140:0:0 > 0 && v193:0:0 + v144:0:0 > v144:0:0 && v141:0:0 > 0 && sum~v193:0:0~v144:0:0 = v193:0:0 + v144:0:0

----------------------------------------

(19) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_231 ] = f_231_6

The following rules are decreasing:
f_231(v140:0:0, v141:0:0, v142:0:0, v143:0:0, v144:0:0, sum~v193:0:0~v144:0:0, v146:0:0, v148:0:0, v149:0:0, v150:0:0) -> f_231(v140:0:0, v141:0:0, v142:0:0, v143:0:0, v144:0:0, v193:0:0, v193:0:0 + v144:0:0, v148:0:0, v149:0:0, v150:0:0) :|: v149:0:0 >= v141:0:0 && v150:0:0 >= v142:0:0 && v148:0:0 >= v140:0:0 && v150:0:0 > 3 && v149:0:0 > 3 && v148:0:0 > 3 && v193:0:0 > 0 && v144:0:0 > 0 && v146:0:0 > 2 && v143:0:0 > 1 && v193:0:0 + v144:0:0 > 1 && v142:0:0 > 0 && v140:0:0 > 0 && v193:0:0 + v144:0:0 > v144:0:0 && v141:0:0 > 0 && sum~v193:0:0~v144:0:0 = v193:0:0 + v144:0:0

The following rules are bounded:
f_231(v140:0:0, v141:0:0, v142:0:0, v143:0:0, v144:0:0, sum~v193:0:0~v144:0:0, v146:0:0, v148:0:0, v149:0:0, v150:0:0) -> f_231(v140:0:0, v141:0:0, v142:0:0, v143:0:0, v144:0:0, v193:0:0, v193:0:0 + v144:0:0, v148:0:0, v149:0:0, v150:0:0) :|: v149:0:0 >= v141:0:0 && v150:0:0 >= v142:0:0 && v148:0:0 >= v140:0:0 && v150:0:0 > 3 && v149:0:0 > 3 && v148:0:0 > 3 && v193:0:0 > 0 && v144:0:0 > 0 && v146:0:0 > 2 && v143:0:0 > 1 && v193:0:0 + v144:0:0 > 1 && v142:0:0 > 0 && v140:0:0 > 0 && v193:0:0 + v144:0:0 > v144:0:0 && v141:0:0 > 0 && sum~v193:0:0~v144:0:0 = v193:0:0 + v144:0:0


----------------------------------------

(20)
YES

----------------------------------------

(21)
Obligation:
SCC
----------------------------------------

(22) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 17 rulesP rules:
f_230(v104, v105, v106, v107, v108, 1, v110, 0, v112, v113, v114, v115, 3, 2, 4) -> f_232(v104, v105, v106, v107, v108, 1, v110, 0, v112, v113, v114, v115, 3, 2, 4) :|: 0 = 0
f_232(v104, v105, v106, v107, v108, 1, v110, 0, v112, v113, v114, v115, 3, 2, 4) -> f_234(v104, v105, v106, v107, v108, 1, v112, v110, 0, v113, v114, v115, 3, 2, 4) :|: 0 = 0
f_234(v104, v105, v106, v107, v108, 1, v112, v110, 0, v113, v114, v115, 3, 2, 4) -> f_237(v104, v105, v106, v107, v108, 1, v112, v110, 0, v113, v114, v115, 3, 2, 4) :|: v107 != v112
f_237(v104, v105, v106, v107, v108, 1, v112, v110, 0, v113, v114, v115, 3, 2, 4) -> f_241(v104, v105, v106, v107, v108, 1, v112, v110, 0, v113, v114, v115, 3, 2, 4) :|: 0 = 0
f_241(v104, v105, v106, v107, v108, 1, v112, v110, 0, v113, v114, v115, 3, 2, 4) -> f_245(v104, v105, v106, v107, v108, 1, v112, v110, 0, v113, v114, v115, 3, 2, 4) :|: TRUE
f_245(v104, v105, v106, v107, v108, 1, v112, v110, 0, v113, v114, v115, 3, 2, 4) -> f_249(v104, v105, v106, v107, v108, 1, v112, v110, 0, v113, v114, v115, 3, 2, 4) :|: 0 = 0
f_249(v104, v105, v106, v107, v108, 1, v112, v110, 0, v113, v114, v115, 3, 2, 4) -> f_252(v104, v105, v106, v107, v108, 1, v112, 0, v110, v113, v114, v115, 3, 2, 4) :|: 0 = 0
f_252(v104, v105, v106, v107, v108, 1, v112, 0, v110, v113, v114, v115, 3, 2, 4) -> f_256(v104, v105, v106, v107, v108, 1, v112, 0, v110, v113, v114, v115, 3, 2, 4) :|: v107 <= v112 && 2 <= v112 && 3 <= v110
f_256(v104, v105, v106, v107, v108, 1, v112, 0, v110, v113, v114, v115, 3, 2, 4) -> f_260(v104, v105, v106, v107, v108, 1, v112, 0, v110, v113, v114, v115, 3, 2, 4) :|: 0 = 0
f_260(v104, v105, v106, v107, v108, 1, v112, 0, v110, v113, v114, v115, 3, 2, 4) -> f_264(v104, v105, v106, v107, v108, 1, v112, 0, v110, v113, v114, v115, 3, 2, 4) :|: TRUE
f_264(v104, v105, v106, v107, v108, 1, v112, 0, v110, v113, v114, v115, 3, 2, 4) -> f_268(v104, v105, v106, v107, v108, 1, v112, 0, v113, v114, v115, 3, 2, 4) :|: 0 = 0
f_268(v104, v105, v106, v107, v108, 1, v112, 0, v113, v114, v115, 3, 2, 4) -> f_272(v104, v105, v106, v107, v108, 1, v112, 0, v113, v114, v115, 3, 2, 4) :|: 0 = 0
f_272(v104, v105, v106, v107, v108, 1, v112, 0, v113, v114, v115, 3, 2, 4) -> f_276(v104, v105, v106, v107, v108, 1, v112, 0, v196, v113, v114, v115, 3, 2, 4) :|: v196 + v107 = v112 && 1 <= v196
f_276(v104, v105, v106, v107, v108, 1, v112, 0, v196, v113, v114, v115, 3, 2, 4) -> f_280(v104, v105, v106, v107, v108, 1, v112, 0, v196, v113, v114, v115, 3, 2, 4) :|: TRUE
f_280(v104, v105, v106, v107, v108, 1, v112, 0, v196, v113, v114, v115, 3, 2, 4) -> f_284(v104, v105, v106, v107, v108, 1, v112, 0, v196, v113, v114, v115, 3, 2, 4) :|: TRUE
f_284(v104, v105, v106, v107, v108, 1, v112, 0, v196, v113, v114, v115, 3, 2, 4) -> f_227(v104, v105, v106, v107, v108, 1, v112, 0, v196, v113, v114, v115, 3, 2, 4) :|: 1 <= v104 && 1 <= v105 && 1 <= v106 && 1 <= v107 && 2 <= v108 && 2 <= v112 && 1 <= v196 && 4 <= v113 && 4 <= v114 && 4 <= v115 && v104 <= v113 && v105 <= v114 && v106 <= v115
f_227(v104, v105, v106, v107, v108, 1, v110, 0, v112, v113, v114, v115, 3, 2, 4) -> f_230(v104, v105, v106, v107, v108, 1, v110, 0, v112, v113, v114, v115, 3, 2, 4) :|: TRUE
Combined rules. Obtained 1 rulesP rules:
f_230(v104:0, v105:0, v106:0, v107:0, v108:0, 1, v110:0, 0, v196:0 + v107:0, v113:0, v114:0, v115:0, 3, 2, 4) -> f_230(v104:0, v105:0, v106:0, v107:0, v108:0, 1, v196:0 + v107:0, 0, v196:0, v113:0, v114:0, v115:0, 3, 2, 4) :|: v196:0 + v107:0 > v107:0 && v105:0 > 0 && v104:0 > 0 && v106:0 > 0 && v107:0 > 0 && v196:0 + v107:0 > 1 && v108:0 > 1 && v110:0 > 2 && v196:0 > 0 && v113:0 > 3 && v114:0 > 3 && v115:0 > 3 && v113:0 >= v104:0 && v115:0 >= v106:0 && v114:0 >= v105:0
Filtered unneeded arguments:
   f_230(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15) -> f_230(x1, x2, x3, x4, x5, x7, x9, x10, x11, x12)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_230(v104:0, v105:0, v106:0, v107:0, v108:0, v110:0, sum~v196:0~v107:0, v113:0, v114:0, v115:0) -> f_230(v104:0, v105:0, v106:0, v107:0, v108:0, v196:0 + v107:0, v196:0, v113:0, v114:0, v115:0) :|: v105:0 > 0 && v196:0 + v107:0 > v107:0 && v104:0 > 0 && v106:0 > 0 && v107:0 > 0 && v196:0 + v107:0 > 1 && v108:0 > 1 && v110:0 > 2 && v196:0 > 0 && v113:0 > 3 && v114:0 > 3 && v115:0 > 3 && v113:0 >= v104:0 && v114:0 >= v105:0 && v115:0 >= v106:0 && sum~v196:0~v107:0 = v196:0 + v107:0

----------------------------------------

(23)
Obligation:
Rules:
f_230(v104:0, v105:0, v106:0, v107:0, v108:0, v110:0, sum~v196:0~v107:0, v113:0, v114:0, v115:0) -> f_230(v104:0, v105:0, v106:0, v107:0, v108:0, v196:0 + v107:0, v196:0, v113:0, v114:0, v115:0) :|: v105:0 > 0 && v196:0 + v107:0 > v107:0 && v104:0 > 0 && v106:0 > 0 && v107:0 > 0 && v196:0 + v107:0 > 1 && v108:0 > 1 && v110:0 > 2 && v196:0 > 0 && v113:0 > 3 && v114:0 > 3 && v115:0 > 3 && v113:0 >= v104:0 && v114:0 >= v105:0 && v115:0 >= v106:0 && sum~v196:0~v107:0 = v196:0 + v107:0

----------------------------------------

(24) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(25)
Obligation:
Rules:
f_230(v104:0:0, v105:0:0, v106:0:0, v107:0:0, v108:0:0, v110:0:0, sum~v196:0:0~v107:0:0, v113:0:0, v114:0:0, v115:0:0) -> f_230(v104:0:0, v105:0:0, v106:0:0, v107:0:0, v108:0:0, v196:0:0 + v107:0:0, v196:0:0, v113:0:0, v114:0:0, v115:0:0) :|: v114:0:0 >= v105:0:0 && v115:0:0 >= v106:0:0 && v113:0:0 >= v104:0:0 && v115:0:0 > 3 && v114:0:0 > 3 && v113:0:0 > 3 && v196:0:0 > 0 && v110:0:0 > 2 && v108:0:0 > 1 && v196:0:0 + v107:0:0 > 1 && v107:0:0 > 0 && v106:0:0 > 0 && v104:0:0 > 0 && v196:0:0 + v107:0:0 > v107:0:0 && v105:0:0 > 0 && sum~v196:0:0~v107:0:0 = v196:0:0 + v107:0:0

----------------------------------------

(26) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_230 ] = f_230_7

The following rules are decreasing:
f_230(v104:0:0, v105:0:0, v106:0:0, v107:0:0, v108:0:0, v110:0:0, sum~v196:0:0~v107:0:0, v113:0:0, v114:0:0, v115:0:0) -> f_230(v104:0:0, v105:0:0, v106:0:0, v107:0:0, v108:0:0, v196:0:0 + v107:0:0, v196:0:0, v113:0:0, v114:0:0, v115:0:0) :|: v114:0:0 >= v105:0:0 && v115:0:0 >= v106:0:0 && v113:0:0 >= v104:0:0 && v115:0:0 > 3 && v114:0:0 > 3 && v113:0:0 > 3 && v196:0:0 > 0 && v110:0:0 > 2 && v108:0:0 > 1 && v196:0:0 + v107:0:0 > 1 && v107:0:0 > 0 && v106:0:0 > 0 && v104:0:0 > 0 && v196:0:0 + v107:0:0 > v107:0:0 && v105:0:0 > 0 && sum~v196:0:0~v107:0:0 = v196:0:0 + v107:0:0

The following rules are bounded:
f_230(v104:0:0, v105:0:0, v106:0:0, v107:0:0, v108:0:0, v110:0:0, sum~v196:0:0~v107:0:0, v113:0:0, v114:0:0, v115:0:0) -> f_230(v104:0:0, v105:0:0, v106:0:0, v107:0:0, v108:0:0, v196:0:0 + v107:0:0, v196:0:0, v113:0:0, v114:0:0, v115:0:0) :|: v114:0:0 >= v105:0:0 && v115:0:0 >= v106:0:0 && v113:0:0 >= v104:0:0 && v115:0:0 > 3 && v114:0:0 > 3 && v113:0:0 > 3 && v196:0:0 > 0 && v110:0:0 > 2 && v108:0:0 > 1 && v196:0:0 + v107:0:0 > 1 && v107:0:0 > 0 && v106:0:0 > 0 && v104:0:0 > 0 && v196:0:0 + v107:0:0 > v107:0:0 && v105:0:0 > 0 && sum~v196:0:0~v107:0:0 = v196:0:0 + v107:0:0


----------------------------------------

(27)
YES
Graph finished, checking  consistency
Graph finished, checked consistency, took 0.001s
