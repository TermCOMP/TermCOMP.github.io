YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/y5E7t.c
# AProVE Commit ID: 48c83ccb80d5f8312cb92f4aa1b51dc35e247e65 nils 20241118 unpublished


Termination of the given C Problem could be proven:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 45 ms]
(2) LLVM problem
(3) LLVMToTerminationGraphProof [EQUIVALENT, 2821 ms]
(4) LLVM Symbolic Execution Graph
(5) SymbolicExecutionGraphToSCCProof [SOUND, 0 ms]
(6) AND
    (7) LLVM Symbolic Execution SCC
        (8) SCC2IRS [SOUND, 225 ms]
        (9) IntTRS
        (10) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (11) IntTRS
        (12) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
        (13) IntTRS
        (14) PolynomialOrderProcessor [EQUIVALENT, 9 ms]
        (15) AND
            (16) IntTRS
                (17) TerminationGraphProcessor [EQUIVALENT, 0 ms]
                (18) IntTRS
                (19) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                (20) IntTRS
                (21) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
                (22) IntTRS
                (23) RankingReductionPairProof [EQUIVALENT, 1 ms]
                (24) YES
            (25) IntTRS
                (26) TerminationGraphProcessor [EQUIVALENT, 3 ms]
                (27) IntTRS
                (28) IntTRSCompressionProof [EQUIVALENT, 0 ms]
                (29) IntTRS
                (30) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
                (31) IntTRS
                (32) RankingReductionPairProof [EQUIVALENT, 1 ms]
                (33) YES
    (34) LLVM Symbolic Execution SCC
        (35) SCC2IRS [SOUND, 53 ms]
        (36) IntTRS
        (37) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (38) IntTRS
        (39) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
        (40) IntTRS
        (41) PolynomialOrderProcessor [EQUIVALENT, 1 ms]
        (42) YES
    (43) LLVM Symbolic Execution SCC
        (44) SCC2IRS [SOUND, 43 ms]
        (45) IntTRS
        (46) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (47) IntTRS
        (48) RankingReductionPairProof [EQUIVALENT, 9 ms]
        (49) YES
    (50) LLVM Symbolic Execution SCC
        (51) SCC2IRS [SOUND, 59 ms]
        (52) IntTRS
        (53) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (54) IntTRS
        (55) RankingReductionPairProof [EQUIVALENT, 2 ms]
        (56) YES


----------------------------------------

(0)
Obligation:
c file /hpcwork/ff862203/termcomp25/benchmarks/y5E7t.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /hpcwork/ff862203/termcomp25/benchmarks/y5E7t.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-pc-linux-gnu"

Type definitions:

Global variables:

Function declarations and definitions:

*BasicFunctionTypename: "llvm.dbg.declare" returnParam: BasicVoidType parameters: (BasicMetadataType, BasicMetadataType, BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_nondet_int" returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "malloc" returnParam: *i8 noalias parameters: (i64) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_nondet_String" linkageType: EXTERNALLY_VISIBLE returnParam: *i8 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 10
	0:
		%1 = alloca i32, align 4
		%2 = alloca *i8, align 8
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %1)
		%3 = call i32 @__VERIFIER_nondet_int()
		store %3, %1
		%4 = load %1
		%5 = icmp slt %4 1
		br %5, %6, %7
	6:
		store 1, %1
		br %7
	7:
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i8 %2)
		%8 = load %1
		%9 = sext i32 %8 to i64
		%10 = mul i64 %9, 1
		%11 = call noalias *i8 @malloc(i64 %10)
		store %11, %2
		%12 = load %2
		%13 = load %1
		%14 = sub i32 %13, 1
		%15 = sext i32 %14 to i64
		%16 = getelementptr %12, %15
		store 0, %16
		%17 = load %2
		ret %17

*BasicFunctionTypename: "cstrcspn" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: (0 *i8, 1 *i8) variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 36
	0:
		%3 = alloca i32, align 4
		%4 = alloca *i8, align 8
		%5 = alloca *i8, align 8
		%6 = alloca *i8, align 8
		%7 = alloca *i8, align 8
		%8 = alloca i32, align 4
		store %0, %4
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i8 %4)
		store %1, %5
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i8 %5)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i8 %6)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i8 %7)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %8)
		%9 = load %4
		store %9, %6
		br %10
	10:
		%11 = load %6
		%12 = load %11
		%13 = sext i8 %12 to i32
		%14 = icmp ne %13 0
		br %14, %15, %55
	15:
		%16 = load %5
		store %16, %7
		%17 = load %6
		%18 = load %17
		%19 = sext i8 %18 to i32
		store %19, %8
		br %20
	20:
		%21 = load %7
		%22 = load %21
		%23 = sext i8 %22 to i32
		%24 = icmp ne %23 0
		br %24, %25, %33
	25:
		%26 = load %7
		%27 = load %26
		%28 = sext i8 %27 to i32
		%29 = load %8
		%30 = trunc i32 %29 to i8
		%31 = sext i8 %30 to i32
		%32 = icmp ne %28 %31
		br %33
	33:
		%34 = phi [0, %20], [%32, %25]
		br %34, %35, %38
	35:
		%36 = load %7
		%37 = getelementptr %36, 1
		store %37, %7
		br %20
	38:
		%39 = load %7
		%40 = load %39
		%41 = sext i8 %40 to i32
		%42 = load %8
		%43 = icmp eq %41 %42
		br %43, %44, %51
	44:
		%45 = load %6
		%46 = load %4
		%47 = ptrtoint *i8 %45 to i64
		%48 = ptrtoint *i8 %46 to i64
		%49 = sub i64 %47, %48
		%50 = trunc i64 %49 to i32
		store %50, %3
		br %62
	51:
		br %52
	52:
		%53 = load %6
		%54 = getelementptr %53, 1
		store %54, %6
		br %10
	55:
		%56 = load %6
		%57 = load %4
		%58 = ptrtoint *i8 %56 to i64
		%59 = ptrtoint *i8 %57 to i64
		%60 = sub i64 %58, %59
		%61 = trunc i64 %60 to i32
		store %61, %3
		br %62
	62:
		%63 = load %3
		ret %63

*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 100
	0:
		%1 = alloca i32, align 4
		store 0, %1
		%2 = call *i8 @__VERIFIER_nondet_String()
		%3 = call *i8 @__VERIFIER_nondet_String()
		%4 = call i32 @cstrcspn(*i8 %2, *i8 %3)
		ret %4


Analyze Termination of all function calls matching the pattern:
main()
----------------------------------------

(3) LLVMToTerminationGraphProof (EQUIVALENT)
Constructed symbolic execution graph for LLVM program.
----------------------------------------

(4)
Obligation:
Symbolic Execution Graph
----------------------------------------

(5) SymbolicExecutionGraphToSCCProof (SOUND)
Splitted symbolic execution graph to 4 SCCs.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
SCC
----------------------------------------

(8) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 120 rulesP rules:
f_1214(v6517, v6518, v6519, v6520, v6521, v6522, v6523, v6524, v6525, v6526, 1, v6528, v6529, v6530, v6531, v6532, v6533, v6534, v6535, 0, v6537, v6538, v6539, v6540, v6541, v6542, v6543, v6544, v6545, v6546, v6547, v6548, v6549, v6550, v6551, 3, 7, 2, 4, 8) -> f_1217(v6517, v6518, v6519, v6520, v6521, v6522, v6523, v6524, v6525, v6526, 1, v6528, v6529, v6530, v6532, v6533, v6534, v6535, 0, v6537, v6538, v6539, v6540, v6541, v6542, v6543, v6544, v6545, v6546, v6547, v6548, v6549, v6531, v6550, v6551, 3, 7, 2, 4, 8) :|: 0 = 0
f_1217(v6517, v6518, v6519, v6520, v6521, v6522, v6523, v6524, v6525, v6526, 1, v6528, v6529, v6530, v6532, v6533, v6534, v6535, 0, v6537, v6538, v6539, v6540, v6541, v6542, v6543, v6544, v6545, v6546, v6547, v6548, v6549, v6531, v6550, v6551, 3, 7, 2, 4, 8) -> f_1220(v6517, v6518, v6519, v6520, v6521, v6522, v6523, v6524, v6525, v6526, 1, v6528, v6529, v6530, v7242, v6533, v6534, v6535, 0, v6537, v6538, v6539, v6540, v6541, v6542, v6543, v6544, v6545, v6546, v6547, v6548, v6549, v6531, v6550, v6532, v6551, 3, 7, 2, 4, 8) :|: v7242 = 1 + v6528 && 2 <= v7242
f_1220(v6517, v6518, v6519, v6520, v6521, v6522, v6523, v6524, v6525, v6526, 1, v6528, v6529, v6530, v7242, v6533, v6534, v6535, 0, v6537, v6538, v6539, v6540, v6541, v6542, v6543, v6544, v6545, v6546, v6547, v6548, v6549, v6531, v6550, v6532, v6551, 3, 7, 2, 4, 8) -> f_1224(v6517, v6518, v6519, v6520, v6521, v6522, v6523, v6524, v6525, v6526, 1, v6528, v6529, v6530, v7242, v6533, v6534, v6535, 0, v6537, v6538, v6539, v6540, v6541, v6542, v6543, v6544, v6545, v6546, v6547, v6548, v6549, v6531, v6550, v6532, v6551, 3, 7, 2, 4, 8) :|: TRUE
f_1224(v6517, v6518, v6519, v6520, v6521, v6522, v6523, v6524, v6525, v6526, 1, v6528, v6529, v6530, v7242, v6533, v6534, v6535, 0, v6537, v6538, v6539, v6540, v6541, v6542, v6543, v6544, v6545, v6546, v6547, v6548, v6549, v6531, v6550, v6532, v6551, 3, 7, 2, 4, 8) -> f_1227(v6517, v6518, v6519, v6520, v6521, v6522, v6523, v6524, v6525, v6526, 1, v6528, v6529, v6530, v7242, v6533, v6534, v6535, 0, v6537, v6538, v6539, v6540, v6541, v6542, v6543, v6544, v6545, v6546, v6547, v6548, v6549, v6531, v6550, v6532, v6551, 3, 7, 2, 4, 8) :|: TRUE
f_1227(v6517, v6518, v6519, v6520, v6521, v6522, v6523, v6524, v6525, v6526, 1, v6528, v6529, v6530, v7242, v6533, v6534, v6535, 0, v6537, v6538, v6539, v6540, v6541, v6542, v6543, v6544, v6545, v6546, v6547, v6548, v6549, v6531, v6550, v6532, v6551, 3, 7, 2, 4, 8) -> f_1228(v6517, v6518, v6519, v6520, v6521, v6522, v6523, v6524, v6525, v6526, 1, v6528, v6529, v6530, v7242, v6533, v6534, v6535, 0, v6537, v6538, v6539, v6540, v6541, v6542, v6543, v6544, v6545, v6546, v6547, v6548, v6549, 3, 7, 2, 4, 8) :|: TRUE
f_1228(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7367, v7368, v7369, v7370, v7371, v7372, v7373, 0, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, 3, 7, 2, 4, 8) -> f_1231(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, v7368, v7367, v7369, v7371, v7372, v7373, 0, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, 3, 7, 2, 4, 8) :|: 0 = 0
f_1231(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, v7368, v7367, v7369, v7371, v7372, v7373, 0, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, 3, 7, 2, 4, 8) -> f_1235(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, v7405, v7368, v7367, v7369, v7371, v7372, v7373, 0, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, 3, 7, 2, 4, 8) :|: TRUE
f_1235(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, v7405, v7368, v7367, v7369, v7371, v7372, v7373, 0, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, 3, 7, 2, 4, 8) -> f_1240(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, v7405, v7367, v7368, v7369, v7371, v7372, v7373, 0, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, 3, 7, 2, 4, 8) :|: 0 = 0
f_1240(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, v7405, v7367, v7368, v7369, v7371, v7372, v7373, 0, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, 3, 7, 2, 4, 8) -> f_1245(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, v7405, v7367, v7368, v7369, v7371, v7372, v7373, 0, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, 3, 7, 2, 4, 8) :|: v7405 != 0 && v7370 < v7379 && 3 <= v7379
f_1240(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, v7405, v7367, v7368, v7369, v7371, v7372, v7373, 0, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, 3, 7, 2, 4, 8) -> f_1246(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, 0, v7367, v7368, v7369, v7371, v7372, v7373, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, 3, 7, 2, 4, 8) :|: v7405 = 0
f_1245(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, v7405, v7367, v7368, v7369, v7371, v7372, v7373, 0, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, 3, 7, 2, 4, 8) -> f_1251(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, v7405, v7367, v7368, v7369, v7371, v7372, v7373, 0, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, 3, 7, 2, 4, 8) :|: 0 = 0
f_1251(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, v7405, v7367, v7368, v7369, v7371, v7372, v7373, 0, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, 3, 7, 2, 4, 8) -> f_1257(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, v7405, v7367, v7368, v7369, v7371, v7372, v7373, 0, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, 3, 7, 2, 4, 8) :|: TRUE
f_1257(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, v7405, v7367, v7368, v7369, v7371, v7372, v7373, 0, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, 3, 7, 2, 4, 8) -> f_1263(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, v7405, v7368, v7369, v7367, v7371, v7372, v7373, 0, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, 3, 7, 2, 4, 8) :|: 0 = 0
f_1263(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, v7405, v7368, v7369, v7367, v7371, v7372, v7373, 0, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, 3, 7, 2, 4, 8) -> f_1269(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, v7405, v7368, v7369, v7367, v7371, v7372, v7373, 0, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, 3, 7, 2, 4, 8) :|: 0 = 0
f_1269(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, v7405, v7368, v7369, v7367, v7371, v7372, v7373, 0, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, 3, 7, 2, 4, 8) -> f_1275(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, v7405, v7369, v7367, v7371, v7372, v7373, 0, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, v7368, 3, 7, 2, 4, 8) :|: 0 = 0
f_1275(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, v7405, v7369, v7367, v7371, v7372, v7373, 0, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, v7368, 3, 7, 2, 4, 8) -> f_1281(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, v7405, v7369, v7367, v7371, v7372, v7373, 0, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, v7368, 3, 7, 2, 4, 8) :|: 0 = 0
f_1281(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, v7405, v7369, v7367, v7371, v7372, v7373, 0, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, v7368, 3, 7, 2, 4, 8) -> f_1287(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, v7405, v7938, v7369, v7367, v7371, v7372, v7373, 0, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, v7368, 3, 7, 2, 4, 8) :|: TRUE
f_1287(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, v7405, v7938, v7369, v7367, v7371, v7372, v7373, 0, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, v7368, 3, 7, 2, 4, 8) -> f_1293(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, v7405, v7938, v7367, v7371, v7372, v7373, 0, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, v7368, 3, 7, 2, 4, 8) :|: 0 = 0
f_1293(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, v7405, v7938, v7367, v7371, v7372, v7373, 0, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, v7368, 3, 7, 2, 4, 8) -> f_1300(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, v7405, v7938, v7367, v7371, v7372, v7373, 0, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, v7368, 3, 7, 2, 4, 8) :|: v7405 != v7938
f_1293(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, v7405, v7938, v7367, v7371, v7372, v7373, 0, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, v7368, 3, 7, 2, 4, 8) -> f_1301(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, v7938, v7367, v7371, v7372, v7373, 0, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, v7368, 3, 7, 2, 4, 8) :|: v7405 = v7938
f_1300(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, v7405, v7938, v7367, v7371, v7372, v7373, 0, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, v7368, 3, 7, 2, 4, 8) -> f_1308(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, v7405, v7938, v7367, v7371, v7372, v7373, 0, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, v7368, 3, 7, 2, 4, 8) :|: 0 = 0
f_1308(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, v7405, v7938, v7367, v7371, v7372, v7373, 0, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, v7368, 3, 7, 2, 4, 8) -> f_1315(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, v7405, v7938, v7367, v7371, v7372, v7373, 0, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, v7368, 3, 7, 2, 4, 8) :|: 0 = 0
f_1315(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, v7405, v7938, v7367, v7371, v7372, v7373, 0, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, v7368, 3, 7, 2, 4, 8) -> f_1207(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, v7405, v7938, v7367, v7370, v7371, v7372, v7373, 0, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, v7368, v7405, 3, 7, 2, 4, 8) :|: TRUE
f_1207(v6517, v6518, v6519, v6520, v6521, v6522, v6523, v6524, v6525, v6526, 1, v6528, v6529, v6530, v6531, v6532, v6533, v6534, v6535, 0, v6537, v6538, v6539, v6540, v6541, v6542, v6543, v6544, v6545, v6546, v6547, v6548, v6549, v6550, v6551, 3, 7, 2, 4, 8) -> f_1214(v6517, v6518, v6519, v6520, v6521, v6522, v6523, v6524, v6525, v6526, 1, v6528, v6529, v6530, v6531, v6532, v6533, v6534, v6535, 0, v6537, v6538, v6539, v6540, v6541, v6542, v6543, v6544, v6545, v6546, v6547, v6548, v6549, v6550, v6551, 3, 7, 2, 4, 8) :|: TRUE
f_1301(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, v7938, v7367, v7371, v7372, v7373, 0, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, v7368, 3, 7, 2, 4, 8) -> f_1309(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, v7938, 0, v7367, v7371, v7372, v7373, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, v7368, 3, 7, 2, 4, 8) :|: 0 = 0
f_1309(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, v7938, 0, v7367, v7371, v7372, v7373, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, v7368, 3, 7, 2, 4, 8) -> f_1316(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, v7938, 0, v7367, v7371, v7372, v7373, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, v7368, 3, 7, 2, 4, 8) :|: 0 = 0
f_1316(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, v7938, 0, v7367, v7371, v7372, v7373, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, v7368, 3, 7, 2, 4, 8) -> f_1212(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, v7938, 0, v7367, v7370, v7371, v7372, v7373, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, v7368, v7938, 3, 7, 2, 4, 8) :|: TRUE
f_1212(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7092, v7093, 1, v7095, v7096, 0, v7098, v7099, v7100, v7101, v7102, v7103, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, 3, 7, 2, 4, 8) -> f_1215(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7092, v7093, 1, v7095, v7096, 0, v7098, v7099, v7100, v7101, v7102, v7103, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, 3, 7, 2, 4, 8) :|: TRUE
f_1215(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7092, v7093, 1, v7095, v7096, 0, v7098, v7099, v7100, v7101, v7102, v7103, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, 3, 7, 2, 4, 8) -> f_1218(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7092, v7093, 1, v7095, v7096, 0, v7098, v7099, v7101, v7102, v7103, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, v7100, 3, 7, 2, 4, 8) :|: 0 = 0
f_1218(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7092, v7093, 1, v7095, v7096, 0, v7098, v7099, v7101, v7102, v7103, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, v7100, 3, 7, 2, 4, 8) -> f_1221(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7092, v7093, 1, v7095, v7096, 0, v7098, v7099, v7101, v7102, v7103, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, v7100, 3, 7, 2, 4, 8) :|: 0 = 0
f_1221(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7092, v7093, 1, v7095, v7096, 0, v7098, v7099, v7101, v7102, v7103, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, v7100, 3, 7, 2, 4, 8) -> f_1225(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7092, v7093, 1, v7095, v7096, 0, v7098, v7099, v7102, v7103, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, v7100, v7101, 3, 7, 2, 4, 8) :|: 0 = 0
f_1225(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7092, v7093, 1, v7095, v7096, 0, v7098, v7099, v7102, v7103, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, v7100, v7101, 3, 7, 2, 4, 8) -> f_1229(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7092, v7093, 1, v7095, v7096, 0, v7098, v7099, v7103, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, v7100, v7101, v7102, 3, 7, 2, 4, 8) :|: 0 = 0
f_1229(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7092, v7093, 1, v7095, v7096, 0, v7098, v7099, v7103, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, v7100, v7101, v7102, 3, 7, 2, 4, 8) -> f_1233(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7092, v7093, 1, v7095, v7096, 0, v7098, v7099, v7103, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, v7100, v7101, v7102, 3, 7, 2, 4, 8) :|: v7096 != v7093
f_1233(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7092, v7093, 1, v7095, v7096, 0, v7098, v7099, v7103, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, v7100, v7101, v7102, 3, 7, 2, 4, 8) -> f_1237(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7092, v7093, 1, v7095, v7096, 0, v7098, v7099, v7103, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, v7100, v7101, v7102, 3, 7, 2, 4, 8) :|: 0 = 0
f_1237(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7092, v7093, 1, v7095, v7096, 0, v7098, v7099, v7103, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, v7100, v7101, v7102, 3, 7, 2, 4, 8) -> f_1242(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7092, v7093, 1, v7095, v7096, 0, v7098, v7099, v7103, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, v7100, v7101, v7102, 3, 7, 2, 4, 8) :|: TRUE
f_1242(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7092, v7093, 1, v7095, v7096, 0, v7098, v7099, v7103, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, v7100, v7101, v7102, 3, 7, 2, 4, 8) -> f_1248(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7092, v7093, 1, v7095, v7096, 0, v7098, v7099, v7103, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, v7100, v7101, v7102, 3, 7, 2, 4, 8) :|: TRUE
f_1248(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7092, v7093, 1, v7095, v7096, 0, v7098, v7099, v7103, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, v7100, v7101, v7102, 3, 7, 2, 4, 8) -> f_1254(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7092, v7093, 1, v7095, v7096, 0, v7098, v7099, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, v7100, v7101, v7103, v7102, 3, 7, 2, 4, 8) :|: 0 = 0
f_1254(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7092, v7093, 1, v7095, v7096, 0, v7098, v7099, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, v7100, v7101, v7103, v7102, 3, 7, 2, 4, 8) -> f_1260(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7092, v7093, 1, v7095, v7096, 0, v7098, v7099, v7798, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, v7100, v7101, v7103, v7102, 3, 7, 2, 4, 8) :|: v7798 = 1 + v7092 && 3 <= v7798
f_1260(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7092, v7093, 1, v7095, v7096, 0, v7098, v7099, v7798, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, v7100, v7101, v7103, v7102, 3, 7, 2, 4, 8) -> f_1266(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7092, v7093, 1, v7095, v7096, 0, v7098, v7099, v7798, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, v7100, v7101, v7103, v7102, 3, 7, 2, 4, 8) :|: TRUE
f_1266(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7092, v7093, 1, v7095, v7096, 0, v7098, v7099, v7798, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, v7100, v7101, v7103, v7102, 3, 7, 2, 4, 8) -> f_1272(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7092, v7093, 1, v7095, v7096, 0, v7098, v7099, v7798, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, v7100, v7101, v7103, v7102, 3, 7, 2, 4, 8) :|: TRUE
f_1272(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7092, v7093, 1, v7095, v7096, 0, v7098, v7099, v7798, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, v7100, v7101, v7103, v7102, 3, 7, 2, 4, 8) -> f_1278(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7798, v7093, 1, v7092, v7095, v7096, 0, v7098, v7099, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, v7100, v7101, v7103, v7102, 3, 7, 2, 4, 8) :|: 0 = 0
f_1278(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7798, v7093, 1, v7092, v7095, v7096, 0, v7098, v7099, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, v7100, v7101, v7103, v7102, 3, 7, 2, 4, 8) -> f_1284(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7798, v7934, v7093, 1, v7092, v7095, v7096, 0, v7098, v7099, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, v7100, v7101, v7103, v7102, 3, 7, 2, 4, 8) :|: TRUE
f_1284(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7798, v7934, v7093, 1, v7092, v7095, v7096, 0, v7098, v7099, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, v7100, v7101, v7103, v7102, 3, 7, 2, 4, 8) -> f_1290(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7798, v7934, 1, v7092, v7093, v7095, v7096, 0, v7098, v7099, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, v7100, v7101, v7103, v7102, 3, 7, 2, 4, 8) :|: 0 = 0
f_1290(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7798, v7934, 1, v7092, v7093, v7095, v7096, 0, v7098, v7099, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, v7100, v7101, v7103, v7102, 3, 7, 2, 4, 8) -> f_1296(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7798, v7934, 1, v7092, v7093, v7095, v7096, 0, v7098, v7099, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, v7100, v7101, v7103, v7102, 3, 7, 2, 4, 8) :|: v7934 != 0 && v7798 < v7106 && 4 <= v7106
f_1296(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7798, v7934, 1, v7092, v7093, v7095, v7096, 0, v7098, v7099, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, v7100, v7101, v7103, v7102, 3, 7, 2, 4, 8) -> f_1304(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7798, v7934, 1, v7092, v7093, v7095, v7096, 0, v7098, v7099, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, v7100, v7101, v7103, v7102, 3, 7, 2, 4, 8) :|: 0 = 0
f_1304(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7798, v7934, 1, v7092, v7093, v7095, v7096, 0, v7098, v7099, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, v7100, v7101, v7103, v7102, 3, 7, 2, 4, 8) -> f_1311(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7798, v7934, 1, v7092, v7093, v7095, v7096, 0, v7098, v7099, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, v7100, v7101, v7103, v7102, 3, 7, 2, 4, 8) :|: TRUE
f_1311(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7798, v7934, 1, v7092, v7093, v7095, v7096, 0, v7098, v7099, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, v7100, v7101, v7103, v7102, 3, 7, 2, 4, 8) -> f_1318(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7798, v7934, 1, v7092, v7093, v7095, v7096, 0, v7098, v7099, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, v7100, v7101, v7103, v7102, 3, 7, 2, 4, 8) :|: 0 = 0
f_1318(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7798, v7934, 1, v7092, v7093, v7095, v7096, 0, v7098, v7099, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, v7100, v7101, v7103, v7102, 3, 7, 2, 4, 8) -> f_1322(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7798, v7934, 1, v7092, v7093, v7095, v7096, 0, v7098, v7099, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, v7100, v7101, v7103, v7102, 3, 7, 2, 4, 8) :|: TRUE
f_1322(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7798, v7934, 1, v7092, v7093, v7095, v7096, 0, v7098, v7099, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, v7100, v7101, v7103, v7102, 3, 7, 2, 4, 8) -> f_1326(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7798, v7934, 1, v7093, v7095, v7096, 0, v7098, v7099, v7092, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, v7100, v7101, v7103, v7102, 3, 7, 2, 4, 8) :|: 0 = 0
f_1326(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7798, v7934, 1, v7093, v7095, v7096, 0, v7098, v7099, v7092, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, v7100, v7101, v7103, v7102, 3, 7, 2, 4, 8) -> f_1330(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7798, v7934, 1, v7093, v7095, v7096, 0, v7098, v7099, v7092, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, v7100, v7101, v7103, v7102, 3, 7, 2, 4, 8) :|: 0 = 0
f_1330(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7798, v7934, 1, v7093, v7095, v7096, 0, v7098, v7099, v7092, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, v7100, v7101, v7103, v7102, 3, 7, 2, 4, 8) -> f_1333(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7798, v7934, 1, v7095, v7096, v7093, 0, v7098, v7099, v7092, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, v7100, v7101, v7103, v7102, 3, 7, 2, 4, 8) :|: 0 = 0
f_1333(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7798, v7934, 1, v7095, v7096, v7093, 0, v7098, v7099, v7092, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, v7100, v7101, v7103, v7102, 3, 7, 2, 4, 8) -> f_1336(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7798, v7934, 1, v7095, v7096, v7093, 0, v7098, v7099, v7092, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, v7100, v7101, v7103, v7102, 3, 7, 2, 4, 8) :|: TRUE
f_1336(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7798, v7934, 1, v7095, v7096, v7093, 0, v7098, v7099, v7092, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, v7100, v7101, v7103, v7102, 3, 7, 2, 4, 8) -> f_1339(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7798, v7934, 1, v7095, v7096, v7093, 0, v7098, v7099, v7092, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, v7100, v7101, v7103, v7102, 3, 7, 2, 4, 8) :|: TRUE
f_1339(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7798, v7934, 1, v7095, v7096, v7093, 0, v7098, v7099, v7092, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, v7100, v7101, v7103, v7102, 3, 7, 2, 4, 8) -> f_1340(v7084, v7085, v7086, v7087, v7088, v7089, v7090, v7091, v7798, v7934, 1, v7095, v7096, v7093, 0, v7098, v7099, v7092, v7104, v7105, v7106, v7107, v7108, v7109, v7110, v7111, v7112, v7113, v7114, v7115, v7116, v7117, 3, 7, 2, 4, 8) :|: TRUE
f_1340(v8927, v8928, v8929, v8930, v8931, v8932, v8933, v8934, v8935, v8936, 1, v8938, v8939, v8940, 0, v8942, v8943, v8944, v8945, v8946, v8947, v8948, v8949, v8950, v8951, v8952, v8953, v8954, v8955, v8956, v8957, v8958, 3, 7, 2, 4, 8) -> f_1343(v8927, v8928, v8929, v8930, v8931, v8932, v8933, v8934, v8935, v8936, 1, v8939, v8938, v8940, 0, v8942, v8943, v8944, v8945, v8946, v8947, v8948, v8949, v8950, v8951, v8952, v8953, v8954, v8955, v8956, v8957, v8958, 3, 7, 2, 4, 8) :|: 0 = 0
f_1343(v8927, v8928, v8929, v8930, v8931, v8932, v8933, v8934, v8935, v8936, 1, v8939, v8938, v8940, 0, v8942, v8943, v8944, v8945, v8946, v8947, v8948, v8949, v8950, v8951, v8952, v8953, v8954, v8955, v8956, v8957, v8958, 3, 7, 2, 4, 8) -> f_1346(v8927, v8928, v8929, v8930, v8931, v8932, v8933, v8934, v8935, v8936, 1, v8956, v8939, v8938, v8940, 0, v8942, v8943, v8944, v8945, v8946, v8947, v8948, v8949, v8950, v8951, v8952, v8953, v8954, v8955, v8957, v8958, 3, 7, 2, 4, 8) :|: 0 = 0
f_1346(v8927, v8928, v8929, v8930, v8931, v8932, v8933, v8934, v8935, v8936, 1, v8956, v8939, v8938, v8940, 0, v8942, v8943, v8944, v8945, v8946, v8947, v8948, v8949, v8950, v8951, v8952, v8953, v8954, v8955, v8957, v8958, 3, 7, 2, 4, 8) -> f_1350(v8927, v8928, v8929, v8930, v8931, v8932, v8933, v8934, v8935, v8936, 1, v8956, v8938, v8939, v8940, 0, v8942, v8943, v8944, v8945, v8946, v8947, v8948, v8949, v8950, v8951, v8952, v8953, v8954, v8955, v8957, v8958, 3, 7, 2, 4, 8) :|: 0 = 0
f_1350(v8927, v8928, v8929, v8930, v8931, v8932, v8933, v8934, v8935, v8936, 1, v8956, v8938, v8939, v8940, 0, v8942, v8943, v8944, v8945, v8946, v8947, v8948, v8949, v8950, v8951, v8952, v8953, v8954, v8955, v8957, v8958, 3, 7, 2, 4, 8) -> f_1354(v8927, v8928, v8929, v8930, v8931, v8932, v8933, v8934, v8935, v8936, 1, v8956, v8938, v8939, v8940, 0, v8942, v8943, v8944, v8945, v8946, v8947, v8948, v8949, v8950, v8951, v8952, v8953, v8954, v8955, v8957, v8958, 3, 7, 2, 4, 8) :|: 0 = 0
f_1354(v8927, v8928, v8929, v8930, v8931, v8932, v8933, v8934, v8935, v8936, 1, v8956, v8938, v8939, v8940, 0, v8942, v8943, v8944, v8945, v8946, v8947, v8948, v8949, v8950, v8951, v8952, v8953, v8954, v8955, v8957, v8958, 3, 7, 2, 4, 8) -> f_1357(v8927, v8928, v8929, v8930, v8931, v8932, v8933, v8934, v8935, v8936, 1, v8956, v8938, v8939, v8940, 0, v8942, v8943, v8944, v8945, v8946, v8947, v8948, v8949, v8950, v8951, v8952, v8953, v8954, v8955, v8957, v8958, 3, 7, 2, 4, 8) :|: TRUE
f_1357(v8927, v8928, v8929, v8930, v8931, v8932, v8933, v8934, v8935, v8936, 1, v8956, v8938, v8939, v8940, 0, v8942, v8943, v8944, v8945, v8946, v8947, v8948, v8949, v8950, v8951, v8952, v8953, v8954, v8955, v8957, v8958, 3, 7, 2, 4, 8) -> f_1358(v8927, v8928, v8929, v8930, v8931, v8932, v8933, v8934, v8935, v8936, 1, v8956, v8939, v8940, 0, v8942, v8943, v8938, v8944, v8945, v8946, v8947, v8948, v8949, v8950, v8951, v8952, v8953, v8954, v8955, v8957, v8958, 3, 7, 2, 4, 8) :|: 0 = 0
f_1358(v8927, v8928, v8929, v8930, v8931, v8932, v8933, v8934, v8935, v8936, 1, v8956, v8939, v8940, 0, v8942, v8943, v8938, v8944, v8945, v8946, v8947, v8948, v8949, v8950, v8951, v8952, v8953, v8954, v8955, v8957, v8958, 3, 7, 2, 4, 8) -> f_1359(v8927, v8928, v8929, v8930, v8931, v8932, v8933, v8934, v8935, v8936, 1, v8956, v8939, v8940, 0, v8942, v8943, v8938, v8944, v8945, v8946, v8947, v8948, v8949, v8950, v8951, v8952, v8953, v8954, v8955, v8957, v8958, 3, 7, 2, 4, 8) :|: 0 = 0
f_1359(v8927, v8928, v8929, v8930, v8931, v8932, v8933, v8934, v8935, v8936, 1, v8956, v8939, v8940, 0, v8942, v8943, v8938, v8944, v8945, v8946, v8947, v8948, v8949, v8950, v8951, v8952, v8953, v8954, v8955, v8957, v8958, 3, 7, 2, 4, 8) -> f_1360(v8927, v8928, v8929, v8930, v8931, v8932, v8933, v8934, v8935, v8936, 1, v8956, v8940, v8939, 0, v8942, v8943, v8938, v8944, v8945, v8946, v8947, v8948, v8949, v8950, v8951, v8952, v8953, v8954, v8955, v8957, v8958, 3, 7, 2, 4, 8) :|: 0 = 0
f_1360(v8927, v8928, v8929, v8930, v8931, v8932, v8933, v8934, v8935, v8936, 1, v8956, v8940, v8939, 0, v8942, v8943, v8938, v8944, v8945, v8946, v8947, v8948, v8949, v8950, v8951, v8952, v8953, v8954, v8955, v8957, v8958, 3, 7, 2, 4, 8) -> f_1361(v8927, v8928, v8929, v8930, v8931, v8932, v8933, v8934, v8935, v8936, 1, v8956, v8939, 0, v8942, v8943, v8938, v8940, v8944, v8945, v8946, v8947, v8948, v8949, v8950, v8951, v8952, v8953, v8954, v8955, v8957, v8958, 3, 7, 2, 4, 8) :|: 0 = 0
f_1361(v8927, v8928, v8929, v8930, v8931, v8932, v8933, v8934, v8935, v8936, 1, v8956, v8939, 0, v8942, v8943, v8938, v8940, v8944, v8945, v8946, v8947, v8948, v8949, v8950, v8951, v8952, v8953, v8954, v8955, v8957, v8958, 3, 7, 2, 4, 8) -> f_1362(v8927, v8928, v8929, v8930, v8931, v8932, v8933, v8934, v8935, v8936, 1, v8956, v9504, v8939, 0, v8942, v8943, v8938, v8940, v8944, v8945, v8946, v8947, v8948, v8949, v8950, v8951, v8952, v8953, v8954, v8955, v8957, v8958, 3, 7, 2, 4, 8) :|: TRUE
f_1362(v8927, v8928, v8929, v8930, v8931, v8932, v8933, v8934, v8935, v8936, 1, v8956, v9504, v8939, 0, v8942, v8943, v8938, v8940, v8944, v8945, v8946, v8947, v8948, v8949, v8950, v8951, v8952, v8953, v8954, v8955, v8957, v8958, 3, 7, 2, 4, 8) -> f_1363(v8927, v8928, v8929, v8930, v8931, v8932, v8933, v8934, v8935, v8936, 1, v8956, v9504, 0, v8942, v8943, v8938, v8939, v8940, v8944, v8945, v8946, v8947, v8948, v8949, v8950, v8951, v8952, v8953, v8954, v8955, v8957, v8958, 3, 7, 2, 4, 8) :|: 0 = 0
f_1363(v8927, v8928, v8929, v8930, v8931, v8932, v8933, v8934, v8935, v8936, 1, v8956, v9504, 0, v8942, v8943, v8938, v8939, v8940, v8944, v8945, v8946, v8947, v8948, v8949, v8950, v8951, v8952, v8953, v8954, v8955, v8957, v8958, 3, 7, 2, 4, 8) -> f_1364(v8927, v8928, v8929, v8930, v8931, v8932, v8933, v8934, v8935, v8936, 1, v8956, v9504, 0, v8942, v8943, v8938, v8939, v8940, v8944, v8945, v8946, v8947, v8948, v8949, v8950, v8951, v8952, v8953, v8954, v8955, v8957, v8958, 3, 7, 2, 4, 8) :|: v8956 != v9504
f_1363(v8927, v8928, v8929, v8930, v8931, v8932, v8933, v8934, v8935, v8936, 1, v8956, v9504, 0, v8942, v8943, v8938, v8939, v8940, v8944, v8945, v8946, v8947, v8948, v8949, v8950, v8951, v8952, v8953, v8954, v8955, v8957, v8958, 3, 7, 2, 4, 8) -> f_1365(v8927, v8928, v8929, v8930, v8931, v8932, v8933, v8934, v8935, v8936, 1, v9504, 0, v8942, v8943, v8938, v8939, v8940, v8944, v8945, v8946, v8947, v8948, v8949, v8950, v8951, v8952, v8953, v8954, v8955, v8957, v8958, 3, 7, 2, 4, 8) :|: v8956 = v9504
f_1364(v8927, v8928, v8929, v8930, v8931, v8932, v8933, v8934, v8935, v8936, 1, v8956, v9504, 0, v8942, v8943, v8938, v8939, v8940, v8944, v8945, v8946, v8947, v8948, v8949, v8950, v8951, v8952, v8953, v8954, v8955, v8957, v8958, 3, 7, 2, 4, 8) -> f_1366(v8927, v8928, v8929, v8930, v8931, v8932, v8933, v8934, v8935, v8936, 1, v8956, v9504, 0, v8942, v8943, v8938, v8939, v8940, v8944, v8945, v8946, v8947, v8948, v8949, v8950, v8951, v8952, v8953, v8954, v8955, v8957, v8958, 3, 7, 2, 4, 8) :|: 0 = 0
f_1366(v8927, v8928, v8929, v8930, v8931, v8932, v8933, v8934, v8935, v8936, 1, v8956, v9504, 0, v8942, v8943, v8938, v8939, v8940, v8944, v8945, v8946, v8947, v8948, v8949, v8950, v8951, v8952, v8953, v8954, v8955, v8957, v8958, 3, 7, 2, 4, 8) -> f_1368(v8927, v8928, v8929, v8930, v8931, v8932, v8933, v8934, v8935, v8936, 1, v8956, v9504, v8942, v8943, v8938, v8939, v8940, 0, v8944, v8945, v8946, v8947, v8948, v8949, v8950, v8951, v8952, v8953, v8954, v8955, v8957, v8958, 3, 7, 2, 4, 8) :|: 0 = 0
f_1368(v8927, v8928, v8929, v8930, v8931, v8932, v8933, v8934, v8935, v8936, 1, v8956, v9504, v8942, v8943, v8938, v8939, v8940, 0, v8944, v8945, v8946, v8947, v8948, v8949, v8950, v8951, v8952, v8953, v8954, v8955, v8957, v8958, 3, 7, 2, 4, 8) -> f_1207(v8927, v8928, v8929, v8930, v8931, v8932, v8933, v8934, v8935, v8936, 1, v8928, v8956, v9504, v8942, v8943, v8938, v8939, v8940, 0, v8944, v8945, v8946, v8947, v8948, v8949, v8950, v8951, v8952, v8953, v8954, v8955, v8956, v8957, v8958, 3, 7, 2, 4, 8) :|: TRUE
f_1365(v8927, v8928, v8929, v8930, v8931, v8932, v8933, v8934, v8935, v8936, 1, v9504, 0, v8942, v8943, v8938, v8939, v8940, v8944, v8945, v8946, v8947, v8948, v8949, v8950, v8951, v8952, v8953, v8954, v8955, v8957, v8958, 3, 7, 2, 4, 8) -> f_1367(v8927, v8928, v8929, v8930, v8931, v8932, v8933, v8934, v8935, v8936, 1, v9504, 0, v8942, v8943, v8938, v8939, v8940, v8944, v8945, v8946, v8947, v8948, v8949, v8950, v8951, v8952, v8953, v8954, v8955, v8957, v8958, 3, 7, 2, 4, 8) :|: 0 = 0
f_1367(v8927, v8928, v8929, v8930, v8931, v8932, v8933, v8934, v8935, v8936, 1, v9504, 0, v8942, v8943, v8938, v8939, v8940, v8944, v8945, v8946, v8947, v8948, v8949, v8950, v8951, v8952, v8953, v8954, v8955, v8957, v8958, 3, 7, 2, 4, 8) -> f_1369(v8927, v8928, v8929, v8930, v8931, v8932, v8933, v8934, v8935, v8936, 1, v9504, 0, v8942, v8943, v8938, v8939, v8940, v8944, v8945, v8946, v8947, v8948, v8949, v8950, v8951, v8952, v8953, v8954, v8955, v8957, v8958, 3, 7, 2, 4, 8) :|: 0 = 0
f_1369(v8927, v8928, v8929, v8930, v8931, v8932, v8933, v8934, v8935, v8936, 1, v9504, 0, v8942, v8943, v8938, v8939, v8940, v8944, v8945, v8946, v8947, v8948, v8949, v8950, v8951, v8952, v8953, v8954, v8955, v8957, v8958, 3, 7, 2, 4, 8) -> f_1212(v8927, v8928, v8929, v8930, v8931, v8932, v8933, v8934, v8935, v8936, 1, v8928, v9504, 0, v8942, v8943, v8938, v8939, v8940, v8944, v8945, v8946, v8947, v8948, v8949, v8950, v8951, v8952, v8953, v8954, v8955, v9504, v8957, v8958, 3, 7, 2, 4, 8) :|: TRUE
f_1246(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, 0, v7367, v7368, v7369, v7371, v7372, v7373, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, 3, 7, 2, 4, 8) -> f_1252(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, 0, v7367, v7368, v7369, v7371, v7372, v7373, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, 3, 7, 2, 4, 8) :|: 0 = 0
f_1252(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, 0, v7367, v7368, v7369, v7371, v7372, v7373, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, 3, 7, 2, 4, 8) -> f_1258(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, 0, v7367, v7368, v7369, v7371, v7372, v7373, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, 3, 7, 2, 4, 8) :|: 0 = 0
f_1258(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, 0, v7367, v7368, v7369, v7371, v7372, v7373, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, 3, 7, 2, 4, 8) -> f_1264(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, 0, v7367, v7368, v7369, v7371, v7372, v7373, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, 3, 7, 2, 4, 8) :|: TRUE
f_1264(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, 0, v7367, v7368, v7369, v7371, v7372, v7373, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, 3, 7, 2, 4, 8) -> f_1270(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, 0, v7367, v7368, v7369, v7372, v7373, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, v7371, 3, 7, 2, 4, 8) :|: 0 = 0
f_1270(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, 0, v7367, v7368, v7369, v7372, v7373, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, v7371, 3, 7, 2, 4, 8) -> f_1276(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, 0, v7367, v7368, v7369, v7372, v7373, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, v7371, 3, 7, 2, 4, 8) :|: 0 = 0
f_1276(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, 0, v7367, v7368, v7369, v7372, v7373, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, v7371, 3, 7, 2, 4, 8) -> f_1282(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, 0, v7367, v7368, v7369, v7373, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, v7371, v7372, 3, 7, 2, 4, 8) :|: 0 = 0
f_1282(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, 0, v7367, v7368, v7369, v7373, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, v7371, v7372, 3, 7, 2, 4, 8) -> f_1288(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, 0, v7367, v7368, v7369, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, v7371, v7372, v7373, 3, 7, 2, 4, 8) :|: 0 = 0
f_1288(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, 0, v7367, v7368, v7369, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, v7371, v7372, v7373, 3, 7, 2, 4, 8) -> f_1294(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, 0, v7367, v7368, v7369, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, v7371, v7372, v7373, 3, 7, 2, 4, 8) :|: 0 = 0
f_1294(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, 0, v7367, v7368, v7369, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, v7371, v7372, v7373, 3, 7, 2, 4, 8) -> f_1302(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, 0, v7367, v7368, v7369, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, v7371, v7372, v7373, 3, 7, 2, 4, 8) :|: TRUE
f_1302(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, 0, v7367, v7368, v7369, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, v7371, v7372, v7373, 3, 7, 2, 4, 8) -> f_1310(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, 0, v7367, v7368, v7369, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, v7371, v7372, v7373, 3, 7, 2, 4, 8) :|: TRUE
f_1310(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, 0, v7367, v7368, v7369, v7375, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, v7371, v7372, v7373, 3, 7, 2, 4, 8) -> f_1317(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, 0, v7367, v7368, v7369, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, v7371, v7372, v7375, v7373, 3, 7, 2, 4, 8) :|: 0 = 0
f_1317(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, 0, v7367, v7368, v7369, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, v7371, v7372, v7375, v7373, 3, 7, 2, 4, 8) -> f_1321(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, 0, v7367, v7368, v7369, v8748, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, v7371, v7372, v7375, v7373, 3, 7, 2, 4, 8) :|: v8748 = 1 + v7364 && 3 <= v8748
f_1321(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, 0, v7367, v7368, v7369, v8748, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, v7371, v7372, v7375, v7373, 3, 7, 2, 4, 8) -> f_1325(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, 0, v7367, v7368, v7369, v8748, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, v7371, v7372, v7375, v7373, 3, 7, 2, 4, 8) :|: TRUE
f_1325(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, 0, v7367, v7368, v7369, v8748, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, v7371, v7372, v7375, v7373, 3, 7, 2, 4, 8) -> f_1329(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, 0, v7367, v7368, v7369, v8748, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, v7371, v7372, v7375, v7373, 3, 7, 2, 4, 8) :|: TRUE
f_1329(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, 0, v7367, v7368, v7369, v8748, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, v7371, v7372, v7375, v7373, 3, 7, 2, 4, 8) -> f_1223(v7356, v7357, v7358, v7359, v7360, v7361, v7362, v7363, v7364, v7365, 1, v7370, 0, v7367, v7368, v7369, v8748, v7376, v7377, v7378, v7379, v7380, v7381, v7382, v7383, v7384, v7385, v7386, v7387, 3, 7, 2, 4, 8) :|: TRUE
f_1223(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7251, v7252, 1, v7254, 0, v7256, v7257, v7258, v7259, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v7271, 3, 7, 2, 4, 8) -> f_1226(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7252, 1, v7251, v7254, 0, v7256, v7257, v7258, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v7271, 3, 7, 2, 4, 8) :|: 0 = 0
f_1226(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7252, 1, v7251, v7254, 0, v7256, v7257, v7258, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v7271, 3, 7, 2, 4, 8) -> f_1230(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, v7252, 1, v7251, v7254, 0, v7256, v7257, v7258, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v7271, 3, 7, 2, 4, 8) :|: TRUE
f_1230(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, v7252, 1, v7251, v7254, 0, v7256, v7257, v7258, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v7271, 3, 7, 2, 4, 8) -> f_1234(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v7251, v7252, v7254, 0, v7256, v7257, v7258, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v7271, 3, 7, 2, 4, 8) :|: 0 = 0
f_1234(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v7251, v7252, v7254, 0, v7256, v7257, v7258, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v7271, 3, 7, 2, 4, 8) -> f_1238(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v7251, v7252, v7254, 0, v7256, v7257, v7258, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v7271, 3, 7, 2, 4, 8) :|: v7403 != 0 && v7259 < v7262 && 3 <= v7262
f_1238(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v7251, v7252, v7254, 0, v7256, v7257, v7258, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v7271, 3, 7, 2, 4, 8) -> f_1243(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v7251, v7252, v7254, 0, v7256, v7257, v7258, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v7271, 3, 7, 2, 4, 8) :|: 0 = 0
f_1243(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v7251, v7252, v7254, 0, v7256, v7257, v7258, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v7271, 3, 7, 2, 4, 8) -> f_1249(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v7251, v7252, v7254, 0, v7256, v7257, v7258, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v7271, 3, 7, 2, 4, 8) :|: TRUE
f_1249(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v7251, v7252, v7254, 0, v7256, v7257, v7258, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v7271, 3, 7, 2, 4, 8) -> f_1255(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v7251, v7252, v7254, 0, v7256, v7257, v7258, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v7271, 3, 7, 2, 4, 8) :|: 0 = 0
f_1255(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v7251, v7252, v7254, 0, v7256, v7257, v7258, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v7271, 3, 7, 2, 4, 8) -> f_1261(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v7251, v7252, v7254, 0, v7256, v7257, v7258, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v7271, 3, 7, 2, 4, 8) :|: TRUE
f_1261(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v7251, v7252, v7254, 0, v7256, v7257, v7258, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v7271, 3, 7, 2, 4, 8) -> f_1267(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v7252, v7254, 0, v7256, v7257, v7258, v7251, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v7271, 3, 7, 2, 4, 8) :|: 0 = 0
f_1267(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v7252, v7254, 0, v7256, v7257, v7258, v7251, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v7271, 3, 7, 2, 4, 8) -> f_1273(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v7252, v7254, 0, v7256, v7257, v7258, v7251, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v7271, 3, 7, 2, 4, 8) :|: 0 = 0
f_1273(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v7252, v7254, 0, v7256, v7257, v7258, v7251, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v7271, 3, 7, 2, 4, 8) -> f_1279(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v7254, 0, v7256, v7257, v7252, v7258, v7251, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v7271, 3, 7, 2, 4, 8) :|: 0 = 0
f_1279(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v7254, 0, v7256, v7257, v7252, v7258, v7251, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v7271, 3, 7, 2, 4, 8) -> f_1285(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v7254, 0, v7256, v7257, v7252, v7258, v7251, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v7271, 3, 7, 2, 4, 8) :|: TRUE
f_1285(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v7254, 0, v7256, v7257, v7252, v7258, v7251, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v7271, 3, 7, 2, 4, 8) -> f_1291(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v7254, 0, v7256, v7257, v7252, v7258, v7251, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v7271, 3, 7, 2, 4, 8) :|: TRUE
f_1291(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v7254, 0, v7256, v7257, v7252, v7258, v7251, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v7271, 3, 7, 2, 4, 8) -> f_1298(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, 0, v7256, v7257, v7252, v7258, v7254, v7251, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v7271, 3, 7, 2, 4, 8) :|: 0 = 0
f_1298(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, 0, v7256, v7257, v7252, v7258, v7254, v7251, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v7271, 3, 7, 2, 4, 8) -> f_1306(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v7271, 0, v7256, v7257, v7252, v7258, v7254, v7251, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, 3, 7, 2, 4, 8) :|: 0 = 0
f_1306(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v7271, 0, v7256, v7257, v7252, v7258, v7254, v7251, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, 3, 7, 2, 4, 8) -> f_1313(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v7271, 0, v7256, v7257, v7252, v7258, v7254, v7251, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, 3, 7, 2, 4, 8) :|: 0 = 0
f_1313(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v7271, 0, v7256, v7257, v7252, v7258, v7254, v7251, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, 3, 7, 2, 4, 8) -> f_1320(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v7271, v7256, v7257, v7252, v7258, 0, v7254, v7251, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, 3, 7, 2, 4, 8) :|: 0 = 0
f_1320(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v7271, v7256, v7257, v7252, v7258, 0, v7254, v7251, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, 3, 7, 2, 4, 8) -> f_1324(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v7271, v7256, v7257, v7252, v7258, 0, v7254, v7251, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, 3, 7, 2, 4, 8) :|: TRUE
f_1324(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v7271, v7256, v7257, v7252, v7258, 0, v7254, v7251, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, 3, 7, 2, 4, 8) -> f_1328(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v7271, v7257, v7252, v7258, 0, v7256, v7254, v7251, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, 3, 7, 2, 4, 8) :|: 0 = 0
f_1328(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v7271, v7257, v7252, v7258, 0, v7256, v7254, v7251, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, 3, 7, 2, 4, 8) -> f_1332(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v7271, v7257, v7252, v7258, 0, v7256, v7254, v7251, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, 3, 7, 2, 4, 8) :|: 0 = 0
f_1332(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v7271, v7257, v7252, v7258, 0, v7256, v7254, v7251, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, 3, 7, 2, 4, 8) -> f_1335(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v7271, v7252, v7258, 0, v7256, v7254, v7251, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v7257, 3, 7, 2, 4, 8) :|: 0 = 0
f_1335(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v7271, v7252, v7258, 0, v7256, v7254, v7251, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v7257, 3, 7, 2, 4, 8) -> f_1338(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v7271, v7258, 0, v7256, v7254, v7252, v7251, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v7257, 3, 7, 2, 4, 8) :|: 0 = 0
f_1338(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v7271, v7258, 0, v7256, v7254, v7252, v7251, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v7257, 3, 7, 2, 4, 8) -> f_1342(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v7271, v8988, v7258, 0, v7256, v7254, v7252, v7251, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v7257, 3, 7, 2, 4, 8) :|: TRUE
f_1342(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v7271, v8988, v7258, 0, v7256, v7254, v7252, v7251, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v7257, 3, 7, 2, 4, 8) -> f_1345(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v7271, v8988, 0, v7256, v7254, v7252, v7251, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v7257, 3, 7, 2, 4, 8) :|: 0 = 0
f_1345(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v7271, v8988, 0, v7256, v7254, v7252, v7251, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v7257, 3, 7, 2, 4, 8) -> f_1348(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v7271, v8988, 0, v7256, v7254, v7252, v7251, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v7257, 3, 7, 2, 4, 8) :|: v7271 != v8988
f_1345(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v7271, v8988, 0, v7256, v7254, v7252, v7251, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v7257, 3, 7, 2, 4, 8) -> f_1349(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v8988, 0, v7256, v7254, v7252, v7251, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v7257, 3, 7, 2, 4, 8) :|: v7271 = v8988
f_1348(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v7271, v8988, 0, v7256, v7254, v7252, v7251, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v7257, 3, 7, 2, 4, 8) -> f_1352(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v7271, v8988, 0, v7256, v7254, v7252, v7251, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v7257, 3, 7, 2, 4, 8) :|: 0 = 0
f_1352(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v7271, v8988, 0, v7256, v7254, v7252, v7251, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v7257, 3, 7, 2, 4, 8) -> f_1355(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v7271, v8988, v7256, v7254, 0, v7252, v7251, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v7257, 3, 7, 2, 4, 8) :|: 0 = 0
f_1355(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v7271, v8988, v7256, v7254, 0, v7252, v7251, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v7257, 3, 7, 2, 4, 8) -> f_1207(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v7244, v7271, v8988, v7256, v7254, v7254, 0, v7252, 0, v7251, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v7271, v7257, 0, 3, 7, 2, 4, 8) :|: TRUE
f_1349(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v8988, 0, v7256, v7254, v7252, v7251, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v7257, 3, 7, 2, 4, 8) -> f_1353(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v8988, 0, v7256, v7254, v7252, v7251, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v7257, 3, 7, 2, 4, 8) :|: 0 = 0
f_1353(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v8988, 0, v7256, v7254, v7252, v7251, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v7257, 3, 7, 2, 4, 8) -> f_1356(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v8988, 0, v7256, v7254, v7252, v7251, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v7257, 3, 7, 2, 4, 8) :|: 0 = 0
f_1356(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v8988, 0, v7256, v7254, v7252, v7251, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v7257, 3, 7, 2, 4, 8) -> f_1212(v7243, v7244, v7245, v7246, v7247, v7248, v7249, v7250, v7259, v7403, 1, v7244, v8988, 0, v7256, v7254, v7254, 0, v7252, v7251, v7260, v7261, v7262, v7263, v7264, v7265, v7266, v7267, v7268, v7269, v7270, v8988, v7257, 0, 3, 7, 2, 4, 8) :|: TRUE
Combined rules. Obtained 30 rulesP rules:
f_1363(v8927:0, v8928:0, v8929:0, v8930:0, v8931:0, v8932:0, v8933:0, v8934:0, v8935:0, v8936:0, 1, v8956:0, v8956:0, 0, v8942:0, v8943:0, v8938:0, v8939:0, v8940:0, v8944:0, v8945:0, v8946:0, v8947:0, v8948:0, v8949:0, v8950:0, v8951:0, v8952:0, v8953:0, v8954:0, v8955:0, v8957:0, v8958:0, 3, 7, 2, 4, 8) -> f_1363(v8927:0, v8928:0, v8929:0, v8930:0, v8931:0, v8932:0, v8933:0, v8934:0, 1 + v8935:0, v7934:0, 1, v8956:0, v9504:1, 0, v8942:0, v8943:0, v8928:0, v8956:0, v8936:0, v8935:0, v8945:0, v8946:0, v8947:0, v8948:0, v8949:0, v8950:0, v8951:0, v8952:0, v8953:0, v8954:0, v8955:0, v8957:0, v8958:0, 3, 7, 2, 4, 8) :|: v8956:0 < v8936:0 && v8935:0 > 1 && v8947:0 > 1 + v8935:0 && v8947:0 > 3 && v7934:0 < 0
f_1363(v8927:0, v8928:0, v8929:0, v8930:0, v8931:0, v8932:0, v8933:0, v8934:0, v8935:0, v8936:0, 1, v8956:0, v8956:0, 0, v8942:0, v8943:0, v8938:0, v8939:0, v8940:0, v8944:0, v8945:0, v8946:0, v8947:0, v8948:0, v8949:0, v8950:0, v8951:0, v8952:0, v8953:0, v8954:0, v8955:0, v8957:0, v8958:0, 3, 7, 2, 4, 8) -> f_1363(v8927:0, v8928:0, v8929:0, v8930:0, v8931:0, v8932:0, v8933:0, v8934:0, 1 + v8935:0, v7934:0, 1, v8956:0, v9504:1, 0, v8942:0, v8943:0, v8928:0, v8956:0, v8936:0, v8935:0, v8945:0, v8946:0, v8947:0, v8948:0, v8949:0, v8950:0, v8951:0, v8952:0, v8953:0, v8954:0, v8955:0, v8957:0, v8958:0, 3, 7, 2, 4, 8) :|: v8956:0 < v8936:0 && v8935:0 > 1 && v8947:0 > 1 + v8935:0 && v8947:0 > 3 && v7934:0 > 0
f_1363(v8927:0, v8928:0, v8929:0, v8930:0, v8931:0, v8932:0, v8933:0, v8934:0, v8935:0, v8936:0, 1, v8956:0, v8956:0, 0, v8942:0, v8943:0, v8938:0, v8939:0, v8940:0, v8944:0, v8945:0, v8946:0, v8947:0, v8948:0, v8949:0, v8950:0, v8951:0, v8952:0, v8953:0, v8954:0, v8955:0, v8957:0, v8958:0, 3, 7, 2, 4, 8) -> f_1363(v8927:0, v8928:0, v8929:0, v8930:0, v8931:0, v8932:0, v8933:0, v8934:0, 1 + v8935:0, v7934:0, 1, v8956:0, v9504:1, 0, v8942:0, v8943:0, v8928:0, v8956:0, v8936:0, v8935:0, v8945:0, v8946:0, v8947:0, v8948:0, v8949:0, v8950:0, v8951:0, v8952:0, v8953:0, v8954:0, v8955:0, v8957:0, v8958:0, 3, 7, 2, 4, 8) :|: v8956:0 > v8936:0 && v8935:0 > 1 && v8947:0 > 1 + v8935:0 && v8947:0 > 3 && v7934:0 < 0
f_1363(v8927:0, v8928:0, v8929:0, v8930:0, v8931:0, v8932:0, v8933:0, v8934:0, v8935:0, v8936:0, 1, v8956:0, v8956:0, 0, v8942:0, v8943:0, v8938:0, v8939:0, v8940:0, v8944:0, v8945:0, v8946:0, v8947:0, v8948:0, v8949:0, v8950:0, v8951:0, v8952:0, v8953:0, v8954:0, v8955:0, v8957:0, v8958:0, 3, 7, 2, 4, 8) -> f_1363(v8927:0, v8928:0, v8929:0, v8930:0, v8931:0, v8932:0, v8933:0, v8934:0, 1 + v8935:0, v7934:0, 1, v8956:0, v9504:1, 0, v8942:0, v8943:0, v8928:0, v8956:0, v8936:0, v8935:0, v8945:0, v8946:0, v8947:0, v8948:0, v8949:0, v8950:0, v8951:0, v8952:0, v8953:0, v8954:0, v8955:0, v8957:0, v8958:0, 3, 7, 2, 4, 8) :|: v8956:0 > v8936:0 && v8935:0 > 1 && v8947:0 > 1 + v8935:0 && v8947:0 > 3 && v7934:0 > 0
f_1363(v8927:0, v8928:0, v8929:0, v8930:0, v8931:0, v8932:0, v8933:0, v8934:0, v8935:0, v8936:0, 1, v8956:0, v9504:0, 0, v8942:0, v8943:0, v8938:0, v8939:0, v8940:0, v8944:0, v8945:0, v8946:0, v8947:0, v8948:0, v8949:0, v8950:0, v8951:0, v8952:0, v8953:0, v8954:0, v8955:0, v8957:0, v8958:0, 3, 7, 2, 4, 8) -> f_1214(v8927:0, v8928:0, v8929:0, v8930:0, v8931:0, v8932:0, v8933:0, v8934:0, v8935:0, v8936:0, 1, v8928:0, v8956:0, v9504:0, v8942:0, v8943:0, v8938:0, v8939:0, v8940:0, 0, v8944:0, v8945:0, v8946:0, v8947:0, v8948:0, v8949:0, v8950:0, v8951:0, v8952:0, v8953:0, v8954:0, v8955:0, v8956:0, v8957:0, v8958:0, 3, 7, 2, 4, 8) :|: v9504:0 > v8956:0
f_1363(v8927:0, v8928:0, v8929:0, v8930:0, v8931:0, v8932:0, v8933:0, v8934:0, v8935:0, v8936:0, 1, v8956:0, v9504:0, 0, v8942:0, v8943:0, v8938:0, v8939:0, v8940:0, v8944:0, v8945:0, v8946:0, v8947:0, v8948:0, v8949:0, v8950:0, v8951:0, v8952:0, v8953:0, v8954:0, v8955:0, v8957:0, v8958:0, 3, 7, 2, 4, 8) -> f_1214(v8927:0, v8928:0, v8929:0, v8930:0, v8931:0, v8932:0, v8933:0, v8934:0, v8935:0, v8936:0, 1, v8928:0, v8956:0, v9504:0, v8942:0, v8943:0, v8938:0, v8939:0, v8940:0, 0, v8944:0, v8945:0, v8946:0, v8947:0, v8948:0, v8949:0, v8950:0, v8951:0, v8952:0, v8953:0, v8954:0, v8955:0, v8956:0, v8957:0, v8958:0, 3, 7, 2, 4, 8) :|: v9504:0 < v8956:0
f_1214(v6517:0, v6518:0, v6519:0, v6520:0, v6521:0, v6522:0, v6523:0, v6524:0, v6525:0, v6526:0, 1, v6528:0, v6529:0, v6530:0, v6531:0, v6532:0, v6533:0, v6534:0, v6535:0, 0, v6537:0, v6538:0, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, v6544:0, v6545:0, v6546:0, v6547:0, v6548:0, v6549:0, v6550:0, v6551:0, 3, 7, 2, 4, 8) -> f_1214(v6517:0, v6518:0, v6519:0, v6520:0, v6521:0, v6522:0, v6523:0, v6524:0, v6525:0, v6526:0, 1, 1 + v6528:0, v7405:0, v7938:0, v6528:0, 1 + v6528:0, v6533:0, v6534:0, v6535:0, 0, v6537:0, v6538:0, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, v6544:0, v6545:0, v6546:0, v6547:0, v6548:0, v6549:0, v6529:0, v7405:0, 3, 7, 2, 4, 8) :|: v6528:0 > 0 && v6541:0 > 1 + v6528:0 && v7405:0 < 0 && v7938:0 > v7405:0 && v6541:0 > 2
f_1214(v6517:0, v6518:0, v6519:0, v6520:0, v6521:0, v6522:0, v6523:0, v6524:0, v6525:0, v6526:0, 1, v6528:0, v6529:0, v6530:0, v6531:0, v6532:0, v6533:0, v6534:0, v6535:0, 0, v6537:0, v6538:0, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, v6544:0, v6545:0, v6546:0, v6547:0, v6548:0, v6549:0, v6550:0, v6551:0, 3, 7, 2, 4, 8) -> f_1214(v6517:0, v6518:0, v6519:0, v6520:0, v6521:0, v6522:0, v6523:0, v6524:0, v6525:0, v6526:0, 1, 1 + v6528:0, v7405:0, v7938:0, v6528:0, 1 + v6528:0, v6533:0, v6534:0, v6535:0, 0, v6537:0, v6538:0, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, v6544:0, v6545:0, v6546:0, v6547:0, v6548:0, v6549:0, v6529:0, v7405:0, 3, 7, 2, 4, 8) :|: v6528:0 > 0 && v6541:0 > 1 + v6528:0 && v7405:0 < 0 && v7938:0 < v7405:0 && v6541:0 > 2
f_1214(v6517:0, v6518:0, v6519:0, v6520:0, v6521:0, v6522:0, v6523:0, v6524:0, v6525:0, v6526:0, 1, v6528:0, v6529:0, v6530:0, v6531:0, v6532:0, v6533:0, v6534:0, v6535:0, 0, v6537:0, v6538:0, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, v6544:0, v6545:0, v6546:0, v6547:0, v6548:0, v6549:0, v6550:0, v6551:0, 3, 7, 2, 4, 8) -> f_1214(v6517:0, v6518:0, v6519:0, v6520:0, v6521:0, v6522:0, v6523:0, v6524:0, v6525:0, v6526:0, 1, 1 + v6528:0, v7405:0, v7938:0, v6528:0, 1 + v6528:0, v6533:0, v6534:0, v6535:0, 0, v6537:0, v6538:0, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, v6544:0, v6545:0, v6546:0, v6547:0, v6548:0, v6549:0, v6529:0, v7405:0, 3, 7, 2, 4, 8) :|: v6528:0 > 0 && v6541:0 > 1 + v6528:0 && v7405:0 > 0 && v7938:0 > v7405:0 && v6541:0 > 2
f_1214(v6517:0, v6518:0, v6519:0, v6520:0, v6521:0, v6522:0, v6523:0, v6524:0, v6525:0, v6526:0, 1, v6528:0, v6529:0, v6530:0, v6531:0, v6532:0, v6533:0, v6534:0, v6535:0, 0, v6537:0, v6538:0, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, v6544:0, v6545:0, v6546:0, v6547:0, v6548:0, v6549:0, v6550:0, v6551:0, 3, 7, 2, 4, 8) -> f_1214(v6517:0, v6518:0, v6519:0, v6520:0, v6521:0, v6522:0, v6523:0, v6524:0, v6525:0, v6526:0, 1, 1 + v6528:0, v7405:0, v7938:0, v6528:0, 1 + v6528:0, v6533:0, v6534:0, v6535:0, 0, v6537:0, v6538:0, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, v6544:0, v6545:0, v6546:0, v6547:0, v6548:0, v6549:0, v6529:0, v7405:0, 3, 7, 2, 4, 8) :|: v6528:0 > 0 && v6541:0 > 1 + v6528:0 && v7405:0 > 0 && v7938:0 < v7405:0 && v6541:0 > 2
f_1214(v6517:0, v6518:0, v6519:0, v6520:0, v6521:0, v6522:0, v6523:0, v6524:0, v6525:0, v6526:0, 1, v6528:0, v6529:0, v6530:0, v6531:0, v6532:0, v6533:0, v6534:0, v6535:0, 0, v6537:0, v6538:0, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, v6544:0, v6545:0, v6546:0, v6547:0, v6548:0, v6549:0, v6550:0, v6551:0, 3, 7, 2, 4, 8) -> f_1214(v6517:0, v6518:0, v6519:0, v6520:0, v6521:0, v6522:0, v6523:0, v6524:0, 1 + v6525:0, v7403:0, 1, v6518:0, v6549:0, v8988:0, v6528:0, 1 + v6528:0, 1 + v6528:0, 0, v6526:0, 0, v6525:0, v6538:0, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, v6544:0, v6545:0, v6546:0, v6547:0, v6548:0, v6549:0, v6529:0, 0, 3, 7, 2, 4, 8) :|: v6528:0 > 0 && v6525:0 > 1 && v6540:0 > 1 + v6525:0 && v7403:0 < 0 && v8988:0 > v6549:0 && v6540:0 > 2
f_1214(v6517:0, v6518:0, v6519:0, v6520:0, v6521:0, v6522:0, v6523:0, v6524:0, v6525:0, v6526:0, 1, v6528:0, v6529:0, v6530:0, v6531:0, v6532:0, v6533:0, v6534:0, v6535:0, 0, v6537:0, v6538:0, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, v6544:0, v6545:0, v6546:0, v6547:0, v6548:0, v6549:0, v6550:0, v6551:0, 3, 7, 2, 4, 8) -> f_1214(v6517:0, v6518:0, v6519:0, v6520:0, v6521:0, v6522:0, v6523:0, v6524:0, 1 + v6525:0, v7403:0, 1, v6518:0, v6549:0, v8988:0, v6528:0, 1 + v6528:0, 1 + v6528:0, 0, v6526:0, 0, v6525:0, v6538:0, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, v6544:0, v6545:0, v6546:0, v6547:0, v6548:0, v6549:0, v6529:0, 0, 3, 7, 2, 4, 8) :|: v6528:0 > 0 && v6525:0 > 1 && v6540:0 > 1 + v6525:0 && v7403:0 < 0 && v8988:0 < v6549:0 && v6540:0 > 2
f_1214(v6517:0, v6518:0, v6519:0, v6520:0, v6521:0, v6522:0, v6523:0, v6524:0, v6525:0, v6526:0, 1, v6528:0, v6529:0, v6530:0, v6531:0, v6532:0, v6533:0, v6534:0, v6535:0, 0, v6537:0, v6538:0, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, v6544:0, v6545:0, v6546:0, v6547:0, v6548:0, v6549:0, v6550:0, v6551:0, 3, 7, 2, 4, 8) -> f_1214(v6517:0, v6518:0, v6519:0, v6520:0, v6521:0, v6522:0, v6523:0, v6524:0, 1 + v6525:0, v7403:0, 1, v6518:0, v6549:0, v8988:0, v6528:0, 1 + v6528:0, 1 + v6528:0, 0, v6526:0, 0, v6525:0, v6538:0, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, v6544:0, v6545:0, v6546:0, v6547:0, v6548:0, v6549:0, v6529:0, 0, 3, 7, 2, 4, 8) :|: v6528:0 > 0 && v6525:0 > 1 && v6540:0 > 1 + v6525:0 && v7403:0 > 0 && v8988:0 > v6549:0 && v6540:0 > 2
f_1214(v6517:0, v6518:0, v6519:0, v6520:0, v6521:0, v6522:0, v6523:0, v6524:0, v6525:0, v6526:0, 1, v6528:0, v6529:0, v6530:0, v6531:0, v6532:0, v6533:0, v6534:0, v6535:0, 0, v6537:0, v6538:0, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, v6544:0, v6545:0, v6546:0, v6547:0, v6548:0, v6549:0, v6550:0, v6551:0, 3, 7, 2, 4, 8) -> f_1214(v6517:0, v6518:0, v6519:0, v6520:0, v6521:0, v6522:0, v6523:0, v6524:0, 1 + v6525:0, v7403:0, 1, v6518:0, v6549:0, v8988:0, v6528:0, 1 + v6528:0, 1 + v6528:0, 0, v6526:0, 0, v6525:0, v6538:0, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, v6544:0, v6545:0, v6546:0, v6547:0, v6548:0, v6549:0, v6529:0, 0, 3, 7, 2, 4, 8) :|: v6528:0 > 0 && v6525:0 > 1 && v6540:0 > 1 + v6525:0 && v7403:0 > 0 && v8988:0 < v6549:0 && v6540:0 > 2
f_1214(v6517:0, v6518:0, v6519:0, v6520:0, v6521:0, v6522:0, v6523:0, v6524:0, v6525:0, v6526:0, 1, v6528:0, v6529:0, v6530:0, v6531:0, v6532:0, v6533:0, v6534:0, v6535:0, 0, v6537:0, v6538:0, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, v6544:0, v6545:0, v6546:0, v6547:0, v6548:0, v6549:0, v6550:0, v6551:0, 3, 7, 2, 4, 8) -> f_1363(v6517:0, v6518:0, v6519:0, v6520:0, v6521:0, v6522:0, v6523:0, v6524:0, 1 + (1 + v6525:0), v7934:0, 1, v6549:0, v9504:0, 0, v6528:0, 1 + v6528:0, v6518:0, v6549:0, v7403:0, 1 + v6525:0, v6538:0, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, v6544:0, v6545:0, v6546:0, v6547:0, v6548:0, v6529:0, 0, 3, 7, 2, 4, 8) :|: v6525:0 > 1 && v6540:0 > 3 && v6528:0 > 0 && v7403:0 > v6549:0 && v6540:0 > 1 + v6525:0 && v7403:0 < 0 && v7934:0 < 0 && v6540:0 > 1 + (1 + v6525:0)
f_1214(v6517:0, v6518:0, v6519:0, v6520:0, v6521:0, v6522:0, v6523:0, v6524:0, v6525:0, v6526:0, 1, v6528:0, v6529:0, v6530:0, v6531:0, v6532:0, v6533:0, v6534:0, v6535:0, 0, v6537:0, v6538:0, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, v6544:0, v6545:0, v6546:0, v6547:0, v6548:0, v6549:0, v6550:0, v6551:0, 3, 7, 2, 4, 8) -> f_1363(v6517:0, v6518:0, v6519:0, v6520:0, v6521:0, v6522:0, v6523:0, v6524:0, 1 + (1 + v6525:0), v7934:0, 1, v6549:0, v9504:0, 0, v6528:0, 1 + v6528:0, v6518:0, v6549:0, v7403:0, 1 + v6525:0, v6538:0, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, v6544:0, v6545:0, v6546:0, v6547:0, v6548:0, v6529:0, 0, 3, 7, 2, 4, 8) :|: v6525:0 > 1 && v6540:0 > 3 && v6528:0 > 0 && v7403:0 > v6549:0 && v6540:0 > 1 + v6525:0 && v7403:0 < 0 && v7934:0 > 0 && v6540:0 > 1 + (1 + v6525:0)
f_1214(v6517:0, v6518:0, v6519:0, v6520:0, v6521:0, v6522:0, v6523:0, v6524:0, v6525:0, v6526:0, 1, v6528:0, v6529:0, v6530:0, v6531:0, v6532:0, v6533:0, v6534:0, v6535:0, 0, v6537:0, v6538:0, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, v6544:0, v6545:0, v6546:0, v6547:0, v6548:0, v6549:0, v6550:0, v6551:0, 3, 7, 2, 4, 8) -> f_1363(v6517:0, v6518:0, v6519:0, v6520:0, v6521:0, v6522:0, v6523:0, v6524:0, 1 + (1 + v6525:0), v7934:0, 1, v6549:0, v9504:0, 0, v6528:0, 1 + v6528:0, v6518:0, v6549:0, v7403:0, 1 + v6525:0, v6538:0, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, v6544:0, v6545:0, v6546:0, v6547:0, v6548:0, v6529:0, 0, 3, 7, 2, 4, 8) :|: v6525:0 > 1 && v6540:0 > 3 && v6528:0 > 0 && v7403:0 < v6549:0 && v6540:0 > 1 + v6525:0 && v7403:0 < 0 && v7934:0 < 0 && v6540:0 > 1 + (1 + v6525:0)
f_1214(v6517:0, v6518:0, v6519:0, v6520:0, v6521:0, v6522:0, v6523:0, v6524:0, v6525:0, v6526:0, 1, v6528:0, v6529:0, v6530:0, v6531:0, v6532:0, v6533:0, v6534:0, v6535:0, 0, v6537:0, v6538:0, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, v6544:0, v6545:0, v6546:0, v6547:0, v6548:0, v6549:0, v6550:0, v6551:0, 3, 7, 2, 4, 8) -> f_1363(v6517:0, v6518:0, v6519:0, v6520:0, v6521:0, v6522:0, v6523:0, v6524:0, 1 + (1 + v6525:0), v7934:0, 1, v6549:0, v9504:0, 0, v6528:0, 1 + v6528:0, v6518:0, v6549:0, v7403:0, 1 + v6525:0, v6538:0, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, v6544:0, v6545:0, v6546:0, v6547:0, v6548:0, v6529:0, 0, 3, 7, 2, 4, 8) :|: v6525:0 > 1 && v6540:0 > 3 && v6528:0 > 0 && v7403:0 < v6549:0 && v6540:0 > 1 + v6525:0 && v7403:0 < 0 && v7934:0 > 0 && v6540:0 > 1 + (1 + v6525:0)
f_1214(v6517:0, v6518:0, v6519:0, v6520:0, v6521:0, v6522:0, v6523:0, v6524:0, v6525:0, v6526:0, 1, v6528:0, v6529:0, v6530:0, v6531:0, v6532:0, v6533:0, v6534:0, v6535:0, 0, v6537:0, v6538:0, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, v6544:0, v6545:0, v6546:0, v6547:0, v6548:0, v6549:0, v6550:0, v6551:0, 3, 7, 2, 4, 8) -> f_1363(v6517:0, v6518:0, v6519:0, v6520:0, v6521:0, v6522:0, v6523:0, v6524:0, 1 + (1 + v6525:0), v7934:0, 1, v6549:0, v9504:0, 0, v6528:0, 1 + v6528:0, v6518:0, v6549:0, v7403:0, 1 + v6525:0, v6538:0, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, v6544:0, v6545:0, v6546:0, v6547:0, v6548:0, v6529:0, 0, 3, 7, 2, 4, 8) :|: v6525:0 > 1 && v6540:0 > 3 && v6528:0 > 0 && v7403:0 > v6549:0 && v6540:0 > 1 + v6525:0 && v7403:0 > 0 && v7934:0 < 0 && v6540:0 > 1 + (1 + v6525:0)
f_1214(v6517:0, v6518:0, v6519:0, v6520:0, v6521:0, v6522:0, v6523:0, v6524:0, v6525:0, v6526:0, 1, v6528:0, v6529:0, v6530:0, v6531:0, v6532:0, v6533:0, v6534:0, v6535:0, 0, v6537:0, v6538:0, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, v6544:0, v6545:0, v6546:0, v6547:0, v6548:0, v6549:0, v6550:0, v6551:0, 3, 7, 2, 4, 8) -> f_1363(v6517:0, v6518:0, v6519:0, v6520:0, v6521:0, v6522:0, v6523:0, v6524:0, 1 + (1 + v6525:0), v7934:0, 1, v6549:0, v9504:0, 0, v6528:0, 1 + v6528:0, v6518:0, v6549:0, v7403:0, 1 + v6525:0, v6538:0, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, v6544:0, v6545:0, v6546:0, v6547:0, v6548:0, v6529:0, 0, 3, 7, 2, 4, 8) :|: v6525:0 > 1 && v6540:0 > 3 && v6528:0 > 0 && v7403:0 > v6549:0 && v6540:0 > 1 + v6525:0 && v7403:0 > 0 && v7934:0 > 0 && v6540:0 > 1 + (1 + v6525:0)
f_1214(v6517:0, v6518:0, v6519:0, v6520:0, v6521:0, v6522:0, v6523:0, v6524:0, v6525:0, v6526:0, 1, v6528:0, v6529:0, v6530:0, v6531:0, v6532:0, v6533:0, v6534:0, v6535:0, 0, v6537:0, v6538:0, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, v6544:0, v6545:0, v6546:0, v6547:0, v6548:0, v6549:0, v6550:0, v6551:0, 3, 7, 2, 4, 8) -> f_1363(v6517:0, v6518:0, v6519:0, v6520:0, v6521:0, v6522:0, v6523:0, v6524:0, 1 + (1 + v6525:0), v7934:0, 1, v6549:0, v9504:0, 0, v6528:0, 1 + v6528:0, v6518:0, v6549:0, v7403:0, 1 + v6525:0, v6538:0, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, v6544:0, v6545:0, v6546:0, v6547:0, v6548:0, v6529:0, 0, 3, 7, 2, 4, 8) :|: v6525:0 > 1 && v6540:0 > 3 && v6528:0 > 0 && v7403:0 < v6549:0 && v6540:0 > 1 + v6525:0 && v7403:0 > 0 && v7934:0 < 0 && v6540:0 > 1 + (1 + v6525:0)
f_1214(v6517:0, v6518:0, v6519:0, v6520:0, v6521:0, v6522:0, v6523:0, v6524:0, v6525:0, v6526:0, 1, v6528:0, v6529:0, v6530:0, v6531:0, v6532:0, v6533:0, v6534:0, v6535:0, 0, v6537:0, v6538:0, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, v6544:0, v6545:0, v6546:0, v6547:0, v6548:0, v6549:0, v6550:0, v6551:0, 3, 7, 2, 4, 8) -> f_1363(v6517:0, v6518:0, v6519:0, v6520:0, v6521:0, v6522:0, v6523:0, v6524:0, 1 + (1 + v6525:0), v7934:0, 1, v6549:0, v9504:0, 0, v6528:0, 1 + v6528:0, v6518:0, v6549:0, v7403:0, 1 + v6525:0, v6538:0, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, v6544:0, v6545:0, v6546:0, v6547:0, v6548:0, v6529:0, 0, 3, 7, 2, 4, 8) :|: v6525:0 > 1 && v6540:0 > 3 && v6528:0 > 0 && v7403:0 < v6549:0 && v6540:0 > 1 + v6525:0 && v7403:0 > 0 && v7934:0 > 0 && v6540:0 > 1 + (1 + v6525:0)
f_1214(v6517:0, v6518:0, v6519:0, v6520:0, v6521:0, v6522:0, v6523:0, v6524:0, v6525:0, v6526:0, 1, v6528:0, v6529:0, v6530:0, v6531:0, v6532:0, v6533:0, v6534:0, v6535:0, 0, v6537:0, v6538:0, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, v6544:0, v6545:0, v6546:0, v6547:0, v6548:0, v6549:0, v6550:0, v6551:0, 3, 7, 2, 4, 8) -> f_1363(v6517:0, v6518:0, v6519:0, v6520:0, v6521:0, v6522:0, v6523:0, v6524:0, 1 + v6525:0, v7934:0, 1, v6549:0, v9504:0, 0, v6528:0, 1 + v6528:0, 1 + v6528:0, v7405:0, v6526:0, v6525:0, v6538:0, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, v6544:0, v6545:0, v6546:0, v6547:0, v6548:0, v6529:0, v7405:0, 3, 7, 2, 4, 8) :|: v6528:0 > 0 && v6541:0 > 1 + v6528:0 && v7405:0 < 0 && v6541:0 > 2 && v7405:0 < v6526:0 && v6525:0 > 1 && v6540:0 > 1 + v6525:0 && v6540:0 > 3 && v7934:0 < 0
f_1214(v6517:0, v6518:0, v6519:0, v6520:0, v6521:0, v6522:0, v6523:0, v6524:0, v6525:0, v6526:0, 1, v6528:0, v6529:0, v6530:0, v6531:0, v6532:0, v6533:0, v6534:0, v6535:0, 0, v6537:0, v6538:0, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, v6544:0, v6545:0, v6546:0, v6547:0, v6548:0, v6549:0, v6550:0, v6551:0, 3, 7, 2, 4, 8) -> f_1363(v6517:0, v6518:0, v6519:0, v6520:0, v6521:0, v6522:0, v6523:0, v6524:0, 1 + v6525:0, v7934:0, 1, v6549:0, v9504:0, 0, v6528:0, 1 + v6528:0, 1 + v6528:0, v7405:0, v6526:0, v6525:0, v6538:0, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, v6544:0, v6545:0, v6546:0, v6547:0, v6548:0, v6529:0, v7405:0, 3, 7, 2, 4, 8) :|: v6528:0 > 0 && v6541:0 > 1 + v6528:0 && v7405:0 < 0 && v6541:0 > 2 && v7405:0 < v6526:0 && v6525:0 > 1 && v6540:0 > 1 + v6525:0 && v6540:0 > 3 && v7934:0 > 0
f_1214(v6517:0, v6518:0, v6519:0, v6520:0, v6521:0, v6522:0, v6523:0, v6524:0, v6525:0, v6526:0, 1, v6528:0, v6529:0, v6530:0, v6531:0, v6532:0, v6533:0, v6534:0, v6535:0, 0, v6537:0, v6538:0, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, v6544:0, v6545:0, v6546:0, v6547:0, v6548:0, v6549:0, v6550:0, v6551:0, 3, 7, 2, 4, 8) -> f_1363(v6517:0, v6518:0, v6519:0, v6520:0, v6521:0, v6522:0, v6523:0, v6524:0, 1 + v6525:0, v7934:0, 1, v6549:0, v9504:0, 0, v6528:0, 1 + v6528:0, 1 + v6528:0, v7405:0, v6526:0, v6525:0, v6538:0, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, v6544:0, v6545:0, v6546:0, v6547:0, v6548:0, v6529:0, v7405:0, 3, 7, 2, 4, 8) :|: v6528:0 > 0 && v6541:0 > 1 + v6528:0 && v7405:0 < 0 && v6541:0 > 2 && v7405:0 > v6526:0 && v6525:0 > 1 && v6540:0 > 1 + v6525:0 && v6540:0 > 3 && v7934:0 < 0
f_1214(v6517:0, v6518:0, v6519:0, v6520:0, v6521:0, v6522:0, v6523:0, v6524:0, v6525:0, v6526:0, 1, v6528:0, v6529:0, v6530:0, v6531:0, v6532:0, v6533:0, v6534:0, v6535:0, 0, v6537:0, v6538:0, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, v6544:0, v6545:0, v6546:0, v6547:0, v6548:0, v6549:0, v6550:0, v6551:0, 3, 7, 2, 4, 8) -> f_1363(v6517:0, v6518:0, v6519:0, v6520:0, v6521:0, v6522:0, v6523:0, v6524:0, 1 + v6525:0, v7934:0, 1, v6549:0, v9504:0, 0, v6528:0, 1 + v6528:0, 1 + v6528:0, v7405:0, v6526:0, v6525:0, v6538:0, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, v6544:0, v6545:0, v6546:0, v6547:0, v6548:0, v6529:0, v7405:0, 3, 7, 2, 4, 8) :|: v6528:0 > 0 && v6541:0 > 1 + v6528:0 && v7405:0 < 0 && v6541:0 > 2 && v7405:0 > v6526:0 && v6525:0 > 1 && v6540:0 > 1 + v6525:0 && v6540:0 > 3 && v7934:0 > 0
f_1214(v6517:0, v6518:0, v6519:0, v6520:0, v6521:0, v6522:0, v6523:0, v6524:0, v6525:0, v6526:0, 1, v6528:0, v6529:0, v6530:0, v6531:0, v6532:0, v6533:0, v6534:0, v6535:0, 0, v6537:0, v6538:0, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, v6544:0, v6545:0, v6546:0, v6547:0, v6548:0, v6549:0, v6550:0, v6551:0, 3, 7, 2, 4, 8) -> f_1363(v6517:0, v6518:0, v6519:0, v6520:0, v6521:0, v6522:0, v6523:0, v6524:0, 1 + v6525:0, v7934:0, 1, v6549:0, v9504:0, 0, v6528:0, 1 + v6528:0, 1 + v6528:0, v7405:0, v6526:0, v6525:0, v6538:0, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, v6544:0, v6545:0, v6546:0, v6547:0, v6548:0, v6529:0, v7405:0, 3, 7, 2, 4, 8) :|: v6528:0 > 0 && v6541:0 > 1 + v6528:0 && v7405:0 > 0 && v6541:0 > 2 && v7405:0 < v6526:0 && v6525:0 > 1 && v6540:0 > 1 + v6525:0 && v6540:0 > 3 && v7934:0 < 0
f_1214(v6517:0, v6518:0, v6519:0, v6520:0, v6521:0, v6522:0, v6523:0, v6524:0, v6525:0, v6526:0, 1, v6528:0, v6529:0, v6530:0, v6531:0, v6532:0, v6533:0, v6534:0, v6535:0, 0, v6537:0, v6538:0, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, v6544:0, v6545:0, v6546:0, v6547:0, v6548:0, v6549:0, v6550:0, v6551:0, 3, 7, 2, 4, 8) -> f_1363(v6517:0, v6518:0, v6519:0, v6520:0, v6521:0, v6522:0, v6523:0, v6524:0, 1 + v6525:0, v7934:0, 1, v6549:0, v9504:0, 0, v6528:0, 1 + v6528:0, 1 + v6528:0, v7405:0, v6526:0, v6525:0, v6538:0, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, v6544:0, v6545:0, v6546:0, v6547:0, v6548:0, v6529:0, v7405:0, 3, 7, 2, 4, 8) :|: v6528:0 > 0 && v6541:0 > 1 + v6528:0 && v7405:0 > 0 && v6541:0 > 2 && v7405:0 < v6526:0 && v6525:0 > 1 && v6540:0 > 1 + v6525:0 && v6540:0 > 3 && v7934:0 > 0
f_1214(v6517:0, v6518:0, v6519:0, v6520:0, v6521:0, v6522:0, v6523:0, v6524:0, v6525:0, v6526:0, 1, v6528:0, v6529:0, v6530:0, v6531:0, v6532:0, v6533:0, v6534:0, v6535:0, 0, v6537:0, v6538:0, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, v6544:0, v6545:0, v6546:0, v6547:0, v6548:0, v6549:0, v6550:0, v6551:0, 3, 7, 2, 4, 8) -> f_1363(v6517:0, v6518:0, v6519:0, v6520:0, v6521:0, v6522:0, v6523:0, v6524:0, 1 + v6525:0, v7934:0, 1, v6549:0, v9504:0, 0, v6528:0, 1 + v6528:0, 1 + v6528:0, v7405:0, v6526:0, v6525:0, v6538:0, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, v6544:0, v6545:0, v6546:0, v6547:0, v6548:0, v6529:0, v7405:0, 3, 7, 2, 4, 8) :|: v6528:0 > 0 && v6541:0 > 1 + v6528:0 && v7405:0 > 0 && v6541:0 > 2 && v7405:0 > v6526:0 && v6525:0 > 1 && v6540:0 > 1 + v6525:0 && v6540:0 > 3 && v7934:0 < 0
f_1214(v6517:0, v6518:0, v6519:0, v6520:0, v6521:0, v6522:0, v6523:0, v6524:0, v6525:0, v6526:0, 1, v6528:0, v6529:0, v6530:0, v6531:0, v6532:0, v6533:0, v6534:0, v6535:0, 0, v6537:0, v6538:0, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, v6544:0, v6545:0, v6546:0, v6547:0, v6548:0, v6549:0, v6550:0, v6551:0, 3, 7, 2, 4, 8) -> f_1363(v6517:0, v6518:0, v6519:0, v6520:0, v6521:0, v6522:0, v6523:0, v6524:0, 1 + v6525:0, v7934:0, 1, v6549:0, v9504:0, 0, v6528:0, 1 + v6528:0, 1 + v6528:0, v7405:0, v6526:0, v6525:0, v6538:0, v6539:0, v6540:0, v6541:0, v6542:0, v6543:0, v6544:0, v6545:0, v6546:0, v6547:0, v6548:0, v6529:0, v7405:0, 3, 7, 2, 4, 8) :|: v6528:0 > 0 && v6541:0 > 1 + v6528:0 && v7405:0 > 0 && v6541:0 > 2 && v7405:0 > v6526:0 && v6525:0 > 1 && v6540:0 > 1 + v6525:0 && v6540:0 > 3 && v7934:0 > 0
Filtered unneeded arguments:
   f_1363(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38) -> f_1363(x2, x9, x10, x12, x13, x23, x24)
   f_1214(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40) -> f_1214(x2, x9, x10, x12, x24, x25, x33)
Removed division, modulo operations, cleaned up constraints. Obtained 13 rules.P rules:
f_1363(v8928:0, v8935:0, v8936:0, v8956:0, v8956:01, v8947:0, v8948:0) -> f_1363(v8928:0, 1 + v8935:0, v7934:0, v8956:0, v9504:1, v8947:0, v8948:0) :|: v8935:0 > 1 && v8956:0 < v8936:0 && v8947:0 > 1 + v8935:0 && v7934:0 < 0 && v8947:0 > 3 && v8956:0 = v8956:01
f_1363(v8928:0, v8935:0, v8936:0, v8956:0, v8956:01, v8947:0, v8948:0) -> f_1363(v8928:0, 1 + v8935:0, v7934:0, v8956:0, v9504:1, v8947:0, v8948:0) :|: v8935:0 > 1 && v8956:0 < v8936:0 && v8947:0 > 1 + v8935:0 && v7934:0 > 0 && v8947:0 > 3 && v8956:0 = v8956:01
f_1363(v8928:0, v8935:0, v8936:0, v8956:0, v8956:01, v8947:0, v8948:0) -> f_1363(v8928:0, 1 + v8935:0, v7934:0, v8956:0, v9504:1, v8947:0, v8948:0) :|: v8935:0 > 1 && v8956:0 > v8936:0 && v8947:0 > 1 + v8935:0 && v7934:0 < 0 && v8947:0 > 3 && v8956:0 = v8956:01
f_1363(v8928:0, v8935:0, v8936:0, v8956:0, v8956:01, v8947:0, v8948:0) -> f_1363(v8928:0, 1 + v8935:0, v7934:0, v8956:0, v9504:1, v8947:0, v8948:0) :|: v8935:0 > 1 && v8956:0 > v8936:0 && v8947:0 > 1 + v8935:0 && v7934:0 > 0 && v8947:0 > 3 && v8956:0 = v8956:01
f_1363(v8928:0, v8935:0, v8936:0, v8956:0, v9504:0, v8947:0, v8948:0) -> f_1214(v8928:0, v8935:0, v8936:0, v8928:0, v8947:0, v8948:0, v8956:0) :|: v9504:0 > v8956:0
f_1363(v8928:0, v8935:0, v8936:0, v8956:0, v9504:0, v8947:0, v8948:0) -> f_1214(v8928:0, v8935:0, v8936:0, v8928:0, v8947:0, v8948:0, v8956:0) :|: v9504:0 < v8956:0
f_1214(v6518:0, v6525:0, v6526:0, v6528:0, v6540:0, v6541:0, v6549:0) -> f_1214(v6518:0, v6525:0, v6526:0, 1 + v6528:0, v6540:0, v6541:0, v6549:0) :|: v6541:0 > 1 + v6528:0 && v6541:0 > 2 && v6528:0 > 0
f_1214(v6518:0, v6525:0, v6526:0, v6528:0, v6540:0, v6541:0, v6549:0) -> f_1214(v6518:0, 1 + v6525:0, v7403:0, v6518:0, v6540:0, v6541:0, v6549:0) :|: v6525:0 > 1 && v6528:0 > 0 && v6540:0 > 1 + v6525:0 && v6540:0 > 2 && v7403:0 < 0
f_1214(v6518:0, v6525:0, v6526:0, v6528:0, v6540:0, v6541:0, v6549:0) -> f_1214(v6518:0, 1 + v6525:0, v7403:0, v6518:0, v6540:0, v6541:0, v6549:0) :|: v6525:0 > 1 && v6528:0 > 0 && v6540:0 > 1 + v6525:0 && v6540:0 > 2 && v7403:0 > 0
f_1214(v6518:0, v6525:0, v6526:0, v6528:0, v6540:0, v6541:0, v6549:0) -> f_1363(v6518:0, 1 + (1 + v6525:0), v7934:0, v6549:0, v9504:0, v6540:0, v6541:0) :|: v6540:0 > 3 && v6525:0 > 1 && v6528:0 > 0 && v6540:0 > 1 + v6525:0 && v6540:0 > 1 + (1 + v6525:0) && v7934:0 < 0
f_1214(v6518:0, v6525:0, v6526:0, v6528:0, v6540:0, v6541:0, v6549:0) -> f_1363(v6518:0, 1 + (1 + v6525:0), v7934:0, v6549:0, v9504:0, v6540:0, v6541:0) :|: v6540:0 > 3 && v6525:0 > 1 && v6528:0 > 0 && v6540:0 > 1 + v6525:0 && v6540:0 > 1 + (1 + v6525:0) && v7934:0 > 0
f_1214(v6518:0, v6525:0, v6526:0, v6528:0, v6540:0, v6541:0, v6549:0) -> f_1363(v6518:0, 1 + v6525:0, v7934:0, v6549:0, v9504:0, v6540:0, v6541:0) :|: v6541:0 > 1 + v6528:0 && v6528:0 > 0 && v6541:0 > 2 && v6525:0 > 1 && v6540:0 > 1 + v6525:0 && v7934:0 < 0 && v6540:0 > 3
f_1214(v6518:0, v6525:0, v6526:0, v6528:0, v6540:0, v6541:0, v6549:0) -> f_1363(v6518:0, 1 + v6525:0, v7934:0, v6549:0, v9504:0, v6540:0, v6541:0) :|: v6541:0 > 1 + v6528:0 && v6528:0 > 0 && v6541:0 > 2 && v6525:0 > 1 && v6540:0 > 1 + v6525:0 && v7934:0 > 0 && v6540:0 > 3

----------------------------------------

(9)
Obligation:
Rules:
f_1363(v8928:0, v8935:0, v8936:0, v8956:0, v8956:01, v8947:0, v8948:0) -> f_1363(v8928:0, 1 + v8935:0, v7934:0, v8956:0, v9504:1, v8947:0, v8948:0) :|: v8935:0 > 1 && v8956:0 < v8936:0 && v8947:0 > 1 + v8935:0 && v7934:0 < 0 && v8947:0 > 3 && v8956:0 = v8956:01
f_1363(x, x1, x2, x3, x4, x5, x6) -> f_1363(x, 1 + x1, x7, x3, x8, x5, x6) :|: x1 > 1 && x3 < x2 && x5 > 1 + x1 && x7 > 0 && x5 > 3 && x3 = x4
f_1363(x9, x10, x11, x12, x13, x14, x15) -> f_1363(x9, 1 + x10, x16, x12, x17, x14, x15) :|: x10 > 1 && x12 > x11 && x14 > 1 + x10 && x16 < 0 && x14 > 3 && x12 = x13
f_1363(x18, x19, x20, x21, x22, x23, x24) -> f_1363(x18, 1 + x19, x25, x21, x26, x23, x24) :|: x19 > 1 && x21 > x20 && x23 > 1 + x19 && x25 > 0 && x23 > 3 && x21 = x22
f_1363(x27, x28, x29, x30, x31, x32, x33) -> f_1214(x27, x28, x29, x27, x32, x33, x30) :|: x31 > x30
f_1363(x34, x35, x36, x37, x38, x39, x40) -> f_1214(x34, x35, x36, x34, x39, x40, x37) :|: x38 < x37
f_1214(v6518:0, v6525:0, v6526:0, v6528:0, v6540:0, v6541:0, v6549:0) -> f_1214(v6518:0, v6525:0, v6526:0, 1 + v6528:0, v6540:0, v6541:0, v6549:0) :|: v6541:0 > 1 + v6528:0 && v6541:0 > 2 && v6528:0 > 0
f_1214(x41, x42, x43, x44, x45, x46, x47) -> f_1214(x41, 1 + x42, x48, x41, x45, x46, x47) :|: x42 > 1 && x44 > 0 && x45 > 1 + x42 && x45 > 2 && x48 < 0
f_1214(x49, x50, x51, x52, x53, x54, x55) -> f_1214(x49, 1 + x50, x56, x49, x53, x54, x55) :|: x50 > 1 && x52 > 0 && x53 > 1 + x50 && x53 > 2 && x56 > 0
f_1214(x57, x58, x59, x60, x61, x62, x63) -> f_1363(x57, 1 + (1 + x58), x64, x63, x65, x61, x62) :|: x61 > 3 && x58 > 1 && x60 > 0 && x61 > 1 + x58 && x61 > 1 + (1 + x58) && x64 < 0
f_1214(x66, x67, x68, x69, x70, x71, x72) -> f_1363(x66, 1 + (1 + x67), x73, x72, x74, x70, x71) :|: x70 > 3 && x67 > 1 && x69 > 0 && x70 > 1 + x67 && x70 > 1 + (1 + x67) && x73 > 0
f_1214(x75, x76, x77, x78, x79, x80, x81) -> f_1363(x75, 1 + x76, x82, x81, x83, x79, x80) :|: x80 > 1 + x78 && x78 > 0 && x80 > 2 && x76 > 1 && x79 > 1 + x76 && x82 < 0 && x79 > 3
f_1214(x84, x85, x86, x87, x88, x89, x90) -> f_1363(x84, 1 + x85, x91, x90, x92, x88, x89) :|: x89 > 1 + x87 && x87 > 0 && x89 > 2 && x85 > 1 && x88 > 1 + x85 && x91 > 0 && x88 > 3

----------------------------------------

(10) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(11)
Obligation:
Rules:
f_1214(x75:0, x76:0, x77:0, x78:0, x79:0, x80:0, x81:0) -> f_1363(x75:0, 1 + x76:0, x82:0, x81:0, x83:0, x79:0, x80:0) :|: x82:0 < 0 && x79:0 > 3 && x79:0 > 1 + x76:0 && x76:0 > 1 && x80:0 > 2 && x78:0 > 0 && x80:0 > 1 + x78:0
f_1214(x66:0, x67:0, x68:0, x69:0, x70:0, x71:0, x72:0) -> f_1363(x66:0, 1 + (1 + x67:0), x73:0, x72:0, x74:0, x70:0, x71:0) :|: x70:0 > 1 + (1 + x67:0) && x73:0 > 0 && x70:0 > 1 + x67:0 && x69:0 > 0 && x67:0 > 1 && x70:0 > 3
f_1363(x:0, x1:0, x2:0, x3:0, x3:01, x5:0, x6:0) -> f_1363(x:0, 1 + x1:0, x7:0, x3:0, x8:0, x5:0, x6:0) :|: x7:0 > 0 && x5:0 > 3 && x5:0 > 1 + x1:0 && x3:0 < x2:0 && x1:0 > 1 && x3:0 = x3:01
f_1214(x41:0, x42:0, x43:0, x44:0, x45:0, x46:0, x47:0) -> f_1214(x41:0, 1 + x42:0, x48:0, x41:0, x45:0, x46:0, x47:0) :|: x45:0 > 2 && x48:0 < 0 && x45:0 > 1 + x42:0 && x44:0 > 0 && x42:0 > 1
f_1214(v6518:0:0, v6525:0:0, v6526:0:0, v6528:0:0, v6540:0:0, v6541:0:0, v6549:0:0) -> f_1214(v6518:0:0, v6525:0:0, v6526:0:0, 1 + v6528:0:0, v6540:0:0, v6541:0:0, v6549:0:0) :|: v6541:0:0 > 1 + v6528:0:0 && v6541:0:0 > 2 && v6528:0:0 > 0
f_1214(x49:0, x50:0, x51:0, x52:0, x53:0, x54:0, x55:0) -> f_1214(x49:0, 1 + x50:0, x56:0, x49:0, x53:0, x54:0, x55:0) :|: x53:0 > 2 && x56:0 > 0 && x53:0 > 1 + x50:0 && x52:0 > 0 && x50:0 > 1
f_1363(x27:0, x28:0, x29:0, x30:0, x31:0, x32:0, x33:0) -> f_1214(x27:0, x28:0, x29:0, x27:0, x32:0, x33:0, x30:0) :|: x31:0 > x30:0
f_1363(v8928:0:0, v8935:0:0, v8936:0:0, v8956:01:0, v8956:01:01, v8947:0:0, v8948:0:0) -> f_1363(v8928:0:0, 1 + v8935:0:0, v7934:0:0, v8956:01:0, v9504:1:0, v8947:0:0, v8948:0:0) :|: v7934:0:0 < 0 && v8947:0:0 > 3 && v8947:0:0 > 1 + v8935:0:0 && v8956:01:0 < v8936:0:0 && v8935:0:0 > 1 && v8956:01:0 = v8956:01:01
f_1363(x9:0, x10:0, x11:0, x12:0, x12:01, x14:0, x15:0) -> f_1363(x9:0, 1 + x10:0, x16:0, x12:0, x17:0, x14:0, x15:0) :|: x16:0 < 0 && x14:0 > 3 && x14:0 > 1 + x10:0 && x12:0 > x11:0 && x10:0 > 1 && x12:0 = x12:01
f_1214(x57:0, x58:0, x59:0, x60:0, x61:0, x62:0, x63:0) -> f_1363(x57:0, 1 + (1 + x58:0), x64:0, x63:0, x65:0, x61:0, x62:0) :|: x61:0 > 1 + (1 + x58:0) && x64:0 < 0 && x61:0 > 1 + x58:0 && x60:0 > 0 && x58:0 > 1 && x61:0 > 3
f_1363(x18:0, x19:0, x20:0, x21:0, x21:01, x23:0, x24:0) -> f_1363(x18:0, 1 + x19:0, x25:0, x21:0, x26:0, x23:0, x24:0) :|: x25:0 > 0 && x23:0 > 3 && x23:0 > 1 + x19:0 && x21:0 > x20:0 && x19:0 > 1 && x21:0 = x21:01
f_1214(x84:0, x85:0, x86:0, x87:0, x88:0, x89:0, x90:0) -> f_1363(x84:0, 1 + x85:0, x91:0, x90:0, x92:0, x88:0, x89:0) :|: x91:0 > 0 && x88:0 > 3 && x88:0 > 1 + x85:0 && x85:0 > 1 && x89:0 > 2 && x87:0 > 0 && x89:0 > 1 + x87:0
f_1363(x34:0, x35:0, x36:0, x37:0, x38:0, x39:0, x40:0) -> f_1214(x34:0, x35:0, x36:0, x34:0, x39:0, x40:0, x37:0) :|: x38:0 < x37:0

----------------------------------------

(12) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_1214(x1, x2, x3, x4, x5, x6, x7) -> f_1214(x1, x2, x4, x5, x6, x7)

----------------------------------------

(13)
Obligation:
Rules:
f_1214(x75:0, x76:0, x78:0, x79:0, x80:0, x81:0) -> f_1363(x75:0, 1 + x76:0, x82:0, x81:0, x83:0, x79:0, x80:0) :|: x82:0 < 0 && x79:0 > 3 && x79:0 > 1 + x76:0 && x76:0 > 1 && x80:0 > 2 && x78:0 > 0 && x80:0 > 1 + x78:0
f_1214(x66:0, x67:0, x69:0, x70:0, x71:0, x72:0) -> f_1363(x66:0, 1 + (1 + x67:0), x73:0, x72:0, x74:0, x70:0, x71:0) :|: x70:0 > 1 + (1 + x67:0) && x73:0 > 0 && x70:0 > 1 + x67:0 && x69:0 > 0 && x67:0 > 1 && x70:0 > 3
f_1363(x:0, x1:0, x2:0, x3:0, x3:01, x5:0, x6:0) -> f_1363(x:0, 1 + x1:0, x7:0, x3:0, x8:0, x5:0, x6:0) :|: x7:0 > 0 && x5:0 > 3 && x5:0 > 1 + x1:0 && x3:0 < x2:0 && x1:0 > 1 && x3:0 = x3:01
f_1214(x41:0, x42:0, x44:0, x45:0, x46:0, x47:0) -> f_1214(x41:0, 1 + x42:0, x41:0, x45:0, x46:0, x47:0) :|: x45:0 > 2 && x48:0 < 0 && x45:0 > 1 + x42:0 && x44:0 > 0 && x42:0 > 1
f_1214(v6518:0:0, v6525:0:0, v6528:0:0, v6540:0:0, v6541:0:0, v6549:0:0) -> f_1214(v6518:0:0, v6525:0:0, 1 + v6528:0:0, v6540:0:0, v6541:0:0, v6549:0:0) :|: v6541:0:0 > 1 + v6528:0:0 && v6541:0:0 > 2 && v6528:0:0 > 0
f_1214(x49:0, x50:0, x52:0, x53:0, x54:0, x55:0) -> f_1214(x49:0, 1 + x50:0, x49:0, x53:0, x54:0, x55:0) :|: x53:0 > 2 && x56:0 > 0 && x53:0 > 1 + x50:0 && x52:0 > 0 && x50:0 > 1
f_1363(x27:0, x28:0, x29:0, x30:0, x31:0, x32:0, x33:0) -> f_1214(x27:0, x28:0, x27:0, x32:0, x33:0, x30:0) :|: x31:0 > x30:0
f_1363(v8928:0:0, v8935:0:0, v8936:0:0, v8956:01:0, v8956:01:01, v8947:0:0, v8948:0:0) -> f_1363(v8928:0:0, 1 + v8935:0:0, v7934:0:0, v8956:01:0, v9504:1:0, v8947:0:0, v8948:0:0) :|: v7934:0:0 < 0 && v8947:0:0 > 3 && v8947:0:0 > 1 + v8935:0:0 && v8956:01:0 < v8936:0:0 && v8935:0:0 > 1 && v8956:01:0 = v8956:01:01
f_1363(x9:0, x10:0, x11:0, x12:0, x12:01, x14:0, x15:0) -> f_1363(x9:0, 1 + x10:0, x16:0, x12:0, x17:0, x14:0, x15:0) :|: x16:0 < 0 && x14:0 > 3 && x14:0 > 1 + x10:0 && x12:0 > x11:0 && x10:0 > 1 && x12:0 = x12:01
f_1214(x57:0, x58:0, x60:0, x61:0, x62:0, x63:0) -> f_1363(x57:0, 1 + (1 + x58:0), x64:0, x63:0, x65:0, x61:0, x62:0) :|: x61:0 > 1 + (1 + x58:0) && x64:0 < 0 && x61:0 > 1 + x58:0 && x60:0 > 0 && x58:0 > 1 && x61:0 > 3
f_1363(x18:0, x19:0, x20:0, x21:0, x21:01, x23:0, x24:0) -> f_1363(x18:0, 1 + x19:0, x25:0, x21:0, x26:0, x23:0, x24:0) :|: x25:0 > 0 && x23:0 > 3 && x23:0 > 1 + x19:0 && x21:0 > x20:0 && x19:0 > 1 && x21:0 = x21:01
f_1214(x84:0, x85:0, x87:0, x88:0, x89:0, x90:0) -> f_1363(x84:0, 1 + x85:0, x91:0, x90:0, x92:0, x88:0, x89:0) :|: x91:0 > 0 && x88:0 > 3 && x88:0 > 1 + x85:0 && x85:0 > 1 && x89:0 > 2 && x87:0 > 0 && x89:0 > 1 + x87:0
f_1363(x34:0, x35:0, x36:0, x37:0, x38:0, x39:0, x40:0) -> f_1214(x34:0, x35:0, x34:0, x39:0, x40:0, x37:0) :|: x38:0 < x37:0

----------------------------------------

(14) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_1214(x, x1, x2, x3, x4, x5)] = -2 - x1 + x3
[f_1363(x6, x7, x8, x9, x10, x11, x12)] = -1 + x11 - x7

The following rules are decreasing:
f_1214(x66:0, x67:0, x69:0, x70:0, x71:0, x72:0) -> f_1363(x66:0, 1 + (1 + x67:0), x73:0, x72:0, x74:0, x70:0, x71:0) :|: x70:0 > 1 + (1 + x67:0) && x73:0 > 0 && x70:0 > 1 + x67:0 && x69:0 > 0 && x67:0 > 1 && x70:0 > 3
f_1363(x:0, x1:0, x2:0, x3:0, x3:01, x5:0, x6:0) -> f_1363(x:0, 1 + x1:0, x7:0, x3:0, x8:0, x5:0, x6:0) :|: x7:0 > 0 && x5:0 > 3 && x5:0 > 1 + x1:0 && x3:0 < x2:0 && x1:0 > 1 && x3:0 = x3:01
f_1214(x41:0, x42:0, x44:0, x45:0, x46:0, x47:0) -> f_1214(x41:0, 1 + x42:0, x41:0, x45:0, x46:0, x47:0) :|: x45:0 > 2 && x48:0 < 0 && x45:0 > 1 + x42:0 && x44:0 > 0 && x42:0 > 1
f_1214(x49:0, x50:0, x52:0, x53:0, x54:0, x55:0) -> f_1214(x49:0, 1 + x50:0, x49:0, x53:0, x54:0, x55:0) :|: x53:0 > 2 && x56:0 > 0 && x53:0 > 1 + x50:0 && x52:0 > 0 && x50:0 > 1
f_1363(x27:0, x28:0, x29:0, x30:0, x31:0, x32:0, x33:0) -> f_1214(x27:0, x28:0, x27:0, x32:0, x33:0, x30:0) :|: x31:0 > x30:0
f_1363(v8928:0:0, v8935:0:0, v8936:0:0, v8956:01:0, v8956:01:01, v8947:0:0, v8948:0:0) -> f_1363(v8928:0:0, 1 + v8935:0:0, v7934:0:0, v8956:01:0, v9504:1:0, v8947:0:0, v8948:0:0) :|: v7934:0:0 < 0 && v8947:0:0 > 3 && v8947:0:0 > 1 + v8935:0:0 && v8956:01:0 < v8936:0:0 && v8935:0:0 > 1 && v8956:01:0 = v8956:01:01
f_1363(x9:0, x10:0, x11:0, x12:0, x12:01, x14:0, x15:0) -> f_1363(x9:0, 1 + x10:0, x16:0, x12:0, x17:0, x14:0, x15:0) :|: x16:0 < 0 && x14:0 > 3 && x14:0 > 1 + x10:0 && x12:0 > x11:0 && x10:0 > 1 && x12:0 = x12:01
f_1214(x57:0, x58:0, x60:0, x61:0, x62:0, x63:0) -> f_1363(x57:0, 1 + (1 + x58:0), x64:0, x63:0, x65:0, x61:0, x62:0) :|: x61:0 > 1 + (1 + x58:0) && x64:0 < 0 && x61:0 > 1 + x58:0 && x60:0 > 0 && x58:0 > 1 && x61:0 > 3
f_1363(x18:0, x19:0, x20:0, x21:0, x21:01, x23:0, x24:0) -> f_1363(x18:0, 1 + x19:0, x25:0, x21:0, x26:0, x23:0, x24:0) :|: x25:0 > 0 && x23:0 > 3 && x23:0 > 1 + x19:0 && x21:0 > x20:0 && x19:0 > 1 && x21:0 = x21:01
f_1363(x34:0, x35:0, x36:0, x37:0, x38:0, x39:0, x40:0) -> f_1214(x34:0, x35:0, x34:0, x39:0, x40:0, x37:0) :|: x38:0 < x37:0
The following rules are bounded:
f_1214(x75:0, x76:0, x78:0, x79:0, x80:0, x81:0) -> f_1363(x75:0, 1 + x76:0, x82:0, x81:0, x83:0, x79:0, x80:0) :|: x82:0 < 0 && x79:0 > 3 && x79:0 > 1 + x76:0 && x76:0 > 1 && x80:0 > 2 && x78:0 > 0 && x80:0 > 1 + x78:0
f_1214(x66:0, x67:0, x69:0, x70:0, x71:0, x72:0) -> f_1363(x66:0, 1 + (1 + x67:0), x73:0, x72:0, x74:0, x70:0, x71:0) :|: x70:0 > 1 + (1 + x67:0) && x73:0 > 0 && x70:0 > 1 + x67:0 && x69:0 > 0 && x67:0 > 1 && x70:0 > 3
f_1363(x:0, x1:0, x2:0, x3:0, x3:01, x5:0, x6:0) -> f_1363(x:0, 1 + x1:0, x7:0, x3:0, x8:0, x5:0, x6:0) :|: x7:0 > 0 && x5:0 > 3 && x5:0 > 1 + x1:0 && x3:0 < x2:0 && x1:0 > 1 && x3:0 = x3:01
f_1214(x41:0, x42:0, x44:0, x45:0, x46:0, x47:0) -> f_1214(x41:0, 1 + x42:0, x41:0, x45:0, x46:0, x47:0) :|: x45:0 > 2 && x48:0 < 0 && x45:0 > 1 + x42:0 && x44:0 > 0 && x42:0 > 1
f_1214(x49:0, x50:0, x52:0, x53:0, x54:0, x55:0) -> f_1214(x49:0, 1 + x50:0, x49:0, x53:0, x54:0, x55:0) :|: x53:0 > 2 && x56:0 > 0 && x53:0 > 1 + x50:0 && x52:0 > 0 && x50:0 > 1
f_1363(v8928:0:0, v8935:0:0, v8936:0:0, v8956:01:0, v8956:01:01, v8947:0:0, v8948:0:0) -> f_1363(v8928:0:0, 1 + v8935:0:0, v7934:0:0, v8956:01:0, v9504:1:0, v8947:0:0, v8948:0:0) :|: v7934:0:0 < 0 && v8947:0:0 > 3 && v8947:0:0 > 1 + v8935:0:0 && v8956:01:0 < v8936:0:0 && v8935:0:0 > 1 && v8956:01:0 = v8956:01:01
f_1363(x9:0, x10:0, x11:0, x12:0, x12:01, x14:0, x15:0) -> f_1363(x9:0, 1 + x10:0, x16:0, x12:0, x17:0, x14:0, x15:0) :|: x16:0 < 0 && x14:0 > 3 && x14:0 > 1 + x10:0 && x12:0 > x11:0 && x10:0 > 1 && x12:0 = x12:01
f_1214(x57:0, x58:0, x60:0, x61:0, x62:0, x63:0) -> f_1363(x57:0, 1 + (1 + x58:0), x64:0, x63:0, x65:0, x61:0, x62:0) :|: x61:0 > 1 + (1 + x58:0) && x64:0 < 0 && x61:0 > 1 + x58:0 && x60:0 > 0 && x58:0 > 1 && x61:0 > 3
f_1363(x18:0, x19:0, x20:0, x21:0, x21:01, x23:0, x24:0) -> f_1363(x18:0, 1 + x19:0, x25:0, x21:0, x26:0, x23:0, x24:0) :|: x25:0 > 0 && x23:0 > 3 && x23:0 > 1 + x19:0 && x21:0 > x20:0 && x19:0 > 1 && x21:0 = x21:01
f_1214(x84:0, x85:0, x87:0, x88:0, x89:0, x90:0) -> f_1363(x84:0, 1 + x85:0, x91:0, x90:0, x92:0, x88:0, x89:0) :|: x91:0 > 0 && x88:0 > 3 && x88:0 > 1 + x85:0 && x85:0 > 1 && x89:0 > 2 && x87:0 > 0 && x89:0 > 1 + x87:0

----------------------------------------

(15)
Complex Obligation (AND)

----------------------------------------

(16)
Obligation:
Rules:
f_1214(x75:0, x76:0, x78:0, x79:0, x80:0, x81:0) -> f_1363(x75:0, 1 + x76:0, x82:0, x81:0, x83:0, x79:0, x80:0) :|: x82:0 < 0 && x79:0 > 3 && x79:0 > 1 + x76:0 && x76:0 > 1 && x80:0 > 2 && x78:0 > 0 && x80:0 > 1 + x78:0
f_1214(v6518:0:0, v6525:0:0, v6528:0:0, v6540:0:0, v6541:0:0, v6549:0:0) -> f_1214(v6518:0:0, v6525:0:0, 1 + v6528:0:0, v6540:0:0, v6541:0:0, v6549:0:0) :|: v6541:0:0 > 1 + v6528:0:0 && v6541:0:0 > 2 && v6528:0:0 > 0
f_1214(x84:0, x85:0, x87:0, x88:0, x89:0, x90:0) -> f_1363(x84:0, 1 + x85:0, x91:0, x90:0, x92:0, x88:0, x89:0) :|: x91:0 > 0 && x88:0 > 3 && x88:0 > 1 + x85:0 && x85:0 > 1 && x89:0 > 2 && x87:0 > 0 && x89:0 > 1 + x87:0

----------------------------------------

(17) TerminationGraphProcessor (EQUIVALENT)
Constructed the termination graph and obtained one non-trivial SCC.

----------------------------------------

(18)
Obligation:
Rules:
f_1214(v6518:0:0, v6525:0:0, v6528:0:0, v6540:0:0, v6541:0:0, v6549:0:0) -> f_1214(v6518:0:0, v6525:0:0, 1 + v6528:0:0, v6540:0:0, v6541:0:0, v6549:0:0) :|: v6541:0:0 > 1 + v6528:0:0 && v6541:0:0 > 2 && v6528:0:0 > 0

----------------------------------------

(19) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(20)
Obligation:
Rules:
f_1214(v6518:0:0:0, v6525:0:0:0, v6528:0:0:0, v6540:0:0:0, v6541:0:0:0, v6549:0:0:0) -> f_1214(v6518:0:0:0, v6525:0:0:0, 1 + v6528:0:0:0, v6540:0:0:0, v6541:0:0:0, v6549:0:0:0) :|: v6541:0:0:0 > 1 + v6528:0:0:0 && v6541:0:0:0 > 2 && v6528:0:0:0 > 0

----------------------------------------

(21) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_1214(x1, x2, x3, x4, x5, x6) -> f_1214(x3, x5)

----------------------------------------

(22)
Obligation:
Rules:
f_1214(v6528:0:0:0, v6541:0:0:0) -> f_1214(1 + v6528:0:0:0, v6541:0:0:0) :|: v6541:0:0:0 > 1 + v6528:0:0:0 && v6541:0:0:0 > 2 && v6528:0:0:0 > 0

----------------------------------------

(23) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_1214 ] = f_1214_2 + -1*f_1214_1

The following rules are decreasing:
f_1214(v6528:0:0:0, v6541:0:0:0) -> f_1214(1 + v6528:0:0:0, v6541:0:0:0) :|: v6541:0:0:0 > 1 + v6528:0:0:0 && v6541:0:0:0 > 2 && v6528:0:0:0 > 0

The following rules are bounded:
f_1214(v6528:0:0:0, v6541:0:0:0) -> f_1214(1 + v6528:0:0:0, v6541:0:0:0) :|: v6541:0:0:0 > 1 + v6528:0:0:0 && v6541:0:0:0 > 2 && v6528:0:0:0 > 0


----------------------------------------

(24)
YES

----------------------------------------

(25)
Obligation:
Rules:
f_1214(v6518:0:0, v6525:0:0, v6528:0:0, v6540:0:0, v6541:0:0, v6549:0:0) -> f_1214(v6518:0:0, v6525:0:0, 1 + v6528:0:0, v6540:0:0, v6541:0:0, v6549:0:0) :|: v6541:0:0 > 1 + v6528:0:0 && v6541:0:0 > 2 && v6528:0:0 > 0
f_1363(x27:0, x28:0, x29:0, x30:0, x31:0, x32:0, x33:0) -> f_1214(x27:0, x28:0, x27:0, x32:0, x33:0, x30:0) :|: x31:0 > x30:0
f_1363(x34:0, x35:0, x36:0, x37:0, x38:0, x39:0, x40:0) -> f_1214(x34:0, x35:0, x34:0, x39:0, x40:0, x37:0) :|: x38:0 < x37:0

----------------------------------------

(26) TerminationGraphProcessor (EQUIVALENT)
Constructed the termination graph and obtained one non-trivial SCC.

----------------------------------------

(27)
Obligation:
Rules:
f_1214(v6518:0:0, v6525:0:0, v6528:0:0, v6540:0:0, v6541:0:0, v6549:0:0) -> f_1214(v6518:0:0, v6525:0:0, 1 + v6528:0:0, v6540:0:0, v6541:0:0, v6549:0:0) :|: v6541:0:0 > 1 + v6528:0:0 && v6541:0:0 > 2 && v6528:0:0 > 0

----------------------------------------

(28) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(29)
Obligation:
Rules:
f_1214(v6518:0:0:0, v6525:0:0:0, v6528:0:0:0, v6540:0:0:0, v6541:0:0:0, v6549:0:0:0) -> f_1214(v6518:0:0:0, v6525:0:0:0, 1 + v6528:0:0:0, v6540:0:0:0, v6541:0:0:0, v6549:0:0:0) :|: v6541:0:0:0 > 1 + v6528:0:0:0 && v6541:0:0:0 > 2 && v6528:0:0:0 > 0

----------------------------------------

(30) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_1214(x1, x2, x3, x4, x5, x6) -> f_1214(x3, x5)

----------------------------------------

(31)
Obligation:
Rules:
f_1214(v6528:0:0:0, v6541:0:0:0) -> f_1214(1 + v6528:0:0:0, v6541:0:0:0) :|: v6541:0:0:0 > 1 + v6528:0:0:0 && v6541:0:0:0 > 2 && v6528:0:0:0 > 0

----------------------------------------

(32) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_1214 ] = f_1214_2 + -1*f_1214_1

The following rules are decreasing:
f_1214(v6528:0:0:0, v6541:0:0:0) -> f_1214(1 + v6528:0:0:0, v6541:0:0:0) :|: v6541:0:0:0 > 1 + v6528:0:0:0 && v6541:0:0:0 > 2 && v6528:0:0:0 > 0

The following rules are bounded:
f_1214(v6528:0:0:0, v6541:0:0:0) -> f_1214(1 + v6528:0:0:0, v6541:0:0:0) :|: v6541:0:0:0 > 1 + v6528:0:0:0 && v6541:0:0:0 > 2 && v6528:0:0:0 > 0


----------------------------------------

(33)
YES

----------------------------------------

(34)
Obligation:
SCC
----------------------------------------

(35) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 41 rulesP rules:
f_971(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3482, 1, v3481, v3484, 0, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) -> f_975(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, v3482, 1, v3481, v3484, 0, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) :|: TRUE
f_975(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, v3482, 1, v3481, v3484, 0, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) -> f_980(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v3481, v3482, v3484, 0, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) :|: 0 = 0
f_980(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v3481, v3482, v3484, 0, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) -> f_985(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v3481, v3482, v3484, 0, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) :|: v3645 != 0 && v3486 < v3489 && 3 <= v3489
f_985(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v3481, v3482, v3484, 0, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) -> f_992(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v3481, v3482, v3484, 0, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) :|: 0 = 0
f_992(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v3481, v3482, v3484, 0, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) -> f_1000(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v3481, v3482, v3484, 0, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) :|: TRUE
f_1000(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v3481, v3482, v3484, 0, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) -> f_1006(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v3481, v3482, v3484, 0, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) :|: 0 = 0
f_1006(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v3481, v3482, v3484, 0, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) -> f_1010(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v3481, v3482, v3484, 0, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) :|: TRUE
f_1010(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v3481, v3482, v3484, 0, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) -> f_1014(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v3482, v3484, 0, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) :|: 0 = 0
f_1014(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v3482, v3484, 0, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) -> f_1018(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v3482, v3484, 0, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) :|: 0 = 0
f_1018(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v3482, v3484, 0, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) -> f_1022(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v3484, v3482, 0, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) :|: 0 = 0
f_1022(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v3484, v3482, 0, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) -> f_1026(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v3484, v3482, 0, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) :|: TRUE
f_1026(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v3484, v3482, 0, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) -> f_1031(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v3484, v3482, 0, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) :|: TRUE
f_1031(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v3484, v3482, 0, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) -> f_1036(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v3484, v3482, 0, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) :|: 0 = 0
f_1036(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v3484, v3482, 0, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) -> f_1041(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v3484, v3482, 0, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) :|: 0 = 0
f_1041(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v3484, v3482, 0, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) -> f_1047(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v3484, v3482, 0, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) :|: 0 = 0
f_1047(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v3484, v3482, 0, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) -> f_1053(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v3484, v3482, 0, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) :|: 0 = 0
f_1053(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v3484, v3482, 0, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) -> f_1058(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v3484, v3482, 0, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) :|: TRUE
f_1058(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v3484, v3482, 0, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) -> f_1063(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v3484, v3482, 0, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) :|: 0 = 0
f_1063(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v3484, v3482, 0, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) -> f_1069(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v3484, v3482, 0, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) :|: 0 = 0
f_1069(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v3484, v3482, 0, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) -> f_1074(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v3484, v3482, 0, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) :|: 0 = 0
f_1074(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v3484, v3482, 0, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) -> f_1079(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v3484, 0, v3482, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) :|: 0 = 0
f_1079(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v3484, 0, v3482, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) -> f_1084(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v3484, v4845, 0, v3482, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) :|: TRUE
f_1084(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v3484, v4845, 0, v3482, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) -> f_1090(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v3484, v4845, 0, v3482, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) :|: 0 = 0
f_1090(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v3484, v4845, 0, v3482, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) -> f_1098(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v4845, 0, v3482, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) :|: v3484 = v4845
f_1098(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v4845, 0, v3482, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) -> f_1105(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v4845, 0, v3482, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) :|: 0 = 0
f_1105(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v4845, 0, v3482, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) -> f_1111(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v4845, 0, v3482, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) :|: 0 = 0
f_1111(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v4845, 0, v3482, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) -> f_1116(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v4845, 0, v3482, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) :|: TRUE
f_1116(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v4845, 0, v3482, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) -> f_1121(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v4845, 0, v3482, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) :|: 0 = 0
f_1121(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v4845, 0, v3482, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) -> f_1126(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v4845, 0, v3482, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) :|: 0 = 0
f_1126(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v4845, 0, v3482, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) -> f_1131(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v4845, 0, v3482, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) :|: 0 = 0
f_1131(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v4845, 0, v3482, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) -> f_1137(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v4845, 0, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, v3482, 3, 7, 2, 4, 8) :|: 0 = 0
f_1137(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v4845, 0, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, v3482, 3, 7, 2, 4, 8) -> f_1142(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v4845, 0, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, v3482, 3, 7, 2, 4, 8) :|: v4845 != v3645
f_1142(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v4845, 0, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, v3482, 3, 7, 2, 4, 8) -> f_1147(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v4845, 0, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, v3482, 3, 7, 2, 4, 8) :|: 0 = 0
f_1147(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v4845, 0, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, v3482, 3, 7, 2, 4, 8) -> f_1152(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v4845, 0, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, v3482, 3, 7, 2, 4, 8) :|: TRUE
f_1152(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v4845, 0, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, v3482, 3, 7, 2, 4, 8) -> f_1158(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v4845, 0, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, v3482, 3, 7, 2, 4, 8) :|: TRUE
f_1158(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v4845, 0, v3481, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, v3482, 3, 7, 2, 4, 8) -> f_1163(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v4845, 0, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, v3481, v3482, 3, 7, 2, 4, 8) :|: 0 = 0
f_1163(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v4845, 0, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, v3481, v3482, 3, 7, 2, 4, 8) -> f_1168(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v4845, 0, v6059, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, v3481, v3482, 3, 7, 2, 4, 8) :|: v6059 = 1 + v3486 && 3 <= v6059
f_1168(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v4845, 0, v6059, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, v3481, v3482, 3, 7, 2, 4, 8) -> f_1173(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v4845, 0, v6059, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, v3481, v3482, 3, 7, 2, 4, 8) :|: TRUE
f_1173(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v4845, 0, v6059, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, v3481, v3482, 3, 7, 2, 4, 8) -> f_1178(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v4845, 0, v6059, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, v3481, v3482, 3, 7, 2, 4, 8) :|: TRUE
f_1178(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v4845, 0, v6059, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, v3481, v3482, 3, 7, 2, 4, 8) -> f_966(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3645, 1, v4845, 0, v6059, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) :|: TRUE
f_966(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3481, v3482, 1, v3484, 0, v3486, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) -> f_971(v3473, v3474, v3475, v3476, v3477, v3478, v3479, v3480, v3486, v3482, 1, v3481, v3484, 0, v3487, v3488, v3489, v3490, v3491, v3492, v3493, v3494, v3495, v3496, v3497, 3, 7, 2, 4, 8) :|: 0 = 0
Combined rules. Obtained 4 rulesP rules:
f_971(v3473:0, v3474:0, v3475:0, v3476:0, v3477:0, v3478:0, v3479:0, v3480:0, v3486:0, v3482:0, 1, v3481:0, v3484:0, 0, v3487:0, v3488:0, v3489:0, v3490:0, v3491:0, v3492:0, v3493:0, v3494:0, v3495:0, v3496:0, v3497:0, 3, 7, 2, 4, 8) -> f_971(v3473:0, v3474:0, v3475:0, v3476:0, v3477:0, v3478:0, v3479:0, v3480:0, 1 + v3486:0, v3645:0, 1, v3486:0, v3484:0, 0, v3487:0, v3488:0, v3489:0, v3490:0, v3491:0, v3492:0, v3493:0, v3494:0, v3495:0, v3496:0, v3497:0, 3, 7, 2, 4, 8) :|: v3489:0 > v3486:0 && v3645:0 < 0 && v3489:0 > 2 && v3486:0 > 1 && v3645:0 > v3484:0
f_971(v3473:0, v3474:0, v3475:0, v3476:0, v3477:0, v3478:0, v3479:0, v3480:0, v3486:0, v3482:0, 1, v3481:0, v3484:0, 0, v3487:0, v3488:0, v3489:0, v3490:0, v3491:0, v3492:0, v3493:0, v3494:0, v3495:0, v3496:0, v3497:0, 3, 7, 2, 4, 8) -> f_971(v3473:0, v3474:0, v3475:0, v3476:0, v3477:0, v3478:0, v3479:0, v3480:0, 1 + v3486:0, v3645:0, 1, v3486:0, v3484:0, 0, v3487:0, v3488:0, v3489:0, v3490:0, v3491:0, v3492:0, v3493:0, v3494:0, v3495:0, v3496:0, v3497:0, 3, 7, 2, 4, 8) :|: v3489:0 > v3486:0 && v3645:0 < 0 && v3489:0 > 2 && v3486:0 > 1 && v3645:0 < v3484:0
f_971(v3473:0, v3474:0, v3475:0, v3476:0, v3477:0, v3478:0, v3479:0, v3480:0, v3486:0, v3482:0, 1, v3481:0, v3484:0, 0, v3487:0, v3488:0, v3489:0, v3490:0, v3491:0, v3492:0, v3493:0, v3494:0, v3495:0, v3496:0, v3497:0, 3, 7, 2, 4, 8) -> f_971(v3473:0, v3474:0, v3475:0, v3476:0, v3477:0, v3478:0, v3479:0, v3480:0, 1 + v3486:0, v3645:0, 1, v3486:0, v3484:0, 0, v3487:0, v3488:0, v3489:0, v3490:0, v3491:0, v3492:0, v3493:0, v3494:0, v3495:0, v3496:0, v3497:0, 3, 7, 2, 4, 8) :|: v3489:0 > v3486:0 && v3645:0 > 0 && v3489:0 > 2 && v3486:0 > 1 && v3645:0 > v3484:0
f_971(v3473:0, v3474:0, v3475:0, v3476:0, v3477:0, v3478:0, v3479:0, v3480:0, v3486:0, v3482:0, 1, v3481:0, v3484:0, 0, v3487:0, v3488:0, v3489:0, v3490:0, v3491:0, v3492:0, v3493:0, v3494:0, v3495:0, v3496:0, v3497:0, 3, 7, 2, 4, 8) -> f_971(v3473:0, v3474:0, v3475:0, v3476:0, v3477:0, v3478:0, v3479:0, v3480:0, 1 + v3486:0, v3645:0, 1, v3486:0, v3484:0, 0, v3487:0, v3488:0, v3489:0, v3490:0, v3491:0, v3492:0, v3493:0, v3494:0, v3495:0, v3496:0, v3497:0, 3, 7, 2, 4, 8) :|: v3489:0 > v3486:0 && v3645:0 > 0 && v3489:0 > 2 && v3486:0 > 1 && v3645:0 < v3484:0
Filtered unneeded arguments:
   f_971(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30) -> f_971(x9, x13, x17)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_971(v3486:0, v3484:0, v3489:0) -> f_971(1 + v3486:0, v3484:0, v3489:0) :|: v3489:0 > 2 && v3486:0 > 1 && v3489:0 > v3486:0

----------------------------------------

(36)
Obligation:
Rules:
f_971(v3486:0, v3484:0, v3489:0) -> f_971(1 + v3486:0, v3484:0, v3489:0) :|: v3489:0 > 2 && v3486:0 > 1 && v3489:0 > v3486:0

----------------------------------------

(37) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(38)
Obligation:
Rules:
f_971(v3486:0:0, v3484:0:0, v3489:0:0) -> f_971(1 + v3486:0:0, v3484:0:0, v3489:0:0) :|: v3489:0:0 > 2 && v3486:0:0 > 1 && v3489:0:0 > v3486:0:0

----------------------------------------

(39) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_971(x1, x2, x3) -> f_971(x1, x3)

----------------------------------------

(40)
Obligation:
Rules:
f_971(v3486:0:0, v3489:0:0) -> f_971(1 + v3486:0:0, v3489:0:0) :|: v3489:0:0 > 2 && v3486:0:0 > 1 && v3489:0:0 > v3486:0:0

----------------------------------------

(41) PolynomialOrderProcessor (EQUIVALENT)
Found the following polynomial interpretation:
[f_971(x, x1)] = -x + x1

The following rules are decreasing:
f_971(v3486:0:0, v3489:0:0) -> f_971(1 + v3486:0:0, v3489:0:0) :|: v3489:0:0 > 2 && v3486:0:0 > 1 && v3489:0:0 > v3486:0:0
The following rules are bounded:
f_971(v3486:0:0, v3489:0:0) -> f_971(1 + v3486:0:0, v3489:0:0) :|: v3489:0:0 > 2 && v3486:0:0 > 1 && v3489:0:0 > v3486:0:0

----------------------------------------

(42)
YES

----------------------------------------

(43)
Obligation:
SCC
----------------------------------------

(44) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 31 rulesP rules:
f_757(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1705, 1, v1704, 0, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, 3, 7, 2, 4, 8) -> f_763(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, v1705, 1, v1704, 0, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, 3, 7, 2, 4, 8) :|: TRUE
f_763(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, v1705, 1, v1704, 0, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, 3, 7, 2, 4, 8) -> f_769(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, v1704, v1705, 0, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, 3, 7, 2, 4, 8) :|: 0 = 0
f_769(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, v1704, v1705, 0, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, 3, 7, 2, 4, 8) -> f_776(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, v1704, v1705, 0, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, 3, 7, 2, 4, 8) :|: v1775 != 0 && v1708 < v1711 && 3 <= v1711
f_776(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, v1704, v1705, 0, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, 3, 7, 2, 4, 8) -> f_784(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, v1704, v1705, 0, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, 3, 7, 2, 4, 8) :|: 0 = 0
f_784(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, v1704, v1705, 0, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, 3, 7, 2, 4, 8) -> f_792(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, v1704, v1705, 0, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, 3, 7, 2, 4, 8) :|: TRUE
f_792(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, v1704, v1705, 0, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, 3, 7, 2, 4, 8) -> f_799(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, v1704, v1705, 0, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, 3, 7, 2, 4, 8) :|: 0 = 0
f_799(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, v1704, v1705, 0, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, 3, 7, 2, 4, 8) -> f_806(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, v1704, v1705, 0, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, 3, 7, 2, 4, 8) :|: TRUE
f_806(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, v1704, v1705, 0, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, 3, 7, 2, 4, 8) -> f_813(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, v1705, 0, v1704, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, 3, 7, 2, 4, 8) :|: 0 = 0
f_813(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, v1705, 0, v1704, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, 3, 7, 2, 4, 8) -> f_820(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, v1705, 0, v1704, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, 3, 7, 2, 4, 8) :|: 0 = 0
f_820(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, v1705, 0, v1704, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, 3, 7, 2, 4, 8) -> f_827(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, 0, v1705, v1704, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, 3, 7, 2, 4, 8) :|: 0 = 0
f_827(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, 0, v1705, v1704, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, 3, 7, 2, 4, 8) -> f_834(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, 0, v1705, v1704, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, 3, 7, 2, 4, 8) :|: TRUE
f_834(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, 0, v1705, v1704, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, 3, 7, 2, 4, 8) -> f_841(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, 0, v1705, v1704, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, 3, 7, 2, 4, 8) :|: TRUE
f_841(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, 0, v1705, v1704, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, 3, 7, 2, 4, 8) -> f_849(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, 0, v1705, v1704, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, 3, 7, 2, 4, 8) :|: 0 = 0
f_849(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, 0, v1705, v1704, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, 3, 7, 2, 4, 8) -> f_858(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, 0, v1705, v1704, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, 3, 7, 2, 4, 8) :|: 0 = 0
f_858(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, 0, v1705, v1704, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, 3, 7, 2, 4, 8) -> f_866(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, 0, v1705, v1704, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, 3, 7, 2, 4, 8) :|: 0 = 0
f_866(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, 0, v1705, v1704, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, 3, 7, 2, 4, 8) -> f_873(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, 0, v1705, v1704, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, 3, 7, 2, 4, 8) :|: 0 = 0
f_873(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, 0, v1705, v1704, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, 3, 7, 2, 4, 8) -> f_879(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, 0, v1705, v1704, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, 3, 7, 2, 4, 8) :|: 0 = 0
f_879(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, 0, v1705, v1704, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, 3, 7, 2, 4, 8) -> f_885(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, 0, v1705, v1704, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, 3, 7, 2, 4, 8) :|: TRUE
f_885(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, 0, v1705, v1704, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, 3, 7, 2, 4, 8) -> f_891(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, 0, v1705, v1704, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, 3, 7, 2, 4, 8) :|: 0 = 0
f_891(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, 0, v1705, v1704, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, 3, 7, 2, 4, 8) -> f_897(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, 0, v1705, v1704, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, 3, 7, 2, 4, 8) :|: 0 = 0
f_897(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, 0, v1705, v1704, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, 3, 7, 2, 4, 8) -> f_903(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, 0, v1705, v1704, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, 3, 7, 2, 4, 8) :|: 0 = 0
f_903(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, 0, v1705, v1704, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, 3, 7, 2, 4, 8) -> f_910(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, 0, v1704, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, v1705, 3, 7, 2, 4, 8) :|: 0 = 0
f_910(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, 0, v1704, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, v1705, 3, 7, 2, 4, 8) -> f_917(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, 0, v1704, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, v1705, 3, 7, 2, 4, 8) :|: 0 = 0
f_917(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, 0, v1704, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, v1705, 3, 7, 2, 4, 8) -> f_925(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, 0, v1704, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, v1705, 3, 7, 2, 4, 8) :|: TRUE
f_925(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, 0, v1704, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, v1705, 3, 7, 2, 4, 8) -> f_934(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, 0, v1704, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, v1705, 3, 7, 2, 4, 8) :|: TRUE
f_934(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, 0, v1704, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, v1705, 3, 7, 2, 4, 8) -> f_942(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, 0, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, v1704, v1705, 3, 7, 2, 4, 8) :|: 0 = 0
f_942(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, 0, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, v1704, v1705, 3, 7, 2, 4, 8) -> f_950(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, 0, v3405, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, v1704, v1705, 3, 7, 2, 4, 8) :|: v3405 = 1 + v1708 && 3 <= v3405
f_950(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, 0, v3405, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, v1704, v1705, 3, 7, 2, 4, 8) -> f_958(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, 0, v3405, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, v1704, v1705, 3, 7, 2, 4, 8) :|: TRUE
f_958(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, 0, v3405, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, v1704, v1705, 3, 7, 2, 4, 8) -> f_967(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, 0, v3405, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, v1704, v1705, 3, 7, 2, 4, 8) :|: TRUE
f_967(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, 0, v3405, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, v1704, v1705, 3, 7, 2, 4, 8) -> f_751(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1775, 1, 0, v3405, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, 3, 7, 2, 4, 8) :|: TRUE
f_751(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1704, v1705, 1, 0, v1708, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, 3, 7, 2, 4, 8) -> f_757(v1696, v1697, v1698, v1699, v1700, v1701, v1702, v1703, v1708, v1705, 1, v1704, 0, v1709, v1710, v1711, v1712, v1713, v1714, v1715, v1716, v1717, v1718, v1719, 3, 7, 2, 4, 8) :|: 0 = 0
Combined rules. Obtained 2 rulesP rules:
f_757(v1696:0, v1697:0, v1698:0, v1699:0, v1700:0, v1701:0, v1702:0, v1703:0, v1708:0, v1705:0, 1, v1704:0, 0, v1709:0, v1710:0, v1711:0, v1712:0, v1713:0, v1714:0, v1715:0, v1716:0, v1717:0, v1718:0, v1719:0, 3, 7, 2, 4, 8) -> f_757(v1696:0, v1697:0, v1698:0, v1699:0, v1700:0, v1701:0, v1702:0, v1703:0, 1 + v1708:0, v1775:0, 1, v1708:0, 0, v1709:0, v1710:0, v1711:0, v1712:0, v1713:0, v1714:0, v1715:0, v1716:0, v1717:0, v1718:0, v1719:0, 3, 7, 2, 4, 8) :|: v1711:0 > v1708:0 && v1775:0 < 0 && v1708:0 > 1 && v1711:0 > 2
f_757(v1696:0, v1697:0, v1698:0, v1699:0, v1700:0, v1701:0, v1702:0, v1703:0, v1708:0, v1705:0, 1, v1704:0, 0, v1709:0, v1710:0, v1711:0, v1712:0, v1713:0, v1714:0, v1715:0, v1716:0, v1717:0, v1718:0, v1719:0, 3, 7, 2, 4, 8) -> f_757(v1696:0, v1697:0, v1698:0, v1699:0, v1700:0, v1701:0, v1702:0, v1703:0, 1 + v1708:0, v1775:0, 1, v1708:0, 0, v1709:0, v1710:0, v1711:0, v1712:0, v1713:0, v1714:0, v1715:0, v1716:0, v1717:0, v1718:0, v1719:0, 3, 7, 2, 4, 8) :|: v1711:0 > v1708:0 && v1775:0 > 0 && v1708:0 > 1 && v1711:0 > 2
Filtered unneeded arguments:
   f_757(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29) -> f_757(x9, x16)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_757(v1708:0, v1711:0) -> f_757(1 + v1708:0, v1711:0) :|: v1708:0 > 1 && v1711:0 > 2 && v1711:0 > v1708:0

----------------------------------------

(45)
Obligation:
Rules:
f_757(v1708:0, v1711:0) -> f_757(1 + v1708:0, v1711:0) :|: v1708:0 > 1 && v1711:0 > 2 && v1711:0 > v1708:0

----------------------------------------

(46) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(47)
Obligation:
Rules:
f_757(v1708:0:0, v1711:0:0) -> f_757(1 + v1708:0:0, v1711:0:0) :|: v1708:0:0 > 1 && v1711:0:0 > 2 && v1711:0:0 > v1708:0:0

----------------------------------------

(48) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_757 ] = -1*f_757_1 + f_757_2

The following rules are decreasing:
f_757(v1708:0:0, v1711:0:0) -> f_757(1 + v1708:0:0, v1711:0:0) :|: v1708:0:0 > 1 && v1711:0:0 > 2 && v1711:0:0 > v1708:0:0

The following rules are bounded:
f_757(v1708:0:0, v1711:0:0) -> f_757(1 + v1708:0:0, v1711:0:0) :|: v1708:0:0 > 1 && v1711:0:0 > 2 && v1711:0:0 > v1708:0:0


----------------------------------------

(49)
YES

----------------------------------------

(50)
Obligation:
SCC
----------------------------------------

(51) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 21 rulesP rules:
f_643(v957, v958, v959, v960, v961, v962, v963, v964, v965, 1, v970, v968, v967, v969, v971, v972, v973, v974, v975, v976, v977, v978, v979, v980, v981, 0, 3, 7, 2, 4, 8) -> f_649(v957, v958, v959, v960, v961, v962, v963, v964, v965, 1, v970, v1058, v968, v967, v969, v971, v972, v973, v974, v975, v976, v977, v978, v979, v980, v981, 0, 3, 7, 2, 4, 8) :|: TRUE
f_649(v957, v958, v959, v960, v961, v962, v963, v964, v965, 1, v970, v1058, v968, v967, v969, v971, v972, v973, v974, v975, v976, v977, v978, v979, v980, v981, 0, 3, 7, 2, 4, 8) -> f_655(v957, v958, v959, v960, v961, v962, v963, v964, v965, 1, v970, v1058, v967, v968, v969, v971, v972, v973, v974, v975, v976, v977, v978, v979, v980, v981, 0, 3, 7, 2, 4, 8) :|: 0 = 0
f_655(v957, v958, v959, v960, v961, v962, v963, v964, v965, 1, v970, v1058, v967, v968, v969, v971, v972, v973, v974, v975, v976, v977, v978, v979, v980, v981, 0, 3, 7, 2, 4, 8) -> f_661(v957, v958, v959, v960, v961, v962, v963, v964, v965, 1, v970, v1058, v967, v968, v969, v971, v972, v973, v974, v975, v976, v977, v978, v979, v980, v981, 0, 3, 7, 2, 4, 8) :|: v1058 != 0 && v970 < v974 && 3 <= v974
f_661(v957, v958, v959, v960, v961, v962, v963, v964, v965, 1, v970, v1058, v967, v968, v969, v971, v972, v973, v974, v975, v976, v977, v978, v979, v980, v981, 0, 3, 7, 2, 4, 8) -> f_669(v957, v958, v959, v960, v961, v962, v963, v964, v965, 1, v970, v1058, v967, v968, v969, v971, v972, v973, v974, v975, v976, v977, v978, v979, v980, v981, 0, 3, 7, 2, 4, 8) :|: 0 = 0
f_669(v957, v958, v959, v960, v961, v962, v963, v964, v965, 1, v970, v1058, v967, v968, v969, v971, v972, v973, v974, v975, v976, v977, v978, v979, v980, v981, 0, 3, 7, 2, 4, 8) -> f_676(v957, v958, v959, v960, v961, v962, v963, v964, v965, 1, v970, v1058, v967, v968, v969, v971, v972, v973, v974, v975, v976, v977, v978, v979, v980, v981, 0, 3, 7, 2, 4, 8) :|: TRUE
f_676(v957, v958, v959, v960, v961, v962, v963, v964, v965, 1, v970, v1058, v967, v968, v969, v971, v972, v973, v974, v975, v976, v977, v978, v979, v980, v981, 0, 3, 7, 2, 4, 8) -> f_683(v957, v958, v959, v960, v961, v962, v963, v964, v965, 1, v970, v1058, v968, v969, v967, v971, v972, v973, v974, v975, v976, v977, v978, v979, v980, v981, 0, 3, 7, 2, 4, 8) :|: 0 = 0
f_683(v957, v958, v959, v960, v961, v962, v963, v964, v965, 1, v970, v1058, v968, v969, v967, v971, v972, v973, v974, v975, v976, v977, v978, v979, v980, v981, 0, 3, 7, 2, 4, 8) -> f_690(v957, v958, v959, v960, v961, v962, v963, v964, v965, 1, v970, v1058, v968, v969, v967, v971, v972, v973, v974, v975, v976, v977, v978, v979, v980, v981, 0, 3, 7, 2, 4, 8) :|: 0 = 0
f_690(v957, v958, v959, v960, v961, v962, v963, v964, v965, 1, v970, v1058, v968, v969, v967, v971, v972, v973, v974, v975, v976, v977, v978, v979, v980, v981, 0, 3, 7, 2, 4, 8) -> f_698(v957, v958, v959, v960, v961, v962, v963, v964, v965, 1, v970, v1058, v969, v967, v971, v972, v973, v974, v975, v976, v977, v978, v979, v980, v981, v968, 0, 3, 7, 2, 4, 8) :|: 0 = 0
f_698(v957, v958, v959, v960, v961, v962, v963, v964, v965, 1, v970, v1058, v969, v967, v971, v972, v973, v974, v975, v976, v977, v978, v979, v980, v981, v968, 0, 3, 7, 2, 4, 8) -> f_702(v957, v958, v959, v960, v961, v962, v963, v964, v965, 1, v970, v1058, v969, v967, v971, v972, v973, v974, v975, v976, v977, v978, v979, v980, v981, v968, 0, 3, 7, 2, 4, 8) :|: 0 = 0
f_702(v957, v958, v959, v960, v961, v962, v963, v964, v965, 1, v970, v1058, v969, v967, v971, v972, v973, v974, v975, v976, v977, v978, v979, v980, v981, v968, 0, 3, 7, 2, 4, 8) -> f_706(v957, v958, v959, v960, v961, v962, v963, v964, v965, 1, v970, v1058, v1457, v969, v967, v971, v972, v973, v974, v975, v976, v977, v978, v979, v980, v981, v968, 0, 3, 7, 2, 4, 8) :|: TRUE
f_706(v957, v958, v959, v960, v961, v962, v963, v964, v965, 1, v970, v1058, v1457, v969, v967, v971, v972, v973, v974, v975, v976, v977, v978, v979, v980, v981, v968, 0, 3, 7, 2, 4, 8) -> f_710(v957, v958, v959, v960, v961, v962, v963, v964, v965, 1, v970, v1058, v1457, v967, v971, v972, v973, v974, v975, v976, v977, v978, v979, v980, v981, v968, 0, 3, 7, 2, 4, 8) :|: 0 = 0
f_710(v957, v958, v959, v960, v961, v962, v963, v964, v965, 1, v970, v1058, v1457, v967, v971, v972, v973, v974, v975, v976, v977, v978, v979, v980, v981, v968, 0, 3, 7, 2, 4, 8) -> f_715(v957, v958, v959, v960, v961, v962, v963, v964, v965, 1, v970, v1058, v1457, v967, v971, v972, v973, v974, v975, v976, v977, v978, v979, v980, v981, v968, 0, 3, 7, 2, 4, 8) :|: v1058 != v1457
f_715(v957, v958, v959, v960, v961, v962, v963, v964, v965, 1, v970, v1058, v1457, v967, v971, v972, v973, v974, v975, v976, v977, v978, v979, v980, v981, v968, 0, 3, 7, 2, 4, 8) -> f_721(v957, v958, v959, v960, v961, v962, v963, v964, v965, 1, v970, v1058, v1457, v967, v971, v972, v973, v974, v975, v976, v977, v978, v979, v980, v981, v968, 0, 3, 7, 2, 4, 8) :|: 0 = 0
f_721(v957, v958, v959, v960, v961, v962, v963, v964, v965, 1, v970, v1058, v1457, v967, v971, v972, v973, v974, v975, v976, v977, v978, v979, v980, v981, v968, 0, 3, 7, 2, 4, 8) -> f_727(v957, v958, v959, v960, v961, v962, v963, v964, v965, 1, v970, v1058, v1457, v967, v971, v972, v973, v974, v975, v976, v977, v978, v979, v980, v981, v968, 0, 3, 7, 2, 4, 8) :|: 0 = 0
f_727(v957, v958, v959, v960, v961, v962, v963, v964, v965, 1, v970, v1058, v1457, v967, v971, v972, v973, v974, v975, v976, v977, v978, v979, v980, v981, v968, 0, 3, 7, 2, 4, 8) -> f_733(v957, v958, v959, v960, v961, v962, v963, v964, v965, 1, v970, v1058, v1457, v967, v971, v972, v973, v974, v975, v976, v977, v978, v979, v980, v981, v968, 0, 3, 7, 2, 4, 8) :|: TRUE
f_733(v957, v958, v959, v960, v961, v962, v963, v964, v965, 1, v970, v1058, v1457, v967, v971, v972, v973, v974, v975, v976, v977, v978, v979, v980, v981, v968, 0, 3, 7, 2, 4, 8) -> f_739(v957, v958, v959, v960, v961, v962, v963, v964, v965, 1, v970, v1058, v1457, v971, v972, v973, v974, v975, v976, v977, v978, v979, v980, v981, v967, v968, 0, 3, 7, 2, 4, 8) :|: 0 = 0
f_739(v957, v958, v959, v960, v961, v962, v963, v964, v965, 1, v970, v1058, v1457, v971, v972, v973, v974, v975, v976, v977, v978, v979, v980, v981, v967, v968, 0, 3, 7, 2, 4, 8) -> f_745(v957, v958, v959, v960, v961, v962, v963, v964, v965, 1, v970, v1058, v1457, v1671, v971, v972, v973, v974, v975, v976, v977, v978, v979, v980, v981, v967, v968, 0, 3, 7, 2, 4, 8) :|: v1671 = 1 + v970 && 3 <= v1671
f_745(v957, v958, v959, v960, v961, v962, v963, v964, v965, 1, v970, v1058, v1457, v1671, v971, v972, v973, v974, v975, v976, v977, v978, v979, v980, v981, v967, v968, 0, 3, 7, 2, 4, 8) -> f_752(v957, v958, v959, v960, v961, v962, v963, v964, v965, 1, v970, v1058, v1457, v1671, v971, v972, v973, v974, v975, v976, v977, v978, v979, v980, v981, v967, v968, 0, 3, 7, 2, 4, 8) :|: TRUE
f_752(v957, v958, v959, v960, v961, v962, v963, v964, v965, 1, v970, v1058, v1457, v1671, v971, v972, v973, v974, v975, v976, v977, v978, v979, v980, v981, v967, v968, 0, 3, 7, 2, 4, 8) -> f_758(v957, v958, v959, v960, v961, v962, v963, v964, v965, 1, v970, v1058, v1457, v1671, v971, v972, v973, v974, v975, v976, v977, v978, v979, v980, v981, v967, v968, 0, 3, 7, 2, 4, 8) :|: TRUE
f_758(v957, v958, v959, v960, v961, v962, v963, v964, v965, 1, v970, v1058, v1457, v1671, v971, v972, v973, v974, v975, v976, v977, v978, v979, v980, v981, v967, v968, 0, 3, 7, 2, 4, 8) -> f_638(v957, v958, v959, v960, v961, v962, v963, v964, v965, 1, v970, v1058, v1457, v1671, v971, v972, v973, v974, v975, v976, v977, v978, v979, v980, v981, 0, 3, 7, 2, 4, 8) :|: TRUE
f_638(v957, v958, v959, v960, v961, v962, v963, v964, v965, 1, v967, v968, v969, v970, v971, v972, v973, v974, v975, v976, v977, v978, v979, v980, v981, 0, 3, 7, 2, 4, 8) -> f_643(v957, v958, v959, v960, v961, v962, v963, v964, v965, 1, v970, v968, v967, v969, v971, v972, v973, v974, v975, v976, v977, v978, v979, v980, v981, 0, 3, 7, 2, 4, 8) :|: 0 = 0
Combined rules. Obtained 4 rulesP rules:
f_643(v957:0, v958:0, v959:0, v960:0, v961:0, v962:0, v963:0, v964:0, v965:0, 1, v970:0, v968:0, v967:0, v969:0, v971:0, v972:0, v973:0, v974:0, v975:0, v976:0, v977:0, v978:0, v979:0, v980:0, v981:0, 0, 3, 7, 2, 4, 8) -> f_643(v957:0, v958:0, v959:0, v960:0, v961:0, v962:0, v963:0, v964:0, v965:0, 1, 1 + v970:0, v1058:0, v970:0, v1457:0, v971:0, v972:0, v973:0, v974:0, v975:0, v976:0, v977:0, v978:0, v979:0, v980:0, v981:0, 0, 3, 7, 2, 4, 8) :|: v974:0 > v970:0 && v1058:0 < 0 && v974:0 > 2 && v970:0 > 1 && v1457:0 > v1058:0
f_643(v957:0, v958:0, v959:0, v960:0, v961:0, v962:0, v963:0, v964:0, v965:0, 1, v970:0, v968:0, v967:0, v969:0, v971:0, v972:0, v973:0, v974:0, v975:0, v976:0, v977:0, v978:0, v979:0, v980:0, v981:0, 0, 3, 7, 2, 4, 8) -> f_643(v957:0, v958:0, v959:0, v960:0, v961:0, v962:0, v963:0, v964:0, v965:0, 1, 1 + v970:0, v1058:0, v970:0, v1457:0, v971:0, v972:0, v973:0, v974:0, v975:0, v976:0, v977:0, v978:0, v979:0, v980:0, v981:0, 0, 3, 7, 2, 4, 8) :|: v974:0 > v970:0 && v1058:0 < 0 && v974:0 > 2 && v970:0 > 1 && v1457:0 < v1058:0
f_643(v957:0, v958:0, v959:0, v960:0, v961:0, v962:0, v963:0, v964:0, v965:0, 1, v970:0, v968:0, v967:0, v969:0, v971:0, v972:0, v973:0, v974:0, v975:0, v976:0, v977:0, v978:0, v979:0, v980:0, v981:0, 0, 3, 7, 2, 4, 8) -> f_643(v957:0, v958:0, v959:0, v960:0, v961:0, v962:0, v963:0, v964:0, v965:0, 1, 1 + v970:0, v1058:0, v970:0, v1457:0, v971:0, v972:0, v973:0, v974:0, v975:0, v976:0, v977:0, v978:0, v979:0, v980:0, v981:0, 0, 3, 7, 2, 4, 8) :|: v974:0 > v970:0 && v1058:0 > 0 && v974:0 > 2 && v970:0 > 1 && v1457:0 > v1058:0
f_643(v957:0, v958:0, v959:0, v960:0, v961:0, v962:0, v963:0, v964:0, v965:0, 1, v970:0, v968:0, v967:0, v969:0, v971:0, v972:0, v973:0, v974:0, v975:0, v976:0, v977:0, v978:0, v979:0, v980:0, v981:0, 0, 3, 7, 2, 4, 8) -> f_643(v957:0, v958:0, v959:0, v960:0, v961:0, v962:0, v963:0, v964:0, v965:0, 1, 1 + v970:0, v1058:0, v970:0, v1457:0, v971:0, v972:0, v973:0, v974:0, v975:0, v976:0, v977:0, v978:0, v979:0, v980:0, v981:0, 0, 3, 7, 2, 4, 8) :|: v974:0 > v970:0 && v1058:0 > 0 && v974:0 > 2 && v970:0 > 1 && v1457:0 < v1058:0
Filtered unneeded arguments:
   f_643(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31) -> f_643(x11, x18)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_643(v970:0, v974:0) -> f_643(1 + v970:0, v974:0) :|: v974:0 > 2 && v970:0 > 1 && v974:0 > v970:0

----------------------------------------

(52)
Obligation:
Rules:
f_643(v970:0, v974:0) -> f_643(1 + v970:0, v974:0) :|: v974:0 > 2 && v970:0 > 1 && v974:0 > v970:0

----------------------------------------

(53) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(54)
Obligation:
Rules:
f_643(v970:0:0, v974:0:0) -> f_643(1 + v970:0:0, v974:0:0) :|: v974:0:0 > 2 && v970:0:0 > 1 && v974:0:0 > v970:0:0

----------------------------------------

(55) RankingReductionPairProof (EQUIVALENT)
Interpretation:
[ f_643 ] = f_643_2 + -1*f_643_1

The following rules are decreasing:
f_643(v970:0:0, v974:0:0) -> f_643(1 + v970:0:0, v974:0:0) :|: v974:0:0 > 2 && v970:0:0 > 1 && v974:0:0 > v970:0:0

The following rules are bounded:
f_643(v970:0:0, v974:0:0) -> f_643(1 + v970:0:0, v974:0:0) :|: v974:0:0 > 2 && v970:0:0 > 1 && v974:0:0 > v970:0:0


----------------------------------------

(56)
YES
Graph finished, checking  consistency
Graph finished, checked consistency, took 0.001s
