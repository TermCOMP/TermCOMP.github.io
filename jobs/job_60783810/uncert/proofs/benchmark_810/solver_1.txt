MAYBE
proof of /hpcwork/ff862203/termcomp25/benchmarks/Mylp6.c
# AProVE Commit ID: 48c83ccb80d5f8312cb92f4aa1b51dc35e247e65 nils 20241118 unpublished


Termination of the given C Problem could not be shown:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 18 ms]
(2) LLVM problem
(3) LLVMToTerminationGraphProof [EQUIVALENT, 305 ms]
(4) LLVM Symbolic Execution Graph
(5) SymbolicExecutionGraphToSCCProof [SOUND, 0 ms]
(6) LLVM Symbolic Execution SCC
    (7) SCC2IRS [SOUND, 59 ms]
    (8) IntTRS
        (9) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (10) IntTRS
        (11) IntTRSPeriodicNontermProof [COMPLETE, 5 ms]
        (12) NO
    (13) SCC2IRS [SOUND, 0 ms]
    (14) IntTRS
        (15) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (16) IntTRS
        (17) IntTRSPeriodicNontermProof [COMPLETE, 5 ms]
        (18) NO
(19) SEGraph to IRS [SOUND, 67 ms]
(20) IntTRS
    (21) IRSToKoat [EQUIVALENT, 0 ms]
    (22) Koat Problem
    (23) KoAT2 [EQUIVALENT, 136 ms]
    (24) MAYBE
(25) SEGraph to IRS [SOUND, 53 ms]
(26) IntTRS
    (27) IRSNoOverapproximation [EQUIVALENT, 0 ms]
    (28) MAYBE


----------------------------------------

(0)
Obligation:
c file /hpcwork/ff862203/termcomp25/benchmarks/Mylp6.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /hpcwork/ff862203/termcomp25/benchmarks/Mylp6.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-pc-linux-gnu"

Type definitions:

Global variables:

Function declarations and definitions:

*BasicFunctionTypename: "llvm.dbg.declare" returnParam: BasicVoidType parameters: (BasicMetadataType, BasicMetadataType, BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_nondet_int" returnParam: i32 parameters: () variableLength: true visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 7
	0:
		%1 = alloca i32, align 4
		%2 = alloca i32, align 4
		%3 = alloca [10 x i32], align 16
		store 0, %1
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %2)
		%4 = call i32 (...)* @__VERIFIER_nondet_int()
		store %4, %2
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*[10 x i32] %3)
		br %5
	5:
		%6 = load %2
		%7 = icmp sle 0 %6
		br %7, %8, %17
	8:
		%9 = load %2
		%10 = icmp slt %9 10
		br %10, %11, %17
	11:
		%12 = load %2
		%13 = sext i32 %12 to i64
		%14 = getelementptr %3, 0, %13
		%15 = load %14
		%16 = icmp sge %15 0
		br %17
	17:
		%18 = phi [0, %8], [0, %5], [%16, %11]
		br %18, %19, %24
	19:
		%20 = call i32 (...)* @__VERIFIER_nondet_int()
		store %20, %2
		%21 = load %2
		%22 = sext i32 %21 to i64
		%23 = getelementptr %3, 0, %22
		store 0, %23
		br %5
	24:
		ret 0


Analyze Termination of all function calls matching the pattern:
main()
----------------------------------------

(3) LLVMToTerminationGraphProof (EQUIVALENT)
Constructed symbolic execution graph for LLVM program.
----------------------------------------

(4)
Obligation:
Symbolic Execution Graph
----------------------------------------

(5) SymbolicExecutionGraphToSCCProof (SOUND)
Splitted symbolic execution graph to 1 SCC.
----------------------------------------

(6)
Obligation:
SCC
----------------------------------------

(7) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 24 rulesP rules:
f_178(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_179(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: 0 <= v200
f_179(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_181(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: 0 = 0
f_181(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_183(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: TRUE
f_183(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_185(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: 0 = 0
f_185(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_187(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: v200 < 10
f_187(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_189(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: 0 = 0
f_189(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_191(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: TRUE
f_191(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_193(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: 0 = 0
f_193(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_195(v186, v187, v188, v189, v200, 1, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: 0 = 0
f_195(v186, v187, v188, v189, v200, 1, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_196(v186, v187, v188, v189, v200, 1, v246, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: v246 = v188 + 4 * v200 && 1 <= v246
f_196(v186, v187, v188, v189, v200, 1, v246, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_197(v186, v187, v188, v189, v200, 1, v246, v247, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: TRUE
f_197(v186, v187, v188, v189, v200, 1, v246, v247, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_198(v186, v187, v188, v189, v200, 1, v246, v247, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: 0 <= v247
f_198(v186, v187, v188, v189, v200, 1, v246, v247, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_200(v186, v187, v188, v189, v200, 1, v246, v247, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: 0 = 0
f_200(v186, v187, v188, v189, v200, 1, v246, v247, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_202(v186, v187, v188, v189, v200, 1, v246, v247, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: 0 = 0
f_202(v186, v187, v188, v189, v200, 1, v246, v247, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_204(v186, v187, v188, v189, v200, 1, v246, v247, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: TRUE
f_204(v186, v187, v188, v189, v200, 1, v246, v247, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_206(v186, v187, v188, v189, v200, 1, v246, v247, v314, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: TRUE
f_206(v186, v187, v188, v189, v200, 1, v246, v247, v314, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_207(v186, v187, v188, v189, v200, 1, v246, v247, v314, v194, v195, v196, v197, v198, 3, 39, 4, 0, 9, 40) :|: TRUE
f_207(v186, v187, v188, v189, v200, 1, v246, v247, v314, v194, v195, v196, v197, v198, 3, 39, 4, 0, 9, 40) -> f_208(v186, v187, v188, v189, v200, 1, v246, v247, v314, v194, v195, v196, v197, v198, 3, 39, 4, 0, 9, 40) :|: 0 = 0
f_208(v186, v187, v188, v189, v200, 1, v246, v247, v314, v194, v195, v196, v197, v198, 3, 39, 4, 0, 9, 40) -> f_209(v186, v187, v188, v189, v200, 1, v246, v247, v314, v195, v196, v197, v198, 3, 39, 4, 0, 9, 40) :|: 0 = 0
f_209(v186, v187, v188, v189, v200, 1, v246, v247, v314, v195, v196, v197, v198, 3, 39, 4, 0, 9, 40) -> f_210(v186, v187, v188, v189, v200, 1, v246, v247, v314, v316, v196, v197, v198, 3, 39, 4, 0, 9, 40) :|: v316 = v188 + 4 * v314
f_210(v186, v187, v188, v189, v200, 1, v246, v247, v314, v316, v196, v197, v198, 3, 39, 4, 0, 9, 40) -> f_211(v186, v187, v188, v189, v200, 1, v246, v247, v314, v316, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: TRUE
f_211(v186, v187, v188, v189, v200, 1, v246, v247, v314, v316, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_212(v186, v187, v188, v189, v200, 1, v246, v247, v314, v316, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: TRUE
f_212(v186, v187, v188, v189, v200, 1, v246, v247, v314, v316, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_177(v186, v187, v188, v189, v200, 1, v246, v247, v314, v316, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: TRUE
f_177(v186, v187, v188, v189, v190, 1, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_178(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: TRUE
Combined rules. Obtained 1 rulesP rules:
f_178(v186:0, v187:0, v188:0, v189:0, v200:0, 1, v190:0, v192:0, v193:0, v194:0, v195:0, v196:0, v197:0, v198:0, 0, 3, 39, 4, 9, 40) -> f_178(v186:0, v187:0, v188:0, v189:0, v200:1, 1, v200:0, v188:0 + 4 * v200:0, v247:0, v314:0, v188:0 + 4 * v314:0, v196:0, v197:0, v198:0, 0, 3, 39, 4, 9, 40) :|: v200:0 > -1 && v200:0 < 10 && v247:0 > -1 && v188:0 + 4 * v200:0 > 0
Filtered unneeded arguments:
   f_178(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20) -> f_178(x3, x5)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_178(v188:0, v200:0) -> f_178(v188:0, v200:1) :|: v200:0 < 10 && v188:0 + 4 * v200:0 > 0 && v200:0 > -1

----------------------------------------

(8)
Obligation:
Rules:
f_178(v188:0, v200:0) -> f_178(v188:0, v200:1) :|: v200:0 < 10 && v188:0 + 4 * v200:0 > 0 && v200:0 > -1

----------------------------------------

(9) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(10)
Obligation:
Rules:
f_178(v188:0:0, v200:0:0) -> f_178(v188:0:0, v200:1:0) :|: v200:0:0 < 10 && v188:0:0 + 4 * v200:0:0 > 0 && v200:0:0 > -1

----------------------------------------

(11) IntTRSPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, v188:0:0, v200:0:0) -> f(1, v188:0:0, v200:1:0) :|: pc = 1 && (v200:0:0 < 10 && v188:0:0 + 4 * v200:0:0 > 0 && v200:0:0 > -1)
Witness term starting non-terminating reduction: f(1, -16, 5)
----------------------------------------

(12)
NO

----------------------------------------

(13) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 24 rulesP rules:
f_178(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_179(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: 0 <= v200
f_179(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_181(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: 0 = 0
f_181(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_183(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: TRUE
f_183(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_185(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: 0 = 0
f_185(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_187(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: v200 < 10
f_187(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_189(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: 0 = 0
f_189(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_191(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: TRUE
f_191(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_193(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: 0 = 0
f_193(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_195(v186, v187, v188, v189, v200, 1, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: 0 = 0
f_195(v186, v187, v188, v189, v200, 1, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_196(v186, v187, v188, v189, v200, 1, v246, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: v246 = v188 + 4 * v200 && 1 <= v246
f_196(v186, v187, v188, v189, v200, 1, v246, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_197(v186, v187, v188, v189, v200, 1, v246, v247, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: TRUE
f_197(v186, v187, v188, v189, v200, 1, v246, v247, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_198(v186, v187, v188, v189, v200, 1, v246, v247, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: 0 <= v247
f_198(v186, v187, v188, v189, v200, 1, v246, v247, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_200(v186, v187, v188, v189, v200, 1, v246, v247, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: 0 = 0
f_200(v186, v187, v188, v189, v200, 1, v246, v247, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_202(v186, v187, v188, v189, v200, 1, v246, v247, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: 0 = 0
f_202(v186, v187, v188, v189, v200, 1, v246, v247, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_204(v186, v187, v188, v189, v200, 1, v246, v247, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: TRUE
f_204(v186, v187, v188, v189, v200, 1, v246, v247, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_206(v186, v187, v188, v189, v200, 1, v246, v247, v314, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: TRUE
f_206(v186, v187, v188, v189, v200, 1, v246, v247, v314, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_207(v186, v187, v188, v189, v200, 1, v246, v247, v314, v194, v195, v196, v197, v198, 3, 39, 4, 0, 9, 40) :|: TRUE
f_207(v186, v187, v188, v189, v200, 1, v246, v247, v314, v194, v195, v196, v197, v198, 3, 39, 4, 0, 9, 40) -> f_208(v186, v187, v188, v189, v200, 1, v246, v247, v314, v194, v195, v196, v197, v198, 3, 39, 4, 0, 9, 40) :|: 0 = 0
f_208(v186, v187, v188, v189, v200, 1, v246, v247, v314, v194, v195, v196, v197, v198, 3, 39, 4, 0, 9, 40) -> f_209(v186, v187, v188, v189, v200, 1, v246, v247, v314, v195, v196, v197, v198, 3, 39, 4, 0, 9, 40) :|: 0 = 0
f_209(v186, v187, v188, v189, v200, 1, v246, v247, v314, v195, v196, v197, v198, 3, 39, 4, 0, 9, 40) -> f_210(v186, v187, v188, v189, v200, 1, v246, v247, v314, v316, v196, v197, v198, 3, 39, 4, 0, 9, 40) :|: v316 = v188 + 4 * v314
f_210(v186, v187, v188, v189, v200, 1, v246, v247, v314, v316, v196, v197, v198, 3, 39, 4, 0, 9, 40) -> f_211(v186, v187, v188, v189, v200, 1, v246, v247, v314, v316, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: TRUE
f_211(v186, v187, v188, v189, v200, 1, v246, v247, v314, v316, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_212(v186, v187, v188, v189, v200, 1, v246, v247, v314, v316, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: TRUE
f_212(v186, v187, v188, v189, v200, 1, v246, v247, v314, v316, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_177(v186, v187, v188, v189, v200, 1, v246, v247, v314, v316, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: 1 <= v186 && 1 <= v187 && 1 <= v188 && 0 <= v189 && v189 <= 9 && 0 <= v200 && v200 <= 9 && 1 <= v246 && 0 <= v247 && 0 <= v316 && 4 <= v196 && 4 <= v197 && 40 <= v198 && v186 <= v196 && v187 <= v197 && v188 <= v198
f_177(v186, v187, v188, v189, v190, 1, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_178(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: TRUE
Combined rules. Obtained 1 rulesP rules:
f_178(v186:0, v187:0, v188:0, v189:0, v200:0, 1, v190:0, v192:0, v193:0, v194:0, v195:0, v196:0, v197:0, v198:0, 0, 3, 39, 4, 9, 40) -> f_178(v186:0, v187:0, v188:0, v189:0, v200:1, 1, v200:0, v188:0 + 4 * v200:0, v247:0, v314:0, v188:0 + 4 * v314:0, v196:0, v197:0, v198:0, 0, 3, 39, 4, 9, 40) :|: v200:0 > -1 && v200:0 < 10 && v187:0 > 0 && v186:0 > 0 && v188:0 > 0 && v188:0 + 4 * v200:0 > 0 && v189:0 > -1 && v189:0 < 10 && v247:0 > -1 && v188:0 + 4 * v314:0 > -1 && v196:0 > 3 && v197:0 > 3 && v198:0 > 39 && v196:0 >= v186:0 && v198:0 >= v188:0 && v197:0 >= v187:0
Filtered unneeded arguments:
   f_178(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20) -> f_178(x1, x2, x3, x4, x5, x12, x13, x14)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_178(v186:0, v187:0, v188:0, v189:0, v200:0, v196:0, v197:0, v198:0) -> f_178(v186:0, v187:0, v188:0, v189:0, v200:1, v196:0, v197:0, v198:0) :|: v200:0 < 10 && v200:0 > -1 && v187:0 > 0 && v186:0 > 0 && v188:0 > 0 && v188:0 + 4 * v200:0 > 0 && v189:0 > -1 && v189:0 < 10 && v196:0 > 3 && v197:0 > 3 && v198:0 > 39 && v196:0 >= v186:0 && v197:0 >= v187:0 && v198:0 >= v188:0

----------------------------------------

(14)
Obligation:
Rules:
f_178(v186:0, v187:0, v188:0, v189:0, v200:0, v196:0, v197:0, v198:0) -> f_178(v186:0, v187:0, v188:0, v189:0, v200:1, v196:0, v197:0, v198:0) :|: v200:0 < 10 && v200:0 > -1 && v187:0 > 0 && v186:0 > 0 && v188:0 > 0 && v188:0 + 4 * v200:0 > 0 && v189:0 > -1 && v189:0 < 10 && v196:0 > 3 && v197:0 > 3 && v198:0 > 39 && v196:0 >= v186:0 && v197:0 >= v187:0 && v198:0 >= v188:0

----------------------------------------

(15) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(16)
Obligation:
Rules:
f_178(v186:0:0, v187:0:0, v188:0:0, v189:0:0, v200:0:0, v196:0:0, v197:0:0, v198:0:0) -> f_178(v186:0:0, v187:0:0, v188:0:0, v189:0:0, v200:1:0, v196:0:0, v197:0:0, v198:0:0) :|: v197:0:0 >= v187:0:0 && v198:0:0 >= v188:0:0 && v196:0:0 >= v186:0:0 && v198:0:0 > 39 && v197:0:0 > 3 && v196:0:0 > 3 && v189:0:0 < 10 && v189:0:0 > -1 && v188:0:0 + 4 * v200:0:0 > 0 && v188:0:0 > 0 && v186:0:0 > 0 && v187:0:0 > 0 && v200:0:0 > -1 && v200:0:0 < 10

----------------------------------------

(17) IntTRSPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, v186:0:0, v187:0:0, v188:0:0, v189:0:0, v200:0:0, v196:0:0, v197:0:0, v198:0:0) -> f(1, v186:0:0, v187:0:0, v188:0:0, v189:0:0, v200:1:0, v196:0:0, v197:0:0, v198:0:0) :|: pc = 1 && (v197:0:0 >= v187:0:0 && v198:0:0 >= v188:0:0 && v196:0:0 >= v186:0:0 && v198:0:0 > 39 && v197:0:0 > 3 && v196:0:0 > 3 && v189:0:0 < 10 && v189:0:0 > -1 && v188:0:0 + 4 * v200:0:0 > 0 && v188:0:0 > 0 && v186:0:0 > 0 && v187:0:0 > 0 && v200:0:0 > -1 && v200:0:0 < 10)
Witness term starting non-terminating reduction: f(1, 1, 64, 1, 0, 0, 68, 124, 110)
----------------------------------------

(18)
NO

----------------------------------------

(19) SEGraph to IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 81 rulesP rules:
f_97 -> f_98(v1, v2, 3, 1, 4) :|: 1 <= v1 && v2 = 3 + v1 && 4 <= v2
f_98(v1, v2, 3, 1, 4) -> f_99(v1, v3, v2, v4, 3, 1, 4) :|: 1 <= v3 && v4 = 3 + v3 && 4 <= v4
f_99(v1, v3, v2, v4, 3, 1, 4) -> f_100(v1, v3, v5, v2, v4, v6, 3, 39, 1, 4, 40) :|: 1 <= v5 && v6 = 39 + v5 && 40 <= v6
f_100(v1, v3, v5, v2, v4, v6, 3, 39, 1, 4, 40) -> f_101(v1, v3, v5, v2, v4, v6, 0, 3, 39, 1, 4, 40) :|: TRUE
f_101(v1, v3, v5, v2, v4, v6, 0, 3, 39, 1, 4, 40) -> f_102(v1, v3, v5, v2, v4, v6, 0, 3, 39, 1, 4, 40) :|: TRUE
f_102(v1, v3, v5, v2, v4, v6, 0, 3, 39, 1, 4, 40) -> f_103(v1, v3, v5, v7, v2, v4, v6, 0, 3, 39, 1, 4, 40) :|: TRUE
f_103(v1, v3, v5, v7, v2, v4, v6, 0, 3, 39, 1, 4, 40) -> f_104(v1, v3, v5, v7, v2, v4, v6, 0, 3, 39, 1, 4, 40) :|: TRUE
f_104(v1, v3, v5, v7, v2, v4, v6, 0, 3, 39, 1, 4, 40) -> f_105(v1, v3, v5, v7, v2, v4, v6, 0, 3, 39, 1, 4, 40) :|: TRUE
f_105(v1, v3, v5, v7, v2, v4, v6, 0, 3, 39, 1, 4, 40) -> f_106(v1, v3, v5, v7, v2, v4, v6, 0, 3, 39, 1, 4, 40) :|: TRUE
f_106(v1, v3, v5, v7, v2, v4, v6, 0, 3, 39, 1, 4, 40) -> f_107(v1, v3, v5, v7, v2, v4, v6, 0, 3, 39, 1, 4, 40) :|: 0 = 0
f_107(v1, v3, v5, v7, v2, v4, v6, 0, 3, 39, 1, 4, 40) -> f_108(v1, v3, v5, v7, v2, v4, v6, 0, 3, 39, 1, 4, 40) :|: 0 <= v7
f_107(v1, v3, v5, v7, v2, v4, v6, 0, 3, 39, 1, 4, 40) -> f_109(v1, v3, v5, v7, v2, v4, v6, 0, 3, 39, 1, 4, 40) :|: v7 < 0
f_108(v1, v3, v5, v7, v2, v4, v6, 0, 3, 39, 1, 4, 40) -> f_110(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 39, 4, 40) :|: 0 = 0
f_109(v1, v3, v5, v7, v2, v4, v6, 0, 3, 39, 1, 4, 40) -> f_111(v1, v3, v5, v7, 0, v2, v4, v6, 3, 39, 1, 4, 40) :|: 0 = 0
f_110(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 39, 4, 40) -> f_112(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 39, 4, 40) :|: TRUE
f_111(v1, v3, v5, v7, 0, v2, v4, v6, 3, 39, 1, 4, 40) -> f_113(v1, v3, v5, v7, 0, v2, v4, v6, 3, 39, 1, 4, 40) :|: 0 = 0
f_112(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 39, 4, 40) -> f_114(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 39, 4, 40) :|: 0 = 0
f_113(v1, v3, v5, v7, 0, v2, v4, v6, 3, 39, 1, 4, 40) -> f_115(v1, v3, v5, v7, 0, v2, v4, v6, 3, 39, 1, 4, 40) :|: TRUE
f_114(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 39, 4, 40) -> f_116(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 39, 4, 40, 9) :|: v7 < 10
f_114(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 39, 4, 40) -> f_117(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 39, 4, 40, 10) :|: 10 <= v7
f_116(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 39, 4, 40, 9) -> f_118(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 39, 4, 40, 9) :|: 0 = 0
f_117(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 39, 4, 40, 10) -> f_119(v1, v3, v5, v7, 1, 0, v2, v4, v6, 3, 39, 4, 40, 10) :|: 0 = 0
f_118(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 39, 4, 40, 9) -> f_120(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 39, 4, 40, 9) :|: TRUE
f_119(v1, v3, v5, v7, 1, 0, v2, v4, v6, 3, 39, 4, 40, 10) -> f_121(v1, v3, v5, v7, 1, 0, v2, v4, v6, 3, 39, 4, 40, 10) :|: 0 = 0
f_120(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 39, 4, 40, 9) -> f_122(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 39, 4, 40, 9) :|: 0 = 0
f_121(v1, v3, v5, v7, 1, 0, v2, v4, v6, 3, 39, 4, 40, 10) -> f_123(v1, v3, v5, v7, 1, 0, v2, v4, v6, 3, 39, 4, 40, 10) :|: TRUE
f_122(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 39, 4, 40, 9) -> f_124(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 39, 4, 40, 9) :|: 0 = 0
f_124(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 39, 4, 40, 9) -> f_125(v1, v3, v5, v7, 1, v9, v2, v4, v6, 0, 3, 39, 4, 40, 9) :|: v9 = v5 + 4 * v7 && 1 <= v9
f_125(v1, v3, v5, v7, 1, v9, v2, v4, v6, 0, 3, 39, 4, 40, 9) -> f_126(v1, v3, v5, v7, 1, v9, v10, v2, v4, v6, 0, 3, 39, 4, 40, 9) :|: TRUE
f_126(v1, v3, v5, v7, 1, v9, v10, v2, v4, v6, 0, 3, 39, 4, 40, 9) -> f_127(v1, v3, v5, v7, 1, v9, v10, v2, v4, v6, 0, 3, 39, 4, 40, 9) :|: 0 <= v10
f_126(v1, v3, v5, v7, 1, v9, v10, v2, v4, v6, 0, 3, 39, 4, 40, 9) -> f_128(v1, v3, v5, v7, 1, v9, v10, v2, v4, v6, 0, 3, 39, 4, 40, 9) :|: v10 < 0
f_127(v1, v3, v5, v7, 1, v9, v10, v2, v4, v6, 0, 3, 39, 4, 40, 9) -> f_129(v1, v3, v5, v7, 1, v9, v10, v2, v4, v6, 0, 3, 39, 4, 40, 9) :|: 0 = 0
f_128(v1, v3, v5, v7, 1, v9, v10, v2, v4, v6, 0, 3, 39, 4, 40, 9) -> f_130(v1, v3, v5, v7, 1, v9, v10, 0, v2, v4, v6, 3, 39, 4, 40, 9) :|: 0 = 0
f_129(v1, v3, v5, v7, 1, v9, v10, v2, v4, v6, 0, 3, 39, 4, 40, 9) -> f_131(v1, v3, v5, v7, 1, v9, v10, v2, v4, v6, 0, 3, 39, 4, 40, 9) :|: 0 = 0
f_130(v1, v3, v5, v7, 1, v9, v10, 0, v2, v4, v6, 3, 39, 4, 40, 9) -> f_132(v1, v3, v5, v7, 1, v9, v10, 0, v2, v4, v6, 3, 39, 4, 40, 9) :|: 0 = 0
f_131(v1, v3, v5, v7, 1, v9, v10, v2, v4, v6, 0, 3, 39, 4, 40, 9) -> f_133(v1, v3, v5, v7, 1, v9, v10, v2, v4, v6, 0, 3, 39, 4, 40, 9) :|: TRUE
f_132(v1, v3, v5, v7, 1, v9, v10, 0, v2, v4, v6, 3, 39, 4, 40, 9) -> f_134(v1, v3, v5, v7, 1, v9, v10, 0, v2, v4, v6, 3, 39, 4, 40, 9) :|: TRUE
f_133(v1, v3, v5, v7, 1, v9, v10, v2, v4, v6, 0, 3, 39, 4, 40, 9) -> f_135(v1, v3, v5, v7, 1, v9, v10, v27, v2, v4, v6, 0, 3, 39, 4, 40, 9) :|: TRUE
f_135(v1, v3, v5, v7, 1, v9, v10, v27, v2, v4, v6, 0, 3, 39, 4, 40, 9) -> f_136(v1, v3, v5, v7, 1, v9, v10, v27, v2, v4, v6, 0, 3, 39, 4, 40, 9) :|: TRUE
f_136(v1, v3, v5, v7, 1, v9, v10, v27, v2, v4, v6, 0, 3, 39, 4, 40, 9) -> f_137(v1, v3, v5, v7, 1, v9, v10, v27, v2, v4, v6, 0, 3, 39, 4, 40, 9) :|: 0 = 0
f_137(v1, v3, v5, v7, 1, v9, v10, v27, v2, v4, v6, 0, 3, 39, 4, 40, 9) -> f_138(v1, v3, v5, v7, 1, v9, v10, v27, v2, v4, v6, 0, 3, 39, 4, 40, 9) :|: 0 = 0
f_138(v1, v3, v5, v7, 1, v9, v10, v27, v2, v4, v6, 0, 3, 39, 4, 40, 9) -> f_139(v1, v3, v5, v7, 1, v9, v10, v27, v29, v2, v4, v6, 0, 3, 39, 4, 40, 9) :|: v29 = v5 + 4 * v27
f_139(v1, v3, v5, v7, 1, v9, v10, v27, v29, v2, v4, v6, 0, 3, 39, 4, 40, 9) -> f_140(v1, v3, v5, v7, 1, v9, v10, v27, v29, v2, v4, v6, 0, 3, 39, 4, 40, 9) :|: TRUE
f_140(v1, v3, v5, v7, 1, v9, v10, v27, v29, v2, v4, v6, 0, 3, 39, 4, 40, 9) -> f_141(v1, v3, v5, v7, 1, v9, v10, v27, v29, v2, v4, v6, 0, 3, 39, 4, 40, 9) :|: TRUE
f_141(v1, v3, v5, v7, 1, v9, v10, v27, v29, v2, v4, v6, 0, 3, 39, 4, 40, 9) -> f_177(v1, v3, v5, v7, v7, 1, v9, v10, v27, v29, v2, v4, v6, 0, 3, 39, 4, 9, 40) :|: TRUE
f_177(v186, v187, v188, v189, v190, 1, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_178(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: TRUE
f_178(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_179(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: 0 <= v200
f_178(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_180(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: v200 < 0
f_179(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_181(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: 0 = 0
f_180(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_182(v186, v187, v188, v189, v200, 0, v190, 1, v192, v193, v194, v195, v196, v197, v198, 3, 39, 4, 9, 40) :|: 0 = 0
f_181(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_183(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: TRUE
f_182(v186, v187, v188, v189, v200, 0, v190, 1, v192, v193, v194, v195, v196, v197, v198, 3, 39, 4, 9, 40) -> f_184(v186, v187, v188, v189, v200, 0, v190, 1, v192, v193, v194, v195, v196, v197, v198, 3, 39, 4, 9, 40) :|: 0 = 0
f_183(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_185(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: 0 = 0
f_184(v186, v187, v188, v189, v200, 0, v190, 1, v192, v193, v194, v195, v196, v197, v198, 3, 39, 4, 9, 40) -> f_186(v186, v187, v188, v189, v200, 0, v190, 1, v192, v193, v194, v195, v196, v197, v198, 3, 39, 4, 9, 40) :|: TRUE
f_185(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_187(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: v200 < 10
f_185(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_188(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40, 10) :|: 10 <= v200
f_187(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_189(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: 0 = 0
f_188(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40, 10) -> f_190(v186, v187, v188, v189, v200, 1, 0, v190, v192, v193, v194, v195, v196, v197, v198, 3, 39, 4, 9, 40, 10) :|: 0 = 0
f_189(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_191(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: TRUE
f_190(v186, v187, v188, v189, v200, 1, 0, v190, v192, v193, v194, v195, v196, v197, v198, 3, 39, 4, 9, 40, 10) -> f_192(v186, v187, v188, v189, v200, 1, 0, v190, v192, v193, v194, v195, v196, v197, v198, 3, 39, 4, 9, 40, 10) :|: 0 = 0
f_191(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_193(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: 0 = 0
f_192(v186, v187, v188, v189, v200, 1, 0, v190, v192, v193, v194, v195, v196, v197, v198, 3, 39, 4, 9, 40, 10) -> f_194(v186, v187, v188, v189, v200, 1, 0, v190, v192, v193, v194, v195, v196, v197, v198, 3, 39, 4, 9, 40, 10) :|: TRUE
f_193(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_195(v186, v187, v188, v189, v200, 1, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: 0 = 0
f_195(v186, v187, v188, v189, v200, 1, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_196(v186, v187, v188, v189, v200, 1, v246, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: v246 = v188 + 4 * v200 && 1 <= v246
f_196(v186, v187, v188, v189, v200, 1, v246, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_197(v186, v187, v188, v189, v200, 1, v246, v247, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: TRUE
f_197(v186, v187, v188, v189, v200, 1, v246, v247, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_198(v186, v187, v188, v189, v200, 1, v246, v247, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: 0 <= v247
f_197(v186, v187, v188, v189, v200, 1, v246, v247, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_199(v186, v187, v188, v189, v200, 1, v246, v247, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: v247 < 0
f_198(v186, v187, v188, v189, v200, 1, v246, v247, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_200(v186, v187, v188, v189, v200, 1, v246, v247, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: 0 = 0
f_199(v186, v187, v188, v189, v200, 1, v246, v247, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_201(v186, v187, v188, v189, v200, 1, v246, v247, 0, v194, v195, v196, v197, v198, 3, 39, 4, 9, 40) :|: 0 = 0
f_200(v186, v187, v188, v189, v200, 1, v246, v247, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_202(v186, v187, v188, v189, v200, 1, v246, v247, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: 0 = 0
f_201(v186, v187, v188, v189, v200, 1, v246, v247, 0, v194, v195, v196, v197, v198, 3, 39, 4, 9, 40) -> f_203(v186, v187, v188, v189, v200, 1, v246, v247, 0, v194, v195, v196, v197, v198, 3, 39, 4, 9, 40) :|: 0 = 0
f_202(v186, v187, v188, v189, v200, 1, v246, v247, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_204(v186, v187, v188, v189, v200, 1, v246, v247, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: TRUE
f_203(v186, v187, v188, v189, v200, 1, v246, v247, 0, v194, v195, v196, v197, v198, 3, 39, 4, 9, 40) -> f_205(v186, v187, v188, v189, v200, 1, v246, v247, 0, v194, v195, v196, v197, v198, 3, 39, 4, 9, 40) :|: TRUE
f_204(v186, v187, v188, v189, v200, 1, v246, v247, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_206(v186, v187, v188, v189, v200, 1, v246, v247, v314, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: TRUE
f_206(v186, v187, v188, v189, v200, 1, v246, v247, v314, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_207(v186, v187, v188, v189, v200, 1, v246, v247, v314, v194, v195, v196, v197, v198, 3, 39, 4, 0, 9, 40) :|: TRUE
f_207(v186, v187, v188, v189, v200, 1, v246, v247, v314, v194, v195, v196, v197, v198, 3, 39, 4, 0, 9, 40) -> f_208(v186, v187, v188, v189, v200, 1, v246, v247, v314, v194, v195, v196, v197, v198, 3, 39, 4, 0, 9, 40) :|: 0 = 0
f_208(v186, v187, v188, v189, v200, 1, v246, v247, v314, v194, v195, v196, v197, v198, 3, 39, 4, 0, 9, 40) -> f_209(v186, v187, v188, v189, v200, 1, v246, v247, v314, v195, v196, v197, v198, 3, 39, 4, 0, 9, 40) :|: 0 = 0
f_209(v186, v187, v188, v189, v200, 1, v246, v247, v314, v195, v196, v197, v198, 3, 39, 4, 0, 9, 40) -> f_210(v186, v187, v188, v189, v200, 1, v246, v247, v314, v316, v196, v197, v198, 3, 39, 4, 0, 9, 40) :|: v316 = v188 + 4 * v314
f_210(v186, v187, v188, v189, v200, 1, v246, v247, v314, v316, v196, v197, v198, 3, 39, 4, 0, 9, 40) -> f_211(v186, v187, v188, v189, v200, 1, v246, v247, v314, v316, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: TRUE
f_211(v186, v187, v188, v189, v200, 1, v246, v247, v314, v316, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_212(v186, v187, v188, v189, v200, 1, v246, v247, v314, v316, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: TRUE
f_212(v186, v187, v188, v189, v200, 1, v246, v247, v314, v316, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_177(v186, v187, v188, v189, v200, 1, v246, v247, v314, v316, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: TRUE
Combined rules. Obtained 8 rulesP rules:
f_97 -> f_123(v1:0, v3:0, v5:0, v7:0, 1, 0, 3 + v1:0, 3 + v3:0, 39 + v5:0, 3, 39, 4, 40, 10) :|: v7:0 > 9 && v3:0 > 0 && v1:0 > 0 && v5:0 > 0
f_178(v186:0, v187:0, v188:0, v189:0, v200:0, 1, v190:0, v192:0, v193:0, v194:0, v195:0, v196:0, v197:0, v198:0, 0, 3, 39, 4, 9, 40) -> f_205(v186:0, v187:0, v188:0, v189:0, v200:0, 1, v188:0 + 4 * v200:0, v247:0, 0, v194:0, v195:0, v196:0, v197:0, v198:0, 3, 39, 4, 9, 40) :|: v200:0 > -1 && v200:0 < 10 && v247:0 < 0 && v188:0 + 4 * v200:0 > 0
f_178(v186:0, v187:0, v188:0, v189:0, v200:0, 1, v190:0, v192:0, v193:0, v194:0, v195:0, v196:0, v197:0, v198:0, 0, 3, 39, 4, 9, 40) -> f_178(v186:0, v187:0, v188:0, v189:0, v200:1, 1, v200:0, v188:0 + 4 * v200:0, v247:0, v314:0, v188:0 + 4 * v314:0, v196:0, v197:0, v198:0, 0, 3, 39, 4, 9, 40) :|: v200:0 > -1 && v200:0 < 10 && v247:0 > -1 && v188:0 + 4 * v200:0 > 0
f_97 -> f_115(v1:0, v3:0, v5:0, v7:0, 0, 3 + v1:0, 3 + v3:0, 39 + v5:0, 3, 39, 1, 4, 40) :|: v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 < 0
f_97 -> f_134(v1:0, v3:0, v5:0, v7:0, 1, v5:0 + 4 * v7:0, v10:0, 0, 3 + v1:0, 3 + v3:0, 39 + v5:0, 3, 39, 4, 40, 9) :|: v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > -1 && v7:0 < 10 && v10:0 < 0 && v5:0 + 4 * v7:0 > 0
f_178(v186:0, v187:0, v188:0, v189:0, v200:0, 1, v190:0, v192:0, v193:0, v194:0, v195:0, v196:0, v197:0, v198:0, 0, 3, 39, 4, 9, 40) -> f_186(v186:0, v187:0, v188:0, v189:0, v200:0, 0, v190:0, 1, v192:0, v193:0, v194:0, v195:0, v196:0, v197:0, v198:0, 3, 39, 4, 9, 40) :|: v200:0 < 0
f_97 -> f_178(v1:0, v3:0, v5:0, v7:0, v200:0, 1, v7:0, v5:0 + 4 * v7:0, v10:0, v27:0, v5:0 + 4 * v27:0, 3 + v1:0, 3 + v3:0, 39 + v5:0, 0, 3, 39, 4, 9, 40) :|: v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > -1 && v7:0 < 10 && v10:0 > -1 && v5:0 + 4 * v7:0 > 0
f_178(v186:0, v187:0, v188:0, v189:0, v200:0, 1, v190:0, v192:0, v193:0, v194:0, v195:0, v196:0, v197:0, v198:0, 0, 3, 39, 4, 9, 40) -> f_194(v186:0, v187:0, v188:0, v189:0, v200:0, 1, 0, v190:0, v192:0, v193:0, v194:0, v195:0, v196:0, v197:0, v198:0, 3, 39, 4, 9, 40, 10) :|: v200:0 > 9
Filtered unneeded arguments:
   f_178(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20) -> f_178(x3, x5)
Removed division, modulo operations, cleaned up constraints. Obtained 8 rules.P rules:
f_97 -> f_123(v1:0, v3:0, v5:0, v7:0, 1, 0, 3 + v1:0, 3 + v3:0, 39 + v5:0, 3, 39, 4, 40, 10) :|: v3:0 > 0 && v7:0 > 9 && v5:0 > 0 && v1:0 > 0
f_178(v188:0, v200:0) -> f_205(v186:0, v187:0, v188:0, v189:0, v200:0, 1, v188:0 + 4 * v200:0, v247:0, 0, v194:0, v195:0, v196:0, v197:0, v198:0, 3, 39, 4, 9, 40) :|: v200:0 < 10 && v200:0 > -1 && v188:0 + 4 * v200:0 > 0 && v247:0 < 0
f_178(v188:0, v200:0) -> f_178(v188:0, v200:1) :|: v200:0 < 10 && v188:0 + 4 * v200:0 > 0 && v200:0 > -1
f_97 -> f_115(v1:0, v3:0, v5:0, v7:0, 0, 3 + v1:0, 3 + v3:0, 39 + v5:0, 3, 39, 1, 4, 40) :|: v1:0 > 0 && v3:0 > 0 && v7:0 < 0 && v5:0 > 0
f_97 -> f_134(v1:0, v3:0, v5:0, v7:0, 1, v5:0 + 4 * v7:0, v10:0, 0, 3 + v1:0, 3 + v3:0, 39 + v5:0, 3, 39, 4, 40, 9) :|: v1:0 > 0 && v3:0 > 0 && v5:0 > 0 && v7:0 > -1 && v7:0 < 10 && v5:0 + 4 * v7:0 > 0 && v10:0 < 0
f_178(v188:0, v200:0) -> f_186(v186:0, v187:0, v188:0, v189:0, v200:0, 0, v190:0, 1, v192:0, v193:0, v194:0, v195:0, v196:0, v197:0, v198:0, 3, 39, 4, 9, 40) :|: v200:0 < 0
f_97 -> f_178(v5:0, v200:0) :|: v5:0 > 0
f_178(v188:0, v200:0) -> f_194(v186:0, v187:0, v188:0, v189:0, v200:0, 1, 0, v190:0, v192:0, v193:0, v194:0, v195:0, v196:0, v197:0, v198:0, 3, 39, 4, 9, 40, 10) :|: v200:0 > 9

----------------------------------------

(20)
Obligation:
Rules:
f_97 -> f_123(v1:0, v3:0, v5:0, v7:0, 1, 0, 3 + v1:0, 3 + v3:0, 39 + v5:0, 3, 39, 4, 40, 10) :|: v3:0 > 0 && v7:0 > 9 && v5:0 > 0 && v1:0 > 0
f_178(v188:0, v200:0) -> f_205(v186:0, v187:0, v188:0, v189:0, v200:0, 1, v188:0 + 4 * v200:0, v247:0, 0, v194:0, v195:0, v196:0, v197:0, v198:0, 3, 39, 4, 9, 40) :|: v200:0 < 10 && v200:0 > -1 && v188:0 + 4 * v200:0 > 0 && v247:0 < 0
f_178(x, x1) -> f_178(x, x2) :|: x1 < 10 && x + 4 * x1 > 0 && x1 > -1
f_97 -> f_115(x3, x4, x5, x6, 0, 3 + x3, 3 + x4, 39 + x5, 3, 39, 1, 4, 40) :|: x3 > 0 && x4 > 0 && x6 < 0 && x5 > 0
f_97 -> f_134(x7, x8, x9, x10, 1, x9 + 4 * x10, x11, 0, 3 + x7, 3 + x8, 39 + x9, 3, 39, 4, 40, 9) :|: x7 > 0 && x8 > 0 && x9 > 0 && x10 > -1 && x10 < 10 && x9 + 4 * x10 > 0 && x11 < 0
f_178(x12, x13) -> f_186(x14, x15, x12, x16, x13, 0, x17, 1, x18, x19, x20, x21, x22, x23, x24, 3, 39, 4, 9, 40) :|: x13 < 0
f_97 -> f_178(x25, x26) :|: x25 > 0
f_178(x27, x28) -> f_194(x29, x30, x27, x31, x28, 1, 0, x32, x33, x34, x35, x36, x37, x38, x39, 3, 39, 4, 9, 40, 10) :|: x28 > 9
Start term: f_97

----------------------------------------

(21) IRSToKoat (EQUIVALENT)
Convert an IRS to a koat problem
----------------------------------------

(22)
Obligation:
(GOAL COMPLEXITY)
(STARTTERM (FUNCTIONSYMBOLS f_97))
(VAR x160 x162 x161 x46 x164 x47 x163 x48 x166 x49 x165 x42 x168 x43 x167 x44 x45 x169 x40 x41 x39 x151 x150 x35 x153 x36 x152 x37 x155 x38 x154 x31 x157 x32 x156 x33 x159 x34 x158 x30 x70 x140 x68 x142 x69 x141 x144 x143 x64 x146 x65 x145 x66 x148 x67 x147 x60 x61 x149 x62 x63 k7 k8 k5 k6 k9 k0 k3 k4 k1 k2 x57 x131 x58 x130 x59 x133 x132 x53 x135 x54 x134 x55 x137 x56 x136 x139 x50 x138 x51 x52 x90 x91 x92 x86 x87 x88 x89 x82 x83 x84 x85 x80 x81 x193 x192 x195 x194 x79 x197 x196 x199 x198 x75 x76 x'' x77 x78 x71 x72 x73 x74 k14 k15 k16 k17 k10 k11 k12 k13 x191 x190 x182 x181 x184 x183 x186 x185 x188 x187 x189 x180 x171 x170 x173 x172 x175 x174 x177 x176 x97 x179 x98 x178 x99 x93 x94 x95 x96 k36 x209 k37 x208 k38 k39 k32 k33 k34 k35 k30 k31 x201 x200 x203 x202 k29 x205 x204 x207 x206 k25 k26 k27 k28 k21 k22 k23 k24 k20 k18 k19 k54 k50 k51 k52 k53 k47 k48 k49 k43 k44 k45 k46 k40 k41 k42 x120 x122 x121 x124 x123 x126 x125 x x128 x127 x129 x111 x110 x113 x112 x115 x114 x117 x116 x119 x118 x109 x4 x28 x5 x29 x2 x3 x8 x24 x9 x25 x6 x26 x100 x7 x27 x20 x102 x21 x101 x22 x104 x23 x103 x106 x1 x105 x108 x107 x' x17 x18 x19 x13 x14 x15 x210 x16 x212 x10 x211 x11 x214 x12 x213 x216 x215 x218 x217)
(RULES
  f_178(k53, k47, x59, x60, x61, x62, x63, x64, x65, x66, x67, x68, x69, x70, x71, x72, x73, x74, x75, x76, x77) -> f_186(k48, k49, k53, k50, k47, 0, k44, 1, k45, k46, k35, k37, k38, k39, k27, 3, 39, 4, 9, 40, x78) :|: k47 < 0
  f_97(x, x', x'', x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18) -> f_178(k30, k32, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37) :|: k30 > 0
  f_97(x190, x191, x192, x193, x194, x195, x196, x197, x198, x199, x200, x201, x202, x203, x204, x205, x206, x207, x208, x209, x210) -> f_115(k25, k18, k21, k31, 0, 3 + k25, 3 + k18, 39 + k21, 3, 39, 1, 4, 40, x211, x212, x213, x214, x215, x216, x217, x218) :|: k25 > 0 && k18 > 0 && k31 < 0 && k21 > 0
  f_178(k13, k0, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55, x56) -> f_205(k14, k54, k13, k16, k0, 1, k13 + 4 * k0, k17, 0, k36, k1, k42, k3, k40, 3, 39, 4, 9, 40, x57, x58) :|: k0 < 10 && k0 > -1 && k13 + 4 * k0 > 0 && k17 < 0
  f_97(x164, x165, x166, x167, x168, x169, x170, x171, x172, x173, x174, x175, x176, x177, x178, x179, x180, x181, x182, x183, x184) -> f_134(k33, k26, k29, k51, 1, k29 + 4 * k51, k52, 0, 3 + k33, 3 + k26, 39 + k29, 3, 39, 4, 40, 9, x185, x186, x187, x188, x189) :|: k33 > 0 && k26 > 0 && k29 > 0 && k51 > -1 && k51 < 10 && k29 + 4 * k51 > 0 && k52 < 0
  f_178(k2, k41, x79, x80, x81, x82, x83, x84, x85, x86, x87, x88, x89, x90, x91, x92, x93, x94, x95, x96, x97) -> f_178(k2, k23, x98, x99, x100, x101, x102, x103, x104, x105, x106, x107, x108, x109, x110, x111, x112, x113, x114, x115, x116) :|: k41 < 10 && k2 + 4 * k41 > 0 && k41 > -1
  f_97(x117, x118, x119, x120, x121, x122, x123, x124, x125, x126, x127, x128, x129, x130, x131, x132, x133, x134, x135, x136, x137) -> f_123(k43, k20, k24, k28, 1, 0, 3 + k43, 3 + k20, 39 + k24, 3, 39, 4, 40, 10, x138, x139, x140, x141, x142, x143, x144) :|: k20 > 0 && k28 > 9 && k24 > 0 && k43 > 0
  f_178(k34, k19, x145, x146, x147, x148, x149, x150, x151, x152, x153, x154, x155, x156, x157, x158, x159, x160, x161, x162, x163) -> f_194(k22, k15, k34, k9, k19, 1, 0, k10, k11, k12, k5, k6, k7, k8, k4, 3, 39, 4, 9, 40, 10) :|: k19 > 9
)

----------------------------------------

(23) KoAT2 (EQUIVALENT)
KoAT2 was called with the following command:

/aprove/bin/koat2 analyse --termination --cfr=pe -d5 --local=mprf,twn -rtermcomp -i /tmp/aprove.InputModules.Programs.koat2_11859218137658428130.koat 

KoAT2's output was:

MAYBE

----------------------------------------

(24)
MAYBE

----------------------------------------

(25) SEGraph to IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 81 rulesP rules:
f_97 -> f_98(v1, v2, 3, 1, 4) :|: 1 <= v1 && v2 = 3 + v1 && 4 <= v2
f_98(v1, v2, 3, 1, 4) -> f_99(v1, v3, v2, v4, 3, 1, 4) :|: 1 <= v3 && v4 = 3 + v3 && 4 <= v4
f_99(v1, v3, v2, v4, 3, 1, 4) -> f_100(v1, v3, v5, v2, v4, v6, 3, 39, 1, 4, 40) :|: 1 <= v5 && v6 = 39 + v5 && 40 <= v6
f_100(v1, v3, v5, v2, v4, v6, 3, 39, 1, 4, 40) -> f_101(v1, v3, v5, v2, v4, v6, 0, 3, 39, 1, 4, 40) :|: TRUE
f_101(v1, v3, v5, v2, v4, v6, 0, 3, 39, 1, 4, 40) -> f_102(v1, v3, v5, v2, v4, v6, 0, 3, 39, 1, 4, 40) :|: TRUE
f_102(v1, v3, v5, v2, v4, v6, 0, 3, 39, 1, 4, 40) -> f_103(v1, v3, v5, v7, v2, v4, v6, 0, 3, 39, 1, 4, 40) :|: TRUE
f_103(v1, v3, v5, v7, v2, v4, v6, 0, 3, 39, 1, 4, 40) -> f_104(v1, v3, v5, v7, v2, v4, v6, 0, 3, 39, 1, 4, 40) :|: TRUE
f_104(v1, v3, v5, v7, v2, v4, v6, 0, 3, 39, 1, 4, 40) -> f_105(v1, v3, v5, v7, v2, v4, v6, 0, 3, 39, 1, 4, 40) :|: TRUE
f_105(v1, v3, v5, v7, v2, v4, v6, 0, 3, 39, 1, 4, 40) -> f_106(v1, v3, v5, v7, v2, v4, v6, 0, 3, 39, 1, 4, 40) :|: TRUE
f_106(v1, v3, v5, v7, v2, v4, v6, 0, 3, 39, 1, 4, 40) -> f_107(v1, v3, v5, v7, v2, v4, v6, 0, 3, 39, 1, 4, 40) :|: 0 = 0
f_107(v1, v3, v5, v7, v2, v4, v6, 0, 3, 39, 1, 4, 40) -> f_108(v1, v3, v5, v7, v2, v4, v6, 0, 3, 39, 1, 4, 40) :|: 0 <= v7
f_107(v1, v3, v5, v7, v2, v4, v6, 0, 3, 39, 1, 4, 40) -> f_109(v1, v3, v5, v7, v2, v4, v6, 0, 3, 39, 1, 4, 40) :|: v7 < 0
f_108(v1, v3, v5, v7, v2, v4, v6, 0, 3, 39, 1, 4, 40) -> f_110(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 39, 4, 40) :|: 0 = 0
f_109(v1, v3, v5, v7, v2, v4, v6, 0, 3, 39, 1, 4, 40) -> f_111(v1, v3, v5, v7, 0, v2, v4, v6, 3, 39, 1, 4, 40) :|: 0 = 0
f_110(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 39, 4, 40) -> f_112(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 39, 4, 40) :|: TRUE
f_111(v1, v3, v5, v7, 0, v2, v4, v6, 3, 39, 1, 4, 40) -> f_113(v1, v3, v5, v7, 0, v2, v4, v6, 3, 39, 1, 4, 40) :|: 0 = 0
f_112(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 39, 4, 40) -> f_114(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 39, 4, 40) :|: 0 = 0
f_113(v1, v3, v5, v7, 0, v2, v4, v6, 3, 39, 1, 4, 40) -> f_115(v1, v3, v5, v7, 0, v2, v4, v6, 3, 39, 1, 4, 40) :|: TRUE
f_114(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 39, 4, 40) -> f_116(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 39, 4, 40, 9) :|: v7 < 10
f_114(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 39, 4, 40) -> f_117(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 39, 4, 40, 10) :|: 10 <= v7
f_116(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 39, 4, 40, 9) -> f_118(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 39, 4, 40, 9) :|: 0 = 0
f_117(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 39, 4, 40, 10) -> f_119(v1, v3, v5, v7, 1, 0, v2, v4, v6, 3, 39, 4, 40, 10) :|: 0 = 0
f_118(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 39, 4, 40, 9) -> f_120(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 39, 4, 40, 9) :|: TRUE
f_119(v1, v3, v5, v7, 1, 0, v2, v4, v6, 3, 39, 4, 40, 10) -> f_121(v1, v3, v5, v7, 1, 0, v2, v4, v6, 3, 39, 4, 40, 10) :|: 0 = 0
f_120(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 39, 4, 40, 9) -> f_122(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 39, 4, 40, 9) :|: 0 = 0
f_121(v1, v3, v5, v7, 1, 0, v2, v4, v6, 3, 39, 4, 40, 10) -> f_123(v1, v3, v5, v7, 1, 0, v2, v4, v6, 3, 39, 4, 40, 10) :|: TRUE
f_122(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 39, 4, 40, 9) -> f_124(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 39, 4, 40, 9) :|: 0 = 0
f_124(v1, v3, v5, v7, 1, v2, v4, v6, 0, 3, 39, 4, 40, 9) -> f_125(v1, v3, v5, v7, 1, v9, v2, v4, v6, 0, 3, 39, 4, 40, 9) :|: v9 = v5 + 4 * v7 && 1 <= v9
f_125(v1, v3, v5, v7, 1, v9, v2, v4, v6, 0, 3, 39, 4, 40, 9) -> f_126(v1, v3, v5, v7, 1, v9, v10, v2, v4, v6, 0, 3, 39, 4, 40, 9) :|: TRUE
f_126(v1, v3, v5, v7, 1, v9, v10, v2, v4, v6, 0, 3, 39, 4, 40, 9) -> f_127(v1, v3, v5, v7, 1, v9, v10, v2, v4, v6, 0, 3, 39, 4, 40, 9) :|: 0 <= v10
f_126(v1, v3, v5, v7, 1, v9, v10, v2, v4, v6, 0, 3, 39, 4, 40, 9) -> f_128(v1, v3, v5, v7, 1, v9, v10, v2, v4, v6, 0, 3, 39, 4, 40, 9) :|: v10 < 0
f_127(v1, v3, v5, v7, 1, v9, v10, v2, v4, v6, 0, 3, 39, 4, 40, 9) -> f_129(v1, v3, v5, v7, 1, v9, v10, v2, v4, v6, 0, 3, 39, 4, 40, 9) :|: 0 = 0
f_128(v1, v3, v5, v7, 1, v9, v10, v2, v4, v6, 0, 3, 39, 4, 40, 9) -> f_130(v1, v3, v5, v7, 1, v9, v10, 0, v2, v4, v6, 3, 39, 4, 40, 9) :|: 0 = 0
f_129(v1, v3, v5, v7, 1, v9, v10, v2, v4, v6, 0, 3, 39, 4, 40, 9) -> f_131(v1, v3, v5, v7, 1, v9, v10, v2, v4, v6, 0, 3, 39, 4, 40, 9) :|: 0 = 0
f_130(v1, v3, v5, v7, 1, v9, v10, 0, v2, v4, v6, 3, 39, 4, 40, 9) -> f_132(v1, v3, v5, v7, 1, v9, v10, 0, v2, v4, v6, 3, 39, 4, 40, 9) :|: 0 = 0
f_131(v1, v3, v5, v7, 1, v9, v10, v2, v4, v6, 0, 3, 39, 4, 40, 9) -> f_133(v1, v3, v5, v7, 1, v9, v10, v2, v4, v6, 0, 3, 39, 4, 40, 9) :|: TRUE
f_132(v1, v3, v5, v7, 1, v9, v10, 0, v2, v4, v6, 3, 39, 4, 40, 9) -> f_134(v1, v3, v5, v7, 1, v9, v10, 0, v2, v4, v6, 3, 39, 4, 40, 9) :|: TRUE
f_133(v1, v3, v5, v7, 1, v9, v10, v2, v4, v6, 0, 3, 39, 4, 40, 9) -> f_135(v1, v3, v5, v7, 1, v9, v10, v27, v2, v4, v6, 0, 3, 39, 4, 40, 9) :|: TRUE
f_135(v1, v3, v5, v7, 1, v9, v10, v27, v2, v4, v6, 0, 3, 39, 4, 40, 9) -> f_136(v1, v3, v5, v7, 1, v9, v10, v27, v2, v4, v6, 0, 3, 39, 4, 40, 9) :|: TRUE
f_136(v1, v3, v5, v7, 1, v9, v10, v27, v2, v4, v6, 0, 3, 39, 4, 40, 9) -> f_137(v1, v3, v5, v7, 1, v9, v10, v27, v2, v4, v6, 0, 3, 39, 4, 40, 9) :|: 0 = 0
f_137(v1, v3, v5, v7, 1, v9, v10, v27, v2, v4, v6, 0, 3, 39, 4, 40, 9) -> f_138(v1, v3, v5, v7, 1, v9, v10, v27, v2, v4, v6, 0, 3, 39, 4, 40, 9) :|: 0 = 0
f_138(v1, v3, v5, v7, 1, v9, v10, v27, v2, v4, v6, 0, 3, 39, 4, 40, 9) -> f_139(v1, v3, v5, v7, 1, v9, v10, v27, v29, v2, v4, v6, 0, 3, 39, 4, 40, 9) :|: v29 = v5 + 4 * v27
f_139(v1, v3, v5, v7, 1, v9, v10, v27, v29, v2, v4, v6, 0, 3, 39, 4, 40, 9) -> f_140(v1, v3, v5, v7, 1, v9, v10, v27, v29, v2, v4, v6, 0, 3, 39, 4, 40, 9) :|: TRUE
f_140(v1, v3, v5, v7, 1, v9, v10, v27, v29, v2, v4, v6, 0, 3, 39, 4, 40, 9) -> f_141(v1, v3, v5, v7, 1, v9, v10, v27, v29, v2, v4, v6, 0, 3, 39, 4, 40, 9) :|: TRUE
f_141(v1, v3, v5, v7, 1, v9, v10, v27, v29, v2, v4, v6, 0, 3, 39, 4, 40, 9) -> f_177(v1, v3, v5, v7, v7, 1, v9, v10, v27, v29, v2, v4, v6, 0, 3, 39, 4, 9, 40) :|: TRUE
f_177(v186, v187, v188, v189, v190, 1, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_178(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: TRUE
f_178(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_179(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: 0 <= v200
f_178(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_180(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: v200 < 0
f_179(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_181(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: 0 = 0
f_180(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_182(v186, v187, v188, v189, v200, 0, v190, 1, v192, v193, v194, v195, v196, v197, v198, 3, 39, 4, 9, 40) :|: 0 = 0
f_181(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_183(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: TRUE
f_182(v186, v187, v188, v189, v200, 0, v190, 1, v192, v193, v194, v195, v196, v197, v198, 3, 39, 4, 9, 40) -> f_184(v186, v187, v188, v189, v200, 0, v190, 1, v192, v193, v194, v195, v196, v197, v198, 3, 39, 4, 9, 40) :|: 0 = 0
f_183(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_185(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: 0 = 0
f_184(v186, v187, v188, v189, v200, 0, v190, 1, v192, v193, v194, v195, v196, v197, v198, 3, 39, 4, 9, 40) -> f_186(v186, v187, v188, v189, v200, 0, v190, 1, v192, v193, v194, v195, v196, v197, v198, 3, 39, 4, 9, 40) :|: TRUE
f_185(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_187(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: v200 < 10
f_185(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_188(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40, 10) :|: 10 <= v200
f_187(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_189(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: 0 = 0
f_188(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40, 10) -> f_190(v186, v187, v188, v189, v200, 1, 0, v190, v192, v193, v194, v195, v196, v197, v198, 3, 39, 4, 9, 40, 10) :|: 0 = 0
f_189(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_191(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: TRUE
f_190(v186, v187, v188, v189, v200, 1, 0, v190, v192, v193, v194, v195, v196, v197, v198, 3, 39, 4, 9, 40, 10) -> f_192(v186, v187, v188, v189, v200, 1, 0, v190, v192, v193, v194, v195, v196, v197, v198, 3, 39, 4, 9, 40, 10) :|: 0 = 0
f_191(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_193(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: 0 = 0
f_192(v186, v187, v188, v189, v200, 1, 0, v190, v192, v193, v194, v195, v196, v197, v198, 3, 39, 4, 9, 40, 10) -> f_194(v186, v187, v188, v189, v200, 1, 0, v190, v192, v193, v194, v195, v196, v197, v198, 3, 39, 4, 9, 40, 10) :|: TRUE
f_193(v186, v187, v188, v189, v200, 1, v190, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_195(v186, v187, v188, v189, v200, 1, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: 0 = 0
f_195(v186, v187, v188, v189, v200, 1, v192, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_196(v186, v187, v188, v189, v200, 1, v246, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: v246 = v188 + 4 * v200 && 1 <= v246
f_196(v186, v187, v188, v189, v200, 1, v246, v193, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_197(v186, v187, v188, v189, v200, 1, v246, v247, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: TRUE
f_197(v186, v187, v188, v189, v200, 1, v246, v247, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_198(v186, v187, v188, v189, v200, 1, v246, v247, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: 0 <= v247
f_197(v186, v187, v188, v189, v200, 1, v246, v247, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_199(v186, v187, v188, v189, v200, 1, v246, v247, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: v247 < 0
f_198(v186, v187, v188, v189, v200, 1, v246, v247, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_200(v186, v187, v188, v189, v200, 1, v246, v247, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: 0 = 0
f_199(v186, v187, v188, v189, v200, 1, v246, v247, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_201(v186, v187, v188, v189, v200, 1, v246, v247, 0, v194, v195, v196, v197, v198, 3, 39, 4, 9, 40) :|: 0 = 0
f_200(v186, v187, v188, v189, v200, 1, v246, v247, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_202(v186, v187, v188, v189, v200, 1, v246, v247, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: 0 = 0
f_201(v186, v187, v188, v189, v200, 1, v246, v247, 0, v194, v195, v196, v197, v198, 3, 39, 4, 9, 40) -> f_203(v186, v187, v188, v189, v200, 1, v246, v247, 0, v194, v195, v196, v197, v198, 3, 39, 4, 9, 40) :|: 0 = 0
f_202(v186, v187, v188, v189, v200, 1, v246, v247, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_204(v186, v187, v188, v189, v200, 1, v246, v247, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: TRUE
f_203(v186, v187, v188, v189, v200, 1, v246, v247, 0, v194, v195, v196, v197, v198, 3, 39, 4, 9, 40) -> f_205(v186, v187, v188, v189, v200, 1, v246, v247, 0, v194, v195, v196, v197, v198, 3, 39, 4, 9, 40) :|: TRUE
f_204(v186, v187, v188, v189, v200, 1, v246, v247, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_206(v186, v187, v188, v189, v200, 1, v246, v247, v314, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: TRUE
f_206(v186, v187, v188, v189, v200, 1, v246, v247, v314, v194, v195, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_207(v186, v187, v188, v189, v200, 1, v246, v247, v314, v194, v195, v196, v197, v198, 3, 39, 4, 0, 9, 40) :|: TRUE
f_207(v186, v187, v188, v189, v200, 1, v246, v247, v314, v194, v195, v196, v197, v198, 3, 39, 4, 0, 9, 40) -> f_208(v186, v187, v188, v189, v200, 1, v246, v247, v314, v194, v195, v196, v197, v198, 3, 39, 4, 0, 9, 40) :|: 0 = 0
f_208(v186, v187, v188, v189, v200, 1, v246, v247, v314, v194, v195, v196, v197, v198, 3, 39, 4, 0, 9, 40) -> f_209(v186, v187, v188, v189, v200, 1, v246, v247, v314, v195, v196, v197, v198, 3, 39, 4, 0, 9, 40) :|: 0 = 0
f_209(v186, v187, v188, v189, v200, 1, v246, v247, v314, v195, v196, v197, v198, 3, 39, 4, 0, 9, 40) -> f_210(v186, v187, v188, v189, v200, 1, v246, v247, v314, v316, v196, v197, v198, 3, 39, 4, 0, 9, 40) :|: v316 = v188 + 4 * v314
f_210(v186, v187, v188, v189, v200, 1, v246, v247, v314, v316, v196, v197, v198, 3, 39, 4, 0, 9, 40) -> f_211(v186, v187, v188, v189, v200, 1, v246, v247, v314, v316, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: TRUE
f_211(v186, v187, v188, v189, v200, 1, v246, v247, v314, v316, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_212(v186, v187, v188, v189, v200, 1, v246, v247, v314, v316, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: TRUE
f_212(v186, v187, v188, v189, v200, 1, v246, v247, v314, v316, v196, v197, v198, 0, 3, 39, 4, 9, 40) -> f_177(v186, v187, v188, v189, v200, 1, v246, v247, v314, v316, v196, v197, v198, 0, 3, 39, 4, 9, 40) :|: TRUE
Combined rules. Obtained 8 rulesP rules:
f_97 -> f_123(v1:0, v3:0, v5:0, v7:0, 1, 0, 3 + v1:0, 3 + v3:0, 39 + v5:0, 3, 39, 4, 40, 10) :|: v7:0 > 9 && v3:0 > 0 && v1:0 > 0 && v5:0 > 0
f_178(v186:0, v187:0, v188:0, v189:0, v200:0, 1, v190:0, v192:0, v193:0, v194:0, v195:0, v196:0, v197:0, v198:0, 0, 3, 39, 4, 9, 40) -> f_205(v186:0, v187:0, v188:0, v189:0, v200:0, 1, v188:0 + 4 * v200:0, v247:0, 0, v194:0, v195:0, v196:0, v197:0, v198:0, 3, 39, 4, 9, 40) :|: v200:0 > -1 && v200:0 < 10 && v247:0 < 0 && v188:0 + 4 * v200:0 > 0
f_178(v186:0, v187:0, v188:0, v189:0, v200:0, 1, v190:0, v192:0, v193:0, v194:0, v195:0, v196:0, v197:0, v198:0, 0, 3, 39, 4, 9, 40) -> f_178(v186:0, v187:0, v188:0, v189:0, v200:1, 1, v200:0, v188:0 + 4 * v200:0, v247:0, v314:0, v188:0 + 4 * v314:0, v196:0, v197:0, v198:0, 0, 3, 39, 4, 9, 40) :|: v200:0 > -1 && v200:0 < 10 && v247:0 > -1 && v188:0 + 4 * v200:0 > 0
f_97 -> f_115(v1:0, v3:0, v5:0, v7:0, 0, 3 + v1:0, 3 + v3:0, 39 + v5:0, 3, 39, 1, 4, 40) :|: v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 < 0
f_97 -> f_134(v1:0, v3:0, v5:0, v7:0, 1, v5:0 + 4 * v7:0, v10:0, 0, 3 + v1:0, 3 + v3:0, 39 + v5:0, 3, 39, 4, 40, 9) :|: v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > -1 && v7:0 < 10 && v10:0 < 0 && v5:0 + 4 * v7:0 > 0
f_178(v186:0, v187:0, v188:0, v189:0, v200:0, 1, v190:0, v192:0, v193:0, v194:0, v195:0, v196:0, v197:0, v198:0, 0, 3, 39, 4, 9, 40) -> f_186(v186:0, v187:0, v188:0, v189:0, v200:0, 0, v190:0, 1, v192:0, v193:0, v194:0, v195:0, v196:0, v197:0, v198:0, 3, 39, 4, 9, 40) :|: v200:0 < 0
f_97 -> f_178(v1:0, v3:0, v5:0, v7:0, v200:0, 1, v7:0, v5:0 + 4 * v7:0, v10:0, v27:0, v5:0 + 4 * v27:0, 3 + v1:0, 3 + v3:0, 39 + v5:0, 0, 3, 39, 4, 9, 40) :|: v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > -1 && v7:0 < 10 && v10:0 > -1 && v5:0 + 4 * v7:0 > 0
f_178(v186:0, v187:0, v188:0, v189:0, v200:0, 1, v190:0, v192:0, v193:0, v194:0, v195:0, v196:0, v197:0, v198:0, 0, 3, 39, 4, 9, 40) -> f_194(v186:0, v187:0, v188:0, v189:0, v200:0, 1, 0, v190:0, v192:0, v193:0, v194:0, v195:0, v196:0, v197:0, v198:0, 3, 39, 4, 9, 40, 10) :|: v200:0 > 9
Filtered unneeded arguments:
   f_178(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20) -> f_178(x3, x5)
Removed division, modulo operations, cleaned up constraints. Obtained 8 rules.P rules:
f_97 -> f_123(v1:0, v3:0, v5:0, v7:0, 1, 0, 3 + v1:0, 3 + v3:0, 39 + v5:0, 3, 39, 4, 40, 10) :|: v3:0 > 0 && v7:0 > 9 && v5:0 > 0 && v1:0 > 0
f_178(v188:0, v200:0) -> f_205(v186:0, v187:0, v188:0, v189:0, v200:0, 1, v188:0 + 4 * v200:0, v247:0, 0, v194:0, v195:0, v196:0, v197:0, v198:0, 3, 39, 4, 9, 40) :|: v200:0 < 10 && v200:0 > -1 && v188:0 + 4 * v200:0 > 0 && v247:0 < 0
f_178(v188:0, v200:0) -> f_178(v188:0, v200:1) :|: v200:0 < 10 && v188:0 + 4 * v200:0 > 0 && v200:0 > -1
f_97 -> f_115(v1:0, v3:0, v5:0, v7:0, 0, 3 + v1:0, 3 + v3:0, 39 + v5:0, 3, 39, 1, 4, 40) :|: v1:0 > 0 && v3:0 > 0 && v7:0 < 0 && v5:0 > 0
f_97 -> f_134(v1:0, v3:0, v5:0, v7:0, 1, v5:0 + 4 * v7:0, v10:0, 0, 3 + v1:0, 3 + v3:0, 39 + v5:0, 3, 39, 4, 40, 9) :|: v1:0 > 0 && v3:0 > 0 && v5:0 > 0 && v7:0 > -1 && v7:0 < 10 && v5:0 + 4 * v7:0 > 0 && v10:0 < 0
f_178(v188:0, v200:0) -> f_186(v186:0, v187:0, v188:0, v189:0, v200:0, 0, v190:0, 1, v192:0, v193:0, v194:0, v195:0, v196:0, v197:0, v198:0, 3, 39, 4, 9, 40) :|: v200:0 < 0
f_97 -> f_178(v5:0, v200:0) :|: v5:0 > 0
f_178(v188:0, v200:0) -> f_194(v186:0, v187:0, v188:0, v189:0, v200:0, 1, 0, v190:0, v192:0, v193:0, v194:0, v195:0, v196:0, v197:0, v198:0, 3, 39, 4, 9, 40, 10) :|: v200:0 > 9

----------------------------------------

(26)
Obligation:
Rules:
f_97 -> f_123(v1:0, v3:0, v5:0, v7:0, 1, 0, 3 + v1:0, 3 + v3:0, 39 + v5:0, 3, 39, 4, 40, 10) :|: v3:0 > 0 && v7:0 > 9 && v5:0 > 0 && v1:0 > 0
f_178(v188:0, v200:0) -> f_205(v186:0, v187:0, v188:0, v189:0, v200:0, 1, v188:0 + 4 * v200:0, v247:0, 0, v194:0, v195:0, v196:0, v197:0, v198:0, 3, 39, 4, 9, 40) :|: v200:0 < 10 && v200:0 > -1 && v188:0 + 4 * v200:0 > 0 && v247:0 < 0
f_178(x, x1) -> f_178(x, x2) :|: x1 < 10 && x + 4 * x1 > 0 && x1 > -1
f_97 -> f_115(x3, x4, x5, x6, 0, 3 + x3, 3 + x4, 39 + x5, 3, 39, 1, 4, 40) :|: x3 > 0 && x4 > 0 && x6 < 0 && x5 > 0
f_97 -> f_134(x7, x8, x9, x10, 1, x9 + 4 * x10, x11, 0, 3 + x7, 3 + x8, 39 + x9, 3, 39, 4, 40, 9) :|: x7 > 0 && x8 > 0 && x9 > 0 && x10 > -1 && x10 < 10 && x9 + 4 * x10 > 0 && x11 < 0
f_178(x12, x13) -> f_186(x14, x15, x12, x16, x13, 0, x17, 1, x18, x19, x20, x21, x22, x23, x24, 3, 39, 4, 9, 40) :|: x13 < 0
f_97 -> f_178(x25, x26) :|: x25 > 0
f_178(x27, x28) -> f_194(x29, x30, x27, x31, x28, 1, 0, x32, x33, x34, x35, x36, x37, x38, x39, 3, 39, 4, 9, 40, 10) :|: x28 > 9
Start term: f_97

----------------------------------------

(27) IRSNoOverapproximation (EQUIVALENT)
Proof of non-termination is aborted since the IRSProblem over-approximates
----------------------------------------

(28)
MAYBE
Graph finished, checking  consistency
Graph finished, checked consistency, took 0.0s
