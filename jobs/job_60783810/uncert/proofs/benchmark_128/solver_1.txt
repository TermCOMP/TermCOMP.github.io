MAYBE
proof of /hpcwork/ff862203/termcomp25/benchmarks/Eq2DA.c
# AProVE Commit ID: 48c83ccb80d5f8312cb92f4aa1b51dc35e247e65 nils 20241118 unpublished


Termination of the given C Problem could not be shown:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 19 ms]
(2) LLVM problem
(3) LLVMToTerminationGraphProof [EQUIVALENT, 1081 ms]
(4) LLVM Symbolic Execution Graph
(5) SymbolicExecutionGraphToSCCProof [SOUND, 0 ms]
(6) LLVM Symbolic Execution SCC
    (7) SCC2IRS [SOUND, 82 ms]
    (8) IntTRS
        (9) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (10) IntTRS
        (11) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
        (12) IntTRS
        (13) IntTRSPeriodicNontermProof [COMPLETE, 10 ms]
        (14) NO
    (15) SCC2IRS [SOUND, 0 ms]
    (16) IntTRS
        (17) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (18) IntTRS
        (19) IntTRSPeriodicNontermProof [COMPLETE, 6 ms]
        (20) NO
(21) SEGraph to IRS [SOUND, 271 ms]
(22) IntTRS
    (23) IRSToKoat [EQUIVALENT, 0 ms]
    (24) Koat Problem
    (25) KoAT2 [EQUIVALENT, 2018 ms]
    (26) MAYBE
(27) SEGraph to IRS [SOUND, 294 ms]
(28) IntTRS
    (29) IRSNoOverapproximation [EQUIVALENT, 0 ms]
    (30) MAYBE


----------------------------------------

(0)
Obligation:
c file /hpcwork/ff862203/termcomp25/benchmarks/Eq2DA.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /hpcwork/ff862203/termcomp25/benchmarks/Eq2DA.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-pc-linux-gnu"

Type definitions:

Global variables:

Function declarations and definitions:

*BasicFunctionTypename: "llvm.dbg.declare" returnParam: BasicVoidType parameters: (BasicMetadataType, BasicMetadataType, BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_nondet_int" returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 7
	0:
		%1 = alloca i32, align 4
		%2 = alloca i32, align 4
		%3 = alloca i32, align 4
		%4 = alloca i32, align 4
		%5 = alloca *i32, align 8
		%6 = alloca *i32, align 8
		store 0, %1
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %2)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %3)
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %4)
		%7 = call i32 @__VERIFIER_nondet_int()
		store %7, %4
		%8 = load %4
		%9 = icmp slt %8 1
		br %9, %10, %11
	10:
		store 1, %4
		br %11
	11:
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i32 %5)
		%12 = load %4
		%13 = sext i32 %12 to i64
		%14 = alloca i8, numElementsLit: %13, align 16
		%15 = bitcast *i8 %14 to *i32
		store %15, %5
		%16 = load %5
		%17 = icmp ne %16 null
		br %17, %19, %18
	18:
		store 0, %1
		br %44
	19:
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(**i32 %6)
		%20 = load %5
		store %20, %6
		br %21
	21:
		%22 = load %6
		%23 = load %22
		%24 = load %5
		%25 = load %4
		%26 = sext i32 %25 to i64
		%27 = getelementptr %24, %26
		%28 = getelementptr %27, -1
		%29 = load %28
		%30 = icmp ne %23 %29
		br %30, %31, %43
	31:
		%32 = load %5
		%33 = load %4
		%34 = sext i32 %33 to i64
		%35 = getelementptr %32, %34
		%36 = getelementptr %35, -1
		%37 = load %36
		%38 = load %6
		%39 = load %38
		%40 = add i32 %39, %37
		store %40, %38
		%41 = load %6
		%42 = getelementptr %41, 1
		store %42, %6
		br %21
	43:
		store 0, %1
		br %44
	44:
		%45 = load %1
		ret %45


Analyze Termination of all function calls matching the pattern:
main()
----------------------------------------

(3) LLVMToTerminationGraphProof (EQUIVALENT)
Constructed symbolic execution graph for LLVM program.
----------------------------------------

(4)
Obligation:
Symbolic Execution Graph
----------------------------------------

(5) SymbolicExecutionGraphToSCCProof (SOUND)
Splitted symbolic execution graph to 1 SCC.
----------------------------------------

(6)
Obligation:
SCC
----------------------------------------

(7) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 26 rulesP rules:
f_308(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v43, v45, v47, v49, v50, v51, v35, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_309(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_309(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_310(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v47, v49, v50, v51, v45, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_310(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v47, v49, v50, v51, v45, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_311(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v47, v49, v50, v51, v45, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_311(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v47, v49, v50, v51, v45, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_312(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v49, v50, v51, v45, v47, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_312(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v49, v50, v51, v45, v47, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_313(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v50, v51, v45, v47, v49, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: v77 = v73 + 4 * v75
f_313(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v50, v51, v45, v47, v49, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_314(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v51, v45, v47, v49, v50, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 4 + v78 = v77 && 4 <= v77
f_314(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v51, v45, v47, v49, v50, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_315(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_315(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_316(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: v71 != v79
f_316(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_318(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_318(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_320(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_320(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_322(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_322(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_324(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_324(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_326(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_326(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_328(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: v77 = v73 + 4 * v75
f_328(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_329(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 4 + v78 = v77
f_329(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_330(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_330(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_331(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_331(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_332(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_332(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_333(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: v142 = v71 + v79
f_333(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_334(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_334(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_335(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v144, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_335(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v144, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_336(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v144, v146, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: v146 = 4 + v144 && 4 <= v146
f_336(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v144, v146, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_337(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v144, v146, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_337(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v144, v146, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_338(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v144, v146, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_338(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v144, v146, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_307(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v144, v146, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_307(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v65, v67, v69, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_308(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v43, v45, v47, v49, v50, v51, v35, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
Combined rules. Obtained 2 rulesP rules:
f_308(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, v15:0, 1, v69:0, v43:0, v45:0, v47:0, v49:0, v50:0, v51:0, v35:0, v65:0, v67:0, v2:0, v4:0, v6:0, v8:0, v10:0, v12:0, v16:0, 3, 7, 4, 8) -> f_308(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, v15:0, 1, 4 + v144:0, v71:0, v73:0, v75:0, 4 + v78:0, v78:0, v79:0, v69:0, v71:0 + v79:0, v144:0, v2:0, v4:0, v6:0, v8:0, v10:0, v12:0, v16:0, 3, 7, 4, 8) :|: v78:0 > -1 && v73:0 + 4 * v75:0 = 4 + v78:0 && v79:0 > v71:0 && v144:0 > -1
f_308(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, v15:0, 1, v69:0, v43:0, v45:0, v47:0, v49:0, v50:0, v51:0, v35:0, v65:0, v67:0, v2:0, v4:0, v6:0, v8:0, v10:0, v12:0, v16:0, 3, 7, 4, 8) -> f_308(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, v15:0, 1, 4 + v144:0, v71:0, v73:0, v75:0, 4 + v78:0, v78:0, v79:0, v69:0, v71:0 + v79:0, v144:0, v2:0, v4:0, v6:0, v8:0, v10:0, v12:0, v16:0, 3, 7, 4, 8) :|: v78:0 > -1 && v73:0 + 4 * v75:0 = 4 + v78:0 && v79:0 < v71:0 && v144:0 > -1
Removed division, modulo operations, cleaned up constraints. Obtained 2 rules.P rules:
f_308(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, cons_0, v15:0, cons_1, v69:0, v43:0, v45:0, v47:0, v49:0, v50:0, v51:0, v35:0, v65:0, v67:0, v2:0, v4:0, v6:0, v8:0, v10:0, v12:0, v16:0, cons_3, cons_7, cons_4, cons_8) -> f_308(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, v15:0, 1, 4 + v144:0, v71:0, v73:0, v75:0, 4 + v78:0, v78:0, v79:0, v69:0, v71:0 + v79:0, v144:0, v2:0, v4:0, v6:0, v8:0, v10:0, v12:0, v16:0, 3, 7, 4, 8) :|: v73:0 + 4 * v75:0 = 4 + v78:0 && v78:0 > -1 && v144:0 > -1 && v79:0 > v71:0 && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_7 = 7 && cons_4 = 4 && cons_8 = 8
f_308(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, cons_0, v15:0, cons_1, v69:0, v43:0, v45:0, v47:0, v49:0, v50:0, v51:0, v35:0, v65:0, v67:0, v2:0, v4:0, v6:0, v8:0, v10:0, v12:0, v16:0, cons_3, cons_7, cons_4, cons_8) -> f_308(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, v15:0, 1, 4 + v144:0, v71:0, v73:0, v75:0, 4 + v78:0, v78:0, v79:0, v69:0, v71:0 + v79:0, v144:0, v2:0, v4:0, v6:0, v8:0, v10:0, v12:0, v16:0, 3, 7, 4, 8) :|: v73:0 + 4 * v75:0 = 4 + v78:0 && v78:0 > -1 && v144:0 > -1 && v79:0 < v71:0 && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_7 = 7 && cons_4 = 4 && cons_8 = 8

----------------------------------------

(8)
Obligation:
Rules:
f_308(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, cons_0, v15:0, cons_1, v69:0, v43:0, v45:0, v47:0, v49:0, v50:0, v51:0, v35:0, v65:0, v67:0, v2:0, v4:0, v6:0, v8:0, v10:0, v12:0, v16:0, cons_3, cons_7, cons_4, cons_8) -> f_308(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, v15:0, 1, 4 + v144:0, v71:0, v73:0, v75:0, 4 + v78:0, v78:0, v79:0, v69:0, v71:0 + v79:0, v144:0, v2:0, v4:0, v6:0, v8:0, v10:0, v12:0, v16:0, 3, 7, 4, 8) :|: v73:0 + 4 * v75:0 = 4 + v78:0 && v78:0 > -1 && v144:0 > -1 && v79:0 > v71:0 && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_7 = 7 && cons_4 = 4 && cons_8 = 8
f_308(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30) -> f_308(x, x1, x2, x3, x4, x5, x6, 0, x8, 1, 4 + x31, x32, x33, x34, 4 + x35, x35, x36, x10, x32 + x36, x31, x20, x21, x22, x23, x24, x25, x26, 3, 7, 4, 8) :|: x33 + 4 * x34 = 4 + x35 && x35 > -1 && x31 > -1 && x36 < x32 && x7 = 0 && x9 = 1 && x27 = 3 && x28 = 7 && x29 = 4 && x30 = 8

----------------------------------------

(9) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(10)
Obligation:
Rules:
f_308(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0, cons_0, x8:0, cons_1, x10:0, x11:0, x12:0, x13:0, x14:0, x15:0, x16:0, x17:0, x18:0, x19:0, x20:0, x21:0, x22:0, x23:0, x24:0, x25:0, x26:0, cons_3, cons_7, cons_4, cons_8) -> f_308(x:0, x1:0, x2:0, x3:0, x4:0, x5:0, x6:0, 0, x8:0, 1, 4 + x31:0, x32:0, x33:0, x34:0, 4 + x35:0, x35:0, x36:0, x10:0, x32:0 + x36:0, x31:0, x20:0, x21:0, x22:0, x23:0, x24:0, x25:0, x26:0, 3, 7, 4, 8) :|: x31:0 > -1 && x36:0 < x32:0 && x35:0 > -1 && x33:0 + 4 * x34:0 = 4 + x35:0 && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_7 = 7 && cons_4 = 4 && cons_8 = 8
f_308(x, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30) -> f_308(x, x1, x2, x3, x4, x5, x6, 0, x8, 1, 4 + x31, x32, x33, x34, 4 + x35, x35, x36, x10, x32 + x36, x31, x20, x21, x22, x23, x24, x25, x26, 3, 7, 4, 8) :|: x31 > -1 && x36 > x32 && x35 > -1 && x33 + 4 * x34 = 4 + x35 && x7 = 0 && x9 = 1 && x27 = 3 && x28 = 7 && x29 = 4 && x30 = 8

----------------------------------------

(11) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f_308(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31) -> f_308(x8, x10, x28, x29, x30, x31)

----------------------------------------

(12)
Obligation:
Rules:
f_308(cons_0, cons_1, cons_3, cons_7, cons_4, cons_8) -> f_308(0, 1, 3, 7, 4, 8) :|: x31:0 > -1 && x36:0 < x32:0 && x35:0 > -1 && x33:0 + 4 * x34:0 = 4 + x35:0 && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_7 = 7 && cons_4 = 4 && cons_8 = 8
f_308(x7, x9, x27, x28, x29, x30) -> f_308(0, 1, 3, 7, 4, 8) :|: x31 > -1 && x36 > x32 && x35 > -1 && x33 + 4 * x34 = 4 + x35 && x7 = 0 && x9 = 1 && x27 = 3 && x28 = 7 && x29 = 4 && x30 = 8

----------------------------------------

(13) IntTRSPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, cons_0, cons_1, cons_3, cons_7, cons_4, cons_8) -> f(1, 0, 1, 3, 7, 4, 8) :|: pc = 1 && (x31:0 > -1 && x36:0 < x32:0 && x35:0 > -1 && x33:0 + 4 * x34:0 = 4 + x35:0 && cons_0 = 0 && cons_1 = 1 && cons_3 = 3 && cons_7 = 7 && cons_4 = 4 && cons_8 = 8)
f(pc, x7, x9, x27, x28, x29, x30) -> f(1, 0, 1, 3, 7, 4, 8) :|: pc = 1 && (x31 > -1 && x36 > x32 && x35 > -1 && x33 + 4 * x34 = 4 + x35 && x7 = 0 && x9 = 1 && x27 = 3 && x28 = 7 && x29 = 4 && x30 = 8)
Witness term starting non-terminating reduction: f(1, 0, 1, 3, 7, 4, 8)
----------------------------------------

(14)
NO

----------------------------------------

(15) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 26 rulesP rules:
f_308(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v43, v45, v47, v49, v50, v51, v35, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_309(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_309(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_310(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v47, v49, v50, v51, v45, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_310(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v47, v49, v50, v51, v45, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_311(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v47, v49, v50, v51, v45, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_311(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v47, v49, v50, v51, v45, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_312(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v49, v50, v51, v45, v47, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_312(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v49, v50, v51, v45, v47, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_313(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v50, v51, v45, v47, v49, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: v77 = v73 + 4 * v75
f_313(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v50, v51, v45, v47, v49, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_314(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v51, v45, v47, v49, v50, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 4 + v78 = v77 && 4 <= v77
f_314(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v51, v45, v47, v49, v50, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_315(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_315(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_316(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: v71 != v79
f_316(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_318(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_318(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_320(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_320(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_322(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_322(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_324(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_324(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_326(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_326(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_328(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: v77 = v73 + 4 * v75
f_328(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_329(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 4 + v78 = v77
f_329(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_330(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_330(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_331(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_331(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_332(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_332(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_333(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: v142 = v71 + v79
f_333(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_334(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_334(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_335(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v144, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_335(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v144, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_336(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v144, v146, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: v146 = 4 + v144 && 4 <= v146
f_336(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v144, v146, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_337(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v144, v146, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_337(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v144, v146, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_338(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v144, v146, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_338(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v144, v146, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_307(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v144, v146, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: v15 + v13 <= 1 + v16 && 1 <= v1 && 4 <= v2 && 1 <= v3 && 4 <= v4 && 1 <= v5 && 4 <= v6 && 1 <= v7 && 4 <= v8 && 1 <= v9 && 8 <= v10 && 1 <= v11 && 8 <= v12 && 1 <= v13 && 1 <= v15 && 1 <= v16 && 4 <= v69 && 0 <= v73 && 4 <= v77 && 0 <= v78 && 0 <= v144 && 4 <= v146 && v1 <= v2 && v3 <= v4 && v5 <= v6 && v7 <= v8 && v9 <= v10 && v11 <= v12 && v15 <= v16
f_307(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v65, v67, v69, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_308(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v43, v45, v47, v49, v50, v51, v35, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
Combined rules. Obtained 2 rulesP rules:
f_308(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, v15:0, 1, v69:0, v43:0, v45:0, v47:0, v49:0, v50:0, v51:0, v35:0, v65:0, v67:0, v2:0, v4:0, v6:0, v8:0, v10:0, v12:0, v16:0, 3, 7, 4, 8) -> f_308(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, v15:0, 1, 4 + v144:0, v71:0, v73:0, v75:0, 4 + v78:0, v78:0, v79:0, v69:0, v71:0 + v79:0, v144:0, v2:0, v4:0, v6:0, v8:0, v10:0, v12:0, v16:0, 3, 7, 4, 8) :|: v1:0 > 0 && v15:0 + v13:0 <= 1 + v16:0 && v2:0 > 3 && v3:0 > 0 && v4:0 > 3 && v5:0 > 0 && v6:0 > 3 && v7:0 > 0 && v8:0 > 3 && v9:0 > 0 && v78:0 > -1 && v73:0 + 4 * v75:0 = 4 + v78:0 && v10:0 > 7 && v11:0 > 0 && v12:0 > 7 && v79:0 > v71:0 && v13:0 > 0 && v15:0 > 0 && v16:0 > 0 && v69:0 > 3 && v73:0 > -1 && v144:0 > -1 && v2:0 >= v1:0 && v4:0 >= v3:0 && v6:0 >= v5:0 && v8:0 >= v7:0 && v9:0 <= v10:0 && v16:0 >= v15:0 && v12:0 >= v11:0
f_308(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, v15:0, 1, v69:0, v43:0, v45:0, v47:0, v49:0, v50:0, v51:0, v35:0, v65:0, v67:0, v2:0, v4:0, v6:0, v8:0, v10:0, v12:0, v16:0, 3, 7, 4, 8) -> f_308(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, v15:0, 1, 4 + v144:0, v71:0, v73:0, v75:0, 4 + v78:0, v78:0, v79:0, v69:0, v71:0 + v79:0, v144:0, v2:0, v4:0, v6:0, v8:0, v10:0, v12:0, v16:0, 3, 7, 4, 8) :|: v1:0 > 0 && v15:0 + v13:0 <= 1 + v16:0 && v2:0 > 3 && v3:0 > 0 && v4:0 > 3 && v5:0 > 0 && v6:0 > 3 && v7:0 > 0 && v8:0 > 3 && v9:0 > 0 && v78:0 > -1 && v73:0 + 4 * v75:0 = 4 + v78:0 && v10:0 > 7 && v11:0 > 0 && v12:0 > 7 && v79:0 < v71:0 && v13:0 > 0 && v15:0 > 0 && v16:0 > 0 && v69:0 > 3 && v73:0 > -1 && v144:0 > -1 && v2:0 >= v1:0 && v4:0 >= v3:0 && v6:0 >= v5:0 && v8:0 >= v7:0 && v9:0 <= v10:0 && v16:0 >= v15:0 && v12:0 >= v11:0
Filtered unneeded arguments:
   f_308(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31) -> f_308(x1, x2, x3, x4, x5, x6, x7, x9, x11, x21, x22, x23, x24, x25, x26, x27)
Removed division, modulo operations, cleaned up constraints. Obtained 1 rules.P rules:
f_308(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, v15:0, v69:0, v2:0, v4:0, v6:0, v8:0, v10:0, v12:0, v16:0) -> f_308(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, v15:0, 4 + v144:0, v2:0, v4:0, v6:0, v8:0, v10:0, v12:0, v16:0) :|: v15:0 + v13:0 <= 1 + v16:0 && v1:0 > 0 && v2:0 > 3 && v3:0 > 0 && v4:0 > 3 && v5:0 > 0 && v6:0 > 3 && v7:0 > 0 && v8:0 > 3 && v9:0 > 0 && v10:0 > 7 && v11:0 > 0 && v12:0 > 7 && v13:0 > 0 && v15:0 > 0 && v16:0 > 0 && v69:0 > 3 && v144:0 > -1 && v2:0 >= v1:0 && v4:0 >= v3:0 && v6:0 >= v5:0 && v8:0 >= v7:0 && v9:0 <= v10:0 && v12:0 >= v11:0 && v16:0 >= v15:0

----------------------------------------

(16)
Obligation:
Rules:
f_308(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, v15:0, v69:0, v2:0, v4:0, v6:0, v8:0, v10:0, v12:0, v16:0) -> f_308(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, v15:0, 4 + v144:0, v2:0, v4:0, v6:0, v8:0, v10:0, v12:0, v16:0) :|: v15:0 + v13:0 <= 1 + v16:0 && v1:0 > 0 && v2:0 > 3 && v3:0 > 0 && v4:0 > 3 && v5:0 > 0 && v6:0 > 3 && v7:0 > 0 && v8:0 > 3 && v9:0 > 0 && v10:0 > 7 && v11:0 > 0 && v12:0 > 7 && v13:0 > 0 && v15:0 > 0 && v16:0 > 0 && v69:0 > 3 && v144:0 > -1 && v2:0 >= v1:0 && v4:0 >= v3:0 && v6:0 >= v5:0 && v8:0 >= v7:0 && v9:0 <= v10:0 && v12:0 >= v11:0 && v16:0 >= v15:0

----------------------------------------

(17) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(18)
Obligation:
Rules:
f_308(v1:0:0, v3:0:0, v5:0:0, v7:0:0, v9:0:0, v11:0:0, v13:0:0, v15:0:0, v69:0:0, v2:0:0, v4:0:0, v6:0:0, v8:0:0, v10:0:0, v12:0:0, v16:0:0) -> f_308(v1:0:0, v3:0:0, v5:0:0, v7:0:0, v9:0:0, v11:0:0, v13:0:0, v15:0:0, 4 + v144:0:0, v2:0:0, v4:0:0, v6:0:0, v8:0:0, v10:0:0, v12:0:0, v16:0:0) :|: v12:0:0 >= v11:0:0 && v16:0:0 >= v15:0:0 && v9:0:0 <= v10:0:0 && v8:0:0 >= v7:0:0 && v6:0:0 >= v5:0:0 && v4:0:0 >= v3:0:0 && v2:0:0 >= v1:0:0 && v144:0:0 > -1 && v69:0:0 > 3 && v16:0:0 > 0 && v15:0:0 > 0 && v13:0:0 > 0 && v12:0:0 > 7 && v11:0:0 > 0 && v10:0:0 > 7 && v9:0:0 > 0 && v8:0:0 > 3 && v7:0:0 > 0 && v6:0:0 > 3 && v5:0:0 > 0 && v4:0:0 > 3 && v3:0:0 > 0 && v2:0:0 > 3 && v1:0:0 > 0 && v15:0:0 + v13:0:0 <= 1 + v16:0:0

----------------------------------------

(19) IntTRSPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, v1:0:0, v3:0:0, v5:0:0, v7:0:0, v9:0:0, v11:0:0, v13:0:0, v15:0:0, v69:0:0, v2:0:0, v4:0:0, v6:0:0, v8:0:0, v10:0:0, v12:0:0, v16:0:0) -> f(1, v1:0:0, v3:0:0, v5:0:0, v7:0:0, v9:0:0, v11:0:0, v13:0:0, v15:0:0, 4 + v144:0:0, v2:0:0, v4:0:0, v6:0:0, v8:0:0, v10:0:0, v12:0:0, v16:0:0) :|: pc = 1 && (v12:0:0 >= v11:0:0 && v16:0:0 >= v15:0:0 && v9:0:0 <= v10:0:0 && v8:0:0 >= v7:0:0 && v6:0:0 >= v5:0:0 && v4:0:0 >= v3:0:0 && v2:0:0 >= v1:0:0 && v144:0:0 > -1 && v69:0:0 > 3 && v16:0:0 > 0 && v15:0:0 > 0 && v13:0:0 > 0 && v12:0:0 > 7 && v11:0:0 > 0 && v10:0:0 > 7 && v9:0:0 > 0 && v8:0:0 > 3 && v7:0:0 > 0 && v6:0:0 > 3 && v5:0:0 > 0 && v4:0:0 > 3 && v3:0:0 > 0 && v2:0:0 > 3 && v1:0:0 > 0 && v15:0:0 + v13:0:0 <= 1 + v16:0:0)
Witness term starting non-terminating reduction: f(1, 1, 8, 16, 8, 8, 1, 8, 1, 4, 7, 12, 18, 14, 22, 16, 8)
----------------------------------------

(20)
NO

----------------------------------------

(21) SEGraph to IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 155 rulesP rules:
f_184 -> f_185(v1, v2, 3, 1, 4) :|: 1 <= v1 && v2 = 3 + v1 && 4 <= v2
f_185(v1, v2, 3, 1, 4) -> f_186(v1, v3, v2, v4, 3, 1, 4) :|: 1 <= v3 && v4 = 3 + v3 && 4 <= v4
f_186(v1, v3, v2, v4, 3, 1, 4) -> f_187(v1, v3, v5, v2, v4, v6, 3, 1, 4) :|: 1 <= v5 && v6 = 3 + v5 && 4 <= v6
f_187(v1, v3, v5, v2, v4, v6, 3, 1, 4) -> f_188(v1, v3, v5, v7, v2, v4, v6, v8, 3, 1, 4) :|: 1 <= v7 && v8 = 3 + v7 && 4 <= v8
f_188(v1, v3, v5, v7, v2, v4, v6, v8, 3, 1, 4) -> f_189(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 3, 7, 1, 4, 8) :|: 1 <= v9 && v10 = 7 + v9 && 8 <= v10
f_189(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 3, 7, 1, 4, 8) -> f_190(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, v12, 3, 7, 1, 4, 8) :|: 1 <= v11 && v12 = 7 + v11 && 8 <= v12
f_190(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, v12, 3, 7, 1, 4, 8) -> f_191(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) :|: TRUE
f_191(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) -> f_192(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) :|: TRUE
f_192(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) -> f_193(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) :|: TRUE
f_193(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) -> f_194(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) :|: TRUE
f_194(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) -> f_195(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) :|: TRUE
f_195(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) -> f_196(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) :|: TRUE
f_196(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) -> f_197(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) :|: 0 = 0
f_197(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) -> f_198(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) :|: v13 < 1
f_197(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) -> f_199(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) :|: 1 <= v13
f_198(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) -> f_200(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: 0 = 0
f_199(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) -> f_201(v1, v3, v5, v7, v9, v11, v13, 0, v2, v4, v6, v8, v10, v12, 3, 7, 1, 4, 8) :|: 0 = 0
f_200(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_202(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: TRUE
f_201(v1, v3, v5, v7, v9, v11, v13, 0, v2, v4, v6, v8, v10, v12, 3, 7, 1, 4, 8) -> f_203(v1, v3, v5, v7, v9, v11, v13, 0, v2, v4, v6, v8, v10, v12, 3, 7, 1, 4, 8) :|: TRUE
f_202(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_204(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: TRUE
f_203(v1, v3, v5, v7, v9, v11, v13, 0, v2, v4, v6, v8, v10, v12, 3, 7, 1, 4, 8) -> f_205(v1, v3, v5, v7, v9, v11, v13, 0, v2, v4, v6, v8, v10, v12, 3, 7, 1, 4, 8) :|: TRUE
f_204(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_206(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: TRUE
f_205(v1, v3, v5, v7, v9, v11, v13, 0, v2, v4, v6, v8, v10, v12, 3, 7, 1, 4, 8) -> f_207(v1, v3, v5, v7, v9, v11, v13, 0, v2, v4, v6, v8, v10, v12, 3, 7, 1, 4, 8) :|: 0 = 0
f_206(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_208(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: TRUE
f_207(v1, v3, v5, v7, v9, v11, v13, 0, v2, v4, v6, v8, v10, v12, 3, 7, 1, 4, 8) -> f_209(v1, v3, v5, v7, v9, v11, v13, 0, v2, v4, v6, v8, v10, v12, 3, 7, 1, 4, 8) :|: 0 = 0
f_208(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_210(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: 0 = 0
f_209(v1, v3, v5, v7, v9, v11, v13, 0, v2, v4, v6, v8, v10, v12, 3, 7, 1, 4, 8) -> f_211(v1, v3, v5, v7, v9, v11, v13, 0, v15, v2, v4, v6, v8, v10, v12, v16, 3, 7, 1, 4, 8) :|: 1 <= v15 && v15 + v13 = 1 + v16
f_210(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_212(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: 0 = 0
f_211(v1, v3, v5, v7, v9, v11, v13, 0, v15, v2, v4, v6, v8, v10, v12, v16, 3, 7, 1, 4, 8) -> f_213(v1, v3, v5, v7, v9, v11, v13, 0, v15, v2, v4, v6, v8, v10, v12, v16, 3, 7, 1, 4, 8) :|: 0 = 0
f_212(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_214(v1, v3, v5, v7, v9, v11, v13, 1, v17, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: 1 <= v17
f_213(v1, v3, v5, v7, v9, v11, v13, 0, v15, v2, v4, v6, v8, v10, v12, v16, 3, 7, 1, 4, 8) -> f_215(v1, v3, v5, v7, v9, v11, v13, 0, v15, v2, v4, v6, v8, v10, v12, v16, 3, 7, 1, 4, 8) :|: TRUE
f_214(v1, v3, v5, v7, v9, v11, v13, 1, v17, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_216(v1, v3, v5, v7, v9, v11, v13, 1, v17, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: 0 = 0
f_215(v1, v3, v5, v7, v9, v11, v13, 0, v15, v2, v4, v6, v8, v10, v12, v16, 3, 7, 1, 4, 8) -> f_217(v1, v3, v5, v7, v9, v11, v13, 0, v15, v2, v4, v6, v8, v10, v12, v16, 3, 7, 1, 4, 8) :|: 0 = 0
f_216(v1, v3, v5, v7, v9, v11, v13, 1, v17, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_218(v1, v3, v5, v7, v9, v11, v13, 1, v17, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: TRUE
f_217(v1, v3, v5, v7, v9, v11, v13, 0, v15, v2, v4, v6, v8, v10, v12, v16, 3, 7, 1, 4, 8) -> f_219(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_218(v1, v3, v5, v7, v9, v11, v13, 1, v17, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_220(v1, v3, v5, v7, v9, v11, v13, 1, v17, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: 0 = 0
f_219(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_221(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_220(v1, v3, v5, v7, v9, v11, v13, 1, v17, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_222(v1, v3, v5, v7, v9, v11, v13, 1, v17, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: 0 = 0
f_221(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_223(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_222(v1, v3, v5, v7, v9, v11, v13, 1, v17, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_224(v1, v3, v5, v7, v9, v11, v13, 1, v17, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: TRUE
f_223(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_225(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_224(v1, v3, v5, v7, v9, v11, v13, 1, v17, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_226(v1, v3, v5, v7, v9, v11, v13, 1, v17, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: TRUE
f_225(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_227(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_226(v1, v3, v5, v7, v9, v11, v13, 1, v17, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_228(v1, v3, v5, v7, v9, v11, v13, 1, v17, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: 0 = 0
f_227(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_229(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_228(v1, v3, v5, v7, v9, v11, v13, 1, v17, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_230(v1, v3, v5, v7, v9, v11, v13, 1, v17, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: TRUE
f_229(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_231(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_230(v1, v3, v5, v7, v9, v11, v13, 1, v17, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_232(v1, v3, v5, v7, v9, v11, v13, 1, v17, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: TRUE
f_231(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_233(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_232(v1, v3, v5, v7, v9, v11, v13, 1, v17, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_234(v1, v3, v5, v7, v9, v11, v13, 1, v17, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: 0 = 0
f_233(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_235(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_234(v1, v3, v5, v7, v9, v11, v13, 1, v17, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_236(v1, v3, v5, v7, v9, v11, v13, 1, v17, v24, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: TRUE
f_235(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_237(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_236(v1, v3, v5, v7, v9, v11, v13, 1, v17, v24, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_238(v1, v3, v5, v7, v9, v11, v13, 1, v17, v24, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: 0 = 0
f_237(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_239(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_238(v1, v3, v5, v7, v9, v11, v13, 1, v17, v24, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_240(v1, v3, v5, v7, v9, v11, v13, 1, v17, v24, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: 0 = 0
f_239(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_241(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 5) :|: v26 = v15 + 4 * v13 && 5 <= v26
f_240(v1, v3, v5, v7, v9, v11, v13, 1, v17, v24, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_242(v1, v3, v5, v7, v9, v11, v13, 1, v17, v24, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: 0 = 0
f_241(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 5) -> f_243(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 5) :|: 4 + v27 = v26 && 1 <= v27
f_242(v1, v3, v5, v7, v9, v11, v13, 1, v17, v24, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_244(v1, v3, v5, v7, v9, v11, v13, 1, v17, v24, v28, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8, 5) :|: v28 = 4 + v17 && 5 <= v28
f_243(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 5) -> f_245(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 5) :|: TRUE
f_244(v1, v3, v5, v7, v9, v11, v13, 1, v17, v24, v28, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8, 5) -> f_246(v1, v3, v5, v7, v9, v11, v13, 1, v17, v24, v28, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8, 5) :|: 4 + v17 = v28
f_245(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 5) -> f_247(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: v22 != v29 && v15 < v27 && 2 <= v27 && 6 <= v26
f_245(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 5) -> f_248(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v29, v26, v27, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 5) :|: v22 = v29
f_246(v1, v3, v5, v7, v9, v11, v13, 1, v17, v24, v28, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8, 5) -> f_249(v1, v3, v5, v7, v9, v11, v13, 1, v17, v24, v28, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8, 5) :|: 0 = 0
f_247(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_250(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: 0 = 0
f_248(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v29, v26, v27, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 5) -> f_251(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v29, v26, v27, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 5) :|: 0 = 0
f_249(v1, v3, v5, v7, v9, v11, v13, 1, v17, v24, v28, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8, 5) -> f_252(v1, v3, v5, v7, v9, v11, v13, 1, v17, v24, v28, 0, v2, v4, v6, v8, v10, v12, 3, 7, 4, 8, 5) :|: 0 = 0
f_250(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_253(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: TRUE
f_251(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v29, v26, v27, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 5) -> f_254(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v29, v26, v27, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 5) :|: TRUE
f_252(v1, v3, v5, v7, v9, v11, v13, 1, v17, v24, v28, 0, v2, v4, v6, v8, v10, v12, 3, 7, 4, 8, 5) -> f_255(v1, v3, v5, v7, v9, v11, v13, 1, v17, v24, v28, 0, v2, v4, v6, v8, v10, v12, 3, 7, 4, 8, 5) :|: TRUE
f_253(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_256(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: 0 = 0
f_254(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v29, v26, v27, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 5) -> f_257(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v29, v26, v27, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 5) :|: TRUE
f_255(v1, v3, v5, v7, v9, v11, v13, 1, v17, v24, v28, 0, v2, v4, v6, v8, v10, v12, 3, 7, 4, 8, 5) -> f_258(v1, v3, v5, v7, v9, v11, v13, 1, v17, v24, v28, 0, v2, v4, v6, v8, v10, v12, 3, 7, 4, 8, 5) :|: TRUE
f_256(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_259(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: 0 = 0
f_257(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v29, v26, v27, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 5) -> f_260(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v29, v26, v27, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 5) :|: TRUE
f_258(v1, v3, v5, v7, v9, v11, v13, 1, v17, v24, v28, 0, v2, v4, v6, v8, v10, v12, 3, 7, 4, 8, 5) -> f_261(v1, v3, v5, v7, v9, v11, v13, 1, v17, v24, v28, 0, v2, v4, v6, v8, v10, v12, 3, 7, 4, 8, 5) :|: TRUE
f_259(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_262(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: 0 = 0
f_260(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v29, v26, v27, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 5) -> f_263(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v29, v26, v27, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 5) :|: 0 = 0
f_261(v1, v3, v5, v7, v9, v11, v13, 1, v17, v24, v28, 0, v2, v4, v6, v8, v10, v12, 3, 7, 4, 8, 5) -> f_264(v1, v3, v5, v7, v9, v11, v13, 1, v17, v24, v28, 0, v2, v4, v6, v8, v10, v12, 3, 7, 4, 8, 5) :|: 0 = 0
f_262(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_265(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: v26 = v15 + 4 * v13
f_265(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_266(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: 4 + v27 = v26
f_266(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_267(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: 0 = 0
f_267(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_268(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: 0 = 0
f_268(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_269(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: 0 = 0
f_269(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_270(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v31, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: v31 = v22 + v29
f_270(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v31, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_271(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v31, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: TRUE
f_271(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v31, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_272(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: TRUE
f_272(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_273(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v31, v33, v35, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: v35 = 4 + v33 && 4 <= v35
f_273(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v31, v33, v35, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_274(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v31, v33, v35, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: TRUE
f_274(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v31, v33, v35, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_275(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v31, v33, v35, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: TRUE
f_275(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v31, v33, v35, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_276(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v22, v26, v27, v29, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: 0 = 0
f_276(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v22, v26, v27, v29, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_277(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: TRUE
f_277(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_278(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: TRUE
f_278(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_279(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: TRUE
f_279(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_280(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: 0 = 0
f_280(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_281(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v27, v29, v26, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: v49 = v45 + 4 * v47
f_281(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v27, v29, v26, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_282(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v29, v26, v27, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: 4 + v50 = v49 && 4 <= v49
f_282(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v29, v26, v27, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_283(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: TRUE
f_283(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_284(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: v43 != v51
f_283(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_285(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v51, v45, v47, v49, v50, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: v43 = v51
f_284(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_286(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: 0 = 0
f_285(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v51, v45, v47, v49, v50, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_287(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v51, v45, v47, v49, v50, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: 0 = 0
f_286(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_288(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: TRUE
f_287(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v51, v45, v47, v49, v50, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_289(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v51, v45, v47, v49, v50, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: TRUE
f_288(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_290(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: 0 = 0
f_289(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v51, v45, v47, v49, v50, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_291(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v51, v45, v47, v49, v50, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: TRUE
f_290(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_292(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: 0 = 0
f_291(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v51, v45, v47, v49, v50, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_293(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v51, v45, v47, v49, v50, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: TRUE
f_292(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_294(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: 0 = 0
f_293(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v51, v45, v47, v49, v50, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_295(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v51, v45, v47, v49, v50, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: 0 = 0
f_294(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_296(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 2) :|: v49 = v45 + 4 * v47
f_296(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 2) -> f_297(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 4 + v50 = v49
f_297(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_298(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_298(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_299(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_299(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_300(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_300(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_301(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v65, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: v65 = v43 + v51
f_301(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v65, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_302(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v65, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_302(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v65, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_303(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_303(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_304(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v65, v67, v69, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: v69 = 4 + v67 && 4 <= v69
f_304(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v65, v67, v69, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_305(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v65, v67, v69, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_305(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v65, v67, v69, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_306(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v65, v67, v69, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_306(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v65, v67, v69, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_307(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v65, v67, v69, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_307(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v65, v67, v69, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_308(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v43, v45, v47, v49, v50, v51, v35, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_308(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v43, v45, v47, v49, v50, v51, v35, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_309(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_309(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_310(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v47, v49, v50, v51, v45, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_310(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v47, v49, v50, v51, v45, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_311(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v47, v49, v50, v51, v45, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_311(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v47, v49, v50, v51, v45, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_312(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v49, v50, v51, v45, v47, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_312(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v49, v50, v51, v45, v47, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_313(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v50, v51, v45, v47, v49, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: v77 = v73 + 4 * v75
f_313(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v50, v51, v45, v47, v49, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_314(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v51, v45, v47, v49, v50, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 4 + v78 = v77 && 4 <= v77
f_314(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v51, v45, v47, v49, v50, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_315(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_315(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_316(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: v71 != v79
f_315(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_317(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v79, v73, v75, v77, v78, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: v71 = v79
f_316(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_318(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_317(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v79, v73, v75, v77, v78, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_319(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v79, v73, v75, v77, v78, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_318(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_320(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_319(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v79, v73, v75, v77, v78, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_321(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v79, v73, v75, v77, v78, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_320(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_322(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_321(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v79, v73, v75, v77, v78, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_323(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v79, v73, v75, v77, v78, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_322(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_324(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_323(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v79, v73, v75, v77, v78, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_325(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v79, v73, v75, v77, v78, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_324(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_326(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_325(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v79, v73, v75, v77, v78, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_327(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v79, v73, v75, v77, v78, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_326(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_328(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: v77 = v73 + 4 * v75
f_328(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_329(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 4 + v78 = v77
f_329(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_330(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_330(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_331(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_331(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_332(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_332(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_333(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: v142 = v71 + v79
f_333(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_334(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_334(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_335(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v144, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_335(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v144, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_336(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v144, v146, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: v146 = 4 + v144 && 4 <= v146
f_336(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v144, v146, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_337(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v144, v146, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_337(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v144, v146, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_338(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v144, v146, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_338(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v144, v146, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_307(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v144, v146, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
Combined rules. Obtained 11 rulesP rules:
f_184 -> f_315(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, v15:0, 1, 4 + v67:0, v71:0, v73:0, v75:0, v73:0 + 4 * v75:0, v78:0, v79:0, v45:0, v47:0, 4 + v50:0, v50:0, v51:0, 4 + v33:0, v43:0, v43:0 + v51:0, v67:0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, v16:0, 3, 7, 4, 8) :|: v27:0 > 1 && v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 > 0 && v15:0 + v13:0 = 1 + v16:0 && v15:0 > 0 && v15:0 + 4 * v13:0 = 4 + v27:0 && v27:0 > v15:0 && v29:0 > v22:0 && v33:0 > -1 && v50:0 > -1 && v45:0 + 4 * v47:0 = 4 + v50:0 && v51:0 > v43:0 && v67:0 > -1 && v73:0 + 4 * v75:0 = 4 + v78:0 && v73:0 + 4 * v75:0 > 3
f_184 -> f_315(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, v15:0, 1, 4 + v67:0, v71:0, v73:0, v75:0, v73:0 + 4 * v75:0, v78:0, v79:0, v45:0, v47:0, 4 + v50:0, v50:0, v51:0, 4 + v33:0, v43:0, v43:0 + v51:0, v67:0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, v16:0, 3, 7, 4, 8) :|: v27:0 > 1 && v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 > 0 && v15:0 + v13:0 = 1 + v16:0 && v15:0 > 0 && v15:0 + 4 * v13:0 = 4 + v27:0 && v27:0 > v15:0 && v29:0 > v22:0 && v33:0 > -1 && v50:0 > -1 && v45:0 + 4 * v47:0 = 4 + v50:0 && v51:0 < v43:0 && v67:0 > -1 && v73:0 + 4 * v75:0 = 4 + v78:0 && v73:0 + 4 * v75:0 > 3
f_184 -> f_315(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, v15:0, 1, 4 + v67:0, v71:0, v73:0, v75:0, v73:0 + 4 * v75:0, v78:0, v79:0, v45:0, v47:0, 4 + v50:0, v50:0, v51:0, 4 + v33:0, v43:0, v43:0 + v51:0, v67:0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, v16:0, 3, 7, 4, 8) :|: v27:0 > 1 && v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 > 0 && v15:0 + v13:0 = 1 + v16:0 && v15:0 > 0 && v15:0 + 4 * v13:0 = 4 + v27:0 && v27:0 > v15:0 && v29:0 < v22:0 && v33:0 > -1 && v50:0 > -1 && v45:0 + 4 * v47:0 = 4 + v50:0 && v51:0 > v43:0 && v67:0 > -1 && v73:0 + 4 * v75:0 = 4 + v78:0 && v73:0 + 4 * v75:0 > 3
f_184 -> f_315(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, v15:0, 1, 4 + v67:0, v71:0, v73:0, v75:0, v73:0 + 4 * v75:0, v78:0, v79:0, v45:0, v47:0, 4 + v50:0, v50:0, v51:0, 4 + v33:0, v43:0, v43:0 + v51:0, v67:0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, v16:0, 3, 7, 4, 8) :|: v27:0 > 1 && v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 > 0 && v15:0 + v13:0 = 1 + v16:0 && v15:0 > 0 && v15:0 + 4 * v13:0 = 4 + v27:0 && v27:0 > v15:0 && v29:0 < v22:0 && v33:0 > -1 && v50:0 > -1 && v45:0 + 4 * v47:0 = 4 + v50:0 && v51:0 < v43:0 && v67:0 > -1 && v73:0 + 4 * v75:0 = 4 + v78:0 && v73:0 + 4 * v75:0 > 3
f_184 -> f_264(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 1, v17:0, v24:0, 4 + v17:0, 0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, 3, 7, 4, 8, 5) :|: v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 < 1 && v17:0 > 0
f_315(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, v15:0, 1, v69:0, v71:0, v73:0, v75:0, v77:0, v78:0, v71:0, v45:0, v47:0, v49:0, v50:0, v51:0, v35:0, v43:0, v65:0, v67:0, v2:0, v4:0, v6:0, v8:0, v10:0, v12:0, v16:0, 3, 7, 4, 8) -> f_327(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, v15:0, 1, v69:0, v71:0, v73:0, v75:0, v77:0, v78:0, v45:0, v47:0, v49:0, v50:0, v51:0, v35:0, v43:0, v65:0, v67:0, v2:0, v4:0, v6:0, v8:0, v10:0, v12:0, v16:0, 3, 7, 4, 8) :|: TRUE
f_184 -> f_263(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, v15:0, 1, v22:0, 4 + v27:0, v27:0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, v16:0, 3, 7, 4, 8, 5) :|: v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 > 0 && v15:0 + v13:0 = 1 + v16:0 && v15:0 > 0 && v27:0 > 0 && v15:0 + 4 * v13:0 = 4 + v27:0
f_184 -> f_295(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, v15:0, 1, 4 + v33:0, v43:0, v45:0, v47:0, v45:0 + 4 * v47:0, v50:0, 4 + v27:0, v27:0, v29:0, v22:0, v22:0 + v29:0, v33:0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, v16:0, 3, 7, 4, 8, 6, 2) :|: v27:0 > 1 && v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 > 0 && v15:0 + v13:0 = 1 + v16:0 && v15:0 > 0 && v15:0 + 4 * v13:0 = 4 + v27:0 && v27:0 > v15:0 && v29:0 > v22:0 && v33:0 > -1 && v45:0 + 4 * v47:0 = 4 + v50:0 && v45:0 + 4 * v47:0 > 3
f_184 -> f_295(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, v15:0, 1, 4 + v33:0, v43:0, v45:0, v47:0, v45:0 + 4 * v47:0, v50:0, 4 + v27:0, v27:0, v29:0, v22:0, v22:0 + v29:0, v33:0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, v16:0, 3, 7, 4, 8, 6, 2) :|: v27:0 > 1 && v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 > 0 && v15:0 + v13:0 = 1 + v16:0 && v15:0 > 0 && v15:0 + 4 * v13:0 = 4 + v27:0 && v27:0 > v15:0 && v29:0 < v22:0 && v33:0 > -1 && v45:0 + 4 * v47:0 = 4 + v50:0 && v45:0 + 4 * v47:0 > 3
f_315(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, v15:0, 1, v69:0, v71:0, v73:0, v75:0, 4 + v78:0, v78:0, v79:0, v45:0, v47:0, v49:0, v50:0, v51:0, v35:0, v43:0, v65:0, v67:0, v2:0, v4:0, v6:0, v8:0, v10:0, v12:0, v16:0, 3, 7, 4, 8) -> f_315(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, v15:0, 1, 4 + v144:0, v71:1, v73:1, v75:1, v73:1 + 4 * v75:1, v78:1, v79:1, v73:0, v75:0, 4 + v78:0, v78:0, v79:0, v69:0, v71:0, v71:0 + v79:0, v144:0, v2:0, v4:0, v6:0, v8:0, v10:0, v12:0, v16:0, 3, 7, 4, 8) :|: v79:0 > v71:0 && v73:0 + 4 * v75:0 = 4 + v78:0 && v144:0 > -1 && v73:1 + 4 * v75:1 = 4 + v78:1 && v73:1 + 4 * v75:1 > 3
f_315(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, v15:0, 1, v69:0, v71:0, v73:0, v75:0, 4 + v78:0, v78:0, v79:0, v45:0, v47:0, v49:0, v50:0, v51:0, v35:0, v43:0, v65:0, v67:0, v2:0, v4:0, v6:0, v8:0, v10:0, v12:0, v16:0, 3, 7, 4, 8) -> f_315(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, v15:0, 1, 4 + v144:0, v71:1, v73:1, v75:1, v73:1 + 4 * v75:1, v78:1, v79:1, v73:0, v75:0, 4 + v78:0, v78:0, v79:0, v69:0, v71:0, v71:0 + v79:0, v144:0, v2:0, v4:0, v6:0, v8:0, v10:0, v12:0, v16:0, 3, 7, 4, 8) :|: v79:0 < v71:0 && v73:0 + 4 * v75:0 = 4 + v78:0 && v144:0 > -1 && v73:1 + 4 * v75:1 = 4 + v78:1 && v73:1 + 4 * v75:1 > 3
Filtered unneeded arguments:
   f_315(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37) -> f_315(x12, x13, x14, x15, x16, x17)
Removed division, modulo operations, cleaned up constraints. Obtained 8 rules.P rules:
f_184 -> f_315(v71:0, v73:0, v75:0, v73:0 + 4 * v75:0, v78:0, v79:0) :|: v73:0 + 4 * v75:0 = 4 + v78:0 && v73:0 + 4 * v75:0 > 3
f_184 -> f_264(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 1, v17:0, v24:0, 4 + v17:0, 0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, 3, 7, 4, 8, 5) :|: v1:0 > 0 && v3:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v17:0 > 0 && v13:0 < 1
f_315(v71:0, v73:0, v75:0, v77:0, v78:0, v71:01) -> f_327(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, v15:0, 1, v69:0, v71:0, v73:0, v75:0, v77:0, v78:0, v45:0, v47:0, v49:0, v50:0, v51:0, v35:0, v43:0, v65:0, v67:0, v2:0, v4:0, v6:0, v8:0, v10:0, v12:0, v16:0, 3, 7, 4, 8) :|: TRUE && v71:0 = v71:01
f_184 -> f_263(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, v15:0, 1, v22:0, 4 + v27:0, v27:0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, v16:0, 3, 7, 4, 8, 5) :|: v1:0 > 0 && v3:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 > 0 && v15:0 + v13:0 = 1 + v16:0 && v15:0 > 0 && v15:0 + 4 * v13:0 = 4 + v27:0 && v27:0 > 0
f_184 -> f_295(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, v15:0, 1, 4 + v33:0, v43:0, v45:0, v47:0, v45:0 + 4 * v47:0, v50:0, 4 + v27:0, v27:0, v29:0, v22:0, v22:0 + v29:0, v33:0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, v16:0, 3, 7, 4, 8, 6, 2) :|: v3:0 > 0 && v27:0 > 1 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 > 0 && v15:0 + v13:0 = 1 + v16:0 && v15:0 > 0 && v15:0 + 4 * v13:0 = 4 + v27:0 && v27:0 > v15:0 && v29:0 > v22:0 && v33:0 > -1 && v45:0 + 4 * v47:0 > 3 && v45:0 + 4 * v47:0 = 4 + v50:0
f_184 -> f_295(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, v15:0, 1, 4 + v33:0, v43:0, v45:0, v47:0, v45:0 + 4 * v47:0, v50:0, 4 + v27:0, v27:0, v29:0, v22:0, v22:0 + v29:0, v33:0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, v16:0, 3, 7, 4, 8, 6, 2) :|: v3:0 > 0 && v27:0 > 1 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 > 0 && v15:0 + v13:0 = 1 + v16:0 && v15:0 > 0 && v15:0 + 4 * v13:0 = 4 + v27:0 && v27:0 > v15:0 && v29:0 < v22:0 && v33:0 > -1 && v45:0 + 4 * v47:0 > 3 && v45:0 + 4 * v47:0 = 4 + v50:0
f_315(v71:0, v73:0, v75:0, sum~cons_4~v78:0, v78:0, v79:0) -> f_315(v71:1, v73:1, v75:1, v73:1 + 4 * v75:1, v78:1, v79:1) :|: v73:0 + 4 * v75:0 = 4 + v78:0 && v79:0 > v71:0 && v73:1 + 4 * v75:1 > 3 && v73:1 + 4 * v75:1 = 4 + v78:1 && sum~cons_4~v78:0 = 4 + v78:0
f_315(v71:0, v73:0, v75:0, sum~cons_4~v78:0, v78:0, v79:0) -> f_315(v71:1, v73:1, v75:1, v73:1 + 4 * v75:1, v78:1, v79:1) :|: v73:0 + 4 * v75:0 = 4 + v78:0 && v79:0 < v71:0 && v73:1 + 4 * v75:1 > 3 && v73:1 + 4 * v75:1 = 4 + v78:1 && sum~cons_4~v78:0 = 4 + v78:0

----------------------------------------

(22)
Obligation:
Rules:
f_184 -> f_315(v71:0, v73:0, v75:0, v73:0 + 4 * v75:0, v78:0, v79:0) :|: v73:0 + 4 * v75:0 = 4 + v78:0 && v73:0 + 4 * v75:0 > 3
f_184 -> f_264(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 1, v17:0, v24:0, 4 + v17:0, 0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, 3, 7, 4, 8, 5) :|: v1:0 > 0 && v3:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v17:0 > 0 && v13:0 < 1
f_315(x, x1, x2, x3, x4, x5) -> f_327(x6, x7, x8, x9, x10, x11, x12, 0, x13, 1, x14, x, x1, x2, x3, x4, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, 3, 7, 4, 8) :|: TRUE && x = x5
f_184 -> f_263(x31, x32, x33, x34, x35, x36, x37, 0, x38, 1, x39, 4 + x40, x40, 3 + x31, 3 + x32, 3 + x33, 3 + x34, 7 + x35, 7 + x36, x41, 3, 7, 4, 8, 5) :|: x31 > 0 && x32 > 0 && x33 > 0 && x34 > 0 && x35 > 0 && x36 > 0 && x37 > 0 && x38 + x37 = 1 + x41 && x38 > 0 && x38 + 4 * x37 = 4 + x40 && x40 > 0
f_184 -> f_295(x42, x43, x44, x45, x46, x47, x48, 0, x49, 1, 4 + x50, x51, x52, x53, x52 + 4 * x53, x54, 4 + x55, x55, x56, x57, x57 + x56, x50, 3 + x42, 3 + x43, 3 + x44, 3 + x45, 7 + x46, 7 + x47, x58, 3, 7, 4, 8, 6, 2) :|: x43 > 0 && x55 > 1 && x42 > 0 && x44 > 0 && x45 > 0 && x46 > 0 && x47 > 0 && x48 > 0 && x49 + x48 = 1 + x58 && x49 > 0 && x49 + 4 * x48 = 4 + x55 && x55 > x49 && x56 > x57 && x50 > -1 && x52 + 4 * x53 > 3 && x52 + 4 * x53 = 4 + x54
f_184 -> f_295(x59, x60, x61, x62, x63, x64, x65, 0, x66, 1, 4 + x67, x68, x69, x70, x69 + 4 * x70, x71, 4 + x72, x72, x73, x74, x74 + x73, x67, 3 + x59, 3 + x60, 3 + x61, 3 + x62, 7 + x63, 7 + x64, x75, 3, 7, 4, 8, 6, 2) :|: x60 > 0 && x72 > 1 && x59 > 0 && x61 > 0 && x62 > 0 && x63 > 0 && x64 > 0 && x65 > 0 && x66 + x65 = 1 + x75 && x66 > 0 && x66 + 4 * x65 = 4 + x72 && x72 > x66 && x73 < x74 && x67 > -1 && x69 + 4 * x70 > 3 && x69 + 4 * x70 = 4 + x71
f_315(x76, x77, x78, x79, x80, x81) -> f_315(x82, x83, x84, x83 + 4 * x84, x85, x86) :|: x77 + 4 * x78 = 4 + x80 && x81 > x76 && x83 + 4 * x84 > 3 && x83 + 4 * x84 = 4 + x85 && x79 = 4 + x80
f_315(x87, x88, x89, x90, x91, x92) -> f_315(x93, x94, x95, x94 + 4 * x95, x96, x97) :|: x88 + 4 * x89 = 4 + x91 && x92 < x87 && x94 + 4 * x95 > 3 && x94 + 4 * x95 = 4 + x96 && x90 = 4 + x91
Start term: f_184

----------------------------------------

(23) IRSToKoat (EQUIVALENT)
Convert an IRS to a koat problem
----------------------------------------

(24)
Obligation:
(GOAL COMPLEXITY)
(STARTTERM (FUNCTIONSYMBOLS f_184))
(VAR x290 x160 x281 x280 x162 x283 x161 x282 x164 x285 x163 x284 x166 x287 x165 x286 x168 x289 x167 x288 x169 x270 x151 x272 x150 x271 x153 x274 x152 x273 x155 x276 x154 x275 x157 x278 x156 x277 x159 x158 x279 x380 x140 x261 x382 x260 x381 x142 x263 x141 x262 x383 x144 x265 x143 x264 x146 x267 x145 x266 x148 x269 x147 x268 x149 x250 x371 x370 x131 x252 x373 x130 x251 x372 x133 x254 x375 x132 x253 x374 x135 x256 x377 x134 x255 x376 x137 x258 x379 x136 x257 x378 x139 x138 x259 x193 x192 x195 x194 x197 x196 x199 x198 x'' k14 k15 k16 k17 k10 k11 k12 k13 x191 x190 x182 x181 x184 x183 x186 x185 x188 x187 x189 x180 x171 x292 x170 x291 x173 x294 x172 x293 x175 x296 x174 x295 x177 x298 x176 x297 x179 x178 x299 k36 k37 k38 k39 k32 k33 k34 k35 k30 k31 k29 k25 k26 k27 k28 k21 k22 k23 k24 k20 k18 k19 k58 k59 k54 k55 k56 k57 k50 k51 k52 k53 k47 k48 k49 k43 k44 k45 k46 k40 k41 k42 k76 k77 k78 k79 k72 k73 k74 k75 k70 k71 x k69 k65 k66 k67 k68 k61 k62 k63 k64 k60 k98 k99 k94 k95 k96 k97 k90 k91 k92 k93 x28 x29 x24 x25 x26 x27 x20 x21 x22 x23 k87 k88 k89 k83 k84 k85 k86 k80 k81 k82 x17 x18 x19 x13 x14 x15 x16 x10 x11 x12 x46 x47 x48 x49 x42 x43 x44 x45 x40 x41 x39 x35 x36 x37 x38 x31 x32 x33 x34 x30 x70 x68 x69 x64 x65 x66 x67 x60 x61 x62 x63 k7 k8 k5 k6 k9 k0 k3 k4 k1 k2 x57 x58 x59 x53 x54 x55 x56 x50 x51 x52 x90 x91 x92 x86 k110 x87 x88 x89 x82 x83 x84 x85 k111 x80 x81 k107 k106 k105 k104 x79 k109 k108 x75 x76 x77 x78 x71 k103 x72 k102 x73 k101 x74 k100 x97 x98 x99 x93 x94 x95 x96 x209 x208 x329 x320 x201 x322 x200 x321 x203 x324 x202 x323 x205 x326 x204 x325 x207 x328 x206 x327 x319 x318 x311 x310 x313 x312 x315 x314 x317 x316 x308 x307 x309 x300 x302 x301 x304 x303 x306 x305 x360 x120 x241 x362 x240 x361 x122 x243 x364 x121 x242 x363 x124 x245 x366 x123 x244 x365 x126 x247 x368 x125 x246 x367 x128 x249 x127 x248 x369 x129 x230 x351 x350 x111 x232 x353 x110 x231 x352 x113 x234 x355 x112 x233 x354 x115 x236 x357 x114 x235 x356 x117 x238 x359 x116 x237 x358 x119 x118 x239 x109 x4 x5 x2 x3 x8 x340 x9 x6 x100 x221 x342 x7 x220 x341 x102 x223 x344 x101 x222 x343 x104 x225 x346 x103 x224 x345 x106 x227 x348 x1 x105 x226 x347 x108 x229 x107 x228 x349 x219 x' x210 x331 x330 x212 x333 x211 x332 x214 x335 x213 x334 x216 x337 x215 x336 x218 x339 x217 x338)
(RULES
  f_315(k52, k53, k54, k48, k49, k50, x125, x126, x127, x128, x129, x130, x131, x132, x133, x134, x135, x136, x137, x138, x139, x140, x141, x142, x143, x144, x145, x146, x147, x148, x149, x150, x151, x152, x153, x154) -> f_315(k108, k109, k110, k109 + 4 * k110, k111, k104, x155, x156, x157, x158, x159, x160, x161, x162, x163, x164, x165, x166, x167, x168, x169, x170, x171, x172, x173, x174, x175, x176, x177, x178, x179, x180, x181, x182, x183, x184) :|: k53 + 4 * k54 = 4 + k49 && k50 < k52 && k109 + 4 * k110 > 3 && k109 + 4 * k110 = 4 + k111 && k48 = 4 + k49
  f_184(x222, x223, x224, x225, x226, x227, x228, x229, x230, x231, x232, x233, x234, x235, x236, x237, x238, x239, x240, x241, x242, x243, x244, x245, x246, x247, x248, x249, x250, x251, x252, x253, x254, x255, x256, x257) -> f_263(k16, k17, k18, k19, k12, k13, k14, 0, k15, 1, k11, 4 + k8, k8, 3 + k16, 3 + k17, 3 + k18, 3 + k19, 7 + k12, 7 + k13, k9, 3, 7, 4, 8, 5, x258, x259, x260, x261, x262, x263, x264, x265, x266, x267, x268) :|: k16 > 0 && k17 > 0 && k18 > 0 && k19 > 0 && k12 > 0 && k13 > 0 && k14 > 0 && k15 + k14 = 1 + k9 && k15 > 0 && k15 + 4 * k14 = 4 + k8 && k8 > 0
  f_315(k55, k93, k78, k79, k73, k76, x58, x59, x60, x61, x62, x63, x64, x65, x66, x67, x68, x69, x70, x71, x72, x73, x74, x75, x76, x77, x78, x79, x80, x81, x82, x83, x84, x85, x86, x87) -> f_327(k85, k87, k80, k83, k105, k106, k107, 0, k100, 1, k101, k55, k93, k78, k79, k73, k102, k103, k97, k98, k99, k89, k90, k91, k92, k81, k84, k86, k88, k74, k77, k20, 3, 7, 4, 8) :|: 0 = 0 && k55 = k76
  f_184(x335, x336, x337, x338, x339, x340, x341, x342, x343, x344, x345, x346, x347, x348, x349, x350, x351, x352, x353, x354, x355, x356, x357, x358, x359, x360, x361, x362, x363, x364, x365, x366, x367, x368, x369, x370) -> f_264(k37, k75, k24, k82, k27, k10, k63, 1, k23, k22, 4 + k23, 0, 3 + k37, 3 + k75, 3 + k24, 3 + k82, 7 + k27, 7 + k10, 3, 7, 4, 8, 5, x371, x372, x373, x374, x375, x376, x377, x378, x379, x380, x381, x382, x383) :|: k37 > 0 && k75 > 0 && k24 > 0 && k82 > 0 && k27 > 0 && k10 > 0 && k23 > 0 && k63 < 1
  f_184(x88, x89, x90, x91, x92, x93, x94, x95, x96, x97, x98, x99, x100, x101, x102, x103, x104, x105, x106, x107, x108, x109, x110, x111, x112, x113, x114, x115, x116, x117, x118, x119, x120, x121, x122, x123) -> f_295(k40, k32, k33, k34, k35, k28, k29, 0, k30, 1, 4 + k31, k25, k26, k21, k26 + 4 * k21, k69, 4 + k70, k70, k71, k72, k72 + k71, k31, 3 + k40, 3 + k32, 3 + k33, 3 + k34, 7 + k35, 7 + k28, k65, 3, 7, 4, 8, 6, 2, x124) :|: k32 > 0 && k70 > 1 && k40 > 0 && k33 > 0 && k34 > 0 && k35 > 0 && k28 > 0 && k29 > 0 && k30 + k29 = 1 + k65 && k30 > 0 && k30 + 4 * k29 = 4 + k70 && k70 > k30 && k71 < k72 && k31 > -1 && k26 + 4 * k21 > 3 && k26 + 4 * k21 = 4 + k69
  f_315(k66, k67, k68, k64, k60, k61, x, x', x'', x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27) -> f_315(k56, k57, k58, k57 + 4 * k58, k59, k51, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49, x50, x51, x52, x53, x54, x55, x56, x57) :|: k67 + 4 * k68 = 4 + k60 && k61 > k66 && k57 + 4 * k58 > 3 && k57 + 4 * k58 = 4 + k59 && k64 = 4 + k60
  f_184(x185, x186, x187, x188, x189, x190, x191, x192, x193, x194, x195, x196, x197, x198, x199, x200, x201, x202, x203, x204, x205, x206, x207, x208, x209, x210, x211, x212, x213, x214, x215, x216, x217, x218, x219, x220) -> f_295(k4, k5, k6, k7, k0, k1, k2, 0, k3, 1, 4 + k45, k46, k47, k41, k47 + 4 * k41, k42, 4 + k43, k43, k44, k38, k38 + k44, k45, 3 + k4, 3 + k5, 3 + k6, 3 + k7, 7 + k0, 7 + k1, k39, 3, 7, 4, 8, 6, 2, x221) :|: k5 > 0 && k43 > 1 && k4 > 0 && k6 > 0 && k7 > 0 && k0 > 0 && k1 > 0 && k2 > 0 && k3 + k2 = 1 + k39 && k3 > 0 && k3 + 4 * k2 = 4 + k43 && k43 > k3 && k44 > k38 && k45 > -1 && k47 + 4 * k41 > 3 && k47 + 4 * k41 = 4 + k42
  f_184(x269, x270, x271, x272, x273, x274, x275, x276, x277, x278, x279, x280, x281, x282, x283, x284, x285, x286, x287, x288, x289, x290, x291, x292, x293, x294, x295, x296, x297, x298, x299, x300, x301, x302, x303, x304) -> f_315(k94, k36, k95, k36 + 4 * k95, k62, k96, x305, x306, x307, x308, x309, x310, x311, x312, x313, x314, x315, x316, x317, x318, x319, x320, x321, x322, x323, x324, x325, x326, x327, x328, x329, x330, x331, x332, x333, x334) :|: k36 + 4 * k95 = 4 + k62 && k36 + 4 * k95 > 3
)

----------------------------------------

(25) KoAT2 (EQUIVALENT)
KoAT2 was called with the following command:

/aprove/bin/koat2 analyse --termination --cfr=pe -d5 --local=mprf,twn -rtermcomp -i /tmp/aprove.InputModules.Programs.koat2_6435569612345102509.koat 

KoAT2's output was:

MAYBE

----------------------------------------

(26)
MAYBE

----------------------------------------

(27) SEGraph to IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 155 rulesP rules:
f_184 -> f_185(v1, v2, 3, 1, 4) :|: 1 <= v1 && v2 = 3 + v1 && 4 <= v2
f_185(v1, v2, 3, 1, 4) -> f_186(v1, v3, v2, v4, 3, 1, 4) :|: 1 <= v3 && v4 = 3 + v3 && 4 <= v4
f_186(v1, v3, v2, v4, 3, 1, 4) -> f_187(v1, v3, v5, v2, v4, v6, 3, 1, 4) :|: 1 <= v5 && v6 = 3 + v5 && 4 <= v6
f_187(v1, v3, v5, v2, v4, v6, 3, 1, 4) -> f_188(v1, v3, v5, v7, v2, v4, v6, v8, 3, 1, 4) :|: 1 <= v7 && v8 = 3 + v7 && 4 <= v8
f_188(v1, v3, v5, v7, v2, v4, v6, v8, 3, 1, 4) -> f_189(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 3, 7, 1, 4, 8) :|: 1 <= v9 && v10 = 7 + v9 && 8 <= v10
f_189(v1, v3, v5, v7, v9, v2, v4, v6, v8, v10, 3, 7, 1, 4, 8) -> f_190(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, v12, 3, 7, 1, 4, 8) :|: 1 <= v11 && v12 = 7 + v11 && 8 <= v12
f_190(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, v12, 3, 7, 1, 4, 8) -> f_191(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) :|: TRUE
f_191(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) -> f_192(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) :|: TRUE
f_192(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) -> f_193(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) :|: TRUE
f_193(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) -> f_194(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) :|: TRUE
f_194(v1, v3, v5, v7, v9, v11, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) -> f_195(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) :|: TRUE
f_195(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) -> f_196(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) :|: TRUE
f_196(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) -> f_197(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) :|: 0 = 0
f_197(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) -> f_198(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) :|: v13 < 1
f_197(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) -> f_199(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) :|: 1 <= v13
f_198(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) -> f_200(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: 0 = 0
f_199(v1, v3, v5, v7, v9, v11, v13, v2, v4, v6, v8, v10, v12, 0, 3, 7, 1, 4, 8) -> f_201(v1, v3, v5, v7, v9, v11, v13, 0, v2, v4, v6, v8, v10, v12, 3, 7, 1, 4, 8) :|: 0 = 0
f_200(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_202(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: TRUE
f_201(v1, v3, v5, v7, v9, v11, v13, 0, v2, v4, v6, v8, v10, v12, 3, 7, 1, 4, 8) -> f_203(v1, v3, v5, v7, v9, v11, v13, 0, v2, v4, v6, v8, v10, v12, 3, 7, 1, 4, 8) :|: TRUE
f_202(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_204(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: TRUE
f_203(v1, v3, v5, v7, v9, v11, v13, 0, v2, v4, v6, v8, v10, v12, 3, 7, 1, 4, 8) -> f_205(v1, v3, v5, v7, v9, v11, v13, 0, v2, v4, v6, v8, v10, v12, 3, 7, 1, 4, 8) :|: TRUE
f_204(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_206(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: TRUE
f_205(v1, v3, v5, v7, v9, v11, v13, 0, v2, v4, v6, v8, v10, v12, 3, 7, 1, 4, 8) -> f_207(v1, v3, v5, v7, v9, v11, v13, 0, v2, v4, v6, v8, v10, v12, 3, 7, 1, 4, 8) :|: 0 = 0
f_206(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_208(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: TRUE
f_207(v1, v3, v5, v7, v9, v11, v13, 0, v2, v4, v6, v8, v10, v12, 3, 7, 1, 4, 8) -> f_209(v1, v3, v5, v7, v9, v11, v13, 0, v2, v4, v6, v8, v10, v12, 3, 7, 1, 4, 8) :|: 0 = 0
f_208(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_210(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: 0 = 0
f_209(v1, v3, v5, v7, v9, v11, v13, 0, v2, v4, v6, v8, v10, v12, 3, 7, 1, 4, 8) -> f_211(v1, v3, v5, v7, v9, v11, v13, 0, v15, v2, v4, v6, v8, v10, v12, v16, 3, 7, 1, 4, 8) :|: 1 <= v15 && v15 + v13 = 1 + v16
f_210(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_212(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: 0 = 0
f_211(v1, v3, v5, v7, v9, v11, v13, 0, v15, v2, v4, v6, v8, v10, v12, v16, 3, 7, 1, 4, 8) -> f_213(v1, v3, v5, v7, v9, v11, v13, 0, v15, v2, v4, v6, v8, v10, v12, v16, 3, 7, 1, 4, 8) :|: 0 = 0
f_212(v1, v3, v5, v7, v9, v11, v13, 1, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_214(v1, v3, v5, v7, v9, v11, v13, 1, v17, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: 1 <= v17
f_213(v1, v3, v5, v7, v9, v11, v13, 0, v15, v2, v4, v6, v8, v10, v12, v16, 3, 7, 1, 4, 8) -> f_215(v1, v3, v5, v7, v9, v11, v13, 0, v15, v2, v4, v6, v8, v10, v12, v16, 3, 7, 1, 4, 8) :|: TRUE
f_214(v1, v3, v5, v7, v9, v11, v13, 1, v17, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_216(v1, v3, v5, v7, v9, v11, v13, 1, v17, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: 0 = 0
f_215(v1, v3, v5, v7, v9, v11, v13, 0, v15, v2, v4, v6, v8, v10, v12, v16, 3, 7, 1, 4, 8) -> f_217(v1, v3, v5, v7, v9, v11, v13, 0, v15, v2, v4, v6, v8, v10, v12, v16, 3, 7, 1, 4, 8) :|: 0 = 0
f_216(v1, v3, v5, v7, v9, v11, v13, 1, v17, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_218(v1, v3, v5, v7, v9, v11, v13, 1, v17, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: TRUE
f_217(v1, v3, v5, v7, v9, v11, v13, 0, v15, v2, v4, v6, v8, v10, v12, v16, 3, 7, 1, 4, 8) -> f_219(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_218(v1, v3, v5, v7, v9, v11, v13, 1, v17, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_220(v1, v3, v5, v7, v9, v11, v13, 1, v17, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: 0 = 0
f_219(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_221(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_220(v1, v3, v5, v7, v9, v11, v13, 1, v17, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_222(v1, v3, v5, v7, v9, v11, v13, 1, v17, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: 0 = 0
f_221(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_223(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_222(v1, v3, v5, v7, v9, v11, v13, 1, v17, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_224(v1, v3, v5, v7, v9, v11, v13, 1, v17, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: TRUE
f_223(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_225(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_224(v1, v3, v5, v7, v9, v11, v13, 1, v17, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_226(v1, v3, v5, v7, v9, v11, v13, 1, v17, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: TRUE
f_225(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_227(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_226(v1, v3, v5, v7, v9, v11, v13, 1, v17, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_228(v1, v3, v5, v7, v9, v11, v13, 1, v17, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: 0 = 0
f_227(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_229(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_228(v1, v3, v5, v7, v9, v11, v13, 1, v17, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_230(v1, v3, v5, v7, v9, v11, v13, 1, v17, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: TRUE
f_229(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_231(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_230(v1, v3, v5, v7, v9, v11, v13, 1, v17, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_232(v1, v3, v5, v7, v9, v11, v13, 1, v17, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: TRUE
f_231(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_233(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_232(v1, v3, v5, v7, v9, v11, v13, 1, v17, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_234(v1, v3, v5, v7, v9, v11, v13, 1, v17, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: 0 = 0
f_233(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_235(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_234(v1, v3, v5, v7, v9, v11, v13, 1, v17, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_236(v1, v3, v5, v7, v9, v11, v13, 1, v17, v24, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: TRUE
f_235(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_237(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_236(v1, v3, v5, v7, v9, v11, v13, 1, v17, v24, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_238(v1, v3, v5, v7, v9, v11, v13, 1, v17, v24, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: 0 = 0
f_237(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_239(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_238(v1, v3, v5, v7, v9, v11, v13, 1, v17, v24, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_240(v1, v3, v5, v7, v9, v11, v13, 1, v17, v24, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: 0 = 0
f_239(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_241(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 5) :|: v26 = v15 + 4 * v13 && 5 <= v26
f_240(v1, v3, v5, v7, v9, v11, v13, 1, v17, v24, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_242(v1, v3, v5, v7, v9, v11, v13, 1, v17, v24, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) :|: 0 = 0
f_241(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 5) -> f_243(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 5) :|: 4 + v27 = v26 && 1 <= v27
f_242(v1, v3, v5, v7, v9, v11, v13, 1, v17, v24, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8) -> f_244(v1, v3, v5, v7, v9, v11, v13, 1, v17, v24, v28, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8, 5) :|: v28 = 4 + v17 && 5 <= v28
f_243(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 5) -> f_245(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 5) :|: TRUE
f_244(v1, v3, v5, v7, v9, v11, v13, 1, v17, v24, v28, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8, 5) -> f_246(v1, v3, v5, v7, v9, v11, v13, 1, v17, v24, v28, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8, 5) :|: 4 + v17 = v28
f_245(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 5) -> f_247(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: v22 != v29 && v15 < v27 && 2 <= v27 && 6 <= v26
f_245(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 5) -> f_248(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v29, v26, v27, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 5) :|: v22 = v29
f_246(v1, v3, v5, v7, v9, v11, v13, 1, v17, v24, v28, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8, 5) -> f_249(v1, v3, v5, v7, v9, v11, v13, 1, v17, v24, v28, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8, 5) :|: 0 = 0
f_247(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_250(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: 0 = 0
f_248(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v29, v26, v27, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 5) -> f_251(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v29, v26, v27, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 5) :|: 0 = 0
f_249(v1, v3, v5, v7, v9, v11, v13, 1, v17, v24, v28, v2, v4, v6, v8, v10, v12, 0, 3, 7, 4, 8, 5) -> f_252(v1, v3, v5, v7, v9, v11, v13, 1, v17, v24, v28, 0, v2, v4, v6, v8, v10, v12, 3, 7, 4, 8, 5) :|: 0 = 0
f_250(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_253(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: TRUE
f_251(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v29, v26, v27, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 5) -> f_254(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v29, v26, v27, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 5) :|: TRUE
f_252(v1, v3, v5, v7, v9, v11, v13, 1, v17, v24, v28, 0, v2, v4, v6, v8, v10, v12, 3, 7, 4, 8, 5) -> f_255(v1, v3, v5, v7, v9, v11, v13, 1, v17, v24, v28, 0, v2, v4, v6, v8, v10, v12, 3, 7, 4, 8, 5) :|: TRUE
f_253(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_256(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: 0 = 0
f_254(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v29, v26, v27, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 5) -> f_257(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v29, v26, v27, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 5) :|: TRUE
f_255(v1, v3, v5, v7, v9, v11, v13, 1, v17, v24, v28, 0, v2, v4, v6, v8, v10, v12, 3, 7, 4, 8, 5) -> f_258(v1, v3, v5, v7, v9, v11, v13, 1, v17, v24, v28, 0, v2, v4, v6, v8, v10, v12, 3, 7, 4, 8, 5) :|: TRUE
f_256(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_259(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: 0 = 0
f_257(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v29, v26, v27, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 5) -> f_260(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v29, v26, v27, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 5) :|: TRUE
f_258(v1, v3, v5, v7, v9, v11, v13, 1, v17, v24, v28, 0, v2, v4, v6, v8, v10, v12, 3, 7, 4, 8, 5) -> f_261(v1, v3, v5, v7, v9, v11, v13, 1, v17, v24, v28, 0, v2, v4, v6, v8, v10, v12, 3, 7, 4, 8, 5) :|: TRUE
f_259(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_262(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: 0 = 0
f_260(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v29, v26, v27, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 5) -> f_263(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v29, v26, v27, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 5) :|: 0 = 0
f_261(v1, v3, v5, v7, v9, v11, v13, 1, v17, v24, v28, 0, v2, v4, v6, v8, v10, v12, 3, 7, 4, 8, 5) -> f_264(v1, v3, v5, v7, v9, v11, v13, 1, v17, v24, v28, 0, v2, v4, v6, v8, v10, v12, 3, 7, 4, 8, 5) :|: 0 = 0
f_262(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_265(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: v26 = v15 + 4 * v13
f_265(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_266(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: 4 + v27 = v26
f_266(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_267(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: 0 = 0
f_267(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_268(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: 0 = 0
f_268(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_269(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: 0 = 0
f_269(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_270(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v31, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: v31 = v22 + v29
f_270(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v31, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_271(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v31, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: TRUE
f_271(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v31, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_272(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: TRUE
f_272(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_273(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v31, v33, v35, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: v35 = 4 + v33 && 4 <= v35
f_273(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v31, v33, v35, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_274(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v31, v33, v35, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: TRUE
f_274(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v31, v33, v35, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_275(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v31, v33, v35, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: TRUE
f_275(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v22, v26, v27, v29, v31, v33, v35, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_276(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v22, v26, v27, v29, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: 0 = 0
f_276(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v22, v26, v27, v29, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_277(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: TRUE
f_277(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_278(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: TRUE
f_278(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_279(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: TRUE
f_279(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_280(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: 0 = 0
f_280(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_281(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v27, v29, v26, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: v49 = v45 + 4 * v47
f_281(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v27, v29, v26, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_282(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v29, v26, v27, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: 4 + v50 = v49 && 4 <= v49
f_282(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v29, v26, v27, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_283(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: TRUE
f_283(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_284(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: v43 != v51
f_283(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_285(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v51, v45, v47, v49, v50, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: v43 = v51
f_284(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_286(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: 0 = 0
f_285(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v51, v45, v47, v49, v50, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_287(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v51, v45, v47, v49, v50, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: 0 = 0
f_286(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_288(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: TRUE
f_287(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v51, v45, v47, v49, v50, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_289(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v51, v45, v47, v49, v50, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: TRUE
f_288(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_290(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: 0 = 0
f_289(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v51, v45, v47, v49, v50, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_291(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v51, v45, v47, v49, v50, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: TRUE
f_290(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_292(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: 0 = 0
f_291(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v51, v45, v47, v49, v50, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_293(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v51, v45, v47, v49, v50, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: TRUE
f_292(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_294(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: 0 = 0
f_293(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v51, v45, v47, v49, v50, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_295(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v51, v45, v47, v49, v50, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) :|: 0 = 0
f_294(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v26, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 6, 2) -> f_296(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 2) :|: v49 = v45 + 4 * v47
f_296(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v27, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8, 2) -> f_297(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 4 + v50 = v49
f_297(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v29, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_298(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_298(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_299(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_299(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v22, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_300(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_300(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v31, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_301(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v65, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: v65 = v43 + v51
f_301(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v65, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_302(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v65, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_302(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v65, v33, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_303(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_303(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_304(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v65, v67, v69, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: v69 = 4 + v67 && 4 <= v69
f_304(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v65, v67, v69, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_305(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v65, v67, v69, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_305(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v65, v67, v69, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_306(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v65, v67, v69, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_306(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v65, v67, v69, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_307(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v65, v67, v69, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_307(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v35, v43, v45, v47, v49, v50, v51, v65, v67, v69, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_308(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v43, v45, v47, v49, v50, v51, v35, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_308(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v43, v45, v47, v49, v50, v51, v35, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_309(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_309(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_310(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v47, v49, v50, v51, v45, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_310(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v47, v49, v50, v51, v45, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_311(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v47, v49, v50, v51, v45, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_311(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v47, v49, v50, v51, v45, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_312(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v49, v50, v51, v45, v47, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_312(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v49, v50, v51, v45, v47, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_313(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v50, v51, v45, v47, v49, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: v77 = v73 + 4 * v75
f_313(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v50, v51, v45, v47, v49, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_314(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v51, v45, v47, v49, v50, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 4 + v78 = v77 && 4 <= v77
f_314(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v51, v45, v47, v49, v50, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_315(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_315(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_316(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: v71 != v79
f_315(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_317(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v79, v73, v75, v77, v78, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: v71 = v79
f_316(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_318(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_317(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v79, v73, v75, v77, v78, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_319(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v79, v73, v75, v77, v78, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_318(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_320(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_319(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v79, v73, v75, v77, v78, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_321(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v79, v73, v75, v77, v78, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_320(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_322(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_321(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v79, v73, v75, v77, v78, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_323(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v79, v73, v75, v77, v78, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_322(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_324(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_323(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v79, v73, v75, v77, v78, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_325(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v79, v73, v75, v77, v78, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_324(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_326(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_325(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v79, v73, v75, v77, v78, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_327(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v79, v73, v75, v77, v78, v45, v47, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_326(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v49, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_328(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: v77 = v73 + 4 * v75
f_328(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v50, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_329(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 4 + v78 = v77
f_329(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v51, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_330(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_330(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v35, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_331(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_331(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v43, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_332(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: 0 = 0
f_332(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v65, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_333(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: v142 = v71 + v79
f_333(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_334(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_334(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v67, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_335(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v144, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_335(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v144, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_336(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v144, v146, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: v146 = 4 + v144 && 4 <= v146
f_336(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v144, v146, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_337(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v144, v146, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_337(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v144, v146, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_338(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v144, v146, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
f_338(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v144, v146, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) -> f_307(v1, v3, v5, v7, v9, v11, v13, 0, v15, 1, v69, v71, v73, v75, v77, v78, v79, v142, v144, v146, v2, v4, v6, v8, v10, v12, v16, 3, 7, 4, 8) :|: TRUE
Combined rules. Obtained 11 rulesP rules:
f_184 -> f_315(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, v15:0, 1, 4 + v67:0, v71:0, v73:0, v75:0, v73:0 + 4 * v75:0, v78:0, v79:0, v45:0, v47:0, 4 + v50:0, v50:0, v51:0, 4 + v33:0, v43:0, v43:0 + v51:0, v67:0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, v16:0, 3, 7, 4, 8) :|: v27:0 > 1 && v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 > 0 && v15:0 + v13:0 = 1 + v16:0 && v15:0 > 0 && v15:0 + 4 * v13:0 = 4 + v27:0 && v27:0 > v15:0 && v29:0 > v22:0 && v33:0 > -1 && v50:0 > -1 && v45:0 + 4 * v47:0 = 4 + v50:0 && v51:0 > v43:0 && v67:0 > -1 && v73:0 + 4 * v75:0 = 4 + v78:0 && v73:0 + 4 * v75:0 > 3
f_184 -> f_315(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, v15:0, 1, 4 + v67:0, v71:0, v73:0, v75:0, v73:0 + 4 * v75:0, v78:0, v79:0, v45:0, v47:0, 4 + v50:0, v50:0, v51:0, 4 + v33:0, v43:0, v43:0 + v51:0, v67:0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, v16:0, 3, 7, 4, 8) :|: v27:0 > 1 && v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 > 0 && v15:0 + v13:0 = 1 + v16:0 && v15:0 > 0 && v15:0 + 4 * v13:0 = 4 + v27:0 && v27:0 > v15:0 && v29:0 > v22:0 && v33:0 > -1 && v50:0 > -1 && v45:0 + 4 * v47:0 = 4 + v50:0 && v51:0 < v43:0 && v67:0 > -1 && v73:0 + 4 * v75:0 = 4 + v78:0 && v73:0 + 4 * v75:0 > 3
f_184 -> f_315(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, v15:0, 1, 4 + v67:0, v71:0, v73:0, v75:0, v73:0 + 4 * v75:0, v78:0, v79:0, v45:0, v47:0, 4 + v50:0, v50:0, v51:0, 4 + v33:0, v43:0, v43:0 + v51:0, v67:0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, v16:0, 3, 7, 4, 8) :|: v27:0 > 1 && v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 > 0 && v15:0 + v13:0 = 1 + v16:0 && v15:0 > 0 && v15:0 + 4 * v13:0 = 4 + v27:0 && v27:0 > v15:0 && v29:0 < v22:0 && v33:0 > -1 && v50:0 > -1 && v45:0 + 4 * v47:0 = 4 + v50:0 && v51:0 > v43:0 && v67:0 > -1 && v73:0 + 4 * v75:0 = 4 + v78:0 && v73:0 + 4 * v75:0 > 3
f_184 -> f_315(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, v15:0, 1, 4 + v67:0, v71:0, v73:0, v75:0, v73:0 + 4 * v75:0, v78:0, v79:0, v45:0, v47:0, 4 + v50:0, v50:0, v51:0, 4 + v33:0, v43:0, v43:0 + v51:0, v67:0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, v16:0, 3, 7, 4, 8) :|: v27:0 > 1 && v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 > 0 && v15:0 + v13:0 = 1 + v16:0 && v15:0 > 0 && v15:0 + 4 * v13:0 = 4 + v27:0 && v27:0 > v15:0 && v29:0 < v22:0 && v33:0 > -1 && v50:0 > -1 && v45:0 + 4 * v47:0 = 4 + v50:0 && v51:0 < v43:0 && v67:0 > -1 && v73:0 + 4 * v75:0 = 4 + v78:0 && v73:0 + 4 * v75:0 > 3
f_184 -> f_264(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 1, v17:0, v24:0, 4 + v17:0, 0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, 3, 7, 4, 8, 5) :|: v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 < 1 && v17:0 > 0
f_315(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, v15:0, 1, v69:0, v71:0, v73:0, v75:0, v77:0, v78:0, v71:0, v45:0, v47:0, v49:0, v50:0, v51:0, v35:0, v43:0, v65:0, v67:0, v2:0, v4:0, v6:0, v8:0, v10:0, v12:0, v16:0, 3, 7, 4, 8) -> f_327(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, v15:0, 1, v69:0, v71:0, v73:0, v75:0, v77:0, v78:0, v45:0, v47:0, v49:0, v50:0, v51:0, v35:0, v43:0, v65:0, v67:0, v2:0, v4:0, v6:0, v8:0, v10:0, v12:0, v16:0, 3, 7, 4, 8) :|: TRUE
f_184 -> f_263(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, v15:0, 1, v22:0, 4 + v27:0, v27:0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, v16:0, 3, 7, 4, 8, 5) :|: v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 > 0 && v15:0 + v13:0 = 1 + v16:0 && v15:0 > 0 && v27:0 > 0 && v15:0 + 4 * v13:0 = 4 + v27:0
f_184 -> f_295(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, v15:0, 1, 4 + v33:0, v43:0, v45:0, v47:0, v45:0 + 4 * v47:0, v50:0, 4 + v27:0, v27:0, v29:0, v22:0, v22:0 + v29:0, v33:0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, v16:0, 3, 7, 4, 8, 6, 2) :|: v27:0 > 1 && v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 > 0 && v15:0 + v13:0 = 1 + v16:0 && v15:0 > 0 && v15:0 + 4 * v13:0 = 4 + v27:0 && v27:0 > v15:0 && v29:0 > v22:0 && v33:0 > -1 && v45:0 + 4 * v47:0 = 4 + v50:0 && v45:0 + 4 * v47:0 > 3
f_184 -> f_295(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, v15:0, 1, 4 + v33:0, v43:0, v45:0, v47:0, v45:0 + 4 * v47:0, v50:0, 4 + v27:0, v27:0, v29:0, v22:0, v22:0 + v29:0, v33:0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, v16:0, 3, 7, 4, 8, 6, 2) :|: v27:0 > 1 && v3:0 > 0 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 > 0 && v15:0 + v13:0 = 1 + v16:0 && v15:0 > 0 && v15:0 + 4 * v13:0 = 4 + v27:0 && v27:0 > v15:0 && v29:0 < v22:0 && v33:0 > -1 && v45:0 + 4 * v47:0 = 4 + v50:0 && v45:0 + 4 * v47:0 > 3
f_315(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, v15:0, 1, v69:0, v71:0, v73:0, v75:0, 4 + v78:0, v78:0, v79:0, v45:0, v47:0, v49:0, v50:0, v51:0, v35:0, v43:0, v65:0, v67:0, v2:0, v4:0, v6:0, v8:0, v10:0, v12:0, v16:0, 3, 7, 4, 8) -> f_315(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, v15:0, 1, 4 + v144:0, v71:1, v73:1, v75:1, v73:1 + 4 * v75:1, v78:1, v79:1, v73:0, v75:0, 4 + v78:0, v78:0, v79:0, v69:0, v71:0, v71:0 + v79:0, v144:0, v2:0, v4:0, v6:0, v8:0, v10:0, v12:0, v16:0, 3, 7, 4, 8) :|: v79:0 > v71:0 && v73:0 + 4 * v75:0 = 4 + v78:0 && v144:0 > -1 && v73:1 + 4 * v75:1 = 4 + v78:1 && v73:1 + 4 * v75:1 > 3
f_315(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, v15:0, 1, v69:0, v71:0, v73:0, v75:0, 4 + v78:0, v78:0, v79:0, v45:0, v47:0, v49:0, v50:0, v51:0, v35:0, v43:0, v65:0, v67:0, v2:0, v4:0, v6:0, v8:0, v10:0, v12:0, v16:0, 3, 7, 4, 8) -> f_315(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, v15:0, 1, 4 + v144:0, v71:1, v73:1, v75:1, v73:1 + 4 * v75:1, v78:1, v79:1, v73:0, v75:0, 4 + v78:0, v78:0, v79:0, v69:0, v71:0, v71:0 + v79:0, v144:0, v2:0, v4:0, v6:0, v8:0, v10:0, v12:0, v16:0, 3, 7, 4, 8) :|: v79:0 < v71:0 && v73:0 + 4 * v75:0 = 4 + v78:0 && v144:0 > -1 && v73:1 + 4 * v75:1 = 4 + v78:1 && v73:1 + 4 * v75:1 > 3
Filtered unneeded arguments:
   f_315(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35, x36, x37) -> f_315(x12, x13, x14, x15, x16, x17)
Removed division, modulo operations, cleaned up constraints. Obtained 8 rules.P rules:
f_184 -> f_315(v71:0, v73:0, v75:0, v73:0 + 4 * v75:0, v78:0, v79:0) :|: v73:0 + 4 * v75:0 = 4 + v78:0 && v73:0 + 4 * v75:0 > 3
f_184 -> f_264(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 1, v17:0, v24:0, 4 + v17:0, 0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, 3, 7, 4, 8, 5) :|: v1:0 > 0 && v3:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v17:0 > 0 && v13:0 < 1
f_315(v71:0, v73:0, v75:0, v77:0, v78:0, v71:01) -> f_327(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, v15:0, 1, v69:0, v71:0, v73:0, v75:0, v77:0, v78:0, v45:0, v47:0, v49:0, v50:0, v51:0, v35:0, v43:0, v65:0, v67:0, v2:0, v4:0, v6:0, v8:0, v10:0, v12:0, v16:0, 3, 7, 4, 8) :|: TRUE && v71:0 = v71:01
f_184 -> f_263(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, v15:0, 1, v22:0, 4 + v27:0, v27:0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, v16:0, 3, 7, 4, 8, 5) :|: v1:0 > 0 && v3:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 > 0 && v15:0 + v13:0 = 1 + v16:0 && v15:0 > 0 && v15:0 + 4 * v13:0 = 4 + v27:0 && v27:0 > 0
f_184 -> f_295(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, v15:0, 1, 4 + v33:0, v43:0, v45:0, v47:0, v45:0 + 4 * v47:0, v50:0, 4 + v27:0, v27:0, v29:0, v22:0, v22:0 + v29:0, v33:0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, v16:0, 3, 7, 4, 8, 6, 2) :|: v3:0 > 0 && v27:0 > 1 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 > 0 && v15:0 + v13:0 = 1 + v16:0 && v15:0 > 0 && v15:0 + 4 * v13:0 = 4 + v27:0 && v27:0 > v15:0 && v29:0 > v22:0 && v33:0 > -1 && v45:0 + 4 * v47:0 > 3 && v45:0 + 4 * v47:0 = 4 + v50:0
f_184 -> f_295(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 0, v15:0, 1, 4 + v33:0, v43:0, v45:0, v47:0, v45:0 + 4 * v47:0, v50:0, 4 + v27:0, v27:0, v29:0, v22:0, v22:0 + v29:0, v33:0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, v16:0, 3, 7, 4, 8, 6, 2) :|: v3:0 > 0 && v27:0 > 1 && v1:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v13:0 > 0 && v15:0 + v13:0 = 1 + v16:0 && v15:0 > 0 && v15:0 + 4 * v13:0 = 4 + v27:0 && v27:0 > v15:0 && v29:0 < v22:0 && v33:0 > -1 && v45:0 + 4 * v47:0 > 3 && v45:0 + 4 * v47:0 = 4 + v50:0
f_315(v71:0, v73:0, v75:0, sum~cons_4~v78:0, v78:0, v79:0) -> f_315(v71:1, v73:1, v75:1, v73:1 + 4 * v75:1, v78:1, v79:1) :|: v73:0 + 4 * v75:0 = 4 + v78:0 && v79:0 > v71:0 && v73:1 + 4 * v75:1 > 3 && v73:1 + 4 * v75:1 = 4 + v78:1 && sum~cons_4~v78:0 = 4 + v78:0
f_315(v71:0, v73:0, v75:0, sum~cons_4~v78:0, v78:0, v79:0) -> f_315(v71:1, v73:1, v75:1, v73:1 + 4 * v75:1, v78:1, v79:1) :|: v73:0 + 4 * v75:0 = 4 + v78:0 && v79:0 < v71:0 && v73:1 + 4 * v75:1 > 3 && v73:1 + 4 * v75:1 = 4 + v78:1 && sum~cons_4~v78:0 = 4 + v78:0

----------------------------------------

(28)
Obligation:
Rules:
f_184 -> f_315(v71:0, v73:0, v75:0, v73:0 + 4 * v75:0, v78:0, v79:0) :|: v73:0 + 4 * v75:0 = 4 + v78:0 && v73:0 + 4 * v75:0 > 3
f_184 -> f_264(v1:0, v3:0, v5:0, v7:0, v9:0, v11:0, v13:0, 1, v17:0, v24:0, 4 + v17:0, 0, 3 + v1:0, 3 + v3:0, 3 + v5:0, 3 + v7:0, 7 + v9:0, 7 + v11:0, 3, 7, 4, 8, 5) :|: v1:0 > 0 && v3:0 > 0 && v5:0 > 0 && v7:0 > 0 && v9:0 > 0 && v11:0 > 0 && v17:0 > 0 && v13:0 < 1
f_315(x, x1, x2, x3, x4, x5) -> f_327(x6, x7, x8, x9, x10, x11, x12, 0, x13, 1, x14, x, x1, x2, x3, x4, x15, x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, 3, 7, 4, 8) :|: TRUE && x = x5
f_184 -> f_263(x31, x32, x33, x34, x35, x36, x37, 0, x38, 1, x39, 4 + x40, x40, 3 + x31, 3 + x32, 3 + x33, 3 + x34, 7 + x35, 7 + x36, x41, 3, 7, 4, 8, 5) :|: x31 > 0 && x32 > 0 && x33 > 0 && x34 > 0 && x35 > 0 && x36 > 0 && x37 > 0 && x38 + x37 = 1 + x41 && x38 > 0 && x38 + 4 * x37 = 4 + x40 && x40 > 0
f_184 -> f_295(x42, x43, x44, x45, x46, x47, x48, 0, x49, 1, 4 + x50, x51, x52, x53, x52 + 4 * x53, x54, 4 + x55, x55, x56, x57, x57 + x56, x50, 3 + x42, 3 + x43, 3 + x44, 3 + x45, 7 + x46, 7 + x47, x58, 3, 7, 4, 8, 6, 2) :|: x43 > 0 && x55 > 1 && x42 > 0 && x44 > 0 && x45 > 0 && x46 > 0 && x47 > 0 && x48 > 0 && x49 + x48 = 1 + x58 && x49 > 0 && x49 + 4 * x48 = 4 + x55 && x55 > x49 && x56 > x57 && x50 > -1 && x52 + 4 * x53 > 3 && x52 + 4 * x53 = 4 + x54
f_184 -> f_295(x59, x60, x61, x62, x63, x64, x65, 0, x66, 1, 4 + x67, x68, x69, x70, x69 + 4 * x70, x71, 4 + x72, x72, x73, x74, x74 + x73, x67, 3 + x59, 3 + x60, 3 + x61, 3 + x62, 7 + x63, 7 + x64, x75, 3, 7, 4, 8, 6, 2) :|: x60 > 0 && x72 > 1 && x59 > 0 && x61 > 0 && x62 > 0 && x63 > 0 && x64 > 0 && x65 > 0 && x66 + x65 = 1 + x75 && x66 > 0 && x66 + 4 * x65 = 4 + x72 && x72 > x66 && x73 < x74 && x67 > -1 && x69 + 4 * x70 > 3 && x69 + 4 * x70 = 4 + x71
f_315(x76, x77, x78, x79, x80, x81) -> f_315(x82, x83, x84, x83 + 4 * x84, x85, x86) :|: x77 + 4 * x78 = 4 + x80 && x81 > x76 && x83 + 4 * x84 > 3 && x83 + 4 * x84 = 4 + x85 && x79 = 4 + x80
f_315(x87, x88, x89, x90, x91, x92) -> f_315(x93, x94, x95, x94 + 4 * x95, x96, x97) :|: x88 + 4 * x89 = 4 + x91 && x92 < x87 && x94 + 4 * x95 > 3 && x94 + 4 * x95 = 4 + x96 && x90 = 4 + x91
Start term: f_184

----------------------------------------

(29) IRSNoOverapproximation (EQUIVALENT)
Proof of non-termination is aborted since the IRSProblem over-approximates
----------------------------------------

(30)
MAYBE
Graph finished, checking  consistency
Graph finished, checked consistency, took 0.001s
