MAYBE
proof of /hpcwork/ff862203/termcomp25/benchmarks/jE7hu.c
# AProVE Commit ID: 48c83ccb80d5f8312cb92f4aa1b51dc35e247e65 nils 20241118 unpublished


Termination of the given C Problem could not be shown:

(0) C Problem
(1) CToLLVMProof [EQUIVALENT, 29 ms]
(2) LLVM problem
(3) LLVMToTerminationGraphProof [EQUIVALENT, 344 ms]
(4) LLVM Symbolic Execution Graph
(5) SymbolicExecutionGraphToSCCProof [SOUND, 0 ms]
(6) LLVM Symbolic Execution SCC
    (7) SCC2IRS [SOUND, 28 ms]
    (8) IntTRS
        (9) IntTRSPeriodicNontermProof [COMPLETE, 3 ms]
        (10) NO
    (11) SCC2IRS [SOUND, 0 ms]
    (12) IntTRS
        (13) IntTRSCompressionProof [EQUIVALENT, 0 ms]
        (14) IntTRS
        (15) IntTRSPeriodicNontermProof [COMPLETE, 9 ms]
        (16) NO
(17) SEGraph to IRS [SOUND, 91 ms]
(18) IntTRS
    (19) IRSNoOverapproximation [EQUIVALENT, 0 ms]
    (20) MAYBE
(21) SEGraph to IRS [SOUND, 91 ms]
(22) IntTRS
    (23) IRSToKoat [EQUIVALENT, 0 ms]
    (24) Koat Problem
    (25) KoAT2 [EQUIVALENT, 1150 ms]
    (26) MAYBE


----------------------------------------

(0)
Obligation:
c file /hpcwork/ff862203/termcomp25/benchmarks/jE7hu.c
----------------------------------------

(1) CToLLVMProof (EQUIVALENT)
Compiled c-file /hpcwork/ff862203/termcomp25/benchmarks/jE7hu.c to LLVM.
----------------------------------------

(2)
Obligation:
LLVM Problem

Aliases:

Data layout:

"e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

Machine:

"x86_64-pc-linux-gnu"

Type definitions:

Global variables:

Name: g initVal: 0 type: i32 addrSpace: null alignment: 4 threadLocal: false constant: false linkageType: COMMON section: null

Function declarations and definitions:

*BasicFunctionTypename: "llvm.dbg.declare" returnParam: BasicVoidType parameters: (BasicMetadataType, BasicMetadataType, BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_nondet_int" returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "llvm.dbg.label" returnParam: BasicVoidType parameters: (BasicMetadataType) variableLength: false visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "__VERIFIER_error" returnParam: BasicVoidType parameters: () variableLength: true visibilityType: DEFAULT callingConvention: ccc
*BasicFunctionTypename: "A" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: (0 i32, 1 i32) variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 12
	0:
		%3 = alloca i32, align 4
		%4 = alloca i32, align 4
		%5 = alloca i32, align 4
		store %0, %4
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %4)
		store %1, %5
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %5)
		%6 = load %4
		%7 = icmp ne %6 0
		br %7, %8, %12
	8:
		%9 = load %5
		%10 = load %4
		%11 = call i32 @A(i32 %9, i32 %10)
		br %14
	12:
		%13 = load %5
		store %13, @g
		br %14
	14:
		%15 = load %3
		ret %15

*BasicFunctionTypename: "main" linkageType: EXTERNALLY_VISIBLE returnParam: i32 parameters: () variableLength: false visibilityType: DEFAULT callingConvention: ccc debug line: 31
	0:
		%1 = alloca i32, align 4
		%2 = alloca i32, align 4
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %1)
		%3 = call i32 @__VERIFIER_nondet_int()
		store %3, %1
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.declare(*i32 %2)
		%4 = load %1
		%5 = icmp ne %4 0
		%6 = xor i1 %5, 1
		%7 = zext i1 %6 to i32
		store %7, %2
		%8 = load %1
		%9 = load %2
		%10 = call i32 @A(i32 %8, i32 %9)
		%11 = load %1
		%12 = load %2
		%13 = call i32 @A(i32 %11, i32 %12)
		%14 = load %1
		%15 = icmp ne %14 0
		br %15, %16, %18
	16:
		br %17
	17:
		Unnamed Call-Instruction = call BasicVoidType @llvm.dbg.label()
		Unnamed Call-Instruction = call BasicVoidType (...)* @__VERIFIER_error()
		unreachable
	18:
		ret 0


Analyze Termination of all function calls matching the pattern:
main()
----------------------------------------

(3) LLVMToTerminationGraphProof (EQUIVALENT)
Constructed symbolic execution graph for LLVM program.
----------------------------------------

(4)
Obligation:
Symbolic Execution Graph
----------------------------------------

(5) SymbolicExecutionGraphToSCCProof (SOUND)
Splitted symbolic execution graph to 1 SCC.
----------------------------------------

(6)
Obligation:
SCC
----------------------------------------

(7) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 16 rulesP rules:
f_228(v166, v167, v168, v171, v169, v172, v170, 3, 1, 4) -> f_230(v166, v167, v168, v171, v173, v169, v172, v174, v170, 3, 1, 4) :|: 1 <= v173 && v174 = 3 + v173 && 4 <= v174
f_230(v166, v167, v168, v171, v173, v169, v172, v174, v170, 3, 1, 4) -> f_231(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) :|: 1 <= v175 && v176 = 3 + v175 && 4 <= v176
f_231(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) -> f_232(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) :|: TRUE
f_232(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) -> f_233(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) :|: TRUE
f_233(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) -> f_234(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) :|: TRUE
f_234(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) -> f_235(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) :|: TRUE
f_235(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) -> f_236(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) :|: 0 = 0
f_236(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) -> f_237(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 0, 1, 4) :|: v167 != 0
f_237(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 0, 1, 4) -> f_239(v166, v167, v168, v171, v173, v175, 1, v169, v172, v174, v176, v170, 3, 0, 4) :|: 0 = 0
f_239(v166, v167, v168, v171, v173, v175, 1, v169, v172, v174, v176, v170, 3, 0, 4) -> f_241(v166, v167, v168, v171, v173, v175, 1, v169, v172, v174, v176, v170, 3, 0, 4) :|: TRUE
f_241(v166, v167, v168, v171, v173, v175, 1, v169, v172, v174, v176, v170, 3, 0, 4) -> f_243(v166, v167, v168, v171, v173, v175, 1, v169, v172, v174, v176, v170, 3, 0, 4) :|: 0 = 0
f_243(v166, v167, v168, v171, v173, v175, 1, v169, v172, v174, v176, v170, 3, 0, 4) -> f_245(v166, v167, v168, v171, v173, v175, 1, v169, v172, v174, v176, v170, 3, 0, 4) :|: 0 = 0
f_245(v166, v167, v168, v171, v173, v175, 1, v169, v172, v174, v176, v170, 3, 0, 4) -> f_247(v166, v168, v167, v169, v171, v172, v173, v174, v175, v176, v170, 1, 3, 0, 4) :|: 0 = 0
f_247(v166, v168, v167, v169, v171, v172, v173, v174, v175, v176, v170, 1, 3, 0, 4) -> f_249(v166, v168, v167, v169, v171, v172, v173, v174, v175, v176, v170, 3, 0, 1, 4) :|: TRUE
f_249(v166, v168, v167, v169, v171, v172, v173, v174, v175, v176, v170, 3, 0, 1, 4) -> f_226(v166, v168, v167, v169, v170, 3, 1, 4) :|: TRUE
f_226(v166, v167, v168, v169, v170, 3, 1, 4) -> f_228(v166, v167, v168, v171, v169, v172, v170, 3, 1, 4) :|: 1 <= v171 && v172 = 3 + v171 && 4 <= v172
Combined rules. Obtained 2 rulesP rules:
f_228(v166:0, v167:0, v168:0, v171:0, v169:0, v172:0, v170:0, 3, 1, 4) -> f_228(v166:0, v168:0, v167:0, v171:1, v169:0, 3 + v171:1, v170:0, 3, 1, 4) :|: v175:0 > 0 && v173:0 > 0 && v167:0 < 0 && v171:1 > 0
f_228(v166:0, v167:0, v168:0, v171:0, v169:0, v172:0, v170:0, 3, 1, 4) -> f_228(v166:0, v168:0, v167:0, v171:1, v169:0, 3 + v171:1, v170:0, 3, 1, 4) :|: v175:0 > 0 && v173:0 > 0 && v167:0 > 0 && v171:1 > 0
Filtered unneeded arguments:
   f_228(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f_228(x2, x3)
Removed division, modulo operations, cleaned up constraints. Obtained 2 rules.P rules:
f_228(v167:0, v168:0) -> f_228(v168:0, v167:0) :|: v167:0 < 0
f_228(v167:0, v168:0) -> f_228(v168:0, v167:0) :|: v167:0 > 0

----------------------------------------

(8)
Obligation:
Rules:
f_228(v167:0, v168:0) -> f_228(v168:0, v167:0) :|: v167:0 < 0
f_228(x, x1) -> f_228(x1, x) :|: x > 0

----------------------------------------

(9) IntTRSPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, v167:0, v168:0) -> f(1, v168:0, v167:0) :|: pc = 1 && v167:0 < 0
f(pc, x, x1) -> f(1, x1, x) :|: pc = 1 && x > 0
Witness term starting non-terminating reduction: f(1, 4, 4)
----------------------------------------

(10)
NO

----------------------------------------

(11) SCC2IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 16 rulesP rules:
f_228(v166, v167, v168, v171, v169, v172, v170, 3, 1, 4) -> f_230(v166, v167, v168, v171, v173, v169, v172, v174, v170, 3, 1, 4) :|: 1 <= v173 && v174 = 3 + v173 && 4 <= v174
f_230(v166, v167, v168, v171, v173, v169, v172, v174, v170, 3, 1, 4) -> f_231(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) :|: 1 <= v175 && v176 = 3 + v175 && 4 <= v176
f_231(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) -> f_232(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) :|: TRUE
f_232(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) -> f_233(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) :|: TRUE
f_233(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) -> f_234(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) :|: TRUE
f_234(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) -> f_235(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) :|: TRUE
f_235(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) -> f_236(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) :|: 0 = 0
f_236(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) -> f_237(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 0, 1, 4) :|: v167 != 0
f_237(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 0, 1, 4) -> f_239(v166, v167, v168, v171, v173, v175, 1, v169, v172, v174, v176, v170, 3, 0, 4) :|: 0 = 0
f_239(v166, v167, v168, v171, v173, v175, 1, v169, v172, v174, v176, v170, 3, 0, 4) -> f_241(v166, v167, v168, v171, v173, v175, 1, v169, v172, v174, v176, v170, 3, 0, 4) :|: TRUE
f_241(v166, v167, v168, v171, v173, v175, 1, v169, v172, v174, v176, v170, 3, 0, 4) -> f_243(v166, v167, v168, v171, v173, v175, 1, v169, v172, v174, v176, v170, 3, 0, 4) :|: 0 = 0
f_243(v166, v167, v168, v171, v173, v175, 1, v169, v172, v174, v176, v170, 3, 0, 4) -> f_245(v166, v167, v168, v171, v173, v175, 1, v169, v172, v174, v176, v170, 3, 0, 4) :|: 0 = 0
f_245(v166, v167, v168, v171, v173, v175, 1, v169, v172, v174, v176, v170, 3, 0, 4) -> f_247(v166, v168, v167, v169, v171, v172, v173, v174, v175, v176, v170, 1, 3, 0, 4) :|: 0 = 0
f_247(v166, v168, v167, v169, v171, v172, v173, v174, v175, v176, v170, 1, 3, 0, 4) -> f_249(v166, v168, v167, v169, v171, v172, v173, v174, v175, v176, v170, 3, 0, 1, 4) :|: TRUE
f_249(v166, v168, v167, v169, v171, v172, v173, v174, v175, v176, v170, 3, 0, 1, 4) -> f_226(v166, v168, v167, v169, v170, 3, 1, 4) :|: 1 <= v166 && 4 <= v169 && v166 <= v169
f_226(v166, v167, v168, v169, v170, 3, 1, 4) -> f_228(v166, v167, v168, v171, v169, v172, v170, 3, 1, 4) :|: 1 <= v171 && v172 = 3 + v171 && 4 <= v172
Combined rules. Obtained 2 rulesP rules:
f_228(v166:0, v167:0, v168:0, v171:0, v169:0, v172:0, v170:0, 3, 1, 4) -> f_228(v166:0, v168:0, v167:0, v171:1, v169:0, 3 + v171:1, v170:0, 3, 1, 4) :|: v175:0 > 0 && v173:0 > 0 && v167:0 < 0 && v169:0 > 3 && v166:0 > 0 && v171:1 > 0 && v169:0 >= v166:0
f_228(v166:0, v167:0, v168:0, v171:0, v169:0, v172:0, v170:0, 3, 1, 4) -> f_228(v166:0, v168:0, v167:0, v171:1, v169:0, 3 + v171:1, v170:0, 3, 1, 4) :|: v175:0 > 0 && v173:0 > 0 && v167:0 > 0 && v169:0 > 3 && v166:0 > 0 && v171:1 > 0 && v169:0 >= v166:0
Filtered unneeded arguments:
   f_228(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10) -> f_228(x1, x2, x3, x5)
Removed division, modulo operations, cleaned up constraints. Obtained 2 rules.P rules:
f_228(v166:0, v167:0, v168:0, v169:0) -> f_228(v166:0, v168:0, v167:0, v169:0) :|: v169:0 > 3 && v167:0 < 0 && v169:0 >= v166:0 && v166:0 > 0
f_228(v166:0, v167:0, v168:0, v169:0) -> f_228(v166:0, v168:0, v167:0, v169:0) :|: v169:0 > 3 && v167:0 > 0 && v169:0 >= v166:0 && v166:0 > 0

----------------------------------------

(12)
Obligation:
Rules:
f_228(v166:0, v167:0, v168:0, v169:0) -> f_228(v166:0, v168:0, v167:0, v169:0) :|: v169:0 > 3 && v167:0 < 0 && v169:0 >= v166:0 && v166:0 > 0
f_228(x, x1, x2, x3) -> f_228(x, x2, x1, x3) :|: x3 > 3 && x1 > 0 && x3 >= x && x > 0

----------------------------------------

(13) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(14)
Obligation:
Rules:
f_228(v166:0:0, v167:0:0, v168:0:0, v169:0:0) -> f_228(v166:0:0, v168:0:0, v167:0:0, v169:0:0) :|: v169:0:0 >= v166:0:0 && v166:0:0 > 0 && v167:0:0 < 0 && v169:0:0 > 3
f_228(x:0, x1:0, x2:0, x3:0) -> f_228(x:0, x2:0, x1:0, x3:0) :|: x:0 <= x3:0 && x:0 > 0 && x1:0 > 0 && x3:0 > 3

----------------------------------------

(15) IntTRSPeriodicNontermProof (COMPLETE)
Normalized system to the following form:
f(pc, v166:0:0, v167:0:0, v168:0:0, v169:0:0) -> f(1, v166:0:0, v168:0:0, v167:0:0, v169:0:0) :|: pc = 1 && (v169:0:0 >= v166:0:0 && v166:0:0 > 0 && v167:0:0 < 0 && v169:0:0 > 3)
f(pc, x:0, x1:0, x2:0, x3:0) -> f(1, x:0, x2:0, x1:0, x3:0) :|: pc = 1 && (x:0 <= x3:0 && x:0 > 0 && x1:0 > 0 && x3:0 > 3)
Witness term starting non-terminating reduction: f(1, 4, 1, 1, 6)
----------------------------------------

(16)
NO

----------------------------------------

(17) SEGraph to IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 90 rulesP rules:
f_139(v1, v2, v3, 3, 1) -> f_140(v1, v5, v2, v6, v3, 3, 1, 4) :|: 1 <= v5 && v6 = 3 + v5 && 4 <= v2 && 4 <= v6
f_140(v1, v5, v2, v6, v3, 3, 1, 4) -> f_141(v1, v5, v7, v2, v6, v8, v3, 3, 1, 4) :|: 1 <= v7 && v8 = 3 + v7 && 4 <= v8
f_141(v1, v5, v7, v2, v6, v8, v3, 3, 1, 4) -> f_142(v1, v5, v7, v2, v6, v8, v3, 3, 1, 4) :|: TRUE
f_142(v1, v5, v7, v2, v6, v8, v3, 3, 1, 4) -> f_143(v1, v5, v7, v9, v2, v6, v8, v3, 3, 1, 4) :|: TRUE
f_143(v1, v5, v7, v9, v2, v6, v8, v3, 3, 1, 4) -> f_144(v1, v5, v7, v9, v2, v6, v8, v3, 3, 1, 4) :|: TRUE
f_144(v1, v5, v7, v9, v2, v6, v8, v3, 3, 1, 4) -> f_145(v1, v5, v7, v9, v2, v6, v8, v3, 3, 1, 4) :|: TRUE
f_145(v1, v5, v7, v9, v2, v6, v8, v3, 3, 1, 4) -> f_146(v1, v5, v7, v9, v2, v6, v8, v3, 3, 1, 4) :|: 0 = 0
f_146(v1, v5, v7, v9, v2, v6, v8, v3, 3, 1, 4) -> f_147(v1, v5, v7, v9, v2, v6, v8, v3, 3, 0, 1, 4) :|: v9 != 0
f_146(v1, v5, v7, v9, v2, v6, v8, v3, 3, 1, 4) -> f_148(v1, v5, v7, 0, v2, v6, v8, v3, 3, 1, 4) :|: v9 = 0
f_147(v1, v5, v7, v9, v2, v6, v8, v3, 3, 0, 1, 4) -> f_149(v1, v5, v7, v9, 1, v2, v6, v8, v3, 3, 0, 4) :|: 0 = 0
f_148(v1, v5, v7, 0, v2, v6, v8, v3, 3, 1, 4) -> f_150(v1, v5, v7, 0, v2, v6, v8, v3, 3, 1, 4) :|: 0 = 0
f_149(v1, v5, v7, v9, 1, v2, v6, v8, v3, 3, 0, 4) -> f_151(v1, v5, v7, v9, 1, 0, v2, v6, v8, v3, 3, 4) :|: 0 = 0
f_150(v1, v5, v7, 0, v2, v6, v8, v3, 3, 1, 4) -> f_152(v1, v5, v7, 0, 1, v2, v6, v8, v3, 3, 4) :|: 0 = 0
f_151(v1, v5, v7, v9, 1, 0, v2, v6, v8, v3, 3, 4) -> f_153(v1, v5, v7, v9, 1, 0, v2, v6, v8, v3, 3, 4) :|: 0 = 0
f_152(v1, v5, v7, 0, 1, v2, v6, v8, v3, 3, 4) -> f_154(v1, v5, v7, 0, 1, v2, v6, v8, v3, 3, 4) :|: 0 = 0
f_153(v1, v5, v7, v9, 1, 0, v2, v6, v8, v3, 3, 4) -> f_155(v1, v5, v7, v9, 1, 0, v2, v6, v8, v3, 3, 4) :|: TRUE
f_154(v1, v5, v7, 0, 1, v2, v6, v8, v3, 3, 4) -> f_156(v1, v5, v7, 0, 1, v2, v6, v8, v3, 3, 4) :|: TRUE
f_155(v1, v5, v7, v9, 1, 0, v2, v6, v8, v3, 3, 4) -> f_157(v1, v5, v7, v9, 1, 0, v2, v6, v8, v3, 3, 4) :|: 0 = 0
f_156(v1, v5, v7, 0, 1, v2, v6, v8, v3, 3, 4) -> f_158(v1, v5, v7, 0, 1, v2, v6, v8, v3, 3, 4) :|: 0 = 0
f_157(v1, v5, v7, v9, 1, 0, v2, v6, v8, v3, 3, 4) -> f_159(v1, v5, v7, v9, 1, 0, v2, v6, v8, v3, 3, 4) :|: 0 = 0
f_158(v1, v5, v7, 0, 1, v2, v6, v8, v3, 3, 4) -> f_160(v1, v5, v7, 0, 1, v2, v6, v8, v3, 3, 4) :|: 0 = 0
f_159(v1, v5, v7, v9, 1, 0, v2, v6, v8, v3, 3, 4) -> f_161(v1, v9, 0, v2, v5, v6, v7, v8, v3, 1, 3, 4) :|: 0 = 0
f_160(v1, v5, v7, 0, 1, v2, v6, v8, v3, 3, 4) -> f_162(v1, 0, 1, v2, v5, v6, v7, v8, v3, 3, 4) :|: 0 = 0
f_161(v1, v9, 0, v2, v5, v6, v7, v8, v3, 1, 3, 4) -> f_163(v1, v9, 0, v2, v5, v6, v7, v8, v3, 3, 1, 4) :|: TRUE
f_161(v1, v9, 0, v2, v5, v6, v7, v8, v3, 1, 3, 4) -> f_211(v31, 0, v33, v42, v44, v46, v51, v34, v35, v36, v37, v38, v43, v45, v47, v40, v41, 3, 1, 4) :|: TRUE
f_161(v1, v9, 0, v2, v5, v6, v7, v8, v3, 1, 3, 4) -> f_251(v166, 0, v168, v171, v173, v175, v180, v169, v172, v174, v176, 3, 1, 4) :|: TRUE
f_161(v1, v9, 0, v2, v5, v6, v7, v8, v3, 1, 3, 4) -> f_261(v1, v9, 0, v226, v2, v5, v6, v7, v8, 1, 3, 4) :|: TRUE
f_162(v1, 0, 1, v2, v5, v6, v7, v8, v3, 3, 4) -> f_164(v1, 0, 1, v2, v5, v6, v7, v8, v3, 3, 4) :|: TRUE
f_162(v1, 0, 1, v2, v5, v6, v7, v8, v3, 3, 4) -> f_222(v31, v32, 0, v42, v44, v46, 1, v101, v113, v34, v35, v36, v37, v38, v43, v45, v47, v40, v41, 3, 4) :|: TRUE
f_162(v1, 0, 1, v2, v5, v6, v7, v8, v3, 3, 4) -> f_252(v1, 0, 1, v202, v2, v5, v6, v7, v8, 3, 4) :|: TRUE
f_162(v1, 0, 1, v2, v5, v6, v7, v8, v3, 3, 4) -> f_262(v166, v167, 0, v171, v173, v175, 1, v212, v218, v169, v172, v174, v176, 3, 4) :|: TRUE
f_163(v1, v9, 0, v2, v5, v6, v7, v8, v3, 3, 1, 4) -> f_165(v1, v9, 0, v2, v5, v6, v7, v8, v3, 3, 1, 0, 4) :|: TRUE
f_164(v1, 0, 1, v2, v5, v6, v7, v8, v3, 3, 4) -> f_165(v1, 0, 1, v2, v5, v6, v7, v8, v3, 3, 1, 0, 4) :|: TRUE
f_165(v11, v12, v13, v14, v15, v16, v17, v18, v19, 3, 1, 0, 4) -> f_188(v11, v12, v13, v14, v15, v16, v17, v18, v19, v12, v13, 3, 1, 4, 0) :|: TRUE
f_188(v31, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, 3, 1, 4, 0) -> f_226(v31, v32, v33, v34, v39, 3, 1, 4) :|: TRUE
f_226(v166, v167, v168, v169, v170, 3, 1, 4) -> f_228(v166, v167, v168, v171, v169, v172, v170, 3, 1, 4) :|: 1 <= v171 && v172 = 3 + v171 && 4 <= v172
f_228(v166, v167, v168, v171, v169, v172, v170, 3, 1, 4) -> f_230(v166, v167, v168, v171, v173, v169, v172, v174, v170, 3, 1, 4) :|: 1 <= v173 && v174 = 3 + v173 && 4 <= v174
f_230(v166, v167, v168, v171, v173, v169, v172, v174, v170, 3, 1, 4) -> f_231(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) :|: 1 <= v175 && v176 = 3 + v175 && 4 <= v176
f_231(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) -> f_232(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) :|: TRUE
f_232(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) -> f_233(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) :|: TRUE
f_233(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) -> f_234(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) :|: TRUE
f_234(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) -> f_235(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) :|: TRUE
f_235(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) -> f_236(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) :|: 0 = 0
f_236(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) -> f_237(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 0, 1, 4) :|: v167 != 0
f_236(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) -> f_238(v166, 0, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) :|: v167 = 0
f_237(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 0, 1, 4) -> f_239(v166, v167, v168, v171, v173, v175, 1, v169, v172, v174, v176, v170, 3, 0, 4) :|: 0 = 0
f_238(v166, 0, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) -> f_240(v166, 0, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) :|: 0 = 0
f_239(v166, v167, v168, v171, v173, v175, 1, v169, v172, v174, v176, v170, 3, 0, 4) -> f_241(v166, v167, v168, v171, v173, v175, 1, v169, v172, v174, v176, v170, 3, 0, 4) :|: TRUE
f_240(v166, 0, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) -> f_242(v166, 0, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) :|: TRUE
f_241(v166, v167, v168, v171, v173, v175, 1, v169, v172, v174, v176, v170, 3, 0, 4) -> f_243(v166, v167, v168, v171, v173, v175, 1, v169, v172, v174, v176, v170, 3, 0, 4) :|: 0 = 0
f_242(v166, 0, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) -> f_244(v166, 0, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) :|: 0 = 0
f_243(v166, v167, v168, v171, v173, v175, 1, v169, v172, v174, v176, v170, 3, 0, 4) -> f_245(v166, v167, v168, v171, v173, v175, 1, v169, v172, v174, v176, v170, 3, 0, 4) :|: 0 = 0
f_244(v166, 0, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) -> f_246(v166, 0, v168, v171, v173, v175, v169, v172, v174, v176, 3, 1, 4) :|: TRUE
f_245(v166, v167, v168, v171, v173, v175, 1, v169, v172, v174, v176, v170, 3, 0, 4) -> f_247(v166, v168, v167, v169, v171, v172, v173, v174, v175, v176, v170, 1, 3, 0, 4) :|: 0 = 0
f_246(v166, 0, v168, v171, v173, v175, v169, v172, v174, v176, 3, 1, 4) -> f_248(v166, 0, v168, v171, v173, v175, v169, v172, v174, v176, 3, 1, 4) :|: TRUE
f_247(v166, v168, v167, v169, v171, v172, v173, v174, v175, v176, v170, 1, 3, 0, 4) -> f_249(v166, v168, v167, v169, v171, v172, v173, v174, v175, v176, v170, 3, 0, 1, 4) :|: TRUE
f_247(v166, v168, v167, v169, v171, v172, v173, v174, v175, v176, v170, 1, 3, 0, 4) -> f_253(v166, 0, v167, v212, v169, v171, v172, v173, v174, v175, v176, 1, 3, 4) :|: TRUE
f_247(v166, v168, v167, v169, v171, v172, v173, v174, v175, v176, v170, 1, 3, 0, 4) -> f_263(v166, v167, 0, v171, v173, v175, 1, v212, v218, v169, v172, v174, v176, 3, 4) :|: TRUE
f_248(v166, 0, v168, v171, v173, v175, v169, v172, v174, v176, 3, 1, 4) -> f_250(v166, 0, v168, v171, v173, v175, v180, v169, v172, v174, v176, 3, 1, 4) :|: TRUE
f_249(v166, v168, v167, v169, v171, v172, v173, v174, v175, v176, v170, 3, 0, 1, 4) -> f_226(v166, v168, v167, v169, v170, 3, 1, 4) :|: TRUE
f_252(v1, 0, 1, v202, v2, v5, v6, v7, v8, 3, 4) -> f_254(v1, v5, v7, 0, 1, v202, v2, v6, v8, 3, 4) :|: 0 = 0
f_253(v166, 0, v167, v212, v169, v171, v172, v173, v174, v175, v176, 1, 3, 4) -> f_255(v166, v167, 0, v171, v173, v175, 1, v212, v169, v172, v174, v176, 3, 4) :|: 0 = 0
f_254(v1, v5, v7, 0, 1, v202, v2, v6, v8, 3, 4) -> f_256(v1, v5, v7, 0, 1, v202, v2, v6, v8, 3, 4) :|: 0 = 0
f_255(v166, v167, 0, v171, v173, v175, 1, v212, v169, v172, v174, v176, 3, 4) -> f_257(v166, v167, 0, v171, v173, v175, 1, v212, v169, v172, v174, v176, 3, 4) :|: TRUE
f_256(v1, v5, v7, 0, 1, v202, v2, v6, v8, 3, 4) -> f_258(v1, v5, v7, 0, 1, v202, v2, v6, v8, 3, 4) :|: 0 = 0
f_257(v166, v167, 0, v171, v173, v175, 1, v212, v169, v172, v174, v176, 3, 4) -> f_259(v166, v167, 0, v171, v173, v175, 1, v212, v218, v169, v172, v174, v176, 3, 4) :|: TRUE
f_258(v1, v5, v7, 0, 1, v202, v2, v6, v8, 3, 4) -> f_260(v1, 0, 1, v2, v5, v6, v7, v8, v202, 3, 4) :|: 0 = 0
f_260(v1, 0, 1, v2, v5, v6, v7, v8, v202, 3, 4) -> f_264(v1, 0, 1, v2, v5, v6, v7, v8, 3, 4) :|: TRUE
f_260(v1, 0, 1, v2, v5, v6, v7, v8, v202, 3, 4) -> f_267(v1, 0, 1, v263, v2, v5, v6, v7, v8, v202, 3, 4) :|: TRUE
f_260(v1, 0, 1, v2, v5, v6, v7, v8, v202, 3, 4) -> f_268(v166, v167, 0, v171, v173, v175, 1, v212, v218, v169, v172, v174, v176, 3, 4) :|: TRUE
f_261(v1, v9, 0, v226, v2, v5, v6, v7, v8, 1, 3, 4) -> f_265(v1, v5, v7, v9, 1, 0, v226, v2, v6, v8, 3, 4) :|: 0 = 0
f_264(v1, 0, 1, v2, v5, v6, v7, v8, 3, 4) -> f_226(v1, 0, 1, v2, 1, 3, 1, 4) :|: TRUE
f_265(v1, v5, v7, v9, 1, 0, v226, v2, v6, v8, 3, 4) -> f_266(v1, v5, v7, v9, 1, 0, v226, v2, v6, v8, 3, 4) :|: 0 = 0
f_266(v1, v5, v7, v9, 1, 0, v226, v2, v6, v8, 3, 4) -> f_269(v1, v5, v7, v9, 1, 0, v226, v2, v6, v8, 3, 4) :|: 0 = 0
f_267(v1, 0, 1, v263, v2, v5, v6, v7, v8, v202, 3, 4) -> f_270(v1, v5, v7, 0, 1, v202, v263, v2, v6, v8, 3, 4) :|: 0 = 0
f_269(v1, v5, v7, v9, 1, 0, v226, v2, v6, v8, 3, 4) -> f_271(v1, v9, 0, v2, v5, v6, v7, v8, 1, v226, 3, 4) :|: 0 = 0
f_270(v1, v5, v7, 0, 1, v202, v263, v2, v6, v8, 3, 4) -> f_272(v1, v5, v7, 0, 1, v202, v263, v2, v6, v8, 3, 4) :|: 0 = 0
f_271(v1, v9, 0, v2, v5, v6, v7, v8, 1, v226, 3, 4) -> f_273(v1, v9, 0, v2, v5, v6, v7, v8, 3, 1, 4) :|: TRUE
f_271(v1, v9, 0, v2, v5, v6, v7, v8, 1, v226, 3, 4) -> f_276(v166, 0, v168, v171, v173, v175, v180, v169, v172, v174, v176, 3, 1, 4) :|: TRUE
f_271(v1, v9, 0, v2, v5, v6, v7, v8, 1, v226, 3, 4) -> f_277(v1, v9, 0, v300, v2, v5, v6, v7, v8, 1, v226, 3, 4) :|: TRUE
f_272(v1, v5, v7, 0, 1, v202, v263, v2, v6, v8, 3, 4) -> f_274(v1, v5, v7, 0, 1, v202, v263, v2, v6, v8, 3, 4) :|: 0 = 0
f_273(v1, v9, 0, v2, v5, v6, v7, v8, 3, 1, 4) -> f_226(v1, v9, 0, v2, v9, 3, 1, 4) :|: TRUE
f_274(v1, v5, v7, 0, 1, v202, v263, v2, v6, v8, 3, 4) -> f_275(v1, v5, v7, 0, 1, v202, v263, v2, v6, v8, 3, 4) :|: TRUE
f_277(v1, v9, 0, v300, v2, v5, v6, v7, v8, 1, v226, 3, 4) -> f_278(v1, v5, v7, v9, 1, 0, v226, v300, v2, v6, v8, 3, 4) :|: 0 = 0
f_278(v1, v5, v7, v9, 1, 0, v226, v300, v2, v6, v8, 3, 4) -> f_279(v1, v5, v7, v9, 1, 0, v226, v300, v2, v6, v8, 3, 4) :|: 0 = 0
f_279(v1, v5, v7, v9, 1, 0, v226, v300, v2, v6, v8, 3, 4) -> f_280(v1, v5, v7, v9, 1, 0, v226, v300, v2, v6, v8, 3, 4) :|: 0 = 0
f_280(v1, v5, v7, v9, 1, 0, v226, v300, v2, v6, v8, 3, 4) -> f_281(v1, v5, v7, v9, 1, 0, v226, v300, v2, v6, v8, 3, 4) :|: TRUE
f_281(v1, v5, v7, v9, 1, 0, v226, v300, v2, v6, v8, 3, 4) -> f_282(v1, v5, v7, v9, 1, 0, v226, v300, v2, v6, v8, 3, 4) :|: TRUE
f_282(v1, v5, v7, v9, 1, 0, v226, v300, v2, v6, v8, 3, 4) -> f_283(v1, v5, v7, v9, 1, 0, v226, v300, v2, v6, v8, 3, 4) :|: TRUE
f_283(v1, v5, v7, v9, 1, 0, v226, v300, v2, v6, v8, 3, 4) -> f_284 :|: TRUE
Combined rules. Obtained 25 rulesP rules:
f_139(v1:0, v2:0, v3:0, 3, 1) -> f_236(v1:0, 0, 1, v171:0, v173:0, v175:0, v2:0, 3 + v171:0, 3 + v173:0, 3 + v175:0, v3:0, 3, 1, 4) :|: v5:0 > 0 && v7:0 > 0 && v2:0 > 3 && v171:0 > 0 && v173:0 > 0 && v175:0 > 0
f_236(v166:0, v167:0, v168:0, v171:0, v173:0, v175:0, v169:0, v172:0, v174:0, v176:0, v170:0, 3, 1, 4) -> f_263(v166:0, v167:0, 0, v171:0, v173:0, v175:0, 1, v212:0, v218:0, v169:0, v172:0, v174:0, v176:0, 3, 4) :|: v167:0 < 0
f_236(v166:0, v167:0, v168:0, v171:0, v173:0, v175:0, v169:0, v172:0, v174:0, v176:0, v170:0, 3, 1, 4) -> f_263(v166:0, v167:0, 0, v171:0, v173:0, v175:0, 1, v212:0, v218:0, v169:0, v172:0, v174:0, v176:0, 3, 4) :|: v167:0 > 0
f_236(v166:0, v167:0, v168:0, v171:0, v173:0, v175:0, v169:0, v172:0, v174:0, v176:0, v170:0, 3, 1, 4) -> f_236(v166:0, v168:0, v167:0, v171:1, v173:1, v175:1, v169:0, 3 + v171:1, 3 + v173:1, 3 + v175:1, v170:0, 3, 1, 4) :|: v171:1 > 0 && v173:1 > 0 && v175:1 > 0 && v167:0 < 0
f_236(v166:0, v167:0, v168:0, v171:0, v173:0, v175:0, v169:0, v172:0, v174:0, v176:0, v170:0, 3, 1, 4) -> f_236(v166:0, v168:0, v167:0, v171:1, v173:1, v175:1, v169:0, 3 + v171:1, 3 + v173:1, 3 + v175:1, v170:0, 3, 1, 4) :|: v171:1 > 0 && v173:1 > 0 && v175:1 > 0 && v167:0 > 0
f_139(v1:0, v2:0, v3:0, 3, 1) -> f_236(v1:0, v9:0, 0, v171:0, v173:0, v175:0, v2:0, 3 + v171:0, 3 + v173:0, 3 + v175:0, v9:0, 3, 1, 4) :|: v5:0 > 0 && v7:0 > 0 && v2:0 > 3 && v9:0 < 0 && v171:0 > 0 && v173:0 > 0 && v175:0 > 0
f_139(v1:0, v2:0, v3:0, 3, 1) -> f_236(v1:0, v9:0, 0, v171:0, v173:0, v175:0, v2:0, 3 + v171:0, 3 + v173:0, 3 + v175:0, v9:0, 3, 1, 4) :|: v5:0 > 0 && v7:0 > 0 && v2:0 > 3 && v9:0 > 0 && v171:0 > 0 && v173:0 > 0 && v175:0 > 0
f_139(v1:0, v2:0, v3:0, 3, 1) -> f_211(v31:0, 0, v33:0, v42:0, v44:0, v46:0, v51:0, v34:0, v35:0, v36:0, v37:0, v38:0, v43:0, v45:0, v47:0, v40:0, v41:0, 3, 1, 4) :|: v5:0 > 0 && v7:0 > 0 && v2:0 > 3 && v9:0 < 0
f_139(v1:0, v2:0, v3:0, 3, 1) -> f_211(v31:0, 0, v33:0, v42:0, v44:0, v46:0, v51:0, v34:0, v35:0, v36:0, v37:0, v38:0, v43:0, v45:0, v47:0, v40:0, v41:0, 3, 1, 4) :|: v5:0 > 0 && v7:0 > 0 && v2:0 > 3 && v9:0 > 0
f_236(v166:0, v167:0, v168:0, v171:0, v173:0, v175:0, v169:0, v172:0, v174:0, v176:0, v170:0, 3, 1, 4) -> f_259(v166:0, v167:0, 0, v171:0, v173:0, v175:0, 1, v212:0, v218:0, v169:0, v172:0, v174:0, v176:0, 3, 4) :|: v167:0 < 0
f_236(v166:0, v167:0, v168:0, v171:0, v173:0, v175:0, v169:0, v172:0, v174:0, v176:0, v170:0, 3, 1, 4) -> f_259(v166:0, v167:0, 0, v171:0, v173:0, v175:0, 1, v212:0, v218:0, v169:0, v172:0, v174:0, v176:0, 3, 4) :|: v167:0 > 0
f_139(v1:0, v2:0, v3:0, 3, 1) -> f_268(v166:0, v167:0, 0, v171:0, v173:0, v175:0, 1, v212:0, v218:0, v169:0, v172:0, v174:0, v176:0, 3, 4) :|: v5:0 > 0 && v7:0 > 0 && v2:0 > 3
f_139(v1:0, v2:0, v3:0, 3, 1) -> f_262(v166:0, v167:0, 0, v171:0, v173:0, v175:0, 1, v212:0, v218:0, v169:0, v172:0, v174:0, v176:0, 3, 4) :|: v5:0 > 0 && v7:0 > 0 && v2:0 > 3
f_139(v1:0, v2:0, v3:0, 3, 1) -> f_275(v1:0, v5:0, v7:0, 0, 1, v202:0, v263:0, v2:0, 3 + v5:0, 3 + v7:0, 3, 4) :|: v5:0 > 0 && v7:0 > 0 && v2:0 > 3
f_236(v166:0, 0, v168:0, v171:0, v173:0, v175:0, v169:0, v172:0, v174:0, v176:0, v170:0, 3, 1, 4) -> f_250(v166:0, 0, v168:0, v171:0, v173:0, v175:0, v180:0, v169:0, v172:0, v174:0, v176:0, 3, 1, 4) :|: TRUE
f_139(v1:0, v2:0, v3:0, 3, 1) -> f_276(v166:0, 0, v168:0, v171:0, v173:0, v175:0, v180:0, v169:0, v172:0, v174:0, v176:0, 3, 1, 4) :|: v5:0 > 0 && v7:0 > 0 && v2:0 > 3 && v9:0 < 0
f_139(v1:0, v2:0, v3:0, 3, 1) -> f_276(v166:0, 0, v168:0, v171:0, v173:0, v175:0, v180:0, v169:0, v172:0, v174:0, v176:0, 3, 1, 4) :|: v5:0 > 0 && v7:0 > 0 && v2:0 > 3 && v9:0 > 0
f_139(v1:0, v2:0, v3:0, 3, 1) -> f_251(v166:0, 0, v168:0, v171:0, v173:0, v175:0, v180:0, v169:0, v172:0, v174:0, v176:0, 3, 1, 4) :|: v5:0 > 0 && v7:0 > 0 && v2:0 > 3 && v9:0 < 0
f_139(v1:0, v2:0, v3:0, 3, 1) -> f_251(v166:0, 0, v168:0, v171:0, v173:0, v175:0, v180:0, v169:0, v172:0, v174:0, v176:0, 3, 1, 4) :|: v5:0 > 0 && v7:0 > 0 && v2:0 > 3 && v9:0 > 0
f_139(v1:0, v2:0, v3:0, 3, 1) -> f_284 :|: v5:0 > 0 && v7:0 > 0 && v2:0 > 3 && v9:0 < 0
f_139(v1:0, v2:0, v3:0, 3, 1) -> f_284 :|: v5:0 > 0 && v7:0 > 0 && v2:0 > 3 && v9:0 > 0
f_139(v1:0, v2:0, v3:0, 3, 1) -> f_236(v1:0, v9:0, 0, v171:0, v173:0, v175:0, v2:0, 3 + v171:0, 3 + v173:0, 3 + v175:0, v3:0, 3, 1, 4) :|: v5:0 > 0 && v7:0 > 0 && v2:0 > 3 && v9:0 < 0 && v171:0 > 0 && v173:0 > 0 && v175:0 > 0
f_139(v1:0, v2:0, v3:0, 3, 1) -> f_236(v1:0, v9:0, 0, v171:0, v173:0, v175:0, v2:0, 3 + v171:0, 3 + v173:0, 3 + v175:0, v3:0, 3, 1, 4) :|: v5:0 > 0 && v7:0 > 0 && v2:0 > 3 && v9:0 > 0 && v171:0 > 0 && v173:0 > 0 && v175:0 > 0
f_139(v1:0, v2:0, v3:0, 3, 1) -> f_222(v31:0, v32:0, 0, v42:0, v44:0, v46:0, 1, v101:0, v113:0, v34:0, v35:0, v36:0, v37:0, v38:0, v43:0, v45:0, v47:0, v40:0, v41:0, 3, 4) :|: v5:0 > 0 && v7:0 > 0 && v2:0 > 3
f_139(v1:0, v2:0, v3:0, 3, 1) -> f_236(v1:0, 0, 1, v171:0, v173:0, v175:0, v2:0, 3 + v171:0, 3 + v173:0, 3 + v175:0, 1, 3, 1, 4) :|: v5:0 > 0 && v7:0 > 0 && v2:0 > 3 && v171:0 > 0 && v173:0 > 0 && v175:0 > 0
Filtered unneeded arguments:
   f_236(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14) -> f_236(x2, x3)
Removed division, modulo operations, cleaned up constraints. Obtained 18 rules.P rules:
f_139(v1:0, v2:0, v3:0, cons_3, cons_1) -> f_236(0, 1) :|: v2:0 > 3 && cons_3 = 3 && cons_1 = 1
f_236(v167:0, v168:0) -> f_263(v166:0, v167:0, 0, v171:0, v173:0, v175:0, 1, v212:0, v218:0, v169:0, v172:0, v174:0, v176:0, 3, 4) :|: v167:0 < 0
f_236(v167:0, v168:0) -> f_263(v166:0, v167:0, 0, v171:0, v173:0, v175:0, 1, v212:0, v218:0, v169:0, v172:0, v174:0, v176:0, 3, 4) :|: v167:0 > 0
f_236(v167:0, v168:0) -> f_236(v168:0, v167:0) :|: v167:0 < 0
f_236(v167:0, v168:0) -> f_236(v168:0, v167:0) :|: v167:0 > 0
f_139(v1:0, v2:0, v3:0, cons_3, cons_1) -> f_236(v9:0, 0) :|: v2:0 > 3 && v9:0 < 0 && cons_3 = 3 && cons_1 = 1
f_139(v1:0, v2:0, v3:0, cons_3, cons_1) -> f_236(v9:0, 0) :|: v2:0 > 3 && v9:0 > 0 && cons_3 = 3 && cons_1 = 1
f_139(v1:0, v2:0, v3:0, cons_3, cons_1) -> f_211(v31:0, 0, v33:0, v42:0, v44:0, v46:0, v51:0, v34:0, v35:0, v36:0, v37:0, v38:0, v43:0, v45:0, v47:0, v40:0, v41:0, 3, 1, 4) :|: v2:0 > 3 && cons_3 = 3 && cons_1 = 1
f_236(v167:0, v168:0) -> f_259(v166:0, v167:0, 0, v171:0, v173:0, v175:0, 1, v212:0, v218:0, v169:0, v172:0, v174:0, v176:0, 3, 4) :|: v167:0 < 0
f_236(v167:0, v168:0) -> f_259(v166:0, v167:0, 0, v171:0, v173:0, v175:0, 1, v212:0, v218:0, v169:0, v172:0, v174:0, v176:0, 3, 4) :|: v167:0 > 0
f_139(v1:0, v2:0, v3:0, cons_3, cons_1) -> f_268(v166:0, v167:0, 0, v171:0, v173:0, v175:0, 1, v212:0, v218:0, v169:0, v172:0, v174:0, v176:0, 3, 4) :|: v2:0 > 3 && cons_3 = 3 && cons_1 = 1
f_139(v1:0, v2:0, v3:0, cons_3, cons_1) -> f_262(v166:0, v167:0, 0, v171:0, v173:0, v175:0, 1, v212:0, v218:0, v169:0, v172:0, v174:0, v176:0, 3, 4) :|: v2:0 > 3 && cons_3 = 3 && cons_1 = 1
f_139(v1:0, v2:0, v3:0, cons_3, cons_1) -> f_275(v1:0, v5:0, v7:0, 0, 1, v202:0, v263:0, v2:0, 3 + v5:0, 3 + v7:0, 3, 4) :|: v7:0 > 0 && v2:0 > 3 && v5:0 > 0 && cons_3 = 3 && cons_1 = 1
f_236(cons_0, v168:0) -> f_250(v166:0, 0, v168:0, v171:0, v173:0, v175:0, v180:0, v169:0, v172:0, v174:0, v176:0, 3, 1, 4) :|: TRUE && cons_0 = 0
f_139(v1:0, v2:0, v3:0, cons_3, cons_1) -> f_276(v166:0, 0, v168:0, v171:0, v173:0, v175:0, v180:0, v169:0, v172:0, v174:0, v176:0, 3, 1, 4) :|: v2:0 > 3 && cons_3 = 3 && cons_1 = 1
f_139(v1:0, v2:0, v3:0, cons_3, cons_1) -> f_251(v166:0, 0, v168:0, v171:0, v173:0, v175:0, v180:0, v169:0, v172:0, v174:0, v176:0, 3, 1, 4) :|: v2:0 > 3 && cons_3 = 3 && cons_1 = 1
f_139(v1:0, v2:0, v3:0, cons_3, cons_1) -> f_284 :|: v2:0 > 3 && cons_3 = 3 && cons_1 = 1
f_139(v1:0, v2:0, v3:0, cons_3, cons_1) -> f_222(v31:0, v32:0, 0, v42:0, v44:0, v46:0, 1, v101:0, v113:0, v34:0, v35:0, v36:0, v37:0, v38:0, v43:0, v45:0, v47:0, v40:0, v41:0, 3, 4) :|: v2:0 > 3 && cons_3 = 3 && cons_1 = 1

----------------------------------------

(18)
Obligation:
Rules:
f_139(v1:0, v2:0, v3:0, cons_3, cons_1) -> f_236(0, 1) :|: v2:0 > 3 && cons_3 = 3 && cons_1 = 1
f_236(v167:0, v168:0) -> f_263(v166:0, v167:0, 0, v171:0, v173:0, v175:0, 1, v212:0, v218:0, v169:0, v172:0, v174:0, v176:0, 3, 4) :|: v167:0 < 0
f_236(x, x1) -> f_263(x2, x, 0, x3, x4, x5, 1, x6, x7, x8, x9, x10, x11, 3, 4) :|: x > 0
f_236(x12, x13) -> f_236(x13, x12) :|: x12 < 0
f_236(x14, x15) -> f_236(x15, x14) :|: x14 > 0
f_139(x16, x17, x18, x19, x20) -> f_236(x21, 0) :|: x17 > 3 && x21 < 0 && x19 = 3 && x20 = 1
f_139(x22, x23, x24, x25, x26) -> f_236(x27, 0) :|: x23 > 3 && x27 > 0 && x25 = 3 && x26 = 1
f_139(x28, x29, x30, x31, x32) -> f_211(x33, 0, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, 3, 1, 4) :|: x29 > 3 && x31 = 3 && x32 = 1
f_236(x49, x50) -> f_259(x51, x49, 0, x52, x53, x54, 1, x55, x56, x57, x58, x59, x60, 3, 4) :|: x49 < 0
f_236(x61, x62) -> f_259(x63, x61, 0, x64, x65, x66, 1, x67, x68, x69, x70, x71, x72, 3, 4) :|: x61 > 0
f_139(x73, x74, x75, x76, x77) -> f_268(x78, x79, 0, x80, x81, x82, 1, x83, x84, x85, x86, x87, x88, 3, 4) :|: x74 > 3 && x76 = 3 && x77 = 1
f_139(x89, x90, x91, x92, x93) -> f_262(x94, x95, 0, x96, x97, x98, 1, x99, x100, x101, x102, x103, x104, 3, 4) :|: x90 > 3 && x92 = 3 && x93 = 1
f_139(x105, x106, x107, x108, x109) -> f_275(x105, x110, x111, 0, 1, x112, x113, x106, 3 + x110, 3 + x111, 3, 4) :|: x111 > 0 && x106 > 3 && x110 > 0 && x108 = 3 && x109 = 1
f_236(x114, x115) -> f_250(x116, 0, x115, x117, x118, x119, x120, x121, x122, x123, x124, 3, 1, 4) :|: TRUE && x114 = 0
f_139(x125, x126, x127, x128, x129) -> f_276(x130, 0, x131, x132, x133, x134, x135, x136, x137, x138, x139, 3, 1, 4) :|: x126 > 3 && x128 = 3 && x129 = 1
f_139(x140, x141, x142, x143, x144) -> f_251(x145, 0, x146, x147, x148, x149, x150, x151, x152, x153, x154, 3, 1, 4) :|: x141 > 3 && x143 = 3 && x144 = 1
f_139(x155, x156, x157, x158, x159) -> f_284 :|: x156 > 3 && x158 = 3 && x159 = 1
f_139(x160, x161, x162, x163, x164) -> f_222(x165, x166, 0, x167, x168, x169, 1, x170, x171, x172, x173, x174, x175, x176, x177, x178, x179, x180, x181, 3, 4) :|: x161 > 3 && x163 = 3 && x164 = 1
Start term: f_139(v1, v2, v3, 3, 1)

----------------------------------------

(19) IRSNoOverapproximation (EQUIVALENT)
Proof of non-termination is aborted since the IRSProblem over-approximates
----------------------------------------

(20)
MAYBE

----------------------------------------

(21) SEGraph to IRS (SOUND)
Transformed LLVM symbolic execution graph SCC into a rewrite problem. Log: 
Generated rules. Obtained 90 rulesP rules:
f_139(v1, v2, v3, 3, 1) -> f_140(v1, v5, v2, v6, v3, 3, 1, 4) :|: 1 <= v5 && v6 = 3 + v5 && 4 <= v2 && 4 <= v6
f_140(v1, v5, v2, v6, v3, 3, 1, 4) -> f_141(v1, v5, v7, v2, v6, v8, v3, 3, 1, 4) :|: 1 <= v7 && v8 = 3 + v7 && 4 <= v8
f_141(v1, v5, v7, v2, v6, v8, v3, 3, 1, 4) -> f_142(v1, v5, v7, v2, v6, v8, v3, 3, 1, 4) :|: TRUE
f_142(v1, v5, v7, v2, v6, v8, v3, 3, 1, 4) -> f_143(v1, v5, v7, v9, v2, v6, v8, v3, 3, 1, 4) :|: TRUE
f_143(v1, v5, v7, v9, v2, v6, v8, v3, 3, 1, 4) -> f_144(v1, v5, v7, v9, v2, v6, v8, v3, 3, 1, 4) :|: TRUE
f_144(v1, v5, v7, v9, v2, v6, v8, v3, 3, 1, 4) -> f_145(v1, v5, v7, v9, v2, v6, v8, v3, 3, 1, 4) :|: TRUE
f_145(v1, v5, v7, v9, v2, v6, v8, v3, 3, 1, 4) -> f_146(v1, v5, v7, v9, v2, v6, v8, v3, 3, 1, 4) :|: 0 = 0
f_146(v1, v5, v7, v9, v2, v6, v8, v3, 3, 1, 4) -> f_147(v1, v5, v7, v9, v2, v6, v8, v3, 3, 0, 1, 4) :|: v9 != 0
f_146(v1, v5, v7, v9, v2, v6, v8, v3, 3, 1, 4) -> f_148(v1, v5, v7, 0, v2, v6, v8, v3, 3, 1, 4) :|: v9 = 0
f_147(v1, v5, v7, v9, v2, v6, v8, v3, 3, 0, 1, 4) -> f_149(v1, v5, v7, v9, 1, v2, v6, v8, v3, 3, 0, 4) :|: 0 = 0
f_148(v1, v5, v7, 0, v2, v6, v8, v3, 3, 1, 4) -> f_150(v1, v5, v7, 0, v2, v6, v8, v3, 3, 1, 4) :|: 0 = 0
f_149(v1, v5, v7, v9, 1, v2, v6, v8, v3, 3, 0, 4) -> f_151(v1, v5, v7, v9, 1, 0, v2, v6, v8, v3, 3, 4) :|: 0 = 0
f_150(v1, v5, v7, 0, v2, v6, v8, v3, 3, 1, 4) -> f_152(v1, v5, v7, 0, 1, v2, v6, v8, v3, 3, 4) :|: 0 = 0
f_151(v1, v5, v7, v9, 1, 0, v2, v6, v8, v3, 3, 4) -> f_153(v1, v5, v7, v9, 1, 0, v2, v6, v8, v3, 3, 4) :|: 0 = 0
f_152(v1, v5, v7, 0, 1, v2, v6, v8, v3, 3, 4) -> f_154(v1, v5, v7, 0, 1, v2, v6, v8, v3, 3, 4) :|: 0 = 0
f_153(v1, v5, v7, v9, 1, 0, v2, v6, v8, v3, 3, 4) -> f_155(v1, v5, v7, v9, 1, 0, v2, v6, v8, v3, 3, 4) :|: TRUE
f_154(v1, v5, v7, 0, 1, v2, v6, v8, v3, 3, 4) -> f_156(v1, v5, v7, 0, 1, v2, v6, v8, v3, 3, 4) :|: TRUE
f_155(v1, v5, v7, v9, 1, 0, v2, v6, v8, v3, 3, 4) -> f_157(v1, v5, v7, v9, 1, 0, v2, v6, v8, v3, 3, 4) :|: 0 = 0
f_156(v1, v5, v7, 0, 1, v2, v6, v8, v3, 3, 4) -> f_158(v1, v5, v7, 0, 1, v2, v6, v8, v3, 3, 4) :|: 0 = 0
f_157(v1, v5, v7, v9, 1, 0, v2, v6, v8, v3, 3, 4) -> f_159(v1, v5, v7, v9, 1, 0, v2, v6, v8, v3, 3, 4) :|: 0 = 0
f_158(v1, v5, v7, 0, 1, v2, v6, v8, v3, 3, 4) -> f_160(v1, v5, v7, 0, 1, v2, v6, v8, v3, 3, 4) :|: 0 = 0
f_159(v1, v5, v7, v9, 1, 0, v2, v6, v8, v3, 3, 4) -> f_161(v1, v9, 0, v2, v5, v6, v7, v8, v3, 1, 3, 4) :|: 0 = 0
f_160(v1, v5, v7, 0, 1, v2, v6, v8, v3, 3, 4) -> f_162(v1, 0, 1, v2, v5, v6, v7, v8, v3, 3, 4) :|: 0 = 0
f_161(v1, v9, 0, v2, v5, v6, v7, v8, v3, 1, 3, 4) -> f_163(v1, v9, 0, v2, v5, v6, v7, v8, v3, 3, 1, 4) :|: TRUE
f_161(v1, v9, 0, v2, v5, v6, v7, v8, v3, 1, 3, 4) -> f_211(v31, 0, v33, v42, v44, v46, v51, v34, v35, v36, v37, v38, v43, v45, v47, v40, v41, 3, 1, 4) :|: TRUE
f_161(v1, v9, 0, v2, v5, v6, v7, v8, v3, 1, 3, 4) -> f_251(v166, 0, v168, v171, v173, v175, v180, v169, v172, v174, v176, 3, 1, 4) :|: TRUE
f_161(v1, v9, 0, v2, v5, v6, v7, v8, v3, 1, 3, 4) -> f_261(v1, v9, 0, v226, v2, v5, v6, v7, v8, 1, 3, 4) :|: TRUE
f_162(v1, 0, 1, v2, v5, v6, v7, v8, v3, 3, 4) -> f_164(v1, 0, 1, v2, v5, v6, v7, v8, v3, 3, 4) :|: TRUE
f_162(v1, 0, 1, v2, v5, v6, v7, v8, v3, 3, 4) -> f_222(v31, v32, 0, v42, v44, v46, 1, v101, v113, v34, v35, v36, v37, v38, v43, v45, v47, v40, v41, 3, 4) :|: TRUE
f_162(v1, 0, 1, v2, v5, v6, v7, v8, v3, 3, 4) -> f_252(v1, 0, 1, v202, v2, v5, v6, v7, v8, 3, 4) :|: TRUE
f_162(v1, 0, 1, v2, v5, v6, v7, v8, v3, 3, 4) -> f_262(v166, v167, 0, v171, v173, v175, 1, v212, v218, v169, v172, v174, v176, 3, 4) :|: TRUE
f_163(v1, v9, 0, v2, v5, v6, v7, v8, v3, 3, 1, 4) -> f_165(v1, v9, 0, v2, v5, v6, v7, v8, v3, 3, 1, 0, 4) :|: TRUE
f_164(v1, 0, 1, v2, v5, v6, v7, v8, v3, 3, 4) -> f_165(v1, 0, 1, v2, v5, v6, v7, v8, v3, 3, 1, 0, 4) :|: TRUE
f_165(v11, v12, v13, v14, v15, v16, v17, v18, v19, 3, 1, 0, 4) -> f_188(v11, v12, v13, v14, v15, v16, v17, v18, v19, v12, v13, 3, 1, 4, 0) :|: TRUE
f_188(v31, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, 3, 1, 4, 0) -> f_226(v31, v32, v33, v34, v39, 3, 1, 4) :|: TRUE
f_226(v166, v167, v168, v169, v170, 3, 1, 4) -> f_228(v166, v167, v168, v171, v169, v172, v170, 3, 1, 4) :|: 1 <= v171 && v172 = 3 + v171 && 4 <= v172
f_228(v166, v167, v168, v171, v169, v172, v170, 3, 1, 4) -> f_230(v166, v167, v168, v171, v173, v169, v172, v174, v170, 3, 1, 4) :|: 1 <= v173 && v174 = 3 + v173 && 4 <= v174
f_230(v166, v167, v168, v171, v173, v169, v172, v174, v170, 3, 1, 4) -> f_231(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) :|: 1 <= v175 && v176 = 3 + v175 && 4 <= v176
f_231(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) -> f_232(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) :|: TRUE
f_232(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) -> f_233(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) :|: TRUE
f_233(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) -> f_234(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) :|: TRUE
f_234(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) -> f_235(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) :|: TRUE
f_235(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) -> f_236(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) :|: 0 = 0
f_236(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) -> f_237(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 0, 1, 4) :|: v167 != 0
f_236(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) -> f_238(v166, 0, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) :|: v167 = 0
f_237(v166, v167, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 0, 1, 4) -> f_239(v166, v167, v168, v171, v173, v175, 1, v169, v172, v174, v176, v170, 3, 0, 4) :|: 0 = 0
f_238(v166, 0, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) -> f_240(v166, 0, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) :|: 0 = 0
f_239(v166, v167, v168, v171, v173, v175, 1, v169, v172, v174, v176, v170, 3, 0, 4) -> f_241(v166, v167, v168, v171, v173, v175, 1, v169, v172, v174, v176, v170, 3, 0, 4) :|: TRUE
f_240(v166, 0, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) -> f_242(v166, 0, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) :|: TRUE
f_241(v166, v167, v168, v171, v173, v175, 1, v169, v172, v174, v176, v170, 3, 0, 4) -> f_243(v166, v167, v168, v171, v173, v175, 1, v169, v172, v174, v176, v170, 3, 0, 4) :|: 0 = 0
f_242(v166, 0, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) -> f_244(v166, 0, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) :|: 0 = 0
f_243(v166, v167, v168, v171, v173, v175, 1, v169, v172, v174, v176, v170, 3, 0, 4) -> f_245(v166, v167, v168, v171, v173, v175, 1, v169, v172, v174, v176, v170, 3, 0, 4) :|: 0 = 0
f_244(v166, 0, v168, v171, v173, v175, v169, v172, v174, v176, v170, 3, 1, 4) -> f_246(v166, 0, v168, v171, v173, v175, v169, v172, v174, v176, 3, 1, 4) :|: TRUE
f_245(v166, v167, v168, v171, v173, v175, 1, v169, v172, v174, v176, v170, 3, 0, 4) -> f_247(v166, v168, v167, v169, v171, v172, v173, v174, v175, v176, v170, 1, 3, 0, 4) :|: 0 = 0
f_246(v166, 0, v168, v171, v173, v175, v169, v172, v174, v176, 3, 1, 4) -> f_248(v166, 0, v168, v171, v173, v175, v169, v172, v174, v176, 3, 1, 4) :|: TRUE
f_247(v166, v168, v167, v169, v171, v172, v173, v174, v175, v176, v170, 1, 3, 0, 4) -> f_249(v166, v168, v167, v169, v171, v172, v173, v174, v175, v176, v170, 3, 0, 1, 4) :|: TRUE
f_247(v166, v168, v167, v169, v171, v172, v173, v174, v175, v176, v170, 1, 3, 0, 4) -> f_253(v166, 0, v167, v212, v169, v171, v172, v173, v174, v175, v176, 1, 3, 4) :|: TRUE
f_247(v166, v168, v167, v169, v171, v172, v173, v174, v175, v176, v170, 1, 3, 0, 4) -> f_263(v166, v167, 0, v171, v173, v175, 1, v212, v218, v169, v172, v174, v176, 3, 4) :|: TRUE
f_248(v166, 0, v168, v171, v173, v175, v169, v172, v174, v176, 3, 1, 4) -> f_250(v166, 0, v168, v171, v173, v175, v180, v169, v172, v174, v176, 3, 1, 4) :|: TRUE
f_249(v166, v168, v167, v169, v171, v172, v173, v174, v175, v176, v170, 3, 0, 1, 4) -> f_226(v166, v168, v167, v169, v170, 3, 1, 4) :|: TRUE
f_252(v1, 0, 1, v202, v2, v5, v6, v7, v8, 3, 4) -> f_254(v1, v5, v7, 0, 1, v202, v2, v6, v8, 3, 4) :|: 0 = 0
f_253(v166, 0, v167, v212, v169, v171, v172, v173, v174, v175, v176, 1, 3, 4) -> f_255(v166, v167, 0, v171, v173, v175, 1, v212, v169, v172, v174, v176, 3, 4) :|: 0 = 0
f_254(v1, v5, v7, 0, 1, v202, v2, v6, v8, 3, 4) -> f_256(v1, v5, v7, 0, 1, v202, v2, v6, v8, 3, 4) :|: 0 = 0
f_255(v166, v167, 0, v171, v173, v175, 1, v212, v169, v172, v174, v176, 3, 4) -> f_257(v166, v167, 0, v171, v173, v175, 1, v212, v169, v172, v174, v176, 3, 4) :|: TRUE
f_256(v1, v5, v7, 0, 1, v202, v2, v6, v8, 3, 4) -> f_258(v1, v5, v7, 0, 1, v202, v2, v6, v8, 3, 4) :|: 0 = 0
f_257(v166, v167, 0, v171, v173, v175, 1, v212, v169, v172, v174, v176, 3, 4) -> f_259(v166, v167, 0, v171, v173, v175, 1, v212, v218, v169, v172, v174, v176, 3, 4) :|: TRUE
f_258(v1, v5, v7, 0, 1, v202, v2, v6, v8, 3, 4) -> f_260(v1, 0, 1, v2, v5, v6, v7, v8, v202, 3, 4) :|: 0 = 0
f_260(v1, 0, 1, v2, v5, v6, v7, v8, v202, 3, 4) -> f_264(v1, 0, 1, v2, v5, v6, v7, v8, 3, 4) :|: TRUE
f_260(v1, 0, 1, v2, v5, v6, v7, v8, v202, 3, 4) -> f_267(v1, 0, 1, v263, v2, v5, v6, v7, v8, v202, 3, 4) :|: TRUE
f_260(v1, 0, 1, v2, v5, v6, v7, v8, v202, 3, 4) -> f_268(v166, v167, 0, v171, v173, v175, 1, v212, v218, v169, v172, v174, v176, 3, 4) :|: TRUE
f_261(v1, v9, 0, v226, v2, v5, v6, v7, v8, 1, 3, 4) -> f_265(v1, v5, v7, v9, 1, 0, v226, v2, v6, v8, 3, 4) :|: 0 = 0
f_264(v1, 0, 1, v2, v5, v6, v7, v8, 3, 4) -> f_226(v1, 0, 1, v2, 1, 3, 1, 4) :|: TRUE
f_265(v1, v5, v7, v9, 1, 0, v226, v2, v6, v8, 3, 4) -> f_266(v1, v5, v7, v9, 1, 0, v226, v2, v6, v8, 3, 4) :|: 0 = 0
f_266(v1, v5, v7, v9, 1, 0, v226, v2, v6, v8, 3, 4) -> f_269(v1, v5, v7, v9, 1, 0, v226, v2, v6, v8, 3, 4) :|: 0 = 0
f_267(v1, 0, 1, v263, v2, v5, v6, v7, v8, v202, 3, 4) -> f_270(v1, v5, v7, 0, 1, v202, v263, v2, v6, v8, 3, 4) :|: 0 = 0
f_269(v1, v5, v7, v9, 1, 0, v226, v2, v6, v8, 3, 4) -> f_271(v1, v9, 0, v2, v5, v6, v7, v8, 1, v226, 3, 4) :|: 0 = 0
f_270(v1, v5, v7, 0, 1, v202, v263, v2, v6, v8, 3, 4) -> f_272(v1, v5, v7, 0, 1, v202, v263, v2, v6, v8, 3, 4) :|: 0 = 0
f_271(v1, v9, 0, v2, v5, v6, v7, v8, 1, v226, 3, 4) -> f_273(v1, v9, 0, v2, v5, v6, v7, v8, 3, 1, 4) :|: TRUE
f_271(v1, v9, 0, v2, v5, v6, v7, v8, 1, v226, 3, 4) -> f_276(v166, 0, v168, v171, v173, v175, v180, v169, v172, v174, v176, 3, 1, 4) :|: TRUE
f_271(v1, v9, 0, v2, v5, v6, v7, v8, 1, v226, 3, 4) -> f_277(v1, v9, 0, v300, v2, v5, v6, v7, v8, 1, v226, 3, 4) :|: TRUE
f_272(v1, v5, v7, 0, 1, v202, v263, v2, v6, v8, 3, 4) -> f_274(v1, v5, v7, 0, 1, v202, v263, v2, v6, v8, 3, 4) :|: 0 = 0
f_273(v1, v9, 0, v2, v5, v6, v7, v8, 3, 1, 4) -> f_226(v1, v9, 0, v2, v9, 3, 1, 4) :|: TRUE
f_274(v1, v5, v7, 0, 1, v202, v263, v2, v6, v8, 3, 4) -> f_275(v1, v5, v7, 0, 1, v202, v263, v2, v6, v8, 3, 4) :|: TRUE
f_277(v1, v9, 0, v300, v2, v5, v6, v7, v8, 1, v226, 3, 4) -> f_278(v1, v5, v7, v9, 1, 0, v226, v300, v2, v6, v8, 3, 4) :|: 0 = 0
f_278(v1, v5, v7, v9, 1, 0, v226, v300, v2, v6, v8, 3, 4) -> f_279(v1, v5, v7, v9, 1, 0, v226, v300, v2, v6, v8, 3, 4) :|: 0 = 0
f_279(v1, v5, v7, v9, 1, 0, v226, v300, v2, v6, v8, 3, 4) -> f_280(v1, v5, v7, v9, 1, 0, v226, v300, v2, v6, v8, 3, 4) :|: 0 = 0
f_280(v1, v5, v7, v9, 1, 0, v226, v300, v2, v6, v8, 3, 4) -> f_281(v1, v5, v7, v9, 1, 0, v226, v300, v2, v6, v8, 3, 4) :|: TRUE
f_281(v1, v5, v7, v9, 1, 0, v226, v300, v2, v6, v8, 3, 4) -> f_282(v1, v5, v7, v9, 1, 0, v226, v300, v2, v6, v8, 3, 4) :|: TRUE
f_282(v1, v5, v7, v9, 1, 0, v226, v300, v2, v6, v8, 3, 4) -> f_283(v1, v5, v7, v9, 1, 0, v226, v300, v2, v6, v8, 3, 4) :|: TRUE
f_283(v1, v5, v7, v9, 1, 0, v226, v300, v2, v6, v8, 3, 4) -> f_284 :|: TRUE
Combined rules. Obtained 25 rulesP rules:
f_139(v1:0, v2:0, v3:0, 3, 1) -> f_236(v1:0, 0, 1, v171:0, v173:0, v175:0, v2:0, 3 + v171:0, 3 + v173:0, 3 + v175:0, v3:0, 3, 1, 4) :|: v5:0 > 0 && v7:0 > 0 && v2:0 > 3 && v171:0 > 0 && v173:0 > 0 && v175:0 > 0
f_236(v166:0, v167:0, v168:0, v171:0, v173:0, v175:0, v169:0, v172:0, v174:0, v176:0, v170:0, 3, 1, 4) -> f_263(v166:0, v167:0, 0, v171:0, v173:0, v175:0, 1, v212:0, v218:0, v169:0, v172:0, v174:0, v176:0, 3, 4) :|: v167:0 < 0
f_236(v166:0, v167:0, v168:0, v171:0, v173:0, v175:0, v169:0, v172:0, v174:0, v176:0, v170:0, 3, 1, 4) -> f_263(v166:0, v167:0, 0, v171:0, v173:0, v175:0, 1, v212:0, v218:0, v169:0, v172:0, v174:0, v176:0, 3, 4) :|: v167:0 > 0
f_236(v166:0, v167:0, v168:0, v171:0, v173:0, v175:0, v169:0, v172:0, v174:0, v176:0, v170:0, 3, 1, 4) -> f_236(v166:0, v168:0, v167:0, v171:1, v173:1, v175:1, v169:0, 3 + v171:1, 3 + v173:1, 3 + v175:1, v170:0, 3, 1, 4) :|: v171:1 > 0 && v173:1 > 0 && v175:1 > 0 && v167:0 < 0
f_236(v166:0, v167:0, v168:0, v171:0, v173:0, v175:0, v169:0, v172:0, v174:0, v176:0, v170:0, 3, 1, 4) -> f_236(v166:0, v168:0, v167:0, v171:1, v173:1, v175:1, v169:0, 3 + v171:1, 3 + v173:1, 3 + v175:1, v170:0, 3, 1, 4) :|: v171:1 > 0 && v173:1 > 0 && v175:1 > 0 && v167:0 > 0
f_139(v1:0, v2:0, v3:0, 3, 1) -> f_236(v1:0, v9:0, 0, v171:0, v173:0, v175:0, v2:0, 3 + v171:0, 3 + v173:0, 3 + v175:0, v9:0, 3, 1, 4) :|: v5:0 > 0 && v7:0 > 0 && v2:0 > 3 && v9:0 < 0 && v171:0 > 0 && v173:0 > 0 && v175:0 > 0
f_139(v1:0, v2:0, v3:0, 3, 1) -> f_236(v1:0, v9:0, 0, v171:0, v173:0, v175:0, v2:0, 3 + v171:0, 3 + v173:0, 3 + v175:0, v9:0, 3, 1, 4) :|: v5:0 > 0 && v7:0 > 0 && v2:0 > 3 && v9:0 > 0 && v171:0 > 0 && v173:0 > 0 && v175:0 > 0
f_139(v1:0, v2:0, v3:0, 3, 1) -> f_211(v31:0, 0, v33:0, v42:0, v44:0, v46:0, v51:0, v34:0, v35:0, v36:0, v37:0, v38:0, v43:0, v45:0, v47:0, v40:0, v41:0, 3, 1, 4) :|: v5:0 > 0 && v7:0 > 0 && v2:0 > 3 && v9:0 < 0
f_139(v1:0, v2:0, v3:0, 3, 1) -> f_211(v31:0, 0, v33:0, v42:0, v44:0, v46:0, v51:0, v34:0, v35:0, v36:0, v37:0, v38:0, v43:0, v45:0, v47:0, v40:0, v41:0, 3, 1, 4) :|: v5:0 > 0 && v7:0 > 0 && v2:0 > 3 && v9:0 > 0
f_236(v166:0, v167:0, v168:0, v171:0, v173:0, v175:0, v169:0, v172:0, v174:0, v176:0, v170:0, 3, 1, 4) -> f_259(v166:0, v167:0, 0, v171:0, v173:0, v175:0, 1, v212:0, v218:0, v169:0, v172:0, v174:0, v176:0, 3, 4) :|: v167:0 < 0
f_236(v166:0, v167:0, v168:0, v171:0, v173:0, v175:0, v169:0, v172:0, v174:0, v176:0, v170:0, 3, 1, 4) -> f_259(v166:0, v167:0, 0, v171:0, v173:0, v175:0, 1, v212:0, v218:0, v169:0, v172:0, v174:0, v176:0, 3, 4) :|: v167:0 > 0
f_139(v1:0, v2:0, v3:0, 3, 1) -> f_268(v166:0, v167:0, 0, v171:0, v173:0, v175:0, 1, v212:0, v218:0, v169:0, v172:0, v174:0, v176:0, 3, 4) :|: v5:0 > 0 && v7:0 > 0 && v2:0 > 3
f_139(v1:0, v2:0, v3:0, 3, 1) -> f_262(v166:0, v167:0, 0, v171:0, v173:0, v175:0, 1, v212:0, v218:0, v169:0, v172:0, v174:0, v176:0, 3, 4) :|: v5:0 > 0 && v7:0 > 0 && v2:0 > 3
f_139(v1:0, v2:0, v3:0, 3, 1) -> f_275(v1:0, v5:0, v7:0, 0, 1, v202:0, v263:0, v2:0, 3 + v5:0, 3 + v7:0, 3, 4) :|: v5:0 > 0 && v7:0 > 0 && v2:0 > 3
f_236(v166:0, 0, v168:0, v171:0, v173:0, v175:0, v169:0, v172:0, v174:0, v176:0, v170:0, 3, 1, 4) -> f_250(v166:0, 0, v168:0, v171:0, v173:0, v175:0, v180:0, v169:0, v172:0, v174:0, v176:0, 3, 1, 4) :|: TRUE
f_139(v1:0, v2:0, v3:0, 3, 1) -> f_276(v166:0, 0, v168:0, v171:0, v173:0, v175:0, v180:0, v169:0, v172:0, v174:0, v176:0, 3, 1, 4) :|: v5:0 > 0 && v7:0 > 0 && v2:0 > 3 && v9:0 < 0
f_139(v1:0, v2:0, v3:0, 3, 1) -> f_276(v166:0, 0, v168:0, v171:0, v173:0, v175:0, v180:0, v169:0, v172:0, v174:0, v176:0, 3, 1, 4) :|: v5:0 > 0 && v7:0 > 0 && v2:0 > 3 && v9:0 > 0
f_139(v1:0, v2:0, v3:0, 3, 1) -> f_251(v166:0, 0, v168:0, v171:0, v173:0, v175:0, v180:0, v169:0, v172:0, v174:0, v176:0, 3, 1, 4) :|: v5:0 > 0 && v7:0 > 0 && v2:0 > 3 && v9:0 < 0
f_139(v1:0, v2:0, v3:0, 3, 1) -> f_251(v166:0, 0, v168:0, v171:0, v173:0, v175:0, v180:0, v169:0, v172:0, v174:0, v176:0, 3, 1, 4) :|: v5:0 > 0 && v7:0 > 0 && v2:0 > 3 && v9:0 > 0
f_139(v1:0, v2:0, v3:0, 3, 1) -> f_284 :|: v5:0 > 0 && v7:0 > 0 && v2:0 > 3 && v9:0 < 0
f_139(v1:0, v2:0, v3:0, 3, 1) -> f_284 :|: v5:0 > 0 && v7:0 > 0 && v2:0 > 3 && v9:0 > 0
f_139(v1:0, v2:0, v3:0, 3, 1) -> f_236(v1:0, v9:0, 0, v171:0, v173:0, v175:0, v2:0, 3 + v171:0, 3 + v173:0, 3 + v175:0, v3:0, 3, 1, 4) :|: v5:0 > 0 && v7:0 > 0 && v2:0 > 3 && v9:0 < 0 && v171:0 > 0 && v173:0 > 0 && v175:0 > 0
f_139(v1:0, v2:0, v3:0, 3, 1) -> f_236(v1:0, v9:0, 0, v171:0, v173:0, v175:0, v2:0, 3 + v171:0, 3 + v173:0, 3 + v175:0, v3:0, 3, 1, 4) :|: v5:0 > 0 && v7:0 > 0 && v2:0 > 3 && v9:0 > 0 && v171:0 > 0 && v173:0 > 0 && v175:0 > 0
f_139(v1:0, v2:0, v3:0, 3, 1) -> f_222(v31:0, v32:0, 0, v42:0, v44:0, v46:0, 1, v101:0, v113:0, v34:0, v35:0, v36:0, v37:0, v38:0, v43:0, v45:0, v47:0, v40:0, v41:0, 3, 4) :|: v5:0 > 0 && v7:0 > 0 && v2:0 > 3
f_139(v1:0, v2:0, v3:0, 3, 1) -> f_236(v1:0, 0, 1, v171:0, v173:0, v175:0, v2:0, 3 + v171:0, 3 + v173:0, 3 + v175:0, 1, 3, 1, 4) :|: v5:0 > 0 && v7:0 > 0 && v2:0 > 3 && v171:0 > 0 && v173:0 > 0 && v175:0 > 0
Filtered unneeded arguments:
   f_236(x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14) -> f_236(x2, x3)
Removed division, modulo operations, cleaned up constraints. Obtained 18 rules.P rules:
f_139(v1:0, v2:0, v3:0, cons_3, cons_1) -> f_236(0, 1) :|: v2:0 > 3 && cons_3 = 3 && cons_1 = 1
f_236(v167:0, v168:0) -> f_263(v166:0, v167:0, 0, v171:0, v173:0, v175:0, 1, v212:0, v218:0, v169:0, v172:0, v174:0, v176:0, 3, 4) :|: v167:0 < 0
f_236(v167:0, v168:0) -> f_263(v166:0, v167:0, 0, v171:0, v173:0, v175:0, 1, v212:0, v218:0, v169:0, v172:0, v174:0, v176:0, 3, 4) :|: v167:0 > 0
f_236(v167:0, v168:0) -> f_236(v168:0, v167:0) :|: v167:0 < 0
f_236(v167:0, v168:0) -> f_236(v168:0, v167:0) :|: v167:0 > 0
f_139(v1:0, v2:0, v3:0, cons_3, cons_1) -> f_236(v9:0, 0) :|: v2:0 > 3 && v9:0 < 0 && cons_3 = 3 && cons_1 = 1
f_139(v1:0, v2:0, v3:0, cons_3, cons_1) -> f_236(v9:0, 0) :|: v2:0 > 3 && v9:0 > 0 && cons_3 = 3 && cons_1 = 1
f_139(v1:0, v2:0, v3:0, cons_3, cons_1) -> f_211(v31:0, 0, v33:0, v42:0, v44:0, v46:0, v51:0, v34:0, v35:0, v36:0, v37:0, v38:0, v43:0, v45:0, v47:0, v40:0, v41:0, 3, 1, 4) :|: v2:0 > 3 && cons_3 = 3 && cons_1 = 1
f_236(v167:0, v168:0) -> f_259(v166:0, v167:0, 0, v171:0, v173:0, v175:0, 1, v212:0, v218:0, v169:0, v172:0, v174:0, v176:0, 3, 4) :|: v167:0 < 0
f_236(v167:0, v168:0) -> f_259(v166:0, v167:0, 0, v171:0, v173:0, v175:0, 1, v212:0, v218:0, v169:0, v172:0, v174:0, v176:0, 3, 4) :|: v167:0 > 0
f_139(v1:0, v2:0, v3:0, cons_3, cons_1) -> f_268(v166:0, v167:0, 0, v171:0, v173:0, v175:0, 1, v212:0, v218:0, v169:0, v172:0, v174:0, v176:0, 3, 4) :|: v2:0 > 3 && cons_3 = 3 && cons_1 = 1
f_139(v1:0, v2:0, v3:0, cons_3, cons_1) -> f_262(v166:0, v167:0, 0, v171:0, v173:0, v175:0, 1, v212:0, v218:0, v169:0, v172:0, v174:0, v176:0, 3, 4) :|: v2:0 > 3 && cons_3 = 3 && cons_1 = 1
f_139(v1:0, v2:0, v3:0, cons_3, cons_1) -> f_275(v1:0, v5:0, v7:0, 0, 1, v202:0, v263:0, v2:0, 3 + v5:0, 3 + v7:0, 3, 4) :|: v7:0 > 0 && v2:0 > 3 && v5:0 > 0 && cons_3 = 3 && cons_1 = 1
f_236(cons_0, v168:0) -> f_250(v166:0, 0, v168:0, v171:0, v173:0, v175:0, v180:0, v169:0, v172:0, v174:0, v176:0, 3, 1, 4) :|: TRUE && cons_0 = 0
f_139(v1:0, v2:0, v3:0, cons_3, cons_1) -> f_276(v166:0, 0, v168:0, v171:0, v173:0, v175:0, v180:0, v169:0, v172:0, v174:0, v176:0, 3, 1, 4) :|: v2:0 > 3 && cons_3 = 3 && cons_1 = 1
f_139(v1:0, v2:0, v3:0, cons_3, cons_1) -> f_251(v166:0, 0, v168:0, v171:0, v173:0, v175:0, v180:0, v169:0, v172:0, v174:0, v176:0, 3, 1, 4) :|: v2:0 > 3 && cons_3 = 3 && cons_1 = 1
f_139(v1:0, v2:0, v3:0, cons_3, cons_1) -> f_284 :|: v2:0 > 3 && cons_3 = 3 && cons_1 = 1
f_139(v1:0, v2:0, v3:0, cons_3, cons_1) -> f_222(v31:0, v32:0, 0, v42:0, v44:0, v46:0, 1, v101:0, v113:0, v34:0, v35:0, v36:0, v37:0, v38:0, v43:0, v45:0, v47:0, v40:0, v41:0, 3, 4) :|: v2:0 > 3 && cons_3 = 3 && cons_1 = 1

----------------------------------------

(22)
Obligation:
Rules:
f_139(v1:0, v2:0, v3:0, cons_3, cons_1) -> f_236(0, 1) :|: v2:0 > 3 && cons_3 = 3 && cons_1 = 1
f_236(v167:0, v168:0) -> f_263(v166:0, v167:0, 0, v171:0, v173:0, v175:0, 1, v212:0, v218:0, v169:0, v172:0, v174:0, v176:0, 3, 4) :|: v167:0 < 0
f_236(x, x1) -> f_263(x2, x, 0, x3, x4, x5, 1, x6, x7, x8, x9, x10, x11, 3, 4) :|: x > 0
f_236(x12, x13) -> f_236(x13, x12) :|: x12 < 0
f_236(x14, x15) -> f_236(x15, x14) :|: x14 > 0
f_139(x16, x17, x18, x19, x20) -> f_236(x21, 0) :|: x17 > 3 && x21 < 0 && x19 = 3 && x20 = 1
f_139(x22, x23, x24, x25, x26) -> f_236(x27, 0) :|: x23 > 3 && x27 > 0 && x25 = 3 && x26 = 1
f_139(x28, x29, x30, x31, x32) -> f_211(x33, 0, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, 3, 1, 4) :|: x29 > 3 && x31 = 3 && x32 = 1
f_236(x49, x50) -> f_259(x51, x49, 0, x52, x53, x54, 1, x55, x56, x57, x58, x59, x60, 3, 4) :|: x49 < 0
f_236(x61, x62) -> f_259(x63, x61, 0, x64, x65, x66, 1, x67, x68, x69, x70, x71, x72, 3, 4) :|: x61 > 0
f_139(x73, x74, x75, x76, x77) -> f_268(x78, x79, 0, x80, x81, x82, 1, x83, x84, x85, x86, x87, x88, 3, 4) :|: x74 > 3 && x76 = 3 && x77 = 1
f_139(x89, x90, x91, x92, x93) -> f_262(x94, x95, 0, x96, x97, x98, 1, x99, x100, x101, x102, x103, x104, 3, 4) :|: x90 > 3 && x92 = 3 && x93 = 1
f_139(x105, x106, x107, x108, x109) -> f_275(x105, x110, x111, 0, 1, x112, x113, x106, 3 + x110, 3 + x111, 3, 4) :|: x111 > 0 && x106 > 3 && x110 > 0 && x108 = 3 && x109 = 1
f_236(x114, x115) -> f_250(x116, 0, x115, x117, x118, x119, x120, x121, x122, x123, x124, 3, 1, 4) :|: TRUE && x114 = 0
f_139(x125, x126, x127, x128, x129) -> f_276(x130, 0, x131, x132, x133, x134, x135, x136, x137, x138, x139, 3, 1, 4) :|: x126 > 3 && x128 = 3 && x129 = 1
f_139(x140, x141, x142, x143, x144) -> f_251(x145, 0, x146, x147, x148, x149, x150, x151, x152, x153, x154, 3, 1, 4) :|: x141 > 3 && x143 = 3 && x144 = 1
f_139(x155, x156, x157, x158, x159) -> f_284 :|: x156 > 3 && x158 = 3 && x159 = 1
f_139(x160, x161, x162, x163, x164) -> f_222(x165, x166, 0, x167, x168, x169, 1, x170, x171, x172, x173, x174, x175, x176, x177, x178, x179, x180, x181, 3, 4) :|: x161 > 3 && x163 = 3 && x164 = 1
Start term: f_139(v1, v2, v3, 3, 1)

----------------------------------------

(23) IRSToKoat (EQUIVALENT)
Convert an IRS to a koat problem
----------------------------------------

(24)
Obligation:
(GOAL COMPLEXITY)
(STARTTERM (FUNCTIONSYMBOLS f_139))
(VAR x290 x160 x281 x280 x162 x283 x161 x282 x164 x285 x163 x284 x166 x287 x165 x286 x168 x289 x167 x288 x169 x270 x391 x390 x151 x272 x393 x150 x271 x392 x153 x274 x395 x152 x273 x394 x155 x276 x397 x154 x275 x396 x157 x278 x399 x156 x277 x398 x159 x158 x279 x380 x140 x261 x382 x260 x381 x142 x263 x384 x141 x262 x383 x144 x265 x386 x143 x264 x385 x146 x267 x388 x145 x266 x387 x148 x269 x147 x268 x389 x149 x250 x371 x370 x131 x252 x373 x130 x251 x372 x133 x254 x375 x132 x253 x374 x135 x256 x377 x134 x255 x376 x137 x258 x379 x136 x257 x378 x139 x138 x259 x193 x192 x195 x194 x197 x196 x199 x198 x'' k14 k15 k16 k17 k10 k11 k12 k13 x191 x190 x182 x181 x184 x183 x186 x185 x188 x187 x189 x180 x171 x292 x170 x291 x173 x294 x172 x293 x175 x296 x174 x295 x177 x298 x176 x297 x179 x178 x299 k36 k37 k38 k39 k32 k33 k34 k35 k30 k31 k29 k25 k26 k27 k28 k21 k22 k23 k24 k20 k18 k19 k58 k59 k54 k55 k56 k57 k50 k51 k52 k53 k47 k48 k49 k43 k44 k45 k46 k40 k41 k42 k76 k77 k78 k79 k72 k73 k74 k75 k70 k71 x k69 k65 k66 k67 k68 k61 k62 k63 k64 k60 k98 k99 k94 k95 k96 k97 k90 k91 k92 k93 x28 x29 x24 x25 x26 x27 x20 x21 x22 x23 k87 k88 k89 k83 k84 k85 k86 k80 k81 k82 x17 x18 x19 x13 x14 x15 x16 x10 x11 x12 x46 x47 x48 x49 x42 x43 x44 x45 x40 x41 x39 x35 x36 x37 x38 x31 x32 x33 x34 x30 x70 x68 x69 x64 x65 x66 x67 x60 x61 x62 x63 k7 k8 k5 k6 k9 k0 k3 k4 k1 k2 x57 x58 x59 x53 x54 x55 x56 x50 x51 x52 x407 x90 x406 x91 x409 x92 x408 k118 k117 k116 k115 k119 x86 k110 x87 x88 x401 x89 x400 x82 k114 x403 x83 k113 x402 x84 k112 x405 x85 x404 k111 x80 x81 k107 k106 k105 k104 x79 k109 k108 x75 x76 x77 x78 x71 k103 x72 k102 x73 k101 x74 k100 x97 x98 x99 x93 x94 x95 x96 x209 x208 x329 k150 k159 x320 x441 x440 k154 x201 x322 x443 k153 x200 x321 x442 k152 x203 x324 x445 k151 x202 x323 x444 x205 x326 x447 k158 x204 k157 x325 x446 k156 x207 x328 x449 k155 x206 x327 x448 x319 x318 x439 k149 k148 x430 k143 x311 x432 x310 k142 x431 x313 k141 x434 k140 x312 x433 k147 x315 x436 x314 k146 x435 x317 k145 x438 x316 k144 x437 x308 x429 x307 x428 x309 k139 k138 k137 x300 x421 k132 x420 k131 x302 x423 k130 x301 x422 k136 x304 x425 x303 k135 x424 x306 x427 k134 x305 x426 k133 x418 x417 x419 k129 k128 k127 k126 k121 x410 k120 x412 x411 k125 x414 k124 x413 k123 x416 k122 x415 k190 k194 k193 k192 k191 x360 x481 x480 x120 x241 x362 x483 x240 x361 x482 x122 x243 x364 x485 x121 x242 x363 x484 k198 x124 x245 x366 x487 k197 x123 x244 x365 x486 k196 x126 x247 x368 x489 x125 x246 k195 x367 x488 x128 x249 x127 x248 x369 x129 k183 k182 k181 k180 x470 x230 x351 x472 x350 x471 x111 x232 x353 x474 x110 x231 x352 x473 x113 x234 k187 x355 x476 x112 x233 k186 x354 x475 k185 x115 x236 x357 x478 x114 x235 k184 x356 x477 x117 x238 x359 x116 x237 x358 x479 x119 k189 x118 x239 k188 x109 k172 k171 k170 x4 x5 x2 x3 x8 x340 x461 x9 x460 x6 x100 x221 x342 x463 x7 x220 x341 x462 x102 k176 x223 x344 x465 x101 x222 k175 x343 x464 x104 x225 x346 k174 x467 k173 x103 x224 x345 x466 x106 x227 x348 x469 x1 x105 x226 x347 k179 x468 x108 k178 x229 x107 x228 k177 x349 x219 k161 k160 x' x450 x210 x331 x452 x330 x451 k165 x212 x333 x454 k164 x211 x332 x453 k163 x214 x335 x456 k162 x213 x334 x455 x216 x337 k169 x458 k168 x215 x336 x457 x218 x339 k167 k166 x217 x338 x459)
(RULES
  f_139(k42, k46, k44, k48, k47, x162, x163, x164, x165, x166, x167, x168, x169, x170, x171, x172, x173, x174, x175, x176, x177) -> f_251(k52, 0, k50, k56, k54, k59, k23, k22, k27, k25, k31, 3, 1, 4, x178, x179, x180, x181, x182, x183, x184) :|: k46 > 3 && k48 = 3 && k47 = 1
  f_139(k108, k109, k102, k103, k104, x249, x250, x251, x252, x253, x254, x255, x256, x257, x258, x259, x260, x261, x262, x263, x264) -> f_268(k105, k101, 0, k96, k97, k91, 1, k92, k94, k95, k87, k88, k89, 3, 4, x265, x266, x267, x268, x269, x270) :|: k109 > 3 && k103 = 3 && k104 = 1
  f_139(k195, k189, k190, k191, k175, x312, x313, x314, x315, x316, x317, x318, x319, x320, x321, x322, x323, x324, x325, x326, x327) -> f_236(k177, 0, x328, x329, x330, x331, x332, x333, x334, x335, x336, x337, x338, x339, x340, x341, x342, x343, x344, x345, x346) :|: k189 > 3 && k177 < 0 && k191 = 3 && k175 = 1
  f_236(k198, k192, x, x', x'', x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15, x16) -> f_236(k192, k198, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31, x32, x33, x34, x35) :|: k198 < 0
  f_139(k0, k2, k1, k6, k4, x271, x272, x273, x274, x275, x276, x277, x278, x279, x280, x281, x282, x283, x284, x285, x286) -> f_222(k10, k8, 0, k14, k12, k17, 1, k114, k113, k116, k115, k118, k117, k120, k119, k124, k122, k112, k110, 3, 4) :|: k2 > 3 && k6 = 3 && k4 = 1
  f_139(k62, k135, k161, k98, k99, x395, x396, x397, x398, x399, x400, x401, x402, x403, x404, x405, x406, x407, x408, x409, x410) -> f_236(0, 1, x411, x412, x413, x414, x415, x416, x417, x418, x419, x420, x421, x422, x423, x424, x425, x426, x427, x428, x429) :|: k135 > 3 && k98 = 3 && k99 = 1
  f_236(k193, k194, x87, x88, x89, x90, x91, x92, x93, x94, x95, x96, x97, x98, x99, x100, x101, x102, x103, x104, x105) -> f_236(k194, k193, x106, x107, x108, x109, x110, x111, x112, x113, x114, x115, x116, x117, x118, x119, x120, x121, x122, x123, x124) :|: k193 > 0
  f_236(k9, k80, x224, x225, x226, x227, x228, x229, x230, x231, x232, x233, x234, x235, x236, x237, x238, x239, x240, x241, x242) -> f_259(k82, k9, 0, k83, k70, k72, 1, k74, k76, k63, k65, k67, k57, 3, 4, x243, x244, x245, x246, x247, x248) :|: k9 < 0
  f_139(k179, k182, k167, k169, k171, x430, x431, x432, x433, x434, x435, x436, x437, x438, x439, x440, x441, x442, x443, x444, x445) -> f_236(k174, 0, x446, x447, x448, x449, x450, x451, x452, x453, x454, x455, x456, x457, x458, x459, x460, x461, x462, x463, x464) :|: k182 > 3 && k174 > 0 && k169 = 3 && k171 = 1
  f_236(k152, k151, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47, x48, x49, x50, x51, x52, x53, x54) -> f_250(k154, 0, k151, k153, k156, k155, k136, k138, k137, k140, k139, 3, 1, 4, x55, x56, x57, x58, x59, x60, x61) :|: 0 = 0 && k152 = 0
  f_139(k29, k35, k33, k39, k37, x125, x126, x127, x128, x129, x130, x131, x132, x133, x134, x135, x136, x137, x138, x139, x140) -> f_284(x141, x142, x143, x144, x145, x146, x147, x148, x149, x150, x151, x152, x153, x154, x155, x156, x157, x158, x159, x160, x161) :|: k35 > 3 && k39 = 3 && k37 = 1
  f_236(k58, k60, x347, x348, x349, x350, x351, x352, x353, x354, x355, x356, x357, x358, x359, x360, x361, x362, x363, x364, x365) -> f_259(k61, k58, 0, k49, k51, k53, 1, k55, k43, k45, k41, k106, k107, 3, 4, x366, x367, x368, x369, x370, x371) :|: k58 > 0
  f_139(k90, k84, k85, k86, k126, x202, x203, x204, x205, x206, x207, x208, x209, x210, x211, x212, x213, x214, x215, x216, x217) -> f_262(k127, k128, 0, k129, k121, k123, 1, k125, k172, k178, k176, k183, k180, 3, 4, x218, x219, x220, x221, x222, x223) :|: k84 > 3 && k86 = 3 && k126 = 1
  f_139(k186, k184, k188, k187, k157, x287, x288, x289, x290, x291, x292, x293, x294, x295, x296, x297, x298, x299, x300, x301, x302) -> f_275(k186, k148, k147, 0, 1, k150, k149, k184, 3 + k148, 3 + k147, 3, 4, x303, x304, x305, x306, x307, x308, x309, x310, x311) :|: k147 > 0 && k184 > 3 && k148 > 0 && k187 = 3 && k157 = 1
  f_236(k134, k158, x465, x466, x467, x468, x469, x470, x471, x472, x473, x474, x475, x476, x477, x478, x479, x480, x481, x482, x483) -> f_263(k79, k134, 0, k181, k133, k111, 1, k100, k132, k130, k131, k93, k18, 3, 4, x484, x485, x486, x487, x488, x489) :|: k134 < 0
  f_139(k142, k141, k145, k144, k146, x372, x373, x374, x375, x376, x377, x378, x379, x380, x381, x382, x383, x384, x385, x386, x387) -> f_276(k66, 0, k64, k69, k68, k73, k71, k77, k75, k81, k78, 3, 1, 4, x388, x389, x390, x391, x392, x393, x394) :|: k141 > 3 && k144 = 3 && k146 = 1
  f_236(k143, k185, x62, x63, x64, x65, x66, x67, x68, x69, x70, x71, x72, x73, x74, x75, x76, x77, x78, x79, x80) -> f_263(k164, k143, 0, k165, k159, k162, 1, k170, k173, k166, k168, k196, k197, 3, 4, x81, x82, x83, x84, x85, x86) :|: k143 > 0
  f_139(k160, k163, k40, k32, k34, x185, x186, x187, x188, x189, x190, x191, x192, x193, x194, x195, x196, x197, x198, x199, x200) -> f_211(k36, 0, k38, k24, k26, k28, k30, k21, k19, k20, k11, k13, k15, k16, k3, k5, k7, 3, 1, 4, x201) :|: k163 > 3 && k32 = 3 && k34 = 1
)

----------------------------------------

(25) KoAT2 (EQUIVALENT)
KoAT2 was called with the following command:

/aprove/bin/koat2 analyse --termination --cfr=pe -d5 --local=mprf,twn -rtermcomp -i /tmp/aprove.InputModules.Programs.koat2_2830747073190152034.koat 

KoAT2's output was:

MAYBE

----------------------------------------

(26)
MAYBE
/hpcwork/ff862203/termcomp25/benchmarks/jE7hu.c:22:1: warning: non-void function does not return a value [-Wreturn-type]
}
^
1 warning generated.

Graph finished, checking  consistency
Graph finished, checked consistency, took 0.001s
